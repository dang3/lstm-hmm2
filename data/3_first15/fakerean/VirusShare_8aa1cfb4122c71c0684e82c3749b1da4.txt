jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
push
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
or
jge
mov
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
xor
push
mov
test
je
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
cld
mov
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
inc
xchg
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
gs
add
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
ljmp
fidivs
push
or
adc
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
movsb
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
sub
and
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
imul
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
cld
movsl
inc
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
lods
test
mov
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
mov
and
rcr
loopne
fdecstp
les
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
loop
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
stos
inc
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
xchg
inc
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
mov
inc
and
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
rcrl
and
lea
mov
movl
movl
movb
mov
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rolb
add
push
add
mov
or
or
and
add
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
ljmp
push
call
mov
pop
jp
test
add
add
push
xchg
cld
add
mov
mov
fldl
fidivrs
push
aam
scas
mov
mov
push
flds
int
xchg
test
add
jbe
xlat
sti
jmp
add
test
add
add
add
add
hlt
insb
add
mov
in
add
add
les
add
cmp
mov
mov
add
ljmp
sahf
add
lahf
mov
mov
pop
std
jno
add
mov
insb
add
jecxz
divl
add
add
add
cld
pop
jle
test
add
jo
mov
add
fiaddl
add
rcll
mov
loope
add
cwtl
shrb
xlat
mov
notb
in
add
push
push
push
push
push
push
call
mov
cmc
add
roll
add
add
xchg
popl
add
add
add
add
rol
shll
mov
add
imul
add
pop
mov
add
into
test
mov
movsb
xchg
jne
fisttpll
add
sar
add
addb
cmpsl
mov
lea
pop
movl
popl
push
push
push
push
push
lea
push
push
push
push
call
pop
filds
pushf
lock
add
jp
stc
add
add
add
add
pop
push
fwait
xchg
xchg
push
mov
lcall
cwtl
mov
pushf
add
icebp
add
add
fdivs
mov
insb
pusha
movsl
in
push
add
pop
push
add
add
call
fildl
in
roll
cmpsb
push
stc
add
in
js
ficompl
add
test
data16
push
push
push
push
push
push
lea
push
call
int3
push
lahf
lret
xchg
loope
add
into
xchg
out
jle
add
int3
out
jnp
add
lret
add
fiaddl
ljmp
out
addr16
pop
add
push
jne
add
add
add
mov
fldz
imul
xchg
out
add
add
filds
add
lods
add
pop
push
push
push
push
call
pushf
xchg
add
in
add
xchg
push
mov
add
add
mov
add
imul
add
mov
add
add
add
mov
jno
lds
add
cwtl
shr
fbld
sarb
mov
test
fcmovb
pop
lahf
add
inc
jae
jle
mov
aam
bound
call
push
push
push
lea
push
lea
push
push
lea
push
push
call
cli
add
mov
jo
xchg
addr16
pop
xlat
ja
jmp
add
add
popa
add
add
add
mov
mov
xlat
xlat
add
add
add
hlt
add
add
add
xchg
lcall
xorb
loope
pusha
add
sahf
je
add
add
in
xchg
cld
add
test
loopne
add
loop
add
add
xchg
mov
lea
pop
call
push
call
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
ja
add
jb
mov
sbbb
add
add
add
pop
nop
mov
pop
add
add
int
pop
pop
jne
cwtl
add
add
ficoml
cmc
pop
out
mov
add
add
add
add
leave
jp
add
scas
test
cltd
mov
int3
lea
pop
jmp
push
push
push
push
lea
push
call
mov
addr16
mov
add
add
mov
add
lods
mov
add
mov
js
add
scas
jmp
add
fs
ja
add
add
pop
popf
int
add
add
in
icebp
add
mov
cmpsb
add
mov
lea
pop
ret
mov
mov
push
lea
push
push
call
add
rolb
jmp
mov
roll
hlt
add
mov
cli
hlt
add
jge
lahf
add
mov
push
fnstcw
ljmp
push
loop
push
out
pop
add
test
loopne
add
mov
add
std
add
add
add
add
aam
ja
add
mov
push
mov
add
fldl
cmc
add
mov
add
mov
cmc
mov
mov
lea
pop
add
add
add
push
push
push
push
push
lea
push
push
call
shlb
lock
stc
add
arpl
fwait
push
cmpsl
add
je
add
pop
lock
pop
add
pop
add
cmpsl
iret
add
leave
enter
lea
mov
add
add
xchg
xchg
add
add
xchg
test
int3
add
add
jbe
add
mov
mov
add
jbe
add
jmp
hlt
lea
pop
mov
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
addb
add
popa
out
add
push
movl
fdivrs
add
mov
pushf
mov
shrb
add
icebp
add
mov
add
add
fsts
loop
rcrb
pushf
popa
xlat
add
add
add
push
out
test
add
xchg
mov
imul
add
add
mov
add
arpl
add
call
mov
xor
push
push
not
lea
push
or
inc
add
dec
not
sub
xor
pop
rol
pop
push
push
call
add
add
in
add
lcall
add
lret
jnp
add
add
mov
call
add
test
add
out
bound
jns
add
add
add
add
add
add
add
add
fisubl
xchg
mov
les
jae
cltd
push
xchg
add
rolb
pop
std
jmp
mov
loope
add
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
jle
add
nop
add
add
mov
add
add
loop
outsl
add
jmp
add
add
jnp
leave
cltd
movsl
add
add
add
sarl
mov
out
je
ret
xchg
add
add
add
xchg
add
mov
add
mov
jnp
add
xchg
lret
ret
popa
add
movsb
pop
mov
std
push
mov
lea
pop
call
mov
movl
push
push
lea
push
push
push
push
push
lea
push
call
int3
add
ret
aam
mov
aad
fildl
add
add
sti
add
add
xorl
xlat
add
add
xchg
mov
cltd
stos
pushf
add
add
add
stc
cmc
ljmp
out
jns
out
add
je
push
mov
xor
push
scas
decb
addl
add
std
cmp
add
mov
mov
add
mov
lea
pop
lea
push
push
lea
push
call
filds
add
add
sti
ljmp
mov
fwait
mov
add
hlt
add
clc
add
scas
mov
add
add
add
rcrb
add
lods
les
loopne
ljmp
incb
pop
int3
add
add
add
cmc
jns
add
lea
pop
push
pushl
pushl
push
push
push
push
push
push
lea
push
call
xchg
add
insb
add
ljmp
fadds
addr16
xchg
rol
add
xchg
push
push
add
add
xchg
add
add
push
scas
push
add
shll
test
pop
mov
xchg
mov
out
jmp
add
popa
add
add
enter
add
jge
add
data16
call
pushl
pushl
push
push
push
push
push
push
push
call
xlat
iret
add
mov
lods
add
add
add
add
add
add
add
mov
cmpsb
add
mov
loop
rclb
add
popa
add
loopne
add
add
add
jo
iret
add
sahf
add
add
movb
clc
add
out
enter
fmull
sub
add
push
push
shl
add
not
push
or
not
add
add
shr
ror
sub
add
xor
lea
sub
pop
pop
push
push
call
xchg
roll
add
add
add
add
add
add
add
mov
cmc
ja
mov
add
in
add
aam
jecxz
mov
mov
add
stos
add
jae
into
pusha
stos
addl
jecxz
add
add
sahf
pop
add
add
add
jge
add
nop
xlat
mov
int
cli
adcb
jo
xchg
push
add
pop
pushl
push
push
push
push
push
push
lea
push
push
call
add
jnp
xchg
add
push
popa
js
idivl
pop
mov
push
xchg
add
lea
add
xorl
pop
arpl
lock
mov
out
add
add
xorb
pop
rcr
fucomi
fstps
xchg
add
stc
incb
add
mov
jb
add
push
add
rorl
pop
call
push
push
push
sub
push
push
pop
add
rol
sub
xor
add
shl
pop
shr
inc
not
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
jo
icebp
add
icebp
rcrb
popf
mov
add
xlat
add
mov
add
js
data16
repnz
mov
jno
add
add
gs
cld
scas
add
add
pop
mov
stos
stos
mov
xchg
lret
mov
jne
jmp
add
mov
pop
add
add
lret
add
outsl
add
add
add
sub
push
push
push
lea
push
lea
push
push
push
push
push
push
call
pusha
jbe
xchg
loope
add
fisubrs
mov
mov
cmp
mov
pop
add
xchg
add
add
shl
add
aam
add
add
add
add
call
add
movsl
add
add
mov
lods
push
cwtl
add
in
add
add
mov
add
jle
outsl
shrl
movsl
mov
lea
pop
push
push
push
push
push
push
push
lea
push
call
mov
test
add
add
xchg
add
leave
add
js
xchg
pushf
add
mov
mov
xchg
lcall
add
add
add
add
mov
add
jge
leave
shl
jbe
add
xlat
add
jle
fcmovnbe
add
jbe
jae
xchg
push
mov
mov
in
push
add
lea
pop
call
mov
push
push
push
push
call
add
add
xlat
lods
popl
add
lea
add
mov
add
mov
mov
add
aam
fbstp
add
stc
jns
movsl
add
shr
mov
aad
add
add
add
mov
add
mov
cld
add
movsb
mov
jb
xchg
add
nop
sarl
add
add
mov
lea
pop
push
push
push
push
call
add
add
add
cmp
add
push
mov
in
popf
xchg
imul
rcr
mov
loopne
subl
add
add
add
add
cld
add
stos
add
add
les
jbe
add
rcl
add
addb
push
add
mov
lea
pop
mov
add
push
push
lea
push
push
call
sti
jns
sti
int
fadds
add
jno
scas
jbe
xchg
leave
add
jno
int3
push
test
add
cld
mov
mov
stos
add
iret
pop
jns
cli
add
sbb
arpl
mov
mov
fwait
cld
iret
fs
push
les
jecxz
mov
add
jne
add
mov
add
pop
add
push
push
call
imul
mov
add
add
jne
mov
popl
add
mov
ja
popf
add
add
push
add
add
stos
shll
push
add
iret
add
popf
mov
and
mov
add
add
stos
push
mov
add
add
scas
add
imul
add
xchg
insb
jp
mov
mov
or
ret
cli
dec
add
mov
push
push
push
push
push
push
push
lea
push
push
push
push
call
jl
pop
add
push
xchg
add
push
fs
add
negb
jo
add
addr16
nop
fs
add
add
gs
movsl
orb
fadds
add
out
test
fcoms
int3
popa
mov
add
in
add
mov
in
add
add
push
lods
fmull
pop
xor
push
push
push
push
call
push
add
add
clc
add
roll
jae
leave
add
mov
xchg
enter
xchg
fisttps
flds
mov
mov
add
outsl
add
js
xlat
add
add
pop
mov
mov
add
add
add
mov
lea
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
lods
scas
popf
cld
mov
push
jecxz
xchg
add
add
mov
push
add
nop
add
rcll
add
mov
add
popa
repnz
pop
lret
aam
into
pop
fwait
add
in
mov
movl
add
add
lret
pop
add
out
out
outsl
add
rcl
test
jl
xchg
add
icebp
pop
add
in
hlt
add
pop
add
push
push
push
push
push
call
incb
mov
add
xchg
jle
imul
leave
add
add
jbe
xchg
lcall
movb
sti
add
clc
push
in
leave
out
mov
stos
add
push
shrl
icebp
sahf
add
cmc
pop
add
add
add
mov
add
add
add
add
fiadds
sti
pop
jbe
cmpsb
jae
clc
add
add
ja
stos
test
mov
lea
pop
push
mov
push
push
push
push
push
push
call
add
mov
add
add
add
add
add
arpl
jge
jge
mov
mov
mov
add
lcall
xchg
mov
add
xorb
out
lock
loopne
into
jbe
push
add
add
add
lods
fs
in
push
call
lret
loopne
mov
mov
lea
pop
xor
push
push
push
lea
push
call
mov
push
add
pop
mov
add
out
lret
pop
insb
add
add
add
jb
add
add
addr16
xchg
add
addl
xchg
jo
add
mov
add
add
xchg
stos
pop
add
aad
add
add
jp
xchg
push
popa
jns
sti
add
icebp
jle
clc
aad
mov
test
push
add
pop
add
push
push
lea
push
push
push
call
add
cmpsb
push
int3
stos
cwtl
stos
iret
ljmp
jo
jne
jle
add
mov
iret
cmc
add
iret
add
mov
stos
ljmp
push
outsl
add
add
popfw
add
add
add
lret
add
pop
hlt
add
add
add
mov
popa
mov
lret
add
add
mov
lea
pop
add
pop
push
lea
push
push
call
xchg
add
cmc
xchg
add
push
movl
mov
les
add
lea
add
add
leave
stos
ja
pop
xchg
ja
test
icebp
add
add
add
add
add
loopne
push
add
mov
loopne
cli
add
mov
gs
jnp
push
fst
add
add
pop
add
add
add
xchg
add
pop
mov
xor
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
into
xchg
test
fadds
add
fnstsw
cmc
jle
add
add
out
pop
adc
push
add
add
add
aad
xchg
push
add
lds
pushf
add
fsubrp
add
popf
mov
add
add
lahf
cmpb
test
xchg
push
xchg
mov
jbe
add
add
std
add
add
add
add
add
loope
add
add
mov
pop
ror
add
pop
mov
xor
sub
push
push
lea
push
call
pop
add
js
add
add
push
add
add
add
stc
xchg
pop
xchg
mov
lock
clc
mov
add
enter
mov
fcompl
test
out
jb
jae
cmpsl
push
add
negl
out
add
clc
out
int3
fsubrl
mov
xchg
stc
add
add
pop
push
mov
add
mov
pop
pop
add
stos
xchg
add
shr
into
mov
lea
pop
pop
rep
push
push
push
push
push
call
add
loope
popa
enter
add
pop
add
shll
xorb
shll
add
jb
mov
add
push
mov
je
add
add
cmpsb
gs
popf
add
add
mov
jge
loopne
scas
add
add
add
jp
lods
call
mov
leave
xchg
add
mov
jge
mov
pop
add
aam
bound
pop
mov
push
push
push
push
call
cltd
popa
add
call
jns
cld
xchg
add
mov
in
out
js
les
add
leave
add
jae
mov
out
fbld
xchg
fld
add
add
add
pop
add
jae
add
push
jle
jle
add
xchg
mov
int
jo
lret
add
jnp
lea
xchg
mov
mov
pop
add
mov
lea
pop
add
push
push
push
push
push
call
jae
add
push
add
mov
sbb
popa
add
out
pop
add
mov
fmuls
add
add
add
mov
add
add
add
data16
add
js
in
add
in
pop
push
repnz
out
push
add
add
jl
add
xchg
mov
add
mov
lahf
add
mov
bound
add
push
push
lea
push
push
lea
push
call
jecxz
add
jl
fstp
jmp
add
xchg
add
add
orl
xchg
add
fldl
mov
repnz
add
add
add
add
jbe
add
mov
add
fistpll
add
jmp
add
xchg
push
test
add
jno
mov
lea
pop
add
push
push
lea
push
push
push
call
xchg
add
jae
add
pop
add
add
add
mov
jl
add
add
test
add
jbe
add
xchg
cmpsl
scas
lahf
fistps
add
js
test
gs
out
add
jae
add
push
add
cmc
pop
add
pusha
push
add
jl
add
imul
add
add
add
pop
mov
push
push
push
push
push
call
outsl
fiaddl
add
add
push
repnz
lods
js
add
scas
xchg
mov
add
add
std
int3
flds
add
in
mov
cmc
mov
add
lahf
add
loope
jne
xlat
xlat
out
mov
add
mov
add
jecxz
jno
ret
jp
add
mov
xchg
pop
add
mov
add
xchg
repnz
add
arpl
xchg
loop
jle
mov
loopne
add
add
mov
lea
pop
xor
push
push
push
push
lea
push
push
call
mov
add
mov
ja
bound
mov
add
pop
add
jo
add
fsubrs
add
test
rclb
movsb
xchg
xchg
jle
xchg
add
xchg
push
jle
popa
andb
cli
rolb
imul
cmpsb
add
add
mov
pop
mov
mov
lea
pop
add
mov
xor
push
push
push
push
push
push
push
push
push
call
rcr
cwtl
add
add
add
add
jo
lods
out
push
arpl
jge
push
lret
add
movsb
mov
loopne
jo
fs
add
mov
aad
add
add
add
out
pop
mov
cmpsb
enter
test
out
add
add
add
jmp
lea
pop
mov
push
push
push
push
push
call
pop
add
add
movsl
ja
cmpsl
pop
jns
iret
add
add
add
imul
add
popa
fs
mov
int3
add
add
add
add
push
add
fwait
add
nop
cld
enter
add
xchg
mov
push
je
add
out
add
add
add
add
add
icebp
std
xchg
stos
add
rorl
xor
push
push
push
push
push
push
push
push
push
call
out
add
add
push
jmp
push
add
test
add
fsubrp
add
cmc
mov
add
add
jbe
mov
add
add
add
shlb
iret
jbe
mov
add
test
add
lock
mov
mov
stos
add
mov
mov
lea
pop
add
push
push
push
push
push
call
mov
ja
add
std
add
add
add
add
notb
imul
mov
add
mov
fstp
xchg
add
push
jae
add
add
add
into
add
pop
stos
pop
add
mov
pop
push
add
add
lret
mov
lea
pop
add
add
mov
push
push
xor
push
xor
add
xor
sub
shr
not
add
pop
add
add
inc
not
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
push
add
add
add
jns
mov
out
sahf
arpl
jo
sahf
mov
testl
fadds
cwtl
mov
add
xchg
add
hlt
imul
add
adcb
jae
into
push
int
call
add
add
fs
push
xchg
int
add
lret
add
pop
pushl
call
push
push
push
shl
lea
push
or
inc
add
lea
sub
pop
lea
dec
pop
push
lea
push
push
push
lea
push
push
call
add
stos
push
insb
add
cltd
add
add
mov
add
stos
add
mov
cwtl
add
add
add
add
add
add
adcl
add
iret
rolb
fstl
out
cld
cltd
pop
stc
add
add
adc
ja
pushf
add
test
aam
add
into
add
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
out
add
rol
outsl
add
repnz
add
popa
add
mov
add
add
ja
cmpl
xchg
cmc
add
pop
add
mov
pop
scas
incb
add
add
imul
pop
mov
roll
add
xchg
addr16
fs
scas
pop
rcr
add
lea
pop
call
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
call
ljmp
pop
add
je
fwait
in
filds
js
mov
mov
add
add
pop
mov
add
xchg
add
add
mov
add
stos
mov
add
add
add
add
adcb
add
add
add
mov
mov
stos
call
mov
mov
mov
bound
pop
mov
push
push
call
mov
fwait
scas
add
add
stos
add
push
pusha
ret
mov
jp
add
stos
fadds
loope
fstl
cltd
lret
add
cli
push
call
jge
mov
add
pop
pop
add
add
faddl
je
add
jmp
lods
sarb
mov
add
add
iret
in
mov
add
mov
add
add
add
mov
add
mov
lea
pop
push
push
mov
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
ljmp
popl
add
cltd
pop
jp
add
mov
ret
in
jp
push
add
add
xchg
add
add
add
pop
add
push
add
lods
mov
ja
add
add
jp
out
out
jo
cmpsb
out
add
loopne
add
mov
add
fsts
xlat
fwait
mov
cld
lea
pop
add
push
lea
push
push
push
lea
push
push
lea
push
call
lock
add
je
aad
subb
add
add
in
xchg
fdivrl
roll
add
add
test
push
mov
xchg
add
add
add
push
mov
mov
add
add
outsl
ja
fcoms
lret
pop
add
jmp
add
jmp
add
hlt
xchg
add
mov
mov
jbe
cwtl
sahf
orb
add
push
push
push
push
push
lea
push
push
call
enter
outsl
mov
mov
test
push
ja
fdivrs
loope
add
cmc
int
shll
push
test
add
add
jl
popf
fildl
add
add
add
add
loopne
mov
add
add
out
imul
mov
rolb
loop
add
pop
add
push
push
push
lea
push
push
call
jge
mov
add
mov
mov
fadds
rclb
add
gs
pop
loopne
add
lock
add
aam
add
add
mov
testl
mov
mov
mov
out
mov
ret
testb
sahf
add
add
add
call
adc
mov
xor
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
int3
loope
pop
jno
mov
xchg
imul
add
sti
add
add
outsl
add
add
rolb
xchg
std
add
imul
mov
test
add
pop
add
in
imul
add
jp
les
add
xchg
cmc
mov
add
fidivrl
in
stos
test
add
fldl
aam
leave
popa
mov
lods
mov
add
pop
add
push
push
lea
push
call
add
fidivrs
xchg
fldl
cltd
lret
xchg
mov
cli
add
xchg
jp
enter
rolb
add
mov
add
xchg
insb
add
test
mov
jno
add
rolb
add
movsl
leave
std
movsl
fsts
add
add
mov
dec
add
cmpsb
mov
lea
pop
mov
xor
push
push
lea
push
push
push
push
push
push
call
repnz
add
mov
mov
add
mov
add
int
add
loope
add
addb
lcall
xchg
bound
mov
ret
mov
addr16
mov
mov
add
jno
push
stc
push
xchg
jmp
add
add
add
add
xchg
pop
add
mov
lea
pop
add
pop
mov
push
push
push
push
push
lea
push
call
add
mov
add
jl
bound
loopne
stc
xchg
sbb
fiadds
fdivl
xchg
out
xlat
add
je
add
add
add
add
add
pop
lcall
mov
add
mov
add
pop
loop
ficompl
mov
icebp
push
add
fiadds
leave
cbtw
add
add
mov
faddl
movsb
add
aam
bound
xor
push
push
push
call
cmpsb
add
add
cltd
add
pop
popa
mov
ljmp
add
mov
add
pop
insb
repnz
clc
xchg
loopne
mov
xor
sti
vpshlw
data16
pop
mov
orb
arpl
add
xchg
add
add
ret
jno
push
cld
add
mov
lea
pop
add
push
rol
pop
rep
mov
push
push
push
call
scas
out
push
xlat
scas
aam
fsubl
clc
jno
add
test
add
gs
je
data16
add
ja
clc
aad
xchg
movsl
out
add
add
shl
lret
in
stos
hlt
pop
cmp
add
mov
testb
mov
add
add
lahf
fisubrl
add
add
int3
add
xchg
out
fnop
add
add
pushf
out
call
add
aam
bound
pop
xor
push
push
push
lea
push
lea
push
call
fucomi
je
mov
mov
push
stc
rolb
add
jmp
add
pop
pop
mov
fldl
mov
xchg
jp
mov
std
add
notl
mov
jge
add
movl
add
jge
add
lds
imul
movsl
add
add
xchg
add
in
mov
add
xchg
flds
jb
testl
mov
add
leave
add
mov
add
add
add
add
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
mov
lret
add
mov
add
add
add
sti
movsb
incb
movsb
scas
mov
mov
add
ljmp
pusha
add
je
mov
add
jae
les
popa
add
add
mov
sti
fadds
rolb
add
notl
js
mov
movl
pushf
xlat
repnz
shlb
sarl
popa
sub
leave
je
mov
xor
push
ror
not
rol
pop
mov
xor
push
push
push
push
push
push
push
push
push
push
call
ja
sarb
add
rolb
js
xchg
add
subl
out
add
add
add
add
xchg
lret
add
jecxz
add
lods
mov
testb
jne
add
jns
jo
popa
push
int
add
push
xchg
ljmp
mov
lea
pop
add
push
push
push
lea
push
push
push
lea
push
call
add
jae
xchg
push
mov
add
add
stc
iret
add
add
cld
jl
stos
add
into
add
add
push
std
hlt
add
add
add
jnp
out
mov
js
pop
add
add
add
cli
cmpsl
lret
add
add
cld
in
jmp
add
frstor
mulb
mov
lea
pop
add
push
push
add
shl
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
jp
add
sti
add
push
cmc
fst
add
add
mov
sti
iret
xacquire
mov
mov
out
add
add
addr16
out
mov
add
lcall
cltd
xchg
jge
add
add
stos
add
ret
mov
movl
sbb
fstl
enter
leave
test
add
notl
push
push
fldenv
add
pop
xor
push
lea
push
lea
push
lea
push
push
push
call
fbld
mov
add
mov
add
test
add
fwait
add
lahf
add
cwtl
mov
stos
pop
fistps
faddl
lds
ljmp
pop
add
pushf
add
mov
add
fcmovu
add
in
lods
mov
test
cli
gs
pop
into
lret
jne
pop
add
out
ficoml
lea
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
mov
push
jmp
jo
in
incb
add
pop
testl
jb
pop
add
jb
add
stc
lcall
add
test
jbe
insb
popl
add
mov
pop
in
push
insb
add
add
add
add
int3
lret
aad
add
push
lret
loopne
push
mov
add
sub
lock
rep
push
add
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
insb
mov
pop
add
pop
add
add
jne
add
mov
fldl
mov
roll
pushf
add
scas
push
add
add
mov
pushf
std
add
mov
pop
add
fcomps
push
lret
add
mov
jae
pop
add
sti
loop
ret
add
cld
lea
pop
or
je
push
sub
lea
pop
mov
push
xor
pop
add
push
shl
pop
add
push
lea
push
push
push
lea
push
call
mov
shl
add
call
add
xchg
add
mov
loope
add
cmpsb
add
xchg
filds
or
lcall
add
nop
add
jne
jae
add
scas
push
add
xchg
ficoml
mov
add
scas
xchg
push
fildl
orb
pop
test
xchg
add
mov
add
add
addr16
rep
push
shr
pop
pop
push
push
shr
dec
push
sub
add
rol
sub
sub
not
add
ror
pop
rol
pop
push
push
push
lea
push
lea
push
push
call
aad
bound
mov
push
stc
add
add
push
mov
arpl
mov
add
in
negl
out
fiaddl
push
scas
aam
imul
jbe
je
add
clc
insb
xchg
mov
orb
call
lds
fsubrl
clc
stos
insb
icebp
push
jmp
add
jecxz
add
add
fistpl
xchg
sbb
mov
mov
push
lea
pop
mov
push
ror
sub
add
pop
jmp
push
mov
push
lea
push
push
push
push
push
call
xchg
int3
jno
add
addr16
outsl
xchg
mov
lds
mov
leave
add
add
icebp
lahf
xchg
arpl
test
mov
add
add
addl
add
add
add
nop
enter
add
pop
mov
mov
add
add
add
addr16
add
loope
pop
enter
add
outsl
arpl
add
insb
xchg
push
bound
movb
pop
add
push
shr
not
add
add
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
popl
add
push
int3
jl
mov
sti
add
nop
jecxz
add
mov
pop
mov
push
add
negb
add
pop
out
add
push
addl
add
add
add
jl
add
add
out
jb
add
add
add
add
ljmp
push
push
push
push
shr
pop
mov
pop
push
xor
rol
dec
pop
pop
pop
push
not
lea
pop
pop
leave
push
push
push
push
push
push
push
push
call
ja
std
add
add
add
add
into
jecxz
jno
out
mov
add
add
data16
add
aad
add
add
lcall
xchg
adc
movsb
faddl
mov
mov
stos
push
add
add
add
mov
add
mov
lea
pop
ret
push
ror
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
xlat
xchg
out
test
jns
lods
push
add
add
cmpsl
add
add
xchg
add
shr
add
add
add
mov
rolb
add
lods
jno
add
out
add
mov
add
mov
cli
add
add
add
loope
add
pop
mov
add
push
push
dec
sub
inc
pop
push
push
push
push
push
push
push
push
push
push
call
pop
add
jno
xchg
mov
repnz
add
aad
pop
mov
add
cli
mov
clc
mov
xchg
add
add
add
add
jae
nop
jns
add
add
add
pop
js
aad
mov
add
xchg
ja
add
pushf
push
out
bound
and
push
push
lea
add
not
pop
push
push
push
call
call
jge
cmpsb
add
faddl
xchg
stos
add
movl
mov
int3
mov
pop
stos
cmc
ja
add
add
in
mov
cli
add
add
loop
lds
pop
icebp
lahf
add
add
xchg
ficompl
pushf
out
imul
pop
clc
sti
add
std
stos
fwait
add
push
aam
bound
pop
movl
push
ror
shl
ror
pop
addl
test
je
mov
push
add
pop
pop
pop
push
push
push
call
add
clc
xchg
out
imul
add
sahf
add
add
add
add
fwait
icebp
jmp
add
add
add
mov
add
mov
add
add
add
xchg
negl
pusha
add
mov
loop
mov
mov
into
push
into
jb
testl
mov
lea
pop
pop
pop
leave
push
lea
push
push
push
call
add
add
js
test
scas
add
mov
fisttpll
mov
test
mov
push
scas
mov
add
push
add
add
add
int
mov
add
cld
shrb
add
mov
cmpsb
data16
pop
add
ljmp
aad
aam
jo
mov
add
call
notl
add
cltd
imul
add
push
movsb
mov
lea
pop
ret
push
mov
push
ror
add
pop
add
push
shl
pop
push
push
push
push
push
lea
push
call
addl
mov
xchg
cmpsb
add
add
mov
fcompl
shl
add
add
mov
mov
iret
lea
add
jne
cld
jmp
cmc
add
sti
add
cmpsb
mov
add
cmpb
jle
add
add
add
pop
add
fisubrl
pop
call
stos
add
jmp
lahf
xlat
add
add
pop
push
testl
push
inc
pop
addl
push
add
pop
push
call
mov
push
lea
push
push
push
push
push
call
in
fadds
filds
mov
add
add
add
xchg
je
nop
jno
ja
add
push
fistps
mov
xchg
fstpl
clc
sar
clc
pushaw
mov
nop
jo
sahf
mov
push
test
int
pop
pushf
jl
add
add
add
sarl
aam
add
movsl
add
jl
xchg
push
pop
test
add
add
xchg
pop
jnp
mov
lea
pop
pushl
push
shl
xor
shl
pop
push
push
shr
dec
pop
push
push
xor
inc
pop
call
push
not
pop
cmpl
jne
push
rol
inc
ror
pop
pop
push
shl
ror
shr
pop
pop
push
lea
pop
pop
push
shl
pop
pop
leave
push
sub
pop
ret
push
push
add
sub
pop
mov
add
push
rol
pop
push
push
push
push
push
push
push
lea
push
push
push
call
addb
ja
mov
call
nop
mov
add
sahf
xchg
mov
xchg
addr16
add
add
movsb
scas
add
add
xchg
lods
xchg
sbb
pop
cmpsb
mov
mov
leave
jno
add
mov
add
add
jns
add
lock
pop
add
gs
add
lods
aam
mov
add
loop
jnp
std
xchg
add
scas
add
pop
push
push
movl
push
lea
push
lea
push
push
lea
push
push
call
add
add
incb
fnop
je
fsubp
add
mov
mov
add
fxch
pop
add
add
pop
subl
add
std
cmc
ja
aam
add
aam
mov
lret
mov
pop
xchg
add
add
xchg
imul
popa
jno
roll
hlt
xchg
xchg
mov
add
pop
jnp
add
add
sbb
add
lret
lret
call
push
inc
pop
push
call
push
push
push
lea
push
push
call
mov
test
push
xchg
cltd
jns
add
add
in
add
lods
add
sti
add
push
jbe
mov
fstl
ror
filds
add
add
add
add
mov
add
push
popf
add
filds
mov
imul
stos
in
iret
xlat
mov
lea
pop
subl
push
shr
pop
cmpl
jne
push
ror
pop
pop
push
push
push
call
pop
ljmp
add
add
add
add
jp
add
aad
sti
add
les
jnp
lahf
mov
add
mov
mov
out
jbe
jle
add
add
mov
sahf
incb
add
mov
add
add
jno
add
mov
xchg
add
add
lea
mov
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
call
mov
add
imul
ret
add
shlb
add
pop
sahf
add
lret
fstpl
test
add
jns
movsb
jmp
add
lret
cmc
hlt
add
mov
add
test
mov
arpl
add
push
cli
push
hlt
mov
shll
pusha
sbb
pop
pop
leave
push
pop
ret
push
lea
push
lea
push
push
push
call
add
add
add
xchg
pop
mov
push
imul
add
sti
jecxz
add
add
add
mov
stos
arpl
pop
add
add
test
movsl
mov
out
out
push
out
addl
add
jo
mov
repnz
add
add
add
xchg
add
aad
mov
mov
lea
pop
push
mov
add
push
shl
pop
push
push
push
push
push
push
lea
push
push
call
cli
add
incb
push
add
jmp
add
add
xchg
add
sti
add
outsl
add
lret
mov
flds
outsl
mov
xchg
std
fwait
push
insb
add
out
sahf
aam
jnp
popl
data16
sahf
sahf
jae
fwait
add
fsubr
mov
sti
cwtl
cld
pop
fadds
push
mov
leave
icebp
addr16
add
pop
add
out
aam
bound
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
int
xchg
gs
add
pushf
cli
add
xlat
call
js
add
add
add
mov
addl
lret
add
mov
fsts
mov
mov
add
add
addl
fisubl
jo
jo
add
fwait
mov
lea
pop
push
mov
push
ror
shr
inc
dec
pop
lea
push
push
lea
push
push
push
push
lea
push
call
push
add
mov
mov
add
test
cwtl
jno
in
in
lret
add
add
add
cli
mov
push
sar
jecxz
add
add
mov
lods
lods
jp
add
lahf
add
popf
add
add
testl
add
mov
mov
add
iret
cmpsl
mov
jae
xchg
pop
arpl
popa
sbb
sub
mov
shr
push
lea
push
call
add
add
xchg
mov
jne
add
add
add
add
add
add
repnz
mov
sar
add
xchg
enter
addb
mov
add
pushf
add
push
movsl
out
add
pop
add
mov
mov
roll
gs
add
addb
add
bound
pop
mov
xlat
pop
adcl
or
inc
or
inc
cld
mov
push
lea
pop
add
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
notb
add
andl
pop
mov
add
add
enter
js
xchg
mov
add
push
jb
jle
pop
pop
lcall
add
pop
add
push
add
shl
add
add
je
data16
add
mov
xchg
mov
rclb
add
add
clc
fimull
pop
add
mov
push
add
shl
rol
pop
mov
cmp
jne
push
lea
push
push
push
push
push
lea
push
push
call
add
outsl
add
stos
enter
les
add
add
imul
add
movl
cld
fisubrl
add
out
add
mov
add
xchg
add
mov
push
mov
cmpsl
xchg
fildll
popa
test
add
jmp
add
pop
cmp
jne
mov
movl
push
push
lea
push
push
push
push
call
add
add
add
outsl
mov
test
pop
push
add
add
outsl
xchg
lret
in
add
mul
add
pop
mov
add
add
hlt
add
xchg
int3
mov
add
mov
imul
add
xchg
mov
add
jp
fidivrl
je
data16
add
lret
jle
add
add
add
add
pop
jmp
mov
push
push
push
push
push
push
push
push
lea
push
push
call
ljmp
add
mov
add
add
push
add
add
jle
ret
sbbl
jle
out
imul
add
add
mov
jge
mov
shll
add
fs
cli
add
cli
cmc
std
add
add
icebp
xchg
pop
add
mov
add
jbe
add
jl
xchg
push
lds
cld
mov
mov
lea
pop
mov
sub
jne
mov
push
lea
shl
pop
movl
push
push
push
push
call
sti
add
push
add
add
sbb
sti
popf
div
push
pop
out
push
push
add
leave
fistpl
add
add
add
push
lock
xlat
add
in
out
pop
mov
push
mov
popa
popl
add
mov
add
aam
add
rolb
add
add
pop
xchg
add
add
out
stc
sahf
rcr
iret
pop
add
adc
in
or
cld
push
push
push
lea
push
push
push
lea
push
call
clc
lahf
movl
mov
out
mov
add
add
add
movsl
xchg
sahf
scas
fsubrl
add
add
pop
mov
aam
movsb
jae
add
cmpsl
add
jnp
add
pop
pop
rolb
add
add
lret
lret
addb
jp
add
add
call
fsubl
ljmp
add
push
add
pop
mov
cmp
jne
mov
push
ror
sub
not
not
pop
movl
jmp
push
dec
add
sub
lea
pop
mov
cmpw
jne
push
not
pop
mov
movl
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
mov
push
lcall
add
add
add
add
add
jno
add
add
jo
lret
cli
add
xchg
push
jge
lds
add
mov
add
scas
fwait
mov
add
div
xchg
iret
xchg
cltd
add
jle
arpl
ret
lock
pop
add
fwait
add
pop
jmp
push
push
call
jmp
mov
push
std
mov
add
mov
flds
imul
add
out
pusha
lcall
in
mov
add
cmc
int3
iret
mov
out
add
std
les
xchg
add
repnz
idivl
lret
add
out
int
out
add
add
xchg
add
mov
lea
pop
pushl
push
push
push
push
push
call
pop
add
jb
rolb
pop
sti
bound
mov
pop
add
movsl
aam
cmc
xchg
ja
imul
add
push
mov
xchg
xchg
mov
hlt
add
fadds
roll
add
add
add
pop
mov
in
loope
nop
lret
add
jp
fisubrl
test
jecxz
ljmp
xchg
add
sahf
clc
out
arpl
mov
add
cld
lea
pop
pop
push
rol
ror
pop
mov
push
pop
mov
mov
push
push
dec
sub
sub
push
push
pop
add
ror
sub
rol
pop
not
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
enter
sbb
mov
int3
lods
xchg
add
icebp
out
add
xchg
add
testb
add
add
repnz
add
mov
add
test
add
add
data16
out
add
je
add
add
add
jmp
aam
push
add
jbe
mov
mov
test
aam
bound
push
push
push
push
lea
push
call
add
ficoms
fiaddl
add
test
add
out
roll
add
mov
cltd
jge
add
add
jp
outsl
xlat
imul
xchg
popf
add
gs
push
int
jge
stos
mov
fstpl
add
add
data16
lret
add
sti
out
xchg
pushf
test
mov
add
pop
call
cmpl
je
push
push
shr
push
or
inc
add
rol
add
lea
sub
sub
rol
dec
pop
pop
push
xor
pop
push
push
ror
not
pop
call
cmpl
je
push
push
ror
sub
not
add
push
or
not
add
sub
rol
ror
lea
not
pop
ror
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
scas
scas
push
mov
test
jl
add
mov
add
int
mov
cmpsb
jp
jne
push
aam
add
add
pop
scas
mov
lcall
jp
add
in
add
pop
stc
add
into
mov
fistpl
add
movsl
hlt
xchg
into
mov
xchg
clc
lret
push
repnz
add
add
mov
add
popf
cli
fiaddl
mov
lea
pop
push
push
lea
push
push
call
ja
in
mov
mov
iret
incb
jbe
add
add
out
rcl
lds
add
idivb
cltd
loopne
stos
add
add
add
add
shlb
mov
add
xchg
fadds
add
add
ljmp
add
out
xchg
pop
add
lret
test
add
add
add
outsl
add
add
data16
aad
fmull
in
add
cmpl
je
push
push
not
add
lea
sub
push
sub
add
sub
add
sub
sub
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
in
add
add
add
add
mov
jp
add
add
add
jb
add
mov
fwait
roll
add
cmpsl
add
mov
cli
add
imul
sbbl
cmpsl
push
scas
xchg
add
add
add
add
jl
add
add
add
cwtl
mov
lea
pop
push
call
cmpl
je
push
push
ror
dec
shl
push
push
pop
add
add
ror
sub
sub
add
pop
shl
shr
dec
pop
push
push
push
push
push
push
lea
push
call
add
cmc
outsl
icebp
cmc
add
fs
js
add
lods
add
imul
add
popf
xchg
add
add
pop
pop
lods
popaw
lds
push
lods
nop
add
add
add
icebp
add
add
fnstenv
mov
bound
add
lret
add
add
mov
lea
pop
push
call
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
pop
rolb
stc
mov
jle
add
cli
lods
add
data16
fildl
fistpl
mov
mov
add
mov
mov
into
add
incb
add
ja
imul
add
jo
add
add
test
stos
mov
fxch
hlt
add
mov
mov
testb
add
addb
add
pop
cmpl
je
push
push
ror
push
push
pop
add
not
dec
sub
rol
sub
pop
add
dec
sub
pop
push
rol
lea
not
pop
push
push
inc
sub
shl
sub
pop
call
push
lea
push
call
flds
push
subb
mov
add
add
test
jmp
add
cmpsl
add
addb
popl
add
add
add
add
mov
mov
add
lock
add
xchg
jecxz
xchg
ja
out
fsubr
mov
add
jp
mov
add
popl
add
push
rcl
add
pop
cmpl
je
push
push
add
not
ror
push
push
pop
add
dec
sub
shl
sub
sub
xor
sub
pop
lea
add
not
pop
push
lea
push
push
call
int
xlat
fnstenv
add
add
mov
stos
add
xchg
add
xchg
mov
xchg
add
mov
add
add
lock
sbbb
hlt
mov
add
xchg
lahf
pop
cmc
add
jno
popa
lock
add
push
add
int3
add
mov
lea
pop
push
call
cmpl
je
push
push
ror
push
or
not
add
sub
add
sub
pop
pop
push
dec
pop
push
push
add
pop
call
push
push
push
push
push
call
jmp
jmp
nop
mov
lret
jmp
ficompl
pop
push
push
arpl
jge
add
add
add
add
jbe
pusha
add
stos
add
add
mov
in
add
aad
cmpsb
add
or
jmp
push
add
addb
sahf
imulb
add
pusha
add
mov
lea
pop
cmpl
je
push
push
add
shr
push
xor
add
shr
sub
sub
dec
lea
pop
dec
add
pop
push
push
lea
push
push
call
add
add
mov
mov
add
out
mov
jnp
add
add
add
test
add
add
pushf
lahf
mov
add
addb
add
mov
mov
add
insb
les
add
add
add
fwait
add
into
add
scas
pop
xchg
add
shl
jns
leave
add
add
adc
call
cmpl
je
push
push
rol
xor
shr
push
or
not
add
add
rol
rol
sub
dec
inc
pop
add
pop
push
dec
sub
pop
push
call
cmpl
je
push
push
sub
push
xor
add
shl
sub
lea
xor
pop
sub
pop
push
xor
shr
xor
pop
push
push
lea
push
push
push
push
push
push
push
push
call
cmpsl
add
add
add
add
jb
movsl
add
roll
ja
add
pop
data16
add
push
fildl
arpl
add
stos
fcmovbe
push
jb
mov
add
mov
cwtl
add
faddl
data16
aad
add
jmp
add
add
xchg
ja
add
cld
add
xchg
mov
add
flds
push
mov
aam
bound
call
cmpl
je
push
push
shr
ror
xor
push
push
pop
add
dec
lea
xor
sub
add
pop
ror
rol
pop
push
add
dec
add
add
pop
push
push
lea
ror
pop
call
push
push
push
push
push
push
push
call
xlat
sti
icebp
movsb
movb
in
incb
movl
leave
cli
add
lcall
imul
add
add
push
add
mov
aad
mov
scas
add
push
add
andb
jp
push
add
hlt
add
cld
in
add
add
jne
mov
add
in
xchg
mov
les
js
jmp
les
je
push
push
add
inc
push
and
add
sub
inc
lea
sub
pop
lea
sub
xor
pop
push
shr
not
xor
shr
pop
push
call
cmpl
jne
push
not
pop
mov
movl
push
add
add
pop
jmp
xor
push
lea
push
push
push
lea
push
call
add
mov
scas
jb
clc
icebp
nop
add
add
add
add
scas
mov
cltd
pop
mov
lds
mov
hlt
aam
add
xchg
lcall
jmp
ljmp
mov
in
add
xor
scas
fwait
mov
add
into
xchg
mov
lea
pop
pop
push
inc
pop
pop
pop
pop
push
xor
dec
inc
shr
pop
leave
ret
push
push
push
push
push
push
call
xchg
jp
mov
jo
mov
push
test
jno
add
add
iret
mov
add
add
testl
mov
add
add
push
add
arpl
mov
out
mov
add
jmp
movsb
int
add
add
cmpsl
xlat
add
gs
add
roll
add
add
mov
lea
pop
mov
add
cmpl
jne
push
push
shr
push
sub
add
sub
sub
shl
pop
xor
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
js
add
popa
add
int3
notl
cwtl
cmpl
loope
add
testb
push
shlb
divb
xchg
mov
push
xchg
test
add
mov
jns
mov
jnp
jnp
bound
in
mov
jl
fwait
add
add
lea
pop
pushl
call
push
push
sub
pop
call
push
push
push
lea
push
push
lea
push
push
push
call
add
add
fiadds
add
movsl
mov
xchg
pushf
add
lock
jnp
mov
mov
pop
stos
mov
lret
xchg
xchg
in
xchg
bound
add
mov
add
add
mov
jb
add
xchg
imul
jb
clc
add
jns
hlt
lea
pop
jmp
cmpl
je
push
rol
ror
sub
pop
cmpl
jne
push
push
call
add
mov
leave
icebp
add
mov
add
add
outsl
push
add
aad
insb
addl
lret
pop
je
mov
add
add
push
loope
add
call
add
add
add
push
add
imul
js
mov
shrl
mov
cltd
pop
push
mov
add
add
flds
push
mov
pop
add
add
lds
jmp
aam
bound
pop
leave
add
pop
push
push
call
mov
mov
insb
mov
mov
lcall
mov
loop
add
jnp
cwtl
cmpsb
add
xchg
pop
push
mov
add
fildl
in
mov
add
add
add
mov
faddl
jp
jae
xlat
mov
mov
iret
ret
xchg
pop
add
bound
add
push
add
mov
lea
pop
pop
pop
push
not
add
lea
shl
pop
pop
push
sub
rol
pop
leave
push
push
push
lea
push
lea
push
push
push
call
vpsubw
test
iret
stos
add
arpl
in
jle
add
lahf
add
cltd
addb
cmpsl
add
mov
add
mov
in
loopne
out
cmpsb
imul
xchg
faddl
add
cmpsl
add
mov
std
push
mov
imul
andb
add
popf
add
call
add
pop
add
add
add
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
jmp
mov
jae
add
add
mov
cmpsl
loop
lret
jno
add
xchg
jo
filds
leave
mov
add
leave
call
pop
push
add
add
fwait
addl
cmpsl
add
add
stos
cwtl
mov
xchg
hlt
in
add
incb
mov
lea
pop
ret
push
push
push
call
push
popf
bnd
divl
add
add
xchg
rolb
add
add
push
icebp
std
mov
js
out
popa
xchg
ret
pop
sbbl
jbe
add
add
jmp
xchg
outsl
shrb
xchg
xchg
add
add
mov
nop
add
je
addr16
add
out
add
mov
lea
pop
jmp
push
push
lea
push
push
push
push
push
call
rcrl
add
ficomps
cli
fsubr
sti
int
bnd
add
add
xchg
in
jno
add
lds
mov
add
push
mov
add
push
add
add
xlat
add
roll
fisttpl
jae
test
jno
mov
stc
mov
jnp
jmp
lea
pop
cmpl
jne
push
push
rol
inc
sub
push
or
not
add
sub
xor
rol
shr
pop
lea
inc
sub
pop
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
scas
pop
add
sarl
loopne
mov
lret
rolb
add
add
idivl
lret
outsl
xchg
mov
fiadds
add
in
jge
into
jnp
jecxz
mov
add
add
mov
lret
repnz
test
add
movsl
add
add
add
enter
out
lea
mov
cltd
add
mov
add
mov
sbb
jne
call
push
push
push
push
push
push
push
lea
push
call
pop
out
testb
add
mov
xchg
add
add
mov
ret
add
push
add
add
insb
add
icebp
lret
mov
add
xchg
add
add
add
add
hlt
test
lods
add
add
mov
xchg
add
mov
xchg
in
enter
push
add
repnz
lea
pop
call
jmp
cmpl
jne
push
rol
shr
shl
pop
mov
mov
push
push
push
add
xor
push
and
add
sub
sub
dec
add
shl
inc
pop
pop
push
lea
push
lea
push
call
lcall
add
jne
jmp
xchg
gs
add
add
test
arpl
lea
add
fiaddl
xchg
add
out
add
mov
add
jge
add
icebp
mov
jecxz
add
out
add
mov
pop
add
lock
xchg
icebp
jl
mov
lea
pop
pushl
push
xor
rol
pop
call
push
shr
pop
call
push
push
ror
rol
rol
push
or
not
add
dec
ror
sub
lea
pop
rol
add
pop
push
sub
dec
pop
pushl
push
inc
sub
pop
call
call
push
push
shr
ror
shl
push
or
inc
add
add
xor
sub
sub
not
add
pop
pop
push
ror
pop
pushl
push
ror
pop
call
push
pop
call
push
push
not
lea
push
sub
add
sub
not
add
sub
xor
add
pop
pop
push
push
shl
add
push
xor
add
shr
sub
lea
ror
pop
inc
not
pop
push
lea
push
push
push
push
call
push
add
add
push
out
js
xchg
fiaddl
push
mov
movsb
add
cmc
add
add
add
jl
test
fwait
xchg
hlt
cli
frstor
nop
pop
lret
xchg
add
stos
mov
ret
add
add
add
add
shl
lret
fldl
add
lret
mov
add
je
pop
add
rorl
lea
pop
call
push
ror
xor
lea
pop
pop
dec
jne
push
lea
push
push
call
jecxz
mov
add
jge
xchg
stc
add
insb
test
fldl
add
add
hlt
ficoml
add
hlt
add
add
out
fs
mov
mov
add
test
add
cmpsb
add
aam
xchg
lcall
add
jns
leave
add
add
add
mov
lea
pop
call
jmp
call
push
push
push
and
add
add
xor
add
sub
lea
pop
add
xor
shl
pop
push
add
inc
sub
pop
pushl
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
lahf
add
rolb
add
imul
push
add
add
pushf
shl
in
mov
jb
int
add
add
pusha
xchg
add
add
in
cmpb
outsl
ret
lret
sbb
incb
add
xchg
popa
cmc
xchg
add
gs
add
pushf
rclb
add
in
addl
movsl
add
mov
rolb
xchg
jb
stos
pop
sti
je
mov
lea
pop
call
push
lea
push
call
jns
add
add
cld
add
lret
jo
push
stos
mov
push
mov
jae
hlt
pop
add
jo
ja
mov
add
add
push
cltd
fadds
add
int
add
add
add
mov
add
jne
lret
mov
pop
les
xchg
outsl
mov
add
jl
mov
add
jge
test
popa
stc
mov
fiadds
add
call
fmull
call
sbb
jo
ror
pop
call
push
push
push
push
push
push
push
push
lea
push
push
call
int
add
add
test
in
imul
add
roll
add
mov
insb
lock
add
add
xchg
mov
mov
mov
stos
addb
add
test
lods
popf
add
aad
int
cltd
jp
push
divl
add
imull
popl
loopne
rolb
add
lea
add
nop
mov
test
loope
lods
aad
sti
push
lea
pop
mov
lea
push
push
dec
add
push
xor
add
xor
sub
sub
dec
sub
pop
shr
add
pop
push
ror
pop
pushl
push
dec
add
shr
sub
pop
call
push
lea
push
push
call
filds
in
add
stos
aad
jmp
push
out
stc
add
incb
push
add
cmpsl
repnz
addr16
xchg
ja
loop
into
add
loopne
cltd
jle
add
into
fistl
jb
lahf
mov
jmp
add
add
add
jp
jmp
les
add
pop
addr16
testb
aad
hlt
ljmp
mov
aam
bound
push
push
lea
push
push
push
push
push
push
call
add
rolb
cmp
mov
add
add
add
rcr
add
add
add
loope
add
shlb
pop
mov
out
push
add
stos
pushf
add
add
out
mov
out
add
jo
add
xchg
nop
mov
test
movsl
add
jmp
add
fxch
insb
cli
mov
in
add
add
in
push
outsl
jns
add
add
enter
jle
add
pop
call
push
push
rol
sub
lea
shr
push
and
add
not
rol
sub
add
pop
shl
sub
add
rol
pop
push
push
lea
push
push
call
ljmp
add
in
add
xchg
add
stos
mov
hlt
filds
ljmp
lret
add
loope
mov
mov
add
test
jne
jle
rolb
lret
jne
add
mov
jnp
pop
in
add
add
lea
lcall
xchg
rolb
scas
add
icebp
add
pushf
mov
pushf
push
lea
add
pushf
mov
lea
pop
pushl
call
call
push
push
push
push
push
push
push
call
mov
lds
sub
stc
data16
outsl
add
push
jnp
iret
sti
add
add
mov
fnstsw
in
je
add
int3
jns
ror
add
iret
rcrl
xchg
add
mov
add
stos
add
add
xchg
mov
add
lcall
fsts
lea
mov
add
aam
bound
mov
push
not
add
dec
not
pop
lea
push
push
sub
shl
xor
push
sub
add
shr
sub
sub
sub
sub
not
pop
shr
ror
ror
pop
push
lea
push
push
push
push
push
push
push
push
push
call
int3
add
filds
mov
ljmp
add
add
add
add
add
add
xchg
out
mov
add
add
add
hlt
fldl
add
in
add
filds
add
add
in
add
test
lret
lock
add
xchg
cld
divl
ret
add
test
xchg
test
add
add
pop
pushl
call
push
xor
pop
lea
push
push
push
push
push
push
push
push
push
call
out
add
jno
enter
pop
fwait
push
and
pop
add
add
mov
ret
add
mov
jae
mov
pop
jns
in
popa
add
movsb
jl
add
out
add
add
pop
popl
mov
add
mov
shlb
add
mov
mov
out
add
nop
shlb
scas
mov
lea
pop
push
pushl
push
push
add
shr
sub
push
sub
add
ror
sub
ror
pop
ror
sub
pop
push
not
pop
push
push
push
lea
push
lea
push
push
lea
push
call
add
push
push
ret
faddl
push
jnp
stos
lds
add
xchg
xchg
ja
pop
add
add
ret
arpl
aad
rcrb
add
shr
mov
mov
add
rcll
mov
mov
subl
push
cld
in
add
in
add
popa
movsl
out
jl
add
mov
mov
pusha
stos
add
pusha
sbb
shrb
mov
push
xor
add
shl
sub
ror
sub
xor
add
inc
pop
inc
sub
rol
pop
pushl
push
push
push
push
call
test
add
out
bound
fadds
add
add
add
add
add
xchg
in
add
flds
add
test
cli
popf
add
mov
lret
test
push
add
add
stc
add
push
add
add
mov
mov
xchg
popf
rorl
sti
add
add
lcall
aad
mov
add
data16
xlat
adc
push
shr
pop
call
push
push
not
dec
inc
push
xor
add
shl
add
sub
rol
pop
pop
push
inc
xor
shr
shl
pop
pushl
push
lea
xor
add
pop
call
call
jmp
push
dec
rol
shl
pop
pushl
push
push
push
call
add
add
xorb
add
in
call
push
lret
mov
mov
fs
add
enter
add
pop
add
add
jmp
imul
test
adcl
add
jmp
test
mov
lcall
add
int
out
movl
add
outsl
insb
fidivl
lea
pop
mov
jmp
push
push
shl
lea
dec
push
and
add
sub
xor
pop
add
inc
xor
dec
pop
push
shr
not
add
not
pop
pushl
call
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
add
les
popf
jno
add
add
mov
test
mov
mov
cmpsb
testb
test
mov
add
add
jbe
cmp
mov
cli
mov
mov
add
add
lahf
clc
lock
cltd
add
add
mov
out
aad
push
xchg
ret
loope
clc
fidivl
pusha
and
add
shrb
repz
push
xor
add
inc
push
or
inc
add
sub
add
pop
sub
shr
pop
push
push
push
push
push
call
add
add
add
sbbb
xchg
add
add
pop
mov
jnp
mov
popf
testb
add
add
mov
out
mov
lret
in
push
add
add
add
pop
out
add
test
cltd
add
jo
lcall
add
leave
add
in
add
pop
pushl
push
push
lea
push
push
call
xchg
mov
clc
add
push
add
scas
add
pop
add
jmp
scas
add
xchg
test
add
std
mov
add
add
jbe
movb
pop
push
fwait
add
lock
scas
test
in
in
add
insb
fwait
lds
add
push
add
add
add
pop
call
push
add
add
pop
push
push
sub
inc
pop
call
leave
push
push
lea
push
push
push
push
push
push
push
call
popa
add
ret
mov
fiaddl
add
add
xchg
xchg
add
mov
mov
xchg
mov
sahf
push
out
int3
pop
add
add
add
add
add
testl
push
add
int3
jno
xlat
add
faddl
popf
add
arpl
push
add
add
add
add
addr16
lea
pop
add
push
xor
lea
xor
pop
pop
pop
pop
push
rol
lea
shl
add
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
add
lret
imul
mov
add
xchg
stos
add
mov
out
mov
fwait
add
fildl
roll
clc
jge
movb
add
xchg
add
xchg
incb
bound
add
jb
stos
cmc
jb
repnz
jge
test
add
ficoms
jns
lret
push
mov
lea
pop
leave
push
rol
add
pop
add
ret
leave
push
pop
ret
push
push
lea
lea
ror
pop
mov
cmpl
jne
push
push
lea
push
push
push
lea
push
call
mov
sti
add
test
mov
rorb
jp
int3
into
jbe
pushf
add
int
add
addb
les
xlat
stos
add
add
xchg
test
add
xchg
mov
in
int
add
leave
pop
hlt
roll
ja
jae
mov
mov
jno
fiadds
call
mov
lea
pop
mov
jmp
push
push
push
push
push
call
fwait
pop
add
add
add
jp
clc
fsts
cmpsl
add
fucomp
add
add
xchg
jp
jnp
loope
add
fiaddl
add
cwtl
movsl
in
add
xchg
mov
iret
jmp
mov
pusha
ftst
add
iret
add
add
add
add
add
sahf
mov
jmp
jl
add
add
in
out
in
add
cmpsl
mov
lea
pop
mov
push
rol
pop
and
push
not
dec
pop
xor
xor
push
lea
push
push
push
push
push
push
lea
push
push
push
call
cli
imul
ficomps
arpl
test
movsb
je
mov
std
add
add
add
into
sti
add
testl
add
loop
cli
mov
int3
movsb
add
add
mov
jmp
add
add
out
add
add
mov
push
cld
jmp
xchg
add
fidivs
addl
add
cmpsl
add
cld
lea
pop
add
xor
push
ror
pop
dec
push
push
push
push
lea
push
call
scas
pusha
mov
mov
cld
add
add
add
add
fs
rcll
fcomps
pusha
add
mov
mov
subl
mov
mov
fidivrs
mov
sbbb
shl
hlt
add
push
add
xchg
les
mov
lea
pop
sub
jmp
push
push
push
push
push
push
lea
push
push
call
add
jle
imul
add
lret
xchg
rcr
lahf
pusha
add
add
push
pop
xchg
into
mov
add
add
rcrb
fisttpl
add
mov
testl
add
add
cmpsb
pushf
ljmp
test
add
aam
jne
bound
mov
rcl
add
mov
lea
pop
sub
pushl
pop
push
lea
push
push
call
sti
add
notl
neg
add
mov
add
add
jnp
add
fimuls
nop
xchg
pop
add
cld
add
int
data16
jno
add
test
mov
fiaddl
add
xchg
add
add
loop
fwait
add
add
frstor
pusha
repnz
andb
leave
insb
add
popa
or
sub
cmp
jne
mov
push
lea
push
push
lea
push
call
add
add
mov
push
movl
jmp
add
add
cli
divb
add
add
add
mov
mov
pop
push
add
add
cld
add
add
jo
pop
add
add
iret
fs
add
add
lcall
adc
addr16
xchg
jae
leave
push
mov
fdivl
add
data16
mov
lea
pop
lea
sub
push
push
push
call
pop
add
jp
je
loopne
out
movsb
add
stos
add
mov
lea
int3
xchg
push
out
xchg
mov
add
add
in
cmc
add
jne
add
roll
pop
cli
pop
add
int3
add
jmp
add
add
mov
ljmp
hlt
lea
pop
mov
shr
push
not
pop
add
push
sub
sub
pop
sub
push
lea
push
call
jmp
imul
pusha
stos
mov
jae
add
js
roll
div
in
add
push
ret
add
add
hlt
xor
mov
out
add
js
add
add
xlat
mov
jb
jecxz
add
add
cwtl
in
add
mov
lahf
imul
aad
add
stos
loopne
cmc
jo
push
cmpsb
mov
in
add
rorl
pop
pushl
push
push
lea
push
push
lea
push
lea
push
call
xchg
aad
clc
add
cld
jmp
add
ja
add
add
int3
add
add
lods
jmp
insb
cld
test
add
scas
out
data16
sarb
in
add
movsb
add
roll
add
mov
iret
jo
jle
add
add
add
mov
add
in
add
add
cmc
aam
ljmp
lea
pop
pop
shr
and
push
dec
xor
inc
pop
sub
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
insb
add
add
pop
imul
fld
add
cmc
jne
add
lds
add
push
loope
pop
xchg
nop
roll
scas
aad
mov
arpl
add
xchg
imul
add
lahf
add
ret
add
int
mov
pop
addr16
lods
outsl
add
nop
hlt
mov
lea
pop
cmp
jne
leave
push
shr
ror
sub
pop
ret
push
mov
push
shr
pop
add
push
push
push
push
push
push
call
add
add
add
arpl
cmp
addl
xchg
iret
add
cld
fstps
enter
add
pusha
add
lret
add
add
add
in
jl
mov
add
loope
pop
mov
ljmp
lret
imul
push
hlt
popf
ret
add
add
add
js
add
add
loope
in
loopne
add
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
in
mov
popa
loope
add
add
push
pop
add
add
mov
mov
out
js
call
add
jb
cmc
add
js
gs
add
xchg
add
pop
test
add
in
arpl
mov
sbbb
mov
push
push
add
addl
into
mov
add
xchg
jno
mov
fmull
push
push
push
push
push
push
push
push
push
call
mov
jnp
mov
filds
add
mov
cmc
add
flds
mov
fmuls
jnp
add
add
add
icebp
push
jbe
add
add
cmpsb
add
add
divl
jp
shll
add
fdivs
add
xchg
add
mov
add
mov
add
mov
add
imul
in
add
pop
push
push
push
push
lea
push
lea
push
call
cltd
add
add
stos
jnp
add
andl
add
test
into
add
cltd
add
mov
mov
testb
clc
ljmp
add
loope
add
add
add
add
mov
cli
jmp
hlt
lahf
add
fldl
mov
add
mov
lea
pop
mov
lea
sub
push
lea
pop
mov
shr
add
push
push
push
call
std
jnp
pop
add
fsubr
iret
add
push
add
add
shl
shl
add
aad
mov
bound
add
stos
aam
int
add
add
rcll
jo
xchg
shrl
push
loop
mov
add
lret
roll
fidivrs
jns
mov
lea
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
push
call
fidivs
add
lahf
mov
add
xchg
add
into
add
ljmp
jl
pop
icebp
mov
mov
add
add
xchg
add
add
jle
test
cmpsl
jae
add
mov
add
movsl
add
add
add
in
add
mov
add
mov
push
bound
pop
add
mov
add
push
push
push
push
call
hlt
push
add
mov
add
movsl
fcmovu
inc
add
in
popa
ret
mov
add
add
add
lock
add
add
xchg
hlt
fsubs
add
add
add
add
add
gs
add
add
loopne
add
add
add
add
les
jp
add
pop
xchg
xchg
mov
lea
pop
xor
push
xor
inc
inc
pop
mov
and
call
push
not
not
pop
add
push
push
lea
push
push
push
push
push
push
call
add
mov
in
add
push
add
out
imul
jo
shll
fsubl
pop
jae
mov
pushf
add
lock
insb
scas
fldl
cmc
sbbl
add
add
add
imul
add
insb
pop
add
mov
std
pop
add
push
add
add
add
add
and
inc
or
test
add
add
je
cmc
add
push
push
lea
push
lea
push
lea
push
lea
push
call
test
pop
jmp
xchg
xlat
add
add
fs
add
jne
jnp
lahf
add
xchg
add
mull
add
mov
cmpsl
mov
add
aam
add
mov
add
js
jge
test
mov
mov
add
pop
pop
add
add
in
shlb
add
xlat
add
call
aam
bound
add
push
push
push
push
push
push
call
jo
pop
fistpll
add
hlt
add
add
push
mov
add
mov
pop
hlt
xchg
loope
out
add
add
add
pop
repnz
popa
in
mov
add
filds
fadds
mov
add
xchg
movsl
jmp
test
lret
add
out
out
ret
add
shll
sbb
jnp
add
test
push
lea
push
push
push
lea
push
push
call
add
jo
mov
add
fidivrl
add
test
ljmp
flds
push
rolb
fsubr
xlat
mov
sti
mov
fiaddl
jge
add
xchg
xchg
jae
mov
xchg
mov
test
loope
push
push
movsb
in
jne
push
addl
add
les
rcrb
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
hlt
ja
add
push
add
add
scas
xchg
add
into
bound
add
cmpsl
add
cmpl
add
pop
fiaddl
fistpl
mov
push
mov
add
add
mov
add
push
add
add
pop
jb
add
imul
add
add
push
add
lds
mov
lea
pop
pop
pop
pop
push
push
push
call
jno
add
add
jecxz
filds
add
je
mov
add
add
add
cmpsl
out
push
leave
popl
push
pusha
shr
add
add
add
jp
movl
mov
add
add
cltd
add
lahf
add
jmp
add
popa
add
stos
test
hlt
out
les
rolb
push
jle
add
into
in
add
push
add
mov
lea
pop
leave
push
sub
add
pop
ret
mov
push
shl
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
shrl
add
lret
add
mov
stc
add
jmp
add
push
js
jmp
add
add
add
add
mov
mov
add
mov
add
scas
enter
add
pop
mov
mov
xchg
mov
cltd
jbe
add
stos
ret
rolb
xchg
add
add
add
leave
scas
cmc
xchg
add
add
push
add
mov
popa
sub
push
shr
pop
pop
pop
mov
push
pop
push
push
sub
pop
call
push
push
lea
push
push
lea
push
push
call
in
imul
mov
cld
add
add
add
add
add
stos
add
add
jns
add
lret
shl
add
add
cmpl
add
mov
jle
into
fs
imul
xlat
xchg
xchg
add
loopne
fadds
mov
mov
add
lret
mov
mov
push
in
les
add
jmp
hlt
lea
pop
xor
push
push
call
sahf
mov
add
xchg
add
add
add
popl
ror
add
pop
cld
add
add
add
add
push
stos
add
test
faddl
test
add
add
add
add
je
add
push
sti
mov
addb
mov
jns
mov
addr16
add
xchg
add
push
add
shl
cmpsl
add
mov
lea
pop
pop
pop
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
mov
scas
xchg
mov
add
add
jl
rorb
hlt
jo
repnz
add
add
mov
lods
add
add
push
mov
int
add
add
orb
push
test
push
fsubs
add
add
push
ret
add
add
add
add
add
orl
inc
add
not
pop
pop
leave
ret
push
push
push
push
push
push
call
jle
add
test
aad
fadds
add
pop
fmulp
lret
testb
xchg
repnz
add
mov
add
shrl
xor
add
cli
test
jge
std
sahf
add
add
imul
pushf
add
pop
mov
add
imulb
std
test
cltd
add
add
stc
mov
lea
pop
push
mov
push
inc
sub
not
pop
add
push
lea
push
lea
push
push
call
mov
rorb
jbe
add
add
jnp
jae
xchg
test
imul
out
js
mov
jecxz
in
leave
cmpsl
push
add
movl
jbe
add
add
add
mov
add
cld
outsl
add
lea
add
jl
mov
add
leave
sahf
add
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
push
mov
add
mov
add
icebp
add
mov
add
add
fsubrs
data16
add
pop
lret
add
shlb
add
imul
fwait
nop
add
pop
add
out
addl
add
add
pop
icebp
add
outsl
out
add
bound
jo
jmp
lods
in
jmp
stos
cltd
add
stc
xchg
add
add
pop
push
push
xor
pop
push
push
shr
pop
push
mov
push
push
push
call
jb
xchg
arpl
pop
add
mov
lods
mov
cwtl
mov
add
gs
sahf
add
mov
add
add
add
lahf
add
cmpsb
add
add
hlt
pop
roll
stos
lods
mov
outsl
add
hlt
lea
pop
push
push
dec
sub
add
pop
pop
push
add
dec
inc
pop
lea
push
push
call
add
call
outsw
add
scas
add
arpl
mov
add
add
add
mov
in
add
mov
xchg
fadds
jno
add
add
add
nop
mov
add
add
push
scas
add
add
jmp
mov
stos
nop
in
add
rorb
mov
mov
out
loop
icebp
mov
mov
lea
pop
sub
push
sub
pop
mov
push
dec
pop
shr
add
mov
push
push
push
push
push
call
jae
push
stos
add
add
stos
stos
add
in
add
add
add
mov
rolb
cmc
outsl
add
mov
iret
add
lret
add
leave
add
gs
mov
push
add
loope
xchg
cwtl
lods
in
add
movsl
add
in
add
add
add
add
pusha
popf
outsl
add
call
outsl
mov
out
mov
lea
pop
add
pushl
push
push
push
call
roll
jne
add
cmpsl
xchg
mov
add
add
jecxz
orb
add
fst
stos
add
mov
add
popf
fldl
cli
int3
lea
add
lods
in
mov
add
fadds
lret
lods
xchg
jo
lock
add
mov
pop
add
cwtl
add
mov
mov
add
pop
add
add
add
push
aad
in
addl
mov
lea
pop
popl
mov
push
push
push
lea
push
lea
push
push
push
call
clc
pop
int3
mov
test
lcall
add
mov
outsl
mov
jle
add
mov
xchg
js
lcall
add
add
popl
mov
popl
add
add
mov
int3
in
add
mov
xchg
mov
mov
icebp
add
arpl
jno
pushf
insb
in
mov
add
cli
add
xchg
lea
pop
add
xor
push
sub
pop
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
pusha
cmpsb
jmp
xchg
add
mov
add
add
add
add
add
push
xchg
fadds
arpl
mov
add
test
pop
jbe
add
imulb
add
mov
add
hlt
add
test
add
add
in
add
add
out
add
add
pop
pop
in
add
add
pop
mov
add
push
push
lea
push
call
add
add
cltd
mov
mov
add
xchg
loopne
stos
add
loopne
popa
aad
xchg
mov
add
rolb
push
add
cmc
add
sar
movsl
mov
ret
movsl
pushf
xchg
add
push
jbe
add
add
xchg
pop
add
addr16
aam
loop
cmpsb
add
mov
clc
xchg
mov
jp
mov
lea
pop
xor
push
ror
shr
add
pop
call
add
push
push
push
lea
push
push
call
ja
mov
add
pop
mov
pushf
clc
add
pop
lds
add
add
js
xchg
add
add
sar
mov
add
ja
add
add
pushf
scas
add
leave
add
test
push
jnp
add
push
add
outsl
jmp
aad
aam
add
add
les
mov
lea
pop
nop
push
add
pop
nop
push
sub
rol
pop
cmp
je
push
add
rol
pop
nop
push
sub
not
ror
inc
pop
nop
push
lea
push
push
lea
push
push
push
call
incb
add
push
xchg
in
lds
add
add
add
mov
rcr
lods
add
add
in
add
xchg
add
add
add
lret
insb
stos
cld
lret
roll
iret
add
add
test
add
mov
add
mov
add
add
fmull
nop
push
shl
pop
nop
push
shr
lea
sub
sub
pop
cmp
jb
xor
jmp
push
push
push
push
push
push
call
add
lahf
rolb
loopne
test
insb
gs
add
insb
jbe
xchg
add
loopne
add
add
pop
jns
add
rcrl
mov
add
add
push
lock
pushf
pop
add
cld
stc
loop
pop
mov
sahf
add
fldl
add
out
in
jmp
push
add
add
add
xchg
adcb
mov
add
loope
in
add
iret
xlat
push
test
fldl
mov
lea
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
testl
push
jbe
cltd
lds
data16
ret
repnz
lods
add
into
mov
jns
add
cwtl
leave
notb
mov
mov
aad
add
out
add
rolb
pop
sti
push
ljmp
xchg
icebp
clc
jo
int
clc
push
xchg
rolb
aam
mov
fmull
rcll
call
test
mov
push
push
push
push
lea
push
call
jle
push
cmc
scas
add
arpl
cmpsl
out
arpl
add
lcall
in
andb
mov
add
fcompl
out
arpl
mov
add
xchg
mov
data16
mov
pop
add
mov
add
add
lret
add
add
test
add
mov
mov
lea
pop
movzwl
push
push
push
push
push
push
push
call
push
cmpsl
add
add
add
stc
add
cwtl
add
push
out
bound
add
mov
add
add
incb
push
enter
add
mov
out
add
pushf
mov
xchg
flds
xchg
sahf
sarb
loopne
add
push
add
gs
xchg
jb
lods
add
add
imul
add
js
js
mov
enter
cmpb
mov
scas
mov
lea
pop
mov
push
push
lea
push
push
call
mov
add
add
int3
add
mov
add
ljmp
shlb
jnp
stos
test
add
mov
add
jnp
add
add
call
scas
add
scas
jns
xchg
xchg
jnp
mov
mov
add
add
add
pop
xchg
xchg
call
add
pop
mov
lea
pop
add
push
xor
pop
mov
push
shl
shl
pop
xor
xor
push
sub
add
pop
shl
push
push
push
push
lea
push
lea
push
push
push
call
aam
add
jne
or
loopne
mov
test
addr16
add
ja
add
add
mov
in
clc
add
mov
pushf
jbe
loop
mov
loop
lret
in
pop
jp
add
add
mov
mov
fdivrl
add
add
addr16
add
stos
fdivrs
lods
repnz
add
add
sbbl
add
mov
lea
pop
xor
push
inc
rol
lea
add
pop
shl
push
add
shr
pop
xor
push
shr
add
pop
shl
push
push
lea
push
call
fdivs
add
jp
add
stos
out
andl
stos
je
push
mov
add
pop
add
popa
add
outsl
pop
add
fwait
scas
orl
add
add
add
neg
mov
clc
pop
add
push
add
add
lock
mov
fwait
cli
loop
hlt
lea
pop
xor
push
push
push
push
lea
push
push
push
push
call
lods
or
xchg
add
mov
mov
les
add
add
pop
lea
add
add
mov
add
fs
mov
add
cld
cmpl
add
jbe
add
ljmp
out
jne
add
xchg
test
add
add
clc
lock
testl
add
jae
add
scas
lds
add
add
lahf
mov
lea
pop
mov
add
pop
push
dec
pop
pop
push
pop
pop
push
push
call
movsl
mov
popf
add
test
xorb
add
jae
data16
cmpsb
lods
add
fadds
cmc
jmp
testb
mov
add
xlat
lods
js
popa
mov
test
jecxz
jecxz
ja
add
test
test
add
bnd
add
add
idiv
add
mov
lea
pop
pop
leave
push
lea
pop
ret
push
mov
push
sub
shr
add
sub
pop
push
push
push
push
shr
not
pop
push
push
push
call
addl
jmp
rcrb
add
add
in
add
testb
add
add
repnz
clc
pop
xchg
adcl
add
push
push
add
les
pop
add
add
data16
add
test
jbe
test
lds
leave
out
push
insb
jecxz
movsl
xchg
lea
pop
mov
mov
mov
push
push
call
rolb
fisubrs
xchg
aad
add
add
add
add
jo
mov
fsts
add
add
mov
xchg
sti
xchg
add
mov
add
loopne
lret
mov
test
add
add
cld
pop
je
cwtl
jne
add
mov
call
push
add
add
pop
movsl
push
add
loope
nop
add
add
fs
shrl
mov
lea
pop
test
je
mov
push
lea
pop
test
je
push
lea
push
lea
push
push
lea
push
push
call
add
outsl
cmc
mov
add
jecxz
add
add
add
add
jmp
testl
fsts
ljmp
pop
in
fisubl
lret
add
add
add
out
out
add
add
fcoms
add
cmc
cltd
pop
ficoml
add
fiaddl
popa
loop
test
popf
int3
jo
add
cwtl
mov
int3
lea
pop
mov
push
push
push
push
push
call
movsb
xchg
pop
add
add
add
add
mov
ficompl
add
rol
outsl
mov
icebp
add
fistpll
cli
incb
add
xchg
ja
add
mov
jno
pop
add
add
push
add
imul
out
jl
add
add
addr16
add
data16
into
add
movsb
popa
cmc
imul
int3
lea
pop
mov
push
sub
pop
mov
push
push
push
push
push
push
push
call
pop
add
cli
jge
xchg
add
add
push
push
fdivrs
add
imul
lahf
fildl
ret
jle
pop
icebp
negb
push
mov
add
xchg
add
jb
loope
cmpsb
jns
xlat
fimuls
std
xchg
add
add
xlat
add
mov
mov
lret
pushf
add
mov
lea
pop
inc
push
xor
sub
dec
pop
cmp
je
test
je
push
lea
push
push
lea
push
push
lea
push
call
jne
repnz
aam
movsl
mov
hlt
aad
rcl
add
add
jae
cli
pop
add
add
jbe
aad
jl
pop
mov
cltd
jno
mov
lock
testl
add
popa
add
pop
cltd
add
add
add
add
add
gs
in
add
loope
add
and
jecxz
in
test
scas
cli
xchg
hlt
lea
pop
mov
inc
push
push
push
push
push
lea
push
push
push
call
add
push
mov
jb
mov
add
add
add
add
je
jae
add
lret
pop
add
movsl
add
add
add
add
xchg
les
out
out
movsb
test
iret
in
pop
mov
pop
add
add
add
aad
mov
add
add
push
into
addb
cmc
lcall
jmp
data16
in
jne
add
mov
lea
pop
cmp
je
test
jne
xor
push
shr
ror
shl
pop
pop
pop
push
sub
inc
ror
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
out
into
add
cltd
jge
mov
mov
add
add
add
loopne
out
xchg
leave
xchg
mov
cld
add
xchg
add
add
jle
leave
lahf
test
add
sti
into
add
add
add
add
lods
mov
add
add
push
mov
gs
mov
lea
pop
pop
push
rol
shr
ror
pop
leave
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
add
jbe
mov
mov
into
mov
add
add
add
add
jmp
add
pop
add
add
mov
ljmp
decb
add
data16
add
add
cli
jne
movl
add
add
aad
insb
popf
push
mov
mov
cmpsb
movl
add
lahf
pop
adcl
push
repnz
push
call
cltd
jae
movsl
push
call
add
add
aad
jle
addl
add
add
add
add
add
push
faddl
lds
add
push
add
add
push
push
add
pop
cltd
in
lea
add
pop
sti
add
bound
add
cmc
fcmovnb
add
xchg
add
push
add
add
add
push
add
pop
inc
cmp
jne
push
push
push
push
push
call
imul
leave
add
test
add
cmc
jae
add
lock
arpl
les
enter
add
add
add
mov
shl
add
movsl
imul
pusha
mov
pop
xchg
sahf
mov
ljmp
adcl
push
add
mov
mov
lds
add
les
jle
mov
push
push
push
push
push
lea
push
push
call
test
stos
jp
xchg
scas
add
mov
mov
shll
lahf
jecxz
pusha
add
add
scas
pop
add
vpxor
in
lret
add
add
movb
add
mov
add
add
cld
mov
add
jnp
popf
push
pop
add
in
pushf
jmp
jle
add
stos
addb
add
stos
popf
iret
stos
add
insb
mov
mov
aam
bound
test
je
mov
push
ror
lea
shl
add
pop
add
cmp
jne
mov
push
not
add
sub
pop
test
je
push
push
call
mov
stos
popf
add
lods
jne
add
nop
flds
mov
fwait
add
movsl
jecxz
nop
add
add
aam
add
aad
mov
add
insb
arpl
addr16
cld
ret
add
add
imul
out
add
add
add
ja
fwait
add
aam
cld
lea
pop
mov
add
push
push
lea
push
push
lea
push
push
push
call
add
xchg
insb
push
popa
out
out
in
pop
add
push
push
add
popf
add
add
imul
pop
leave
stos
xchg
add
add
add
xlat
xchg
rolb
add
xchg
add
iret
add
mov
xchg
add
enter
ror
add
rolb
push
fcomps
jge
mov
pop
mov
lahf
cld
loope
cmpsl
gs
add
jecxz
add
xorb
int3
lea
pop
cmp
je
jmp
xor
push
rol
pop
pop
push
lea
push
push
push
push
push
push
call
add
mov
loope
mov
roll
add
insb
hlt
je
pushf
add
jge
mov
lret
stos
xchg
add
mov
add
pop
mov
sahf
push
in
push
mov
scas
add
xchg
add
add
add
add
js
add
gs
fldl
add
out
icebp
imul
add
add
rcl
jb
mov
lea
pop
pop
pop
push
sub
add
add
pop
pop
push
push
lea
push
push
push
push
push
call
add
lods
xchg
mov
xchg
mov
jecxz
add
xchg
cli
out
add
stos
add
add
in
add
mov
mov
add
arpl
jle
lret
add
mov
mov
je
push
add
add
mov
iret
add
jb
add
mov
arpl
leave
ret
lea
push
lea
push
push
call
mov
add
lret
add
add
add
lods
add
fmull
jle
scas
add
add
xchg
add
mov
push
pop
shll
add
add
int3
fcomp
add
mov
mov
push
clc
imul
add
add
add
mov
add
pop
mov
shll
cmc
push
add
call
mov
lea
pop
pop
pop
push
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
pop
add
xchg
lcall
mov
stos
add
add
add
enter
lahf
add
icebp
loopne
add
rcr
outsl
out
push
jl
nop
add
mov
add
sahf
xchg
add
jne
addb
insb
rclb
fcomp
mov
out
add
pop
mov
decb
shrb
add
lea
pop
pop
leave
push
not
sub
not
pop
ret
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
stc
mov
mov
add
pop
add
ja
add
out
imul
scas
add
add
loopne
add
loopne
add
push
add
add
data16
nop
aad
add
jmp
mov
bound
add
add
add
int
add
pop
ret
mov
popl
add
add
pop
lret
enter
cld
lea
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
add
roll
add
jle
add
add
movsl
into
add
add
cltd
add
mov
testb
add
movsl
pop
sarb
add
add
pop
pop
idivl
add
leave
lock
add
ret
mov
mov
push
in
testb
loop
fldl
js
add
add
push
les
pop
pop
push
shl
sub
dec
inc
pop
leave
ret
rol
push
push
push
push
call
add
add
loope
scas
add
in
out
lods
add
add
aad
mov
xorb
add
add
mov
jmp
movsl
add
js
add
xlat
jae
popl
hlt
add
movsb
xchg
push
jne
stc
add
mov
movb
lods
fimull
pop
rol
xor
push
rol
not
dec
pop
inc
push
add
xor
not
pop
cmpb
jne
push
push
push
lea
push
push
push
push
call
loopne
xchg
stos
cltd
aad
add
pop
add
add
push
add
add
scas
ror
int
cld
add
add
jns
cli
mov
add
xchg
xchg
add
add
mull
lahf
jp
mov
stos
sti
add
movsb
icebp
mov
xlat
stos
mov
xchg
add
add
add
les
push
add
faddl
mov
push
add
jbe
fmull
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
add
sti
movsb
andl
sti
pop
test
sti
insl
pop
mov
sti
movsb
shlb
sti
cld
loop
and
pop
sbb
mov
add
into
or
arpl
sbb
into
sahf
cmpsl
fsubl
push
imul
call
gs
inc
adc
call
aas
xor
sbb
mov
fsubs
mov
movsl
or
mov
int
leave
inc
mov
lods
push
mov
jg
jle
sub
int3
cli
sub
pop
cmp
mov
sub
pop
sbb
les
mov
jge
sub
xchg
sub
and
push
je
sub
pop
imul
add
inc
push
sub
addr16
jne
stos
mov
lahf
aaa
adc
dec
mov
mov
outsl
sbb
xor
mov
jp
cmp
pusha
jecxz
out
or
negl
je
xor
pop
xchg
dec
and
dec
mov
mov
jnp
dec
push
pop
sub
arpl
adc
stc
push
push
pop
mov
adc
inc
lcall
dec
aas
lds
mov
int
fstpl
pushf
repz
stos
xor
xchg
pop
fistpl
mov
jl
add
cmp
or
repnz
imul
mov
imul
adc
sbb
ja
pushf
pop
mov
jle,pt
stos
push
add
rorl
dec
mov
insb
xchg
mov
stos
dec
stos
rcll
pusha
mov
cmp
push
jb
imul
xchg
clc
cmpsb
in
xchg
mov
flds
leave
inc
push
mov
fnstcw
mov
gs
xor
jne
add
xchg
push
mov
stos
in
ret
pavgw
and
arpl
sbb
insl
jae
push
nop
add
orl
jne
jg
in
sbb
inc
mov
scas
outsl
cli
or
sub
test
cld
sbb
les
rcrl
cmp
add
push
dec
xor
pop
dec
rolb
pop
sub
adc
out
jae
mov
push
dec
sbb
mov
xchg
test
icebp
out
sbb
mov
sahf
lcall
aaa
iret
or
shrl
dec
daa
addl
pop
fldl2t
pop
movsb
int3
xlat
mov
jmp
push
sbb
ret
sub
pop
hlt
stos
sahf
cmpl
jle
or
aad
jecxz
adc
jne
push
xor
jb
mov
mov
mov
aaa
jle
fisttpl
jo
nop
inc
pop
rcrl
popf
std
ss
mov
in
sub
loopne
xchg
stc
fsubr
sub
addl
dec
ljmp
cli
sti
sbb
jmp
push
shlb
in
test
mov
mov
xchg
mov
cs
popa
add
ret
leave
adc
fiaddl
xor
movsb
push
movsl
in
aaa
sbb
sbb
sub
xchg
leave
scas
sub
movsb
je
dec
and
js
or
leave
mov
sub
cmp
mov
xor
mov
jb
je
stos
test
adc
mov
sbb
xor
notl
and
cltd
jnp
pop
out
dec
xor
mov
xor
inc
cltd
mov
xor
jle
sub
fdivs
icebp
inc
stos
lock
mov
jbe
das
mov
popa
testb
xchg
and
sub
dec
push
pop
loopne
addr16
pop
pop
insb
xchg
or
sub
stc
push
dec
loopne
sbb
adc
push
call
pop
cmpl
pop
loope
addl
gs
aas
or
ljmp
inc
pop
aaa
jecxz
adc
sbb
popf
xor
jb
or
adc
nop
std
and
cmp
jne
mov
dec
cmp
ljmp
cmp
jno
mov
inc
lods
mov
mov
shr
adc
xchg
shl
cwtl
sub
fidivl
pop
lret
jle
in
jg
pop
xchg
imul
in
xchg
clc
dec
jmp
sub
mov
xchg
test
ret
inc
push
roll
jne
cltd
pop
stos
or
adc
mov
add
insl
clc
roll
mov
pop
mov
sub
dec
cmp
pop
push
sbb
cmpsb
int3
inc
add
jecxz
cmpb
dec
testb
data16
dec
dec
out
xor
call
lret
cmpsb
fwait
xor
and
or
outsb
xchg
stos
push
add
aam
xchg
xor
mov
push
rorl
loope
jnp
mov
movl
lret
les
push
notb
imul
jae
repnz
xor
leave
xchg
jecxz
nop
and
mov
push
cmpsl
dec
mov
mov
frstor
ss
mov
and
lcall
adc
arpl
movsl
jle
lret
out
dec
mov
nop
lea
lahf
insl
fdivrp
or
test
jne
mov
inc
jecxz
push
cld
or
push
dec
mov
mov
in
stos
adc
push
mov
adc
pop
adc
cwtl
mov
mov
ljmp
ljmp
inc
arpl
movsb
or
lret
arpl
cmp
fildll
xchg
stos
iret
pop
loop
insl
test
sub
fmull
daa
pusha
fsubl
movsl
shlb
and
icebp
repz
lahf
clc
pop
popf
insb
rclb
jmp
shl
cld
jo
jno
lock
push
dec
sbb
fistpll
pop
fstps
popf
not
push
inc
cltd
scas
sarl
std
mov
push
lahf
mov
push
sub
jp
cltd
ret
xchg
dec
subb
jecxz
jmp
sub
jge
pop
push
cmp
pop
popf
adc
inc
cs
and
into
sub
fxch
pop
cmc
cmpb
xorl
pop
adc
push
into
enter
mov
and
push
xor
gs
adcb
subb
pop
jae
outsl
inc
pop
sbb
outsb
sbb
das
jbe
call
pop
mov
fisttpl
mov
int
cmp
cmpsb
xchg
xchg
cmp
sub
pop
mov
ds
mov
data16
pop
push
out
or
shl
lea
and
call
outsl
out
lret
mov
movzwl
jge
pop
inc
add
jbe
xor
push
jns
imul
jge
mov
push
xchg
loopne
lahf
cmc
aam
mov
jae
je
lcall
decb
inc
xchg
popa
and
and
mov
sbb
push
push
mov
js
mov
scas
in
sbb
movsbl
outsb
cs
or
or
xor
aad
add
insl
push
in
pop
mov
mov
cmp
add
adc
ds
pop
ds
idivb
js
adc
sbb
sti
cltd
ret
sub
pop
adc
sbb
adc
scas
jne
mov
and
jg,pt
xor
add
xor
cmpsl
push
push
fwait
aad
adc
mov
out
ffree
into
gs
leave
ds
pop
loopne
movsl
idiv
adc
lods
repz
sbb
inc
jae
mov
pop
mov
addl
add
or
push
enter
push
aas
mov
mov
jo
pushf
imul
push
xor
shlb
push
pusha
inc
lods
jo
mov
andb
test
cltd
jbe
into
mov
mov
jo
xlat
loop
pop
add
sub
xchg
fsubrl
mov
paddd
dec
dec
rorl
adc
les
mov
in
sub
push
cmpsb
stos
std
or
sbb
mov
jne
leave
arpl
hlt
stc
lock
jmp
or
and
pop
cmp
gs
test
pop
xor
pop
in
pop
add
add
or
fisubl
fsubr
outsb
mov
push
js
pop
daa
fwait
dec
outsl
dec
imul
jno
in
popa
xchg
test
into
cltd
jge
fsts
ret
lretw
jl
mov
mov
cmp
inc
adc
xchg
rcrb
pop
iret
test
dec
out
pusha
cs
in
add
popa
jne
mov
mov
push
jge
mov
ja
jo
loopne
inc
int3
in
pop
sbb
lgs
in
xor
decb
add
out
jmp
ret
push
push
dec
pop
mov
push
inc
lret
add
stos
jge
insl
daa
aam
push
pop
cmpsl
xor
lods
lret
lock
push
adc
adcb
aad
jnp
stc
push
lods
adc
pusha
insl
inc
xchg
iret
mov
dec
and
dec
add
mov
jge
pop
and
imul
scas
or
repnz
inc
mov
and
cmc
int3
imul
popf
adc
mov
add
insb
aad
lcall
or
inc
jns
mull
dec
aam
popf
mov
push
out
push
push
add
into
or
clc
add
scas
inc
rcl
leave
out
stos
lds
push
xchg
adc
jg
std
in
es
pusha
les
push
dec
pop
daa
shl
adc
jo
sub
jge
out
mov
mov
and
sahf
xor
test
pop
inc
sbb
xchg
pusha
lds
push
repz
sbb
cltd
inc
enter
leave
mov
out
mov
mov
stos
sub
mov
loop
pushl
cs
push
or
push
sub
mov
or
mov
lret
fidivrs
sbb
pop
pop
out
jp
and
pop
movsl
add
fdivrl
mov
pusha
sbb
repz
icebp
data16
test
cltd
clc
inc
sahf
push
jl
xor
sub
loopne
xchg
and
adc
push
out
xor
jmp
aad
movsl
loop
jg,pn
xor
outsb
add
jnp
ja
mov
xchg
ds
push
inc
rcrb
add
jg
test
scas
xchg
inc
cmp
add
jns
addr16
divb
cmpl
inc
mov
rcll
xor
or
adcl
pop
xor
and
xor
mov
add
js
mov
sbb
ljmp
adc
xchg
add
aas
outsl
mov
test
and
lret
les
cmc
stos
mov
pop
sarb
ss
test
mov
jg
or
or
mov
int3
add
sbb
out
out
pushf
xchg
inc
pop
push
loop
hlt
push
jl
daa
sahf
cmp
pop
repz
insl
add
pop
adc
xor
in
fcomps
insl
imul
lea
xchg
test
lea
jno
imul
jbe
mov
xor
inc
push
jo
lods
pop
in
jmp
out
mov
jo
xchg
cmp
pop
bound
lds
into
pop
xchg
pop
fisttpll
ret
fdivs
enter
les
out
flds
sub
jmp
adc
test
in
and
jmp
mov
inc
xor
fdivs
push
sbb
out
pop
ljmp
subl
rclb
mov
xchg
and
jbe
test
jno
xchg
cmpsl
jge
dec
lds
cmp
imull
mov
scas
inc
addb
repnz
orl
or
or
pop
sarb
dec
clc
arpl
adcb
mov
xor
fdivrs
and
shl
adc
test
loope
shl
push
push
jnp
xchg
cld
sbb
in
outsl
enter
cmp
jge
cmp
test
loop
jmp
push
xor
or
jne
add
and
mov
scas
mov
fstl
xchg
out
ds
sti
pop
sahf
stos
add
adc
cwtl
cli
lcall
lret
xchg
adc
dec
inc
or
dec
lret
or
iret
push
cmc
incb
push
add
xchg
pop
ret
js
xchg
add
sbb
jmp
imul
bound
cs
call
push
loopne
fisttps
xor
pop
cmp
enter
repz
sbb
cli
mov
pop
mov
shrb
addr16
mov
ret
rolb
adc
shll
popa
es
sbb
or
sub
push
aad
les
hlt
or
xchg
in
push
add
gs
adc
and
jne
cmp
mov
pop
jmp
inc
xchg
mov
sub
pop
outsl
or
into
and
add
xor
das
sub
cmp
pushf
call
push
mov
xor
jb
mov
dec
mov
jmp
adc
scas
and
out
sbb
adc
fs
shl
idiv
fstps
jmp
movsl
cmp
adc
pushf
push
mov
dec
test
xor
add
lea
lret
ficoml
and
out
mov
fsub
enter
and
ret
xchg
imul
add
sarl
pop
mov
in
adc
fs
bnd
adc
pop
popf
aam
pop
sbb
inc
faddl
mov
jno
inc
push
sbb
mov
rclb
jecxz
je
ja
inc
je
movsl
pop
dec
jae
dec
hlt
hlt
mov
and
dec
mov
sbb
cmpsl
push
movd
sarl
push
pop
xor
sbb
xor
sahf
pushf
mov
jnp
and
repnz
daa
ds
arpl
inc
cmpsl
into
dec
and
push
ds
ds
sbb
lret
pop
xchg
xchg
xor
pop
or
mov
hlt
sbb
iret
cmp
mov
cmp
pusha
add
xchg
cmpsl
movsb
aam
mov
and
cltd
mov
int3
pusha
int3
push
xor
pop
sub
sahf
das
insl
fisttpll
sarb
mov
test
sti
in
sub
pop
loop
push
mov
cmp
loopne
add
and
jno
imul
roll
out
adc
ja
pop
das
push
pop
div
shl
jo
add
sub
fldcw
out
mov
in
cmp
sar
mov
push
push
leave
and
call
cmpl
ss
mov
das
stc
stos
mov
testb
addl
ljmp
subb
mov
mov
add
jle
loope
not
cmpsl
daa
cld
jmp
xorb
pop
mov
mov
adc
repz
xchg
mov
mov
xor
dec
data16
mov
in
addb
enter
cmpsb
icebp
mov
jae
call
jb
pop
xchg
cmp
and
mov
cmp
or
int
ficompl
add
push
lock
rorb
ja
cmp
lock
ret
lea
xor
fdivrl
lea
or
pop
and
xchg
daa
outsb
mov
mov
insb
or
out
test
xor
out
cmc
dec
bound
jo
and
jle
xlat
insl
cmpsb
sahf
lock
aam
bswap
subl
and
mov
push
jl
cs
jbe
push
pop
filds
fcmovnb
sti
xchg
popf
pop
mov
test
les
mov
push
push
ror
sti
push
inc
xor
xchg
sub
and
jmp
sub
jle
loopne
out
push
pusha
mov
loopne
adc
hlt
ss
out
sbb
push
aas
gs
xor
ja
loope
aad
xor
mov
pop
in
xor
mov
movsb
push
lcall
pusha
out
xlat
sub
imul
addb
sub
cmp
jp
xchg
push
adc
cmpsl
sub
cli
sbb
and
adc
cmpsl
push
lods
dec
addr16
stos
repnz
aad
fmuls
ja
mov
lcall
fcmovne
dec
in
adc
popa
sarb
movsb
dec
push
rol
or
fs
xchg
sbb
rep
pop
and
stos
repnz
dec
test
ret
int3
push
add
pop
test
aaa
or
mov
pop
push
mov
test
movsb
push
add
lcall
xchg
divb
or
test
cmp
pop
push
jbe
sbb
mov
xor
xchg
pop
mov
mov
push
adc
or
andl
mov
lea
cwtl
fs
mov
add
jno
and
out
cmp
addb
addr16
jge
cmp
cmp
pop
add
fnsave
jns
xchg
gs
sbb
ja
mov
or
int
pop
adc
push
mov
push
repnz
jno
movsb
xchg
sbb
xor
cli
std
loop
out
pop
jle
loop
xor
inc
jecxz
cmp
pop
jnp
fistl
lahf
hlt
or
jmp
dec
or
pop
push
sub
lahf
xchg
scas
into
push
adc
add
fsubr
loope
mov
pusha
aaa
and
xor
mov
movsl
idiv
enter
mov
push
aam
and
ljmp
jmp
xchg
pop
in
das
lret
sbb
mov
adc
push
cmp
jb
es
cmpsl
mov
leave
orb
lea
test
push
icebp
repz
sahf
ja
cli
faddp
jge
imul
xor
stos
aaa
jl
les
or
mov
pop
sub
xchg
cs
jg
decl
mov
mov
inc
sbb
push
stos
roll
push
dec
sub
push
inc
xchg
mov
push
shrl
je
sbb
mov
add
adc
mov
loopne
xchg
rolb
aas
sub
test
sub
pop
or
inc
ljmp
cmpsl
pop
inc
test
or
mov
hlt
imul
dec
mov
aaa
and
or
jo
rclb
ret
xor
xor
push
sarb
les
stc
jmp
divl
lea
std
bound
adc
aad
push
jae
out
sub
xchg
enter
addr16
jmp
popf
std
lahf
xorb
xchg
insb
ficoms
mov
les
cwtl
or
pop
mov
sub
cmpb
mov
jb
bound
pop
out
jl
adc
mov
dec
lcall
mov
sahf
or
cmp
adcl
adc
jecxz
mov
js
pop
orb
fsts
lcall
cmp
orb
test
adc
lret
and
push
inc
movsl
add
out
lods
pop
push
mov
or
clc
or
out
push
and
nop
pop
mov
std
das
jo
mov
rclb
loop
fimull
cld
dec
cli
sub
inc
add
in
cwtl
adc
and
jge
jp
dec
rcll
jae
sub
sub
adc
jo
enter
mov
icebp
incb
in
push
outsb
ja
mov
xchg
repnz
cld
xchg
mov
fisttpll
pop
lea
adc
xor
cmpsl
aaa
or
add
mul
movsl
xchg
test
xchg
cmp
fldcw
xchg
sub
xor
push
sbb
adc
cmp
pop
xor
cmp
das
test
in
outsb
xor
push
cld
adc
cmp
movsb
bound
xlat
pushl
sbb
or
sub
outsb
subb
ss
xchg
push
jle
add
ss
rorb
adc
test
aam
in
xor
sti
rorl
mov
addr16
push
add
orb
xor
inc
lret
inc
stos
mov
pop
stos
push
jmp
push
jecxz
push
mov
addr16
xchg
test
icebp
out
add
xor
jle
xor
stos
xchg
mov
fst
push
repz
sarb
lea
js
daa
mov
sub
aas
jns
cwtl
lock
insl
add
mov
xchg
test
in
ss
cmpsl
bound
test
pop
fstps
mov
ss
repz
std
cmpsl
mov
mov
adc
pop
push
mov
or
adc
in
imul
xor
pushf
insb
sub
jns
pop
and
pop
mov
and
push
repnz
cmp
lcall
cmp
ja
and
call
mov
xchg
and
les
xor
pop
pop
lret
push
jnp
inc
bound
nop
rcll
jg
sub
int
sub
int3
ds
cmc
stos
add
popa
cmp
cmpsb
fsubl
dec
pop
push
adc
loopne
mov
mov
lock
or
movsl
lret
dec
xlat
mov
xchg
xor
jno
arpl
js
popa
inc
push
loopne
int
hlt
call
shlb
jnp
pop
int3
sub
inc
jbe
dec
xlat
lods
inc
sub
jmp
sbb
shlb
cmp
lret
aaa
mov
leave
sbb
push
inc
iret
push
insb
push
pushf
cmp
int3
or
je
test
or
jecxz
out
adc
mov
sub
hlt
or
mov
mov
inc
ds
les
js
mov
test
or
jmp
hlt
dec
les
mov
sub
cmpsl
fsubrp
push
test
mov
adc
jmp
mov
clc
pop
cld
sbb
loopne
dec
jg,pn
movsl
pop
fidivrs
cld
sbb
cltd
push
int
push
test
aad
push
mov
pusha
add
sbb
or
inc
inc
mov
push
scas
sub
mov
rcrb
aad
dec
or
mov
repz
out
cmc
inc
mov
push
jns
outsb
xchg
cli
call
pop
lds
jno
int3
lds
pop
jge
dec
call
mov
lods
cmp
aam
pop
push
and
mov
xchg
stos
sub
dec
dec
ret
repnz
test
sub
loop
jmp
mov
aaa
lret
xor
data16
jge
stos
insb
sbb
jns
call
inc
push
imull
roll
sub
test
mov
cli
rclb
popa
jle
xor
or
ffreep
icebp
mov
in
aam
cwtl
jmp
xor
aas
fsubrs
jb
cmp
xchg
push
dec
xchg
mov
in
ret
leave
jle
outsb
dec
xchg
add
lret
push
lea
scas
dec
mov
sbb
cmpsl
push
inc
xor
and
fnstcw
into
int3
dec
push
jns
fs
add
mov
test
mov
inc
ljmp
es
and
pop
pop
ss
and
popl
scas
add
sub
out
pop
sub
add
add
mov
ss
stos
out
hlt
pushf
cmp
loop
mov
lret
test
in
and
or
lahf
imul
sbb
js
add
in
dec
lret
roll
int
xchg
adc
je
jge
xor
maxps
mov
pop
les
inc
mov
enter
adc
xor
push
in
mov
cmp
lahf
ret
repnz
int
hlt
jb
fisttpll
cli
and
inc
enter
mov
pop
adc
ret
cmp
clc
and
inc
cld
xchg
push
stc
les
popa
in
dec
mov
cmp
cmp
in
lds
jb
arpl
pushf
xchg
imul
stos
xchg
std
add
add
xchg
jae
js
or
xchg
pop
push
or
cmc
lock
ljmp
leave
push
jns
loop
scas
dec
ret
sbb
lock
test
mov
dec
lds
mov
test
mov
insb
mov
jecxz
add
jb
lods
daa
and
add
mov
out
mov
movsb
loope
les
or
pushf
insb
jne
push
into
pop
movb
dec
xlat
std
movsl
ret
cmp
je
push
std
test
gs
arpl
xor
cwtl
lret
repnz
adc
jo
push
add
adc
mov
insb
push
dec
push
adcl
adc
icebp
mov
pop
cs
cmp
idiv
out
scas
add
js
fadd
pusha
movsl
dec
movsl
or
out
add
mov
icebp
push
mov
cmpsl
adc
in
out
rcl
pusha
int3
jl
xlat
jns
inc
sbb
call
mov
dec
mov
movsl
cli
sti
data16
dec
mov
lahf
push
push
fs
jno
jp
push
imulb
imul
test
jge
push
add
rolb
inc
mov
in
jne
xor
lds
cli
test
cs
jnp
popa
and
adc
cmpl
ljmp
jbe
lds
inc
cmp
pop
or
out
outsb
dec
cmp
movsl
fisubl
repz
mov
pushf
and
iret
out
cli
cmp
dec
gs
sub
scas
dec
jnp
mov
xor
pusha
mov
push
pop
and
ret
sahf
popf
and
push
pop
jns
push
cmp
ret
and
movsb
mov
push
mov
lcall
pop
clc
push
scas
push
cltd
mov
add
bnd
shrb
push
sub
and
cmp
inc
inc
outsl
sahf
sub
das
and
mov
loopne
push
mov
mov
es
es
sbb
out
push
stc
inc
lahf
sub
jg
pushf
lea
xor
dec
lods
push
mov
popa
rorb
fmuls
pop
aad
mov
xlat
push
cmpsb
mov
enter
and
cs
lret
ds
lret
shrl
movsb
out
adc
jg
mov
fisubrl
neg
adc
mov
mov
adc
adc
xor
and
pop
xor
mov
sbb
dec
das
add
and
lret
mov
hlt
add
outsb
jle
mov
pop
pusha
adc
lahf
adc
stc
or
fistps
and
fisttpl
cltd
dec
cmp
or
push
or
mov
mov
test
popa
and
mov
or
stos
scas
aam
pop
xorl
adc
rcll
and
and
xor
push
arpl
dec
stos
pop
cli
lock
mov
jbe
outsl
ss
inc
aam
int3
push
add
pushf
std
mov
sbb
cwtl
jl
nop
adc
aad
das
scas
out
mul
cwtl
gs
sarb
iret
xchg
sub
xor
pop
test
mov
push
nop
cmp
shl
push
mov
out
mov
xor
gs
push
in
sbb
add
cmpsb
xchg
jbe
stc
insb
jle
insl
std
outsl
mov
movsl
out
lock
xchg
aad
enter
push
les
mov
cs
mov
gs
lock
sub
lret
jp
cmc
and
mov
test
fs
icebp
xchg
or
cmp
test
xchg
xor
aaa
pop
sub
rclb
mov
in
rcrl
test
lock
loopne
dec
addr16
les
daa
pusha
adc
pop
aas
jo
add
test
push
mov
jb
inc
mov
adc
mov
xchg
not
lds
cmpsl
pop
icebp
push
popa
loope
dec
mov
mov
les
sbb
jle
xchg
jnp,pn
mov
insb
jp
jp
notb
sub
lahf
repz
movsb
cmpl
cmp
dec
cwtl
pop
std
cli
fisttpl
fmulp
stos
cmp
pop
cli
mov
or
add
cmp
jecxz
add
push
stos
and
imul
xchg
cmp
notb
ret
test
cld
pop
and
movsb
mov
fildll
sbb
add
xchg
sub
push
test
jns
ror
jmp
stos
cmp
test
iret
shlb
jge
es
scas
filds
add
dec
mov
hlt
push
lock
lret
xchg
inc
enter
adc
pop
sbb
sub
das
add
pop
imul
shl
insl
lret
rcrl
outsb
repz
xchg
cs
incb
dec
cmp
inc
dec
inc
add
imul
inc
mov
je
lods
and
add
push
push
mov
dec
inc
lods
popa
sub
bound
lods
push
sahf
in
adc
int
cmp
mov
xchg
mov
xchg
shll
inc
mov
lods
dec
cwtl
dec
ds
inc
inc
inc
adc
jae
mov
js
sarl
push
cld
pop
jge
xor
jno,pt
das
aaa
into
movsb
ficoms
or
hlt
incl
and
push
mov
imul
mov
pushf
mov
rcr
mov
in
push
or
jg
fisttpll
outsl
popf
scas
or
ret
sbb
repz
js
fadd
xchg
sahf
hlt
cli
lds
repnz
fiadds
xchg
jns
adc
dec
jnp
mov
sub
pop
gs
lds
or
cmp
xchg
testl
add
inc
cmp
aam
or
call
test
mov
jne
dec
sub
mov
repz
fldt
jbe
decb
xor
sbb
mov
mov
and
shrl
cmp
sbb
enter
imul
cmpsb
mov
dec
push
aaa
mov
or
jae
jp
imul
rclb
or
in
inc
mov
pop
or
fnstcw
jg
mov
loope
pushf
inc
sahf
test
scas
sbb
pusha
out
mov
push
jns
notl
nop
nop
push
test
sbb
stc
mov
lods
jnp
xchg
pop
call
scas
sub
test
xchg
cli
int3
and
lods
push
in
lret
push
int
mov
mov
mov
ss
into
fidivl
mov
and
scas
jp
or
cltd
xor
mov
movsl
scas
xor
push
dec
iret
outsb
jge
test
sub
rcll
sbb
jo
outsl
inc
or
push
inc
lods
scas
mov
lods
adc
adc
clc
aam
jae
jmp
ret
mov
imul
sbb
daa
mov
aaa
cltd
inc
mov
pop
outsb
pop
in
mov
inc
jmp
and
add
mov
dec
leave
subb
inc
push
test
sub
mov
xchg
rcrb
icebp
or
jecxz
addr16
int3
xor
out
mov
popa
dec
mov
sub
add
cmp
in
and
cmp
sbb
jns
popa
out
mov
hlt
lods
xchg
arpl
sbb
lret
sub
std
jp
cmp
iret
pop
push
lds
jae
sub
repnz
shr
inc
mov
mov
or
leave
jecxz
jle
shrl
test
jecxz
popa
pop
push
lea
push
pop
ljmp
mov
pusha
and
test
mov
sbb
xor
lahf
daa
push
xchg
mov
movb
mov
sbb
xor
mov
fsts
mov
subl
dec
sbb
jge
sahf
ds
mov
mov
out
repnz
cltd
push
arpl
mov
inc
stc
mov
sbb
sub
mov
mov
cmpsb
mov
or
xor
xchg
sub
imul
call
andl
mov
xor
es
sbb
jne
cmp
in
ljmp
adc
fildl
mov
rcl
mov
ret
int3
lret
adc
dec
in
into
loope
cmp
adc
pop
test
enter
inc
push
jne
xlat
std
mov
mov
or
pop
cli
xor
in
mov
add
xchg
pop
cli
xchg
push
jp
sub
xchg
push
xor
jecxz
shll
pushf
bound
pop
arpl
cmc
jb
in
xchg
jb
xlat
xchg
inc
aas
out
shrb
psrad
jne
dec
mull
ljmp
or
inc
aas
rorl
xchg
dec
out
adc
push
icebp
loop
jge
add
repnz
mov
leave
add
cmc
fstpt
in
mov
mov
sub
sbb
lcall
mov
cs
fmuls
push
lods
in
sub
pop
les
mov
add
and
dec
push
arpl
mov
and
lea
sub
and
rcl
cmpsl
add
or
mov
shl
clc
in
xor
push
inc
ljmp
sub
pop
arpl
inc
jno
enter
mov
cmpsl
sub
je
dec
push
negb
ret
inc
aas
xchg
in
scas
hlt
shl
fnstenv
ret
xchg
xchg
inc
push
in
in
dec
fcomip
add
pop
aaa
xchg
scas
pushf
mov
scas
mov
dec
pop
js
jbe
push
int3
jle
add
iret
adc
jg
arpl
jbe
push
or
xor
jno
and
pop
out
imul
iret
xchg
dec
in
cmpb
test
mov
push
inc
sub
jns
dec
mov
loop
loope
dec
cli
jo
mov
fimuls
popf
cs
pop
repz
cmpsb
cmp
and
in
push
mov
adc
xchg
dec
fisubrl
popa
movsb
scas
and
sbb
xchg
test
add
cmp
xor
pop
mov
jns
rcrl
xchg
test
in
or
mov
sahf
rcrb
sub
aaa
aas
xor
pop
sbb
nop
dec
push
pop
outsl
ror
push
bound
lret
add
add
fwait
popa
jp
xor
idivl
pusha
xchg
xor
jp
movsl
mov
and
sbb
jae
scas
pop
adc
or
ror
add
shrl
cwtl
jo
and
mov
xchg
dec
jp
mov
ret
pop
mov
jge
xchg
xchg
inc
jne
xchg
int
add
test
lret
mov
mov
scas
mov
lahf
mov
loopne
sub
push
pusha
lahf
xor
xchg
push
push
test
cmpsl
jmp
fsubl
loop
add
push
sbb
or
cmp
in
adc
sbb
mov
sbb
fiaddl
jg
push
pop
scas
or
xchg
pushf
push
in
sub
pushf
stc
cmpsb
in
sti
cwtl
cmp
inc
outsl
lock
insl
fnstenv
jl
mov
movsb
cs
and
enter
add
retw
cld
pop
clc
test
push
xchg
arpl
cmp
mov
mov
ds
nop
in
xor
outsb
or
imul
mov
in
sbbl
xchg
xor
jns
push
push
shl
and
mov
mov
add
jmp
aaa
ljmp
xor
call
std
ret
insl
fcoms
and
addb
inc
stos
div
sub
add
mov
mov
pop
xchg
jmp
int
dec
push
add
das
push
dec
push
mov
lock
sarb
shl
cltd
mov
fs
scas
mov
adc
mov
push
xor
fisubrs
adc
or
dec
dec
jns
bound
fwait
dec
popf
xchg
sub
mov
sub
and
jmp
fs
mov
sub
les
push
je
loope
mov
push
cld
mov
aas
loop
add
add
mov
adc
mov
inc
mov
dec
dec
dec
fsubrp
fsubs
cmp
lds
lods
add
jmp
loopne
mov
dec
aam
into
jge
push
pop
mov
jnp
fmulp
mov
xor
stos
imul
push
sub
clc
mov
inc
aas
ja
arpl
test
sbb
das
ljmp
movsb
jge
dec
push
pop
lods
cmp
out
cmp
pop
mov
movq
and
loop
iret
mov
sub
mov
insb
jne
pop
fdivp
and
xchg
call
in
jns
loop
add
inc
jnp
and
dec
sbb
xor
adc
sub
shld
push
jp
jmp
push
or
mov
cmp
or
test
out
clc
ja
mov
sub
mov
jle
out
test
mov
mov
rclb
daa
xor
mov
jns
jg
sbb
scas
lcall
outsl
sub
pop
push
fwait
mov
call
and
xchg
cli
pushf
jp
jns
push
or
sub
popa
lcall
stos
shll
push
adc
insl
test
sbb
insb
ret
xor
daa
and
mov
fisttpl
popa
insb
xchg
mov
cmp
cmp
mov
sbb
xchg
push
cwtl
pop
lds
arpl
int3
icebp
ds
push
add
jg
and
adc
lea
adc
cmp
sbb
mov
xchg
clc
out
cld
xor
sti
xor
subl
cmpsl
sbb
and
push
mov
ds
push
mov
xor
pop
jae
addr16
stos
cmc
mov
jne
into
dec
mov
mov
dec
dec
outsb
ficoms
inc
and
call
cs
sub
jne
push
scas
inc
callw
mov
mov
xor
cmpsb
xchg
ret
mov
in
cmp
inc
lock
cmp
stos
inc
sbb
cmp
add
les
xchg
ss
mov
aas
mov
adc
shll
or
lret
inc
sub
push
fdivl
arpl
mov
cmp
jmp
fdivs
cmp
mov
in
clc
xor
mov
inc
out
leave
mov
inc
inc
repnz
push
mov
pop
mov
mov
pop
xchg
sbb
push
adcb
fs
iret
repnz
ds
hlt
and
cltd
and
and
testl
in
mov
push
dec
daa
cmp
xchg
pop
jnp
lods
push
push
xchg
aam
cld
push
mov
test
mov
pop
cltd
mov
out
cmp
pop
leave
cmp
jb
cwtl
lahf
xchg
xchg
push
sub
test
jge
jmp
sahf
pop
insl
mov
mov
dec
xchg
rcl
sub
sbb
hlt
push
sbb
imul
add
mov
insb
dec
mov
es
es
scas
pop
cmpsb
add
bound
and
inc
sbb
sub
push
les
jge
je
sti
leave
out
arpl
or
cmp
xor
fstl
fwait
lds
mov
dec
dec
cld
mov
dec
mov
fistl
aam
sbb
inc
stos
push
xor
push
shr
iret
rol
sbb
adc
or
rol
push
sbbb
sti
mov
hlt
outsl
int3
pop
jb
pop
xor
mov
xor
cmpl
pushl
shlb
xchg
fwait
mov
lea
dec
jle
iret
outsl
mov
cmp
aaa
mov
mov
pop
test
outsb
xchg
dec
imul
xchg
or
push
and
push
mov
cs
adc
shlb
cmpsb
mov
sub
push
inc
mov
mov
push
mov
not
popf
shr
cmp
mov
fs
sub
pop
pop
and
int
jae
cwtl
add
adc
ss
inc
not
subl
adc
push
and
mov
shr
mov
rol
andl
inc
inc
das
andl
dec
enter
dec
lods
and
jns
rcrl
inc
rcrl
fadds
lods
loopne
dec
adc
into
jge
xor
aaa
and
and
mov
xchg
xor
push
jne
cltd
cld
cli
js
mov
push
push
cmc
pop
fbstp
mov
inc
jg
mov
push
adc
mov
rorl
in
and
cli
cmp
int3
daa
je
movsl
push
lret
ja
aad
pushf
xchg
dec
into
adc
xchg
jo
push
cmp
lret
ss
xchg
and
cmp
pop
mov
jne
lods
and
jle
cli
out
pop
insb
mov
dec
pop
or
jne
mov
or
fcom
jb
mov
pop
cwtl
mov
dec
xor
and
inc
pushf
cs
movsl
stc
gs
mov
je
push
xor
out
push
mov
mov
xchg
inc
or
and
imul
scas
and
sbb
mov
pusha
pop
inc
std
mov
lods
mov
daa
and
cmp
push
xchg
loope
aas
sbbb
leave
add
repnz
pop
or
ret
sub
jmp
in
adc
out
inc
adc
sahf
pop
pop
mov
jb,pn
imul
cmp
jnp
shrl
mov
loop
and
rcrl
jae
es
cli
cmp
or
or
in
inc
pop
sbb
cltd
pop
sbb
cmp
add
dec
pop
push
push
cld
mov
pushf
mov
jbe
xchg
or
jb
outsl
push
fstps
xor
push
or
daa
inc
mov
pusha
pop
fistpl
shll
rolb
rorb
das
aaa
cmp
mov
movsl
jns
xchg
icebp
cmpsb
jg
or
dec
inc
aam
or
dec
cwtl
js
jmp
jecxz
mov
sbb
loop
pop
cmp
mov
push
xor
mov
pop
push
cltd
dec
lods
jb
sbb
jg
pop
inc
inc
cmc
mov
loop
push
je
ret
loope
push
xor
movsb
aaa
mov
pop
lcall
mov
xlat
push
xchg
iret
lahf
imul
iret
hlt
test
and
cmp
jg
mov
nop
shlb
push
mov
push
aad
pop
pushf
sbbb
ja
sbb
adc
and
test
push
rep
push
cmp
shll
cwtl
sahf
out
outsl
adc
pop
rorl
jecxz
faddl
pop
adc
jp
mov
pop
inc
mov
lock
lea
popa
lret
aas
mov
fimull
or
add
jg
out
cmpl
std
jbe
add
mov
push
cltd
lahf
addr16
test
mov
cmp
enter
pop
insb
loopne
jae
int3
hlt
xchg
sub
jle
push
push
add
out
pop
push
lods
jge
push
roll
mov
add
stc
psrld
mov
xchg
pushf
es
xlat
leave
popa
jle
xor
pop
out
sub
mov
inc
sub
shl
cld
fildl
icebp
sbb
pop
sbb
dec
imul
jecxz
sub
xor
sbb
dec
pop
lods
xchg
dec
xlat
mov
nop
in
or
sbb
and
pop
mov
dec
lods
hlt
xchg
arpl
ss
inc
xchg
push
adc
mov
cmp
out
inc
xor
jb
fnstcw
sub
push
cli
ljmp
sub
mov
stos
icebp
dec
dec
iret
pop
mov
lret
jnp
lret
fcompl
mov
xlat
fldcw
daa
insl
push
cmp
popf
inc
into
int
cmpsl
or
or
inc
aaa
xor
xchg
add
or
xor
dec
push
rorl
int
xchg
jnp
ret
sbb
fwait
lock
adc
mov
sbb
mov
adc
call
lret
push
repnz
xchg
adcl
shlb
mov
adc
mov
jge
adc
sub
das
je
in
mov
push
insl
dec
or
cmp
xor
cld
inc
inc
add
ss
xor
sub
mov
cli
cld
jo
mov
cs
adc
lods
and
arpl
push
add
mov
imul
dec
mov
dec
hlt
jo
scas
frstor
in
test
lds
xchg
insb
sti
je
xchg
fwait
inc
jbe
mov
dec
insb
and
xchg
and
xchg
adc
fwait
aad
cmp
and
mov
lahf
add
loopne
mov
add
mov
test
imul
cs
adc
lahf
xor
jp
mov
fildl
push
mov
aaa
outsl
out
jno
add
xor
sbb
shr
gs
lods
into
nop
cli
mov
jne
adcb
cmp
mov
cmpsb
cmp
sub
ds
push
sub
mov
sbb
or
dec
and
iret
adc
sbb
xchg
ret
mov
leave
pop
or
clc
or
mov
jne
nop
mov
and
jge
add
stos
inc
adc
popa
test
cmp
pop
enter
cmp
out
mov
jne
loopne
in
cmpsb
jns
sahf
dec
mov
sbb
pop
jns
call
push
in
incb
add
das
movsb
in
mov
xchg
cmp
sarl
adc
cmp
ja
sbb
push
daa
test
out
and
cltd
sub
push
fists
jnp
testl
in
sub
popf
xchg
mov
ret
xchg
sbb
les
imul
addr16
leave
dec
adc
xor
push
iret
cli
sbb
int
xchg
dec
xor
in
dec
xor
cmp
cmp
cmp
xchg
mov
cs
push
dec
push
pop
rcrb
xlat
cmp
cmpsb
cmp
or
push
push
jl
jl
mov
rolb
xchg
mov
shl
hlt
push
mov
stos
shlb
stc
mov
or
and
movsb
imul
adc
sbb
mov
xchg
enter
test
mov
add
jbe
dec
xlat
dec
mov
push
in
pop
and
lock
lcall
fwait
sbb
or
sbb
add
and
sti
popl
call
fiadds
ficomps
push
mov
scas
or
jl
mov
xchg
fwait
outsb
sbb
jl
out
mov
scas
pop
out
cmp
mov
fsubs
punpckhwd
loope
out
xor
stos
inc
clc
out
movl
scas
xchg
call
in
push
popa
add
add
es
jg
sub
aaa
inc
cmc
gs
test
mov
fbld
cmp
mov
mov
mov
jo
loopne
xchg
lcall
and
pushf
sbb
jp
mov
rcrb
sti
movsl
jbe
cmp
push
push
dec
push
lret
mov
gs
mov
xor
cli
std
pop
add
ljmp
lcall
xor
or
aas
cmp
ds
movsb
mov
into
mov
jecxz
dec
push
ds
sub
mov
movsl
xor
mov
sti
sahf
inc
sahf
fcoms
add
dec
iret
jae
dec
mov
and
repnz
dec
rol
xchg
cmpsb
jge
push
into
xlat
loop
stos
lahf
inc
mov
sbb
andb
loopne
test
aad
add
cwtl
xchg
es
lret
xchg
cmp
cmp
fldl
xchg
mov
aaa
dec
add
push
fwait
dec
jae
and
jb
mov
ret
bound
xlat
repnz
lods
and
aaa
dec
dec
mulps
and
pusha
pop
pop
popa
push
sarb
les
test
cmc
cwtl
mov
leave
push
imul
dec
or
shrl
aaa
lahf
test
xchg
and
stc
sbb
mov
adc
enter
insl
cmpsl
inc
xor
and
loopne
movsl
mov
push
xchg
insb
dec
push
out
jge
cs
js
std
out
jge
imul
test
decb
jb
adc
ja
mov
mov
mov
dec
loopne
jo
pop
jecxz
lock
adc
xchg
arpl
imul
jecxz
stos
push
jno
pop
hlt
push
shl
jecxz
repnz
insl
mov
cmp
jne
sbb
mov
adc
cmp
popf
jno
sti
cmp
int3
aaa
xchg
or
sarl
shll
js
lods
cs
xchg
mov
bt
lods
mov
lods
mov
adc
xchg
test
stc
out
mov
dec
jge
fdivrl
fldcw
mov
loop
or
outsl
inc
pop
and
lods
xorl
jnp
xor
lds
and
call
mov
pushf
ljmp
shrl
popf
and
mov
bound
or
xchg
rcr
dec
fidivrl
jno
icebp
pop
ret
cli
subb
stos
jnp
jecxz
jmp
flds
jno
aad
add
test
into
test
jge
add
cmp
das
mov
jns
mov
lock
adc
lods
jecxz
movsb
push
roll
xor
jmp
test
data16
ljmp
or
push
or
insl
pop
shlb
test
xchg
mov
cmp
add
mov
aad
xor
mov
pop
mov
jno
fbstp
icebp
jg
sub
or
pop
fistpl
xlat
mov
ret
adc
jl
int3
push
imul
add
cs
std
stos
stos
leave
pop
test
dec
call
insb
sub
adc
xor
loope
inc
push
pop
popf
push
jnp
mov
cmpsb
xchg
dec
sbb
stc
hlt
mov
cltd
pop
adc
add
pop
sbbl
xchg
mov
insl
pop
xchg
cmp
xchg
decl
jmp
sti
push
clc
ret
jb
shrl
lods
pop
lret
gs
mov
push
data16
ror
sub
es
xor
inc
cmp
lods
in
fnsave
stos
mov
nop
cmp
cmp
mov
lahf
adc
add
inc
inc
xor
mov
mov
inc
xor
cmp
bound
shll
test
cwtl
push
sub
pop
pop
lds
loopne
popf
sub
cmp
inc
testw
jmp
mov
cmp
repnz
aaa
push
xchg
mov
imul
pop
test
adc
lds
cld
jne
xchg
mov
fildl
andb
or
shll
mov
in
sub
cmpsb
xlat
fsubrs
pop
pop
pop
scas
add
rcr
scas
rcll
pop
cmp
punpckhwd
pop
adc
xchg
fwait
mov
mov
pop
dec
loop
jecxz
mov
pushf
rorl
popa
cmpsl
sub
pop
in
or
xchg
xor
cmp
test
addb
aam
lcall
fiaddl
cmpsl
inc
sar
addr16
mov
xchg
xchg
mov
out
mov
addr16
gs
push
scas
out
inc
out
lret
incb
mov
pop
clc
dec
xchg
xchg
add
lret
adc
jnp
cmp
push
std
xchg
adc
das
ja
xchg
inc
sarb
rcll
shll
out
or
pop
dec
dec
xchg
pop
test
xchg
subb
aam
or
iret
add
jae
cmpb
mov
cmp
lods
mov
mov
fisubrl
add
dec
mov
not
hlt
xor
push
pop
jg
call
sarl
add
pop
shlb
mov
loop
test
xor
and
aam
sti
add
cmp
xchg
nop
insl
pop
fistpll
jp
int3
enter
out
add
popf
dec
push
sarb
ds
adc
sbb
sbb
dec
sbb
popa
adcb
stos
aaa
jns
jno
incb
jnp
fs
popf
cli
fwait
dec
loope
pop
in
push
into
cmp
dec
push
stc
cmc
lahf
inc
dec
pop
call
je
test
lret
jae
shrb
dec
scas
mov
sub
mov
cmpb
jb
mov
inc
pop
fwait
adc
and
fstps
sbbb
xor
xor
inc
pop
aas
out
iret
fmull
daa
scas
cmp
adc
push
and
data16
jle
nop
mov
std
jp
popf
lods
pop
xor
pushl
jno
adc
cmc
mov
mov
inc
into
inc
fistl
aam
jle
fld1
pop
aad
stos
mov
scas
shll
mov
out
stos
testl
jge
fdivs
enter
out
add
sbb
jge
jl
aaa
cmp
rolb
addr16
push
mov
pop
mov
addr16
adc
cwtl
pop
cmp
cwtl
adc
fneni(8087
lods
scas
xchg
sbb
hlt
jne
pop
push
test
push
cmpl
sbb
jae
mov
and
test
mov
pop
add
out
test
scas
mov
mov
test
xor
lock
loop
inc
cmp
int
xchg
scas
pop
mov
adc
jo
incl
test
mov
mov
pop
pusha
or
pop
shll
jno
mov
sub
xchg
jl
jle
jo
jbe
or
enter
inc
inc
mov
into
into
mov
pushf
xchg
sub
int3
cmc
testl
and
xor
iret
push
or
int3
xor
pusha
cwtl
and
add
ja
ret
xor
subb
sbb
mov
lds
add
jge
ret
and
std
cli
xor
cli
mov
add
sbbl
inc
jno
add
inc
lods
out
jle
inc
imul
adc
movsb
popf
push
andb
pushf
fs
mov
mov
inc
mov
lock
and
js
aaa
loopne
repz
shll
jmp
imul
xchg
xchg
cs
jle
cmpsb
xor
int3
push
inc
jl
cld
sbb
or
add
and
inc
dec
ret
pavgw
lods
push
stc
mov
pop
mov
sbb
or
rolb
mov
xchg
gs
or
jp
push
mov
mov
inc
xchg
mov
rol
xchg
or
ljmp
scas
xchg
mov
mov
ja
decl
dec
push
add
push
mov
pop
loop
and
xchg
mov
inc
shl
pop
out
out
pop
mov
ja
inc
fmull
pop
mov
pop
sahf
push
mov
or
ret
popf
std
sub
xor
xchg
jne
lea
adc
mov
icebp
dec
fisttpl
repz
and
cmpsl
dec
cmc
fisttps
notl
lods
cmpsl
add
mov
bound
enter
xchg
cmp
sahf
jmp
jecxz
test
rcrl
or
dec
loope
jecxz
xchg
inc
pop
bound
dec
add
jo
orl
push
adc
push
bound
pop
jne
push
lret
cpuid
push
dec
xor
pop
daa
mov
test
mov
or
pop
push
test
mov
inc
test
enter
test
push
pop
pop
dec
imul
xor
mov
push
idiv
mov
push
scas
sahf
sbb
inc
cmpsb
inc
cld
in
adc
adc
inc
jmp
inc
jecxz
adc
mov
call
mov
push
adc
dec
popf
cli
movsb
cmp
sahf
jo
aam
xchg
inc
inc
scas
jle
nopl
and
push
cmp
xor
jns
mov
stc
add
sub
pop
jbe
paddq
jecxz
cmp
hlt
mov
sub
sbb
out
arpl
bound
addr16
xchg
xlat
pop
fstl
add
inc
std
pop
fldenv
ss
out
push
add
adc
test
daa
mov
shrb
int
xlat
xlat
xchg
mov
leave
lret
xchg
divl
jmp
cmp
aaa
mov
pop
cmp
cmp
sahf
hlt
lods
fsubrs
scas
shl
lock
jae
or
cwtl
dec
mulb
cwtl
es
xchg
shr
jo
inc
xor
sbb
pop
jmp
push
movsb
cmpsl
addr16
leave
cli
lret
push
fs
ja
stc
adc
repnz
popf
mov
adc
or
jae
cwtl
mov
xorl
push
push
sbb
movsl
out
dec
js
and
add
cmp
jl
pop
sbb
pop
gs
seta
xchg
idivl
outsb
jecxz
sub
stos
popf
cmp
lcall
out
test
mov
lods
aas
int
mov
adcb
dec
xchg
fiaddl
push
shl
sub
and
cwtl
push
rcrb
push
or
data16
adc
lods
pop
xchg
mov
int3
pushf
sbb
cmp
test
sbb
and
sti
das
mov
push
in
sub
mov
jecxz
outsl
xor
sbb
ret
pop
repz
push
push
mov
pop
pop
lret
mov
iret
push
je
mov
insb
fwait
sbb
push
lock
xchg
pop
cli
jae
jecxz
xlat
or
mov
and
sbb
pop
rorb
or
inc
in
lret
repz
jg
pop
cmc
dec
mov
cmp
insb
fdivl
insl
psadbw
jl
fmulp
fcmovb
nop
jns
xchg
xor
loop
fisttpl
in
jle
cmpsb
cmpsl
lock
adc
mov
aad
fnclex
cmpsb
push
dec
lahf
inc
cld
xor
arpl
pop
adc
int3
xor
mov
outsl
ja
lcall
loope
adc
cmp
fcmovbe
and
jne
dec
add
test
addb
cmp
inc
jns
xchg
sub
jp
cltd
ja
push
or
push
mov
out
hlt
push
jno
add
aaa
push
out
shl
adc
mov
pcmpgtd
add
sub
mov
imul
arpl
add
jno
lret
aad
xchg
cmpsb
fpatan
filds
xchg
andnps
adc
rclb
sbb
jp
hlt
scas
lcall
pop
in
in
dec
dec
mov
imul
pop
adc
jmp
dec
dec
inc
inc
clc
pop
xor
js
addr16
mov
test
pop
sbb
xor
inc
sub
dec
adc
mov
push
test
in
inc
sti
sbb
stc
mov
xchg
mov
adc
dec
inc
repz
insb
xor
mov
sub
jns
adc
es
pop
dec
mov
sub
xor
hlt
imul
inc
mov
or
loope
adc
adc
xlat
sti
xor
add
xorb
lcall
call
push
cli
in
bound
add
and
adc
add
mov
pop
icebp
pushl
jp
scas
fucomp
cwtl
sbb
push
movsl
mov
adc
mov
adc
adc
popf
jns
test
ljmp
insb
popa
xchg
mov
mov
jle
stc
rorl
and
inc
lods
mov
sti
pop
xchg
fdivrl
sub
push
adcl
js
clc
arpl
lods
pop
mov
push
cli
leave
in
jl
mov
and
stos
lods
push
repz
or
add
or
int
jmp
nop
push
mov
jle
jo
das
mov
stc
mov
push
jl
mov
or
pop
mov
push
jo
cmp
adc
cld
xor
ficoms
push
nop
movsl
mov
adc
dec
xor
loop
call
inc
mov
sti
fadds
or
cmp
adc
sbb
das
lock
paddb
pop
mov
stc
das
jbe
mov
cwtl
fucomp
xchg
faddp
js
iret
bound
test
sub
dec
jge
or
cmc
jl
cmove
cli
push
inc
pop
jmp
fs
loope
add
ret
enter
mov
pushf
loopne
mov
ficoml
cmp
or
mov
pop
mov
push
sub
lods
lock
pop
mov
rorb
push
ss
and
mov
dec
imul
iret
scas
test
push
pop
or
imul
repz
pop
mov
lea
xchg
stos
andb
inc
mov
jle
enter
lock
cld
jl
dec
inc
lret
cld
and
mov
jno
out
sub
out
mov
push
lcall
pop
cmp
ljmp
cmp
cmp
jecxz
dec
mov
cmp
popa
pop
mov
inc
fwait
push
in
inc
push
cmc
rorl
sub
jbe
out
cwtl
aaa
pop
pop
daa
rcl
mov
in
lods
and
test
ss
sahf
inc
push
add
sbb
subb
int3
insl
std
insb
jl
fs
lret
rolb
insl
mov
mov
mov
dec
aam
pop
sti
sub
jecxz
jl
push
xchg
in
ljmp
jbe
popf
xor
imul
sahf
mov
mov
mov
shlb
push
sbb
movsl
mov
daa
ficoms
push
cld
clc
mov
sbb
pop
xchg
sbb
or
push
in
push
add
imul
lahf
lret
jle
int
pushf
inc
fsqrt
les
pop
aad
xlat
and
mov
xchg
cmp
ret
pop
jp
mov
fdivr
ret
and
fnstenv
cmpsb
lret
call
test
lahf
arpl
or
in
xlat
ss
js
dec
or
leave
shlb
push
mov
test
cmp
subb
inc
xchg
inc
loopne
ret
addb
popa
pushf
pop
call
mov
sahf
rorl
push
xor
stos
mov
scas
xor
pop
add
fwait
repnz
fnstcw
leave
call
dec
in
add
pop
pop
jnp
pop
or
adc
imul
inc
dec
iret
push
aam
push
cmp
clc
xchg
dec
mov
mov
dec
xchg
mov
xchg
mov
adc
sar
mov
jae
jb
push
xchg
test
icebp
mov
stos
and
xor
sbb
xchg
hlt
sbb
daa
imul
pop
nop
mov
lahf
out
fildll
xor
and
out
xor
shufps
shlb
push
inc
jmp
std
pop
sub
xchg
scas
push
xchg
mov
xchg
pop
xchg
notb
rclb
sub
xchg
stos
mov
adc
jno
notb
insb
fisubrs
and
or
fadds
cli
adc
inc
gs
mov
mov
cltd
aam
xor
notb
xor
xor
iret
jecxz
jo
inc
pop
mov
inc
std
shl
add
jb
sub
and
lods
lahf
mov
or
xchg
popa
add
stc
cli
xchg
scas
js
or
jb
xor
in
dec
push
inc
js
out
movl
mov
int3
out
loope
insl
insl
mov
pop
dec
cmpsl
dec
test
push
lret
sub
and
dec
lahf
jl
clc
jl
xchg
aas
stos
jecxz
mov
ret
insl
mov
push
sub
sbb
adcb
insb
jg
and
inc
cmp
call
repnz
jno
cltd
jo
mov
sbb
jb
adc
mov
adc
mov
dec
cwtl
ret
imul
mov
cltd
mov
call
push
aam
shlb
dec
gs
sbb
jns
sub
call
ficoms
mov
xor
testl
xchg
test
jmp
or
jbe
dec
lods
ss
lcall
pop
mov
imul
mov
lds
push
mov
push
cmp
inc
fsts
push
jb
fwait
pop
xchg
daa
xchg
xor
insb
dec
or
popa
xor
mov
mov
loope
lods
iret
movsl
out
or
ret
jbe
and
mov
icebp
rcll
nop
sar
push
outsl
sbb
push
data16
iret
jae
mov
iret
lea
jecxz
hlt
sub
pop
fisubs
push
sbb
or
mov
rol
fcmovnu
fsubs
popa
mov
xor
mov
inc
xor
or
sbb
sti
or
jae
inc
rep
sub
sub
sbb
rorb
sbb
je
ljmp
jp
out
mov
dec
cld
xchg
xchg
lret
jae
add
pop
adc
inc
dec
jae
mov
mov
into
mov
push
push
mov
sahf
and
pushf
xor
cmpsl
sub
lods
inc
cld
inc
neg
jns
sbb
mov
adc
push
jmp
enter
std
arpl
xchg
mov
les
mov
jg
inc
fbstp
or
pop
stos
subb
sbb
cmp
ljmp
xchg
or
mov
pop
stc
loope
pop
or
fwait
aas
pushf
push
ljmp
std
clc
das
and
leave
into
push
stc
xchg
out
pusha
mov
aam
push
mov
repz
inc
sub
out
jne
in
push
dec
mov
push
repnz
aaa
rorl
call
adcl
mov
sbb
movsb
cmpsl
sarl
shl
ss
repnz
sub
pop
jmp
les
push
or
push
or
or
dec
sbb
test
sub
fstps
into
inc
add
popf
and
jbe
dec
fst
out
int
fidivrs
sti
in
or
mov
icebp
fs
enter
aam
push
movsl
push
sbb
dec
adc
fsubrl
iret
aaa
jns
inc
push
fs
test
int3
xor
mov
xchg
mov
mov
add
add
push
sti
mov
lock
mov
mov
lret
sub
mov
xchg
and
mov
push
in
addr16
ret
rcr
pop
shrl
movb
fdivl
fbld
add
xchg
data16
js
xchg
cmpsb
lea
inc
outsb
mov
inc
cmp
mov
pop
dec
imul
inc
xchg
fimuls
xorb
and
inc
sub
subb
sti
dec
sub
xchg
jo
xchg
je
repnz
adc
inc
leave
pop
add
fsubl
inc
mov
pop
and
push
jno
pop
adc
mov
cli
mov
jle
test
lahf
iret
cmp
sub
mov
lcall
stc
jns
mov
mov
xor
pop
mov
lea
cmp
inc
ss
or
add
gs
adc
xchg
push
lock
inc
and
sub
and
int3
aad
movsl
inc
outsb
ret
icebp
dec
jne
jecxz
ja
cmp
sub
push
lret
add
and
add
push
xchg
jmp
push
sti
stos
add
mov
in
mov
push
icebp
clc
ja
rcrb
dec
in
fldln2
scas
mov
clc
loop
pop
mov
sbb
jp
icebp
jl
notb
loope
insl
shll
xorl
fcmovnbe
mov
xor
pop
or
test
outsb
outsl
loopne
sarl
outsb
es
fs
adc
test
pop
xchg
push
lods
jmp
push
push
push
stos
mov
data16
xor
pop
xor
loop
jle
mov
fs
cmp
ret
mov
jne
sbb
ficomps
daa
fadds
adc
call
adc
push
inc
testl
pop
xor
xchg
test
push
adc
es
fs
out
out
fstpt
add
dec
lods
ret
gs
test
daa
mov
mov
out
jp
int3
push
jae
or
jnp
inc
xor
pushf
out
lods
arpl
cmpsl
pop
loop
aam
imulb
cmp
pop
sbb
jmp
mov
inc
ljmp
adc
pop
icebp
lock
xchg
mov
lahf
adc
xchg
pop
xor
hlt
cmp
outsl
inc
cmpsb
pop
add
testb
sbb
and
xor
pop
lock
test
mov
test
out
xor
lahf
push
pop
outsb
xor
stc
dec
addb
and
je
mov
sbb
scas
adc
stos
push
data16
fisttpll
add
out
mov
aam
xchg
pushf
mov
mov
shlb
sub
daa
enter
shlb
sti
mov
mov
xchg
rcll
or
dec
cmp
mov
icebp
push
sbb
enter
mov
shlb
rorb
cmp
jmp
stc
pop
hlt
aaa
pop
xor
push
mov
mov
add
icebp
leave
test
and
les
cmp
leave
sahf
cmp
jge
inc
movsl
jns
mov
or
sarl
pop
fs
fistps
or
clc
insl
pop
dec
fdecstp
scas
mov
dec
nop
lods
inc
mov
push
aam
cli
ss
cmc
scas
add
add
mov
cmp
leave
sub
fidivrs
call
ljmp
cs
mov
movsl
sbb
sbb
test
lahf
jb
je
fisttps
xchg
enter
add
subb
test
nop
ja
pusha
rol
or
fidivrs
adcl
mov
xchg
pop
mov
imul
fimull
shrb
add
sbb
mov
cmp
inc
icebp
xchg
pop
addr16
jb
jb
jp
mov
dec
and
ret
and
sbb
out
cmpsl
repnz
mov
out
xor
inc
lods
xchg
shrl
mov
fidivl
cmp
movb
adc
push
fildll
mov
xchg
test
push
test
popf
jae
sub
ficomps
lret
lret
jo
fucom
cwtl
in
push
sub
or
push
xchg
dec
adc
pop
pop
mov
sbb
jl
subb
pushf
outsb
iret
call
js
outsl
jne
addb
mov
gs
shrl
loope
sub
int3
and
xor
dec
stc
sub
bound
das
int3
sub
cmp
mov
xor
hlt
and
sub
sub
adc
mov
pop
js
mov
dec
mov
pop
jbe
shrb
mov
mov
push
outsb
mov
sub
aad
pop
xor
das
arpl
jg
fs
aaa
divl
iret
mov
pop
mov
jno
test
lds
fs
push
mov
xchg
adc
pop
and
movsb
jmp
jo
aas
jne
lea
hlt
jl
or
test
testl
jbe
les
pop
and
lds
mov
subb
jne
mov
scas
cmp
jbe
dec
imul
jb
ljmp
jp
aas
cwtl
adc
adc
pop
adcb
jmp
subps
insl
ret
pop
push
das
icebp
jecxz
xor
xchg
cmp
or
ds
aad
xchg
lret
push
pop
loope
pop
jno
ret
push
cmpsb
jecxz
fdivrl
dec
dec
insl
push
push
or
out
dec
mov
movsb
das
mov
cld
mov
xchg
aas
xor
sbb
xchg
xor
sub
xchg
rcrb
xlat
push
ds
pop
rcrl
jle
pop
jle
cmc
mov
cld
adc
bound
dec
xchg
jge
adc
adc
lds
xchg
mov
nop
dec
inc
mov
pop
pusha
mov
leave
mov
and
mov
or
pop
hlt
mov
addr16
sub
aas
pop
pop
cmp
ret
mov
push
inc
jmp
push
out
sub
push
push
dec
dec
mov
sbb
push
pop
data16
into
sub
rclb
jmp
jle
idiv
stos
fsts
jae
in
xor
mov
pop
sub
idiv
mov
dec
sti
gs
push
dec
cmp
mov
mov
insb
cmp
popa
push
cltd
add
xlat
xchg
xchg
rolb
scas
inc
fs
pop
adc
dec
aas
inc
push
test
test
fadds
jne
ficoml
nop
and
mov
pop
fcompl
inc
out
jmp
in
cwtl
sar
xchg
daa
fldt
mov
dec
loop
pushf
fcomi
idivb
jns
cs
and
and
aad
js
jne
ror
frstor
int3
mov
mov
out
movsb
repnz
pop
xchg
and
arpl
std
pop
cmp
mov
pop
fs
dec
loopne
mov
sub
call
mov
xor
sub
scas
sarb
sbb
or
test
pop
sub
scas
aad
shrb
rcll
mov
fmuls
in
sub
or
add
inc
lcall
dec
xchg
mov
push
bnd
ss
xor
xchg
pop
mov
ficomps
inc
mov
test
jbe
dec
and
pop
jecxz
jle
lods
mov
aas
pop
mov
add
and
push
lahf
cmp
fldt
ret
sahf
push
scas
sti
add
mov
sbb
jae
mov
repnz
inc
scas
lods
mov
shrl
or
push
and
xlat
aaa
lds
leave
xor
jo
or
dec
mov
mov
sub
add
clc
jae
xchg
xor
adc
ljmp
jle
mov
mov
insb
inc
imulb
out
loopne
jecxz
or
dec
sar
pusha
cmp
lods
xor
push
xchg
dec
lcall
jno
stc
mov
in
lock
pop
aam
loopne
stos
dec
clc
pop
jae
pop
out
aas
clc
sbb
loope
fadd
jno
test
dec
push
dec
dec
cld
call
mov
movsl
dec
inc
aas
outsl
in
out
mov
popa
ss
cld
fs
repz
xor
sbb
mov
dec
call
adc
sti
push
jg
test
inc
pop
inc
call
shr
aaa
inc
jo
out
out
jo
int3
pop
rorb
dec
adc
mov
or
stos
daa
fsubrl
cmpsb
sbb
mov
stc
mov
add
dec
hlt
xchg
inc
mov
push
test
cmp
rolb
in
test
fisubs
hlt
fmull
shrb
push
xlat
ret
mov
subl
xchg
sti
std
lret
xor
and
nop
into
sbb
xchg
mov
cwtl
fstps
push
out
movsl
cs
xchg
and
cmp
imul
icebp
dec
push
into
nop
mov
lea
test
out
or
fs
dec
push
adc
add
jmp
add
sub
inc
pop
pop
dec
out
out
mov
inc
mov
mov
jp
add
dec
xor
out
adc
push
dec
mov
push
clc
add
ja
dec
inc
and
aas
xchg
cmp
in
and
rolb
imul
xchg
and
and
loop
adc
dec
add
cs
jb
clc
mov
mov
aad
sub
dec
pop
arpl
test
js
pushf
cmpsb
shll
imul
push
dec
xchg
jp
sbb
inc
loope
sbb
insb
mov
js
gs
xchg
fadds
adc
adc
xorb
shl
movsl
aam
neg
lcall
loop
pusha
sbb
fcoms
es
cmp
je
int
dec
push
dec
push
xor
jl
rorb
daa
cld
add
add
inc
pushf
je
adc
lahf
sbb
aad
movsb
or
fdivrs
mov
push
or
scas
iret
loope
mov
mov
sub
xor
aas
inc
or
sti
std
mov
rolb
sar
mov
fistpll
mov
jg
add
popa
and
movsl
das
push
lcall
xlat
cmc
xchg
adc
aam
in
hlt
mov
mov
mov
push
and
je
jp
shrl
ficoml
arpl
push
dec
sbb
sub
cltd
gs
stc
push
lcall
xchg
mov
xor
inc
aas
popa
mov
sub
repnz
mov
mov
rcrb
bound
das
lds
aam
mov
in
test
movsb
js
add
xor
ds
loopne
ds
cmpsb
pusha
subb
add
out
mov
mov
fidivrl
mov
adc
sbb
inc
mov
inc
popf
loope
dec
test
sub
mov
cmc
sbb
inc
pop
cmovs
xor
loope
sbb
sbb
pop
icebp
stos
lret
or
xchg
xchg
sub
xor
movsb
or
dec
xlat
mov
jg
pop
ljmp
mov
inc
clc
in
jge
test
xchg
cwtl
cwtl
and
and
popa
jmp
or
and
xchg
imul
and
out
test
jne
test
dec
sbb
fnstcw
pop
mov
cmpsb
daa
pop
loope
dec
mov
call
pop
mov
cmp
cld
mov
pop
fstpt
hlt
mov
testl
mov
std
arpl
cmp
out
cmp
out
stc
push
jg
sub
aaa
add
push
inc
jp
lods
outsb
cmp
add
sub
stos
leave
repz
pop
js
test
and
or
fisttpl
inc
pushf
sti
into
mov
arpl
inc
fidivl
icebp
jns
in
adc
dec
or
into
dec
out
das
orl
cmp
push
fs
fcmovbe
sub
test
mov
jae
dec
mov
mov
inc
in
fisubrs
aad
pop
jo
cli
inc
je
rorb
dec
mov
mov
cli
xchg
mov
sti
push
ljmp
and
add
push
inc
negb
or
dec
push
cmp
adc
fmul
cmp
out
aad
push
stos
and
lods
pop
mov
xchg
aam
rclb
pusha
xor
test
xchg
outsl
loopne
push
add
mov
push
adc
imul
jl
xor
repnz
das
pop
and
outsb
and
dec
cmp
outsb
sti
push
cmc
push
std
cmpl
xchg
insb
xor
mov
xor
lds
mov
jns
jmp
cmpsl
test
je
mov
ficompl
cmc
adc
push
hlt
cmp
xorb
bound
call
popa
fadd
mov
add
je
roll
js
jle
pop
mov
sti
test
enter
test
or
imul
lahf
mov
lahf
jb
outsb
in
repz
or
rclb
cmp
mov
mov
push
add
loop
fdiv
xor
cmp
add
cltd
and
dec
outsl
cmp
pop
xor
outsb
insl
jmp
sbb
mov
xchg
jns
leave
dec
mov
push
fwait
cmp
sub
stc
adc
mov
jle
mov
cmp
cld
jne
dec
inc
pop
mov
repnz
roll
xor
cmpb
jne
mov
loop
outsb
pop
mov
int
xor
sbb
stos
icebp
outsl
and
notl
jge
push
adc
aad
pop
fcoml
fcmovnb
sbb
icebp
mov
aas
pop
movsb
jl
cmpsl
dec
sarb
dec
lods
mul
lods
mov
dec
add
push
into
test
push
inc
out
xor
mov
sbb
and
push
sub
pusha
dec
sub
loopne
out
and
mov
insl
sti
jno
push
add
mov
push
xchg
fsts
lds
adc
aad
lcall
in
dec
sbb
neg
mov
dec
and
mov
pop
fimull
into
mov
popa
das
jmp
xchg
xchg
nop
adc
cmp
or
insb
mov
fwait
adc
in
jno
clc
lcall
push
dec
sbb
lret
fcoml
pop
cltd
push
out
mov
mov
mov
cwtl
xchg
pop
in
jmp
in
jl
outsb
out
pushf
sbbb
and
mov
pop
jmp
jle
rcll
ret
inc
out
inc
mov
sbb
cltd
insl
push
nop
xor
mov
imul
int
fwait
lock
movsb
fistl
test
mov
jne
lret
sub
movsb
add
mov
pop
jo
mov
leave
or
fisttpl
push
sub
inc
inc
cs
test
and
jle
adc
or
dec
jp
roll
fsubrl
or
push
xchg
and
push
nop
cmp
pushf
addr16
xchg
stc
sub
xchg
rcll
dec
sub
adc
xor
daa
dec
xchg
or
loop
mov
inc
js
testl
fs
movsl
inc
push
mov
mov
fs
cwtl
xchg
out
movsb
mov
mov
jmp
add
jo
mov
mov
pop
out
jbe
add
mov
mov
mov
mov
dec
and
dec
insl
xor
push
push
jnp
add
or
repnz
gs
mov
cmpb
cwtl
push
jp
aam
jne
jecxz
test
and
pop
dec
jge
push
sub
iret
push
pushw
pop
lea
outsb
cmp
repnz
mov
jo
inc
push
cld
loopne
roll
mov
mov
lock
rclb
test
inc
call
pop
in
test
xchg
dec
cmpsb
loop
push
pusha
leave
aad
test
jae
push
jno
mov
sub
test
lret
xor
push
xor
push
daa
jmp
inc
dec
andl
daa
and
jns
mov
mov
mov
movsl
js
jl
cmp
sub
pop
push
insb
dec
scas
and
cmp
adc
push
mov
adc
fwait
lahf
xchg
test
std
adc
pop
shrl
dec
ljmp
pop
lods
pop
mov
ja
bswap
adc
jle
scas
mov
cmpsl
movsl
cltd
push
add
sub
in
shl
mov
shl
push
cld
test
orl
or
std
adc
mov
xchg
je
mov
and
pusha
cli
imul
fiadds
pop
in
stos
xchg
sub
cmp
jge
ss
in
notb
push
mov
addb
add
enter
xchg
pop
and
ss
ret
aaa
push
xor
sbb
jns
dec
fists
ss
outsb
dec
pop
fisttpll
mov
mov
and
pop
int
sub
xchg
int3
dec
mov
xchg
addr16
sbb
or
fdivrl
rcr
pop
enter
mov
inc
jle
lret
add
jo
or
sub
jo
mov
in
in
jne
and
and
pop
mov
pop
aad
scas
mov
xchg
fs
ret
dec
ds
stos
test
loop
xor
mov
imul
adc
int3
or
enter
pop
dec
add
mov
mov
and
jg
jbe
popf
adc
sarl
sbb
mov
dec
xchg
or
add
scas
imulb
nop
mov
xor
cmovno
xchg
xchg
decb
fnsave
aaa
ret
popa
in
sbb
pop
mov
cld
fcoml
jl
in
in
fnstcw
inc
mov
inc
push
dec
push
jb
sub
or
mov
sub
jo
out
pop
add
cltd
int3
cmpsb
cld
dec
jno
call
xor
xchg
outsl
cmpxchg
pop
or
mov
sub
sbb
and
inc
lahf
xchg
or
dec
ss
or
aas
rcll
int3
mov
add
pusha
fwait
fwait
lcall
shrl
aam
std
mov
loopne
andb
ljmp
sub
icebp
lds
push
addr16
push
add
mov
push
movsb
testb
pusha
cmp
xchg
add
jae
in
addb
mov
mov
int
cmp
adc
rorl
clc
stos
cs
mov
push
loop
push
and
or
mov
inc
add
fistps
xlat
and
cmp
and
pop
jne
adc
and
movsb
lea
cmp
aad
lods
mov
pop
dec
lret
mov
pop
in
mov
xchg
pop
ret
inc
cmp
ffree
test
push
test
sub
fidivl
je
clc
xor
jp
fs
outsl
mov
test
call
lret
rcrl
fsubr
pop
dec
mov
hlt
repz
es
cmp
adc
jp
popf
push
clc
mov
lds
adc
pop
inc
lea
or
adc
lea
adc
push
adc
sub
shrb
push
mov
loope
cmp
mov
test
dec
jmp
xor
sub
inc
sub
cmp
adc
shrb
sub
aas
sbb
ror
in
inc
dec
sbb
or
lock
cmpb
test
cmp
ljmp
sbb
add
ss
in
fistpll
xchg
dec
adc
sbb
negb
mov
mov
out
rolb
mov
clc
xorb
iret
hlt
scas
jecxz
orb
cld
add
or
sub
in
popa
cmpsl
mov
xor
and
cltd
sub
jbe
xchg
enter
sub
adc
insl
cld
xchg
lahf
push
xor
mov
enter
adc
daa
add
shl
push
aam
mov
repnz
movsl
imul
jp
or
bound
pop
fstl
xor
xchg
lods
xchg
cmp
push
push
mov
test
adc
jnp
pop
jnp
dec
add
iret
in
in
lahf
repnz
push
mov
add
dec
jo
shr
lret
xor
mov
push
or
mov
cmp
mov
fmul
fnstenv
pop
sbb
pusha
add
dec
mov
addr16
pop
cmp
push
jne
imul
outsl
sub
cmp
shll
add
mov
pop
push
imul
cmp
xor
jae
push
repnz
movsl
jmp
sbb
adc
ja
js
mov
xor
cli
decl
stos
movsb
popf
sahf
jo
xchg
xor
push
out
sub
lret
test
mov
adc
xchg
pop
in
mov
cmp
xchg
jb
lods
adc
iret
test
shrl
std
arpl
jg
cmc
aad
cli
xchg
lods
pop
fucom
pusha
push
repz
push
jo
add
loop
icebp
test
ss
out
mov
jl
inc
xor
xchg
xor
adc
rcll
push
pop
jb
sub
xchg
sarb
aaa
jbe
sbb
subb
out
xchg
xchg
movntps
mov
aam
insl
pop
mov
cmpsb
jle
cmp
into
cwtl
jmp
lods
jp
enter
stos
adc
pop
pop
push
jmp
dec
push
ljmp
mov
sub
mov
adc
dec
push
insb
iret
push
xlat
sub
arpl
je
and
std
fistpll
adc
push
int3
pop
sbb
bound
jb
push
repz
xchg
sbb
cmp
dec
fucomip
jg
cmpb
xchg
xor
inc
movsb
push
mov
sbb
mov
jno
xchg
cltd
mov
cmp
adcb
mov
adcb
int3
cmp
es
ljmp
push
cwtl
xor
inc
enter
mov
jbe
sbb
or
xchg
sub
stc
xor
mov
je
push
inc
dec
xchg
or
pop
lods
mov
in
fwait
inc
sbb
popf
inc
inc
pop
outsl
xchg
cmp
push
xacquire
gs
rcr
cmpsl
rcll
movsl
mov
cmpsb
nop
jl
or
mov
mov
leave
shll
pop
mov
hlt
data16
stc
mov
cmpsl
mov
xchg
cmp
aaa
adc
popf
sbb
out
cmp
idivb
cld
adc
ss
jne
hlt
in
insl
xchg
pushf
shll
and
xchg
mov
xchg
lock
dec
jp
pop
adcb
sub
pushf
xorl
scas
add
inc
shr
pop
rclb
pusha
and
or
jge
popa
icebp
push
pminsw
fimuls
testl
push
lock
add
rcl
popa
jp
adc
adc
add
and
jno
ficoml
shll
mov
pop
inc
inc
inc
adc
jl
xor
into
mov
push
daa
scas
cmp
leave
icebp
ret
sbb
pop
xchg
arpl
das
data16
cmc
cmp
pop
leave
pop
or
dec
data16
pop
sbb
mov
insb
scas
pop
sbb
xchg
jg
notb
aad
data16
push
or
cmp
loop
mov
pusha
mov
push
les
add
add
ret
push
pop
in
mov
adc
jmp
shll
iret
cmp
push
sub
and
sbb
addr16
icebp
push
js
mov
stos
icebp
mov
rcr
lcall
sbb
cmpsb
lds
es
aaa
xchg
mov
xor
fldl
sub
sub
push
push
and
inc
push
lds
in
add
add
gs
dec
or
add
xor
push
cwtl
movsb
dec
js
mov
shll
xchg
mov
jecxz
inc
incb
fcom
xor
cli
push
scas
adc
add
xchg
add
pop
or
outsl
mov
data16
xor
push
jns
sbb
imul
pop
sbb
xchg
cld
fbstp
mov
out
gs
push
push
and
lods
ret
sbb
in
repz
nop
fmul
sub
mov
loopne
cmp
cs
xchg
add
mov
mov
and
mov
cmp
or
jno
or
mov
mov
jecxz
call
dec
add
stos
jmp
sbb
popf
push
jae
hlt
dec
sbb
adc
dec
add
ret
sub
mov
mov
sbb
arpl
sbb
inc
push
mov
dec
mov
lock
std
sbb
mov
lods
mov
push
mov
mov
mov
cmp
xorl
jg
shll
stos
loop
sub
inc
xor
nop
in
or
sbb
shl
std
add
mov
loopne
jp
mov
xchg
xchg
dec
in
pop
or
xor
divl
inc
inc
insl
push
sub
out
pop
add
mov
cwtl
lret
add
lret
xchg
jle
fsubp
inc
xor
mov
imul
repnz
and
ret
jg
jmp
pop
je
movsl
fidivrs
mov
loop
push
ret
and
dec
dec
movsb
push
mov
add
xchg
mov
daa
or
lcall
jae
xor
mov
mov
push
xchg
fnstcw
mov
dec
iret
xchg
imul
xchg
daa
xchg
jge
mov
or
and
or
mov
inc
sub
movsb
fistl
stos
rcrl
outsl
pop
das
xor
jae
or
or
add
dec
daa
xchg
shrb
daa
rcr
xor
mov
push
push
test
iret
pop
push
into
insb
mov
das
lods
icebp
out
mov
dec
repnz
push
mov
icebp
lock
dec
sub
inc
jns
outsb
icebp
rorl
test
inc
push
cwtl
jae
and
lahf
je
push
inc
jns
push
sub
sub
jo
inc
cli
cmp
rcrb
movsb
sub
call
adc
cmpsl
sub
repnz
xlat
sbb
xchg
rcr
mov
push
aas
mov
add
lcall
xchg
das
mov
xor
pusha
imul
add
pop
fistpll
and
movsb
fs
insl
icebp
lahf
loop
lods
stos
js
lret
mov
lods
out
sub
mov
pop
imull
mov
lret
sub
sub
or
push
lret
push
lock
fs
lea
dec
dec
mov
repz
pop
dec
sarb
rcr
xor
loop
fistpll
jp
sub
xor
jnp
dec
add
je
sbb
jae
loope
std
adc
stos
in
add
mov
iret
mov
jne
push
jle
call
loope
mov
movl
rolb
rclb
dec
pop
lret
xchg
jg
xchg
sub
sub
jecxz
cmpsl
pop
sub
adc
or
sbb
xor
test
cwtl
daa
js,pn
into
sub
test
icebp
andb
in
pop
dec
lahf
stos
insb
inc
push
insb
bound
xchg
xor
movsl
lcall
pop
stos
in
test
aad
rcll
nop
sbb
les
mov
orl
rcrb
push
inc
xchg
pminub
cmp
sbb
out
shll
pop
mov
popl
or
bnd
mov
in
xchg
outsl
xlat
lret
mov
out
sub
call
test
xchg
test
sbb
scas
and
inc
roll
cmp
and
xchg
decb
cld
shll
push
sub
jmp
adc
fs
push
ret
out
or
dec
sbb
stos
pushf
cwtl
and
cmp
in
icebp
lods
lods
sub
or
inc
pop
pop
lods
shll
inc
cmp
popa
fs
lret
mov
cmpsb
push
or
cli
sahf
fldcw
aas
push
jp
jnp
pop
jle
jne
push
test
js
jae
rclb
mov
pop
popf
mov
fs
int
std
fisubrs
cmp
cltd
jne
fsts
cmp
push
movsb
mov
push
fistl
sub
push
xchg
daa
xor
push
inc
imulb
lret
sbb
adc
dec
jle
sub
ljmp
pusha
es
sub
and
pop
orb
mov
add
arpl
add
nop
mov
fcmovu
jp
mov
and
xor
push
pop
aas
jo
mov
cmp
popa
jecxz
jbe
sahf
mov
xor
lock
fsubl
pop
mov
lds
xchg
jnp
pop
sbb
mov
and
mov
je
imul
mov
inc
cmc
pop
and
inc
cmp
cmp
pop
fistl
push
inc
mov
andb
pop
test
out
stos
pop
sbb
popa
loope
in
cwtl
or
cmp
inc
adc
pop
pop
aas
out
jg
sub
arpl
dec
mov
and
repnz
adc
cwtl
xchg
lret
and
cli
mov
xchg
fbld
dec
stos
dec
cld
or
pop
lcall
aam
test
loope
and
out
dec
xchg
int3
mov
xchg
xor
pop
into
or
or
jp
mov
mov
ja
pop
ret
sbb
mov
jb
mov
adc
inc
out
add
aas
pushf
out
xchg
jne
jmp
mov
mov
jb
mov
cli
scas
sub
mov
lahf
or
aaa
data16
bswap
test
fidivrs
in
shl
add
out
add
aaa
ss
xor
movsb
xlat
les
inc
jnp
stos
push
mov
leave
mov
jg
mov
xor
inc
sarb
inc
jo
test
daa
rorb
xchg
inc
les
outsb
add
add
and
jne
push
inc
or
daa
pop
push
ljmp
hlt
pop
mov
cwtl
and
or
mov
push
add
lock
test
mov
xchg
fs
mov
cmp
leave
test
rorl
test
xchg
fcmovnb
nop
mov
movsb
sahf
push
xor
sub
psllw
mov
shrb
inc
xchg
mov
sbb
in
inc
sub
mov
loopne
fistps
sub
shll
or
mov
xchg
mov
hlt
outsl
xor
pop
scas
or
jne
push
dec
dec
inc
xchg
jl
sbb
jl
out
lds
cmp
aas
jnp
add
addr16
call
incl
cmp
stos
adc
stos
xor
pop
data16
shlb
arpl
xchg
jo
fucomip
divb
insb
xchg
or
cmp
dec
add
push
notl
iret
mov
clc
jl
sbb
jp
mov
ds
iret
adc
sbb
pop
cmc
adc
adc
rcll
icebp
or
cli
inc
and
xchg
fidivs
jbe
pmaxub
test
cmp
lds
xchg
outsb
lods
ds
xor
sti
scas
stos
push
lcall
dec
sub
orb
orb
jge
repz
mov
pushf
bound
sbb
cmp
addr16
inc
jle
outsl
out
pop
mov
or
outsb
pop
xchg
stos
push
add
test
push
mov
lods
test
jle
lret
movsl
mov
lock
rolb
sub
je
push
adc
or
pop
inc
orb
fmuls
enter
mov
test
jmp
push
or
jge
ret
or
ficoml
mov
loope
push
mov
shl
out
ja
inc
cs
fs
mov
sti
pusha
out
inc
arpl
stc
cmp
addr16
nop
push
sbb
cmpsb
sti
test
xor
cmp
arpl
in
int
sbb
iret
movsb
dec
inc
push
sub
andb
lds
les
daa
dec
iret
cmp
sbb
push
or
and
xchg
dec
bnd
arpl
push
pop
xor
loopne
neg
mov
jl
add
dec
xor
dec
mov
dec
pop
xor
orl
ja
fldl
bound
pop
pusha
test
jb
sub
or
test
pop
cwtl
push
inc
sbb
stos
push
sarb
fnsetpm(287
call
movsb
fdivl
scas
pop
sbb
arpl
inc
mov
enter
rorl
daa
lods
jl
adc
aam
rcr
shl
bound
out
int
adc
fisubs
add
push
inc
pop
pushf
inc
jl
iret
mov
and
mov
cmp
cmp
push
aas
mov
mov
cltd
popa
cmc
mov
xor
mov
xchg
push
sbb
insl
xor
dec
insl
pop
pop
mov
in
mov
inc
call
push
pop
or
pop
in
out
jns
fdiv
mov
lds
xor
or
gs
lods
cmp
dec
addr16
unpckhps
das
jge
inc
push
fcomip
mov
scas
mov
shr
pop
cmp
adc
jnp
push
enter
or
jnp
xchg
xchg
cli
or
dec
cmpsb
loopne
xchg
pop
xor
shl
mov
daa
mov
mov
jge
fisubs
mov
stos
jecxz
dec
xlat
xor
jb
add
push
inc
push
inc
bound
sub
test
and
inc
out
xor
imul
sahf
test
idivb
add
xchg
jno
jbe
shl
and
lahf
xor
jecxz
ret
push
mov
push
and
enter
xchg
push
out
jo
cmp
push
push
in
inc
add
xchg
test
and
mov
adc
xchg
add
xchg
dec
push
loop
adc
adc
js
or
lea
hlt
add
mov
lret
push
pushf
inc
xor
mov
jl
jp
sbb
sbb
add
or
es
pop
movsb
push
arpl
out
in
test
cmp
out
mov
inc
cs
or
xchg
or
loope
pusha
test
inc
test
repz
in
das
clc
inc
lcall
pop
call
dec
fstl
ds
jne
xchg
std
dec
decb
cli
and
scas
fbstp
sbb
ss
xor
ret
mov
fidivs
cmp
jl
pop
mov
adc
push
mov
mov
in
pop
pop
ss
das
cmp
scas
jno
out
xor
xchg
outsl
and
or
in
push
and
cmpsl
outsb
out
sarl
mov
in
scas
test
push
roll
sbb
jbe
loope
ret
sbb
xchg
xchg
into
dec
ja
mov
orb
mov
aam
push
and
adc
clc
mov
mov
pop
pop
rcrb
push
dec
sub
popf
sub
rorl
repnz
dec
cmc
jge
or
push
add
mov
scas
push
pop
inc
stos
mov
test
cmc
inc
sub
or
arpl
idivl
xor
or
sub
mov
out
xlat
daa
xchg
dec
add
fbstp
sbb
int
out
xchg
das
aaa
neg
mov
xor
imul
stos
dec
je
fidivl
outsl
out
lcall
xchg
adc
dec
repnz
push
test
sub
setl
sbb
aas
mov
loope
js
pop
push
aaa
add
adc
aam
nop
lea
shl
sub
jecxz
in
lock
add
faddp
cmc
push
dec
inc
into
and
test
bound
shlb
sbb
or
movb
mov
jns
out
ds
adc
push
fstpt
js
ss
mov
test
xchg
xchg
xor
sarl
cmp
add
jbe
dec
aad
pop
pop
mov
lea
pop
fadds
fisttpl
into
or
xlat
adc
stc
das
xor
mov
xlat
xchg
loope
jp
nop
loopne
push
jmp
in
mov
into
jle
sbbb
repnz
mov
xchg
in
stc
sub
pop
ljmp
lea
cmpsl
xchg
dec
pusha
sbb
ret
cmpb
shll
dec
xlat
sub
push
mov
sahf
int
fldl
xor
xor
sbbl
adc
xorb
das
mov
xor
shll
pop
mov
mov
inc
pop
xor
push
stos
xchg
test
mov
push
mov
inc
negl
or
int
xchg
xchg
push
push
xlat
push
xchg
and
dec
lret
mov
adc
movsl
xchg
jb
adc
imul
scas
std
sbb
insb
jmp
pop
les
sub
fstpl
in
dec
add
adc
xchg
cli
scas
mov
pusha
scas
add
icebp
iret
sub
mov
mov
test
adc
imul
inc
push
sbb
test
call
pushf
xchg
lods
jne
xchg
clc
xchg
cmp
ret
adc
std
loope
icebp
and
pusha
imull
std
insl
push
xor
int3
jae
scas
hlt
sti
pop
jmp
cmpsl
adc
setle
xor
daa
out
mov
sbb
movsb
mov
int3
fs
inc
pop
xor
jno
pusha
push
mov
jno
inc
push
inc
ret
jmp
and
jno
jle
push
sti
xchg
or
scas
lods
lea
cltd
int
cld
arpl
push
icebp
and
inc
pushf
sub
imul
into
dec
nop
es
inc
push
cld
scas
movsl
in
lret
inc
jbe
cs
inc
ja
sub
fstl
jo
mov
in
rcll
jnp
outsb
inc
pop
dec
sbb
sar
push
cmpsb
lcall
enter
xchg
in
out
mov
dec
jae
cmc
cmpsl
nop
pushf
mov
mov
mov
mov
arpl
adc
repz
mov
dec
faddp
pop
sar
fstl
inc
mov
cmp
sub
push
or
xchg
das
add
in
ret
sub
jmp
fyl2xp1
jno
jae
dec
sbb
cltd
loop
iret
dec
xchg
rcll
cmp
stc
das
popf
leave
ja
push
jmp
add
fmull
frstor
popa
rclb
mov
jae
movsb
mov
inc
aas
cmp
sub
sub
or
mov
cmp
jg
mov
sub
stos
push
cld
cmpsb
adc
or
jl
inc
cmp
mov
ret
inc
push
scas
sbb
js
lahf
iret
aam
add
insb
adc
xchg
imul
dec
fmulp
sub
or
sbb
ja
jns
sub
sbbl
in
dec
fistl
and
mov
repz
sarb
mov
jo
movsb
or
xchg
mov
mov
inc
arpl
sahf
pop
hlt
mov
fidivl
mov
lret
xchg
sbb
aas
rcrl
fidivrs
movsb
jo
out
push
loopne
divb
add
test
inc
in
jae
or
testl
nop
mov
inc
hlt
pop
aad
pop
push
addb
outsl
out
arpl
and
xor
movsl
test
xchg
xchg
adc
lahf
stos
xchg
adc
ret
insl
sub
or
int
add
cs
mov
dec
or
clc
in
shrl
ret
add
out
out
movsb
insb
loop
addr16
in
inc
push
rcrl
aam
mov
xorl
es
mov
out
sub
aad
sahf
out
lock
mov
push
sti
sbb
cmp
mov
pop
push
ljmp
push
aad
sbb
ljmp
pop
pop
xchg
adc
cmp
pop
dec
nop
gs
das
sbb
popa
push
stos
adc
or
aas
sti
inc
push
cs
leave
mov
cmpsb
push
pushl
dec
ds
inc
adc
incl
mov
or
or
loop
repnz
roll
sub
test
lock
mov
xor
add
into
es
push
cmc
push
es
jp
xchg
pop
stos
das
jo
test
leavew
mov
and
cwtl
mov
and
scas
rcll
adc
jmp
jo
lock
in
repnz
push
dec
sti
mov
aaa
inc
add
stc
cmp
lods
sub
pop
ss
push
loopne
add
in
clc
mov
xchg
jmp
ds
jnp
add
sub
stos
divb
xor
in
in
pushw
add
and
jle
jne
and
gs
pop
xor
es
jge
testb
fwait
mov
xor
stc
pop
pop
mov
mov
push
adc
xchg
add
in
ret
arpl
push
data16
jbe
push
jo
cwtl
mov
out
jge
pushf
inc
ljmp
jns
mov
sbb
lret
pop
pop
inc
lea
shrl
and
xor
and
mov
jo
mov
push
hlt
mov
cli
aaa
lcall
pop
or
out
iret
repnz
xchg
inc
xchg
xchg
shll
jp
sub
add
sbb
add
bndldx
mov
cmpsb
or
xchg
push
movsb
mov
xor
push
mov
enter
scas
xor
pop
rcl
sbb
push
lods
cwtl
mov
adc
add
xchg
loope
mov
pop
ret
int3
hlt
adc
and
lret
jl
sub
jecxz
sbb
dec
gs
cld
add
imul
mov
movsl
jb
pop
xchg
mov
and
push
pop
jae
jbe
xchg
push
lcall
test
shll
test
xchg
push
nop
xchg
call
mov
out
cmp
or
mov
cmc
cmpsl
jnp
gs
sbb
leave
pushl
mov
xor
dec
ror
push
adcb
fdivrl
icebp
inc
adc
mov
push
call
adc
or
mov
and
pop
ret
fldt
adc
mov
loope
jle
mov
xchg
dec
mov
inc
stc
in
xor
jo
scas
imul
jp
dec
pop
pop
les
push
xchg
and
pushf
xchg
mov
out
xchg
lret
jecxz
jo
push
mov
xchg
mov
dec
lea
and
cmpsl
mov
jae
push
loop
cmp
sbb
sub
ret
push
xchg
fistpll
xchg
mov
fisubs
lock
mov
repz
adc
dec
add
test
inc
inc
lods
dec
pop
inc
int
leave
mov
testl
iret
sub
aam
movsb
insb
cmp
or
lods
sti
jle
mov
jne
sbb
push
or
fmul
jne
out
cmp
or
sbb
inc
mov
sub
insb
lods
add
cmpsb
mov
mov
mov
xor
es
cmc
pop
or
lret
js
sub
orb
add
cmc
aaa
add
cli
int3
js
fcomip
inc
clc
and
inc
insb
outsl
add
mov
into
aas
addr16
stos
mov
mov
loope
xor
mov
xchg
sbb
out
cli
dec
mov
jp
sbb
hlt
add
dec
or
out
xchg
inc
xchg
jge
loop
mov
imul
inc
push
lcall
stos
jne
jmp
push
sbb
mov
xor
fcompl
mov
in
adc
jb
mov
pop
dec
dec
cmc
jno
jg
mov
push
pop
dec
js
leave
adc
jae
mov
and
xchg
mov
scas
xchg
rolb
jne
mov
sar
decl
or
xchg
cmpsl
push
mov
and
sub
mov
or
inc
push
xor
popa
nop
jle
or
data16
or
inc
pusha
js
int3
xchg
xor
or
sub
push
inc
fcos
cmp
pop
mov
jno
xor
sub
push
xchg
mov
mov
mov
cli
out
sarl
dec
add
or
mov
add
inc
cmp
push
mov
add
xlat
jmp
lahf
gs
xchg
popa
sbb
movsl
fs
stos
add
push
push
gs
incb
sbb
inc
aaa
in
call
jmp
push
dec
bound
sbb
xlat
add
aam
mov
movsl
fstps
insb
jle
out
lock
inc
iret
dec
inc
xchg
mov
cmp
push
es
mov
mov
mov
push
andl
and
pop
outsb
xchg
xor
pop
jg
mov
push
mov
xor
mov
dec
pushf
out
mov
repnz
repz
inc
push
jbe
dec
call
in
imul
push
pop
mov
xchg
jno
movsb
and
out
clc
and
in
leave
xor
pop
or
add
add
out
jne
pop
lea
push
xchg
xor
cmc
mov
inc
arpl
test
pop
mov
sbb
jl
sub
scas
int3
test
insl
in
pop
sub
adc
insb
inc
fiaddl
adc
jle
or
data16
fiaddl
shlb
jns
call
in
sahf
pop
ljmp
push
push
mov
push
inc
fwait
xchg
xchg
add
das
jne
push
jb
cld
mov
sahf
or
stc
inc
dec
adc
adc
sub
scas
xchg
jnp
insb
in
push
in
and
out
or
push
mov
inc
in
adc
push
test
mov
mov
cmp
mov
mov
add
ss
movsl
xor
push
gs
clc
je
out
in
leave
jmp
addl
inc
xchg
sbb
fmul
xchg
add
mov
adc
popa
flds
cmpl
pop
jmp
outsb
sbb
inc
js
insb
das
gs
push
loope
cltd
lock
imul
out
dec
cmp
out
jmp
lret
imull
pop
and
push
gs
andb
xchg
or
and
std
stos
xchg
xor
jne
outsl
pop
mov
mov
ljmp
mov
push
shrl
test
inc
inc
fcmovu
test
pop
leave
push
ror
fistl
cmp
popf
jno
adc
sbbl
add
or
sub
push
cmc
sub
pop
stos
mov
imul
fwait
cmpsl
stos
arpl
dec
or
fidivl
jnp
fs
lds
jp
rcrb
into
clc
mov
push
je
mov
pop
cld
iret
add
pop
xchg
or
xor
inc
adcl
cmp
jns
push
ds
jp
syscall
rorl
test
add
inc
push
rorl
mov
into
fildll
mov
iret
sub
arpl
xchg
sub
sub
push
jns
inc
xchg
pop
iret
test
ja
out
jb
je
rorl
mov
push
clc
dec
dec
outsl
dec
xchg
in
or
mov
sub
fxch
jp
mov
jb
dec
orb
add
fsts
jns
jg
les
hlt
lods
adc
stos
inc
in
insb
or
mov
call
cmp
sbb
outsb
mov
inc
cltd
inc
sti
pop
dec
testb
movsb
pop
cmpsb
sarl
int3
out
addr16
pop
rolb
movsl
mov
std
pushf
pop
jmp
sti
push
adc
push
sub
mov
pop
loopne
jmp
popa
loopne
add
jg
adc
in
shl
in
pop
jp
sbb
inc
or
into
or
pusha
les
jp
nop
jbe
pop
dec
in
inc
out
or
mov
inc
ja
fs
daa
gs
test
mov
imul
sub
aaa
imul
xchg
scas
icebp
js
loope
xor
roll
daa
dec
push
pop
mov
dec
test
adc
aaa
testb
popa
imull
mov
or
jge
loopne
cld
imul
scas
and
xor
shrl
cmp
and
stos
xor
mov
xchg
or
imulb
mov
test
and
adc
mov
sub
sub
jnp
loop
push
movb
inc
or
adc
out
stc
popa
push
jbe
js
fsubrl
push
je
xor
xchg
sbb
add
fists
jmp
push
mov
add
dec
pop
dec
test
jbe
loope
movsl
cmp
or
dec
out
cmpb
lahf
pop
in
fisttps
add
jmp
dec
jp
dec
push
divl
push
cmpsb
clc
adc
pop
dec
fadd
jmp
clc
scas
push
ret
in
push
test
push
xorb
enter
push
xchg
int
cltd
xorl
stos
mov
into
je
mov
testl
lock
das
xchg
sbb
subb
mov
imul
fcmovnbe
xorb
ret
sub
leave
into
push
out
iret
jecxz
subps
dec
push
push
fmull
out
xor
aad
push
sub
das
xlat
sbb
and
in
mov
ds
loopne,pn
dec
sahf
pop
and
repnz
cmp
stc
test
loop
adc
subl
push
comiss
dec
shlb
xchg
pop
fwait
pop
fwait
and
int3
mov
test
sbb
repz
sar
cli
out
xlat
daa
adc
in
pop
iret
cmp
lock
cltd
push
lahf
lods
lods
mov
lds
push
jnp
adc
lret
movl
into
mov
aad
sahf
les
dec
gs
jo
jne
push
test
stos
cld
rcrl
pop
scas
sub
in
xor
in
mov
cmp
scas
arpl
xor
mov
and
sub
mov
sbb
inc
pop
aam
adc
insb
adc
mov
mov
cld
push
xchg
cmp
cmp
mov
addr16
ds
mov
cmp
cmpsb
jl
ror
cmpsl
sbb
sbb
xor
hlt
test
mov
jne
daa
test
aam
xchg
lahf
fnstenv
int
aas
mov
mov
jmp
sti
xor
push
aam
dec
in
cmp
add
js
shrl
mov
sti
sahf
xchg
repz
js
cld
jp
loopne
lods
jbe
int3
daa
aad
lret
daa
out
aam
test
inc
push
mov
inc
xlat
adc
test
pop
test
mov
or
sbb
cmp
lods
out
pop
test
and
xor
repz
aam
popa
rorb
test
mov
int
jns
dec
cmp
ljmp
fstps
in
repnz
wbinvd
cmpl
mov
cmp
sub
les
in
fdivs
imul
sahf
enter
dec
sbb
ret
movsl
insb
mov
sub
aaa
pop
into
das
jno
jns
cmp
out
cld
dec
push
xor
dec
orb
inc
mov
xor
movsl
pop
xor
outsb
adc
lods
movsb
gs
stc
inc
jle
mov
jge
or
in
cs
mov
mov
cltd
pop
sahf
outsl
add
jne
sbb
add
idivl
aaa
and
shlb
lea
aad
mov
out
dec
mov
inc
test
jae
sub
lock
or
push
test
out
cltd
fnstsw
aad
subl
outsb
ret
push
xchg
adcb
jns
movsb
sbb
lret
mov
nop
int3
out
in
jg
lahf
imul
aam
mov
xor
scas
jmp
xorb
loope
xchg
sbb
cli
popl
pop
jbe
xor
pop
testb
lea
int3
jo
and
cmpsl
loopne
fcomps
sbb
jnp
lds
inc
and
in
addb
push
movsb
lods
xchg
push
cli
iret
fs
in
jecxz
dec
ret
xor
iret
jmp
out
xchg
es
mov
lahf
andl
rcl
pop
lea
int3
mov
popf
sub
or
sbb
pop
adc
sub
pop
cmp
cmc
movsb
inc
stc
lahf
out
cmc
mov
sub
or
enter
cwtl
xchg
sarl
push
and
lea
inc
aas
lods
push
stos
addr16
orb
mov
ljmp
xchg
loope
cmp
sub
jbe
xor
dec
cmp
and
cmp
push
dec
add
and
mov
cwtl
sbb
dec
fwait
jl
mov
lods
mov
adc
fstpt
loop
xor
out
clc
add
out
and
cmp
inc
and
inc
je
jo
mov
push
in
ss
daa
mov
ja
pop
jb
out
cmp
adc
push
sub
loopne
fiaddl
mov
add
jbe
jl
mov
out
lcall
mov
or
lods
mov
outsl
jg
sarb
stos
xchg
sub
sbb
shrl
add
inc
push
adc
adc
push
mull
shrl
mov
push
ret
fstps
mov
xchg
stos
jnp
test
les
stc
inc
loopne
out
jnp
jno
shll
rcll
mov
test
idivl
lcall
add
faddl
sbb
push
and
cmpb
lahf
fwait
pop
xor
iret
shlb
jge
inc
int3
push
push
in
in
ljmp
cmp
add
xchg
mov
inc
mov
push
cwtl
jbe
mov
jg
pop
cltd
mov
and
adc
arpl
mov
jnp
cltd
xchg
sub
std
into
das
lahf
je,pn
lahf
dec
xchg
mov
subb
mov
imul
adc
sub
int
mov
add
adc
push
and
push
inc
hlt
mov
adc
inc
sbb
ss
aad
cmpsl
inc
cmp
and
arpl
bound
or
adc
inc
repz
mov
cmp
aaa
movsl
gs
mov
xor
mov
int
mov
cmp
mov
stc
loopne
fs
xchg
fcmovne
mov
sbb
lock
scas
and
mov
rcrb
punpckhbw
dec
cmp
xchg
sub
dec
adc
sbb
inc
pop
and
xchg
in
jmp
sub
xchg
push
and
pop
cmp
adc
outsb
jae
pop
idivb
adcl
jnp
pop
add
enter
movsl
sbb
inc
dec
leave
jnp
in
pop
push
mov
out
lret
lret
xor
sbb
jae
sbb
pop
imul
sub
ret
idivb
cli
or
insb
pop
inc
mov
sbb
testl
mov
aam
xlat
pop
dec
rol
cli
or
inc
pop
cmpl
jge
cmp
int
test
sbb
sbb
xor
pop
loope
xchg
or
xchg
loope
mov
bswap
adc
mov
pop
test
cmp
lcall
ret
and
out
leave
mov
outsl
xlat
jmp
div
iret
lods
mov
divl
adc
shlb
mov
mov
int3
add
out
lods
cmp
dec
pop
dec
popf
lods
dec
cld
cs
mov
scas
xchg
sub
pop
sbb
xor
arpl
pcmpgtw
les
mov
jbe
imul
in
pop
or
aam
shl
dec
repnz
outsl
sub
pop
and
mov
dec
add
fs
notb
int3
xchg
fs
sub
mov
sbb
loope
jmp
xchg
mov
jl
cmp
pushf
mov
mov
mov
mov
push
ss
jl
out
push
xor
stos
negb
lret
inc
cmp
and
pop
pop
fstp
std
and
xchg
sub
push
push
mov
cmp
mov
lret
fistps
repnz
pop
jbe
arpl
fiaddl
jg
lds
dec
subb
mov
mov
jns
sub
js
mov
shl
mov
and
and
add
icebp
mov
push
xor
les
popf
mov
cmpsl
or
stos
mov
and
mov
fmuls
push
adc
and
mov
addr16
add
cmp
loopne
sub
cmpsl
xor
mov
inc
test
push
dec
pop
pop
shlb
inc
imul
push
lcall
dec
sbb
subb
je
gs
mov
inc
mov
mov
test
sub
cld
push
inc
iret
pop
rcrb
jmp
push
rcr
test
and
mov
mov
cmpl
jo
subl
sti
ljmp
or
jb
or
mov
scas
mov
cmp
out
loop
pop
inc
mov
loop
sarl
out
cmp
gs
sbb
xor
and
ljmp
dec
lds
push
push
xchg
adc
out
add
dec
mov
jae
pop
adc
push
lcall
stc
out
fmull
scas
push
out
lret
cmc
pop
cmp
lods
lcall
push
dec
imul
and
mov
mov
bound
inc
fstpt
loop
int3
ljmp
sbb
and
les
xchg
out
or
mov
lret
mov
adc
jbe
adc
ret
sub
or
ret
adcb
mov
std
movsl
jne
add
dec
fisttpll
out
jge
fwait
sub
out
std
pop
sub
fsubrp
mov
jb
add
pop
lock
mov
sub
fs
adcb
xchg
lret
jge
cmpsl
into
stos
testb
shrb
jl
out
xor
dec
out
xchg
insl
jb
iret
mov
and
xor
sub
xor
scas
jmp
xchg
xchg
sbb
jo
or
xchg
movl
aad
fcompl
les
hlt
cmp
fmuls
sub
loope
movsb
cmp
aaa
jno
mov
push
gs
mov
pop
mov
repz
and
fildl
push
jne
adc
jge
std
adc
test
int3
jno
cmp
dec
xor
push
xchg
repz
xchg
mov
jae
loope
loopne
inc
jg
xlat
popf
aas
push
in
push
insb
adc
mov
insb
mov
das
sarl
or
in
mov
in
add
xlat
leave
sub
negb
xor
sbb
pop
xchg
cwtl
push
mov
cmp
flds
pop
add
scas
scas
pop
or
imulb
sbb
es
imul
cwtl
into
dec
fs
in
mov
test
mulb
insl
stos
push
ror
sbb
xor
sub
pop
nop
insb
sbb
frstor
dec
inc
sub
fsubr
aad
je
aas
cld
pop
rclb
or
lods
pusha
mov
xor
push
loopne
add
cmp
test
push
dec
outsb
sahf
not
and
mov
mov
shll
sahf
mov
push
sahf
lcall
add
push
rcrb
mov
xor
mov
ret
idivl
insb
or
dec
lock
inc
mull
enter
push
fldenv
sbb
daa
push
jge
dec
inc
xor
or
sub
subb
and
das
ret
xor
popf
or
fildl
sbb
jmp
xchg
xchg
mov
mov
cwtl
or
xor
cltd
adc
inc
lds
lcall
leave
pop
mov
icebp
sub
mov
inc
sarb
mov
mov
lcall
xlat
int
stos
mov
push
push
stos
andps
add
lea
rcrl
sbb
cmc
push
cwtl
inc
mov
push
xchg
sbb
xor
pop
cld
scas
out
jge
mov
sahf
xor
push
outsl
push
daa
insl
inc
jo
addb
cmp
pop
mov
jb
push
xchg
pop
les
push
cli
imul
inc
imul
cld
mov
popa
test
fdivl
xor
pop
xchg
inc
sub
lock
cmp
inc
adc
movlps
stos
in
aam
push
movsl
pop
pop
rol
push
jge
pop
daa
mov
push
mov
lock
hlt
xor
adcb
inc
adc
aam
popl
push
add
fnstcw
inc
mov
jbe
pop
jno
aas
pop
mov
imulb
adc
and
push
inc
mov
jb
pop
ljmp
mov
and
loope
out
and
xchg
jmp
arpl
dec
adc
lds
mov
sub
sbb
pop
js
shlb
in
cmpsb
sti
sbb
aas
test
xchg
pop
cld
in
mov
in
mov
mov
pop
shl
hlt
xchg
je
dec
call
sbb
sbb
int3
mov
scas
mov
xchg
movsb
rcrl
sti
orl
jmp
or
and
sbb
mov
or
mov
in
mov
repnz
push
push
jle
fs
repnz
or
inc
sbb
pop
and
and
inc
sbb
je
lds
aam
jns
pop
adcl
xchg
xor
cld
movsl
negb
clc
nop
jbe
add
xchg
cs
add
js
push
rcl
inc
aam
and
cwtl
pop
or
dec
lods
lret
xchg
outsb
jmp
adc
inc
movsb
add
je
iret
shlb
leave
mov
jb
xchg
loopne
divl
testl
aam
xchg
aam
pop
faddl
rcl
sbb
and
hlt
jmp
cmpsl
or
adc
pop
mov
out
push
xchg
dec
or
jae
and
xchg
lret
ret
jl
cmp
inc
outsl
cwtl
sub
mov
mov
insl
push
fcomp
xor
pop
test
sbb
les
add
call
jae
add
cli
insl
or
fmull
adc
inc
loop
mov
loopne
fidivl
fsubrs
lods
sub
cs
pop
mov
xchg
xchg
scas
shlb
push
jns
sti
mov
xor
movsl
cli
bnd
pop
cmp
addr16
sub
aas
daa
xor
frstor
fs
lods
hlt
loope
insl
pop
jb
sub
xchg
sbb
test
lcall
cmc
mov
push
jecxz
pushf
lock
mov
xor
xchg
clc
lock
test
lds
mov
adc
mov
add
popl
pop
out
fldcw
sti
dec
inc
xchg
dec
add
or
ret
pop
xchg
jb
adc
xor
or
shlb
jbe
stos
cld
pop
inc
mov
neg
inc
incb
adc
arpl
push
xchg
adc
xor
out
sbb
lock
mov
int3
es
loope
push
scas
push
aaa
mov
lods
cmp
sbb
aam
adc
sub
aas
pusha
or
gs
push
dec
test
hlt
xchg
dec
dec
ds
imul
std
inc
in
sahf
add
punpckhwd
cmp
rcll
pop
pop
mov
popa
xchg
cmpsl
out
mov
int
pop
xor
and
add
pusha
jno
aas
sbb
roll
add
outsl
inc
aam
dec
adc
mov
xchg
cmpsb
inc
movl
cmp
xor
fs
jecxz
add
mov
pop
jp
pop
sti
sbb
ljmp
sbb
mov
sub
mov
pop
dec
int
and
xchg
outsl
adc
xor
rcrl
insb
push
mov
outsl
push
inc
test
lods
push
push
adc
push
roll
es
lea
lds
leave
lods
push
dec
sbb
aam
jns
xlat
jp
outsl
mov
insl
jecxz
lea
int3
cmp
push
inc
ds
jne
xchg
pusha
or
push
iret
test
sti
mov
in
and
cltd
inc
dec
subl
sub
mov
mov
xchg
mov
loope
insb
and
mov
dec
test
mov
mov
clc
cmp
lret
xor
xchg
sbb
test
pushf
adc
pop
stos
popf
shll
sti
jne
adc
mov
mov
test
fldenv
inc
mov
push
pop
mov
fldcw
pusha
sbb
xchg
mov
mov
aam
call
mov
cmc
hlt
mov
sub
das
fsub
mulps
add
xchg
jo
dec
mov
cld
loope
lock
mov
pusha
mov
stos
in
jle
xchg
add
xor
jg
add
pop
hlt
inc
cmp
jo
in
xchg
call
lods
jae
xlat
and
shr
dec
test
or
mov
aam
or
xor
cmp
mov
sbb
fsubrl
ss
out
in
loop
sub
xchg
les
push
push
movsl
sbb
push
cmp
dec
jle
jae
pop
jae
add
add
sub
lock
int3
cmp
js
push
push
pop
or
pop
in
pop
cmpsb
nop
add
xchg
rcl
push
sbb
je
into
in
int3
or
or
aad
push
stos
sti
lret
test
movsb
sbb
jno
cmc
popa
xor
inc
sbb
arpl
lock
add
xor
inc
mov
sub
jecxz
push
jne
fstl
cmpsb
stos
fdivl
mov
inc
sbb
sbb
adc
push
mov
fsubl
and
roll
add
iret
pop
fisubs
add
nop
pop
cmp
popf
cmp
push
into
jg
int3
cs
leave
leave
inc
js
lds
loope,pt
jbe
repz
in
loop
dec
and
jbe
pop
add
in
je
mov
inc
stos
jb
push
jns
or
inc
test
push
mov
lea
mov
rcrb
popa
cmp
cmp
faddl
gs
or
xchg
int3
lcall
fwait
adc
ror
dec
jl
ret
push
rcrl
jbe
mov
pop
ja
add
cmp
jne
pop
inc
nop
test
es
aad
jmp
aaa
jecxz
es
lods
xchg
pop
loope
and
adc
sbb
clc
repnz
push
jo
repnz
push
fsubrl
inc
aas
out
test
inc
sub
fidivrl
push
in
sbb
shll
xor
mov
imul
insl
in
jl
xchg
pop
push
mov
pop
pusha
inc
xchg
mov
je
mov
scas
jge
je
jge
sub
xor
and
repz
lds
jmp
cmp
sbb
adc
out
scas
call
inc
add
sub
enter
mov
jge,pt
and
ret
inc
ffreep
mov
cs
ss
pop
nop
imul
pop
sarl
es
aad
mov
shll
ds
jecxz
xor
das
fsts
sub
pop
shll
dec
pop
cltd
popa
les
scas
scas
mov
adc
adcl
in
sub
cmp
lods
in
and
adcb
dec
sbb
jl
pop
xchg
sbb
mov
fidivs
add
sbb
jae
jae
sahf
or
ret
je
addl
push
and
lea
stos
and
bound
fwait
repnz
sti
inc
test
sub
sahf
mov
jle
cmp
mov
xchg
mov
in
cmc
mov
mov
ds
imul
mov
call
add
mov
rclb
icebp
inc
lcall
xchg
xchg
pop
inc
mov
dec
lahf
push
jae
je
outsl
inc
insl
repz
pop
add
cld
stc
adc
cwtl
stos
push
jp
dec
adc
push
cmp
sbb
mov
xor
enter
pop
fwait
add
xchg
pop
das
jl,pn
icebp
mov
pop
pop
ror
mov
cmc
push
push
jg
clc
fcompl
jnp
mov
adc
push
fsub
ds
bound
movsb
decl
mov
add
pop
shrl
xor
lcall
and
fmuls
mov
or
mov
mov
imul
lahf
lret
stos
out
xchg
xchg
testl
je
out
xor
sbb
jp
pop
pop
xlat
lds
cmp
iret
out
fs
and
andl
ret
push
inc
dec
ds
xchg
mov
stc
test
into
fidivl
ret
inc
inc
loopne
psubb
sbb
inc
mov
and
push
sub
inc
aam
or
and
push
dec
push
or
mov
sbb
test
out
inc
mov
mov
mov
jb
mov
and
sbb
xchg
pop
sahf
xor
pop
and
lahf
or
and
add
out
cmc
call
js
cld
dec
mov
clc
imul
mov
push
inc
in
ret
fistps
je
mov
cmp
shrl
cmp
fidivrs
orb
imul
sbb
aas
adc
mov
sahf
icebp
test
out
pop
pop
fisubs
loope
cmp
dec
adc
into
aam
mov
sbb
jmp
stos
in
mov
rcrl
movsb
mov
lret
rcr
mov
sub
push
cmp
sbb
leave
cmpsl
clc
inc
jno
mov
inc
and
std
xchg
lahf
call
mov
xor
sub
jo
lock
pop
jge
test
pop
in
mov
imul
int
pushf
push
inc
out
cmp
pusha
movsb
xchg
xor
mov
aas
lea
outsl
notb
in
sarb
lds
pop
out
ret
mov
pop
lret
pop
mov
nop
dec
xor
cmpsb
lods
out
ljmp
xlat
push
call
xchg
testb
call
inc
icebp
cwtl
pop
sti
xor
addr16
cmpsb
lock
cmp
notl
call
in
xchg
popf
imul
repnz
test
mov
mov
aad
scas
and
and
mov
jmp
xchg
cmp
sti
incb
and
mov
or
call
cld
aaa
dec
ja
pusha
mov
rolb
adc
test
xchg
xor
psubq
cwtl
add
loopne
outsb
push
lret
pop
pop
push
sbb
xchg
or
push
adc
push
inc
xchg
push
or
mov
in
xchg
mov
dec
jp
pop
add
push
fstpt
sub
push
and
xchg
pop
sti
sarl
vhaddpd
out
fdivrl
aas
dec
cmp
repz
ret
mov
xor
add
ja
add
nop
test
ud0
xchg
ret
pop
repz
outsl
sub
andb
jbe
lea
fistpll
hlt
add
cmp
mov
ret
dec
and
loope
cltd
lret
psrad
or
das
test
sbb
or
jo
inc
dec
pop
mov
adc
push
das
xchg
pop
arpl
fdivs
repnz
jecxz
sbb
xor
push
fcompl
ja
gs
jg
mov
inc
xchg
jb
inc
mov
xchg
adc
cs
mov
int
and
or
pop
nop
in
fsubrp
xchg
mov
push
push
popf
pop
inc
shrb
scas
jecxz
cmp
pop
and
les
or
add
rcl
push
jnp
push
adc
idiv
dec
mov
ret
stos
xchg
pop
mov
xor
xorl
push
stc
mov
sbb
mov
mov
cmp
aad
mov
xor
xchg
adc
pop
sbb
sbb
push
and
adcb
iret
jbe
sbb
dec
push
clc
das
mov
add
cmpsb
incb
or
je
aad
xor
jecxz
mov
push
inc
jge
add
iret
jb
into
pop
stos
dec
xor
xchg
cmpb
scas
cmp
cmp
fwait
mov
adc
sbb
and
sub
fyl2x
add
pop
xlat
icebp
xchg
and
add
dec
insb
cmpsb
rcl
xchg
push
jnp
ljmp
jbe
lahf
call
dec
das
pop
pop
pop
push
cmp
push
sub
shll
icebp
xlat
sub
dec
mov
mov
or
push
cmpl
xlat
int
mov
fnstsw
pop
mov
sub
sub
push
mov
and
sbbl
adc
fstl
and
xchg
inc
lcall
fs
cmp
fcompl
out
stos
fistpll
mov
xor
inc
mov
out
arpl
cmc
push
fidivrs
mov
ret
mov
stc
and
jp
fsubrs
and
stos
or
sub
mov
test
iret
or
fcomps
mov
stos
lret
and
imul
xor
test
and
out
jno
nop
int
pop
mov
xchg
mov
dec
sub
jns
ja
mov
das
out
or
pushf
lods
sub
mov
push
loopne
out
insb
mov
xor
je
mov
mov
repz
mov
push
push
mov
xchg
jae
scas
cmp
movsl
adc
xlat
in
aad
inc
mov
dec
in
test
cmp
sbb
push
sarl
cs
in
out
jb
loop
xor
sub
or
adc
mov
out
xchg
mov
int3
pop
dec
push
inc
mov
mov
and
mov
out
outsb
pop
inc
pop
push
js
cmpsl
aad
adc
imul
sbb
sahf
insl
push
add
insb
mov
add
adc
leave
lret
mov
mov
or
out
data16
ja
std
xor
mov
sbb
pop
shlb
lret
sbb
decb
dec
test
push
stc
xor
cli
jle
jmp
inc
adc
in
idivb
push
push
mov
sti
or
fbld
fsubl
mov
loop
inc
ret
add
push
sub
iret
shl
std
ja
es
gs
and
movsb
sbb
test
mov
cmp
fwait
aad
das
fidivl
or
cltd
mov
jno
scas
or
mov
cmc
cmp
xor
bound
and
insl
fcomi
jae
jle
cwtl
insl
xor
loop
cmpsb
hlt
mov
fstpl
int3
add
sbb
xchg
push
loop
aas
ror
xchg
loope
jb
andl
and
adc
int3
leave
movsl
jge
mov
dec
mov
outsb
add
push
arpl
or
mov
repnz
dec
pushf
pop
lds
nop
aas
xchg
xchg
sahf
popl
pusha
or
test
test
cmp
mov
dec
aad
or
scas
aaa
lcall
xor
xor
sar
lret
int
jl
loopne
sub
neg
loope
clc
dec
arpl
adc
mov
test
int3
xchg
inc
sub
cmp
mov
sbb
ljmp
or
xor
lcall
jne
xchg
addr16
xchg
ficompl
cmc
push
ret
or
adc
jmp
jae
sbb
lcall
test
mov
mov
rcrb
in
xchg
jno
jb
pop
lods
xor
push
fs
mov
inc
push
into
ljmp
shll
dec
jp
mov
fildll
add
and
ss
cmp
sub
mov
and
test
add
out
mov
imul
shll
in
inc
push
shrb
repnz
mov
mov
bound
pop
push
jl
in
daa
sub
push
aam
mov
pusha
psubb
hlt
scas
shlb
adc
or
or
lea
jg
js
mov
adc
jp
testb
arpl
cltd
shrl
sub
or
or
push
or
sahf
add
and
insb
dec
or
xor
ljmp
inc
sub
dec
sbb
cmp
aas
push
pop
inc
xor
push
mov
ja
lret
test
xchg
rcrb
mov
enter
out
sbb
sub
fcoml
jno
and
stc
int3
cmp
push
aad
sub
shl
jg
lock
aad
hlt
push
xchg
ljmp
aas
xor
pop
ficoms
pusha
repnz
inc
pusha
pusha
aas
mov
movsl
mov
nop
xchg
adc
mov
lock
inc
loop
xchg
daa
or
nop
repnz
es
arpl
sbb
mov
xor
push
or
sarb
sub
dec
pop
push
enter
inc
push
dec
add
sahf
pop
xlat
in
mov
js
mov
pop
mov
imul
sti
test
add
outsl
sbb
sbb
sahf
lods
leave
or
jmp
push
sub
cld
xor
int3
repnz
rcpps
idivl
mov
sbb
lret
dec
je
loopne
jl
scas
push
sbb
mov
jns
mov
adc
inc
xor
inc
sbb
cmpsb
sub
dec
pop
in
imul
vpshufd
sub
mov
fldt
loopne
bound
sar
lea
outsb
call
sbb
orl
pop
aas
mov
mov
jne
stos
enter
jge
xor
jmp
mov
in
sbb
push
jno
popa
mov
pushf
shll
fsubs
aad
sbb
stc
xchg
xchg
sbb
sbb
mov
fsubrp
sub
aas
jne
jle
and
int3
in
adc
push
jmp
mov
push
rcll
jmp
pop
cmp
ficompl
int3
sbb
xor
push
fst
fs
int3
fmul
cmp
lods
repnz
icebp
icebp
lds
and
lret
add
or
mov
mull
push
aaa
rcll
setno
popf
xlat
jae
sti
lahf
int
xorb
rorb
imul
outsl
cld
je
jno
stos
push
das
stos
ja
add
add
jmp
or
std
inc
outsb
push
sub
icebp
and
mov
bts
mov
mov
rclb
ret
add
lds
fwait
sbb
fadds
add
sarl
mov
push
mov
iret
xor
shlb
mov
sbb
lahf
push
cltd
mov
sbb
and
stos
ds
jne
hlt
mov
cmp
ljmp
data16
iret
mov
pop
sbb
clc
es
jge
dec
sbb
jl
adc
adc
dec
addr16
xchg
jge
lds
adc
test
sbb
mov
xchg
or
cmp
addw
daa
mov
cmpsb
lret
cmc
stc
pop
inc
std
fiaddl
mov
push
push
inc
pop
sbb
sub
add
pop
shll
inc
shlb
mov
add
pop
outsb
mov
mov
fisttpll
iret
xor
mov
daa
out
or
rcrl
dec
repz
cmc
pop
imull
pop
lret
sbb
push
push
and
push
ja
test
dec
mov
jp
dec
and
cltd
sub
cmp
pop
cmp
fisubs
mov
movsl
loop
cld
mov
sub
arpl
or
jmp
mov
or
jp
jns
mov
daa
pop
mov
xchg
loop
push
and
std
lcall
lahf
ljmp
xor
push
cmp
or
fdivs
and
sbb
jge
lods
call
mov
jg
jnp
addl
pushf
mov
mov
mov
cltd
fcoms
mov
mov
dec
movsl
pop
mov
rolb
sbb
rclb
int3
jge
dec
bound
pop
jns
jb
iret
fwait
push
movsl
in
and
out
scas
stos
xchg
lahf
mov
das
cli
out
jmp
pop
cld
stos
ds
dec
xlat
lds
xor
fstpt
dec
popf
aas
fwait
shlb
gs
out
and
in
inc
or
sahf
aad
jne
push
cmpsb
into
sub
push
mov
pop
roll
inc
or
xchg
or
jbe
addr16
or
dec
iret
fsts
cwtl
mov
rclb
sahf
cmp
dec
roll
inc
mov
cmp
mov
loopne
dec
xchg
adc
xchg
mov
out
mov
rcrl
push
aaa
ja
push
lret
xor
shrl
mov
xor
cmp
int3
repnz
and
inc
iret
in
xor
addr16
xor
aas
ds
jbe
jl
lea
sar
xchg
test
ficoml
cli
stos
mov
xlat
jae
scas
scas
std
loope
lds
decl
add
dec
pop
dec
or
sbbl
test
xchg
cmp
enter
or
mov
pop
lret
sti
addb
rorl
sub
mov
or
scas
fists
sbb
arpl
leave
repnz
mov
scas
mov
fnstenv
mul
addr16
mov
ret
adc
popf
xchg
jl
movsl
daa
xchg
out
popf
dec
pop
aaa
idivb
insb
xor
xor
push
out
in
loope
jno
lret
lahf
adc
inc
sub
mov
sbb
fsubs
push
and
push
movsb
mov
mov
add
iret
sub
mov
fstpt
dec
out
and
lcall
dec
ud1
mov
adcl
mov
nop
ds
push
mov
iret
pushf
pop
dec
leave
jle
loope
jno
out
sarl
dec
or
in
sbb
sub
test
out
dec
pusha
ret
jmp
cld
ja
mull
xchg
nop
movsb
push
popl
sub
dec
shrl
and
or
ljmp
push
xor
sti
ficompl
dec
test
cmp
mov
loopne
mov
mov
mov
in
dec
dec
cmp
sbbb
int
dec
cwtl
xor
pop
popa
push
test
fimuls
lcall
int
ds
dec
lret
mov
push
jge
jo
add
lahf
dec
or
sub
jp
xor
scas
call
movsb
mov
xor
outsb
adc
xchg
negb
loope
xchg
cli
popf
les
jl
and
stos
sti
pop
pop
scas
inc
out
adc
hlt
in
ret
aad
call
ficoms
mov
roll
in
adc
sub
add
out
andl
outsb
sbb
jg
push
mov
shlb
mov
shll
mov
lahf
mov
out
sbb
mov
mov
or
ret
cmc
js
lret
inc
pushf
stos
dec
es
cmp
pop
push
xor
xchg
and
dec
and
inc
test
popf
sahf
cwtl
popl
stos
cmp
xchg
sahf
xchg
pop
mov
cmp
pop
test
lahf
sarl
dec
test
sbb
mov
mov
add
xchg
lock
popf
loope
jb
dec
pusha
arpl
imul
andb
dec
mov
pop
mov
push
pop
adc
cmp
xchg
mov
fadds
adc
cltd
gs
les
scas
jp
cmp
sub
scas
inc
mov
xor
push
in
jl
ss
inc
and
and
inc
pusha
dec
cmp
sub
inc
sub
sbb
data16
daa
stos
int3
out
into
pop
jp
lods
push
ds
mov
mov
inc
jno
shl
addr16
fistpl
pop
or
in
and
inc
ss
mov
push
dec
or
cli
cs
jge
psrld
pop
mov
ss
jp
pop
jg
out
enter
xor
push
test
movsl
dec
mov
cld
lret
adc
mov
inc
jge
sub
mov
divb
ret
and
cmp
lahf
xchg
outsl
in
arpl
dec
inc
arpl
push
mov
sarl
sahf
addb
shrl
or
or
es
cmp
fs
mov
roll
rcrb
fisttps
adc
in
add
test
lods
xor
inc
nop
inc
inc
xor
sub
push
xchg
push
xor
in
mov
cmpsb
xchg
pop
decb
push
dec
sarl
xchg
imul
mov
dec
cmpsl
xor
push
stos
insb
cld
jb
enter
inc
loope
pop
mov
daa
pusha
pop
sub
incl
add
mov
adc
pop
mulb
fwait
cmpl
or
daa
orb
cmp
pop
jae
mov
mov
xchg
xor
leave
mov
shll
shrb
stc
pop
sbbl
dec
push
pop
ficompl
shlb
fcoml
jo
js
popa
inc
sbb
ficomps
imul
mov
mov
push
pop
pop
xor
mov
sbb
inc
add
mov
repnz
sbb
add
orl
aas
imul
sbb
xchg
dec
cmp
sub
pushf
sti
loope
ljmp
lahf
mov
push
sti
push
cmp
jge
test
push
inc
jbe
pop
or
jns
jno
icebp
cltd
scas
jmp
shlb
cmp
lret
jno
in
into
jl
and
dec
dec
pop
push
add
cmp
pop
test
and
je
in
shrl
inc
js
push
mov
shlb
ret
mov
mov
or
mov
adc
xor
ds
mov
mov
cmp
dec
sahf
imul
mov
test
and
int
mov
ss
in
mov
in
cs
int
jp
push
inc
xor
adcl
add
adc
xchg
out
lret
icebp
xchg
mov
adc
cmp
push
add
adc
int3
bound
xchg
xchg
fsubr
cld
in
xor
bound
jae
cld
outsb
jl
leave
cld
inc
mov
push
call
mov
xor
pop
aaa
xor
icebp
or
sbb
pop
call
add
sbb
test
bound
and
xor
notb
add
inc
sub
or
xor
into
popa
call
push
movsb
jno
ret
leave
add
push
fdivr
popa
mov
jg
scas
cmp
dec
push
mov
fs
mov
movl
int3
jmp
push
movsb
mov
outsl
pushf
jb
stos
xchg
movsl
pop
fsubrl
sbb
aas
sub
iret
les
cmp
mov
or
jge
in
push
pop
mov
push
mov
push
pop
or
jne
inc
jne
and
ss
mov
inc
mov
das
dec
int3
lods
mov
loope
adc
mov
movsb
out
outsl
imul
xchg
repnz
in
lock
sbb
imul
dec
pop
pop
aas
jmp
jle
add
in
int3
or
out
iret
mov
jmp
je
mov
add
pop
iret
or
cs
xchg
pop
add
or
outsl
push
cmc
push
push
xchg
fwait
in
pop
in
jecxz
inc
xchg
pop
cmpb
fdivrs
mov
aad
adcl
lret
aam
jnp
cmp
push
lea
or
sub
inc
push
cmpsl
sbb
adc
pop
andl
in
int3
nop
lahf
push
and
inc
mov
push
in
cli
pop
enter
jmp
pop
xlat
pop
rol
test
xor
adc
mov
lahf
sarb
mov
inc
fdivl
dec
test
mov
cmp
jnp
in
daa
pushf
cmp
scas
adc
fucompp
jle
enter
dec
push
popf
dec
iret
enter
pop
mov
shrw
lods
mov
ja
arpl
push
add
adc
in
xchg
ds
sahf
hlt
inc
mov
jmp
jp
cmpsb
imul
push
cli
dec
into
jnp
arpl
or
or
imul
pop
push
es
mov
dec
mov
mov
mov
add
dec
xor
sbb
inc
rorl
arpl
dec
and
fs
sti
adc
jg
pop
push
and
or
xor
xchg
insl
mov
ss
xor
daa
mov
outsb
cmp
jmp
test
xchg
and
pop
add
add
inc
sub
sub
sub
pushf
cwtl
movsl
mov
inc
les
add
jecxz
push
adcb
outsl
xchg
push
sarl
js
pop
inc
jae
aaa
pop
jo
sarl
rcr
loopne
lahf
add
leave
mov
out
sbb
adc
inc
pop
mov
out
in
shl
lahf
test
int
xchg
sti
push
and
jp
sti
test
scas
jno
jns
cli
enter
cli
xor
add
insl
lret
and
adc
xor
pop
imul
inc
cmp
adc
mov
ret
fstps
ja
pop
int3
sub
loopne
inc
dec
xor
or
jl
daa
aam
ret
dec
cmpsb
jecxz
mov
loopne
mov
push
dec
add
push
or
or
jae
inc
movsl
jns
stos
push
sbbb
add
sbb
or
jnp
mov
stos
scas
das
jnp
outsb
ret
std
insl
popf
ljmp
mov
pop
inc
jno
ss
or
enter
je
push
xchg
pop
ss
loopne
mov
popa
repz
lret
nop
mov
ret
inc
cmp
pop
push
add
int3
xchg
mov
and
xchg
hlt
out
push
push
mov
imul
jp
fiadds
mov
push
scas
icebp
add
loope
lock
mov
sbb
test
jnp
movsb
aaa
insl
inc
daa
inc
adc
pop
mov
or
arpl
idivb
sahf
mov
cli
push
push
dec
cmp
les
iret
ja
xchg
sub
mov
les
cmp
push
jae
iret
dec
enter
sub
stc
jecxz
sar
sbb
sbb
nop
cmpsl
pop
incl
and
js
mov
dec
shll
add
mov
in
add
xor
and
mov
call
xor
bound
inc
shl
xchg
inc
push
loope
loope
and
jle
ret
aas
add
cmp
add
mov
dec
push
lahf
pushl
inc
cmpsb
icebp
test
notb
pop
mov
jb
sbb
mov
dec
and
enter
imul
stos
xchg
push
nop
or
xor
xchg
jae
pop
jo
sbb
mov
inc
adc
xor
mov
and
push
mov
xor
push
scas
push
into
sarl
sbb
mov
arpl
dec
mov
mov
cmpsb
jp,pn
xchg
in
test
rclb
outsl
insl
cld
lock
adc
stos
icebp
or
dec
jecxz
enter
xor
cmpsb
unpckhps
movsb
xchg
stc
je
data16
mov
outsb
repz
repz
scas
sar
lahf
inc
cmc
les
out
mov
lods
test
xchg
ljmp
aad
cmp
or
mov
cmp
fsts
mov
jle
sbb
ljmp
xchg
arpl
pop
xor
cmpsl
cs
sub
pop
aas
jmp
jl
or
stos
mov
mov
stos
shll
sti
jns
sbb
inc
mov
adc
divb
icebp
leave
in
in
jle
sub
or
jae,pn
in
test
out
pop
int
cmpsb
and
xchg
push
xchg
ja
fsubrs
fcomip
dec
into
hlt
xchg
lcall
xlat
sub
icebp
loope
ss
ret
xchg
jno
shrl
or
shl
jns
jno
inc
sub
cmp
ljmp
adc
push
and
pusha
xchg
aaa
xchg
mov
pop
rcl
dec
jle
jge
bswap
mov
jecxz
inc
cmpsl
in
inc
stc
mov
pop
shlb
leave
clc
mov
fdiv
icebp
mov
add
out
sbb
inc
and
nop
inc
cmpsb
and
sbb
mov
push
sub
filds
xor
inc
clc
push
data16
mov
mov
rclb
jg
ljmp
into
mov
mov
xor
cmp
mov
out
test
push
gs
jge
aad
inc
es
sub
pop
and
aam
adc
sub
xchg
rcrb
dec
cmp
fisubl
lea
or
movsb
pusha
xchg
stos
push
push
sti
push
xor
push
adc
xlat
rorb
sbb
jg
cmc
rcll
cmp
fstps
cld
and
jp
ljmp
fcomi
daa
cmp
pushf
sub
mull
push
and
inc
mov
mov
sbb
loopne
leave
add
sub
leave
inc
std
sub
and
hlt
sub
lods
cs
hlt
imul
gs
jg
enter
movsb
mov
cwtl
sub
push
push
imulb
inc
addr16
mov
shl
test
or
sbb
adcl
clc
or
out
add
aad
mov
push
mov
inc
xchg
rclb
in
adc
pusha
adc
ret
and
ror
adc
sub
stos
pop
or
push
push
mov
or
cmpsb
xchg
fldenv
jecxz
ds
es
push
leave
pop
rorb
cs
add
lret
in
dec
and
or
and
jbe
sbbl
rorb
ret
in
shll
fs
jbe
stos
jne
loope
das
leave
push
int
push
sahf
mov
jg
jmp
jg
push
adc
inc
jmp
outsl
mov
xchg
fwait
stc
rcr
inc
push
rcrl
bound
jb
sbb
gs
mov
sbb
ror
mov
or
push
int3
jns
dec
adc
mov
push
mov
lods
jne
push
sub
push
jge
jge
lret
mov
enter
xor
outsb
mov
adc
lock
idiv
mov
dec
mov
ds
out
popf
dec
add
push
xor
int3
adc
mov
jmp
xor
and
pcmpgtb
jle
jle
cld
aaa
fisubs
lret
jp
gs
xchg
jl
aad
lds
cld
mov
aas
mov
call
sbb
lcall
ret
and
sbb
xor
xchg
notl
iret
ja
or
scas
movsb
lock
cmc
insb
insb
ss
sub
inc
and
fsub
mov
mov
sub
aad
jb
sbb
popf
mov
test
div
sub
cmp
pusha
mov
pop
xchg
xchg
sbb
inc
mul
scas
mov
pop
dec
ret
sbb
aas
sti
add
and
jbe
jmp
int
and
cmpsb
psubsw
cmc
pushf
fldl
mov
lods
in
mov
xlat
push
push
mov
push
push
jmp
cmp
mov
add
pop
fisttpll
add
jo
xor
add
addr16
je
sbb
inc
xchg
and
jo
jge
and
aad
or
xchg
fstpt
xchg
cmpsb
stos
mov
sub
aad
pop
jbe
xchg
js
push
jg
push
int3
sbb
shl
push
add
add
call
adc
jo
and
jne
jb
sti
lock
jbe
xor
popf
or
sbb
jbe
loopne
jns
jg
int
loopne
scas
sbb
in
lods
call
jmp
int3
or
aam
jge
mulb
icebp
stc
xchg
cmp
add
and
adc
inc
fldcw
stos
fcomps
in
fistpl
data16
aaa
mov
push
push
jecxz,pn
xor
and
sub
mov
pushl
js
mov
lret
fstpl
and
pop
push
pop
and
dec
addr16
and
cmpsl
rclb
jmp
xlat
jmp
xchg
cld
inc
repnz
jl
mov
loope
push
cmpxchg
xor
pop
test
xor
data16
sub
xor
out
lock
rcrl
push
mov
cltd
pop
pop
xor
push
ja
pop
push
outsl
stos
adc
xchg
test
push
cmpsb
add
adc
mov
xor
sub
mov
adc
pop
sub
sub
adc
cmp
dec
idivb
popf
mov
in
inc
lret
push
out
cmp
sti
add
push
enter
mov
and
lahf
adc
jae
ja
repz
orl
mov
xor
xchg
add
shrb
push
imul
ljmp
xor
push
repnz
repz
inc
ja
pop
addb
lds
rorl
inc
mov
int3
jl
adc
adc
sbb
push
mov
shrb
cmp
test
xor
adc
dec
mov
js
movsb
mov
js
int3
pshufw
int3
movsb
fucomp
gs
push
imul
mov
pop
xlat
aaa
ret
inc
sbb
pop
jne
cltd
pop
or
sub
xchg
arpl
jl
xchg
movsl
push
mov
cmpsb
popa
sub
inc
jae
xor
jl
mov
mov
mov
pop
aaa
arpl
leave
pusha
stc
arpl
fidivrl
popa
mov
cmp
dec
cmp
subl
and
outsl
call
sbb
mov
in
fmuls
jp
xchg
mov
sub
negl
cmp
dec
push
push
dec
fs
in
push
ja
adc
mov
clc
dec
bound
push
adc
loopne
test
inc
sbb
std
add
or
xchg
adc
push
sbb
sub
mov
pop
int3
and
pop
cwtl
icebp
sbb
repz
js
fstpt
cmpsl
mov
inc
nop
mulb
push
mov
nop
mov
outsl
adc
test
ljmp
out
xchg
std
mov
and
push
cltd
inc
mov
sti
xchg
or
pop
cmpsb
movsb
adc
outsl
mov
insb
dec
xchg
mov
inc
fbstp
test
dec
jmp
xor
or
ljmp
jp
in
inc
ss
stos
or
mov
int
je
mov
test
outsl
jecxz
popa
mov
es
ljmp
dec
clc
rcr
push
sub
dec
mov
mov
popf
mov
push
dec
pop
jecxz
addb
xor
in
jno
js
cs
mov
lds
or
mov
push
test
adc
out
jmp
push
mov
mov
in
and
xchg
cmp
jg
daa
xchg
inc
mov
xchg
adc
scas
dec
mov
pushl
jb
mov
xchg
mov
lahf
jae
jmp
jg
out
aam
int3
cmpsl
sbb
cmp
ret
pop
lods
cmp
jecxz
mov
mov
sbb
rcll
fistpl
jns
stos
testl
cmp
xchg
or
mov
andl
push
xchg
and
adc
inc
xchg
mov
pusha
cli
and
inc
mov
push
dec
cmp
push
xchg
mov
mov
add
dec
pop
mov
in
fisttpl
xchg
xor
push
sub
sbb
cmp
fidivrl
div
jo
fdivl
lret
push
sbb
cmc
shrl
cmpb
aas
adc
sub
popl
gs
mov
lds
int
xor
cwtl
xchg
insl
mov
jp
nop
xchg
jg
test
mov
jne
xchg
dec
notl
mov
mov
cltd
test
jbe
push
mov
cmp
popa
fildll
mov
sbb
push
clc
jmp
cmpsb
mov
jbe
fcmovb
stos
push
enter
dec
mov
inc
dec
cli
push
adc
inc
sub
negb
movsb
ljmp
dec
cmp
imul
loope
aaa
scas
mov
mov
jnp
cs
mov
add
sub
mov
mov
cmp
scas
jbe
cltd
hlt
int
popf
out
jecxz
pop
xchg
jecxz
push
sti
push
dec
cmpsb
pop
aam
push
insl
mov
adc
dec
out
jecxz
and
aas
sub
iret
fsts
out
sub
aad
and
push
popf
adc
dec
xchg
and
rcrb
in
add
fistl
inc
loope
js
sub
dec
sub
stos
lcall
mov
ss
dec
push
and
dec
mov
push
xor
mov
jmp
jmp
inc
orb
xor
aaa
pop
imul
mov
aad
out
jne
add
hlt
les
pusha
int
jne
push
xorb
loop
inc
jne
mov
sbb
clc
orl
mov
movl
cmp
scas
and
jne
aam
out
or
pop
popa
loope,pn
jo
push
es
daa
lods
pop
stc
xor
jecxz
imull
into
and
jecxz
pop
jg
add
insb
nop
xchg
push
jb
lea
sahf
inc
fsubr
or
fcmovnu
xchg
jp
clc
cmpsb
xlat
jmp
mov
test
mov
fnstcw
cmc
push
jge
dec
xchg
repnz
testl
adc
push
imul
sbb
lods
xchg
int
lds
int
enter
imul
out
test
enter
xchg
or
pop
sbb
aad
popa
add
cmpl
xchg
adc
adc
ficompl
xadd
cmp
cmp
push
inc
out
mov
jg
les
xor
into
jp
xorl
inc
push
jmp
mov
or
out
xchg
call
out
fisubrs
mov
push
fwait
int
pop
gs
loopne
mov
push
lret
fimuls
loope
arpl
sub
shlb
movsl
mov
xlat
add
test
pop
int3
mov
xchg
movsb
push
mov
out
subl
cmc
stos
mov
push
jmp
add
mov
lcall
pop
xchg
push
or
shlb
mov
push
jecxz
adc
adc
and
and
push
mov
mov
push
jge
punpckhbw
xchg
jle
icebp
rorl
push
test
fbstp
lds
sti
aad
cld
mov
push
xchg
icebp
xchg
sbb
xor
call
and
out
lock
mov
out
dec
or
pop
adc
inc
xor
ja
sub
xchg
xorl
iret
mov
sarb
mov
std
and
repnz
or
push
popa
mov
adc
mov
ret
mov
jg
xor
mov
dec
cld
adc
pop
adc
xchg
or
or
sarb
loope
lret
pusha
dec
inc
push
sarb
scas
xchg
push
cmp
xchg
sub
xor
lahf
mov
shr
dec
xor
mov
fwait
and
jnp
loope
jae
fwait
mov
test
push
push
add
das
inc
aas
dec
ds
lods
mov
ja
jle
sbb
dec
mov
rcr
dec
movsb
adc
push
adc
mov
dec
ds
icebp
jp
in
xlat
mov
aad
popa
jl
les
nop
add
es
pop
std
sub
sub
push
push
in
xchg
cltd
sub
test
mov
inc
and
in
stc
inc
cwtd
pop
shll
idivl
aam
clc
xor
scas
jb
sbb
or
add
pusha
dec
loope
sbb
rorb
movsb
aad
sub
xlat
addr16
ror
mov
roll
pop
add
imul
ret
je
out
xor
loope
call
call
mov
sub
out
sbb
pop
ficoml
bound
mov
dec
fisttpl
fsts
pop
sbb
insl
testl
pop
push
les
cld
mov
cmp
jge
pop
popf
ret
call
sub
lds
shll
out
fmuls
fcompl
xor
adc
mov
add
xchg
mov
sbb
test
ret
or
cmc
adc
cmp
fbstp
push
jno
gs
and
cs
decl
xchg
loopne
xchg
pop
outsb
ljmp
cwtl
and
stos
cmp
push
pop
dec
iret
test
pop
orl
inc
jo
dec
pop
leave
xchg
pushf
ftst
out
mov
ss
ljmp
xor
jb
mov
push
xchg
cmp
aam
js
out
aad
cwtl
push
xor
pop
inc
dec
fstpt
cld
add
pop
test
add
arpl
cmp
pop
inc
inc
scas
repz
dec
testl
enter
cmpsl
int
in
test
lcall
je
sub
mov
cmp
std
cmpsl
or
cmp
cmp
and
fmulp
cmc
cmp
mov
xlat
pop
adc
push
or
pop
dec
subb
sub
jbe
push
sub
push
mov
inc
inc
fisubs
pop
push
add
outsb
int3
and
stos
aad
std
push
lahf
cmp
push
imul
dec
jmp
xor
pop
push
jmp
ror
sub
jmp
pop
hlt
push
mov
sub
cli
out
sub
loopne
incl
movsb
scas
pusha
push
push
rclb
cli
pusha
test
jle
test
dec
leave
mov
cmpsl
inc
jp
shll
lret
push
push
sbb
mov
aam
jl
adc
fdivs
dec
testb
push
inc
pop
inc
or
xchg
fbstp
adc
push
fiadds
push
jae
out
cmp
jae
xchg
popa
insb
push
je
jp
mov
xchg
mov
mov
aaa
out
hlt
lahf
dec
lcall
flds
and
lahf
and
lret
mov
jne
xchg
mov
push
stc
and
cmp
sahf
mov
std
pop
push
and
bnd
sub
add
sbb
adc
push
sub
es
lods
js
das
stos
int3
adc
aas
cmp
xchg
jle
shr
or
aad
jno
adc
xchg
add
std
pushf
sub
inc
push
xor
loope
movsl
and
jl
addr16
imul
jne
xchg
mov
into
loope
mov
cli
sbb
bt
je
or
and
xchg
mov
cltd
notl
mov
outsb
aas
popa
cs
popf
js
clc
data16
test
rolb
adcb
mov
je
jg
add
pop
inc
vpunpcklbw
sub
lret
mov
inc
pusha
insb
hlt
pusha
mov
gs
pop
lret
lret
pushf
sub
cmp
aas
xchg
jnp
jmp
inc
adc
ljmp
sub
rol
fistpll
aaa
in
jge,pt
push
mov
testb
pop
cmp
push
mov
sahf
cmp
xor
testb
adc
jge
fs
movsb
sub
mov
pop
cmp
fs
incb
shrl
dec
adcb
repz
mov
xor
add
les
lods
add
jle
div
test
loope
insl
aas
adc
outsl
int3
dec
or
test
dec
sbb
pusha
in
nop
in
jle
mov
shrl
pop
lods
jle
jl
jge
cmpsl
mov
xor
jecxz
stos
sbb
cmp
call
sbbb
mov
or
lods
dec
je
dec
fldt
leave
insl
mov
push
xchg
fldenv
mov
bound
mov
mov
dec
pop
mov
out
addr16
daa
inc
repnz
push
fwait
les
or
ret
pop
clc
das
mov
xor
sub
and
push
mov
mov
sbb
cld
and
adc
sbb
push
negl
and
jge
addl
enter
sarb
loopne
xlat
movq
insl
jp
push
xchg
mov
xchg
mov
mov
cltd
push
mov
sbb
or
mov
jns
xor
ja
ja
add
repnz
xchg
int
lds
arpl
ja
iret
sub
sub
hlt
aaa
mov
push
std
insl
xlat
popf
fxam
xchg
xor
je
pop
mov
xchg
mov
mov
loope
aas
fdivr
cmp
cmp
mov
xor
shll
jle
ljmp
inc
stc
and
mov
push
jmp
jecxz
mov
fsubs
jne
scas
jecxz
inc
add
outsb
addb
mov
clc
mov
fstpt
xchg
jmp
mov
add
lahf
stc
sub
jmp
lret
shr
xorl
arpl
xor
in
push
lds
stc
hlt
push
adc
dec
jno
adc
lahf
int3
jmp
dec
mov
push
push
aaa
popf
sub
mov
push
dec
fidivrl
mov
fiadds
popa
push
rolb
or
cmp
sahf
xor
jecxz
mov
jl
sub
and
iret
or
fcoms
and
adc
idivb
popf
mov
cmp
push
add
in
inc
inc
and
cmp
pop
lods
add
mov
cs
add
ficoms
adcb
lods
mov
test
dec
cld
mov
hlt
mov
lock
pop
adc
sbb
and
and
stos
call
push
cld
jbe
add
cmp
xchg
dec
mov
ja
fisubrs
dec
ljmp
in
pusha
push
movsb
sahf
adc
push
sarb
ljmp
push
adc
cmp
xor
fptan
xchg
enter
jbe
int3
popf
jb
or
ljmp
aas
insl
popa
sub
mov
jae
inc
movsl
xor
fdivrs
loopne
ss
out
pop
gs
or
roll
xchg
iret
lods
inc
xor
sub
sahf
das
sbb
and
cmp
ffree
nop
mov
ja
dec
loop
jge
stc
mov
adc
das
mov
sar
movsl
test
data16
jmp
stc
xor
mov
shr
cld
shlb
ljmp
enter
daa
jne
fistpll
or
adc
mov
mov
push
mov
outsb
pop
xchg
adc
or
leave
xchg
xor
loope
clc
lret
jb
lock
sub
pop
call
std
add
jmp
vpshlq
fs
and
hlt
je
add
pop
movsb
dec
ret
lret
loop
push
test
xchg
and
push
stc
xchg
imul
inc
cmpsl
xchg
xlat
popa
cmp
mov
sti
sub
mov
rcrl
xchg
inc
sbb
je
mov
push
pop
enter
cmp
or
or
scas
fcmovne
xchg
bound
lahf
push
jnp
sub
jp
ret
lret
fidivrl
js
sti
mov
mov
outsb
add
sti
leave
xchg
push
pop
xlat
xchg
cmpsl
push
xchg
mov
stc
jle
inc
jbe
cld
and
push
out
mov
jl
enter
adc
pop
cmp
push
das
xlat
fwait
jge
jp
daa
pop
push
jne
mov
pop
inc
lcall
outsl
push
inc
mov
daa
fcomi
jmp
mov
and
hlt
adc
and
ret
out
lret
and
int
and
cmp
or
jb
rcl
push
je
cmp
jg
jecxz
nop/reserved
data16
pop
or
popa
jbe
imul
fdivl
mov
gs
and
or
xor
jnp
push
mov
int3
push
jbe
pusha
push
roll
mov
xor
call
rcrl
push
arpl
movb
mov
adc
loope
jecxz
mov
icebp
adcb
xchg
or
push
out
je
mov
and
pop
int3
inc
mov
add
sbb
stc
cmp
mov
xchg
pop
sub
pop
pop
cli
pop
xchg
xor
rcrb
fnstenv
jne
jo
sahf
into
ja
pusha
jnp
pop
fidivrs
mov
ret
xchg
and
and
nop
cmc
outsb
popw
movsb
movsb
fiadds
jle
push
sbb
stos
aaa
faddl
adc
mov
dec
mov
push
jnp
jns
sub
ret
clc
mov
into
mov
fsub
inc
cmp
jne
mov
repz
xor
sub
cmp
pop
adc
setae
mov
lods
push
push
icebp
or
fsubr
fdiv
mov
or
ds
cmp
sub
mov
push
cmp
test
arpl
adc
xchg
lock
cld
push
dec
pop
push
dec
fstl
mov
pop
jg
out
and
test
in
fucompp
rorb
cmp
fs
fwait
lds
cmp
or
in
mov
pop
loope
ds
dec
pop
cmc
lea
sbb
jmp
inc
or
jo
sar
sub
push
xor
push
and
mov
stos
leave
sbbl
aad
mov
loop
jmp
mov
or
xor
cmp
fwait
inc
cld
movl
pop
outsl
pop
pop
and
arpl
stc
jo
cmpsb
out
sbb
sub
stos
stc
add
sbb
mov
jae
jae
fs
sbbl
mov
es
scas
sbb
jecxz
stos
clc
es
mov
fimull
add
stc
cmpsl
in
in
outsb
shlb
pushf
jmp
inc
and
ljmp
mov
stos
imul
pop
sub
inc
xor
cwtl
inc
fdivr
dec
out
pop
or
cs
imul
leave
mov
aaa
push
loop
xchg
mov
mov
mov
out
out
sub
pop
shrb
rcrb
mov
mov
or
les
jno
aas
fwait
pop
addl
movsl
mov
clc
arpl
into
xchg
loop
scas
stos
or
sub
imul
dec
push
js
mov
mov
and
loop
mov
incl
sub
fnsave
popf
in
mov
push
or
jo
dec
push
mov
addr16
lret
mov
mov
adc
arpl
push
jg
xchg
ret
cmp
sub
out
sbb
loope
adc
icebp
cmpsl
int
ss
sbbl
sub
lret
hlt
xor
into
mov
sahf
and
sub
fdiv
daa
aas
adc
lcall
lods
dec
fstps
sub
adc
loopne
imul
out
and
adc
cmc
in
xor
cmc
xchg
add
aad
dec
mov
inc
add
jmp
sub
hlt
jo
inc
push
mov
fbld
les
stos
adc
js
cmp
clc
sbb
jne
xor
test
arpl
pusha
mov
lea
push
jecxz
push
stos
movsl
mov
ja
cmpb
sti
fldt
sbb
fs
mov
int
jmp
mov
test
and
fcoml
mov
lret
pushf
out
sti
and
inc
repz
fsubrs
or
xchg
sub
inc
repnz
jl
out
sub
xchg
loop
bound
or
fs
and
cmp
jae
add
jb
mov
sbb
and
int
pusha
sbb
push
icebp
outsl
cmp
mov
jo
adc
cmp
and
lret
inc
pop
shrl
adc
inc
cwtl
push
push
dec
lret
pop
dec
lea
push
lahf
cltd
mov
movsb
jo
jecxz
dec
pop
mov
fldcw
or
fidivs
cwtl
push
shll
add
mov
stos
fdivr
mulb
int3
dec
mov
add
xchg
cs
push
mov
adc
iret
insb
cltd
aam
cmpsl
or
in
cs
xor
jne
sbbl
ds
push
arpl
or
add
push
xlat
inc
sub
xchg
and
popf
leave
inc
int
push
mov
cmp
pushf
dec
inc
jo
sub
data16
mov
ds
xadd
sbb
popa
inc
fwait
out
arpl
lcall
scas
pop
std
rorl
shrl
cltd
ja
xsha256
cmpsb
push
xor
xor
pop
js
add
mov
bnd
je
inc
fsubrp
cltd
jne
xchg
adc
cmc
pusha
scas
in
push
dec
lahf
push
mov
movsb
sbb
or
out
mov
cmpsb
mov
sahf
mov
pop
ljmp
mov
xor
mov
cmp
fidivs
rol
sub
fwait
enter
aam
shrl
inc
xchg
data16
mov
jae
loope
sbb
mov
adc
icebp
inc
into
into
pop
insl
mov
rol
test
add
out
clc
mov
cmp
iret
imul
ss
pop
inc
add
test
inc
cwtl
bswap
fsts
inc
cmp
jl
jbe
int
pop
push
movsb
adc
scas
rcrl
pop
and
stc
and
enter
sub
push
rclb
jl
int
lcall
push
jl
jno
mov
jnp
pop
aas
aaa
int
pop
xor
xchg
xor
mov
mov
test
clc
dec
clc
jo
add
cld
jg
pop
scas
loop
or
xorb
sub
mov
dec
mov
xchg
gs
cmp
cmc
sub
or
sbb
popa
lea
loop
xor
cmp
dec
popf
dec
cmpsb
subb
mov
hlt
and
xchg
mov
jg
pop
stos
into
add
push
dec
adc
stos
ss
jl
cmpsl
pop
or
lret
movsb
movsl
adc
stos
or
push
aaa
stos
push
add
dec
add
cmp
filds
mov
jne
add
lret
mov
bound
fistpll
iret
mov
fisubs
out
mov
test
xchg
jecxz
mov
mov
jo
mov
fsubrl
dec
xchg
aas
xor
lcall
lahf
lods
jae
mov
push
pop
push
xor
aas
sub
fldcw
fildl
pusha
cmp
divl
mov
xor
int
bound
mov
lret
xlat
je
sub
imul
je
mov
and
fcompl
movsl
mov
jne
xor
pop
fcompl
rol
loop
xchg
gs
data16
sahf
cltd
sub
and
mov
rcr
inc
push
adc
add
or
insb
xor
push
mov
outsb
movsb
in
ret
cli
cs
mov
jnp
js
pop
les
xchg
scas
xchg
pop
xor
outsl
sub
inc
sub
sbb
lret
ds
mov
scas
outsb
adc
cmp
and
lea
loop
add
movsb
es
xchg
adc
loopne
or
jno
cmp
jns
push
mov
dec
push
add
or
data16
icebp
cltd
mov
push
fimull
and
aas
scas
and
adc
add
ja,pn
daa
and
mov
xchg
lods
aad
add
stos
fldt
insb
or
pop
rep
into
lds
and
cmpsl
sub
push
fdivrp
and
icebp
mov
pop
adc
pop
add
sbb
inc
mov
fst
std
push
sub
push
sarb
dec
sub
aam
mov
mov
int3
dec
js
jg
mov
movsb
mov
xor
adc
int
pop
mov
lock
jle
fwait
push
arpl
inc
stc
xor
repz
gs
push
inc
xchg
and
mov
sbb
add
leave
push
js
xchg
int3
cld
aad
adc
aas
popf
xchg
mov
outsl
push
cmp
pop
movsl
bnd
loopne
push
lret
pusha
dec
cmp
sub
xchg
ljmp
insb
push
jb
das
fwait
sbb
pop
icebp
les
adc
movsl
mov
fildl
add
imul
add
loopne
mov
dec
pop
ficomps
ljmp
call
jno
lock
mov
adc
sbb
or
add
in
enter
fdivl
adc
mov
hlt
xchg
test
les
lahf
ret
cli
dec
inc
and
clc
int3
daa
data16
shrl
sub
mov
loopne
mov
pop
fsub
sub
je
inc
xor
loopne
cmp
add
xchg
data16
inc
pop
xchg
xchg
cmp
div
and
in
sti
clc
push
sub
movsb
call
out
addl
jecxz
addb
adc
in
jle
aas
int
sahf
and
xchg
add
or
movsl
in
lods
cmc
inc
in
divb
shlb
xchg
fwait
mov
mov
test
sub
sbb
cmp
adc
mov
popl
popf
mov
test
or
pop
bound
xchg
dec
jne
and
sub
push
cmp
jecxz
mov
repz
mov
out
sbb
xor
mov
jae
test
jo
dec
scas
cmp
mov
cmp
xchg
fildl
xor
sub
repz
sub
jp
jnp
mov
fmull
stos
leave
xor
sbb
in
inc
mov
mov
int3
cltd
mov
imull
adc
sub
fidivs
jo
pop
lods
lock
mov
jo
mov
lahf
sbb
inc
test
gs
in
fucom
in
in
dec
fidivrs
or
mov
ficompl
add
cmp
cmp
mov
mov
and
sub
adcb
dec
jo
gs
mov
mov
lods
mov
test
lahf
lahf
mov
push
adc
xor
lret
mov
sub
movsl
and
dec
fadd
mov
sbbl
mov
jle
push
and
in
xchg
xchg
jns
mov
test
inc
or
icebp
sub
fcoml
mov
jl
sahf
mov
mov
out
cmp
loope
out
les
rorb
in
repnz
inc
es
cmc
jmp
pop
gs
popf
or
mov
jne
jnp
leave
jns
dec
ds
shlb
lea
and
mov
stos
and
or
dec
xchg
jne
mov
sbb
inc
jb
jnp
sbb
cmp
enter
pop
inc
cld
lahf
cmc
xchg
sub
loopne
hlt
dec
xchg
add
pop
add
jns
rorl
jl
adc
aam
sti
out
hlt
mov
fldl
enter
aam
xor
push
stc
adc
mov
ds
and
hlt
mov
jne
mov
inc
xlat
mov
popl
adc
push
inc
cmc
gs
jo
jmp
data16
and
dec
pushf
and
daa
adc
aas
adc
add
call
call
ds
push
jb
call
xchg
push
int
xchg
inc
and
shrl
scas
and
ret
dec
out
adc
rorb
call
data16
dec
mov
sbb
mov
lds
inc
mov
mov
xchg
lods
mov
fisubrl
jno
or
pop
push
add
fsubrl
test
insl
mov
xor
sub
cmp
adc
add
cmp
mov
test
addr16
add
in
cmpsl
xchg
ds
sti
retw
testb
loop
push
cli
lahf
movsl
adc
lock
jmp
insb
jbe
dec
idivl
pop
negb
mov
jmp
cmpsb
lea
jo
loope
mov
inc
xchg
imul
frstor
das
mov
mov
xor
stos
jnp
jle
filds
jmp
ret
repz
mov
mov
daa
sub
cmp
push
xchg
inc
outsl
dec
sub
push
rcrl
xchg
dec
outsb
loope
push
loope
pop
push
xor
mov
data16
mov
scas
lcall
mov
jl
mov
adc
mov
leave
sub
push
inc
jp
iret
stc
insb
out
shl
mov
lock
or
sti
dec
cmp
jbe
push
inc
jmp
popl
dec
aad
push
jmp
les
and
out
pusha
lods
aaa
sahf
mov
sbb
fsubr
insb
sbb
push
or
fwait
push
cmp
test
inc
jnp
add
subb
and
aaa
sub
mov
adc
dec
shll
jecxz
mov
ret
decl
and
pop
jne
jbe
mov
daa
adc
mov
add
es
and
outsb
or
sarl
mul
xor
xchg
shlb
in
jo
inc
jns
or
xchg
arpl
scas
xor
pop
sbbl
add
je
insb
dec
stos
jg
fld1
pop
out
je
push
and
xor
movsb
nop
leave
jnp
out
lock
addr16
push
jecxz
rorl
and
cmova
dec
data16
push
push
cmp
pusha
ret
movsl
mov
pop
mov
ss
sub
push
cmp
stc
adc
daa
mov
imulb
movsb
fcmove
scas
lcall
xchg
hlt
jb
inc
repnz
push
mov
xorb
loopne
sbb
das
cmp
test
shrb
loopne
inc
loopne
sbb
lcall
fists
add
movsb
decb
jbe
add
sti
pop
inc
inc
add
fwait
adc
fnsave
inc
lock
mov
shlb
and
pop
mov
add
cld
xchg
es
repz
mov
clc
subb
mov
ret
aam
or
gs
adc
in
mov
xor
loop
mov
mov
in
or
lcall
in
shl
xor
mov
xor
xor
jne
mov
ja
loopne
cld
jle
cltd
mov
dec
int3
mov
lock
lret
cmpsb
mov
add
stos
push
arpl
std
aam
repz
adc
xorb
sbb
pop
stc
push
arpl
mov
iret
cmc
into
adc
mov
jl
enter
mov
xor
sbb
xor
out
and
pusha
jae
cmpsl
cmpsl
sbb
xor
scas
jg
and
fistpl
jle
mov
int3
jl
lret
cmpsb
jle
js
xchg
lods
inc
arpl
sbb
cmp
pop
imul
mov
sahf
mov
push
clc
movsb
sub
mov
ret
std
mov
fdivrs
aam
stos
icebp
test
dec
jb
or
inc
imul
mov
aaa
pop
loope
sbb
sub
or
inc
sbb
pop
sahf
xor
mov
es
shll
cmpsb
hlt
mov
or
inc
pop
repz
xchg
aas
enter
sub
lock
inc
call
aas
adc
in
mov
mov
or
jo
fwait
cmp
xchg
stos
movsb
cmp
data16
xchg
mov
bound
jge
mov
mov
cli
mov
std
in
xchg
dec
jp
test
pop
loop
int
mov
xor
rcr
shrd
and
cmc
pop
sub
pop
popf
cltd
xor
mov
mov
stc
pop
and
pop
rcll
sti
outsl
inc
mov
xor
imul
enter
sbb
imul
jle
adc
inc
and
push
fisttpll
sbb
popa
arpl
xchg
inc
inc
push
popa
orl
mov
push
mov
sub
xor
test
and
ret
insb
xchg
or
jb
push
dec
xor
inc
ret
pop
test
andl
jne
xlat
jbe
ret
popa
mov
sarb
push
add
lds
subl
fisttps
fwait
mov
mov
ret
push
adc
in
lret
push
sarb
nop
sub
sub
inc
lods
dec
daa
iret
mov
fwait
push
mov
hlt
sarl
adc
test
jp
andl
scas
nop
add
fwait
fs
call
ss
xchg
pushf
pop
test
dec
lcall
inc
test
pop
out
jg
es
in
ds
inc
pop
push
jmp
or
sbb
pop
shll
dec
cli
adcb
dec
rcr
sbb
roll
rcl
clc
dec
jle
push
negb
push
add
flds
and
ljmp
int3
mov
lret
adc
ret
fcoms
mov
outsb
aam
add
repz
std
rcrb
sub
mov
test
scas
ret
jmp
orps
in
pop
cwtl
sbb
out
fs
lcall
imul
sbb
pop
xor
arpl
jno
cmp
fists
addr16
mov
and
jb
sbb
imul
adc
icebp
mov
inc
out
jnp
imul
and
std
aad
fwait
ret
lahf
stos
mov
jl
push
fmul
xchg
sbb
pop
cmp
fabs
in
cmpsl
cmp
adc
mov
jmp
loopne
rclb
pop
jge
add
sub
sub
mov
mov
pop
cmp
sub
sar
push
sub
ds
mov
fistl
push
iret
sbbl
pop
dec
cmc
sub
sbb
ja
sti
pop
into
mov
xchg
shlb
subl
sub
dec
xor
movsb
xchg
sbb
xchg
xchg
stc
stos
lods
push
jecxz
popa
inc
loope
mov
inc
push
xorb
push
xor
lods
add
mov
mov
sub
add
pop
arpl
sbb
js
popf
cld
sbb
jecxz
mov
sbb
adc
out
adcl
sub
out
hlt
test
jmp
pop
mov
iret
ja
sbb
and
mov
xor
cs
xor
push
stc
sub
sub
lcall
mov
xchg
repnz
mov
dec
sahf
add
out
and
addr16
pop
adc
out
mov
hlt
rclb
jno
sub
es
dec
dec
xlat
aad
mov
aam
or
push
aad
xchg
cs
mov
xchg
xor
aaa
jbe
sbb
mov
cmpsb
adc
fs
pop
jns
dec
sbbl
xor
inc
sub
push
inc
push
in
jb
mov
inc
cld
clc
xchg
mov
in
lock
test
insl
or
xchg
cmpsb
arpl
sarb
cmc
stc
or
cmp
jmp
jo
stos
sub
in
out
pushf
loopne
ss
mov
jb
cmp
out
adc
out
fwait
cmp
sub
movw
mov
aam
inc
dec
mov
insl
cmp
and
inc
xchg
add
xchg
repz
shrb
add
adc
in
pop
cmp
aas
mov
sub
inc
and
out
adcb
nop
call
inc
cmp
inc
pop
shrl
das
pop
pop
push
mov
outsb
push
cmp
cwtl
sub
mov
mov
mov
adc
dec
push
movsb
jo
mov
or
pop
loop
adc
das
adc
in
fldcw
arpl
mov
dec
sahf
xchg
push
sub
stos
push
out
xchg
push
rep
inc
outsb
pop
fucom
cmc
dec
data16
mov
cmp
pop
mov
sti
les
sbb
push
adc
inc
mov
stc
ljmp
pop
mov
or
xor
fnsave
pushf
push
xchg
or
and
testb
rclb
jno
push
int3
inc
jp
mov
mov
imul
addb
sub
cmp
adcb
push
push
xchg
int3
mov
pcmpgtb
lret
das
insb
insl
out
stos
cmpsb
iret
add
xchg
test
jmp
cmp
inc
cmp
mov
rorl
jno
push
sbb
xchg
or
cs
sbb
mov
mov
into
aam
pop
add
movsb
lods
dec
mov
cwtl
lret
loopne
adc
dec
imul
iret
sarl
pop
mov
pushf
push
outsb
imul
sub
push
rcll
pop
mov
and
aad
cmp
sar
dec
dec
ss
pop
pop
dec
jecxz
adc
or
pop
pop
xchg
and
aaa
leave
repnz
or
xchg
dec
movsb
popf
mov
jle
daa
xorl
jae
cltd
jno
sti
lds
dec
pop
scas
das
xor
loope
pushf
jb
jb
insl
in
jecxz
movsl
aas
mov
je
push
or
repnz
iret
cli
sub
aad
ret
fs
fisubrl
adc
shrb
subb
mov
sub
rolb
xlat
stos
cmp
test
pop
xor
stos
xor
in
mov
and
push
out
sbb
fs
jl
std
xor
mov
gs
out
xlat
inc
inc
xor
jle
cld
gs
aam
stos
lods
arpl
test
or
in
outsb
cld
xor
mov
add
dec
lahf
shll
mov
push
lds
jns
cmp
loop
outsb
sub
jg
mov
in
scas
push
jp
xlat
aaa
dec
rcrl
mov
cld
inc
lds
lahf
push
ja
adc
add
sub
out
mov
mov
jae
jbe
mov
jp
adc
mov
mov
mov
mov
inc
sahf
std
popa
dec
add
mov
cmp
jp
loope
inc
pop
in
mov
xchg
dec
bound
dec
insb
clc
aas
fnstenv
fdivrs
imul
pop
test
shrl
cmc
xchg
arpl
sub
xchg
cs
in
xchg
inc
dec
mov
dec
mov
xchg
dec
jbe
mov
dec
mov
jg
push
in
or
fbld
inc
ss
xchg
lea
jl
mov
in
pushf
or
pop
loop
es
pop
cld
mov
mov
jbe
adc
pop
dec
mov
mov
sub
pop
add
andl
int3
not
sbb
std
push
xchg
stos
iret
rcrl
sub
in
xorb
push
jge
dec
mov
mov
idivb
xor
lcall
mov
xor
xlat
sbb
jecxz
data16
or
adc
fimuls
icebp
popf
mov
addl
cmp
aaa
mov
divb
mov
push
fsts
sbb
inc
fcmove
push
pop
inc
jno
fdivr
mov
dec
inc
push
push
ljmp
stos
pop
push
jge
inc
dec
out
aad
sbb
sbb
lods
cli
jbe
cs
add
add
adc
inc
sub
adcl
pop
dec
std
lods
mov
xchg
push
les
in
adc
mov
inc
push
mov
jmp
jmp
xor
subb
hlt
lret
js
inc
or
insb
sbb
adc
scas
inc
add
mov
lea
add
sbb
xor
aad
pop
pop
sub
cmp
ljmp
rclb
inc
shrl
shlb
addl
int3
rorl
insb
fwait
push
add
clc
xchg
mov
test
mov
loop
pop
dec
xor
and
and
and
int3
mov
into
lods
mov
ret
les
cmp
mov
jmp
inc
dec
mov
jecxz
daa
inc
xchg
jmp
push
les
mov
daa
xor
inc
pop
cmp
or
adc
insl
sbb
add
das
mov
leave
jl
add
stos
or
je
push
pop
mov
fwait
out
or
cmpsb
aas
cmp
movsb
loope
xchg
cltd
pop
and
enter
push
inc
stc
jae
negb
aas
xlat
or
xchg
orb
xor
and
faddl
fwait
stos
enter
sub
jp
lahf
push
inc
mov
mov
mov
insl
push
push
imul
rcrl
sub
iret
adc
xor
jno
popf
add
cmp
mov
adc
repz
add
aas
inc
or
push
mov
outsb
cmp
push
incb
add
xor
pushf
and
xchg
add
popf
push
or
or
in
cmp
test
cmp
cs
test
jno
jne
jl
test
mov
lret
or
sbb
inc
test
sarb
sti
sub
adc
enter
sub
cmp
popf
cli
lea
mov
jne
xor
imul
dec
lcall
in
jl
pop
jecxz
pop
jns
push
push
stc
rorb
sahf
cld
mov
mov
xor
sbb
gs
roll
cmpsl
jg
scas
add
sbb
xor
pop
push
stc
pop
dec
mov
pop
lret
clc
fidivs
mov
faddp
dec
out
rcrl
fwait
xor
out
addr16
and
std
fsubs
sahf
xchg
fsubs
inc
aas
add
loope
dec
adc
dec
jle
test
xchg
sti
or
inc
sub
in
lods
jo
inc
mov
out
jecxz
sbb
test
xor
push
sahf
adc
sarl
lods
sbb
xchg
mov
mov
leave
out
data16
push
push
loope
xchg
sbbb
pusha
dec
adc
cmp
aaa
lret
movsb
lcall
mov
int
mov
and
xor
add
jp
mov
mov
xlat
adc
and
fwait
cmc
mov
jno
and
test
addl
bound
cmpsb
jp
lock
daa
add
adc
stos
shll
cwtl
mov
push
jl
out
out
das
xor
mov
inc
movsl
in
and
add
mov
add
fcmovnb
jmp
and
push
push
popf
mov
mov
outsb
leave
stos
aam
pop
sub
mov
rcrl
mov
out
push
xchg
movsb
es
inc
inc
push
inc
cwtl
sub
daa
pop
jbe
in
or
mov
fidivrs
jge
inc
sbb
in
pushf
push
call
int3
in
pop
mov
loope,pt
xchg
xor
rolb
ss
mov
jo
jb,pn
imul
imul
push
xchg
nop
push
sbb
movsl
pop
xor
adc
adc
test
lret
mov
mov
pop
cli
push
push
jbe
in
push
adc
clc
test
daa
into
adc
out
pop
shll
jae
mov
xor
or
push
adc
scas
adc
xor
popa
fisubl
mov
mov
fbld
rolb
lds
mov
dec
into
mov
xchg
insl
lcall
xchg
mov
pop
pop
lret
imul
outsb
out
sahf
je
sarb
mov
mov
or
cmp
pop
push
inc
lods
je
loop
push
adc
cmpsb
sahf
or
dec
lock
testb
pop
mov
in
rorb
jle
jmp
loopne
out
addr16
jno
popf
clc
int
xchg
test
mov
sti
out
push
int
cmp
push
mov
and
xchg
sbb
jl
mov
mov
lret
fadds
jbe
pop
add
add
inc
mov
popa
in
pop
inc
xchg
add
jae
test
cld
out
cmp
xor
xchg
sub
and
movsb
and
clc
imul
jbe
imul
mov
leave
mov
jo
insb
sub
enter
push
cmp
or
xor
xorl
into
dec
mov
inc
aaa
andl
fimull
pop
or
ss
sbbb
pusha
int
mov
inc
mov
adc
pop
outsl
addr16
in
pop
int
push
les
pusha
popa
jns,pt
jmp
mov
add
lock
add
fst
xlat
lret
xor
imull
jecxz
fcmovu
dec
inc
stc
fstp
and
and
sahf
and
mov
mov
push
add
into
popf
outsl
data16
scas
mov
stc
mov
jecxz
adc
testl
clc
push
push
jg
popa
xchg
pop
mov
and
or
xorl
or
push
ficoml
inc
sub
mov
ja
shll
rorl
mov
jb
adc
pop
dec
pop
jnp
pop
mov
pusha
cli
pop
lock
jne
outsl
cwtl
jge
xchg
sub
nop
repnz
sti
pop
jge
xor
inc
xchg
js
dec
jns
cmpsb
in
out
or
mov
out
insb
mov
fldl
inc
dec
dec
es
add
mov
call
dec
test
xor
push
mov
dec
popa
lds
xchg
sub
lds
icebp
fadd
test
mov
cltd
or
and
dec
test
es
scas
mov
leave
nop
pop
push
sbb
xorl
cmc
xor
clc
sarb
js
call
add
inc
nop
jge
mov
lds
push
push
cmpsb
sbb
jl
stos
pusha
add
std
outsb
add
jne
mov
push
jns
xor
in
imul
cli
push
lret
push
jno
dec
mov
test
xchg
and
sbb
jnp
push
cmp
mov
loop
test
or
pusha
inc
jg
stos
fstl
jbe
jmp
add
or
dec
ljmp
mov
scas
add
jae
stos
jno
mov
push
loope
nop
pop
mov
cmp
and
jl
inc
in
outsb
mov
cmpsb
les
ds
dec
xor
dec
fbld
testl
cs
roll
loope
or
in
mov
xchg
shlb
xor
cmpsl
xchg
adc
inc
jecxz
cmp
ret
lods
pop
dec
outsb
adc
movsl
xor
test
sub
xchg
mov
push
xor
hlt
mov
roll
pop
sub
xchg
and
xchg
xchg
popa
sarl
aad
ljmp
lcall
sub
cld
test
addr16
test
cmp
orb
mov
mov
insb
in
xor
daa
pop
adc
xchg
inc
push
push
in
std
mov
out
lds
push
arpl
std
add
add
dec
pop
arpl
insl
fs
idivb
es
scas
inc
and
sbb
cmc
aad
js
out
lock
hlt
and
jno
add
imul
jge
jae
js
fsubl
xor
jne
pop
xchg
pop
das
cwtl
adc
adc
pop
jb
mov
mov
push
idiv
repz
sub
popa
push
imul
test
adc
arpl
mov
and
push
ret
xchg
pop
orl
xchg
and
jbe
imul
ss
mov
mov
out
adc
pop
dec
jne
mov
ret
cmp
pop
fisubl
movsl
outsb
cld
sbb
inc
cwtl
cmp
cli
ja
xchg
mov
push
xor
mov
push
jl
add
hlt
aas
clc
leave
jo
push
repz
sbb
sbb
add
rorl
data16
in
repnz
jne
mov
jle
imul
test
push
lds
xchg
push
sahf
mov
and
push
sahf
in
sub
inc
mov
xor
data16
push
push
jno
shlb
aaa
aaa
and
mov
push
fwait
add
xchg
sub
out
jbe
add
sahf
ds
sbb
shl
jecxz
jnp
divl
and
and
mov
lahf
adc
push
imul
fnstsw
jnp
xchg
insl
xchg
jge
xchg
repnz
dec
cmp
sub
aas
in
js
clc
jbe
sub
mov
dec
test
jae
mov
mov
mov
ret
out
and
cmp
and
pop
or
out
ret
xchg
push
call
cli
jmp
std
cmpsl
add
sbb
hlt
adc
mov
push
cltd
dec
into
lret
push
in
cmp
add
inc
sbb
loopne
cmc
addr16
pop
adc
sub
xchg
sub
pop
sbb
in
ja
js
stc
packuswb
push
pusha
pop
jb
sub
outsb
icebp
and
add
lock
mov
inc
mov
or
dec
push
sti
mov
inc
int
mov
jno
mov
pop
adc
fwait
not
int
pop
mov
icebp
aam
sub
insl
inc
into
cmp
das
jno
es
jp
fnstenv
sub
pushf
arpl
pop
or
xchg
fsub
adc
cmp
ret
xor
in
or
cwtl
dec
inc
xor
cmp
int
jecxz
jmp
pop
mov
dec
cld
dec
jg
lcall
mov
das
add
js
add
insl
mov
dec
in
aad
xadd
outsb
roll
push
xchg
sti
xchg
cmp
or
jne
fisubrs
test
inc
addl
fwait
mov
dec
push
shl
or
push
jl
pop
js
test
movsl
mov
push
imul
test
loop
ret
push
mov
cmpb
inc
ja
add
sbb
into
add
push
adc
outsb
sbb
jns
sbb
lahf
dec
addr16
das
jg
testl
or
xor
out
loope
lods
stc
sbb
rolb
ret
les
out
cmp
dec
sarb
sbb
je
movsl
and
popa
push
pop
outsl
add
aaa
dec
inc
lcall
mov
and
mov
jg
jg
stos
paddb
jb
jne
jge
imul
in
jecxz
popa
sbb
pushf
jecxz
js
movsb
jle
pop
sub
into
mov
xchg
movsb
call
inc
je
jle
dec
je
rcrl
mov
rcll
cmpsl
icebp
test
adc
dec
notl
add
outsb
jle
mov
fldl
jns
shlb
insb
mov
pop
jb
fmuls
fwait
hlt
push
test
mov
mov
sbb
enter
hlt
gs
inc
repnz
pop
adc
ss
gs
out
jge
movsl
dec
mov
sbb
sbb
fisttps
mov
push
sbb
xorl
jb
leave
mov
xorb
das
dec
gs
cmp
mov
cmp
sbb
add
jbe
and
mov
jno
adc
outsb
adcb
add
imul
sbb
aaa
push
sub
mov
cmp
movsl
or
cmp
aas
cltd
add
mov
leave
std
pop
hlt
pop
dec
mov
dec
call
push
imul
mov
repnz
xchg
push
mov
cs
scas
pop
imul
xor
xor
pushf
sbb
mov
mov
mov
push
fcomi
sub
gs
lds
push
or
aaa
lret
jns
or
shll
inc
je
cld
inc
ficomps
scas
fs
sarb
inc
aad
fists
or
mov
xchg
adc
sahf
jae
sbb
inc
or
and
mov
test
jbe
xlat
pop
jno
adc
imul
lahf
mov
push
jle
pop
aaa
adc
push
outsb
or
mov
fnstcw
enter
jmp
jo
mov
add
imull
and
push
movsl
and
daa
lds
pop
outsl
sbb
mov
rcll
popa
mov
stos
jp
mov
fimull
xor
pop
and
mov
pop
and
aad
inc
add
fnstenv
jg
in
ljmp
or
in
and
cmc
xor
push
popf
cli
mov
das
cmp
sub
or
lahf
ficomps
movsw
mov
xor
cmp
addr16
popa
cmpsl
inc
lea
hlt
arpl
pushf
fmull
push
sub
add
pop
and
test
dec
xor
and
mov
fcmove
mov
mov
push
scas
shll
pusha
cwtl
ds
lock
lods
pusha
mov
push
icebp
int3
and
orb
insb
in
test
mov
jp
negl
out
fildl
pushl
cli
in
mov
stc
repz
jns
jns
inc
xchg
pop
out
add
insl
inc
dec
mov
jne
pushf
divl
jno
int3
mov
scas
dec
call
mov
mov
push
loopne
data16
sub
mov
or
pop
push
jne
sarl
popf
lret
xchg
mov
sbb
sbb
pop
sti
outsl
cmp
fs
fistl
lret
mov
out
pop
add
int3
sbb
push
cmpl
subb
repnz
cmp
sbb
jns
sub
out
ja
in
xor
lret
push
inc
pusha
xchg
test
insl
or
mov
je
in
mov
sub
hlt
rolb
stos
pop
mov
jg
je
jmp
test
xorl
stc
dec
aam
cmp
jmp
dec
adc
lea
inc
test
inc
pop
rcl
bound
fcompl
xchg
pop
js
test
in
add
test
add
test
cmp
mov
psubw
add
std
sbb
lret
push
fs
fisubl
fnstenv
mov
cmp
and
push
call
movsb
cmp
dec
insl
mov
mov
test
inc
mov
into
mov
push
lock
jbe
pop
sbb
pop
pop
adc
xchg
pop
aam
lret
mov
jae
lret
xchg
cmpsl
in
in
xchg
or
cltd
int
stos
xlat
sbb
popf
insb
leave
and
mulb
and
inc
pop
jecxz
int
dec
mov
popf
ds
xchg
push
aaa
sub
jnp
es
lret
cld
push
mov
jnp
fnsave
xor
cmp
xchg
mov
cwtl
fwait
dec
incl
push
pop
cmp
ss
mov
xor
leave
insb
ficomps
lret
mov
mov
mov
testl
cmp
lds
mov
cmpsl
sub
addb
mov
cmp
xchg
imul
and
mov
inc
mov
cmp
mov
out
fnstsw
mov
jmp
fwait
cmpsb
leave
imul
test
push
pop
add
and
mov
mov
or
or
imul
ja
ljmp
push
addb
cwtl
push
dec
mov
rep
and
mov
push
movsb
push
or
loopne
cltd
pop
sbb
addb
jl
push
es
xlat
int
or
fmulp
cmp
fwait
jb
push
mov
inc
mov
add
add
jp
lahf
stos
cmp
test
cmp
loope
pop
cs
cmp
icebp
dec
repnz
sbb
inc
repz
lods
cmp
push
pop
inc
inc
repz
movsb
in
stos
lods
jns
adc
sbb
test
bound
push
inc
addr16
inc
inc
add
cmc
push
dec
push
sub
test
and
mov
mov
mov
dec
dec
inc
stos
filds
mov
mov
jne
or
sbb
cwtl
pop
and
add
into
out
fildll
xchg
push
add
adc
int
mov
inc
lahf
push
movsl
push
loopne
sarb
cmc
xor
push
fidivl
inc
lods
adc
testb
icebp
jg
adc
addb
or
pop
cltd
enter
mov
push
cltd
mov
pop
test
int
mov
das
cmp
mull
or
rcrb
scas
aad
movsl
jecxz
adc
bound
lds
loopne
imul
mov
dec
loopne
mov
ja
outsl
lods
cmp
in
cld
jnp
outsb
mov
fisubl
loope
dec
or
fdivrl
push
or
loope
mov
shl
popw
xor
cmp
je
fmuls
lods
add
fucomi
sbb
addr16
aas
sub
or
mov
gs
inc
hlt
test
push
mov
push
stos
test
xchg
xchg
sbb
adc
jmp
lea
scas
sahf
daa
cmp
mov
mov
jne
mov
mov
mov
lock
lods
pop
xchg
frstor
mov
inc
test
cmp
push
cmp
ret
xlat
adc
loope
mov
cmpsl
decb
and
das
fcmovu
sbb
fldcw
mov
xchg
popa
lds
cmp
sbb
leave
clc
or
push
inc
divps
data16
dec
jae
xchg
cmp
push
divl
push
mov
push
push
mov
mov
dec
outsb
cwtl
into
inc
xchg
aas
icebp
flds
ds
pop
pop
or
sub
das
stos
sbb
xor
into
enter
stc
or
xor
mov
mov
lcall
xchg
mov
ljmp
jnp
sub
fcmovu
jecxz
add
out
sbb
xchg
test
lret
lcall
mov
xchg
test
xor
cmp
mov
xor
xchg
pop
hlt
popa
ljmp
andb
cmp
rcrl
ds
xchg
jmp
icebp
lret
cmp
fs
negb
mov
dec
data16
jle
add
ja
mov
jg
popf
pop
test
cmp
mov
popa
loop
imul
cmpb
stc
sbb
lret
xor
out
pop
fidivs
bound
inc
sub
or
repz
push
fst
bound
xchg
out
or
ret
push
jae
outsl
loopne
sbb
jae
adc
icebp
jns
mov
mov
std
fnstenv
or
test
mov
lock
sbbb
int3
lods
mov
std
pop
jne
sbbl
inc
cld
daa
test
gs
add
out
ljmp
sbb
sbb
xchg
cmp
imul
enter
fisubl
sub
hlt
pop
cmpl
mov
lock
adc
aad
fistl
push
cmpsl
pop
and
mov
jmp
leave
out
push
adc
mov
enter
mov
xlat
xchg
imul
or
in
mov
dec
sahf
popf
outsl
push
movsb
lea
add
cmpb
popf
cmp
imul
xchg
and
pop
mov
fucomip
xor
arpl
pop
ret
inc
mov
data16
xor
dec
push
das
xchg
mov
push
cli
and
push
enter
xor
mov
or
jb
xchg
lret
cs
mov
repnz
popf
mov
push
sarb
sahf
jns
je
adc
ds
jnp
daa
sub
fistl
cs
test
push
push
lahf
cmp
or
outsl
int
jmp
icebp
sbb
insl
icebp
test
push
add
inc
adc
jno
xlat
pop
bound
mov
add
xor
insb
inc
cmp
or
xor
sub
ret
int3
cmp
pusha
loopne
out
or
movsb
inc
les
and
sbb
xor
push
leave
xchg
xchg
adc
xchg
insl
cs
int3
shrl
cltd
ss
fs
mov
xchg
test
je
lahf
add
pop
xor
leave
ljmp
inc
ret
jg
cwtl
or
fdivl
insl
sarb
jae
cmp
inc
in
adc
jp
mov
push
ss
fs
out
jp
stos
outsl
mov
dec
int3
sub
mov
fwait
jbe
lods
mov
inc
int
testl
sub
pop
push
add
mov
in
or
cltd
cmpsl
ret
sbbb
pop
imul
icebp
pop
mov
imull
cmp
mov
call
mov
or
adc
shrl
dec
jne
ficomps
pop
xor
inc
fidivrs
jns
outsl
loope
lahf
mov
ret
nop
mov
inc
mov
xchg
je
out
aas
xor
imul
xchg
call
mov
sahf
push
add
fcmovne
xor
clflush
in
mov
loope
jle
cmp
inc
ret
push
add
in
dec
jnp
pop
mov
dec
inc
or
sti
adc
mov
fcmovnb
add
xorl
jo
rcll
mov
lock
xchg
xchg
jge
push
adc
jae
cmpsb
cmpsl
addr16
sar
movsb
mov
adc
cli
movsl
ret
lea
sbb
sbb
push
adc
xor
xor
or
insl
pushf
fwait
scas
or
ret
fistps
clc
insb
seta
add
add
fwait
cmc
mov
js
cmp
int
cs
andl
sbb
sbb
mov
xor
mov
push
pop
rorb
xchg
inc
jg
lahf
push
cmp
fucomi
dec
dec
bound
sub
sbb
jbe
pop
and
in
cmp
push
lcall
jne
dec
sub
out
jg
xor
daa
aam
xchg
sbb
ret
inc
mov
stc
aas
addb
sarl
data16
mov
fstl
mov
sub
aam
inc
imul
addr16
imul
mov
push
imul
and
movsl
sbb
in
cmp
fwait
int3
inc
or
in
xchg
pop
cmpsb
mov
xor
stos
adc
shlb
insl
mov
push
out
adc
or
bound
cld
lcall
shrl
into
adc
push
xchg
adc
sbb
leave
test
cmp
insb
jnp
sub
out
ffree
mov
or
fs
data16
cmp
xor
std
aam
mov
icebp
xchg
lods
pushf
and
sbb
xlat
mov
sahf
mov
sub
sbb
andl
mov
pop
adc
inc
rcl
in
cmp
pusha
mov
mov
sbb
dec
rcll
popa
rorl
sbb
sbb
xchg
mov
lock
xchg
push
lock
pop
imul
or
mov
or
xor
sbb
mov
lret
add
sub
call
cmpsl
test
hlt
ljmp
fucomi
mov
popf
jecxz
mulb
add
jle
iret
in
sub
jg
rol
adc
fadd
inc
fnstcw
or
iret
inc
and
int
leave
rolb
inc
xchg
adc
roll
clc
lock
fidivrs
or
mov
out
mov
imul
leave
mov
inc
sbb
iret
mov
je
lahf
arpl
jmp
xchg
ljmp
jge
dec
pusha
aaa
bound
adc
scas
mov
pop
adc
clc
mov
mov
sahf
int
xlat
push
and
cs
sub
ja
mov
mov
dec
add
pushf
out
sub
lea
pushf
dec
inc
out
outsb
std
mov
pop
lcall
addb
rdrand
mov
cmp
rclb
xchg
das
jecxz
pop
das
cmpsb
repnz
fldt
stos
lds
mov
mov
and
xorb
pusha
lahf
or
inc
cld
inc
jmp
das
pop
xchg
inc
xchg
fadds
adc
cmc
cmp
lock
inc
repnz
or
out
daa
test
mov
ret
or
pop
mov
int
imul
adc
dec
push
mov
dec
push
mov
pop
out
sbb
dec
jl
pop
test
xchg
and
ret
jg
sbb
push
stos
mov
shr
jo
or
push
cld
adcl
push
jecxz
sub
push
sbb
clc
imul
add
insl
addl
push
mov
lret
push
cwtl
sub
repz
pop
inc
and
lret
mov
and
inc
cld
push
xchg
jae
lock
push
faddl
mov
jg
fcmovu
pusha
fwait
pop
mov
mov
bound
cli
leave
adc
nop
push
mov
outsb
jb
mov
cmp
pop
mov
arpl
or
lds
outsb
push
movsl
push
add
or
das
mov
jae
or
pop
mov
mov
decb
outsb
test
loop
es
inc
loope
iret
lea
inc
stos
pop
and
fsts
mov
xchg
daa
insb
lea
clc
dec
add
cmp
cmp
flds
fistl
cs
test
imul
fwait
mov
in
incl
rol
movsb
sub
lds
in
mov
cmp
pop
imul
arpl
xor
jl
js
outsb
data16
sbb
adc
push
aaa
add
rcrb
dec
ret
mov
sbb
sti
ljmp
or
cmp
jb
repnz
jo
ds
cmp
jp
shll
inc
jg
pop
mov
cltd
les
cmpsb
xor
sbb
xchg
clc
shlb
xchg
mov
xchg
mov
and
dec
je
mov
cmc
nop
xchg
fdivl
fists
cmp
inc
pushf
xchg
pop
pop
fnsave
fmulp
pop
loopne
sub
pop
jg
or
into
outsb
push
pusha
pop
loope
xor
adc
mov
xchg
lea
add
dec
pop
add
int3
and
dec
mov
jne
and
loop
or
dec
push
or
or
les
pushf
sbb
sub
push
iret
imul
pushf
and
xchg
jnp
repz
lahf
mov
pop
dec
fyl2x
and
into
jne
push
or
sub
inc
mov
mov
out
cmp
sub
in
imul
adc
fisttpll
ds
mov
jmp
lods
push
sub
jle
mov
pop
sub
out
cmp
repz
and
iret
adc
outsb
stos
xor
pop
dec
xor
call
adc
lcall
int
inc
xor
cltd
pop
es
jns
adc
dec
in
adc
jns
push
shll
scas
xor
mov
pusha
xchg
push
lock
inc
loop
ret
test
sbb
cltd
mov
aas
mov
andb
aam
test
sub
sti
lea
std
push
test
mov
and
lcall
xor
cmc
jb
pop
pop
es
lret
and
shll
dec
bnd
call
sub
shrb
insb
ds
sub
jp
in
lds
lock
adc
add
into
sbb
pop
xchg
ds
ljmp
loopne
divb
cmp
mov
xchg
dec
add
int3
popf
fstps
add
inc
jbe
dec
dec
loope
xor
fsubl
mov
cli
cs
adc
sbb
mov
pop
loop
shr
inc
mov
cli
cwtl
sar
push
sar
add
push
nop
dec
dec
inc
test
xchg
dec
inc
fsubrs
dec
sub
test
mov
and
cmpl
lods
imul
cmp
mov
inc
rcr
sahf
sbb
cmpsb
cmp
push
sub
sbb
out
mov
dec
repz
mov
pop
add
push
xlat
pop
sbb
in
mov
or
das
push
movsb
cmp
dec
je
lcall
mov
add
pop
sub
pop
cmp
and
sbb
stc
dec
outsl
xor
call
mov
dec
rclb
popl
push
cmc
xchg
mov
leave
fstpt
in
or
sbb
fwait
xchg
fcmovbe
xorb
cld
hlt
adc
push
cld
pop
add
jo
pop
iret
lcall
jno
loopne
inc
std
lea
mov
push
adcl
shl
xor
cmc
pop
aam
sub
fildl
sub
add
jp
test
sbb
cld
push
xchg
jl
or
fiadds
data16
inc
adc
inc
mov
adc
imul
xchg
stc
xchg
dec
aad
push
in
inc
sub
mov
fdivrp
stos
adcl
out
pop
es
sbb
insb
push
in
add
mov
cmp
push
jnp
out
fcomps
xor
push
test
jmp
movsl
sbb
mov
test
push
mov
pusha
cmp
sti
and
imul
insb
sbb
lods
adc
inc
adc
pop
pop
mov
pusha
scas
cmpsl
add
inc
adc
sbb
add
cltd
pop
out
out
add
fnstsw
jno
ret
insl
add
sahf
lods
pop
jmp
fsubrl
xlat
test
imul
sub
jb
push
js
sti
nop
push
cmpsb
testb
push
mov
sbb
or
rcl
loopne
pop
mov
cmp
lcall
jns
inc
hlt
jne
std
fnsave
rclb
mov
andb
insb
lret
sbb
add
popf
pop
adc
xchg
lret
lcall
inc
dec
sub
imul
xor
insl
mov
outsl
stos
lods
repnz
adc
and
out
xchg
and
enter
gs
test
mov
fdivl
cli
mov
sarl
js
dec
inc
in
mov
push
daa
inc
cmp
jb
ja
pop
xor
dec
or
fsubrl
out
les
out
int3
adcl
outsl
ja
adc
add
test
sti
lea
outsb
mov
jns
push
lea
sbb
movsl
popa
pushf
jbe
incb
inc
cmc
sbb
mov
addr16
std
inc
mov
test
cld
jp
test
popa
js
dec
les
inc
jae
push
adc
fidivs
aam
scas
push
adc
aad
sub
cltd
mov
cmp
outsb
sub
xor
clc
nop
mov
push
sbb
repnz
bound
xor
test
pop
dec
jge
hlt
lods
lods
dec
pop
sbb
or
adc
push
ss
shrb
insl
mov
fmuls
or
mov
arpl
cmpsb
addr16
add
popf
ret
dec
inc
scas
stos
and
push
push
pop
test
inc
outsl
mov
ss
and
sbb
xchg
sub
mov
js
mov
aam
addr16
pop
adc
sti
and
mov
adc
adc
mov
xlat
jb
aam
ljmp
push
dec
test
xchg
arpl
jo
mov
mov
mov
shrl
ss
sbb
mov
stos
sbb
arpl
dec
test
ds
loope
fimuls
pop
push
jg
add
and
fisubs
shl
cmp
dec
jno
sbb
sbb
xor
fwait
sbb
xor
push
mov
addr16
inc
jl
leave
gs
dec
cmp
jg
inc
xor
xchg
adc
sub
fildll
and
push
imul
dec
fwait
mov
pop
cltd
mov
add
lods
jo
xorl
xorb
leave
push
lods
xor
push
addr16
dec
mov
loopne
or
jecxz
aas
movsb
icebp
pop
test
scas
or
push
mov
add
xchg
adc
push
xor
jo
push
xor
mov
lods
jmp
es
ret
insb
xchg
stc
jp
mov
cltd
jmp
jae
mov
xchg
cmp
adc
addr16
repz
push
xor
icebp
es
fnstcw
loop
aam
sub
inc
and
cmp
fdivr
cwtl
push
mov
test
jmp
stc
lods
repnz
popf
ret
arpl
add
imull
adc
mov
push
jecxz
mov
mov
out
jg
jl
mov
popa
enter
das
xchg
bound
aam
out
xor
aas
jae
pusha
inc
and
push
xor
or
cmp
in
or
sahf
arpl
movsb
push
sub
stos
inc
bnd
sub
mov
jnp
ds
inc
fistps
xor
xor
shlb
roll
dec
dec
pop
hlt
ja
out
incb
inc
inc
incb
je
xchg
rcll
pop
add
cs
jo
mov
dec
pop
xor
or
adc
mov
push
mov
dec
xchg
cs
in
xchg
mov
add
cmp
out
sarb
inc
rdpmc
cld
std
sub
adc
push
lret
fsubl
aaa
inc
rolb
sahf
lea
sub
adcb
mov
cmpsl
or
sbb
imul
fists
push
or
das
rolb
scas
cmp
mov
push
xor
dec
fistl
inc
lods
xchg
daa
cmpsb
jno
stc
sub
or
lock
jae
mov
xor
in
mov
xor
fucomi
ss
mov
loop
subl
sub
and
pop
test
cltd
add
push
cmc
jo
adc
or
mov
std
adc
cwtl
or
jb
xchg
jle
fwait
stos
icebp
pop
js
fisubs
daa
xchg
xchg
push
xchg
in
jl
pushf
gs
idivb
stc
test
xchg
loopne
das
adcb
out
dec
inc
mov
arpl
ljmp
sar
popf
mov
mov
cld
jae
jbe
mov
inc
push
push
pop
jge
arpl
mov
push
jb
dec
push
mov
je
mov
ja
fsub
imul
add
outsb
xlat
popf
arpl
push
stos
and
outsl
pop
add
jno
sti
call
mov
mov
sbb
add
es
cmp
mov
icebp
imul
fisubrl
loop
dec
fldcw
mov
into
mov
ret
pop
ss
jmp
scas
sbb
repnz
mov
mov
xlat
or
pop
jmp
leave
xchg
pop
das
cmp
pop
pop
in
std
ss
xor
divb
sub
fsts
xchg
xchg
and
divl
scas
cmp
jge
pushf
pop
pop
ljmp
or
decl
xor
add
fs
mov
addr16
outsb
sub
stos
in
xor
les
aam
rcrl
cmp
jnp
lret
push
pusha
imul
xchg
push
popa
pop
ds
sub
addr16
lret
cli
xor
cmp
mov
lcall
jo
dec
push
lahf
lahf
cmpsl
jmp
lock
fwait
sub
ret
or
clc
cltd
xchg
sbb
in
jbe
pop
cmc
sbb
imul
mov
jmp
cmc
sub
jg
mov
sbb
lods
xchg
dec
cmp
jne
insl
pop
sti
stos
test
add
frstor
xchg
dec
inc
dec
stos
push
enter
out
push
pop
pop
sub
fisttpl
movsb
jae
or
mov
sub
pop
jb
push
mov
mov
bound
hlt
pop
or
push
cmp
aad
xchg
sub
push
sbbb
push
push
push
xchg
xor
fisubl
dec
dec
push
mov
sbb
enter
mov
mov
call
pop
mov
mov
dec
outsb
seto
test
ret
fidivrl
pop
xor
sbb
mov
daa
inc
pop
xchg
popf
pop
cmpb
push
xor
mov
ljmp
mov
sarb
mov
pusha
into
mov
jmp
push
cmpsl
aad
push
in
push
sbb
insl
adc
out
xchg
dec
stc
jnp
in
pop
inc
mov
pop
imul
sbb
call
adc
lods
insb
adc
dec
dec
cmp
cmp
push
pop
clc
ljmp
adc
shll
dec
pop
sbb
test
pop
lea
sub
hlt
lret
xor
add
cmp
outsl
add
mov
inc
icebp
pop
push
icebp
adc
loop
jl
xchg
popf
rclb
or
xor
mov
loopne
xor
adc
out
fsubrs
fildl
mov
fdivrs
push
sub
add
fcom
inc
push
xor
jns
jne
imul
mov
jg
in
xlat
xchg
xchg
xor
pop
outsb
add
fisttpll
lret
test
in
mov
cltd
daa
pop
cmpsl
pop
dec
push
cmc
pop
int3
push
jae
xchg
out
adc
imul
test
mov
add
mov
mov
popf
sbb
jo
fs
push
mov
jmp
sub
dec
mov
sbb
adc
clc
leave
dec
and
ljmp
das
in
insb
mov
in
mov
outsl
test
push
test
shlb
cld
push
cmp
lahf
jno
sub
in
add
lahf
rol
dec
ss
inc
or
jmp
pop
sub
and
and
leave
inc
lret
daa
aad
inc
mov
aad
pop
imul
in
ds
mov
add
in
dec
loop
inc
movsb
rorb
lahf
mov
cld
int3
push
fs
mov
inc
dec
jp
cmp
je
cmp
aam
sti
jmp
stos
mov
mov
arpl
cmp
cmpsb
js
lock
movsl
add
dec
jns
mov
inc
jns
mov
ljmp
push
int
scas
cli
data16
outsl
cmp
xchg
jp
sarl
push
xor
pop
xor
cmp
push
sbb
movsb
add
dec
dec
lret
cli
cmpsb
push
inc
outsl
mov
mov
cmp
mov
pop
neg
push
pop
and
jl
jb
mov
daa
and
pop
loope
fsubr
stos
jl
jecxz
and
push
sbb
in
add
imul
push
lods
mov
jno
aad
aad
mov
imul
outsb
dec
mov
mov
arpl
xchg
cwtl
xor
fcompl
inc
aad
hlt
mov
pop
std
fsub
cmp
aaa
std
jge
mov
and
scas
xchg
push
mull
repnz
and
andl
push
xchg
mov
sbb
mov
nop
and
cmp
jp
mov
fmulp
adcl
aad
pusha
xchg
push
jae
add
and
rcr
sahf
stos
negl
adc
in
pushf
out
inc
xchg
loope
and
popf
mov
mov
inc
lret
scas
mov
pusha
sub
arpl
jle
stos
mov
jo
dec
bound
mov
dec
fsubrs
sahf
ljmp
mov
test
ss
fidivrs
sbb
pop
mov
andl
pop
js
lcall
ds
out
stos
imul
loope
or
xor
loop
out
out
les
mov
or
mov
popa
popf
sub
sub
add
mov
mov
pop
aaa
gs
push
fwait
pop
adc
jmp
out
addr16
xlat
mov
mov
xchg
xchg
jb
cmpsl
jae
idivb
je
dec
dec
std
adc
mov
sbb
mov
push
inc
pop
movsb
dec
mov
lods
inc
jnp
pop
out
bnd
lea
nop
and
inc
cmp
xlat
push
push
lcall
push
mov
inc
in
lock
mov
in
add
lods
adc
xor
fistpll
notb
mov
repz
test
dec
imul
imul
test
and
push
cs
loope
leave
mov
lods
shrb
push
sarb
repnz
es
std
jle
dec
xor
push
rcrb
dec
outsl
adc
mov
mov
lcall
in
outsl
mov
popf
mov
jae
push
inc
out
andb
les
xchg
jbe
test
sbb
scas
aas
pushf
lret
repz
test
imul
sbb
jo
int
mov
pop
mov
fwait
pushf
jmp
xorl
lds
rorb
out
xchg
cmp
into
mov
stos
into
adc
out
mov
add
cmpsl
mov
movsl
xchg
je
cmp
pop
fstpt
xor
or
lock
mov
push
pop
ret
cmp
addl
icebp
lods
rclb
iret
sub
lea
ds
add
gs
aas
fcompl
xchg
add
loope
stos
xchg
clc
bound
into
dec
cmpsb
cmp
out
test
jnp
mov
jbe
and
ljmp
mov
push
shrb
iret
push
scas
loopne
mov
mulb
int3
or
xchg
faddp
pop
xor
andl
jmp
fisubrs
aad
add
imull
fwait
int
push
decl
xor
dec
cmp
pop
fildl
or
fsubrl
in
xchg
mov
scas
push
mov
push
xchg
js
in
pop
jae
xchg
xchg
jo
push
ret
lahf
xchg
inc
sahf
test
mov
lock
sbb
mov
aam
out
stos
xchg
mov
mov
fwait
sahf
and
inc
in
das
lds
das
ljmp
stc
dec
imul
lcall
jo
mov
cmpsl
push
sbb
mulb
sbb
cmp
lahf
inc
sub
pop
roll
loope
mov
and
fnstcw
fs
push
jno
aaa
xchg
adcl
jo
inc
xorb
in
sbbb
insl
sbb
xor
xor
negl
loope,pn
aas
push
sub
pop
push
ja
repnz
arpl
nop
call
lahf
mov
pop
xchg
mov
pop
push
mov
fstps
inc
mov
jecxz
cmpb
das
xchg
stos
add
mov
xor
inc
out
sahf
jg
sub
jae
cmp
mov
push
jnp
jbe
std
cmp
neg
push
jmp
jmp
rcll
dec
shl
and
xchg
sub
push
loop
pop
in
clc
pop
je
cmp
insb
lret
shlb
fcompl
cmpsl
push
loopne
inc
test
push
daa
lcall
add
mov
jle
sub
lret
leave
and
sar
shll
jae
dec
cmp
pop
cmp
add
nop
and
xor
jl
xchg
clc
sarl
icebp
sub
mov
cmpsb
popl
cli
jbe
mov
and
or
push
sti
std
push
xor
iret
mov
and
push
fstpl
add
adc
add
scas
ljmp
stos
jo
test
mov
cmpsl
ja
fidivl
imul
mov
lahf
and
sbb
sbb
lods
xchg
mov
pop
andb
and
pop
mov
sub
jle
in
push
nop
lods
pop
mov
out
mov
or
jae
pop
lea
dec
gs
popf
mov
inc
mov
call
add
lods
mov
push
mov
or
add
fisttpl
sti
loopne
cltd
loop
lods
push
in
and
dec
cmp
out
inc
sti
push
sub
mov
xor
push
sbb
scas
pusha
mov
jae
sub
gs
lock
mov
cmp
test
nop
scas
xor
test
inc
cmc
jge
fcomps
jno
cwtl
push
loope
pusha
gs
lds
adcb
lret
jne
add
addr16
daa
mov
in
sub
ljmp
dec
mov
outsb
sbb
dec
cld
aaa
xor
mov
test
bound
lods
mov
and
pop
int
xchg
fsts
jbe
fwait
dec
inc
xchg
pop
jbe
in
sub
aam
and
xorl
xchg
mov
mov
testb
jno
insb
or
cltd
jo
hlt
mov
adc
popf
xor
insl
daa
xor
aad
jne
fldln2
shlb
or
push
test
and
inc
and
fwait
pop
pop
sbb
stos
outsl
lods
pavgw
faddp
movsl
inc
sub
pop
xchg
sub
or
push
fstpt
push
outsb
call
jnp
das
push
outsb
lcall
or
into
lahf
subl
xor
mov
iret
wrmsr
notl
flds
pop
outsb
insl
jmp
cmpsb
aas
sbb
add
sbb
mov
aaa
jbe
cmpsb
mov
sbb
shrl
in
jo
dec
test
mov
jnp
stc
imul
lret
push
mov
add
pusha
xchg
pop
std
aad
dec
xchg
loopne
mov
std
and
jge
lds
outsl
nop
jae
or
fbld
jb
insl
xlat
cwtl
push
jae
and
and
ret
mov
inc
sub
jno
or
imul
fnstcw
or
inc
pop
push
ljmp
loop
inc
mov
or
mov
jge
push
into
sbb
repz
fwait
aad
or
ja
aaa
cld
or
daa
aad
call
jbe
sbb
ja
in
push
sbb
pop
incl
out
mov
and
mov
mov
jae
ret
and
hlt
cmp
dec
dec
fcompl
jl
scas
jg
loop
leave
dec
mov
mov
call
outsl
icebp
je
jl
jne
loope
mov
push
out
fwait
jl
test
mov
notb
out
rorb
mov
divb
enter
or
push
push
inc
cltd
xlat
pop
mull
adcb
repnz
push
inc
lret
pop
movsb
sbb
push
enter
jns
mov
pop
movsl
jp
ljmp
cld
mov
int3
ret
mov
scas
adc
jno
sbb
inc
inc
outsb
pop
inc
loop
mov
mov
call
sbb
roll
sti
pop
jo
das
daa
lcall
enter
test
adc
dec
sbbl
daa
jnp
jp
lods
xchg
or
pop
sub
nop
jo
sub
lock
pop
decb
mov
add
fcomps
jle
inc
insb
inc
sti
jb
mov
dec
fidivs
call
cmp
mov
push
mov
stos
je
dec
mov
loope
pop
mov
inc
jnp
pop
mov
fstpt
nop
mov
test
dec
pusha
je
sub
nop
popf
adc
das
mov
mov
cmc
cmp
lcall
and
and
enter
dec
sub
or
push
dec
jns
mov
sti
xor
mov
ret
mov
sarl
les
ret
dec
sbb
pop
nop
mov
outsb
sub
sbb
jle
pusha
cs
lods
adc
or
lret
cwtl
sub
jns
cmp
out
stc
inc
outsb
sub
push
cltd
jmp
pop
mov
mov
dec
xchg
xor
imul
jbe
out
lret
or
stc
xchg
pop
jmp
sbb
or
fnstenv
or
lea
jg
je
addr16
out
push
push
in
fiadds
ljmp
aad
shrb
mulb
push
test
mov
mov
loope
popa
repz
loope
dec
cwtl
mov
out
shrb
fs
sub
adc
jmp
dec
aad
inc
sub
sti
push
ret
jnp
cmp
aas
pop
xchg
dec
les
imul
jbe
xchg
jge
xor
les
inc
lods
in
shll
add
pop
xchg
jbe
mov
or
xchg
xorl
stc
pop
cwtl
pop
fucomip
lret
les
cmp
push
cmp
inc
int
cmpsl
pop
int
lahf
inc
xor
jge
and
ss
std
pop
ds
xchg
mov
mov
mov
adc
xor
in
push
aam
pop
mulb
rorl
add
les
movsl
adc
stc
push
adc
xchg
pusha
addb
or
stos
dec
push
test
notl
sub
xor
pop
and
jns
push
pop
sbb
adc
cwtl
hlt
cmp
stos
jmp
push
sahf
subb
mov
sbb
test
clc
enter
jmp
jb
data16
cmpsb
jo
fildll
aad
xchg
bound
push
insl
in
cmp
add
and
jne
enter
bound
movsb
push
cwtl
hlt
popa
xor
sbb
cwtl
push
cmp
fcmovbe
mov
or
testl
loope
and
cmp
in
in
jnp
je
ds
leave
push
xlat
sbbl
leave
sbb
mov
mov
sub
shrl
mov
lds
rcll
add
mov
and
and
jg
cmp
sub
inc
cli
call
in
mov
loopne
sti
movsl
lods
pop
adc
popl
sub
push
outsl
mov
ds
add
adc
pop
js
add
mov
pop
sahf
jb
cltd
fld
pop
mov
xor
mov
sbb
ret
ss
negl
add
or
lds
std
xlat
loopne
scas
mov
cmpsb
jns
cmp
mov
xchg
xchg
imul
sub
cwtl
data16
push
rcl
jg
aas
xchg
mov
enter
xchg
inc
inc
xor
push
mov
adc
outsl
iret
loope
adc
fdivrl
mov
adc
movsb
stos
and
mov
adcb
rclb
xchg
xchg
sub
outsb
dec
push
lret
fsubp
fdivl
fabs
imul
or
mov
push
cs
fstpl
js
pop
jnp
inc
stos
js
xor
mov
jle
mov
in
xchg
sub
insl
xchg
xchg
fucom
movsb
lcall
push
stos
pop
cs
or
mov
clc
call
pop
shlb
fstl
push
push
fs
push
jmp
add
ror
inc
mov
dec
insl
sarb
sub
shll
das
sub
mov
cli
sbb
jo
testb
inc
add
and
mov
je
and
repz
sbb
lret
sbb
jns
add
aad
shlb
sbb
stc
lods
jge
pusha
cmp
int3
add
in
adc
outsl
shlb
jb
push
into
ss
mov
insl
jbe
inc
push
pop
movsl
mov
sub
test
out
jnp
repnz
push
pushf
pop
test
mov
mov
cmpsb
out
sub
jle
sti
into
dec
shll
or
xor
push
push
jl
repnz
push
cli
cld
mov
in
xchg
shll
iret
and
jl
aas
xchg
pushf
mov
mov
pop
add
sbb
sbb
sub
rcrl
js
cmp
lock
sub
sbb
out
dec
and
adc
cmp
pop
mov
repz
les
imul
not
adc
sti
mov
add
js
out
les
jb
daa
imul
mov
mov
shrb
sub
pop
sti
bswap
adc
pop
adc
mov
adc
jo
in
xchg
lahf
lea
jo
je
test
cmp
jo
add
or
push
pop
hlt
mov
or
in
rcrl
sub
pop
mov
jmp
stos
ja
add
xor
mov
push
xchg
bound
add
xchg
psubw
sub
inc
mov
xchg
imul
les
jb
sub
aaa
cmp
aam
lahf
je
cmp
cmp
cltd
add
pop
nop
loop
popf
into
jle
daa
push
cli
in
or
cmp
idivl
add
xor
sbb
xor
pop
movsb
pop
gs
pop
shlb
add
jp
data16
add
movsb
bound
adc
adc
jle
jae
in
test
sub
and
test
out
xlat
in
sbb
add
xor
sbb
adc
test
and
lahf
lods
in
notl
pop
adc
cmc
jg
pop
hlt
js
inc
dec
cwtl
imul
pop
mov
sbb
loopne
mov
jb
repz
cs
mov
xchg
mov
subb
loop
mov
pop
loopne
jnp
mov
ljmp
xor
mov
icebp
notl
outsl
jno
daa
jle
aas
inc
dec
cmp
pop
outsl
lret
push
je
pop
scas
clc
je
js
and
mov
adc
out
repz
xchg
call
stos
cmpps
test
jbe
add
jne
test
bound
cld
ja
loope
dec
push
js
jns
sub
xor
mov
out
push
rcrb
test
sahf
sub
jmp
cmpsb
inc
sub
lcall
push
pop
imul
popa
dec
pop
cltd
cs
je
or
sub
iret
jae
dec
js
loop
lret
leave
fs
xchg
outsl
adc
xor
insb
pop
leave
call
test
jl
cmp
shll
jl
shll
and
ljmp
xor
stos
mov
ds
ffreep
call
int
xchg
dec
xor
sbb
inc
mov
sar
scas
jmp
in
movsb
push
mov
imul
adc
adcl
in
sysret
add
and
xor
sbb
add
cmp
mov
xor
jge
push
mov
jns
movsb
enter
sti
and
stos
dec
in
inc
xchg
add
pop
into
mov
jbe
mov
aaa
jg
mov
hlt
divl
and
std
mov
pop
pop
mov
push
xor
mov
pop
and
push
gs
sbbb
int3
rorl
dec
sub
inc
aam
add
outsb
idivl
loop
mov
lods
je
xor
fdivs
cmp
popf
cmp
mov
add
fdiv
sub
int3
mov
ds
xchg
pop
iret
adc
clc
dec
or
fdivrl
test
cmc
in
dec
imul
call
xchg
nop
aam
or
cmp
sti
cmp
pop
cmp
adc
push
fcomps
test
mov
aas
mov
out
mov
mov
pop
mov
imul
inc
es
fs
and
jb
out
cli
cmp
into
dec
sbb
ret
adc
xor
inc
add
outsb
or
pushf
jg
add
lds
hlt
aad
and
pop
iret
inc
adc
xchg
movsb
pop
push
jno
push
xor
cmpsb
enter
aad
cmp
push
addr16
dec
xchg
xchg
xchg
push
jmp
psrld
mov
insl
daa
jno
fdiv
xor
lret
cs
push
inc
cmp
push
sbb
xchg
jno
orb
jmp
jae
dec
cmpsl
imul
orb
push
daa
loope
or
aad
addr16
clc
ss
out
pop
adc
out
repnz
out
push
call
add
fdivr
lock
out
sbb
mov
out
addr16
lcall
cmpsb
aaa
jnp
out
jnp
sub
mov
add
dec
mov
pusha
cs
pop
jmp
adc
mov
mov
mov
aam
inc
pop
lahf
sahf
stos
inc
adc
imul
jae
push
and
sub
insl
bound
and
xchg
push
fadd
enter
push
mov
loopne
cmp
dec
sbb
push
test
insl
xor
pop
into
popf
lea
xchg
fstps
nop
repz
pop
push
push
adc
std
inc
xchg
imul
lods
test
or
into
out
jno
mov
add
push
mov
adc
sahf
inc
test
rcrl
jge
or
daa
mov
rol
clc
inc
jb
cmp
lret
mov
out
xchg
mov
push
fisttpll
jmp
cmpsl
mov
push
loopne
jb,pt
xchg
loope
and
fwait
or
test
pop
into
add
cwtl
roll
int
sub
dec
cld
jb
int
mov
sbb
jg
xchg
lret
push
sbb
popf
xor
sbb
cmp
push
aad
xchg
sbb
jbe
sbb
jp
xchg
mov
icebp
pushf
jno
or
stos
add
push
mov
sarl
and
mul
in
aas
test
outsb
inc
lds
adc
sub
pop
imul
push
out
outsb
add
lods
bound
shrb
sbb
cld
lea
iret
lret
mov
scas
jmp
xchg
and
dec
les
cmp
test
pushf
mov
add
call
loopne
inc
ret
fcoml
icebp
aam
movsb
xchg
imul
loopne
or
cld
push
aam
es
dec
in
sbb
jle
mov
je
mov
pop
mov
dec
xlat
rcll
and
test
mov
shl
sub
sub
idivl
mov
lds
popw
dec
bound
fidivrl
sbb
dec
sbb
adc
pop
out
int
push
push
sbb
sahf
cwtl
sub
or
xchg
or
adc
insl
pop
and
or
loope
jnp
xor
xchg
jp
shll
lcall
push
das
ret
rcrb
cltd
loope
mov
mov
aad
cmp
xor
stc
dec
adc
mov
aaa
outsb
add
dec
inc
mov
lret
mov
mov
std
jl
xchg
out
sbb
or
frstor
mov
jg
jmp
jo
mov
push
push
daa
and
lea
mov
test
rcrl
or
add
inc
cmp
sbb
mov
lret
sub
insb
pop
jp
inc
xchg
sbb
sbb
mov
loop
aam
jecxz
roll
rorl
dec
int3
and
ljmp
or
mov
inc
inc
sarl
pop
fisttps
xchg
push
push
jno
sbb
loopne
add
mov
pop
and
jne
test
aaa
fdivl
subb
sbb
pop
dec
mov
scas
or
push
add
and
aam
subb
cwtl
pop
out
dec
sbb
or
xchg
mov
das
xchg
cmovs
outsb
pop
repz
scas
xchg
cmpb
int
mov
push
lcall
mov
mov
scas
dec
inc
sarb
mov
in
push
jle
popa
sbb
add
test
mov
mov
xchg
call
shl
in
mov
sub
lea
mov
sub
or
push
cmp
sbb
daa
adc
fisttpl
mov
subb
and
js
xchg
ljmp
sub
repnz
cmp
jp
les
fsubl
cmpsb
xlat
in
jae
mov
xor
xchg
jl
out
inc
jmp
push
and
ret
sub
jo
jae
adc
add
mov
cld
push
or
pop
dec
cmp
loope
mov
out
shll
jl
add
add
jbe
xor
sbb
test
jecxz
push
cmp
sbb
rolb
push
fwait
or
out
xchg
xorb
add
lock
dec
jae
or
pop
or
pop
pop
xor
push
sbb
cmp
or
iret
ret
out
mov
dec
repz
lods
fimuls
fnstsw
mov
hlt
pop
rol
invd
ret
das
xchg
mov
mov
jnp
dec
inc
and
sbb
xchg
into
dec
add
popf
jno
mov
add
mov
insl
pop
pop
test
push
sbb
je
ja
outsl
mov
lahf
test
fidivrl
ljmp
rclb
inc
cvtps2pd
push
or
xchg
outsl
lods
mov
xchg
repnz
xchg
inc
and
in
push
insb
loopne
mov
dec
sub
mov
sahf
fldenv
jnp
shr
fs
xchg
pop
push
mov
stos
mov
pop
or
jnp
sub
loop
addr16
addr16
imul
jg
ficoms
inc
mov
icebp
out
xchg
pop
scas
push
cmpsl
cli
andb
data16
into
adc
out
insl
cmp
mov
in
scas
call
rcll
pusha
or
data16
jb
mov
stc
sub
es
mov
mov
pushf
jmp
mov
stos
rclb
dec
mov
mov
mov
and
call
rcr
adc
push
and
out
pop
push
cld
jg
notl
lcall
xlat
lock
cs
inc
in
pop
inc
movsb
push
adc
dec
aam
movsl
rolb
add
leave
and
push
xlat
outsl
sub
cli
fdivrl
pop
mov
in
jl
fmul
outsb
xchg
adc
jb
adc
jb
shll
filds
ss
inc
jge
pushf
add
ret
jmp
xor
push
adc
jnp
sahf
arpl
lcall
gs
or
cli
aaa
mov
shll
xor
xchg
insb
scas
xchg
das
add
stos
xor
and
xchg
inc
and
imul
outsl
jp
aaa
push
imul
hlt
aad
loopne
jne
rclb
addl
xor
test
cld
add
or
jl
mov
mov
je
fs
mov
cmpsl
repnz
iret
stos
cmpsb
cmp
sub
fwait
adc
lret
ror
cmp
push
pop
in
shr
mov
push
mov
cmp
sub
cmovae
push
pusha
push
push
test
jecxz
xor
sub
xor
out
sbb
mov
inc
push
dec
jle
pop
jbe
xchg
dec
scas
js
push
inc
jno
mov
pop
xor
and
pop
mov
mov
and
and
or
fldcw
clc
nop
pop
and
shlb
push
pop
lcall
mov
fsts
xchg
lock
lahf
mov
rorl
xor
fsubr
jecxz
dec
jge
push
mov
inc
pop
sbb
pop
out
jecxz
or
call
aad
cmp
xlat
mov
dec
xchg
push
adc
mov
or
cli
clc
mov
fldpi
mov
adc
sub
int3
loopne
xor
dec
in
mov
arpl
sub
cmp
or
mov
dec
das
imull
lret
sahf
and
pop
mov
inc
sub
mov
cli
mov
cmp
mov
mov
jb
ja
jo
jae
sub
xchg
je
popa
lret
sub
mov
in
or
nop
add
adc
push
jno
dec
sub
int
punpckhwd
jo
je
stc
and
orl
cmp
lret
and
lcall
cmp
mov
mov
addl
aaa
xor
pop
stos
outsl
add
xlat
aaa
lret
insb
cmp
cmp
nop
pop
movsb
inc
fndisi(8087
fdivrl
mov
outsb
in
add
in
movsb
add
pop
xchg
or
xor
inc
sbb
cmp
std
add
dec
pop
cmp
mov
xor
roll
clc
mov
pop
stos
inc
sub
mov
insb
aas
dec
push
clc
xchg
and
roll
outsl
mov
push
cld
lods
jo
and
jmp
in
jo
ds
mov
lcallw
jbe
rorb
fdivl
pop
pop
mov
mov
out
and
pop
and
int
imul
cmp
and
sub
jmp
out
iret
xor
ss
iret
jge
aad
testb
or
mov
xor
lock
mov
sahf
test
les
or
or
xor
fdiv
or
or
loopne
daa
movlps
aaa
jge
adc
insl
mov
testb
int
fwait
jbe
pop
inc
mov
or
and
int3
or
ret
fbld
in
mov
mov
mov
sub
jg
jmp
push
or
or
fdiv
jmp
add
lods
inc
sbb
add
cmpb
add
pop
std
ljmp
nop
jnp
push
push
mov
pop
js
iret
mov
lods
test
and
jmp
mov
push
jl
es
fucom
mov
pop
cmp
test
inc
adcb
mov
and
xchg
fmull
nop
scas
push
dec
push
sbb
and
fcmovne
jmp
sbb
fistps
and
inc
pop
inc
push
ficoms
pop
xchg
iret
out
fadd
inc
or
push
enter
cli
decl
push
lret
mov
jmp
fsubrp
sub
push
or
mov
lds
loop
push
xchg
sbb
cwtl
cmp
icebp
daa
out
fadd
mov
inc
mov
and
scas
in
fsubl
into
out
orb
repz
push
out
jl
push
push
jmp
and
push
test
out
pushf
iret
into
mov
jle
fwait
sbb
push
jae
ja
dec
lods
xchg
mov
and
sub
sub
dec
adc
sahf
jmp
loopne
push
cmp
loopne
fnstcw
mov
mov
xchg
cmpsb
mov
adc
sbb
mov
xorb
mov
push
dec
in
fwait
push
sub
das
push
nop
aam
add
in
and
or
mov
mov
xchg
or
hlt
ljmp
sub
sbb
push
cmpsl
outsl
xlat
jne
push
jno
sub
in
lock
add
xor
xor
rcll
popl
cmpsb
jbe
xor
js
jno
imul
cmp
int3
sub
cmp
jbe
xor
loopne
adc
mov
fs
out
inc
sbb
xchg
jae
mov
outsb
mov
mov
mov
cld
nop
cmp
outsl
leave
repz
xor
xlat
sub
mov
xchg
mov
into
mov
test
ss
in
loope
jae
lds
lret
or
inc
adc
inc
out
cs
adc
sti
and
mov
icebp
cmp
andb
fsubl
mov
scas
enter
pop
lret
jge
je
cmp
imul
mov
mov
fs
jg
popf
or
fmuls
or
into
push
imul
test
pop
cmp
cmpl
movl
cmc
loope
xchg
faddp
dec
xchg
push
sbb
insb
sub
cmpsl
negl
dec
aad
or
xor
xchg
cmp
loopne
int
and
cld
inc
subb
cmp
pop
pop
std
aam
pop
into
cmp
jo,pn
aam
jb
push
je
sti
lock
mov
adc
arpl
xchg
mov
push
jp
xchg
sbb
lcall
scas
adc
xchg
lret
mov
xor
xlat
orl
lcall
push
or
xchg
movsb
xor
and
sub
sbb
adc
mov
sbb
xor
add
lahf
fsubrs
ja
adc
inc
sub
rolb
fistl
mov
sbb
cmp
xor
std
or
int3
mov
dec
fsubrl
test
dec
sub
lods
dec
cmp
imul
ficoml
pop
and
inc
mov
cmp
inc
mov
dec
jnp
inc
or
xchg
inc
push
mov
jle
addb
and
xchg
jnp
adc
cmpsb
test
pop
mov
xor
cmpsb
inc
sbb
test
dec
add
sbb
pop
or
mov
jnp
push
int
jmp
fidivl
addr16
pop
lret
popa
outsb
xor
daa
sbb
cli
popa
out
cmp
addl
notb
iret
out
pop
or
lret
xchg
fidivrl
enter
sti
bound
movsb
or
xor
movl
push
mov
dec
popf
push
add
mov
test
lods
mov
cmpsb
mov
testb
mov
pop
jg
mov
sbb
icebp
add
or
and
inc
pop
push
fnstsw
mov
xor
cmc
xchg
dec
lea
paddusb
xor
jno
in
stos
push
or
aaa
repnz
pop
movsb
shlb
xchg
js
out
sub
fidivl
pop
and
loop
push
ja
cmpsl
dec
xor
and
mull
out
cltd
sub
cmp
lahf
ds
sahf
pop
and
in
prefetch
or
sbb
dec
and
and
mov
stos
jno
js
and
loop
xchg
xor
xchg
rep
ror
ss
nop
inc
sub
addr16
xchg
sub
mov
out
jnp
aas
aas
add
jmp
xlat
push
jg
mov
pop
xchg
mov
dec
lock
dec
and
adc
movsb
xchg
adc
adc
jl
pop
xor
mov
sbb
and
add
popf
inc
mov
mov
les
push
push
mov
outsb
cmp
xchg
cwtl
xchg
and
or
dec
fwait
dec
mov
add
push
mov
push
xchg
addr16
scas
std
cmp
lods
jno
xchg
nop
inc
xor
loopne
sahf
push
or
rorb
call
lods
mov
mov
imul
bound
adc
pop
leave
cmpsl
fldenv
pushf
adc
inc
test
mov
imul
gs
and
shl
or
sub
lods
sub
out
push
jno
mov
nop
addl
jmp
sbb
xor
subl
adc
xor
ds
lock
fstps
add
hlt
fucomip
or
out
mov
out
test
test
adcb
mov
inc
sahf
clc
out
insl
push
cmpsb
fnstcw
sbb
sbb
sbb
push
arpl
cmp
mov
sbb
mov
aaa
jle
adc
fdivrl
jo
leave
scas
lret
mov
push
lahf
out
add
and
sub
mov
test
fadd
cltd
dec
inc
dec
jb
add
mov
aam
stos
pushf
dec
mov
or
pop
js
cltd
mov
fwait
jns
les
mov
shl
les
mov
jmp
xchg
imul
xor
dec
jb
mov
pop
xchg
mov
lock
sub
cltd
into
cld
pop
jg
xor
pushf
insb
push
lret
sub
lret
mov
mov
test
cltd
xlat
cmpsb
daa
sahf
ss
or
shr
mov
cmpsl
mov
into
lods
lods
xor
aam
jmp
lods
jecxz
push
inc
mov
clc
jg
es
pushf
ss
fimull
movsl
mov
dec
add
pop
add
dec
or
andl
jge,pn
es
rcll
daa
lret
jl
push
cmpsl
xor
imul
add
scas
adc
jnp
test
jecxz
dec
movsb
andl
in
mov
lods
ss
ljmp
ja
das
mov
test
or
mov
jp
cltd
dec
mov
xor
filds
rcrl
pop
sub
jns
mov
movsb
push
mov
or
jmp
add
mul
pop
pop
push
in
loop
adc
das
aam
jmp
xor
push
data16
push
scas
or
lock
jae
mov
pusha
xorl
call
add
dec
lods
popf
push
push
nop
mov
jbe
ret
dec
lret
add
test
or
or
fnstenv
enter
movsb
popf
popa
push
test
mov
jmp
ret
test
fcoms
fucomip
jle
ljmp
dec
xor
mov
jno
jle
daa
stos
push
sub
pop
xchg
lods
dec
repnz
inc
out
mov
dec
xchg
cmc
aam
scas
cmp
mov
loope
hlt
cli
rclb
add
aam
fdiv
pop
lcall
xor
jbe
sub
lret
jecxz
or
repz
aaa
xor
fdivs
adc
loop
add
mov
gs
jmp
bound
out
lret
add
imul
pop
inc
call
mov
inc
mov
lea
xchg
xchg
jp
dec
into
fwait
xchg
cmpsb
inc
or
xchg
jnp
dec
or
xor
shrb
cmp
sub
fiadds
ret
xor
arpl
mov
mov
out
jno
insl
iret
ret
mov
leave
add
dec
xchg
leave
test
mov
insb
fs
lods
jo
push
mov
pop
hlt
xorb
ss
add
rcr
ljmp
adcl
mov
mov
pop
jne
mov
or
mov
jns
das
sbb
js
jns
cmp
jbe
cmp
mov
adc
and
xor
xor
in
and
inc
cld
and
stc
repz
sub
mov
mov
inc
sarl
adc
ret
ja
shlb
sub
mov
push
mov
mov
cmp
dec
adc
aas
ljmp
outsl
xchg
cmp
and
adc
ret
push
iret
adc
aas
jg
int3
sub
fnstsw
ret
dec
add
test
or
je
dec
loop
test
mov
mov
aad
dec
mov
stos
cltd
dec
ljmp
mov
xchg
aam
dec
pop
lcall
xor
loop
in
out
jecxz
mov
pop
hlt
cltd
xchg
pop
mov
std
and
fwait
dec
sbb
or
shlb
pop
mov
inc
stos
xlat
pop
jne
push
fnstcw
std
pusha
lock
xor
and
insb
subl
dec
xchg
lret
dec
aam
push
push
and
adc
pusha
leave
push
fistl
pop
xchg
into
addr16
ljmp
lock
data16
or
lcall
mov
aaa
ss
ljmp
mov
inc
mull
sub
push
push
dec
inc
cli
arpl
mov
bound
cmpsl
repnz
dec
fwait
popa
into
cltd
inc
in
jnp
sub
clc
jg
xchg
std
jmp
out
sub
aad
push
xchg
rcl
dec
sub
test
out
insb
pop
popf
mov
mov
insb
movsb
cmpsb
mov
jbe
or
inc
mov
jg
mov
es
std
imul
cs
jno
mov
mov
outsb
insb
dec
mov
aaa
in
bound
inc
jno
js
sub
mov
push
daa
addl
lds
or
cmp
ret
dec
daa
pop
ds
fs
popa
fstl
pop
data16
pop
fwait
dec
push
jp
push
push
aaa
mov
jno
pop
adc
sub
mov
mov
jl
mov
mov
mov
dec
xchg
ljmp
aaa
int3
xchg
js
les
xor
movsb
and
sarb
sbb
add
mov
fists
cmpsb
call
jne,pt
std
mov
call
push
mov
bound
popf
sbb
psubusb
fstpt
mov
dec
test
adc
jnp
adc
in
lds
mov
or
loope
mov
cs
push
sbb
push
lds
jne
add
cmp
xchg
icebp
cmpsl
pusha
push
xor
adc
cmc
sbb
xor
xor
clc
rolb
fidivrs
je
cmp
out
call
fstps
push
jnp
adc
enter
dec
cmp
pop
out
adc
dec
clc
xchg
xor
pop
jg
dec
shlb
fmuls
dec
dec
cmc
test
mov
pop
push
fabs
int3
call
mov
std
pop
push
mov
iret
mov
bound
call
aam
mov
ret
xchg
mov
xlat
adc
sub
pop
hlt
mov
sub
dec
fiadds
fnstenv
mov
aas
test
test
outsb
pushf
ljmp
hlt
enter
orb
fstpl
xlat
jecxz
stc
add
mov
xchg
push
jnp
outsb
cltd
inc
ljmp
inc
popa
loope
hlt
pusha
xchg
pop
insb
lods
sbb
push
inc
mov
xchg
push
ja
and
enter
jo
inc
aad
cmc
jb
mov
movsl
das
mov
jmp
fs
xlat
inc
push
add
adc
dec
or
mov
adc
cmp
insb
adcl
inc
dec
cmp
jp
out
xchg
sbb
pop
add
or
dec
into
repnz
adc
sub
dec
movsb
push
or
jl
fisttpl
clc
out
pop
sbb
mov
mov
and
sti
pop
stos
ror
xorl
out
pop
or
js
fistpl
push
mov
sbb
subb
fxch
xchg
outsl
mull
mov
and
js
xchg
cmpsl
fdivrs
and
pop
or
xchg
lds
xor
jge
mov
or
jl
and
lcall
orl
mov
mov
ficompl
aaa
push
shll
mov
mov
sub
out
mov
mov
mov
in
ja
aaa
imulb
roll
add
mov
adc
rcr
gs
mov
push
or
mov
sbb
jb
das
sub
cld
sbb
jbe
mov
jo
dec
inc
pop
in
pop
repnz
test
jae
xor
fwait
jne
sub
stos
inc
xchg
jnp
cmp
jmp
lret
pop
in
stos
mov
mov
leave
jmp
and
pop
adc
mov
roll
jl
xchg
insl
add
imul
cmp
popf
popa
add
sbb
fmul
or
xchg
push
std
or
fcmovnb
cli
loop
movsb
ljmp
incl
rorl
repz
push
fsubl
push
mov
std
xchg
jae
data16
lret
stos
je
movsl
xchg
into
lahf
adc
sahf
mov
mov
cmp
xchg
lcall
push
pop
mov
push
test
pop
andl
lret
jge
outsb
call
imul
jae
popf
jbe
imulb
pop
mov
inc
or
cmp
call
push
add
sahf
inc
das
lea
nop
sbb
fstpt
movsl
and
les
mov
or
jae
add
mov
jo
add
dec
push
cmp
sub
add
sub
mov
cltd
cwtl
mov
inc
outsl
mov
cs
jl
inc
outsl
mov
outsl
scas
and
jmp
outsb
sbb
out
dec
addl
int
js
adc
ficomps
push
xchg
scas
xor
pop
mov
dec
inc
ss
pop
rolb
out
pop
add
mov
cmc
stc
jns
mov
shll
mov
or
sub
or
and
mov
iret
insb
fcomps
mov
add
sbb
test
cmp
mov
or
fdivrp
imul
dec
xchg
fucompp
cli
clc
cltd
xor
sub
scas
sti
lahf
sub
push
and
je
les
cli
push
cmp
jns
mov
push
aaa
pop
sbb
xor
xor
lret
out
pushf
addr16
push
adc
int
mov
outsb
or
stos
nop
stos
sbb
mov
jne
lret
stos
xlat
sub
scas
pop
loope
sbb
loope
cmc
adc
ss
add
dec
mov
int
mov
iret
mov
jmp
push
dec
ja
xor
lcall
imul
sub
jb
sub
cmp
jp
imul
xor
xor
mov
repnz
pop
fsubrs
out
cmp
insb
adc
xor
jo
popa
sahf
clc
data16
leave
inc
or
inc
jle
pop
push
stc
cmp
jg
scas
fwait
mov
pop
inc
lret
dec
std
outsb
repnz
mov
cmp
aam
pushl
sub
movsb
jnp
lock
inc
dec
adc
mov
aaa
movsb
push
mov
or
adc
jo
and
cwtl
add
add
cmpsl
mov
ficomps
push
mov
rorl
in
icebp
das
or
lret
fcmovne
out
push
cmp
lretw
add
out
fsubrs
jbe
and
sub
enter
dec
lea
sbb
jl
mov
aaa
xchg
xchg
dec
or
cmp
das
add
out
ljmp
roll
ror
or
mov
lock
data16
and
xchg
xor
fs
xchg
imul
mov
decl
fsubrs
pop
xchg
jbe
iret
ficompl
push
mov
out
pop
and
sbb
daa
test
addb
xchg
repz
ror
mov
add
push
addb
stc
add
testl
lds
ffreep
sub
lock
adcb
cld
fldt
fstpl
cli
jno
dec
enter
or
loop
les
aas
mov
cmp
mov
inc
inc
or
gs
sbb
pop
mov
nop
rclb
push
dec
movsl
push
sub
fsubrs
repz
mov
mov
xor
xlat
neg
mov
adc
lret
imul
push
out
xchg
test
mov
push
push
iret
push
xor
ss
and
cs
xchg
mov
daa
scas
jmp
xlat
lcall
cs
adc
popa
fildl
mov
xor
dec
cmp
fwait
push
dec
sarb
inc
jno
into
xor
test
mov
adc
loopne
adc
fstps
movsb
xchg
jbe
data16
pop
cwtl
scas
scas
imul
popf
out
mov
into
sbb
push
sub
gs
ja
push
fldt
mov
inc
les
push
shll
push
pop
fsubr
pop
mov
leave
je
adc
xor
add
mov
aas
mov
and
mov
rorl
jae
movsb
ret
imul
cs
gs
adc
push
pop
jp
js
cld
in
loop
fnstsw
and
inc
lods
loop
xor
adc
adc
or
pop
outsl
jbe
sti
inc
icebp
aas
or
pop
rclb
sbb
jp
jnp
push
pop
inc
inc
pop
push
pop
fisttpll
inc
int
mov
enter
cmpsl
test
mov
add
cli
lahf
dec
add
mov
pop
arpl
jae
insb
mov
adc
push
xorb
call
mov
push
dec
movsb
fmul
int3
ljmp
xlat
pusha
dec
outsl
jl
cmp
adc
xlat
js
fstpl
shlb
test
iret
cmpsl
push
scas
bound
or
push
insl
bound
push
les
jle
dec
pop
sar
cld
mov
dec
mov
xor
sbb
mov
xchg
inc
dec
jae
sahf
and
sub
mov
addb
jno
iret
out
popa
mov
bound
ret
push
add
bound
ret
test
leave
cmpsb
in
sub
or
insl
aaa
push
push
push
in
test
nop
lret
subb
push
or
mov
fcomip
xor
dec
and
sbb
enter
popa
mov
sti
and
inc
fisubrl
loope
pop
arpl
outsl
jecxz
aas
ret
lret
or
shrb
mov
push
jge
adc
into
jle
jp
push
movsl
scas
iret
cli
push
mov
movsb
mov
add
dec
xchg
jmp
insl
xor
jp
cmp
add
cmp
jge
ljmp
mov
movsb
ljmp
pop
shlb
cmp
and
fadd
insl
jb
sbb
sbb
nopl
int
pop
scas
adc
fimuls
cmp
loop
mov
shlb
and
push
and
mov
sub
popa
jns
inc
pop
lret
sub
jge
in
mov
jb
rcrl
or
mov
xlat
cmp
fs
int3
and
xor
mov
inc
movsb
xor
mov
mov
inc
scas
repnz
call
aas
xor
addr16
dec
repz
push
jnp
sub
stos
mov
sbb
inc
jo
aas
pop
mull
jns
push
mov
lea
outsl
repz
xor
mov
push
or
dec
dec
inc
notb
andl
int3
xchg
icebp
mov
pop
popl
push
test
pop
lea
data16
mov
xor
jbe
mov
pop
repnz
pop
mov
ss
aas
inc
mov
test
mov
xchg
pop
adc
popa
andl
push
add
ja
cmpsb
xlat
mov
cmp
and
scas
movsb
imul
scas
dec
data16
les
push
jbe
mov
icebp
pop
push
lcall
dec
adc
pop
pop
in
sub
rcll
xor
hlt
sbb
loope
cli
mov
outsb
mov
lret
ljmp
or
push
dec
xor
out
jb
mov
and
inc
stos
mov
or
mov
into
adc
pop
stos
sub
pop
xchg
je
cmpsb
cmovb
cmp
push
test
adc
mov
jne
in
fdivr
cmp
mov
cmp
jp
stc
call
imul
jl
sti
sub
mov
sbb
sub
ret
insl
sbb
std
lods
sbb
mov
in
shll
or
cmpsl
jo
test
mov
sarl
mov
add
add
testb
cmp
repnz
add
fs
xor
dec
lcall
out
addr16
insb
mov
or
sahf
aad
xor
or
xorb
or
mov
or
aaa
mov
jg
inc
int
into
in
cld
mov
jecxz
pop
sbb
fmuls
mov
scas
hlt
aad
stc
and
dec
xchg
in
ss
sub
cmpsb
orl
xor
mov
clc
mov
pop
fistl
aam
addl
add
add
jne
test
push
out
pop
push
inc
xor
inc
lcall
push
dec
and
mov
dec
fdivrp
mov
push
enter
cmp
movsl
cmp
mov
cmp
arpl
cli
inc
aad
xlat
xorb
mov
loop
adc
add
push
idivl
rorl
pop
cmp
pop
cmp
pop
push
clc
mov
or
je
inc
aaa
lods
shrl
jns
test
data16
pop
and
add
ret
addr16
mov
sbb
mov
cli
pusha
push
cmp
mov
mov
mov
loope
scas
movsb
xlat
notl
shrb
pop
adc
cmc
sub
stos
lea
push
out
cwtl
lock
jge
shll
mov
andl
pop
sti
adc
das
test
add
adc
fcoml
ja
shrb
ret
mov
iret
cltd
mov
pop
and
repnz
mov
mov
push
push
mov
shll
imull
dec
rclb
mov
lcall
mov
inc
dec
outsl
es
aam
filds
or
movsl
adc
push
push
sbb
jbe
jae
movsl
adc
stos
or
roll
push
outsl
in
push
in
pusha
in
les
push
pop
jnp
fsts
nop
cmp
lods
pop
add
fistpll
or
jge
jbe
adc
lret
xor
enter
jmp
push
iret
dec
push
in
in
test
fs
fisttpll
jae
sub
mov
and
mov
pop
add
cmp
pop
lret
cmp
das
js
sti
mov
and
int3
and
iret
ltr
mov
sub
mov
int3
push
mov
adc
push
push
rorl
pop
call
lcall
psubusb
shl
pop
mov
add
test
orb
cmc
dec
outsl
push
aas
mov
push
xchg
add
sbb
mov
in
xor
aaa
pusha
push
lds
add
pop
push
das
mov
clc
mov
jg
push
xor
sahf
out
cmp
adc
xchg
pop
lcall
pop
mov
out
and
mov
mov
mulb
jns
fnsave
int
mov
pusha
ljmp
or
adc
adc
outsl
sbb
mov
dec
xor
js
pop
js
cmpsb
xor
stc
xchg
sub
adc
int3
xchg
daa
cmp
pop
inc
pop
jbe
out
in
in
xor
ret
cltd
pop
cmpsl
cld
movnti
sub
das
mov
xchg
movsl
jmp
adc
sbb
inc
in
adc
or
dec
adc
add
push
mov
rcr
adc
mov
pop
xchg
fsub
xchg
jnp
clc
repz
inc
mov
call
or
in
popf
data16
mov
rclb
or
push
loop,pn
mov
push
xchg
std
push
add
loop
sbb
sti
enter
xchg
and
cmp
loopne
test
ss
ret
jp
addr16
mov
ja
and
mov
shrl
jecxz
clc
out
fs
or
data16
or
testl
sbb
xchg
mov
ja
jmp
pusha
cli
xor
mov
jge
rorb
lods
ret
lods
nop
add
sub
lea
mov
xor
cli
pop
push
adc
adc
bound
lret
jl
jns
xchg
mov
add
mov
dec
push
das
and
test
test
and
loopne
pop
test
imul
push
xchg
aas
js
test
xchg
ret
adc
shlb
shll
shr
shll
aaa
xchg
and
icebp
jne
jbe
inc
xchg
fldt
cmp
push
mov
xchg
adc
pop
mov
in
xchg
mov
dec
aad
sub
xchg
add
imul
xchg
and
mov
mov
fwait
in
xor
mov
testl
js,pn
dec
xor
push
add
fistpll
and
fsubr
mov
mov
cwtl
fs
test
pop
mov
dec
adc
xchg
sub
mov
in
push
loop
and
pop
lods
in
or
inc
sti
push
bound
mov
inc
push
jl
movsb
out
cs
adc
mov
inc
ror
int
daa
outsl
rolb
lock
icebp
fs
divb
and
out
xchg
inc
ret
dec
rolb
mov
sbb
jge
sti
cmp
push
and
mov
outsb
shrl
mov
dec
or
or
test
xchg
jl
inc
pop
mov
bswap
jg
nop
lahf
test
insl
adc
cs
mov
xchg
or
mov
sub
adc
cmp
cmp
xchg
repnz
popf
adc
cmp
sub
xchg
out
repnz
jbe
incb
in
fidivrl
cmp
fmull
test
outsb
add
out
aaa
mov
out
sub
push
mov
push
js
ud0
lea
outsl
aaa
inc
mov
pushf
dec
jg
in
lock
test
sahf
dec
inc
test
push
aas
push
lods
ret
lret
mov
and
mov
cmp
mov
pop
xor
adc
push
mov
js
fldl
cmp
add
ss
hlt
xchg
sbb
sub
dec
cmpsl
shrb
jg
in
int3
out
rclb
lcall
movswl
lea
xchg
xchg
mov
adc
scas
or
pop
sbb
mov
dec
jge
add
jle
push
shl
out
ss
mov
push
jp
fldenv
push
xchg
add
sbb
add
es
pop
cmp
insl
cmpsb
pop
mov
and
lods
mov
inc
mov
or
frstor
clc
dec
mov
loope
inc
popa
enter
lods
dec
inc
cld
out
mov
cmpl
inc
call
mov
add
pop
loopne
inc
xor
mov
jnp
in
lods
push
jmp
icebp
fwait
xor
cmpsl
mov
decl
pop
xchg
stc
xchg
les
testb
or
in
adc
aad
loopne
adc
cmc
into
jne
pop
fbstp
sbb
aad
popa
mov
insl
mov
imul
bound
in
pop
xrelease
test
cmp
out
jge
xlat
loope
adc
cmpsl
push
add
mov
adc
mov
subb
inc
mov
push
ficoml
jmp
rep
jo
es
mov
jmp
push
mov
cwtl
mov
test
outsl
push
imul
jbe
mov
add
movsl
push
in
loopne
sub
pop
mov
pop
loopne
lock
popl
loop
popf
cmp
xorb
call
outsb
pushf
pop
test
sbb
int3
push
addr16
or
rorl
pmuludq
pushf
clc
mov
out
xor
pushf
push
loopne
shlb
mov
mov
and
insl
add
addr16
mov
mov
aas
cld
inc
pop
xor
repnz
fsubr
imul
out
adc
push
les
xor
out
adc
daa
loop
vxorps
jle
pusha
data16
push
mov
popf
dec
aad
add
fldenv
dec
add
enter
dec
adc
jnp
mov
pop
fcoms
call
in
mov
arpl
mov
push
sbb
call
mov
mov
sti
cld
scas
cli
rclb
cmp
push
xor
fidivs
mov
test
imul
fisttpll
cmp
scas
enter
mov
xchg
and
cmp
sub
cmpsb
mov
mov
test
inc
scas
mov
lret
dec
popf
pop
sub
and
mov
call
dec
xor
mov
enter
push
push
out
cmpsl
dec
adc
add
dec
ret
jns
lods
mov
jle
push
in
sti
outsl
int
aaa
add
sub
inc
push
jb
loopne
shrb
orl
xchg
and
insb
jmp
mov
mov
sti
jo
mov
stos
dec
pop
sbb
pop
or
fstp
sti
or
int3
ficoml
mov
icebp
cmp
daa
stc
jb
int
inc
mov
imull
mov
pop
pop
sub
lcall
push
test
and
cmp
ret
repnz
pop
jne
ds
in
je
lock
xor
inc
scas
out
out
lods
shll
mov
ljmp
enter
mov
std
cmp
or
inc
popa
fiaddl
jb
aas
in
push
or
sti
jne
mov
iret
jbe
adc
pushf
jmp
cmp
decl
out
jo
dec
into
pushf
xchg
mov
add
xchg
imul
xor
outsl
arpl
arpl
movsb
ret
fildll
pop
jo
jb
mov
mov
add
adc
sti
push
shll
test
xchg
xchg
ljmp
int3
arpl
xor
jns
xchg
lea
inc
lcall
fidivrl
ret
push
jl
xor
push
fcompl
std
and
out
xchg
inc
push
push
mov
xor
pcmpeqw
aad
cmovg
bound
loopne
jl
idivb
sbb
cs
or
push
or
ret
xchg
mov
std
lcall
aad
andl
lret
and
aad
mov
add
cmp
ds
js
and
loope
xchg
sbb
mov
mov
int3
loop
lahf
mov
push
mov
xor
imul
or
insb
les
cs
sbb
lret
dec
mov
int3
imul
rclb
pop
test
cmp
push
pusha
add
xchg
repnz
mov
dec
mov
daa
icebp
and
in
pusha
sbb
inc
sbb
sarl
jb
imul
cli
fildll
js
or
mov
push
call
js
ret
pop
cwtl
xor
or
cmp
popa
test
push
xchg
int
sbb
leave
push
pop
push
and
pop
jecxz
or
add
adc
movb
xor
cmc
sbb
mov
dec
and
inc
cmp
ret
imul
pushf
or
ret
shlb
rorb
pushf
dec
dec
mov
push
outsl
sub
in
xchg
aas
mov
jns
rcr
cmpsl
lret
shl
adc
or
inc
sbb
fdivrl
mov
lcall
jl
mov
mov
inc
push
imul
xlat
mov
add
xor
repnz
jmp
scas
sbb
jge
jnp
cwtl
lods
adc
repnz
pop
inc
inc
aaa
lahf
or
sub
jmp
xor
fisubrl
mov
aad
lret
xor
lds
sbb
adc
pop
inc
loopne
lahf
jb
pushf
dec
dec
cmp
sbbl
inc
xlat
jae
mov
inc
cmp
ds
insb
call
stc
stos
adc
outsb
inc
pop
andb
loop
and
rorl
and
rorl
pop
fbld
cmp
out
mov
sub
adc
push
xchg
cmpsb
inc
test
popa
push
scas
repnz
mov
add
scas
pop
sti
test
imulb
cmp
gs
jg
jmp
rorb
push
iret
fwait
repnz
stos
push
ss
sub
pop
sbb
sub
dec
lea
adc
test
pusha
sahf
cwtl
fbstp
in
add
hlt
jae
test
nop
jnp
xchg
pushl
cmpsb
enter
cmpsb
xchg
shlb
jl
dec
sbb
mov
xor
cmp
cmpsl
add
xor
fnstenv
dec
pop
adc
lock
push
xchg
adc
loop
mov
mov
xchg
out
int3
loope
inc
into
js
data16
add
es
xor
call
dec
arpl
cmpsl
mov
xchg
pop
dec
shr
mov
pop
movsl
or
and
or
ret
or
jmp
adc
das
into
les
xchg
inc
enter
imul
test
dec
mov
sub
mov
daa
lock
in
loopne
add
nop
jns
and
aam
in
rcrl
cmp
jge
das
jo
mov
cmpsb
fisttpll
mov
pushf
cwtl
add
sahf
inc
stc
xchg
pushf
adc
jp
aad
inc
addb
push
push
loop
int
pop
xor
dec
pop
divb
data16
mov
test
mov
pop
xor
sarb
mov
jns
mov
sub
pop
idivb
scas
xchg
mov
icebp
aas
pushf
push
push
imul
sub
lret
ja
rorb
push
enter
jle
cs
mov
xchg
adc
sbb
insb
test
sub
fisubrl
pushf
adc
out
sahf
xor
xchg
lret
inc
xchg
fnstenv
push
push
test
pop
xchg
dec
ret
jecxz
sub
adc
cmpsb
std
test
test
test
mov
mov
rorl
mov
push
lock
cltd
sub
or
in
sub
jns
pop
mov
loop
shl
gs
addr16
shl
jne
xor
add
test
js
xchg
adc
dec
movsl
fdivp
sbbb
loop
mov
add
pop
adc
data16
test
outsb
push
dec
out
push
mov
mov
xchg
mov
or
into
and
and
xor
ljmp
mov
adc
jecxz
ss
stos
inc
cmp
hlt
rolb
sahf
ljmp
lods
nop
in
cmp
lahf
sbb
inc
data16
or
rolb
mov
subl
out
loope
inc
adc
mov
test
jnp
cli
sbbb
shlb
mov
int
mov
pop
leave
sar
jne
out
inc
adc
shl
push
jge
loopne
lods
test
arpl
aas
xchg
inc
push
or
in
mov
xor
push
lea
loop
pop
jne
sbb
adc
mov
pop
sti
adc
rcll
lea
push
repz
or
jp
jae
inc
loopne
add
sbb
inc
inc
mov
push
push
pop
inc
mov
add
pop
mov
lds
test
cmpsl
pop
test
call
mov
inc
pop
or
jmp
aad
scas
cmp
lret
stos
scas
jp
cmc
xor
mov
repz
xor
lret
ss
xchg
test
sbb
out
push
jp
push
sub
sub
in
xchg
lahf
aam
iret
or
mov
jnp
pop
out
scas
cltd
test
in
bound
jo
lods
xchg
mov
adc
cmp
leave
in
jmp
das
sub
nop
or
insl
and
jnp
xor
test
cwtl
sbb
sbb
notl
sarl
in
pop
hlt
call
int3
jns
mov
push
sub
jae
outsl
out
les
shl
ljmp
incl
sub
arpl
scas
sub
add
dec
dec
hlt
add
add
and
jnp
insb
push
repnz
push
jmp
mov
cmc
jp
mov
push
aaa
shrb
push
pop
lds
loope
mov
jnp
pop
movsb
xor
push
je
test
ss
cmc
daa
cmp
dec
push
out
push
cmc
les
jno
jge
sbb
cld
int
shll
test
aas
add
push
pop
mov
mov
xor
mov
push
fsub
es
cli
es
pushf
jp
loopne
popl
test
repz
mov
mov
mov
std
pop
cmpsl
fwait
bound
in
aas
shlb
cmp
pop
dec
stos
xor
inc
adc
adc
dec
jle
or
push
ficompl
lds
sbb
popf
add
push
push
mov
test
je
cli
sub
loopne
cmc
stos
scas
and
ljmp
push
push
aam
inc
dec
sahf
pop
xchg
xchg
mov
repnz
bound
test
imul
mov
pop
insb
xchg
jp
repz
sahf
xchg
test
jecxz
outsb
test
mov
out
fstpt
repz
cli
or
fdivrp
sbb
adc
adc
cld
scas
int
push
or
jae
popf
and
in
div
dec
mov
inc
and
pop
jae
adc
enter
nop
mov
push
cld
outsl
cli
mov
pop
jl
leave
pop
xchg
inc
mov
mov
sbb
xor
jge
testb
jne
cli
push
lock
push
or
pop
in
add
jge
fdivp
jmp
fwait
xorl
cmpsl
mov
jbe
sbb
out
or
lods
enter
ds
in
pusha
push
pop
xchg
sbb
xlat
test
loopne
sub
lods
mov
cmp
sub
jae
cmp
scas
xchg
xchg
lret
push
es
adc
mov
xor
mov
add
fucomi
pushf
jne
mov
pop
pop
sbb
inc
inc
inc
or
mov
imul
push
xchg
adc
dec
aaa
adc
ret
mov
adc
lods
adc
push
std
call
sahf
std
inc
jne
push
pop
add
mov
pushf
add
pop
scas
jge
jns
fisttps
sbb
cwtl
sahf
shlb
mov
rclb
add
pusha
fdecstp
push
fstl
mov
or
jo
je
cwtl
xchg
movsb
mov
mov
xor
mov
pop
scas
mov
fsubr
in
jb
inc
pop
aam
fwait
cmp
xor
imul
dec
iret
dec
push
out
jb
int3
sub
mov
xchg
in
fsubrl
inc
pop
nop
sbb
roll
lods
cs
rcrb
insb
or
cmpb
gs
sar
cmc
addr16
dec
pushf
mov
and
xchg
push
add
mov
cwtl
xchg
aaa
ljmp
lret
push
pop
mov
std
mov
xchg
lcall
or
cmp
jns
inc
je
fsubrl
into
daa
fsubrl
aaa
daa
cli
pop
mov
movsb
xor
mov
outsb
xchg
inc
imul
jae
mov
xor
ljmp
push
movsb
cltd
out
shll
inc
or
add
adc
xor
mov
adc
test
aad
adc
mov
pop
jbe
and
dec
in
cmovs
adc
pop
and
dec
in
push
jl
xchg
mov
negl
pop
out
clc
aam
jg
and
andl
mov
pop
xor
pushl
lcall
push
leave
testl
dec
iret
xchg
push
repz
adc
mov
add
jmp
xchg
cli
icebp
jne
sbbb
insb
and
pop
mov
lock
add
cmc
dec
aas
clc
pop
sbb
lahf
jl
jne
fstpt
sbb
or
in
xor
cmpsl
and
push
push
lds
es
icebp
mov
xor
push
frstor
sub
imul
stc
es
sbb
int3
ja
sahf
lret
push
in
push
xor
push
rolb
int
cmp
dec
xchg
mov
mov
fcoml
mov
inc
add
rcll
dec
xor
adc
subl
ss
sbbl
dec
pop
jmp
leave
cmpsb
inc
ds
ss
push
sub
dec
inc
jle
outsb
inc
setg
mov
pop
mov
pop
or
adc
daa
cwtl
dec
in
push
and
mov
xchg
cmp
nop
ffree
mov
lock
jle
xchg
call
lods
repnz
cmpsb
cmc
xor
std
outsb
sbb
cwtl
test
outsl
mov
enter
ss
push
mov
dec
dec
movsb
outsb
fildl
pushf
inc
pushf
out
cmp
stc
mov
lds
xor
cwtl
or
inc
test
jne
ss
andb
stos
lock
shrb
arpl
jecxz
push
and
inc
and
mov
adcb
sub
pop
push
fs
cmp
xor
mov
int
ds
sti
ret
or
cmpsb
test
sbb
bound
lods
xlat
xchg
into
adc
test
push
mov
outsl
cmp
inc
pop
xor
shrl
mov
inc
imul
pushf
loopne
push
mov
fwait
add
out
jns
and
mov
out
shlb
jl
pop
sbb
aad
int3
popa
inc
adc
adc
repnz
adc
rclb
xor
lcall
pop
pop
iretw
cmp
lods
hlt
jbe
sub
cmp
in
loope
je
enter
sub
in
push
bound
sbb
jl
out
ud0
push
xor
pushf
xor
xor
jp
imul
dec
movl
es
leave
add
loopne
push
mov
sub
popa
int
or
pushf
rcrb
lods
loopne
mov
inc
xchg
jp
pop
push
mov
xor
sub
insb
test
inc
pop
scas
jae
sbb
ja
xchg
gs
jns
jns
ud2
scas
mov
fimull
cmp
outsb
add
out
cmc
mov
fisubrs
adc
out
pop
sbb
es
dec
das
mov
adc
shl
pop
scas
add
inc
or
arpl
pop
or
scas
push
jbe
adc
frstor
icebp
xchg
movsb
xor
fsubrs
mov
dec
arpl
loop
stc
dec
dec
pop
ror
pusha
xor
mov
push
int
xchg
cmc
and
or
xor
xchg
int3
pop
loop
or
popa
leave
insl
cwtl
mov
pop
sub
lahf
aam
mov
daa
mov
sbb
jne
mov
pop
out
je
adc
pop
add
cmp
clc
mov
icebp
add
sub
mov
push
add
jmp
andl
loopne
inc
xor
push
and
xor
shll
mov
test
rcl
jne
mov
jbe
jae
gs
in
sbb
mov
popf
cmp
enter
and
sti
es
jbe
sti
sbb
jo
gs
dec
jno
cmp
add
std
xchg
out
jl
dec
lcall
xor
cmp
in
pushf
pop
das
cmp
rcr
push
push
xchg
pop
or
xor
pop
mov
mulb
or
stos
sbb
pop
popa
out
imul
mov
push
mov
in
movsb
loop
adc
mov
cmp
mov
xor
mov
inc
or
shll
inc
push
or
xor
rol
nop
add
ss
ds
ds
pusha
outsl
ja
add
incl
push
xlat
fcomps
xor
inc
nop
push
cli
dec
out
cmc
inc
in
lds
jge
fidivrl
in
in
dec
enter
push
pop
cltd
adc
inc
clc
stos
dec
jg
xor
cmp
hlt
test
cmpl
test
test
fimull
and
mov
mov
cli
sar
fisubrl
movsb
aam
pop
pop
gs
mov
bound
adc
jno
out
mov
adc
and
add
enter
mov
fwait
fs
mov
pop
loop
movsb
shll
xchg
nop
sub
or
or
mull
scas
mov
idivb
mov
mov
out
cmp
jb
jnp
sub
arpl
mov
insb
mov
jo
cmp
fldl
dec
xor
mov
aad
int3
ret
jecxz
mov
test
mov
or
stc
es
je
jae
aas
jmp
test
pop
push
jo
repz
and
push
arpl
sbb
imul
in
sbb
je
daa
aas
and
fildl
cmp
and
push
in
xchg
test
addr16
dec
mov
lret
outsl
divb
mov
adc
lds
jb
scas
add
icebp
adc
nop
repz
mov
sar
movups
cmp
aas
adc
aas
sbb
xchg
mov
cmpsl
jle
repz
xchg
jle
mov
stc
xchg
cmpsb
inc
cmp
pop
push
test
xor
cmc
call
push
and
jno
cs
sbb
lcall
push
dec
sbb
sub
ret
add
cmpsl
xchg
adc
adc
jnp
dec
jl
addb
add
sub
dec
jp
pop
rcll
jle
test
push
cmp
cmpsl
or
pop
leave
pop
add
xor
in
rcrb
xor
jae
adc
fdivs
and
stc
fs
insl
lods
out
test
mov
pop
pusha
sub
xchg
and
and
xor
loope
jg
sub
xor
xor
loopne
sti
adcl
out
add
in
jnp
negb
mov
and
adc
sbb
mov
mov
pop
jg
pop
addr16
sbb
cmpb
jmp
sub
cltd
jl
cmp
sbb
mov
in
push
xor
popf
test
xor
mov
pop
pop
mov
pop
dec
pop
mov
icebp
mov
mov
pop
orb
lahf
sarl
and
jg
inc
adc
jno
cmp
jg
sbb
cmp
pop
adc
jmp
mov
cmc
test
sbb
jl
push
mov
sbb
fs
cli
mov
rcl
xor
and
leave
jl
dec
jmp
cmpsl
pop
sahf
aad
icebp
sbb
xor
cs
mov
push
repnz
outsl
add
lods
fisttps
outsb
or
mov
mov
enter
int
lea
cld
aas
cmpsb
xor
sub
test
es
or
sub
adc
lret
jne
imul
dec
mov
aas
mov
loope
pop
xchg
dec
xor
xor
outsl
movsl
or
pop
subb
push
adc
and
outsl
xor
mov
sarl
mov
out
mov
jb
sbb
lret
ss
not
das
mov
jecxz
call
and
xor
rclb
and
lds
push
iret
add
lods
cli
mov
dec
pop
adc
mov
and
xlat
xchg
xor
out
aas
jp
aas
rolb
hlt
xchg
cwtl
aad
lods
mov
jmp
mov
popa
insb
mov
pop
jbe
test
repz
sbb
add
jae
cmp
je
and
les
sbb
pop
lret
scas
fisttpl
push
cltd
sub
pop
loope
add
push
popa
cmp
scas
and
fs
cmp
je
xchg
xor
testb
ret
out
jae
ds
mull
mov
std
mov
push
lds
xlat
jb
ljmp
leave
andb
pop
lcall
push
xlat
or
in
bound
pop
or
orl
in
popf
loope
sti
mov
or
pop
movsl
movsb
fwait
adc
xor
fmull
into
mov
mov
rorl
cmp
and
xchg
call
out
ror
sbb
mov
sub
gs
fstps
jnp
sub
jbe
mov
out
dec
adc
ds
mov
mov
push
mov
popf
rclb
xchg
push
nop
cmp
jl
push
sbb
cmpsl
push
inc
popf
cld
ja
sub
push
js
or
mov
inc
push
into
sbb
fcomps
xchg
add
jle
aaa
cmpsl
jne
push
lods
cmp
rol
dec
jne
out
rcrl
icebp
jp
js
popa
xchg
nop
xchg
in
inc
jl
data16
test
adc
sub
cmpl
dec
insl
adc
mov
adc
shrb
aam
into
shll
in
pusha
cmp
jnp,pt
pop
repz
adc
lock
into
call
pop
outsb
mov
jbe
rcl
xchg
add
push
roll
dec
lods
lods
sahf
and
shlb
stos
int3
notl
hlt
mov
xchg
enter
adc
push
push
daa
loop
outsb
divps
adc
jne
push
jo
das
cli
sbb
filds
out
aam
out
inc
xlat
test
sub
sub
sbb
bound
scas
cli
repz
jno
mov
sub
mov
or
mov
inc
int
xor
mov
mov
movsl
add
imul
push
in
sub
cmp
cs
out
mov
pop
repnz
and
stos
xlat
mov
mov
mov
je
xchg
cltd
cmp
mov
push
mov
add
pop
mov
mov
and
repnz
pushf
push
gs
xchg
add
jb
in
jge
sbb
inc
cld
xor
mov
mov
movsl
fwait
popf
and
repz
jecxz
mov
mov
lock
xorb
xchg
jo
pushl
mov
cmp
outsb
push
fisttpll
adc
aas
notl
mov
in
sub
ds
arpl
scas
cmp
add
xchg
add
xchg
lds
lods
mov
test
hlt
mov
cmpsb
enter
les
add
or
stc
inc
mov
and
push
outsb
out
test
fnstenvs
cmpsl
and
lods
ljmp
das
sbb
pop
push
jmp
mov
mov
cmp
mov
call
pop
in
leave
cmp
pop
jne
mov
shl
cmpsl
xor
inc
into
js
pop
idivb
xor
movb
scas
iret
call
mov
jae
int
mov
out
es
insb
stc
or
sbb
lcall
mov
js
push
cmp
insl
mov
aaa
mulb
mov
jge
push
jl
fiaddl
cmpl
movsb
mov
popf
sar
jg
add
push
mov
lods
cwtl
ret
or
add
cmp
lea
sub
popa
adc
int3
sahf
cmp
mov
aad
xchg
les
mov
test
rol
mov
les
leave
dec
and
push
cltd
jl
xor
loope
push
and
mov
sbb
cld
ss
movsl
ja
mov
jno
bound
inc
hlt
xorb
and
push
and
lcall
imul
inc
push
sti
xor
fwait
shr
mov
clc
lret
mov
dec
fwait
rol
push
out
adc
call
div
jecxz
and
cwtl
add
push
js
push
inc
lahf
lds
and
inc
clc
push
roll
lea
insb
mov
add
rcrb
popf
cmp
sub
enter
lods
cmp
mov
mov
stc
fs
aam
mov
fists
push
pop
nop
fmull
in
mov
adc
and
pop
addr16
inc
out
mov
arpl
push
daa
rolb
pop
std
or
push
push
outsb
push
mov
pusha
adcl
inc
ss
fidivs
insl
xchg
push
mov
dec
mov
nop
repz
or
jg
into
les
jae
mov
mov
and
pop
aad
xchg
outsl
shll
mov
mov
into
fidivrl
jecxz
sub
jg
ret
and
cmp
add
jl
int3
jle
jb
lds
push
mov
xlat
or
fwait
into
mov
outsl
test
icebp
jp
dec
jb
dec
xor
cld
adc
xor
xchg
ja
sti
and
sti
mov
mov
dec
xor
cmp
sub
cmc
aaa
adc
pop
fcoms
fists
cmpl
cld
jnp
or
in
mov
lcall
roll
push
jbe
mov
mov
dec
into
mov
jae
pop
pop
fsts
insb
xchg
fiadds
mov
add
jnp
aam
mov
into
push
loope
dec
orl
ficompl
stos
int
ffree
push
jecxz
das
lods
les
mov
lea
clc
jle
sarl
ficoms
mov
imul
jge
jp
xor
cld
adc
pop
repz
fmulp
call
dec
in
or
dec
xlat
mov
push
sbb
fs
jle
push
js
pop
loopne
stos
fwait
push
sbb
cmp
sub
mov
leave
dec
fstl
jns
movsl
jnp
jb
mov
xchg
sarl
xor
nop
ret
push
enter
sbb
lsl
mov
or
cltd
xor
sbb
je
cs
pusha
fistpll
call
jecxz
out
or
push
mov
inc
xor
pop
xchg
sub
hlt
lret
fisttpl
jbe
pop
ret
lock
ficomps
mov
xchg
adc
lea
dec
fmuls
icebp
xchg
ljmp
js
or
std
add
inc
mov
or
pop
pusha
insb
outsb
call
repnz
mov
xchg
std
shl
jae
and
add
js
outsl
je
bound
int
in
bound
loope
mov
sub
jg
test
push
mov
inc
sub
cmp
jmp
movsl
fwait
movsb
out
pop
mov
and
into
xlat
mov
in
stos
cmp
clc
pop
sarl
in
sahf
cs
aas
scas
movsb
pop
nop
or
outsb
push
int
sub
daa
cli
add
cmp
mov
aam
cmp
dec
stos
and
movsl
scas
sbb
pushf
and
jg
or
mov
or
lret
aas
adc
xor
imul
int3
xor
push
sub
das
and
pushf
aam
loopne
je
lds
mov
stos
test
lea
lret
shlb
jae
pop
jge
add
out
js
mov
adc
sub
fcompl
stos
repnz
lret
xchg
out
vpxor
lea
loope
test
inc
loope
test
mov
adc
or
lcall
sub
or
jl
outsb
mull
fbstp
and
jp
mov
lods
enter
aaa
or
addb
xor
cmpsl
push
jb
mov
and
pusha
sub
lret
jo
fidivs
mov
cmp
and
mov
mov
fistps
mov
ljmp
pop
pop
movsl
fs
mov
xor
pop
cmp
pop
arpl
sub
jno
fimuls
push
jns
stos
add
dec
cmp
outsb
sbbb
jecxz
and
call
gs
movsl
pop
push
vpshab
xor
mov
pop
jecxz
cltd
int3
jmp
xchg
sub
jbe
lods
inc
shll
sbb
jnp
imul
stos
or
jmp
cwtl
xchg
mov
ds
aas
inc
sub
fsubl
xlat
adc
fwait
outsl
and
add
pop
aad
or
pop
push
adcb
insl
jnp
jno
mov
stos
xor
ficompl
idivl
lret
inc
mov
out
adc
repnz
pop
cmp
hlt
dec
mov
sti
inc
sub
push
scas
xchg
into
mov
ds
dec
jae
mov
icebp
in
and
fcmovbe
jecxz
pop
cwtl
jmp
jmp
fisubrl
pop
xor
jecxz
jae
rcll
fucom
add
stc
out
jmp
shrl
xchg
das
es
das
test
pop
mov
or
aas
addr16
fisttps
popf
std
outsl
xor
cmp
js
in
sub
mov
sub
pop
sub
mov
inc
gs
mov
dec
hlt
sub
in
xchg
pop
push
push
xor
fwait
mov
lods
loope
out
and
fistpl
inc
leave
mov
jmp
and
adc
dec
sbb
ja
js
cmp
cmp
fs
pop
mov
jmp
loope
pop
mov
mov
jl
pop
clc
mov
incl
insl
lret
aam
add
and
nop
mov
inc
adc
stos
jg
rcll
testl
das
mul
jne
inc
xor
xchg
push
push
push
xchg
xchg
mov
test
daa
aaa
cltd
mov
mov
movl
add
mov
ds
arpl
or
cltd
and
push
xchg
sti
xor
js
std
dec
shlb
leave
rdmsr
in
or
inc
js
sub
pop
jmp
add
add
add
jno
pop
jle
into
fs
pop
xor
enter
xor
negl
xchg
ret
jg
and
test
sbb
add
jae
push
and
mov
std
push
push
outsb
inc
push
inc
lret
fcomps
insb
cltd
rcl
jle
lods
xor
loop
push
push
jl
imul
pop
jne
test
mov
mov
add
xor
add
mov
cmpsb
ja
sbb
scas
fwait
icebp
cs
stos
dec
pop
xchg
mov
dec
jmp
add
mov
aam
ret
sarb
daa
cwtl
sub
xor
repz
out
dec
xchg
fldenv
enter
mov
cltd
jl
adc
icebp
lcall
push
push
in
mov
jg
push
or
sbb
push
adc
adc
stos
aas
daa
pop
test
mov
jo
repz
in
dec
mov
dec
repz
pop
push
test
aam
scas
ds
pop
fs
fistpll
repnz
adc
mov
cltd
popf
xor
int3
fists
imul
in
mov
mov
das
push
insl
jo
mov
inc
scas
in
inc
push
test
mov
add
xchg
mov
and
sti
mov
xchg
add
push
sbb
sub
and
mov
mov
imul
and
daa
jbe
cmp
repz
fwait
mov
orb
sbb
xchg
push
mov
pop
sti
insb
mov
xchg
data16
push
cld
or
dec
repnz
shrl
rorl
testl
testb
mov
xchg
pop
and
mov
icebp
mov
push
cs
sarb
in
sbb
lcall
cmpsl
and
jle
adc
inc
jo
lods
cmp
enter
xchg
mov
mov
ljmp
frstor
mov
insl
outsl
test
cmp
sbb
adc
mov
lea
arpl
cld
mov
mov
xchg
add
dec
rolb
call
addr16
in
add
sbb
xor
enter
jno
push
xchg
int
rcl
ss
shlb
xor
lret
xlat
xchg
lds
mov
push
xor
arpl
in
sub
xor
outsl
iret
fcoms
lds
sbb
or
mov
in
add
mov
sbb
arpl
sub
shll
aam
add
repz
ss
incl
mov
xchg
adc
pop
push
sub
test
frstor
or
xor
test
cli
jno
jmp
test
xchg
and
pop
imul
orl
sub
dec
cmc
in
pushf
lret
cmp
adc
ja
xchg
jne
test
push
jae
adc
orb
xchg
in
test
sbb
dec
sbb
push
xchg
lock
mov
loope
adc
xchg
insl
sbb
jbe
jp
jae
clc
dec
mov
hlt
outsb
and
sub
call
or
stos
in
or
mov
pop
ret
dec
sbb
dec
xlat
jmp
sub
dec
add
push
inc
leave
jge
mov
ret
idiv
test
mov
jl
cmp
test
testl
jecxz
pop
xchg
aaa
cmpsb
gs
daa
das
mov
sub
negb
inc
xor
and
mov
rcrl
hlt
or
push
enter
jp
rcr
sbb
cld
fcmovne
jge
insl
js
fucomip
inc
mov
into
imul
jp
loop
ds
scas
jb
mov
cwtl
std
mov
repnz
lret
std
mov
btc
xor
fimull
jns
inc
jmp
dec
cmp
inc
cmp
test
jmp
inc
cli
daa
xor
js
push
pusha
jne
and
loope
stc
mov
mov
lea
or
jno
mov
pop
xchg
jno
js
test
scas
leave
push
sti
scas
cmp
aas
stos
cmp
mov
sbb
lret
cmp
and
xchg
stos
pop
push
mov
fnstcw
addb
jge
mov
push
out
sbb
mov
and
cmp
xlat
xchg
lods
movd
add
jns
pop
adc
stos
mov
or
lods
mov
rcr
jle
xor
sub
mov
xor
sbbl
insb
cmc
movsl
mov
addr16
or
nop
mov
pushf
rclb
cwtl
sub
pusha
int
popf
shl
outsl
push
xchg
pushf
xchg
sbb
sub
mov
jbe
mov
pop
mov
xor
mov
and
pop
mov
push
movsb
sub
xchg
imul
or
call
cmp
add
cmp
dec
lods
icebp
push
rcll
call
xor
sti
dec
or
fisttpll
out
ja
aaa
insl
movsl
movsl
push
movsl
cmc
and
icebp
xlat
xchg
add
daa
popa
out
dec
mov
ret
pop
mov
inc
and
test
les
sbb
or
mov
fnstcw
sti
pop
popf
xlat
sahf
rolb
push
pop
pop
cli
insb
das
jne
popa
xchg
adc
repnz
lahf
loope
stos
mov
fbld
lahf
je
popf
stos
add
cmp
xchg
xchg
push
cmpsl
inc
fiaddl
mov
scas
aaa
lods
shll
jnp
or
mov
das
add
xchg
ja
cmp
sbb
jecxz
fisubs
cmpsb
imul
and
sbb
fisttpll
mov
mov
sub
gs
push
stos
roll
ret
jb
or
and
sub
mov
and
and
dec
and
or
or
jmp
repnz
sub
pop
mov
sub
xor
jmp
fs
stos
cmp
inc
scas
pop
push
mov
adc
lods
int3
out
in
xchg
shrb
mov
xchg
ds
add
or
outsb
lock
data16
mov
fwait
xchg
xchg
repz
cmp
scas
cmpsb
fbld
pop
push
les
les
movsl
outsb
dec
movsl
xlat
xor
xor
imul
ja
pop
stos
inc
sti
lock
inc
add
decl
pop
ljmp
stos
rorl
jae
sbb
into
cltd
and
test
pop
popf
ss
mov
sahf
cmpsb
mov
cmpb
pushf
and
sub
xor
divb
push
mov
adc
outsl
xchg
in
dec
dec
fcmovne
sbb
or
scas
jns
jg
fadds
mov
je
insl
sub
push
push
jl
push
in
cs
ljmp
adc
dec
jns
loopne
call
jl
in
sub
in
mov
dec
and
jae
xlat
ret
jb
mov
lahf
or
ljmp
movsb
pop
data16
mov
js
pop
fidivl
nop
mov
inc
imul
push
out
inc
cmpb
scas
mov
fwait
xor
ffreep
movsl
jne
sti
cmp
addl
movsb
js
popl
push
ss
test
into
push
bound
dec
cmp
lret
mov
pusha
dec
and
sub
aad
xchg
pop
scas
lcall
in
and
shrb
test
jmp
out
mov
cli
movsb
and
mov
push
out
and
xor
xchg
push
dec
mov
xor
jle
sub
xor
adc
dec
mov
fsubrs
mov
iret
xor
jmp
cmpsb
aam
sub
push
outsl
jmp
and
add
inc
xorl
sub
into
push
pop
sub
add
in
xor
add
out
sub
loopne
mov
pop
jbe
push
jle
push
fnsave
dec
cmp
xchg
or
push
pop
adc
rcll
outsl
or
out
push
roll
add
sarb
push
inc
shrb
jne
sti
sbbb
push
hlt
stc
dec
jb
dec
and
aaa
pop
and
push
arpl
mov
jecxz
in
rclb
aaa
pop
ljmp
and
and
mov
daa
test
mov
mov
and
sbb
orl
jp
adc
out
push
or
ret
inc
das
jne
decb
mov
add
test
and
push
sub
sub
lahf
jo
sbb
lds
and
ljmp
mov
mov
test
inc
mov
roll
push
add
push
filds
test
stos
insb
stc
loope
add
fcmovnb
fs
and
pop
aad
imul
xor
aas
scas
sub
mov
rorl
mov
mov
fistl
cli
pop
jbe
scas
rcll
addl
fcoms
adc
jnp
or
xchg
pop
mov
fsubrs
test
sbb
pop
popf
dec
and
in
push
dec
shll
cmp
or
mov
nop
pop
mov
mov
repnz
xor
push
jne
sub
das
loopne
repnz
faddl
frndint
xor
sbb
in
das
andb
std
adc
xorl
test
mov
fs
sub
add
pop
xchg
shrb
ja
push
movsl
test
dec
jecxz
mov
pop
xor
jg
lcall
cmp
or
pusha
mov
add
dec
lock
jns
xlat
mov
ror
sbbb
js
mov
sti
pop
dec
pop
xor
popa
les
jno
mov
adc
inc
sbb
lds
xchg
lods
stos
insl
ret
flds
pop
pop
ja
popf
aaa
xchg
cld
mov
in
xchg
sbbb
cli
pop
cmpsl
rolb
arpl
cli
jmp
data16
je
cmp
faddl
push
movsb
push
jmp
mov
hlt
fcomip
aad
mov
fbld
repnz
cmp
inc
jne
shlb
dec
fcoml
mov
mov
xor
pop
adc
std
notb
mov
mov
or
jp
pop
push
int3
xchg
mov
dec
xor
xchg
push
fldl
fisttpll
cmp
lods
fadd
inc
and
inc
cs
add
clc
fwait
adc
jl
push
cmp
adcl
orl
sub
and
lcall
cs
jno
ja
mov
fstpt
inc
sub
xchg
dec
les
lods
sbb
or
outsb
sub
and
lds
sbb
movsb
xor
jg
push
add
movsl
mov
xchg
ds
mov
loopne
stos
pop
jmp
inc
ss
lds
xchg
fsubrl
mov
mov
xchg
pop
negl
ljmp
enter
or
and
adc
movsb
xor
ja
pop
mov
je
jg
movsb
and
mov
add
ja
lea
xor
in
push
push
rolb
stos
sub
adc
mov
sbb
aaa
lret
fiadds
sti
push
mov
std
dec
add
outsb
ja
add
sbbl
int
and
je
out
mov
pop
pop
test
mov
mov
inc
je
push
push
mov
and
lret
roll
push
and
cmp
push
mov
or
xsaves
fidivrs
lahf
mov
cmp
lret
fbld
data16
lock
incb
mov
fists
mov
pop
in
push
dec
push
inc
roll
in
dec
cld
xlat
and
push
insb
in
outsl
ror
lret
aaa
dec
jmp
add
add
dec
adc
lahf
dec
push
mov
dec
pop
xchg
inc
repnz
dec
jge
add
add
push
sbb
out
xor
data16
cmpsb
icebp
or
xcrypt-cbc
cmpsl
nop
jb
cs
lods
add
mov
sbb
sub
test
lock
mov
add
xor
loopne
outsl
and
shlb
addr16
test
mov
xor
xchg
ss
stos
lcall
push
adc
mov
mov
add
test
ja
or
shll
push
rorb
mov
movsbl
mov
and
or
outsl
sub
dec
outsb
out
jo
repnz
add
data16
jmp
test
sub
cmc
inc
dec
cmp
sub
cwtl
add
push
repz
dec
data16
std
loope
aaa
pop
mov
fs
popf
sti
js
hlt
sbb
jmp
lods
pusha
pop
gs
stc
adc
cmp
sar
shlb
sahf
cmc
dec
sub
fisubs
cmp
loope
cld
inc
cmpsl
insb
lods
mov
and
push
in
ret
or
dec
stos
fwait
adc
xchg
stos
into
mov
xlat
in
mov
push
dec
mov
enter
bound
rcr
out
mov
aad
mov
test
mov
lahf
mov
jecxz
stos
pop
es
inc
adc
outsl
push
and
lahf
loope
mov
mov
int
cmp
or
dec
pushf
scas
mov
loope
in
addb
arpl
lea
lcall
inc
inc
xchg
scas
dec
rcll
lret
lods
xchg
push
mov
cmp
ss
movsl
fwait
shll
cmp
test
push
shl
adc
pushf
jl
insb
loopew
adc
cvttps2pi
fadd
sub
push
xchg
cld
xchg
xchg
lret
lods
or
add
xchg
hlt
add
add
data16
clc
cmpsb
outsb
jae
lods
rorl
adc
or
jnp
mov
and
dec
cwtl
xor
push
aas
icebp
add
or
test
add
mov
and
in
lcall
jns
and
fdivrl
leave
adc
mov
or
ja
jno
das
int3
pop
or
and
dec
xor
ud0
add
mov
xchg
loop
lret
sub
popa
jns
sti
ljmp
sub
sub
xchg
xchg
ss
push
jno
or
ds
lods
add
pop
aaa
and
mov
in
js
jmp
and
dec
or
mov
push
int
rclb
cmp
or
push
xor
xor
fs
out
loopne
cmp
pop
or
iret
jne
int3
ds
inc
mov
pushf
sub
pop
aas
jecxz
add
push
iret
imul
cwtl
xor
roll
int3
arpl
xchg
outsl
jmp
in
ja
icebp
test
xor
nop
xor
mov
pushf
sub
xchg
or
lock
vcomisd
sbb
rcrb
fstl
or
lret
loope
imul
ds
std
or
mov
mov
out
push
in
mov
pop
jmp
in
pop
sbb
inc
fisubrs
mov
je
and
ret
mov
ja
add
pop
cmpb
subl
jg
std
add
cmp
sarl
jb
test
sti
enter
jno
sub
inc
sub
add
mov
jg
jbe
push
cli
inc
shlb
xlat
sbb
add
push
lea
insl
in
cltd
fs
cmp
mov
mov
ret
loope
repnz
shl
push
xor
push
pop
popa
or
mov
jo
in
loope
test
pop
test
fiaddl
adc
leave
aaa
push
lods
mov
inc
cmp
pop
hlt
jmp
lods
dec
gs
loope
cltd
fs
mov
pop
xor
jno
out
cmp
leave
imulb
and
or
