push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
push
call
sub
neg
sbb
inc
ret
push
mov
push
push
mov
xor
sub
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
xor
lea
mov
xor
jmp
test
jne
cmp
jle
lea
mov
sub
mov
add
roll
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
lea
call
test
je
call
jmp
xor
pop
pop
ret
push
mov
push
call
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
push
push
push
mov
push
push
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
andl
andl
sti
movl
jmp
xor
inc
ret
mov
movl
movl
cmpl
je
push
push
call
cmp
jne
mov
mov
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
push
call
cmp
jne
movl
jmp
andl
cmpl
je
push
push
push
call
mov
mov
xor
push
pop
div
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
push
call
push
call
mov
mov
add
add
mov
mov
mov
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
push
push
pushl
push
call
add
mov
mov
push
call
leave
ret
shlb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
neg
jmp
or
or
or
dec
cmp
adc
xor
lods
mov
faddl
bound
inc
and
aas
mov
push
xchg
sub
aam
or
fistps
and
js
dec
mov
lcall
push
loop
std
sbb
jp
outsb
sub
sub
xchg
sti
lods
lock
mov
dec
dec
add
lock
loop
in
mov
dec
mov
sbb
jge
dec
loope
pop
or
lahf
inc
cld
mov
jle
lds
xor
dec
mov
lcall
add
test
xchg
sub
stos
and
fiaddl
mov
ja
bound
add
adc
fadds
xchg
xor
cld
fdivrs
subl
lahf
jne
movsb
lahf
sbb
jle
enter
and
js
mov
call
cltd
loope
ljmp
stos
sbb
xor
mov
out
inc
or
pop
and
js
mov
and
jg
adc
xlat
divl
loope,pt
xchg
inc
xor
rcrb
pop
fnsave
mov
into
imul
pusha
inc
or
push
cmp
into
xlat
cmpsb
loope
scas
mov
clc
xchg
xchg
push
mov
das
in
adc
repz
dec
mov
fistpll
cltd
cmc
fstl
hlt
xchg
orb
jmp
je
push
int3
cli
jo
add
cli
push
push
push
xchg
mov
pop
or
enter
cmp
icebp
jmp
xchg
adcb
dec
stc
popa
js
sbb
pop
fwait
std
in
inc
and
mov
mov
or
out
mov
pusha
push
into
jne
or
stos
scas
iret
pop
hlt
clc
mov
and
inc
sarb
xor
xchg
inc
inc
lock
loope
pop
or
pop
sbb
pushf
push
adcb
or
fucom
cmp
in
mov
or
aam
arpl
lods
into
cmp
loop
mov
sub
add
ds
mov
push
push
fs
or
jle
cwtl
rcr
xor
das
fbstp
es
xchg
lahf
ljmp
mov
add
sbb
jne
sti
leave
mov
popa
sbb
mov
xchg
sbb
mov
out
jmp
jo
lock
dec
je
jmp
in
cmpsb
and
mov
pop
test
loopne
mov
sub
push
popf
xchg
pop
icebp
cmp
push
je
push
lods
fisttps
cmp
lret
es
inc
add
imul
push
mov
pop
enter
or
int
out
inc
push
lret
cli
cmp
lret
rclb
pop
in
imul
pop
inc
pop
sub
xchg
in
push
int3
in
std
push
in
test
fucomip
pop
jb
lock
and
fnstsw
push
aad
jns
cs
sub
and
insb
fucomp
int
out
add
test
pushf
pop
sub
jmp
mov
adcb
call
push
fldenv
int
dec
cmp
fmuls
ret
xor
fsts
fcoms
sub
push
mov
lock
mov
loop
adc
fimuls
out
loopne
mov
add
jg
xchg
cmova
and
jo
pop
xchg
lcall
mov
fiaddl
je
shrb
mov
pop
sub
lock
jg
inc
inc
jg
and
sahf
ficompl
cmp
xor
mov
test
clc
xor
pop
out
andb
pop
fwait
xor
dec
mov
mov
rcrb
fadds
loope
lock
cmp
outsl
ret
mov
shll
addr16
and
mov
sbb
xor
mov
and
aad
arpl
xor
add
cmp
ds
adc
fs
pop
jmp
and
pop
push
pop
loopne
xor
loopne
push
xchg
mov
es
xchg
or
loop
and
jnp
mov
pop
inc
add
jb
cli
jmp
or
mov
adc
in
aas
aaa
mov
ror
lret
sub
cmp
sti
fldt
mov
push
std
ds
lret
mov
repnz
test
insb
jbe
leave
jb
fisubrs
pushw
push
adc
stos
out
jge
sub
andb
push
out
nop
sub
sbbl
xlat
mov
pop
sub
out
pusha
fs
or
mov
lods
mov
xchg
and
leave
imul
push
mov
icebp
dec
add
pop
mov
lock
cmp
xlat
push
les
fistpl
mov
mov
testb
clc
repz
adc
mov
or
or
ds
dec
std
jge
jb
int3
sub
sbb
aas
fadds
lods
fstl
popf
mov
aas
or
sub
fcmovb
mov
pop
mov
jecxz
and
loopne
rorb
pop
pop
inc
xor
inc
outsl
xorb
fdivs
add
push
xor
mov
orl
dec
popa
xor
or
loopne
scas
ja
popf
pop
rcrb
es
cmp
adc
stos
sub
pop
js
push
into
xchg
stos
outsl
loopne
inc
or
loop
rcrb
jl
aaa
mov
and
cmp
rcrl
sbb
and
or
inc
pop
je
mov
mov
jle
jmp
mov
push
and
sbb
add
imul
xchg
into
mov
clc
ljmp
xor
repz
inc
lcall
movsb
jle
lock
je
dec
movsl
ret
push
jmp
movsb
xchg
sub
insl
cmp
int
push
adc
scas
shrl
loop
xor
fcmovne
xchg
jmp
cltd
popa
and
sahf
inc
loop
shr
sbb
bound
cmc
in
aad
lea
shrl
aas
xor
rorb
mov
in
stos
lahf
out
scas
fiaddl
mov
mov
push
and
out
add
and
or
fdivrs
mov
push
psllw
fisubl
xchg
repz
xchg
cs
adc
xor
adc
in
push
inc
test
inc
int3
push
xor
mov
adc
mov
sarb
and
jge
movsl
fcomp
jno
addl
xor
inc
jmp
and
dec
pop
pop
sub
lret
int
pop
mov
cmp
sbb
xchg
loope
or
mov
pop
idivb
stos
into
xchg
aas
mov
mov
cmp
fwait
adc
pushf
shl
xchg
popf
mov
inc
pop
inc
in
ret
scas
adc
sub
int
mov
xorl
jbe
iret
mov
not
mov
adc
mov
cmpsb
mov
adc
fcomps
sahf
leave
inc
not
pop
ret
shll
fwait
push
iret
lods
and
xor
fnstsw
pushf
into
loop
or
dec
mov
mov
cmp
xchg
lcall
iret
add
clc
lock
scas
adc
cmc
and
sub
cmp
inc
jb
push
xchg
or
popa
lea
sub
lods
cli
mov
fiadds
js
sahf
aam
cwtl
mov
in
fwait
pop
sbb
aam
icebp
jge
lock
out
lahf
hlt
out
mov
inc
or
nop
dec
sbb
gs
mov
xchg
dec
stc
out
mov
jbe
and
decb
sub
dec
mov
xor
jns
pop
mov
or
lret
repnz
lds
stos
xchg
sub
repnz
mov
and
rolb
fdivrs
pop
cli
aaa
push
imul
mov
xchg
xchg
mov
insl
xchg
out
pop
aas
pushf
xor
test
mov
pop
jb
arpl
pusha
movsb
inc
sbb
sbb
pop
pop
add
push
cmpsb
add
outsb
sbb
push
lret
dec
mov
inc
lea
nop
mov
push
jae
xchg
mov
std
loop
inc
inc
lret
mov
fildll
jb
adc
mov
jo
mov
stos
jecxz
and
loope
in
pop
pusha
mov
into
push
dec
test
cwtl
mov
sub
cmp
inc
add
cli
xor
rclb
sub
cwtl
jge
push
cmp
adc
xchg
dec
inc
jne
pop
mov
add
add
notl
xchg
push
mov
and
xchg
shlb
xchg
push
dec
inc
cmp
or
dec
xchg
push
xchg
cmp
sbb
jnp
inc
rcrb
jl
pop
jbe
sahf
pop
in
add
pusha
inc
in
mov
jle
and
pop
sub
xchg
fadds
cld
sub
fistpll
lock
call
imul
loop
sub
inc
pop
adc
notl
in
pop
es
adc
push
cmpsb
sub
hlt
add
and
ja
pop
in
ljmp
jmp
inc
dec
js
cmpsl
and
das
orb
sbb
xchg
stc
dec
lods
fidivrl
adc
mov
sub
pop
sbb
lret
sub
out
test
adcb
lcall
sub
mov
mov
and
fidivl
mov
dec
test
jle
stc
xchg
sub
push
mov
aam
mov
cmpsl
xor
dec
dec
push
lea
pop
sbb
out
call
cmpsb
lcall
xchg
xchg
lock
mov
mov
sub
lds
jg
and
pop
mov
mov
loopne
mov
jl,pn
cmpsl
xchg
popf
scas
sbb
mov
cwtl
cltd
and
loop
sbbl
fwait
test
xor
pop
inc
icebp
mov
lds
xchg
sbb
cmp
mov
ds
repz
in
xor
jmp
dec
test
loope
nop
xor
mov
popa
lahf
test
xchg
imul
mov
jge
xchg
pop
std
clc
xchg
rol
js
popf
out
mov
pop
cmp
sti
or
mov
arpl
push
aas
or
sahf
sub
stos
or
dec
add
hlt
inc
leave
outsb
loope
xchg
xchg
sbb
ffreep
lret
xchg
cmpsb
aaa
add
add
push
lds
fsubs
cmpsb
xchg
lods
ficomps
stos
stc
test
popa
dec
jge
popa
adc
cmp
bound
addr16
ss
sbb
bound
xchg
insl
add
cmp
int
dec
insl
ds
mov
int3
adc
sti
pop
out
pop
les
push
or
xchg
push
add
mov
cmp
jne
xchg
sbb
ljmp
or
jbe
dec
pop
jae
push
jno
lock
or
movsl
or
or
sbb
call
mov
xchg
or
aaa
loopne
cmp
xchg
iret
cmpsl
test
sarb
mov
mov
mov
jae
jbe
cmp
lret
icebp
or
and
cwtl
lcall
sbb
outsb
mov
mov
xchg
pusha
test
push
xchg
scas
sbb
pop
pop
ds
outsb
adc
ds
cli
dec
cmp
fildl
pop
lret
mov
stos
cmpsb
lcall
xchg
jno
sub
es
mov
push
out
xchg
daa
pop
mov
xchg
scas
dec
mov
cwtl
mov
bound
inc
xchg
adc
into
push
nop
jl
ffreep
dec
xchg
xor
pmulhuw
inc
jb
xchg
push
lds
dec
sub
lcall
adc
mov
sub
shrl
add
mov
dec
or
cwtl
inc
mov
inc
xor
inc
cmpsb
fldl
in
xchg
inc
jns
and
xchg
gs
push
xchg
popf
or
push
out
add
cmp
pop
dec
ss
sbb
sbb
lret
push
sbb
sbb
in
js
repz
dec
or
push
dec
repnz
bound
test
int3
stos
imul
jle
ljmp
fstl
addb
mov
sbb
jbe
xchg
ficoms
mov
lds
xchg
jle
cmp
jp
testb
push
cmpsl
data16
outsl
dec
ret
or
insl
mov
loopne
scas
rep
movl
inc
cmp
mov
jmp
jnp
psubd
aas
fistpll
addr16
outsl
test
add
push
fistps
aad
popa
clc
dec
mov
pop
and
fucomp
imul
aaa
lds
out
stc
inc
lds
and
clc
cmp
rcrl
sub
xlat
test
adc
shrl
mov
in
mov
das
fiadds
cmp
and
xor
cs
test
mov
test
mov
cmp
popf
mov
in
push
js
mov
add
push
nop
inc
fwait
and
loope
out
jmp
mov
orl
push
out
mov
jb
sti
push
or
sbb
jle
das
cs
xor
lods
lock
sbb
lret
inc
inc
mov
inc
addl
scas
push
xchg
push
adc
js
cli
fisubrs
sbb
jb
out
dec
popa
add
cmc
adc
jge
mov
repz
js
popa
sub
xchg
xor
push
test
xchg
cmovae
xchg
rolb
jmp
ljmp
mov
jns
dec
xchg
lahf
inc
bound
sbb
add
sub
mov
loope
or
lock
xorl
sbb
jmpw
jp
sti
fidivs
mov
movsl
aam
test
das
push
cmp
call
add
mov
rcl
mov
mov
cmp
adc
test
lahf
daa
add
or
in
outsl
nop
push
adc
xor
mov
jmp
add
jnp
enter
adc
push
xor
imul
sub
je
jb
xadd
mov
xchg
fsubs
or
xor
pop
adc
push
dec
adc
subb
xor
cmp
mov
cli
inc
pop
adc
sub
sarl
or
push
sahf
hlt
add
jbe
pushf
mov
jne
insl
pop
sub
pop
inc
adc
je
mov
out
addr16
push
xchg
shlb
add
mov
pop
arpl
rolb
pusha
cmc
out
fsts
mov
mov
sbbb
jne
mov
insl
pop
mov
pushf
add
rsqrtps
stc
mov
jg
mov
inc
mov
sbb
sbb
mov
sub
repnz
pushf
adc
and
mov
jnp
sysenter
xchg
xchg
jns
sbb
mov
cmpsb
ja
jp
xlat
outsl
mov
push
setge
fisttps
push
out
mov
inc
push
sub
cli
jns
subl
jmp
inc
stos
push
cld
insb
sbb
stos
outsb
sub
push
push
outsl
int
test
stos
pop
mov
mov
outsb
mov
cmp
popf
addr16
iret
ds
mov
mov
sbb
adc
inc
mov
and
insl
push
dec
aas
inc
cs
and
daa
pop
outsb
mov
mov
lods
add
fsubrs
dec
pop
push
or
push
leave
js
dec
jo
hlt
filds
and
xor
fisubrs
inc
in
jge
push
jmp
pop
inc
nop
add
jmp
adc
inc
jl
and
xchg
das
mov
jl
dec
jae
adc
push
mov
and
dec
int3
aad
cmp
pop
push
pop
mov
ror
xor
popa
pop
mov
pop
and
push
popa
int3
dec
pop
sub
outsb
xor
mov
dec
movsl
repnz
std
outsl
add
mov
fucomi
icebp
test
jae
clc
or
dec
xor
dec
pop
lds
jnp
sbb
xor
jge
cltd
push
imul
inc
cmpsb
cmpsb
sti
push
cmp
cltd
pop
mov
pop
inc
push
jne
push
xor
pusha
arpl
xor
mov
xchg
repz
pop
jb
test
xchg
pop
imul
es
xchg
repz
fwait
movsb
in
fnsave
data16
mov
dec
xchg
js
push
scas
jne
mov
inc
out
dec
mov
or
xchg
sbb
cmpsl
enter
sbbl
sub
addr16
fcoml
mov
or
mov
shr
sub
or
ss
addl
dec
and
cwtl
loope
inc
mov
lcall
daa
adc
lahf
jecxz
fldt
mov
ljmp
ja
addb
mull
sbb
add
xchg
mov
testl
ljmp
fwait
sub
jle
gs
dec
stc
push
cld
movsl
jne
jnp
and
fcoml
loope
jnp
ret
lods
mov
mov
push
jmp
roll
mov
mov
add
sbb
outsl
pop
inc
aad
addl
lcall
dec
cs
and
out
push
dec
cmp
repz
xchg
cmpsb
loop
inc
fistpl
dec
mov
enter
sub
mov
push
inc
repz
inc
cmp
lret
cmc
sbb
ds
aaa
mov
pusha
std
pushf
jl
pushf
gs
filds
mov
nop
js
shll
sahf
or
cmp
cmpb
mov
push
lods
push
fstpt
push
cmpsb
movsl
inc
fsincos
dec
xor
xchg
es
sub
adcb
push
jns
aad
and
xlat
adc
push
fdivrs
mov
insb
fs
xor
daa
fidivrs
ja
push
pop
mov
lods
iret
or
outsl
sub
cmp
dec
or
test
push
into
adc
xchg
pop
sub
cltd
add
out
inc
mov
dec
xorb
call
fdivrs
pop
mov
lock
in
mov
aas
enter
cmpb
in
jns
testb
mov
push
idivl
push
and
or
sub
adc
xchg
sub
sub
sub
sub
push
popf
in
dec
pop
ret
push
in
sub
int
sbb
mov
xchg
loopne
jmp
fstps
mov
sbb
cmp
sbb
mov
sub
std
int3
pop
loop
dec
push
inc
sbb
push
aad
lret
mov
movsb
fucomp
xor
fwait
cld
push
mov
test
and
xor
xchg
sahf
pop
int3
jmp
movsl
daa
add
inc
xorl
in
mov
inc
or
lret
stos
lods
rcrl
lods
mov
hlt
hlt
cmp
mov
cmc
cmp
test
push
and
add
pushf
push
fistpll
lcall
xchg
aaa
add
sub
dec
insl
int3
inc
push
clc
inc
mov
mov
jns
xor
test
call
mov
dec
gs
insl
insb
inc
jns
add
out
mov
in
xchg
jns
push
ja,pn
cmp
inc
dec
add
sti
push
cmpb
test
daa
in
or
icebp
sub
pop
psubb
cmpsl
divb
leave
cwtl
shll
loop
sbb
add
add
jo
lea
ja
mov
je
xchg
xor
sub
push
loope
loopne
xchg
stos
xchg
daa
and
imul
jecxz
jbe
cmp
jmp
nop
sbb
jp
nop
or
jp
js
and
mov
divb
dec
in
pop
sub
cmp
daa
push
mov
add
fnstcw
imul
lock
in
xchg
fnstenv
nop
nop
sbb
adc
pop
add
or
popf
popa
repz
loopne
pop
cmpb
mov
jbe
js
add
loop
scas
test
xchg
sub
mov
mov
xchg
inc
decb
pop
xor
ret
xor
mov
addl
inc
jp
mov
fildl
test
ss
mov
xchg
xchg
int3
inc
inc
add
sti
test
and
aaa
lock
cwtl
mov
in
push
lea
and
daa
cmp
push
or
and
loope
pop
outsl
jp
cltd
mov
scas
adc
push
lods
hlt
repnz
shl
add
mov
cmp
cmc
ja
add
sarl
mov
mov
add
test
adc
or
jno
mov
xchg
xor
test
mov
ljmp
je
pop
sbb
add
rep
add
ss
shrl
and
punpckhwd
shll
dec
jg
mov
dec
mov
or
mov
stos
push
jmp
pop
push
loope
mov
push
shll
mov
adcb
xchg
mov
lea
jmp
push
xor
aad
addr16
dec
mov
sbbb
inc
ret
ljmp
push
pop
pop
roll
xchg
fcmovnb
jle
sbb
adc
xor
jnp
xor
decb
dec
filds
ljmp
xor
adc
push
fisttps
mov
shll
mov
xor
repz
or
jge
cmp
bound
aam
fsubrl
and
sub
jbe
jns
adc
dec
aad
out
adc
aam
fcomps
out
lcall
out
mov
adcl
cld
mov
xor
cmp
movsb
or
cld
movsb
imul
adc
sarl
fadd
mov
xchg
cmpsl
cltd
mov
mov
mov
iret
stos
inc
test
xor
out
xor
movsl
imul
lret
sbb
pop
adc
imul
sbb
std
push
sub
and
or
outsl
mov
push
ficompl
add
out
mov
test
pop
sub
xchg
add
in
repz
inc
sub
in
bndstx
adc
mov
test
jp
int3
jno
idivl
adc
in
inc
or
movsb
or
sarb
add
xchg
xor
imul
push
stos
adc
mov
push
mov
mov
fdivr
lds
nop
jmp
ds
aaa
icebp
mov
jecxz
jnp
adc
inc
es
dec
scas
stc
sbb
jno
pusha
mov
iret
stc
ret
shr
jne
mov
test
popf
jns
shl
stos
sub
jg
push
adc
mov
push
popf
mov
push
loope
int3
adc
in
push
out
jl
lea
pusha
aas
push
xor
bound
inc
mov
cmp
push
leave
sbb
sarb
mov
cmp
sub
lret
xchg
dec
xchg
sahf
movsl
push
adc
mov
cli
in
adc
lods
mov
sar
cmp
mov
cmpsl
cmp
ja
xchg
cmc
inc
jmp
fs
cmpsb
pop
shlb
shlb
pop
sub
push
in
mov
ljmp
pop
out
mov
add
das
adc
mov
xor
ss
push
adc
sub
cmp
inc
add
xchg
push
xchg
out
shll
pusha
pop
push
test
mov
or
pop
dec
sti
testl
mov
sub
pop
icebp
les
and
jmp
fnsave
ss
push
imul
pop
jg
imul
dec
pop
shll
fwait
setge
cmpsl
ja
xchg
mulb
and
mov
jmp
adc
adc
xchg
mov
das
imul
lock
cld
lods
pop
push
lcall
sbb
adc
jnp
loope
lods
mov
xchg
mov
cmc
add
add
pop
pop
dec
data16
cli
mov
lret
inc
in
cli
adc
fisubrs
inc
iret
das
lods
xchg
rol
movsl
adc
inc
pop
pop
jno
ss
lods
test
push
mov
sbb
mov
jmp
xchg
pop
push
inc
test
rorb
imul
js
mov
sbb
cmp
and
jno
dec
movsl
sub
arpl
xor
fnstsw
popa
jbe
pop
fnstsw
lock
jno
int3
inc
inc
out
sti
jp
stc
add
adc
in
stos
xor
addl
loope
sbb
adc
mov
pushf
cmp
ret
arpl
push
jnp
data16
jnp
xor
dec
outsl
mov
push
sbb
xchg
cmp
cmpb
cld
nop
xor
dec
lahf
lret
push
xlat
lret
scas
rolb
imull
pop
dec
out
pushf
sub
add
or
adc
aaa
inc
cmova
adcb
push
fnstenv
sub
jmp
mov
pop
je
mov
in
xchg
enter
cmp
ret
or
cmp
or
inc
mov
push
or
jne
in
sub
or
ja
sub
xchg
leave
dec
adc
fdivrl
add
sti
sbb
xor
stc
push
mov
bound
pop
scas
adc
mov
sbb
cmp
je
test
dec
arpl
ja
gs
mov
jge
push
mov
adc
pusha
pop
dec
pop
in
cltd
cld
or
push
mov
mov
leave
outsb
mov
jno
xor
jns
jo
decl
dec
lds
push
notl
cmpl
movb
loopne
icebp
inc
push
sub
push
lret
cwtl
rol
gs
cmpsb
adc
inc
cmp
fsubrl
rcrb
adc
jo
pop
push
repz
sbb
test
push
rcr
cmp
fs
inc
jne
mov
scas
and
adc
hlt
inc
lock
adc
sti
pop
pop
mov
cmc
dec
push
xor
mov
inc
jb
pusha
aaa
mov
loop
rcr
mov
adc
inc
lahf
mov
mov
push
outsl
stos
xor
repnz
mov
mov
movsb
int
out
ljmp
stos
mov
cmp
cmp
test
inc
imul
stc
sbb
mov
fsubrs
pop
daa
rcrl
push
and
xlat
jle
cmc
hlt
and
pop
out
dec
sbb
insb
adc
jb
js
movsb
sbb
int3
push
adc
clc
sub
dec
iret
insb
clc
addr16
movb
push
inc
stc
add
push
xchg
mov
jp
test
mov
imul
ljmp
or
imul
leave
xchg
shll
push
std
mov
add
addr16
jmp
jecxz
mov
int
daa
inc
xchg
pop
aaa
mov
pop
adc
push
ffree
sbb
xor
outsl
push
imull
pop
jnp
xor
dec
mov
arpl
mov
sbb
gs
xchg
mov
insb
xchg
roll
push
mov
inc
mov
pop
xor
popa
lcall
adcl
inc
adc
cld
xor
clc
in
dec
fldcw
push
sbb
sub
popl
lock
inc
hlt
in
xchg
add
sub
inc
mov
xchg
fildll
movsl
bound
mov
loope
punpckhdq
int
in
xor
repz
cmpb
inc
and
sti
out
mov
and
stos
test
outsl
add
fildll
push
aam
sbb
cld
sub
shl
fcmovu
jno
jbe
and
jnp
cmpsl
inc
test
out
shrl
push
data16
inc
lds
lret
nop
cmp
xor
jns
sub
mov
int3
pop
movsl
lret
dec
test
aas
cmp
sub
pop
mov
jno
pushf
sbb
or
xor
test
mov
push
mov
inc
inc
add
negl
pop
cmp
push
dec
adc
mov
shrl
movsl
shlb
cmp
xchg
les
inc
mov
aaa
cld
or
fisubrl
mov
sbb
mov
roll
and
add
gs
addl
cltd
xchg
push
pop
aad
and
push
or
mov
jo
ja
pop
mov
mov
mov
or
pop
movsl
jge
ljmp
xchg
dec
or
cld
mull
adc
mov
xor
pop
fdivr
push
mov
push
les
inc
repz
sub
addr16
adc
push
or
add
add
fsubl
fdivrs
xor
sub
pop
imul
cmp
hlt
pop
int3
cmpsl
mov
cmp
mov
scas
sbb
or
jp
jno
rorl
and
popa
pop
or
loopew
fdivl
fcomi
mov
xchg
lock
push
sbb
mov
jecxz
idiv
and
cmp
lret
jmp
cltd
sbb
mov
lcall
dec
fs
adcb
scas
das
loopw
cmp
outsb
scas
ljmp
aas
loop
stos
push
and
pop
cmp
out
scas
push
lea
dec
jle
into
jno
mov
loope
push
push
and
sar
or
lea
or
mov
inc
stos
cmp
jle
sub
or
pop
stos
jb
call
movsl
mov
fnsave
sahf
push
dec
notb
pop
jl
push
mov
decl
lods
pop
hlt
mov
aaa
mov
sbb
or
add
push
jb
mov
jp
push
repz
mov
jp
pop
shl
mov
jne
insb
or
sub
rcr
lock
pop
jbe
movsb
fsubrp
clc
mov
sbb
fsubl
dec
pop
pop
lods
data16
lods
mov
adc
es
jbe
dec
mov
leave
out
xchg
dec
push
xor
xor
orl
sbb
xchg
addb
push
inc
aaa
push
test
mov
nop
adc
into
sub
es
fcomps
mov
mov
scas
leave
popf
cmp
in
dec
add
push
xchg
jo
outsl
cwtl
mov
mov
js
subb
int
jge
and
push
sbb
push
fldt
or
inc
cmpsl
repz
add
xchg
xor
mov
mov
jg
jecxz
mov
pushf
xor
rcrl
inc
inc
pop
ds
xchg
inc
adc
sbb
stc
jno
xor
in
es
pmaxub
testl
xor
cmp
lret
imul
mov
xor
pop
pop
movsl
rorb
imul
nop
dec
pop
and
or
imul
shl
ds
sub
js
movsl
lahf
imul
ret
cmp
and
adc
arpl
sub
push
adc
xor
sbb
dec
and
stos
dec
add
or
mov
sbb
das
pop
into
push
shrl
call
cmp
loopne
and
ret
xchg
push
sub
cmp
jl
sbb
inc
lods
inc
rclb
into
push
xchg
push
aad
and
mov
out
sub
mov
xchg
add
mov
add
les
dec
sbb
mov
push
mov
repz
xchg
lds
cmc
shl
xor
sbbb
movsb
aad
test
and
dec
jle
xchg
lret
lret
cmp
dec
or
push
shlb
add
std
xlat
sub
or
pushf
dec
jmp
lret
cwtl
fisubl
jae
fsubr
fwait
lcall
pop
cmp
mov
dec
pusha
xchg
lods
sbb
test
dec
scas
shll
mov
jbe
aam
mov
jb
cltd
push
aad
adc
cmp
cwtl
jne
je
xor
mov
dec
in
add
lds
call
fsubrs
mov
negl
push
ret
sub
push
add
sub
fdivl
push
clc
daa
out
mov
inc
jns
add
push
and
std
xlat
sub
movsl
cmc
mov
jmp
xor
mov
pop
cmp
inc
jb
pop
or
sub
int3
mov
lods
pop
dec
repnz
mov
inc
mov
push
movups
test
adc
es
imul
push
into
add
add
mov
loop
ficoms
sbbl
pop
sub
data16
movb
mov
inc
flds
jns
das
mov
xchg
into
mov
shlb
maxps
adc
mov
pop
mov
and
mov
leave
mov
inc
and
jnp
mov
andb
addr16
mov
xchg
cmpsb
mov
jno
add
inc
xor
mov
addr16
sub
rcll
out
js
push
mov
cmp
sbb
ret
ss
outsl
mov
push
movsb
loop
xor
pminsw
movsl
pusha
sbb
sti
xchg
or
cmp
add
out
push
mov
fwait
cmp
idivb
rorb
push
dec
test
mov
int
cmp
data16
or
pop
pop
sbb
jo
test
shll
adc
pop
mov
iret
push
mov
cmpsl
sahf
insb
xchg
loopne
xor
pushf
xorl
aam
clc
out
inc
movsb
pop
push
mov
ljmp
or
sbb
mov
call
mov
mov
inc
mov
fidivrs
sbb
cmp
lahf
sbb
stos
insb
xor
nop
mov
jno
adc
push
sbb
mov
clc
push
jge
push
fwait
ss
imul
mov
ljmp
xor
sbb
dec
in
lods
negl
pop
mov
les
add
mov
mov
mov
push
xchg
xchg
adc
cmp
jmp
orb
rcll
ds
out
mov
pop
call
dec
ficomps
popa
out
pop
fbstp
sbb
out
mov
stc
jp
sub
int
lahf
in
das
cs
ret
fisttps
stc
xor
shl
roll
sbb
jae
pop
inc
and
fisubs
xor
mov
cwtl
sub
into
lea
dec
jecxz
mov
cltd
jge
scas
push
call
jno
xor
mov
xchg
adc
push
rcl
shr
iret
loope
scas
sbb
lock
icebp
and
into
pusha
mov
mov
and
or
mov
andb
pop
jo
cmp
stos
push
iret
es
xchg
fs
and
and
jae
ret
int
mov
xor
jns
lock
out
mov
mov
adc
sti
fsubl
rcrl
add
mov
mov
or
mov
pushf
push
inc
jecxz
repnz
stos
sub
in
sbbb
cltd
xor
mov
movsl
rcr
dec
and
nop
icebp
or
push
insl
imul
xchg
jecxz
sbb
mov
mov
ret
lods
cld
and
push
js
mov
int
cmc
mov
push
mov
aas
cwtl
jmp
in
ja
fidivrl
clc
loopne
cmp
cs
loop
in
inc
pop
sub
pop
pop
mov
icebp
cmc
push
mov
mov
mov
jg
push
aaa
push
xor
addr16
xchg
dec
lods
xchg
pusha
inc
ja
mov
or
insl
add
sbb
shl
mov
outsl
cmp
pop
adcl
adc
mov
out
inc
lods
adc
sbb
data16
addr16
mov
sahf
shlb
add
or
push
addl
xchg
rorb
add
int3
push
shrb
pop
sub
xor
adc
sub
and
imul
lret
xor
inc
enter
jmp
test
loop
jp
mov
inc
std
adc
int3
mov
lcall
cltd
push
sub
xchg
sbb
repz
lret
enter
int3
inc
xchg
xchg
fisubs
ret
imul
or
sub
and
andb
shll
aad
sub
pop
mov
cmp
cmp
cli
jecxz
inc
sub
sub
repnz
ljmp
fwait
dec
jge
je
icebp
ja
sub
ds
xchg
gs
adc
nop
mov
pop
dec
cmp
popf
sbb
sub
jge
outsb
and
fcomps
jg
pushf
inc
pusha
xor
and
cmp
ss
ljmp
inc
pop
fisttpl
pop
sbb
mov
pop
xchg
dec
xchg
push
cmp
cmp
mov
jne
sti
clc
aas
adcb
addl
enter
int
dec
hlt
xlat
cmpsl
mov
lret
inc
or
pop
ja
inc
call
pop
cmc
pop
add
push
push
lock
mov
in
stos
dec
aad
adc
add
add
aam
push
and
mov
jle
in
jecxz
insb
dec
xor
loop
dec
inc
les
call
or
insb
sub
mov
mov
fildll
subl
push
imul
mov
mov
lcall
xor
cmp
pop
rcll
xchg
or
add
cmp
pop
jo
and
xchg
call
or
inc
mov
or
ret
sbb
pop
sbb
mov
sub
mov
jecxz
sub
pop
insb
mov
out
loope
lret
xor
push
aas
mov
xor
lcall
test
in
xor
fwait
add
mov
xlat
xchg
or
xorb
mov
mov
into
fidivrl
in
pop
inc
mov
test
jl
pushf
aad
mov
mov
mov
mov
mov
push
mov
js
cmp
push
cmp
adc
jno
sbb
and
test
fimuls
mov
mov
cmpsb
test
into
add
rcrl
mov
fistpl
push
cmp
jmp
sbb
or
pushf
fiadds
out
inc
lret
js
inc
aam
push
gs
jno
mov
insl
xchg
js
jb
pop
xchg
or
mov
sub
outsl
xchg
aas
sub
add
mov
lcall
dec
in
in
push
push
sbb
out
lret
mov
xor
adc
pop
xor
pop
sbb
lcall
mov
pop
sbbl
mov
shll
movsl
jnp
and
or
cs
mov
push
in
xchg
cld
and
insl
lret
hlt
mov
mov
stc
or
inc
in
pop
loope
xor
sbb
mov
mov
fstl
add
dec
nop
iret
push
or
cwtl
mov
pop
adc
sub
ja
inc
popa
pop
pushf
push
xchg
dec
mov
adc
and
out
xor
or
aam
sub
push
pop
pop
loop
mov
mov
lock
adc
enter
data16
or
pop
divl
pop
jp
imulb
incb
and
dec
mov
dec
test
sub
test
test
shll
and
push
sbb
pop
test
push
imul
cli
xor
pop
arpl
std
jae
push
sbb
dec
popf
pop
push
xchg
fidivs
inc
or
lcall
das
stos
mov
scas
jns
or
sbb
stc
mov
mov
divl
xor
scas
jns
pushl
pop
gs
test
push
xorb
jecxz
lds
test
or
test
jno
lcall
xor
push
addr16
mov
outsb
push
scas
mov
cwtl
test
xchg
cmp
jae
gs
loope
inc
adc
sub
test
stc
iret
jmp
jecxz
sub
sbb
notl
pop
das
jns
sub
stos
in
iret
fnsave
loop
out
xlat
xchg
loop
fwait
adc
jecxz
mov
cli
push
repz
adc
in
fwait
lahf
dec
jg
mov
xchg
jno
iret
sub
dec
loop
mov
sub
mov
ficompl
or
xchg
pop
call
xchg
fdiv
mulb
mov
xorb
cmp
push
push
out
lods
stos
xor
cwtl
das
gs
test
xchg
repnz
mov
dec
aaa
ss
mov
cmp
cmp
adc
int
shll
cld
fsubrp
mov
loope
pusha
inc
jle
sub
aad
mov
subb
ja
loop
mov
pop
stc
test
lahf
mov
cmp
sub
pop
ds
loop
fnsave
pop
jg
pop
and
arpl
sbb
mov
mov
pop
or
leave
jbe
add
imul
mov
negl
in
and
push
pop
cmp
pop
inc
pop
imul
xchg
shr
xchg
arpl
dec
mov
je
mov
jbe
push
push
push
mov
and
dec
adc
inc
xor
sahf
jl
lea
xchg
ljmp
loopne
cmp
inc
mov
cmpsl
hlt
jp
jne
sub
test
add
inc
pop
sub
cwtl
aaa
cmp
or
insb
aad
call
aad
adc
gs
xor
dec
adc
inc
arpl
and
add
pop
mov
inc
enter
xchg
lcall
mov
addr16
inc
repz
mov
xor
fildl
gs
and
mov
jbe
pushf
in
adc
negb
data16
push
aam
mov
test
cltd
test
xor
hlt
loop
cmp
adc
test
add
int
dec
or
push
mov
sbb
cmp
jmp
loopne
scas
js
lods
pusha
mov
adc
xchg
fstpl
push
inc
add
dec
cmpsb
inc
movsb
jl
loope
mov
mov
stos
jecxz
sbb
ljmp
pusha
mov
mov
insb
arpl
xor
cwtl
popf
push
jb
repz
and
enter
xchg
fbstp
pop
addr16
push
xor
xchg
ret
pop
stos
je
shlb
bound
cmp
std
jne
jl
daa
inc
icebp
stos
ljmp
pop
orl
and
mov
dec
cltd
imul
pusha
in
aas
jae
pop
fnstcw
push
add
in
sbb
xor
add
jns
lock
mov
int
insl
sub
mov
mov
dec
pop
ljmp
xchg
daa
out
mov
cmp
fisubrs
scas
ja
jmp
push
aad
lea
and
stos
test
jnp
jmp
xor
jb
cmp
js
or
in
fistps
inc
lods
adc
mov
hlt
lret
loopne
xor
inc
sbb
mov
mov
or
fldenv
mov
jns
ret
push
jle
jnp
and
movsb
sub
icebp
subl
int3
mov
add
cmp
adc
pop
jp
in
orl
inc
xor
pop
pushf
xchg
jg
gs
mov
out
xor
xchg
inc
leave
in
and
sub
sbb
je
fstsw
push
dec
xor
scas
mov
adc
sub
imul
daa
movsl
in
xchg
inc
cmp
xlat
test
push
pop
xor
xchg
in
sub
push
mov
mov
and
in
ss
dec
fs
test
inc
cmp
mov
add
or
fwait
les
scas
push
sub
dec
and
hlt
filds
fs
sub
mov
in
scas
lods
or
mov
rcl
dec
or
pop
sahf
bound
and
mov
mov
loopne
pop
test
lret
lds
test
stc
pop
push
std
pusha
jge
jg
ss
add
loope
test
call
lcall
jecxz
inc
in
insb
arpl
xor
cltd
fstpt
movsl
push
push
in
rclb
movsl
subb
push
mov
flds
sub
cltd
ds
frstor
adc
fstp
jbe
fwait
clc
shll
aaa
xchg
cmp
push
loop
aas
sub
into
imul
pop
cs
mov
xchg
inc
inc
fmul
xchg
sbb
mov
loopne
mov
fdivs
cwtl
push
push
inc
push
cmpsl
adc
fadd
fnstenv
push
jns
les
lahf
inc
push
and
mov
or
lds
sbb
lcall
mov
ret
sbb
dec
mov
ss
cmp
jmp
cmp
cmp
movsl
cmp
mov
xchg
and
xor
xlat
arpl
sub
xchg
flds
push
dec
mov
in
out
push
cld
sbb
fs
test
jecxz
mov
je
mov
xchg
movsl
mov
sub
notl
fimull
dec
ljmp
ljmp
outsl
and
cld
jno
call
test
add
xchg
dec
jl
inc
mov
sbb
enter
sbb
shl
and
out
dec
xchg
bound
test
and
cmp
scas
lds
js
xchg
imul
fidivs
nop
mov
push
lcall
je
movb
lret
adc
cmp
jecxz
xor
push
or
es
jnp
outsl
sti
or
rcll
sbb
scas
je
cmp
pop
jbe
inc
mov
popa
icebp
sub
sub
push
addr16
add
lods
inc
lret
add
outsb
aaa
sarb
push
xor
repnz
xchg
mov
lcallw
test
and
sti
cmpsl
sub
push
add
lcall
xchg
sub
xchg
jp
or
mov
and
mov
xchg
in
mov
mov
push
mov
add
pop
jb
xchg
inc
js
cs
add
mov
movsb
push
adc
push
xor
jmp
psubw
stos
inc
xor
add
mov
addr16
push
adc
xchg
adc
out
jecxz
fsubr
pop
jle
sbb
xor
inc
jno
cmp
cmp
sbb
or
bound
pushf
xchg
xchg
ss
in
add
ja
pop
mov
arpl
pop
negb
repnz
inc
ret
jge
add
sub
test
std
dec
in
inc
xchg
mov
inc
pop
in
mov
adcl
push
adc
mov
xor
negb
lea
mov
rorl
shll
loop
daa
or
aaa
sub
jp
rolb
arpl
aad
aaa
pop
jne
sbb
jg
sbb
sub
in
fmull
icebp
pop
ljmp
xchg
lock
or
pushl
in
push
mov
lock
push
in
aad
in
test
pop
movsb
dec
or
push
adcl
ljmp
test
jno
inc
scas
mov
in
mov
jbe
lcall
ret
add
jb
push
xor
mov
and
mov
out
pop
mov
mov
inc
fists
pusha
jmp
stos
dec
inc
adc
sbb
xchg
test
sub
mov
cwtl
mov
ret
inc
cmc
xchg
xchg
inc
sbb
fisubrs
lods
adc
jp
into
call
adc
push
pop
in
loop
mulb
push
adc
out
movntq
aaa
mov
mov
data16
mov
lds
mov
cmp
paddsw
add
idiv
adc
cmc
ret
sbb
out
and
repz
cmp
bound
inc
pop
movsl
sub
sbb
pop
or
sbb
add
or
stos
dec
push
add
cld
js
mov
cwtl
cmc
outsb
ds
rcrb
arpl
js
inc
cmpsl
test
call
push
cli
pop
jge
and
cs
jmp
shlb
sbb
prefetch
pop
pop
mov
bound
sarb
cmp
sbb
mov
jmp
repnz
jl
bound
dec
mov
dec
in
sub
mov
push
mov
bound
stos
gs
and
repnz
fidivl
cmpsb
loopne
imul
les
xchg
xchg
ljmp
xor
test
add
imul
fnsave
pop
mov
push
push
ljmp
push
enter
sbb
les
adc
push
test
xchg
cmp
fstl
popf
es
sbb
mov
push
lcall
pop
jb
xor
dec
arpl
push
push
mov
xchg
sbb
pop
mov
shlb
mov
dec
mov
push
dec
jns
jg
mov
adc
cmp
fs
pusha
sub
push
jne
push
lds
fbstp
rorl
cmp
or
das
js
push
leave
insb
outsl
mov
pop
pop
scas
in
inc
inc
and
dec
call
bnd
movsw
jns
and
je
hlt
loope
popf
mov
addr16
cmpsb
push
jne,pt
lea
push
fidivrl
add
ss
leave
ljmp
inc
xchg
adc
fs
add
jmp
aad
std
xchg
mulb
addr16
jbe
xchg
sbb
lods
and
and
jle
out
cld
hlt
negl
stos
cmpl
mov
insb
cs
shll
enter
mov
pop
jp
scas
inc
icebp
in
stos
int
lret
adc
xor
add
add
sbb
dec
push
xor
xor
adc
push
or
push
jns
es
xor
dec
pop
fsubl
add
sbb
loop
mov
cwtl
or
jb
sub
or
inc
or
mov
add
xor
push
lds
mov
sbb
aam
lahf
push
frstor
mov
stc
sbb
sarl
add
mov
int3
push
cmp
sub
cmp
inc
mov
and
movsb
sarb
loop
bound
jecxz
loope
iret
je
cld
cmp
mov
rcrb
sti
cmp
insb
mov
and
pop
sbb
push
adc
pop
dec
jmp
cwtl
out
enter
dec
cmc
cs
sub
int3
sbb
mov
ffreep
adc
mov
daa
ret
jg
adc
mov
jne
cmpl
add
mov
or
jo
or
jns
cmpsb
shll
add
sub
inc
sub
mov
loopne
movb
pop
ja
jge
insl
dec
mull
jb
pop
xchg
push
bnd
rcrb
mov
mov
push
testb
in
push
jno
sbb
in
mov
loop
stos
inc
jne
or
xchg
data16
mov
stos
cmc
xor
sub
mov
mov
push
insb
cld
xlat
cmp
pusha
in
xchg
xchg
not
mov
movsl
rclb
test
mov
jmp
sub
sbb
rcll
sub
dec
sbb
test
fdiv
fs
push
xchg
in
sub
xchg
stos
inc
fistpll
jmp
adc
jne
pop
lret
add
mov
xor
add
js
mov
sti
mov
dec
or
cmp
pop
sub
jns
imul
sub
mov
ss
fidivrs
subl
sbb
out
sbbb
in
sub
test
mov
mov
call
cmp
mov
leave
pusha
cmc
push
xchg
jb
push
into
test
pop
adc
sbb
mov
xchg
fcmovne
cs
popf
out
cmc
sub
out
or
mov
mov
imul
aaa
movsb
mov
pop
ljmp
xor
outsl
mov
adc
push
jp
js
lods
and
dec
jbe
out
push
rorb
insb
xchg
and
cld
cmp
dec
repnz
dec
jg
stc
cmp
push
pop
mov
iret
cli
shlb
sub
scas
pop
mov
hlt
mov
push
test
addr16
loopne
fsubrs
jle
jnp
sbb
notb
mov
sbb
es
and
dec
jbe
inc
pop
pop
cmc
scas
cmp
lods
les
xchg
inc
fstps
pop
and
lods
xchg
cmpsb
xor
imul
inc
insl
pop
mov
inc
mov
fimuls
mov
fwait
insb
fildl
sarb
or
or
and
xor
into
leave
lock
sub
ljmp
sub
cmpb
pop
push
and
xor
ja
nop
mov
mov
ret
pop
mov
cmpsb
insl
ret
xor
int3
rcl
repnz
pop
and
xor
fistps
adc
data16
mov
cli
loop
mov
mov
and
out
xor
testb
jp
pop
xor
or
arpl
push
mov
insb
fldl
call
icebp
push
aad
fldcw
test
add
rolb
mov
dec
sbb
mov
push
jecxz
idiv
repnz
sbb
rol
cmpl
mov
xlat
xor
jmp
scas
fidivrl
adc
sbb
lods
loop
inc
popa
test
pop
fildl
aas
xor
je
jbe
sub
jmp
inc
arpl
test
outsl
cmp
cli
mov
adc
ja
rolb
imul
je
iret
fpatan
ficomps
das
shlb
lret
inc
xchg
dec
pop
fninit
scas
mov
je
les
lahf
insl
add
push
out
adc
popf
inc
fcoms
and
out
xchg
mov
mov
out
leave
aam
mov
sub
popa
adc
popa
jns
xchg
sub
sti
test
mov
loop
js
hlt
and
lret
int
jbe
ss
xchg
and
sbb
fimull
xchg
dec
shll
dec
test
sbb
out
pop
push
push
push
int3
enter
ds
cmpsl
decl
sub
xchg
out
hlt
loop
sub
xor
push
mov
jmp
adc
mov
push
out
push
sbb
jns
fcomps
jno
mov
xchg
add
mov
lret
and
icebp
xor
cmp
pop
orb
adc
jns
mov
cs
aas
xor
cmc
mov
xchg
sbb
pop
and
xor
repnz
rcll
popf
lea
add
inc
addl
mov
rol
adc
in
rorl
pusha
loope
sbb
inc
in
mov
popf
hlt
fucomi
adc
push
and
je
inc
cmp
mov
jp
lods
cmp
test
jg
insl
push
sub
add
lret
xchg
fadds
pop
jl
inc
mov
subl
aad
push
or
idivl
and
dec
ljmp
mov
xor
aam
jmp
lret
lods
lcall
sub
into
push
inc
inc
popa
add
push
and
int3
idivl
lods
mov
mov
int
push
fidivrs
push
push
test
das
fwait
sbb
out
fstpt
repz
fildl
inc
testb
xor
arpl
mov
fstpl
sar
push
cmovne
mov
pop
mov
sbb
xor
push
xor
loopne
cmp
push
sahf
aaa
and
sbb
lcall
jbe
out
sbb
sbb
aam
pop
adc
ret
insl
shrl
sbb
mov
ds
repnz
in
mov
push
ss
dec
rcrb
dec
in
fcomp
int3
dec
pop
mov
inc
popa
jnp
loopne
push
lcall
sar
jle
inc
frstor
dec
rcr
inc
shrb
ss
pop
push
add
inc
or
roll
mov
cmp
imul
in
fwait
pop
iret
cltd
add
fldcw
push
mov
out
xor
dec
mov
sbb
pop
fstpt
gs
shlb
arpl
cmp
sub
push
and
push
jl
inc
add
jp
out
jno
sbb
imul
mov
lock
dec
dec
iret
push
sahf
movsb
mov
mov
arpl
push
ds
cmp
test
sub
xor
daa
jp
mov
xor
lahf
faddp
pop
jb
lret
xor
cltd
and
and
lock
in
jne
in
xchg
ret
cmpsb
shll
jmp
adc
hlt
dec
pop
shlb
push
push
mov
pop
in
and
leave
mov
rolb
push
int3
adc
outsb
sahf
pop
jae
jmp
jmp
sbb
leave
lea
imul
fsqrt
dec
movl
cmpsl
jnp
and
ds
adc
les
inc
nop
add
push
lods
cli
xchg
daa
lea
jp
cld
loopne
mov
or
mov
xor
into
cmp
cli
adc
xor
pop
scas
add
clc
movsb
pop
mov
jge
scas
sub
cmp
push
or
fmuls
jge
sbb
outsl
pop
aas
pop
ds
mov
lret
aad
mov
inc
fnsave
nop
int3
jg
arpl
push
loope
inc
pop
mov
mov
jne
inc
cmpsl
lock
dec
lock
mov
jno
call
or
or
mov
and
dec
movl
icebp
dec
xlat
testl
stos
insl
dec
ds
xchg
xor
jp
cmp
dec
adc
lock
and
lock
mov
iret
inc
rcll
popa
int3
bswap
dec
or
push
mov
es
leave
aam
clc
iret
call
push
sub
addr16
dec
stos
xor
push
cmp
sub
mov
or
addb
xchg
mov
adc
dec
out
mov
ljmp
fs
cmc
fsubrs
lret
fmull
test
add
shr
xchg
stos
mov
jecxz
dec
jo
cmp
sub
daa
popa
in
das
dec
mov
sub
add
call
sti
sbb
add
adc
xchg
push
jle
iret
and
add
sbb
mov
cltd
hlt
jno,pn
inc
push
mov
add
inc
test
cld
cmpsl
xor
cmc
inc
inc
addb
or
pop
loopne
popf
push
mov
add
pop
pop
mov
inc
push
or
nop
mov
and
xchg
push
in
mov
je
sub
es
and
ljmp
add
jbe
js
sub
or
push
pusha
je
jge
sbb
mov
sub
je
cwtl
movsl
nop
cli
ret
inc
andl
sbbb
movl
cltd
mov
lret
cmpsb
in
stc
and
mov
push
pushf
inc
ss
mov
jg
pop
lret
mov
cmp
add
cmp
pop
mov
jnp
cltd
fadd
cmp
pop
je
scas
push
test
adc
jmp
push
and
pop
cmp
xor
adc
adc
loop
lock
lods
insl
push
xor
push
test
add
xor
lea
out
jno
xchg
mov
test
mov
dec
sahf
fimuls
mov
aaa
imul
mov
movsb
jecxz
inc
and
ds
aad
jns
push
jmp
sub
stc
aad
sub
outsb
mov
mov
pop
xchg
jb
nop
fsubs
pop
jge
sbb
add
pop
xchg
mov
in
clc
pushf
mov
add
jmp
js
out
xor
lret
shlb
imulb
and
xor
pop
cmp
rorb
mov
stos
int
imulb
mov
movsb
loope
fnstcw
push
dec
out
cwtl
cmp
cmpsb
bound
sbb
mulb
aam
fsubrl
xor
push
idivl
dec
inc
xchg
lds
sub
adcb
xor
xor
sbb
rolb
orl
sti
insb
inc
aas
iret
insl
ret
mov
shrl
pop
into
adc
sub
adc
or
test
stos
xchg
xlat
aas
outsl
jnp
in
cmp
fistpll
lea
aas
stos
add
movsb
mov
out
dec
ds
aaa
iret
gs
jg
dec
pop
dec
cwtl
lahf
push
and
push
mov
adc
mov
into
push
cmpsl
push
insl
or
dec
pop
std
out
aad
adc
jns
scas
fsubrs
or
adc
sbb
push
mov
xor
mov
mov
into
mov
sbb
popf
notb
xchg
jnp
daa
add
add
pop
jmp
or
fldl
mul
out
jl
jns
sub
cmp
jb
or
jno
lock
std
int
cmp
mov
add
ret
das
adc
hlt
jle
sbb
push
addr16
dec
jl
jge
cmpsl
out
push
or
lods
test
and
ret
mov
jno
dec
data16
lods
test
fdivp
xlat
jle
test
and
inc
xor
mov
in
test
xchg
adc
mov
call
imul
adc
loope
mov
jbe
cmp
scas
sbb
pop
ret
popa
mov
insl
test
nop
cmp
lea
mov
test
add
pop
sbb
xchg
das
lcall
or
jl
xor
push
jl
dec
push
jne
jle
dec
push
mov
lret
mov
movnti
add
sti
xchg
idiv
cmp
push
aam
adc
push
lea
cltd
mov
mov
and
pop
adc
in
mov
xor
cmpsl
lds
outsb
and
push
sti
sbb
test
sub
in
jae
mov
out
or
add
lcall
inc
jmp
xchg
ret
xor
ret
or
data16
fs
fildll
pop
lcall
insb
push
cmpsl
ficoml
movsb
push
pop
mov
bound
sub
sbb
pop
mov
adc
jns
lcall
loope
out
negl
jnp
and
push
sti
push
mov
xchg
sar
mov
mov
pop
sub
nop
add
fldt
xor
jb
outsb
gs
pop
daa
and
add
xchg
cmp
dec
aaa
add
int
sbb
in
movsb
add
inc
addl
ret
cmp
cmp
rorb
stos
lcall
sub
mov
pop
loop
pop
sahf
jp
lret
lock
or
fistps
push
pop
xchg
lods
fbld
andb
push
outsl
sbb
fsubl
in
jns
mov
mov
push
push
test
out
mov
push
loop
cmp
call
pop
mov
jmp
les
inc
scas
jb
pop
push
ljmp
test
mov
cld
xchg
loop
jns
cltd
enter
popa
fistps
or
push
push
mov
sub
mov
mov
ret
or
js
cmp
loopne
in
lret
in
sbb
adc
fs
xlat
mov
fnstenv
test
sbb
xchg
insl
mov
inc
xchg
sub
je
adc
stos
fdivrl
repz
inc
pusha
cmpsl
xchg
shll
fs
subb
insb
jp
inc
xchg
inc
in
or
and
into
cld
cli
lahf
sbbb
dec
xor
out
xchg
loopne
jecxz
push
iret
mov
or
mov
xor
sbb
inc
push
lods
cmc
mov
andb
inc
pop
orl
pushf
shrl
out
sbb
mov
pop
fldenv
adc
inc
mov
xor
loop
fwait
xor
xchg
jp
add
push
inc
xor
insb
mov
cmpb
mov
imul
jno
sub
add
vpsrlw
loope
iret
rclb
jmp
inc
cld
in
xorl
sbb
jno
ljmp
imul
mov
add
das
sbb
jno
xor
call
mov
imul
xchg
lahf
xor
sbb
rolb
imul
mov
push
in
adc
fiaddl
dec
testb
xor
fs
mov
mov
lock
add
xchg
jl
push
pushf
mov
mov
mov
lret
pop
mov
mov
push
shlb
jbe
and
sbb
pop
or
cltd
int3
lea
aaa
insl
mov
adc
test
sbb
scas
sub
or
fists
mov
xor
and
pusha
dec
mov
mov
xor
vmread
insl
or
mov
lea
sbb
jnp
pop
push
jnp
cltd
es
inc
arpl
mov
jae
movsl
push
mov
sub
cmp
push
sub
dec
pop
and
mov
xchg
push
divl
mov
xchg
icebp
mov
xchg
inc
cld
inc
jge
mov
or
movsl
xor
shrb
mov
inc
jae
mov
outsl
je
pop
sbb
xlat
add
cmp
push
mov
insl
adc
pop
jbe
popa
lcall
notb
lret
in
add
ret
cmp
stos
adc
and
mov
jge
test
out
pusha
push
insb
popa
mov
and
or
xchg
mov
mov
addr16
cwtl
cmp
xor
dec
cmp
jp
mov
dec
sub
sarl
leave
mul
inc
adc
js
mov
mov
and
or
lret
xchg
xchg
xchg
cld
sub
pusha
xlat
cmpsb
repnz
inc
imull
inc
int3
adc
es
lock
jle
push
jbe
pop
rcrb
add
dec
xchg
push
push
nop
xor
leave
jo
test
daa
xchg
divl
cli
lods
ss
out
cmp
pop
mov
push
add
hlt
dec
mov
jl
loope
xchg
sbbl
push
adc
test
aam
push
jge
mov
push
push
ss
out
imul
add
bound
bound
jbe
sarl
sbb
dec
push
mov
xchg
or
ss
jmp
inc
sarl
into
lfs
jbe
cmp
xor
movsl
mov
jp
jg
leave
mov
dec
shlb
fidivs
xchg
mov
leave
js
xchg
cmp
mov
inc
mov
fwait
call
pop
les
mul
jge
lret
cmp
pop
sub
test
pop
inc
inc
pop
scas
mov
adc
rclb
pop
or
mov
enter
mov
sbb
mov
mov
inc
cmpsb
imul
fildl
sbb
cmp
test
push
xor
popf
add
sub
fiadds
xor
sub
mov
std
pop
in
pop
shl
repz
inc
inc
cltd
sub
pop
cld
cmp
jp
pop
xchg
mov
ljmp
std
pushf
stos
sarb
outsl
cmpsb
pushf
sbb
sbb
lods
loop
mov
sbb
je
and
mov
fs
xchg
mov
mov
ja
mov
call
cwtl
mov
ret
sub
dec
in
inc
fdivs
repnz
sbb
dec
dec
lock
and
xor
jne
sahf
arpl
xchg
mov
xchg
and
aam
hlt
mov
lods
sti
lret
push
jae
cmp
mov
dec
and
rcrb
pop
stos
xor
out
add
xchg
xor
stc
cli
and
sbbb
push
mov
mov
rcll
xchg
test
int
lcall
sub
xchg
jmp
repnz
jbe
aas
adc
orb
jns
loopne
sbb
loopne
aam
push
push
cltd
std
mov
and
xor
or
bound
push
dec
adc
shl
xchg
cwtl
push
pushf
push
xchg
add
jo
sub
rcrl
push
pop
jae
push
pushf
adc
fistps
fstpt
push
nop
xorl
adc
fwait
rol
add
test
popf
adc
pop
xorb
adc
add
xchg
hlt
sub
cmpb
mov
inc
inc
ret
or
pop
mov
dec
ja
cwtl
mov
aas
push
xor
cmp
sarb
cwtl
aaa
mov
jg
sbb
fists
add
das
jnp
ss
or
push
insl
jl
mov
js
pop
add
xor
andl
repnz
fs
mov
insl
push
sbb
hlt
push
cltd
adcl
in
add
or
fistps
add
imulb
mov
adc
repz
cmp
loopne
xchg
pop
int
adc
push
stc
mov
jmp
xor
insb
add
mov
bound
cld
dec
xor
lea
xchg
bound
push
ja
pop
push
dec
fstpl
xchg
sbb
jbe
rcll
out
xor
movsl
sbb
daa
mov
jge
push
testl
cmpsb
outsl
xor
lret
or
lret
mov
rcrb
jg
cmp
cmp
add
lahf
sbb
mov
xchg
add
xor
pop
aaa
push
fs
jmp
xor
pop
dec
dec
xchg
cltd
and
add
mov
nop
adc
test
adc
insl
sahf
pop
jb
gs
add
inc
cmpsb
lds
pusha
das
fldenv
out
movsl
jae
sub
push
test
add
push
xor
jb
xchg
not
push
or
sarb
xor
js
fistpl
incl
loopne
and
out
xchg
popf
ret
loope
movsl
les
mov
imul
push
push
clc
int
jmp
ret
repz
ret
mov
enter
pushf
jns
das
pushf
into
xor
test
into
fwait
mov
sbb
or
add
or
pop
pop
in
lcall
sti
mov
inc
add
mov
rcrl
in
adc
jecxz
sbb
mov
rorl
inc
mov
mov
cltd
xchg
test
and
adc
test
dec
sub
and
mov
dec
adc
sbb
or
pop
cmp
adc
jge
imul
mov
jns
movsl
xor
xlat
jle
ret
xor
sbb
jbe
enter
dec
and
xchg
jae
jo
sbbl
in
mov
out
sbb
mov
fwait
pushf
cwtl
mov
dec
xor
pusha
andb
mov
ss
push
cmpsb
cmpsb
and
and
arpl
scas
nop
pop
lock
mov
shlb
or
out
mov
mov
into
sbb
sbb
les
in
jae
and
or
or
lods
pushf
adc
cmpsb
jne
fwait
mov
inc
cmp
fsubl
xchg
test
mov
jno
out
loopw
push
sub
push
xor
lcall
out
in
pusha
notb
add
or
test
push
push
xchg
jmp
adc
loop
pop
inc
fidivl
ljmp
stos
enter
out
dec
jl
rclb
sbb
shll
xchg
cltd
imul
and
loope
pop
aas
xor
in
fs
out
lods
jmp
lea
js
inc
les
add
scas
inc
pop
xor
mov
sub
push
or
aad
cwtl
lahf
and
inc
pop
or
push
xchg
popf
das
xor
stos
jb
jae
push
pop
test
lret
test
repnz
dec
adc
mov
out
cli
add
pushf
bound
add
push
mov
jmp
arpl
lahf
test
popa
lret
xchg
rolb
sbb
sbb
xor
int
push
push
and
push
push
push
outsb
sub
xchg
push
cwtl
ja
fs
jnp
push
jno
pop
pop
inc
mov
lods
aas
pop
scas
push
or
sub
jbe
xchg
xchg
mov
pop
out
pop
jae
adc
aas
and
jecxz
dec
cmpsb
outsb
mov
cmp
mov
xlat
push
mov
xor
enter
movsb
std
xor
sbb
pop
stos
xor
loope
jp
pop
mov
outsl
cmp
pop
outsl
mov
mov
and
sub
out
mov
fwait
pop
rorl
jns
bound
xlat
push
dec
lods
lods
push
inc
or
dec
fiadds
pop
shll
xlat
sub
popf
aaa
add
sbb
inc
ror
or
rclb
inc
hlt
loope
je
push
sbb
mov
bound
sub
aaa
xor
js
push
das
jae
sub
xchg
or
out
adc
sahf
popa
pop
sbb
lcall
pop
adc
scas
aaa
or
xlat
dec
xchg
fdivs
lret
outsl
rcll
sbb
das
push
jecxz
lods
stos
xor
ss
jl
xchg
je
jns
fcoms
dec
xchg
mov
jle
scas
mov
pop
dec
pop
shl
pop
test
not
loop
ret
push
ja
rcll
mov
mov
pop
stos
bound
mov
pop
mov
ret
popf
lret
xchg
mov
jo
jg
pop
fiaddl
ja
add
dec
cmc
jl
mov
adc
nop
and
mov
mov
inc
scas
popa
sahf
sbb
xchg
lds
push
dec
push
inc
enter
sahf
repz
loop
jno
cmpsb
mov
xor
movsb
mov
aad
mov
push
sub
pushf
or
ja
das
and
cmp
xchg
cli
sub
ret
movsb
jmp
mov
iret
inc
pop
push
mov
adc
frstor
imul
push
xlat
es
popa
or
cmp
lods
xchg
hlt
adc
inc
arpl
xor
aaa
xchg
iret
jmp
clc
loopne
popf
cmpsl
cmp
into
in
sbb
and
cmpsb
push
int3
push
int3
dec
pop
dec
mov
xchg
xor
arpl
jnp
xlat
adc
aad
rcrl
push
or
nop
in
adc
lahf
sub
lds
xchg
push
movsl
mov
shl
aas
cli
stc
inc
jp
out
loop
repnz
push
adc
mov
dec
lock
fidivrs
test
dec
dec
es
pop
hlt
jecxz
xchg
add
stc
daa
lods
fldl
cltd
lea
inc
adc
mov
mov
stos
add
loop
and
movsl
mov
pop
cmp
push
out
cmp
clc
test
jbe
push
dec
adc
outsb
add
insl
loope
leave
int3
inc
cmc
lds
pop
lock
xchg
inc
dec
push
ret
nop
ret
inc
icebp
dec
hlt
xchg
sbb
mov
xchg
mov
push
out
stos
inc
les
hlt
inc
pop
popf
adc
push
ret
add
jl
dec
cmp
inc
lret
je
pop
adc
in
dec
adcb
lahf
push
or
cmp
iret
adc
jecxz
cld
movups
jge
pop
mov
mov
jno
stos
test
in
fs
mov
call
jmp
jo
sahf
lock
xchg
mov
cli
dec
cmc
jb
std
inc
adc
dec
jmp
jnp
mov
cli
pop
ss
jp
cmp
lahf
out
push
shlb
jne
popf
sar
push
sbb
ljmp
cmp
movsb
xchg
mov
std
test
xchg
pop
pop
loop
test
jne
pop
in
scas
xchg
rdmsr
fidivrl
fidivl
xchg
ret
add
sbb
insb
sbb
push
jne
add
and
mov
xor
pushf
xor
push
rclb
je
in
fwait
adc
jmp
add
int
insb
mov
mov
idivb
add
push
xchg
in
add
iret
cmp
push
jnp
pusha
das
or
mov
je
mov
insb
bound
push
scas
add
loopne
mov
shrb
mov
jge
mov
mov
roll
push
rcrb
sbb
insb
sbb
inc
jne
mov
and
data16
add
push
out
push
or
in
add
out
jle
xchg
loop
popa
int3
add
mov
pop
xchg
lods
jp
adc
insl
pop
mov
mov
jae
and
pop
or
gs
lahf
icebp
adc
xchg
popf
hlt
lea
mov
adc
fcoms
mov
dec
ds
insb
sti
inc
mov
dec
les
cmc
cwtl
loope
add
xor
pop
inc
adc
insb
into
xchg
int
mov
dec
dec
adc
jnp
dec
inc
aas
xchg
mov
mull
mov
sub
aad
sti
pushf
push
decl
stos
xor
lods
pushf
out
test
sbb
enter
sbbl
cmc
cwtl
das
out
ljmp
mov
xor
out
cs
push
gs
into
lods
xchg
mov
xchg
aam
sbb
mov
push
push
pop
push
push
sbb
mov
mov
xor
sahf
and
xchg
inc
push
out
adc
out
push
not
in
ljmp
lds
clc
mov
xor
add
dec
add
insb
jp
sarl
xor
lods
adc
adc
push
pop
es
xor
push
xor
lea
xor
xchg
adc
push
and
xchg
jmp
loope
dec
faddl
jb
jp
cmp
add
out
pop
xchg
or
les
adc
sbb
mov
cld
ja
data16
or
mov
insl
pop
cld
movsb
add
shlb
lods
js
int
repz
cmpsl
xor
jns
push
or
das
add
cmp
call
data16
repz
cmc
mov
fcmovne
xchg
jp
movsb
aas
scas
movsb
adc
pop
sbb
push
mov
test
lods
cmc
cs
mov
loop
sbb
cmp
xor
add
fcoms
testl
xchg
cmpb
xchg
ljmp
out
cmp
add
sbb
frstor
cmp
cwtl
rcl
inc
cmp
mov
xchg
imul
or
push
mov
loopne,pn
pop
mov
loop
mov
shll
dec
xor
push
in
mov
dec
or
xchg
sbb
sbb
cmp
pop
inc
add
insl
clc
jge
cltd
add
repnz
xor
and
es
into
xlat
pop
aam
sbb
dec
mov
push
shrl
xlat
jnp
sahf
pop
add
push
mov
jmp
movsl
dec
inc
ss
push
stos
stc
push
sarl
or
icebp
sbb
cmc
fs
mov
xor
les
jbe
cld
mov
test
movsl
mov
shll
stos
adc
mov
out
jmp
cmp
dec
ret
jge
out
xchg
sbb
or
ficompl
cmp
call
repz
xchg
lcall
adc
adc
leave
jp
cmovo
ficoml
xor
ret
push
je
or
push
mov
popa
xor
or
mov
cmp
negb
cmpsl
rcrl
mov
pop
nop
xor
sub
jb
push
xchg
inc
pop
lret
clc
repnz
pop
adc
in
pop
in
push
jnp
push
test
enter
ja
pop
jo
cmp
xchg
pop
push
mov
sbb
cmp
jecxz
jp
out
xchg
mov
arpl
mov
inc
unpckhps
mov
in
out
xor
js
mov
inc
add
xchg
jg
push
adc
ja
shll
mov
xchg
jle
xor
lock
out
rcrl
sub
and
cs
xchg
jge
mov
ljmp
aaa
jae
scas
out
jnp
mov
jae
sub
je
cmpsl
jmp
out
fstpl
or
shlb
and
dec
xchg
pop
pop
or
push
xchg
add
xor
mov
mov
add
adc
jecxz
fimull
add
ret
sub
imul
sub
add
orb
filds
xor
add
dec
mov
js
inc
lea
stos
daa
imull
inc
jae
mov
arpl
lea
xchg
movsb
and
pushf
mov
cmp
into
jb
mov
add
push
aam
cmc
push
imull
shrb
lcall
jo
ja
pop
sub
inc
or
lods
pop
mov
out
pusha
push
push
mov
pop
cmp
movsb
mov
decb
mov
into
sub
sbb
push
xchg
xor
pop
xchg
pop
cwtl
xor
addr16
jge
cmp
xlat
add
fwait
cmpsb
sub
jne
mov
jle
fs
pop
xchg
push
fs
jecxz
decl
enter
sub
adc
sub
pushf
push
nop
push
dec
jecxz
leave
xchg
sub
aaa
jp
dec
add
mov
mov
sub
mov
arpl
cmp
mov
inc
push
movsl
jne
push
pusha
mov
lea
imul
push
in
ret
push
dec
sti
mov
jecxz
mov
adc
adc
mov
adc
push
push
daa
inc
int3
mov
loop
inc
pop
movsl
mov
cmp
xchg
cli
aas
cwtl
into
add
nop
in
repz
inc
mov
push
mov
cmc
lds
in
bound
test
inc
mov
jnp
sahf
mov
insb
test
inc
xor
int3
cwtl
mov
mov
jne
cmp
scas
std
popa
sbb
nop
pop
add
stos
aas
xchg
arpl
ret
jle
xchg
lods
leave
xchg
insl
fs
xchg
lock
add
popl
jb
fsts
or
xor
arpl
in
jno
insb
out
aad
pop
inc
cmc
adc
dec
dec
aaa
or
ss
push
insb
clc
jo
and
scas
daa
xchg
jge
arpl
sbb
xor
cs
cmc
fildll
add
popa
adcb
add
sbb
xchg
sub
adc
mov
ja
ja
inc
aaa
mov
icebp
xor
ss
dec
lock
fwait
ljmp
xchg
xchg
in
es
idiv
les
sbb
pop
adc
mov
stos
pop
fmul
jmp
lcall
mov
leave
out
inc
push
fnstsw
sub
pop
sahf
jg
and
dec
or
adc
leave
cmp
dec
and
in
push
xor
inc
movsl
mov
repnz
addr16
cltd
test
or
enter
pop
lds
roll
inc
popa
popf
sti
sub
pop
imul
ss
daa
and
es
mov
cwtl
fstps
xchg
aam
fldenv
sub
jo
and
into
ljmp
ds
stc
outsb
add
jp
movsl
addr16
pusha
mov
outsb
out
clc
call
les
xchg
scas
sub
orb
jnp
pop
enter
or
fnstenv
dec
push
addl
jecxz
gs
insb
imul
xor
cmp
std
ficoms
push
mov
dec
mov
mov
mov
mov
aaa
outsb
scas
shr
push
les
out
repnz
test
lahf
aad
sahf
xor
imul
mov
dec
leave
testb
or
insl
dec
mov
imul
jno
dec
mov
push
js
fwait
sahf
ljmp
fdivl
je
jo
dec
dec
movsb
add
in
cmp
sub
sbb
dec
xchg
dec
stc
sub
mov
push
mov
pop
pop
js
outsl
mul
ret
fisubrs
cmp
mov
xchg
dec
xchg
jecxz
cmp
in
int
sub
or
jecxz
gs
xlat
lds
imul
mov
sub
push
inc
push
and
jle
fsubrs
dec
push
mov
add
daa
in
daa
inc
xchg
cli
push
jp
or
nop
cltd
push
inc
mov
xchg
popf
mull
push
int3
add
jo
push
dec
xor
xor
sti
sbb
pop
cmp
sbb
adc
mov
lret
cld
cmpsb
jns
test
out
mov
or
sbb
mov
std
leave
mov
mov
sub
fdivs
push
pop
pusha
mull
mov
sbb
stos
or
mov
test
clc
clc
jns
mov
mov
imul
push
mov
or
mov
sub
int
je
cmc
push
sbb
dec
in
dec
mov
mov
rolb
and
add
add
ret
cmp
stos
cmpsb
aas
pop
into
and
je
into
es
mov
xchg
icebp
adc
mov
push
mov
push
ljmp
mov
mov
mov
enter
jmp
push
idivb
nop
sbb
dec
cmp
and
ds
push
ret
aas
ss
mov
in
jg
scas
and
lea
dec
fcmovbe
aam
xchg
out
imul
mov
push
js
dec
or
sub
call
pop
dec
mov
in
incl
add
in
mov
and
mov
into
push
pop
into
xor
enter
jl
fiadds
sub
xchg
sub
or
or
lea
dec
xor
ss
in
push
mov
xchg
inc
insl
add
mov
push
xchg
outsl
cmpsl
mov
xchg
jle
dec
cs
dec
gs
repz
aad
addr16
in
and
mov
mov
jmp
cmpsb
ss
and
ljmp
or
dec
stos
mov
stos
push
and
push
test
jmp
test
aas
cmpsl
aad
jp
shll
and
inc
add
mov
ja
loop
insb
jg
arpl
mov
mov
repz
and
lahf
mov
cli
fnstcw
movsl
sbb
jmp
mov
and
mov
movsb
clc
cld
push
push
hlt
cmpsb
cs
adc
push
xchg
faddl
pop
jno
pushf
pop
aaa
mov
mov
jae
bound
or
inc
push
test
xchg
lcall
dec
popa
test
xchg
push
push
fldt
xlat
lea
jmp
adc
dec
ss
repz
inc
out
xchg
int
sbb
xchg
cmpsl
dec
ljmp
je
jno
mov
jle
sbb
mov
aaa
das
scas
xor
lahf
adc
xor
sub
and
pop
sbb
std
cwtl
sbb
cmp
mull
ret
pop
inc
mov
push
mov
mov
sub
sbb
pop
pop
mov
and
push
inc
aam
loopne
stc
mov
enter
pop
fs
mov
je
lahf
ss
sbb
push
sahf
xor
imul
rol
scas
mov
into
ss
sub
rcrl
push
jmp
push
push
hlt
loope
fisubrl
push
mov
pop
inc
pop
es
iret
int3
repnz
adc
incl
scas
das
stos
sbb
inc
cmp
ja
icebp
push
sub
je,pt
dec
xchg
je
jl
mov
jecxz
sbbl
mov
test
cmpsl
ja
insb
push
fidivl
jno
incb
sbb
or
xchg
outsb
out
mov
xchg
xorb
out
je
sbb
xor
test
push
dec
inc
out
jno
xor
pop
inc
out
loopne
jecxz
sub
or
shlb
out
enter
mov
mov
inc
stos
fadds
loopne
and
stc
xchg
ds
in
mov
or
cmp
mov
insl
mov
lds
stos
and
jnp
sub
or
mov
repz
mov
mov
xor
pop
adcl
scas
dec
push
stc
lock
popf
adc
mul
scas
test
inc
ret
xlat
xchg
enter
outsb
add
lds
mov
loope
cs
xchg
mov
inc
fisttpll
sbb
shrl
andb
out
mov
cmp
popa
stos
les
mov
shll
jl
ret
pop
or
and
or
jne
cld
jb
aam
movsl
cltd
fsub
cmp
leave
pop
or
leave
cltd
xor
dec
xlat
jb
xchg
sarl
outsb
popa
iret
ljmp
outsb
test
rcrl
pop
push
fcomps
std
ss
mov
sbb
lret
loop
dec
mov
std
add
jecxz
mov
je
inc
in
les
pop
adc
jle
adcb
jo
adcl
and
leave
xor
lods
out
cli
std
push
sub
ja
leave
movsb
sbb
filds
sti
pop
lahf
dec
sub
pop
sub
and
addr16
sbbb
push
data16
dec
push
pop
dec
jb
jae
sbb
cltd
jle
in
int3
xor
mov
and
pcmpgtd
xor
mov
jle
js
fs
shrb
testb
ret
stc
mov
ret
movsl
fildl
sti
and
repnz
xchg
mov
dec
jp
mov
repz
in
idivl
pusha
loope
ljmp
or
dec
mull
mov
bound
and
mov
repz
cmpsl
out
mov
xchg
sar
cmp
mov
imul
test
addr16
int
jno
dec
push
mov
mov
xchg
inc
pop
sub
jne
mov
mov
dec
andb
adc
sub
enter
leave
and
test
pop
pusha
outsb
in
jl
adc
outsb
loopne
fwait
mov
ljmp
xor
mov
cmpsb
xor
mov
sub
nop
in
cmp
mov
pop
and
mov
fmuls
pop
jns
xchg
or
aaa
mov
lcall
pop
js
fmull
fisubrl
xor
xchg
cmp
cli
push
leave
lcall
addr16
dec
iret
jecxz
cltd
cmp
movsl
iret
je
lock
adc
bound
mov
fsubrs
aaa
idiv
sub
icebp
hlt
adc
pop
or
dec
hlt
mov
sbb
sub
adc
dec
add
ja
add
mov
rol
jp
xchg
and
inc
jg
in
inc
imul
inc
ja
cwtl
out
stos
rcr
push
cmp
aas
adc
or
lds
pop
adc
cld
xchg
mov
test
dec
lcall
mov
xor
lret
mov
push
fucom
movsb
lods
or
pushf
inc
push
push
aas
hlt
or
jecxz
adc
outsl
shl
fld
pop
xlat
adc
out
popf
sarb
dec
fsts
pop
testl
negb
mov
inc
cld
push
jmp
cli
sahf
pop
push
cmp
jle
loope,pt
jge
sbb
movaps
add
cmp
inc
and
adc
ret
mov
inc
insl
mov
inc
fchs
ja
xor
jo
and
push
loope
int3
pop
inc
xchg
iret
adc
orb
mov
in
adc
jns
loopne
push
mov
or
sub
in
mov
mov
push
mov
test
pop
or
xchg
sub
push
popl
push
fdivrl
push
inc
repnz
push
add
test
push
lods
fldcw
jns
arpl
das
mov
xchg
outsb
pushf
mov
les
cmpsl
push
decl
fwait
scas
xchg
mov
adc
in
jmp
imul
jge
popa
xchg
or
jbe
test
ret
pop
mov
pop
stos
jge
jbe
push
hlt
cltd
nop
arpl
pop
sti
sub
and
sbbb
pop
inc
stos
lcall
shr
loopne
mov
stos
mov
lods
jae
test
pop
pop
pop
mov
enter
sub
repnz
inc
dec
call
cmp
imul
jno
sbb
push
cmp
xchg
dec
bnd
cli
test
fcoml
cmp
je
or
popa
mov
inc
cmp
inc
xor
in
xchg
and
gs
test
lret
mov
xchg
lds
xorl
add
adc
xchg
pop
cs
jl
cmp
cmpsl
loopne
icebp
call
shrb
push
adc
lock
ds
gs
jp
jmp
cmp
mov
mov
inc
rcl
ss
pop
sub
pop
shl
shl
pushw
aam
lea
cmp
cmpsb
dec
xchg
and
xor
xchg
mov
inc
sbb
hlt
push
test
sub
dec
jle
fldenv
push
cmc
jmp
adc
fwait
push
add
xor
sub
out
outsb
and
adc
pop
movsl
repnz
jg
enter
sub
add
xchg
mov
std
pop
sbb
xchg
bound
mov
pop
cmpsl
adc
repnz
lods
inc
test
jae
jmp
push
inc
ljmp
andl
roll
in
sbb
out
xor
jne
jne
popa
and
daa
cmpsb
roll
arpl
scas
or
xchg
sahf
push
dec
pusha
movsl
xchg
sbb
inc
adc
jo
es
xor
xchg
ja
enter
ja
lods
pop
add
sub
movsl
in
stc
test
push
inc
mov
pop
mov
data16
mov
hlt
inc
sub
and
xchg
jns
mov
dec
test
jns
add
mov
clc
inc
aaa
pop
dec
adc
dec
in
push
xchg
xchg
cmp
or
xchg
dec
mov
imul
cmp
push
mov
mov
or
pusha
and
xchg
pop
lods
pushf
call
add
loopne
in
addr16
icebp
pop
pop
imul
repz
jo
or
xchg
add
imul
bound
dec
or
lods
ret
stos
sbb
xor
decb
dec
cmp
adc
cmp
pop
sbb
clc
push
and
pusha
dec
scas
loopne
aad
mov
mov
inc
cli
push
push
mov
mov
sub
pop
xor
decl
fsubl
pop
cmpsl
xor
inc
pop
cli
push
outsl
jg
or
cmp
into
mov
rcrb
mov
and
push
fdivs
mov
jg
nop
push
xchg
gs
sbb
xchg
add
push
sbb
jns
inc
in
decb
fdivrl
mov
stos
jae
scas
cmp
cli
int3
test
xor
add
loop
and
mov
sarb
lahf
pop
std
shlb
push
pop
cmp
sub
pop
cmp
cmp
jo
pop
jg
les
inc
and
mov
outsb
dec
inc
stos
shlb
cmp
add
pop
push
in
dec
testb
lret
nop
test
sbb
in
sub
mov
into
sub
inc
lcall
gs
mov
adc
addr16
jno
and
or
mov
cmp
call
mov
or
imul
movsb
mov
jmp
test
jno
test
adc
sahf
push
mov
rclb
push
jmp
push
mov
movsl
popa
aam
jg
mov
add
cmpsb
push
mov
mov
push
nop
sbb
insl
dec
outsb
int
add
ja
xchg
add
inc
jnp
jge
sub
pop
test
add
sbb
arpl
in
add
or
jp
daa
and
lods
pop
adc
or
rclb
cmp
push
sub
mov
xor
fsubr
jns
repz
out
iret
push
inc
cs
pop
mov
add
xchg
push
lock
ljmp
push
aaa
cli
mov
sub
fcmove
scas
push
aaa
cltd
push
jno
push
push
enter
adc
and
daa
xor
mov
mov
or
int
rcl
push
ret
xchg
and
and
hlt
jns
cmp
xchg
jecxz
jb
cmpb
xor
adc
cs
mov
out
loopne
pop
in
andl
or
mov
inc
sahf
loop
xor
push
push
jl
andl
js
fildl
mov
lret
adc
push
sub
cmp
or
filds
and
mov
jl
fsubr
jmp
lods
lods
loop
data16
sbb
mov
jg
jbe
fildl
jmp
sub
dec
lcall
nop
sub
sbb
pop
pop
push
les
addr16
jle
push
cli
dec
loopne
ss
mov
cmpsb
adc
dec
add
in
mov
xor
xor
arpl
jnp
add
push
rorl
fdivrl
ds
scas
outsl
test
cmp
add
divl
inc
and
adc
and
jecxz
mov
mov
orb
call
icebp
adc
sbb
jne
pop
nop
jle
cmpsb
pusha
orb
xor
ljmp
mov
add
mov
mov
and
jmp
pop
xchg
ror
sahf
add
nop
mov
das
scas
shrb
inc
ret
pop
stos
sbb
mov
mov
iret
cmpsl
sbb
insb
lea
mov
cmp
imul
jnp
and
push
bound
push
cld
mov
mov
ds
je
or
cs
fidivl
es
fimull
adc
jmp
lods
shrl
in
adc
push
and
sarl
mov
pop
cmp
xor
inc
shlb
mov
adc
out
ja
call
pop
jmp
cmp
mov
out
add
fsubl
push
scas
push
dec
lret
into
mov
pushl
push
pushl
test
sbb
and
aam
in
mov
arpl
cmpsl
add
pop
aas
mov
mov
call
cmpsb
mov
pop
xchg
pusha
cmp
insb
dec
gs
mov
adc
aaa
jle
divb
mov
fidivrl
pop
mov
in
insl
push
xchg
or
sti
xchg
xchg
das
jne
lret
inc
pushf
popa
cmc
in
repz
sahf
fs
pusha
les
mov
mov
div
inc
and
out
scas
xchg
loope
jnp
xchg
adc
rcll
or
mov
add
mov
fisubl
aam
ss
in
mov
mov
loop,pt
mov
fnstsw
pop
sub
sbb
lea
andl
sbb
and
push
gs
adc
or
shll
lods
stc
jle
xorb
cmp
std
sbb
adc
jl
jle
stos
idivl
push
insb
outsb
jbe
jns
mov
xchg
pop
lcall
test
add
icebp
pop
mov
cwtl
pusha
je
mov
mov
es
shll
mov
pop
fistpl
test
xchg
mov
and
sahf
add
pop
mov
jl
sbb
fs
ljmp
inc
test
pusha
insl
inc
fmuls
cmp
sub
sbb
scas
test
mov
aaa
or
ja
bnd
push
mov
movsb
clc
dec
mov
test
cmp
pop
mov
aas
bound
add
nop
pushf
xor
xor
sbb
xchg
or
dec
test
cltd
xchg
xchg
and
lcall
adc
inc
test
cmp
mov
jae
mov
xchg
ss
sti
jo
js
ret
mov
dec
test
xchg
je
pop
shl
pop
pop
fwait
pop
jmp
push
je
shlb
mov
ret
dec
xchg
stc
sbb
adc
mov
xor
cmp
jmp
out
push
push
pusha
xchg
fistps
stos
jp
popa
movsl
sub
mov
inc
adc
in
into
adc
aas
andl
dec
nop
inc
push
dec
repnz
test
mull
lods
mov
push
je
ja
or
pop
sbb
incb
mov
mov
stos
in
mov
enter
fnsave
push
movsl
hlt
popf
rolb
sbb
cmp
pop
cltd
pop
add
jns
sbb
imul
ljmp
idivl
loopne
mov
jg
fildl
frstor
ret
jle
push
mov
aaa
add
or
cmp
idivb
dec
jge
shll
lds
jne
fstl
clc
dec
int
and
out
fbld
push
inc
ljmp
pop
jae
sbb
sbb
jne
adc
jno
mov
or
xchg
test
loopne
imul
adc
cmp
pop
dec
stc
hlt
sub
push
push
xor
cmc
lret
dec
pop
paddb
ss
pop
repnz
mov
mov
add
dec
fdivp
push
push
icebp
mov
xchg
inc
xorb
mov
mov
xchg
rclb
lret
xchg
mov
notl
mov
jmp
in
fimuls
xor
inc
push
mov
inc
push
cltd
sahf
xchg
negl
and
adc
mov
pop
push
push
xchg
lcall
mov
aad
mov
push
add
sub
cld
inc
in
pop
xor
xor
and
add
mov
rorb
fbstp
cmpl
rclb
pop
je
movsl
data16
lret
cmpsb
jne
in
jle
mov
jg
xchg
mov
cmp
or
cmp
adcb
mov
sub
lods
xchg
mov
mov
jb
pop
mov
jecxz
cwtl
pop
stc
pop
or
push
xor
pop
jne
sbb
cwtl
cmc
inc
xchg
sbb
push
fdivr
addr16
sub
repnz
sti
aam
lock
sub
out
cmpsb
daa
adc
add
fcompl
pop
jae
mov
repnz
scas
ljmp
or
sbb
pop
mov
jbe
int
jge
add
std
popa
scas
xchg
sub
fnstsw
xchg
adc
out
push
pop
in
out
movsl
mov
popa
fiadds
mov
push
cmp
push
iret
mov
pop
sub
xchg
icebp
cmp
add
shll
mov
fistps
pop
inc
dec
adc
pop
sbb
adc
arpl
lods
jb
mov
psadbw
sbb
int3
inc
lods
jno
dec
jg
mov
inc
shl
cmp
push
data16
int3
push
in
and
cmp
mov
xchg
jecxz
add
add
pop
test
jnp
sub
or
and
pop
pop
xchg
out
pop
push
mov
mov
ja
xchg
jmp
in
leave
div
inc
and
js
mov
mov
popa
in
push
jb
dec
cld
data16
movsl
addl
push
jge
cwtl
insb
aas
xor
dec
cltd
sbb
mov
loop
popa
stos
int3
inc
sbb
and
xor
and
dec
fdivs
mov
inc
je
cmp
scas
fmuls
pusha
pop
ljmp
je
cwtl
out
dec
sbb
jns
into
loop
movsb
mov
sub
jo
and
fwait
ds
cmp
fstpt
inc
mov
xor
cs
in
jg
inc
fs
sub
xchg
cmp
mov
lock
xchg
sub
decl
call
divl
push
mov
mov
dec
sub
cmp
mov
xchg
imul
int
hlt
in
jno
dec
push
jecxz
adc
ret
xor
aam
adcb
fwait
jbe
push
push
dec
sahf
loope
ret
rcr
dec
sbb
sub
mov
and
out
cs
aad
cmc
in
mov
xor
mov
mov
push
and
adc
ret
add
mov
mov
push
hlt
in
xor
das
enter
repz
gs
mov
jae
jp
or
and
xor
push
pushf
mov
dec
mov
in
cmp
adc
jecxz
lods
outsl
dec
das
mov
adc
pop
aam
es
cli
lea
rorl
sub
sub
jne
sub
sub
cmpsb
stc
scas
or
jnp
push
in
lds
js
xor
dec
in
stos
jno
xor
insb
lods
jg
into
inc
ja
mov
cld
loop
into
lods
iret
xchg
bound
jl
mov
push
mov
pop
hlt
adc
imul
in
cmc
sbb
scas
push
pop
pop
jl
hlt
rorb
es
hlt
xor
andb
dec
loopne
imul
pop
jecxz
mov
inc
notb
push
pop
subb
stos
jo
cmp
adc
mov
mov
xchg
popf
or
popa
enter
movsl
push
adc
jb
lods
fdivrl
aad
dec
inc
enter
loope
sub
ret
ror
dec
mov
jge
sbb
mov
inc
xlat
lret
pop
sub
in
in
pop
xor
adc
adc
in
push
jg
xorl
mov
dec
sbb
pusha
popa
sub
push
inc
addr16
ljmp
inc
shl
testl
daa
stc
outsl
cmp
movsb
data16
xor
xor
nop
add
sarb
cmp
inc
popa
sbb
jg
subb
je
dec
xchg
icebp
repz
mov
add
das
mov
xchg
test
fnsave
fistps
dec
cmp
mov
dec
lea
das
pop
int3
fistpll
lods
jbe
add
lods
mov
je
jns
xor
and
and
add
in
je
sbbl
loopne
fwait
push
pop
inc
inc
aas
or
hlt
jl
or
insl
pop
fnsave
lods
xchg
fists
paddw
dec
pushw
iret
mov
xlat
add
cs
scas
lahf
faddl
add
lahf
in
into
vpcmov
test
out
outsl
addr16
and
add
lds
mov
enter
or
add
xchg
nop
rorl
xchg
ds
pop
loop
inc
lcall
and
arpl
push
test
fsub
aam
mov
sbb
icebp
mov
push
das
in
out
mov
ret
sbb
subb
ds
popa
sub
sub
adc
push
or
int
push
gs
jb
jle
pop
pop
mov
scas
icebp
lret
xor
mov
imul
call
sub
jmp
xchg
shl
hlt
push
lods
out
lret
sbb
les
mov
inc
cwtl
rcrl
sub
int
lds
movsl
push
adc
pavgb
inc
and
xor
xchg
stc
push
xchg
fs
mov
add
int3
sbb
sbb
jns
jbe
stos
cmp
div
hlt
jp
clc
pop
mov
mov
xor
aas
es
push
stc
int3
fsubl
imul
test
cmp
jle
into
mov
mov
mov
xor
adc
fisubs
xor
jmp
add
xor
sub
cmp
jbe
mov
imul
mov
xchg
ja
scas
int
int3
imul
into
leave
add
scas
add
dec
ret
push
dec
dec
pushf
mov
imul
pop
into
sahf
imul
jnp
adc
insb
cmpsl
sarb
pop
out
fldt
inc
sarb
movsb
cmp
arpl
add
push
or
xchg
lahf
test
adc
lcall
push
adcl
scas
fs
mov
std
adc
stos
pop
mov
dec
shr
sti
jmp
jne
ret
ret
ret
mov
adc
and
in
pop
and
mov
jmp
lods
mov
sbb
or
pop
xor
and
call
inc
js
pop
mov
cmp
pop
dec
and
fimull
or
jo
xlat
cld
out
arpl
test
sub
imul
sbb
jne
lods
and
enter
sahf
mov
popf
shll
mov
inc
cmp
add
insb
pop
scas
xchg
mov
scas
mov
je
push
dec
cmp
dec
and
or
loope
sti
push
pop
xchg
xchg
add
inc
push
add
mov
cmpsb
jbe
pop
rol
aaa
xchg
aam
cmp
and
stc
jns
sbb
ljmp
ss
jno
push
push
imul
mov
neg
cmpl
add
scas
push
sbb
loop
or
or
fs
fiadds
sbb
addr16
mov
push
xor
and
jmp
xchg
pop
fcoms
ljmp
xor
gs
ss
sbb
sub
mov
rcll
add
int3
data16
bound
stos
repnz
pop
xchg
idivl
sub
dec
shl
and
cmp
xor
pusha
xlat
xchg
xchg
mov
pusha
xor
pop
adc
cmp
test
cs
push
mov
xor
cs
sar
xor
lods
push
xchg
lock
enter
inc
dec
inc
inc
sarl
or
dec
pop
sbb
jo
sub
mov
mov
aas
popl
popa
pop
fidivl
add
jne
in
std
nop
cmp
or
xor
sub
imul
fnstcw
loope
jle
test
jmp
cmp
and
in
fs
xor
xor
fldenv
icebp
mov
rclb
fcmovnbe
mov
add
es
push
les
inc
bound
mov
int3
pushf
xor
fdiv
cmp
push
test
jb
mov
jg
and
inc
xchg
cmpsl
je
stc
lods
adc
imul
cltd
scas
mov
inc
cmp
insb
sbb
push
call
jecxz
push
fwait
add
lret
aas
adc
cwtl
inc
push
inc
jnp
push
int3
or
pop
inc
nop
inc
add
repnz
mov
popa
sbb
xchg
leave
iret
cmp
mov
aam
enter
xchg
pusha
and
push
sbb
jne
push
movsb
xchg
sbb
and
mov
or
lea
jno
jg
pop
leave
inc
scas
pop
xorb
out
aas
fs
stos
rcrb
xchg
add
pop
repz
gs
clc
inc
int
in
mov
push
imul
sbb
enter
lods
xchg
and
and
ret
xor
inc
icebp
bound
mov
scas
fsubl
cmpsb
pop
cltd
fbld
jnp
fsubl
inc
dec
adc
sbb
sbb
lea
dec
gs
mov
add
inc
sub
xchg
sbbl
dec
sub
mov
ret
and
inc
mov
xchg
lods
movsb
fs
test
cmp
xchg
pop
mov
push
dec
pop
jns
jo
gs
push
cmpsl
sahf
xor
jl
jns
movsl
jp
jg
sbb
mov
jle
jno
roll
sbb
scas
pop
jecxz
xor
push
aaa
or
iret
ljmp
inc
mov
add
jne
cmp
pop
shlb
xor
rcll
inc
sbb
push
mov
fistpll
xchg
inc
adc
inc
sar
cld
mov
scas
lods
inc
sbb
dec
add
into
adc
shrb
push
sub
push
mov
fstpl
mov
mov
push
out
add
and
ljmp
mov
jecxz
in
clc
aaa
outsl
xchg
add
imul
outsb
cmpsl
adc
sub
addr16
pop
sub
or
pop
and
jmp
dec
jecxz
mov
sar
cmpsb
mov
icebp
add
cmp
daa
add
xchg
sub
repnz
aad
ret
daa
fimuls
push
push
loop
movsl
xor
cmp
cmp
mov
inc
addr16
inc
mov
rorl
mov
iret
xlat
push
call
cwtl
cmp
std
aad
push
fists
pop
pop
xor
ljmp
dec
jmp
or
and
stos
mov
scas
mov
mov
jl
filds
adc
idivb
push
mov
fadd
or
dec
push
ss
out
rclb
out
dec
jg
stos
or
cmpsl
inc
jb
mov
push
cwtl
xor
push
lods
rcl
cmp
xor
pop
sub
stos
xor
adc
lock
aad
dec
dec
push
les
insb
cmp
cs
add
mov
xchg
pop
xor
and
inc
leave
repz
xor
js
lods
cwtl
int
sbb
aam
repz
icebp
and
ficompl
mov
mov
aam
xor
jl
push
push
stos
pusha
mov
dec
dec
mov
cmp
lcall
push
adc
cmp
or
pop
inc
sbb
xchg
je
dec
fsubrl
xchg
pop
pop
in
jo
out
into
movl
out
sbb
rol
push
xchg
fldcw
out
inc
lahf
cmp
sub
sub
adc
cmp
mov
lods
mov
and
mov
out
jnp
jle
xchg
sbb
inc
jns
xlat
xorb
xchg
add
repz
cmc
dec
jecxz
xchg
je
mov
jge
out
lahf
in
add
pop
sbb
xchg
xor
in
and
and
mov
pop
xlat
push
mov
push
es
mov
adcl
cmp
and
arpl
decb
jne
pop
into
outsl
dec
insb
mov
sub
jo
icebp
movsl
ljmp
xor
and
inc
jnp
pop
fdivp
fs
xchg
and
pop
call
xor
and
jns
push
icebp
adc
mov
add
loopne
into
jno
ljmp
cmpsl
pop
lods
iret
fmull
xor
nop
aas
pushf
jb
scas
es
in
cmp
push
pop
mov
mov
test
aas
cmp
jmp
cwtl
xlat
mov
adc
add
mov
xchg
jne
in
insl
mov
fs
clc
sbb
or
mov
in
mov
jg
mul
mov
test
out
mov
xor
loope
mov
test
rclb
xor
mov
lods
outsb
pop
int3
add
xchg
je
fnstenv
dec
jno
mov
pushf
mov
sbb
adc
or
xor
inc
aaa
inc
aad
in
add
lahf
cli
lea
and
cmp
in
xchg
sub
xchg
adc
ret
gs
or
aad
loop
add
loope
and
jns
rcll
sbb
movsl
lahf
pop
loop
gs
fisubrl
test
mov
les
pop
loope
adc
push
dec
fsubrs
jno
cmp
test
cmp
xor
or
add
les
jmp
sbb
sub
lds
in
inc
lds
xor
mov
cmp
in
cmp
cli
xchg
ljmp
dec
pop
aad
outsl
ret
cli
xchg
mov
pushf
cvtps2pd
ret
daa
dec
test
daa
push
fwait
aad
mov
ret
sub
dec
pushf
repz
scas
cmc
pop
jno
pushl
mov
lcall
mov
je
call
mov
cmp
orl
scas
sbb
sbb
adc
and
or
imul
fimuls
sarb
fnstenv
push
outsb
ljmp
push
jg
lods
adc
cmc
inc
sti
fdiv
push
inc
das
pop
leave
daa
adc
pop
sub
and
add
faddl
imul
inc
xchg
xchg
daa
push
es
stos
add
xor
adc
jbe
and
adc
je
das
lea
push
mov
sahf
cmpsb
dec
mov
and
jo
pop
jnp
mov
gs
jg
jne
pop
outsb
outsb
in
xor
and
push
mov
inc
cwtl
mov
mov
jp
incl
jmp
jnp
arpl
js
mov
mov
dec
rcrb
xor
push
sarb
cs
xor
lahf
fistl
mov
or
xor
adc
pop
fidivrs
push
movsb
shl
stc
cwtl
push
iret
fimuls
cmpsl
jmp
inc
sub
pop
inc
andb
in
add
mov
push
sbb
or
mov
aas
lahf
out
fsubs
scas
jl
ljmp
xchg
idivl
cmp
pop
and
das
pushf
test
add
pop
shlb
fsts
in
mov
sub
test
outsl
push
int3
sbb
sub
mov
or
mov
addr16
ret
aaa
ret
insb
test
andb
loope
xchg
rcrb
cld
int3
sbb
sbb
inc
and
mov
inc
sub
bound
sti
mov
add
fmuls
inc
adc
movsl
lahf
enter
jecxz
clc
cmp
mov
aad
loop
aaa
mov
sbb
dec
add
push
inc
and
inc
popa
popa
test
out
push
jo
push
sub
pop
fsubrs
cmp
test
gs
sarl
ja
nop
das
mov
push
icebp
jp
xchg
mov
in
hlt
cmp
ljmp
add
repnz
loope
mov
push
mov
into
stos
mov
out
sbbl
adc
cld
inc
sub
jecxz
adc
adc
jl
mov
adc
aad
xor
jno
int3
adc
jg
pop
cmp
shrl
and
pop
mov
or
inc
xchg
cmp
xor
dec
sbb
fstl
and
in
fistps
dec
icebp
adc
cltd
imul
in
xor
sub
xchg
push
ja
test
push
ljmp
mov
addr16
loopne
shl
add
nop
mov
in
test
dec
mov
insl
das
jg
cmpsl
ss
es
lds
sbb
mov
inc
push
loope
lcall
insb
mov
jecxz
mov
ret
jp
lods
cli
inc
mov
outsl
jb
hlt
mov
cmp
andl
add
dec
jmp
jecxz
cli
ss
loopne
sub
movsb
mov
daa
or
sub
adc
lds
mov
es
repnz
in
aam
jle
adc
mov
lcall
cmp
adc
or
pop
fnstenv
inc
into
push
in
mov
adc
mov
cltd
dec
pushf
fsts
out
enter
pushf
test
mov
mov
clc
fs
popf
dec
cs
arpl
xchg
repz
movsl
inc
popa
lahf
jmp
xor
sahf
rclb
sahf
test
sbb
insb
add
lahf
inc
inc
mov
pop
xchg
sub
and
push
mov
sub
mov
mov
sub
xchg
out
ljmp
xor
mov
js
lret
pop
adc
mov
movsl
test
cmp
mov
and
dec
dec
inc
inc
cmp
xchg
push
in
sbb
cmpsb
aaa
pop
dec
shl
fisttpll
jl
sbb
xor
test
decb
mov
adc
iret
sbb
outsb
push
jae
je
gs
sub
jo
jb
cmp
mov
and
movsb
sahf
dec
mov
data16
mov
or
aas
data16
ret
xchg
in
out
or
pop
pop
ljmp
jl
and
call
add
push
out
mov
dec
push
rcrl
sti
jne
xchg
pusha
je
xchg
aaa
pop
int3
adc
xchg
fisttpll
or
lock
das
in
andb
jbe
or
adc
mov
fdivr
jne
aas
adc
daa
fists
push
jne
xchg
test
add
aaa
xchg
mov
mov
cmc
js
mov
fs
xchg
mov
addr16
aad
dec
add
lods
fcomps
pusha
lcall
into
enter
fnstcw
lods
or
mov
mov
or
push
sub
stc
mov
jmp
pop
xchg
lcall
add
test
push
add
add
repz
out
sar
cmp
insl
cmp
loope
dec
push
xor
push
cli
dec
inc
outsb
dec
aad
in
in
jbe
push
orb
ds
aas
pusha
sub
push
ljmp
pop
cltd
daa
arpl
cmp
cltd
enter
test
sub
cmpsb
mov
stc
cmp
dec
sub
ret
fidivs
pop
hlt
fxch
mov
jecxz
jl
mov
xor
xchg
add
int3
imul
cmp
stos
cmpsl
add
repnz
xor
decb
mov
inc
ss
push
fwait
adc
mov
test
add
mov
adc
call
mov
loop
pop
xor
stos
inc
inc
jmp
enter
lret
test
jmp
mov
movsl
sahf
dec
mov
movsl
scas
hlt
pop
out
mov
mov
scas
and
stos
je
cmpsl
push
and
xor
div
adc
cld
inc
daa
out
ja
xor
jge
in
lret
dec
ss
push
pop
cmp
shrl
pop
inc
push
jns
pop
push
mov
sbb
xor
xlat
pop
fs
insl
or
push
sub
cmp
call
iret
xchg
aad
sub
cli
enter
aad
ret
mov
xor
loope
mov
inc
leave
xchg
insb
xchg
cwtl
daa
adc
inc
and
subl
idiv
popa
cmp
jl
mov
imul
clc
sub
stos
adc
jle
sbb
aas
movsl
loope
rcll
das
add
movsl
dec
pop
jle
lcall
push
stos
out
mov
xor
xor
sbb
push
cmc
push
or
mov
stos
rcll
cwtl
insb
cmpsl
mov
das
and
or
iret
sbb
insl
cwtl
push
mov
adc
mov
stos
xchg
andb
iret
mov
in
xchg
inc
out
xlat
pop
movsb
int
aaa
adc
fs
dec
out
ss
mov
mov
dec
mov
push
cwtl
xchg
das
lret
repnz
fst
clc
cmp
lea
lret
repz
or
adc
push
je
test
aaa
or
xor
aam
or
add
movups
fnstsw
push
and
dec
push
mov
sub
sbb
jecxz
push
inc
mull
cmpsl
jne
pop
add
pop
add
in
dec
test
scas
xchg
adc
add
or
push
push
shll
add
pop
cli
sub
push
aas
mov
mov
hlt
mov
or
xchg
mov
mulb
mov
inc
sbb
shrb
mov
test
jae
jbe
or
loope
aas
and
cld
pop
lock
adc
out
jg
movsl
mov
sti
xor
les
test
dec
test
ljmpw
cs
jns
lea
jg
popf
dec
pop
mov
outsb
inc
dec
cld
out
enter
cmp
mov
lods
push
cld
test
mov
scas
stc
mov
mov
and
in
xlat
enter
or
std
mov
outsb
jns
iret
adc
add
ret
inc
fiaddl
insb
iret
int3
sbb
mov
pop
or
sub
adc
fxch
sbb
add
les
sub
dec
pop
add
std
inc
mov
movsl
and
xchg
jae
pop
xchg
stos
in
inc
out
jle
in
sub
mov
mov
sub
jp
inc
mov
popa
ds
add
push
mov
mov
shlb
and
icebp
inc
mov
mov
fcmovnb
and
mov
pop
xchg
xchg
fidivrs
mov
arpl
mov
bound
mov
loopne
ja
jge
inc
sbb
sbb
pop
inc
lods
roll
jno
cmpsl
sbb
jno
cwtl
inc
cmp
mov
push
loopne
test
pop
mov
and
call
sahf
push
xor
pop
in
in
fdivl
fsubr
adc
xchg
xchg
movb
outsb
sub
cmp
test
out
je
dec
inc
cwtl
and
test
inc
in
loope
movsl
ss
adc
or
jle
sub
pop
mov
addl
jg
inc
rclb
xchg
ss
mov
inc
ret
dec
jbe
or
cltd
stos
inc
lock
popa
mov
fsts
and
and
push
mov
mov
leave
push
mov
ja
cs
push
ret
fnsave
adc
test
or
push
fldt
arpl
jl
lret
or
hlt
dec
es
adc
gs
dec
xor
in
cmp
jno
flds
leave
mov
pop
mov
dec
cltd
mov
repnz
rclb
outsb
sbb
insb
xor
out
rol
pop
add
lds
push
sbb
fbld
pop
sahf
repnz
sbb
lret
push
gs
outsb
inc
jo
js
pop
int3
sub
and
outsb
sbbl
jp
or
shlb
pop
lar
and
pop
push
pop
jmp
inc
es
aas
negb
rcrb
inc
test
dec
jno
insl
iret
fwait
sub
loop
testl
cmc
cmpsl
fldt
rcll
js
adc
xor
enter
vsqrtss
mov
xor
sub
enter
int
jmp
mov
inc
jae
imul
mov
jnp
stc
scas
test
mov
push
jl
cmpsb
addl
xchg
repnz
and
dec
and
gs
xchg
std
add
ss
pop
into
push
int3
test
hlt
mov
sbb
shrl
out
and
xchg
daa
add
sub
mov
aaa
aaa
mov
mov
andb
test
inc
cmp
fcomi
paddusb
jecxz
orb
rolb
jg
bound
lock
mov
jle
inc
adc
ds
push
sub
push
dec
mov
std
pop
call
std
stc
loopne
out
add
inc
cmovnp
pop
push
mov
jmp
mov
adc
sbb
push
mov
jp
loope
int
mov
aas
jb
test
mov
gs
les
inc
mov
lock
jecxz
addl
xchg
aad
out
push
clc
or
sbb
add
or
and
cld
mov
dec
mov
cmp
jge
mov
push
mov
dec
loop
sbb
xchg
nop
xchg
sbb
lcall
ret
jle
cmc
sahf
loopne
mov
movsb
notl
inc
mov
sub
lods
sti
xchg
xchg
mov
dec
fwait
popl
ljmp
nop
sub
sbb
dec
mov
jle
jmp
dec
shrb
dec
push
lods
sub
into
push
ds
stos
inc
mov
jl
call
mov
xor
idiv
enter
or
pushf
mov
fsubrl
cmpsl
repnz
and
lock
mov
push
inc
shll
popf
xlat
mov
cmp
mov
std
mov
lods
pop
jne
jb
mov
fwait
jl
call
out
adc
loopne
andb
sub
dec
lahf
inc
cmp
mov
cmpsb
xchg
mov
pushf
xchg
mov
sarl
int
in
mov
lcall
mov
mov
push
out
je
dec
xor
lret
out
inc
lret
jp
pop
push
push
loopne
insb
adc
divb
adc
pop
and
xchg
dec
out
enter
sub
mov
aam
sbb
dec
jnp
cmpsl
jle
ret
adc
cmpsb
xchg
mov
rcrb
xchg
es
adc
or
iret
pop
lock
aas
leave
popl
jae
dec
inc
adc
js
add
or
into
out
std
test
bound
jmp
fmuls
or
idivl
and
push
enter
or
idivb
bound
iret
fwait
inc
fldl
xchg
add
lock
arpl
add
add
or
sub
out
xchg
aad
push
xor
and
push
sbb
popf
push
jp
mov
cs
ljmp
cmpsl
dec
push
mov
xor
js
add
andl
jg
pop
cmp
xor
mov
lds
sub
mov
inc
pop
push
pop
fwait
push
pusha
sbb
mov
jb
out
inc
xor
sub
and
call
or
xchg
jl
mov
movsb
or
in
es
sub
push
adc
pop
xchg
push
jbe
jge
rcl
aam
mov
in
inc
pushf
pop
mov
sub
movsl
pop
pop
iret
or
cmp
hlt
rclb
int
xor
mov
subl
imul
push
inc
cwtl
fwait
rclb
icebp
and
xchg
mov
pop
cmp
xor
jbe,pt
ljmp
pusha
out
insb
dec
and
in
mov
popf
xor
fadds
dec
cmp
loop
ret
inc
jbe
xlat
inc
sbb
xchg
ret
xchg
pop
add
fdivrs
jge
lahf
jg
cmpsl
mov
xchg
and
mov
test
mov
orb
iret
sbb
xor
jae
push
mov
je
sbb
sbb
popf
in
testb
adc
rol
mov
in
cwtl
inc
cmpsl
icebp
movsb
jnp
icebp
mov
mov
dec
push
fildll
loope
push
jnp
xchg
sub
xchg
lahf
adc
or
add
adc
pop
cmp
dec
sbb
testl
andl
test
in
bound
out
mov
push
arpl
cmp
ljmp
sub
and
icebp
mov
inc
ret
push
cmp
es
enter
push
mov
xor
cmp
jge
jb
addb
mov
jns
dec
imul
loope
sub
ljmp
sub
push
shrl
and
mov
xchg
mov
push
mov
enter
fistps
mov
ret
push
jmp
inc
pop
cmp
or
or
mov
incl
out
lar
or
in
loopne
in
clc
and
mov
cmpb
xchg
mov
cmp
inc
shlb
js
test
shll
in
push
push
insb
xor
clc
cmp
mov
inc
daa
dec
cmp
jg
cmp
mul
push
daa
push
mov
inc
fstl
mov
dec
push
cmp
cmp
inc
repnz
pop
mov
inc
out
out
hlt
mov
test
add
jg
cmp
loope
clc
or
mov
and
lock
dec
cmp
notl
sbb
jp
out
dec
daa
scas
jne
cli
test
das
add
cmp
xor
mov
aas
push
cmpsb
enter
or
push
pop
fwait
aam
add
fbstp
cmp
stos
mov
fstps
shll
mov
test
imul
mov
jge
dec
lods
sbb
mov
shlb
xchg
fs
jle
aas
pushf
mov
cmpsb
pop
mov
xor
xchg
push
lods
divl
adc
or
push
or
fwait
insl
mov
jle
ljmp
push
imul
fwait
rclb
jle
adc
int3
dec
pop
pop
mov
scas
adc
test
ljmp
sbb
xchg
dec
and
sbb
sub
xor
icebp
sub
mov
xor
lcall
xchg
fisubrs
jecxz
push
testb
cmp
inc
fld
jp
ja
cwtl
aaa
shll
push
pop
add
or
jl
mov
pop
inc
sub
iret
mov
mov
enter
mov
jmp
outsb
xchg
jl
cmp
cmc
inc
add
lret
mov
mov
fcoms
dec
xor
fdivrl
mov
shlb
xchg
dec
sub
mov
sbb
outsb
pushf
push
arpl
xor
cmp
pop
scas
sbb
push
outsb
and
jns
fisttps
cli
fdivs
jo
push
ljmp
aam
mov
fidivrl
lahf
pusha
or
dec
sub
and
pop
call
jp
and
inc
js
je
mov
jb
or
loopne
push
push
shlb
pop
xchg
sbb
pop
xchg
jl
cmp
mov
addr16
pop
shll
push
cltd
popf
arpl
mov
pop
adc
test
sarb
push
add
ss
or
test
popf
push
stc
xchg
sub
inc
insb
pusha
arpl
in
faddl
mov
jp
shr
adc
cmpsb
xor
bound
incl
cmp
ret
inc
xchg
shlb
test
adc
test
out
xchg
arpl
popl
inc
pop
jmp
jl
sti
jecxz
dec
mov
lods
movsb
es
inc
adcl
mov
daa
cmpsl
dec
lods
add
stc
icebp
pop
fs
out
xor
fisubrl
aaa
sub
ficoml
xor
pop
sub
cld
xor
mov
cli
out
push
or
adc
push
test
xchg
int3
cmp
in
outsl
sbb
sub
xchg
call
pop
jle
jns
sub
mov
adc
icebp
lds
ret
shll
aam
ror
clc
enter
daa
jbe
cmp
pop
pop
sbb
pop
sub
mov
push
int3
pop
pop
stos
push
call
push
jmp
inc
movsb
cmp
jnp
jne
dec
pushf
jnp
lds
jle
jmp
inc
rclb
nop
pop
jmp
push
insb
pop
aas
jmp
mov
fstpt
jno
mov
js
jbe
subl
mov
mov
xchg
and
jl
sub
out
ret
pop
std
add
mov
jp
int
sbb
push
std
addr16
mov
pop
aas
push
jb
mov
loope
jmp
push
cs
cmp
bound
adcl
dec
or
inc
movsl
push
inc
xlat
movsb
or
lahf
aas
push
add
push
dec
out
addr16
das
lahf
data16
add
xchg
add
xchg
subl
sahf
pushf
xor
add
sbb
scas
ret
in
adc
fldt
pop
push
cmp
cmp
adc
jl
int3
subl
imulb
push
pushf
dec
pop
aas
cmp
xor
jp
pop
lds
sti
test
lods
enter
or
ja
pop
xchg
xchg
clc
nop
add
mov
mov
gs
push
cltd
aam
insb
lret
lcall
daa
lea
add
fadds
mov
or
insb
aad
lods
shl
lahf
xor
push
bound
pop
dec
sub
mov
inc
sarl
mov
pushf
add
dec
sbb
decl
std
insl
lods
cmp
int
sub
or
xor
stos
xchg
test
in
outsb
in
xchg
and
cmp
jmp
fnsave
mov
push
add
movsb
aam
add
mov
stos
pusha
iret
sbb
dec
dec
lods
cmp
push
mov
mov
mov
jp
jge
test
sub
ss
pop
shl
pop
jle
or
nop
aas
in
push
lods
arpl
sbb
in
ja
sub
mov
xlat
fists
jb
xchg
inc
xor
push
sub
xchg
or
sbb
cmpb
lahf
mov
nop
sub
adc
jecxz
je
jp
and
inc
xchg
sbb
sbb
repz
adc
push
or
std
mov
test
xor
xchg
das
cmp
adc
cmp
inc
lds
dec
js
pop
cltd
loopne
das
xor
mov
dec
lods
xor
ds
arpl
aas
xor
test
fcoml
and
mov
lds
pop
lods
cmp
and
sub
enter
sub
mov
hlt
js
in
pop
mov
jp
cmp
pop
sub
add
scas
cmp
enter
mov
movsl
sub
mov
and
jo
sbb
int
cmpsb
cmpsb
push
mov
sbb
orl
call
jecxz
inc
sub
or
fisubrl
cmp
mov
xchg
movl
or
cld
shl
fistpl
aam
jg
stc
addl
pusha
push
cs
add
imul
adcb
cli
repz
testb
jo
jl
sti
js
jmp
cmp
inc
aas
add
or
sbb
mov
mov
sbb
dec
cmpsl
int
aam
stc
cmp
push
aas
stos
fistpll
pop
pop
cld
xor
sub
test
xchg
enter
sub
inc
pop
test
sbb
adc
xchg
jl
xchg
les
xor
inc
xchg
pop
in
pop
shlb
mov
dec
subb
insl
or
fdivrl
pop
mov
xor
xor
jmp
mov
mov
lcall
lret
aam
sbb
fldenv
fsubp
test
xchg
xchg
mov
add
add
addr16
shlb
lret
iret
shlb
ja
sti
daa
sub
xchg
xor
test
push
fnsave
lcall
orb
push
sarb
out
in
scas
sub
ret
incl
inc
mov
clc
pop
pop
lods
sub
push
shrl
repnz
jae
inc
shrb
or
lcall
test
std
mov
sub
add
neg
fucomp
inc
sbb
outsb
inc
ja
xor
pop
mov
sarb
cmpsb
add
xchg
pusha
ds
mov
cmp
ficomps
dec
pop
xor
addr16
fisubrs
test
popf
shlb
inc
inc
pushf
iret
fistpll
aas
jmp
jae
inc
mov
push
or
lret
inc
in
sbb
lret
add
or
mov
fadd
cmp
and
sbb
fcompl
push
sbb
xlat
mov
cwtl
lea
push
movsl
lods
sbbb
test
pmaxsw
jmp
or
rorl
xchg
sbb
push
mov
xchg
pop
sub
inc
out
or
icebp
inc
loopne
test
mov
push
pop
pop
fldcw
mov
cli
xor
push
jae
sub
inc
dec
add
mov
jne
cmp
rcr
es
std
shlb
fs
filds
xchg
inc
out
daa
test
mov
data16
jp
test
arpl
vmwrite
mov
cmc
imul
sbb
test
xor
mov
pop
imull
and
cmp
xchg
jecxz
pop
stos
dec
in
stc
cltd
out
and
jae
out
mov
and
mov
sub
pop
add
scas
jl
rcl
xlat
add
sahf
xor
and
sbb
or
aam
dec
mov
cltd
dec
xchg
sti
or
cmovb
xor
pop
push
push
adc
add
repnz
out
std
dec
adc
mov
xor
imul
pop
adc
pop
fcmovbe
cmpsb
lds
cmp
out
fisttps
jno
push
in
push
push
jae
imul
inc
shlb
icebp
add
push
pop
push
sub
push
in
push
cmp
add
dec
inc
popf
mov
or
in
sahf
xchg
sub
outsb
push
pop
cmp
cmpsb
inc
mov
loopne
lods
test
dec
add
lret
or
xchg
sub
lahf
push
xchg
sbb
mov
pop
out
insl
adc
popa
cmp
loopne
rcl
jg
clc
ds
inc
adcb
cmp
fidivrs
lock
lcall
xchg
rol
or
iret
orb
mov
addr16
faddl
in
mov
mov
loope
pop
and
cltd
setle
add
sbb
inc
stos
lods
lea
inc
decb
inc
pop
or
pop
jnp
icebp
jp
inc
pop
lahf
cmp
lods
cwtl
dec
pop
fistpll
xchg
jo
xchg
cmpsl
xchg
add
loop
movsb
lds
xlat
jg
jae
sarb
push
je
sub
out
dec
test
in
dec
pushf
addr16
sti
ret
into
mov
cmc
cld
fstp
pop
out
and
bound
lods
ret
aas
ret
xchg
cmp
je
es
xchg
iret
ljmp
aad
sbb
ret
cmp
mov
push
test
and
ja
mov
cltd
fwait
pop
idiv
or
pop
sbb
rcrb
fsub
and
clc
sarb
lods
faddp
test
push
test
in
leave
sbb
push
push
lea
inc
cld
aaa
sti
add
adc
sbb
popf
push
cmp
insb
adc
lret
popf
hlt
push
jae
mov
int
dec
mov
push
adcl
addl
or
outsl
ret
test
shlb
ljmp
push
xchg
jp
shr
lahf
orl
arpl
xchg
inc
jl
ret
xchg
shrl
stos
das
lret
sub
fwait
orl
es
or
hlt
jnp
sbb
mov
pop
jl
inc
pop
cmpl
sub
mov
sub
fwait
xchg
mov
cmpsl
mov
or
pop
sub
sub
or
lods
popf
je
in
mov
push
movb
mov
jno
push
cwtl
outsl
pop
or
scas
mov
xor
fnstenv
cmp
xchg
sub
jg
pop
ljmp
test
xor
lcall
ss
lret
ljmp
es
fbld
out
sub
repnz
adc
or
mov
mov
pop
mov
out
outsb
in
stos
xchg
adc
and
outsb
mov
stos
or
and
lock
mov
cld
pop
bound
push
test
mov
iret
aas
jmp
repz
loope
adc
or
or
mov
or
fbld
pop
pop
out
movsb
dec
bound
pop
fs
jg
pop
fadds
arpl
push
popf
leave
sbb
or
leave
mov
lret
das
lea
popf
jl
xor
in
pop
test
mov
mov
jecxz
lret
in
scas
and
cmp
in
scas
push
inc
xor
push
int3
cmp
icebp
dec
mov
pop
mov
ljmp
test
pop
dec
add
hlt
dec
add
push
sub
std
jmp
outsl
jg
mov
mov
leave
stc
xor
sub
loope
mov
icebp
jnp
lcall
lea
lahf
shlb
sarl
out
mov
mov
orb
scas
jb
lahf
mov
insl
jne
jo
neg
or
test
pop
jp
pop
jb
jg
dec
outsl
dec
push
sub
ds
hlt
das
xor
or
fucomip
adc
loope
lods
mov
add
xor
push
popa
mov
into
add
repnz
cli
push
popa
xor
mov
pusha
or
sub
xor
sahf
inc
inc
pop
sahf
pop
adc
xor
mov
nop
fwait
pop
dec
mov
push
fwait
and
iret
mov
xchg
loopne
or
in
sbb
movsl
out
xchg
or
mov
divps
in
sbbl
or
ret
inc
lds
sbb
xchg
pop
xlat
sub
adc
lock
lret
and
stc
push
cmpsb
or
sarb
xor
scas
scas
pop
aam
stos
push
stc
cmp
jmp
mov
in
adc
sub
jl
daa
xorl
rolb
mov
mov
idiv
roll
jp
stc
and
mov
inc
dec
xor
xchg
and
hlt
jp
push
mov
jo
imul
jecxz
in
xchg
je
cmp
pop
insb
jl
adc
mov
add
mov
adc
dec
xchg
mov
mov
mov
push
rorb
mov
out
push
sahf
icebp
in
xchg
mov
fisttpl
mov
inc
mov
call
inc
fidivrl
xchg
xchg
addr16
leave
lret
mov
jnp
jo
and
lea
fs
in
cmp
in
leave
and
in
inc
das
lods
cmpsl
inc
cli
pop
mov
out
fsubrs
in
jnp
or
and
and
ret
loope
mov
lret
or
xchg
imul
popa
or
sub
mov
das
addb
ljmp
sbb
and
mov
mov
push
loop
icebp
pop
add
dec
bound
lahf
inc
and
and
sbb
cmp
jg
push
sbb
mov
and
xchg
cmp
popa
pop
push
es
or
leave
fsubrs
insb
lret
push
xchg
mov
idivb
mov
cmc
push
push
loop
lods
sbb
jp
shll
fiaddl
mov
inc
lods
dec
xchg
insb
xor
mov
notb
ret
lods
pop
xor
add
scas
dec
mov
notb
std
pop
lods
pop
and
dec
dec
mov
ss
into
lock
xchg
adc
aaa
dec
xchg
sbb
cmp
sub
or
jg
sbb
push
and
adc
dec
imul
jle
hlt
mov
xchg
inc
mov
loopne
pop
subb
mov
sbb
pop
data16
push
mulb
hlt
add
out
out
addl
xchg
les
ret
mov
leave
mov
inc
xorps
cmp
sbb
adc
outsb
cmp
popf
xor
cmp
not
in
or
rcr
xor
clc
cmp
sbb
and
dec
pop
rcl
mov
dec
ljmp
cmc
in
call
push
push
pop
xor
and
push
idivl
pushf
or
cmc
add
mov
push
stos
fidivrl
loope
fwait
int3
into
xchg
push
sub
cmp
dec
mov
insb
mov
and
out
sbb
jge
sbb
mov
mov
mov
cld
mov
arpl
and
fidivrs
inc
push
lcall
addr16
es
mov
ds
ja
mov
jo
scas
repz
mov
cmpsb
rcl
movsb
icebp
pop
jns
inc
lds
mov
xor
jl
mov
sub
lock
sti
jge
ret
sbb
xchg
loop
fsubrl
out
sahf
js
dec
sub
jge
jb
mov
clc
in
push
sti
push
pop
and
jo
lods
push
aaa
push
std
ret
in
jl
ds
push
xor
xor
xchg
cs
jbe
xchg
dec
popa
mov
mov
cwtl
adc
mov
sub
ffree
out
sbb
or
pop
loop
aaa
pop
imul
addl
adc
roll
mov
loope
loop
or
push
mov
xchg
divb
and
lret
in
and
xchg
xchg
sub
mov
mov
push
mov
test
aam
jo
pop
repnz
mov
cmp
mov
jnp
fs
int
add
mov
sub
js
out
or
and
inc
and
daa
in
mov
daa
inc
xchg
add
int3
adc
sub
jne,pn
cwtl
das
push
fidivs
dec
fistpll
xor
faddl
mov
jl
and
inc
je
adc
lahf
aad
imul
mov
in
dec
test
stc
sub
push
insl
mov
out
cmp
test
arpl
test
mov
cltd
roll
and
or
push
jae
pop
fcomi
mov
loop
imul
cmp
pop
loop
roll
xor
add
dec
xchg
mov
inc
cmp
pop
lahf
mov
neg
cwtl
sbb
repnz
inc
push
fsubr
sti
mov
or
jb
mov
aaa
sbb
inc
popa
xchg
insb
add
push
cmp
ljmp
xchg
rolb
mov
hlt
inc
cmpsl
xchg
daa
cmp
inc
dec
push
shll
js
jae
mov
int3
dec
pop
inc
mov
jno
popf
outsb
loopne
inc
sub
mov
mov
sub
adc
jmp
sbbl
or
xchg
mov
push
out
test
call
jmp
das
bt
pop
out
jns
cli
mov
out
inc
jge
and
popf
mov
xchg
inc
jns
xor
xchg
adc
lcall
je
xchg
ljmp
lret
mov
and
cmpsl
call
int3
movsb
out
pop
stos
mov
push
out
mov
addr16
movsl
mov
sub
ret
cli
inc
xchg
xor
add
xchg
adc
push
push
xchg
shrl
ret
bound
es
sub
mov
mov
movsb
test
dec
outsl
and
int3
jp
sbb
mov
gs
fwait
daa
cs
mov
and
pop
jnp
outsl
insb
cmpsb
mov
fsin
sbb
ja
pop
sbb
bound
pop
cmp
imul
cmp
das
lcall
mov
pop
inc
icebp
push
sbb
dec
add
rcrb
movsl
pop
test
mov
push
jmp
fwait
sbb
push
loopne
lret
test
mov
push
mov
add
js
add
or
dec
and
int
in
sbb
gs
mov
lds
xchg
inc
loop
js
ljmp
scas
dec
dec
push
insb
jae
jg
inc
clc
inc
insl
mov
sub
incl
add
add
cwtl
bound
sub
push
push
pop
ret
inc
cmp
sub
adcb
sbb
ljmp
rol
adc
mulb
adc
pop
sar
clc
mov
leave
xchg
push
adc
jmp
scas
fisubrl
dec
outsl
test
mov
fdivrp
aaa
xor
addb
add
and
sub
sub
mull
jne
dec
cmp
stos
mov
test
das
sbb
movsl
lock
xchg
test
aad
cmpsb
rclb
adc
js
and
mov
xchg
pop
and
imul
add
push
mov
testb
cmp
filds
test
into
adc
xchg
call
or
push
push
sub
std
int
push
lods
ljmp
sti
mov
dec
dec
cmp
loop
and
sbb
js
popa
xlat
out
roll
jb
mov
mov
xor
push
imull
inc
jnp
sbb
movsb
mov
jno
or
aad
mov
pop
add
dec
xchg
pop
push
push
sbb
inc
repz
test
testb
lret
mov
xchg
pop
jmp
push
xchg
xchg
stc
adc
movsb
inc
push
fldenv
or
add
sbb
xchg
sub
movsb
lds
repnz
ds
fbld
jp
inc
mov
dec
xchg
or
call
into
cld
xchg
int
mov
orb
xchg
mov
jmp
xor
enter
pop
push
jnp
dec
adc
out
fucomi
sahf
cld
subl
ss
into
cld
ds
dec
push
add
xor
pop
push
jg
mov
jle
outsb
cltd
fisttpll
sbb
sbb
and
jge
data16
pop
mov
int
add
dec
inc
add
and
data16
pop
imulb
rcr
lret
push
notl
cmpsb
stos
in
test
sub
clc
jle
and
jno
lcall
sub
inc
mov
inc
inc
xor
xchg
push
fadd
mov
xchg
and
rcll
pop
cmp
ss
push
jns,pn
sub
mov
cs
mov
out
rcl
std
daa
mov
mov
sbbl
pop
lcall
mov
mov
jo
enter
sub
push
xchg
aam
sbb
gs
shlb
inc
adc
and
cmp
pop
mov
sbb
arpl
pusha
dec
gs
xchg
imul
rorl
xor
mov
inc
xor
daa
xchg
jl
mov
pop
icebp
inc
popa
push
and
mov
inc
das
mov
pop
mov
repz
sub
xor
inc
pop
add
fdivrs
pop
and
out
cmp
ja
mov
xor
jl
inc
adc
jg
xor
cmp
mov
out
jecxz
les
mov
xchg
jmp
push
mov
stos
sub
add
in
adc
pop
jb
mov
lret
mov
pop
push
fimull
jae
inc
fidivl
aad
xchg
mov
stos
movsb
sub
inc
jp
mov
xor
loop
fimull
pop
shlb
bound
or
inc
insb
ljmp
jnp
or
scas
adc
addb
int
sbb
in
repz
imul
xchg
into
data16
sahf
psubd
push
jg
cwtl
ds
inc
in
inc
sahf
mov
rcrl
xor
out
dec
mov
iret
jmp
repz
addr16
fstl
add
sbb
adc
punpcklbw
jg
jg
out
sbb
aad
loopne
mov
mov
mov
adc
cmp
decb
out
divl
out
jne
pop
loopne
sti
das
mov
jl
adc
jb
mov
sub
cmp
push
fidivl
sbb
ss
mov
sub
mov
push
mov
test
outsl
ja
pop
jecxz
pcmpgtd
aaa
lret
fdivs
aas
dec
dec
sti
ss
sbb
dec
scas
repnz
and
sub
ret
mov
mov
sbb
xchg
insl
push
xor
js
jp
xchg
icebp
je
ficoms
xlat
add
pop
mov
fiaddl
inc
jmp
mov
xor
fsubl
xchg
push
scas
shrb
insl
pop
fcomp
cmp
or
mov
cmp
pop
filds
sub
mov
mov
imul
mov
push
call
pop
xchg
xor
inc
fildll
push
jnp
pop
dec
xor
adc
addr16
insl
jge
xor
add
and
shlb
pop
sub
lret
lret
mov
sub
or
out
inc
and
jbe
scas
aam
movsl
sbb
clc
scas
mov
mov
xor
neg
cld
andl
pusha
pushf
in
jae
jmp
hlt
lds
sub
xorl
imull
mov
mov
jne
inc
xor
jge
or
imul
mov
inc
add
popf
xor
in
sub
fisttpl
dec
sub
or
inc
pushl
inc
clc
push
imul
aam
std
es
jno
adc
arpl
leave
addr16
ret
int
jecxz
test
cmpb
cmp
pushf
addr16
in
cltd
movl
hlt
inc
sbb
data16
mov
cld
stc
shll
out
movsb
movsl
or
jne
test
mov
popf
pop
mov
or
int
jae
adc
in
mov
addr16
sti
aam
jns
data16
outsb
cmp
adc
pop
arpl
mov
cltd
pop
repnz
int3
jl
mov
and
insl
fdivrl
out
movsb
lds
push
adc
rcl
roll
and
scas
dec
jmp
or
inc
test
adc
xchg
mov
leave
sub
fnstsw
movsl
mov
jp
and
dec
ja
add
lods
in
rcr
nop
inc
imul
lcall
inc
inc
out
movq
mov
loopne
pop
mov
stos
das
sbb
pop
mov
xor
int3
arpl
jo
cmc
fidivl
and
notl
js
mov
mov
rorb
gs
jb
jl
xchg
lret
jle
and
inc
repnz
call
lock
fwait
es
xchg
xorb
xchg
loop
adc
add
mul
sbb
xor
push
in
push
jne
xchg
or
mov
data16
push
xor
inc
sub
xchg
adc
lret
dec
ss
jmp
fidivrs
mov
adc
sarl
sub
add
xor
jmp
adc
or
mov
les
pop
pusha
mov
xorb
mul
mov
stc
pop
outsl
xor
sti
out
test
push
sub
rcrl
in
call
sub
mov
lahf
sub
insl
adcb
outsl
add
pop
stc
cli
pop
mov
stos
sarl
cmp
out
xchg
mov
jle
out
adcl
xlat
pop
les
dec
xchg
arpl
stc
xor
stos
mulb
pop
mov
out
in
add
les
dec
push
jnp
scas
xchg
adc
mov
rclb
inc
lret
xorb
bound
lret
mov
mov
scas
mov
jmp
imul
test
cmp
and
push
out
cs
ret
sti
cld
xchg
daa
mov
or
les
in
cltd
pop
adc
mov
sbb
ja
movsl
lods
lahf
insl
adcl
push
daa
xchg
push
cmpsl
jb
lds
and
sahf
data16
xchg
daa
dec
mov
fsubr
daa
mov
inc
addps
test
cwtl
xor
cwtl
insb
mov
fistps
pusha
pusha
leave
test
out
mov
cmp
movsl
mov
pop
sar
insb
xor
mov
mov
push
mov
in
adc
dec
addr16
push
dec
pop
push
mov
test
outsb
daa
mov
and
xorb
inc
sti
int
int
pop
ficompl
in
lahf
sub
cmpsl
fucom
ds
xor
mov
adc
jl
rcrl
mov
test
mulb
dec
xchg
outsl
mov
out
sub
js
add
pop
cmpsl
pop
cmpsb
imul
dec
cltd
mov
out
cmp
sub
inc
pop
bound
setbe
daa
mov
imul
hlt
in
xchg
inc
xlat
jbe
lods
jecxz
mov
xor
sub
mov
imul
jmp
dec
lock
inc
stos
mov
pushf
aad
jle
jae
out
push
adc
sti
cmp
jb
push
ljmp
or
jae
test
xchg
xchg
push
push
jnp
fildll
and
mov
mov
lret
inc
cmpl
pop
sti
rcll
sub
cmp
inc
adc
sub
repz
or
sarl
cmp
mov
insl
adc
addr16
iret
test
jns
mov
xor
sbb
pop
lret
and
addl
push
movsb
pusha
imul
addl
pop
sahf
hlt
adc
call
in
or
es
mov
add
test
xor
sub
dec
xor
lcall
dec
inc
inc
xlat
out
rolb
or
incb
mov
jb
repnz
in
cmp
test
loope
ficoms
popf
adc
adc
popa
aam
cmc
sbb
in
inc
sahf
xchg
in
inc
sub
mov
or
ror
in
out
popa
sub
lret
cmpsb
push
lret
jmp
pop
mov
mov
int3
sbb
test
xchg
lret
int
mov
shlb
mov
aad
adc
outsl
sbb
mov
sarb
bound
inc
mov
lcall
xchg
test
adc
mov
pop
cmpsl
in
push
jl
daa
xchg
js
push
call
mov
jle
jno
push
ss
imul
sub
push
fwait
add
mov
xlat
test
add
dec
xchg
out
bound
xchg
push
add
sub
pop
iret
out
xchg
dec
insl
add
and
fcomip
adc
pop
push
inc
adc
push
xor
loope
insl
push
and
jnp
dec
mov
test
repnz
or
scas
test
and
xor
inc
mov
fwait
jns
push
jb
add
gs
mov
lods
mov
xor
das
inc
cli
mov
lcall
xor
das
fstl
addl
xchg
xor
xchg
arpl
std
popa
cwtl
jne
hlt
sub
jle
push
adcl
add
dec
popa
sub
xchg
jge
mov
popa
dec
imul
enter
adc
mov
mov
cmpsl
leave
fcomp
fiadds
sar
lret
imul
test
fisttps
add
jg
rclb
nop
inc
lcall
loope
jbe
xlat
das
mov
lret
lret
push
in
lret
xchg
cmp
xchg
ljmp
pop
fdivp
pop
add
mov
push
dec
testb
leave
xor
pop
ljmp
pop
rclb
mov
lahf
adc
pop
sbb
pop
mov
fmull
test
adc
gs
pop
dec
sarl
jns
jmp
push
or
in
mov
scas
out
add
jp
cmc
push
call
mov
xor
dec
lock
push
cwtl
shlb
mulb
or
nop
lds
jae
or
cld
insl
push
or
fists
js
xor
aam
into
dec
sub
sub
sub
jae
jl
aam
add
shrb
pop
lret
add
xchg
push
aam
add
jne
sbb
stc
xlat
and
test
sbb
mov
xchg
pop
cmp
jmp
pushl
loopne
sbb
pop
jbe
xor
add
xlat
push
sbb
scas
dec
mov
in
outsb
ror
or
or
rclb
negb
cmp
out
sub
mov
jmp
xor
nop
and
dec
xchg
add
pop
cld
rorb
mov
mov
leave
jo
push
stos
adc
in
mov
daa
ljmp
sub
sbb
pop
dec
jecxz
adc
insl
and
mov
out
mov
pop
test
pop
in
xchg
pop
jno
arpl
ja
in
xorb
mov
add
mov
jecxz
hlt
add
fsubl
inc
sbb
and
mov
ljmp
ret
aas
or
fcomps
in
cmc
outsl
shrl
push
dec
bound
cltd
mov
add
jmp
aaa
xchg
or
xor
cltd
xchg
ja
divl
in
dec
call
pop
test
sarl
xchg
mov
rcr
cmp
into
or
fadds
addl
sahf
inc
push
xlat
sbb
mov
lea
jns
orl
mov
loope
cld
rcr
out
sbb
int
mov
stc
lods
xor
mov
les
fdivrl
pushf
dec
pushf
mov
arpl
aas
mov
jo
pop
push
mov
popf
mov
popa
add
in
cwtl
out
test
or
mov
inc
or
cmp
xchg
cmp
lds
or
dec
push
aaa
add
je
sub
sbb
aaa
add
cmp
adc
in
fnstcw
cmp
or
cmp
leave
cli
addr16
push
sub
pop
xchg
iret
movsl
mov
inc
xchg
mov
xchg
fdivl
jb
stos
inc
fs
mov
push
jb
jne
push
add
in
push
adc
das
imulb
xchg
insw
sbb
hlt
xchg
or
popf
pop
loop
test
lock
mov
push
cmp
push
insl
jo
push
ss
mov
mulb
and
gs
xlat
lods
mov
leave
sbb
sub
dec
push
lds
adc
rcrl
fstps
mov
jae
adc
dec
bound
pusha
adc
cmp
ds
call
test
xchg
mov
or
je
in
push
daa
lret
lock
mov
jmp
add
je
lret
mov
jae
cs
imul
dec
out
mov
loope
insl
push
jecxz
mov
in
mov
and
add
cli
data16
fidivrs
outsl
int
mov
sub
loope
mov
adcl
aas
aam
fsubs
scas
jg
stc
adc
mov
xchg
or
or
xor
pop
and
push
cld
push
mov
sub
jge
test
xor
mov
jnp
lock
ficoml
loop
mov
ja
insb
and
xor
imul
pushf
cli
pop
rcr
dec
and
int3
cmp
inc
xchg
fs
or
ret
sbb
in
rolb
xchg
xchg
push
scas
and
fistpl
jae
cmp
xchg
test
xor
rcrl
sbb
cmp
inc
add
push
out
loopne
int
mov
addr16
decb
and
sub
sub
cmp
inc
mov
add
lea
popa
sar
adc
dec
inc
lret
loop
scas
and
or
add
mov
into
add
xor
sub
fincstp
jge
inc
lahf
or
xor
mov
jnp
imul
push
pop
mov
loopne
fmull
shll
pushf
fidivs
sbbb
and
xchg
jmp
outsl
lret
fisttpl
push
pop
aaa
xorb
fwait
outsb
adc
fucomip
add
push
fcoms
mov
xor
out
sbb
rcrb
xchg
xor
inc
fiaddl
mov
popa
or
add
adc
rclb
shll
push
stos
mov
movsb
xchg
stc
fnsave
pop
adc
stos
sbb
imul
mov
xor
add
call
into
or
push
push
rcrb
outsb
out
outsl
jnp
movsb
adc
out
dec
test
movsl
adc
lods
jb
daa
push
pop
cwtl
push
sbb
jnp
sub
aad
adc
pushf
lock
arpl
add
xlat
mov
mov
mov
sbb
jns
jns
cltd
and
in
into
leave
bound
pop
inc
das
imul
inc
fdivs
cli
cmp
or
mov
inc
cmp
jge
pop
pop
jg
negl
fdivs
stos
inc
xor
sbb
clc
repz
mov
aaa
mov
push
shl
push
cli
mov
pop
int3
mov
sahf
mov
lret
push
mov
mov
xchg
iret
mov
inc
jbe
dec
jbe
cmpsl
inc
push
add
fcoms
xor
push
les
push
fcmovnb
dec
inc
nop
jg
sbb
jns
adc
or
ja
data16
fimull
jmp
or
int3
das
loop
push
push
wrmsr
shl
mov
cmc
outsb
outsb
mov
lcall
fwait
pop
xor
in
imull
stos
aam
sbb
nop
push
pop
fdivl
movsl
and
push
ret
mov
xchg
push
subb
es
pop
pushf
stc
sbb
mull
pop
pop
fnstcw
jg
sti
stos
in
jnp
pop
jl
mov
out
pop
adc
or
sbb
dec
ds
cmp
inc
mov
mov
mov
adc
out
and
mov
mov
in
sub
repnz
bound
dec
lret
fistps
sti
cmpsb
pop
xchg
ja
pop
adc
loope
loope
push
insl
push
push
dec
aad
lock
mov
adcb
iret
cmp
sahf
nop
loopne
aaa
mov
sub
out
dec
push
fs
stc
sub
jne
iret
jl
inc
push
pop
sbb
xor
add
cmpsl
rcrb
in
mov
ffree
and
mov
sbb
imul
pop
push
inc
jb
pop
dec
mov
xor
loop
dec
inc
fnsave
in
sahf
leave
mul
push
mul
jmp
fisttpl
lahf
xchg
or
stc
fwait
inc
imul
xlat
and
sbb
add
jmp
inc
scas
xchg
sub
int3
stos
mov
mov
out
push
jno
sub
mov
push
xchg
je
ja
mov
int
fwait
pop
ljmp
sbb
arpl
fdivrl
mov
mov
sub
inc
and
imul
sub
imull
in
jecxz
fwait
test
mov
movsb
arpl
jg
cmp
les
mov
add
cmpsb
add
xor
pushf
adc
inc
push
xor
insl
dec
in
addr16
adc
mov
icebp
lods
daa
jp
inc
sbb
sub
icebp
ficompl
pop
out
xor
add
sub
xor
in
xor
ds
mov
ds
scas
inc
cwtl
dec
sbb
mov
xor
mov
sbb
fcmovne
mov
cmpsb
leave
xor
jb
cli
int3
jge
sbb
xchg
mov
or
adc
adc
mov
push
push
inc
add
out
cmp
jg
adcl
sub
inc
scas
popf
adc
inc
dec
xorl
into
sub
outsl
int
push
jmp
and
test
push
int3
push
stos
mov
jnp
jp
out
imulb
push
call
inc
incl
sti
jmp
cmp
std
repnz
lahf
aas
rclb
mov
sbb
imul
jp
pextrw
mov
push
stos
jb
popa
imulb
sub
pop
das
push
sbb
repnz
cmp
mov
cmp
std
fiadds
cld
pop
pextrw
dec
push
dec
lea
sbb
cld
out
iret
fsubr
fisubrs
cmpsb
inc
mov
mov
mov
pop
cmpl
mov
data16
sbb
xor
jo
jp
imul
in
adc
popf
test
cmp
addl
leave
inc
das
lods
sub
fwait
sub
insl
inc
pop
adc
out
addl
xor
xchg
mov
mov
mov
shr
in
in
inc
mov
andl
push
lock
cs
mov
clc
sbb
push
mov
arpl
or
add
push
jecxz
xchg
in
into
or
jg
sbb
dec
imull
or
stc
es
push
test
dec
xor
fs
insl
mov
not
pop
xchg
mov
inc
rcr
dec
xchg
dec
lcall
mov
js
loopne
test
or
xlat
imul
in
pop
lods
enter
cld
nop
cs
or
mov
lds
xor
push
add
adc
adc
jno
or
jmp
test
popa
loope
leave
shll
mov
sar
js
or
dec
inc
and
mulb
dec
lret
mov
fimull
popf
pop
les
int3
cmp
pop
outsb
in
pop
xor
std
scas
mov
and
lret
std
jmp
test
mov
adc
mov
adc
pop
sub
cmpsb
sub
add
jl
int
inc
or
push
int3
add
inc
testl
sub
jns
cmp
or
cmp
and
push
jae
adc
lea
fistps
mov
aaa
loopne
popa
ficompl
add
into
sub
repz
gs
xorb
pop
stos
das
fimull
leave
insb
xor
mov
fmuls
pop
rorl
xor
jmp
cmp
lods
mov
adc
cmpsb
and
int
add
jl
jmp
and
inc
cmpsl
mov
fsubl
xchg
cmpsb
inc
in
jne
fwait
sub
mov
mov
fidivrl
xchg
lods
out
fwait
bound
out
xor
inc
and
inc
imulb
jl
jge
inc
lret
hlt
xlat
xor
inc
sti
push
fmuls
xlat
and
xor
cld
ret
cmp
or
ficoms
inc
jmp
adc
mov
dec
bound
mov
mov
mov
mov
cmc
mov
lcall
xchg
adcl
and
movsb
fwait
std
fdivs
int
outsl
stc
setl
scas
jo
dec
scas
hlt
in
push
mov
in
int3
popa
cmp
cmp
push
sub
or
rcl
inc
push
mov
mov
loopne
ret
sti
inc
in
cld
or
add
shrl
mov
nop
in
stos
test
imul
bound
cld
add
adc
sbb
add
jbe
loope
sub
fidivs
ds
mov
add
pop
mov
sahf
sbb
shl
aas
push
adc
ljmp
xchg
cmpsl
test
sub
or
xchg
pcmpgtw
dec
and
loop
mov
lret
jns
push
lock
addr16
mov
or
repz
enter
sbb
imul
cmpsl
push
jbe
out
inc
jne
ret
loope
pop
mov
lahf
xor
adc
in
lds
mov
lret
cwtl
adc
push
xchg
mov
mov
loop
mov
loop
neg
adc
imulb
icebp
fistpll
mov
mov
ret
imul
or
mov
inc
dec
push
js
dec
sbb
mov
mulb
data16
mov
mov
xchg
push
loopne
push
bound
sbb
pop
in
pop
rolw
dec
dec
mov
insl
push
dec
sub
mov
mov
xchg
int3
or
pusha
imul
outsl
inc
lret
out
subl
jle
sub
pop
xlat
ljmp
loop
xchg
and
loope
andb
inc
jno
inc
test
mov
push
jg
mov
sbb
jbe
movsl
xlat
xlat
xchg
cmp
outsb
push
xchg
add
fs
popf
cmpsb
push
hlt
dec
pop
xor
cmp
xor
sbb
fcoml
push
ja
or
sbb
add
jne
call
cmp
rorl
sarl
mov
xchg
xor
dec
inc
movsl
push
sub
and
iret
daa
adc
mov
cmp
leave
popf
jge
test
and
das
jne
outsl
sbb
data16
and
add
lret
movsb
stos
mov
into
rorl
je
in
mov
xor
int3
xchg
imul
and
xchg
test
add
out
stos
xchg
xor
push
shlb
cmpsb
xor
push
imul
inc
cmp
sbb
jl
and
dec
fs
jg
jnp
sarb
xchg
and
mov
jg
jge
cmc
sbb
mov
enter
jmp
pop
jmp
mov
fistpl
sbb
jnp
sub
jp
call
dec
jge
fsubrp
and
fwait
jae
pop
out
jno
lahf
mov
xchg
dec
mov
imul
push
xchg
sub
mov
ror
dec
leave
dec
push
es
push
ds
mov
lea
punpckhbw
outsl
fldt
xor
pop
mov
js
add
negb
shl
jmp
inc
mov
pop
sub
pop
fnsave
mov
in
inc
ret
loop
mov
mov
movsl
inc
mov
fs
cmp
iret
xchg
mov
xchg
in
pushl
jb
add
aas
clc
and
sti
xor
pop
ror
dec
sub
ljmp
fs
push
add
hlt
test
or
lea
lret
fistpl
rorb
adc
clc
test
push
test
push
sbb
aad
and
inc
jno
shll
mov
stos
sbb
fbstp
rorb
mov
addr16
std
mov
push
and
inc
mov
xorb
mov
dec
xchg
clc
sbb
cmpsb
push
jp
cmp
cmpsl
jmp
ljmp
mov
push
je
or
or
mov
jle,pt
xor
sbb
push
aad
mov
pop
imul
leave
push
mov
dec
fstps
cmpsb
mov
lahf
cmp
nop
loop
insl
fiaddl
adc
xor
loope
mov
cmpsb
push
inc
jne
aad
sahf
and
mov
subb
adc
pop
inc
jmp
test
clc
adcl
mov
pop
push
inc
cli
mov
jl
mov
adcb
mov
pop
scas
ds
cmc
dec
mov
jl
push
mov
loopne
cmp
shrb
pop
je
push
push
inc
adc
push
dec
bound
mov
iret
stc
divl
mov
popf
ljmp
mov
cmpsb
pushf
add
sbb
movsl
in
inc
out
mov
xor
lea
dec
outsb
jecxz
push
dec
adc
xlat
nop
and
ret
sti
movsl
incl
pusha
jle
and
lret
pop
jle
mov
fcmovnu
cmp
add
leave
jno
cmp
pop
jb
pop
loope
ds
movsb
rcrb
push
mov
jl
and
repz
jmp
fistps
pop
in
push
ljmp
hlt
xchg
decb
imul
mov
or
jle
jmp
mov
and
out
jno
push
sbb
pop
rep
sub
je
insb
add
push
movsl
movl
xchg
aad
outsb
das
fdivs
xor
cmpsl
stc
push
pop
test
push
xor
sbb
xchg
sub
loopne
sub
inc
adc
fimull
mov
cmpsb
scas
cmpsl
sub
imull
js
rclb
push
iret
adc
xor
xchg
push
pop
mov
sbb
pop
pop
xchg
cmp
cmp
or
jns
mov
and
dec
cs
jnp
xchg
test
repnz
dec
imul
fstpl
push
push
loope
lret
cmpsl
adc
fwait
inc
jg
dec
sbb
dec
dec
xchg
outsl
push
cmp
adc
out
je
jmp
adc
scas
push
iret
or
push
aam
inc
cmp
xchg
pop
jnp
ret
faddp
test
xor
lds
mov
ljmp
mov
loope
rcll
push
mov
dec
rorl
repz
pop
push
xor
filds
test
repz
push
push
cltd
push
enter
push
mov
dec
insl
ss
push
test
push
dec
adc
repz
adc
jl
in
outsb
in
or
sub
gs
aam
lods
insb
out
rol
push
mov
xchg
ja
or
lods
xchg
bound
xor
in
sidtl
lods
lock
out
mov
popf
jl
mov
gs
inc
cmp
cmp
fidivl
loop
sub
ret
leave
sub
pop
aam
ja
leave
hlt
cmp
loopne
decb
pop
jbe
out
mov
subb
in
ret
pop
add
pop
mov
in
sbb
mov
cli
inc
in
aas
add
ljmp
mov
inc
mov
ja
pop
lods
clc
nop
mov
mov
mov
xor
in
scas
int
pop
subl
inc
cmc
mov
mov
sub
jbe
xchg
clc
imul
je
mov
add
mov
push
sbb
inc
fists
int
cmc
cmc
pop
enter
iret
repz
xchg
outsb
fwait
cmp
cmp
jecxz
jb,pt
mov
and
mov
lret
cmp
pop
and
pop
mov
fcomip
movsl
idivl
in
jnp
shrl
dec
mov
stos
add
adc
sbb
scas
dec
std
dec
mov
adc
mov
mov
push
mov
aas
arpl
xchg
inc
add
mov
adc
xchg
sbb
std
jo
xchg
in
daa
xchg
lods
cmc
gs
ss
xchg
dec
jmp
push
add
jne
pusha
jbe
lods
scas
jne
push
out
lock
repz
or
push
xchg
clc
jb
mov
or
push
mov
xor
push
push
dec
pop
cld
jno
push
and
xchg
dec
ss
shll
into
fs
push
mov
les
imul
lret
scas
inc
arpl
gs
cmpsb
imul
mov
ds
jle
bsr
rep
inc
out
inc
idivl
movsl
in
mov
movsb
or
mov
clc
xchg
sbb
stos
xchg
mov
jnp
insl
shrl
cmpsb
xchg
xlat
in
loop
fadd
mov
jle
sbb
mov
xchg
jle
jne
cltd
adc
sub
lret
stos
push
fs
cmp
sub
sub
inc
rclb
cmp
lret
mov
aad
dec
and
clc
inc
cmp
jno
mov
push
jne
mov
lods
inc
cmp
lahf
notl
sti
or
adc
shlb
mov
lahf
dec
inc
add
ficomps
dec
es
xchg
insb
movsl
int
lcall
lds
push
push
xchg
int
jecxz
mov
mov
pushf
jne
cltd
les
mov
sbb
lods
std
sti
xor
pop
jge
mov
xchg
mov
lret
mov
sbb
sub
fimull
pop
fsts
jnp
xor
gs
push
aad
mov
dec
mov
fistpll
out
push
mov
test
fiadds
and
ret
rorb
push
pop
mov
fdivl
add
lds
test
nop
int
cwtl
daa
shr
or
mov
adc
add
xchg
test
or
mov
dec
adc
sub
std
movsb
cmp
push
push
cmp
xchg
fdivl
pop
and
mov
mov
repnz
sbb
outsl
cmp
jne
lds
mov
scas
sbb
hlt
adc
iret
pop
orl
mov
jle
jl
or
cld
sub
push
rcrb
cmp
in
mov
dec
fiadds
pop
pop
xchg
cmp
out
sbb
push
lret
mov
clc
fidivs
fistpl
dec
xchg
xchg
lea
cwtl
fdivrs
and
jp
pop
push
fcomi
add
clc
cli
xor
andl
fcoml
xchg
sti
stc
ret
mov
push
ret
adc
scas
es
dec
sub
lods
push
inc
andl
lods
js
fwait
xchg
xchg
sub
jb
fstp
mov
mov
daa
add
and
cwtl
pop
cmp
push
fadd
jmp
xor
cltd
ja
sbb
decl
rcr
insb
jmp
loop
stos
mov
call
je
push
mov
add
dec
cld
pop
mov
stc
add
test
sub
mov
cmpsl
sahf
dec
insl
stc
push
pop
not
lock
test
pusha
scas
ss
cs
mov
pusha
push
push
push
ficoms
std
jo
xor
sarb
push
jne
sbb
adc
outsl
loop
std
xor
ljmp
lods
sbb
jmp
sub
mov
into
add
pop
cmp
outsb
pop
aad
daa
mov
in
jo
lock
sti
hlt
dec
push
rolb
add
push
jnp
jo
mov
push
add
add
int3
outsl
xchg
pop
and
daa
xchg
dec
pop
push
movsb
adc
in
cmp
sahf
adc
jns
mov
scas
test
dec
cmp
add
mov
mov
je
and
pop
mov
ds
and
lock
jg
xchg
xchg
jge
jecxz
loop
mov
cmp
lds
lcall
xor
add
scas
push
sub
into
or
repnz
les
loop
das
jno
testl
push
repnz
je
dec
push
fstpl
je
xor
rorl
lret
int3
fs
add
iret
sbbl
push
jmp
xchg
cmpsl
mov
cmpsb
mov
cmpsl
in
lds
jl
out
mov
cltd
movsl
cld
pop
pop
inc
mov
leave
sub
cmp
xchg
in
lcall
mov
jge
js
aaa
call
push
mov
mov
insl
push
adc
jmp
mov
mov
jbe
sub
or
mov
js
ret
maskmovq
testl
lahf
or
les
cld
cmp
int3
sbbl
adc
xchg
cvttps2pi
into
or
jns
repz
add
pushf
js
xor
add
insb
insb
mov
adc
add
scas
xchg
repz
lods
dec
push
insl
out
sti
test
cmpsb
adc
mov
xor
iret
mov
fidivl
adcl
xor
mov
add
add
mov
push
xchg
popf
mov
subb
sub
push
pop
cld
shrb
sub
inc
shrl
xchg
push
scas
push
xchg
rcrl
pusha
push
push
cltd
sarl
stos
nop
vmread
into
aad
pop
cld
ss
faddl
push
mov
sub
mov
or
add
test
dec
outsl
test
cli
loope
xchg
cltd
dec
xchg
shlb
mov
jp
or
xchg
in
xchg
sti
cmp
jle
mov
mov
add
sbbl
dec
inc
mov
shlb
fsubl
js
jnp
ret
repz
sub
fdivrs
imul
ja
pusha
push
dec
and
inc
sbb
fs
sets
fs
push
xchg
mulb
hlt
test
push
mov
mov
nop
and
and
push
faddl
xor
add
jnp
mov
cltd
cmp
jbe
add
clc
mull
cmpsb
pop
push
push
push
push
pop
push
inc
sti
cwtl
sarl
xchg
je
lret
lret
push
xchg
jae
mov
ss
and
lock
mov
sarb
jmp
enter
fcomip
mov
mov
mov
mov
sahf
ret
std
fcoml
or
mov
pop
sbb
sbb
xchg
pop
xchg
push
fsubrs
movsl
cmp
mov
push
in
mov
leave
pop
cmp
pop
pop
fnstenv
sub
movsl
jg
dec
test
pop
sub
mov
mov
shrb
add
jb
cmp
cli
lock
or
push
ds
stos
push
rorl
jecxz
add
sub
mov
repz
ja
imul
rcl
out
test
xchg
dec
add
std
loopne
aaa
imul
sbb
xor
or
loop
gs
push
mov
clc
lods
adc
mov
mov
push
dec
into
loope
out
jnp
and
xchg
test
jecxz
mov
shlb
andl
test
mov
lds
adc
mov
cmp
and
rcrb
add
aam
mov
push
pop
cmp
outsl
test
cmpsb
test
fists
bound
cmp
cmpb
cmp
sbb
bound
adc
push
jbe
and
xchg
lret
ds
push
push
cwtl
dec
addr16
pop
mov
and
and
adc
or
hlt
jns
loop
xchg
fchs
in
into
pop
loope
andb
cmpsl
addr16
push
fisttpll
test
js
mov
idiv
cmpsl
xchg
hlt
cmp
in
pop
jle
add
sbb
fucom
jmp
pop
mov
sbb
scas
ret
stos
cmc
cmpsb
pop
int
inc
pinsrw
std
xor
mov
inc
or
ret
inc
lds
daa
jae
or
mov
sti
shll
pop
dec
aaa
jns
cmp
ficoml
aad
loopne
rorl
test
test
sahf
rorl
push
mov
mov
es
adc
pop
int
inc
shl
iret
xor
movsl
jns
jno
cwtl
loope
mov
pop
push
fdivrl
inc
stc
in
loope
inc
sub
pop
getsec
xorb
pop
cmpsl
test
fsubl
jmp
xor
xchg
sub
adc
push
out
sti
pop
loopne
push
and
ja
adc
jo
mov
repz
ficompl
pop
jo
stc
cmp
shll
in
lods
out
cmpb
jg
mov
mov
mov
les
sbbl
jns
mov
imul
ljmp
inc
inc
negl
mov
lcall
idivl
leave
lods
sbb
dec
and
xchg
sbb
jmp
xchg
fisttpl
ss
loopne
bnd
inc
mov
adc
inc
sbb
nop
negb
xor
and
insl
ss
das
push
mov
popa
test
faddl
mov
sub
and
mov
fadds
xchg
aam
mov
fdivrs
and
and
pushf
push
xchg
mov
insl
jne
xchg
fdiv
adc
inc
cld
jecxz
mov
aas
sbb
imul
fwait
add
pop
pop
jns
incb
jecxz
mov
sar
sub
or
mov
xor
clc
lds
ret
cmp
push
inc
rcrb
inc
mov
mov
or
dec
stc
movsl
cmp
add
xchg
in
out
mov
mov
cs
ret
mov
mov
and
xchg
push
test
popa
mov
mov
jmp
pop
int3
mov
push
mov
in
fidivrl
xchg
insl
or
jg
out
cmp
lods
into
push
sub
popa
idivl
movsb
and
dec
add
outsb
inc
fistps
sahf
pop
adc
fildl
lods
cmpsl
rcr
mov
fs
xor
push
xor
loopne
sti
mov
scas
ljmp
repz
scas
stc
shll
xchg
cwtl
add
pop
insb
aas
mov
xchg
inc
or
in
mov
shl
jle
mulb
dec
fcomi
enter
jns
sbb
ljmp
push
cltd
jae
mov
cmp
fdivrs
popa
cmp
in
js
xchg
xchg
pop
adc
mov
jo
js
ja
xor
movsb
ret
pop
xor
pop
lea
xchg
in
lds
dec
jns
scas
inc
or
daa
jge
jecxz
mov
xchg
ljmp
out
sbb
daa
jbe
cmpsb
adc
cltd
push
jns
and
push
jg
fisubs
mov
jle
jl
mov
mov
and
arpl
sbb
or
in
pop
sub
and
jo
int
sbb
lods
rclb
clc
mov
cld
rorb
cmc
mov
add
iret
arpl
pslld
xorb
ret
cmpsl
dec
lahf
js
or
scas
xlat
rcr
inc
dec
and
jle
xchg
add
cmp
movsb
out
in
div
lock
fistps
dec
lds
cmp
or
push
cs
add
sti
inc
xor
outsb
mov
pop
aad
shrl
cwtl
inc
pop
sub
test
call
add
inc
loope
push
nop
stos
add
iret
dec
stos
or
testl
mov
enter
push
insl
push
push
mov
cmp
dec
sub
ret
add
push
xchg
es
jno
mov
rclb
nop
gs
mov
addr16
repnz
inc
add
cmc
push
add
and
or
int3
jae
xchg
das
pusha
jl
addr16
jl
divl
stos
cli
dec
add
pop
or
inc
mov
jns
stos
sub
sbb
push
pop
xchg
jmp
fldenv
fsin
jns
shl
push
mov
out
adc
repnz
aaa
dec
sub
cmp
insl
cmp
dec
fimuls
push
cmpsl
popl
mov
ss
push
pop
mov
rcll
bound
lahf
cmp
add
mov
xchg
dec
pop
push
or
sub
jae
lcall
sbb
xchg
sub
iret
push
mov
insl
sti
xchg
iret
inc
subb
rolb
imul
cmp
jne
out
jno
iret
or
popf
mov
in
repz
stos
push
push
xchg
push
stc
adc
adc
or
out
fwait
or
in
mov
sub
mov
lret
lahf
jl
sub
ss
xchg
dec
push
pop
mov
or
out
call
or
not
push
repz
imull
ret
scas
mov
cmp
out
cmp
cli
dec
jge
jl
lods
dec
stos
mov
daa
sahf
hlt
das
into
cmp
pushf
pop
inc
lahf
fwait
cmp
mov
mov
cmpsl
incb
pop
leave
stos
test
daa
rcr
sub
mov
aaa
mov
jnp
sub
fmull
clc
inc
push
and
mov
daa
js
jbe
push
xchg
mov
lock
xchg
pop
sub
flds
xor
mov
mov
icebp
mov
cmc
dec
sub
jno
cmp
xchg
push
jnp
jle
mov
mov
insl
and
in
imul
fsubrl
inc
pop
push
xchg
test
loope
mov
xchg
test
jl
xchg
sbb
loop
dec
js
mov
pop
into
mov
cwtl
int3
xchg
std
scas
pusha
fdivrp
cmpsb
fistpll
call
xor
std
jnp
pushf
shll
repz
lods
mov
pop
inc
ret
popf
insl
insb
add
push
lds
sbb
mov
cmpsl
pop
mov
imul
rorl
xor
scas
mov
lcall
push
mov
int
sbb
mov
mov
insl
add
xor
aas
in
pushf
movsl
or
ss
mov
ja
js
sbb
xor
fimuls
push
or
fsubrl
in
xchg
add
xchg
aas
lahf
insb
int
fmul
mov
and
fadds
pop
ret
dec
sti
rorb
adc
sub
cmp
das
adc
loope
ss
sarb
cmp
mov
push
pop
add
fwait
inc
ljmp
inc
push
push
adc
sub
cmpsl
lret
addr16
js
xchg
pop
jl
push
mov
sti
loopne
orl
aad
ss
inc
xor
pop
inc
lahf
imul
pop
cli
or
dec
test
cmpsl
lea
xor
pop
das
shll
sbb
pop
jnp
xor
pop
pop
inc
in
lret
cli
ret
push
sbb
pop
xchg
iret
lret
imul
adc
inc
mov
xchg
pusha
jne
iret
lret
ret
xchg
insl
int3
mov
shrb
pop
adc
xchg
inc
notb
data16
xchg
adc
shlb
fldl
in
ret
push
mov
shll
or
jl
test
ss
mov
inc
andl
push
adc
jns
pop
test
cmp
js
or
loop
incl
pop
insb
mov
ret
imul
pop
out
mov
test
fldcw
and
fcmovu
sbb
pop
mull
dec
push
in
dec
jecxz
and
fldenv
sti
mov
pop
inc
xchg
adc
rcrl
push
mov
dec
scas
cmp
and
int3
jns
add
rcrb
ds
ret
fwait
in
jg
jne
or
dec
lcall
int3
xorb
or
xor
idivl
push
in
loopne
dec
stos
xorb
cmp
mov
and
aad
push
fbstp
push
gs
daa
int3
shrb
out
data16
rcll
insl
jno
xchg
inc
push
cmp
fwait
mov
pop
imul
int
test
fldt
inc
das
or
fsubrl
fidivs
aad
dec
push
iret
xchg
xor
out
sub
xor
ljmp
mov
lahf
jmp
ds
sbbl
xchg
cmpb
nop
dec
cld
xorb
mov
incl
mov
imul
bound
enter
cmp
incb
cs
jge
xor
add
mov
ja
add
dec
out
clc
sbb
es
jns
add
mov
add
or
pushf
inc
dec
imul
mov
sub
int
push
outsl
mov
xchg
sbb
fnstenv
inc
lea
test
xchg
adc
cmp
jge
test
sahf
jg
mov
test
xchg
cmpsb
ficompl
mov
insl
insb
jb
ss
cmp
mov
mov
inc
int
or
aad
test
je
add
fmulp
mov
mov
cmp
dec
js
fcomip
shl
call
mov
jae
adcb
jp
sub
mov
arpl
jle
xor
push
pop
xorl
scas
xor
cmp
cmp
leave
mov
inc
sub
pop
xor
loopne
pop
mov
mov
ljmp
aaa
ret
push
imul
add
cltd
or
mov
add
leave
rol
jnp
xchg
jnp
adc
sahf
cli
mov
dec
nop
dec
cmp
sub
imul
mov
mov
jns
push
cmp
sbb
sahf
dec
xchg
jge
push
ja
jp
xchg
cld
cmp
xlat
inc
cmp
add
test
push
xchg
js
add
or
pop
mov
repnz
push
xor
push
sub
lcall
std
mov
jl
push
or
xchg
xor
movsb
arpl
pop
mov
or
repz
pop
nop
insb
shrb
push
dec
sub
xor
xchg
push
or
mov
nop
xor
pop
adc
push
mov
sbb
push
xchg
rcr
mov
add
or
ds
outsb
jo
mov
fwait
imul
fistl
lea
inc
test
xor
leave
and
mov
xchg
cli
subl
jbe
xchg
out
sub
mov
adc
adc
cwtl
inc
mov
or
test
jecxz
sub
pop
sbb
divl
int
stc
mov
out
icebp
cmp
mov
not
pushf
int3
fcoml
lret
test
leave
and
jmp
jmp
adc
jmp
mov
int
inc
xchg
in
push
icebp
inc
mov
adc
or
addl
aam
divl
icebp
movsb
stos
daa
add
aam
fdiv
adc
test
fcom
mov
in
xor
jbe
jo
inc
mov
cmp
rep
fmuls
mov
lock
adc
fs
mov
or
cltd
std
scas
lods
addr16
xor
insl
ds
shll
aam
stos
add
mov
push
lret
rol
sub
je
fisttps
mov
xchg
dec
mov
jae
push
lahf
pop
mov
shl
cld
subl
movl
fbstp
xchg
or
stos
push
out
sti
xchg
aad
push
and
enter
js
clc
fcomip
inc
jb
icebp
mov
mov
xlat
jle
das
push
adcb
dec
testb
jl
int
ret
and
stos
mov
mov
das
adc
jmp
push
pusha
lods
adc
or
add
repz
repz
lods
pcmpgtw
imul
adc
subb
jns
push
in
fimull
push
inc
dec
lret
pop
inc
lret
and
test
lahf
adc
or
push
test
dec
dec
aad
inc
rcrl
push
add
push
mov
outsb
sub
call
popf
out
pop
and
pop
or
jl
js
aas
sub
mov
sbbb
dec
push
mov
mov
sub
pop
sub
clc
and
dec
xor
pop
dec
cmp
test
loop
lcall
dec
inc
mov
pop
cld
addr16
mov
sub
fdivp
lds
stos
inc
sbb
push
inc
xchg
out
mov
frstor
loope
sbbl
dec
add
mov
scas
scas
cmp
lock
adc
push
xor
out
push
pop
mov
push
in
lcall
push
inc
and
and
fadd
inc
or
addr16
dec
xlat
xlat
sbb
out
outsb
jl
mov
mov
xchg
sbb
das
shlb
stc
daa
push
rorb
imul
lods
daa
push
ret
repz
aam
pop
je
mov
inc
xor
mov
xchg
popa
add
outsb
inc
cmp
or
xlat
pop
push
mov
lds
and
jnp
subb
lret
outsl
sbb
xor
aam
int3
pop
adc
inc
aaa
fcmovnu
jae
adc
out
cld
push
pop
inc
stos
call
dec
push
sub
and
dec
jne
je
cmc
push
add
das
orl
cld
xor
imul
fadd
or
push
xchg
stc
repz
iret
xchg
add
outsl
cmpsl
jg
mov
jmp
mov
hlt
mov
mov
lods
adc
jl
mov
xlat
pop
pop
outsb
test
lea
add
das
movsl
push
mov
mov
in
test
rolb
pop
mov
jne
mov
sub
adc
jae
testb
mov
pop
leave
addb
lahf
ret
xor
adc
jno
jl
cld
icebp
out
div
add
or
sbb
into
inc
fisubl
sub
std
xor
jb
es
and
movb
ret
jl
jle
and
js
out
mov
jg
dec
and
or
sbb
frstor
popa
adc
or
out
nop
mov
stos
scas
dec
pushf
ja
mov
fcoml
cltd
scas
jle
adc
push
mov
mov
pop
jl
insb
iret
xor
loopne
dec
push
mov
inc
sbb
daa
mov
lahf
fwait
outsb
imul
imul
pop
pushf
xchg
xorl
xchg
xor
jo
push
test
dec
xchg
scas
test
pusha
xchg
xchg
adc
cmp
jle
xor
std
jo
ljmp
sbb
add
repnz
and
dec
sub
sbb
scas
movsb
add
aas
inc
adc
xchg
out
test
mov
xor
pop
adc
dec
cs
xchg
insb
dec
aaa
dec
cmp
sbb
imul
cmp
pop
mov
imul
sbb
js
rol
jo
add
dec
js
movl
sahf
dec
xchg
into
pop
je
add
imul
pop
rcrb
std
mov
mov
push
xchg
xor
cmpsb
lea
out
inc
pop
test
mov
pop
jne
in
cmpsl
mov
mov
lds
out
push
mov
aam
popf
frstor
fwait
or
outsb
inc
push
and
ljmp
imul
mov
push
jle
jmp
mov
jl,pt
pop
shlb
cli
jbe
cmc
and
mov
lods
mov
mov
adc
loope
dec
gs
fstl
addr16
hlt
pop
inc
and
push
mov
clc
xor
movsl
pop
add
popf
sub
add
jl
loope
mov
dec
cld
push
inc
ret
inc
dec
daa
popl
mov
push
or
adc
out
xlat
push
mov
mov
call
inc
mov
fmuls
dec
mov
mov
xor
pop
mov
jns
cwtl
cmp
adc
pop
aam
push
sti
jge
xchg
mov
jmp
mov
ljmp
loopne
sbb
int
sti
into
std
mov
jle
mov
test
fcomip
pop
dec
ficomps
sbb
mov
mov
pop
pop
cltd
inc
cmp
into
outsb
sbb
popf
sub
mov
imul
mov
push
in
adc
ret
shl
xchg
aad
lcall
shll
jmp
push
push
lret
and
lret
rorl
mov
push
inc
push
sub
faddl
add
clc
xchg
jmp
or
xor
nop
dec
fimuls
stc
mov
test
mov
inc
negb
cmp
and
mov
das
push
leave
push
stos
inc
sub
faddl
inc
int3
enter
mov
mov
sub
add
push
or
lock
jmp
popf
push
ja
mov
and
insb
lahf
cmp
xor
addb
cmp
lahf
jnp
scas
ja
test
loope
jp
push
movsb
fcmovu
ret
jmp
pop
xor
lods
xchg
or
sub
out
loop
xchg
out
add
dec
mov
in
call
test
je
sarl
mov
fwait
shrb
cmp
xchg
fsubrs
pop
insl
sahf
fbld
adc
push
addr16
xchg
aas
out
add
or
and
das
xor
outsb
mov
jecxz
mov
in
ret
in
out
adc
mov
clc
es
mov
adc
add
inc
call
pop
pushf
movq
sbb
inc
and
xchg
mov
sti
cmpsl
lea
and
adc
mov
ja
xor
std
push
bound
adc
sbb
pop
insb
adc
cld
inc
les
mov
inc
js
int3
xchg
or
es
fcompl
jl
inc
xlat
cmp
mov
jno
mov
dec
lock
fsin
sti
push
or
xor
mov
imul
sub
xchg
add
test
sub
daa
xchg
js
xchg
fs
add
adc
cmp
mov
cmpb
cmp
inc
cmp
pop
sub
xor
daa
test
ljmp
cmp
or
sbb
loop
test
movsl
and
outsb
repnz
outsb
xchg
adc
xlat
mov
dec
sub
std
int3
xor
sahf
pop
sub
jno
enter
ljmp
pop
in
mov
xlat
dec
push
insb
test
inc
push
pushf
lock
adc
lret
mov
in
mov
ds
repnz
xor
pop
lret
mov
loopne
cmp
xchg
cmp
mov
leave
jnp
adc
outsb
push
fdivrl
lret
pop
lods
inc
fwait
sti
xchg
mov
or
cmp
mov
rcrl
mov
pop
inc
sti
jecxz
into
lcall
cmp
pushf
cmp
xor
out
jnp
push
bound
and
sbb
add
adc
shll
imul
ss
lret
sub
xchg
push
fnsave
stc
mov
lds
add
and
mov
in
or
mov
aad
sbb
jno
sbb
or
push
xchg
push
push
or
adc
jnp
repnz
fisubrl
mov
cli
aas
mov
mov
cmc
jbe
dec
mov
pop
popa
dec
ja
stos
roll
sub
in
aaa
mov
xchg
popa
push
pop
mov
pop
pop
test
pop
cmp
test
test
mov
fs
into
popa
pop
outsl
js
inc
inc
mov
pop
xchg
adc
sub
data16
push
jp
xlat
movl
es
leave
and
cmp
sbb
mov
pop
aas
arpl
rcrl
cmp
loope
bound
rolb
cltd
clc
mov
jae
inc
movsl
cmp
cmp
adc
lds
inc
mov
es
idivb
shll
cmp
jns
in
sbb
test
ja
jnp
cmpsb
cmove
dec
insb
sub
outsb
popaw
jp
ljmp
adc
test
jbe
cmp
or
stos
stos
pop
call
pop
iret
and
xchg
xchg
adc
fnstcw
cltd
daa
pop
dec
loopne
imul
xchg
int
push
xchg
pusha
pop
jne
insl
xor
adc
cmpsb
mov
push
sbb
sahf
push
sub
leave
shlb
jmp
xor
add
or
inc
mov
test
shll
mov
into
fiaddl
enter
jge
pop
sub
xchg
fwait
dec
push
jp
es
push
insl
dec
pop
pop
mov
xor
stos
mov
inc
mov
mov
fistl
cwtl
rclb
jle
mov
cmp
ds
or
and
push
cmp
das
lds
pusha
jbe
cmp
or
or
jp
xchg
ficoml
push
lret
into
adc
inc
jb
xchg
arpl
mov
push
mov
mov
ficompl
mov
add
lods
popa
fs
cmp
repz
lea
jp
cmp
fbld
jp
out
sub
out
xchg
mov
out
insb
mov
loopne
pusha
push
mov
in
loope
les
pusha
ret
xor
pop
or
gs
push
xchg
pushl
rolb
jae
jge
int
scas
idivb
call
pop
ret
add
sahf
push
xchg
adc
scas
add
xor
jmp
in
or
lea
jg
jbe
mov
and
std
pop
js
mov
xor
mov
mov
rorl
in
stos
inc
out
sub
dec
push
stos
scas
sub
fidivs
decb
or
adc
sbb
rcll
add
inc
pop
mov
or
cmp
xchg
xchg
enter
lds
pop
mov
xor
fimuls
cmp
subl
cmpb
lahf
aaa
adc
loop
cltd
fldl2e
jb
cli
or
pushf
stc
mov
mov
mov
repz
sbb
adc
test
in
orl
hlt
stos
ret
outsl
flds
dec
ss
jo
fwait
sarl
mov
add
iret
cmpsb
mov
inc
sbb
aas
adc
cli
adc
or
shll
aaa
orl
dec
pusha
insb
nop
mov
fiaddl
add
jp
xor
rcrb
in
or
cli
test
pop
mov
sbb
inc
stos
sbb
insl
dec
mov
roll
shlb
inc
add
add
fmuls
aam
imulb
ss
test
sbb
ret
imul
cmpsl
jmp
js
mov
add
dec
add
es
sub
in
call
and
test
add
push
testb
aas
sbb
sti
sub
iret
inc
loopne
xor
and
insl
add
dec
je
pop
mov
imul
push
sbb
sbb
in
inc
leave
imul
lcall
insl
jmp
push
imulb
push
test
mov
xlat
mov
sbb
mov
jg
cmpsl
pop
and
adc
or
jle
stos
jbe
xlat
lahf
clc
push
fld
stc
setle
fnstsw
mov
jmp
sbb
xchg
aad
fsts
ret
cltd
jle
imulb
mov
jae
loopne
popl
into
add
and
jl
adc
jmp
ret
inc
test
in
xlat
xchg
ret
add
add
sbb
add
mov
cmovne
push
cltd
pushaw
mov
xor
cld
pop
es
and
filds
add
fisubl
mov
shll
adc
jl
push
icebp
mov
and
test
cltd
dec
in
sub
cmpsl
loope
nop
mov
dec
inc
js
imul
pop
or
call
and
insb
jo
lock
outsl
mov
adc
or
jno
call
sbb
insb
cmp
mov
popf
dec
xor
pusha
add
or
xlat
out
mov
push
xor
mov
ss
scas
add
sub
stos
in
in
mov
push
dec
jl
push
mov
sub
add
jl
sub
mov
xchg
cmp
mov
xor
insb
insl
push
jae
jbe
jmp
loope
xchg
das
sbb
insb
xchg
lea
mov
inc
int
int
mov
sub
jbe
bound
mov
inc
push
add
negb
mov
js
xorb
movsl
lock
in
add
xchg
cmpl
mov
adc
ljmp
xor
aaa
test
std
sub
dec
fistps
pop
mov
jle
pop
push
fs
repnz
push
mov
add
cmp
push
xor
test
inc
cmp
test
cmp
into
xchg
ds
inc
cli
cmp
es
dec
lret
aas
sub
sub
out
push
icebp
cmp
movsl
pop
push
ljmp
pushf
adc
and
push
dec
mov
xchg
sarl
push
test
mov
pop
adc
imull
inc
fadds
cwtl
jl
push
cmpsl
jbe
sbb
add
xchg
loop
popf
lods
arpl
icebp
push
sbbb
cmp
in
mov
mov
sub
jg
aam
inc
in
dec
lods
pushf
bound
out
jb
sti
jnp
test
xlat
push
outsl
push
out
mov
sarl
mov
mov
fwait
adc
int
in
in
xor
in
mov
cmp
arpl
mov
xchg
push
push
jns
mov
sbb
test
ret
daa
adc
rcrb
push
push
sti
inc
fdivrp
fisttpll
roll
push
add
cmpsb
mov
mov
je
pushf
fmull
push
push
loopne
shlw
imul
inc
jns
repnz
jns
mov
enter
repnz
cwtl
repz
mov
pop
cmpl
adcl
mov
leave
inc
mov
fwait
ja
xor
add
mov
clc
lea
push
add
mov
cmp
je
ret
dec
add
cltd
xor
mov
inc
or
les
cs
inc
sub
jno
pop
scas
rcr
sub
ret
xor
jge
mov
loop
push
test
jnp
inc
lret
xchg
sbb
lods
lahf
negl
test
xchg
inc
stc
fstl
nop
fwait
test
out
mov
mov
nop
pop
jno
rcpps
faddp
sbb
or
inc
xlat
sahf
xor
loop
cmp
imul
movsl
les
or
adc
push
cs
jo
dec
scas
popa
inc
aad
xor
xchg
xlat
mov
out
pop
incb
rcll
pop
test
dec
push
mov
sbb
imul
push
mov
cli
iret
out
pop
test
test
xor
pushf
les
mov
iret
xchg
push
rorb
sbb
xchg
jecxz
sbb
cmc
scas
xlat
xor
mov
in
mov
mov
dec
inc
lods
fs
scas
mov
sbb
or
sub
adc
adc
xchg
jmp
dec
pop
iret
and
pusha
jp
mov
call
lahf
cmpb
pop
loopw
sub
inc
aaa
test
je
jle
inc
jge
jae
aaa
pop
or
or
sbb
loopne
ss
lea
out
cmp
lock
jge
xor
in
mov
xorb
mov
imul
add
dec
pusha
fcmovu
or
push
test
cmp
mov
inc
negl
mov
mov
lahf
fstps
mov
popf
jne
test
int3
jle
in
mov
push
mov
xlat
lret
push
and
inc
jmp
xor
arpl
fsubp
sub
pop
fimull
push
pop
sub
and
xchg
subl
ljmp
es
jmp
add
inc
cli
xchg
jg
lahf
inc
sub
aam
push
outsl
cmp
dec
dec
call
cmpsl
inc
pop
mov
pop
push
ret
pop
imul
shll
or
sub
loope
ret
xchg
pop
inc
sbb
mov
push
idivl
test
bound
and
mov
lea
add
aas
shl
ret
add
mov
jno
data16
cmpsl
cmpb
dec
xlat
mov
fstps
xor
mov
imul
jge
mov
mov
scas
mov
jb
inc
sbb
outsb
adc
add
leave
ds
xchg
xchg
dec
stos
xchg
xor
inc
jge
sub
hlt
mov
or
jecxz
xchg
movsl
mov
push
rcrl
mov
pop
or
xchg
mov
je
xlat
or
mov
cli
std
movsb
cmc
ds
ja
repz
and
out
jl
xchg
inc
ficompl
push
ret
dec
xchg
jb
mov
ds
sub
xor
pop
add
mov
test
pop
shl
inc
or
jnp
push
add
popa
ja
sahf
mov
mov
in
push
rorb
test
ds
lret
pushl
out
icebp
pop
cmpsl
mov
maxps
sub
icebp
or
leave
mov
xchg
jg
test
mov
pop
dec
jmp
and
add
sub
loopne
jno
jnp
xchg
call
mov
and
cld
clts
mov
loop
sbb
aam
enter
repz
jnp
mov
push
cli
movb
test
jmp
ss
sti
in
js
jno
jl
ljmp
xchg
inc
ljmp
push
push
mov
and
jg
pop
rol
pop
inc
mov
xchg
aaa
jb
dec
mov
inc
xchg
pusha
mov
sbb
hlt
jge
xchg
arpl
pop
add
xor
fwait
mov
push
push
addr16
add
scas
dec
pop
iret
aas
aam
leave
inc
hlt
mov
insl
ja
lea
aas
leave
imul
cld
imul
mov
clc
mull
ficoms
lods
pop
lahf
imulb
inc
ror
xchg
pusha
mov
jne
stc
dec
sbb
and
fwait
repz
shlb
and
dec
adc
fidivrl
mov
cmp
aam
fistl
jge
adcb
icebp
push
fldcw
push
fimuls
scas
movsb
into
jge
adc
sub
push
lahf
scas
push
push
fwait
dec
cld
pop
imul
iret
inc
pop
fildll
cmp
lea
xlat
add
add
dec
push
xchg
sahf
rcr
dec
add
jnp
inc
aas
outsb
dec
mov
int3
mov
sti
add
cmpb
imul
jle
outsb
scas
clc
imul
clc
imul
cld
sub
sarb
nop
imul
scas
mov
jecxz
adc
add
dec
dec
cld
adc
das
icebp
jo
jmp
push
sbb
fcomp
out
jnp
jno
scas
or
loopne
std
jg
test
std
cmc
jle
sbbb
rclb
sbb
sbb
test
cmovl
faddl
bound
subl
lea
loope
add
xlat
jecxz
or
dec
add
mov
push
in
pop
call
pop
addr16
cld
icebp
test
jns
mov
imul
jo
sbb
lods
aad
sub
lods
push
cmpb
repnz
sub
pop
push
push
int
xor
pop
pushf
mov
mulb
cmp
scas
lahf
jb
divb
and
imul
das
movsl
mov
btrl
push
aam
sbb
movsb
insl
repnz
and
out
dec
push
mov
and
leave
jmp
xlat
addr16
in
aam
outsb
dec
sbb
add
test
xchg
in
mov
sbb
mov
daa
add
es
testl
mov
mov
or
das
sti
pop
or
adc
inc
push
adc
mov
shld
xchg
cmpsb
mov
mov
std
stos
sbbl
arpl
movsb
sub
mov
pushf
sub
mov
jge
push
jge
push
dec
icebp
in
mov
xchg
jno
pushf
push
mov
jbe
lea
aaa
lock
scas
push
xchg
je
test
inc
hlt
xchg
jmp
pop
or
push
shlb
test
pop
mov
pop
dec
dec
jns
enter
into
mov
pop
sti
jmp
add
negl
dec
pop
or
in
icebp
cld
and
inc
cmp
imul
int3
dec
aad
xorb
repnz
xchg
mov
aad
stos
push
xchg
pushf
aam
ret
xchg
mov
shrl
jmp
sarl
xlat
mov
sbb
mov
mov
add
std
nop
mov
fsts
sbbb
cmp
sub
xchg
or
fsubs
or
cmp
dec
loope
pusha
nop
dec
or
notb
and
divl
pop
sahf
jae
and
loop
mov
out
lods
aam
sarl
addr16
adc
jg
repz
rorl
inc
mov
cmp
pop
pop
mov
test
sahf
jns
je
lea
ficoms
push
test
sbb
hlt
cli
pop
ljmp
dec
int
dec
js,pt
fs
fmull
jg
dec
push
dec
sar
rcll
xchg
ds
sbb
or
fidivrl
xchg
lret
fimull
vrsqrtps
xor
jns
sti
je
scas
in
cwtl
rcrl
out
cmp
inc
popf
or
enter
push
lods
sbb
ja
loope
out
std
jmp
push
popl
je
pop
inc
xor
enterw
mov
xor
inc
add
add
loop
xchg
xchg
mov
aam
dec
sub
mov
dec
adc
sub
and
in
clc
mov
cmp
jno,pn
inc
inc
cmpsb
inc
in
or
lcall
out
mov
cmp
jmp
shrb
imul
push
aad
shl
mov
xchg
dec
jns
cwtl
cltd
imul
jns
lahf
and
mov
lea
outsb
ret
lret
mov
btc
js
or
mov
jmp
lods
add
push
clc
adc
jp
lock
sti
and
cmp
out
dec
mov
push
xor
xchg
jmp
imul
pop
xor
fdivs
mov
pop
pop
push
clc
mov
out
lods
mov
or
aaa
mov
in
loopne
xchg
sbb
test
sbb
fcompl
pop
call
movsl
pop
ja
lea
aad
fsubs
call
pop
push
jge
xchg
testb
aam
adc
dec
adc
sbb
mov
es
inc
jne
sbb
inc
out
xchg
inc
je
pop
imul
fidivs
int
aaa
jg
dec
push
enter
mov
pop
xor
pusha
mov
hlt
sub
cmpsl
add
push
in
in
inc
mov
pop
fimull
push
inc
fidivs
pop
dec
mov
jmp
mov
test
add
xor
aas
pop
cmp
push
enter
aad
push
fstps
push
ds
xor
bound
fmull
loope
pop
cwtl
cmp
js
fnsave
popf
ret
popa
aam
push
push
pop
lock
jp
gs
push
adc
adc
lods
mov
pop
call
in
daa
or
add
cmpsb
sub
pusha
enter
or
lahf
lods
push
push
sbb
or
and
rclb
leave
hlt
leave
xchg
push
mov
out
stos
stc
mov
jb
mov
aaa
and
mov
push
sub
rorb
sub
pusha
sbb
sbb
sub
cli
out
push
shl
fisubrs
pop
mov
xor
sub
into
aaa
scas
out
sbbb
stc
and
adc
ja
cltd
div
mov
loop
aas
pop
fmuls
xor
mov
pop
or
out
sub
push
mov
je
movsl
inc
es
std
or
idiv
push
mov
xor
or
xchg
gs
mov
adc
xlat
call
pop
jmp
and
lods
adc
in
lea
cmc
sub
mov
adc
cmp
dec
addr16
leave
mov
sbb
xor
push
and
pushf
fnstenv
xlat
mov
lret
cltd
xchg
mov
jge
inc
lods
dec
mov
in
adc
push
in
shr
jb
push
stos
movsb
jecxz
sbb
jp
xor
xchg
fdivl
dec
pusha
push
leave
pop
ds
xor
mov
stc
mov
mov
incl
push
dec
and
jmp
xchg
sub
push
cld
inc
jno
int
inc
pop
dec
mov
rcl
icebp
shlb
test
inc
dec
cwtl
push
insb
sahf
sub
sub
or
push
fldl
xchg
js
inc
cmp
dec
lret
sbb
decl
push
addl
es
and
fbld
stos
xlat
jmp
pop
lods
sbbl
in
cmpsl
jae
daa
in
fistps
sub
push
mov
and
addr16
dec
fimuls
push
inc
mov
mov
fildll
sti
addr16
dec
daa
inc
js
sti
pop
outsb
roll
or
leave
subl
pusha
jb,pn
mov
push
lahf
mov
mov
jge
imul
and
ja
jns
xor
cmc
fcompl
mov
test
ret
stc
mov
call
sahf
incl
dec
and
andl
mov
xor
lds
insl
adc
repnz
xchg
mov
xchg
jecxz,pt
lock
imul
std
divb
or
push
loop
and
daa
insb
and
jmp
pop
mov
lcall
jne
xchg
iret
mov
jmp
std
and
mov
jnp
adc
ljmp
add
xchg
in
idivb
lds
stos
xchg
ds
adc
imulb
decb
ja
negl
dec
and
mov
inc
jns
ljmp
lds
pusha
out
in
cmpsb
add
jle
push
fmuls
shlb
mov
ret
xlat
add
add
sahf
ds
mov
xchg
and
lods
ja
and
pop
pop
mov
mov
mov
mov
mov
push
out
scas
insl
or
ficomps
out
push
sbb
cltd
bound
and
movsb
mov
repz
sub
pop
fidivrl
repz
pop
movsl
cmp
jno
jecxz
stc
cmpsl
subb
iret
ljmp
nop
sub
lret
cmc
andb
ljmp
push
call
lods
mov
jl
add
mov
mov
dec
loopne
inc
das
push
out
jns
cmp
mov
fwait
daa
and
xor
in
cmp
inc
xlat
inc
jmp
add
and
in
rol
rclb
mov
xchg
push
ds
or
test
push
push
xchg
fimull
mov
jle
adc
ficomps
fs
sub
daa
pop
rorl
xor
out
mov
aam
jne
dec
mov
inc
xchg
nop
stc
and
push
insb
dec
jns
aad
jbe
or
lahf
std
aas
cmp
dec
pop
std
test
mov
cs
or
push
add
inc
sub
subb
jo
aas
mov
pop
je
ljmp
bound
aad
imul
mov
inc
roll
mov
dec
ljmp
mov
sub
stc
and
enter
ret
add
js
mov
testl
pop
adc
sub
fwait
imul
in
les
lcall
push
stos
push
aas
lret
fldcw
in
mov
int3
mov
pop
fmul
dec
mov
push
fisttpll
inc
and
mov
dec
adc
mov
aaa
stos
loop
lahf
inc
idivl
andl
and
and
mov
repz
mov
inc
scas
mov
std
sahf
mov
adc
jp
jns
fwait
dec
clc
sbb
test
test
mov
or
sub
divl
inc
cmp
or
mov
sub
fsubs
ret
mov
orb
mov
inc
mov
fimuls
test
mov
out
jge
jp
jecxz
or
lods
ja
popa
xchg
inc
fs
sub
xor
ljmp
add
or
dec
sahf
cmpsl
div
mov
scas
jnp
lahf
test
mov
pop
subb
inc
pop
push
loope
fidivrl
xchg
popf
daa
jnp
mov
push
adc
aaa
ret
xchg
data16
gs
ret
jg
add
xor
pop
jnp
inc
xor
scas
out
sub
inc
shll
or
xor
inc
xchg
or
js
shl
rcrb
pushf
xlat
test
jnp
in
push
loop
pop
xchg
xor
dec
xchg
jb
adc
rcrb
jo
adc
jmp
push
movsl
jle
xchg
shlb
je
or
pop
clc
jno
push
shll
xorb
inc
das
mov
fimull
and
dec
mov
mov
in
mov
repnz
fwait
add
hlt
enter
shrl
xchg
iret
add
add
add
sbb
rcrb
jb
xor
inc
lea
mov
dec
push
sbbb
jo
lret
scas
push
mov
jno
xor
mov
push
inc
adc
test
or
mov
adc
ficoml
hlt
xchg
ja
cltd
xchg
inc
cmpsb
sub
or
cltd
fcompl
imul
jl
inc
minps
cmp
push
add
mov
xor
cmp
mov
loopne
roll
jo
repnz
mov
jp
test
addl
in
stos
sub
xor
iret
call
iret
aas
cmp
into
add
adc
ret
adc
ret
mov
jmp
iret
lcall
jno
mov
sahf
adc
dec
mov
testl
loopne
data16
xor
push
in
mov
adc
lcall
xlat
fidivrl
bswap
xchg
ja
add
test
cmpsl
and
ds
sbb
stc
add
pop
mov
sbb
pop
rcrl
jcxz
dec
push
and
out
cmp
mov
ret
shrl
loop
sbb
andb
les
mov
xlat
and
and
push
cmp
adc
dec
lods
add
icebp
out
js
lret
mov
sbb
hlt
jmp
outsl
loop
inc
xor
int
aad
xor
mov
es
sti
sbb
test
cli
push
fdivrs
mov
fs
clc
in
movsb
and
add
call
rcll
in
outsb
mov
or
popa
aam
pop
pop
out
xor
pushf
xchg
adc
push
mov
icebp
imul
jge
daa
js
call
mov
jp
xchg
jo
aaa
dec
daa
mov
push
std
jno
les
xchg
and
hlt
xchg
mov
mov
sbb
jb
jge
mov
xchg
adc
jns
inc
mov
jnp
sub
mov
jmp
fadds
cmp
bound
xchg
push
mov
daa
popf
xor
testl
xchg
mull
jo
adc
adc
pop
cmp
repnz
mov
lret
push
subl
aam
and
add
jp
or
sbbb
xchg
stos
adc
mov
push
enter
and
into
out
mov
call
add
push
stc
sub
sub
mov
mov
dec
cmpsb
pop
mov
ds
lock
dec
sbb
inc
or
sbb
sbb
popa
add
dec
mov
fsubrl
dec
jb
rclb
hlt
mov
fnstenv
mov
repnz
xchg
loopne
push
push
dec
dec
mov
sub
or
out
jb
add
call
bnd
dec
shl
addl
push
or
push
add
push
push
dec
jns
popf
or
xor
mov
fists
adc
mov
movsl
outsb
fldt
pop
xchg
push
shrb
divl
mov
leave
int
loopne
sub
sbb
mov
mov
scas
dec
or
mov
cltd
test
cli
stos
jecxz
adc
sbb
int
outsb
push
mov
int
imul
mov
fiaddl
sbb
cld
hlt
pop
jo
aaa
loopne
pop
cmp
jne
ret
shlb
mov
fmuls
dec
pop
add
mov
rcl
testl
insb
dec
movb
into
out
jo
lret
into
push
ret
mov
cmp
xchg
dec
add
ja
add
cmp
or
lcall
jbe
outsb
mov
inc
fsubs
fstps
aad
adc
loopne
mov
pop
push
data16
jbe
jae
js
mov
lret
mov
push
cmp
mov
and
push
mov
in
lods
jbe
push
push
aam
mov
cmp
outsb
lods
push
shrl
pop
mov
addr16
mov
pop
stc
or
mov
std
std
xlat
enter
or
mov
shll
out
and
data16
xchg
outsb
stos
adc
test
xchg
fdivrl
adc
cmp
shrb
mov
sub
mov
mov
loop
sbb
aaa
into
inc
and
xor
dec
sub
fbld
loopne
sub
push
arpl
fs
sar
jmp
repz
mov
shll
call
addb
jmp
ds
mov
fcomps
or
int
cmp
in
repnz
and
mulb
push
ja
outsb
shrl
les
add
lock
or
push
insb
jecxz
inc
int3
push
ret
loop
push
fcmovnbe
mov
push
xchg
dec
daa
lods
jae
mov
ret
inc
sbb
push
shrl
das
jo
pop
add
xor
push
icebp
sub
fstpt
aam
cli
sti
je
mov
inc
pop
xchg
popa
add
stc
movsl
ljmp
mov
sub
test
pop
dec
ss
mov
ds
mov
sub
lret
sahf
imul
mov
addr16
pop
or
push
cltd
pop
or
xchg
dec
pop
mov
mov
sbb
scas
rolb
bound
sbb
ljmp
aas
xchg
xor
xor
out
or
idiv
jle
aaa
cmp
push
and
sub
xchg
push
sahf
push
mov
shll
loopne
or
mov
mov
leave
push
jl
fiadds
lcall
push
inc
xchg
xor
push
into
addr16
mov
sti
cmp
jo
mov
arpl
mov
jmp
inc
mov
jp
push
insb
push
pop
or
xchg
fstp
repnz
sbb
imul
aas
xor
and
xorps
cmc
inc
out
add
rorb
fwait
insb
mov
mov
mov
in
movsb
xor
sub
inc
sbb
dec
mov
popf
pusha
fsubr
xor
dec
or
lret
push
add
jns
daa
jb
xlat
push
les
cmp
call
push
mov
mov
out
sbb
enter
movsb
mov
cli
int
movb
imul
inc
pop
mov
clc
cmp
test
lea
jnp
rcll
in
push
sahf
mov
inc
outsl
mov
push
bsr
arpl
xlat
fwait
out
cmp
shlb
xchg
push
mov
dec
pushf
add
fsubr
sbb
jle
inc
inc
sub
in
rcr
lea
cmp
test
out
outsl
jmp
xchg
sub
loope
outsl
popf
mov
xchg
push
adc
inc
inc
jns
push
xor
in
mov
test
bnd
xor
fstl
int3
push
fisubrl
pop
fdiv
or
icebp
adc
dec
cmp
pop
mov
insl
xchg
decb
pop
pop
adc
aaa
fldcw
add
dec
dec
shl
pushf
das
int3
rcrb
mov
cmp
jnp
int3
out
cli
pop
shll
popw
cld
pop
std
cwtl
dec
mov
in
repz
pushf
dec
sarl
and
mov
pop
dec
add
mov
shrb
stos
fbstp
lds
imul
sti
adc
lock
dec
xlat
fbld
shrl
or
dec
add
or
pop
xchg
rcl
pop
xchg
mov
mov
xchg
lea
js
jnp
mov
sti
pop
bound
popl
fidivl
frstor
and
jg
and
xchg
push
cwtl
add
jne
jecxz
adc
inc
cs
mov
mov
and
es
fcomps
lcall
xor
imul
nop
cmc
cmp
adc
inc
popf
xchg
mov
pop
dec
sbb
or
mov
sbb
in
mov
sub
mov
loop
sarb
in
add
lret
jmp
or
push
addr16
iret
push
ret
xor
mov
xlat
fld
xor
cmpxchg
mov
outsb
mov
add
mov
xor
inc
loope
test
dec
sbb
sbb
pop
leave
arpl
cmpl
lods
sarl
jnp
rolb
jge
clc
andb
int3
cld
push
ja
into
in
dec
in
loopne
jbe
aas
mov
outsb
mov
ss
das
mov
outsl
xchg
movsl
mov
jle
mov
jo
out
out
aad
add
bound
or
loop
jns
inc
fstps
into
fcmovb
mov
rcr
push
aad
and
mov
dec
jp
add
cmpb
mov
xchg
add
pop
int
stos
pop
repnz
shrl
mov
popf
sub
inc
movsl
sub
inc
jno
icebp
xchg
add
lahf
pop
dec
lahf
cmp
cmp
and
nop
loopne
jge
cmp
xor
inc
cmpsb
or
out
addl
dec
mov
imul
cmp
xchg
std
xchg
add
xchg
xor
xchg
mov
add
inc
mov
mov
jae
push
jg
push
xor
in
ljmp
mov
nop
adc
xchg
push
cwtl
inc
nop
push
or
bound
aas
outsl
and
and
pop
sbb
test
lds
es
pop
pop
mov
filds
lret
jecxz
sbb
cmp
cmp
mov
and
xor
jno
fisttps
jo
push
int
fxch
add
divb
movsb
leave
push
adc
int3
out
or
fdivrp
call
jae
jmp
cld
stos
je
ds
push
add
repz
push
pusha
push
test
loope
cmp
sbb
test
xchg
xor
in
lahf
mov
ret
inc
sub
cmc
mov
movsl
mov
daa
sub
mov
xchg
outsb
stc
arpl
mov
add
aas
sbb
cld
icebp
dec
mov
mov
div
mov
int
adc
mov
push
call
push
mov
mov
push
xchg
call
addr16
sti
popf
mov
cmc
mov
inc
jl
and
xchg
sbb
lcall
jmp
xchg
push
xchg
fisubrl
sub
mov
fsubr
mov
or
add
and
push
std
out
je
inc
push
arpl
leave
iret
lods
fcoml
or
out
inc
sub
adc
outsl
mov
pop
cli
add
icebp
hlt
cld
bound
xorl
jns
cmp
inc
cmp
movsl
fldcw
cmpsl
inc
adc
push
in
lea
into
mov
and
push
xchg
pop
scas
adc
ja
popa
xchg
and
cltd
test
enter
or
inc
mov
pop
push
inc
xor
mov
cwtl
adc
sub
sbb
mov
je
out
notl
sahf
jbe
push
movsl
popf
inc
or
jp
movsb
inc
cwtl
push
cmpsl
inc
dec
dec
cmc
scas
mov
dec
out
xor
pop
scas
out
cs
push
inc
out
lcall
dec
cmpsl
pop
sub
mov
ds
sbb
xorb
mov
ljmp
jne
inc
loope
push
pusha
sti
jbe
lcall
jnp
mov
scas
ljmp
jnp
jmp
shr
inc
in
stos
sub
test
iret
xlat
dec
imul
test
ljmp
pop
mov
xchg
mov
fidivrl
repnz
push
xchg
cmp
lahf
xchg
mov
pop
sahf
insb
bound
cmp
fidivl
push
hlt
mov
push
loop
jecxz
sbb
sti
jae
addb
and
and
cld
mov
repnz
gs
push
std
icebp
cmp
xchg
jle
stc
aaa
aas
inc
xor
fisttps
add
jno
jns
mov
push
push
jle
push
cltd
inc
adc
hlt
pop
or
rcll
cmp
or
in
lret
insb
aad
fdiv
push
insl
stos
outsb
shrb
dec
lock
data16
and
push
cmpsb
jl
je
fdivrs
inc
out
test
lea
or
mov
mov
xor
inc
xor
aam
sarb
sahf
inc
jg
jmp
in
cmpsl
je
data16
sbb
xlat
negb
pop
inc
inc
int
repz
and
imul
rol
ffreep
stc
pop
jno
fildl
out
pusha
call
mov
push
mov
adc
mov
fimuls
mov
sbb
sbb
push
test
xchg
lret
push
jmp
leave
test
dec
shl
mov
ds
negb
mov
push
extrq
gs
dec
mov
xor
cs
push
outsb
into
fnsave
ljmp
dec
lds
jp
jo
cmp
adc
jno
mov
and
pushf
iret
popa
xor
cmp
lret
inc
shll
pop
or
mov
sub
mov
mov
and
or
jmp
cmc
fnsetpm(287
int
jne
popf
xchg
inc
stos
or
jmp
push
pushf
mov
jg
sub
dec
mov
jb
int3
lahf
and
popf
repz
push
lahf
xlat
pop
popa
pop
ror
addr16
and
sbb
xchg
pop
mov
mov
inc
fidivrl
push
xor
sahf
push
mov
ror
mov
add
pop
mov
fisubrs
lcall
out
pop
adc
inc
mov
add
dec
mov
sbbl
sub
mov
adc
sub
mov
add
lret
loopne,pt
fcoms
add
sub
stc
jl
js
aad
movsb
xchg
in
sbb
sarl
pop
movsb
push
jne
add
push
ss
adc
pop
mov
sbb
inc
test
xchg
dec
jg
stos
mov
add
ret
push
inc
bound
lods
loopne
out
fwait
adcl
cmp
sbb
push
in
fwait
dec
adc
mov
cwtl
dec
dec
mov
adc
fisubrs
mov
cwtl
aas
leave
addr16
popa
sub
adc
insb
mov
jg
pop
lret
ret
mov
cwtl
sub
adc
dec
mov
dec
cmp
mov
cmp
ret
jl
fdivrs
enter
insb
lcall
inc
push
pop
lahf
lret
sbb
subb
repnz
aas
inc
test
fucom
loope
mov
fdivrs
movl
cmpsl
and
cs
cmp
push
sbb
loop
xor
sbb
ds
dec
xor
pop
push
inc
mov
push
mov
xor
icebp
aam
cs
in
movsl
sbb
mov
cmpsb
mov
into
adc
iret
cwtl
pusha
sahf
push
push
jns
int3
in
cmc
into
sub
jge
mov
sbb
insl
lods
das
jno
or
dec
sub
pop
ret
test
cltd
and
fneni(8087
out
cmc
aaa
or
cmpsl
fistps
mov
add
and
mov
and
dec
in
push
pop
mov
mov
sub
outsl
fneni(8087
jo
repnz
xor
js
mov
jle
adc
add
sbb
add
scas
cs
in
push
mov
mov
jae
cmp
sahf
mov
mov
aas
push
in
and
pop
inc
sub
jp
inc
xchg
xor
cld
cli
out
in
ss
out
or
fmuls
fcmovne
sbb
js
pop
mov
test
mov
das
pop
ror
in
jae
in
jb
dec
data16
push
scas
jge
add
inc
iret
hlt
sarl
mov
sub
add
pop
int
push
mov
in
adc
ret
push
sub
pop
aas
call
mov
pop
ret
add
mov
stc
adcl
sub
fildl
fs
neg
lods
or
jl
xchg
push
dec
sub
mov
dec
aas
int3
mov
fdivl
and
push
cmp
jb
leave
sahf
sub
out
push
inc
sahf
shll
and
rcrb
fcoms
mov
pushf
into
xor
cli
ret
xchg
and
ds
xchg
and
fstl
dec
inc
js
negl
mov
out
xor
dec
sub
cli
cmp
sbb
nop
ja
inc
mov
mov
das
aam
push
dec
fldt
call
xchg
call
int3
shll
popf
jmp
xsaveopt
jle
add
lret
test
xchg
dec
sar
xchg
mov
insb
or
ret
push
lret
loop
insb
mov
add
and
mov
out
stos
pop
pop
insb
aaa
cld
mov
pop
sbb
or
scas
iret
orl
rclb
lret
testl
test
test
cmp
xchg
xchg
jbe
lcall
enter
rcrb
stc
pop
jbe
fstpt
inc
gs
or
out
ds
decb
add
fistpll
xor
lds
cmc
test
aaa
int
out
dec
inc
aaa
pop
divb
and
jb
sbbl
cmp
addb
movsl
jp
fmulp
mov
fwait
nop
ja
daa
push
rolb
cmp
push
xchg
test
insl
fisttpl
push
jg
pushf
daa
lods
stos
cmpsl
or
push
outsb
leave
pop
adc
cs
mov
mov
adc
cld
sbb
stc
imul
test
mov
cltd
or
scas
subl
mov
dec
cld
insl
daa
push
lret
push
cmovns
push
xchg
les
or
out
pop
adc
dec
out
xchg
les
sbb
inc
imul
and
fsubrp
in
loopne
popf
pcmpeqw
adc
xchg
cmc
pop
mov
stos
adc
leave
in
into
mov
push
lahf
jg
xor
pop
sub
jne
aaa
sub
xor
jae
nop
mov
nop
push
sbb
mov
scas
jl,pt
xor
std
sbb
leave
cmp
lret
lret
ljmp
or
aas
lret
psrld
in
push
push
cs
adc
filds
dec
or
ror
rol
push
xchg
push
test
mov
lds
jne
mov
lds
jle
mov
std
mov
sti
lods
lret
push
cs
and
cmc
jo
cmp
xchg
call
cmpsl
shlb
adc
push
sub
push
addl
rcl
pusha
sbb
jnp
shrb
mov
mov
popf
mov
lea
addr16
jp
xchg
lea
sub
xor
in
cli
and
cli
and
mov
ss
xor
int3
push
or
mov
rcrl
and
mov
lea
into
cmp
sbb
nop
pushf
and
stc
imul
test
icebp
sub
or
sbb
add
jno
daa
fiaddl
cmc
mov
add
je
outsb
cld
scas
and
mov
push
xor
pusha
mov
fsub
leave
push
sbb
sbb
bound
dec
mov
sbb
sub
sub
stc
or
fsubrs
cld
jne
xchg
adc
xchg
inc
bound
ret
scas
dec
mov
push
imul
add
icebp
or
jno
add
cs
loopne
loopne
adc
js
inc
cmp
or
lret
and
add
sbb
pop
pushf
lret
or
mov
lcall
inc
xchg
stos
adc
cmp
sub
cmpl
dec
adc
adc
add
cmc
xchg
pop
mov
out
jg
jmp
push
mov
orl
pusha
out
push
test
mov
add
les
out
ds
cmpsl
inc
shll
movaps
lahf
xor
test
sub
xor
in
pop
aad
mov
fcmovnb
lock
add
or
mov
ja
mov
sti
daa
cmpsl
pop
movb
ja
ds
sub
add
push
pushf
xor
jns
iret
cmp
mov
cltd
adcb
shr
out
scas
sbb
adc
out
incb
inc
dec
outsl
in
push
or
jbe
imul
pusha
test
xchg
insl
jge
out
and
mov
push
add
pop
jl
lcall
xchg
push
sbb
mov
xor
movsb
mov
push
andl
ljmp
int
xchg
add
mov
cwtl
push
aam
out
xchg
add
outsl
and
pop
or
lea
mov
or
or
repz
mov
inc
dec
inc
mov
mov
and
jmp
sbb
xorl
jge
lock
mov
addr16
popf
xor
sbb
pop
xor
aaa
bound
lds
cli
jb
sti
push
add
adc
les
mov
mov
in
jge
sbbl
pop
add
dec
pop
iret
pusha
xchg
cmp
add
mov
add
push
adc
or
inc
inc
add
mov
in
push
pop
scas
inc
and
dec
adcl
mov
out
mov
pop
mov
add
cmpl
in
jmp
cli
ljmp
pop
push
mov
dec
cmpsl
or
sub
cmpsl
mov
mov
in
pop
mov
outsl
jbe
fsubr
push
sbb
push
jno
ficomps
add
adc
sub
ret
inc
int
pop
pop
cwtl
jns
push
test
enter
mull
xor
gs
push
jmp
add
out
out
cmpsl
in
scas
sarl
sarb
lods
dec
data16
scas
and
mov
pop
inc
sahf
sbb
pop
dec
mov
jmp
test
or
dec
int3
jle
lea
pushf
cmc
out
push
movsl
pop
iret
xchg
push
sbbb
mov
int3
cmp
ss
gs
xor
faddl
mov
mov
lahf
sbb
push
xchg
sbb
push
cmpsb
movb
test
cmp
jg
test
cmc
imul
icebp
sbb
fiaddl
mov
iret
rcll
popf
mov
sbb
rcll
pop
fstpt
pop
dec
jecxz
jecxz
xchg
push
popa
test
testb
mov
dec
cmp
xchg
mov
jge
fcom
shll
stos
xor
add
sahf
jnp
cs
pop
push
mov
inc
pop
sti
jno
xor
sti
ss
or
mov
and
dec
fwait
pushf
mov
sti
pop
xchg
xlat
jne
repz
js
jbe
lods
jae
loop
pop
dec
xor
sbb
outsb
imul
jbe
jo
or
mov
stos
xor
pop
mov
xlat
das
jae
repnz
fstpl
sbb
in
and
orl
in
bound
imul
stos
add
icebp
mov
imul
aaa
vmwrite
sbb
xchg
pop
pop
daa
or
hlt
push
inc
shlb
sbb
xor
popf
idivl
push
out
dec
leave
jnp
jns
inc
or
xor
adc
stc
jg
test
mov
iret
adc
and
xchg
mov
loopne
cwtl
add
out
xor
xchg
pop
add
je
fisubrl
out
mov
stos
dec
add
mov
push
sahf
pushf
into
and
test
out
ljmp
push
pop
test
mov
or
mulb
pop
push
cmpsl
test
inc
jo
add
inc
pop
ret
adc
addr16
clc
mov
xor
xchg
scas
sbb
mov
mov
lock
adc
sbb
and
add
or
inc
insl
push
cmp
adc
scas
xchg
dec
push
lret
adc
push
push
pop
add
push
push
jle
xchg
sti
xor
popf
int
and
in
movl
cmp
mov
jnp
xchg
negb
mov
or
add
stos
mov
and
mov
sbb
bound
in
bound
and
ss
mov
dec
adc
outsl
sub
push
rcrl
das
call
fstpl
mov
lods
mov
andb
cmpsb
xchg
xchg
inc
out
xchg
sti
addr16
sahf
sbb
xor
lret
psubb
xchg
cmp
stc
pop
scas
lods
lret
pop
loopne
divl
fsubs
pushf
jo
and
push
sub
fsts
xchg
sbb
pop
shl
and
ret
movlps
jbe
in
cmpsl
std
lcall
shlb
or
test
shl
dec
ret
xchg
cli
packssdw
in
mov
out
pop
sbbl
jge
add
pop
adcb
cmpsl
sub
inc
cltd
outsb
out
rcrl
xor
sub
mov
add
in
in
inc
mov
xor
add
push
pop
pop
jge
js
sub
adc
mov
mov
movsl
insb
xor
push
push
mov
mov
jg
dec
lea
iret
xchg
lods
cmpsl
sbb
aad
jnp
scas
les
cmpsb
sbb
mov
cs
ret
imul
push
or
shlb
popf
add
aam
mov
add
jp
aad
psubb
aaa
cmp
call
clc
mov
mov
adc
cwtl
xor
mov
xchg
es
stos
daa
fists
mov
mov
ds
add
sbb
adc
or
fildll
aam
rcrb
mov
sbb
mov
mov
push
pop
jae
loop
add
inc
icebp
ds
pop
mov
insl
jo
push
pop
mov
pop
pusha
adc
inc
mov
push
vmovdqa
cwtl
int
or
push
adcb
rcrb
fstl
add
arpl
push
popf
lock
outsb
cmpl
dec
lcall
lret
add
sub
and
in
mov
xchg
jmp
add
subb
imul
stos
sub
inc
stc
dec
sbb
push
jmp
pop
jle
add
movsl
cmp
les
cmp
mov
and
xchg
or
fwait
xchg
idivl
xchg
cvttps2pi
in
push
and
rcrl
mov
mov
pop
pop
sub
mov
insb
mov
sub
cmp
imul
inc
pop
pop
cmpsb
push
fisttpl
mov
sbb
push
and
lods
fsts
mov
in
ljmp
add
lods
jnp
iret
or
sub
idivl
cwtl
js
xchg
test
ss
xchg
mov
mov
xor
hlt
gs
mov
movsb
enter
mov
mov
ret
and
and
ffree
xchg
repz
lods
jecxz
icebp
mov
dec
out
enter
iret
movsb
clc
pop
add
nop
lcall
xor
bnd
cltd
jmp
dec
jo
mov
adc
and
cmp
fnstenv
mov
push
cltd
ss
xor
insl
or
int
sbb
push
icebp
negb
fldl
xchg
jns
dec
dec
xchg
dec
fadds
xor
mov
mov
jle
icebp
sbb
lahf
and
push
sub
jne
jnp
or
test
outsl
jae
jmp
and
out
inc
xor
gs
incl
cmp
repnz
or
ret
jbe
sarb
cmpb
and
sub
rcrb
jge
bound
out
dec
or
imull
pop
adc
dec
repz
test
movsb
adc
fs
cmp
add
mov
or
sbb
add
push
push
stos
jp
or
inc
imul
in
ficompl
stc
lcall
pop
mov
aad
cmp
mov
loopne
xor
movsb
daa
movsb
call
adc
fwait
push
mov
cwtl
rep
and
jecxz
loope
in
std
add
adc
cltd
lret
xor
rcr
jge
mov
les
iret
adc
clc
ljmp
repz
jl
mov
xchg
or
fcoms
in
and
pop
mov
dec
stos
pop
mov
xchg
ja
loop
test
dec
movsl
mov
mov
push
dec
sub
pop
outsl
fnstenv
push
sbb
sub
in
popa
lcall
daa
or
sbb
pop
lods
movsl
mov
or
outsb
mov
hlt
jo
psubb
aad
cs
daa
or
adc
pop
xchg
ljmp
aas
daa
pop
faddp
and
lahf
sbb
fnstenv
das
xorl
mov
cmp
ljmp
adcl
xor
mov
dec
mov
add
ljmp
arpl
aaa
fstps
xor
lods
jbe
in
xchg
or
enter
mov
mov
inc
xor
pop
or
imul
or
jp
in
fdivrs
scas
and
push
dec
dec
mov
jno
ja
mov
lods
insl
dec
and
push
jecxz
ror
push
push
inc
mov
xor
insb
arpl
es
dec
enter
cmpsb
xor
xorl
inc
add
jg
out
comiss
sub
arpl
outsl
dec
scas
xchg
xchg
mov
mov
pop
mov
ljmp
arpl
mov
cmpsb
push
sarl
jp
add
fbld
dec
lret
nop
jmp
imul
adc
dec
pop
sbb
testb
xchg
and
jno
pusha
rclb
or
adc
loope
mov
enter
mov
mov
cli
test
pop
es
mov
add
fidivs
sub
push
cmpsb
es
int
pop
mov
lahf
mov
cmp
jl
scas
test
lods
or
dec
and
cmovnp
mov
outsl
add
shrb
and
test
mov
lret
test
xchg
pop
das
loope
loopne
inc
adc
iret
ret
std
lcall
fildl
fcompl
dec
inc
or
js
jp
push
xchg
jle
cmp
jne
leave
rcrl
aas
dec
push
iret
jo
mov
and
mov
jns
xlat
cmpl
ja
enter
mov
jmp
push
add
xor
scas
jle
cmp
pushf
repnz
xchg
mov
int3
out
push
shll
std
pushf
andb
test
leave
insb
bound
push
shrb
inc
push
pop
cmpsb
icebp
dec
push
popa
ljmp
dec
mov
push
mull
dec
adc
mov
stos
rorb
outsb
fdivs
addb
and
daa
push
and
or
mov
movb
mov
push
sbb
pop
in
mov
jo
dec
or
dec
dec
adcb
xlat
pop
mov
push
xor
and
inc
xchg
sbb
xchg
mov
cmpsl
testl
push
xchg
ftst
jno
test
cli
jge,pn
test
inc
cli
mov
ss
or
test
add
xor
aad
mov
leave
dec
das
loop
jl
adc
rolb
mov
dec
out
cli
xor
xlat
push
lahf
or
ljmp
adc
fcomps
inc
rcll
or
movsb
and
lods
jge
gs
add
loop
jnp
aas
pop
cmpsl
mov
out
sbb
aaa
add
inc
addl
jbe
inc
pop
cmp
add
cmp
adc
popf
repnz
and
fidivrs
popf
int
ret
mov
lret
stc
andb
out
mov
dec
imul
dec
daa
push
xor
movsl
repnz
dec
xor
outsl
loopne
pop
jl
dec
in
sbb
bound
push
jl
inc
pusha
sahf
outsb
dec
aam
mov
in
sub
push
cmpsb
lds
cld
mov
ja
cs
xchg
hlt
mov
add
jmp
test
aam
orb
gs
push
scas
sti
inc
jne
test
stc
jl
out
cwtl
mov
out
xchg
outsb
shlb
mov
and
push
arpl
add
xor
cli
xchg
scas
cltd
stos
lock
mov
cmp
adc
cld
scas
sub
jp
movsl
pop
pop
in
aaa
imul
push
divps
pop
out
and
inc
cmc
xlat
inc
push
push
hlt
dec
mov
and
sbb
cmp
mov
adc
sbb
mov
test
out
jo
ret
in
cwtl
jae
rcrl
xor
mov
sub
xchg
lds
and
in
push
cmp
in
das
mov
xchg
cmp
pop
pop
xchg
mov
mov
or
fmul
mov
mov
mov
jno
lods
inc
add
rorb
out
or
xchg
or
jne
dec
fmul
jae
sbb
out
cmp
ljmp
fimuls
xchg
jmp
jmp
nop
cwtl
ror
dec
inc
and
mov
or
ret
jl
push
add
add
mov
and
sahf
pusha
and
dec
dec
dec
jle
dec
in
fcos
into
push
stos
push
fcomps
push
xchg
push
cld
and
jp
mov
dec
mov
cs
jbe
daa
insl
es
sti
xchg
cmp
sub
jbe
mov
push
sbb
pop
aad
out
mov
sbb
cld
push
js
popf
idivl
fwait
cmp
or
jle
sbb
insl
adc
pop
xor
divl
mov
push
xorl
or
aam
fwait
lret
jnp
cld
jo
and
cwtl
pop
movsb
rorb
push
out
or
test
pushf
pop
cmp
shlb
add
cs
fdivrs
cmc
fildll
push
mov
mov
shll
jnp
xchg
sub
scas
push
imul
das
inc
pop
sub
in
aam
out
gs
lahf
sub
fisttps
jae
mov
sahf
cltd
lcall
adc
outsb
push
cli
movsb
les
fldl
ret
icebp
fnstcw
lock
mov
jno
mov
inc
xchg
push
adc
test
pop
or
xchg
pop
outsl
out
fs
mov
xchg
inc
cmp
sbb
inc
inc
sub
pop
add
cmc
out
gs
adc
iret
popa
xchg
gs
cmpsl
and
ss
add
mov
dec
shll
arpl
ss
pusha
repnz
and
pop
mov
ss
loop
pop
ret
mov
pop
push
jbe
cmp
inc
adc
mov
push
jp
jmp
xlat
aam
addr16
arpl
xor
xchg
pop
cmpsl
jp
push
adc
ja
jecxz
stos
das
sbb
dec
sbbb
repnz
nop
mov
imul
adc
pop
jbe
addr16
push
pop
fdivl
ljmp
addr16
sbb
lcall
cmpl
dec
sbb
sahf
jo
adc
popa
sbbb
arpl
cs
mov
popa
outsl
dec
notl
sar
stc
mov
and
mov
sbb
jg
jae
outsl
jno
out
in
sub
loopne
push
push
push
out
jb
stc
cmp
js
or
stos
lcall
aad
sub
mov
jmp
add
fxch
adc
inc
enter
imul
xchg
or
ljmp
xchg
ss
xchg
mov
fimull
aas
jbe,pt
and
mov
in
pop
movsb
cs
mov
gs
jle
out
pop
pop
in
or
dec
mov
out
les
lods
shl
inc
je
xor
add
fsubr
inc
dec
jecxz
add
cltd
adc
subb
enter
push
push
jne
and
sbb
jp
sub
pop
mov
decl
mov
or
push
push
cwtl
lea
lock
sti
jg
mov
adc
in
cmp
sub
lods
test
and
shl
and
adc
popa
int
push
sbb
push
movsb
neg
mov
lods
flds
dec
or
add
out
and
jp
bound
pop
jle
das
ljmp
divb
insl
out
adc
insl
push
mov
jbe
mov
sub
or
mov
pop
inc
jnp
mov
mov
or
or
fsubl
xchg
imul
fistps
cmp
xor
int
xcrypt-ecb
cmpsl
push
pop
add
lahf
cmpsl
movsl
cli
lret
jno
add
pop
es
dec
push
jmp
decl
imul
jns
lods
lods
pop
pusha
out
cld
les
push
repnz
je
xchg
push
pusha
jge
mov
mov
mov
push
gs
out
mov
fcmove
dec
xor
test
shrb
clc
cmpsb
mov
test
pop
int
daa
dec
aam
jb
or
ljmp
lock
xlat
js
inc
cmpsb
cmp
mov
or
sbb
cmp
jbe,pt
and
aaa
data16
pop
dec
lret
sub
jl
movsb
stos
xchg
xchg
jp
ret
outsl
sti
in
add
xchg
mov
mov
in
sahf
dec
adc
pop
test
shlb
mov
rcll
pop
and
aaa
unpcklps
jle
push
cli
popa
addl
std
adc
push
cmc
jne
loopne
mov
and
sbb
loopne
dec
cmc
sub
out
fs
aas
dec
push
fstpt
scas
push
in
fists
icebp
adc
aas
fstps
fstpt
icebp
les
cltd
fmull
or
in
inc
sub
jmp
je
cmpsb
and
xchg
sbb
push
scas
cld
cmp
pop
sbb
test
cs
xchg
add
adc
lock
mov
cmpsl
mov
xor
pop
insl
clc
inc
mov
leave
dec
aad
mov
mov
fisubs
pop
cld
dec
lods
pop
lea
push
rclb
jno
popf
adc
dec
mov
in
lods
adc
or
repz
sub
jo
incl
dec
add
cmc
add
inc
inc
mov
ret
sti
lock
aad
test
lods
js
in
sbb
sub
out
out
jbe
dec
leave
enter
pop
push
je
push
inc
dec
fisubs
mov
out
push
xor
ljmp
cmp
adc
nop
mov
lahf
xor
movsl
loopne
xlat
ja
dec
or
jp
push
and
dec
push
mov
out
outsb
test
sti
cmp
mov
xchg
sub
ss
mov
je
adc
cmp
sbb
pop
jo,pt
test
aas
jo
and
jne
sbb
inc
in
mov
cmp
in
repnz
ljmp
push
stc
sbb
fiaddl
mov
add
out
gs
push
cmp
imul
stos
rcrl
inc
mov
js
jo
and
scas
xchg
outsl
inc
pop
mov
ja
sbb
mov
xchg
sub
shll
sarb
cmpsl
dec
pop
jae
mov
push
icebp
pop
xchg
cmpsl
xchg
les
and
add
cmp
or
ret
jbe
sbb
iret
xor
sbb
push
sbb
fsubrs
mov
je
mov
xchg
and
icebp
repnz
cmp
ret
and
cmc
jo
push
data16
add
sub
in
mov
cmp
loope
dec
fisubs
and
rolb
lock
jb
add
and
repnz
mov
mov
cmp
std
mov
cmp
aas
mov
movsl
add
repnz
cmp
adc
repnz
xchg
cmp
dec
call
adc
adc
pop
andb
mov
inc
jp
das
mov
hlt
add
and
sub
mov
dec
ljmp
fidivrl
cwtl
adc
mov
xchg
adc
jb
sub
shrl
stos
cld
ret
lahf
fsubs
fistpll
cmp
nop
pushf
decb
hlt
rorb
xor
push
inc
push
mov
stos
xorb
cwtl
int
xchg
dec
add
cmp
xchg
adc
adc
xchg
sbb
ljmp
test
andl
mov
inc
ror
mov
mov
mov
ret
jp
fiaddl
das
mov
repz
adc
sbb
cmp
add
lds
fcoml
pop
mov
xchg
gs
mov
mov
sbb
push
sbb
sbb
mov
push
xor
mov
int3
popf
sub
fistps
and
mov
addr16
flds
fisubrl
push
adc
or
ljmp
adc
cmc
lods
xchg
mov
cmp
ljmp
jne
add
and
daa
xor
jle
sti
ror
cmp
test
xchg
sub
lret
pop
es
add
stos
and
in
addl
sbb
xor
or
iret
roll
scas
dec
mov
daa
xchg
loopne
push
mov
xchg
and
out
sbb
lahf
lock
xlat
cmp
aad
xor
pushw
cmpsb
mov
xor
lahf
loopne
pushl
jbe
sub
jbe
pop
cld
mov
in
incb
jne
iret
xor
mov
mov
jle
hlt
jae
mov
ja
lcall
adc
outsl
fmull
loope
popa
and
mov
dec
jmp
int3
and
test
negb
dec
or
xchg
dec
cltd
scas
cwtl
jbe
mov
mov
test
aam
das
jg
popf
or
mov
and
pop
std
pop
push
xchg
mov
xor
jne
frstor
popa
arpl
jmp
or
mov
xor
add
enter
scas
sub
jge
stos
iret
cmp
adc
xor
dec
xchg
or
movsl
jmp
enter
hlt
cli
into
pop
cs
addr16
fwait
pop
xchg
adc
jp
jmp
dec
push
or
movsb
pop
stc
call
inc
mov
and
outsl
mov
add
pop
add
push
aam
test
xor
test
repz
aaa
and
stc
clc
and
enter
dec
jg
test
adc
cmc
mov
push
dec
enter
fisttpl
cmp
jecxz
mov
xor
imul
test
lds
push
sbb
xchg
sbb
jl
push
lock
ret
sub
mov
add
push
and
cwtl
push
scas
mov
mov
dec
cmp
xchg
mov
inc
je
adc
push
sub
mov
sbb
movsl
cmp
out
push
adc
and
adc
dec
daa
sub
lods
cmpsb
xor
or
fnstsw
sbb
inc
inc
xchg
pop
xlat
ja
add
add
in
std
push
andb
clc
push
das
adc
push
fs
mov
rorl
fs
pmaxub
scas
jecxz
jmp
dec
icebp
xchg
loop,pt
icebp
movsb
outsb
lahf
mov
sbb
xchg
andl
fldenv
rcr
mov
es
mov
jp
mov
fwait
push
xor
roll
icebp
inc
out
mov
push
cmp
jae
xlat
int3
dec
into
orl
xchg
add
xor
inc
dec
shlb
push
or
loope
hlt
out
jle
inc
mov
cltd
xchg
mov
movsl
push
sub
mov
nop
dec
scas
in
fsubrl
popa
dec
pop
decb
in
add
test
xchg
inc
push
mov
or
or
jecxz
sti
incl
mov
pop
inc
mov
clc
lods
inc
cmp
scas
idivl
mov
aam
jle
jp
push
push
inc
out
testl
lret
inc
push
and
push
jp
lea
push
mov
aam
mov
lahf
cmp
push
pop
loop
add
ret
ror
ds
inc
or
mov
lea
adc
sub
mov
enter
or
sbb
pushf
or
aam
inc
cld
fisubrs
fs
jmp
push
xchg
lods
lret
jp
adc
mov
lret
cmp
aas
push
negl
pushf
outsl
insl
xorb
decb
xlat
jmp
int3
stos
leave
pop
mov
or
rclb
movsb
loopne
outsb
mov
lods
sbb
inc
ljmp
leave
adc
jns
add
mov
test
subl
jb
dec
out
push
jbe
xchg
adc
iret
push
sub
inc
out
dec
insl
or
call
push
inc
and
pop
and
cmp
sbb
xlat
and
dec
adc
dec
rcrb
cmp
pusha
imul
pop
mov
xchg
and
xchg
xor
sti
out
and
dec
pop
pop
adc
push
add
push
jne
xor
inc
push
sbb
push
je
call
in
cmpsb
leave
out
xor
mov
inc
sub
lret
arpl
sbb
leave
fcom
adc
cltd
or
mov
jbe
lret
pop
pusha
and
xor
jecxz
lods
aad
push
or
cmp
popl
push
jp
bts
inc
mov
jmp
aaa
push
das
add
and
xchg
adc
and
iret
movsb
repnz
ret
add
jge
jp
jns
jb
repz
insb
xchg
icebp
mov
dec
jmp
mov
clc
inc
mov
push
and
push
movsb
cltd
mov
dec
xchg
xchg
int3
xor
test
jle
and
or
inc
test
dec
je
lea
and
test
xchg
sbb
aam
pause
sbb
adc
test
std
push
popf
out
xchg
lods
pop
fsubp
sub
sub
ja
mov
xlat
xor
push
nop
jmp
lea
pop
dec
out
inc
fdivr
clc
stos
les
out
inc
lea
add
repz
std
add
or
mov
xor
scas
lcall
arpl
jno
cli
xchg
hlt
adc
cmp
jns
or
jp
mov
shr
nop
mov
fisubl
fs
leave
rorb
cld
out
mov
out
dec
leave
push
mov
jle
dec
xor
push
fistl
xchg
movsl
stos
or
xchg
out
testl
adc
inc
cmpl
lock
cmp
repnz
rcl
push
out
xor
fadds
xchg
push
jp
inc
fnstcw
inc
mov
orb
mov
insl
xor
es
cmc
loop
sbb
adc
cmpsb
mov
lock
ss
push
or
aad
outsb
mov
out
notl
jmp
pop
jp
mov
sarb
call
and
mov
adc
cmp
lds
xor
dec
scas
int3
xchg
mov
stos
loopne,pt
sub
hlt
pop
xchg
jb
dec
inc
dec
cmpsl
mov
jl
inc
dec
jle
mov
mov
js
lret
imul
xchg
xorb
pop
mov
jno
sbb
xor
adc
fildl
nop
sbb
int
sub
aaa
jle
gs
push
cld
and
insl
repz
push
mov
iret
or
push
push
popf
movsl
jnp
jl
das
dec
and
mov
int3
xor
movsl
mov
push
mov
jg
jmp
xor
lahf
jl
pop
icebp
jo
pop
outsb
mov
scas
pop
add
fnstsw
rcll
push
sub
cmp
jb
shl
das
jne
xchg
cmovno
xorb
cli
sub
sub
cs
mov
xorb
xor
pop
ljmp
fstpt
rcll
das
xlat
mov
push
or
lods
ret
mov
rcrl
and
leavew
jno
rol
mov
add
mov
shrb
lods
add
gs
scas
sbb
jg
mov
dec
sbb
ss
adc
xchg
adc
sbb
cmpsl
jbe
call
sahf
jno
jns
outsl
incl
es
mov
sbb
sbb
enter
jns
sub
mov
pop
imul
cmp
jbe
mov
enter
fdivrs
mov
xor
out
imul
inc
or
lds
call
jle
mov
xlat
ret
add
je,pn
aam
nop
loop
jo
arpl
jmp
push
out
cmp
pop
outsb
xchg
mov
xor
pop
cmp
and
inc
nop
mov
inc
clc
pop
dec
pop
jmp
imul
mov
loop
je
xor
pop
mov
dec
jnp
lret
dec
mov
test
jmp
stc
mov
pushf
lcall
andl
icebp
loopne
push
inc
cmp
icebp
lret
ret
stos
inc
lods
outsl
xor
ret
xchg
add
aam
inc
ds
mov
std
cs
pop
andb
push
rcll
or
mov
insl
daa
aam
sub
add
or
xor
jnp
or
dec
add
lahf
push
mov
add
pop
inc
in
icebp
jb
divl
pushf
repnz
dec
mov
adc
icebp
aam
sbb
aad
mov
sub
fnstcw
mulb
or
xor
es
adc
ja
jo
mov
mov
mov
jae
push
mov
test
add
das
dec
ficoml
sbb
lcall
adcl
mov
lock
incb
shll
gs
mov
rcl
inc
mull
push
dec
mov
addr16
mov
jp
jnp
repz
sahf
jmp
fstl
shlb
and
aaa
sarl
adc
mov
clc
xor
jmp
aam
stos
sub
pop
mov
movsl
les
out
mov
mov
inc
push
or
movsb
iret
in
pop
sub
sbb
ja
stos
pop
fwait
bound
mov
repnz
cmp
mov
js
pop
aas
lret
cltd
fs
shrl
lds
jno
sbb
jmp
jmp
ss
pop
xchg
push
into
dec
push
dec
mov
icebp
stos
into
stos
loope
movsl
mov
push
jg
in
movsl
or
sahf
mov
xor
shll
cmp
mov
lahf
and
xchg
jmp
jge
insb
js
je
cmp
xchg
dec
mov
int
mov
ljmp
fcomi
arpl
hlt
call
test
dec
addb
in
mov
popf
or
add
jbe
or
les
gs
pop
add
inc
sub
and
sub
dec
push
es
or
sbb
popa
cmpl
xchg
loope
sahf
ss
sbb
fsubrs
mov
std
inc
pop
and
aaa
ss
loope
sbb
lret
mov
add
loop
loope
stos
cltd
out
in
ret
jns
dec
stc
sbbl
aad
cmpsb
cld
and
aad
mov
into
xchg
ja
mov
mov
jbe
cmpsl
xorl
jb
xchg
push
adc
push
inc
lods
cmp
in
or
aam
into
cwtl
xor
or
push
pop
push
loopne
fucomi
movsl
inc
aas
mov
xorps
ret
cli
push
cmp
mov
ja
pop
stos
mov
jnp
shll
shrb
lret
fst
and
jmp
push
mov
lcall
sub
arpl
push
int
popa
addb
les
push
test
cltd
cmc
adc
add
lahf
xchg
mov
loope
add
pop
sarl
push
lods
je
mov
clc
jne
int3
movsb
pop
push
fstpl
jmp
rcl
sbb
mov
xchg
push
inc
aaa
or
fadd
hlt
test
mov
insb
insb
cs
push
pop
xor
inc
pop
dec
fnstenv
repz
or
stos
mov
les
and
test
push
stc
sahf
pop
mov
ljmp
push
lock
inc
push
jbe
shll
add
pop
testb
cli
inc
sbb
push
sti
mov
adc
xchg
inc
aaa
outsb
shlb
add
das
popa
cmpsl
xchg
ja
sbb
les
xchg
cmp
out
jne
cmp
mov
xchg
sarb
jmp
daa
scas
push
punpckhdq
int3
cltd
inc
gs
mov
add
mov
cli
mov
and
push
xchg
or
sub
repz
mov
in
xchg
pop
orl
out
inc
inc
leave
cmpb
lahf
lods
loopne
pop
loopne,pn
mov
sub
movsb
insl
xchg
into
jmp
mov
xchg
or
stc
repz
das
imul
sub
fmull
ljmp
ret
cmp
addr16
fldl
outsb
jecxz
loopne
and
cld
jb
inc
inc
add
enter
or
ds
test
mov
dec
pop
aaa
rol
repz
push
push
dec
xor
push
jl
add
xchg
lahf
sbbb
xchg
ds
pusha
iret
popf
push
or
imul
das
dec
sbb
sub
dec
ljmp
rcll
insb
into
int3
inc
push
out
xchg
adc
mov
movsb
iret
or
adc
int
ljmp
in
inc
mov
test
sbb
cmp
js
mov
xchg
cmp
loopne
daa
mov
test
mov
push
into
fldt
sub
subb
sub
pop
dec
test
fdivp
je
sahf
lods
sysret
test
push
stos
hlt
cmp
xor
pop
fisubl
loope
mov
push
lods
std
xor
pop
outsl
cmp
xchg
call
push
pop
aad
ja
cmp
or
pop
dec
dec
dec
scas
xchg
repz
aas
fistpll
sahf
cmp
jo
adc
xor
emms
add
push
loope
adc
sub
jo
xor
and
hlt
sub
jp
cmp
add
cwtl
clc
fwait
in
fisttps
cwtl
mov
add
les
sbb
stc
push
loopne
mov
mov
adc
pop
es
int
jns
add
sub
adc
fsubp
xchg
sub
aam
cld
popa
mov
xor
shll
shll
mov
mov
mov
cli
rcl
inc
inc
leave
mov
xchg
sahf
adc
int
aad
movb
pop
and
mov
mov
push
push
cs
xor
leave
stos
movsb
pop
or
fdivs
aad
int
test
nop
lock
iret
jecxz
pop
push
pop
cltd
popf
out
mov
ss
jl
cmpl
xchg
pusha
pop
lahf
xchg
imul
sar
xor
orb
sub
push
sbb
and
sub
jecxz
mov
mov
xchg
xor
dec
mov
stos
mov
dec
push
and
pushf
ja
mov
outsl
pop
push
daa
mov
call
pop
xchg
mov
sbb
or
adc
push
sub
adc
pop
jmp
mov
push
and
xchg
in
cli
push
hlt
sub
dec
jae
add
sti
aad
sbb
or
sub
pop
or
cmpsl
jp
leave
inc
rcrb
mov
push
xchg
inc
cmp
lret
cltd
or
adc
cmp
xorb
push
pusha
scas
and
dec
sub
xor
sub
mov
insb
mov
bnd
mov
cmp
xor
cld
pushf
push
sbb
in
add
in
int
sti
mov
cs
imul
inc
in
cmpsl
out
xor
xor
lret
fdiv
test
push
pushf
sbb
fidivs
sub
sub
ret
aam
loopne
iret
test
adc
imul
xchg
sbb
pop
fwait
int
xadd
add
ljmp
mov
aad
mov
notb
dec
in
lock
sub
repnz
gs
ss
pushf
mov
jo
sbb
cltd
clc
and
and
mov
xor
popa
not
pop
fwait
outsb
sbb
in
cmpsl
sbb
mov
jo
testl
aaa
mov
ljmp
cmpsb
inc
ja
sbb
pop
cmpsl
icebp
out
xor
push
mov
inc
ja
dec
aas
clc
cmp
hlt
jbe
pop
jo
mov
add
inc
xchg
sub
or
cltd
jae
out
mov
imul
adc
mov
inc
inc
inc
sbbb
and
hlt
dec
mov
lea
jbe
neg
or
mov
push
rorb
outsb
scas
pop
mov
imul
cmp
data16
xchg
xor
and
shl
fidivs
rcrb
aaa
outsl
jp
faddp
inc
ljmp
dec
adc
cs
or
stc
enter
hlt
movsb
push
fnstcw
push
iret
mov
mov
out
addr16
popf
popf
jno
outsb
dec
adcb
xchg
jbe
xchg
cmp
sub
inc
adc
mov
jne
xor
cmpsl
cmp
stos
jns
fidivs
mov
fsubl
cmp
jmp
mov
cltd
cs
shrl
mov
ret
dec
insb
rcl
cmpsb
xchg
push
jnp
fwait
in
sub
lds
out
imul
xchg
daa
out
enter
dec
and
and
orl
pusha
ret
pop
sub
pushf
cmp
push
out
xchg
xchg
lret
movsl
out
or
and
cmp
pushf
idiv
outsl
clc
jmp
mov
stos
mov
test
scas
ja
or
sbb
cld
mov
sbb
ja
dec
enter
push
mov
int
dec
into
xor
adc
and
push
mov
mov
push
sbb
fiadds
clc
loopne
xchg
cmpsl
popa
dec
fldcw
pop
ljmp
mov
xadd
sbb
pop
insb
inc
fnstsw
pushf
mov
and
shlb
jmp
in
icebp
fisttpl
push
pop
andl
sahf
iret
and
fwait
imul
cmpsb
insl
inc
fisttpl
push
dec
dec
jne
inc
inc
mov
pop
pop
push
int
popf
fistpll
mov
dec
adc
cs
xor
std
dec
inc
int
inc
inc
test
inc
mov
fstl
enter
xchg
mov
icebp
or
aad
insl
shl
xchg
test
lcall
pop
adc
xchg
xor
fldl
in
out
ret
or
pop
mov
fstpt
shrb
dec
inc
sahf
push
and
push
cs
negb
xor
and
dec
aaa
mov
mov
popa
push
dec
sub
imul
test
sbbl
mov
mov
lea
and
xor
or
sub
mov
mov
xchg
xchg
pop
mov
push
dec
aad
add
cmp
and
cmc
push
js
cmc
loopne
inc
insb
hlt
rorl
push
call
pop
imul
jp
jae
fmull
add
inc
mov
cwtl
push
or
jne
sar
and
sub
pop
push
mov
ja
pusha
xchg
xchg
in
sub
jl
adc
adc
je
aas
test
pop
lret
fucom
jo
mov
cwtl
mov
out
mov
push
mov
scas
sub
sti
imul
into
and
lds
sahf
daa
ds
pushf
loopne
xor
jne
push
pop
add
pop
mov
iret
inc
dec
inc
clc
in
or
dec
pop
adc
or
and
out
out
inc
daa
fisttpl
sbb
mov
movl
adc
out
add
and
arpl
mov
jmp
gs
bound
je
mov
sbb
dec
fs
jbe
add
dec
fists
sbb
mov
ljmp
mov
sub
jbe
sbb
insb
jle
aam
dec
dec
dec
pop
adc
or
xor
fimuls
pop
lret
movsl
and
xchg
jns
dec
cli
jg
xchg
cmp
ficomps
aad
out
loope
mov
fwait
inc
mov
jge
insl
mov
cmp
mov
nop
scas
pop
inc
int3
movsl
inc
inc
cmp
push
jg
and
getsec
mov
and
jl
add
mov
sub
or
xor
and
roll
or
jno
adc
pop
popa
xchg
pop
sbb
inc
cwtl
mov
xchg
jno
push
jne
jecxz
jge
push
xor
jnp
xlat
jp
in
xorl
out
or
fs
sub
test
mov
sub
loopne
pop
sub
pushf
dec
push
arpl
fwait
mov
clc
es
lds
cltd
ret
fwait
aam
cld
pop
push
ret
jne
mov
or
mov
xchg
insb
ret
sbb
fsubs
lods
sub
daa
inc
sbb
cmp
fstcw
mov
in
in
in
mov
and
adcl
es
in
xor
mov
jp
mov
push
shl
sbb
lea
push
outsl
pop
xchg
in
stos
test
jbe
adc
mov
ds
scas
jmp
cmpsl
xchg
fprem
in
mov
xchg
and
jmp
sub
shrl
or
clc
jo,pt
jmp
push
push
mov
adc
xchg
ret
gs
or
repz
xchg
jl
std
mulb
mov
cmp
dec
cwtl
ret
lahf
inc
push
lret
ljmp
push
fsubl
pushf
inc
rolb
mov
push
imul
addr16
ret
sbb
hlt
hlt
mov
push
popa
test
xchg
jmp
cmc
sbb
lcall
outsb
mov
jle
dec
adc
mov
lods
jle
and
popl
lret
in
inc
out
mov
imul
or
ret
test
je
inc
inc
jmp
dec
adc
jb
push
mov
stc
rcrl
inc
bound
inc
ds
mov
test
sarl
inc
jb
sub
jns
pop
push
jo
daa
jg
lcall
sub
inc
push
and
sbbb
dec
bnd
das
jno
mov
push
out
mov
sti
mov
cwtl
push
cltd
mov
pop
add
popa
cmpsb
mov
stc
enter
loope
scas
xor
push
jbe
or
idivl
enter
mov
pusha
into
xchg
std
mov
loopne
and
dec
mov
sub
or
cmc
mov
mov
mov
cmp
aad
xor
pop
mov
dec
xchg
incb
jo
jns
ja
push
lods
add
cli
scas
inc
cmp
sub
dec
cmpsl
pop
pop
xor
loope
add
inc
sbb
and
inc
cltd
and
sbb
dec
add
xchg
and
test
insb
aaa
ja
pop
inc
lods
sti
jbe
lcall
insb
stos
stos
stos
mov
test
jg
mov
iret
cs
mov
dec
xchg
addr16
push
decl
subl
mov
andb
or
xchg
int
into
pop
imul
lods
mov
lods
add
jbe
mov
loope
inc
pusha
faddp
addr16
mov
adc
stos
pop
dec
jns
sub
iret
sti
xchg
lcall
iret
mov
mov
scas
in
int3
out
dec
fs
sti
mov
and
mov
mov
pop
jne
sbb
js
push
nop
movsl
mov
mov
fisubrs
into
cltd
cmp
xchg
xchg
lods
jnp
push
aaa
mov
movsb
mov
mov
cmp
jge
pop
pop
sub
add
call
mov
daa
aam
xor
and
stos
movsl
add
incl
xor
dec
dec
scas
gs
mov
rcll
scas
arpl
subl
lds
testl
repz
idivb
sbb
jnp
test
insl
push
fmuls
sahf
mov
bswap
jnp
jbe
jns
dec
sti
sub
lock
pmaxsw
xchg
push
mov
lret
imul
out
xchg
or
jnp
in
inc
movsb
sarb
stc
pusha
aad
into
mov
shlb
or
sub
mov
and
stos
pushf
xlat
rcl
dec
jmp
rol
imul
popf
test
sub
in
in
jnp
loope
lret
jns
xchg
hlt
adc
dec
jae
test
push
or
push
mov
push
xchg
idivb
dec
dec
pop
or
xchg
sbb
mov
jno
mov
lods
jne
std
inc
adc
cmp
icebp
push
mov
rcrl
shrd
incl
int
lahf
xor
adc
cmc
fistpl
sti
inc
inc
jbe
lock
jmp
pop
pusha
adc
repnz
mov
jge
lods
rcrb
or
and
add
scas
xor
mov
insl
lds
scas
xchg
stos
xchg
insb
adc
dec
imulb
aam
cmpsb
aaa
adc
mov
mov
sarl
dec
cmp
or
popa
sbb
or
inc
jmp
sti
dec
jecxz
lods
imul
push
ljmp
mov
addr16
and
cmpb
mov
arpl
dec
int3
adc
in
sbb
pop
pop
adc
out
insb
repnz
dec
adc
popf
out
cs
or
lret
pop
pop
push
or
sarb
fisubrs
sub
push
in
mov
or
xor
xchg
dec
adc
arpl
mov
lods
dec
gs
cwtl
jnp
pop
sahf
gs
push
out
or
in
ret
jnp
ja
jae,pn
aad
test
dec
mov
jecxz
in
add
xor
mov
mov
and
es
mov
pop
fistl
rol
and
dec
cmp
jno
es
xor
arpl
xchg
cmp
outsl
or
repz
mov
and
mov
fldt
sbb
aad
lock
faddp
sbb
cmp
shlb
dec
mov
popa
cmpsl
fcoms
add
iret
cmp
stos
rorb
cmc
stc
push
push
jecxz
mov
invd
jge
sahf
sarl
add
fcoml
xor
sbb
imul
xchg
cld
mov
xor
ds
dec
adc
mov
scas
std
sub
jl
xchg
cmpsb
std
iret
mov
mov
pushf
cmpsl
test
test
pushf
xor
pop
gs
data16
push
shll
dec
out
lea
jo
jp
push
notb
xchg
js
push
push
adc
out
jbe
push
dec
fnstenv
or
mov
into
sti
orl
pop
pop
sbb
lahf
and
rcr
cmp
mov
shlb
das
cmp
es
adcb
mov
daa
imul
xor
xorb
adc
xchg
or
sti
or
push
mov
pusha
test
insb
add
fsubr
push
or
ds
lret
xchg
dec
scas
xlat
cmpsb
fadd
fnstcw
ficoml
es
mov
adc
pop
jge
scas
sub
mov
imul
sbb
pop
sub
jb
gs
fmul
pop
movsb
mov
inc
pop
sbb
adc
shll
cwtl
lock
adcb
in
or
xchg
add
lods
lods
test
push
cmpsl
loopne
daa
ja
fldenv
imul
lods
jne
dec
mov
rorb
jb
pop
leave
incb
js
mov
aas
inc
inc
push
ljmp
mov
push
mov
cmp
out
movsb
outsb
push
xchg
fimull
and
repz
inc
faddl
in
adc
mov
pop
push
mov
loopne
ljmp
test
loopne
adcb
adc
xchg
shl
aam
lods
cmp
pop
pop
xchg
push
dec
cmp
push
xchg
das
dec
pop
push
cli
pusha
inc
stos
ret
fs
add
pop
ss
mov
out
jmp
repz
lret
lock
dec
push
jl
cli
and
enter
mov
shll
popa
and
sar
lahf
mov
or
in
pop
test
xor
arpl
mov
sub
scas
dec
fadds
aam
icebp
and
jecxz
jb
cld
mov
cmp
xchg
out
or
rclb
push
loopne
push
sbb
mov
loopne
cmpsb
sub
and
inc
and
pop
mov
test
xlat
add
mov
mov
lahf
test
pushf
add
outsl
mov
sub
out
ret
stc
vandps
lods
stos
mov
scas
adc
xorl
int3
rorl
pop
sbb
push
fbstp
push
cmp
in
pushf
push
popf
push
bound
lock
xchg
incl
xchg
testl
in
mov
cmp
mov
aam
pop
cmp
mov
inc
xchg
or
cmp
push
std
stos
jnp
pop
xchg
data16
popa
scas
and
adc
mov
xor
movsl
std
xor
cs
cmp
je
or
xchg
dec
loope
push
push
mov
jne
adc
ret
lret
out
mov
sbb
push
test
inc
sub
push
jge
ja
inc
data16
pop
fstl
stos
and
fcmove
movsb
das
cmp
inc
mov
not
sbb
mov
adc
xchg
adc
jo
xor
xchg
pop
add
repnz
clc
mov
sbb
cmp
xchg
push
ljmp
notb
pop
mov
vmwrite
mov
adcb
xor
fwait
daa
xchg
add
popf
push
pop
bound
clc
loope
mov
aad
shl
sbb
mov
or
ret
dec
lcall
pushf
mov
add
mov
outsl
sub
arpl
out
xorl
xor
in
out
cwtl
fiaddl
xchg
or
mov
inc
sbb
push
mov
out
and
push
cmc
and
sub
xor
icebp
sbb
dec
jle
sub
xor
mov
mov
scas
xchg
sub
jmp
stc
dec
imul
cs
insl
inc
ret
fisttpl
lret
push
stos
enter
sbb
pop
sti
mov
dec
stos
xchg
mov
sub
push
shll
or
mov
push
xlat
and
shll
lds
sbb
and
jp
or
fsubp
testl
call
jg
fistps
mov
mov
xor
jb
das
add
push
inc
dec
cs
xchg
cmpl
mov
jb
fmull
jb
cmp
arpl
int
mov
shlb
jo
enter
cmp
push
fdiv
or
push
or
xor
fldenv
sbb
cltd
push
adc
push
fisttpll
sbb
jbe
insb
xchg
mov
jbe
out
popa
int3
jo
repnz
xchg
xor
push
and
loopne
dec
or
pop
inc
inc
cmp
xor
pop
mov
movsl
outsb
iret
xor
push
cmc
cmpl
outsl
in
push
sub
push
ja
mov
push
fadds
sub
not
jecxz
out
push
xor
arpl
fsubl
pop
inc
pop
rcr
js
inc
in
mov
aas
sub
xchg
test
jns
push
lds
lds
push
aas
jns
shlb
arpl
subb
jno
jno
xor
push
push
mov
arpl
xor
add
enter
push
dec
xlat
push
mov
iret
cld
mov
cmc
jp
fmull
sbb
adc
lods
mov
fiadds
das
and
fs
adc
aad
xor
sbb
xor
cmpsl
loop
sub
call
insl
push
mov
lcall
ljmp
cmp
test
jle
shr
loopne
ds
shrl
fistpl
arpl
adc
adc
add
or
push
lret
jl
adc
mov
sti
push
roll
push
lret
pop
ljmp
call
lret
or
inc
cmc
adc
leave
add
sub
inc
push
cmp
daa
xchg
cvttps2pi
clc
sub
push
mov
dec
cli
sahf
daa
xchg
lds
cmp
pop
push
inc
mov
mov
sbb
movsb
push
lods
sahf
xchg
gs
sarl
leave
dec
lcall
sti
xchg
out
jnp
pop
ss
into
or
inc
outsb
out
or
dec
or
xor
dec
jg
lds
or
ljmp
ss
fcomps
sbb
icebp
push
mov
xor
fcomps
enter
mov
cld
add
jmp
cmp
popf
push
mov
jo
pop
mov
ljmp
in
add
ljmp
ficomps
cld
cmc
mov
xor
adc
mov
in
cmpsb
std
lcall
adc
divb
jp
add
sarl
into
cmp
push
sub
fnstsw
movsb
fidivl
adc
pop
nop
movsb
test
mov
mov
jp
pop
push
jle
mov
testb
mov
sub
sub
test
jae
stc
and
cmpsl
ljmp
xchg
imul
push
bound
xchg
mov
pop
fmul
scas
mov
cmovge
mov
int3
aam
subl
fldt
popa
sub
flds
icebp
mov
mov
enter
adc
cmp
clc
jnp
sti
inc
dec
notb
mov
ficompl
enter
add
rclb
xor
sar
jl
mov
xlat
fistpll
push
xchg
jecxz
lods
mov
jmp
and
jecxz
jecxz
pop
cs
xor
jecxz
lret
sahf
sub
ficompl
xor
dec
and
jno
andl
sub
lcall
fmuls
mov
dec
adc
xchg
mov
mov
sbb
adc
jg
sbb
dec
js
loop
pop
mov
xor
cmp
fidivrs
jae
xchg
or
add
push
rorb
clc
rcrb
mov
ds
push
in
cmp
inc
inc
into
and
push
in
clc
push
mov
fmul
inc
pop
daa
sbb
jecxz
sub
test
arpl
xor
inc
dec
les
mov
mov
jp
lahf
dec
lret
add
stos
and
add
xchg
je
imul
repnz
out
dec
add
jl
push
mov
adcb
loop
inc
or
inc
das
rcl
xor
mov
das
mov
fistps
insl
mov
in
lret
inc
mov
movb
sbb
inc
or
fisubrs
push
xor
push
adc
rolb
adc
mov
mov
push
into
push
fwait
sbb
jne
pop
jmp
mov
pop
xor
call
or
pop
dec
popa
in
add
mov
push
cs
incl
xchg
and
fs
xor
in
lret
fdivrl
mov
mov
push
cmp
into
loop
mov
in
push
pop
push
and
stos
ds
rol
pop
loopne
in
mov
jne
mov
stos
enter
addr16
add
fisubs
out
cmpb
fidivrl
jne
fisubs
pop
push
xchg
inc
rcrl
scas
dec
push
push
jns
sub
mov
dec
rcll
jmp
jecxz
sbb
popf
xchg
or
cmpsb
dec
scas
dec
mov
sahf
ss
imul
ds
dec
xchg
dec
cmp
scas
outsl
enter
out
dec
pop
pop
out
sbb
hlt
loope
loop
mul
xchg
data16
popf
shrl
out
into
movsb
ret
fcmovu
add
lods
adc
pop
xchg
push
repnz
fisubs
andl
xor
dec
test
xchg
clc
addr16
xchg
pop
mov
clc
leave
movsl
repnz
add
cmp
fcomi
mov
addr16
or
sti
pop
add
lds
adc
or
xor
xchg
or
jne
dec
pop
lock
int
dec
dec
sub
push
dec
movq
repnz
and
fs
lds
stc
iret
les
add
xor
pop
push
push
call
push
sar
sbb
std
mov
enter
cmp
lods
mov
dec
cwtl
add
leave
stos
mov
push
add
cmp
dec
xor
loop
shll
daa
pop
cmp
push
orb
lcall
pusha
cmp
cld
xlat
js
out
sub
leave
mov
mov
cmp
in
mov
and
les
jbe
das
repz
sbb
sub
scas
sti
or
inc
inc
adc
xor
dec
pop
insb
mov
mov
xchg
cmp
rcrl
faddl
fldenv
push
inc
into
sbb
add
mov
xor
mov
jo
ds
jns
orl
loope
cmp
xor
mov
fdivr
add
ds
sbb
cltd
xchg
lods
sub
mov
mov
cltd
add
dec
mov
xchg
add
jb
pop
xchg
sbb
inc
xchg
movsl
stc
out
push
mov
clc
xchg
xchg
and
in
sub
adc
mov
xor
and
adc
adc
adc
loopne
or
xchg
mov
xlat
js
push
cmp
sub
dec
jle
movsl
jl
mov
les
pop
sbb
push
xchg
testl
mov
aad
dec
loopne
icebp
call
mov
inc
sarl
shll
inc
rcr
jb
mov
xchg
popa
mov
sarl
cltd
lahf
pop
out
stos
push
xchg
andl
xchg
xchg
and
out
je
mov
jns
fstpl
mov
sbb
jo
sbb
popa
pusha
mov
icebp
imul
fwait
daa
and
jbe
daa
cmp
enter
imul
pop
lea
popf
jnp
fstl
jg
xor
outsl
fnstenv
jbe
jle
adc
jbe
jnp
pop
pop
lea
jno
jae
movsl
xor
cmp
add
outsl
xor
push
cmp
std
cmpsl
push
setns
adcl
push
addr16
inc
jecxz
jg
jl
cmp
les
ret
dec
xchg
fs
test
add
adc
icebp
daa
mov
popa
arpl
sub
out
lret
call
adc
xor
dec
in
and
into
push
mov
leave
gs
inc
out
dec
push
jmp
cli
ljmp
out
add
jmp
xchg
lret
inc
pop
cmp
xor
int3
pushf
dec
dec
sub
or
test
pusha
mov
rep
bound
sbb
mov
inc
popl
mov
jecxz
and
fcoml
es
popf
or
add
cmp
test
jmp
pop
cli
dec
lea
lds
mov
dec
jg
mov
aam
jmp
inc
enter
sub
and
aas
dec
or
neg
nop
or
imul
and
imul
adc
push
movsl
ret
fs
and
sbb
and
or
pop
push
lock
mov
xchg
sbb
inc
inc
movsb
sub
cmc
mov
sub
aam
dec
or
cwtl
loopne
iret
enter
cmp
and
pop
xchg
xlat
int3
fsubrl
add
cmp
loop
cwtl
aad
ja
ror
movsl
negb
fs
in
pop
in
ss
repz
mov
or
mov
sub
jp
out
push
sbb
xor
ljmp
push
lret
xor
lahf
fmuls
xor
xchg
jle
loop
mov
es
or
adc
sub
fs
inc
das
popa
inc
pushf
pop
loop
popa
mov
mov
mov
inc
add
cmp
cmp
sub
icebp
shrb
cwtl
push
lods
or
in
outsl
jnp
mov
idivb
mov
in
inc
jo
cwtl
mov
test
test
popa
mulb
cmp
mov
sbb
out
out
xor
pop
das
loopne
sahf
test
xchg
mov
and
sub
clc
dec
fwait
imul
mov
and
fwait
lods
sub
pop
scas
adc
xchg
js
mov
mov
mov
aam
or
mov
xor
pop
ret
push
jp
sti
iret
mov
into
cmp
mov
add
std
repnz
pop
jl
add
inc
out
cld
sbb
into
jl
jae
mov
pop
ret
add
add
jno
inc
into
mov
stos
mov
mov
sar
pushf
lret
mov
lds
loopne
in
xchg
jbe
fisttpl
dec
jne
lock
das
bound
add
lds
rcll
sbb
adc
scas
ljmp
pop
inc
mov
pop
mov
hlt
jb
xor
sub
add
inc
rcrb
cltd
pop
inc
pop
inc
jo
loope
stos
subl
int
loop
jbe
add
arpl
lock
xchg
inc
sbb
adc
add
jl
jle
int3
push
add
cmc
dec
popf
mov
adc
sbb
xchg
fdivl
jmp
es
cmp
mov
int3
xchg
int
out
mov
sub
inc
or
lea
out
mov
and
adc
cli
push
xchg
loop
mov
in
jle
push
cmpsb
in
pop
inc
mov
mov
push
pop
fisubrl
in
push
mov
xchg
dec
add
lods
iret
jbe
mov
sub
cs
test
inc
stos
dec
std
or
dec
lds
push
push
bound
sbb
mov
inc
add
push
outsb
icebp
cmpsb
ret
insb
and
and
inc
cmp
rcrb
aam
aad
outsb
arpl
and
mov
popa
jmp
test
jecxz
add
jns
inc
sub
int
mov
jle
roll
xchg
mov
cmp
test
out
mov
add
cmp
std
sub
push
push
push
adc
pop
mov
sub
repz
and
sub
jmp
pop
es
xchg
push
jne
pop
icebp
cmp
sub
cmp
adc
out
out
mov
in
outsl
int
aas
hlt
xchg
mov
mov
ret
jo
mulb
ficoms
std
jb
es
pop
adcl
loop
cs
jp
cmc
adc
mov
mov
xchg
out
jle
fistpll
je
fstps
xchg
lret
adc
lods
das
shr
sub
out
xchg
mov
stos
sub
shrl
dec
sbb
arpl
dec
mov
in
cmova
xor
fsubs
repz
mov
push
pop
adc
xchg
iret
push
rcll
sbb
xor
add
jb
ffreep
mov
or
pop
xorb
fstps
jb
jb
stos
lahf
addr16
cmpsl
sub
mov
repnz
and
add
jno
test
bound
lea
xor
enter
and
and
fnstenv
in
repnz
lret
mov
fdivrl
add
inc
pushf
inc
orb
fldl
xchg
jno
add
mov
lcall
aaa
or
ret
xor
in
add
cmpsb
lret
sbb
imul
mov
addr16
mov
pop
popa
pop
popa
testb
sbb
pop
nop
xorb
pop
scas
jg,pt
adc
xlat
mov
jb
loope
and
mov
test
pop
pop
sar
add
push
mul
fsubl
inc
loopne
push
ja
cmp
ret
inc
mov
and
fwait
inc
xchg
inc
fmull
sahf
lock
mov
das
sbb
pop
add
sub
js
mov
imul
mov
cmpsb
sbb
jg
daa
sbb
lods
out
imul
loopne
mov
scas
scas
lea
test
stos
or
sbb
fistpll
movsb
fwait
adc
mov
dec
mov
lret
cmpsl
adc
mov
sub
adc
add
or
mov
xchg
in
add
jne
dec
fnstcw
sbb
mov
fwait
jb
pop
movsl
push
mov
jbe
hlt
out
shlb
mov
jo
push
aad
sbb
mov
jns
or
cmpsb
pop
sar
xor
mov
sbb
rorb
push
out
mov
jl
adc
jge
insl
add
lahf
mov
pop
inc
cmp
cmp
add
or
sbb
xchg
pop
cld
fwait
adc
push
pop
fstl
xchg
add
mov
push
mulb
iret
filds
dec
jl
loopne
push
icebp
lret
add
pop
rol
inc
pop
mov
add
push
sub
pop
stos
sub
test
repnz
das
fs
loope
jmp
pop
in
inc
fildl
sbb
pushf
aam
dec
cmp
mov
mov
ja
jmp
daa
adc
lret
or
push
mov
int
lods
movsb
add
push
nop
sub
insl
jecxz
test
fs
or
xor
xorl
cmp
int
xchg
xchg
pop
inc
cmpsl
xor
inc
dec
lock
ret
mov
mov
mov
cmpsb
xlat
mov
fst
popa
out
scas
fildl
sub
insb
pusha
rcrl
repnz
cwtl
dec
xchg
or
mov
imull
daa
les
mov
test
fdivl
in
jno
jle
inc
cmp
push
inc
pushf
mov
jo
push
inc
pushf
mulb
jae
setne
push
roll
adc
pop
inc
or
cmc
jg
pop
hlt
sbb
sbbb
lods
inc
cs
in
cmpsb
loopne
jmp
sbb
sbb
jl
sti
mov
dec
adc
mov
out
mov
int3
flds
jecxz
clc
push
insl
in
fstl
es
lcall
insl
add
pop
les
shlb
mov
mov
cmp
sbb
fiaddl
fcomps
jp
fwait
and
xchg
adc
push
xlat
push
sbb
stos
rcl
int
sub
stos
fdivrp
push
push
mov
mov
inc
testb
out
cmpsb
pop
jp
xchg
aaa
jb
xchg
add
les
push
roll
dec
xchg
rcrl
out
inc
stos
ret
icebp
sub
push
mov
sbb
add
int
lds
jg
sbb
and
int
andb
adc
mov
int3
sbb
push
inc
daa
or
rcrl
inc
cwtl
aaa
add
gs
push
inc
scas
inc
jmp
andl
jge
lret
movsl
aad
jnp
pop
cmp
jns
jb
cmp
xor
mov
adc
daa
push
jecxz
push
push
in
fidivl
push
cs
cld
xchg
mov
fwait
add
pop
out
mov
stc
adc
mov
dec
push
xchg
lds
in
lock
xchg
xchg
push
arpl
lret
jb
decb
aam
sub
xor
sub
in
test
leave
imul
lods
xor
lods
enter
add
push
xchg
pop
lahf
dec
out
stos
xchg
mov
pop
mov
movsb
lahf
mov
adc
cmp
cmp
addb
xchg
cmp
jge
mov
mov
stc
jge
hlt
cmp
mov
jbe
outsl
jns
es
in
mov
movsl
std
sub
adc
sub
sub
jno
inc
mov
mov
push
sti
inc
and
aad
outsb
and
repnz
jl
in
lock
pop
or
sub
loopne
rcl
inc
hlt
aam
pop
xorb
mov
das
arpl
dec
xor
or
scas
outsl
icebp
jno
fsubl
popf
adc
inc
sub
cs
mov
jae
xlat
push
and
test
ror
stos
insb
add
aad
fisubrl
add
sub
mov
add
inc
in
mov
mov
jl
fnstcw
dec
adc
and
aad
pop
cltd
sbbb
push
rolb
nop
orb
jnp
mov
es
or
loopne
popa
and
iret
fstps
sub
data16
cmc
outsb
mov
daa
mov
inc
ror
xchg
mov
sbb
movsb
es
xchg
inc
fiaddl
je
test
and
push
mov
inc
inc
mov
hlt
ja
mov
mov
loopne
dec
xor
mov
jp
dec
dec
scas
sahf
insl
xchg
icebp
cmp
dec
call
sbb
add
sub
mov
mov
scas
pop
cmp
lods
adc
sahf
xor
stc
adc
insl
in
jns
and
int
ljmp
mov
pusha
and
xchg
movsl
mov
inc
xchg
xchg
mov
nop
sub
dec
aas
xor
nop
add
jae
push
test
daa
add
xlat
mov
out
jle
push
push
test
push
cmp
sar
adc
add
xchg
xchg
rorb
rol
aaa
in
sub
push
add
sbb
push
and
ret
out
ljmp
fnstcw
sub
pushf
mov
rcll
frstor
sub
out
or
xlat
inc
pushf
mov
cs
cwtl
nop
fcomi
outsl
mov
fwait
popf
outsb
ja
sbb
and
cmp
std
xor
mov
jmp
les
movsb
aas
negl
and
lods
fdivrl
call
mov
and
aaa
lods
outsb
sti
andb
dec
mov
loopne
inc
fucom
xchg
stos
in
out
jae
jle
nop
mov
out
andb
sub
pop
sahf
loope
out
mov
mov
movsl
insb
int3
push
leave
add
pop
sub
cmp
pop
dec
and
pushf
xor
repnz
mov
jb
push
cmp
test
stc
dec
push
cli
repz
cmp
div
or
out
movsb
or
idivb
scas
jecxz
mov
fmull
cld
mov
rcl
push
lea
leave
pop
push
mov
addb
cs
and
xor
xchg
sub
pusha
in
stos
xchg
test
push
cli
out
and
ja
add
stc
pushw
adc
dec
aaa
dec
lds
fisubrl
cli
cmp
fldt
mov
loope
sub
jb
cmp
pop
xor
dec
mov
xor
ret
xchg
and
addr16
cmp
dec
xor
cmp
gs
movsb
fwait
mov
pop
mov
mov
push
fdivrs
or
stos
push
cmp
adc
sub
xor
mov
cmp
xchg
popf
pusha
ficoml
xchg
mov
cmp
test
xor
out
lds
test
int3
fcomps
jl
imul
sub
imulb
outsl
data16
push
or
xchg
pusha
outsb
jge
jecxz
mov
cmpsb
cs
mov
mov
mov
fwait
stc
aas
jecxz
sbb
sbb
lret
sbb
and
ret
leave
cmp
xchg
rcll
sbb
bound
dec
mov
pop
mov
or
stc
jns
insl
xor
mov
scas
dec
movsl
shrl
out
cmpb
mov
cmpsl
add
gs
xor
sbb
sti
lcall
jb
cld
stos
fnstsw
rcrl
out
add
mov
bnd
mov
outsb
andb
insl
ja
xchg
mov
rcl
add
push
and
dec
pop
aaa
cwtl
lahf
jb
push
sbb
out
outsb
add
enter
ss
jne
imul
outsb
test
in
dec
pop
dec
in
inc
adc
daa
pop
pop
lods
rcrl
out
pop
sub
fwait
jge
mov
push
test
lock
std
enter
mov
cmp
and
cmp
mov
mov
mov
rorb
hlt
push
sub
es
cmp
or
arpl
adc
pop
or
and
mov
inc
cmc
les
mov
orb
and
mov
add
gs
push
test
scas
jmp
scas
sti
dec
and
jno
decl
mov
test
leave
jno
es
push
jge
mov
test
out
jbe
jb
int3
mov
and
movsl
cmp
repnz
lcall
mov
push
mov
shll
pop
pop
dec
and
cli
add
jg
cltd
in
lock
int3
dec
add
jmp
scas
push
ret
insb
xchg
push
adc
in
pop
sti
jbe
out
dec
testl
sbb
push
jne
inc
clc
adc
adc
add
inc
cs
mov
in
sub
fwait
mov
push
mov
ret
pushf
fildll
jbe
repz
cmp
push
add
sub
mov
ljmp
jb
mov
cmp
xchg
or
jg
and
lods
fsubr
mov
repnz
dec
cmp
add
sbb
sbb
cwtl
adc
inc
aas
roll
pusha
aas
sti
mov
pop
not
pop
inc
lret
jns
push
xchg
outsl
fiaddl
bound
stos
inc
std
movsb
and
rolb
mov
push
or
mov
repz
ljmp
pop
jne
idivl
push
pop
xchg
ds
add
xchg
cmpb
les
add
mov
push
xorb
mov
dec
mov
enter
jmp
xor
push
inc
xor
and
sub
pop
cld
fbld
mov
mov
inc
popl
out
lock
cmp
push
mov
call
dec
xor
or
mov
inc
lahf
stc
mov
and
inc
ret
ficomps
das
inc
cmp
jl
mov
in
es
mov
and
adc
pop
push
add
cld
cmp
or
pop
in
js
cwtl
sbb
cmpsb
lahf
or
inc
adc
or
fcmovbe
cs
gs
cli
jg
cltd
cmpsb
imul
cmp
aas
jge
test
dec
xor
jp
cmovne
mov
jg
pop
add
repz
mov
xchg
sbb
push
ljmp
cmp
scas
ftst
imul
pop
js
and
scas
idivb
jmp
scas
fwait
divb
fwait
cmp
push
std
add
rcl
aam
aad
or
testb
add
je
and
lea
lods
mov
call
add
sbb
mov
leave
int3
and
jnp
mov
pop
or
mov
aam
lods
out
jb
jl
movb
xchg
xorl
rcrl
xchg
jo
jg
jmp
jl
mov
pop
jge,pn
repz
dec
cmpsl
gs
jle
divb
cwtl
stos
jnp
cmp
inc
inc
cmc
push
push
sarl
leave
pop
incl
push
cmp
push
shl
out
jns
clc
stos
ds
and
pop
pop
pop
mov
cmp
jmp
out
mov
and
lods
fstps
int
out
push
dec
jg
outsl
sti
je
lret
inc
aam
jb
mov
sub
pop
test
sub
xchg
clc
mov
inc
movsb
mov
jmp
popl
outsl
add
jecxz
dec
cmc
cmp
jmp
and
les
bound
xchg
jl
mov
xor
pop
faddp
inc
fs
sbb
pusha
or
pop
idivl
xchg
fwait
mov
outsb
in
aam
cwtl
nop
pop
push
arpl
ss
lock
push
xor
fnsave
hlt
test
pop
push
in
sub
cmpsl
out
popa
subl
repnz
xchg
push
sbb
lret
cmp
push
arpl
in
inc
inc
add
and
leave
dec
pop
cmp
jl
mov
push
lods
call
cmpsl
jo
filds
jmp
mov
cwtl
add
sub
pop
xchg
adc
xchg
and
xchg
mov
mov
xchg
mov
xchg
or
and
xor
add
fwait
jg
adc
jecxz
pop
into
and
fmull
add
push
and
les
jno
cs
jle
cwtl
daa
lods
pop
cmp
jmp
xor
shrb
pop
adc
sub
sbb
sti
outsb
fldz
xor
pop
pop
outsb
call
mov
loopne
cmpsl
daa
rep
js
imul
js
and
xchg
xor
sbb
push
aad
mov
add
std
mov
pop
aaa
sub
push
ja
sbb
sbb
imul
pop
or
jle
xor
inc
mov
je
lds
in
loopne
dec
test
daa
fdivl
cltd
sub
pop
mov
sub
in
dec
mov
daa
mov
mov
pop
inc
scas
cltd
sub
push
mov
sub
enter
shll
push
push
mov
loopne
cmp
sbb
push
cltd
jo
xor
lock
inc
add
dec
xchg
xchg
lea
pusha
mov
xor
and
bound
leave
push
icebp
jbe
outsl
pop
in
mov
repnz
lock
mov
mov
mov
popa
and
jnp
sub
xchg
shll
jge
into
push
sub
inc
aad
sbb
cmp
cld
adc
cltd
and
jno
pop
push
inc
stos
inc
mov
push
shl
scas
and
push
mov
push
test
mov
inc
aam
adc
xor
sbb
ffreep
arpl
test
push
int3
and
mov
dec
jge
xchg
xchg
cmp
pop
or
fsubr
cmp
call
push
pop
add
test
icebp
and
in
cmp
nop
or
enter
inc
dec
sbb
xchg
push
xor
adc
adc
out
ja
cmp
dec
adc
add
cwtl
pusha
out
and
mov
mulb
test
cmc
mov
add
sbb
jle
cmc
orb
sbb
aaa
ljmp
stos
push
dec
inc
pop
or
mov
sub
mov
cmp
cmp
and
pushf
mov
sbb
lret
push
xor
loop
xchg
pop
fwait
add
inc
lret
sti
ret
in
hlt
adc
enter
add
loope
cs
lods
je
mov
fistpll
jbe
mov
adc
int3
leave
imul
cmp
sub
lret
jp
lcall
or
movsb
xorl
cmp
lret
clc
sarl
inc
or
dec
dec
pop
scas
push
push
dec
sub
push
mov
movb
jae
ss
insl
leave
jne
push
mov
push
sub
pop
jbe
fidivrs
add
imul
leave
mov
xchg
lahf
idivl
xor
xchg
test
inc
pop
divl
sar
cltd
mov
lods
push
add
stc
mov
or
mov
mov
cmp
jg
shl
cmp
adc
je
orb
xor
push
fists
or
inc
out
inc
push
cltd
mov
mov
or
movsb
inc
sub
and
addr16
push
mov
leave
in
mov
adc
insl
repnz
jmp
dec
and
xchg
cld
shrb
in
repnz
jns
stos
jns
pop
add
or
dec
mov
push
mov
adc
sub
daa
leave
sbb
jnp
sub
scas
int
xchg
mov
sbb
mov
enter
jmp
fs
cmp
xchg
mov
clc
pushf
adc
sub
add
int
addsubps
push
mov
cwtl
insb
rcll
cmp
aad
adc
jo
mov
or
or
scas
out
loope
xor
out
sbb
mov
adc
add
flds
jg
mov
push
dec
jnp
pop
dec
les
pop
test
mov
cmc
iret
pop
aas
and
dec
dec
repz
pop
fadd
insl
or
cmp
mov
into
sbb
je
or
gs
leave
rcrb
add
mov
xchg
add
dec
out
or
leave
dec
rcrb
out
cmpsb
xor
dec
push
test
nop
andb
adc
lahf
xchg
nop
adc
push
sub
mov
jne
scas
mov
cltd
push
adc
lret
fwait
pushf
cs
pop
and
orl
clc
call
clc
add
popa
fisubrs
pop
xchg
daa
jl
neg
ficomps
sbb
shlb
dec
xor
mov
sbb
push
scas
or
sti
mov
je
xchg
fisubl
lods
pop
add
sbb
movsb
lea
aas
push
jp
xchg
or
call
shll
mov
inc
shrl
lods
lret
xchg
and
dec
xchg
mov
and
movb
cmpsl
fnstenv
mov
aas
and
fsubs
push
mov
add
shll
jns
dec
jecxz
xlat
sbb
das
dec
mov
sub
sub
jae
fstpt
pusha
cltd
outsb
adc
cmp
rolb
xor
and
and
aaa
xchg
pop
push
jae
lods
shrl
dec
add
or
and
mov
aaa
lods
jge
call
adc
push
and
or
and
fcmovb
jb
scas
mov
lods
lea
pop
mov
lret
lret
sub
pop
adc
mov
mov
sub
ljmp
cli
hlt
jge
xchg
cwtl
icebp
test
mov
cmp
jns
and
loopne
sbb
call
pop
in
mov
add
jge
js
sbb
and
subb
sub
mov
pushl
imul
mov
stos
and
mov
mov
xor
jmp
sub
or
pusha
cmp
or
push
testb
xchg
or
jno
adc
xchg
es
mov
dec
xchg
pop
data16
lods
or
rclb
pop
scas
jecxz
outsb
or
xor
in
and
mov
mov
into
dec
repnz
shll
pop
outsl
aas
lock
xchg
jo
jno
sbb
fcompl
xlat
out
stos
pusha
daa
push
mov
mov
aad
xchg
ret
push
cmp
sbb
inc
mov
lret
cs
push
xor
xor
mov
repz
xor
out
idiv
outsl
mov
insb
adc
mov
sbb
xchg
cwtl
fildll
or
pop
into
data16
inc
movsl
push
aad
push
mov
xchg
es
faddl
mov
stos
mov
pop
add
add
movsb
jno
sbb
mov
lds
fldl
lods
xchg
push
adc
data16
sub
imulb
fwait
inc
xlat
int3
data16
lcall
sbb
xchg
or
das
pop
mov
sbb
js
jo
mov
pop
sub
pop
dec
inc
int3
imul
in
fsubrs
adc
sub
lods
jmp
fisttpl
adc
test
int
sub
xor
dec
imulb
test
ret
dec
inc
mov
inc
lock
mov
xor
mov
je
fucom
add
aas
add
testb
scas
aaa
dec
fcoms
sbb
leave
ja
push
and
add
add
scas
sub
mov
adc
mov
mov
nop
iret
or
sub
push
call
test
pop
and
sbb
jg
loopne
cltd
dec
mov
sub
popf
in
push
push
or
dec
loopne
orl
push
xchg
insl
cli
popf
xchg
fsub
jecxz
add
test
neg
push
mov
inc
sub
xor
stos
xor
push
into
std
ljmp
or
lcall
lret
movsl
cmp
adc
aaa
xorl
mov
dec
idivl
pusha
fsubr
mov
xor
pop
loop
xchg
arpl
test
jp
int
and
dec
sarl
dec
sub
cltd
out
jge
dec
fwait
sub
jecxz
xor
sbbl
push
sbb
cli
jae
lret
sarb
insl
fstl
icebp
pushf
pushf
stc
ljmp
stc
lahf
xchg
sub
xchg
dec
dec
daa
dec
adcb
xor
jne
enter
dec
fstl
mov
scas
push
aaa
test
int
je
test
xchg
mov
push
test
rolb
aam
xchg
mov
add
push
cmpsl
ficomps
mov
jl
mov
lods
add
jle
into
mov
ret
stc
arpl
mov
sub
and
mov
incl
andb
stos
ljmp
loop
in
cli
mov
lret
popf
pop
into
inc
lret
dec
lods
imul
test
call
push
bound
in
loope
jge
das
leave
add
inc
mov
xchg
xchg
repz
test
fidivrl
loopne
pusha
loope
into
and
nop
add
sub
pop
fimull
das
xchg
leave
aaa
dec
xorb
sbb
repz
mov
cltd
add
movsl
add
loopne
cli
fs
sbb
cmc
push
sbb
pusha
add
arpl
push
ret
out
lcall
aad
mov
gs
ret
cmpsl
cmp
lock
inc
fstpl
lahf
daa
loop
push
pop
mov
int
xchg
push
cs
inc
clc
cmc
adc
mov
mov
out
mov
mov
sahf
dec
mov
fnstsw
xchg
jns
mov
cli
mov
repnz
push
sahf
jge
out
lods
cmp
fdivrp
sarb
push
mov
cltd
inc
adc
hlt
stos
aas
push
hlt
jae
shlb
movsl
mov
stc
insb
and
popf
lret
ss
and
sub
inc
scas
sahf
daa
sbb
shll
push
jns
sub
inc
xor
jle
xchg
das
fstps
xchg
stos
xchg
fcoms
jb
jl
add
inc
cmp
adc
movsl
pushf
call
ret
aam
scas
dec
sub
fs
and
test
dec
mov
jecxz
andb
xor
sub
inc
fwait
lret
gs
jns
dec
jo
sahf
loope
xchg
dec
sub
pop
aas
cmp
jno
adc
or
or
int3
fwait
ss
cmc
xchg
js
inc
ficoms
push
int3
mov
adc
cmp
movsb
lea
loope
test
jl
xorl
jecxz
icebp
pop
loop
icebp
sbbb
jb
push
push
jbe
mov
lret
add
adc
mov
fstl
dec
loop
popl
pop
push
push
xchg
xor
aas
pop
mov
imul
xchg
je
loop
shl
cs
add
push
adc
mov
loop
or
sbb
nop
cltd
mov
sbb
and
inc
jbe
cld
push
cmp
jp
mov
mov
ret
shl
xchg
mov
pop
in
cltd
cld
pop
and
out
jp
push
mov
or
or
add
pop
out
mov
pusha
inc
jmp
shll
loopne
imul
sub
ret
movsb
or
shr
fnstenv
mov
sahf
out
imul
scas
dec
movsb
add
dec
movsb
push
push
dec
mov
push
add
inc
std
push
aad
sub
inc
movsl
jno
out
popa
xorl
popl
je
sub
into
fmuls
pop
in
xor
stos
loop
fimuls
dec
mov
pop
movsb
pop
and
dec
and
arpl
insb
adc
mov
push
xor
and
testb
cmc
js
jmp
adc
mov
fiadds
ss
popa
mov
in
mov
pop
mov
aad
dec
scas
pop
lret
pop
xor
shrb
mov
lret
pop
pop
punpckhdq
das
or
addr16
and
jmp
addb
and
js
cmpsb
pop
int
daa
mov
push
lods
rclb
sbb
repz
sahf
add
pop
ja
pop
cmp
mov
dec
sarb
sub
jle
inc
stos
clc
push
push
xor
cmpsb
lea
call
cmp
adc
rcrl
fsubrl
mov
sbb
mov
inc
xchg
adc
lds
les
mov
mov
dec
fidivrs
fldl
lock
pop
mov
xor
push
ss
and
inc
out
imul
jae
push
out
mov
xor
mov
imull
scas
adc
adc
js
and
ljmp
dec
jp
mov
pop
push
jecxz
pop
mov
mov
push
dec
inc
xchg
ret
inc
jo
cmp
lcall
push
mov
push
call
cli
mov
inc
cmp
inc
inc
lahf
and
pop
adc
call
xor
xchg
loop
adc
push
jae
scas
fcoms
add
inc
std
adc
jbe
sbb
xchg
sbb
mov
sub
push
dec
jmp
dec
xchg
dec
cmpsl
stos
fwait
pop
arpl
cmp
lds
push
pop
inc
mov
cwtl
popa
and
test
insb
lods
lahf
mov
hlt
addr16
adc
xchg
and
mov
ret
sub
pop
dec
enter
aad
mov
addr16
inc
roll
and
xchg
rolb
rorb
repz
arpl
and
cwtl
fcmovne
and
push
negb
cmp
rclb
adc
fwait
iret
out
fs
mov
fiadds
pop
dec
mov
jg
mov
orb
aad
div
inc
xor
fmull
and
mov
add
out
dec
and
add
push
movsl
fsts
adc
imul
or
shl
repnz
cmp
fisubl
or
pop
mov
mov
out
dec
out
mov
loopne
cltd
or
cmpsb
push
pop
inc
mov
fprem1
pop
popa
sahf
sarb
jae
mov
loop
or
and
sub
dec
mov
adc
xchg
les
xor
rolb
jmp
sahf
dec
jmp
outsb
dec
dec
movntq
out
dec
fdivr
adc
push
jg
jns
fidivrs
lret
movsb
loope
xlat
or
inc
sub
dec
add
or
pop
jle
clc
ud1
ds
xor
mov
dec
xlat
sbb
add
and
popa
daa
clc
mov
mov
in
push
jge
insb
movsb
outsl
xorps
xchg
fstpl
imulb
lret
pop
in
mov
cmpb
pusha
xchg
cmpsb
mov
bnd
push
in
popa
cld
pusha
mulb
sub
fstps
mov
cwtl
cmpsl
and
inc
testb
lea
cwtl
sbb
mov
push
push
je
ds
push
lods
sub
sahf
and
mov
enter
mov
je
fsubl
aas
sub
pop
mov
call
xchg
andl
das
fistl
cld
in
testb
repz
jp
xchg
pop
repnz
push
jbe
dec
addr16
xor
scas
out
test
xchg
out
cmp
js
cmp
fdivrl
fs
ja
in
mov
pop
jle
je
ficoms
jns
lret
xor
sar
das
and
das
arpl
sbb
sahf
adc
and
into
rorb
add
and
rcl
inc
sar
mov
enter
and
jno
lret
ja
jmp
mov
fldt
pop
mov
mov
lods
and
cmc
pushf
dec
sbb
imul
push
mov
dec
lahf
pop
mov
pusha
xchg
adc
bound
fcoml
mov
jmp
cmp
add
or
xchg
je
aad
cmpsl
add
insb
in
inc
lret
xchg
mov
xchg
pusha
cmc
lods
loop
cltd
sub
stos
mov
jnp
std
in
pop
add
xor
adc
rorl
ljmp
pop
ss
in
loop
push
std
lods
call
pop
repnz
clc
ljmp
shlb
push
aas
stos
mov
ljmp
je
and
and
daa
add
test
leave
test
les
push
mov
cmpl
sub
mov
cmp
sub
mov
mov
pop
test
mov
addr16
inc
aam
stos
es
cmpb
dec
insl
jmp
jmp
jle
popa
cwtl
push
sti
aam
and
xchg
add
mov
jmp
mov
js
mov
lods
stos
fnstsw
popf
pop
dec
test
out
sbb
mov
and
mov
mov
add
jg
daa
nop
xor
std
pop
nop
dec
fiadds
pusha
mov
jle
xchg
xchg
loope
fiadds
add
mov
cmp
pusha
test
inc
imul
add
je
mov
insb
fstl
cli
inc
dec
pop
push
inc
cmp
mov
add
sbb
xchg
shlb
push
xor
aas
rol
mov
inc
loope
lods
xor
repz
pop
hlt
and
pop
int
adc
shrb
push
inc
sbb
push
mov
dec
clc
push
call
into
mov
push
iret
repnz
xchg
jl
mulb
ss
pop
fisubrs
inc
les
ret
scas
mov
or
pop
pop
lahf
and
or
out
pop
out
dec
and
and
test
push
jae
mov
nop
push
adcl
out
jne
fists
jp
xor
sarb
cs
xchg
movsb
xlat
adc
xchg
xchg
mov
outsl
push
adc
repnz
cmc
dec
rolb
push
shll
sahf
inc
inc
lock
movsl
hlt
xchg
or
mov
data16
sbb
adc
push
add
dec
add
aad
push
outsb
sahf
mov
mov
jge
test
js
adc
sbb
pcmpgtd
push
in
mov
sbb
leave
mov
cmp
and
ljmp
shrl
xchg
jno
mov
aas
dec
imul
sbb
add
jp
lcall
sub
fldenv
add
movsl
xor
mov
decb
stos
jl
sbb
and
jns
jne
sbb
mov
mov
jo
mov
add
nop
lea
icebp
popf
or
inc
mov
int
popa
dec
pop
push
sbb
or
imul
add
fsts
inc
arpl
jg
inc
xlat
xchg
xchg
out
dec
adc
mov
mov
add
pop
push
pop
sbb
ljmp
push
arpl
jo
mov
mov
jp
push
mov
sub
inc
or
das
loope
pop
stos
or
bound
xchg
cmp
mov
inc
and
push
repnz
outsb
mov
aas
sahf
scas
movsb
lods
hlt
out
sub
mov
or
cmp
pop
f2xm1
mov
cwtl
fcoms
gs
ljmp
imul
mov
stc
pop
push
jp
lds
mov
cmp
mov
push
mov
sti
das
add
adc
pop
fiaddl
cld
xchg
xchg
rcll
pop
mov
pop
and
or
gs
push
jmp
movsb
test
add
lret
mov
imul
push
lock
fmull
add
push
adcl
adc
in
insb
ss
fwait
push
aas
xchg
out
negl
call
popf
repnz
mov
repz
pusha
call
adc
sub
test
pop
add
mov
add
in
fdivl
jecxz
testb
pusha
std
popf
cmpsl
or
call
mov
sub
pop
jno
ffree
stos
inc
inc
test
leave
sub
test
dec
jno
lods
dec
loopne
gs
fimuls
sub
negb
dec
mov
fs
xor
or
or
cmp
push
arpl
into
or
orb
jmp
ret
pop
push
lahf
rcr
mov
insl
lds
xor
mov
scas
filds
in
and
inc
shl
call
and
mov
cld
sbbb
imul
movsl
add
flds
jae
mov
out
ss
sub
xchg
push
in
mov
inc
dec
mov
xor
je
jp
int
shlb
lds
add
in
pop
in
fsubrl
pop
pop
jle
lods
and
std
pushf
jp
or
ds
test
mov
add
push
push
inc
or
out
call
adc
mov
ljmp
into
push
jecxz
mov
inc
lods
sub
pop
xchg
stc
cmp
imul
fldenv
in
mov
std
jp
shll
jp
test
movsl
clc
inc
lods
stos
pop
mov
sub
enter
sub
or
or
movsl
test
lcall
jbe
pop
mov
mov
test
xlat
mov
outsb
mov
subb
push
cli
cmp
aad
sahf
adc
dec
push
fsts
in
rol
lock
xor
jmp
pusha
ljmp
mov
jo
xor
mov
orb
add
lods
fstpl
ret
je
pop
push
mov
xchg
cmc
dec
iret
rcr
mov
and
enter
nop
lods
mov
imul
pop
or
add
cld
and
push
scas
dec
inc
lret
add
jecxz
sbb
mov
xchg
sbb
js
out
incl
jno
test
xor
pop
adc
add
dec
out
or
mov
xchg
mov
mov
jb
pop
or
stos
cmp
pop
dec
or
lret
mov
xor
aaa
decl
jl
aam
loope
push
jmp
cmp
mov
mov
inc
bound
mov
xor
outsl
pop
lahf
mov
push
mull
fwait
sbb
out
daa
daa
mov
adc
jg
and
out
xchg
in
lds
inc
cli
dec
xor
dec
sub
in
loop
aad
and
lcall
mov
aad
hlt
cmp
push
add
lods
xlat
clc
enter
pop
int
push
push
jg
sub
jns
dec
xchg
xor
mov
inc
cwtl
fdivl
rol
icebp
push
xchg
add
cmpl
fnsave
sbb
add
pop
cmpsl
cmpsl
mov
std
shr
in
sbb
adc
pop
adc
push
jae
addb
stos
xor
xchg
xchg
enter
cli
xchg
aam
push
mov
cld
and
jne
and
mov
roll
arpl
jl
mov
mov
jbe
push
aad
push
xchg
stos
fistpll
pop
adc
mov
dec
into
cltd
push
sahf
mov
add
or
ds
jp
repnz
cltd
mov
outsb
mov
xor
mov
rcll
jo
ret
dec
and
push
imull
out
xor
ds
add
neg
push
lcall
xor
pop
aas
adc
insl
add
das
dec
mov
xlat
adc
mov
lret
pop
mov
gs
push
ljmp
adcl
inc
aas
jnp
jno
xchg
lock
xor
inc
ljmp
xchg
mov
sbb
xor
dec
cmp
icebp
and
sub
shll
cmp
vpsraw
adc
dec
out
inc
pop
insl
pop
xchg
jb
inc
lods
shrb
hlt
jp
addl
jmp
rcll
inc
cmpl
jnp
ret
popf
push
stos
shl
mov
out
push
sub
xchg
lds
aas
jb
sti
push
xor
pop
imul
mov
adc
lods
loopne
push
push
xchg
dec
cmpl
mov
cmp
sbb
lcall
in
lods
xchg
fwait
scas
cmp
cmp
inc
xchg
pop
inc
sub
sub
in
jne
mov
sub
rcr
in
mov
and
sub
inc
add
imul
jo
mov
inc
and
inc
movsl
and
mov
fisubrl
jnp
sbb
sbb
push
insb
mov
or
or
inc
add
jnp
pop
movsb
outsl
sbb
xchg
outsb
inc
and
bound
inc
fwait
jmp
adc
pusha
arpl
sub
ror
pop
hlt
or
jle
jbe
adc
repnz
cwtl
jge
rcr
icebp
sbb
jg
stc
and
cmp
movsb
mov
sbb
cltd
mov
add
cld
aam
push
cmp
insl
nop
xchg
adc
jp
mov
lods
popf
sub
inc
cmp
jg
jo
sbbb
insl
mov
sub
cwtl
and
out
rorl
xor
data16
lods
scas
sub
popf
mov
add
jnp
push
mov
psrad
enter
sbb
pop
jg
xchg
mov
addl
jmp
cmp
mov
lods
push
inc
int3
iret
jmp
cld
lret
xor
dec
cmp
repnz
jp
hlt
stos
xchg
add
adc
cs
out
ror
mov
adc
pop
int3
jp
stos
push
idivb
mov
icebp
push
add
sub
addr16
aaa
xchg
cmpsl
dec
xor
sub
or
pushf
in
int3
mov
jb
movsl
enter
fisubs
and
mov
xor
and
mov
or
cltd
insb
js
pop
xlat
outsl
leave
into
lock
or
xchg
inc
icebp
mov
in
add
ss
int3
xchg
ljmp
mov
mov
cli
sbb
xor
std
sbb
push
or
push
dec
dec
xlat
lret
fstl
sbb
mov
or
push
loopne
cmp
or
lret
fs
inc
ficomps
mov
xchg
pop
call
insl
out
negb
cmpsb
bound
sub
popf
fwait
mov
inc
or
xchg
or
jmp
scas
jmp
jmp
xchg
and
xchg
adc
pop
cmp
xchg
pop
pop
call
jnp
stc
add
ds
mov
fcmovbe
dec
push
stc
andl
aaa
sbb
je
call
fwait
cmp
dec
aas
imul
test
addl
mov
cmc
aad
mov
pushf
sbb
ficomps
stos
push
fists
or
sub
cmp
stc
stos
in
in
cmp
lea
mov
jecxz
mov
js
add
test
and
jbe
shll
ficoml
sub
inc
mov
pop
or
dec
ljmp
adc
leave
jmp
jmp
icebp
test
xor
mov
mov
push
cmp
jg
out
cltd
out
cld
test
adc
dec
pop
lahf
enter
jl
mov
shll
mov
aam
push
jae
cmp
mov
fcoml
sbb
ljmp
xchg
jb
popf
adc
sahf
inc
das
stc
sbb
xor
loop
lods
jecxz
lods
shll
mov
je
mov
out
xchg
jne
sbb
pop
xor
arpl
js
sbb
dec
and
push
cwtl
aaa
fbld
stc
jae
fmulp
sarl
and
mov
cltd
pop
addl
dec
stos
dec
cmp
add
pop
jg
stc
cmp
cmp
stos
sbb
shl
add
dec
mov
jne
movsl
imul
sub
out
ffree
clc
dec
iret
sub
mov
lods
movsl
loopne
mov
divl
jbe
mov
xorl
cmp
mov
sbb
mov
inc
and
xchg
mov
int3
jb
jge
adc
pop
cmp
inc
cmp
sbb
pop
inc
out
repz
dec
int3
lock
push
mov
test
popa
test
jl
and
add
pop
or
leave
jp
ja
div
mov
add
pop
xchg
addb
jge
out
xchg
inc
pop
mov
mov
inc
in
inc
ja
push
xor
lock
and
inc
fiaddl
jo
push
ds
out
mov
pop
mov
lret
pusha
test
xor
js
int3
shl
or
scas
cmc
and
mov
pop
nop
mov
dec
cmpsb
pusha
jns
inc
jp
lods
jp
sbb
xchg
call
sarl
loop
add
icebp
sub
cmp
fwait
xor
iret
out
lret
adc
les
push
cmp
arpl
sub
out
aaa
clc
jne
sub
inc
sub
fists
inc
repz
ss
or
scas
adc
mov
adc
and
lock
hlt
cmp
sbb
enter
fs
mov
aaa
insb
fwait
imull
push
cmc
sub
ds
aam
fldl2e
or
dec
shll
adc
mov
and
popf
xchg
enter
mov
jae
push
in
cli
jnp
bswap
pop
int3
push
ret
adc
sahf
inc
cld
add
sahf
pop
sbb
and
in
imul
cli
pop
cld
es
pop
outsb
repz
icebp
cmp
and
cltd
arpl
rclb
daa
pop
or
xchg
and
xor
out
mov
scas
popf
inc
roll
iret
in
pop
sub
stos
pop
mov
pop
rclb
pop
dec
push
notl
mov
popa
js
cvtps2pi
xchg
dec
sub
jge
adc
dec
scas
mov
js
xchg
xor
mov
xchg
das
or
lret
insb
mov
jp
mov
push
std
push
mov
mov
cmp
pop
xchg
inc
je
fsubrs
mov
dec
mov
sub
cld
jmp
gs
jge
pop
aam
push
int3
inc
lea
xchg
add
nop
icebp
mov
dec
aad
add
hlt
faddl
sti
sub
xor
ds
or
cmpb
sub
dec
pop
call
mov
sub
sbb
aaa
push
insb
movsb
or
sub
mov
call
inc
pop
popa
push
xchg
xlat
mov
push
dec
pusha
jg
lahf
xor
loope
mov
and
pop
dec
aad
push
frstpm(287
mov
xor
cmp
sbb
jo
sub
test
movb
mov
or
int
test
jae
adc
xchg
bound
lods
decl
cmp
mov
imul
jae
sub
push
inc
addl
mov
jp
and
jp
int3
cmpl
stos
add
xor
xor
outsb
dec
sub
xchg
mov
aas
loopne
sbbl
and
inc
in
push
cld
pop
mov
jo
insl
stos
lcall
stos
push
mov
aas
push
pop
push
inc
std
call
rcrl
popa
outsl
cmpsb
popa
cld
repz
aaa
mov
testb
insl
iret
cmc
insb
push
jnp
jle
sahf
nop
xchg
or
jnp
insl
sub
or
aas
pop
cmp
xchg
adc
out
xor
or
pop
jbe
stos
fld1
incl
fcoml
inc
xlat
sbb
in
mov
lds
lret
rclb
push
faddl
mov
sbb
popf
mov
pop
and
daa
cmp
test
test
data16
sbb
dec
lock
lret
inc
mov
mov
mov
insb
dec
popa
fnstsw
sub
dec
xchg
sbb
test
cmp
rorl
pop
leave
movsb
pushf
xlat
addr16
push
xor
jno
into
loopne
lods
fcomps
mov
and
jp
fwait
outsl
mov
call
fbld
inc
mov
lock
add
in
mov
and
sahf
xchg
mov
sub
pusha
xchg
mov
push
add
dec
push
mov
loope
lahf
dec
aad
jae
or
and
out
fimull
stos
ljmp
xor
rorb
decl
aas
scas
les
es
and
leave
jl
mov
adc
xchg
in
mov
fidivs
xchg
pop
rorb
pop
mov
repz
jno
xchg
stos
call
jb
xor
insl
shlb
test
dec
int
fisubs
push
test
mov
cmp
xchg
repz
adc
sti
inc
jns
cs
in
cmp
cltd
dec
inc
mov
clc
pop
jae
xor
insl
and
rol
dec
shlb
push
sub
mov
pop
pusha
dec
stos
fists
or
inc
jecxz
inc
sbb
jl
stc
xchg
mov
outsl
add
mov
clc
loope
roll
mov
jo
inc
inc
mov
cmp
ficomps
xor
sbb
sub
push
ret
sub
mov
xor
fs
jp
in
iret
dec
mov
fs
xor
shl
or
jne
sbb
cmc
shrl
pop
mov
pop
sub
pop
push
insl
jnp
es
mov
arpl
pop
cld
scas
sub
sub
add
mov
ljmp
les
int3
addr16
test
test
xlat
mov
lock
and
ficomps
push
roll
jns
add
xchg
add
or
fbstp
xor
xchg
scas
cld
into
outsl
inc
test
popl
xlat
je
mov
cmp
mov
dec
mov
jnp
lods
into
ljmp
cli
ja
sti
call
add
in
nop
rcrl
pop
fisttps
mov
ja
pop
xchg
mov
ret
push
int
arpl
xchg
jecxz
stc
adc
js
xlat
sbbl
lahf
lods
shll
mov
adc
push
rcll
outsb
icebp
movsl
cli
test
add
es
cmp
cmc
push
and
movsb
inc
dec
pop
cltd
push
pop
nop
sub
and
jecxz
add
sbb
push
test
arpl
xchg
mov
imul
scas
std
iret
xchg
mov
gs
lock
packsswb
rcr
das
aaa
dec
push
stos
cmpsl
sbb
out
mov
fwait
out
faddp
clc
dec
push
lods
rcl
insl
movsb
jns
sbb
add
lock
jns
inc
mov
in
data16
xor
shrl
sbb
mov
sbb
and
add
iret
cwtl
fcomi
sbb
mov
inc
add
sbb
adc
es
dec
jns
imul
lock
pop
and
es
das
lahf
jb
call
hlt
divb
je
inc
xchg
arpl
mov
jb
sub
adc
sbb
or
cli
xchg
or
inc
pop
dec
jno
jno
xchg
sarl
jb
in
jmp
addl
jns
ret
sti
jg
mov
jo
pusha
mov
adc
dec
add
dec
aas
data16
dec
lods
push
shrl
popa
or
adc
andb
repz
push
push
and
ljmp
rcrl
lea
jbe
insb
loop
pop
cmp
add
pop
push
or
scas
ja
inc
aaa
in
and
xchg
push
adc
outsb
push
push
sub
cmpsb
sbb
sbb
sub
push
daa
clc
fimull
push
dec
xchg
mov
incl
push
aaa
cltd
movsb
not
lea
lock
and
nop
adc
es
adc
insb
push
push
jecxz
and
jbe
test
js
xchg
imul
into
fsubr
mov
cli
push
aaa
aad
idivb
hlt
es
dec
push
cmp
jae
insb
sbb
add
outsl
pushl
cmp
mov
pop
xchg
icebp
adc
mov
dec
jmp
hlt
into
push
jge
adc
arpl
adc
lock
out
jp
ljmp
pop
in
xchg
les
incl
inc
sub
iret
add
lock
xor
and
xchg
test
ret
pop
cs
dec
mov
shlb
cmp
push
mov
cli
fnstsw
hlt
outsb
lahf
sbb
cwtl
loopne
fs
push
shrb
data16
test
mov
mov
jl
test
add
pop
and
and
leave
lods
jge
scas
daa
or
mov
mov
popa
mov
cs
and
stos
fs
rcrb
xor
test
push
mov
jb
jbe
push
ja
pop
xchg
pop
push
inc
mov
ss
and
lea
xchg
add
int3
gs
lods
imul
mov
pop
sub
cld
or
or
mov
lret
or
inc
aas
pop
cld
sahf
ja
nop
push
call
rcrl
adc
pop
mov
pop
or
lahf
mov
jne
pop
inc
fsubrl
fsub
pop
jle
int3
cmpsb
jp
jle
lcall
push
clc
add
push
or
pop
mov
or
stos
mov
sub
add
test
out
je
les
loopne
fucom
jmp
sbb
mov
test
push
xor
sahf
pop
xor
mov
ret
stos
sbb
orb
sub
jno
shr
clc
mov
sbb
into
xor
mov
add
sub
insb
mov
sub
inc
xor
roll
sbb
js
pop
push
repnz
insl
push
dec
adc
in
adc
aaa
pop
cli
scas
out
xor
pop
and
outsl
pusha
mov
xchg
pop
adc
mov
xor
testb
sti
insl
mov
xchg
cmp
xchg
inc
and
sar
fisttpl
sbb
pop
icebp
leave
arpl
daa
inc
ss
jmp
pop
jb
out
mov
dec
or
push
loope
mov
ja
xor
sbb
fildl
mov
add
lcall
mov
xchg
shl
cli
leave
push
dec
ja
jns
imul
mov
cwtl
les
push
lahf
xchg
rcr
adc
push
cmp
push
in
push
xchg
mov
scas
sbb
xchg
lods
lds
sbbb
and
sbb
xchg
sbb
inc
jmp
jmp
test
scas
cmp
inc
xchg
std
inc
push
lcall
or
ret
inc
pop
push
add
loope
sti
enter
stc
sub
cmp
pushf
scas
add
nop
add
sub
and
mov
jecxz
xchg
mov
pop
cmp
dec
sbb
xlat
mov
sub
push
mov
pop
js
or
jbe
or
cmpsb
lock
lods
fdivl
lret
inc
leave
addr16
mov
sbb
cltd
repz
nop
loope
mov
filds
imul
push
adc
cs
pop
jecxz
jmp
ret
inc
xorb
push
loope
arpl
ja
cs
rcr
cmp
fdivr
pop
sbb
clc
aam
mov
fs
mov
test
mov
jl
dec
add
mov
and
lahf
cmpl
ljmp
mov
sub
jns
out
movsl
stos
test
xchg
mov
pop
add
jnp
pushf
lds
mov
scas
or
mov
mov
jbe
scas
icebp
add
jl
pop
ja
outsb
adc
pop
mov
aaa
push
aaa
mov
icebp
sbb
js
movsl
outsl
add
rcll
jne
ja
lahf
cld
sahf
pop
imul
leave
sbb
out
pop
push
cs
sbb
fmuls
or
push
setae
jne
test
adc
dec
dec
mov
xchg
les
push
notl
push
lret
mov
and
cmp
mov
push
mov
js
in
ja
lahf
cwtl
xchg
adc
in
or
cs
xor
cld
lea
dec
add
addr16
mov
adc
lcall
loop
andl
lcall
pop
xor
mov
popa
push
fs
das
rolb
pop
mov
mov
inc
mov
ret
insl
dec
fcomps
push
mov
in
jmp
fstpl
fildll
fs
dec
iret
mov
addl
pusha
mov
addb
gs
mov
jle
out
cmp
ds
fdivp
je
daa
sub
loopne
rclb
adc
fdivl
dec
xchg
shlb
mov
imul
gs
mov
cmp
push
aad
out
negl
cmpb
pop
test
lahf
in
dec
rclb
inc
cmp
jae
mov
dec
orb
pop
jnp
push
add
and
ja
dec
outsl
adcb
lret
roll
bound
out
cmp
aas
pusha
push
adc
out
push
push
imul
sbb
push
insl
in
and
mov
xor
xchg
dec
jne
enter
push
ss
adc
test
mov
insl
jns
out
fwait
popa
fsts
sub
out
in
fldl2t
out
add
cs
roll
sti
inc
mov
cmpsb
icebp
pop
push
mov
xor
inc
jno
xor
lahf
jecxz
clc
cli
lret
int3
dec
loop
mov
pop
inc
adc
xchg
jle
repz
in
pop
nop
call
xor
jb
in
inc
mov
pop
shll
test
or
push
fs
out
hlt
xchg
add
dec
xor
scas
movl
mov
mov
push
mov
popf
jmp
jo
imul
jp
es
inc
pushf
scas
mov
ret
pushf
jp
pop
xchg
testl
je
scas
aas
fs
xor
test
or
sbb
rcrb
stos
push
icebp
sahf
mov
loopne
xor
jo
xor
in
ds
daa
mov
add
das
mov
call
lds
xor
push
aaa
dec
xlat
fs
adc
push
sub
xchg
inc
imulb
jo
mov
mov
and
mov
add
pushl
dec
dec
mov
test
repz
add
adc
mov
mov
push
hlt
cmp
sbb
xor
xor
add
push
dec
cmpsl
mov
cli
jae
xor
mov
xor
popa
add
shrl
sbb
lret
loope
xor
test
movsb
xor
push
push
xchg
xor
enter
test
and
mov
fisttpl
sub
cwtl
dec
adc
or
ss
dec
jmp
cltd
popf
shr
jle
dec
inc
adc
aaa
push
gs
into
ss
in
fistps
mov
test
cmp
arpl
sub
jb
mov
adc
fs
mov
or
mov
mov
add
sbb
mov
movl
sbbl
xor
bswap
addr16
mov
inc
mull
push
inc
add
loopne
call
cmp
andl
subl
pusha
cmpsl
fdivs
xchg
and
dec
popf
mov
out
sti
xchg
or
push
loop
xor
sub
es
cmpsl
test
aaa
mov
mov
shrl
adc
aad
inc
xchg
sahf
scas
xor
push
out
ret
pop
jp
jns
imull
stos
mov
mov
scas
and
mov
inc
pusha
mov
pop
pop
pop
repz
adc
loope
ja
into
mov
pop
adc
jb
lock
xchg
mov
push
out
movsl
enter
xchg
adc
mov
push
and
sub
jg
jne
xor
mov
mov
ja
ljmp
xor
dec
mov
mov
aas
and
push
rolb
out
loopne
rclb
stos
xchg
pop
pusha
loop
leave
insb
fwait
jo
jle
les
sbb
dec
int
incl
dec
jp
or
pop
ljmp
in
mov
sub
fwait
jge
cmpsb
clc
in
mov
push
mov
jp
add
mov
and
cmp
and
xchg
in
negb
aas
jae,pn
sub
stos
stc
jo
in
iret
inc
xchg
jns
cli
ret
push
adcb
int
push
lret
mov
pop
push
ja
xor
adc
lods
adc
fucomip
cmp
sub
sahf
in
add
ret
dec
sub
sti
mov
jmp
xchg
int3
mov
pop
xchg
jnp
cmpsb
pop
movsl
movl
xchg
je
aaa
cmp
xchg
push
push
mov
std
dec
pop
outsl
lea
pop
jns
lahf
pop
jnp
inc
push
test
shl
push
bound
nop
fcoml
push
mov
cmc
out
rcrl
fld
mov
fsubr
imul
mov
nop
test
loopne,pn
pop
daa
fmull
mov
jg
sbb
push
jmp
dec
sti
cmp
dec
mov
mov
or
sbb
sub
inc
jb
push
jb
pop
fsubs
ficomps
adc
pop
push
jo
and
dec
jge
int
cmp
fbstp
xor
mov
xchg
cmp
xor
pop
sbb
movsl
imul
pop
xchg
xchg
push
pushf
mov
ret
push
jle
mov
lods
mov
cld
scas
mov
mov
cmp
fistl
add
aaa
out
mov
or
mov
lcall
imul
fldl
lds
mov
push
dec
aam
les
test
add
pop
sbb
leave
fsubrs
testl
dec
pop
xchg
xchg
ret
jo
nop
xor
push
mov
jge
pop
mov
xchg
xchg
or
or
movsb
jmp
lea
ret
dec
faddl
test
xor
insb
pop
repnz
repnz
pop
scas
push
test
stos
and
cmp
mov
sbb
in
je
jle
sti
aam
aad
mov
mov
in
popa
cmp
sbbb
int3
sahf
rcrb
or
add
mov
nop
repnz
out
rcrl
sub
jmp
in
lret
iret
int3
mov
push
xor
repnz
jge
xor
xchg
idivb
or
pop
sbb
cmpsl
jge
call
jmp
mov
fcomip
cmpsb
cmpl
fbld
clc
xor
shlb
xchg
dec
xor
xlat
lds
inc
into
pop
cli
mov
dec
subb
inc
push
adc
scas
pop
inc
mov
sub
mov
add
cwtl
in
mov
fs
dec
adc
imul
leave
push
sti
xchg
xchg
das
mov
xchg
inc
ss
shr
sbb
sbb
dec
cmp
popa
scas
push
jb
add
dec
loop
out
fnstsw
into
lahf
cmp
lahf
test
mov
xorb
sbb
mov
lea
mov
mov
test
jbe
hlt
adc
pop
and
pushf
dec
push
cld
stos
inc
xor
sbb
andb
call
xchg
xchg
mov
shrl
xchg
dec
sar
in
pop
mov
pop
cmp
jmp
in
ss
jmp
sub
insl
popf
jmp
lds
pusha
mov
js
pop
adc
int3
mov
dec
push
adc
mov
xor
mov
jbe
std
pop
stc
lahf
mov
cld
and
int
mov
stos
fcmovu
scas
movsl
push
outsl
or
and
fwait
mov
xchg
sahf
out
cmp
in
fcomp
xchg
mov
xor
dec
ss
outsb
sub
cmp
test
idivb
sub
call
test
dec
insl
or
daa
arpl
test
arpl
add
fidivs
pop
sbb
sub
sbb
out
mov
mov
push
repz
mov
mov
mov
pop
outsb
xchg
mov
pop
adcb
pushf
push
cmp
push
adc
pop
xor
hlt
or
and
inc
sub
aas
mov
int3
dec
push
fdivrs
xchg
add
cmp
icebp
xchg
pop
push
or
mov
inc
jns
mov
aad
outsl
std
push
push
add
mov
vpavgb
rol
xchg
es
pusha
mov
insl
insl
jnp
and
loopne
cmp
pop
arpl
gs
xor
aam
and
xor
scas
mov
sbb
lahf
and
movsl
mov
mov
cmpsl
pushl
sti
dec
xchg
xchg
mov
jle
ljmp
ficompl
and
enter
std
lock
jb
dec
into
or
xor
jns,pn
jae
dec
jle
sub
mov
jp
or
outsl
dec
jge
jg
out
cld
add
xchg
lock
sub
xchg
mov
push
das
cmp
rcll
jo
mov
mov
out
adc
mull
dec
movsb
cmp
cmp
xor
push
mov
mov
and
jbe
pushf
insl
jge
push
arpl
xchg
sub
mov
ss
inc
push
inc
adc
mov
mov
test
xchg
and
mov
sti
addr16
cmpsl
jl
pop
adc
ss
rcr
and
pop
push
push
pop
testb
push
fmuls
mov
push
xor
or
jno
sub
loope
cmc
xchg
push
test
movsl
je
loope
and
mov
lods
and
or
flds
push
xor
xor
xor
test
add
xlat
lock
negl
bound
pop
iret
mov
enter
jge
cwtl
mov
sub
xor
filds
push
pop
popf
test
xor
shrl
aas
inc
and
mov
nop
dec
mov
outsl
rclb
andl
inc
in
leave
into
inc
daa
add
pop
imul
or
bound
mov
or
fsubs
jecxz
and
adc
dec
pop
adc
add
movsl
lock
inc
inc
pop
cmp
jno
jle
pop
in
jae
stos
push
adc
jns
arpl
pop
cmp
sbb
mov
in
sub
push
xor
mov
or
jp
testb
out
jmp
jno
push
adc
sub
fwait
mov
outsb
adc
mov
mov
add
mov
push
xchg
dec
mov
dec
test
or
movsl
add
mov
cmp
add
or
adc
xchg
or
jno
enter
icebp
cld
clc
orl
add
nop
lahf
dec
out
xlat
sub
cwtl
fstl
xchg
gs
ss
movsl
sub
ljmp
ret
dec
leave
pop
imull
cmc
icebp
sbb
jecxz
fwait
lahf
arpl
xchg
and
pop
mov
insb
jne
andl
and
std
jns
jae
lods
pop
cmp
cmpsl
rcll
dec
pop
into
lock
dec
pop
mov
cmpsl
push
insb
or
adc
pop
xchg
sbb
fwait
xor
push
sbb
data16
popf
cmc
adc
test
clc
or
sti
cmp
cld
cltd
push
cmp
jne
mov
outsl
mov
aas
fwait
shrb
mov
lret
roll
popa
lods
stos
in
call
pop
ja
pop
popa
test
add
mul
pusha
scas
pushf
out
shll
mov
xorl
scas
dec
aas
loop
imul
push
cmp
adc
cwtl
xchg
adc
add
push
jl
dec
push
scas
clc
sub
ds
ja
sub
or
ficoms
out
mov
mov
push
sbb
sarl
pop
imul
pop
imul
fwait
pop
cmc
pop
out
add
sub
jg
mov
fisttpll
xor
jp
adc
insb
and
into
dec
test
pop
rcl
fimuls
or
fidivs
imul
shll
mov
pop
mov
stc
mov
pop
mov
xchg
jb
inc
test
call
and
push
mov
aad
pop
clc
int3
and
mov
fisubrl
inc
mov
pop
pop
xchg
jl
test
in
shll
mov
out
mov
fucomip
dec
and
outsl
mov
sbb
jecxz
inc
outsl
ljmp
cmpsl
xchg
stos
dec
popf
std
sbb
mov
es
shll
inc
xchg
aam
inc
icebp
cmp
mov
and
ret
push
cli
inc
mov
daa
fdivl
out
in
mov
movsl
cmp
mov
push
cli
nop
mov
inc
fs
cmc
mov
sahf
fimull
loope
test
ss
pop
shlb
int
add
mov
sbb
aas
pop
xchg
in
lods
sub
dec
scas
fadds
push
jns
outsl
lret
int
xor
dec
pop
pop
sbb
mov
clc
xchg
sbb
mov
pop
call
jmp
pushf
popf
push
inc
mov
mov
aad
or
push
mov
mov
je
das
dec
dec
imul
xchg
mov
sub
das
stos
mov
mov
fidivs
sar
mov
pop
jecxz
subl
outsb
sbb
scas
imul
fptan
cmp
mov
shll
sub
dec
xor
repz
ds
fldenv
enter
gs
bound
push
dec
lret
test
addl
mov
lea
mov
negb
movb
pop
mov
lret
sti
pushl
push
adc
jnp
cmp
add
loop
enter
scas
add
insl
xor
push
pop
adc
cltd
pop
out
xchg
in
shrb
pop
xchg
pop
add
loop
out
push
inc
movmskps
notl
push
jb
icebp
pop
jae
orl
out
mov
cli
jle
jae
mov
or
xchg
pusha
jns
mov
adc
inc
pop
cmp
mov
outsl
and
adc
add
mov
inc
iret
in
xchg
dec
in
push
popa
push
xor
add
cmp
sbb
pop
cmp
push
inc
fsubp
pop
mov
hlt
cwtl
or
push
add
jnp
loop
inc
push
loopne
and
adc
je
pop
sbb
or
scas
mov
leave
subb
cld
cmp
fs
addr16
push
xor
pop
and
cmpsb
jg
and
sbb
push
orb
leave
aam
xchg
xchg
xchg
push
cmp
insl
xchg
xor
aaa
js
iret
loope
stc
dec
mov
sbb
sub
out
pop
movsb
popa
inc
adc
push
or
test
xchg
stos
nop
or
shr
in
push
inc
dec
inc
cwtl
or
adc
xchg
insb
inc
and
out
dec
push
or
int
pop
or
and
out
sub
cltd
andb
inc
jmp
or
sub
sbb
dec
mov
cwtl
push
push
push
outsl
fldl
call
xor
mov
hlt
insl
mov
jae
dec
pop
add
cli
sub
icebp
mov
xchg
icebp
push
xor
andl
jae
push
out
fcoms
sbb
mov
mov
cmpsl
adc
push
icebp
js
fdivrl
mov
mov
test
loope
cmpsl
mov
fwait
lds
inc
adc
push
or
mov
mov
cmpsb
rol
inc
sub
push
jmp
sbb
mov
fldl
fistpll
pop
dec
cmpsl
push
mov
jp
mov
xor
push
rolb
lock
incl
xor
fstps
mov
jp
jg
jge
gs
dec
sbb
outsb
jmp
xchg
xchg
imul
cwtl
int3
cmp
out
or
pop
add
in
mov
lret
cli
add
into
sar
std
mov
sbb
repz
pop
fsts
add
xchg
adc
push
mov
insb
stos
out
pusha
inc
mov
or
jo
push
test
lock
jge
das
mov
push
in
in
mov
in
jo
xchg
sub
vandps
jo
in
call
lret
pop
pusha
add
mov
inc
enter
stos
dec
jns
gs
dec
out
push
rcl
es
lret
mov
clc
cmpsl
inc
dec
lahf
add
and
int
movsb
scas
rclb
xchg
mov
lcall
sarb
scas
rorb
je
scas
in
shrb
mov
insb
int
into
sahf
push
out
push
xchg
test
xchg
xchg
dec
dec
std
out
push
fadds
xchg
xchg
cmp
ret
das
pusha
adc
leave
cld
dec
loop
movsb
xchg
mov
stos
or
call
dec
mov
add
rcrl
js
sbb
mov
or
cli
sub
xchg
clc
movsl
cmpsl
dec
mov
aad
sbb
int3
mov
ret
sbb
push
sub
add
movsl
outsb
inc
add
arpl
mov
icebp
push
ja
cmc
loop
xor
shll
std
jle
rcrl
cli
idivl
test
push
movb
movsl
sub
stc
mov
pop
mov
mov
adc
push
or
imul
xor
in
push
pop
inc
sbb
xchg
inc
cmp
cli
lret
dec
mov
sbb
lea
cwtl
or
jmp
lcall
loop
mov
ret
inc
mov
mov
jnp
and
fs
push
push
or
xor
and
xchg
adc
fldcw
lcall
sub
or
cwtl
outsl
outsl
add
push
mov
adc
fldcw
aaa
ficompl
add
in
enter
adc
jo
jb
scas
rorl
bound
jecxz
ret
decb
dec
mov
movsb
in
add
jle
adc
pushf
mov
and
aaa
pop
jne
imull
fdivr
cmp
mov
ret
xor
and
mov
stos
jg
pushf
mov
or
push
sub
jbe
les
icebp
nop
or
dec
sahf
inc
insl
mov
shrl
push
movsb
sub
mov
test
mov
push
adc
sbb
pop
inc
sbb
dec
lret
mov
sbbl
rorl
shl
pushf
or
cmp
pop
jp
pop
xchg
mov
xlat
push
sahf
insl
dec
mov
cltd
xrelease
mov
sar
jo
mov
jge
nop
sahf
cwtl
lea
cmp
les
push
lods
pop
pop
add
add
aas
jns
div
ss
sti
xlat
loope
stos
dec
mov
fwait
insl
xchg
stc
jo
sbb
cmpb
inc
out
mov
mov
sbb
insl
jle
add
mov
inc
mov
scas
sbb
shll
jmp
pop
push
fbstp
cmp
lock
sti
inc
xchg
ds
add
or
push
cmp
inc
xchg
sbb
std
and
mov
repnz
add
jge
pusha
mov
jno
or
push
dec
nop
push
mov
imul
push
mov
and
adc
aad
push
mov
dec
sbb
xchg
enter
or
mov
xchg
lods
fmul
out
pop
mov
jae
rcrl
push
xorl
push
not
scas
fiaddl
cld
or
mov
pop
clc
mov
sub
pop
das
sti
stos
lea
leave
lret
dec
xchg
movb
dec
loop
fisttpll
fnsave
js
add
cmp
jb
adc
xchg
stc
ljmp
and
mull
sahf
cld
push
adc
or
data16
pushf
icebp
pop
xlat
mov
push
mov
ret
inc
jne
or
loop
pop
cmpsb
stos
imull
inc
pop
sbb
add
mov
sahf
sub
xchg
dec
lds
inc
stc
push
mov
xor
cltd
lcall
dec
lods
int
pop
push
aad
push
xchg
xchg
test
rol
jg
scas
cs
or
dec
adc
mov
dec
fbld
dec
loope
adc
fstpt
pop
or
mov
in
bound
xchg
adc
ret
fs
test
ds
cs
push
and
mov
dec
mov
or
jo
ds
push
hlt
fldenv
mov
mov
xchg
das
into
and
jmp
or
push
jmp
push
icebp
push
cmp
ffreep
mov
bound
mov
jo
outsl
mov
pop
dec
mov
cmpb
ret
xor
cmp
insl
or
push
inc
mov
fsubs
fisubs
outsl
xchg
cmp
in
hlt
jl
out
sahf
adc
inc
pop
mov
xchg
push
jecxz
out
inc
fsubrs
sub
xchg
mov
push
jb
mov
popa
xchg
test
fsubrl
insl
xor
cmp
test
mov
pop
sbb
and
aad
jae
mov
fcmove
mov
cmc
sub
aas
shlb
adc
gs
hlt
mov
adc
push
mov
cli
or
pop
cmp
in
jp
insb
xchg
std
push
fcoml
add
cmp
fnstenv
sbb
inc
adc
mov
jo
orb
sbb
sbb
inc
mov
sbb
or
or
loopne
mov
test
xor
sbb
ljmp
pop
adc
jl
dec
in
cwtl
mov
cltd
loope
je
and
aad
fcomps
scas
jle
or
dec
fabs
jae
outsl
shrb
and
int3
mov
sub
lods
mov
mov
jbe
or
dec
loope
rcll
push
mov
jmp
mov
lods
fildl
sub
sub
pop
mov
pusha
rol
xchg
pop
mov
xchg
gs
add
lret
and
push
inc
test
cmp
pop
sub
mov
sub
push
mov
jb
push
sub
and
ljmp
sahf
and
xchg
imul
xchg
stos
sub
inc
push
icebp
add
sub
sbb
movsl
lock
mov
jmp
mov
mov
inc
adc
lret
xchg
adcl
rorl
inc
or
out
inc
inc
cltd
or
ret
gs
loope
mov
in
cmp
enter
repz
sub
xor
adc
xor
pop
enter
arpl
mov
cltd
jl
fisubs
jns
push
mov
lods
popf
cmp
idiv
fmull
adc
stos
add
dec
leave
cmp
neg
push
std
scas
push
pusha
stos
push
sahf
dec
fwait
sbb
fisubrl
adc
and
mov
add
inc
adc
in
fsubrl
bound
loope
add
sahf
mov
ffree
fiadds
test
add
sbb
sub
iret
inc
cmp
pop
stc
jnp
mov
lods
mov
mul
jns
fneni(8087
mov
push
popa
lods
cmpsb
cwtl
imul
push
fnstsw
or
adc
outsl
mov
test
jo
subl
in
scas
push
or
pop
jo
push
xor
jecxz
pop
imul
aad
and
insb
add
hlt
jno
ret
and
sti
jp
mov
jno
mov
decl
sti
shrl
mov
dec
mov
test
imul
pop
inc
mov
cmpb
and
inc
adc
sbb
pop
pop
sbb
ja
adc
dec
mov
or
cmpsl
sahf
es
xor
in
jnp
mov
jmp
mov
sbb
jg
pop
and
mov
cli
cmp
mov
xor
ljmp
imul
sbb
aas
std
outsl
inc
insb
push
xchg
imul
stc
ret
mov
cmpl
int
imul
dec
mov
pop
pop
mov
pop
into
add
repnz
xchg
mov
inc
pop
adc
sbb
pop
es
jg
xchg
aaa
out
xchg
repz
andl
adc
shl
jmp
out
xor
jmp
gs
sbb
cmpsl
ds
imul
sbb
aad
dec
int3
fimull
hlt
ret
add
add
out
test
dec
dec
lods
ret
xor
dec
pop
fstpt
out
leave
jmp
cwtl
inc
xchg
adc
movsl
pop
test
mov
mov
mov
mov
outsl
pmuludq
inc
jmp
lret
shll
sub
jmp
dec
sbb
enter
xor
xchg
push
lea
jno
jmp
pop
add
sbb
mov
add
inc
enter
mov
jne
movsl
lahf
popf
les
mov
or
or
inc
dec
ja
insb
leave
mov
fmul
push
lods
repz
jno
loop
loopne
pop
pop
mov
and
mov
push
je
inc
mov
push
in
mov
ja
pop
aas
sub
sub
aaa
jg
pop
dec
inc
stos
pop
addr16
xchg
adcl
enter
mov
nop
nop
test
sub
sbb
add
xor
or
mov
inc
xchg
xchg
add
jl
cmpsb
lret
mov
stc
adc
xor
sbb
shrl
inc
out
cwtl
jg
push
adc
cmpsb
mov
sbb
into
sub
cld
push
cmp
adc
pop
mov
rolb
jns
cmp
mov
andl
mov
pmaddwd
mov
int3
push
add
sub
jle,pn
andb
mov
int
into
sub
aas
in
dec
cmc
push
mov
mov
push
xor
arpl
stc
pmuludq
add
jmp
mov
dec
push
outsl
adc
int
stos
xchg
fnstenv
add
push
int
mov
stc
imul
and
andl
and
mov
jmp
test
mov
push
lods
ljmp
cmc
and
lods
into
xor
add
stos
stos
gs
add
pop
in
mov
lods
shlb
lret
insl
jno
imul
shl
mov
iret
test
cmpsl
xlat
gs
jns
divl
jnp
rolb
or
popa
es
adc
jg
ficoml
cmp
sbb
jne
mov
lahf
jo
loope
stos
mov
into
xor
inc
xchg
stos
cmp
push
cmp
test
adc
test
xor
mov
pop
inc
xchg
add
insl
add
sub
mov
neg
pop
mov
dec
push
jns
mov
fisubrl
mov
dec
in
cmp
jo
movsl
scas
add
jp
cmpb
jp
fsts
xchg
mov
push
sub
jae
push
rcrb
mov
data16
mov
and
out
sub
jecxz
mov
mov
xor
pop
ja
jo
add
xlat
lcall
daa
mov
jne
mov
scas
imul
test
sbb
xor
cwtl
mov
in
lcall
lods
sub
lahf
adc
sbb
push
shll
test
flds
push
pop
inc
enter
icebp
test
and
int
fsubp
loopne
cs
xchg
adc
sti
and
clc
push
cld
inc
fmuls
inc
das
shl
nop
adc
nop
fdivrp
xor
adc
xor
sbb
dec
fsubrl
lahf
inc
aam
shrl
negl
movsb
sub
add
adc
movsl
outsb
loopne
dec
lahf
repz
mov
inc
dec
xchg
jp
push
pop
mov
ret
xor
imul
cmpsl
xchg
rcl
cmpl
scas
movsl
xchg
xchg
pop
icebp
cld
mov
out
pop
push
jmp
and
push
psubsw
and
mov
mov
mov
or
inc
push
aam
jb
ja
cs
pushf
mov
and
shlb
or
inc
or
movsl
lcall
sarl
repnz
aad
xchg
xchg
pop
rclb
mov
andb
pushf
mov
cmp
das
test
mov
stos
xchg
dec
lods
xchg
xor
into
dec
jecxz
or
jl
adc
scas
or
sbb
decb
dec
movsb
ss
push
pop
test
or
std
xchg
or
nop
mov
bound
fsubrs
fcmovu
cmpsl
inc
lods
jecxz
fmull
aad
jnp
mov
repz
sub
gs
jno
sar
test
xchg
pop
jge
or
int3
xchg
icebp
sarb
or
add
pop
cmp
jmp
mov
sub
xchg
shlb
js
add
je
jg
lahf
das
fisubl
xchg
dec
out
cmp
or
pop
mov
fnstcw
test
adc
je
call
or
mov
pusha
xor
sub
xor
push
aad
sub
lock
mov
push
aaa
inc
xor
or
ja
pusha
xchg
daa
popa
mov
lea
test
fs
push
xor
inc
es
jne
cwtl
movsb
inc
or
dec
xor
punpcklwd
rcrl
repnz
negb
clc
sbb
cmp
imul
push
cmp
imul
jmp
jne
jmp
mov
xor
adc
test
arpl
jno
add
iret
insl
test
aaa
ret
divl
sub
xchg
dec
rcl
iret
out
xor
jae
rorb
out
testb
cmc
inc
inc
gs
cmp
sub
mov
nop
movsl
subb
rolb
test
pushf
lods
inc
mov
rcrb
hlt
mov
jg
iret
stc
jg
out
ret
dec
mov
dec
cli
push
cmp
jb
jecxz
ds
xor
std
pushf
mov
pop
adc
adc
fisubrs
and
and
lock
sbb
cs
test
leave
stc
lret
dec
out
ds
das
xor
mov
add
je
shr
fstl
adc
pop
js
in
rcrl
inc
mov
lea
decl
push
or
incb
ret
sbb
mov
mov
mov
pop
scas
mov
leave
and
jge
ds
cmpsb
gs
mov
cmpsl
inc
pop
iret
les
dec
dec
xlat
rclb
mov
lds
in
call
mov
inc
leave
mov
dec
int3
rol
cltd
fiadds
pop
and
jae
testb
mov
jg
fistps
or
lea
push
lea
adc
cwtl
mov
inc
mov
mov
cmp
mov
and
pusha
push
cmp
xchg
inc
pop
push
mov
loop
pop
add
and
dec
mov
dec
pusha
cmp
mov
jbe
aaa
js
cmpsb
push
mov
lea
cld
sbb
in
rorb
out
stc
outsb
sub
fwait
icebp
mov
ret
aam
xchg
adc
add
daa
xor
das
add
int
cmp
data16
iret
jmp
in
sahf
mov
mov
push
shll
cmp
popf
ret
int
cltd
push
xchg
inc
stos
out
sahf
aam
jecxz
iret
insb
hlt
mov
inc
lods
cmp
mov
int3
push
nop
pushf
xor
lcall
icebp
add
xchg
cmp
aaa
adc
cli
and
push
and
cmc
pushf
jmp
dec
cmpsl
out
fstpt
and
not
std
xchg
ljmp
fucom
arpl
ret
fndisi(8087
lods
adc
inc
scas
mov
lea
sub
push
sti
adc
xor
inc
test
sbb
jb
gs
xchg
or
int
jle
iret
and
mov
mov
xor
stc
orl
enter
xor
addb
inc
or
aaa
mov
push
cmp
add
dec
mov
aad
xor
push
pop
rcrb
test
xchg
test
outsl
mov
pushf
mov
or
fwait
dec
mov
adc
jg
push
sahf
xor
and
inc
mov
fsubrs
outsb
mov
pop
mov
faddl
aaa
es
inc
pop
cmpsb
xchg
push
sub
cmpsl
mov
lds
dec
cwtl
pop
xchg
fstl
and
das
adc
inc
add
jge
jo
cwtl
jnp
xchg
cmp
and
jae
lret
dec
and
sbb
out
test
fimuls
popf
call
jo
dec
sbb
push
push
imul
int
das
lahf
test
imul
aaa
pop
jo
lcall
adc
sbb
ja
subb
scas
jecxz
lods
and
fucomp
mov
sbbb
pop
int3
mov
inc
mov
popa
pop
xchg
mov
fwait
push
mov
fnstcw
pop
rorl
inc
nop
cmp
mov
xchg
std
frstor
insl
and
and
mov
push
adcb
xor
inc
int3
xchg
lcall
fs
rolb
adc
mov
js
pop
xlat
push
out
int
repnz
mov
push
js
je
sahf
xchg
adc
mov
arpl
jbe
cmc
test
dec
jno
cmp
push
aaa
jp
push
jle
dec
pop
cld
mov
in
push
or
add
xchg
js
jno
pop
mov
xchg
aad
jno
push
leave
test
aam
jmp
cmp
inc
mov
push
and
jle
ret
dec
sbb
insb
rol
xlat
sub
out
adc
inc
movsl
mov
leave
add
and
xor
jmp
repnz
mov
mov
std
outsb
cmpsb
pop
pusha
sbb
jp
out
add
ffreep
push
sub
pop
cmp
lret
jns
cmp
jmp
adc
jmp
pop
xor
cmp
addb
mov
js
out
push
fdivr
pop
jae
jbe
ds
outsb
xlat
test
inc
mov
aaa
sbb
mov
or
and
clc
dec
lods
add
fsincos
jae
sbb
lret
das
stos
popf
into
add
scas
mov
sub
mov
stc
lods
mov
xor
fldenv
fisubrl
adc
int
jae
loop
in
repz
adc
arpl
cmp
pop
pushf
mov
fsubrs
fs
imul
scas
cmc
push
push
call
adc
out
or
add
outsb
jmp
fbld
jb
dec
add
lcall
jle
pop
pop
ss
jnp
mov
into
inc
push
and
push
shr
or
lds
shlb
in
push
hlt
fwait
lcall
add
popf
bound
bound
sbb
cmp
pusha
and
push
int3
out
xchg
mov
test
inc
or
jnp
inc
sbb
clc
rol
popa
in
stos
fmuls
dec
and
shlb
or
and
mov
mov
je
ds
pop
xchg
scas
push
lahf
dec
aam
sbb
xor
fs
xchg
fldcw
in
pop
mov
mov
xchg
or
imul
fnstcw
movsl
rcrb
cli
imul
popf
xchg
outsb
dec
in
push
mov
stc
mov
insb
jl
and
mov
cld
cmpsl
jp
fldt
loope
and
shrl
int
xor
test
sbb
jnp
push
imul
adc
sbb
popf
mov
jnp
inc
js
cmp
pop
lret
popf
mov
pop
enter
add
ret
xor
jmp
xlat
fdiv
push
or
lock
call
iret
xchg
ds
mov
pop
mov
adc
jl
pop
fcomi
sbb
sub
loope
outsb
xchg
adc
mov
call
push
xchg
inc
xchg
cmp
xchg
repz
xor
popa
and
shlb
popf
push
or
cmpl
mov
pop
and
movsb
inc
adc
adcl
xor
loope
and
pop
dec
push
fistl
mov
cwtl
xchg
mov
sub
and
and
inc
lea
pop
xchg
cltd
dec
lahf
xchg
xchg
mov
push
push
add
xor
in
sti
icebp
xchg
sub
sub
and
in
subl
jae
icebp
mov
dec
movsl
shrl
enter
inc
daa
int3
gs
push
lds
pushf
out
sahf
cmpsl
adc
and
jae
and
adc
cmp
pop
dec
mov
mov
push
xchg
cmp
mov
lock
jecxz
aaa
movsl
mov
mov
fcoms
mov
push
ret
or
pop
jns
dec
xchg
lcall
xor
mov
and
popw
inc
push
mov
lods
das
fistl
jl
addr16
pop
jp
jg
sbb
data16
and
movsb
xchg
fdivrs
push
jo
xchg
out
cmpsb
mov
mov
popa
mov
lods
bound
gs
loope
imul
inc
cmc
cltd
out
jp
test
loopne
push
sub
adc
xchg
pop
sbb
pop
sbb
mov
sarb
or
filds
in
sub
in
sub
push
cwtl
pop
inc
jecxz
and
xabort
mov
or
add
es
pop
enterw
lcall
stos
aad
dec
cld
sub
xchg
mov
iret
or
dec
jbe
imul
sub
mov
fstpt
xchg
lock
cmpsl
loopne
xor
loope
cld
cltd
out
paddw
mov
arpl
lea
jge
imul
clc
jne
divb
je
jne
fidivs
jp
daa
mov
incl
or
and
xchg
in
sub
jl
add
xchg
jp
xchg
frstor
mov
mov
repz
jnp
jbe
jns
inc
les
rcll
mov
es
daa
add
ljmp
sti
adc
jo
test
andl
out
and
sub
cmc
scas
push
lods
lds
mov
mov
jnp
mov
or
outsl
dec
pop
adc
jno
hlt
mov
and
inc
addl
pusha
dec
or
pop
and
push
int
and
fldl
and
cli
arpl
stos
dec
or
pop
aaa
int3
dec
push
push
insl
out
or
add
insl
imul
rcll
mov
dec
mov
ret
pop
testb
fisttps
pop
cmc
mov
mov
pop
js
insl
jg
loop
push
xchg
mov
jmp
and
lods
outsb
inc
lods
aad
sti
bound
cvtps2pi
out
insb
cmp
pop
scas
add
mov
test
movsb
sarb
in
lahf
sub
adc
jge
daa
cld
sbb
cmc
cmovo
leave
mov
sub
and
inc
bound
les
lds
cwtl
scas
sbb
jb
xchg
call
std
xor
ret
int
test
fsubp
xchg
cwtl
xchg
push
sub
cwtl
dec
in
mov
xor
push
mov
lock
loope
push
push
pop
pop
mov
mov
jp
fdivp
dec
out
shll
fbld
or
sub
shlb
mov
mov
test
inc
addr16
les
stos
add
das
jmp
add
loop
sbb
rorb
pop
cmp
push
sbb
mov
test
loop
mov
dec
outsl
or
repnz
imul
in
dec
sbb
jnp
jb
mov
sbb
call
out
mov
pop
cld
js
jbe
jnp
pop
jns
push
mov
xchg
aas
bound
lock
jp
stc
lret
ret
cltd
ret
fsubrs
shlb
or
fists
add
pop
dec
mov
inc
pop
int
lods
insb
int3
xor
add
or
mov
lods
pop
mov
xchg
mov
arpl
rcrb
xorb
mov
js
in
std
inc
or
pop
popa
lock
cmp
ja
mov
lcall
mov
in
lock
jno
stos
out
fwait
push
ror
or
adc
mov
cmpl
pop
and
adc
stos
push
sbbb
fwait
xor
and
arpl
gs
andb
frstor
jno
push
movsb
inc
sti
push
fld
lods
fwait
insb
fstpt
xchg
cmpb
cmc
sbb
mov
add
or
xor
fistps
addb
f2xm1
add
mov
jns
int
add
lcall
clc
pop
push
je
data16
push
cmp
jecxz
lret
sti
out
js
and
ja
cmp
jnp,pn
mov
ja
addb
test
fs
lods
clc
xlat
push
test
cmp
repz
test
sub
dec
test
in
cmp
daa
mov
fadd
popl
xchg
fidivrl
pop
fs
ljmp
imul
decl
inc
jne
or
pop
imul
lods
adc
test
into
jno
je
ljmp
loopne
mov
sbb
gs
and
inc
jo
mov
cmp
pop
lret
push
imul
push
cmp
xchg
dec
pop
and
sbb
bound
sub
stos
add
lods
jb
ret
fcoms
mov
ret
repnz
fnstcw
push
les
mov
ljmp
mov
lcall
cmpsl
inc
dec
sahf
data16
push
cmpl
or
scas
lods
in
push
mov
add
jp
std
jns
imul
out
outsb
pop
cmp
xor
call
movsl
push
cmp
cmpsb
cmp
cli
add
jl
repz
movsl
cmpsl
dec
push
ror
xor
or
add
in
out
mov
and
outsl
pop
sub
cmp
rol
and
leave
add
mov
enter
mov
add
out
fs
or
lcall
movl
lds
cmpsl
in
dec
jge
in
or
sbb
pushf
bound
pusha
jge
ja
nop
ss
std
roll
jne
test
pop
mov
jo
push
loopne
test
out
push
cmp
int
mov
fucomp
aad
test
adc
movsl
pop
enter
mov
es
cmc
ds
mov
pushl
sbb
je
push
adc
or
ucomiss
mov
fdivrs
lds
mov
pop
xlat
gs
mov
cli
inc
cmp
rcrl
mov
xchg
sbb
cwtl
jo
xchg
test
or
push
mov
xchg
bound
imul
insb
in
ret
and
pop
int
repnz
push
int3
push
push
cmp
cmp
dec
movsb
adc
movsl
repz
test
push
out
pop
ror
mov
push
dec
pop
jb
jmp
sbb
dec
push
sbb
outsl
js
add
mov
hlt
nop
cltd
mov
cmpsl
xchg
call
ret
hlt
pusha
call
push
testl
in
xchg
in
sti
and
pop
push
ret
cwtl
mov
sahf
cltd
push
lods
push
mov
pushf
xchg
jns
adc
dec
fmuls
je
inc
dec
inc
mov
xor
and
aaa
test
fxch
arpl
xchg
in
andl
add
ljmp
loope
popa
mov
ja
cs
mov
mov
shll
xor
jmp
and
push
fisttps
mov
inc
popf
stos
dec
xor
jne
pop
sbb
mov
cmc
jl
stc
das
in
lret
mov
mov
mov
pop
cmpb
pusha
ds
mov
and
scas
xlat
loop
ja
lds
and
sarl
inc
xchg
loope
mov
mov
cwtl
push
inc
clc
mov
sub
sbb
xchg
inc
jmp
mov
pusha
xchg
aad
nop
jmp
jb
fsubrs
loop
shlb
jb
mov
out
pushf
mov
cmp
stos
xlat
or
sub
popf
xchg
sahf
push
push
cmp
mov
xchg
mov
shlb
adc
in
pop
clc
or
adc
push
mov
enter
in
sub
xchg
pop
int
xchg
xchg
adc
pop
push
xchg
mov
loopne
imul
cli
test
ret
repz
hlt
jns
jl
leave
testb
movl
lods
xor
mov
je
mov
sbb
push
stos
mov
xchg
mov
add
movsb
aas
xlat
addb
inc
sarl
add
sti
nop
outsb
int3
insl
hlt
gs
gs
sarl
inc
sub
movsb
shr
incl
arpl
cli
xchg
sub
cmp
pop
xchg
sub
push
jmp
xchg
es
sahf
int
lock
push
sub
out
sub
lock
test
or
int3
leave
or
cmp
sub
xor
xorb
in
or
sub
push
movsl
fidivrl
subb
mov
or
in
xor
ret
popl
mov
dec
out
rorb
daa
mov
out
lahf
xchg
xchg
xchg
mov
rcrl
movsl
jo
insb
push
mov
cmpsl
mov
adc
idivl
add
in
ss
das
and
or
test
jnp
jle
stc
dec
sbb
cltd
or
shrb
je
xchg
push
pop
cmp
mov
je
es
mov
js
pop
dec
mov
add
adc
sbb
mov
push
push
cld
notb
jns
pop
in
mov
jb
mov
stos
lret
les
inc
xor
adc
pop
xchg
xor
add
mov
dec
ljmp
cmp
mov
aad
fmul
cltd
into
xor
lock
sub
xor
jne
int3
icebp
int
cmpsl
pop
lods
jno
iret
mov
les
or
mov
lcall
popa
sbb
mov
imul
imul
iret
movsb
mov
push
push
and
scas
jae
sub
ret
inc
jle
sub
xchg
cltd
fwait
test
enter
mov
ljmp
cmp
push
and
jb
int
shll
frstor
fimull
and
mov
push
mov
iret
movsl
mov
lods
or
aam
jg
popa
add
mov
dec
cmpsb
ror
sub
sub
push
xor
or
mov
lods
sahf
add
mov
imul
cmp
jno
add
rcll
add
mov
jecxz
pushf
push
aam
pop
xchg
mov
sub
add
ret
sub
out
jns
mov
jne
sub
or
xor
add
mov
or
scas
icebp
repz
adc
shlb
jecxz
mov
lods
mov
mov
mov
mov
fnstenv
add
xor
xorl
in
mov
mov
and
scas
imul
mov
pop
push
jle
fmull
sub
cmp
adc
negl
into
push
pop
pop
int3
pop
shrb
insl
out
repnz
scas
pop
repnz
inc
and
jl
inc
xor
cmp
mov
jmp
and
imul
fbld
arpl
mov
insl
lods
inc
ret
add
xchg
push
sbb
jb
push
or
cmp
xor
mov
sbb
or
rcrb
nop
aad
arpl
mov
ljmp
mov
in
test
jb
ret
jo
mov
shll
mov
rcrb
repz
or
inc
add
and
out
ret
loopw
lods
mov
or
roll
sub
leave
jbe
ss
xchg
mov
gs
jno
insb
loop
xor
or
and
dec
or
rcll
addr16
cmp
pop
shrb
lds
mov
test
xorb
xor
in
lcall
mov
inc
inc
pop
dec
jg
inc
sub
or
dec
mov
sub
and
lods
dec
adc
adc
fdivr
dec
movsl
nop
bound
daa
aas
daa
icebp
test
nop
loopne
bsr
adc
pushf
xor
insl
addb
sbb
jns
xchg
frstor
xchg
mov
push
repz
mov
sbb
inc
fwait
int
pop
add
add
mov
fdivl
lods
icebp
out
lahf
dec
lds
dec
adc
add
add
and
mov
jno
orl
pop
call
push
xor
xchg
and
arpl
pop
jb
hlt
pop
add
inc
mov
xchg
adc
cwtl
aaa
std
mov
jge
sbb
push
out
ds
sub
aas
jg
add
scas
adc
or
jno
xchg
cltd
push
imul
cmp
add
loopne
xchg
outsb
repnz
adc
rcrl
andl
push
pusha
andl
add
or
stos
mov
fstl
xor
iret
add
cwtl
or
cmc
sub
addr16
daa
add
aas
not
inc
or
aaa
stos
gs
sbb
mov
sub
mov
ss
jle
inc
push
scas
inc
fistps
mov
cld
xchg
add
sti
add
push
dec
sahf
pop
xor
je
out
and
mov
popl
insb
sub
clc
insb
test
movsl
jnp
addr16
lods
aad
divl
jno
inc
leave
movsl
lods
mov
fsts
in
jecxz
in
sbb
dec
mov
daa
xor
nop
jge
fmuls
movsb
or
popf
ja
jnp
mov
pop
jmp
test
std
sbb
push
xlat
push
lret
jmp
movsl
lea
cmc
std
repnz
lret
push
or
movsb
repnz
dec
dec
or
mov
jb
mov
push
aas
mov
mov
repz
xchg
push
daa
inc
ret
repz
pop
mov
test
jg
aad
fiadds
push
je
jae
push
sbb
xlat
sarl
lods
fidivs
mov
cmpsl
mov
cmc
imul
adc
inc
pop
inc
adc
negl
mov
aaa
xchg
dec
clc
xchg
jns
pop
sbb
pop
dec
mov
lock
mov
enter
push
inc
add
je
fs
ljmp
mov
xchg
movsb
in
cld
mulps
icebp
imul
xchg
hlt
idivl
in
scas
xchg
jle
mov
dec
mov
push
cmpsl
dec
shrb
push
dec
add
xor
out
icebp
into
dec
mov
repnz
jae
fucomip
insl
add
pop
and
pop
xor
das
push
stos
inc
das
xor
test
mov
or
inc
call
jecxz
cmp
adc
cs
add
popf
in
test
fmuls
mov
outsl
mov
or
pop
insb
out
xor
adcl
popf
jns
cld
lahf
fldenv
inc
leave
mov
in
dec
std
mov
insb
ret
push
cwtl
jge
adc
pop
sub
add
pop
pop
sbb
cmpsb
add
jns
popw
dec
arpl
lret
xor
into
or
scas
lret
ss
jne
outsb
jmp
mov
pusha
pop
ja
mov
mov
sbb
stc
sbb
mov
push
sub
stos
push
imul
jbe
fstps
mov
int3
sbb
inc
daa
inc
inc
push
adc
int
push
aam
lods
insb
xor
pop
and
mov
mov
out
clc
into
fdivrl
xor
and
pop
fistpll
push
sbb
leave
pop
test
outsl
mov
fldcw
or
enter
mov
aaa
inc
mov
push
mov
punpcklbw
movsb
mov
xlat
bnd
testb
mov
dec
inc
cmp
jecxz
pop
or
sbb
test
cmpsb
jmp
or
sbb
dec
imul
push
push
push
and
xor
pop
push
cltd
xchg
pop
or
pop
push
call
cwtl
into
xlat
stc
push
push
cmpsl
lcall
jb
adc
mov
xchg
fdivs
fcom
test
das
mov
icebp
jne
out
inc
xchg
shll
pop
mov
add
sub
mov
dec
jae
mov
mov
and
sarl
dec
inc
daa
cmc
out
mov
rcr
clc
loop
mov
push
popf
lret
cmp
xor
cmpsl
jbe
jb
cltd
mov
imul
sahf
cs
jne
lea
push
push
or
sbb
xor
sub
fnsave
push
out
aas
sbb
dec
roll
jb
xchg
push
inc
iret
hlt
mov
fisubrs
dec
ds
sbb
loopne
push
test
ds
jp
mov
lea
outsb
shll
xchg
inc
bound
icebp
movb
lahf
and
or
lock
clc
sbb
movsl
xchg
adc
addr16
mulb
mov
int3
xchg
popl
test
jns
add
push
popf
mov
and
das
stos
sahf
shrb
jge
shlb
xchg
pop
jmp
inc
dec
sbb
fdivrp
nop
jecxz
jg
subl
pushf
nop
add
fidivl
xor
cmpsb
pop
and
jmp
cld
das
jnp
in
test
pop
inc
testl
popf
sbb
add
mov
cmp
push
push
fstpl
pop
je
pop
pop
aam
xor
lds
jns
add
in
dec
cmpsb
xchg
dec
jg
and
icebp
mov
fwait
stos
xchg
xchg
lods
push
les
sbb
mov
stc
ret
cs
cmp
in
inc
jmp
jo
mov
fidivrl
jecxz
ja
cmp
fldl
mov
mov
pop
lods
jae
mov
in
popf
lcall
pop
or
inc
out
xor
movsb
sub
mov
stc
adc
xchg
pop
mov
xor
lods
scas
fs
lret
cmpsl
rcrb
aam
pop
js
cmp
or
cmp
push
jae
loope
xor
cmp
fs
sub
jge
stc
mov
iret
repnz
pop
aas
out
cmp
cmp
daa
or
xor
add
insb
add
aad
imul
mov
mov
pop
mov
cmp
js
js
inc
aad
gs
cld
mov
stos
jmp
mov
aas
ret
inc
push
mov
movsl
mov
loopne
insl
fcomi
fs
dec
pop
cwtl
xor
ret
test
pop
cld
xchg
into
jae
xor
jp
cli
mov
lahf
fistpl
push
pop
adc
and
xchg
gs
pop
mov
inc
jb
push
popl
repnz
xor
and
sbb
xchg
dec
pop
lret
outsl
jl
nop
test
push
fidivl
mov
lahf
push
push
out
lret
mov
mov
call
ret
mov
pusha
inc
mov
sbb
cwtl
cmp
lods
dec
out
out
cmpsb
push
popa
jecxz
iret
pop
hlt
mov
jbe
negb
stos
push
dec
and
out
enter
test
test
cmpsl
push
out
repz
les
aas
inc
push
icebp
test
out
and
xchg
popf
fldenv
pop
push
jmp
outsl
adc
jle
cld
popa
out
adc
nop
xchg
mov
mov
xchg
inc
pop
xlat
loop
sbb
mov
pop
out
out
pop
sbb
call
sub
adc
lods
out
ret
mov
in
fisubrl
xor
xor
adc
cli
cmpsb
out
dec
cmp
lods
fcom
xor
pusha
xchg
push
std
iret
cltd
mov
dec
lods
cmp
mov
inc
fdivrs
xor
mov
jne
cs
push
enter
push
xor
dec
shl
test
nopl
sub
lcall
test
loopne
les
xor
pop
add
in
pop
push
cmp
cmp
outsl
scas
insl
in
stos
pop
faddl
xor
adc
jecxz
xchg
imul
repz
and
mov
push
shll
dec
and
mov
movnti
or
mov
cmc
sub
out
out
adc
mov
xchg
iret
lea
inc
leave
sub
sbb
and
xchg
xchg
sbb
inc
lahf
mov
add
add
movsb
outsl
lock
mov
nop
mov
pop
sti
jge
sbb
pushf
or
jbe
inc
lret
repz
je
xor
pop
jns
loopne
ljmp
ficompl
roll
adc
aam
clc
leave
outsl
mov
sarb
adc
dec
or
test
jae
and
aad
bnd
roll
pop
jl
pop
inc
adc
cmp
cmp
lcall
mov
adc
cmc
int
xchg
mov
pop
mov
add
pop
adc
mov
jno
cmp
movntps
add
or
out
fisubrs
mov
add
movsb
adc
aaa
cmp
cmp
mov
jecxz
mov
xchg
loopne
aas
xor
ljmp
mov
add
dec
push
sbb
pop
jns
adc
or
inc
cli
jae
mov
cltd
jne
es
dec
enter
in
in
lock
mov
or
mov
lods
cmp
cmp
fisubs
clc
cmp
les
out
inc
ljmp
in
jl
push
sbb
pop
add
and
lcall
pop
xor
call
sbb
xchg
pushf
add
std
add
hlt
sbb
loopne
inc
popa
mov
and
or
popf
jge
xchg
fs
jmp
insb
gs
aam
icebp
movsb
mov
push
pop
mov
dec
fnstenv
or
cld
cmp
fsts
out
jle
rcrl
add
and
adc
bound
push
and
jo
pop
std
shr
add
jbe
insb
mov
or
mov
xchg
fs
xlat
in
lret
and
fistps
xchg
mov
lret
jle
xor
jns
je
pop
xor
cmc
cwtl
orl
sbb
adc
insl
cmc
xor
and
addl
cld
arpl
aam
lock
fwait
daa
mov
test
and
mov
or
ret
addr16
xor
pop
pop
mov
rorl
lea
fs
lret
js
fimuls
mov
bound
or
test
adc
repnz
insb
or
mov
sahf
cmp
inc
nop
push
outsl
mov
mov
rcrb
add
lea
insl
pop
and
out
xchg
popa
pusha
jmp
stc
es
test
jns
aad
mov
jge
cmpsl
fadds
cwtl
xor
outsl
insl
jg
negl
in
sbb
arpl
fstpl
fsubl
inc
mov
mov
sbb
jle
pop
adc
loop
dec
sbb
push
mov
add
sub
lret
jecxz
jl
sbb
add
sbb
dec
or
not
mov
dec
push
enter
sub
pop
iret
mov
mov
jp
int
outsb
or
inc
les
push
push
rcr
sbb
cmp
mov
xchg
push
sub
ss
addr16
cmp
les
lret
jno
test
repz
xor
lcall
inc
push
jmp
xchg
test
movsb
out
loopne
push
out
movsb
xchg
lret
mov
mov
cmpsb
push
xchg
and
fisubrs
popa
dec
jl
cltd
in
pop
inc
adc
insl
cwtl
je
xchg
mov
insb
cmpsl
cld
jno
adc
push
rcr
pop
scas
cmp
xor
pop
sub
pop
fidivs
pop
popf
insb
push
mov
lock
or
xchg
nop
jne
mov
sbb
loop
or
cmp
fildll
pop
add
xor
in
mov
mov
jg
insl
dec
movsl
lods
out
out
daa
mov
jno
mov
pop
mov
inc
inc
fstpt
jp
call
lock
inc
popa
xchg
sub
cwtl
dec
xchg
cs
repnz
xchg
xchg
jbe
cmpb
aam
mov
push
scas
clc
push
xor
lahf
in
xor
in
xchg
aaa
inc
dec
dec
xlat
in
pop
outsb
jb
push
in
jne
dec
iret
pop
nop
ljmp
adc
adc
cmp
adc
mov
es
cli
in
movsl
sub
fwait
xchg
xor
shlb
sbb
add
sbb
jae
xchg
jno
push
dec
xchg
xlat
mov
cwtl
inc
mov
test
fdivl
std
sbb
ss
pusha
dec
aam
add
xor
jo
xor
sub
lahf
pop
test
fistl
out
push
and
pop
sub
gs
mov
jl
in
jns
lret
cmp
xlat
adc
or
js
mov
or
mov
stos
mov
jl
inc
frstor
mov
xlat
out
lock
sub
lea
sbb
movsl
mov
pop
inc
mov
push
mov
cmpsb
push
xorb
pop
cmpl
fistl
sub
fwait
adc
push
cwtl
orl
jle
jl
cmpsl
mov
cmc
ss
fdiv
dec
mov
cld
mov
lret
pop
add
jb
adc
jmp
push
loope
jl
or
outsb
xchg
dec
cwtl
cmp
lahf
mov
pop
push
cmp
and
ret
fucomp
int3
mov
mov
push
sbb
gs
shlb
xor
ja
subl
bound
aad
les
add
or
clc
xor
fs
push
sbb
pop
scas
xchg
sub
test
jg
mov
push
xchg
mov
je
inc
mov
mov
or
sti
sarl
inc
loopne
mov
lods
sub
pushf
adc
mov
bound
push
loopne
shl
pop
xor
and
and
in
test
divb
clc
mov
add
daa
xor
xchg
sbb
push
inc
or
cmc
pop
loopne
push
sbb
int3
adc
xchg
push
or
inc
xor
fcmovb
fnstsw
stc
xor
aaa
inc
mov
std
push
jle
jbe
jp
jns
xchg
xchg
adc
cli
cmpsl
fwait
add
lods
lret
sbb
mov
dec
ja
cs
jmp
loope
inc
pop
hlt
push
test
jge
int
scas
or
in
lds
fwait
cmc
inc
or
fstpl
aad
xadd
pop
pop
loop
and
inc
pop
mov
jmp
pop
inc
dec
push
push
push
xchg
and
adc
ja
xchg
mov
repnz
pop
sub
push
inc
inc
jno
pop
daa
imul
push
sub
jno
lahf
stos
xor
sti
inc
inc
mov
cmpsb
sbb
adc
xor
iret
pop
xor
jmp
fisttps
mov
mov
sti
aad
ds
push
mov
sbb
lahf
mov
idivb
sahf
dec
and
cmc
bound
loope
repz
fnstenv
sbb
add
and
xlat
or
pop
push
sbb
es
adc
xchg
pusha
mov
lea
inc
cmp
and
and
arpl
xchg
out
fsubp
cltd
sbb
mul
jnp
sub
xchg
xor
xor
js
jg
ljmp
sbb
daa
jns
push
dec
and
mov
dec
nop
mov
xor
outsb
in
adc
sbb
stos
jbe
popa
sarl
sbb
in
fcompl
arpl
inc
call
int
jno
push
ljmp
xchg
jg
mov
shrl
jp
inc
imul
lret
std
add
mov
icebp
pop
mov
movsl
aad
and
xchg
sbb
int3
jl
stos
fcmovnu
add
jns
jae
lods
add
andl
jo
push
fdivrs
dec
nop
movsb
jne
loopne
xchg
bound
std
jno
sub
mov
divl
loopne
movsb
adc
hlt
shll
jge
mov
xorl
and
mov
pop
dec
es
ss
rorb
lods
lea
mov
gs
xor
shrb
popl
clc
push
stos
fiadds
sbb
xchg
pop
xlat
insb
movlps
movl
lods
in
fiadds
fstps
shlb
pushf
mov
xor
inc
pop
sub
mov
repnz
aas
insl
cmp
dec
nop
pop
stos
lret
xchg
std
stc
fmuls
jmp
sti
add
xchg
in
bound
push
push
jmp
aam
adc
mov
push
fldt
mov
sahf
fldl
mov
adc
outsl
idivb
fsubr
insl
jae
mov
add
lcall
adc
jbe
xchg
pop
add
fildl
jnp
or
jb
cld
data16
mov
mov
jge
sahf
mov
in
ss
cmpsb
cmp
cwtl
es
mov
popa
push
pop
mov
mov
bound
inc
jg
sub
mov
push
out
nop
sbb
orl
push
iret
bound
out
mov
push
leave
lahf
pop
loope
fwait
outsl
or
pop
ljmp
mov
out
stos
mov
mov
jns
faddl
xor
pop
sub
ljmp
int
xor
fildl
sbb
xchg
jns
imul
xchg
or
stos
xor
or
and
das
repz
inc
pop
pop
add
clc
sbb
mov
addr16
push
dec
mov
imul
cmpsl
repnz
outsb
mov
int
or
mov
add
fimuls
jmp
push
jp
push
hlt
popf
lret
mov
mov
sbb
xor
jle
sbb
lahf
push
jo
jbe
lds
std
dec
imul
mov
into
add
jns
or
cwtl
jg
dec
cmpsl
dec
push
fisubl
jae
scas
rcrb
adc
fmull
fldcw
lcall
jo
add
sub
mov
clc
das
aas
mov
mov
shlb
xchg
pusha
push
rcll
or
push
inc
fisubrs
xor
xor
add
or
cmp
stos
mov
dec
pop
mov
jp
les
cmp
aam
test
and
add
inc
xchg
add
mov
cmpsb
movss
sub
fdivl
pop
add
sbb
mov
or
sub
arpl
pop
dec
xor
and
add
inc
sub
jmp
shrl
jle
sahf
mov
mov
mov
or
add
push
pop
and
jmp
inc
xchg
lds
cs
fisubl
dec
add
adc
push
jp
lahf
xlat
lret
ljmp
icebp
test
sar
pop
arpl
mov
fcmovnbe
daa
sbb
sub
adc
mov
loopne
push
cmp
inc
or
jns
xchg
stos
inc
pop
outsb
shlb
xor
cmp
mov
call
push
push
add
cld
inc
loop
add
addl
scas
loope
dec
jle
jle
imul
push
aaa
dec
adc
clc
and
adc
inc
adcl
add
sbb
jne
cli
aad
push
aas
mov
repz
adc
mov
lret
push
or
push
popf
cli
xchg
cmp
and
fsubs
repz
dec
or
fbstp
ror
rcll
pop
addr16
and
ret
add
sbb
fucomp
sub
lret
cli
mov
jp
pop
mov
imul
or
iret
jno
push
add
push
les
jmp
push
mov
jge
scas
daa
pop
xor
add
outsl
scas
jl
rcll
mov
out
mov
mov
sahf
dec
jp
jo
add
out
dec
and
cwtl
push
loope
ret
rcl
enter
mov
mov
push
jo
ficoml
mov
jbe
jnp
aad
mov
mov
sub
sbb
mov
loope
or
sbb
push
pop
out
pusha
inc
dec
loop
ja
dec
rcll
add
sti
mov
idivb
repz
or
test
lods
int
jp
lret
inc
sub
test
mov
cld
mov
xor
out
fdivr
add
cwtl
inc
jl
sbb
mov
cmp
and
aad
xchg
xchg
lock
sub
mov
dec
push
loopne
mov
hlt
es
pop
pop
sbb
addr16
pop
dec
lds
hlt
das
arpl
imul
imul
adc
sbb
repz
cmp
dec
mov
scas
mov
push
data16
inc
mov
bound
push
ja
jb
leave
sbb
dec
xchg
lahf
inc
fcomi
pushf
mov
mov
fs
cmp
mov
das
lea
push
push
roll
outsl
xor
cmp
inc
jbe
fdivrp
test
xor
jg
dec
pop
jnp
jnp
add
mov
int
add
dec
repnz
sbb
jmp
inc
pop
lahf
aas
loope
jle
out
xlat
cli
not
sbb
movsl
inc
pop
dec
mov
lret
repz
rclb
sbb
nop
mov
push
push
xor
inc
out
jbe
dec
fnstenv
ret
cltd
jecxz
gs
call
mov
dec
js
mov
je
xchg
loop
lahf
pop
mov
insb
aas
or
jo
clc
cmp
lods
and
push
shrb
add
cltd
push
push
clc
outsb
mov
add
dec
xor
push
fs
popa
xchg
loopne
inc
xchg
mov
push
cmc
shrb
ja
in
lock
xchg
mov
cmp
add
mov
rorl
mov
addr16
xor
dec
je
dec
inc
mov
ss
xor
jo
icebp
nop
cwtl
out
lahf
adc
shl
dec
mov
jecxz
cld
out
cwtl
rclb
inc
shrb
mov
inc
lds
cltd
mov
stos
jp
jnp
cli
mov
frndint
xchg
leave
inc
adc
cmp
das
push
lods
push
and
iret
sbb
push
ja
add
jp
xchg
addr16
pop
mov
pop
rorb
mov
loope
outsb
repnz
xchg
sahf
inc
mov
out
cmp
and
xchg
sub
xchg
ds
mov
xor
rcll
daa
das
popf
jne
aaa
jg
or
jecxz
and
lret
out
jno
fstpt
sahf
xor
loop
rcl
inc
imul
mov
pusha
test
and
mov
xchg
xchg
sub
js
dec
mov
rolb
xchg
mov
shlb
repz
or
adc
xchg
rorl
jne
test
inc
mov
lret
repz
pop
push
out
ret
loop
cmp
adc
mov
pop
fnstsw
add
xchg
out
insb
xor
cmp
jl
out
imul
mov
lods
outsb
arpl
pop
jns
dec
pop
or
js
cmpsl
mov
jg,pn
cmp
push
in
xchg
cli
mov
pop
cwtl
cli
inc
aaa
xor
jnp
aam
jne
dec
lret
add
adc
and
ja
cmp
fld
add
adc
iret
cmp
add
int
out
lmsw
lds
movsl
jno
popf
mov
into
jnp
sbb
loope
ds
jne
dec
push
jno
sub
ljmp
insb
xor
mov
adc
push
inc
mov
addr16
mov
in
mov
aam
scas
lret
cli
fidivrs
mov
adc
push
insb
loopne
inc
adc
nop
out
push
mov
test
adc
cmp
cmp
scas
and
stc
xor
pop
or
test
lock
sbb
test
bound
mov
pop
fsubr
mov
cli
test
mov
mov
inc
add
xor
mov
cltd
orb
jp
sahf
cmp
xchg
gs
jbe
fxtract
lock
test
cmp
pop
and
imul
mov
jl
cwtl
popa
push
push
mov
pop
aam
lock
mov
mov
sahf
push
jo
into
sub
imul
push
lods
mov
pop
out
dec
scas
lret
out
sub
test
add
cmp
fwait
insl
xlat
adc
imul
pop
fmuls
mov
inc
add
cmp
lret
test
not
xchg
add
leave
mov
or
sbb
cmp
cs
jmp
xor
mov
or
and
adc
cmc
in
dec
pop
mov
test
das
and
loope
push
shlb
mov
push
mov
test
jns
xchg
loopew
in
inc
add
mov
fsubr
pop
shlb
cmpsl
inc
adc
sub
xchg
mov
mov
ja
cwtl
lret
inc
rcr
cmp
in
xor
imul
js
sub
dec
bound
insb
insl
das
scas
xor
daa
mov
add
push
sbb
cmp
xor
mov
push
add
cmpsb
push
dec
jmp
insb
into
xor
xchg
test
xor
fdivs
dec
xchg
pop
or
mov
test
test
fisttpll
inc
movsl
jno
adc
outsl
or
stos
movsl
xchg
jle
bound
hlt
je
andl
sahf
cli
mov
add
adc
mov
pushf
push
or
xchg
pop
xchg
icebp
jbe
ljmp
mov
cmp
dec
mulps
inc
and
xor
cld
shrl
jge
lock
loop
gs
aam
insl
add
sbb
mov
icebp
orl
cmpsl
pop
test
xor
add
jmp
xor
scas
xor
je
cltd
repnz
cmpsb
orl
jnp
orl
sti
and
test
adc
stc
rcll
inc
insb
push
push
cmp
cmp
mov
aam
xchg
outsb
loope
push
xchg
xor
and
and
push
dec
faddp
and
loope
cmp
std
out
dec
sahf
lahf
jbe
xchg
popf
loop
jmp
dec
loop
jnp
adc
scas
sub
fcompl
jge
iret
push
sbb
sub
xchg
movsl
clc
loop
dec
inc
sub
inc
aad
mov
mov
jae
fnstenv
xor
out
mov
push
mov
cli
mov
inc
pop
popf
stos
jb
movsb
inc
pusha
lock
mov
dec
enter
sub
lret
xchg
scas
fiadds
inc
add
xchg
ret
push
out
push
jno
jnp
mov
mov
mov
mov
mov
add
and
mov
jle
popf
nop
mov
jbe
mov
push
sti
out
icebp
repnz
gs
jno
cmp
cld
sub
dec
add
orl
flds
test
jbe
bswap
fisubrs
pop
jnp
mov
pusha
add
dec
mov
ds
test
lock
cli
mov
lret
xlat
pop
dec
push
adc
mov
repnz
divl
data16
push
xchg
mov
sahf
cmp
stos
loope
data16
cs
cmp
push
inc
pop
imul
repz
push
repnz
xchg
sbb
fnstenv
pop
data16
aam
and
jmp
push
orl
push
xchg
popf
hlt
sub
es
or
inc
popf
inc
fbstp
mov
ja
cmpsb
fbstp
ret
mov
push
stos
jns
dec
enter
jno
mov
sbb
jge
clc
imul
xor
push
cs
xchg
cli
push
xchg
inc
addb
mov
fs
push
dec
fisubs
push
jp
jg
loope
mov
in
rcll
jb
lcall
lcall
aam
push
or
cmp
and
xor
call
in
les
pop
cmp
add
lds
enter
mov
insl
sarb
xor
mov
test
insb
xchg
xchg
inc
lea
movsl
cmpsb
mov
aas
icebp
fidivrl
mov
sbb
rclb
add
cltd
pop
jbe
fs
inc
push
jecxz
loop
cmp
mov
arpl
stos
in
loope
rolb
roll
cmpsb
mov
push
jns
adc
push
jae
ljmp
mov
mov
inc
sub
cmp
fwait
loop
lret
push
in
pop
popa
addr16
add
aam
adc
cmp
dec
call
outsb
sub
push
in
or
xor
or
movsl
bound
push
addr16
icebp
sub
inc
pop
add
cmp
dec
cs
mov
push
int
jmp
jbe
inc
pop
testb
inc
sub
popf
mov
mov
adc
mov
jecxz
in
xor
inc
add
pushf
repz
pop
pop
dec
scas
cmpsl
xchg
pushf
sbb
fnsave
adc
test
in
xchg
mov
mov
push
andb
sbb
jb
les
pop
loope
mov
sti
dec
cmpsb
rcrl
in
jge
vmwrite
stos
lea
arpl
inc
ss
dec
xlat
sub
push
aam
add
push
pop
dec
xchg
mov
mov
cmp
rclb
and
pop
and
mov
iret
bnd
or
clc
and
idivb
lock
imul
pop
xlat
aaa
hlt
daa
jb
and
jo
jns
imul
xchg
ja
pushf
outsb
popa
xchg
jl
fisubl
push
mov
jp
mov
lods
and
popf
adc
add
inc
cmpsb
imul
mov
in
adc
stos
push
xor
push
mov
pop
loope
push
les
mov
mov
xor
push
inc
ss
out
fistps
pop
dec
sbb
scas
aam
pop
dec
popf
addb
push
mov
xor
mov
sbb
mov
add
mov
popf
xor
mov
jle
cwtl
sub
jb
out
xchg
dec
mov
in
ret
dec
ds
das
outsl
pop
int
and
in
test
jg
jmp
and
jae
in
jecxz
mov
xor
lods
js
lock
sbb
pop
mov
test
in
or
and
mov
ficomps
in
add
mov
shl
and
and
test
mov
mov
cmpb
cmp
pop
mov
lods
arpl
adc
scas
sub
mov
movsb
gs
mov
add
push
in
dec
adc
mul
stc
cmp
mov
je
aas
add
bnd
mov
je
negl
lcall
jbe
xor
push
lcall
insl
aas
xor
testl
and
sti
sub
scas
ret
push
aam
sahf
pop
jb
aas
push
adc
repz
in
enter
outsb
or
int
sub
test
sub
stos
sbb
and
jg
ja
loope
ss
xchg
cmp
iret
adc
clc
push
outsl
adc
aaa
cmpsl
lahf
push
and
imul
push
cmp
adc
sub
and
loop
lods
mov
std
movsb
pminub
lret
mov
testl
daa
das
hlt
jnp
clc
xchg
in
push
mov
push
outsl
mov
or
jmp
cs
jl
in
int
lea
lahf
fstp
pop
daa
cs
mov
pushl
jmp
outsl
sahf
stc
sbb
mov
push
addb
pop
lcall
lret
js
rclb
in
mov
in
xor
pop
insl
bound
mov
push
int3
gs
sbb
dec
fcmovbe
mov
xchg
jae
subb
inc
adc
cld
and
mov
or
outsl
lock
dec
inc
and
push
dec
nop
add
push
fstps
or
in
cltd
adc
in
sub
push
xchg
andb
fwait
inc
rolb
dec
add
ss
clc
pop
loopne
sbb
andb
add
dec
xchg
add
ja
repnz
cmpsl
mov
out
loopne
add
inc
out
cmp
and
add
repnz
inc
dec
xor
pop
add
in
negb
push
xchg
sub
dec
dec
ja
sbb
add
stos
mov
pusha
sbb
je
adcl
dec
jmp
cmc
or
mov
outsl
repz
xor
jb
outsl
lea
mov
xlat
lcall
and
inc
cmp
pop
pop
mov
ja
test
or
and
insl
push
pop
mov
xor
ret
jno
pushf
cltd
adc
lcall
ret
sbb
xlat
ret
inc
mov
dec
scas
aam
jae
push
pop
mov
scas
cmpsb
jbe
sub
es
push
push
cmp
fstpt
mov
sub
js
movsb
sub
pushf
xchg
add
leave
stos
scas
popf
rcrb
xlat
ljmp
dec
bound
mov
push
and
fs
sbb
sub
sub
popa
jns
cmpl
rorl
jne
xchg
cmp
push
fwait
rolb
pop
rorl
pop
mov
mov
sub
or
lock
push
fcompl
push
cli
cwtl
push
or
cmp
sub
push
inc
push
pusha
jbe
cmp
jae
aaa
cs
into
push
xchg
stos
dec
jb
jge
sbb
loope
in
out
je
or
lret
sbb
in
hlt
jl
sub
adc
test
push
xor
jbe
aas
popf
jl
add
pop
cmp
adc
ftst
ret
loope
iret
popf
int
pop
mov
notl
cs
lret
jno
in
inc
jmp
sub
pop
into
xchg
sub
mov
sbb
lret
mov
arpl
sbb
add
dec
and
mov
outsb
aaa
adc
and
push
xchg
stos
bound
test
xor
sbb
mov
inc
mov
adc
lock
insl
lcall
add
pop
ljmp
xor
sbb
and
fcoms
pmaxub
roll
lret
xchg
xchg
pop
ret
and
lret
jns
fdivs
jno
aas
loop
cmc
xchg
cltd
or
push
andl
jle
sub
shlb
or
mov
mov
dec
fisubrs
dec
jbe
mov
xor
mov
movsl
ficoml
rol
mov
xor
sbb
sbb
sbbb
fwait
iret
jb
mov
out
roll
xchg
mov
mov
sub
and
test
mov
leave
fdivrs
pop
cwtl
pop
mov
and
pop
popf
dec
outsb
xor
mov
dec
mov
jbe
and
and
xchg
enter
or
shl
adc
iret
pop
sti
mov
pusha
pop
jge
or
fcoms
jl
push
in
andb
and
or
or
mov
std
lahf
inc
sbb
sbb
ds
movsb
cmp
jl
mov
rol
out
mov
cs
lock
xor
sub
mov
xchg
hlt
cmp
and
cld
mov
lcall
xor
fimuls
xchg
sub
mov
jmp
in
dec
out
adc
jecxz
in
and
js
cltd
pop
addr16
fdivrl
xor
aam
mov
push
mov
insl
sub
int
je
mov
jl
mov
ffree
xchg
sbb
mov
jne
xor
cwtl
dec
fidivrs
stc
sub
fstp
in
std
push
daa
fsubrs
cmpsl
cs
mov
outsb
scas
stos
push
stos
xchg
dec
pop
sbb
xchg
cmpsl
mov
mov
dec
xchg
in
sub
xchg
add
inc
stc
cld
cmp
mov
pop
push
pop
stos
xchg
or
subl
es
sub
scas
daa
push
fsubr
loopne
in
int
inc
push
mov
cmp
orl
ret
fistl
adc
mov
fwait
pop
dec
je
hlt
aaa
pusha
jnp
cmp
int
xchg
mov
icebp
pop
push
notb
jmp
sub
and
das
mov
sarl
adc
filds
cmp
inc
adc
push
or
mov
int
jmp
pop
lahf
lahf
pushf
mov
pop
sbb
jl
lds
mov
insb
pusha
ja
pop
cmp
dec
fnstsw
addl
data16
xor
out
dec
and
push
sti
adc
xchg
xor
fyl2xp1
push
adc
in
iret
insb
dec
inc
mov
mull
dec
cli
cs
adc
or
lret
test
cmp
frndint
cmpl
inc
and
das
imul
cmpsl
into
mov
and
add
pop
imul
jge
neg
int
mov
std
pop
rcrb
ljmp
test
jp
xor
call
aad
mov
decb
cmp
and
sbb
imul
mov
fwait
and
mov
leave
pushf
sub
dec
add
movsl
push
add
fstpt
data16
cltd
loopne
cmp
pop
outsb
push
call
push
fs
out
aad
push
pop
leave
jb
push
hlt
jl
js
jnp
outsb
loopne
dec
jl
jl
adc
cmpl
cmc
dec
pop
das
xchg
enter
popf
insl
mov
imul
int3
mov
fcompl
aam
pop
inc
aas
shrb
mov
xchg
jne
add
jno
mov
lds
mov
sbb
stos
pop
mov
outsb
mov
ja
dec
ret
int
lret
add
inc
hlt
push
adc
or
cmp
bnd
fdivr
xchg
jmp
xchg
ljmp
imul
imul
fadds
sbb
roll
scas
and
enter
mov
mov
mov
cmp
jne
pop
push
xchg
jnp
fcmovbe
insb
loope
cld
lds
sub
sarb
mov
mov
jl
mov
in
or
mov
mov
iret
js
jbe
cmp
loope
xchg
add
orl
mov
push
sahf
cli
cmc
leave
enter
add
add
xchg
or
ja
mov
mov
filds
mov
sub
int3
rol
scas
dec
mov
cmp
out
cmp
inc
sbb
in
add
bound
add
hlt
test
call
hlt
arpl
mov
lods
or
in
push
addr16
mov
dec
dec
jmp
aaa
pop
pop
repnz
and
mov
push
int
outsb
js
js
mov
sbb
sbb
xor
loope
test
pop
cli
xchg
push
sbb
bound
ror
mov
addr16
sbb
jbe
mov
aaa
cmpsl
mov
int
inc
mov
pop
xchg
inc
negb
mov
mov
xchg
mov
pop
movsl
sbb
cmpsb
mov
shrl
not
js
movsb
inc
rolb
mov
cmp
mov
adc
mov
xor
fsubr
pusha
dec
pusha
push
xor
je
push
aaa
jge
iret
mov
add
mov
inc
inc
addr16
scas
mov
scas
call
mov
mov
sbb
mov
subl
fwait
push
fidivl
rolb
or
jmp
lds
adc
mov
mov
aad
lds
lahf
pop
shl
mov
movsb
fidivrl
mov
dec
cmp
xchg
stos
dec
das
mov
sarl
filds
adc
rolb
popa
jle
cmp
cwtl
push
mov
xor
test
or
push
movsb
cmp
inc
add
xchg
xchg
push
fwait
dec
repnz
daa
mov
lds
aaa
mov
sub
test
or
or
lret
lret
sahf
rclb
sahf
mov
inc
mov
in
das
cli
xor
gs
in
inc
orl
enter
stos
jge
dec
into
mov
outsl
cmp
orb
sub
aaa
mov
or
mov
pop
sahf
adc
or
das
shll
mov
pusha
xchg
mov
loop
gs
mov
testl
loope
mov
dec
jnp
or
add
fucomp
adc
cld
nop
stos
mov
or
pop
loope
push
mov
mov
or
movb
lock
lds
mov
loop
xor
enter
aaa
mov
mov
adc
popa
mov
gs
push
adc
out
test
pushf
add
sbb
pop
mov
aad
and
stos
push
ss
pop
cli
insb
outsl
divl
jae
and
inc
sub
xchg
ds
repz
pop
jae
sub
mov
inc
ret
cltd
adc
sub
push
mov
or
cs
xorb
ja
insb
mov
cmc
xchg
sub
xchg
or
sub
scas
es
addb
mulb
jae,pn
in
or
fs
sub
push
insl
jp
es
mov
incl
mov
cmc
sbb
cmp
mov
sub
jl
js
dec
insb
test
mov
std
loop
mov
inc
scas
ds
adc
pusha
je
bound
sub
loope
mov
or
call
add
mov
mov
or
push
pop
test
scas
cmpsl
dec
scas
add
cmp
aas
mov
mov
mov
mov
aaa
sbb
add
fsts
jne
jmp
push
sbb
inc
stos
or
jg
movsb
and
dec
push
js
negl
addl
pushf
lock
add
mov
hlt
xor
mov
cld
inc
mov
test
mull
jg
dec
mov
stos
or
cwtl
sub
jecxz
push
jno
lret
sub
xchg
aad
mov
cs
mov
lods
mov
into
fcompl
dec
ret
aas
and
outsl
pop
xchg
inc
pop
ljmp
push
add
leave
icebp
aam
adc
stc
lret
repz
mov
pop
mov
mov
inc
leave
stos
push
test
xchg
out
hlt
shr
repz
sub
mov
lock
dec
cmp
int
pop
adc
jmp
cltd
jbe
test
popf
hlt
or
arpl
add
addr16
pop
pop
push
lahf
pusha
cs
mov
xchg
mov
stos
in
add
xor
loop
aas
or
test
repz
icebp
jne
bsf
mov
inc
rolb
pop
xor
in
sbb
cmpsb
mov
dec
shll
scas
je
call
mov
jl,pt
or
into
shrl
cmp
mov
cmp
xchg
push
lods
movsl
jo
pusha
xchg
sbb
shll
ja
into
or
pop
jl
fisttpl
dec
inc
lahf
pop
inc
out
pop
jb
mov
int
mov
cmc
push
fmulp
push
jecxz
xor
out
cmp
jae
iret
mov
jns
push
clc
iret
xor
mov
mov
sbb
ror
cmp
in
cwtl
loopne
addr16
out
sti
clc
jns
push
bound
in
jl
mov
jae
and
inc
sbb
jmp
insl
ja
arpl
popf
mov
xlat
iret
scas
xchg
dec
pop
xlat
dec
outsb
jl,pn
xchg
adc
push
lret
mov
push
pushf
xor
ljmp
les
scas
fldl
in
adc
lods
pop
jbe
pop
in
or
pop
fbstp
push
xor
lock
bound
push
aas
out
inc
adc
scas
loop
lcall
cld
xor
js
pusha
push
sbb
push
out
mov
jbe
lods
or
leave
js
lea
jge
sub
bound
aaa
in
int3
insb
ret
add
add
push
mov
stos
cmp
jns
in
aad
sbb
xchg
cld
sub
enter
add
sub
mov
scas
add
inc
daa
or
insl
repz
sub
mov
cwtl
sbbl
outsl
rolb
cmpsl
sti
or
lret
ret
sbbl
sub
or
lret
test
adc
stos
clc
xchg
xchg
sub
insl
add
imul
outsb
xor
imul
jne
cld
in
jbe
jg
mov
aad
jb
push
shll
xor
outsb
pop
aad
outsl
and
out
into
sbb
mov
inc
iret
inc
cltd
cmpsb
xor
pop
mov
in
xchg
cmpsb
ja
lret
hlt
daa
mov
mov
jne
fisttps
mov
outsb
xorb
movsl
xor
notl
arpl
ret
stc
cmp
clc
adc
sub
pusha
push
stc
mov
in
je
stos
out
js
lret
fildl
inc
add
scas
add
jle
ss
adc
sbb
movsb
hlt
rcrl
mov
shr
mov
adc
add
das
dec
add
test
mov
push
cmp
add
aas
test
mov
mov
cmpsb
ret
int3
out
inc
shl
mov
pop
sub
mov
fldt
fisttpll
je
idiv
out
out
jb
xchg
into
loopne
cld
das
jg
pop
inc
push
dec
push
or
and
and
and
lds
sub
dec
fcoml
pop
fists
pop
push
int3
and
lock
loope
mov
rclb
lret
stos
xor
and
shrb
cmp
and
pop
insl
mov
sbb
inc
dec
dec
sbb
adc
xor
mov
popf
adc
add
sub
xchg
sti
sahf
daa
shlb
sub
push
test
xlat
gs
mov
int3
adc
pop
int
or
aam
lds
or
pusha
or
and
idivl
notb
in
xor
call
xchg
lds
cmp
push
pop
pop
flds
in
aad
jle
or
mov
add
imul
inc
xchg
push
repnz
jge
or
je
pop
cmp
sbb
or
bound
addr16
xor
push
dec
hlt
mov
std
dec
stos
or
push
int3
out
xchg
stos
iret
mov
jne
les
or
jae
and
lcall
jle
jno
mov
cmpsl
inc
or
cmp
mov
lcall
sub
ficomps
dec
xchg
mov
xorl
popf
mov
sub
scas
ds
mov
aaa
cmp
int3
scas
pop
jne
push
in
imul
inc
rcrb
jle
inc
mov
push
add
ss
mov
lret
orl
inc
cltd
mov
xor
aaa
lds
cmpsl
negl
enter
jl
dec
push
pushf
loopne
mov
inc
daa
mov
fistl
jbe
fildll
ss
nop
xchg
mov
xchg
and
add
mov
inc
scas
daa
insl
push
popf
popa
and
jmp
out
or
sti
or
into
and
add
jo
pusha
jle
nop
xchg
xchg
cmpsl
mov
jbe
add
sub
jl
mov
xor
or
or
mov
enter
mov
decl
imul
jnp
cli
scas
cwtl
fstpl
dec
xor
dec
aad
roll
mov
pusha
sbb
das
adc
push
inc
insl
aad
arpl
push
mov
out
add
lods
xor
mov
loop
pop
fidivl
fnstcw
hlt
mov
andl
mov
sub
fs
fidivl
roll
cmp
insb
ja
fisttps
int
adc
iret
pusha
ss
mov
fidivrl
adc
pop
adc
jb
mov
movsl
sub
cli
int3
leave
xchg
pop
xlat
inc
pop
inc
imul
into
jo
mov
pop
adc
mov
add
icebp
xchg
dec
stos
aam
pusha
int3
mov
sti
sarb
push
cltd
lcall
jl
pop
sub
insl
stc
sbbb
push
cmp
cmp
push
pop
sbb
pextrw
lret
mov
cltd
cmc
jbe
adc
pop
xchg
filds
pop
add
pusha
jo
mov
jbe
fs
mov
sti
out
sbb
xor
jae
cmp
pushf
scas
movsl
mov
popa
mov
mov
push
lret
adc
push
push
outsb
xor
xchg
inc
push
mov
dec
aas
ss
imul
jo
or
jp
sub
lock
adc
icebp
addr16
xchg
fdivrs
arpl
lret
push
jl
jnp
test
add
jg
nop
push
cmp
push
mov
mov
sahf
adc
out
sub
and
sub
and
xchg
aad
movsb
pop
aas
test
fadds
add
lea
mov
push
aas
lods
add
push
add
ss
dec
test
cmp
pop
cmp
cmpsb
fst
jo
mov
clc
movsl
mov
aaa
test
sbb
lods
into
icebp
sbb
mov
mov
sbbb
adc
xchg
lcall
xchg
out
dec
je
push
mov
inc
add
xor
daa
xor
mov
push
pop
aas
add
jge
push
and
sbb
js
pop
xchg
adc
fcoml
out
xlat
sub
jnp
xor
cmp
mov
cmp
lods
xorb
pop
inc
scas
lods
dec
cwtl
in
mov
mov
or
jg
orw
bound
ret
xorl
xor
pop
ja
add
jl
pop
jmp
in
mov
je
pop
add
shlb
mov
int
pusha
dec
ret
push
mov
mov
les
sub
enter
stc
jnp
outsl
push
push
mov
jae
cmp
push
pop
pusha
mov
inc
jae
int
push
std
sahf
xchg
xchg
test
push
mov
and
in
sbb
sub
stc
pop
cmpsb
mov
ja
or
mov
fwait
mov
or
jecxz
loopne
stos
insb
pusha
xlat
ss
lret
mov
or
sub
mov
inc
call
hlt
test
pop
repnz
rcrb
scas
push
data16
sbb
cmp
and
scas
push
sbb
add
orps
and
jnp
jecxz
lcall
inc
sbb
gs
lret
inc
mov
out
add
mov
pusha
shr
repnz
jns
inc
jmp
push
pop
hlt
sbb
sub
rcrl
enter
lcall
adc
and
nop
mov
lret
out
xor
adc
in
call
or
bound
xor
fmuls
inc
mov
pop
inc
mov
and
inc
pop
sti
mov
lahf
add
aaa
cmp
lea
insb
sbbb
int
shll
bound
call
pop
cmc
iret
pop
shll
fucom
ss
xchg
push
sbb
stos
mov
sti
jmp
dec
pop
jns
xchg
sbb
mov
pop
mov
or
xchg
stos
hlt
imul
leave
mov
sub
push
insl
rcl
add
clc
mov
cmp
xchg
mov
loopne
test
inc
xchg
dec
ljmp
lret
dec
dec
subb
sbb
cmp
call
lds
mov
arpl
mov
sarb
imul
mov
sub
std
aad
mov
cs
mov
xchg
repnz
dec
push
rcll
test
loopne
repnz
icebp
add
mov
dec
imul
and
jb
mov
aaa
ret
fnstenv
cld
or
jno
cltd
mov
filds
dec
lcall
mov
sahf
push
mov
add
sbb
cmp
ret
jbe
inc
cmc
xor
push
lock
sbb
bound
inc
nop
jl
gs
mov
hlt
pusha
add
mov
ret
movsb
jmp
pusha
inc
enter
lock
inc
jge
leave
fistpl
cli
cmp
call
xchg
fstpt
mov
jns
mov
lcall
dec
adc
xchg
mov
inc
pop
jne
fs
outsl
addr16
out
ret
lock
shlb
or
add
adc
iret
popa
cmpsb
xor
sbb
cmp
frstor
call
sub
pop
fwait
hlt
int
scas
add
xchg
les
ss
xchg
lock
cld
mov
sbb
xor
xor
lahf
xlat
bound
cmp
pusha
lock
xor
out
shrl
ds
push
test
jl
aas
or
imul
pavgw
xlat
aas
clc
mov
in
inc
dec
subl
add
dec
test
add
fucomip
jmp
adc
push
je
inc
mov
lea
add
clc
pop
pop
sub
mov
and
mov
xchg
scas
and
sbb
jne
ja
mov
lret
imulb
push
adc
test
push
cmc
ss
sub
push
sbb
and
shll
stc
or
adc
or
jnp
scas
dec
jb
pop
lea
jo
add
decb
fwait
cld
or
pusha
adc
int
repz
fwait
mov
cwtl
daa
test
xor
insl
xor
jne
xchg
mov
xor
cltd
inc
mov
xchg
fisubs
or
push
push
cltd
xor
mov
adc
cmp
inc
fs
sbb
stos
cmpsb
repz
in
sbb
mov
mov
js
cld
inc
das
mov
std
jp
js
adc
xchg
test
adc
mov
push
cmpsl
data16
sub
sbb
into
add
xchg
dec
cmp
sbb
lds
pop
mov
and
or
out
popf
inc
shll
push
xchg
in
ds
test
popf
movsl
ljmp
pop
adc
push
addr16
outsb
in
adc
and
adc
cmpsl
lds
pop
xlat
insb
sub
pop
shrb
push
ljmp
lret
cmp
stos
sbb
mov
imul
sbb
pop
aad
pop
jns
rclb
lods
jg
push
aaa
or
pop
stos
xchg
aas
mov
in
mov
sub
xchg
sub
pop
cmp
mov
xchg
lea
pop
dec
cmc
jg
arpl
pop
xor
negb
iret
cmp
adc
adc
lret
ret
or
outsl
jecxz
mov
test
push
jo
inc
shlb
outsb
cld
and
and
out
lret
xlat
push
fstl
clc
mov
cltd
xchg
adc
into
test
mov
add
repnz
push
int
mov
and
pop
jg
loopne
sub
inc
sbb
test
push
jg
fmull
ret
mov
and
adc
mov
std
cmpsl
pop
cli
push
sbb
cmpsb
idiv
push
popf
cmp
movl
loope
mov
out
je
xor
scas
xchg
cmpsl
mov
mov
loopne
adc
and
mov
inc
or
into
adc
jb
imul
orb
push
xor
or
push
add
and
fnop
or
fsubp
mov
fcomps
fwait
sub
push
and
sbb
je
mov
subl
xchg
xchg
inc
add
aas
call
popa
in
fistpll
stc
push
hlt
add
push
jecxz
aad
inc
jns
xchg
mov
mov
cmc
fstpt
mov
push
xchg
xchg
daa
scas
aas
ja
lret
xchg
sbb
mov
lahf
dec
mov
cmp
sbb
mov
fcmovnbe
jge
mov
andl
in
mov
fistl
bnd
cmp
mov
insl
xchg
push
xor
adc
ds
jl
in
int3
add
sbb
xchg
sbb
ss
and
push
cltd
dec
xchg
push
insb
fdivrl
and
dec
popf
dec
lret
xchg
add
fcoms
lret
dec
clc
je
sub
fstps
dec
cmp
vpsrld
or
mov
lock
std
or
inc
fcompl
rcrl
or
sub
lock
mov
clc
rcll
mov
out
cmp
xchg
iret
gs
movsb
popf
orl
imul
dec
in
xlat
xchg
cli
mov
xchg
mov
lock
pop
mov
out
push
in
ds
push
test
outsb
in
mov
aas
push
pop
nop
mov
ss
mov
in
imul
jo
mov
fsubs
stos
lods
dec
sbb
lods
stc
and
imul
ficomps
clc
movsb
outsl
cmp
pop
mov
cmc
mov
pop
xchg
ds
sub
shll
sub
mov
cmpl
dec
xchg
xor
adc
add
test
test
mov
cli
cmp
es
enter
pusha
jnp
test
push
lret
lock
test
lods
mov
xchg
ret
dec
mov
xchg
mov
test
sub
aas
mov
xchg
int
push
xchg
mov
mov
dec
xchg
out
xorl
pop
popf
test
mov
in
or
or
xchg
cmp
insb
es
hlt
outsl
ds
pushf
jecxz
xor
shll
in
popa
sub
sbb
dec
xchg
push
and
pop
xor
loope
xchg
jle
bound
dec
mov
pop
arpl
mov
mov
mov
pop
mov
nop
mov
aaa
jo
sub
fisubrl
jle
into
adc
fnstenv
and
lcall
adc
movsl
xlat
js
push
shr
into
mov
insb
jb,pt
push
mull
cli
cmpsl
cmc
xor
xlat
test
scas
popl
les
add
add
pop
inc
xor
sahf
loopne
jns
inc
xchg
or
adc
loop
mov
and
jo
popa
and
jecxz
jle
repnz
inc
inc
enter
loope
movsl
out
xor
push
cmp
psubsb
inc
les
ja
icebp
call
rclb
sub
add
adc
xor
adc
fs
mov
adc
fs
sub
popf
scas
in
pushf
imul
or
aad
dec
inc
jae
jb
push
outsl
mov
sbb
push
add
jno
fwait
mov
daa
in
aad
adc
out
outsl
rcr
xchg
pop
xor
out
sbb
jmp
shrb
lods
les
dec
sub
out
fmuls
cwtl
outsb
mov
enter
shll
mov
out
jecxz
mov
jg
out
sbb
mov
pop
cld
cwtl
jo
lods
lods
shlb
jns
add
loope
and
das
xorl
icebp
xchg
xchg
dec
mov
xor
jns
ljmp
and
mov
call
icebp
mov
xchg
pop
lret
sbb
pop
xchg
push
or
inc
shlb
dec
lret
sub
fs
jne
push
add
push
mov
xor
pop
mov
push
cmpb
and
jle
je
cmp
sar
cs
mov
sub
fdivp
xchg
lret
ror
pop
xchg
sub
cmp
ret
fldcw
pop
test
add
cmc
push
mov
push
mov
gs
sbb
inc
outsb
push
negl
and
inc
rorl
aam
bound
push
or
inc
dec
and
mov
int
xlat
call
xor
or
and
ret
ja
jne
fdiv
fwait
sahf
call
mov
sbb
push
hlt
cwtl
test
or
iret
mov
jmp
xor
pop
ja
and
test
aam
cwtl
push
ja
shll
jl
xor
in
rcrb
xor
icebp
jg
into
pusha
arpl
jg
popf
push
dec
sarl
loope
mov
test
add
push
mov
xlat
sbb
sbb
rcrb
xchg
xor
fisttpll
cld
pop
fistps
decb
ret
adc
into
dec
ret
mov
flds
xor
ja
pop
inc
mov
pop
or
lods
add
mov
jp
jns
inc
inc
sub
pop
sub
push
arpl
pop
pop
ss
fdivrs
data16
push
mulb
xchg
ss
add
add
push
and
mov
or
push
push
or
push
clc
leave
andb
dec
dec
fidivl
cmp
or
lcall
add
data16
mov
call
add
test
mov
mov
loope
repz
jne
out
mov
insl
out
adc
cmp
xor
roll
fcmovb
push
iret
pop
and
xchg
sbb
loop
in
push
cli
fsts
jl
loope
xchg
mov
ljmp
leave
jno
gs
add
mov
icebp
mov
mov
pusha
cltd
add
fimull
repnz
out
dec
push
rclb
daa
push
pop
lret
add
push
lods
pop
xlat
dec
mov
or
sub
xchg
lds
xor
xor
in
js
ljmp
imull
inc
or
mov
sahf
push
push
add
es
add
and
fidivrl
fimull
dec
mov
sub
push
inc
popf
loopne
scas
les
push
cmp
mov
adc
pop
mov
call
scas
mov
js
fcoms
push
jbe
out
sti
push
inc
outsb
enter
sti
pop
sti
lret
inc
adc
jge
dec
pop
es
fcom
pop
xchg
sub
xchg
jnp
daa
add
sti
and
adc
push
adc
adc
scas
pop
mov
jbe
icebp
push
cmp
push
cmp
fadds
movl
mov
sub
inc
inc
fbld
lahf
outsb
jo
ljmp
sub
add
aam
sub
stc
sarb
jg
scas
mov
mov
les
push
mov
sbb
mov
subb
or
xchg
jmp
in
mov
mov
push
subl
int3
aas
fsts
adc
adc
mov
and
dec
int3
int
into
pop
push
test
rorb
int
sahf
jmp
leave
into
mov
push
mov
sub
int
add
fs
gs
sub
and
mov
lods
dec
out
movsl
xchg
xor
xor
daa
imul
imul
insl
jo
scas
aas
fisubrs
pop
ret
iret
inc
or
pop
adc
movl
pop
mov
jno
rorw
push
mov
mov
pop
pop
sub
mov
sbb
pusha
and
inc
push
shr
jb
cs
mov
in
inc
out
testl
je
dec
int3
sbb
sub
add
jno
insl
add
mov
push
jnp
gs
fimull
in
xchg
sbb
adc
jl
scas
mov
lods
imul
test
aad
xchg
push
sbb
cmp
inc
lock
in
mov
daa
les
loop
bound
sti
and
sbb
fcmove
lcall
fwait
jmp
repnz
inc
icebp
cld
cmp
pop
cmp
adc
sarb
sbb
inc
imul
outsl
cli
cmc
data16
aam
mov
push
out
pop
jecxz
pop
dec
cli
cmp
stos
rcrb
push
loop
clc
push
push
mov
sub
fcmovnu
pusha
xlat
adc
pop
mov
ret
sahf
movups
fdivr
xor
sub
ds
ljmp
push
sub
cltd
adcb
shlb
sub
add
out
push
call
arpl
leave
inc
inc
cwtl
mov
arpl
push
std
fistl
ja
mov
sub
and
cwtl
icebp
test
jo
and
call
sbb
xchg
sub
inc
jmp
jne
stos
dec
add
popa
into
mov
ja
out
xlat
aam
push
or
push
or
add
nop
pop
sub
push
pop
jecxz
insl
pop
fs
pop
pop
aas
aad
ret
mov
test
sub
clc
es
adc
push
inc
ds
shrb
mov
mov
inc
xchg
ss
mov
int
inc
mov
stos
pop
idivb
sbb
pop
push
sub
and
lcall
or
jne
testl
add
ret
bound
sub
mov
cmpsl
sub
inc
dec
std
aas
dec
pop
ljmp
sbb
mov
lods
rorb
je
dec
dec
xchg
js
cld
jmp
adc
mov
loop
mov
adc
repnz
or
cmpsl
leave
cmc
mov
into
push
mov
sbb
or
push
imul
je
mov
sbb
xchg
addr16
test
pop
push
adc
xchg
pop
mov
xchg
sub
js
in
push
mov
jl
je
in
and
aam
lcall
sub
or
inc
xchg
and
pop
lret
cmp
cli
leave
insb
jp
imul
negl
jns
test
lea
sub
cwtl
xor
and
mov
lret
cmp
lcall
pop
cli
imul
into
mov
popf
pop
add
push
outsl
out
iret
jl
int
ret
mov
enter
xlat
addr16
push
cmp
dec
test
push
and
xor
mov
jp
mov
repnz
mov
xor
arpl
inc
cmp
lock
mov
or
mov
std
cs
int3
fimuls
adc
jnp
push
out
rorl
push
mov
jne
cmpsl
repz
fisttpl
add
jecxz
cmp
push
dec
or
fsubs
mov
subl
inc
mov
push
push
mov
cmc
sbb
or
cmp
pop
pop
sbb
cmp
push
rcrb
jmp
out
mov
mov
push
fs
mov
repnz
cmp
xchg
mov
jecxz
push
add
movl
or
xor
insb
enter
neg
cli
mov
scas
mov
sub
cmc
xor
jae
fldcw
cmp
push
pop
in
push
cvtps2pi
push
stos
jb
push
push
and
lock
sbb
push
fistps
mov
int
mov
nop
mov
adc
xor
loop
out
mov
xchg
addr16
mov
sub
jg
xchg
jnp
mov
inc
sub
dec
adcl
add
rolb
cmp
push
stc
mov
test
movsb
adc
int
sbb
cmp
cmp
jge
gs
lahf
push
lret
pusha
and
add
or
or
hlt
sbb
jnp
test
outsl
adc
mov
adc
lret
or
stc
push
jmp
iret
sbb
loopne
jmp
cld
sbb
jl
adc
push
cmpl
adc
sub
outsl
cmpsb
movsl
lock
out
scas
push
cmp
iret
mov
mov
test
pop
ret
xchg
xchg
pop
mov
daa
call
xchg
imul
mov
popf
sbb
clc
stos
dec
lods
data16
or
jg
add
mov
mov
jge
mov
jl
jge
mov
fdivr
mov
xchg
dec
movb
decl
ficomps
mulb
movsl
sahf
test
cwtl
dec
lock
sub
xor
cmp
xchg
xchg
or
jno
subps
lret
jb
test
or
rorl
int3
jmp
mov
inc
push
mov
push
jecxz
push
in
sub
mov
scas
lock
stos
dec
add
pop
dec
cmp
hlt
lret
sbb
xor
push
xchg
mov
ds
cmp
sbb
push
int3
into
mov
mov
or
add
sbb
scas
inc
push
in
sub
loopne
jl
and
mov
mov
dec
pop
add
push
jb
mov
lret
jmp
xor
ss
sub
pop
or
mov
mov
mov
jnp
pusha
cwtl
lcall
adc
adc
fs
inc
sbb
inc
add
jbe
xor
rolb
cs
and
repz
icebp
cli
add
xor
into
mov
stc
add
arpl
fucomp
mov
mov
inc
push
shlb
rorb
pushf
insl
sub
pop
fcmovb
adc
dec
pop
in
or
ret
ret
stc
mov
ljmp
data16
xchg
adc
in
mov
loop
js
scas
dec
data16
mov
xchg
push
je
inc
movsl
push
adc
scas
lods
leave
insl
sbb
sbb
mov
ja
jb
or
mov
ljmp
and
pop
out
mov
sbb
mov
sarl
sbb
add
gs
xchg
adc
in
fnstsw
fwait
lahf
fdivr
iret
jo
jge
xchg
shr
hlt
cli
xchg
fld
and
dec
stos
bound
push
jl
sbb
mov
pop
aad
and
xchg
push
lcall
cmpsl
adc
cltd
stc
les
loop
mov
repz
sub
adc
mov
mov
mov
mov
mov
adc
int3
pop
aas
inc
cs
sub
jp
in
pusha
jnp
jl
loopne
out
aas
ret
test
or
inc
fadds
push
pop
fmul
pop
dec
push
mov
movsb
rcrl
insb
fdivrl
mov
jmp
out
ja
xorb
pop
dec
repnz
sub
fs
push
in
leave
mov
xor
out
add
sub
sti
ret
or
xchg
xor
andb
push
outsl
xlat
add
add
aaa
sub
outsl
fwait
lret
lahf
andb
sub
std
sbb
je
inc
leave
iret
gs
fcoml
mov
inc
pop
or
test
dec
push
ja
cmp
scas
loop
fiaddl
lret
inc
popa
imul
push
xor
dec
adc
jae
mov
loopne
mov
mov
lret
sbb
lret
push
mov
sub
aas
mov
push
mov
pusha
pop
sbb
sbb
mov
push
xchg
out
cltd
sbb
jl
lods
sub
fwait
push
rorl
pop
in
inc
pop
outsl
dec
lahf
jb
xchg
push
cmp
dec
dec
gs
mov
mov
movsb
ret
icebp
pusha
shlb
jne
pop
lcall
add
inc
sub
jne
pop
xchg
iret
and
push
inc
adc
or
push
scas
pop
arpl
div
mov
sarb
cltd
roll
mov
or
inc
ret
shlb
test
add
repz
sbb
mov
ret
adc
jae
shll
jbe
mov
inc
add
jl
sub
jge
in
pop
rol
cmpl
fisttpll
in
sbb
mov
adc
mov
std
arpl
repz
adc
mov
fstp
mov
push
jge
fisttpll
cs
cltd
mov
es
add
movmskps
adc
lea
xor
adc
aad
aad
cmpsb
shlb
lock
lcall
in
sbb
fimuls
pop
jne
fdivrl
sbb
cmp
dec
sub
ss
jno
stc
dec
adc
icebp
stc
push
mov
mov
mov
add
repnz
sub
shrl
push
jne
repz
pop
inc
pop
cwtl
call
dec
test
mov
xor
out
xor
jb
ja
mov
es
movsl
mov
push
icebp
jno
imul
divb
inc
out
mov
inc
mov
out
das
mov
test
hlt
xor
dec
repz
stos
dec
dec
mov
xorb
adc
outsl
xor
fmull
sub
lcall
jl
or
call
fs
push
stc
test
mov
mov
inc
inc
js
sub
mov
xchg
and
imul
xchg
or
add
jnp
push
push
xchg
jmp
jg
mov
ds
les
push
and
inc
stos
mov
stos
jno
dec
mov
mov
or
inc
hlt
int
scas
push
xchg
cmp
xor
inc
dec
lods
mov
stos
aam
enter
inc
lcall
mov
std
mov
jecxz
subl
fs
lahf
add
aad
jge
xor
xchg
into
jle
jb
stos
fs
cs
push
jb
inc
lret
push
cmp
or
mov
ret
je
popf
popf
call
mov
test
cmp
iret
sub
mov
lock
sbb
ret
jmp
xchg
push
inc
lret
jl
cld
in
sbb
loopne
push
sbb
mov
jne
pushf
or
in
stc
fistl
and
hlt
sub
mov
repz
mov
jmp
sub
dec
stos
cs
mov
negb
daa
ror
inc
add
das
sbb
and
fwait
pop
loopne
sub
add
jg
push
mov
lret
sub
pop
cmp
fsubs
pusha
add
xchg
or
mov
subb
fsubrl
daa
ja
sub
inc
fmul
enter
adc
fcomi
xor
out
movsl
shll
aaa
lock
and
sbb
inc
cli
dec
and
std
xchg
fisubl
xor
mov
cmp
xchg
xlat
mov
xchg
icebp
and
shlb
leave
or
rorl
jno
je
daa
rcll
cmc
push
fcom
jle
fnstcw
fucomp
or
xor
test
cmpsl
push
cltd
sbb
pop
lahf
shrb
mov
int3
and
pop
sbb
pop
mov
xor
sbbb
lret
pop
mov
fildll
loopne
cmp
and
int
sbb
out
in
inc
loopne
and
mull
mov
push
pop
loop
cld
mov
mov
mov
mov
jns
enter
jnp
xchg
xchg
xchg
sbb
sbb
sahf
sbb
mov
adc
pusha
addl
inc
lahf
push
add
orb
addr16
jbe
pop
adc
sub
xor
mull
mov
xor
notb
or
int3
out
js
or
in
dec
addr16
in
inc
into
sub
bound
test
xor
outsl
call
cmp
or
lcall
lret
mov
cwtl
fists
fimuls
or
pusha
push
repnz
mov
test
mov
xor
outsl
ds
shll
data16
mov
jl
mov
pop
les
jbe
fadds
scas
mov
imul
fwait
stc
in
xorb
push
les
lods
and
fimuls
nop
jnp
inc
add
and
sti
dec
inc
add
mov
xchg
popf
imul
sbbb
push
jae
pop
sub
add
sahf
lahf
mov
mov
add
pop
pop
mov
add
test
bound
pop
jne
inc
cmpsl
pop
add
js
cmp
xchg
fimuls
insb
loopne
dec
cmp
jp
nop
push
sbb
mov
push
lods
add
ret
fidivs
pop
or
inc
cmpsl
jne
outsl
lds
jle
pusha
xchg
fidivs
insb
or
insl
test
xchg
insb
mov
xchg
inc
sbb
cmp
mov
loope
jne
imul
enter
push
pusha
xchg
imul
pop
cmp
or
pop
or
adc
in
fwait
cmc
ficoml
loop
inc
cmp
jns
les
addr16
imul
cmp
cmc
pusha
fwait
lods
pop
push
imul
mov
or
mull
ret
push
arpl
add
sub
movsl
dec
dec
lret
invd
test
insl
mov
adc
movsb
add
fstp
mov
add
inc
scas
sti
xor
les
mov
fnstenv
or
mov
arpl
adc
push
inc
and
mov
mov
inc
inc
sub
xchg
inc
pop
ja
in
push
push
or
or
inc
sbb
popf
cmp
movsl
push
inc
sbb
lret
xchg
loopne
cmp
xor
dec
pusha
cmp
outsb
jne
push
lock
jecxz
arpl
push
mov
sahf
or
xchg
sahf
adc
xor
lock
inc
fldenv
cltd
jmp
add
inc
sbb
jne
inc
pop
pop
xchg
push
repnz
outsb
mov
stos
dec
dec
pop
sbb
dec
std
xor
cld
scas
jl
fsubl
jo
and
shl
mov
xor
mov
dec
mov
mov
int
xor
xchg
call
lea
mov
icebp
sbbb
std
jne
mov
icebp
addl
xlat
scas
xchg
frstor
cmp
pop
in
test
enter
aas
pop
sti
outsl
and
inc
enter
add
stos
stos
add
out
les
xchg
ret
push
loopne
jne
ljmp
repnz
mov
les
or
mov
leave
rol
push
je
push
mov
mov
pop
fwait
adc
std
outsl
mov
ss
addr16
cs
push
xchg
lret
push
sub
fistpl
in
jmp
jmp
out
pusha
push
cmp
pop
movsl
cmp
or
shr
fstps
scas
push
sbb
sbb
adc
das
sbb
imulb
xorb
sub
mov
dec
lds
cs
ficomps
jae
fwait
mov
jne
pop
in
repz
mov
into
dec
sbb
std
adc
lods
jg
xchg
repz
mov
fsubrp
idivb
js
jle
jg
mov
leave
shlb
ja
sub
sbb
fnstsw
or
mov
je
xchg
cmp
xchg
ret
xor
pop
aad
cmp
or
das
dec
fmuls
cmp
jns
aam
pop
lock
xchg
mov
shlb
mov
xor
mov
push
adc
icebp
dec
push
sub
sbb
shr
jecxz
mov
call
sbb
cs
dec
inc
clc
and
xchg
fnstsw
adc
jmp
push
pop
test
sub
inc
or
jle
inc
test
aam
cmc
mov
inc
inc
inc
test
mov
and
and
push
fwait
mov
mov
mov
xor
outsl
ds
mov
jmp
call
cmp
outsl
inc
mov
push
out
sbb
sarb
nop
push
xchg
pop
aaa
addr16
or
inc
movsb
jne
xchg
cmpb
dec
pop
shlb
mov
imul
push
mov
sbb
dec
into
addb
jmp
cmp
frstor
mov
ss
je
shrl
int3
shl
mov
mov
outsb
int3
push
push
add
and
cmpsb
movsl
stos
mov
mov
hlt
fwait
data16
or
mov
inc
test
imul
stc
xchg
scas
adc
adc
jecxz
hlt
cmp
repz
mov
xor
sub
ja
shll
je
mov
aad
mov
es
loop
push
pop
pop
aas
pusha
frstor
mov
aas
mov
std
pop
dec
sub
pop
movsb
push
inc
cmp
ret
mov
call
sahf
test
dec
inc
mov
std
mov
push
cmp
int3
add
sahf
in
out
adc
loopne
pop
mov
enter
jae
dec
fwait
and
je
dec
jbe
push
mov
arpl
xor
dec
js
adc
mov
push
ret
icebp
pushl
lcall
in
xor
cmp
js
js
incl
sbb
jbe
enter
sub
pop
xor
lods
outsb
push
push
mov
jae
retw
add
mov
insb
pop
push
mov
sub
pop
cs
push
cwtl
lea
insb
inc
enter
jb
and
cmp
sub
xchg
dec
fidivl
setg
ret
push
or
in
neg
repnz
pop
insl
pop
sarb
out
nop
sub
mov
push
jg
mov
lods
faddl
push
in
sti
sbb
popf
loop
dec
imul
push
ss
int3
enter
out
jecxz
xor
out
jecxz
fmul
cmp
pop
rclb
or
clc
hlt
mov
push
jg
jbe
cltd
mov
and
not
popf
sbb
xor
lret
out
adc
push
loopne
addr16
push
sbb
xchg
cwtl
das
jg
inc
cmp
push
jmp
fs
add
mov
mov
lods
rcrl
cltd
rol
out
push
or
jo
mov
mov
dec
pop
add
push
cmp
pusha
in
jg
imul
inc
sub
jne
jmp
jmp
cmp
mov
mov
mov
and
mov
cmp
inc
inc
xor
dec
aad
stos
es
inc
inc
cltd
add
xchg
mov
aad
inc
mov
je
jmp
dec
and
add
std
add
jmp
jne
jae
js
dec
mov
dec
sub
jmp
push
push
mov
stc
xchg
hlt
push
fisubrl
pop
fucom
shrb
aaa
test
sbb
xchg
xor
or
push
cmp
shll
mov
and
push
push
out
xlat
or
cld
aam
mov
sbb
lds
in
sub
pop
inc
vunpcklpd
xchg
dec
sub
inc
fwait
and
cwtl
and
call
sbb
mov
fs
jp
int
xchg
adc
ret
push
dec
inc
mov
mov
cli
nop
xor
in
push
call
push
data16
add
add
orl
mov
shrl
adc
ljmp
es
cmpsl
xchg
gs
xchg
xor
shl
mov
popf
lock
dec
pop
out
adc
call
cwtl
adc
repnz
xor
sbbb
movsl
xor
das
jp
xchg
fdivrl
jo
jae
jo
inc
js
sbb
xor
dec
mov
outsb
je
rorb
sub
pop
inc
cmp
aad
jecxz
jle
mov
mov
adc
mov
lret
addr16
cltd
jae
jo
xlat
pusha
fcomi
adc
pop
jle
xchg
subb
out
pandn
xchg
addr16
addr16
mov
jno
dec
add
or
add
iret
xor
and
gs
and
outsb
sbb
scas
dec
dec
cmp
mov
test
jae
pop
movsb
mov
pop
jo
xor
pop
shll
jae
dec
pop
mov
jns
fiadds
add
inc
flds
aas
stos
mov
cmc
daa
mov
jns
adc
js
andl
inc
pop
fcompl
adc
mov
mov
insb
and
prefetch
mov
sub
dec
je
cli
insl
int
shll
pushf
mov
shll
jnp
fstps
and
ss
jne
in
pop
jbe
enter
and
and
jbe
xor
adc
sub
cld
ret
loop,pt
jb
and
gs
pop
sarb
test
clc
or
into
arpl
imul
jbe
mov
rcrl
dec
sarb
cmc
je
cmp
pop
and
jb
cmc
outsb
dec
jle
mov
iret
inc
rolb
fcmovnb
or
shr
inc
pop
imul
push
and
cltd
add
xchg
add
leave
mov
xchg
mov
ficomps
cmc
jmp
mov
jno
aam
je
add
imul
push
popf
mov
push
inc
stos
lcall
pop
dec
or
mov
push
divb
dec
and
loop
pop
jb
ret
and
cmp
sbbb
mov
adc
adc
xchg
and
stos
roll
aam
pop
jns
mov
mov
push
push
out
lods
and
or
into
sub
fcmovnbe
arpl
mov
dec
cmpsb
cmpsl
lods
popf
jecxz
xchg
xorl
mov
or
or
inc
or
gs
pushf
dec
inc
cmp
or
cmpsb
into
scas
fs
stc
inc
dec
cmpsb
jge
add
sbb
sub
stc
enter
test
ja
push
cmp
enter
cmp
xchg
dec
out
xor
into
cwtl
out
sbb
mov
loopne
sub
popa
sahf
and
inc
add
sbb
aam
loop
add
jge
stos
xorb
cmp
and
or
xchg
adc
in
xchg
sbb
lret
xor
jge
mov
and
loope
sub
mov
sbbl
cltd
push
mov
fadd
pop
jbe
inc
loop
in
push
or
pop
ret
pop
out
or
inc
hlt
or
test
loope
mov
imul
outsb
pop
lock
mov
jo
dec
xor
sbb
push
in
pop
sub
mov
fildl
push
xor
dec
jp
cmp
mov
jp
iret
int3
mov
jae
add
das
std
insl
fiaddl
push
in
mov
mov
jl
pop
inc
jno
and
dec
xlat
lods
add
imul
out
out
ds
icebp
push
icebp
stos
inc
inc
adc
not
iret
adc
xor
mov
imul
sahf
dec
rcll
xchg
mov
icebp
stos
jle
addb
cmp
lahf
dec
jecxz
scas
cmp
xchg
pop
out
mov
rorl
add
cmp
mov
and
xchg
and
out
aam
mov
cmpsl
adc
into
cmp
push
clc
in
adc
mov
rcl
aaa
or
out
test
jmp
push
incl
xchg
arpl
sahf
addr16
sub
bound
add
jnp
notl
xchg
push
stos
ret
mov
push
or
mov
and
jp
inc
adc
mov
adc
lock
xchg
out
out
xlat
repnz
dec
or
icebp
insb
mov
fs
cli
roll
clc
scas
sbb
je
testb
ret
xchg
push
dec
enter
sub
popa
ret
int
adc
or
aaa
add
adc
arpl
ret
push
mov
lods
mov
jle
imul
pop
insb
fdivrs
sar
lahf
rcll
push
or
test
cmp
sbb
xchg
jecxz
jbe
jl
fs
sbb
sbb
test
sahf
es
arpl
push
stos
xchg
imul
aas
rcl
cmp
into
jecxz
enter
pop
js
push
add
sub
movsl
in
setne
movsb
pushl
dec
pop
rorb
ljmp
ret
lret
bound
jo
mov
in
or
adc
out
fidivrs
jnp
and
jecxz
jp
sub
fcoms
shlb
scas
push
jns
dec
lahf
enter
pop
in
int
loop
adc
pcmpeqd
xlat
sub
jne
sbb
mov
push
dec
sbb
and
jnp
jecxz
repnz
lods
je
add
mov
push
adc
addb
shrl
mov
fldl
jle
popa
lcall
sub
push
arpl
adc
or
popa
adc
dec
stos
mov
bnd
sub
pinsrw
stos
stc
sub
mull
divl
or
sbb
pop
ror
mov
imul
push
mov
cwtl
mov
lret
dec
lods
repnz
mov
ret
push
aam
cmc
or
stc
lret
outsl
dec
testb
mov
sarl
dec
cmp
test
popa
inc
pushf
inc
lods
sub
aas
push
xchg
sub
hlt
in
orl
jns
or
pusha
dec
pop
repz
push
mov
enter
push
sahf
loope
add
inc
pop
test
sub
inc
sbb
ss
mov
add
mov
movsb
add
and
jecxz
mov
push
adcb
cli
and
gs
scas
mov
and
mov
bnd
das
cmp
push
push
push
push
sub
imul
and
roll
and
stc
push
aaa
add
clc
js,pn
inc
pusha
into
adc
pop
jmp
push
fstl
nop
sahf
or
addr16
or
out
scas
push
jge
test
filds
xchg
xor
pop
add
jae
cmpsb
movsb
lods
jmp
rcrl
int3
cwtl
jne
pop
test
ja
xlat
imul
mov
sbb
stc
cmp
bound
stos
cmpl
nop
movsb
xchg
sub
shlb
jg
es
faddl
outsb
sbb
xchg
mov
jnp
and
imul
add
clc
dec
inc
rorl
ja
fcoms
adc
jno
loop
pushf
testl
dec
jp
jl
stos
call
inc
mov
jae
add
pop
dec
or
or
test
fisubrl
fiadds
sbb
mov
jp
stos
enter
and
hlt
test
cmp
mov
jo
or
aaa
testl
les
mov
jbe
shlb
cs
sahf
std
mov
push
sbb
add
cltd
ret
and
test
mov
outsb
push
or
or
dec
mov
inc
add
jge
fsubrs
mov
dec
push
int
insl
out
into
mov
ret
cmpsl
lret
test
test
push
nop
cmc
inc
pop
outsb
repz
xchg
xor
sub
push
xor
or
sub
pop
push
popf
shr
inc
js
cmp
dec
negl
push
ret
mov
push
mov
test
mov
pop
adc
out
sbb
xchg
cli
fdivr
or
pop
adc
dec
pop
pop
js
rolb
imul
stc
and
mov
push
stos
xor
sti
fldt
div
dec
sbb
lea
push
push
push
dec
push
pop
psubusb
push
rolb
sbb
ffree
out
daa
cmpsl
xor
cltd
loopne
ret
fwait
xor
pop
add
shl
pop
sahf
out
int
aam
xchg
jae
or
xchg
xchg
adc
dec
push
inc
jg
dec
push
sahf
aam
jns
insb
clc
fcomip
and
adc
ret
in
jo
fadd
pop
std
test
sbb
repnz
push
mov
aaa
mov
pushf
pop
mov
subb
pop
pop
fisttps
iret
mov
cs
or
prefetchwt1
xor
shr
imull
gs
fildll
sbb
imul
jne
push
sahf
push
roll
mov
mov
push
scas
xchg
sbb
sbb
xlat
xchg
inc
xchg
push
add
mov
lea
fisttpll
loop
push
insb
cmp
out
clc
jmp
sbb
dec
adc
sub
and
enter
sbb
subl
stos
cmp
mov
cmp
sbb
lea
fstl
sub
lahf
aad
xchg
mov
test
xor
out
cli
in
bound
mov
xchg
mov
mov
xchg
lods
test
mov
inc
fwait
dec
popf
bound
push
orl
mov
out
mov
ljmp
xchg
push
sub
jle
fiaddl
and
int
xchg
mov
addr16
daa
pop
xchg
mov
add
jp
adcb
hlt
xchg
mov
sub
mov
xor
dec
testl
aaa
push
mov
xor
pop
mov
pop
hlt
add
fcmovnu
xchg
test
xchg
mov
xchg
cmp
lds
pop
mov
xor
mov
lahf
mov
xchg
push
insl
js
subl
icebp
or
adc
cld
jg
xor
test
cmpsl
xchg
or
lods
pop
frstor
ret
mov
add
dec
rorl
lods
jge
aad
icebp
mov
lods
loope
cmp
xchg
lea
aam
xchg
shrb
inc
inc
mov
ds
pop
in
js
sub
adc
das
fidivrs
hlt
fs
pop
push
jmp
pop
lcall
sub
or
lcall
sbb
shl
mul
inc
push
roll
sarl
in
in
sti
or
or
mov
xorl
jb
lods
xor
jp
jle
cli
lea
lahf
cld
into
adc
sbb
mov
xchg
inc
negl
mov
imul
loope
jl
and
push
mov
adc
sti
cli
pop
inc
cwtl
lret
bound
ljmp
repz
test
cmpsl
adc
movsb
fcoml
push
dec
push
and
jecxz
cld
push
lret
and
xor
dec
cmpb
filds
inc
sub
adc
test
push
xchg
sbb
mov
lock
ror
inc
cmp
jl
inc
and
popa
andl
lds
subl
push
push
stos
lret
or
pop
xchg
mov
dec
out
scas
pop
adc
neg
pop
push
and
pop
mov
or
clc
mov
adc
cmp
scas
mov
por
je
data16
add
sbb
ficompl
fwait
xchg
xor
ret
sbb
adc
sbb
cmp
mov
sbbl
sbb
rol
addr16
stc
cmp
jg
dec
cmp
mov
maxps
lds
push
inc
shlb
lcall
adc
out
mov
adc
pop
add
outsb
sub
int
add
adc
hlt
cmp
jle
mov
mov
sbb
pop
hlt
xchg
or
cmp
dec
testb
lds
nop
xchg
orb
inc
push
xor
cmp
icebp
sub
or
jge
push
dec
lcall
arpl
add
jecxz
pop
xchg
inc
shl
push
cmc
jmp
cld
mov
and
mov
idiv
mov
mov
add
adc
push
mov
jno
mov
pop
leave
mov
sahf
add
mov
ficomps
cmp
fdivrl
lcall
dec
sbb
xor
mov
rcl
push
sti
pop
adc
add
cwtl
cmpsb
scas
push
mov
push
int3
or
jle
hlt
daa
aad
xchg
scas
das
add
cld
int
add
std
jecxz
inc
inc
dec
dec
es
dec
jl
mov
add
pop
out
imul
ja
testb
mov
xchg
xchg
mov
xchg
adc
loop
add
mov
sbb
test
and
mov
push
add
xor
add
xor
sar
pop
andl
push
or
cmpsl
xor
xor
mov
outsb
in
stc
push
pop
hlt
insl
inc
fwait
jmp
pop
jp
in
jo
pushf
aaa
dec
mov
movsl
lock
jmp
jl
mov
into
loope
xor
nop
cmc
not
adc
or
daa
mov
sbb
pop
add
sbb
adc
jmp
xchg
rcrl
and
orl
ja
sbb
cli
dec
jno
mov
pop
imul
and
xchg
push
jmp
inc
pop
jge
xchg
sbb
inc
xchg
dec
dec
pop
aas
cwtl
stos
sub
roll
mov
in
pop
lret
dec
jmp
push
adc
mov
adcb
lcall
mov
inc
lds
or
pop
and
sahf
cmp
push
pop
xor
andb
jl
daa
xchg
inc
adc
jb
movsb
mov
xchg
inc
jne
mov
negl
shrl
movsb
mov
mov
cmpsl
add
jnp
pop
mov
lods
ror
mov
mov
and
cs
outsl
lea
mov
enter
cmpsl
cmpsl
mov
push
lods
mov
xor
flds
mov
stos
cmp
loopne
idiv
loopne
rcll
insb
pushf
out
arpl
push
iret
jae
and
mov
and
jbe
adc
jmp
push
jge
mov
jg
and
into
sar
sub
jns
inc
mov
sahf
imul
insl
out
cmp
sub
sub
inc
jbe
cmp
xchg
mov
dec
mov
out
sbb
std
imull
jne
xchg
add
sub
push
scas
aam
insl
jecxz
call
pop
jge
jbe
out
xor
push
push
inc
ds
sahf
ljmp
test
push
insb
adc
inc
xor
stos
mov
pop
add
dec
sub
outsl
or
and
mov
mov
or
mov
pop
fldenv
mov
dec
sahf
dec
std
sub
scas
in
and
push
jp
bound
add
push
flds
lods
ret
cwtl
in
sbb
icebp
les
pop
mov
push
insb
fadds
sbb
dec
lods
cwtl
cmpsb
jge
xor
ficoms
shl
mov
in
mov
aad
or
andb
jle
inc
in
iret
push
mov
pop
xor
popa
movsl
int
negb
je
cs
sub
push
outsl
test
xor
mov
in
xchg
jae
sub
lods
xor
leave
mov
sub
cs
les
int3
lods
mov
push
in
xor
es
or
xchg
rcrl
addr16
and
jp
mov
lcall
add
mov
pop
in
xorb
ret
pop
add
sub
push
mov
xor
or
in
clc
jmp
push
and
inc
xor
int
xor
packsswb
in
fistpll
or
inc
push
jns
ss
fwait
je,pt
or
jne
dec
adc
stos
and
jb
inc
test
xchg
mov
out
adc
scas
add
add
aad
into
clc
ja
popl
out
dec
add
cli
add
mov
cmpsb
push
hlt
sbb
ficoml
cmp
xchg
shlb
loope
jbe
jae
jge
loope
jmp
lods
xor
imul
imul
jecxz
fiadds
lret
rorl
push
cmc
pusha
je
sar
lea
les
fldenv
out
scas
mov
push
mov
adc
cmp
mov
lret
cmp
adc
mov
into
std
mov
xor
andb
mov
and
fcompl
xor
clc
cltd
fmull
xchg
scas
xor
mov
icebp
mov
lods
int3
push
sub
adc
mov
jmp
sar
icebp
sbb
jp
mov
in
sub
aad
mov
add
out
loope
push
test
sarl
cmpsb
or
and
mov
aas
frstpm(287
mov
mov
add
lock
lods
dec
test
and
or
mov
cltd
hlt
pop
loope
inc
loopne
les
xchg
loop
cld
mov
aad
out
dec
sbb
scas
pop
push
xchg
loopne
bnd
and
pop
test
shrl
cmp
jge
or
xor
dec
cmpsl
insb
aas
or
mov
enter
outsb
dec
cwtl
push
dec
jle
sahf
rclb
sub
dec
sbb
sub
mov
adc
jge
pushf
jbe
or
shr
cld
sub
fstpl
mov
movsb
adc
mov
push
push
lds
lcall
cmp
cli
cmpb
shrl
repz
mov
idivb
add
movsl
repz
popa
adc
shlb
cwtl
test
xor
sbb
push
cmp
pop
in
mov
cmp
pop
mov
test
in
adc
mov
out
mov
aaa
adc
sbb
pop
push
sti
mov
dec
lods
push
insb
popf
aaa
scas
xor
push
fdivrl
aad
and
nop
cmp
incb
mov
mov
insl
mov
or
movsl
adc
or
pop
mov
insb
lcall
xchg
adc
sub
sbb
mov
xchg
icebp
adc
fmul
out
enter
mov
add
fcmovne
pushf
cwtl
inc
dec
mov
outsb
mov
iret
cld
push
add
lret
test
ljmp
push
stc
scas
xchg
bnd
and
outsb
bound
jnp
mov
lcall
testl
xor
xchg
icebp
loope
pop
rorb
mov
jae
loope
and
cmp
cvtps2pd
dec
pop
out
adcl
ss
fdivr
and
int
inc
fwait
test
mov
push
sub
mov
pusha
push
jo
leave
push
icebp
cltd
xor
jb
add
cmp
inc
xchg
xchg
push
psubd
push
rcrb
out
push
sub
icebp
dec
add
gs
fiadds
or
cld
or
inc
out
and
jmp
dec
add
dec
mov
or
jns
xchg
sbb
lret
cmpsb
jae
xor
or
cmpb
cmpsb
push
push
lea
xchg
lods
addr16
rcrl
gs
xchg
ret
mov
and
test
ror
scas
loope
fdivrl
add
lea
push
into
cmc
test
pop
in
mov
mov
jl
mov
jle
stos
ret
stc
stos
jp
dec
addl
idivb
push
and
imul
push
and
out
test
sub
xchg
xchg
fwait
inc
push
jle
addr16
out
in
sub
popf
adc
jb
fsubs
cmp
ret
mov
mov
fdivr
test
xor
out
sub
sti
fsts
sub
mov
int
adc
xor
sub
loopne
in
push
lods
mov
and
mov
js
cwtl
outsl
mov
jg
in
data16
cmp
repz
jbe
adc
and
outsl
scas
imul
cwtl
out
inc
jg
xchg
test
negb
sbb
inc
and
mov
push
or
xchg
cmp
int3
adc
sbb
dec
adc
push
mov
stc
leave
mov
int3
and
cmp
jnp
mov
add
js
or
enter
cmp
dec
sub
shll
xor
sbb
xchg
xor
dec
jns
push
mov
mov
push
sarb
mov
mov
ds
xor
ss
sbb
aam
in
adc
pushf
dec
lods
cmp
sti
inc
in
je
xchg
aaa
push
aaa
push
inc
xchg
jge
test
pop
jo
mov
pop
iret
imul
test
adc
jo
rorb
and
xor
gs
jge
jbe
repz
cmc
sub
add
loop
jo
sahf
pop
inc
jbe
jp
cmp
les
pushf
iret
or
test
aam
mov
lds
sbb
rclb
shll
xchg
lods
mov
outsl
push
scas
daa
fisubrs
out
call
dec
add
jae
loope
xchg
outsb
adc
sub
call
mov
js
in
int
jnp
leave
push
jge
mov
jo
adc
pop
nop
push
insb
enter
mov
pop
mov
ljmp
leave
push
loop
sub
cli
xchg
scas
inc
add
jp
mov
dec
cli
adc
or
adc
adc
mov
mov
mov
std
xchg
xchg
cmpsb
jmp
sbb
inc
idiv
add
movsb
fidivl
out
mov
ljmp
leave
pop
cmpsb
arpl
rorb
add
add
adc
ret
gs
jnp
push
dec
cmc
data16
call
jbe
jp
adc
insb
pop
xchg
ds
js
xchg
imul
cmp
cmc
mov
and
cld
sbb
data16
xor
ret
push
loopne
inc
shll
xchg
insb
and
xor
mov
pop
inc
mov
mov
jns
pop
mov
and
push
ss
lret
mov
les
inc
sub
push
sbb
imul
lods
lret
bound
sbbl
xchg
out
imull
mov
xchg
pop
push
sub
jns
rcrb
push
fnstsw
adc
repz
inc
ljmp
lds
adc
outsb
dec
add
call
pop
add
mov
loop
add
mov
stos
test
mov
xchg
int3
fwait
mov
push
ljmp
inc
or
adc
fisttpl
popf
or
sbb
cli
pop
fldl
loopne
mov
leave
loope
loop
push
adc
sahf
jmp
fwait
in
adc
or
rorb
fnsave
sub
or
push
out
dec
scas
pushf
pop
loopne
sub
push
gs
lcall
or
xchg
out
adc
enter
sarb
cmp
loop
sub
leave
cmpsl
add
addr16
dec
cmp
mov
xor
dec
inc
daa
add
mov
fisttpl
mov
pop
cltd
inc
shlb
pusha
fwait
or
inc
sti
or
push
jne
pop
cmp
rorb
aaa
inc
sahf
or
xchg
out
aas
add
adc
imul
and
cmp
lea
imul
push
pop
xor
mov
insl
roll
arpl
js
or
dec
mov
sbb
mov
inc
xchg
inc
push
add
repnz
lcall
out
ss
jo
lahf
ss
lcall
sub
popa
add
addr16
jge
imul
loopne
mov
mov
nop
fcmovnu
push
dec
fisubrs
push
cs
add
filds
call
add
xor
rcrb
xchg
rcrb
adc
les
xor
insl
cmp
daa
xor
mov
mov
jbe
loop
xchg
or
nop
lds
xor
cmp
jae
sbb
sbb
fdivs
mov
jge
shrb
pop
fdivl
ja
sbbb
arpl
std
fs
sub
xchg
cmp
out
push
pop
xor
popf
mov
or
lods
and
and
fs
pop
test
push
dec
lods
push
or
mov
data16
inc
nop
sbb
cmc
sub
outsb
rcll
xchg
mov
cltd
es
cld
leave
enter
cmp
out
sbb
dec
dec
or
test
cli
xchg
jae
and
jnp
fwait
fwait
test
xchg
loopne
push
jae
push
push
sarl
js
and
andb
lret
pop
icebp
and
popf
push
adc
pushf
repnz
add
xor
stos
dec
sbb
addl
subl
sti
out
in
xchg
fsubrl
lcall
dec
add
sub
leave
mov
push
cmpl
popa
cs
and
cmp
xor
ljmp
sbb
and
mov
xchg
jl
incb
dec
es
push
pop
xor
push
push
mov
inc
pop
push
push
push
hlt
js
cmp
loope
fcomps
or
xor
sub
loopne
int3
pushf
sub
push
xchg
clc
mov
xchg
loopne
push
imul
cmp
stos
lea
mov
out
into
jne
mov
xchg
mov
mov
aas
dec
lahf
lret
int3
rcll
sbbl
lret
add
setg
add
test
lret
cli
mov
mov
mov
cmp
or
fdivs
pop
clc
mov
and
cmp
mov
aam
cmp
aam
sahf
and
xchg
shll
pop
sbb
in
into
xlat
stos
je
cmp
sbb
or
cmp
push
cltd
sbb
lods
cmovs
inc
fs
mov
xchg
mov
enter
mov
or
sahf
int3
adc
inc
push
repz
imul
loope
sub
mov
loop
sub
inc
and
test
sahf
dec
mov
xor
imul
pop
sbb
stc
test
subl
aad
fmuls
imulb
out
fdivr
stc
xor
imull
jnp
bound
and
cmp
call
inc
jle
mov
popf
or
rol
or
push
cli
iret
pusha
cmp
xlat
dec
mov
mov
fldt
cmc
pop
mov
aam
testl
pop
pop
std
adc
out
inc
icebp
xchg
xchg
bound
cmp
xchg
sub
dec
xchg
dec
in
movsb
xor
xchg
lods
add
es
out
pop
xchg
scas
xchg
sbbl
shrl
lods
xchg
xchg
sahf
loope
pop
mov
pop
add
pusha
xchg
fisubs
mov
test
xchg
test
sbb
call
movsl
or
mov
andb
adc
cltd
popf
ret
mov
cmp
adc
mov
rclb
testb
fidivrs
jle
and
mov
push
dec
xchg
loop
push
sarl
loope
loope
stc
mov
add
mov
test
pop
and
lock
cmpsb
mov
lods
aas
fstpt
scas
sbb
lods
icebp
jp
or
xchg
inc
push
loopne
int
out
int
sub
aam
sbb
pop
lcall
das
push
subl
dec
mov
sub
xor
jmp
sbb
xchg
test
ds
rcrl
mov
pop
out
add
pop
inc
xchg
xor
rolb
in
push
pop
or
adc
ret
clc
das
loop
in
test
xchg
jl
adc
add
ret
or
mov
inc
or
sbb
stc
add
push
les
shr
orl
jl
inc
cmp
mov
xlat
xor
test
jmp
jo
mov
fdivrl
clc
pop
xor
inc
stos
hlt
out
sub
xor
out
cmp
pushf
rorl
lret
mov
lea
add
jge
dec
sub
pop
jecxz
rsqrtps
xchg
push
mov
les
mov
cmp
mov
or
jl
cmp
push
rorb
pop
fwait
pop
daa
fimuls
pop
mov
sub
test
imul
pop
popa
aad
adc
pop
xor
push
jmp
push
xor
jnp
scas
xor
sub
int
push
or
xchg
cmp
mov
jno
xchg
ja
mov
and
dec
jle
jmp
push
mov
lret
mov
out
dec
iretw
pop
ljmp
sbb
xchg
push
xchg
jmp
pop
sub
pop
push
cs
add
sub
adc
adc
sbb
jae
imul
outsb
fbld
dec
xor
jge
jl
cmpsb
stos
cld
test
push
mov
inc
fsts
sarb
xor
lea
rcl
aam
gs
icebp
push
xchg
rcll
pusha
push
or
fnstcw
xor
dec
or
mov
fs
outsl
or
dec
jno
mov
lret
jnp
sub
jle
mov
mov
cmc
add
lahf
inc
rcrw
popl
stc
hlt
movsl
sbb
repnz
orb
out
cmp
dec
mov
mov
je
push
jmp
mov
cmp
sarb
push
inc
lret
ud1
data16
out
scas
inc
or
stos
out
pop
jle
gs
xchg
mov
mov
sub
adc
pop
in
jmp
mov
addr16
sub
test
inc
lea
mov
sub
push
or
in
xchg
jmp
shrl
push
xor
push
rcll
sub
cmp
jae
in
sub
inc
ror
and
outsb
push
add
sti
hlt
mov
sti
out
xchg
push
sub
add
push
jae
shll
sub
jl
out
es
cmc
test
add
es
out
mov
mov
out
jbe
sbb
mov
daa
dec
jbe
rcrl
es
mov
lahf
sub
adc
mov
mov
xchg
jp
jl
fcoml
loop
cmp
sbb
fwait
mov
cmc
xchg
in
pop
dec
outsl
sub
call
in
leave
dec
cmpsl
mov
idivl
pusha
xor
and
cmp
and
xchg
jns
or
dec
mov
sbb
sub
clc
pusha
sbb
movsl
cmpsl
bound
int3
mov
aad
push
xor
mov
inc
jle
orl
loop
adc
cmp
jno
pop
mov
sub
mov
jnp
jns
xor
add
dec
cmp
xor
mov
mov
int3
test
fwait
pop
and
loop
fwait
lret
pop
mov
xor
out
in
or
lds
ret
cmp
sub
sub
mov
or
xchg
and
cmp
je
adc
xlat
aam
popa
add
scas
imul
inc
mov
scas
outsb
rorl
mov
adc
mov
xor
repnz
sbb
shrl
popa
or
add
loopne
push
arpl
sub
cmp
and
adc
mov
pop
mov
xor
mov
jbe
lahf
daa
pcmpgtd
popf
and
lods
xchg
push
lret
adc
js
mov
enter
jl
ja
or
cmp
push
into
cmp
scas
fcomps
dec
outsl
std
add
iret
jg
lahf
in
cs
cltd
inc
js
ss
imul
mov
mov
mov
add
mov
mov
sbb
cmp
clc
popf
test
test
shlb
ljmp
cmp
sahf
add
add
ficomps
sbb
lcall
mov
loop
fcomp
scas
int3
nop
dec
daa
push
out
in
enter
sub
mov
push
sbb
push
lret
stos
or
and
rcl
cmp
popf
dec
iret
andb
push
jns
and
and
push
out
dec
ljmp
dec
dec
pop
mov
les
xor
mov
xchg
nop
femms
sbb
into
mov
movsl
fstl
call
out
inc
inc
or
mov
pop
jno
mov
cmc
sub
pop
test
loopne
or
popa
insb
js
push
or
xchg
stc
add
xchg
cmp
push
mov
or
in
pop
jg
test
push
mov
inc
push
fld
repz
mov
aaa
xchg
mov
pop
pop
sub
jle
or
loope
outsl
jl
cli
mov
bound
mov
xchg
push
cltd
push
mov
outsb
xor
ja
aam
test
pop
sbb
jns
jmp
ja
push
aad
test
mov
cli
add
subb
aas
packuswb
in
inc
or
mov
imul
or
or
shll
lcall
jmp
jl
mov
mov
int3
inc
mov
notb
sbb
movsb
icebp
cmc
push
lds
inc
cwtl
icebp
fadds
je
push
mov
xchg
or
cmc
pop
jmp
montmul
cmpsb
inc
or
pop
aad
ret
fmul
mov
fisttpll
adc
and
pop
sbbl
clc
sub
hlt
aad
dec
mov
lods
jge
push
sub
lcall
cmp
mov
inc
dec
in
aas
mov
or
mov
loop
cmpsb
pop
xchg
inc
rcr
xchg
xchg
cmc
xchg
cmp
orb
add
adcl
cli
in
orb
jecxz
jg
mov
rorl
adc
dec
mov
pop
mov
hlt
xchg
cwtl
sub
jg
dec
pop
add
scas
adc
sub
out
fstl
lods
je
dec
add
add
cmp
or
adc
xor
xor
loope
cltd
push
cmp
xchg
arpl
xchg
xor
jecxz
sub
push
fists
mov
es
pushf
je
sbb
xchg
add
push
std
js
xchg
mov
jnp
push
popa
pushf
les
jno
inc
sbb
and
fisttps
mov
cmp
dec
pop
ficoms
imul
push
sub
push
jge
cmpsb
sub
jecxz
pop
pop
jmp
push
push
shll
lods
dec
ds
mov
cld
or
iret
sbb
push
mov
movsl
or
roll
fiaddl
fisubrl
pop
js
fbld
mov
out
xchg
inc
and
sbb
mov
stc
aam
stos
mov
fidivl
adc
jbe
dec
mov
into
fs
fisttps
pop
or
adc
leave
push
sub
stc
add
popa
sbb
scas
add
std
nop
scas
aas
pop
std
jnp
movsb
dec
gs
add
ljmp
sti
and
pop
pop
xchg
insl
sti
sbb
push
pop
mov
dec
xchg
lods
pcmpgtw
cmpsl
sti
sub
mov
dec
out
insb
mov
add
jecxz
das
xor
jecxz
adc
rcr
aas
jno
scas
xchg
and
cmp
xor
pop
aas
adc
rclb
mov
cld
mov
shll
mov
jle
pushl
test
scas
cmp
push
push
cmp
mov
inc
imul
push
sub
push
push
jg
xor
jge
add
pop
pushf
cmp
xchg
push
mov
roll
push
pop
frstor
int
cmc
inc
popfw
jge
repnz
push
xchg
and
fs
iret
mov
inc
hlt
es
lds
dec
push
or
movsl
outsb
jo
sbb
cli
xchg
mov
fisubs
push
outsl
mov
inc
es
cmp
pop
pop
dec
es
mov
xor
ret
or
xor
mov
out
fcmovu
das
ds
push
cmp
clc
pusha
xlat
mov
call
pop
mov
loop
pusha
daa
mov
cmpsl
add
dec
add
scas
jne
sub
xchg
push
mov
mov
add
ret
lock
mov
jnp
sahf
test
xchg
mov
inc
jae
or
sub
outsl
fstpt
adc
mov
lret
mov
outsl
mov
cmp
addr16
jmp
or
in
cmpsb
mov
or
adc
mov
popa
rorl
dec
push
mov
inc
cld
jae
mov
mov
in
xchg
xchg
ds
and
pop
inc
outsb
lods
sub
mov
push
adc
xor
iret
push
outsb
dec
fdivr
out
icebp
inc
xchg
jmp
xchg
fldt
mov
inc
dec
mov
daa
fwait
lea
pop
daa
pop
inc
inc
xchg
ficomps
mov
out
cmp
sbb
mov
sub
mov
pop
icebp
dec
into
xor
scas
popf
cli
outsl
sbb
ja
mov
mov
fnsave
repnz
xor
sar
fwait
sarb
mov
mov
aad
lods
addr16
or
out
icebp
fcompl
add
aas
daa
mov
add
shl
mov
mov
mov
fs
dec
mov
js
data16
loope
call
loope
aaa
fmulp
pusha
lret
cmc
bound
xchg
loope
add
pop
jae
out
lods
daa
add
pop
inc
push
lcall
enter
pushf
xchg
add
negl
js
es
mov
cli
shlb
mov
int3
jns
mov
sbb
push
add
sbb
sbb
sub
pop
jb
hlt
xchg
cmc
out
fiadds
add
jmp
dec
sub
fsubs
insb
icebp
loope
cmp
hlt
and
das
lret
les
shll
and
push
xlat
adc
and
sub
mov
mov
popa
mov
lea
jg
xchg
jp
jne
pop
std
push
xchg
insl
out
adc
into
dec
xchg
nop
sub
push
int3
inc
xor
inc
test
das
push
int
xchg
pop
push
cmc
mov
test
out
leave
jo
sub
mov
jg
cmp
iret
add
insl
lahf
xor
popa
negb
push
ss
sahf
adc
lods
mov
jo
loopne
xor
and
dec
add
loop
xchg
sbb
dec
lock
jl
lcall
pushl
xchg
mov
aam
daa
iret
xchg
pop
sub
push
popa
stc
mov
sub
add
popaw
cli
mov
xor
adc
adc
outsl
lea
and
call
sbb
insb
jl
fwait
jmp
out
sti
dec
popf
cmp
sbb
movsb
ret
inc
push
and
ljmp
jne
or
rcr
ja
std
adc
mov
loope
or
push
mov
adc
fwait
inc
adc
pop
into
pop
push
pop
test
les
mov
jo
cmp
std
push
cs
lods
imul
enter
or
fisttps
shrl
mov
out
jg
imul
sub
loope
in
add
xor
xchg
xchg
pusha
call
cli
lret
fsubl
push
cmpsb
pop
popf
xchg
jecxz
bound
popa
jns
je
outsl
xchg
lods
cld
jmp
test
xchg
and
sub
pop
daa
add
cmpsl
dec
cmp
in
movsb
mov
fistps
int3
fildl
inc
fmull
sti
int
lods
pop
js
xor
cltd
imul
je
loopne
aad
mov
mull
mov
add
imul
lock
mov
ret
pop
das
push
mov
mov
push
daa
out
add
lea
fadd
fnstenv
sub
push
aas
dec
ds
cld
dec
cli
sbb
or
cld
mov
movb
les
xorb
cld
jae
inc
and
sbb
cmc
mov
or
add
bnd
arpl
add
in
and
inc
subl
or
adc
adcl
mov
shl
lds
mov
ds
imull
mov
jns
jnp
out
pop
jae
imul
popl
adc
push
insl
xchg
push
sahf
lods
sti
pusha
xor
mov
adc
stos
out
outsl
add
aad
loopne
mov
push
out
or
or
adc
push
shll
ret
fisubrs
xor
repnz
dec
mov
mov
ret
dec
xor
or
cmp
push
lret
xlat
jne
into
movsb
sub
les
sahf
pusha
xchg
and
cmp
scas
dec
jb
repnz
loope
fistps
jmp
add
enter
and
es
cli
sub
out
outsb
addr16
roll
lea
push
pop
pop
pop
notl
adcl
add
xor
cmovle
in
les
add
mov
shrb
mov
dec
mov
jle
addr16
pop
xor
add
scas
daa
in
adc
inc
orb
test
movsb
push
or
dec
sahf
adc
jb
mov
mov
scas
push
cwtl
jo
js
pop
sub
pop
nop
inc
and
pop
sub
adc
dec
shr
loop
cmpb
adc
outsl
or
bound
das
add
notb
in
loop
call
sbb
xor
ss
cmpsl
sbb
sub
push
insl
sahf
int3
negl
xchg
arpl
into
pop
in
adc
sub
repz
jbe
stos
test
daa
mov
xchg
fmulp
dec
and
xor
mov
stc
jp
push
mov
int3
in
ss
in
mov
test
cld
jl
and
sbb
shrl
lret
dec
stos
push
leave
dec
stos
ljmp
out
mov
sbbb
adc
ja
pop
pop
cmc
inc
inc
popa
test
dec
or
cmpsb
rorb
aaa
inc
jne
js
xrelease
rorl
mov
push
in
or
cmc
pop
push
fcomps
pop
clc
or
ds
adc
push
adc
or
sarl
inc
pop
cmpsb
adc
push
rclb
mov
and
or
stos
sti
outsb
cmp
mov
out
repz
popa
fbstp
inc
push
jb
repz
rcr
popa
pusha
jge
xor
xchg
fs
and
mov
aas
sti
cmp
mov
push
scas
sti
jge
sbb
repnz
sub
sbb
cli
mov
or
add
lret
jl
out
pop
xchg
or
adc
test
in
gs
mov
ret
mov
inc
fildl
mov
dec
xchg
xchg
add
stos
ljmp
add
sbb
sbb
test
enter
ds
andl
popf
aaa
add
jl
add
repnz
sbb
dec
xchg
mov
int3
cmpsb
enter
adc
or
repz
mov
scas
mov
mov
pushl
dec
fildl
vpshlq
mov
les
bound
mov
xlat
sub
popa
jne
insb
daa
sub
movsl
divl
jbe
cmp
inc
insl
mov
inc
mov
addb
mov
aaa
imul
pop
xor
int
js
cmp
cmp
pop
jmp
out
or
mov
stos
lcall
loope
test
sub
call
pusha
xchg
push
ret
fsubrp
xor
hlt
push
add
lcall
mov
clc
insl
inc
cltd
in
nop
stos
mov
rcll
hlt
aas
loopne
shrl
push
xchg
in
test
je
sub
popa
addr16
mov
jno
das
loop
rorl
and
cs
add
mov
repnz
into
dec
popf
and
imul
xor
inc
push
fs
push
xor
mov
je
inc
jbe
adc
mov
xlat
mov
push
jae
fbld
outsl
loop
sbb
xlat
call
dec
lock
enter
push
jmp
jecxz
xor
pop
sub
dec
adc
mov
leave
data16
pop
sahf
or
mov
cmc
incl
xor
test
frstor
mov
popf
pusha
inc
sahf
in
dec
dec
out
iret
sub
js
jmp
jno
lods
jnp
fdivrs
dec
inc
rorl
out
xchg
sub
shrl
aaa
shrb
xor
lock
idivb
out
or
dec
dec
sbb
jp
push
lea
mull
mov
test
jp
hlt
les
mov
mov
pop
push
pop
mov
xchg
das
call
loope
aad
bound
or
and
and
addr16
fucomi
add
icebp
cmpsl
pop
int
inc
lea
xor
sbb
jnp
xor
jle
ja
or
push
sbb
jl
inc
dec
hlt
stos
icebp
loop
sub
jp
mov
xchg
jbe
int3
or
push
aas
or
inc
jle
fcmovu
idiv
mov
jb
jne
jle
notl
pop
adc
cmc
pusha
ficoml
js,pt
mov
xchg
xor
shrb
pop
cli
aas
jno
push
repnz
sbb
mov
xchg
testl
cmpsl
lock
mov
ja
jb
inc
mov
cmpsl
pop
add
mov
scas
pop
xlat
in
xchg
inc
popf
testl
dec
cwtl
dec
ret
je
push
aad
cmpsb
mov
mov
mov
out
les
mov
jp
pop
push
mov
mov
mov
mov
mov
insb
stos
fisttpl
lea
cld
and
dec
ret
pushf
nop
ljmp
jne
jo
dec
test
popa
mov
jne
popa
sub
mov
in
cmpsl
push
sbb
roll
insb
call
jnp
mul
push
mov
cmc
es
adc
lret
mov
xchg
pop
pop
and
cmp
data16
mov
cs
dec
stos
add
mov
xor
or
inc
lahf
leave
cmp
es
cld
adc
data16
push
inc
push
xor
fidivs
inc
xchg
adc
lods
adc
xor
into
push
mov
pusha
cmp
xlat
jbe
jmp
or
jo
sahf
push
inc
pop
stos
cwtl
stos
mov
jb
sbb
lahf
jle
cwtl
xchg
leave
fs
mov
sbb
rorl
cmc
add
jmp
ja
mov
dec
je,pn
push
cmp
loopne
rorl
das
xchg
xchg
shlb
xchg
sbbl
sbbb
push
lahf
fdivrl
xor
aam
add
lock
xor
push
shrb
mov
cmc
in
or
xchg
push
add
mov
or
dec
cmp
jl
pop
mov
iret
mov
and
mov
lock
mov
ret
pop
pop
icebp
fs
jl
jecxz
and
setae
sub
sub
ss
mov
mov
xchg
repz
out
mov
in
cmc
jg
lock
cmc
shrl
adc
sarb
sbb
mov
xchg
mulps
lcall
test
stos
jnp
add
mov
and
shr
cmpsl
popf
outsl
cmc
jp
xchg
out
gs
loope
jle
loop
xchg
xchg
xor
xor
dec
out
inc
sbb
cli
imul
inc
jns
aaa
and
jg
mov
das
jg
inc
cmpsb
inc
cmp
sbb
add
lds
jo
stc
mov
ret
push
fs
adc
mov
dec
dec
mov
pop
mov
mov
cltd
mov
rorl
scas
xor
shlb
shlb
or
cmp
scas
mov
stc
inc
lahf
int3
cmp
jo
in
adc
inc
xchg
push
pop
pop
xchg
jecxz
add
popf
aad
ficoml
mov
xchg
jo
mov
adc
orb
mov
shlb
test
push
mov
cmp
aaa
and
jae
xor
inc
jno
lret
dec
leave
popf
inc
sbb
xchg
mov
movsl
mov
imul
fimull
xor
inc
lret
adc
mov
mov
flds
mov
add
cmp
icebp
bound
in
movsb
ljmp
or
xorb
lods
fnstcw
mov
mov
addr16
ret
push
push
xchg
test
xor
neg
adc
aad
loope
in
sbb
mov
mov
gs
mov
lea
fiaddl
ret
lret
sbb
mov
aaa
jnp,pn
push
xor
cmc
pop
dec
rorl
mov
push
dec
scas
cmpsl
lea
loopne
mov
push
pop
ljmp
adc
sub
xlat
dec
add
xor
int
xlat
inc
add
dec
arpl
movsl
push
mov
les
mov
std
push
jle
movsl
lcall
or
cmp
fldcw
lahf
es
lahf
test
fsubrl
mov
shlb
nop
sub
push
dec
scas
adc
cmp
dec
in
inc
imul
and
fcmove
aad
pop
mov
test
int3
inc
outsl
dec
popa
into
in
inc
push
add
test
jbe
xchg
int
and
ja
enter
mov
fwait
mov
mov
daa
mov
lea
push
imul
sub
fiadds
cld
ret
xor
and
dec
mov
negl
add
mov
mov
clc
xor
cmpsl
fs
mov
or
int3
jle
nop
insb
jle
jmp
inc
cmp
cmp
mov
cwtl
fcompl
jle
add
push
inc
fdiv
jmp
mov
lahf
adc
adc
jno
and
fadds
jmp
scas
sbb
push
or
xor
loopne
jg
outsl
std
bound
sub
push
push
jge
in
clc
sti
mov
mov
mov
dec
jne
lret
jne
enter
xchg
bound
loope
adc
div
es
lcall
orl
cmpsl
repnz
mov
cwtl
ljmp
cmp
mov
add
insl
mov
ja
pop
jno
mov
jp
filds
xchg
mov
inc
mov
sbb
push
jle
loop
push
test
outsb
jne
add
adc
loopne
nop
jae
xchg
into
xor
ja
je
cmp
insl
out
jl
test
insb
mov
nop
out
sbb
push
pop
sub
and
scas
inc
fdiv
push
iret
aam
mov
jne
lcall
mov
push
or
ret
inc
mov
mov
in
cmp
jecxz
xor
scas
std
orb
mov
hlt
xchg
scas
mov
xlat
pop
mov
pop
lods
lahf
inc
sub
ffreep
shr
jb
dec
xor
loope
outsb
scas
aaa
or
jns
jp
xchg
xchg
fwait
aas
data16
mov
cld
adc
flds
outsl
rcrb
pop
aad
loopne
aam
jge
inc
mov
and
sub
jo
rclb
jnp
lods
push
cmpsb
sti
shrl
loopne
scas
xchg
pop
sub
add
in
add
fs
cld
hlt
idiv
pop
inc
push
jp
sbbb
mov
in
xor
mov
mov
inc
rclb
movb
mov
pop
pop
pop
into
sahf
jns
add
adc
jns
out
cmp
fnsave
stc
xchg
decb
in
ret
fdiv
jmp
stos
add
push
adc
ret
jnp
mov
mov
or
sub
add
mov
or
ds
xchg
jno
test
dec
add
pusha
aad
xchg
jge
inc
lcall
push
in
xchg
jmp
dec
mov
mov
dec
cmp
mov
mov
or
sub
xlat
fsub
lods
jnp
inc
fnstcw
dec
rclb
cmpsl
xor
push
pop
pop
test
lcall
insl
add
xchg
fmul
imul
mov
jg
or
and
sub
pop
jns
dec
sar
mov
sbb
test
mov
xchg
das
rorb
mov
inc
sbb
pop
dec
ds
mov
cmp
jp
lahf
pop
add
hlt
sbb
mov
icebp
std
stc
inc
adc
adc
jb
xor
fsubrl
mov
fdivp
js
sti
daa
add
repnz
int
rorb
cld
jno
mov
pop
scas
mov
testb
scas
mov
idivb
push
insl
xor
dec
int3
dec
dec
cmp
jnp
add
ljmp
sbb
call
mov
and
adc
xlat
dec
test
outsl
mov
icebp
xlat
jle
xchg
mov
adc
and
out
push
xor
pop
xchg
repz
or
sub
fcompl
or
in
ret
xor
mov
sahf
arpl
loopne
fucomip
add
pop
sbb
sar
pop
sete
dec
clc
fsts
fiaddl
call
ficoms
jge
cmp
fcompl
cmp
in
loop
sub
mov
loopne
loopne
add
test
lods
cmp
out
fidivs
cmp
add
push
push
xor
cmp
daa
cli
inc
aaa
in
aaa
push
add
cmp
and
dec
or
loopne
dec
prefetcht1
sub
scas
jb
bound
pop
outsl
xor
jg
jnp
es
repz
mov
dec
inc
cmp
and
jbe
dec
jnp
or
xchg
sub
push
sbb
push
fidivrs
cld
lods
sub
sbb
test
xchg
enter
lock
push
addr16
aad
std
stc
repz
lcall
push
or
xchg
jmp
xchg
in
lock
out
ja
jl
addr16
inc
fs
cwtl
xlat
rorl
jecxz
push
loop
aaa
pop
shll
inc
cmp
mov
sbb
xchg
add
test
out
cmp
fstp
inc
pop
andb
popf
push
icebp
or
and
test
dec
hlt
mov
ljmp
out
movsb
leave
cmc
insb
add
push
ficoml
lea
jnp
xchg
push
pop
mov
add
pop
mov
push
pop
fwait
ljmp
mov
dec
mov
xor
mov
jo
mov
ss
iret
xchg
nop
push
inc
dec
sbbl
xchg
sahf
jecxz
std
faddl
dec
fidivs
xor
add
inc
mov
inc
pop
pop
hlt
pop
mov
sahf
cmp
pop
xchg
sbb
out
mov
mov
jnp
sbb
sub
cmp
jp
or
push
stos
movsb
mov
adc
inc
loop
ds
dec
push
push
jno
xchg
adc
inc
push
call
xchg
sbb
dec
sub
sbb
mov
loop
fcmovnb
hlt
sbb
xchg
std
pop
sub
jne
test
loop
sbb
or
mov
test
jne
into
mov
hlt
loopne
test
mov
jg
outsb
mov
sub
hlt
enter
xchg
lahf
and
shll
add
and
call
popa
cmp
cltd
stos
lods
or
ficoms
icebp
arpl
pop
adc
pop
jno
pop
popf
add
scas
test
jne
les
mov
jae
divb
test
sbb
jnp
or
cli
test
inc
rcrb
gs
out
adc
js
call
xchg
xchg
in
sahf
sub
pop
or
xor
pop
inc
scas
inc
dec
sbb
mov
push
jne
lock
jno
pop
test
add
push
aad
test
out
std
or
mov
push
cmp
pop
pop
xor
lds
bound
insb
in
adc
outsl
popa
test
mov
ljmp
mov
adc
sbb
push
int3
mov
fcmovnbe
mov
xchg
addr16
icebp
enter
jb
mov
pop
adc
stc
hlt
and
add
loopne
xchg
cld
nop
sub
fidivl
inc
mov
mov
push
lods
xor
lret
cmpsb
outsb
iret
xchg
or
add
mov
fiaddl
mov
lcall
lret
pusha
mov
dec
xchg
into
test
jmp
mov
imul
push
pop
lahf
mov
push
getsec
dec
pop
pop
movsl
cmc
orl
sahf
outsl
jne
jns
sbb
cwtl
inc
stos
sub
notl
push
das
scas
das
mov
je
and
call
mov
jno
and
dec
cmpb
mov
jno
mov
cmp
push
notl
cmp
lock
lret
and
mov
aam
and
or
jmp
pop
ljmp
mov
jnp
loop
and
mov
ret
insl
mov
inc
popa
lret
iret
add
dec
les
je
repnz
pop
ljmp
mov
mov
popa
add
jbe
repnz
cwtl
mov
test
dec
jl
xor
sbb
in
daa
jne
add
arpl
adcb
inc
xchg
loop
mov
cmc
inc
ret
sub
iret
das
inc
rcl
mov
mov
cmp
or
gs
xor
in
or
and
xor
pop
pop
cmp
adc
mov
fistl
add
iret
inc
mov
imul
mov
test
lea
jl
or
adc
nop
or
adc
adc
dec
das
jl
movsl
xchg
jmp
jge
pop
mov
sbbl
jno
add
mov
insl
mov
imul
mov
sarb
xchg
lret
ljmp
sti
lods
mov
cmp
std
sub
clc
mov
mov
ja
mov
sub
dec
adc
lea
int
cmpb
or
ret
stc
and
verr
fcomps
push
daa
lock
fistps
icebp
dec
ficoms
adc
sbb
pusha
bound
mov
mov
aad
incb
jmp
add
pop
and
cli
adc
outsb
dec
pop
or
sub
inc
push
jns
mov
push
insl
mov
syscall
roll
aas
insb
or
es
pop
loopne
test
sbb
fisubl
xchg
das
loope
lock
std
pushf
inc
mov
cwtl
ret
mov
jns
fcompl
push
fs
push
test
push
test
mov
inc
jo
test
mov
outsl
dec
loop
movl
dec
in
jne
lods
cmc
adc
cmp
jae
xor
ljmp
cwtl
jle
mov
push
test
loop
jl
inc
movsb
lret
jae
mov
or
mov
jmp
adc
addr16
jle
outsb
imul
sub
mov
ss
out
dec
lret
popa
gs
ss
into
jne
mov
mov
sub
outsl
xor
fisubs
fwait
xor
xorb
adc
xor
jno
mov
out
pop
and
pop
cmp
cmp
out
mov
and
dec
mov
repnz
cmp
jns
addr16
jecxz
and
push
dec
add
sub
ss
push
adc
jg
cmc
xor
mov
xor
call
jp
pop
xor
test
mov
aad
ds
lds
lock
mov
adc
adc
jl
lods
mov
fsubr
aad
loop
dec
inc
sub
and
inc
shrb
lcall
sub
sbb
mov
xor
out
pop
addr16
jbe
pop
shrl
jno
cs
popf
mov
sbb
popa
jecxz
jecxz
fstl
popa
aad
insb
jle
bound
loop
pop
out
aas
xchg
cmpsb
mov
xchg
inc
sti
xor
push
xchg
jg
les
stc
fwait
adc
das
aam
loopne
ret
sbb
loope
mov
rol
mov
xor
fiaddl
xchg
adc
push
int
xchg
fstl
mov
lds
out
or
add
popf
xchg
inc
xor
jae
popf
sbb
addr16
or
or
movsl
adc
or
push
rol
pop
sub
fimull
fs
fdivp
cmpsb
shl
jnp
mov
ljmp
or
aaa
sub
fisubrs
xor
and
mov
xor
int3
sbb
rcrb
fs
cs
push
jae
aad
xor
jns
dec
stos
js
push
sub
ds
mov
pop
loop
fcom
sub
pushf
aam
inc
mov
push
push
lahf
aam
in
push
jnp
mov
push
hlt
inc
adcl
mov
ss
jmp
cmpsl
in
scas
mov
xor
xor
lods
mov
xor
and
in
int3
and
pop
bnd
outsl
sahf
hlt
pop
adc
push
les
xor
cltd
lret
and
sub
inc
movsb
daa
xor
dec
loope
icebp
push
push
clc
push
gs
lret
data16
sub
fwait
push
dec
adc
lock
pop
adc
stc
cmpsb
dec
int
mov
mov
sub
dec
mov
xlat
xchg
and
popf
arpl
call
push
mov
mov
jns
xchg
mov
inc
in
rcr
mov
adcb
mov
les
fildl
add
fdivrl
mov
fdiv
and
pop
or
pop
or
cmp
jmp
push
lret
movsl
in
pop
adc
pop
jb
icebp
test
inc
pop
hlt
push
pusha
mov
xor
dec
mov
xchg
or
or
lods
push
inc
push
xchg
add
incl
cld
jnp
aaa
jae
or
in
stos
loope
aaa
push
cmpsb
lock
adc
popa
cltd
clc
pop
xor
xchg
fists
inc
inc
std
das
adc
movsl
adc
push
adc
out
movb
mov
repnz
lods
inc
imull
daa
sub
popf
push
aaa
test
in
imulb
loope
mov
mov
outsl
flds
cmp
jne
push
cmp
dec
out
fiaddl
notb
xchg
cli
in
out
into
sbbl
shlb
sbb
pop
js
adc
xchg
outsb
adc
imul
sbb
sbb
and
add
pushf
adc
mov
push
sub
test
pop
inc
pop
out
jo
das
jp
or
jp
or
bound
fisttps
jg
jecxz
sub
sub
adc
imul
je
sub
xchg
or
jmp
jecxz
das
xor
sub
fwait
insl
pop
push
fstl
xchg
push
jo
push
pop
add
repnz
pop
icebp
pop
jge
xlat
cmc
clc
lahf
fwait
pop
fsubl
pop
cmp
pop
jno
inc
push
mov
rcll
mov
mov
std
xchg
and
mov
fpatan
lret
stos
or
into
cmpsl
xor
cmp
mov
pop
or
lds
push
sti
loop
scas
xlat
xchg
or
mov
xor
mov
lea
dec
mulb
fcom
addl
mov
popl
imul
cmp
dec
cli
test
mov
sub
jb
leave
mov
test
jbe
cltd
xchg
push
lods
sahf
sub
aad
pusha
mov
jecxz
mov
fldenv
ss
or
mov
or
test
push
int3
stos
dec
inc
ret
popa
loope
mov
and
imul
lret
mov
shrb
test
xchg
jmp
adc
outsb
out
xchg
add
cli
lret
fdivr
sub
roll
imul
fisttpl
mov
popf
and
jno
jo
pop
cwtl
sub
jbe
xchg
lds
insb
jns
bound
popa
add
movsb
mov
clc
mov
insl
dec
aad
notl
insb
cmp
fmull
xchg
adc
scas
rol
pop
mov
adc
and
fisttpl
out
shlb
pop
lock
mov
fs
push
add
cld
andl
data16
in
sub
cmp
push
movl
add
sar
cs
mov
jl
shll
push
cmpsl
clc
mov
cmc
mov
mov
stos
cld
push
lods
imul
sahf
dec
jmp
testb
popf
pop
jle
mov
push
dec
xchg
push
pop
outsb
lods
lods
out
pop
add
sub
mov
inc
add
dec
dec
cmp
add
cmpsb
sbb
jnp
inc
or
adc
xchg
pop
aaa
loopne
arpl
jae
and
and
imul
adcl
inc
movsl
sub
fstpl
push
push
add
xor
cmp
lcall
jge
in
inc
pop
push
push
mov
push
lret
lods
sub
lret
push
push
cmp
bound
xchg
popf
movsb
imul
mov
popf
repnz
jge
inc
lods
std
aad
ss
push
mov
push
scas
jge
adc
adc
mov
push
jb
cmpl
inc
gs
sub
lods
add
mov
shll
xchg
mov
jp
test
mov
pop
mov
jo
out
and
dec
sarl
or
lea
stc
and
adc
loop
cmp
popa
push
aam
pop
cmpsl
push
fs
inc
add
sub
inc
sbb
scas
aam
xchg
bound
stos
push
lods
cmp
push
xchg
jp
int
jno
and
dec
std
fiadds
fnstsw
iret
iret
repz
ss
cmpb
mov
pop
jl
scas
inc
mov
stos
aas
jg
xor
jnp
mov
push
xchg
stos
adc
imul
movsb
xchg
and
add
sbb
icebp
daa
push
in
shrb
adc
adc
aad
push
xchg
xor
sbb
test
mov
lds
aaa
xor
iret
sub
adc
ja
pop
jmp
xchg
sub
mov
loopne
and
jno
push
in
cmp
jecxz
sbb
add
mov
inc
pop
adc
pop
lods
aam
in
lods
arpl
mov
xor
daa
adc
shlb
loope
bound
mov
sbb
cltd
psllq
cwtl
mov
out
xor
dec
xchg
inc
jo
push
outsl
mov
icebp
sub
cmp
pop
xor
adc
inc
cwtl
fmul
hlt
lock
pusha
repnz
add
insb
mov
mov
inc
insl
sbb
push
dec
add
out
ret
or
lret
cltd
push
fildll
sbb
inc
popa
lea
repnz
pop
pop
and
push
adc
sahf
ss
xchg
outsb
xchg
push
or
dec
loopne
decl
rolb
dec
sbb
data16
push
ljmp
mov
mov
jbe
lahf
adc
or
lods
dec
in
inc
push
or
sub
pop
mov
push
arpl
bound
mov
enter
in
mov
js
jb
sbb
sarb
ljmp
lds
jg
ss
dec
andl
dec
mov
add
sub
push
dec
pop
mov
sbb
mov
sbb
dec
or
mov
imul
jecxz
mov
inc
mov
sbb
jg,pt
ss
hlt
xorb
lds
jno
pop
mov
aam
jecxz
jl
and
and
adc
arpl
mov
jo
repz
test
fmull
push
std
sub
dec
mov
imul
push
cld
mov
inc
and
out
xchg
lahf
pushf
jns
data16
xchg
repz
adc
mov
out
jo
stc
cmp
scas
cwtl
js
aas
aaa
push
sbb
test
push
lea
pop
mov
mov
mov
in
sbbl
cmp
or
mov
inc
mov
cmp
sub
aas
jns
cli
push
xchg
pop
mov
aas
mov
mov
pop
scas
mov
and
mov
cmp
xchg
ret
lock
je
sti
push
cmp
and
mov
sub
xlat
repnz
pop
add
test
rol
and
or
aad
adc
push
setl
popf
pop
add
std
ja
push
mov
cwtl
jb
in
test
lret
pop
andb
sub
cmp
movsl
mov
xchg
imul
pop
mov
or
inc
and
sbb
ret
add
lods
mov
inc
mov
mov
pop
in
mov
aas
jge
dec
mov
pop
mov
jge
pop
or
sbb
das
jmp
mov
mov
test
push
insl
inc
lahf
loop
xor
push
data16
data16
negl
pushf
test
cmp
xchg
push
lea
mov
lcall
je
lods
mov
std
cmp
xor
lret
xor
nop
push
popf
mov
push
jbe
pop
push
daa
aam
adc
add
pop
mov
xor
or
pop
xchg
mov
pop
mov
popa
out
xchg
add
xor
mov
xor
adc
cmpsb
xchg
push
mov
cmc
pop
cmp
and
jne
fcmovnb
mov
lds
adc
jne
xchg
and
xorl
jge
shr
imul
dec
xchg
lods
fsts
cs
dec
das
lods
stos
aam
out
cltd
call
add
and
mov
push
loop
lds
dec
shrb
out
movsl
test
sbb
and
sub
ljmp
xchg
xor
ss
ds
pop
push
xor
adc
cs
mov
ja
inc
mov
sub
les
shlb
add
es
pop
inc
mov
adc
das
call
enter
push
mov
adc
aaa
sbb
and
mov
mov
dec
mov
out
aad
dec
addr16
inc
mov
ret
mov
pop
nop
sbb
dec
mov
pop
mov
rol
mov
and
push
xchg
aam
mov
ja
pop
cmp
loope
stc
add
ret
mov
int3
test
in
sub
mov
push
out
test
dec
sub
xor
cmp
dec
loopne
and
ficoms
xchg
call
cmpsl
stos
add
push
inc
fldcw
mov
add
jge
push
push
pusha
push
loope
pop
adc
adc
loopne
push
mov
sahf
aaa
std
sbb
jle
cmp
aaa
ss
push
sub
jmp
popf
outsl
or
addl
sub
outsl
loop
popa
int
jb
mov
cmp
or
in
mov
or
fwait
es
and
push
fidivs
or
call
mov
loop
lds
jecxz
push
inc
lods
jbe
mov
cmc
movsb
pop
sarl
push
sub
cwtl
inc
xchg
aas
push
in
int3
push
xchg
adc
rolb
add
push
ja
leave
outsb
inc
adc
and
in
mov
mov
addr16
bound
arpl
ffreep
xlat
xor
cwtl
movsl
pop
ret
sbb
mov
inc
sub
jne
xor
mov
arpl
mov
push
add
push
xchg
mov
les
mov
loopne
je
call
nop
xchg
int
xor
add
push
divb
inc
cmp
inc
pop
mov
sub
je
lret
inc
sbb
cld
pop
dec
jns
icebp
and
lret
stos
or
xor
push
pusha
and
add
fs
adc
outsl
jbe
mov
orb
add
push
mov
shrb
mov
push
xchg
call
mov
mov
add
xchg
sbb
arpl
xor
es
js
jo
push
into
sarb
aaa
inc
inc
mov
outsb
dec
mov
jns
xor
xorw
pop
ret
adc
sahf
les
sub
add
fsub
and
xor
int3
nop
arpl
outsl
lock
insl
sub
cmp
mov
sbb
js
push
and
lods
and
inc
lock
push
ljmp
push
cmp
xchg
and
xor
cwtl
stos
outsl
repnz
xchg
je
cmp
inc
dec
or
lods
adc
lahf
push
notb
ficompl
mov
mov
bound
pop
testb
outsl
int3
enter
xchg
jle
jmp
in
push
pop
cmp
gs
pop
add
jns
nop
and
mov
xor
sub
dec
push
inc
or
mov
pop
insl
repz
push
add
loop
lods
xor
sbb
sbb
in
pop
push
scas
inc
movl
dec
xchg
subb
mov
xchg
lahf
xchg
leave
mov
sti
cmp
mov
test
and
sub
add
pop
in
push
jge,pn
inc
xchg
repz
rcll
ret
fs
sbb
xchg
sti
push
push
outsb
cs
mov
pop
mov
xchg
pop
inc
adc
push
call
adc
jo
pop
xor
rorl
pop
je
movsb
lahf
sar
push
xchg
dec
jmp
insl
lds
or
sub
cmp
cmp
andl
add
mov
push
repnz
in
jnp
stos
dec
daa
xorl
mov
pop
cltd
inc
jmp
jmp
xchg
dec
icebp
mov
enter
jge
jne
push
repz
loopne
mov
or
sbb
inc
sub
out
and
sub
dec
inc
push
and
out
push
xchg
jne
ds
les
clc
inc
loope
xor
lock
add
arpl
sarl
mov
pushl
sti
mov
loopne
outsl
inc
stos
jae
pop
pop
test
out
mov
out
popf
adc
adc
ljmp
rcrb
js
fistpl
push
jno
jg
fnstcw
enter
sub
cmpsb
jb
pushf
fcmovu
cmp
jns
push
or
aas
lcall
filds
sahf
mov
dec
aas
cwtl
jg
stc
int3
or
add
icebp
orl
push
mov
imul
fxam
push
or
lods
pop
cmp
cmp
mov
xchg
pusha
xor
dec
dec
outsl
sub
adc
sbb
cmp
mov
pop
lcall
mov
outsb
jmp
mov
jmp
popf
jno
inc
notb
add
dec
loop
cmpsl
xor
pop
xor
inc
xchg
xchg
dec
js
enter
fdivrl
out
arpl
iret
loope
dec
or
mov
xor
push
jl
enter
fwait
and
repz
ret
js
cmp
and
push
mov
ss
imul
daa
push
into
mov
lods
dec
mov
jb
shll
js
xchg
pop
cwtl
insl
fwait
mov
fcmove
pop
pop
sbb
dec
xor
push
je
fmull
mov
repz
xchg
sbb
out
insl
fs
xchg
scas
repz
mov
orl
lea
pop
stc
into
pusha
stc
fs
clc
adcl
mov
addr16
sbbb
sub
adc
xor
loope
mov
push
sub
imul
mov
es
mov
cmc
cmpsl
or
cld
outsl
pusha
stc
cmpb
test
push
pop
scas
cmp
shlb
std
and
xor
pop
dec
xchg
jnp
bound
scas
lods
arpl
cwtl
dec
ret
pusha
stc
sbb
push
sbb
inc
sbb
into
and
xchg
add
aad
and
push
dec
adc
xchg
repnz
fildl
sub
mov
jb
add
mov
fmuls
ret
fst
out
xchg
test
cmp
gs
xchg
sub
or
push
lcall
sti
inc
and
fs
movsb
pop
fsub
in
push
xchg
adc
add
popf
add
sub
xchg
mov
adc
pop
jns
jge
repz
test
addl
jae
std
mov
in
adc
add
sbb
fsubs
xchg
jp
xorl
stc
outsb
and
cmp
cmp
mov
inc
sub
les
adc
xchg
insb
dec
sbbl
test
sarl
xor
xor
sbb
xor
test
scas
stc
fucomp
or
int3
mov
lret
mov
mov
mov
adc
aaa
and
pop
imul
mov
push
testb
jmp
jp
nop
jno
es
mov
mov
adc
xor
shlb
adc
stc
push
sub
imul
and
adc
out
pushf
push
cmp
sbb
sub
pop
call
xchg
shll
or
stc
or
sbb
jg
enter
mov
shl
fstps
nop
adc
mov
jbe
pop
push
dec
fucomi
mul
pop
pop
jb
dec
xor
ret
mov
dec
ss
pop
cli
lret
and
aad
jno
mov
roll
pusha
lock
mov
cli
cmc
in
pop
mov
mov
add
pop
in
dec
mov
cmpb
andb
push
xchg
push
adc
add
mov
xchg
mov
cmpsb
mov
push
js
sub
dec
ja
insl
mov
xchg
lods
sub
pusha
popa
xchg
lea
ret
add
pop
divb
into
sub
daa
lcall
ja
cmp
cmp
shrl
sub
inc
rorl
jge
hlt
adc
mov
shrb
inc
nop
sub
imul
pop
fisttps
test
adc
mov
jae
imul
movsb
aas
test
sbb
or
pushf
xor
jge
int3
lahf
add
jmp
fisttps
lds
std
daa
jb
shlb
ds
dec
pop
jle
cltd
and
orb
push
dec
gs
loop
fwait
inc
push
rcrb
adc
mov
out
imul
sti
push
aaa
and
mov
adc
sbb
sahf
ljmp
pop
dec
sti
outsl
inc
mov
push
and
out
sub
push
fwait
dec
pop
jg
cli
sti
cmc
insl
pop
and
mov
jl
repz
mov
mov
xor
pop
mov
je
cli
add
fcmove
and
fdivrl
mov
or
push
or
incl
insb
jne
sub
fadds
iret
xchg
mov
dec
into
xchg
lea
mov
shll
das
in
test
lahf
mov
mov
dec
dec
daa
mov
clc
lods
and
mov
push
shrl
in
aad
add
pop
and
insl
js
cs
push
rclb
std
inc
push
push
inc
pop
shrb
adcb
mov
jp
mov
xchg
inc
fs
xchg
cld
arpl
fildll
inc
testb
in
shl
inc
mov
test
and
inc
adc
cmp
push
push
jb
imul
sti
cmp
pop
fmulp
xchg
lcall
cmpsl
pushf
out
pushf
xchg
mov
cmp
jmp
int3
lahf
xchg
and
mov
jg
mov
stc
pop
cmp
ljmp
push
shlb
jle,pn
mov
jae
pop
adc
xchg
mov
xchg
inc
les
leave
test
and
xchg
mov
out
jb
insl
dec
test
test
push
and
cmp
out
cmc
sbb
jnp
rcrl
notl
enter
les
jl
jae
jbe
fidivrs
inc
push
cltd
test
add
lods
cmp
clc
and
push
repz
or
sub
sbb
rcll
int3
ret
movsb
imul
ss
clc
or
add
int3
and
repz
pusha
pop
dec
add
pop
pusha
adc
cmp
push
ret
push
scas
daa
add
pusha
test
stos
sahf
push
xchg
xor
jno
and
push
push
enter
ret
pop
sbb
pop
mov
test
mov
je
push
decl
xor
imul
hlt
ja
add
push
pop
pop
jo
mov
inc
lds
repnz
mov
xor
popa
gs
jns
scas
xchg
push
sahf
jno
fsubrs
dec
jno
push
insl
repz
sbb
jmp
stc
call
gs
jne
insb
lock
inc
lock
fs
and
fcmovb
cmp
jno
sbb
inc
insl
jno
cmp
add
cmp
add
adcl
idivb
xor
mov
sbb
sub
ret
push
push
js
lea
and
gs
fstpl
xlat
jecxz
mov
fbstp
es
lods
push
fsubs
fstpl
jp
sbb
in
and
in
lret
and
pop
jne
jl
gs
xor
xchg
mov
mov
aaa
imul
lods
mov
test
mov
jb
or
or
cmpsl
outsb
mov
adc
jge
mov
lods
lret
add
and
mov
inc
xchg
loop
or
mov
lcall
loop
jl
and
shr
flds
sub
out
dec
sbbl
and
rcl
decl
jno
lds
les
cmp
xorl
push
or
adc
push
aas
cmc
imul
mov
call
or
xor
lahf
ret
pop
or
ja
xchg
add
repnz
andb
data16
or
scas
stc
cmp
cmp
cmovp
add
jecxz
sbb
xchg
sbb
iret
sysret
fiaddl
cli
push
mov
jae
mov
jl
push
into
mov
xchg
sbb
lret
popf
test
out
mov
lret
jmp
jo
imul
sbb
jge
int
xchg
js
sub
sub
leave
icebp
inc
push
mov
icebp
lahf
das
adc
aas
nop
fwait
sbb
aas
push
lahf
out
xchg
add
pop
jmp
rcr
cmpsl
test
fwait
add
adc
sahf
or
mov
mov
inc
xor
aad
jo
mov
arpl
ret
arpl
mov
fstpt
lea
adc
daa
mov
add
hlt
adc
push
xor
call
aam
mov
jb
adc
lock
mov
sub
out
scas
aad
inc
pop
outsb
xchg
sbb
ficoml
inc
inc
movsl
or
pushf
mov
sbb
xor
xorb
incl
mov
jbe
and
pop
stos
inc
cmp
pop
scas
mov
out
pop
insl
xor
into
add
fadds
lock
jnp
inc
loopne
mov
or
or
aad
mov
mov
scas
jo
xchg
mov
mov
dec
push
mov
and
xchg
cli
movsb
lock
push
je
divl
ss
idivl
sti
mov
mov
lahf
cmpsb
push
jae
jne
mov
fmulp
out
arpl
lods
xchg
fsub
ret
leave
cmp
xchg
pop
jno
decb
push
pop
push
cmp
jp
dec
inc
jl
cmc
push
mov
lds
or
inc
jmp
ret
xor
jb
aaa
push
jo
popa
testb
mov
add
mov
mov
stos
das
cmp
push
aad
pop
ret
jge
adcl
stos
jmp
mov
jae
lret
shr
jnp
pushf
in
cmp
dec
sub
xor
jg
insl
jae
sbb
mov
jbe
push
mov
push
mov
nop
and
cmp
call
scas
mov
fisubrs
add
fs
xlat
add
test
dec
dec
clc
mov
adc
in
xchg
lcall
mov
jge
iret
adc
das
push
cmp
pop
je
add
jge
outsl
adc
insb
rcl
mov
jnp
and
les
cmp
jo
jbe
popa
inc
call
lahf
mov
jnp
or
adc
cmp
mov
lds
pop
fists
ja
sub
aad
cmpsb
mov
shrb
or
push
aaa
push
insb
sub
jge
ds
mov
mov
out
scas
mov
add
xor
xor
xor
mov
sub
and
int3
mov
test
loopne
arpl
push
outsb
test
pop
jb
ds
sub
jg
jmp
and
negl
xchg
sub
mov
xchg
add
mov
mov
or
pop
lock
jne
scas
out
sub
insb
xchg
fisubrl
pop
or
push
stc
adc
adc
sbb
dec
push
sub
sti
sub
lea
inc
fucom
xlat
repnz
adc
rclb
lret
repz
or
fcoml
bndstx
in
sbb
pop
mov
popl
bound
sbb
or
jae
add
dec
dec
xchg
out
xchg
push
or
jnp
dec
mov
xor
stos
fcoms
or
mov
fwait
into
fnstenv
pop
mov
cmc
cmp
rcrl
sti
jmp
mov
inc
adc
push
aas
pop
idivl
jl
or
sbb
cmp
sbb
je
cli
adc
ja
push
mov
mov
repz
test
subb
in
lret
outsb
dec
inc
sub
shl
scas
push
xchg
mov
xchg
movb
loopne
fstps
movsb
or
mov
sub
call
out
pop
fsub
mov
leave
addr16
dec
aaa
jo
and
sub
das
xor
sub
cmp
jge
cmpsl
je
adc
inc
add
int3
fnstcw
xchg
push
into
xor
sbb
inc
popa
push
lret
ss
out
ret
ds
cmpsl
pushf
add
icebp
fisttps
push
or
jmp
sbb
aas
mov
xor
cli
sub
int
rorl
pushf
cmpsb
jle
lcall
aam
out
adc
cmp
jge
inc
mov
pop
mov
es
aaa
cmp
in
cs
sarl
sbb
fstps
popf
mov
fbstp
dec
mov
pop
cli
and
mov
bound
dec
add
scas
fstps
add
or
inc
jae
jp
push
mov
loop
iret
ja
hlt
aam
push
jg
test
ret
jae
aaa
gs
or
decb
enter
pop
loope
sbb
sbb
popa
and
js
or
inc
movsb
lea
add
lods
fisttpll
mov
xchg
pop
mov
shll
test
sarl
lds
xchg
mov
mov
stos
adc
mov
icebp
sahf
inc
loopne
push
pop
inc
push
pusha
dec
test
shrl
sahf
sub
lods
cltd
je
push
loope
jne
lods
adc
jecxz
cmpsb
mov
enter
fsubs
out
sarb
in
ljmp
vmovdqu
daa
xlat
pusha
jle
adc
lods
loop
imul
fstl
pop
pusha
mov
push
mov
pop
in
xor
addl
sbb
and
sbb
in
xorw
loopne
shll
test
inc
jne
xor
and
enter
fwait
inc
inc
mov
jl
int
pop
push
movsl
mov
jmp
stos
mov
ret
dec
mov
xor
sahf
mov
ret
scas
mov
xchg
lds
sbbl
add
push
jae
and
jnp
mov
sbb
popa
aaa
lds
sbb
sti
lret
push
popa
mov
shlb
xor
test
stc
pop
xchg
add
ret
lret
fistpl
arpl
clc
popf
add
cmp
dec
movsb
lret
cwtl
mov
rorl
jns
or
jns
lods
repnz
mov
je
inc
and
arpl
lcall
push
pop
stos
in
jmp
fstl
mov
or
cmp
pop
js
lret
cld
iret
pop
mov
fdivr
push
mov
dec
lcall
add
imul
mov
sbb
cltd
stos
or
aaa
leave
iret
jae
incl
sub
or
push
mov
sbb
jle
ljmp
adc
ret
idivl
js
push
add
mov
sbb
iret
mov
mov
loop
sbb
pop
movsl
mov
dec
xchg
sub
mov
mov
repnz
mov
sub
fsubrs
notl
add
mov
loopne
fcomps
dec
into
xor
arpl
je
cwtl
xchg
mov
iret
mov
jae
pop
jae
xor
mov
cmpsl
or
les
fcmovbe
sbb
test
mov
add
push
mov
popf
sub
cmpsl
mov
push
mov
outsl
pop
inc
push
iret
sbb
insb
xor
out
pop
mov
pop
jmp
jge
push
jl
jo
mov
cs
fstps
or
push
xorl
imul
adc
mov
mov
movsl
jno
decl
test
pop
inc
mov
sbb
add
aas
push
inc
jmp
push
test
ljmp
pusha
fwait
loopne
or
xlat
inc
jmp
inc
mov
cmp
rol
adc
movl
scas
test
aam
add
roll
aam
scas
addr16
mov
pop
push
std
mov
fidivs
into
in
shlb
cmp
jae
jmp
cmp
fbld
outsl
mov
mov
in
sbb
in
jo
out
inc
fmuls
mov
mov
ja
push
out
insb
test
sub
fstpl
mov
js
xor
lea
test
stc
imul
sub
or
inc
adcb
lods
adc
mov
call
push
mov
aas
inc
mov
cltd
filds
in
mov
mov
out
lret
mov
and
adc
inc
jns
add
or
and
jns
int
sbb
mov
adc
dec
fcmovnb
fistps
lea
inc
lcall
and
adc
push
and
xor
sbb
adc
je
sub
mov
in
sub
dec
rcrb
inc
mov
mov
xchg
shl
push
stos
enter
or
jne
mov
outsl
lods
push
xchg
pop
mov
aas
out
sahf
sar
xor
or
jle
or
cld
mov
scas
outsl
repnz
cs
test
into
push
mov
testl
or
imul
dec
lret
nop
aas
pushf
and
push
outsb
fildl
push
data16
mov
in
mov
cmp
pusha
hlt
adc
adc
fsubr
sti
aas
add
popf
push
jecxz
insb
add
jne
fdivr
or
cs
addl
mov
mov
lret
cmp
push
stos
andl
mov
negb
stos
cmpb
loopne
jmp
mov
lods
mov
add
mov
addps
mov
clc
mov
lret
mov
fcoms
mov
and
adc
xchg
lahf
push
mov
cmp
repnz
xor
or
daa
test
cmp
fimuls
insb
dec
ret
into
lret
mov
lods
es
xchg
into
mov
xchg
push
enter
push
jecxz
mov
gs
mov
jg
jl
mov
mov
shlb
shlb
orl
lea
imul
lods
cld
das
notb
jp
dec
dec
inc
and
fcomip
ficomps
inc
cwtl
fwait
addr16
sarl
push
mov
sub
leave
pop
cltd
jle
popa
cmpb
pop
test
test
and
pop
or
sub
das
fadds
lea
or
xor
jbe
jmp
ss
fidivrs
movsb
repnz
xchg
mov
cmp
int
xchg
jmp
jb
xchg
rol
popa
stc
stc
mov
cmc
lcall
sbb
in
add
pop
popa
and
xor
addr16
negl
aam
vmovntdq
jmp
push
loopne
add
mov
mov
sbb
loopne
sti
ret
xor
and
mov
inc
es
jne
fdivs
fstp
cmp
cltd
sub
stos
adc
mov
lahf
call
mov
int3
inc
imul
fldt
push
pop
or
xchg
adc
dec
add
fs
sbb
inc
aaa
sbb
aaa
push
cwtl
pop
call
insl
sbb
pop
ficomps
je
adc
push
call
and
gs
enter
pop
mov
pop
xor
hlt
jg
test
dec
cli
std
cltd
int3
push
aaa
adc
adc
mov
es
bnd
lcall
fwait
jae
jcxz
mov
sarl
mov
ret
xchg
jnp
insl
les
loop
add
sbb
mov
and
jno
dec
push
push
fcomps
js
lods
push
xor
push
pop
jns
data16
cmp
fxch
std
loopne
fs
mov
call
jns
pop
gs
lea
aaa
aaa
jae
pop
test
sbb
adc
mov
cs
push
aas
in
nop
mov
mov
fadd
in
aaa
lret
ja
lcall
mov
lods
sahf
dec
xlat
sti
adc
cmp
rcrb
ret
xchg
lgs
pop
sbb
xchg
stos
out
out
push
pop
and
pop
sar
jmp
adc
lock
outsb
int
mov
arpl
dec
lods
adc
add
je
movsb
sahf
imul
xorb
les
adc
insl
mov
pushf
jmp
or
daa
xchg
lret
or
mov
xor
adc
cmp
pop
push
cmpsb
xchg
and
repnz
mov
cmp
push
loope
dec
imul
sub
fcmovnb
lds
sbb
dec
sub
cmc
es
outsl
insb
dec
psraw
imul
inc
sbb
jp
out
xchg
data16
sub
les
jge
dec
push
pop
push
and
fidivl
or
sti
jle
fwait
pop
mov
cli
cwtl
sub
aad
sbb
ret
inc
pushf
movsl
sub
sahf
loop
jo
addr16
lods
call
inc
jne
or
out
inc
pushf
mov
movsb
jno
dec
add
sti
fwait
popa
pop
imulb
pop
scas
test
repz
popf
addr16
adc
push
pusha
cmpsl
out
flds
xor
inc
mov
mov
mov
and
jecxz
dec
pop
pop
adc
or
push
and
add
mov
xchg
pushf
xchg
es
in
adc
mov
pop
jg
mov
sub
xor
fs
lea
cwtl
pusha
mov
icebp
mov
fsts
jno
cmc
push
ficoml
push
jmp
mov
negl
arpl
fbld
add
dec
fstpl
jl
dec
and
lcall
add
shr
or
scas
mov
sbb
jg
ds
cmp
ljmp
or
cmpsb
add
mov
cmpsb
or
cmpsb
pusha
xlat
xchg
out
jae
outsb
or
jmp
adc
out
dec
divl
and
ret
movsb
fxam
aaa
inc
insl
shrl
inc
fcomip
in
sbbl
dec
test
pop
leave
jg
jl
mov
in
and
push
xor
into
outsb
clc
icebp
sub
mov
pop
fdiv
mov
add
in
test
aas
aas
mov
ja
leave
pushf
repnz
scas
pop
xchg
pop
jmp
xchg
cmc
lods
push
cmp
loopne
dec
fs
in
sub
lea
addr16
xor
aas
xchg
mov
dec
and
aam
and
insb
cmp
dec
sub
fwait
jge
int3
mov
insb
or
imul
cmp
enter
jne
pop
add
push
xchg
and
sub
inc
xchg
sub
fstpt
cld
stos
xchg
and
mov
jecxz
mov
daa
jns
cmp
loope
inc
shlb
inc
addr16
jo
ret
pop
pop
outsb
out
mov
mov
rorl
inc
iret
addl
icebp
or
stos
popa
sbb
stc
cmp
adc
dec
jno
mov
std
dec
xchg
lds
inc
pop
xchg
dec
movsl
push
call
aaa
fnstenv
lret
sub
push
lret
xor
mov
fldenv
add
and
fnstsw
int3
xor
in
pop
outsl
leave
ffreep
outsb
cmp
mov
xchg
outsl
pop
test
sub
adc
pop
lcall
mov
jb
inc
add
cmpsb
xchg
mov
push
imul
and
and
dec
mov
adc
sub
mov
jne
sbb
jmp
bnd
call
or
andl
adc
xchg
out
jne
shl
or
mov
fisttpl
mov
jle
sqrtps
pop
mov
add
cmpl
dec
fs
dec
and
xor
pop
rolb
jo
and
push
repz
mov
pop
pop
data16
ljmp
nop
test
dec
nop
ds
xor
cmp
adc
ret
mov
jae
push
hlt
jo
gs
loopne
pop
push
stos
movsl
scas
inc
xor
push
cmp
add
sbb
andb
pop
xchg
push
mov
sub
push
push
jae
fs
mov
push
mov
xchg
cmp
add
mov
fisubs
test
and
loopne
jg
fnstcw
pop
sbb
orl
ficomps
jecxz
inc
mov
shll
jb
or
or
icebp
call
repz
ja
pop
mov
xchg
jo
sarl
test
jl
inc
cmp
pop
push
jns
xor
repnz
out
push
lcall
push
mov
jmp
pop
jl
pop
adc
pop
jge
inc
add
cmp
shrb
insb
movsb
aaa
inc
lret
daa
fimull
push
in
fs
push
gs
sbb
pop
rorb
adc
mov
loop
lcall
push
xor
test
pusha
jns
addl
lds
cwtl
add
ret
movsl
add
pop
mov
lods
int
sbb
lods
lcall
xor
mov
add
sub
clc
adc
shrl
mov
shrb
cmp
scas
das
maskmovq
mull
xchg
aam
mov
lretw
ss
adc
stc
adc
xor
repnz
mov
xchg
xchg
xor
push
pop
sbb
adc
fdivp
adc
and
fadds
scas
jo
call
scas
adc
outsl
or
lret
iret
sti
test
ja
inc
or
xchg
dec
mov
cli
repz
pusha
push
js
bound
arpl
mov
sbb
in
mov
push
ret
xchg
rorb
xchg
pop
in
adc
xchg
pop
ret
lds
mov
inc
adc
rcrb
or
fstps
loop
shrl
fdivp
repnz
mov
jl
outsl
incl
xchg
gs
add
scas
xchg
je
in
movsb
sub
push
ret
inc
dec
cld
addr16
xchg
lock
ret
loope
lea
test
cmp
mov
dec
adc
gs
rcl
fwait
mov
push
xor
sub
push
ss
adc
jle
and
sti
iret
cmp
scas
outsb
lods
fadds
sub
repnz
popf
adc
and
rolb
mov
popa
or
movsl
andl
add
cmp
push
popa
cli
insl
push
push
jp
jbe
jbe
and
xor
cwtl
call
sahf
cmp
add
xchg
repnz
lods
sahf
stos
sbb
pop
sub
shrb
cmp
imul
lea
adc
push
pop
nop
lds
cli
lcall
jns
scas
cld
sahf
cmpsl
or
rcr
mov
call
add
ss
bound
popf
dec
stos
xchg
mov
test
repz
sbb
sahf
leave
sbb
popf
mov
lahf
bound
out
loop
ret
andb
mov
xchg
inc
pop
mov
repz
or
cltd
arpl
mov
xchg
fmul
fsubl
xor
sbb
decb
adc
fdivrl
test
sti
adc
loope
aas
or
mov
push
push
push
adc
or
push
add
leave
sub
add
mov
add
out
xchg
mov
mov
mov
out
daa
aaa
popa
inc
pushf
je
sti
call
add
xchg
xor
test
out
sbb
pop
cmp
jl
sub
mov
shlb
mov
adc
jbe
push
std
es
and
push
xchg
jo
leave
nop
dec
je
fsts
add
xchg
mov
cmpsl
mov
decb
iret
pop
arpl
clc
dec
pushl
fs
inc
dec
int
pop
mov
adc
add
sbb
jne
sub
jae
or
and
dec
mov
jo
repnz
xchg
in
jge
cmc
cmp
insl
insb
fsubl
jne
inc
cmp
lret
inc
xor
bound
iret
mov
dec
leave
pop
outsb
mov
jo
xor
cmpsl
adc
pop
test
jae
push
pop
dec
mov
adc
adc
std
cmp
xchg
mov
push
cmp
ficompl
mov
and
cs
insb
roll
mov
push
cmp
cmp
mov
stos
scas
or
mov
push
adcl
fsts
and
ja
pop
jp,pt
jg
add
test
push
sub
push
lods
pcmpgtd
repz
jmp
xchg
out
mov
jno
xor
aaa
cmc
jmp
sub
push
mov
sub
js
andl
jle
repnz
cld
stos
outsl
repz
cmpsl
or
gs
dec
sbb
inc
lahf
into
or
mov
push
xchg
lret
rorl
ljmp
push
aad
mov
popf
je
sub
adc
cmp
pop
shrl
or
stos
push
mov
xchg
aad
jg
sbb
test
mov
mov
sbb
das
or
std
pop
loopne
fwait
mov
pop
orb
push
call
cmp
mov
into
nop
ret
mov
jns
cli
mov
fadds
fisttps
pop
out
xchg
and
addr16
adc
and
add
cmp
push
into
pop
xchg
add
fwait
mov
push
das
fwait
add
xchg
inc
out
cmp
dec
and
sub
hlt
adc
pop
mov
mov
loop
jg
fistpll
xchg
das
push
sbb
imul
cmp
inc
mov
xor
in
cli
loop
and
sbb
cmc
lret
cwtl
mov
push
addl
mov
xchg
das
andl
je
icebp
jbe
xchg
pop
enter
loope
out
mov
mov
xor
cld
and
and
push
out
fnstcw
loop
add
adc
sbb
daa
pop
adc
in
nop
cli
sbb
dec
lcall
sub
imul
sub
shlb
dec
popa
pop
sub
adc
push
or
mov
pop
pop
aam
insl
and
xchg
enter
jl
imul
push
cltd
sbb
push
subl
fisttpl
sbb
inc
icebp
push
lds
pop
ror
and
inc
lods
divb
inc
fildll
fwait
mov
aas
push
cmp
mov
bound
sub
mov
clc
pop
adc
rol
out
pop
inc
loopne
xchg
push
enter
adc
movsl
jle
jbe
fidivrl
sub
popf
mov
cld
mov
mov
adc
ja
repnz
cwtl
lcall
push
test
into
pop
dec
jne
sub
in
jge
sti
loop
ficoms
aas
pushf
psubb
mov
daa
imul
dec
mov
into
pop
lods
fisubs
pop
push
lds
fbstp
ficompl
imul
popa
sub
cmpb
xor
cld
xchg
lods
clc
adc
pop
pop
sub
push
stos
aaa
inc
xor
stc
or
cli
int
pop
xlat
cmp
pop
pop
subb
jno
rclb
dec
popa
loop
leave
test
test
in
pop
jle
mov
out
push
sbb
test
xchg
push
or
insb
mov
sbb
jnp
mov
or
js
dec
push
mov
stos
scas
imul
xchg
shlb
testb
fidivl
nop
popa
add
add
lahf
push
inc
and
ljmp
shl
push
movsl
popf
lods
jb
mulb
stc
inc
cmpsl
pop
loope
mov
pop
push
or
adc
pop
or
xchg
shld
pop
jne
lods
mov
aaa
hlt
jg
mov
hlt
mov
fnstenv
mov
outsb
cmp
jg
not
pop
push
in
psubsw
dec
pushf
testb
mov
add
or
jge
aaa
push
xor
stc
cmp
loopne
xor
scas
dec
mulb
jecxz
inc
or
push
or
out
pop
pop
clc
mov
repnz
jle
jbe
ljmp
pop
jae
popa
shrb
lods
jmp
sarl
cmpsb
shll
and
inc
cltd
sbb
mov
es
cmc
mov
orb
jg
mov
ds
jmp
aaa
imul
popa
sub
movl
cmpsl
cwtl
das
jg
loope
cs
adcb
jbe
or
cmp
outsb
in
out
add
push
or
mov
icebp
arpl
movsl
sub
jl
mov
add
inc
shlb
rcll
and
mov
ret
call
pshufw
and
mov
filds
mov
sub
ret
stos
aas
or
std
addr16
or
hlt
dec
mov
xor
test
mov
ja
fisttpll
andb
pop
loop
pop
movsl
aaa
xchg
jle
push
and
mov
pop
in
add
in
add
dec
pop
popf
mulb
sub
imull
add
jmp
jae
mov
xor
xor
js
aam
xor
jns
sbb
adcl
inc
mov
test
inc
loope
jb
test
popf
fadd
in
dec
adc
ret
and
push
fdivl
adc
sbb
pop
cmp
movb
int
movsl
enter
pushw
incb
mov
pop
xchg
in
sub
incl
inc
sub
jns
insl
push
cmp
add
loopne
dec
add
jle
jle
xor
rcr
scas
cli
jnp
mov
test
push
mov
cltd
mov
and
rcr
loope
cmp
clc
adc
lret
or
popa
jp
lea
jle
jecxz
adc
and
adc
or
jns
push
jl
dec
inc
xlat
ret
lods
jbe
or
enter
ds
sti
fsubs
inc
sub
popa
pop
mov
jne
sub
test
pop
imull
and
test
mov
cmc
pop
arpl
cmpb
mov
jmp
pop
test
mov
sub
jo
in
out
ret
jnp
pop
jge
push
mov
sahf
push
cmp
jp
xor
ret
ret
imul
sub
aad
rcll
into
xor
addr16
gs
scas
ffreep
pop
enter
and
fnstsw
out
stc
lods
cmpsl
js
int3
sbb
and
mov
push
and
xlat
dec
jge
inc
repz
xor
push
add
stc
xchg
cmpsl
jge
test
jge
mov
lods
dec
fsubrl
std
cli
mov
cmp
scas
insl
int3
pop
aad
cld
push
push
cmpsb
add
pushf
aaa
cmp
out
lret
outsl
out
ss
jne
stos
xchg
inc
pop
into
pop
imul
lock
mov
xchg
popa
xor
jnp
adc
push
jne
js
ljmp
mov
or
sbb
out
jns
pop
inc
bound
icebp
mov
repz
aam
pop
loopne
vpmacssww
fsts
insb
dec
adc
shlb
subb
leave
pop
or
push
les
xor
cld
push
xchg
dec
in
pop
mov
jne
xlat
pop
xchg
fidivrs
sub
fdivrl
and
jae
inc
pop
cli
sbb
push
push
lods
sbb
fnclex
stc
sbbb
add
in
outsl
push
jg
cmp
int
loopne
jne
mov
xchg
mov
cmp
stos
jmp
jns
popa
cld
xchg
mov
sub
sbbl
lret
push
inc
sub
outsl
push
sbb
xchg
push
push
loope
pop
lods
xor
ds
fstpt
mov
fimull
sbb
pop
mov
lcall
sbb
mov
mov
sub
ret
xchg
push
aaa
ret
and
out
mov
inc
test
fcoms
cmpsl
aas
adc
xlat
add
stos
mov
xor
ficoml
sbb
test
sarl
cmc
push
or
and
mov
and
cmpsb
pop
mov
xorl
dec
add
mov
aam
out
repz
inc
jnp
into
sub
mull
xor
popf
shrb
cwtl
test
xor
daa
sub
js
cmp
rcl
fmul
adc
aad
cmp
dec
loopne
addr16
rorb
test
dec
mov
aaa
adc
aad
mov
push
inc
and
mov
stos
push
or
dec
mov
jae
dec
test
xor
ret
enter
cmpsl
and
sbb
or
inc
push
mov
cmc
adc
gs
cmp
and
adc
push
xchg
mov
or
pop
and
cmpsl
mov
or
call
mov
std
ret
mov
pop
std
lea
sahf
shlb
xor
add
inc
push
adc
ret
out
sbb
in
xchg
scas
sub
or
imul
aas
add
or
push
xor
lea
or
mov
lahf
or
xor
sbb
cmc
jno
adc
test
jbe
add
xor
lret
outsl
int3
fstps
rorl
stos
xor
ss
aad
dec
mov
les
inc
outsb
fsubrl
push
std
inc
or
outsl
mov
shll
cmpsb
ficomps
mov
sbb
arpl
adc
ljmp
mov
ljmp
cmp
call
scas
or
rcrb
in
lcall
pop
mov
push
loope
jp
pop
pop
in
jp
ret
and
pop
mov
or
rolb
sbb
mov
or
je
enter
aas
lea
mov
clc
fsub
cltd
jmp
pop
popf
cltd
inc
mov
adc
jnp
xchg
lods
shrb
jecxz
into
inc
jg
or
xlat
out
adc
pop
andl
pop
pushf
mov
pop
pop
loope
fs
std
stc
out
pop
pop
inc
xor
ljmp
inc
lcall
pop
loop
imul
pop
lcall
push
cmp
and
mov
or
add
mov
icebp
das
xchg
xchg
aam
pop
lahf
aad
in
shll
xor
adc
lcall
std
jbe
xchg
or
mov
repz
dec
jmp
push
scas
or
xchg
sub
mov
sahf
inc
cmp
and
test
mov
sub
mov
adcl
aad
sbb
in
and
pop
jle
lods
test
leave
add
and
mov
int
addr16
cld
push
push
mov
andl
lea
leave
lods
bound
dec
loop
imul
dec
addl
fists
je
dec
test
or
and
xchg
jne
fldenv
jae
imul
push
cmp
inc
insl
cs
sbb
outsl
pop
dec
push
int3
pop
fwait
and
add
lea
mov
iret
daa
and
sub
jne
out
sub
fistps
xor
idiv
dec
pop
int
mov
or
sbbl
sub
inc
iret
in
xchg
jge
mov
movaps
cli
mov
mov
jecxz
sbb
nop
std
repz
mov
ljmp
adc
stos
cs
shl
mov
sub
xor
mov
inc
or
dec
jmp
int
popf
inc
pop
in
insl
xchg
add
int
pop
cmp
inc
decl
mov
pop
add
in
clc
sahf
xchg
fs
jp
push
insl
xchg
add
adc
popf
ret
in
mov
mov
xchg
mov
inc
dec
jg
out
dec
pop
xor
mov
or
mov
mov
add
insb
cli
fadd
cmpsl
dec
mov
jge
sbb
aaa
fnstenv
add
cmp
add
int
adc
xor
movl
adc
dec
or
dec
test
mov
enter
jno
scas
shll
push
cmp
in
divl
adc
jo
xchg
push
mov
stos
jo
push
das
int
mov
ret
add
cs
loope
bound
cmp
addr16
out
lock
cltd
cld
inc
cmpsb
dec
push
mov
aam
loop
repz
lea
mov
popa
mov
inc
pusha
inc
loope
dec
popa
jl
hlt
xor
sbb
or
shrl
push
and
je
xchg
mov
call
pop
mov
mov
call
iret
adc
pop
les
nop
lods
or
repnz
pop
ja
sub
xchg
ljmp
in
jb
pushf
scas
lods
xor
movb
xlat
aas
mov
dec
pop
call
lret
mov
sbb
xor
dec
push
or
hlt
add
pop
in
jbe
adc
cmpsl
clc
outsl
test
mov
fcomps
push
xchg
jae
add
popa
lods
pop
xchg
cmpsb
add
jg
rcl
adc
add
mov
add
fimuls
and
cmp
data16
fidivl
test
bound
rcl
sbb
push
inc
jp
push
and
mov
inc
std
lods
lods
mov
pop
mov
sub
lret
scas
test
or
scas
jmp
imul
movsb
enter
ret
inc
push
jmp
inc
call
cmp
lret
in
lcall
test
add
stos
push
dec
lret
or
in
leave
mov
out
jb
pop
jmp
pop
dec
in
sbb
add
xor
clc
mov
stos
dec
ds
dec
inc
sti
adc
push
or
into
fidivrs
std
xchg
int
jge
pusha
mov
enter
repz
orl
inc
adc
adc
loopne
in
mov
mov
inc
mov
mov
pop
fmul
sbb
daa
jns
pop
movsb
enter
sub
push
shl
adc
inc
mov
or
hlt
js
icebp
sub
cwtl
std
mov
test
push
push
mov
aad
out
mov
cwtl
adc
scas
int
xor
enter
mov
lret
add
mov
sub
sub
or
dec
jns
iret
mov
mov
xchg
and
xchg
repz
sbb
mov
lret
das
jbe
and
aas
dec
call
inc
rorl
shl
sarl
fstps
sbb
mov
mov
adc
add
and
notb
andb
nop
and
inc
sbb
mov
mov
inc
mulb
lods
rorl
push
pop
sbb
das
cmp
adcb
pop
push
jmp
int
pop
fwait
push
or
add
test
pushw
mov
pop
les
xor
adc
shrl
inc
sub
mov
cmp
mov
cmp
inc
movsl
outsb
cmc
sbb
fcomps
mov
jb
xchg
insb
stos
or
xchg
shll
xor
xor
dec
aam
push
pop
xchg
add
fildl
mov
mov
insb
cmpsb
inc
inc
mov
xor
sub
mov
aad
add
fistpl
jb
rorb
aam
or
popa
adc
xor
stc
inc
nop
ljmpw
rolb
jo
and
addr16
mov
lcall
ret
cmp
xchg
and
outsb
lahf
jmp
pop
and
dec
inc
or
stos
in
in
jg
mov
pop
xchg
sbb
push
xchg
arpl
jg
insl
aam
push
inc
mov
xchg
ret
ror
popf
add
or
adc
addb
iret
add
sbb
push
out
sahf
xor
loop
sub
adc
out
inc
mov
pop
fmul
imul
pusha
stc
mov
xor
xchg
es
xchg
sbb
pop
jmp
xor
or
iret
je
dec
pop
add
movsb
sub
jno
enter
sbb
dec
insl
mov
pop
mov
fiadds
in
sarb
mov
subl
loope
test
mov
and
into
mov
xchg
mov
and
inc
mov
add
push
cwtl
mov
out
add
add
in
loop
movsl
mov
mov
bound
sbb
insb
jo
push
push
sbb
mov
mov
testl
aam
arpl
xlat
or
mov
fdivl
sub
cmp
sub
int
xor
shll
pushf
jg
lahf
into
and
mov
ja
call
sbb
mov
shlb
adc
clc
rcr
outsb
rcll
or
jmp
xchg
icebp
or
push
push
dec
xchg
or
pushw
lcall
mov
dec
and
popa
cmp
frstor
lock
iret
mov
sti
mov
or
pop
add
mov
popf
stos
sti
rcrl
mov
es
pop
mov
push
cs
sub
xlat
inc
xchg
jp
mov
mov
fsts
sbb
dec
inc
xor
inc
dec
cmpsb
aam
movsl
nop
mov
test
add
xchg
xor
sub
das
aam
popa
sahf
and
and
xchg
push
outsb
adc
lods
scas
add
jle
and
lret
mov
test
and
fisubrs
sbb
fldl
push
daa
add
bound
cwtl
or
adc
in
mov
loope
in
movsb
push
pop
iret
fcmovu
cltd
aas
orl
dec
test
pop
xor
mov
cmp
dec
test
clc
cmp
clc
dec
sti
mov
leave
sub
sub
mov
xor
push
lret
aaa
decb
imul
jbe
into
xor
sbb
adc
lods
sub
clc
ret
mov
adc
and
jge
mov
jnp
repnz
push
data16
stos
jne
js
es
lret
out
aaa
into
rclb
or
and
js
call
sub
mov
adc
dec
movsl
mov
inc
xor
adc
pushf
insb
decb
cmp
jl
outsb
hlt
xchg
leave
loopne
xchg
mov
adc
pushf
data16
fwait
xchg
int3
or
lcall
sbb
mov
out
xchg
xchg
dec
es
dec
stos
adc
into
ja
in
jo
pop
adc
mov
mov
jecxz
sbb
lahf
pop
sbb
repz
fprem1
loopne
mov
leave
push
pop
cmpsl
xor
mov
xchg
scas
stc
fwait
sub
das
imul
or
xor
fstp
cmpsb
xchg
xchg
mov
ret
add
dec
mov
cmp
das
mov
mov
mov
lea
add
rorb
push
mov
fildll
insl
imul
repnz
lods
clc
mov
test
test
mov
lret
shll
ds
bound
dec
aaa
cwtl
fcmovnbe
add
mov
popl
jno
aam
in
cmp
scas
pop
fwait
mov
pop
popa
xorb
lahf
ret
xchg
rcrl
mov
and
or
xlat
mov
sbb
xor
ficoms
ljmp
sub
pop
mov
mov
lds
ds
mov
inc
cmp
mov
outsl
cmc
xchg
cmpsl
rolb
fdivr
xchg
fstps
cwtl
lock
inc
push
clc
pop
cmp
ss
xchg
push
mov
inc
and
xor
pushf
pusha
add
mov
sub
gs
add
adc
arpl
xchg
add
jecxz
insl
call
out
cli
in
out
repnz
sbb
push
clc
scas
leave
leave
ds
jmp
add
xor
sub
popa
jne
and
sarb
pop
sub
sub
stos
jns
pop
xchg
xchg
push
dec
mov
out
scas
pop
popa
mov
xor
mov
adc
dec
lods
stos
lahf
push
je
scas
mov
push
stc
fistpll
pop
cli
nop
lds
dec
sub
scas
push
and
fsubl
aas
jo
data16
push
in
fdivl
adc
xchg
inc
xchg
fimull
xchg
inc
sbb
daa
loopne
dec
testl
pop
push
push
enter
fmull
xlat
iret
outsb
leave
mov
sar
mov
pop
fistps
fisubrl
test
jno
aad
sub
leave
xchg
lock
xor
fwait
or
mov
daa
xchg
pusha
jp
push
stos
sbb
xchg
push
movsl
adc
add
rorl
fs
push
repz
mov
pop
nop
imul
add
sub
in
imul
jmp
movsb
sbb
pop
loopne
stc
fbstp
sub
stc
popf
call
jne
xor
adc
add
dec
mov
test
dec
dec
mov
movsb
xor
test
sub
in
and
sub
icebp
cmc
pusha
cmp
mov
pop
std
jp
pop
sbb
add
adc
pop
mov
fstpl
xor
mov
pop
sbb
popf
xor
insl
ret
jae
pop
lods
xchg
sbb
leave
cli
gs
cmp
sub
dec
push
repz
stos
or
out
in
outsl
nop
xchg
lods
scas
or
xor
mov
push
fwait
std
dec
pop
repnz
xchg
sahf
mov
cmp
dec
scas
shlb
popa
add
imul
sub
pop
xchg
jmp
pop
sub
ret
ret
or
xor
mov
cmpb
outsl
sub
cmp
cmpl
test
shll
mov
in
sub
jecxz
loope
ja
and
pop
xchg
push
push
in
rcrl
or
data16
out
stos
dec
or
sub
aas
jg
mov
aaa
and
sbb
je
pop
lods
in
or
insb
and
jle
push
sub
dec
addr16
inc
pushl
imul
inc
out
stos
sarl
push
mov
sbb
in
sbb
mov
sbb
idivl
jne
les
jmp
push
icebp
adc
jge
iret
add
enter
stc
mov
movsl
pop
push
sub
or
mov
dec
dec
push
mov
inc
sti
addr16
stc
out
pop
mov
add
ficomps
push
dec
push
ret
add
inc
and
pushf
jg
mov
jecxz
test
or
jo
xchg
leave
arpl
xor
data16
fcoms
xchg
xor
xchg
push
push
call
push
aam
jle
and
int3
inc
sbb
push
push
lret
mov
loop
imul
pop
cmp
cmp
adc
sarl
sub
dec
xor
mov
add
lds
xchg
and
je
cmp
and
and
mov
inc
in
mov
cld
icebp
shr
mov
add
inc
loopne
inc
push
pop
mulb
repz
cmp
mov
testl
sbb
test
mov
push
sbb
push
stos
mov
jns
pop
les
or
mov
xor
addr16
ret
push
inc
cmc
aaa
in
rclb
mov
sub
ljmp
add
pop
pop
sbb
fstpt
mov
xor
inc
mov
dec
add
lahf
in
fwait
rcrb
inc
jnp
stos
loopne
inc
stc
sub
lret
or
cmpsb
sbb
sub
xlat
fcom
fs
cmpsb
jmp
cmp
inc
mov
test
lahf
movsl
fcoml
aaa
push
inc
sub
add
sbb
test
sbb
ss
cwtl
and
and
add
sbb
pop
fdivr
push
add
adc
mov
movsb
xchg
and
push
inc
push
ja
xlat
inc
and
push
cmp
jns
xor
in
rcrb
imul
push
ror
add
leave
rcl
jo
cwtl
sub
lea
xchg
mov
jae
push
lret
aad
mov
sub
xchg
je
sbb
insb
dec
inc
data16
loop
int3
inc
jg
cmp
sub
int
jg
jns
stos
fs
ret
jge
enter
test
movsl
fdivrp
popa
and
fld1
orl
popa
inc
aam
mov
fcoms
mov
jns
test
sti
roll
ret
pop
inc
pop
mov
jp
sub
add
call
xchg
out
insb
jle
ja
mov
mov
push
daa
sahf
test
jecxz
fisttpll
call
insb
mov
imul
mov
fwait
icebp
shll
adc
adc
lret
jmp
push
mov
sbb
xchg
mov
lahf
imul
and
rorb
shlb
lock
clc
cmc
sti
subb
test
ret
cmp
push
cmpsb
xlat
inc
int3
insb
cmpsl
imul
test
dec
cli
popf
je
ret
inc
xlat
dec
mov
xor
pop
fnstenv
fs
inc
add
popa
mov
mov
or
xor
push
popf
or
sub
add
mov
inc
into
imul
add
outsb
dec
cmp
loope
push
or
js
push
sub
jno
sbb
scas
push
ljmp
mov
jae
adc
mov
sbb
addl
dec
arpl
or
inc
sub
stc
je
mov
jb
or
test
testl
adc
fdivl
xchg
and
mov
push
adc
lahf
popa
mov
jge
es
int
and
adcl
jae
or
dec
sbb
jae
mov
push
or
sbb
divb
mov
sbb
jo
stos
add
outsl
lret
lcall
mov
jo
xchg
mov
jl
scas
lods
jp
cmp
cmp
stos
jecxz
icebp
push
mov
push
sbb
pusha
pop
xlat
or
daa
sub
xor
stos
or
ret
jno
imul
out
or
lods
jae
xlat
inc
imul
lds
xlat
call
jb
mov
pop
jo
in
sbb
scas
push
fldt
adc
fbld
ja
mov
lcall
iret
mov
shll
cltd
sti
xor
mov
push
mov
out
sbb
jbe
faddl
mov
shld
mov
movsl
lea
mov
sub
mov
bound
cmpsl
push
or
pop
cmp
mov
cmp
dec
push
cmp
mov
and
and
aas
je
sub
negl
in
xor
ljmp
shll
je
mov
stos
xchg
lods
mov
test
mov
insb
sbb
sbb
fsts
mov
fsubp
pop
lds
push
shl
loopne
or
lret
cwtl
testl
call
cmpl
insb
loop
out
pusha
dec
jns
dec
mov
ss
sbb
dec
and
xchg
ret
ljmp
adc
inc
hlt
loopne
stc
cmc
stos
lods
push
imul
jns
adc
lahf
loopne
in
icebp
dec
sbb
daa
fsub
mov
dec
lcall
test
cli
cmp
pop
stos
clc
inc
roll
xchg
dec
lret
shrl
and
sti
out
cwtl
jp
or
adc
push
xlat
pop
jmp
pop
xchg
sbbl
jnp
repz
jno
cmp
stos
mov
repz
mov
repz
mov
aas
mov
lea
mov
mov
xor
jbe
leave
push
jnp
push
in
add
jbe
mov
repz
insl
cmpsb
fsubl
lods
push
shll
sbb
clc
es
jecxz
pop
sahf
pop
jp
mov
icebp
lock
icebp
je
mov
or
fcoms
test
mov
cmp
cmp
shrl
mov
pop
sahf
cltd
fld
imul
add
pusha
xchg
pop
or
pop
int3
cwtl
test
lret
pop
sbb
lds
cli
mov
stos
popa
subps
outsb
xorl
sbb
xor
cmp
jae
push
imul
scas
pop
daa
add
aad
xchg
or
xchg
rcl
pop
jnp
jne
aaa
pop
xor
and
mov
push
mov
mov
and
movsb
xor
mov
scas
pop
sub
xchg
adc
xchg
push
xchg
mov
cmp
test
or
mov
inc
outsl
jp
jne
repnz
div
pop
lods
pushf
add
call
fcoml
jg
into
out
mov
stos
dec
push
imul
adc
hlt
sbb
add
sbb
daa
lock
addb
pop
add
mov
jb
lret
mov
sahf
mov
int3
cmpsl
cmp
cld
mov
vpaddsb
ljmp
imul
sbb
movsl
shll
and
mov
cmp
sbb
pop
ss
cmp
fidivs
xor
ss
sbb
std
and
stc
fcmove
cmp
out
std
rol
cld
jecxz
mov
sub
push
adc
add
pop
movsb
enter
icebp
jge
jns
cld
mov
in
fstps
insb
ja
lahf
or
sbb
test
sarl
cmp
and
cmp
cmp
push
mov
movsl
push
adc
movsl
aad
js
xchg
aaa
pop
loop
push
out
fldenv
jp
inc
insb
mov
pop
cltd
lea
pusha
add
aas
cmp
fmull
sbb
insb
outsl
popf
clc
das
nop
in
inc
ffreep
js
or
inc
into
jg
add
xor
ret
xchg
pop
shl
push
cld
inc
xchg
mov
sub
popa
pusha
inc
imul
xchg
pop
ljmp
and
les
jmp
sub
mov
mov
outsb
xor
adc
or
jns
mov
push
pop
pop
fidivs
outsl
mov
lods
imul
and
mov
cmc
mov
jmp
pop
adc
mov
imul
xorb
pop
ds
add
push
and
outsl
pop
xlat
pushf
lock
shrl
mov
push
pop
pop
add
fdivrp
stos
and
fsubl
insl
shll
repz
ja
leave
ljmp
cli
decl
add
xchg
push
pop
pop
add
mov
std
jae
xchg
adc
in
faddl
je
cmp
outsb
pop
xor
ljmp
lods
push
lahf
add
or
or
in
and
or
jb
mov
adc
jae
jb
lea
aad
adc
sub
mov
bound
lods
mov
jbe
movsl
pop
jg
je
and
add
jno
dec
mov
movsl
sti
mov
cmp
adc
xor
scas
outsb
sub
mov
loop
dec
push
or
pop
in
leave
pop
rcrl
cmp
mov
xchg
out
and
mov
sti
lret
xchg
sahf
jp
enter
jb
and
int
in
ret
fs
pushf
jbe
jecxz
or
or
lcall
jne
jno
jge
hlt
cmp
mov
movsl
pop
xchg
xchg
loope
jne
iret
push
mov
push
jb
shrl
dec
hlt
or
inc
test
or
daa
push
frstor
push
pop
mov
cmp
stc
cmp
into
repz
xchg
cmp
lock
or
jmp
into
pop
adc
pop
pop
dec
dec
enter
scas
ljmp
shlb
mov
stc
imul
inc
mov
aaa
into
push
andl
and
or
jle
popa
xor
lret
sub
inc
fimull
adc
xor
sbb
mov
sbb
into
add
leave
jge
push
into
je
mov
dec
lea
xchg
and
cmp
sti
mov
stos
pop
sub
rcl
mov
sbb
adc
adc
stos
inc
call
cli
sbb
lret
add
inc
cld
fidivs
pop
sub
sbb
jnp
in
orb
xor
xchg
insb
add
cwtl
cmp
cld
scas
jno
dec
imul
hlt
sti
lods
jle
xchg
push
mov
into
push
cmp
sbb
arpl
adc
in
lahf
sbb
dec
int3
xchg
dec
mov
stc
pushf
subl
push
leave
mov
cmpsb
stos
mov
push
mov
sti
mov
inc
jns
add
clc
mov
pop
inc
push
or
mov
cmc
add
xchg
xchg
loope
jg
mov
ljmp
xchg
fsubl
fwait
les
nop
aam
in
push
jae
pop
sub
push
lcall
lea
push
mov
jnp
pop
sti
xchg
mov
xchg
das
and
jge
movb
ss
add
aam
in
dec
inc
imul
xchg
fistpll
mov
out
aas
shll
fucomi
add
push
inc
dec
clc
lods
cs
test
cmp
in
icebp
cs
test
and
and
adc
fcomip
cmpb
and
and
jae
stc
test
pop
mov
cli
push
lret
push
fiadds
dec
mov
lret
je
push
sub
adc
fildl
insl
mov
adc
ss
stos
repz
fdivrp
rolb
adc
fisubrs
das
add
jnp
jnp
shll
or
jns
in
or
lcall
icebp
lock
jmp
sahf
addr16
stos
pop
test
mov
inc
orl
push
in
jge
mov
push
dec
jl
mov
stc
pushf
jge
and
ja
jl
pop
xor
cmp
call
jno
outsb
add
or
inc
test
fistps
int3
imulb
add
lret
test
cltd
mov
lods
lret
movsl
lahf
or
xchg
xchg
pop
imul
leave
xor
or
and
xor
adc
ret
dec
fcomps
cmp
jge
cmp
mov
xor
sub
ss
mov
in
call
pop
mov
js
sub
mov
icebp
push
aas
adc
mul
lods
mov
iret
out
call
lahf
push
call
sub
push
testb
cmp
std
test
fisubs
mov
pop
sub
xor
sbb
push
cmp
pop
inc
mov
sbb
test
xchg
xor
cltd
pusha
addl
inc
jae
mov
adc
adc
dec
and
fucom
mov
jmp
dec
dec
mov
cmp
sub
or
movsb
sarb
lds
lock
addr16
out
stc
icebp
lcall
shll
mov
daa
mov
pop
add
outsb
rcrl
call
adc
cld
and
nop
and
dec
mov
in
mov
mov
xor
or
cmp
mov
jbe
jp
fsubl
ss
xchg
or
addr16
add
mov
ja
mov
adc
mov
in
xor
push
adc
add
mov
outsl
push
popf
push
rclb
lcall
pop
pusha
cli
dec
mov
cmpsb
mov
in
xor
inc
push
and
stos
jno
xchg
cmp
pop
xchg
inc
fnstenv
movsl
cli
aam
sbb
or
pop
rol
sub
mov
push
inc
outsb
loopne
jne
or
adc
mov
int
les
hlt
xor
xlat
sbb
mov
or
leave
leave
nop
pushf
mov
dec
jmp
das
mov
adc
out
pop
popa
mov
stc
jmp
and
adc
dec
push
mov
sub
in
out
mov
addr16
fstl
outsl
sub
mov
es
mov
data16
mov
inc
ret
inc
daa
out
pop
fsubrs
mov
repz
mov
bound
push
sub
mov
sub
mov
lods
jl
lock
xchg
cmp
das
sub
fists
pop
aas
je
arpl
push
imul
sub
popf
pop
mov
pop
shll
mov
cld
shlb
loop
loope
sub
mov
iret
sbb
inc
repnz
or
imul
hlt
insl
xor
mov
push
mov
or
fnstcw
mov
mov
inc
and
mov
xor
add
je
sbb
out
sub
in
rorb
dec
loope
jno
adc
xor
pusha
sub
cmp
gs
icebp
imul
cli
or
push
repz
lcall
pushf
sub
lcall
cmpsl
fadd
inc
jno
call
push
sub
mov
sub
fisttpll
enter
mov
dec
and
movsl
add
and
mov
sahf
test
imul
sub
lea
jns
sub
ficompl
fidivs
fiadds
insl
inc
pusha
stos
mov
arpl
jle
lret
rclb
push
bound
iret
xor
in
xor
int
fmul
or
ret
rcll
sbb
rcl
lret
cmp
loopne
inc
in
dec
cmp
je
lret
cmp
xor
jle
pop
jmp
jmp
addr16
push
jo
sbb
jmp
repz
adc
fbstp
or
ret
push
outsl
pushf
adc
mov
jmp
stos
push
stc
sub
popf
fwait
sbb
imul
cmp
out
inc
push
push
sub
stc
hlt
and
sub
jp
aaa
dec
movsl
sub
jmp
int
sub
or
sbb
out
xor
mov
clc
das
adc
sbb
aas
add
lcall
and
aaa
out
lock
sbb
arpl
out
push
jne
xor
dec
fwait
aaa
out
imul
add
leave
pop
mov
pop
mov
xor
inc
pop
out
call
sbb
xchg
sub
clc
pop
leave
inc
sbb
mov
into
in
lds
mov
jmp
mov
lea
add
add
mov
jns
xchg
aam
loop
int3
xchg
dec
or
sub
das
clc
sub
insl
imul
push
popf
inc
int
dec
fdivr
scas
inc
stos
inc
out
push
imul
inc
iret
jne
xor
sahf
inc
pop
mov
and
pop
and
movswl
fsts
pop
scas
popa
xchg
push
lret
repz
bound
push
cmp
sidtl
pop
insb
mov
repz
jecxz,pt
mov
out
push
fsubrl
inc
shrl
in
in
enter
aas
jg
add
aam
xor
stos
gs
xchg
adcb
inc
xchg
xor
xchg
mov
int3
sub
movsl
mov
xchg
int
sub
and
jno
push
mov
int3
scas
shr
rolb
mov
sarb
xchg
rorl
scas
popa
or
sbb
inc
dec
add
sbb
cwtl
pop
push
mov
in
or
inc
mov
or
dec
out
cwtl
daa
dec
mov
dec
jg
mov
outsl
addl
cltd
cs
mov
out
xor
loop
mov
imul
sub
paddusb
lods
lcall
mov
jnp
xchg
or
sub
ljmp
and
sbb
push
cld
inc
pop
ret
enter
ret
clc
and
push
mov
push
or
out
jb
jmp
movsb
lods
data16
cwtl
nop
js
roll
call
jnp
and
or
pop
fstps
jae
repnz
dec
or
in
cmp
test
iret
lds
add
push
sar
xchg
cltd
mov
out
mov
out
aad
mov
dec
dec
mov
and
faddl
xchg
and
nop
bound
sbb
inc
call
insb
and
in
sbb
jb
std
dec
sub
jp
xor
lret
out
int
jns
aam
lahf
and
jecxz
insl
xor
inc
gs
sub
mov
dec
lret
fidivrl
movsb
loop
mov
fsub
iret
cmpsl
jae
aas
incl
stc
sbb
pusha
int
stos
nop
sbb
js
pop
je
in
ja
mov
dec
test
in
in
popf
lcall
hlt
pop
jo
add
add
xor
or
push
into
fs
lahf
mov
dec
les
mov
mov
scas
int3
pusha
cmc
cmp
xchg
and
push
push
sbb
cmp
lea
enterw
je
mov
xchg
mov
mov
or
mov
cmpsb
aad
adc
repnz
dec
arpl
loop
in
cmp
cld
push
or
add
cmc
xor
int
leave
push
repnz
in
fsubs
sub
push
js
enter
mov
mov
add
dec
cmc
adc
push
dec
test
inc
test
ja
lds
clc
sbb
adc
cs
arpl
pop
repnz
pop
mov
mov
mov
in
rcrl
sub
pushf
dec
ds
fcompl
ss
xchg
dec
aad
pop
pushf
pop
jp
mov
mov
cmp
or
jge
shlb
enter
test
jmp
dec
pop
inc
cli
gs
mov
sbb
outsb
sbb
in
repnz
adc
ss
xchg
mov
sbb
mov
xor
scas
adc
jns
push
scas
add
jl
shll
push
inc
mov
notl
inc
push
lods
mov
cwtl
insb
aaa
aad
fldenv
dec
ret
loopne
cmpsl
idivl
jo
push
sub
repz
and
int
icebp
sub
ja
in
divl
xor
mov
dec
jbe
lds
mov
ret
in
push
xorl
inc
push
jb
push
cli
bnd
jne
xor
iret
cmp
out
sub
stos
sbb
es
or
xorl
add
lcall
or
arpl
arpl
fnsave
je
icebp
mov
mov
mov
cmp
gs
push
test
mov
ja
add
iret
daa
xchg
sub
idivb
add
sbb
ds
adc
ret
cld
outsb
cltd
lods
ljmp
rolb
sbb
cltd
imul
pop
xchg
sbb
out
push
push
dec
pop
sbb
scas
push
push
insl
addr16
add
add
push
fldenv
ret
daa
out
rolb
nop
call
and
mov
mov
cmp
lods
push
into
pop
testb
mov
fldenv
sub
in
push
std
mov
mov
sbb
xchg
jecxz
jp
inc
dec
fbstp
stos
push
jo
mov
cmp
push
inc
dec
or
jg
xor
sub
xchg
inc
lods
fs
out
or
rcr
pop
push
fnstenv
pop
xchg
loop
scas
cld
jge
ficompl
cmc
insl
ja
div
add
mov
movsl
in
mov
mov
pop
jbe
jmp
call
sti
xchg
dec
and
cmp
lods
sbb
inc
mov
icebp
ljmp
push
out
pop
fs
ret
call
cli
lds
push
or
jp
jns
dec
cmp
and
mull
cmp
adc
int
jg
imul
popa
les
into
inc
cmpsl
repnz
sub
dec
cmp
jnp
xchg
fcoml
arpl
sub
lahf
movsl
test
mov
dec
mov
push
mov
add
xchg
push
movsl
rclb
movsb
mov
arpl
fwait
xchg
cmpb
cmc
push
mov
loope
imul
andb
lods
mov
sbb
data16
punpckhbw
in
add
adc
jge
cs
sti
sub
mov
out
dec
mov
cmp
in
add
dec
dec
push
popf
sub
stc
inc
insl
icebp
cvttps2pi
roll
stc
xchg
push
inc
scas
lahf
ret
xor
xor
push
repz
aas
outsb
dec
stos
adcl
jo
and
or
add
aad
pusha
movsb
dec
pop
stos
out
xor
hlt
inc
adc
sbb
jge
out
jbe
mov
sahf
ja
ss
hlt
ret
xchg
jns
pop
stos
dec
push
dec
bound
adc
out
sub
aaa
loopne
push
imul
mov
push
pop
dec
stos
dec
inc
gs
add
ja
push
arpl
cmp
adcl
leave
inc
push
fildll
pop
sti
and
xor
pop
xchg
in
push
movsb
and
cmc
rclb
cmp
lods
jno
push
call
hlt
gs
subb
jnp
mov
or
push
mov
fistps
scas
dec
inc
jmp
sub
sub
jecxz
repnz
xchg
inc
sub
frstor
add
adc
jo
ljmp
dec
inc
scas
jle
pop
mov
dec
icebp
lret
cs
movsl
cmp
cmp
cmp
xor
sbb
adc
adc
inc
daa
add
dec
sbb
cmc
pop
sbb
xor
mov
xchg
inc
data16
bound
push
cmc
push
fcompl
pop
cmp
mov
out
nop
dec
mov
nop
pop
movsb
xchg
fwait
adc
inc
dec
cli
fdivrl
dec
fisttps
fmuls
mov
in
aad
movsl
or
sub
dec
call
in
fcom
mov
or
aam
pop
fadds
mov
and
aad
and
dec
push
pop
mov
add
push
ffree
loop
xchg
gs
loopne
call
out
pop
popf
sub
xchg
insb
add
iret
pop
push
or
mov
scas
jbe
shl
mov
pop
clc
dec
xlat
pop
or
fsubrl
cmp
sbb
sbb
test
jp
xor
mov
in
add
push
fimull
push
imul
fcoml
mov
int
inc
mov
in
int
aas
aam
cs
cmp
roll
jl
div
adcl
lea
jno
lret
pushl
xlat
idivb
sarl
arpl
loope
mov
mov
movsl
rclb
xacquire
cs
js
aas
add
out
dec
jg
jbe
jbe
dec
icebp
and
clc
mov
cmp
enter
fstps
jecxz
lods
sub
jg
mov
gs
add
sti
call
scas
les
sbb
adc
mov
fldl
loopne
lea
ja
mov
add
aaa
into
cwtl
mov
stc
pushf
adc
cmp
rclb
xchg
sbb
push
jge
add
xchg
scas
pusha
inc
call
pop
mov
xor
rclb
testl
addr16
mov
test
pop
cli
inc
test
lods
daa
add
xlat
inc
add
or
jp
mov
jae
inc
aad
pushf
sahf
faddl
out
lcall
adc
inc
cmpsb
cmp
loop
or
decl
into
in
dec
xor
xchg
std
popa
pop
sbb
xor
xchg
add
icebp
aam
push
loop
ret
add
clc
leave
push
adc
cmpsl
mov
mov
inc
loope
cmp
lcall
call
popa
xor
je
pop
or
repz
lods
shl
shll
inc
cmc
les
pop
mov
lahf
xchg
xchg
cmc
cmpsb
daa
inc
lahf
lods
lds
and
add
inc
out
and
dec
clc
pusha
lock
arpl
mov
mov
ds
jg
in
push
pop
add
outsl
dec
push
popa
sub
sub
sti
mov
sub
pop
mov
pusha
leave
dec
std
inc
sub
xchg
fists
sub
jp
outsl
sarb
std
in
jge
push
out
popf
mov
and
cwtl
mov
cmp
or
push
outsl
fsubrl
imul
jecxz
loope
out
xchg
sbb
or
dec
dec
mov
pop
ss
jo
stc
and
and
fwait
je
loopne
dec
or
add
loop
jno
xor
mov
gs
push
lods
lea
sub
rcrl
xor
xor
xchg
call
gs
iret
outsl
xchg
enter
lods
xor
movsl
ret
cld
sbb
mov
jb
mov
nop
and
aas
push
or
out
xor
rorb
test
or
jo
push
imul
push
ss
cs
cmp
or
rcl
mov
imul
test
in
mov
jmp
into
ret
mov
cmc
fdivrs
adc
test
or
lret
add
mov
push
sbb
bound
mov
mov
or
or
movsl
adc
stos
or
ds
mov
loope
push
push
rep
lds
inc
sbb
stc
jg
scas
push
jp
fs
cmp
push
arpl
mov
rcrl
pop
push
pop
scas
push
jo
adc
sbb
lret
jp
cmp
shl
daa
out
test
test
jp
cmp
cmp
mov
dec
add
pop
jle
rcll
push
sub
dec
cmp
mov
xchg
and
inc
daa
out
inc
data16
movsb
mov
cltd
and
popl
xor
movsb
mov
inc
add
leave
inc
xchg
jno
dec
push
or
dec
pop
fwait
adc
cwtl
push
jne
mov
mov
sbb
jg
ljmp
and
test
arpl
cmp
data16
out
pop
je
lea
mov
mov
jmp
fdivp
lea
fadds
idivl
cmp
xchg
iret
pop
cmp
sti
imul
and
test
je
lds
fs
movsb
fsubr
fisttps
cmp
cld
mov
jnp
daa
daa
idivl
mov
add
push
mov
and
xchg
call
mov
ss
sbb
jb
lea
pop
jmp
mov
jb
mov
cmp
shll
or
push
scas
mov
cmp
lcall
add
popf
aad
adc
fwait
leave
mov
dec
cmc
jecxz
dec
outsl
inc
test
adc
jge
jne
or
sbb
lods
push
lock
lcall
adc
sub
decl
pop
push
lds
and
int3
aaa
mov
js
insl
cmc
pushf
mov
pop
fidivrl
pop
in
jl
decl
jbe
cs
call
adc
pop
sbb
add
fstps
mov
mov
repnz
xchg
mov
addl
fstp
pop
dec
fildll
fdivrs
push
shl
iret
inc
test
imul
mov
push
repnz
mov
pushf
dec
mov
cmp
dec
je
xor
push
cld
aas
push
sub
and
sub
push
add
imul
mov
fucomp
pusha
mov
add
out
sbb
loopne
pop
sahf
scas
insb
mov
int3
mov
out
lods
dec
sub
nop
inc
adcl
sub
xor
out
pop
or
add
mov
push
mov
or
or
jns
sub
xor
jmp
hlt
fs
xchg
sub
add
inc
mov
xlat
scas
stc
lcall
pop
adc
pop
and
or
jno
mov
add
movsl
ficoml
xor
cltd
jle
loop
push
xchg
sbb
pop
adc
mov
cmp
cli
call
xor
mov
dec
adc
xor
loopne
sbb
fs
fbld
es
push
push
popa
adc
aam
and
cmp
dec
inc
push
push
stos
jb
iret
ss
sti
sbb
xchg
popa
ret
repnz
test
xor
lret
sahf
in
in
sbb
decl
cmpb
ficomps
scas
arpl
mov
es
xor
add
das
pop
xor
cmc
pushf
jecxz
outsb
mov
pop
cmp
pop
clc
inc
pusha
jns
push
adc
mov
adc
pop
mov
fdivl
add
and
push
insb
fcomp
les
cmp
ret
cltd
js
aam
scas
aam
adc
sbb
flds
xchg
popa
inc
adc
bound
rclb
scas
dec
mov
jb
add
xchg
mov
xchg
lahf
adc
adc
jecxz
jbe
push
mov
or
gs
push
jae
sbb
es
sbb
in
pop
stos
sbb
fstl
out
outsb
adc
mov
outsl
je
cwtl
cmpl
sub
cs
mov
or
arpl
out
dec
pushf
or
pusha
enter
loopne
jae
mov
push
adc
mov
pop
push
cmp
les
repz
dec
push
test
shrl
dec
ja
sbb
and
lds
jno
push
inc
shrb
or
jns
loope
or
or
or
cmp
adc
cltd
jns
add
mov
jge
mov
popf
sahf
push
adc
lret
stos
cmp
cs
pop
or
sub
pop
rorl
xor
cmpsl
mov
jle
sti
in
pop
loopne
xchg
mov
and
push
int
call
adc
sub
dec
and
cwtl
sbb
xor
jno
lahf
aam
pushf
les
xchg
in
pop
pop
jmp
inc
and
mov
xchg
in
xchg
inc
xchg
mov
mov
cmpsb
inc
test
inc
jp
xor
xchg
insl
pushf
test
test
pop
sub
xchg
adc
or
inc
mov
pop
fistpl
int3
jl
sahf
mov
pop
out
scas
cmp
out
insb
loopne
fnstsw
ret
jg
daa
add
push
push
in
pop
mov
fisubrl
ljmp
shl
xor
subl
addr16
fisttpl
mov
aam
popa
pop
ja
push
aaa
aas
push
cwtl
xorl
aam
jb
out
jns
dec
aam
call
imul
add
and
or
sbb
in
lret
push
loop
test
rorl
cmpsl
xchg
sbb
scas
bound
cwtl
je
sub
jb
xchg
jns
outsl
mov
pop
push
iret
cmp
mov
aaa
xchg
cmp
xchg
lea
and
loope
push
mov
lahf
adc
mov
outsb
in
imul
sub
addr16
fsts
adc
push
push
leave
or
or
out
push
lahf
pop
repz
pop
pop
dec
shr
insl
ljmp
adc
pop
int3
push
repz
into
out
inc
je
dec
pusha
mov
enter
sbb
sub
in
xor
adc
cmp
loopne
inc
jae
jecxz
xchg
inc
xlat
ds
or
mov
push
cmpsl
xlat
mov
mov
jecxz
mov
pop
in
fdivs
jb
xchg
xor
mov
aam
orl
inc
sub
shlb
mov
push
imul
mov
das
lock
jg
aad
call
loope
push
out
inc
outsb
enter
dec
lret
sti
fs
leave
inc
out
inc
aam
push
stos
iret
xchg
out
mov
mov
cmp
adc
pop
dec
iret
idivb
mov
xchg
outsb
dec
and
sbb
lret
scas
adc
lods
jns
and
ss
sbb
add
push
and
xchg
outsb
inc
inc
jl
fs
and
push
cld
mov
sahf
adc
dec
les
mov
and
test
add
sub
rcl
push
lahf
xor
lret
inc
jne
sbb
das
jb
jmp
repz
sbb
inc
jno
hlt
xor
inc
inc
push
sub
aaa
repnz
jnp
imul
xor
sub
sub
mov
xchg
sbb
subl
cmp
pop
mov
push
clc
inc
xchg
jae
sbb
push
test
cmpl
jge
mov
xor
sar
out
jp
xchg
and
cmp
out
popa
cs
inc
mov
and
cmpsb
mov
sub
lcall
or
dec
dec
and
xchg
call
shl
lock
daa
jnp
xchg
lahf
sbb
jne
pop
scas
or
cmc
js
leave
inc
mov
test
xor
sbb
mov
aam
jmp
mov
and
adc
aaa
dec
add
dec
int
aas
aam
xchg
push
repz
scas
push
gs
shlb
rcrb
jmp
test
inc
sub
lods
test
pop
cmp
testb
add
repz
xchg
cmp
pop
sub
sub
pop
loopne
and
mov
loop
es
dec
aas
test
arpl
shrl
aad
pop
dec
in
mov
lcall
scas
cli
sub
fwait
push
adc
fimull
inc
jmp
adc
adc
add
push
and
pop
imul
lods
jbe
jns
mov
push
sbb
jno
movsb
dec
jle
add
pusha
adc
popa
add
dec
or
inc
clc
mov
sarl
pop
sub
cmp
sbb
outsb
sbb
loopne
mov
sub
lahf
fistpl
ret
outsl
dec
je
mov
dec
stc
pop
lret
scas
xlat
push
lds
pop
jle
sbb
lahf
fsubs
daa
mov
sti
dec
orl
out
sti
and
sub
imul
adc
sbb
pop
icebp
inc
lret
jno
xchg
mov
test
ret
aad
jbe
gs
into
scas
ds
adc
dec
setge
xchg
jmp
dec
push
cmpsb
xchg
pop
adc
in
push
xchg
cld
imul
cltd
fcmovb
push
mov
in
xchg
imul
ds
cli
mov
push
hlt
mov
test
cli
loope
gs
mov
or
sbb
and
aas
push
add
or
sub
adc
into
fwait
xchg
pop
cmp
mov
jnp
push
fstpl
xor
xor
and
lods
inc
xorb
inc
push
mov
cmp
flds
das
jbe
xchg
gs
dec
in
cmp
add
sbb
aaa
aad
imul
mov
sbb
jmp
jmp
ljmp
jg
iret
mov
cmp
xchg
aad
cmc
jmp
insb
inc
ljmpw
mov
mov
sbb
mov
xchg
dec
ret
mov
scas
loopne
and
push
movsl
mov
jp
es
cmc
fs
cld
pop
push
push
jns
adc
testl
lret
cmpsb
pop
jecxz
out
out
jl
pop
jmp
frstor
std
pop
mov
push
call
jle
out
iret
push
jmp
pop
or
dec
imul
adc
add
test
fs
xchg
repz
jno
fnstsw
js
clc
push
sub
mov
sub
xor
cmc
cmp
cmpsb
cmpsl
stc
mov
inc
jmp
aas
cwtl
fdivrs
cmp
aam
fnsave
pop
mov
cli
mov
and
fdivs
test
cltd
mov
dec
sbb
shl
cmpb
inc
lret
inc
shlb
inc
sbb
sarl
sahf
mov
scas
or
test
sbb
pop
and
inc
lea
and
out
repnz
cmp
mov
jb
and
pop
js
add
in
pop
xor
add
repnz
and
adc
in
stc
xor
add
scas
iret
fs
mov
sbb
pusha
aad
aas
and
stc
jbe
cld
aam
out
ljmp
and
dec
sti
incl
ret
hlt
inc
in
lods
sbb
or
pop
mov
into
clc
sbb
cmp
pop
test
pop
cli
and
roll
push
push
out
pop
cmp
mov
dec
fnstcw
mov
jge
push
mov
push
out
sbb
push
add
movsb
lcall
adc
out
or
clc
pushf
repnz
mov
push
cmp
dec
mov
push
sub
call
jp
or
sub
dec
sti
mov
inc
leave
mov
lahf
imul
jg
adc
cli
add
push
xor
shlb
mov
ss
cmpsl
push
hlt
mov
mov
das
jg
test
mov
dec
dec
cmp
xor
fcom
mov
inc
pop
testb
adc
mov
into
adc
pop
femms
popa
sub
jecxz
mov
xchg
and
inc
enter
not
mov
lock
lcall
jmp
stos
enter
cmp
aam
icebp
xchg
mov
inc
out
xchg
mov
xor
jne
ja
jbe
jbe
fists
fstps
and
fwait
jb
loop
pop
out
adc
ror
sub
cmpsb
sub
and
repz
sbb
xchg
mov
mov
jbe
sbb
cmp
jge
add
push
cmpsl
fstl
push
push
inc
aad
and
cmp
ret
imull
jle
sbb
pop
cmp
mov
mov
mov
or
xchg
dec
mov
mov
or
sub
xor
mov
lret
sbbl
jno
sub
scas
add
shrl
fwait
in
in
cmp
lcall
lods
xor
adc
movsl
mov
repz
push
outsl
daa
inc
cld
out
sub
aam
xlat
ja
dec
movsl
pop
mov
or
stos
ja
fstpt
xchg
jne
inc
popa
lea
loop
add
xor
add
push
sub
shll
jl
lcall
push
fs
and
in
push
aas
lret
mov
rol
pusha
jnp
or
movl
test
mov
adc
inc
cmc
out
fdivrp
sahf
icebp
sbb
pushl
jmp
out
int
mov
imul
push
les
pop
dec
adc
adc
mov
fdivrs
jg
and
push
or
test
lds
hlt
and
mov
push
inc
mov
inc
jbe
dec
cmc
mov
inc
in
push
xchg
dec
xor
dec
pushf
das
inc
addr16
scas
lods
ja
cmp
cwtl
cmpsb
fildll
pop
jl
xor
shl
mov
aaa
pop
pop
jmp
mov
lcall
push
in
jg
adc
iret
shrb
xchg
fistl
das
cld
add
aam
in
jno
pushf
cmp
or
sbb
in
scas
cmp
cmpsl
sub
cmp
dec
out
jae
sub
aam
mov
inc
aam
lret
insl
popa
cli
and
into
dec
and
or
sbb
mov
out
pop
push
push
negb
adc
lds
add
pop
mov
mov
jo
or
jmp
mov
sbb
imul
pop
cmp
lret
les
pop
test
into
fdivrs
fcompl
cmp
test
cmp
ss
out
mov
sbb
sarl
jnp
jb
fsts
pop
and
pop
jnp
mov
test
scas
test
repz
sbb
sbb
mov
dec
jl
ds
lods
outsb
xchg
dec
pop
adc
pop
or
ljmp
mov
and
mov
add
aaa
cltd
das
cltd
scas
jle
xchg
push
lahf
mov
cmc
jmp
aaa
or
lret
sar
sti
cs
mov
dec
repnz
mov
cmpxchg
mov
or
nop
push
mov
ja
lds
sub
lea
mov
adc
lret
sahf
pop
push
cmc
fwait
dec
iret
jecxz
pop
push
fs
out
sbb
cmp
sbb
insb
loope
pop
and
and
out
in
loop
mov
jnp
lcall
ficoml
data16
test
ljmp
push
scas
ljmp
and
stc
pushf
adc
sbb
in
ss
mov
das
fstpt
repnz
xchg
mov
movsb
adc
cs
add
adcb
cmp
stos
sahf
jle
lahf
pop
out
aam
rcll
mov
outsl
pop
nop
test
add
ss
mov
mov
xchg
xchg
je
jae
scas
jns
pop
lsl
cmp
mov
cs
mov
pusha
mov
push
push
cmpsb
shlb
jle
rcrb
mov
cs
pop
cmp
dec
jge,pt
dec
js
lret
repnz
aam
mov
mov
jecxz
push
mov
mov
or
loopne
pop
inc
pop
xor
std
jge
cli
fwait
add
sahf
add
sbb
imul
addr16
jl
push
in
jl
fld
pop
mov
pop
push
hlt
lds
mov
leave
std
test
pop
cmc
repz
rclb
loope
ret
dec
mov
mov
cmc
pusha
test
aam
jg
scas
dec
push
jb
fwait
scas
sub
mov
mov
repnz
cmp
ss
lahf
mov
adc
xchg
mov
dec
xlat
out
insl
lret
pop
cmp
stos
jl
xor
cvtps2pi
int
sahf
decl
fnstsw
mov
pop
repz
in
sub
cs
ja
mov
and
aam
pop
or
jp
jecxz
dec
ljmp
into
call
push
mov
call
iret
sbb
stc
shl
into
sbb
das
das
xchg
sbb
jl
and
out
test
push
mov
sub
pop
and
add
dec
mov
add
jnp
adc
lods
jmp
mov
out
mov
xor
iret
nop
adc
xor
sub
cmp
aas
sub
sub
fsubr
inc
pop
xchg
push
js
pop
setae
and
fldcw
scas
sub
insl
and
xchg
aas
pop
pcmpgtw
scas
mov
ds
lods
inc
jg
push
cs
jp
outsl
popaw
sbb
sbb
inc
push
sar
mov
cmp
scas
dec
stc
and
mov
arpl
xchg
in
adc
std
push
cmp
or
xlat
fnsaves
sub
jg
sub
inc
jmp
push
push
test
in
fdivrp
mov
sub
mov
in
xor
push
int3
push
stos
dec
and
adc
mov
push
loop
push
pop
aas
adc
or
sbb
pop
pop
stos
mov
lret
and
cmp
lret
clc
pop
fbstp
movsl
and
xor
inc
and
inc
jg
ljmp
dec
mov
or
call
aas
sub
pop
adc
ljmp
inc
pop
xchg
imul
int
jnp
sete
cmc
fwait
pop
sub
xchg
mov
mov
jns
out
mov
cmp
jmp
shrb
bound
aam
sbb
and
lods
and
and
pop
ficomps
ds
mov
fcompl
insl
sub
mov
lea
pop
sbb
loope
mov
mov
test
mov
cwtl
jg
sbb
sahf
cltd
lret
stc
aad
xor
dec
adcb
js
push
fisubl
fsubp
or
out
cmp
sub
jnp
out
push
pop
and
mov
in
add
push
sub
lret
fsubrl
stc
dec
jecxz
sti
cmp
insb
push
mov
sbb
adc
mov
inc
jae
sbb
mov
sbb
add
bound
fs
mov
sub
jne
mov
dec
out
in
arpl
out
ss
outsb
aas
and
dec
xor
mov
imul
into
mov
fcmovnb
inc
dec
jl
dec
and
push
shrl
gs
cmp
or
gs
add
enter
jbe
orl
dec
jo
mov
mov
xchg
or
adc
dec
add
jge
xor
cmc
add
xor
inc
xor
or
aaa
ficomps
psllw
add
into
push
mov
jmp
push
mov
nop
jno
dec
push
fdivl
dec
imul
cmpsl
lahf
inc
jne
cmp
push
fbstp
repnz
mov
addr16
add
mov
lahf
hlt
mov
mov
shlb
xchg
adc
test
mov
sbb
lret
stc
stos
pushf
lcall
jb
xor
out
fidivs
ret
xor
aad
fwait
xchg
inc
xchg
mov
arpl
lar
inc
ss
lcall
stos
scas
out
lods
aam
adc
push
mov
inc
hlt
xchg
mov
mov
or
jl
inc
add
push
jl
fistpl
cltd
in
mov
aaa
mov
faddl
out
sbb
jge
xor
leave
out
into
lods
daa
out
push
push
xchg
adcl
ja
repz
pop
cmp
or
int
pushf
cld
push
stc
jmp
scas
int
jg
push
xchg
jnp
rcll
push
jecxz
or
into
lock
pop
out
lods
pop
mov
sub
int
mov
cmp
ja
inc
pop
or
mov
dec
mov
hlt
inc
or
into
or
test
cwtl
std
jmp
out
mov
adc
outsl
inc
clc
or
and
jno
sti
push
dec
iret
adc
cmp
adc
icebp
ljmp
sbbl
mov
adc
sarl
mov
jbe
jecxz
mov
stos
mov
mov
xor
rcll
daa
cmp
jle
sbb
mov
cltd
ret
or
sbb
adc
mov
mov
ljmp
outsl
shll
jecxz
clc
enter
mov
jbe
cmpl
jmp
loopne
jle
sub
sti
sub
sti
out
push
sahf
or
test
loopne
std
call
out
adc
pop
ljmp
and
sbb
fldt
cmp
xor
sub
xorl
cmc
mov
int3
or
scas
psubb
jg
mov
pop
icebp
je
iret
hlt
pop
lock
push
bound
mov
cld
mov
js
cli
cmp
jge
or
movsl
in
lahf
or
or
call
repz
and
mul
mov
push
jmp
pop
nop
enter
ficoml
aam
aad
inc
cs
push
stos
sar
jo
pop
jp
flds
cmp
adc
sub
mov
ret
mov
push
decb
test
jnp
leave
mov
mov
ljmp
or
lcall
cli
dec
ds
xor
bound
aaa
push
jmp
arpl
xchg
cmc
notl
add
xor
repnz
pop
xor
push
xor
les
or
jecxz
push
or
sbb
in
xchg
fidivrs
push
jge
mov
xchg
cs
jae
test
inc
mov
sbb
mov
testl
sbb
push
dec
lcall
ds
sub
push
out
fisubrs
dec
pop
repnz
aaa
dec
adc
ret
cwtl
iret
out
cmp
fnsave
add
outsb
loop
lods
ret
sti
pop
int
or
jg,pt
adc
insl
jp
or
xor
sbb
roll
mov
push
ja
or
inc
mov
mov
jo
mov
idiv
mov
hlt
or
mov
cs
in
fucom
xor
adc
dec
cld
xor
repnz
fs
test
sub
adc
lcall
adc
gs
jnp
imul
dec
add
aam
cltd
repnz
xchg
rolb
movsl
xor
lret
cmpsb
adc
xor
pop
andb
jnp
dec
fprem
call
rcl
sahf
and
insb
fsubrl
scas
fidivl
fstpl
or
cmp
push
xor
xor
xchg
imul
aam
sarb
sbb
data16
push
hlt
sbb
jne
or
jge
popa
daa
dec
sbb
xor
mov
fsubl
pop
mov
cmc
pusha
sbb
push
incb
enter
cmc
in
mov
cmp
mov
jecxz
pop
xor
dec
cmpsb
ds
add
in
cmp
sti
sbb
ljmp
aas
jns
dec
lret
cmp
das
dec
mov
fstps
shlb
hlt
and
adc
pusha
shll
and
pop
imul
pushf
xchg
int
pop
int3
add
pop
rclb
lock
xchg
out
imul
fcoms
mov
in
in
notb
test
ljmp
scas
fiaddl
daa
sbb
ljmp
stos
or
and
add
popa
pusha
cwtl
or
xchg
mov
mov
and
jle
fdivs
test
mull
aad
push
mov
pusha
dec
mov
pop
mov
movsb
jne
inc
sub
adc
inc
pop
int
add
lahf
or
lods
fistl
loop
sti
cmp
cmp
ljmp
inc
pop
push
pop
mov
pop
adc
insb
adc
and
movsb
add
cld
pushl
popf
mov
or
ljmp
repz
pop
ret
sarb
or
std
jbe
add
push
fwait
sub
out
jge
aam
int
sub
lcall
scas
popa
icebp
inc
sbb
in
mov
inc
mov
test
xor
inc
pop
push
mov
adc
in
mov
fcmovne
add
mov
insb
divb
jns
mov
pop
into
adc
dec
and
insb
imul
pop
sarl
lret
pop
iret
add
lods
hlt
std
jp
add
adc
sbb
mov
xchg
repnz
xor
jl
je
xor
dec
stos
sbb
adc
xlat
lahf
cld
push
push
xchg
mov
jb
xchg
enter
jbe
addr16
mov
lds
leave
dec
mov
jge
lock
loop
or
test
lea
lds
sub
mov
push
sbb
cmp
mov
mov
pop
mov
cld
mov
adc
jae
mov
inc
adc
fcoms
lcall
jae
aad
sbb
sbb
shlb
shlb
loopne
lahf
push
movsb
sbb
dec
loopne
pop
les
jecxz
cmp
xor
fisubrl
adc
clc
jg
insl
lret
xor
inc
test
push
decb
ja
push
sub
jbe
dec
js
ss
xchg
adc
lds
fstps
test
sti
xchg
xchg
xlat
ret
adc
movsl
shll
dec
aaa
test
xor
jnp
or
pop
popa
or
sar
daa
mov
shll
pop
loope
and
xlat
dec
fdivr
or
popf
mov
popa
rclb
enter
jne
dec
das
xchg
aad
mov
ret
mov
jne
andl
lods
pusha
lock
fwait
mov
arpl
push
shrl
cli
in
xchg
popa
mov
in
cmp
jecxz
sahf
call
dec
cld
xor
iret
xchg
stos
cmpsb
mov
int
dec
push
mov
pushf
xchg
les
mov
inc
xor
xlat
out
pop
and
in
fildl
adc
arpl
fisttpll
mov
push
jle
mull
inc
into
jle
jmp
stc
or
jmp
mov
insb
insl
mov
scas
js,pn
shrb
aaa
sub
fstps
xchg
insb
int3
and
sbb
jo
add
jle
inc
cltd
and
push
sub
xchg
rolb
sbb
xor
movsl
fcoms
add
inc
inc
mov
mov
std
int
push
xchg
arpl
test
sbb
xor
iret
push
mov
imul
jne
push
or
dec
dec
es
and
dec
mov
inc
shll
out
jge
adc
jne
pop
sbb
enter
mov
loopne
adc
jmp
xor
mov
add
daa
add
fwait
xor
sub
dec
rcl
insb
aad
test
inc
fldcw
repz
push
stos
call
clc
stos
adc
jns
adc
jae
repnz
or
push
cs
jo
xor
js
dec
mov
int3
outsl
mov
inc
xchg
or
inc
mov
aaa
addl
mov
popa
jnp
push
fs
mov
js
fs
dec
pop
je
loope
mov
jmp
bound
and
xlat
or
movsl
outsl
stos
adc
xchg
jge
jb
jl
adcb
mov
xchg
movsl
push
inc
pop
mov
imul
in
inc
pop
notb
mov
pop
adc
push
dec
mov
dec
mov
inc
test
mov
pop
or
loopne
pop
jg
outsb
sbbl
rorl
ret
repnz
pop
mov
sub
add
arpl
sub
pop
lret
into
xchg
jae
pop
filds
mov
jb
push
dec
mov
addr16
inc
pop
cs
cmp
pop
ja
sub
pop
sbb
sti
cmp
in
out
icebp
inc
sub
cmp
adc
xor
and
lret
inc
mov
adc
dec
xor
cmp
xchg
sarl
rcr
or
ja
repnz
imul
sub
pop
loop
sbb
in
cmpsb
push
inc
stos
fldcw
sub
mov
adc
fsubl
movsl
insl
les
imul
xor
stos
test
or
push
ret
lahf
in
into
jne
push
pop
jno
bound
push
sar
push
dec
push
jne
add
stos
mov
dec
out
mov
dec
jge
enter
cltd
push
cs
je
repnz
inc
xchg
movsl
test
mov
shll
outsl
std
movhps
sar
mov
adc
mov
imul
sbb
push
lock
push
mov
sahf
and
outsl
dec
adc
xor
fadds
test
rorl
dec
jne
jecxz
sbb
stc
ret
inc
push
das
push
outsb
or
push
push
je
lcall
cmp
mov
dec
xor
and
mov
repnz
fcomps
jnp
ljmp
das
and
fadds
scas
or
xchg
stos
fwait
in
lret
adc
add
fwait
cmp
inc
lds
sbb
jp
pop
add
pop
sub
add
adc
movsl
push
mov
xor
lods
adc
insl
push
lea
lret
xchg
xchg
repnz
cmp
rcrl
fwait
rcll
fiadds
inc
mov
loop
and
mov
adc
jl
pushf
test
jp
cmpsb
mov
add
push
jae
sarb
mov
mov
xchg
xchg
icebp
mov
nop
and
outsb
leave
scas
in
cld
outsl
gs
ljmp
sbb
mov
frstor
mov
outsb
outsb
jecxz
mov
in
sub
inc
pop
mov
pop
sub
push
in
xor
fsubrs
jl
sti
inc
jge
std
enter
ror
and
jns
xchg
or
push
mov
adc
dec
shrl
push
mov
mov
jp
xor
pop
adc
sub
mov
cmpsb
inc
push
push
int
int
adc
lcall
test
pop
and
fnstsw
sbb
fyl2x
loop
lds
jb
pushf
xor
mov
imul
xchg
xor
inc
pushf
in
pop
mov
xchg
sbb
adc
mov
movsl
push
mov
jmp
test
ds
fs
aad
cmpsl
and
mov
jg
ss
xchg
and
lds
sub
push
sbb
hlt
push
add
mov
mov
push
insb
and
popf
dec
js
adc
xchg
arpl
add
movsl
cmp
lods
loopne
fs
push
mov
inc
scas
jmp
outsb
mov
cmp
insl
hlt
notb
lods
sti
scas
adc
mov
adcl
gs
jmp
adc
dec
jecxz
pop
dec
lods
lret
in
adc
cmpsb
sbb
push
fwait
inc
xor
or
sub
and
aas
jbe
push
xchg
aad
inc
push
je
or
fwait
push
insb
xchg
push
cmc
test
xchg
call
les
sahf
insl
inc
sub
sbb
mov
mov
rorb
dec
test
ret
mov
cmpl
incb
sarb
xor
adc
xchg
or
xlat
popa
xor
cmpsl
lret
mov
rcll
shufps
or
sbb
and
or
mov
hlt
xchg
iret
jb
and
xlat
mov
add
aam
leave
jge
cmc
jle
fisubrs
cli
dec
dec
or
adc
adc
add
cltd
lock
mov
jae
and
aad
sbbb
dec
mov
cmp
ret
jo
inc
nop
cs
gs
hlt
mov
jle
mov
push
pop
cmp
sbb
inc
inc
call
xor
push
fcmovb
sahf
cmc
xor
xor
jg
lcall
fsubl
or
scas
cmp
pushf
lods
sbb
dec
sbb
adc
adc
cmpsl
xor
jle
scas
pushf
sub
imul
adc
insb
pop
dec
xlat
xor
push
dec
jo
xchg
push
xchg
test
cltd
mov
stc
mov
js
fisubrl
add
les
pop
out
and
icebp
mov
cmp
movb
or
hlt
mov
into
movsl
cmp
pop
cmp
xchg
scas
inc
iret
or
aad
add
repz
push
sar
push
jle
dec
and
add
xchg
push
iret
mov
pop
sbb
ss
sub
lods
roll
repnz
mov
lods
cmp
fldl2t
add
call
inc
and
dec
clc
inc
cwtl
imul
fiadds
push
inc
lret
sti
imul
imul
addr16
fwait
pop
or
addr16
bound
ljmp
pop
hlt
outsl
sbb
icebp
xor
incl
cmp
filds
jno
fwait
add
inc
dec
adc
in
test
mov
int3
or
js
test
repnz
mov
out
out
push
aas
mov
les
in
mov
sbb
int3
xchg
inc
sbb
sbb
in
pop
xchg
ret
clc
add
adc
add
mov
mov
addr16
jo
addr16
pop
mov
and
inc
mov
cli
inc
sbb
sub
jne
jae
cs
cmp
pop
mov
dec
out
in
dec
pop
cs
xchg
lahf
add
in
adc
dec
jl
std
fadd
rcrl
jne
je
xlat
lods
sahf
mov
aas
fnstenv
mov
pop
inc
cwtl
and
mov
shld
je
dec
add
xor
out
push
enter
lods
and
adc
push
push
je
movsl
mov
insl
mov
sbb
fildll
xchg
int
test
loope
movsl
movsl
repnz
pop
mov
sbb
test
cmp
cmpsb
mov
in
cmp
mov
push
push
ss
fldenv
xor
mov
inc
cmpb
lock
cmp
sbb
jb
insb
and
out
sub
mov
inc
add
dec
dec
repnz
jbe
mov
jnp
fwait
repnz
pop
or
aad
mov
xchg
and
xor
inc
xor
test
pop
push
and
push
pusha
sub
movsb
pop
stc
and
cmp
roll
jno
or
xchg
out
xor
xor
shll
xchg
jmp
mov
fidivs
push
jecxz
dec
and
jae
in
mov
xchg
xchg
daa
mov
fidivrs
sub
ja
repnz
adc
imul
adc
cmp
inc
jae
adc
mov
out
jae
jnp
pop
loopne
pop
fimuls
jno
sub
jmp
mull
jmp
lea
dec
jg
mov
test
add
jbe
inc
inc
pop
in
xchg
pop
aam
sbb
add
jno
sub
sbb
je
test
jge
add
mov
test
inc
in
ret
call
xchg
xchg
or
mov
sub
dec
imul
fistpl
push
jecxz
mov
inc
roll
mov
paddsw
adc
inc
mov
cmp
xchg
inc
imul
pop
xchg
cs
fldt
in
mov
out
and
call
arpl
das
xor
jbe
cwtl
out
xchg
pushf
and
push
stc
sub
adc
mov
mov
jp
jae
jle
in
int3
cltd
jg
pop
dec
int
xorl
jo
pop
lcall
inc
test
popa
stos
insl
mov
push
lahf
stc
and
sub
or
mov
jne
xchg
sti
xchg
ret
pusha
movl
xor
mov
addr16
push
ret
loope
push
aas
call
cmp
cmp
loop
sti
fsqrt
ljmp
jbe
imulb
pop
mov
in
xchg
sub
lahf
mov
push
add
ret
das
and
pop
push
test
push
int
lods
insl
cmp
mov
mov
dec
push
xchg
test
je
shl
test
sarl
cmc
aaa
fwait
adc
mov
jb
xchg
cmpsl
mov
loopne
test
cli
repnz
xchg
and
into
sbb
cltd
out
std
cmp
pop
cmp
push
in
stos
iret
jle
pop
imul
inc
dec
push
pop
xor
fcmovnb
sub
jae
das
outsb
insb
mov
xchg
insl
dec
sub
dec
dec
test
shll
xor
shl
push
lahf
mov
jae
loop
mov
xchg
mov
sbb
dec
pop
mov
jne,pt
sub
mov
inc
cmp
jl
pop
xor
mov
fs
inc
in
mov
or
stos
mov
into
xlat
fdivp
jne
jle
xchg
shrl
icebp
mov
xchg
inc
out
xor
in
dec
or
jge
jns
sub
sti
daa
dec
jecxz
mov
inc
mov
mov
mov
cmpsb
fbstp
mov
xchg
aad
scas
fbld
jns
lret
mov
mov
mov
add
stos
inc
movsb
add
and
imul
sub
mov
xchg
test
cwtl
mov
xor
fcmovnb
out
mov
push
enter
into
test
push
or
pop
cwtl
sbb
cltd
jb
movsb
mov
repz
fstpl
das
out
pop
stos
jl
out
mov
xor
mov
daa
mov
push
cmc
push
inc
xchg
mov
jo
xor
sub
loope
sub
pop
jnp
icebp
aad
sqrtps
lahf
jnp
sub
out
loope
hlt
imul
cmpsl
jnp
pop
sub
test
adc
sub
mov
sahf
inc
shlb
jno
xor
aaa
push
icebp
or
int3
ljmp
fwait
adc
lds
fstpt
inc
lahf
stos
repnz
mov
push
dec
sub
out
pop
xchg
mov
leave
jl
outsl
in
xorl
xchg
lds
lret
nop
lret
sar
inc
mov
adc
or
or
xchg
pushf
jo
sbb
scas
aam
loop
insl
xchg
es
sbb
mov
call
push
dec
mov
sbb
pop
cmp
testl
adc
jge
insl
push
xchg
in
cmp
add
sbb
lds
push
mov
xchg
adc
enter
dec
imul
sub
dec
das
jo
mov
adc
bound
rorl
hlt
dec
incb
pop
repnz
sub
repz
dec
sub
push
mov
mov
roll
mov
push
fldt
pop
fists
sub
push
lods
xchg
mov
mov
xor
popa
xor
pop
fists
pop
cmp
jae
gs
cmpsl
aaa
mov
push
pop
fs
fcmovu
dec
out
shrb
xor
lds
jb
out
sub
jns
insb
pop
popf
xchg
pop
nop
cld
andb
jg
jp
and
les
outsb
adc
clc
or
pop
jo
adc
mov
jnp
or
jecxz
xchg
inc
sub
lcall
cmp
icebp
push
adc
adc
les
cmp
add
fsubrl
mov
movl
add
xchg
mov
and
nop
pop
jb
jmp
rcrb
cs
cltd
xchg
sub
push
decb
scas
or
das
stc
aad
std
push
jmp
or
mov
add
push
push
shr
movsl
lods
in
enter
repnz
fldenv
pop
test
pop
cmp
nop
loopne
sbb
mov
pusha
jmp
xchg
adc
imul
pop
sbb
shr
loope
sarl
cmc
push
sub
push
xor
push
out
mov
mov
add
inc
out
adc
mov
pop
cmp
fwait
leave
sub
rcr
int3
jg
and
mov
outsb
rclb
push
lods
loop
sub
loopne
mov
loopne
aaa
insl
les
mov
pop
je
adc
pop
xchg
or
loop
addr16
pop
iret
mov
lcall
lret
sbb
dec
fs
out
mov
lcall
ss
inc
fwait
dec
rorl
adc
clc
and
test
rcl
int
inc
ljmp
inc
ror
xchg
push
pusha
scas
xor
jae
mov
lret
les
adc
xor
push
loopne
lahf
out
cmp
pop
fbstp
add
mov
sub
jne
ficoms
sbb
push
negb
scas
or
arpl
adc
xchg
sub
mov
test
jae
in
mov
std
cli
jnp
lea
lock
in
das
notl
bound
rcr
sti
pushl
adc
jmp
sub
scas
xor
outsb
pop
cltd
xor
je
xchg
jmp
jno
inc
rolb
add
inc
psraw
loop
rcrb
or
call
stc
mov
lcall
jle
outsb
jg
push
mov
cmp
cltd
sbb
test
dec
pop
sahf
mov
cmp
dec
pop
ret
insl
loop
sarb
fdivrs
and
ret
jmp
pop
mov
inc
lahf
lret
cmp
xlat
add
xchg
xor
ret
adc
pop
sbb
mov
sub
outsl
adc
jo
fnstsw
cwtl
divb
faddl
xchg
cmp
movsl
filds
mov
out
dec
jecxz
fwait
mov
lret
mov
insl
mov
inc
ffree
cld
jge
xchg
mov
pop
pop
lret
scas
aad
enter
ret
inc
mov
cmp
cmp
stos
sub
insb
dec
scas
popf
outsl
out
jbe
sbbl
adc
xor
mov
test
adc
adc
jns
jns
test
cmp
ret
dec
in
test
jne
loopne
test
ficomps
xor
sub
pop
aaa
adc
gs
add
enter
jecxz
xchg
xchg
outsb
mov
or
cli
push
push
movsb
imulb
daa
inc
movsb
mov
xchg
jge
adc
shll
sbb
in
sbb
and
out
enter
dec
jbe
popf
test
inc
mov
popf
fisttpl
sbb
and
pop
aad
cltd
cs
push
jmp
mov
sub
testb
push
ja
xor
pop
test
movsb
add
jge
dec
mov
adc
or
lahf
xor
adc
out
push
push
xchg
mov
addr16
push
mov
call
sub
in
jbe
popa
or
lret
xchg
dec
scas
imul
mov
dec
sahf
mov
jno
dec
adc
repnz
in
jp
jmp
mov
insl
cs
jge
andb
push
pop
rolb
test
jge
adc
jne
push
sahf
mov
xor
fwait
mov
dec
xor
xchg
jno
les
xchg
insb
jge
xor
rclb
inc
cmp
je
ss
mov
jp
pop
add
in
inc
cmc
mov
inc
cmp
daa
cmpb
adc
inc
jne
sahf
bound
sti
out
dec
cwtl
sbb
loope
fdivl
dec
jb
lods
mov
mov
jno
icebp
sub
stos
stos
jae
xchg
loopne
add
pusha
xchg
out
bound
cmp
imul
xor
mov
inc
push
orl
adc
daa
lcall
xchg
xor
inc
mov
test
iret
xor
xchg
call
icebp
dec
adc
adc
xor
ret
data16
aaa
xor
sub
add
or
in
mov
xchg
out
dec
sbb
inc
dec
stos
inc
lahf
call
dec
sbb
or
ret
jno
out
dec
inc
push
jns
jne
ficomps
js
and
adc
xorl
jg
adc
inc
sbb
pop
enter
test
lcall
xor
icebp
inc
adc
push
mov
or
aad
das
sbb
push
inc
insl
mov
mov
rcrb
addb
pop
xchg
clc
mov
push
adc
dec
push
das
repz
xor
or
cmc
push
xor
and
loop
cltd
sbb
into
fstps
push
in
hlt
hlt
push
jno
fidivrs
cwtl
lret
inc
es
stos
jle
insl
scas
mov
dec
fdivs
sbb
mov
sbb
pop
and
js
jecxz
push
outsb
or
loopne
and
sbb
fmuls
movsb
repnz
enter
dec
ffreep
adc
fdivrs
cmpsb
pop
jns
mov
pop
and
icebp
add
adc
in
lret
xor
gs
hlt
cmp
and
divb
jmp
popf
push
sbb
mov
stc
pop
repz
lcall
xchg
sbb
and
std
sbb
lcall
pop
shl
dec
repz
cmpsb
pop
inc
ja
mov
test
in
loopne
and
mov
ret
mov
xchg
scas
jb
mov
jae
outsl
mov
xor
mov
cld
flds
mov
mov
mov
sub
or
inc
loope
add
inc
aas
lret
ret
sar
inc
out
sub
push
in
mov
ljmp
mov
pushf
jb
ljmp
push
fisttpll
insb
inc
xor
pop
icebp
incl
xor
shl
and
pushf
cmp
pop
mov
pop
xchg
lcall
dec
xorb
or
rcrb
lret
leave
cmp
fisttpl
mov
ficoms
jbe
fs
popf
loop
out
or
cmp
aaa
cmc
and
add
cmp
add
in
xchg
add
xchg
and
push
inc
nop
and
adc
lret
add
push
inc
add
inc
and
rcll
or
test
imul
mov
stos
sub
dec
mov
mov
ret
and
dec
or
mov
dec
popa
sub
pop
das
dec
ss
fbld
loop,pt
iret
adc
cwtl
cltd
js
pop
in
lcall
imul
pusha
fiadds
int
adcl
jae
ds
mov
mov
push
pop
mov
mov
sti
xchg
lods
or
mov
and
mov
xchg
out
and
mov
adc
adc
mov
mov
lea
adc
jae
scas
das
push
inc
mov
shlb
add
cld
xorb
addr16
xchg
je
dec
lea
push
xlat
jae
call
dec
xor
xchg
mov
jo
mov
popf
sub
pop
jp
addb
aas
scas
fldt
mov
rol
leave
pop
adc
xchg
mov
stos
inc
jne
adc
es
or
out
xchg
inc
stos
jns
out
insl
popf
add
sub
rcr
mov
mov
adc
and
decb
negb
mov
aad
shlb
push
pop
sbb
and
jmp
adc
adc
sub
out
mov
mov
cmp
out
imul
ficomps
push
xor
or
adc
sbbb
test
push
or
mov
popaw
adc
xor
xor
push
fcoms
jb
popf
jg
dec
adc
mov
insb
dec
jmp
xchg
pop
dec
fistl
mov
lret
lock
sub
aas
roll
sbb
mov
lods
xchg
lods
sbbb
lds
sub
xchg
mov
pop
sbb
ss
jbe
fsin
popa
test
pop
iret
pop
xchg
xchg
ret
mov
xchg
shl
movsl
mov
std
scas
or
icebp
sbbb
xchg
repz
sbb
add
jno
ljmp
push
popf
fadds
add
arpl
mov
fistps
pop
push
cmp
sub
mov
lret
addb
ret
hlt
xchg
fsubl
out
cmpsb
xchg
mov
loopne
in
mov
jge
and
ret
mov
enter
mov
push
sbb
cmp
or
pop
adc
hlt
pop
dec
test
mov
mov
leave
xor
dec
cmp
gs
call
aam
mov
data16
idivl
ja
cli
xchg
cmp
jo
inc
add
iret
or
scas
insb
inc
sub
mov
loopne
mov
sub
dec
outsl
icebp
xchg
sar
pop
mov
or
adc
mov
dec
ljmp
test
mov
fisubs
jecxz
xchg
cmp
fwait
or
xchg
mov
ljmp
data16
enter
sbbl
dec
adc
loopne
mov
psllw
ja
inc
mov
sub
outsl
and
mov
sbb
and
add
or
mov
xchg
ja
aas
add
outsl
xor
jle
dec
or
add
jmp
or
stc
adc
and
test
pop
jnp
dec
dec
sbb
and
xlat
stc
daa
jbe
sbb
test
pop
sbb
test
inc
or
test
mov
dec
push
xchg
jae
jl
xchg
into
das
mov
or
scas
cmp
pop
std
lods
sub
lds
sub
mov
push
call
out
shrb
icebp
js
sbb
jmp
inc
bound
or
out
dec
nop
xor
faddl
into
or
adc
push
sbb
pop
loop
add
cmp
test
jae
pop
xor
pop
add
and
mov
adc
lcall
mov
ffree
lahf
lret
and
shrb
xchg
js
push
inc
push
xchg
mov
test
cmp
mov
adc
lods
jmp
xchg
sub
bound
adc
xor
mov
push
les
lahf
jo
push
xchg
sub
gs
flds
fstps
jnp
xor
add
pushf
out
jo
insl
ljmp
sub
mov
jo
sub
push
sub
loop
push
pop
push
add
enter
xchg
push
test
dec
sub
aam
or
hlt
in
cmp
push
cli
or
int
mov
cmc
dec
int
repnz
int
loope
and
cmp
sbb
mov
push
gs
in
or
cltd
push
push
cmp
cltd
cld
mov
jge
adc
adc
imul
mov
inc
sbb
or
jmp
dec
repz
jle
cmp
mov
mov
subl
loope
test
jns
and
adcl
jo
lock
sub
jmp
mov
into
jg
sti
mov
ret
xchg
outsb
push
mov
bound
xchg
pop
cmp
lock
push
sbb
mov
test
mov
jo
sbb
in
xchg
aas
test
lods
jb
cmp
sbb
jle
nop
xor
sub
sub
mov
popl
sbb
jne
pop
sbb
sti
icebp
xchg
and
xchg
adc
push
fcomps
lahf
scas
shll
pop
mov
sbb
cmpsb
cwtl
push
out
test
roll
adc
mov
test
or
clc
mov
fnclex
xchg
jmp
push
shl
into
mov
imull
xor
xchg
fcomps
xchg
mov
ja
testl
rclb
cmp
lds
loopne
mov
adc
ss
das
jmp
or
adc
mov
xchg
mulb
sar
or
or
xor
xor
imul
aad
add
inc
loope
arpl
adc
or
aam
and
sub
ja
push
pop
jb
xchg
mov
icebp
sarb
andl
imul
sbb
mov
aam
rcrl
sarb
pop
mov
inc
outsl
mov
jae
adc
sub
add
std
sub
and
stos
xor
and
and
cmp
jnp
jnp
dec
pop
pop
insl
scas
imul
xor
outsl
fsts
pop
scas
jno
daa
in
das
adc
ds
in
cli
cld
mov
cmp
lcall
nop
insb
fnstsw
push
loop
dec
lcall
pusha
pop
negl
mov
adc
nop
inc
xchg
daa
mov
mov
add
and
mov
loope
vmovsd
adc
pop
sbb
jno
pop
adcb
xor
xchg
jns
outsl
mov
adc
mov
lret
nop
pop
mov
imull
jge
mov
sub
or
cmp
int3
jle
add
mov
into
dec
mov
lods
mov
dec
movsb
lock
sahf
mov
pushf
jnp
in
test
xor
push
outsb
mov
push
outsb
aas
sarb
pop
xor
and
pop
std
push
arpl
dec
push
push
xlat
cltd
mov
sub
mov
shl
or
pushf
rcrl
cmp
jnp
sbb
pop
inc
cmp
xor
sbb
rcl
ss
es
cmpsl
imul
or
cmp
dec
jp
gs
sahf
loopne
add
mov
lods
dec
or
mov
cmp
cltd
ja
push
fnstsw
mov
and
add
cmp
mov
fadd
mov
cld
scas
orl
sbb
loop
ret
or
dec
in
stos
inc
lock
and
hlt
inc
dec
sbb
add
push
addr16
push
push
leave
cmp
inc
jp
addr16
mov
in
and
jne
dec
add
inc
fmuls
xlat
clc
add
lahf
sub
insl
fldenv
sub
push
rcrb
pop
sahf
sbb
sub
ds
push
push
xchg
jle
and
jg
mov
jb
repnz
jp
mov
or
dec
xchg
pop
insb
push
out
dec
sub
mov
and
lret
add
push
fcoms
jle
sahf
mov
gs
pop
mov
sbbb
outsl
bound
push
adc
mov
jbe
sub
xor
jnp
push
lods
movsb
loopne
loop
mov
mov
jne
dec
test
aad
sbb
dec
fld
dec
pop
jne
inc
aam
mov
pop
fwait
lret
push
adc
fstps
pusha
or
fs
jnp
pop
xor
adcb
jne
jmp
movsb
out
fistpl
jge
xor
imul
and
push
push
sub
dec
fwait
xchg
enter
mov
xchg
shr
mov
add
jmp
js
xor
pcmpgtw
add
xor
sbb
cmpl
xchg
aaa
cmp
je
jle
sbb
mov
jle
loop
dec
or
mov
xchg
fadd
and
and
repnz
xchg
jb
mov
or
inc
cmp
andb
popf
pop
cmp
inc
scas
inc
jge,pt
or
dec
pusha
inc
stc
sub
xor
into
adc
les
scas
scas
lret
lret
decl
jg
jle
popa
jb
mov
sub
mov
cmp
or
gs
sti
out
cmc
mov
data16
pop
or
stos
adc
add
sub
xor
and
imul
comiss
add
xor
test
sbb
pop
or
fcomps
push
push
pop
test
xchg
dec
jmp
sub
mov
popa
mov
inc
jmp
clc
inc
ljmp
cmp
insl
cli
popf
sbb
ds
and
lahf
test
lahf
orl
mov
jbe
ret
xor
in
lea
mov
mov
xchg
ret
push
xlat
inc
mov
scas
xchg
dec
scas
push
add
add
xchg
mov
xor
add
fdivs
ss
add
frstor
mov
push
lcall
xor
jge
into
mov
push
and
scas
xchg
popa
ljmp
cs
pop
mov
lods
sahf
sti
sub
out
into
pop
pop
mov
and
pop
mov
ja
cmpsl
adc
aam
daa
xchg
jp
dec
mov
push
mulb
jnp
insb
mov
xacquire
stos
imul
loope,pn
pop
push
adc
repz
jae
cmc
insl
orb
clc
sub
cmpsb
and
mov
icebp
adc
push
mov
lahf
xchg
lods
xchg
sbbb
dec
call
loop
pop
cmp
lret
mov
cmc
mov
mov
sub
and
cltd
xchg
cmp
scas
add
mov
idivb
ss
inc
scas
or
pop
jns
and
pop
inc
pop
sub
dec
cmc
mov
adc
dec
xchg
mov
inc
js
sub
mov
inc
mov
xchg
gs
lds
add
xchg
sub
jno
add
ds
das
jp
lods
out
scas
lcall
mov
mov
cmp
mov
xchg
movsl
sub
ret
sub
movsb
push
inc
fistpll
shr
mov
or
and
adc
add
push
cmpsb
cs
jb
rolb
cltd
sbb
push
mov
pop
lds
or
mov
out
pop
les
aas
into
sbb
fdivp
fidivrl
cli
mov
popa
jbe
xchg
nop
loope
sbb
push
out
pop
mov
jno
push
adc
bound
mov
mov
popa
xchg
jbe
jecxz
jnp
das
xchg
scas
into
fnstcw
xlat
jmp
fbld
add
je
shlb
cmpsl
inc
bound
and
imul
repz
icebp
push
in
repnz
cmp
fimull
xor
rol
mov
jbe
sarl
arpl
loope
or
xor
int
pop
push
and
roll
jb
mov
mov
xchg
push
das
jp
cld
dec
xchg
mov
and
iret
lret
pop
xchg
inc
jnp
jno
adc
mov
lahf
xor
xor
push
mov
and
xchg
ja
cwtl
fnsave
cmp
fs
insb
icebp
data16
imul
fs
mov
sbb
xorb
fidivs
mov
jp
in
enter
in
sbb
inc
jb
aam
xor
push
push
dec
mov
sbbb
ja
xchg
inc
cmp
xor
rorl
cmc
or
out
lods
pop
add
dec
mov
aam
sub
lcall
pop
pop
jge
das
in
mov
in
cmp
inc
cmc
dec
push
test
cwtl
adc
std
mov
fidivl
pop
mov
lds
fwait
dec
push
mulb
into
and
mov
mov
insb
jl
mov
jp
push
jge
adc
into
ljmp
std
addr16
int3
sbb
cs
or
push
xchg
rclb
mov
and
cld
mov
rcll
cmc
mov
push
mov
sbbl
push
mov
ljmp
push
les
add
dec
hlt
push
mov
xchg
mov
push
cmpsl
inc
movsl
aam
xor
xor
daa
pop
adc
xchg
shl
adc
fs
sub
xchg
mov
mov
cmp
lahf
icebp
and
movsb
sub
scas
adc
push
int3
jmp
jne
ja
add
insb
mov
push
cwtl
xchg
lock
sbb
jg
movsb
ljmp
xor
inc
arpl
mov
imul
mov
data16
repz
or
push
mov
fsts
addb
inc
or
mov
test
call
mov
iret
sub
out
ja
mov
mov
adc
loop
stos
xorl
sub
mov
cmp
in
or
andl
lret
loop
cmp
fwait
div
test
jne
xor
call
test
xor
ds
push
push
adc
mov
pop
add
decl
clc
inc
fwait
iret
fmuls
jl
scas
mov
lods
stos
inc
jae
jo
and
std
mov
stc
enter
in
dec
xchg
ss
es
mov
jne
das
out
pop
jle
cmp
lahf
into
fs
movsb
cmpsb
add
into
push
iret
mov
adc
scas
inc
lret
inc
cwtl
and
cmp
jae
sub
add
jg
push
outsb
subb
cs
repz
lds
pop
xchg
leave
in
in
lcall
pop
dec
mov
cmp
cmp
xor
adc
cwtl
sub
jno
ret
sbb
repnz
test
enter
ror
adc
popa
lahf
inc
test
pop
mov
sti
push
dec
sahf
cmp
xchg
rorl
mov
jecxz
test
sub
mov
add
fdivl
insl
pop
mov
jmp
cmpsl
add
and
fdivs
sub
js
push
notl
shrb
jno
add
test
ja
in
push
mov
cmpsl
clc
or
cmp
out
pop
test
nop
subl
or
or
adc
fisubrs
mov
into
cmpsl
dec
fcmove
xor
and
dec
int
cmp
push
ucomiss
fcmovnb
out
inc
and
adcb
mov
add
xchg
add
pushf
test
mov
popa
in
pop
xchg
xchg
scas
and
add
dec
cmp
outsl
sar
push
dec
cmpsb
and
icebp
add
mov
nop
jbe
push
gs
sbb
mov
cld
jne
jmp
ret
xlat
mov
pusha
cmp
and
mov
sbb
sub
and
xchg
mov
push
insl
mov
nop
hlt
mov
add
fidivrs
pop
push
and
lcall
pcmpgtw
adc
fwait
inc
loop
shrl
insb
mov
imul
sub
imul
addr16
cmp
push
mov
stos
mov
dec
repnz
loopne
sarb
dec
int3
jmp
ret
imul
xchg
dec
std
pop
fdivrl
sbb
and
in
xchg
mov
stos
lcall
cltd
add
push
dec
mov
xchg
adc
jp
arpl
dec
cmpsl
xor
test
pop
inc
rclb
mov
loopne
and
xchg
mov
lret
fimuls
outsl
sbb
mov
daa
test
hlt
lret
pop
or
add
mov
test
or
push
cmpb
mov
xorb
stc
sub
sbb
sbb
inc
out
add
and
mov
dec
push
sub
ffreep
test
lret
mov
inc
cmp
mov
jg
lahf
sti
dec
insb
mov
idivb
faddl
add
cmpsl
fidivs
fwait
mov
cmp
imul
mov
sub
xchg
push
test
mov
mov
lea
jl
pop
jne
sub
stc
push
sarb
mov
cltd
aas
cli
pop
jno
mov
ret
push
int
xor
fs
xor
mov
mov
and
mov
mov
mov
cltd
cs
sub
xchg
stos
push
xor
dec
or
rcl
movsb
xchg
adc
xor
sub
mulb
push
pop
sub
mov
std
dec
pop
sahf
cld
push
jbe
sti
popf
int3
mov
mov
pop
repz
iret
push
cmp
inc
push
or
insl
jecxz
pop
pop
push
stos
jle
sub
mov
mov
test
orl
push
pop
sub
leave
mov
fs
lcall
stos
js
out
jmp
dec
add
mov
aad
sub
pop
inc
clc
pop
inc
jae
cld
cmc
push
adc
push
push
fisttpl
push
ds
mov
mov
aam
sbb
or
fcomps
mov
and
mov
adc
aad
xchg
das
dec
xlat
ss
and
pop
in
cmpsl
push
push
push
loop
xchg
xchg
or
jns
shll
test
xchg
orb
lock
add
insl
add
imul
cmp
call
push
cmpsl
les
cmp
lahf
sub
xlat
shrb
push
xchg
adc
filds
or
add
int3
xlat
movsl
pop
out
push
xor
push
rolb
cmp
jo
mov
pop
in
inc
mov
les
pop
xchg
mov
mov
rclb
lret
ja
lods
or
loop
pusha
nop
pop
mov
in
loopne
inc
imul
adc
mov
jae
pop
ret
test
and
scas
jl
dec
filds
xlat
push
das
repnz
scas
push
fisubs
das
fisttps
push
insb
xor
sub
lahf
xchg
mov
jne
insb
scas
mov
jecxz
jo
mov
or
or
jno
rclb
pop
mov
pop
lcall
xchg
pushf
adc
adc
mov
add
nop
ficomps
xchg
repz
sub
test
sahf
add
aaa
lods
xchg
out
ljmp
dec
imull
lret
lahf
sub
adc
outsl
pushf
sub
addr16
mov
shlb
enter
in
add
cs
aam
mov
imul
fsts
inc
test
mov
sbb
test
jae
adc
push
or
nop
lret
push
scas
pop
cs
mov
es
outsb
xor
insb
jle
jl
mov
jge
or
ss
call
cs
xor
stc
aas
pop
cmp
leave
ds
leave
cwtl
and
mov
sub
bound
xor
in
ret
xchg
mov
loop
js
nop
enter
push
les
lret
fcompl
scas
jge
rorl
jne
sahf
mov
mov
lret
lret
testb
in
icebp
mov
rclb
mov
addr16
rclb
out
or
dec
out
psubusb
sbb
xor
and
test
shlb
repz
ljmp
adc
pop
fsubs
aas
fs
cmpsb
push
insl
xor
adc
aaa
shrb
fistpl
push
loopne,pt
mov
push
out
std
scas
jno,pn
sbb
rorl
aam
mov
mov
push
es
cmp
test
mov
sub
cmp
cmp
out
test
pop
and
ljmp
fwait
in
xor
cwtl
push
mov
mov
daa
add
lret
inc
dec
hlt
dec
dec
bound
mov
dec
repnz
jmp
outsl
adc
clc
push
stc
loopne
repz
fs
dec
scas
mov
push
pop
orl
mov
fwait
push
icebp
std
add
inc
xchg
iret
mov
shrb
scas
ljmp
bound
adc
arpl
test
pop
pop
mov
pop
push
xor
sub
xchg
sub
and
add
sub
lods
int3
fmull
lret
into
js
and
testl
jg
sbb
sub
div
cmp
cld
push
sti
insl
dec
ret
stc
lods
pop
xor
and
lret
jne
fidivrl
movsl
mov
mov
jno
fldenv
and
or
rolb
aam
or
xor
test
lcall
push
jl
out
dec
xor
inc
pop
sbb
lcall
subl
out
jne
shrl
ret
pop
aad
mov
push
int
adc
out
and
fiadds
mov
arpl
lgdtl
pop
adc
jl
sbb
dec
jae
pop
dec
aad
lret
push
inc
jge
cmp
dec
les
adc
call
jo
stos
jecxz
les
pop
dec
ljmp
movsb
sub
stc
cs
movsb
mov
movsl
dec
xchg
jl
int3
cmp
mov
jbe
push
movsl
out
imul
mov
je
insb
das
mov
shlb
cmp
cltd
lret
mov
cld
push
or
not
sub
push
jl
xchg
push
movsb
aaa
xchg
in
rorb
jl
jg
shlb
fisttpl
stos
scas
lahf
push
inc
dec
push
push
cld
outsl
add
mov
jbe
cmp
fldl
inc
ficoml
jo
sub
mov
stc
mov
rcll
fwait
sbb
cmp
cld
jle
pop
insb
dec
cmp
mov
push
pop
imul
inc
insb
sub
aad
pop
dec
loopne
jno,pt
xchg
es
mov
mov
and
adc
or
adc
adcb
fildl
add
aaa
bound
mov
push
jns
pop
inc
cld
lcall
dec
dec
sbb
data16
int3
xchg
int
jl
push
cld
out
pop
mov
mov
cmp
and
and
or
in
mov
repz
adc
lret
jns
cs
jne
fcmove
stos
cmp
mov
xor
sbb
out
std
or
hlt
dec
nop
int
dec
ja
mov
and
int3
mov
jae
mov
lods
shll
mov
dec
inc
dec
pop
aad
mov
test
rorb
sbb
iret
dec
add
mov
aas
xchg
sbb
and
mov
cmp
les
inc
mov
sar
cmp
fdivr
xchg
cmp
mov
es
nop
jge
icebp
scas
mov
mov
inc
add
and
or
sbb
xor
pop
insb
rolb
adc
mov
enter
inc
xor
push
inc
pushf
mov
mov
cmpb
sub
mov
xchg
dec
insl
je
stos
or
inc
aad
pop
imul
push
inc
call
jb
fmul
add
sti
lds
mov
cmp
xchg
iret
push
aad
mov
out
mov
nop
aad
mov
mov
mov
test
mov
add
leave
jge
roll
popa
mov
cmp
sti
jne
mov
push
or
cli
shrl
and
sub
test
lcall
mov
xor
loop
into
and
in
add
data16
sub
sub
adc
inc
data16
popf
mov
dec
pop
adc
inc
mov
push
mov
push
adc
and
jno
mov
push
aaa
nop
inc
aad
cs
out
mov
or
loopne
push
push
xor
mov
pushf
mov
dec
in
sbb
test
pushf
jno
push
mov
shrl
sbb
mov
push
aad
sub
loopne
gs
jg
pop
mov
sub
fs
js
xor
xchg
add
lock
andl
jge
cmp
add
mov
stc
inc
outsl
sbb
mov
mov
les
shlb
jae
xor
je
cmp
mov
pop
or
xorl
sti
mov
js
or
cmpsl
jne
aam
popa
scas
test
push
push
pop
loop
lea
js
lock
cmp
and
sub
loope
fildll
mov
jg
pop
ljmp
test
call
adc
or
dec
pop
nop
xchg
cmpb
sti
push
jl
cmc
and
push
push
insb
inc
fdivp
push
in
aam
sbb
jmp
dec
data16
filds
into
xchg
in
fisubs
std
sub
loopne
add
inc
pop
and
popf
scas
popa
shrl
mov
out
cmp
fcoml
mov
or
jno
dec
add
mov
stos
xchg
xchg
push
sub
std
xchg
or
sbb
shrl
outsl
insl
jne
add
out
cmp
insl
lods
das
jmp
in
ret
int3
mov
inc
aam
push
pop
popl
pop
mov
std
pop
sub
jae
aad
mov
push
xor
out
sahf
aad
enter
add
push
sub
and
xchg
pushf
imul
and
arpl
push
xchg
mov
call
in
push
outsb
hlt
cmp
dec
xchg
sbb
mov
call
gs
jle
dec
into
addr16
xor
enter
push
xor
mov
or
inc
out
inc
insl
lock
sbb
icebp
sbb
sbb
mov
cmp
xor
or
xor
sbb
scas
cmp
out
xchg
or
xor
loopne
mov
out
hlt
es
pusha
cli
fcoms
push
pop
ret
ja
fbld
adc
push
pop
lahf
fsubrl
pop
xor
fisttpl
sub
dec
and
mov
dec
cmpsb
sbb
mov
insb
mov
sbb
ja
push
movsb
add
sub
cmp
mov
or
call
loopne
stos
int
inc
inc
rol
push
dec
ja
jb
hlt
bound
sahf
xchg
inc
add
xchg
sbb
dec
std
or
ljmp
cmc
popa
scas
insb
add
out
popl
pop
mov
sub
push
nop
xor
scas
int
ljmp
test
jmp
sbb
mov
out
out
ja
push
mov
cs
push
nop
jbe
divb
shll
mov
insl
shll
adc
shll
sar
xor
jae
pop
xrelease
pushf
shlb
adc
div
jb
setns
das
ret
sbb
cmp
jb
scas
lods
jnp
adc
jg
testb
sahf
xchg
jbe
push
xchg
ja
or
mov
ficompl
test
dec
push
fcompl
icebp
shr
insb
adcl
sahf
sarb
std
jmp
jb
lds
adc
das
adc
mov
enter
mov
mov
pop
das
es
nop
inc
mov
cmp
sbb
out
lock
loop
out
or
pop
aad
mov
ja
cli
and
daa
sub
shlb
loop
jp
test
sbb
jecxz
xor
jge
jp
ds
pop
or
pop
xor
insl
faddl
andb
in
xchg
pop
ljmp
mov
mov
lea
cld
xor
cld
cmp
xchg
xchg
and
xchg
mov
inc
mov
mov
std
inc
mov
gs
mov
imul
adc
push
nop
test
out
mov
mov
mov
ja
test
jno
imul
imul
roll
repz
loopne
shlb
mov
iret
cmp
add
jnp
and
cmpsl
les
aaa
jg
out
or
or
js
imul
repz
pop
xor
imul
lds
push
mov
stos
lcall
jno
call
lcall
dec
lahf
xor
aas
cmp
push
mov
adcl
mov
inc
test
and
inc
adc
xlat
adc
aaa
stc
lcall
add
jb
shr
cmp
arpl
test
jo
cmc
mov
loopne
xchg
in
sbb
imull
push
push
das
test
sub
cmp
loop
jge
roll
fidivrs
mov
adc
fdivs
sahf
leave
cmp
push
mov
repnz
mov
loope
shl
cmp
adc
mov
cmc
sbbl
pop
mov
test
jl
sbb
push
xchg
js
or
add
xchg
sbb
es
mov
sar
add
xor
pop
xchg
sbb
cmp
sarl
push
cmp
and
sub
pop
popf
inc
insl
sub
add
jb,pn
push
aad
mov
or
fwait
mov
mov
sub
sahf
xchg
mov
cld
fs
mov
test
ss
adc
mov
es
pop
push
popa
and
xchg
cmp
test
mov
cmpsl
aam
push
xor
xchg
sahf
mov
jae
data16
sub
jle
mov
int
xor
loop
push
pop
lds
mov
movsb
xlat
inc
repz
jbe
xchg
add
leave
mov
fldt
nop
nop
sbb
fwait
or
or
xchg
arpl
scas
pop
cmpsl
shl
mov
mov
sbb
lods
or
nopl
xchg
push
inc
or
cmp
sti
sbb
pop
mov
mov
xchg
add
cli
add
in
ret
push
or
popa
jp
mov
mov
lods
fnstcw
lcall
aam
cld
cltd
movl
in
push
mov
cmc
sbb
inc
fcoms
xchg
lahf
les
ds
into
pop
jns
outsl
movsb
jno
rclb
cwtl
cmp
imul
inc
aam
les
lods
mov
dec
shl
sbb
testl
bound
iret
out
inc
scas
int3
push
add
ret
xor
mov
hlt
mov
jb
cmpsb
mov
fdivrl
movsb
addl
cli
and
dec
les
pop
sub
dec
mov
jno
fistps
add
sbb
sub
mov
mov
leave
sti
adc
movsl
or
push
in
jbe
out
stc
lea
in
pop
push
imul
push
in
or
sbbb
fstpt
repnz
xchg
iret
fdivs
or
add
ret
xchg
addl
and
lcall
cmp
psubusb
fisubs
inc
inc
outsb
adc
mov
jge
lret
add
mov
cld
push
push
pop
loopne
lahf
std
sub
movsb
cmp
pop
popa
mov
push
add
or
mov
je
pop
sub
sbb
jp
aam
mov
xorb
xor
xchg
xor
add
out
xor
inc
ret
out
jns
xchg
pop
mov
xchg
or
cmp
lahf
ss
push
stos
push
or
xchg
push
add
add
mov
jae
sbb
jmp
test
call
sbb
cltd
or
test
mov
adc
fsubs
jnp
out
faddp
sub
fldt
jp
xchg
psubd
mov
add
jmp
mov
sahf
sbb
sub
xlat
stc
jecxz
add
lahf
movb
mov
cli
cmpsl
jbe
pop
ljmp
imul
pop
shlb
std
push
in
repnz
pop
mov
cli
xorl
mov
push
sbb
jmp
fiadds
imul
or
test
clc
xchg
xchg
mov
cs
loop
mov
sbb
fcmovb
les
xor
sbb
inc
aad
fs
loop
mov
xchg
es
jbe
aas
in
xor
in
or
mov
xchg
jbe
bound
xlat
sahf
rolb
test
dec
dec
loopne
daa
add
adc
fwait
inc
jmp
mov
push
cli
mov
lahf
cltd
mov
add
aaa
ret
insb
lahf
jns
xchg
add
repnz
fildll
sahf
fnsave
push
repnz
dec
mov
jno
fpatan
xor
leave
inc
sbb
into
or
jo
int
xor
cmp
and
sub
xchg
pop
daa
fcoml
outsl
insb
mov
pop
sub
pop
loop
add
out
or
sbb
push
nop
xor
repnz
arpl
xchg
pop
pop
or
jne
test
jle
jge
gs
xor
jge
test
shr
sbb
adc
dec
mov
out
test
inc
aas
mov
pop
jecxz
inc
scas
lret
testb
adc
xchg
sbb
jbe
xor
cmp
push
out
lods
sub
lds
lods
and
inc
pop
sub
xor
pop
scas
or
lods
cld
push
pop
pop
mov
js
pop
adc
ss
mov
cmpsl
aam
cmpsb
cmp
pop
jl
fs
pushf
push
pop
jg
mov
outsl
mov
jno,pn
or
push
dec
out
add
adc
je
mov
std
jp
ss
push
and
stos
xor
mov
mov
or
inc
inc
fprem1
shrl
jnp
push
sbb
pop
sub
push
jb
das
int3
cmp
addr16
pop
mov
stos
leave
add
lock
pop
push
mov
add
pop
sbb
insb
jge
pop
xchg
mov
sbb
in
les
cmp
shl
mov
loope
imul
insb
scas
push
sub
or
push
cli
fcmovne
pop
into
call
xchg
mov
xlat
xchg
in
imul
dec
into
std
cmp
sarb
pop
xlat
push
mov
div
add
scas
jne
mov
jo
cmp
pop
jl
mov
hlt
movsb
xor
jecxz
push
in
cmp
xor
cli
loop
xor
aam
sbb
sar
pop
lods
or
aam
testl
cli
mov
pop
or
iret
or
push
and
scas
pop
iret
dec
call
dec
and
fsubrl
stc
inc
hlt
or
sbb
xchg
mov
dec
les
dec
sbb
add
jns
mov
pop
mov
sahf
test
push
sub
ds
aaa
cld
adc
rcrb
push
arpl
xchg
mov
xlat
clc
xchg
aaa
jp
leave
push
jmp
lahf
pop
jl
icebp
sub
call
iret
stos
ret
loop
and
inc
pop
cmp
push
ret
add
add
xchg
inc
bound
mov
std
scas
fiaddl
movsb
out
je
loop
xchg
dec
ss
and
sub
dec
cltd
fistpl
or
js
adcb
hlt
adc
xchg
stc
lcall
adc
and
lea
pop
shl
mov
les
pop
cltd
hlt
inc
lods
xlat
cmpsb
xor
cld
pop
jmp
push
cmp
cmpsl
arpl
xchg
mov
stc
pop
sbb
std
add
gs
mov
repnz
push
sti
pusha
outsl
pusha
les
dec
adc
movl
popf
shl
cvtpi2ps
xchg
xchg
push
jp
adcl
stos
cli
lds
bound
lea
dec
sbb
mov
loopne
inc
sub
in
push
push
jl
mov
popa
pop
pop
ljmp
dec
imul
lret
popa
jns
jl
adc
inc
pusha
out
test
scas
mov
lds
out
cltd
dec
jns
inc
or
jbe
loope
aam
es
int
sbb
rorl
ds
in
pop
xor
ror
add
insb
cltd
dec
cmp
push
cs
cmp
js
dec
jle
sbb
imul
add
or
mov
mov
sub
dec
pop
leave
fcmovnbe
fisttpll
ds
aas
test
lods
bound
lds
xor
and
sub
imul
inc
mov
sub
es
fiadds
xor
add
jne
inc
dec
fldenv
stos
stc
movsb
push
pop
stos
iret
das
mov
je
fst
pop
imul
es
loopne
aam
lods
fists
loop
out
sbb
cmp
cli
adc
add
mov
outsl
sbb
pop
std
add
test
push
or
out
pop
fimuls
into
mov
jne
mov
out
addr16
push
inc
out
das
mov
push
xchg
movl
lcall
divl
add
sbb
stos
jnp
leave
pop
xchg
dec
ja
fildl
xchg
jae
sub
mov
sbb
sbb
cmpb
cwtl
push
mov
bound
divl
adc
cmp
inc
mov
das
testb
dec
repz
aaa
cs
rclb
cmp
add
cmp
lret
je
push
push
mov
xor
iret
inc
sti
subb
lock
sub
stc
orl
jbe
push
push
leave
in
in
inc
adc
xadd
imul
dec
sub
mov
sbb
xchg
sbb
inc
mov
push
xor
mov
repnz
push
outsl
cmp
adc
cli
dec
mov
in
jle
fldcw
andl
sarb
xchg
sbb
xor
sahf
mov
mov
sub
mov
ja
sub
sbbb
sbb
imul
sbb
adc
dec
jnp
movsl
mov
dec
cmpsb
adc
fidivl
add
inc
inc
enter
jne
jl
sbb
lea
rcrb
ljmp
mov
mov
inc
sub
mov
roll
aas
bound
jmp
dec
push
in
xor
movsb
rcr
push
in
or
divps
pop
mov
pushf
sbb
jp
mov
mov
movl
jne
xchg
jns
add
cmp
cmp
lcall
mov
mov
cmp
pop
dec
repnz
rcll
test
jae
sbb
nop
clc
cs
push
push
dec
mov
mov
dec
stos
and
aaa
sub
imul
add
xchg
hlt
test
inc
sub
bound
or
pushl
ror
mov
enter
sub
rcrb
and
add
test
add
sub
cmc
add
jmp
dec
cmpsl
adc
aaa
push
xor
ror
xchg
sahf
xchg
pop
or
int
out
aad
jbe
add
fwait
cmc
ret
addr16
push
bound
jmp
sbb
scas
cmp
jbe
add
int
push
std
jmp
das
cs
or
pop
jb
pop
or
pop
jns
sbb
fbstp
fadd
je
mov
ret
dec
dec
or
in
inc
sbb
push
xchg
push
xchg
mov
fnstcw
addr16
adc
xlat
sbb
jle
scas
das
dec
aam
mov
adcb
sar
out
cmp
push
in
shll
popf
icebp
dec
aas
das
push
test
mov
sub
jb
push
mov
and
aam
int3
xor
push
push
add
rorl
dec
inc
mov
pop
lock
adc
mov
mov
mov
push
stos
inc
sahf
or
push
xchg
aad
rcr
jo
push
dec
pop
mov
bound
or
xchg
call
or
cmp
into
fldcw
add
out
aam
ds
in
outsl
xchg
jle
movsb
xor
scas
pusha
lret
xchg
pusha
or
lods
ret
mov
mov
mov
rol
outsl
arpl
cmp
in
xor
loop
movsl
cwtl
movsb
xor
cld
insl
add
lret
mov
jae
fsubl
cli
push
out
movsl
in
xor
cmp
jo
mov
sti
movsl
dec
mov
cmp
jb
pop
stos
mov
and
push
sbb
stc
cmp
mov
addr16
jns
add
jge
cltd
and
pop
inc
stos
push
movb
nop
fsub
adc
mov
mov
push
pop
sub
insl
rolb
and
popf
push
dec
lret
mov
or
fstpt
push
add
lods
lcall
xor
dec
sbb
xor
add
cld
addr16
cmp
sbb
push
sub
xchg
movsl
js
movsb
inc
fiadds
xchg
adc
int
xor
adc
ljmp
fidivl
adc
jb
jmp
in
xchg
dec
pop
test
dec
cli
arpl
outsl
pop
add
or
repz
sbb
cmpb
cmp
scas
adc
inc
mov
jb
add
add
xlat
mov
outsl
roll
movsl
cmp
push
cmp
mov
pop
jecxz
lcall
outsb
insb
add
out
pop
adc
rol
adc
ds
cmpsl
mov
mov
inc
cmp
and
dec
mov
adc
iret
xchg
test
xchg
out
xor
lea
xlat
repz
and
aam
sub
cmc
push
pop
nop
movsb
push
cmpb
stos
out
cmc
movsl
clc
les
or
dec
cwtl
lret
pop
adc
test
sti
sub
push
stos
sbb
xor
add
popf
shl
sbb
js
mov
test
pop
addr16
push
es
pop
cmc
push
fimuls
cmp
jns
aaa
cmp
jnp
jne
ret
mov
mov
in
out
push
icebp
movsl
xchg
mov
daa
imul
dec
xchg
lock
movsl
adc
add
pop
dec
fwait
sahf
push
xchg
jae
outsl
xchg
daa
fwait
das
cmp
test
xchg
mov
xchg
and
ret
xchg
jp
sbb
cmpsb
mov
xlat
dec
not
in
sti
push
sbb
or
dec
and
xor
cmp
jmp
cli
sub
lret
inc
lods
ja
rcl
subl
cmpb
lret
sarl
lret
inc
rorb
sbb
test
divb
push
ret
test
xor
jmp
daa
orl
loop
in
cmp
lds
gs
or
lea
and
lcall
add
cmp
add
hlt
xor
loopne
int3
rolb
test
mov
jnp
xor
and
push
jo
xor
les
xchg
das
loop
and
adc
add
pop
xchg
hlt
xchg
sub
addr16
in
or
inc
subb
popf
or
xchg
divl
stos
aad
testb
into
movups
and
loopne
movsb
imul
jp
das
icebp
sbb
loopne
mov
pop
lock
repz
sub
imul
orl
mov
sub
push
lret
adc
mov
mov
mov
xchg
xchg
mov
pop
add
add
adc
in
pop
js
mov
addl
sub
xchg
sub
jno
inc
adc
es
pop
and
incl
pop
or
pop
sub
inc
lods
xor
xor
xchg
dec
sbb
adc
cmpsb
pop
push
call
sub
test
ja
iret
sbb
cwtl
and
sbb
jge
push
addr16
sahf
subb
repz
pop
jmp
div
aad
push
test
inc
add
mov
and
ret
out
inc
push
fcmovu
sti
push
imul
mov
out
int3
mov
bound
rorb
cmp
sub
in
dec
test
in
inc
dec
inc
and
insl
add
or
pop
into
imul
jne
jb
jmp
fs
pop
and
test
pusha
rcr
xor
hlt
faddl
shlb
call
ret
inc
xchg
out
jae
dec
cmp
imul
clc
testl
ljmp
inc
inc
jmp
add
mov
pop
repnz
fistps
adc
out
xchg
xchg
adc
mov
push
or
jp
scas
mov
pop
cmp
icebp
lahf
gs
fstl
test
lret
dec
adc
or
add
lret
ret
lahf
in
and
and
negb
jge
das
cld
sub
sub
and
inc
mov
and
cltd
aam
or
mov
test
push
jne
push
mov
sub
in
enter
dec
inc
lret
sbb
nop
negl
gs
mov
add
mov
jl
scas
inc
es
popf
jnp
inc
add
cmp
test
jecxz
mov
jle
in
out
ret
test
test
sub
cld
mov
add
dec
aam
es
push
rclb
inc
sti
xor
push
lock
int3
add
je
or
xchg
adc
pop
or
push
adc
cld
in
movsl
inc
ret
sbb
and
inc
xchg
jo
add
cmp
pusha
lcall
sbb
in
aas
fdivp
or
jmp
jecxz
xor
jle
pop
arpl
sbb
lock
cmp
push
mov
lahf
mov
jbe
inc
mov
rcrb
sti
cmp
sub
lods
aas
and
jb
decb
dec
mov
mov
jmp
push
sbb
xorps
insb
add
out
dec
xchg
mov
add
ljmp
imul
push
or
fmul
emms
mulb
jns
mov
test
stos
push
addl
add
or
in
sbb
jns
pushf
pop
fisubrs
push
aam
jo
mov
rolb
lahf
fyl2xp1
jp
insb
cmp
das
adc
jg
mov
sbb
shlb
push
outsb
cs
jmp
ja
imulb
sub
stos
xor
or
and
movsb
pop
push
je
and
push
dec
popf
and
insl
adc
inc
pop
inc
ficoms
cld
loope
jle
jge
push
lcall
lret
inc
sbb
inc
ljmp
movsl
sub
mov
pushf
add
in
push
mov
add
or
adc
push
and
idiv
loopne
mov
pop
add
push
mov
inc
jp
imul
adc
jne
push
push
cmp
jns
adc
faddl
xchg
cli
test
push
adc
jg
imul
fldt
jmp
xchg
loope
and
aam
jbe
std
cld
aam
dec
insb
and
sarl
out
xor
enter
ret
pop
fldenv
mov
int
arpl
sub
jecxz
xchg
inc
movsb
mov
out
outsb
ret
dec
sub
fs
fildl
subb
rcll
aad
xchg
xchg
jo
xor
arpl
sub
xor
jmp
divl
inc
test
jb,pn
lahf
mov
addr16
add
enter
dec
and
std
outsb
mov
jnp
and
or
hlt
popa
ret
cmpsb
dec
sub
xchg
insl
fdivp
mov
in
test
data16
push
sbb
add
call
sub
mov
mov
lods
dec
into
push
jge
pushf
fisttpll
hlt
and
xchg
addb
shll
roll
out
popa
enter
cmp
inc
loope
jns
add
or
sbb
push
mov
scas
jnp
lahf
mov
nop
sub
mov
xchg
in
aas
sub
dec
call
add
das
ret
dec
cmp
fsubrs
jg
xor
ficoml
push
xchg
dec
insl
xchg
imull
cmp
jns
mov
sahf
xor
hlt
sbb
xchg
in
lcall
lea
cmp
inc
in
add
mov
add
jbe
xchg
add
mov
jle
xor
iret
sbb
faddp
addl
push
pop
push
adc
jg
cmp
inc
adc
ljmp
xor
cld
add
repnz
fdiv
scas
mov
inc
mov
adc
xchg
jecxz
xor
cmpsb
pop
test
mull
addr16
stos
lahf
ss
jmp
ljmp
dec
jge
jecxz
dec
stos
add
dec
aam
xor
hlt
mov
lods
jae
stc
inc
loop
xorl
gs
sub
lock
fldenv
cmp
xchg
bound
push
rorb
loope
mov
sar
add
adc
scas
mov
xchg
repnz
or
cmp
fiadds
pusha
cli
mov
xor
int
push
fdivrl
cltd
push
jo
ret
shll
addr16
jb
push
repnz
ljmp
mov
push
pop
or
test
js
cli
push
repz
jp
fsubrp
pop
mov
lret
insb
pop
fists
enter
rcll
sub
push
idivb
sub
mov
jno
or
dec
dec
xor
sub
fs
outsb
mov
lea
in
push
out
sub
frstpm(287
and
icebp
cld
pop
insl
dec
or
jo
add
inc
lgs
cmp
sahf
cmp
fwait
cmp
and
movsl
xor
repz
add
pop
xor
in
mov
testl
add
inc
in
xchg
into
cmpl
cmp
negl
aam
movsb
test
add
test
inc
aas
lret
and
inc
repnz
stos
mov
adc
mov
hlt
out
jae
imul
fnsave
outsl
int
xorl
push
icebp
xchg
cmpsb
and
cmp
jl
jp
gs
push
fwait
mov
mov
pop
sub
es
idivl
and
cs
dec
inc
adc
dec
mov
stos
and
sbb
add
out
mov
test
mov
repnz
dec
cwtl
test
idivb
inc
push
sbb
jp
out
jecxz
xchg
aas
iret
loope
clc
pusha
inc
insl
cmpsb
jge
or
pop
lods
in
add
adc
pop
stos
scas
loopne
adc
dec
gs
ljmp
xlat
ror
dec
adcb
mov
enter
mov
add
stos
fidivs
addr16
xor
or
test
es
push
cwtl
sub
xchg
mov
fidivs
dec
xor
mov
dec
cltd
inc
sbb
out
add
mov
out
sbb
sub
popf
and
add
test
xchg
xchg
dec
aad
ror
xchg
mov
cmpsb
ja
out
mov
leave
movsb
stc
adc
loopne
and
aam
push
imul
push
pop
push
out
into
sub
subb
inc
sahf
iret
std
aas
int3
jge
out
ds
loop
xchg
and
adc
ret
adc
mov
std
xor
rcrl
sahf
push
aaa
inc
in
xchg
cmp
pop
sub
push
pop
mov
mov
orl
fldz
mov
mov
jg
hlt
fs
mov
mov
enter
testl
adc
push
jne
and
in
mov
imul
outsb
jmp
mov
dec
fidivrs
ss
je
outsb
dec
enter
dec
pop
das
push
into
ret
fsincos
out
ss
dec
nop
xor
add
pop
push
dec
adc
push
pop
push
mov
stc
leave
cltd
cmp
inc
mov
test
sti
mov
bound
push
movsb
jmp
pop
dec
jecxz
pop
xor
test
xlat
stc
leave
add
cmp
call
rol
lods
sbb
lret
movsb
aaa
arpl
popa
in
leave
pop
fisubrl
inc
or
mov
loopne
stos
lahf
xchg
fcmovnu
adc
and
push
roll
mov
repz
mov
movsb
jecxz
mov
repz
movsl
add
sub
out
lcall
push
mov
fisubl
popa
pop
sbb
gs
repz
jbe
dec
xlat
imul
push
rcrl
jno
sbb
mov
test
in
test
and
and
cwtl
mov
icebp
int
cmpsb
scas
data16
les
mov
mov
mov
into
jmp
scas
pop
in
lret
lea
push
aad
loopne
fidivrs
push
fdivs
lods
sarb
and
add
lret
into
popf
and
mov
fs
ss
movl
add
leave
stos
jb
mov
adc
and
fidivrl
jno
pop
lock
sti
and
lret
or
arpl
movsb
push
pop
and
mov
insl
adc
fdivrl
stos
sbb
and
push
inc
and
inc
sbb
fmuls
fidivrs
sbb
lea
int
movsb
add
or
insl
cs
out
movsb
popf
shrl
adc
mov
dec
lret
inc
inc
repnz
test
push
cmp
les
push
add
mov
rclb
or
iret
pop
sahf
and
cltd
insb
mov
mov
iret
or
repz
cmp
loopne
sbb
push
inc
sub
shlb
enter
in
push
ljmp
mov
scas
jle
xchg
push
decb
dec
into
pop
and
dec
mov
mov
mov
dec
and
mov
mov
inc
inc
jno
xchg
mov
ljmp
imulb
xchg
rolb
imul
loopne
scas
dec
xchg
sti
clc
ficoms
ja
es
std
push
pushf
mov
insl
and
push
sub
sub
repz
and
push
mov
or
nop
adc
cld
stos
cmc
pop
or
mov
push
shr
flds
jns
sbb
and
fldl
mov
pop
mov
sbbl
jb
sub
sbb
mov
dec
shll
push
icebp
lret
ror
lods
jmp
sub
iret
sbb
jns
push
add
in
dec
lds
ljmp
out
incb
xor
push
dec
test
push
imul
xlat
push
push
into
lret
or
je
cmc
inc
sub
mov
ds
test
lcall
orb
outsb
pop
or
enter
lods
cwtl
push
inc
or
cld
push
push
add
lret
stc
orb
in
adc
adc
add
ss
xor
jg
inc
sti
jmp
xorb
shll
jae
dec
jg
rcrl
add
outsb
adc
add
jg
outsb
jb
sahf
jns
cmp
sub
xchg
pop
lret
mov
adc
test
jns
ficoml
addr16
adc
insl
out
sub
sbb
repnz
cltd
mov
in
pop
xor
cltd
je
mov
frstor
mov
or
rol
or
push
lea
fcomps
std
aam
sub
mov
pop
cs
insl
lock
test
aam
fistpl
movsb
cli
cmp
in
cwtl
mov
jb
xor
in
jge
fldenv
jle
in
pop
scas
mov
adc
insb
cwtl
mov
negb
sbb
add
pop
cmp
into
mov
popf
ss
pop
add
lahf
pop
or
dec
cmc
sbb
sub
mov
mov
and
leave
sub
mov
iret
sbb
shlb
inc
call
jl
mov
push
sbb
sub
inc
push
cmp
push
jle
jne
jns
bound
clc
add
sub
mov
jle
xchg
outsb
fwait
into
js
mov
loopne
cmovl
loop
cld
cmp
xchg
mov
sbb
fstps
mov
leave
mov
dec
mov
pop
cld
shll
jo
jmp
xor
cmp
xchg
leave
test
and
inc
in
dec
cmp
cmp
and
push
inc
int
dec
sub
push
xlat
mov
sub
ja
fcmovnb
jmp
and
into
fcomp
das
out
outsl
test
clc
das
pop
les
and
xchg
in
decb
cmc
movl
insb
repz
ljmp
lcall
nop
aad
shlb
cmp
jle
in
jl
aaa
bound
mov
pop
push
add
push
push
push
or
popw
test
push
push
add
dec
insb
popf
movsl
jno
mov
dec
push
ret
mov
cltd
das
push
shl
mov
dec
mov
ja
and
jae
cmp
test
pop
in
mov
dec
imul
cmpsl
aaa
leave
stos
rcrl
in
mov
lea
int3
stos
sbb
push
repnz
imul
add
imul
inc
adc
das
inc
hlt
jp
je
call
mov
dec
xor
int3
jmp
lds
jle
pop
test
jns
cmp
cmc
sub
sbb
hlt
fisubs
arpl
lret
jl
push
or
lahf
fcoml
xchg
arpl
dec
test
pushf
push
adc
pop
xchg
mov
popf
pop
lds
push
jne
sbb
out
test
cld
loop
mov
clc
aam
mov
mov
lods
pop
mov
pop
je
jge
or
roll
dec
adc
test
sti
inc
pusha
cmpsl
push
loopne
cld
sub
jo
push
xor
outsb
in
cld
loop
loop
dec
xorb
stc
push
push
xchg
insb
push
adc
out
int
pop
mov
jmp
adcb
fnstsw
shr
ret
ret
mov
mov
xchg
adc
add
lret
sti
es
sub
pop
loope
ret
flds
sti
sahf
test
pop
and
xlat
sbb
or
scas
xchg
sar
cli
mov
clc
fbstp
loope
pop
jb
or
mov
scas
jne
mov
loop
cli
out
pop
out
nop
xor
aaa
mov
rcrl
imul
pop
adc
pop
pop
or
pusha
lret
test
icebp
and
lock
gs
mov
fs
xchg
ja,pn
jno
std
repz
xor
mov
xchg
loopne
cltd
outsb
adc
mov
jns
add
pop
aas
push
push
jne
jmp
dec
icebp
sub
xor
out
sti
shl
cmp
sbb
cs
cmp
xor
cmp
and
add
jb
sti
inc
or
mov
inc
xchg
lcall
add
pop
test
int
add
mov
pop
or
in
push
outsl
sbb
adc
movsb
dec
jne
mov
mov
lret
test
icebp
pop
cmp
xchg
ret
adc
mov
mov
dec
inc
mov
out
stos
sti
outsb
scas
push
scas
scas
adc
lock
inc
fstpt
mov
aad
xchg
icebp
sub
stos
pop
imul
push
cli
pop
mov
jmp
dec
lret
and
scas
push
cmp
fldenv
lahf
dec
fnsave
popf
sub
pop
add
lret
and
pop
lock
leave
insb
in
mov
pop
rorl
test
add
mov
sub
stc
lea
mov
jmp
bound
sbb
in
pop
bound
test
hlt
pusha
outsl
mov
fsubs
frstor
ret
fisubrs
subl
jne
mov
aam
rcl
or
fbstp
inc
and
add
ljmp
int3
or
mov
enter
cmpsl
pop
or
add
inc
adc
loopne
xorl
sub
sbb
cli
xchg
push
mov
jae
daa
and
arpl
clc
popf
jns
cld
test
stc
mov
push
stos
test
loope
add
mov
call
cli
cld
cmpsb
loope
pop
pop
add
mov
test
jne
out
mov
cmp
dec
and
lret
das
pop
jg
sub
sub
mov
mov
inc
adc
pusha
dec
and
ja
repz
mov
push
icebp
mov
aas
mov
cmc
mov
jl
iret
lret
cli
pusha
mov
mov
add
add
test
push
lea
lret
jecxz
ds
fsubrl
mov
xchg
rol
sahf
lock
xor
insl
aas
mov
inc
in
divl
mov
idiv
adc
xchg
aas
lret
fcmovne
xchg
mov
dec
xchg
push
idivb
dec
mov
xchg
jo
ss
push
xor
cs
in
dec
sbb
sub
fstpl
sub
jge
jo
mov
les
imul
mov
mov
and
jne
mov
xor
sub
add
ljmp
scas
lods
and
sub
sub
das
enter
cmp
xchg
mov
jp
xor
int
push
mov
outsl
mov
mov
xor
jle
or
out
imul
test
mov
jnp
lret
pop
mov
pop
pushf
adc
fisttpl
inc
adc
pop
mov
test
dec
stos
loopne
scas
xchg
aam
enter
fnstcw
test
add
stc
mov
add
mov
mov
pop
cmp
add
cmc
cmp
scas
cmpsb
lods
push
jmp
mov
lods
cmp
jecxz
xor
xchg
dec
xchg
mov
inc
lcall
repnz
adc
xchg
repz
and
adc
scas
mov
nop
and
testl
push
aas
stos
push
popf
cmpsb
aas
push
mov
outsb
jno
leave
repz
shr
xor
push
sbb
inc
test
and
mov
mov
dec
orb
cmp
out
and
sub
call
daa
gs
fmuls
adc
jp
mov
shll
mov
dec
sbb
aaa
ds
cmpsl
ja
fdivrs
xlat
mov
leave
or
xor
test
adc
pop
das
jo
mov
jg
aas
sub
add
dec
in
mov
mov
and
test
xor
aam
lods
and
push
outsb
cmpsb
or
shll
xor
scas
and
leave
sub
inc
push
outsb
sub
lock
test
loope
mov
adc
pop
or
es
outsb
add
mov
lock
or
inc
jbe
mov
xor
and
push
mov
rcl
add
and
idivl
addr16
std
mov
or
jbe
sub
jg
rol
repz
in
iret
lock
ljmp
cmp
jg
popa
inc
fidivrl
leave
test
pop
insb
mov
fildl
dec
loope
out
popa
push
add
pop
adc
xor
mov
loope
les
mov
call
adc
shlb
add
xor
in
sub
imul
inc
jl
cmpsb
cmp
nop
clc
test
ret
or
or
imul
cli
sub
pop
adc
test
add
or
sbb
add
pushf
and
pop
notl
mov
test
adc
xchg
mov
bswap
cmp
adc
in
add
cmp
test
jp
sbb
outsl
loopne
xchg
shlb
sub
jno
cli
adc
or
cmp
cmp
movl
int
cmp
push
sbb
pusha
loop
push
stc
pop
xlat
addr16
out
loope
pop
scas
mov
movsl
inc
mov
aam
mov
adc
shll
int
mov
xchg
mov
test
xchg
cmp
aad
xchg
cltd
sbb
clc
or
lds
push
jmp
lret
inc
push
cmpsb
mov
dec
jg
insb
mov
jg
pop
inc
and
test
arpl
sbb
pop
cmp
gs
dec
xchg
jbe
jg
dec
inc
dec
dec
jp
mov
leave
fsubl
in
pop
in
or
ljmp
addr16
xor
push
inc
mov
aad
dec
inc
movsb
ficomps
sub
loop
mov
push
dec
jecxz
and
mov
gs
dec
ss
sub
rcrb
xchg
lahf
std
out
mov
movsl
shl
cmp
or
sbb
sarl
shlb
lock
jnp
insl
test
icebp
sahf
dec
dec
cld
divl
adc
aam
faddl
inc
mov
dec
adc
jno
cmpsl
push
cmp
fwait
inc
loopne
pop
mov
mov
pop
sub
subl
hlt
repz
cmc
xchg
repnz
cmpl
push
push
jmp
mov
decb
jge
cmp
pop
stc
jb
nop
pop
xchg
pop
jmp
stc
insl
gs
js
jo
stos
and
repz
or
out
mov
push
push
pop
inc
add
jb
mov
shrl
arpl
lahf
bound
out
adc
pop
repz
adc
dec
cmpsb
ja
test
outsb
mov
addl
push
pop
sub
cmp
pop
in
sbb
inc
xchg
mov
lods
imul
cwtl
insb
ss
xorl
fidivs
sbb
rorl
mov
sbb
xchg
xchg
les
xchg
adc
xor
adc
pop
mov
sbb
cmp
sub
stos
les
out
fbld
aaa
dec
out
add
and
insl
in
adc
sub
push
push
sahf
jge
enter
and
fs
add
mov
pushf
and
mov
and
orb
push
jnp
xchg
xchg
pop
inc
in
inc
adc
push
jp
popf
repz
mov
out
in
pop
push
mov
loopne,pn
fwait
aas
jmp
movsl
cmp
fwait
out
inc
push
loop
or
add
xor
js
xor
mov
pop
cmp
push
pusha
popa
inc
pop
lods
scas
sub
in
loop
jp
sbbl
mov
aad
gs
xchg
out
into
mov
mov
filds
sbb
js
ficompl
rorb
insb
sti
pop
out
lcall
or
dec
into
cli
cmpsb
enter
test
push
daa
call
jne
jb
test
cmp
inc
jge
mov
jae
cmp
inc
and
or
cmpsl
xchg
push
into
insb
leave
cwtl
add
cmp
xchg
dec
add
shlb
in
shrb
push
lret
cmp
dec
push
mov
loop
lret
mov
or
stos
ja
add
sub
rcrb
sub
sbb
insl
jne
xlat
push
sub
jo
mov
push
negl
cwtl
sub
pushf
jae
mov
mov
cmp
jmp
add
mov
test
stos
int3
xchg
pop
add
popa
adc
sbb
in
cmpsb
mov
mov
mov
aam
out
mov
mov
mov
fidivs
sbb
mov
pop
mov
inc
push
icebp
mov
sub
cmp
icebp
inc
jmp
stos
mov
mov
adc
cmpsb
out
push
xor
movsl
pushf
subb
and
sarl
mov
outsb
rsqrtps
loope
stos
pusha
or
into
or
fldl
mov
or
add
and
mov
test
hlt
inc
mov
add
xchg
dec
pop
push
sub
nop
fbstp
add
stos
xor
loopne
mov
dec
inc
outsl
jle
mov
jle
or
sub
pop
lret
subl
mov
jge
xchg
test
add
pop
or
outsb
cmp
xchg
jmp
xor
push
mov
mov
mov
mov
cmp
jns
addl
xchg
sub
std
jb
pop
inc
into
ss
mov
loope
scas
shrl
adc
jne
xchg
mov
fsubs
cmpsb
jl
xor
adc
mov
clc
xchg
or
ss
push
jp
push
js
add
stos
jl
mov
in
add
inc
int3
jae
mov
push
xor
loop
test
pushf
xor
aaa
dec
inc
xchg
testl
lds
push
aam
dec
adc
dec
mov
mov
mov
mov
cs
aam
sbb
dec
dec
mov
mov
aas
jle
xchg
das
fidivl
lds
fdivs
int3
xchg
mov
aas
sbb
stos
fisttpll
and
or
addr16
mov
push
pushf
sub
lods
cli
sbb
xor
mov
sub
mov
pop
out
in
fmull
xchg
push
fyl2xp1
mov
aas
insl
jno
add
mov
rorl
hlt
iret
pusha
and
mov
add
pop
cmc
mov
fs
inc
iret
jge
movsb
push
int
mov
pusha
ret
int
xchg
mov
mov
cmp
push
rclb
repz
push
js
shlb
cwtl
popa
push
aaa
into
leave
lret
jo
int
pop
or
hlt
popa
ja
lock
imul
lods
fwait
dec
mov
popf
stc
mov
add
test
mov
popa
jno
cmp
outsl
jne
inc
in
out
inc
shlb
adc
repnz
fistl
addr16
mov
dec
cmpl
push
xchg
mov
lcall
cli
sbb
xchg
jno
aad
push
pusha
xor
stc
mov
jae
out
xor
testl
scas
mov
add
mov
ds
xchg
clc
jne
jno
lcall
jne
dec
mov
mov
xor
or
push
fsubrs
pop
shr
iret
aas
mov
push
hlt
push
dec
or
gs
dec
xor
outsb
test
jge
cmpsl
cs
mov
rcl
dec
cmp
iret
pop
push
jb
pop
pop
ljmp
sti
sahf
sbb
dec
cmp
xor
outsb
mov
push
add
jne
push
cmp
mov
or
scas
mov
stos
mov
and
xchg
and
mov
xchg
repnz
jo
stc
popl
ror
scas
xor
outsl
rorb
jns
mov
mov
in
daa
xor
inc
movsl
cmc
jecxz
jle
and
xchg
inc
or
push
xchg
adc
jl
sti
scas
sbb
sub
cld
add
in
adc
stos
hlt
stos
xchg
stos
and
cld
imul
pop
in
cmpl
pop
jle
pop
mov
test
mov
lret
enter
mov
push
dec
loop,pt
test
popa
mov
push
push
xchg
push
insb
das
push
jo
inc
scas
xchg
out
js
cmp
mov
mov
cmp
pop
test
add
outsb
les
dec
shlb
pop
add
aam
lea
push
punpcklwd
mov
sub
outsl
lret
hlt
xchg
sahf
push
dec
into
adc
subb
pushaw
popf
cmp
sbb
add
or
mov
loope
mov
dec
xchg
push
and
jnp
mov
mov
or
pop
sub
les
imul
dec
movsb
mov
adc
aas
pop
lods
test
addr16
fmull
out
mov
mov
dec
pop
lods
shrl
ucomiss
test
cmp
aam
dec
movsb
xor
push
xchg
les
scas
cld
in
mov
outsb
aaa
gs
sbb
jnp
in
scas
sub
lock
cmp
fstps
loopne
call
in
jle
xchg
or
cmp
xor
call
fidivs
mov
mov
frstor
mov
imul
cmp
lret
add
adc
pop
mov
push
repnz
test
cli
imul
push
mov
push
test
lahf
stc
lcall
ljmp
rclb
inc
in
xchg
xchg
jae
add
push
xor
lods
xchg
xchg
popa
cs
jbe
jns
adc
imul
dec
mov
insb
cltd
mov
lahf
sti
int3
cli
mov
sarb
cmp
mov
inc
jno
iret
mov
insl
jecxz
cwtl
push
sbbl
test
mov
scas
pop
jp
mov
cwtl
call
mov
or
adc
push
popa
out
mov
push
sbb
popf
sbb
xlat
inc
mov
rcll
out
xchg
cli
and
cld
mov
scas
mov
cmp
jge
sarb
sub
data16
nop
int
in
adcb
fs
std
cmpb
cwtl
mulps
sub
push
push
mov
negl
mov
aad
aas
cmp
lret
add
mov
add
adc
jno
data16
sbb
imul
xor
cmp
stos
add
rcrb
sbb
arpl
mov
dec
pop
inc
mov
lock
adc
pop
adc
jne
outsl
es
int3
mov
push
and
pusha
dec
pop
les
imul
pushf
pshufw
and
fisubl
adc
lock
lret
std
dec
mov
sub
mov
jg
pop
daa
mov
insb
xchg
out
pop
sub
inc
outsl
aad
fldl
jl
pop
xor
scas
aad
test
loopne
xchg
int3
mov
sbb
cmp
and
mov
pop
jnp
sarb
jbe
xor
insl
inc
xlat
sub
cmp
push
mov
mov
inc
mov
dec
dec
or
pop
xor
or
es
add
pop
dec
negl
cmp
mov
pop
call
scas
xchg
jg
push
cmp
in
dec
scas
aad
inc
jl
arpl
inc
add
and
fsubl
cmp
aas
add
stc
cli
push
movsl
js
fcmovnu
add
lds
pop
retw
xchg
inc
mov
jo
jns
push
pop
jb
cmpsb
and
sbb
sbb
pop
or
sub
outsb
roll
ret
and
lret
adc
sub
fisubl
cmp
sbb
sub
dec
in
jp
insb
mov
sub
movsl
push
bound
cmp
mov
jle
movsl
inc
and
xor
push
cmpb
pop
mov
add
mov
jo
dec
sub
dec
cs
pop
xchg
jae
dec
jns
xor
adc
fbld
icebp
or
and
sbb
pop
fninit
ljmp
pop
xchg
xor
sar
test
cmpsl
je
and
add
mov
pop
ds
in
cmp
add
adc
mov
repnz
push
lahf
stos
push
jecxz
ljmp
lock
adc
sbbb
cmp
add
ja
ficoml
aaa
test
xchg
add
test
roll
movsb
iret
lcall
mov
jl
jecxz
es
enter
cmc
fnstcw
repnz
adc
jb
adc
lahf
shr
push
lock
mov
nop
ljmp
adc
fimuls
sbb
xchg
out
mov
cmp
cmp
out
sub
addr16
xchg
cs
stc
fs
jmp
mov
testb
mov
sahf
clc
aad
stos
iret
fidivrl
sbbl
sub
dec
sub
pushf
xor
sbbb
loope
imul
rclb
push
pop
jg
jmp
shl
xor
mov
and
push
push
mov
push
push
push
inc
repnz
imul
fistl
es
xchg
push
shll
cwtl
lea
call
dec
pusha
xor
sub
xchg
jo
xchg
mov
or
ja
out
stc
sbb
icebp
push
lret
sub
xchg
cmc
shrb
push
fld
data16
adc
sbb
lock
ljmp
xor
sub
fwait
lock
repz
das
cmp
sbb
mov
mov
leave
lods
jo
enter
cmp
in
int
jmp
mov
jae
or
pop
sub
divl
out
ret
dec
ja
das
out
push
dec
xchg
imul
add
shrb
jne
jl
lods
or
test
jmp
jl
cmpl
xchg
imul
mov
mov
mov
addr16
inc
lods
aam
sub
jle
cmpsl
mov
fisttps
testl
adc
mov
clc
aad
xchg
pop
mov
push
xchg
lret
ja
loope
add
sbb
push
add
pushf
scas
popf
add
fmull
stc
rol
imul
xlat
pextrw
cmp
xchg
ror
stc
sti
sbb
push
call
out
fisubl
sub
inc
push
push
dec
adc
mov
in
or
loop
in
dec
add
dec
pusha
push
fldenv
loopne
mov
xlat
add
in
cli
fsubl
scas
test
sub
mov
loope
xlat
js
leave
js
ret
aam
jp
out
ret
lods
add
inc
pop
lret
push
bound
aam
sub
bound
ja
pop
outsl
sub
scas
into
inc
sub
mov
xchg
and
pop
inc
fst
test
hlt
dec
gs
push
dec
cli
cs
aaa
jl
mov
repnz
mov
sbb
xchg
pusha
ja
into
cmp
lahf
ljmp
cli
dec
hlt
and
mov
or
mov
dec
das
jns
or
jb
popf
or
add
adc
jp
inc
push
push
jns
mov
inc
call
push
jnp
add
or
int
insb
or
sti
dec
sub
jbe
push
pop
mov
and
adc
adc
sub
push
xor
pop
adc
sahf
add
iret
mov
jecxz
sbb
addr16
add
adc
scas
fs
xchg
mov
stos
imul
dec
popf
out
and
stc
mov
mov
and
and
or
lock
push
cmp
mov
inc
jp
fstpl
sub
out
int3
push
mov
sub
rcr
xor
psubusw
imull
jne
aas
ja
push
dec
pop
jle
sbbb
fisubs
jle
std
pop
scas
pop
mov
and
xchg
mov
mov
mov
sub
repnz
inc
dec
test
push
fwait
scas
mov
or
push
xor
fdivl
add
push
cld
adcl
cltd
mov
test
das
dec
ss
shlb
in
inc
pop
dec
dec
rcrb
jno
adc
outsl
jp
mov
shrl
popf
xchg
pop
push
into
leave
movb
mov
xchg
test
fstp
mov
jp
jle
or
stos
inc
adc
mov
mov
xchg
xor
pop
lods
aam
and
mov
lds
insb
cli
insl
push
int3
mov
into
jns
aaa
test
jg
dec
and
aaa
or
lods
ror
jmp
sahf
mov
cmpsl
lods
xchg
mov
repnz
scas
jnp
imul
xchg
push
jb
sbb
cmp
dec
hlt
pushf
nop
pop
mov
push
push
sub
stc
fdivrp
movsl
fidivrl
ret
into
xchg
and
int
cmpb
push
jbe
cmp
inc
or
mov
push
scas
stos
mov
imul
roll
xchg
gs
sub
sti
lods
mov
mov
es
or
jno
xor
or
pop
loopne
and
lahf
outsb
cmc
mov
repnz
cmp
push
aad
xor
mov
inc
test
je
fs
push
add
cli
inc
jns
jp
xchg
pop
push
xchg
add
lods
mov
aam
sub
push
jno
imul
sbbl
cmp
adc
pop
or
inc
fistps
mov
xchg
inc
ss
jns
push
les
leave
cmp
loopne
or
push
sti
test
outsl
data16
inc
mov
fstpt
jle
fisttpl
cltd
aas
lds
sahf
repnz
push
mov
es
outsl
lret
pop
sub
int3
jecxz
loopne
std
jmp
and
mov
add
add
sub
or
and
adc
insb
mov
rcrl
sbb
and
aam
les
inc
push
pusha
pusha
add
rol
xchg
test
sub
sbb
xlat
cli
and
test
add
or
filds
sub
lea
cmpsl
std
cmc
repz
ret
cmpsb
iret
es
das
je
rorl
sbb
dec
repnz
cmp
mov
pop
mov
add
or
gs
xor
push
jp
sbb
hlt
cmc
adc
dec
frstor
lahf
popf
nop
push
or
pop
mov
mov
cltd
xchg
inc
in
adc
mov
push
scas
and
inc
add
pop
xlat
sbb
mov
sbb
call
or
test
push
inc
pop
enter
cld
bswap
add
dec
pop
xor
jmp
sub
push
arpl
or
fnsave
js
or
sbb
int3
hlt
mov
cmp
xchg
cmp
dec
loopne
push
xchg
lcall
sub
mov
jbe
add
adc
mov
xor
or
inc
push
mov
and
outsl
shrl
je
jno
xchg
mov
pop
inc
inc
mov
ss
popa
xor
sti
push
mov
jne
fwait
dec
out
movsb
les
int3
sarl
ret
gs
nop
out
leave
jnp
inc
inc
insl
popf
mov
add
rorb
pop
clc
je
push
lods
rcrb
add
outsl
es
jne
mov
push
scas
dec
mov
xor
lcall
or
sbb
and
push
sti
nop
jae
pop
rolb
cmp
insb
mov
rorl
adc
xchg
and
mov
mov
xchg
xor
sub
dec
daa
stos
push
sahf
xchg
pop
mov
xchg
test
shlb
cmp
call
cmp
dec
subb
lods
nop
push
add
arpl
inc
pushl
cmp
dec
xchg
dec
sub
or
push
xchg
int3
or
in
mov
int
daa
in
adc
pop
popf
dec
or
cmpsb
addr16
mov
xchg
push
cmp
fcomps
mov
mov
sti
xor
dec
push
arpl
mov
pop
rcl
pushf
out
outsb
push
mov
out
repz
les
mov
jl
sbb
test
xchg
mov
push
cmpsb
mov
imul
jns
adc
fbld
shr
xor
sbb
rolb
or
bound
mov
loopne
sbb
dec
jmp
ja
push
lock
cmp
test
cmp
fmuls
mov
jle
and
andl
inc
xor
es
icebp
push
mov
push
out
repnz
sub
add
dec
xor
pop
dec
xchg
ds
outsb
jge
xchg
mov
pushf
shl
ret
outsl
cli
pop
add
das
mov
jl
insb
loopne
mov
xor
and
push
xorb
out
mov
fwait
sbb
sub
jl
lods
enter
mov
mov
cmovne
or
push
xchg
xchg
mov
add
push
jp
jecxz
repnz
ficompl
loope
jnp
inc
sub
add
inc
jo
ja
pop
lret
and
xchg
push
sbb
rcll
mov
sub
jnp
sub
hlt
xchg
sbb
jae
adc
fidivs
cmp
movsb
mov
jecxz
cmc
lods
repnz
addl
and
adc
fisttpll
cmc
mov
data16
popa
in
xchg
cmp
pop
or
jmp
xchg
adc
sahf
or
pop
cmp
gs
int
pop
xor
jnp
cmc
sti
sarl
inc
fs
mov
jmp
insl
sub
push
nop
sub
pop
test
cmp
jno
pop
cld
sbb
xchg
je
push
mov
loop
mov
data16
jge
sahf
leave
scas
iret
and
jmp
dec
lea
ret
in
leave
incb
xchg
in
fidivrs
cmpsb
sub
cmp
rclb
or
ret
add
jne
adc
dec
jne
enter
dec
and
dec
sbb
sub
jl
dec
add
jne
test
push
sbb
movsb
pushf
aas
lret
mov
fdivrp
scas
pop
pop
pop
mov
stos
xchg
aas
add
pop
dec
push
mov
mov
test
std
repz
movsb
jns
dec
fidivs
out
addb
pop
dec
adc
mov
sbb
and
lcall
int
push
xchg
out
ljmp
push
mov
and
out
push
inc
test
rcrb
push
sub
pop
sub
jmp
mov
sub
pop
inc
jl
ficoms
imul
jmp
and
pop
mov
shr
ja
add
cmp
pushl
insl
adc
adc
mov
aas
lcall
lods
out
repnz
ja
inc
sahf
push
fsubp
jmp
mov
and
das
xor
sti
fidivrl
es
xchg
dec
adc
lcall
mov
sbb
leave
sub
mov
adc
negl
negb
insb
loope
lcall
sub
jmp
dec
pop
inc
lahf
das
mov
lods
jp
mov
mov
testl
les
inc
fcmovnb
ret
sar
xor
lds
scas
cmp
adc
jecxz
adc
add
pushf
mov
or
arpl
xchg
mov
cbtw
incb
cmp
stc
cmp
jge
and
pop
addb
add
fidivrl
stos
insl
sub
dec
push
loope
int3
add
dec
add
mov
mov
inc
popa
pusha
mov
xchg
aam
add
xorl
cmpsb
pop
cli
xor
and
adc
add
xchg
nop
out
jno
addr16
ja
mov
andb
dec
push
add
inc
int
je
dec
dec
mov
imulb
iret
arpl
hlt
fstp
and
fstps
imul
jnp
lret
pop
push
inc
push
mov
mov
cwtl
xorb
pop
ss
lret
outsl
sub
cltd
lods
mov
es
lock
mov
jg
stos
outsb
aaa
adc
out
test
push
mov
test
es
mov
inc
hlt
jae
roll
sbb
pop
cmpl
xlat
mov
pop
jg
dec
cmpl
fnstsw
jnp
es
loopne
xchg
lret
push
rcl
popa
sbb
stos
cmp
mov
fnstsw
sbb
xchg
fisubrs
lahf
xchg
fiadds
dec
dec
insb
push
daa
push
adc
dec
orb
jo
rcrb
mov
push
jg
sbb
adc
iret
clc
push
or
ret
mov
int3
push
mov
jae
push
xchg
test
or
push
rcll
pop
dec
xchg
xchg
sbb
popa
inc
mov
fnstsw
mov
bnd
push
mov
push
mov
fistpll
pop
ja
mov
imul
mov
lock
ja
dec
test
mov
xchg
sbb
dec
cmc
ljmp
jp
dec
mov
ret
insb
cwtl
lret
cs
insl
stos
xorl
add
stos
cmp
add
inc
fwait
xchg
filds
cmpb
dec
ljmp
mov
add
mov
cmpsb
inc
mov
jmp
fiaddl
mov
js
fstl
iret
push
mov
mov
pop
popf
insb
outsb
jnp
mov
stos
xor
dec
pop
sub
sbb
and
push
inc
movsb
and
push
daa
add
pop
push
mov
popa
mull
cld
dec
fstl
dec
xor
int3
pop
mov
lcall
jmp
mov
adc
scas
inc
out
sbb
call
stos
cmp
push
push
pop
dec
push
fwait
scas
xor
gs
loopne
pop
notb
xor
lods
and
jge
pcmpgtb
mov
mov
cwtl
scas
and
fisubrs
rorl
or
push
test
mov
xor
or
stc
push
fwait
ss
in
mov
or
shlb
pop
fsubs
pop
jno
loop
mov
lcall
inc
movsb
int3
cmp
jmp
sub
andl
frstor
loopne
iret
xor
aam
out
jnp
popa
and
add
in
lods
add
sub
push
or
in
xor
lods
cmc
sbb
add
repz
ss
sbb
adc
jg
test
lods
sub
push
push
rcrb
shlb
adcl
jnp
imul
shll
scas
mov
dec
outsl
xor
adc
loop
jecxz
adc
loopne
int3
xlat
mov
fwait
xchg
ja
fistps
mov
ds
xor
add
sbb
cmpsl
loope
adc
aas
push
arpl
mov
mov
mov
mov
setbe
aas
inc
sbbb
or
shll
sub
xchg
shl
popa
sub
sub
nop
call
mov
xchg
daa
xor
jge
test
adc
jae
add
pop
mov
cmpsw
or
pushf
add
jns
mov
push
imul
or
es
xchg
inc
jbe
in
movsl
je
and
stos
and
adcl
ficoml
xchg
adc
insb
add
adc
sarb
xchg
nop
shlb
or
rcrl
and
mov
sbb
ss
sub
mov
pushf
mov
pop
and
jmp
out
add
mov
bound
or
jmp
lods
and
inc
stos
mov
movsl
popf
jl
loopne
daa
mov
subl
xchg
outsl
int3
mov
mov
jbe
xor
gs
mov
mov
dec
out
or
and
fwait
xchg
xor
push
dec
and
adc
es
adc
mov
cs
dec
aas
mov
and
stos
dec
in
xchg
mov
mov
dec
std
push
outsl
orl
or
in
stc
pop
pop
xor
and
mov
pmaddwd
fdiv
mov
loopne
mov
sbbl
pop
jmp
xchg
shll
push
xchg
jnp
call
iret
adc
out
mov
lcall
adc
mov
scas
and
sub
and
nop
push
pop
popf
xor
inc
sub
decb
mov
nop
test
das
adc
push
mov
inc
imul
push
xchg
jo
mov
test
add
mov
dec
xor
lods
mov
sbb
add
sub
push
jg
sub
lret
cmpsb
adc
mov
xor
push
cli
ret
leave
inc
shlb
btr
sbb
pop
sub
and
lea
mov
ret
scas
and
push
inc
mov
push
rcll
fisubs
mov
dec
aaa
test
sbb
mov
sbb
sbb
fisttps
pop
iret
xchg
push
xchg
xchg
andb
sub
jo
add
cmp
mov
loopne
mov
push
loope
push
mov
adc
and
adc
aam
xlat
sbb
inc
and
repnz
and
test
and
sub
adc
popa
sbb
mov
inc
mov
jge
xchg
lock
lret
dec
mov
or
std
pop
pop
pop
jg
scas
out
pop
pop
and
push
pop
mov
dec
pop
sbb
adc
pop
sub
adc
mov
dec
leave
aam
jae
cs
dec
add
mov
hlt
xchg
inc
mov
repz
sbb
sbb
pop
mov
xchg
cmp
aam
jge
ljmp
imul
cli
stos
lret
cld
ss
add
push
mov
or
lds
push
mov
dec
mov
out
fcmovb
xchg
jp
mov
js
pop
and
jmp
mov
scas
adc
ljmp
or
repz
jle
cld
jp
pop
jecxz
fildll
test
repz
stc
out
stos
push
fisubl
adc
xorb
or
or
aaa
adc
push
jecxz
arpl
dec
mov
fs
jg
sub
es
sbb
sub
jl
or
push
mov
es
out
add
xor
add
xor
xchg
and
cmp
movsl
add
loope
cli
imul
push
and
dec
xchg
pop
pop
cmp
sahf
cwtl
outsl
ljmpw
xor
int3
insl
mov
push
icebp
pop
inc
pop
fidivrl
les
sbb
pop
dec
xchg
cmp
iret
imul
push
mov
pop
jns
mov
cmp
xor
test
xor
jp
lret
push
push
jae
inc
jmp
adc
stos
je
mov
jno
mov
cmpsl
fstl
mov
push
js
cmpsl
cld
inc
mov
jno
scas
sbb
lods
and
es
lret
icebp
test
into
aas
loope
dec
adc
fwait
ljmp
mov
cmpsl
ss
push
push
sbb
xor
adc
scas
inc
and
mov
pop
leave
insb
fsubr
arpl
mov
pop
stc
subl
ds
jp
arpl
xchg
sub
leave
sbb
dec
jo
mov
pop
mov
nop
fstps
cld
aas
cmp
and
ret
push
jns
nop
andl
dec
pop
fistps
outsl
mov
pop
adc
adc
sbb
shll
lahf
dec
out
mov
popa
add
and
jmp
mov
mov
mov
add
subb
ret
push
cmp
frstor
jge
inc
cs
sbb
ljmp
adcb
jg
pop
or
add
dec
xor
gs
push
ja
xchg
insl
jae
cmp
pop
roll
cmp
mov
lahf
jmp
sub
loopne
in
pop
imul
pusha
dec
lods
das
push
fisubrs
jecxz
outsb
xchg
push
ss
cmp
push
mov
xor
incl
test
pop
js
cmc
jp
xchg
repnz
push
or
loopne
cltd
adc
orb
dec
clc
out
mov
hlt
lahf
sti
repz
push
sbb
cs
adc
fwait
loope
addr16
add
fs
arpl
or
and
bnd
gs
fnstsw
cli
scas
int3
bound
inc
xor
push
xchg
imul
cmp
pushf
and
cmp
or
add
add
sub
pop
hlt
into
sub
repnz
adc
pop
bnd
outsb
sub
jo
dec
cwtl
lock
repz
addr16
shrb
cmpsl
lea
xlat
dec
inc
in
pop
lcall
fdivrs
filds
jp
push
cmp
insb
fbstp
inc
mov
test
scas
lcall
push
pop
add
into
scas
out
dec
xor
adc
dec
loop
sar
sarl
jno
popl
dec
add
roll
sbb
enter
xchg
insb
xchg
add
dec
mov
leave
push
or
sbb
cltd
add
loop
cs
push
mov
adc
rcll
in
pop
call
mov
stos
xchg
pop
add
xor
loope
push
iret
mov
mov
fists
pop
rorb
popa
into
hlt
xlat
rcll
adc
mov
cmp
and
imul
xor
stos
xor
sub
popf
dec
sti
pop
add
or
push
addb
in
push
jo
xorb
lds
insb
aas
jmp
push
mov
mov
xchg
mov
leave
in
scas
inc
adc
sub
adc
mov
mov
stc
cmc
outsl
sub
or
push
xchg
aam
mov
and
stos
std
jg
mov
xchg
inc
inc
inc
les
lcall
dec
outsb
arpl
xor
mov
jl
lods
in
int
sarl
iret
outsb
dec
jl
mov
inc
sub
insb
xor
addr16
cmp
ljmp
xchg
jmp
xor
mov
jnp
jnp
mov
aad
sbb
jae
push
mov
push
or
sbb
inc
inc
add
sbb
aam
and
mov
mov
sbb
or
test
repz
inc
imul
test
call
cmc
es
out
enter
pop
jbe
js
push
push
test
loop
mov
adc
mov
mov
push
sub
inc
out
daa
mov
pop
jne
pop
cmpsl
xor
mov
testb
cmp
sub
ret
mov
xchg
push
sahf
mov
mov
jp
lds
adc
inc
cmp
sub
call
cwtl
and
pop
inc
sbb
std
mov
loopne
mov
stc
mov
inc
cwtl
test
cli
or
les
dec
push
fstp
mov
dec
arpl
and
push
fiadds
jmp
scas
movsl
enter
adc
dec
clc
sti
ds
test
jge,pt
sbb
sub
scas
mov
mov
fimuls
mov
and
enter
mov
lret
loopne
mov
outsb
cld
xchg
fcomip
jmp
xor
pop
repz
js
mov
cmp
fnstcw
mov
pop
popa
mov
lret
push
mov
sbbb
push
pop
jge
adc
rclb
sub
div
pop
fsubrl
push
bound
cli
jmp
adcl
es
fists
and
xchg
mull
iret
mov
cmp
enter
scas
cli
sbb
mov
shll
pop
into
addr16
pop
testl
push
cmp
push
xchg
cmpsb
mov
lds
jns
aas
cmp
dec
xchg
fnsave
test
jno
hlt
orl
gs
inc
mov
test
add
ret
repnz
sub
inc
cli
adc
cmp
pop
sti
xor
les
xchg
rcrb
xchg
shl
push
test
fidivrs
les
mov
mov
pop
mov
jo
add
repnz
mov
sbb
cmp
cld
lds
pop
cli
dec
inc
cmc
cmp
loopne
clc
rdtsc
inc
into
cltd
cmpsb
push
jo
rorb
dec
mov
repnz
arpl
mov
dec
jl
inc
fsubs
add
stos
repz
stc
and
xorb
shl
jge
dec
insl
push
mov
xchg
xchg
sub
insl
insb
mov
or
mov
mov
inc
int
or
mov
mov
hlt
in
adc
out
rcll
out
shlb
adc
xchg
and
test
sub
jmp
dec
or
jg
adc
pop
pop
push
fldenv
xchg
loop
xchg
cwtl
incb
xor
aaa
sbb
push
add
jo
pop
adc
jg
dec
mov
fs
sbb
mov
mov
pop
adc
int
mov
clc
mov
pop
and
dec
repnz
pop
repz
ds
jmp
xchg
or
jbe
shr
cmpsl
daa
outsb
add
xchg
inc
cpuid
repnz
xor
pop
scas
cmc
xor
mov
les
push
xlat
jmp
movsl
and
cmc
pop
fnstcw
scas
xchg
adc
cmp
dec
pop
shr
outsl
daa
sub
cmp
stos
in
mov
add
adc
js
mov
pop
add
fisttpl
pop
cmp
ret
mov
imul
repnz
std
out
out
nop
add
cld
cmp
jp
mov
pop
andb
scas
adc
ljmp
dec
inc
mov
add
sti
jge
ss
or
call
jae
push
int3
rcll
je
je
xchg
jle
gs
pop
gs
loope
lahf
mov
es
inc
sub
fsts
stos
gs
pop
pop
dec
aam
jg
and
outsl
addr16
xchg
cli
das
mov
mov
in
pop
jp
push
shll
mov
mov
add
mov
adc
fwait
mov
mov
dec
pop
push
lret
jge
mov
out
cwtl
lret
shrl
movsl
inc
lock
dec
icebp
dec
and
sbb
xor
lret
ror
dec
adc
int
push
dec
mov
mov
in
lock
fidivrs
data16
mov
jns
fwait
dec
inc
or
insl
ds
mov
ret
mov
insl
pop
ret
xor
pop
push
insl
lods
jecxz
sti
mov
rcll
mov
fnstsw
repnz
xchg
cwtl
sbb
mov
push
sub
mov
add
loop
aam
test
pusha
popf
xor
ja
pusha
ja
mov
rorl
imulb
dec
test
notb
push
fdivs
imull
jae
fsubl
mov
icebp
pop
int
cld
cmp
loopne
xchg
outsl
add
dec
loopw
popa
imul
jb
je
loop
idivl
mov
sub
stc
xor
out
shrb
and
xchg
adc
xchg
outsb
and
push
cmp
sar
push
addl
jmp
or
fcomi
dec
insb
pop
in
pop
mov
jmp
aad
jb
adc
shlb
lds
sbb
xchg
rcl
enter
cmpsb
jl
test
stos
negb
or
aam
xchg
clc
and
mov
fstp
jns
inc
out
xor
jle
fistps
push
push
mov
loop
dec
fisttpl
lea
mov
inc
stc
and
lods
cmc
jp
fs
leave
fs
in
push
shlb
jno
test
mov
adc
int3
sub
mov
pushf
popa
add
xchg
mov
dec
ds
insb
aam
or
fwait
sbb
xor
xchg
xor
mov
pop
sbbb
fsubrl
pop
stos
lds
out
mov
shlb
mov
test
jbe
add
scas
xor
jae
mov
pusha
data16
stos
lods
call
xchg
sbb
in
lret
pop
xchg
mov
jns
fidivl
sub
cld
adc
xor
add
pop
cmp
dec
movsb
dec
aaa
lret
testb
je
pop
fucom
dec
push
stos
scas
insl
pop
inc
scas
dec
daa
xchg
push
xor
push
or
outsl
or
xor
pop
sahf
cmp
nop
out
push
loope
mov
xor
push
xor
cmpsl
push
lock
aas
and
into
in
gs
xchg
into
out
mov
jge
in
or
adc
fucom
loope
addr16
mov
jns
lret
movsl
push
ret
mov
or
cld
insb
lods
les
addl
adc
in
sahf
adc
adc
ljmp
xchg
ja
xchg
inc
xor
sahf
fsubl
pop
iret
jl
mov
andl
mov
jbe
in
call
push
out
negb
test
xchg
aas
ret
sbb
mov
pop
jle
outsb
adc
or
fmul
repnz
xchg
mov
mov
dec
sahf
sar
cmc
sahf
push
scas
imul
xor
pop
mov
and
sub
sbb
inc
clc
cmp
std
jmp
rorl
cmpsl
inc
dec
test
push
ficompl
out
sub
and
mov
mov
test
lods
loope
nop
leave
dec
sub
or
add
ss
insb
mov
xor
ds
xchg
rclb
divb
mov
add
push
hlt
sti
or
jp
sub
jae
or
insb
or
dec
or
je
nop
mov
out
ret
sub
push
inc
xor
test
fwait
push
negl
xor
bound
mov
in
jno
pop
and
leave
les
outsl
pop
add
sub
xlat
cmp
adc
mov
sar
lods
test
push
and
dec
out
ds
mov
cmpb
iret
xor
mov
lcall
xchg
stos
es
sahf
sbb
mov
and
sahf
rclb
push
ficompl
out
xor
sbbl
daa
or
stc
cmp
mov
dec
stos
adc
rcrl
pop
and
xchg
jle
popf
dec
mov
insl
inc
sbb
sbb
popf
int
push
aaa
sbb
lods
add
in
inc
pop
lcall
or
das
lahf
mov
mov
hlt
nop
int
sbb
imul
scas
push
mov
fdivrs
test
inc
test
loopne
es
jbe
and
push
into
push
pushf
sbb
inc
test
sahf
xchg
or
add
mov
inc
or
dec
fnstsw
cmp
dec
in
lahf
data16
xor
adcl
mov
iret
ret
loope
pop
cmp
sub
mov
cmp
movsb
cli
xor
in
rorl
sar
repz
je
imul
add
pop
filds
aad
movsb
hlt
mov
fnstenv
fs
aad
fdivrl
cs
ja
inc
lahf
roll
pop
xchg
xor
jmp
aas
pop
mov
inc
aad
outsl
les
push
out
imul
mov
mov
mov
hlt
sbb
push
fcmovnu
roll
popa
cltd
pop
clc
mov
rcrl
dec
outsb
mov
and
cmpsl
popf
jbe
adcl
test
cmp
add
mov
imul
ret
xchg
faddl
dec
cmpsb
inc
push
fcom
gs
jmp
sbb
fldl
in
jno
test
xor
sub
rcl
call
fsubrp
push
push
push
aam
into
cmc
lahf
inc
pop
cmp
add
cmp
mov
das
jb
add
sti
cmp
xor
int3
stos
mov
xchg
push
pop
sub
decb
es
fisubl
mov
mov
dec
mov
jo
lahf
or
sbb
or
pop
fnsave
rol
mov
push
ret
sbb
cmp
imul
outsl
pop
inc
and
dec
and
test
rorl
movsl
jmp
and
dec
in
int
subb
imul
jnp
les
add
inc
xchg
sbb
jg
mov
dec
mov
jo
outsl
ret
mov
pop
sbb
addb
cmp
push
mov
scas
fsubs
mov
dec
dec
xor
nop
divb
lret
inc
and
push
or
dec
push
outsl
ret
jb
mov
pop
clc
bound
xchg
pop
sub
nop
and
dec
icebp
lret
mov
mov
push
movl
or
dec
push
ja
or
push
or
jecxz
sub
mov
and
push
outsl
mov
mov
cmp
movsl
xor
pushf
xchg
lock
outsl
adc
stc
or
jge
arpl
xor
sub
aam
sbb
ret
mov
popa
push
push
ret
ror
in
mov
sub
test
aas
sub
jp
in
out
cmp
popa
hlt
fwait
sbb
cmp
roll
dec
pop
jns
lahf
out
mov
and
popaw
sub
pop
andl
add
arpl
call
lock
hlt
in
sbb
insb
nop
xchg
push
jno
in
and
lods
shl
push
mov
ficoml
sub
xchg
pop
rcrb
pop
out
and
lcall
and
fcoml
lahf
and
js
in
test
mov
and
mov
inc
ret
fwait
bound
mov
sbb
add
int3
in
pop
je
jle
lods
testl
mov
ja
inc
pop
pop
or
stos
inc
enter
push
pop
leave
or
aas
aam
popf
mov
pop
rcl
outsl
xchg
mov
adc
xchg
in
sbb
pop
push
outsb
mov
add
stc
push
pop
rol
and
xor
nop
pop
int
sub
add
stos
add
cmp
popa
inc
cmpl
mov
aas
dec
test
xchg
ret
xor
sub
lret
icebp
mov
ss
loopne
adc
or
or
push
arpl
add
pushl
dec
sub
bound
push
mov
mov
pusha
mov
rcll
add
jbe
or
lods
mov
add
push
mov
in
mov
fcomps
scas
ret
pusha
lcall
cmpsb
xlat
mov
pop
sub
in
insl
add
dec
dec
scas
fs
call
jmp
fsubrl
xor
pushf
inc
dec
sbb
cmp
jmp
daa
push
sub
mov
mov
jne
jp
inc
sub
mov
dec
add
mov
in
dec
and
xchg
sub
push
movsb
scas
das
cltd
and
mov
push
scas
mov
add
ret
imul
adc
movsb
inc
enter
inc
mov
mov
insl
adc
push
sub
lods
nop
jbe
out
movsl
ret
xor
mov
add
insb
xor
ret
lea
imul
mov
and
imul
adcl
cmp
or
jno
cmp
adc
addr16
pop
cmp
add
sbb
push
and
adc
jae
out
sub
mov
and
cmpsl
icebp
mov
adc
mov
jo
ljmp
mov
fbstp
pop
insb
cmpsl
divb
out
lret
pusha
sub
imul
fadds
pushf
idivb
imul
add
pop
pop
jnp
add
mov
test
sub
mov
dec
pop
subb
je
mov
pop
fstl
mov
insb
ss
fs
ljmp
repz
sti
push
cmp
inc
rorb
inc
int
cmpsb
ss
cmp
stos
call
jbe
cmpsb
cmp
arpl
sub
push
pop
inc
stos
test
sahf
push
mov
mov
icebp
lods
ja
sbb
rcr
push
push
insl
mov
pop
mov
jno
orl
xchg
xor
xor
inc
fwait
icebp
stos
repz
or
adc
mov
iret
aaa
xchg
dec
lret
out
jecxz
sub
loope
icebp
shrl
jno
fstpl
fisubrs
xchg
jo
sub
mov
push
outsl
pop
lds
lock
push
and
jp
ret
test
adc
xchg
mov
sub
dec
aaa
out
adc
push
inc
sahf
int3
push
mov
sahf
cs
addl
dec
jl
rcl
out
int
mov
adc
push
aam
jecxz
xor
not
push
fwait
push
jmp
or
inc
hlt
cmp
clc
mov
mov
mov
daa
aam
inc
push
idivb
inc
pop
pop
gs
mov
fnstcw
int3
mov
pop
sub
xor
sub
stos
imul
repz
faddl
jg
clc
push
pop
xchg
push
push
mov
sbb
pop
stos
adcb
cld
fldt
pop
mov
sbb
sti
aas
scas
mulb
inc
cmp
lods
pop
les
push
jp
dec
nop
xor
scas
push
shlb
imul
push
xor
mov
pop
inc
fdivrl
cwtl
ret
inc
lahf
add
test
xor
mov
lahf
mov
cmp
daa
ror
js
clc
dec
push
and
jbe
cwtl
inc
and
sti
iret
mov
fmuls
push
fsub
mov
ljmp
pop
adc
and
ficoml
push
fwait
or
cmpsb
sbb
or
push
sbb
sub
imul
out
or
jmp
mov
scas
cltd
inc
outsl
jle
out
mov
out
repnz
vmovsldup
jp
ficoms
ja
addb
mov
enter
mov
mov
cld
inc
sub
pushf
in
or
pop
jbe
lcall
add
scas
fcompl
stos
out
ret
cmpl
inc
adc
adc
movsl
xchg
loopew
pop
dec
mov
leave
mov
gs
xor
lcall
rol
hlt
xchg
stos
call
inc
arpl
sahf
sub
outsb
dec
add
sahf
in
mov
add
xchg
jle
mov
cmp
jp
in
pop
aas
push
xchg
inc
adc
stos
jo
stc
inc
loope
leave
mov
jl
loopne
or
jne
movsl
add
jno
xor
mov
pop
pop
xchg
push
out
push
mov
idiv
cmp
lcall
sub
jp
shr
xchg
cli
add
mov
shlb
mov
inc
call
sub
leave
sub
dec
and
dec
je
je
icebp
and
add
mov
jg
xor
stos
test
adc
push
xor
ret
jo
aas
cli
and
or
or
push
push
clc
mov
es
dec
js
andl
ss
insl
popa
adc
adc
test
rolb
mov
lahf
cmp
data16
test
mov
push
adc
push
adc
mov
push
mov
inc
and
shr
push
rep
rcll
rcrl
stos
mov
out
sbb
lahf
and
mov
or
xorb
ret
jne
rol
rclb
xchg
mov
clc
jnp
pop
test
in
mov
stos
leave
ljmp
mov
jecxz
iret
rorl
pop
xor
jae
jne
call
jg
cmp
xchg
mov
xor
jmp
gs
xchg
mov
ljmp
xor
repnz
adc
sti
and
out
pop
repnz
and
sub
outsb
cs
adc
xor
sub
das
bound
inc
mov
shl
in
scas
loope
mov
mov
sbb
pop
sbb
dec
clc
push
jl
push
sbb
js
mov
cwtl
lea
sbb
sbb
or
cltd
repz
add
pop
pop
fdivl
push
fdivs
inc
xchg
popa
fdiv
std
fwait
sbb
adc
sbb
push
jmp
sub
add
pop
cmp
popa
mov
jmp
mov
pop
jge
lret
jle
or
lds
dec
scas
cld
iret
es
mov
sub
mov
sbb
fstps
sbb
add
sarb
dec
aaa
data16
hlt
mov
inc
mov
mov
outsl
add
out
or
into
insl
sbb
cmp
popf
inc
nop
add
pop
push
mov
popf
lret
add
rorl
xchg
test
ret
dec
jmp
fadds
sbb
sahf
jne
pop
push
out
jecxz
mov
mov
mov
inc
enter
loope
idivb
addr16
inc
add
or
nop
pop
out
bound
cmp
shlb
mov
das
test
loop
mov
ja
mov
fs
fwait
std
add
xchg
stc
sahf
fwait
xor
fld1
adc
ja
in
lahf
stc
jle
mov
dec
or
fdivrs
ret
cmp
dec
and
inc
xchg
js
outsb
je
lea
jo
daa
sbb
or
mov
outsb
inc
cmc
cld
jbe
stc
insb
stc
or
jp
stc
dec
cmp
adc
mov
mov
sub
mov
sarb
lcall
mov
inc
inc
sub
push
and
dec
fildl
dec
aam
xchg
or
pusha
aas
rcl
int
hlt
add
xor
stos
push
xchg
aam
mov
loop
xor
test
sbb
ret
push
loope
xchg
out
daa
leave
jecxz
cmp
mov
add
push
lret
out
xchg
fimuls
out
es
in
sub
inc
lahf
cmpsb
daa
outsb
std
mov
mov
mov
cmpsl
cmc
xchg
jnp
mov
add
add
test
scas
add
mov
ficoms
mov
movsb
sub
cld
and
stos
and
shr
cmp
insb
setns
stos
andl
insl
and
push
or
fdivl
cmp
fcmovu
testl
or
dec
xchg
test
sub
mov
outsl
mov
negb
data16
mov
adc
sbb
fwait
inc
mov
daa
test
je
cmp
pop
sbb
fiaddl
pop
mov
or
mov
test
cmp
fs
sub
add
jp
aaa
add
in
cmc
std
scas
inc
xchg
ret
into
inc
push
iret
movsl
and
mov
jb
mov
sub
stos
jmp
test
gs
loop
xchg
pop
jae
lret
push
xor
xchg
xor
add
inc
fisubs
xchg
and
cmp
nop
pop
jecxz
adc
in
sub
jnp
jmp
push
aas
push
sbb
cld
pop
mov
sub
mov
cmp
pusha
fisttpl
data16
shrl
out
or
lea
push
adc
pop
jecxz
ja
movsb
out
sbb
test
pop
in
out
sub
adc
and
pop
inc
cmpl
nop/reserved
ficompl
repnz
je
push
dec
movhps
addb
mov
pop
sbb
mov
jnp
sub
sub
dec
jb
cmpsl
inc
cmp
test
imul
popa
add
sti
data16
hlt
mov
lock
xchg
dec
shll
mov
sbb
push
sub
xor
fwait
xchg
adc
push
lds
loopne
push
movsb
sahf
fs
xchg
fs
sub
daa
cmp
and
xchg
mov
cmp
movsb
mov
and
mov
dec
adc
mov
adc
test
bound
dec
pop
insb
cs
push
stos
shlb
xchg
ret
cmp
negl
incb
inc
loop
and
pop
loop
adc
xor
imul
or
lcall
aad
push
sbb
call
xchg
test
sbb
push
push
lock
loop
mov
out
mov
gs
and
push
ljmp
int
lods
ret
pop
stos
mov
jg
pop
pop
inc
lahf
inc
outsb
sub
idivb
lods
int3
mov
push
or
jno
movsb
dec
mov
jno
or
pop
stc
jbe
xor
repz
push
iret
jne
xchg
movb
xchg
xor
sbb
test
in
mov
mov
adc
mov
lock
inc
and
punpckhwd
fiadds
fldt
jl
rolb
icebp
mov
loopne
cmp
cli
repnz
mov
out
cmpl
movsb
loop
dec
popf
push
es
and
lret
pop
mov
xchg
xlat
out
jo
shlb
pop
jbe
push
jns
dec
adc
aas
fidivl
or
sub
mov
mov
dec
subb
pop
ret
cmp
sub
mov
lcall
fldenv
shl
dec
cmpsb
test
or
sahf
add
lods
ffreep
mov
ss
outsl
mov
hlt
shlb
sbb
js
xchg
mov
mov
ds
sub
call
inc
dec
sub
mov
push
cmp
ds
punpckhdq
movsb
fimuls
mov
int
or
fnstenv
cmpsb
cltd
mul
lds
dec
fmull
addr16
fst
in
stos
shlb
sti
ljmp
pushfw
int3
lock
xchg
and
sub
les
jo
push
loopne
sub
jge
test
sti
jbe
fisttpl
cmpsb
xor
push
sbb
cmp
xchg
nop
ret
pop
dec
fisubl
dec
add
out
scas
je
test
jbe
mov
loop
jecxz
inc
sahf
mov
insl
rol
outsl
cld
mov
xor
dec
mov
jg
std
mov
out
mov
dec
rcr
dec
adc
imul
mov
ret
mov
enter
and
movsl
and
sub
xor
mov
inc
dec
adc
mov
xchg
or
dec
ret
out
add
jne
lods
test
out
and
in
pop
icebp
clc
lcall
jno
repnz
sarb
xchg
rorl
add
jne
push
fnsave
lahf
or
pop
jmp
loope
mov
cli
cs
inc
shlb
sarb
out
push
cld
or
mov
dec
int3
mov
es
lds
xchg
mov
outsb
aad
in
add
loop
notb
sbb
jmp
jge
mov
call
mov
xor
fidivs
fistps
popa
xchg
xchg
ss
sub
jmp
shlb
out
xor
fsubl
jmp
in
dec
js
jmp
mov
sub
push
gs
push
mov
nop
int3
or
mov
xor
pop
and
xor
shlb
jle
pop
and
mov
shll
outsl
adc
sbb
mov
loopne
fisttpll
in
inc
in
lods
xchg
mov
orb
xor
stos
fldl
lods
push
sbb
outsb
mov
xor
sub
adc
jnp
push
adc
sahf
add
mov
nop
loop
rclb
int3
out
arpl
pushf
jp
repz
pavgw
dec
cwtl
out
out
movsl
out
pop
ret
bswap
jnp
leave
addr16
insb
lret
call
repz
lds
jle
mov
hlt
stos
sub
cs
int3
in
ljmp
cmp
sbbl
inc
lods
rcrl
jbe
and
adc
cmpsb
rclb
repnz
dec
imul
fstpt
mov
add
mov
push
insb
test
pop
push
fstl
sub
xchg
jmp
mov
and
push
pusha
jno
fdivrs
mov
mov
mov
in
stos
mov
fbstp
mov
out
cwtd
fs
sbb
or
mov
mov
scas
push
pop
dec
shlb
ljmp
imul
notl
fbstp
ljmp
xchg
imul
fsubs
les
mov
leave
repz
fstpl
xchg
push
scas
jmp
push
call
xchg
test
mov
cmpl
ljmp
push
gs
push
ja
pop
rorb
dec
sahf
lcall
push
mov
cld
fwait
sub
mov
jae
outsl
in
cld
mov
sub
mov
cmpsb
add
jb
xchg
lret
orl
fisttpl
mov
add
lcall
sub
aas
jns
jg
or
mov
das
das
or
push
or
mov
jb
out
mov
test
outsl
mov
push
add
movsl
add
fsts
mov
xchg
push
shlb
dec
test
je
cld
in
pop
cmpsl
or
mov
mov
pop
mov
cmp
mov
nop
outsb
mov
adc
xchg
inc
xchg
aaa
inc
cld
cmp
push
lret
mov
aaa
adc
push
lock
and
push
inc
ss
push
push
sarb
ss
lods
sub
jnp
fsubl
sbb
cmpl
dec
dec
ja
daa
cmp
lods
cmp
nop
inc
mov
loop
lods
sub
mov
jl
push
sbb
aaa
shrl
or
push
insb
add
or
mov
pop
mov
inc
or
les
pop
movsl
dec
xor
insl
lea
into
cli
inc
mov
xor
fcoml
push
gs
sbbb
cmc
rcrb
popf
iret
mov
pusha
sti
aaa
dec
xchg
mov
addr16
inc
enter
adc
imul
loope
repz
mov
or
xor
mov
and
add
or
es
xchg
pushf
adc
jg
mov
mov
jb
aad
fbstp
dec
out
lret
inc
sub
mov
ljmp
sbb
add
ss
loop
fs
or
cmp
fcmovbe
aam
mov
xlat
jl
ljmp
data16
movb
mov
in
inc
lds
movsb
pop
negl
adc
ret
rolb
adc
cmp
xchg
inc
aaa
roll
push
frstor
imulb
xchg
popa
push
inc
out
xor
rcrl
or
cmp
sub
pop
cld
pop
dec
adc
fwait
ret
dec
fnsave
xchg
iret
and
repz
pop
movsb
jbe
out
adc
popa
cmpsb
mov
fs
mov
mov
adc
xchg
sbb
xorb
add
pop
xchg
push
adc
std
push
and
aam
test
dec
or
movq
mov
push
adc
ljmp
xor
mov
imul
fwait
xor
mov
mov
jg
lds
jg
and
lahf
cmp
enter
mov
sbb
xchg
push
pop
dec
mov
fiadds
sbb
add
call
imul
mov
mov
adc
out
test
rcl
test
testl
mov
inc
inc
mov
push
repz
negb
mov
sub
in
mov
mov
dec
mov
mov
lea
test
pushf
stos
nop
ret
in
or
movsl
lret
dec
xorl
lret
sbb
icebp
cli
sti
mov
xchg
mov
dec
hlt
mov
push
test
dec
into
out
sub
dec
pop
popa
sub
iret
leave
int3
scas
loop
inc
push
je
sbb
adc
shr
push
mov
add
pop
repz
adc
repz
pop
ja
lods
dec
es
mov
xor
jns,pt
mov
adc
sahf
sarl
iret
int
cmp
xor
adc
insl
loop
imul
mov
mov
cltd
jp
movsl
cli
sub
in
mov
push
cmc
scas
jae
sbb
sbb
jecxz
sub
sbb
dec
outsl
dec
or
cwtl
adc
mov
fsubrl
jbe
push
cmp
bound
lahf
rclb
mov
or
sub
idivl
sub
ljmp
push
int3
and
push
cld
mov
mov
mov
dec
cmp
jnp
out
imul
in
mov
jmp
add
dec
incb
mov
sub
dec
inc
pusha
xchg
add
sub
ja
cmp
cmp
mov
test
mov
or
pop
pop
and
ss
mov
stos
orl
ja
mov
imul
mov
jae
cmpsb
nop
mov
int
xor
dec
mov
jg
outsb
dec
jmp
sub
push
jb
mov
and
xor
jmp
cmp
icebp
mov
aaa
mov
mov
out
sbb
rorl
mov
inc
or
push
cltd
int3
adcb
mov
insl
ja
fs
adcl
jnp
out
mov
or
adc
mov
and
punpcklbw
pop
or
mov
xlat
leave
mov
dec
lods
push
xor
push
pusha
jecxz
aaa
lahf
out
fnsave
jmp
or
xchg
sahf
out
push
xchg
dec
out
test
icebp
push
xlat
dec
dec
pusha
mov
popf
and
out
add
add
or
and
push
pop
outsb
aaa
jae
aaa
dec
push
fmulp
fwait
pusha
cmp
inc
jle
mov
mov
cld
adc
push
jno
leave
ret
xchg
popf
jl
std
fwait
sar
mov
in
sbb
fsts
lret
shlb
mov
mov
mulb
into
mov
sub
es
push
fs
fcmovbe
jnp
cmp
mov
sar
xchg
xchg
push
jbe
ss
dec
jno
add
in
dec
cmc
jns
mov
jg
jmp
test
stos
aaa
mov
fists
sub
xchg
insb
sub
sbb
std
bnd
ja
and
sbb
mov
sbb
test
push
lds
mov
sarl
sbb
mov
mov
daa
xchg
stos
cld
add
mov
cmp
shrl
les
loop
lcall
push
mov
sahf
mov
dec
and
repz
sub
xor
cmp
mov
daa
dec
insb
cmp
std
jmp
shlb
sub
clc
lea
lods
or
ret
stos
xchg
xchg
jae
pusha
outsb
pop
dec
inc
sahf
and
or
test
test
cmp
or
add
fstpt
jecxz
leave
aas
mov
sbb
ljmp
pushf
neg
imul
das
pop
test
iret
popa
add
sbb
and
into
cwtl
enter
imul
pop
pop
push
cmpsb
mov
shrl
sti
xchg
jo
cmp
add
inc
add
sbb
movb
lds
mov
push
or
lret
sahf
mov
fcmovnbe
jo
xlat
xor
je
or
inc
xchg
addr16
pop
pop
pusha
clc
in
out
xor
xor
xor
data16
stos
in
push
adc
adcb
adc
aad
dec
addr16
inc
mov
jns
sbbb
int
xor
loopne
or
jmp
imul
or
push
dec
ret
gs
add
ljmp
arpl
das
sub
mov
push
mov
fadd
ret
sbb
data16
fists
cmp
mov
mov
add
inc
inc
popa
mov
push
xchg
call
cli
ret
lret
sarb
sub
pop
xlat
stc
inc
pop
mov
lds
das
es
in
ret
pop
lret
es
in
mov
push
jmp
jp
fmull
sahf
shl
jle
pusha
push
dec
int3
jp
xchg
pop
dec
xor
add
rcl
cmp
pop
pop
cmovb
pusha
sub
shll
cmp
dec
dec
sub
inc
aas
imul
fildll
cmc
les
addr16
mov
insl
push
and
sub
mov
lds
scas
and
mov
and
divl
add
push
mov
mov
pusha
pop
cmp
mov
sbb
fnstcw
scas
test
xchg
sysret
mov
mov
lahf
and
xor
gs
mov
mov
lcall
dec
jne
enter
loope
popf
out
mov
shlb
mulb
cmp
push
jne
cwtl
enter
ret
lea
cmp
dec
jo
sbb
cmp
popa
or
sahf
gs
mov
loop
pop
adc
call
mov
inc
incl
or
mov
scas
mov
add
or
cwtl
inc
jp
ljmp
lea
cmp
fldt
inc
out
aad
cli
or
outsb
jne,pn
test
shr
loopne
in
lods
sbb
push
mov
test
popa
dec
mov
stc
sbb
mov
jae
add
mov
mov
arpl
mov
pop
dec
test
movsl
jne
sbb
sbb
dec
mov
gs
push
pop
add
mov
mov
adc
pop
sub
loope
in
push
mov
repnz
inc
jb
sub
inc
xchg
aad
xchg
mov
xor
sub
xchg
test
dec
pop
outsb
mov
lods
push
mov
pop
lret
add
jl
les
fcomp
pop
adc
insb
sub
jmp
dec
mov
jl
outsl
push
mov
sbb
data16
push
ja
xchg
aam
adc
inc
cmp
or
adc
jb
and
movsl
and
pop
daa
addr16
inc
scas
and
jp
adc
mov
sub
nop
lahf
data16
fwait
stc
mov
sarl
jmp
jb
inc
pop
pop
pop
push
xchg
fwait
adc
out
fucomip
fidivl
das
loopne
cmp
mulb
push
dec
cmp
cmp
scas
cld
fidivrs
in
test
sbb
xchg
mov
mov
jp
loope
jo
cmpsl
in
mov
in
data16
movsl
outsb
ja
lods
push
enter
jmp
dec
cmp
fsubs
pop
es
arpl
out
call
pop
cmpsl
dec
and
lds
stos
mov
rolb
das
push
push
aam
std
push
jns
push
fimull
in
adc
dec
cmc
outsb
insl
daa
std
inc
jns
mov
ret
jns
jle
xor
push
adc
sub
or
in
xchg
adc
test
lret
xor
scas
cmp
imulb
jae
mov
xor
dec
sbb
cmp
leave
add
dec
leave
mov
and
mov
out
clc
jl
sub
xchg
leave
adc
mov
pop
fldcw
bound
popf
or
data16
push
add
insl
mov
les
jge
fdivs
xor
aas
and
adc
cld
mov
adc
xchg
rorl
jno
lods
scas
sbb
shlb
or
sbb
jge
test
mov
and
out
cmp
cmp
fstl
sarl
sub
test
mov
pop
dec
xchg
je
xor
jo
sbb
mov
rcll
sbb
xor
and
iret
add
sbb
enter
mov
cmp
sbb
bound
jno
mov
xchg
jp
sahf
mov
dec
insl
mov
imul
jecxz
lcall
push
arpl
push
aam
xchg
mov
loope
fists
iret
jp
call
mov
shlb
sarl
inc
scas
pop
push
mov
data16
push
cltd
mov
push
xchg
inc
add
push
hlt
push
inc
in
xor
jmp
jp
fadds
adc
cmpsb
cmp
xor
mov
call
lds
jb
out
xor
and
out
xor
lahf
std
gs
mov
inc
xchg
and
flds
sahf
or
gs
fwait
adc
mov
es
sub
pop
daa
std
clc
enter
inc
cmp
jae
iret
and
pop
andb
data16
aas
dec
rorb
mov
inc
fwait
xchg
arpl
xor
dec
xor
sub
sbb
imul
pop
frstor
or
mov
andb
stos
xchg
add
dec
mov
sar
adc
adc
adcb
les
movsl
cwtl
or
loopne
lcall
mov
mov
fcomps
cmc
cmp
outsl
push
stos
and
popa
xchg
mov
les
jo
jne
pop
mov
fcom
cmp
insl
xchg
inc
sub
fs
mov
popa
les
mov
push
push
jmp
into
xchg
adc
cmpsl
lods
xchg
icebp
xor
or
out
enter
mov
mov
arpl
or
mov
loopne
orl
xchg
jne
mov
cmpsl
sbb
xchg
rorl
bound
das
or
jbe
inc
pop
xchg
pop
sbb
inc
pop
push
push
jmp
cmp
pop
push
or
pop
inc
pop
push
rcr
and
dec
pop
imul
xlat
lret
sete
enter
popa
pusha
pop
push
add
subl
imul
jb
fisttpl
adc
enter
ror
mov
xor
mov
add
js
sub
push
decl
or
mov
repz
xchg
mov
xchg
popf
rorb
push
jae
mov
push
pop
iret
xchg
pop
cmc
mov
stos
imul
pusha
mov
imull
lcall
repnz
das
std
ss
xor
sub
cld
cwtl
dec
sbb
sub
addr16
xchg
out
lds
pop
movsb
imul
adc
adc
pminsw
repnz
dec
xlat
xchg
aam
popf
outsb
divl
dec
mov
ja
cmp
in
and
popa
cmpsl
mov
mov
sub
push
lcall
fistpll
mov
xchg
orb
in
rol
pop
movsl
rorl
and
inc
xchg
adc
xchg
scas
call
and
jae
scas
testl
ljmp
neg
dec
gs
out
outsb
faddp
int
inc
std
add
pop
inc
ret
repnz
push
js
push
pusha
inc
aad
andb
lock
xor
sub
mov
fadds
aam
push
push
jbe
pop
and
sub
std
mov
cmp
insb
out
mov
outsb
jno
in
gs
add
movsl
loop
bound
sub
shlb
mov
insl
loopne
push
inc
cwtl
xor
pusha
das
pop
and
pusha
mov
cli
fidivs
mov
or
repz
sarl
push
std
cwtl
dec
add
mov
sbb
add
xchg
scas
insl
mov
cli
inc
xchg
stc
and
shlb
int
pop
xchg
ret
pop
pop
sti
xchg
sub
inc
sub
ucomiss
movsl
test
or
rolb
andb
jecxz
push
pusha
pusha
xchg
loope
sub
and
in
mov
scas
xchg
ror
cmp
dec
or
je
and
cmp
insl
xor
push
mov
test
loope
sbb
lret
mov
aam
dec
push
xchg
add
cmp
ja
mov
sub
xchg
xchg
jne
aaa
neg
inc
shl
or
dec
in
push
test
sub
mov
xchg
mov
and
push
fistps
icebp
adc
cmp
mov
xlat
mov
pop
cmp
push
pop
ret
ror
loop
shl
jne
sti
mov
and
adc
jbe
aam
cmp
ss
and
mul
lds
xor
sti
ss
shlb
sub
or
inc
adc
lret
mov
in
cmp
ffree
mov
cwtl
jbe
push
mov
pop
sbb
icebp
seta
sbb
or
add
adc
pusha
repz
jo
pop
imul
cmpsl
clc
addr16
xor
cmp
cwtl
and
xchg
push
pop
cmc
test
mov
push
mov
xor
jecxz
push
pusha
sbb
inc
sub
dec
mov
gs
xor
fcmovnu
shl
les
clc
mov
stos
ljmp
cltd
out
rolb
adcb
mov
sahf
pop
test
and
in
xchg
iret
lock
sub
out
pop
mov
pushf
push
dec
int3
sub
jge
pop
mov
inc
jno
sub
sub
and
lock
mov
sbb
cmp
pop
clc
xchg
adc
fwait
ljmp
lret
into
cs
negb
test
fcomps
jb
fcomp
les
dec
rorl
sbb
mov
stos
arpl
mov
push
lahf
cltd
hlt
stos
insb
push
rcr
or
adc
xlat
out
leave
daa
fsubrp
dec
dec
fadds
add
aam
or
lret
pop
loop
dec
lcall
incl
mov
les
fs
cmp
xchg
xchg
inc
loope
inc
in
jo
repnz
and
imul
cmp
pusha
scas
lahf
out
and
lret
dec
and
add
cmp
ret
xor
lcall
imul
or
cmp
xchg
mov
popa
cmp
dec
jge
loop
xor
and
lock
lahf
xchg
sbb
mov
mov
rcrb
mov
xchg
lret
out
leave
dec
cmp
dec
gs
xchg
jns
sub
cmp
dec
jb
ja
nop
pop
cli
push
sbb
push
lcall
inc
pop
cmp
or
push
adc
lea
lods
int3
mov
fwait
shlb
mov
test
iret
aam
pop
jp
sub
aaa
mov
into
shlb
addr16
pop
pop
nop
cld
jp
les
dec
sub
call
cmp
fwait
insb
fdivrl
imul
push
fstps
iret
loope
dec
dec
push
adc
call
subb
out
push
cmpsl
rorb
fstl
sbb
addr16
sarb
filds
stc
les
fsubp
mov
js
push
out
jae
mov
dec
mov
repz
stos
fwait
cwtl
stc
rcrb
cmpsl
fdiv
or
sbb
and
outsl
imul
jne
cmp
call
add
pushf
dec
cwtl
sub
or
bnd
pop
push
icebp
dec
mov
push
in
mov
cmp
lret
mov
inc
lock
pop
fstpl
sub
jecxz
popf
add
outsl
mov
or
xchg
daa
icebp
cmp
loopne
inc
ss
cmp
aam
pop
and
adc
and
xor
jno
sbb
or
movsl
and
mov
icebp
sub
out
sahf
push
cmp
push
arpl
jge
push
and
idivl
cs
loopne
inc
test
inc
fisubs
out
aam
lock
push
and
les
lds
pop
push
mov
scas
mov
out
mov
out
and
cmp
std
adc
add
andb
push
loopne
scas
int
pop
jno
mov
push
ss
or
scas
fldcw
pop
pop
testb
and
xor
call
or
sbb
subb
fnstcw
mov
js
xor
dec
sub
jbe
adc
fs
movsb
outsb
mov
dec
and
mov
lods
std
adc
or
lcall
mov
mov
push
sub
js
jb
bound
scas
mov
in
xchg
dec
xlat
decl
push
mov
test
gs
js
push
lods
cmpsl
xchg
lods
xor
xchg
cmpsb
and
sub
add
fimuls
or
nop
or
ljmp
and
inc
into
iret
pop
sbb
aaa
lods
jg
push
push
clc
sub
sub
adc
sub
adc
enter
fdivl
push
loope
xor
bound
mov
xchg
mov
adc
movsb
pop
mov
addr16
pop
and
lods
jb
and
aad
fnstcw
in
add
in
ret
xor
mov
inc
shl
stos
cli
imul
pop
jne
mov
push
inc
dec
push
addr16
ljmp
push
or
stos
loopne
or
lock
cmc
shl
cs
xorl
data16
sti
mulb
pop
mov
mov
jmp
inc
clc
clc
push
addr16
mov
or
and
cli
out
mov
xor
push
add
mov
ss
mov
push
out
std
jmp
xchg
les
xor
sbb
call
pop
mov
mov
and
loop
cmp
fdiv
into
dec
add
sub
inc
xor
dec
popa
outsl
jp
mov
jnp
push
pop
int
sub
pop
jmp
test
xchg
mov
pusha
jae
test
cwtl
stc
sub
pop
cmp
hlt
popf
lock
sti
in
shrl
jmp
inc
shr
repnz
push
xchg
iret
dec
xchg
xchg
lahf
loopne
arpl
xor
fwait
bound
inc
mov
aad
jb
push
and
adc
test
inc
insb
push
pop
scas
aas
mov
ret
aad
cmc
sub
mov
mulps
and
xor
sub
xor
mov
mov
or
daa
nop
stos
ss
mov
pop
mov
test
sub
sbb
aad
repnz
sbbl
xor
xor
or
outsb
or
fidivrl
lcall
and
aam
xor
mov
and
jge
mov
inc
cltd
icebp
xchg
outsb
in
daa
xchg
in
mov
aad
sbb
add
into
test
adc
push
pop
int3
mov
adc
jbe
and
add
xchg
repz
mov
inc
dec
rcll
jecxz
or
sbb
jl
hlt
dec
inc
pop
inc
dec
cmpsl
loopne
mov
cmp
out
std
pop
loopne
filds
rol
push
dec
dec
mov
and
outsl
pop
aas
or
cmp
cmc
repnz
insl
jecxz
cmp
add
and
pop
adc
hlt
push
loopne
call
mov
sbb
popa
xor
fsubrs
lock
pop
cpuid
pushf
and
or
inc
insb
out
aad
and
mov
dec
inc
inc
ret
call
outsb
mov
push
xchg
ss
sub
mov
and
ds
xchg
sbb
sbb
arpl
and
xor
mov
jne
jns
sbb
sarb
pusha
jmp
xor
mov
mov
mov
mov
call
jg
sbb
sub
mov
jl
mov
sti
movsl
loop
inc
pusha
xchg
jo
es
mov
cmp
jg
sub
out
loope
pop
enter
mov
mov
mov
xchg
jmp
mov
cltd
loopne
adcb
mov
out
scas
lods
sub
inc
pop
ljmp
gs
orl
xchg
mov
push
sbbb
aam
jg
jmp
cmp
faddp
xor
pop
fldt
and
mov
repz
or
inc
and
sbb
push
sbb
stos
jo
cltd
inc
aaa
cmc
add
into
aad
scas
adc
xor
loop
push
add
or
push
or
cmpsb
cmpsl
test
icebp
sub
fstpt
adc
xor
lds
lcall
cld
adc
lock
sbb
test
pcmpgtw
pop
add
les
sub
repz
mov
scas
xor
arpl
cmpsl
movsb
xor
daa
adc
and
cmpsb
and
les
sbb
rol
out
xchg
push
jmp
or
lcall
cmp
xor
pop
fcmovnb
outsl
mov
lods
adcb
clc
or
in
cmp
cmpb
or
cmc
xchg
ret
jge
repz
mov
adc
daa
imul
stos
xor
mov
push
scas
ja
jge
iret
adc
pop
dec
dec
and
xor
inc
sbb
inc
mov
jp
out
xchg
and
jo
ret
push
push
pop
inc
xchg
fs
iret
xchg
sub
insl
mov
lods
hlt
cmc
xchg
ljmp
inc
call
jle
negl
addr16
lea
pop
mov
cmc
imul
sarl
aam
sub
or
mov
mov
enter
mov
dec
push
mov
xor
pop
jl
addr16
xor
imul
cmp
lcall
xor
fwait
jecxz
inc
addr16
insl
adc
imul
fwait
and
in
mov
or
mov
loopne
inc
lods
sbb
dec
icebp
sub
outsl
push
mov
xchg
push
mov
inc
cli
jno
rorl
pop
and
imul
adc
dec
ja
cmp
mov
icebp
mov
cld
mov
dec
sub
push
sub
mov
mov
in
xchg
movsb
sbb
data16
fnstenv
adc
pushf
dec
pop
das
stos
andb
out
out
jb
daa
hlt
push
jne
outsl
inc
cmpsb
xor
ds
lds
ret
pop
inc
cmpb
inc
cmpsb
or
push
mov
not
pop
into
jno
inc
cmpsl
out
adc
mov
sub
xchg
stos
es
xor
dec
clc
ret
std
int
insb
jne
test
cmpsl
les
inc
push
out
jg
scas
mov
add
and
pop
lods
cmp
je
jae
mov
pop
test
jno
sub
xchg
add
or
xlat
ret
sti
sbb
sub
aas
aad
ret
scas
pop
bound
clc
sbb
mov
cmp
jge
ja
mov
pop
into
add
dec
sub
inc
lcall
push
fnsave
xchg
dec
outsb
dec
push
mov
es
adc
sti
cwtl
stc
and
lds
addb
push
movsl
and
jp
test
xor
fisubl
add
test
daa
lock
fstl
inc
jno
add
loop
daa
out
dec
enter
sub
pop
fsubs
cli
xchg
mov
push
push
ja
lods
xchg
insb
xchg
mov
inc
std
clc
push
mov
fwait
xor
enter
cwtl
imul
mov
jns
enter
mov
bound
push
dec
jo
or
mov
repz
push
dec
mov
mov
loop
test
xchg
mov
sarl
sbb
sbb
sbb
pop
repz
cs
fwait
scas
and
gs
jge
jecxz
mov
loope
cli
test
inc
arpl
jbe
aam
in
int3
jb
jle
sbb
sbb
jae
push
filds
jg
movsb
fisubs
es
cmp
sbb
or
mov
and
mov
call
jne
or
lcall
mov
dec
cmp
into
cmp
stos
push
cmpsb
fs
std
push
add
ret
sbb
je
rcll
shrb
aad
jg
andl
fcomps
and
cmp
bound
movsb
mov
lret
jb
iret
or
hlt
push
mov
pop
push
nop
adc
dec
hlt
and
push
adc
xchg
pop
fs
mov
pop
pop
dec
aad
je
enter
adc
fwait
push
ret
mov
xchg
jbe
push
adc
mov
and
push
call
imul
andb
cmp
pop
xchg
dec
movsl
outsl
test
mov
dec
mov
popf
pop
adc
iret
xor
and
addl
and
ficompl
jle
lea
mov
test
dec
pop
rorb
aas
and
loopne,pn
xor
out
lea
push
pop
ror
mov
outsb
or
sub
mov
and
adc
ret
adc
ret
adc
xor
out
test
sarb
or
mov
mov
inc
in
or
ljmp
lahf
dec
bswap
ret
rcrb
clc
std
out
jno
jg
in
dec
or
push
inc
into
add
inc
shl
jge
cmp
daa
sbb
pop
pop
mov
push
cld
push
into
aaa
mov
subl
shrb
pusha
mov
mov
clc
sub
adc
popf
and
nop
popa
mov
popf
dec
xchg
aas
inc
test
pop
mov
test
sub
push
and
jle
adc
pop
dec
push
push
sub
outsl
pusha
add
cmp
jae
js
and
stos
jge
xor
aad
jnp
out
movsl
and
les
cmp
xchg
ss
xchg
hlt
xlat
or
imul
shlb
cmp
mov
inc
or
test
mov
out
cwtl
adc
xchg
mov
adc
arpl
dec
cs
enter
je
push
stos
hlt
dec
adc
lods
sub
lods
fs
lret
mov
mov
stc
ds
outsl
ret
adc
fnstenv
or
xchg
loopne
xlat
push
mov
and
mov
xchg
or
cltd
jmp
sbb
mov
je
inc
cmpb
fs
sub
xchg
sbb
mov
and
push
shrl
ja
xchg
adc
push
aad
mov
xchg
sbb
mov
cmp
arpl
xchg
daa
xchg
in
cld
mov
mov
shrl
loop
xchg
mov
loopne
incb
ljmp
rolb
imull
daa
cmc
sub
inc
lea
divl
fxch
cmpsl
addr16
outsl
inc
push
cmp
sub
dec
add
sub
sub
lcall
insl
arpl
sbb
push
jmp
leave
jno
int
fisubs
movsb
leave
mov
mov
dec
and
out
out
scas
adc
and
push
pop
dec
popa
imull
aad
inc
cmp
jno
xor
jns
imul
repz
cmp
cmp
pop
sbb
vmovaps
jno
cltd
stc
push
inc
imulb
push
jne
push
test
xor
gs
fwait
and
in
cld
cli
push
rorb
xor
daa
and
dec
stc
sub
push
dec
or
divb
inc
std
repz
xchg
xchg
xor
mov
cmpsb
push
outsl
or
jno
cmp
xchg
ljmp
sti
aas
data16
ffreep
mov
stos
sahf
data16
push
and
hlt
fs
repnz
inc
fnstenv
andnps
mov
cmpsl
xchg
push
out
vpackuswb
test
mov
fmuls
jae
sub
andl
mov
sti
adc
pop
or
pop
fidivs
dec
or
cmp
out
out
mov
push
mov
push
cmpsl
push
outsb
dec
lods
cmpsb
and
sub
fsubs
cld
clc
aas
inc
sbb
mov
xchg
xor
jb
ja
cmp
xchg
and
pop
dec
jno
cltd
sbb
movsb
mov
xor
dec
push
xchg
test
mov
in
jae
push
xchg
adc
test
pop
mov
lahf
push
repnz
aad
in
or
clc
loope
add
test
clc
lahf
cld
testb
icebp
xchg
mov
mov
pusha
xor
aam
cmp
in
ret
jmp
imul
adc
test
nop
das
movsb
out
push
xchg
popa
sbb
adc
mov
add
mov
cmp
pop
mov
xchg
int
sub
push
dec
sub
into
push
pop
in
xor
push
rorb
pop
and
xchg
test
pop
outsl
jo
jb
sub
clc
test
cmpsb
arpl
es
rep
stc
test
adc
sahf
rolb
pop
pop
idivl
and
cs
into
mov
cmc
jo
dec
jge
cmp
sbb
add
and
push
scas
push
pop
and
inc
lds
pop
lods
push
jmp
jmp
cmp
sbbl
mov
jmp
and
inc
and
shrl
mov
imul
int3
cmpsb
movsl
into
jns
fidivrl
test
lods
sub
mov
push
subl
sbb
pop
cld
lahf
jo
popa
lcall
mov
subb
dec
fstl
inc
push
in
sti
push
jl
pop
dec
push
popf
bound
pop
mov
pusha
mov
sub
pushf
out
mov
sub
rolb
adcb
xlat
shll
mov
ret
inc
mov
sbb
loope
dec
jecxz
or
insb
test
inc
or
out
mov
fwait
xchg
jge
xchg
arpl
add
ljmp
inc
sti
add
outsb
repz
rclb
or
stos
sub
push
sub
in
dec
fldcw
cwtl
push
xchg
pop
xchg
jecxz
push
mov
mov
les
inc
aam
push
pushf
pop
jmp
call
and
xlat
jmp
add
sub
jae
hlt
jbe
add
nop
nop
pop
jmp
mov
out
test
cmp
imul
call
in
push
and
popf
mov
push
sub
adc
imul
inc
daa
push
scas
ss
cmpsb
pop
call
or
shrl
into
ss
test
out
lods
sbb
aad
loopne
in
mov
xor
sti
xchg
fwait
mov
xchg
imul
lret
xchg
xchg
rolb
adc
aad
pushf
into
lcall
mov
pop
call
mov
ljmp
and
or
stos
mov
ds
xchg
pop
xor
cmp
jg
out
sub
ss
daa
mov
stos
divb
into
std
add
loopne
push
xor
and
movb
lods
lods
mov
pop
imul
andb
int3
inc
mov
mov
mov
mov
mov
add
enter
shrl
shll
jns
dec
icebp
ret
les
xor
push
ljmp
roll
je
jo
push
sub
add
or
sbb
push
or
imul
cld
jge
xor
sbb
fistpl
fwait
jp
xchg
cmp
outsl
fsubrl
dec
add
je
cmp
lds
dec
xor
pop
inc
mov
test
lea
daa
pop
faddl
inc
pop
pusha
inc
rcrl
scas
push
sbb
lret
rol
adcl
bnd
mov
sti
imulb
mov
mov
add
lcall
int
cmpsb
add
cs
mov
and
pop
xchg
nop
cmp
div
in
dec
push
stos
add
cli
push
mov
stos
hlt
es
push
icebp
lock
sub
fidivrl
jnp
jl
call
mov
xchg
repz
shll
mov
stos
lret
fnstsw
cmpb
add
jmp
or
fistpl
push
mov
cli
cmp
dec
jb
xor
mov
mov
pmuludq
in
sahf
pop
mov
pop
sub
xor
push
nop
cltd
movsb
in
ljmp
cs
lds
mov
xchg
or
push
jecxz
push
mov
ret
imul
sub
inc
call
cli
jne
dec
movsb
fsubrl
sbb
fs
insl
and
sub
shlb
jbe
bound
jne
jp
mov
mov
leave
ljmp
xor
test
xor
sub
loope
add
and
jne
push
sub
cwtl
repnz
add
jle
sbb
jle
shll
shl
sbb
ficompl
loope
andnps
sub
aad
sbb
dec
or
loope
dec
add
xchg
gs
or
cmc
jae
jne
inc
and
pop
or
lock
in
adc
rep
data16
pop
mov
push
repnz
sbb
cmp
sbbb
xchg
push
jmp
dec
push
cmp
daa
add
sbb
xchg
mov
jecxz
or
sub
mov
aaa
adc
sub
push
jge
mov
outsl
faddp
ja
stc
inc
insl
inc
rcl
int3
cwtl
mov
jecxz
aas
push
jge
in
sarb
mov
or
fs
fnstenv
jecxz
mov
insb
xor
push
mov
mov
pop
rclb
mov
add
sub
dec
dec
adcl
jle
test
je
scas
ds
sub
pop
sbb
mov
cmpsb
jnp
pop
inc
cmp
outsl
mov
mov
jg
rorl
out
jmp
mov
adc
sbb
lea
add
mov
inc
out
xor
stos
shr
jb
mov
loop
cltd
pop
push
loopne
pushf
lea
dec
out
dec
push
mov
mov
sti
sub
cmpsl
test
adc
int3
div
adc
mov
fnstenv
xor
mov
je
adc
adc
dec
jbe
scas
fs
repnz
push
mov
lods
sub
inc
push
mov
push
clc
adc
mov
ret
dec
stos
data16
inc
or
test
cmp
aaa
cmc
dec
ja
addr16
andb
sbb
pop
aas
inc
xor
fsubr
and
cmpsl
incl
mov
and
dec
cmpsb
mov
mov
and
or
xorb
xchg
out
loopne
adc
cmpsb
pop
popf
test
lret
push
pop
lret
dec
loop
cld
dec
in
call
aad
lock
sub
push
mov
scas
jge
and
xchg
add
js
aad
shll
jb
pushf
repz
push
jg
in
push
pushf
pop
cmp
mov
mov
lods
add
and
inc
mov
gs
aaa
or
fs
lock
xor
scas
shll
push
xchg
push
cli
cmpsl
mov
dec
out
push
test
sbb
test
fcmovbe
mov
setle
aad
clc
es
and
or
imul
dec
inc
sbb
daa
push
loope
ficoms
xlat
mov
sub
xor
sbb
mov
fs
pusha
inc
orb
xchg
mov
cmp
add
stos
insb
ljmp
pop
lods
fdivs
stos
fucom
mov
lret
push
rcll
dec
das
cmc
cmpb
and
stos
mov
sub
jo
lret
or
mov
pop
fldt
and
mov
adc
ss
pop
or
mov
shll
movsb
fistl
js
jp
mov
shl
leave
jmp
sbb
out
pop
push
sub
sbbl
call
repz
mov
pushf
jbe
ss
xchg
sbb
mov
adc
add
lcall
ja
or
enter
loopne
ficoml
jp
shlb
aad
or
jnp
jmp
mov
ss
xchg
scas
add
or
pop
sbb
and
sub
iret
push
or
call
pop
cmpsb
xchg
out
mov
call
repz
test
dec
icebp
les
adc
mov
sbb
sub
or
das
sbb
out
cwtl
xchg
sbb
jb
dec
and
mov
pushfw
testb
mov
imul
test
xor
xchg
lds
ret
ss
leave
in
jns
pop
aaa
xorb
xchg
jbe
sub
sbb
stos
sbb
repnz
fistpll
call
into
jg
mov
sub
stc
sub
fsubr
cmpsb
pusha
test
dec
gs
daa
mov
shrl
adc
xor
pop
out
cli
pusha
push
loope
jp
cld
mov
xor
test
std
jno
and
ret
dec
jge
not
shl
dec
shll
push
mov
fisubrs
fcoml
mov
fidivrl
movb
rclb
mov
xchg
xor
aas
out
lahf
push
jecxz
inc
adc
popf
imul
fs
mov
lods
mov
sub
fimuls
jns
jmp
mov
dec
popf
lret
sbb
xchg
rolb
jae
mov
or
jecxz
enter
dec
pop
popf
dec
testl
pushf
dec
jge
push
mov
jge
cmpsl
cli
push
pop
and
jp
loop
mov
mov
sahf
cwtl
add
push
push
jnp
dec
push
xor
sbb
out
out
dec
mov
mov
inc
imul
lcall
mov
push
mov
shrl
dec
xor
mov
pop
lds
test
dec
xchg
and
xchg
xor
popa
test
daa
mov
or
movsl
add
lock
push
mov
mov
pop
pop
push
inc
sub
out
popf
mov
out
push
xlat
hlt
cs
or
rorl
mov
fwait
data16
adc
push
out
aam
pop
popa
outsl
sbb
jmp
inc
inc
push
int3
imul
fcompl
imul
sbb
sbb
cmp
add
mov
scas
inc
out
frndint
fisubrl
mov
je
rcrl
ljmp
out
cmc
xorb
mov
xchg
pusha
pop
lea
pop
popa
out
push
mov
sub
addb
inc
out
fmull
pushf
pop
push
sub
add
mov
lds
sbb
psrad
add
fnsave
pop
lock
gs
sbb
inc
mov
insb
adc
je
mov
outsl
inc
ja
jno
ficompl
adc
pop
cmp
gs
jo
fcomi
cmp
fcmovu
jle
add
lds
push
movsb
or
or
sahf
pop
mov
cmp
lds
xchg
cmpsl
movsb
cmc
sub
pop
pop
sarl
mov
sbb
inc
sbb
out
fs
push
add
sub
es
sub
int3
sbb
mov
cld
sbb
leave
ret
sbb
or
ss
test
push
jp
sbb
jle
pop
das
adc
das
and
mov
dec
cmp
lds
in
dec
loop
inc
sub
pop
sbb
outsl
add
movsl
and
pop
jge
clc
cmpsb
xchg
push
call
push
lea
cmpb
das
clc
xlat
dec
mov
cltd
cmpsb
adc
inc
xchg
subb
sti
sub
js
xchg
mov
mov
je
test
jae
sbb
movsl
ret
mov
sahf
clc
cmp
mov
or
mov
fs
jle
fsubrs
imul
insl
inc
and
pop
mov
adc
in
mov
lcall
nop
add
arpl
movsl
and
mov
repnz
mov
lfs
push
imul
cld
lods
out
loopne
and
shll
lret
sbb
add
and
dec
jne
xchg
es
nop
icebp
inc
insl
and
in
lea
or
mov
sub
pop
or
cmpsl
pxor
lcall
xchg
inc
jge
mov
xchg
sbb
push
scas
lahf
push
mov
into
jle
jne
xchg
mov
dec
scas
jecxz
xchg
cld
jg
cmp
pop
sbbl
pushf
mov
mov
cmp
imul
call
push
sbb
popf
lods
and
sti
in
fldcw
inc
sti
jne
nop
out
fidivrl
jmp
mulb
imul
mov
aam
cwtl
jg
inc
insb
or
int
or
push
or
movsb
in
jo
pop
mov
addl
stos
mov
out
movsl
loope
mov
mov
nop
push
jno
xchg
xchg
sub
stc
movsl
xor
mov
rcrl
and
shrb
insb
sub
jo
push
mulb
sbb
adc
pop
scas
xchg
push
mov
pop
mov
aad
mov
xor
repz
cld
jecxz
jg
jo
mov
push
test
push
mov
test
and
test
dec
adc
ret
fwait
sub
jo
imul
cmpsl
cmp
push
mov
jge
ja
ja
ret
cmp
fistl
cmp
push
cld
pop
add
shr
mov
xor
outsb
sbb
fwait
cmp
lock
jb
divl
xchg
int3
jl
add
xor
mov
out
xchg
xor
cmp
jns
in
lcall
stc
dec
or
scas
test
dec
je
push
xor
stos
xchg
push
lds
fnstenv
mov
ror
mov
push
out
xorl
out
test
sbb
decl
cmp
pop
dec
cmp
sub
mov
jb
xor
cmp
fmul
and
imul
out
add
mov
pop
xchg
int3
sub
sub
cmpsl
adc
add
mov
dec
xlat
jb
cli
pop
dec
ret
lock
jp
xchg
call
jns
into
push
mov
faddl
cmp
xor
push
cmp
sti
pushf
mov
imul
xor
push
jne
andb
pop
fcoml
ja
xlat
addl
imul
xor
xor
dec
out
ret
pop
movsb
mov
insl
stos
fisubrl
and
cmc
hlt
pop
mov
xchg
fidivs
pop
pushf
leave
add
push
jbe
dec
fs
out
mov
xor
cmp
sti
mov
arpl
and
mov
add
fiaddl
mov
outsb
pop
and
mov
repz
mov
int
repnz
js
movsb
lea
int3
call
aad
jmp
leavew
mov
add
div
test
fistpl
gs
and
and
lods
mov
cmp
dec
loope
insb
add
or
pop
cltd
adc
stos
lahf
and
aam
push
cli
test
popf
mov
or
sub
iret
aas
scas
movsl
sub
pusha
addr16
movups
xor
xchg
fbstp
cltd
mov
xchg
cld
clc
sbb
lret
xchg
jge
mov
sahf
or
sub
add
test
addb
ds
and
movsb
lock
add
popa
subb
dec
or
rclb
inc
adc
xchg
loope
cmp
iret
sub
popa
pop
dec
cmp
inc
dec
icebp
lret
jle
arpl
sub
xchg
mov
ficompl
cmp
xchg
dec
jp
push
pop
stos
xchg
push
stos
mov
sbb
pop
sti
inc
cwtl
vpsraw
pushf
sar
pop
cltd
fneni(8087
add
loope
je
fcomp
aaa
mov
les
outsl
bound
fdivrs
push
les
bound
adc
inc
insb
xor
add
xor
jnp
stos
test
in
imul
pushf
pusha
mov
lods
aam
fistl
mov
aad
addr16
leave
xor
clc
fs
iret
pop
xor
mov
add
dec
pusha
addr16
lahf
test
adcb
pop
repnz
xor
movq
jnp
bound
popa
add
jmp
and
push
js
dec
and
sahf
cmpsb
sbb
out
mov
lds
add
insb
jb
and
and
out
lock
dec
or
add
and
outsb
mov
lcall
pop
adc
lods
int
stc
mov
icebp
jg
add
lret
nop
idivb
jns
mov
das
iret
ss
sbb
jae
daa
dec
arpl
xchg
test
mov
sub
out
test
inc
orb
les
mov
mov
in
stos
xchg
sub
sbbl
adc
push
push
add
sti
inc
lods
mov
mov
jo
xor
mov
mov
pushf
pusha
popl
cmpsb
sub
popa
jb
sbb
add
xchg
int
push
shl
xchg
jl
movsb
shrl
push
adc
dec
sub
pop
fadds
jmp
inc
sbb
subb
mov
mov
or
or
mov
and
js
stos
and
shlb
ljmp
mov
fldz
fiadds
or
mov
fists
push
mov
or
add
jb
mov
dec
bound
cmpsl
mov
test
lret
mov
mov
das
mov
cmp
pusha
sub
dec
or
sub
inc
mov
dec
jle
lea
cmp
xor
pop
outsl
jno
rcll
cltd
pop
cmp
or
dec
lea
xchg
pop
mov
or
adc
ret
or
cmpb
data16
ds
jmp
loopne
ds
and
ret
in
pop
stos
ss
je
push
push
xchg
mov
dec
bound
push
ljmp
pop
pop
call
jb
jne
leave
adc
jne
loop
insl
int3
sbb
jae
pop
sub
xor
inc
adc
lahf
stc
and
inc
fsubrl
mov
or
out
mov
addb
mov
add
mov
xchg
lods
fisubrs
cmp
stos
outsb
ret
aad
pop
jne
ret
lods
mov
mov
push
jo
sarb
bound
inc
inc
sbb
ds
cld
jae
movsl
pop
roll
mov
mov
shlb
adc
imul
mov
iret
loop
movsl
icebp
lods
dec
sbbb
inc
aam
or
xor
ds
fmull
cs
sbb
jle
inc
xor
jnp
push
cmp
nop
imul
je
dec
hlt
popf
out
jbe
stos
jns
jo
loopne
into
xor
push
arpl
ss
idivb
push
jge
sbb
push
mov
mov
les
iret
enter
cmpsl
adc
xor
jbe
push
stos
movsb
pushf
mov
in
pusha
mov
roll
add
mov
arpl
stc
cltd
push
or
enter
mov
cs
jg
lock
inc
adc
repnz
push
aad
sub
fdivrl
outsl
jle
mov
xchg
inc
cmp
sbb
inc
sub
inc
mov
or
pop
cld
inc
mov
loope
cli
clc
mov
mov
test
ficoms
jae
cmp
aam
lods
lcall
mov
leave
mov
xchg
jle
inc
pushf
ja
xchg
fsubl
mov
popf
lahf
or
and
int
aad
dec
mov
mov
arpl
sub
lods
add
mov
lock
rolb
add
shl
shll
inc
jo
mov
dec
out
and
out
imul
iret
rolb
insb
aad
push
mov
in
dec
and
inc
sbb
repz
or
pop
fsubl
sarb
cmpsl
fcoms
jl
in
add
insl
dec
imul
clc
jl
or
mov
mov
xor
lods
pop
xchg
dec
out
in
xor
jg
mov
out
mov
sub
imul
and
fildl
jl
sbb
jne
test
shlb
xlat
das
hlt
jp
pop
push
push
cmc
in
ja
mov
dec
mov
int3
push
xchg
mov
vmread
jle
cwtl
stos
push
punpckhwd
lods
rcr
andl
jo
add
mov
push
int3
loope
dec
sub
push
ds
inc
das
fiaddl
add
jmp
lahf
loop
jl
pop
pop
pop
shll
lock
js
mov
stc
test
adc
sti
dec
or
shlb
fldenv
xchg
rolb
dec
je
push
mov
sub
ficoms
mov
xor
scas
pop
repnz
pushf
or
into
cli
sahf
jbe
ja
jmp
shll
pop
imul
cld
inc
std
mov
xor
xchg
push
out
enter
daa
cmp
call
jne
or
mov
or
dec
cmp
sbb
insb
fcmovbe
es
pop
in
gs
xor
push
xchg
xlat
xchg
cmc
cmp
mov
cmp
mov
inc
fidivl
or
loopne
push
stc
push
inc
arpl
push
outsl
adcb
mov
out
inc
inc
push
fistpl
mov
mov
in
jg
mov
sub
lret
push
mov
add
loopne
jae
pushf
fimuls
jecxz
setbe
jle
push
lods
outsb
jno
lret
loopne
pop
jle
xchg
lret
dec
push
fs
push
jle
add
pop
xor
push
mov
scas
addl
inc
push
fwait
dec
sbb
dec
cmc
fldt
bound
inc
rorl
bound
mov
les
mov
inc
imul
clc
lods
cltd
lret
dec
and
enter
pop
push
jo
sbb
xchg
mov
mov
enter
pop
inc
mov
les
aam
or
jne
gs
push
and
sarb
sub
sbb
pop
mov
xchg
xor
pop
leave
enter
cmp
jae
notl
gs
cltd
adc
inc
ljmp
ljmp
lods
push
xchg
push
rolb
lret
bound
movsb
cwtl
pop
cld
sbb
jb
sub
or
div
xchg
jg
xor
or
push
movsl
iret
ret
lods
cmp
loop
jle
stos
jb
mov
cmp
test
sub
mov
scas
xchg
mov
in
frstor
sub
add
jecxz
mov
mov
loope
repz
jmp
add
cld
insl
sbb
jo
jecxz
in
dec
lds
add
jne
mov
int
mov
rcll
mov
in
fsubrl
jae
xor
pop
adc
or
jns
xchg
mov
data16
xchg
pop
xchg
sub
push
sbbl
cli
insb
xchg
ds
adc
rcl
daa
popf
pop
mov
mov
sbb
push
push
dec
and
test
aam
add
hlt
repz
cmp
xor
inc
and
mov
fwait
inc
mov
mov
push
mov
add
mov
dec
out
shrl
push
out
mov
in
xor
mov
sbb
aad
jns
andl
lret
fnstsw
rorl
and
dec
fadds
aas
and
fisubrl
adc
std
jo
sub
pop
enter
stc
hlt
adc
lods
daa
repnz
jns
push
test
pop
cmc
mov
in
enter
inc
pop
hlt
insb
pop
push
movsb
fldl
rcl
jno
pop
xchg
xchg
and
cs
into
imul
pop
ss
jl
cmpl
and
adc
and
dec
mov
cmpsl
jae
adc
fildll
sahf
add
ret
cld
jecxz
fabs
int
cwtl
lds
gs
test
leave
push
xor
adc
jp
sbb
fsubrl
adc
leave
dec
mov
sub
imul
notb
lods
hlt
mov
sahf
push
sub
lret
lods
push
outsb
pop
push
and
mov
push
jle
rcll
js
pop
push
test
mov
push
push
sbb
popf
stos
and
jbe
jae
xrelease
orb
push
das
test
lcall
and
movsl
mov
imul
push
cmp
popf
fwait
cmp
leave
jle
mov
ss
add
inc
adc
in
outsl
ficomps
jb
ljmp
cmpsb
fistl
lods
add
sub
push
std
mov
push
or
jno
ret
test
js
jnp
sbb
cmp
out
xchg
dec
insl
cmc
imull
fnstsw
xchg
jg
addr16
pop
jno
je
aaa
xchg
loop
test
push
pop
lret
call
bound
cmp
fnsave
out
push
pop
pop
jl
mov
cmp
push
pop
in
pop
movsl
ret
aam
gs
push
jb
and
jge
cmp
out
sarl
subb
mov
fildl
loopne
xchg
xchg
mov
dec
popf
mov
jge
imul
dec
ja
and
out
mov
fucomp
sbb
insl
cmpsb
data16
mov
cli
or
gs
loop
add
and
and
dec
adc
mov
sbb
sub
cmp
xchg
and
mov
lods
clc
stos
mov
sarb
pusha
add
fnstcw
sub
sbb
xorb
and
fistpl
ficompl
jmp
push
jno
scas
insb
cmp
jb
rol
es
aad
fldt
xor
clc
and
sbb
xor
lea
adc
xchg
movsb
push
mov
je
daa
jmp
add
sbb
xchg
jns
push
xor
imul
dec
movsb
subb
stos
xor
leave
and
mov
mov
sub
fnstcw
popf
lcall
mov
and
adc
and
sbb
or
jae
sub
sub
or
or
mov
sub
fisttpl
fld
mov
int3
or
inc
mov
or
mov
mov
add
aam
lret
xchg
jo
xchg
cmp
mov
test
call
lret
or
jmp
lret
push
dec
and
sti
pusha
push
cmp
jns
fdivl
push
shll
lahf
add
or
cltd
sahf
mov
stos
sbb
enter
push
scas
outsb
jnp
xor
pop
mov
outsl
push
orb
ss
lds
jns
inc
cmp
out
mov
pusha
aas
add
arpl
dec
scas
inc
dec
sub
jmp
leave
movsl
cmp
push
jo
ljmp
popf
jp
nop
movsl
std
iret
mov
jl
xor
push
mov
push
push
or
vpmacsdql
mov
push
orl
push
lods
aam
clc
push
subb
shl
jge
outsb
js
cmp
bnd
jmp
xchg
push
push
xchg
out
out
je
or
out
inc
push
push
jmp
jnp
lea
push
nop
mov
cmp
mov
popa
push
xchg
sbbb
cwtl
nop
sbb
out
cld
jge
cmpsl
mov
in
lret
and
mov
movsl
pop
int3
sti
cltd
je
icebp
scas
and
insb
add
in
rcrb
sub
imul
into
lret
std
inc
inc
int3
jae
push
in
mov
mov
arpl
test
mov
je
or
adc
dec
or
dec
ljmp
out
mov
sbb
fwait
push
loope
rcl
jmp
and
add
push
jnp
and
lcall
adc
sbb
jnp
dec
mov
cmp
dec
push
fisttpl
pusha
ret
sbb
xor
xchg
xchg
repz
sarl
adc
lahf
ret
push
jecxz
cmp
jno
mov
mov
call
or
and
js
inc
xchg
sbb
test
filds
push
inc
insb
jae
sub
inc
sbb
icebp
lock
add
incl
movsl
out
out
inc
xor
mov
jp
out
jp
pusha
orl
dec
cmpsl
and
fstpl
aas
or
testb
cwtl
jae
nop
mov
sbb
jp
ret
cmp
dec
push
imul
enter
lods
lods
lock
xchg
inc
repnz
mov
mov
cmp
andl
fisttpl
cmpsl
xlat
or
ja
aam
pop
mov
cmp
xor
scas
mov
je
push
push
leave
mov
adc
and
loopne
jb,pn
dec
lret
rorl
es
insl
nop
sar
inc
out
not
jbe
aaa
xor
jnp
dec
mov
aam
je
punpckhdq
pop
movsb
mov
adc
dec
pusha
and
popf
dec
fmuls
insl
mov
mov
popa
sub
adc
pop
adc
jo
jmp
int3
pop
data16
mov
rcll
jbe
les
ror
cld
inc
pop
je
jle
das
mov
xchg
in
lock
inc
and
mov
std
adc
push
add
sahf
lods
rsqrtps
cmp
jl
nop
or
test
and
inc
cmpb
ds
cmp
jle
xor
jnp
xlat
inc
mov
stos
nop
pop
lock
and
jg
xor
inc
and
mov
jl
hlt
icebp
ss
shll
mov
mov
loop
addl
out
adc
mov
sti
and
pop
or
mov
or
aas
std
repz
out
pop
aas
pop
imul
push
adc
mov
scas
stos
in
in
stos
fdivs
sub
dec
dec
loopne
imulb
negl
aam
cmovs
mov
dec
jbe
dec
or
jbe
test
arpl
test
mulb
fucomip
icebp
or
pop
jle
mov
inc
ja
movsl
add
adc
test
and
adc
lret
out
sti
hlt
std
jb
scas
or
inc
mov
cmp
inc
lods
cli
pop
sti
pop
stos
ret
push
pusha
sbb
dec
mov
push
sub
clc
push
jecxz
xor
cmp
popa
aaa
sbb
sub
cs
inc
mov
imul
aam
pop
jl
das
icebp
or
jbe
add
pop
cmp
mov
ret
std
ret
mov
xor
inc
faddl
sbb
mov
pop
lret
add
call
arpl
punpckhdq
sti
imull
addr16
shl
jl
sbbb
add
sbb
iret
mov
push
lock
cltd
cmpsl
les
out
fldenv
mov
and
test
dec
or
into
into
add
add
sahf
push
pop
cltd
xor
mov
or
ret
cmpsl
jge
sbb
inc
or
push
lds
bound
ret
mov
icebp
daa
mov
dec
loopne
lahf
xchg
fdiv
push
push
mov
inc
lods
sti
addl
push
rcl
and
stc
jae
jmp
mov
xlat
cmp
pop
leave
ss
insb
repnz
sbb
jmp
xchg
jno
iret
dec
scas
mov
cwtl
sbb
out
fistps
fistl
addr16
aad
call
pop
push
or
pop
inc
rcrb
sub
xchg
adc
or
mov
fwait
mov
mov
sub
xor
adc
sub
dec
xchg
adc
rorb
jg
or
mov
lods
cmp
je
adc
mov
int3
jp
dec
jg
cli
ds
iret
leave
sub
push
xchg
cmp
pop
lea
insl
mov
mov
data16
add
test
sub
pop
andl
ret
stc
xchg
cltd
popf
and
shll
ret
dec
adc
clc
push
arpl
xchg
pop
incb
jmp
jl
lea
add
jae
lahf
fildll
xchg
push
rclb
dec
imul
gs
std
jo
pop
push
xchg
insb
sub
out
or
and
scas
testb
pop
ret
sub
mov
lea
rorb
pop
adc
jno
das
mov
push
push
adc
jmp
xchg
cli
stos
or
cmc
jg
lcall
into
addb
jge
mov
fcompl
hlt
push
ret
push
jg
inc
pop
icebp
fiadds
mov
push
les
mov
pop
or
cs
cmc
std
sbb
dec
mov
int
push
aaa
mov
mov
fcmovb
aad
ret
mov
sbb
pop
push
add
fstpl
cmp
push
and
jae,pt
push
gs
ret
and
int3
pusha
xor
mov
sub
gs
pushf
jbe
lcall
sbb
pop
aaa
in
jle
xor
outsb
jp
cld
int3
push
xchg
clc
shlb
inc
stos
nop
xchg
xor
push
add
adc
in
pushf
out
add
mov
pop
add
push
imul
pop
mov
ja
iret
push
sbb
scas
int3
mov
and
cmp
out
jo
dec
inc
push
add
push
decb
jnp
mov
ss
or
daa
mov
ja
in
sbb
cli
cmp
cmpsb
mov
cwtl
stc
sbb
jg
and
push
dec
push
mov
jbe
and
cmp
mov
ljmp
ret
xor
mov
pop
fnsave
xchg
jnp
rorb
rep
pop
cmp
cmc
and
add
cs
test
xchg
dec
mov
aam
xor
mov
xchg
dec
xchg
fdivl
push
sbb
rcrb
out
jbe
mov
pop
in
ds
into
mov
xchg
jae
fwait
push
jns
adc
hlt
sbb
ljmp
push
les
mov
iret
adc
xchg
mulb
fcoms
inc
sub
add
pop
jbe
fcomps
sub
or
push
push
mov
jmp
and
nop
and
out
add
adc
jp
stos
es
sbb
adc
jae
ss
push
inc
adc
push
in
sbb
repz
imul
jg
mov
sarb
rorb
movsb
sarl
loope
ss
adc
insl
int3
mov
sbb
mov
mov
popa
mov
mov
jl
push
inc
clc
sti
in
or
cmp
popf
jno
mov
and
jecxz
jno,pn
cmp
push
push
imul
sub
sbb
mov
inc
dec
in
call
es
adc
cmpsb
push
outsb
orb
scas
inc
xor
and
dec
lods
xlat
daa
or
imul
repz
repz
or
dec
ljmp
dec
add
testl
psubb
mov
xor
mov
cmp
jne
sti
and
mov
mov
dec
das
mov
mov
lock
sub
outsl
inc
mov
pop
add
dec
or
loopne
insb
push
pop
or
mov
inc
xor
jg
mov
add
push
mov
imul
popf
decl
stos
aaa
mov
lret
push
loopne
xor
nop
insl
jmp
pusha
test
subl
aas
and
ljmp
imull
nop
popa
xchg
add
into
aam
push
bound
cmc
cwtl
out
push
lret
lret
bound
pop
test
test
aad
decl
xorb
adc
cld
sahf
sub
xchg
add
xor
jns
pop
stos
adc
pop
sbb
ja
pop
aad
mov
movsb
sub
mov
mov
sub
sti
push
and
jmp
xor
call
lods
and
shlb
fs
subb
notb
jnp
cmp
orl
sub
or
rcrl
fwait
dec
outsl
or
mov
leave
adc
or
andb
ss
push
add
cld
addr16
rorl
push
xchg
jecxz
bound
mov
outsl
mov
stos
arpl
pushl
add
add
sbb
subb
ds
sub
dec
rdpmc
mov
test
adc
xor
sti
xlat
mov
xor
cmp
outsb
loope
pop
dec
fs
push
mov
mov
call
shr
pop
add
sbb
lret
push
and
xor
push
lods
ljmp
addr16
push
push
lods
je
addr16
js
mov
inc
movsl
icebp
xor
es
jg
ja
add
xor
cwtl
clc
mov
repnz
bound
xchg
dec
jmp
daa
std
pop
xchg
scas
popa
daa
inc
xor
fisttpll
movsb
mov
mulb
mov
mov
imul
in
xchg
push
sbb
or
dec
call
es
shll
leave
loope
mov
sub
xor
aad
divl
sbb
int
mov
iret
jbe
or
sub
addl
cmp
sbbl
push
or
mov
rcrl
xor
fldenv
loop
xchg
and
mov
out
negl
int3
iret
sbb
cmp
cmp
js
cmp
out
dec
mov
dec
push
lcall
mov
jl
push
outsb
jmp
mov
adc
je
mov
int3
sub
jecxz
pusha
dec
nop
js
adc
mov
lret
rcrb
leave
jmp
iret
popa
sub
testb
mov
or
jno
push
shll
inc
sbb
jecxz
fadds
mov
inc
and
sub
mov
in
cmp
hlt
sti
lods
in
sub
pop
bound
int3
or
iret
jg
lcall
and
lock
pop
ret
pop
xchg
mov
dec
jmp
call
out
adc
mov
mov
cmp
shll
es
push
test
pop
aam
dec
ljmp
scas
push
adc
fisttpll
push
test
inc
pop
sub
loopne
mov
push
sbb
outsb
jle
repz
inc
cmp
lds
jmp
cltd
xchg
mov
out
rclb
repnz
inc
push
xor
imul
adc
nop
bnd
push
mov
jmp
jp
dec
jbe
cmp
xchg
aas
sub
add
in
mov
out
sahf
dec
mov
outsb
or
pop
fcoms
rcll
jnp
push
jae
xorl
and
push
nop
mov
out
insl
push
sub
test
sbb
and
sub
aam
xor
loop
xor
cmp
test
push
ja
cmc
lds
es
push
or
pusha
push
mov
bound
cmp
pop
sub
fisttps
xlat
push
in
aaa
outsl
shrd
cmp
insb
test
hlt
das
scas
mov
test
pusha
hlt
xchg
mov
jns
mov
loope
sub
xchg
xchg
adc
lods
out
into
jbe
mov
mov
das
jne
push
push
mov
xchg
inc
jnp
inc
dec
mov
or
mov
test
fiadds
cli
adc
cmp
fwait
andl
sarb
pop
daa
jle
xor
pop
daa
call
aaa
mov
mov
add
das
xor
sub
aad
add
popf
pop
jae
xchg
jge
xlat
add
and
add
mov
call
xchg
adc
in
inc
cmp
clc
out
sub
arpl
sub
aas
lock
aas
push
ret
dec
inc
mov
cmp
mov
dec
lock
pop
fwait
adc
xchg
out
push
push
cld
lcall
fdivrp
iret
pop
inc
push
adc
cmpsl
cmpsl
jmp
aaa
and
jmp
testb
cmp
mov
mov
subb
daa
and
mov
ja
or
repnz
cltd
adc
dec
push
ret
imul
popf
mov
push
test
mov
push
jg
mov
pop
and
mov
mov
repz
rorb
aas
in
fst
jge
imul
xchg
dec
cmp
testl
jge
loop
dec
mov
or
test
pop
in
call
stc
sbbl
lock
xchg
pusha
pop
gs
loope
sub
adc
insl
mov
movswl
lea
lea
and
addr16
push
je
fwait
scas
push
sti
insb
loopne
xchg
sub
sbb
sub
test
arpl
or
arpl
lcall
pop
mov
pop
ljmp
insb
mov
sbb
outsl
stos
mov
outsb
xor
ret
dec
inc
mov
insb
lock
mov
or
mov
mov
stos
sbb
icebp
mov
push
cmp
adc
ds
xchg
sub
adc
gs
inc
and
pop
cli
popf
dec
dec
sub
adc
fs
xchg
lret
repz
imul
jecxz
in
mov
fwait
shrl
loope
mov
loop
mov
hlt
out
mov
scas
jnp
data16
dec
add
lods
push
adc
push
and
fcoms
out
test
rclb
les
xchg
cwtl
sbb
pop
fsincos
scas
cltd
mov
sti
gs
sub
add
jl
push
push
popa
jne
inc
pop
rolb
iret
out
stos
lret
mov
movsl
fwait
dec
mov
fistpl
or
pop
pushf
mov
pop
sub
xor
clc
xchg
fdivs
movsb
iret
pop
imul
add
add
adc
decb
scas
or
cmpsl
cmp
adc
push
sub
mov
mov
arpl
sti
xchg
adc
divb
push
dec
xchg
push
repz
xchg
dec
or
push
adc
loop
sbb
testl
sarb
out
popa
and
dec
dec
cmp
cmp
dec
or
idivb
sub
pop
out
xor
es
aaa
pop
pop
incl
push
and
adcl
push
bsf
out
je
inc
cwtl
rolb
leave
cli
jle
cwtl
add
adc
test
cmp
mov
loope
ja
dec
imull
inc
sti
add
clc
fsubs
sub
jo
sub
mov
inc
flds
aam
popa
imul
femms
add
es
and
loop
rsqrtps
lret
or
xor
mov
ret
cs
cwtl
sub
xchg
or
xlat
xor
mov
in
fs
mov
push
xor
sti
aas
addr16
lods
or
push
adc
xchg
push
xchg
shlb
push
adc
adc
inc
mov
xor
ljmp
loope
pop
xchg
int3
push
js
mov
push
inc
pop
stos
ror
test
repz
xchg
in
jge
dec
fimuls
ret
push
repz
cltd
push
fldcw
dec
mov
out
ljmp
addl
xchg
das
cmp
jns
add
jae
push
lahf
mov
outsl
out
jmp
fcomi
popf
or
testl
sub
imul
ret
mov
rcl
pop
adc
cmp
pop
aas
and
rcrb
cli
xchg
sahf
in
ds
mov
jmp
sti
xchg
stos
jns
pusha
xor
sbb
push
testl
mov
fstl
sbb
jg
insb
bound
insl
lock
cmp
fwait
jae
popf
and
xchg
xchg
jmp
arpl
test
nop
sub
ja
pop
jo
mov
xlat
inc
xchg
cld
jb
or
data16
inc
mov
push
negb
adc
jecxz
ljmp
push
ss
mov
inc
aad
inc
sahf
loope
js
lock
loope
xlat
mov
shll
lods
mov
sub
loop
mov
inc
sub
jecxz
dec
sub
in
pop
dec
mov
rcrb
xchg
jb
push
mov
xchg
mov
mov
mov
std
or
lods
pop
das
dec
pushf
xchg
mov
jg
sub
xchg
fcomi
and
mov
cmp
std
push
lds
fnstenv
dec
xchg
mov
sbb
dec
pop
pop
fdivs
outsl
xor
mov
psrld
cmp
ja
add
mov
fwait
popf
in
sub
dec
out
int3
xchg
xchg
push
mov
pop
fucomip
add
cmpsl
cmpsb
data16
push
nop
stos
repz
repnz
out
aas
and
dec
lcall
xchg
imul
or
add
jne
negb
sub
mov
int3
inc
sub
scas
arpl
pop
adc
xchg
cwtl
lods
xchg
fstpl
push
out
ds
dec
sbb
mov
sbb
and
mov
popa
push
movsb
mov
dec
push
and
xchg
and
jl
and
xor
call
xchg
and
sub
lahf
jg
fnstenv
add
jmp
dec
push
cli
mov
addr16
scas
lds
or
cmp
cwtl
hlt
jo
test
adc
mov
ret
jle
stos
fidivrs
adc
pop
fs
neg
sahf
jno
pop
add
sbb
jl
pusha
sahf
imull
xor
sahf
pop
fnstsw
repz
dec
test
sub
lret
rcll
jb
shlb
adc
or
cld
jmp
in
mov
sbbl
or
pusha
push
jecxz
or
je
and
mov
fmul
out
mov
stc
xor
pop
inc
inc
push
enter
mov
jp
add
mov
jp
inc
cmc
xor
hlt
imulb
jae,pt
jl
inc
adc
cld
sub
xsaves
xchg
lahf
dec
repnz
mov
fsubr
loopne
or
nop
push
mov
pop
mov
scas
adc
cmp
dec
ret
jae
push
sti
add
cld
pop
jle
test
pusha
test
cmp
scas
mov
add
repz
into
pop
loop
add
push
loopne
loop
xchg
or
jb
gs
push
in
or
pop
push
sbb
xchg
mov
xor
push
xchg
dec
pop
inc
mov
add
or
fs
dec
push
imul
loopne
jge
sbb
pop
fcomip
sub
outsb
xor
sbb
xchg
push
out
stos
xor
pop
rcll
mov
jp
gs
and
nop
xor
jmp
jae
mov
mov
jns
bound
cmp
adc
lret
xor
inc
and
cmpsb
adc
push
sub
pop
jecxz
jp
push
dec
and
sbb
fwait
push
add
cmp
leave
cmp
jl
xchg
ss
mov
sbb
sbb
enter
jns
gs
mov
aas
cld
adc
xor
push
add
ds
aad
pusha
movsb
sub
pop
sbb
cltd
popf
lock
imull
pop
arpl
add
out
dec
pusha
adc
adc
cs
rolb
rsqrtps
push
cmpb
dec
xor
mov
je
ja
cmpsb
daa
lods
lret
dec
fwait
cwtl
stc
mov
in
lcall
sbb
cltd
pusha
enter
sub
add
sahf
xchg
sahf
jg
or
scas
stos
adc
xchg
xlat
jge
xor
cld
in
rol
sbbl
mov
and
jb
pop
pop
and
mov
mov
push
imul
bound
jl
cltd
jbe,pn
outsb
rcll
lret
js
cmp
dec
fucom
pop
push
pop
push
aad
int3
sub
bnd
sub
in
mov
imul
pop
imul
lock
in
mov
mov
popf
shll
push
jmp
cltd
xchg
mov
negb
or
mov
fbstp
bswap
repz
sub
adcb
sbb
leave
xor
cmpsb
mov
outsb
mov
add
imull
pop
movlps
stos
cltd
add
push
fwait
movsl
jmp
mov
popf
cmp
or
xchg
or
add
mov
mov
jg
fistl
cmp
cmp
xor
push
sarl
data16
aas
add
mov
inc
sub
fbld
mov
lock
jnp
xchg
push
inc
mov
mov
syscall
sub
bound
adc
mov
mov
xchg
sbb
psubq
jecxz
out
insb
ret
ret
lods
enter
cmp
mov
lock
and
sbb
cmc
pop
sub
add
outsl
xor
sahf
sub
fcompl
shlb
iret
int3
ret
cmp
and
loope
mov
fcomi
dec
pop
leave
and
out
mov
jle
lods
data16
pop
and
das
pop
lea
inc
jbe
call
mov
int3
xor
lret
push
lock
add
sub
jo
stc
xchg
pushl
inc
inc
cmp
add
insb
jmp
cmp
insb
jecxz
loope
and
sub
lcall
mov
pop
cmp
int3
cs
aaa
cwtl
inc
arpl
xor
arpl
test
mov
cmpsl
add
repz
fisubrl
mov
xchg
andl
jmp
dec
xchg
das
fidivrs
movsl
mov
sbb
negb
adc
sti
mov
cmpsb
ret
xchg
lahf
jg
mov
push
jmp
out
mov
jle
ficomps
ret
push
fs
cmpsl
or
mov
mov
das
xchg
jg
faddl
and
popf
dec
xchg
and
imul
mov
or
jns
scas
lret
sbb
cli
mov
sarl
repnz
fnstenv
dec
mov
sub
or
mov
inc
fldcw
fistl
fs
test
adc
je
cltd
adc
sbb
mulb
daa
and
push
orb
pop
daa
cltd
shll
in
hlt
pop
mov
sbb
push
loopne
inc
add
push
shl
mov
je
sbb
xchg
push
loop
push
mov
xchg
and
mov
dec
sar
icebp
and
scas
cli
jns
jo
sahf
rcrl
mov
mov
push
xor
and
add
pushf
cmp
jo
add
insb
daa
adc
mov
ljmp
cmp
cmp
push
dec
loop
jbe
inc
pop
outsl
inc
sub
stc
jmp
std
outsl
pop
cmp
push
push
mov
in
dec
lods
outsl
arpl
jecxz
test
cld
jecxz
sahf
add
xor
scas
push
push
jg
xor
loop
or
sub
pop
or
jecxz
pop
pushf
imul
xchg
js
push
call
loopne
icebp
sbbb
or
test
sub
fwait
or
btrl
pushf
fldcw
add
pusha
into
inc
or
mov
call
mov
jge
aas
lods
mov
dec
movsb
inc
push
or
into
xchg
mov
push
aaa
dec
ret
add
aad
dec
xorl
sub
stos
movsl
add
mov
imul
cmpb
xor
inc
leave
xchg
push
sti
mov
sbb
cmp
jnp
ja
fwait
dec
in
filds
ss
mov
and
fsts
testl
arpl
jnp
or
mov
orl
arpl
xor
add
xor
xlat
scas
jle
pop
out
sub
mov
push
push
adc
xchg
xchg
xor
cwtl
mov
or
mov
movsl
and
out
in
cwtl
push
jmp
daa
gs
jo
stos
add
jo
sbb
dec
hlt
adc
aas
loop
repnz
stc
dec
cmp
sti
ret
dec
loope
sub
lods
pop
dec
dec
adc
in
pusha
jmp
div
aam
pusha
fcomps
pop
js
jle
dec
cwtl
test
cmp
arpl
test
mov
push
mov
xchg
xor
mov
sbb
in
fcmovu
inc
mov
sub
aad
test
push
cmp
xchg
xor
cli
hlt
adc
in
movsb
movsb
incl
cmp
lcall
xchg
or
mov
test
mov
out
fidivrl
jp
lea
xor
ja
das
adc
adc
hlt
divb
xchg
xchg
sti
sub
scas
xor
hlt
jle
add
and
into
inc
testl
pop
shrl
cld
push
mov
cmp
jg
fisttpl
mov
jge
and
xchg
mov
pop
movsl
enter
xchg
ja
movsl
insb
and
sbb
sub
adc
and
movsl
insl
cmp
pop
popa
mov
mov
add
add
fbld
mov
or
movl
clc
std
jl
insl
mov
fmull
std
mov
dec
xchg
mov
adc
imull
es
sbb
jle
jge
fs
mov
adc
pusha
and
mov
xlat
mov
lret
insl
push
sbbb
fldl
or
sbb
scas
repnz
mov
fisubrs
mov
aam
in
lahf
inc
add
cwtl
adcb
mov
sub
aaa
int
test
cmp
imull
mov
fldenv
ja
popf
sar
adc
rorl
xor
andb
jb
shr
clc
cmpsb
in
add
cs
lock
mov
shll
mov
stc
cmp
or
fdivrp
push
fdivs
xorb
js
add
int3
xor
dec
lcall
sbb
loopne
xor
adc
xlat
in
sbb
add
lds
xchg
push
push
imul
outsb
mov
fdivrs
lods
xchg
faddl
cmp
inc
bnd
mov
jae
lock
mov
fs
jmp
pop
hlt
mov
lcall
fsts
ret
mov
repz
push
mov
xor
inc
fldl
lds
pop
imul
shrl
add
sub
mov
mov
dec
push
jbe
mov
nop
scas
and
sbb
lahf
xor
clc
pop
arpl
cmp
xchg
fstp
and
in
dec
int3
jg
inc
cmpsb
inc
add
mov
push
pop
push
movsb
pop
xchg
lds
xchg
cld
fists
lcall
sbb
addr16
insl
mov
fbstp
pushf
dec
fdivs
roll
movsl
loop
mov
or
jb
cmp
popa
testb
push
mov
fistps
test
clc
aaa
fxch
mov
xchg
hlt
scas
icebp
aad
push
inc
or
mov
aad
sahf
leave
add
leave
mov
loopne
enter
mov
ret
cmpb
test
mov
jge
pop
sti
sub
aad
xor
inc
and
fadds
out
hlt
ds
inc
mov
popf
js
ss
outsl
jl
push
shll
jecxz
dec
mov
cmp
fs
into
dec
pop
inc
push
ds
cmp
jnp
mov
sbb
imul
xchg
test
xchg
in
and
mov
mov
fwait
js
push
or
cmp
nop
adc
and
push
jns
in
cmp
mov
jp
lahf
ss
xor
lock
and
cmpsb
sub
scas
xchg
fisubl
add
into
xchg
enter
movsl
cmpsl
fdivrs
mov
inc
sub
mov
adc
pop
outsb
lods
cmc
cli
jne
cmc
fisubrs
scas
and
xorl
pusha
or
sbb
inc
adc
cmp
js
callw
dec
xor
leave
or
pop
lcall
clc
int
in
sub
int3
stos
jae
push
call
xor
loop
std
adc
jle
cmpsl
movsl
mov
or
and
mov
inc
mov
or
and
test
sti
and
inc
lock
mov
and
add
push
divl
push
mov
movb
inc
adc
adc
jns
test
push
dec
int3
divl
pop
stos
jne
mov
inc
sub
stos
sub
add
sub
push
inc
sub
sub
xorl
retw
push
stos
dec
arpl
sbb
add
ret
add
mov
repnz
cmc
js
test
or
mov
xor
jae
pusha
or
or
dec
dec
stos
les
stc
or
pusha
add
adcb
mov
mov
jmp
fnsave
std
out
sub
jle
imul
aam
push
decl
mov
js
stos
fcmovnbe
test
cli
imul
mov
push
ljmp
shrb
scas
adc
cmp
push
jb
pop
iret
dec
push
imul
mov
mov
xor
xlat
nop
jecxz
insl
mov
mov
insb
paddb
and
cmp
dec
sbb
inc
xorb
xor
pop
add
test
xor
in
leave
mov
cmpsl
sbb
sub
mov
pop
outsl
lahf
push
cld
leave
aaa
and
rcrl
scas
xchg
arpl
sbb
int
xchg
scas
out
jg
adc
imul
mov
in
loopne
rolb
mov
dec
andb
adc
mov
test
iret
lods
leave
sbb
sqrtps
cltd
adc
lahf
mov
test
jmp
or
lret
inc
mov
icebp
sub
mov
push
sub
xor
pop
insb
pop
in
xlat
or
je
mov
or
sbb
mov
movsl
nop
jecxz
lods
aad
iret
into
stos
dec
sub
add
cli
xchg
aad
mov
mov
or
inc
fucomip
cmp
xor
mov
stc
repz
push
mov
dec
mov
push
or
mov
popf
jl
sub
xchg
subb
mov
inc
in
cltd
lods
cmp
add
fidivrl
jno
loope
add
xor
pop
mov
js
sahf
inc
jnp
pop
fsub
xchg
fistl
addr16
push
fwait
push
popa
xor
add
xchg
jmp
adc
xchg
aad
mov
xchg
in
in
test
movsl
jge
ja
sub
dec
clc
sub
and
insb
outsl
mov
out
mov
lret
enter
jne
add
push
push
add
jno
push
lahf
adc
mov
inc
fimuls
insl
push
rolb
jge
cli
xor
es
push
adc
lret
and
push
push
cmpsb
shlb
lds
mov
jle
aad
bound
push
out
push
mov
pop
cmpl
cmp
je
and
fidivl
add
dec
adc
push
adc
push
xchg
xlat
pop
jns
int
add
jmp
mov
inc
ljmp
cmp
arpl
xchg
addr16
xchg
mov
mov
sub
iret
int3
sbb
or
jmp
xor
scas
fisubrl
xchg
test
mov
mov
in
jp
jne
add
xchg
add
les
outsb
scas
call
mov
xchg
inc
scas
jmp
pop
xchg
repnz
movsb
test
pushf
push
push
subl
in
mov
mov
add
inc
add
add
xor
add
cs
fwait
mov
aad
inc
aaa
mov
cmc
mov
ret
jne
push
jae
mov
cli
jae
movsl
inc
pop
jb
fwait
sub
jnp
mov
pop
mov
xchg
ss
inc
inc
mov
and
push
add
cmovl
sbb
push
mov
jp
popf
xchg
aas
mov
lea
cmp
mov
xor
fs
xchg
inc
in
mov
movl
sbb
and
aas
insl
mov
jnp
bound
mov
push
clc
lock
xchg
aas
psrlw
jmp
repnz
and
sar
add
push
or
mov
push
pop
iret
sbb
push
pusha
inc
adc
mov
push
or
add
not
push
dec
jecxz
inc
into
xor
in
pop
sahf
pop
mov
or
mov
cli
xor
push
insb
jmp
shlb
or
pushf
mov
andl
lock
sub
dec
leave
pop
js
leave
push
rol
cmp
add
aaa
inc
xor
test
out
dec
dec
lock
cmp
jg
fnstcw
ss
add
bound
pop
int3
mov
ret
mov
repz
shll
add
idivl
fucom
push
imul
jo
mov
lret
mov
fildl
push
jnp
loope
and
cs
loopne
leave
or
add
insl
mov
sahf
dec
xchg
mov
push
dec
xchg
popa
hlt
lahf
pop
lcall
cmp
or
stc
stos
jae
loop
xchg
inc
in
adc
jmp
cmpsb
data16
adc
adc
sub
insl
fstp
add
cli
sub
es
pop
cwtl
das
scas
push
pop
faddl
or
scas
inc
inc
mov
pusha
iret
mov
and
pop
add
das
jmp
mov
sbb
lds
adc
scas
mov
xor
jo
loope
xchg
daa
dec
shlb
rcr
mov
dec
movsl
jl
gs
adc
or
ljmp
sub
cmp
xchg
xchg
hlt
mov
adc
mov
adc
filds
and
mov
rol
movsl
stos
dec
test
push
mov
add
push
lock
mov
shll
sub
jmp
daa
pop
test
in
sub
fdivrs
lods
int
scas
mov
mov
imul
mov
push
xor
lods
lahf
or
test
push
js
outsl
xchg
push
pop
add
jae
jl
out
sbb
cmp
loopne
or
jne
aas
call
in
repz
sbb
in
lods
ljmp
ljmp
mov
ds
popa
stos
lahf
mov
loopne
cmp
popf
xchg
adc
fwait
lds
jno
dec
rolb
daa
jp
lock
sub
jp
pop
mov
out
scas
cmp
imul
sbb
xor
imul
repnz
out
lret
or
jl
data16
xchg
lahf
mov
or
sbb
in
mov
mov
cltd
rolb
add
insl
rcr
xchg
add
out
sbb
je
icebp
cmpsb
cmp
test
mov
dec
or
rcrb
and
push
popf
or
jmp
jl
fstpl
cmp
or
cmp
rorl
pushf
cmp
jmp
into
and
sbb
mov
add
popa
int
inc
rorb
or
dec
sbb
enter
pop
sub
pop
xor
mov
mov
pop
cmp
lahf
jmp
insl
mov
ret
loop
mov
dec
jle
push
jne
repz
mov
std
lock
loope
dec
outsb
cld
neg
xchg
ss
imul
adc
dec
loopne
cmp
cwtl
sbb
and
xor
sbb
xor
adcb
mov
pop
add
xchg
es
and
add
mov
iret
int
inc
fwait
ret
iret
lods
hlt
add
movsl
jno
in
aad
out
push
mov
xchg
lock
sarl
sarb
and
adc
cltd
cmp
in
sub
mov
pop
mov
push
imul
mov
ret
scas
jns
dec
xor
fsubrs
sbb
data16
sti
and
jns
pushf
cmp
and
sbb
push
dec
nop
cmp
jecxz
lea
jno
dec
and
mov
cmp
popf
jmp
push
mov
insl
cmp
sbb
test
je
inc
mov
mov
xor
sahf
xchg
and
adc
sub
inc
je
xor
pop
pop
jp
push
ds
mov
mov
subl
mov
fsub
dec
pop
cmp
push
sub
rorb
lods
mov
cmp
mov
mov
insl
add
cltd
cs
mov
sbb
std
push
ljmp
xor
push
cmp
jns
imul
adc
adc
sub
mov
push
mov
mov
xchg
into
adc
fwait
xchg
inc
push
and
sarb
xchg
dec
clc
push
dec
jb
addr16
shlb
add
popf
mov
jge
mov
int
jae
iret
mov
cmpsb
xchg
sbb
repz
xor
mov
push
imul
pop
or
xor
or
icebp
inc
inc
adc
push
fimull
sti
xor
loop
jne
xchg
mov
xchg
jcxz
adc
dec
xchg
push
iret
mov
cmpsb
mov
inc
lds
xchg
xchg
mov
leave
sbb
push
jge
cmp
test
insl
dec
negb
push
stos
clc
xorb
xor
push
mov
std
push
cli
mov
mov
add
add
mov
sub
repz
sbbb
xchg
aas
sarb
lock
outsl
loop
loopne
outsb
mov
sub
xchg
xchg
sti
cmpsb
pop
jo
xchg
loopne
in
gs
lds
pop
test
popf
sbb
es
and
lea
inc
mov
xchg
xchg
leave
sbb
add
stos
cmove
inc
xchg
aaa
repz
jae
sub
in
cwtl
nop
or
out
add
or
lock
fdivp
addr16
cli
push
jno
adc
nop
push
mov
dec
mov
insl
mov
cld
test
std
inc
lahf
gs
mov
pop
test
cltd
xorl
test
dec
adc
cmp
sti
pop
into
mov
mov
insb
loop
outsl
fstps
int3
pop
xor
outsb
add
cld
push
jbe
or
dec
mov
jecxz
roll
jmp
or
js
push
dec
out
in
mov
lret
pusha
lock
in
popf
cld
mov
or
jg
and
mov
or
cmp
andl
pop
imul
sahf
js
ret
xor
les
sub
aad
and
xlat
shl
dec
adc
jbe
pop
inc
mov
sahf
mov
mov
out
inc
loop
inc
pusha
pop
stos
ja
stos
sub
fidivl
xchg
sarl
sub
hlt
mov
pop
movsl
pusha
sbb
iret
aad
mov
pop
dec
mov
out
sub
sub
je
inc
push
mov
xchg
mov
pop
push
int3
sarb
sub
out
pop
lock
mov
inc
int
lods
xchg
push
lret
sbb
lret
sbb
rclb
xor
jbe
pop
test
pop
sub
cmp
adcb
push
xor
sbb
sub
xor
xor
adc
repnz
and
jno
stos
aaa
adc
std
sub
shl
cltd
adc
xor
jge
test
lods
loop
adc
shrl
and
shlb
or
mov
dec
mov
out
cli
cmp
push
addl
mov
sbb
ss
dec
cmp
aam
adc
pop
dec
ja
scas
stos
mov
inc
mov
repnz
mov
loop
pop
mov
aaa
cmp
jl
insb
mov
enter
out
sbb
pop
into
cmp
outsl
cld
mov
cltd
sbb
push
mov
mov
arpl
mov
out
gs
mov
jmp
das
dec
std
sbb
xchg
mov
cwtl
int3
cltd
sub
loopne
and
dec
cmp
xchg
jb
add
xchg
loop
push
mov
scas
push
fists
ljmp
lret
fildl
cld
sub
fistl
pop
outsb
or
test
xchg
sahf
sbb
inc
adc
cwtl
xor
or
nop
in
in
nop
sub
adc
pusha
and
dec
cmp
jmp
mov
ds
cmpsl
sub
pop
gs
xor
dec
movsl
push
and
iret
dec
add
mov
and
and
mov
and
adc
in
add
imul
fwait
sub
pop
gs
nop
sub
adc
sarb
ret
shlb
or
and
lods
inc
adc
cmp
repz
or
mov
sub
fimuls
pop
scas
pop
mov
inc
icebp
lret
xchg
lods
push
add
je
mov
aaa
subb
repnz
and
shl
and
nop
mov
pop
xor
inc
sahf
in
ljmp
sti
mov
adc
add
cmp
add
push
cwtl
loopne
mov
cmpsb
mov
inc
sub
fisubl
ljmp
jl
ljmp
clc
xor
clc
cmp
iret
shr
psrad
fcoms
aam
push
movsl
mov
out
xchg
add
xchg
loopne
jnp
repz
shll
jmp
xor
leave
jge
cmpsb
sbb
hlt
pusha
push
push
push
or
ficoms
jl
iret
and
mov
mov
dec
xor
cs
mov
push
daa
mov
xor
mov
cltd
xchg
xchg
mov
test
out
adc
cmp
lods
imul
pop
mov
add
fst
subl
sub
insb
sbb
lret
push
js
sbb
stc
mov
lret
pop
pop
test
bound
addr16
cmp
add
rcrl
adc
xor
sti
lods
movd
jg
xor
cmp
xchg
imul
lret
sub
mov
xor
jmp
fisubrs
or
aaa
jp
jo
jnp
inc
fisttpl
xor
gs
jbe
adc
cmp
push
hlt
mov
mov
subb
pop
mov
pop
mov
or
dec
mov
into
in
lock
xchg
jle
inc
je
ljmp
xchg
ret
and
mov
lcall
mov
xchg
pop
mov
sbbl
add
add
cmpsb
popa
add
and
sbb
fdiv
cmc
cmpsl
jbe
cmpsl
cmpl
jae
sub
add
daa
inc
xor
fwait
in
mov
out
xchg
and
mov
movsl
pop
cmp
mov
and
mov
push
fbld
pop
jle
in
xor
ja
xor
and
and
mov
hlt
cltd
sarb
insb
push
jecxz
sub
fcom
mov
jne
cmp
or
mov
dec
push
or
adc
sbb
test
xchg
insl
test
outsb
mul
stc
mov
pop
mov
pop
stc
test
mov
pop
popl
push
out
stc
adc
loope
inc
mov
push
push
pop
dec
cli
stos
cld
xor
jmp
cli
or
mov
adc
stc
xor
stc
lret
lock
movsb
xlat
stos
call
cmp
jbe
xor
jnp
jl
test
mov
test
in
mov
popa
out
add
ja
and
and
pop
into
add
cmp
xchg
subl
insl
repz
inc
lods
dec
jg
jbe
mov
movsb
aad
call
iret
xor
and
add
mov
je
add
imul
fcmovbe
in
rol
adc
jecxz
inc
mov
mov
lds
push
pop
jmp
inc
nop
sbb
jle
mov
mov
mov
fwait
stos
xchg
rolb
in
dec
movsl
shl
clc
fwait
sbb
adc
xor
pop
daa
cmpsl
int
add
jg
call
lods
idivb
cld
xchg
add
cmp
jp
or
cmp
faddl
jle
pop
push
add
movsl
lret
sub
jb
add
insl
mov
leave
jo
pushf
mov
mov
mov
sbb
test
jg
mov
dec
out
popf
in
cmc
jp
popa
scas
clc
cmc
inc
sbb
dec
shl
lods
ss
and
rorl
lahf
cmp
fidivl
sbb
into
adc
mov
xchg
fsubrp
shlb
jbe
xchg
cmpl
jp
jecxz
inc
adcl
sbb
test
push
in
int3
adc
xor
and
mov
xchg
xor
aam
or
mov
stos
xlat
mov
jns
ret
jg
mov
loope
leave
lds
cmp
std
pushl
or
les
roll
mov
fimull
push
jmp
and
scas
ds
out
jl
subps
xor
jo
call
pop
mov
xchg
faddl
lcall
out
in
int3
pop
jg
mov
js
mov
in
scas
sbb
insl
inc
lcall
xchg
pop
jle
jns
xor
ja
iret
bound
inc
icebp
loopne
insl
xor
cld
mov
mov
sub
jo
mov
push
sahf
sbb
inc
shl
mov
jno
adc
stos
lahf
imul
out
pushf
pop
add
jae
data16
add
es
out
sbb
das
push
or
sbb
lcall
mov
adc
lret
dec
and
mov
sahf
cld
push
in
pop
outsb
pop
fwait
add
insb
cmp
jne
pop
add
inc
pop
jno
jns
jmp
clc
push
in
add
jg
mov
into
js
sbb
ficoml
ret
xor
ljmp
inc
cmpb
shlb
hlt
mov
push
sbb
es
es
dec
faddl
xchg
push
push
inc
cmp
mov
xor
mov
nop
pop
notb
xor
rorl
adc
jae
push
fcomps
mov
jmp
orb
cmp
adc
pop
ds
test
sub
call
insl
jmp
and
jp
stc
xchg
push
add
rcr
jmp
xor
and
rcrl
jl
push
subl
daa
jbe
aas
cmpsb
int
or
rclb
outsb
xchg
filds
insl
sub
leave
jecxz
cli
arpl
pop
sbb
sub
inc
mov
popa
mov
pop
adc
fcoms
movsb
aas
es
mov
and
jno
repnz
inc
mov
mov
jmp
sbb
lods
jns
add
inc
xor
add
or
nop
and
sbb
es
mov
and
loop
imul
stos
mov
out
fcomi
roll
pop
outsb
dec
xor
fsubrs
jg
bound
jb
ljmp
mov
lods
in
call
mov
leave
xor
rcr
hlt
xchg
mov
push
or
test
jge
lret
cmp
xchg
and
dec
inc
shll
loope
dec
sub
mov
repz
loop
or
stos
adc
insl
jo
daa
and
aam
shrb
stc
es
xor
push
pop
cmp
pop
call
ffree
xor
jl
aaa
addr16
bound
imul
mov
aaa
xor
pushf
arpl
fisttpll
jbe
sub
fucomi
mov
mov
push
jle
repnz
mov
loope
iret
inc
add
pop
push
fisttpll
jmp
mov
sbbl
popa
stos
ljmp
int
and
insb
roll
jb
cmc
das
pop
sahf
pop
jmp
jnp,pt
ror
std
in
loope
mov
jmp
mov
adc
push
cli
repnz
rcrb
pop
inc
sti
add
into
leave
repnz
xchg
out
mov
or
sbb
mov
push
mov
inc
jp
lcall
mov
movsl
scas
mov
das
inc
dec
mov
outsb
test
jns
rep
pop
and
and
fnstenv
add
ss
aas
mov
out
jl
fcmovb
aam
dec
imul
into
lret
adc
fildll
pop
pop
in
xchg
mov
enter
sbb
xor
xor
loope
scas
mov
iret
inc
lcall
ret
and
enter
xorl
sub
stos
push
sarl
mov
mov
pop
push
push
cmp
adc
jae
jo
xor
bswap
loop
push
pslld
inc
gs
shlb
pop
inc
mov
xor
push
cs
adc
imul
stos
sarb
add
mov
sub
mov
test
dec
imul
cli
sbbl
aad
push
xchg
les
inc
add
aas
repz
inc
repz
push
adc
jle
jl
mov
jg
cmp
mov
out
dec
and
jp
dec
xor
movsb
xchg
dec
or
pop
dec
test
out
stos
dec
hlt
add
addr16
call
cmc
cs
sahf
out
aas
sub
push
jl
out
dec
jmp
cmp
jmp
mov
pushf
add
or
or
xor
lret
inc
dec
testb
push
pop
mov
jl
pop
aaa
insb
add
jmp
dec
sti
cli
mov
adc
loop
xor
push
popf
sub
les
cmp
loope
xchg
data16
jne,pn
lret
insl
rclb
bound
jmp
ja
jge
inc
loop
outsb
aad
lea
sbb
mov
ljmp
movsb
push
aam
sti
adc
daa
test
xchg
mov
aaa
fs
add
mov
dec
or
dec
adc
push
cmpsl
xchg
mov
fcoms
mov
leave
mov
nop
pop
sti
mov
pop
fmuls
int3
out
xchg
cmc
pop
pop
jne
xor
cmp
ret
ljmp
inc
mov
shll
jecxz
lock
jne
xchg
int
sub
sbb
push
jnp
sub
inc
mov
push
adc
out
arpl
je
push
adc
mov
loopne
push
xchg
xchg
sbb
leave
xor
popf
jge
std
cmp
enter
push
cmp
xchg
std
dec
pop
movsb
xchg
sub
push
mov
dec
xchg
int
sub
jp
fldl
pop
mull
lds
push
xor
icebp
inc
push
comiss
xor
xchg
aad
cmc
mov
adc
insl
jnp
popf
mov
add
mov
nop
arpl
pop
push
mov
sbb
scas
loopne
add
xchg
jbe
mov
cmp
fdivrl
mov
inc
push
cmpsl
mov
mov
mov
adc
sub
jmp
lods
or
fiaddl
xor
lahf
fbld
loop
aad
sti
jl
xchg
and
push
fldenv
xchg
xchg
or
mov
jle
in
nop
loopne
enter
pop
pop
push
mov
cmpsl
cmp
sbb
mov
mov
add
sbb
mov
pop
jae
fcmovnbe
aaa
and
push
inc
pop
sbb
jmp
sarl
das
jp
mov
xchg
popf
test
call
movsb
pushf
mov
in
add
jmp
xchg
aad
out
test
mov
dec
das
mov
cld
dec
outsl
sti
das
mov
or
std
int3
cmovnp
adc
in
pushf
cmc
movsb
int3
lea
cmp
jmp
lods
dec
jns
inc
mov
out
sub
fmulp
inc
test
or
pop
lods
mov
fmulp
xchg
mov
dec
jo
lods
pop
sarb
or
and
aam
mov
loope
adc
push
rolb
jmp
daa
cli
mov
out
sbb
addl
test
inc
or
pop
lret
pop
jns
cmp
cmpsl
xor
repnz
cmpsl
mov
cmc
xor
mov
arpl
lock
push
pop
push
pop
clc
or
adc
iret
int
bound
jl
cmpl
or
jno
inc
mov
adc
cmp
sub
mov
dec
out
pop
or
mov
andb
ja
push
aam
jg
and
pop
cli
xchg
in
sbb
arpl
push
jae
jl
xchg
aad
movsbl
cli
shr
shrb
pusha
xchg
mov
mov
into
add
xor
xchg
insl
dec
bound
ss
aam
lahf
or
dec
sbb
pop
cmp
lret
fldenv
add
scas
pop
jge
dec
xor
push
out
mov
es
xor
push
leave
sub
pminsw
mov
icebp
mov
pop
fists
nop
jl
inc
ret
aas
out
fsts
xchg
in
pop
adc
mov
add
cld
adc
mov
cmc
addl
test
pushf
xlat
lret
xor
mov
push
lock
fwait
sub
sub
int
push
and
pushw
lahf
mov
push
cmp
in
xor
aad
jecxz
data16
inc
mov
cmp
aam
xchg
cmp
call
pop
clc
fldl
mov
pop
xchg
and
mov
ret
jge
pop
adc
or
outsl
or
cmpsl
push
pushf
and
ds
lahf
jns
mov
loopne
popa
jae
xchg
insl
in
sub
dec
push
inc
push
inc
je
cmpsl
insl
adc
shrl
mov
das
cmp
sub
test
andb
jno
push
xor
imul
rclb
bsr
paddq
push
inc
xchg
mov
or
cmp
fs
adc
jo
cwtl
xor
push
xchg
and
cld
adc
sti
jge
adc
ss
mov
dec
mov
pop
cltd
movsb
sub
cwtl
add
dec
gs
cmc
lds
in
jg
mov
push
inc
xchg
sti
scas
pop
push
add
cmp
jl
mov
ljmp
scas
daa
std
add
ret
cmpsb
mov
fdivrs
sbb
dec
cmc
lea
sub
arpl
mov
inc
ds
stos
mov
pushf
mov
movb
aaa
mov
sub
gs
out
pop
outsb
les
iret
pop
imul
fistl
faddl
sub
inc
cmpsl
shr
xor
dec
push
mov
pushf
pop
cwtl
inc
xor
xor
lea
xor
cli
mov
mov
mov
ljmp
test
and
or
mov
mov
and
xchg
cmpl
mov
sahf
pushf
push
push
fmull
sbb
dec
sbb
push
ljmp
lds
js
push
mov
xchg
xor
inc
jecxz
xchg
adc
and
fisubrl
rcrl
ret
movsb
stc
sub
sarb
pop
arpl
adc
jl
rorl
xchg
scas
arpl
pop
jmp
iret
mov
sbb
mov
cmpsl
push
sarb
fisttps
fisttps
xchg
mov
arpl
jle
add
cmp
les
dec
notb
sarl
sub
dec
and
mov
pop
pushf
dec
aas
fdivl
adcb
xchg
pop
aad
cli
jae
hlt
xchg
pushf
sbb
stc
add
iret
jmp
push
inc
dec
sub
int3
dec
cmpsl
inc
or
xchg
sub
shrb
loopne
les
jmp
cmp
mov
dec
mov
cmpsl
lret
aas
test
outsl
or
sub
not
lret
add
adc
mov
sti
cmc
fstps
push
jg
js
cld
sbb
andl
fucomip
int3
cmp
sahf
jno
mov
lcall
add
adc
imul
out
and
push
in
ss
xor
mov
xchg
fistpll
and
lahf
add
cmpsl
movsb
cmp
mov
not
fildll
ret
xor
pop
cmp
dec
repnz
jns
pushf
nop
push
and
jns
popf
mov
icebp
and
add
nop
dec
cli
add
pop
add
adc
push
addb
add
push
mov
out
pop
or
addr16
lret
sub
imul
inc
aad
pop
xor
pushf
das
lds
adc
xor
sbb
mov
test
adc
xchg
xchg
lock
push
dec
sbb
shlb
or
test
adc
jp
mov
dec
sub
out
inc
jbe
imul
ret
pop
ret
and
adc
sub
cmp
cmpsb
lods
and
dec
repnz
jae
add
inc
push
add
scas
call
adc
push
test
std
pop
test
lret
push
je
sti
mov
xchg
cmp
pushf
js
mov
inc
cwtl
int3
cmp
bound
je
inc
pop
mov
push
mov
push
bound
mov
scas
outsb
pusha
adc
pushf
push
outsl
and
das
outsl
cwtl
lods
jae
loope
loope
xor
js
inc
jno
outsl
cwtl
cmp
push
int3
out
incl
in
dec
push
ljmp
push
nop
dec
xlat
ds
pop
add
aaa
in
cli
push
xchg
jge
je
sbb
out
fidivrl
inc
sbb
pop
mov
add
push
movsb
repnz
add
sub
add
push
js
mov
dec
dec
mov
fdivrl
inc
mov
cmp
mov
pop
push
cltd
xchg
mov
test
mov
movsb
or
cmp
xchg
or
mov
iret
and
jns
cmp
or
jmp
stc
cli
mov
lret
sbb
popf
idivb
enter
out
cmp
movsl
hlt
jbe
popa
dec
add
insl
insb
mov
mov
and
fs
mov
scas
leave
jle
fnstcw
cmpsb
ficompl
sub
loopne
or
fnsave
shlb
jo
les
mov
sbb
lret
mov
cmp
insb
xor
out
loop
es
and
mov
mov
ret
sarl
xchg
xor
arpl
mov
jmp
dec
addr16
jecxz
pop
imull
mov
lds
mov
subl
adc
add
jbe
mov
xchg
fs
xchg
pop
dec
shl
in
test
pop
push
mov
fst
sbb
test
fldl
push
inc
jmp
push
sub
scas
push
lahf
inc
aad
std
mov
lock
int
push
test
stos
inc
sub
sub
mov
push
cwtl
das
js
test
imul
and
dec
mov
outsb
sub
enter
loope
pushf
jmp
fs
enter
cld
lret
push
dec
xor
popa
test
push
enter
xor
xchg
sub
push
scas
mov
ljmp
adc
sub
into
popa
mov
nop
lock
or
adc
cmp
fst
inc
xchg
jno
pop
fnstsw
pusha
mov
cmpsb
jge
xchg
sahf
lret
push
js
mov
scas
fnstsw
jns
fwait
lret
cwtl
sbb
xchg
cmp
sbb
mov
sub
xor
test
xchg
add
imul
lock
aaa
dec
loopne
loop
mov
cld
loopne
clc
iret
insb
xor
xchg
cmp
mov
cli
arpl
std
out
rcl
sbb
push
cld
jl
or
mov
adc
dec
int
mov
mov
adc
gs
cli
cld
adc
add
cmp
mov
leave
pop
insl
daa
cld
add
sbb
push
shl
sub
push
es
aas
ret
xchg
inc
push
movsl
push
xchg
imul
push
es
add
movsl
add
xor
sub
pop
add
pop
dec
dec
add
mov
out
adc
pop
lods
mov
add
push
ficomps
cli
jg
pop
cld
sbb
imul
dec
aam
ss
les
push
sub
sbb
cmp
xlat
repz
or
push
push
or
jns
daa
jnp
lret
and
mov
popf
in
jns
test
jae
pop
inc
iret
add
movb
or
sub
sbb
adc
push
pop
add
ds
add
xchg
enter
dec
movsb
mov
inc
inc
xchg
pusha
ljmp
sbb
ret
fstps
scas
add
sbb
lahf
stos
mov
push
mov
idiv
es
leave
shr
shr
out
sub
ret
das
out
mov
dec
pusha
push
jmp
pushf
andb
fistl
js
mov
fldl
shl
pop
xor
popa
sub
add
inc
mov
add
mov
iret
cmp
or
push
aas
push
push
pop
or
scas
mov
daa
dec
mov
jbe
fiadds
les
cs
into
cmp
push
mov
std
push
dec
dec
xor
jmp
or
jno
dec
pop
scas
push
dec
repnz
ss
out
xchg
aaa
cmp
jns
xor
test
enter
pop
and
or
cmpsb
jg
jae
ficompl
xchg
idiv
xchg
stc
mov
mov
adc
stos
jnp
pop
add
mov
adc
inc
movsl
jns
jl,pt
dec
lahf
mov
cmp
mov
loopne
inc
imul
or
lahf
or
stos
or
ljmp
fnstenv
and
xor
mov
and
push
sbb
xchg
adc
and
mov
out
xor
popa
clc
daa
dec
stos
cmp
and
dec
pop
cmp
cltd
aaa
adc
js
mov
or
pop
jbe
sbb
ficomps
popa
jo
mov
cmpsl
ss
sub
andl
jbe
jg
sahf
jge
pop
in
aad
push
xchg
lcall
xchg
xor
sub
movsl
sub
lea
mov
add
push
push
mov
data16
loop
push
cltd
ljmp
xor
icebp
test
fwait
pop
arpl
in
cmp
xor
imul
mov
or
dec
dec
inc
sarb
xor
mov
and
lods
mov
stc
pop
cmp
fildll
cwtl
divb
fsubrs
pop
fimull
xchg
mov
je
cmpsl
dec
add
mov
mov
mov
jbe
lahf
or
add
rorb
mov
cmp
int3
jae
add
sbb
ret
dec
lock
xchg
rolb
jb
sti
outsb
xchg
adc
daa
pop
adc
jb
xchg
daa
fcompl
dec
insl
pop
shll
xchg
jmp
fbld
fmul
dec
inc
dec
cmp
fildll
cmc
mov
fcompl
inc
jle
inc
fldcw
dec
cltd
stos
stos
ret
imul
sub
sub
cmc
sbb
ds
mov
sti
mov
imull
sub
xlat
scas
sbb
dec
cmp
pop
jne
pushw
fs
jle
sbbb
pop
sbb
insl
mov
mov
mov
outsl
rorl
xchg
mov
leave
or
or
stos
out
lods
push
sub
inc
mov
mov
mov
jno
shr
fisubl
ljmp
xchg
in
push
inc
inc
stos
cmp
jns
jmp
jmp
mov
pop
outsl
cs
sbb
movsb
jg
test
fadds
jb
ret
cmc
aam
imul
dec
hlt
pushf
mov
cmp
cld
adc
aam
add
pop
jmp
sbb
insl
std
lds
adc
hlt
push
add
dec
or
push
stos
xchg
mov
or
xchg
push
lret
mov
pop
mov
lds
adc
pop
fs
sbb
aam
mov
adc
int
rorb
jbe
sbb
mov
mov
inc
ret
scas
repnz
lds
fs
cmc
inc
push
push
mov
inc
xchg
pushf
fcmovb
pop
pop
cmp
pop
jns
orb
addr16
pop
fistpl
test
mov
mov
dec
mov
dec
mov
pop
mull
jmp
jbe
adc
adc
test
jp
cltd
xor
dec
push
scas
sub
pusha
jmp
ja
into
push
test
sub
scas
aas
les
icebp
scas
cmp
repz
test
inc
sti
mov
mov
dec
lea
mov
subl
sbb
dec
sub
stos
negl
pop
decl
sub
sar
leave
test
iret
leave
rclb
mov
pop
xchg
imul
je
jb
pop
xor
push
push
inc
cmp
pusha
out
mov
sub
cmp
push
sub
ljmp
xorb
in
add
pop
dec
mov
mov
int
movntps
and
mov
push
or
mov
mov
push
pop
inc
cmp
push
outsb
add
inc
add
je
mov
das
push
mov
sub
xchg
add
dec
test
lock
fdivl
cmp
sub
sbb
fstpl
sbb
sbb
arpl
cli
ret
xorl
xchg
sub
cmp
stc
in
push
mov
dec
add
xor
sahf
stos
sub
ljmp
mov
shrl
test
push
mov
pop
ljmp
arpl
aad
dec
imul
enter
ljmp
mov
test
and
and
adc
in
fildll
inc
cld
cmp
pop
mov
inc
test
mov
or
mov
hlt
lret
adc
mov
mov
sti
imul
adc
pop
into
fists
jo
pop
add
xchg
sbb
jne
adc
lcall
out
push
das
mov
dec
pop
sbb
push
jnp
xchg
loopne
cmpsl
sub
lahf
scas
insl
out
por
out
xor
pop
mov
pushf
lea
sbb
pop
sub
ss
outsl
cli
sub
jno
insb
jb
mov
cltd
inc
pop
outsb
leave
adc
daa
std
xor
xor
cwtl
inc
test
arpl
outsl
into
mov
adc
ss
popl
push
dec
test
sbb
adc
test
in
std
jp
inc
jnp
lahf
xor
fs
bound
cs
adc
nop
ljmp
cmp
pushf
dec
cmp
inc
or
les
push
lods
pop
mov
loopne
push
mov
add
push
subb
pop
jae
aas
iret
rolb
mov
lods
ds
lock
push
push
es
sub
jne
xor
xchg
pop
clc
dec
jb,pn
cmp
ret
cmp
cmc
dec
ja
stos
aad
arpl
dec
test
test
xor
lcall
cmc
dec
popa
push
pop
jg
dec
push
addr16
jne
out
dec
mov
popf
xor
adc
sub
mov
push
inc
rorb
cmp
pop
cmpsl
xor
xchg
dec
push
adc
jb
cmp
aas
jne
xorl
and
and
cmp
pop
mov
int
cltd
jb
push
dec
mov
jecxz
ficoml
add
js
xor
loopne
inc
pop
sbb
pop
mov
rorl
in
push
jp
adc
minps
xor
xchg
icebp
jae
aaa
xchg
lds
stos
xchg
stos
pop
lcall
popl
sbb
lret
adc
add
adc
adc
imul
push
lahf
or
mov
and
data16
or
push
popf
out
and
push
jmp
pop
or
hlt
xchg
aas
daa
sub
or
test
ss
inc
aaa
xchg
push
stos
mov
enter
pop
adc
dec
loopne
orl
scas
cltd
mov
sti
out
cmc
test
jg
sbb
jnp
test
ss
lahf
inc
sbb
push
fcoms
adc
in
movb
ret
xchg
int
inc
outsb
loop
ds
push
orl
flds
sbb
xchg
femms
adc
std
push
mov
jno
cmpsw
std
stos
dec
pop
fcom
xor
dec
xchg
fucomp
rcll
shlb
mov
jge
in
xor
test
pusha
xchg
iret
cmp
mov
ds
loop
imul
arpl
jae
arpl
fcoml
fnstcw
mov
dec
mov
mov
xchg
pop
xchg
mov
hlt
mov
push
adc
jl
ja
cmpsl
call
xchg
or
sti
adc
movsl
popa
aam
jl
movsb
iret
sbb
and
inc
lock
xor
sub
push
push
das
out
lret
push
mov
mov
and
sub
mov
js
cmpsl
mov
dec
shl
ss
push
and
pop
fnstenv
bound
std
rorb
loop
aaa
sbb
mov
stos
rorb
or
fisttpll
or
push
add
dec
mov
test
xchg
pop
push
sub
push
es
sbb
icebp
inc
scas
aas
add
jnp
adc
movsb
cmpsl
xor
loope
push
test
repz
xor
push
sub
mov
pop
xchg
inc
adc
fstps
or
js
sub
movsb
xorl
cwtl
sub
filds
mov
adc
mov
dec
xchg
lods
xor
jo
test
arpl
shld
lods
idivl
sbb
inc
pop
js
std
add
jg
inc
or
push
xor
xor
lret
dec
insb
stos
mov
xor
dec
mov
or
push
xor
arpl
lds
fbld
das
test
test
loopne
cmp
inc
mov
data16
xor
xchg
jo
push
aaa
add
pop
xchg
xchg
cmpsl
lret
mov
les
in
pop
mov
and
ret
inc
jo
sahf
es
mov
clc
inc
outsb
aaa
xlat
sbb
icebp
fwait
lods
and
pushf
out
repnz
ss
lcall
mov
cmp
pushf
lahf
and
mov
test
mov
adc
mov
mov
enter
adc
mov
jp
cmp
sbb
sbb
fdivl
xchg
nop
and
rcrb
cs
jge,pt
push
push
mov
imul
stos
movsb
cld
sbb
cmp
mov
adc
push
leave
into
les
scas
test
or
jne
push
test
daa
mov
jge
pop
sub
vunpcklps
mov
inc
in
clc
and
lahf
out
fprem
imulb
add
aaa
fnstcw
ror
mov
pop
aas
push
dec
xchg
mov
fldcw
arpl
xchg
xor
lret
vpcmov
test
mov
lods
lods
mov
sarb
cltd
inc
dec
mov
fs
mov
in
pop
lret
lea
sti
mov
cmp
pop
jmp
mov
mov
sti
jae
dec
in
push
ja
test
or
jp
mov
push
sub
xchg
flds
mov
jmp
sbb
adc
cli
imul
test
add
call
lods
repnz
adc
and
or
fdivr
ja
iret
add
repz
repz
jnp
push
sub
movb
sbbl
out
inc
in
cmpb
sahf
sti
jbe
or
sbb
mov
rorb
rcrl
test
sub
test
xchg
gs
and
pop
jmp
mov
pop
and
jo
std
push
cs
dec
test
ret
cs
jne
repnz
adc
jbe
pop
lds
add
mov
lret
pop
lret
push
sub
mov
lds
lcall
xchg
fsts
mov
jb
incb
pusha
pop
lods
add
dec
pop
test
adc
out
mov
xor
int3
movsl
int3
xor
pop
sti
in
pop
stos
mov
mov
pop
arpl
fmul
hlt
out
mov
cmp
sub
push
mov
imul
adc
rolb
sub
push
and
mov
dec
push
mov
push
mov
or
xchg
fiaddl
xlat
dec
es
or
or
cli
inc
xor
dec
push
aad
inc
push
clc
sahf
jbe
inc
mov
int
push
cmc
test
or
add
loopne
inc
rolb
aam
das
inc
out
arpl
lea
aaa
xlat
cmp
in
stos
mov
dec
jmp
call
es
and
xchg
xchg
loopne
je
dec
push
adc
stos
lods
add
addr16
or
enter
cld
adc
xor
dec
aaa
cli
adc
add
fs
pop
sbb
xor
shr
popf
xor
mov
in
mov
push
in
clc
pusha
adc
inc
mov
jne
add
sti
ret
rcrl
lret
jge
xchg
mov
pop
mov
lods
xor
dec
clc
push
sbb
arpl
cmc
xchg
sbb
cmp
mov
mov
and
js
gs
aaa
xor
mov
pop
dec
aaa
hlt
into
loope
into
call
pop
or
jae
jl
and
jnp
inc
mov
mov
inc
in
dec
cltd
call
fsubs
mov
inc
sub
pop
xlat
clc
jge
leave
imulb
fs
jns
lret
adc
mov
add
mov
in
out
sbb
and
pop
mov
repnz
jmp
loopne
sbb
clc
enter
mov
cmpsl
hlt
push
pop
pop
xor
cmp
stc
pop
fldt
jp
dec
sbb
int3
test
cmpsb
adc
adc
xchg
lods
inc
test
movsb
ror
cmp
fnsave
mov
cmpsl
movsb
and
or
mov
inc
pop
cwtl
dec
jb
or
add
and
push
add
xor
pop
jo
lock
xchg
lret
push
adc
mov
mov
pushf
stos
ljmp
out
pushf
push
xchg
and
movsb
test
leave
mov
dec
mov
xchg
nop
jne
push
fidivrl
mov
fidivrl
or
mov
gs
mov
testl
lods
imul
dec
fsubrl
shl
fnstcw
repz
fisttps
dec
pushl
xor
out
dec
or
add
jge
or
pop
sub
testl
pop
add
jmp
xchg
fildll
clc
inc
pusha
gs
pand
popa
lahf
adc
jmp
sbb
push
or
daa
xor
xchg
sbb
std
in
jp
add
rorb
outsl
jmp
push
cltd
into
xor
pop
sahf
adc
repnz
adc
out
jp
cmp
sbbb
mov
cmp
test
dec
dec
mov
mov
lods
roll
xor
push
jmp
repz
fwait
leave
enter
jl
ret
xchg
out
and
adc
loop
popf
pop
cmp
cli
fidivrs
in
cmp
repz
mov
and
out
sbb
cmp
lahf
call
pop
pop
mov
icebp
inc
xlat
xor
sub
popf
andl
dec
out
jae
pop
stc
sbb
inc
sbb
into
mov
loope
das
imul
lds
cmpsb
mov
je
lea
addr16
cmp
mov
std
leave
fildll
cmc
test
hlt
das
mov
mov
adc
rorl
cmp
lds
sbb
push
sub
iret
cmp
mov
or
ja
push
pushf
mov
jb
dec
xchg
dec
push
mov
pop
mov
fnstsw
mov
popa
and
iret
movsb
xor
sbb
das
stos
push
es
add
and
xchg
xchg
jnp
push
fstpl
es
scas
in
cmp
jmp
mov
loop
xlat
push
imul
or
addb
into
imul
imul
mov
popa
pop
sub
mov
rcl
mov
push
mov
lods
push
repnz
cmp
xchg
lahf
inc
cmp
cmpsl
mov
sbbl
fstps
cli
dec
pusha
bound
fs
nop
pop
addr16
and
sbbb
jno
cmpsb
loopne
xor
lahf
push
adc
adc
cmp
pop
and
pop
mov
dec
jbe
fadds
in
sarb
js
jge
jns
leave
sub
das
or
test
repz
jae
inc
push
mov
imul
rep
inc
inc
call
loop
mov
fs
pop
cmpsl
add
jae
dec
fsubl
push
std
and
nop
shll
sub
lods
fsubr
int3
xchg
icebp
sti
mov
in
jb
adc
les
dec
stos
jg,pt
jle
cmp
push
dec
stos
rcl
imul
int3
std
and
xchg
adc
and
sahf
or
jo
addr16
aaa
lret
jb
out
jne
aaa
ja
mov
aaa
adc
push
arpl
cmp
aad
push
in
mov
int
adc
repnz
mov
or
cmp
cwtl
sahf
adc
pop
cmp
jnp
hlt
push
jbe
call
stos
stc
xor
lcall
imul
out
jl
xlat
out
push
cmpsb
data16
fistl
shll
inc
xchg
aad
xor
or
scas
cmp
mov
gs
les
cltd
xor
jp
cmpsl
insl
and
mov
push
mov
add
lea
in
aaa
xchg
add
fcomps
out
scas
pop
daa
dec
nop
and
cmp
ret
or
in
ret
fimuls
xor
push
cmp
mov
cmp
adc
dec
clc
hlt
inc
in
mov
xchg
jns
jae
pusha
mov
addr16
pushf
mov
pop
push
orb
xchg
ror
fnop
pop
movsl
into
fbld
andb
mov
popa
push
pop
in
or
cmp
into
pop
xchg
ja
scas
cmpsb
shl
test
mov
xchg
pop
cmp
inc
push
sub
fdivl
xchg
and
test
push
jns
xchg
mov
enter
sub
adc
fsub
add
add
inc
sub
adcb
lds
push
fsubrs
pop
daa
adc
cmp
sub
cmc
jp
mov
xlat
cmp
sar
mov
push
icebp
orl
outsl
pop
xchg
mov
dec
push
icebp
or
jno
pop
mov
fwait
repnz
pop
dec
roll
fcmovnb
xchg
dec
movsl
addb
push
cld
je
jp
outsl
inc
jbe
push
or
in
and
lock
mov
sti
data16
and
inc
mov
jno
xor
sbb
lods
sub
xchg
xchg
push
cmp
mov
push
pop
faddp
fwait
push
xor
jle
addr16
dec
push
xchg
cmpsl
mov
xor
sub
ret
xchg
mov
inc
xchg
addr16
cmpsb
jno
mov
ljmp
int
shl
xchg
pop
mov
imul
dec
scas
cmp
das
dec
mov
and
jo
sbb
adc
aam
or
and
sbb
adc
or
clc
roll
in
fisttpl
ja
or
inc
jmp
cmp
fadds
xor
or
or
xor
dec
enter
jno
mov
push
bound
mov
mov
loope
loopne
ja
les
insb
arpl
out
add
xor
in
int
or
sbb
push
sub
insl
mov
xchg
dec
pop
dec
ret
inc
mov
psrlw
ss
xor
push
test
scas
das
pushl
cmp
push
testl
nop
out
sub
cwtl
ja
fnstenv
roll
in
enter
push
dec
adc
inc
pop
mov
sbbl
mov
inc
xchg
or
add
fmuls
ljmp
sub
mov
adc
jo
fdiv
addr16
addb
add
pop
ret
popa
insb
mov
cld
or
les
add
ret
lcall
mov
jecxz
add
lahf
and
mov
out
xchg
out
add
repz
jne
mov
cmp
iret
pop
lcall
daa
out
sub
push
out
mov
pushf
ds
ficompl
pop
sbb
push
jbe
add
hlt
fpatan
jb
addl
gs
addr16
push
and
mov
lock
pop
pop
mov
and
int3
stos
adc
mov
cmpsb
add
dec
ds
sbb
arpl
in
xor
fildl
xchg
mov
sub
sub
scas
sbb
gs
push
or
out
incl
movsb
sbb
dec
mov
pop
notb
xor
cmp
dec
lret
mov
inc
jmp
hlt
loope
cmpb
dec
aas
shl
lock
out
mov
xor
mov
fldt
arpl
and
in
ja
sub
cmp
cmp
mov
movsb
pushl
ljmp
addr16
fst
loopne
push
dec
mov
btc
sti
push
or
in
repnz
or
pop
sub
xorb
ret
bound
mov
loopne
addb
fidivl
negb
rclb
imul
mov
cmp
jge
add
adc
cmp
test
imul
in
leave
addr16
rcll
sarl
lds
dec
sbb
mov
rcrb
jns
push
jle
mov
jecxz
lods
mov
int3
mov
cli
lea
or
sarb
stc
mov
xchg
loope
inc
lcall
fwait
mov
aaa
mov
js
lock
dec
inc
in
test
lcall
repnz
gs
js
push
jno
leave
data16
inc
cmpsb
lds
stos
ds
push
xor
std
das
fisubs
insl
mov
and
loope
inc
movsl
or
lods
adc
and
xor
dec
xchg
imul
cmpsl
xor
pop
mov
fwait
inc
pop
xchg
xor
das
jecxz
sub
push
xor
div
mov
push
es
push
cmp
fisubrs
mov
mov
add
mov
lods
dec
cmpsb
jge
gs
cltd
fwait
xor
jl
leave
sar
out
ss
ret
ret
dec
es
push
outsl
insl
std
xor
xchg
sbb
pop
je
cmp
mov
enter
sbb
lcall
dec
adc
pop
lock
cli
aad
pop
popa
add
or
fs
jmp
dec
fsts
xchg
aam
cs
xor
xchg
push
or
pop
imul
sahf
lahf
jle
shll
clc
in
fidivl
mov
test
je
aas
sbb
push
xchg
popf
push
loopne
test
mov
cltd
fcmovnbe
sub
out
add
sub
fdivr
sub
fiadds
dec
xor
mov
adc
aam
mov
or
cwtl
inc
push
xchg
clc
movsb
out
iret
rcrb
jl
test
mov
mov
out
xchg
mov
out
into
sbb
out
int
mov
mov
xchg
stc
push
out
push
aad
aas
fimuls
stos
or
into
mov
popa
test
notb
add
addr16
inc
inc
fldl
sub
add
pop
ja
and
addl
lods
push
mov
je
insl
inc
jo
lods
push
jne
jae
xchg
lcall
orl
mov
imul
pop
std
andb
push
insl
pop
inc
outsb
mov
jo
pop
jl
or
push
cvttps2pi
leave
loopne
inc
mov
int3
adc
and
xchg
pop
adc
pop
jo
mov
push
pop
scas
clc
cwtl
mov
les
ret
push
lds
fcmovnu
popa
fdivrl
push
mov
mov
sub
enter
push
arpl
in
xor
outsl
sub
push
fs
ds
or
lods
jecxz
stc
xor
lcall
mov
cmp
dec
pop
dec
pop
pop
pusha
aas
jmp
ftst
arpl
jae
push
ljmp
leave
pop
dec
xor
push
movsl
and
fucomp
jnp
in
mov
pop
cwtl
adc
adc
int
mov
or
adc
adc
jl
test
shlb
mov
fldcw
cmpsb
movsl
sbb
inc
cmp
iret
pushf
andl
stos
sub
sahf
lret
jbe
dec
les
cmpsb
sub
adcb
popa
int
call
sub
fstpt
out
icebp
out
and
mov
adc
mov
inc
pop
cmp
jno
fs
xchg
and
ss
in
movsl
dec
fdivrs
mov
mov
xlat
aam
bound
cmp
lar
inc
stc
scas
js
ds
js
leave
and
cmpsl
inc
daa
cmp
hlt
popf
cmp
loopne
leave
fdivrs
aas
movsb
add
sti
aaa
and
cld
sbb
aaa
cmc
bound
shl
rcrb
push
inc
add
pop
cmc
add
pop
rcl
xlat
call
lock
or
push
inc
mov
jmp
add
jne
xchg
push
inc
mov
jmp
pop
cmp
lock
jbe
adc
fisubrs
or
inc
pop
shll
and
bound
mov
sahf
in
add
dec
push
add
daa
mov
imul
jle
cmp
mov
push
in
mov
adc
and
or
int
push
ja
in
ds
dec
pop
push
sub
adc
xor
test
ret
cmp
sub
stos
dec
mov
arpl
insb
push
addr16
dec
fnsave
aas
inc
inc
ret
jne
cmpl
pop
pop
sub
mov
addr16
xor
adc
cmp
lcall
shrl
xchg
cmpsl
pop
adc
add
je
clc
fnstenv
lds
iret
sbb
js
out
mov
pop
push
sbb
addr16
dec
sbb
mov
stos
sbb
enter
outsl
mov
xor
mov
insb
sahf
popf
dec
sub
lods
dec
mov
dec
rol
xlat
mov
or
pusha
xchg
xchg
mov
imul
pop
sub
add
insb
ret
popf
shlb
frstor
pop
add
push
lahf
dec
sahf
xor
icebp
scas
lock
scas
inc
and
orb
sbb
add
mov
ds
dec
iret
xchg
xchg
rcll
stos
inc
inc
lods
clc
rol
mov
movsb
sbb
or
lea
cmp
scas
data16
test
sub
rol
add
gs
in
jge
fidivrs
int
cli
cwtl
add
mov
lret
mov
push
fsubl
imul
test
cmpsb
dec
cmp
push
or
sbb
subl
jae
mov
jo
test
jnp
mov
adc
lret
nop
mov
jns
adc
mov
andb
ja
test
and
dec
out
pop
push
rclb
cmp
pop
and
iret
stc
mov
jno
pop
jb
aad
stos
divb
scas
push
aam
add
enter
lock
in
adc
adc
filds
das
es
adc
cmp
out
sub
and
sbb
jle
add
adc
jecxz
and
rolb
jg
in
movl
je
movsl
adc
xor
jne
jmp
xchg
lret
mov
jecxz
je
filds
iret
pop
jne
int
sub
sub
dec
xchg
pop
ret
cbtw
loope
sahf
push
push
push
and
rolb
inc
push
cmp
aas
test
add
mov
add
cld
test
xlat
je
in
popf
mov
call
pop
aad
imul
iret
dec
mov
fdivl
fidivrl
xchg
mov
cmp
inc
in
fdivrp
scas
sub
add
ret
jnp
dec
mov
insb
add
inc
cmp
nop
sbb
mov
popf
or
mov
inc
test
out
into
sub
adc
add
enter
mov
mov
or
dec
fldz
out
push
out
aam
mov
jle
inc
xchg
es
test
xchg
out
push
aas
test
or
dec
bound
xchg
xchg
push
je
insb
xor
cmc
mov
cs
mov
sbb
in
das
lods
test
sbb
shll
pop
ficompl
rorl
inc
inc
pop
fs
in
add
jge
lock
pop
lret
push
jmp
push
xor
ljmp
int3
or
cwtl
movsb
popa
rcrl
push
repz
add
xchg
xor
xchg
fnstcw
shl
xchg
dec
fs
lods
dec
sarb
cmpsl
fistpll
cmp
icebp
xor
inc
sbb
xor
lock
insl
mov
cmp
loope
bound
sbb
lret
xor
mov
mov
add
adc
dec
scas
popa
sbb
mov
int3
lcall
sbb
es
mov
out
adc
enter
movsb
cli
push
iret
xor
jne
jmp
out
push
add
ret
aad
lods
cmp
icebp
pop
fnsave
gs
lds
fcmovu
bound
int3
std
adc
lods
outsb
rcrl
jnp
sub
dec
mov
dec
mov
cmc
sbb
scas
cmp
lcall
and
lahf
hlt
rol
xchg
stc
repz
inc
push
jno
jl
push
mov
push
ret
fstl
and
mov
push
ljmp
pushl
pusha
mov
jge
or
test
js
lcall
pop
add
ds
imull
int3
nop
push
rcrl
scas
daa
mov
int
or
jp
mov
jl
cmp
mov
mov
jmp
frstor
mov
call
hlt
mov
sbb
add
and
mov
jg
cmp
and
jl
cmp
push
mov
test
insl
cmp
push
das
nop
jnp
mov
mov
adc
jb
mov
aaa
mov
jns
adc
cmc
dec
ljmp
push
mov
cld
mov
jecxz
cmp
in
lea
loope
lock
add
negb
mov
mul
add
pop
fstpt
and
lock
xor
dec
aas
lret
pop
leave
icebp
scas
loop
jmp
inc
call
push
out
pushf
pushf
lahf
ror
dec
stos
in
loopne
cmp
out
stc
subl
jmp
daa
jl
subb
shl
mov
adc
mov
mov
dec
push
adc
mov
mov
push
mov
cmc
mov
imul
call
fistpl
and
imul
inc
sahf
push
pop
fnsave
fs
fcompl
scas
pusha
rol
xchg
mov
mov
inc
or
xchg
pop
lods
lret
adc
push
in
add
jne
inc
shl
and
daa
inc
ret
out
inc
imul
sbb
pusha
jo
sub
mov
clc
cltd
xchg
enter
add
fdivrl
jle
call
push
lret
jmp
mov
mov
jno
icebp
adc
movsl
inc
push
and
insl
int
mov
dec
fwait
adc
xchg
negl
not
scas
pop
xchg
pop
xor
cmc
jl
mov
mov
rolb
shll
sub
xor
or
sub
sub
leave
cmp
cmp
or
dec
adc
fiadds
imul
dec
jmp
cld
mov
mov
push
filds
xor
cmp
gs
xor
sub
push
and
mov
in
mov
mov
shll
ljmp
dec
imul
aaa
ret
or
testb
pop
jbe
mov
int
lods
dec
out
sbb
mov
fs
in
and
mov
scas
add
idivb
ret
dec
mov
mov
push
add
movsl
add
int
xchg
cld
dec
xor
test
ja
sbb
js
rorl
push
sbb
cmpsb
test
shl
movsb
adcl
mov
or
lds
sub
inc
push
and
imul
jae
mov
outsb
jmp
xchg
xchg
sbb
loope
fwait
mulb
sti
push
mov
jae
push
je
imul
jno
popf
leave
sub
pop
mov
adc
inc
out
cmp
xor
fs
push
lret
mov
xchg
push
out
popa
in
add
xchg
ret
out
or
cltd
addr16
jne
aaa
or
mov
icebp
out
pop
fldcw
mov
jb
mov
xchg
add
mov
pop
mov
andl
popf
push
mov
add
mov
push
pop
jl
je
mov
clc
mov
addl
mov
orb
ds
mov
jne
mov
cmp
and
inc
xor
out
mov
repnz
sbb
adc
xor
out
xor
inc
pusha
inc
pop
and
test
test
call
xchg
stos
adc
clc
test
fists
loopne
popf
cmp
adc
cli
xor
in
ret
subb
mov
clc
mov
mov
xor
mov
fistl
push
inc
es
jge
adc
cld
imul
mov
stos
rorl
sti
add
movsl
cmp
outsl
inc
stos
sti
aam
jmp
stc
pop
hlt
mov
outsl
ljmp
fidivs
mov
mov
xorb
filds
push
das
jb
xlat
stos
mov
lock
dec
and
into
ror
fs
cmp
ss
in
jle
push
xchg
out
jno
mov
mov
add
or
inc
and
push
sub
cmpsl
pop
cmpsb
pop
pusha
jns
fcoml
dec
stc
jmp
mov
pop
pop
xchg
sub
sub
lods
neg
xchg
sub
sub
lock
ss
add
dec
xchg
shrl
aam
jg
aam
cs
lea
cmp
lahf
out
stos
jp
xchg
es
ret
push
dec
inc
jns
fsub
mul
xchg
push
adc
mov
and
ficoms
mov
inc
mov
fwait
les
inc
and
shrb
int3
pop
movsl
cli
mov
adc
dec
xchg
fnsave
enter
outsl
data16
dec
adc
xchg
out
push
repnz
xorb
jmp
dec
jb
ds
dec
mov
shll
out
repz
std
aas
or
adc
jns
fldcw
pop
pop
add
jo
out
xor
mov
lret
in
icebp
shl
pusha
shl
cmp
sub
lods
test
inc
ljmp
idivl
or
movsl
sar
mov
fnstenv
sahf
sti
lahf
fwait
stc
sti
cwtl
jne
mov
cmpsb
or
nop
lock
mov
dec
popa
xchg
add
pop
loopne
jp
les
lea
cli
adc
sti
cmp
jecxz
scas
or
or
inc
aam
mov
movsb
divl
insb
push
sbb
pop
cltd
inc
jns
into
mov
lea
adc
arpl
xor
adc
loope
sbb
dec
outsl
sub
push
sbb
fisubrl
dec
jns
jno
pop
push
cld
pop
out
dec
push
popf
or
mov
mov
adc
clc
dec
shl
es
push
pop
iret
mov
lret
xor
push
adc
mov
int3
cmp
mov
add
loopne
xchg
and
clc
loope
mov
lds
push
lea
push
push
xor
test
pop
scas
daa
xor
mov
or
cmpsl
repz
ret
xlat
es
pop
daa
sbb
mov
xchg
ljmp
and
stc
and
pushf
add
out
test
mov
xchg
fsubs
idivb
adcb
shlb
dec
test
dec
fisubl
divl
add
mov
xchg
adcb
cmp
and
pusha
push
mov
mov
mov
aaa
adc
xchg
xchg
ja
mov
ficoms
bound
int3
xor
cltd
adc
data16
mov
movsb
pop
push
mov
repz
aad
dec
sbbl
jbe
in
mov
or
mov
jno
aas
adc
ret
cld
into
lods
push
sbb
or
aam
or
lods
stc
cmp
daa
iret
cmp
das
xor
leave
push
insl
adc
cltd
mov
fildll
push
inc
imul
orl
stc
jl
mov
ficoml
push
shlb
stc
ljmp
cmpsl
push
mov
cmp
and
jl
mov
mov
mov
fsts
mov
dec
ret
das
pushf
sub
mov
sub
enter
xlat
xchg
xchg
mov
pusha
sbb
jns
std
sbb
or
insb
pop
and
pop
cmp
dec
fmull
bound
lds
ficoms
xchg
int
imulb
jl
cmp
cmp
bound
inc
cmp
shlb
inc
loope
and
fdivl
movsl
mov
add
cltd
sbb
push
dec
add
stos
push
dec
popa
stc
rorb
push
sub
hlt
in
rcll
idivb
jnp,pn
pushf
test
out
fdivs
pop
mov
ds
adc
inc
fildll
and
push
fisubrs
aaa
and
push
loope
add
and
imul
les
push
movsl
add
outsb
dec
xlat
and
into
insl
add
and
cmp
mov
inc
mov
scas
xor
xchg
xchg
or
pop
fwait
pop
insb
sti
mov
xchg
sar
or
mov
bound
cmpsl
xchg
mov
daa
or
ljmp
inc
cmpsl
loop
or
or
push
cmp
inc
popf
out
push
xchg
inc
scas
cs
xchg
int
sub
js
pop
push
aas
cmpsl
cmp
pop
jae
test
jno
xor
xchg
fimull
push
mov
jb
mov
mov
les
divb
into
icebp
addr16
dec
imul
shll
mov
dec
lods
adc
jge
mov
xor
stc
pusha
test
xor
ret
mov
aad
inc
leave
icebp
sbb
lods
daa
xchg
pop
xor
cld
cmpsl
cmp
mov
mov
xor
dec
into
adc
pop
sub
inc
test
lret
pop
ss
and
daa
rorl
dec
or
mov
stos
shll
repz
adc
fildl
movb
jmp
fs
mov
popa
jnp
mov
inc
outsl
xchg
aas
add
push
iret
fucomip
out
roll
mov
and
loope
jmp
pop
arpl
movsl
es
xor
test
dec
lret
sbb
mov
lds
insl
leave
lea
or
into
jne
stos
mov
movsb
aaa
xor
or
inc
lcall
sbb
or
mov
cmpsl
xchg
jo
int
sarl
pop
ljmp
inc
inc
rcrl
dec
sub
or
cwtl
pop
mov
pop
xor
es
jo
mov
xchg
test
xor
add
cmp
cmp
cmp
sarl
ret
sbb
aas
data16
adc
sbb
pop
xor
out
out
gs
ds
sub
std
sbb
shlb
iret
pop
push
mov
mov
stos
adc
pop
jmp
inc
aas
enter
sbb
cmp
mov
mov
fwait
jecxz
call
in
jo
test
mov
mov
inc
mov
fidivl
sbb
in
mov
int3
and
xor
mov
sbb
pop
pop
and
divl
inc
cmp
add
cmp
dec
add
fwait
pushf
out
xor
xor
ljmp
repz
sub
push
mov
pushf
out
fs
sbb
je
push
ljmp
cli
enter
mov
loop
cmc
xor
xor
insl
std
add
stc
in
out
push
pusha
jae
dec
enter
arpl
xchg
lods
xor
jmp
push
repnz
xchg
xchg
daa
and
fnsave
int3
outsb
subl
push
add
arpl
lahf
lcall
adc
cs
cmp
mov
mov
mov
js
loop
fadds
das
pop
ljmp
sbb
or
nop
sbb
nop
arpl
cmpsl
fwait
or
imul
out
insl
sub
iret
cmp
cmpl
cmp
push
leave
stos
test
mov
and
sbbl
dec
enter
in
je
call
dec
push
jmp
pop
mov
add
or
pop
jae
inc
lcall
push
lods
fnsave
or
test
inc
sbb
cmp
and
push
loop
or
fs
sbb
les
jle
pop
mov
outsl
call
xchg
adcl
sub
lret
or
sbb
in
jmp
shrb
adcl
add
repz
dec
fiadds
sbb
pop
dec
jle
popf
fldenv
clc
repz
jae
add
and
loop
iret
sar
cmp
push
and
jp
pop
xor
push
inc
adc
jnp
or
cmp
in
roll
lret
dec
mov
cmp
das
pop
cmp
cmc
jl
orb
sbb
int
inc
sbb
aad
lcall
out
call
in
iret
or
mov
sbb
cmp
adc
jp
push
loopne
xchg
aad
xchg
jp
test
outsl
pop
xchg
push
push
pusha
and
out
enter
lcall
mov
sub
dec
pop
inc
jno
mov
scas
test
mov
mov
xchg
arpl
push
fwait
insb
push
popf
cltd
jne
add
lret
je
ret
std
test
add
xchg
mov
push
xchg
inc
imul
popf
mov
lea
icebp
data16
int3
outsb
fs
fiaddl
jns
cmc
sti
js
cli
sti
push
mov
inc
nop
inc
out
mov
push
xchg
lds
sbb
insl
in
dec
fcmovnu
pop
pushf
adc
sub
dec
int
out
and
add
xchg
aaa
mov
or
cmpsb
outsl
mov
push
out
loopne
imulb
lret
clc
pop
xchg
repnz
lret
ret
aam
loopne
and
call
xchg
fisttps
imul
ljmp
sbb
cmp
in
bound
nop
int
jle
xchg
test
mov
mov
por
hlt
sub
pop
adc
mov
add
clc
or
dec
int3
movsl
or
or
ret
leave
lds
out
lret
adc
xor
adc
dec
incl
lret
dec
shrb
or
or
bound
stc
or
pop
or
call
in
pop
sti
inc
inc
andl
hlt
xor
les
push
out
xchg
xor
std
popf
imul
ds
clc
sub
sub
ret
loop
hlt
sub
and
xchg
and
shll
lahf
mov
in
popf
jb
scas
add
or
popf
add
mov
jne
xchg
mov
clc
sarb
sahf
mov
adc
fdivs
pusha
scas
push
ja
jmp
roll
or
push
mov
add
int
shll
pop
sub
xor
xchg
push
xor
ss
mov
and
dec
cmp
movsb
jae
pusha
fst
sub
and
and
jle
movsl
scas
shrl
incl
jnp
jnp
sub
addr16
and
scas
xchg
in
sbb
es
ret
sub
pop
lea
adc
fwait
mov
add
sub
or
addr16
xor
shl
pusha
pop
lcall
or
push
sub
cli
sub
mov
mov
mov
sub
inc
mov
or
out
dec
add
or
lods
cmc
insl
adc
rcll
loop
dec
adc
xchg
mov
jg
jl
adc
xlat
fxch
rorb
imul
ret
clc
popa
shll
lods
xchg
dec
stos
repnz
lds
popf
mov
insl
sbb
out
popa
je
dec
sbb
pop
hlt
pop
jae
sahf
and
sbb
cwtl
and
subl
push
jnp
movsl
test
shll
cld
sbb
adc
mov
xor
out
pop
fcoms
or
cmpsl
scas
popa
hlt
outsl
sub
leave
add
mov
push
cwtl
pop
mov
pop
comiss
sahf
mov
loopne
daa
cmp
or
and
cmpsl
push
dec
sbb
and
sub
push
or
sahf
or
icebp
stos
jmp
std
xlat
adc
jno
jmp
mov
ret
push
sbb
mov
adc
jle
push
ja
test
cmp
cmpsl
add
or
sbb
lret
pop
add
jg
adc
sub
jecxz
insb
add
pop
jmp
dec
scas
sbb
icebp
xor
lock
xchg
mov
cmovno
jo
imul
rcl
xor
ss
and
and
pop
jecxz
mov
sub
dec
lock
push
lea
and
outsb
jl
adcb
or
popa
ljmp
fsubs
in
mov
pop
rcl
stos
cmp
xchg
std
jnp
jb
test
lods
add
lods
pop
xor
adc
xchg
mov
sbb
add
push
stos
loop
int3
cs
or
mov
add
mov
inc
ret
cltd
ljmp
call
jns
loope
add
lahf
movsl
and
mov
jge
test
addb
cwtl
cmp
pushf
adc
insl
jo
mov
scas
pop
sub
ds
stc
test
sub
popf
xorb
adc
bound
negb
pop
dec
out
cmc
mov
ss
std
hlt
xchg
dec
and
mov
and
xchg
push
xchg
push
mov
pushf
jo
aaa
mull
cmp
mov
je
out
in
sbbb
push
cwtl
push
mov
pushf
sub
test
hlt
mov
clc
ret
stos
fimull
jns
fnstcw
dec
gs
and
xchg
and
pop
adc
cmp
data16
inc
mov
xchg
mov
mov
pusha
cmp
and
insb
gs
fcompl
dec
test
loope
jecxz
subl
or
pop
fdivs
js
mov
shrb
sub
mov
push
shr
sbb
lcall
jp
popf
inc
jge
loope
or
xchg
fisubrl
add
in
adc
sbb
lret
fstps
pop
and
insb
adc
scas
pop
sub
cmp
sbbb
push
js
push
call
and
jmp
jecxz
insl
cmpb
add
jle
sbb
adc
push
and
jns
sub
repz
sbb
fbld
or
test
lret
and
in
iret
or
gs
cwtl
sub
jge
ret
pop
movsb
sbb
cmp
lcall
push
push
and
mov
push
mov
push
xor
into
pusha
jg
sbb
scas
mov
lret
sti
lods
frstor
mov
push
cmp
mov
outsb
stc
movsl
sbb
and
test
jno
jb
cmp
gs
push
lods
test
outsl
imul
cwtl
pop
idivl
dec
xchg
fcoml
pop
fnsave
jne
sbb
fwait
xchg
sbb
xchg
xchg
aas
cmp
push
movsb
popa
scas
cmp
xchg
cmp
or
xchg
xchg
rcrl
push
sub
pushf
fwait
mov
xorb
pop
sbb
imul
and
movsb
add
sub
or
dec
popf
cmp
imul
push
jp
mov
aad
jns
cmp
push
clc
enter
aad
sub
mulb
mov
lahf
out
hlt
add
cmpsb
mov
nop
fs
outsl
pop
lret
push
push
jg
hlt
xchg
les
fmuls
icebp
mov
hlt
imul
cmp
mov
cmpsb
dec
dec
lods
test
mov
dec
push
adc
xor
cmp
jg
pop
ss
cmp
jne
adc
shl
or
xor
or
pop
mov
std
popf
adc
sub
push
outsl
fidivrl
and
sub
push
cmpl
fcoml
loop
rcrl
jbe
pusha
das
das
hlt
inc
mov
mov
cld
dec
and
call
rcr
loope
test
push
int3
jb
mov
mov
cltd
mov
pop
out
xchg
imul
loop
ljmp
jbe
push
aam
cwtl
loop
insl
adc
or
mov
push
push
push
insb
aas
xor
lds
pusha
push
sub
jmp
lea
pop
cmpsl
xchg
and
ret
push
jno
js,pt
jecxz
push
fdiv
lock
jbe
out
insb
mov
pop
mov
enter
dec
xlat
mov
mov
xchg
mov
push
jbe
xor
ss
or
test
dec
aaa
shr
cmp
fsts
jecxz
mov
ret
std
mov
xchg
outsl
in
outsl
jecxz
mov
mov
sbb
xchg
push
test
adc
dec
or
xor
dec
add
mov
dec
adc
xchg
iretw
bound
pop
dec
cmpl
cmp
sub
mov
adc
mov
add
mov
dec
repnz
in
adc
dec
scas
gs
mov
repnz
xchg
lock
add
adc
mov
js
mov
jnp
sbb
push
xor
aaa
out
push
es
into
les
clc
ret
cmp
xor
mov
ret
mov
js
cmp
add
mov
push
jnp
and
mov
cmp
xor
sbb
mov
add
and
mov
inc
stos
dec
cli
and
mov
ljmp
inc
xor
and
dec
adc
out
lods
sub
xchg
int3
jge
das
xchg
in
pop
jno
inc
popf
aaa
test
fnstcw
out
dec
arpl
leave
adc
fsubl
addl
fstl
cmp
xchg
lcall
pop
jnp
mov
xchg
push
mov
lods
jmp
divb
div
cmp
fsubr
dec
cwtl
sbb
rorl
loop
jg
cld
jnp
cld
pop
and
or
pop
sti
divl
cmp
xchg
push
je
xchg
sbb
shlb
imul
test
call
loop
mov
sub
rorl
sbb
mov
ja
frstor
pop
xchg
push
mov
adc
push
addr16
ds
icebp
xor
dec
pop
mov
mov
ja
xor
movsb
ja
out
sub
xchg
sub
inc
mov
jnp
mov
movsb
das
mov
push
cld
enter
imul
mov
test
mov
outsl
and
int
mov
push
cltd
jbe
xchg
mov
xor
sub
arpl
xchg
sbb
test
icebp
xchg
mov
shll
test
mov
in
pop
sub
lcall
jg
sbb
inc
xchg
in
sub
jecxz
aas
adc
sub
push
push
pop
jg
xor
cs
and
jg
or
pop
sti
int3
push
xor
sbb
into
xor
in
adc
or
xchg
cmpl
add
fwait
inc
inc
jmp
test
mov
push
mov
test
jmp
add
enter
jns
push
push
out
aad
mov
sbb
test
xchg
push
push
push
xchg
mov
xor
lds
das
rcr
call
sbb
xchg
push
sbb
inc
mov
cmpsb
sub
arpl
xchg
imul
popf
jo
jl
lock
sub
insb
and
lods
push
int3
jae
xor
into
pop
sub
sahf
hlt
mov
push
push
jno
pop
xchg
xor
test
repnz
sub
push
mov
lahf
xchg
adc
jne
jae
pop
jo
mov
rclb
mov
push
aad
jp
push
dec
add
inc
sub
inc
negb
pop
dec
shl
ds
mov
cmp
add
lret
outsb
xchg
push
and
hlt
in
jl
sub
xor
pop
pop
cwtl
or
push
or
or
xlat
stos
sbb
lret
xchg
shll
xor
adc
or
into
es
dec
cwtl
pop
push
sbb
test
aam
stc
fnstcw
mov
ja
into
mov
das
pushf
dec
pusha
dec
sub
hlt
mov
pop
fdivrs
lds
sbb
ds
lcall
repz
and
hlt
mov
or
lock
jns
ljmp
inc
pusha
in
cmp
stos
sbb
and
lods
add
lcall
xchg
push
into
mov
out
or
movsb
dec
mov
mov
jge
cwtl
mov
ja
jmp
fwait
sub
mov
pop
sbb
xchg
fiaddl
mov
into
int
out
leave
sbb
inc
jbe
mov
loope
fldenv
inc
add
jne
mov
pushf
push
sub
ljmp
aam
test
sbb
bound
pop
xor
or
xchg
or
jo
pop
adc
add
pcmpeqd
xchg
push
xchg
roll
sub
clc
jno
pushf
or
sub
sahf
popf
call
mov
inc
ja
inc
mov
pop
jo
stos
inc
popa
mov
jo
mov
pop
xchg
and
or
inc
ret
cmp
ss
or
leave
test
dec
or
jg
inc
push
cmpsb
cmp
cmp
mov
scas
xchg
outsl
push
push
cs
mov
push
bound
mov
ret
dec
push
mov
cmp
xor
fisttpl
outsb
dec
cmpl
xchg
push
in
mov
and
or
xor
pop
pusha
in
aaa
pop
fwait
ret
jle
cwtl
popa
and
inc
insl
push
adc
jg
lahf
cltd
jns
aam
jbe
lock
test
cltd
test
lcall
fcomi
and
fcoml
xchg
push
stos
mov
aas
scas
into
dec
fmull
pop
iret
loop
loopne
mov
jmp
sub
leave
gs
inc
imul
je
dec
cmpsl
xchg
cmp
stc
cmp
aad
dec
int3
cmp
mov
pop
xor
addb
or
pop
inc
fcmovnu
jg
lea
dec
clc
jns
add
out
mov
jae
hlt
cli
jmp
xor
movsl
push
adc
mov
mov
pop
xchg
cmp
in
int
into
push
in
fadds
xchg
scas
clc
nop
leave
pop
movsl
aas
mov
leave
dec
hlt
loopne
jb
cltd
xor
test
pop
scas
stos
outsb
and
add
roll
pop
adc
jne
jno
lcall
and
int3
scas
sbb
mov
inc
sbb
mov
dec
dec
push
bound
xchg
jb
pop
adc
jae
call
mov
lret
jl
pop
aaa
enter
daa
push
stos
xlat
bound
pop
inc
gs
mov
imul
fdivp
dec
int3
xchg
mov
push
das
dec
testl
ds
mov
dec
jp
rcrl
mov
loope
or
push
push
adc
popf
cwtl
mov
pushf
pop
das
dec
push
mov
fidivl
jecxz
mov
loop
int
ja
pop
add
popf
mov
sbb
inc
inc
adc
roll
dec
stc
sti
adc
adc
lea
jecxz
and
negl
pop
lds
in
fstp
call
sbb
mov
movsl
and
adc
insb
imull
aad
mov
or
push
pop
mov
jns
add
mov
mov
out
pop
push
pop
sbb
cmp
fstl
push
cmpsb
iret
inc
xor
and
mov
dec
mov
ss
xor
repz
outsl
inc
std
scas
jle
and
dec
lock
lock
fsts
loopne
and
lock
notb
gs
stos
pushf
mov
out
mov
jns
jle
sbb
nop
push
out
sub
js
push
jb
or
insb
push
shrb
pop
mov
sti
dec
pop
push
mov
jmp
push
mov
push
mov
daa
cmp
xor
or
xchg
push
das
push
aaa
push
ficomps
xchg
ds
xor
push
scas
push
rclw
sub
adc
clc
lds
shlb
cmc
shrl
jns
enter
jb
mov
xor
lock
test
and
adcl
pop
xor
xor
dec
push
dec
adc
lods
sbb
or
test
mov
popa
bound
mov
adc
jne
xor
mov
jb
add
stc
push
jmp
pusha
fmulp
xor
push
aad
sbb
daa
out
cmp
mov
aad
pop
stos
fmuls
lahf
in
cmp
cli
xorl
mov
or
imul
fmull
inc
iret
xchg
lcall
addr16
xchg
call
cmpsl
xlat
adc
cmp
ftst
das
lahf
push
xchg
lods
je
lret
int3
adc
and
pop
jl
pop
cmp
lret
mov
xchg
inc
popf
shr
push
xchg
pop
xchg
pop
xchg
out
jnp
push
mov
push
add
lcall
insb
fstpt
out
outsl
inc
popa
mov
cmp
jl
sbb
or
xor
cmp
push
dec
fwait
in
xlat
pushf
and
testb
rcrl
fisttpl
les
mov
jns
xchg
mov
pop
popa
movsl
and
cmc
jmp
je
data16
mov
jne
pop
pop
test
jo
loopne
ja
sbb
jmp
jnp
add
nop
jbe
sarb
jl
push
pop
and
ljmp
mov
cmpsb
add
sub
xor
lcall
out
mov
adc
inc
mov
cltd
loop
mov
cmc
cmpb
dec
adc
pop
push
adc
scas
push
iret
mov
fstpt
out
mov
dec
movsl
fildl
sti
sub
jg
xor
pop
push
sti
adc
xlat
add
stos
xor
xchg
inc
xchg
xor
repnz
and
sbb
pop
pop
xchg
fs
jg
ret
inc
stc
inc
dec
pop
int
cwtl
fcoms
push
and
loop
pop
fs
cmp
divl
push
dec
insb
mov
xor
xor
gs
or
jae
gs
and
lret
or
outsb
adc
leave
jo
addr16
lcall
js
pushf
movsb
sahf
pop
cs
mov
mov
loop
pop
jnp
jno
and
arpl
cmp
fmull
xor
xorb
mov
ficoms
outsb
std
lea
aam
xor
mov
loop
pop
lods
push
pop
or
pop
clc
xor
dec
jb
bound
mov
fwait
mov
bound
push
cmpsl
jl
push
jnp
pop
into
pop
cmpsb
or
lcall
nop
inc
loopne
cmp
shrl
jmp
or
add
xor
stc
and
jno
cmp
push
daa
test
scas
call
aas
jp
or
xchg
mov
loopne
or
fdiv
out
add
cmpb
out
mov
inc
cld
jnp
and
sbb
mov
into
test
and
adc
pop
sbb
mov
mov
and
fs
pop
jle
aaa
push
loop
pushl
jnp
and
sbb
push
jmp
lock
notl
nop
fdiv
sub
notb
sbb
addr16
jne
lcall
js
push
cmp
std
lock
cmp
or
in
sub
mov
jge
mov
cmp
mov
mov
sar
sub
popf
adc
imul
das
sti
sub
repnz
test
gs
pop
lds
dec
clc
dec
in
push
dec
mov
pop
leave
mov
mov
sarb
dec
cmpsb
and
mov
mov
or
inc
andb
add
daa
push
jg
repnz
pusha
popa
mov
in
xor
xor
ficoms
add
push
mov
adc
jle
adc
ss
enter
mov
mov
mov
loope
int3
xor
std
adc
data16
and
in
pop
int
ja
roll
out
cld
sub
or
cltd
xlat
cmpsl
pop
fbstp
push
mov
mov
inc
aad
movsl
mov
rcrl
inc
sbb
inc
lcall
mov
std
stos
mov
or
cmc
ljmp
cmp
push
xor
add
cmp
push
pop
mov
xchg
stos
cmpsl
inc
push
aam
xor
and
add
dec
push
das
inc
lahf
movzbl
leave
pushl
daa
jo
subb
jb
ja
call
cmpsb
cwtl
sti
sbb
insl
insl
insb
pop
push
idivb
fbld
mov
fs
popa
and
insl
mov
stos
inc
xor
jo
push
push
insb
das
push
mov
inc
jnp
daa
inc
lret
jae
push
fwait
adc
pop
add
mov
outsl
gs
int
jle
mov
dec
scas
rcrb
jle
jnp
sub
cmc
and
sub
aas
cmpsb
adc
fs
push
int
nop
dec
pop
fdivs
lea
pop
mov
inc
pusha
fldenv
insl
push
mov
mov
jns
arpl
popf
inc
mov
scas
hlt
lds
adc
jg
gs
popf
dec
pusha
cmpsb
out
xor
xchg
je
adc
mov
xchg
in
inc
das
iret
mov
lods
jp
jno
sub
loope
add
add
int3
sub
jmp
std
mov
jecxz
out
mov
mov
and
pusha
and
fwait
sbb
mov
in
insb
jle
std
pop
fnstcw
push
lret
push
adc
dec
shl
fisubl
mov
sbbb
inc
lods
xchg
daa
ja
repz
or
lret
xor
inc
movsb
pop
xor
pushf
cmp
lret
mov
add
iret
xchg
inc
add
pushf
jmp
lret
push
jg
icebp
stos
test
mov
cmp
pop
cmc
notb
add
shr
ret
fwait
shrb
ljmp
ret
adc
and
push
sbb
mov
iret
add
hlt
dec
adc
pusha
pop
imulb
mov
aas
scas
mov
xchg
sti
push
clc
pop
test
cs
aaa
sub
push
scas
and
dec
sub
push
ucomiss
cli
jae
add
push
cs
lds
cltd
sahf
in
pushf
adc
ljmp
mov
scas
mov
loop
add
sti
mov
inc
inc
out
mov
into
sahf
jno
aam
xor
sbb
sbb
push
or
inc
fsts
dec
test
cmpsb
imul
mov
clc
popf
xor
mov
fidivrs
lea
stc
pop
xchg
xchg
jge
enter
insl
xchg
push
out
add
mov
pusha
push
xor
lea
mov
mov
dec
je
mov
jecxz
or
adc
outsb
adc
sub
imul
pop
sub
rcrb
les
mov
dec
lock
scas
imul
rclb
and
push
divb
cmpsb
dec
shl
push
call
test
sbbl
xchg
sahf
mov
in
jno
dec
std
dec
sub
mov
mov
mov
cmp
outsb
sbb
test
jle
pop
sub
dec
loopne
cwtl
pop
jo
mov
fsubrl
jb
and
push
fsub
ficoms
call
aad
mov
pushf
mov
mov
mov
rep
ja
aas
mov
in
data16
dec
xor
mov
xchg
test
jb
or
sbb
aad
jge
or
mov
clc
xchg
sbb
xchg
mov
pop
lods
jmp
sub
hlt
mov
scas
dec
insb
dec
xchg
jnp
ja
test
aas
es
in
sbb
inc
into
sbb
sub
dec
notl
xchg
jmp
pop
loope
push
pop
sbb
cmpsl
inc
push
data16
lcall
lahf
push
jl
sub
lcall
ret
mov
inc
lret
push
and
dec
push
fs
loopne
loop
fadd
mov
jmp
jge
push
inc
shl
shrl
movaps
and
scas
inc
push
mov
ret
xchg
outsl
pushf
xchg
sbb
aas
sahf
shrb
jnp
and
dec
addb
fst
push
lret
dec
lcall
jb
cmp
dec
jbe
jns
push
test
mov
jmp
push
sbb
sarb
je
and
jmp
and
clc
loopne
sub
insl
loopne
push
loope
xchg
addr16
imul
mov
lea
test
scas
stc
subl
push
adc
jge
add
add
pop
xor
outsb
outsb
jp
mov
mov
int3
lahf
push
arpl
test
out
stc
test
cltd
mov
mov
sbb
in
jns,pt
cli
shrl
pusha
pop
xor
and
sub
push
mov
imulb
add
test
fsubrl
inc
jl
and
adc
ljmp
repnz
mov
fisttpll
adc
jmp
mov
neg
xorb
fisttps
jmp
gs
inc
in
cmc
js
loop
jle
aaa
jns
mov
sbb
js
add
jmp
lret
mov
cwtl
movsl
jb
jmp
shl
sub
xchg
jne
pushf
xchg
sbb
sub
mov
aad
sti
in
das
scas
mov
sub
xchg
push
lds
xlat
push
int3
ja
inc
or
inc
xor
add
push
cli
jnp
stos
es
or
adc
and
jge
pop
xchg
or
mov
int
je
jnp,pn
scas
pop
call
adc
cmp
push
push
es
lahf
je
mov
in
mov
or
int3
pop
fisttpl
mov
push
sbb
cmp
push
mov
pop
inc
sub
adc
adc
out
adc
ds
sbb
push
inc
pop
in
sti
or
lds
cmp
adc
dec
fwait
inc
xor
scas
mov
shl
cmp
jb
les
stos
lret
nop
cmp
clc
loope
ss
sub
add
xor
adc
insl
pop
les
jmp
data16
dec
jae
mov
xor
loop
cmc
fimull
and
mov
shlb
jmp
imul
jg
pushf
into
xchg
and
aam
fildll
adcl
sti
test
xor
jmp
in
mov
and
fwait
inc
mov
rcll
fistl
shll
mov
cwtl
mov
cs
jl
add
das
dec
add
jp
sbb
call
mov
inc
xchg
push
sbb
aad
xor
mov
je
rcll
jle
inc
add
mov
imul
out
pop
pop
dec
fildll
sbb
lock
scas
or
adc
out
sub
call
filds
cwtl
jae
rclb
fdivl
mov
cmp
out
xchg
sbbl
pop
arpl
mov
jae
jns
mov
add
hlt
mov
pop
xchg
mov
imul
outsl
or
add
ret
inc
outsb
mov
divb
or
mov
outsl
mov
stos
das
adc
sbb
mov
loop
or
dec
test
mov
push
jns
outsl
cmpsl
sub
jne
test
shll
pop
mov
xchg
xchg
pop
mov
das
mov
sub
mov
push
xor
pop
clc
mov
adc
mov
lcall
aas
xchg
cmp
leave
es
outsb
mov
xchg
int
sbb
jnp
sbb
outsb
popa
stos
pop
sub
xchg
loope
mov
cmp
rcrb
in
cmp
or
stos
ficoml
jp
sub
xor
ret
inc
adc
pop
call
repnz
pop
lods
mov
dec
out
lahf
jns
int
loope
xchg
leave
fwait
cmpsb
inc
mov
nop
mov
test
push
popa
mov
adc
jecxz
mov
adc
xchg
cmpsb
data16
push
pop
xchg
into
sarl
rcr
mov
jmp
in
and
movsb
xchg
fwait
cmpsl
push
movsl
lret
mov
inc
xchg
mov
add
aaa
clc
cmp
sbb
cmp
xchg
sub
push
div
mov
cmpl
popl
orl
dec
inc
pop
or
xchg
dec
jp
std
jne
jmp
xchg
xor
shll
push
inc
xchg
pusha
xor
repnz
xchg
int
sbb
aas
test
jno
inc
mov
lret
or
mov
adc
xchg
orb
arpl
push
rcrl
pop
popf
lods
and
outsb
sub
xor
outsb
movsb
xchg
mov
js
xchg
pop
push
mov
in
mov
jecxz
mov
bound
fldcw
and
and
andl
test
or
sub
fdivl
mov
mulb
mov
rclb
xchg
push
inc
pop
jbe
stos
loop
nop
loope
popf
or
adc
xchg
scas
stc
or
push
dec
mov
fiadds
ret
mov
fmul
jbe
in
push
push
jmp
xchg
mov
adc
decl
xlat
sbb
cld
and
xchg
xor
mov
and
sub
mov
pushl
cli
or
pusha
and
ret
outsl
in
xchg
scas
jae
lcall
fucompp
xchg
add
lret
mov
mov
mov
adc
incl
pop
push
mov
dec
and
test
cmp
sub
fistpl
push
dec
push
sbb
dec
dec
lock
nop
lea
aaa
clc
aad
mov
xchg
sbb
cmpsb
out
and
mov
out
pop
or
mov
mov
lret
jle
lock
aam
add
add
pop
aaa
fiaddl
cmc
fbld
fbld
fisubl
jbe
mov
push
pop
push
jae
andl
jl
inc
jbe
sub
mov
mov
mov
sbb
shl
test
mov
jne
loopne
adc
jnp
imul
cmc
scas
inc
mov
sub
js
fstpl
imul
xlat
xor
adc
out
dec
jge
adc
shr
in
adc
or
cwtl
sti
xor
inc
inc
pushf
test
adc
jnp
mull
pop
stc
mov
rcrl
daa
push
aam
int
cmovnp
lahf
cld
pop
or
push
jp
clc
pushf
mov
in
setae
aas
fwait
push
and
fiaddl
sbb
fisttpl
cmp
xchg
lret
fmuls
inc
pop
call
adc
inc
sbbb
sahf
mov
sbb
sbb
or
pop
mov
inc
cmp
sub
movsl
cmp
shll
shlb
cltd
cltd
sar
ds
repnz
pusha
adc
scas
imul
lock
test
add
mov
inc
bound
ror
xor
jbe
fs
js
iret
cltd
jecxz
push
inc
je
jecxz
les
repz
pop
xor
dec
xlat
test
cli
mov
jmpw
lock
dec
dec
icebp
cmp
xor
jle
add
sbb
adc
aaa
sub
push
sbb
or
orl
jmp
nop
aad
cmp
pop
jbe
dec
es
mov
xor
mov
xor
lock
mov
mov
push
cmp
fwait
addl
bound
subl
push
cmc
jb
cmp
es
jp
nop
mov
mov
iret
add
mov
js
sbb
push
je
pop
lods
test
shll
push
int
inc
pop
popf
xchg
mov
sub
es
adc
cmp
mov
arpl
sbb
xor
jae
mov
cmp
fldenv
xor
pop
loope
testb
sub
iret
and
insb
jb
push
or
push
jge
jnp
or
xor
dec
or
cwtl
js
fsubl
scas
sbb
xlat
inc
cmp
nop
popa
jb
stos
shlb
pop
cwtl
icebp
mov
sarb
dec
inc
mov
loopne
lock
movl
in
data16
pop
ja
std
mov
sbb
lahf
sbb
movb
xchg
inc
jg
dec
in
sub
shr
outsb
repnz
lds
mov
xor
sub
negb
fstl
andb
jno
fists
and
cmpsl
and
cmpb
and
lahf
lahf
repz
mov
fs
jmp
fidivs
incl
mov
mov
cmp
sub
bound
clc
add
int
mov
xor
adc
xchg
clc
fs
jae
inc
sub
ret
arpl
sub
ds
cli
mov
rcl
dec
mov
out
sub
xorb
inc
or
das
mov
and
sub
xor
in
mov
fs
adcl
fldcw
or
sti
in
subl
dec
inc
shll
into
sub
ja
cmp
frstor
cld
inc
cmpsb
sbb
sbb
push
push
outsl
imull
mov
sbb
sub
dec
sub
mov
dec
into
sbb
push
lahf
inc
pop
or
push
pop
test
mov
push
xchg
push
add
addr16
and
xchg
rcl
dec
lods
movsl
daa
xchg
xor
hlt
inc
sbbl
nop
popf
popa
test
sbb
stc
je
aam
push
or
lods
nop
gs
pop
cmp
je
rolb
pop
ljmp
mov
ret
addb
test
subb
in
xor
mov
jg
mov
movsb
sub
fwait
arpl
cmp
mov
jmp
cmp
clc
pop
mov
lds
sbb
pop
pop
leave
jnp
les
adc
pop
mov
dec
jae
fs
in
push
xchg
jns
mov
cmc
dec
test
mov
sub
mov
cld
push
frstor
xor
sub
ljmp
lret
inc
dec
cs
mov
rcrb
mov
sbb
lds
mov
mov
add
stos
ja
scas
or
testb
dec
leave
out
jae
arpl
jl
in
sbbb
mov
cmovb
dec
or
out
je
sbb
repz
ljmp
cwtl
xchg
xlat
inc
inc
mov
jge
lcall
test
pop
mov
lea
push
dec
inc
xchg
into
xor
lea
and
xchg
dec
clc
mov
sbb
mov
loopne
mov
jae
inc
cmp
ss
inc
repz
enter
aam
stc
icebp
sub
lcall
push
sti
scas
sub
mov
cmp
orb
adc
push
cltd
dec
idivl
push
rcll
addr16
ds
mov
push
fidivrs
data16
gs
xor
xor
push
fstl
cli
jne
sbb
jbe
cmp
test
fstpt
lret
and
testl
xor
dec
mov
popf
aad
push
gs
cmp
cmc
inc
add
adc
insb
cld
sbb
inc
lret
cmp
into
in
ds
cmp
adc
rcrb
mov
mov
xchg
lds
in
jge
push
xor
decb
mov
push
pop
pop
dec
adc
jp
ret
mov
inc
jg
push
sbb
fs
xor
pop
lods
sub
push
jmp
out
imul
push
ja
in
adc
sbbb
ljmp
not
daa
pushf
and
fs
dec
sbb
mov
jbe
popl
out
jo
add
mov
mov
pop
cmp
addr16
enter
pop
nop
push
mov
mov
xor
sub
iret
sub
clc
stos
inc
ss
push
filds
imul
movsb
pop
mov
jg
inc
mov
clc
fwait
in
fisubl
fcomi
pop
cmp
movsb
icebp
inc
sbb
fisubrs
or
dec
out
sbb
adc
inc
push
je
int
scas
dec
and
mov
xor
mov
fwait
pop
sbb
aad
lock
movsb
add
dec
mov
stos
inc
in
repz
push
subb
cwtl
sbb
xor
imul
int3
data16
fstpl
ja
mov
stc
lcall
push
adcl
cmp
ret
pushf
call
pop
movsb
fcompl
fwait
sahf
imul
loope
jbe
sbb
aas
popa
loop
jmp
xor
push
xchg
push
pop
pop
sarb
mov
cwtl
mov
std
sbb
es
sbb
dec
mov
lret
sub
mov
cmpsb
fsts
imul
and
mov
sub
sbb
sub
les
sahf
push
fidivs
popa
pop
pop
pop
inc
cmp
popf
cmc
aam
xchg
cmp
cmc
add
stc
sbb
jge
dec
jb
cmp
rclb
jne
and
and
in
xchg
test
sub
mov
lods
pop
mov
jl
pop
in
xchg
xor
xchg
iret
mov
js
scas
sbb
cli
mov
push
inc
mov
jae
lcall
xchg
int
sub
pop
sub
pop
fistpll
jno
das
ficoml
stos
shll
dec
dec
push
int
fstpt
dec
xor
xlat
xchg
adc
cmpl
xchg
sub
pop
sub
popa
sbb
je
cmc
icebp
iret
lea
je
test
or
inc
sbb
pop
adc
loop
cmpsb
inc
sub
push
and
cmp
mov
xor
xchg
xor
sahf
add
or
int
inc
test
sbb
shrl
subl
pop
xchg
orb
jge
xchg
fistl
leave
cli
cmpb
out
inc
out
xchg
sbb
adc
insb
jnp
push
xor
xchg
push
mov
sub
jnp
ds
insl
add
pop
jp
lret
iret
inc
shll
dec
ret
mov
mov
sbb
pop
shll
dec
sti
jo
push
xchg
push
cld
enter
fbstp
push
mov
in
leave
hlt
in
sti
and
pop
aas
jmp
xchg
push
sub
movsb
dec
in
pop
cmp
gs
jle
sbb
incb
mov
mov
rolb
push
fchs
and
push
xor
mov
sbb
incb
stos
ret
aad
push
pop
add
jecxz
mov
jl
gs
push
adc
push
data16
mov
mov
dec
aad
xchg
jnp
call
jne
sub
sub
mov
mov
xchg
inc
lock
jmp
add
loope
in
adc
jmp
adc
add
repz
and
popa
fwait
jecxz
pop
push
pop
pop
xchg
fistpl
adc
lock
sarl
mov
mov
daa
jle
cld
out
mov
lcall
or
sbb
cmpsl
test
add
popa
jp
and
adc
or
xor
pop
inc
out
jmp
add
fnstcw
out
mov
push
mov
xchg
sahf
lcall
xor
testb
cmpsl
cmp
in
and
mov
out
lcall
add
lret
fdivr
orb
dec
push
test
pop
push
sbbl
or
rcr
leave
mov
add
mov
cmc
notb
or
add
xchg
add
ds
fcmovu
jb
pop
ret
pop
cli
insb
movsl
aam
add
sub
sub
or
inc
mov
cwtl
adc
lea
arpl
scas
aam
loopne
mov
fildl
jnp
das
fldt
daa
xchg
mov
enter
cltd
shlb
lea
mov
dec
inc
sbb
in
adc
flds
push
data16
movsb
xor
test
inc
stos
jmp
and
xchg
int
sub
ljmp
cmp
xchg
mov
imul
arpl
sbb
lcall
lods
js
mov
jp
xchg
xor
jbe
pop
out
mov
xor
cmpsl
leave
fmull
clc
push
scas
cmpsb
ss
iret
out
bound
jae
adc
sahf
sbb
loop
push
inc
fisttpll
mov
adc
lret
js
pop
scas
fwait
cmc
cmp
push
sbb
pop
imul
ja
mov
sub
stc
add
mov
add
jb
popf
mov
cmp
into
or
fmul
mov
scas
add
adc
sbb
xchg
adcl
ficoml
push
mov
xlat
fists
dec
mov
push
mov
mov
sbb
adc
daa
shlb
xor
sbb
push
popf
adc
enter
arpl
add
sub
mov
fmulp
jle
pusha
and
addb
aas
adcl
fsubrp
int3
call
jne
pop
sti
repnz
mov
mov
mov
pushf
mov
pop
dec
sbb
aas
lret
inc
xchg
inc
div
xchg
test
push
jbe
inc
lods
loop
imul
test
jl
pop
lds
js
inc
sti
out
outsl
xchg
lods
jns
mov
test
jl
ret
mov
loop
imul
dec
shrb
leave
cmp
lret
in
pop
icebp
loop
cmpsl
inc
jle
mov
neg
das
dec
xchg
sbb
jbe
cmpsb
jo
aam
shll
push
dec
jne
or
arpl
pop
pop
pop
test
mov
aam
jae
rcl
sub
jne
mov
push
clc
mov
arpl
orl
xlat
fcoml
insl
or
sub
lea
pop
fsubs
scas
push
rolb
jbe
movsl
mov
pop
mov
pop
pop
mov
testb
mov
lcall
or
mov
stos
jae
add
fimull
faddl
xchg
sbb
mov
jle
jecxz
jo
adc
aas
pop
cmp
mov
inc
aas
or
push
test
ret
ljmp
push
mov
mov
jae
test
lock
inc
mov
ret
fucom
sub
mov
inc
stos
adc
mov
and
jge
xchg
push
inc
sbb
xor
pop
addr16
push
mov
push
push
movb
shrb
push
popf
mov
scas
dec
adc
inc
xchg
mov
pop
or
xorb
lahf
repz
insl
pop
movsl
sub
sbb
fidivl
in
mov
repz
mov
push
mulb
pop
fists
inc
sbb
pop
and
cld
repz
enter
add
aaa
stos
jbe
test
faddl
mov
xor
inc
lahf
push
add
lcall
repz
hlt
mov
mov
scas
pop
inc
and
push
dec
hlt
sub
push
and
negl
loope
push
fstpt
jg
das
or
rcll
mov
in
daa
in
xor
jecxz
push
jnp
lcall
lret
rcll
pop
sbb
sbb
sub
and
add
mov
faddl
les
scas
stos
push
int
enter
adc
inc
jns
inc
mov
cmp
lea
sub
into
sbb
mov
jae
es
mov
sub
xorb
lds
jno
push
mov
mov
sbb
pop
in
ret
cmp
aas
cmp
jle
pop
dec
add
mov
iret
mov
pop
outsb
inc
lds
and
push
popf
push
mov
lods
xor
dec
pop
mov
or
int3
inc
int
aas
inc
xor
mov
lahf
insl
arpl
std
fs
jp
inc
mov
adc
push
fldl
sbb
cmp
mov
out
inc
iret
out
rolb
push
imul
sti
add
inc
mov
inc
int3
das
mov
dec
jle
ror
inc
icebp
adc
or
daa
cmp
jmp
push
insl
dec
cmp
lods
xchg
adc
out
cmp
shr
adc
jle
sub
out
popa
mov
and
cmpl
pop
repnz
and
sbb
dec
fsubp
cmp
or
mov
leave
fimuls
xchg
adc
subb
xchg
xchg
repnz
jne
das
in
sbb
icebp
popf
js
cmp
pop
inc
nop
lcall
mov
lret
inc
dec
xchg
and
or
sbb
adc
xchg
xchg
fstps
test
and
push
inc
add
xchg
clc
mov
orb
fucomi
xor
pop
sub
push
mov
stos
mov
aas
pop
mov
dec
fbld
pop
mov
jnp
movlps
mov
jnp
xchg
ljmp
jbe
call
frstor
out
jl
mov
lret
mov
movsb
imul
cwtl
in
int
jne
in
cmp
hlt
outsl
xchg
cmp
cmp
cmp
xlat
dec
adc
push
incb
fiadds
add
fdivr
andl
je
jmp
fwait
test
orb
xchg
xorb
sub
loop
pop
mov
mov
or
lods
sub
movsl
mov
push
lock
lcall
mov
shl
sbb
push
push
jecxz
xor
jge
push
test
andb
out
out
jne
cmp
jo
fcompl
stc
arpl
rcr
mov
inc
and
cltd
lret
mov
jnp
dec
loop
inc
test
popf
mov
mov
push
cmpsl
cmp
clc
mov
mov
imul
xor
push
jns
lods
mov
cmpsl
ljmp
mov
ss
shlb
mov
cwtl
and
pop
xlat
aam
adc
stos
ficoms
xorl
xor
imul
mov
xor
push
cmp
nop
mul
pop
sbb
lea
fisubrs
call
xchg
push
pop
pop
push
arpl
addr16
ljmp
test
stos
mov
insb
fnstsw
bound
mov
fwait
gs
outsb
xchg
sub
lods
call
pop
pop
mov
test
inc
xor
daa
sbb
rcrb
in
loope
dec
push
dec
shll
mov
sub
stos
fisubrl
sub
out
push
dec
jb
into
jmp
jl
int3
cmp
loope
sar
cli
sbb
je
dec
inc
aam
inc
aam
mov
inc
dec
addr16
fwait
aad
mov
push
dec
pop
mov
mov
jg
xor
dec
movsb
push
aam
jnp
jl
xchg
je
jp
push
dec
inc
and
addr16
pop
jmp
jg
stc
das
inc
insl
adc
int
inc
cmp
rol
enter
xorl
stc
mov
mov
lret
pop
mov
mov
xchg
sahf
sahf
es
roll
push
inc
les
inc
jne
dec
xchg
ret
sub
cld
inc
push
xchg
loopne
mov
jo
ss
xor
mov
mov
int
mov
xchg
div
mov
mov
mov
in
nop
push
icebp
push
jno
mov
push
sbb
test
sub
cmp
cmp
add
test
and
push
sbb
jae
cmp
add
inc
cmp
dec
lcall
mov
lret
stos
cmp
push
xchg
jne
inc
xor
hlt
inc
xchg
lret
icebp
mov
test
loop
mov
loope
loope
aam
jmp
fnsave
scas
ljmp
mov
pop
jb
lahf
mov
dec
aas
xchg
xor
mov
mov
mov
jne
push
js
jmp
inc
fisttpll
or
out
dec
cli
adc
mov
fisttpl
sbb
and
popa
inc
pop
scas
pop
and
mov
idiv
inc
xor
pop
xor
inc
pop
jno
add
push
xor
insb
ret
adc
out
add
das
pushf
fs
aam
imul
fnstenv
adc
pop
inc
dec
jp
xor
cmp
mov
and
xchg
lahf
lret
lock
loope
out
jg
stos
sbb
roll
addb
push
ljmp
pop
dec
or
test
arpl
ljmp
xchg
insb
out
xchg
nop
sub
add
push
dec
pop
xor
inc
add
js
sbb
cmp
mov
or
lcall
scas
mov
jae
sub
jecxz
pushl
mov
stos
aam
mov
ljmp
outsl
dec
pop
mov
outsl
mov
dec
push
js
add
mov
jge
les
mov
fistps
lahf
jne
sahf
imul
imul
push
dec
or
sbb
inc
adc
pop
sub
cltd
cmp
dec
mov
dec
std
test
push
push
adc
js
xor
xchg
out
dec
cli
jg
or
std
dec
add
cmpsl
jmp
lahf
or
mov
mov
out
and
scas
sbb
addb
pop
mov
out
sub
aaa
push
adc
cmpsb
and
repnz
push
adc
cmc
dec
dec
jns
ja
dec
push
adc
xor
fld
inc
mov
pop
mov
jnp
movsb
mov
sahf
push
push
bound
into
add
insl
add
cltd
or
ret
sbb
js
fdivrp
repnz
test
adc
shlb
push
in
out
cmpsl
adc
adc
push
cmpsl
aas
cmovne
and
jmp
xchg
icebp
cmp
inc
ja
xor
push
xchg
pop
mov
mov
pop
iret
pop
or
mov
pop
jno
push
pop
pusha
mov
in
or
ret
xchg
cmpsl
lods
int
dec
negb
xchg
fdivrs
outsl
jp
enter
xchg
jns
jl
push
inc
cmp
out
imul
ffreep
popa
inc
mov
fwait
jo
icebp
push
inc
in
push
mov
xor
sbb
xor
push
mov
xor
mov
outsl
insl
mov
and
jb
jne
cmp
mov
rclb
leave
adc
xchg
ret
jno
mov
fimull
pushf
xor
scas
hlt
cmp
adcb
insb
cld
ljmp
sbbl
fdivl
push
rclb
call
repz
xchg
mov
sti
enter
push
insb
ret
or
or
jge
addb
frstor
push
pop
sbb
mul
mov
shrb
mov
mov
loopne
sub
cmp
cmp
sbb
cmp
sbb
std
or
scas
sbb
adc
or
lods
adc
mov
push
inc
mov
push
mov
popa
push
mov
nop
imul
sbb
repz
jae
sarl
in
push
imul
je
js
movsb
in
je
cmc
mov
stos
xlat
and
mov
inc
pop
cmpsl
xchg
pop
dec
jp
cmp
lods
imul
push
xor
pop
imulb
repnz
push
pop
test
cmc
add
in
clc
pop
les
jns
push
aaa
sarl
std
xlat
mov
adc
mov
fistpl
dec
and
inc
in
cmpb
out
push
push
nop
loopne
mov
insl
add
and
stc
shrl
xor
dec
aas
push
in
xlat
je
enter
fcomps
popa
or
cmpsl
test
jnp
lcall
jg
xchg
push
mov
push
pusha
inc
mov
mov
sbb
daa
test
inc
or
subl
inc
and
fmull
mov
cmpsb
jne
adc
xchg
fisttps
jg
fstpt
in
mov
jne
adc
jmp
jno
std
xorb
cli
or
xor
push
jle
push
scas
cmp
inc
add
jne
add
xchg
mov
pusha
dec
lock
push
and
nop
enter
adc
mov
xchg
push
mov
mov
and
in
fwait
hlt
pop
pop
dec
adc
push
lods
cmpsb
int
or
pop
data16
adc
adc
pushf
push
push
pop
jge
mov
push
adc
enter
sahf
addr16
out
popf
fmull
loope
das
push
les
movsl
dec
out
add
inc
jp
add
out
rorl
dec
xor
stc
bound
pop
or
nop
les
fisttps
dec
lods
lret
stos
test
repz
mov
cmp
scas
das
push
push
je
mov
cmp
lods
outsb
int3
jnp
jge
inc
scas
mul
cmp
flds
and
push
clc
pop
inc
int3
lods
jnp
loopne
add
iret
iret
mov
outsl
repz
lock
imul
sub
je
jmp
pop
dec
loope
in
bound
lea
or
punpckhdq
scas
dec
mov
test
imull
das
movsb
imul
sahf
or
popa
outsl
mov
fdivl
outsl
mov
pop
out
test
jmp
popf
dec
int
cmp
enter
xor
popa
ss
xor
mov
fsubrl
subb
jns
out
testl
aas
push
sbb
or
xor
outsl
or
mov
ljmp
dec
fcom
sub
fcmovnb
icebp
xorl
mov
nop
js
xor
std
stos
pop
mov
in
adc
mov
xchg
mov
test
sub
rcrb
xchg
jmp
test
xlat
fcomps
sbb
jo
das
fisubs
inc
mov
cmp
mov
adc
movsb
aas
test
lcall
xchg
movhps
ret
pop
sub
pop
and
hlt
and
adc
addb
pop
das
test
out
cwtl
adc
cmp
xchg
cltd
outsb
push
dec
sarl
fistps
in
xchg
rolb
imul
movsb
lods
lods
adc
mov
ljmp
push
jmp
xlat
dec
jg
es
mov
dec
fdivr
mov
mov
cmp
test
push
jge
js
mov
imul
mov
in
pop
jmp
inc
xor
enter
popa
mov
rorb
insl
adc
adc
pop
jo
pop
in
movsb
xchg
popf
ret
test
and
xor
push
les
mov
inc
push
mov
pop
and
sbb
or
pop
std
dec
add
fdivrl
mov
jnp
jb
push
dec
lahf
dec
lods
into
sbb
insl
push
mov
addl
jnp
es
jl
fsub
cwtl
mov
cmp
pop
lods
loopne
scas
nop
mov
and
adc
imul
or
test
lret
mov
inc
imul
scas
xchg
add
mov
and
ret
dec
insl
fstpt
jne
aaa
ljmp
xchg
inc
and
test
push
loopnew
scas
mov
je
enter
mov
sbb
lods
sbb
or
pop
mov
repz
sar
mov
mov
andl
ret
inc
xchg
jl
scas
sub
lcall
adc
ss
test
dec
hlt
inc
mov
jp
sub
sub
pop
loop
xchg
xchg
ja
int
imul
pop
push
and
push
pushf
cmp
cmpsl
clc
lret
dec
xchg
idiv
aas
shrb
popf
mov
cmpsb
dec
sarl
inc
fcmovnu
imulb
add
aas
in
xor
aad
lds
aam
and
mov
dec
sub
pop
data16
mov
cwtl
mov
push
pop
push
aas
push
push
popa
out
sub
mov
or
jo
insb
fwait
xor
and
adcb
addb
inc
outsb
cmp
mov
cmp
sarl
cmp
add
lcall
addl
aam
rcl
push
add
ljmp
jns
push
push
bound
popf
inc
dec
mov
insb
or
sbb
movsb
xchg
rolb
mov
adc
repz
and
out
xchg
dec
stos
sbb
js
ficoml
ret
fnstsw
adc
nop
push
cld
add
cmp
loopne
add
ja
sti
xchg
mov
jb
xchg
xchg
pop
pop
dec
push
inc
push
mov
push
jecxz
outsl
ret
fisttpll
cli
xchg
icebp
push
jmp
mov
push
mov
xlat
arpl
faddl
sub
jg
xor
outsl
fcom
les
ret
cmp
mov
pop
xchg
inc
xchg
clc
jl
and
mov
xor
push
nop
xor
sub
xchg
test
addl
jbe
ja
xchg
mov
push
shrl
adcb
and
jbe
rcll
test
in
lahf
adc
push
and
jae
jae
std
push
lahf
movsl
inc
int3
and
enter
hlt
mov
push
psubb
or
test
sub
iret
shrb
pop
inc
lods
mov
or
test
mov
fwait
mov
aas
aam
pop
dec
push
addr16
cmp
mov
jp
andb
xchg
inc
mov
int
xor
test
sub
and
subl
loopne
inc
loop
xor
mov
xchg
push
out
dec
or
xchg
pushf
dec
push
and
inc
mov
movsb
adc
popa
movsb
lcall
push
sbb
push
and
out
xor
inc
in
stc
dec
jmp
shl
adc
mov
scas
or
ret
fldenv
jl
bound
and
addr16
add
and
and
mov
in
cmp
test
push
or
mov
and
fidivs
shlb
push
lds
insb
sar
jecxz
xchg
push
das
js
in
ja
dec
sub
mov
les
push
xchg
push
jnp
jno
mov
mov
xchg
lds
sub
stos
or
xor
xor
mov
jp
fisttps
mov
cmpsl
mov
inc
jle
clc
scas
aas
pop
das
inc
cwtl
push
sahf
and
ficoms
fucomip
popf
cs
add
xlat
inc
shrl
mov
int3
xor
pop
test
in
aam
sar
sbb
test
fs
fadds
shrb
fdivl
jno
mov
and
rcrb
insl
mov
repnz
mov
daa
mov
pop
push
lods
ret
adc
je
sub
fldcw
mov
jl
outsb
dec
mov
push
data16
mov
mov
inc
sbb
aas
lods
sbb
xor
popa
mov
or
xchg
mov
rcr
rolb
fistpl
sbb
pop
les
repnz
lret
push
mov
adc
ljmp
lds
jb
test
inc
add
xchg
pushl
lahf
rcl
pop
dec
mov
ficomps
mov
xchg
pop
lcall
mov
test
jge
imul
xchg
inc
mov
adc
mov
dec
cmp
adc
mov
dec
add
push
mov
adc
adc
add
lods
xchg
xor
jbe
test
jl
xor
jne
xchg
rorl
jne
in
pushl
pop
or
fidivrl
and
ljmp
js
inc
repnz
add
dec
loopne
jnp
xchg
pop
lds
dec
adc
xor
iret
adc
dec
scas
inc
xchg
pop
out
arpl
sub
in
mov
and
in
adc
fldenv
jg
xor
rol
int3
ficoml
fisubl
stc
jle
xor
std
and
mov
fsubl
inc
jl
stc
stos
clc
pop
and
mov
ljmp
clc
ljmp
xchg
loopne
icebp
sub
dec
cli
jne
pop
ret
mov
mov
sub
mov
cmp
shl
add
pmaxub
rcpps
mov
movsb
dec
fsubl
and
imull
pop
shrb
ret
jno
lock
push
nop
mulb
call
fucomp
movsl
pop
fwait
inc
add
xor
in
adc
mov
cmp
xchg
xor
cmp
mov
dec
mov
dec
dec
dec
lcall
sbb
in
stos
add
mov
pop
inc
push
xor
add
sbb
rcrl
shrl
and
andl
adc
insl
mov
outsb
xchg
in
pop
mov
mov
push
add
ds
dec
popa
cwtl
aam
inc
insl
pusha
cltd
dec
xchg
or
pop
sbb
adc
push
mov
mov
push
scas
sbb
popf
pop
je
xchg
mov
pop
and
adc
jns
scas
imul
lea
push
dec
adc
ret
in
les
sbb
cltd
mov
mov
bound
mov
and
sbb
pop
sarl
in
lret
sub
or
in
loopne
pop
aam
add
xor
mov
es
push
sbbl
xor
fs
mov
ret
pop
cmpsb
mov
push
jae
mov
shlb
xchg
call
ficoms
out
or
jecxz
scas
xchg
xor
test
std
inc
addr16
pop
cmp
push
mov
shlb
push
roll
xchg
into
sub
inc
add
mov
cmp
mov
dec
shlb
mov
clc
mov
mov
inc
dec
mov
cmp
insl
mov
mov
mov
std
int
pop
and
jne
cltd
sbb
aaa
fnsave
sub
das
mov
dec
int3
shrd
push
jecxz
shll
push
push
hlt
mov
mov
mov
popa
mov
xchg
repz
popa
in
inc
inc
fbstp
scas
ret
xchg
lods
addr16
pop
jg
iret
ss
jbe
int
ja
cmc
inc
xchg
pop
fimuls
test
sarb
filds
xchg
sbb
daa
into
jo
cmp
int3
loope
or
ljmp
push
lcall
cmpsb
stc
sbb
je
inc
scas
cmp
inc
gs
sbb
aad
sbb
xchg
push
lcall
inc
jmp
lret
pop
cmp
dec
test
sub
lock
pop
or
scas
and
or
insb
outsb
pop
ss
adc
xor
aam
inc
jg
out
mov
in
popf
imul
sub
xor
ds
push
pop
fldl
dec
cmp
dec
add
mov
ds
cmpsl
cli
push
push
pop
dec
sub
xchg
push
xchg
jg
shrb
gs
sbb
idiv
pop
mov
fmuls
cs
stos
sub
or
xchg
or
stos
adcl
adc
xor
xchg
mov
mov
std
dec
insl
jns
rcr
stos
ja
mov
movsb
in
adc
dec
pop
push
popf
lret
not
xchg
cmpb
gs
mov
icebp
in
and
sbb
cwtl
and
mov
xorb
cli
pushf
inc
fists
cmp
out
ljmp
push
movhps
mov
jp
push
jbe
jnp
int3
ja
movsl
and
cmp
outsl
in
push
sbb
xchg
clc
jmp
push
jno
xor
test
fcom
xor
js
jge
fistpl
mov
push
cwtl
pusha
mov
aaa
mov
or
scas
movsb
andb
mov
pop
add
dec
insl
flds
jecxz
js
es
mov
push
pop
fucomip
push
pushf
cmp
fiadds
scas
mov
loope
in
fneni(8087
xor
push
lret
and
cli
add
pop
ljmp
and
testl
dec
mov
fistpll
push
sbb
outsl
ret
test
fisubrl
add
enter
and
sub
sub
rcrb
jecxz
cs
dec
out
jns
lock
mov
sbb
int
lods
fiaddl
mov
in
mov
push
inc
mov
xchg
sub
xchg
jg
loopne
fists
out
push
rolb
clc
imul
into
fwait
jne
push
inc
out
sbb
pop
fnstcw
mov
out
jb
cmp
data16
popf
out
inc
sub
fnstsw
cmp
push
inc
mov
dec
add
repz
aaa
sbb
leave
jo
lea
jns
xchg
out
xor
dec
sub
mov
jb
sub
cmp
jno
xchg
xchg
aaa
lods
add
xchg
inc
daa
lock
stos
pop
xchg
mov
hlt
mov
lret
fsubrl
pop
js
push
test
jp
insb
test
inc
fwait
out
test
pop
pop
sbb
int3
pop
jnp
dec
xchg
ljmp
int3
jg
mov
mov
imul
rcll
ljmp
ret
sub
loop
arpl
lahf
mov
xlat
and
jl
and
xchg
push
fistl
test
xor
sbb
mul
mov
inc
rorl
fwait
orb
jnp
fildll
popa
xor
out
clc
jae
fsubs
std
test
jle
shlb
shll
and
nop
nop
sarl
pop
mov
fadd
dec
pop
fdivs
cmovge
imul
imul
xchg
loop
inc
ret
sub
or
aam
mov
xchg
ja
sti
sbb
fs
bound
cmp
push
dec
jmp
xlat
ret
mov
mov
dec
in
into
and
mov
push
xchg
add
mov
jnp
addb
js
out
mov
std
sti
adc
enter
es
inc
clc
sub
xor
mov
jns
xchg
outsb
jne
pop
mov
add
out
pusha
test
mov
dec
dec
xorl
jnp
dec
rol
rcrb
sub
loope
lods
lret
insb
mov
cmpsl
flds
xor
jl
test
movsb
pusha
outsl
xchg
lock
mov
or
lds
dec
sbb
cld
mov
lea
or
or
mov
cmc
adcl
pop
mov
fldcw
ror
add
cmp
dec
cld
hlt
jecxz,pn
and
mov
fdivs
fmulp
cli
mov
rorb
inc
pop
in
popf
xor
xor
push
pushf
adc
or
fidivrl
ret
xchg
sbb
jmp
xchg
xchg
les
cmp
push
push
or
cmpsb
mov
mov
popa
jns
sbb
fwait
pop
cmp
jl
ds
xchg
sub
gs
mov
in
or
jns
mov
xchg
mov
subl
je
xchg
xchg
jp
sub
cmp
jo
sbb
cmpl
mov
hlt
sbb
lahf
inc
inc
mov
stc
in
cmp
mov
out
sbb
mov
clc
mov
orb
gs
xchg
imul
pop
lods
out
and
lahf
fisttps
mov
in
das
jo
xchg
mov
inc
or
sarb
mov
inc
loopne
mov
lret
cmpb
jnp
jge
les
jbe
and
add
and
push
out
mov
ret
cmp
cmp
push
sbb
jne
and
lock
or
pushf
xchg
inc
xchg
nop
fxch
aad
push
pop
enter
mov
clc
lock
in
jmp
dec
je
iret
pop
in
xor
test
dec
inc
lods
push
sti
jno
daa
jge
mov
enter
in
sahf
pop
pop
and
ljmp
lock
mov
cmp
lea
mov
mov
test
and
loop
and
inc
cmp
xorb
mov
xor
gs
cmp
jmp
loope
adcl
push
mov
cmp
sub
push
jbe
jmp
pop
cmp
sbb
and
inc
or
mov
cmp
mov
pop
inc
rcl
aas
dec
rclb
ljmp
in
sahf
inc
lock
gs
mov
mov
pop
rolb
xchg
xchg
dec
mov
dec
aaa
push
ret
imul
lahf
test
je
ss
push
bound
bound
rcrl
scas
and
sbbl
inc
outsb
ja
aas
aas
dec
stc
push
in
add
loop
int3
xor
add
outsb
lock
repz
pop
mov
push
aam
insb
add
cmp
mov
jns
rclb
daa
add
mov
in
iret
je
sub
cmpsb
cmc
and
mov
insb
adc
mov
outsl
stos
add
in
test
and
sub
xor
pop
jmp
test
sbb
pop
test
pop
fidivrl
mov
iret
pop
lret
aas
push
or
push
and
cwtl
mov
dec
imul
pop
xchg
in
mov
mov
xchg
ret
push
jl
sub
or
jmp
jmp
pop
dec
shl
idivb
push
jecxz
cmp
lret
lret
subb
movsb
pop
popa
ss
dec
sbb
loop
arpl
push
inc
movsl
imul
sbb
push
xchg
or
in
or
mov
xor
xchg
faddl
lea
mov
jo
out
add
paddsb
jo
fbld
ss
insb
or
and
inc
push
aam
xchg
sahf
and
fstps
outsl
sti
and
xchg
sahf
dec
scas
les
fucom
out
in
cmpsb
lret
jle
lret
and
movsl
pop
push
jno
scas
cmp
inc
or
mov
test
inc
mov
rclb
insl
mov
repz
mov
push
jp
clc
and
push
in
sbbb
pop
in
xor
out
push
in
dec
ds
scas
sbb
das
pop
movsb
out
stos
cli
inc
xor
xor
fcomps
or
arpl
lods
stos
mov
inc
sub
test
push
xchg
inc
sbb
ret
and
mov
out
in
cli
pop
adc
sub
xchg
hlt
aas
adc
imul
mov
dec
aam
sti
mov
out
loopne
shll
test
aaa
adc
xor
xchg
add
popa
lret
inc
push
ret
js
jge
sub
ds
pop
push
stos
dec
adc
lcall
fs
repz
ljmp
mov
jge
jmp
ret
adcb
jne
inc
sbb
mov
lds
jle
sarb
sbb
or
out
push
lds
out
add
in
in
or
repz
je
jmp
and
test
in
test
adc
popa
loope
jmp
rorl
je
mov
test
push
mov
push
xchg
insl
sub
and
cmp
or
das
out
stos
mov
xchg
sub
inc
mov
std
fsubrs
lea
adc
pop
cli
cmp
jae
ljmp
dec
int
inc
int
inc
xchg
add
xor
clc
popa
add
je
adc
fs
xchg
inc
jbe
pop
cli
scas
or
iret
leave
fdivs
push
dec
scas
pop
or
and
vcmple_oqss
mov
jb
repnz
and
addb
aam
sub
sbb
fsubrs
push
mov
popa
pusha
fwait
and
and
xor
sbb
loope
repnz
lock
repnz
jne
cld
pop
in
outsl
lret
decl
js
jecxz
mov
and
mov
sti
inc
cmpsb
pop
popf
fadds
aad
add
fisttpll
cmp
mov
push
jb
scas
mov
sahf
cmp
push
les
push
xchg
in
ja
ss
leave
xchg
cwtl
jno
inc
in
jle
cmc
mov
test
or
fs
mulb
pop
push
add
pop
inc
jl
push
shll
mov
ret
idivb
pop
dec
push
imulb
inc
xor
jp
mov
dec
aaa
xchg
lretw
imul
push
test
out
negb
aad
cs
and
or
cmc
lret
or
cltd
idivb
mov
dec
adc
cmpb
cmp
dec
movsb
or
mov
int
arpl
xchg
mull
nop
fistps
int3
xlat
xchg
fwait
mov
out
cmp
xor
sahf
and
jo
pusha
xor
clc
mov
sbb
sub
inc
sbb
fdivrs
xor
cli
mov
andl
sbb
les
jae
lret
pop
lods
mov
inc
fucompp
cmp
stc
and
xchg
jge
xor
jno
xlat
mov
adc
xor
or
mov
xlat
ficoml
mov
pop
xchg
sbb
pop
inc
mov
leave
add
sbbb
jnp
mov
add
dec
xchg
nop
inc
adc
mov
and
add
movsl
movsb
pop
popf
mov
sbb
jo
mulb
cltd
push
mov
cmp
jno
xchg
jnp
jbe
xlat
int
inc
imul
jmp
xor
or
pushf
pop
xor
cmpsb
loop
mov
fmul
mov
adc
inc
lret
sub
or
xchg
stos
pop
lods
xchg
and
mov
mov
movsl
fwait
shl
mov
outsl
sbb
aas
mov
dec
aaa
idiv
les
test
sub
daa
cmpb
add
rclb
incb
add
add
test
inc
lods
data16
lret
cld
addl
mov
and
sub
push
sbb
push
pop
jmp
mov
mov
hlt
lods
jns
xor
adc
jmp
ja
movsl
pop
mov
xchg
sbb
shll
mov
int3
dec
and
test
push
mov
out
xchg
and
fnclex
je
sti
repnz
cmp
and
lock
test
mov
lret
outsl
addr16
or
test
xor
mov
dec
mov
mov
jnp
out
fistpl
mov
inc
xor
lock
test
mov
inc
sti
data16
xor
stc
or
xor
jbe
inc
dec
hlt
shr
ret
cli
or
and
fsubrs
add
adc
push
sbb
inc
insl
outsb
leave
sbbl
pop
mov
inc
add
bound
sub
pop
xchg
rep
mov
dec
lea
outsl
cmp
dec
cmp
rorl
pop
dec
xlat
insb
xchg
outsb
push
mov
int
fadds
inc
pop
addl
lret
sti
lret
stc
icebp
mov
cmp
xor
pop
lcall
push
jl
or
aaa
mov
ret
test
and
add
xchg
jg
xor
dec
popf
cmp
add
adc
push
in
fs
xchg
lret
pop
xchg
add
lods
sub
pop
fisubrs
in
dec
pop
pop
test
push
repz
shlb
jo
cmp
lret
and
xor
imul
inc
push
stos
scas
push
add
iret
add
mov
imul
lods
add
int3
loop
bound
lock
or
test
push
jno
pop
cwtl
cmp
cmp
jp,pn
std
sub
inc
lret
aam
xor
out
arpl
xor
es
outsb
cmp
xchg
fwait
rcr
add
cmp
jmp
mulb
push
cs
xor
sbb
mov
jmp
cmp
sub
test
outsb
sbb
mov
xor
out
add
roll
pop
scas
data16
ljmp
or
add
jl
idivb
mov
jge
jne
test
std
push
sub
clc
adc
pusha
adc
andl
push
arpl
mov
jae
xor
inc
and
pop
adc
imul
cs
xor
mov
adc
fmull
insl
call
stc
out
or
xchg
dec
les
into
fcmovne
insl
or
repz
int3
cwtl
xor
pushf
lret
pop
push
jecxz
pop
insb
push
rol
sub
loope
rol
cmpsb
les
and
mov
test
out
cmc
fadd
add
dec
pop
inc
insb
mulb
out
mov
pop
jg
dec
fdivl
mov
pop
inc
mov
rcrb
push
jp
cmp
push
mov
jge
xor
mov
xchg
sbb
xchg
shll
jne
and
inc
call
sti
jl
cmp
adc
mov
sbb
push
adc
mov
inc
scas
cld
dec
pop
jecxz
jle
data16
xor
xor
jle
call
pop
pop
dec
jle
imul
dec
test
mulb
and
popf
add
add
das
inc
iret
pop
and
jo
sbbb
adc
xchg
xchg
es
add
mov
jnp
fstps
mov
inc
sbb
out
int
xchg
or
arpl
out
fmuls
inc
fs
xor
sbb
in
push
mov
cmpsb
cmp
in
cmp
pusha
add
add
enter
mov
jb
xchg
adc
scas
enter
sbb
fs
dec
lods
jbe
or
out
push
push
xchg
divl
sbb
mov
push
inc
push
push
mov
jae
rorb
adc
int
pop
mov
xor
xchg
or
mov
mov
cmp
cmpsl
aam
test
cmpsl
sub
mov
lods
add
xlat
iret
and
popa
call
test
or
cli
add
pop
sub
cs
pushf
testl
popa
enter
or
cmp
in
int
sar
xlat
pop
jle
jne
mov
pop
sub
clc
mov
scas
mov
jnp
push
call
daa
mov
repz
jmp
xor
data16
and
jns
stc
push
cmp
or
pop
lret
push
lods
stos
or
push
aam
loopne
fdivs
and
rcr
les
inc
push
repnz
cmp
ss
outsb
cmpsb
mov
in
mov
loop
mov
push
cmp
clc
orl
faddl
mov
and
je
test
lret
cmp
mov
loopne
add
dec
push
pusha
push
sbb
insl
xchg
test
dec
mov
test
fiaddl
fstl
enter
and
roll
addr16
sub
insl
or
add
out
push
push
imul
add
adc
pusha
stc
outsb
sub
pop
imul
mov
cmp
ret
sti
test
out
jno
adc
mov
fs
lcall
repz
cmp
aaa
fsubrs
xor
or
dec
adc
imul
xlat
xor
add
lock
add
xchg
stos
rclb
out
les
bound
mov
shlb
andl
stos
mov
hlt
fwait
call
adc
mov
add
sub
sahf
adc
fisubl
mov
in
cld
push
push
mov
imul
lock
fwait
push
mov
mov
cltd
and
xchg
jno
xor
imul
addr16
das
ret
or
imul
shll
adc
adc
aam
dec
shll
addl
les
ret
xchg
jne
or
xchg
xor
gs
inc
sub
test
push
push
aas
inc
or
mov
std
inc
xchg
mov
sahf
xchg
rorb
and
loopne
push
lahf
icebp
or
add
fisttpll
mov
iret
idivb
push
jae
sub
mov
xor
loope
popf
lods
xchg
dec
push
mov
cmp
push
dec
testl
std
jne
jmp
data16
shll
and
xor
and
sbb
movb
sti
lds
aam
cmpsl
pop
aad
push
out
xor
gs
out
jo
scas
push
rol
push
inc
dec
inc
jle
fstpt
dec
test
pusha
hlt
push
push
mov
or
jb
fisubl
mov
push
shl
das
leave
xchg
push
pop
fwait
repnz
push
pop
roll
mov
shl
or
pop
jbe
out
jle
lock
ja
outsl
jp
std
jns
dec
ds
cmpsl
test
daa
call
add
ljmp
insb
sahf
xchg
mov
add
adc
cltd
outsl
mov
xchg
inc
add
sub
iret
icebp
and
nop
pop
jb
andl
lods
or
push
shl
test
mov
scas
inc
mov
dec
lock
jnp
inc
gs
iret
notl
xor
fsts
add
cltd
pop
push
out
mov
popa
inc
unpckhps
cmpsb
jecxz
or
lret
repz
sbb
popf
bound
and
imul
cs
xor
mov
mov
mov
test
test
out
sbb
mov
push
aam
jne
das
pop
enter
mov
les
sbb
iret
add
rcl
xor
xorb
sbb
inc
mov
out
int3
movsb
push
sti
out
call
in
cld
jg
xchg
popa
add
insl
pop
push
xor
push
inc
les
mov
stc
xor
in
dec
test
or
stos
adc
aam
aam
data16
xchg
adc
dec
mov
std
scas
jmp
ret
pop
lcall
andb
pop
adc
cli
mov
out
inc
mov
mov
xor
cmp
in
adc
incl
jle
push
sub
std
xchg
das
dec
in
ja
inc
cmc
shrl
dec
push
mov
int
lret
rclb
loope
das
repnz
arpl
xlat
inc
dec
mov
stc
push
jmp
mov
inc
sbbb
lret
rcl
pop
loop
xor
insb
xchg
pop
pop
or
mov
xchg
jge
push
call
adc
and
es
incl
cld
pop
test
add
adc
popa
jbe
dec
and
popf
xchg
loop
mov
mov
cmp
pop
icebp
rolb
xchg
dec
into
and
fxch
jecxz
jno
dec
loope
cmp
pop
jp
or
sahf
inc
pushl
jg
jle
lahf
fcomps
test
xchg
sbb
mov
xchg
ja
xor
lcall
sub
fs
fstps
aas
std
fst
test
loope
inc
stos
mov
and
mov
sbb
aam
stc
inc
scas
fstps
cmp
sbb
test
bound
call
sbb
mul
lods
and
lahf
fisubl
rcr
into
and
stos
in
imul
jecxz
int
cmpsl
shrl
outsb
adc
jnp
add
out
push
push
pop
test
or
jle
es
push
sbb
imul
fildll
mov
mov
shlb
jb
movsl
xchg
push
jo
xchg
popf
pushl
ret
jmp
gs
mov
aad
pop
movsl
mov
adc
arpl
sbb
xchg
daa
lods
pop
xor
mov
cmpb
sbb
out
cmpsb
scas
loop
fisubrl
dec
leave
push
and
das
outsl
bsf
xor
imul
sub
add
mov
mov
leave
dec
iret
cmpsl
cltd
aaa
into
int3
inc
sbb
jecxz
and
push
xchg
adc
jno
imul
enter
xchg
dec
imul
xchg
or
sti
pop
push
cmpsl
loopne
movsb
je
pop
clc
loopne
ret
pop
mov
and
cmc
or
or
scas
inc
cmp
or
pushf
insl
xlat
dec
insb
mov
out
aas
aaa
xor
adc
sub
enter
pushl
call
scas
pop
test
mov
xchg
les
xor
cmc
dec
stc
mov
sar
add
add
in
adc
jno
dec
cltd
mov
cmp
push
shrl
cmp
cmp
into
or
jecxz
aaa
or
in
pusha
loopne
aad
int
xchg
int
jl
shll
sarb
subl
jbe
inc
mov
mov
jno
xchg
xchg
dec
jae
mov
ret
xor
dec
das
inc
xchg
decb
xlat
sarb
xchg
js
adc
and
fbstp
adc
fldl
fwait
je
push
dec
cs
cwtl
xor
je
pop
sub
dec
or
lods
lea
cmpsl
add
ljmp
cmp
adc
enter
test
mov
pop
aam
sub
js,pt
xor
fisubrl
out
cmp
xchg
test
sti
lock
ret
mov
adc
xchg
push
adc
mov
stos
fsubp
outsl
bound
in
push
cmpsb
jbe
cmp
jno
sbb
sub
push
test
scas
mov
xor
push
adc
inc
mov
test
iret
or
push
or
dec
or
xchg
jbe
ja
daa
inc
shlb
test
test
aad
pop
push
or
inc
or
jmp
push
or
lcall
sub
stos
fnstenv
jbe
imul
mov
dec
and
addr16
fwait
addr16
hlt
sarb
mov
cmp
scas
outsb
cli
stos
bound
aad
aas
fsubrs
loopne
dec
jge
scas
add
push
es
mov
pop
shlb
insb
movsl
lret
jecxz
imul
mov
mov
mov
shrb
leave
sub
sbb
xchg
std
push
fldt
aam
inc
push
insb
cld
mov
cmc
pushf
pop
cmp
mov
jbe
cwtl
pushf
movntps
out
sub
mov
jne
and
and
lods
push
fidivs
std
test
arpl
mov
test
call
cltd
mov
add
call
stos
cs
jne
xchg
mov
push
insb
sub
inc
movsb
ficompl
and
mov
test
mov
mov
dec
stos
sti
mov
dec
jbe
test
jle
test
mov
or
sahf
mov
mov
push
dec
mov
cmp
cmp
aam
popf
mov
mov
aam
cmp
fnstcw
adcl
or
sti
ss
lcall
jl
decb
jl
inc
stos
arpl
lret
scas
loopne
stc
std
dec
dec
dec
mov
movsl
inc
mov
stos
mov
out
inc
mov
jno
sbb
dec
dec
cmpsb
iret
ljmp
inc
adc
sbb
cli
pop
or
inc
jno
setae
lods
loop
pop
push
pop
xor
es
mov
pop
out
fldl
ror
and
std
cmp
dec
outsb
xor
sub
ss
cmp
bound
fisttps
sub
ja
leave
das
lds
icebp
dec
jae
sar
mov
jb
mov
mov
repnz
clc
xor
lods
pop
pop
pop
jnp
xchg
cmpsb
jge
sub
insb
jmp
fdivrl
leave
movsb
lea
jo
cli
ljmp
es
pop
sbb
test
lahf
int3
pop
add
out
pop
insb
and
andb
and
clc
push
adc
repnz
mov
cmp
imul
add
cmp
loope
lock
dec
adc
cld
loopne
sub
jae
inc
inc
or
fistpll
in
ret
mov
sbb
pop
add
pop
outsl
iret
adc
inc
jb
jp
je
adc
ret
jns
push
cmp
fistps
jg
lret
inc
cmp
sti
cmp
daa
fucom
sub
sti
shll
stos
xchg
stc
mov
rcr
mov
inc
enter
aad
leave
inc
sub
cmp
pop
in
mov
pop
xchg
adc
subl
or
dec
movsb
les
cli
dec
push
inc
mov
mulb
stos
nop
in
lea
aam
jmp
inc
adc
out
dec
cs
jp
mov
push
mov
adc
mov
cmp
cmp
stos
pop
into
dec
divb
loope
aas
or
jmp
orl
jnp
int3
shrb
rolb
test
arpl
hlt
and
inc
pop
inc
ljmp
cld
lahf
mov
mov
xchg
inc
add
leave
rolb
inc
rorl
mulb
test
lds
ljmp
cmpsl
pop
xchg
pop
mov
dec
dec
push
mov
imul
rol
pop
jmp
cmpl
ficompl
jl
sbb
leave
push
dec
lods
fnstcw
enter
fdivrl
jb
xor
repz
loop
out
aas
test
inc
cli
hlt
pop
arpl
xchg
icebp
aaa
jmp
cli
sbb
cmp
gs
bound
cmc
loop
mov
push
cs
int
lds
lcall
pushf
sbb
dec
pop
inc
sbb
aas
sub
xor
imul
sbb
arpl
in
arpl
icebp
pusha
xor
outsl
or
and
roll
notb
sti
push
sub
pop
lods
add
fwait
mov
jecxz
ret
ljmp
gs
clc
dec
cmp
adc
xchg
sar
dec
pop
jecxz
mov
mov
cmp
xor
int3
ret
xorl
cmc
outsl
lret
stos
cli
and
repnz
lret
rcr
icebp
pop
in
mov
mov
sarb
maskmovq
push
les
and
cmp
adc
jb
add
in
imul
sub
mov
mov
push
into
clc
pushf
xor
test
push
mov
pop
aaa
inc
clc
addr16
lcall
fcom
jo
and
jmp
jp
fistl
roll
jns
push
cmp
pop
push
aad
inc
adc
mov
orb
jg
add
andl
adc
insb
inc
adc
cmpsb
in
sub
cmc
jg
lcall
lea
mov
cmp
inc
js
mov
mov
shl
xchg
in
or
xlat
jmp
stos
cmp
mov
and
inc
lahf
cmp
or
adc
lret
je
sub
sti
sub
xchg
in
mov
xor
push
jmp
insb
inc
pop
jae
inc
andb
or
jne
lret
dec
mov
and
sbb
mov
fistl
lods
cld
mov
jae
cmpsw
out
push
sbb
faddl
je
ljmp
lods
sbb
mov
mov
dec
sbbb
insl
les
cmc
mov
pop
arpl
sbb
loop
cmp
insl
pop
sbb
popf
or
jmp
call
push
repnz
cmp
sbb
pop
ds
sub
loope
arpl
mov
push
or
rcr
ja
add
test
add
push
jecxz
xchg
pop
dec
inc
mov
mov
inc
jmp
pop
out
mov
lcall
les
xor
sub
push
jb
js
nop
xchg
mov
push
rolb
add
in
mov
dec
mov
loope
lods
aam
into
jle
popf
xchg
mov
imul
das
jo
mov
out
loope
repz
ja
setne
shrb
mov
or
or
lret
add
loop
inc
je
aaa
adc
aam
orl
bswap
dec
dec
mov
add
repnz
adc
xchg
mov
sub
pop
jl
popa
das
inc
movsl
gs
imul
mov
sub
push
shlb
pop
push
loope
ds
mov
add
push
pusha
push
pop
arpl
into
clc
sub
add
add
or
mov
loope
xchg
in
xor
arpl
cli
testb
xchg
or
fisubrl
lds
shll
mov
rorl
or
sub
test
test
add
mov
test
mov
popf
jecxz
mov
test
or
mov
mov
add
inc
xorl
pop
xchg
adc
push
aad
mov
mov
loop
sahf
ret
mov
pop
pop
cmpsb
mov
adc
xchg
inc
sbbl
push
xor
sbb
lret
pushf
jo
pusha
imul
add
ja
or
nop
mov
testb
ja
jno
outsl
std
out
ja
lock
push
jmp
scas
test
jae
adc
sahf
pusha
les
lahf
xchg
adc
data16
cltd
add
or
pop
cmp
mov
mov
daa
dec
cmpl
push
and
xchg
pushf
mov
pop
cltd
xchg
xchg
fidivrs
pop
mov
stos
push
es
adc
repnz
push
testl
mov
cs
add
les
and
jmp
enter
sbb
or
adc
movb
test
mov
push
jbe
dec
std
stos
sbb
ja
mov
mov
dec
push
mov
push
pop
mov
or
repz
push
loop
rcll
pop
jno
lock
lods
les
and
sahf
pop
xchg
mov
inc
scas
fwait
push
jnp
mov
ljmp
sub
sahf
aam
xchg
repnz
in
xlat
sarl
clc
orb
jae
cmpsb
and
sub
xchg
loopne
add
dec
xlat
inc
jbe
cmp
add
test
enter
pop
sbb
pop
shrb
mov
sbb
imul
cs
fists
leave
mov
cmpb
notl
xor
aam
or
sub
mov
xor
pop
pop
add
int3
sbb
add
mov
cmp
xchg
enter
ss
icebp
and
push
mov
je
cmpsl
jle
dec
xlat
addr16
jg
mov
push
mov
jb
or
mov
jns
jb
je
jp
hlt
mov
xchg
in
mov
or
or
loope
popf
cwtl
in
pop
fnstsw
xor
fdiv
mov
jns
add
fstpt
cmc
lods
or
arpl
cs
push
sbb
pusha
mov
int
xor
mov
xchg
mov
dec
sahf
mov
stos
inc
xlat
or
loop
mov
aaa
sub
mov
cmp
add
popf
pop
clc
pop
xchg
cwtl
adc
inc
sbb
cltd
fcmovnb
sub
scas
push
inc
mov
sbb
inc
sub
ss
jb
pushf
fidivrs
lahf
icebp
outsl
pop
xchg
and
jle
push
mov
sub
jae
and
scas
divb
jne
ror
sub
sub
or
ret
pushf
pop
inc
aam
shlb
les
xor
call
out
inc
dec
dec
rol
clc
mov
lcall
lods
mov
in
dec
mov
pushf
push
into
jmp
stos
in
and
push
push
loop
scas
shl
mov
mov
into
addb
push
xchg
jg
aas
cmc
mov
stos
daa
pop
imul
out
lods
mov
pop
fstpt
popa
or
pop
scas
inc
mov
std
cmpsb
mov
es
or
push
inc
and
lret
lret
sbb
ja
sub
push
sub
push
dec
mov
jo
jge
sarl
adc
lahf
jmp
xchg
fnsave
js
jnp
jbe
mov
rcl
pop
out
mov
jae
scas
scas
mov
mov
cmpsl
popf
mov
outsb
mov
enter
mov
mov
lods
sti
sbb
jns
cmp
movsl
pusha
add
lods
xchg
dec
cwtl
mov
sub
push
xchg
inc
jecxz
inc
mov
inc
sbbb
and
dec
add
leave
imul
in
pop
mov
outsl
pop
inc
fsubp
into
xchg
cmp
pop
in
mov
shll
gs
xchg
xor
jle
jl
cs
or
stos
lea
repz
loopne
push
jns
das
sub
dec
cmp
adc
fwait
inc
mov
cmp
or
pop
sti
sbb
push
jl
push
int3
aas
mov
mov
add
je
mov
scas
sahf
push
lods
add
push
rcl
pop
jle
jo
push
cmp
repnz
popf
and
loop
leave
mov
pop
das
pop
push
ficoms
jne
and
lret
pop
push
xor
mov
cltd
aaa
idiv
jg
cld
or
in
bnd
je
push
fsubr
and
cmc
test
and
outsb
shll
and
xchg
sub
lds
mov
loopne
push
jne
jbe
cld
je
imul
fwait
outsb
and
push
mov
test
xor
je
pop
push
js
mov
push
mov
imul
dec
xor
rcll
and
push
jge
aad
mov
ljmp
add
push
push
lods
sti
inc
adc
sub
or
mov
dec
xor
rcrb
rcll
int
sub
cltd
nop
cmp
push
adcb
jno
fs
cmpsl
movsl
mov
lods
cmp
sub
inc
int
push
movsb
out
dec
ret
jb
ss
rol
pop
cmc
cmp
fs
gs
pop
jns
insl
leave
mov
dec
xor
int3
fwait
mov
dec
mov
fadds
sub
enter
loopne
out
je
xor
test
mov
out
sbb
lcall
rcrl
inc
or
push
push
loopne
inc
lock
push
xchg
out
xor
push
repz
les
cli
adc
jno
mov
cld
dec
call
lods
dec
sbb
cmp
mov
push
xor
decl
in
mov
jno
hlt
cmpsb
push
dec
xchg
cs
jl
addr16
cmp
push
jo
fbld
or
into
cmc
jns
sarb
push
pop
jg
sti
outsb
test
repnz
xchg
mov
mov
das
xchg
and
aas
mov
inc
add
fwait
out
int3
sbbb
outsb
dec
adc
xorb
xchg
dec
jmp
hlt
movsb
or
test
adc
rorl
xchg
pushl
ss
cmp
xchg
fisubl
mov
mov
mov
sbbb
and
xor
mov
xchg
cwtl
jecxz
dec
in
lods
imul
dec
lock
das
js
mov
data16
outsb
mov
shll
xor
lret
sarb
push
outsb
test
cmp
dec
push
out
dec
add
xchg
aad
push
lods
pop
popf
rorb
pushf
int
pop
jo
and
push
sti
hlt
pop
imul
mov
cmp
pop
add
outsb
cli
sti
mov
jbe
lods
push
test
mov
cs
movsl
inc
and
adc
push
outsb
cmc
leave
push
sub
dec
adc
inc
sbb
and
adc
dec
dec
test
std
inc
out
mov
dec
sti
fimull
xchg
adc
mov
hlt
mov
popa
inc
pop
inc
inc
inc
mov
xor
mov
mov
test
xchg
jmp
pop
repnz
mov
add
xor
add
cltd
jnp
or
arpl
xor
sub
sahf
or
cmp
jge
xor
bound
orb
cmp
shll
mov
ljmp
inc
inc
data16
daa
push
rorb
cli
rcll
sbb
sbb
addl
pop
sbb
cwtl
sbb
jno
aam
xchg
call
loope
lock
lahf
and
arpl
add
push
push
js
xor
pop
mov
fstl
loop
push
cmp
test
sbb
frstor
fcompl
cli
stos
adc
ret
cmpsb
lds
sub
inc
sarb
sbb
or
xchg
adc
cs
imul
xor
adc
int
das
fdivs
rcrb
mov
lods
sbb
lret
das
mov
push
mov
into
ljmp
out
mov
sbb
fiadds
pop
test
movsb
jmp
je
je
xchg
rorb
pusha
mov
fnstcw
das
adc
dec
decb
lret
xor
outsb
popf
fs
aam
fildll
lcall
into
xchg
mov
pusha
mov
divb
push
mull
inc
add
mov
push
xor
loop
in
imul
mov
add
or
mov
gs
rcrw
jge
fwait
and
das
add
cld
sub
and
or
bsf
inc
pop
cmc
jns
push
push
adc
aaa
dec
mov
and
mov
faddl
aam
jmp
pop
in
mov
add
roll
fisttpll
js
sar
rorb
and
cmpsb
add
push
in
adcb
test
mov
dec
loopne
fwait
add
fcoml
repz
fwait
outsb
scas
in
lods
add
inc
ficomps
lods
xchg
lcall
or
dec
pop
cmpsl
mov
mov
insb
jl
gs
dec
fcompl
pop
ret
mov
jno
test
jge
shlb
fbstp
dec
xor
sub
clc
imul
rcll
sbb
out
adc
outsb
jge
lods
sbb
popa
push
mov
rcll
dec
bound
push
out
sbb
pop
decl
lret
push
jns
xorl
gs
fwait
sub
mov
repz
push
push
mov
les
pop
shll
inc
popl
jae
les
jno
cmp
sahf
test
sbb
inc
mov
jmp
test
add
mov
call
std
inc
pop
fbld
dec
loope
cwtl
outsl
popa
jp
push
enter
imul
or
loope
loopne
subb
push
add
popa
sbb
push
add
jg
nop
sbb
and
push
pop
adc
data16
sbb
adc
and
jle
clc
mov
lahf
in
push
cmp
pop
sub
lock
pop
loope
insl
jecxz
mov
into
cltd
pop
mov
cmp
mov
cmovbe
push
not
ss
sub
inc
loopne
fs
mov
cmc
cltd
cmp
xchg
mov
push
repnz
or
push
lahf
sbb
mov
mov
adc
ljmp
imul
inc
jne
fmulp
dec
push
popa
loopne
adc
cmc
je
sub
rcll
adcb
sarl
in
xor
in
in
cld
inc
insl
fstl
fisubrl
xor
inc
sbb
ret
push
pop
mov
add
push
inc
sub
mov
out
mov
idivb
ss
int
xchg
cwtl
cli
jbe,pn
or
adc
mov
add
cmovae
cmp
xchg
add
notl
xor
sti
jge
or
xchg
aas
mov
push
cs
push
call
pop
mov
aam
test
sti
mov
int
jl
dec
mov
decl
ret
lea
or
in
mov
lods
gs
inc
cmp
jbe
and
imul
pop
mov
pop
jno
loop
lea
jp
ss
ljmp
mov
mov
cltd
into
mov
inc
mov
and
or
inc
or
repnz
clc
mov
push
fdiv
rorb
out
push
or
xchg
in
jns
rcr
insb
xchg
push
leave
popa
dec
add
dec
aaa
pop
fwait
sahf
ss
mov
xlat
bound
push
and
add
int
or
or
aad
xchg
clc
iret
push
adcb
lds
loope
xorl
mov
adcb
mov
inc
in
cltd
xor
ljmp
loope
cs
fcomps
sbb
out
mov
out
mov
loop
xchg
fsubrs
ret
jne
pop
push
mov
sbb
hlt
in
jmp
push
cmp
pushf
xchg
push
insl
bound
cwtl
imul
ret
cmp
jge
and
pop
push
sbb
stos
xor
sbb
lret
fsubs
sbb
lods
jbe
cmpsb
sub
sbb
imul
and
stos
cs
iret
test
dec
xor
add
imul
sub
mov
and
fistpl
mov
and
push
push
aad
lds
push
adc
into
mov
mov
testb
jo
mov
test
mov
and
hlt
mov
add
bound
pusha
nop
add
je
test
add
push
repnz
js
addr16
je
mov
jne
ficomps
push
nop
xor
add
in
repnz
mov
js
sbb
jae
and
mov
mov
outsl
xchg
xor
or
ds
dec
in
adc
push
imul
imul
inc
clc
fcomi
data16
inc
outsl
shrb
add
pop
lcall
pop
xchg
int
adc
ss
jns
insb
xor
push
sub
xchg
jae
fisubrl
mov
and
add
cmp
in
dec
int
jmp
xchg
aaa
enter
or
icebp
inc
shlb
sbb
cwtl
adc
subb
ret
xor
in
xchg
mov
dec
gs
xor
sbbl
xchg
lock
push
inc
inc
dec
popf
popf
es
repz
es
adc
or
aas
add
aam
push
cld
mov
scas
sbb
xchg
adc
add
and
testb
ljmp
cwtl
cwtl
loopne
jmp
aas
in
cmc
adc
jmp
arpl
loopne
cmp
fmul
jae
xor
dec
lods
mov
loope
jge
push
imul
inc
sbb
movsl
imul
das
outsl
push
cld
mov
mov
lods
xchg
mov
repz
mov
mov
addr16
scas
and
xor
mov
adc
aad
xchg
clc
fs
and
icebp
sub
lahf
jl
xchg
fistps
and
xchg
movsb
cld
ljmp
call
and
test
add
inc
inc
cmp
and
push
jo
pushf
rcl
rcr
xor
xchg
pop
add
add
mov
cmp
fabs
sub
sbb
in
out
add
addb
aas
dec
nop
mov
inc
stos
pop
lods
dec
dec
pop
and
xchg
jge
mov
xchg
shl
xor
xor
outsb
addr16
and
add
jo
cmp
inc
vmovlps
jnp
sbb
sub
mov
push
xchg
fs
cmpsb
dec
inc
andps
loope
fiadds
cmp
shll
rcrl
clc
iret
and
or
in
ret
mov
dec
push
or
or
or
pop
in
scas
jnp
shll
mov
test
fnstcw
or
jne
push
lret
popl
pop
icebp
push
aaa
adcl
jb
jle
lret
mov
ret
cli
sub
jno
pop
dec
ja
js
ja
and
mov
jb
movsl
imul
ss
adc
insb
outsb
push
es
add
data16
mov
lds
call
jo
lods
in
iret
dec
mov
pop
pop
push
inc
insl
xor
xchg
rcr
shr
sub
mov
push
lds
je
clc
repz
iret
add
ljmp
mov
iret
into
loop
push
mov
sbb
pusha
lret
fstps
adc
jnp
clc
test
push
mov
push
ret
add
repnz
aad
and
roll
dec
fmull
mov
xchg
mov
jp
mov
ljmp
or
adc
pop
xor
int
gs
loopne
mov
loopne
and
in
shlb
out
push
out
jl
insb
jmp
xchg
inc
outsb
outsb
xor
sti
dec
ss
jns
jle
push
sub
xor
pop
xchg
sbb
and
cmc
jle
orb
add
and
jl
gs
sbb
adc
mov
shlb
xor
ret
push
cmp
das
mov
stc
es
jecxz
cmc
clc
or
adc
mov
or
popa
dec
cmp
adc
jge
xchg
rcrb
test
ret
sbb
xchg
testb
fwait
dec
loope
jb
incb
xor
pop
cmpsl
mov
dec
and
or
adc
pushf
das
or
or
daa
popf
or
stos
add
jge
sbb
push
jno
adc
push
adc
xchg
jp
test
ret
sarl
adc
in
adc
adc
add
loop
stos
cmpsb
adc
fsubp
lahf
callw
inc
das
push
mov
leave
and
fcoms
iret
lds
test
adc
and
mov
shrl
push
cmp
push
adc
sub
les
add
lock
pop
lods
ret
pop
adc
ret
pop
add
rcrb
mov
xor
inc
sub
push
loop
std
mov
jecxz
mov
add
dec
loope
inc
mov
fldenv
pushf
test
inc
jge
aas
js
daa
jp
dec
xor
mov
inc
push
roll
push
cld
scas
lret
enter
push
cld
cmpsb
aas
fisttpl
push
or
hlt
cmpb
ja
fdivrs
jp
repz
fcomip
dec
push
std
testb
rep
rcrl
inc
cltd
sub
pop
pusha
inc
add
push
in
sub
sub
ds
adc
jb
push
incl
imul
fwait
xor
mov
xchg
pop
stos
lds
add
cmp
aaa
inc
divb
loope
jecxz
jbe
mov
adc
or
jne
int3
andb
js
jg
adc
pop
jecxz
or
cs
cmp
je
pop
push
jbe
push
lea
mov
xlat
adc
xchg
pop
aad
mov
xor
fs
pusha
xor
mov
mov
stc
pop
lods
mov
fsubl
lcall
lea
xchg
xor
jg
rcr
out
mov
lret
xor
lahf
inc
xor
pop
mov
and
xchg
movsb
shll
inc
dec
cs
xchg
movsb
in
sahf
cmc
pop
orl
scas
mov
or
sub
clc
add
adc
clc
fwait
shlb
mov
iret
push
mov
mov
and
mov
dec
subl
fimuls
decl
hlt
pop
leave
jle
add
dec
sti
inc
xor
add
lcall
bnd
les
and
sarl
push
stos
adc
push
scas
sbb
pop
pushf
addr16
dec
dec
cli
js
ret
cli
jge
pop
sbb
push
xchg
cwtl
jecxz
movb
sub
outsb
out
jge
push
jbe
into
pop
sbb
fisubrs
in
mov
cmpsb
mov
xchg
rcll
pop
mov
icebp
dec
adc
sub
push
dec
loop
or
das
loopne
andb
or
mov
in
mov
fsts
fsubrl
inc
sub
dec
enter
jne
movsl
ficompl
fisubl
adc
int
test
mov
dec
xchg
repz
lds
push
add
rcll
and
jnp
jb
test
dec
adc
nop
imul
mov
fldt
and
das
jge
cmp
add
jp
xchg
cmpsb
xchg
out
insb
mov
and
cmp
fsub
cli
stos
les
mov
ds
and
pop
inc
xor
fs
xchg
inc
flds
and
cs
ds
jbe
mov
cmc
loope
cmc
jo
jp
mov
mov
pop
aas
repnz
ret
lods
rorb
mov
inc
jge
fildll
fucomi
cmp
and
xor
push
pop
dec
mov
sbb
xchg
popa
les
xor
add
and
push
test
jle
xor
push
jle
xrelease
adc
hlt
push
mov
icebp
lock
xchg
rcr
push
test
popa
popa
insl
insb
adc
rorb
lea
pushf
mov
mov
movsb
std
sbb
das
jb
mov
xchg
or
sbb
jb
lahf
xor
and
mov
dec
sub
ret
pop
mov
mov
xor
sarb
shl
xchg
sahf
aam
cli
pop
lea
xchg
stos
mov
mov
push
inc
jp
mov
icebp
js
mov
aaa
je
pop
cmp
xchg
mov
push
mov
cmp
or
xor
mov
sub
pop
scas
jmp
inc
inc
roll
adc
aas
idiv
mov
rcll
push
xchg
cmp
cmc
shrb
and
sub
pop
mov
in
mov
xorl
xor
inc
mov
lock
sbbb
loopne
rcrl
mov
mov
daa
jno
cwtl
ja
xor
dec
sub
and
jae
lret
add
inc
test
push
das
jnp
dec
or
xchg
push
mov
push
push
push
mov
dec
push
pop
fsubs
inc
jb
or
pop
dec
dec
sti
push
or
int
push
sbb
cmp
sub
xor
xor
push
pop
pop
sti
sbb
mov
inc
inc
in
mov
aad
adc
mov
mov
mov
inc
out
push
inc
ss
mov
lret
insl
push
and
add
arpl
pop
lds
in
xor
sub
cmpsb
test
bound
leave
sub
and
nop
jns
repz
mov
int
cli
sti
and
lcall
js
outsl
out
dec
cmp
int
outsb
divb
push
mov
dec
dec
cld
dec
xchg
cmp
xchg
rcll
mul
mov
in
je
outsb
into
xor
ds
sti
xor
fildll
jmp
adc
andb
lock
xor
add
in
push
lea
data16
xor
jmp
andl
mov
add
adc
cld
push
cltd
popa
std
sbb
cmp
loopne
or
mov
lods
test
mov
push
push
push
test
add
xor
cmp
fimuls
cmp
cltd
sub
mov
sub
pop
test
rcl
dec
cmc
lock
aas
inc
idivb
inc
sbb
add
mov
mov
rcll
adc
cmc
pushf
stos
mov
cs
jmp
test
in
scas
cmpsl
aas
add
mov
enter
push
je
or
add
lret
rcr
call
sub
orb
xchg
mov
leave
jmp
dec
int3
jge
pop
std
adc
addr16
cli
jp
rclb
ja
or
jae
push
aas
pop
adc
test
jno
pop
addr16
jne
mov
and
stc
push
rcr
rorb
xor
cmp
testl
cmp
xchg
cwtl
dec
js
push
shr
sub
jbe
leave
jecxz
lods
sahf
or
cmpsl
sub
mov
mov
and
or
scas
mov
js
loop
gs
jo
jmp
aad
dec
daa
lret
lds
out
mov
cmc
cmc
out
ds
pop
lcall
pop
pop
ds
popa
jns
xorb
fisttpll
cmp
xlat
jecxz
std
imul
or
repz
adc
jl
and
xchg
into
jp
mov
dec
jno
jle
adc
jne
dec
cmp
scas
mov
es
cmpsl
sub
push
pop
xor
or
inc
sbb
push
xor
outsb
aad
insl
mov
sub
mov
or
cmp
js
mov
aad
cmpsl
jg
jge
mov
mov
xlat
sub
inc
dec
add
cmp
and
hlt
push
jge
shll
popa
cmp
xor
scas
and
fistps
jecxz
sarl
sarl
mov
cmp
pushf
lret
xor
mov
jp
cli
aas
movsb
in
cmp
vpsubw
dec
outsb
ret
leave
cmp
ret
ss
adc
and
push
mov
adc
add
push
aaa
sub
cmpsl
daa
adc
sti
inc
into
sbb
nopl
stos
fdivrs
or
cli
xchg
stos
xor
sbb
jb
jecxz
js
rclb
loope
xchg
lcall
sub
push
push
add
jnp
add
scas
outsb
add
mov
inc
xor
xor
mov
and
cwtl
test
ficomps
imul
orl
lcall
mov
sbb
lods
loope
jo
ja
dec
mov
fimull
mov
cmpb
sti
and
mov
or
mov
les
push
push
je
leave
arpl
mov
ret
mov
mov
mov
mov
stos
sbb
mov
sub
movsb
cmp
xor
pushf
inc
mov
mov
sub
dec
xchg
popf
push
mov
shr
out
mov
fsubs
int3
std
cmpl
sbb
or
mov
and
sub
inc
xchg
xor
push
fcoml
adc
pop
push
push
xor
les
xchg
xlat
in
dec
cmp
sbb
xchg
or
std
xlat
lods
jns
aaa
jae
andl
dec
leave
sti
cltd
mov
add
fs
in
sub
insl
inc
cld
loope
sub
loopne
pop
jae
mov
iret
mov
jl
pop
sti
in
add
dec
int
je
insb
pushf
pop
sbb
imul
nop
out
popf
xchg
pop
pop
movsb
xor
cmc
outsb
adc
mov
outsl
mov
test
and
xchg
inc
pcmpeqb
jge
fsub
xchg
mov
andb
loopne
push
push
mov
mov
inc
pusha
mov
pop
mov
ljmp
pop
out
add
fwait
xlat
jmp
cs
mov
fdivrs
test
out
sbb
dec
add
jae
std
ss
cmp
rcr
js
inc
fwait
jno
xchg
scas
sbbl
fisubrl
dec
orb
movsb
xor
call
das
jnp
adc
lods
stos
sub
or
jne
xor
pop
std
out
sub
xor
xchg
xchg
cwtl
sub
push
icebp
aam
mov
fmuls
das
cs
rcll
out
aam
arpl
outsl
mov
add
movb
push
stc
jmp
mov
popa
out
popf
push
pop
js
sbb
imul
mov
cmp
in
add
mov
scas
je
mov
aas
scas
sub
les
ds
xchg
stos
mov
or
arpl
ljmp
jmp
repz
fsubs
fnstsw
ret
test
jo,pn
pop
jno,pn
jbe
sbb
movsb
stc
xor
xor
popa
cmp
ljmp
insb
inc
mov
das
mov
mov
dec
fwait
arpl
xchg
jle
sbb
les
lock
add
pop
dec
dec
mov
clc
jae
xor
xlat
sbb
inc
mov
out
add
pop
push
test
cmpsl
dec
stos
push
scas
enter
aaa
xor
inc
pop
pusha
outsb
jl
jmp
stc
xor
out
add
ret
mov
cmp
fdivp
lcall
lret
cmpsb
int3
or
xor
xor
pushf
je
mov
mov
mov
pop
ret
pop
adc
pop
lds
mov
jmp
pop
jo
mov
into
lahf
push
mov
pop
inc
insb
shll
in
xor
or
mov
push
insb
inc
sbb
jmp
imul
sub
jle
ljmp
push
pop
push
adc
and
push
addl
mov
sub
xchg
pop
out
leave
in
in
push
lds
movsb
mov
pop
or
xchg
sbb
push
mull
and
ret
jne
insb
leave
add
inc
push
int
push
aaa
lret
lahf
addl
cmpsb
jae
fdivrl
cvttps2pi
xor
test
pop
adc
loop
xor
cmp
mov
jb
jge
push
test
stos
jne
std
sub
mov
addb
ret
jo
out
pop
xor
sub
test
shrb
add
lea
arpl
fsts
push
es
aaa
lea
push
xor
cmp
or
in
push
xchg
xchg
ficoml
js
or
in
dec
pusha
subl
sbb
movsl
xchg
repnz
call
cs
stos
mov
test
xor
jno
shll
leave
lds
sti
and
mov
cmp
add
out
cmpsb
xchg
xlat
and
repnz
call
lcall
subl
in
inc
and
xor
lret
into
dec
out
cmpsl
arpl
mov
mov
js
adc
addl
fnstenv
sbb
sahf
and
enter
mov
jnp
cmp
xchg
push
mov
pop
mull
dec
pmuludq
lahf
divb
inc
lret
aas
int3
push
mov
lcall
roll
sbb
xor
push
sbb
add
jns
sub
test
mov
aas
imul
scas
sub
or
jbe
mov
clc
pop
xchg
aad
xor
arpl
cmp
mov
xchg
sub
mov
shl
push
out
lcall
pop
mov
sbb
shrb
and
mov
jb
iret
mov
aas
imul
xchg
jo
scas
sbb
jecxz
mov
mov
test
aas
mov
fwait
pusha
mov
xchg
out
mov
dec
lea
jb
fisubl
cli
sbb
inc
sbb
jno
add
call
ljmp
stc
enter
fisttps
xchg
pop
or
lcall
sub
lods
out
push
pop
cld
push
lock
in
jns
into
mov
add
es
cmp
fwait
mov
adc
xor
shll
pushf
cmp
dec
addr16
mov
iret
mov
xor
out
arpl
sbb
lods
push
xchg
add
fsubr
push
dec
stc
int3
sub
jmp
cmp
push
int3
fstl
out
clc
gs
shll
fs
imul
movsb
call
notl
jae
icebp
scas
cltd
jo
insb
pusha
jo
inc
test
rorb
mov
add
cltd
or
stos
mov
sahf
mov
sub
mov
jmp
sahf
inc
mov
cld
mov
pop
and
or
in
sbb
dec
jge
notl
imul
mov
or
jae
dec
idivb
lods
sub
mov
cmc
pop
daa
mov
aad
cli
cmp
repnz
or
xor
xor
fwait
add
int3
mov
sub
jbe
rorb
pop
mov
jge
ds
clc
jns
fwait
lret
hlt
sahf
imul
inc
inc
pop
sbb
jl
js
popa
xor
push
lea
lcall
rcrb
dec
fidivrl
dec
ds
sub
sbb
mull
xor
pushf
add
jnp
dec
fidivrl
or
inc
cmpl
adc
sbb
add
aaa
pop
sbb
sbb
data16
mov
pusha
lcall
lahf
dec
xchg
sub
dec
mov
add
loope
shrb
push
push
or
sbb
test
bound
aaa
xchg
icebp
es
xchg
jecxz
pop
mov
push
dec
cmc
and
push
push
cmp
aaa
push
cmp
mov
sub
pop
arpl
sbb
xor
sbbl
leave
xor
sbb
outsl
mov
pop
mov
mov
in
mov
push
aam
cmpsb
xchg
arpl
arpl
jl
insl
rclb
int3
rolb
rorb
mov
int
push
ffreep
sbb
clc
jge
xor
cmp
adcb
rcrb
push
movsl
ret
push
decl
fmuls
pop
addr16
mov
aaa
dec
outsb
push
sahf
je
sti
pushl
jmp
cltd
mov
pop
insl
jno
mov
xor
xor
sbb
cltd
pop
jg
leave
jo
adc
xchg
cmp
dec
mov
pop
sbb
sub
mov
xor
in
ss
xlat
int
push
xchg
jp
mov
test
mov
adc
ret
inc
pusha
aas
insb
cld
dec
sbb
xor
xlat
fdivl
or
fnstcw
inc
jno
mov
push
inc
sbb
push
sbb
sub
scas
in
insb
inc
clc
add
iret
push
pop
fistps
add
stos
cs
daa
les
add
mov
pop
adc
pop
mov
sub
jns
aad
aaa
sub
ret
xchg
and
mov
jecxz
popa
enter
push
lcall
xchg
out
mov
int
inc
adc
out
xchg
mov
or
shl
testb
dec
cmp
daa
push
inc
push
test
pop
mov
inc
add
mov
xchg
mov
push
pop
sbb
pop
insl
fstl
in
adc
inc
rolb
int3
adc
adc
fists
leave
repnz
and
out
mov
dec
mov
mov
mov
stos
daa
adc
in
aad
cmpl
xor
mov
rep
aas
push
and
gs
xchg
sub
int3
stos
aam
sbb
movsb
pusha
push
std
add
xor
mov
jle
mov
popa
add
ss
mov
inc
sub
hlt
addr16
mov
mov
or
adc
dec
ds
push
adc
stos
sbb
ret
xchg
fsubl
rol
push
stc
repz
push
mov
adc
rolb
add
adcl
cli
aas
cmc
repz
enter
insl
xor
cmp
mov
push
data16
into
jg
dec
add
je
mov
push
mov
insl
test
ret
or
push
outsl
ret
lcall
sub
iret
test
fwait
dec
push
dec
jo
push
add
lock
and
mov
out
mov
or
xchg
push
lea
dec
cmc
iret
popf
push
xchg
daa
dec
out
fadds
xchg
jecxz
pusha
or
dec
stc
mov
sub
in
inc
loop
sarb
notl
mov
mov
fisttps
dec
push
aam
sub
push
fldcw
push
cmp
movsb
or
inc
cwtl
daa
mov
and
in
push
repz
sub
insl
test
fisttpl
push
pop
in
notb
push
divb
int3
fsts
cmpl
inc
inc
dec
and
lea
cmp
lcall
iret
loop
repz
call
std
sti
mov
aaa
mov
mov
and
xchg
pop
sarb
push
adc
dec
pop
rclb
dec
popf
add
out
inc
sbb
or
or
ret
rcrl
xchg
add
test
mov
call
shl
fldt
clc
push
aaa
orb
out
ror
fldt
in
in
pop
and
into
mov
mov
aad
push
mov
sahf
out
dec
mov
pop
aaa
adc
inc
add
fadds
das
push
jnp
sbb
mov
xchg
ja
adc
in
xchg
lcall
mov
icebp
add
mov
std
movsb
and
xchg
mov
add
fld
lret
outsb
mov
add
mov
or
int
sbb
test
loopne
nop
out
mov
and
add
xchg
sahf
notl
add
decb
aad
imul
imul
jge
stc
sti
push
cmc
dec
lock
xchg
push
fcomps
data16
jns
popa
out
in
iret
add
lock
dec
jbe
dec
rorl
add
push
push
and
and
lea
xchg
mov
xchg
lods
ds
fidivs
data16
xchg
lea
inc
sahf
sub
add
and
repnz
sbb
xlat
leave
loope
push
jnp
cmp
jbe
aam
mov
je
sbb
push
lods
aad
jns
repnz
mov
test
mov
adc
xchg
sbb
mov
dec
xchg
and
push
inc
add
xchg
adc
jmp
push
hlt
mov
and
jo
pop
in
mov
lcall
mov
mov
xor
ret
sbb
ja
adc
pop
sub
jbe
dec
sbb
xlat
jbe
adc
out
pop
pop
sbb
lods
out
ror
xor
pop
xchg
dec
dec
ljmp
fisttpl
push
and
cmc
pop
out
push
mov
scas
cltd
push
loopne
pusha
aaa
and
lods
mov
sub
je
pop
pop
cmp
clc
ret
iret
mov
in
pop
aam
fsubrs
mov
pusha
pop
mov
jmp
push
xor
cmp
into
inc
daa
pushl
sti
setg
or
lahf
fnstsw
rep
cld
push
mov
icebp
sub
mov
insl
sbb
int
push
xor
insb
inc
cmp
movb
mov
push
out
inc
sbb
fsubl
mov
popa
stos
dec
leave
cmp
outsb
lcall
popf
and
add
int3
or
repz
sub
push
repnz
enter
lahf
repz
mov
repnz
adc
cmp
pop
ja
jo
jo
stc
loop
bound
ss
lock
adc
test
out
mov
mov
insl
pop
ja
sbbb
imul
icebp
insb
push
and
adc
pop
jo
cmpsl
inc
cmp
icebp
mov
into
mov
lcall
jb
xor
sbb
inc
jb
out
nop
push
adc
sbb
andb
adc
orb
jl
sbb
dec
aad
std
clc
inc
fcomps
mov
add
lock
push
lret
mov
jbe
dec
push
cmp
pushf
movsb
cwtl
or
repz
dec
xchg
mov
push
pop
add
xlat
mov
push
adc
int
cltd
js,pn
xchg
pushf
cltd
outsb
xchg
out
in
lods
loopne
add
mov
nop
push
xchg
push
cmpsb
dec
fsubp
aas
add
fucomi
iret
fsub
lds
leave
add
xchg
icebp
push
outsb
rorb
jns
lods
sti
and
pop
mov
fbstp
ljmp
or
xor
sarl
and
mov
mov
push
jp
xor
dec
adc
in
add
add
ss
sahf
ss
add
mov
add
mov
mov
dec
xchg
push
jb
pop
sbb
mov
jne
and
fs
les
mov
mov
nop
jp
or
out
pop
push
push
out
mov
bnd
in
and
stc
jg
in
mov
jle
adc
push
jle
movsb
leave
jae
adc
mov
mov
cmp
fildll
sbb
and
inc
sbb
sub
in
cltd
push
or
adc
dec
add
lret
xchg
and
and
fidivrs
inc
xchg
xchg
pop
add
dec
loopne
mov
and
adc
mov
out
outsl
cmp
test
stos
sbb
movsb
pushf
shl
mov
dec
xor
or
pop
xor
insl
xchg
xchg
ja
sub
es
shlb
adc
cmpsl
pop
daa
sub
or
fldcw
pop
shll
push
jg
and
inc
xor
xchg
jl
add
cmpsl
mov
imul
int
imul
jnp
fdivrs
adc
jbe
jecxz
pop
inc
adc
mov
scas
test
ror
add
imul
dec
add
sbb
xchg
sub
movsb
lcall
sbb
ljmp
push
fbstp
mov
add
cld
adc
rol
sub
pop
pop
push
lret
mov
xchg
cmc
enter
jo
mov
mov
in
jb
psllq
cmp
xor
jg
mov
jae
or
test
loopne
loopne
cmpl
sti
outsb
jno
fildl
mov
nop
clc
pop
adc
lock
jl
dec
and
cs
cmp
fidivrs
out
test
mov
xchg
out
pop
int3
cmp
pop
push
xlat
sbb
add
out
test
cwtl
mov
stc
sarl
fcomp
ss
sub
outsl
push
push
or
adc
cmp
sub
insl
popf
stc
aaa
aad
mov
jno
mov
out
lahf
in
jp
adc
out
out
mov
dec
in
aas
jnp
mulb
lret
cmp
fnstcw
or
mov
dec
add
jnp
sub
in
test
add
cmp
jl
xlat
scas
iret
add
iret
das
xchg
leave
jecxz
jae
jo
jbe
loopne
cmp
pop
imul
pop
movsb
add
xchg
mov
aam
incb
sti
mov
rcr
or
mov
xor
ja
add
and
push
mov
pushf
dec
pmullw
mov
outsb
jne
movsl
mov
dec
xchg
push
sarl
jge
stos
je
jle
clc
adc
mov
cwtl
test
sets
fisttpll
adc
cld
mov
fistps
sbb
sub
and
pop
mov
ficompl
dec
call
cmpsl
adc
test
nop
mov
lds
loop
adc
mov
out
lock
cmovns
ds
aas
xchg
push
lods
jmp
sarl
cmp
aad
imul
out
mov
lcall
xchg
push
rcrl
xchg
xor
mov
mov
mov
stos
stos
or
sbb
out
pop
cmpsl
dec
and
pop
call
roll
adc
out
sub
mov
aaa
jle
rcll
cmp
push
bound
mov
or
and
sub
mov
sub
push
mov
outsl
inc
test
mov
push
rolb
insl
xor
es
fisttps
stc
pop
or
pop
push
dec
ja
call
jge
mov
scas
sub
cmp
mov
ficomps
xor
pop
cmp
xor
out
repnz
shrl
cmp
dec
push
add
jns
loop
in
or
imul
inc
xchg
lods
arpl
cmp
xchg
in
ljmp
xor
sub
pop
sbb
mov
mov
inc
push
lahf
arpl
cmpsl
mov
inc
jno
mov
iret
and
xchg
loopne
mov
js
ret
movsb
stos
xchg
push
mov
sbb
imul
xor
jmp
je
push
cmpsl
adc
adc
inc
push
add
xor
jnp
cwtl
mov
push
pop
dec
std
decl
xchg
popa
or
mov
cmc
adc
jmp
out
sbb
push
lret
push
sbb
dec
lock
xchg
dec
out
mov
adc
or
pop
stos
mov
outsl
dec
in
jmp
jl
stos
sbb
pop
cmp
pop
pop
sbb
push
pop
adc
or
ds
xor
data16
inc
pop
jne
shll
es
in
mov
rol
call
mov
push
mov
fstp
inc
mov
pusha
pop
jb
sub
mov
mov
mov
stc
sbb
jo
ficomps
and
and
adc
xchg
notb
pop
mov
ret
loop
bswap
cmp
mov
fsubr
call
cmp
mov
sbb
ret
jle
xor
pop
clc
fcmovu
and
jl
aad
pop
shll
clc
add
cwtl
dec
lcall
jle
out
pop
mov
shlb
popa
lcall
jne
lods
rcrb
mov
dec
push
sub
pop
js
je
fs
mov
fucomp
xchg
pop
pop
pop
push
mov
fwait
and
nop
cmpsb
mov
sti
sub
fs
in
mov
mov
or
mov
imul
mov
push
inc
repz
dec
into
and
das
xlat
jno
xor
repnz
sbb
mov
cld
jne
sbb
mov
pop
xor
arpl
mov
xor
push
das
leave
rcl
pop
cmpb
pop
std
clc
repnz
aad
xor
dec
jle
jp
cs
jae
xor
ret
mov
js
rcrl
fs
mov
or
imul
imull
in
mov
loop
cli
sub
jmp
incb
mov
loopne
cld
sbb
fmull
int3
pop
xor
cmp
dec
jae
mov
lsl
push
push
cmpsl
mov
pop
cmp
or
stc
test
cltd
sub
lahf
sbb
repz
xor
pop
test
scas
jns
arpl
mov
push
ss
mov
jge
ds
xor
mov
fldcw
sub
pushf
repnz
int3
inc
sub
iret
push
dec
dec
pop
test
or
hlt
sahf
sarl
dec
inc
sub
fisubs
add
add
push
jmp
mov
in
cld
mov
mov
push
jbe
xchg
mov
pop
or
jo
mov
lahf
and
aaa
xchg
push
jg
aad
push
xor
jnp
jmp
xor
mov
arpl
idiv
add
pop
mov
arpl
or
sub
jecxz
jno
xchg
loope
dec
out
ret
mov
mov
stc
jne
rol
fldl
imul
adc
ret
rol
dec
xchg
pop
pushf
mov
out
xor
mov
adc
jbe
pushf
lret
or
rorb
mov
push
and
pop
lret
fs
fsubrs
or
cmove
xor
aaa
pusha
jg
unpcklps
jmp
stc
fidivl
mov
enter
adc
lret
out
iret
out
into
in
pop
outsl
jp
loop
popf
popa
lods
frstor
movsl
xchg
xchg
sbb
cmp
xchg
call
popf
or
sub
roll
repnz
or
mov
lods
ret
and
pop
xorl
daa
es
jbe
dec
inc
and
adcb
cmp
addr16
dec
xchg
or
sbb
das
push
cwtl
cmp
dec
test
mov
push
mov
and
data16
scas
fdivrp
incb
std
sub
mov
cmp
out
sub
dec
in
jl
cmp
fstp
stos
inc
fnsave
jge
les
dec
cmc
push
pop
in
pop
jne
pop
add
and
or
mov
nop
xchg
leave
push
sbb
in
outsl
xchg
or
mov
stos
pushfw
adc
inc
aam
adc
inc
adc
movsl
mov
scas
loopne
movsl
out
repnz
lret
cltd
lretw
inc
test
lds
in
clc
jmp
int3
loope
mov
inc
add
push
pop
pop
xchg
cmp
shr
jno
xchg
mov
jo
jmp
lcall
in
push
mov
pop
lret
aam
xor
adc
popa
xlat
aas
stc
and
fldcw
das
test
cmp
test
or
imull
ret
ds
cwtl
movsl
mov
sbb
cmp
lahf
dec
outsl
js
rorb
mov
sti
xor
dec
or
push
xchg
movsb
and
cmc
jmp
jmp
negl
push
mov
outsb
push
adcb
ss
int3
or
push
cmp
jp
nop
in
movsl
out
std
cltd
dec
or
les
lcall
loop
mov
movsl
jp
mov
aaa
dec
repnz
mov
sub
jo
negb
pushl
lcall
std
push
xlat
push
sarl
mov
sub
jecxz
movsl
aad
xchg
adc
and
dec
xor
out
jae
mov
nop
mov
cs
imul
jecxz
scas
bound
repz
or
mov
dec
sub
sub
in
cltd
cmp
or
and
mov
mov
ret
and
mov
or
sbb
imul
loope
mov
sub
scas
adc
mov
mov
hlt
icebp
stos
imul
pop
inc
cmc
mov
test
mov
push
dec
in
and
stos
and
js
in
loop
ret
stc
lret
dec
pusha
inc
inc
push
cld
inc
clc
pop
pop
clc
fidivs
repnz
and
add
cwtl
aad
mov
mov
adc
mov
xor
mov
sahf
mov
add
stc
push
jp
push
test
out
jno
cmc
enter
adc
mov
push
stos
and
inc
dec
sti
call
cs
enter
jmp
adc
push
mov
fsubp
dec
xor
cmp
das
aaa
inc
xor
in
jne
cmp
xor
out
sub
mov
jp
es
lcall
cmpsl
and
sub
xchg
inc
das
pop
das
popa
leave
loopne
or
pop
loopne
add
popa
int3
mov
and
mov
adc
std
frstor
adcb
popa
dec
fs
js
push
dec
shlb
push
fdivr
ss
ljmp
test
mov
add
or
sar
fwait
jne
aas
ljmp
jecxz
adc
ret
lahf
stos
lret
mov
push
nop
ljmp
jb
shlb
std
shll
aas
add
mov
lcall
mov
sub
leave
scas
dec
jne
out
add
nop
std
bound
lods
pusha
and
jl
and
outsb
mov
xchg
lock
and
jmp
xorl
pop
ror
sub
das
xor
dec
pop
fstl
dec
mov
ret
push
je
push
sbb
sbb
mov
into
inc
dec
and
push
mov
jb
adcb
mov
sub
sar
cli
es
jge
cmp
ss
mov
std
push
or
scas
insl
sti
sti
jne
add
dec
inc
jl
nop
mov
or
out
lcall
fs
pusha
lret
aaa
lahf
mov
xchg
aaa
pop
std
icebp
pop
xor
lock
adc
lcall
sbb
add
dec
stos
imul
pop
js
addr16
jmp
pop
in
ret
push
adc
cld
lods
cmp
xor
pop
xor
push
dec
popf
in
xor
mov
lret
in
aas
xchg
inc
popf
mov
insl
out
cmp
imul
out
mov
sub
xor
dec
dec
sub
and
fistl
ds
jno
sub
aad
push
pop
xabort
mov
lret
mov
scas
mov
jnp
inc
aas
jno
testb
mov
mov
nop
sbb
cmp
pusha
dec
mov
xchg
add
imulb
push
sbb
out
xchg
pop
mov
adc
fcoml
movsl
xor
mov
scas
jne
and
andnps
rcrl
ret
push
cltd
sub
push
daa
mov
outsb
dec
mov
or
add
fdivrl
inc
fsubrl
lock
sbb
or
cld
xchg
dec
scas
les
cwtl
sbb
test
shrl
stc
loop
adc
jle
cmp
lcall
test
push
lret
cmp
lock
ljmp
fidivrs
push
xchg
dec
lret
lahf
repz
sbbl
hlt
fists
out
cltd
cwtl
dec
dec
push
adc
test
mov
inc
push
xor
pop
and
jmp
pusha
rolb
mov
shrd
and
insl
push
sub
mov
outsl
je
mov
or
mov
push
dec
xchg
xor
mov
int
and
add
aam
bound
std
adc
and
add
adc
loope
adc
mov
mov
dec
xor
lods
push
adc
xchg
cwtl
push
jno
dec
ficompl
push
nop
mul
lcall
insl
push
cli
add
imulb
in
repz
lds
fcompl
and
stos
lar
mov
push
xchg
lret
or
sbb
xchg
or
jbe
dec
insb
in
fstpl
mov
mov
add
pop
and
repz
mov
cmp
push
ficoms
cmp
add
mov
aad
sub
push
and
sahf
add
and
dec
adc
pop
add
jbe
pop
in
xor
inc
xchg
mov
pop
jl
mov
call
cmp
sbb
test
pop
stos
cmp
push
mov
rolb
and
add
or
sbb
and
and
push
adc
call
jge
xor
out
leave
xor
cmp
push
add
mov
lock
or
lods
mov
outsl
icebp
sbb
repnz
aam
test
pop
or
loope
or
mov
punpcklbw
inc
push
je
pushf
das
mov
jge
or
jae
cmp
mov
scas
mov
or
mov
inc
xchg
adc
dec
leave
and
cld
xchg
adc
das
mov
sbb
fsubrs
outsl
sub
adc
cmp
cmp
aam
push
cmp
cmp
jmp
or
xchg
jp
sub
enter
pop
dec
mov
xor
ja
lret
xchg
bound
dec
jecxz
sbb
add
test
sub
jb
sti
out
loope
cmp
dec
ljmp
flds
and
xor
inc
fs
jne
movsb
add
in
lods
stc
or
and
fildll
fildl
pop
out
fs
hlt
sahf
lods
nop
sbb
out
push
ret
jo
in
adc
dec
arpl
fcmovb
inc
cwtl
jp
les
mov
into
push
subl
out
mov
call
aas
add
mov
lret
aaa
sahf
inc
cs
rcrb
aad
jecxz
repnz
aaa
repz
pop
push
shll
int
cwtl
into
mov
sub
inc
xchg
sbb
addr16
push
push
icebp
xlat
inc
fwait
pusha
pop
setl
sub
lods
xlat
call
push
mov
mov
daa
xor
lret
iret
push
mov
mov
push
enter
aam
jp
call
mov
leave
dec
xor
into
xchg
mov
daa
push
mov
or
adc
std
jne
loop
mov
cmp
inc
and
lods
aad
mov
in
stos
ret
fisttpl
pop
aam
rcll
adc
call
mov
outsb
pop
adc
xor
pop
jae
cmp
adc
fimull
and
icebp
cmp
insl
rclb
add
pusha
icebp
sarb
cld
sbbb
repz
insl
inc
rorl
dec
mov
jne
fldt
clc
dec
inc
cli
fsubs
xlat
push
test
sbb
mov
rcrl
daa
sbb
jb
cmc
sarb
cmp
addr16
sbb
mov
dec
icebp
xchg
mov
push
add
daa
mov
imul
pop
add
scas
sbb
jg
iret
fisubs
mov
jb
es
lock
jbe
outsb
cmp
outsb
mov
pop
sub
push
cmc
ret
je
fs
jns
addl
adc
xchg
mov
inc
pop
fiaddl
adc
lock
ja
incl
cwtl
and
fdivrl
data16
pop
pop
pop
dec
clc
aam
xor
cwtl
inc
div
loopne
sub
cmp
jo
pop
roll
push
mov
xchg
mov
ficoml
cmpsl
stc
cmp
sbb
lcall
sbb
sbb
jo
ds
and
push
sti
push
dec
mov
cmc
dec
dec
fldenv
test
call
mov
jmp
mov
sbb
pushf
cmpl
idivb
jmp
push
or
fdivrs
xor
push
fwait
js
xlat
scas
ds
outsb
ss
or
cmc
loop
in
gs
ja
cld
imulb
pusha
sub
and
je
mov
gs
test
cmc
stc
ja
or
into
ret
addr16
in
subl
iret
or
mov
mov
dec
mov
insb
loope
sahf
data16
sti
xchg
dec
jg
scas
fs
add
sub
add
mov
dec
les
push
scas
repz
and
js
fldcw
ljmp
lcall
push
adc
pop
je
and
popa
insl
sub
es
mov
push
mov
inc
xchg
fsts
inc
and
push
stos
inc
xchg
cmpsb
push
push
sbb
sti
push
xchg
push
mov
push
mov
and
std
mov
cmp
negl
lret
xchg
mov
cmpsl
scas
sbb
or
mov
hlt
rolb
jmp
jg
push
cwtl
or
imul
jmp
insl
push
or
movsb
mov
jl
fwait
xchg
stos
cmp
fsubrp
sbb
mov
test
cmp
stc
decb
hlt
ja
fists
and
sbb
mov
jne
push
out
mov
pusha
lods
xor
clc
cwtl
ja
xorb
stos
jp
js
out
outsb
push
mov
int3
icebp
add
push
aaa
fwait
jns
das
sbb
adcl
jecxz
scas
scas
sub
sti
xor
loope
lret
cwtl
add
mov
dec
adc
mov
inc
mov
subb
fldl
es
cmp
xor
ss
test
pushf
dec
jp
loope
or
xchg
movsl
add
aaa
push
daa
cs
out
or
adc
rclb
or
push
dec
mov
mov
push
pop
and
notb
lods
call
sahf
jne
xchg
sbb
xor
incl
push
mov
mov
addr16
clc
mov
push
jnp
jae
and
in
add
out
mov
jl
lock
pop
pop
mov
sbb
xchg
or
cmpb
xchg
xor
sbb
frstor
enter
or
cli
test
adc
aas
mov
xor
sbb
xchg
push
push
nop
enter
xchg
xorb
cmp
enter
and
inc
dec
dec
xor
adc
or
adc
pop
pushf
fcmove
shll
in
mov
jnp
inc
repnz
testb
and
adc
inc
sbb
mov
test
std
mov
mov
dec
xor
or
imul
jp
stos
ljmp
cld
add
ret
sbb
stos
jmp
xchg
lret
dec
cmp
scas
add
inc
out
add
fsubrl
pushf
movsb
aad
stos
lods
scas
shll
or
or
jnp
aaa
pusha
or
and
mov
push
xor
push
adc
insb
inc
xor
push
test
xor
cmp
frstor
ja
sub
call
mov
orl
iret
cmp
lock
cltd
ljmp
fscale
movzbl
push
iret
imul
jg
lcall
lock
popf
iret
pop
adc
insb
xchg
sub
pusha
les
ret
cwtl
and
dec
adc
fcoms
jl
mov
out
xor
loope
adc
cmp
xchg
push
rorb
push
cmpsl
bound
mov
mov
adc
jp
mov
sub
scas
sbb
adc
adc
and
dec
xlat
fsubs
jo
arpl
xor
lds
stos
pop
push
inc
stos
xchg
xlat
fcoms
cs
stos
call
dec
ret
testl
insl
mov
xchg
or
xor
je
popf
inc
in
mov
cs
inc
stc
pusha
xchg
call
cmc
pop
cs
mov
enter
sbb
in
movsl
inc
inc
sbb
push
iret
mov
pop
push
movsl
push
xor
push
jmp
xchg
pop
iret
mov
in
xchg
sub
mov
ljmp
or
mov
dec
pushf
mov
xchg
imul
int3
negl
lods
pop
incb
inc
lods
lock
lcall
push
adc
mov
jnp
leave
mov
pop
cmpsl
push
mov
ljmp
inc
into
sbb
decb
aaa
insl
cmpsb
inc
jmp
lea
out
add
lods
mov
cmp
outsb
pop
das
fsub
dec
cmp
jb
jg
js
insb
es
subb
add
clc
dec
push
sub
sbb
ja
xchg
aam
adc
jmp
jp
mov
push
and
sbb
sub
jne
lret
in
or
gs
xchg
repnz
jg
fstps
call
hlt
mov
hlt
sbb
int3
test
iret
test
in
push
cmc
and
adc
inc
push
pop
ljmp
or
jae
shll
in
ret
cmc
mov
mov
pop
inc
sub
jns
mov
jecxz
gs
pop
divl
fwait
inc
shlb
pmaddwd
pop
jle
or
sti
cmpsb
xchg
lods
and
mov
popf
rclb
mov
adc
mov
stos
faddl
jb
push
rclb
add
lret
sub
add
les
ja
push
xor
scas
clc
xchg
stc
clc
mov
decl
or
int
push
adc
into
ja
sahf
cmpsl
push
mov
test
sarl
adc
add
adc
xchg
test
sbb
push
ret
in
notl
jle
mov
dec
cltd
jae,pt
sub
jbe
cmp
push
push
popa
jae
sbb
int
out
lock
cmpsl
cmp
mov
je
pop
xor
sarl
adc
notb
inc
dec
lahf
dec
push
push
addr16
sbb
push
dec
push
lock
jl
dec
popa
pop
subl
adc
jae
cs
ljmp
sub
shlb
mov
push
and
icebp
push
cmpl
mov
pop
jne
push
addr16
mov
imul
xor
pusha
lahf
mov
mov
test
out
mov
js
xor
jl
xor
xchg
cmpsl
repz
push
mov
jne
nop
add
xchg
adc
inc
stos
jge
cmp
cmpsl
cmp
xor
loop
aam
dec
scas
xchg
jecxz
rorb
in
sub
dec
adc
push
mov
adc
shll
xlat
push
inc
stos
fimull
sbb
cmpsb
daa
pop
cmp
inc
out
xlat
push
jae
dec
jg
dec
adc
xchg
or
test
fcomps
shrb
mov
mov
sbb
popf
std
aaa
loopne
adc
mov
test
dec
xlat
pop
rorb
loope
loopne
mov
mov
xchg
and
mov
xchg
push
jo
fwait
cmc
dec
out
pop
add
mov
stos
jge
imul
das
enter
jb
mov
cli
mov
xor
adc
jb
std
xchg
ficomps
xchg
mov
jecxz
xor
jnp
adc
inc
fmul
test
lods
adc
sub
jmp
test
dec
lret
mov
add
pop
push
sti
pushfw
and
jae
jg
negl
stos
insl
data16
das
call
mov
out
shrl
sub
jb
call
scas
xchg
pop
shrl
insb
mov
add
ds
js
sbb
mov
pushf
mov
inc
xor
out
xor
scas
fdivl
sbb
sahf
loope
xor
mov
xor
mov
add
outsl
xor
out
ljmp
popa
push
movsl
mov
dec
pop
mov
call
jno
jmp
cmp
mov
mov
aaa
xor
cltd
orl
loope
sub
mov
ds
data16
cmp
pop
xchg
stos
lret
imul
insb
scas
stos
inc
stos
adc
xor
loop
bound
sbb
dec
adc
inc
fisttpll
jmp
cli
mov
cmp
out
pop
aam
and
xchg
cli
in
or
push
xchg
cmpsl
sahf
or
cld
fsubrs
dec
fs
les
cmp
stos
xchg
jle
xor
enter
add
sub
push
adc
mov
movsb
ret
inc
xchg
insl
adc
jge
lock
scas
xchg
icebp
and
test
or
sub
mov
xchg
cmp
or
or
fimuls
test
jp
dec
xor
addr16
in
push
das
pusha
stos
mov
jnp
fisubl
sbb
pop
aam
neg
jne
mov
or
test
ret
jno
add
js
push
decl
nop
sahf
imul
stc
ja
addb
xor
adc
jle
pop
jnp
out
test
cld
fmulp
inc
cltd
and
hlt
icebp
mov
xchg
incl
mov
hlt
mov
pushf
out
jg
inc
stos
int3
push
clc
jmp
inc
sbb
dec
add
movsl
jge
hlt
fs
rorl
mov
or
jmp
push
out
push
ficoml
and
mov
mov
stos
out
sbb
cmc
push
mov
lret
arpl
jo
adc
imul
mov
in
cmp
ljmp
mov
bound
jl
xchg
ret
es
lods
or
daa
xchg
mov
inc
xchg
in
jl
lahf
mov
sbb
ss
cmpsl
out
cmc
in
bound
cmp
push
push
fimull
rolb
and
aad
xor
sub
inc
push
lcall
das
mov
jp
mov
add
adc
and
xchg
cmpsl
movsb
jb
push
jno
cltd
add
inc
lods
push
sbb
push
test
inc
jae
push
pop
les
ret
lret
div
sahf
pop
xor
jl
xchg
jne
jle
cvtps2pi
inc
lahf
mov
push
jae
pop
add
scas
imulb
outsl
jle
jl
push
ja
jmp
add
push
pop
les
clc
and
daa
loopne
lret
test
jp
mov
inc
jp
mov
mov
sti
cmp
push
movsl
hlt
xchg
sbb
hlt
push
mov
mov
scas
jbe
or
inc
mov
sub
push
push
dec
and
fdivrl
jp
add
insw
dec
sbb
lods
mov
xchg
in
push
sbb
sub
pushf
adcl
dec
aam
sbb
and
mov
sbbl
xlat
jmp
das
mov
fdivrl
in
and
xchg
sbb
sbb
js
cld
or
mov
pop
lea
loop
lds
or
movsl
mov
mov
xchg
mov
es
sub
xor
jns
out
addl
out
repz
dec
mov
pop
imul
inc
pushf
jae
out
pusha
cmp
sub
dec
pop
xchg
xor
into
add
arpl
out
add
cmp
jl
in
add
xchg
imul
addr16
pop
inc
out
fidivrs
mov
inc
mov
or
adc
mov
call
cltd
xchg
push
mov
sbbl
sub
cmp
lock
mov
loop
push
js
ds
xchg
push
pop
cmp
hlt
xchg
jp
mov
and
cmovbe
jno
xchg
dec
cmp
xchg
mov
imul
sti
xchg
push
sub
push
pop
mov
pushf
lret
push
cmp
mov
cmc
outsl
push
shrl
lods
xor
dec
clc
inc
and
mov
inc
xor
iret
jg
adc
dec
cltd
jnp
inc
jbe
lea
jno
dec
or
mov
adc
jp
mov
stc
push
xchg
cmp
dec
push
repz
sub
out
adc
in
subl
aas
jae
lahf
test
idivl
ret
or
sub
pop
mov
sbb
out
ds
enter
push
jae
int3
push
sbb
push
add
dec
pop
mov
lods
sub
popf
add
push
cwtl
lcall
imull
xor
xchg
xor
data16
dec
or
adc
mov
in
ret
out
push
jge
hlt
lock
xor
adc
and
pop
cmc
mov
sarb
dec
insw
sub
stos
pushf
xlat
mov
mov
daa
push
xlat
inc
push
inc
inc
pop
jae
mov
mov
jo
cld
mov
pop
mov
xor
fisubrs
scas
sub
push
pop
mov
fisubs
fldcw
test
in
in
mov
sub
cmpsb
add
mov
xor
icebp
loop
pop
add
inc
xor
pop
add
iret
cmpsb
insl
push
inc
out
cld
popf
xchg
pop
shr
shr
outsl
das
push
ret
je
sub
iret
imul
fisttpll
xchg
inc
sbb
add
xchg
loope
pusha
add
loop
lods
leave
sahf
jl
mov
push
push
pop
adc
mov
or
mov
sub
scas
pop
push
jg
ret
inc
xchg
push
pop
movups
sbb
orl
cmpsb
loop
dec
out
ja
ljmp
jg
das
push
jb
xchg
inc
and
decl
inc
shlb
mov
mov
jnp
imul
cmp
arpl
movsl
sbb
xchg
xor
jmp
mov
inc
sub
adc
jl
icebp
push
or
xor
mov
xor
and
inc
sti
cs
jg
int
shl
pusha
std
int3
and
cmp
jnp
adc
imul
fwait
into
jmp
xchg
xor
sub
data16
jecxz
jnp
pusha
inc
sahf
jp
lret
test
or
in
int3
push
xchg
or
mov
into
mov
sbb
gs
shl
sbb
mov
dec
fisubs
cmpsb
outsl
scas
or
jecxz
enter
jecxz
test
or
sub
sahf
or
dec
mov
call
lods
dec
xlat
sbb
gs
cmpsb
mov
dec
sti
bound
addr16
mov
int
pop
push
or
mov
push
cmpsl
xor
mov
sbb
push
mov
lds
int
mov
bound
dec
gs
js
inc
lock
mov
cmp
pop
push
mov
arpl
inc
pop
insb
push
sub
mov
lods
add
aas
and
xor
stos
add
pop
push
scas
sar
cmp
fsubs
jbe
rcr
cmpsl
xor
data16
sahf
pusha
inc
negl
xor
mov
sub
or
xchg
mov
enter
xor
push
jae
daa
cmp
pop
test
add
adc
adc
fldenv
inc
out
shll
jbe
lret
mov
fcom
add
clc
cs
pop
jno
mov
xorl
stos
in
pushf
cltd
adc
inc
test
sub
repz
xchg
dec
lahf
imul
loop
inc
xchg
sbb
sub
bound
dec
gs
cmpsl
int
xor
lock
lea
mov
pusha
pop
pop
enter
xor
push
test
sub
iret
sub
arpl
jle
cmp
cmp
and
sbb
jge
insl
mov
pop
push
dec
xchg
sahf
sbbl
cmc
loop
inc
stc
sbb
repnz
lret
bnd
mov
push
shll
jae
mov
xchg
adc
jne
mov
lock
fidivrs
cmpsl
pop
stos
sbb
dec
mov
jge
in
or
inc
dec
test
inc
fsts
scas
jle
or
pop
inc
inc
es
xchg
add
jmp
es
ret
dec
ss
lea
cmp
add
xchg
scas
sub
jne
sub
aaa
mov
dec
or
adc
stos
cld
repnz
insb
cld
dec
and
aam
xor
sbb
adc
subb
rorl
adc
out
inc
sbb
sarl
mov
out
repz
stc
in
or
js
je
jl
mov
inc
xchg
insl
aas
and
mov
fistpll
aas
mov
jmp
fimuls
fistps
xor
call
icebp
sbb
add
sub
cwtl
ljmp
stc
insb
cwtl
cmc
imul
je
xchg
inc
daa
lds
xor
ds
loopne
sub
popf
lds
test
sub
sarl
mov
xchg
lock
subl
testl
push
mov
mov
lcall
stos
jle
lret
loopne
out
xchg
mov
ret
jge
add
adc
dec
daa
stos
daa
ja
sbb
or
inc
or
adc
mov
add
push
das
push
aad
int
and
mov
sahf
push
test
push
inc
fsin
xchg
scas
and
stc
push
out
sarl
aas
xchg
xor
loope
les
sbb
repnz
jmp
xor
xchg
insb
inc
pop
cmc
pusha
pusha
fistl
mov
addr16
xchg
aaa
mov
mov
iret
xchg
cmp
daa
sbb
pusha
jle
out
mov
pop
sub
mov
icebp
and
adc
mov
clc
jae
das
dec
and
bound
adc
push
dec
jecxz
cmp
and
outsb
test
and
mov
test
adc
pop
das
sbb
and
dec
rol
shr
mov
loop
adc
mov
insb
ds
or
push
ljmp
aad
pop
clc
push
mov
subb
les
xor
inc
rcll
bound
jne
pop
into
jno
dec
idivb
cmp
scas
jb
iret
je
push
fcmovnu
adc
xor
push
les
mov
fldl
sbb
mov
call
call
mov
xor
push
mov
adc
adc
add
sub
mov
pusha
loope
ljmp
jns
and
mov
dec
sub
jp
mov
rcrl
cltd
push
stos
mov
push
jecxz
xchg
fsubrs
mov
xchg
sub
cmp
test
gs
or
mov
je
out
add
xchg
pop
jle
push
mov
push
fisubrs
and
call
rol
add
or
push
adc
mov
push
js
or
xchg
mov
inc
xlat
push
pop
cmp
mov
inc
cmp
sti
or
subb
sahf
xchg
loopne
sub
sub
mov
xchg
lods
xor
jbe
cli
xor
cmp
mov
int3
push
stos
mov
push
sti
outsl
and
sarl
adc
test
or
mov
and
or
mov
loopne
xor
and
and
sbb
and
mov
inc
insl
pushf
lea
imul
and
cmp
pop
in
cmpsb
xor
fidivrs
in
jo
pop
dec
arpl
insb
cmp
adc
popa
stos
je
dec
push
inc
or
les
dec
test
lahf
xchg
cmp
cmp
adc
mov
mov
es
inc
add
mov
sub
int3
rcll
sbbb
stos
jb
and
mov
pop
imul
or
fsubl
mov
xchg
mov
dec
movsl
push
jmp
icebp
lret
lods
cmp
xor
mov
js
mov
arpl
or
push
mov
sub
scas
lcall
inc
outsb
xorl
mov
xchg
xchg
push
pusha
inc
xchg
sbb
dec
ljmp
mov
es
lcall
mov
pushf
mov
inc
sbb
mov
pop
sub
or
movsb
push
jns
cltd
and
lahf
dec
rorl
and
data16
add
jns
sbb
daa
sub
fwait
or
lds
sub
cmp
add
call
mov
pop
xchg
insb
push
test
xchg
outsb
inc
imul
addr16
stc
sub
es
cmp
int
mov
pop
xor
in
shlb
lret
sbb
sbb
mov
adc
out
add
mov
push
lahf
add
push
jmp
cmp
xchg
sub
cmpsl
fldt
adc
mov
pop
xchg
add
popa
imul
push
pop
shrl
pop
fstp
pop
mov
fadd
stos
xor
mov
aaa
xchg
push
aas
fdivr
xor
cmp
pushf
shll
xor
sarb
push
clc
outsl
add
push
lea
cmp
mov
push
pop
adc
rorb
idivl
ficoms
popa
adc
daa
xor
adc
adc
or
add
pop
ret
sub
cmp
int3
mov
daa
pop
cwtl
cmp
in
push
mov
xor
dec
leave
dec
sub
pop
clc
cmp
dec
lret
jp
pop
fistl
dec
cmp
ljmp
fmull
inc
add
mov
insb
mov
push
pop
enter
jg
push
xchg
fadd
dec
xchg
frstor
loopne
vpunpcklqdq
ljmp
clc
movsl
rorb
pop
xor
sub
jae
adc
cmp
arpl
and
lret
inc
add
inc
pop
shl
lds
push
xchg
push
pop
and
fisttpl
test
cmp
pop
push
mov
fsubs
jb
mov
divl
mov
insl
lock
jo
ljmp
ror
inc
cmp
pop
jb
push
out
cmp
pop
push
adc
adc
push
xchg
mov
push
sbb
dec
in
int
xchg
mov
cwtl
movsl
sub
pop
sub
add
xchg
pop
dec
aam
cmp
push
testl
insl
mov
adc
sub
jbe
jnp
fwait
ret
xchg
mov
movsb
stos
dec
mov
or
jae
in
aas
fisubl
rcr
aaa
dec
fwait
stos
out
fiadds
sbb
xchg
jnp
fistps
mov
adc
popf
outsb
inc
xor
pop
push
insb
and
fwait
out
lcall
loop
sub
mov
out
stos
cld
add
or
in
cmpsl
cwtl
push
cmp
iret
pop
nop
push
mov
push
mov
lods
repz
stos
push
test
dec
adc
stc
sub
xchg
and
pushf
sub
mov
pop
repnz
cld
aaa
es
fs
sub
enter
and
sbb
sbb
and
or
mov
xchg
ljmp
mov
pushf
push
sub
cmp
lds
lret
adc
int3
xor
aad
in
out
jno
fistl
lock
mov
add
xchg
xchg
fmul
xchg
push
xlat
xor
mov
in
les
xchg
cmpsb
or
push
cmp
xorl
lds
pop
cmpsl
arpl
call
loopne
dec
pop
jmp
test
rclb
xorl
inc
sarb
mov
push
dec
lock
cmc
push
jle
push
js
cmp
cmp
adc
imul
icebp
cld
dec
sbb
aas
fcomps
fwait
push
ja
push
aad
cmp
negb
in
decb
js
mov
sub
adc
test
pop
and
fidivrs
adc
pop
jnp
dec
push
int3
adc
jne
mov
je
in
push
flds
lods
test
sbb
hlt
pop
push
sub
repz
push
dec
gs
popa
sub
in
js
push
fistps
dec
psrlq
icebp
fs
in
pop
dec
arpl
jns
mov
mov
cltd
dec
pop
cmpsl
push
xor
dec
shlb
xchg
jno
mov
fistl
aaa
xor
cmp
mov
lods
out
out
filds
mov
ljmp
into
scas
call
fnstenv
insl
xlat
jp
subl
adc
les
lea
lock
mov
sti
into
pop
insl
xor
xchg
jb
add
sahf
mov
add
add
pop
es
insl
andl
or
repnz
or
loop
mov
insl
repz
lret
pushf
push
out
adc
add
jmp
movl
mov
jle
dec
add
pop
xor
pusha
loopne
sub
ljmp
sub
cmp
insl
inc
dec
pop
mov
and
pop
adc
inc
fstl
iret
sahf
fwait
into
cmpsl
cltd
inc
mov
ds
cmp
aad
add
pop
loopne
cs
repz
adc
adc
in
nop
adc
aad
sub
add
mov
aas
or
push
test
cmpsb
popa
jl
aam
popf
cwtl
lahf
and
movsl
push
popa
sbb
xchg
sarl
filds
sahf
jl
dec
popa
sbb
xor
add
dec
dec
jnp
mov
or
push
lcall
push
lret
das
xor
inc
movsl
mov
ret
int3
out
rcl
xor
dec
cltd
pusha
and
aad
decb
popf
inc
iret
inc
repnz
shlb
imul
arpl
imulb
dec
push
out
add
jo
add
add
pop
popf
jp
sub
loope
pop
jl
mov
hlt
orb
push
or
cmpsb
imul
cmp
cmp
sub
xchg
fsubrs
mov
loope
clc
aad
jo
xchg
in
mov
aas
cmc
mov
push
loope
ret
jo
xchg
aas
test
jl
sbb
sahf
in
lahf
jnp
pop
or
mov
adc
icebp
mov
sbb
fwait
js
das
sarb
and
push
xchg
hlt
out
into
fcomps
adc
ja
jnp
test
syscall
sarl
push
add
push
add
repz
loop
add
mov
je
popf
loope
fwait
cltd
add
jne
lret
mov
cs
fwait
sub
mov
sbb
mov
je
faddp
dec
in
jno
enter
dec
inc
jbe
sub
push
mov
add
test
test
dec
pop
xchg
push
shrl
and
xor
lcall
inc
jle
jae
xchg
xor
cmpsb
enter
out
push
outsl
sarl
mov
pop
push
mov
in
add
and
sahf
nop
mov
dec
sbb
out
std
inc
icebp
subb
pop
sti
aam
jae
sub
out
es
shlb
ss
shlb
add
jle
mov
repz
cmp
mov
pop
js
pop
jp
or
enter
push
call
ja
xchg
sysexit
adc
pusha
inc
add
adc
cmp
iret
cwtl
test
mov
das
mov
stos
jne
loopne
and
inc
or
pop
jp
cli
mov
mov
jmp
sbb
rcr
ret
int
insb
or
pop
pop
jle
fistl
or
das
movsl
add
sti
int
pop
lcall
hlt
test
xchg
cli
into
xor
mov
sbb
sub
test
cmp
dec
jne
xchg
lea
adc
add
mov
xor
popa
repz
insl
pop
lea
outsb
mov
sub
xor
int3
out
enter
inc
xchg
mov
xchg
loopne
inc
lds
sbb
jecxz
sub
pushl
hlt
dec
cwtl
insb
clc
dec
push
sub
push
dec
in
enter
cltd
and
cld
sbb
int3
fidivrs
ss
addr16
aad
dec
mov
data16
xchg
xchg
cmp
cmp
mov
sbb
mov
xchg
repnz
sarb
cmpunordps
push
push
ja
daa
daa
jmp
or
cmp
xchg
fdivs
lods
xlat
sbb
loopne
imul
xchg
call
inc
push
or
xchg
aad
call
fcoms
bound
test
inc
imull
mov
fs
arpl
cmpsl
cmp
sahf
test
inc
leave
mov
push
add
cs
sub
jle
mov
xchg
dec
adcb
cs
xor
adc
mov
es
mov
cs
call
test
or
pop
repnz
call
xor
insb
out
sbb
lock
movsl
in
movsb
xchg
std
int3
jnp
push
in
iret
push
aas
or
pop
push
jle
push
scas
xchg
push
cmp
add
arpl
scas
insl
sbb
adc
fdivr
ret
mov
mov
sbb
out
cmp
or
cmp
xor
push
lret
ds
sbb
cld
hlt
and
rol
push
mov
adc
das
mov
or
ss
mov
xor
dec
cmp
add
xchg
test
rol
arpl
jnp
or
add
and
out
push
scas
aad
or
repnz
lcall
lock
rolb
arpl
imul
shll
xchg
clc
es
push
mov
pop
mov
cmc
cmp
in
int3
mov
ja
sarl
aas
in
xchg
fsub
or
sarl
mov
cmp
insl
ja
cmp
mov
pop
les
lock
scas
push
mov
xchg
dec
mov
sub
fldl
int3
repz
inc
jo
push
adc
push
xchg
sbbb
adc
inc
outsl
mov
adcb
pop
es
mov
in
shl
jmp
jne,pt
xorb
repz
adc
nop
cmp
rcrl
push
lahf
popa
jmp
push
sbb
xlat
ljmp
push
xchg
sahf
test
mull
fimull
arpl
bound
pop
ret
daa
sub
pop
imul
push
ljmp
roll
lret
xor
mov
mov
sbb
inc
inc
mov
dec
mov
dec
pcmpeqd
negl
mov
fchs
pop
sahf
iret
fisubrl
add
enter
adc
add
mov
fwait
cmp
mov
ret
mov
jmp
mov
std
jae
jne
jnp
dec
fcoms
cmp
mov
fidivrs
js
cmp
push
mov
arpl
pop
stos
inc
xlat
adc
pop
mov
adc
cld
in
mov
push
divl
mov
add
fstpt
mov
or
xchg
pushf
cmpsb
pop
loope
testb
inc
imul
or
out
dec
out
fsubs
sbb
xchg
sbbl
mov
pop
ljmp
subl
cs
rorb
or
pop
iret
jnp
out
rorl
popf
test
aas
mov
adc
mov
sbb
xchg
shl
add
jbe
mov
js
mov
std
push
mov
lret
jo
cmpl
lea
std
int3
xchg
fnstenv
push
sbb
push
cld
mov
xlat
js
std
push
cmp
int
cmp
adc
mov
pop
ret
inc
ljmp
mov
xor
mov
jp
jg
out
sarl
push
lods
in
xchg
mov
test
mov
and
frstor
cmp
mov
inc
in
mov
pop
outsl
or
add
test
pop
sub
clc
data16
inc
jmp
ficoml
call
xchg
inc
dec
cs
dec
aaa
add
adc
push
adc
or
aad
pop
push
scas
sbb
pop
xor
cli
jl
cmp
push
test
pop
jp
es
sahf
rcl
jg
ds
xor
aam
mov
inc
aad
or
xor
and
inc
std
pop
in
lds
pop
xchg
xorl
movsl
cld
cli
test
out
push
jo
mov
ljmp
sbb
jmp
mov
mov
push
cmp
jle
test
inc
jno
stos
addb
inc
insb
sbb
cmpsl
dec
adc
mov
icebp
or
sub
dec
mov
cmpb
cmp
push
inc
out
mov
fmul
hlt
sub
mov
stos
mov
jno
leave
inc
pop
test
sbbl
shlb
pop
lea
inc
jne
xchg
push
xor
nop
std
and
xchg
pop
leave
mov
imul
push
push
inc
aaa
fstps
push
add
mov
push
sbb
mov
in
lcall
inc
sbbb
enter
adc
pop
push
fstpl
notl
mov
test
cmp
jmp
test
jg
xchg
add
fwait
pop
sbb
in
mov
sbb
mov
jb
cli
add
rcr
addr16
jne
jge
xlat
mov
xchg
sbb
and
mov
fsubrs
push
cmpsl
scas
sub
add
clc
ja
sub
and
jle
dec
or
sub
xchg
cmpsb
dec
int
push
xor
add
fwait
ja
jnp
aas
in
addb
sub
add
dec
push
in
stos
pop
insb
test
dec
jp
cmc
adc
inc
rcrl
filds
xchg
stos
pop
sub
pop
mov
outsb
cmpsb
jne
mov
xchg
test
cltd
xor
pop
ficomps
int3
aas
push
cmc
gs
inc
jmp
xchg
hlt
jo
or
test
push
aas
mov
adc
pop
xor
add
fs
das
insb
dec
das
add
dec
inc
syscall
add
push
jecxz
xor
mov
or
enter
push
stc
leave
or
push
test
mov
inc
out
jne
push
cld
jmp
in
out
hlt
add
bts
mov
fucomp
lahf
push
push
or
dec
push
mov
mov
cmp
mov
add
sub
imul
mov
int3
push
frstor
adc
lret
sub
enter
lds
push
jle
js
nop
aad
cmpsb
jno
xchg
inc
mov
ljmp
nop
addb
sbb
cmp
and
and
mov
out
dec
mov
dec
dec
dec
repnz
or
push
push
popf
stos
dec
jne
pop
mov
loopne
std
push
fwait
adc
shrb
fwait
clc
lea
mov
cmp
mov
adc
pop
lea
je
sub
test
add
jae
sub
sarb
cmp
scas
mov
repnz
mov
leave
jp
iret
jp
fstpt
mov
test
icebp
mov
aas
je
jbe
xor
arpl
loop
out
push
mov
pop
mov
testl
enter
int
dec
pusha
pop
pop
fmuls
push
xorb
dec
pop
js
rorb
dec
data16
sahf
jp
test
mov
out
jne
fsts
pusha
nop
fcomp
je
jb
shll
xchg
fstpl
push
mov
adc
in
mov
push
sahf
stos
push
xor
adc
mov
cs
movsl
add
popf
outsb
test
aas
loop
outsb
jnp
and
sbb
mov
sbb
pop
lods
lahf
mov
lret
shr
mov
lods
jmp
jbe
add
and
shrb
sbb
and
adc
dec
andl
pop
and
gs
and
cmpsl
ret
push
ljmp
sub
cmp
mov
je
xchg
out
neg
loopne
es
cmc
add
cmp
bound
sub
xchg
test
push
push
xchg
cmc
mov
fcmovne
dec
pop
push
fwait
jbe
xchg
icebp
ret
call
outsl
inc
pop
repz
dec
arpl
lds
out
mov
repz
sahf
pop
push
inc
jns
gs
aad
ficoml
mov
and
cmp
idivb
mov
jo
sbb
xlat
jns
inc
push
cmc
movsl
add
pop
stos
cmpsl
fldcw
les
mov
jle
test
js
mov
push
repz
or
imul
or
hlt
push
cmpsl
in
mov
lcall
adc
out
and
mov
shlb
dec
push
dec
mov
outsb
fsubrl
jl
mov
loope
inc
adc
add
pop
xchg
cmp
lret
mov
add
sbb
cmp
sti
inc
ret
stos
fiaddl
mov
or
into
inc
mov
jl
xchg
fildll
imul
lahf
pop
aam
cld
popa
mov
ljmp
int
push
aam
xchg
cltd
dec
das
lret
mov
jnp
push
mov
je
lret
in
ret
sti
and
mov
or
shr
roll
orl
ljmp
repz
movsb
dec
andb
iret
adc
imul
cmp
mov
jle
jae
lea
push
lods
push
scas
nop
lcall
pop
stc
in
repz
hlt
mov
dec
aas
dec
mov
xor
mov
ds
scas
sbb
es
adc
cltd
sub
insl
sahf
loopne
push
cmpsl
or
mov
mov
jmp
leave
stc
jne
data16
mov
push
and
cmp
cmp
fstps
rclb
je
mov
mov
mov
scas
je
js
into
adc
mov
push
loopne
ljmp
mov
and
xor
out
pop
bound
cmpsb
xchg
and
push
cmpsl
sub
push
scas
aaa
inc
imul
pop
sub
lock
jae
mov
jl
or
data16
data16
sbb
movsl
scas
push
sbb
mov
mov
lods
cmp
addr16
fisubrl
int3
daa
out
sti
or
lods
push
repnz
cmpsb
pshufw
les
inc
cmp
icebp
sahf
je
push
repz
add
jo
jbe
mov
adc
int
jne
cmc
sbb
pop
movzwl
les
cmp
lods
inc
movsb
sub
mov
and
scas
leave
xchg
cmp
sbb
cld
daa
dec
sbb
loopne
xchg
or
rep
lods
ja
dec
add
mov
or
notl
sbb
cmp
movsl
push
jecxz
sub
sbb
xlat
add
sub
push
mov
jecxz
adc
and
adc
aas
fstps
ds
mov
mov
sub
lahf
leave
sbb
rclb
mov
out
xor
outsb
out
fldenv
dec
lcall
mov
sub
add
rcl
or
in
adc
andb
xchg
jmp
pop
xor
jnp
popf
or
pop
mov
add
add
or
sbb
cld
stos
mov
lcall
cmc
cmc
or
cmpsl
sbb
xor
or
movsb
dec
add
xchg
rcll
adc
idivl
sbbl
ljmp
jmp
outsb
or
and
pop
mov
xchg
sbb
fucomp
hlt
loope
std
xchg
xor
movsl
jns
or
cmp
dec
sahf
subl
xchg
xchg
adc
jns
mov
jmp
daa
fnstsw
lret
push
cltd
push
pop
jb
or
lods
shll
or
ret
add
imul
cmp
loope
push
shrb
xchg
cmpsb
adc
sahf
scas
and
dec
insb
dec
xlat
les
xchg
lret
lahf
outsb
sti
sub
das
cmp
movsl
icebp
jo
std
cmpsb
jns
xlat
dec
cmp
cmp
test
mov
jge
inc
fldpi
sbb
lcall
inc
push
cmp
cmp
movsb
das
jns
xor
aad
push
push
incb
add
mov
mov
loopne
sub
shl
decb
ja
fnstcw
dec
leave
ss
xchg
dec
test
mov
out
addr16
fistpl
jno
xchg
out
popa
xchg
inc
dec
hlt
sbb
dec
lods
neg
cmc
push
jb
fsubp
mov
lret
adc
gs
addr16
pop
fildl
incl
shll
dec
stc
xor
inc
stc
pop
imul
imul
sub
jbe
xchg
cmp
dec
loope
push
inc
xchg
mov
and
nop
lock
cwtl
or
xor
pop
mov
mov
std
bound
lahf
pop
jmp
mov
mov
inc
or
push
push
gs
jno
adc
push
pop
ds
hlt
cmpsb
repz
add
push
cld
push
fs
mov
xchg
jno
pop
cmpsb
popa
and
clc
inc
or
and
addl
inc
ret
bound
loop
int3
and
mov
add
jmp
mov
add
mov
inc
pushf
xchg
rorl
inc
cwtl
xchg
mov
sbbl
and
push
mov
hlt
iret
cmpsb
hlt
test
xor
lds
rcll
jno
xchg
sbb
aam
lea
sti
pop
inc
or
loop
ss
pop
rorb
jmp
inc
flds
lds
fwait
pushf
cmpsb
lock
xchg
mov
outsb
adc
cs
imul
ss
xor
push
lahf
test
push
sub
push
gs
aad
push
std
decb
inc
andl
leave
or
adc
stos
mov
pop
mov
mov
js
enter
jge
fstl
js
fcompl
ret
inc
into
js
add
aam
test
xor
xchg
mov
jp
aam
sbb
dec
repnz
push
push
mov
pop
cwtl
mov
xorl
and
xor
or
call
jp
rcll
add
sbbl
iret
xchg
jns
lds
push
pop
mov
xor
xchg
jg
push
fidivrs
cmp
and
test
mov
jecxz
xchg
mov
je
dec
and
mov
pop
ret
cli
xor
icebp
cld
ret
push
add
adc
xlat
dec
inc
mov
pop
cmp
sbb
adc
sub
jmp
roll
sub
xor
push
les
xchg
and
cmp
add
js
js
out
fbstp
out
pop
sahf
es
push
add
ficompl
cmpsl
push
lock
xchg
ret
fisubs
add
imul
cmp
sbb
jnp
iret
jl
icebp
add
ret
lahf
lahf
imul
sub
mov
fnstcw
cmc
dec
scas
data16
cmp
addb
pop
test
fsts
dec
fwait
cmp
lds
jp
xor
rcr
mov
loop
jbe
rcrl
cmp
cld
pop
mov
imul
stos
xor
jne
imul
sub
adc
jge
push
shrl
mov
rol
jno
sbb
sbb
stos
fdivl
sbb
mov
fistpll
lahf
call
xor
call
sarb
loopne
xor
adc
jbe
pop
cmp
add
xor
add
and
pop
pop
shl
sub
pop
sub
ss
sbb
dec
xchg
inc
dec
movsl
dec
and
jae
popa
in
mov
sbb
scas
rorb
rolb
xchg
cmpsl
pop
adc
adc
mov
and
mov
mov
imul
daa
shlb
ffree
push
adc
fwait
or
xor
push
mov
je
into
jge
mov
rcl
addb
pop
sbbl
dec
inc
xchg
xor
rclb
jne
lret
or
mov
rclb
xchg
in
sti
or
out
push
pop
push
pop
mov
iret
js
lahf
jl
les
repnz
or
shrl
xchg
imul
enter
dec
add
leave
cmpsb
mov
cmpsl
loope
jl
pop
mov
pop
movsl
adc
mov
sbb
xchg
cmpsb
jl
and
add
pop
push
xlat
pop
dec
jb
in
xchg
f2xm1
cs
stc
mov
xchg
ja
loop
dec
mov
stos
es
sahf
pop
or
andl
and
repnz
gs
iret
pop
notl
stc
and
push
outsb
ja
addb
xchg
incb
adc
repnz
mov
stos
xor
ficomps
jmp
mov
imul
mov
subl
mov
stos
pop
ja
addb
sbb
sub
clc
shll
test
mov
push
pop
push
addr16
iret
lds
add
jb
xlat
out
xor
aas
xor
push
out
test
fstl
pop
sub
xchg
clc
aas
bound
dec
xchg
pushf
lods
mov
push
and
daa
fbstp
js
les
xor
xchg
and
mov
call
fistps
jnp
xchg
mov
test
pop
pop
sub
cld
scas
jg
mov
xchg
jnp
mov
push
rorl
sarb
jl
mov
js
in
mov
fildll
xchg
shll
dec
fcmovne
push
cmp
mov
mov
iret
jo
xchg
jae
sarb
adc
pop
cmp
icebp
cmp
pop
inc
xchg
int
fdivp
cmc
negl
std
sub
test
leave
rol
ja
dec
xchg
cli
ficompl
int3
add
fidivl
cmpsb
pusha
sbb
sbb
imul
push
cmc
sub
push
mov
fimuls
inc
push
mov
inc
dec
int
inc
nop
ds
loope
out
pop
cmp
pop
popa
mov
fldt
in
jmp
add
and
inc
orw
arpl
stos
lret
pop
push
aas
mov
shl
or
sti
aaa
mov
clc
dec
decb
test
adcl
fidivl
clc
lcall
jg
push
nop
dec
lar
sbb
mov
xchg
test
loopne
popf
and
in
pop
add
sub
cwtl
rorb
lods
rcll
call
mov
sbb
pmaxub
fsubrl
cmc
xchg
ja
adc
rorl
push
xor
scas
jns
scas
mov
rcrl
sahf
stc
and
sahf
mov
xchg
push
out
inc
shll
pop
mov
dec
fwait
and
jnp
mov
fabs
dec
and
mov
insl
div
mov
mov
sub
fimull
push
inc
add
jmp
xchg
xor
ljmp
mov
sub
jge
xor
in
hlt
das
ds
sahf
mov
push
ds
add
clc
call
fistpl
es
mov
dec
sub
mov
mov
push
dec
lock
movsb
xchg
jle
aam
cmp
sub
test
mov
dec
sbb
and
in
cmp
sarb
xchg
adc
or
mov
addb
xor
mov
stc
cld
pushf
push
arpl
insl
jecxz
mov
out
add
push
roll
unpckhps
sub
add
mov
ret
xorl
pop
or
push
rcr
add
pop
sahf
and
sbb
cmp
aam
out
jge
aas
int3
imul
stc
mov
or
dec
lods
cmpsb
loop
movsl
aas
xor
or
iret
stos
inc
cmpsb
lea
dec
jno
push
fisttpll
clc
leave
or
dec
icebp
xchg
mov
pop
inc
ret
mov
loop
cltd
ljmp
out
dec
push
das
mov
fsubrl
ja
ss
mov
or
out
aam
mov
cmp
jecxz
cmpb
and
adc
vcvtsd2si
repnz
mov
and
push
cmp
dec
pop
loop
ss
or
arpl
in
out
cli
add
pop
cwtl
cld
or
pop
sahf
inc
inc
inc
gs
or
rcll
mov
stc
inc
adc
lock
call
nop
fcomps
sbb
sti
xor
sar
push
adcb
push
xor
fmuls
cmp
sbb
rorb
xchg
xchg
xchg
jb
mov
xor
es
ljmp
pop
push
jge
fisttps
shr
pop
cmp
in
cmp
lcall
and
xchg
sub
rorl
sbb
mov
mov
sbb
push
sub
pop
mov
rcrb
orb
sbb
sbb
ds
pushf
mov
xor
add
mov
fsubl
lods
mov
adc
cltd
jmp
mov
mov
fdivs
push
icebp
add
icebp
xchg
out
pushf
mov
test
inc
sbb
sti
xchg
jae
arpl
ffreep
repz
pop
insl
xchg
pop
arpl
iret
mov
icebp
cmp
fcmovne
jmp
jns
and
in
cmp
aad
mov
dec
jmp
fwait
in
push
icebp
in
add
pop
mov
xchg
in
cwtl
xor
mov
mov
adc
adc
xchg
xchg
pop
and
push
xlat
mov
mov
jle
popa
inc
fsubrs
in
xchg
add
or
dec
movsl
sti
test
sub
inc
aam
sbb
testb
fdivs
pop
vmwrite
mov
xchg
fwait
jne
or
xchg
mov
inc
hlt
sbb
daa
mov
dec
ds
test
popf
aam
cmpb
jno
int
mov
cs
lret
subl
arpl
enter
aam
mov
mov
loopne
inc
ljmp
mov
je
pop
mov
shrl
mov
xchg
sbb
test
aaa
hlt
push
hlt
es
mov
ja
lds
jo
pop
movl
jbe
jp
push
sub
xor
popl
dec
push
push
fstp
mov
sbb
push
mov
lds
cmp
lods
sbb
fdivl
xchg
sub
mov
mov
fwait
xchg
mov
pop
mov
xor
mov
add
mov
in
and
rol
push
jbe
outsb
outsl
xchg
adc
hlt
jb
sub
xor
xor
xor
cmp
inc
inc
cmpsb
fisttpll
cwtl
add
subb
sub
int
sbb
gs
jbe
fdivrs
and
xor
or
xor
inc
xchg
ret
das
push
add
cs
and
sbb
xchg
push
shl
pop
push
and
test
xchg
xor
mov
or
negl
jb
in
add
push
imul
ret
jp
in
rcrl
in
jmp
jle
insb
popf
jns
push
jae
xor
loope
cmp
xlat
xchg
or
ljmp
jecxz
adc
stos
xchg
clc
fdivrl
or
insl
dec
or
lret
xchg
mov
sub
push
loopne
jo
leave
pop
pop
xor
mov
rcr
xlat
out
and
xor
adc
add
test
add
pushf
pop
jo
sub
mov
sub
mov
inc
pushf
pop
popf
test
mov
aaa
aam
mov
pop
xchg
fldl
push
scas
mov
mov
je
lds
sbb
fnstsw
clc
repnz
pop
inc
sbb
adc
push
add
std
nop
call
sbb
pop
dec
cmp
xorl
cli
push
sarb
sbb
jle
dec
hlt
mov
rolb
mov
rorl
or
outsl
sub
xor
push
jecxz
pop
jle
jo
pop
fcomp
mov
insl
jp
adc
mov
sub
mov
adc
movq
test
and
or
and
in
je
add
mov
lcall
ret
sub
std
arpl
fwait
iret
fcmovne
sbb
mov
mov
pop
pop
adc
mov
jmp
sbb
dec
sbbl
lods
push
seto
in
in
xchg
xchg
dec
sbb
fisttps
and
int
test
mov
push
push
insl
ret
jo
test
push
jge
mov
push
sbb
adc
ret
xchg
pop
jns
loopne
hlt
loopne
and
cmp
add
and
mov
notl
add
call
jge
xchg
test
lcall
pop
loopne
push
mov
fsts
push
mov
push
and
shrb
pop
call
xor
sub
jne
pop
fcmovu
out
int
adc
outsb
xor
nop
adc
fstl
jg
pop
out
lret
xor
push
scas
fucomi
cmc
arpl
insb
lods
xchg
push
sbb
lods
cld
lcall
test
shll
adc
push
adc
jecxz
popf
scas
sub
loope
add
lods
loope
jne
dec
aad
ja
fnstenv
shlb
inc
iret
daa
negl
push
in
adc
aaa
movsl
adcl
jge
sbb
and
mov
mov
xchg
sub
push
pop
fildll
ss
cs
adc
js
lret
sbb
cli
mov
stos
add
push
push
loop
push
cmp
jnp,pn
aaa
adc
mov
adcl
pop
shll
in
adc
sbb
mov
lret
lret
jns
push
add
mov
push
movsl
fsubrl
or
xlat
cmpsb
push
pop
clc
imul
stos
test
add
jl
adc
cli
dec
popa
fidivrl
jmp
fnstsw
enter
out
pusha
inc
pop
insb
cld
xchg
sbb
negl
xchg
insb
bnd
repnz
and
mov
push
sub
dec
adc
scas
inc
push
adc
insb
sub
test
xchg
and
jmp
push
inc
lds
mov
mov
adc
loope
or
ja
add
loope
xor
fistpll
mov
cmp
sbb
movsl
out
movsl
push
test
pop
or
mov
sbb
cmpsl
mov
jecxz
xchg
xor
pop
pop
decb
aad
aas
mov
cmp
out
cmp
dec
fidivrs
xor
mov
adc
cmpsb
sub
test
cwtl
cmp
mov
xchg
test
or
xor
or
loopne
aas
lret
or
shll
xchg
xchg
jl
aaa
adc
xchg
and
or
adc
into
cmp
fadd
jecxz
mov
stos
fs
lcall
and
dec
jno
int3
lods
pop
dec
inc
test
daa
jbe
stc
test
arpl
scas
mov
or
mov
bound
outsl
xchg
loopne
add
sahf
movl
mov
test
cmp
stos
cmpsl
outsl
push
push
test
jns
inc
mov
loope
or
add
out
mov
mov
js
sbb
cltd
add
mov
dec
dec
test
cmp
into
mov
sbb
fisubrl
dec
push
mov
add
and
or
add
xchg
cmpsb
cs
shlb
dec
ljmp
fbld
jns
stos
js
mov
and
xor
imul
push
cli
jae
enter
lods
jb
das
scas
adc
xor
shl
add
adc
xchg
loop
inc
sbb
pop
aam
mov
jns
dec
popa
dec
add
jmp
out
sahf
aas
mov
jge
sbb
cmpsb
gs
mov
shll
rcrl
icebp
call
aaa
cld
clc
push
or
add
hlt
in
sbb
mov
push
inc
pop
mov
or
cmpsb
mov
sub
cwtl
adc
sahf
sub
pusha
not
cmp
sahf
stc
pop
testl
std
and
add
xchg
popa
outsb
jo
pop
add
loope
push
add
pop
lcall
pop
arpl
outsb
mov
and
pusha
pop
nop
add
int3
add
cmp
and
int
mov
push
inc
lods
clc
outsb
fmull
loope
in
xchg
stos
nop
cmp
mov
dec
sub
inc
inc
test
jmp
sub
leave
lret
daa
or
mov
mov
adc
xchg
mov
or
outsl
push
push
add
shrl
or
lret
pop
adc
xor
fs
dec
ja
and
aam
rclb
pop
lock
les
jnp
jmp
pop
testb
mov
lods
sub
mov
lock
sub
rclb
xor
xor
jmp
movsb
xor
and
pushf
jecxz
inc
xchg
or
jbe
mov
lcall
cmpl
jo
mov
test
outsb
in
js
jbe
sbb
fidivl
nop
notl
mov
popf
and
stos
jo
dec
xor
popa
or
addr16
inc
cmc
stos
loopne
or
fildl
inc
lods
in
pop
mov
cmpsl
cmp
movsb
and
pop
insl
jge
inc
or
mov
outsl
xor
lret
jg
xchg
cmpsb
push
mov
fidivrl
pop
loop
jp
jmp
push
add
xor
dec
in
je
and
rclb
jl
popa
pop
in
outsb
cwtl
inc
lods
loop
jl
xchg
mov
pusha
dec
icebp
sahf
shr
call
inc
add
or
jo
stos
popa
push
cmpsb
test
push
mov
mov
int3
mov
or
cmp
add
or
lods
imul
aam
cli
std
rolb
jge
cmp
mov
adc
lds
test
and
jne
mov
mov
aam
pop
stos
xchg
fidivrs
cmp
repnz
jecxz
xor
xchg
movsb
jge
das
pushl
add
sahf
cmc
xchg
jmp
sarb
leave
or
mov
dec
insl
aas
sbb
addl
adc
hlt
mov
and
sub
pop
jbe
and
mov
dec
scas
adc
fwait
hlt
loope
aam
sub
xor
mov
push
add
cltd
or
stos
cmp
xor
pop
adc
pop
fwait
mov
or
insb
sub
stos
pop
mov
mov
xor
dec
xor
enter
adc
sub
cmc
fcmovbe
mov
std
cmp
repz
lcall
pushf
mov
dec
mov
pop
mov
insl
xor
mov
out
or
data16
mov
mov
mov
inc
aad
pmaddwd
es
mov
ja
ljmp
gs
shlb
sbb
push
jmp
and
jo
les
inc
aaa
test
call
je
insl
sub
test
lods
dec
sbb
test
mov
push
addl
add
adc
enter
cli
mov
xor
cmc
mov
mov
inc
cmc
lds
sbb
stc
in
cmc
xor
in
adc
jno
inc
jae
aad
imul
pop
shll
xor
repnz
adc
lret
dec
movsl
jnp
xchg
imull
and
popa
mov
mov
xchg
pop
sub
and
jle
dec
mov
nop
sbb
call
jo
pop
dec
sbb
sbb
loope
popf
cli
aaa
cmp
mov
test
insl
mov
sarl
pop
push
arpl
mov
in
sbb
gs
repz
daa
dec
inc
outsb
stc
xor
mov
mov
fnsave
dec
sub
sub
mov
gs
call
pop
push
out
pop
ja
call
ret
jecxz
insl
test
adc
lret
adc
pop
movsl
mov
jle
std
mov
sahf
enter
cmc
push
sbb
mov
cmp
adc
mov
cmp
es
loope
pop
dec
sbb
or
push
pusha
not
subb
sub
hlt
cwtl
mov
and
sbbb
leave
fdivrl
pop
into
sub
or
into
dec
cmp
cs
shll
xchg
mov
and
mov
mov
and
dec
adc
leave
in
inc
xchg
filds
push
push
cmp
sub
or
aad
inc
xor
jle
ss
dec
pop
pop
fstl
movsb
push
adc
xchg
rorl
mov
test
push
jbe
push
mov
sbb
out
jge
lret
sti
aas
inc
mov
push
outsl
dec
loop
xorb
and
pop
inc
sub
ret
mov
push
rcrl
mov
xchg
test
cmp
ljmp
adc
mov
ss
lds
addb
rcrb
stc
scas
dec
cli
mov
outsb
inc
cmp
sbb
ss
into
sahf
or
pop
mov
shll
out
cmp
pop
out
arpl
mov
pop
mov
sbb
mov
insl
cmp
dec
sub
mov
xchg
into
pop
fs
bound
add
inc
imul
and
fs
cmc
or
inc
sub
jne
jbe
sub
mov
mov
add
mov
shll
lock
jo
iret
jbe
mov
js
pop
xor
jne
push
jecxz
out
push
inc
mov
lcall
jbe
dec
cmp
jp
pop
popf
pusha
pop
mov
xor
mov
or
adc
mov
into
addr16
ret
je,pn
mov
push
fstl
in
lods
cmc
cmpsl
xor
inc
mov
xchg
ljmp
aad
dec
push
mov
lea
out
and
push
inc
cmp
sbb
adc
sbb
cmpsb
rorb
bound
push
mov
add
xor
xlat
inc
enter
shrl
pop
popa
xchg
xchg
movsb
sbb
push
hlt
add
fcmovu
sub
xlat
out
add
jl
or
test
cmp
and
jp
andl
mov
lret
mov
or
cmp
sub
hlt
outsb
jp
mov
shlb
leave
in
fcompl
jecxz
sahf
aaa
daa
inc
mov
adc
push
mov
sub
mov
add
adc
sarb
stc
sti
ficompl
div
mov
ret
fstps
jne
inc
jmp
push
lock
inc
out
pop
add
cmp
mov
jae
and
xor
out
shlb
cmp
pop
or
jb
dec
mov
xlat
sti
lods
mov
test
int3
mov
mov
add
push
xor
xchg
and
cmp
mov
js
cwtl
out
shlb
outsl
pop
adc
xor
adc
adc
push
jp
mov
sti
sti
rcll
adc
pop
es
shll
dec
aam
and
aad
xor
cmp
shr
dec
sbb
jbe
scas
jg
outsb
aam
fisttpll
cmp
popf
push
in
mov
imul
movsl
jnp
sbb
aam
popa
dec
push
enter
push
jns
aad
ficomps
inc
pusha
cmc
sub
dec
mov
add
mov
pop
fimuls
dec
fsub
stos
rcll
test
insl
pushf
mov
xchg
cli
sarb
lahf
pop
sbb
jnp
lcall
in
nop
pop
mov
adc
repz
push
addl
int
mov
leave
std
add
stc
pop
push
sbb
mov
in
loope
mov
pop
and
push
lds
aad
scas
sub
orl
dec
jge
xor
fildll
dec
std
outsb
lcall
or
mov
fsubrs
add
cmc
aaa
fildl
and
scas
or
imul
lea
sbb
mov
fwait
lds
std
xor
fstpt
in
aaa
lods
repz
inc
sbb
fnstenv
outsl
or
push
sub
and
cltd
js
pusha
cmp
jbe
ss
xchg
mov
negl
into
aaa
xor
sub
mov
or
mov
or
mov
sbb
xor
pop
addr16
jb
mov
call
gs
mov
popa
jg
mov
mov
ret
cmp
mov
stc
jge
int3
mov
add
orl
sbb
cwtl
mov
jbe
outsb
inc
cmp
shl
jno
lcall
mov
jo
sub
sahf
mov
test
jg
lret
push
xchg
jle
dec
push
ss
leave
daa
mov
jmp
pusha
xor
pop
and
add
dec
stos
jmp
sti
sbb
fs
xchg
sti
into
into
sbb
sti
inc
pop
loop
xlat
inc
lea
inc
sub
fs
insl
mov
and
sub
mov
mov
jne
cmp
xor
jge
xor
rorl
sub
xchg
sti
pop
jbe
add
sub
cmpsb
mov
out
and
into
inc
int
test
icebp
icebp
movhps
jmp
mov
jecxz
pushf
dec
mov
fidivs
jnp
ror
mov
push
fdivrl
push
enter
mov
into
add
push
add
cmp
or
lods
jb
push
mov
cmp
movsl
imul
mov
lock
loope
adc
mov
lret
add
pop
ret
sarb
mov
ljmp
or
stc
cmp
pop
sub
xor
pop
sti
jno
mov
push
daa
leave
popf
xor
jecxz
cwtl
shrl
push
jmp
and
in
bound
loopne
and
mov
sbb
xor
cmpsl
icebp
jmp
ds
lret
inc
xor
andl
mov
inc
cpuid
sbb
adc
mov
int3
jecxz
sbb
cld
jl
jae
mov
pop
scas
mov
scas
jecxz
cmp
adc
add
aad
sub
add
loope
loope
ficompl
movsl
dec
or
add
cmp
das
and
mov
adc
cwtl
or
arpl
cmp
push
mov
pop
jecxz
cwtl
enter
inc
and
mov
sub
xchg
push
mov
cmpsl
mov
sbb
outsl
lret
jo
dec
pop
jo
inc
push
lock
subb
mov
pop
jo
and
ffree
sub
popf
fsubs
and
in
popa
xor
add
fwait
insb
xchg
pop
mov
and
les
lcall
jg
ret
cli
rolb
mov
mov
sub
sbb
adc
fmull
out
or
aaa
adc
adc
aas
dec
and
lea
inc
adc
in
sub
dec
arpl
pop
jo
sbb
push
adc
fdivl
pop
fldcw
flds
test
hlt
mov
inc
popa
pop
and
xor
jns
cld
int3
cmp
addr16
bound
lcall
jecxz
mov
bnd
loope
cwtl
sbb
cmp
xlat
imul
mov
mov
dec
cli
inc
add
sarl
inc
sub
sbb
xchg
pop
cmp
xchg
push
and
jp
xor
push
bnd
cld
mov
xchg
dec
es
mov
jbe
ja
sahf
test
int3
xchg
pushf
icebp
inc
dec
push
xchg
iret
rcr
shrb
jno
or
dec
lahf
add
call
mov
xor
sbb
mov
xchg
and
pop
cwtl
rolb
xor
fs
pop
mov
push
aam
fildl
jns
pop
cmc
sbb
lahf
add
inc
addr16
scas
hlt
in
xor
adc
in
out
test
cmp
mov
loopne
jge
push
andl
clc
jmp
mov
inc
cmp
add
cmc
pop
jmp
les
xor
icebp
dec
pop
pop
lods
pushf
dec
inc
inc
mov
dec
or
fsubl
nop
stos
xchg
xchg
pop
icebp
mov
push
inc
arpl
mov
prefetch
or
insb
cmp
icebp
inc
aam
les
xor
outsb
add
mov
add
lret
cltd
ja
mov
dec
jg
lea
mov
pop
xchg
xor
or
mov
xchg
xor
sub
mov
lods
inc
test
fidivrs
pop
mov
add
push
out
cltd
cmpsw
sbb
pushf
idivl
and
aaa
sbb
mov
dec
xchg
inc
xor
mov
push
or
push
test
pop
es
icebp
mov
inc
jne
sbb
adc
cmp
int
out
push
and
lcall
xchg
or
aas
enter
out
jae
mov
in
pusha
bnd
cmp
fs
icebp
jge
cli
hlt
in
insl
and
jmp
xchg
shrl
pop
repz
push
mov
mov
icebp
in
insb
outsl
lcall
mov
push
add
xlat
mov
xchg
sbb
test
pop
aad
out
xor
or
jmp
aaa
jp
aaa
pop
movsb
into
dec
leave
testb
loopne
xchg
sbb
mov
sbb
insl
cmc
mov
xchg
insl
test
bound
insb
das
cmp
xchg
xchg
mov
xor
bnd
mov
mov
jns
mov
xchg
pusha
test
leave
push
inc
pop
adc
and
add
ss
arpl
nop
outsb
mov
jne
aas
mov
arpl
iret
mov
xchg
int3
xor
xor
sub
loopne
push
and
fnsave
pushf
jecxz
xor
pop
mov
mov
stos
add
mov
test
mov
and
ja
cwtl
mov
xchg
cmpsl
mov
lahf
shlb
cmp
out
pop
and
repnz
xchg
dec
xor
and
fsubp
xor
push
push
lret
jl
add
xchg
sbb
xchg
rcrl
dec
shll
insb
ja
cmpsb
mov
jmp
in
mov
sub
nop
enter
adc
fucomp
int3
cmp
adc
or
add
movsb
or
inc
cmpsl
mov
mov
ljmp
add
loop
xchg
fs
jle
mov
push
sub
fcoms
inc
in
sub
add
lea
xchg
mov
movsl
adcl
sbb
daa
sub
dec
push
std
dec
jb
xchg
sarb
out
cmp
mov
mov
or
lea
dec
jmp
xchg
jle
cmpsb
outsl
cmp
mov
xor
scas
jge
rorl
mov
jecxz
and
loop
inc
xchg
mov
jns
in
rol
loopne
cmp
mov
ljmp
adc
pop
cwtl
shlb
scas
mov
mov
dec
pop
and
rcll
or
sub
shr
insb
pushf
xchg
insl
arpl
mov
inc
inc
iret
daa
cld
pop
sub
mov
lea
ss
mov
aaa
sub
dec
clc
leave
inc
push
div
push
pushl
sub
outsb
mov
pop
push
adc
add
pop
test
add
xchg
and
mov
or
lcall
jae
jge
add
sub
push
push
ss
sbb
fldl
lahf
xchg
pusha
cli
div
dec
pop
test
lods
dec
scas
shr
ss
lea
mov
cmp
push
shrb
sbb
inc
fdivl
je
jno
inc
arpl
push
sub
lcall
add
das
pop
mov
mov
cmpsb
cmpsb
test
dec
inc
pop
cmp
lock
and
sub
les
scas
pop
or
dec
loope
shrl
fdivs
insl
lock
movsb
or
imul
fstl
jb
pusha
cmp
jmp
movsl
call
sub
test
cmp
pop
xor
push
sub
loope
pop
add
mov
lea
int3
movsl
stc
aaa
jle
push
cs
xor
pushf
repz
push
pop
pop
and
mov
xchg
sar
sahf
inc
push
sub
imul
outsb
testb
or
out
cmp
inc
and
mov
dec
lods
push
mov
add
ljmp
pop
into
mov
imul
repnz
es
push
scas
sub
ss
loope
les
and
xchg
mov
sbb
hlt
and
incb
cli
pop
jl
shl
mov
adc
cmp
insb
insb
test
scas
call
out
or
xlat
ds
adc
aam
loop
loopne
cwtl
jbe
jl
xchg
jg
add
popf
ja
in
sti
cmpsl
xor
push
cmp
push
mov
sub
fsubrs
pop
and
sbb
nop
inc
cs
or
mov
sbb
ja
xlat
movl
negb
jno
dec
loope
in
mov
pop
rcrb
pushf
mov
ret
gs
icebp
test
mov
jae
jl
out
xor
lods
sub
xor
xor
mov
cmpsl
adc
mov
std
or
xor
fildl
jecxz
out
sbb
in
lock
lret
and
mov
add
call
insl
fwait
in
scas
push
clc
adc
insl
sub
icebp
scas
dec
lods
test
insl
pusha
mov
popf
jp
sub
fldl
je
cmp
rorl
lcall
dec
adc
and
or
leave
fwait
and
xchg
push
roll
or
cmp
cltd
mov
frstor
or
xchg
pop
lret
mov
nop
nop
lock
sub
sub
aam
xor
xchg
push
mov
mov
xchg
pop
lret
dec
insb
dec
ja
test
or
jns
cmp
push
xor
pop
xor
xor
rcrl
pop
xor
bound
inc
fimuls
loope
push
jg
out
cmpsb
adc
mov
xchg
mov
pop
cmpsl
repz
fnstcw
jg
jno
adc
mov
jns
sub
lea
cmp
aam
or
lcall
std
imul
push
lds
lock
pop
orl
sub
addr16
lea
adc
or
or
or
fst
mov
jmp
push
enter
pop
jl
decb
mov
rcrl
xor
xchg
int
xchg
mov
xchg
xor
sub
std
xchg
add
add
aaa
notb
cmp
imul
lods
repz
stc
inc
ss
iret
mov
adc
mov
cltd
fbstp
push
out
mov
jle
cmpsl
jnp
push
in
test
loop
adc
movsb
stc
imul
js
inc
add
scas
pushf
enter
cmp
xchg
fs
xor
push
or
enter
lret
cmc
jp
cmp
xchg
push
xor
jle
lcall
jecxz
stos
in
movsb
dec
xor
js
jecxz
fldcw
mov
mov
mov
aaa
jl
ja
mov
mov
push
hlt
jmp
shrl
mov
aas
adc
xchg
fcomip
stos
jae
xorb
mov
pop
lahf
adc
mov
gs
sahf
jl
or
fldenv
cmpsb
dec
sahf
xchg
xchg
lods
enter
sbb
dec
push
fildl
inc
test
std
jo
jne
inc
dec
ret
sbb
mov
aaa
add
arpl
loop
iret
test
xorb
push
add
aaa
jno
adc
shr
loopne
adc
int3
jns
cmc
or
pop
test
rcrl
jo
cli
mov
scas
and
sub
xchg
subb
insl
clc
pop
test
test
xchg
iret
leave
pop
imul
xchg
cmp
imul
mov
arpl
cli
mov
movl
mov
mov
mov
jmp
sub
xchg
sbb
popf
dec
adc
in
ficoms
or
aam
ss
fs
test
bound
cmc
and
pop
cmp
repnz
into
ss
sub
mov
out
inc
xlat
orb
out
ret
xor
movsl
jge
push
or
pushf
jg
fwait
lea
xor
mov
add
sub
xor
xor
inc
or
adc
xchg
mov
push
ds
adc
loopne
mov
stos
or
mov
ret
insl
inc
push
lds
and
lcall
cmp
jae
lods
xlat
push
cmp
je
addb
jge
and
or
mov
jg
push
cmp
push
inc
adc
ja
push
mov
pop
nop
js
adc
xchg
cltd
and
and
sub
cwtl
into
xchg
mov
xchg
jg
mov
icebp
and
loop
xor
ds
xchg
adc
and
jne
or
pop
or
test
inc
pusha
xchg
test
xor
fstpt
and
pop
jbe
scas
cmp
cmpsb
cs
xor
arpl
sbb
das
scas
pushl
jbe
aad
test
inc
cld
ret
sub
adc
dec
sbb
sbb
and
jl
les
fildl
cwtl
clc
fsubr
mov
dec
lock
cmpb
fcomip
stos
shl
cld
insb
loopne
or
fnstenv
jb
adc
int3
repz
mov
arpl
jbe
dec
lcall
xchg
pop
and
push
data16
pop
or
es
mov
pop
inc
dec
inc
mov
lds
scas
setne
fstl
shl
add
movb
push
jbe
jmp
repnz
and
inc
pop
pop
int
in
shrb
arpl
cs
movsl
rclb
push
or
pusha
in
dec
xchg
popa
test
fs
xchg
mov
mov
inc
ret
push
dec
ds
mov
and
test
mov
mov
out
inc
pushf
pop
dec
pop
push
sub
aad
inc
stc
sbb
out
push
les
jge
into
rcrb
pop
jo
sahf
lret
adc
inc
cli
insl
cmp
mov
std
mov
push
fdivp
lods
mov
shrl
sbb
gs
cmp
push
mov
das
jl
fldcw
imul
movsb
adc
mov
lea
or
sbb
int3
and
jne
pop
push
pop
popf
ret
es
in
lahf
sti
loop
jae
dec
dec
aaa
push
pop
sub
fisubrl
insl
dec
xchg
and
shll
and
mov
cmpsl
push
pop
mov
ds
adc
daa
scas
mov
dec
jns
sub
push
and
xchg
lahf
out
inc
push
cmpsl
pop
mov
call
sbb
repnz
mov
pop
in
mov
ljmp
fucom
adc
vunpckhps
mov
inc
fwait
ss
jns
jns
cld
aaa
xor
sbb
test
rol
test
inc
push
sbb
pushf
sub
mov
mov
xchg
test
xor
cmp
pop
iret
add
cltd
pop
or
sbb
and
outsl
inc
hlt
je
iret
fs
xor
and
aam
add
xor
andl
fldcw
bound
mov
je
fistpll
ret
mov
adc
xchg
ss
movsb
cld
pop
mov
fisubrs
out
mov
mov
lahf
sbbl
enter
fsts
push
movsb
sbb
sbb
es
pop
test
mov
aad
ja
arpl
enter
test
mov
mov
jmp
lret
push
xchg
shl
cmp
push
clc
mov
ljmp
push
subl
pop
sarb
jp
sti
dec
xor
loop
sbb
aaa
clc
jmp
pop
sub
dec
out
aam
mov
ss
scas
ja
movsl
subb
mov
push
jmp
inc
popf
push
jmp
aas
icebp
push
adc
orl
insl
sub
ss
jo
inc
arpl
rolb
scas
or
clc
fiaddl
xor
pop
sub
pop
inc
popf
pop
jb
pop
xor
or
arpl
mov
addb
incb
ret
mov
popa
into
daa
sub
add
gs
outsb
mov
mov
dec
lret
jg
sti
jnp
cmc
cmp
repnz
push
mov
cmc
icebp
daa
xor
orb
jbe
test
sti
roll
dec
insb
xbegin
xchg
mov
ja
mov
and
mov
adc
roll
int
pop
out
aad
xor
add
lds
add
inc
test
pushf
inc
sahf
std
test
iret
sub
subb
or
or
mov
movsl
das
repnz
fsubs
and
mov
add
ficompl
shll
ljmp
cmpb
dec
adc
pop
add
pop
les
sbb
xchg
orl
test
mov
imul
aam
test
je
push
mov
sub
gs
clc
dec
dec
lock
and
mov
mov
stos
xchg
push
jae
jae
sbb
divb
mov
and
ss
jge
arpl
mov
sahf
xor
insb
inc
test
fdivl
adc
mov
stc
shl
sbb
popf
or
pop
and
faddl
nop
mov
jl
add
lods
andl
mov
loop
adc
or
sub
fstpl
mov
mov
fldcw
fmuls
dec
pop
xchg
orl
pop
jg
lret
mov
push
sub
stos
repz
dec
loope
or
repz
nop
adc
lahf
stos
mov
sub
es
addr16
int
das
test
xchg
adc
xor
xor
pop
fldt
out
insb
cmpsl
sub
fsubs
or
call
or
sub
mov
test
and
pop
inc
xchg
imul
jle
mov
mov
lods
orb
push
pop
mov
add
push
cltd
lcall
repnz
add
lret
call
adc
xor
mov
xchg
sub
cmpsb
je
pop
sbb
cmp
fcos
mov
cmpsb
bound
or
in
in
call
cld
add
das
push
mov
sub
pop
sbb
ss
aam
sub
outsb
cli
mov
jle
pop
rclb
adc
loop
jb
addr16
arpl
out
sub
jl
pop
xchg
sbb
rorb
faddl
or
dec
sub
jo
cmpsb
mov
sub
setb
dec
int
lcall
stos
pop
inc
addl
pavgb
push
incl
jmp
lock
lds
sti
pop
imul
arpl
mov
mov
aas
or
or
pop
into
pop
adc
cmp
jae
xor
das
cmpsb
push
pop
popf
jl
pop
adc
push
data16
xchg
add
mov
mov
xor
ja
push
jb
inc
push
iret
lcall
pop
inc
outsl
insl
xchg
mov
mov
stos
into
pushf
jo
pop
rcrl
insb
scas
jg
es
jecxz
pop
mull
mov
xor
cld
pop
cmp
xchg
and
inc
shll
negb
cmp
xor
push
std
fisubs
add
pop
cmc
adcl
inc
out
iret
test
aam
pop
or
add
stc
cltd
or
mov
lahf
int
dec
pop
int
push
and
in
out
xchg
pop
in
xor
inc
and
lea
jl
sub
sbb
idivb
xchg
inc
stos
fs
sti
sub
xchg
sub
pop
lret
movsb
addb
jmp
inc
lahf
pop
std
jmp
jno
xor
push
fucom
xchg
addb
sbb
mulb
mov
jp
or
inc
xchg
inc
ss
pop
test
out
es
mov
push
cld
test
loop
inc
imul
jp
ljmp
mov
inc
int
mov
and
jb
sub
call
push
xor
pop
sub
inc
repnz
int3
mov
push
aad
cmpsb
mov
aad
adc
and
cmp
cwtl
popa
jmp
push
or
int3
iret
sbb
leave
dec
pop
orb
pop
je
imul
nop
and
pop
cmp
cltd
xor
add
cmc
daa
fabs
popf
dec
test
mov
cmpl
add
add
sub
aas
aam
xchg
lahf
addl
jge
cmp
pusha
fisttps
or
push
adc
xchg
into
leave
pop
mov
pop
push
in
pop
pop
insl
inc
adc
addl
dec
mov
and
adcl
dec
mov
mov
repnz
inc
xor
xor
jnp
lret
add
inc
fistl
repnz
cwtl
neg
divb
sbb
jmp
pusha
push
push
cltd
shl
and
cmp
insb
pop
pop
scas
fiaddl
sub
pop
push
adc
inc
xchg
daa
sub
inc
cmp
divb
jecxz
lahf
ficompl
popf
jl
clc
mov
out
inc
nop
clc
popa
sub
add
xchg
icebp
incb
mov
inc
clc
pop
ret
add
push
mov
aad
jp
pop
jb
fstl
mov
out
sbb
call
test
ret
movsl
divb
xor
iret
rcl
in
dec
ja
cmp
mov
push
lret
cmpb
mov
add
test
jl
jbe
pop
xchg
inc
mov
gs
xchg
pop
sarb
into
idivl
flds
inc
aad
paddw
or
test
mov
xchg
push
jmp
push
adc
mov
mov
mov
icebp
lods
add
jp
push
loopne
lea
dec
mov
xchg
ss
push
cltd
sbb
mov
insl
jbe
sub
das
jge
fbstp
or
imul
dec
pop
adc
jmp
mov
mov
test
push
xchg
dec
cmp
inc
dec
lock
ret
mov
or
lock
int3
cmp
mov
jns
xchg
mov
daa
rolb
in
jae
into
aad
dec
add
es
xor
push
or
sti
icebp
mov
idivb
dec
repz
ds
jo
repnz
movsl
repnz
pop
iret
stc
cmp
call
inc
xor
mov
jp
xchg
aaa
cmpsl
cmp
rcr
inc
aas
sbb
lret
fwait
mov
sti
cmp
adc
mov
jl
push
cs
out
arpl
inc
jns,pn
jnp
xchg
push
push
into
leave
mov
mov
sub
xchg
hlt
insl
adc
inc
aad
push
addr16
popf
inc
xchg
lret
aad
loopne
jp
repz
movsb
adc
in
es
or
movsb
into
jne
andl
jae
sub
sub
aam
jl
xchg
insl
jle
sub
hlt
lock
stc
pop
nop
push
xor
in
rorb
pop
push
mov
fidivrl
cmp
push
fxch
mov
popf
push
dec
cmp
ret
cltd
cmp
jmp
rol
daa
inc
jb
sbb
add
push
scas
jl
mov
nop
orl
rep
jnp
pop
mov
mov
mov
xchg
sub
push
inc
xor
push
mov
ret
int3
sahf
mov
aaa
sub
mov
call
insb
mov
push
lock
scas
int3
push
loopne
cld
vcmppd
jp
int3
popf
or
inc
push
inc
jae
mov
aaa
mov
leave
loop
and
mov
cmp
jb
sbb
jae
js
call
xorl
or
mov
mov
aam
enter
sub
xor
cmp
inc
add
psrlq
call
sbb
test
test
aas
outsl
xor
mov
in
insb
push
push
scas
dec
sbb
jecxz
xorb
dec
pusha
mov
int
push
cmp
xor
sub
out
inc
add
inc
mov
xor
jp
popf
and
xor
jo
pusha
outsb
orl
xchg
sti
fistl
inc
push
and
push
inc
mov
xchg
out
js
and
in
push
push
pop
andl
daa
aaa
pop
sub
inc
rol
lock
mov
mov
jb
sbb
shlb
rorb
fildll
jb
pop
ret
into
mov
js
jg
or
or
dec
xchg
inc
xlat
loope
jo
test
adcb
or
add
cmpsl
pop
add
fldt
fnstcw
stos
aad
lods
movsl
popf
mov
sub
fisubrs
dec
mov
mov
sbb
mov
leave
lret
cli
mov
pop
mov
incb
arpl
jae
jo
add
cwtl
jo
loop
sub
xchg
add
mov
xchg
fisubrl
in
inc
and
pop
in
xchg
sbb
dec
lea
int3
sub
pop
mov
jmp
rorb
sbb
sub
pop
add
in
xchg
lret
hlt
sbb
pop
pop
jo
pop
cwtl
rcrb
xchg
jge
ret
es
or
and
push
dec
daa
mov
jnp
push
lods
mov
inc
and
dec
jne,pt
xor
dec
lcall
xchg
icebp
xchg
inc
mov
inc
cmp
push
mov
rcrb
out
sub
ret
lret
cmp
cmp
and
sbb
sub
xchg
cmp
std
icebp
jl
test
jmp
jg
test
pop
dec
add
adc
outsl
adc
xor
repnz
sti
push
popa
test
and
dec
mov
outsb
inc
inc
ret
aam
inc
cmpsb
push
nop
arpl
inc
faddl
mov
lcall
cmp
jb
mov
in
jecxz,pn
jecxz
in
and
fldcw
and
test
add
stos
mov
pop
mov
cmc
pushf
xchg
xor
mov
xchg
clc
scas
lret
in
inc
push
cld
push
addl
cld
out
fdivrl
cli
mov
in
repz
scas
aaa
push
movsb
dec
imul
sub
xor
xlat
jnp
subb
add
or
out
dec
jae
sbb
sbb
loop
jmp
fisttps
push
xor
mov
test
adc
cld
xor
push
bound
add
xlat
mov
dec
andl
in
lock
push
add
ja
out
pop
mov
jp
push
push
insb
sbb
mov
mov
lahf
sbb
sbb
js
shlb
push
loopne
mov
mov
jnp
xchg
cwtl
data16
sti
jmp
lods
pop
ljmp
xchg
inc
add
push
jno
and
rcll
outsl
cs
or
push
dec
cmp
xor
mov
xor
adc
pusha
inc
gs
in
mov
pop
push
outsl
sub
mov
aam
mov
push
cmc
dec
mov
jb
mov
mov
jb
leave
shlb
mov
adc
js
shlb
dec
mov
mov
jnp
cmp
cmp
shll
jbe
repnz
push
pushl
mov
adc
pop
loopne
push
push
cwtl
jge
lahf
lret
pop
dec
add
mov
push
sti
out
inc
add
fistps
mov
jl
dec
adc
nop
jae
mov
sahf
pop
adc
mov
loope
pop
or
cmpsl
clc
adc
mov
jmp
movsl
mov
mov
push
fsts
ds
add
out
mov
aad
std
push
dec
shll
out
xor
push
cld
in
fbld
into
call
lret
xor
rcl
xchg
outsl
cmp
or
push
sub
sbb
sub
sbb
lret
popa
test
dec
stc
gs
sub
testl
out
or
pop
mov
mov
pop
cmpsl
ret
xor
jno
xor
inc
cmp
lock
mov
ror
icebp
bound
jne
add
loopne
scas
cmp
int3
pop
cmp
loopne
adc
sbb
lcall
cs
cmp
add
addl
cmp
mov
push
or
inc
push
or
scas
sub
push
mov
xor
mov
pusha
add
ja
pop
mov
test
int
lret
aam
imul
mov
jge
ret
push
sbb
push
and
mov
push
es
rcll
movsl
xchg
adc
jmp
and
mov
lcall
push
jge
jp
adc
cmpsb
xchg
imul
or
mov
add
lock
xor
test
aad
xor
test
adc
ljmp
mov
sub
ja
sub
jne
or
popa
dec
add
jnp,pn
mov
inc
xchg
adc
loop
add
adc
inc
sbb
or
pop
popf
int3
sub
add
das
fs
sbb
imul
jmp
insl
jg
adc
push
and
xchg
jnp
dec
orl
dec
repz
xor
xchg
xor
xchg
dec
std
add
xlat
fisubs
insb
dec
in
gs
mov
jmp
jmp
mov
push
rol
dec
push
stos
mov
lcall
loope
jbe
mov
loop
xor
nop
cmp
mov
in
addr16
enter
push
daa
or
cld
xchg
cmovae
ljmp
rorl
add
sbb
jle
jbe
pop
jg
ret
je
jno
xchg
jecxz
add
loopne
push
test
mov
out
repz
lahf
mov
jns
add
jp
je
mov
push
pop
adc
push
mov
pop
adc
outsb
and
ljmp
daa
sub
and
inc
dec
sub
jmp
fs
fdivrs
or
bound
popa
aas
push
ficoms
sbb
push
jle
out
xchg
movsb
jmp
sbb
in
or
sbb
pop
call
cld
out
sub
in
push
das
inc
push
aaa
std
sbb
pop
das
xchg
or
sbb
sti
add
cmpsb
sbb
mov
mov
aas
push
xchg
nop
js
and
nop
mov
stos
xchg
das
pusha
mov
sbb
out
ss
mov
aam
sbb
dec
bound
mov
std
outsl
sbb
clc
xor
jno
jp
sahf
jns
daa
stos
and
mov
xchg
add
int
sub
inc
push
and
pmaddwd
mov
dec
stc
fists
lock
ds
xchg
add
pop
adc
mov
rorl
push
std
mov
mov
adc
aam
adc
ljmp
mov
andb
subl
push
loopne,pt
leave
or
outsb
jg
cmp
dec
pop
mov
push
jmp
in
pop
hlt
or
in
mov
xchg
dec
add
sub
gs
shrl
cmp
cmpsl
mov
test
jecxz
dec
stc
sbb
ret
xor
mov
rclw
dec
jg
lock
mov
flds
push
test
test
add
test
sub
xor
xchg
gs
mov
insb
sbb
mov
idiv
mov
and
into
mov
sub
hlt
fmull
loop
repz
jle
ret
mov
inc
push
scas
rorl
popa
repz
mov
mov
ja
data16
xor
dec
jecxz
jbe
int3
std
cmp
jne
jne
adc
addr16
std
sahf
imul
mov
sbb
pop
dec
or
or
and
clc
fisubrl
adc
jge
rorb
inc
cmc
xor
aam
mov
jecxz
mov
stc
loop
ja,pt
movb
aad
xchg
xor
xchg
lea
and
pusha
jmp
push
push
lahf
in
or
in
or
shrl
in
push
movsb
mov
sub
push
pop
add
push
cmp
mov
ds
xchg
mov
clc
dec
repz
addr16
mov
pop
xor
sbb
loop
xor
lods
subb
jle
iret
mov
insb
daa
idivl
mov
sbb
insl
mov
and
push
shrb
pop
mov
jl
sub
cltd
nop
and
movsl
out
mov
add
sqrtps
pop
xchg
pop
jp
dec
dec
jne
mov
jo
popf
and
add
fucom
cmp
test
fsubl
or
pop
mov
dec
push
push
out
int3
mov
popf
jecxz
sbb
push
inc
dec
sub
adc
aaa
xchg
call
xor
popf
icebp
xor
and
dec
push
mov
pop
mov
or
mov
mov
and
sub
cmpsb
mov
jg
aas
test
int3
cmp
shlb
sarb
popf
andb
mov
mov
sub
insl
sbb
inc
inc
cmpsb
cmp
nop
inc
cmp
cmp
nop
cmp
leave
cs
xor
mov
popa
xchg
xor
and
imul
hlt
xor
xchg
pop
fists
or
push
xchg
dec
jae
jns
cmc
rorl
movsl
data16
je
loopne,pn
pop
mov
dec
mov
lcall
xor
or
adc
mov
xor
push
faddp
lds
divb
iret
fsubp
lods
sub
jg
cmp
adc
sub
and
xor
xor
adc
movsb
hlt
ds
xor
sbb
cmp
call
and
jns
push
cltd
mov
pop
push
inc
pop
cmpl
xchg
test
out
loop
jge
dec
sub
stos
mov
in
cmp
pop
repnz
push
mov
push
cli
pop
ds
subb
add
pop
mov
stos
and
pusha
cmp
xor
iret
dec
pop
pop
push
and
notl
mov
shlb
pushf
out
or
mov
jecxz
add
out
shlb
pusha
cltd
in
fstpt
stc
in
inc
je
loopne
add
insl
xchg
push
adc
jno
sbb
sti
mov
js
repnz
dec
jbe
sbb
fldt
dec
fstpl
mov
fsubrs
cmp
or
inc
sbb
out
mov
dec
lock
mov
adc
pop
mov
cmp
push
jnp
dec
daa
out
add
dec
xchg
sub
fistps
mov
jae
daa
mov
sub
jns
daa
test
mov
dec
out
dec
xchg
mov
and
adc
adc
test
xchg
fcomp
xor
xor
outsb
push
mov
outsb
xchg
dec
das
adc
mov
ret
and
inc
adc
mov
cmc
lock
addr16
dec
sbb
mov
push
nop
inc
cmp
movsl
outsb
fcompl
les
les
dec
push
xlat
or
stc
addr16
popa
cmp
aam
out
adc
adc
outsl
push
xor
test
push
jae
jmp
inc
fcompl
into
pop
leave
mov
jmp
push
mov
push
dec
mov
flds
out
pop
jno
sub
adc
ja
lea
cmpsb
cmc
mov
or
xlat
and
outsb
sub
loop
js
add
ljmp
mov
ss
fs
xchg
fldln2
int3
lock
sub
mov
or
jp
sbb
cmp
mov
aaa
leave
or
and
test
push
cmp
mov
dec
iret
pop
adc
mov
or
ss
or
inc
call
data16
scas
jmp
sarb
je
jne
pop
int
rclb
ja
jmp
mov
jae
or
nop
ljmp
and
adc
mov
push
xchg
push
ljmp
popf
lods
aad
sbb
add
push
inc
arpl
sbb
xchg
fwait
out
cmpsl
push
mov
popa
adc
xor
imul
pop
rcrl
mov
mov
popa
xchg
repnz
rol
inc
stc
lret
inc
cs
fwait
mov
mov
imul
ror
cmpb
xor
push
dec
fbstp
fs
push
fwait
xchg
pusha
jno
jge
xchg
je
push
pop
repz
insb
sub
or
pop
xchg
iret
cmp
mov
adc
add
push
adcb
sbb
ret
jecxz
dec
mov
pop
or
dec
and
mov
arpl
mov
ret
stc
jge
rcrl
imul
or
cmpsb
inc
or
call
out
imul
push
jne
dec
or
icebp
mov
adc
lret
mov
loopne
xchg
pushf
lahf
ds
jno
pop
pop
adc
lret
lock
dec
add
jne
daa
jo
hlt
dec
ljmp
iret
shll
pop
je
lcall
jne
add
push
xchg
dec
insb
mov
fninit
mov
xor
sarl
bound
push
insb
insl
pusha
jo
cmp
aad
inc
mov
add
push
lock
push
pop
push
test
inc
insb
mov
adc
imul
add
jns
movsl
add
mov
cmp
mov
add
std
xchg
xor
ds
movsb
dec
mov
sbb
mov
dec
mov
js
push
or
push
mov
xchg
or
int3
rcrb
inc
inc
gs
xchg
jge
xchg
mov
and
and
loope
jle
mov
icebp
data16
dec
jnp
mov
dec
mov
mov
add
loope
jmp
or
insb
aad
out
jb
and
xor
xor
jmp
xchg
jmp
repz
hlt
adc
inc
repnz
xchg
iret
idivb
loopne
mov
cmp
nop
nop
dec
pop
add
ret
mov
ror
clc
jne
mov
nop
push
in
mov
xor
ret
pop
cld
push
test
jp
or
xchg
cmp
cld
lods
mov
lea
push
jns
pop
mov
js
into
insl
loop
push
aas
mov
pop
lret
mov
xor
mov
in
in
bound
mov
int
pop
int3
or
dec
jg
mov
and
cmpsb
cwtl
mov
jp
pop
into
adc
or
inc
rorl
cwtl
xchg
add
push
std
sbb
inc
sti
pop
stc
xchg
inc
mov
stc
mov
adc
repz
and
pop
and
jno
repz
or
jno
jne
jne
jge
inc
xchg
mov
pop
add
jae
push
stc
insb
or
mov
es
movsb
inc
mov
pop
pop
inc
mov
out
sahf
pushf
in
fimull
xchg
shll
sti
sub
sub
sub
pop
pop
lds
aas
push
adc
mov
shlb
mov
jae
insb
adc
adc
lcall
ret
mov
fwait
pop
mov
dec
cmpsl
popf
pushf
cmc
in
out
int3
out
inc
ljmp
fistpl
mov
cmc
mov
xor
enter
xchg
push
fcoms
loope
mov
popa
mov
pop
push
mov
sbb
enter
imul
shrl
insl
dec
xor
or
adc
cmp
sbb
and
sub
pop
adc
adc
dec
rcrl
in
push
mov
mov
push
test
pop
addb
inc
stc
jp
xchg
push
sub
push
cmp
repz
adc
sbb
lea
inc
pop
pop
mov
cli
shll
repnz
pop
pop
cmp
mov
lods
xor
inc
out
jl
stos
popa
xchg
pop
gs
or
pop
out
dec
cwtl
rcrl
ret
mov
inc
nop
repz
dec
xchg
push
leave
addr16
cmp
subb
int3
arpl
push
mov
push
aas
add
test
mov
cmp
in
adc
insb
adc
push
ds
sub
lret
xchg
fsubrl
pop
out
add
mov
lret
inc
pop
cmp
sbb
sub
mov
scas
cmp
arpl
push
pop
mov
xchg
pop
cmpsl
repz
push
fdivrs
mov
xchg
xor
in
popf
aaa
daa
pop
idivl
sub
dec
mov
pop
test
pop
stos
push
mov
faddp
repnz
cs
pop
mov
sbb
divl
jecxz
lcall
test
in
mov
lds
mov
jg
je
bswap
ljmp
ljmp
pushf
mov
mov
mov
push
jmp
pop
or
in
cs
mull
sub
xchg
jp
shrl
lods
ljmp
testb
outsb
lock
nop
sarb
or
jo
sti
fs
mov
pop
data16
xor
fldcw
daa
ljmp
lods
int3
outsb
inc
addb
fnstsw
and
jecxz
inc
jne
cmp
sub
pushf
pop
int3
repz
test
insl
cmpsb
fisttpll
stos
daa
dec
jp
sti
jge
es
loope
dec
mov
hlt
xor
dec
leave
into
inc
lds
outsl
fwait
sahf
add
mov
inc
popa
ret
lea
adc
sub
xchg
decb
in
jecxz
xor
xchg
mov
popa
or
fwait
lock
pop
fdivs
fwait
inc
sarb
rorb
lret
and
std
mov
push
pushf
insb
adc
sub
inc
bnd
mov
xchg
jecxz
or
jmp
faddl
pop
out
xchg
pop
outsl
cld
sti
cmp
adc
nop
sub
repnz
add
imul
sahf
pop
addr16
adc
gs
aam
inc
rcrl
jge
cmp
and
jo
pop
loopne
mov
aaa
mov
mov
fimuls
sahf
ja
shrb
inc
sbb
test
pop
xor
cmpb
enter
sbbb
cmp
dec
aaa
dec
mov
addr16
or
loop
push
repz
or
in
fwait
xchg
inc
lods
rorl
dec
xchg
cld
push
sarl
mov
les
out
bound
data16
push
mov
xor
testl
push
mov
int3
lds
sub
push
adc
jg
adc
lods
push
cmp
loope
out
jge
mov
lret
adc
push
aad
inc
pop
lcall
leave
clc
xorb
cmp
aam
add
and
or
adc
cmp
dec
mov
mov
into
add
mov
xorb
jno
fs
xor
cli
and
adc
sti
jecxz
push
ss
shlb
cmpsl
inc
bound
lods
cmp
xchg
imul
push
mov
mov
xor
or
jecxz
sub
insb
popa
adc
int
icebp
jge
mov
sbb
jg
mov
aaa
xchg
dec
js
xor
decl
cmc
mov
xor
movsb
add
notl
dec
push
in
test
pusha
test
and
fsubrl
mov
pop
movsl
mov
cli
mov
mov
push
lds
nop
cmpsl
out
repz
jne
bound
mov
or
and
pushaw
inc
shll
jne
jnp
test
inc
pop
dec
dec
test
and
mov
sti
sbb
push
cld
dec
pop
imul
push
fdivs
mov
adc
imul
xchg
pop
les
in
fcos
in
xlat
or
daa
scas
in
jae
sub
push
adc
cmp
repz
stc
les
adc
xchg
aas
bound
gs
pusha
ljmp
mov
xor
loop
inc
xor
fsubrl
xchg
sub
sahf
outsb
jl
dec
call
xchg
in
daa
pop
shrl
mov
cmp
xor
cmp
mov
push
int3
sti
mov
cli
mov
loop
cmp
jg
jmp
in
mov
xor
cmp
sub
pop
hlt
ss
jmp
mov
inc
scas
ss
add
mov
lods
push
fsubr
push
int
mov
xchg
pop
div
mov
daa
add
push
ret
cmpsl
mov
add
or
jb
push
test
call
mov
jns
cwtl
mov
cmpxchg
das
out
mov
mov
mov
sbb
sbb
sbb
les
inc
or
xor
movb
leave
fld
push
dec
cs
xchg
mov
in
pop
mov
mov
frstor
cmp
cmp
ret
xor
nop
cmp
push
xor
cli
hlt
push
add
cmp
adc
movsl
dec
add
push
fisubl
cmp
xchg
data16
push
js
adc
sub
les
xchg
push
movsb
xor
mov
add
aam
push
fistps
in
test
sbb
lret
mov
pop
scas
int
fcmove
inc
jb,pn
aam
push
orb
pop
rcr
ret
fisttpl
cltd
inc
shl
or
push
cmp
cmp
jo
add
jnp
push
fcmovnbe
lock
out
stc
cmp
cmovg
lds
rcrb
lods
pop
or
mov
add
xchg
scas
push
cmpsb
clc
lods
cmp
xchg
std
push
std
popa
stos
fsub
inc
stos
enter
js
adc
or
ljmp
imul
push
jecxz
sbb
jb
inc
enter
mov
mov
dec
mov
int
out
jne
xor
sbb
mov
pop
or
xlat
in
mov
xchg
pop
insl
mov
mov
dec
les
cmp
xchg
pop
sar
inc
jb
inc
je
dec
cmove
rclb
add
cmp
mov
ret
jbe
jg
lods
jle
insl
sbb
test
jge
cli
test
and
fisubl
cmp
inc
movsl
adcb
add
inc
leave
rcll
or
out
add
lea
and
sub
sbb
cmpl
jg
nop
popa
test
popf
dec
pusha
or
jl
sbb
int
ljmp
jg
mov
shl
movsb
int
pop
lahf
mov
pop
or
and
aad
push
or
gs
xchg
xor
sarl
pop
pusha
inc
cmc
rcr
call
icebp
mov
loop
lret
or
mov
aam
xchg
jmp
xchg
adc
dec
dec
test
mov
cmp
add
enter
pushf
dec
mov
pop
in
jle
push
fmul
add
jp
and
dec
pop
adcl
push
lret
inc
in
jp
add
ret
adc
lea
add
dec
push
mov
mov
sbb
jbe
cmpsl
loope
int
pop
mov
cs
ss
xchg
test
testl
in
cmp
pusha
cmp
outsb
in
subl
pop
pushf
xor
mov
test
in
repnz
fs
pop
push
mov
push
mov
xchg
push
imul
pop
lahf
jno
aad
imul
fidivs
imul
popf
mov
call
adc
and
in
out
sub
pop
xchg
cmpsl
inc
fwait
jmp
push
paddusb
insl
sti
push
add
sub
mov
jle
xchg
fwait
add
dec
dec
movsb
cmp
in
pop
stos
jo
jmp
mov
lcall
xor
add
ror
jnp
lret
adc
shl
add
inc
imul
xchg
mov
or
adc
jge
sti
jp
insb
jecxz
mov
shll
daa
repz
test
push
fcoml
mov
rcr
outsb
cmp
and
sub
pusha
flds
cmp
ss
jle
dec
or
es
sahf
stos
pop
dec
ret
das
lods
sub
std
sahf
rcrl
sub
pop
fstpl
mulb
jg
push
add
lret
mov
pop
and
decl
int
mov
push
mov
ja
sbbb
add
xor
loopne
or
dec
jo
in
imul
pop
pop
jge
pushf
mov
dec
incl
pop
cmpsb
or
fwait
mov
dec
js
xchg
pusha
jb
mov
aaa
rolb
ficomps
enter
cs
cmpsb
xor
fbstp
sbb
mov
sub
mov
outsb
inc
sub
or
inc
jne
insb
fs
enter
fcoml
dec
test
lea
outsb
or
or
in
mov
sub
inc
ror
lds
pop
inc
mov
cmp
dec
mov
int3
sub
cltd
fcmovnb
add
in
and
stc
mov
or
pop
jnp
movsb
xor
movl
in
mov
mov
xchg
clc
xor
cmp
adc
mov
pop
jl
icebp
push
sub
clc
int3
outsb
mov
in
mov
ret
hlt
sub
into
inc
xorb
lahf
fbld
xor
adc
push
jne
lahf
mov
jo
shlb
loop
jp
sub
jnp
cli
push
mov
pop
push
arpl
jmp
icebp
xor
ljmp
scas
movsb
or
int3
dec
sbb
pop
inc
xorl
adc
dec
out
cmp
mov
out
stc
aam
xchg
pop
pop
jg
or
xor
dec
add
push
cwtl
xor
movsl
cmp
movsl
movsl
sub
je
sbb
gs
pop
fnstenv
inc
scas
out
sub
adc
pop
dec
lock
sub
shrl
hlt
and
dec
scas
cmp
out
jnp
mov
adc
xor
std
xchg
jmp
stc
mov
shll
xor
and
mov
adc
dec
jl
cmp
adc
fucom
mov
test
jmp
scas
adc
cmp
int3
xchg
add
movb
fldl
dec
jae
jns
fsubrl
mov
jmp
push
mov
mov
test
cmc
fcmovbe
inc
outsb
sub
mov
je
mov
inc
shlb
add
hlt
aad
das
mov
inc
imul
les
fdivs
subb
shr
into
inc
add
push
xchg
hlt
sbb
loope
sbb
push
bound
push
xchg
xchg
aas
cmp
in
sub
mov
lcall
push
or
movsl
pop
test
jns
call
sub
sbb
sbb
movsl
popa
loop
dec
sbb
or
push
outsl
cmp
adc
push
jl
inc
jp
inc
fmuls
pop
pop
out
xchg
rolb
mov
push
sub
cmc
lret
cmp
jmp
loop
cld
xchg
push
and
mov
inc
mov
pusha
xor
or
xor
mov
mov
insl
fsubs
leave
mov
fnstcw
ss
jb
jae
adc
test
in
mov
dec
pop
mov
rcll
int
push
aaa
into
jns
popf
push
test
mov
inc
or
mov
clc
insb
pop
sbb
sub
out
mulb
mov
cld
loope
push
mov
push
out
ss
and
add
push
in
rorl
lret
insl
or
xlat
mov
add
cmp
add
dec
insl
mov
add
lret
loope
push
fists
es
mov
ss
xchg
or
cmp
out
sub
imul
push
jp
aam
in
jne
and
test
xchg
push
repz
and
js
fucomi
pop
out
cmc
sub
test
hlt
fisubs
rdpmc
iret
je
das
lock
cmp
pop
and
shrl
dec
fisubl
stos
insb
aad
mov
insl
lret
xchg
cltd
inc
adc
mov
sbb
jle
xor
in
js
das
ja
mov
into
les
mov
xchg
movsb
mov
lret
xchg
repz
pop
call
shlb
negl
push
shl
je
add
repnz
push
cld
dec
mov
jo
jnp
rorb
in
es
int3
stc
ss
mov
inc
int3
ficomps
icebp
ja
xorl
push
fwait
pop
lret
in
xor
sub
fdivl
pop
xor
fstpt
xor
xchg
dec
adc
iret
mov
push
cmpsb
call
leave
repnz
loopne
xchg
xchg
stc
inc
jb
adc
add
dec
pop
sahf
add
movsb
and
sub
mov
loopne
xchg
dec
push
out
jmp
fcomi
inc
mov
not
jp
inc
arpl
stc
sub
jp
sbb
sub
outsb
pop
and
pop
and
adc
stos
ds
mov
xlat
les
movsl
sub
dec
rcr
sti
or
inc
xchg
mov
mov
loop
inc
addr16
dec
pop
xlat
adc
imul
add
xorl
jae
cld
jle
rolb
mov
gs
mov
mov
sub
jnp
hlt
sub
jbe
arpl
push
adc
hlt
aas
jne
mov
jg
sbb
jne
nop
call
leave
inc
xor
leave
pusha
xor
out
push
lds
mov
insl
or
add
dec
int3
cltd
adc
mov
inc
pop
stc
imul
or
std
xor
popf
add
sbb
push
dec
add
pop
cmpsb
or
lea
lods
push
mov
mov
ret
jg
adc
jmp
lcall
stc
adc
shlb
inc
pop
fs
adc
aas
scas
jle
lds
jecxz
sub
xor
mov
test
movl
ljmp
rorb
aaa
fwait
aas
pop
push
dec
adc
mov
push
inc
pop
pop
xor
popf
fisubrl
mov
pop
sbbb
jl
adc
jo
add
and
adc
imul
into
mov
adc
jb
loop
jo
push
cmp
test
lock
pop
or
lds
ja
dec
add
push
adc
inc
sbb
jb
push
cli
loope
xchg
mov
rcrb
insb
orb
sbb
into
cmc
fstl
in
lahf
add
stos
lds
mov
in
mov
mov
push
pop
test
pop
xchg
test
xlat
fsub
int
cli
int
in
fildll
mov
xor
loop
ljmp
ret
cwtl
adc
inc
pop
repnz
cmp
and
mov
enter
pop
popa
xchg
add
rcll
sbb
xchg
adc
push
mov
mov
and
or
sub
dec
addr16
stos
je
pop
dec
or
inc
pusha
lret
daa
std
mov
fildl
int
in
js
sub
push
add
lret
cmp
lock
mov
or
sub
es
mov
cmp
insl
cmp
stos
jmp
fs
cmc
int3
dec
mov
cmp
divl
xchg
xchg
andl
xchg
jno
inc
cmpsl
xor
and
sbb
insb
aaa
out
in
add
scas
cmpsl
mov
call
jo
pop
inc
dec
lahf
or
fbld
ret
shrl
sub
or
outsb
dec
sar
and
and
insl
sub
in
push
push
test
or
pop
jecxz
dec
mov
sbb
pop
jne
mull
scas
pop
push
jnp
and
xor
mov
dec
add
inc
fmull
mov
loopne
in
mov
push
ds
paddusb
dec
xchg
bound
out
and
adc
int3
aas
push
sbb
divb
add
or
and
jne
ret
enter
test
and
xchg
insl
subb
xor
lret
and
mov
mov
negl
lahf
out
and
icebp
cmp
push
xor
pop
or
pop
mov
clc
lods
lods
in
icebp
adc
adc
out
or
mov
dec
xorb
xor
mov
fst
xorb
aad
push
stos
fs
sbb
jne
push
push
push
add
push
jmp
xchg
sub
pop
push
cs
pop
repnz
mov
or
pop
fiaddl
mov
loope
add
leave
push
cmp
pop
out
push
mov
push
dec
icebp
pop
sbb
pushf
jbe
int3
adc
mov
jo
lret
and
in
out
sbb
insb
outsl
pop
sub
in
mov
cld
enter
outsw
dec
add
mov
pop
inc
inc
add
addl
or
pop
jmp
push
cmp
fs
aas
mov
ret
cmp
in
inc
insl
jne
popf
hlt
and
les
js
push
in
aam
sti
jl
push
add
jl
aaa
adc
cmp
subb
push
push
cli
cmc
test
in
ljmp
pop
daa
ss
sbb
push
or
shlb
les
outsb
lock
add
ret
sbb
fisttpll
mul
mov
xchg
lret
mov
mov
addr16
movsb
jbe
or
cmp
inc
out
lret
or
and
xor
stos
out
fwait
inc
or
bound
mov
or
pop
lahf
cld
in
jne
push
cld
bound
xchg
es
dec
sub
sub
mov
add
adc
mov
stc
sub
sahf
adc
or
cmp
es
mov
test
mov
scas
xchg
pusha
xor
dec
js
push
fcmovnb
sub
roll
insb
mov
mov
inc
jl
xchg
xor
jmp
lcall
scas
lret
fistpl
test
push
ret
in
mov
in
pop
fdiv
loopne
mov
dec
push
pop
dec
lock
jne
jns
loope
mov
shlb
scas
and
pop
arpl
dec
test
lret
hlt
std
inc
shrl
jne
out
pop
hlt
sbb
or
jns
fdivrl
cmp
das
dec
movsl
cmp
insl
jne
inc
cmp
ret
and
pop
test
mov
lds
mov
push
dec
mov
mov
loopne,pt
gs
aad
addb
popa
sbb
imulb
or
sbb
pop
push
sub
sbb
mov
push
stos
pop
sub
jge
sbb
xchg
mov
or
fdivs
movsl
mov
add
adc
jne
addl
jo
pop
test
test
jecxz
rcr
test
test
fistl
inc
push
mov
add
jno
pusha
movsb
cmc
test
icebp
fstps
outsb
andb
dec
adc
fs
mov
aam
xor
stos
jle,pt
orl
add
mov
inc
out
push
xchg
daa
movsb
sub
ljmp
dec
dec
mov
js
hlt
push
cmp
sub
orl
push
xchg
ljmp
mov
mov
bnd
movsl
stos
push
mov
push
cmp
inc
les
rcrb
cmpb
outsb
gs
dec
dec
mov
pop
cmp
scas
imul
hlt
fimuls
lods
and
or
out
mov
inc
out
outsb
jbe
jp
mov
xchg
inc
ja
subb
pmuludq
lock
lock
popl
les
pop
dec
gs
cmc
jle
cli
stc
lods
sbb
jns
movsl
jbe
sbb
fcmovnu
mov
pop
icebp
xchg
mov
lret
mov
out
imul
dec
pop
scas
jge
xchg
lods
xchg
ljmp
pop
fs
xor
xor
jl
int
stos
cmp
cmp
lret
daa
pop
pusha
mov
subl
aas
push
add
fnstenv
movsb
mov
scas
lea
jns
mov
jbe
cmp
sbb
jl
jg
adc
mov
sbb
fisubl
push
cwtl
fnstcw
pop
repnz
daa
or
sahf
xchg
fwait
cwtl
push
icebp
mov
xor
pop
clc
mov
stc
in
and
pop
cld
cmp
test
push
sarb
mov
dec
push
sub
les
mov
push
cmpsl
jl
pop
xchg
and
push
sub
dec
adc
lahf
mov
mov
xorb
inc
mov
mov
clc
ss
push
and
mov
nop
pop
dec
cmpsl
xchg
cmp
add
ja
push
mov
leave
test
lods
add
inc
pop
bound
xchg
push
and
stos
insl
imul
cmp
mov
sbb
adc
inc
push
imul
xchg
mov
shlb
test
fcompl
xorl
leave
add
push
or
lods
mov
test
add
idivb
push
ja
xchg
xor
push
cli
ds
cmp
pop
pop
adcl
movsb
mov
mov
xchg
jns
loopne
push
jne
std
nop
clc
fnstcw
mov
mov
pop
stos
sahf
push
es
aas
push
mov
icebp
push
push
in
ret
das
into
sbb
test
cltd
mov
scas
cmpl
gs
dec
push
lock
stos
lock
flds
jae
xchg
xor
pusha
mov
dec
mov
inc
leave
inc
mov
cmp
shlb
aas
and
inc
stos
stc
inc
das
xchg
sbb
in
push
push
jg
es
fstl
jbe
push
sarl
xorb
cli
out
add
pop
or
jae
cmpsl
inc
push
inc
dec
xchg
mov
push
or
out
adc
push
inc
testb
xlat
out
add
jno
push
popf
imul
push
cmp
arpl
in
ror
arpl
cmp
sub
pop
test
sbb
aaa
mov
xchg
pop
test
leave
jb
pop
mov
mov
jae
ficompl
cmpsb
ret
cmpsb
ficomps
jo
subb
rolb
or
adc
fnstsw
daa
test
sbb
mov
loope,pt
dec
mov
das
pop
xor
inc
push
adc
jle
mov
icebp
jl
pop
jle
loop
sub
xchg
sti
mov
mov
pop
lret
movsb
push
ret
mov
mov
test
xchg
add
je
stc
stos
out
mov
mov
es
outsl
mov
mov
xor
inc
adc
in
insb
orl
pop
push
xchg
outsl
shll
xlat
fstp
test
xchg
push
sbbb
pop
sbb
pop
add
jo
fmuls
in
imul
pop
adc
cld
aas
lods
sbb
out
je
rclb
popa
or
gs
aaa
pop
push
push
and
out
dec
push
sbb
jnp
movsb
sub
sbb
enter
daa
pop
mov
inc
jmp
cli
sbb
and
mov
and
add
insl
ss
inc
cmp
jo
sub
fwait
aam
inc
pop
mov
dec
add
xor
aad
adc
int
add
inc
in
ljmp
xor
lret
rcr
std
xchg
jno
sub
leave
fwait
scas
movsb
sti
lds
hlt
loope
push
cmpl
pop
pusha
jne
jb
push
xchg
add
popf
jbe
cmp
jp
cvtpi2ps
iret
and
jae
fbstp
pop
cmc
pop
addr16
xchg
data16
popf
inc
adc
aam
push
stc
jmp
jnp
int
cmp
xor
fnstcw
mov
rcll
jecxz
movsl
gs
mov
popa
or
test
sahf
insb
push
push
scas
mov
sbb
cmp
subl
shll
cltd
add
mov
push
ja
imul
pop
mov
jne
sbb
test
jecxz
pop
lock
outsl
ds
nop
popa
mov
repz
lahf
pop
adc
pop
out
test
cwtl
int3
jg
ret
push
lahf
xlat
xor
sub
in
pop
jg
jae
mov
test
gs
repz
outsb
out
jnp
shll
test
sbb
scas
adc
leave
add
and
inc
sbb
and
cmpsb
push
repnz
and
jmp
aam
and
fnstsw
leave
cmpsb
sub
jge
aad
push
adc
push
ljmp
add
xor
insl
inc
push
pop
xor
out
ret
stc
insb
ss
mov
push
mov
mov
xor
sub
aam
or
jmp
adc
mov
test
add
add
sub
push
add
mov
arpl
jae
push
dec
xchg
push
shlb
pop
push
jo
pop
cmp
into
xchg
daa
mov
aaa
pusha
cli
cltd
adc
out
fimuls
iret
push
push
jb
ret
scas
push
mov
cmpsl
sbb
fdiv
xchg
cwtl
pop
push
xor
in
xlat
lret
lret
jno
push
dec
lods
sub
mov
frstor
dec
push
mov
popf
xchg
cmp
in
fbld
sbb
pushf
pop
push
xor
push
mov
mov
gs
add
pop
pushf
je
clc
enter
movsl
lahf
lock
enter
int3
pop
dec
lods
test
pop
jne
fildl
es
cs
adc
lret
push
dec
rorb
bound
push
jb
loop
xchg
add
hlt
aam
mov
ljmp
pop
xor
and
popa
inc
adc
hlt
mov
lahf
push
sub
aam
inc
insl
in
jne
adc
inc
lea
jle
ret
xchg
push
arpl
mov
mov
inc
rcrb
fisttpl
dec
pushf
cmp
fadd
hlt
push
test
mov
or
mov
lds
mov
cmp
push
sbb
sbb
rsqrtps
outsb
or
hlt
lds
les
ficoms
sbb
pushf
mov
ret
jg
lea
movsl
loop
push
loop
sub
xchg
adc
aas
loope
pop
cltd
stos
mov
mov
xchg
std
or
sub
ljmp
js
shr
adc
mov
outsb
inc
xor
push
loop
pop
aad
sub
aad
sub
pop
imul
xor
xor
addr16
fsubs
setl
sti
pop
ds
mov
lods
push
imul
mov
dec
stc
mov
pusha
leave
cmp
sbb
aad
jg
mov
xchg
push
sub
mov
inc
icebp
sti
sub
pusha
jns
scas
xchg
push
loope
stc
push
inc
cmpsl
pop
or
jmp
cmp
adcb
mov
jnp
xorl
add
into
pop
cwtl
cmc
xor
jg
push
sub
mov
dec
and
xchg
je
dec
xchg
xor
mov
xor
push
inc
mov
xchg
xlat
mov
int
ror
mov
lret
mov
mov
dec
loopne
push
movsl
in
mov
mov
push
add
subb
aad
pop
scas
pop
ret
pop
inc
xor
outsb
mov
dec
pushf
cli
je
mov
outsl
xchg
data16
sbb
aam
push
dec
daa
enter
ret
pop
jecxz
and
pop
jg
xor
les
lods
jg
aas
push
jg
mov
ds
lods
push
push
bound
shlb
sbb
gs
xchg
xchg
pop
inc
ficomps
fisubs
add
mov
jp
push
hlt
inc
ss
jae
popa
mov
int
cli
cmp
test
movsb
push
cmc
bound
jmp
jl
sub
jmp
popa
js
adc
fisttpl
cltd
mov
cmp
out
push
jo
jle
xor
rorl
and
sbb
jbe
ljmp
dec
pop
add
int
jp
rcrl
rorl
in
lds
xor
lock
aaa
inc
adc
push
push
je
xchg
push
or
pop
push
repz
sub
int3
inc
das
and
in
push
aad
cmc
inc
in
push
test
dec
or
or
test
jle
push
jmp
lea
cmpsb
jo
test
mov
mov
mov
and
mov
xor
lret
inc
aad
std
fists
fs
das
ret
cs
outsb
inc
scas
sbb
dec
loop
adc
test
sub
cmp
sbb
cltd
imul
xchg
popa
or
add
dec
fistl
adc
icebp
add
mov
pop
fst
pop
incl
mov
mov
into
out
xor
movb
push
ror
popa
push
fdivs
mov
in
mov
aad
sbb
stc
push
test
int
mov
jae
sbb
cmp
mov
loope
outsb
fistl
inc
aam
mov
hlt
nop
pop
sbb
sti
ret
insl
loop
icebp
push
lea
dec
in
push
or
les
mov
ja
mov
hlt
sbb
cmpsl
sub
dec
adcl
ss
xor
push
addr16
loopne
inc
sub
in
addr16
inc
stos
inc
enter
mov
scas
test
fcoms
rep
sahf
test
adc
jnp
xchg
sub
fistl
das
shrl
dec
jmp
jecxz
adc
jo
stos
fsubrs
cmpsb
sbb
test
and
mov
outsb
adc
addb
stc
inc
dec
push
das
hlt
ds
inc
dec
test
inc
ficomps
jno
out
cmc
orl
cmp
clc
pop
out
mov
fs
iret
ja
cmc
test
pop
mov
adc
sti
orb
push
aas
popf
test
out
iret
cwtl
xor
test
pop
push
jno
adc
jp
cmp
mov
stos
repz
dec
sub
push
pop
ds
jbe
or
push
fwait
outsl
mov
sbb
loop
outsb
outsl
fidivl
mov
xchg
sub
inc
mov
mov
or
call
adc
jae
xchg
mov
das
pushl
mov
sbb
pop
lds
lock
outsl
jg
mulb
mov
xlat
xchg
xchg
ja
hlt
or
mov
cwtl
outsb
repz
mov
aas
mov
xor
je
aaa
push
or
adc
clc
mov
mov
jl
push
out
stos
popf
jg
xchg
mov
idiv
stos
ficompl
adc
jl
dec
pop
fwait
stc
inc
cmp
fs
sub
clc
jae
mov
enter
mov
test
add
mov
xor
xor
cmp
push
cmc
ss
and
sub
dec
mov
xchg
imul
loopne
push
adc
or
xchg
mov
mov
movsb
ljmp
sub
or
mov
sub
sbb
cli
xchg
mov
loope
push
push
daa
mov
mov
mov
fnstenv
sub
pop
fildl
gs
out
and
add
std
jne
out
bound
fldl
das
add
lods
test
fdivrp
sbb
mov
out
into
mov
adc
test
sbb
hlt
ds
mov
loopne
sbb
daa
mov
imul
mov
mov
jno
xor
lea
aam
cmp
pop
ljmp
mov
push
or
mov
dec
fmuls
in
push
mov
call
scas
cwtl
ljmp
adc
dec
mov
int
and
pop
mov
repz
insb
popf
pop
push
loop
cld
cli
rcll
push
dec
inc
inc
dec
popf
sub
imul
xor
jae
fs
ljmp
mov
imul
sarb
les
inc
mull
movsl
jmp
les
shrb
popa
sbb
mov
sahf
lods
mov
fisubl
lcall
ljmp
cmp
xchg
notb
daa
cmp
xchg
call
jl
or
ds
sub
jbe
jge
and
lea
xchg
xchg
les
out
sub
loop
fstl
fwait
pop
sarb
push
in
and
test
out
dec
arpl
dec
mov
xchg
stc
dec
push
fcompl
loop
inc
add
lahf
leave
jbe
dec
lds
xor
cwtl
cmc
shl
push
sub
std
inc
mov
push
jl
aam
adc
adc
adc
cs
jl
ljmp
sub
sbb
sbbl
add
incl
or
outsb
repnz
mov
inc
mov
add
es
mov
jecxz
add
cwtl
int
and
xor
add
mov
in
xchg
add
scas
or
lcall
sbb
scas
sbb
ss
pop
sti
aas
fistpl
jg
cvtps2pd
xchg
ss
add
cmp
out
rcrb
jge
sub
and
es
adc
shl
movsl
pop
imul
sbb
fmulp
dec
xchg
popa
jle
fldl
jge
imul
rdtsc
pop
mov
push
sub
lahf
pop
divl
nop
stos
in
sbb
push
sbb
add
jle
mov
andb
mov
mov
inc
push
push
push
xchg
loopne
cli
xor
andl
dec
mov
int
xor
sub
ss
insl
jl
outsl
inc
ret
fcomps
cmp
fisubs
adc
out
iret
sbb
dec
call
shlb
and
push
repnz
cmpsl
add
in
call
subl
sbb
dec
fisttpl
xchg
xchg
insb
pushl
pop
xor
inc
jns
push
nop
xor
call
fcoml
xor
mov
xorb
inc
jnp
inc
pop
dec
cmp
push
pusha
mov
pop
call
push
jmp
lods
sub
fbld
or
cmpsb
mov
and
sbb
or
push
push
js
out
pop
shll
xlat
add
add
imulb
push
loope
xchg
lahf
in
pop
mov
push
stos
xchg
fcompl
int3
hlt
mov
xor
xor
jg
ja
lea
std
fstps
sbb
das
cmpb
aad
clc
sbb
cld
mov
jae
and
push
xchg
push
aaa
jae
imull
xor
xor
mov
cmp
push
mov
hlt
adcl
sub
xlat
push
inc
and
adc
mov
xchg
mov
rcll
imul
sbb
push
loope
or
cld
std
clc
xchg
in
xor
dec
fidivrs
dec
clc
sub
data16
xlat
fs
movsb
arpl
scas
hlt
gs
push
jl
test
xchg
ds
push
inc
jecxz
ret
dec
or
cmpsb
pop
les
aas
out
les
or
push
pop
mov
xor
idivb
lcall
lcall
mov
and
cmp
cmp
outsl
dec
mov
cmp
mov
push
in
adc
add
pop
pop
fsubrl
push
stos
inc
popf
push
aam
xlat
andl
fdiv
icebp
push
js
xchg
xor
pop
mov
sbb
mov
mov
es
fstps
adc
push
inc
ret
roll
scas
out
push
xor
fstl
jns
jno
jmp
cmp
pop
pop
std
sub
jnp
jge
xor
cmc
lahf
xchg
imul
popa
std
std
mov
jecxz
ret
sbb
lea
outsb
or
pop
outsb
imul
mov
imul
cmp
mov
out
cli
lea
je
and
pop
pop
cmpsl
adc
sbb
mov
push
les
sbb
cli
xchg
outsl
syscall
aam
aam
imul
cmp
or
xlat
mov
mov
cmp
mov
dec
js
aaa
ljmp
push
push
cli
jae
xorb
cmc
scas
insb
aaa
cmp
add
fxch
jae
rcll
or
call
mov
push
inc
push
dec
test
sub
inc
mov
mov
ljmp
or
push
sbb
cmp
rolb
mov
into
fnstcw
push
outsl
dec
cli
vpsubw
xchg
push
inc
mov
lahf
test
and
push
jb
fisttpl
sbb
add
pop
arpl
xor
loope
sub
stos
mov
mov
bound
push
pop
jmp
pop
adc
jmp
mov
subl
push
xlat
arpl
mov
repnz
or
pop
ret
aaa
jnp
fdivs
push
cmp
mov
mov
mov
adc
jmp
pop
cmp
cltd
dec
out
scas
and
mov
mov
stc
and
sbb
jnp
arpl
repz
in
add
jg
leave
bound
fsts
or
lods
sub
mov
push
repnz
mov
int
fimuls
ds
jp
sbb
xchg
or
mulb
test
dec
ljmp
sarl
push
cmc
lcall
and
imul
lds
dec
and
cwtl
push
icebp
sub
hlt
mov
andb
jle
popa
jg
pop
iret
jae
subb
repnz
xlat
lock
pop
aaa
push
dec
ret
repnz
jnp
adc
mov
test
push
call
jg
adc
loop
pop
out
mov
xor
fdivs
hlt
ret
sahf
jp
pushf
in
je
jb
pop
xchg
jp
add
cmp
std
mov
addl
outsb
mov
jb
cmp
pop
loope
and
movsb
pop
movsb
pushf
out
jecxz
jmp
movsb
dec
pop
outsl
mov
lds
xchg
xchg
in
ljmp
movsl
inc
mov
jl
in
xchg
bound
pop
adc
xor
inc
xor
sub
test
adc
lcall
lcall
sub
jmp
cmp
push
pop
add
in
daa
pop
loop
out
and
shr
sub
in
sbb
mov
add
xor
add
popa
mov
aaa
jbe
xchg
sbb
dec
pop
adc
jmp
dec
dec
sub
cmp
adc
add
pushl
or
and
sub
aad
ror
stos
sub
loop
cmp
sbb
insb
scas
ds
inc
xor
push
cmc
pop
add
xchg
xchg
adc
add
or
addr16
ds
push
pop
aas
repnz
ds
cmpl
lods
sub
arpl
mov
add
mov
daa
popa
clc
cmp
dec
add
iret
movsb
pop
cwtl
stos
xchg
or
fistpl
scas
mov
mov
mov
add
sbb
adc
adc
mov
leave
push
and
insl
mov
push
movsl
mov
mov
xchg
cmp
aad
idivl
les
int3
and
mull
mov
xchg
push
mov
stc
sub
test
aad
inc
mov
and
jle
sub
jno,pt
lods
fs
mov
lods
das
addr16
fcmovnu
lods
jle
and
xchg
mov
fsub
jns
dec
fldt
lea
cmp
aas
inc
sti
pop
push
sbb
adc
sub
test
outsb
imulb
inc
pop
add
jns
divl
aaa
pop
xchg
add
pop
in
cli
xchg
pop
je
loopne
data16
test
xlat
cs
movsb
cmp
lock
push
mov
mov
lea
int3
mov
add
or
lock
or
mov
mov
mov
in
xchg
inc
fsubrl
lcall
jmp
fidivrs
cwtl
shll
and
cltd
dec
lds
ret
jle
sbb
adc
dec
mov
dec
call
xchg
pop
jae
es
out
sbb
or
out
repz
scas
test
mov
mov
sahf
ljmp
push
mov
sbb
jnp
adc
mov
inc
cmpsl
aam
movsb
inc
cltd
add
stos
dec
inc
sub
xlat
mov
fistpll
add
xor
data16
outsw
pop
in
test
scas
or
repnz
mov
push
in
pop
incl
sbb
and
xor
push
push
ds
add
xchg
jo
in
and
addr16
call
les
test
mov
scas
int
xor
push
sbb
in
ret
data16
std
cmpsb
test
orb
iret
insl
mov
push
icebp
lahf
ja
shrb
daa
fsubrl
flds
cld
dec
in
lcall
movsb
jb
popf
lcall
add
fs
out
rorl
xchg
subl
adc
vcomiss
push
dec
cmp
mov
loopne
jmp
jmp
loope
pop
cltd
add
aad
sub
push
movsl
push
mov
sub
out
push
mov
fcompl
test
jmp
sbb
jb
inc
repnz
pop
cmovl
jns
xchg
daa
push
dec
pop
enter
call
imul
cltd
and
and
outsl
enter
mov
mov
cltd
dec
sbb
push
hlt
sti
lea
rclb
data16
cli
dec
test
inc
mov
or
mov
jmp
jb
xchg
sub
iret
out
mov
jle
loop
inc
popa
sbb
rcrl
jmp
adc
fsubrs
sub
inc
lea
jg
xchg
imul
fdivl
or
xor
push
mov
ja
stos
call
adc
inc
mov
arpl
adc
orb
bswap
mov
jbe
mov
push
aaa
enter
add
sbb
andb
test
lcall
stos
pop
cwtl
loop
mov
and
in
or
data16
and
or
into
xor
mov
popa
pop
ffreep
inc
mov
lret
loope
call
imul
in
adc
sbb
sarb
nop
je
divl
stos
xchg
mov
cltd
arpl
jl
and
cmp
scas
mov
data16
or
mov
movb
dec
sbb
push
cmpsl
insb
aas
jecxz
lea
mov
sub
jmp
pusha
enter
imul
push
cmp
fldl
js
add
in
popf
mov
mov
movsb
and
pop
mov
jl
xchg
out
fdivrs
push
lods
addb
fists
dec
shr
jl
movlhps
hlt
pop
lea
scas
ss
push
jb
jmp
inc
adc
sbb
stc
cmp
sahf
mov
sbb
cli
test
add
xchg
fcmovb
inc
cmp
pop
movsl
inc
pushf
imul
lcall
xor
mov
outsb
mov
xchg
jp
je
aad
dec
sbb
inc
cmp
iret
xor
and
mov
xor
inc
dec
or
mov
xor
lret
dec
mov
repnz
sti
pushw
pop
ljmp
push
add
stos
sbb
fcmove
or
adc
imul
cs
sbb
into
daa
or
out
mov
aam
andl
test
jo
bound
sbb
adc
test
and
sub
movsl
jnp
fs
jmp
sarl
icebp
cli
inc
mov
fnsave
je
out
xor
fpatan
into
push
enter
sub
cmp
inc
adc
rorl
mov
inc
mov
jns
test
fimuls
add
leave
push
stc
pop
and
sub
insb
sbb
sti
in
dec
call
mov
or
mov
daa
int
sahf
sub
lods
mov
cmp
jg
pushf
aaa
stos
lds
inc
int3
inc
aaa
insl
cld
push
push
mov
out
xor
in
dec
xchg
outsb
leave
mov
stos
lahf
or
mov
dec
mov
scas
push
inc
or
and
and
pop
mov
xchg
fldcw
mov
loop
mov
aaa
stc
iret
data16
addr16
out
adc
cmpb
or
je
mov
xchg
fdivrl
mov
push
xchg
rolb
js
test
dec
mov
in
cwtl
es
cmpsb
gs
cmp
call
adc
mov
xor
es
pop
ljmp
cmp
out
xor
push
or
les
aaa
adc
pop
fucomp
cmp
ljmp
test
dec
pushf
jae
in
lock
js
stc
out
jge
ficomps
je
cmp
jp
or
int3
fwait
and
cmpl
aaa
cmpsl
repz
jmp
out
push
push
add
daa
cwtl
xchg
lcall
jmp
enter
sub
push
push
aas
in
mov
aam
sbb
mov
pop
fsubrl
and
push
das
int3
inc
ss
adc
mov
adc
rolb
xor
mov
cld
push
mov
mov
inc
mov
sahf
sub
push
aad
mov
arpl
xchg
shrl
sbb
std
xchg
mov
or
data16
mov
popf
lods
fwait
xchg
sub
pop
xor
shrl
shll
rcll
leave
mov
aad
aam
mov
inc
out
outsb
sahf
cmp
push
loopne
cli
shl
popa
pop
or
loop
and
push
movsl
adc
and
fimull
xchg
jmp
iret
and
mov
dec
push
xchg
cltd
sahf
xor
or
in
adc
jge
insl
lret
sbb
stos
jb
aad
insl
rcrb
cmp
fldt
lcall
jp
adc
pop
or
hlt
jno
repz
mov
and
sub
sub
repz
and
inc
outsb
pop
repnz
repnz
add
mov
iret
mov
or
lods
fdivrl
cmpsl
adc
cli
mov
ret
sub
lock
fdivrl
jbe
lds
sbbb
xchg
notb
cli
inc
dec
iret
lds
std
push
push
mov
scas
es
add
push
imul
xchg
mov
inc
test
inc
lahf
popa
es
pop
push
in
movsb
sbb
cs
pop
dec
sbb
sbbb
or
call
mov
xor
jb
ret
das
jl
mov
xor
xor
cmp
add
sub
xor
sbbb
mov
or
pop
popa
xchg
cmp
lret
int3
rcll
ret
mov
or
push
test
mov
xlat
ds
repnz
cmp
pmaxsw
cmp
inc
lods
addr16
sub
or
jno
stos
es
pop
ds
jecxz
adc
or
sbb
loopne
mov
pop
jo
or
push
adc
and
sub
lret
push
lcall
cld
mov
test
ret
imul
jnp
adc
add
punpcklwd
outsl
popf
cmp
in
pop
xchg
fstps
jl,pn
clc
repz
jns
mov
mov
inc
cli
js
mov
add
dec
or
xor
xchg
jbe
add
rcrl
lret
inc
cld
ja
shrl
push
sahf
cmp
push
jp
adc
dec
mov
call
addr16
loopne
sti
mov
je
popa
xor
push
jecxz
mov
push
push
stc
roll
xchg
mov
pop
push
jb
jb
mov
push
jne
out
addb
push
push
add
movsb
aad
addr16
movzbl
rorb
out
mov
jg
shll
mov
icebp
mov
or
or
ret
sub
mov
mov
mov
fwait
cmpsl
mov
add
lret
lahf
lds
mov
es
call
mov
repz
data16
outsb
adc
mov
aaa
popf
mov
mov
mov
xor
std
xchg
add
aam
or
fisttpll
scas
fcompl
movsb
fnstcw
or
and
outsl
pop
dec
inc
test
add
cli
jg
sbb
call
js
inc
ret
cmp
or
xor
stos
dec
sbb
lret
mov
lea
test
xchg
xchg
add
jge
mov
adc
icebp
mov
sub
leave
fs
mov
cmp
repnz
xor
mov
xor
lret
adc
js
jo
add
lahf
xor
fdivrl
jnp
add
scas
xchg
and
hlt
test
sarb
sbb
ljmp
addr16
mov
jae
in
imul
gs
imul
je
test
mov
mov
xchg
jnp
dec
or
ret
push
insb
iret
jle
pop
aam
sub
ljmp
push
jl
mov
push
xor
or
aad
mov
loope
js
mov
mov
outsl
jbe
out
rcl
je
adc
outsb
frstor
push
sub
pop
mov
mov
mov
xchg
int3
cltd
andb
mov
jle
insl
pop
xor
cmp
xchg
mov
insb
dec
xchg
mov
jle
dec
fs
sub
int
mov
iret
movsl
sbb
jge
lds
lods
inc
jns
add
lcall
clc
add
mov
in
xor
mov
clc
or
jecxz
cmc
mov
sub
lret
push
cli
fs
scas
inc
jmp
mov
cmpsl
js
sbb
mov
hlt
xor
fbstp
and
ficoms
xchg
lcall
and
ss
das
add
imul
mov
call
in
rep
int
fists
repz
cmpsb
out
int
je
and
arpl
repz
push
sbb
jp
mov
xor
mov
push
nop
add
test
xchg
xchg
je
ljmp
outsl
dec
bound
loope
popa
incb
std
je
mov
dec
pop
mov
dec
mov
dec
sbb
stos
mov
rolb
aam
xchg
dec
dec
mov
push
test
ret
cmc
jo
xor
das
dec
and
rcll
jg
dec
icebp
cmc
jmp
inc
jg
mov
insb
xchg
scas
xor
cli
sub
inc
mov
inc
mov
cmp
pop
inc
ljmp
push
rcrb
es
or
mov
or
add
shrb
iret
lds
add
popa
insb
cmp
add
clc
rorl
pop
jb
mov
lcall
push
jno
inc
lea
xor
popf
mov
out
aaa
xchg
cmp
fdivrp
lock
add
pop
rcll
dec
adc
dec
inc
mov
pop
sub
cmc
sub
or
out
push
push
movsl
pop
shlb
jne
fmul
inc
in
mov
test
aas
inc
aaa
sub
pop
imul
xchg
aam
mov
lcall
cltd
sub
adc
outsl
in
lods
lret
adc
fidivs
clc
add
test
and
daa
stc
dec
test
jmp
fcmovnbe
jmp
sub
inc
push
mov
test
jbe
cmp
loop
sbb
mov
stc
mov
in
xchg
gs
jo
adc
mov
pusha
pop
fstpl
in
repnz
pop
pop
fmull
scas
or
sub
insb
and
add
out
jno
daa
mov
pushf
jo
inc
or
mov
paddsb
ljmp
add
decb
ret
mov
leave
fwait
in
xchg
jmp
cmp
leave
jbe
push
cmpsb
pop
popf
cmpsb
in
js
pushf
cmpsl
aaa
shrb
pop
mov
mov
lods
adc
orb
sub
ljmp
or
push
negl
and
fisubrs
xchg
cmp
aad
in
jnp
jno
ljmp
lock
cmc
inc
jle
mov
jb
arpl
cltd
dec
rcrb
adc
mov
subl
scas
push
lcall
cmp
insl
scas
jns
pop
mov
lret
inc
out
repnz
mov
mov
sbbb
mov
sbb
dec
xchg
fists
mov
daa
sub
jecxz,pt
lea
add
add
push
inc
pop
push
loope
sbb
hlt
push
cmp
mov
orb
fimull
scas
gs
mov
mov
mov
jno
push
fimuls
mov
push
push
jle
addr16
push
mov
add
jecxz
mov
sub
adc
insl
dec
push
inc
ret
test
daa
arpl
inc
push
mov
ljmp
out
loope
lds
stc
lods
dec
movsl
dec
imul
in
test
push
test
xor
lods
xor
inc
xor
imulb
movsl
mov
cmc
aam
cmpsb
or
mov
lret
jns
jge
rcl
sbb
add
or
in
dec
push
cmp
mov
divb
mov
cwtl
call
dec
push
movsl
mov
shrb
popa
pop
cmpsb
int
push
or
mov
flds
mov
sub
or
in
jg
sbb
clc
cmp
fs
sub
clc
xchg
adc
outsb
movaps
stos
jnp
outsl
push
jns
sbb
stos
mov
rcrb
subb
cwtl
pop
mov
dec
mov
mov
jae
dec
ret
jae
pop
dec
add
stos
jmp
popa
ja
daa
cmp
add
jo
xchg
loope
mov
push
out
sbb
push
dec
jp
pop
cli
xchg
shrl
in
hlt
xchg
mov
jp
arpl
push
addr16
dec
xchg
mov
add
xor
xchg
and
mov
dec
and
mov
fildll
push
inc
and
push
jbe
add
stc
int
push
push
repnz
xor
jge
fwait
xor
lahf
fsubrl
xchg
cmp
int
sub
mov
xor
inc
cmp
cli
insl
shrb
iret
mov
clc
sub
push
cmovns
push
andb
les
andb
ret
add
xor
dec
rclb
shl
xchg
jb
add
cmp
jne
add
pusha
insl
enter
test
stos
push
hlt
add
adc
push
inc
roll
xchg
cmp
lods
aas
movsl
push
or
or
mov
and
mov
push
jle
xor
bndldx
sub
or
fmuls
out
lret
into
pusha
xor
sub
push
dec
scas
lcall
in
int3
sub
xchg
cltd
jp
mov
clc
mov
adc
bound
loop
push
dec
rorb
mov
xchg
inc
pop
fwait
pop
dec
cmpsl
addb
xchg
out
mul
push
iret
push
push
and
shr
jge
aas
jns
arpl
rorb
xor
movmskps
push
lcall
lock
xchg
mov
nop
mov
sbb
ds
xchg
xchg
jl
nop
xchg
cmpsl
imul
sbb
loope
push
enter
xor
sbbl
push
arpl
in
xor
dec
pop
lods
dec
inc
fcmovbe
pop
scas
repz
rcrl
jne
and
add
inc
call
bnd
and
outsb
daa
lea
shlb
xor
sbb
inc
fs
outsl
scas
decb
es
adc
mov
scas
adc
test
pop
mov
test
xchg
ljmp
push
movsb
jmp
scas
pop
xchg
sub
gs
insl
pop
jp
mov
mov
jle
xchg
rorb
mov
jo
leave
dec
fdivs
or
cmc
push
loop
push
dec
push
adc
imul
xchg
movsl
lret
and
mov
xor
add
movsl
lret
fiaddl
xor
adcl
add
lock
cmp
stc
add
shrb
add
sub
adc
mov
push
jbe
pop
inc
mov
or
out
mov
pop
mov
mov
sbb
adc
xlat
fs
sbb
leave
dec
xor
out
test
fdivs
repnz
sbb
xchg
pop
bound
mov
inc
lahf
push
cs
subb
clc
aaa
xchg
sbb
mov
or
pop
mov
cmpsl
add
ljmp
push
shl
pop
insl
pop
lret
xor
mov
pop
pop
scas
xchg
sub
pop
out
dec
mov
xlat
inc
and
fwait
sub
pop
mov
pop
dec
in
xchg
pop
push
push
push
adc
sub
mov
xor
jnp
inc
shl
inc
push
stos
iret
xchg
dec
or
iret
enter
neg
add
cmp
xor
mov
call
sbb
in
insl
and
mov
jl
adc
pop
or
sarb
sub
pop
leave
shll
dec
gs
out
mov
test
xchg
rolb
mov
or
push
jnp
fwait
jne
dec
add
jmp
popa
scas
je
pop
cmp
nop
neg
test
inc
add
ss
fdivrs
jns
cld
push
movsl
fs
sub
std
hlt
pushf
pop
xchg
mov
call
push
xchg
daa
inc
js
fstps
and
cltd
dec
ret
or
jge
out
cwtl
mov
mov
dec
or
dec
adc
js
std
in
and
mov
aas
add
sbb
sti
adc
or
xlat
dec
and
inc
lods
addr16
scas
jmp
orb
xor
rorb
in
pop
mov
mov
xor
cmp
add
lret
or
clc
and
dec
movsb
test
adc
push
andb
or
xchg
xchg
pop
pop
call
mov
pop
or
dec
sbb
fs
hlt
adc
adc
pop
lods
push
cld
lods
cmp
push
imull
sbb
or
xor
out
jb
jge
pop
sti
test
sub
fwait
cmpsl
mov
sub
rclb
add
aas
insb
mov
add
add
add
sub
fiaddl
xlat
cli
insl
xor
sarb
pop
mov
xor
sub
fidivs
test
dec
sub
enter
leave
xchg
inc
stos
xor
or
dec
bound
push
gs
cmp
push
movsl
lods
int3
add
xor
in
rcr
cli
pop
mov
push
mov
hlt
mov
or
add
jbe
aam
push
inc
jne
and
and
gs
in
fwait
in
cmp
ss
inc
push
arpl
outsb
or
scas
sub
push
mov
xor
push
sbb
jge
dec
out
hlt
test
sub
mov
addr16
pop
js
sti
jecxz
lret
fists
daa
dec
lcall
sbb
cltd
push
inc
adc
pop
sub
and
sub
add
dec
fsubs
mov
stos
cmpsl
mov
dec
int
and
fcomps
nop
mov
dec
seta
cs
stos
sti
cmp
rolb
pop
push
push
add
add
or
adc
push
cmc
repz
lds
cmp
fstp
xchg
sbb
jmp
shl
cmp
xchg
mov
and
xchg
jns
loope
outsl
mov
or
push
jno
add
cld
fmuls
notb
outsl
cmpsb
nop
inc
xor
in
dec
aam
jg
outsl
ljmp
adc
call
or
cltd
cli
cmpsb
icebp
mov
ljmp
fdivl
mov
push
pushf
add
adc
cwtl
add
cmpsb
pop
xor
int3
jge
repz
mov
adc
fdivrl
jno
icebp
xchg
jg
pop
hlt
mov
sti
fcompl
out
jle
pop
aam
and
mov
stc
mov
or
pop
pop
or
loop
out
js
adc
enter
neg
ficomps
mov
sbb
add
xchg
xor
jb
mov
mov
in
pop
lret
adc
xor
and
push
xchg
flds
leave
sub
pop
mov
test
mov
xlat
and
out
pop
int
push
jmp
int3
dec
rsqrtps
mov
ds
dec
icebp
mov
insb
inc
xchg
ds
xchg
and
jp
dec
jb
mov
aam
pop
jne
sarb
mov
popa
cmp
mov
jae
scas
add
inc
cli
sbb
jp
or
popf
adc
dec
dec
xor
mov
dec
xchg
xlat
push
mov
ja
mov
lds
jb
sbb
inc
xor
sbbl
mov
stos
stos
mov
or
int3
cli
sbb
loope
jnp
pop
dec
xchg
aad
daa
jg
loope
jl
inc
call
int
clc
es
cmp
jl
add
cmp
lret
mov
inc
adc
mov
mov
inc
outsl
popa
jns
shll
or
mov
dec
xor
pop
pushf
add
xchg
rcrb
imul
mov
push
dec
sub
jp
cmc
lods
pop
adc
xor
sbb
into
ljmp
jge
xchg
xchg
push
jae
ljmp
lods
dec
in
jbe
cld
stc
sub
repnz
mov
fdiv
dec
adc
inc
test
aaa
daa
adc
inc
adc
mov
notb
jns
iret
mov
sub
into
or
mov
in
pop
sti
add
sub
dec
ret
into
xchg
sbb
mov
clc
out
cs
data16
adc
and
mov
cltd
leave
leave
das
dec
or
insl
and
pop
xchg
and
in
cmpsl
dec
lret
jmp
adc
shll
dec
rcrl
jp
fwait
mov
sbb
js
xchg
clc
lds
rol
cmpl
cltd
pop
adc
push
or
mov
push
jmp
cmc
xor
cmp
fists
shlb
push
sar
xor
push
push
das
dec
inc
or
scas
mov
mov
pop
mov
cmp
data16
mov
gs
popa
nop
add
cld
out
sub
jnp
cmpsb
and
jge
scas
setbe
subb
push
sarl
fimuls
jl
adc
icebp
pop
mov
lock
mov
push
or
xadd
add
and
cmp
notl
cld
dec
cs
or
push
mov
ret
mov
xchg
fadds
test
push
scas
push
cli
adc
and
insl
in
bts
jp
or
fdivl
cmpsl
icebp
stos
xlat
xchg
cmc
add
push
jecxz
inc
xor
mov
data16
dec
movsl
call
shrb
mov
dec
xchg
pop
stos
je
mov
loope
ja
addr16
dec
adc
pusha
xor
sbb
ljmp
cmp
mov
arpl
and
cld
cmp
mov
data16
xor
lcall
pusha
std
xor
sub
dec
dec
jb
ja
pushf
jbe
loope
push
push
jb
outsl
cs
clc
out
inc
repnz
sbb
out
fnstsw
es
stc
or
mov
std
xor
or
mov
mov
or
sub
jl,pt
cs
cmpsb
loop
das
into
sarl
inc
add
jns
xchg
pop
inc
push
rorb
add
stos
ds
inc
push
out
sbb
out
inc
insl
sbb
push
popf
stc
sub
mov
inc
call
flds
fnsave
jl
cwtl
clc
loopne
fs
cltd
xor
lods
pop
push
loop
xchg
cmp
and
mov
cld
jecxz
outsl
inc
test
mov
xchg
ds
mov
mov
and
xor
into
push
lods
dec
mov
sti
or
push
popa
adcb
add
mov
and
xchg
clc
shll
outsl
or
or
bound
in
js
cmc
mov
pop
jecxz
push
shrb
or
lods
jb
jo
lea
mov
push
aam
sub
xor
inc
jnp
mov
xor
orb
cmp
daa
and
bound
cmp
cmp
mov
push
fisubrl
mov
fcmovnb
cmp
and
orb
inc
xchg
int3
inc
jo
sbb
sarl
adc
adc
fxch
imul
insb
push
xchg
adc
push
xchg
div
push
cmp
lock
push
es
lret
inc
cli
jle
mov
shrl
sub
arpl
and
mov
sub
xor
jl
cld
mov
call
outsl
dec
in
rolb
ja
jp
mov
test
bound
or
aaa
add
lahf
call
iret
pop
push
jbe
ja
mov
mov
jecxz
sti
cmp
inc
ljmp
jg
stc
negb
jl
inc
scas
enter
clc
jns
sahf
ljmp
xchg
push
xchg
fistl
or
out
out
out
loope
pop
and
dec
cmp
pushf
adc
mov
clc
push
inc
std
in
roll
lds
sub
fdivrl
movsl
jl
xchg
ret
lods
jb
mov
ret
push
test
bound
xor
sub
xchg
mov
pop
xchg
inc
insl
out
xchg
mov
fiadds
sbb
and
cli
shr
xchg
push
iret
dec
nop
cltd
xchg
pop
cmp
cmc
jne
xlat
adc
out
fnstenv
sbbb
insl
in
mov
mov
out
or
js
out
pushl
pop
fdiv
jp
sbbb
mulb
fstps
sub
das
push
clc
loope
push
sub
es
xlat
les
jmp
mov
pop
sub
jg
inc
dec
stc
js
jle
cld
fimuls
cmp
adc
ja
int3
push
adc
inc
sub
ret
dec
and
cmp
push
scas
cmp
out
xchg
outsb
call
push
sbb
add
sub
cmc
cld
testl
and
jle
mov
int
cld
push
rclb
cmp
rcl
imul
into
cwtl
add
lea
inc
mov
adc
lcall
cwtl
dec
fsubrl
cld
sarl
je
int3
test
push
int3
inc
popa
repz
xor
xchg
pop
jle
cs
call
push
outsb
sarl
xor
fmull
sarl
cwtl
mov
imul
cwtl
fs
gs
clc
bound
push
sbb
stc
push
addr16
jns
xlat
rclb
inc
ret
add
pop
cmp
pop
movsl
popa
sub
add
push
adc
pushl
loope
cmp
rdtsc
outsl
fldenv
cli
fisubrl
cld
xchg
xorb
out
pop
cmp
inc
pop
scas
lret
and
testb
inc
pop
jmp
fs
xchg
mov
mov
hlt
mov
cmp
in
pop
gs
lret
out
sbb
pop
add
xor
push
mov
dec
jno
xchg
in
jns
mov
pushf
xor
loop
shlb
mov
mov
push
leave
pop
sub
scas
loop
push
pop
lea
cmp
push
hlt
sbb
orl
arpl
lds
ficomps
add
xlat
aad
jp
pop
xor
iret
dec
push
arpl
sub
insl
outsl
loopne
xor
pushf
push
shr
das
jmp
adc
push
xchg
pop
imul
inc
sbb
mov
dec
jb
sbbl
cmp
stos
dec
jno
popf
sub
cmpsb
scas
scas
adc
sarl
or
inc
clc
jae
repz
jnp
push
loop
inc
call
pop
mov
or
mov
bound
andl
sbb
std
adc
sbb
pop
push
push
mov
mov
in
loop
sbb
pop
rorl
mov
and
gs
jmp
cmp
adc
mov
dec
jle
test
xor
js
mov
or
mov
mov
mov
inc
outsb
adc
mov
lods
jg
xchg
cli
les
stc
xor
sub
add
xor
scas
popa
mov
mov
or
mov
test
fisubrl
inc
popa
jae
sti
pop
fs
add
movsl
clc
pop
lods
scas
push
jle
fbld
sub
pop
inc
sub
pop
scas
or
iret
sbb
mov
in
cmp
aam
es
xchg
ss
add
popf
ja
das
fstp
movsb
xor
rolb
mov
iret
in
lods
ret
pop
out
xorb
insl
fsubl
xchg
or
arpl
inc
rclb
and
pop
xchg
mov
andb
inc
add
ret
mov
mov
mov
sbb
scas
mov
std
jmp
pop
out
into
pop
adcl
ja
mov
addb
out
mov
enter
popa
add
lock
enter
adc
subl
jg
and
stos
dec
jns
or
jl
hlt
xor
and
mov
out
cli
adc
adc
jecxz
out
iret
xchg
pop
cmp
inc
lret
aam
xchg
movsb
add
pusha
loop
dec
jne
jbe
pop
or
call
push
cmp
rcrl
sti
gs
int
push
outsb
push
movsl
or
cmpsb
xchg
ds
ds
adc
sub
xchg
cmpsb
scas
jb
std
shlb
dec
xor
mov
lods
push
mov
gs
mov
aas
rol
lahf
push
push
mov
popa
sub
ljmp
jecxz
adc
pop
js
out
jno
pop
pop
mov
jmp
in
push
inc
mov
add
cmp
in
sti
incl
repnz
in
mov
dec
sub
loop
mov
and
loop
dec
pop
outsb
sbb
aaa
mov
scas
popf
mov
scas
bound
nop
fnstenv
ljmp
sbb
lds
mov
sub
int3
adc
fcompl
and
sub
lahf
and
jnp
fisubs
idivl
cmp
sub
sbb
push
push
push
push
cmp
mov
sbb
and
adc
xor
pop
jmp
inc
sbb
push
mov
xor
scas
sub
pop
fsubrl
outsl
xor
dec
sub
fbstp
fwait
fs
push
icebp
and
popa
es
mov
sub
add
sbbb
sub
jbe
sub
add
insb
fadd
cli
fstl
jae
adc
mov
int3
push
insb
sub
xchg
ficoml
xchg
mov
sbb
mov
out
ficompl
jg
popf
sbb
xchg
in
test
adc
mov
adc
xchg
loopne
mov
clc
idivb
stos
xor
xchg
je
fidivs
mov
add
sub
and
and
repnz
outsb
cmpsb
arpl
lods
arpl
dec
push
pushf
out
int3
dec
ja
jns
dec
add
mov
and
lods
or
nop
inc
dec
test
jmp
mov
dec
lock
xor
sub
mov
sbb
jp
or
cmc
xchg
shrb
add
push
dec
pop
inc
sub
jo
jle
scas
dec
jo
in
ds
and
shl
push
sub
adc
lds
js
or
out
dec
pushf
adc
mov
imul
ja
cmp
xor
ss
jmp
jbe
enter
pop
loop
add
dec
and
test
or
mov
sub
mov
test
icebp
or
out
xchg
jmp
sub
shr
inc
sub
cs
xor
or
adc
pop
jg
xchg
jg
out
das
add
jo
xor
push
sub
out
les
pop
mov
loope
xor
inc
push
and
popa
les
repz
popa
mov
cmpl
fs
pop
pop
sbb
adc
scas
cmpsl
push
out
xor
cmp
lock
ds
mov
cmp
int3
dec
shrl
mov
sub
cmp
jmp
dec
inc
fidivrs
fs
ljmp
sub
and
pusha
mov
insb
daa
popa
cltd
hlt
push
movb
rclb
jo
push
dec
mov
cmp
lahf
pushf
pop
sbb
xor
push
adc
sbb
gs
popl
dec
dec
push
into
cli
outsb
es
cmpsl
dec
js
jae
push
jae
shll
cmp
in
sbbb
xchg
lret
jmp
cli
mov
add
lds
mov
push
sub
push
push
scas
out
pop
xchg
out
cmp
pop
dec
sbb
pop
divb
inc
add
mov
cmp
movsb
sti
loop
push
in
pop
stc
int3
inc
sbb
mov
pushf
inc
jo
dec
das
pop
lret
pop
rcl
push
sete
filds
aad
insl
pop
xor
aam
scas
pop
xlat
cli
sub
pusha
clc
mov
imul
cli
cmc
fwait
in
xchg
sti
out
cs
lods
mov
mov
sub
cmp
and
pop
jmp
push
xchg
pop
mov
mov
adc
pusha
lret
push
sub
and
mov
push
inc
leave
push
ret
je
psllw
sub
mov
das
push
dec
ret
ljmp
in
in
push
add
inc
or
sub
icebp
xchg
and
adc
lahf
popf
cmp
jmp
xchg
add
jnp
or
jl
xchg
xchg
js
mov
out
addr16
and
inc
mov
leave
sbb
in
pop
in
and
test
ret
adc
fs
pop
jmp
xchg
into
mov
jp
or
mov
sahf
rcll
mov
movl
jmp
outsl
popf
push
ret
ss
add
pop
mov
mov
aaa
dec
sti
mov
jns
rolb
pop
fmull
sub
in
pop
mov
adc
cld
mov
jl
lds
mov
mov
gs
add
dec
xchg
pop
out
stos
into
add
sub
adc
add
faddl
movsl
dec
mov
inc
cmp
dec
sbb
mov
pop
pushf
stos
out
push
sar
sbb
cmpsl
sbb
lcall
popa
mov
or
sar
shrl
lcall
shll
scas
mov
inc
bound
std
mov
daa
inc
cld
pop
leave
inc
adc
daa
mov
shrb
mov
mov
dec
adc
cld
mov
push
pushf
push
xchg
jne
test
repnz
mov
in
outsl
jecxz
sbb
xchg
out
push
mov
xorl
adc
xor
jno
add
lret
xchg
inc
mov
ss
dec
xchg
popf
adc
scas
cmpsb
cmpsb
out
inc
and
imul
cmp
je
nop
testb
addr16
mov
les
mov
pop
or
cwtl
pop
sti
mov
jns
cmp
out
push
rcrb
sbb
rorl
mov
and
cld
aad
mov
jg
push
push
out
pushf
stos
cwtl
sub
mov
add
data16
or
and
call
stos
mov
sti
fadds
out
sar
ret
fbstp
in
pop
pop
inc
jp
push
pop
out
clc
xchg
push
mov
enter
cmp
push
cmp
fcomps
sub
lds
cmp
fldl
or
xor
inc
or
inc
sub
and
pop
mov
inc
cli
dec
mov
fdivl
or
ja
push
test
pusha
cmp
mov
and
test
fidivrs
addb
dec
and
or
test
pop
in
pop
cmp
bound
pop
out
cltd
and
inc
stc
shll
sbb
inc
in
xchg
fidivs
push
fstp
jae
das
mov
andl
push
mov
test
js
pop
dec
push
cmp
push
mov
out
push
push
bnd
dec
lahf
mov
mov
sahf
and
mov
stc
aam
pop
cmpsb
stos
push
aam
adc
mul
int3
xor
xchg
sub
and
lods
insb
icebp
mov
mov
mov
pusha
in
notl
pop
jo
inc
inc
xchg
dec
inc
addl
mov
sbb
decl
mov
popf
xor
add
or
negl
test
out
push
lcall
push
xchg
addr16
mov
loopne
repz
in
xor
inc
or
outsb
xor
dec
ja
sub
cld
in
pushf
clc
adc
adc
into
testb
xor
jmp
push
ljmp
mov
dec
subb
push
jmp
or
cmp
mov
pop
xchg
mov
int3
nop
sub
and
fs
dec
mov
lds
dec
imul
mov
pop
and
repz
gs
movsb
add
loopne
pusha
or
out
out
mov
test
pop
daa
stc
mov
sbb
lret
mov
lret
lret
call
gs
ret
xorl
xchg
insl
xchg
mov
sbb
ja
jl
pop
jmp
xchg
pop
enter
lds
pop
es
sbbl
insl
cmpl
paddsb
pop
aaa
cld
mov
rcrl
jl
xchg
aad
dec
fistps
mov
cwtl
cmpsb
pushf
jo
scas
xlat
push
mov
int
inc
lods
xchg
ret
ret
pop
xlat
ss
lret
setns
daa
repz
sub
pop
mov
mov
cltd
stos
jae
es
ret
xor
cmc
cmc
jmp
cmp
lock
add
lret
decl
or
mov
popf
ror
hlt
sub
inc
dec
adc
int3
cmpsb
push
ret
ret
inc
es
and
inc
aaa
les
mov
cmp
mov
xchg
cmpl
mov
mov
mov
ja
fnstcw
movsl
sub
shll
jmp
rcll
jle
test
jecxz
pop
loope
push
loope
sbb
sahf
jno
push
lods
xor
fcmovnb
sub
add
push
jns
xchg
ljmp
inc
push
fisttpl
jo
ret
frstor
iret
fs
jbe
jae
arpl
rol
push
fisubl
lret
shrl
rclb
and
or
xchg
mov
and
sub
inc
lahf
pop
ja
pop
aaa
mov
test
pop
mov
or
cltd
outsl
lock
add
sub
inc
andb
jns
icebp
xchg
pop
fdivs
push
xchg
outsl
and
inc
cmpsb
arpl
data16
mov
mov
jl
add
fsubrl
fiaddl
dec
fcos
pop
cmp
sbb
faddp
xchg
mov
in
insl
jns
cmpsl
sbb
push
push
jecxz
jge
push
cmp
ret
fmul
mov
inc
xorl
xor
xchg
inc
xchg
in
pop
gs
push
andb
out
ret
jg
call
add
inc
jp
pusha
xchg
call
jle
xchg
ljmp
jne
lock
and
xchg
dec
sar
adc
test
fisttpl
cltd
sub
lahf
add
mov
mov
in
hlt
sbb
adc
adc
add
fisubrl
xchg
sbb
imul
and
push
pop
or
add
xor
scas
imul
outsl
cmp
in
and
outsl
aad
xchg
ret
leave
ja
push
lds
loopne
cmp
and
sbb
pop
sub
pusha
xor
and
push
push
das
xchg
fwait
es
or
sub
lcall
xor
daa
sbb
pusha
cmp
cmpsb
sub
divb
cmc
cld
cwtl
dec
mull
js
rolb
or
push
out
lods
sub
imul
clc
insl
out
iret
dec
sub
sbb
icebp
mov
mov
pusha
mov
add
jbe
jecxz
shl
pop
inc
mov
js
inc
cs
mov
push
pop
std
jmp
mov
cmp
repz
push
xor
xrelease
push
dec
cmc
and
pop
hlt
push
or
dec
xor
fsub
pop
inc
xchg
sahf
addb
and
in
push
call
xor
cmp
sbb
pushf
dec
add
mov
sarb
in
adc
and
xchg
or
dec
bound
loop
push
jno
mov
cmp
push
aaa
clc
push
mov
aaa
dec
shlb
aas
xchg
mov
gs
pop
iret
jne
fcmovb
or
or
adc
and
cmp
rcrl
jo
fstpl
hlt
mov
mov
icebp
ror
movsl
cld
xchg
jne
dec
xchg
leave
and
or
cmp
push
loopew
arpl
push
scas
movsb
jl
lods
lods
add
loope
add
je
pop
fcoms
in
imul
das
xchg
ret
nop
repz
pop
or
subb
pop
imul
add
ljmp
shrb
int3
loopne
and
sarl
gs
fmul
sbb
mov
pop
out
aas
insb
mov
add
cltd
lea
lods
cmp
scas
jmp
nop
add
cmp
mov
and
mov
int3
fiadds
mov
xchg
dec
fwait
mov
and
icebp
sti
test
mov
ljmp
fldt
mov
mov
and
movsb
repnz
xchg
divl
sahf
dec
push
push
push
xchg
aam
aaa
in
mov
outsb
xchg
ja
out
inc
scas
mov
in
decl
lds
mov
mov
mov
icebp
cmp
jmp
not
call
fsubrl
aas
adc
push
test
ds
cmp
xorb
jb
rolb
lods
clc
loopne
das
stos
iret
add
mov
js
jge
sti
cmp
mov
loopne
mov
cltd
ds
fbstp
dec
xchg
out
jge
xchg
das
cwtl
jae
loopne
cld
andb
sti
enter
xor
jge
mov
inc
mov
loopne
add
jecxz
xor
xchg
cmp
lret
fst
and
xchg
add
xchg
lock
popa
imul
dec
out
popa
sahf
push
sbb
movsl
outsb
mov
das
adc
sbb
sbb
inc
push
mov
fdivr
dec
inc
xlat
movsb
mov
mov
shll
mov
shl
sub
cltd
call
or
adc
xor
test
insb
jmp
xor
ja
xchg
imul
dec
adc
mov
in
or
loopne
loope
mov
jp
jne
repnz
cmp
fs
push
or
dec
xor
test
fiadds
xor
mov
sub
dec
xchg
xchg
and
test
xchg
mov
push
scas
mov
icebp
gs
push
xorb
inc
rorb
and
in
insb
pop
add
arpl
fwait
hlt
push
mov
and
xchg
mov
pop
movsl
out
imul
ret
cltd
ret
adc
mov
and
mov
inc
pop
inc
jle
fstpl
clc
push
ja
sbb
test
push
int3
add
or
cmp
int3
aaa
add
jns
mov
leave
sbb
push
insb
in
enter
mov
or
push
call
push
mov
incb
mov
jl
push
movb
jo
jl
jmp
fwait
in
shrl
pusha
iret
and
outsl
cli
cmpsb
rcrl
out
cli
or
out
sti
call
inc
ja
int3
test
sub
xor
js
sbb
mov
test
testl
mov
jge
add
js
jo
or
mov
rcrl
or
add
imul
out
inc
inc
push
into
dec
lret
gs
nop
mov
dec
test
ret
jg
and
and
xor
shll
add
add
lods
push
stc
add
testb
mov
js
hlt
sbb
jl
cmpl
mov
lods
in
cmp
les
or
xchg
xor
ds
mov
jle
and
popf
push
mov
out
fimuls
imul
adc
rorl
add
outsl
stc
adc
dec
jo
sub
sbb
cmp
pop
outsb
inc
cld
inc
xlat
jb
push
xchg
xchg
pop
mov
movsb
stos
dec
cmpsl
fstps
mov
pusha
loop
ret
sub
je
cmp
ret
and
ror
jnp
cmp
pop
sub
jmp
loope
sbb
pop
mov
mov
xchg
xchg
dec
xor
insl
stc
rorb
pop
or
jne
mov
fcoms
jb
pop
cmpsl
jg
lea
sbb
xchg
sarb
imull
sbb
nop
xor
mov
pop
in
insb
inc
cmpsl
fnclex
jp
adc
shl
cmp
sub
xchg
cld
sub
adc
and
insl
cmp
dec
lods
mov
mov
stc
popa
adc
nop
mov
aas
test
loope
mov
hlt
push
mov
or
testb
lret
ret
jae
outsl
mov
sbb
pop
mov
int3
xchg
ljmp
sub
shlb
mov
cmpl
xlat
insl
loope
push
sbb
or
push
inc
fidivl
je
and
xor
mov
fbld
sub
cmp
dec
movsb
icebp
add
xchg
orl
outsl
mov
ds
push
cmpb
sub
dec
adc
mov
js
fldcw
cmp
mov
movsl
movsb
mov
push
mov
and
popa
in
es
cli
mov
xor
cmp
mov
push
jnp
movsl
push
mov
inc
jbe
cmp
push
clc
aas
das
xchg
and
mov
out
lock
mov
jne
jbe
cmpsb
xchg
mov
xor
repnz
pop
loope
aas
das
inc
mov
mov
ret
mov
and
shrl
mov
cmp
xor
cli
lcall
sbb
aad
aaa
dec
mov
xchg
enter
push
push
fsubrs
cmp
inc
sbb
inc
hlt
repnz
and
adc
in
or
adc
push
cs
out
mov
mov
cmp
push
push
xor
int3
mov
test
mov
in
xchg
test
sub
nop
clc
dec
xchg
and
movsb
movsb
or
stos
cmpsl
sbb
mov
cmp
rclb
dec
cltd
pop
daa
leave
jle
shlb
int
nop
sub
push
scas
dec
push
and
mov
adc
mov
ret
outsb
push
mov
pop
loope
cmp
sarb
xchg
lret
aaa
in
pop
jp
dec
scas
jnp
add
mov
je
test
mov
imul
or
rcr
ja
xorb
xor
js
push
mov
xchg
icebp
inc
xor
das
sbb
jo
lods
call
push
sbb
or
fists
xchg
out
pop
testl
dec
fwait
gs
mov
dec
lcall
add
push
rcll
lods
shl
mov
add
sbb
popf
push
push
pop
repnz
cmp
pop
push
add
xor
imulb
ret
lcall
int
jecxz
xchg
mov
inc
adc
dec
push
push
mov
in
cmp
data16
sub
rorl
sub
inc
inc
xchg
dec
mov
jbe
loopne
aaa
xchg
mov
pop
test
cmp
lcall
out
mov
enter
mov
cmp
adc
xlat
and
inc
mov
sub
jno
mov
fnstsw
add
or
jge
cltd
push
cmp
in
ret
push
in
jl
sti
pop
jge
lahf
cmp
cmp
pop
fwait
aad
dec
dec
test
or
or
inc
sar
xchg
push
hlt
sub
call
out
inc
int3
pusha
fstpt
test
mov
sbb
inc
fistpll
push
popa
into
aas
adc
in
bound
add
enter
pop
mov
mov
pop
test
hlt
fiadds
pop
mov
xchg
les
pop
sub
jp
pusha
cmp
stos
xchg
es
sbb
xchg
mov
outsl
xchg
pop
fimuls
loop
lods
adc
mov
gs
jge
adc
pop
xchg
cmp
sbb
add
inc
mov
cmp
or
jge
add
rcr
add
cmp
jne
ja
stos
test
aam
add
mov
shrl
add
cmp
imul
cld
mov
lret
jae
xor
aaa
jmp
jl
xor
adc
sahf
scas
jmp
xchg
mov
or
sbb
push
cmp
mov
sub
movsb
shrb
add
jno
inc
movsl
or
push
insl
popf
decl
and
fcoml
movsl
xchg
enter
out
xchg
data16
data16
and
aaa
dec
loopne
enter
sbb
inc
outsl
jmp
das
loop
cmpsl
lret
mov
or
adcb
lahf
popa
sbb
lahf
mov
insb
ret
or
enter
int3
out
mov
sbb
rorl
ljmp
lods
cmp
add
popf
aad
lcall
sub
loop
pusha
ljmp
jge
pop
inc
loope
lock
aas
xchg
jg
lods
push
and
cli
sbb
or
cmp
insl
or
push
jle
mov
gs
xlat
xchg
mov
sti
xlat
mov
enter
shrb
mov
insl
aas
push
and
idivl
les
jmp
lock
push
rcrb
cmp
pop
jb
jns
adc
jmp
cmpl
sbb
sub
adc
pop
or
sub
imul
pop
das
stos
test
dec
pop
sahf
sarb
pop
movb
pushf
andl
shlb
dec
mov
dec
sbb
je
inc
hlt
movsl
sahf
mov
lea
adc
mov
rcrl
mov
dec
inc
popa
dec
in
popf
sub
jnp
loopne
mov
cwtl
aaa
add
pop
cld
sub
cmp
cmpsl
popf
mov
and
and
add
push
mov
int
dec
mov
fs
rolb
xchg
mov
ljmp
dec
push
adc
xchg
shrb
loopne
sbb
sub
int3
sub
in
add
fmuls
das
int3
mov
pop
mov
loop
lret
xrelease
mov
xor
movsl
cmp
leave
inc
xlat
dec
arpl
pop
sub
inc
inc
in
pop
xchg
mov
jo
dec
pop
add
cmc
mov
push
mov
xor
testb
push
out
and
sub
sbb
into
mov
mov
lret
mov
or
mov
div
les
hlt
fbld
imul
or
xchg
lods
inc
cmpsb
xchg
cmpl
mov
fimull
dec
mov
lods
cmp
push
gs
mov
mov
cmp
sbb
out
aad
push
sbb
clc
xor
inc
mov
cs
pop
cmp
shrl
inc
mov
in
jo
sti
movsb
pop
in
movsb
int
lret
lods
ljmp
pop
jae
subb
xor
pop
sub
fidivrl
mov
fiaddl
mov
subl
adc
sub
scas
push
jle
scas
xor
hlt
mov
inc
out
adcb
mov
xor
mov
scas
or
fwait
mov
imul
rorb
pop
sbb
repnz
mov
out
pop
inc
mov
fs
imul
out
pop
sbb
test
sbb
shrb
mov
adc
insb
mov
xchg
lock
loopne
adc
jmp
and
das
xchg
in
pmaxsw
mov
es
enter
cmp
or
jl
push
cld
nop
push
cmp
push
pop
in
je
popf
aas
xorb
repnz
outsb
roll
shlb
pushf
dec
push
fstps
mov
xchg
fadds
popf
daa
data16
add
push
es
pop
jl
mov
hlt
xchg
test
cld
out
in
jno
mov
call
in
mov
andl
icebp
mov
cmp
sub
jns
ljmp
add
and
fldl
nop
and
push
jns
adc
add
xchg
adc
dec
sahf
das
sub
arpl
push
inc
jmp
imul
adc
push
rcll
outsl
lods
clc
mov
mov
testl
lahf
add
cld
jns
ret
xchg
ret
jge
loop
ret
inc
mov
xlat
mov
sbb
movsb
add
push
xor
push
loope
mov
int
repz
xor
push
fadds
jg
sub
pop
and
push
inc
pop
xchg
daa
stos
inc
cmc
dec
sbb
stos
inc
jne
js
push
mov
mov
test
repz
jnp
outsl
mov
or
sti
sbb
push
push
add
idivb
fimuls
loopne
push
fldenv
push
mov
mov
cmp
inc
dec
sbb
ss
call
and
sbb
imul
jp
in
icebp
mov
pop
xchg
pop
inc
xchg
lds
loope
push
mov
and
cwtl
mov
popa
jge
loop
mov
stc
mov
jp
fwait
inc
enter
dec
subb
leave
lock
std
cmpl
xlat
out
adc
leave
mov
push
or
sahf
fsubrp
adc
ret
pushf
xor
dec
or
nop
test
push
cmpb
jecxz
add
cmp
decb
push
aad
pop
aas
mov
mov
filds
nop
adc
dec
test
jnp
outsb
sub
and
cwtl
loop
fdiv
inc
mov
iret
fisttpl
test
inc
loope
sub
add
xor
ret
test
bound
mov
push
or
imul
xor
sbb
dec
stos
or
data16
xchg
xchg
test
xchg
xchg
cmpxchg
mov
mov
movb
add
scas
mov
dec
inc
lods
or
ljmp
mov
adc
leave
cmp
mov
mov
lods
and
dec
xlat
pushf
data16
pop
sub
inc
sub
inc
push
pop
cmp
mov
insb
hlt
popf
mov
cmp
sbb
pop
enter
mov
orl
pop
sub
xorb
jbe
mov
and
daa
ss
pop
test
in
mov
aad
dec
rolb
jmp
xchg
in
rcr
xchg
adcb
mov
cmp
push
cpuid
jno
jae
sbb
xchg
inc
inc
call
push
jne
inc
popa
inc
cmc
iret
insl
and
movsb
jno
jg
and
jmp
pop
or
dec
mov
jg
les
rorb
lds
adc
adc
js
out
pop
dec
add
lock
dec
add
xchg
mov
movsb
out
loopne
mov
inc
loope
add
jecxz
and
push
decl
lret
ficoms
jbe
pop
ret
fdivrs
jbe
ljmp
in
into
sub
inc
cmpsl
jmp
dec
nop
gs
xchg
pop
add
popa
mov
sbb
jecxz
xor
jns
dec
jecxz
sbb
jno
dec
mov
push
sbb
scas
pop
out
cmp
into
cmp
xchg
jecxz
mov
push
ret
int3
xchg
mov
inc
push
jno
shll
sti
cmp
jl
inc
dec
push
dec
test
mov
loop
sahf
lret
stos
inc
inc
and
cwtl
pop
pop
jmp
push
xchg
push
pop
testl
scas
adc
sahf
call
movsb
xchg
sbb
push
daa
out
ds
dec
sub
stos
xchg
mov
jg
movsl
mov
pop
gs
ret
xchg
imul
mov
xchg
push
leave
and
mov
inc
lret
movsb
mov
sbb
adc
dec
addr16
dec
lods
push
repz
scas
pop
and
push
out
pop
loope
add
outsb
pop
aam
pusha
and
ret
add
dec
in
add
loop
adc
call
jmp
leave
js
cmpsb
cmp
aad
jnp
push
sbb
insl
aaa
clc
sub
xor
jae
std
pop
sub
add
fidivl
jno
pusha
lahf
and
in
xor
mov
xlat
test
mov
or
test
xchg
jmpw
jb
lahf
cltd
or
roll
setge
test
sbb
test
std
int3
mov
aam
lret
jae
ja
stos
mov
pop
xchg
push
mov
out
mov
jmp
int
xacquire
out
dec
loop
loop
subb
cmp
jl
inc
fbld
mov
mov
jnp
repz
ret
push
rolb
rcrb
mov
dec
loop
dec
mov
push
xchg
add
aad
fistpl
rcrl
outsl
xor
mov
outsb
jae
xlat
lock
loopne
xlat
xchg
adc
js
repnz
fs
lret
sti
or
test
jl
pop
push
xor
mov
loopne
jecxz
jp
xlat
aad
xor
add
mov
xchg
cmp
scas
and
inc
pop
stos
cmpsb
in
ljmp
fwait
addr16
movl
cltd
xlat
loope
popa
push
pop
adc
js
pop
push
dec
movsb
add
mov
xchg
cmp
add
and
das
or
pop
arpl
inc
call
push
add
push
andb
dec
pop
out
dec
std
aas
xor
lcall
imul
jecxz
mov
pop
dec
jns
adcl
jge
test
fisubrl
jle
mov
loopne
adc
adc
jmp
loopne
inc
cmp
outsl
or
sbb
lcall
pop
xchg
push
or
dec
mov
mov
jne
inc
lret
sbb
inc
loop
mov
lret
xor
shl
xor
jecxz
mov
addb
or
loope
dec
fisubrl
mov
inc
mov
mov
adc
aad
xor
loop
and
inc
xor
outsb
fisubs
xlat
mov
insl
pop
ds
sahf
adc
test
mov
sub
lods
nop
cmp
testb
lret
shlb
mov
jb
dec
or
xorb
shlb
add
mov
fdivrl
cmp
pusha
in
std
ljmp
xorl
out
push
sbb
fnstcw
push
xchg
or
dec
pop
lret
mov
test
mov
mov
pusha
or
jo
pop
loopne
lock
les
adc
pop
andb
aad
lea
sti
stos
pop
jae
cmc
pop
and
sbb
or
push
xor
sub
dec
sti
pop
pop
inc
enter
fstps
nop
rcl
movsl
aam
or
aam
movsl
out
int
pop
faddl
jnp
aam
je
addl
imul
sbb
push
inc
xchg
arpl
jge
and
std
movsb
inc
dec
mov
daa
jbe
cmc
push
sub
sbbl
cmp
sti
mov
inc
mov
mov
loop
dec
test
sti
out
incb
mov
sub
negl
mov
mov
andl
push
in
mov
adc
lock
jb
loop
sub
xor
into
jns
sub
push
out
or
sub
push
cmc
lea
addr16
call
scas
mov
fmul
cmp
dec
dec
or
icebp
jo
les
jns
lahf
push
pop
xchg
repnz
or
adc
cmp
and
in
hlt
scas
mov
scas
pop
lock
jge
pop
mov
nop
adcb
pop
mov
sub
out
imull
dec
mov
imul
cmc
dec
iret
cmp
mov
shll
repz
int
or
fdivrs
lahf
pop
test
push
repnz
movsb
lret
mov
mov
nop
adc
add
mov
testb
inc
add
sti
mov
mov
iret
add
xor
jns
cs
dec
pop
out
or
pop
cwtl
xor
outsb
push
imul
test
test
mov
mov
rclb
sti
leave
xchg
test
push
and
into
push
out
adc
mov
mov
adc
dec
addr16
pop
popf
repnz
inc
jg
mov
divl
push
sarl
jb
adc
iret
and
xor
sub
dec
in
sub
shlb
dec
cmp
imul
push
jnp
push
push
dec
mov
xchg
rolb
in
push
dec
sbb
add
push
sbb
iret
ljmp
mov
fcoml
lds
ljmp
clc
pop
mov
bound
mov
mov
dec
sub
loop
jge
jecxz
jo
mov
jmp
das
and
sbb
dec
mov
cmp
stos
jb
lret
sub
xor
out
in
js
inc
aad
pop
js
pop
js
lcall
jno
out
adc
shll
mov
or
sbb
out
pop
and
mov
xchg
sbb
popa
repz
jge
stos
insl
out
mov
push
add
mov
add
lret
push
rcr
inc
and
or
mov
rorb
fimuls
aas
sbb
addb
cmp
cmp
imul
and
or
adc
stos
inc
stc
mov
cltd
call
xchg
add
pop
lcall
stos
mov
dec
jnp
test
jb
jmp
push
or
dec
sbb
rcll
push
xor
out
add
cwtl
aaa
adc
cld
movsb
clc
cwtl
cli
ss
mov
xchg
or
jb
sbb
mov
or
mov
enter
jecxz
hlt
jnp
sbb
pop
mov
int3
xchg
inc
jl
adc
lds
adc
dec
imul
cli
mov
push
mov
pmaxub
shll
lea
adc
stos
sbb
bound
mov
inc
sbb
xor
cmpsl
add
imul
push
mov
fistps
pop
xor
add
test
inc
mov
push
mov
aas
mov
sbb
jecxz
jmp
and
call
pop
popf
and
xor
add
pop
xor
mov
out
and
aam
in
or
push
pushf
mov
int3
mov
pop
arpl
xchg
cmpsb
push
xor
cs
add
ret
mov
sbb
sub
rorl
mov
pushf
sbb
inc
add
imul
sbb
sub
in
jne
outsl
xor
popa
push
testl
aas
nop
mov
add
dec
test
repz
or
lds
mov
xor
sti
jp
ja
cmp
pusha
lock
jnp
jbe
cmpsb
add
mov
mov
inc
pop
mov
push
insb
in
insb
mov
std
scas
ljmp
lods
outsb
aaa
pusha
mov
or
add
enter
movsl
pop
mov
fnstcw
loope
lock
adc
repnz
aaa
ss
ss
out
add
pop
hlt
fcmovnbe
mov
aam
mov
mov
ret
jg
data16
xchg
dec
fwait
and
mov
sub
add
push
mov
ss
push
dec
add
orb
idivb
cmp
call
loop
xor
in
add
push
imul
cmp
fdivrs
pop
jmp
sbb
fiadds
jecxz
int
fistpl
int3
sub
sbb
into
mov
negl
mov
gs
sbb
jne
mov
xchg
inc
repz
xor
push
dec
and
stos
inc
cltd
push
xchg
push
adc
fwait
push
xor
jno
insb
ds
std
insb
mov
fs
scas
jmp
push
and
fwait
pop
fstps
andl
inc
pop
nop
sbb
jb
lret
js
adc
and
jnp
jle
insb
loope
sbb
mov
pop
mov
inc
fldt
cmp
mov
sub
jno
shrl
sbb
mov
and
or
jno
cmp
and
mov
nop
stc
mov
adc
pop
mov
inc
and
scas
sub
xor
fldcw
or
in
daa
clc
lods
jbe
out
mov
lods
mov
and
fsubp
xchg
dec
inc
sub
ljmp
mov
sbb
mov
jle
pop
inc
mov
pmaxub
and
call
mov
adc
ja
cld
jecxz
xchg
popa
ja
mov
mov
sbb
push
sahf
shll
movsl
sbb
dec
push
psadbw
sub
jne
mov
and
in
mov
mov
jmp
xor
cmpsl
loope
jmp
pop
jns
popa
add
aas
mov
adc
testb
push
movsb
mov
pop
cmc
or
xor
push
aam
mov
and
sbb
stos
fldenv
sbb
mov
das
mov
add
clc
andb
into
mov
filds
mov
push
rcrl
stc
push
push
les
ret
add
les
mov
or
mov
ret
bnd
pushf
push
and
gs
arpl
ret
hlt
and
out
popa
cmp
adc
xor
lret
loopne
int
xchg
cltd
jo
sbb
cmp
pop
adcl
inc
cwtl
shlb
aad
sbb
hlt
cmp
cmpsb
scas
push
dec
cmp
clc
xor
adc
xorb
or
push
aaa
ficoml
notl
insb
xor
shlb
sahf
popa
fwait
inc
pop
cld
popf
lret
shrb
fisubrs
mov
outsb
inc
clc
jle
sub
jecxz
pop
in
sbbb
push
pop
inc
sbb
lret
mov
out
pop
adc
mov
movsl
out
mov
jge
into
adcl
inc
popa
into
inc
test
inc
jnp
jae
cs
mov
add
outsl
rorl
mov
lret
fstpt
or
pop
xor
sarb
adc
mul
jbe
dec
jmp
or
sub
in
add
cltd
movsl
pop
rorl
in
or
mov
rcll
ffreep
xor
movsl
rcrb
cmp
mov
pop
jb
push
dec
dec
sbbl
out
push
adc
mov
or
xor
stos
into
dec
lcall
sti
xor
jp
ret
and
push
les
test
jne
mov
xor
jecxz
jae
and
stc
push
stos
cmc
popa
lods
push
out
dec
push
adc
mov
lock
xor
jmp
aad
lcall
jno
into
xor
mov
and
imul
mov
lahf
repz
mov
push
xor
fiaddl
mov
les
aas
xchg
adc
sbb
adc
mov
lds
lret
insb
sbb
scas
cwtl
js
daa
jnp
or
popf
stos
stos
cmp
sarb
or
and
xchg
nop
test
lds
outsb
add
lds
int3
mov
fiaddl
rolb
fwait
inc
xchg
nop
add
pop
jo
pop
pop
clc
hlt
adc
stos
test
mov
dec
mov
leave
ljmp
xchg
rorb
pavgb
movsl
rorb
jle
shrb
mov
cmp
push
fs
nop
mov
ljmp
fsubp
lea
mov
leave
mov
add
add
cltd
nop
pop
lds
imul
sbb
arpl
aaa
pop
sub
mov
push
stos
xchg
mov
and
inc
pop
gs
fldcw
sub
das
jbe
shll
gs
mov
cmp
aas
cs
mov
sub
jle
dec
cmp
test
lcall
mov
dec
xchg
out
jmp
inc
movsb
lret
add
shlb
cli
fwait
cmc
adc
inc
add
xor
or
jecxz
and
inc
push
jle
pop
mov
pop
cmp
xor
sbb
cmp
cmpsl
xor
stos
ss
int
cmp
mov
dec
repz
sahf
xor
adc
jl
jge
cmc
mov
lahf
cmp
sub
std
pop
inc
or
sti
push
testl
fs
pop
xchg
jne
fs
fisubs
pop
mov
sbb
scas
or
les
sbb
mov
push
push
xchg
inc
lcall
popl
outsb
leave
fistpl
mov
jae
mov
pop
gs
inc
adc
int3
push
mov
cmpsl
add
pushf
sbb
fcomp
inc
test
push
adc
cs
in
cmp
rol
cmp
rcr
mov
inc
add
leave
int
pop
nop
push
shrl
sahf
inc
fimuls
adc
iret
lock
into
sbb
mov
xor
or
jg
sub
mov
sbb
mov
and
leave
sbb
mov
stc
in
mov
xor
sub
mov
fld
mul
pcmpeqb
cmp
dec
dec
jbe
or
push
lea
jnp
ffree
inc
cmc
jnp
jle
ss
shll
nop
enter
cltd
lret
std
cmc
pop
ja
mov
ja
movd
inc
xchg
push
dec
pop
mov
dec
push
mov
push
jo
mov
popf
adc
sarb
clc
or
mov
ljmp
test
into
lret
jl
mov
pop
or
mov
and
mov
mov
rcr
test
push
or
cmpsl
sub
icebp
aas
repz
and
or
dec
dec
cmp
les
dec
test
stc
mov
push
sbb
int3
outsb
in
push
ds
jp
shlb
jle
aad
push
into
sub
adc
xor
jecxz
xchg
mov
xor
out
cmp
xor
pusha
cmpsl
sub
xor
mov
cmp
cmp
xchg
lret
xchg
hlt
xor
je
aaa
stc
xchg
xor
mov
push
mov
leave
or
and
popf
clc
pop
fisubrs
ss
stos
mov
in
mov
ljmp
cltd
mov
cmp
sti
fldt
bound
lock
mov
popa
scas
leave
dec
push
aad
sahf
mov
lea
pop
inc
fbld
xchg
jecxz
inc
lods
jmp
lea
insl
call
outsb
pusha
pop
imul
stc
mov
push
pop
inc
clc
stos
pop
add
add
pop
ds
sbbb
popa
movsb
cwtl
mov
pop
dec
mov
xor
or
pop
movsl
or
sub
jl
push
aad
inc
pop
xor
mov
arpl
sub
js
rcr
push
loopne
leave
push
jae
aad
adc
dec
add
dec
test
out
push
pop
mull
bound
mov
sub
adc
int
in
fcompl
insb
outsb
dec
aas
mov
mov
adc
mov
jl
stc
das
pusha
loopne
jle
pop
je
cmc
cmp
and
cmp
repz
lock
pop
and
mov
xchg
adc
mov
dec
sub
cmc
repz
orl
fsubrl
into
movsb
iret
mov
lods
popa
sub
cmp
cmp
xchg
push
ret
dec
ss
push
xor
cmp
cmc
pop
xchg
sub
jecxz
enter
popa
rorl
in
mov
jmp
sbb
shrb
cmp
cmp
sub
stos
mov
inc
adc
inc
das
mov
movsb
insl
xchg
adc
andl
test
dec
ljmp
jae
ret
cmp
mov
cmc
pop
xchg
cld
ret
inc
jne
enter
xchg
xlat
stc
push
dec
cmp
xchg
or
mov
dec
jne
jns
test
inc
add
xchg
icebp
aas
or
cmp
inc
jmp
fstpl
outsb
mov
xor
dec
cmp
loop
inc
testl
ror
mov
mov
rep
jmp
mov
arpl
scas
jnp
cmpsb
dec
or
pop
imul
pop
stos
enter
jmp
es
and
xchg
xlat
or
jg
das
jecxz
jb
jae
or
sahf
mov
gs
dec
movsb
mov
inc
mov
fisubrl
mov
add
popa
cmpsb
cmp
sahf
insb
pop
test
cmc
dec
in
mov
lea
and
aas
push
xchg
mov
pop
imul
aad
cmp
scas
sahf
jno
mov
shrl
sbb
pop
stc
jb
ss
inc
dec
mov
sti
mov
movsl
jnp
pop
repnz
jge
fmuls
jnp
cmpb
xor
sbb
pop
sbb
int3
cmp
mov
das
mov
jge
mulb
out
fnstsw
xor
xor
scas
mov
sub
stos
cs
pop
or
mov
cmp
dec
xchg
in
out
mov
outsb
insl
xor
dec
dec
jns
xor
inc
add
fnstsw
bound
scas
dec
add
loopne
stc
jno
in
cmpsl
movsl
jns
fs
inc
sbb
icebp
mov
push
pushf
les
jmp
lods
mov
sarb
and
test
xchg
push
jae
sub
inc
les
inc
aad
adc
addb
loopne
nop
clc
jbe
test
dec
inc
pop
xlat
jne
out
aam
fistps
pop
enter
popf
and
or
adc
push
popf
test
sbb
inc
mov
push
loope
mov
pop
lods
jno
aam
mov
les
std
test
xchg
arpl
lret
xchg
ret
ljmp
jmp
push
cmc
bound
add
push
in
hlt
add
movl
push
movsl
ljmp
jmp
fcomip
lods
sbb
fnclex
jns
and
pop
mov
jle
mov
inc
clc
lea
test
fdivs
inc
push
mov
mov
lods
dec
js
xor
mov
or
cs
xchg
cmp
cli
mov
jno
mov
imul
add
popf
push
cli
arpl
or
sbb
daa
adc
jl
fldt
lret
movsb
sub
dec
add
xchg
iret
or
jmp
movsb
add
pop
fwait
cmp
sub
sbb
lods
hlt
js
dec
or
stos
leave
insl
mov
mov
stos
or
mov
xor
data16
int3
fwait
insb
add
cmp
dec
orl
xor
xchg
jnp
xchg
sbb
lods
cmc
sub
test
mov
std
push
imul
sub
enter
inc
cwtl
scas
daa
mov
add
xchg
fwait
pop
rorb
enter
fisttpl
lret
ja
xchg
sub
sub
mov
mov
scas
js
ja
cwtl
daa
dec
lock
push
movl
sbb
repnz
or
test
mov
into
sti
xor
xchg
fsts
inc
cmc
pop
insb
arpl
popa
fincstp
and
sti
xchg
lahf
mov
test
lret
push
dec
add
jae
add
and
mov
push
mov
push
sbb
ss
lods
lret
or
jae
out
sub
jmp
fisubrl
mov
cmp
in
dec
add
push
mov
pop
or
fsts
inc
stos
mov
cld
out
xor
ja
scas
and
xlat
stos
mov
mov
ret
es
out
arpl
out
sbb
pusha
jge
cmpsb
stos
mov
dec
addr16
or
es
pop
push
scas
pop
mov
rclb
scas
in
shll
sbb
jmp
or
and
xor
shrl
xor
mov
or
call
lcall
xchg
jne
sahf
sub
fdivl
inc
jecxz
xchg
imul
adcb
in
xor
loopne
in
aad
test
cmp
xchg
cmp
gs
push
inc
cwtl
pop
or
fistpl
jmp
fistpl
stos
lods
jbe
pop
push
xchg
mov
rcr
movsb
dec
push
push
loop
loop
pop
pop
mov
xor
dec
inc
stos
dec
pop
adc
inc
ret
iret
mov
xor
dec
sub
inc
fisubrs
xchg
mov
in
gs
pop
jmp
scas
pop
sbb
adc
stc
xchg
inc
test
scas
cs
mov
das
push
inc
add
mov
in
mov
cmpsl
xor
call
pop
dec
xlat
ja
into
cli
std
pop
add
scas
xor
in
xor
mov
pop
adc
pop
clc
ss
pop
inc
outsl
xlat
pop
jae
jns
stos
dec
in
jmp
dec
mov
hlt
dec
add
jb
lock
jl
fisubl
or
push
inc
rorl
xchg
rclb
je
and
push
aad
xchg
js
icebp
mov
adc
andb
fsts
sbb
es
adc
lret
or
pop
push
bound
fdivs
pop
sbb
cmp
hlt
cwtl
imulb
and
dec
push
stc
mov
in
pop
gs
mov
stos
mov
or
sbbb
int
inc
xor
mov
movsl
pop
fs
outsb
in
cmp
sub
ds
push
imul
push
hlt
jbe
gs
fwait
incl
notb
sbb
inc
xchg
hlt
fistpl
pop
push
push
lret
inc
pushf
or
cmp
jecxz
pop
xor
js
repnz
pop
shr
inc
push
jbe
inc
lds
cwtl
jbe
and
cmpsl
test
bound
movsb
inc
xorl
inc
ss
add
nop
lcall
sbb
into
mov
cmpsl
jp
je
jl
insb
sahf
mov
rcrl
shll
fwait
cld
cltd
mov
pop
pop
addr16
sbb
cmp
test
in
ret
mov
push
outsb
xlat
push
popa
xchg
push
orl
push
mov
mov
bound
fsubl
inc
or
shll
outsb
ror
ret
add
imul
movb
inc
movsb
in
stos
mov
add
stos
aad
inc
ss
sti
daa
bound
xchg
and
sbb
test
sub
call
mov
test
cmp
ss
jo
es
outsb
xchg
jb
or
pop
popf
and
xchg
dec
inc
ret
or
push
cmc
mov
adc
ljmp
leave
sarl
das
mov
inc
loop
sub
out
mov
or
loope
jecxz
dec
jno
ds
or
fisttpl
sbb
icebp
add
mov
sbb
imul
pop
mov
push
insl
call
inc
or
hlt
cmpsb
mov
jecxz
jno
insl
sbb
jbe
data16
insb
xlat
stos
or
mov
ss
and
lret
dec
out
mov
mov
and
pop
mov
sti
divl
shrb
mov
add
add
aas
ds
in
pop
in
jecxz
add
lret
mov
xlat
lea
xor
insb
fbstp
imul
inc
daa
inc
lods
je
mov
and
push
addl
clc
push
push
add
pop
ret
inc
xchg
and
hlt
dec
repz
pop
nop
push
sub
jmp
cwtl
es
push
inc
lss
inc
outsl
xchg
test
shll
sub
mov
loope
jecxz
pop
xchg
jne
add
mov
pop
mov
fcmovnb
stc
sub
fistl
imul
mov
xchg
es
inc
xchg
and
adc
mov
sub
xchg
lcall
mov
inc
or
arpl
jae
mov
dec
mov
adc
lcall
pop
mov
xor
daa
std
jnp
adc
mov
fstl
dec
idiv
dec
inc
and
insb
ret
pop
sahf
cmp
repnz
imul
outsb
and
or
ret
cmpsl
ret
mov
cmc
mov
and
add
cmpsb
pusha
xor
popa
cmpsl
sub
addr16
lahf
loop
and
dec
adc
xor
stos
add
lcall
stos
pop
rcrl
push
fwait
orb
psraw
pusha
lcall
sub
push
bound
sahf
sbbb
imulb
gs
sbbl
scas
and
cmp
clc
xchg
stos
testl
and
cmpb
push
add
jb
inc
xor
data16
mov
pop
xorl
data16
cmp
adc
lahf
dec
adc
lahf
push
ss
xchg
mov
add
vzeroupper
aas
mov
fiaddl
enter
cmp
mov
scas
or
outsb
dec
and
mov
mov
imul
jae
pop
nop
gs
sub
dec
repnz
fwait
push
push
in
into
cwtl
mov
push
in
fsubr
cltd
sub
xchg
ret
sbb
rcll
mov
fsubs
pusha
fdivrs
mov
sarl
shlb
lret
notb
or
and
stos
or
mov
jnp
mov
in
bound
pop
xchg
jns
call
xor
sub
fnstenv
out
xchg
movsb
lock
sarl
mov
dec
xor
mov
cld
pop
data16
jno
out
cmp
cmp
lock
cli
adc
outsb
int
repnz
jp
xor
pop
add
mov
and
cwtl
mov
pop
pop
popf
mov
repnz
fdivrs
lcall
lea
pop
push
xchg
dec
cmpsl
sub
sub
scas
scas
inc
insb
pop
fwait
stos
mov
clc
push
js
pusha
gs
push
cmpsl
pop
xchg
sub
cmp
sbb
cmpsl
sbbl
andl
pop
xchg
cmpsb
cmp
jmp
xchg
addr16
rorb
lods
repz
adc
pop
push
mov
or
sbb
mov
dec
sarl
rcrl
and
and
loop
scas
dec
dec
xor
mov
inc
jne
push
push
jp
orl
cmp
fistpll
inc
aam
cmpsb
imul
dec
imul
sub
xor
pop
mov
dec
cmp
mov
mov
inc
mov
das
loop
sub
or
cmpsl
aad
add
jne
fsubrs
add
stc
fsubrp
add
mov
and
or
les
or
push
inc
cltd
jb
and
jo
into
xor
ret
stos
fisubrs
add
push
jmp
mov
clc
decb
xor
jns
loop
fadds
stos
rcll
cltd
pop
fs
fiadds
sbb
push
xchg
inc
inc
rorb
push
cmc
sub
mov
push
ja,pt
insl
xchg
adc
dec
push
dec
push
adc
pop
push
or
mov
lcall
inc
test
sbb
xlat
call
mov
lds
mov
cs
dec
shrb
mov
push
leave
xor
mov
adc
or
cmp
out
in
sub
hlt
pop
adc
pusha
cmpsl
sbb
or
sarb
inc
cli
pop
daa
dec
pop
push
sub
imul
fildl
scas
rorl
add
hlt
mov
in
mov
pusha
jl
jae
pop
sbb
out
push
mov
dec
sbb
cmp
int3
pop
mov
mov
mov
jp
lahf
std
push
fsubs
xchg
sub
ret
in
ja
imul
mull
popf
push
add
jmp
fwait
or
iret
inc
mov
push
out
xchg
sahf
push
xor
int
mov
cmc
jne
sub
lock
cmp
movsl
mov
mov
imul
inc
cmp
call
and
jne
mov
rorl
lds
jge
out
dec
outsb
push
sbb
and
bound
add
mov
pop
sti
push
roll
inc
jmp
pop
add
int3
out
loope
xor
mov
ds
rcrb
pop
fs
clc
loope
jo
shrb
cltd
push
mov
outsl
xor
xor
mov
sub
cs
popf
or
sarb
mov
xchg
hlt
sub
iret
xor
cmp
inc
and
push
cltd
or
xchg
mov
and
inc
fstps
ss
cmc
loop
xchg
push
sub
pop
dec
jbe
xchg
sbb
dec
pop
insb
iret
mov
jecxz
sub
add
incl
flds
incl
push
aam
mov
push
mov
icebp
sti
jb
shrl
cmpl
adc
mov
add
fwait
in
imul
insl
add
add
jg
fisubrl
mov
pop
add
movsb
inc
mov
imul
loopne
ja
mov
cwtl
gs
imull
cmpsb
pop
dec
stos
test
lods
xor
lcall
mov
call
aam
xlat
mov
sub
rol
aad
in
xchg
push
lcall
xor
movsb
insb
scas
push
pushf
arpl
bound
in
add
psubq
sub
sahf
xor
xor
xorb
xor
xor
push
cltd
and
repz
add
push
in
pop
into
lods
xor
cmp
mov
stos
xchg
push
sub
mov
mov
in
gs
dec
inc
dec
dec
jbe
fadd
dec
add
fs
push
adc
cmp
mov
fldt
jmp
jne
xchg
xchg
push
clc
inc
push
fsqrt
xchg
ret
xchg
sti
lock
movsb
pop
or
push
xchg
int3
jb
loope
mov
mov
daa
decl
jo
mov
xchg
push
jl
sub
pop
xchg
nop
es
sub
popa
das
jmp
mov
push
mov
aam
push
test
push
jge
in
outsb
sub
xchg
lret
sbb
decl
dec
push
pop
int
cltd
lods
xchg
jnp
int3
mov
mov
int3
cs
inc
adc
push
jecxz
inc
dec
fnstcw
hlt
clc
ss
push
divb
cwtl
jae
fistl
outsb
mov
push
repz
adc
vunpcklps
pushf
mov
xchg
pop
in
adc
mov
push
cwtl
stos
jne
mov
inc
jmp
jg
lods
out
mov
sub
pop
jno
adc
andl
ss
stos
lret
add
mov
in
cmp
loope
dec
data16
cmp
jg
clc
es
addb
leave
push
and
lock
scas
pop
aam
enter
stc
int3
scas
mov
popf
lcall
inc
jg
jns
push
mov
mov
add
xchg
adc
add
cmpb
mov
xchg
out
test
pop
cltd
lods
jbe
inc
ret
xchg
push
in
ret
fwait
dec
and
sbb
or
jge
call
shll
daa
jbe
ffree
icebp
push
adc
push
pop
sbb
ljmp
xor
and
sub
cmp
push
sub
lea
push
data16
jp
test
cmp
jae
enter
jae
sbb
subb
sub
rcl
lea
xorb
pop
and
pop
repnz
imul
stos
test
jl
xor
cmpl
test
aam
insl
adc
dec
and
mov
in
push
bound
mov
or
cmpsl
inc
cld
dec
jae
xchg
test
push
cmp
pop
scas
mov
push
outsl
mov
inc
lds
mov
leave
in
test
lock
add
pop
jmp
dec
xchg
aam
sub
and
mulb
adc
sub
push
shrl
lahf
lcall
sub
lret
dec
int3
pop
jns
xchg
repz
cmp
sbb
mov
mov
and
arpl
mov
and
mov
jecxz
sbb
xchg
enter
pop
inc
cmpsb
sbb
xchg
call
rorl
push
adc
iret
push
push
jp
mov
sub
adc
add
cmp
xchg
push
dec
int
jo
xor
daa
sub
xchg
in
mov
dec
int3
fidivs
jle
ja
outsl
mov
cs
scas
and
sbb
orl
mov
inc
mov
or
rcrl
jl
push
repz
push
addr16
xlat
jge
sbb
adc
sub
sbb
sahf
movsb
je
pop
fisubrl
nop
or
sbb
fs
leave
push
daa
popa
and
sub
mov
pop
outsl
aad
ret
mov
insb
push
add
or
pop
in
or
xchg
xchg
sti
mov
sbb
into
jns
loope
push
xchg
iret
shll
enter
inc
pop
sbb
cs
mov
fs
xchg
push
add
xchg
inc
jo
mov
mov
push
sbb
add
outsl
sahf
lcall
popa
lods
push
mov
mov
jnp
xcrypt-ofb
cmpsl
jne,pn
mov
cmp
pushf
es
call
xlat
and
dec
push
sub
scas
lahf
pop
jge
lret
push
xor
inc
mov
js
bound
movsl
pop
fwait
aas
xlat
jo
movsb
jb
or
fisttps
into
mov
pop
out
sbb
outsb
or
dec
mov
mov
mulb
and
fadds
mov
dec
je
lods
push
lods
repz
test
orb
adc
mov
ja
xchg
out
jmp
or
xchg
and
xor
jno
or
movaps
int
jae
sbb
mov
push
les
repnz
faddp
rcrb
add
inc
scas
adc
jl
xor
movsl
push
cmp
mov
arpl
cmp
push
cld
mov
testl
dec
adc
std
inc
addr16
fdivrs
mov
aaa
aad
cld
aad
icebp
enter
loope
and
push
mov
add
test
imul
test
cs
stc
ret
sub
pop
scas
das
rcl
sti
imul
jns
push
divb
push
or
iret
add
xorb
mov
dec
les
mov
mov
repz
push
add
inc
xor
pop
mov
jp
xchg
cmp
mov
cltd
jg
int
dec
lock
mov
mov
mov
and
shlb
outsl
cli
jecxz
mov
insb
push
fldenv
mov
fidivrl
lock
out
jmp
dec
sub
leave
fxch
jmp
pop
add
ret
dec
mov
sti
mov
inc
mov
and
mov
outsl
repz
and
dec
aaa
arpl
jae
xchg
pop
lds
lcallw
cwtl
movsl
mov
arpl
add
popa
mov
mov
std
push
ds
push
lods
cltd
rcrb
sbb
sbb
lcall
gs
xchg
std
mov
pop
sbbl
addr16
cli
dec
cmp
mov
push
sub
pop
int3
sub
test
jno
cwtl
xchg
push
mov
add
imull
mov
test
jl
add
orb
mov
cmp
and
adc
push
xor
out
les
mov
in
add
out
or
push
inc
test
add
pop
insl
xchg
mov
mov
cmpb
pusha
cmp
gs
es
in
cld
mov
or
adc
rclb
in
inc
mov
mov
cmp
jmp
sbb
jp
and
and
fdivrs
mov
mov
jge
xchg
and
push
orl
in
add
cmc
popa
cmp
push
pop
lock
sarl
cmp
iret
xor
jmp
cli
orb
shl
repnz
jle
sub
mov
popa
arpl
andb
addl
or
pop
int
lret
push
jae
cmpsb
or
xchg
cli
lcall
int3
aaa
loopne
stos
sub
mov
mov
push
push
pop
sahf
adc
enter
jae
in
push
aas
fcoms
mov
mov
sub
push
and
push
ljmp
mov
mov
lret
pusha
popf
mov
sub
mov
loopne
or
pop
inc
inc
mov
cmpsl
test
jl
xlat
mov
xchg
jp
addb
sahf
daa
js
scas
repz
xor
imul
ds
pop
repnz
test
test
mov
xor
fstpl
cmp
adc
arpl
ljmp
jg
test
dec
fcmovnu
inc
adc
lock
je
fistpll
push
xchg
cli
shrl
fisttpll
jb
or
push
pop
adc
mov
push
adc
xor
push
push
mov
imul
mov
into
mov
pop
pop
cmc
scas
adc
test
push
insl
jge
xchg
in
push
mov
mov
addr16
sbb
pop
jbe
iret
int3
into
iret
or
orl
sub
int
loope
daa
push
pop
sub
sarb
push
push
jne
add
jne
push
jg
outsl
dec
push
das
aam
sub
mov
mov
inc
push
int
clc
imull
ror
pop
push
mov
pushf
cmpb
push
push
insb
xchg
imul
cld
inc
idivl
and
jecxz
adc
popf
inc
dec
mov
and
inc
pushf
add
push
fstpt
rcr
cltd
stos
jb
mov
dec
into
mov
jb
sbb
outsb
xchg
fsubrl
ss
sub
lea
and
outsl
pop
arpl
sahf
leave
test
in
and
frstor
pop
pop
push
mov
das
dec
push
jl
ja
fisubl
inc
xor
inc
cltd
stos
fdivrl
sub
lock
mov
adc
push
mov
and
lret
xor
inc
out
sub
das
mov
popf
xchg
or
pop
fyl2x
test
dec
jp
pop
ss
fcomip
sbb
jns
ret
lods
shrb
pop
xlat
xor
in
into
shlb
stos
inc
enter
in
cmpsb
push
insb
in
inc
out
out
add
ss
jmp
fidivrs
arpl
mov
xchg
decl
sub
mov
lret
xchg
xor
and
mov
sbb
jmp
dec
dec
cmpsb
cmp
xchg
inc
sub
clc
mov
fwait
or
or
out
jge
xorb
das
cltd
in
loopne
out
fcmovb
test
int3
jnp
dec
scas
repnz
push
xchg
mov
sti
in
cmp
fs
leave
mov
push
fwait
cmp
xchg
adc
les
rclb
pop
adc
bound
and
ljmp
sub
in
xchg
sub
arpl
sahf
jno
sub
fwait
cmp
lea
jge
daa
pop
adcl
add
bound
pop
cmpsl
mov
bound
pusha
icebp
aad
loopne
cmp
mov
scas
cs
push
mov
add
sub
lahf
dec
out
or
adc
aaa
outsb
iret
out
jecxz
push
inc
sbb
push
mov
and
and
jne
ja
loopne
testl
sub
adc
ljmp
stos
sub
aas
lea
aaa
ret
data16
mov
mov
mov
out
inc
nop
mov
jae
iret
or
adc
or
adc
xorl
popa
pushf
jb
lcall
dec
cli
cmp
xor
movsl
shl
sub
mov
dec
dec
xchg
cmp
int3
sbb
outsl
sbb
lods
sahf
dec
ljmp
scas
aaa
xchg
dec
ss
push
fistl
enter
loopne
int
mov
fdivrl
pop
push
cmp
cmpsb
pop
in
in
jg
dec
shrb
cmpsb
mov
or
and
mov
sbb
stos
dec
mov
dec
mov
jnp
adc
icebp
fcmovnb
das
aaa
jp
mov
xchg
enter
mov
jmp
push
adc
push
mov
nop
out
inc
iret
xor
ret
in
in
clc
sar
push
lcall
cmpsl
in
sbb
cmpsb
out
test
loop
insl
mov
add
xor
adc
adc
repnz
xor
push
push
sub
lock
enter
jb
xchg
popa
mov
or
addb
and
lods
lock
ficomps
add
mov
les
fwait
cmp
cli
dec
int3
sub
test
aam
outsb
cmc
mov
leave
test
or
xor
jae
lea
push
rcll
jp
push
shl
shll
inc
add
pop
pop
jmp
outsb
cltd
dec
cmc
stos
jb
lret
sahf
scas
dec
loope
xchg
push
imul
push
xchg
pop
repnz
push
inc
lods
sub
aad
xchg
test
pop
js
sbb
fisttps
xchg
rol
loop
test
imull
add
jg
fmuls
push
in
mov
add
scas
sbb
add
pusha
or
imulb
incl
stos
pop
pop
iret
jg
bound
mov
ds
lods
jecxz
cmpsb
test
popa
sub
pop
sbb
es
or
out
es
pop
in
outsb
popf
jp
std
in
xchg
repz
shlb
dec
dec
daa
xor
iret
mov
cmpsl
stc
push
push
sbbl
aad
scas
addl
fistl
out
lret
popa
movsb
sbb
outsb
jl
scas
or
add
jns
cmp
and
jp
jecxz
scas
xor
aam
bound
aaa
push
int
cmp
adc
in
or
mov
outsl
decl
jnp
movl
push
mov
into
mov
int
and
mov
hlt
mov
pop
sti
enter
xchg
cld
in
mov
dec
out
inc
ret
inc
inc
add
dec
stos
fnstenv
pop
mov
sbb
fwait
jg
mov
add
push
xor
movsb
scas
cli
lods
pop
test
orb
and
sahf
addr16
stos
cmp
jne
mov
jo
and
add
xchg
inc
fs
jle
scas
sub
xchg
repnz
loop
in
dec
pop
ficomps
push
fstps
les
xchg
out
jge
mov
inc
jae
js
sub
icebp
mov
clc
cli
pop
aaa
cmp
nop
add
lret
into
in
inc
movsl
xchg
jecxz
inc
cmc
ljmp
lret
sub
ljmp
mov
and
scas
icebp
xlat
or
xchg
sarb
fmull
insl
pop
sti
movsb
xor
or
xchg
jmp
dec
scas
das
jnp
jae
out
sub
and
xchg
outsb
add
ret
test
shll
js
mov
fs
jecxz
mov
test
cltd
mov
mov
repz
jns
xor
outsb
dec
insl
adc
fimuls
dec
sahf
test
pushf
popf
sar
pushf
dec
icebp
dec
or
out
jmp
sarb
cli
jo
dec
or
adc
ss
repz
sub
int3
daa
in
dec
fisubl
or
add
into
popa
add
cmc
movsb
inc
pop
rclb
outsb
imul
movsl
and
stos
addr16
iret
out
add
stos
push
pop
stos
outsb
sbbb
pop
cmpsb
mov
out
add
out
fs
fstp
jno
xor
dec
mov
inc
pushf
jne
shrb
inc
cmp
push
lret
sbbb
xchg
pop
addb
jns
push
daa
mov
scas
jecxz
ret
loopne
movsb
ret
leave
add
sub
mov
popf
mov
in
push
sbb
mov
xchg
pop
addr16
fidivrl
shlb
ret
pop
cmp
jne
xlat
lcall
push
jbe
sbb
mov
and
aaa
jb
mov
imul
push
mov
shrl
ds
xor
cli
cmpsb
mov
sbb
pop
mov
sub
movsb
mov
loop
in
xchg
cli
cmp
lea
insb
jmp
imull
xchg
roll
pop
cmp
mov
push
lret
sahf
or
jg
pop
in
enter
sbb
lods
ret
rcr
cmp
test
lock
push
loopne
sbb
out
add
push
cmpb
jb
je
sub
jle
test
cwtl
mov
inc
repz
mov
data16
mov
and
in
pop
add
adc
aaa
jecxz
or
lea
aaa
mov
add
and
add
arpl
roll
iret
push
outsl
hlt
sbb
sahf
and
push
callw
jg
jb
jle
xchg
add
dec
pushf
cmp
int
xor
mov
push
aad
nop
mov
mov
insl
stc
xor
pop
inc
addb
jmp
push
mov
jmp
jg
pop
push
sub
stos
out
push
cmp
sbb
jmp
adc
repz
mov
cmp
pop
adcb
push
or
mov
mov
add
aas
aaa
sub
adc
mov
enter
rcrl
push
lahf
xchg
test
loop
cli
loopne
or
sbb
js
adc
mov
xor
fisubrl
daa
jno
mov
sahf
mov
jae
push
jno
aam
xchg
mov
sub
test
xor
xor
aad
dec
daa
push
insb
adc
repnz
repnz
shlb
jo
leave
shr
jns
movsl
in
jbe
jb
into
xor
jb
out
inc
jg
fistpll
test
mov
push
dec
lea
pusha
xlat
and
negl
mov
push
xchg
and
in
mov
and
cwtl
mov
lcall
das
dec
inc
inc
in
lods
xchg
inc
and
sbb
mov
rcl
xchg
fcoml
add
gs
push
ret
in
loop
cmp
mov
sub
jmp
testl
sbb
call
and
sbb
jmp
mov
arpl
repnz
mov
jns
xor
xchg
hlt
imul
xor
and
popf
stos
hlt
outsl
xor
pop
xor
sbb
repz
iret
add
cld
repnz
and
or
pop
in
js
jnp
arpl
negl
xchg
in
add
test
xchg
jl
xchg
pop
stos
add
or
and
add
jmp
or
aaa
into
outsl
adc
sahf
mov
jae
xor
sahf
lea
push
push
insb
shlb
lods
xor
push
xchg
fistpl
scas
pop
xchg
jno
add
add
inc
in
mov
adc
and
ret
leave
roll
fnsave
cmp
arpl
mov
ds
add
data16
cmp
mov
ror
icebp
add
nop
hlt
stos
xchg
mov
int3
rorl
clc
xchg
mov
clc
mov
xchg
sti
mov
mov
cli
jno
cmpsb
mov
or
cmc
outsb
add
mov
mov
in
cmpsb
sbb
les
sbb
mov
popf
aam
xlat
loope
add
xor
ss
adc
pop
addr16
andb
in
ss
pop
push
xchg
mov
test
fs
adc
lds
xchg
loopne
mov
jg
push
add
mov
dec
jbe
fs
add
jge
inc
xlat
push
dec
sbb
sub
lea
xor
mov
or
es
mov
jp
icebp
out
gs
lcall
pop
cwtl
sbb
rep
das
xchg
cmp
add
ret
call
test
xchg
mov
mov
test
push
fcoml
sahf
push
es
std
aad
xor
or
or
dec
mov
adc
xor
pop
stc
fwait
subb
add
sub
cmp
js
dec
imul
push
ja
inc
imul
cmp
in
jmp
hlt
push
lret
fcmovne
mov
shr
xlat
cs
pop
pop
mov
icebp
xchg
push
fisttpll
outsb
xchg
rdmsr
push
lahf
aaa
call
adc
adc
lret
mov
inc
and
push
jne
xor
cltd
mov
imul
mov
into
add
and
or
mov
mull
pop
jecxz
adc
out
mov
jb
dec
je
sub
jnp
cs
cmpsb
lock
movsl
les
push
daa
popf
add
xor
outsb
jg
sbbl
lret
jmp
bnd
add
stc
push
cli
push
pop
cmpsb
cmp
jne
test
sub
add
adc
mov
add
xchg
int3
ss
jle
filds
adc
mulb
mov
sub
mov
or
or
mov
mov
adc
dec
test
ss
icebp
xchg
mov
imul
jge
insl
repz
add
pop
sub
cmp
aas
ret
jbe
or
sbb
cld
popf
mov
movsb
leave
mov
movsl
call
out
and
insb
jle
cmpsl
and
jno
add
mov
sub
xchg
add
int
std
add
push
mov
scas
xchg
push
inc
inc
xchg
sahf
sbb
xor
push
or
jmp
out
aam
and
fimull
sahf
lcall
pop
cmp
ja
push
int
ss
jae
adc
xchg
pop
mov
xchg
aam
fs
or
mov
in
stc
ret
cmp
xor
sbb
ljmp
adc
cmp
inc
add
das
push
ljmp
push
mov
ss
pop
loope
mov
adc
ret
pop
and
in
es
fs
adc
imul
in
cmp
add
test
in
pop
inc
sub
lcall
icebp
xchg
shll
jecxz
jnp
and
and
aam
mov
pop
idivb
arpl
mov
xor
xchg
pop
orb
js
std
test
inc
loopne
mov
call
xchg
neg
adc
in
xchg
cld
fcmovbe
or
adc
dec
std
jmp
jbe
es
scas
or
mov
pop
or
sub
gs
repnz
lret
sahf
push
addr16
test
sub
sub
cltd
pop
mov
sbbb
push
mov
imulb
cmc
sub
xchg
pop
shl
sub
mov
iret
bound
iret
cli
aas
jne
fdivrp
mov
dec
pop
and
int3
add
push
jns
ud1
sub
adc
in
cmp
in
jne
lcall
ds
stc
sub
int
ret
mov
mov
dec
icebp
fstpl
cmp
aam
sub
adc
mov
cmpsl
les
stos
cmp
jne
add
mov
aaa
inc
mov
shrl
sub
mov
filds
repnz
aam
ret
fs
cmp
pusha
jmp
lds
jecxz
cmp
xchg
loop
sti
rcll
das
sub
sbb
adc
mov
cmp
mov
in
and
aam
jno
cmpl
sbb
mov
enter
mov
mov
movsb
inc
xchg
push
dec
icebp
mov
leave
inc
sub
push
aaa
mov
ret
mov
mov
pop
shll
jp
push
bnd
dec
mov
mov
leave
dec
pop
shll
jb
stc
adc
iret
mov
ret
or
xor
sbb
popf
fsubs
les
out
and
and
dec
cmp
ljmp
mov
pushf
sbb
mov
testb
lret
aam
xchg
outsb
mov
jb
pop
leave
xchg
xor
aad
jg
sub
sub
dec
insb
cmpsl
sti
xchg
sub
jne
shll
ret
add
mov
sbb
and
cwtl
pop
sub
and
outsb
test
ret
jno
inc
pop
pop
sub
not
fsubp
xchg
movsb
in
leave
incl
fs
stc
fs
lret
cmp
or
insb
dec
test
addr16
fcomps
and
fwait
dec
inc
dec
mov
fnstsw
push
cmp
cmp
js
insl
ja
sub
notb
icebp
adc
in
aas
mov
enter
fwait
out
push
adc
push
pop
add
mov
rcrb
iret
push
lds
mov
mov
das
enter
mov
adc
test
sub
cmpsl
xor
ja
icebp
xchg
shr
leave
enter
jl
push
jb
mov
jns
pop
ljmp
insl
and
data16
ficoml
bound
add
pusha
inc
sbb
inc
push
outsl
lcall
fs
shl
out
sub
pop
or
fsts
cmp
in
ja
pop
xchg
xchg
je
lds
test
jg
imul
gs
xor
sub
fwait
jae
iret
shrb
js
add
pushf
pop
rcrb
add
ret
pusha
dec
mov
jnp
dec
xchg
aad
js
jle
jp
add
test
pop
dec
iret
incb
mov
sub
mov
or
cltd
scas
adc
jno
je
jp
jge
jg
dec
cwtl
movsb
jns
dec
into
cli
mov
ss
sbb
pop
iret
sbb
dec
mov
sub
or
stc
pushf
test
add
mov
jg
add
into
ret
jns
pop
or
lds
xchg
or
jle
and
je
pusha
js
das
mov
mov
cld
jecxz
cli
stc
push
ss
xorb
xchg
sub
nop
mov
jg
pop
fnstsw
or
pop
jno
mov
xor
mov
xchg
sub
pop
and
fs
lds
xor
add
jae
out
stos
gs
sbb
inc
divl
or
sub
test
add
xor
mov
hlt
or
movsl
outsl
lret
pop
das
xor
cmpsl
push
push
cmp
shrl
cmp
xchg
cld
in
fprem
cmpl
push
in
adc
pinsrw
movsb
pop
inc
test
cmc
push
hlt
sbb
mov
jge
mov
inc
es
cmc
mov
mov
gs
jg
rcl
xor
bound
pop
mov
imul
lahf
test
dec
push
xor
lods
aaa
dec
lahf
dec
fwait
jno
pop
mov
stos
xor
and
inc
test
push
lods
jmp
es
loop
mov
pop
adc
or
jae
cmp
sti
jbe
movsl
sub
jbe
mov
std
out
stos
out
xor
pop
or
nop
sub
inc
add
jnp
and
movsb
movb
cmp
cmp
or
stos
out
push
and
xor
mov
push
pop
mov
cmp
and
arpl
dec
push
nop
scas
sbb
and
xchg
sub
mov
mov
aas
xchg
mov
test
lds
inc
lock
mov
loopne
scas
sarb
negl
int
notb
daa
cmc
add
mov
ds
xchg
shrb
mov
xchg
cmpsl
sub
inc
pushf
mov
lock
fcomps
add
xchg
outsb
movsb
scas
pop
aam
sub
adc
pop
cmp
and
jnp
repnz
rcll
inc
cs
cmpsb
mov
mov
push
xchg
or
push
push
push
push
test
mov
sbb
psubsw
xor
mov
call
inc
fstpt
popa
loopne
xchg
inc
mov
cmp
pop
jo
mov
pop
cli
rorl
data16
pop
xchg
sti
pop
sub
and
xchg
into
xor
inc
das
add
insb
lock
rcll
push
push
push
scas
ljmp
inc
fmull
mov
fwait
insb
test
jge
sbb
test
cmpb
xchg
mov
and
pop
mov
aad
imul
xchg
cmc
fidivrl
xchg
popa
test
and
lock
sahf
mov
leave
mov
dec
frstor
test
icebp
add
jbe
xchg
dec
pop
sbb
mov
pushf
int3
xor
sub
in
lret
aas
daa
xchg
mov
sbb
les
enter
xchg
scas
add
lcall
clc
lret
sahf
pop
js
aad
out
movsl
or
cli
mov
cmc
repnz
or
adc
cmp
lods
mov
in
dec
jge
or
out
in
xor
or
jbe
lods
mov
push
and
in
arpl
or
cmp
push
inc
mov
adcb
mov
lahf
xor
xorl
out
lea
pushf
add
inc
jno
testl
les
popf
cmc
stos
arpl
out
xor
mov
sub
mov
test
inc
popf
mov
xor
cmp
xor
rol
cmc
arpl
mov
pop
es
jl
sbb
repz
xchg
out
sub
xor
sub
aam
cltd
hlt
push
not
aaa
mov
and
inc
push
arpl
lock
sarb
fsubr
fdivr
fimuls
add
add
nop
pop
mov
sub
push
jo
insb
mov
stos
cmp
mov
int
les
sbb
adc
mov
imul
arpl
xchg
pop
cwtl
lock
or
loop
dec
pop
shlb
mov
mov
dec
push
push
enter
jp
les
xor
repnz
push
int3
sbb
mov
aas
mov
or
es
negb
movsb
jno
cmc
pop
push
out
rol
sbb
pop
mov
pop
hlt
fisubrl
cmp
pop
stos
xor
cli
jp
push
adc
loopne
mov
sbb
std
ret
sti
frstor
mov
sbb
sbbl
mov
inc
xlat
mov
jecxz
mov
pop
xchg
iret
push
mov
icebp
jno
mov
in
out
fdivrs
jbe
pop
ss
mov
call
jge
sbb
sub
mov
and
movsb
test
popf
ror
mov
iret
dec
xchg
jns
pop
add
pop
idiv
fucomi
jne
cmpsb
dec
fisubrs
sub
popf
outsl
adc
mov
lods
jecxz
or
cs
shlb
mov
mov
xor
lea
aam
mov
repnz
push
jp
nop
push
xchg
js
sub
pushl
mov
ds
or
push
loopne
xchg
out
push
loop
enter
repz
mov
inc
outsl
cmp
ret
repnz
jp
push
mov
mov
adc
lds
stc
dec
sub
out
icebp
jecxz
xor
stc
pusha
jl
sub
or
add
jmp
lret
int
mov
adc
and
cmp
int
pop
ss
ds
jb
pop
add
jb
push
pushl
rclb
ljmp
icebp
std
jns
std
pop
mov
xchg
rorl
or
out
xlat
sbb
popa
mov
jne
mov
jmp
mov
in
dec
pop
mov
popa
jge
out
pop
push
sti
mov
sub
pop
xchg
or
add
push
jae
int3
inc
sub
hlt
mov
pop
xor
cmp
pop
jp
mov
orl
inc
ljmp
shr
iret
sub
adc
out
push
lahf
fcoms
out
dec
pop
insb
mov
adc
cltd
and
and
loope
add
cmp
pop
jnp
loopne
jp
sbb
push
inc
stos
mov
stos
adc
push
fstpl
int3
mov
in
push
sahf
lret
push
adc
scas
sbb
jg
xor
ja
sub
xor
out
out
dec
inc
sbb
sti
imul
mov
enter
jne
loope
movsb
lret
mov
call
incb
xor
pop
lds
mov
cs
bound
mov
xchg
stos
or
inc
and
in
jno
mov
cmpsb
add
mov
mov
mov
mov
test
addl
fcoml
mov
mov
les
sbb
mov
loope
mov
test
mov
sti
js
testb
aam
fwait
cmp
subl
add
scas
cwtl
xor
insl
pop
adc
sub
dec
cmpsb
or
hlt
jno
imul
test
jno
sub
jl
sbb
test
int
pop
cli
scas
popf
scas
sarb
or
inc
rolb
outsl
jb
pop
stc
pop
cld
cmpsb
push
out
lahf
push
dec
shlb
adc
repz
loope
or
fidivrs
ja
rcr
js
sti
pop
push
adc
mov
lret
cmp
pop
lea
cli
pop
test
ret
add
ljmp
lcall
add
cwtl
incb
add
xchg
jecxz
mov
clc
cmpsl
cld
push
fwait
jle
imul
xor
sti
std
icebp
push
pop
std
push
or
test
bswap
inc
mov
stc
stos
addr16
mov
jp
xchg
cmpsl
dec
ljmp
add
stos
fs
mov
subb
xor
jge
jno
ret
mov
stc
and
xor
push
mov
xchg
pop
mov
pushl
daa
leave
cltd
dec
rcrb
xchg
dec
jne
inc
out
xor
mov
ss
scas
fsubrl
outsb
sbb
or
stos
cld
or
in
lret
test
xchg
inc
mov
fs
xchg
ljmp
aaa
push
shlb
in
and
dec
push
incb
jno
cwtl
aam
out
lods
jns
mov
lds
hlt
dec
add
insb
loope
movsb
push
orl
push
jne
pop
push
cmp
cltd
cmc
nop
rcrl
scas
add
push
enter
mov
sti
pop
mov
xlat
shlb
add
fildll
pop
xchg
leave
push
addr16
or
fucomip
sbb
out
push
rcr
push
pop
mov
add
mov
fidivl
lahf
imul
mov
sub
and
in
pop
ficoms
insl
icebp
lock
lret
dec
int
pop
mov
sbb
cmp
jbe
cs
stc
cmpsl
stc
mov
cmp
mov
jno
push
adc
jecxz
dec
divl
rcrb
mov
jns
mov
loopne
jne
xchg
test
xor
stc
repnz
rclb
and
push
mov
testb
jmp
pslld
in
mov
jns
mov
dec
faddp
int3
add
lret
idivb
inc
inc
ljmp
add
adc
sbb
pop
movsb
leave
add
mov
cmpl
mov
pop
jne
add
and
push
movsl
lods
vlddqu
bound
mov
sbb
sub
pop
jmp
pop
out
ror
pusha
xor
stos
pop
or
jg
add
pop
mov
cs
jle
adc
mov
add
jmp
scas
mov
pop
adc
sub
lcall
dec
addr16
xor
pop
push
jnp
or
cltd
addr16
daa
sub
cmpsl
pop
sbb
mov
arpl
ds
es
or
xchg
jl
add
and
std
ljmp
ljmp
dec
ret
aad
xchg
add
mov
hlt
xchg
insl
out
jns
loop
nop
or
popa
test
dec
rcr
xchg
push
jns
adc
pop
xchg
test
js
jmp
cmp
test
and
xor
or
mov
dec
adc
or
sub
mov
out
cwtl
add
icebp
jb
jl
aam
mov
jbe
mov
rorb
pop
sti
aaa
push
jae
or
and
cmpsl
mov
lock
pop
stos
jge
xor
loopne
jb
xor
jp
rcll
xchg
inc
xor
gs
jnp
dec
cmp
repz
xor
iret
sbb
cli
xchg
bound
or
inc
in
sahf
jl
xchg
push
insb
lods
test
call
push
dec
cmpsb
mov
xchg
fcoms
cld
sti
or
sbb
es
or
dec
xchg
dec
mov
cltd
lods
xor
xchg
addr16
in
push
mov
sbb
lret
not
sahf
add
cmpsb
add
pop
mov
adc
ljmp
into
jns
sub
lahf
stc
sbb
or
sbb
cmpsb
hlt
push
jne
cs
push
sub
mov
mov
stos
fisubrs
xchg
cmp
mov
xor
sbbb
in
cmp
jae
xchg
les
enter
dec
call
jmp
dec
add
pusha
adc
dec
test
cld
out
mov
lret
hlt
lods
jno
push
or
call
adc
mov
add
inc
sbb
cltd
lock
add
lods
sub
lret
loop
mov
xor
icebp
jmp
movsl
inc
aam
cmp
in
jno
jp
mov
mov
xor
out
mov
and
idivb
sbbl
cmp
mov
xor
cs
out
adc
mov
mov
or
fsubs
mov
or
fwait
orl
sub
ja
gs
ljmp
jns
xor
add
ss
out
test
dec
xchg
loop
int
sub
nop
fmul
clc
rcl
fstps
imul
cmp
add
cmpsl
std
mov
mov
fwait
std
js
xor
cmp
loopne
arpl
xchg
pop
push
ret
push
mov
add
xor
push
push
pop
roll
jno
push
adc
iret
jg
jmp
notb
out
pop
insl
rolb
rol
pusha
mov
push
stos
or
in
sub
cmp
loope
pop
xchg
push
fnstsw
push
push
dec
add
push
out
rcr
loop
pusha
xor
jmp
xor
and
enter
sub
cmp
push
dec
pusha
sub
outsl
cmc
push
shll
out
sbb
mov
jae
adcl
adc
les
cmc
adc
push
mov
lret
fiaddl
cli
mov
dec
dec
fwait
icebp
push
push
mov
xchg
dec
out
mov
clc
lods
push
cmpsl
and
arpl
add
xor
test
cmpsl
add
mov
aad
jb
pusha
scas
jo
stos
mov
cli
and
iret
movsb
xchg
inc
push
sub
push
lret
push
inc
and
mov
push
test
pop
dec
lret
lret
and
push
adc
shll
shl
pop
and
inc
fcomi
lea
cwtl
cld
inc
dec
adc
or
dec
xchg
push
xchg
or
sub
xor
insl
stos
sbb
xor
push
sbb
sub
loope
in
test
xor
inc
cmp
pusha
daa
sbb
lds
push
adcl
jecxz
cmp
andl
sar
jae
fiadds
mov
jnp
xchg
xor
or
xchg
mov
adc
xchg
inc
jns
mov
nop
popa
sub
out
push
incl
mov
ja
fimuls
movsb
rclb
shlb
pop
push
mov
das
das
and
icebp
sbb
repz
sbb
fldcw
adc
ja
inc
hlt
xor
push
adc
orl
repnz
int
adc
mov
jecxz
dec
fwait
push
dec
mov
cmc
xchg
ljmp
push
cmc
adc
push
stos
pop
jno
jno
jns
sbb
aas
movsl
ret
pushf
jbe
iret
jns
pop
cltd
dec
test
jg
mov
imul
pushw
dec
lods
jb
mov
roll
orb
call
adc
xor
push
jle
int3
aas
jae
sub
pop
ret
test
cmp
or
pop
clc
je
hlt
mov
fbld
xchg
ret
and
mov
dec
aas
pusha
pop
and
jp
xchg
ljmp
sub
push
call
inc
aaa
mov
movsb
test
fwait
aas
mov
jno
call
jno
or
out
ja
aad
imul
push
repz
rorl
ss
or
xor
call
dec
lahf
dec
jp
rorl
mov
ljmp
sub
iret
loop
popf
fwait
stos
sub
adcl
out
dec
adc
lret
mov
cld
cmp
rolb
fs
das
and
and
xchg
mov
das
xor
stos
mov
cmp
mov
adc
imulb
lods
shll
pop
sbb
xor
smsw
jge
ss
inc
mov
loope
sbb
mov
ret
sbb
aam
cs
jmp
add
aas
xor
aas
cwtl
mov
popf
jbe
inc
sbb
mov
pushf
stc
or
in
out
jno
xor
dec
mov
or
ja
in
jmp
xor
repz
movsl
lahf
fstpl
cmc
xchg
push
sbb
cmp
xchg
orl
pmulhuw
mov
hlt
adc
mov
and
sub
inc
adc
pop
xchg
es
movsl
xchg
cli
fstps
movsb
add
fcmovbe
inc
push
and
roll
lret
loope
push
inc
lds
pop
adc
push
push
outsb
cwtl
sub
xor
rorb
movhps
fsubs
arpl
and
jb
xor
and
cmp
lds
cmpsl
int3
dec
lcall
ret
pushf
jl
std
loopne
mov
add
inc
xor
test
lds
popa
ret
or
aaa
adc
mov
inc
cld
sub
filds
sahf
scas
jns
adc
scas
cld
sbb
adc
mov
pop
or
xor
je
lret
imulb
cltd
scas
dec
pop
inc
cwtl
pop
stc
mov
xchg
out
dec
test
ret
and
cmp
cmpsl
and
mov
icebp
cmc
jmp
mov
adc
ficoms
movl
push
aam
pop
in
mov
sbb
pop
orb
push
mov
cld
shlb
or
pop
ret
xor
jp
fsubrl
push
test
mov
movsl
xchg
adc
xchg
or
sbb
mov
repz
xor
add
dec
sti
fs
in
shlb
sbb
xchg
rorb
sub
lret
mov
mov
ret
inc
sti
lahf
or
or
cmpsl
inc
packuswb
and
or
int
out
arpl
popa
dec
mov
pop
data16
sbb
cmp
and
ret
jl
inc
in
sub
mulb
jbe
dec
pop
push
lcall
ret
frstor
mov
daa
mov
fs
pop
xchg
adc
repnz
mov
dec
mov
adc
inc
mov
mov
test
stos
testl
loope
sarl
push
out
dec
dec
fsubrl
movsb
movsl
adc
adc
outsb
mov
mov
ret
test
aam
ret
bound
test
subb
pop
and
pop
add
test
outsb
mov
gs
cltd
sti
addr16
pop
dec
xlat
inc
sub
xorb
jle
push
inc
or
mov
xchg
lock
add
dec
lods
fdivrs
aas
cld
in
test
jl
sti
add
mov
sub
dec
sbb
xor
jle
inc
cmp
shll
xchg
jne
push
insl
jmp
pushf
adc
negl
or
cmpsl
xchg
mov
mov
dec
mov
shl
sti
movsl
iret
xchg
jns
mov
add
mov
mov
scas
test
cmp
adc
nop
rcl
push
dec
push
icebp
leave
sbb
mov
in
push
xlat
fsub
sarb
insb
inc
mov
int
in
cmpsb
int3
cmovge
adc
jge
mov
aas
idivl
aad
xchg
cmp
outsb
aam
sub
in
xchg
pop
mov
lret
xor
xor
and
xchg
je
nop
aad
test
cwtl
insb
mov
inc
xor
rolb
cs
test
shrb
sbb
or
pop
push
ds
mov
mov
hlt
shll
adc
add
sub
dec
add
or
rcrl
push
pop
or
int3
pop
jmp
jns
xchg
cmpsb
in
ds
jp
outsl
aas
fwait
pushf
xchg
jo
loop
iret
das
repnz
test
stc
fwait
and
loope
adc
sahf
stos
iret
cmc
push
mov
outsl
jnp
cmp
xchg
dec
stos
xlat
fwait
nop
imul
ret
xchg
mov
test
bound
rorb
dec
js
rcrl
loope
ret
aas
adc
mov
div
push
testb
jb
sub
and
lock
aam
jnp
sub
pop
mov
insb
sub
sub
fstp
stos
in
fcmovb
sbb
aad
mov
out
jmp
fs
stos
pop
and
add
mov
or
das
or
rcrb
jmp
or
dec
xor
ja
pushf
sub
xor
push
xchg
or
add
jae
jg
xor
pop
xor
sbb
sub
sbbl
stos
jb
xchg
push
push
adc
ret
xchg
push
fcmovnu
fsubs
push
cmp
or
inc
mov
les
jecxz
gs
add
mov
sti
adc
pushf
push
fldl
pop
push
adc
into
sub
int3
or
cmc
repz
or
mov
cmpb
dec
xor
xchg
fists
push
lret
jns
and
push
push
arpl
scas
sub
jne
jb
mov
inc
faddl
subb
outsl
pop
in
adc
ljmp
mov
arpl
pushf
in
cmc
or
cmc
push
mov
adcl
push
adc
and
cltd
xchg
jmp
xlat
inc
xchg
movsl
jno
sbb
push
mov
jb
out
out
test
inc
hlt
mov
ret
add
cltd
sub
and
xchg
dec
icebp
cmp
mov
or
adc
xor
nop
mov
inc
sbb
and
lret
test
inc
mov
jb
and
sub
bound
mov
popa
inc
sar
inc
insl
sub
and
sub
call
decl
sarb
sub
dec
fldenv
cmp
fistpll
cvtpi2ps
iret
cmp
stos
les
loopne
lahf
jno
fdivl
mov
jno
leave
ja
mov
out
jl
cmp
cmp
dec
sbb
mov
ds
aaa
xchg
insl
sbb
jbe
loop
push
scas
in
mov
xor
jbe
sub
inc
mov
aas
imul
dec
mov
mov
sbb
push
pop
and
dec
insl
es
adc
icebp
das
add
mov
mov
mov
or
sbb
xchg
std
ret
in
fisubs
rorl
cmc
adc
lock
cmp
mov
pop
testl
xchg
notb
fs
lea
jl
icebp
fucomip
fs
cmpsb
xor
dec
add
sti
loopne
mov
fsubl
xor
into
add
xor
mov
xor
lret
xchg
sub
ja
jg
pushf
push
jae
es
or
sbb
jns
adc
out
adc
ficompl
jae
push
data16
xlat
out
popaw
jo
iret
imul
fs
sub
scas
ja
cmpsb
jg
cmc
jmp
arpl
xchg
cmp
jne
cmpb
mov
mov
mov
pop
insl
div
gs
cs
or
pop
je
push
dec
add
xchg
flds
ficompl
orb
fildll
pop
fistpll
loopne
push
adc
or
xchg
cmp
fwait
mov
xchg
mov
gs
nop
test
scas
mov
mov
sahf
popf
arpl
lcall
lds
jg
xchg
lret
insb
in
adc
fnstsw
sub
sarl
out
stc
jbe
pop
and
jmp
push
and
or
ror
jecxz
pop
or
nop
std
lock
mov
std
cmp
jecxz
scas
sub
ja
ja
and
xchg
mov
push
and
mov
cld
out
xchg
jmp
aas
in
sub
in
and
mov
mov
neg
add
xchg
fs
sbb
cmpsl
inc
mov
mov
scas
xor
ret
xor
stos
adc
stos
push
imul
jnp
ret
jne
mov
xor
mov
jo
xchg
cmc
imull
inc
push
mov
loopne
shl
jl
cs
in
add
rcrb
jp
sub
push
movsb
pop
int3
push
push
mov
jno
call
ja
jp
jg
mov
sbb
dec
cmp
and
mov
fistpll
and
cmp
pop
shll
add
dec
icebp
adc
pop
out
sbb
fs
pop
lea
cmp
in
out
xor
imul
cmp
outsb
rcr
xor
rcrb
inc
imul
sub
adc
mov
movsl
lcall
lds
push
push
iret
pop
add
xchg
jmp
push
dec
das
xor
push
sbb
jae
xor
inc
insl
or
loopne
sbb
arpl
mov
dec
daa
cmp
mov
pop
es
lods
imul
push
test
cmp
or
call
xchg
aad
test
pop
imul
fsubrs
mov
subl
int
mov
imul
aas
add
mov
and
pop
jge
stos
jmp
lret
xor
and
sub
lea
cmpsb
js
test
dec
inc
hlt
or
jmp
push
sub
add
cmp
incb
dec
imul
loop
sbb
push
bound
in
cld
mov
aas
sub
roll
scas
mov
daa
sub
scas
mov
fmuls
xor
cmp
dec
xor
test
mov
int
aam
mov
jecxz
adc
push
mov
add
test
sahf
out
mov
mov
jb
jecxz
push
insl
ficoml
inc
lea
cmp
out
imul
adc
and
push
sbb
push
add
lds
and
test
scas
push
adc
test
pop
add
inc
jle
cmp
loop
mov
into
mov
je
fnstcw
data16
mov
repnz
sbb
fcompl
xor
out
shl
pop
mov
fstp
cmp
push
or
sbb
cmc
mov
orb
imul
ret
jo
movsb
pop
sbb
imul
mov
testl
sbb
mov
stos
mov
add
scas
pop
lahf
sbb
push
nop
mov
push
lods
rorl
jae
push
js
out
and
push
adc
fmull
push
scas
or
fsub
rorl
int3
cmp
pop
or
lods
adc
xor
lret
imul
sbb
cwtl
movb
fcoms
sahf
test
out
jecxz
pushf
or
fildll
mov
mov
or
cli
or
test
movsb
mov
push
mov
mov
popa
xchg
imul
nop
push
mov
xchg
mov
jge
movb
int
int
mov
call
jg
fstl
dec
mov
cmp
ret
cmpw
mov
aad
hlt
div
daa
loopne
rep
or
mov
or
pusha
dec
lods
lods
pop
dec
jno
mov
stos
dec
fwait
outsb
jae
sbbb
mov
mov
fistpll
mov
inc
cmc
notl
xchg
pop
jmp
loopne
sbb
lahf
in
cmp
lds
jnp
cld
jecxz
sub
loopne
lahf
sti
jo
cmp
jp
test
sbb
mov
lahf
inc
popa
fwait
mov
cs
cmp
xlat
add
inc
sub
std
loopne
mov
sub
pop
inc
xor
popf
push
xor
xchg
inc
xlat
popf
mov
jne
inc
push
push
outsl
leave
popa
push
lahf
jl
mov
das
and
jle
jmp
mov
repz
sbb
adc
and
pushf
imull
arpl
mov
out
or
push
or
js
jnp
jmp
std
add
inc
push
out
in
int3
clc
or
xor
sub
jmp
arpl
jae
stos
mov
aas
xor
int3
xor
jg
ret
inc
pop
mov
cmp
or
jb
das
cmpsb
jmp
addr16
loope
lds
pushf
inc
push
jle
js
xlat
pop
pusha
fisubl
mov
and
jo
push
pusha
scas
pusha
xor
sbb
mov
mov
jge
xor
xchg
movsl
or
mov
out
pop
rolb
call
inc
mov
sbb
mov
sub
repz
push
mov
shr
ljmp
and
lea
sbb
cli
push
mov
in
mov
mov
adc
rclb
cmc
mov
pusha
aas
inc
addl
push
mov
sub
xchg
mov
pop
mov
add
popa
pop
adc
lods
push
je
pop
push
dec
pop
add
aas
movsl
sbb
inc
push
cmp
xor
pop
test
pusha
gs
nop
mov
movsl
cmp
inc
jb
pusha
sub
sub
pop
adc
mov
mulb
clc
or
jnp
inc
lcall
pushf
fwait
dec
bound
pop
ret
mov
and
es
das
ljmp
xchg
pop
lret
icebp
push
inc
inc
mov
in
sub
js
cmp
push
push
inc
fimull
out
cmp
das
shl
sub
ret
jl
stos
stos
adc
in
repnz
jnp
divb
jl
sti
addb
int3
and
and
or
test
ret
pop
cld
cmp
mov
xor
adc
imul
mov
imul
ljmp
nop
scas
and
les
jge
push
cs
repz
lds
lcall
pop
cmp
test
sub
movsb
sti
sub
xor
pop
jge
js
adc
or
gs
ret
adc
stc
fistl
mov
push
out
push
outsl
xchg
xchg
pusha
inc
push
imul
dec
sub
pop
and
jecxz
xchg
adc
aaa
mov
test
sub
push
jmp
add
inc
arpl
jmp
fistpll
es
stos
push
std
pushf
rclb
and
jb
dec
mov
and
vpmacsdd
mov
inc
jne
outsl
dec
out
test
shr
or
call
and
in
jnp
jns
das
xchg
test
lret
loope
retw
push
xor
clc
sub
xor
sub
orl
setno
cmpsb
insl
and
aad
adc
and
push
xlat
mov
adc
pusha
xor
xlat
dec
dec
xor
ljmp
pusha
aad
xchg
xchg
and
lret
leave
lock
sub
pushf
call
hlt
fcoml
pop
mov
fsubr
out
xchg
pop
shrl
and
pushl
daa
push
pop
fcmovnbe
and
stos
loope
dec
pop
cli
rcrl
lea
movsb
jge
insb
les
cmp
and
or
jl
jnp
lods
xlat
lret
bound
xchg
and
sub
jecxz
mov
mov
stos
push
movsb
mov
xchg
pop
fwait
mov
ss
nop
out
cld
repnz
dec
inc
xorl
fbstp
mov
jp
fsubs
sahf
cs
push
mov
mov
je
or
push
jnp
jmp
mov
cmp
jl
sbb
rcll
pop
sahf
adc
cs
dec
sahf
xorb
nop
push
or
sbb
dec
std
ds
cld
mov
clc
js
int3
repnz
and
je
clc
mov
dec
pop
mov
aas
enter
xchg
scas
mov
pusha
sti
testl
subl
ljmp
inc
push
mov
push
inc
pop
and
loop
rolb
cli
ret
call
jg
das
inc
add
xchg
fldl
xchg
xchg
add
icebp
dec
cmp
ret
roll
xor
out
aaa
blcs
mov
ficompl
popf
ljmp
and
sbb
xor
sub
pop
pop
push
in
mov
ret
flds
xlat
cmp
lahf
or
lea
hlt
dec
iret
je
leave
adc
test
popf
push
sarl
mov
aaa
aam
push
xchg
imul
xor
pop
pop
stos
lcall
mov
es
adc
add
movsb
call
push
push
jae,pt
pop
inc
add
cltd
mov
mov
gs
push
addr16
rorb
xor
and
cmp
mov
cmpsl
cmp
ljmp
adc
xchg
sub
out
movsb
cmp
jns
in
test
jge
inc
cmp
jl
testl
or
dec
and
test
mov
mov
clc
into
sbbl
jl
fcomi
ds
push
cmp
push
and
mov
add
xchg
repnz
inc
inc
mov
and
roll
in
int3
lods
mov
jg
jl
mov
or
mov
imul
jl
es
lock
cltd
lock
lods
shll
jmp
cmp
cmp
inc
movsb
aas
xchg
popa
sti
xchg
sub
rclb
mov
and
xor
or
movsb
and
in
xlat
mov
sub
push
in
adcb
xlat
push
ja
mov
mov
repnz
fsts
iret
gs
out
push
and
lahf
adc
ss
cmp
xchg
pop
lds
mov
xchg
inc
mov
into
int3
mov
and
mov
fcompl
add
and
add
sub
icebp
xchg
dec
call
jnp
adc
mov
push
sub
dec
xchg
insl
jge
imul
jmp
mov
enter
xchg
mov
call
mov
lods
sbb
add
jns
dec
jp
xchg
adc
inc
lock
cli
repz
stos
shlb
insb
fnstenv
adc
sbb
sti
mov
xchg
addr16
pop
xchg
add
aas
cltd
xchg
lret
pop
js
inc
stos
xchg
jnp
push
in
in
xchg
shlb
test
addb
pop
xchg
push
pop
sarb
arpl
mov
loop
notb
out
out
push
mov
sub
lret
mov
add
movsb
fadd
lret
lods
or
int
xchg
je
push
dec
pop
sub
and
fucomi
leave
sti
sbb
mov
cmpl
lock
rorb
mov
leave
daa
push
pop
xchg
cmp
xchg
ror
scas
in
cmc
pop
fcompl
out
movsl
mov
pusha
sub
arpl
jp
stc
fildll
stos
dec
ret
xor
lock
rolb
mov
imul
cmp
sbb
loop
mov
clc
imul
into
gs
and
sbb
jl
and
lret
lret
sub
jg
xchg
std
adc
stos
adc
cmpsl
fsubs
add
mov
xor
pop
dec
xor
sbb
fmuls
dec
mov
js
pop
mov
xchg
out
pop
mov
adc
sub
pop
int3
cmp
jmp
cmpsb
xchg
fadd
adc
push
call
arpl
xchg
mov
mov
adc
out
sub
jp
and
xchg
mov
dec
push
jb
push
mov
in
dec
out
insb
dec
out
or
push
dec
cmpsl
xchg
data16
pop
mov
dec
scas
jbe
ljmp
cltd
shlb
icebp
jmp
pushf
clc
or
inc
jp
pop
push
cmc
pop
push
and
mov
pop
aaa
xchg
mov
sbb
mov
dec
fsubs
inc
scas
mov
sbb
xchg
sbb
push
rcrb
imul
mov
inc
pop
out
pop
aas
movb
outsl
fcmove
test
jp
ljmp
sbb
jl
add
and
rcrl
lea
fstpt
mov
adc
lods
loop
cli
mov
fcoms
sub
iret
scas
inc
enter
inc
jge
or
push
cwtl
div
adc
mov
cmp
mov
mov
lahf
pop
mov
xbegin
ja
adc
call
xchg
ficoms
dec
test
imul
jo
cwtl
mov
and
ljmp
into
xchg
mov
dec
lcall
pushf
push
jl
pop
out
bound
fisubrs
sahf
adc
pop
push
je
sbb
jle
mulb
cmpsb
cmp
sub
xchg
shll
push
dec
mov
sub
cmp
insb
xor
sbb
adc
pop
adc
jbe
mov
push
nop
data16
mov
adc
xor
mov
pop
popf
adc
xchg
ja
xlat
nop
fbstp
cli
divb
sbb
pop
loopne
scas
jmp
fldl
mov
into
push
loop
or
pusha
sbb
in
xor
push
shrb
adc
xor
adc
es
pop
ror
lahf
or
sub
mov
pause
repz
stc
cwtl
adcl
mov
xor
jl
push
jmp
and
rorl
sti
rorb
mov
xor
lods
stc
repz
outsl
xchg
in
mov
cmpsl
xchg
sub
das
imul
xchg
aam
pop
push
test
mov
adc
mov
sub
or
rcl
mov
and
add
icebp
ljmp
out
cmc
es
ljmp
sbb
mov
ljmp
xchg
add
lcall
or
push
sbb
adc
rol
sbbl
movsl
xor
sub
or
add
outsb
pusha
add
cmpsb
les
mov
or
sbb
jp
syscall
adc
test
out
outsb
jecxz
xchg
adc
or
xor
stc
sub
adc
test
pop
mov
sbb
push
mov
mov
mov
jb
push
or
test
mov
decb
push
push
sbb
mov
mov
inc
sete
ljmp
sub
addl
aas
dec
mov
mov
fwait
pop
mov
iret
jl
inc
mov
jne
push
cmp
stc
pop
mov
and
adc
push
mov
push
fmul
lods
and
sarb
add
cltd
les
pop
mov
mov
add
push
cmp
decb
decl
scas
lods
cmp
mov
or
mov
loop
adc
mov
cmp
enter
fcoml
xlat
stc
push
adc
add
jmp
fadds
int
push
dec
push
cmc
jae
pop
hlt
jo
popf
mov
ljmp
hlt
aas
or
nop
out
divl
nop
out
mov
pop
stos
jmp
sbb
xor
xor
idivl
push
ja
mov
cmp
jo
out
xchg
insb
mov
push
or
dec
cmp
sti
jnp
mov
imul
add
out
add
minps
push
pop
test
pop
cmp
enter
or
dec
mov
subl
adc
cld
insb
clc
loope
push
fldcw
fstpt
fs
popa
mov
shll
dec
jno
mov
clc
sahf
jns
in
inc
icebp
data16
fisttps
push
icebp
in
mov
and
enter
inc
pusha
sbb
or
mov
xor
push
nop
mov
add
xor
push
xchg
or
fldl
and
xchg
mov
sub
andb
push
mov
xor
mov
and
jb
loopne
pushf
jae
testl
and
fs
pop
jnp
int3
xchg
leave
mov
out
jns
sub
jp
popf
lods
inc
out
movsb
lods
xchg
out
lds
ds
jns
jle
add
leave
cmp
cli
pop
or
jle
ucomiss
mov
cli
mov
jne
sbb
adc
add
into
xor
xlat
jge
and
mov
jns
cmp
push
push
fwait
jo
aaa
scas
leave
lods
pop
fwait
sbb
lret
addr16
jmp
call
push
js
push
jge
sbb
lods
lock
fistps
mov
lods
ret
xchg
stc
push
xor
test
lret
fbstp
inc
fistl
jns
popa
sbb
jle
rcl
and
mov
fsubs
ljmp
sbb
inc
pop
repz
and
and
pop
sbb
ret
addr16
push
adc
mov
jnp
repnz
ljmp
rorl
sbb
ds
pusha
arpl
lods
sub
sub
or
add
das
or
sub
shlb
mov
adc
push
addl
jae
out
mov
xorb
xor
test
inc
dec
adc
sub
fs
mov
xsave
pusha
adc
shrl
test
push
aam
mov
push
out
loop
mov
testb
adc
sbb
imull
lcall
ltr
mov
lret
outsb
sbb
push
jns
adc
test
mov
inc
clc
mov
push
les
addl
sti
ljmp
cltd
bound
fnsave
push
ja
cmp
push
mov
sub
movsl
mov
lods
and
dec
dec
pop
dec
or
pop
les
sahf
push
stos
repnz
pop
add
in
mov
pop
push
inc
add
pop
idivl
push
stc
mov
cmpsb
and
bound
jbe
mov
xchg
jmp
jne
out
data16
mov
lock
mov
lods
ds
cmp
inc
cmpl
sbb
pop
mov
xlat
dec
cmc
and
adc
aas
hlt
adc
scas
xlat
cmpsl
adc
add
shlb
jo
aas
insl
or
scas
ljmp
leave
adc
enter
add
cmpsb
cltd
scas
mov
arpl
lret
in
add
std
in
mov
cmc
adc
pop
push
insl
xchg
pop
std
scas
add
in
jne
or
ds
push
lds
loopne
adc
mov
ja
aad
jne
jle
pop
out
sbb
testb
mov
mov
adc
cs
popa
or
pop
add
xchg
sub
clc
xor
test
jae
out
or
dec
or
lea
pop
jnp
in
mov
cli
cmp
jns
jg
stos
add
push
mulb
xchg
mov
push
mov
sbb
mov
js
dec
xchg
aam
mov
xlat
inc
scas
mov
add
mov
sbbl
out
mov
jge
and
xchg
test
daa
pop
and
push
pop
mov
les
sbb
jge
pusha
sub
pop
mov
xchg
mov
xchg
cmp
mov
fildll
xchg
js
cli
cmp
pushf
pushf
pop
insl
inc
shll
sub
and
inc
nop
sub
popa
jge
sbbl
add
sbb
dec
inc
pop
cmpsb
gs
dec
jg
cmp
jp
push
mov
andb
or
push
imul
jmp
dec
clc
jmp
mov
repz
adc
ret
fwait
jns
mov
or
sub
scas
push
orb
pop
mov
sub
fcoms
mov
mov
cli
add
testl
les
pop
adc
adc
stc
xor
lret
into
sub
sub
out
mov
cmp
pop
sbb
pop
jbe
dec
cmp
sbb
aam
sub
push
sub
xchg
das
nop
popl
daa
cmp
sbb
loopne
fidivrs
das
mov
mov
push
sbb
lods
cmp
or
push
arpl
sbb
test
push
fsubrs
mov
sahf
stc
arpl
roll
adc
outsl
xor
pop
enter
cmp
test
les
test
hlt
jl
lods
rcrb
add
repz
mov
cmp
arpl
cmp
xchg
imul
push
dec
dec
nop
fildll
sbb
adc
psadbw
mov
dec
in
in
aas
add
sti
and
sti
dec
mov
loope
sbb
movsb
inc
dec
cmpsb
xchg
aaa
pop
mov
fldt
sbb
and
fadds
lods
mov
fisubs
dec
adc
imul
jl
lea
inc
in
xchg
jo
rcrb
push
out
pop
outsl
inc
or
cmp
pop
mov
pop
rorb
mov
jns
push
cmp
add
rcrb
outsl
sub
push
jbe
or
add
mov
mov
pop
xchg
mov
rcl
inc
inc
lcall
xor
mov
xchg
cmp
aam
das
int
aaa
insl
aaa
xlat
jmp
loop
ret
ljmp
cwtl
aad
fs
jno
push
add
sbb
insl
push
xor
inc
jge
jg
andnps
das
push
mov
pushf
mov
enter
movsl
aam
inc
push
jno
movsb
pop
gs
mov
inc
movsb
inc
pcmpeqd
pop
mov
xor
cmpsl
mov
mov
push
cmp
out
test
xchg
mov
std
pop
adc
ljmp
lea
adc
or
xchg
mov
stc
out
fnstsw
sbb
push
sub
xlat
fbstp
sub
inc
sub
pop
mov
inc
pusha
or
test
mov
out
std
scas
adc
and
jno
cwtl
dec
in
push
pusha
jbe
xchg
orb
cld
sbb
xor
pop
cmpsb
call
jo
xlat
fwait
and
imul
sub
xchg
xchg
stos
push
into
add
adc
push
icebp
mov
jmp
arpl
mov
dec
loopne
dec
aam
mov
mov
stc
nop
pop
sbb
inc
add
dec
mov
dec
jo
ljmp
cltd
daa
sbb
and
cs
or
data16
dec
mov
fnsave
shl
mov
mov
xchg
data16
adc
dec
aam
movsl
xchg
xchg
mov
xor
push
sbb
add
fisubrs
adc
or
bound
pop
ror
xchg
sbb
push
inc
outsb
outsb
loopne
push
inc
scas
jns
cmpsl
rorl
out
popa
dec
movsb
addr16
les
leave
push
out
loop,pt
add
nop
out
jge
inc
dec
mov
add
lds
pop
popf
jo
sahf
jns
xchg
mov
std
imul
xchg
xchg
xor
and
addl
lahf
adc
mov
sbbb
stos
or
pop
arpl
and
sbb
loop
push
or
inc
orl
jecxz
mov
jp
xchg
mov
cmpl
in
add
push
mov
aam
fcoms
xor
gs
dec
ljmp
pop
mov
rclb
into
add
pop
nop
rcrb
mov
jbe,pt
cmpsb
pop
int
es
xor
or
hlt
stos
inc
mov
sbb
mov
sub
repnz
jl
je
xchg
inc
movl
adc
cltd
ljmp
dec
out
cmp
jo
push
pop
aam
pop
loop
pop
shl
jg
repz
out
or
push
loop
dec
adc
jmp
push
jnp
dec
add
rclb
fs
jge
mov
sub
sbb
or
lret
and
int3
scas
cmp
sti
movlps
fucomi
cmp
mov
mov
jns
mov
jg
inc
adc
add
and
push
ss
arpl
stos
inc
cmp
or
popf
mov
xlat
add
lock
lcall
repz
test
adc
dec
sbb
int3
cli
rclb
dec
fstpl
decl
pushf
cltd
mov
and
std
xchg
lock
push
stos
test
cmc
lods
in
add
js
rcl
out
int
xchg
outsl
insl
cmc
fs
sub
xchg
fldt
cmpb
fscale
inc
stos
dec
mov
xor
jl
and
mov
js
test
add
pop
pop
xorb
sbb
leave
xchg
pop
cmpsb
cltd
pop
add
sub
iret
andl
mov
jne
mov
cmpsb
lcall
clc
push
scas
rol
test
leave
aad
push
in
ret
bound
notl
repnz
jne
mov
sub
push
adc
jo
data16
jb
mov
dec
mov
popf
xor
rcr
out
pop
popf
stos
dec
stc
inc
mov
lret
stc
push
into
pop
fsubr
stc
adc
adc
decb
push
out
mov
cmp
mov
mov
adc
adc
mov
lods
aas
test
push
xchg
insl
cwtl
neg
mov
into
add
xor
inc
cld
lahf
jl
xor
jb
mov
cmp
xchg
xor
adcl
mov
mov
pusha
cmp
mov
cld
inc
lock
loop
mov
inc
xchg
add
push
popf
je
dec
ret
adc
pop
xchg
icebp
or
movsb
push
outsb
inc
sahf
dec
sbb
mov
test
mov
mov
ss
mov
mov
sbb
insb
cmpl
jno
push
jne
jbe
movsl
mov
aam
sub
fldl
pop
jns
xchg
push
out
fstp
ljmp
xchg
aad
loopne
mov
or
das
scas
adc
sub
ljmp
inc
inc
outsb
js
mov
xchg
lcall
sub
imul
imul
call
push
fldenv
cltd
xchg
stos
adc
mov
push
cltd
icebp
js
inc
xchg
cmp
shl
frstor
sahf
lock
push
cwtl
pop
lock
sbb
call
inc
mov
dec
cmp
cs
sub
mov
mov
mov
daa
add
sbb
insb
and
mov
sbb
jp
js
popf
sub
rcr
imul
mov
nop
int
inc
push
sbb
inc
aas
xchg
push
popf
std
sbb
add
lea
lods
sbb
or
push
sbb
mov
andb
dec
gs
out
into
imul
mov
sub
sbb
lds
pop
dec
dec
dec
icebp
sub
mov
scas
xchg
jp
popa
and
das
mov
out
mov
int
or
inc
outsb
hlt
into
loope
dec
inc
repz
fst
mov
add
adc
and
jp
sahf
dec
jae
pop
mov
sub
mov
xor
pop
test
and
loop
fstps
fnstsw
jecxz
iret
out
ror
or
insl
dec
ret
jle
sahf
jmp
xor
test
dec
leave
xor
stos
sbb
ljmp
mov
rcr
cmp
pandn
aam
sbb
pop
adc
or
mov
inc
xlat
xchg
adc
test
xchg
dec
cmp
sub
mov
iret
aas
pop
and
dec
and
mov
pop
enter
jns
mov
push
mov
xchg
aad
sbb
imul
sub
std
jp
cmp
jmp
cwtl
jl
lcall
xor
out
xor
pop
sysenter
bound
dec
jno
dec
inc
cmpsb
jae
pusha
jecxz
stc
fidivrs
data16
adc
cmc
pop
pushf
mov
cmp
js
stos
adc
xor
mov
test
sub
aas
repnz
add
cs
mov
push
or
stos
int3
loope
les
fs
jmp
add
mov
push
inc
sub
addr16
imul
shrb
mov
insl
and
pop
arpl
push
jecxz
lahf
add
repnz
fmull
shl
call
adc
push
ja
clc
flds
mov
or
push
and
test
sahf
int3
iret
sti
dec
add
mov
jnp
fldt
mov
enter
push
adc
filds
push
arpl
add
xchg
rorb
int
xchg
sbb
or
xchg
jbe
in
xor
jnp
hlt
xlat
andl
xchg
pop
hlt
mov
adc
push
dec
mov
lock
popf
push
inc
and
loopne
or
rcl
ja
mov
bound
es
ds
into
cmc
sti
clc
cmp
pusha
xchg
mov
pop
sub
shrb
jne
loope
das
push
movsl
es
push
mov
enter
mov
aam
addl
add
loope
and
dec
mov
dec
stc
arpl
add
adc
daa
push
in
pop
sbb
imul
sub
cmpsb
inc
dec
jecxz
and
rclb
ret
push
mov
out
or
cltd
out
cmp
add
in
push
push
mov
inc
xchg
insb
in
jp
xchg
add
fwait
aam
sub
xchg
push
mov
loopne
pushf
jl
jge
lahf
xchg
outsb
xchg
mov
add
daa
movsl
jb
rcrb
popf
stc
mov
mov
hlt
pop
in
mov
dec
mov
jne
movsb
lods
and
fdivs
subb
xchg
paddsw
loop
shll
adcl
ret
xchg
xchg
mov
ja
xor
dec
sub
xor
push
mov
sub
sbb
gs
inc
adc
adc
push
xor
daa
pop
cld
mov
in
in
fsub
ja
pop
notl
inc
xchg
setae
outsl
mov
icebp
fs
and
push
mov
dec
mov
inc
add
loopne
mov
jle
unpckhps
les
mov
orb
pop
cmp
pushf
sbb
adc
imull
sub
push
mov
insl
lods
add
push
ds
es
aad
pop
mov
adc
sbb
push
jae
ffreep
fwait
inc
testb
jne
test
arpl
xchg
scas
or
mov
hlt
inc
ret
sub
sbb
rcll
insl
push
sbb
sbb
adc
movsl
inc
or
stos
fisubs
and
out
jmp
and
dec
andb
jne
push
inc
mov
ret
jmp
icebp
cltd
int3
cmp
and
int3
push
movsb
andb
push
rolb
mov
test
push
jl
andl
or
mov
in
or
int
mov
mov
mov
das
adc
xor
pop
push
test
adc
in
aaa
imull
pop
mov
mov
stc
fistps
enter
mov
movsl
mov
inc
imul
xchg
or
jb
and
jle
loope
das
mov
add
pusha
adc
loopne
push
andb
out
out
pop
adc
xor
xor
out
sub
push
repz
lds
sbb
in
fs
ret
in
mov
pop
in
pop
mov
fldl
mov
jne
shlb
add
imul
sub
fldt
sbb
cmp
js
and
xor
mov
mov
popf
or
push
cmp
lds
cmp
shl
pop
cmc
push
xorb
pop
or
mov
shlb
mov
mov
push
rclb
jmp
and
inc
jne
cmp
push
sub
sub
or
pop
push
iret
add
sub
fsubl
cmp
jge
repnz
out
and
arpl
test
das
inc
loopne
mov
xor
or
fnsave
pop
test
adc
int
xor
mov
dec
jne
loope
dec
dec
xchg
mov
in
push
in
das
mov
hlt
les
cmc
push
repz
or
fldl2t
push
adc
lcall
in
loop
lock
or
dec
adc
xchg
sbb
jne
out
popf
fsubr
iret
aad
adc
and
lds
mov
dec
push
push
js
adc
ret
dec
enter
pop
add
lea
shll
push
ficompl
xorl
sub
dec
jne
mov
mov
lods
xor
ljmp
xchg
jmp
pop
dec
ret
dec
adc
adc
rcrb
ja
ret
pop
hlt
lods
xlat
ss
mov
lea
xchg
inc
cmp
imul
push
pop
mulb
lock
mov
dec
sbb
dec
rcrl
lahf
and
add
cltd
loop
lods
test
lcall
js
sub
xchg
daa
push
jmp
adc
aas
subl
popa
in
out
pushf
mov
fs
iret
popa
pop
fld
add
sbbb
pop
mov
rolb
into
adc
es
mov
and
imul
mov
cmp
subb
repz
scas
jl
fwait
jle
je
pushl
or
les
insb
pusha
push
xlat
xor
fstpt
xor
dec
push
movsl
test
hlt
push
jne
loopne
or
outsb
adc
cmp
adc
leave
inc
pop
or
es
aad
mov
scas
aas
mov
andb
push
pop
mov
in
adc
and
hlt
jb
pop
dec
sarl
les
push
jle
sti
lret
add
lods
or
push
fimuls
sbb
inc
aaa
jns
xchg
sahf
cmp
out
push
fstp
jl
scas
cmp
arpl
pushf
insl
mov
cli
enter
dec
popa
jp
cmp
push
push
mov
xchg
aas
testb
out
push
mov
scas
addr16
mov
pop
fisubrl
push
mov
mov
add
xchg
add
push
inc
mov
add
fstps
in
fldt
add
push
out
jge
movsl
fisubrs
subb
jecxz
or
add
sbb
mov
cld
and
stos
lods
movsb
add
fucomp
sbb
push
cld
jns
das
lds
cmp
out
push
jmp
aas
mov
push
xchg
pop
jmp
sbb
sti
adc
jmp
or
dec
or
fidivl
mov
jp
enter
mov
mov
add
add
cmpsb
inc
push
fcompl
mov
or
jmp
add
adc
mov
fcoms
sbb
fcmovnu
inc
fdivrs
fneni(8087
push
shll
push
mov
jle
fmulp
mov
inc
in
repz
call
mov
pusha
in
push
loop
js
add
add
int3
popf
popf
lcall
movl
iret
in
popa
adcb
jp
mov
packssdw
xor
add
enter
ljmp
adc
mov
pop
imul
cmpsl
dec
adc
mov
rol
mov
orb
or
arpl
pop
push
push
subb
gs
outsb
stos
jl
push
rcrl
mov
cmp
xchg
pop
pop
jnp
lahf
xor
xchg
xchg
hlt
jp
sbb
out
jbe
bound
sub
xlat
loope
mov
ds
fcomps
xchg
or
sti
sbb
ja
pusha
add
inc
xor
fcmovne
mov
fwait
addr16
daa
xor
mov
xlat
mov
fnsave
inc
cmp
inc
push
gs
scas
lahf
popa
ret
bnd
adc
out
jmp
dec
ljmp
sub
pop
fisubrl
scas
jns
jne
mov
add
jl
push
and
mov
sbb
pop
dec
mov
cli
mov
sbb
ret
nop
imul
pop
ret
stc
bound
leave
adc
xchg
in
stc
stc
in
inc
push
cmc
mov
sub
das
in
loop
push
in
inc
aad
popa
sbb
fdivrl
jp
add
sbb
je
xchg
in
adc
mov
adc
jbe
outsb
ja
push
add
mov
test
mov
push
jmp
rorl
mov
xchg
inc
add
xor
mov
dec
repz
andb
add
and
es
add
xchg
or
fcoms
mov
and
push
fwait
dec
xchg
dec
xor
xor
xorb
lods
xor
xchg
jecxz
call
or
lcall
mov
out
cwtl
mov
cld
movsb
jb
or
popa
or
ret
loopne
retw
sub
xchg
sarl
subl
aas
dec
loopne
and
fdiv
scas
mov
xchg
loop
dec
movswl
adc
enter
mov
xchg
notl
mov
lods
push
add
xor
push
lea
fstp
xor
mov
lods
and
adc
add
xchg
lahf
imul
sahf
ja
inc
sbb
cmpb
and
test
cmp
mov
daa
xor
mov
fldcw
mov
xchg
test
push
ret
mov
jle
push
mov
lcall
pushf
pop
rcrb
inc
lds
pop
mov
add
mov
popf
adc
hlt
stos
std
dec
cltd
enter
cli
sbb
mov
cmp
and
pusha
out
jl
mov
ljmp
mov
sbb
sub
shr
jp
das
lret
sbb
outsb
dec
into
xor
fstl
shrl
cmpsl
jg
ss
dec
aaa
cs
pop
ficomps
nop
in
aaa
rorl
cmp
lods
push
and
divl
adc
mov
dec
in
mov
jle
cmpl
pusha
and
or
or
sbb
push
test
fsubr
pop
cli
sub
test
fimuls
mov
int
fsubrl
ret
jno
adc
iret
jecxz
add
imul
ds
lret
loop
scas
and
sub
orl
add
inc
lds
sbb
cld
or
push
push
loopne
enter
mov
movsl
pop
xchg
sub
pop
mov
xchg
mov
sub
inc
lds
pushf
mov
sbb
sti
mov
mov
lahf
add
mov
js
xlat
shrl
dec
clc
inc
gs
imul
cli
mov
int
pop
adc
pop
stc
xor
aad
shlb
in
in
mov
mov
mov
mov
dec
inc
jmp
nop
jecxz
rcr
fs
data16
and
mov
js
stos
lea
cmovl
daa
inc
sbb
inc
xchg
cmp
push
xor
aaa
adc
pop
insl
std
fimuls
std
xchg
insb
mov
enter
mov
gs
jb
or
fs
cmp
mov
fidivrl
ret
dec
arpl
add
insb
pop
sub
daa
adcb
xlat
test
lcall
fstpl
int3
cld
mov
stos
test
inc
xchg
repz
cmp
push
cmc
sbb
icebp
push
dec
leave
test
xchg
pusha
cwtl
push
lods
fbld
ja
or
inc
enter
cltd
test
sub
fcos
enter
xchg
test
mov
test
daa
inc
xor
int3
mov
mov
imul
dec
dec
push
jns
xchg
xchg
xchg
or
inc
in
inc
lcall
add
push
push
mov
mov
popa
sbb
dec
fsubs
cld
lahf
insb
out
add
stos
subb
lret
fnstenv
frstor
insb
shrl
scas
pop
dec
jae
add
add
jae
jb
sbb
push
out
jp
std
les
inc
ja
das
adc
stc
out
mov
mov
in
inc
sbb
inc
add
cwtl
xchg
jbe
pushf
jmp
in
or
subb
jae
mov
xlat
daa
jl
inc
mov
out
or
ljmp
pop
pushf
xor
aaa
dec
popf
call
cld
movsl
pop
int3
inc
outsl
cmp
push
xor
pushf
kmovb
lahf
pop
and
arpl
mov
fbld
stos
in
push
stc
mov
lcall
bound
lods
sub
adc
mov
xchg
pop
mov
push
stc
jl
pushf
dec
fs
xchg
inc
push
sbb
lock
loop
jp
inc
xchg
push
sti
add
sbb
pop
int3
inc
js
std
daa
adc
ja
rolb
popa
mov
scas
add
mov
lods
cmc
xchg
xchg
je
sbb
hlt
popa
aaa
jb
shl
push
adc
pop
pop
xchg
xchg
in
js
mov
ljmp
stos
push
add
cmp
out
out
insb
mov
dec
outsl
inc
pop
rcr
xor
cld
push
sbb
fadd
sub
sub
or
sti
out
and
inc
lahf
dec
and
fcmovnbe
adcb
pushf
ds
or
dec
lahf
xor
mov
jns
cmpsl
sbb
xorb
or
dec
std
mov
imul
push
dec
fidivs
inc
popf
cmp
or
dec
shlb
fisttps
mov
xchg
aas
leave
cmpsb
repnz
popa
mov
pop
and
inc
lahf
jo
cltd
and
dec
xor
dec
repz
aam
jne
hlt
inc
cmpsb
and
push
incb
hlt
pop
mov
pushf
cwtl
dec
mov
sub
xlat
add
or
xor
mov
aaa
pop
lods
adc
jmp
out
ror
mov
pop
addb
fcoms
sbb
adc
and
imul
aam
les
icebp
iret
mov
mov
jecxz
xchg
push
adc
loopne
mov
and
push
lret
sub
xchg
test
pop
jne
mov
fsubs
xor
and
add
scas
or
sbb
pusha
mov
nop
cli
jns
repz
inc
gs
insl
jbe
and
xchg
mov
pop
in
pop
fbld
inc
stos
jmp
negl
add
ljmp
xchg
outsb
or
xor
xchg
mov
mov
push
test
cmpsl
mov
int3
push
adc
pop
inc
shll
shlb
mov
or
loop
lret
pushf
push
xchg
sub
popf
push
cmpsb
cmp
cmpsb
jl
or
pop
xchg
popf
divb
add
cmpsl
add
jecxz
xchg
pop
pushf
jmp
cmc
loope
addr16
xor
pop
xor
pop
mov
adc
xchg
cmp
repnz
dec
fdivl
jno
ret
jno
dec
out
inc
jns
bound
and
pop
pop
and
jmp
sub
adc
cli
inc
in
stc
xorl
sbb
aaa
mov
mov
or
sbb
in
ret
sbb
push
les
iret
jb
jnp
push
lret
mov
xchg
or
mov
push
sahf
cmp
test
repz
adc
add
rcl
mov
into
jbe
or
fs
xor
mov
pop
and
xor
ret
fsts
lret
arpl
xorb
out
js
cmp
cmp
dec
leave
mov
mov
repz
test
out
or
xchg
decb
jl
pop
scas
pop
adc
mov
lods
cmp
push
or
sbb
repz
je
sub
fs
push
lods
inc
or
mov
jbe
inc
mov
movsl
jg
sub
jge
dec
rorl
out
sarb
sbb
clc
mov
xchg
add
lcall
and
int3
mov
xchg
popa
lahf
pop
pop
dec
mov
imul
jmp
add
push
rclb
dec
daa
fldt
add
movsb
add
push
lods
mov
jns
ds
cmp
pop
and
test
sub
adc
es
cmpsl
push
inc
xchg
scas
fstl
js
xchg
adc
sub
dec
fcmovnu
loope
adc
and
lret
lods
or
pop
decb
jo
xchg
out
push
aaa
popf
mov
xor
movsl
subl
ret
mov
jp
mov
rclb
inc
ljmp
sub
das
sbb
arpl
add
mov
jle
xchg
in
hlt
jle
mov
es
loopne
xchg
bound
and
ret
and
nop
xor
fbld
add
mov
adc
dec
pop
inc
push
push
sub
mov
mov
mov
ret
pusha
sti
pop
ss
dec
into
and
fldl
loop
inc
mov
pop
mov
ja
push
add
xchg
xchg
add
adc
int3
lcall
push
shll
aad
push
sbb
dec
movsb
jecxz
inc
lods
daa
rol
mov
jge
mov
lahf
push
mov
filds
leave
jbe
ljmp
sahf
insb
mov
lods
pusha
push
inc
dec
inc
push
dec
mov
add
fldenv
push
inc
xchg
frstor
push
pop
pop
insb
mov
popa
and
push
bound
cmp
xor
imul
pop
jb
sbb
movb
push
iret
inc
dec
push
push
outsl
or
mov
cmpsb
add
hlt
shll
sub
sti
pop
cmp
aam
xlat
sti
adc
xchg
outsl
mov
ja
std
or
push
jmp
mov
push
fs
flds
leave
jmp
imul
and
scas
lahf
ret
arpl
cs
ljmp
sarl
pop
cs
cmp
inc
sbb
icebp
jne
rcrb
dec
leave
cld
cmp
jle
in
cmp
mov
icebp
pop
filds
xchg
mov
sbb
push
sub
and
push
repz
stos
imul
js
mov
lahf
aad
xchg
fdiv
dec
imul
xchg
sub
outsl
jge
lret
mov
jae
xor
test
je
fcmove
or
frstor
push
xchg
sbb
sub
mov
gs
outsb
std
mov
pop
push
iret
cmp
ret
cmp
push
jecxz
mov
popf
cmp
addr16
jbe
sbb
lods
sbb
lods
hlt
push
imul
es
cli
sahf
fcmove
mulb
clc
movsb
int
insb
bound
addl
rolb
fxch
inc
jne
fsts
jmp
inc
test
xor
cmp
std
jecxz
xchg
in
out
lds
addr16
cmp
mov
add
dec
sub
mov
fmull
das
xchg
sub
arpl
loop
test
cmp
ja
dec
and
lds
imul
dec
stc
or
mov
std
out
push
data16
cmpsl
iret
fwait
adc
push
pop
xchg
rol
add
adc
inc
pop
lret
xchg
int3
lds
xchg
cs
das
inc
ljmp
jecxz
and
xchg
pop
sbb
xlat
sub
sub
cmp
mov
fildll
rclb
fstps
repnz
insl
push
repz
or
int3
ss
xchg
sub
mov
cmc
jle
lret
lahf
pop
repz
and
push
stos
dec
jnp
inc
adc
scas
xchg
and
mov
sub
lock
out
jo
xchg
mov
mov
addr16
jmp
mov
pop
int
xchg
addb
stc
je
cmp
ljmp
push
stc
pop
stos
mov
loop
bound
push
add
pop
adc
rorl
mov
fxch
jge
push
mov
gs
pop
adc
mov
xchg
rol
pop
sti
cmpsb
xor
xor
adc
shll
cld
cmp
shr
mov
movsb
dec
shl
std
add
test
push
jne
pop
jmp
inc
inc
sub
jns
sarb
or
mov
mulb
push
das
test
sbb
mov
stc
cmp
repz
jns
xchg
icebp
push
dec
sub
rcr
cmp
xor
shrb
sti
adc
les
daa
and
call
loopne
movsb
insl
inc
cli
sbb
ss
mov
test
adc
repnz
out
enter
push
lahf
sbb
cmp
mov
data16
inc
or
pop
jge
shlb
dec
xor
xchg
ret
outsl
orl
xor
lock
dec
addb
lahf
loope
or
jae
adc
and
add
stos
mov
jl
ret
mov
les
decl
je
int
mov
ja
add
xchg
cwtl
xor
fcomps
pusha
xlat
push
fwait
mov
push
loopne
xchg
rolb
jne
mov
cmp
dec
cmpsl
int3
mov
imul
cmp
scas
daa
xchg
out
push
add
mov
xor
test
cmp
or
adc
ss
push
inc
insb
mull
shlb
scas
mov
sub
clc
pop
shrb
mov
std
push
test
pusha
insl
mov
pop
xor
dec
sbb
roll
std
daa
imul
test
stos
iret
out
xor
shlb
pop
xor
cld
xchg
out
xorb
shl
daa
cmp
loope
dec
aad
mov
add
sbbb
stos
fucomip
loop
mov
inc
icebp
sahf
scas
icebp
repz
xlat
dec
aam
aas
aam
jmp
fisubrs
and
add
mov
ds
cltd
lret
testb
cwtl
out
jne
jg
sbb
cwtl
gs
and
in
cmp
pop
dec
arpl
ljmp
or
dec
fbld
cmp
js
adc
add
mov
addr16
aam
push
or
xchg
roll
pusha
jns
aam
pop
flds
arpl
in
jne
inc
mov
sub
call
dec
xor
cmp
pushf
push
ret
outsl
push
nop
daa
push
dec
cmp
push
mov
cmpb
mov
mov
jle
xchg
test
bound
xchg
out
push
mov
out
lods
sbb
lret
mov
jbe
addr16
pop
fsubrs
jae
daa
ret
lret
das
inc
pushf
xchg
lret
cmpsb
xchg
sbb
or
sub
adc
add
stc
mov
dec
add
rcrl
loop
xchg
outsl
popa
mov
add
loopne
and
jo
cmp
mov
mov
orb
xchg
mov
out
mov
pop
pop
inc
jb
or
lock
add
fstpt
pop
in
xchg
jmp
stos
std
mov
lret
dec
out
stos
or
je
cmp
mov
orl
insb
xchg
test
jecxz
fidivl
pusha
jg
and
outsl
out
pop
or
mov
lock
gs
mov
shrl
std
ret
testb
xor
or
xlat
sarl
add
ret
and
popf
mov
add
mov
rolb
mov
pop
and
sbb
aaa
es
mov
push
stc
out
xchg
or
push
push
in
clc
sahf
ficoml
mov
cli
addb
mov
inc
test
decb
inc
outsb
test
inc
adc
push
push
xchg
cmp
cs
aaa
loope
adc
std
dec
stos
sarl
sbb
popl
in
add
test
jge
mov
fisubs
sbb
sbb
pop
into
adc
insl
mov
js
pop
inc
test
imul
mov
xchg
dec
out
lea
mov
loop
inc
mov
mov
lods
outsb
sub
mov
mov
iret
out
mov
sbb
addr16
add
sahf
sub
mov
cmc
outsl
mov
and
shlb
push
test
testl
in
int
cld
enter
ljmp
mov
scas
and
xor
jnp
fisubs
jp
pop
jae
dec
insb
push
sarb
popa
push
adcb
jp
xchg
xor
addb
mov
out
dec
out
loop
dec
outsl
cmp
idivb
xchg
mov
insl
dec
jbe
out
pop
aam
cmp
dec
punpckhdq
lcall
cmc
sbb
pop
xchg
es
jmp
push
jmp
addl
test
sub
mov
lds
xchg
sub
sahf
add
sbb
inc
es
rsqrtps
pusha
adc
les
stos
xchg
xor
cmc
or
lret
push
push
sti
shl
fcomps
lods
shll
iret
push
mov
cmp
dec
js
int
lock
ficomps
pop
ds
enter
push
and
mov
push
lods
in
and
jo
jmp
imul
insb
out
jae
ret
adc
in
insb
xchg
sub
fisubs
mov
add
mov
jl
nop
repz
call
call
cmp
push
cmp
mov
and
movsb
dec
cmpsl
rorl
or
or
out
imulb
inc
int3
les
je
data16
sti
int
add
imul
pop
repz
outsl
sbb
cmc
pop
bound
mov
inc
fstps
inc
mov
sub
xchg
push
lods
popf
push
jb
push
inc
mov
mov
movsb
into
ret
sarl
push
push
push
push
js
cmpsl
xorl
nop
out
inc
adc
jns
or
aam
mov
popf
leave
pop
add
sub
inc
aam
mov
dec
aad
pop
add
outsl
mov
aas
in
jno
aaa
push
pop
xor
popf
es
and
int
test
jmp
mov
cmp
add
cmp
in
xor
jp
js
fs
sbb
push
mov
add
jno
das
push
mov
mov
push
pop
and
inc
dec
sub
and
fistps
test
aad
cmp
mov
into
test
cmp
add
out
daa
pop
mov
lds
mov
xlat
lahf
sbb
mov
cmpsl
cwtl
ret
sub
add
out
rcr
or
xor
add
insb
andl
cs
jp
std
cld
lahf
mov
cmpsl
or
cli
push
stc
add
jecxz
test
adc
lock
test
fwait
data16
cmp
mov
mov
sub
in
fidivl
enter
ret
or
aas
jnp
or
jmp
adc
fstpl
inc
sbb
or
pop
xor
popa
fstps
inc
popa
in
out
mov
int
lock
es
fsubrl
jo
mov
mov
push
ret
push
xchg
faddl
push
clc
push
mov
loop
xchg
gs
xlat
cmp
ret
push
fcmovnu
xchg
jl
aad
repz
mov
arpl
cmp
cld
push
repz
lea
mov
and
stos
mov
pushf
adc
test
notb
jp
js
int
or
cmp
mov
ror
addl
push
xchg
sub
xchg
fwait
int
das
or
or
rol
or
clc
mov
pop
mov
adc
out
enter
mov
or
call
sub
push
cmpsl
sub
out
mov
dec
sub
scas
lods
rorb
in
xor
ljmp
ds
addr16
sarl
sbb
xchg
add
sbbb
sub
mov
repnz
cld
jo
push
mov
jp
gs
inc
mov
xor
dec
aas
inc
and
inc
cwtl
je
data16
jmp
dec
add
pop
push
add
or
orl
jnp
xchg
sar
sub
adc
and
roll
push
and
js
lret
fisttpl
mov
sub
enter
mov
jg
outsl
or
xchg
popa
add
ds
xchg
ja
lock
in
push
mov
jmp
mov
dec
ss
aam
pop
xlat
test
lods
pop
sbb
mov
mov
xor
rcrb
decl
stos
mov
jecxz
and
mov
push
mov
dec
aaa
cs
jecxz
lahf
jl
in
ret
mov
mov
in
jecxz
loope
xor
xchg
iret
push
mov
mov
insb
sub
mov
dec
test
and
inc
cli
add
jecxz
ficoml
lea
and
jb
bound
les
inc
and
shlb
stc
xchg
sbb
xor
sbb
inc
pop
push
lea
dec
push
add
push
push
shr
adc
sti
loopw
xor
xor
jnp
mov
inc
pop
cmp
mov
push
int
lahf
or
lock
pusha
mov
outsb
mov
pop
add
cmpsl
mov
mov
iret
pop
call
mov
jnp
mov
pushl
loop
cmpsl
jmp
mov
fisttps
sbb
pushf
jo
mov
sub
dec
mov
in
imulb
ss
dec
stos
push
jecxz
pop
push
cmpsl
scas
inc
rcl
xchg
adc
sub
loopne
ret
jns
fstl
push
jl
xor
adc
push
mov
outsb
lods
fdivrs
lods
fiadds
mov
push
cmp
aad
cmc
pop
in
roll
hlt
loope
pop
in
and
pop
ret
out
fwait
sti
pusha
imull
lds
aas
cmpsb
lods
movb
xchg
sbb
sbb
loop
enter
mov
mov
or
mov
inc
dec
sbb
int3
es
mov
in
fsubrl
lcall
inc
pushf
inc
mov
mov
icebp
leave
shrl
pop
push
loopne
push
pusha
ss
mov
mov
fstpt
lret
cmp
sub
test
mov
pop
xchg
and
ljmp
in
aaa
push
std
mov
pop
inc
stc
sbb
mov
push
jne
inc
sti
adc
xchg
inc
out
dec
ss
lret
adc
icebp
mov
adc
and
andb
dec
mov
dec
sbb
add
mov
jo
xlat
insb
inc
cwtl
xchg
fisttps
stc
fadd
pop
sub
loopne
xor
jo
inc
bound
mov
adcb
jmp
lods
je
sub
cli
iret
and
insl
outsb
xor
shrl
fsubl
xor
daa
cmpsl
pop
xchg
push
pusha
cmp
add
fwait
test
push
push
sbb
push
pop
cmpb
sti
inc
into
stos
movsb
push
test
sub
rorb
xchg
push
insb
and
pop
mov
addr16
outsb
xchg
mov
dec
leave
inc
adc
xchg
xchg
push
repz
jp
dec
dec
push
test
lock
push
hlt
dec
jo
jmp
inc
mov
dec
scas
lea
insl
mov
lahf
and
xor
push
scas
outsb
mov
lods
add
ficoml
test
into
clc
jmp
add
lcall
popl
addr16
xchg
cmp
and
add
jnp
push
in
or
or
popl
or
inc
cltd
push
pop
push
popf
sbb
xchg
shrb
rolb
pop
movd
pop
rcll
xor
aaa
dec
hlt
pop
ljmp
push
add
sbb
shlb
inc
shll
adc
inc
adc
aam
les
jle
bndstx
popa
jno
enter
repz
jo
lods
imul
cmp
and
mov
add
popa
push
sbb
cmp
inc
incb
aad
push
in
hlt
adc
test
xchg
aad
aas
aas
pop
sub
cmp
test
out
mov
jae
test
inc
ljmp
in
push
in
movb
sub
push
aam
jbe
and
les
scas
movsl
or
jae
mov
and
push
movsb
xchg
or
out
movl
inc
mov
add
add
ljmp
cmpb
rolb
xchg
dec
test
dec
fisttpl
sbb
fmull
insl
outsb
mov
jge
ss
data16
aad
or
repnz
movb
test
jnp
or
mov
pop
loop
xchg
sbb
xchg
mov
xchg
std
push
add
cmp
outsb
aaa
push
sub
sub
pop
aad
adc
lods
push
mov
stos
in
xlat
mov
mov
xchg
fists
movsl
pop
jmp
mov
pop
stos
shr
push
bound
cmp
popf
ret
mov
xchg
jl
sub
pop
mov
rcrl
mov
adc
pop
mov
int3
in
inc
sub
sbb
pop
shrb
lret
je
and
fists
jg
sub
cmpsl
in
imul
push
mov
inc
int3
mov
sbb
je
sub
popf
scas
sbb
or
stos
fisubl
mov
pop
imul
mov
add
out
insb
push
ja
fnstenv
cmp
ja
pop
loopne
jnp
in
pusha
jecxz
call
pop
or
sbb
dec
or
inc
mov
dec
or
imul
add
clc
jge
push
mov
add
outsl
or
jnp
mov
mov
aaa
cli
stos
scas
pop
sbb
lcall
aam
sbb
push
jp
and
shr
stos
dec
sub
fisubl
rcrb
inc
sbb
fistl
jl
aam
fdivrs
xor
inc
push
out
and
arpl
push
mov
adc
icebp
pop
push
push
mov
movsb
mov
sahf
mov
mov
jnp
lahf
cmp
das
clc
dec
dec
mov
lea
rorl
fistpl
pop
shl
es
leave
mov
sbb
rcrb
cmp
int3
sbb
add
xchg
out
xchg
ret
imul
and
ss
jae
iret
stos
and
aaa
stc
adc
mov
mov
and
test
fisttps
and
dec
dec
pop
loope
push
xchg
sub
inc
add
je
or
pop
mov
or
adc
jl
cmc
push
movsb
in
add
adc
sbb
inc
push
std
leave
push
jns
xor
mov
ret
daa
mov
popa
jae
fisubrs
push
push
xchg
or
adc
jae
sub
ds
addl
push
adc
and
xchg
js
idiv
testb
into
shll
push
shlb
xchg
out
adc
lret
adcl
outsl
fists
inc
repnz
adc
gs
stc
int
std
mov
inc
or
aam
cmp
pusha
lcall
out
fisttpl
mov
inc
add
movsl
cmp
into
fimull
pop
hlt
imul
insb
pop
andl
addb
or
dec
push
push
nop
jecxz
mov
int3
jecxz
sbb
mov
mov
or
ret
test
and
xchg
je
mov
sub
shl
jbe
mov
outsb
or
cmpsl
and
mov
les
push
push
mov
adc
fisubrl
jecxz
push
cmp
enter
add
pop
jns
xorb
cltd
jp
xor
dec
or
mov
adc
data16
pop
leave
test
ds
sbb
mov
mov
aas
lcall
xchg
or
into
xchg
std
aaa
lret
mov
xor
inc
mov
add
push
add
lods
outsl
jl
pslld
sarb
mov
add
push
or
sub
scas
pop
out
mov
into
mov
jmp
ret
cltd
outsb
inc
shlb
sub
stos
sbb
add
fmul
sbb
or
adc
cltd
sub
mov
mov
push
out
and
dec
jno
test
xor
das
ror
mov
sbb
fnsave
pusha
sub
or
cli
sbb
push
sub
cmpl
out
and
data16
insl
fldl
aam
je
test
ja
enter
cs
inc
popf
and
ficoml
insl
inc
imul
cmpsb
hlt
lock
sarl
cmp
jb
jmp
push
mov
and
cmpsb
jno
mov
pop
ds
sbb
sub
call
push
mov
je
xchg
rcr
xor
cmp
add
adc
divb
push
pop
pop
xchg
repnz
pop
pop
shll
lret
jb
and
cmp
jo
rcrl
push
push
jecxz
xchg
es
sbb
pop
jge
cmp
pushf
sub
xor
leave
lret
stos
popf
mov
dec
mov
fisubl
jmp
imul
and
pop
push
cmp
lcall
andb
repnz
jne
pushl
fucom
aam
push
add
shl
movsl
and
aas
out
or
adc
and
filds
fiadds
push
and
xchg
or
xchg
popa
gs
lock
mov
fsubl
push
outsb
push
stos
das
mov
or
adc
bound
mov
fwait
insl
mov
push
loop
stos
pop
adc
or
inc
lods
add
test
gs
insb
into
jge
inc
fnstenv
dec
xchg
inc
dec
adc
pushf
dec
enter
je
mov
add
dec
adc
inc
jb
out
popa
mov
idivb
mov
cwtl
sbb
fsubrl
loop
mov
subl
cld
aam
mov
sbb
lret
rcrb
sub
sbb
sub
and
rcrb
scas
shl
sub
pop
popf
std
fstpt
cmp
cmc
inc
and
je
stos
test
into
xchg
xchg
mov
daa
inc
push
aaa
xchg
pusha
xor
push
xor
xchg
clc
inc
shl
test
push
jmp
jnp
adc
imul
jb
jbe
jge
inc
fnstenv
out
fcmovbe
enter
push
das
dec
out
in
adc
sub
shl
subb
cwtl
popf
loopne
hlt
push
mov
inc
mov
lahf
loope
sub
negl
arpl
and
lret
mov
rcll
imul
test
jbe
dec
test
or
subb
sbb
add
jl
mov
and
sbb
dec
fwait
test
loop
inc
loop
push
in
push
lcall
in
pop
xchg
push
dec
leave
aaa
mov
test
mov
cltd
mov
test
stc
push
in
cmpsb
xchg
sti
fwait
call
xor
cs
ds
aas
jmp
testb
dec
movb
vphsubbw
add
stc
dec
mov
clc
aas
mov
lret
rcrl
jns
push
data16
dec
mov
push
fsubl
lret
into
inc
sahf
inc
and
into
mov
mov
push
mov
loope
rcrb
jnp
push
mov
lret
mov
jnp
xor
add
sbbl
xor
cld
dec
cmc
lock
sarl
push
push
xchg
jbe
jae
outsl
pop
xor
nop
outsl
out
jecxz
sub
popf
insb
fisubrs
pop
xchg
test
lcall
stc
cli
pop
push
dec
int3
add
sbb
aam
out
inc
cmpsb
in
xchg
dec
lcall
clc
jg
adc
cld
fwait
mov
push
or
data16
or
add
sbb
inc
xchg
addr16
fnstenv
mov
cld
mov
cmpsl
jmp
pop
xchg
test
and
fistl
jmp
push
add
inc
mov
pop
loop
add
mov
push
xor
lret
aas
xchg
imul
int
or
loopne
and
pop
fbstp
cmp
fisttpll
cwtl
test
es
mov
jns
or
mov
jae
pop
imul
in
ds
push
push
imul
inc
dec
lods
call
fsub
push
add
sub
xchg
std
sbb
sub
in
or
xlat
pop
mov
movsl
fildl
nop
mov
xchg
loopne
cmc
jb
xchg
xchg
rcr
rcll
movsb
fisubs
mov
outsl
adc
sub
out
push
inc
push
sbb
jge
pop
test
mov
movb
or
xor
sbb
stos
pop
cmpsb
insl
xchg
std
add
cmc
add
cmp
cmpsb
aam
in
adc
pop
dec
stc
sti
rcr
mov
sub
jmp
xchg
sub
add
subl
fcoms
pop
sti
inc
add
xlat
incb
ds
xchg
jmp
xor
outsb
outsb
pop
xor
mov
in
sahf
push
loope
pop
jmp
inc
cwtl
jecxz
enter
fnstcw
cld
dec
fldenv
or
movsb
fmul
mov
and
sub
lock
adc
cli
aaa
test
push
popa
mov
jl
test
fldcw
push
enter
xchg
jecxz
pop
fidivs
inc
repz
cmp
mov
ret
mov
inc
or
inc
or
push
fldenv
dec
fisttps
fadds
aaa
cmove
push
ja
loop
xlat
jg
cmp
adc
jae
fimull
negb
dec
inc
cmpsb
cmpsl
pop
movsb
jno
push
cwtl
dec
cmc
sub
bound
js
sbb
jecxz
dec
xor
add
ljmp
jle
push
cs
sub
dec
mov
mov
daa
stos
jle
push
into
xor
add
pushf
push
decl
lret
jge
and
mov
popa
adc
mov
push
jb
xor
mov
fisubrl
aas
or
aas
dec
aas
sahf
mov
mov
sbb
ss
push
jae
sub
incl
xchg
faddl
ljmp
stos
inc
mov
lods
int
mov
sbb
push
pop
cwtl
push
or
mov
inc
hlt
arpl
out
out
fimull
pop
iret
push
scas
mov
stc
repnz
and
mov
incb
iret
push
loop
jnp
sbb
mov
in
mov
in
in
fbld
or
xor
push
and
and
icebp
stc
fucomip
add
add
mov
mov
add
sbb
sub
xor
xchg
or
xchg
stc
ficomps
mov
aad
mov
stc
std
mov
cmp
cmpsb
push
adc
std
pusha
movsl
xor
in
subl
lods
adc
mov
push
inc
xchg
cmp
sub
mov
push
mov
jmp
xchg
push
inc
xchg
and
dec
xchg
xchg
lds
sub
arpl
movsl
sub
sub
add
sbb
mov
pop
test
fstps
test
mov
pop
cmp
pop
sub
std
mov
pop
bound
sbb
test
sub
mov
pushaw
fstps
jb
adc
and
xchg
xor
mov
ja
inc
jl
adc
cmp
mov
cld
adc
pushf
mov
sub
pop
in
insb
xor
xor
and
adc
mov
repz
pop
cwtl
push
fwait
mov
aas
xor
push
push
adcl
cmp
jge
gs
push
sub
cmp
or
xor
sbb
cmp
enter
popf
sbb
insb
imul
dec
mulb
sub
pop
xchg
sbb
jmp
loopne
cmp
rcrl
dec
jne
push
nopl
mov
and
ja
lock
scas
adc
inc
and
mov
scas
idiv
sub
or
sbbb
pop
gs
movsb
lret
pop
and
int3
cmp
cmp
addr16
and
ret
sub
aas
int
stos
dec
fs
dec
cmpsl
fldl
loope
shrb
lcall
out
bound
je
loopne
or
into
repnz
mov
mov
pop
addr16
daa
sbb
xchg
into
dec
xchg
scas
xchg
push
mov
testb
cmp
push
insb
jne
ljmp
mov
xor
sub
xchg
sbb
cmp
push
out
add
or
mov
cli
dec
arpl
or
jmp
lret
xor
loopne
dec
imul
or
sbb
fldt
mov
or
and
in
cs
negb
loope
inc
cld
mov
sub
pop
aam
jae
push
out
notl
arpl
cmp
pop
and
negl
and
jmp
aad
arpl
or
loope
test
sahf
lea
cwtl
std
inc
push
popw
add
aam
inc
sub
adc
dec
lret
or
ret
xchg
into
loopne
or
jb
xor
iret
std
push
cmp
adc
xchg
pop
loope
mov
out
dec
popa
rcrl
mov
ss
jge
push
cmp
pusha
sbb
fisubrs
mov
pop
and
push
xchg
nop
movsb
jmp
add
dec
jmp
ret
push
jns
xchg
push
movsl
out
and
jae
repz
sar
test
mov
mov
sub
js
sbb
add
popf
sbb
cmp
mov
adc
dec
test
mov
mov
adc
push
xchg
rcpps
xorl
and
add
mov
dec
cmp
pop
add
std
test
sub
scas
xor
ror
inc
popf
lods
jns
xor
pusha
mov
test
es
popa
call
xchg
mov
adc
sbb
mov
xchg
mov
insb
ret
jae
cmpsl
push
sbb
out
fwait
sbb
add
sar
add
mov
bound
out
aad
pop
repnz
cmc
jge
je
add
xor
push
pushf
jne
cmpsl
jno,pt
lea
mov
push
lahf
sub
and
push
inc
outsb
cmc
pop
out
sti
ficoml
sbb
sbb
sub
lret
iret
lret
jbe
cs
hlt
inc
or
popf
dec
add
pop
fsub
out
sahf
ret
mov
out
popa
daa
pop
push
mov
in
ror
in
jae
insl
rorb
xchg
es
and
sahf
in
rorl
imul
in
repz
push
stos
mov
lret
lea
insb
mov
pop
or
adc
cltd
int3
add
imul
mov
xchg
add
rol
mov
faddl
mov
xchg
push
add
int
push
xor
int
xor
mov
or
inc
xor
ret
pop
sub
fisttpl
fildl
mov
jecxz
mov
ffree
mov
mov
dec
xchg
in
mov
or
int3
sete
sub
sbb
outsl
adc
push
shl
jae
push
roll
mov
push
movsl
insb
outsb
fistpll
pop
insl
imull
mov
rcrl
mov
nop
fbstp
xlat
leave
les
cwtl
push
mov
mov
call
lock
lahf
scas
aaa
roll
mov
sbb
jb
insl
sbb
mov
out
jae
sbb
sahf
cmp
movsl
mov
pop
fcomp
cvtpd2pi
call
xchg
jecxz
jne
push
repz
mov
mov
sti
scas
inc
xchg
and
jbe
es
xchg
test
and
sbb
cmp
jl
es
adc
lret
sbb
xchg
inc
push
push
mov
fcomps
sti
push
jge
ds
ss
push
add
mov
into
adc
push
enter
xchg
and
lock
ret
ret
jmp
sub
add
mov
cmp
out
xchg
and
mov
icebp
mov
mov
pop
hlt
xor
add
cwtl
shr
imul
add
push
gs
add
push
pop
leave
jno
mov
xor
pminub
mov
inc
jno
stos
mov
icebp
int3
xchg
out
enter
cmp
fucomip
addr16
scas
faddp
pop
xchg
sti
cmp
pop
xor
ja
jno
jno
cmp
shlb
pop
or
mov
pop
sahf
mov
add
jge
jbe
fldcw
pop
or
ljmp
scas
add
arpl
dec
pop
out
cmp
lea
popa
inc
sbb
pop
xchg
cltd
lret
ds
stos
mov
jns
xor
sub
jb
cli
dec
mov
lret
pushf
jno
fildl
push
fnstenv
push
cmp
hlt
ficoml
mov
fnstenv
cltd
repnz
notb
mov
insb
movsl
mov
dec
gs
mov
cmp
in
in
add
adc
aam
addr16
outsl
pushf
sub
xor
lea
sbb
jns
mov
test
jp
adc
sti
mov
adc
and
pushf
lods
int3
mov
inc
test
es
or
outsb
mov
imul
sbb
sbb
jb
inc
push
xchg
push
jle
cld
cmp
add
sti
enter
pushf
shlb
jne
test
push
std
lret
in
mov
add
adc
in
cmp
sbbb
insl
push
jp
loope
or
fiaddl
or
jle
mov
adc
and
cltd
push
jmp
fisubrs
hlt
add
outsl
push
xor
fisttpl
jecxz
xchg
push
sahf
movsl
lret
iret
syscall
movsb
fcmovnbe
push
or
mov
push
xchg
fcoml
add
cmpsb
mov
dec
iret
insb
cmp
pop
xor
jg
dec
arpl
mov
xor
adc
mov
fwait
outsb
sbb
mov
stos
ljmp
nop
arpl
ret
jg
mov
or
lret
xor
arpl
mov
aad
mov
in
mov
dec
out
mov
aas
lds
rcrl
cmpsb
enter
push
sbb
lods
jb
mov
xchg
test
add
mov
lds
idivb
loope
imul
push
ret
mov
outsb
adc
mov
jbe
fisttps
dec
jno
push
or
mov
std
inc
mov
cmpsb
sbb
cmp
jmp
arpl
or
repz
xchg
lock
je
sub
dec
mov
cmc
lret
add
mov
push
xchg
shlb
aas
inc
pusha
fcmovb
sub
push
lret
int3
xchg
jp
sahf
int3
pop
cmpsb
fs
pushf
push
xor
inc
rorb
psllw
and
scas
mov
insl
inc
hlt
shlb
int3
xchg
xor
mov
pop
adc
lcall
dec
and
test
repnz
jno
hlt
ror
sti
and
data16
mov
mov
add
jl
cmpsl
and
aam
addb
xchg
mov
dec
ljmp
dec
sbb
cmp
jp
fsubrp
clc
xchg
pop
cltd
adc
loopne
out
pop
stos
push
inc
mov
mov
add
adc
push
lock
mov
es
mov
icebp
cmpsl
in
repz
xchg
aas
xor
cmpsb
andb
leave
cmc
dec
xlat
cmp
in
xor
fsts
sub
or
jb
in
rolb
and
std
push
mov
mov
inc
adc
or
test
pop
out
fcompl
mov
lds
idivb
loop
and
ret
push
cmpb
sti
cmp
lods
push
stc
xadd
pop
xor
push
int
xchg
mov
rcll
inc
in
cmp
mov
mov
xor
and
mov
cwtl
in
addr16
int3
ds
lret
lcall
ja
dec
and
in
popf
cmp
jns
xchg
pop
or
jb
push
or
movsl
adc
push
pop
in
repnz
test
push
aam
add
dec
stos
and
pop
fcomps
je
xchg
test
cmp
testl
push
xchg
inc
push
loope
lahf
inc
test
fnstsw
cmovp
adc
mov
aad
sub
fcoml
push
insb
in
mov
sbb
leave
add
fsubs
mov
in
mov
xchg
pop
xor
jp
inc
add
iret
and
sahf
loopne
add
pop
xchg
pop
int
adc
stos
jge
jmp
ret
rcll
xor
movd
mov
fsubrs
pop
and
xor
sub
hlt
jbe
or
cmp
inc
leave
incl
gs
mov
es
adc
push
add
cmp
fnsave
aam
xchg
dec
stc
shlb
imul
ror
lret
xchg
movsl
pop
sub
mov
cmp
ds
inc
jl
mov
pusha
pop
xlat
xchg
in
and
cltd
cld
jecxz
xor
jb
dec
out
xor
leave
bound
adc
xchg
out
or
xchg
ret
shr
scas
lods
cmp
mov
xor
outsl
sub
jne
jl
cmp
or
dec
add
and
jbe
add
mov
leave
lret
add
cwtl
sub
xchg
sub
sbb
sub
mov
cmp
iret
jnp
mov
mov
iret
xchg
mov
xor
daa
inc
cmpsb
push
adc
pushf
lahf
mov
push
push
test
mov
add
dec
xchg
les
stos
lret
adcb
inc
cmc
loope
push
xor
pop
or
aad
jae
shrl
ljmp
adc
add
movsb
xor
andb
pop
rorb
stc
int3
outsl
push
or
jno
sub
mov
iret
sub
push
sbb
movsl
pop
mov
fcomip
lea
lret
xchg
mov
jecxz
add
pop
lods
subb
cmc
xchg
dec
mov
jp
fsubrp
or
adc
mov
pop
cli
mov
mov
add
push
icebp
or
cli
sub
xchg
cli
pop
dec
mov
repz
cs
push
daa
lods
jp
cltd
add
xor
leave
add
pushf
xacquire
es
pusha
adc
cltd
adc
popa
add
mov
pop
in
test
xchg
or
mov
pop
dec
outsb
jns
aaa
test
adc
push
loope
mov
out
out
out
andl
mov
inc
xor
dec
fcmovne
mov
cmp
xlat
xchg
addr16
ret
xor
shlb
ficompl
jbe
push
fs
jmp
pop
in
lock
int
clc
mov
fbld
pop
xchg
and
push
test
add
lods
cmpsl
xchg
cmp
pop
inc
scas
mov
pop
add
fwait
testb
adc
or
pop
ret
xchg
imul
xchg
sub
pop
imul
pop
into
pop
sub
out
push
push
mov
pop
enter
pop
pop
popa
sub
ss
or
xor
fists
rorb
mov
cmp
adc
orl
in
ret
fdivrs
les
pop
fistpl
inc
cmp
mov
loope
inc
add
je
loopne
and
pop
mov
hlt
xchg
add
mov
xchg
mov
inc
push
shlb
push
push
jmp
std
cltd
push
adc
adc
insl
sub
dec
loopne
xor
lea
xchg
ret
ret
hlt
mov
aad
jo
int3
out
adc
stos
dec
pushf
lret
cwtl
into
mov
push
pop
dec
test
or
jp
jg
push
jle
insl
cmp
shrl
rorb
pop
mov
pop
push
inc
imul
push
ss
or
jge
movsb
imul
add
mov
arpl
hlt
mov
fcmovnbe
sarb
aas
movsl
fwait
leave
hlt
sub
mov
jg
cmp
cmp
addr16
sbb
mov
addr16
add
mov
adc
adc
xchg
sub
push
mov
pop
xor
mov
sbb
add
add
std
mov
nop
push
imul
scas
mov
cmc
ret
test
jae
imul
in
and
adc
push
adc
push
mov
xchg
mov
adc
pop
pop
clc
lods
push
lock
pop
jno
push
ret
dec
in
xor
pop
cmp
xor
dec
dec
adc
js
test
pop
loopne
mov
movsb
jmp
in
in
jbe
sub
cmpsb
jne
fisubl
xor
mov
pop
or
bound
jb
or
jae
adc
cmp
pop
sbb
loop
push
fwait
cwtl
lds
hlt
fs
xchg
xchg
adc
ljmp
xor
lods
add
popa
insl
or
nop
adc
xchg
adc
lock
fs
sub
dec
les
int
test
inc
inc
mov
shrb
mov
sub
stos
sub
popa
push
lods
add
movnti
push
fs
inc
sbb
lock
mov
cltd
add
shll
jle
mov
and
cli
xor
mov
xchg
cltd
mov
push
or
mov
outsl
in
jle
dec
je
lds
cmpsb
loopne
dec
cli
or
lock
leave
ficompl
adc
loopne
lahf
mov
add
out
popa
sub
divl
and
cwtl
into
sub
aam
decb
jbe
push
pushf
js
cmp
pop
pop
cltd
pop
pop
jge
mov
repnz
push
jecxz
daa
xor
out
adc
jge
sbb
leave
mov
loope
mov
test
cmpsl
add
or
jl
dec
xor
xor
cmp
je
mov
es
xchg
xor
movsb
push
sbb
jb
out
ret
pop
lock
stos
insl
mov
out
add
dec
add
les
and
les
cmp
mov
loop
adc
testl
cmp
mov
xor
xor
rcll
inc
push
out
lods
dec
adc
adcl
mov
adc
popa
sub
adc
sahf
mov
nop
mov
lods
loopne
mov
outsl
cmc
xor
xor
pop
add
stc
adc
dec
pop
xor
movsl
movsl
stc
lods
sub
or
push
push
sub
mov
or
loop
push
xchg
or
ret
adc
in
clts
insb
ljmp
xchg
bound
out
or
jo
dec
or
testl
gs
xor
jecxz
dec
mov
dec
out
jmp
xchg
pop
hlt
std
shl
sub
les
scas
sbb
ljmp
arpl
stc
fcomps
lods
je
cld
or
and
xor
xchg
mov
mov
push
mov
mov
outsb
xlat
add
orb
repz
and
inc
mov
pusha
xor
shr
or
mov
test
mov
mov
xor
hlt
rorb
mov
pop
pop
cmpl
sub
pop
incl
push
mov
sub
jecxz
xchg
mov
sub
sub
jnp
test
adc
and
jo
out
jno
sbb
loopne
jle
sarl
mov
js
lahf
and
add
inc
jmp
cmp
sbb
sbb
in
sbb
arpl
cmp
bound
fmuls
lcall
mov
mov
loopne
es
ss
xor
mov
jbe
popa
inc
lods
jb
push
imul
cmpsb
sti
out
sbb
mov
mov
sbb
sbb
cmp
jl
inc
ret
xorb
xlat
push
and
ret
jg
pop
hlt
sbb
int3
jae
addb
push
ss
push
xor
inc
pop
mov
jne
and
nop
jo
inc
and
inc
arpl
call
rolb
sub
add
push
push
lds
addb
mov
push
inc
xor
pop
cltd
rcrb
dec
inc
pusha
mov
insl
jb
jl
xchg
jecxz
fs
nop
sti
push
mov
push
or
inc
outsb
outsl
push
mov
popa
xchg
fmul
cmc
adc
inc
add
mov
imul
mov
sbb
repnz
push
and
inc
sub
pop
aas
ficomps
test
dec
xor
repz
pop
fwait
dec
jle
je
adc
inc
popa
test
pusha
sbb
sbb
call
leave
inc
pop
sub
jae
mov
pusha
orb
popf
lods
outsb
loope
outsl
outsb
jge
xchg
or
in
push
aas
sub
movsl
mov
lods
cmpsl
lods
jmp
sahf
out
add
stc
shrl
sub
lds
fistpl
dec
jg
lret
and
xchg
jp
nop
pop
or
xchg
fbld
lods
cmp
decb
mov
fsubr
push
mov
or
push
xor
addr16
sub
stc
sub
mov
and
push
jle
jmp
inc
fdivs
notb
sbbb
pop
xchg
jae
jecxz
push
cwtl
ffreep
or
inc
mov
fwait
fs
jns
popl
xchg
xor
inc
int3
movsl
sbb
outsb
lods
pop
sarb
cmc
sbb
pop
cwtl
cmc
clc
inc
test
lods
rcrb
fs
js
add
sbb
dec
push
enter
shrb
jg
ror
xchg
aad
mov
sarb
adc
pop
insl
sti
jbe
data16
jo
inc
inc
add
clc
jmp
jae
mov
mov
cmp
sub
popf
fisubs
or
inc
jp
xchg
or
ret
bound
loop
push
test
cwtl
xor
dec
inc
adc
popf
fisubrs
xchg
lock
jnp
fwait
and
testl
mov
arpl
sub
lea
popa
and
jl
xchg
sub
dec
xor
jl
gs
por
add
into
outsl
and
mov
testb
sbb
push
dec
cld
xor
pusha
push
pop
push
pop
nop
pop
test
pop
xchg
xchg
inc
outsb
add
pop
inc
jp
sbb
outsb
int3
push
cmp
clc
jnp
inc
pop
imul
dec
lcall
fbstp
lcall
add
aad
jle
hlt
mov
pop
pusha
loopne
in
cmp
or
push
add
mov
repz
mov
pop
psubd
std
pop
and
fimuls
xor
add
pop
shlb
rolb
jle
clc
xchg
lret
fwait
aad
xor
rcrl
dec
adc
adc
xor
gs
xchg
cli
imul
sub
push
insb
aad
adc
in
mov
lds
jns
xchg
or
je
dec
aas
popf
pop
repz
cmc
out
sahf
jo
xor
aas
inc
sbb
push
dec
sbb
dec
pop
and
es
push
jne
gs
push
push
xor
adc
add
sti
push
mov
inc
lret
sbb
cwtl
jbe
mov
daa
adc
push
xor
inc
xchg
inc
jge
int
push
popl
ja
jmp
xchg
mov
ljmp
jle
add
jo
add
mov
add
push
repz
mov
test
pop
pop
jne
xlat
dec
jne
push
ffreep
fwait
inc
lds
cltd
js
in
mov
test
xlat
xchg
mov
daa
xchg
rolb
xchg
pushf
jnp
popa
test
push
xchg
scas
push
in
add
out
xchg
push
test
push
mov
push
push
mov
cmc
movsl
xor
ss
sarb
fimull
cld
or
inc
dec
push
or
add
and
xor
and
cmp
out
push
fsubp
mov
add
pop
inc
mov
aad
adc
das
pop
lcall
xchg
testb
sub
shl
addr16
inc
frndint
pop
add
push
adc
or
inc
sbb
jle
pop
incb
pop
jge
cmpsl
or
sub
out
jecxz
push
sahf
lods
imul
popa
inc
sbb
push
or
test
popf
sarb
mov
sbb
cmp
pop
mov
cmpsl
ret
in
cmp
jg
movsl
pop
pop
popa
cwtl
xchg
pop
loope
add
mov
icebp
lret
push
fdiv
sub
push
xchg
mov
fcompl
out
pop
jecxz
pop
ds
fmull
cmp
fldz
dec
xchg
arpl
aaa
mov
mov
mov
xchg
out
cmpb
and
dec
sbb
jle
insb
and
lcall
adc
cmpsl
fbld
aam
jge
imul
testl
xlat
dec
stc
pushf
cwtl
rcrl
arpl
xchg
aaa
es
cmp
popf
mov
xor
dec
test
test
shr
popa
or
out
iret
addb
push
lds
shr
adc
xor
ja
jle
jmp
mov
jmp
pusha
jl
adc
mov
jns
repz
pop
addr16
jmp
mov
loop
mov
pushf
xor
out
jp
leave
iret
xor
out
dec
hlt
punpckldq
push
dec
xor
rcrl
cmp
push
pop
jecxz
jno
rclb
mov
jecxz
xor
push
cs
and
mov
pushf
adc
cld
das
push
fdivr
lods
jns
int
dec
cmp
addr16
mov
mov
xlat
xor
ja
push
xchg
shll
push
int
mov
je
ret
insb
in
inc
add
adc
push
sbb
xor
lret
cwtl
lock
adc
adc
js
lods
and
sub
testl
jne
in
sub
out
movsl
arpl
andl
inc
sub
push
push
nop
cltd
xchg
stos
xor
cmp
cmpsl
inc
adc
cli
ljmp
cmc
mov
inc
xchg
cli
lcall
sbb
or
subl
mov
stc
jno
jl
cli
sub
mov
cli
or
mov
rolb
cwtl
jne
bound
cmp
mov
hlt
aam
popa
sub
outsb
and
adc
xlat
cli
pop
jl
push
mov
fistpll
xor
out
clc
in
popa
push
push
test
inc
loopne
icebp
push
pushf
xchg
les
inc
rcl
ds
push
imul
mov
pop
sbb
das
inc
outsl
out
mov
scas
cmp
rcl
cld
jo
mov
sbb
inc
xchg
jg
and
call
and
pop
imul
mov
jo
mov
das
mov
dec
ds
shlb
or
mov
dec
fwait
add
cmp
or
push
mov
pop
xchg
jne
roll
pop
shll
adc
xchg
and
fcompl
aam
add
dec
mov
xor
fwait
dec
and
adcb
mov
push
cmp
movsl
sub
push
pop
sub
sahf
jge
sub
fldt
xchg
shlb
or
aam
mov
mov
sti
aam
fstp
push
cld
mov
cmpsl
outsb
push
cld
cwtl
mov
cmpsl
cmp
cmpl
dec
stos
cmp
repnz
hlt
inc
jne
xlat
in
cwtl
fists
mov
leave
imul
push
cmp
cmpsl
clc
inc
xchg
push
mov
popa
pop
pop
jae
in
std
mov
mov
aad
add
fisttpl
arpl
das
sahf
adc
mov
lods
mov
inc
jnp
and
xor
or
mov
xorb
jns
add
and
cmpsb
mov
rclw
add
shrb
and
and
cmpsl
mov
cwtl
sub
cmp
cmp
xchg
call
sub
ljmp
mov
dec
sbb
cmp
xchg
mov
mov
sti
push
ret
inc
mov
fs
mov
mov
jmp
mov
inc
sbb
push
pop
mov
test
and
ss
jge
lahf
lds
shrl
sahf
or
stos
fs
cmp
add
loope
ret
popa
arpl
xchg
xchg
pop
mov
nop
imul
add
or
lods
rorl
idivb
imul
shlb
mov
enter
mov
out
sbb
mull
dec
sti
add
cmpsb
out
and
aaa
daa
ja
nop
fsubr
decb
mov
cmc
mov
sbb
outsb
or
mov
sub
mov
inc
add
mov
int
xchg
push
xchg
stos
push
frstor
ds
js
and
gs
mov
insl
ret
xchg
inc
lods
lods
push
inc
aam
xor
cmpsb
xor
fwait
iret
lea
dec
les
dec
cmpsl
js
mov
bound
fisttps
adc
insb
xor
or
in
xor
imul
jb
enter
mov
lods
mov
xchg
adc
push
mov
or
add
dec
insb
jae
repz
xchg
add
movsb
fisubrl
stos
scas
jmp
jle
in
xor
cmp
enter
cmpsl
rep
int
out
or
mov
push
jg
sbbb
cwtl
sti
sub
dec
leave
mov
pop
sub
xor
andb
popf
mov
push
xchg
roll
xchg
loop
adc
daa
add
adc
pop
cmpsb
xor
les
addr16
xchg
jnp
mov
pop
clc
hlt
or
test
sbbl
jo
cmc
mov
inc
lret
pop
test
std
sbb
in
in
jecxz,pn
in
out
rorb
pop
cmovbe
push
mov
stos
leave
and
ret
imul
jnp
fmul
adc
mov
clc
shrb
add
mov
imul
in
inc
js
lea
popf
jno
push
xor
push
popf
and
push
out
cmp
lret
push
js
sbb
cwtl
pop
cmp
cli
push
jae
xchg
insl
test
clc
xchg
dec
sub
push
out
jnp
push
cmp
xchg
ds
push
push
adc
mov
clc
in
pop
lods
inc
ror
mov
into
jmp
xor
add
adc
push
or
shr
or
subb
lahf
push
mov
insb
std
addr16
adc
rdpmc
or
in
xor
cli
pop
mov
add
jp
fidivrs
loop
mov
push
dec
sub
shlb
mov
scas
bswap
inc
mov
pop
lret
enter
bound
sub
test
mov
push
sbb
in
inc
ljmp
xchg
xor
ja
mov
jg
inc
lret
pusha
dec
movsb
out
xchg
add
dec
mov
insl
sbb
inc
out
cltd
xor
js
pop
mov
xor
jmp
fldenv
inc
flds
leave
push
xorl
lds
fsts
cwtl
xchg
push
mov
or
push
inc
pop
cmp
insb
sub
icebp
out
cmp
aas
xor
cwtl
pop
sbb
cmp
jmp
pop
movsb
in
loop
dec
out
sbbl
mov
test
xchg
aad
nop
test
inc
cmpsl
fcoms
add
std
call
push
jae
dec
mov
lods
test
in
repnz
js
and
dec
xlat
iret
cmp
in
fcoml
lret
es
jbe
cmp
repz
add
sbb
mov
outsb
xchg
and
xor
sarl
out
adc
pop
in
mov
int3
ja
mov
mov
cmpsb
jmp
cmpsl
pusha
int
fsubrs
jp
xor
and
outsl
aad
popa
rclb
mov
pop
notl
popf
loopne
xchg
imul
jnp
push
cmp
add
push
add
adc
or
push
cmpsb
push
sbb
pop
jnp
loop
icebp
cld
jne
dec
push
jg
sbb
sarl
inc
and
fs
adc
orb
adc
mov
adc
in
mov
int
pop
imul
ljmp
fistpl
je
push
pop
and
fimull
fbstp
cli
in
sbb
fisttpl
addr16
inc
fisttpl
stos
test
xor
in
in
pop
jecxz,pt
pop
mov
lea
push
mov
mov
cmpb
test
lock
jmp
sbb
add
add
dec
repnz
dec
push
pushf
push
flds
xor
cmp
dec
not
nop
sbb
mov
mov
sbb
sub
jge
sub
sbb
push
and
xchg
in
push
mov
cwtl
push
enter
cmpsb
into
into
xchg
pop
inc
cld
xor
push
imul
jno
sti
adc
inc
jle
adc
and
lods
push
scas
leave
dec
popf
add
push
enter
cmp
lock
xor
mov
lock
imul
in
jmp
ds
aam
jg
sub
pop
test
or
mov
mov
dec
cmp
mov
mov
push
pusha
and
aaa
push
fistl
jo
dec
cmpsl
lds
subl
frstpm(287
inc
sbb
insl
cli
insl
jno
inc
or
jo
stos
mov
shll
pop
inc
je
xchg
push
vmovntpd
pop
inc
sahf
jo
and
cli
adc
stos
xchg
and
push
push
hlt
inc
inc
jns
js
pop
sub
push
adc
iret
lret
mov
je
cmp
je
pop
lahf
cs
in
movsb
jp
stc
sub
setbe
cmpsb
mov
cs
cmp
dec
rcll
lcall
popa
lret
xchg
pop
mov
stos
push
fiaddl
dec
out
ret
jnp
mov
adc
ret
lcall
push
mov
cmp
mov
cmpsb
dec
mov
dec
inc
sub
jo
hlt
sub
ds
dec
mov
jno
ret
fstpl
sbb
out
push
in
push
sbbl
scas
data16
sbb
and
and
and
jb
jle
adc
iret
dec
mov
scas
add
scas
adc
or
xchg
push
cmp
adcl
xor
rorb
mov
dec
mov
xchg
int3
push
cmp
pop
ljmp
mov
rorl
mov
jl
outsb
add
je
popf
mov
add
je
test
mov
mov
cltd
ret
fstpt
xchg
fisubrl
mov
iret
sub
fdivrl
in
inc
arpl
icebp
cmp
pop
inc
outsl
ljmp
ljmp
fsubs
call
push
cwtl
rclb
mov
push
lea
jg
mov
sub
cmp
mov
sahf
shll
pop
test
adc
xchg
cli
jp
jg
sahf
inc
in
ds
loope
sbb
test
enter
mov
jmp
inc
aas
inc
aad
sti
insl
and
out
dec
out
inc
sbb
icebp
in
movsb
adc
push
out
inc
in
mov
cmp
jne
out
js
pop
shl
rolb
jnp
mov
mov
cmc
xchg
inc
mov
enter
push
jae
repz
lods
xchg
in
jnp
jno
push
or
ret
adc
jge
sub
dec
cmpsl
mov
hlt
xor
call
outsb
jmp
es
push
fucomi
arpl
sub
ds
cwtl
out
adc
lcall
inc
mov
in
das
dec
add
pop
and
inc
pop
add
stc
jecxz
push
int
jb
add
rclb
pop
push
cmp
adcl
push
into
cmc
jns
rorb
add
addb
repnz
or
in
adc
js
add
lods
shlb
insl
lds
mov
and
xchg
stc
subl
shrl
mov
jb
mov
jmp
jne
add
out
pop
repz
jge
ds
in
sarl
and
lea
adc
adc
outsb
cmp
fwait
inc
inc
je
push
and
gs
xor
fdivp
mov
xor
jae
inc
bound
imul
jecxz
jae
jmp
pop
and
mov
stos
xor
aas
and
xchg
and
rorl
sti
and
and
outsb
js
cltd
push
jge
inc
imul
lcall
rolb
pop
sbb
jae
mov
pusha
loop
cmp
push
int
faddl
xchg
pop
mov
dec
stc
gs
sub
mov
idiv
pop
inc
pop
mov
sub
sbbb
insl
fistl
cmp
push
addl
adc
or
cmc
add
jnp
popa
enter
add
rcll
add
or
lcall
xor
or
jb
and
mov
int3
mov
jb
xadd
push
mov
dec
mov
sbb
insl
xor
mov
nop
aad
es
shlb
out
inc
jb
dec
repnz
outsb
lea
and
adc
pop
shrl
and
mov
shlb
fiaddl
sahf
repnz
sub
push
mov
dec
movsl
sub
pop
sbb
ds
mov
int3
adc
hlt
addr16
fidivl
je
ret
dec
and
push
dec
int
es
lods
leave
mov
ret
fcoms
jae
cmp
mov
jecxz
mov
or
adc
loop,pt
lret
dec
stos
xchg
add
enter
dec
lods
hlt
mov
adc
mov
out
ljmp
pushf
cmp
cwtl
imul
out
popf
push
repz
out
sub
outsb
xlat
jg
jp
std
pop
dec
pop
mov
push
addb
ja
mov
test
xlat
mov
or
jo
imul
lea
ficoml
add
sub
sbb
loopne
push
push
ds
mov
jb
xchg
shl
in
sub
jp
icebp
inc
sbb
mov
ja
mov
jo
add
dec
fadds
and
mov
cmpsb
std
loopne
gs
scas
shll
ljmp
cmp
int3
mov
push
out
nop
push
insl
and
adc
dec
les
or
notb
je
mov
lods
clc
cmc
xor
scas
jle
push
mov
pop
add
out
clc
pop
faddl
adc
adc
jb
lds
mov
inc
lahf
mov
fimuls
cli
repnz
and
dec
jmp
dec
jmp
jge
into
mov
mov
xchg
sbb
dec
sbb
out
cmc
push
mov
jle
insb
xchg
mov
std
push
pop
in
iret
pop
push
xor
or
les
scas
mov
decl
cld
lret
mov
pop
xchg
push
cli
inc
ss
test
add
jmp
addr16
and
ficomps
mov
test
pop
mov
sti
stos
int
ret
aas
xchg
cmp
mov
loop
inc
outsb
xorl
shll
xor
xchg
mov
dec
popf
sbb
fistpl
add
fsubrs
lret
dec
fdivl
cld
ja
mov
lret
push
lods
xor
mov
scas
fdivrl
push
dec
xchg
xchg
insb
les
mov
cmp
xchg
add
or
mov
jle
lods
ljmp
xlat
divl
clc
or
iret
repnz
inc
cmp
jmp
mov
sbb
cld
lahf
dec
shlb
out
adc
sbb
int
xor
lret
fwait
lods
lahf
jl
xlat
rcrl
sbb
dec
leave
pop
jle
sti
cmp
lods
push
mov
into
imul
jbe
mov
mov
aaa
xor
adc
icebp
push
xchg
das
or
sbb
ret
fadds
out
push
jb
dec
into
js
xor
push
popa
cmp
ret
jecxz
shll
jg
add
lods
push
lret
fucomp
cmp
sbb
cmp
pop
mov
leave
stos
push
std
cs
lea
adc
sbb
jecxz
cmpl
cld
imul
pop
enter
dec
mov
rolb
add
add
push
mov
xchg
hlt
push
sub
xchg
jae
push
add
daa
stos
and
push
test
lret
mov
repz
or
aam
out
lods
dec
sarb
sub
push
and
jne
add
push
push
cmc
mov
mov
subb
lds
adc
xor
dec
inc
iret
je
sub
pop
push
insl
pop
mov
sbb
test
jl
dec
xor
fcmovbe
cmp
push
jecxz
aad
adc
fdivl
enter
push
int3
push
out
and
adc
sbbl
cwtl
jge
mov
jmp
mov
sbb
jae
and
rorl
mov
dec
cmp
pop
dec
cmpsl
inc
dec
xorl
jns
push
stos
test
push
in
sbb
jge
xchg
cmp
fisubrl
add
arpl
mov
xchg
sub
xchg
push
adc
clc
fwait
mov
mov
loopne
jno
int3
add
dec
add
xchg
je
mov
mov
imul
jg
mov
ss
pop
sarb
fwait
pusha
cmp
lcall
out
aaa
cmpsl
jb
or
orl
dec
jle
test
xchg
out
xor
cmp
rolb
xchg
arpl
xor
leave
test
fstpt
ficoms
aaa
lea
pop
repnz
ficoms
push
adc
inc
in
in
inc
jns
cmc
cld
mov
data16
pop
inc
or
sbb
loope
cs
xchg
ficoml
sbb
xchg
aas
pop
nop
jmp
cmp
dec
xchg
out
in
pop
and
rclb
sbb
xor
and
pusha
jp
in
sub
cmp
pop
in
mov
lahf
sub
pop
cli
ret
dec
jge
lcall
add
or
mov
push
xchg
pop
jnp
adc
push
mov
frstor
dec
mov
cmc
cld
sub
daa
std
in
sahf
jnp
mov
pop
insb
lods
popa
scas
pusha
in
adc
push
fwait
pop
xchg
icebp
or
popf
jmp
dec
mov
arpl
pusha
sbb
pop
dec
mov
insl
xchg
sub
cld
push
pop
fisubs
pop
ss
call
xchg
inc
bound
bound
add
pushf
xor
adc
mov
test
cmp
fdivp
fstpt
repnz
adc
shlb
cwtl
add
cmpsb
cld
ret
test
test
fdivrl
mov
aam
addps
addr16
fwait
repnz
daa
add
and
cmp
sub
dec
aas
sub
fwait
mov
fstpt
and
sahf
jecxz
jmp
add
or
subps
cmp
insb
sbb
push
mov
loopne
mov
inc
push
cmc
pushl
cmp
sbb
fadd
mov
imul
mov
mov
in
jne
insl
test
scas
pop
cmpsb
mov
fnsave
repnz
fdivs
ljmp
mov
lcall
lea
jb
lahf
jp
in
mov
jmp
jns
sbb
lea
pop
mov
ret
leave
cmp
cmp
sarb
fwait
negb
jmp
sub
mov
dec
repz
sarb
sub
ret
ljmp
jmp
std
ja
sbb
dec
les
push
hlt
in
jo
fwait
xor
mov
imul
fstp
xor
mov
pop
repnz
or
inc
fucomi
int3
mov
sahf
pop
in
lods
xor
je
incl
mov
insb
daa
scas
icebp
cli
mov
inc
jae
push
cmp
out
xor
push
sbb
inc
xor
xor
push
mov
fstpt
add
in
cmpsl
adc
cmp
rcrb
adc
ficoml
outsb
adc
mov
add
rorl
lahf
and
xor
scas
pop
mov
pop
andb
ss
ret
fbstp
ja
fucom
xchg
mov
cmpsb
dec
mov
jnp
sbb
fsts
movl
data16
js
je
mov
imul
les
fdivl
cmp
ja
insb
inc
loopne
add
add
cmp
cwtl
lock
sahf
sub
repz
add
mov
int3
mov
mov
lret
ja
push
js
or
sbb
sbb
mov
icebp
ret
lock
out
mov
lds
jno
js
sbb
cmp
push
mov
push
sbb
nop
mov
fwait
and
dec
and
sbb
jbe
inc
lret
imulb
cs
xor
cmpsb
mov
fs
push
dec
ret
jae
scas
jnp
lods
jmp
sub
add
and
pop
jg
jmp
stc
cltd
xor
lret
test
xor
call
adc
stos
dec
lcall
cmpsb
mov
jno
or
mov
lods
add
in
sub
repnz
aam
in
popf
add
dec
sbb
insl
jbe
test
mov
sub
lods
mov
cli
jo
push
icebp
mov
push
je
es
xor
in
pop
pop
inc
sarl
sbb
outsl
inc
or
mov
es
pop
adc
sarl
xchg
cmp
push
and
sahf
rclb
mov
movsb
jmp
mov
xlat
jne
add
xchg
push
dec
inc
test
sub
sbb
and
adc
sub
push
das
adc
xlat
push
inc
cltd
sub
mov
inc
push
stos
out
mov
aaa
jo
rclb
rol
stc
enter
push
scas
lcall
jno
jl
testl
and
jo
jns
addr16
mov
data16
scas
les
xor
roll
sub
jp
cmp
xchg
repnz
incb
sub
adc
lds
stos
jae
cmp
jne
mov
daa
subb
dec
inc
sbb
push
cmp
fbld
out
jnp
dec
ret
popf
dec
daa
fistl
nop
add
xor
dec
pop
or
cmovge
inc
xorl
adc
mov
test
xchg
xchg
dec
cmp
jmp
xchg
dec
adc
shrb
push
ret
cmp
das
xchg
adc
dec
fwait
sub
mov
faddp
fwait
js
pop
aad
hlt
xor
aaa
and
lahf
into
sahf
in
xchg
push
test
cli
dec
mov
jbe
out
enter
fcmovnb
and
xchg
in
xor
add
ret
mov
mov
rcr
cmp
jge
inc
push
dec
dec
jge
xchg
cmpl
mov
loopne
mov
aam
and
shrb
call
orl
add
cmp
push
cmp
idivb
or
shll
push
jbe
mov
push
ljmp
jg
shlb
add
xchg
int
insl
loop
xchg
push
scas
push
adc
sub
mov
lock
ljmp
adc
xchg
sub
jne
scas
mov
sti
sbb
jns
out
fiaddl
dec
les
jo
and
xchg
jb
aaa
neg
lea
mov
xchg
mov
xor
push
xchg
inc
or
sub
std
xor
frstor
push
adc
sub
je
xchg
scas
xor
xor
loope
cmp
je
inc
xor
into
and
imul
xchg
sti
and
in
adc
xchg
pop
shll
fcom
push
mov
pop
outsl
push
lret
fsts
xorl
xor
add
ret
fisttpl
nop
out
icebp
aaa
jg
jnp
mov
xchg
pop
adc
sub
mov
orl
pop
aas
cmp
add
add
repnz
icebp
xorl
insl
pop
pushl
pushf
pop
or
fimuls
lcall
xor
jp
imul
in
and
sbb
scas
add
mov
aad
cmpb
lret
mov
jge
outsl
sahf
call
es
mov
mov
int3
nop
xor
mov
jns
adc
sbb
inc
xor
mov
dec
jne
mov
test
into
xor
xchg
es
aad
xor
sbb
shlb
sub
mov
bound
mov
leave
push
mov
mov
xor
into
loope
vpsubd
fistl
jbe
xor
or
test
cs
dec
mov
ja
ja
js
clc
cmpsb
cmp
outsb
inc
shlb
sbb
or
cs
fimull
pop
push
jns
mov
cltd
dec
cmpsb
popf
push
xlat
cmp
mov
mov
in
roll
pop
jl
xorb
or
jmp
jmp
jo
test
imul
lret
cmp
lret
andb
mov
xchg
and
outsb
lahf
aad
adc
fwait
lret
testb
jl
xor
sbb
pushf
das
cld
test
cltd
fcmovnbe
sbb
cmp
rclb
jge
sub
ret
cmp
mov
pop
out
xchg
mov
movsb
adc
negl
jg
sbb
test
xchg
shl
arpl
sbb
lock
iret
aam
xchg
or
mov
lcall
addr16
sbb
sbb
xor
xchg
xchg
adc
xchg
sahf
insb
sti
xor
xor
nop
cmp
out
xor
jmp
ret
addps
mov
test
repz
scas
push
lods
xor
pop
push
leave
pop
call
pop
mov
lret
ss
lret
enter
aaa
add
inc
in
mov
in
and
or
lcall
mov
ret
inc
pop
jnp
aad
mov
testb
sub
rcrb
ret
outsl
repz
fidivs
add
sahf
cmc
xor
and
xchg
jge
push
lcall
pop
mov
cltd
xchg
inc
add
int
lock
inc
push
mov
insb
mov
icebp
stc
adc
cli
fildll
jno
jne
fs
mov
out
pop
cmp
push
stos
sub
cmp
cwtl
cltd
repz
hlt
lret
out
inc
xchg
jo
adc
xor
and
xor
ret
in
ja
jnp,pt
and
mov
ret
ret
pushf
or
movsl
int3
fbstp
add
dec
dec
inc
in
test
cmp
jo
out
in
sarl
mov
mov
jno
add
dec
sub
adc
xchg
sbb
test
in
call
insb
pop
xchg
cmp
pop
in
leave
cmp
in
fwait
ror
push
sbb
fs
and
or
and
mov
int
push
mov
adc
test
jp
mov
add
or
mov
jae
adc
add
in
sub
push
inc
xorb
mov
mov
inc
mov
add
cmc
aaa
xchg
mov
mov
and
fs
add
repnz
stc
test
pop
loop
mov
xor
mov
add
in
pop
jb
or
test
jmp
ss
inc
xor
xchg
cltd
ret
sub
inc
inc
out
popa
inc
es
scas
cmp
mov
push
mov
imul
subb
dec
ss
xchg
int
je
or
jb
aad
add
leave
pop
ljmp
rsm
nop
sub
push
imul
jmp
push
pop
fisubrl
pop
jmp
mov
or
adc
mov
icebp
nop
repnz
mov
sub
lods
arpl
stos
leave
adc
add
data16
adc
sub
dec
jge
sbb
mull
cltd
inc
pop
jb
mov
aaa
xchg
add
dec
call
addb
and
cmc
and
push
insb
stos
mov
push
lds
dec
out
fsub
sbb
sbb
xchg
xchg
andb
sarl
mov
xor
dec
fwait
jmp
mov
rcll
cwtl
sti
testl
inc
and
inc
jo
rcrl
test
das
dec
jge
sbb
xchg
xor
sub
adc
roll
loopne
jae
fsubr
ljmp
push
lods
xor
ljmp
adc
xor
xor
lret
mov
scas
push
or
sbbb
out
pop
out
aas
adcl
push
ret
dec
lods
fwait
pop
push
xor
aas
jle
push
ljmp
inc
mulb
ljmp
inc
bnd
and
sbb
lock
lock
cwtl
movsb
inc
xchg
inc
push
push
cmp
jg
dec
inc
mov
popa
mov
pusha
mov
inc
addr16
fdivrl
dec
push
shrb
movsb
mov
loopne
mov
jnp
in
prefetcht1
stc
aam
pop
xor
arpl
gs
movsb
stc
negb
mov
dec
cli
popa
cmp
mov
int3
mov
xor
push
jne
mov
pop
shr
clc
test
and
cs
das
dec
mov
testb
dec
mov
orl
lcall
sub
pop
jl
adc
sbb
xchg
jle
je
scas
repnz
in
int3
or
jno
outsb
loop
sbb
pop
sbb
sub
xor
movsl
mov
fdivp
push
sbb
lcall
push
mov
fs
lods
push
ds
shl
out
mov
add
ret
loopne
push
or
mov
and
or
cmc
cmp
fdivrp
dec
dec
mov
xor
mov
xchg
and
add
fildll
icebp
jmp
into
test
push
jnp
add
fnstenv
cmpsb
scas
pushf
and
or
imul
lea
out
sub
or
loop
roll
fs
fwait
jb
pop
idivb
xchg
sub
out
cltd
xor
fdivr
jg
push
and
nop
jecxz
jl
or
mov
or
sbb
shll
out
push
adcb
jb
scas
jmp
mov
mov
xor
out
pop
xchg
xlat
sbb
push
out
enter
icebp
mov
sbb
push
push
adc
popa
in
cmp
ret
mov
or
xchg
mov
fdiv
ret
fs
out
aas
lcall
sti
nop
cmp
cmp
fldt
imul
lcall
cli
push
lahf
push
test
push
inc
jo
out
aas
cmp
cmp
push
stos
add
xor
mov
cmp
test
std
mov
loopne
in
and
cmp
cmp
outsl
xchg
fnstcw
push
adc
aas
enter
scas
pusha
mov
mov
cltd
and
cwtl
cmp
popf
adc
dec
cld
test
aas
movsb
jg
dec
popf
xor
es
fiadds
xchg
fnstsw
jmp
bound
push
bound
das
cwtl
int
enter
imul
popa
pushf
pop
xlat
lds
xor
rol
scas
sbb
shrb
bound
pop
mov
mov
int
enter
out
adc
or
adc
mov
mov
pushf
es
dec
xchg
insb
out
out
sbb
mov
and
jge
xor
rolb
pusha
subb
jo
mov
push
in
mov
adc
sub
push
xor
pop
popa
adc
lret
loopne
inc
mov
test
dec
int
fcompl
xor
adc
outsl
scas
loope
inc
test
ja
inc
cmp
sbb
scas
mov
pop
push
out
jno
lret
frstor
popa
fwait
pushf
xorb
decl
and
jns
jae
cmp
loop
adc
sbb
enter
insl
icebp
icebp
sub
push
push
popf
mov
das
inc
mov
sbb
mov
testb
rclb
push
and
push
cli
mov
inc
js
fidivs
cltd
ret
data16
mov
jge
jge
cld
or
rorb
jo
xchg
adc
ja
add
jmp
jle
adc
test
hlt
cld
test
cli
fsubrl
mov
cmc
movsl
mov
pop
adc
int3
mov
imull
test
or
rolb
pop
in
nop
pushf
ss
pop
pop
sub
and
rcl
sbbl
scas
cmp
cmp
pop
push
outsl
test
push
jp
daa
cmp
and
cs
jl
test
sbb
xchg
mov
shll
mov
aaa
ja
movsb
pop
in
lods
jbe
adc
push
adc
test
iret
negl
popf
mov
mov
loopne
adc
and
inc
xor
out
outsl
xchg
push
aad
out
addr16
jne
lods
std
push
lret
arpl
inc
imul
fwait
xor
jecxz
inc
lcall
cmp
sub
iret
pop
dec
jae
leave
ljmp
pop
mov
fsubrs
dec
out
outsb
and
ret
mov
int
sbb
jge
pop
add
pop
fcmovu
mov
movsl
cli
scas
int
out
rorl
jmp
adc
inc
pop
cmp
xchg
pop
sbb
aaa
and
or
jge
hlt
push
cli
imul
loopne
mov
push
in
add
lret
xchg
sti
xchg
pop
sarb
aam
xchg
fsubrp
out
mov
jb
mov
lods
cld
hlt
fmull
mov
jge
sbb
loop
xchg
mov
test
push
sbbb
jle
fwait
xchg
cmp
pop
and
push
subl
jns
dec
sbb
sbb
stos
callw
pop
jp
imul
sub
call
cmp
sub
in
dec
mov
mov
mov
mov
xchg
inc
xor
mov
inc
add
pop
sbb
outsl
mov
cs
lret
push
cmp
xchg
fisttpll
inc
mov
imul
arpl
jmp
and
pop
cmpl
inc
fcomi
leave
inc
hlt
jo
out
and
mov
cmp
sbb
cli
xchg
movsl
in
mov
enter
je
dec
out
lods
sub
sub
mov
gs
pmaxsw
cli
pop
ljmp
scas
stc
ljmp
lea
xor
xor
loopne
cli
andb
xchg
pop
add
mov
icebp
xor
leave
dec
and
icebp
scas
out
sub
jnp
mov
mov
xor
test
out
cmpsb
data16
xor
daa
xor
jno
or
adc
repnz
adc
ljmp
add
xchg
outsl
int3
inc
pop
pop
mov
pop
addl
adc
xchg
je
jbe
sub
repnz
mov
loopne
out
in
dec
stos
sub
jo
mov
sub
lods
popf
add
daa
dec
jl
push
movsb
pop
jecxz
jl
or
std
mov
or
cli
sub
out
inc
mov
jno
and
mov
loopne
ret
pop
loopne
sub
aas
mov
stos
adc
cmp
out
jb
xchg
test
in
out
ret
out
cld
popa
mov
inc
test
dec
mov
in
ljmp
in
push
sbb
mov
mov
shrl
xor
ret
cld
sti
adc
popa
ja
mov
or
hlt
or
fwait
ret
lret
dec
divb
mov
popl
pop
jbe
in
movsl
or
bound
ja
pop
pop
lahf
push
cmp
jns
mov
inc
lahf
push
mov
jmp
or
add
daa
jmp
add
mov
inc
push
push
inc
fcoml
orb
fcmovnu
ret
fstpl
fisttps
mov
jae
test
xchg
cltd
cmove
mov
pop
andl
jnp
stc
sbb
mov
sbb
push
es
dec
push
add
push
cwtl
fwait
xchg
je
pop
test
jnp
inc
sti
dec
xchg
fwait
insl
shrb
movsb
and
fistpl
mov
cmp
out
movsl
mov
jae
lock
inc
and
daa
and
jg
jne
jno
mov
outsl
cmp
loopne
cs
mov
lds
in
lds
add
sahf
fcmovnbe
sahf
pop
test
push
daa
jg
and
repnz
rolb
mov
and
je
lods
fsubrs
mull
mov
outsb
incl
xchg
add
out
js
leave
ficomps
aad
add
sbb
outsl
cmc
ror
push
add
mov
fisubl
inc
xor
mov
xor
mov
xor
fcomps
mov
ret
popf
pop
and
inc
sub
adc
xor
xor
mov
pop
jg
sub
add
sarl
and
pop
xlat
sub
pop
xor
out
dec
pop
push
sbb
pop
das
dec
jb
mov
sbb
and
popa
adc
cmp
adc
bound
add
shr
xor
jnp
cmp
and
imul
dec
or
xor
pop
hlt
sbb
insb
sbb
push
push
push
out
or
mov
outsl
insb
shlb
iret
mov
in
enter
ss
ret
inc
xlat
cmp
mov
mov
jno
shrl
addb
mov
pop
fsubs
test
aam
stc
xchg
push
rclb
lahf
cmovs
dec
addl
fsubl
cmpsb
movsl
mov
cs
adc
fldenv
and
lods
sbb
aaa
mov
int3
pop
dec
sub
adc
sub
stos
dec
mov
es
xchg
lret
inc
cmp
push
fstpl
nop
pop
iret
xchg
mov
in
xchg
dec
pop
das
sbb
rorb
jecxz
push
add
or
cs
out
sub
not
push
push
repz
insl
push
cs
add
cld
mov
clc
dec
nop
fistpll
sbb
lock
adc
jns
push
in
mov
in
xor
mov
xlat
out
and
pop
pop
outsb
pop
mov
push
xor
lods
jne
pop
int3
sbb
shl
xor
xchg
and
or
adc
popf
into
inc
hlt
xlat
jo
in
cmpsl
mov
pop
add
imull
fistpl
inc
xchg
adc
sub
mov
mov
push
fld
rcll
cmp
mov
jecxz
jecxz
push
int
repz
cmpsb
mov
dec
xor
sbb
out
shlb
nop
je
jns
rclb
xchg
cmp
into
and
cwtl
in
orl
sahf
adc
sub
cmpsb
dec
add
adc
mov
xor
ret
cli
xchg
sub
jmp
mov
and
test
cmpsb
lret
jne
movsb
mov
xor
dec
arpl
in
inc
cmp
addb
shr
cmp
fdivrl
enter
push
push
sub
adc
mov
fsubs
xchg
mov
adc
dec
lods
fwait
clc
rclb
pop
or
pop
push
push
or
lods
and
adc
pop
arpl
cld
inc
fisttpl
aad
jbe
inc
or
fimull
mov
adc
and
sub
jns
xor
rcrb
xchg
lods
cmp
gs
or
repz
jo
pop
or
xchg
push
cmc
std
cmp
mov
jge
adc
mov
sub
popa
stos
adc
xor
jo
out
sbb
shlb
sub
sub
shll
gs
or
and
mov
out
pop
push
in
sub
pushf
sbb
out
or
push
loop
sbb
lods
adc
mov
mov
push
jge
mov
mov
popa
push
repnz
fldcw
add
test
cmpsl
sub
adc
enter
xlat
pop
mov
lret
scas
shll
adc
jns
test
add
mov
lods
inc
int
push
jp
fisttpll
pop
jno
sti
jecxz
mov
add
mov
xchg
in
mov
mov
les
test
cmp
mov
xor
stos
mov
inc
aas
data16
sbb
lahf
addr16
movsl
xchg
in
sub
fldenv
les
imul
xlat
int
jecxz
inc
cltd
jmp
notl
dec
jmp
subl
or
adc
ror
arpl
mov
inc
push
xchg
and
nop
xor
scas
bound
or
or
int3
mov
push
xchg
mov
mov
in
loop
das
int3
mov
inc
decb
push
inc
pop
xor
pushf
inc
add
aad
outsl
mov
in
adc
clc
xchg
movsb
mov
xor
pop
out
jl
int3
or
cwtl
sub
test
xchg
pop
sbb
mov
inc
pop
jo
rolb
lret
add
jnp
push
cmp
cmp
jge
in
data16
je
xor
ret
out
pushf
std
mov
std
mov
subb
or
sbbl
or
xchg
scas
sbb
enter
inc
cs
shlb
repnz
lods
and
pop
jns
jp
jl
jbe
mov
jg
scas
mov
testl
mov
mov
pushf
inc
sub
lock
negl
push
rcrl
cmpsl
mov
sbb
sbb
mov
enter
add
xor
test
jno
sbb
shll
pushf
stc
mov
mov
js
fwait
inc
push
je
sarb
xor
pop
pop
int
leave
aaa
pushf
lcall
push
gs
ss
aas
ret
dec
ret
lea
inc
or
xchg
arpl
dec
pop
cmp
imul
pop
inc
test
inc
add
xchg
test
cmpsl
pop
cmc
aam
adc
xor
add
push
leave
or
mov
mov
xchg
inc
hlt
jecxz
in
jo
data16
mov
xchg
jecxz
mov
dec
int
adcb
shll
jmp
push
popa
sarb
lds
pusha
pop
xchg
std
pushf
inc
mov
flds
nop
cli
pop
cmp
cmp
subl
gs
dec
mov
inc
xor
sub
insl
xlat
lahf
or
push
sbb
fs
pop
dec
xchg
insl
daa
sar
dec
or
mull
jno
movsl
ja
shll
adc
sbb
and
and
cmp
inc
dec
jecxz
nop
mov
imul
pop
mov
cwtl
xchg
inc
mov
fsts
sub
call
cmc
leave
push
imul
sahf
add
mov
jae
jecxz
pop
inc
loope
and
cmpsb
mov
jmp
fwait
or
addl
add
es
xchg
jne
test
sub
mov
inc
cmp
sub
jns
fiadds
stc
idivl
jmp
or
inc
sarb
je
jp
xor
mov
mov
popf
fldcw
dec
sub
or
outsl
pop
fstp
jmp
fistl
testl
aam
ret
xor
std
sahf
adc
sbb
xchg
cmc
aam
fldcw
mov
xchg
dec
lret
mov
cmp
adc
jns
push
mov
xor
sbb
outsb
mov
pusha
cwtl
fs
dec
jnp
ffree
lods
sub
pop
andl
inc
push
ret
add
in
dec
dec
push
cwtl
sbb
dec
lods
lea
out
pop
cld
xchg
cld
filds
pop
pop
data16
pop
leave
nop
or
push
aas
xchg
inc
xor
fcmovne
aas
lret
aas
pop
sti
fsts
pushf
aam
push
shrl
and
push
scas
shrl
jns
push
dec
inc
pop
mov
push
pop
shlb
mov
mov
adc
out
and
xchg
pop
jbe
and
adcl
int
adc
dec
add
sub
bound
fucomi
mov
push
fstps
add
cmp
sub
ret
and
add
inc
mov
sbb
js
imull
lea
xchg
in
ljmp
scas
dec
mov
dec
add
testb
or
rcrb
push
mov
and
out
push
mov
mov
shll
mov
test
xchg
xor
dec
mov
cmp
mov
icebp
xlat
outsl
push
pop
sti
inc
repz
lock
cwtl
pop
add
mov
lods
addr16
sbbb
and
xlat
push
sub
sbb
mov
js
jge
pop
xchg
cld
cmp
fistpl
adc
sub
int
into
jo
das
inc
cmp
cmp
repz
ja
cmc
pop
out
mov
sub
jno
dec
icebp
jno
add
add
or
sbb
movb
aaa
lods
loop
movsl
mov
fldt
sbb
sbb
mov
jle
inc
mov
ret
push
xor
divb
mov
bsr
sub
shll
sub
ja
ficoml
xchg
stos
arpl
loope
imul
xchg
add
xchg
aaa
mov
in
out
test
mov
mov
sub
sahf
mov
mov
mov
test
aad
daa
loop
mov
cmpsb
in
jbe
scas
cmp
mov
lcall
lock
cmp
mov
dec
aas
mov
cs
and
jo
sarl
inc
mov
scas
jne
test
in
cmp
inc
add
push
cltd
and
out
push
xchg
mov
mov
and
pop
es
dec
sahf
jl
iret
jns
inc
cltd
lea
les
mov
pop
push
or
sbbb
adc
jp
xchg
lahf
adc
mov
ds
jmp
mov
cmc
fadds
sub
jns
fadds
jnp
testl
adc
xchg
fwait
and
xor
dec
lods
xchg
aaa
and
mov
xchg
rcrl
pusha
sbb
inc
inc
inc
enter
add
or
or
leave
adc
or
inc
ret
and
cltd
jo
movsb
ds
cmp
add
rolb
add
fsts
add
or
jae
nop
or
fidivrl
lret
into
iret
push
scas
pop
ja
in
pusha
pop
xchg
sub
in
sub
or
aaa
ljmp
test
push
popa
in
inc
int3
sbb
test
loopne
push
pop
xchg
jge
bound
repz
pop
lods
sub
test
movsb
cmp
bound
push
scas
inc
cmp
adc
inc
icebp
rcrb
mov
xor
xchg
notb
add
jb
mov
pop
es
xchg
data16
lods
lock
lcall
out
arpl
icebp
xchg
mov
int
inc
mov
test
sbb
mov
cwtl
mov
pop
mov
cmpsb
adc
cli
test
xor
push
scas
fistpll
pop
xorb
push
xor
xchg
dec
inc
inc
jo
mov
rcrl
mov
insl
jecxz
into
push
xchg
mov
push
in
or
jg
into
mov
adc
addl
iret
cmpsl
scas
fs
aaa
stos
fistps
mov
jle
ficoml
iret
cmc
xor
jle
movsb
mov
rorb
jge
pop
repz
mov
inc
push
aad
pop
repz
je
std
fidivrs
cmpsb
int3
mov
xor
pop
cmpsl
fmull
mov
roll
fnsave
pop
in
movsl
push
je
fsubp
test
pop
mov
jnp
push
pusha
insb
mov
sbb
jno
test
scas
aas
movsb
adc
rcr
lahf
sub
push
gs
mov
xor
xor
inc
call
lea
pop
push
jne
add
sub
lahf
insb
es
ror
enter
repz
arpl
xor
mov
and
mov
push
aad
sub
loopne
xor
aaa
mov
xchg
jbe
sub
dec
jle
fistl
mov
push
pusha
xchg
push
add
mov
add
push
or
jo
inc
fildl
jle
outsl
dec
cmpsl
ret
daa
fisubrs
or
and
push
dec
mov
xchg
popf
repz
lods
add
inc
into
mov
adc
push
push
movsb
adc
in
outsb
in
jle
js
mov
loop
icebp
or
enter
aam
mov
pop
jl
pop
sub
icebp
sahf
add
aam
cmp
jns
lret
or
mov
test
dec
mul
mov
fldlg2
jle
mov
pop
xor
sti
mov
das
sub
imul
fsubl
lds
inc
cmp
in
jle
jg
popf
cli
hlt
cmp
pop
mov
add
sbbl
xchg
ret
mov
cmp
fldt
ret
mov
mov
testb
mov
outsb
cmp
add
aad
jmp
sbb
push
add
pop
adcl
je,pt
ds
push
pop
xor
jns
pop
push
leave
xor
sub
shll
dec
xor
in
dec
pop
push
mov
fdivr
cmp
lahf
pop
and
mov
pop
scas
xor
in
movsl
xchg
add
lods
mov
stos
fdiv
xchg
cmpsl
movsb
hlt
fmull
jb
add
mov
and
adc
lcall
outsl
jp
idiv
dec
or
push
loope
push
mov
xchg
pop
insb
mov
inc
or
out
push
sub
inc
xlat
mov
sbb
in
inc
test
inc
or
push
ret
std
mov
mov
pop
xor
push
out
cli
aaa
sbb
push
shrl
mov
or
dec
loop
dec
mov
pop
lcall
jne
cs
mov
pop
rclb
scas
movsb
jo
stos
mov
lock
fsubrs
andb
cmpsb
fcmove
pop
mov
nop
mov
sbb
mov
clc
ror
jns
cwtl
adc
cld
mov
fcomip
int3
fidivs
and
shlb
sahf
or
pop
mov
or
and
dec
mov
xchg
inc
fldenv
xchg
sar
in
clc
or
pop
dec
xlat
bound
dec
clc
getsec
nop
mov
scas
sub
pop
icebp
sti
and
repz
mov
aas
xchg
mov
les
hlt
jno
imul
xor
mov
mov
mov
mov
jno
imul
testb
scas
cmp
test
sbb
jge
sbb
cld
inc
icebp
out
sub
movsl
in
mov
in
lsl
pop
pop
movsl
pusha
sub
inc
mov
xor
imul
pop
cld
imul
shll
and
scas
mov
ret
cli
sbb
test
outsl
mov
fsts
mov
sbbb
xor
pop
and
shll
adc
sti
or
fstpl
fcomps
mov
das
sbb
push
dec
insl
int3
add
lods
pop
out
ja
mov
addb
cmp
in
int
stos
push
lret
iret
lret
int3
jge
inc
movsb
jle
das
shlb
std
pop
ret
inc
cli
sub
negb
xorl
aas
je
or
xchg
or
sbb
xchg
je
push
add
inc
nop
jb
icebp
sar
out
dec
ret
das
inc
bound
fs
fidivrs
xchg
int
frstor
mov
jo
jg
popf
and
pop
mov
das
movsb
mov
leave
xor
fildll
mov
and
jmp
dec
mov
or
push
shl
mov
ja
int
sahf
mov
or
cwtl
pushf
mov
loope
clc
inc
sub
lods
adc
mov
dec
push
or
inc
xor
xchg
imul
mov
lods
arpl
and
xchg
jl
repnz
xor
lock
sti
jb
mov
jns
mov
adc
int
aam
loopne
and
cmp
scas
push
add
cmp
inc
or
mov
adc
ja
xchg
dec
mov
xor
sub
jne
xchg
adc
int
jmp
lcall
pusha
into
pop
add
fistps
ret
push
cmp
xchg
outsl
lods
pop
or
lea
mov
xchg
or
jg
cli
sbbl
pop
aam
test
mov
out
pop
push
sub
sahf
sub
and
incb
sub
rcl
add
or
push
test
ljmp
fldcw
or
or
and
dec
dec
clc
or
dec
jmp
subb
cmpsl
out
lods
xchg
ja
popa
adc
push
cmp
popa
fisubl
inc
jg
jne
shlb
fnsave
mov
jno
ficomps
jle
in
into
clc
sbb
cmp
outsl
out
add
xor
insl
xor
mov
mov
ret
cwtl
lret
mov
pop
xor
mov
std
xchg
sbb
or
pop
bound
push
pop
pop
ss
sub
cmpsl
jo
ljmp
or
insl
mov
dec
dec
add
pop
and
pmulhw
shl
fstp
in
or
shrl
sub
int
out
cmp
jb
push
cmp
aas
mov
fmull
cmp
stc
push
jmp
fmull
or
mov
loopne
test
push
or
push
adcl
lret
sub
cmp
xor
or
sbbl
inc
sub
cmpsl
lock
xchg
scas
int
mov
add
mov
in
and
call
adc
addr16
push
roll
movsb
xchg
ljmp
jecxz
es
dec
mov
int3
inc
sahf
fisubs
mov
int3
stos
imul
mov
fistps
xchg
les
xchg
insl
dec
arpl
stos
in
jle
cmp
push
and
or
cmpsl
sbb
sbb
mov
out
ja
fiadds
inc
xchg
jge
mov
pop
sub
jecxz
leave
xor
in
pop
and
inc
cwtl
xor
dec
lcall
jle
pop
mov
jmp
sbb
ret
push
es
and
dec
mov
add
or
ss
or
das
dec
js
fbstp
sbb
sub
cli
cmp
sub
pushf
shlb
cld
lds
fbld
ss
pop
les
push
in
imul
ficoml
mov
pop
mov
jno
inc
sti
sub
add
cwtl
sbb
aas
stc
lret
mov
rcrb
mov
inc
and
fisubl
push
jle
ds
mov
mov
and
add
lods
add
or
xor
mov
sbb
xchg
cmp
push
roll
mov
xchg
pop
sbb
add
dec
xor
aaa
inc
movsb
addr16
sub
or
xor
dec
jle
push
dec
mov
pop
push
add
or
test
dec
push
and
mov
rcll
push
insl
icebp
data16
jnp
ja
cltd
stc
adc
add
je
mov
shr
dec
arpl
jns
dec
push
sbb
arpl
inc
fisubl
mov
add
cmpsl
es
jns
inc
xchg
adc
rclb
xchg
adc
mov
jge
outsl
xlat
arpl
testb
or
pop
inc
data16
sbbb
xorb
ret
pop
push
shr
and
pop
xchg
pop
xor
gs
out
xchg
sysenter
jbe
cmp
jb
pop
lret
push
cmp
jmp
fldl
and
in
xchg
add
loope
sbb
mov
jno
int
fisubrs
jns
cli
push
fwait
lods
inc
xor
sbb
fisttps
cmp
push
sbb
pop
xor
stc
stc
in
mov
push
das
leave
icebp
adc
aaa
dec
mov
sbb
aad
mov
nop
in
pop
in
or
ror
icebp
or
mov
rcrb
push
mov
mov
mov
movsl
pop
addl
cmp
idiv
xchg
sub
pop
push
sbb
pop
dec
xor
ret
sbb
xchg
aad
mov
mov
fmuls
jbe
mov
adc
inc
int3
shlb
enter
add
cs
jb
lcall
dec
mov
cmp
adc
addl
cmpsl
pushf
or
outsl
jp
ret
das
imul
enter
rol
aas
jmp
xchg
push
pop
inc
jbe
jae
dec
jge
jnp
setne
pop
dec
out
add
clc
stc
adc
loope
xchg
jb
lock
push
dec
movsl
ljmp
mov
ja
jecxz
jno
cmp
add
dec
in
mov
pop
and
and
hlt
xchg
pushf
jnp
imul
jle
mov
add
imul
xor
xchg
pop
pop
rcll
mov
push
lret
mov
mov
and
xchg
iret
inc
repnz
mov
push
or
jns
lahf
movsl
insb
jbe
xor
and
push
lcall
enter
daa
fisttpl
mov
sbb
xchg
push
sub
inc
dec
xchg
or
xor
into
test
rclb
cmp
mov
jbe
out
or
add
mov
imul
fwait
mov
lock
adc
mov
test
pusha
sbb
sub
ja
movq
mov
aam
xchg
and
pop
aas
sub
mov
adc
aam
xor
adc
dec
or
or
dec
inc
aaa
xchg
sub
jecxz
outsb
addr16
fidivrs
inc
inc
call
das
mov
fndisi(8087
sub
cltd
in
fildll
ljmp
sbb
or
cs
push
inc
sbb
ds
jnp
jg
call
add
push
cmpsl
fdivp
je
pop
scas
pop
call
addl
imul
jge
xor
mov
scas
or
mov
add
andb
cvtdq2ps
pusha
dec
jne
das
mov
jge
out
in
fs
jae
mov
imul
aaa
fsubrl
imul
sbb
adc
lret
pop
fidivrs
test
ss
pop
adc
imul
repnz
dec
mov
imul
pop
lea
sbb
fwait
add
and
in
pop
push
jp
dec
test
sarb
mov
or
jg
mov
movsl
out
lods
bound
and
lock
dec
and
cltd
mov
dec
inc
pop
mov
imulb
dec
adc
inc
test
jp
pop
sub
cmp
mov
jle
out
jns
into
ret
test
jecxz
pop
pop
popa
xor
pop
jle
outsl
roll
xchg
test
dec
arpl
dec
repz
and
sub
aas
das
sub
xchg
out
mov
xchg
pop
lea
xchg
icebp
fidivs
xor
cld
imul
xorb
lcall
adc
out
rolb
xor
push
pop
popf
jge
movsl
sub
mov
or
xchg
stos
in
imul
out
mov
sub
idivb
dec
add
inc
adc
pop
push
adc
mov
and
leave
pop
lock
inc
scas
push
jecxz
pushf
adc
test
sarl
pop
or
adc
daa
mov
mov
inc
lcall
mov
push
popf
xor
ds
pop
cmp
ljmp
xchg
cmp
lods
iret
push
fisubs
mov
xor
sub
push
mov
mov
in
je
xor
addr16
xchg
or
gs
aas
mov
xorl
insb
scas
sti
aad
adc
inc
pop
cld
or
clc
stos
mov
xor
clc
xchg
sti
scas
icebp
xor
push
enter
outsb
mov
and
mov
test
dec
xor
push
and
ret
je
mov
sahf
adc
test
add
test
fidivrs
and
popf
mov
xchg
inc
cmp
jns
imul
test
mov
stc
add
or
mov
dec
lcall
lcall
cmpsb
cmp
sub
scas
cmp
jae
bound
pop
inc
xlat
repz
jmp
test
je
mov
lret
mov
mov
dec
pusha
leave
test
dec
cwtl
data16
in
ret
mov
xor
xor
iret
and
jmp
lea
mov
adc
mov
add
enter
std
jl
sarl
pop
out
outsl
add
xor
rcll
sub
rolb
loopne
sub
ljmp
xlat
xchg
orb
inc
mov
cmp
vandnps
pop
cltd
pop
and
je
and
adc
jns
push
sub
ljmp
ret
sub
lea
inc
pop
adc
popa
sub
fisttps
in
xchg
mov
push
imul
sbb
pop
ret
test
pop
mov
add
outsl
jns
dec
div
pop
push
push
test
imul
stc
scas
dec
popa
xchg
ss
sbb
mov
and
sub
ds
or
cmp
xor
das
xchg
out
push
push
enter
imul
mov
cmp
jp
and
aam
adc
scas
pushf
clc
mov
lock
add
pop
loop
inc
inc
cli
pop
jecxz
cli
sbb
imul
dec
int
jo
xor
pushf
or
mov
adc
stos
leave
pop
loope
sub
inc
stos
in
inc
dec
fwait
mov
mov
jo
jecxz
xchg
into
lret
sbb
fisubl
jmp
dec
sub
sub
insl
fcmovnu
jne
and
inc
jg
inc
lea
out
shll
dec
jo
and
xor
adc
aas
mov
int3
test
push
mov
cli
fsubrl
jae
sub
adc
xchg
sbb
xlat
aad
cli
into
shrb
mov
cwtl
addr16
or
jp
ja
mov
out
lds
pop
push
repz
mov
cmp
jg
cmp
maskmovq
mull
cmp
outsb
mov
sbb
and
outsl
mov
pop
cmp
inc
push
inc
ja
loop
ljmp
pop
sbb
daa
add
cmc
rorb
dec
mov
jno
popa
cmp
xchg
sub
pop
scas
lahf
lcall
es
lods
mov
cli
sub
cli
add
f2xm1
and
test
lcall
call
sub
pop
push
int3
sbb
shlb
adc
mov
and
icebp
movsl
jmpw
bnd
lret
mov
adc
andb
icebp
sbb
stos
and
ds
push
pushf
sub
nop
mov
and
jg
fwait
test
hlt
xlat
out
daa
stos
adc
adc
mov
lock
rcrl
or
mov
dec
mov
aaa
push
cmp
xchg
push
adc
add
sub
out
inc
inc
sbb
jmp
ja
adc
xchg
push
dec
sahf
insb
adc
insl
ret
es
mov
aam
orb
mov
sysenter
fsubl
jns
in
sbb
pusha
jae
jl
and
xchg
mov
ja
lds
dec
adcl
pop
test
inc
ror
dec
adc
mov
push
add
decl
add
jecxz
mov
xchg
jnp
sub
int3
aas
xchg
out
addl
sub
mov
cs
enter
fsub
es
fistps
or
ljmp
scas
xchg
inc
sbb
fistps
mov
daa
pop
loope
push
xor
xchg
xchg
icebp
xor
pop
pop
and
or
cmp
or
or
enter
jbe
push
cmp
dec
mov
or
orb
push
and
dec
in
sbb
sbb
or
adc
fisttps
dec
adc
mov
xchg
std
in
es
hlt
lea
jecxz
scas
inc
aas
sahf
popf
xchg
adc
jnp
pop
js
int3
out
cmp
dec
sub
dec
pop
jecxz
pop
xor
jmp
fs
scas
into
mov
fstl
mov
sub
sub
add
shll
andb
sti
pop
test
aaa
xor
sub
das
test
ss
cwtl
call
ljmp
int
test
ret
test
aad
repnz
pandn
adc
cmp
mov
ljmp
ds
push
and
cltd
adc
gs
in
es
dec
fisttpl
pop
mov
and
dec
push
inc
orl
pop
and
aad
sbb
dec
xor
lcall
mov
movsl
cli
ret
and
jne
xchg
sbb
jge
sarb
inc
mov
inc
inc
mov
sbb
xor
jno
mov
out
adc
mov
test
mov
divb
or
lea
mov
sbb
fldt
inc
push
gs
test
loope
sbb
gs
cmp
adc
das
outsb
cmc
and
push
jae
dec
xchg
int
aaa
xlat
mov
xchg
and
mov
push
push
arpl
aaa
outsl
stos
sbb
aad
jg
push
pop
aas
in
js
mov
cmp
frstor
orl
outsb
popa
je
dec
movsb
outsl
pusha
jnp
mov
mov
or
mov
jno
mov
aas
sti
adc
xor
mov
adc
test
push
jp
mov
pop
cmp
sub
sbb
pop
into
xchg
adc
add
mov
out
mov
setl
mov
dec
enter
gs
mov
pop
and
pop
and
and
out
lret
or
push
mov
mov
pop
loopne
enter
mov
clc
pop
xchg
test
xchg
clc
mov
scas
push
sbb
insb
aad
jae
pop
testb
hlt
subl
aaa
add
loope
loope
fwait
xchg
shll
loope
inc
mov
adc
inc
or
sub
mov
lods
mov
mov
mov
int
aam
inc
adc
mov
testl
mov
insb
xor
and
pop
xor
into
mov
js
std
mov
imul
in
mov
add
inc
sub
pushf
sahf
fcomps
cmp
mov
out
loope
adc
sub
jl
fwait
sub
push
and
jmp
shrl
orb
cmp
cmp
cmp
fwait
enter
in
or
push
push
xchg
sub
and
sub
fdivr
cmp
pusha
mov
xchg
add
cmc
sbb
pop
sub
xor
mov
push
cld
inc
push
pop
and
inc
test
cli
inc
iret
jae
aas
lods
or
cmpb
loope
jae
jo
pop
dec
cmp
aas
mov
fcmovbe
dec
xor
mov
lahf
or
out
xchg
xchg
xor
cmc
cmpsb
bound
push
pop
dec
mov
bound
push
rol
mov
cmp
aam
push
xchg
or
idivl
xor
pop
rorl
repz
jb
repnz
jmp
cltd
cmp
nop
in
in
adc
fidivrl
jo
loop
aam
xchg
pop
dec
mov
xchg
jne
dec
and
arpl
sarl
and
mov
cld
testb
push
stos
and
scas
leave
xchg
mov
pop
cmp
je
cmp
push
inc
mov
sbb
push
test
fidivrl
ficompl
mov
jae
lret
loop
jnp
pop
push
sub
movsb
sub
jno
fnstcw
test
cmc
inc
adc
outsb
icebp
add
lea
pop
lods
xchg
jno
and
cmc
sub
cli
data16
fimuls
sbb
mov
pop
ret
call
mov
out
lahf
cmp
hlt
sub
sti
mov
nop
insl
xchg
xor
push
test
sti
xor
test
cmp
lea
addr16
sbb
enter
rclb
pop
and
xchg
jle
es
sbb
mov
inc
lcall
popa
xchg
aad
addr16
or
ficompl
clc
aam
gs
fs
insl
lahf
aas
js
lret
sbb
push
mov
jg
outsb
mov
movsb
and
lods
add
es
xor
xchg
cmpsl
int
sbb
push
fidivrl
sarl
and
add
rcrl
mov
sbb
jecxz
lcall
fmul
mov
fmuls
or
sub
xchg
mov
mov
movsl
or
bound
out
test
adc
xchg
cmp
mov
aas
je
and
or
loopne
pop
scas
pop
mov
cmc
push
aam
add
mov
mov
push
sub
dec
pop
test
mov
outsb
pop
cmp
adc
add
arpl
sub
cld
lret
xchg
out
cmpsb
loopne
ds
or
fisubl
lret
mov
fldcw
fstpl
xchg
sbb
loop
push
push
and
pop
rcl
jecxz
adc
dec
out
cltd
dec
lods
loope
sub
mov
push
jne
pop
mov
mov
iret
ret
sub
push
or
xor
mov
mov
xchg
mov
lea
inc
or
lds
push
ljmp
cmp
sub
inc
daa
dec
ret
pop
jge
xor
add
cmp
adc
fimull
sbb
jb
add
xchg
push
and
js
cmp
sbb
cmc
loope
jg
and
push
xor
adc
aam
sbb
adc
es
sbb
repnz
insl
jmp
add
stos
sub
cmpsb
xorb
movsl
and
lock
xlat
xchg
sub
xor
cld
xchg
incl
mov
mov
subl
dec
xor
aam
lret
xor
push
orl
hlt
adc
cmp
and
shrb
repz
nop
cmpsl
fdivl
jmp
sti
mov
inc
bound
xchg
mov
fwait
jp
mov
int
mov
cmp
loopne
rcl
mov
push
cmpsb
adc
insl
pop
add
xor
ret
or
adc
cmpsl
push
inc
mov
pop
pop
cmp
adc
lods
aaa
aaa
mov
mov
pusha
adc
push
imul
pop
jge
shlb
into
pop
xchg
adc
inc
push
inc
loope
add
neg
xor
mov
mov
inc
repz
mov
movzbl
jmp
xor
pop
and
fmull
ja
mov
jne
fistl
fidivrl
push
jb
and
jns
mov
cmp
rcrl
pop
pop
repnz
dec
pop
mulb
cld
mov
mov
xor
push
out
aam
mov
or
cmc
sbb
push
mov
xchg
mov
sbbl
jb
test
mov
sti
xchg
rclb
add
iret
insb
adc
pop
pop
pop
sub
cmp
inc
cmp
adc
inc
addr16
fwait
mov
lods
ret
or
in
inc
mov
sbb
mov
sub
stos
addr16
mov
jmp
or
sti
cs
jecxz
adc
pushf
cmc
sbb
jbe
cld
js
popa
cmp
pop
call
dec
rorl
pop
mov
and
or
out
jg
mov
loop
dec
cmp
mov
add
mov
out
mov
les
imul
into
mov
ss
lahf
sub
push
sub
popa
je
fisttps
int
ss
jno
stos
jmp
fs
jp
shrl
sar
insb
adc
cmp
push
in
sbb
lods
sub
ds
sub
inc
fcmovnu
test
out
push
add
shlb
jecxz
test
mov
sub
push
shll
mov
arpl
shr
mov
sbb
mov
in
cmp
or
cmp
aad
cmpsl
jecxz
out
shlb
rorl
addr16
xchg
xchg
xchg
pop
loopne
and
push
adc
mov
lds
push
int
lods
sti
jg
ret
inc
and
inc
mov
push
ss
movsl
repnz
lods
pop
fcmovb
push
out
and
mov
adc
mov
out
mov
jnp
popf
and
cmp
bound
addr16
in
pop
mov
add
in
mov
das
lret
push
stos
mov
dec
sbb
jge
repz
loop
unpckhps
stc
ficomps
pop
je
cmp
jo
xor
outsl
popf
lods
and
test
cmc
and
dec
sub
mov
andb
xor
fdivrl
icebp
out
das
mov
mov
inc
test
cmp
push
lods
jno
out
jne
fcomi
push
imul
ja,pt
lret
dec
loopne
sbbb
je
fwait
dec
repz
loop
nop
fiaddl
push
lods
xchg
jbe
xlat
push
jo
and
lret
jne
add
ret
sahf
sbb
inc
mov
scas
inc
jge
add
movsb
ja
sahf
pushf
pop
out
outsl
jno
and
lret
mov
inc
je
or
inc
stos
xor
mov
sbb
sbb
mov
test
in
mov
pusha
popa
adc
mov
mov
call
mov
fmuls
ljmp
inc
sbb
fidivrl
mov
sarl
add
jmp
mov
cs
cmp
pop
and
push
add
mov
mov
pop
lret
dec
push
sbb
xchg
lret
mov
add
popa
and
jno
jecxz
in
out
jno
fidivrs
testl
rclb
xchg
or
mov
fs
popa
icebp
mov
pop
push
out
in
push
jle
aas
test
push
inc
lea
pop
inc
mov
inc
push
movsl
mov
sbb
icebp
les
cmp
push
sbb
mov
clc
ja
or
in
mov
movsl
mov
sarl
xor
xchg
mov
lds
enter
pop
nop
out
inc
call
push
push
cmp
adc
inc
sub
mov
mov
xchg
xor
jp
mov
jb
bound
mov
mov
dec
repz
iret
mov
pop
out
sahf
cwtl
mov
mov
daa
inc
or
imul
dec
mov
pop
and
mov
sbb
pop
mov
jnp
jnp
or
subb
sub
test
and
mov
mov
lret
arpl
cs
jno
sbb
subb
jnp
adc
ss
jl
iret
pop
sbb
or
cmp
iret
adc
out
dec
push
fxch
mov
int3
sbbl
push
jge
push
ret
push
ret
jge
in
fs
jg
mov
sub
call
mov
mov
add
mov
xor
outsb
loop
test
sbb
mov
add
rorb
lahf
sbb
stos
mov
jne
push
sbb
jg
loope
aaa
mov
rclb
out
cmpsl
test
fsts
mov
pop
cmp
xor
fistps
imul
callw
sbb
inc
lcall
and
dec
fldl
das
test
cld
negb
cmp
push
pusha
push
push
std
movsl
add
sarl
or
movsb
frstor
adc
sbb
lret
jno
sbb
cltd
jo
cmc
cmp
in
push
icebp
push
andl
add
imul
add
push
jbe
in
mov
and
mov
pop
sarb
in
aam
push
loop
xchg
inc
jge
imul
lock
push
or
add
and
ljmp
leave
aas
xchg
arpl
rolb
and
rcll
xor
test
or
ds
adc
cmp
sub
mov
stos
je
fbstp
sahf
mov
sbb
das
jns
inc
mov
cld
push
mov
cmc
cwtl
filds
mov
mov
jle
mov
fnstcw
dec
test
cld
and
dec
xor
in
das
in
inc
xchg
leave
cmp
mov
mov
push
pop
xchg
mov
or
xchg
out
test
cli
out
ds
jo
nop
mov
jmp
adc
sbb
das
xlat
aad
sbbl
loopne
mov
xlat
js
inc
cmp
orl
dec
das
dec
jmp
pop
test
loop
in
addr16
jno
or
xchg
push
aad
mov
push
out
dec
pop
jmp
fisttps
roll
orb
jmp
mov
mov
add
xchg
mov
push
jnp
sahf
loope
cwtl
pop
inc
and
out
sarl
add
jnp
mov
or
ds
jae
add
mov
imul
sub
mov
imul
mov
pop
outsb
jns
enter
mov
jp
inc
sbb
cld
into
bound
lock
xchg
lods
xchg
or
mov
scas
add
cltd
int3
xchg
addb
inc
and
cmpsl
xchg
jbe
cmpsb
fiaddl
or
add
push
loopne
pop
ljmp
jmp
sub
scas
pop
cmpsl
aas
notb
jle
nop
push
popaw
inc
jns
lock
push
and
pop
clc
mov
adc
movsb
sbb
das
dec
add
mov
mov
sbb
xor
mov
cld
inc
movl
popa
mov
lods
pop
popf
cld
movsl
xchg
out
imul
popf
pusha
js
xchg
xchg
jge
inc
jg
mov
pop
or
leave
cmpsl
repnz
nop
outsb
repnz
mov
cld
jo
pop
xchg
ss
jb
xchg
mov
adc
sbb
sbb
jmp
imul
in
jle
in
push
lea
jo
aaa
dec
push
add
mov
loop
mov
jne
inc
and
mov
js
sbb
test
iret
call
inc
inc
inc
and
push
or
arpl
cmp
xchg
dec
jg
mov
out
xor
mov
sbb
clc
sahf
idiv
add
xchg
icebp
repz
jg
sbb
mov
int3
cwtl
out
lret
mov
fstpl
addr16
mov
bound
jl
jae
mov
cmp
dec
pop
jne
popf
jecxz
adc
push
sbb
out
mov
out
aas
outsb
mov
and
lahf
sub
mov
cmpsl
mov
int
mov
dec
inc
sbb
pop
js
push
jecxz
and
sub
loopne
dec
push
or
mov
xor
call
push
mov
mov
movsl
pop
into
lret
cmpsb
call
std
cld
cmp
sbb
test
push
sahf
push
cli
cmc
popf
jns
pop
ds
jae
inc
sbb
test
adc
push
lock
movsb
xchg
fs
aaa
jae
outsl
jne
mov
adc
cmp
push
push
sub
dec
sahf
xor
jb
lods
cmpsl
mov
mov
sub
jl
aas
rolb
jbe
call
out
adc
js
std
cmp
les
iret
in
push
enter
sbb
dec
test
mov
cmp
int
outsl
push
ficomps
sbb
repz
dec
outsl
in
test
jb
iret
push
mov
mov
test
lods
mov
mov
sbb
mov
or
aam
push
js
out
sbb
je
cmp
int3
add
push
cmp
movsb
std
andb
jne
cmp
arpl
shr
jmp
pop
xchg
stos
stos
ret
sbb
out
dec
outsl
inc
repnz
mov
js
mov
loopne
push
mov
insl
and
add
push
stos
cmp
mov
sub
or
js
add
in
faddl
dec
push
and
or
enter
add
cmp
stos
pop
clc
xchg
aaa
mov
out
dec
inc
push
push
mov
or
imul
iret
mov
jnp
xchg
fwait
into
stos
cli
mov
add
or
inc
jecxz
inc
movsl
ret
in
xchg
lcall
mov
stos
xor
pop
ficoml
sub
fwait
add
outsl
fisubrl
in
pop
xchg
and
stos
gs
lret
clc
lods
jge
mov
lock
dec
mov
jp
fldl2t
pop
cmpsb
adc
inc
fcoms
daa
dec
sbb
or
cmpsl
sbb
xor
add
cmp
lods
xlat
pop
cs
cmpw
daa
mov
xchg
xor
rorb
lret
and
cmpsl
dec
movsl
cmp
xchg
dec
int
ss
out
in
pop
flds
lea
fidivs
push
pop
xchg
lods
jb
inc
loope
aas
mov
insb
jmp
in
rcll
out
arpl
rcll
ds
jle
mov
jae
and
sbb
or
int
dec
out
dec
push
lahf
push
gs
aas
xchg
mov
xor
pop
mov
push
fdivs
decb
mov
mov
sahf
dec
push
loopne
adc
clc
sub
mov
aas
or
or
and
xor
jns
jns
jmp
insb
and
imul
pop
xor
jp
dec
mov
nop
sbb
inc
jle
sarl
gs
out
addr16
imul
mov
sti
dec
data16
insb
or
sbb
mov
xor
fiadds
pop
mov
lods
les
pop
xlat
into
jne
push
xchg
ret
insb
pop
jnp
ja
enter
inc
sbb
xchg
lods
pop
lahf
icebp
in
xchg
sbb
cmp
fs
jae
imul
es
jbe
xchg
push
cmp
mov
jae
mov
jno
cmp
jle
movsl
jno
mov
inc
sti
movsb
mov
imul
ret
sbb
xchg
push
mov
nop
inc
rorl
push
lahf
out
inc
iret
mov
pop
xchg
mov
ret
loope
or
adc
xchg
jecxz
mov
test
movb
xor
sbb
imul
stos
je
cld
popf
and
cld
pop
fisubrl
inc
mov
out
sti
mov
adc
add
inc
pop
outsb
sub
cmp
inc
aam
pop
mov
insl
movl
je
loop
sbb
and
ret
dec
ss
pop
adc
adc
push
mov
adc
or
fstps
xor
int
and
cmp
out
push
or
inc
xchg
scas
add
sub
jle
movl
mov
push
repnz
lcall
mov
add
scas
pusha
jmp
lcall
pop
push
popa
mov
int
rclb
arpl
rcrl
inc
jge
outsl
test
repz
aaa
stc
add
add
fst
idivb
sub
insb
cmpsl
cwtl
aam
pop
ret
mov
xlat
add
cmpsb
jb
push
jle
jno
sub
xor
cmpsl
mov
or
xor
jo
mov
loop
xor
jne
out
jmp
sub
psadbw
pop
hlt
cmp
out
stos
and
sbb
pop
insb
lods
mov
jmp
in
psubusw
mov
bound
or
pushw
mov
and
repnz
dec
mov
imul
add
addr16
adc
imul
orb
bswap
jo
popa
mov
push
or
ja
aas
stos
push
xchg
xlat
mov
push
loop
sub
xor
fistpll
adc
mov
push
inc
jmp
xor
addr16
pop
sub
arpl
inc
repnz
pop
stos
inc
fldt
fstps
out
xor
or
orl
add
inc
cmpsl
cli
mov
ss
xbegin
push
sahf
leave
push
inc
jb
addr16
pop
pop
popa
fisttps
int
pop
mov
or
movsl
cmc
in
dec
daa
or
mov
push
mov
jne
sbb
push
rorb
add
adc
adc
push
movsb
das
mov
andps
andb
mov
push
repnz
iret
fiadds
lock
cltd
aam
jle
enter
cmp
adc
inc
pop
cli
or
pop
dec
dec
int3
int
into
lcall
imul
js
xor
mov
aas
aad
xor
pop
and
xor
dec
ficompl
xchg
cmpl
int3
add
in
and
call
jno
xor
mov
int3
mov
mov
jo
pop
push
dec
sbbl
xlat
ds
xlat
stc
test
push
lcall
movsl
jns
inc
push
dec
lods
stos
lods
fwait
orb
fmulp
test
imul
push
mov
pushf
lods
pusha
push
xlat
mov
test
cmpsb
pop
jne
xchg
hlt
push
fwait
aaa
int
neg
mov
stc
pop
stos
stc
pushf
cmp
cs
cld
mov
arpl
push
mov
out
pop
push
rclb
in
cld
pop
ss
xchg
aas
add
icebp
cltd
repnz
shll
int
out
or
cmp
mov
fisubs
xchg
jns
mov
ljmp
jne
xchg
pushf
mov
or
les
movsl
adcl
js
and
aas
dec
out
xchg
insb
aad
out
mov
ds
xchg
ljmp
hlt
hlt
pop
into
mov
rcl
jae
mov
scas
aad
and
and
sbb
mov
in
pusha
lods
fwait
clc
xor
out
notl
shl
push
repnz
addl
pop
arpl
adc
xlat
dec
mov
xchg
xchg
sti
call
hlt
idivl
mov
imul
pop
cmp
scas
outsb
lods
leave
mov
test
sarl
sarl
mov
int
mov
cmp
movsb
aaa
repz
nop
xor
lock
pushf
pop
aad
push
mov
and
imulb
inc
push
inc
hlt
ja
test
xor
xor
adc
mov
mov
cmp
enter
or
push
cli
sbb
xchg
test
test
and
iret
sbb
shrb
pop
and
add
lock
fcmovnb
xchg
dec
or
cmc
mov
mov
add
ficoms
sbb
pop
shlb
cld
mov
push
xor
scas
mov
or
dec
push
dec
lock
xor
jne
aad
or
push
xchg
add
cltd
mov
bnd
es
xchg
sbbb
add
xor
adc
and
dec
jp
pop
mov
iret
and
jecxz
mov
cmpsl
lods
adc
fcom
jle
add
xchg
xor
xchg
out
lock
lret
popf
lds
lock
fs
jge
lret
shll
call
les
inc
out
popf
mov
cld
daa
aaa
add
xchg
mov
or
adcb
scas
fisttpll
jg
js
jb
pop
sub
fstps
sahf
jg
lahf
gs
out
mov
ret
lret
nop
cmp
cmp
mov
xlat
gs
inc
pop
or
mulb
arpl
subb
cmp
xorb
and
cs
int3
pop
lods
xor
or
dec
aas
cltd
imul
adc
sahf
pextrw
pop
test
sarb
add
sti
pop
xlat
xor
jns
mull
cmp
add
sub
test
sbb
xchg
or
sub
insb
test
xor
or
fucomi
outsb
pusha
xlat
mov
inc
pop
loop
sub
pop
fimull
rcll
sub
cmp
and
xlat
rolb
xor
rorb
jb
jmp
cmp
stc
and
frstor
dec
cwtl
mov
out
lock
divb
sub
xor
mov
mov
dec
mov
xchg
int3
push
fnstsw
sbb
and
adc
add
iret
repnz
adc
lcall
lahf
and
or
popf
in
lar
pop
loop
xchg
mov
add
xor
je
xchg
lea
inc
ror
cmp
or
sbb
xor
xor
clc
fisubrl
jnp
pop
mov
test
insl
cmp
clc
adc
lods
fdivr
xchg
inc
nop
mov
add
add
or
lret
in
xor
lods
lcall
je
dec
loop
inc
movsl
mov
es
xorl
fdivrl
push
loopne
call
pop
insb
cmp
pop
jl
rcrb
loop
sub
incl
addr16
lcall
inc
fdivs
xchg
inc
mov
jle
aaa
sub
push
and
jns
pop
mov
int
push
out
xor
cld
fimull
sbb
int
sub
rcrb
inc
int3
sbb
pusha
push
test
adc
pop
inc
dec
lret
xlat
pop
cmp
mov
test
push
rcrb
add
fwait
loopne
repnz
add
out
add
jo
pop
outsb
jae
inc
sbb
mov
insl
nop
mov
mov
push
or
mov
mov
mov
pop
in
cmp
or
xchg
jns
mov
mov
push
or
xchg
lea
jge
pop
lcall
adc
mov
int3
aas
orb
lcall
mov
xchg
outsb
sbb
jbe
pop
das
add
bound
test
adc
pop
fistl
bound
jno
and
adc
in
sub
cld
add
lcall
adc
test
and
pop
xchg
sets
xchg
movsb
and
or
cmpl
movsl
testl
mov
add
lret
xor
mov
xchg
sbb
bound
popf
xor
insb
mov
sub
fmull
jnp
inc
mov
push
add
ljmp
ja
cs
mov
or
push
rol
aaa
mov
add
cmp
mov
fnsave
cmp
sbb
push
enter
pop
sbb
sub
sbb
push
sbb
movsl
lock
loop
insb
sbb
shrl
xchg
lods
sub
mov
cmp
add
mov
xor
inc
testl
aas
in
shlb
aas
lret
pop
add
stos
push
arpl
fisttps
xor
pop
jbe
mov
mov
mov
jae
testl
cmp
loop
sbb
mov
jg,pt
imul
iret
push
push
jo
idivb
cmpsb
rcrb
pop
xor
hlt
leave
adc
lahf
xor
movsl
cmp
xor
mov
inc
pop
das
rolb
lods
sbb
xchg
sub
lods
mov
sbb
imul
enter
cmc
jb
pop
loope
in
arpl
mov
orl
inc
xchg
ss
mov
shlb
pusha
inc
scas
shrl
mov
jnp
mov
dec
ja
cmpsl
inc
adc
and
jg
xor
add
movsl
or
add
fwait
popf
mov
mov
jae
decl
mov
popa
movsl
ljmp
sar
xchg
jl
push
jne
addr16
sbb
push
cmp
add
push
fmull
sbb
fidivs
out
pop
stc
filds
outsl
out
adc
mov
sub
test
xchg
xor
push
imul
mov
test
or
push
fidivs
sbb
sub
nop
mov
ja
in
sub
cmp
xor
sti
inc
jmp
daa
push
cwtl
ss
sbb
ds
ss
push
push
xchg
push
cmp
arpl
xchg
xchg
mov
jg
sti
hlt
add
repz
movsl
in
adc
fisubl
mov
push
xlat
jp
mov
gs
jno
ja
add
fiadds
mov
mov
push
iret
mov
fstpt
sub
fnstenv
or
pop
sbb
dec
jno
push
rorb
mov
ljmp
shl
pop
in
adc
popa
push
daa
or
jb
bound
jle
loopne
fbld
outsb
stos
adc
cmpsb
popf
sti
stos
pop
mov
sub
jo
sbbb
cmc
pop
push
jae
mov
mov
and
or
js
bound
cld
hlt
data16
rol
jg
idivb
sub
xchg
cmpsl
mov
jge
ret
push
push
ds
sub
arpl
dec
and
daa
inc
sbb
loopne
cwtl
cmp
pop
pop
fcoml
jg
push
mov
out
scas
xorb
mov
loop
sub
and
int3
ljmp
push
ss
push
enter
dec
mov
in
jne
jp
jge
push
xchg
test
xor
push
add
add
xchg
insl
mov
mov
lods
inc
mov
fcmovnu
mov
es
add
cmp
cmpsl
andb
fs
lods
cli
cmc
stc
fistpl
jbe
andb
out
je
dec
cmp
arpl
out
movsl
stc
insl
repz
fcompl
or
inc
int3
and
lea
fs
xor
mov
pusha
pop
shrb
sbb
rcrb
dec
mov
jmp
adc
iret
lods
inc
inc
int
in
push
mov
lahf
inc
adc
mov
gs
pop
push
jl
scas
lds
jae
and
loopne
jbe
test
shll
cmp
out
clc
sahf
and
fstpt
cmp
movzbl
enter
add
addr16
xchg
gs
or
outsl
cmp
add
pop
sub
mov
jnp
aam
sbb
push
pop
insb
mov
mov
fdivrs
mov
outsb
or
sub
nop
fcoms
sti
stc
test
cli
add
fadds
sbb
cld
mov
in
xor
bound
adc
mov
xor
pusha
mov
fadds
cmpsb
jb
push
pop
push
lret
mov
push
or
cmp
fldenv
sbb
lret
cmpsb
adc
pop
data16
imul
jae
pop
lret
iret
xchg
iret
insb
in
push
test
or
and
sbb
nop
mov
cltd
fildll
aas
cwtl
out
dec
sbb
enter
push
stos
outsl
inc
mov
in
cmp
iret
pop
mov
mov
aad
out
aaa
add
sub
aam
mov
js
test
movsb
jp
push
filds
or
out
dec
xchg
mov
inc
sti
lahf
testl
xor
int3
push
or
inc
ja
mov
fcmovnbe
fwait
mov
push
and
adc
fwait
in
repz
cmp
call
push
mov
cmp
inc
dec
push
jae
xchg
mov
dec
cld
dec
clc
push
jg
mov
mov
jbe
loop
inc
pop
mov
push
or
call
gs
imul
cmp
cli
push
add
gs
add
pusha
cmp
add
sbb
ret
xor
push
cmpsl
xor
mov
xor
shll
int
ja
xor
repnz
dec
or
push
stc
xchg
dec
xchg
stos
push
push
sub
outsb
dec
out
mov
int3
mov
mov
or
mov
push
or
or
sub
mov
cltd
pop
out
adc
add
mov
decb
add
jae
stos
stos
mov
dec
inc
push
jg
cmpsb
pop
aam
dec
push
or
mov
jne
stc
mov
negb
sbb
aad
or
inc
mov
cmp
clc
leave
sbb
out
addr16
test
xor
in
dec
mov
cmp
push
or
jle
ficoms
sbbb
call
scas
les
push
mov
pop
dec
pop
fstps
pop
mov
dec
add
push
ret
mov
in
mov
in
jp
pushf
icebp
mov
das
inc
dec
aam
jmp
pop
pop
mov
dec
dec
inc
lods
std
xorl
mov
in
sub
clc
sti
adc
mov
test
mov
xchg
inc
or
in
or
inc
jne
pop
shrl
idivb
fildll
stos
pop
aaa
ja
fistl
pushf
push
cwtl
pushf
mov
in
fstl
mov
dec
mov
sub
aad
imul
mov
mov
lock
dec
dec
sub
out
pop
inc
faddl
or
test
mov
dec
aas
es
and
pop
inc
popa
ds
sub
sbb
dec
pop
cmp
push
jge,pt
push
pop
push
lcall
iret
fidivl
jb
adc
xor
popf
bound
pushf
cmpsb
movsb
adc
jmp
arpl
scas
mov
leave
adc
fimull
shll
lock
ljmp
imul
sbb
lods
or
adc
xor
faddl
out
or
push
int
lods
je
outsl
test
lcall
push
cltd
xor
pop
jmp
jp
mov
daa
imul
aad
dec
pop
cmc
adc
dec
jo
and
call
xchg
xor
addr16
in
jno
int3
mov
js
outsl
sarl
std
les
add
add
jp
push
imul
dec
dec
xchg
sub
imul
pop
popl
push
adc
xchg
fldenv
out
cmp
xchg
les
cmp
stc
push
lcall
out
sbb
testb
pop
scas
mov
mov
leave
movsl
jo
int
movsl
scas
cli
push
out
test
inc
or
fcompp
inc
ss
and
add
out
flds
je
inc
xchg
jne
nop
mov
or
rolb
out
out
push
mov
subb
outsb
mov
out
cmp
push
pop
pop
inc
in
int3
push
pushf
test
clc
call
orl
xorb
test
or
mov
cmp
ret
imul
or
in
into
imul
dec
int
cld
jo
outsl
sub
inc
push
jecxz
jmp
sbb
ret
dec
icebp
test
cmp
adc
fbstp
lods
cmpxchg
push
out
jo
loopne
sahf
sub
adc
out
add
movsb
mov
xor
xchg
xchg
arpl
sub
push
adc
mov
and
loope
stos
mov
add
mov
jge
dec
pop
lods
dec
mov
inc
cmp
bound
push
fwait
mov
imul
push
and
pop
js
test
add
ljmp
jbe
out
xchg
fsub
imul
test
movsb
out
jp
hlt
jecxz
mov
repnz
mov
push
add
lret
xchg
xor
jno
or
call
addb
push
clc
fisubrs
mov
addr16
in
lea
in
out
test
mov
cmpsb
xchg
mov
stos
xorb
cwtl
push
jno
rcrl
cmpsb
loope
or
aam
lods
out
test
fisttps
data16
fisubrs
cmp
fists
dec
fwait
cmp
xchg
outsb
fdivrs
shlb
aam
pop
push
loope
mov
jno
mov
or
insl
xchg
jo
sub
popa
dec
dec
pop
insb
lea
rol
adc
or
jecxz
icebp
stc
andl
or
dec
fwait
inc
arpl
hlt
xchg
aad
cmp
fcmovne
scas
ret
sahf
adc
sub
fiaddl
fdivrs
cmp
lock
inc
stos
dec
inc
pop
mov
and
mov
iret
add
xor
pop
leave
movb
xchg
dec
mov
sti
add
imul
sahf
mov
jecxz
cmp
arpl
dec
add
fwait
adcb
mov
outsb
in
in
rep
mov
sahf
loope
movsl
ret
mov
insl
lea
aaa
lret
jge
sbb
dec
inc
inc
int
or
sbb
adc
sarb
sbb
or
call
push
sub
jmp
push
clc
movsb
mov
andl
pop
xor
pushf
js
jp
jbe
push
call
mov
call
js
adc
and
les
xchg
andb
mov
lea
mov
test
adc
xchg
sbb
jmp
pop
push
and
dec
addr16
bound
push
aam
sbb
add
lods
decl
icebp
or
lock
sbb
mov
jmp
lret
fsubrl
jae
popf
push
mov
ficompl
repnz
mov
dec
sbb
fdivrs
cmc
or
cs
inc
cmp
in
cltd
mov
mov
test
jecxz
int3
jecxz
push
sub
int
push
lcall
xor
xor
dec
icebp
nop
mov
xor
push
mov
adcl
push
adc
or
and
imul
xor
pop
mov
sbb
stc
sub
test
rolb
std
dec
stos
bound
outsb
xchg
aam
sub
mov
push
lds
bound
idivl
mov
mov
mov
pop
add
pop
sbb
jnp
test
jp
fcom
pusha
dec
jg
push
and
push
cmp
dec
push
xor
mov
insl
enter
data16
push
sub
fnstenv
add
jmp
sbb
sub
enter
mov
pop
mov
das
dec
jge
insl
ret
inc
daa
aad
mov
pop
push
adc
push
outsl
js
in
pop
shrb
adc
or
rcrl
dec
movsl
rcrl
aas
adc
pushf
inc
clc
js
in
int
pop
lods
inc
aam
pop
sbb
mov
xchg
in
addr16
add
dec
sub
pop
out
inc
popf
inc
shrl
mov
sbb
sub
into
adc
ret
mov
cmp
xchg
mov
pop
mov
iret
std
in
flds
stc
lcall
and
mov
pop
test
js
data16
sub
idivl
ja
push
mov
imul
pop
mov
sti
bnd
fisubrs
dec
js
popf
pop
and
inc
or
mov
shlb
cmpsl
bound
fwait
mov
sub
jnp
mov
sub
cmpsl
movsl
arpl
inc
xchg
js
mov
inc
sub
inc
jnp
je
lcall
out
jo
pop
push
popa
mov
imul
mov
cwtl
jne
inc
in
lock
sbb
xchg
sti
pop
and
in
outsb
or
mov
push
or
and
popf
dec
dec
mov
and
push
xor
popf
shlb
test
push
leave
pop
test
daa
repnz
pop
xchg
mov
loopne
add
cld
sbb
js
pop
ds
loope
or
mov
sub
lret
pop
adc
pusha
cltd
add
cmpsb
sbb
fstl
jne
pop
or
pop
into
movsl
mov
mov
mov
into
xchg
mov
or
lahf
push
addb
lahf
in
test
jno
in
loope
mov
add
cmpsl
mov
lcall
xchg
inc
or
mov
nop
mov
int3
fisttps
sahf
cmp
cmp
repz
fildl
sub
push
cmp
daa
fisubrs
mov
in
mov
out
ds
xor
call
and
pusha
ljmp
sub
dec
sahf
pop
xor
imul
lock
fwait
mov
cmp
lock
hlt
xchg
xor
mov
add
insl
ds
adc
fwait
inc
mov
pusha
arpl
fsubrs
mov
and
ds
mov
rolb
adc
shl
xchg
xor
mov
and
cld
data16
gs
arpl
jb
add
adc
ljmp
enter
or
cmpsb
and
mov
mov
int
xchg
cmp
sahf
jns
adc
dec
add
dec
test
shlb
stos
jno
scas
sbb
popa
sbb
mov
mov
mov
mov
arpl
out
push
out
rcl
add
and
mov
pop
mov
subl
testb
mov
daa
mov
adcl
push
fmul
mov
test
ffreep
xlat
adc
lods
inc
sti
cmp
adc
xchg
subb
nop
pop
push
or
clc
mov
lret
fs
pop
pop
dec
hlt
xchg
ret
mov
data16
xor
insb
jne
addr16
cmp
mov
sbb
jmp
push
pop
cld
xchg
sub
jb
mov
sub
pop
aaa
aad
xchg
mov
test
pop
fiaddl
std
ss
in
lret
sub
sarb
fucomip
add
pop
mov
jno
or
dec
dec
sub
dec
jecxz
inc
and
add
sbb
test
faddl
jmp
test
fisttpll
sub
mov
adc
push
mov
setge
stos
sbb
add
jae
sub
dec
popa
stos
mov
out
pop
addr16
ja
mov
xchg
xchg
mov
mov
fisubrs
clc
pop
pop
pop
sub
sub
push
and
enter
xor
orb
rcrl
xchg
lret
cltd
arpl
inc
fbstp
mov
cmp
fiadds
xchg
dec
and
dec
ds
shrl
popa
je
mov
leave
aas
test
sub
and
lcall
sub
cmc
pop
jle
or
push
pop
jl
pop
mov
jo
mov
outsb
add
addr16
mov
popf
shll
lock
push
xchg
nop
pop
mov
sub
xchg
fmul
dec
das
jbe
das
inc
mov
cmp
jo
test
jge
dec
mov
mov
rolb
pop
ret
lods
cwtl
and
aam
call
xor
mov
cs
inc
sub
mov
push
jae
adc
sbb
mov
rcll
in
aas
outsl
cmp
add
jns,pn
lods
mov
movl
pop
stos
cmp
test
ja
cs
mov
push
bound
adcb
shlb
filds
pop
pop
stos
cwtl
lock
cmpsb
pop
incb
mov
xchg
xlat
inc
mov
cltd
scas
dec
test
inc
sbb
mov
and
jmp
jae
xchg
mov
ljmp
jbe
push
add
pop
into
add
popa
pop
pop
dec
lahf
shlb
pop
xor
mov
loop
imul
lret
adc
outsb
or
sbb
or
xlat
pusha
mov
les
aam
aad
in
data16
cmp
in
xor
out
aas
out
sbb
mov
cmp
frstor
mov
add
lods
push
iret
add
dec
inc
imul
addr16
pop
addr16
call
pop
push
sahf
pop
mov
scas
sub
cmpl
in
push
ds
xor
int3
add
sahf
imul
push
js
sbb
lret
lcall
aaa
cpuid
xchg
add
dec
cld
fcompl
inc
fisubrl
pop
ja
push
test
xor
les
inc
jbe
xchg
xchg
add
lret
arpl
jb
fiaddl
out
adc
cmp
add
adc
jae
push
or
into
jbe
mov
push
xor
mov
xchg
xor
dec
xor
jns
xchg
shrl
emms
and
xchg
sub
clc
dec
popf
pop
mov
push
in
dec
rol
iret
mov
push
sbb
lret
sbb
and
arpl
in
pop
lcall
mov
sbb
inc
jo
mov
mov
fs
clc
decl
xchg
push
mov
jmp
loopne
lret
sub
mov
es
aas
jne
clc
popa
cmp
data16
dec
cmp
in
faddl
subl
insl
clc
xor
xlat
mov
mov
jmp
adc
push
lods
cmpsl
cmpsl
cs
out
sub
out
pop
sub
lds
outsb
jnp
daa
dec
insl
ret
jge
lock
lahf
movsb
mov
stos
aaa
ret
lea
dec
in
sub
add
adc
and
nop
xor
add
outsl
xor
dec
mov
jae
adc
mov
pop
sbb
or
fcmovnu
mul
je
and
mov
lds
pusha
xor
and
das
and
movsb
or
lods
sbb
pop
outsb
cmp
sub
addr16
movsb
or
lock
test
daa
bound
jae
add
mov
xchg
in
iret
cmp
or
jae
data16
repz
mov
ljmp
inc
cmp
leave
mov
mov
sbb
pusha
cmc
lcall
mov
or
negw
fwait
js
aas
add
rol
xor
cmpsl
mov
movsl
cld
es
icebp
scas
add
inc
icebp
jg
or
rclb
dec
aas
fisttpll
sbb
loopne
fildl
decl
pop
jl
push
das
testl
imul
cmp
fisttpl
and
sahf
fistps
sbb
push
hlt
mov
movsl
in
cmp
bound
ret
popf
sbb
scas
jb
add
outsb
and
ret
cmp
jmp
lret
rclb
mov
dec
addl
fistpll
pop
gs
icebp
cmc
cmpb
fnstenv
mov
movsb
enter
push
pop
cltd
aam
pop
add
sub
cmp
fs
push
loope
arpl
hlt
js
je
cmpsl
call
jmp
iret
rolb
fadd
inc
mov
bound
sarl
in
mov
orb
add
shll
insb
sbb
mov
out
push
dec
push
negl
cmp
popa
imul
or
mov
cld
test
cltd
xchg
mov
into
mov
std
pop
outsb
mov
ret
mov
fsubs
cli
sub
loopne
mov
lock
mov
pop
outsb
mov
jnp
mov
in
movsb
push
cmpsb
lea
std
sub
sub
mov
arpl
js
cmp
in
sub
add
lods
fcmovnu
adc
les
outsl
test
jno
bound
mov
imul
mov
insl
mov
daa
movsb
sarl
pop
mov
idiv
adc
out
shl
jmp
sub
fcmovnu
push
inc
pop
ja
cmp
out
or
mov
outsl
sub
icebp
jae
sbb
jmp
jl
insl
movsl
imul
fimuls
pop
test
imul
jo
add
popf
sub
adc
mov
outsl
nop
fildll
xchg
rorl
mov
mov
outsb
jae
mov
inc
sub
adc
fistpll
xchg
mov
iret
mov
lock
xchg
in
or
add
sbb
xor
inc
sub
push
int3
xchg
test
inc
lret
xor
inc
stos
js
pop
leave
mov
mov
dec
mov
add
movsl
push
pop
gs
rol
mov
iret
jne
icebp
call
iret
outsl
and
imul
fdivl
pop
mov
frstor
push
mov
shl
cltd
mov
fwait
cmp
imul
out
pop
inc
scas
jno
push
out
test
dec
mov
xor
out
jl
mov
cmp
andl
cltd
cltd
sub
push
dec
mov
or
cmc
test
inc
mull
mov
lds
int
jae
sbb
jb
iret
mov
data16
add
xchg
and
fists
sbb
out
jae
sbb
je
and
rcrl
repnz
sbb
xchg
movsl
loope
mov
das
dec
dec
push
cld
and
mov
call
mov
sub
mov
dec
or
xchg
addr16
and
mov
pop
add
imul
or
loope
rcll
popa
lret
xchg
stos
mov
or
jae
out
add
sbb
and
pop
gs
lea
sbb
xchg
int3
cwtl
adc
leave
daa
inc
into
inc
or
mov
ret
and
and
out
addr16
mov
cmp
addr16
dec
lahf
imul
int3
cmp
in
enter
mov
mov
sbb
scas
call
repnz
pusha
imul
sbb
push
repnz
icebp
and
adc
mov
fwait
add
imul
dec
hlt
push
out
and
lock
je
movsb
fimuls
lds
mov
dec
mov
jg
pop
xor
shlb
xchg
and
hlt
and
adc
add
xchg
adc
and
xchg
stc
mov
adc
data16
loope
lods
and
inc
js
in
ss
pop
daa
cltd
xor
mov
or
add
push
and
push
fidivl
shl
sbb
addr16
andb
xchg
sub
inc
push
adc
jbe
jbe
mov
dec
jb
sub
daa
mov
sar
or
jge
mov
jmp
pop
xchg
bound
out
sub
mov
jmp
push
pushf
iret
stos
in
pop
mov
fucomip
sbb
aam
jb
lcall
inc
fcmovnu
inc
pmullw
arpl
inc
icebp
xchg
or
cld
push
jbe
jl
adc
xchg
sti
insl
leave
stos
adc
jecxz
or
stos
js
pushl
mov
adc
sub
dec
xchg
ret
mov
adc
push
mov
cwtl
dec
int
xor
int3
in
in
pushl
xor
shll
add
arpl
xor
cld
iret
inc
dec
lea
sbb
cwtl
mov
popf
dec
mov
inc
jae
ljmp
fisubs
adc
dec
add
push
nop
pause
jns
and
mov
fidivs
or
push
add
clc
cs
test
int
pop
leave
add
insb
out
pop
jno
pop
ret
xor
dec
push
pop
mov
fmul
repz
icebp
cld
dec
mov
dec
es
push
pop
push
or
stc
sarb
push
fstpl
subb
iret
cmp
mov
scas
test
lock
or
ds
mov
notl
insl
xchg
push
jnp
xorl
sbb
dec
int
les
fsubrl
push
pop
dec
stos
jo
aam
je
dec
ss
adc
mov
fs
rcrb
inc
jmp
sbb
pop
shll
add
xchg
push
mov
inc
insb
mov
mov
mov
or
mov
push
push
adc
cld
inc
sub
cltd
push
mov
lock
icebp
or
shll
rorl
jo
dec
adc
sbb
sbb
nop
cmp
daa
test
sahf
repnz
ret
and
add
jp
je
sbb
dec
xchg
xor
test
dec
adcb
fwait
cwtl
mov
leave
or
jecxz
mov
mov
jns
jae
xchg
repz
push
aad
adc
dec
fildl
es
add
push
addl
in
pop
int3
mov
inc
aam
mov
or
pushl
cltd
lret
sub
push
or
sbb
add
sub
sub
or
mov
cmp
add
into
xchg
xlat
mov
out
mov
daa
in
cmpsl
divl
addr16
in
sbb
dec
popf
mov
dec
jl
std
pop
dec
adc
sub
out
push
scas
mov
test
and
mov
cmp
rclb
sbb
sub
cmp
push
ret
cltd
out
xchg
sbb
xchg
ja
push
add
jb
out
repz
fadd
adc
adc
xchg
jl
lock
or
add
and
imul
jnp
adc
lds
int3
fldcw
jo
xchg
xchg
mov
mov
hlt
push
rcrb
idivb
push
insl
jge
scas
mov
or
icebp
test
icebp
pop
into
or
arpl
dec
adc
and
xor
ljmp
mov
int3
cltd
lret
push
pop
fs
loopne
sbb
xchg
cwtl
call
test
js
movsl
out
loop
inc
movsl
int
lods
arpl
aas
ret
out
mov
cmp
repnz
and
adc
into
scas
adc
scas
and
pusha
in
rcrl
xchg
je
subb
shlb
loope
mov
aas
jae
faddl
jp
push
mov
mov
jbe
ror
daa
jecxz
jbe
sbbb
cmpsl
push
sbb
aam
xor
mov
and
dec
jg
push
jle
adc
aad
sbb
gs
ret
jl
xchg
push
or
add
and
lock
imul
mov
jae
jmp
aad
or
xchg
inc
pusha
lret
outsb
inc
jp
fsub
inc
and
js
jb
subl
loop
in
dec
sbb
notl
cli
and
js
pop
add
daa
adc
sbb
cmp
ret
mov
lcall
and
or
insl
add
inc
cwtl
fwait
outsb
lods
movsl
cwtl
in
xor
mov
lods
aam
adc
and
scas
hlt
pop
stos
xchg
mov
push
dec
and
or
pop
push
xchg
mov
xchg
cmc
xor
xchg
cltd
sub
clc
sbb
int3
lods
testb
pop
mov
js
dec
or
inc
cwtl
pop
lret
stos
pop
inc
call
call
dec
fs
movsl
mov
popa
mov
bound
dec
sahf
dec
inc
or
imul
std
xor
arpl
dec
or
bound
mov
add
pop
lods
rorb
push
cmpsl
lods
cmp
and
pop
rcr
xchg
pop
pop
ds
mov
out
xor
mov
dec
sbb
inc
sbb
inc
mov
mov
out
addr16
mov
test
aad
mov
pop
insb
rcr
les
and
xlat
call
mov
pop
dec
pop
or
pop
cmp
movsb
ret
je
sahf
or
es
jno
add
mov
sbb
in
stos
and
fstps
frstor
dec
shlb
std
adc
incl
inc
pop
in
into
leave
push
insl
out
mov
and
xor
mov
insb
movsl
jns
fdivs
dec
loopne
imul
push
imul
xchg
mov
mov
add
out
xor
fwait
mov
push
data16
shl
in
cwtl
mov
movsb
mov
xchg
test
inc
test
int3
and
insl
dec
fnstenv
xchg
push
fsubrs
aaa
xor
dec
inc
les
jno
xchg
sub
outsb
inc
mov
push
out
das
mov
sbb
push
push
xchg
ret
stos
mov
shrl
flds
cld
sbb
idivl
gs
lea
repz
mov
jbe
jbe
pop
and
ret
shll
lock
stc
in
sti
or
adc
repz
cmp
push
insl
cld
call
rorb
rcrb
enter
or
leave
fsubr
jge
int
or
lret
add
jecxz
pop
mov
add
jb
inc
stos
mov
cmp
outsl
ds
fcomps
mov
xchg
int3
loop
aaa
xchg
inc
movsb
outsb
and
sahf
push
pop
adc
hlt
dec
lret
sbb
or
jne
scas
aas
or
or
dec
enter
mov
gs
xchg
add
das
and
mov
jle
jmp
push
lock
and
dec
and
cwtl
ret
mov
mov
jne
movsb
adc
inc
and
mov
cli
cltd
addr16
mov
jle
inc
outsb
pop
mov
jbe
lahf
or
lcall
sbb
int
push
sbb
lods
push
inc
pop
push
push
and
sbb
addr16
cmp
pop
daa
mov
aaa
mov
in
mov
inc
in
sbb
fincstp
add
push
fsubs
xor
and
sub
mov
inc
call
jns
cmp
mov
and
pop
inc
xor
ja
jno
or
pop
jecxz
sub
xlat
lcall
sbb
sub
aam
jmp
enter
test
sbb
add
jae
lock
mov
and
jg
push
mov
fdiv
in
inc
daa
pushf
mov
rcrl
mov
add
int3
ficompl
test
dec
jbe
nop
and
xor
ljmp
dec
imul
sti
and
mov
sub
dec
out
repz
test
jns
into
xchg
aas
loope
outsb
les
or
push
cltd
ror
clc
dec
repnz
add
ja
xchg
into
jns
mov
push
aaa
mov
add
dec
xor
ja
ret
dec
mov
pop
sub
add
jb
shrl
cli
int
test
out
mov
aaa
cmpsl
xchg
mov
loope
mov
sahf
out
ljmp
mov
xchg
movsl
xacquire
xor
push
add
or
xor
cmc
and
rcrb
xchg
jb
ss
cmpsb
hlt
icebp
fcmovnb
inc
add
jle
push
outsl
rcrl
mov
shll
test
loope
arpl
pop
out
add
test
std
jle
adc
dec
mov
in
mov
test
stos
adc
roll
or
push
test
cmpsl
sub
mov
es
pop
push
push
xchg
into
mov
aad
or
arpl
aas
cwtl
cli
dec
mov
jle
mov
pop
add
and
jp
jb
xorb
negl
divb
jp
adc
xchg
in
jb
iret
enter
fistl
mov
sub
mov
mov
and
cmp
in
sbb
scas
or
lock
ds
hlt
scas
jno
insl
and
xor
mov
js
push
and
lods
shrb
or
jnp
fldcw
movsb
mov
adc
mov
cmp
rclb
cmp
pusha
or
mov
xchg
int
adc
pop
les
repnz
out
popa
add
adc
call
imul
pushf
cmp
jnp
sbb
clc
add
popa
pop
out
push
int
xchg
xor
je
cmpxchg8b
fs
mov
loope
adc
inc
jns
mov
in
push
sbb
mov
sub
dec
fs
dec
and
les
scas
hlt
scas
lcall
pusha
dec
pop
lea
mov
mov
rcrb
jo
sub
out
mov
enter
nop
adc
insb
xchg
out
mov
je
jg
jecxz,pt
aaa
fsubp
add
adc
jg
ds
stos
gs
dec
push
push
dec
or
jecxz
push
enter
outsl
lcall
xchg
or
xchg
xor
fcompl
or
push
test
xchg
cld
dec
imul
dec
dec
in
mov
adc
push
test
inc
pop
cld
and
add
jecxz
xchg
sbb
or
movsb
aas
insl
xchg
xor
jg
in
rcrb
cmc
push
mov
jl
jp
jl
ret
inc
in
jo
pop
push
cmc
mov
xchg
xor
sub
movsb
mov
negb
pop
sti
mov
loope
lea
std
jmp
fisttpl
cmp
outsl
xor
mov
push
clc
cmp
aaa
jns
je
aad
fisubs
jmp
roll
loope
aad
adc
push
dec
push
stos
mov
std
inc
jl
pushf
imul
mov
xlat
cmp
pop
mov
out
jmp
cmpsb
cs
mov
lret
icebp
jmp
xor
icebp
outsb
outsb
ficompl
inc
adc
mov
stos
mov
mov
gs
rol
ret
lahf
imul
fldz
xor
or
add
jae
ja
pusha
mov
test
jg
xchg
jg
push
sbbl
xlat
cmp
mov
loop
loop
sti
mov
add
cmp
daa
loopne
orl
arpl
shlb
lahf
push
dec
aas
pop
int
xchg
pop
mov
mov
dec
pop
shl
les
cmpsl
mov
dec
add
outsl
hlt
sbb
inc
les
push
mov
xchg
rorb
imul
popa
jne
adc
cmp
cmp
mov
push
dec
jne
xchg
mov
mov
ret
cmpb
pop
or
notb
or
mov
fwait
cld
xchg
test
out
jnp
dec
jo
mov
in
mov
mov
fldl
les
adc
lret
inc
pushf
cmp
jmp
pop
stos
cmp
pop
push
std
imul
jb
jp
shll
insb
sbb
aad
push
mov
inc
insb
shlb
push
push
adc
rcr
popa
xor
push
and
mov
ljmp
xor
aam
subl
daa
lcall
sahf
cmp
mov
jb
jb
or
mov
xchg
inc
pop
ret
sub
mov
mov
add
ret
fdivs
ret
ret
sub
aad
sub
test
inc
shlb
mov
mov
mov
cltd
cmp
lods
js
test
cld
shrb
nop
jb
xor
addr16
jl
shll
or
cmp
xor
cmc
fwait
or
mov
enter
xor
stos
add
xchg
mov
jno
mov
push
push
aad
dec
adc
pop
xchg
mov
mov
mov
imul
ss
add
pop
lods
adc
mov
inc
lock
enter
inc
pop
aaa
and
and
aas
mov
rcrb
sub
mov
rcll
sbb
sub
inc
pop
adc
aam
hlt
dec
sub
add
insb
push
test
repz
cmp
pop
in
out
cmp
push
xchg
cltd
out
cmp
ja
int
icebp
je
in
xor
arpl
arpl
sarl
bound
iret
repz
mov
insb
mov
imul
fimull
mov
xor
add
inc
jecxz
mov
fidivrs
mov
test
and
jge
or
movsb
adc
jp
fcmove
aad
and
lds
xor
test
loope
cld
out
gs
hlt
mov
xchg
ret
jno
mov
pushf
sbb
roll
add
std
add
mov
in
iret
jmp
push
arpl
addl
cmpsb
adc
adc
in
lret
mov
rorb
repnz
push
add
jmp
xor
dec
popf
dec
xlat
test
call
cmc
mov
cmp
fsts
rcrl
inc
aas
jne
push
incb
imul
jbe
mov
mov
mov
push
inc
mov
fimuls
sbb
enter
add
pop
fs
ljmp
cmp
je
xor
sub
les
jnp
icebp
and
sub
popa
mov
aad
xchg
mov
in
and
mov
xor
test
es
add
mov
lds
js
sbb
les
out
dec
jne
pushf
ds
adc
xor
int3
mov
mov
scas
dec
repnz
or
imul
sub
ror
dec
popa
cmp
mov
jne
sbb
hlt
mov
cmp
or
stc
fadd
add
and
ret
sub
mov
inc
std
popa
out
in
xor
jb
mov
aad
repz
dec
pop
xchg
mov
push
std
pop
sbb
adc
ds
notb
xor
or
daa
adc
adc
fwait
mov
scas
in
popf
jmp
pop
inc
xor
xchg
sahf
out
stc
es
out
lcall
jg
lock
xor
mov
add
dec
or
adc
test
leave
dec
rolb
icebp
mov
adc
xor
jo
and
test
lret
push
jb
fwait
inc
dec
push
xchg
enter
pop
leave
aas
jbe
pop
ficoms
aam
cs
subb
adc
mov
adc
xchg
pop
dec
test
dec
mov
cli
mov
in
mov
ss
cmpsl
aad
test
imul
lcall
push
imul
dec
ds
mov
mov
imul
or
aaa
sbb
cltd
test
jae
inc
mov
fwait
xchg
in
in
call
inc
stos
call
lcall
add
mov
inc
ss
test
rclb
mov
scas
sbb
std
int
faddp
push
xchg
mov
mov
pcmpgtd
in
loope
shl
in
nop
inc
cmpsl
cmp
pusha
mov
stos
cmp
lods
shll
jl
pop
cmpl
and
lcall
adc
icebp
gs
out
aam
pop
daa
leave
stos
sub
scas
popa
jns
xchg
mov
aaa
icebp
mov
in
and
push
mov
stos
push
insl
cwtl
xchg
test
jge
lods
cmpsl
dec
pop
jl
adc
push
bound
arpl
pushf
lods
push
ss
in
sti
roll
out
outsl
roll
lock
ja
movsb
loope
pop
mov
sahf
cmp
cmp
xchg
clc
xor
in
mov
je
pushf
cld
jmp
add
cli
loope
push
insb
cwtd
cmc
lea
jbe
daa
inc
dec
repnz
int3
pop
xchg
xchg
out
into
daa
js
es
clc
mov
shrb
lds
cmc
ret
jle
mov
aas
xchg
sub
cmp
icebp
jg
dec
adc
loop
notb
jecxz
iret
hlt
rorl
xchg
repz
xchg
stos
ret
sub
popf
aaa
sub
xchg
and
in
adc
xor
jae
or
test
jbe
leave
aas
pop
mov
fdivrp
test
inc
mov
push
push
mov
cmp
outsl
inc
sahf
pop
mov
push
add
xlat
cmp
sbbb
pop
pop
jns
or
or
shrl
fmull
inc
cmp
add
jl
mov
inc
push
rcrb
sub
ret
daa
lods
mov
cmp
xor
cmp
in
wbinvd
sbb
insb
cmp
xor
adc
stos
test
loop
push
xchg
mov
pushf
clc
adc
pop
jae
mov
cmp
mov
mov
jmp
push
mov
fisubrs
mov
cmp
jnp
adc
aam
mov
inc
mov
xor
out
sti
xchg
jns
lcall
ret
pop
out
inc
inc
out
mov
sbb
in
add
inc
xchg
mov
ss
fcmovnu
add
inc
add
stc
out
cmp
mov
in
sub
and
loop
fstpt
sub
ljmp
mov
push
mull
outsl
sub
xor
jbe
sbb
xchg
dec
lds
mov
or
movsl
jmp
fs
xchg
and
in
jge
mov
clc
shlb
lret
or
ds
jae
test
push
lcall
xchg
adc
pusha
fstpl
mov
dec
jbe
mov
in
insb
xlat
lahf
fnstenv
inc
jl
mov
push
fisubrl
fstpl
scas
movl
shr
sub
xor
push
cmpsl
cmp
mov
xchg
lods
insl
xor
push
dec
scas
adc
add
out
adc
ret
mov
mov
out
fnstsw
hlt
movsl
rcl
int3
dec
fcomip
xchg
mov
pop
fcoml
cs
adc
and
insl
mov
gs
outsb
cmp
cs
jmp
add
je
flds
push
int
mov
mov
add
push
pop
aam
pop
mov
pop
xchg
pop
pop
push
jb
aaa
fs
xchg
sbb
sbb
xor
dec
std
push
mov
iret
pop
fidivs
sub
push
xchg
push
js
dec
cld
imul
mov
add
adc
cmpsb
aad
arpl
and
and
pop
cmp
movsb
icebp
rclb
mov
dec
lock
aam
add
dec
sarb
push
ret
jbe
sbb
xlat
ret
mov
mov
ret
cmp
mov
xchg
sbb
out
aad
push
rcll
aas
or
es
cli
cltd
mov
insl
ljmp
push
xchg
sub
sbb
repz
addl
ficompl
and
fstl
push
inc
sbb
mov
addr16
loopne
testb
xchg
scas
add
std
push
outsb
xchg
aas
mov
and
lahf
int3
inc
cltd
inc
stos
pop
sub
popa
xor
mov
push
xchg
cmp
mov
ljmp
into
mov
gs
notl
repz
lods
cmp
int
addr16
std
fidivl
orl
mov
sub
scas
jmp
pop
sbb
push
popa
adc
push
pxor
addr16
push
xchg
gs
div
jp
mov
sub
lods
mov
not
xchg
mov
push
dec
ljmp
pop
popf
xlat
sub
mov
cmc
and
push
in
add
mov
call
das
vmread
jne
cmp
ljmp
inc
es
sti
jb
jbe
add
sarw
inc
jnp
cmp
ret
sbb
lret
fwait
ds
addr16
inc
lods
lods
je
xor
cmp
es
lret
adc
sub
adc
mov
jno
ss
jmp
andb
sbb
aam
and
inc
aaa
jecxz
stos
mov
or
cwtl
scas
mov
inc
gs
ficoml
mov
xor
int
jns
mov
dec
in
je
pop
punpcklbw
lock
dec
push
aaa
in
sbb
nop
sti
mov
loope
xchg
out
rorb
xor
push
or
sub
push
and
mov
sbbl
negl
aad
mov
fwait
pop
pop
dec
popf
lea
inc
std
imul
dec
push
cs
inc
sbb
in
xchg
sbb
repnz
cwtl
shll
cmpb
pusha
pop
rolb
mov
adc
imul
jne
xor
inc
scas
mov
add
enter
dec
lahf
xor
jmp
jl
andl
cmpsb
jmp
leave
aad
test
mov
mov
cmp
cs
push
cld
mov
movsl
mov
in
or
push
insl
into
sub
sbb
insl
enter
jne
mov
jmp
push
insb
cmpsl
ja
xor
inc
movsl
dec
fstl
xor
mov
shrb
movsl
xchg
lcall
mov
add
mov
mov
std
decl
rolb
fs
cs
dec
sub
add
sub
jl
stos
or
jne
inc
lcall
outsl
mov
jmp
enter
lcall
aas
inc
mov
aaa
jl
and
leave
adc
mov
aaa
gs
imul
mov
inc
mov
nop
outsl
mov
add
sbb
xchg
push
sub
and
neg
cmp
mov
inc
lret
ljmp
cmpsl
sbb
push
repnz
and
repz
dec
push
xor
inc
jge
repnz
fidivs
ljmp
jp
sub
jns
pop
mov
icebp
shll
cmp
subb
nop
imul
add
push
push
sarb
push
shl
fs
subl
repz
mov
fisubrs
mov
xlat
mov
les
mov
inc
pop
or
pop
pop
out
sub
js
dec
test
loope
lods
adc
xchg
or
pop
push
mov
data16
mov
hlt
xchg
adc
test
call
or
ljmp
push
jne
push
fsubrl
dec
and
mov
fldenv
int3
dec
jmp
dec
mov
rorb
lea
clc
daa
push
imul
ret
aam
adc
inc
lods
mov
out
push
ret
gs
cld
aad
call
sub
jmp
cs
lcall
or
jnp
loope
and
fistps
pop
push
lock
xor
lock
repz
push
cltd
jae
mov
stc
cmp
jecxz
cltd
cmc
fimull
stos
fnstsw
lea
jno
ds
insl
loope
mov
inc
push
lock
scas
add
mov
das
ja
inc
pop
loopne
fnsetpm(287
add
push
ljmp
xor
popf
in
or
lods
xor
das
adc
aaa
out
sbb
jg
inc
fidivrl
fs
negl
mov
ficoml
sbb
adc
mov
cmp
inc
dec
lods
inc
mov
jmp
sbb
inc
mov
andb
pop
pop
push
xchg
sub
sub
fbld
sti
outsl
mov
or
loop
imul
jne
sbbl
call
push
xchg
dec
mov
test
sub
mov
fwait
jmp
shll
je
push
push
testl
mov
sbb
or
dec
lds
lret
test
fdivrl
dec
push
pop
aam
sbbb
sbb
mov
enter
dec
repnz
or
jns
add
inc
add
imul
or
or
mov
add
xchg
loope
nop
or
fmuls
add
bound
mov
leave
icebp
pushf
ds
mov
ds
mov
push
call
jl
cmp
scas
xchg
inc
push
fisttpl
lret
in
jle
pop
aaa
jle
inc
add
lret
or
imul
adc
push
mov
mov
adc
jns
push
cmp
jecxz
lock
fdivrl
std
jns
popf
rclb
mov
pop
dec
mov
ret
xchg
dec
nop
js
out
shrb
mov
mov
inc
jbe
in
inc
pop
mov
fdivrs
cltd
push
in
stos
cs
adc
xorl
cmp
adc
cmc
sbb
clc
popl
jnp
push
jmp
cltd
cltd
sti
ds
lahf
int3
sub
and
hlt
inc
xor
mov
jecxz
inc
and
and
test
out
jno
sbb
aas
push
das
push
xor
rcrl
pop
mov
mov
enter
out
je
or
roll
pop
jmp
icebp
pusha
loope
add
arpl
cmc
ljmp
inc
outsb
in
dec
jnp
lret
push
dec
pop
das
mov
jno
std
es
jo
mov
mov
xchg
fnstenv
imul
lcall
outsl
in
xchg
loop
je
cmp
cmp
icebp
inc
imull
pop
orl
mov
mulb
arpl
ljmpw
call
fistl
fists
fcomps
push
mov
mov
inc
push
jo
negb
cmp
push
iret
imul
mov
popf
or
popa
shrl
repz
inc
enter
jns
pop
jno
adc
pop
es
pop
sarl
dec
lods
stos
dec
out
cld
jp
xchg
fnstsw
jnp
mov
xchg
test
dec
call
mov
mov
repnz
pop
loopne
pusha
cmp
cwtl
pop
sbb
cmp
push
xchg
push
xor
ljmp
inc
inc
popa
bound
cwtl
outsb
xchg
es
adc
inc
aas
dec
dec
add
idivb
out
addb
sub
and
mov
mov
mov
out
add
sbb
mov
in
inc
jge
test
inc
stos
divb
inc
xor
pushf
fdivrs
mov
enter
xor
jmp
hlt
push
or
test
aas
popl
sbb
cmp
test
lea
std
icebp
mov
ja
fnstenv
lods
leave
mov
cmp
or
xchg
arpl
xor
subl
jge
out
xchg
mov
aaa
jg
xchg
imul
adc
mov
ret
mov
in
push
inc
loop
or
lea
push
cmp
ret
mov
cmp
lods
repnz
adc
imul
insl
lods
lock
add
inc
jp
int3
mov
xchg
fiaddl
adc
aam
xor
test
mov
jae
mov
iret
push
into
std
add
or
dec
mov
push
popf
sbb
pop
pop
add
lret
add
in
xor
outsb
das
inc
popa
pop
dec
adc
test
xorl
mov
inc
mov
cli
mov
shll
repnz
xchg
push
popf
mov
pop
inc
lods
fadds
pushf
rcr
cmp
mov
mov
push
in
or
adc
push
out
mov
out
or
stc
and
dec
insl
inc
adc
cmp
fcoms
push
jge
stos
rorb
or
mov
loope
inc
addr16
push
xor
std
jmp
call
sub
enter
and
mov
jecxz
mov
jge
in
inc
in
pop
ffreep
push
pop
sub
and
push
xlat
lret
sbb
lcall
xchg
inc
shlb
out
sbb
movsb
mov
mov
ret
dec
sub
imul
and
cmc
idivb
in
xchg
and
insb
repnz
outsl
mov
or
add
int
ja
in
lahf
xor
cld
xor
jne
mov
mov
xchg
aam
inc
xchg
arpl
arpl
push
gs
pushf
xor
inc
cmp
or
or
lcall
nop
add
lcall
lods
es
and
mov
mov
or
mov
test
inc
lods
push
test
xchg
xor
pop
xchg
ficomps
push
int3
sub
pusha
cmpsl
xor
mov
gs
sub
mov
jge
cli
mov
dec
imul
ss
lcall
int3
and
cs
clc
daa
adc
lcall
stc
mov
xor
dec
sub
in
mov
pop
ds
daa
mulb
std
fucomp
sti
lock
jno
inc
add
mov
inc
dec
out
fcomps
or
std
pop
mov
cmpsb
roll
jno
in
or
stos
xchg
mov
aaa
scas
pop
mov
inc
add
and
pop
lods
mov
insl
inc
scas
add
testb
mov
cwtl
cmp
out
clc
nop
add
and
addb
pop
sub
xor
jne
stos
cmp
sti
mov
jmp
pop
or
dec
jge
insl
test
jmp
imul
jle
mov
out
dec
xlat
loopne
mov
pop
outsb
daa
in
jecxz
cli
sahf
and
orb
sar
pop
or
cmp
fcmovb
sub
cli
push
mov
outsb
adc
ret
mov
mov
push
std
xor
or
xchg
mov
push
popa
jge
clc
int
and
mov
ret
loope
ljmp
das
xor
iret
lahf
repz
dec
je
xchg
mov
pushf
cld
lods
xlat
mov
cli
add
in
in
pop
jns
out
xchg
mov
jo,pt
add
pop
fsubr
adc
loopne
shl
mov
add
push
test
xor
js
mov
mov
cltd
pop
xlat
mov
add
add
xchg
mov
sub
loop
es
add
jmp
es
mov
clc
dec
std
shrl
faddp
cmp
fldt
cmpsl
adc
xchg
push
dec
loope
add
cs
dec
mov
sbb
les
jmp
adc
mov
jl
push
cwtl
sbb
cwtl
jl
jmp
in
push
add
jmp
xchg
insb
iret
inc
lds
xchg
mov
xchg
inc
fwait
jmp
push
scas
lcall
or
inc
stos
add
cmp
movsl
xchg
push
inc
lahf
aas
add
fidivrs
leave
aam
imul
add
lea
mov
sub
std
pop
data16
xchg
push
les
not
or
cmpsl
lods
and
jecxz
jae
push
rcrl
nop
test
je
gs
xor
inc
push
mov
push
sbb
andl
push
inc
cmpb
cwtl
out
mov
subl
inc
not
clc
and
call
negl
mulb
jns
and
adc
push
mov
shl
push
das
push
mov
iret
inc
mov
add
roll
adc
hlt
dec
into
pusha
xchg
xor
je
ret
cmpb
orl
xchg
arpl
mov
adc
mov
pop
jae
xchg
stos
movsl
sysenter
imul
insb
jb
adc
cmp
hlt
sbb
cmp
sub
mov
scas
mov
cmpsb
test
xchg
xor
iret
gs
imul
sbb
mov
stos
loop
rorb
xor
add
push
xchg
outsb
sub
push
xor
sahf
cmp
leave
cmp
ja
mov
xchg
add
shll
dec
xchg
mov
into
lock
das
mov
in
fdiv
jp
xlat
aam
adc
out
les
mov
push
mov
jne
ljmp
xor
iret
push
aam
insb
js
jmp
loop
test
int3
or
inc
out
or
ja
push
stc
aam
inc
das
jae
scas
xor
push
xchg
mov
test
jge
pop
pop
cmpsl
loopne
xor
adc
test
pop
mov
cmc
pop
shll
out
aaa
dec
xchg
add
xor
jp
mov
mov
sti
dec
stc
pusha
mov
lods
in
cmp
or
jno
jp
dec
in
je
cmp
inc
jns
push
add
mov
dec
sbb
popa
push
xchg
outsb
aas
or
xchg
lods
inc
mov
xchg
iret
notb
lcall
mov
sbb
lahf
mov
repnz
mov
out
fstps
and
xchg
inc
jne
pop
lds
sub
cwtl
adc
out
xchg
jecxz
xchg
loop
mov
xchg
add
fwait
enter
dec
xchg
add
jo
int
pop
pop
sub
data16
sar
push
test
mov
popa
sub
gs
jno
lds
out
and
inc
scas
add
cmp
xorb
sub
nop
sub
mov
push
and
mov
outsl
clc
or
outsl
adc
pop
rorl
dec
lcall
loopne
cmpsb
loopne
adc
dec
push
xor
mov
jns
das
xchg
out
jo
mov
cs
shll
lds
jg
movsb
adc
cs
xor
jno
cmp
ret
aas
add
add
jmp
fwait
popf
and
push
or
add
sub
push
lds
add
mov
test
mov
mov
loop
push
lods
xchg
inc
cmp
icebp
out
int
fwait
jnp
adc
pop
fcomip
lds
push
test
shlb
jecxz
jp
mov
cld
daa
ficoml
fsubrs
inc
push
mov
jnp
gs
das
jns
sarb
das
adc
jge
mov
inc
cmp
mov
adc
rcl
out
sbb
cmc
fsubl
mov
fucom
and
jo
mov
popf
data16
sarb
jbe
lock
stc
shl
out
int3
pop
mov
shrb
das
nopl
jecxz
push
insb
sub
in
aad
adc
xchg
in
mov
xor
loop
mov
ret
fisubrs
or
les
imul
les
out
xor
inc
icebp
sbbl
jmp
andl
jbe
jbe
sbb
mov
jl
imul
test
push
jl
int3
movl
xor
sarl
imul
in
loope
lret
fstl
xor
xlat
adc
mov
push
mov
xchg
jle
stos
stos
cmpsl
loop
dec
test
icebp
ja
test
cwtl
dec
popf
daa
out
cld
nop
mov
xchg
lea
clc
fiaddl
es
lcall
pop
out
sahf
aam
inc
xchg
inc
adc
mov
jl
mov
shrl
and
cmp
cmc
pusha
adc
shlb
inc
jecxz
lret
push
pop
pop
addr16
enter
jns
movsl
inc
add
out
mov
dec
cmp
pcmpeqb
pop
dec
inc
leavew
jp
pop
ret
adc
xchg
push
hlt
push
pushf
sbb
filds
jmp
rolb
push
sti
ds
lret
gs
shr
mov
add
dec
stos
leave
mov
sahf
or
sub
out
out
xchg
xor
cli
negb
pop
adc
into
mov
xor
inc
jg
pop
pop
sub
push
adc
mov
dec
lret
sub
cmp
ret
xchg
push
aam
inc
aad
jle
pushf
jo
xor
or
or
mov
das
mov
add
loope
pop
mov
inc
cmp
mov
sarl
mov
cmpsb
mov
mov
data16
xor
les
xlat
jns
mov
xchg
cmc
xchg
insb
inc
sbbl
mov
ja
dec
lock
dec
add
sti
mov
sub
mov
aad
push
popa
push
stos
testl
jb
lds
mov
fcompl
jecxz,pn
jl
mov
movsl
or
es
adc
sub
test
aaa
push
mov
icebp
sti
fadds
mov
adc
sbb
aad
arpl
fadd
push
lret
ss
jo
stos
pop
inc
gs
mov
sub
popa
repnz
mov
mov
sub
es
mov
mov
jle
pop
ret
roll
frstor
shr
dec
adc
lock
pop
fisubrs
jl
push
in
xor
scas
mov
push
adc
cmpsb
xlat
add
jmp
or
push
out
add
cmp
sbb
movsb
xor
add
push
add
clc
movsl
repnz
xor
popf
sbb
fld
aas
inc
addr16
lods
inc
and
test
inc
notl
mov
ret
repz
mov
ret
push
sub
sub
call
and
xchg
lds
es
stc
adc
push
adc
xchg
xchg
jl
inc
mov
aam
subb
std
adc
aas
lea
ret
mov
scas
and
adc
test
in
sarl
sub
call
lahf
and
xor
test
inc
cld
sbbl
stc
hlt
mov
das
fucomp
cmp
out
rorl
stc
jecxz
xor
outsb
adc
cld
jnp
jno
loopne
mov
inc
and
cli
xchg
sub
adc
or
inc
pop
mov
cmp
int3
mov
cmp
mov
pop
mov
mov
pop
outsl
sub
adc
inc
ds
mov
pop
fs
daa
leave
and
sbb
cmc
lods
lret
out
push
jb
jb
mov
push
jg
adc
xor
or
leave
xchg
rorl
loope
jbe
mov
aaa
jecxz
je
add
adc
inc
sbb
stos
and
call
divl
xchg
adc
add
push
arpl
negl
jbe
daa
cmc
gs
jb
movsb
fwait
inc
dec
push
sbb
inc
dec
add
add
cmc
xor
lods
inc
adc
dec
addl
pop
sub
gs
push
cmc
mov
adc
and
xor
test
pop
icebp
out
lea
int
mov
mov
lds
cltd
jg
repnz
mov
lcall
cld
insl
aad
leave
mov
iret
mov
xor
xchg
jne
outsl
test
mov
mov
sbb
push
adc
push
sub
in
movsb
outsb
add
xorl
xchg
popaw
mov
jnp
adcb
xor
les
xor
push
mov
rcl
jae
test
pop
pop
in
lea
mov
mov
shr
sarb
cmp
lods
dec
sub
std
jbe
icebp
cwtl
dec
jmp
add
push
sbb
lret
shrl
fwait
sbb
push
in
out
pop
dec
popa
lods
jg
and
jnp
push
inc
jg
movsl
lcall
fyl2xp1
ret
adc
loopne
rorl
cltd
sti
aad
inc
cmp
mov
pop
cld
xor
mov
mov
push
mov
push
pop
push
cmp
fldenv
push
cmpsb
ss
test
divl
int3
inc
jg
repnz
sub
push
lds
dec
push
pop
pop
mov
mov
pushf
xor
and
fs
or
mov
push
mov
sbb
fcomps
pop
jnp
test
and
rol
pop
mov
xchg
shll
or
xchg
push
out
cltd
sbb
or
mov
adc
aaa
inc
jmp
lret
imul
maxps
mov
adcl
mov
inc
xchg
test
popa
rcl
rcrl
sub
test
movsb
sub
clc
sar
push
in
sub
pop
or
out
pop
popa
inc
psubd
insb
xor
mov
inc
aam
adc
jne
mov
sbb
push
pushf
sbb
jno
jbe
mov
daa
sbb
mov
sahf
push
icebp
add
outsl
mov
imul
out
popf
je
inc
push
mov
dec
icebp
push
pop
sub
mov
jno
pop
dec
arpl
add
mov
pop
pop
jbe
movsb
jl
cmpsl
sbb
pop
and
sbb
sbb
jle
jle
sbb
push
xchg
mov
fdivrs
inc
xchg
stos
ret
xchg
sbb
in
cs
into
test
and
or
fwait
adc
addr16
jb
inc
mov
loop
lcall
mov
mov
adc
xchg
loopne
cmp
lcall
aaa
add
inc
fwait
xchg
stc
int3
popf
ret
mov
inc
aam
in
aad
scas
in
lcall
sbb
test
scas
xor
xchg
and
outsb
mov
jp
jmp
mov
cltd
int3
inc
arpl
jp
loop
inc
jne
cltd
mov
hlt
pop
mov
inc
push
xchg
outsb
pushf
cmp
lods
lcall
sbb
mov
enter
popf
clc
orb
adc
xor
sbb
push
add
xlat
or
das
add
fstps
pusha
and
mov
cmp
push
jne
mov
sbbl
sbb
mov
insl
jnp
push
jge
mov
insl
pop
dec
sub
cmpsb
fists
repnz
mov
mov
sub
jmp
xorl
iret
test
nop
push
aam
lods
stos
dec
mov
dec
and
and
mov
mov
imul
bnd
movsl
or
dec
rcrl
dec
inc
pop
rcrl
xchg
lds
dec
dec
cs
test
xor
adc
iret
jecxz
push
movsl
notl
mov
push
jle
clc
ror
jno
cmp
mov
dec
jmp
rolb
out
sbb
add
shl
std
scas
scas
cld
inc
shlb
test
add
nop
inc
pop
dec
inc
jae
lret
cmp
mov
fisttps
cmp
jns
ret
inc
mov
fbstp
dec
jmp
push
andl
aas
or
das
inc
in
faddp
nop
push
sbb
dec
push
dec
sbb
pop
pcmpgtw
xchg
aaa
adc
push
sti
es
fnsave
dec
jge
sahf
cmc
sub
scas
and
add
int
dec
jbe
dec
lcall
cld
mov
xor
xchg
adc
fidivrs
or
pushf
int
jl
pop
leave
mov
inc
mov
jnp
push
ja
adc
stos
stos
xor
cmpsl
xchg
sub
jle
clc
mov
mov
inc
mov
shll
fwait
adc
jb
inc
pop
sub
fs
shlb
xlat
loop
lret
addr16
cli
pop
inc
sbb
mov
fmulp
adc
shl
mov
cmp
mov
or
ja
pop
xchg
iret
insb
test
cmp
jle
mov
cmp
cs
mov
cmp
lret
aam
xchg
aas
mov
sahf
adc
xor
or
in
fisubrl
and
js
sarb
mov
aas
mov
sbb
aaa
xchg
xor
xchg
push
jb
cwtl
sbb
sub
out
addr16
es
adc
cmp
jo
inc
inc
pop
inc
movsl
aad
mov
add
scas
or
mov
loope
loopne
cmp
dec
push
je
mov
out
add
pop
cmpsl
cli
setnp
sub
add
in
invd
adc
cmp
cmp
into
loopne
lods
adc
inc
fwait
fwait
push
dec
push
push
aam
jecxz
rcrl
add
mov
push
lahf
xor
fldcw
cmp
mov
imul
out
hlt
repnz
sahf
jle
in
dec
inc
ret
insl
jmp
mov
pop
dec
aam
sbb
mov
mov
scas
mov
jmp
cmp
icebp
pop
mov
out
fs
xorl
imul
push
push
inc
push
mov
pop
andl
and
das
imul
dec
std
mov
call
setle
scas
addr16
inc
jno
adc
pop
fwait
cli
jp
lds
mov
mov
lea
adcl
lea
push
stos
fucomip
ror
sub
test
xor
ret
adc
jno
fisttpll
lock
in
jb
into
mov
jl
xorb
outsb
jbe
add
xor
sbb
mov
or
jbe
adc
push
ja
cwtl
insb
enter
push
mov
iret
pop
ret
test
push
cmp
push
scas
xor
fwait
mov
popf
loop
out
rcrb
dec
pop
das
pop
cmpsl
fs
repz
xor
mov
or
ret
lcall
push
fcoms
pusha
push
and
aas
out
push
sub
pop
adc
addr16
mov
push
out
adc
and
and
xlat
pop
sbb
and
std
jp
sbb
mov
pop
sbb
fisubs
call
adc
mov
out
push
inc
jmp
leave
jne
push
pusha
mov
add
push
insb
xchg
lods
sub
and
mov
or
xor
sbb
sbb
clc
es
cs
test
dec
lea
jne
aad
enter
push
sar
mov
mov
insl
clc
cs
icebp
loopne
dec
lds
lahf
mov
jl
mov
lock
adc
shlb
scas
adc
xlat
cltd
dec
and
lret
xlat
lret
inc
lods
jae
sub
loope
outsl
add
dec
dec
cmc
push
insl
imul
jecxz
pusha
mov
sub
out
inc
xchg
lock
fsubs
jne
inc
iret
enter
daa
push
push
sbb
loope
fists
push
rcr
inc
pushf
inc
fcomps
and
es
push
repz
stos
enter
mov
push
mov
in
pop
pop
repz
dec
mov
sub
cmp
outsl
enter
jo
leave
addr16
sbb
inc
push
loop
sbb
lock
sti
add
cld
inc
insb
xchg
or
int
cltd
inc
pop
pop
in
out
aaa
lret
and
inc
hlt
out
cli
out
scas
jmp
inc
or
lods
cmp
test
inc
mov
xchg
or
movzbl
inc
adc
icebp
movsb
sbb
xor
in
mov
mov
cmp
frstor
and
pop
add
stos
and
das
push
repnz
add
ret
mov
adc
mov
pop
jmp
cmc
fadds
xchg
add
scas
sub
and
add
insb
mov
pop
test
aas
cmp
inc
adc
aaa
aaa
push
in
pop
es
mov
push
jno
imul
insl
xchg
inc
mov
std
sbb
lock
aas
sub
test
jmp
pop
ret
rclb
mov
sbb
mov
mov
imul
mov
mov
flds
sbb
fnstcw
es
movsl
inc
lahf
sbb
cwtl
in
push
mov
jb
fwait
add
fcomps
adc
data16
mov
inc
mov
pop
jmp
xlat
and
scas
sub
out
and
cmp
fs
dec
sub
push
jg
sub
jge
stos
out
repnz
lds
subb
pop
jae
push
lahf
int
std
xor
push
dec
mov
pop
fnstenv
mov
inc
xchg
adc
mov
sti
jmp
jae
xlat
adc
outsl
mov
and
lahf
mov
jmp
hlt
mov
cmp
push
je
and
push
add
js
jle
insb
stos
cmpsl
sahf
xchg
cmpsl
xchg
pop
pop
cmp
jl
lock
jmp
lds
mov
push
xor
inc
ret
mov
fidivl
add
cwtd
cmc
inc
js
sub
and
out
das
subb
mov
int
mov
adc
jle
gs
ror
and
pop
add
pop
add
int
or
cli
mov
stc
mov
mov
mov
pop
push
and
mov
pop
xorl
pop
or
ja
ja
sti
mov
push
sahf
cmc
xor
rcll
insb
cs
or
xchg
hlt
xor
bnd
fdivrs
aas
cmpsb
or
xor
daa
daa
loop
sar
leave
push
push
and
ficoml
cltd
loopne
dec
adc
pusha
mov
clc
cmp
cmp
fwait
push
cmp
loop
xor
add
imulb
test
adc
and
cmp
stos
je
inc
mov
sbb
xchg
fldt
out
movsl
imul
jne
sbb
popa
mov
mov
mov
test
jno
xor
push
push
or
jns
inc
mov
xor
cmc
jle
call
addr16
fidivrl
jae
loopne
nop
jp
adc
xor
mov
pusha
aaa
vdivss
or
into
outsb
jb
repnz
mov
xor
or
stos
xor
daa
inc
aaa
outsb
and
push
mov
sub
mov
xchg
xchg
pop
push
gs
inc
popf
int
icebp
rclb
jle
aas
scas
rcll
out
pop
push
pop
stc
imul
adc
ret
scas
int
aad
hlt
push
xor
lret
dec
jecxz
hlt
cmpb
pushf
mov
ja
nop
movsb
dec
xchg
mov
jno
iret
ret
xchg
mov
push
in
pushl
jae
daa
or
mov
mov
subb
shrb
inc
fidivrl
scas
pushf
aas
lcall
ljmp
cmp
gs
pop
mov
fildl
push
test
rolb
pop
cmp
fnsave
lcall
mov
jo
std
fiadds
mov
lahf
test
fisubrs
out
hlt
or
or
inc
lcall
aas
cmc
add
mov
mov
push
sbb
add
cmp
in
cmpsl
gs
popl
mov
mov
ljmp
loopne
hlt
sub
xchg
push
sbb
pop
sub
mov
or
jge
mov
popf
xchg
cmp
repz
sbb
pop
ret
sbb
pop
lahf
aad
cwtl
test
pushf
fldcw
dec
and
jecxz
scas
fwait
and
pop
add
adcl
call
sbb
adc
xchg
jo
sbb
xchg
loope
lea
inc
adc
iret
xchg
sub
and
cs
sahf
adc
mov
adc
push
pop
cmp
lods
inc
testb
push
dec
in
popa
fsubrl
adc
insb
cmp
xor
testl
push
jecxz
mov
sub
call
mov
push
inc
add
add
cwtl
shll
fcmovnbe
mov
jle
mov
lret
rcrb
pop
popa
daa
push
hlt
ljmp
mov
dec
lret
sbb
xor
inc
loop
add
or
push
cmpsb
test
cwtl
icebp
jp
adc
or
add
lret
mov
push
out
enter
enter
sbbb
pop
idivl
and
shll
add
jp
or
sub
cmp
push
lea
add
ret
lods
cs
add
xchg
add
lret
ficoms
jne
cmp
jo
or
fildl
std
or
adc
les
inc
fisubl
int3
imul
cmp
adc
push
in
push
stc
inc
or
clc
pop
enter
pop
rorb
pop
add
cli
enter
sub
inc
or
pop
inc
movsb
xlat
repnz
cwtl
mov
and
jmp
into
hlt
push
xchg
jp
pushf
push
mul
push
out
out
jo
sbb
pusha
lcall
sub
jmp
sub
aad
dec
or
cli
lret
icebp
leave
cli
jno
sbb
popa
clc
sbb
jmp
shr
jno
sub
aam
add
aaa
call
movb
dec
insl
shrl
adc
push
sbb
fxch
cmp
mov
push
adcl
fsubrs
lret
cmc
nop
jg
int
or
in
repnz
gs
push
sbb
xchg
push
ret
rorl
mov
inc
sub
and
sub
adc
int3
jecxz
jno
jp
jle
out
hlt
push
call
cmp
sbb
push
jnp
pop
icebp
lea
shl
lret
insl
or
mov
scas
ljmp
jns
test
or
insb
push
xchg
inc
sti
ljmp
hlt
mov
int3
test
xchg
ds
fwait
std
mov
add
les
test
sub
mov
out
adc
inc
incb
lret
lods
xor
negl
in
ja
std
inc
pop
xchg
stos
xchg
add
dec
cmp
sbb
lcall
add
fidivrl
push
jl
or
insl
mov
pop
test
adc
xchg
and
cli
sbb
jb
sarb
or
pcmpgtd
popf
inc
sub
sysexit
and
sti
jbe
and
into
add
cmpsl
fs
xchg
adc
or
xlat
int3
jno
push
mov
sbb
lods
xor
aaa
sbb
aaa
jmp
into
mov
jnp
rcll
and
out
pop
fwait
xor
clc
xchg
loopne
test
icebp
jne
xchg
les
out
push
pop
std
xor
daa
mov
inc
ret
pop
pop
mov
icebp
xor
jae
xor
stc
adc
add
gs
inc
sti
movb
sbb
mov
shll
jecxz
jne
orl
inc
xchg
mov
jnp
add
xchg
out
dec
in
fstps
cmp
xchg
sbb
mov
cmp
dec
adc
dec
js
jmp
popa
sahf
pusha
sub
rolb
daa
xor
or
xchg
pusha
cmp
fstps
or
orb
pop
pushf
push
and
fadds
push
push
dec
sub
mov
sub
xchg
mov
inc
xchg
shlb
jnp
push
jae
cld
mov
dec
pop
pop
scas
fwait
add
adc
push
aam
pop
cmp
add
push
xchg
or
cmc
out
std
pop
leave
cld
test
inc
and
pop
dec
push
xor
add
movsb
aaa
mov
mov
shlb
jecxz
mov
inc
xor
mov
adcb
insl
jne
popa
cli
jbe
and
dec
popf
ds
mov
int
pop
sub
ljmp
loope
cld
aas
addb
jg
sarb
inc
jl
pop
sbb
push
loop
cmp
xchg
pop
test
add
pop
inc
pushf
adc
cwtl
jmp
repnz
xor
aas
fwait
or
push
push
pop
sbb
cld
ret
cmp
testl
inc
xlat
xorl
push
mov
xchg
pop
dec
out
addr16
mov
adc
xchg
pop
repz
jmp
jnp
test
mov
das
and
mov
sbb
adc
dec
add
cmp
mov
mov
jge
es
rorl
adc
xchg
inc
and
lods
jmp
push
shrl
cmpsb
mov
enter
push
xor
leave
jno
mov
cmp
mov
insb
cmp
pop
dec
pop
mov
aaa
adc
fbld
pop
xchg
mov
movsb
cmp
push
push
or
lock
enter
mov
fcoms
ret
add
add
xchg
lds
lcall
out
out
sbb
scas
ret
mov
or
xchg
xchg
adc
out
pop
mov
mov
stc
jp
shl
dec
sub
inc
cltd
cmp
gs
xchg
scas
and
xchg
mov
lea
xchg
shlb
call
jge
sarb
push
cld
movb
xchg
or
mov
dec
sbb
test
xchg
inc
and
lods
mov
sbb
lret
int
and
jecxz
pop
gs
and
out
jnp
mov
les
add
cmc
testb
out
rcrb
inc
push
mov
mov
sbb
push
cs
notb
push
testl
je
mov
push
inc
pop
add
lea
xorl
test
and
popf
lds
sbb
xor
lcall
mov
push
fcomip
das
das
jle
sbb
in
test
notl
outsb
dec
loope
gs
pop
xchg
out
sahf
daa
xchg
popa
adc
sbb
in
jecxz
fmuls
in
mov
int3
cmp
ss
fnstenv
mov
or
push
inc
data16
int3
hlt
out
icebp
vmovaps
fisubrl
pop
out
std
lds
add
push
call
jle
push
sub
mov
cltd
inc
jb
cmpsl
scas
dec
aam
mov
push
cmp
out
xchg
scas
or
or
pop
loope
jp
test
xor
shll
in
or
stos
out
mov
mov
mov
fwait
push
lds
jno
pop
jbe
cwtl
movsl
lds
pop
inc
sti
mov
xor
mov
popf
lret
cli
repz
fsubrl
clc
mov
pop
or
pop
test
xchg
pop
add
dec
insl
push
push
mov
jne
sub
ret
adc
movsl
mov
pop
mov
out
imul
das
mov
mov
xchg
scas
lea
movsb
jb
test
and
jbe
jge
and
stos
or
cmp
pusha
add
clc
cmp
mov
push
pop
or
lock
iret
pop
mov
in
incb
repz
aas
aas
push
inc
pop
push
adc
test
sbb
inc
dec
dec
push
in
lods
dec
rol
inc
or
fs
xchg
push
insb
lods
aaa
add
in
inc
pop
cmp
enter
xchg
mov
test
js
nop
dec
mov
test
pop
inc
pop
imul
mov
leave
js
sbb
test
mov
jg
scas
insb
inc
mov
loopne
sub
dec
push
cmp
push
popf
cwtl
sbb
xor
mov
cmpsl
ss
lock
aad
pop
mov
or
and
mov
ret
orb
and
test
into
push
lock
and
mov
test
pop
push
jbe
mov
jg
adc
notl
jnp
lret
pop
dec
and
fstl
clc
and
pop
pop
pop
pop
add
int3
mov
insb
scas
inc
sbb
gs
add
test
rcl
adc
cmp
push
ss
adc
gs
inc
jg
mov
xchg
cltd
push
dec
lret
mov
sbb
push
out
mov
out
enter
and
loopew
and
orb
ja
bound
nop
inc
loopne
dec
xchg
push
aas
outsl
sub
outsb
in
loope
pop
cmp
push
rcll
arpl
cmpsl
testl
mov
push
adc
mov
cmpsl
outsl
push
imul
hlt
pop
movsb
sub
sbb
inc
outsl
enter
data16
int
stc
mov
jno
add
andb
ret
push
ljmp
inc
push
or
aaa
shrb
insl
ret
push
pop
xchg
fcompl
jo
loope
iret
scas
inc
shll
lods
sbb
repz
in
dec
fmul
movsl
dec
inc
push
hlt
add
adc
xchg
cmp
xchg
popa
cmp
xchg
dec
test
adc
cmp
mov
inc
mov
pop
mov
xchg
sub
lahf
sub
test
loopne
dec
addb
pop
or
in
daa
adc
and
jo
cmp
pop
jne
mov
push
lret
push
addr16
sbb
fsubl
mov
jns
rorb
or
mov
rorl
jns
inc
into
and
lea
adc
sub
scas
mov
pop
or
cmp
push
flds
mov
mov
inc
or
sbb
mov
mov
testl
jbe
movsl
in
out
cld
mov
ss
mov
rorb
or
int3
clc
jnp
enter
loope
pop
sub
repnz
scas
push
sub
rcl
add
sbbb
mov
jno
jge
inc
fwait
add
dec
into
pop
rol
stos
dec
mov
pmaxub
adc
push
jl
je
out
fwait
adc
push
xchg
icebp
sub
cs
adc
inc
xchg
cmp
add
mov
push
dec
jecxz
pop
ljmp
xor
sub
pop
scas
loopne
mov
cltd
lods
push
std
jne
jle
xor
add
push
mov
dec
fiadds
fs
fisttpll
out
push
cwtl
call
push
ret
stc
fs
add
mov
inc
sbb
sbb
outsl
push
js
xchg
not
lret
mov
mov
movsb
outsl
push
repnz
std
fstpt
xchg
filds
out
lret
aam
in
js
test
in
mov
jns
stos
test
lahf
pop
jle
cmp
in
adc
loopne
out
dec
repnz
insl
sub
rolb
shll
fistpl
outsb
out
push
jbe
jge
adc
inc
popa
xchg
lcall
inc
movsl
push
and
out
dec
out
int
push
xchg
pop
fisubs
jb
jmp
insb
das
push
aad
lret
shlb
repnz
enter
daa
xchg
dec
int3
loope
fcomip
inc
jnp
jns
sbb
test
cmp
jbe
pop
pop
or
rcr
fidivl
jo
sbb
add
jp
test
andl
sub
shlb
cmc
push
fwait
xor
adc
scas
mov
jne
lret
jae
stos
push
mov
and
mov
mov
cmp
jge
jg
std
testl
mov
jmp
mov
stc
sbb
cmp
movsb
sbb
int3
inc
aad
pop
jnp
mov
test
imul
test
bound
xorl
xchg
jle
jnp
xchg
repz
popa
nop
and
les
lret
pop
jmp
push
xchg
push
add
mov
stos
ljmp
repnz
popa
aam
icebp
mov
rcr
jle
xor
push
roll
xchg
push
andb
inc
mov
push
xchg
pop
enter
mov
push
add
in
fnstenv
mov
or
shll
clc
rclb
rol
pop
push
pop
xor
shrb
push
cmp
int3
cli
jb
dec
in
push
sbb
out
in
jp
jp
jg
cmp
xchg
scas
loope
push
sbb
pop
push
jo
fwait
scas
mov
jb
rclb
fs
in
jne
push
jb
add
dec
xor
je
push
clc
scas
adc
push
dec
inc
out
add
iret
pop
cmp
stos
sar
mov
push
add
xor
mov
and
lods
fsubl
cld
push
xor
pushf
into
in
adc
push
sarl
lret
gs
aaa
pop
aad
rolb
jge
add
and
pop
int3
sub
in
nop
sbb
test
lds
mov
xchg
jne
mov
mov
das
pop
out
in
mov
test
xchg
mov
or
scas
ret
fisttps
or
int3
pusha
adcb
fistpl
add
adc
inc
sub
scas
into
dec
pop
leave
test
push
add
xor
sbb
and
lret
aam
scas
outsb
andl
jno
fs
je
movsb
std
fwait
jecxz
add
cltd
inc
pusha
inc
aaa
loopne
push
mov
sbb
jno
aam
dec
les
in
pop
mov
leave
int3
mov
xchg
mov
cmp
fwait
dec
jle
push
xor
ret
pop
sbb
aad
cmp
jl
imul
cld
test
xchg
dec
andb
push
push
cmc
sbbb
xchg
movsl
sub
jae
cmp
xorl
pop
cmc
aas
jmp
inc
insl
lock
xor
popf
xchg
mov
push
or
cmp
jmp
gs
fptan
shl
cli
cwtl
repnz
sti
jo
fsubrl
mov
les
push
sbb
xor
popf
push
xchg
and
ja
xor
pop
xchg
pop
ss
repz
add
mov
leave
int3
jl
jns
mov
or
push
push
dec
cmc
addl
js
mov
mov
pop
pop
loop
or
test
jecxz
cmpsb
push
mov
xor
adc
sub
jne
shl
cmp
adc
roll
cmp
fcompl
mov
cmp
cmovnp
jbe
lret
and
lock
ljmp
mov
in
inc
repnz
lcall
cwtl
lret
push
cmp
xor
mov
imul
push
xor
outsb
adc
pop
popa
sub
ljmp
test
mov
and
scas
or
loop
mov
mov
movzbl
rorb
cs
inc
pushf
call
test
int
pop
stc
jns
stc
rcrb
aaa
aam
pop
clc
and
popl
jl
scas
ret
ja
nop
xchg
pop
ss
adc
xor
sbb
scas
cmp
pop
jmp
jo
push
mov
xchg
xchg
xchg
cwtl
xor
scas
mov
data16
push
sarb
loop
out
inc
jnp
mov
incb
sbb
rolb
dec
arpl
mov
arpl
shld
ja
fnstsw
or
cld
fisubs
and
pop
das
jbe
ljmp
lds
addr16
mov
pop
inc
add
xchg
and
test
rorb
jne
clc
xor
pushf
jbe
test
cmp
daa
int3
cld
adc
mov
xor
lods
lds
pushf
cmp
mov
mov
add
xchg
pop
inc
fadd
xchg
cmpsb
add
iret
ljmp
sbb
test
xchg
xor
xor
fistpl
mov
xor
or
dec
or
loopne
insl
mov
push
mov
es
inc
pop
add
lods
ljmp
call
pop
and
or
rcll
xor
das
clc
jne
jle
sti
test
cmpsb
or
mov
xor
sub
fsubrs
aad
pop
loop
stos
jp
pushf
jbe
or
imul
mov
jns
and
sub
das
or
hlt
pop
jns
movsb
inc
in
dec
inc
std
std
xchg
stos
cmp
sbb
mov
mov
lret
or
pop
push
les
out
or
ret
cmpsb
add
jae
pop
or
popa
push
insb
addl
cmp
das
icebp
ja
xor
leave
ret
inc
or
push
lock
sub
sahf
fisttpl
jne
sbb
pop
or
movsl
jp
xorl
adc
mov
adc
push
push
sbb
pop
fucomip
sti
inc
jp
cld
js
jbe
pushf
push
std
mov
mov
xchg
orl
js
pushw
in
aaa
imull
cltd
scas
push
xchg
cmp
insl
jge
add
test
rcrl
bound
pushf
jge
sub
mov
insl
lods
ficompl
cld
sub
popa
mov
fadds
insb
push
ds
push
mov
sub
fisttpll
or
lret
fimuls
and
xchg
jmp
mov
sbb
sbb
lods
pop
jp
rcll
adc
cld
sub
shr
mov
in
push
pop
xchg
fcmovnbe
fdivrl
fsts
pop
adc
fldenv
stos
into
jg
cld
sahf
mov
sub
add
jge
push
pop
in
cli
lock
and
push
testl
stc
inc
mov
inc
dec
aaa
stos
push
push
pop
shr
xorb
ror
pushf
or
mov
lcall
jb
push
or
jle
jg
jecxz
push
nop
test
es
push
inc
push
imul
out
inc
jge
push
lea
xchg
aaa
sub
repnz
or
jnp
and
or
int
fs
xchg
fxsave
dec
data16
inc
pop
flds
repz
lahf
jns
aaa
push
inc
xor
nop/reserved
cmp
xchg
sbb
xor
call
push
arpl
inc
mov
pusha
idivl
push
mov
fidivs
cwtl
xchg
je
push
sbb
mov
out
inc
xor
push
scas
pop
jnp
repz
fbstp
cmp
xor
test
or
sarb
cmp
call
inc
mov
or
push
add
sbb
jg
lret
sahf
lds
lcall
rorl
fsts
xchg
das
and
push
dec
cmp
insb
jmp
repnz
ljmp
sub
insb
sub
dec
sahf
shll
mov
mov
push
push
inc
adc
and
adcl
jmp
loope
sub
mov
mov
iret
jmp
mov
or
fnsave
jns
in
in
push
repnz
jmp
imull
or
push
jecxz
mov
cmp
cmp
psraw
adc
jae
sub
push
xchg
cli
ds
cs
pusha
jbe
sbb
call
je
jae
popa
arpl
fs
inc
rorb
dec
jle
push
fsubl
hlt
push
sti
push
shl
es
mov
loope
add
pop
mov
sub
test
sub
mov
jl
xchg
push
push
jno
cmp
pop
fs
sbb
dec
and
dec
sahf
or
enter
out
sbb
ret
insl
fcom
push
sahf
in
inc
push
insb
mov
pop
add
jae
sbb
sti
xchg
fs
cld
push
loop
scas
adc
xor
daa
push
scas
lret
cmp
xchg
mov
movsl
repz
push
sbb
daa
push
xchg
push
sahf
xchg
cmp
pop
xchg
movsl
mov
sbb
dec
cmc
std
push
mov
fs
xchg
lea
xchg
mov
add
dec
loop
xchg
inc
insl
mov
fstps
pop
out
lret
xchg
mov
sub
and
or
in
push
cmp
mov
mov
arpl
jb
fiadds
insl
arpl
and
aas
cmp
hlt
cmp
push
into
add
in
or
jnp
cltd
sbb
push
cmp
mov
fnstsw
test
jecxz
popf
mulb
push
mov
add
loopne
lea
sar
pop
dec
lahf
mov
pusha
dec
test
sub
sbb
inc
orl
int3
jbe
cmp
push
movsb
pop
cli
mov
sahf
sbb
pop
data16
dec
cmp
insb
fcoms
cli
icebp
lret
ret
fisttps
cli
and
movsb
inc
into
cmp
stos
cmpsb
hlt
std
testb
shlb
xchg
scas
jns
jp
mov
cmpsl
loopne
out
jo
or
stc
loop
hlt
jp
adc
outsb
dec
push
adc
popf
pop
test
sub
sbb
mov
sub
jle
aas
outsl
push
shll
call
in
mov
pusha
mov
out
jb
inc
xor
xchg
mov
or
out
lsl
bound
jle
pusha
push
adc
dec
and
ret
mov
ret
into
ljmp
ljmp
arpl
lahf
jae
icebp
frstpm(287
or
mov
std
dec
gs
add
mov
jbe
fnstsw
jp
push
xchg
fxch
or
out
into
nop
jge
cmp
sub
xor
or
lds
andb
out
xor
icebp
push
lret
add
add
data16
sub
push
or
jl
or
push
pop
add
lock
jecxz
icebp
cwtl
cmc
xor
jmp
sub
cs
aam
test
ljmp
jge
mov
push
mov
fmuls
rorl
and
pop
ss
loopne
movsl
call
dec
dec
mov
adcb
icebp
sub
test
dec
jecxz
mov
enter
rcrb
xor
mov
add
lret
xchg
in
fwait
and
xchg
sbb
adc
mov
or
mov
mov
mov
test
push
inc
add
cmpsl
or
inc
and
and
pop
mov
lret
jbe
sub
cmp
cld
lcall
shlb
push
outsl
repnz
push
sbb
out
enter
test
dec
inc
stc
out
xor
jne
mov
pushf
xchg
test
pop
dec
icebp
adc
out
fmull
jns
mov
fcmovnb
in
aam
and
pop
call
notl
cmpl
dec
push
cli
out
mull
aaa
out
andl
sbb
jns
push
ds
pop
out
mov
inc
fwait
shll
dec
pusha
call
je
dec
push
ret
add
mov
mov
out
popa
lds
ds
inc
lret
jnp
push
add
jb
pop
fiadds
fistpll
mov
inc
nop
mov
xchg
cltd
out
in
jge
mov
jmp
xchg
in
cld
ss
ficoms
cmc
outsl
inc
fnsave
or
popa
jp
jae
mov
mov
jmp
jge
jb
daa
mov
nop
in
adc
add
adc
push
mov
dec
in
adc
push
icebp
pushf
std
andl
adc
mov
movsl
std
or
data16
push
leave
out
mov
sub
call
mov
das
push
mov
or
mov
into
fisubl
nop
push
aad
add
and
fucom
cmpsl
daa
leave
mov
scas
fsubs
or
int3
lods
push
sti
mov
repnz
dec
int3
in
jmp
sub
xchg
fbstp
pop
mov
xchg
add
call
notl
cmpl
push
and
lods
adc
in
mov
inc
cmp
inc
mov
imulb
out
in
cmpsl
sub
mov
inc
negb
in
mov
cmp
push
call
mov
sub
inc
mov
test
or
inc
addr16
jns
stos
sub
cmpsb
lock
push
andl
movsl
das
js
lea
push
jp,pn
cltd
stos
out
mov
lds
sbb
cmpsb
js
mov
sbb
sbb
add
rolb
andb
mov
push
loopne
insb
add
push
hlt
sti
mov
inc
xchg
sbb
imul
xlat
cld
mov
aas
mov
and
addr16
mov
shlb
idivb
cmp
in
icebp
push
popa
and
lock
jl
mov
stos
outsb
or
shrb
and
add
subb
xchg
sahf
add
mov
adc
fucomip
mov
inc
neg
and
add
inc
push
and
subl
cmp
adc
and
rolb
mov
mov
xor
pop
xchg
testl
nop
arpl
popl
les
pop
mov
cmp
aam
push
pop
nop
lods
push
pop
inc
jl
ret
cmp
add
dec
iret
adc
sub
jbe
or
testb
cli
fld
cmp
push
inc
mov
xchg
and
jge
cmp
jb
adc
out
xchg
mov
cmp
mov
mov
mov
mov
cmpsb
outsb
aas
mov
xchg
sbb
sbb
pusha
aas
cmp
aaa
adc
pop
stos
mov
sub
push
sahf
dec
test
aaa
out
fdivrs
add
int
scas
std
bound
sub
mov
lahf
dec
mov
adc
push
dec
add
fimuls
xlat
addr16
fmuls
add
lods
add
mov
and
inc
call
cld
or
mov
inc
cmpsl
cltd
xchg
imul
in
pop
adc
push
gs
and
iret
fdivs
pop
and
in
and
imul
out
dec
out
jne
scas
inc
test
inc
xor
xchg
inc
adc
adc
xchg
dec
scas
mov
ffree
xor
jle
aas
fwait
shll
stc
or
gs
enter
xchg
mov
rcr
stos
push
push
sarl
lcall
sub
inc
pop
lret
mov
mov
js
mov
pop
leave
cld
mov
pop
push
arpl
inc
flds
outsb
outsl
and
jo
jmp
pop
jge
cmc
movsl
push
fwait
movsb
in
inc
push
and
ret
dec
popa
xchg
mov
dec
mov
movsb
dec
cli
xorl
xchg
lret
jp
mov
dec
jbe
ret
scas
movsl
or
cmp
fwait
into
cld
xchg
iret
cmp
addb
jle
jno
pop
ja
sahf
shrb
jecxz
cmp
xchg
sti
push
leave
shl
inc
lret
jp
movsb
xor
shl
and
jb
xor
push
fmul
test
mov
imull
test
xchg
push
pop
scas
fcom
add
call
and
adc
movsl
inc
mov
mov
int
xchg
adc
mov
lcall
fsts
sbb
inc
std
mov
cmp
adc
adc
ror
std
out
push
sbb
lahf
je
aad
sub
xchg
repz
mov
adc
mov
ljmp
out
inc
jle
cmp
rcl
xor
sbb
test
or
push
popa
sbb
inc
loope
adc
mov
sbb
cld
mov
mov
sarl
ljmp
sbbb
adc
push
push
int3
fdivrs
aad
mov
dec
cmp
popf
jae
jge
adc
jbe
push
inc
lret
xchg
mov
inc
jle
leave
xor
aaa
clc
aaa
cmp
cwtl
call
push
pop
scas
mov
xlat
lock
out
adc
push
scas
rolb
pusha
aaa
ds
add
nop
scas
sti
test
mov
sbb
xor
movsb
ljmp
mov
mov
movl
fsubrp
movsb
sbb
insl
aas
mov
aad
ja
in
leave
sub
jmp
arpl
cmp
cmp
out
into
imul
adc
test
rorb
push
movl
jno
lret
mov
jns
xchg
aad
sub
mov
jg
leave
mov
sub
aas
pusha
pop
jg
aas
scas
pop
push
mov
shlb
dec
or
ret
and
dec
adc
mov
test
xor
add
mov
mov
and
dec
push
push
js
add
dec
and
cmc
add
and
xchg
jmp
outsb
sbb
push
pop
cmp
jo
xor
mov
pop
out
cli
lods
xchg
cs
subl
pop
out
sahf
xchg
mov
sbb
mov
dec
mov
xchg
aam
push
xchg
xchg
pop
jge
xchg
fmull
sbb
add
mov
ja
repz
xor
lock
and
or
mov
data16
sub
lea
cmp
jp
sbb
push
xlat
jbe
adc
nop
into
clc
add
add
aam
xor
scas
cmc
mov
ret
jnp
push
push
sbb
leave
outsl
push
push
call
iret
push
inc
in
or
enter
imul
xorb
lods
jb
inc
add
mov
or
cmc
xor
or
mov
lea
jne
and
into
out
inc
repnz
mov
or
xchg
lret
jne
out
lock
sub
lock
sub
dec
scas
mov
push
lods
ss
icebp
add
sbb
out
jg
mov
mov
push
mov
mov
lea
xchg
push
mov
adc
adc
add
jmp
pop
arpl
sbb
mov
ljmp
mull
and
movsl
cld
cld
call
sub
jo
add
mov
mov
and
je
icebp
nop
imul
xchg
ret
pop
addr16
scas
dec
and
inc
lret
bound
rcr
xor
ss
jnp
mov
dec
stc
aad
mov
inc
out
in
adc
pop
frstor
cli
out
cmpsb
les
jnp
dec
repz
mov
adc
fidivrl
popf
add
enter
mov
shr
stos
mov
out
jmp
mov
pop
test
jle
xchg
pop
mov
int
pushf
mov
addl
xor
xlat
jecxz
ret
jecxz
jmp
adc
jo
sub
cmp
jle
mov
inc
mov
loop
je
dec
data16
icebp
mov
fwait
test
sbb
cs
lods
xor
ljmp
mov
adc
xlat
inc
sbb
loop
aaa
sbb
add
aam
dec
roll
cwtl
bnd
cmp
mov
rorb
xor
ror
xor
stos
mov
or
ret
mov
jmp
les
insl
pop
cltd
jp
pop
bound
mov
insb
or
shlb
or
sub
shlb
inc
divl
cli
ret
inc
inc
int
inc
scas
loope
mov
and
adc
outsl
or
or
or
fwait
test
push
jo
test
mov
inc
mov
mul
aam
or
in
aad
repnz
mov
into
sub
scas
adc
testb
mov
and
sarl
aas
loope
xor
inc
jmp
adc
jns
inc
loop
pop
pop
adc
inc
and
jge
fwait
mov
es
sub
repnz
in
pop
movsb
sub
gs
decl
cli
sub
sub
lahf
or
lahf
sti
addb
fs
mov
out
popf
notb
lahf
lock
xor
dec
ss
mov
sti
pushf
cwtl
add
mov
out
out
adc
push
lods
push
jae
pop
shlb
push
pop
jno
mov
mov
test
pop
sar
jmp
fmul
cld
popa
cmc
cltd
dec
sbb
lods
inc
lods
mov
sub
adc
loope
repnz
in
add
and
in
mov
movsb
dec
adc
push
jecxz
fsubl
push
movsl
in
push
es
xor
pop
push
mov
add
mov
popa
mov
add
xor
pop
sbb
lahf
sbb
rorl
mov
subl
mov
inc
test
and
mov
mul
adc
add
dec
mov
lea
and
fs
vpmacsww
inc
fbld
pop
lea
add
sub
test
pop
mov
dec
test
outsb
outsb
adc
or
or
int
push
sbb
or
xchg
outsl
jns
sub
fsts
lds
add
test
xchg
sahf
pusha
mov
sbb
out
xor
mov
mov
andb
scas
mov
push
add
dec
push
out
jp
stc
scas
loope
mov
sbb
mov
mov
cwtl
dec
fistl
pop
sbbb
push
dec
jnp
ss
lret
pop
push
andl
mov
add
bound
stos
cltd
pop
xchg
lea
scas
arpl
adc
mov
xchg
loop
out
sbb
push
int3
and
xor
in
in
pop
push
dec
xor
xchg
jg
insl
lea
repnz
in
mov
enter
sahf
je
xchg
cwtl
outsb
jle
adc
jge
imul
lock
into
mov
rolb
lret
mov
fdivrl
mov
dec
push
dec
inc
loop
ljmp
jp
inc
pop
and
add
or
lods
mul
sbb
xchg
dec
aad
insb
stc
push
inc
je
mov
lods
mov
aas
xchg
ljmp
popa
push
jl
shll
mov
sub
dec
pop
and
mov
xchg
fcomps
imul
cmp
or
test
sbb
push
push
stos
or
jge
inc
sbb
leave
mov
adc
mov
inc
xchg
push
xchg
repz
cmp
push
pop
xchg
pop
jno
jp
cmp
pusha
mov
in
mov
push
jg
push
lcall
xor
pop
pusha
jecxz
incb
jno
divl
stos
pop
dec
lret
jnp
sub
test
fs
adc
outsb
movsl
rcrb
imul
mov
out
or
cmp
fsubr
sahf
sub
mov
test
outsb
repz
in
dec
cmp
dec
dec
and
aaa
mov
enter
push
repnz
stc
jo
mov
loope
mov
loope
push
int
ficoms
mov
bound
lret
out
pop
clc
stos
outsl
xchg
mov
lock
aaa
xchg
gs
ja
push
and
test
stc
ss
inc
ret
mov
xchg
jbe
dec
jno
mov
cmp
cs
xchg
int3
xor
sub
movsl
sub
mov
mov
dec
or
rorl
pop
or
repnz
fsubl
xor
orl
pop
inc
xchg
outsl
loope
jno
or
and
movsb
fisubrl
icebp
popf
outsl
ret
cs
and
inc
das
inc
xor
cmpsl
inc
and
cmpl
orl
call
pop
fbld
outsl
add
repnz
in
mov
imul
rcr
out
xor
lds
push
adc
mov
ja
out
insb
mov
mov
add
adcl
mov
adc
gs
xchg
and
push
or
jne
repnz
rcll
add
lret
sub
dec
pop
gs
outsl
inc
push
gs
mov
mov
push
lods
mov
int3
mov
adc
ficoms
mov
insl
xor
inc
gs
cmpsb
out
adc
jne
jmp
test
mov
cmp
out
es
jle
outsl
das
call
sbb
and
dec
jmp
lahf
fisubrl
and
push
add
sbb
lret
sub
add
jg
push
pop
pop
jge
mov
lahf
imul
test
xor
aad
notl
mov
add
scas
lahf
rcr
mov
xor
jbe
imul
mov
sbb
scas
clc
jns
push
out
fcompl
sub
mov
sub
sub
leave
jnp
rorb
or
xchg
or
mov
lea
pop
leave
sub
pusha
xor
add
test
aas
in
cmp
test
daa
pop
leave
negl
mov
std
in
jbe
insl
add
ljmp
adc
and
scas
mov
mov
xchg
lcall
mov
cld
rcrb
shlb
xchg
sahf
mov
mov
sub
cwtl
mov
dec
xor
repnz
fnstcw
mov
leave
jl
xchg
movsb
fmul
adc
insl
sub
jb
dec
mov
roll
inc
ljmp
sbbb
je
add
push
fwait
orb
jnp
lea
in
bnd
xchg
mov
je
incb
pop
jmp
in
mov
jecxz
mov
rorl
ss
je
daa
lret
shl
mov
shlb
sub
sbb
sbb
or
into
rclb
mov
daa
dec
lock
pop
shlb
test
popa
popl
jns
jb
lahf
loop
push
ret
imul
xchg
adc
mov
nop
icebp
sbb
sbbl
roll
aad
and
sbb
add
imul
sbb
lret
adc
mov
mov
sbb
scas
lret
hlt
pop
xor
and
out
push
cs
jbe
cwtl
rorl
dec
aad
leave
hlt
add
lahf
push
push
push
pushf
jmp
dec
pop
adc
mov
jb
adc
dec
dec
fsubrs
xchg
jns
movsl
push
push
xchg
mov
jnp,pn
or
mov
inc
mov
cli
xchg
mov
int
jecxz
movsl
mov
rcr
notb
insb
and
mov
sbb
mov
insb
das
mov
fwait
jl
pop
dec
inc
es
inc
int3
outsl
mov
pop
repz
xor
fists
gs
cmp
push
cwtl
mov
xchg
sti
pop
add
in
das
sbb
or
mov
add
xor
inc
push
stc
xor
mov
jmp
cmpsb
jne
rorl
lods
ss
call
leave
sbb
into
shrb
lcall
insl
nop
xchg
or
mov
adc
gs
into
pushf
inc
and
sbbl
adc
repz
hlt
clc
in
xchg
lret
mov
pop
loopne
popf
insb
hlt
xor
ss
js
lret
mov
leave
int
mov
mov
adc
sub
fiaddl
and
ucomiss
and
pop
frstor
mov
jle
xchg
cmp
icebp
add
iret
and
xlat
pushf
pop
pusha
jmp
push
lods
rol
and
add
pop
sbb
inc
adc
adc
lcall
add
dec
dec
inc
and
cwtl
fldenv
or
rcr
xchg
adc
shll
aad
push
stc
push
aam
mov
xchg
add
nop
inc
sti
jnp
pop
dec
loopne
xorl
in
mov
ds
fs
insl
dec
cmpb
mov
testb
dec
repz
fstps
aad
les
loop
shll
mov
push
in
add
rorb
ss
cmp
scas
data16
sbbb
push
ljmp
ficompl
pop
and
in
decb
ss
repnz
push
lcall
cwtl
xchg
arpl
aas
les
dec
pop
js
mov
bound
std
mov
xor
pushf
es
xor
jmp
cmpsb
mov
movl
or
cmp
fdiv
clc
xor
into
out
mov
pop
cmpsl
xchg
ret
xor
aam
xchg
shr
aas
and
and
push
sub
outsb
inc
inc
add
or
add
jne
jno
cmp
push
outsl
mov
xor
add
imul
subl
jo
xchg
jl
rolb
jmp
out
lret
sbb
pop
in
ret
lea
imul
push
mov
mov
rorb
enter
push
or
int
out
dec
ret
pushf
fs
cmpsb
fs
sbb
cltd
dec
dec
inc
test
ljmp
aad
pusha
and
pop
inc
icebp
cmp
adc
mov
mov
test
fwait
jb
jmp
and
ret
and
jle
stos
dec
cmpb
imul
es
stc
sbb
mov
dec
mov
jb
in
sahf
dec
mov
mov
dec
ret
push
loopne
test
jnp
push
sbb
sbb
mov
lea
test
mov
mov
orb
pop
fwait
cli
add
mov
aas
popa
lock
dec
mov
dec
cwtl
add
or
cs
mov
xlat
xlat
aad
mov
test
lds
sub
pop
xor
push
out
fadds
pop
pop
add
into
dec
xor
mov
test
pop
rcrl
decl
vpmaxub
outsl
pop
loope
arpl
js
pop
inc
pusha
jmp
adc
sub
inc
idivb
pop
jb
dec
das
fldenv
fistpll
sahf
repnz
push
fdivl
inc
scas
out
and
lcall
jne
xor
jns
xor
fwait
test
cwtl
push
sarl
add
cmc
int
flds
dec
mov
xor
dec
stos
enter
fidivs
cld
xlat
xlat
sub
jno
es
imul
xchg
pop
ljmp
std
loopne
lret
pop
aam
lcall
fistps
fistps
sub
ret
jp
xchg
push
je
in
sub
outsb
je
cmp
inc
fdivrl
je
mov
mov
into
add
sub
push
lret
mov
inc
xor
mov
loope
xchg
rclb
sbb
cmp
test
pop
mov
mov
xorb
out
outsl
in
push
push
cld
pop
jle
aaa
iret
ljmp
stc
xchg
jae
jb
mov
mov
subb
out
ss
jg
cmpsb
mov
les
lods
dec
add
add
mov
imul
mov
std
jno
fs
push
bound
mov
clc
sti
and
test
js
lret
push
aaa
subb
addb
mov
adc
jp
addb
dec
pop
int3
cmp
dec
in
aas
or
std
cmpsl
jp
loop
in
jae
xchg
loope
leave
cld
test
mov
inc
in
mov
test
mov
rcr
aas
xor
in
xchg
shl
xchg
sbb
lods
clc
mov
jne
stc
push
je
cmp
es
cmp
sub
andl
hlt
jno
push
sbb
mov
adc
stos
clc
xsha1
cmpsb
dec
push
adc
cmc
hlt
or
imul
lret
push
dec
inc
movsl
movb
push
xchg
or
push
sbb
xlat
jb
movsb
movsl
ss
leave
lods
inc
popf
sti
mov
imul
add
pop
jmp
or
push
es
pop
mov
outsl
int3
data16
gs
xor
icebp
mov
sahf
ret
xor
jmp
repnz
mov
fimull
pop
pop
push
ret
jmp
mov
inc
cwtl
jae
jae
jle
arpl
lahf
mov
inc
aas
roll
nop
cmp
fidivs
pop
xchg
sbb
loop
push
dec
stos
or
push
les
out
push
int3
int
pop
pop
dec
xchg
inc
popa
pop
jl
xchg
push
aas
cwtl
sbb
outsl
cmp
mov
push
cmc
xchg
jp
xor
cltd
std
in
pop
cmp
push
inc
mov
repnz
jl
xchg
inc
repz
lea
sub
imul
mov
das
bswap
push
push
popf
sub
dec
xor
dec
or
add
mov
loop
or
cmp
dec
repz
outsl
xchg
ret
call
pop
inc
in
sbb
xchg
xchg
or
lea
shll
push
mov
mov
movsb
mov
and
dec
add
cmp
cltd
fs
adc
rcrl
hlt
pushf
dec
mov
add
sub
insb
dec
es
or
inc
nop
add
sarb
xchg
mov
ljmp
pop
xchg
stos
dec
loop,pt
xorb
outsl
push
popf
out
fs
sti
fwait
mov
push
int
xchg
mov
cmpsl
mov
ret
or
jmp
mov
leave
mov
loopne
ljmp
xchg
les
ds
pop
or
pop
movsl
test
ss
jb
and
cwtl
ja
div
dec
mov
cmp
and
lcall
jecxz
push
stos
iret
pop
pop
inc
icebp
or
or
cmp
add
adc
insl
test
xor
fcomps
jne
aaa
mov
xchg
in
test
scas
mov
test
movsl
test
push
xor
dec
insl
add
ljmp
cmp
mov
sub
lods
adc
dec
cmpl
xchg
addr16
push
add
mov
leave
pusha
or
mov
aas
rclb
push
jge
lret
sub
arpl
stc
xchg
xchg
setle
dec
inc
je
je
sbb
add
sub
adc
dec
mov
stos
das
movsb
and
pop
xor
lret
add
add
jmp
cwtl
sbb
repz
mov
jg
inc
lcall
lret
sub
push
je
sub
pop
jnp
and
enter
inc
push
push
pop
sahf
mov
ret
std
cmp
sbb
push
xor
gs
aad
jae
push
sbb
stc
push
push
call
jg
inc
xor
xchg
dec
je
xor
bt
adc
inc
sub
or
pop
ljmp
movsl
loopne
int3
mov
ljmp
xorl
mov
je
andl
ja
in
add
jge
xchg
movsl
or
jecxz
jnp
or
adc
lsl
mov
fisubrl
lds
clc
ds
push
ret
push
mov
jno
dec
xchg
out
mov
add
inc
bound
mov
cld
popa
adc
or
adc
fcomps
scas
int
xor
and
xchg
daa
and
in
sti
test
add
cs
loope
gs
mov
cmpsl
or
outsb
fstl
add
jae
roll
nop
fsubp
pop
sub
lock
mov
scas
push
enter
inc
sbb
jae
ja
pop
mov
movsl
inc
sarl
inc
dec
xor
pusha
pop
fildl
lcall
pop
sbb
add
dec
das
mov
jns
popa
mov
aaa
repnz
sahf
divb
aas
shrb
mov
cltd
push
negl
mov
xchg
mov
dec
out
lcall
enter
out
jge
lods
popa
add
es
pop
lock
sbb
mov
inc
lahf
cltd
fsubs
cmp
sub
ja
scas
insb
std
mov
mov
imul
inc
add
adc
mov
push
adc
imul
faddp
xchg
sbb
adcl
aaa
dec
sub
enter
int3
xchg
cwtl
mov
xchg
add
dec
xchg
repnz
push
sub
loop
je
mov
xchg
sub
test
in
mov
mov
out
hlt
in
les
mov
push
dec
aad
lret
xchg
lea
xor
dec
adc
aad
repz
dec
inc
and
clc
sbb
sub
lock
dec
fildl
add
lahf
ds
inc
mov
cli
inc
movsb
loop
lea
xor
call
fwait
mov
lds
mov
xchg
cwtl
stos
std
bound
jae
lods
dec
cs
mov
jmp
lock
xlat
ds
sbb
sub
adc
daa
scas
shrl
arpl
bound
lcall
gs
repnz
pop
scas
jecxz
mov
xor
mov
and
xchg
rcrb
fdivl
sbb
in
add
jle
and
cmc
or
jge
cmpsl
or
or
adc
lock
addb
jecxz
imul
cmp
stc
out
cmp
out
in
aas
lret
aas
push
mov
sbb
pusha
mov
pop
jb
pop
sbb
aas
and
and
jge
mov
cld
inc
mov
inc
stos
add
icebp
and
inc
xchg
cmp
xlat
xchg
cltd
bound
sbb
ljmp
or
push
mul
cs
cmp
jb
or
test
add
xchg
mov
testl
xlat
push
mov
pop
xor
mov
dec
mov
aam
cli
popf
push
test
pop
nop
pop
mov
mov
xor
cwtl
jbe
nop
leave
lods
fcmovne
inc
add
inc
xor
in
mov
cmpl
movsl
stc
dec
dec
loope
lods
push
mov
adc
insl
in
cmp
in
shlb
sub
dec
push
xorl
repz
lcall
outsb
add
enter
xchg
sub
cmpsl
loope
adc
jns
jl
test
fdivp
or
daa
bound
ljmp
leave
pop
nop
imul
xor
push
mov
add
jp
and
jp
add
add
xchg
insb
fidivrl
pop
outsl
dec
fisttpl
out
repz
std
and
or
push
les
fcompl
test
ret
sub
aam
hlt
in
inc
repnz
adc
push
js
int3
iret
cmpsb
mov
fs
lret
int3
mov
jae
mov
add
and
push
in
or
jl
das
iret
cli
aaa
pushf
jo,pn
mov
aaa
and
out
xorb
dec
ss
jae
das
and
mov
sbb
jae
lods
mov
and
out
test
sbb
bound
push
cmc
and
nop
sub
insb
mov
lahf
jmp
inc
setb
icebp
xchg
std
pop
stos
dec
or
mov
pop
mov
ret
ret
addr16
xor
mov
or
add
ds
jno
pop
xor
pusha
rclb
out
call
inc
push
movsl
push
stc
or
lea
fcoml
mov
and
or
mov
push
sub
or
arpl
add
fisttps
sub
jp
mov
lcall
lret
and
int3
xchg
loope
xchg
xchg
adc
push
ret
out
addb
lea
cmp
int3
pop
clc
inc
mov
loop
jmp
jbe
test
dec
and
es
pop
popa
test
mov
in
cmp
or
and
mov
and
inc
mov
sahf
adc
mov
jl
repnz
adc
jp
inc
jae
cmp
xchg
dec
ljmp
ds
loopne
xor
in
inc
ret
mov
cmp
and
test
mov
insl
xchg
add
mov
xchg
add
js
push
stc
push
lret
das
cmp
sub
mov
addr16
xor
push
and
xchg
dec
mov
rolb
int3
xor
out
inc
xchg
xchg
imul
or
gs
mov
imul
mov
movsb
out
pop
cmpsb
pop
dec
adc
out
sti
rcll
jge
xchg
rclb
push
pop
xchg
in
int3
push
cmpsb
ret
outsl
dec
mov
xchg
test
insl
mov
daa
std
pop
or
nop
inc
mov
data16
pop
addr16
subb
push
insl
cli
xor
and
mov
xor
loope
jae
mov
push
repnz
cld
dec
dec
push
jne
cmp
ss
add
insb
jp
dec
sbb
jmp
xchg
js
ja
push
mov
push
popf
xchg
shrl
mov
sub
icebp
test
mov
mov
fdivl
je
sbb
xchg
gs
movsl
add
adc
or
xchg
push
ret
push
decl
jle
xchg
out
out
lret
loop
pop
call
ret
xor
ss
fnstcw
jnp
cmp
aaa
shlb
sub
add
inc
dec
shrl
jl
lods
aaa
loop
in
inc
pop
hlt
sbb
mov
leave
dec
xor
int3
std
push
dec
nop
push
cmp
bound
sub
pop
push
pushf
cld
rclb
in
pop
sub
mov
std
mov
aam
jecxz
aas
fwait
shlb
enter
lret
or
add
jecxz
mov
push
lods
or
sti
mov
dec
andps
subb
faddl
lds
jle
lods
out
outsb
cmp
sbb
sbb
adc
stos
enter
pop
arpl
outsl
js
jge
push
out
xchg
pop
divb
fmul
add
in
filds
testl
cmpsl
or
fdivs
ja
or
xchg
ficompl
xchg
push
insl
stos
dec
hlt
fcoml
ret
or
pop
push
subb
mov
enter
or
test
mov
testb
jns
mov
gs
test
adc
or
jbe
sub
cmpsl
jno
movsl
outsl
outsl
mov
jno
ss
pop
and
xchg
pop
lret
sbb
add
cwtl
xchg
lds
push
mov
cmpl
push
cmc
dec
lcall
dec
stos
adc
sbb
cmc
fs
mov
pop
inc
popf
cmp
mov
arpl
push
sub
mov
mov
mov
stos
test
jno
lock
push
xchg
xor
in
cld
cmpl
stos
call
shr
mov
xchg
push
pop
add
xor
add
xchg
fsubp
add
aam
jecxz
inc
mov
aam
repnz
or
les
or
cltd
into
or
push
inc
adc
sub
in
outsl
mov
mov
lret
xor
inc
sahf
mov
cmp
fstl
add
orb
int
pop
lock
icebp
lock
clc
xor
push
or
daa
inc
sbb
adc
cmp
popf
jge
xor
cmpsl
rcl
inc
int3
inc
andl
cmp
xchg
dec
mov
sub
xchg
ss
xchg
lock
fwait
cltd
pop
js
jecxz
clc
dec
pop
jno
or
sub
push
lcall
pop
mov
push
sub
aad
ret
and
enter
xlat
xchg
dec
ljmp
inc
in
xchg
mov
call
push
cltd
scas
mov
jbe
adc
dec
push
push
jl
cltd
js
leave
pop
add
sub
push
adc
fstpl
sub
mov
mov
loopne
xlat
jge
fwait
add
jo
xor
cmp
cmp
fsubp
outsl
enter
add
inc
sbb
loop
lds
ja
sbb
cmp
jnp
mov
jbe
mov
pop
stc
xlat
inc
cmpb
popa
lds
add
mov
dec
jnp
sub
outsb
pop
jno
movl
fbstp
pusha
and
push
jmp
or
mov
dec
push
mov
push
push
push
movsl
inc
sar
push
pop
adc
test
pop
add
ret
repnz
xor
inc
push
das
mov
push
adc
mov
pop
and
dec
lahf
xor
bound
and
xchg
or
filds
stc
mov
xchg
in
lods
xlat
and
fdivrs
aas
push
rorl
push
mov
daa
push
insl
cmp
pop
jns
pop
add
pop
and
clc
inc
cmp
sub
dec
fs
shlb
mov
orl
cwtl
arpl
mov
push
mov
adc
or
jp
mov
aad
xchg
inc
aam
sbb
insl
sti
mov
lahf
jg
sub
daa
push
jmp
jmp
sub
loopne
pusha
fisubl
lahf
pusha
gs
icebp
xor
xor
mov
adc
push
jecxz
or
loop
push
fs
inc
neg
jne
aas
jl
int3
fnstcw
dec
cmp
out
or
xor
cmpsb
imul
xchg
pop
fldenv
mov
imul
push
fcompl
dec
ds
xor
pop
add
xchg
in
xlat
xor
push
adc
sub
popl
movsl
push
into
bound
mov
cs
loopne
add
divw
push
pop
mov
ds
pop
inc
cmp
add
divb
xchg
lods
fidivs
sub
jne
xor
mov
dec
sbb
nop
lock
mov
push
mov
sti
sbb
pop
movsb
or
test
je
out
cs
xchg
dec
adc
dec
or
mov
pop
or
loope
pop
pop
cmp
push
mov
pop
imul
out
aas
gs
mov
popa
js
lods
dec
or
mov
stos
ljmp
cmpsb
jmp
jnp
mov
addl
cltd
inc
insb
ror
mov
inc
fidivrl
pusha
repz
cmp
mov
rcll
pop
pop
movsb
movsb
test
xor
or
fistps
aas
fcmovbe
mov
test
outsl
movb
adc
inc
cli
ret
mov
dec
pop
scas
lcall
mov
jg
les
mov
jle
jae
jns
xchg
xor
loope
ljmp
pop
stos
imul
xchg
dec
out
xchg
in
sbbb
out
dec
fnstenv
push
movsl
mov
stos
lret
mov
push
or
jp
loope
daa
test
movsb
cwtl
call
mov
ss
fucom
push
int3
ret
mov
arpl
stos
iret
imul
adc
and
mov
insb
pushf
dec
sub
add
sbb
sbb
inc
adc
add
jbe
inc
or
push
test
xor
push
repnz
push
add
fistps
loope
sahf
dec
sbb
loop
pop
inc
cwtl
xlat
push
out
pop
push
adc
xor
jge
lahf
sub
mov
adc
cmp
xor
or
jbe
lret
stos
adc
sub
dec
push
push
lds
int
xchg
mov
leave
xchg
scas
xor
cmp
cmp
jne
adc
loop
or
mov
xchg
call
in
push
inc
mov
fwait
outsl
out
xchg
xor
mov
loop
jl
jae
inc
and
jge
fs
cmp
push
fwait
scas
ret
sbb
mov
cmp
enter
hlt
sub
dec
aaa
fdivrl
adc
jbe
lods
addr16
cmp
mov
jnp
and
sbb
into
add
or
cmc
nop
xchg
popa
jbe
fisttps
ja,pt
pop
stos
dec
jmp
popf
mov
inc
mov
push
jg
cmpsb
sbb
or
dec
loop
dec
xchg
pusha
push
pop
add
ss
outsl
fchs
andl
addr16
xchg
and
outsb
aam
push
xchg
or
bound
rorl
pop
sar
dec
push
push
xchg
inc
jl
aad
jnp
mov
mov
sbb
scas
adc
mov
lds
jl
lret
and
mov
cmp
mov
push
loope
and
jo
mov
and
fadds
sub
add
push
push
push
lods
xchg
mov
stos
dec
mov
aad
jae
inc
das
imul
and
jbe
add
pop
jb
add
stc
outsb
test
out
adc
jmp
pop
push
jp
xor
mov
jecxz
mov
aaa
push
xlat
mov
andl
gs
xorb
jmp
test
jmp
mov
lcall
addr16
jge
inc
jecxz
push
push
int
in
sub
add
push
minps
out
js
ds
imul
jns
out
jne
mov
out
and
aas
jg
enter
pop
loop
jae
xchg
aad
jo
stc
xor
insl
and
sbb
imul
jno
fildll
xchg
sub
out
sti
mov
sbb
mov
test
xlat
add
dec
push
cvtpi2ps
or
cmc
pop
imul
push
movsb
and
sub
or
jle
xchg
lret
dec
lret
dec
push
mov
scas
out
gs
mov
lcall
loop
xor
out
push
sarl
outsb
mov
je
ss
push
fwait
cmp
imul
cmp
bound
mov
bound
adc
imul
in
fisubs
filds
pop
aad
dec
jns
sbb
ljmp
ja
int3
out
add
nop
pop
cld
andnps
add
clc
fnstcw
pop
or
popl
dec
sbb
pop
shll
inc
bound
rolb
or
or
pop
and
cltd
pop
xor
mov
push
in
leave
repnz
mov
xor
or
dec
mov
inc
test
outsl
dec
push
adc
fsubl
in
mov
fldenv
iret
jns
and
jns
loope
test
aaa
rcrb
mov
or
test
push
xchg
mov
repnz
cs
icebp
cltd
je
push
outsb
push
ja
dec
mov
sub
cwtl
jg
cs
insb
lods
ret
test
mov
mov
sub
testb
out
dec
jo
cwtl
jge
loopne
lret
lahf
mov
add
into
mov
je
mov
lock
movsb
push
ret
repz
or
push
imul
xor
push
test
xor
adc
mov
cmp
xor
insl
mov
mov
cli
in
stos
test
push
push
push
loop
sub
lahf
repz
imul
dec
mov
inc
adc
fnsave
jg
jno
cmp
in
sub
test
push
test
lahf
or
je
jl
in
stos
xchg
lock
xchg
aaa
or
sbb
mov
test
dec
fs
pop
sbb
in
iret
sub
flds
outsl
dec
subb
inc
aas
and
mov
scas
xchg
enter
sub
pop
pop
aam
push
adc
lods
mov
dec
aad
inc
dec
imul
dec
mov
ljmp
jo
ss
mov
ror
ja
mov
pop
inc
pop
add
mov
lret
maskmovq
testl
js
sbb
mov
decl
adc
mov
ret
repnz
adc
shl
in
cs
sub
pop
pushf
cmpsb
lahf
test
out
dec
mov
out
nop
jnp
add
adc
or
aam
fldln2
mov
cmovbe
mov
sub
imul
add
ficompl
fwait
and
movb
pop
ja
jno
cmp
sbb
adc
cli
dec
push
pop
sbb
push
and
xchg
mov
push
imul
dec
test
sbb
out
pop
jne
mov
push
imul
xchg
aaa
fstpl
shlb
adc
stos
outsl
dec
invd
call
and
sahf
push
popf
sbbb
lock
enter
cmp
inc
mov
or
mov
leave
xor
add
xchg
mov
inc
pushf
movsb
adc
add
jge
leave
cli
cmc
sub
scas
clc
sbb
ret
cmp
mov
ljmp
imul
out
lods
cmpb
es
fwait
mov
mov
xchg
mov
xchg
mov
xchg
jo
sbb
stc
and
add
mov
movsl
jecxz
push
sti
mov
enter
cmp
jp
mov
cwtl
hlt
jp
mov
jns
inc
add
jae
out
xlat
icebp
insl
mov
xlat
mov
mov
gs
call
test
xchg
push
xor
loop
out
pop
mov
mov
mov
xor
push
adc
movsl
sahf
cmc
jno
jecxz
imul
jae
add
jp
lea
fwait
jecxz
add
clc
movsb
and
pop
inc
lret
insb
addb
test
or
mov
and
or
iretw
sahf
push
sub
cmpsb
inc
cmp
mov
cltd
ljmp
sbb
int
add
packuswb
xlat
lahf
dec
xchg
pop
adc
clc
test
xor
sub
push
xor
sub
and
sub
iret
cli
loope
xlat
mov
scas
pop
mov
insb
xor
mov
iret
mov
addr16
outsl
cmp
mov
test
cwtl
cld
imul
cmp
sbb
and
mov
xchg
jmp
mov
inc
fstpt
negb
xor
xchg
or
pusha
imul
outsb
pusha
push
movsl
push
inc
jns
sub
fcoml
insl
stos
pushl
fistps
or
scas
data16
cmpsb
xlat
daa
stos
lds
iret
out
jbe
popf
jg
je
pop
cli
mov
pop
pop
shlb
sub
mov
xchg
mov
and
push
jno
jmp
inc
fwait
dec
mov
sti
hlt
push
sub
aad
mov
clc
sub
pop
xchg
aam
push
out
add
sbb
out
sbb
or
hlt
or
test
mov
nop
out
lods
cmp
mov
push
sub
loop
aaa
mov
jl
add
mov
mov
sbb
cmpsl
sti
arpl
in
pop
lahf
fpatan
or
lcall
mov
mov
jbe
sbb
mov
movsb
stos
jo
or
jp
xchg
loope
repnz
ss
in
outsl
je
and
mull
cmp
stos
in
insl
and
cmp
test
enter
fdivrp
xchg
aad
mov
lahf
mov
mov
rolb
jp
ljmp
cmp
int
outsl
xchg
scas
dec
dec
std
sbb
dec
push
mov
shlb
cmp
jecxz
mov
inc
lock
aas
int3
inc
cmp
stos
inc
fcoml
mov
pop
loopne
xor
out
stos
jne
std
jb
cmpsb
insl
and
push
addr16
in
mov
rcrb
push
mov
pop
mov
pop
repz
ret
fcmovnb
nop
mov
jb
in
pop
sbb
or
loopne
mov
mov
ret
inc
sbb
lds
mov
rep
mov
cmpsl
fdivl
dec
jecxz
jecxz
les
sti
ja
or
or
mov
int
inc
mov
mov
or
shlb
out
push
sub
cmp
pop
jo
sbb
aaa
incb
insb
dec
xor
mov
sbb
pop
push
sbb
mov
cmp
lds
inc
imul
in
sub
imul
push
lret
je
push
sbb
out
rcll
push
push
lea
enter
out
out
jecxz
pop
xchg
mov
les
sbb
ret
cmp
add
adc
push
lock
sahf
sbb
fisubs
repnz
or
rorb
sub
inc
push
rcl
xorb
cmp
test
ret
popf
lods
push
dec
xlat
int
push
adc
aam
xlat
mov
jo
xchg
xor
lds
bound
jae
pop
daa
jb
das
push
pop
xor
lods
push
or
jle
daa
adc
dec
mov
add
aad
pop
pop
outsb
js
adc
pop
mov
out
popa
insl
jae
push
lods
push
sub
jnp
cmpl
pop
aaa
cmp
test
sub
xchg
enter
hlt
push
pop
mov
dec
add
nop
lea
lods
mov
sub
pop
imul
xor
dec
lahf
adc
fucomi
jmp
sub
out
jo
sub
and
dec
push
jecxz
fldenv
fisubs
jns
insl
ret
mov
and
mov
sub
lret
sbb
pop
shrd
jo
xlat
aas
sub
aam
int3
jmp
xor
adcl
push
rol
call
and
dec
mov
xchg
mov
dec
hlt
mov
push
test
das
xchg
cwtl
in
or
ret
vpsrad
sarb
dec
jg
xchg
xor
stc
adc
xchg
mov
inc
pop
sahf
test
jbe
jno
arpl
sarb
stos
mov
test
sub
mov
mov
loope
out
loopne
insl
pop
pop
daa
push
xchg
pop
dec
aaa
aad
sahf
cmpsl
xchg
sbb
sahf
adc
out
fisubl
mov
clc
mov
cs
popa
mov
and
nop
bound
or
xor
cmp
lcall
or
test
clc
lods
adc
test
movsb
and
js
jns
dec
mov
lea
or
in
sbb
insl
and
out
mov
inc
lock
add
cs
aaa
in
and
fildll
shlb
int3
es
cmp
inc
xor
and
into
and
les
mov
jae
sbb
mov
call
jge
fbstp
mov
mov
rol
nop
ljmp
xor
pop
dec
fnstenv
call
xchg
or
ficoms
cmp
les
aas
enter
dec
ds
pop
push
mov
jl
mov
pop
daa
xor
fdivr
mov
dec
and
std
add
cmpsl
xchg
dec
out
adc
js
cmp
lcall
lods
fs
out
sub
xor
pop
lret
lds
sbb
std
popa
mov
sub
jns
push
pushf
jl
test
aas
shlb
dec
test
push
das
sub
cmpsb
mov
arpl
es
popf
adc
or
lock
lods
push
pop
mov
aad
push
push
jnp
xchg
pop
popa
std
int
mov
pop
cmpsb
pop
ror
lcall
jno
stos
mov
aad
in
std
pop
cmp
cmp
mov
mov
push
stc
lods
nop
into
out
xchg
add
iret
cwtl
and
dec
lret
gs
add
jg
dec
xchg
inc
jo
jp
repz
xchg
icebp
jbe
cmp
sbb
fcmove
xchg
jmp
mov
sbb
test
sub
js
pop
lock
mov
dec
xorl
imul
arpl
negb
and
add
stos
xchg
insl
out
mov
pusha
loope
and
or
add
pusha
mov
dec
daa
daa
push
inc
pop
jnp
sub
imul
push
cmc
cwtl
dec
xlat
or
pop
push
jle
mov
das
mov
and
jb
aas
mov
inc
pop
push
leave
int3
sub
dec
dec
popf
pop
dec
add
xor
push
cmp
xlat
cmp
in
mov
and
mov
cwtl
xor
mov
cs
or
enter
repnz
mov
xor
lods
pop
in
addr16
mov
dec
xor
out
and
loopne
std
push
pop
gs
mov
xor
dec
lret
xor
mull
inc
push
cs
sub
xchg
jns
rcll
aad
add
and
pop
sti
jecxz
sub
push
mov
andb
push
rol
ret
enter
mov
stos
out
imull
inc
cmc
mov
stos
push
xchg
or
lcall
jnp
jmp
inc
mov
pop
movl
mov
ja
pop
popa
scas
adc
push
repnz
enter
jecxz
mov
sbb
repz
pop
adc
pusha
outsl
stos
pop
xor
cmp
jmp
add
aaa
clc
shrb
mov
add
jge
lret
gs
and
adc
lret
fucom
fldcw
cmp
mov
gs
xlat
push
jb
or
add
shrl
sub
je
xor
xchg
add
rcrl
sub
xchg
ljmp
jb
and
adc
addr16
fbld
fcompl
mov
arpl
or
pusha
or
lods
cmp
xlat
xor
and
rcrl
in
pushf
into
test
in
minps
popa
add
stos
aas
and
cmp
mov
or
in
lods
ja
mov
inc
hlt
fcmovne
stos
loopne
testl
sub
nop
aam
mov
jmp
cmp
sub
xor
adc
data16
scas
rcll
ljmp
cs
mov
cmpl
jge
jl
inc
fdivrl
push
adc
js
arpl
mov
and
test
sarb
jmp
inc
sub
pop
mov
push
pusha
loop
lock
ljmp
andb
iret
pop
in
stos
mov
push
jge
icebp
outsl
lret
sbb
fcompl
sbb
scas
pop
sbb
data16
popf
jo
pop
cmp
icebp
pop
or
xchg
rcrb
sahf
pop
sbb
subb
add
outsl
sbb
xor
enter
push
push
inc
ja
mov
cltd
dec
movsw
xor
shlb
and
xor
dec
in
mov
data16
dec
xlat
cmc
pop
cmc
push
lods
jmpw
test
xchg
jnp
into
mov
hlt
loopne
mov
xlat
xor
dec
jne
cmp
outsl
rcll
movsl
mov
adc
xchg
cltd
mov
xchg
mov
adcl
pop
mov
adc
fisubrs
xchg
jg
xor
jnp
cmp
orl
mov
add
adc
enter
inc
sbb
fwait
cli
xor
in
mov
push
mov
lret
mov
or
dec
mov
lods
fwait
test
xor
or
mov
cmc
push
push
insl
rdpmc
and
jne
add
push
cmp
xor
push
jge
sbb
cli
and
test
xor
mov
mov
adc
inc
out
iret
mov
xchg
lds
cltd
inc
popf
mov
push
or
bound
lret
dec
add
fwait
xlat
jmp
les
sub
push
add
fidivs
inc
es
insl
jle
jge
xchg
scas
xchg
sbbl
lret
add
and
into
mov
out
adc
xchg
add
push
dec
fcompl
je
loope
fimuls
xor
push
pushaw
pop
out
pushl
mov
xchg
mov
pop
cli
mov
mov
fists
negl
mov
add
scas
flds
push
add
mov
cmp
push
cld
cwtl
ret
in
sub
sub
pop
outsb
dec
fnstcw
mov
test
dec
in
and
insb
push
rcrb
ljmp
imul
out
fdivr
sbbl
mov
inc
rcrb
mov
das
arpl
mov
mov
or
inc
push
jno
pop
jae
inc
inc
sub
adc
pop
jecxz
test
sub
dec
les
orl
rcll
popf
mov
repz
test
and
in
sbb
dec
add
mov
push
pop
sbb
call
mov
leave
aaa
cli
or
iret
setno
sti
int3
insl
je
cld
xchg
mov
jo
bound
scas
push
xchg
push
pusha
push
repz
dec
mov
jg
aas
pop
js
dec
sbb
or
fcomip
adc
mov
mov
mov
add
or
sbb
jo
jbe
lcall
adc
repnz
cmpsl
add
stos
push
mov
mov
repnz
push
cld
fsubs
out
cmovs
into
addr16
inc
pop
aas
sahf
sbb
call
xchg
jb
xchg
and
fisubrl
mov
jns
mov
sbb
inc
push
stc
shrl
mov
out
leave
pop
and
ret
lret
dec
in
dec
cli
sbb
testl
sarb
pop
push
sarb
dec
sahf
mov
mov
das
dec
std
jge
adc
jp
xor
notb
lods
sbb
js
cltd
sub
repz
pop
sub
outsl
inc
in
clc
push
add
adc
adc
popa
mov
sar
gs
jnp
mov
pop
or
cmp
mov
shrb
lock
imul
test
and
mov
ror
mov
adc
dec
out
jp
and
int
inc
imull
test
lahf
push
push
jbe
jae
inc
push
cwtl
pop
xchg
das
mov
cmc
decb
fisubl
ja
fcmovnu
ret
call
mov
dec
cltd
cmpsl
pushf
add
stc
adc
xchg
mov
mov
xchg
push
incb
lahf
inc
and
in
pop
jne
pop
xchg
cmp
jmp
adcb
int
jge
jg
push
sub
pop
inc
loopne
in
mov
icebp
in
ds
mov
xor
xor
mov
or
shlb
sbb
xlat
roll
stos
loopne
loopne
fwait
enter
jg
mov
pop
cld
push
push
fcmovnbe
nop
mov
xor
adc
push
xor
cmp
mov
mov
inc
adc
inc
mov
dec
fstps
addb
push
dec
lock
ficoml
jg
sbb
jg
jmp
mov
out
icebp
mov
mov
jo
push
adc
aaa
fucom
sbb
dec
sub
mov
mov
shll
ljmp
fsubr
mov
mov
sub
fisubl
xor
cli
sub
xor
ficoml
fdivp
mov
cmpsb
sub
adc
xchg
pop
popa
push
insl
mov
lock
xor
adc
test
outsl
add
in
int
loop
cwtl
test
cmp
mov
mov
pop
pop
dec
aad
lahf
es
cli
out
push
xor
jb
mov
movsl
xchg
xor
sbb
mov
jbe
mov
cmc
dec
iret
lret
push
out
scas
mov
es
dec
inc
push
aad
pop
arpl
push
shlb
push
loopne
loop
mov
sbb
xchg
mov
add
fucompp
mov
sbb
or
adc
pusha
lahf
mov
les
adc
push
loope
cmp
inc
push
je
insl
cld
fcomip
cwtl
mov
mov
or
dec
aas
es
adc
outsl
pop
lret
jp
idivb
add
das
xchg
pop
adc
scas
push
dec
jg
inc
xlat
bound
sub
push
and
test
dec
ljmp
xchg
and
iret
xor
andl
xchg
adc
push
mov
xchg
fcmovb
test
mov
adc
sbb
js
cli
rcpps
test
sti
decb
cli
push
scas
test
les
lcall
int3
aam
xor
mov
cmpsb
lods
movsb
mov
loop
mov
es
cs
push
mov
inc
pop
xor
pop
dec
pop
jg
dec
outsl
fwait
and
fisttpll
ret
jbe
jl
mov
add
inc
fldenv
sub
je
adc
vpshaw
inc
cld
mov
pop
lahf
test
cli
std
mov
shrl
or
clc
xchg
popl
es
pop
int3
inc
in
shr
fwait
pop
inc
inc
ss
add
lds
sarb
cmp
les
or
jp
and
xor
cmpsb
lret
testl
je
mov
jle
jnp
repz
std
sti
fcomps
push
out
xor
xchg
sub
and
mov
fdivrs
into
popa
sbb
mov
sarb
xor
inc
fs
jle
push
pop
xor
sbb
cld
cmp
mov
shrb
xchg
aam
das
and
into
and
lods
ds
sbb
xchg
pause
dec
lret
pop
mov
mov
pop
jno
int
imul
xchg
add
mov
xchg
or
rol
sbb
sub
add
sub
das
jae
test
sti
pop
inc
pop
mov
aam
lods
mov
mov
xchg
jb
fisubs
test
pop
in
or
es
dec
mov
nop
out
in
rorb
xchg
fdivs
cs
lret
shlb
push
add
outsl
js
or
je
test
mov
loopne
sbb
or
out
nop
and
xor
sarb
cmp
jge
es
imul
jb
cld
pusha
sbb
push
lock
adc
mov
or
push
push
mov
inc
sbb
addr16
clc
xlat
cmpl
call
mov
inc
gs
mov
push
cmp
nop
lea
sbb
add
xor
movsb
pop
ficoml
inc
push
int
dec
mov
adc
in
add
outsb
in
in
stos
cmp
test
adc
cmovb
mov
push
sbb
dec
and
mov
outsb
push
sbb
mov
pop
adc
in
jl
ret
out
out
cmp
add
inc
cmp
push
mov
sub
in
lahf
and
xchg
pop
push
pop
jle
out
pushaw
ds
lret
pop
lcall
mov
mov
push
ret
sbb
insb
lods
addr16
push
stc
test
inc
and
or
pusha
test
inc
fdivl
pop
dec
adc
aad
sti
and
daa
mov
push
pop
aaa
sbbl
sub
pop
pop
les
insb
std
cld
test
sbbb
imul
ja
sbb
stos
push
and
imul
and
jmp
mulb
jb
ljmp
jge
xchg
les
test
xlat
stos
mov
push
and
jbe
movsb
icebp
ffreep
bound
push
les
lret
ss
jp
scas
hlt
mulb
mov
mov
std
leave
int
pusha
mov
jmp
orb
fidivrl
dec
bnd
jge
insb
int
movsl
aaa
out
sub
push
pushf
clc
adc
sub
sub
sub
nop
cmp
pushf
arpl
xchg
out
mov
sub
mov
inc
fcompl
mov
repnz
cmp
jnp
shlb
xchg
insb
dec
inc
jmp
dec
and
add
popa
jae
add
call
jns
xchg
cmp
cmp
jbe
cmp
mov
and
fistpll
hlt
fs
jns
leave
jb
lcall
mov
imul
cmp
sarb
dec
mov
in
jmp
xchg
push
cwtl
push
lods
inc
out
adc
jnp
dec
jbe
filds
and
mov
movsl
js
fsubr
fsubr
jb
ret
pop
cli
hlt
cli
das
pop
pop
xchg
mov
xor
dec
xchg
cmp
push
dec
cli
es
ret
int
cmp
mov
xchg
frstor
arpl
cmpsb
scas
or
das
aaa
mov
sbb
or
les
scas
mov
xor
out
jmp
repz
sahf
call
xor
aas
mov
lea
adc
lahf
in
dec
inc
ljmp
cmc
fisttpll
imul
xchg
mov
jecxz
movsb
cld
dec
jle
or
jge
dec
fistpl
aaa
jmp
scas
ds
mov
cltd
fs
inc
into
mov
loop
test
sbb
int
nop
push
jmp
imul
mov
jnp
not
icebp
cli
loope
rol
xor
pop
jns
or
xor
xorl
pop
and
xchg
dec
popa
xchg
movsl
sbb
xchg
jmp
insb
push
lock
fimuls
test
cmp
mov
dec
lods
mov
lea
mov
jns
pop
pop
cs
inc
rol
fldt
bound
mov
xor
sbb
sub
popf
xor
mov
fwait
or
leave
mov
aam
sti
and
mov
push
adc
push
cld
ret
jg
push
add
fisttpll
lods
mov
push
add
xlat
jp
inc
mov
aaa
pop
inc
ja
xor
int
adc
int
out
popa
inc
cmovge
mov
jnp
imul
xor
cli
sbb
stos
js
fsubs
cli
sub
jle
shlb
enter
lods
mov
mov
pop
cli
cld
loope
add
jbe
iret
sbb
rolb
and
ret
push
sub
or
push
in
adc
jo
aaa
inc
sub
pop
mov
test
fcoms
mov
and
mov
mov
scas
add
loope
ret
cmp
ficompl
std
stc
or
lcall
mov
and
out
jg
cmp
mov
shlb
out
pop
ljmp
mov
adc
push
cmp
shl
mov
mov
aas
mov
out
and
test
cmp
imul
roll
pop
inc
fsubr
sub
cmp
inc
dec
movsb
pusha
repz
stos
rcrl
ss
mov
test
nop
adc
mov
and
das
inc
mov
test
push
leave
push
test
xchg
cld
cli
loop
cltd
pop
cmpsb
jb
pop
pop
push
arpl
mov
aad
sub
cs
decb
push
lcall
shlb
pushf
lods
call
int
jle
jmp
aam
adc
inc
icebp
cmpsl
mov
sbb
pop
adc
adc
or
xor
xor
pop
xchg
lock
out
loope
jmp
jns
test
ljmp
rcrl
cmp
es
pop
movsb
xchg
iret
in
shll
adc
jns
and
xor
adc
in
test
arpl
subl
call
nop
inc
fucomip
int
cmp
and
stos
xor
leave
and
xchg
shlb
adc
je
mov
cvtdq2ps
loop
fstps
outsl
enter
mov
test
add
sub
jb
cld
test
fistpll
aaa
loop
in
or
pop
mov
lret
push
mov
cltd
pop
scas
adc
movsl
sbbl
dec
mov
sub
repnz
ret
in
aaa
jl
int3
std
sub
loop
ja
ret
inc
and
and
cld
rcr
xchg
data16
and
lahf
mov
fisubrs
in
andl
shlb
lods
cmp
cmp
rcrb
negl
fidivl
aad
test
mov
insl
xchg
cmp
aam
mov
repz
lret
cwtl
ljmp
leave
negl
stc
fmuls
xor
add
nop
and
sbb
adc
jne
scas
mov
stc
push
cmp
dec
xor
popl
ja
inc
in
and
cmp
fs
cmp
adc
adc
adc
sub
call
dec
pop
imul
sbb
insl
push
push
shlb
adc
stos
cmp
or
add
test
xor
sbb
add
popa
jb
push
lahf
inc
jge
fmul
addb
in
inc
mov
lea
jno
out
ds
jne
cmc
cmp
adc
inc
sarb
xchg
repnz
rcr
aas
mov
lods
add
push
fmul
js
cmp
adc
mov
mov
fucomp
fisubrl
in
out
dec
push
xor
fidivl
xchg
inc
daa
cmp
popa
add
inc
sub
testl
push
inc
inc
sbb
sti
mov
sub
inc
xor
push
jbe
aaa
mov
insl
mov
jnp
xor
cs
dec
push
pop
pop
pop
cltd
pop
nop
fisttpl
jae
inc
mov
ret
mov
cmp
and
adc
pop
jle
mov
scas
add
ret
fisubrs
ljmp
mov
leave
sbb
les
mov
in
mov
mov
cmc
leave
shll
nop
mov
icebp
ljmp
scas
push
sarb
shll
stc
adc
insl
fildl
cmp
loopne
adc
imul
sub
sbb
or
clc
cmc
test
pop
pshufw
xchg
popf
fistpll
lcall
mov
pop
in
mov
sub
in
flds
inc
hlt
std
movsb
pop
stc
adc
push
repnz
hlt
sub
adc
ret
push
cmpsl
call
mov
stc
xchg
mov
inc
push
dec
cmp
jno
cld
inc
push
xchg
cmpsb
and
mov
addr16
fdivrs
mov
leave
nop
pop
js
or
jb
mov
mov
inc
cmp
cmpsl
xor
inc
inc
add
mov
je
rcrl
sti
sbb
movsb
cmp
pop
and
sub
cli
divb
sahf
stos
mov
mov
xchg
rcll
and
out
data16
mov
dec
or
lret
fisubs
mov
fs
lods
xor
fcmovnu
iret
and
xor
lods
cmp
in
mov
inc
mov
cli
add
fimuls
mov
pop
mov
je
mov
aam
mov
pop
jmp
enter
mov
lds
sbb
xchg
jb
sub
rcr
pop
fidivrs
mov
aaa
pop
push
mov
and
jle
push
xchg
xchg
push
icebp
repz
cli
cmp
out
pop
in
stc
dec
mov
mov
push
adc
mov
jo
shll
cmp
cmpsb
push
sbb
cmpsb
iret
es
stc
or
mov
insl
fs
pop
leave
cltd
sti
addl
dec
xchg
cld
aad
xor
iret
add
push
cmpsl
xor
mov
or
push
lret
dec
jns
fidivrs
inc
adc
lcall
mov
xchg
rcrl
pop
inc
popf
faddp
or
push
add
arpl
mov
xor
xor
or
or
iret
cmp
and
cltd
add
fsubrl
imul
pop
and
cs
out
add
nop
mov
or
adc
cmp
mov
mov
fstpt
ret
adc
inc
ucomiss
cltd
and
cld
or
movsb
in
mov
adcl
test
test
mov
aam
or
and
inc
jne
loopne
cmpsl
xchg
xor
cmc
fsubrp
negl
mov
sbb
sbb
test
mov
pusha
inc
inc
push
shll
mov
sub
mov
xchg
roll
xlat
push
xor
gs
jae
hlt
inc
in
push
jns
or
aam
xor
push
outsb
imul
scas
add
mov
ljmp
test
xor
push
pop
pop
adc
push
push
and
hlt
cwtl
sub
add
insb
push
pop
ja
cmp
mov
push
fidivs
jne
mov
xor
icebp
loope
out
and
mov
add
add
xchg
test
fisubrs
shll
inc
xchg
je
shll
fldenv
cmc
cmpsl
inc
push
std
bound
adc
bound
iret
test
pop
jmp
pop
mov
gs
xchg
push
add
add
ret
dec
sbb
xlat
lods
sbb
dec
fiadds
push
rcl
mov
sbb
add
xchg
ljmp
adc
testl
adc
negl
push
xor
mov
push
enter
jge
fadds
cltd
ds
mov
dec
push
aad
adc
xchg
or
imul
xor
jo
jecxz
out
cmpsl
or
xor
adc
mov
js
xchg
sub
arpl
dec
pop
adc
adc
es
inc
and
mov
mov
or
inc
push
adc
add
lods
add
mov
xchg
gs
cltd
iret
mov
jecxz
jmp
rclb
mov
pop
push
test
or
fildll
fidivrl
xlat
jp
stc
xor
adc
dec
mulb
lods
stos
test
jp
lods
imul
jecxz
pop
lret
je
imul
rcrb
cmp
sub
adc
xor
ds
ret
icebp
sub
in
fcomps
mov
push
sarl
cld
mov
jecxz
jge
ja
add
mov
fidivrl
mov
mov
cmp
dec
cld
lahf
add
outsl
mov
add
insb
mov
ss
mov
and
pop
les
int
and
out
ds
push
imul
pop
add
dec
mov
add
pop
idivl
and
scas
pusha
jns
jl
jmp
mov
or
jno
pop
mov
pushf
movsb
arpl
imul
test
in
daa
adc
repz
dec
mov
xchg
negb
push
add
inc
jb
aam
lcall
and
push
mov
pop
pusha
inc
into
sti
adc
lret
bound
jge,pt
push
xor
negb
fistpll
inc
jb
pop
mov
lret
int
sub
daa
pushf
ja
push
mov
movsl
push
les
sahf
xor
push
add
in
popa
insb
mov
mov
dec
jb
jae
leave
out
rcll
cmpsl
xor
notl
ljmp
pop
pop
sub
xor
xor
pop
pop
pusha
mov
cmp
inc
pushf
dec
jle
leave
shrb
into
fiaddl
ret
sub
push
xor
push
pop
sub
rol
mov
jmp
inc
jg
pop
fdivp
mov
movsb
jbe
lds
sbb
mov
lret
or
or
mov
cmpsb
and
incl
xor
cmp
inc
pop
xchg
arpl
pop
mov
push
ss
cmpsb
push
iret
pop
test
lds
xchg
bound
add
pop
int
mov
jp
aaa
repz
lods
insl
mov
pop
stc
pop
aad
ds
arpl
pop
pop
gs
or
lods
clc
jb
out
or
push
ficoml
popa
push
mov
in
into
fsubrp
inc
and
jns
rcrb
fsts
push
pop
imul
fistpl
lock
xor
push
xlat
movsb
pop
leave
sbb
stc
divb
aad
loopne
add
mov
xchg
lea
iret
adcl
dec
js
jl
bt
sbb
push
xlat
mov
out
add
test
xlat
in
sub
or
cmc
lcall
and
pop
dec
cmpsl
xchg
and
xor
sahf
outsl
imul
ds
stc
lret
mov
cmp
add
imul
mov
sub
mov
and
sbb
cmp
fnstsw
cmc
sbb
xor
xchg
lret
xchg
cld
sar
xor
xchg
inc
mov
xchg
iret
or
ret
xchg
push
sub
lods
mov
lahf
push
or
mov
sub
sbb
push
shr
loop
push
ret
xor
lock
mov
xchg
test
inc
dec
dec
pop
repz
cmp
mov
popa
je
pop
add
ljmp
add
xor
or
mov
dec
xchg
jne
inc
push
push
xchg
inc
dec
pusha
popa
sbb
mov
pop
fisubrl
jl
icebp
popl
fistpll
loope
push
incb
in
adc
stos
repnz
sbb
jbe
cli
jnp
xchg
or
adc
lods
mov
mov
push
stc
cmc
sub
dec
xchg
mov
test
mov
call
jb
out
aas
addb
adc
ljmp
cmpsb
xchg
push
ret
cmp
loop
les
in
fbstp
xchg
lahf
adc
cmp
rcll
push
sub
fsubrs
or
adc
cld
shrl
xor
pop
fadd
lock
cmp
out
in
shrl
movsw
rcrl
jo
test
fwait
ret
loop
and
mov
pop
sbb
mov
cmp
and
pop
pop
andb
shlb
and
inc
test
fdivrs
mulb
push
dec
call
jmp
cmp
inc
xchg
jge
and
jno
mov
or
xchg
lods
dec
iret
adc
loopne
scas
out
jge
mov
or
stos
fwait
push
imull
and
rcl
sub
scas
xor
arpl
insb
mov
leave
jmp
sar
stos
outsb
pop
ss
inc
inc
add
ss
and
repz
test
cs
mov
into
add
mov
lret
inc
mov
call
aad
imull
jp
xor
fnstcw
adc
inc
sbb
jl
std
je
sub
xchg
sbb
jecxz
mov
cmp
adc
push
jno
mov
jns
movsb
add
out
sbb
loopne
iret
cmp
add
es
adc
cmp
mov
lcall
lcall
mov
push
pop
test
or
sub
shr
ljmp
cmpsb
cmc
lretw
pop
push
js
mov
enter
add
pop
push
rcr
outsl
fisubl
mov
sub
leave
jb
or
xor
lret
adc
xchg
jnp
sub
sbb
add
clc
push
xor
dec
pop
rorl
ss
dec
cwtl
sbb
imul
shrl
lahf
sbb
outsl
mov
mov
inc
notl
mov
leave
or
fisttpl
mov
jne
scas
sbb
mov
je
cmp
pushf
push
dec
fs
ret
mov
cmpl
std
sbb
mov
xchg
out
inc
out
cltd
dec
or
sahf
mov
sbb
mov
test
sarl
rcr
cmpsl
add
xor
inc
out
mov
pop
or
mov
push
jo
shrb
dec
leave
mov
xchg
sub
adc
insl
xorb
sbb
pop
xchg
jbe
pusha
pop
scas
sbb
in
call
test
cld
push
lea
pusha
cli
sti
or
lret
mov
stos
xor
pop
push
pop
or
push
jp
fidivl
inc
jo
adc
icebp
loope
pop
cli
cmp
sbbl
adc
out
jmp
ret
and
aam
ret
pop
dec
mov
sbb
mov
xchg
scas
or
mov
or
xchg
lods
push
xchg
inc
xchg
imul
jl
cmp
movb
jecxz
mov
in
mov
add
movsl
mov
ljmp
stc
push
lcall
fidivrl
adc
pop
movsb
imul
or
sub
dec
int3
hlt
or
dec
jne
fsubr
push
fcmovb
xor
dec
add
ds
popf
cld
mov
pop
idivl
out
adc
xchg
lea
in
mov
lret
test
xor
xchg
or
sub
pop
push
in
ds
pop
push
add
mov
jbe
mov
test
ss
outsb
sub
pop
sbbl
je
pusha
adc
and
arpl
inc
popf
jg
sub
sub
mov
ret
mov
scas
jns
adc
js
cmc
cmc
mov
mov
leave
jo
stc
jmp
lock
js
add
mov
mov
imull
xor
jmp
ffreep
mov
int3
and
ret
xorb
mov
out
dec
je
inc
shlb
inc
stos
jbe
pop
fstpl
cmp
les
scas
cmp
lret
or
and
jb
out
out
push
fstpt
inc
cmovs
faddl
test
xor
xlat
adc
push
sub
lea
lods
dec
pop
xor
cmp
das
mov
popa
in
je
xchg
scas
dec
fdivrs
es
neg
and
xchg
pop
add
or
add
test
lods
in
pop
clc
xchg
fsubs
fdivrs
aas
cltd
xor
mov
or
das
inc
push
sbb
mov
es
xor
xchg
adc
mov
mov
jle
sub
mov
leave
sub
push
inc
loope
andb
cmp
pusha
sbb
clc
stc
imul
mov
out
jnp
in
pop
sub
mov
inc
outsb
test
cltd
mov
daa
je
push
ret
mov
fs
loop
rol
or
test
pop
repz
or
or
push
addr16
jle
xor
push
and
push
lcall
icebp
lret
mov
lods
jbe
lods
cli
fisubl
push
test
lock
lds
and
add
cmp
popf
cltd
cltd
hlt
out
push
jl
sub
jnp
clc
inc
enter
xchg
jge
nop
js
push
andb
inc
mov
repnz
scas
pop
inc
cwtl
jno
inc
loopne
jl
mov
lahf
fs
iret
int3
outsl
sti
add
cmpsl
imul
inc
pop
add
sbb
sbb
jno
subb
push
les
adc
jp
add
add
mov
xor
or
mov
in
inc
mov
divb
mov
popa
mov
inc
rcll
mov
rorl
nop
and
frstor
or
mov
scas
pop
and
pop
out
cmpsl
fsts
jp
pop
jae
sbb
rclb
pop
out
xor
rcll
aas
out
pop
jno
pop
pop
inc
xor
mov
mov
mov
sti
sub
jo
cmp
dec
cmp
fwait
push
mov
cmp
pop
jne
leave
hlt
push
xchg
cmp
sbb
pop
or
or
mov
pop
clc
ret
hlt
dec
add
daa
popf
jnp
lahf
inc
int3
add
jns
and
sub
jge
sbb
jmp
into
push
stos
ljmp
stc
or
jg
jns
pop
shl
sub
push
lea
inc
cmp
sub
sbb
cmpsb
jmp
cld
xor
aam
or
xor
sbb
cmpsl
jo
push
push
jns
adc
pop
jge
mov
movsb
jns
inc
add
arpl
xor
inc
sub
dec
or
addr16
xor
test
test
push
adc
or
inc
jge
jbe
jno
scas
pop
mov
es
mov
lahf
in
mov
cmpsb
push
mov
aam
jne
pop
lea
shll
pop
sub
xchg
cmpsb
lods
mov
jg
pop
insb
ret
arpl
sub
xchg
mov
cmp
xlat
sbb
sahf
xchg
jecxz
dec
sti
mov
iret
xor
ret
sub
in
mov
je
push
lea
shr
cmp
negl
inc
or
push
inc
fistps
shrb
idivl
cmp
fnstcw
pop
pushf
sub
pop
mov
sbb
add
xor
mov
mov
cltd
imul
int
cmp
in
call
adc
mov
mov
pop
xor
orl
test
psubq
dec
movsl
mov
jne
movsl
mov
xchg
pop
push
xor
daa
inc
out
push
push
mov
mov
xchg
jns
dec
stos
pop
loope
pop
popf
xlat
dec
addl
rcll
sub
std
lahf
push
push
mov
f2xm1
mov
fnsave
flds
dec
or
dec
pushf
popf
and
sub
xchg
mov
andb
sub
add
mov
das
mov
sbb
mov
dec
xor
jg
scas
call
loopne
add
xchg
out
cltd
xchg
cltd
jp
lods
rorb
or
gs
ret
push
xlat
loopne
dec
push
mov
lcall
test
push
ret
mov
jno
push
loopne
jl
xchg
cmp
ficompl
push
xchg
aad
cmp
sbb
enter
sti
or
insl
inc
inc
in
mov
xchg
push
imull
mov
mov
ficompl
jmp
aad
sub
pusha
sbb
repnz
in
sub
mov
jge
fistpll
ljmp
loop
adc
lods
mov
stos
jo
push
pop
cmc
cmp
or
xor
push
push
xchg
inc
cmpsb
mov
inc
sbb
xor
cli
cmp
fwait
int
fisttpl
sub
outsb
mov
gs
jo
jecxz
jb
adc
pusha
out
or
and
lret
push
test
or
or
mov
data16
mov
push
xchg
fmuls
aaa
outsb
jp
insl
repnz
jp
fdivl
frstor
or
xor
ss
test
mov
lds
lods
xchg
and
jbe
xor
movsb
ljmp
add
pop
mov
imulb
inc
or
jg
or
mov
or
mov
push
test
je
dec
mov
add
mov
sub
jge
bound
mov
dec
cmp
or
lret
jno
inc
call
bsf
or
jl
cltd
adc
fcoml
adc
popf
xchg
push
cltd
cmp
cli
loope
xchg
push
es
push
ds
and
sarl
mov
rclb
and
cltd
je
sti
dec
pop
je
jns
test
stos
push
xchg
cli
push
cmpsl
mov
stos
mov
inc
popf
mov
pushf
mov
xchg
jno
dec
das
fnstenv
lret
cltd
clc
pop
push
in
enter
loop
inc
and
jnp
stos
mov
add
ljmp
mov
adc
rorl
outsb
and
xchg
inc
fsts
repz
or
nop
pop
out
subb
fisttpl
test
shll
loop
mov
and
js
cli
fwait
or
xor
xor
mov
out
leave
xchg
addr16
jl
insl
dec
ret
notl
mov
xor
sbb
test
dec
mov
stos
inc
aaa
sbb
jnp
into
push
enter
or
xchg
fs
xchg
fdivrl
orl
test
pusha
adc
xorb
insb
in
out
outsl
lods
or
mov
mov
int3
xor
cltd
insb
ljmp
add
xor
jmp
and
jns
push
das
sbb
das
test
pop
test
loop
add
cmpsl
dec
add
stos
gs
mov
icebp
fs
aad
dec
mov
xor
mov
ljmp
ja
sbb
test
lret
inc
push
jo
hlt
pop
rorb
testb
push
or
aas
cmc
mov
repz
imul
mov
aas
pop
dec
mov
insb
fistps
and
xor
repnz
pop
pop
jl
pop
inc
push
lds
sbbl
gs
jne
int3
and
sbb
jbe
gs
jmp
loop
jl
stos
mov
push
jmp
movsb
adc
dec
rolb
addr16
ss
dec
and
xchg
pop
out
push
cmpsb
es
or
jp
push
inc
inc
stos
mov
sub
out
clc
add
rol
xchg
push
sub
ljmp
adc
repnz
aam
cmp
or
leave
xchg
aad
cld
mov
incb
mov
pop
dec
sbb
fsubrl
repz
stc
imul
mov
rcrl
pusha
sbb
out
fcompl
in
dec
jl
xor
mov
push
jne
cld
xor
sbb
add
shr
sub
mov
jno
cmp
mov
jmp
mov
mov
xor
pushf
mov
push
push
jnp
shrb
imul
fistpl
inc
into
or
xchg
cwtl
add
pop
mov
lcall
push
push
outsb
push
stos
test
cli
inc
add
or
movl
hlt
shr
sub
cwtl
aaa
mov
insl
push
and
iret
pop
nop
pop
ficomps
leave
or
cmp
les
and
cli
shrl
dec
insl
subl
hlt
rcll
mov
jno
sbb
sbb
faddl
shll
fldt
jnp
or
sbb
in
or
and
fidivl
call
mov
add
xor
es
sub
xor
mov
movsl
and
movsb
outsl
adc
adc
stos
nop
dec
fistpl
arpl
and
test
enter
fs
push
loope
or
and
rcll
lea
or
cltd
or
inc
lock
ljmp
mov
push
cmc
pop
std
ljmp
push
xor
xor
xor
loope
scas
add
mov
pop
aad
mov
fldenv
andb
or
mov
sub
push
jbe
sarl
insb
mov
arpl
and
push
jns
test
cli
mov
xor
sub
jno
sar
adc
decl
test
jecxz
mov
mov
scas
arpl
fcmovnb
add
add
sbb
in
iret
mov
insl
jmp
pop
xchg
rol
add
insb
pop
aas
fists
jae
mov
fildl
rcll
rclb
inc
and
jb
xchg
pop
add
clc
sub
movsl
mov
ljmp
sbbl
and
lea
pop
cmp
icebp
mov
add
notb
push
fnstcw
rolb
lret
add
cmp
scas
mov
mov
aad
xchg
sub
pushf
es
lods
pop
scas
rol
ljmp
sbbl
cltd
inc
sbb
test
sbb
mov
arpl
push
out
lret
pushf
lahf
and
cmpsb
mov
out
push
xor
mov
add
and
and
lods
jmp
dec
sbb
daa
and
or
cli
icebp
adc
subl
mov
lret
sub
inc
dec
inc
rclb
jmp
mov
mov
inc
add
add
push
adc
or
sub
sbb
ss
call
fsts
imul
mov
xlat
inc
stc
outsl
jmp
outsl
jo
stos
call
pop
inc
jl
add
pminsw
push
pushf
dec
rcll
dec
mov
jbe
lods
pusha
mov
dec
call
cmpsl
push
jnp
fwait
push
push
jl
sub
jo
stos
out
jge
mov
popf
int
addb
ret
and
cmpsb
ds
je
fildll
movsb
xchg
adc
sub
push
lret
jg
call
pop
mov
imul
adc
mov
sbb
push
stos
lods
sar
sbb
fcmovnu
js
pushf
es
scas
mov
hlt
mov
jns
and
or
scas
dec
or
arpl
enter
call
xchg
insl
pop
push
mov
out
mov
and
pop
or
push
sub
sti
shl
sbb
dec
cs
out
mov
mov
lock
inc
lcall
aam
push
jb
loop
sbb
inc
xor
xchg
push
mov
adc
mov
outsb
mov
loop
jecxz
push
mov
push
mov
jecxz
gs
sbb
mov
enter
int
mov
sub
cmp
out
int
cs
mov
sub
test
pop
fs
ficompl
into
sar
test
push
ret
aas
jecxz
pop
adc
mov
mov
notl
mov
shll
out
scas
std
jns
xor
addr16
pop
mov
stos
mov
xlat
jns
rcr
mov
sti
add
push
les
test
push
xchg
xchg
mov
push
adc
sub
cmp
adc
subb
inc
inc
ret
mov
rcrb
adc
test
cmpsl
add
xchg
popa
mov
arpl
sub
fimuls
out
sbb
or
inc
adc
imul
dec
mov
xor
out
adcl
sbb
dec
push
inc
inc
xchg
adc
and
je
xor
fidivrs
ret
stc
sti
mov
outsl
pushfw
fucomip
movb
sbbl
ficoms
daa
fstpl
lock
loope
and
aaa
xor
xchg
and
jnp
add
adc
es
mov
mov
or
loopne
fstps
out
repnz
jl
push
pop
and
hlt
dec
inc
add
pushf
int
movsb
mov
incb
inc
or
leave
cmp
mov
and
xorl
test
aas
psrlw
mov
xchg
inc
stos
ljmp
jo
jmp
jo
adc
push
mov
lods
xor
jne
aam
bnd
add
pop
jb
xchg
shrl
or
xchg
mov
lret
ficomps
inc
ret
repnz
mov
hlt
out
popf
add
cmpl
faddl
xchg
mov
and
rcrl
iret
inc
out
sbb
sbb
movsb
aad
pop
loopne
mov
and
mov
ja
lahf
xchg
loop
loopne
cmp
mov
and
pop
jl
ds
add
ror
pop
jo
insb
orl
sbb
scas
loop
aaa
and
fildll
push
lcall
or
scas
arpl
aas
xlat
pop
adcb
mov
mov
rorl
add
jae
and
fsubrs
push
addl
test
pop
xor
aad
inc
sub
punpcklwd
dec
mov
mov
mov
push
inc
aas
mov
pop
fsubr
pop
out
pushf
popfw
mov
imul
xor
xlat
mov
lcall
roll
push
xchg
loopne
push
mov
fisttpl
add
push
cmp
push
std
imul
out
icebp
mov
ret
mov
dec
adc
pop
repz
movsl
push
negl
cmp
jne
pop
dec
mov
mov
subl
dec
sbb
rclb
jg
pop
cmc
xchg
test
out
sub
movsl
dec
ficoml
insl
pusha
mov
test
inc
js
adc
jge
mov
loope
dec
fadd
mov
jl
or
and
pushf
rcrb
mov
std
push
loope
movsb
popa
hlt
subb
sbb
jmp
rclb
adc
xchg
mov
ds
pop
rclb
gs
sbb
sub
xchg
adc
xor
test
lahf
rcr
cli
mov
ret
jecxz
pop
pushf
ror
lcall
scas
push
mov
sub
loopne
rcr
ret
sub
not
pusha
sub
lret
pop
mov
shll
sbbb
and
cmp
daa
xchg
mov
sub
jge
mov
lcall
inc
jne
add
lods
pop
sbb
cmpsb
data16
lret
push
pop
xor
loope
repz
mov
test
pop
and
adc
cmp
bound
popf
addl
push
mov
or
push
std
int3
push
mov
aaa
in
aaa
xor
jle
filds
data16
push
add
jle
subb
inc
or
shll
pop
mov
popf
jmp
and
cwtl
int
jl
lock
pusha
loopne
movsb
pop
inc
dec
stc
les
loopne
sbb
xchg
das
pop
sti
bound
push
pushf
ret
mov
mov
adc
sbb
les
cmpsl
mov
sbb
push
daa
repnz
std
sbb
ret
or
xchg
and
inc
jge
push
test
test
loopne
bound
int
negb
std
dec
jo
pop
icebp
or
inc
lret
loopne
or
adc
jmp
aas
in
punpckhdq
fpatan
lods
mov
aam
or
fcompl
sub
jge
adc
mov
clc
loop
push
cld
jmp
scas
in
mov
xorl
ret
subl
int
mov
fisubrs
insb
dec
leave
add
cmpsl
cmp
orl
fs
dec
push
mov
sub
mov
mov
movsl
mov
sub
es
and
or
cmpsl
sbb
cli
scas
in
mov
push
jae
pop
jb
test
mov
mov
or
adc
movsb
inc
xchg
adcl
repz
push
sti
fwait
mov
int
mov
mov
out
or
bnd
insl
jp
sub
lds
xor
into
push
sahf
sbb
jmp
jb
mov
jmp
stos
jae
in
into
jb
push
pop
mov
cltd
push
mov
sbb
lcall
ljmp
ret
sbb
loope
arpl
lds
call
adc
xchg
test
scas
arpl
dec
data16
jecxz
and
jge
inc
xchg
push
outsb
out
call
jbe
ljmp
lock
fcmove
mov
and
imul
nop
ret
cld
mov
mov
out
push
lods
gs
js
push
fildl
roll
push
sbb
jle
mov
fsubr
cmp
sahf
dec
push
pop
pop
add
fdivrs
cld
push
xchg
push
das
or
fldt
pop
test
mov
push
fdivl
mov
in
or
rol
mov
pop
fisubrs
add
dec
push
mov
xchg
mov
and
mov
lret
cmpsl
das
arpl
add
inc
cmp
push
mov
lods
jmp
or
or
jae
dec
lock
aad
in
inc
fiadds
movsb
mov
in
pop
subl
int3
subb
mov
xlat
fldl
pop
cmpb
jg
cs
pop
push
pop
orb
xor
sbb
or
push
dec
xor
adc
pop
jb
fsts
ja
dec
popa
adc
pop
sub
pop
sbb
mov
outsb
xor
pop
dec
pop
xor
idivb
mov
or
add
rolb
xor
fstpt
ss
leave
push
mov
cmpsb
cmc
jl
push
data16
dec
test
imul
rclb
dec
gs
push
or
jmp
movsl
and
std
fnstsw
aad
and
test
pop
movb
xor
jbe
movsb
test
outsb
xor
push
aaa
jl
fldln2
lcall
jae
enter
stos
scas
sbb
pop
xchg
test
testl
xchg
or
cmpsb
jmp
dec
jno
test
sub
loop
mov
mov
cmp
lret
mov
pop
pop
dec
int3
js
loop
and
mov
cmp
mov
std
xchg
stc
js
sub
adc
jle
xor
into
push
dec
ss
mov
sarl
out
inc
xor
les
push
xchg
inc
lahf
jmp
jmp
mov
cmp
stos
xchg
mov
dec
ss
movsb
aas
fwait
jmp
adc
idiv
or
sbb
lods
dec
pop
or
jge
repnz
jmp
lahf
dec
pop
stc
popa
aas
dec
push
mov
xchg
lock
mov
stc
cltd
fsub
ret
cwtl
xor
lds
imul
add
adc
nop
aam
cld
cltd
aaa
add
cmpsb
aam
adc
mov
movsb
push
mov
bound
jo
jno
dec
and
adc
mov
and
pop
jle
sbb
jl
aas
cmpsl
jo
pop
add
pop
mov
daa
imul
rclb
cltd
xor
mov
test
out
dec
imul
sbb
dec
dec
lret
pop
ds
repz
loope
repnz
cmc
imul
adc
fucomip
cld
push
sbbb
sbb
cs
xor
or
jnp
mov
push
lret
shll
push
std
pop
dec
lret
and
add
jle
fildll
sub
jmp
in
je
and
pop
dec
push
cmp
mov
mov
adc
and
sti
xchg
mov
scas
adc
push
add
lds
jb
sbb
push
push
dec
inc
in
jb
sahf
inc
push
ljmp
cmp
rcrb
sbb
push
fstpl
iret
dec
scas
jns
aam
in
dec
sub
dec
inc
in
mov
mov
xchg
and
xor
or
add
andl
or
lcall
dec
xchg
mov
jo
jp
adc
xor
loopne
or
mov
mov
into
mov
addl
inc
movsb
or
and
jns
jl
rorb
mov
push
outsl
insb
rclb
and
add
xor
lret
test
mov
int
sbb
mov
sbb
jl
loop
pop
out
sbb
cli
lds
mov
or
mov
aam
sub
push
mov
push
or
cmpsl
out
or
push
mov
mov
cmpsb
into
lea
stc
add
call
mov
ljmp
lock
std
rcr
mov
pop
mov
and
loope
xchg
shr
dec
mov
lahf
jecxz
jne
cltd
xor
shll
mov
icebp
sub
dec
jae
andb
dec
insb
xor
sbb
pop
xor
push
and
inc
jb
lahf
stc
mov
push
es
xor
int3
dec
scas
or
and
push
out
push
shrb
cmp
mov
cli
add
fcomps
xchg
fisttpll
sbb
fisubl
fcoms
loope
mov
scas
pop
pop
addr16
xchg
outsl
xchg
pop
xor
aad
mov
imul
orl
cmc
out
dec
lahf
test
fidivrl
daa
inc
or
pop
out
movsb
test
movsl
lods
or
adc
xor
dec
sub
mov
dec
push
xor
cmp
add
inc
scas
fmul
add
dec
fcmovbe
jl
ljmp
ret
jge
jns
lods
enter
fisubs
mull
divl
std
adc
lds
movb
idiv
pop
pop
outsb
jne
dec
loope
mov
subb
mov
add
lahf
sub
and
int
pop
test
inc
cltd
pop
mov
stc
inc
mov
cltd
fwait
movsl
lcall
into
add
xor
adc
push
aas
and
jle
sbb
inc
in
push
scas
out
mov
pop
and
push
clc
jmp
add
inc
jne
mov
lahf
mov
scas
pop
pop
fidivrl
dec
pop
pushf
xlat
jl
aas
xor
pop
or
push
testb
stc
dec
cs
bound
add
jb
xchg
push
jecxz
mov
stos
divl
icebp
jo
pushf
jno
add
mov
js
add
daa
dec
lods
loope
les
dec
daa
pop
cmp
xlat
adc
cmpsb
daa
sub
outsl
cmp
inc
test
dec
out
mov
dec
mov
dec
test
out
xor
orb
outsl
ss
adcb
mov
jns
rcrl
aad
jae
sub
jl
mov
sbb
pop
and
adc
cmp
mov
stc
cld
mov
jae
jno
into
push
clc
shrb
mov
cmp
cld
icebp
dec
gs
popf
fldcw
das
mov
pop
and
cmpsl
cmp
adc
dec
pop
mov
mov
out
lds
std
jo
call
lds
xchg
ja
out
pop
xchg
lcall
das
dec
rcll
mov
push
jle
in
test
fisubrl
xlat
mov
mov
cmp
mov
ret
dec
jo
testb
pop
pop
mov
or
cmp
pushl
pop
mov
ror
sub
dec
arpl
pushf
loop
loope
ja
stc
pop
insb
mov
movsl
pop
and
repnz
sbb
in
add
mov
inc
add
call
mov
mov
fcomps
add
jl
test
jg
fsubl
dec
pop
mov
jmp
mov
jno
lods
jno
inc
stc
pop
xor
outsl
movsb
idivb
dec
or
cmp
imulb
orl
pop
bound
jne
mov
sub
pop
inc
mov
addl
dec
movsl
inc
push
cmp
rorl
loopne
je
push
nop
dec
js
popl
mov
mov
movsl
in
inc
incl
and
icebp
aaa
and
scas
out
icebp
rolb
cmp
call
ret
sub
lcall
gs
repz
das
enter
add
mov
sbb
test
and
adc
add
lock
in
sarb
int3
imul
in
das
mov
aad
aad
in
xor
jno
pushl
jmp
ja
jne
shll
xchg
int3
pop
add
popa
jo
mov
rep
pop
push
xor
rclb
push
addb
icebp
fwait
inc
add
mov
out
xchg
push
fistl
fmuls
fldcw
pushf
or
mov
rorl
lods
pusha
rcrb
fistps
inc
pop
mov
jo
nop
sahf
loop
dec
push
or
inc
or
add
fmull
xchg
push
int
mov
fidivrs
jl
sub
or
jl
cvttps2pi
adc
bound
mov
sbb
leave
out
dec
push
mov
call
fsubrl
pop
or
in
mov
insl
add
sbb
clc
xlat
cwtl
xchg
andb
lea
jns
je
jne
xchg
outsl
jne
outsl
inc
daa
and
cli
jmp
fistl
rol
adc
icebp
lds
cltd
aad
fdiv
or
subl
lds
mov
cmp
fsubrl
lods
sbb
shr
and
lock
dec
in
iret
mov
push
mov
xlat
mov
jae
fsubrl
imul
jbe
inc
xchg
insb
mov
mov
fsubrs
jns
jmp
mov
rclb
movsb
in
add
lcall
nop
cs
sbb
lret
mov
fstpl
stos
fsubr
inc
faddp
loopne
mov
mov
lahf
insb
jmp
fldl
lea
cmp
aaa
ljmp
cmpsl
or
daa
lret
sete
dec
sub
pusha
ror
jmp
mov
jb
push
xor
lret
sub
mov
in
fs
popf
in
sub
xchg
mov
mov
push
in
pop
ja
outsl
add
fsubrs
adcb
fwait
add
rcrl
jge
xor
lea
loop
stc
ss
das
out
push
pushf
insl
ret
cld
push
rolb
add
je
mov
sub
pusha
mov
xchg
mov
in
cltd
inc
fs
outsl
lods
inc
ret
popf
sub
adc
sub
addr16
inc
dec
mov
lods
pusha
inc
data16
jae
and
add
sbb
int
mov
hlt
dec
lods
mov
rorl
add
mov
and
mov
cld
jecxz
fsubl
scas
inc
or
loop
std
testb
and
aam
pop
int3
xor
lret
lcall
jnp
mov
sub
mov
out
mov
addr16
xlat
and
std
imul
cmp
sbb
movsl
adc
sub
lcall
pop
cmc
adc
xchg
push
xor
mov
xor
pop
js
dec
out
pop
jbe
shrb
popf
sbb
adc
sti
cltd
neg
icebp
imul
nop
jbe
out
push
jb
sahf
adc
or
pop
orb
lret
lahf
push
loope
data16
cltd
insl
mov
psubd
sarb
fsts
jmp
fcmovb
pop
xor
ljmp
mov
cmpsl
ficoms
dec
lcall
push
loop
shl
mov
outsl
mov
jle
mov
push
and
scas
xor
ljmp
gs
mov
mov
lahf
fsubrl
push
xor
arpl
push
arpl
mov
add
iret
or
jle
jle
mov
aas
mov
int
in
pop
pushl
mov
shll
int3
in
dec
pop
fcomps
add
es
add
scas
mov
in
jl
sti
jbe
js
popa
cmp
stc
and
loope
rorl
loop
enter
jb
leave
lahf
mov
cmpsl
movsb
ror
pop
pop
adcb
shr
addr16
inc
lds
sub
mov
fldl
test
dec
push
fisubrs
lds
push
adc
bound
xor
test
or
jp
hlt
inc
cmp
dec
subl
sub
xchg
data16
pop
out
and
inc
out
pop
push
fdivrl
das
hlt
js
xchg
ds
xchg
xchg
addb
test
testl
fwait
lds
sbb
test
flds
out
sbb
sub
mov
mov
push
or
push
xchg
repz
ds
je
loop
sti
pop
insb
je
mov
fildll
or
add
lret
jg
movsb
push
push
vpmaxub
call
lods
cld
cli
stos
cmp
and
cmc
andb
jg
jmp
cmpl
testl
add
out
lods
mov
shl
push
in
jmp
out
out
inc
push
push
add
clc
inc
out
sbb
jge
sub
mov
insl
subb
or
fdivl
or
or
mov
inc
shl
mov
sti
ret
sbb
or
jbe
or
lcall
cmpsl
popf
fisttpl
lods
fadds
lcall
adc
mov
xor
jnp
adc
mov
pop
lods
cmp
dec
icebp
mov
int
mov
scas
repz
out
mov
arpl
xchg
mov
es
inc
fstpl
or
jne
pop
das
lcall
mov
push
jo
mov
jno
shlb
adc
int
xchg
pop
jg
icebp
xor
data16
push
test
pop
cmp
pop
mov
sbb
sbb
iret
scas
test
fldl
xchg
outsb
jb
dec
aam
mov
xor
dec
int3
aam
fldl
fs
test
jbe
psubd
mov
lret
mov
lods
icebp
data16
rorb
rclb
pop
xchg
cwtl
rclb
imul
mov
adcb
cmp
pop
jmp
out
icebp
add
jle
cmp
int
cwtl
xor
mov
or
push
test
shrl
fnstenv
jns
and
push
data16
jle
aam
dec
call
insl
ror
jne
lock
jns
mov
push
jmp
out
insb
mov
repnz
push
push
xchg
lds
sti
loope
imul
imul
jl
iret
cs
aas
cmc
test
inc
pop
ja
push
sahf
addb
out
cmp
xchg
shll
andb
inc
jne
add
adc
fidivrs
pop
mov
stos
out
jbe
xor
push
sub
sbb
jo
jbe
mov
mov
aaa
xchg
mov
sbb
inc
jge
xor
or
imul
movsb
mov
rolb
bound
and
fdiv
outsb
insl
push
lret
fwait
bound
sbb
mov
enter
jb
pop
insl
les
mulb
rcl
test
mov
mov
mov
icebp
lret
adc
ljmp
sti
stc
mov
aas
icebp
mov
inc
mov
xchg
arpl
int
mov
mov
xchg
iret
add
mov
neg
mov
mov
xlat
ror
jle
cmp
adc
nop
cmpb
aas
loope
stos
sti
jge
mov
inc
mov
push
adc
imul
add
cwtl
xor
pop
add
add
out
inc
cmp
xor
lahf
jecxz
ja
and
lret
ss
movsb
daa
fcmovu
or
jmp
and
mov
jl
pop
ljmp
out
mov
add
mov
pop
push
push
push
insl
or
out
movsl
test
add
in
ss
push
add
adc
mov
xchg
mov
mov
mov
jl
xlat
mov
sbb
addl
aas
jl
dec
jmp
lods
push
ret
sbb
pop
arpl
movsl
dec
add
cs
icebp
decl
push
cmp
jp
add
cmp
ffree
jae
jecxz
out
aam
adc
shrb
sbb
or
sahf
clc
pop
cmp
dec
hlt
fcmovbe
es
xor
aas
cmp
or
fcom
mov
lds
jae
outsl
mov
loop
mov
and
jns
pop
shl
ret
add
mov
inc
rcll
and
fidivs
mov
xchg
stc
or
cli
test
mov
dec
jns
xchg
in
mov
gs
jnp
xchg
inc
mov
xchg
in
ljmp
or
xchg
jno
movsl
int
cmpsl
inc
xchg
xchg
inc
pmaxub
test
sbb
cmpsb
push
and
out
fstpt
dec
mov
sbb
cld
jo
xchg
adc
pop
add
pop
push
mov
fadd
jno
das
cwtl
sar
or
arpl
sub
rcrl
adc
call
jg
xor
adc
outsl
jno
fimull
xchg
mov
cmc
sub
pop
jno
xchg
ret
mov
mov
aas
cld
cmpsb
in
dec
aam
repz
adc
mov
cli
mov
and
or
sbb
sbb
push
or
ja
stos
jg
or
adc
movsl
or
out
push
mov
mov
pushf
adc
sub
stc
insb
scas
aaa
aam
std
cmpl
cmp
mov
fisubrs
push
jg
push
mov
out
push
mov
and
sbb
fisubl
cmp
fsubrs
leave
dec
rorl
pop
inc
cmp
fnstsw
mov
push
or
lods
movsl
int3
out
xorl
pop
mov
sub
inc
pop
inc
sub
es
xchg
xchg
inc
mov
jnp
xchg
lock
inc
insl
iret
clc
jg
cwtl
push
add
mov
cltd
mov
inc
xchg
mov
cld
das
and
mov
ficoms
mov
stc
xchg
push
testl
mov
nop
add
out
inc
pusha
clc
mov
in
mov
lds
int3
clc
sbb
dec
inc
insb
outsl
incl
sub
test
or
stos
xor
out
and
jmp
or
push
sub
nop
xchg
daa
js
xchg
adc
xor
inc
int3
mov
popa
mov
addr16
aad
or
rorl
xchg
js
push
mov
add
sub
xchg
adc
or
push
scas
add
mov
dec
xchg
pop
jl
push
sbb
loopne
pop
clc
jmp
cmc
stos
insb
ljmp
jg
cmc
adc
mov
jo
inc
mov
pop
insb
scas
dec
out
stc
pop
pusha
mov
inc
mov
fdivrl
je
lcall
ja
loop
in
cmp
sub
icebp
xor
fadd
and
jb
push
sbb
pop
and
stc
loopne
mov
mov
lods
out
sahf
adc
popa
mov
dec
mov
mov
test
sahf
push
pop
popf
adcb
sub
bound
inc
daa
loop
pop
mov
ja
repz
shrb
mov
add
cmp
push
es
mov
rorl
pop
ret
and
jle
lds
sub
hlt
and
icebp
jne
xchg
pop
pop
stc
push
jo
leave
in
push
xchg
movsl
add
pop
orb
es
inc
imul
xchg
les
dec
dec
mov
sbb
sub
mov
jo
mov
xchg
shlb
jecxz
insl
sbb
fldt
or
pop
and
sub
add
and
rolb
push
jns
xchg
cld
pop
xchg
lcall
adc
inc
cmp
cmp
mov
jnp
xor
aad
aad
jmp
sub
lcallw
jle
mov
xchg
or
cmp
fdivp
fadds
lds
sub
push
out
mov
pop
bound
mov
xor
int3
sbb
es
aaa
les
cmpsl
or
idivb
push
cwtl
sub
ficompl
push
mov
loope
xor
popa
fisttpl
push
lret
ljmp
mov
je
cli
mov
push
mov
incl
jp
hlt
repnz
inc
push
ret
pop
decb
ja
xchg
div
xchg
arpl
lea
add
pop
das
into
mov
jno
inc
imull
imul
adc
clc
leave
xor
scas
loop
in
xor
loope,pt
push
cltd
mov
and
jnp
fs
xchg
jo
jbe
push
add
shll
mov
cwtl
fcoms
inc
add
xorl
xchg
stos
lret
lods
dec
sti
sub
jle
dec
in
pop
imul
inc
ja
xlat
push
add
adc
popa
andb
cltd
enter
xchg
shl
cltd
roll
xor
xchg
outsb
mov
add
lea
sbb
xchg
movb
testb
lret
jo
fcmovnu
or
adc
repnz
pop
clc
xchg
jmp
out
in
mov
aam
repz
jae
pop
push
daa
sub
js
pop
inc
loopne
sbb
sbb
scas
stos
mov
les
aas
jbe
mov
xchg
or
popf
call
jle
nop
movsb
lods
xor
xor
pusha
mov
insb
xor
orb
ja,pt
in
test
fstpl
jle
cmp
xchg
jae
decl
ljmp
lret
inc
cmpsl
into
decl
sub
adc
test
imul
xchg
ds
leave
dec
inc
data16
call
es
lods
int3
xchg
mov
jmp
jno
dec
inc
mov
mov
pop
leave
add
lods
pop
daa
jge
pop
movsl
jmp
ret
loopne
in
push
mov
cmp
cld
subb
sub
sbb
mov
sbb
xor
mov
stos
sbb
pop
lahf
push
pop
cmpsl
js
mov
fwait
pusha
popa
dec
inc
dec
mov
mov
dec
orb
scas
mov
hlt
add
mov
push
sahf
loopne
aas
jmp
inc
scas
fsubs
cmpsl
push
out
cmp
push
or
pop
push
xchg
and
add
fcoms
divl
adc
ret
cmp
cwtl
inc
je
sub
sarb
dec
jle
rorl
loopne
adc
dec
movsl
and
fdivs
and
cmp
cli
sub
cwtl
mov
xlat
jecxz
cmpsl
jno
lods
scas
xor
xchg
cld
orb
popa
pop
cmp
mov
jp
xchg
jb
mov
jge
adc
orb
add
jae
dec
jb
adc
add
insl
cltd
lods
xlat
pop
sub
leave
int
pop
das
cltd
int
jno
push
sahf
mov
adc
iret
jle
inc
sub
test
fimull
or
mov
sub
mov
push
dec
add
and
dec
mov
xor
mov
xor
cli
xchg
imull
mov
movsb
mov
fldcw
repz
sahf
mov
and
mov
jle
mov
xchg
movsl
dec
subb
sub
dec
mov
sbb
or
fwait
mov
notb
daa
push
xchg
repnz
add
or
push
adc
hlt
enter
fdivl
inc
rcrl
sub
dec
push
adc
aad
sub
orb
pop
test
stc
sub
sub
lret
push
mov
outsl
out
sub
mov
adc
inc
aad
aam
jge
fdivs
or
push
push
mov
fwait
mov
rorl
xchg
jle
cmp
sub
fidivrs
and
mov
inc
scas
sub
mov
or
in
ja
xor
adc
pop
aam
push
inc
clc
insb
int
daa
scas
xor
lahf
push
push
in
or
or
movsl
sti
xchg
leave
stc
rolb
pop
stos
and
data16
ja
or
cmp
out
or
jb
loope
mov
dec
cs
icebp
cwtl
sub
inc
in
cltd
sbb
test
fcompl
outsb
adc
or
xor
ds
mov
stos
xchg
push
jae
mov
in
mov
mov
push
mov
jle
cmp
or
push
or
and
fbld
pushf
clc
lock
dec
iret
fsubs
dec
imul
lea
cmp
jno
les
jge
xor
aaa
jmp
jp
imul
lods
and
das
jns
dec
adc
mov
rcr
push
andl
lahf
loope
bound
pushf
cwtl
pop
cmp
adc
fcompl
mov
mov
addl
mov
arpl
in
shld
jne
xchg
mov
gs
leave
scas
jae
leave
xchg
nop
jmp
cwtl
xor
scas
adc
lock
add
mov
mov
inc
mov
cmpsl
jno
outsb
scas
insb
or
mov
mov
cmp
cli
mov
inc
add
lret
xchg
push
pop
sub
jmp
pop
push
sbb
push
add
lret
jecxz
loop
lret
lcall
mov
push
jb
test
pop
xchg
pop
mov
or
call
inc
pop
ret
lods
push
adcb
call
xor
pop
cmp
nop
inc
xor
dec
dec
mov
fs
ret
mov
xchg
add
xor
add
add
cmpsb
mov
in
jnp
mov
xor
sbb
mov
xchg
jg
mov
or
cmp
stc
lcall
sbb
mov
jbe
jg
fidivl
mov
pop
in
fs
or
int
mov
cmp
and
mov
sbb
in
stc
jbe
pusha
sbb
pop
fisubrs
in
pop
popl
adc
push
add
adc
pop
pop
mov
pop
xchg
ret
out
ja
mov
inc
or
or
xchg
sbb
push
pop
aad
or
pusha
dec
cmpsl
and
cs
add
dec
les
stos
sub
mov
jno
xchg
cmc
fmull
mov
xchg
cmp
xchg
fildl
aas
and
icebp
xor
cmc
js
adc
daa
out
icebp
mov
push
pop
sub
int
xchg
push
fistl
sub
or
scas
pusha
or
aas
xchg
adc
aam
jo
cmp
test
xor
jbe
jp
mov
addr16
insl
lahf
cli
aam
lds
mov
pop
mov
scas
mov
mov
icebp
stc
adc
repz
cli
sbb
loop
in
cli
std
xor
mov
enter
mov
pop
scas
pop
repnz
ds
lahf
inc
stc
jecxz
jg
push
rcrb
fisubl
or
cmp
adc
addb
mov
movsl
loope
inc
or
pop
mov
shrl
mov
mov
mov
and
cld
push
fwait
and
jne
sub
mov
sub
mov
stc
fsts
push
imul
popf
lret
arpl
jae
jge
sub
pop
and
dec
test
inc
leave
and
mov
pop
dec
daa
ljmp
fstl
hlt
scas
les
mov
es
or
lahf
xchg
imul
fisubl
sbb
xor
jg
mov
sbb
and
imul
mov
cmc
test
orb
add
outsb
bound
inc
out
cmp
std
mov
push
movsb
jno
lret
sbb
bound
xchg
xchg
dec
dec
scas
outsl
jg
adc
js
ret
push
ret
repnz
in
rcrl
ljmp
push
add
add
dec
mov
mov
cmp
and
shlb
rcrl
or
sub
icebp
add
sub
push
lock
pop
ret
scas
pop
mov
sahf
js
xor
icebp
ljmp
es
outsb
pop
inc
cmpsb
push
bound
pop
cmp
cmp
lcall
xchg
test
push
iret
push
out
sahf
xchg
inc
ret
scas
cmp
add
sbb
mov
nop
sbb
movsb
xor
dec
xchg
cmc
xchg
js
or
sbb
dec
pop
loopne
mov
push
fwait
xchg
cmp
in
adc
imul
aaa
pop
test
cli
mov
repz
xor
lods
rorb
stos
iret
aad
add
punpckhdq
hlt
test
shlb
pop
mov
cmp
lods
xchg
in
cli
jns
push
loop
cli
push
and
adc
andl
lcall
mov
xchg
out
add
movsl
xchg
jge
in
sub
test
repz
orb
lock
bound
rolb
gs
mov
es
adc
sbb
fbstp
jae
inc
dec
adc
in
ror
push
fistl
movsb
lock
mov
dec
clc
or
fcoms
mov
arpl
mov
shl
and
or
mov
cmc
inc
mov
lods
mov
jp
jo
jae
stc
xchg
fdivrs
jmp
sub
mov
add
adc
cmp
or
cmpsl
imul
mov
xchg
test
mov
push
dec
imul
andl
leave
addl
imul
xor
pop
movsl
or
dec
ja
movsl
aaa
sti
int
lea
jl
into
and
sub
pop
xchg
pop
sti
ja
shlb
je
outsl
and
aaa
mov
sbb
daa
fldcw
jmp
stos
xor
shl
and
arpl
push
dec
repz
fidivrl
and
addr16
cmp
inc
repnz
adc
cmp
out
pop
inc
mov
xor
xchg
jge
mov
es
sbbb
add
mov
in
les
push
movsl
mov
add
int3
arpl
or
mov
sub
mulb
push
lret
ds
push
ja
add
xchg
pushf
fistps
outsl
add
and
pop
test
cmp
push
test
pop
fstpl
jbe
sarb
adc
jb
je
dec
pop
loop
in
mov
hlt
inc
les
sbb
es
jb
testl
and
ret
push
outsl
shrb
inc
and
and
pop
dec
das
lcall
and
mov
insb
ds
stc
jo
call
add
push
sub
cmp
call
xchg
jns
lcall
add
ljmp
pushf
xchg
addr16
sub
cmc
push
dec
rcrb
pop
jge
jle
mov
jne
fiaddl
mov
pop
jne
outsl
push
and
iret
sbb
jns
pushf
inc
mov
imul
jnp
std
push
add
pop
inc
mov
stc
fstl
cld
push
outsb
inc
pop
lock
pushf
enter
cli
jnp
adc
fwait
pop
inc
mov
cmp
iret
call
int
clc
shrb
dec
dec
into
test
push
jbe
pusha
rcrb
and
add
push
jle
bound
xor
test
adc
add
sbb
sbb
jnp
je
cmp
movsl
shl
mov
repz
push
mov
cwtl
iret
cmp
std
shl
push
outsb
xchg
bound
jae
sahf
sti
push
jmp
jae
shlb
mov
sub
stc
mov
inc
mov
inc
mov
xchg
sub
addr16
push
orb
cmp
mov
lock
into
cwtl
dec
or
lods
imul
out
jne
mov
arpl
jg
gs
fnstcw
push
push
popa
jg
imul
fistl
jo
dec
cwtl
or
adc
push
sub
rclb
popl
or
into
push
out
fistl
mov
push
cmpsb
pop
out
inc
rcl
cmp
push
sahf
mov
mov
aad
addl
les
lock
jns
jge
add
push
jno
push
orl
xor
pop
xor
sub
mov
int
dec
adc
clc
imulb
imul
stos
xlat
loope
jmp
movsb
or
push
dec
mov
sbb
pop
mov
movsb
loopne
test
dec
std
aas
jl
pavgw
mov
pop
xchg
lcallw
inc
aas
pop
pushf
mov
jae
mov
repz
adc
int
out
decb
mov
dec
cmc
inc
repnz
inc
mul
mov
inc
push
dec
cmpsb
pop
push
mov
pop
cmpsl
and
in
in
testb
xor
push
in
push
adc
testl
adc
flds
jns
xchg
cmp
xor
mov
pop
cltd
mov
xor
mov
jecxz
test
xchg
mov
loope
xor
add
add
sub
and
loop
outsl
dec
push
or
push
jne
and
inc
fsubr
sbb
sahf
sub
stc
daa
jle
in
push
jne
and
mov
scas
push
pusha
sub
popa
xor
adc
pop
outsb
xchg
orl
stc
sub
lock
cltd
cmpb
xchg
ja
add
push
mov
mov
cmp
jmp
pop
insb
ficomps
mov
mov
fs
jae
popa
in
inc
adc
das
mov
mov
push
mov
cwtl
sub
push
push
xor
das
mov
and
jl
mov
sub
bound
fstps
popa
push
in
pop
daa
and
ja
adc
in
and
movsl
mov
lea
pop
std
jg
pusha
enter
jmp
lret
jno
mov
mov
icebp
out
pop
sti
pop
pop
xor
or
sub
dec
add
jle
push
push
pushf
sub
pushf
inc
pop
pop
std
out
adc
mov
cmp
jo
scas
mulb
fsubs
push
pop
xor
adc
jmp
and
ja
divl
mov
add
gs
fstps
mov
pop
mov
ljmp
test
nop
rclb
fcmovu
push
into
lea
xchg
mov
hlt
cs
lret
in
jecxz
aam
sbb
movb
add
lret
cmpsl
pop
pop
loopne
add
pop
aad
ljmp
jbe
pop
repnz
add
and
mov
test
add
adcl
mov
sti
insl
xor
decb
out
pop
push
xchg
xchg
and
xor
xchg
imul
mov
adc
dec
mov
js
mov
jne
inc
sub
loopne
xchg
or
pop
dec
sbb
gs
in
lods
mov
pop
jecxz
or
lea
ret
or
cmp
sbb
push
or
push
sbb
push
or
and
int
loopne
and
mov
scas
pop
testl
les
cmp
sub
xor
sub
or
lret
add
xchg
jno
mov
scas
and
inc
inc
lcall
dec
mov
xchg
lahf
adc
pop
jo
mov
adcb
and
mov
xlat
cmpsl
push
jno
mov
call
push
or
and
icebp
adc
das
stos
loop
mov
sbb
adc
xchg
xchg
dec
push
sbb
int3
cmp
mov
xchg
push
mov
and
lods
in
rcl
cmpsb
iret
xchg
cmpsl
inc
jb
add
push
xchg
in
stos
cmp
inc
fs
pop
fwait
mov
dec
sbb
into
pop
ss
cmovns
xorl
lret
sbb
out
adc
adc
pop
inc
add
outsl
lods
jnp
pusha
mulb
add
test
push
xor
insb
sbbb
int
adc
mov
jbe
mov
cs
mov
loopne
xadd
test
fs
leave
jbe
stc
jp
push
test
jecxz
fisttpl
push
pop
jl
fists
cmpsl
fildll
out
cmp
in
adc
xchg
or
mov
mov
cld
mov
fdivs
pop
add
adc
pop
lods
or
js
push
jb
ret
mov
inc
movsl
xchg
jbe
sahf
xchg
lods
imul
clc
mov
cmc
push
push
dec
test
or
negb
les
sub
pop
enter
xchg
test
test
and
rolb
fistpll
inc
push
or
lds
add
sbb
add
dec
lds
mov
andb
dec
popa
cmc
adc
in
cld
jmp
mov
test
cmp
loop
mov
jmp
mov
adcl
adc
or
stos
or
sbb
cmp
gs
cmpl
fstpt
orl
cmpsb
cmp
xor
ja
push
xor
icebp
cmp
enter
sbb
pop
dec
inc
mov
sbb
popf
lret
jnp
mov
iret
fidivrs
or
addr16
cmp
mov
insl
out
div
adc
jecxz
testb
rolb
lods
jle
imul
test
mov
sub
out
aaa
test
ljmp
xchg
shrl
nop
cmp
dec
call
xor
inc
xchg
mov
mov
cli
push
mov
inc
loop
adc
scas
mov
leave
add
lods
mov
cmp
subb
cmp
pop
bnd
subb
mov
mov
mov
inc
inc
jmp
in
jmp
xchg
mov
aaa
aad
adc
out
loop
dec
cld
scas
and
cmp
test
pusha
dec
hlt
pop
adc
or
sti
pop
test
mov
dec
xchg
cltd
test
lret
push
pop
ja
outsb
jge
lret
dec
mov
pop
rcrw
test
pop
mov
push
lea
dec
scas
ror
mov
lods
fidivrs
dec
arpl
inc
lods
hlt
or
pop
shlb
out
bound
outsb
lock
ret
shlb
aaa
loop
push
cld
inc
push
rcrb
xchg
dec
jl
pop
flds
cld
hlt
jnp
sbb
xor
push
dec
pop
pushf
dec
sub
icebp
sub
mov
ffree
xchg
popf
inc
ja
pop
enter
dec
ja
adc
pop
pushf
push
cmpsb
sbb
jns
outsb
fdivrl
insb
mov
daa
adc
jp
sub
jmp
enter
mov
sbb
dec
sub
mov
and
test
loope
mov
fcompl
out
out
outsl
and
fdivrl
test
aas
cmp
mov
xchg
cmp
add
jo
lret
outsl
ljmp
fwait
jge
push
sbb
push
mov
pop
sub
push
int3
xchg
frstor
test
ret
jnp
mov
inc
mov
js
inc
mov
adc
in
clc
sar
out
hlt
add
gs
test
loop
xor
pop
jecxz
imul
jne
mov
nop
ret
lock
mov
mov
cmpsb
xchg
xor
adc
push
xor
rcrb
mov
mov
ret
sbb
jnp
lods
adc
in
jmp
jo
sbb
fcoml
jp
xchg
imul
mov
mov
or
push
sub
jae
push
ss
into
add
jae
push
mov
pop
aaa
jecxz
fbstp
push
cmpsl
xchg
call
out
rorl
sbb
xchg
ljmp
push
fdivrs
dec
push
pushl
adc
loope
pop
out
repnz
xchg
push
push
clc
sbb
into
xchg
in
xlat
jno
pop
inc
xchg
hlt
dec
lahf
fdivrs
hlt
arpl
add
push
outsl
mov
insb
jmp
enter
push
das
adc
test
gs
xchg
fisubrs
aas
push
add
movsl
sub
xchg
sbb
mov
sub
popa
inc
ret
lret
sub
sti
xor
aas
shll
mov
insl
adc
push
loopne
call
aas
addr16
xchg
cmp
cli
test
bnd
mov
sub
mov
movsb
inc
loopne
scas
imul
add
scas
mov
sbb
mov
repnz
sub
sub
adc
fidivs
xor
push
scas
pop
movsl
loope
dec
pop
cs
pop
shr
repnz
add
mov
mov
loop
int
in
jle
pop
mov
in
movsb
je
stos
add
cmp
mov
push
pop
or
popf
lcall
lcall
shlb
sub
sbb
outsb
outsb
jl
loopne
dec
add
pop
mov
xlat
dec
sub
jne
cs
rcrb
incb
imul
aam
sbb
xor
shll
test
xor
shrl
leave
lahf
subl
lret
mov
mov
fiadds
cmp
fistps
inc
cmpsb
ficompl
je
jne
fsts
jae
das
push
popf
es
hlt
movsb
seta
mov
pop
sti
scas
les
jmp
int3
int3
in
scas
test
fisttps
out
dec
ja
xchg
push
push
jo
inc
add
pop
stos
pop
jbe
jnp
xchg
cmpsl
scas
aam
mov
lods
sub
lret
popa
out
sbb
cmp
xchg
push
add
icebp
fisttpll
fmull
shrl
push
ljmp
xor
js
jecxz
fistpl
inc
xchg
aam
pop
inc
gs
add
movsl
push
das
sbb
add
out
lahf
popa
test
adc
inc
fldenv
inc
push
mov
add
out
dec
cmp
stos
roll
mov
int3
lods
or
mov
stos
imul
aam
lahf
cmpsl
stc
leave
movsl
add
je
scas
adc
aas
ds
lods
arpl
in
ret
xchg
mov
push
rcrb
sub
adc
add
inc
xchg
and
dec
je
test
mov
outsl
mov
jne
sbb
repnz
cmc
and
fwait
inc
nop
mov
xor
or
push
adc
push
xor
addb
xchg
xchg
pop
mov
inc
and
insl
scas
dec
add
call
and
out
mov
adc
inc
mov
popf
outsb
pushf
mov
or
inc
adc
mulb
and
cmp
cmp
sub
ficoms
shl
mov
add
enter
dec
add
loope
popf
cmp
push
adc
pop
in
xor
repnz
leave
xchg
aaa
add
loop
gs
cwtl
sub
lea
incl
cmp
pop
cwtl
aam
stos
repz
lahf
add
mov
mov
sahf
ss
icebp
or
and
and
mov
xchg
mov
inc
into
insl
out
aaa
popa
dec
add
addr16
fidivl
lret
mov
movsb
in
mov
inc
xchg
pop
mov
xchg
cld
mov
sarl
js
sbb
aam
bound
rorb
push
sub
xor
and
xorb
inc
jge
pop
insl
adc
lods
ret
mov
jns
das
cmp
and
mov
imulb
mov
shrl
sub
stc
out
jp
pop
lret
or
mov
fildl
add
imulb
mov
mov
push
add
xchg
sub
inc
hlt
jg
xor
cmp
out
mov
xchg
xchg
aad
dec
in
push
daa
jb
jle
popw
aam
popa
pop
inc
adc
mov
imul
cltd
rcll
sub
sarb
xchg
hlt
cmc
fisubl
dec
daa
mov
sbb
sarb
scas
sub
addl
outsb
inc
loopne
push
iret
lods
jmp
jnp
dec
sub
add
cmp
sbb
mov
cmp
ljmp
fisubs
fldl
push
sbb
shrb
jns
hlt
outsl
jl
mov
pop
test
mov
adc
push
mov
pop
mov
cmp
into
push
rorb
cwtl
cli
xchg
xchg
adc
shrl
inc
xchg
fisubrs
inc
stos
out
mov
pop
fcompl
in
mov
sahf
and
jne
sbb
xchg
notl
push
dec
popa
push
pusha
cmp
mov
and
into
cs
dec
cli
jbe
shl
push
xchg
sbb
dec
mov
add
daa
adc
push
leave
inc
mov
ss
clc
push
cld
pop
dec
ss
xchg
pop
cld
xor
pop
in
adc
std
inc
jbe
lock
pop
ds
in
sub
pop
jp
lret
lahf
cmc
insb
ds
jb
inc
jb
lahf
stc
and
inc
mov
dec
mov
mov
push
jge
movb
dec
pop
jp
push
xchg
xchg
popf
cwtl
cmpsb
rcr
es
subl
sbb
scas
mov
lock
adc
mov
scas
test
pop
add
push
push
sahf
stos
icebp
xor
mov
push
mov
test
push
jbe,pt
adc
int3
xchg
jae
std
xchg
cmpsl
flds
fdivl
dec
daa
gs
fcoms
pop
scas
jb
mov
repz
sub
add
je
loope
dec
dec
push
jns
cmp
dec
iret
imul
mov
jns
mov
and
mov
xor
movsl
sub
push
dec
jnp
or
adc
mov
push
lahf
fstl
lret
push
xor
pop
lret
lcall
dec
call
or
outsl
mov
test
adc
jnp
shrb
and
cmp
flds
jns
pop
xor
insl
and
lret
sti
sbb
cwtl
mov
faddp
sbb
mov
insb
ss
xchg
cli
mov
push
andb
jge
jp,pn
xchg
je
xor
ja
push
mov
pop
jg
mov
jg
hlt
cmc
mov
js
cltd
jp
mov
and
mov
or
aad
lods
cmp
dec
in
cwtl
push
repz
inc
push
inc
push
cwtl
sub
shlb
and
stos
out
inc
sti
enter
jbe
adcb
cmpsb
push
leave
sub
frstor
clc
xchg
sbb
popf
cs
pop
sbb
mov
adc
mov
mov
mov
mov
or
fildl
inc
inc
ljmp
adc
mov
cmp
icebp
popf
ja
mov
je
and
add
push
out
cmp
loop
push
dec
and
in
rolb
xor
ret
call
sbb
push
loopne
xlat
dec
test
jnp
rorl
xchg
stos
fwait
jae
sub
push
mov
adc
dec
sub
ljmp
mov
testw
add
notb
out
xchg
jp
lret
js
lds
rorl
pop
pop
xchg
repnz
sub
mov
outsb
jbe
mov
nop
sbb
adc
in
fstp
sbb
jne
ds
mov
std
outsb
in
arpl
inc
inc
dec
push
insb
dec
cs
jg
ret
cli
adc
out
test
jns
les
dec
loopne
sti
popa
sbb
repnz
push
inc
sbb
add
mov
adc
xor
xchg
out
mov
outsl
xor
fs
mov
pop
cmc
out
shlb
jne
inc
fmuls
xor
inc
in
fcoml
dec
fiaddl
xor
and
mov
sub
adc
jo
ret
inc
cmp
xchg
inc
sbb
icebp
cs
inc
mov
xor
lret
jne
orl
and
fwait
push
dec
lods
js
out
dec
or
mov
movsl
pop
sbb
mov
cmp
adcb
jp
mov
mov
xchg
sub
add
mov
mov
lods
shlb
outsl
add
sbb
andb
mov
out
or
mov
xor
mov
test
mov
push
cmp
icebp
cmp
sub
xchg
outsb
add
jge
cli
cmp
cmpsl
outsb
inc
lret
jl
pop
sbb
and
lea
hlt
outsb
jo
aad
arpl
shlb
or
jo
xchg
imul
mov
imull
testb
or
and
jecxz
stc
aas
adc
std
cs
cmp
xor
pop
mov
dec
dec
mov
das
jl
sbb
lds
jnp
js
sbb
lods
or
rcl
pop
insl
mov
or
pop
and
cmpsl
fmuls
mov
sub
stos
xor
sub
pop
mov
fld
dec
xchg
mov
aaa
pop
clc
pushf
out
test
xchg
ds
mov
pop
xor
in
outsl
inc
inc
mov
out
dec
ja
mov
insb
dec
xchg
xor
and
push
cmp
inc
and
and
int
data16
mov
bound
lea
mov
mov
lcall
push
add
add
jno
mov
data16
std
jp
shlb
or
mov
dec
cld
pushf
xlat
rol
testb
adc
fsubrs
enter
fdivr
push
add
fidivs
dec
cwtl
shrl
ret
sub
insl
xchg
add
nop
pop
subb
js
shl
mov
andl
call
jle
cmp
mov
repz
mov
jne
jns
sub
lds
xchg
mov
adc
dec
cmp
inc
aaa
fnstsw
push
je
aad
xor
add
fsin
lea
sub
push
pusha
adc
add
fdiv
ja
lret
clc
pop
mov
cmp
pushf
jnp
or
loopne
lcall
xchg
sahf
in
jl
push
xor
adc
mov
in
ret
es
lcall
mov
xor
mov
icebp
lcall
ficompl
les
push
scas
jp
inc
sarl
call
out
jo
out
js
xchg
std
lods
out
and
in
stc
sub
jbe
into
aaa
xchg
hlt
dec
pop
stc
or
mov
sysret
fsubrs
xor
mov
fistl
shlb
or
push
mov
in
add
push
inc
out
and
lods
jnp
and
fwait
movsl
loope
fildll
or
cmc
outsb
lods
insl
xor
into
lea
cmpsl
aam
dec
jl
sarl
pop
pushf
and
mov
ss
je
push
cwtl
xchg
call
shll
sub
jns
mov
scas
mov
sbbb
daa
and
outsl
mov
fnsave
inc
je
cld
mov
in
jge
and
pop
adc
xor
lock
inc
shr
jno
out
lods
test
loop
add
sbb
mov
sbb
xchg
idivl
popa
push
jle
movsl
dec
bound
repnz
in
or
mull
push
push
daa
ja
adc
inc
jmp
cmpsb
iret
icebp
cmp
fdivr
mov
adc
rorl
pop
fdivrs
leave
xchg
out
mov
jge
dec
mov
sbb
inc
mov
imul
shll
pop
push
imul
xor
adc
sarb
popa
lods
xlat
adc
das
imul
cmp
jmp
jecxz
dec
test
mov
rol
loope
xor
jg
mov
test
jb
repnz
jo
test
in
mov
jp
or
cmc
push
adc
xchg
push
lret
inc
cmp
push
mov
outsl
adc
adc
test
test
mov
or
nop
jle
inc
cmove
pop
pop
fisttpll
mov
jae
mov
ljmp
pop
xchg
push
or
add
xor
aam
ss
ja
dec
mov
scas
imulb
pushf
push
ret
mov
ud1
and
in
mov
add
and
shll
cmp
out
lahf
push
lds
xchg
xor
jg
pop
xor
outsb
pop
loope
sti
or
sub
mull
sti
adc
scas
lds
adc
dec
adc
jae
jl
sbb
lods
test
test
jne
shrb
sahf
in
or
ret
and
stos
sti
dec
outsb
push
cmp
adc
sub
or
pop
arpl
sbb
xchg
mov
daa
movsb
mov
aas
mov
fiaddl
jae
and
gs
icebp
sti
or
mov
test
sti
fisttpll
cmpl
pop
imull
sahf
pop
cmp
push
pop
add
pop
mov
out
orb
mov
push
cmp
lds
rcrl
cmpsb
xchg
cmpsl
mov
jg
je
out
fsubr
es
sahf
loop
mov
outsb
sbb
ret
into
mov
sbb
xlat
xor
jge
mov
dec
imul
popl
or
and
jne
push
daa
fdivrs
and
mov
sbb
clc
push
das
adc
fdivs
aad
mov
jb
cmp
shr
scas
inc
push
fnstcw
mov
xor
mov
dec
mov
push
pop
popa
dec
leave
mov
inc
sahf
insb
aaa
andb
jp
pop
imul
jmp
jg
add
stos
insl
imul
dec
jae
imulb
dec
pop
ror
sub
pop
js
dec
mov
inc
mov
repnz
lea
mov
jnp
into
sbb
cs
movsl
repnz
cmp
jnp
jb
pop
lods
shr
ss
testb
xchg
cs
outsb
fldl
mov
sbb
lock
es
push
or
push
dec
in
mov
leave
icebp
mov
and
fistpll
xor
xchg
push
jl
push
jle
popa
inc
dec
rcll
mov
out
and
cwtl
push
je
mov
iret
pop
push
stc
pop
call
icebp
or
xor
mov
xor
popf
push
pop
int
mov
xchg
bound
orl
add
add
pop
add
orb
lcall
lret
lods
int
push
inc
ret
cmp
lds
sub
scas
idivl
pop
in
cmp
xor
jp
jno
or
jns
gs
outsb
mov
push
dec
inc
ficoms
dec
pop
sbb
testl
mov
gs
xor
pop
enter
test
leave
sub
or
sbb
or
mov
lret
lret
stc
jns
unpcklps
in
std
cmp
jp
fisubl
ret
cmp
jmp
jge
xor
jl
add
add
mov
pop
xor
out
pop
imul
clc
cmp
mov
sbb
ret
shl
test
jle
inc
mov
xor
popf
setne
jno
cmp
aas
push
lret
pop
ret
mov
cltd
mov
out
sub
gs
xlat
pop
loop
stc
lahf
fidivs
push
inc
mov
mov
xor
cwtl
push
sub
fwait
aad
ja
loop
xchg
testb
stos
mov
test
dec
mov
cmp
loop
mov
xchg
loop
test
xchg
mov
shrb
fildll
jbe
dec
daa
pop
xor
loopne
and
cld
jg
pop
xor
mov
sbb
and
movsl
sbbl
jns
and
push
in
pop
jnp
jns
test
push
pop
fwait
sub
jns
mov
fwait
imul
lret
add
popf
call
repz
mov
push
mov
and
rorb
xor
dec
icebp
iret
fld
adc
outsb
push
xlat
imul
out
mov
xchg
bound
loope
inc
mov
lcall
jmp
adc
xor
lds
inc
js
pop
sbb
ret
dec
ffree
add
sub
adc
fs
scas
or
mov
pop
jmp
cmpsb
mov
xlat
mov
cld
lea
and
mov
cmp
icebp
pop
lds
or
mov
insl
mov
xchg
dec
mov
addr16
shlb
dec
ljmp
jnp
lret
mov
pop
in
dec
fwait
inc
dec
and
popa
stc
pop
xchg
cmp
and
dec
cld
inc
stos
hlt
lock
andb
add
inc
aam
bound
rorl
inc
test
cmp
xor
into
fmull
scas
mov
inc
in
mov
rorb
xor
adc
cmp
popf
push
and
aad
lock
inc
stos
dec
mov
mov
lcall
inc
sbb
sbbl
jg
dec
and
cltd
xlat
mov
jl
push
sbb
sbb
adc
mov
add
and
imul
pop
int
or
pusha
in
insb
and
in
xchg
dec
add
int3
push
lret
stc
xlat
enter
icebp
push
nop
mov
stos
xor
push
inc
out
adc
rcll
add
js
mov
dec
cmp
movswl
arpl
gs
mov
mov
testb
cwtl
xchg
in
mov
add
pushf
dec
ficoms
inc
xor
inc
jle
or
cmp
jno
js
jnp
jo
mov
xor
and
stos
pushf
push
sti
out
cmc
int
jl
bound
inc
mov
mov
mov
jno
adc
and
imul
inc
push
int
icebp
out
or
sahf
sti
adc
adc
cmc
add
ljmp
or
lahf
push
pusha
xchg
add
lcall
or
jp
or
xor
mov
daa
popf
test
jae
fbld
fistps
jle
jbe
cli
push
push
adc
scas
add
mov
inc
aaa
mov
in
inc
aad
arpl
mov
cwtl
fxch
inc
divb
out
call
mov
je
xchg
test
iret
xchg
aam
xchg
jge
leave
out
dec
mov
sbb
cmpsl
icebp
test
inc
mov
aam
add
mov
sti
div
pop
lock
sub
mov
movsl
aas
lods
ja
push
push
mov
sbb
jge
cld
jp
jge
js
outsl
nop
xchg
jle
pop
stc
jb
fsubr
icebp
jno
mov
outsb
in
fnstcw
cmp
out
or
xor
arpl
cmc
gs
rorb
jnp
subl
push
mov
outsb
imul
idivb
movsl
in
stos
enter
xor
cltd
mov
pop
in
cli
pop
mov
lahf
xchg
cmp
push
mov
into
mov
movsb
inc
inc
push
adc
mov
aaa
xchg
xor
sub
mov
psubw
insl
add
push
mov
push
mov
mov
add
push
cmpl
and
enter
in
xchg
mov
loopne
pop
add
pop
adc
mov
lock
mov
sub
add
and
icebp
push
inc
xor
icebp
sbb
lock
outsl
nop
stos
loopne
negl
xchg
adcb
or
adc
cmp
add
orl
orb
jp
push
xchg
insb
jb
repz
or
push
aam
repnz
fs
mov
das
push
addl
pop
or
shrl
pusha
sahf
gs
adc
mov
xchg
cmpsl
and
addb
mov
pop
rorb
push
pop
sti
ja
bound
inc
pop
push
shl
lahf
imul
xchg
and
fsubrl
sub
xor
add
lods
xchg
pop
mov
std
out
pop
mov
and
mov
hlt
mov
fiadds
outsb
movsb
jge
inc
dec
loop
fidivl
push
dec
xchg
mov
or
adc
and
stos
jg
clc
ja
fxtract
jbe
mov
cmp
cmp
or
jp
mov
ljmp
push
imul
push
sbb
sbb
sbb
or
nop
adc
pop
mov
lahf
mov
imull
ret
out
out
fldcw
shl
shrb
jo
pop
inc
clc
xor
xlat
mov
inc
sub
stc
inc
push
push
mov
loope
cltd
jp
dec
or
popf
test
and
in
daa
sbb
push
std
iret
and
sbb
aaa
rorl
fimuls
mov
fucomp
push
mov
mov
sbb
ret
inc
cmc
aam
xchg
push
fwait
xchg
stos
rorb
pop
jmp
rol
pop
xchg
je
jp
push
cltd
enter
cmp
xor
mov
xor
andl
or
cmp
sub
mov
mov
loopne
arpl
mov
jae
dec
sbb
mov
xchg
jge
outsb
sub
cli
dec
insb
pop
pop
pop
insb
lret
cmp
test
jl
jge
cmpsl
test
sub
lds
pop
fildl
inc
sub
mov
test
jns
das
in
dec
movsb
test
movsl
cmp
push
and
xor
inc
enter
ss
cmpsl
negl
sbb
scas
je
leave
fwait
mov
fsubs
fdivp
inc
and
pop
test
sub
in
movl
ja
loopne
and
cld
sub
or
imul
test
testb
clc
xor
adcl
add
in
addb
in
test
movsb
or
xor
fists
pop
daa
clc
dec
push
inc
ret
push
andl
lock
mov
loope
jbe
inc
xchg
stos
fcomps
lea
xchg
neg
insb
pop
adc
xchg
push
and
fs
push
dec
and
xchg
push
mov
cltd
xchg
inc
xor
add
and
mov
in
inc
call
add
dec
adc
mov
imul
xchg
add
jl
inc
push
jne
loope
mov
sbb
xor
push
sub
lds
repnz
mov
mov
jne
mov
and
sbb
mov
int3
gs
lock
mov
scas
jbe
sbb
pop
jo
mov
push
and
xchg
cmove
not
mov
bound
adc
cwtl
fdivrl
adcb
loop
xor
shll
icebp
mov
cmc
inc
push
ljmp
aad
in
inc
and
sub
jp
adc
jns
cmp
sub
jno
int
aas
or
dec
sbb
cmp
push
mov
ret
xor
les
das
daa
popf
xchg
adc
lea
push
or
adc
jl
mov
hlt
test
insl
mov
push
dec
xor
inc
movsb
fildll
sbb
icebp
sahf
adc
dec
add
or
mov
test
push
lods
mov
testb
dec
push
jno
movsl
cmp
push
aas
xor
pushf
pop
xchg
xchg
xchg
in
cs
into
lods
xchg
dec
ljmp
pop
mov
dec
push
or
or
xchg
mov
es
repnz
cs
mov
add
lahf
xchg
cltd
sbb
das
push
push
xor
lahf
lods
cld
adc
adcb
es
nop
mov
test
add
addr16
iret
out
mov
mov
out
popf
lahf
jns
addb
sti
xlat
lret
mov
mov
inc
push
cmc
test
mov
and
push
sub
adc
pop
pop
pop
enter
xor
in
inc
adc
ret
cmp
pop
add
and
xchg
sti
adc
push
mov
shrb
sbb
sbb
sti
scas
dec
mov
inc
add
push
mov
loop
ljmp
mov
movsb
add
or
inc
pop
lret
aaa
xchg
push
inc
arpl
add
sub
stos
sar
mov
xor
sub
xchg
inc
xor
pop
inc
sarl
out
xchg
pop
cld
icebp
mov
adc
push
and
ljmp
mov
mov
cmpsb
mov
aad
mov
xor
or
popf
push
leave
lds
fwait
loop
js
jo
add
popf
cmp
sub
cmp
cmp
je
gs
out
pop
das
mov
push
and
mov
mov
mov
xor
aam
jmp
and
and
and
ret
cmp
xchg
mov
ja
sub
jbe
scas
adc
popf
cmp
addl
stc
mov
ja
xchg
add
and
mov
nop
add
jge
test
xor
push
xchg
call
aam
fistpll
and
scas
jbe
div
loope
scas
daa
push
xor
pop
pop
stc
arpl
xor
and
mov
cli
pop
push
push
or
nop
inc
and
mov
in
imul
test
push
and
ljmp
cwtl
ja
iret
pop
mov
loope
adc
cmpsb
push
mov
cmp
pop
addl
push
jns
dec
jmp
fmull
jecxz
cwtl
dec
xchg
mov
imul
out
imul
dec
popa
fstl
out
rep
add
jb
mov
dec
xchg
test
aas
cmp
ficoms
mov
and
dec
fistl
stc
mov
add
cli
nop
pop
mov
test
subb
add
adc
orl
jno
jle
mov
fdivr
not
mov
xchg
or
mov
mov
push
roll
and
inc
pop
sub
and
ret
sbb
outsb
push
mov
insb
int3
std
sahf
sbb
inc
adc
mov
or
xchg
ret
popf
in
lods
clc
lahf
js
cmovs
mov
int
xchg
cmpl
enter
cwtl
jae
push
icebp
ret
push
xchg
inc
push
cld
lahf
sahf
mov
pop
push
rclb
cli
sbb
in
mov
xor
dec
lret
loop
clc
iret
decb
jp
icebp
and
push
add
sar
mov
add
adc
mov
popf
notb
add
popf
jle
jmp
popa
mov
cld
xchg
jo
cmp
push
sbbb
fwait
mov
mov
mov
sbb
jbe
jle
push
jl
stos
mov
cmpl
imul
and
push
icebp
lock
sbb
lahf
pop
sbb
shll
xchg
xchg
aam
inc
out
scas
stos
fstps
fldt
scas
inc
jbe
movb
lcall
add
fiaddl
mov
mov
push
int
pop
imul
fbld
scas
add
pushf
xor
int3
pop
mov
out
xor
pushf
jae
lds
mov
iret
loope
outsb
addr16
test
cmp
mov
push
shl
pop
cmp
or
push
aad
sbb
xchg
pop
push
mov
bound
xor
enter
and
sub
out
mov
and
push
je
lret
dec
sbb
adc
inc
pop
aas
icebp
lods
cmpsb
push
shrb
add
into
xor
cmp
out
mov
loopne
psrld
xchg
jne
out
pop
shll
dec
fmulp
cmp
out
test
adc
xchg
push
lods
aam
mov
sar
xchg
adc
shll
fstl
pop
jnp
popa
movb
jae
lods
xor
popf
outsb
jle
and
lock
inc
add
sub
std
pop
cmpsl
jl
in
xor
divl
pop
sbb
leave
push
test
jb
test
test
test
xchg
andl
add
shr
testb
sbb
jl
cmp
je
jmp
repnz
fwait
xchg
push
and
jg
loop
ds
sbb
js
xchg
arpl
fdivs
movsl
and
idiv
mov
xor
pusha
xchg
pop
sub
das
push
cltd
xchg
fimull
mov
cmpb
scas
and
enter
in
hlt
popa
insl
xchg
lcall
adc
pop
xlat
pop
into
and
cltd
jo
xor
jnp
jle
inc
lea
aam
mov
push
lcall
adc
mov
inc
mov
sbbl
add
mov
ret
bound
enter
lcall
in
out
xchg
jo
repnz
xlat
mov
sahf
das
je
out
xchg
outsl
fisubrl
mov
and
or
adc
cmp
mov
pop
popa
jae
sbb
cmc
mov
andl
inc
enter
fsubrl
xchg
aad
sysenter
imul
dec
fld
add
repz
xchg
loopne
add
pushf
lahf
js
cmp
inc
clc
das
insw
sbb
repz
ret
mov
cmp
and
ror
jb
shrb
std
lods
dec
lret
outsb
add
test
aaa
cmpl
iret
mov
dec
cwtl
inc
jne
inc
or
shll
add
popa
push
iret
push
subl
arpl
sbb
lods
cmp
mov
cmpsb
les
mov
xchg
or
mov
mov
pop
cltd
repnz
mov
pop
cmc
jo
rorl
es
loop
lcall
jno
mov
push
jg
bound
ror
movsl
push
pop
dec
in
in
jg
lock
inc
push
fidivs
imul
fstpl
jle
adc
js
insb
pop
inc
data16
clc
lds
subl
jle
rcrb
sbb
sub
lcall
xor
inc
push
xor
push
xor
lods
inc
ret
jmp
je
andb
sbb
add
or
mov
adc
sahf
push
scas
ja
sahf
jne
test
lods
es
push
mov
add
call
pop
or
int3
adcb
mov
icebp
int
add
xor
mov
mov
cs
jbe
or
push
call
out
push
nop
aaa
mov
fiaddl
int
lahf
movsb
adc
add
lcall
push
adc
push
sbb
and
rcrb
cli
push
mov
cmp
iret
jmp
lods
shrl
leave
inc
out
or
in
aas
xchg
movsl
jae
out
mov
and
push
push
and
stos
sbb
arpl
jae
xor
push
fcmovu
in
adc
mov
adc
jo
mov
test
les
mov
nop
inc
mov
jne
dec
ss
out
insl
mov
xchg
in
lahf
mov
mov
or
iret
out
add
inc
test
xchg
stos
pop
inc
js,pt
movsb
cmpsb
pop
and
aad
pop
int3
ret
add
cs
lcall
cmpsb
stos
push
iret
dec
cwtl
loopne
sarl
sub
mov
jb
imul
fwait
xor
mov
cmpsb
xchg
lret
test
cmp
push
les
lahf
mov
sbb
movsb
test
add
das
jno
add
dec
adc
sbb
jno
xlat
loop
xor
fnstsw
push
insb
pop
xor
ljmp
decb
mov
out
xor
lahf
aas
add
ror
ja
roll
xchg
and
pop
push
loope
cltd
jle
int3
int3
cmp
pop
xchg
mulb
adc
in
inc
xor
and
shll
cmp
sub
ss
xor
loope
or
fiaddl
xchg
mov
test
push
xchg
jg
lods
dec
sarb
das
ret
sbb
lock
clc
inc
mull
pop
popa
fisubrs
fisubrs
jo
or
mov
inc
add
mov
xchg
and
dec
cmc
xchg
out
scas
push
push
shl
mov
sub
fsubl
adc
or
cmp
mov
cli
hlt
mov
jp
lret
xor
or
pusha
mov
cmp
enter
je
jge
mov
lock
outsl
fldenv
pop
mov
ss
mov
xchg
jmp
dec
fwait
int
push
cmc
push
lea
jmp
xor
ret
popa
call
pop
roll
gs
ret
or
icebp
mov
bound
loopne
aas
lods
cmpb
test
loope
repnz
sub
xor
sub
pop
mov
cmp
or
pusha
xor
hlt
push
inc
imul
or
mov
mov
pop
fldcw
jg
sbb
cmp
fsub
jecxz
pop
adc
repz
scas
xchg
movsl
mov
insb
scas
je
into
lahf
and
jne
dec
dec
ja
mov
cltd
xchg
mov
stos
mov
push
mov
dec
add
shlb
les
add
and
mov
adc
loope
xchg
ror
jne
mov
lds
rcrb
es
sub
and
or
sbb
push
or
std
mov
or
repnz
sbb
cwtl
mov
jmp
inc
cmp
shll
xchg
dec
push
sbb
aaa
cmp
add
mov
or
leave
or
and
and
mov
popa
xlat
insl
mov
orb
addr16
push
lahf
or
add
test
jl
push
push
xchg
sahf
out
jno
sbb
fistl
jb
push
xchg
mov
fbstp
subl
xor
sub
dec
mov
jnp
sub
out
lcall
stos
arpl
push
jl
push
and
dec
dec
pop
or
pop
or
das
aas
push
jl
add
ret
outsb
fs
dec
jl
repz
and
int3
fdivr
inc
aas
xchg
std
test
add
into
inc
roll
lcall
push
xlat
popa
fcompp
add
sub
fsts
inc
je
es
add
mov
leave
insl
scas
add
push
imul
dec
fwait
sub
pop
out
dec
addr16
test
test
jns
adc
call
aam
repnz
inc
cmp
jb
xchg
mov
sub
xor
mov
sub
ss
jns
aad
xchg
push
mov
xchg
fwait
in
xor
fidivs
into
lea
push
jl
pop
movsl
movsl
push
jbe
test
insb
xchg
test
jae
jnp
adc
dec
sbb
fidivl
jg
jp
sub
lods
into
and
sub
repnz
jp
lcall
jge
mov
xorl
xor
fcoml
and
movl
push
xor
mov
lods
pop
fisttpl
aas
lret
adc
js
rorb
inc
push
shll
fstl
mov
mov
testb
icebp
sub
nop
jnp
adc
jno
cld
lods
hlt
loop
imul
imul
loope
stc
adc
inc
push
dec
and
sarl
mov
or
or
or
push
icebp
sarb
out
out
lods
cwtl
pop
mov
adc
cmpps
cmp
sub
mov
mov
shll
sbb
imul
adc
xchg
pusha
leave
insl
dec
jp
cmp
loop
ljmp
enter
dec
cmp
push
xchg
and
fildll
mov
cmp
and
loopne
out
test
inc
leave
mov
dec
jae
mov
adc
sti
push
outsb
arpl
mov
fisubrs
jecxz
pop
pop
cmpsb
mov
inc
lcall
cmp
cli
fs
or
in
sbb
mov
push
xchg
and
fstps
fstps
push
sbb
mov
inc
sbb
pop
xchg
pop
mov
sbb
xor
int
imul
sbb
push
and
andb
push
cwtl
icebp
jle
lea
orl
and
pop
int3
inc
xchg
adc
add
outsl
mov
xchg
sarl
pop
imul
and
mov
inc
push
sahf
pusha
cmp
sahf
mov
leave
pop
mov
mov
and
imul
mov
fcoml
and
scas
test
rcll
sbb
int3
cmc
stos
add
and
mov
pop
cmp
sbb
add
fs
int
fnsave
dec
sub
sbb
cmc
dec
daa
or
nop
jno
les
push
mov
mov
icebp
in
gs
lods
movsb
imul
insb
mov
push
lret
call
out
mov
nop
outsb
jne
cmpsb
mov
xchg
in
pop
jno
add
pop
mov
lds
je
stos
sub
xchg
dec
lock
cmp
mov
test
fcomps
inc
cltd
jp
push
dec
insl
lea
or
clc
mov
and
fidivrs
lods
pop
pop
imul
inc
outsl
or
mov
and
inc
xor
mov
repnz
test
pcmpgtd
cmpsl
pop
sub
aaa
imul
and
jae
loope
sbbl
adc
jnp
cmc
cwtl
and
ficoms
add
aad
or
outsb
in
push
sbb
aad
in
sub
add
dec
mov
sbbl
in
jb
and
cli
xor
pop
into
mov
adc
jb
sbb
dec
push
xor
pop
xchg
std
aad
add
jecxz
pop
mov
out
mov
ja
fisubs
js
dec
stos
inc
xchg
out
push
sub
inc
dec
jg
pop
push
cli
mov
sub
in
ss
cmpb
xor
ficompl
inc
mov
data16
pusha
mov
dec
bound
jmp
call
jae
inc
sbb
inc
jmp
sahf
push
dec
fwait
repnz
shrb
and
xchg
pop
int3
jge
push
sbb
and
inc
movsb
lock
inc
sub
mov
sbb
lock
lcall
out
stos
movsb
inc
imul
push
stos
ja
jecxz
or
sbb
sbbl
stos
stc
mov
sbb
aas
fbstp
pop
loope
aam
mov
sub
mov
add
mov
pop
inc
and
push
fimull
push
lret
adc
xchg
insl
hlt
xor
sar
xchg
fs
cmpsb
sub
outsl
pusha
xchg
add
pop
xlat
mov
mov
lods
mov
inc
incb
or
test
inc
pop
inc
ret
test
and
push
push
push
insl
and
inc
mov
xchg
sbb
and
xor
sete
push
dec
mov
dec
sub
mov
inc
xchg
push
mov
xchg
adc
popa
das
and
mov
rcl
clc
jae
in
popf
aad
aas
pop
fidivs
cltd
negl
aaa
je
lea
add
movsl
push
push
sbb
in
xor
movb
clc
adc
and
fdivrs
mov
jg
fistpll
fdivs
cmpsb
ds
xor
test
mov
cmc
outsl
sub
push
imul
or
and
jp
cmp
fdivl
jns
mov
push
sub
add
xchg
test
sbb
mov
inc
icebp
xor
or
mov
notl
add
sub
jecxz
andl
pop
insl
aas
mov
subb
mov
dec
popf
ds
loope
cmp
in
sbb
je
push
push
xchg
xchg
jmp
imul
jge
mov
imul
nop
ss
or
ja
xchg
or
push
jnp
inc
inc
push
scas
pop
aaa
arpl
addb
stos
loop
add
jne
or
adc
dec
into
rol
cld
push
ja
lock
mov
cmp
fisttpll
lock
push
xor
pusha
loopne
movsl
lret
xchg
aas
jnp
sub
push
jle
dec
xor
xor
roll
cmp
adc
popa
cmpsl
arpl
pusha
dec
js
faddl
adc
ja
pop
es
sub
xchg
ds
push
adc
pop
pushf
jp
mov
lahf
inc
fdivrs
push
lods
dec
sahf
fiadds
xchg
mov
cmp
cmpsb
clc
push
fs
sub
dec
push
sbb
int
shrl
aad
and
es
mov
sbb
or
out
or
rolb
adc
scas
lods
pop
cmp
jmp
or
lods
outsl
mov
xor
jns
push
mov
inc
repnz
sbb
sbb
inc
push
cmp
xchg
sarb
mov
cmp
lock
stos
mov
xor
xor
pop
and
push
jg
ret
or
pop
jle
mov
imul
fdivr
lcall
lock
sub
cmp
push
cli
sub
jo
icebp
rcr
daa
int
lcall
or
push
ret
inc
xchg
popf
cmp
loope
popf
jle
pop
mov
and
cmp
in
iret
out
mov
and
rsqrtps
popf
loop
and
jmp
das
fwait
lods
imul
sub
mov
pop
aaa
pop
sub
add
mov
jl
movsb
movsl
inc
push
test
sar
adc
mov
jnp
mov
dec
aas
cwtl
inc
icebp
push
cwtl
push
and
es
loope
ror
or
jae
fidivl
mov
loop
adc
mov
fbld
flds
or
addr16
push
push
pop
sbb
add
ret
cmpsl
and
and
cmp
mov
aas
jle
push
jo
movsl
mov
xchg
xchg
cltd
xchg
pushf
inc
inc
mov
outsl
fidivs
add
icebp
cmpsl
xchg
nop
adc
gs
nopl
mov
sbb
std
cld
jbe
dec
outsb
and
aaa
adc
push
adc
mov
push
shll
push
lret
ss
mov
xchg
mov
rcrb
add
xchg
loopne
mov
push
dec
clc
dec
ret
mov
cltd
outsb
push
pusha
lret
pop
or
mov
test
mov
lods
xchg
inc
cmpsb
add
mov
lahf
sbb
sub
int
aaa
sahf
lret
lret
adc
push
jns
adc
dec
loope
cmp
mov
enter
add
xor
xor
xor
xor
add
add
mov
pop
mov
mov
mov
add
ljmp
xor
add
imul
pushf
es
add
pop
mov
jmp
add
ret
mov
ss
repnz
sahf
mov
push
lea
pop
pop
icebp
mov
mov
int3
lcall
mov
jl
jge
push
sbb
fimuls
jl
push
movsb
dec
push
pop
add
inc
data16
iret
shll
mov
je
mov
filds
mov
adc
cmpsl
fwait
insl
xlat
jbe
lods
sbb
jae
push
mov
push
jns
cltd
jl
enter
or
xchg
mov
out
push
pop
cmp
mov
or
or
gs
and
cld
arpl
lret
mov
sub
fidivs
mov
popa
sbbb
insl
test
pop
xor
dec
sbb
test
sub
lods
xchg
shlb
mov
add
out
push
test
sbb
in
pop
mov
adc
sub
lcall
mov
xchg
mov
in
jecxz
sub
into
sub
mov
xchg
pushf
xor
jmp
mov
push
xor
out
dec
or
add
scas
sub
int
pop
mov
loopne
ret
xchg
xor
mov
enter
mov
inc
jae
outsb
mov
xchg
mov
pop
jmp
jle
xchg
jae
bswap
or
xor
mov
push
jmp
out
or
xor
into
fsts
into
pop
jns
ficompl
adc
pop
mov
push
cmp
add
outsb
dec
sbb
hlt
mov
mov
fistps
in
jl
sbb
aam
js
sbb
jae
cmpsl
push
cwtl
inc
subl
lods
and
jecxz
dec
dec
push
fldcw
xor
popf
and
aaa
enter
mov
scas
inc
lcall
scas
or
in
mov
fsubrs
push
loope
lock
fdivs
xchg
push
fadds
pop
call
dec
lds
push
xor
mov
pop
popa
pop
arpl
lock
repz
repnz
inc
rorl
jl
push
add
mov
pop
and
mov
test
loop
call
mov
push
add
pop
xor
xchg
aas
pop
ljmp
cmp
outsb
xchg
jg
into
test
adc
jmp
mull
lret
jecxz
pop
fists
mov
add
out
mov
jge
fisttps
test
ret
cmp
shrl
push
stc
xchg
cltd
adc
js
dec
gs
loope
imul
xchg
jge
inc
lods
rcl
stc
push
push
push
dec
cmp
mov
pop
scas
test
ficomps
add
stc
shrl
pop
je
jg
mov
mov
mov
xor
lret
dec
push
mov
push
xorb
and
lds
scas
inc
jp
cli
add
cli
xor
clc
jmp
imulb
lea
das
rep
or
mov
xchg
scas
call
push
dec
insl
xchg
mov
lds
repz
decb
or
sbb
cmp
mov
adc
mov
jae
jno
andl
push
fwait
xchg
push
movb
in
add
scas
sub
mov
sbb
jno
or
lds
jl
cmp
iret
aas
sti
aam
pop
mov
mov
pop
inc
in
and
les
icebp
xlat
xor
in
mov
jecxz
testb
push
aas
mov
xchg
subb
dec
test
cmp
pusha
xchg
shl
dec
pop
sarb
adc
aam
in
dec
popf
pusha
outsb
mov
sbb
sbb
inc
fstps
jb
pushf
sbb
or
sub
dec
push
mov
in
dec
in
idivl
inc
in
mov
clc
je
xchg
mov
loope
cmc
leave
subl
lret
cmp
fisttps
adc
and
ret
addr16
lods
inc
mov
ret
push
test
clc
add
jge
push
or
int3
pop
mov
repz
arpl
push
dec
jb
rcll
push
out
jne
ja
pushf
outsb
jne
fisubrl
mov
add
push
les
or
jle
inc
mov
daa
clc
inc
mov
mov
subb
adc
cmpsl
adc
popa
ljmp
mov
scas
inc
and
inc
sub
inc
fiaddl
loopne
adc
popf
pop
xor
hlt
jge
add
pop
jecxz
dec
lods
cwtl
pop
pop
ss
mov
dec
inc
mov
push
adc
in
shlb
movsb
dec
adc
mov
mov
dec
insb
pop
cld
push
push
or
push
iret
pop
add
jp
push
std
or
pop
and
mov
test
lods
fwait
mov
call
repz
cmpsb
adc
fs
movsb
dec
jns
xor
adc
push
mov
inc
dec
inc
mov
xor
xor
mov
jge
push
jnp
scas
into
adc
xorb
scas
mov
and
outsl
mov
int
insl
jnp
push
das
mov
xchg
cmc
mov
fsubr
call
sub
push
bound
lahf
or
dec
adc
jno
sahf
hlt
in
xor
push
xchg
mov
mov
test
rcll
push
inc
push
lods
dec
rolb
dec
mov
xor
push
rclb
xchg
test
sub
adc
xchg
xchg
subb
or
imul
fsubl
or
shll
add
fsub
nop
xchg
dec
add
sar
into
je
ror
ret
pusha
mov
addr16
ja,pt
fs
loope
push
inc
sub
push
mov
stos
mov
and
cltd
mov
pop
inc
mov
xchg
ss
cmpl
xchg
int3
pop
test
fwait
jl
popf
cmp
call
mov
push
push
shrl
pop
repz
pop
jnp
mov
push
lret
movsb
and
push
rcrl
sbbb
ss
xchg
xor
mov
dec
into
dec
neg
aam
sub
cmp
sub
lcall
inc
mov
jbe
jbe
loopne
push
and
add
mov
cmpsb
xor
in
sub
dec
sub
push
repnz
sub
das
loope
jl
int3
sahf
cmc
mov
in
adc
dec
push
adc
sbbl
popa
cmp
jg
mov
jne
pop
rcll
idivl
lock
jae
stc
xchg
out
dec
enter
cmp
stos
int
sub
dec
cmpb
mov
and
pop
xchg
sahf
mov
sarl
add
mov
shrb
add
test
jecxz
mov
in
dec
lods
xor
hlt
jns
arpl
ljmp
mov
mov
rcrl
scas
mov
in
mov
jb
adc
cltd
jnp
arpl
adc
movsl
sbb
push
xor
xchg
idivl
lds
and
or
sahf
movsl
idiv
jge
ja
ljmp
dec
shlb
or
sub
xor
repnz
andl
jmp
sub
push
data16
adc
call
lret
cmp
clc
notl
or
aad
lcall
inc
arpl
mov
lock
std
test
adc
mov
mov
je
enterw
jo
mov
repz
test
add
push
out
cmc
mov
fmuls
fnstenv
std
lock
mulb
mov
loop
jp
lret
pop
mov
cmpsb
fdivs
sub
inc
adcb
mov
cmpsl
daa
movsb
pop
sub
loope
enter
xor
adc
in
imul
mov
or
cli
mov
repnz
inc
pop
lock
repnz
out
push
repnz
and
movsb
cmpsb
dec
sbb
loopne
adc
inc
adc
dec
jl
imul
or
je
cmpsb
pushf
stos
aad
cmp
xchg
inc
xchg
leave
loope
mov
adc
rcll
stos
cltd
repnz
push
lds
sub
jae
mov
enter
addr16
dec
xchg
in
and
outsl
add
cmpsb
insl
mov
subb
std
cmp
sbb
stos
inc
es
sbb
cld
and
pop
out
push
insl
mov
mov
fwait
int
inc
sbb
dec
mov
clc
pop
enter
adc
and
in
fmull
cld
movsb
cld
mov
mov
jmp
lcall
and
filds
mov
sub
mov
dec
adcl
cwtl
jmp
ljmp
push
mov
imul
fisubs
mov
jbe
sub
add
push
rolb
movups
loope
ret
fadds
cmpsl
cmpsl
stos
sub
cmp
push
dec
xor
dec
mov
sbb
int3
inc
cld
mov
je
gs
mov
and
push
fsubrl
out
add
xchg
pop
lods
mov
loope
shll
aaa
mov
lock
adc
leave
or
lret
data16
inc
or
outsl
fidivrl
xor
dec
jmp
mov
leave
mov
ficoms
or
imul
daa
jne
push
xor
xor
mov
xor
movsl
pop
add
mov
push
dec
jg
shlb
push
sub
nop
mov
jbe
cltd
lds
lock
add
cltd
movsb
jne
mov
shlb
mov
mov
loope
cmp
pop
arpl
add
pop
aaa
test
and
pop
pop
xor
test
loope
dec
sbb
mov
mov
xchg
and
mov
inc
cmp
push
cltd
xchg
push
jle
add
or
fildll
std
xor
jo
jp
daa
jb
loop
daa
cmpsl
iret
fs
mov
lods
aaa
addr16
push
int3
sbb
dec
cltd
sbb
test
xchg
mov
adc
loopne
mov
and
fimull
mov
inc
and
or
mov
or
loop
repz
comiss
lret
cmp
add
mov
dec
into
inc
xor
mov
jl
pop
sahf
sub
xor
rolb
aas
jl
data16
fwait
mov
jmp
push
push
mov
in
cmpsb
aam
cld
and
dec
push
sub
adc
int3
lret
mov
in
cmp
cwtl
sbb
xor
jp
push
fnsave
xchg
dec
cld
pusha
mov
sbb
sbb
sbb
add
lock
mov
inc
popf
sub
add
cmp
shrb
dec
xchg
pop
les
xor
shrl
ficoml
rcr
lods
cltd
mul
cmc
xlat
xchg
jnp
sahf
dec
cmc
es
jno
pop
shl
lea
mov
add
xlat
inc
push
adc
popf
cld
mov
jmp
pop
jne
cmpsb
and
mov
lcall
cmp
dec
in
bound
inc
xchg
mov
std
test
lods
std
outsb
sub
imulb
call
or
adc
sub
jo
sbb
sbb
out
test
pusha
negb
int3
nop
in
push
sub
inc
push
adcl
ficoms
lret
adc
lea
inc
shrl
ss
addr16
rolb
push
mov
aas
inc
imul
aam
jnp
mov
add
xor
push
jbe
xor
push
sbb
inc
or
pop
xor
loope
pop
inc
movsl
mov
stos
or
cmp
rcr
push
sti
lret
pop
xor
adc
int3
mov
cmp
in
in
packuswb
xchg
pop
ret
pushf
and
stos
adc
sbb
mov
inc
data16
test
dec
nop
sub
mov
lock
scas
pop
sahf
aas
mov
shr
add
iret
imul
xor
or
aad
in
pusha
pop
or
das
test
movsb
mov
rorl
inc
fstps
push
cmp
push
push
jecxz
mov
inc
inc
std
iret
aam
add
xchg
movsl
or
or
and
imul
pop
mov
sbb
and
scas
call
inc
mov
clc
iret
mov
jns
out
mov
adc
sub
repz
inc
mov
sub
and
or
idivb
je
out
xchg
pop
mov
and
aam
loop
and
inc
outsb
xchg
mov
add
mov
popa
test
mov
cs
cmp
mov
or
jne
inc
lret
cltd
cmp
xor
inc
popa
rcll
ljmp
cmp
mov
aam
and
jb
mov
gs
inc
xor
push
int3
dec
xchg
xor
loop
sbb
sub
ficompl
inc
lahf
aad
or
jnp
int3
sti
add
push
pop
ds
mov
cmpb
sub
sbb
cs
mov
jmp
pop
sub
pop
aad
sbb
lcall
adc
jle
sbb
mov
pop
or
enter
dec
xchg
stc
das
outsl
cmp
mov
test
adcb
push
stc
mov
inc
cli
insl
call
into
or
loopne
or
dec
repz
mov
sub
xchg
add
push
ss
fsts
lret
push
mov
out
jnp
lds
movsb
cld
push
jne
in
popl
lea
adc
xor
pusha
sub
xor
push
push
aam
and
pop
aam
push
mov
mov
mov
xor
pop
lcall
aaa
fsubrs
and
mov
cmp
adc
sti
jmp
scas
mov
stos
mov
stos
loop
add
push
lret
dec
pop
loope
lret
push
adc
dec
xchg
dec
jbe
inc
pusha
mov
pusha
sub
iretw
mov
mov
aam
lds
imul
pop
or
pop
inc
shll
jae
int3
call
xchg
iret
loopne
add
push
or
out
mov
mov
icebp
repnz
dec
xchg
inc
pop
repnz
jno
cltd
adc
popa
cmp
jae
dec
cmc
mov
lret
add
test
inc
mov
mov
ret
into
subl
dec
fsts
rclb
movsl
cmp
ljmp
outsb
sbb
push
icebp
or
orl
lds
mov
jnp
jecxz
loopne
cltd
mov
adc
dec
mov
fisubrl
lret
and
adc
adc
sbbb
push
xchg
xchg
stos
sbb
fildl
faddp
cwtl
sub
sub
fs
pop
test
or
ficompl
cmp
daa
and
xor
push
push
outsb
cmp
pop
pop
sub
inc
mulb
push
repnz
jmp
jmp
das
icebp
sbb
sub
lods
rep
pop
inc
ds
cmpsl
stos
leave
add
dec
jnp
and
aaa
sbb
es
cmp
jo
lret
sbb
mov
push
repnz
xchg
test
sbbl
dec
pop
faddl
xchg
std
mov
push
dec
xor
ror
std
mov
sub
das
call
call
test
sbbl
mov
out
adc
jns
pop
jecxz
push
repnz
stos
ja
mov
sahf
and
fimuls
in
mov
push
popf
cmp
leave
sub
outsl
andl
gs
or
adc
or
lret
and
xchg
cmpsl
imul
movsl
cli
push
push
rcr
push
cmp
std
inc
fst
sub
sar
lods
mov
imul
sarb
pop
dec
loop
dec
sti
cwtl
push
out
and
cmp
mov
imulb
test
adc
xor
movsl
arpl
loop
mov
orl
xlat
sbb
ja
dec
jle
les
adc
mov
cmp
clc
mov
fisubrs
sub
cmp
adc
and
test
fldl
mov
das
mov
fcmovb
xchg
and
mov
sub
sub
testl
pop
mov
xor
jp
push
xlat
pop
inc
xor
cmc
jl
jmp
mov
mov
mov
rcrl
cmp
sub
add
pop
iret
dec
dec
mov
arpl
sbb
mov
mov
push
and
mov
mov
lcall
lret
mov
fs
aam
lods
lahf
aad
icebp
shll
mov
pop
push
das
inc
sbb
mov
cmpsb
lahf
sub
inc
mov
insl
adcb
call
scas
and
fiadds
pop
outsb
and
popl
pop
pop
jp
xchg
jo
cltd
shrl
outsb
daa
cmp
stos
lret
mul
ss
pop
inc
jge
add
sbb
inc
inc
notb
push
inc
mov
xchg
test
jns
mov
push
mov
cltd
push
mov
adc
rorl
adc
jns
dec
mov
jle
sub
das
inc
sti
aas
pop
aam
ss
aam
and
lods
loopne
cld
movsb
lcall
xchg
sbb
xchg
out
jecxz
into
jb
movsl
push
push
mov
leave
push
sbb
nop
fsub
mov
frstor
mov
pop
adc
xchg
sbb
sub
mov
ja
rorl
insl
mov
pop
xor
pop
pusha
sub
enter
push
fcoms
and
dec
mov
rdtsc
mov
xchg
lock
inc
ljmp
mov
ljmp
mov
leave
push
int3
and
das
push
lahf
rolb
mov
arpl
xlat
xor
or
push
jb
and
cs
icebp
fdivrs
testl
aaa
mov
jo
repz
adc
mov
lods
jg
aaa
clc
in
sahf
in
dec
lret
inc
clc
sbb
jbe
cmp
pop
push
and
pop
out
add
dec
adcb
sbb
mov
jp
cltd
sub
mov
xchg
std
je
push
into
and
xchg
jns
jp
pop
sti
mov
push
cmp
cs
sbb
lods
and
out
cmc
cwtl
pop
or
mov
pop
repz
jns
push
pusha
xchg
jae
pop
shrb
fsubrl
adc
or
je
xchg
adc
add
xchg
mov
mov
or
orb
push
aad
vunpcklpd
aad
cld
xchg
fcmovnbe
mov
jl
jne
inc
pop
loopne
movsb
add
sbb
and
lahf
sub
inc
subb
or
fnsave
mov
sub
inc
dec
adc
addr16
ret
loope
out
popa
cli
out
pop
mov
out
gs
push
jl
fisubrs
sbb
ret
mov
icebp
shlb
aam
adc
stc
int3
and
add
lock
mov
pop
cwtl
mov
and
in
pop
jge
pusha
push
lods
out
filds
sti
or
cmp
inc
jl
lret
in
pop
mov
xlat
or
inc
sbb
test
adc
push
mov
pop
lods
test
repz
cmpsl
les
ja
jecxz
pop
shlb
xorb
mov
mov
push
outsl
fs
cmpsb
mov
inc
testb
sbb
mov
aad
add
adc
aad
jmp
add
insl
out
dec
es
aam
outsb
sub
scas
and
shl
jae
lret
addl
leave
scas
fcomps
cli
and
je
aas
pop
mov
sbb
js
push
mov
xorb
push
loopne
mov
jne
lahf
test
hlt
cmp
mov
jge
mov
ja
loope
shrb
cmp
cmpsl
cmc
test
lret
inc
in
sbb
test
bound
lods
cmpsl
sub
mov
adc
das
mov
orb
pop
imul
inc
push
in
rcrl
lods
cmp
fidivl
add
push
push
xor
movsb
test
pop
js
into
xor
decl
cmp
mov
mov
sbb
fwait
xor
insl
movsl
adcb
push
push
loop
and
lahf
xor
mov
repnz
sbb
jl
cmpsb
xchg
fiadds
sub
mov
add
jae
daa
cmpsl
aad
aaa
fwait
cmp
inc
neg
mov
jecxz
sub
sbb
push
jne
ja
xor
repz
xor
dec
scas
dec
out
xlat
mov
add
dec
xchg
ljmp
adc
mov
sbb
andl
stos
ficoml
sbb
cwtl
push
test
push
loop
test
xchg
jo
arpl
into
cmp
sbb
movups
movsl
sub
xchg
pop
dec
ret
enter
in
mov
sub
sbb
push
adc
stos
fdivl
scas
sti
aam
popa
mov
or
sub
imul
loopne
int3
movsl
inc
add
xor
xor
push
lret
orb
jne
inc
mov
adcl
adc
outsb
repnz
test
jecxz
ret
and
mov
mov
fidivs
ljmp
cwtl
xchg
push
repz
repnz
fsts
outsb
add
mov
js
sbb
mov
xlat
push
popa
sti
sbb
and
js
jg
aam
scas
pop
xor
ds
adc
xchg
or
xchg
icebp
mov
daa
test
sbb
aas
aad
ret
sub
push
lret
sbb
mov
dec
xorl
xchg
scas
push
adc
xchg
fistpl
add
sbb
mov
or
dec
ret
push
inc
push
adc
inc
in
xor
test
xlat
aam
dec
jmp
fwait
lcall
and
shr
mov
jmp
mov
fsubrs
add
hlt
mov
pop
mov
jmp
cmpsl
mov
scas
hlt
jp
dec
jae
hlt
push
sub
fwait
stos
mov
orb
inc
lock
mov
add
dec
push
and
mov
lods
bound
outsl
imul
test
leave
push
stc
arpl
loop
cmp
or
mov
xor
push
xchg
dec
push
inc
dec
mov
aas
fists
xorl
mov
loope
dec
xor
inc
outsl
inc
nop
xor
lahf
stos
in
xchg
jns
incl
sub
dec
fmull
loope
lods
or
popf
je
and
lea
sbb
jno
mov
inc
stos
sbb
sub
cmp
adc
stc
scas
pop
mov
lret
shll
adc
pop
xor
xor
jl
cmpsl
mov
push
pushf
jae
mov
inc
in
out
int3
pop
jp
xchg
pop
dec
mov
ljmp
dec
push
and
adc
rorl
cwtl
inc
mov
fistpl
xchg
add
in
xchg
rorl
dec
arpl
dec
mov
sbb
mov
adc
jmp
divl
inc
repz
xor
out
repnz
lea
js
xor
rcl
lock
fstps
sbb
mov
mov
lcall
bound
mov
cmp
dec
inc
push
call
sbb
sbb
sbb
sub
movsb
mov
leave
inc
xorl
data16
dec
cmp
gs
imul
mov
jle
sarl
xchg
sub
lret
shll
inc
es
rcrb
add
mov
repz
push
out
int
lcall
pop
lea
popa
outsb
std
out
in
into
inc
lcall
cwtl
insl
mov
fucom
dec
push
pop
pushf
int3
int3
xchg
sub
ljmp
sub
dec
pop
or
add
lods
shlb
xor
cmp
stos
cli
int3
and
mov
xor
fsubp
lock
pushf
sahf
fs
test
jne
or
lods
xor
adc
stos
xchg
mov
test
xchg
ds
pop
clc
xor
data16
ret
shll
mov
mov
repnz
mov
vpsubusb
cmp
negb
call
pcmpgtd
pop
cmp
repz
xor
push
dec
push
mov
mov
dec
add
int3
inc
or
sbb
sbb
xchg
aas
mov
sbb
mov
push
or
je
push
xor
add
movsb
repnz
sbb
and
mov
push
push
cli
pop
adc
jne
push
out
xchg
sbb
out
test
mov
xlat
addb
xor
push
xchg
ret
imull
ret
mov
arpl
rcrl
test
lcall
int3
or
pop
sbb
fst
jne
xor
sbb
mov
or
mov
gs
pop
dec
pop
sbb
das
xchg
jecxz
inc
loop
adc
push
nop
sub
daa
pop
test
adc
jmp
cmp
add
ret
mov
dec
cmpsl
popa
inc
push
jge
pushf
push
jne
inc
shll
adc
dec
pop
cli
pop
fildl
ret
scas
jl
sbb
mov
jno
lcall
dec
call
loop
push
add
add
repz
jp
clc
push
cli
mov
pop
ret
xchg
mov
dec
call
xchg
and
or
xchg
dec
mov
push
sub
xchg
loopne
inc
cmp
xor
sub
jbe
cmp
repnz
jg
cltd
fisubs
push
jne
and
js
lods
jl
push
out
int3
lret
rcrl
push
adc
xor
es
test
mov
outsl
call
iret
ss
enter
jae
cmp
cli
fwait
push
push
sub
inc
pop
lds
dec
xor
sbb
imul
or
popf
mov
mov
or
xor
inc
shrl
jg
rol
out
rcl
add
and
icebp
jbe
leave
jns
push
stos
sti
mov
cmp
outsl
lret
fmul
add
pop
push
mov
fdivrs
jecxz
sbb
cmp
test
int
sbb
movsl
xor
mov
mov
and
mov
mull
sbb
push
cwtl
pop
dec
xchg
lcall
xor
imul
decl
pop
pop
add
fdivl
push
shll
jle
or
in
aaa
push
rcrb
scas
or
push
dec
cs
jge
fsubrl
inc
aaa
cmp
sub
jl
aaa
xchg
call
and
ds
mov
xor
movsl
dec
lods
rorb
add
cmp
xlat
rclb
rcrl
cmp
sub
dec
pop
pop
xor
mov
xchg
adc
inc
aas
out
rorl
movsb
sbb
loopne
aad
clc
daa
js
jg
inc
mov
mov
faddp
out
popf
pop
in
addr16
sbb
repz
cmpsb
lods
iret
dec
xchg
in
push
lcall
jne
fidivs
out
xor
push
movsb
push
fstpt
jae
add
push
lahf
xchg
mov
pop
orb
jnp
out
aas
int
adcb
push
loope
sbb
imul
cwtl
in
cld
leave
sbb
hlt
cmp
das
and
out
xchg
das
loop
sahf
insl
fcmovnu
mov
mov
sbb
pop
aad
or
sub
mov
sti
je
in
sub
pop
leave
and
inc
shrl
sti
repnz
out
cmp
add
les
aad
hlt
inc
das
lret
roll
adc
xor
cmp
sbb
pshufw
xor
jo
es
in
inc
sbbl
cmpsl
mov
fdivl
out
pop
and
cs
popf
lahf
inc
lcall
hlt
xorl
sub
cmpl
jmp
add
popa
jecxz
cltd
cs
jbe
mov
mov
cli
xchg
sub
into
xchg
sti
add
jno
sub
lahf
call
cld
ss
sarl
and
push
movl
mov
sub
orw
and
insb
jg
cmp
mov
cld
and
push
add
sbb
and
mov
sbb
xchg
and
rcrl
ja
cmpb
loopne
adc
lods
push
dec
sbb
enter
pop
popa
notl
pop
cmp
aad
pop
jb
movsb
les
aaa
js
jae,pt
jno
fs
addr16
xchg
sub
mov
test
or
subb
or
movsb
cld
test
rcr
test
call
jbe
mov
scas
popa
int3
mov
push
lret
loopne
mov
test
cmp
icebp
pop
bound
sarb
inc
dec
in
pop
and
in
fwait
sbb
not
and
cmp
mov
jge
sbb
mov
mov
push
rcrl
jge
out
lock
int3
repz
cld
movsb
mov
mov
xor
dec
aas
pushf
ret
add
lods
rcrl
mov
out
inc
mov
add
test
ds
test
lds
adc
dec
mov
test
xor
push
pop
cmpsb
xor
mov
aaa
fisttpll
jne
js
sarl
sbb
cmp
dec
daa
test
sbb
push
pop
ficompl
pop
jns
cwtl
aas
mov
fsubrs
mov
jnp
in
fwait
das
aad
xor
scas
add
das
xchg
lcall
std
lea
jmp
mov
fistl
adc
paddusb
mov
lds
sbbl
sti
mov
push
xor
mov
cltd
add
fisttpl
push
jb
mov
cmp
jne
and
dec
or
cwtl
dec
mov
inc
stos
cwtl
test
out
test
xchg
repnz
pop
xor
pop
pusha
mov
mov
subb
inc
pop
jo
xchg
das
aas
push
rorl
popf
jns
sti
xlat
mov
inc
adc
sub
daa
popf
roll
ret
sahf
xchg
sbb
outsl
mov
cmp
jbe
mov
lcall
arpl
rcrl
movb
imul
in
and
insb
and
aaa
sbb
xchg
enter
mov
add
push
gs
idivb
in
cmpsl
mov
mov
cmp
clc
sbb
test
sbb
jmp
adcb
je
nop
xchg
popa
push
ljmp
and
pop
aad
inc
xor
cld
shlb
cmp
in
cmp
push
push
das
mov
leave
shlb
mov
inc
adcb
mov
inc
aaa
ds
push
jbe
rcrl
imul
loope
scas
push
insb
add
push
pop
data16
pop
cmpsb
stc
test
mov
ret
cwtl
add
aas
dec
mov
mov
jo
inc
pushw
out
ss
imul
push
xchg
repz
insl
out
push
test
mov
lahf
nop
xchg
repnz
add
sub
sahf
xor
add
pop
mov
inc
or
insb
ret
dec
and
pushf
mov
sub
push
js
jb
test
or
mov
pop
stos
xor
dec
ja
mov
pop
xor
pop
fldl
and
mov
adc
jne
icebp
cli
jns
daa
add
sbb
test
and
scas
cmp
lahf
cmpsb
fcompl
and
dec
hlt
mov
sub
nop
push
push
das
add
inc
dec
fistpll
into
loopew
mov
pop
fwait
and
mov
imul
daa
adc
imul
ss
pop
jg
ret
popa
add
sbb
in
js
jge
sub
dec
ror
clc
in
mov
loope
sbb
and
mov
loop
sbb
icebp
sti
push
xor
push
or
sarl
ret
xor
or
stos
sub
repz
js
mov
push
and
mov
add
cs
jg
jge
inc
jno
and
aas
andb
popa
mov
adc
dec
mov
scas
xchg
call
cli
sbbb
pop
pop
pop
scas
pop
loopne
xchg
les
cmp
mov
jnp
movsl
cmp
mov
fimuls
add
mov
dec
xor
jge
cld
int3
nop
leave
push
js
dec
shl
mov
dec
add
mov
outsl
inc
test
out
cltd
xor
xor
jmp
nop
stos
push
ficomps
jbe
or
cmp
roll
inc
jg
dec
inc
dec
sbb
je
xchg
jl
jecxz
or
add
aam
aas
ficomps
subl
push
mov
aad
add
mov
addl
enter
mov
fs
xchg
jecxz
in
fcomi
mov
and
mull
mov
and
loop
daa
ret
push
xor
cli
mov
inc
mov
xor
mov
std
aas
push
mov
jo
mov
daa
add
sub
inc
bound
pop
inc
adc
outsb
shlb
repz
mov
inc
cmc
mov
dec
and
mov
fldl
add
xor
and
or
cmp
std
inc
clc
scas
dec
sbb
jmp
pop
pop
or
push
sarl
pop
mov
mov
aas
cmp
cmpsb
jg
jno
pop
ret
and
sub
mov
es
mov
add
jge
dec
cwtl
popf
and
mov
xor
cmpsb
jmp
cmp
inc
cli
add
push
and
and
jb
pop
scas
fildll
mov
rcll
lea
popa
repz
xchg
repnz
ds
jbe
nop
adc
lods
inc
and
rorb
test
das
add
add
ds
lds
ret
inc
test
inc
gs
ret
repnz
fidivrl
jb
fistpll
daa
sar
mov
lea
dec
cmp
cmpsl
rclb
shll
jle
xor
repnz
xchg
jnp
xor
jbe
mov
in
xor
out
inc
inc
and
dec
cs
mov
mov
jg
sub
add
push
pop
cmp
push
sarb
notb
aas
adc
rolb
imul
mov
test
jbe
ret
js
or
mov
add
xchg
fists
pop
loope
scas
xchg
jno
mov
adc
inc
repz
out
fsts
or
jge
and
sbb
frstor
and
andb
loopne
popl
flds
mov
jae
lock
cmp
jge
adc
adc
jp
sub
pop
subb
mov
lret
ss
and
dec
es
push
jne
push
lock
or
divl
cmpsl
popf
js
cltd
rcrl
and
or
cwtl
xor
ljmp
adc
mov
shlb
sbb
and
inc
stos
xor
push
hlt
cmp
les
mov
shl
ret
repz
xchg
es
mov
vpaddw
mov
incl
lcall
loop
aaa
dec
iret
or
jo
ss
dec
pushf
mov
xor
push
aaa
cltd
push
inc
mov
mov
bound
frstor
cmp
js
or
cmp
push
insl
xlat
jl
sub
aam
sub
xchg
xor
xchg
push
popf
inc
sbb
xchg
in
push
mov
and
fsubr
dec
push
dec
mov
push
lods
pop
sahf
cld
insl
shlb
testb
mov
es
adc
cmpsl
stos
pop
stos
or
stc
repnz
mov
int3
adc
push
data16
inc
hlt
jp
cmc
cli
sbb
incl
mov
adc
cmp
and
cltd
aad
loope
ljmp
jg
stos
rcrb
xchg
push
int
xchg
inc
push
mov
ret
ljmp
dec
loope
xor
popf
je
lret
jecxz
sbb
push
sar
es
jnp
or
mov
mov
pmaddwd
and
or
rorl
adc
dec
pop
ret
xchg
sub
mov
out
mov
in
or
popa
push
cmpsl
lds
mov
jo
mov
gs
dec
cli
ds
in
ffree
test
add
test
sbb
xor
sbb
pop
mov
xchg
mov
mov
sub
stos
dec
fs
mov
jge
dec
mov
rcrb
lds
and
in
incl
loop
movsb
lods
imul
jnp
pushf
mov
fndisi(8087
mov
and
sbb
sbb
sbb
xchg
cld
adc
into
and
bound
inc
out
lods
iret
call
enter
or
sets
sub
inc
or
jns
fwait
movsb
popf
std
subl
xor
push
shlb
lret
das
lea
mov
shll
mov
push
cmpb
insl
movsl
aad
shrb
fsubrs
cmp
pop
arpl
dec
iret
inc
in
mov
insl
cmp
iret
mov
fwait
test
mov
jo
push
jge
add
int3
mov
xchg
pop
idivl
xor
adc
fdivrs
cli
add
or
js
inc
mov
sbb
ja
mov
cmp
inc
sti
repz
fldenv
adc
pop
in
inc
pop
push
xchg
out
ret
push
mov
loopne
inc
pusha
call
pop
lea
das
xchg
test
push
stos
jb
rcr
xchg
sub
xchg
movsl
jg
pushf
mov
cli
pushf
fidivl
sbb
jl
dec
push
aaa
pop
inc
jnp
int
pop
sbb
js
jle
lret
out
xor
add
and
arpl
call
hlt
mov
movb
divl
mov
jb
xor
or
outsl
pop
push
adc
pop
outsb
ds
aas
sbb
mov
ljmp
xor
xchg
in
xchg
inc
and
int
mov
aas
mov
js
loop
inc
adc
rorb
pop
enter
add
std
mov
cmpsl
fbstp
or
xchg
mov
mov
ret
in
in
jnp
ljmp
sub
dec
inc
jno
and
setge
xor
and
lods
cmpl
xadd
ljmp
cmp
fsubl
inc
sti
jno
bound
mov
push
add
mov
pushf
xor
mov
dec
les
dec
push
fsubl
jecxz
outsb
faddl
jne
int3
outsb
mov
mov
xorl
xchg
into
pop
and
lahf
add
imul
int
jle
je
scas
lret
jecxz
mov
xchg
nop
ja
adc
or
inc
les
and
sbb
kmovd
adc
lcall
lahf
jne
pop
xchg
jo
mov
iret
inc
sub
and
push
jmp
popf
push
jl
mov
into
cmp
outsb
adc
or
scas
fs
lret
outsl
mov
cmpsb
xor
outsl
neg
lock
hlt
sub
movsb
leave
negl
orl
jno
fistps
inc
lds
add
out
mov
movsl
inc
jmp
and
push
sub
gs
dec
mov
adc
cwtl
pop
and
lahf
dec
testb
mov
ja
inc
cmp
enter
out
mov
pop
sub
ret
hlt
sbb
pop
push
mov
mov
mov
pop
push
push
push
out
cld
nop
push
mov
push
ja
aas
das
jno
push
mov
dec
mov
sub
es
and
addr16
sub
cmp
loope
jp
xchg
iret
mov
orb
fistpll
outsl
les
scas
mov
sahf
dec
sbb
or
cmp
push
pusha
in
mov
jo
mov
stos
or
add
xor
dec
push
in
mov
outsl
mov
movsb
mov
mov
adc
mov
imul
popf
mov
imul
xor
sub
loop
imul
dec
in
xchg
and
dec
push
cmc
add
cmp
push
clc
push
jmp
mov
mov
xchg
das
or
cmpsl
sub
loop
sbb
xchg
scas
popf
daa
iret
cvttps2pi
xchg
out
sub
cmp
test
je
mov
mov
nop
leave
cmp
add
dec
rcll
push
xchg
jp
push
leave
out
or
add
mov
shr
mov
arpl
mov
mov
fildll
inc
test
and
mov
dec
jb
jmp
push
xor
sbb
mov
mov
sub
xchg
fs
xchg
jmp
sbbl
sbb
and
lods
xchg
sbbl
test
cmp
lret
mov
sbb
ficompl
das
es
popf
lds
adc
iret
sti
ret
xorb
xchg
ret
jle
xchg
cmpl
mov
in
outsb
push
lods
lods
out
loop
jl
xchg
cmc
mov
cs
in
lar
jl
mov
sub
outsl
cli
int
add
pushf
xor
dec
dec
xor
mov
out
stos
out
mov
cli
mov
xchg
jmp
arpl
mov
inc
mov
inc
mov
bound
push
pop
in
mov
fisttpl
rolb
popa
mov
mul
imul
gs
outsb
push
sub
cmpsl
mov
adc
cli
mov
sahf
sub
popf
popa
stos
hlt
mov
icebp
ss
push
xor
movsb
jnp
mov
subl
mov
int
int
lcall
mov
les
into
push
out
cmp
fcmovb
sbb
xor
cmp
adc
jne
jae
cmp
cmc
inc
lahf
push
ljmp
loopne
adc
icebp
leave
scas
cmpsl
add
popf
inc
daa
xchg
adc
inc
mov
add
or
inc
mov
or
xchg
and
sbb
icebp
jno
stos
adc
popa
sbb
cmp
push
das
mov
mov
push
lds
cmp
mov
sub
mov
lret
push
xchg
push
sub
movsb
data16
jl
push
push
sub
cmp
cmp
hlt
push
enter
pusha
mov
in
xor
movsb
sahf
in
fistl
adc
les
dec
ret
jge
pushl
dec
pop
dec
mov
push
nop
mov
xchg
std
rolb
cmp
ss
enter
mov
or
test
mov
adc
aad
dec
push
jno
sbb
sub
fdivrs
pop
and
jo
sbb
sti
adcb
lret
adc
and
loopne
sub
mov
xor
dec
lea
clc
aam
sub
jp
arpl
push
popf
and
or
adc
xor
aad
and
xchg
jmp
scas
stos
dec
lea
fadds
inc
dec
mov
out
sahf
pop
daa
sub
lahf
xor
daa
fisubrs
test
leave
pcmpgtd
push
sbb
in
push
push
mov
sbb
mov
jg
add
xor
bound
xor
scas
stc
push
sbb
xor
sub
addr16
mov
je
fidivl
hlt
xor
data16
mov
scas
inc
and
xchg
shlb
or
sub
mov
sti
jo
xor
dec
mov
lods
lds
sbb
inc
lods
xor
sbb
stos
test
jp
imul
mov
rol
push
jne
dec
neg
repnz
sar
jne
jne
or
ret
add
mov
inc
jns
loopne
sbb
daa
ljmp
inc
mov
roll
and
or
repnz
or
jbe
lcall
xchg
arpl
cmpsl
xor
mov
sub
adcb
dec
jmp
inc
jo
scas
xchg
sub
and
lock
test
mov
mov
sbb
xor
or
enter
mov
jmp
jl
scas
push
xchg
pop
enter
scas
mov
jno
js
xchg
push
iret
mov
jne
scas
aas
mov
inc
push
imul
adc
add
xchg
icebp
cli
dec
xor
imul
loopne
cltd
and
xorl
loope
jne
and
int
rcrl
shl
gs
outsl
in
xorb
les
das
sti
pushf
mov
adc
or
test
xchg
je
addb
fwait
pop
shll
faddl
mov
jecxz
mov
mov
push
roll
mov
daa
mov
push
jge
dec
mov
mov
cmpsb
lret
mov
clc
js
adc
dec
jg
test
shlb
loopne
inc
xor
push
test
cmp
push
or
subb
inc
in
adc
push
adcb
adc
sub
insl
aam
int3
je
fwait
dec
mov
inc
clc
push
pop
or
ret
les
int
ficomps
jg
imull
mov
not
lret
mov
mov
or
rolb
xchg
testl
sub
bound
mov
jge
push
xchg
xor
push
les
test
fsubr
loope
das
pop
aam
or
inc
arpl
cmp
pop
inc
nop
cmc
dec
dec
dec
pusha
add
sbb
loopne
dec
inc
mov
sbb
mov
and
and
push
xor
sub
scas
lds
push
push
hlt
loopne
dec
enter
xchg
cmp
jnp
dec
int
aaa
in
fimull
lock
jp
in
adc
or
mov
sbb
inc
pushf
and
cmp
outsb
into
sbbl
jmp
and
movsl
mov
fsubl
insb
fldcw
jnp
stos
pushf
push
and
jne
sbb
mov
pop
jge
jg
and
cmpsb
cmpsl
mov
sbb
xor
daa
repnz
cltd
out
cmp
push
icebp
cld
mov
sbbl
pop
jno
and
pop
cmc
fdivl
fwait
call
cmpsl
xchg
push
push
shl
push
inc
or
mov
mov
adcl
xchg
loope
sbb
bound
cmp
or
xor
mov
add
pusha
out
jae
enter
arpl
push
lods
cwtl
or
add
roll
stos
sbb
outsl
inc
sbb
sub
cmp
fbstp
adc
and
jne
sub
adc
in
mov
fwait
cmp
jbe
dec
sbb
in
xchg
xorl
lret
and
jbe
and
lret
int
xor
mov
out
mov
pop
lock
xchg
orl
stos
push
aam
scas
gs
mov
or
sti
add
scas
mov
fidivl
xchg
hlt
push
inc
push
out
cmp
call
jp
or
fwait
into
fidivl
in
aam
aaa
loopne
sub
sub
pop
mov
in
and
stc
adc
pop
sub
pop
pop
dec
inc
fimull
sub
fsts
out
cmp
mov
dec
out
adc
pushf
lahf
push
add
and
push
xchg
pushf
cmp
arpl
sbb
test
inc
mov
push
shrb
test
mov
or
sbb
adc
mov
enter
cmp
mov
popf
mov
js
cs
les
mov
or
pop
cwtl
outsl
pop
fnstsw
ret
sub
test
push
mov
out
out
pop
into
int
sub
adc
scas
mov
dec
pop
dec
jmp
mov
xorl
push
in
mov
sbb
adcl
pop
inc
and
rcrb
daa
out
jne
jg
sub
in
out
jmp
and
xor
fsub
xchg
ret
mov
jmp
out
sbb
mov
es
cmp
stc
sub
fmuls
in
test
xlat
xchg
scas
daa
and
popf
sbb
cmp
daa
or
hlt
xchg
sub
sub
jle
dec
jg
into
in
cwtl
addb
xchg
fists
enter
mov
gs
out
sysret
sub
ljmp
movsl
mov
cmp
add
fstpt
adc
dec
cwtl
jbe
jne
scas
in
lcall
repz
xchg
mov
xor
stos
xor
nop
fcomps
in
adc
push
inc
xchg
test
adcl
ret
in
loopne
or
or
xchg
pop
ret
dec
inc
pop
out
mov
dec
sub
cwtl
jl
inc
push
hlt
inc
adc
inc
sub
jg
xor
imul
ror
cltd
icebp
jae
inc
setbe
mov
daa
cmpsb
fmull
loopnew
jecxz
icebp
adc
cmc
pop
push
and
shlb
sbb
xorb
sub
mov
adc
xchg
mov
shr
arpl
cmp
fdivrs
aad
jl
xlat
jmp
shr
fstpl
inc
enter
jo
push
cmp
insb
mov
out
in
in
aam
rcr
jbe
mov
aaa
mov
lcall
mov
xchg
xor
push
aam
test
dec
mov
xor
out
adc
pop
es
and
fnstcw
in
mov
lds
jae
sbb
mov
testb
aaa
jmp
xor
pop
je
ds
idivb
mov
imul
xchg
scas
nopl
and
pop
daa
out
adc
inc
xor
lods
sbb
push
aas
outsl
adc
mov
mov
jmp
or
add
das
jb
mov
push
fimuls
sub
adc
push
lcall
mov
mov
lret
sub
jge
stos
mov
dec
inc
aas
sbb
pop
xchg
lcall
push
mov
in
outsl
repz
nop
lcall
jge
sub
rcll
movsl
into
fsts
cltd
adc
push
add
mov
and
outsl
lock
dec
cli
push
lcall
dec
mov
push
xchg
mov
gs
inc
adc
outsb
push
push
xchg
repz
push
mov
jl
push
mov
in
aas
mov
sub
xor
subb
mov
adc
pop
sub
ljmp
loopne
ljmp
rolb
pushf
inc
cmp
sti
and
mov
adc
cmp
outsl
adc
inc
outsb
or
add
push
das
mov
int3
fsub
mov
pop
popf
aas
jo
xor
inc
xor
fwait
dec
scas
mov
stc
mov
fs
cs
push
sbb
bound
cmp
and
and
dec
in
pushf
sub
pop
fsubrs
sub
paddb
push
fsubl
in
push
mov
loopne
adc
jno
push
lret
mov
es
lock
test
pop
xchg
push
pushf
mov
adc
aad
iret
xchg
mov
ret
rcl
sub
clc
sbb
and
push
jp
xor
and
mov
int3
adc
pop
xchg
or
fidivrs
and
fdivl
add
outsl
fcompl
inc
movl
xor
in
jne
mov
repz
add
mov
mov
out
loop
loop
add
mov
test
pop
xor
movsl
rol
sbb
jb
leave
test
gs
imul
inc
in
clc
mov
jo
fnsave
or
adc
cmp
jae
xchg
adc
or
ja
out
sub
daa
inc
lods
mov
mov
in
ss
into
addr16
sbb
adcl
dec
jmp
repnz
sahf
aam
and
sbb
arpl
fdiv
fwait
mov
outsl
and
jb
dec
out
inc
mov
xchg
pop
mov
fidivrl
outsb
cmpsl
or
sub
aas
lods
lods
sbb
xchg
mov
pop
rol
mov
jle
jo
divb
outsb
mov
in
dec
mov
insb
add
into
sbb
xchg
or
and
mov
test
mov
mov
jecxz
fists
outsb
fistpl
movsb
popf
dec
jae
dec
mov
add
int
fldenv
sbb
sbb
repz
or
push
pop
pop
push
cmp
js
fldenv
xchg
jl
int
add
stc
movsb
jb
jl
and
inc
mov
push
pop
js
inc
push
sbb
push
xchg
and
jl
insl
jbe
sub
stc
push
aas
iret
and
mov
cmpl
push
xchg
mov
inc
push
int
dec
addl
cmpsl
adc
sub
push
ja
cmc
lods
and
inc
shrl
int
les
jp
adc
movq
sub
fisubrl
les
jmp
imul
stos
push
add
lods
andb
stos
add
loop
aas
pop
cli
incb
xor
inc
scas
mov
int
xchg
adc
push
cltd
in
sub
test
or
popf
mov
push
loope
mov
testb
and
or
fnsave
sbb
pop
std
jp
fwait
xor
aaa
push
dec
xchg
or
mov
sub
pop
incb
in
lds
xchg
mov
bnd
inc
push
adc
popf
mov
jle
cwtl
jnp
icebp
mov
mov
xchg
cmpsl
data16
jnp
imul
arpl
mov
pop
filds
jno
adc
divb
lock
mov
cmp
inc
or
mov
iret
aad
fidivl
xchg
jle
movsb
dec
ja
push
or
lahf
out
leave
pop
xchg
push
xchg
inc
add
flds
jb
jge
push
sbb
call
lahf
dec
insb
iret
lea
nop
popa
fcomps
int
lret
mov
jbe
add
jge
outsl
mov
loopne
aam
mov
xchg
pop
sbb
mov
inc
ja
xchg
jle
lods
inc
in
jb
cmp
mov
jnp
into
inc
cmpsl
rcrl
fwait
mov
lcall
fwait
cmpsl
inc
mov
sbb
push
xchg
jns
cmp
jae
movsb
cmp
push
movsb
mov
fs
flds
dec
adc
pop
in
das
bound
xor
mov
sub
dec
pop
mov
push
push
call
aas
adc
sub
jg
add
mov
xor
cwtl
ret
insl
icebp
push
xchg
dec
xchg
jle
sbb
xor
ljmp
pop
xor
aas
pop
xchg
std
sbb
mov
jb
mov
lret
sti
mov
divl
aam
fisttps
dec
xchg
dec
hlt
or
ljmp
mov
add
imul
mov
inc
xchg
arpl
movsb
cmp
and
insl
mov
dec
cmp
shr
lods
repz
or
push
fldenv
mov
lcall
jecxz
int
cmp
pop
ljmp
call
pop
push
mov
stos
ljmp
jnp
jecxz
pop
push
les
xlat
pop
push
add
push
sub
fs
cmp
adcl
lahf
cmpps
pusha
dec
mov
and
test
xchg
shlb
iret
fidivrs
movsb
popf
cmp
icebp
lock
dec
dec
sbb
adcb
cwtl
xchg
repnz
pop
cmp
call
test
pop
sahf
or
aaa
xchg
outsb
inc
mov
popa
adc
mov
popa
sbb
cmpsl
inc
in
int3
or
popa
movsl
jmp
mov
pop
sub
push
dec
stos
ret
push
stos
push
and
mov
mov
jp
lds
push
rcrb
xlat
jp
ret
adc
pop
bnd
scas
inc
repnz
push
pop
arpl
mov
adc
hlt
xor
dec
sbb
inc
es
pusha
roll
pop
or
adc
jg
adc
por
adc
and
aaa
and
inc
or
jecxz
xor
xchg
rcl
call
shrb
frstor
dec
mov
mov
imul
mov
in
fwait
xor
out
test
rclb
cltd
sbb
pop
pop
in
dec
inc
popf
sub
add
lcall
and
add
push
pop
inc
jg
inc
cld
cmp
or
andl
inc
enter
mov
in
sub
push
add
xor
mov
xchg
fmulp
cmpsb
mov
das
xorl
sbb
popf
mov
pop
cwtl
inc
out
repnz
rorb
out
mov
repnz
pop
adc
sarb
mov
hlt
mov
daa
fwait
mov
shlb
jmp
aas
xchg
fwait
leave
jae
or
inc
js
xlat
lods
dec
xor
sbb
cmp
call
sub
ds
push
test
montmul
cmpsb
pop
sbb
jl
aas
or
inc
xor
sbb
sub
and
adc
repz
push
testb
dec
les
icebp
popf
outsl
jmp
int3
pusha
loope
cmc
je
ret
jge
in
jnp
cmpsb
fistpl
jmp
sub
out
popa
scas
and
mov
rcl
mov
adcb
stos
jge
xchg
xchg
add
push
pop
adc
fsubl
lahf
idivl
and
scas
mov
pop
sbb
dec
mov
mov
and
adc
insb
push
dec
sbb
pop
mov
repz
insl
repnz
pop
inc
pop
add
push
dec
loope
jne
dec
and
mov
sbb
mov
rcl
in
ret
xor
pusha
mov
test
dec
or
xchg
xchg
rcrb
lret
xchg
push
push
dec
lcall
fnstsw
jne
lret
xchg
shl
inc
aas
int
push
mov
ficoml
jle
sub
outsb
push
lcall
fcoml
lods
adc
inc
mov
dec
and
stc
inc
pop
or
adc
xor
popa
out
cs
ljmp
dec
das
fisubs
push
movsl
xor
push
fs
pop
xchg
sar
fcmovnu
imul
xchg
dec
add
push
push
fists
fsubrl
cmpsl
cmp
rolb
lahf
xchg
lds
pop
adc
push
or
test
jno
or
inc
cmpb
push
push
xchg
outsb
mov
sahf
push
push
jmp
mov
lods
mov
in
out
mov
push
mov
jle
outsl
xor
xchg
mov
pop
sub
test
cmpsl
push
repz
dec
push
sbb
jecxz
movsb
inc
jge
in
adc
cmp
sbb
xor
inc
fstpt
mov
repz
push
pop
mov
and
pop
in
or
sub
stos
in
cmp
fcmovne
sbb
sbb
sbb
aam
lcall
jl
and
xchg
mov
jb
ds
fs
scas
sub
insl
mov
mov
xorl
sub
shr
fwait
dec
fiaddl
fbstp
mov
fistpll
mov
inc
scas
jp
fildl
rcrl
movsb
les
pop
iret
std
cmp
lock
push
sbb
mov
push
xor
stos
mov
arpl
dec
pusha
fstps
fimuls
xor
lock
scas
inc
leave
insb
jmp
loop
pop
push
push
adc
bound
das
sub
mov
mov
pop
fnstsw
mov
shrl
inc
loopne
enter
push
lahf
ljmp
adc
ret
jecxz
mov
movsb
mov
add
sahf
aam
shll
jle
and
test
pop
out
flds
dec
pop
je
push
testl
push
sbb
mov
ljmp
roll
test
lea
test
sub
cmp
lret
mov
inc
sub
sete
lods
in
sbb
cmpsl
shrb
jge
cmp
mov
xor
push
jns
inc
inc
mov
mov
cmpsl
cmpsl
cltd
mov
hlt
roll
sti
scas
mov
add
outsb
jle
stos
or
push
iret
jne
sbb
scas
adc
test
push
into
pushf
lahf
leave
ja
pop
push
ret
ss
loop
push
xchg
out
lock
push
inc
xchg
mov
inc
js
icebp
insb
insb
fcomps
pop
xchg
push
inc
jecxz
push
mov
xlat
push
addr16
rorl
mov
mov
shl
inc
iret
orl
xchg
push
inc
mov
mov
push
test
fwait
ds
jne
mov
lds
scas
call
adcb
mov
hlt
icebp
or
stos
mov
lret
fcomip
add
pop
mov
mov
xchg
push
or
stos
jp
add
aad
sub
rcrb
jp
push
fsubrl
into
addb
cli
jp
push
mov
je
lods
aaa
mulb
lret
jae
adc
cli
fs
inc
pushf
mov
mov
xchg
loop
loop
std
jno
je
add
sahf
push
or
push
pop
outsb
test
aas
jb
stos
aad
mov
lods
pop
sbb
push
adc
stos
shl
ss
rclb
sbb
mov
inc
jle
mov
xor
jae
stos
sub
cmp
cmp
sub
jl
fbstp
push
int
adc
ret
and
or
movsl
add
scas
int3
scas
not
ror
mov
jmp
mov
push
test
pop
xor
xchg
jno
cmp
sub
js
add
adc
int3
pop
shlb
insl
mov
popl
pusha
adc
fisttpll
test
dec
fisubs
mov
stos
or
jge
jne
push
pop
mov
lea
inc
dec
jb
out
or
test
adc
ret
push
movsl
sbb
loope
in
pop
outsl
sahf
stos
imul
push
cwtl
xchg
xor
push
sub
lods
and
and
push
sub
icebp
mov
pop
daa
jb
ret
xchg
mov
iret
insb
loope
push
mov
cwtl
sub
sub
enter
jae
jp
cld
mov
in
push
stos
xor
push
rcr
stc
and
or
push
outsb
inc
inc
loope
ucomiss
into
cwtl
jge
xchg
sahf
jge
outsl
push
cmp
das
jb
jg
xchg
loope
adcb
test
jecxz
sarb
push
jnp
jns
and
fidivl
mov
je
test
flds
out
scas
dec
adc
inc
xchg
incb
fisubs
mov
mov
jecxz
mov
xor
and
add
bound
fisttps
scas
int
xor
add
or
mov
mov
enter
push
and
ret
push
dec
and
out
push
xchg
cmp
fdiv
lods
push
xor
in
out
pop
les
mov
pop
movsb
out
pusha
inc
cmpsb
jg
ret
jb
pop
movsl
cld
or
mov
cwtl
cmpsl
sti
inc
mov
jecxz
scas
adc
or
int3
pop
adcb
mov
loope
mov
xchg
push
hlt
adc
test
test
add
cmc
outsl
das
dec
xchg
les
cs
jo
xor
cmp
inc
xor
es
jle
imul
xchg
daa
pop
jae
sub
repnz
mov
jle
sbb
aas
aaa
jns
dec
mov
rcrb
adc
push
sub
mov
add
ficoms
fbstp
in
scas
test
and
lock
cwtl
pop
mov
inc
loopne
faddl
enter
pop
int3
add
dec
adc
int
mov
into
inc
adc
add
dec
push
inc
jae
sbb
adc
pop
xchg
dec
mov
js
int3
sbb
orb
mov
xor
xor
je
mov
jo
dec
outsl
negl
push
adc
mov
shrb
aam
ljmp
ljmp
push
xchg
imul
and
in
aam
rcrl
dec
fistpl
jns
test
cmc
out
inc
sub
xchg
jb
lret
mov
mov
cld
das
xor
push
lret
mov
push
pop
shlb
mov
sti
ficoms
movsb
test
popf
mov
inc
into
in
testb
hlt
xor
lea
inc
xchg
int3
inc
test
sbb
cmp
decb
sub
ss
mov
sub
push
jns
and
dec
jle
lea
inc
shlb
popa
clc
dec
mov
hlt
jle
jp
sub
ss
ret
sahf
or
fcmovnbe
mov
sub
jge
cmc
outsl
mov
cwtl
negb
dec
out
inc
test
out
call
ljmp
repz
push
jp
sub
adc
dec
dec
loope
xchg
xchg
pop
stos
jnp
and
sbb
jle
pop
inc
pop
cld
sbb
cmp
xchg
scas
dec
dec
iret
lret
adcl
movsl
rclb
add
push
sbb
rcl
popa
in
or
test
ret
or
cld
add
jmp
cmp
sub
out
jp
sub
push
sbb
cld
adc
adc
sub
or
shlb
cmp
fidivl
hlt
fcmove
pop
xor
push
insb
fwait
cli
pop
adc
add
mov
ret
iret
loop
inc
cmpsl
lock
or
jno
outsl
je
adc
xor
push
idivl
jle
xchg
or
dec
sbb
stos
mov
inc
sub
stos
cmp
add
xchg
jnp
daa
repnz
in
or
icebp
shll
add
outsl
cs
sub
scas
out
dec
pusha
and
xchg
push
in
and
push
mov
jp
adc
add
jmp
push
cli
clc
sbb
xchg
aaa
and
xor
add
imul
out
arpl
std
je
pop
addr16
fidivl
cmpl
add
lock
push
sub
lods
sub
xchg
push
xchg
push
fcmovnb
mov
push
shl
adc
mov
sub
rolb
loope
ret
mov
pop
jae
es
stos
stc
adc
popf
cwtl
xchg
sbb
shlb
lock
push
cld
stc
fimuls
and
notl
loop
outsl
or
mov
cmp
leave
test
xchg
pushl
lds
xchg
out
jbe
sbb
and
mov
filds
movsb
and
lds
xor
data16
sbb
xchg
mov
sbb
ja
ds
mov
imulb
add
and
cltd
cld
je
sbb
xor
sbb
clc
mov
cli
add
adc
das
pop
inc
mov
mov
jl
mov
nop
aas
out
lret
cmp
ss
xchg
pop
dec
popf
popf
cmp
push
icebp
fistps
mov
loope
mov
outsl
dec
sbbb
xchg
jne
popa
cmp
das
roll
push
xchg
pusha
adc
sub
sbb
into
bound
push
fldcw
dec
rorb
push
out
cmpsl
sub
mov
leave
xor
ds
cmp
sbb
adc
jle
sbb
inc
iret
dec
inc
push
adc
push
rorb
push
mov
jbe
ret
test
jle
fwait
out
mov
stos
or
cmp
cmp
or
jne
inc
les
pop
das
xor
and
in
ret
popf
inc
or
cmp
and
stc
insb
js
mov
push
push
clc
cmp
pushf
stc
movsl
dec
ret
fisubrs
imul
jle
mov
push
push
adc
lods
or
test
ror
sub
inc
lods
bound
and
sbb
orl
and
in
mov
mov
push
inc
jle
mov
cmp
inc
xor
push
adc
addr16
sbb
add
push
cmpsb
rcrl
sub
add
mov
xor
add
and
imulb
mov
loope
mov
pusha
fisubrs
outsb
dec
fcmovnb
push
fwait
add
arpl
out
test
mov
aad
imul
aas
lods
xor
sbbl
rcrl
mov
cltd
inc
daa
inc
wbinvd
lret
pop
js
lock
add
sub
bound
repz
sbb
mov
mov
mov
sbb
and
sbb
jne
sbb
cwtl
out
jno
add
stos
dec
enter
stos
in
repz
stos
jle
cltd
mov
add
sbb
clc
jb
divb
and
push
push
cmpsb
jae
in
test
adc
mov
dec
movsl
rclb
lds
xchg
xor
mov
stc
xlat
jnp
cmp
xlat
sub
shrb
das
ds
nop
pop
mov
loopne
mov
loop
insb
js
mov
stos
sub
inc
add
lods
dec
aad
imul
rclb
dec
dec
inc
stos
in
dec
cmpb
daa
lret
adc
xor
fwait
popa
out
cmp
and
jne
add
scas
pop
mov
and
imul
inc
inc
mov
imul
jnp
xchg
mov
addr16
or
inc
push
push
cmp
fwait
adc
xlat
rcrb
movsl
pop
dec
andl
adc
pusha
addr16
or
xor
lahf
loop
xor
or
or
or
cmp
test
sub
pop
push
stos
sub
pop
add
and
mov
jae
loopne
adc
ds
ret
lret
in
fisttpll
cmpsb
push
cs
push
rcrl
sbb
insl
stos
outsb
out
push
mov
pop
inc
test
mov
push
or
adc
mov
hlt
cmp
dec
stc
ret
sbb
push
fcoml
paddd
in
xlat
popa
jo
jnp
call
adcl
mov
pop
xchg
test
lds
dec
js
insb
sti
stos
pop
fidivrs
push
add
in
inc
inc
test
sub
pop
arpl
and
nop
xchg
orb
pop
pushf
push
nop
adc
fdecstp
xlat
lcall
das
shl
inc
sbb
testb
ret
outsl
add
sub
ljmp
movsb
test
and
mov
inc
cli
inc
fdivp
xchg
mov
inc
iret
push
mov
aaa
js
jbe
int3
add
mov
jecxz
aaa
xchg
fisttpll
mov
push
daa
sub
mov
ret
hlt
leave
into
ljmp
fmull
fsubl
shll
add
popa
nop
push
out
insl
mov
sbb
fadd
push
push
mov
stos
push
lcall
or
jns
int3
jb
in
xor
movsb
fildll
lahf
out
add
xchg
lret
xchg
popf
xlat
mov
lods
mov
mov
mov
dec
mull
push
leave
sahf
inc
fildl
mov
xor
mov
rol
out
shlb
int
push
stos
lock
clc
lods
inc
cmp
mov
outsl
jae
cmp
scas
pop
xor
pop
mov
xor
sbb
lea
xchg
fadd
mov
jbe
xchg
xchg
mov
dec
hlt
mov
mov
cld
sti
cmp
scas
les
fnstsw
push
fdivs
and
mov
es
dec
push
mov
mov
jnp
mov
jmp
lods
test
pop
inc
jl
xor
jns
jmp
lahf
jnp
test
ja
or
jg
lock
sub
mov
cmpl
cmp
mov
cmp
and
add
push
mov
gs
out
test
xchg
mov
mov
test
add
or
jle
and
dec
nop
dec
cwtl
aaa
xor
jb
cmpsl
mov
sub
push
xchg
fists
out
pop
fwait
test
in
repnz
push
test
pushf
sbb
mov
or
mov
outsb
inc
push
ljmp
ja
inc
int
test
orl
test
test
addl
out
sub
pop
fistl
fsubs
mov
push
cmp
xor
cmp
pusha
or
cli
cmpsl
sub
ljmp
aad
int
icebp
sahf
xorl
xchg
lods
xor
insl
das
push
clc
data16
cmp
rcrb
insl
ds
xchg
dec
popf
fwait
cmp
test
cmpb
or
mov
movsb
cmp
inc
scas
test
dec
push
inc
xchg
mov
rcll
fdivrl
cmp
fdivrp
test
fistpl
adc
into
inc
cmc
fistpl
mov
mov
jmp
mov
mov
test
adc
jns
mov
int
test
shll
adc
cmp
add
cltd
daa
xchg
mov
cmp
mov
mov
mov
lret
lock
fldcw
mov
push
mov
add
xchg
pushf
les
dec
inc
sbb
inc
adc
pop
mov
sub
and
jb
dec
scas
dec
sbb
inc
fadds
insb
push
and
sub
pop
xor
ljmp
xor
pop
lds
jp
mov
push
xor
cmp
cld
mov
fdivr
push
cli
jbe
gs
mov
popf
sbb
and
stc
shl
pop
jbe
fs
aam
bound
xchg
sbb
fsubl
push
jno
or
fimuls
add
adc
jo
test
jb
adc
cmp
leave
lcall
push
int
jo
in
les
or
call
add
mov
mov
cmp
sub
mov
rcrb
inc
or
push
dec
dec
mov
leave
mov
lock
subb
out
decl
out
pop
out
inc
fmull
out
dec
out
dec
jmp
jle
xchg
push
jle
adc
cli
lods
out
xchg
add
mov
inc
adc
inc
pop
sub
iret
jb
mov
mov
pop
cmp
pop
jne
push
xor
cmp
mov
lahf
inc
jns
mov
cmp
inc
cltd
mov
test
shll
insb
and
data16
mov
xchg
lods
jmp
mov
ja
inc
pop
andl
popf
lcall
dec
add
mov
inc
mov
hlt
fdivrs
pop
inc
sbb
mov
fisubl
sarl
hlt
or
cmp
pusha
mov
movsl
int
sub
mov
ret
adc
scas
cmp
in
sub
jle
add
mov
js
xor
and
xchg
mov
push
or
pop
iret
mov
outsl
sbbl
jg
ret
pop
sbb
sub
jle
adc
out
pop
lahf
fs
xor
lret
in
cmp
jmp
push
pushf
cmp
mov
jbe
or
cmc
data16
dec
in
jnp
mov
push
jle
xchg
sbb
loopne
insl
mov
and
outsb
std
mov
mov
lcall
xor
or
loopne
lock
xchg
cmp
push
aas
mov
mov
cs
sbb
and
out
mov
rcrl
iret
mov
jae
and
dec
sbb
or
mov
stos
inc
sarl
mov
push
sti
lret
add
ror
sbb
and
movsb
inc
sbb
sbb
add
push
pop
cmpb
mov
popf
sahf
mov
jno
idivl
mov
mov
aad
movsl
aad
mov
push
fs
sbb
mov
ja
jns
jecxz
push
dec
mulps
add
add
repnz
jae
sar
jmp
in
pop
sub
or
mov
test
lds
inc
dec
ss
stos
jb
pusha
negb
cmc
dec
mov
stos
xor
test
lock
loopne
cmp
xor
adc
inc
add
xchg
push
xor
inc
push
mov
xchg
inc
jecxz
push
push
pop
sub
ret
hlt
xor
sbb
fldcw
pop
sub
xor
sarl
test
mov
bound
in
ds
daa
test
stos
sub
pusha
mov
pop
mov
ljmp
push
out
jnp
and
enter
xor
clc
test
ffreep
test
xchg
iret
cmp
dec
insb
lds
xor
test
gs
imul
addr16
sbb
jbe
dec
push
add
push
lret
add
insb
stos
jo
and
sub
stos
pop
mov
loop
pop
int3
cmp
fistpl
push
mov
push
jmp
test
push
shl
scas
xor
sahf
aas
mov
inc
pusha
pop
lods
jge
add
dec
lock
data16
pop
in
es
xchg
int3
and
sar
mov
jae
in
lcall
or
sbb
pushf
ror
jge
xchg
push
call
sub
les
xor
dec
rcl
jmp
fildl
and
and
xchg
or
or
xor
mov
pop
sub
add
push
fisubs
jecxz
sbb
call
loope
cmp
aam
test
inc
mov
sub
ljmp
lock
fmuls
add
sbb
push
adc
mov
sbb
loope
in
notl
pop
jl
inc
pop
sub
adc
pop
push
pushf
sub
sub
mov
sub
nop
insl
loop
data16
mov
pop
ret
cmp
lds
xchg
dec
clc
cmp
popf
movsl
int
push
loope
push
fidivrl
push
inc
mov
mov
pop
into
imul
fwait
xor
and
cmp
repnz
lods
lds
sbbb
les
lret
jmp
xchg
dec
inc
mov
mov
inc
aaa
mov
jnp
sbb
lret
jnp
stc
xor
cltd
pop
mov
sub
sbb
xor
inc
push
mov
sub
cmp
rorl
andl
shl
push
sub
xor
cmc
lods
mov
repz
ljmp
inc
adc
sbb
int3
jecxz
pop
in
fsubrp
sub
mov
sbb
jle
mov
jb
jecxz
in
push
mov
in
in
lds
scas
addr16
xor
jl
mov
mov
and
cmc
popa
cmp
cmc
insl
push
sarb
pushf
test
and
mov
pop
xchg
loop
insb
inc
push
xlat
call
cmpsb
mov
sarb
jecxz
adc
ja
push
pop
enter
xchg
cld
pusha
pop
idivb
ljmp
enter
lret
adc
aad
add
mov
pop
dec
shll
and
xchg
cmc
push
jno
add
addr16
xchg
cs
inc
inc
pushf
test
cs
mov
and
rolb
pop
mov
call
arpl
mov
aaa
push
jo
fnstenv
and
in
xchg
popf
push
fstp
aas
and
sbb
cmpsl
fs
jl
aaa
dec
xor
adc
leave
adc
sti
dec
jbe
fs
dec
push
add
or
int3
inc
push
and
inc
fcomip
iret
jp
test
inc
fcmovnu
adc
and
mov
push
xchg
xor
scas
xchg
xor
push
out
inc
test
and
ds
dec
and
pop
pop
popf
mov
jmp
dec
gs
rcr
test
aas
pop
mov
jbe
hlt
popf
cmp
adc
ds
or
es
jae
xchg
jo
or
xchg
hlt
out
mov
lds
rcll
test
push
or
pop
pusha
int
pusha
jg
roll
pop
hlt
in
dec
pop
ret
xlat
push
scas
test
add
add
jle
push
aas
lods
pop
leave
int3
mov
jb
ss
mov
cmp
jno
mov
es
gs
gs
jae
je
adc
lret
dec
out
dec
pop
adc
inc
shl
outsl
fldt
cwtl
xchg
mov
push
add
mov
mov
rorb
popa
in
mov
push
push
pop
xor
mov
or
mov
cmp
mov
inc
sub
aam
lea
call
pop
rcrb
push
push
dec
xor
mov
repnz
repz
push
fs
lcall
mov
sub
jl
loopne
cwtl
xor
mov
insb
or
jle
mov
cmp
xorb
shr
in
mov
test
daa
add
sbb
movsb
dec
pop
cmovo
pop
stc
push
ja
cmpsl
lods
inc
sub
xor
arpl
out
mov
div
add
mov
inc
div
sub
mov
xchg
ljmp
in
sbbb
sti
outsb
mov
sarl
pop
les
cmp
mov
push
aas
fsubl
jmp
in
xlat
cmp
clc
and
aad
mov
cmp
push
loop
inc
mov
mov
in
mov
adcl
pop
shrl
push
cwtl
lock
ficompl
gs
lods
sbb
lods
and
in
loopne
inc
sbb
test
stc
cmp
mov
mov
cmp
mov
sub
or
aad
jbe
fmull
jp
out
add
or
pop
decl
xchg
jl
inc
jp
adc
jp
xor
sbb
push
or
push
les
xchg
cmp
jnp
jae
mov
movsl
or
cmp
arpl
mov
popa
cmp
mov
pop
pop
lock
and
decb
xor
in
cwtl
push
mov
inc
xchg
testl
cmc
out
stos
std
pusha
ljmp
test
dec
das
ficoms
les
pop
pop
jp
mov
adc
rclw
add
jecxz
icebp
es
inc
mov
cmpsb
arpl
jecxz
outsl
cltd
push
or
xchg
out
or
fisubrl
xor
push
mov
push
pop
dec
sahf
cmpsb
xchg
xor
mov
sub
in
daa
inc
inc
nop
call
shll
push
gs
cmc
arpl
lret
fsubs
push
loopne
jmp
jmp
mov
ret
xor
mov
or
push
push
lods
dec
push
out
cmpsb
cli
sub
mov
jno
push
xchg
jecxz
pusha
fstpt
or
inc
mov
testb
js
std
popf
int
and
mov
cltd
fildll
pop
adc
pop
inc
cwtl
shrb
sbb
es
jle
fnstenv
jbe
jo
add
xchg
jge
loop
fildll
mov
jl
sahf
dec
push
or
push
fwait
mov
dec
popa
ja
lret
je
and
bound
and
repz
jg
cltd
or
pop
cli
js
daa
pop
rcrl
rolb
or
stc
inc
mov
stos
sub
movsb
mov
push
cmpsl
hlt
pop
push
pop
xor
mov
adc
ret
inc
xor
sbb
sub
lea
jle
cmp
or
iret
and
mull
mov
notb
inc
cli
inc
jle
jp
fidivrs
insb
jbe,pt
pop
push
xor
or
out
sarl
adc
sub
insl
inc
pop
imul
clc
std
push
cmp
lods
lods
push
jp
push
mull
pop
call
pop
and
sbb
pop
ss
inc
rorb
nop
mov
push
mov
inc
out
dec
sub
sub
inc
xorl
enter
fwait
jae
ss
or
movsb
adc
push
jecxz
lret
push
adc
loope
pop
jmp
and
idiv
mov
in
dec
shrl
mov
mov
movsb
inc
pop
popa
inc
shll
pop
std
sbb
pop
xor
loopne
leave
mov
cli
mov
and
inc
ds
push
js
fadds
mov
jbe
jo
mov
aaa
test
jp
jne
xchg
xor
xor
jp
mov
jl
push
cwtl
mov
cmp
shl
sbbl
outsb
dec
into
mov
push
xor
mov
rclb
push
mov
jg
sahf
jmp
adc
or
test
in
fadds
ret
and
push
fdivrp
push
xchg
jns
jg
jne
jns
jns
fwait
xor
sub
ret
cmp
mov
and
incl
aad
mov
jl
lock
andb
add
sbb
push
addb
add
push
icebp
mov
xor
dec
cld
stos
xor
add
fmull
pop
pusha
push
fsub
pushf
pop
xlat
mov
shrb
scas
int
pop
cmp
xchg
adc
mov
mov
add
repz
xor
cmpsl
pushf
in
push
movsl
add
cmp
or
inc
jns
mov
jg
shll
cmp
xchg
xor
jmp
dec
scas
mov
repnz
sbb
sbb
fdivrl
or
cmp
movsl
pop
xor
in
mov
mov
repz
sub
pop
adc
call
jle
mov
and
jmp
in
in
add
pop
jno
mov
mov
xor
addr16
mov
hlt
test
popl
inc
jae
cs
nop
mov
std
scas
or
popa
mov
lds
inc
int3
ret
fimull
bound
push
pop
dec
inc
push
mov
mov
mov
aaa
add
out
push
aam
mov
dec
arpl
pop
je
repnz
inc
out
push
or
jmp
leave
and
jg
sarl
das
ds
xorl
int
xor
cltd
notb
push
xchg
subb
enter
push
push
repz
iret
shlb
insl
dec
jno
xlat
adc
incl
insl
imul
mov
sbb
aaa
xchg
jo
hlt
int3
jg
cmp
mov
xchg
sbb
test
movl
push
popa
adc
mov
popf
fs
fildl
xor
adc
lods
jmp
ret
sub
cmp
dec
mov
rclb
pop
mov
cmp
sarl
cmc
shll
cli
ret
cwtl
fcomps
std
insb
fucomp
or
jecxz
lret
and
xor
xor
push
cmp
jae
inc
adc
dec
arpl
cmp
cmp
cld
movd
addr16
jo
xchg
cmp
jno
in
and
pop
mov
dec
pop
or
mov
push
arpl
jle
cltd
dec
roll
mov
bound
or
mov
dec
jnp
fwait
mov
push
movsl
shl
jmp
cmp
push
movsl
repz
or
setae
jo
outsl
mov
inc
dec
mov
mov
mov
andl
pop
popa
hlt
adc
cwtl
push
scas
or
cmpsb
xchg
lock
or
imul
and
mov
push
or
pop
mov
xchg
ljmp
je
sbb
inc
ret
aas
stos
dec
jg
cltd
cmc
dec
cmp
sahf
or
out
loope
data16
loop
sbb
fcmove
test
in
xor
aam
or
or
sub
loop
in
mov
mov
mov
test
inc
and
pop
hlt
jmp
mov
adc
je
lret
inc
outsb
mov
jnp
mov
mov
shr
cmp
inc
loope
or
adcb
and
mov
lods
shlb
ror
push
pop
mov
inc
lds
inc
out
dec
repz
sbb
outsl
add
imul
ror
inc
jb
xlat
cmp
sahf
push
push
ja
lret
test
sti
mov
setle
les
outsb
fsubl
js
cmp
out
xor
sub
jp
add
fnsetpm(287
push
push
sbb
cmc
jg
fldt
aam
jo
lea
push
loop
cmp
sub
decl
inc
sbb
out
pushf
adc
mov
xchg
xor
push
pop
jmp
std
cmpsb
jo
scas
movsl
mov
sbb
adcb
cmp
mov
mov
testl
imul
in
lret
js
pop
xchg
fimull
adc
jp
fnstcw
movb
cmc
iret
dec
jp
xor
xor
rcll
xor
cmp
decl
nop
outsb
inc
call
roll
addr16
stc
mov
push
inc
in
cmp
mov
in
aad
sahf
push
mov
pop
add
lcall
ss
enter
dec
les
enter
jnp
pop
std
jl
cmc
adc
imul
or
push
push
inc
add
loope
outsl
and
xchg
les
std
test
hlt
ret
sbb
imul
or
fmuls
les
sbb
inc
mov
movsl
out
xor
cs
call
sbb
repnz
xchg
aaa
sbb
pop
sub
xchg
or
fildll
enter
inc
loopne
and
sti
rcl
jmp
push
xor
sbb
incl
and
mov
xlat
jp
sahf
inc
hlt
xchg
cmp
dec
arpl
push
add
xchg
imul
xchg
jg
jne
sbb
pop
sahf
daa
jge
lods
cmp
stos
push
inc
cmp
lsl
inc
jle
inc
outsl
push
dec
adc
les
aas
lods
mov
sar
ja
pop
test
and
mov
pop
jge
in
rorb
rorl
imul
add
cmp
fnstsw
gs
xchg
xor
enter
leave
push
dec
pop
rcl
int
or
mov
sub
sbb
addr16
inc
sti
mul
push
mov
lea
pushf
mov
outsl
push
jp
imul
cmp
cmpsl
pop
dec
dec
adc
ret
sarb
ret
in
inc
mov
inc
dec
jb
inc
pop
aaa
sbb
loop
push
adc
add
fiaddl
add
iret
out
push
fisubs
icebp
popa
adc
loope
pop
in
xchg
jmp
enter
outsb
mov
ret
mov
lcall
in
or
into
loope
rcl
sub
fcomp
sti
pop
xor
xchg
adc
fwait
mov
mov
repz
mov
cmpsl
ljmp
and
mov
or
mov
adcl
pop
cmp
mov
cmp
mov
add
cmpsb
fists
jns
in
xchg
add
sbb
ja
sarb
xchg
xchg
jbe
xor
sub
cmc
xor
or
stc
insb
rcll
lcall
aas
lahf
mov
jle
mov
dec
in
aas
mov
xlat
jmp
jle
mov
jl
ficoms
jle
gs
popf
lcall
stos
gs
data16
xchg
daa
cmp
lret
pushf
sbb
daa
sbb
xchg
cmp
dec
sbb
jmp
std
add
imul
mov
repnz
inc
jle
out
test
cmpsl
sbbl
inc
xchg
es
xor
sbb
mov
jo
addl
adc
adc
mov
movsl
xor
test
gs
or
sbb
shrb
mov
pop
adc
mulb
sbb
push
cmc
xor
ret
in
fstl
pop
stos
in
sbb
and
mov
xchg
rorl
cmpsl
loopne
and
lahf
sarb
dec
rol
adc
fistl
mov
std
pop
sbb
mov
pusha
push
fidivrs
shll
push
push
inc
rcrl
lcall
xchg
bswap
xor
jg
loop
jg
outsl
shr
loop
jae
sub
mov
fstl
inc
adc
in
xorb
inc
subb
ja
cmc
scas
mov
push
out
js
jns
or
aam
ret
xchg
pop
fs
jp
cmpsb
ja
push
push
push
insl
test
inc
add
mov
pop
cli
mov
xchg
sub
jp
jle
mov
out
sub
cmpsl
je
roll
test
xor
or
jne
mov
inc
or
stc
add
rolb
cmp
shl
les
sub
mov
in
lcall
push
jge
cld
ds
in
pop
push
lret
jae
sbb
push
nop
test
sbb
sti
mov
adc
sbb
push
mov
or
daa
sub
inc
sahf
ret
nop
xor
mov
out
and
fwait
mov
jge
fmull
or
rcrl
imul
data16
int
inc
sbb
nop
xor
js
inc
repnz
int
xchg
dec
sbb
xlat
movsl
fstp
into
fmull
push
mov
insl
sub
ds
push
sub
in
fmul
lcall
notl
cmp
ja
ja
lcall
dec
push
mov
dec
mov
xor
and
insl
lods
sahf
call
aad
test
and
scas
les
mov
xchg
in
cmp
loopne
jo
test
popa
dec
pop
ffreep
mov
lret
outsb
stos
add
mov
aad
xchg
call
dec
and
add
push
daa
cld
fsubs
lcall
or
ds
sub
jbe
push
xchg
xor
test
insl
jae
dec
pop
inc
push
jb
mov
adc
cmpsb
out
xlat
jns
and
cmc
xchg
out
inc
or
or
movsl
and
loopne
popa
xchg
cmp
mov
or
xor
hlt
push
xchg
mov
icebp
mov
cmp
sbb
popa
pop
lock
out
repz
mov
mov
in
fsubl
or
imul
xor
jne
cs
or
push
cmp
loopne
pop
lahf
mov
stc
add
xor
sub
jecxz
add
out
sbb
jne
xchg
cmovns
rorb
outsl
hlt
shlb
jge
dec
mov
mov
das
sahf
xor
mov
sub
rclb
shlb
rolb
and
into
jp
out
loop
push
push
lea
adc
and
loope
loop
lret
mov
scas
stos
test
rcrb
test
or
fistpl
xchg
dec
mov
outsl
rorl
or
shlb
add
insb
filds
sbb
cld
orb
mov
and
cs
js
dec
mov
gs
mov
test
stos
dec
push
lods
clc
js
xchg
mov
or
pop
outsl
cli
or
inc
stos
mov
decl
sub
clc
movsl
adc
sub
xchg
mov
pop
add
rcrb
cmc
fstl
push
mov
lds
inc
jp
and
mov
addb
nop
cli
xchg
enter
add
lods
adc
mov
pop
js
inc
mov
out
negb
pusha
imul
int
push
push
fstpl
adc
mov
push
sti
fs
xchg
pop
stos
das
out
jge
aad
addr16
in
fsubs
mov
lods
or
and
sbb
out
arpl
cs
out
mov
mov
mov
jmp
addr16
xchg
or
js
sub
ss
and
inc
cmp
addr16
fldt
xchg
add
ja
hlt
sub
daa
xadd
xchg
or
jae
add
jle
mov
xchg
lcall
addps
or
nop
sub
pop
mov
dec
mov
shl
push
jmp
xchg
xchg
into
pop
push
jns
clc
mov
inc
sbb
mov
cwtl
cmpsb
push
jge
pop
pop
sub
cmpsl
fldl
shll
xchg
or
inc
sbb
cmp
jnp
mov
jne
bound
lcall
adc
stos
fidivrs
add
in
sbb
sub
gs
xchg
jmp
xchg
inc
out
mov
imul
and
ret
sub
adc
pop
aaa
incl
and
fisubrl
inc
test
imulb
adc
xchg
daa
xchg
pusha
jecxz
push
jb
lret
decb
in
sub
and
gs
ds
push
inc
movsb
fs
jne
cs
loop
scas
pop
scas
loop
jmp
cs
jp
outsb
js
fiadds
dec
mov
adc
pop
mov
push
jnp
push
nop
mov
fildll
aaa
or
clc
sbb
test
std
jg
cs
or
xlat
arpl
leave
push
mov
push
mov
sti
cmp
or
imul
mov
jle
cmp
sbb
adc
lock
jg
xchg
test
jl
push
xchg
sbb
cmp
push
clc
mov
leave
fidivrl
scas
push
cmp
sti
jle
push
jecxz
clc
gs
loope
xchg
add
or
rcll
out
daa
add
pop
lods
jno
xchg
dec
mov
mov
int3
pop
pop
sub
dec
ret
adc
clc
fldcw
lods
mov
mov
test
pop
divl
sbbb
movsl
testl
and
xchg
push
pminsw
loop
xor
fs
mov
dec
jl
xor
clc
sub
or
fisubl
adc
push
xlat
test
mov
aad
sub
adc
mov
nop
lret
int3
mov
push
dec
test
sub
jp
and
mov
mov
push
lret
leave
or
dec
jae
pop
mov
jp
ss
cmpsb
xor
inc
jns
or
add
push
pop
icebp
adc
cmpl
xlat
dec
sbb
sbb
cmpsl
cltd
incl
mov
inc
shlb
jne
dec
ss
dec
cmp
push
lcall
and
out
cmp
cmpsl
movsb
inc
mov
jno
jecxz
adc
test
sbb
jle
and
shl
test
sti
jl
push
jns
out
cmp
in
push
cmp
test
popa
sahf
ficoml
pop
xchg
mov
imul
stos
add
ja
and
aam
add
jle
orb
cmpsl
jo
ds
lea
arpl
sub
jecxz
cwtl
push
mov
adc
lahf
mov
sub
mov
notl
add
sub
or
hlt
mov
mov
sbb
jbe
std
dec
xchg
loope
xor
lds
addr16
sti
xchg
and
push
loopne
aam
mov
cld
aaa
cmp
push
andb
mov
or
jnp
sbb
sub
inc
js
xor
aam
sbb
mov
push
mov
xchg
subl
sbb
sbb
or
mov
xor
cmpsl
outsl
dec
icebp
xchg
pop
push
ljmp
and
js
sub
adc
pop
loop
jbe
imul
ljmp
int
cli
fs
leave
push
stos
adcl
mov
fmul
pop
les
out
xor
ficoml
ret
dec
xlat
popf
add
std
arpl
jg
andl
sub
sbb
push
xor
cwtl
dec
cmpsb
fcoms
insl
push
jo
xor
add
nop
cmpsl
addr16
or
out
ja
mov
dec
mov
and
push
mov
lock
sbb
mov
cmp
popl
lds
inc
ss
fwait
mov
stc
xchg
cmp
fsubrs
inc
loope
sub
pushf
lea
xchg
jbe
int3
into
icebp
sbb
sbb
mov
ljmp
xchg
aad
lods
sbb
in
xor
test
arpl
sti
sbb
incl
sub
jg
jp
fcoms
in
hlt
mov
cmp
pusha
sbb
sbb
loop
sub
lcall
dec
pushf
add
stos
pop
dec
int
sahf
jmp
adc
pop
loopne
mov
mov
fisubs
insl
or
mov
add
inc
sahf
lret
loop
xlat
pop
mov
inc
adc
xlat
aad
push
xchg
test
ljmp
shlb
mov
test
mov
shr
xor
test
leave
jne
hlt
sub
lcall
mov
dec
push
jecxz
cltd
mov
imul
sbb
adc
inc
sbb
sub
jno
movsl
outsb
pop
cmc
mov
jge
mov
add
cli
push
pop
jbe
js
cmp
arpl
ret
cmpsb
lret
mulb
push
inc
push
jmp
mov
mov
and
std
das
lret
xchg
test
sbb
xor
popf
stos
es
adc
mov
repnz
cmpl
dec
sti
push
in
std
iret
mov
test
inc
es
fucompp
jb
es
cli
pop
je
lds
fadds
jl
push
or
aaa
dec
jnp
insb
lock
mov
mov
cmpsl
movsl
xor
or
xlat
jb
inc
rcl
jmp
lcall
inc
xchg
push
sub
inc
add
insb
mov
dec
adc
outsb
test
xchg
arpl
cmp
call
stos
push
mov
mov
jle
adc
into
in
ficomps
leavew
ljmp
jns,pt
sarb
decl
mov
add
inc
pushf
mov
lahf
or
das
push
jecxz
ss
jmp
aam
cmp
push
divb
fwait
adc
icebp
pop
jge
or
mov
sbb
mov
sti
inc
stc
fs
pop
repz
sub
lret
inc
jecxz
pop
adc
push
gs
shll
dec
out
mov
ja
daa
clc
mov
imul
ljmp
stos
mov
repnz
ja
fmull
adc
mov
inc
and
push
inc
xchg
cmp
jb
jecxz
stc
cmp
mov
cs
arpl
into
adc
mov
push
roll
push
sub
dec
or
cli
test
push
jns
scas
mov
fcmove
pop
loopne
pop
cmpsb
mov
xchg
lods
push
push
add
cmpsb
loope
push
adc
mov
adc
imul
xlat
pop
mov
out
inc
adc
mov
les
cmp
jns
sbb
rcl
mov
bound
cmp
in
or
mov
or
push
into
jecxz
lock
cmpsl
jb
fmull
jbe
adc
xchg
loopne
imul
adc
inc
in
or
icebp
dec
cmp
mov
cmp
enter
ja
xor
xor
call
inc
mov
aaa
js
les
rorl
xorb
inc
fs
cmc
inc
cwtl
push
sbb
jno
cmp
in
mov
cmp
push
mov
shll
cmpsl
cmpsb
pushf
test
lcall
sbb
mov
sub
ret
daa
adc
mov
sbb
loop
cltd
and
push
push
fildl
add
cmpl
rclb
mov
adc
mov
xlat
cmp
stos
ret
xchg
scas
fcoml
lock
mov
es
out
adc
rorb
ss
jno
in
xchg
insb
adc
cltd
push
bound
push
out
psubsb
cli
int3
inc
jg
inc
stc
mov
cmp
push
pushl
out
repz
in
xchg
mov
xchg
enter
pusha
jae
add
and
or
dec
push
int3
popl
dec
lock
mov
push
lahf
sti
test
push
adc
cltd
sbb
add
and
aam
call
cmp
mov
xchg
push
cwtl
sbb
sbb
push
adc
mov
mov
lea
lds
jl
inc
es
xor
jb
xor
xlat
xlat
xlat
add
jnp
mov
push
dec
pusha
or
cld
int
fdivrs
fcom
rolb
mov
push
imul
lea
ja
sub
and
fsubrs
aaa
jg
pop
sbb
mov
fisubrs
mov
std
mov
cltd
imul
cmpsb
lods
sti
xor
sbb
fisubrl
add
and
or
test
add
repnz
out
jmp
jb
shlb
jne
jge
push
push
xor
cmpsl
js
cmp
mov
loope
jno
rorl
add
and
mov
and
jecxz
or
stos
jg,pt
movsl
adc
out
mov
inc
in
and
test
jg
in
jno,pt
pop
daa
call
popf
add
jecxz
test
dec
daa
or
pop
outsb
into
cmp
int
lods
fnsetpm(287
jp
dec
inc
pop
ds
pop
inc
inc
jp
rclb
test
addr16
orb
in
xor
jecxz
ret
pop
insb
mov
dec
cmc
fucomi
test
adc
push
push
stc
ja
aam
mov
outsb
or
xor
shl
insb
fadd
pop
push
enter
xor
mov
push
das
cld
add
jnp
je
adc
push
bnd
aam
push
add
out
jp
fcmove
and
mov
adc
loope
je
lock
pop
add
inc
and
fiadds
mov
clc
mov
push
cmp
pop
std
cmpsb
je
xor
cld
xchg
dec
fwait
adc
mov
push
cmc
int
cwtl
pop
or
or
ljmp
and
mov
mov
cmp
mov
ds
dec
push
push
cmp
shlb
inc
pop
mov
mov
ret
add
xor
decb
push
xchg
mov
pop
push
fldt
sub
addr16
lahf
pop
jns
xchg
adc
push
fsubrp
ja
cmc
lock
lock
xchg
xlat
ljmp
popa
cmpsl
repnz
out
cmp
in
cld
pop
sbb
lret
adc
and
ja
cli
sub
xchg
pop
dec
xorb
pop
and
pop
sbb
jne
test
jge
mov
lcall
mov
xchg
mulb
ficomps
adc
pop
call
mov
testl
addl
or
addr16
mov
sub
cli
mov
mov
dec
inc
hlt
cmp
jns
loop
mov
bound
rcrb
dec
cwtl
test
stos
mov
imulb
loope
xor
in
pop
dec
arpl
mov
push
jae
outsl
in
sar
mov
test
pop
sbb
xlat
int3
punpcklwd
or
sbb
xor
dec
bound
inc
mov
mov
int3
add
xlat
adc
cwtl
bound
stos
xchg
mov
mov
push
mov
mov
mov
mov
or
cmp
adc
xor
out
push
int3
or
inc
mov
add
lds
xchg
cld
mov
rcll
xchg
or
fisubrs
mov
inc
add
xor
inc
rcrb
dec
daa
cwtl
aam
xor
jbe
inc
mov
pop
out
rolb
push
lcall
adc
je
or
inc
cli
cmc
test
loop
xor
ja
dec
xlat
testl
mov
mov
out
dec
sti
add
mov
mov
adc
fnsave
pop
mov
add
push
inc
into
jg
mov
inc
add
neg
aam
leave
outsw
mov
xor
add
xor
dec
insb
data16
rolb
mov
or
jb
push
inc
dec
jp
pop
cmpsl
ficoms
mov
mov
scas
pusha
or
icebp
jns
lea
hlt
inc
fldenv
add
or
xor
mov
int
pusha
jo
push
xchg
pop
loopne
jp
mov
fidivs
ljmp
inc
push
adcb
jbe
ror
cmc
xchg
pop
arpl
int3
out
jl
les
push
les
in
aas
aad
adcb
out
xor
jle
add
ljmp
add
mov
jns
mov
mov
jo
xorl
mov
push
aaa
lods
mov
imul
outsb
cmp
sub
js
mov
sbb
popa
inc
daa
test
pusha
sub
cltd
psubusw
test
pop
cwtl
inc
add
hlt
insl
mov
outsl
fldcw
adcl
xor
vpsraw
xor
into
xchg
or
sbb
sbb
les
inc
pusha
shlb
ds
sbb
aad
sub
or
cmpsl
adc
jo
sub
mov
aad
mov
aam
pop
lods
pop
mov
pop
push
push
lods
xchg
inc
dec
les
test
stc
or
sarl
push
les
fwait
dec
mov
les
push
cltd
fimull
or
and
dec
roll
push
stos
daa
jne
add
sbb
push
das
nop
mov
lds
cmp
cmp
pusha
je
jbe
xlat
sbb
setge
mov
dec
jns
dec
inc
jbe
aam
push
lea
cli
enter
mov
jmp
lea
leave
flds
or
fwait
inc
xor
push
lret
sub
push
pop
int
cmpsb
test
ja
dec
out
pop
or
das
sbb
lahf
fisttps
orl
icebp
mov
push
xor
out
shrb
add
sbb
jne
popa
ljmp
adc
sub
outsb
mov
inc
mov
nop
jmp
jbe
inc
bound
jl
pop
fdivl
lea
gs
or
mov
orb
sub
and
adc
xchg
imul
xchg
icebp
pop
test
pop
mov
adc
xor
lret
pop
cltd
add
je
jnp
jno
fmul
push
mov
or
lcall
push
icebp
lret
add
mov
in
lds
mov
enter
push
arpl
loope
or
xchg
jmp
cmc
pop
loop
call
daa
jmp
xor
pop
fdivs
xor
int3
and
add
push
pop
mov
mov
ljmp
pusha
stc
push
dec
add
out
stos
lock
lods
pop
mov
test
dec
push
cmpsb
std
dec
mov
push
loop
lret
lods
sahf
imul
fs
or
jp
lods
lods
pop
pop
mov
jbe
xor
push
fsubrl
or
out
ds
mov
js
rcrl
or
ss
mov
pop
imul
sbb
push
mov
mov
sub
addr16
test
pop
hlt
fdivrs
incl
je
test
test
pop
pop
adc
sbb
daa
test
pause
popa
or
pop
and
cmp
andb
int
cld
iret
jl
es
shlb
hlt
mov
aaa
stc
cmp
push
imul
shrb
leave
bound
fnstsw
test
add
pop
fsub
mov
in
pushf
jns
mov
lret
in
jnp
in
cmc
inc
jns,pn
push
sti
sub
leave
movsb
es
xor
ret
mov
fnsave
xchg
mov
lock
push
outsb
push
dec
fisubrl
mov
inc
mov
push
dec
mov
pop
inc
mov
dec
lret
test
jp
shrb
test
mov
cltd
ds
cmp
and
and
and
jo
cld
jo
call
push
lods
add
mov
sbb
das
push
iret
push
pop
fwait
push
cltd
stos
jecxz
or
lds
roll
mov
jecxz
push
je
jge
push
in
lock
iret
idivb
fisttpl
and
adc
push
call
mov
sahf
arpl
xchg
jge
jecxz,pt
outsb
jge
cmp
xchg
icebp
shll
daa
inc
inc
push
inc
int3
std
sub
stos
add
mov
push
pop
mov
jns
sub
add
inc
jbe
leave
adc
push
js
das
pop
int
sti
cwtl
xor
mov
mov
arpl
and
clc
test
xchg
ds
jo
ffree
pop
or
inc
inc
stos
dec
pop
repz
je
push
jg
jns
xchg
pop
adc
mov
mov
sahf
sub
inc
xlat
pop
js
js
push
inc
aas
cmc
repz
cmp
enter
and
inc
push
fistpll
lret
pop
adc
lahf
push
gs
lds
cmp
xor
shr
mov
lods
pop
pop
push
dec
subb
pop
cmp
je
dec
hlt
inc
and
rolb
in
cmp
in
jecxz
xor
cmpsl
mov
loopne
pop
cwtl
es
add
je
aam
jns
mov
mov
jne
xchg
bnd
test
jmp
aam
add
mov
sbb
clc
or
out
stc
push
lods
mov
jmp
imul
repnz
mov
subb
ret
dec
mov
test
xor
mov
mov
into
andl
mov
fnsetpm(287
jecxz
xor
fidivs
mov
inc
ljmp
push
fistl
mov
pop
dec
push
xchg
ds
sbb
jmp
cmp
in
in
addr16
lcall
sarb
push
push
outsb
sub
push
inc
cmp
dec
mov
xor
dec
imul
jle
ret
pop
xchg
testl
adc
jge
mov
into
loope
into
fisttps
daa
loope
cwtl
lcall
outsb
push
cmc
dec
inc
pop
mov
andb
lods
sub
cmp
decb
ja
movsb
xchg
xchg
dec
in
mov
es
inc
iret
leave
push
in
mov
inc
mov
stos
mov
sbb
xor
push
fs
sbb
push
dec
aam
dec
mov
scas
jno
sbb
xor
mov
aas
xchg
pop
bound
insb
cmp
or
lea
pop
repnz
xchg
ror
push
mov
pop
fnstsw
push
cmpsl
rolb
popf
lahf
in
lret
int3
mov
or
inc
icebp
mov
mov
stos
push
loop
out
fadds
push
lret
xorb
sub
push
pop
pop
fildl
jle
lods
jge
ds
push
sahf
pushf
in
pop
xchg
fistpl
mov
xchg
iret
and
shlb
dec
adc
insb
inc
add
mov
outsl
pop
in
outsl
cmc
lods
sahf
mov
mov
rcr
sti
push
popa
dec
cwtl
mov
and
test
mov
sbb
ljmpw
xchg
xor
xchg
in
fs
int3
ret
je
cld
data16
push
dec
push
pop
lds
adcl
movsl
repz
icebp
out
sub
xchg
cmp
sub
push
movsb
loopne
and
repz
xlat
int3
lahf
mov
out
pop
stos
sub
sub
xor
icebp
mov
fdivr
push
aaa
call
in
das
or
lcall
andb
add
jnp
mov
pusha
imul
cld
adc
cmp
sbb
divb
sub
sub
addr16
or
mov
sbb
push
mov
sbb
insb
mov
cmpsb
out
sbb
daa
pop
xchg
aam
flds
mull
inc
rcrl
std
or
jnp
xor
sbb
inc
lds
pop
lods
xor
mov
test
sub
jns
mov
mov
and
outsl
inc
jno
repnz
push
shlb
bound
scas
into
ret
test
inc
jno
movsb
pop
add
sub
push
call
test
imul
test
push
push
cld
aas
lock
repnz
jno
mov
add
out
andl
pop
sti
ds
lahf
dec
push
sub
xor
mov
fs
mov
push
test
mov
pop
dec
or
dec
mov
dec
add
rorl
pop
jne
jp
insl
cmpsb
out
pop
fmuls
and
add
push
loopne
sbb
lcall
cmp
xor
mov
cmc
mov
fucomp
pusha
movsb
xchg
mov
test
push
mov
loop
mov
fwait
cmp
xchg
push
imul
xor
movsl
imul
out
dec
pop
cmpsb
and
sti
pop
mov
insl
aaa
repz
and
sbb
jns
or
ret
mov
xchg
push
sbb
scas
into
in
das
mov
and
sbb
jnp
mov
or
xlat
mov
cmp
in
test
stc
fadd
movsb
mov
ficompl
int3
adc
aaa
orps
pop
adc
arpl
rolb
sub
pusha
mov
dec
cmp
mov
fs
mov
out
in
sahf
mov
fmuls
dec
leave
addl
add
ret
scas
repnz
aam
out
imul
std
pop
pop
lret
rcrl
imul
arpl
cmc
adc
stc
mov
roll
push
xorl
nop
lds
lahf
stos
mov
adcb
xor
in
lret
xchg
into
lds
addl
jmp
cli
push
cltd
adc
sub
or
stc
fldl
ficoml
push
in
jle
mov
fwait
pop
add
sar
cs
lds
xchg
fcmovnu
xchg
movsb
fmul
add
cmpsl
sbb
xchg
xor
addr16
adc
xchg
test
pop
jmp
sti
mov
rorl
ret
pop
stc
hlt
mov
imul
and
dec
mov
adc
push
add
push
mov
dec
push
xor
add
and
test
ret
inc
fmuls
jnp
loop
mov
xor
or
loope
cld
daa
pop
push
rcll
arpl
jg
sub
lahf
sbb
jg
repz
aad
inc
es
pop
insl
push
inc
or
fistl
sbb
push
jbe
fcmovb
mov
mov
std
sahf
enter
loope
stc
outsb
nop
lret
mov
stc
jmp
outsl
sahf
and
in
and
xchg
outsl
add
out
lea
or
push
mov
jns
cmp
xchg
pusha
mov
leave
jp
sub
mov
sbb
dec
mov
js
stos
dec
imul
dec
pop
jns
jl
and
out
push
ljmp
iret
or
pop
mov
mov
pop
mov
leave
cmpsl
sbb
push
jno
jl
aam
mov
mov
in
jge
bound
pop
outsl
add
xchg
aaa
cmp
mov
push
ja
mov
repnz
xchg
into
jb
pop
adcl
sbb
and
fimuls
xor
sub
loope
push
mov
imul
ss
adc
mov
lret
aad
iret
movsl
or
in
outsl
mov
adc
dec
lock
xchg
mov
aaa
sub
sbbl
aas
adc
sub
jb
or
pushf
int3
es
xchg
xor
mov
inc
ljmp
int
gs
je
popa
out
fstl
push
lock
lahf
sbb
xor
fldl
das
sub
into
mov
leave
sub
test
cmpps
lods
mov
mov
jg
sbb
xor
jbe
jae
push
adc
sti
mov
add
pop
call
dec
lret
mov
in
inc
add
int3
mov
es
shll
sub
jle
inc
movsl
push
mov
ja
imulb
adc
mov
sbb
adc
push
inc
xchg
pop
sub
sarl
imul
pop
mov
xchg
pop
push
ror
leave
push
js
sbb
sti
sbb
jne
fnsave
sub
and
in
daa
and
xchg
mov
and
gs
xchg
shll
push
fiadds
or
test
dec
push
inc
and
jnp
sub
arpl
clc
mov
xor
and
xchg
iret
lock
and
or
clc
sbb
xchg
xchg
ds
pop
cmp
push
mov
minps
sti
les
jb
popa
mov
jne
cltd
aaa
inc
lea
clc
cmp
cmp
pop
js
xchg
xlat
repz
movsl
sti
push
lds
fldpi
sbb
push
jge
push
fdiv
xchg
xchg
mov
mov
jo
std
push
cli
ret
ret
jns
xor
roll
jo
add
and
inc
out
or
xlat
pop
xor
inc
mov
inc
xor
sub
fcomp
arpl
fiaddl
sub
sbb
jnp
cmp
sbb
arpl
out
dec
jns
cmc
and
add
xchg
dec
pop
gs
cs
lods
jmp
jo
idiv
ss
pop
mov
sbb
mov
mov
imul
mov
subb
stos
hlt
shrb
loope
cmp
sub
cmpsb
xchg
add
pop
and
icebp
sti
cmpsb
jo
shlb
xor
inc
cli
mov
into
pop
shl
dec
and
in
hlt
movsb
dec
sub
jecxz
es
call
sbb
je
into
stos
cmp
or
mov
mov
mov
les
sub
stc
in
fwait
add
mov
cmpsl
jnp
jecxz
lock
hlt
mov
hlt
lret
lret
cmp
push
mov
pop
sub
bound
sarl
push
and
enter
arpl
mov
sar
xorb
jg
rolb
stos
jae
push
push
mov
xchg
push
movsl
psubd
jnp
in
fs
aad
mov
lods
jae
or
jge
and
mov
loope
call
loope
pop
push
or
jne
push
daa
jmp
out
aad
shlb
add
ret
outsb
mov
mov
fldt
ds
in
xchg
xor
int
fistps
mov
lods
fsubr
sbb
stos
aaa
stos
enter
mov
xchg
cli
sbb
stos
fnstcw
es
cmc
ret
cwtl
mov
pop
pop
mov
mov
test
sbbl
das
ss
push
les
hlt
adc
mov
xor
shrl
or
cmpsl
mov
add
loopne
hlt
mov
daa
mov
cld
int
xchg
push
mov
into
push
cs
adc
or
mov
adc
pop
inc
jns
in
test
jmp
push
or
outsb
mov
mov
adc
aam
out
push
push
std
pop
test
xor
pusha
push
cs
mov
push
scas
out
adc
negl
ja
sbb
cli
pop
imul
adc
mov
arpl
insb
aad
ret
addr16
std
and
mov
neg
sbb
je
fisttpl
stos
sub
push
cmp
cmp
stos
jne
fisubrs
aam
push
and
sub
popa
mov
addr16
inc
out
mov
push
cwtl
mov
aas
test
stc
test
or
cld
data16
jmp
aas
stos
mov
and
push
mov
mov
mov
adc
sub
and
js
sbb
sti
adc
rclb
push
push
mov
dec
test
lds
mov
push
push
mov
mov
push
xchg
repz
cmp
in
fildll
xlat
cld
pop
push
or
shrb
pop
sub
ret
add
ret
jecxz
jecxz
jecxz
dec
mov
push
scas
mov
jecxz
push
ja
mov
and
out
mov
lcall
out
fwait
orl
mov
inc
pop
xchg
xchg
dec
pop
xchg
test
add
out
push
adc
sbb
dec
lahf
cmp
jno
push
xor
sub
loope
push
cli
inc
mov
vpmacssdql
rorl
adc
ljmp
insb
xchg
or
cmc
cwtl
data16
pop
fcmovnbe
cmp
mov
fiaddl
aam
inc
in
ficoml
cs
call
sub
or
inc
dec
xor
popa
andl
sahf
or
or
jp
cltd
pop
icebp
call
sti
sub
inc
jbe
lds
sub
cmpsl
test
adc
mov
les
adc
outsb
test
sbb
dec
xchg
xchg
push
icebp
or
inc
loop
sub
jno
rolb
cmp
loop
dec
fsubrp
push
adc
cmp
pop
movsb
pop
in
test
or
loop
sub
add
adc
mov
pop
sarl
int3
movsb
lahf
popa
xchg
fsts
xchg
fcmovnu
scas
andb
fwait
outsl
enter
pop
jecxz
ds
nop
and
fs
xor
lods
mov
mov
popa
daa
jne
push
mov
xor
popa
fs
sbb
aaa
imull
adcb
sti
testb
push
adc
jb
add
pop
mov
imul
push
or
xlat
sbb
jge
mov
inc
xchg
fyl2xp1
cli
push
outsb
jg
out
pop
shl
loop
cmc
dec
sub
std
subl
jg
pusha
inc
cltd
fildll
push
mov
roll
enter
lcall
or
shll
and
push
pop
sahf
push
mov
out
dec
hlt
and
push
jle
mov
cwtl
pop
out
das
dec
out
and
loopne
in
out
pop
xchg
in
loopne
loope
cmp
pop
loope
icebp
xor
xor
dec
jmp
push
cltd
fwait
mov
mov
ss
inc
adc
or
or
pop
stos
lea
push
push
inc
cmpsl
cwtl
out
test
lahf
rcr
sahf
clc
stos
mov
pop
jbe
inc
adc
sub
out
pop
and
scas
xbegin
push
cmp
leave
adc
cmp
jge
fisubs
dec
mov
add
xor
dec
sub
mov
rcll
repz
shll
insb
sub
fcoml
ljmp
xor
add
int3
mov
popf
loope
das
clc
dec
pop
jmp
push
mov
pop
push
cmpsb
lcall
fucomi
add
nop
mov
mov
mov
inc
ljmp
or
shll
pop
test
push
in
in
mov
fcmovnu
in
mov
fimull
mov
push
aaa
jne
inc
and
in
inc
shll
sbb
push
pop
mov
pop
and
pop
call
test
in
test
sti
mov
jno
xchg
enter
mov
dec
imull
into
or
jbe
in
daa
fldl
xchg
cli
pop
les
adc
dec
add
inc
mov
loop
mov
adc
xor
xchg
aam
inc
xchg
dec
or
xlat
sbb
cwtl
test
sub
and
arpl
ss
lods
insl
or
andb
cs
add
rcll
and
icebp
add
stos
fstl
in
lock
pop
jbe
inc
fdivs
lahf
rcll
mov
rol
or
icebp
loope
sahf
push
xchg
mov
lret
mov
ud2
in
pop
pusha
roll
out
lods
adc
shl
and
cwtl
cmc
das
lret
mov
lods
sub
repz
hlt
xchg
jo
mov
sbb
loope
push
pop
movsl
cs
mov
popf
shll
sti
cmp
imul
push
pop
jecxz
cmp
add
insb
mov
rcl
pop
fdivs
lahf
ror
lret
push
stos
xor
cmpsl
xlat
lahf
adc
filds
pop
or
cltd
xchg
adc
inc
fsubl
adc
aaa
fnstenv
lock
test
stos
fsubrl
add
cmp
fidivs
mov
xor
movsb
adc
clc
sub
jb
addr16
jnp
insl
mov
das
or
mov
xchg
lcall
pop
or
in
add
mov
xchg
dec
mov
fisubrs
lds
ret
push
imul
and
lods
shll
fisttpll
loope
sub
xchg
inc
pop
rorb
jge
mov
test
cmovnp
cli
push
mov
fucomip
jg
sbb
cli
rcll
in
call
sbb
loopne
jo
int3
fmuls
movb
cmp
xchg
cmc
iret
sbb
mov
and
and
cmp
mov
aaa
pop
push
lret
iret
mov
push
add
mov
pop
daa
imul
and
sbb
loop
mov
je
push
gs
push
inc
push
out
cmp
jno
push
jb
and
lahf
out
enter
ficompl
dec
ret
inc
ja
in
insl
es
movsb
xchg
jecxz
cmp
push
jmp
cmp
aaa
push
stos
std
les
and
mov
xchg
jbe
cmp
icebp
ret
xor
and
mov
es
mov
push
push
and
adc
jne
xchg
push
mov
add
out
repz
lods
jns
mov
mov
es
xchg
inc
lcall
fsub
ficoms
dec
jp
mov
outsb
movsb
movsb
sbb
rcll
js
dec
mov
shrl
and
faddl
iret
aam
adc
or
outsl
hlt
cmp
mov
leave
pop
mov
js
test
push
jno
test
in
mov
movsb
push
clc
lds
mov
add
jne
leave
and
sub
pop
sub
out
mov
adc
xchg
iret
lods
pop
loope
or
sbb
mov
pop
adc
xor
xor
je
and
fnsave
pop
jle
inc
mov
add
push
jle
test
sub
shlb
sbb
sbb
cli
imul
xlat
jmp
adc
jo
je
mov
adc
pop
xor
inc
lret
gs
xchg
add
dec
insl
mov
mov
inc
cmc
icebp
clc
outsb
sub
stos
outsb
cli
enter
mov
popf
fwait
fwait
std
inc
pop
and
add
aam
adc
stos
add
mov
shlb
gs
fcmovu
sbb
ss
out
jne
adc
fcoms
xor
shlb
jae
stos
and
xor
ljmp
imul
rorl
sbb
mov
ja
sbb
push
add
inc
sbb
out
gs
cmpsb
jecxz
jb
push
add
inc
mov
std
mov
jg
lock
jne
push
shll
add
leave
outsl
xor
sarl
ja
and
enter
mov
jnp
jle
hlt
sub
push
add
aas
jl
pop
push
mov
dec
inc
sub
mov
mov
in
repz
adc
sldt
mov
addb
xor
mov
int3
mov
leave
repnz
in
xor
sub
mov
clc
dec
mov
aam
sahf
popf
hlt
jmp
ds
push
cmc
rolb
loopne
not
ljmp
aas
jb
or
gs
scas
jle
push
aas
inc
lret
pop
cmp
or
js
enter
pop
stos
jg
into
pop
xchg
inc
pop
jbe
jge
add
inc
push
push
movsl
xor
cwtl
xchg
mov
mov
loop
or
bsr
sahf
mov
jmp
add
test
mov
pop
fdivs
sub
lds
sbb
cmpsl
shr
sbbb
sub
pop
cwtl
jmp
mov
xchg
cmpsl
push
dec
js
push
cwtl
dec
clc
mov
sub
push
popa
dec
hlt
bndldx
fidivrs
sbb
mov
mov
les
fnstenv
imul
iret
loopne
test
das
jb
inc
push
clc
jnp
adc
pop
int
and
fisubl
mov
adc
aaa
xor
orb
cmp
aad
adc
sarb
into
jmp
mov
fsubrs
arpl
out
inc
pop
popa
and
jae
dec
mov
or
jae
pop
int3
push
fisttpll
jb
mov
enter
xchg
add
pop
or
cmc
andb
enter
jl,pn
xor
enter
adc
imul
mov
mov
aad
ljmp
adc
sbb
mov
xor
adc
xchg
or
sbb
outsb
mov
sahf
aaa
loopne
lahf
lods
push
int
ret
and
fnsave
in
add
stos
pop
sbb
cmp
and
test
test
dec
sbb
bound
rolb
jne
sbb
clc
push
and
xor
adc
xor
leave
test
jl
cmpsb
jg
mov
pop
sub
push
arpl
lahf
rorl
dec
bound
out
jp
mov
push
test
dec
mov
fisttps
fs
cld
imul
popa
push
clc
adc
push
fsubs
insb
sbb
pmaxsw
dec
in
fucom
cwtl
pop
roll
sbb
jno
lods
subb
xor
mov
shrl
inc
or
popf
inc
sti
xlat
imul
adc
insb
pop
jne
adc
cs
cltd
xor
insl
add
cmpsl
std
faddl
pushf
pop
pop
lds
push
sbb
arpl
loope
aaa
add
ds
bound
push
xor
shll
out
lods
scas
test
les
mov
das
inc
in
cmp
dec
dec
das
sub
sbb
mull
pop
cmp
and
adc
add
insb
imul
aaa
movsw
push
cs
sbb
adc
pop
inc
test
dec
cmc
xchg
mov
xor
mov
std
and
pusha
jmp
fnstsw
inc
cmpsl
in
or
mull
adc
pop
xlat
mov
dec
add
jl
bound
dec
rclb
lahf
outsb
dec
mov
mov
xchg
mov
gs
inc
or
stos
rorl
jbe
and
cs
loope
push
or
mov
inc
mov
xor
addb
bswap
repnz
aad
push
out
pop
jp
gs
xchg
movsl
cmpsb
pusha
jnp
js
shrl
sbb
call
mov
pop
push
mov
sbb
mov
add
hlt
jnp
cmp
out
mov
in
data16
fidivrl
int3
sub
cltd
enter
push
ret
sub
fisubrl
push
out
cmp
repz
aas
xor
xchg
add
mov
adc
das
fs
xchg
xor
sub
push
not
fcmovnb
stos
jl
out
outsb
xor
imul
jge
sub
cmp
shll
testl
shll
sub
stc
jae
mov
mov
fst
popa
jle
gs
sysret
pusha
xor
push
add
adc
xchg
sub
sub
xchg
pop
fwait
adc
notl
jge
jp
xor
jg
fdivs
and
and
fwait
add
into
les
and
mov
sbb
aam
mov
js
out
jns
and
out
dec
xchg
popl
jnp
jg
jo
int3
loop
ljmp
popw
adc
add
sbb
xchg
inc
mov
xchg
sahf
icebp
loop
aaa
outsl
imul
andb
sub
inc
pushf
or
push
les
jmp
notb
je
data16
jne
mov
pop
fcompp
bswap
and
or
lock
imul
adc
cmp
jno
clc
lcall
push
test
jnp
mov
cmp
sbb
mov
inc
popf
dec
mov
lahf
and
sahf
imul
in
sbb
xchg
rclb
ds
loopne
jno
and
scas
xchg
shrb
push
xor
inc
testl
sub
mov
dec
test
ret
movsl
mov
leave
sub
jmp
aaa
lcall
push
jp
and
fstp
fildl
xorb
xor
je
dec
insl
pusha
cmpsl
fstpl
pushf
cmpsb
int
hlt
mov
test
add
dec
in
int
loopne
test
insb
xchg
cmp
jne
and
repnz
add
fbld
adc
mov
mov
out
xor
fwait
pop
or
ret
push
out
cli
mov
pop
pop
pushf
in
ljmp
push
scas
fdivrl
aad
pop
les
lea
xchg
mov
fmul
pushf
lret
aam
push
xchg
jmp
loop
out
dec
fadd
adc
mov
cmpsl
pushf
mov
push
xchg
sarb
push
add
xchg
add
xlat
lock
mov
and
jge
push
push
idivb
adc
sub
sti
mov
addr16
jno
insb
je
inc
out
in
dec
mov
in
insl
jmp
mov
mov
or
push
hlt
or
mov
aam
jns
or
xchg
mov
xor
push
pushf
adc
xchg
pop
mov
cwtl
int
mov
insb
ret
mov
mov
adc
mov
inc
or
add
mov
insl
imul
in
pop
aam
call
js
fptan
push
jmp
and
shlb
repnz
mov
fldl
aas
push
inc
fcomps
mov
pop
popa
test
sub
clc
cmp
ret
addr16
lea
jb
test
pop
xchg
out
aad
push
lea
das
stos
jb
mov
lods
add
xchg
sub
mov
cld
inc
push
js
stos
movsl
cmp
mov
ret
inc
imul
add
mov
pushf
sti
scas
cli
repnz
fimuls
push
xorb
jb
aas
loop
fldz
push
sbb
xorb
loop
mov
xchg
mov
daa
es
mov
and
xor
cmpsb
mov
sub
fsubs
sub
push
outsb
jmp
mov
mov
repz
and
mov
icebp
jecxz
leave
cltd
mov
dec
and
or
adc
push
add
push
in
inc
push
dec
movsl
cmp
je
push
mov
cmp
in
out
mov
sbb
inc
ds
ljmp
int
int
and
mov
aad
sub
outsl
or
and
push
das
fsts
inc
pop
loopne
dec
push
xchg
and
cld
out
push
xor
pop
inc
push
cmp
pop
ds
cmp
mov
adc
cmpl
lcall
mov
xor
and
mov
mov
mov
stos
ret
in
push
push
popa
insl
out
ficompl
sbb
cmp
mov
stos
ss
inc
jle
enter
push
hlt
std
cmpsl
gs
fisttpll
fs
orl
mov
enter
xor
push
dec
jbe
data16
or
insb
cmp
int
adc
fbstp
pop
es
fldl
mov
lret
es
xchg
les
and
fbld
movsb
or
xor
push
test
mov
jnp
inc
pop
mov
dec
cltd
xchg
cpuid
and
cmp
pop
jge
aam
icebp
sub
fiaddl
ror
mov
les
push
xlat
fdivrl
xor
push
sti
cmp
add
in
inc
pop
jb
gs
inc
mov
and
sbb
xchg
ret
xor
mov
sub
cli
repz
xchg
and
dec
xor
out
lret
push
xchg
sahf
and
mov
add
mov
aas
sahf
addr16
jb
sbb
les
xchg
sub
aam
mov
cltd
jb
pop
arpl
push
int3
cmp
sub
ds
shll
ljmp
clc
mov
dec
mov
xor
scas
pushf
les
push
aas
jae
daa
je
in
xor
xor
mov
pop
icebp
orb
pop
fdivrs
mov
fdivs
stos
xor
outsl
out
inc
xchg
push
out
bswap
hlt
push
test
ret
mov
icebp
jl
and
in
jae
ret
or
mov
mov
jnp
aam
jns
in
insb
fdivl
stos
data16
and
int
fstpl
mov
dec
in
xor
push
xchg
sub
mov
push
pop
testl
test
lcall
addr16
dec
inc
sub
js
xorl
push
and
mov
inc
cs
fidivl
mov
pop
shrb
int3
mov
arpl
xlat
pop
movsb
cmpsb
fwait
sub
xchg
outsl
adc
push
or
stos
std
xchg
or
cli
xor
mov
in
mov
xchg
cltd
push
push
in
std
out
adc
inc
fists
je
push
insb
rorl
ror
xor
icebp
cmpl
add
mov
push
leave
mov
pop
and
mov
int3
pop
in
mov
xor
mov
mov
hlt
jbe
mov
rcll
inc
fiadds
outsb
push
test
in
adc
lea
sbb
pop
std
popf
fldcw
fwait
jle
sbb
imul
inc
fs
arpl
jge
test
sbb
dec
test
add
movsb
stos
lret
out
and
leave
bound
dec
lahf
std
mov
int
jl
subb
and
add
insb
lret
repnz
hlt
mov
add
jne
mov
jae
dec
data16
sbb
lds
mov
movsb
sbb
inc
mov
loopne
add
insl
pop
xchg
fnstenv
testl
xlat
enter
push
jne
push
lcall
mov
jae
pop
xchg
jl
ret
inc
and
sbb
mov
shr
sbb
mov
lods
mov
dec
nop
push
sar
popf
xor
test
cmp
cli
inc
push
push
add
lds
dec
knotw
jno
push
call
addr16
aam
dec
pop
pop
iret
cs
and
mov
and
ljmp
cmp
push
mov
inc
aaa
gs
sub
lret
mov
sub
cld
loopne
insl
lret
cld
xlat
out
add
dec
in
stc
and
ja
add
call
cwtl
xchg
sbb
sbb
push
inc
jge
pop
test
in
jb
dec
or
xor
mov
pop
and
push
pushf
dec
fsubr
mov
fdivs
jb
jb
outsb
adc
mov
cli
push
pop
sub
push
vcomisd
fcmovnu
mov
push
adc
subl
mov
xor
call
push
les
pop
sbb
jle
scas
xor
jp
xchg
into
cmp
inc
or
or
int3
xchg
cli
icebp
jecxz
pop
push
sub
xchg
push
cmp
sbb
mov
xchg
rclb
in
mov
mov
add
lret
stos
lea
out
xchg
dec
jno
frstor
dec
push
add
mov
push
push
divb
sub
fs
pop
mov
outsl
xor
cli
outsl
call
ds
mov
jns
mov
xchg
xor
inc
je
nop
out
in
xor
mov
sbb
adcb
push
mov
lods
in
insl
lahf
in
out
mov
in
mov
pop
sbb
cmc
sbb
cwtl
fsts
cli
shll
adc
cmc
sbb
mov
popf
data16
sbb
add
dec
mov
loopne
xor
xchg
mov
gs
mov
mov
inc
xor
rolb
aas
xor
sarl
sbb
adc
fidivrs
in
pusha
mov
insl
adc
and
outsb
xchg
lods
in
test
cwtl
popa
jl
xchg
popa
lods
cmpsl
add
cmp
jae
mov
mov
inc
out
lds
cmpsl
in
pop
movl
mov
push
mov
icebp
faddl
mov
cs
dec
add
je
fnstcw
xrelease
sbb
pushf
pop
rorl
jns
enter
jno
mov
icebp
movsb
xor
cmpsl
jae
mov
inc
lds
sahf
jns
and
lods
loope
fs
xchg
jo
in
shr
pop
cmp
pop
fsubrl
lods
aad
pop
add
lea
mov
leave
enter
sbb
jmp
iret
mov
pop
mov
lods
xor
mov
sbb
ret
inc
sbb
dec
and
ljmp
push
mov
pop
dec
out
pop
cmp
push
push
jbe
xor
lods
hlt
scas
dec
rorb
lret
xchg
out
xor
push
lods
enter
mov
rol
out
cmp
cltd
fsubrl
jbe
outsb
pop
add
cmp
aad
dec
sbb
ds
ret
push
xchg
clc
sbb
je
lods
into
inc
and
jno
leave
lahf
pop
push
aaa
and
cld
adc
xchg
imul
negb
inc
loopne
cltd
push
cmp
xchg
in
pop
gs
inc
xchg
jmp
or
jge
pop
rolb
adc
movsb
fcmovnbe
cmpsl
dec
cmp
pop
mov
movaps
jns
pop
ljmp
pop
add
mov
add
ss
push
xchg
shufps
xorl
mov
cmp
hlt
cmp
xor
pop
movq
xchg
pusha
push
jp
sbb
gs
cmpsl
test
rcll
pop
push
xchg
pop
into
iret
inc
cmpsb
and
add
ror
sub
mov
or
movsl
and
shlb
push
jno
pop
and
pushf
dec
in
pop
leave
dec
sahf
jecxz
aas
or
dec
outsl
test
sub
push
mov
add
xchg
sub
jo
dec
loopne
fildl
pop
enter
test
and
push
or
aaa
mov
cmp
dec
inc
popa
orl
and
push
loop
mov
sbb
add
imul
push
push
dec
mov
iret
lret
in
aas
bound
jbe
inc
fistl
cmp
or
jg
xchg
ret
push
adc
ja
into
mov
xchg
jb
adc
xor
xlat
add
xchg
jnp
sub
mov
or
inc
imul
popf
sub
test
cmp
movsb
lret
cmp
fistps
roll
mov
enter
out
shlb
mov
dec
inc
out
rcrl
xor
push
out
mov
fimuls
mov
jno
adc
int
js
outsl
stos
stos
sub
loop
mov
mov
sub
pushf
test
jl
sbb
sub
cld
lret
sti
out
push
mov
pop
mov
or
mov
pusha
cmp
mov
pop
adc
loopne
inc
sub
adc
pop
mov
mov
leave
dec
xor
pop
adc
push
ljmp
adc
xchg
daa
pop
incl
cmpsl
cmp
inc
outsb
arpl
push
fldcw
cmp
xor
xchg
hlt
adc
cwtl
mov
dec
dec
add
push
dec
xchg
shll
fwait
and
frstor
xlat
daa
addr16
enter
push
sarl
adc
sub
mov
movsb
cltd
pop
xchg
loop
mov
xor
sbb
mulb
xchg
imul
jno
fcoms
mov
lock
adc
fisttpll
mov
scas
mov
cli
popa
cmp
xor
pop
push
jne
inc
inc
or
or
and
stos
mov
push
jno
ljmp
sbb
sbb
lahf
enter
std
pushl
jmp
mov
jge
insb
jg
pushf
ss
fisttps
add
jb
sub
in
enter
insb
imul
outsb
insl
mov
sub
cltd
jno
cli
stc
sub
jb
in
pop
mov
or
cmp
aas
push
sti
leave
add
or
loopne
inc
shl
mov
push
movsb
aas
adc
xor
xchg
es
fsts
push
in
inc
aam
sbb
nop
out
jmp
js
leave
xor
bnd
push
mov
cmp
mov
pop
mov
out
sub
std
enter
add
jb
cmc
xor
stos
std
push
sbb
call
xor
out
add
ret
stos
lods
out
sbb
sub
imul
out
out
push
cli
and
or
arpl
xchg
mov
dec
cmp
lock
xchg
xchg
hlt
xchg
inc
dec
inc
gs
std
sub
stos
pop
pop
mov
ljmp
sarb
push
xlat
mov
out
sti
dec
movsb
mov
ficoms
jne
fmul
adc
pop
fildll
dec
mov
test
push
jno
ds
xchg
mov
ret
mov
mov
cmovno
sbbb
sbb
les
sub
jae
outsl
jne
cld
test
pop
jo
nop
int3
sarb
sbb
shll
push
frstor
fsubl
or
movsb
jp
inc
mov
jp
push
test
cmp
arpl
sub
lds
xchg
push
xor
dec
mov
fs
scas
gs
or
pushf
lahf
in
xor
or
inc
and
sub
imul
jp
jle
dec
jge
stc
lods
push
xchg
push
jae
xchg
xor
rcrb
ret
jbe
sbb
rcll
cmp
scas
test
insb
dec
cmp
call
fisttps
dec
cmpsl
inc
mov
pop
sbb
movsl
outsl
cs
cmp
ss
enter
add
sub
inc
shll
stos
mov
fsub
push
sub
pushf
test
call
dec
cmpb
mov
stos
insl
loope
or
add
mov
aaa
test
push
insl
scas
ret
call
add
fildll
xor
rclb
fidivs
jl
push
jmp
xor
mov
lcall
push
pusha
sub
cmp
ljmp
cli
push
les
and
dec
sub
or
sub
cmp
lods
pop
push
mov
xchg
cs
inc
sahf
pop
pop
and
nop
pop
dec
or
and
or
mov
pop
jg
xor
xor
out
cltd
cli
repnz
xchg
mov
jnp
mov
lret
movsb
dec
out
in
fistpll
sti
dec
jle
in
ds
fisubs
xor
xor
and
test
nop
pushf
test
xchg
rolb
stos
in
cmp
xchg
mov
mov
push
push
lea
push
mov
inc
and
insb
pop
fxch
sbb
and
daa
das
push
push
ss
fs
push
push
negb
lret
xchg
sahf
sbb
inc
sbbb
test
and
daa
push
ds
jecxz
loop
lock
mov
push
in
fistpl
dec
cmp
cmp
movsl
scas
sbbl
inc
vpsrlw
mov
arpl
push
or
mov
inc
adc
sub
in
in
js
push
jns
cmp
test
scas
arpl
push
cmc
enter
jle
push
sub
js
dec
sbb
xchg
mov
add
stos
push
cld
jge
cltd
leave
rol
imul
mov
jbe
adc
test
xor
adc
clc
rolb
push
xchg
std
sbb
mov
fsub
gs
add
pushf
ds
jp
inc
jbe
rorb
popa
outsl
push
in
push
in
sub
pop
in
mov
cmpsl
mov
in
popf
int3
sub
jecxz
xchg
xchg
js
adc
shrl
add
fwait
loop
imul
inc
mov
pop
sbb
movsl
xchg
aam
outsl
push
ljmp
mov
cmpsl
ja
mov
sbb
fs
dec
mov
xchg
and
xor
imul
fwait
cmp
cmp
mov
cs
add
lret
test
stos
enter
fbstp
ds
imul
sbb
addb
mov
jae
mov
xchg
dec
sarb
sub
out
jge
js
lods
out
cli
pop
out
dec
mov
and
addr16
test
ror
xor
movsb
idivb
in
dec
xor
sbb
mov
inc
hlt
shl
add
add
xor
pop
les
xchg
add
cli
jmp
inc
stc
repz
divb
test
add
ss
mov
mov
adc
push
stc
cmp
movsl
inc
mov
sub
inc
lock
in
xor
push
and
add
sbb
pop
push
pop
jno
push
out
cmpsb
out
enter
aaa
xor
ss
push
xchg
fidivl
mov
mov
shll
cmpsb
sar
lret
jno
lock
adc
adc
stos
sub
dec
lret
es
add
jno
pop
ja
testl
test
and
lds
or
pop
fstl
les
mov
loope
lods
xchg
in
xchg
lret
adc
cmp
fidivrs
jg
repz
mov
xchg
aad
sbb
shlb
pop
imulb
inc
stos
psadbw
jno
sbb
adc
push
push
push
xchg
push
xchg
cltd
mov
push
mov
inc
pop
into
fadds
dec
test
out
lret
push
cld
pop
aas
jnp
sbb
imul
cmp
dec
stc
push
das
pop
add
pusha
mov
pushf
fidivs
call
add
or
xchg
call
inc
rcl
test
sahf
pop
mov
pusha
popa
jne
xor
icebp
jg
sti
add
jnp
pop
jmp
adc
aaa
pop
mov
pop
add
enter
pop
or
enter
imulb
push
out
insb
and
pop
inc
out
sbb
mov
pop
jno
push
leave
inc
ret
dec
jbe
decb
outsb
xchg
sarb
cmp
sbb
out
push
outsl
adc
sub
xchg
int
stos
or
xor
insb
xchg
adc
jnp
ret
in
xchg
mov
leave
sbb
mov
xchg
aad
stos
jge
dec
jno
iret
movlps
jo
mov
mov
scas
jl
inc
mov
cli
dec
add
cmpl
xor
dec
pop
pop
out
icebp
cld
add
mov
sbb
push
dec
out
out
out
jb
push
fcomp
jae
mov
popl
xchg
cld
outsb
pushf
inc
pop
xorl
sar
mov
add
stos
clc
arpl
mov
cld
jno
mov
addb
movsb
test
outsl
sar
push
jno
push
sbb
add
pop
xlat
clc
xchg
mov
lock
jne
adc
adc
sbb
add
sub
xor
sbb
jnp
dec
gs
mov
fimuls
add
sbbb
dec
or
testl
mov
cmp
push
movups
addr16
mov
fdivrs
mov
js
push
and
cmc
loop
test
push
test
push
jl
jbe
dec
test
orb
lds
and
clc
mov
fsubr
clc
mov
les
call
pop
fldcw
std
ret
xchg
fisttpl
xchg
hlt
insb
lock
fistpll
adc
ret
imul
mov
jl
pop
mov
xor
push
rorb
xchg
adc
xchg
push
mov
cltd
shll
dec
loope
add
aad
adc
lea
loop
repz
pusha
pop
pushl
lods
sbb
loop
pop
cmp
dec
std
adc
lahf
adc
jg
andl
pop
cmp
jge
push
mov
push
femms
inc
ja
mov
daa
xor
pop
clc
jl
stos
lret
cmp
dec
cli
pop
pop
push
adc
lret
lods
lods
gs
ljmp
out
mov
mov
std
fiadds
sbb
call
aam
in
jl
sub
fstl
jecxz
xor
jno
cmpsb
jae
insl
push
sbb
inc
addr16
dec
sarb
aas
adc
mov
in
cmpsb
and
outsb
and
lods
adc
jle
sahf
aam
mov
mov
and
mov
bound
cmpsl
cli
xor
jmp
cld
sbb
jo
imul
jle
clc
dec
jo
lea
mov
adc
cmp
test
movsb
fsubs
out
rclb
cmp
movsb
inc
xchg
xlat
lock
and
outsl
shl
ja
sbb
aad
sbb
jmp
js
sbb
push
xor
out
mov
or
out
ljmp
in
es
jl
fs
xor
sbb
dec
mov
push
stos
mov
or
inc
ljmp
mov
mov
popa
addb
pop
and
mov
mov
lods
bound
sub
jnp
scas
aad
ret
clc
orl
ret
dec
sbb
xlat
pop
cmp
mov
mulb
inc
xor
mulb
mov
mov
jmp
inc
dec
jne
or
mov
cltd
xchg
mov
fst
movsl
xlat
and
push
mov
push
jae
push
call
cmp
jmp
xor
mov
movntps
imul
or
xchg
out
xchg
fistps
pop
test
andb
mov
mov
cmp
xchg
lods
adc
mov
push
ret
sbb
xchg
inc
and
mov
mov
fisubrl
xor
outsl
adc
add
push
aaa
call
or
sbb
jl
and
fcomi
ret
rcll
loop
xchg
add
sbb
and
fcmovnbe
gs
outsb
movsl
popf
xchg
push
mov
das
idiv
mov
add
and
std
push
fidivrl
out
cli
sahf
pushf
lahf
xor
iret
jae
sbb
fwait
inc
mov
adcl
ja
icebp
sub
cmpsb
cmp
cmpsb
sub
mulb
xchg
popa
out
lret
test
add
aam
lods
lods
jns
nop
cltd
repnz
icebp
cli
lock
test
mov
movsl
in
daa
jecxz
test
and
jo
adc
cmpsb
fldcw
cltd
insl
inc
push
fwait
adc
or
mov
push
xchg
cmp
push
sub
les
xchg
inc
lea
sbb
mov
mov
movsl
inc
push
stos
inc
fisubs
sahf
fildll
scas
xchg
xor
pop
andl
mov
pop
or
xchg
pop
stos
sbb
xchg
jno
sbb
xorl
loope
movb
insl
inc
push
mov
aas
jl
icebp
or
xchg
dec
sub
mov
sbb
jno
jmp
es
xchg
jmp
test
jno
ss
ret
mov
jo
sub
lods
sub
sbb
mov
sub
mov
mov
dec
push
mov
inc
push
mov
push
test
int
xchg
pop
lock
outsb
pop
rorl
insl
sti
lods
rcrl
arpl
jbe
or
and
fscale
mov
insl
loopne
jg
pop
sbb
xor
or
dec
cmp
inc
test
jns
or
shr
arpl
push
add
scas
cmp
ljmp
and
xorl
rclb
cmp
xor
dec
pop
adc
dec
lods
lock
imul
lahf
test
jnp
scas
mov
add
xor
or
inc
aad
in
out
cmpsl
aad
mov
js
and
fucom
cmp
leave
leave
pop
je
mov
cltd
sub
mov
mov
cltd
xchg
push
cltd
jg
std
cmp
sbb
mulb
das
dec
mov
push
xchg
jo
nop
mov
bound
out
push
jb
xchg
lcall
jbe
fsubrl
test
stos
lods
jne
and
or
pop
mulb
cltd
jnp
or
push
sahf
in
sarl
test
adc
dec
jg
test
cli
push
or
jmp
inc
cmp
add
ljmp
insb
jecxz
std
aam
popf
sbb
xor
cmpsb
imul
sbb
jno
jge
shll
dec
cmpsb
dec
jo
add
mov
addr16
iret
roll
fnstsw
jae
and
pop
leave
ficompl
int
shr
fisubl
in
js
push
pop
pushf
clc
insl
lds
fcoms
pop
popf
jb
je
xor
adc
xor
arpl
ret
xor
out
or
int3
push
cmp
loopne
sub
movsb
xchg
dec
xor
mov
clc
insl
test
lahf
mov
add
sub
aam
dec
adc
lds
daa
push
stos
adc
sbb
es
insl
ljmp
cld
pop
popa
jns
dec
mov
or
nop
stc
sbb
rol
jl
push
adc
cli
orb
dec
roll
pusha
stos
push
addr16
jge
xchg
add
cmp
inc
jnp
nop
fidivrl
rcll
jmp
dec
jne
push
cmp
filds
lcall
push
sub
xor
test
loop
fstpt
push
cmpsb
js
daa
inc
ficompl
insb
or
mov
sbbb
jne
loopne
scas
jne
jne
mov
pop
mov
push
sbb
pop
cmp
jae
fmull
xlat
mov
lods
or
test
loopne
push
leave
and
pop
jb
and
push
repnz
jle
out
adc
sti
dec
jmp
dec
mov
inc
inc
pavgw
xchg
fadd
adc
and
test
jne
test
cmp
mov
mov
push
gs
cld
and
stos
xor
sbb
sbb
add
mov
dec
xchg
add
jl
xchg
nop
mov
jp
mov
outsl
jnp
mov
cwtl
mov
test
lds
mov
cmp
movsl
shll
insl
dec
not
dec
cltd
iret
mov
jmp
or
adc
push
mov
jae
pop
pop
stos
mov
jnp
stos
fldl
test
push
cld
xor
fistl
jne
loopne
repnz
push
mov
cmp
xlat
insb
inc
pop
pop
cmp
dec
xchg
mov
and
test
mov
sbb
mov
mov
push
add
jo
xchg
rolb
cmp
mov
int3
daa
insb
jae
rcrb
cmpsb
mov
nop
or
out
out
repz
gs
add
xlat
iret
lret
stc
repz
xchg
movsl
or
adc
dec
sub
or
das
jle
jmp
nop
cltd
test
or
and
or
sbb
cmp
leave
mov
aaa
jne
xor
mov
scas
inc
ss
fcomps
movsl
xor
ud2
add
jg
pop
movsl
in
std
mov
xchg
xchg
or
outsb
arpl
or
lahf
inc
pop
das
out
cmp
insl
outsb
insl
mov
mov
fimull
xchg
push
add
pop
in
mov
jg
insb
es
jge
dec
out
mov
lahf
cmp
sbb
xchg
imul
das
mov
stc
and
ljmp
push
lret
pop
xor
sub
sub
mov
sbb
xor
loopne
mov
dec
sbb
mov
mov
sbbb
subb
iret
xchg
lahf
ret
insl
aad
int3
inc
push
cs
in
daa
jnp
xchg
cwtl
cwtl
mov
ljmp
test
xor
and
bound
push
mov
or
pop
fnstsw
mov
mov
xchg
loopne
fdiv
adc
adc
adc
lods
std
ja
aam
out
int3
inc
fcom
pushf
incl
or
xchg
xchg
lea
xor
add
sarl
xlat
cld
pop
jo
and
sub
add
sub
leave
push
push
dec
push
sahf
and
xchg
dec
jno
out
and
mov
mov
inc
push
rep
outsl
sbb
push
push
cmpsl
push
idivb
jge
rorl
cld
jg
mov
cwtl
stos
lcall
push
xlat
adc
sbb
cwtl
fs
xchg
sbb
mov
mov
mov
add
inc
xchg
push
jecxz
ds
xchg
std
movsl
outsl
in
jae
mull
sub
or
cmpsb
imul
stos
arpl
fisubl
jle
xlat
sub
mov
xchg
sti
ficoml
mov
test
or
mov
test
mov
push
dec
xchg
sbbl
ja
mov
jge
pop
lret
push
out
in
inc
cmp
out
pushf
jmp
adc
test
lods
pop
mov
jnp
cmpb
lret
add
addb
fldl
mov
or
push
ja
sbbb
pop
movsl
mov
loopne
jo
cli
std
sub
clc
mov
push
loope
sti
or
pop
in
xchg
shld
sub
fcompl
lret
js
dec
rorl
aad
or
cmp
xor
pop
loopne
nop
in
xor
mov
lea
outsl
sbb
lods
das
in
lea
aaa
das
add
cmp
jp
lock
and
mov
dec
adc
scas
fcoml
imul
jbe
adc
into
negb
add
push
cmp
jbe
xchg
cs
and
les
dec
ds
mov
lcall
jo
inc
int3
mov
ds
outsb
mov
mov
mov
aas
scas
mov
or
xor
adc
or
jl
out
pop
or
jo
sbb
push
add
je
pop
dec
repnz
jg
dec
out
and
cmpsl
adc
xor
and
data16
call
mov
insb
stc
cli
lods
int3
push
cltd
ss
fstl
jns
push
add
jns
out
scas
lods
pop
stos
jne
add
out
add
outsl
jmp
js
in
inc
out
lret
std
xchg
jmp
cmp
mov
test
fadds
in
in
imul
ret
xlat
cmp
ss
es
sti
push
imul
cmp
ss
and
jns
mov
sti
adc
jmp
lods
push
jg
adc
std
lret
xor
lods
xlat
rorb
cld
mov
cmp
sbb
mov
mov
jnp
js
pop
scas
movsb
pop
rcrl
call
fdivrl
sub
adc
mov
push
mov
addr16
pop
cmc
mov
scas
pop
cmp
fdiv
lods
sub
jp
ret
jmp
add
pushf
mov
stos
lds
ret
aas
adc
or
mov
adc
mov
xor
lods
cmp
push
mov
fcompl
pop
mov
lret
stos
cmp
mov
and
test
bound
and
in
mov
loope
mov
test
cmp
popf
leave
xor
ja
in
test
into
and
fs
lret
outsb
mov
std
cmp
pop
fwait
sub
adc
repnz
pop
or
mov
or
aaa
hlt
dec
cmp
subw
xor
movsl
xchg
pcmpgtb
inc
aaa
push
das
jg
test
iret
and
mov
jl
inc
adc
in
or
mov
jns
xchg
pop
mov
mov
adc
stc
push
xchg
sbb
jno
shlb
or
jmp
insb
outsl
pop
aam
cmp
inc
ret
push
pushf
jmp
clc
xchg
cmp
or
ret
mov
add
xchg
out
aad
outsb
jmp
mov
mov
mov
lock
mov
lret
mov
or
add
xchg
mov
lcall
or
das
push
lea
add
jno
not
fists
sub
imul
testb
adc
mov
in
xchg
jmp
inc
or
cmpsb
rclb
cmp
sbb
adcb
inc
pop
pop
and
popa
push
loopne
lret
rclb
call
mov
shrb
pop
out
xchg
pmuludq
popa
cmp
mov
or
mov
pop
stos
ret
jae
in
addr16
pusha
dec
lcall
aaa
data16
mov
cmp
aam
jnp
je
jae
pop
mov
or
jecxz
leave
adc
fidivs
pop
lods
outsb
cltd
jecxz
mov
mov
stc
std
fwait
fwait
call
lods
fsubrl
aas
jle
xlat
inc
leave
cltd
mov
lret
adc
out
mov
push
jg
sub
jnp
test
pop
dec
sub
push
push
fisttpl
and
lahf
add
repz
adc
or
lret
fidivl
dec
push
shlb
xchg
mov
sahf
mov
adcb
push
sub
arpl
imul
or
sbb
mov
xchg
push
mov
jno
in
sbb
cmp
mov
xorl
pushf
pop
jo
cmp
adc
sbb
sti
dec
jo,pn
in
dec
push
mov
dec
imul
xchg
js
pop
in
cmp
dec
bnd
scas
xor
mov
jns
mov
mov
cmp
pop
cmpb
jae
jg
jne
xchg
cltd
inc
sub
mov
shll
adc
decl
adcb
mov
push
pmullw
mov
and
ss
mov
inc
call
xchg
or
add
setl
daa
mov
shl
add
lret
xchg
sbb
push
cmp
dec
es
dec
push
pop
pusha
nop
pop
jns
fcomps
mov
jp
fnstenv
pop
xchg
ds
push
hlt
inc
mov
int3
int
xor
rolb
xor
jne
cmp
repz
lds
mov
xor
add
stos
jp
push
scas
test
hlt
mov
ljmp
jbe
pop
and
sbb
dec
add
mov
in
sbbl
mov
cmpsl
imul
xchg
lcall
jmp
xchg
fsubs
imul
fwait
mov
rcrl
jae
add
mov
mov
notl
cwtl
int
sbb
cmpl
sbb
js
insl
adc
inc
orl
fmul
out
inc
out
mov
jns
lods
int
mov
jns
nop
jae
psubq
aad
cmpsb
aas
das
popa
repz
dec
cmpb
mov
not
add
xchg
std
insb
shl
ret
ja
mov
int
fdivl
outsb
and
jae
loop
adc
mov
add
test
roll
into
jbe
cltd
mov
and
jnp
inc
mull
adc
stc
sbbb
jp
and
and
mov
mov
pop
hlt
repnz
data16
mov
inc
push
mov
xchg
jl
fcom
jge
in
push
and
in
add
mov
or
out
outsb
test
pop
in
hlt
sahf
sub
fdivl
adc
mov
mov
dec
jno
mov
dec
ss
adc
xchg
test
jge
sub
sar
icebp
lea
out
push
or
leave
mov
out
hlt
sub
movsl
mov
mov
jno
pop
leave
shlb
cmpsb
idivl
mov
bound
or
cmpsb
icebp
clc
fisubrs
popa
inc
int3
addr16
mov
add
lock
cmp
dec
pop
in
push
xlat
sbb
inc
and
add
pusha
sub
inc
jmp
test
pop
mov
sarl
in
add
mov
and
fidivrs
sar
je
fidivl
int3
cmpb
push
inc
mov
xchg
xor
inc
in
inc
or
or
sub
sbb
xchg
and
fwait
mov
add
dec
iret
sub
add
xor
dec
mov
pop
dec
adc
adc
mov
mov
je
movsl
jne
in
xor
push
arpl
fbstp
arpl
jmp
mov
push
pushf
dec
mov
in
jge
lret
pushf
sarl
dec
fstpt
dec
jae
ficompl
jp
lcall
shl
push
jo
mov
xchg
mov
mov
jmp
mov
cmp
inc
dec
mov
test
mov
cmp
call
xchg
jmp
mov
push
jp
push
data16
cs
dec
hlt
lahf
addb
mov
in
mov
dec
cmpsb
dec
dec
adc
test
mov
push
mov
and
inc
or
dec
orl
inc
movsb
inc
xor
adc
icebp
or
leave
cwtl
cmp
addl
jg
mov
movsl
xchg
mov
sbb
pop
mov
insl
mov
mov
lret
and
arpl
loop
ljmp
xchg
push
push
mov
ss
mov
xchg
inc
inc
inc
mov
out
jg
xchg
arpl
xchg
subl
pop
mov
sub
int3
push
incb
pop
outsb
sbb
and
bound
inc
bound
or
int3
sub
fiadds
sbb
push
std
push
mov
jne
and
ljmp
inc
stc
negl
insl
inc
pop
mov
in
and
mov
mov
pop
or
mov
scas
pushf
lret
leave
pop
sbb
adc
popf
lahf
pop
push
test
insb
sbb
ja
js
xchg
mov
pop
sti
fwait
xor
out
sbb
jne
imul
pop
pop
data16
faddp
mov
out
mov
je
out
xor
ja
or
cwtl
mov
pop
enter
je
add
jne
adcb
fidivrs
popa
jbe
pop
loope
scas
sbb
daa
sub
xchg
aaa
mov
cltd
into
arpl
imul
insb
mov
frstor
insl
stos
pop
add
gs
fildll
stos
xchg
lahf
jno
add
repnz
pop
lds
outsb
outsb
leave
pusha
stos
add
dec
stos
xchg
xlat
adc
jge
mov
scas
outsl
cmp
jbe
out
aad
xchg
subb
push
add
xorl
call
popa
les
in
pop
loope
mov
cltd
ja
inc
xor
mov
iret
cmp
add
lds
test
fs
xchg
mov
inc
addr16
cmp
decb
cmp
lret
cmpxchg
popa
notl
int
stc
sbb
xchg
fucom
mov
and
xor
js
cmp
imul
mov
in
mov
outsb
and
jno
popf
mov
jle
xchg
imul
and
int3
or
test
jecxz
cmpsb
lds
pop
sti
loope
or
nop
and
popa
frstor
add
inc
or
pushf
lods
sbb
int
ljmp
sub
sub
popf
sbb
xor
iret
aam
shll
into
int
addb
fisttps
insl
mov
idiv
xchg
int
push
push
adc
and
cmp
xor
lret
cmp
andb
dec
hlt
cwtl
loope
push
pop
in
inc
add
ret
test
mov
jg
add
dec
cld
jmp
lsl
cmp
mov
xor
aam
jo
out
and
cltd
repz
popa
out
cmp
xor
leave
leave
xchg
xchg
pop
clc
cmp
clc
jle
iret
inc
add
mov
jnp
in
jns
stos
add
mov
loope
or
adc
pop
out
das
mov
movsl
dec
push
test
mov
push
in
pop
push
hlt
mov
and
clc
aam
fsubl
popf
mov
xor
pop
es
ret
and
movl
and
outsb
push
pop
scas
push
lret
jle
lret
adc
mov
orl
dec
or
into
add
repnz
mov
push
cmpsl
cmp
inc
inc
mov
test
push
sub
xchg
push
mov
cmp
test
faddl
bound
adc
call
out
call
mov
in
xchg
mov
scas
mov
jns
pop
sub
mov
fisttpl
fxam
dec
add
icebp
cli
xlat
loop
xorl
push
enter
in
movb
and
jle
jmp
jle
dec
mov
ja
into
jecxz
pushf
mov
insl
roll
dec
cmp
insb
sub
in
pop
sbb
add
testb
dec
cli
mull
xchg
in
hlt
popa
xor
out
cmp
and
fstl
cmp
fdivl
adc
dec
daa
cld
jo
adc
mov
lcall
xor
not
stc
in
adc
jp
gs
mov
sahf
jae
popa
cmp
in
notb
jmp
adc
sbb
fxch
or
sbb
int
es
and
fsubp
push
push
xor
insb
mov
fisubs
adc
add
jbe
jmp
fidivrs
mov
mov
inc
jp
lea
xor
aam
int
mov
ja
xor
mov
clc
xchg
push
mov
das
popf
mov
fnstcw
and
hlt
test
mov
sti
test
pop
ja
fstpl
pop
popl
iret
mov
sarl
addr16
test
pop
or
in
fcoml
int
jns
push
lods
popf
cmpsb
mov
mov
cli
mov
fcoms
jb
mov
ficompl
mov
mov
rclb
lods
sub
enter
dec
fcmovb
roll
aaa
dec
aaa
sbb
mov
and
lods
jmp
iret
xor
pop
daa
imul
or
mov
jb
sbb
add
xchg
push
lock
insl
repnz
fwait
mov
mov
and
in
ror
popf
jns
rcrl
loopne
jle
into
sbb
lcall
fst
adc
or
test
xchg
jmp
jl
sbb
mov
sub
loope
scas
in
out
lret
push
push
dec
out
hlt
subl
sub
test
fsubrs
ja
xchg
shld
inc
in
out
mov
scas
mov
adc
mov
mov
cmpsb
ljmp
popa
out
jb
sti
ljmp
mov
cld
cmp
es
push
aad
aad
shl
jmp
pop
jecxz
sbb
pop
mov
or
cs
adc
stos
sahf
repz
test
sbb
cmpsl
std
fnstcw
nop
mov
xchg
pop
mov
movsb
and
mov
test
loopne
roll
sbb
push
push
rol
jb
dec
xchg
sbb
js
lods
fprem
dec
cli
jle
sbb
fldenv
std
lds
dec
iret
lret
mov
pop
out
push
add
add
push
cmp
mov
cmp
and
inc
adcl
orb
sbb
rorb
mov
notl
movsb
movsl
aas
mov
mov
data16
cmp
cld
mov
dec
icebp
sub
cmp
ror
adcb
pop
mov
and
jge
xchg
ret
cmp
jl
imul
icebp
int3
mov
inc
bound
das
adc
sub
mov
cmp
outsl
sbb
sahf
cmp
cmc
sbb
adc
jle
aam
cmp
mov
add
jne
sbb
jne
jge
push
inc
pop
push
fs
mov
fstps
mov
inc
insl
push
sub
fnsave
mov
test
dec
add
xor
es
xor
push
test
imul
divb
jno
sbb
adc
shl
js
stos
cmp
mov
sbb
rorl
movsl
outsl
dec
mov
daa
iret
jp
gs
sbb
and
movl
xchg
lret
dec
es
lods
pusha
add
fimuls
jg
mov
repnz
adc
xchg
jbe
cmp
pop
in
xchg
add
add
adc
adc
out
arpl
push
ret
push
mov
and
into
stc
cltd
inc
or
jle
cltd
dec
fmuls
adc
mov
adc
pop
mov
dec
push
f2xm1
hlt
gs
lret
les
cmp
mov
xchg
push
popw
cmp
repz
mov
lret
out
mov
and
sbb
adc
cs
xorl
mov
mov
pop
mov
jb
mov
imul
push
outsl
pop
aam
dec
js
jae
daa
xor
lea
or
fidivs
adc
push
mov
jne
cmpsl
mov
je
push
mov
xchg
in
add
mov
clc
mov
xchg
cmp
dec
mov
cmpsb
inc
insl
jae
ffree
inc
xchg
iret
jae
pusha
mov
adc
test
mov
loope
sti
sub
arpl
mov
mov
dec
inc
insl
rorl
sbb
dec
inc
adc
and
mov
ljmp
aas
xor
fnstsw
loopne
stos
dec
xchg
fisubrs
je
test
xor
imul
dec
or
ss
jne
lahf
inc
xchg
addb
mov
add
jmp
jnp
sbb
test
sbb
add
mov
cmpsb
fdivrl
inc
xchg
and
out
aas
xchg
sbb
setle
aam
dec
pushf
push
loope
stos
das
or
iret
inc
push
cmp
std
xor
xchg
dec
mov
cltd
adc
fidivrl
xchg
imul
push
xchg
inc
cmpsl
jno
sub
adc
pusha
loope
push
loope
push
fwait
cmp
clc
sbb
cmc
add
push
in
in
stc
pop
arpl
bound
imul
outsb
push
imul
scas
jb
mov
push
adc
cwtl
push
push
xor
test
jae
popa
fwait
inc
xor
stos
inc
out
jg
dec
cmp
clc
pop
hlt
imul
inc
insl
gs
out
cmc
xchg
cs
cmp
dec
or
inc
add
sbb
movsl
inc
rorl
adc
negl
fisubrs
mov
ljmp
fnstcw
push
xor
popf
mov
ljmp
sbb
sbb
sbb
scas
mov
sub
and
inc
ret
scas
jns
les
push
ss
into
cltd
push
push
lods
cmp
push
xor
xchg
dec
iret
mov
xchg
pop
mov
ja
jp
lea
xchg
or
mov
iret
cs
test
ja
lea
decl
daa
fidivl
mov
push
dec
jg
mov
int
mov
lret
pop
xor
mov
lcall
dec
jo
int
stos
push
xchg
ret
lret
ds
cmp
sub
das
aam
in
pop
mov
decl
cmp
pop
stos
loopne
test
xlat
mov
loope
jbe
dec
loope
jne
cwtl
or
mov
push
and
aam
aaa
test
fwait
adc
cmp
shld
int
dec
shlb
cwtl
push
pop
xor
icebp
fstps
and
cmpsl
lret
pop
xor
cwtl
pusha
pop
pushf
jbe
test
mov
jg
mov
xchg
sbb
inc
mov
loopne
sub
and
and
pop
repnz
test
pushf
jmp
pop
cmc
mov
in
inc
js
jno
xor
jl
cltd
mov
mulb
inc
mov
sbb
push
cmpsb
inc
aas
int3
xor
ret
mov
jmp
jmp
adc
sbb
inc
cltd
pop
add
mov
pop
pop
fstpt
mov
pop
fldl
push
int
cmpsl
inc
push
inc
inc
fs
add
adc
dec
cmovl
or
repnz
es
push
push
pop
push
xchg
arpl
popa
sahf
dec
sub
out
mov
push
jbe
sub
xchg
test
mov
and
mov
or
mov
jle
add
test
sti
xor
mov
loope
out
addr16
dec
or
cmc
in
clc
scas
push
in
push
adc
fistpl
jg
adc
stos
mov
jmp
xchg
imul
jp
into
mov
pop
cwtl
in
sahf
jns
test
mov
jmp
pop
xor
xchg
pop
lret
pop
pop
lcall
adc
xchg
dec
and
not
fstl
jg
decb
jmp
js
sbb
sti
adc
test
mov
ja
repz
xchg
loopne
std
gs
cmp
mov
xor
ss
rcrl
sub
test
xchg
iret
ret
mov
addb
test
dec
fnstenv
popa
or
fldt
sub
loope
sub
xchg
jge
loop
sbb
push
pop
inc
pop
pop
fistpll
es
fisubl
push
cmpb
add
mov
fldcw
stos
jne
ficompl
pop
mov
outsl
lods
les
aaa
fwait
out
pop
push
pop
out
stos
pop
add
cmpsl
mov
lcall
mov
lret
sbb
xchg
jb
mov
jecxz
jne
push
mov
scas
add
dec
shrl
popl
ds
inc
xor
mov
imul
sbb
sub
lret
rorl
fcoms
scas
adc
push
xor
loope
stos
add
xchg
decb
jle
pusha
pop
mov
imul
pop
inc
sub
fmull
and
dec
scas
jmp
repz
arpl
inc
fwait
inc
fs
outsb
ss
fsubp
les
jecxz
daa
lods
lods
mov
int
call
mov
mov
pop
sbb
js
jle
mov
pop
cmp
jb
jmp
dec
sub
jnp
push
push
cmp
stos
dec
aad
add
insl
pop
hlt
cmp
xlat
into
mov
repz
sbb
je
scas
xchg
cltd
mov
into
xchg
clc
push
fdivr
xchg
mov
adc
adc
xchg
push
loope
add
sub
jecxz
xor
mov
insl
shlb
sub
movsb
rcr
push
pop
fs
push
inc
adc
add
adc
popa
mov
in
dec
cmp
in
sub
in
mov
push
pmaxub
iret
lret
addr16
movsl
cmp
and
inc
outsl
push
sbbb
xor
push
mov
jno
xor
data16
jge
stc
iret
xchg
mov
mov
cs
popa
adc
push
in
mov
cmp
add
add
jbe
dec
push
pop
push
push
dec
xor
lock
and
add
int
leave
das
mov
push
mov
push
sub
xchg
ret
mov
sub
adc
add
mov
movsl
dec
mov
stos
arpl
movsb
test
mov
pop
push
stos
outsl
mov
mov
xor
jb
into
es
repnz
push
dec
lock
sbb
fcmovne
push
inc
push
repz
in
rcrl
fsubr
mov
and
nop
sub
push
xchg
jge
add
lods
xor
cmp
dec
jno
icebp
bound
sub
xor
jle
jno
mov
xchg
aad
rolb
imul
lret
xchg
sub
push
loope,pn
shrb
sbb
pop
cmpsl
push
xor
xchg
test
mov
cmp
xor
shl
adc
inc
rcl
ljmp
xchg
cmp
mov
mov
and
shlb
mov
xchg
push
xchg
jle
xchg
sub
in
and
or
in
sub
int
add
call
lcall
pop
dec
ucomiss
ss
cwtl
ja
in
pop
jmp
lret
sbb
ret
cmp
stc
js
pop
cmc
xor
inc
xor
cmp
sbb
shlb
add
pusha
mov
sti
mov
pop
enter
mov
and
repnz
mov
insb
mov
mov
cltd
ret
pop
and
lea
jnp
push
sti
pop
aas
imul
mov
adc
xor
mov
push
cmpsl
sub
push
mov
mov
in
inc
lahf
sub
push
adc
std
cltd
pushf
or
mov
ficompl
jne
xchg
push
mov
stos
pop
sbb
bound
pop
mov
adc
push
in
sub
test
and
adc
jns
push
and
cmp
in
sub
cmp
xor
lea
push
pop
outsb
ret
incb
pop
filds
dec
sbb
addr16
or
sbb
mov
ficoml
dec
stc
int
jae
out
cmp
mov
push
out
jae
lret
out
sbb
dec
xor
and
or
xchg
lea
xchg
jg
dec
adc
push
repz
cmp
scas
in
xchg
jb
js
xor
push
sbb
les
cs
cmp
dec
cmp
and
push
jge
inc
in
inc
shrb
and
cmpsb
pop
xchg
and
subb
lahf
sbb
insl
rol
movsb
mov
mov
loope
pop
fistpll
add
loopne
outsb
addr16
int3
fs
mov
pushl
sahf
jmp
mov
stos
and
xchg
xor
push
punpckhdq
repz
jecxz
imul
inc
xor
jl
andb
pusha
insl
mov
addl
test
sub
and
mov
sbb
add
aas
pop
clc
dec
push
movsl
popf
int
pop
aam
ss
adc
cltd
push
xor
mov
adc
aaa
int
dec
xchg
push
xchg
ret
mov
jne
dec
cwtl
jns
scas
cmc
sbb
inc
out
lods
icebp
push
cmp
test
mov
adc
sbb
sub
jle
movsb
pop
push
and
pusha
int
xchg
aaa
dec
xchg
in
inc
xchg
jecxz
sbb
or
pop
popf
leave
fistpl
movsb
inc
popf
out
jno
test
punpcklbw
into
pop
loopne
mov
ljmp
xchg
int3
pop
shl
xor
roll
push
cmp
cli
notl
es
cmp
sbb
sub
xchg
push
dec
add
sbb
jnp
pop
andb
mov
mov
lcall
aaa
pop
loop
aas
adc
push
imul
push
movsl
ss
imul
hlt
sub
addl
cmpsl
adc
das
jne
popa
inc
scas
xchg
lret
mov
outsl
idivb
leave
arpl
scas
pop
push
cmp
pop
mov
aaa
pop
mov
jmp
sti
jns
ret
lcall
and
pop
or
pop
repz
jg
cmp
jge
lret
sbb
xor
inc
cli
xchg
jnp
mov
cmp
push
lods
das
aad
jp
stos
jmp
cmpsb
ret
std
aaa
mov
xchg
loope
mov
fldenv
add
mov
fstl
jno
push
hlt
les
movsl
aam
mov
mov
jl
lea
daa
mov
mov
and
enter
pop
or
push
mov
pop
es
icebp
mov
imul
std
sub
lret
mov
adc
icebp
movsb
pop
sub
rcrl
std
not
addr16
mov
mov
inc
icebp
sbb
fcmovnb
addb
aas
pop
pusha
adc
aad
aaa
xchg
xchg
xor
jmp
cmovnp
push
jecxz
leave
aas
pop
inc
xchg
xchg
ret
add
xorb
add
mov
addr16
loopne
gs
jle
bound
data16
pslld
loope
inc
aad
mov
pop
scas
fisttpl
outsb
addr16
fs
pop
loope
not
ret
xchg
fdivrl
inc
hlt
jle
jg
cld
iret
ret
jae
add
bound
loop
int
lahf
cli
sti
dec
test
dec
cmp
mov
adc
pop
dec
cmp
mov
xchg
imul
push
loopne
mov
pop
inc
arpl
into
jmp
mov
lret
loopne
jns
xchg
lret
xchg
inc
mov
or
cmp
push
and
mov
orb
mov
jmp
sbb
mov
outsb
xor
jecxz
pop
cs
mov
add
into
cmp
xlat
icebp
mov
jb
mov
jg
hlt
mov
and
testl
add
mov
movsl
cmp
jae
ljmp
mov
cmp
add
stc
insl
inc
xor
inc
icebp
jae
divl
and
cwtl
cmc
pop
mov
sahf
sar
outsl
jne
mov
sahf
pushf
cld
stc
pop
sbb
xadd
dec
roll
mov
jne
out
push
pop
inc
pop
je
mov
fnstcw
mov
sbb
mov
fcmovnb
dec
stc
jmp
stos
push
out
jge
add
dec
xor
mov
sbb
ljmp
data16
faddl
ss
repz
push
ret
dec
xor
push
idivb
cwtl
fisubrs
je
mov
and
jl
mov
sub
call
fcoml
cltd
xchg
jnp
sbb
pop
movsl
jo
sarb
add
aaa
mov
mov
gs
es
pop
push
stos
stos
insb
pop
gs
sahf
leave
mov
sbb
cmp
pop
cli
sub
outsb
push
mov
popf
sbb
mulb
and
ss
xchg
subl
aas
fs
std
add
data16
aad
push
lahf
mov
xor
cmp
insl
sahf
mov
sub
repz
addr16
or
mov
cmp
test
iret
and
adc
lret
outsb
stc
aam
push
adc
aad
mov
push
pop
sbb
jbe
out
xlat
aas
push
xlat
pop
push
xchg
leave
jne
test
cmpsb
adc
pop
lods
sub
dec
or
ud0
dec
or
add
lret
shll
mov
add
addr16
push
cld
popa
mov
out
andb
mov
xchg
into
dec
enter
mov
cmp
cmc
mov
pop
ss
push
or
popa
push
hlt
test
mov
imul
mov
xor
test
stos
sbbb
cmp
jo
mov
js
dec
mov
in
fwait
mov
pop
cmp
xchg
dec
fists
int3
subb
mov
mov
add
ret
inc
mov
ds
adc
mov
dec
push
mov
rol
aaa
mov
jl
jbe
jecxz
dec
or
dec
mov
add
add
push
pushf
adc
mov
push
repz
xor
aaa
xchg
add
cmpsl
ja
mov
add
jp
dec
cmp
in
sti
jo
lret
movl
pop
jmp
cmp
xor
adc
lea
adc
jns
dec
cltd
insb
ds
inc
inc
ja
insb
sti
pop
cmpsl
jne
mov
les
dec
stos
lock
movsb
lods
jge
xor
push
xor
xchg
cs
inc
iret
in
scas
sbb
fs
shrb
cmovp
insb
ss
out
out
pop
mov
xchg
mov
imul
pop
pop
mov
pop
add
ja
movsl
mov
cli
das
icebp
adc
imul
cwtl
mov
test
xchg
out
subb
mov
cmp
xchg
push
inc
sbbl
mov
nopl
sahf
test
push
testb
pop
mov
mov
xor
xchg
push
jb
pop
leave
push
out
adc
and
fimull
xchg
leave
xor
push
jecxz
add
imulb
push
jle
fiaddl
lret
push
add
add
lret
mov
inc
pop
pop
mov
pop
and
inc
adc
push
imul
or
mov
and
popa
push
cwtl
insl
sbb
divps
idiv
loopne
scas
adc
out
push
inc
dec
sahf
xor
mov
das
cld
lea
add
fildl
addr16
ret
mov
jns
lods
mov
xchg
das
xchg
inc
test
sub
push
adc
xor
inc
fbstp
mov
mov
mov
jmp
sbb
lds
xchg
xor
inc
or
fldenv
leave
repz
adc
lcall
loop
not
push
jno
adc
dec
push
lds
gs
dec
inc
shrb
stc
call
mov
sub
xor
or
popf
outsb
cltd
push
cltd
mov
js
add
movsb
add
cmp
mulb
jae
pop
push
xchg
cmp
lods
adc
xchg
mov
test
int3
das
add
xchg
jmp
xchg
lods
pop
add
jl
sti
adc
or
leave
sbbb
loop
jno
xchg
xor
mov
sub
sbb
jae
rolb
xchg
xor
sbb
jg
jo
loop
add
jg
js
xchg
das
dec
test
pop
daa
sahf
xor
xchg
jl
lcall
push
cmove
and
sahf
inc
lock
movl
aam
adc
fcom
out
arpl
mov
enter
ss
hlt
ljmp
pop
and
rclb
push
aam
add
adc
rcrl
dec
push
cmp
lcall
mov
and
mov
jecxz
inc
xor
loopne
adc
xchg
jno
inc
mov
or
xchg
pop
jo
inc
fxch
sahf
add
aad
add
pop
stos
sahf
lret
adc
xchg
ljmp
jo
call
push
or
jl
mov
cmp
stc
scas
cld
int
mov
inc
mov
sbb
fwait
add
pushl
mov
mov
je
out
mov
popf
add
lcallw
fwait
push
cmpsb
out
mov
adc
sarb
push
xor
rorb
dec
cmp
push
push
and
sbb
cwtl
dec
test
add
pop
dec
or
fstps
icebp
lock
add
jo
or
sbb
xchg
insl
dec
mov
adc
movsb
xor
jmp
stos
and
dec
mov
das
lret
push
pop
or
lods
jmp
aaa
mov
arpl
ss
xchg
sub
dec
pop
aam
notb
push
cli
and
hlt
jl
push
enter
bound
test
dec
adc
lcall
and
mov
arpl
sbb
mov
lea
mov
leave
or
leave
fisttps
mov
cmpsb
andl
xor
dec
addr16
out
inc
shll
pop
pop
aam
push
jnp
sbb
xchg
inc
or
cmp
pop
stc
add
in
or
and
aam
pop
sub
lock
sub
xchg
and
outsb
test
jmp
in
or
inc
cmp
jmp
mov
cs
mov
add
cli
xorl
and
xorl
push
push
les
jns
daa
leave
cwtl
inc
icebp
fildl
mov
fiadds
sbb
dec
das
lret
mov
xor
stos
cmp
push
dec
xor
sets
aad
jg
cltd
pusha
push
jmp
mov
fiadds
lahf
call
andl
cmpsb
add
adc
jl
fsubs
dec
bound
or
shl
jge
pop
addl
mov
pushf
lea
xor
shl
jecxz
sub
mov
xor
or
movsb
push
jbe
xor
call
outsl
push
jmp
add
push
pop
xchg
jecxz
dec
daa
push
iret
inc
mov
xchg
popa
jmp
inc
rolb
sbb
sbb
add
js
ret
pop
pop
into
xchg
or
flds
mov
fs
push
xchg
push
xor
into
jbe
jl
pop
push
andl
rcl
push
insl
adc
xor
imul
or
xor
out
push
stos
mov
push
xchg
test
fisttps
aad
pusha
testb
sbb
push
mov
shll
aas
adc
jmp
fsub
iret
add
ja
stos
or
adc
pop
outsb
aaa
leave
call
and
nop
adc
lahf
aad
test
movsb
sub
cmp
dec
int3
sub
adc
inc
pop
dec
lods
aaa
cmp
mov
sbb
cmp
dec
mov
push
inc
mov
in
push
add
imul
add
scas
xor
inc
and
ficoms
xchg
mov
aam
mov
jecxz
dec
xor
cmp
fsubrl
rep
lahf
cmp
jne
xchg
mov
notb
mov
xchg
cmp
mov
mov
add
repz
mov
mov
cmp
dec
ret
xchg
pop
jns
mov
dec
outsl
nop
add
pop
repnz
xor
dec
nop
cwtl
xlat
cs
aas
or
int
mov
xor
insb
icebp
xor
push
daa
mov
hlt
mov
sub
das
ffreep
pusha
cs
push
xorl
in
repz
xor
into
pop
push
mov
push
or
sub
add
aam
out
iret
sub
or
xor
inc
in
push
inc
push
jle
inc
cltd
xchg
out
add
push
inc
mov
push
push
push
push
filds
cmp
notl
loope
pop
inc
or
push
cmpsl
cmp
pop
jge
stc
jl
add
mov
xchg
adc
jbe
ds
mov
cmpl
xchg
test
bound
loop
mov
mov
and
cmp
xlat
js
ret
stc
cwtl
xchg
mov
shll
jl
mov
or
lret
les
out
pop
stos
ss
push
sub
lcall
push
push
push
push
clc
push
shr
jge
xor
inc
fidivl
inc
mov
xor
xor
adc
data16
add
fdivrs
xchg
mov
xor
js
pop
cmp
and
mov
dec
or
fldenv
jge
stos
pop
repz
inc
add
cmp
mov
xchg
jp
add
pusha
jmp
mov
imul
xor
sub
add
addr16
outsl
jb
enter
lea
fnstenv
adcl
and
addr16
mov
add
dec
lods
inc
idivb
lds
inc
mov
fisttps
sti
xor
dec
sahf
insb
fistps
test
jle
insl
sub
testl
push
test
mov
out
rorl
mov
lcall
mov
stc
adc
sbb
sahf
sbb
out
lret
xchg
pop
adc
sub
mov
sub
gs
sahf
test
out
and
and
sbb
add
mov
popf
or
xchg
test
ja
cmp
pop
aad
sbb
cli
lret
ljmp
inc
sbb
lea
cltd
in
push
xchg
leave
rolw
lret
adc
mov
cltd
pop
lret
sub
xor
inc
xorb
pop
stc
sbb
inc
xor
lods
sbb
test
xor
fcompl
sti
ja
fistpl
push
or
inc
push
nop
and
mov
into
push
loop
sub
les
cmp
std
xor
mov
icebp
push
sub
mov
jae
insb
jge
mov
jmp
cli
adc
dec
mov
test
rcll
mov
mov
mov
sbb
mov
outsb
dec
add
xchg
xchg
test
mov
and
cmpsb
in
mov
xchg
loopne
das
call
out
inc
incb
popf
sbb
adc
mov
mov
jp
cs
adc
mov
ret
jo
xchg
arpl
pop
loop
jmp
sbb
lds
outsb
mov
xor
cmp
pop
aas
push
inc
pushf
insl
int3
repz
aaa
pop
adc
mov
xor
in
into
mov
jmp
scas
es
push
stos
out
and
sbb
cmp
fidivl
popa
dec
jmp
mov
cmp
sub
divl
ret
pop
mov
lahf
test
dec
bound
cmp
loope
push
daa
jnp
mov
push
pop
cmpsl
dec
je
mov
mov
or
pop
test
mov
popf
inc
fadds
cmc
call
ds
inc
cwtl
cmp
mov
stos
push
aas
pop
in
shl
inc
int
aaa
cmp
jle
lea
add
mov
aam
fwait
call
data16
cmp
int3
movsb
jg
pop
sbb
inc
or
popf
nop
jmp
mov
push
or
cld
sub
inc
sub
filds
stos
cmp
mov
mov
add
sbbl
jg
fistpll
or
imul
and
hlt
nop
testl
add
pop
cmpl
xor
pop
mov
cmp
or
push
scas
cmpsl
or
and
add
xor
in
adc
movsb
and
in
dec
insl
sub
fidivrl
mov
inc
aam
out
mov
pop
mov
add
cs
mov
mov
push
rol
xlat
jae
inc
sahf
outsl
jb
scas
inc
mov
or
movsl
ljmp
je
aad
jnp
inc
sub
lock
jl
adc
cld
gs
push
xlat
xchg
jge
mov
pushw
jnp
ljmp
nop
cmp
test
mov
dec
je
rcll
fnstenv
add
jp
push
insl
fsubrl
xchg
jns
rcrb
xor
fsubs
rep
js
add
sub
sbb
jb
add
rcrl
xchg
mov
pop
loopne
nop
mov
pop
mov
mov
add
jbe
popa
xchg
add
jbe
add
dec
les
daa
inc
xchg
push
cmpsb
sub
push
cmpsl
xor
push
cmp
cld
ficoms
mov
jbe
cli
jg
pop
push
and
jle
daa
jb
sti
jle
mov
pop
mov
and
xchg
mov
pusha
xchg
in
js
call
je
pop
fsts
fdivl
fcoml
fsubs
cmp
std
or
out
cmpsl
icebp
xor
fwait
inc
add
insb
push
or
ds
jge
addr16
push
dec
loop
scas
test
mov
push
and
bound
fdivrl
testl
mov
mov
push
add
jmp
xchg
mov
jp
mov
jns
lcall
sbb
pop
add
mov
ret
cwtl
dec
cs
incl
loopne
movsl
out
aad
in
imul
sbb
outsl
lret
aas
inc
int3
adc
repz
xchg
mov
push
fs
inc
push
cltd
loopne
mov
out
arpl
sbb
cmp
or
sbb
inc
cwtl
gs
insb
movsb
data16
fisttpll
push
jnp
popa
fadd
fs
fnstcw
push
jmp
imul
pop
jl
xor
test
jbe
mov
dec
mov
imul
sarb
xor
or
cmc
xor
mov
xchg
test
into
out
pop
mov
cltd
inc
leave
xor
orb
imul
cs
imul
fnsave
movsb
js
das
cmp
sbb
fidivrs
aad
and
int
jno
insb
jle
ss
fistps
sbb
scas
es
jns
pop
sub
or
loope
nop
pusha
jp
outsl
in
fsubs
inc
aam
out
cmpsl
in
jl
pop
mov
mov
mov
or
pop
cmp
rolb
lcall
mov
sub
xchg
mov
shlb
push
pop
shll
pop
arpl
in
divl
xor
dec
cmp
es
incl
inc
xchg
test
sbb
test
popa
pushf
jo
mov
xor
iret
je
pop
lods
add
ja
or
add
push
xor
shll
xchg
dec
jle
lods
out
sbb
push
push
mov
dec
mov
mov
imul
cmpsl
adc
inc
rcrb
add
and
adc
ficoms
pushf
ljmp
sub
jmp
mov
mov
ljmp
addr16
mov
enter
insb
push
pusha
add
movsl
mov
cmp
sub
imul
pop
into
mov
adc
repnz
fists
push
scas
mov
cmp
syscall
hlt
add
push
xor
cltd
rorl
testb
popf
pop
adc
xchg
les
in
je
clc
xor
stc
mov
dec
or
or
cmpsb
idivb
out
pop
repz
test
jmp
xor
push
adc
lock
jecxz
jecxz
inc
mov
and
ds
add
and
shrb
or
call
clc
push
lods
pop
pop
out
jno
push
jl
pop
fdiv
and
pusha
cmp
xchg
sbbb
imul
and
dec
and
add
jl
ret
jnp
inc
mov
sti
shl
insl
sbb
lahf
pop
push
mov
mov
insb
mov
outsl
cmp
cmpl
loopne
jnp
dec
dec
mov
addr16
xor
aam
outsb
in
push
repnz
lcall
xor
outsb
fisubrl
sbbl
jge
add
insb
jmp
mov
shl
imul
jecxz
push
pop
mov
dec
xchg
out
ficoms
or
sub
fistpll
dec
sbb
cltd
ret
and
pop
jecxz
pcmpeqb
in
fs
xchg
mov
pop
nop
pop
adc
or
ljmp
cld
sub
fistps
cltd
in
dec
cwtl
ds
loop
fwait
loopne
cld
lahf
xor
add
inc
push
mov
pop
xchg
dec
jb
das
imul
mov
dec
xchg
sbb
incb
adc
clc
out
or
popf
dec
jne
ret
xchg
push
and
jb
inc
add
jb
xchg
mov
push
push
mov
push
shrl
xchg
adc
push
push
push
and
bound
cmp
xor
xorb
inc
adc
pop
stos
or
dec
or
gs
repnz
gs
xchg
test
mov
cmp
stos
test
pop
sbb
jne
div
ret
out
das
push
and
xor
pop
mov
enter
jno
xchg
cli
loopne
sub
mov
sub
cmp
jmp
pop
enter
add
or
push
jo
mov
dec
cmp
out
dec
push
jns
mov
cli
cmp
jno
scas
jb
scas
mov
pop
clc
lcall
mov
jae
and
repz
std
or
fs
daa
scas
mov
add
adc
in
or
pop
cli
dec
adc
xor
pusha
pop
xlat
xor
mov
xorl
div
and
insb
add
ficomps
rcl
lret
jecxz
or
addr16
enter
add
xchg
mov
mov
mov
das
mov
cmp
cld
clc
xchg
lcall
insl
mov
xchg
xor
mov
in
xor
or
mov
sarb
jp
mov
and
dec
ret
cmp
cmp
cmp
popa
mov
mov
cltd
add
scas
cmp
dec
dec
imul
mov
pop
mov
jmp
arpl
jns
push
stos
mov
data16
cmp
sub
or
nop
inc
shlb
adc
aad
pop
jne
int3
fnclex
mov
ss
dec
hlt
push
lahf
loop
mov
add
jnp
mov
inc
lcall
jecxz
inc
icebp
cmp
icebp
pop
imul
mov
xchg
xchg
add
xor
cmp
xor
cmp
cld
js
insb
xchg
push
inc
imul
jmp
or
xor
push
hlt
test
lret
mov
cld
stos
mov
es
je
push
adc
jo
outsl
inc
add
arpl
mov
sub
or
imul
xor
lock
bound
sub
cmp
xor
loope
popf
stos
movsb
sbb
mov
dec
fnstenv
jns
mov
nop
daa
and
pop
xor
fstpl
out
or
mov
fisubrs
mov
fisubl
mov
andl
mov
jle
mov
movl
icebp
fadds
aas
sti
addr16
mov
addr16
mov
ja
mov
xchg
adc
shll
loop
xchg
mov
ja
mov
pop
jo
cmpsb
stos
ds
xor
inc
pop
aad
jle
enter
or
and
ljmp
loopne
push
xor
aaa
ss
mov
inc
call
or
repz
cmp
jp
jle
adc
lock
xchg
dec
iret
and
push
jmp
call
in
mov
frstor
sbb
insl
add
sahf
push
dec
adc
mov
mov
pusha
sub
stos
cli
out
stc
popf
sahf
cmc
fcmovnbe
fs
jl
call
xchg
push
adc
ss
mov
daa
jp
lea
lahf
lret
xchg
cltd
mov
js
push
aaa
ret
stc
in
sub
pop
loope
ljmp
cmp
outsl
out
shr
mov
mov
pop
mov
mov
movsl
sti
sbb
imul
sbb
push
sub
jns
adc
imul
inc
mov
inc
out
idivl
mov
and
mov
add
sub
popa
dec
add
das
cmp
cmp
push
push
dec
pop
sbb
in
fdivrl
loopne
mov
jne
ja
push
aad
mov
and
movsl
push
push
jp
sub
xor
push
fstpt
add
cmpsb
js
mov
lret
pop
jbe
or
cmc
ljmp
sbb
outsl
jge
and
ret
scas
add
js
les
icebp
jno
dec
js
aam
scas
jno
and
es
pusha
sbb
add
mov
mov
sub
mov
jg
into
xor
and
pusha
mov
cmc
ret
and
adc
out
adc
mov
mov
xlat
imul
shlb
bound
fs
adc
pop
jb
mov
push
lret
jbe
aas
pushw
hlt
mov
scas
dec
js
mov
aad
push
cwtl
adc
push
stos
mov
mov
jg
mov
sub
loopne
stc
cs
outsl
push
mov
in
mov
fstpl
dec
lds
mov
in
push
jmp
mov
jnp
xor
or
ljmp
ficompl
mov
mov
and
dec
lahf
loopne
and
xor
test
xchg
scas
and
aaa
iret
mov
inc
jae
pop
test
xchg
sbb
sub
gs
mov
mov
add
mov
adc
jo
mov
clc
leave
insl
rcr
and
xchg
jmp
cmpsl
stc
in
sub
pushl
mov
sub
int3
sbb
adc
data16
subb
xchg
jae
push
cld
outsb
and
ret
dec
mov
iret
movsl
inc
arpl
dec
es
cmp
aas
cmc
cmpsl
lods
stos
in
jae
xor
shrb
in
in
mov
dec
gs
movsb
xchg
hlt
addl
and
out
mov
clc
jmp
dec
sub
mov
fs
inc
adc
in
xchg
popa
jo
pop
cld
lea
fistpl
ret
xlat
out
jb
into
bound
push
xor
icebp
insl
nop
lock
dec
adc
js
aad
adc
fstl
test
fsubr
stc
sahf
arpl
orl
enter
cs
xorb
pop
imul
mov
lock
push
and
adc
xchg
and
sarb
xchg
jp
mov
negl
in
in
pop
sbb
ret
and
movsb
mov
int
lcall
sub
sahf
sbb
iret
mov
repz
adc
lcall
xor
adc
sbb
testb
push
jmp
dec
mov
mov
mov
xchg
mov
gs
add
out
mov
pop
lds
rdpmc
mov
or
lea
and
xor
ss
stos
pop
mov
in
sub
or
push
or
sbbl
cmp
inc
inc
test
into
pop
jle
repz
popa
pop
lcall
jecxz
sub
imul
lds
pushf
cmp
je
mov
ret
xchg
das
cmpsl
xlat
fwait
xor
mov
mov
enter
sbb
and
dec
lahf
test
pop
addr16
xchg
movsb
lahf
paddb
mov
es
push
add
mov
icebp
pop
xorl
lret
inc
sbb
mov
xor
push
inc
adc
mov
xchg
sbb
xchg
cmp
push
cmp
fimuls
mov
add
push
in
shll
lock
fidivs
pop
jnp
push
aam
push
sub
dec
jbe
vcomisd
cmpsb
mov
es
mov
push
mov
or
repnz
lock
jl
rcl
clc
adcl
iret
mov
stc
xchg
mov
cmp
xlat
mov
sbb
iret
mov
push
push
lret
loop
sub
lea
mov
test
out
sahf
add
lcall
pop
or
xor
out
dec
mov
mov
push
and
mov
sbb
lods
cld
clc
xor
aad
jp
xchg
stc
cmp
push
rcl
mov
push
movsl
mov
xorl
and
leave
fimull
outsb
in
mov
xor
sub
jmp
cmp
jnp
fisubrl
or
stc
js
xchg
gs
pop
addr16
mov
sbb
push
or
rcl
out
gs
add
iret
test
mov
mov
scas
pushf
sbb
push
inc
adc
push
daa
aas
fistl
test
cli
dec
mul
dec
fwait
dec
mov
mov
mov
and
pusha
and
dec
std
jge
inc
xor
sti
mov
jp
movsb
sub
rolb
mov
ljmp
push
jle
inc
jg
push
stos
push
xor
mov
lcall
sarl
jecxz
xchg
popl
pop
ret
jb
movsb
adc
add
ret
sbb
imul
push
ficompl
jg
sbb
hlt
push
outsl
icebp
outsl
lcall
xor
cmpsb
negb
xor
add
cmp
xchg
cmpsl
shlb
and
cmp
les
insl
ficomps
sbb
mov
pop
xor
sub
cmp
pushf
sarb
or
sbbl
pop
gs
push
mov
xchg
je
popa
js
aaa
outsl
inc
and
and
movsb
insl
mov
cmp
ja
fiadds
repz
push
inc
fmull
add
sub
outsl
xchg
mov
jmp
sti
ljmp
push
test
test
nop
sub
push
mov
mov
jecxz
shrl
inc
mov
cli
xor
jle
pop
out
jl
pop
mov
insb
lods
bound
push
push
std
lahf
xchg
pop
jae
mov
adc
push
imul
popl
and
pusha
pop
into
addb
inc
push
push
push
fwait
xchg
dec
jmp
pop
out
jns
pushf
xchg
ret
xchg
dec
pop
pop
push
stos
sbb
gs
int
mov
and
mov
lds
fs
fwait
lea
sub
lods
jns
mov
jge
inc
ret
sub
repz
xchg
loope
daa
stos
xor
jmp
scas
mov
jb
inc
sub
adc
repnz
rcll
lret
pop
push
pop
dec
push
fabs
and
inc
mov
ja
pop
fs
push
sti
incb
enter
pop
into
repnz
test
jnp
push
push
pop
and
addr16
mov
mov
fsubrs
and
mov
pop
and
divb
adc
adc
das
xchg
fimull
cmp
push
dec
sbb
mov
mov
push
push
andl
xchg
lret
fdivs
push
shlb
inc
cmp
xor
add
inc
or
jp
jle
and
shlb
movsb
xchg
mov
movsb
mov
xchg
lods
adc
dec
jg
std
cmp
dec
or
jl
out
scas
pop
fistpl
jns
sarl
and
sbb
xorb
outsl
and
jmp
and
popf
xchg
pop
jl
cmp
jns
push
in
sub
pop
aas
push
mov
push
into
jb
dec
ret
mov
call
cli
movl
cld
push
xlat
aas
lods
pop
or
inc
push
not
mov
lock
mov
jae
mov
clc
jl
cmp
xchg
dec
std
push
sub
jp
push
sbb
ret
nop
mov
mov
stos
jns
add
repz
jg
in
lret
inc
lods
loope
inc
sahf
cmpsb
cmp
cs
cmc
in
js
and
mov
jl
mov
ret
mov
xchg
xchg
pop
cmpsb
mov
push
inc
cmp
pop
pop
xchg
adcl
iret
xchg
push
jp
call
fimuls
jb
in
jb
inc
inc
xchg
pop
pop
insb
sub
test
jns
cmp
xor
mov
inc
jns
jnp
pop
cltd
dec
mov
add
inc
cmpsb
fisttpl
jbe
xchg
lret
or
outsl
ret
jge
push
mov
mov
stos
pop
pop
out
and
in
mov
mov
rcll
cmp
mov
xchg
mov
js
cmpsb
mov
inc
cmp
inc
xor
lahf
lods
and
fwait
xchg
popf
pop
stos
cld
ds
xchg
xchg
sbb
sbb
rolb
push
jnp
mov
pop
push
dec
sbbb
push
inc
push
sti
sbb
push
xchg
adc
stos
fdivrp
in
sarb
jbe
push
std
loopne
sub
jmp
fcoml
dec
loope
mov
mov
add
insb
gs
xor
loop
shll
fldcw
add
push
xorl
lods
loop
pop
sbb
inc
lcall
jno
xchg
enter
repz
leave
sbb
imul
out
inc
adc
pop
mov
push
outsb
dec
and
add
lahf
inc
fwait
sub
jge
pop
push
into
scas
fisttpl
jge
les
std
inc
mov
mov
add
lret
jnp
outsl
add
mov
incb
add
sahf
out
push
adc
movsb
out
cmpsb
jns
sbb
mov
jecxz
mov
dec
in
outsl
cli
pusha
jl
sysret
clc
and
mov
xchg
paddsb
add
negb
adc
fdivs
rcrl
jecxz
pushf
iret
dec
mov
ret
and
dec
mov
dec
ret
xor
mov
pavgw
dec
rcll
dec
mov
jns
cmp
cmp
fnsave
in
iret
mov
sub
xchg
ds
xchg
fldt
in
test
jne
clc
vfrczss
ret
jne
sbb
lret
repnz
sbb
cmp
arpl
mov
shlb
mov
mov
loopne
mov
pop
loope
inc
add
add
adc
js
shrb
mov
sbb
mov
adc
mov
out
daa
or
pop
xor
mov
jl
jns
mov
js
lret
movsl
ja
popa
adc
push
push
lret
fldcw
dec
stos
xchg
or
mov
cmpsb
popa
repz
cmp
call
repnz
pop
sahf
push
fsubr
cmp
mov
gs
imul
push
sub
add
inc
inc
pop
sub
sbbl
lahf
jecxz
lods
imul
cld
loopne
test
loopne
mov
or
and
xchg
clc
lret
popa
into
jbe
mov
rorl
mov
ja
addb
fidivs
aad
int
iret
xchg
cli
push
xchg
cmp
xor
push
sub
or
test
outsb
inc
inc
push
ss
adc
cli
cmp
ret
insl
je
inc
sbb
int
or
jl
jge
jae
mov
xorl
dec
pop
int
aaa
pop
push
int3
hlt
movsb
cld
es
shll
jecxz
add
push
outsl
cmp
out
addr16
mov
in
push
into
adc
dec
cmp
inc
xchg
and
add
repnz
pop
sub
mov
int
cli
imul
push
dec
mov
push
imul
into
aam
jp
cmp
adc
in
sti
jae
dec
add
cmp
mov
mov
movl
je
pop
mov
out
jne
push
pop
insl
arpl
or
push
mov
xchg
mov
inc
adc
pusha
inc
aam
fwait
cld
cmp
mov
das
loop
sub
and
add
inc
fimull
pop
stc
xor
ret
push
mov
mov
adc
mov
dec
inc
pop
sub
xlat
sahf
mul
gs
test
xor
mov
sub
sub
xor
jmp
bound
pop
pop
mov
out
addr16
and
and
mov
lret
and
inc
repz
sub
jge
jl
push
adc
jge
ljmp
jno
ljmp
fisubrs
dec
sahf
or
fcoms
jle
out
adcb
push
repz
loope
jb
pop
iret
sbb
mov
fimuls
test
cmp
dec
ss
cwtl
fstpt
jae
fsub
sbb
mov
data16
mov
movsl
cmp
cmp
xchg
in
dec
mov
cwtl
stos
cmp
aaa
ror
addr16
pop
sbb
sbbb
pop
fs
xor
mov
sub
sarb
sub
shll
mov
sub
out
cmp
lods
test
or
lret
cmp
push
add
jne
movsb
mov
out
out
cmpsl
sarb
push
add
rcrb
jo
dec
jge
pop
and
lcall
mov
loope
add
arpl
cli
xor
add
jl
cwtl
add
dec
cwtl
xchg
adc
inc
adc
or
cwtl
fidivs
rorb
leave
mov
jo
popa
repnz
and
mov
ret
fidivl
or
jl
ds
js
and
hlt
sub
test
mov
les
imul
sub
and
cwtl
clc
and
sti
pushf
fiadds
xchg
push
push
or
shlb
je
loope
jo
xor
aaa
bound
xor
cmp
add
mov
cmp
mov
shll
ja
and
or
mov
adc
ret
jmp
push
mov
notl
push
sbb
shll
adc
shlb
inc
lock
inc
rol
aad
clc
push
fmul
int3
jge
lock
xor
in
cmpsb
lods
ret
jns
fs
call
les
adc
xchg
scas
dec
sbb
push
jl
loope
xchg
sub
jno
or
lds
subl
pop
incl
lret
mov
adc
push
js
xchg
pop
mul
scas
shll
cmp
add
int
addl
das
fwait
sbb
mov
jecxz
xchg
in
sub
push
add
mov
push
mov
pushf
into
jns
test
mov
popa
jns
jae
push
cmp
sub
shll
mov
sub
imul
mov
inc
lret
pop
cmp
in
or
jp
rolb
ljmp
mov
out
fidivl
fldln2
push
mov
leave
pop
xchg
inc
les
push
insl
mov
aam
add
xor
cmp
outsb
cwtl
movsb
xchg
jecxz
adc
jns
cs
out
or
cmpsl
pop
push
jo
movsl
lods
xchg
icebp
das
jno
cld
cmp
inc
xor
mov
stc
int
pop
or
xor
jne
push
cmc
dec
push
in
mov
xor
gs
lahf
pop
out
mov
sbb
loopne
jle
xor
mov
and
xabort
xchg
outsl
das
mov
daa
outsb
int3
movb
mov
jl
loope
mov
mov
add
loop
adc
adc
jb
stos
or
adc
adc
xchg
jge
mov
push
fsts
mov
cli
imul
cmpsl
xchg
adc
and
out
popa
and
cmpsb
hlt
pop
add
sub
mov
popf
xchg
mov
xrelease
shl
aad
scas
cltd
subb
jle
adc
data16
test
xchg
std
lock
daa
or
add
iret
dec
das
cmp
inc
out
push
jge
leave
push
hlt
and
outsl
mov
mov
lods
cmp
mov
sahf
mov
sub
pop
in
inc
inc
daa
pop
in
hlt
pop
cmp
cmp
loope
hlt
outsb
pop
divb
movsl
hlt
and
cmp
pop
test
les
pop
jo
xchg
call
push
imul
or
je
popf
push
lret
sub
mov
push
jne
fcoml
cld
sbbl
addps
mov
cltd
dec
xor
add
mov
iret
pop
sbbl
movsb
fmul
jp
cwtl
shl
repnz
shlb
or
xchg
fcompl
int3
mov
push
sarb
and
sbb
mov
incb
and
xor
pop
dec
sahf
popa
cmp
push
idiv
psrlq
lods
scas
andb
xchg
push
jp
push
fidivrl
mov
cmp
test
add
imul
out
arpl
and
or
lds
add
adc
std
mov
movsl
cmpsb
outsb
dec
dec
ss
je
jo
push
mov
rolb
repz
xchg
inc
std
cmc
int3
cmpl
loope
inc
xor
ror
xchg
mov
outsb
adc
test
lods
les
lock
xor
cld
jmp
into
add
add
add
inc
mov
push
shlb
cmp
jle
scas
lret
jp
js
xchg
lea
jmp
test
stc
sbb
jge
iret
sub
mov
pop
in
imul
enter
inc
repz
xchg
push
fs
negb
scas
xchg
sub
pop
ret
inc
push
mov
sahf
outsl
push
lcall
dec
or
jge
icebp
scas
arpl
and
aad
and
or
xchg
mov
jecxz
mov
jmp
fcom
fisubs
les
xchg
push
shlb
inc
testb
lea
jecxz
mov
inc
lock
add
sub
jno
sbb
mov
cwtl
in
cmp
cltd
into
shl
outsl
jmp
repz
aam
es
pop
or
shlb
gs
aas
and
movsb
fstps
shl
ret
out
jbe
fs
jo
scas
and
movsl
or
mov
les
pop
push
stos
aaa
aam
test
les
add
xchg
popf
fbld
mov
push
in
adc
add
inc
sub
in
loope
andl
lret
jge
xorl
bound
adc
jae
stc
sub
cmp
out
sbb
loop
daa
popl
push
dec
adc
insb
mov
inc
xchg
xor
outsl
inc
and
and
lahf
adc
popa
imul
inc
nop
stc
and
aad
cmp
div
xor
addb
loopne
jmp
xor
mov
xchg
cmp
loop
pop
inc
sub
in
loopne
cmpsl
daa
scas
out
push
jmp
push
push
push
test
mov
inc
pop
fcmovb
mov
jp
test
cwtl
scas
cwtl
dec
inc
sbb
push
xchg
mov
int
ds
fwait
xor
push
add
out
dec
std
sub
mov
iret
shl
or
stos
pcmpgtd
in
xor
enter
mov
or
dec
xchg
xor
fisubrl
dec
adc
cmp
mov
clc
inc
std
mov
stc
pop
pop
mov
inc
mov
ficoml
sti
rorb
fcmovbe
mov
push
xchg
in
adc
dec
jnp
sub
jmp
inc
fcompl
lret
inc
jnp
dec
rcr
sbb
xchg
add
sub
mov
loopne
pushf
int
sbb
cltd
imul
dec
or
xlat
movsl
adc
sbb
sbb
sbb
or
aas
andl
adc
and
push
clc
push
push
pop
sbb
sbb
lock
mov
jne
lods
out
movsl
call
jmp
fs
push
dec
jnp
pop
adc
shll
xchg
shlb
adc
je
add
jne
jbe
ss
jne
push
mov
das
cs
mov
sahf
rcrl
mov
jg
rcl
jge
shl
xchg
stc
sub
sbb
iret
adc
dec
sbbl
das
pop
dec
lret
add
test
mov
xchg
scas
loop
or
gs
adc
push
sti
jno
mov
cld
test
popa
pusha
and
push
bnd
mov
sahf
add
aaa
inc
xchg
sub
xor
inc
pop
xchg
stc
sbb
sbbb
push
sub
mov
cmp
xor
rol
pop
jmp
jle
pop
jecxz
fstpl
fildll
jmp
test
xchg
mov
or
mov
jns
inc
and
mov
pop
mov
in
fwait
cmc
icebp
and
negl
loop
jp
aam
push
fadd
mov
into
inc
cld
lret
insl
mov
mov
mov
sub
or
mov
jg
mov
jne
aad
xlat
jnp
nop
stos
push
jl
fimull
add
mov
ss
daa
push
pusha
add
pop
sub
rorb
shrb
test
gs
pop
mov
popf
in
scas
push
cmp
ds
cwtl
daa
mov
pop
enter
push
fmulp
fwait
ja
sub
mov
pop
inc
sahf
subb
lds
jmp
or
lea
cld
sbb
ja
pop
cld
clc
jle
add
pop
mov
inc
fadd
fistpll
push
mov
add
in
mov
add
lret
ja
loope
dec
mov
pushf
adc
jp
sub
push
cmp
push
push
jg
jle
in
dec
dec
or
dec
movsb
fiadds
lret
mov
dec
adc
insl
dec
loopne
sub
pop
inc
push
mov
testb
adc
insb
push
fiaddl
sbb
inc
bound
jns
sbb
mov
or
dec
ljmp
inc
insb
or
movsl
and
jmp
out
push
push
nop
adc
out
xor
lods
sub
mov
add
aad
dec
xor
pop
xchg
inc
push
rep
popf
push
imul
aad
sbb
dec
xor
lcall
mov
pushf
dec
lret
leave
push
cltd
insl
xor
or
cld
mov
leave
cmpsl
sub
xor
movsl
aad
or
insb
ljmp
leave
mov
or
scas
mov
cltd
test
pushf
mov
mov
jo
test
or
sbb
out
lret
sbb
push
push
ret
fsts
test
cmpsl
and
inc
pop
add
pop
mov
cld
pop
mov
pop
je
jge
inc
sarl
cmpsl
movb
cmp
bound
jle
mov
mov
cmp
and
lret
les
push
xor
mov
adc
cmp
cmp
addr16
int
mov
pop
ret
das
mulb
roll
repz
mov
sbb
outsb
cmc
sbb
in
daa
inc
cmpsl
call
daa
lds
lods
add
cwtl
dec
fbstp
test
jmp
add
lahf
fsubp
or
les
cmpsb
lock
loopne
or
in
jecxz
mov
mov
lcall
push
lret
bound
dec
mov
xchg
in
test
cmp
or
or
in
push
out
add
sbb
or
mov
cmp
push
add
sbb
loopne
mov
inc
sbb
mov
add
and
aas
pop
pop
xchg
in
xor
fildll
mov
jecxz
sbb
adc
pop
cwtl
outsb
pop
imul
je
mov
aas
mov
lods
sbb
mov
cmp
inc
mov
stos
cmp
cmpb
jge
or
jecxz
scas
in
mov
rolb
pop
mov
call
faddl
shll
stc
mov
mov
fldenv
mov
shrl
push
int
fiaddl
rolb
arpl
cld
sbb
aad
inc
inc
push
xor
xchg
and
mov
test
je
movsl
cmc
mov
cmp
xor
jno
popf
fisubs
xor
inc
jecxz
fwait
lahf
outsb
call
cltd
dec
mov
test
pop
mov
js
push
daa
clc
xor
lahf
fnsave
mov
inc
xchg
adc
test
test
and
and
xor
add
pushf
popf
dec
push
sbb
mov
fldcw
les
cmp
xchg
or
daa
push
idivl
leave
outsb
jbe
xchg
push
dec
popf
adc
aam
leave
dec
fildll
rcrl
aad
xor
inc
or
daa
fcompl
push
andb
inc
xchg
mov
mov
lcall
jge
stos
inc
in
stc
cmp
sbb
jle
xor
mov
testb
mov
or
sbb
mov
mov
rep
pusha
xor
sbb
clc
and
xchg
jne
push
insb
add
cld
test
cmp
lods
push
mov
fiaddl
stos
mov
fistl
push
or
bound
mov
adc
ljmp
out
sbb
dec
outsl
iret
stos
and
xor
mov
test
movsl
sarb
arpl
inc
pop
hlt
push
xor
cli
imul
jge
es
mov
push
dec
sti
xor
xor
cmp
pop
adcl
jmp
mov
jge
js
cmp
es
imul
mov
inc
mov
dec
pop
scas
inc
sbb
outsl
and
jecxz
bound
xorl
sub
mov
jmp
jnp
stos
mov
add
lods
add
mov
fcmovnbe
lea
jp
push
pushf
out
je
int3
into
jle
add
fmulp
add
inc
popa
arpl
je
jl
jg
add
fists
push
hlt
ret
sahf
cmp
aam
fmul
mov
lock
out
push
pop
sbb
pop
pop
addr16
hlt
xchg
out
hlt
repnz
cmc
mov
cld
mov
ljmp
cmp
or
jbe
shlb
lret
daa
or
inc
daa
cwtl
and
dec
sbb
lret
adc
add
mov
scas
test
xor
mov
pop
dec
sub
jle
dec
mov
icebp
popf
imul
je
push
sbb
pop
mov
out
out
out
sub
sbbl
test
addb
jge
ja
into
push
adc
cmpsl
cmc
mov
lods
push
jo
inc
imull
cmp
mov
jmp
and
add
das
pop
xchg
add
mov
dec
adc
sti
mov
jo
push
xchg
inc
imul
push
xchg
dec
nop
or
ret
mov
mov
ss
add
mov
mov
scas
xchg
stos
lahf
shr
bound
sbb
out
imul
dec
jge
inc
xor
xor
cmp
dec
and
scas
mov
pop
xor
mov
testl
inc
arpl
inc
adc
dec
insb
xor
mov
movsb
imul
jae
loop
and
dec
pop
inc
lds
lods
mov
inc
xchg
fwait
repz
dec
jmp
push
mov
xchg
aaa
sub
dec
scas
addr16
jmp
lahf
mov
cmp
push
mov
gs
sahf
mov
jmp
idivl
pop
pop
push
cs
les
sub
les
xor
inc
es
jnp
jne
inc
daa
sub
xor
mov
inc
sbb
lods
jae
js
in
push
movsb
das
mov
sbb
test
les
mov
inc
mov
add
lea
jg
das
adc
xlat
imul
cmp
outsl
frstpm(287
out
or
push
or
andnps
leave
xlat
lds
ja
cli
lahf
loop
sbb
repz
pop
sbbb
popa
sub
sbb
pop
das
aas
xchg
cmpsb
aaa
pop
repnz
mov
sbb
sahf
inc
mov
xor
jge
inc
xchg
adcl
inc
pusha
xchg
dec
adc
lods
adc
sbb
loope
js
clc
pop
jle
pop
sysenter
movl
fsubs
sub
mov
insb
mov
jb
test
and
push
test
shll
dec
shlb
lock
jnp
adc
jmp
mov
movsl
inc
xor
xchg
adc
stc
mov
icebp
loop
lahf
mov
pusha
dec
in
sahf
shrb
dec
lret
and
rclb
mov
push
push
push
pop
inc
inc
lret
dec
imul
mov
sbb
mov
push
pop
aaa
fs
shr
xorl
adc
sub
mov
lds
mov
ret
pop
sub
mov
jle
cwtl
xor
jmp
js
mov
dec
hlt
aaa
ret
push
sbb
adc
xor
cltd
mov
clc
and
xchg
inc
add
in
mov
movsl
call
mov
out
mov
push
xor
je
inc
decl
icebp
shr
mov
mov
dec
loopne
lea
mov
fsubrl
sbb
dec
mov
iret
inc
imul
cmc
sub
jns
jnp
int3
pop
bound
add
pop
dec
testl
lock
fmull
lock
loop
sub
adc
push
push
outsl
imul
sbb
cmp
xchg
aas
das
cli
mov
leave
leave
pop
ficomps
sub
xchg
aas
dec
leave
inc
jmp
mov
nop
pop
out
rcl
cmpsb
fcoms
xor
call
mov
lods
repnz
aad
inc
in
movsb
jle
add
fsubrs
fs
xor
sbb
pop
mov
pop
sahf
aas
cmp
imul
push
inc
push
jbe
mov
outsb
pop
pushf
int3
dec
ljmp
shrb
je
push
shl
pop
sbb
push
rolb
cmp
insl
popf
dec
mov
inc
sbb
jge
in
popa
or
adc
repnz
push
xchg
lahf
test
cltd
dec
mov
fadds
mov
push
mov
mov
lds
jg
insb
dec
ror
cmpsb
jbe
push
sbb
cwtl
pushf
ds
jle
add
lcall
cmpb
popa
js
pop
ss
mov
lcall
push
and
inc
adc
loopne
sbb
mov
out
mov
adc
aam
mov
out
mov
jno
popf
movsb
mov
pop
test
xor
dec
icebp
insb
shl
and
stos
in
lds
scas
jne
insl
imul
dec
xchg
mov
push
sub
jge
addr16
daa
out
cmp
mov
pop
ret
jbe
xchg
push
or
lock
vpshad
mov
test
push
fnstsw
mov
and
add
repz
add
add
insb
ds
mov
adc
std
cs
test
gs
sbb
sbb
mov
leave
lea
int
movb
into
push
add
in
movl
movsb
bound
add
aam
rorl
add
cmpsb
ss
cmp
and
fists
xchg
mov
mov
inc
or
pop
dec
mov
sbb
in
insl
pop
pop
roll
xchg
cmpsb
ja
fbstp
in
push
add
adc
stos
iret
dec
in
cmovp
aas
bound
into
lcall
aas
sahf
fbstp
aad
mov
loope
fwait
lods
fldl
inc
add
test
int3
cmp
push
lea
push
cmp
scas
cmp
inc
scas
inc
ret
jno
push
and
repz
dec
je
add
dec
dec
outsb
adc
and
mov
fdivp
and
jp
jb
adc
leave
test
or
push
enter
mov
push
xchg
dec
inc
fcoml
sbb
fnstcw
and
test
leave
sbb
clc
inc
addr16
sbb
aam
in
inc
mov
pop
inc
or
rolb
out
inc
lods
jecxz
int
sub
add
je
dec
mov
leave
sub
xchg
lret
cmp
mov
adc
adc
jg
jl
jmp
cmp
imul
mov
cmp
pusha
scas
adc
dec
add
jecxz
stos
ret
loop
jmp
sti
rcr
fnstcw
movl
and
add
ret
mov
repnz
enter
dec
insl
mov
cs
arpl
ret
dec
dec
jp
inc
xchg
mov
fists
xlat
fisttpll
or
ss
cltd
jbe
pop
lock
mov
jae
mov
test
enter
mov
xlat
cmp
adc
adc
leave
xlat
idivl
sahf
bound
xor
mov
test
mov
sahf
ret
dec
push
xchg
imul
dec
add
fistl
jno
jge
and
push
xchg
cmp
xchg
xchg
cli
nop
add
bound
test
loop
mov
bound
add
jle
mov
pop
shrl
sbb
out
adc
fldcw
mov
repz
shlb
sbb
sbbl
fnsave
stc
aad
repnz
jb
pop
lret
push
sbb
mov
popf
out
mov
add
xor
sbb
jl
aam
mov
es
push
or
fists
fldcw
sti
mov
mov
loop
iret
movsl
insl
fwait
add
adc
xlat
push
aad
push
inc
ret
ret
outsb
mov
add
stos
mov
and
stos
in
shll
adc
xchg
jecxz
add
jb
hlt
aad
fisubs
sbb
mov
mov
add
sahf
cmp
sbb
subb
fwait
adc
mov
inc
in
fwait
mov
dec
iret
mov
mov
icebp
cmp
or
xchg
imul
xor
test
sbb
js
mov
jo
push
lahf
sahf
movsl
popf
rolb
add
icebp
sub
add
ret
jo
daa
sbb
jg
hlt
jno
sti
pop
sahf
jle
ss
and
and
in
sub
mov
rolb
cs
out
ds
xlat
lods
shrl
xchg
leave
sbb
mov
mov
decl
xchg
lret
or
sub
and
ds
or
test
insl
xor
adc
push
add
xor
xor
lock
mov
subb
ficoms
jg
popa
test
daa
nop
pop
inc
movsl
mov
cmp
pop
repnz
ja
divl
lods
rcrb
or
hlt
sbb
mov
loop
repz
jl
pop
xorl
outsb
cmp
movsl
jb
xchg
mov
jno
pop
jge
cmp
inc
xchg
loopne
ret
andb
adc
pop
inc
shr
push
mov
jp
in
icebp
push
insb
ss
pop
mov
arpl
stc
sti
mov
fildll
orb
cmp
pushw
enter
jmp
fmulp
outsb
dec
cmp
push
mov
mov
xchg
push
xlat
mov
sub
push
andl
cwtl
jle
dec
std
dec
repz
into
sub
push
hlt
ljmp
sbb
xchg
in
fdiv
gs
lea
lret
mov
push
inc
lea
dec
lods
push
mov
popf
xchg
shll
jle
in
inc
std
lahf
jp
jbe
aad
cmc
mov
pop
scas
outsb
mov
lods
pop
jne
lret
pop
jge
sbb
pop
daa
xor
xor
leave
and
and
mov
cld
stos
sub
negb
jl
scas
mov
mov
or
xor
addr16
dec
lret
ds
fwait
test
pop
adc
enter
jl
out
push
sbb
or
mov
adc
pop
jecxz
rorb
fbstp
mov
xchg
ret
js
xchg
xchg
ret
jns
jns
hlt
xchg
jno
jmp
xchg
aaa
rorb
and
xor
dec
cmp
pop
shrb
cmpsb
jecxz
mov
fcmovu
or
mov
cld
xor
imul
notb
mov
mov
je
inc
xor
inc
inc
shl
std
imul
lahf
repnz
dec
mov
adc
aad
mov
loopne
push
mov
loope
test
in
cmp
mov
xchg
aaa
iret
lahf
gs
mov
mov
jo
pop
dec
inc
jb
js
in
iret
xor
pop
fs
cmp
mov
shr
jbe
xchg
jbe
cmp
rol
add
das
adc
or
ret
addb
ret
push
xchg
aaa
cli
jecxz
lret
sbb
out
shrb
mov
fisttpl
shll
mov
pop
mov
pusha
in
jne
popf
sahf
cld
xor
push
movsl
cmpsl
or
test
or
and
inc
xchg
fcmovnbe
frstor
imul
mov
xchg
stos
jmp
stos
cmp
mov
adcl
pop
movsb
xor
sub
pop
cmp
lds
fistps
adc
shl
xchg
jae
jo
int3
out
jl
ds
push
cmp
lock
aam
sahf
adc
adc
xchg
popf
in
test
xchg
fimull
lock
data16
sbb
add
repnz
imul
or
xor
pop
xchg
xchg
jle
inc
and
sbb
xchg
pop
mov
mov
dec
cmp
imul
xor
pop
andb
pusha
out
imull
fidivs
in
sbb
pop
call
bound
sub
ja
cli
adc
icebp
std
adc
cmpsl
xchg
mov
push
xchg
xor
xor
in
xor
sub
mov
stos
mov
loopne
sub
mov
fiadds
xchg
mov
cmp
rorb
lcall
sti
jg
and
adc
data16
push
xor
xchg
hlt
cmp
jno
pop
shll
xor
and
mov
adc
xchg
inc
push
dec
or
sbb
jno
out
addr16
xlat
jb
sub
mov
inc
sbb
lret
push
or
shrl
push
xchg
clc
ficoml
gs
fistps
jg
pop
shr
dec
dec
stc
and
xorl
mov
sbb
enter
cmp
loop
ds
ret
sub
adc
sbb
xchg
frstor
dec
cmpsb
and
nop
xor
decb
ja
lcall
in
or
lods
inc
xor
iret
xor
jo
push
mov
js
sbb
pop
push
sarl
bound
movsl
mov
dec
mov
nop
push
mov
lock
aam
sub
jae
pop
out
into
insl
push
mov
mov
std
js
pop
inc
mov
test
adc
or
mov
or
out
lock
sub
fstpt
dec
push
pushf
lret
mov
add
adc
xchg
jb
ljmp
imul
mov
sbb
adc
pop
mov
adc
or
xchg
data16
inc
pop
and
cld
testl
inc
sbb
jl
aas
imul
pusha
jp
jno
lea
arpl
frstor
pop
mov
dec
leave
sub
dec
leave
adc
test
jecxz
xchg
xchg
adc
sbb
mov
and
fistpll
test
rcrl
packssdw
or
out
mov
xchg
mov
out
sub
sbb
push
mov
dec
xlat
popa
pop
xor
push
stc
jle
movb
jl
or
inc
xchg
sub
sbb
lods
push
jnp
lds
mov
mov
add
sti
icebp
jbe
sub
dec
ret
and
aam
push
jnp
ss
jmp
xor
sbb
and
cmp
popf
aaa
cmp
scas
fisubl
mov
nop
int
push
imul
int3
in
orb
std
mov
push
push
es
movsb
mov
test
ss
int
jb
fsubr
cld
ds
pop
lcall
inc
jle
mov
sbb
ss
sbb
cmp
sbb
dec
xchg
adcl
test
push
stos
sub
xor
fwait
popf
out
mov
or
mov
sub
dec
push
nop
sarl
cmp
movsl
sti
and
cmp
or
pop
movsl
inc
inc
mov
call
adc
aam
cwtl
jb
sub
jnp
mov
es
mov
ja
insb
stc
fdivr
aad
dec
xchg
imul
xchg
pop
lcall
popa
mov
ljmp
pop
das
imul
sahf
dec
outsl
fmul
in
aas
pop
cmp
ds
aam
add
push
fadd
add
add
js
or
imul
rep
js
adc
dec
push
shll
and
mov
push
and
dec
loopne
cmp
xor
pop
imul
sub
movsl
mov
mov
push
adc
pop
out
jecxz
mov
adc
cmp
js
test
shrl
xchg
push
or
test
push
lcall
inc
push
in
lods
ret
jns
dec
mov
mov
insb
mov
or
sti
xor
mov
add
scas
in
aad
into
sub
into
popf
sub
jg
jl
pop
adc
fmuls
mov
xor
test
mov
sbb
xor
push
mov
out
mov
fcomip
into
mov
jecxz
mov
push
std
or
stc
dec
cmp
popf
pop
sbb
fbstp
scas
xchg
inc
cmp
not
xor
mov
out
or
xor
jnp
sahf
pusha
imul
cmp
mov
rcl
test
mov
cltd
enter
and
sarl
add
sbb
rorl
or
das
xor
ret
rolb
movsl
out
mov
or
test
imul
lret
stos
ret
fists
fwait
lock
aam
jl
in
out
fidivrl
inc
lods
and
xor
das
stos
jne
gs
xchg
aam
mov
lods
sub
add
ss
test
pop
mov
popa
push
into
add
sub
aaa
inc
dec
mov
popf
setnp
insb
push
adc
push
and
cs
mov
data16
pop
and
lock
fistps
jno
loopne
or
add
shrl
testb
mov
push
mov
or
outsb
push
mov
jbe
mov
ror
int3
call
lret
cmp
pop
rorb
in
adc
lret
scas
inc
or
sbb
gs
lds
inc
in
push
stc
xlat
cmc
pop
push
hlt
push
inc
mov
xchg
clc
loopne
push
pop
xchg
je
icebp
and
clc
or
les
ljmp
xor
leave
add
cmpsb
mov
inc
adcl
or
arpl
outsb
inc
or
inc
xor
les
cld
pop
xchg
sub
jecxz
or
leave
push
les
insb
mov
sbb
push
pop
movsl
leave
aam
mov
in
sbb
mov
jne
mov
xchg
clc
sub
cmpsl
stc
dec
add
mov
out
les
out
dec
and
shlb
mov
or
out
dec
adc
dec
rcll
faddl
cmpsl
cli
xchg
pop
arpl
mov
jmp
mov
dec
sub
cli
xchg
ja
outsb
mov
xchg
clc
xor
lods
pop
or
mov
jnp
ret
call
or
sbb
outsb
cmpsl
cltd
outsb
push
mov
testl
in
mov
in
xor
push
test
inc
insb
inc
xor
js
sahf
mov
push
mov
fcmovbe
mov
aaa
xor
test
or
loopne
insb
outsl
insb
inc
xor
cmpsb
aam
inc
adc
nop
rorb
pop
movsl
cmp
mov
movsl
jae
dec
leave
ror
clc
push
pop
out
shrb
les
mov
repz
lods
mov
or
jo
ret
clc
loop
push
out
imul
push
add
scas
mov
adc
mov
adc
mov
xor
mov
jb
cmc
cli
cmpsl
loopne
cltd
insl
sti
sub
cmpsb
inc
jns
mov
in
push
adc
push
frndint
xchg
shlb
push
adc
mov
jge
sub
sub
cmovp
mov
push
and
cmp
or
push
mov
ror
jle
std
xor
fdivrp
mov
lret
sarl
inc
mov
fs
mov
inc
clc
push
arpl
in
fwait
addb
or
pushf
mov
or
roll
ljmp
pop
push
adc
mov
lods
push
and
iret
movsb
sahf
mov
cwtl
mov
inc
pop
xchg
mov
cmp
xlat
add
mov
add
mov
mov
je
mov
in
or
or
mov
leave
jb
xchg
dec
fs
andb
jle
add
repnz
loope
fildl
inc
les
fbstp
xchg
lcall
cmpsb
mov
push
iret
dec
dec
fsubs
in
fiadds
test
sub
jbe
in
or
xor
iret
rcl
ret
xchg
xlat
sbb
cmp
xor
test
and
aaa
mov
pop
mov
xor
out
pop
xlat
sub
mov
loop
jecxz
xor
xlat
or
out
les
or
es
xchg
mov
pusha
out
inc
sub
cmpsl
or
sahf
jmp
fmuls
sub
nop
sbb
or
outsb
jl
dec
aas
jae
and
cmp
outsl
rcll
inc
rclb
scas
fisubs
insb
pop
stc
lods
loop
sub
je
xor
lcall
sub
imul
adc
mov
and
outsl
xor
pop
add
jp
fnstenv
js
jns
lcall
adc
hlt
aad
out
xchg
push
loop
mov
nop
pop
shll
lds
jns
leave
mov
adcl
ror
mov
cs
mov
mov
mov
sbbb
je
in
xchg
hlt
xchg
movb
lcall
mov
jbe
mov
mov
xor
sub
aam
xchg
sbb
jne
cltd
test
mov
dec
fstl
xor
pop
dec
pop
aaa
push
xlat
mov
jae
or
or
ja
ljmp
push
push
sbbb
jo
daa
iret
imul
pop
or
push
fisubl
push
jnp
pop
push
enter
sub
cmovg
repnz
call
cmp
xchg
je
inc
shll
jp
std
sub
jl
adc
sbb
dec
daa
xchg
aas
ja
ja
stc
mov
dec
xor
push
fists
add
push
xor
inc
mov
ret
push
jg
mov
mov
and
mov
and
mov
inc
lds
sub
xchg
dec
add
push
in
sub
sub
jmp
aad
sbb
divl
out
lret
inc
push
pop
jno
mov
daa
fbstp
out
pop
adc
imul
cmp
pop
push
mov
imulb
andl
sub
add
or
jmp
cmp
dec
or
cmpsb
fnstsw
out
mov
dec
out
jg
sub
pop
jno
xchg
add
cli
push
xorb
cmc
add
cmp
ficoms
jge
and
fs
adc
repnz
cld
push
sbb
repz
icebp
xlat
sbb
xor
leave
stos
adc
dec
aaa
cmp
sub
xchg
sub
aas
sbb
mov
in
cwtl
adc
xor
jns
xor
aas
lds
jecxz
dec
pop
jb
pop
icebp
notl
jns
mov
movsb
loop
out
test
cmp
std
or
or
fincstp
sbbl
mov
mov
dec
push
insb
add
fmulp
cmpsl
subb
shl
das
cltd
sbb
out
xchg
jg
sbbl
add
add
push
daa
jb
push
lods
scas
repz
dec
sbb
adc
leave
enter
je
mov
xor
push
enter
add
pop
gs
into
lods
add
out
pop
ss
mulb
and
xlat
stc
mov
inc
pop
and
stos
sub
and
jge
push
jl
xchg
pop
add
idiv
ja
xchg
scas
aas
incl
jp
loop
into
push
aaa
push
mov
aam
popf
inc
xchg
inc
pop
sub
js
leave
pusha
daa
stos
das
xchg
popa
pop
test
xlat
fcomps
adc
ljmp
jo
nop
pop
out
pop
imul
jae
mov
inc
sub
sbb
movsb
insb
popa
or
pushf
mov
daa
stos
ljmp
fsubrp
sbb
cwtl
shlb
mov
adc
push
mov
mov
mulb
or
pusha
shll
daa
add
ljmp
mov
call
fmuls
xchg
and
lock
ss
cmp
mov
mov
icebp
add
ljmp
cmpsl
imul
mov
lea
push
inc
js
sahf
dec
cmp
xor
or
xor
jg
push
or
rclb
leave
lds
fprem
testb
push
aad
jno
sub
or
jg
xor
sarl
xchg
lds
sbb
inc
pop
cmp
dec
fistpl
xor
lods
mov
cli
cmp
lret
jo
xchg
mov
mov
test
sub
or
jnp
mov
testb
les
outsl
xchg
in
cltd
lods
cmp
out
jp
or
jge
std
jo
cmpl
jmp
pop
push
stos
mov
in
push
xchg
mov
lds
inc
xor
mov
or
pop
iret
lcall
adc
fists
out
mov
scas
in
fsts
cmc
push
cs
imul
loopne
maskmovq
negl
lahf
psubb
lcall
insl
rcrb
and
mov
std
incb
push
sbbl
sti
lds
push
dec
xchg
test
bound
adc
xchg
mov
or
xchg
xor
push
lods
xchg
cmpl
popa
pop
repz
mov
and
xchg
insl
fstpt
dec
pop
icebp
fsubs
cmp
and
sbb
enter
outsl
dec
jg
xchg
cmp
pop
jno
jbe,pt
inc
out
lds
push
popa
add
inc
sub
imul
mov
es
cmpl
jbe
sub
adc
jecxz
adc
push
ljmp
dec
or
lods
out
adc
adc
cmp
mov
cld
mov
add
push
or
push
add
std
sbb
pop
inc
add
clc
sbb
and
sbb
adc
imul
mov
jo
lea
or
adc
mov
sbb
in
lock
or
test
pusha
je
dec
xchg
movsb
stos
pop
in
dec
pop
lret
or
loope
idivl
push
pop
mov
mov
es
add
cmp
sub
dec
inc
add
test
in
push
ja
aam
jb
daa
jl
add
je
push
into
addb
ret
bound
mov
icebp
mov
mov
in
or
repz
pop
jbe
test
or
jne
or
pushf
add
jp
movsb
cmp
adc
and
mov
fwait
enter
aam
and
outsb
inc
xlat
dec
xlat
popa
out
subb
sbb
jecxz
insl
cmp
xchg
es
pusha
add
out
add
mov
xchg
insb
or
sub
daa
or
je
rclb
sbb
loop
xchg
xchg
test
jmp
push
sub
cmp
mov
jmp
add
fdivrl
cmp
mov
repnz
sbb
mov
into
insl
mov
add
scas
mov
jle
test
mov
jge
imul
aaa
cmp
data16
or
fcoms
in
pop
mov
icebp
mov
jl
dec
sti
fst
sti
xlat
out
ss
stos
add
xchg
shlb
mov
and
and
mov
cld
cmp
and
int
xor
cwtl
pop
sub
sbb
std
fisttpll
sbbl
ds
aad
cmp
mov
loop,pn
inc
aas
jg
int3
lock
enter
lahf
fwait
jns
xchg
push
cltd
add
xchg
insl
int
xor
mov
push
jns
xorb
inc
cmp
scas
sbb
cmp
lods
and
pop
leave
xor
push
cmp
lods
jae
pop
ljmp
xchg
adc
jnp
stos
fldenv
push
or
lea
pop
iret
fwait
jge
and
movl
pop
pop
orb
add
xchg
jno
mov
lahf
leave
out
imul
in
dec
testb
lods
sbb
and
mov
pushf
aam
xchg
popf
pop
jecxz
js
sub
mov
and
imul
popf
lods
rcl
popa
add
cmc
push
xchg
jecxz
mov
cmp
mov
xchg
mov
dec
xchg
mov
jge
ds
and
xchg
repz
jb
mov
xchg
xor
aam
and
cltd
pop
jne
cwtl
bnd
pop
or
mov
mov
cmc
push
lods
sahf
leave
stos
mov
or
sub
and
pop
sub
xchg
das
aaa
mov
mov
adc
push
jo
cmp
and
fadds
jecxz
jbe
lahf
mov
xchg
push
mov
adc
jg
or
loopne
mov
iret
lea
mov
jnp
push
pop
sub
cs
stc
dec
shl
test
shll
pop
pop
and
iret
push
cmp
adc
and
aad
push
push
mov
inc
fsubrl
cwtl
sbb
jecxz
test
mov
mov
sub
aam
lcall
repz
jno
sbb
dec
xor
adc
mov
lock
cld
inc
jnp
mov
arpl
dec
outsb
jmp
adc
inc
scas
inc
mov
fdivrl
ret
cmpl
lret
pop
sub
and
loopne
negl
xchg
out
jmp
fdivr
adc
pop
cmp
sbb
cwtl
fidivrl
jbe
iret
mov
xchg
aad
stos
push
pop
push
lock
mov
pop
pop
nop
repnz
or
cmpsb
mov
mov
fnsave
jno
imul
jae
xchg
fs
pop
xchg
xorl
and
inc
and
xchg
sub
mov
push
pop
cmc
in
pop
cmp
fs
dec
pop
xor
out
pop
ljmp
ja,pn
jp
mov
rcr
jns
movsb
and
mov
jl
out
and
sub
sahf
jl
mov
mov
hlt
cltd
stc
mov
stos
push
sarb
dec
in
inc
xor
repz
test
jb
repnz
mov
mov
or
pop
lock
lods
mov
fdivrs
cltd
lods
cld
aaa
or
roll
aas
xlat
lahf
adc
jmp
pushf
cltd
out
sub
push
sub
xor
popa
inc
data16
cmc
mov
pop
pop
push
or
mov
mov
dec
icebp
xor
xchg
rol
jge
int
and
adc
inc
sti
fs
mov
testb
arpl
add
pop
fmuls
cltd
xor
lods
sbb
pop
scas
sti
jo
les
xchg
xchg
int
mov
sub
fwait
movsb
iret
and
sbb
adc
jb
jge
xor
and
pop
xorb
cmp
dec
jb
xchg
add
mov
sub
std
pop
or
aam
popf
sbb
insl
sub
cltd
mov
inc
mov
inc
or
and
ret
cwtl
sti
cltd
inc
cmp
fcmovnb
and
sub
and
test
cmp
add
or
or
xor
enter
add
test
ficoml
sarb
mov
int3
sbb
fcomip
and
push
lock
clc
add
rorl
stos
add
lsl
enter
pop
int3
dec
dec
dec
lret
adc
inc
adc
daa
mov
stc
jbe
cmp
and
and
out
mov
sbb
test
scas
or
movsb
bound
cld
cmpsb
add
dec
push
imul
xlat
cmc
jns
inc
jl
jl,pt
jl
dec
imul
cmpsb
test
mov
notl
add
adc
into
lds
add
subb
mov
mov
int3
push
push
dec
pop
mov
mov
pop
push
xor
fstpt
ja
xor
push
addb
cmp
cmp
mov
jb
lcall
push
push
imul
rolb
hlt
incb
xchg
je
cmp
xchg
fldt
push
sbb
xor
mov
xchg
je
xchg
pop
and
jne
das
adc
push
jmp
aas
cmpsl
testb
aam
rcll
cmp
cmpsl
ds
aam
clc
jmp
popa
daa
add
sbb
mov
jmp
mov
lahf
mov
mov
mov
push
rcrb
push
cli
dec
mov
enter
inc
movsl
addr16
adc
sbb
lds
fwait
popa
mov
cmp
adc
pop
sbb
dec
push
xorl
jecxz
data16
mov
mov
xor
xchg
ret
into
inc
jp
leave
stos
add
pop
ret
cmpsb
lcall
adc
xor
xchg
movsb
inc
cmp
jno
insb
and
mov
sarb
sub
cmp
fincstp
jp
pop
lret
fwait
dec
dec
push
xchg
xchg
mov
jl
cld
and
jnp
and
xchg
cs
xor
arpl
mov
shll
cmp
jmp
or
out
imul
daa
pop
dec
scas
adc
cmpsl
push
cmpsl
pop
xchg
pop
test
scas
adc
repnz
fninit
cmp
imul
divb
cmp
sbb
lret
or
cmc
cmp
imul
decb
xchg
add
xor
fnstsw
cmp
jge
lret
xor
out
dec
stc
xchg
popf
xchg
xor
xor
sahf
scas
out
sub
or
int3
jno
push
adc
mov
mov
divl
popf
lahf
cwtl
icebp
mov
cld
push
sar
jns
test
cli
xchg
adc
test
in
rcr
out
jl
dec
fwait
dec
inc
sbb
cmp
jbe
mov
xchg
jle
mov
mov
pushl
adc
roll
in
jl
scas
pusha
aad
add
fdivp
shlb
rorb
push
ja
mov
jns
xchg
pop
dec
cmp
aam
rorl
addr16
shlb
add
in
push
or
dec
cmp
imul
enter
or
aad
pop
hlt
imul
inc
fwait
sub
dec
push
aad
or
iret
adc
mov
andl
cwtl
jp
push
mov
in
cmp
dec
add
imul
sbb
sbb
add
outsl
insb
std
std
xchg
jl
popf
xchg
aaa
push
call
mov
mov
ror
loope
ds
daa
in
jno
shlb
and
shrb
mov
adc
aaa
mov
clc
test
scas
gs
adc
test
sbb
lock
sbb
popl
add
xor
fldcw
fisubrs
daa
sahf
cld
andb
mov
mov
xchg
dec
push
lcall
and
sbb
fwait
push
shr
loopne
dec
xor
inc
dec
mov
rorb
in
aaa
jo
cwtl
pop
ret
jnp
daa
sub
pushf
insl
cmpsb
imul
inc
cmp
or
cmp
ljmp
test
jmp
mov
or
push
jg
fistpl
or
xor
scas
cs
pop
shrl
push
jmp
les
hlt
pop
fs
imul
adc
inc
stos
scas
aad
jle
mov
fs
dec
mov
cmp
add
into
out
add
cmpsb
pop
andb
adc
adc
outsl
jmp
std
imul
repz
sbb
roll
shl
hlt
push
or
jnp
push
movsb
jg
and
in
fistpll
ljmp
add
fs
repz
dec
xor
in
pop
adc
add
in
je
out
push
mov
xor
mull
and
int
adc
loope
push
mov
daa
movsl
xorb
jbe
ret
mov
mov
add
scas
and
divl
mov
or
sbb
inc
dec
sub
xchg
fwait
sub
sub
orb
sub
sbb
outsb
xchg
das
mov
dec
jl
pop
jb
stos
cld
pop
sub
test
mov
std
mov
push
sub
sub
mov
sbb
mov
repnz
sub
push
lock
movsl
or
jo
loope
enter
mov
lahf
daa
xor
rol
push
sub
inc
imul
ss
xor
dec
sub
add
jmp
loopne
nop
sub
adcb
fs
pop
jge
or
inc
lods
out
lods
xchg
addr16
sub
mov
ret
ja
int
sub
sub
dec
fcomps
xchg
xlat
or
loop
dec
jmp
imul
add
cmpsl
clc
xor
mov
dec
push
cmp
and
das
sub
sbbl
adc
dec
cmc
insl
mov
cmp
dec
pop
or
inc
cmova
ljmp
dec
dec
shrb
in
out
icebp
jbe
loopne
rcl
cmp
sbb
cmp
push
test
fwait
dec
fstps
dec
jge
xor
cmp
mov
je
sbbl
lods
test
fdivr
ss
sbb
dec
cmpsb
add
stos
pop
lds
nop
dec
jecxz
add
out
mov
fmull
mov
xchg
stos
dec
movsb
push
jge
sbb
xor
cmp
insb
inc
test
jge
rolb
test
xor
adc
fstcw
mov
or
imul
add
and
adc
pop
gs
in
mov
xor
js
mov
cld
ret
mov
daa
mov
out
adc
in
sti
lds
insl
jl
pop
sbbb
out
sbb
xchg
pop
mov
inc
mov
cwtl
lock
xlat
jecxz
mov
adc
mov
cmp
jle
xchg
cmc
cmpsl
jno
and
dec
or
ds
cmp
mov
out
cltd
enter
inc
pop
loopne
or
dec
ss
lea
std
lret
mov
adc
push
sub
data16
pop
fnstsw
push
push
es
xchg
into
dec
push
jns
fidivrl
mov
sbb
cmp
xchg
sbb
add
cmp
ret
subl
repz
push
pop
mov
ret
sahf
sub
and
lds
ljmp
jns
and
mov
pop
jno
adc
pop
or
imul
hlt
das
jb
sbb
mov
xor
cmpb
or
mov
dec
xlat
lds
daa
xor
mov
jnp
dec
and
sbb
pop
mov
in
push
cltd
jp
int
mov
insb
mov
or
xor
outsl
stc
addr16
bound
stos
pop
mov
icebp
xchg
and
test
xor
push
arpl
test
cmp
sub
and
xor
or
sbb
test
pushf
or
outsb
sub
jno
push
or
lret
outsl
push
push
sbb
sbb
xchg
pop
xor
cmp
out
push
or
jo
dec
cmpsb
in
mov
fdecstp
mov
loope
pop
sbb
adc
insl
call
push
xlat
movsb
add
sub
sti
mov
jne
dec
out
sar
shlb
pop
push
push
notl
nop
mov
sub
or
sbb
test
jns
push
je
out
sub
rcr
pop
mov
push
mov
jp
mov
or
xchg
sbb
test
dec
mov
fisubs
cmp
jle
push
addr16
mov
sub
dec
xchg
int
xor
popf
in
out
xchg
jno
lahf
std
pusha
pop
icebp
xor
mov
xorb
jo
xor
xchg
cmp
cmp
inc
es
fwait
mov
movsl
or
movsl
cmp
in
out
xor
pop
mov
mov
xchg
add
and
sbb
add
pop
mov
mov
adc
roll
rorb
insb
xor
das
xchg
sbb
jbe
repz
sub
and
loopne
sub
mov
popf
pop
hlt
ja
cmp
sub
daa
out
fdivr
loope
rcrb
daa
sbb
xlat
test
out
dec
pop
icebp
out
push
sub
and
stos
aam
and
and
push
xchg
jae
inc
aaa
mov
mov
mov
lock
cli
jmp
pop
dec
push
mov
jae
es
out
and
pop
xchg
dec
movsl
pop
mov
loopne
in
je
mov
push
xchg
dec
cmp
xchg
mov
dec
lock
es
cld
inc
sbb
sarl
stc
fisubs
jl
loop
scas
and
lds
lret
push
cmp
inc
rcrb
add
or
mov
and
lcall
push
adc
mov
pusha
cmp
cmp
cmp
dec
pop
les
push
push
jg
inc
cmp
and
jp
call
cmp
xchg
fimull
lods
inc
enter
movsl
lea
cmp
popa
inc
sbb
nop
adc
dec
adcb
cmpsb
int
cmpsl
sub
fbld
or
push
sbb
sub
punpckldq
push
mov
adc
aam
popa
nop
dec
sub
mov
push
pushf
mov
sub
ret
fneni(8087
dec
sub
mov
popa
push
mov
les
enter
sub
addr16
movb
outsb
repz
push
and
xchg
sbb
repz
lea
lds
dec
sbb
pop
leave
lods
jbe
mov
out
dec
outsl
adc
mov
incb
test
pop
cltd
or
push
leave
push
or
jmp
in
jl
sub
std
mov
cwtl
or
inc
jbe
ss
lret
sbb
adc
fwait
cmpsb
mov
adc
push
sub
jb
rol
sbb
movsl
push
imul
insl
icebp
inc
ja
push
leave
adc
insl
movsb
jp
lds
jg
pop
pushl
push
iret
ret
loopne
mov
mov
mov
cmp
ljmp
fldenv
cmpsb
xchg
jo
jle
or
es
pop
push
mov
mov
jns
dec
popa
repz
mov
and
sbb
js
int
fstps
bound
shrl
add
inc
cli
mov
insb
jle
pop
xor
jno
rclb
jb
sub
cwtl
lods
push
adc
loope
dec
lcall
xchg
insb
pop
jbe
mov
jg
shlb
daa
mov
scas
pusha
add
mov
inc
push
jge
xor
in
mov
cmp
out
xor
dec
or
wbinvd
and
mov
dec
repnz
insl
daa
int3
fcmovb
pop
xchg
sbb
cmp
xchg
push
cmp
xchg
dec
inc
cmc
sbb
adc
mov
mov
mov
mov
test
int
push
js
adc
insl
cli
outsb
adc
pop
mov
repz
push
out
or
hlt
fwait
pop
dec
xchg
outsb
add
dec
cmpsl
testb
or
xchg
inc
cmp
shlb
insb
scas
xor
pop
jae
xchg
sbb
sahf
int
and
out
cli
mov
lret
xor
mov
call
or
aas
mov
js
mov
pop
test
adc
push
sbb
cmpsl
push
or
push
sahf
mov
mov
jo
subb
imul
std
jb
fsubrs
and
cld
shll
mov
pop
in
add
add
fstpt
xor
fcom
imul
pushf
movsl
scas
daa
pusha
cs
push
xchg
test
mov
mov
mov
fs
rcr
lcall
imul
loop
sti
ret
mov
cmp
cmp
mov
pop
cmp
adc
pop
xchg
cs
sbb
mov
stos
mov
mov
jne
mov
jnp
cli
icebp
push
fdivp
mov
mov
mov
push
mov
sbb
aad
sti
std
imul
pop
aad
pop
inc
pushf
fs
cmp
jp
mov
jmp
iret
jo
lods
fs
lods
lods
and
das
mov
adc
nop
sbb
ret
aad
repnz
out
repnz
mov
fnstenv
push
movsl
and
cmp
sbb
mov
lcall
push
scas
scas
shr
mov
enter
inc
lcall
outsl
xor
aam
adc
xchg
ret
ljmp
gs
in
insb
imul
or
test
xlat
shrl
xchg
xor
xor
mov
or
mov
sbb
rorb
leave
jo
outsb
add
xchg
mov
int
out
cmpsb
push
ret
out
pop
add
and
mov
dec
and
or
popf
cld
mov
in
imul
and
pop
add
pop
inc
mov
sbb
ja
test
xor
and
fmul
add
imul
decb
repz
repz
test
fcoms
pop
cli
sbb
cs
xchg
mov
repz
cltd
ja
data16
loop
fbld
sbb
dec
xchg
xchg
mov
test
dec
mov
mov
dec
xor
push
fiadds
popa
cmp
cmp
out
scas
cmp
mov
and
insb
out
rclb
mov
cltd
daa
sbb
bound
adc
jo
mov
jl
popa
push
push
fisubrs
fidivs
mov
bound
ja
or
add
fistpl
icebp
inc
jae
jge
push
inc
repnz
fstps
idivl
not
push
jg
fsubl
repz
sbb
sbb
loopne
imull
mov
jmp
jb
push
add
and
cmc
jb
inc
int3
rcrl
cld
jg
fisubrl
mov
les
fiadds
loop
and
test
das
icebp
addl
insb
mov
and
mov
clc
mov
movsl
add
sti
arpl
out
ficoms
cmp
mov
stos
test
or
insl
lock
jns
or
adc
xor
filds
je
pop
aaa
aam
jp
jmp
xchg
data16
mov
pop
mov
js
inc
cli
jbe
ret
mov
mov
sbb
xor
int
xor
mov
sub
pushf
xor
fistl
mov
sub
inc
jbe
xor
je
scas
outsb
ror
xchg
xchg
pop
stos
sti
mov
mov
xorl
rcrb
push
xchg
sub
outsb
mov
int3
insl
mov
sub
or
sahf
jle
pop
ds
adc
pop
xor
xchg
mov
mov
cli
stc
mov
push
daa
adc
repz
xchg
les
and
arpl
jo
sbb
fistpl
adc
vxorps
jae
icebp
add
push
pop
add
ja
xchg
add
push
add
mov
movsl
sbb
adc
add
mov
mov
jno
pop
rcll
mov
inc
lods
push
xorb
xchg
xor
movsb
and
sti
or
sahf
clc
add
ja
scas
xor
clc
shlb
xchg
mov
xlat
push
add
and
xchg
cli
jg
jp
cmpsb
decb
jnp
ret
jb
sbb
add
cld
mov
sbb
cmp
outsl
and
adc
mov
arpl
sbb
cmpsl
jmp
push
jmp
xor
scas
shll
shrl
inc
subb
pmuludq
cmc
in
pushf
es
jno
cmc
cld
sbb
mov
jmp
cli
test
inc
jae
sub
xchg
mov
sti
pop
js
xor
pusha
rol
rorl
addr16
movsb
lret
test
fisttpl
repz
dec
dec
push
cmp
in
inc
pop
or
pop
push
xchg
rolb
jp
aas
xor
std
rcr
pop
sahf
pop
push
mov
outsb
xlat
sarl
icebp
mov
imul
int3
lods
inc
dec
inc
and
jnp
pop
pop
lea
cli
add
mov
loope
cmpsb
xchg
xor
fildl
stos
lods
insl
mov
xor
cmp
inc
push
fidivs
mov
aas
cmc
outsl
and
dec
into
pop
and
rol
pushf
insb
sbb
rcrb
lcall
cmpsb
cmpsb
push
xor
subl
insb
push
cwtl
js
inc
rclb
test
lock
mov
std
push
ds
xchg
int
push
pushf
data16
fldl
popf
into
mov
scas
je
pop
xchg
dec
es
ss
and
imul
pushf
aad
adc
mov
adc
pop
fists
add
in
adc
lods
fwait
mov
movsl
nop
mov
push
test
outsl
mov
rcr
jge
imul
mov
jae
adc
adc
rclw
lcall
jmp
and
imul
je
addr16
and
push
push
ret
pop
gs
ret
cmpsl
outsb
in
ret
xchg
lock
push
fwait
mov
adc
xor
mov
add
mov
xlat
rcll
leave
push
lock
push
sub
fisubrs
fdivl
int3
cmp
lahf
mov
out
sub
jne
adc
xchg
test
cmp
mov
sahf
sbb
sub
in
xor
sub
jmp
bound
pop
outsl
push
inc
or
mov
das
int
movsb
dec
mov
xor
ljmp
jge
sub
imul
bound
lcall
fidivrl
movsb
repz
cmc
faddp
arpl
xor
mov
mov
or
popa
pushf
xchg
xor
lods
adc
clc
mov
sub
jmp
dec
imul
dec
repnz
popf
mov
push
and
xchg
mov
xchg
ss
fisubrl
fstl
cmpsb
adc
pop
adc
inc
dec
and
cmpsl
cmp
loop
out
xlat
cld
xchg
mov
negl
dec
push
aad
neg
mov
push
and
data16
mov
arpl
into
neg
rol
lds
or
dec
mov
pop
and
dec
mov
add
pop
leave
jne
inc
sahf
aas
jge
test
shll
adc
and
lock
pop
xchg
jbe
aam
lcall
push
js
lods
ljmpw
lret
ret
jno
or
rcl
clc
test
add
lret
orb
jb
ljmp
adc
lcall
mov
and
mov
cld
mov
aam
in
fsubr
or
xchg
sub
cmp
shl
in
pop
mov
push
cmpsl
xchg
add
hlt
test
cltd
mov
repnz
dec
xor
push
add
mov
dec
xchg
rcll
cltd
dec
out
dec
std
pop
pop
das
xor
ds
jnp
stos
mov
adc
rcr
lea
and
xchg
insb
pop
push
mov
mov
inc
mov
and
jbe
in
jb
inc
lahf
mov
add
inc
mov
in
repnz
lea
mov
sub
cmc
repnz
cmp
fcmovu
pop
pop
cmp
mov
aad
adc
pop
and
mov
jno
mov
aam
add
data16
inc
fwait
xor
and
jnp
mov
jne
pop
mov
out
pop
pop
push
jae
in
hlt
push
dec
ret
mov
fstps
push
xchg
jmp
into
add
out
sbb
mov
jae
inc
jae
stos
jmp
add
sub
ror
mov
mov
fsubrs
add
sahf
inc
mov
pop
push
cmp
pop
add
xor
test
mov
cmc
add
andl
lock
sub
aas
pop
mov
shl
mov
sbb
inc
lods
push
xor
xchg
jge
aad
stos
push
cmpsb
in
loop
jnp
xchg
pop
les
loopne
and
imul
test
xlat
in
jl
inc
add
aad
mov
push
jl
mov
js
add
fcmovu
pusha
testb
fimull
xlat
pop
and
js
pop
test
mov
or
ljmp
sub
dec
cmc
cltd
xchg
add
lret
int3
pop
xchg
mov
mov
out
cmpsb
icebp
pop
iret
push
lahf
ja
insl
pop
lcall
pop
mov
xchg
jp
inc
mov
fldcw
bound
xor
lea
aaa
and
cli
clc
cmp
sub
repz
sahf
adc
and
mov
mov
pop
adc
push
pop
push
cltd
lret
out
jge
cmpb
adcl
jns
aam
rorl
aas
xchg
mov
leave
cld
jg
data16
je
mov
fstl
repnz
sub
sbb
shlb
pop
and
jp
mov
or
pop
insl
mov
mov
mov
decl
xor
and
rcrl
xor
test
lret
nop
ljmp
ljmp
rclb
out
cli
insb
idiv
test
dec
sub
cmc
repnz
mov
inc
repnz
jnp
mov
stos
idivb
clc
insb
jle
orl
sahf
mov
mov
cltd
in
test
jge
in
jmp
push
popf
mov
repz
mov
dec
push
jns
or
jne
mov
cs
inc
pop
rcll
test
mov
jle
lret
sbb
mov
rcll
inc
jmp
xchg
dec
ljmp
mov
scas
ja
in
scas
xor
pop
insl
repnz
mov
pop
sub
lret
ror
aad
aam
jo
data16
rcrl
fcompl
in
mov
in
xor
cmpsb
mov
repnz
popa
sub
xchg
in
movsl
cmp
in
push
push
push
jle
fidivrl
ds
and
repz
adc
sub
mov
or
add
mov
or
xchg
ljmp
lds
or
movsb
mov
xor
cmpsb
pusha
imul
jbe
ror
cmpsb
lock
pop
sub
movsb
push
std
dec
insb
adc
mov
ja
add
dec
push
mov
dec
add
mov
movb
xchg
das
jp
inc
popf
ds
fcomps
sub
dec
cmpsl
dec
cld
mov
nop
sub
push
insb
adc
je
cmp
dec
jge
or
xor
icebp
inc
xlat
jno
dec
ret
ljmp
add
xor
cmp
jmp
xchg
popf
push
sub
jmp
ret
jge
mov
shl
mov
add
and
sbb
push
cs
inc
push
jo
into
hlt
fiadds
scas
loop
stos
imul
popa
inc
cmpsb
rep
mov
sbb
cmp
dec
std
xchg
push
in
and
sti
mov
lds
push
lahf
xlat
stos
push
test
leave
xor
clc
pop
rclb
aad
push
add
fbld
inc
mov
cs
inc
mov
mov
ret
repz
cmc
mov
mov
sub
outsl
push
shll
cltd
icebp
mov
fstps
cmp
addr16
loop
push
cmp
adc
ret
aad
xchg
out
and
pop
or
and
call
dec
rolb
dec
ljmp
lds
pop
aam
push
jne
outsb
mov
adc
mov
movsl
pop
gs
cmpsl
jge
push
jle
in
mov
xor
pop
repnz
gs
stos
dec
mov
rcrl
fisttpl
cmpsl
cwtl
pop
pusha
and
push
pusha
dec
cmpsl
insl
push
mov
sub
outsl
inc
push
add
aam
les
lea
ljmp
xchg
xchg
mov
popa
and
mov
xor
or
add
fs
inc
inc
pop
test
rclb
in
outsb
stos
ds
mov
out
pop
jmp
mov
test
mov
cltd
sbb
xor
test
adcb
add
sbbl
inc
jbe
test
rcrl
adc
or
outsb
hlt
jl
sub
lcall
push
lahf
not
pop
xchg
daa
repnz
andl
mov
lods
add
into
xchg
mov
incl
and
and
les
sbb
cwtl
imul
mov
mov
scas
sub
pop
pop
or
fsubs
ret
xor
mov
daa
lods
xchg
orl
and
mov
add
data16
gs
lahf
pop
out
fs
ljmp
data16
xorb
sbb
dec
push
mov
andb
mov
xlat
lret
lret
test
jo
call
pushf
test
dec
or
gs
stc
imul
cmc
filds
in
mov
inc
xchg
dec
icebp
in
dec
insl
fdivrl
mov
int3
add
or
mov
push
sbb
xor
jge
lea
repnz
adc
sti
sub
out
lods
ret
mov
fcomip
push
xchg
dec
jl
mov
les
imul
in
sbb
mov
gs
mov
lds
loop
mov
sub
mov
insl
sub
cmp
mov
aas
popf
push
xchg
inc
test
xchg
add
jnp
je
pop
ficompl
pushf
lahf
inc
xchg
dec
movsl
add
or
mov
push
pop
mov
out
cltd
pop
adc
inc
shlb
shl
iret
push
lret
sbb
pop
pop
mov
xor
push
mov
cmp
adc
push
jns
sahf
rcrl
xchg
push
push
mov
jbe
xor
jle
call
iret
or
addr16
bound
cmp
jne
call
adc
jge
mov
enter
lret
xchg
xchg
movsl
inc
sahf
cmp
std
roll
shlb
sahf
cltd
xchg
aas
test
cmpsl
clc
subl
push
dec
movsl
aaa
or
add
adc
inc
mov
lret
xchg
addr16
in
mov
enter
pop
cmpsl
ds
xorl
cmpsb
aad
push
rcr
cwtl
jne
int
xor
js
dec
xlat
sbb
sbb
cmc
jmp
in
ret
push
jbe
sbb
adc
lods
or
mov
adc
cmp
jmp
xor
and
shrb
push
dec
stos
mov
pop
ret
pop
xchg
fcmovnb
pop
inc
cmc
add
scas
movsb
roll
outsl
jns
call
jo
xlat
or
lret
loope
shr
sub
jae
push
xchg
and
jne
cmpb
mov
mov
sub
jns
xor
sti
adc
subl
xor
jbe
or
fldt
imul
pop
sbb
push
pop
nop
sbb
pusha
xor
and
test
fdivs
repnz
ret
xor
sbb
outsb
dec
or
out
jmp
cmpl
pushf
mov
out
mov
cmp
mov
popf
cmpb
daa
mov
inc
mov
push
xchg
push
ss
add
dec
popl
xor
dec
and
push
xlat
imul
cmp
cmp
mov
xchg
enter
jbe
scas
scas
dec
push
sub
stos
sbb
popa
ds
iret
inc
add
inc
mov
fs
mov
fsts
aam
std
push
dec
fmull
rcrl
xor
push
xchg
pop
jb
out
out
mov
jbe
repz
loop
adc
inc
sti
adc
jge
out
and
and
mov
out
stc
iret
or
inc
push
dec
or
jecxz
scas
test
push
sbb
fidivrl
loopne
xlat
movl
clc
mov
push
cs
sub
cwtl
es
inc
add
cmp
cltd
sub
fdivs
fs
pop
inc
push
and
dec
mov
sbb
sar
fwait
ja
fstpt
xor
hlt
push
lahf
mov
jmp
xor
or
mov
jg
imul
outsl
int3
mov
sub
mov
ja
jecxz
xchg
cmc
mov
sub
bound
inc
repz
clc
push
addr16
fdivr
xor
rcr
and
inc
leave
mov
add
dec
lahf
out
test
mov
mov
mov
arpl
or
lahf
sbb
jae
adc
push
mov
dec
mov
ja
daa
inc
daa
iret
mov
cld
jl
arpl
fs
mov
inc
sar
inc
jno
addb
push
enter
cmp
jne
adc
clc
in
mov
inc
sub
cld
imul
mov
std
and
adcb
pop
xchg
mov
xor
adc
cmc
orl
sub
jg
jl
testb
or
fistl
inc
movl
add
xor
pop
mov
scas
dec
or
add
repz
jne
adc
lock
cld
lock
sbbb
les
xlat
lahf
hlt
in
mov
push
loop
pop
adc
and
xchg
inc
nop
insl
leave
add
jne
sub
ret
or
or
clc
in
mov
daa
lock
es
es
mov
cld
add
jle
xor
in
xor
inc
jg
and
je
sti
sub
sub
jge
mov
loopne
cmpb
xor
mov
dec
rcrb
mov
movsl
scas
mov
call
arpl
sbb
cld
hlt
push
cmp
dec
gs
loopne
fsub
cmpsb
movb
shl
iretw
fwait
dec
sbb
push
push
paddd
clc
add
movsl
push
xchg
mov
dec
push
add
cmc
imul
mov
push
mov
out
inc
movsb
das
lcall
stos
sbb
adc
add
ss
mov
sbb
cmp
mov
and
movnti
cmpsl
mov
lret
push
inc
andl
into
hlt
push
icebp
xor
inc
sahf
and
fs
inc
push
cmpb
jno
cmp
ljmp
sbb
decb
pop
add
pop
aam
mov
icebp
mov
aaa
out
shrl
xor
cmp
movsl
sub
sub
stc
sahf
fisubrl
mov
xor
push
jne
fcmovb
pop
xor
insl
dec
rorl
dec
cmp
in
xchg
mov
andl
dec
push
inc
subb
popa
out
movsl
xchg
int3
loope
adc
lea
cmp
add
cltd
jb
push
je
adc
and
add
adc
sahf
das
or
push
add
inc
in
stc
cmpsl
mov
fcomip
pop
sub
arpl
dec
sarl
pushf
fildll
insl
xchg
jno
clc
pop
in
int3
mov
push
xlat
sub
cltd
mov
mov
gs
mov
mov
lret
xchg
cmp
ret
add
call
sub
cmp
adc
sub
push
repz
cmp
inc
daa
bound
out
subl
rolb
jl
test
sub
mov
jl
das
or
adc
mov
jle
sbbl
loope
das
push
xchg
inc
shl
cs
or
add
jb
shrl
pop
addr16
jo
and
sub
testl
sarb
add
sbb
sbb
xchg
int
lret
push
pop
fidivs
and
mov
push
cmp
mov
xchg
pop
lsl
jns
mov
in
pop
dec
mov
ds
jbe
mov
out
data16
cli
or
xchg
pop
adcb
sahf
jle
enter
pop
test
mov
scas
stos
loope
in
ds
mov
or
push
out
das
push
xchg
mov
cmpsl
push
pop
lcall
movnti
jmp
shlb
mov
out
add
bound
push
ret
sbb
fisubrl
mov
sub
into
adc
adc
in
jmp
push
es
fidivrs
je
hlt
enter
sar
xchg
fcomi
pushf
hlt
pushf
adc
lgs
xorl
pop
push
xlat
inc
mov
jo
push
and
pusha
leave
push
sbb
adc
flds
in
xchg
add
push
andl
pop
das
loope
divb
aad
mov
aam
cli
jp
and
enter
test
sub
cltd
pop
test
adc
xchg
shl
ljmp
cmpsl
scas
adc
in
test
inc
jecxz
sbb
in
test
aam
mov
xchg
ds
rcrb
mov
outsl
push
inc
sar
test
mov
xlat
jne
out
and
loopne
cmp
cmp
xchg
dec
sub
das
shrb
call
push
out
in
lret
or
mov
dec
jecxz
adc
or
movsl
in
sub
pop
inc
sbbb
sub
daa
shll
xchg
scas
in
ret
jle
test
scas
or
ret
pop
sbb
test
push
fldcw
pop
imul
xor
xlat
imul
jb
call
pop
das
movsl
pop
or
sub
push
cmp
add
adc
inc
xor
iret
xlat
jnp
jl
pop
les
into
in
sub
cmpsb
sbb
xor
lret
mov
mov
dec
pop
mov
and
ficompl
mov
and
insl
adc
xor
das
enter
dec
in
ret
rol
aam
sub
sbb
mov
hlt
pushf
xchg
clc
push
mov
ja
adc
or
cmp
adcb
repz
sbb
addr16
xchg
add
push
insl
lahf
test
fldt
rorb
pop
xor
clc
mov
xchg
xor
test
jae
sub
sub
fsubr
or
mov
scas
jbe
mov
fbstp
lret
mov
pop
test
fnsave
xor
out
mov
sbb
jb
lahf
xorl
jl
dec
pop
test
dec
es
stos
cmp
popf
mov
cs
rol
fucomi
cld
sbb
mov
cmp
jbe
repnz
sbb
inc
and
mov
pop
ss
fst
pusha
push
mov
test
push
ljmp
rorb
int
repnz
mov
imul
outsb
jae
lret
xor
mov
je
test
sub
push
adc
push
mov
and
cmp
push
les
mov
sahf
mov
cmp
shll
leave
js,pt
shrb
iret
icebp
and
add
push
add
and
repz
ds
out
flds
jae
daa
push
loope
ret
xlat
movsl
clc
mov
mov
std
rorb
mov
adc
cmp
sub
inc
pop
lock
std
imull
int3
stc
loopne
in
ret
mov
push
jle
insb
cmpsb
push
push
xchg
scas
xchg
inc
push
lret
subl
insb
cwtl
pop
pop
cmpsl
in
add
mov
loop
jecxz
push
xor
shl
jmp
sbb
pop
or
imul
inc
add
push
mov
sbb
sub
cltd
and
jne
sbb
inc
and
lret
adcb
shlb
fisttps
mov
lds
xor
shll
jbe
pop
sbb
ds
xchg
mov
xor
mov
nop
mov
inc
xor
rol
mov
mov
and
mov
cmp
jle
enter
pop
lcall
movsl
add
push
and
mov
dec
mov
outsb
sbb
sarb
pop
mov
or
mov
add
test
push
fsubl
push
jl
pop
jle
or
ret
dec
xchg
mov
cmpsb
fcmovbe
push
lea
jl
gs
repnz
jns
lret
and
push
subl
out
mov
dec
dec
ret
aas
push
sbb
rolb
and
nop
std
popf
test
rcrb
mov
xchg
sbb
jp
outsl
cmc
pop
mov
sahf
mov
out
rol
and
aad
xlat
push
es
les
movsb
mov
push
jne
cmp
jns
and
xchg
dec
in
and
fmull
andl
cmp
scas
iret
mov
lret
sub
push
cmc
loopne
leave
stc
inc
pop
ret
pop
or
cli
cmp
pop
faddl
xor
outsw
and
pushf
inc
jg
dec
aaa
mov
xchg
sarl
negl
out
arpl
arpl
sti
jmp
mov
insl
mov
pushf
xor
in
mov
sbb
movsl
hlt
sub
repnz
aaa
inc
loopne
mov
xchg
mov
jecxz
fprem1
mov
ds
in
leave
aas
je
pop
dec
gs
dec
add
sarb
jne
jb
int3
and
jmp
pop
leave
cltd
fsts
add
stos
push
ret
mov
pushf
arpl
fisttpll
lahf
out
or
lea
xorb
cli
cmp
clc
stos
mov
fnstenv
rol
jo
outsl
stos
outsl
cmp
in
sub
xor
xor
push
add
lahf
imul
xchg
rcrb
jnp
jbe
mov
dec
and
out
dec
cwtl
xchg
inc
orb
bound
int
jae
and
xchg
mov
add
movsb
xor
and
out
pop
dec
jb
inc
mov
sub
pop
outsb
jecxz
scas
jl
in
loop
test
outsl
dec
test
adc
pop
push
xchg
add
cmpsl
pop
nop
adc
cld
sub
inc
dec
push
push
scas
cmp
fld
sbb
xchg
in
or
mov
aam
shrb
push
aas
hlt
mov
or
sbb
mov
lcall
adc
daa
inc
jp
in
stos
aad
scas
mull
lods
fstp
sbb
imul
int3
jns
in
push
cmpsl
xchg
data16
mov
jnp
push
imul
mov
jle
mov
push
ss
dec
push
inc
jnp
inc
test
cmpsb
xor
and
cmpsl
popf
ficomps
dec
mov
push
sbb
imul
mov
rcl
pop
cwtl
out
cmp
cmpsb
fs
or
fistl
stos
into
out
sbb
subb
mov
pop
decl
rorb
inc
cmpsb
stos
cmp
cli
cld
outsl
dec
orl
int
inc
je
pcmpgtb
repz
ja
iret
ret
and
dec
jg
adc
aaa
out
xcrypt-ofb
cmpsl
in
int
pshufw
dec
lock
or
js
cmpsb
sbb
mov
stos
and
out
imul
aam
insl
dec
lods
sarl
imulb
and
jae
cld
mov
add
dec
test
dec
mov
add
lret
xchg
repz
adc
jb
jae
stos
daa
push
das
mov
jno
aaa
cmpsb
push
sub
enter
mov
cmpl
lcall
mov
dec
das
pop
sbbl
push
inc
pand
adc
shlb
rolb
adc
sbb
call
rolb
rcll
and
jnp
popa
mov
sbb
adc
out
sbbb
rcll
aas
sbbb
in
sbb
cmovbe
inc
data16
mov
mov
jmp
movsl
or
push
cmp
xlat
xlat
xor
in
ret
inc
cmp
xchg
cmp
and
lods
cmp
sar
cmp
xor
inc
inc
insl
add
jle
push
add
gs
dec
jp
scas
mov
jecxz
fwait
xchg
xor
test
push
jmp
xor
daa
or
add
pushf
dec
sub
mov
incb
or
lahf
add
cltd
icebp
dec
pop
sub
pushl
daa
stos
es
and
mov
fsubrs
int
mov
out
push
into
out
xor
mov
pop
xlat
jae
adc
xchg
and
jmp
arpl
or
sub
mov
call
cli
iret
in
jns
sub
out
cmpsb
inc
inc
dec
xchg
shr
andl
inc
sub
mov
inc
dec
sbb
adc
fucomp
cs
ret
mov
decl
jle
bound
sbb
movsb
cmpsb
stos
inc
sti
ljmp
cs
out
jg
test
inc
outsb
ss
xchg
out
test
xor
neg
popa
imul
fadd
cmp
in
in
addr16
fs
cmp
inc
negb
mov
dec
test
and
push
stos
xor
ljmp
nop
add
lcall
xchg
or
inc
repz
pusha
ds
jle
and
hlt
jl
mov
pushw
pushf
hlt
cs
idivb
dec
pop
les
test
ficompl
add
aad
rcrb
mov
rcrl
mov
pop
frstor
insl
movsb
ljmp
stc
mov
rcl
jp
pop
out
mov
xor
jno
ja
insb
sahf
push
mov
lahf
test
xor
mov
sarb
cli
cmpsb
add
push
jno
and
fstpt
dec
sti
hlt
test
sbb
mov
fwait
loopne
mov
pop
adc
pop
scas
and
dec
cmp
bound
mov
dec
mov
or
and
or
jbe
mov
fmull
mov
jbe
mov
xor
mov
int3
fistps
fs
jecxz
fisttps
adc
mov
lods
push
push
inc
dec
push
cmp
push
pusha
jmp
jg
fmulp
mov
popf
lret
adc
mov
mov
dec
aaa
mov
fmul
cmp
mov
and
inc
icebp
pushf
div
gs
push
test
sbb
scas
sub
mov
cld
outsl
push
rolb
push
xor
adc
int
and
mov
lods
ljmp
out
filds
add
pushf
das
rclb
iret
out
xchg
add
out
int
icebp
in
or
xor
movsl
push
xor
in
inc
jnp
repnz
divl
jns
jnp
inc
dec
ret
sub
jl
adc
mov
fldl
andb
add
or
cmp
xchg
and
lret
int3
xchg
xchg
stos
je
jbe
and
gs
fisubrl
iret
sti
dec
adc
out
adc
idiv
clc
sbb
je
pop
mov
repnz
outsb
mov
mov
dec
cmpb
jae
mov
data16
xor
into
add
lods
jg
test
dec
inc
repz
adc
and
ljmp
dec
popa
jbe
mov
movsb
pop
lds
aas
xchg
sbb
bound
sbb
push
xchg
imul
dec
cs
dec
mov
cmp
pop
sub
inc
adcb
cld
jnp
pop
out
jnp
es
sbb
stos
arpl
nop
scas
cmpl
jae
lret
xchg
cs
xor
mov
add
lds
sbbl
mov
es
mov
mov
adc
lret
and
xor
adc
ja
xchg
int
shl
mov
and
js
mov
ss
mov
mov
pop
mov
test
xor
ljmp
jle
loopne
repz
mov
adc
jo
mov
xchg
fiadds
adc
mov
movd
cmp
ret
cmpl
dec
or
test
addb
das
icebp
popa
inc
sub
out
cmp
test
sub
add
sbb
scas
push
das
dec
pop
sbb
jae
and
xor
xchg
outsl
pop
loope
aad
fnstsw
push
mov
loopne
cmpsb
jle
inc
inc
popa
nop
mov
cs
jo
cs
aaa
stos
int
sbb
adc
je
sbb
xchg
shlb
xchg
and
xchg
or
and
xchg
add
or
or
xchg
ja
inc
subl
sahf
adc
mov
fidivrl
invd
cmp
xchg
mov
mov
cli
nop
pop
clc
mul
or
aam
lret
ret
inc
adc
inc
jne
daa
pop
pop
sbbb
cs
rcr
add
or
cmp
out
std
divb
jne
into
out
aad
lret
stc
iret
dec
mov
mov
mov
testb
cltd
push
iret
and
aas
sbb
addb
cmp
mov
notb
xchg
icebp
jge
inc
push
pusha
xor
pop
enter
hlt
and
std
xchg
add
les
orl
or
adc
testb
repz
std
cmp
shll
xor
into
xchg
sub
movsb
or
sub
fcompl
mov
sub
jns
or
push
cld
jg
sub
pop
stos
cmpsb
jae
dec
inc
xchg
into
fmull
jbe
mov
clc
shll
add
sub
mov
ret
pop
mov
mov
adc
out
push
shrl
or
idivl
insb
cld
cs
ret
into
jl
adc
cltd
pop
pop
daa
cld
out
leave
test
sbb
in
lods
inc
xchg
insl
pop
cmp
in
pop
imul
movsb
fnstcw
testb
xor
mov
jae
add
mov
ffree
js
js
pop
xchg
fdiv
aad
push
add
jmp
pop
xlat
mov
cwtl
jecxz
loope
adc
xor
ljmp
xchg
xchg
test
mov
in
iret
pop
push
ret
fidivs
ficomps
lahf
adc
mov
test
push
loopne
in
cmp
out
xor
jg
lret
push
and
xor
jb
add
inc
lods
fmull
lahf
shrl
mov
stos
cmp
cli
fsubrs
outsl
mov
inc
jb
inc
inc
lea
cwtl
nop
and
movsb
dec
stos
mov
out
push
push
fidivl
xlat
dec
add
shrl
mov
pop
negl
shlb
stc
es
inc
shrl
stos
in
stc
outsb
popf
roll
jl
jae
mov
pop
xor
cld
mov
dec
sbb
push
sub
adc
xor
in
dec
sahf
or
loope
sub
out
loop
std
sub
xchg
xor
mov
enter
adcl
inc
push
cmc
into
sub
dec
or
pop
scas
loop
jmp
sbb
imul
nop
pop
movsl
inc
aam
fadd
inc
in
adc
xor
or
jl
dec
push
jb
iret
dec
mov
mov
sub
fildll
outsb
cmp
mov
adc
xchg
lea
loope
push
cmpsl
outsl
or
ficomps
aam
inc
into
xchg
or
js
push
jmp
and
pop
mov
popa
xor
sahf
push
sub
xor
arpl
adc
push
out
negl
inc
pop
or
or
cwtl
loop
lds
inc
enter
insb
lcall
push
cvtpi2ps
mov
test
adc
adc
mov
int
push
repnz
mov
mov
cmp
mov
inc
mov
ret
pop
pop
mov
insl
mov
ljmp
jns,pt
js
cmp
xlat
in
mov
push
icebp
sub
subl
sub
insb
sub
inc
stos
xchg
pop
les
cmp
xor
ljmp
lds
cmc
pop
cmp
aam
out
xchg
mov
mov
inc
lahf
jg
lods
fldl
lret
jns
jbe
inc
pusha
scas
lahf
jge
push
fdivr
inc
xchg
inc
es
pop
mov
cld
cwtl
push
add
sbb
mov
fisttpll
mov
in
mov
gs
and
test
xor
frstor
xor
lret
mov
mov
movsb
int3
cmp
inc
ret
mov
inc
aad
aad
adc
xor
xchg
mov
or
lock
push
out
dec
fidivrl
out
pop
lea
imul
dec
imul
inc
mov
pop
dec
cs
cmpl
int3
adcb
mov
das
ljmp
rorb
aas
inc
int3
ret
test
add
scas
lret
fs
push
push
pop
dec
call
addl
cmp
fldpi
mov
les
inc
pop
shrd
pop
sbb
psrad
sahf
out
xor
cmc
hlt
roll
xor
jbe
repz
pop
push
inc
adc
fs
cmpl
and
int
add
popf
sarb
std
xor
or
idiv
aas
es
aaa
pop
sub
jb
dec
fsubrs
lods
mov
mov
ficoml
sbb
rcll
push
lret
out
out
repnz
dec
or
loop
movsb
hlt
je
and
loope
ljmp
and
ds
inc
cmpsl
stc
popa
les
addr16
scas
push
mov
jne
adc
jnp
cmc
mov
shrl
out
mov
and
lods
dec
inc
data16
mov
mov
push
fsts
inc
sub
daa
scas
mov
adc
inc
loop
or
cwtl
push
jo
imul
mov
cmp
ds
push
push
loope
jo
sbb
aas
repnz
mov
insl
dec
ret
int3
mov
xor
xchg
insl
sbb
shll
pop
mov
mov
subb
push
mov
bound
andb
add
jnp
lds
sti
out
inc
cmp
fs
hlt
push
add
loop
into
mov
sub
inc
int
dec
sub
jl
insl
push
adc
dec
dec
daa
jmp
std
mov
repnz
pop
insb
cltd
or
in
jg
cmp
add
push
out
out
pushf
jmp
mov
mov
jbe
jle
jge
dec
mov
mov
xchg
rcrl
sbb
repz
mov
sbb
imul
lock
mov
arpl
xor
lds
xchg
or
outsl
dec
jl
mov
data16
shll
imull
push
mov
cltd
mov
clc
aaa
adcl
data16
out
or
mov
push
mov
in
pop
daa
popa
and
pushf
mov
mov
adc
shrd
vmovlhps
sub
repz
push
mov
mov
pop
fmulp
cltd
xchg
push
jbe
pusha
mov
lret
fwait
hlt
dec
add
rcrb
mov
mov
rol
cli
pop
repz
loopne
or
xchg
sahf
mov
roll
shl
cwtl
out
rorb
jecxz
pusha
cmp
stc
push
int3
cld
pop
cmp
mov
ds
mov
lret
pop
xchg
iret
and
das
lods
jb
push
cmp
nop
hlt
xchg
xchg
add
ror
mov
add
sarl
pusha
push
je
inc
sub
inc
cltd
dec
sbb
cmp
or
inc
sbb
xchg
scas
ss
shrb
sbb
adc
sti
pop
cmp
data16
ror
push
mov
das
pop
mov
and
cmc
shll
lret
out
ss
cmp
pop
cmpsb
sti
out
xchg
ja
mov
fs
xor
or
sbb
popf
fcmovbe
push
dec
pop
mov
mov
popf
pop
pop
jne
sahf
ljmp
cmpsl
in
fistpl
jge
aam
loopne
fdivs
fldenv
mov
rcr
std
sbb
push
push
mov
inc
xchg
movsl
nop
dec
mov
out
out
aad
mov
inc
push
cltd
jge
cltd
jg
add
cli
xlat
sbb
nop
sbb
in
and
mov
mov
jnp
stc
inc
sub
fdivrl
pushf
scas
dec
mov
jno
js
or
fdivs
and
pop
out
in
loopne
jmp
mov
mov
xchg
pop
jmp
xor
shll
adc
inc
lea
daa
mov
mov
sbb
sub
sbb
insb
in
test
push
add
orl
lds
fidivs
mov
sbb
pop
stos
push
adc
mov
and
jmp
enter
negl
xchg
lret
stos
sub
sbb
fimull
push
fcmovu
popl
xlat
addr16
push
jno
in
mov
fwait
mov
xorl
cld
push
cld
in
nop
mov
lea
or
push
out
push
fildl
mov
adc
int
sti
loopne
mov
sbb
test
dec
enter
popf
inc
mov
sbb
data16
sbb
inc
in
inc
or
fcoms
bnd
fstpt
fs
cli
mov
add
and
jns
into
mov
or
add
inc
lcall
xchg
aam
test
xchg
xchg
jg
xchg
and
mov
xor
or
dec
pop
repnz
dec
push
pusha
fistl
jle
jns
nop
add
lcall
xchg
xchg
xchg
int
pop
mov
or
call
std
in
outsl
lods
scas
pop
jae
call
dec
lds
add
ljmp
add
addl
pop
data16
jb
dec
ds
dec
push
fdivrl
or
xor
cld
jne
or
inc
adc
into
xor
fbld
sbb
xchg
mov
jg
aam
dec
pop
pusha
or
ss
jns
pop
xchg
mov
ljmp
jb
xchg
mov
aaa
pushf
out
mov
ficomps
cmpb
pop
xchg
and
ret
repnz
fadds
mov
xlat
xor
leave
jbe
and
outsl
sbb
gs
lea
outsl
and
or
mov
nop
mov
dec
rcrl
dec
dec
xor
cmp
mov
xchg
into
inc
mov
inc
fistps
inc
in
stc
movb
sbb
aaa
or
gs
fadds
push
popa
push
mov
push
sbb
xlat
or
add
mov
push
add
sub
sub
jmp
ds
dec
scas
adc
incl
aad
sub
xor
cmpsl
push
arpl
outsb
mov
sub
dec
or
xchg
ja
jae
andl
add
jae
lahf
int
ret
sub
stos
test
jnp
call
into
mov
mov
jecxz
je
das
data16
sbb
push
pop
lret
cwtl
push
dec
adcb
pop
out
aaa
cld
xor
push
xchg
xor
ja
push
dec
icebp
pop
push
sub
mov
pusha
pop
mov
xor
jno
fdivs
sti
addb
rclb
mov
push
and
mov
dec
xor
or
sarb
movsl
adc
cmp
mov
outsl
jo
adc
bound
and
int
fcompl
mov
fs
mov
popl
mov
or
and
and
xlat
std
lods
rcrb
jns
sub
js
in
popa
jmp
sahf
hlt
pop
mov
adc
jge
xchg
lahf
aad
shrl
xor
and
mov
dec
int
fwait
aad
inc
repz
fsubs
xlat
xchg
push
negl
ficoms
fwait
mov
out
punpcklwd
rclb
mov
mov
loop
xor
loopne
lahf
mov
cmp
jae
xor
dec
sub
insb
jno
insl
mov
out
iret
xor
jp
and
fnstenv
popf
mov
ss
fsubrs
mov
daa
repz
lods
jl
adc
adc
mov
stc
sbb
inc
jno
addl
js
data16
and
movsl
fs
std
xor
ja
shrl
movsb
mov
les
cwtl
xchg
imul
ror
and
pop
xchg
mov
xchg
pop
stos
outsl
cmp
cmp
fnsave
pop
mov
sub
cltd
fidivl
push
clc
mov
cwtl
add
jnp
imul
int
inc
enter
les
xchg
int
push
sbb
filds
jge
les
fidivs
add
das
adc
je
mov
lret
mov
or
sub
push
ret
addr16
adc
mov
jo
int3
xorl
or
inc
shr
push
lock
add
jg
jle
jp
jmp
aad
pmulhuw
iret
insl
fadds
scas
ret
jb
fisttps
push
movzwl
ror
jne
sbb
xor
int3
push
jmp
adc
cli
fbstp
inc
into
push
stos
fdivrp
and
or
lret
jmp
test
data16
xor
popa
jl
mov
mov
dec
and
sbb
xchg
xchg
mov
out
inc
mov
sbb
fmull
ss
cmpsl
push
or
xor
in
push
repnz
cmpl
lret
das
pop
jbe
cmp
push
mov
push
fisttpll
clc
dec
pop
fldt
fwait
inc
aas
fcomps
data16
and
jb
pop
sbb
sbb
out
je
sbb
or
xor
xchg
inc
inc
mov
fistpl
xchg
fwait
and
push
jne
pop
in
push
cltd
loope
lds
mov
repnz
rcrl
or
aaa
test
movsl
or
loope
icebp
add
das
fnstenv
lea
mull
aam
mov
clc
movsb
lods
lods
sahf
les
cmp
inc
mov
imul
jnp
out
into
addr16
cmp
pop
fcmovb
int3
shrl
in
mov
jne
xchg
cmp
cli
mov
insb
leave
and
dec
jp
jg
mov
pop
shl
mov
pop
mov
jb
addr16
xlat
sub
fs
xchg
pop
cmp
movsb
mov
test
fmul
push
std
fnstsw
mov
roll
cmp
mov
jne
loopne
test
and
in
je
stos
mov
decb
les
mov
mov
push
inc
add
lret
sti
out
sahf
mov
fldt
mov
jns
lods
pop
data16
cmp
leave
popf
outsl
rcll
addr16
cwtl
inc
int3
test
loop
sbb
incb
fnstsw
aam
lods
shrb
mov
popf
mov
pop
cmp
movsb
or
inc
mov
mov
push
movsb
adc
in
scas
and
push
jge
or
push
into
es
fld
dec
les
aaa
inc
movsl
mov
add
aaa
fcomi
icebp
push
aaa
int
cmpsl
jno
dec
and
push
or
hlt
push
xchg
push
fistl
and
dec
pop
xchg
call
jae
ljmp
sub
testb
lahf
ljmp
push
gs
mov
enter
adc
cmpb
nop
adc
xor
or
rol
xor
push
movsb
xchg
inc
addr16
mov
mov
mov
loope
xor
adcb
adc
jbe
add
push
pop
and
rcrl
cmp
inc
popf
scas
rcrb
dec
aam
les
rorb
mov
mov
aas
sbb
and
popa
int
sub
xchg
movsb
fnsave
addr16
lods
and
or
inc
mov
adc
mov
lea
test
out
mov
inc
inc
idivl
push
mov
mov
loop
cmp
mov
push
jp
push
test
arpl
xorl
xchg
xchg
lods
sbb
mov
out
stos
push
daa
icebp
dec
enter
sbb
and
jge
call
pop
in
pop
mov
es
cmp
sub
dec
adc
getsec
and
cbtw
mov
aam
xor
test
scas
outsl
inc
pop
int
and
xchg
rcl
sub
mov
ficoml
sbb
sub
aaa
sarb
negb
test
dec
or
fldl
movsb
addl
ret
addl
push
lcall
fnsave
sub
xchg
movsl
push
cmp
test
shufps
xchg
mov
dec
xchg
xchg
stos
decb
test
ret
popf
int3
aad
cmp
adc
sahf
dec
aad
aad
lock
lcall
add
jne
cmp
pop
pop
lods
jns
add
xor
push
icebp
rorl
ret
and
data16
add
mov
push
loopne
popa
push
cltd
test
mov
fwait
push
loopne
inc
fcomp
and
inc
push
cmp
stos
popl
jne
mov
jmp
gs
jae
aam
mov
hlt
movsb
fstp
add
fisubrs
std
icebp
in
insb
pop
lcall
pop
fists
xor
mov
imul
cmpsb
mov
mov
mov
pop
in
movsl
push
arpl
jnp
repnz
cld
or
fidivrs
pop
jo
jl
gs
rcrl
aaa
addb
jae
inc
inc
js
sbb
vucomiss
inc
sar
mov
pop
inc
add
inc
xor
sbb
mov
dec
es
aaa
mov
cmovg
mov
sbb
aas
sub
ljmp
cwtl
adc
push
rolb
xchg
lcall
and
mov
inc
mov
insb
dec
mov
enter
jmp
ficoms
aam
shlb
push
xchg
ret
xor
and
jno
dec
loop
jp
mov
rolb
adc
aaa
cmp
stc
scas
push
mov
mov
mov
cmp
mov
and
shll
push
stc
mov
sbb
mov
test
add
push
shl
jmp
mov
cmp
pop
repz
lahf
or
jb
pop
cmp
popf
lods
es
in
mov
or
sbbl
sub
jle
xor
pop
xchg
outsb
xchg
push
stos
push
cld
cli
and
sub
xor
push
xor
shrb
aaa
cmp
fadds
inc
jp
xor
and
mov
mov
lds
into
push
clc
aaa
fmull
int
mov
xlat
loope
divl
adc
push
ret
xchg
sti
mov
and
push
test
int3
popa
pop
out
push
subb
test
cld
or
andl
jge
push
inc
dec
jb
loopne
jbe
mov
pop
and
outsl
imul
inc
loope
adc
lods
push
dec
iret
mov
mov
in
mov
cmpsl
lea
mov
or
jl
ret
test
dec
mov
stos
pop
jl
adc
flds
scas
inc
and
loopne
loope
ret
fdivp
or
sub
xchg
mov
jge
fwait
shll
adc
adc
and
cmpsl
add
stos
lahf
test
repz
pop
xchg
call
pop
jnp
test
mov
pop
pop
add
sarb
clc
xchg
push
scas
jge
cli
xor
cwtl
mov
rorb
dec
lret
cltd
test
sahf
aaa
push
dec
incl
mov
and
arpl
popf
mov
les
and
mov
xchg
in
out
addr16
test
inc
lods
cmp
ds
outsb
gs
repnz
jno
or
mov
andl
test
std
lcall
sbb
mov
das
cmp
je
addr16
and
enter
mov
mov
je
mov
sub
mov
andb
sbb
int
mov
cli
negb
cwtl
enter
aas
xor
lods
icebp
icebp
enter
adc
inc
sti
js
hlt
mov
pop
shrb
ja
sbb
mov
notb
inc
cmp
lea
test
aaa
add
ficoms
clc
pop
pop
xor
test
cltd
pop
pop
push
fcomip
push
aaa
sysexit
call
mov
mull
les
ljmp
jecxz
and
loopne
mov
dec
mov
pusha
pop
int3
or
lret
stos
mov
cmc
sbb
movsl
popf
rcrl
add
rorl
push
dec
or
mov
xor
flds
push
push
cwtl
lret
loopne
es
mov
xchg
xor
shlb
js
int
xchg
pusha
filds
insb
add
inc
or
imul
xor
out
cli
lcall
bound
push
mov
pusha
xchg
xor
or
stc
bound
pop
cmp
xor
mov
dec
rorb
add
fsubrs
insb
and
insl
fsubrl
cmp
jp
mov
mov
insl
int3
mov
mov
sub
shrl
jle
mov
push
shlb
fucom
enter
ljmp
pushl
inc
adc
loop
sbb
jne
or
push
xchg
clc
mov
and
mov
jle
add
jo
mov
mov
sbb
negb
lea
das
inc
pop
cmpsl
sub
fnstsw
outsl
pop
test
in
cmpsl
stos
hlt
lods
in
or
jle
sub
pop
xchg
sbb
popa
ret
xchg
insl
in
cwtl
leave
div
insb
fiaddl
sbb
cmpsl
mov
sbb
sbb
and
sbb
lret
sbb
fstpl
cltd
ds
jb
aaa
incb
xchg
popf
lahf
push
mov
mov
and
movlps
ja
je
pop
jnp
add
movl
repz
sub
xor
or
add
adc
mov
sti
ffree
dec
sahf
or
sbb
add
mov
sbb
packsswb
sub
xchg
pop
repnz
inc
mov
cmp
sbb
sti
jo
stos
push
icebp
loope
in
adc
push
fadd
adc
cld
testl
push
xor
ds
aad
push
repz
pusha
jle
xchg
sbb
push
mov
out
mov
sub
loopne
sub
mov
sarb
lret
inc
push
fs
sarb
mov
add
psrlw
pop
adc
aaa
inc
sbb
sbb
shr
fbld
seto
dec
or
fwait
push
adc
test
pop
inc
arpl
dec
bound
in
cmpl
mov
pop
dec
rclb
mov
int3
sub
xlat
in
pop
add
xchg
pop
test
leave
repz
cmpl
jp
mov
push
xchg
jp
cmc
add
adc
xchg
add
arpl
sbb
insl
adc
loope
fnstenv
push
pop
sub
movl
xlat
loope
imull
in
stos
fcmovne
push
mov
or
repz
gs
cmp
addb
test
adc
push
dec
jne
es
std
pcmpeqd
jmp
pop
std
roll
mov
call
inc
insl
mov
fld
hlt
cmp
leave
dec
push
lds
inc
daa
movsb
jp
das
ret
and
inc
mov
test
outsb
pop
inc
bound
lahf
movsb
sarb
jmp
js
xchg
pop
xchg
adc
outsl
fs
cmc
clc
xchg
adc
cmpxchg8b
cmp
loop
inc
pop
pmuludq
inc
push
cwtl
mov
in
mov
mov
xor
xor
mov
mov
lahf
xor
fdivs
push
mov
inc
pop
shlb
xor
mov
jmp
inc
push
cmp
mov
shll
mov
call
sub
xchg
fwait
or
imulb
jp
and
sub
imul
push
pop
hlt
arpl
and
adc
aas
ljmp
jp
or
xchg
out
out
inc
fsubs
inc
mov
mov
incl
cmpsb
clc
push
lret
imul
scas
jge
mov
mov
xor
sub
mov
test
outsb
inc
stc
aam
jo
icebp
mov
jge
imulb
adc
lret
aas
cld
mov
jecxz
insl
rcr
test
ret
sbbb
add
dec
jg
mov
sub
cmp
dec
test
fnstenv
push
sub
mov
shll
jno
out
mov
in
outsb
mov
push
push
ds
xorl
orb
cmp
out
jbe
sbb
xor
xor
les
xchg
ds
xchg
or
outsl
shll
adc
shrb
xor
jo
mov
jecxz
cmpsb
ljmp
jns
test
mov
pop
jmp
push
mov
mov
adc
test
sbb
arpl
pop
pop
xchg
and
sub
xor
int
mov
rolb
test
popf
popf
ljmp
fnstsw
arpl
xchg
jmp
dec
push
popf
mov
loope
xchg
cmpsb
notb
mov
or
hlt
push
ljmp
jns
mov
sti
sub
push
pop
mov
mov
sub
mov
lahf
jae
xor
ret
addr16
xchg
cs
rcrb
std
xchg
xchg
ror
cwtl
es
jae
adc
pop
fdivrl
mov
pop
push
rclb
push
adc
push
jmp
jl
faddl
les
mov
insl
push
mov
nop
popa
mull
xchg
cmpsl
cmp
dec
mov
sti
mov
add
les
aas
data16
sbb
loope
xorb
pop
xchg
or
mov
sbb
pop
add
int3
add
mov
push
push
xchg
jo
insl
push
xchg
cmpsb
mov
fisttps
or
ficoml
cmpsl
jb
xor
rol
fisubs
out
jg
pop
or
dec
add
cmc
adc
cli
outsb
mov
arpl
ds
xchg
loope
dec
in
pop
negl
data16
jae
push
int
in
cmp
insl
sub
daa
lcall
scas
rcll
mov
popa
xchg
mov
fs
sub
out
mov
iret
ret
aaa
pop
scas
xor
sahf
mov
loopne
pop
push
cmc
fisubs
sub
cwtl
or
mov
jmp
and
out
and
mov
insb
pusha
dec
jge
mov
call
sub
shl
pop
xchg
mov
aam
pop
add
iret
cmp
fldl
add
jb
stos
xor
pushf
stc
add
aam
pop
aaa
out
inc
shrb
jno
rclb
stos
mov
cltd
ret
mov
enter
inc
sub
movlps
push
mov
pop
std
jns
fcmovbe
add
mov
add
inc
lods
jae
jb,pt
loop
jge
sbb
push
jg
push
ficomps
pop
call
fisttpl
nop
adc
nop
sub
sarl
push
jmp
out
mov
fdivs
hlt
hlt
data16
add
sti
rclb
in
flds
push
sub
andl
adc
jg
rcl
fwait
loopne
js
push
out
stc
mov
lret
lds
jno
rcrl
and
mov
xchg
xchg
repz
push
and
adc
cmp
imul
mov
leave
mov
pop
cltd
push
or
punpckhdq
jns
ss
test
pop
mov
pop
das
jns
loop
mov
or
cmc
shll
repz
jl
xor
sub
mov
iret
jp
mov
push
inc
cmp
stc
fdivrs
addr16
jb
xor
fidivs
jnp
mov
mov
lock
mov
sahf
add
pop
stos
cmp
push
jae
fcomps
psubusb
add
sti
fsubrs
popa
rcrl
fnstenv
mov
dec
and
dec
adc
call
fldt
sub
xchg
jmp
aad
ficoml
xorl
jg
rorb
inc
dec
mov
test
cmp
adc
fdivrl
js
xchg
test
jns
jb
fdivr
jnp
lret
jb
fisubl
pop
ds
or
int
pavgb
xchg
fcmovu
test
sbb
fildll
pop
mov
ja
pop
stc
cmp
mov
add
push
cli
cmp
rolb
cmpb
test
sbb
adc
xor
adcl
stc
jle
sub
xor
and
mov
xlat
add
add
xor
es
fs
or
jl
psllw
popa
pop
push
popf
or
fsub
adc
stos
or
pusha
push
sbb
jecxz
gs
jp
push
dec
rorb
scas
mov
std
xchg
insb
fsubl
data16
popf
jb
mov
dec
aaa
ja
fs
enter
paddw
pop
adc
pop
imul
xor
ret
lret
sub
xchg
xor
inc
lods
push
mov
adc
sbb
sub
jnp
sbb
add
mov
cs
mull
xchg
or
stc
mov
or
add
push
jl
jle
outsb
pushf
push
inc
sbb
fistpll
dec
jmp
dec
pop
mov
lret
push
aaa
mov
aaa
push
aaa
or
inc
mov
push
in
ret
imul
or
sub
cld
aad
add
fs
dec
loopne
cmp
push
movsl
iret
adc
sub
jle
push
mov
daa
pusha
jge
pop
push
ss
pop
jmp
ljmp
pop
or
lahf
lds
or
imul
into
adc
mov
jp
fstl
lret
test
movsl
pop
pop
cwtl
pop
dec
inc
push
ss
xor
shl
mov
lcall
ret
and
stos
jecxz
and
sahf
add
outsb
scas
out
pop
test
cmp
xchg
mov
fistps
cmc
icebp
jecxz
fldl
test
pop
xor
ficompl
clc
pop
xor
int
rcl
xchg
jecxz
test
push
cmc
pop
fisttps
stos
or
mov
fistpl
pop
outsb
lret
movsb
xchg
call
iret
add
xor
pop
stos
jl
hlt
adc
data16
test
inc
xor
leave
jg
ret
pushf
xor
pop
sbb
stc
lcall
mulb
jns
inc
ret
loope
and
jg
jb
clc
push
movsbl
inc
aaa
das
jne
shll
xor
adc
loope
sahf
xchg
enter
pushf
inc
jg
sub
xor
sbb
ret
and
out
and
add
and
stos
jae
cmp
jecxz
shll
pop
test
mov
jle
aaa
es
lods
or
mov
ljmp
mov
and
sarl
repz
shlb
push
loop
scas
insl
jns
test
das
cmp
push
bnd
sbb
mov
aad
xor
notb
fmuls
pop
xchg
enter
int3
scas
xor
sub
mov
push
std
leave
cmp
pop
xor
xchg
xor
mov
jl
push
iret
repnz
mov
push
ljmp
sahf
jg
sbb
sub
push
repz
loopne
leave
sbb
shlb
or
in
lock
stos
push
shl
sbb
jno
and
js
ss
out
in
push
dec
fxrstor
idiv
or
dec
jnp
nop
push
loop
aad
sub
xchg
mov
sub
imul
xchg
decl
or
clc
sub
mov
ret
fldpi
pop
sti
rorl
jne
push
test
xchg
mov
loope
dec
push
ret
xchg
hlt
data16
pusha
sub
inc
mov
mov
and
xchg
mov
rorl
mov
cmp
daa
and
or
mov
sub
es
loopne
movsb
js
fists
pop
fmul
xor
icebp
cwtl
ds
xor
sar
push
repz
fnsetpm(287
push
test
mov
fstp
out
xchg
jne
push
dec
xchg
into
jmp
xchg
sarl
mov
and
in
leave
push
inc
jg
cld
out
or
push
fiaddl
and
sarb
test
mov
push
inc
stc
mov
seto
out
jae
jo
inc
pop
repz
jns
add
bound
cmp
and
cs
jg
rorb
sub
ret
mov
push
inc
inc
mull
mov
ret
add
ljmp
lods
sub
ss
xor
dec
mov
aas
icebp
xor
inc
pop
fnstsw
shl
insb
xchg
mov
ret
xchg
pushf
adc
lock
push
sub
stos
sub
mov
dec
movsl
and
lahf
jns
mov
jmp
pop
cmp
stos
negb
mov
pop
cmp
or
jmp
mov
and
test
push
pop
sbb
call
hlt
sub
push
in
outsl
cs
and
addr16
xchg
mov
test
add
in
shl
push
lahf
inc
xor
sbb
ja
pop
mov
jecxz
rcrl
dec
mov
xchg
arpl
push
aam
push
push
icebp
sub
xor
pop
ret
push
inc
scas
pop
inc
gs
ret
sub
insl
pusha
test
ja
adc
movsb
push
out
xor
insb
clc
leave
movsb
fld
xchg
bound
hlt
push
lret
push
and
fdivl
lret
xchg
mov
sub
push
xchg
or
xchg
in
int
sbb
or
mov
add
pusha
stos
aas
or
sub
addr16
pop
mov
add
xor
stos
dec
or
adc
out
ljmp
mov
mov
out
pop
adc
sbb
mov
jg
mov
mov
stos
jp
arpl
sarb
jmp
fists
lock
fsts
pop
pop
scas
sti
ret
add
mov
xchg
push
xchg
iret
bound
add
or
jne
inc
xchg
pushf
or
out
sub
cmp
in
push
jl
movsl
jmp
out
mov
jb
test
sbb
cmp
xor
mov
and
xor
je
fcompl
mov
scas
shr
push
ss
adc
dec
aam
sar
cmp
in
push
fnstcw
stc
fisttpl
in
sbb
pusha
jae
ss
sbb
shlb
loopne
mov
outsl
push
sbb
sub
aas
adc
loopne
icebp
lret
mov
sbb
fimull
test
sahf
jp
inc
test
xchg
pop
jg
stos
cltd
mov
push
movsb
xorb
sub
lcall
mov
sbb
fisttpl
hlt
aam
insb
cmp
pop
cs
cmp
hlt
adc
ret
sub
int
inc
js
dec
lea
negb
mov
cmc
adc
cmp
jp
or
loope
add
and
outsl
in
not
dec
cmpsl
mov
test
and
pop
arpl
push
dec
pop
xlat
insl
sarb
aad
mov
popl
mov
and
movsl
inc
repnz
xor
push
dec
jp
aas
shlb
lds
adc
stc
xor
mov
sbb
shl
and
sub
mov
or
fstpl
loop
int
aas
xor
mov
sbb
cmp
mov
fstl
cmp
cmpsl
mov
push
push
pop
adc
mov
xor
lret
mov
jp
sub
sub
popl
add
mov
push
sti
shl
push
xchg
aas
jle
cmp
xchg
or
sbb
pop
cld
cmp
mov
sub
ja
jmp
adc
dec
xchg
sub
mov
pusha
arpl
outsl
mov
sbb
sub
repnz
rcrb
push
push
pop
jno
lcall
in
xor
mov
cmpsb
lret
divl
sub
loope
xor
negl
es
aam
dec
lock
pop
dec
sbb
jecxz
add
ret
mov
mov
mov
in
cmpsb
loopne
stos
mov
jmp
fimuls
mov
inc
clc
test
sbb
divb
pop
sbb
pop
in
add
jns
addr16
push
mov
mov
dec
mov
pop
xchg
or
cmp
test
add
int3
fmull
cmpb
sbb
ja
mov
add
xchg
insl
fidivl
idiv
ds
sub
pop
and
lret
imul
and
or
mov
and
loopne
jg
push
xchg
mov
sbb
sarb
stc
push
mov
add
mov
test
jo
js
dec
in
mov
add
pushf
fsubr
ror
jns
inc
and
inc
test
adc
ljmp
scas
hlt
sti
testl
out
repnz
cmc
sub
clc
arpl
mov
adc
or
lahf
pop
out
mov
push
and
pop
inc
rol
inc
pop
outsb
cmp
xorl
movsl
cmp
or
sbb
stos
adc
push
mov
xchg
lds
mov
adc
ret
jae
sbb
mov
xor
inc
sbb
xor
testb
sbb
push
adc
out
repnz
adc
testl
aam
lock
inc
dec
ret
pop
inc
mov
pop
xlat
mov
xchg
daa
mov
pusha
jns
sti
clc
cmp
clc
out
mov
loopne
iret
adc
mov
adc
movsb
into
rorb
hlt
int3
jg
pop
or
shrl
rorb
sub
mov
jb
cmp
mov
mov
mov
shlb
xor
cs
inc
push
dec
mov
icebp
mov
int
popa
cmpsb
add
ljmp
or
leave
push
std
cmp
sbb
popf
das
in
shlb
dec
push
nop
add
mov
rcl
dec
insl
rorb
pop
ja
in
pop
leave
mov
xchg
xchg
push
mov
outsl
repz
xchg
in
xchg
xor
mov
jb
test
pop
popf
pop
and
stos
fdivp
dec
xchg
mov
js
cmp
push
ffree
nop
add
in
xlat
jecxz
pop
cltd
dec
push
cmpsl
xorb
jnp
shll
cmp
xchg
sbb
movsl
jg
inc
movsl
xchg
stos
sub
lret
fbstp
adcl
sub
xor
pop
imul
adc
dec
mov
mov
push
dec
mov
inc
stc
pop
mov
jl
add
push
stos
lock
pop
sahf
cmp
push
in
lret
icebp
sbb
lods
mov
adc
test
inc
add
jmp
add
scas
mov
cmpsl
or
daa
idivl
add
and
dec
dec
fsubl
test
push
in
adc
aaa
aad
dec
dec
lret
cmp
les
inc
aaa
rcr
stos
mov
mov
int3
cwtl
dec
loop
mov
leave
call
sub
or
in
inc
inc
mov
rcrb
cmp
icebp
jle
dec
xor
addb
add
jne
cmp
scas
inc
sbb
stc
xchg
mov
popa
in
lock
sbb
mov
repnz
hlt
je
subb
stos
jmp
stos
pop
sub
push
bound
add
ja
sbb
dec
or
pop
out
std
je
leave
push
test
aas
xlat
iret
sti
push
xor
mov
ds
or
pop
ficoms
and
xor
adc
xchg
scas
mov
movsl
cli
ljmp
je
pop
sbbb
dec
pop
mov
push
push
pop
mov
icebp
cmp
mov
push
mov
xchg
inc
es
or
dec
sub
repnz
mov
lds
pop
fldcw
jg
test
add
mov
popa
std
ljmp
aaa
or
pusha
pop
imul
insb
es
sti
mov
inc
and
adc
xor
into
arpl
dec
in
push
out
out
je
mov
jmp
cmp
xchg
insb
sar
mov
cli
decl
mov
ss
lret
or
mov
imul
or
imul
pop
js
lock
sub
rorl
test
or
fnstcw
xchg
sbb
and
cmp
out
fsubrs
data16
push
scas
mov
mov
xchg
add
cmc
out
add
cmpsb
mov
enter
cwtl
inc
mov
xchg
cmpsl
cld
push
int
aad
push
dec
mov
cld
nop
xor
inc
add
sub
jo
inc
mov
in
push
mov
scas
adc
jg
sti
insl
inc
shlb
and
xchg
xchg
addr16
cmp
mov
push
std
out
and
ret
daa
inc
rclb
xor
imul
push
adc
xorl
std
mov
je
sbb
sti
cmc
mov
lods
xchg
icebp
jle
sbb
fidivs
mov
jle
aas
adc
ljmp
add
cmp
jae
xor
sub
xlat
mov
mov
xor
xorps
jg
fsts
push
cmc
icebp
push
outsb
push
out
pop
push
xchg
iret
cmp
test
test
ja
test
mov
in
add
test
sarl
sub
out
mov
jp
mov
jge
addr16
add
mov
mov
test
shl
lock
and
int3
iret
mov
dec
test
cmp
mov
pop
or
mov
push
ficomps
lahf
add
ret
imul
divb
jmp
inc
lret
test
mov
aas
xchg
addr16
andb
lods
cltd
mov
adc
xchg
and
pop
add
push
xor
out
jp
into
aas
mov
ds
xor
scas
in
dec
ficompl
icebp
cli
or
mov
popf
pop
push
add
aam
push
sbb
pop
push
inc
mov
andl
arpl
push
dec
push
aam
mov
lahf
cmp
pop
mov
test
and
or
in
xor
dec
adc
das
test
test
mov
repz
and
pop
popf
rorl
aam
jne
xor
mov
scas
mov
pop
outsb
xchg
pop
notl
sqrtps
cli
xchg
adc
mov
xchg
pop
fimuls
mov
loope
fcmovu
sti
add
pop
dec
dec
pushl
lcall
jo
pop
out
in
jnp
psrlw
fidivs
div
std
dec
pop
pop
mov
lods
jne
and
aas
fstl
out
mov
popa
outsl
or
repz
fnsave
aam
fsub
and
cs
xchg
nop
and
pop
imul
mov
adc
inc
xor
mov
negb
xor
loopne
jg
rcrl
dec
add
lods
jae
in
inc
push
mov
int
jae
push
xchg
inc
dec
outsb
aam
popf
jb
mov
ja
aad
mov
mov
int3
cmp
mov
mov
ret
and
pushf
ret
es
mov
test
xchg
faddl
cwtl
das
push
dec
sub
dec
mulb
mov
mov
sarl
cs
pop
add
lock
scas
fisttps
and
imul
aad
adc
xor
dec
in
inc
dec
push
jne
jnp
pop
dec
test
std
mov
mov
ret
insl
rorb
fwait
jbe
jmp
cmc
icebp
in
add
int
sti
xor
adc
and
inc
test
scas
adc
pop
adcl
add
icebp
int
loop
pop
mov
and
mov
addl
adc
add
and
mov
ljmp
xor
pushf
int3
mov
int3
lock
pushf
lret
std
scas
mov
pop
mov
push
push
fs
mov
cmp
hlt
addr16
dec
sbb
movsl
out
movsl
jmp
jae
xchg
outsl
aaa
jne
call
pop
clc
cmp
lds
sub
or
lahf
or
jg
shlb
sahf
cmpsb
mov
push
testl
cmc
insb
popa
mov
xchg
mov
ret
ds
push
inc
dec
data16
cltd
mov
bswap
in
mov
iret
mov
mov
lock
push
je
icebp
movsb
scas
lea
int3
xchg
lret
jmp
int3
ss
inc
mov
ds
add
gs
push
dec
jno
addr16
jne
jbe
jnp
xor
std
mov
pop
jne
xor
cmpsb
lods
pop
mov
and
jno
into
les
mov
jb
xchg
lahf
jle
jp
jecxz
add
add
sahf
cmpsb
inc
cs
fwait
cli
xor
add
test
push
add
xchg
ss
pop
arpl
pop
adc
arpl
mov
dec
int
or
dec
rcl
fstl
push
out
cwtl
fwait
shll
mov
lret
movl
adc
xchg
repz
jo
jnp
cmp
fmull
or
jae
inc
xchg
divl
mov
imul
in
cmp
vpmadcswd
jge
mov
aad
pop
or
ret
inc
test
testl
aad
lock
cld
cmpb
pop
fcmove
dec
lds
loop
cmp
lods
add
in
imul
rcr
int3
test
scas
cld
mov
shlb
xor
into
sahf
push
adc
add
cmpsl
cmp
xor
pushf
mov
das
icebp
and
cli
xor
jmp
xchg
sbb
mov
sbb
add
not
dec
push
leave
or
and
pop
pop
dec
test
and
sub
fiaddl
xchg
push
stos
test
add
outsl
push
aas
adc
pop
outsl
mov
mov
xchg
mov
adc
xchg
adc
mov
and
xor
xchg
add
int3
out
fists
sbb
cmpb
pop
push
fisubrs
fnsave
repnz
cs
mov
add
cmp
xor
les
mov
dec
lods
pop
aam
push
movsl
inc
sub
aaa
add
pop
leave
into
xchg
cmp
xchg
jecxz
push
cld
mov
and
pop
jmp
divl
pop
sub
outsl
add
stos
add
daa
imul
jo
popf
pop
dec
cltd
inc
fidivs
jp
sub
sub
dec
scas
adcl
xor
out
pop
jns
pop
or
jno
adc
jne
push
lahf
pop
in
rcl
mov
or
outsb
lahf
pop
xchg
testb
pusha
adc
dec
xorl
test
sub
adc
scas
mov
int3
ret
mov
addl
cmp
mov
repnz
shrb
dec
in
enter
mov
pop
loopne
roll
cmpsb
jle
sub
mov
adc
lret
xchg
gs
sub
push
mov
inc
sub
jae
jno
mov
adc
xchg
add
jne
pop
out
aas
leave
pop
es
ljmp
jno
pusha
mov
mov
push
cwtl
divl
inc
jmp
add
push
rol
aam
jle
out
xchg
sbb
outsb
xor
mov
jae
sub
bnd
jl
and
scas
cltd
push
xor
in
mov
sbb
cld
rcrl
mov
sbb
pop
mov
mov
mov
decl
xor
push
fistpll
ret
addr16
mov
in
xor
repz
ficompl
add
lcall
jle
or
push
sub
es
xchg
aaa
jge
ret
cld
cmp
repz
ds
push
dec
jnp
push
pushf
or
mov
and
mov
push
fmull
fisubs
mov
dec
sbb
adc
mov
mov
stos
mov
jp
mov
es
mov
jnp
cmp
cmpsl
cwtl
nop
add
cld
testb
int
cld
lods
outsb
sub
imul
lds
push
das
xchg
sti
decb
pop
pop
sub
jnp
icebp
addr16
mov
hlt
in
adc
xchg
hlt
mov
mov
push
push
cmpsl
int3
sub
fnsave
inc
dec
lock
iretw
lds
clc
adc
adc
rcrl
jbe
mov
scas
shrb
or
incl
subps
mov
push
cltd
mov
aad
add
cs
push
or
fs
add
arpl
xchg
pop
adc
cmpsl
xchg
negb
lahf
in
aas
mov
pop
mov
aaa
addb
inc
je
pop
cmp
lods
mov
cmp
mov
mov
inc
int
push
add
or
rep
mov
dec
out
pop
lcall
sbb
jle
das
mov
addr16
push
xchg
sub
push
iret
or
mov
push
in
cs
pusha
sbb
aas
int3
dec
popa
rol
cmpsl
dec
pop
outsb
loope
mov
cwtl
cmp
xchg
xchg
andl
imul
push
jp
cmp
dec
decb
rcrl
aad
ret
vpsrlq
inc
adc
fimuls
popf
mov
test
or
add
xor
lcall
sub
cmp
mov
in
push
pop
and
push
jg
pop
sbb
or
popa
loopne
lret
loopne
sub
push
mov
jno
pusha
cmp
stos
mov
pushf
aaa
inc
dec
fcomip
lods
fldl
xlat
add
xchg
mov
fistpl
addr16
xchg
adc
push
push
icebp
xlat
out
pushf
cmp
adc
movsb
cmp
sbb
mov
out
adc
out
add
mov
and
cltd
fidivrl
or
inc
icebp
mov
adc
add
inc
jne
xchg
pop
inc
and
mov
mov
mov
sbb
outsb
sbb
cmp
dec
pop
xchg
mov
clc
arpl
pop
imul
mov
sbb
fsubrs
fs
cmp
mov
fcmovb
push
lea
fstl
data16
pop
mov
jl
clc
cmpsl
xor
jae
pop
loope
or
ss
sti
xor
outsb
shll
loopne
push
je
pop
cmc
mov
pop
push
jo
mov
lds
stos
or
xchg
pop
pop
dec
clc
enter
call
sub
cmp
in
lret
jle
outsb
jp
jo
add
out
jge
imul
repz
fadds
or
ljmp
aad
xchg
pop
mov
push
std
sub
mov
pop
mov
sbb
shl
adc
jecxz
pop
cmp
gs
push
pop
inc
cld
in
adc
icebp
mov
and
lret
fsts
mov
jb
and
fsubs
insb
fsubl
dec
repnz
mov
jbe
nop
add
add
dec
push
pop
loopne
in
xorl
pushf
pop
arpl
lds
lods
js
or
xlat
push
dec
ret
out
pusha
add
lock
fadds
mov
jnp
or
std
push
dec
sahf
or
mov
insl
icebp
dec
add
xlat
in
bound
fistpl
popf
mov
xchg
andl
mov
xlat
cli
or
jae
out
scas
dec
dec
dec
jg
scas
je
jmp
shlb
jl
int3
add
scas
or
dec
pop
lret
pop
sbb
xor
icebp
movsl
mov
pop
movsb
pushf
xor
inc
in
pop
inc
icebp
aaa
jnp
xor
mov
mov
xorl
in
lock
outsb
jge
clc
repnz
scas
push
std
fidivl
mov
stos
and
sahf
pop
inc
inc
sbbl
dec
xchg
lret
pop
mov
ja
mov
inc
pusha
mov
int3
add
repz
in
fldenv
adc
fidivrs
mov
dec
mov
testl
mov
sbb
in
loop
mov
inc
aas
bound
out
and
mov
or
imul
fmul
loope
and
shl
adc
iret
xchg
jo
mov
inc
mov
jo
jl,pn
sub
outsb
mov
mov
ja
stos
mov
xorb
push
fdivrs
inc
add
stos
jecxz
adc
int3
test
pop
mov
adc
push
mov
imul
mov
leave
aam
xor
int
fmuls
std
arpl
dec
call
cs
cmpsb
test
push
inc
add
push
push
fildll
mov
decb
lcall
wrmsr
movb
jl
xchg
movsl
clc
aas
int
xor
out
and
adc
add
jns
jbe
cmp
jl
lahf
pop
push
push
aam
add
cmpb
rcrl
jae
lcall
stos
mov
push
fwait
pop
fwait
cwtl
sub
add
jp
xchg
jp
add
aam
ret
mov
pop
inc
jle
loopne
cli
mov
and
stos
icebp
mov
sub
rcrb
or
xchg
sbb
lods
jo
rorb
add
rolb
imul
mov
sahf
xchg
test
jnp
lcall
mov
push
add
and
xchg
ret
test
and
sbb
out
or
xchg
or
loope
aas
je
pushf
push
mov
cmp
sub
sbb
mov
orb
lahf
cmp
cmpsl
sub
outsb
push
jns
test
repz
jnp
dec
loop
les
push
lret
cmp
sbb
out
push
jns
cmpsl
sub
fimull
std
popf
outsb
pop
and
lock
dec
cmp
add
aas
sub
aam
push
mov
or
call
scas
jo
xchg
into
nop
ss
mov
or
push
lods
and
inc
inc
int3
jbe
fcmovnbe
adc
inc
int
clc
mov
test
add
lcall
adc
daa
push
arpl
outsb
inc
mov
jbe
sub
shll
push
es
xchg
pop
jecxz
jle
arpl
bnd
cmpb
bound
js
push
mov
insb
lea
test
loopne
inc
mov
adc
popf
pop
mov
jp
xor
cmc
ja
mov
inc
insb
dec
es
ret
lea
movswl
ds
psubq
push
mov
imul
sub
lods
mov
repz
ja
std
ja
sbb
mov
mov
rcrl
iret
mov
inc
mov
adc
xor
nop
stos
out
lcall
pop
mov
out
xchg
jg
adc
mov
or
cmpsl
sbb
lahf
fbld
push
xchg
rcrb
aas
xchg
xor
xchg
bnd
push
filds
cmp
jle
ljmp
dec
divl
ds
call
jge,pn
insl
xchg
mul
pop
out
sub
ja
sbb
jmp
shrl
cltd
in
inc
pop
fidivl
and
loop
push
mov
movsl
enter
inc
pop
inc
orl
and
in
popa
orl
pop
push
loop
sub
pusha
pminsw
jns
lcall
adc
sahf
or
push
fdivrs
cmpsb
dec
cmc
pusha
adc
imul
ret
movsl
inc
call
dec
inc
push
imul
into
imul
jo
les
mov
add
negb
xor
sub
push
sub
daa
enter
data16
xchg
mov
jb
int
mov
pop
dec
mov
cli
push
xchg
sbb
outsb
xor
xchg
push
dec
data16
hlt
dec
cmpsl
ficoms
sarb
xchg
xor
flds
jns
push
lcall
out
mov
repz
lret
push
push
or
mov
xchg
inc
repnz
mov
add
push
push
mov
jbe
ds
sbb
jne
jbe
jns
repnz
std
adc
mov
xor
add
sti
jo
in
insb
repnz
into
sub
push
cmp
icebp
mov
iret
aaa
sbb
jo
sub
jg
sbb
add
nopl
imul
mov
ja
mov
xchg
pop
adc
cltd
bnd
cmpl
push
push
xchg
xchg
adc
cwtl
ja
popf
mov
inc
in
in
cmp
xchg
mov
xchg
sub
mov
stos
jge
sbb
sub
pop
sbb
fcompl
sti
insb
mov
nop
aam
ficompl
sub
inc
insb
movsb
mov
mov
fldt
sub
lahf
dec
push
add
xchg
adc
stos
xchg
lock
dec
mov
outsb
shll
mov
sbb
fs
faddl
mov
mov
imul
pop
adc
addr16
xor
sahf
or
jle
xchg
das
jle
cmp
iret
or
shl
out
call
inc
or
ljmp
push
push
xor
xchg
into
xor
push
mov
aas
pop
sbb
fcmovu
sbb
out
daa
out
jae
inc
xchg
ljmp
push
pushf
dec
add
std
jecxz
pop
cmp
popf
testb
fsub
mov
add
push
rcll
lods
push
mov
mov
dec
ljmp
jl
jb
or
in
sahf
xor
sahf
iret
pop
mov
and
mov
and
movl
xchg
mov
lea
add
and
inc
mov
nop
mov
cmp
hlt
jecxz
and
dec
das
imul
movsl
int
outsb
pop
pop
ja
loope
mov
and
xor
orl
faddp
xchg
out
xchg
test
sbb
jle
xchg
dec
xchg
nop
cmp
lret
jge
movb
jle
inc
repz
js
mov
dec
and
ret
addr16
jp
fsubl
jb
mov
adc
imul
push
pop
push
scas
xor
or
dec
jo
in
push
lods
into
add
out
cmp
or
adc
lahf
mov
data16
je
add
or
into
add
aas
adc
jp
jno
add
sub
ds
in
test
adc
outsb
sbb
scas
xor
xchg
leave
jnp
mov
es
je
lret
cmp
jns
adc
aam
fdivl
stos
sub
mov
add
daa
aam
inc
jbe
push
inc
pop
mov
icebp
movsl
cmp
int3
add
test
xchg
mov
push
mov
fmull
inc
stos
push
pop
adc
fsubrs
add
cmp
daa
push
fsubrs
dec
imul
sub
aas
mov
movsl
iret
pushf
mov
cmpsl
filds
mov
xor
cmp
inc
in
inc
cmp
or
cmp
jb
push
outsb
iret
mov
jecxz
push
or
dec
adc
inc
fwait
stc
sub
push
fisubl
ds
add
sbb
push
daa
andl
inc
lods
xlat
popa
movsl
aaa
push
push
aam
dec
mov
daa
das
push
cmp
cs
arpl
push
data16
ret
sub
daa
icebp
inc
pop
mov
lods
mov
popa
mov
jmp
shlb
popa
push
decb
popa
shlb
mov
fidivrl
dec
mov
dec
repz
push
aaa
shll
and
push
mov
mov
fcmovnbe
fsubrs
movsb
enter
mov
push
or
xor
jbe
call
lock
call
add
or
leave
adc
mov
xchg
cmpsl
and
push
xor
cli
pop
addr16
cmpb
mov
adc
bound
fs
pop
fisubl
ret
cs
roll
mov
add
js
out
emms
push
mov
dec
sbb
test
dec
and
inc
pop
sbbb
dec
fcmovnb
jno
ja
test
inc
mov
cmp
test
loopne
lods
push
pop
adc
loopne
sbb
fsubrs
mov
imul
pusha
push
out
js
lods
mov
mov
jbe
dec
out
fsubr
push
mov
xor
push
jno
out
push
xchg
jo
push
mov
mov
and
dec
fistpll
xor
lea
out
lahf
adc
bound
les
nop
dec
jne
add
push
push
push
jo
imul
mov
aaa
or
jb
les
repnz
sti
mov
adc
dec
scas
push
das
mov
fdivrl
jl
mov
dec
jae
lret
cmp
adc
sarl
xor
adc
or
ret
cmpsl
cmpl
push
arpl
mov
imul
mov
cmp
icebp
rclb
mov
mov
inc
shlb
mov
cwtl
dec
jle
or
jg
and
push
es
jle
jmp
or
mov
pop
xchg
jb
push
lea
jge
or
sub
dec
ffreep
adc
cwtl
data16
add
inc
js
xchg
cmc
daa
inc
loop
xor
dec
out
imul
push
lods
out
lcall
int3
in
aaa
xchg
xchg
lods
sbb
xor
loopne
dec
xchg
cltd
mov
and
clc
rclb
lock
or
sub
cmp
mov
nop
rolb
fnstenv
out
mov
cwtl
add
adc
jl
mov
inc
test
jo
mov
pop
sbb
rorl
in
es
cld
xor
mov
data16
imul
out
cmpsl
lcall
enter
mov
xor
jmp
sarl
sbb
sub
adc
movsb
mov
push
aam
add
out
aad
push
and
addr16
rolb
out
neg
adc
mov
rcrb
test
pop
xor
or
fs
mov
jmp
mov
pop
jp
and
jnp
mov
dec
in
into
loope
leave
rcl
rcr
inc
pop
cmp
fstps
add
jne
pop
mov
int
inc
int3
iret
imul
sbb
jbe
mov
xchg
push
pop
lret
and
cmpsl
aaa
pop
and
xor
xor
and
or
mov
in
clc
and
int
push
push
lret
or
aam
pop
xlat
lahf
rcrl
lds
orps
mov
mov
dec
mov
push
dec
jmp
or
loop
mov
clts
jg
aad
les
sub
cwtl
movsl
jno
push
push
faddp
cltd
push
movb
stos
ds
fadds
pop
idiv
ss
fsubrs
imul
push
enter
push
loope
rcr
sub
ret
addl
inc
and
inc
adc
loope
dec
push
jne
aaa
mov
xor
cmpb
jl
div
mov
ror
add
dec
mov
or
lods
pop
stc
or
push
mov
adc
dec
nop
push
outsb
sbb
push
jmp
loope
sarl
out
push
fcoml
hlt
jbe
lock
aas
enter
xchg
jb
aad
xor
and
ljmp
mov
nopl
addl
sub
push
sbb
mov
sti
cs
push
lock
mov
scas
sahf
jns
sbb
cli
mov
jl
subb
jno
es
addr16
mov
jnp
in
fdivrl
clc
hlt
adc
xor
stos
fnstsw
call
lret
inc
jp
loopne
subb
xor
daa
mov
hlt
orl
dec
mov
xor
dec
popf
or
sub
sub
and
xchg
cmc
cmp
xor
cmpb
pop
fimuls
jp
in
inc
das
xor
inc
add
and
in
mov
xchg
pop
cmp
sub
lods
shll
std
pop
add
jle
cli
leave
and
testl
dec
add
es
shll
mov
add
add
sbb
aam
mov
mov
pop
aam
and
test
fs
arpl
sbbl
cltd
pop
add
xlat
lock
inc
lret
loope
mov
cs
scas
and
rclb
jno
fmul
stos
push
xchg
fsubrl
test
loopne
or
sar
push
icebp
dec
or
stos
mov
jle
and
int3
mov
nop
sbb
outsb
out
adc
pop
lea
push
repnz
je
inc
inc
push
nop
add
xor
jge
xchg
xor
adcl
cmp
mov
push
idiv
sbb
jp
ljmp
cli
ds
shlb
or
inc
outsb
push
mov
jnp
dec
dec
inc
cmp
dec
mov
scas
and
js
sarl
mov
dec
or
imul
rcr
fsubl
repnz
jne
and
in
push
out
sub
inc
pop
adc
out
dec
nop
lret
mov
addl
cmp
stos
je
cld
mov
jnp
push
fwait
negl
jecxz
ljmp
sub
into
loop
sub
rcr
mov
push
insl
xchg
push
das
popf
dec
nop
nop
movsl
mov
or
and
inc
mov
inc
push
vpmacsswd
out
and
cmpsl
int3
or
std
sbbb
in
pusha
xchg
mov
and
dec
fcmovnbe
adc
enter
sbb
xchg
sahf
xor
adc
movsl
jnp
mov
adc
loop
jmp
rclb
mov
lock
xchg
dec
insl
jne
shlb
sbb
test
jne
sbb
mov
frstor
xchg
or
jb
push
ret
jae
mov
outsb
lret
and
mov
mov
int3
jle
movsb
int3
inc
sbb
adc
icebp
shlb
xorl
int
cli
out
pop
xchg
push
stc
lods
out
mov
xor
pop
sub
jecxz
imul
fdivrs
xlat
sbb
or
stos
xor
enter
aad
push
dec
mov
out
repz
dec
sbb
jle
pusha
or
das
lds
xchg
fisubrl
mov
cltd
dec
jge
pop
dec
rcpps
mov
xchg
add
adc
lahf
gs
iret
cmp
pop
xor
xor
mov
add
orb
and
jns
cwtl
or
insb
mov
add
std
stos
sbb
test
movsb
pop
out
pop
sbb
icebp
insl
loopne
std
sub
ret
pusha
and
dec
roll
pop
rcll
mov
into
sbb
les
mov
test
xor
ss
stc
iret
sub
stos
inc
push
xor
xor
jg
lcall
ja
fcomi
mov
daa
mov
xchg
cmc
jae
pop
dec
out
std
mov
xor
mov
mov
in
lods
aas
xor
push
dec
ret
cmc
pushf
cli
fisttps
sti
inc
or
sbb
fidivl
cmp
mov
cmp
mul
adc
push
outsb
sub
pusha
inc
xor
jg
lods
js
outsb
nop
adc
cvttps2pi
rolb
push
push
jns
int3
out
pop
fiadds
js
adc
loop
or
dec
insb
lock
loope
in
out
popa
sbb
xor
jecxz
add
orl
call
dec
fwait
xlat
adc
jmp
cmpsl
iret
stos
repnz
sub
xor
jg
fimuls
jmp
icebp
popa
cmp
int3
hlt
mov
inc
fs
xchg
mov
cwtl
fsubp
mov
movsb
push
mov
les
into
pop
pop
jle
inc
jae
fiaddl
movsl
int
push
test
subl
gs
ljmp
fwait
sar
int
iret
enter
roll
popf
jle
cmp
mov
pop
nop
mov
cs
mov
nop
push
sbb
mov
mov
pop
and
in
inc
mov
mov
pusha
mov
outsb
push
cs
outsb
data16
push
jne
lods
pusha
test
xchg
fdivs
pusha
adc
sub
adc
sbb
jmp
jb
add
push
inc
pop
or
shl
push
sahf
push
outsl
or
jo
add
mov
inc
ja
ret
cmpsl
jmp
mov
jno
ret
push
xchg
punpckhbw
xchg
jle
cmc
or
lret
inc
mov
sbb
daa
in
pop
idivl
cmp
jo
sub
mov
jp
stc
add
xchg
imulb
ja
sub
das
push
outsl
icebp
lock
scas
shll
sbb
stos
xchg
inc
popf
imul
push
in
ja
sar
or
mov
jae
popa
pop
leave
pop
push
mov
out
dec
jge
pop
pop
jle
or
and
ljmp
in
rol
push
sbb
pop
mov
mov
mov
scas
cwtl
imul
out
sbb
into
test
or
dec
stos
lods
push
add
js
cld
cmp
iret
repnz
add
out
lea
addb
cmp
ja
sahf
lret
loopne
movsl
enter
icebp
mov
or
mov
into
daa
mov
mov
jne
lods
aam
in
out
dec
dec
sbb
or
push
inc
pop
stc
dec
aaa
cwtl
jcxz
aam
cmp
push
aad
push
mov
test
or
ror
testb
aam
add
clc
loopne
rolb
scas
push
push
lret
push
int3
xlat
sti
in
inc
mov
cmp
pop
fimull
decb
cs
dec
mov
mov
cmc
ficoms
pop
das
addb
je
cld
push
mov
adc
stos
xchg
scas
and
int
push
dec
xor
enter
push
repz
js
or
ss
shl
or
pusha
and
stos
mov
sbb
ret
push
in
cld
loope
mov
mov
roll
sbb
jecxz
mov
mov
dec
jae
xchg
mov
ljmp
or
mov
test
pop
js
and
cmpb
pop
sbb
push
push
fildl
mov
fists
les
mov
adc
lods
sub
movsl
ret
sbb
xchg
sarl
ret
adc
sub
icebp
jmp
fiadds
xchg
sbb
inc
or
out
xchg
enter
fnsave
packsswb
pushf
orb
inc
fdivp
xor
cwtl
test
cld
or
lods
push
fadds
sub
out
leave
cmp
jl
out
cwtl
ljmp
or
repnz
xor
jbe
jg
xor
xor
fcomi
mov
cmp
push
stc
enter
or
pop
inc
clc
cld
dec
pusha
xchg
sub
popl
jb
add
lods
fucomip
ds
out
ss
lods
mov
pop
ljmp
xchg
xchg
es
into
jne
and
add
stos
addb
ds
popa
ret
jbe
adc
jb
inc
das
das
inc
dec
inc
push
repnz
cmpsl
aaa
ja
inc
pop
mov
psrad
sub
pop
xor
outsb
inc
lahf
add
lock
mov
xchg
and
scas
sbb
adc
popa
rcr
inc
scas
lds
iret
jae
xchg
dec
adc
pop
jno
mov
jnp
mov
inc
sub
pop
loop
repz
fstps
jbe
ffreep
int3
xchg
lds
inc
lret
fisubs
sbb
add
mov
je
aad
sbb
shrb
adc
sbb
mov
das
xor
into
fs
into
xor
jge
dec
mov
mov
mov
push
dec
mov
ss
es
in
imul
repnz
fwait
jge
and
dec
pop
jge
lea
fbstp
cmp
cmp
push
sub
add
mov
movsl
cmc
cwtl
in
mov
aaa
scas
xor
adc
jb
jo
xchg
push
loopne
orb
add
aam
mov
mov
jge
mov
pusha
lcall
in
pop
mov
jecxz
jno
mov
icebp
xchg
xchg
xor
lea
sbb
mov
fmull
aas
add
pop
stos
mov
gs
das
inc
mov
mov
inc
subl
mov
jmp
jnp
fiadds
data16
in
xor
mov
lods
nop
clc
fists
sbb
mov
push
test
dec
cltd
sarb
jmp
push
adc
push
ret
adc
cmp
add
je
repz
lods
or
fdivs
adc
add
cli
xor
push
dec
pop
lret
and
cwtl
push
push
pop
inc
pop
ss
scas
or
add
xchg
imul
fistpll
es
bnd
stos
jp
mov
fwait
lods
out
push
or
dec
fs
mov
dec
shl
jp
stos
xor
mov
aaa
mov
mov
clc
sti
xchg
out
sbb
outsb
sar
out
cmpsl
popa
lret
sti
cmp
mov
mov
mov
sub
rcrb
cmp
sbbl
add
jo
sub
push
adc
data16
cmpsb
ljmp
and
push
mov
xor
cwtl
fistl
ja
cmp
popa
sub
push
inc
int3
dec
es
pop
cmc
sbb
lahf
adc
mov
cmp
mov
aas
in
repnz
xchg
dec
movsl
pop
push
xchg
loopne
arpl
mov
popa
into
adc
mov
fcmovu
or
scas
adcb
pusha
stos
sbb
mov
dec
movsb
cltd
paddsw
push
gs
das
pop
and
pop
or
scas
push
lods
jmp
xor
dec
or
sbb
sarl
adc
or
stc
out
rcrl
decb
pop
push
cmp
sub
mov
and
or
add
icebp
jmp
aas
rorb
arpl
mov
int3
sbb
sbb
push
test
cmpsl
cltd
call
mov
dec
xor
imul
or
adc
into
lret
imul
inc
call
pusha
push
dec
cli
lea
movsl
mov
inc
sbb
in
insl
shrl
gs
aam
inc
shrl
cmp
iret
inc
ja
out
push
leave
jo
dec
cmp
movsl
bound
loopne
inc
and
fnstsw
aas
lods
push
out
fiaddl
clc
and
mov
mov
cmpsl
adc
xlat
and
push
imul
and
fcmovnb
divb
in
dec
movsl
hlt
cltd
scas
sbb
dec
sti
fwait
dec
inc
das
push
add
sub
ret
test
ret
xchg
dec
xor
sub
stos
cmp
out
call
xor
dec
add
adcb
test
or
xor
fdivs
sbb
jns
mov
aam
loope
jg
nop
mov
adc
add
mov
push
scas
scas
shlb
dec
in
mov
sbb
mov
je
push
gs
dec
sahf
es
jne
push
or
push
and
jge
sti
and
pop
add
es
loopne
mov
rolb
xor
mov
jmp
push
push
xor
bound
stos
xchg
adc
subb
push
adc
mov
cmc
push
xchg
mov
sahf
inc
les
sbb
push
jns
pusha
test
test
ret
dec
adc
or
cmp
lret
test
or
int3
sbb
cmpsb
aas
aad
decl
push
mov
ljmp
imul
in
push
adc
dec
insl
lret
mov
nop
lret
scas
js
loope
xchg
movsl
mov
cmp
hlt
lods
adc
xchg
aad
movsl
add
mov
pop
push
movsl
mov
mulb
xorl
xchg
in
inc
push
cmpsb
dec
or
enter
add
and
push
into
shrb
sbb
inc
push
sbb
movsl
cli
xor
mov
xchg
popa
fwait
mov
or
mov
inc
adc
sbb
ljmp
insl
pusha
jns
adc
sahf
cmpsl
lds
jmp
lods
or
push
cmp
adc
cld
leave
pop
jo
dec
dec
dec
mov
push
push
push
cmp
sbb
add
out
in
pop
sub
inc
jno
aam
jle
shr
fwait
pushf
ljmp
inc
inc
push
jl
popa
or
lea
int3
enter
sti
in
pusha
and
cmpsl
shll
loope
lret
bound
stos
add
dec
jo
dec
sub
lret
or
in
inc
mov
sbb
push
push
repnz
lock
aad
outsl
lret
les
dec
sti
aas
rol
rcrl
jl
aam
mov
and
ljmp
push
jo
repz
into
push
jle
and
dec
push
sbb
mov
pop
sub
dec
mov
cs
fdiv
out
mov
lret
jbe
add
mov
add
ret
outsb
and
mov
add
insb
call
mov
cmp
jno
cmp
fstpl
call
mov
jl
sub
xchg
xlat
testl
imul
xorb
adc
jge
inc
out
push
mov
in
lock
mov
lods
mov
fldt
cmp
dec
pop
add
mov
dec
mov
jge
mov
sti
out
lcall
lods
sub
push
imul
fwait
gs
daa
sbb
loopne
xchg
popa
mov
lea
nop
in
jge
add
outsl
out
fld
mov
dec
xor
fstpl
dec
adc
and
cmp
fucomip
xchg
pop
loopne
or
add
push
in
test
sub
xor
je
and
or
ljmp
inc
add
sarb
sbb
lahf
cmc
or
hlt
shll
dec
mov
testl
jle
sahf
xor
jle
fidivl
inc
jns
lret
ret
ja
mov
ficompl
cli
clc
mov
aam
arpl
xor
in
aam
and
mov
push
daa
mov
in
call
fisubl
loope
xor
cli
jnp
mov
rcl
adc
cwtl
nop
clc
sahf
js
aam
sti
jno
sub
dec
dec
push
inc
movsb
inc
shlb
or
mov
push
aad
jne
xor
sbbb
idiv
mov
xor
jno
fldenv
jp
in
adc
push
jl
ret
gs
dec
cltd
mov
push
aad
testb
jg
cmpsl
inc
std
push
push
push
outsb
inc
sbb
in
in
mov
out
mov
adc
lret
cmp
sbb
or
cmp
and
loop
add
lret
nop
fstl
imul
push
dec
xlat
or
bound
xchg
adc
test
stos
mov
push
cli
mov
and
mov
lds
dec
pop
scas
mov
dec
mov
add
loop
add
out
cmp
lea
lds
jnp
dec
in
push
loope
xor
mov
dec
mov
xchg
repz
push
popf
mov
addb
xchg
sbb
cmp
scas
je
test
aaa
mov
pop
int3
sti
addr16
add
add
dec
jae
pop
das
out
out
xchg
cli
push
pop
mov
fdivrs
dec
xchg
jle
push
mov
dec
jnp
test
inc
out
jb
stos
lret
out
jne
add
ja
add
fstp
rorl
cmpsl
push
fsts
sahf
repz
nop
roll
cli
test
jno
rol
repz
rcrl
dec
add
je
mov
pop
push
fsubrs
cli
xchg
int
ret
test
repz
sbb
push
jmp
jns
add
test
inc
pop
and
sbb
jg
cltd
dec
cmp
and
jno
jl
fwait
jge
push
dec
jle
cmp
jle
popa
mov
stos
fcmove
pop
fbld
prefetchw
scas
pop
mull
enter
int
std
dec
push
out
test
lea
mov
xchg
mov
push
pop
cmp
pop
mov
rcrb
cmpsb
xor
push
mov
push
jmp
es
call
das
pop
mov
out
push
insl
pop
sub
sbb
jbe
mov
repz
mov
loopne
loopne
inc
ret
js
addb
inc
sbb
insl
mov
push
scas
jg
xchg
outsl
jl
movsb
shr
jle
lds
cltd
and
xor
cmp
sub
jae
movb
mov
ja
pop
xor
mov
dec
ljmp
sub
sbb
call
xorb
aad
movsl
and
or
xlat
repz
aam
in
inc
lods
fstpt
push
xchg
ss
pop
scas
mov
or
push
adc
and
xchg
inc
cwtl
inc
adc
loopne
xchg
and
enter
mov
sti
inc
movsl
dec
dec
in
dec
dec
jl
inc
xor
mov
shrl
dec
and
inc
lret
inc
sbb
dec
push
mov
insb
aad
jb
adc
or
push
jb
fidivrs
or
or
es
negl
pop
js
lds
cltd
aad
inc
mov
jmp
fstpl
outsb
jnp
push
test
stos
outsb
cmc
add
inc
cmpsl
cmp
dec
std
pop
imul
in
cmp
and
lds
push
push
in
jl
or
hlt
or
mov
fs
aaa
gs
inc
dec
adc
jl
sub
popf
sub
and
enter
mov
or
pop
lcall
xchg
pushf
in
sub
fldl
push
xchg
outsb
add
push
or
xchg
add
dec
rcll
stc
shlb
adc
int
jle
ret
cli
dec
xlat
subb
in
std
rcll
lcall
and
sub
xchg
add
mov
cmpsb
divl
stos
mov
scas
fs
push
push
cmp
jg
data16
loop
fs
cltd
es
stos
push
jbe
mul
xchg
inc
test
test
push
cmpl
xchg
movsl
jmp
outsb
ficomps
add
dec
out
in
lcall
int
sub
insl
in
sbb
pop
jno,pn
mov
test
dec
jle
pop
jb
imul
jecxz
cld
push
mov
aam
fsubrp
adc
xor
mov
or
dec
xor
push
sub
rorl
pop
out
movsl
mov
xchg
inc
sub
xor
fisubs
push
pop
loope
out
fcomi
or
mov
sbb
jno
sti
push
mov
stos
out
push
mov
mov
mov
jbe
mov
push
cmp
mov
adc
ja
in
adcb
aaa
pop
sbb
fwait
xchg
pop
fcom
mov
pop
in
test
adc
xor
adc
movsl
movsl
test
ljmp
rorl
xchg
mov
jg
cwtl
or
lfs
adc
dec
int3
ret
aas
mov
test
and
mov
cli
mov
xchg
adc
sub
shlb
push
jae
into
addb
push
inc
cltd
jns
mull
inc
xor
loope
push
or
cmp
mov
scas
add
xchg
fsubrs
jne
enter
sbb
dec
call
aas
sub
scas
fwait
imul
inc
sbb
push
int3
mov
sub
lods
data16
ret
pop
and
out
addr16
sub
ljmp
fimuls
mov
fwait
stos
pop
adc
cli
lock
mov
cmc
or
gs
popa
xor
lahf
sbb
lcall
ja
mov
jl
or
sub
les
int3
fsub
lret
inc
cmc
addr16
jns
and
cmp
adc
xlat
add
dec
mov
call
or
les
outsb
pop
je
xor
push
inc
pop
push
lcall
pop
int
sbb
add
call
iret
push
adc
lock
dec
push
add
das
out
inc
fsubl
xor
lock
aad
mov
and
jl
and
mov
cmp
cmpsl
pop
mov
push
faddl
inc
imul
jae
outsb
test
push
cmp
popa
mov
ljmp
adc
std
lock
aad
dec
clc
stos
and
push
fbstp
lods
cld
insl
mov
xor
out
add
repnz
in
cmc
dec
adc
lea
push
or
roll
xor
lret
mov
add
sub
fnstcw
insb
sub
les
xchg
scas
imul
add
imul
mov
xchg
push
mov
dec
xor
cltd
test
std
bnd
xor
mov
movsl
ljmp
lahf
iret
mov
dec
stos
cld
sti
orb
or
push
jne
push
pop
inc
aad
cmp
mov
movsl
loopne
pop
adc
rcr
and
inc
lea
dec
call
test
iret
add
outsl
add
test
push
in
fcomps
mov
flds
sub
sbb
bound
mov
lods
shrb
repz
sti
je
push
mov
mov
nop
jp
or
xchg
iret
loopne
ljmp
je
jg
imul
sbbl
xchg
dec
into
dec
fistps
jge
mov
dec
gs
mov
mov
aam
cmp
out
jne
pop
cmpsl
aam
ljmp
iret
push
xor
mov
dec
adc
cmp
jl
jl
add
sub
push
stos
xchg
pop
andl
sbb
ja
xor
fisubrs
sub
cmp
in
lret
pop
fs
cwtl
xlat
or
cmpsl
movsb
leave
jbe
daa
push
sbb
stos
cmp
fdivrp
or
push
and
out
pop
xchg
add
dec
jo
sub
sbb
jecxz
popa
pop
inc
fidivrl
popa
out
fstps
lods
add
dec
xor
cmp
push
popf
outsb
sub
subw
cmp
jecxz
or
iret
xor
cmp
add
fmuls
adcb
push
pop
add
pop
cmp
xchg
push
incl
sbb
mov
test
push
shrb
xchg
leave
jne
sbb
enter
movsl
xor
mov
dec
push
pop
sarl
mov
fwait
testl
inc
movsl
xor
repz
fists
jno
and
stos
jmp
aad
inc
dec
test
das
mov
push
lods
and
mov
stos
push
aas
inc
lds
pop
js
fimull
pop
sbb
leave
outsl
stos
cmp
sbb
fistps
cmc
dec
test
mov
iret
push
out
call
shl
sbb
mov
dec
xchg
sti
nop
jg
inc
cld
dec
sbb
xor
lcall
ja
stos
ret
adc
cli
sahf
pop
andb
push
add
push
xor
jno
mov
rclb
pop
adc
push
cwtl
jno
in
inc
xchg
sbb
xorl
sub
int3
rclb
sub
pusha
push
or
push
jecxz
xor
call
push
cmpb
fisttps
jmp
lahf
ret
xlat
mov
daa
jns
ja
xor
imul
cwtl
rorl
pop
je
cmc
js
cmpsl
lret
and
mov
call
shl
cmc
add
xor
not
xlat
outsl
ss
or
jb
jp
fisubs
jns
mov
cld
lahf
xor
ds
enter
pop
pushl
add
push
mov
add
fcoms
push
ret
xor
daa
sub
dec
dec
lods
dec
daa
shlb
cmp
xchg
inc
insb
imul
pop
mov
daa
mov
popf
and
lcall
icebp
sub
rcll
push
bnd
lretw
test
jns
cli
xchg
daa
sbb
cs
sbb
mov
mov
push
jle
mov
adc
test
test
sub
cmp
and
cwtl
jl
test
sti
mov
push
sub
ja
dec
andl
fisttpl
pop
inc
mov
add
fs
adc
psraw
push
imul
or
push
iret
pop
inc
cmp
pop
mov
xchg
jmp
jo
jns
test
imul
call
cmpsb
nop
mov
inc
jno
and
xor
push
pop
mov
add
dec
fisubrs
inc
gs
movsl
rorl
xor
fwait
cs
icebp
mov
add
inc
stc
jp
mov
dec
push
jae
addr16
imull
and
nop
add
and
mov
pushf
rclb
out
addr16
imul
outsl
dec
push
mulb
test
arpl
lcall
inc
jmp
dec
lds
xchg
fwait
in
push
dec
iret
mov
je
xchg
sbb
fdivrl
nop
xchg
sbb
xchg
push
sarb
sbb
inc
cli
js
cmp
xchg
pop
cmpsb
leave
pop
xchg
mov
push
pop
sahf
out
xchg
repnz
mov
jns
jl
andl
fadds
mov
or
mov
stos
mov
cmp
les
cli
icebp
popa
loopne
jne
int
jle
bound
insb
push
dec
out
jnp
push
xor
push
sti
mov
or
sub
outsl
jp
aas
xchg
sbb
mov
dec
cmpsb
mov
out
test
cld
cmp
inc
jns
dec
jno
dec
or
movsb
sbb
xchg
negl
stos
fdivl
jg
inc
fsubp
jne
cmpb
addr16
repnz
jl
adc
lret
pusha
lds
in
cmpb
filds
or
fidivrl
cmp
add
pop
push
imul
arpl
or
imulb
imul
mov
out
cmp
ficomps
mov
rolb
std
popa
out
fwait
push
cmpsl
sub
and
enter
mov
inc
subb
push
dec
out
mov
mov
pop
js
and
sbb
xchg
lcall
cmpsl
and
ret
mov
shl
xchg
cmpb
xchg
stos
and
test
push
xchg
subl
popf
lahf
mov
jge
cltd
outsl
jne
jo
dec
cmp
sbb
ljmp
adc
mov
adc
pop
mov
leave
cmp
fcmovu
bound
push
jg
lods
leave
sub
lds
pusha
lret
je
lods
repnz
mov
addb
jmp
call
jmp
cmp
lahf
icebp
add
add
imul
pop
mov
popa
ret
add
sbb
rolb
adc
jecxz
je
jne
pop
inc
xor
cmp
sti
push
sbb
cmp
jo
or
add
push
and
jmp
pop
js
pop
mov
dec
loope
fmuls
push
cmp
test
mov
insb
imul
xchg
push
aad
gs
mov
xchg
or
xchg
xchg
jae
mov
addr16
ja
into
das
out
push
xchg
and
lods
cmp
jge
jae
test
sub
adc
mov
or
add
in
mov
mov
mov
les
hlt
testb
sub
sub
in
push
inc
xchg
adc
cmp
push
cmp
xlat
test
outsb
sub
sub
shrb
mov
lret
into
hlt
test
pop
xchg
cli
aad
mov
inc
inc
outsb
and
or
jge
xchg
mov
push
repz
xlat
inc
mov
lret
xor
push
xor
push
mov
fistl
and
ja
and
xor
insl
in
ja
or
jge
jmp
shlb
aam
int
cs
sub
xchg
or
ljmp
sub
sahf
xchg
dec
cmp
pop
ret
cmp
int
aad
lods
inc
add
push
inc
and
scas
xchg
fadds
movsl
mov
ds
iret
mov
inc
movsb
add
sub
jo
int
negl
addb
insl
push
dec
jg
cli
addr16
dec
jmp
xor
loop
in
ror
jno
daa
xchg
cmp
push
and
testb
mov
add
in
mov
mov
je
faddl
jp
jbe
push
mov
cmp
cwtl
test
xor
xor
cmp
sub
in
mov
jae
mov
mov
stc
faddl
leave
or
gs
or
sub
adc
cmp
and
mov
rcrb
adc
repz
cs
inc
data16
lahf
sub
sahf
sbb
mov
mov
mov
adc
add
mov
shlb
inc
jge
sbb
cmp
xchg
jne
psubsw
cmp
dec
add
out
xchg
movsb
movsb
mov
mov
in
push
adc
mov
mov
popa
in
rolb
xchg
mov
mov
dec
mov
cmp
nop
mov
leave
dec
jnp
clc
or
sbb
sti
jecxz
add
sub
shll
lcall
pop
mov
daa
adc
cmc
fcompl
int
js
and
xor
fwait
int
dec
sarl
cmp
xchg
and
and
xchg
adc
and
jo
mov
orl
mov
bound
jbe
cmp
decb
das
imul
pushf
shrb
inc
scas
add
enter
jb
sarl
sbb
fisttps
xchg
bound
shr
mov
mov
fnstsw
pop
repnz
andb
sub
sbb
fnsave
or
jnp
xchg
adc
and
fs
add
adc
mov
mov
sub
jnp
repnz
sar
inc
jne
in
inc
xchg
mov
jle
test
das
outsb
cli
push
xchg
jp
inc
mov
inc
pop
adc
jl
jo
je
js
lcall
jmp
xor
jmp
fbstp
cmp
imul
test
jb
rcl
inc
sbbb
fcmovu
dec
and
cwtl
adc
ffree
jnp
stos
add
xor
das
push
and
or
fcompl
sub
shrb
xchg
and
and
jnp
sub
pop
pop
or
jecxz
cmp
ret
cmc
add
xchg
testl
idiv
xor
lret
loop
add
or
scas
push
shlb
stos
in
das
add
mov
stos
leave
mov
mov
jnp
and
aaa
xlat
pop
xchg
push
mov
jo
xor
mov
push
mov
jnp
arpl
popa
adc
in
pop
pop
xlat
negb
dec
test
add
or
jne
inc
sbb
mov
jg
pop
mov
cmp
inc
and
jns
sbb
ja
in
aaa
jbe
sbb
or
inc
add
dec
add
inc
pop
and
xchg
jnp
sub
les
call
sbb
lock
test
mov
lods
lods
jmp
notb
lret
mov
rorl
jb
sbb
movsl
imul
leave
repz
xchg
cli
push
fbstp
stos
ror
push
stos
enter
cmp
pushf
pop
insb
std
and
ret
xor
add
mov
or
nop
or
push
imul
sti
jle
sahf
mov
inc
mov
inc
xor
add
mov
mov
popa
or
add
or
mov
aas
cwtl
faddl
push
call
imul
nop
fsubs
addr16
ds
cmc
fstpt
jb
dec
iret
rol
xlat
rcrb
cmp
mov
jp
sti
cmp
ficoms
loop
add
pop
or
mov
cmp
inc
shll
jmp
ret
mov
jbe
inc
sti
dec
test
xchg
push
out
mov
sub
xchg
gs
inc
mov
xlat
imul
mov
inc
mov
jbe
cmp
add
sbb
jne
lcall
test
sti
loope
mov
inc
cltd
sub
ret
xor
xlat
movsb
addl
mov
sbb
sbb
add
pop
add
mov
dec
ret
mov
clc
xchg
shrl
out
pop
sbb
cltd
in
inc
jmp
mov
sarb
xor
and
es
sbb
lret
stc
push
jecxz
mov
mov
jp
push
push
push
ljmp
into
jno
call
jae
es
cmp
and
cmp
mov
dec
fadds
pop
pop
call
and
push
xchg
jl
nop
dec
push
int3
repz
imul
fadds
pop
mov
aaa
add
mov
push
shl
ror
pop
cmp
jmp
add
or
std
pop
gs
in
repz
pop
xor
outsb
imull
or
or
sbb
movsb
add
or
bound
push
scas
push
and
cmp
jne
and
in
pop
in
inc
mov
xchg
les
hlt
mov
push
movsb
mov
xor
jmp
dec
mov
mov
aam
cli
inc
sbb
sub
jle
xchg
xor
or
decb
clc
inc
add
into
push
gs
push
push
cmpsb
stc
adc
or
dec
into
push
iret
shll
repz
add
imul
aam
icebp
lcall
mov
push
imul
mov
inc
or
add
pop
mov
inc
jge
aas
lcall
add
xchg
test
out
mov
in
ss
ret
sub
sub
jbe
or
sub
jge
shl
out
dec
aas
add
loopne
inc
jno
lods
push
inc
fisubl
popl
jbe
in
mov
and
insb
or
lods
aad
in
inc
push
adc
cs
xchg
mov
out
loop
mov
add
cmp
out
divl
pop
in
hlt
mov
xor
cmovg
sbb
aam
inc
aaa
pop
out
in
stc
mov
adc
in
mov
rorb
and
imulb
jbe
jmp
stos
mov
jne
ljmp
push
bound
lahf
lea
pop
mov
add
test
mov
adc
rol
insb
jbe
addr16
cli
add
jp,pt
out
shll
jb
xor
jno
mov
or
outsl
xchg
sub
stc
daa
mov
push
and
jg
xchg
push
lahf
push
icebp
popa
push
mov
arpl
shl
out
loop
xor
and
or
lret
and
enter
mov
and
outsl
int
frstor
mov
mov
mov
bound
lcall
lock
jne
inc
adc
xor
adc
test
ss
pushf
mov
inc
jp
xchg
cmp
sbb
ret
jg
push
xchg
jle
mov
adc
xchg
pop
cwtl
adc
jmp
lea
pop
lea
mov
adc
test
notb
test
iret
adc
int
dec
test
xlat
mov
mov
mov
lahf
cmp
repnz
sub
movsl
jne
push
pop
out
jmp
mov
stos
mov
ja
jmp
enter
mov
inc
inc
stc
inc
adc
les
jl
jg
fcomip
fsubl
movsl
sbb
or
push
jge
or
fwait
into
lods
movsl
xor
in
negl
mov
rolb
loope
in
mov
push
add
and
inc
pop
dec
es
sub
cwtl
mov
cmp
add
out
or
add
add
mov
jbe
jle
arpl
stos
pusha
fsqrt
daa
add
and
rep
xor
mov
push
int
decl
hlt
mov
mov
mov
sbb
clc
aam
loop
sbb
lret
jno
test
jne
loopne
sti
dec
or
jb
repnz
inc
cmp
rorb
xchg
mov
dec
stc
sahf
pusha
inc
mov
scas
sbb
jo
dec
arpl
or
mov
add
int3
jecxz
push
or
xor
enter
dec
mov
call
lea
into
push
add
addr16
shl
mov
pop
sti
in
mov
les
cmp
lret
daa
push
les
adcb
cvtdq2ps
jbe
dec
ljmp
sub
enter
xchg
cmpsb
jmp
jl
jbe
mov
scas
sti
or
dec
mov
into
add
mov
aad
mov
iret
jp
cld
out
test
repz
out
push
mov
insl
cmc
inc
cltd
add
mov
jns
push
aam
repz
inc
sbb
in
push
mov
lea
inc
xchg
push
lea
mov
pop
ficoml
setns
and
aad
into
idiv
subb
inc
lods
lret
adc
pop
or
pop
loop
pop
and
lcall
es
cmpsb
outsb
dec
dec
mov
stos
dec
fs
or
and
clc
adc
call
mov
ljmp
push
fcoml
mov
mov
cmp
pop
add
dec
and
inc
pop
jns
ficompl
rorb
add
clc
cltd
add
adc
out
xchg
inc
jbe
ja
mov
inc
xchg
cmp
mov
push
mov
mov
xlat
mov
sub
into
lret
mov
fdivs
fisubs
fwait
stos
out
push
imul
repz
cmp
arpl
lds
add
or
mov
fisttps
jno
inc
ret
jg
mov
xor
loope
loopne
cmpsb
lea
inc
lds
cs
push
jo
pushf
pop
cmp
in
xor
into
cmpsl
and
outsb
ret
aad
cmpsl
stos
es
or
out
lds
fnstenv
push
aaa
and
icebp
ja
jbe
inc
fs
cmpsl
aad
and
mov
and
dec
icebp
or
sub
push
fisttpll
sub
sub
in
and
adc
add
inc
push
cmp
dec
imulb
xchg
pop
or
dec
adc
sub
sbb
lds
cmp
adc
push
faddl
scas
mov
adc
and
dec
xor
scas
push
repz
aam
repnz
lock
push
mov
cmp
in
out
dec
inc
pushf
fs
jmp
jmp
enter
jmp
cmp
fdivrl
inc
lahf
es
jbe
inc
clc
loopne
push
clc
xlat
outsb
insb
ljmp
pop
mov
mov
pop
aaa
insb
test
or
pop
repnz
push
inc
lea
xchg
push
mov
lods
nop
cmc
mov
ljmp
pop
add
pop
push
arpl
xchg
dec
int3
inc
pushf
sti
sub
aas
mov
xor
les
mov
cltd
loop
imul
lahf
frstor
or
sti
lock
add
xor
lea
xchg
lret
rolb
out
mov
xchg
adc
movsl
add
adc
out
ljmp
lret
mov
jecxz
mov
popf
mov
add
sbb
andb
adc
jne
sbb
mov
stos
cltd
out
dec
ror
out
inc
stos
movsb
adcb
mov
ljmp
or
xchg
inc
adc
cwtl
int3
inc
pop
sub
or
fstpl
in
cmp
fistps
lcall
cmp
cmpsl
jge
adc
add
pushf
ret
and
pop
mov
sub
lahf
test
jecxz
jp
push
ja
aam
jecxz
push
add
imul
push
loope
mov
pop
stc
lock
adc
add
dec
mov
push
cmp
sbb
adc
inc
pop
nop
jmp
jl
scas
pmaxub
sbb
faddl
out
adcb
fwait
sahf
xor
lret
add
sub
sbb
mov
popf
rcr
cmp
imul
ror
xor
or
xchg
loopne
inc
loopne,pt
mov
jg
cmp
mov
call
ss
add
push
cmp
cli
sub
mov
adc
jp
push
les
inc
or
rep
cli
pop
adc
fwait
rorl
xchg
pop
into
xchg
dec
dec
daa
sub
and
add
addb
mov
xchg
cwtl
push
pushf
mov
clc
jge
mov
jne
pop
inc
iret
mov
or
cmp
jb
pushf
jbe
xchg
sub
mov
sbb
lea
shll
in
incb
addr16
and
int
data16
mov
and
lock
sbb
ficompl
sbb
insl
std
sbb
addr16
insl
xchg
test
and
and
mov
fstpt
dec
jl
jbe
loopne
icebp
cmp
xchg
nop
and
adc
movsb
xchg
insb
or
iret
ret
mov
pop
sub
lock
xchg
push
pop
ss
mov
pop
and
adc
cmp
xchg
lret
repnz
mov
push
and
imul
cmc
xor
sbb
xor
or
in
out
rcrl
aas
mov
daa
cltd
xchg
iret
and
mov
xchg
add
and
dec
daa
xor
iret
sub
movsl
mov
sbb
or
ficoml
cmp
mov
lock
dec
sub
pop
jnp
mov
adc
sub
gs
int3
adc
das
jae
test
pop
xchg
in
sub
ss
cmp
xchg
repz
mov
je
jg
jnp
mov
cmp
sbb
inc
cmp
loop
and
cwtl
inc
out
scas
mov
pop
out
sbb
bound
push
testl
dec
fsubs
cmc
cld
add
dec
pop
int3
xchg
mov
inc
imul
jno
das
cli
lock
in
movsl
xorb
fbstp
mov
cwtl
cmp
les
iret
cmpsl
or
stos
sbb
nop
inc
test
inc
mov
adc
dec
jg
lods
ret
mov
sub
cmp
rorl
data16
inc
in
ffree
jns
mov
mov
push
mov
fists
sbb
cmp
sahf
or
flds
ret
in
cwtl
cwtl
jl
test
mov
adcl
out
sti
inc
adc
mov
clc
fistpll
bound
sub
fistpll
xor
inc
and
fidivrl
test
jmp
test
and
subb
mov
test
mov
pushf
sub
imul
dec
dec
mov
dec
popf
fisttps
sub
push
lods
shlb
sub
dec
xor
ret
mov
adc
xchg
jo
sub
mov
mov
test
fld
push
enterw
inc
mov
mov
clc
mov
rorl
cltd
call
sub
test
nop
imul
xchg
idivb
mov
push
cmpsl
jns
loop
adcb
xor
outsl
mov
cmpsl
test
rcr
stos
inc
xor
sbb
mov
jge
fstp
pusha
sbb
pusha
pushf
xchg
jae
pop
stos
cmp
xor
and
mov
push
xchg
jecxz
leave
push
mov
jg
xchg
or
mov
mov
sub
popf
neg
ret
and
mov
add
pop
sbb
sub
loope
jle
lahf
test
mov
cli
out
inc
ljmp
lods
arpl
aas
or
cs
in
fsubs
loop
subl
bound
mov
testb
or
mov
out
sub
negb
add
aas
subb
cmp
aas
cltd
or
in
fldcw
pop
xchg
push
sbb
outsb
mov
pusha
xor
hlt
lret
mov
fmuls
aad
cltd
xchg
loop
adcb
pushw
mov
cwtl
xchg
dec
mov
mov
inc
cs
xor
in
xchg
jo
pop
push
mov
data16
sub
sbb
mov
lret
pop
or
mov
sub
mov
cwtl
mov
bound
rcll
push
jae
xchg
fwait
aaa
loope
imul
xor
xchg
push
jns
mov
das
inc
les
mov
test
mov
cs
dec
inc
outsl
fs
popf
cmp
inc
stc
popa
pop
fsubl
pop
lods
test
push
dec
add
sub
shl
pop
mov
mov
aam
jne
bound
in
lock
xor
add
lds
and
mov
jnp
ficomps
xor
sbb
add
push
and
adcb
sahf
fidivrs
jo
jle
adc
jp
inc
cwtl
out
push
syscall
fnstsw
fldcw
fcomip
popa
hlt
aaa
or
mov
sbb
mov
sahf
jns
mov
lds
xlat
sub
jne
rcrl
xchg
mov
aaa
jl
jecxz
loopne
xchg
or
lahf
stc
sbb
push
insb
push
in
mov
adc
or
leave
call
mov
dec
pop
cwtl
cmpsl
pop
mov
and
lods
pusha
add
lds
inc
shll
xchg
sbb
outsl
jae
int3
push
clc
nop
sbbl
jbe
pop
loop
push
loope
js
jecxz
jae
add
fucomip
faddl
xor
and
xor
adc
and
mov
mov
mov
pop
repz
and
iret
sub
outsl
dec
dec
add
push
shrl
call
xchg
and
adcl
ret
pop
enter
std
push
iret
sub
xchg
int
scas
pop
jg
mov
jge
mov
mov
test
scas
lea
lret
xchg
mov
jns
cld
pop
loopne
not
test
shl
or
out
aad
sub
jo
int
and
fstp
and
jg
or
and
fcmovbe
jne
js
ss
je
pop
stos
int
or
rcr
sbb
adc
inc
xchg
xchg
jmp
into
inc
or
inc
stos
dec
cli
out
iret
jecxz
pop
test
lret
loop
add
outsl
jae
imul
mov
popa
lahf
imul
ror
fisubs
push
mov
sbb
add
adc
lods
incl
loop
inc
jmp
mov
aam
int3
sub
sub
mov
ret
pop
test
iret
call
ljmp
xchg
and
xor
pop
insl
arpl
mov
add
repz
ffree
push
pop
xchg
jo
xor
sahf
hlt
cmp
jl
jns
js
mov
sbb
fdivl
dec
push
sbb
insb
xchg
ja
lods
movsl
ja
je
push
dec
mov
pop
ljmp
push
int
inc
lea
es
add
cmp
fidivs
sbb
jbe
inc
pop
into
in
imul
and
xor
mov
lahf
test
lcall
adc
fistpl
mov
cld
jb
sub
sub
jb
mov
xor
or
push
sub
mov
xchg
xor
pusha
push
rorb
das
rcl
mov
jo
aaa
fsub
mov
inc
aaa
jle
add
dec
movsb
pop
pop
loopne
fwait
rcrb
lcall
dec
addr16
inc
in
sub
ljmp
rcll
clc
push
cmp
dec
inc
lea
pop
mov
pop
xchg
inc
ljmp
sbb
dec
outsl
mov
mov
les
push
nop
mov
lret
mov
push
outsb
dec
cmp
shl
jle
and
dec
stos
push
sbb
sti
push
dec
pusha
popf
pop
pop
or
leave
and
int
frstor
testl
pushf
inc
xchg
and
shr
jle
add
jge
mov
dec
pusha
jl
mov
xorb
mov
fiaddl
shr
int3
adc
movsl
jle
ja,pt
push
ljmp
ja
mov
and
stc
and
lea
xchg
jnp
bound
mov
fisubrl
adc
ret
mov
sub
aaa
outsl
mov
sti
mov
dec
and
in
test
in
and
andl
fisubrs
jecxz
mov
xchg
inc
cmp
enter
int
ss
fidivrl
sub
cmp
ror
xor
inc
sub
pop
movsb
aaa
xchg
pop
mov
add
in
sbb
pop
mov
addl
pop
or
inc
or
xchg
int3
cwtl
xchg
fistpll
scas
sub
lret
lahf
or
lock
push
cwtl
adc
fs
adc
push
roll
cmp
xchg
add
insb
je
fwait
add
stos
out
inc
das
jecxz
mov
dec
scas
mov
mov
adc
dec
jns
mov
mov
sub
inc
stos
jnp
fimull
mov
leave
fnstsw
or
mov
aam
or
adc
push
imul
test
movsl
repz
push
loopne
xor
and
out
arpl
aam
bound
popa
and
push
pop
adc
sarl
jae
jle
stos
or
xor
ss
out
cmp
xor
sbb
jmp
cld
push
je
leave
or
jbe
negl
gs
imul
sbb
push
pusha
jbe
imul
mul
pushf
repnz
mov
test
popf
movsl
jne
mov
add
fnstsw
stc
xchg
xor
fldcw
or
ss
cltd
inc
popf
jmp
lods
repz
outsb
xor
adc
repnz
jp
add
test
sub
in
scas
arpl
mov
add
jno
testb
xchg
push
pushw
push
mov
pop
pop
mov
sbb
es
incl
adc
jge
dec
xchg
mov
aaa
xchg
push
xor
int3
add
repz
add
sbb
mov
push
sbb
xchg
push
push
mov
jmp
xchg
xchg
out
pusha
das
jg
jmp
dec
sub
dec
in
pop
icebp
jne
xor
push
test
jnp
dec
and
pop
movsb
sarl
add
sete
shlb
cmp
push
addb
out
jge
mov
push
in
insb
sahf
push
push
push
outsb
sbbb
mov
cwtl
jecxz
loope
ds
or
jne
jp
adc
negb
lods
shll
pop
imul
arpl
bound
mov
push
jb
or
loopne
enter
arpl
push
and
mov
lds
or
mov
jl
and
scas
call
jecxz
xchg
ds
jnp
pop
push
fsincos
push
cs
xchg
dec
das
out
cmp
inc
cwtl
pop
outsb
cld
sahf
cmp
out
xor
dec
lock
and
add
pop
pop
frstor
dec
cmp
out
dec
sbb
pop
lods
in
xor
mov
es
mov
mov
shll
lock
cld
adc
cmp
cwtl
mov
mov
sub
pushf
daa
lret
pop
enter
dec
int
inc
sbb
xor
pop
out
js
popa
mov
es
inc
mov
rcrb
aam
loope
lcall
jb
stc
imul
xor
sbb
ficoms
mov
mov
lea
loopne
cmp
or
add
xchg
mov
jl
loop
and
mov
xchg
shl
mov
xlat
popa
cmp
pop
imul
mov
adc
xor
sbb
sarl
inc
cmp
pushf
in
jecxz
add
push
cmpsb
jnp
lcall
sbb
popa
cmp
mov
sub
and
out
pop
jae
add
push
fisubl
sarb
mov
push
rcr
lret
retw
div
scas
dec
out
aam
insl
mov
sbb
bound
lret
xor
adcb
add
cmc
mov
call
mov
mov
xchg
in
mov
pushf
out
xlat
in
and
xor
subl
sub
rorb
xchg
lds
dec
loope
push
cmp
outsb
push
inc
inc
sahf
jnp
and
emms
push
xor
stos
or
mov
pop
and
stos
fimuls
cmp
ret
add
lcall
push
add
xchg
adc
add
xchg
stos
pop
xor
fs
cmpsl
add
fildl
or
cmp
push
and
cmp
in
push
inc
push
les
push
dec
std
bndstx
or
out
jae
pushf
pop
and
push
add
mov
ret
scas
repz
mov
mov
inc
add
jge
lahf
repz
dec
push
fwait
call
popf
pop
leave
inc
imul
enter
in
xchg
push
int3
js
sub
cmp
cmp
adcb
dec
addl
out
es
adc
imulb
ljmp
cmp
xor
je
xor
xchg
xchg
inc
dec
xlat
lds
inc
jecxz
mov
adc
xchg
test
cmpsl
push
jne
mov
in
push
adc
or
or
les
mov
and
mov
aas
xor
loop
insl
push
fcoml
inc
ret
js
imul
lret
cs
xor
pop
xor
leave
cmp
js
ss
push
imul
pop
sbb
je
and
jo
nop
loope
xor
mov
movsb
arpl
lret
push
fcomp
add
jae
mov
and
inc
les
lods
adcb
pop
cli
aaa
mov
jg
es
mov
ljmp
cmp
leave
movsb
jmp
shll
dec
lods
repz
stos
adc
pop
jp
test
in
std
and
push
jmp
notl
sub
das
lret
fsubr
lahf
iret
sbb
pop
fidivl
movsb
inc
les
adc
stos
mov
insb
hlt
jmp
push
aas
push
or
int3
fs
int3
daa
or
mov
bound
int3
test
dec
sub
outsl
ret
lods
and
dec
add
hlt
repz
jg
insl
loopne
ficoml
xchg
faddl
fs
add
test
jnp
sti
ds
hlt
ss
stos
inc
dec
in
pause
mull
addr16
xor
rcr
ret
outsb
sarl
mov
ss
je
sub
fiaddl
sbb
pop
test
push
sbb
inc
or
mov
int3
xchg
inc
lahf
imul
pop
fiaddl
sbb
push
sahf
movsb
insb
cmpsb
push
andb
outsb
frstor
lods
sub
and
jbe
cmp
repnz
cmp
repz
push
std
scas
jo
loopne
repz
insl
jno
mov
adc
pop
adc
cmpsl
loop
pop
arpl
jo
jno
xor
xor
mov
xor
es
dec
push
out
xchg
or
cmp
cmp
mov
adc
mov
popf
inc
jecxz
or
pop
bound
xor
loop
cmp
pop
loope
push
outsb
xchg
std
pop
imul
and
jae
push
cmpb
movsl
lret
mov
outsb
in
in
mov
and
test
nop
jne
dec
outsl
jne
push
xor
rcll
in
pop
loopne
jne
adc
xchg
mov
out
or
sahf
dec
scas
stc
mov
sub
cld
lret
mov
cmp
mov
sahf
xor
scas
push
push
outsb
mov
cmc
ljmp
cmpb
repnz
inc
repnz
in
mov
nop
inc
mov
sar
xor
push
imul
mov
out
fimuls
popa
bound
adc
gs
fmul
andl
mov
adc
mov
or
mov
fdiv
push
jbe
xchg
xor
int
xor
push
outsl
stc
enter
and
jo
jle
loopne
cmp
test
lcall
fs
pop
adc
push
sahf
pop
loope
ret
call
pop
rorl
dec
mov
xor
movsl
inc
mov
cld
xor
enter
add
repnz
into
pop
adc
cltd
dec
mov
mov
arpl
push
mov
inc
imul
push
cmp
dec
sbb
mov
cs
and
movsl
mov
cmpsl
shlb
or
popa
dec
dec
test
mov
or
cmp
mov
xor
fstps
mov
sarl
xchg
mov
push
ss
jmp
cld
cmp
mov
cs
pop
lods
push
dec
push
mov
js
ja
notb
dec
es
mov
ljmp
or
mov
dec
lret
jecxz
enter
sti
std
ret
out
add
fistpll
jecxz
in
inc
cmc
mov
aad
or
div
xor
dec
lock
scas
in
fstpt
mov
pop
sbb
jno
mov
call
lret
jno
adc
mov
lds
inc
mov
lds
sbb
adc
loopne
in
mov
sub
jbe
jb
roll
test
in
or
add
inc
cld
adc
cli
push
in
adc
in
mov
nop
cld
adcl
frstor
movsl
rcl
sahf
ret
xchg
insl
call
lahf
push
scas
or
out
mov
in
mov
iret
push
inc
lods
std
ret
pop
and
fcomp
inc
stos
jb
xchg
iret
adc
imul
jbe
pop
loop
adc
out
test
and
pop
je
hlt
dec
pop
jb
sbb
movsl
push
add
jg
mov
pop
lahf
xchg
xlat
and
mov
and
add
add
adc
cmp
cmp
xor
mov
inc
mov
xchg
or
loop
xchg
push
cmpsl
xchg
push
mov
clc
or
mov
jmp
bound
icebp
cmp
xchg
out
xor
ljmp
cs
fsubl
fisubs
test
std
das
das
mov
loope
adc
in
ficompl
cs
add
add
and
lahf
lods
or
push
clc
xor
pop
adcl
push
daa
mov
jl
xor
testb
mov
push
stc
cs
int3
pop
sub
jmp
pop
mov
inc
aas
pop
pop
xor
pop
outsl
loope
pusha
pop
push
fidivrl
cmpsl
cmp
add
pop
frstpm(287
rclb
aas
mov
cmpsb
cltd
add
rcll
cli
stos
push
out
adcb
push
lea
sbb
shll
arpl
xor
decl
stos
ljmp
push
imul
cmc
ret
add
pop
pop
jle
adc
pusha
xchg
into
call
dec
sbb
insb
imul
jmp
scas
es
xor
push
shr
pop
adc
pop
or
jle
cli
sbb
std
daa
or
or
fsubs
in
xchg
sub
fdivrs
jo
xorl
popa
outsl
das
mov
inc
jp
and
loope
xchg
mov
out
popa
shl
in
stos
stc
dec
xchg
in
xchg
aaa
mov
addr16
dec
mov
std
xor
aam
pop
cwtl
pop
pop
mov
cmc
sub
push
mov
loop
into
stos
or
mov
test
imul
dec
mov
add
lcall
xchg
xor
jo
scas
inc
mov
pop
mov
jbe
enter
aaa
xor
mov
fsubrs
cli
test
nop
popf
stos
sbb
mov
fstps
inc
arpl
in
ja
fsub
fcoml
xor
cs
sub
icebp
mov
lcall
mov
jp
ret
fnstenv
xor
push
mov
xlat
repnz
test
add
rcll
sbbl
movsl
push
dec
or
iret
cs
and
dec
and
and
cmp
jae
xor
enter
jns
fsts
cmp
push
or
call
lret
mov
cmc
fcompl
xor
xchg
sbb
xor
subb
xor
icebp
int3
cmpl
pop
ds
rcrb
mov
movsl
je
into
adc
mov
xchg
dec
sub
movsl
je
push
or
and
xchg
cs
icebp
add
mov
mov
push
ret
nop
testl
in
stc
lret
mov
in
gs
cli
sub
push
adc
test
xchg
mov
push
test
out
or
cmp
inc
fdivs
inc
add
pop
lret
scas
jecxz
jle
imul
fwait
xchg
jmp
sahf
mov
inc
sub
sub
leave
xor
clc
push
dec
mov
and
push
pop
scas
xchg
pop
sbb
ret
clc
daa
bswap
ja
shr
pop
test
mov
ret
notl
xor
andl
mov
cmp
hlt
imul
sub
sbb
inc
inc
mov
ficoms
push
unpcklps
inc
mov
pop
xchg
pop
clc
jmp
lret
push
dec
mov
sbb
add
or
decb
imull
fistpl
ss
loop
xchg
jmp
ja
inc
sahf
jb
pop
jb
pop
cld
in
ds
out
fcoml
std
pop
aas
sbb
lea
inc
jmp
rorl
add
pop
scas
out
test
aaa
arpl
sbb
jge
daa
push
push
dec
mov
movsl
mov
sub
call
or
inc
cmc
sbb
sub
shlb
nop
inc
scas
sub
in
sbb
ja
inc
iret
loope
push
xchg
and
add
int3
jg
cmp
rolb
and
mov
test
popf
shl
mov
mov
not
inc
adc
jne
stos
add
insl
xor
sbb
fwait
adcl
sti
shl
mov
or
jae
loope
jbe
mov
ljmp
dec
cmc
xor
fbld
xor
mov
aaa
or
pop
sub
jnp
add
inc
lea
fwait
cmp
jns
lret
mov
test
and
daa
aaa
jo
dec
mov
ret
iret
jecxz
mov
sub
mov
bound
es
add
push
mov
and
adc
dec
xor
int3
xchg
jp
inc
jecxz
sub
fists
jg
mov
lods
sbb
adc
movsb
mov
je
sahf
mov
or
testl
les
mov
jg
jne
test
pop
and
sub
movsb
sahf
rcll
dec
mov
lret
cmp
xor
mov
adc
adc
sahf
clc
frstor
pushf
jns
daa
int
jnp
adc
mov
mov
pop
add
or
insl
mov
inc
inc
loop
xchg
sbb
xlat
sub
test
pop
pusha
push
daa
decl
shrl
ljmp
leave
sub
lret
lock
cmp
data16
fstpt
inc
jmp
add
sahf
xchg
test
mov
add
fbld
test
in
rorb
stc
call
imul
nop
add
sbb
pop
or
icebp
outsl
shll
mov
fsubl
sub
jns
pop
mov
add
jp
mov
cmp
shl
sbb
icebp
imul
daa
pop
push
lcall
sbb
stos
jb
dec
mov
in
push
das
adc
movl
sahf
add
pop
cmpb
mov
pusha
push
dec
jg
sarb
and
shl
jno
or
data16
fiadds
cltd
and
and
popl
xor
daa
insb
jno
adc
and
fdivl
mov
aaa
push
ret
pusha
call
pop
cmp
data16
xchg
add
jl
mull
orb
cmpsb
fidivl
scas
or
and
cs
lret
call
adc
cmp
push
mov
imul
add
iret
xor
lods
sbb
int
add
sub
or
popa
cmp
pop
jno
xor
mov
inc
jg
push
xchg
test
aad
adc
movsb
sti
and
cmp
cmp
lea
inc
fimuls
push
pop
je
mov
fld
inc
pop
push
push
adc
shlb
push
int3
dec
cmp
adc
outsb
push
mov
lret
inc
das
imull
xchg
jle
pop
lods
add
iret
sarl
ret
rcrl
pop
loop
xor
bound
js
jle
cltd
dec
icebp
push
and
cmp
icebp
push
mov
sbb
xor
push
les
scas
push
push
mov
aam
xor
and
mov
pop
push
hlt
aaa
xor
push
and
push
daa
ss
push
jl
lods
into
jno
inc
fcoms
cmp
inc
push
bound
lcall
outsb
mov
call
sub
out
jle
js
jnp
mov
shlb
cmpsb
push
sbb
out
adc
jae
pushf
jae
jns
scas
mov
imull
sbb
and
dec
cmp
fdivrs
test
jno
addr16
movsl
dec
test
inc
out
popf
out
cmp
pop
sahf
daa
mov
push
mov
or
and
or
push
jge
int
adc
icebp
mov
adc
mov
mov
cmp
adc
or
in
daa
xlat
cmp
mov
aas
push
lret
inc
inc
fsub
push
dec
es
mov
pusha
push
fs
pop
push
lods
or
sbb
xor
xchg
fiaddl
enter
push
mov
xchg
out
inc
addl
add
jno
push
ljmp
sub
xchg
dec
lock
das
mov
push
adc
lods
fists
jne
xor
push
mov
jnp
mov
jnp
in
rcll
filds
jmp
push
and
in
mov
shrb
ljmp
mov
or
push
ljmp
sbb
and
ret
hlt
mov
ss
inc
loope
push
mov
xchg
xor
push
push
repnz
pop
lock
add
pop
gs
ficoms
mov
adc
nop
mov
adc
or
mov
test
leave
loope
add
mov
push
lea
rorb
jno
xchg
mov
dec
out
sub
pop
cltd
mov
and
stos
loopne
xor
and
add
pop
push
xor
fidivrl
pop
adc
sub
push
lods
push
inc
xchg
stos
subl
sti
add
adc
and
push
into
test
xchg
push
mov
and
sub
xor
push
inc
scas
jg
fld
scas
jp
cmp
dec
jno
lds
fdivrl
sti
hlt
adc
int
sub
jo
pop
daa
xchg
mov
mov
mov
sahf
dec
stos
adc
mov
push
lret
sbb
icebp
or
les
add
push
imul
pop
xchg
adc
rorl
xor
add
add
push
inc
jge
jns
add
cltd
mov
pop
in
test
cwtl
ds
jnp
push
add
sahf
hlt
imul
push
push
imul
js
test
andb
ss
adc
roll
movsl
jbe
scas
adc
cmp
movsl
or
push
xlat
pop
hlt
inc
pushf
shlb
cmpl
sti
je
mov
xchg
xor
in
iret
int3
imul
cmc
mov
insl
mov
imul
cmp
pop
call
mov
inc
sbb
daa
dec
insb
lds
sbb
jae
loop
mov
cwtl
cmp
pop
orb
sub
mov
rorl
push
jb
int3
aam
pop
mov
and
jp
shl
call
cs
xchg
sarb
jecxz
out
dec
mov
iret
push
fmulp
pop
hlt
sub
outsl
mov
imul
aam
jb
sub
daa
es
leave
ds
cwtl
data16
mov
pop
jno
pop
dec
add
shll
inc
popf
lock
mov
mov
iret
cmp
jo
leave
or
mov
inc
sbb
cltd
mov
sbbb
cld
dec
sbb
adc
adc
or
popf
out
aad
insl
mov
scas
std
mov
ds
mov
push
inc
jno
xor
jle
xor
fstl
js
fldl
adc
lahf
sbb
popa
and
int3
xchg
scas
scas
sub
and
mov
adc
mov
xchg
inc
adc
outsb
pop
adc
test
lea
sti
mov
mov
inc
push
sarb
out
idiv
shrb
repnz
xchg
in
es
call
rolb
negl
jg
pop
mov
lock
jg
mov
sbb
push
lds
iretw
aam
adc
sbb
imul
fs
dec
mov
rcrb
cwtl
or
adc
mov
jns
mov
mov
pop
test
std
push
les
xlat
rclb
inc
sbb
mov
cmp
lds
stos
mov
pop
jmp
clc
movsb
fsubrl
jecxz
xor
dec
mov
dec
test
jle
dec
jns
inc
cmp
shrb
inc
shll
test
in
into
cmp
push
testb
aad
push
dec
andl
addr16
hlt
pop
mov
ljmp
add
inc
gs
popa
aad
push
dec
jne
loopne
stc
xchg
mov
jb
mov
pusha
divps
pop
sti
jle
jne
cmp
cmp
and
add
push
jle
int3
jb
adc
cmpl
adc
es
lret
adc
das
fwait
and
in
outsl
lock
popf
jnp
test
cmp
mov
test
sti
mov
lcall
std
in
inc
mov
cmp
cmpl
test
in
popf
mov
pop
movsl
cmp
jb
xor
pop
movq
inc
dec
mov
fldt
mov
push
inc
push
lret
inc
mov
inc
shlb
enter
mov
insb
xlat
jle
adc
sahf
daa
int
dec
add
pusha
mov
jmp
aaa
leave
clc
adcl
cli
sub
mov
xchg
pop
push
xchg
adc
jbe
rolb
insl
repnz
adc
hlt
cmp
sbb
stos
inc
in
and
xchg
out
adc
ja
scas
xor
hlt
test
rep
imul
inc
sbb
lods
xchg
xor
and
mov
pushf
stos
subb
mov
sbb
push
loope
insl
fiaddl
mov
mov
jno
xchg
jae
add
loopne
shll
jnp
sbb
hlt
push
or
sbb
mov
dec
push
enter
push
cmp
xchg
mov
arpl
jnp
js
ja
dec
shr
sbb
rclb
lock
ja
in
jne
and
push
adc
mov
dec
stos
jmp
push
xchg
pop
movl
stos
sub
test
or
mov
jle
pusha
mov
int3
lock
stos
cmpsb
sti
dec
sbbl
dec
insb
daa
test
out
ds
mov
scas
push
mov
fs
add
pusha
cmp
je
jp
push
jmp
or
pop
addr16
sbb
lds
std
xchg
pop
data16
add
test
lahf
xchg
sub
cli
add
lret
out
test
xchg
pop
lea
inc
push
imul
mov
mov
push
cli
or
sub
test
jle
movsl
push
push
cmc
loopne
xlat
push
xor
mov
jbe
fwait
xchg
scas
add
and
cs
cmp
mov
clc
dec
pmulhw
insl
push
fldt
pop
xchg
lods
or
pushf
js
and
int3
or
mov
mov
jb
fdiv
mov
in
pop
arpl
cmp
inc
pop
mov
ja
rclb
cmpsb
test
icebp
test
and
cmp
movsb
mov
adc
stos
cmp
inc
add
into
out
pop
rcr
add
fdivl
fidivrs
outsb
mov
into
cmp
adc
push
mov
pop
xchg
bound
pop
xchg
dec
and
add
inc
into
data16
mov
repnz
lcall
sbb
push
sub
mov
dec
cmpsb
jne
sbb
mov
cmpsb
jnp
cwtl
mov
jle
imul
iret
test
xor
std
fsubrs
fs
xor
vandnps
or
popf
ds
push
adc
sub
cs
out
std
and
fidivs
rorl
pop
dec
xlat
shll
cmovg
pop
inc
dec
sbb
or
ret
mov
push
fxch
push
mov
or
dec
ja
and
inc
rolb
ljmp
loope
and
mov
das
jnp
movsl
or
add
pop
pop
test
nop
xlat
popf
add
and
add
addr16
mov
cld
xchg
aas
xchg
fnstenv
push
fs
mov
sbb
fcmovnbe
and
fsubl
daa
test
int3
dec
jnp
adc
jbe
add
aaa
mov
cs
mov
or
loopne
pop
sub
call
daa
mov
and
and
add
repz
jne
in
and
dec
pop
rorb
jecxz
cld
push
dec
and
xchg
in
insb
inc
fwait
dec
push
repz
js
or
outsb
xchg
int3
gs
xorb
int
jecxz
lcall
fbstp
addb
mov
sub
jl
ss
stos
shlb
lret
mov
daa
jecxz
int3
jnp
push
testl
test
cld
sub
bound
out
jle
mov
push
dec
dec
aas
xor
jge
xchg
mov
ret
ljmp
cld
sbb
xor
mov
cli
push
shll
or
stos
or
icebp
sbb
popa
push
outsb
inc
inc
cmc
mov
jo
adc
out
lret
shlb
test
mov
dec
divb
inc
mov
push
dec
sbb
xchg
movl
shl
sub
je
or
jo
rol
inc
lss
hlt
imul
and
add
ss
setbe
ret
sbb
push
and
or
cwtl
pop
jp
ret
mov
xchg
jbe
sub
mov
les
cs
fisttps
in
pusha
mov
mov
pop
movsl
push
mov
out
pop
scas
pop
push
scas
and
movsb
fisttpll
adc
adc
pop
out
inc
sbb
ja
adc
inc
movsb
add
pop
movsl
inc
dec
stos
cld
aad
mov
movsl
and
pop
xorl
fwait
test
les
mov
shrb
inc
icebp
inc
fildll
push
cmp
cmc
inc
push
mov
inc
sbb
int
inc
jo
dec
push
dec
je
xor
int
scas
scas
cltd
scas
pushf
mov
sbb
push
loopne
push
addl
or
sbb
jno
jno
lret
sbb
lcall
add
enter
and
jl
mov
repnz
sub
fsubs
sbb
cli
stos
push
and
cwtl
rcr
pop
lcall
or
or
cmc
and
pusha
push
adc
out
fidivrl
into
sbb
in
jns
sarb
and
xor
scas
int
inc
push
and
cld
into
and
call
mov
sahf
adc
shrl
mov
inc
add
mov
aam
stos
aaa
xchg
jecxz
and
cmpsb
dec
and
test
adc
mov
lds
in
nop
adcb
sub
jmp
filds
sub
das
jo
retw
adc
mov
iret
ljmp
imul
clc
lret
sbb
hlt
sahf
mov
gs
jmp
cmp
fbld
xchg
mov
sub
or
mov
mov
pusha
pop
test
cld
jl
mov
jno
out
clc
iret
and
mov
xchg
sbb
stos
out
shll
gs
lret
push
add
dec
out
pop
test
stc
pop
andb
mov
adc
add
add
gs
or
mov
f2xm1
pop
hlt
xchg
fimull
dec
pop
sub
daa
cli
sub
cwtl
rcrb
and
pusha
push
push
shl
sbb
jl
push
bound
ficoml
incl
mov
or
test
inc
fwait
jl
push
fwait
push
cld
sbb
into
nop
ret
insb
fidivrs
fcmovbe
aas
loop
mov
push
movsl
int
loop
pop
sbb
push
or
push
sbb
imul
sub
dec
cmp
add
out
jp
inc
neg
xchg
mov
push
cmp
dec
int
xchg
jne
ljmp
movsb
testb
shll
popa
mov
pop
dec
jo
or
sub
lahf
push
inc
or
cmp
stos
xor
xchg
sbb
aas
clc
pop
rclb
in
cli
mov
add
xchg
popa
dec
adc
mov
add
or
or
adc
lods
adc
inc
sub
enter
jnp
pop
push
push
mov
pop
punpcklwd
mov
mov
pop
jbe
lret
push
lahf
push
sbb
mov
adc
inc
dec
lahf
add
mov
and
testl
cwtl
sub
popf
xchg
aas
insb
bound
sbb
lea
jmp
adc
testb
pop
incl
mov
or
sbb
je
pop
xchg
cmc
ss
in
gs
or
jns
add
ficomps
or
mov
stos
fwait
adc
dec
adc
sbb
or
insb
stos
and
clc
or
popa
cmc
nop
inc
mov
jmp
leave
arpl
loope
call
jl
push
cmp
shrl
pop
outsb
in
xor
pop
cmp
lods
push
movsb
je
mov
test
sbb
sub
cmpsb
pop
js
cmp
and
in
mov
or
fstp
lret
dec
fwait
icebp
dec
push
push
jb
xor
loope
jbe
jp
inc
push
or
cmp
dec
mov
jnp
pusha
mov
insl
jmp
sub
pop
outsl
push
outsl
jo
sbb
jne
pop
out
adc
fisubs
add
lahf
inc
push
inc
aaa
cmc
stos
rorl
jge
adc
aas
out
sub
jmp
dec
outsb
push
pop
inc
push
pop
idivl
rcrl
dec
imul
insl
test
out
aad
jg
sub
jmp
mov
scas
lock
jl
pop
inc
lea
lahf
mov
xchg
into
jnp
jno
sahf
f2xm1
sub
call
add
popf
bound
xchg
test
test
insb
shr
sbb
fwait
adc
hlt
ja
cmp
scas
lahf
popa
fsubl
xchg
or
sahf
push
in
pop
xchg
test
xor
jae
test
add
shrb
jae
and
loop
mov
aam
mov
xor
gs
mov
scas
imul
test
adc
std
incl
outsl
push
lds
lret
aad
push
cmp
daa
or
rcll
int3
jp
aaa
lahf
cmp
push
mov
push
add
clc
add
in
xchg
lret
mov
pop
xchg
xchg
stos
gs
mov
aam
mov
stc
repnz
jne
pop
in
repz
out
out
dec
ret
inc
lret
testl
stc
dec
push
mov
adc
push
test
push
lods
and
push
or
mov
mov
rclb
fisubs
leave
jge
mov
push
imul
movsl
inc
aas
jbe
adc
cmp
in
adc
rolb
pop
sub
lret
jge
les
or
fs
sub
jl
push
dec
pushf
add
jno
mov
rcrl
ja
cltd
data16
sub
scas
stos
jge
mov
adc
adc
xor
push
xor
fldt
and
push
sub
inc
dec
repnz
fisttpl
incb
xor
or
xchg
mov
call
popa
cltd
aas
jnp
ljmp
scas
mov
dec
mov
popa
imul
adc
push
or
and
or
xchg
add
pop
jne
loop
and
fucomp
jnp
movsl
pop
mov
enter
sub
jne
jne
inc
pop
xlat
test
test
xchg
xor
mov
xchg
sbb
jns
jge
lret
dec
xor
xchg
arpl
sbb
cmpsl
add
sbb
ja
push
das
cmp
imul
test
es
sahf
popf
pop
inc
shll
stos
andl
pop
imul
add
cmp
cmpsb
movsb
pmaddwd
test
cltd
mov
inc
std
dec
test
push
mov
addr16
fistpll
push
lods
dec
pop
in
jle
mov
sub
adc
insb
fdivs
mov
mov
mov
jg
add
mov
ficompl
and
insl
adc
fistps
mul
dec
popa
jnp
sub
cs
aam
fistpll
in
mov
shrl
lods
add
and
shrb
in
pop
xor
call
pop
jg
fisttpl
and
sub
sub
dec
and
stc
dec
dec
dec
mov
pop
in
xchg
test
in
ds
aaa
mov
out
rcr
loop
jbe
out
nop
das
leave
test
inc
push
cmp
mov
push
andb
xchg
stos
lods
rcrl
out
cmp
push
in
jb
out
stos
cpuid
inc
aaa
and
inc
mov
xchg
or
push
mov
dec
add
out
cli
jmp
sbb
sub
push
test
xchg
in
jae
cmp
jle
mov
ss
sbb
lahf
push
out
or
cmp
idivb
push
into
cmp
mov
pusha
push
jg
icebp
pop
jo
jg
jecxz
out
int3
sub
gs
call
adc
xchg
icebp
sarl
push
lcall
dec
in
pop
mov
add
push
jge
xchg
call
xchg
stos
or
cltd
je
mov
call
mov
pop
dec
test
aam
repz
mov
pushl
fcmovbe
shrl
jnp
push
pop
and
out
push
push
mov
mov
arpl
xor
in
daa
arpl
test
cmpsb
xor
lcall
out
arpl
in
pop
test
jle
and
mov
and
popf
loopne
test
push
jge
sbbb
in
aas
loope
dec
ficomps
xchg
mov
lret
adc
cmp
outsl
sub
mov
jp
rcrb
shll
xchg
sub
cli
popf
sub
jns
push
aas
adc
push
lock
xchg
fisttps
test
add
sahf
mov
push
push
test
push
jecxz
mov
insb
ret
ss
scas
or
hlt
xchg
inc
sub
rol
lods
mov
mov
lret
jbe
push
popa
sub
insb
subl
lcall
add
es
mov
sahf
push
mov
push
negl
push
mov
enter
pop
shlb
xor
add
add
jmp
test
cmp
aaa
add
negl
push
mov
popa
mov
lret
mov
lahf
and
loop
mov
lock
loop
lret
mov
out
ret
aas
imul
movb
inc
imul
push
aaa
or
fidivrl
popf
push
jns
stos
jg
out
inc
hlt
mov
lods
jg
or
pop
cmp
movsb
jg
mov
sbb
loop
cld
lret
pop
push
pop
push
jo
pop
sahf
mov
and
and
test
aaa
lahf
imul
cmc
lahf
idiv
jmp
push
jae
pop
or
lock
es
iret
stos
cmpsl
stos
mov
or
pop
dec
and
aas
pop
lahf
popf
cmp
push
pop
aaa
sbb
mov
out
jl
and
nop
jl
add
sub
jl
lock
dec
push
xchg
xchg
fnstcw
or
lahf
scas
and
push
pop
jns
addr16
dec
fisubl
mov
sbb
es
fisttps
cmpsb
test
add
not
ja
clc
xlat
push
test
repz
cltd
outsl
ficompl
les
mov
push
loop
inc
in
dec
inc
xor
sti
or
jo
xchg
sbb
jb
xchg
jmp
faddl
mov
jl
dec
stos
lret
stos
data16
sti
hlt
xchg
xchg
enter
in
push
cmp
mov
xchg
into
imul
sub
in
inc
adcb
fs
pop
mov
ss
loope
mov
testb
xchg
jp
jge
push
push
sbb
pop
lods
and
push
dec
addr16
inc
pop
lods
nop
dec
xchg
and
and
push
rcrl
not
pop
xchg
or
sahf
sub
add
lret
sub
pop
in
loope
iret
aaa
add
xor
dec
subb
pop
add
jbe
and
cmp
leave
push
xchg
or
sub
pop
aam
mov
lods
add
stc
cmp
cmp
inc
test
out
inc
shlb
test
jbe
push
call
pop
push
out
scas
pop
push
mov
xchg
jp
adc
jl
or
test
loope
clc
adc
mov
adc
cmpsb
jnp
cmp
movsb
mov
jns
add
lcall
jmp
mov
push
das
add
jge
xchg
ret
int
pop
xchg
daa
aaa
mov
pop
cmp
lods
mov
fsubrl
mov
fildl
test
push
mov
adc
pop
mov
pop
dec
stc
stos
xor
xchg
imul
mov
inc
adc
loopne
push
lods
or
pop
mov
pop
mov
aam
das
js
dec
fwait
lret
or
and
clc
dec
inc
das
mov
les
pop
popf
lahf
adc
mov
daa
jns
dec
int3
jg
stc
fcoml
sahf
in
aas
out
add
cltd
cmc
fnstenv
cmpsb
push
or
mov
fldt
push
pop
test
push
xchg
inc
test
jmp
aad
cli
je
mov
or
das
jmp
jbe
cmp
jns
sub
imull
and
hlt
inc
lods
add
mov
xchg
lret
adc
out
ficoml
and
pop
push
jg
cmp
in
mov
cmpsl
out
cmp
or
xchg
xor
mov
push
cmp
xchg
xchg
mov
pop
jle
xlat
cs
pop
pop
xchg
movsb
mov
xor
pop
rcll
jnp
add
mov
mov
or
cmpsl
xchg
and
jge
fcomps
dec
jg
test
loop,pn
leave
js
pop
sbb
dec
push
loopne
xorl
jo
mull
sbb
or
adc
sub
mov
loop
dec
ja
mov
js
add
or
or
xor
gs
push
cs
jg
movb
lods
adc
push
pop
and
or
lods
xchg
pop
mull
inc
mov
aam
sbb
inc
jo
and
cmp
cmc
add
in
popa
scas
adc
mov
and
fadd
js
or
adc
iret
cmp
inc
fiaddl
add
loopne
lret
sbb
and
pushf
out
outsl
lret
mov
mov
nop
sbb
repz
xlat
clc
mov
inc
negb
cmp
sbb
sarb
mov
push
jae
add
das
loope
cmpsl
popf
adc
cld
mov
addr16
cmpsb
mov
pop
in
fsubrl
shl
shlb
jg
gs
or
or
mov
pop
push
mov
incl
shll
sub
mov
test
sbb
scas
test
arpl
lods
and
pop
cli
dec
decb
icebp
repnz
idiv
jns
or
loopne
mov
cltd
pop
xchg
nop
outsl
sbb
jo
sub
pop
jne
rcll
frstor
xchg
js
adc
bound
out
shrb
or
xor
cltd
pop
or
sub
fists
sub
in
xlat
xchg
inc
aad
pop
loop
add
jecxz,pn
imul
push
shrb
cltd
sahf
add
and
fisubrs
sub
or
shl
idivb
insb
dec
cmpsl
jecxz
arpl
mov
iret
decb
in
pop
dec
push
dec
pop
loopne
repnz
push
mov
pop
push
adc
jnp
in
stc
xchg
adc
cwtl
ud1
add
jg
pop
sbb
fcoms
mov
inc
stos
or
sbb
mov
loopne
mull
pop
dec
sbb
pop
jnp
inc
aad
std
les
cmp
aaa
inc
jae
fldl
pop
sbb
mov
or
mov
fcoml
icebp
or
xchg
xor
sbb
js
xor
pop
and
pop
and
imul
ljmp
xchg
mov
xchg
xchg
sbb
xchg
jno
jns
inc
mov
xor
test
mov
aad
add
addb
jb
popf
pop
leave
in
push
sbb
mov
int
xor
push
popf
into
or
xor
dec
into
jl
pushl
xchg
xchg
das
pop
sbb
jnp
mov
mov
std
bound
scas
push
int3
into
mov
inc
push
dec
push
xor
adc
aam
pop
jno
stos
xchg
mov
adc
es
mull
cld
dec
mov
clc
lea
shlb
sub
imul
cmp
xor
dec
xchg
xchg
cmp
lcall
in
sub
call
sbb
cld
mul
jbe
lcall
test
jge
divb
pop
sub
push
add
fcomps
sbb
lret
sbb
push
pusha
fsubrs
and
das
es
andl
sub
movsb
ds
gs
sub
test
mov
mov
or
fnstsw
pop
int
inc
sub
ljmp
xor
mov
and
into
xor
stos
cmc
pop
add
push
push
js
adc
push
cs
pop
inc
je
push
xchg
mov
jae
adc
fldenv
fiadds
adc
mov
stc
push
dec
dec
pop
fwait
or
pusha
pushf
jecxz
inc
jnp
and
arpl
pop
lock
daa
jb
xchg
aas
out
xor
fwait
enter
pushf
adc
xchg
rolb
cmp
gs
or
push
popa
xor
out
pop
pusha
in
sar
movsb
insl
mov
fdivrs
pop
push
sub
cmp
mov
sub
filds
pop
pop
outsb
mov
imul
repnz
sub
push
popf
cmc
cmp
sbb
ja
lock
in
loope
andb
cwtl
shll
sub
xor
sub
call
jnp
mov
cmpsb
push
mov
push
inc
cli
xchg
cmp
adc
mov
lea
mov
nop
xchg
fisttpll
adc
imul
sub
movsl
mov
push
stos
mov
and
in
dec
les
repnz
pop
sub
ffreep
lds
in
pop
mov
mov
aas
pop
ffreep
outsb
xchg
adcb
jbe
popf
pop
lea
imul
mov
ja
cs
outsl
mov
mov
sbb
and
das
mov
inc
gs
insl
sbb
jae
jp
leave
xchg
in
shll
out
and
imul
mov
fistpl
pusha
shll
popf
push
adc
fimuls
pop
dec
stc
rorl
cmp
fs
xchg
repz
fs
std
dec
movsb
add
mov
jns
fnstcw
frstor
add
sbb
push
mov
les
mov
pop
inc
push
cmp
pop
out
aas
insl
ss
add
in
gs
pop
or
push
imul
mov
mov
dec
xchg
into
pop
sahf
add
loopne
je
dec
sub
adc
aaa
xchg
adc
cwtl
scas
call
adc
inc
push
mov
xchg
inc
sahf
cmc
jbe
mov
push
pop
int
jle
add
daa
sub
xchg
mov
adc
pop
jg
cli
aas
add
popf
xor
jg
and
pop
stos
test
pop
bound
adc
out
adc
push
cwtl
stos
cmpsb
adc
aaa
pop
mov
hlt
mov
mov
mov
jae
cmpsb
push
shrb
loop
sbb
inc
movsl
mulb
xchg
xor
cmp
and
xlat
cmc
out
addl
mov
out
dec
lcall
xchg
roll
pop
cmpsl
ljmp
data16
and
mov
xor
jmp
fimuls
int
popl
sbb
xchg
and
or
out
push
dec
test
pop
jo
movsl
inc
shll
add
cmp
sahf
sbb
mov
pop
jle
lods
nop
and
mov
mov
mov
clc
dec
cmp
push
cltd
jg
add
ja
aad
pop
push
cs
test
mov
test
pop
aaa
adc
jecxz
jmp
jmp
fistl
pop
xlat
lods
dec
push
loopne
cmp
add
sbb
mov
and
orb
xlat
mov
cmp
fisttpll
fwait
inc
int
adcb
adc
cmp
xor
fcoms
xchg
mov
in
loop
movsl
aad
jae
push
mov
sbb
mov
dec
dec
adc
cmp
pop
mov
add
movsl
enter
divb
jno
stc
xchg
popa
das
pop
data16
xor
adc
je
xor
add
mov
movsl
push
mov
add
inc
test
mov
in
cmp
movsb
daa
lahf
out
fldt
lds
dec
push
and
bound
xor
push
mov
add
add
add
mov
and
testb
mov
loope
pop
repz
sahf
lea
and
in
pop
mov
or
fimull
fs
stc
push
cmpsl
mov
int
cmc
cwtl
out
jb
loope
lds
lock
push
insl
inc
rol
bound
or
xchg
and
sbb
dec
cmp
inc
es
push
pop
dec
xor
inc
jno
xchg
les
xchg
pop
adc
xor
es
dec
imul
cs
cmpsl
std
ja
cltd
push
xchg
das
or
xchg
insl
and
xchg
dec
add
push
jg
mov
add
inc
dec
gs
adcl
fildl
imull
movsl
int
jno
nop
addr16
jno
lahf
add
mov
mov
push
lahf
inc
in
ss
pop
or
movsl
add
xor
sub
movntq
imul
scas
int
push
lods
lahf
js
sahf
loop
mov
cwtl
jecxz,pn
rclb
or
mov
jb
xchg
loopne
mov
test
hlt
lret
cmc
dec
mov
cmc
movsb
or
sub
jne
xchg
pop
sub
or
lret
fdivrs
inc
adc
popf
sub
repnz
imul
sbb
and
stos
sbb
lahf
jecxz
mov
pop
cmp
rcrb
xchg
cmp
pop
nop
push
ret
lret
mov
mov
fwait
popf
pop
xlat
out
xor
daa
jns
fisubs
ja
lea
jnp
jp
mov
mov
outsb
mov
push
pop
push
cmpsl
daa
cmpsb
pop
cmp
push
insl
mov
aaa
ret
mov
jecxz
ret
stc
dec
xchg
mov
imul
mov
sub
fs
andl
xlat
pop
push
popf
leave
mov
inc
lods
mov
mov
mov
push
out
mov
xlat
sub
inc
leave
imul
adc
adc
mov
lods
sbb
cmpsl
pop
push
frstor
cmp
out
repz
sub
xor
lret
push
mov
mov
xchg
xor
icebp
ret
inc
shll
lret
add
push
jb
jle
fisttps
xor
cli
fcomi
jecxz
int
imul
jne
pmulhuw
mov
mov
jo
sbb
decl
cmpsl
outsb
mov
out
hlt
xlat
mov
mov
cmc
xor
fcoml
mov
mov
subb
rorb
mov
push
push
orl
sub
scas
das
gs
lret
pop
xchg
sbb
jmp
cwtl
sbb
cmp
loope
push
adc
movsl
cmpsl
cld
jge
enter
mov
lea
in
and
cmp
inc
jne
push
ljmp
cmpsl
testl
pop
out
and
pop
fstps
jecxz
fdivrs
bound
sbb
jbe
adc
addr16
cmpsb
shr
pop
cmpsb
jecxz
cli
xor
iret
xor
shll
fs
fdivrs
jo
cmp
scas
loopne
outsl
in
outsl
les
sbb
les
mov
sub
and
cmp
movsl
ds
ficoml
ret
fstps
ret
ja
xchg
fs
aam
jle
xchg
fs
loopw
movsb
cs
insb
and
movb
loop
sbb
sub
mov
jne
jb
mov
fsubrl
add
mov
popa
ret
sub
xchg
insl
mov
sub
insb
in
adc
in
into
jge
loop
and
jmp
xor
ljmp
jmp
shrl
jp
cmp
ret
and
mov
sti
xchg
repnz
push
out
or
mov
ljmp
loopne
stos
xor
xor
cwtl
mov
or
popf
cmpsl
call
push
pop
xor
stos
inc
scas
loop
lds
sub
test
test
je
ja
cmp
or
mov
xchg
mov
adc
cmc
lahf
and
mov
fwait
add
in
adc
mov
xchg
loop
jne
jg
mov
pop
addb
out
out
pop
sbb
outsl
sbb
mov
push
jl
sbb
mov
ja
insl
scas
int
sbb
adc
jge
jnp
pop
dec
or
xor
daa
sub
jnp
hlt
xor
xor
pop
pop
jno
sarl
sub
cld
fsubrp
adc
mov
outsb
imull
hlt
mov
adc
lds
sub
nop
jmp
xor
cmpsl
cmpb
ficompl
dec
sub
xchg
push
and
je
adc
jae
orl
push
sbb
dec
lret
imul
shl
xchg
scas
insl
outsl
test
arpl
lret
sbb
scas
mov
push
mov
out
sub
lar
stos
nop
lds
divl
lds
add
and
stos
pop
and
inc
mov
ljmp
in
lea
mov
xor
inc
mov
xor
push
int
rcrl
aam
pop
cmp
arpl
pop
int
lahf
xchg
xchg
mov
andb
insl
cmp
or
in
or
loopne
xor
xchg
das
mov
xchg
dec
test
push
xor
inc
xlat
pop
gs
sbb
xor
lds
mov
adc
xor
out
dec
das
cmpsl
push
sub
mov
jb
lock
fdivrl
test
ret
insb
movsb
fdivs
dec
hlt
mov
cmp
ficomps
inc
test
mov
jae
iret
mov
loopne
int
loop
pop
jmp
jae
push
scas
mov
push
negb
xchg
cmp
mov
outsl
out
icebp
push
inc
sti
xor
cmc
mul
push
adc
push
loope
or
mov
push
adc
sbb
inc
mov
mov
jmp
lods
pop
push
out
cmp
pop
stc
mov
add
roll
aam
xchg
sub
and
in
dec
out
push
cmp
pushf
test
bound
inc
movsb
push
xchg
dec
insb
inc
popa
xchg
mov
mov
aas
out
stc
cs
cltd
nop
lret
xchg
imul
jnp
out
xchg
insb
imul
mov
inc
test
jne
div
or
aaa
in
fbld
faddl
dec
hlt
lods
jnp
inc
sbb
sub
jne
and
and
mov
adc
lret
jecxz
stos
xor
popa
adc
sbb
pop
nop
push
loope
loop
enter
inc
cltd
sbb
jae
xor
push
out
in
pop
gs
cmp
jge
adc
dec
jp
gs
and
push
roll
iret
js
add
or
lds
pop
xchg
add
repz
repnz
cmp
fldenv
in
add
daa
pop
cs
push
fsubrl
stos
bound
add
test
imul
sub
int
repz
cmp
lods
pop
add
stc
in
xchg
repnz
es
sbb
pop
mov
xchg
inc
loopne
ret
add
mov
fimull
cmp
dec
stos
push
mov
les
jns
inc
xchg
call
jmp
in
mov
jmp
shlb
xchg
mov
iret
sub
jp
inc
jle
mov
jmp
sub
inc
daa
inc
jle
adc
cmp
sbb
int3
stc
mov
sub
je
les
jmp
es
mov
cltd
inc
sub
notl
add
sub
cmpsb
nop
jmp
cli
xlat
push
lcall
cmpsl
sub
push
sub
in
sbb
or
jo
inc
mov
les
pop
rcl
and
jg
std
lcall
and
fildll
cmpsb
mov
pop
daa
pop
push
cmp
addr16
xorl
sbb
xor
sarl
orb
ret
out
fidivrl
dec
mov
push
xchg
fidivrs
cli
xor
xchg
cmp
pop
or
xchg
xorl
and
mov
pop
jle
mov
xor
mov
outsb
mov
into
call
mov
sub
repnz
cmc
mov
xchg
fs
loop
jne
cltd
dec
mov
lods
dec
sub
jb
pop
add
iret
iret
out
mov
cmp
into
pop
jecxz
and
adc
testl
test
test
and
scas
cmp
inc
roll
xor
push
jp,pn
xor
push
xchg
push
sub
mov
adc
xchg
dec
pop
xchg
sub
fildll
pusha
in
pop
sbb
sub
sub
rclb
jo
xor
add
cmpsl
inc
dec
bound
flds
inc
rcll
imul
or
les
and
cltd
pop
imul
push
pusha
jp
loopne
cmp
cld
adc
mov
jmp
xor
dec
les
inc
iret
scas
xor
mov
adc
jecxz
shll
in
orb
cld
xchg
jbe
outsb
dec
adc
rcl
jl
loope
cmpsl
cmc
lds
push
push
push
push
jp
inc
mov
insl
sbb
out
inc
xchg
cmp
aam
sti
test
movsl
sarb
push
sub
iret
mov
mov
repz
cmp
outsl
mov
xchg
inc
std
jg
outsb
xor
mov
cmp
insb
cmc
out
test
rcrb
jno
outsb
ds
push
push
mov
mov
out
cmpsl
mov
dec
pushf
das
inc
push
icebp
jno
dec
pop
mov
and
push
and
es
xchg
add
adc
inc
lcall
xchg
and
xchg
daa
inc
lcall
mov
scas
jne
add
xchg
andb
push
mov
call
xor
mov
in
dec
aam
dec
shl
inc
adc
ss
xchg
add
add
mov
fadds
lock
add
xor
dec
sarl
sbb
cmp
cmp
movsb
xchg
fnstcw
xor
inc
je
adc
and
mov
ss
or
ljmp
adc
push
fldl2e
push
test
aas
mov
mov
adc
scas
inc
adc
sti
popf
jecxz
mov
mov
into
dec
mov
and
adc
aas
cli
fmulp
mov
inc
fimull
enter
loop
mov
mov
repnz
sti
sub
mov
push
jb
push
leave
sub
fs
mov
push
inc
and
xchg
add
pop
push
dec
in
addb
jl
jg
lcall
adc
cmp
in
jb
mov
je
sbb
xor
sbb
flds
adc
mov
cmp
and
adc
loop
das
orb
movsb
into
ret
icebp
icebp
jl
shrl
outsb
push
sbb
test
add
push
mov
and
test
test
loope
sbb
insl
js
movsb
or
mov
xchg
xor
sbb
fildl
aas
lds
and
lret
in
aas
aad
sub
push
or
or
xorl
fbld
insl
enter
push
mov
jb
fbld
jg
fcoml
jno
jns
int
push
xor
push
enter
xchg
inc
in
fistpl
mov
or
gs
mov
lcall
sub
dec
ret
js
fcmovb
pop
jg
lock
cmp
jmp
adc
stos
clc
pop
xor
mov
push
adc
adc
sbb
mov
scas
fwait
in
xor
or
pop
ds
pop
add
popa
inc
popf
xor
std
pop
xacquire
pop
push
call
dec
test
popf
dec
push
adc
sub
pop
sub
dec
jbe
or
add
jg
mov
jb
outsl
movsl
xchg
adc
push
sub
lods
lods
in
std
sub
test
fldl
dec
fiaddl
aas
movsb
mov
inc
mov
xor
xchg
ljmp
call
dec
addr16
sbb
jno
popa
dec
xchg
pop
cmc
mov
pushf
mov
sub
sub
add
jge
pop
xor
out
xlat
or
movl
push
shrb
push
rcr
sub
lret
mov
arpl
cs
cmp
mov
lahf
mov
dec
pop
push
in
xchg
rorl
dec
inc
loopne
mov
or
jae
orl
lret
push
pop
pop
les
das
push
std
or
push
jp
dec
imul
push
fcompl
mov
mov
pop
inc
or
mov
mov
dec
and
cmp
hlt
or
mov
mov
jmp
dec
fnsave
mov
imul
int
pop
mov
mov
fisttps
aad
mov
jo
add
shll
adc
repnz
mov
pop
aam
pop
push
ss
movsb
mov
sbb
arpl
mov
fstpt
adc
lods
pop
out
stc
cmpsb
inc
clc
push
int
inc
inc
jo
lcall
and
ss
pushf
sub
xor
lret
xchg
lret
pop
scas
sbb
lods
cmp
movsb
adc
pop
jle
jae
imul
test
push
fimuls
jge
inc
or
push
repz
adc
inc
xchg
fcmove
pop
xchg
push
mov
in
fnstenv
insb
push
cmp
sbb
inc
xor
test
xchg
dec
and
push
outsl
divb
cwtl
adc
sub
adc
xchg
enter
jae
stc
dec
jecxz
stc
push
pop
jo
sbb
cld
aad
shl
jg
and
add
mov
das
lods
ljmp
pop
mov
xor
pop
mov
adc
aam
loope
push
sub
in
lods
daa
insb
xor
push
cwtl
jb
and
xor
mov
jns
dec
sbb
add
repnz
adc
das
jo
push
movsb
test
push
insb
mov
movsl
jo
xchg
bound
cmp
mov
test
int
imul
clc
push
shll
loop
mov
pop
je
divb
add
mov
mov
mov
dec
stos
mov
ficomps
jecxz,pn
pusha
mov
popf
roll
repz
jb
test
sub
push
cwtl
jge
jb
fwait
inc
mov
push
xchg
loope
neg
adc
sbb
sub
dec
leave
mov
jo
test
mov
loopne
xchg
jle
out
js
rcrb
shrb
dec
pushf
jo
mov
sbb
lret
scas
cmpl
push
ljmp
stc
sbb
mov
hlt
or
negl
enter
outsb
mov
jmp
xchg
sub
call
mov
iret
jge
add
lret
and
pop
xor
or
lods
pusha
ja
and
pop
out
das
dec
pop
roll
push
xchg
scas
lods
popa
or
xlat
jnp
add
rcl
cwtl
pop
push
fistl
mov
das
cmp
sbb
sbb
xchg
mov
xor
add
test
xor
pop
inc
xor
and
jl
cmp
sahf
pop
adcl
and
add
cmp
dec
cwtl
popf
cmp
repnz
sub
push
mov
dec
mov
cs
aas
or
gs
push
xor
inc
in
xchg
fidivrs
xchg
les
pop
rcrl
adc
or
pop
mov
adc
xor
shl
xor
xor
push
sbb
dec
jle
fnclex
jo
jmp
add
ljmp
inc
movsb
stc
mov
and
mov
or
mov
sbb
je
daa
cmpl
test
lret
nop
jne
mov
mov
inc
loop
insl
jmp
imull
mov
dec
pop
aas
cltd
je
movsb
jne
and
push
cld
xchg
push
xlat
stos
sbb
dec
cs
and
sub
push
xchg
dec
jnp
out
std
xor
sbb
sbb
aad
scas
cli
jle
pop
push
mov
adc
mov
dec
mov
fwait
add
lock
les
movsb
cmc
sbb
push
es
cmc
mov
mov
insl
lods
or
out
push
sbb
add
dec
divl
repz
push
and
ss
sub
and
xchg
cmp
insb
fsubr
pop
int3
adc
lret
les
xchg
dec
sbb
xchg
outsb
js
icebp
test
insb
add
or
lret
call
leave
scas
push
js
xor
inc
mov
xor
movl
add
movsb
cvtps2pi
adc
mov
inc
mov
dec
adc
pop
test
rorb
add
out
out
dec
addr16
xor
dec
jp
inc
rorb
xor
cmpsl
fs
ja
push
sbb
dec
test
bound
and
sbb
ret
incl
movsb
scas
dec
in
or
or
je
daa
xchg
vcvttpd2dqy
inc
pop
add
in
cld
xchg
xor
icebp
adc
xlat
andb
mov
cs
lret
sbb
leave
call
xor
clc
mov
or
and
lods
adc
outsb
mov
lods
test
test
mov
jnp
iret
addr16
add
push
popf
das
jecxz
jg
in
mov
insb
or
mov
fsubrs
fwait
mov
ss
add
ja
cmp
and
out
ss
mov
pop
das
imul
sbb
nop
jl
in
push
push
cli
stc
pusha
fisttps
cmp
cmp
xchg
idiv
outsb
and
repnz
pop
sub
call
std
sbb
divl
mov
lea
cmp
or
add
fsts
sub
imul
mov
adc
cmp
mov
inc
leave
cmp
sbbl
xchg
lods
ja
in
call
push
outsl
cmpsb
sti
xchg
sbbb
and
lock
xchg
scas
dec
inc
ljmp
dec
push
outsl
add
xor
insl
fdiv
pop
mov
lea
cmp
jg
cmp
decl
hlt
cmp
xchg
push
xlat
jmp
xchg
or
addl
sbb
inc
adc
lea
negb
enter
add
push
jge
sbb
in
jle
sub
movsl
lods
jg
in
loopne
gs
sub
adc
and
mov
inc
not
jge
mov
jge
or
testb
inc
or
movl
stc
jno
add
enter
enter
push
jle
xchg
xchg
imul
xor
push
iret
xchg
jl
leave
adc
jae
test
inc
push
push
rol
or
inc
ljmp
add
cmpsb
xchg
mov
enter
in
mov
repnz
jg,pt
pop
loope
xchg
mov
mov
and
sahf
movsb
xor
icebp
movzbl
in
mov
daa
cli
add
sarl
xchg
jp
data16
push
shl
sti
and
stos
mov
xor
xchg
call
rcl
fildll
test
jmp
icebp
add
jns
xor
mov
rcrb
xor
roll
fbstp
adc
rcrl
dec
jg
cmc
mov
mov
xor
aam
adc
cmp
adc
scas
rcr
outsl
or
cmp
mov
mov
mov
cmp
jne
inc
lock
pusha
mov
cmp
mov
scas
decl
cmc
fs
shll
divl
sub
repnz
outsl
pop
cmp
out
dec
data16
mov
stos
sarb
std
mov
lock
inc
wbinvd
push
clc
jp
out
cmc
pushf
xor
pop
dec
jg
int
sbb
ret
jl
jge
cmp
ljmp
inc
popf
push
incl
mov
pop
fistps
fisubl
ret
inc
lods
xor
push
repnz
mov
nop
cwtl
pop
mov
sub
push
hlt
into
rolb
sbbb
mov
fiadds
ja
jmp
adc
inc
bound
fldt
lret
mov
xchg
in
mov
mov
cmc
and
inc
jge
mull
popf
std
repz
dec
movsl
bound
jae
sbb
jle
mov
add
stc
addr16
sbb
xor
mov
insl
iret
in
and
mov
popf
aas
ror
add
mov
lret
cmc
dec
call
cmc
mov
mov
xor
in
mov
lods
int
mov
sbb
cmp
lock
add
inc
out
iret
xchg
aam
bound
mov
jle
shrl
sbb
mov
inc
ljmp
or
outsl
add
sub
sbb
fldt
mov
jne
pusha
hlt
int
pop
ret
adc
xchg
addb
cmp
xchg
ja
mov
rorl
mov
xlat
mov
jbe
sub
mov
push
das
adc
imul
dec
fsts
fldl
outsb
repnz
push
xchg
and
cmc
enter
aaa
fidivrs
ret
mov
aam
cld
enter
pop
jns
xchg
call
sbb
lret
push
mov
aad
jecxz
xor
movsb
loopne
clc
xlat
jne
jg
mov
mov
xchg
or
dec
movsl
dec
add
test
and
mov
and
imul
in
mov
mov
mov
xor
shl
mov
push
dec
cmp
scas
cs
inc
stos
jge
and
lock
les
arpl
mov
push
arpl
sub
jae
je
xchg
push
cwtl
jo
xchg
mov
iret
popa
push
loopne
mov
add
pop
repz
sti
jne
fdiv
mov
xchg
mov
icebp
mov
and
mov
xor
shrb
sbb
sub
jmp
xor
dec
les
testb
inc
or
push
popa
int3
shlb
popa
mov
int3
or
stos
inc
cli
xchg
hlt
lods
jae
mov
sbb
and
pop
jg,pn
and
lods
insb
xchg
push
std
pusha
xor
arpl
mov
xlat
inc
out
rcrl
movsb
inc
lahf
jns
lods
mov
pop
xchg
push
and
orb
push
cli
sub
fsubs
mov
jecxz
jg
cmpsl
scas
mov
and
insl
sti
add
jle
insb
xchg
xor
test
dec
or
cltd
lods
mov
sarl
mov
les
jle
jb
iret
iret
sub
jle
ret
and
mov
das
add
movl
shrb
insl
outsb
inc
call
push
popf
pop
jno
add
jmp
fcompl
mov
movsb
push
loopne
bound
sub
sub
sar
sbb
pop
pop
and
scas
fimuls
or
scas
cli
cmpl
stc
cmpsl
dec
xchg
cs
xchg
add
inc
aam
in
add
cmp
test
cmp
cltd
mov
outsl
cmpl
add
outsb
xorb
shl
lea
imul
jmp
jns
lcall
mov
daa
and
cbtw
ret
push
adc
das
cmp
cmp
pop
lea
sub
in
cltd
movsb
cmp
dec
mov
ret
cmp
xchg
push
sub
adc
push
test
bound
mov
nop
cmp
mov
inc
add
cli
js
mov
or
imul
and
ljmp
fdivrl
lahf
mov
iret
cmp
ljmp
loopne
pop
aam
outsb
mov
sbb
je
mov
sub
dec
pop
ljmp
adc
xor
out
dec
cmp
jg
xchg
gs
aad
cmc
pop
aam
jnp
mov
sbb
or
push
shrb
lcall
adc
xchg
inc
mov
out
lea
data16
ja
call
jge
call
pop
in
cs
clc
jne
imul
cwtl
mov
xor
or
jnp
push
jb
push
cmc
mov
aaa
pushf
lds
out
add
xor
sub
loope
lods
jmp
mov
pop
fnstenv
hlt
xchg
nop
pop
push
insl
inc
loope
repnz
jae
sub
adc
fwait
std
or
xor
lret
add
or
setns
mov
dec
adc
das
jnp
out
in
cltd
iret
push
xlat
xor
sbb
xchg
sbb
repz
clc
je
in
ss
add
scas
push
rolb
icebp
lea
pop
jno
int
inc
jmp
fisubrl
mov
dec
dec
in
lcall
or
outsl
subl
mov
mov
fs
adc
repz
fisttps
add
mov
mov
inc
mov
dec
push
jp
add
inc
mov
outsb
jg
test
xor
scas
insb
mov
dec
ljmp
cmpsb
inc
dec
jmp
faddl
fimuls
iret
emms
push
flds
cltd
movsl
dec
lahf
pop
xchg
mov
test
pop
test
fldl
xor
hlt
inc
popf
arpl
jl
bound
mov
cmp
cltd
int3
div
add
and
push
mov
add
notb
or
test
push
jno
cwtl
xchg
push
testl
cwtl
jp
pop
mov
aam
sub
push
ret
inc
sbb
jbe
fstpl
xchg
fidivs
fildl
sbb
inc
mov
mov
xor
cltd
cmp
test
into
imul
cmp
pop
sub
lods
mov
xchg
cwtl
rol
or
mov
testb
mov
iret
enter
mov
lcall
es
inc
push
inc
xorb
js
pop
test
fiadds
pusha
pusha
mov
clc
movsl
ds
mov
xchg
adc
movl
lods
sbb
adc
ret
inc
push
jno
push
in
mov
lahf
shll
or
add
push
stc
pop
es
jmp
test
sub
mov
inc
mov
xchg
cmpsl
loopne
sub
cmp
xchg
and
fwait
or
inc
sub
push
cmpsl
scas
cs
popf
or
mov
adc
push
push
gs
int3
xchg
lea
mov
in
js
push
add
dec
sbb
inc
cmp
xlat
imul
or
mov
ds
sbb
xchg
inc
inc
jne
sarb
mov
into
adc
in
data16
or
adc
jecxz
dec
push
push
inc
fimuls
out
fimuls
pop
mov
add
into
sub
push
push
dec
cmp
xor
jns
dec
jp
nop
lods
xor
mov
aad
dec
add
cmp
stc
scas
js
or
cmp
loop
or
xor
pop
pop
xor
xor
jl
mov
adc
lret
das
inc
push
mov
leave
xchg
xchg
mov
jbe
mov
push
fildll
loope
out
xor
xor
and
out
ja
jg
arpl
mov
imul
mov
sbb
xor
push
cmpsl
aaa
insb
arpl
mov
and
pop
jl,pt
mov
xor
in
mov
iret
loope
pop
daa
pop
mov
lret
movsl
jnp
in
add
inc
lahf
sub
stc
dec
or
pop
arpl
mov
sti
and
mov
jg
test
sub
sbb
mov
adc
pushf
mov
dec
cmp
enter
ret
notb
cwtl
sbb
cmp
rorb
inc
cmp
push
bound
ret
subl
jmp
pop
xchg
es
mov
in
nop
aaa
push
fxch
adcb
movsl
jg
outsb
inc
and
pop
or
inc
dec
jae
stos
pop
fbstp
scas
sub
pop
mov
push
bound
sbb
jb
lcall
jae
mov
les
push
shlb
dec
sbb
jmp
inc
cli
pop
sbb
jl
mov
cmpsb
enter
cmp
adc
jne
mov
pushf
lods
mov
rcll
call
stc
add
cld
mov
std
inc
addr16
stos
pop
roll
mov
jno
int3
mov
pop
pop
stos
xor
jns
push
cs
sub
sub
iret
xchg
add
cmp
iret
in
mov
gs
jne
pop
pop
or
mov
jge
sbb
push
pop
push
xchg
push
cli
mov
jge
cmp
sbbb
inc
and
cmp
jl
add
outsb
mov
adc
hlt
xor
pop
ja
add
and
sub
sbb
ljmp
and
inc
aad
inc
icebp
fldt
mov
iret
fistpll
mov
xchg
scas
xor
xchg
jno
cli
ljmp
mov
sbb
dec
movups
mov
lret
arpl
pop
out
andb
bound
xchg
aad
mov
lods
push
jns
mov
scas
shll
push
lods
cmp
pop
cwtl
sub
repnz
push
rorl
nop
lret
fwait
pop
idiv
jne
enter
sahf
xchg
adc
xor
mov
pop
lahf
clc
rolb
rcl
inc
scas
call
jl
test
xchg
xor
cli
xchg
arpl
jecxz
aaa
jmp
xchg
rcrb
ss
ja
addr16
rcll
popa
dec
inc
pop
and
push
inc
pop
mov
rclb
lcall
fiadds
cs
inc
movsb
hlt
mov
add
push
sbb
fs
js
addr16
jbe
lea
mov
in
repnz
sahf
cmc
stc
mov
jge
arpl
or
inc
movsl
je
inc
iret
pushf
add
lds
push
mov
mov
pop
lods
xchg
shll
fistpll
inc
adc
adc
lret
dec
mov
js
cli
push
cmp
adc
inc
jnp
push
ljmp
mov
and
xor
lods
jo
adc
jb
push
test
cmc
inc
dec
stc
xchg
xchg
sbb
sbb
push
mov
or
inc
inc
dec
push
mov
insb
iret
mov
movsb
mov
cmp
xchg
inc
and
aas
lods
loop
daa
jns
daa
dec
fcomp
add
mov
clc
pop
iret
cwtl
out
dec
sbb
fldcw
dec
push
jb
aad
movsb
arpl
leave
cmp
inc
mov
hlt
xor
mov
stc
out
sub
sub
dec
scas
jg
xchg
jnp
lds
das
mov
in
data16
pop
pavgw
push
xor
pop
xchg
pop
pushf
inc
mov
adc
sub
ret
loop,pt
out
js
add
mov
or
lahf
in
jb
lret
and
mov
cmpsb
or
mov
cwtl
sbb
pop
scas
insl
push
push
lock
mov
sub
stos
add
mov
leave
fsubrl
insb
jb
push
test
mov
add
repnz
movsl
cltd
int
pop
daa
mov
in
sarb
adc
shll
push
sub
cli
jecxz
mov
ds
mov
cmp
sarb
aaa
ljmp
ret
les
shll
jo
mov
aad
inc
test
xlat
dec
cmp
sbb
movsl
cmc
enter
sbb
aaa
add
ljmp
cmp
lds
push
pop
sarb
cmc
inc
pusha
inc
sub
testl
popf
jge
xlat
jmp
add
repnz
loopne
mov
in
sbb
xor
xor
inc
add
adc
or
mov
xchg
and
cmp
hlt
js
mov
sbb
cwtl
movsl
mov
xor
or
mov
push
clc
mov
jl
adc
fsub
scas
imul
adc
pop
fsubrs
jg
xchg
pop
or
or
fisubrs
and
jb
inc
jl
das
inc
mov
je
arpl
jae
hlt
adc
jno
inc
jnp
xchg
cmp
out
jnp
cld
cmpsl
jae
push
inc
ljmp
js
clc
loopne
pop
fsincos
es
aaa
test
cli
insb
cmp
mov
lods
mov
lea
pop
push
jle
lcall
pop
mov
add
popf
inc
out
dec
push
ljmp
aam
ss
ficomps
lods
loop
loop
call
pop
rdpmc
cmp
aam
loope
inc
lcall
mov
adc
mov
pop
in
inc
or
imul
push
cmpb
cmp
adc
sub
adc
lret
sub
mov
lods
mov
xchg
adc
mov
cmp
nop
aad
imul
lret
push
jo
adc
lahf
lret
mov
call
fs
cs
cli
enter
loop
pusha
or
push
xchg
dec
data16
ret
daa
dec
sbb
mov
pop
or
mov
fdivs
mov
mov
xor
sbb
mov
inc
out
jnp
sbb
imul
lods
mov
cmpsb
jl
ds
inc
jl
imul
jg
mov
pop
lods
mov
aas
jne
ret
sahf
adc
outsl
frstor
cld
gs
inc
mov
enter
xchg
push
or
pop
pusha
popf
xor
bound
or
ret
shrb
pop
xchg
or
les
dec
aas
add
push
loopne
jge
mov
sbb
xchg
mov
loop
jl
push
mov
mov
inc
stc
iret
ja
mov
jle
stos
sarb
mov
das
cmp
dec
pop
inc
push
mov
mov
loop
mov
hlt
pushf
sbb
mov
jne
lgs
jns
xchg
daa
popa
into
insl
subb
push
add
add
aad
mov
ss
jmp
xchg
adc
addb
mov
mov
fwait
cmpsb
jns
clc
inc
sub
and
or
or
rclb
push
shlb
push
cmc
outsb
mov
mov
sub
das
mov
mov
nop
sbb
iret
xchg
jb
aad
and
int
mov
jmp
jno
add
adc
jb
pusha
push
and
lahf
fs
test
aad
jo
repnz
fadds
pop
int
fwait
xor
cmp
ret
jmp
xchg
jae
cmp
daa
jmp
jecxz
mov
sub
xchg
fcomi
fsubrs
push
and
mov
add
test
fstp
push
add
in
push
mov
xor
adc
xchg
xchg
dec
in
pop
mov
insb
sbb
cmpb
inc
cs
mov
fsubl
ror
pusha
inc
lds
or
in
stc
incb
xchg
aam
cmp
insl
xlat
fs
rcll
nop
xchg
inc
jmp
imul
mov
cmp
mov
mov
ss
jmp
inc
inc
mov
xor
lea
adc
and
cmp
jp
jo
jo
add
xchg
mov
out
fcmovne
movsl
inc
insl
mov
notb
ficomps
imul
loop
movsb
and
cmc
in
mov
push
dec
test
imul
dec
jmp
mov
ljmp
dec
clc
mov
je
adcb
inc
or
and
das
std
adc
mov
mov
mov
in
sub
lds
ss
lcall
push
mov
jns
cmpsl
jae
data16
pop
sub
or
popa
lock
sbb
add
in
mov
ss
fnop
fwait
xor
repz
adc
fwait
xor
test
pop
jo
mov
mov
addr16
sti
xchg
cmp
mov
or
push
pop
shlb
repz
mov
and
shl
pop
dec
cltd
aas
int
pop
stos
lods
push
sbb
call
cs
mov
push
sub
test
shr
test
push
movsl
push
adcl
add
je
jne
mov
fbld
dec
pop
lcall
nop
popf
movsb
outsb
rcrl
daa
add
xor
je
and
lea
clc
push
call
sbb
dec
cmpsb
sub
xlat
xor
push
push
shl
xor
addb
push
jae
mov
fcompl
adc
mov
push
incb
in
lret
inc
push
mov
xor
andl
pop
test
sbbl
pop
or
inc
xchg
sbb
jl
sti
imul
dec
ljmp
jo
repnz
sarl
dec
daa
mov
out
push
mov
aas
fwait
push
add
fdivs
pop
or
push
or
mov
idivl
adcl
xor
jae
into
cmp
jle
imul
mov
push
jmp
pop
pop
dec
xorl
leave
rolb
out
and
lahf
jg
mov
dec
mov
ficomps
jmp
mov
ret
inc
lock
xchg
and
sbb
sbb
imul
lea
leave
outsl
and
mov
mov
dec
inc
mov
mov
xorl
adc
call
adc
push
out
add
stc
in
jae
mov
clc
xchg
xor
shl
stos
push
mov
int3
pop
cmp
loop
sub
loopne
jb
not
decb
jmp
mov
fisubl
test
jb
fsubrp
fdivrl
jae
cmp
pop
movsl
pop
dec
pop
icebp
shlb
pop
xchg
mov
out
mov
sti
rcl
test
stos
repz
out
dec
loop
gs
lret
or
jae
call
call
sub
stos
cmc
shll
mul
add
test
insl
jae
pop
sub
jbe
fisubl
fwait
js
xchg
mov
fdivrs
add
inc
pop
sub
repz
add
js
adc
adc
mov
aad
push
das
dec
jg
mov
icebp
and
pop
stc
pop
les
imull
jmp
xor
sub
mov
adc
inc
or
push
push
and
push
mov
jmp
pop
adc
add
rol
mov
push
ja
mov
cld
pop
mov
push
cltd
mov
int
decb
adc
push
mov
dec
lds
movsb
sub
ljmp
jns
and
out
outsb
clc
adc
mov
icebp
cmpl
lods
jo
and
adc
ret
test
mov
mov
cmp
aaa
sub
std
mov
pop
out
mov
adc
out
mov
mov
dec
cmp
push
sbb
push
rcr
pop
adc
add
andl
nop
pop
dec
mov
scas
in
and
mull
xchg
out
pushf
inc
cmp
out
insb
or
dec
in
ficompl
mov
cmp
cmp
cltd
cmpsb
lret
cwtl
inc
dec
stc
push
fs
sub
mov
pop
pop
jno
or
lret
mov
push
inc
repz
xchg
repz
mov
adc
daa
out
inc
scas
aas
jecxz
inc
test
lods
repnz
lods
cmp
xchg
je
adc
fimuls
add
add
jmp
std
test
xchg
xchg
out
inc
sar
fcomi
adc
jbe
or
cmp
gs
ds
add
and
test
push
push
sub
mul
cmp
jl
fdivrl
push
ret
push
loop
rcll
testb
out
pop
lret
jp
sahf
mov
sbb
mov
jno
popa
cmp
leave
or
inc
dec
and
rcrb
repnz
ss
lea
dec
popa
or
cmp
lds
mov
xchg
pop
mov
and
cmc
mov
lret
or
mov
add
repz
ds
pop
test
and
pop
mov
les
inc
cmp
orl
dec
clts
out
sub
frstor
gs
clc
jb
jmp
scas
or
subl
dec
or
inc
cmpl
cmc
sbb
push
pop
in
cmp
jl
mov
or
xor
sahf
mov
sbb
call
into
out
push
into
scas
data16
popf
fbstp
dec
and
or
jp
test
bnd
test
out
andl
sbb
enter
repz
add
pop
add
sbb
je
xor
dec
dec
and
jb
xchg
sbb
subb
test
mov
inc
sub
arpl
mov
nop
push
iret
add
ds
add
pop
roll
rcll
or
adc
inc
loop
cmp
dec
or
add
mov
shll
ljmp
adc
pop
aad
inc
pop
mov
dec
jle
push
xor
jne
mov
fmulp
cwtl
sub
stos
xchg
mov
mov
dec
push
inc
inc
fsubs
mov
imul
scas
dec
repz
dec
aas
and
adc
jmp
repz
lcall
std
dec
fdivrs
mov
cmc
psadbw
push
dec
fmull
loope
or
jbe
push
push
lds
rol
add
lahf
sahf
push
js
jle
pusha
loop
push
fmul
fs
push
lods
cmp
inc
mov
mov
mov
or
xlat
cmpsb
add
xor
cmp
idivb
pushf
repz
cwtl
fsubl
aam
in
ja
mov
and
cld
jno
xor
and
clc
out
aaa
pop
push
lret
out
fdivs
mov
and
jp
mov
xchg
mov
stc
repnz
mov
js
cmpb
fstpl
sbb
lcall
mov
add
cld
sarb
pop
cmp
shrl
arpl
add
jae
xchg
inc
into
jecxz
dec
fldcw
das
lahf
pop
cmp
pop
aad
mov
shrb
enter
xor
and
sbb
pop
lcall
inc
push
and
xchg
mov
mov
icebp
stc
mov
xorb
pop
inc
push
enter
fistpl
pusha
inc
call
lock
inc
add
fistpll
inc
outsl
push
call
ret
insl
jno
xchg
ljmp
out
and
or
test
scas
jne
cmpsl
push
negb
je
sti
int3
ror
std
popf
fs
lds
cmp
mov
inc
mov
shll
mov
repnz
ret
push
mov
stos
lds
shlb
sub
es
lods
mov
fmuls
dec
cmp
stos
push
add
mov
xor
adc
mov
push
add
sub
mov
jmp
fs
inc
pusha
mov
and
mov
jecxz
bound
icebp
jmp
clc
filds
cmp
aad
sar
mov
xchg
or
cmp
xlat
pmulhuw
xor
lds
mov
pop
inc
lcall
and
lret
dec
bound
cmpsl
xor
and
mov
outsl
pushf
add
jmp
or
adc
jmp
cmpsl
mov
dec
pop
push
or
aas
out
insl
mov
mov
push
xchg
insl
dec
mov
test
inc
popf
pushf
add
xorl
int3
xchg
sbb
lret
mov
cmp
dec
inc
mov
jecxz
arpl
mov
or
sbb
imul
loope
mov
aaa
or
and
inc
jae
cmp
int3
leave
xor
push
cmp
stc
call
cmp
add
loopne
add
cmc
mov
shrb
mov
sbb
out
jb
int3
cli
jnp
arpl
adcb
outsl
lock
dec
scas
jae
mov
out
cltd
bound
orb
andb
and
aaa
mov
pop
repz
fbld
dec
fstl
mov
js
adc
push
fwait
sub
rorl
pop
cmpb
scas
fcoml
xchg
insb
push
js
je
or
lcall
lods
scas
mov
push
lret
scas
mov
int
or
sub
cmpl
or
sub
insb
xchg
push
mov
test
std
adc
js
push
cmp
jge
or
jg
jg
sarb
stos
and
mov
fcmovbe
sub
cmc
mov
ret
inc
mov
mov
mov
data16
jecxz
loopne
xchg
sarb
gs
mov
pop
sbb
loop
mov
pop
and
repz
daa
sbb
sbb
push
lods
and
push
jmp
rcrb
lret
lret
jne
lods
xor
inc
clc
adc
loopne
push
addl
pop
xchg
mov
or
push
test
inc
testl
jno
lea
or
rcll
out
arpl
movl
jmp
xor
and
push
inc
xor
cmc
mov
add
ds
dec
repnz
pop
push
jle
jl
arpl
push
fidivl
dec
sub
leave
push
enter
jno
out
outsl
add
mov
sub
mov
lods
and
jbe
rcrb
mov
lock
mov
outsl
pop
cmp
dec
mov
jg
ss
sub
mov
ljmp
sbb
mov
js
mov
inc
ret
jecxz
sub
mov
jo
dec
mov
loop
sbb
mov
inc
jnp
push
aad
mov
imul
je
jns
or
mov
pop
lcall
mov
jae
add
clc
outsb
adc
push
pop
sbb
es
je
jnp
sbbb
pop
ljmp
sbb
and
jne
test
jmp
call
dec
mov
out
lret
add
add
in
jae
cwtl
mov
jne
dec
mov
retw
dec
orb
add
push
leave
in
pop
inc
popa
inc
inc
add
rorl
sbb
and
xchg
push
inc
and
inc
jmp
pop
fdivl
or
xchg
cmpsl
mov
je
jns
rcll
jecxz
out
push
fstpl
icebp
add
inc
popf
ret
xchg
outsb
into
divl
push
mov
int
and
lods
xor
xchg
outsb
xchg
xlat
jo
bound
aas
jno
test
mov
push
je
mov
add
outsb
pushf
push
pop
pop
push
jp
aad
cmp
xchg
inc
xchg
out
fst
sub
hlt
push
mov
inc
add
mov
cmp
fs
inc
addr16
inc
aad
leave
cmc
lods
popa
dec
gs
ret
test
push
lahf
gs
jbe
pop
insb
lods
ss
and
repnz
dec
fsub
dec
mov
fdivrs
xor
lret
imul
repz
ds
stos
clc
xor
mov
mov
inc
movsb
inc
adc
gs
lds
dec
sbb
shll
or
inc
mov
addb
mull
fsubs
pop
jle
add
lcall
and
cmp
jle
cmp
inc
mov
push
dec
dec
mov
in
es
pop
lret
cmp
fsubl
mov
and
fbstp
shll
imul
shrl
fsubl
aas
and
sub
add
sbb
lcall
xor
fmull
lcall
lds
enter
in
hlt
jbe
mov
and
sub
adc
sub
mov
test
outsl
xchg
xchg
push
pop
cwtl
push
cmp
and
xchg
mov
scas
nop
rcrb
sar
and
sub
mov
testb
mov
or
idivb
mov
shr
lahf
sahf
sbb
mov
in
sub
std
insl
leave
add
fldenv
das
cmp
ret
mov
dec
insl
popa
in
mov
mov
mov
pushf
cmp
mov
scas
cmpsb
movsb
adc
fbld
out
in
lret
es
insb
xadd
push
and
inc
add
sub
xchg
test
sarl
cmc
add
cmp
add
sbb
sub
xchg
aam
movsb
shll
mov
cmpsl
imul
int
sti
sub
push
sti
outsl
call
jbe
dec
pop
lahf
mov
int3
push
pop
pusha
sti
lret
repnz
scas
outsl
cmp
push
insl
pop
outsb
sub
and
sbb
dec
mov
shrl
mov
sahf
mov
xor
pop
mov
rclb
imul
out
lahf
inc
add
mov
movsb
add
xchg
push
int
repz
inc
xor
inc
faddl
inc
fistpl
inc
inc
pop
xchg
jno
cwtl
adc
and
mov
dec
stos
sahf
imul
lcall
scas
push
sub
inc
xchg
mov
pop
adc
adc
js
test
and
xchg
pop
rolb
mov
inc
xor
cmp
lret
int3
add
lods
daa
jbe
cmpb
stos
xor
data16
adc
add
aas
out
iret
push
pop
mov
repnz
sub
add
mov
or
or
inc
subl
add
out
push
outsl
outsl
cmc
and
hlt
jnp
xchg
cmp
sub
or
dec
mov
xor
dec
add
and
negb
cs
or
push
xchg
iret
jmp
or
ss
arpl
xor
fcomp
in
or
jmp
ljmp
sub
ja
lock
jl
jae
les
ret
mov
push
stos
adc
and
cs
sbb
mov
or
mov
dec
aaa
fwait
stc
testl
cmp
adc
jbe
fdivrl
mov
inc
cmc
hlt
insl
pushf
add
out
jne
es
out
insl
and
and
out
popf
add
xchg
push
push
shl
xchg
iret
js
mov
inc
ss
jb
enter
mov
mov
inc
repnz
stc
jle
dec
sub
pop
insb
shrl
loope
jecxz
or
push
faddl
xor
mov
sbb
loope
test
dec
fcoml
add
aad
pop
mov
cs
arpl
pop
into
inc
xchg
into
or
cli
and
loopne
stc
ss
fnsave
out
or
movl
pop
popf
inc
flds
stc
les
or
mov
les
cld
and
adc
mov
lea
xchg
decb
push
push
pop
sbb
xor
ljmp
jmp
xchg
mov
int
gs
out
mov
sbb
pushf
push
inc
imull
push
lret
into
pop
lret
cmp
pop
scas
sbb
adc
insb
sub
inc
push
xchg
loop
inc
ret
jecxz
int3
adc
mov
cltd
dec
data16
mov
push
ret
jae
jmp
cmpl
fwait
mov
sub
leave
push
aad
aaa
enter
xchg
loope
jl
mov
jno
out
mov
pop
xchg
in
cmpsb
mov
adc
hlt
aad
movsb
mov
aam
mov
push
sbb
mov
imul
inc
jmp
repz
mov
arpl
ret
aad
mov
stos
pop
pop
shrb
imul
pop
lock
scas
int3
outsb
and
push
xchg
sub
out
sub
mov
add
pop
fsts
call
out
push
dec
loopne
xchg
sar
bound
pop
jo
sub
mov
out
shl
xor
pop
shl
daa
icebp
sbb
xchg
ljmp
mov
stc
cs
jno
and
movsb
push
sub
aad
mov
ret
jl
mov
repz
lcall
mov
fiaddl
lock
dec
ret
or
or
cs
push
ss
in
or
in
gs
iret
xchg
jp
iret
loope
lahf
out
test
and
imul
sbbb
adc
inc
xor
arpl
mov
fisubl
cmp
cld
loope
push
push
mov
into
in
les
push
and
pop
das
push
test
rorb
sahf
cli
ret
add
cli
jae
mov
sbb
mov
pop
pushf
stos
jno
rdtsc
add
test
movsl
outsl
pop
enter
sub
int3
mov
testb
sub
or
out
push
add
cli
ret
and
pop
sub
jb
sub
idivl
add
test
enter
stos
daa
sub
js
test
cli
xchg
push
int
pop
addl
mov
fstpl
or
out
push
push
pop
sbb
sub
jns
inc
dec
adc
sbb
in
pop
push
cmp
sti
rcrb
adc
test
cmpsl
or
sub
xlat
fucomp
jo
push
xchg
sbbb
stos
sub
rcr
insb
pop
clc
pop
repnz
pop
mov
adc
shrb
int
pmulhw
js
imul
xchg
cmpsl
hlt
sub
push
js
lret
into
and
fdivl
fstpt
cli
adc
push
inc
and
popf
push
cmp
mov
popa
pop
mov
jecxz
negb
in
sbb
inc
push
mov
shl
push
or
in
daa
xchg
jle
scas
es
xchg
clc
aas
rcr
mov
ret
pop
clc
dec
clc
es
pop
ret
inc
pop
add
cmovae
incl
stos
jb
jae
jae
push
stos
xchg
not
sbb
pop
movsb
cmp
mov
addb
add
les
add
adc
and
sbb
push
in
and
pop
add
orb
mov
mov
xchg
dec
arpl
add
adc
push
cmpsb
push
cmp
in
lret
adc
jae
or
jno
lock
daa
test
hlt
pop
dec
sub
xchg
mov
sub
sbb
xchg
mov
jae
rcr
shll
pop
pop
mov
cmp
enter
jl
sub
dec
jne
dec
loope
pop
adc
lods
xchg
push
xchg
cs
into
cwtl
sbb
cmp
mov
cmpsl
jg
test
jns
call
out
jb
pop
addr16
in
aaa
push
pop
xchg
pop
cs
fcompl
pop
push
xor
cmp
inc
xchg
wbinvd
ss
lods
adc
mov
xchg
imul
jl
inc
mov
mov
cmp
pop
dec
pop
adc
push
adc
add
sbb
dec
mov
jbe
cmpsl
test
xchg
mov
inc
shl
cmp
mov
pop
add
inc
lods
lret
jnp
dec
pop
clc
pop
test
arpl
jle,pt
test
pusha
jb
and
out
insl
mov
in
cwtl
popa
in
sbb
inc
loopne
jp
fwait
loop
xchg
sub
xor
lret
push
cmp
fs
lea
cmp
adc
mov
sub
ljmp
pop
xor
or
mov
scas
mov
add
popf
incl
dec
sub
imul
repnz
lds
push
jb
lods
jge
cmp
jnp
pop
dec
pop
xlat
xchg
cld
movsb
cwtl
add
les
les
call
push
cld
mov
push
cmp
imul
ret
in
inc
mov
push
jl
inc
pop
cwtl
or
mov
or
pop
shll
ficompl
aas
mulb
xchg
cmpsb
std
dec
mov
dec
inc
jne,pn
mov
ljmp
pop
push
std
in
aaa
dec
cmpsl
enter
add
xchg
ljmp
xor
dec
sub
loop
and
mov
popa
sub
scas
mov
lds
cli
out
dec
pop
imulb
hlt
mov
inc
add
xor
lea
sub
push
xor
loopne
pop
mov
enter
outsb
xor
mov
xor
outsl
xchg
pop
pop
out
sbb
jp
imul
ja
mov
int3
mov
mov
pop
leave
push
adc
mov
adc
inc
xor
inc
dec
jne
xchg
add
adc
pop
sub
aas
jno
cmc
lcall
aad
sub
sub
xor
xchg
sbb
pop
icebp
sub
and
xchg
repnz
scas
or
repz
cmpsl
inc
stos
repnz
jecxz
cmp
push
sbb
movsb
and
dec
adc
lret
xchg
es
adc
push
rorb
dec
mov
pop
cwtl
fists
pop
pop
mov
jg
stc
cmpsb
loop
inc
aad
sub
add
mov
and
mov
les
jbe
cld
js
jge
cmp
movsl
xor
sahf
test
xchg
rcrl
fs
out
out
stc
ret
or
fdivrl
mov
fadds
rcrl
fs
je
nop
adc
add
mov
and
hlt
adc
hlt
mov
jno
mov
xchg
cli
mov
mov
div
adc
loop
in
or
cmpsb
in
cmc
xchg
jne
pop
adc
xor
aaa
lds
rcrb
mov
aad
sub
adc
insl
pusha
pusha
out
sub
xchg
inc
jo
push
fs
scas
in
adc
sub
inc
adcb
cmp
hlt
jmp
mov
push
add
iret
outsl
fwait
push
test
in
insl
out
iret
xor
subb
and
test
sub
inc
adc
in
jmp
idivb
adc
js
xchg
orb
mov
xchg
lock
mov
push
out
imul
fstl
cmpl
or
dec
out
sub
xchg
or
mov
add
push
movsb
lods
sbb
idivl
insl
negl
cmp
dec
mov
out
sub
jno
sbb
xor
leave
add
shl
test
or
xor
leave
push
jbe
jnp
inc
les
loop
xchg
je
cmpsb
cmp
mov
shl
push
xchg
lahf
mov
leave
ja
mov
in
xchg
fdivs
nop
shll
and
or
in
or
into
or
xor
mov
pop
jecxz
fcomip
or
xlat
ds
cmp
ds
mov
dec
sbb
call
insb
loop
xchg
inc
testb
aas
je
shr
cwtl
pop
push
imul
mov
in
pushf
and
in
jns
push
loopne
filds
xchg
mov
iret
fcmovb
jnp
hlt
pop
push
xchg
mov
push
lcall
mov
outsb
sahf
rcr
rcrl
and
push
adc
sti
daa
sbb
pop
dec
and
lahf
test
lret
in
roll
roll
pop
xchg
lds
fs
jne
pop
stc
loope
pop
add
ret
bound
inc
jl
fsts
rcr
fidivrl
cmp
mov
sbb
jnp
mov
mov
jg
cmp
xchg
mov
cmp
cmpsl
jo
lock
mov
in
mov
xchg
cli
mov
in
jp
mov
xchg
cwtl
mov
popa
jl
bound
dec
cld
out
mov
cmp
iret
xor
mov
lret
pop
cltd
out
xor
mov
adc
jae
add
aam
lahf
xchg
in
leave
mov
add
xchg
sbb
es
mov
push
cmpsb
sub
xchg
pop
dec
in
cld
lret
cmp
in
xchg
les
pusha
inc
fisubl
pop
push
inc
iret
sub
movsb
fdivrl
loopne
movsl
test
or
sahf
in
enter
les
mov
scas
sarl
or
rcll
addb
xchg
out
add
scas
sub
loopne
adc
push
jge
sarb
mov
aaa
sbb
xlat
sub
sub
out
sub
mov
pushf
cmp
sub
cmp
out
or
aam
out
pop
mov
fxch
stos
loope
or
and
push
push
into
adc
int3
dec
adc
pop
pop
lcall
jecxz
shrb
add
mov
fsubrs
test
push
cmc
pusha
inc
cmp
mov
ret
xchg
jno
je
test
jno
out
jo
fisubrs
pop
loop
test
or
mov
in
and
imul
or
add
shll
lahf
movsl
and
popl
mov
faddl
push
jno
xchg
hlt
mov
and
lods
out
shr
cmp
jge
js
std
stos
mov
lret
dec
les
and
movswl
cmp
sub
daa
add
sub
fisttpl
insl
pushf
pop
push
stos
aam
sar
xchg
shlb
aad
das
push
mov
daa
xor
jmp
mov
sbb
cmp
fnsave
mov
cli
fimull
mov
cmp
mov
xchg
fwait
repnz
mov
hlt
jnp
mov
mov
jo
jae
mov
push
aam
push
push
incb
sub
push
adc
fcoms
cmp
mov
dec
insl
mov
push
cwtl
lahf
or
bound
push
ret
mov
scas
aaa
scas
mov
movsl
in
sub
fs
mov
pop
loop
shl
mov
adc
jno
mov
sbb
cmpsl
repnz
jbe,pt
inc
mov
call
es
testb
pop
add
std
fsubp
jl
cmc
test
cli
and
rcrl
mov
cmp
and
dec
js
mov
lock
mov
clc
xchg
shl
add
xlat
xchg
xorl
xor
jo
pop
stos
mov
es
sahf
xor
cmc
xor
cmpsl
in
negl
pop
ljmp
loope
xchg
cs
std
xchg
push
and
mov
push
loop
test
cmp
andl
add
jno
mov
mov
mov
add
mov
sarl
sahf
ret
xchg
out
mov
js
movsb
inc
sbb
mov
mov
mov
mov
int
ret
xor
fwait
orl
ret
gs
sbb
cltd
mov
pop
popf
mov
pop
and
cs
cmp
lea
pop
pop
aaa
and
mov
inc
movb
movsl
imul
mov
xchg
xor
mov
pop
loop
loope
pop
daa
add
iret
cli
pop
xor
mov
mov
jecxz
stc
movsl
dec
push
nop
test
inc
clc
repz
js
adc
xchg
mov
jo
scas
arpl
ret
inc
clc
js
sub
or
sahf
push
popf
xchg
jecxz
mov
xor
mov
dec
fbld
mov
ret
fwait
ss
cmp
pop
pushf
and
cmp
pop
in
cltd
stos
shrb
pop
out
jg
movsb
movsb
push
mov
jle
pop
das
popf
sti
int3
jae
hlt
xor
or
mov
fcmovne
lahf
mov
sub
ret
add
jbe
inc
push
movb
ljmp
add
xchg
paddusb
loopne
out
mov
cmpsb
and
cmpb
imulb
mov
mov
jmp
cmp
call
cli
roll
mov
cli
shrb
adc
std
pop
push
orl
cwtl
add
lahf
inc
inc
ret
jl
pop
mov
jb
pop
icebp
movsl
xor
dec
ss
mov
imul
mov
jle
cwtl
rcrb
test
addr16
test
and
jmp
iret
shl
jle
push
mov
xchg
add
mov
jnp
stos
inc
in
scas
push
stos
push
xchg
pusha
out
adc
and
lods
in
jmp
stos
or
mov
pop
loope
jno
dec
sbb
filds
ss
subl
adc
sub
lahf
and
sbb
mov
sbb
mov
std
scas
jns
imul
subl
imul
sub
sub
out
pop
jo
push
xor
jb
orl
mov
push
cmpb
aaa
add
adc
insb
pop
inc
cltd
icebp
hlt
and
repz
dec
jmp
xor
aaa
push
pop
enter
push
mov
ljmp
or
jmp
mov
cli
sbb
ds
mov
or
out
jno
pop
in
pop
addl
inc
rclb
xchg
jb
aam
hlt
dec
sub
cmp
xor
cmpsb
jae
aas
gs
jp
out
sbb
jno
insl
and
adc
adc
dec
sub
lds
fsts
je
add
mov
nop
sbb
inc
mov
repz
fsts
movsb
mov
scas
pop
mov
loop
pop
fnstcw
mov
or
dec
es
push
stos
lock
fisubl
je
push
pop
and
nop
scas
add
movsb
popa
add
into
dec
mov
add
push
xchg
pop
fstpl
adc
and
xchg
adc
mov
cltd
sahf
sub
sbb
dec
jo
lock
test
and
pop
cmp
std
andl
xchg
sbb
mov
add
mov
jecxz
iret
sar
xor
push
in
mov
jno
adc
scas
data16
or
xchg
adc
ret
icebp
movlps
notb
movsl
pop
fidivrl
push
jno
sub
pusha
loopne
mov
mov
xchg
lods
movsb
es
int3
stos
push
fldl
sbb
test
js
pop
shlb
pusha
sub
fs
and
es
or
adc
sbb
inc
and
repz
xchg
mov
inc
mov
pcmpgtd
inc
push
mov
sahf
ret
xor
hlt
and
mov
loopne
or
int3
or
cmpsl
fistpll
pop
mov
or
push
xchg
cmpsl
pop
jns
xlat
fldcw
stos
push
jmp
cltd
jbe
xor
stos
jl
inc
dec
sbb
sub
rcl
xor
mov
and
scas
pushf
cmp
push
adc
or
push
test
es
mov
mov
in
ret
inc
aas
daa
test
outsb
mov
stos
mov
jne
dec
mov
data16
mov
dec
fisubrl
iret
outsl
setns
js
movsl
cmpsb
lock
or
sub
je
jbe
enter
pushf
xchg
mov
push
ja
stos
data16
inc
mov
mov
dec
xrelease
push
cmpsl
xor
insl
test
adc
push
das
movsl
sahf
out
xorl
mov
jmp
gs
inc
rorb
xchg
fistpll
push
loopne
in
sbbb
dec
fwait
cmpsb
cmp
shll
jb
xchg
cmc
push
pop
out
dec
gs
hlt
fs
sbb
add
or
es
cmp
pop
outsb
lods
sarb
add
popf
sub
shrl
push
addr16
dec
je
jmp
adc
movsl
jbe
pop
cmpsl
inc
iret
pusha
out
sbb
push
fbstp
clc
sbb
and
jl
mov
test
out
std
les
lret
ds
mov
lods
cmp
rcr
lahf
cwtl
xchg
shll
fildll
pop
iret
fidivl
cmp
push
ret
pushf
mov
jb
lahf
add
das
insl
cltd
push
sbb
cmp
jb
aas
mov
xor
stos
ljmp
pop
xchg
sti
mov
adc
pusha
and
push
xor
imul
mov
push
ret
pop
movsb
dec
pop
cmp
mov
lods
lock
inc
sbb
dec
aad
nop
repnz
sub
addl
pop
insl
xchg
insl
inc
repnz
mov
insb
cmp
sahf
or
inc
xchg
call
lahf
cwtl
and
movsb
or
cwtl
in
nop
push
and
cmp
cmpsl
dec
ret
mov
mov
add
push
xor
testl
inc
adc
mov
into
out
or
cmpsl
xchg
mov
sub
push
dec
mov
lahf
cmc
stos
pop
int3
lock
aas
scas
mov
outsl
xor
lcall
inc
nop
lret
outsl
sub
and
mov
jb
test
sahf
dec
vpsrlq
add
gs
lods
xlat
jb
adc
xchg
inc
addr16
stc
inc
sbb
fsub
jo
cmp
test
push
inc
or
xchg
mov
xchg
inc
sbb
insl
dec
addr16
jae
enter
aam
mov
push
pop
sbb
push
mov
in
ret
dec
shlb
adc
dec
lret
cmp
mov
push
lods
jb
mov
out
or
ret
pop
and
jle
push
fdivrs
cmc
xor
dec
mov
rcrb
js
sub
jae
jmp
fs
xorb
mov
ror
mov
lahf
push
sub
cmpb
lea
stc
jno
in
jmp
xchg
js
fdivs
cmpsl
add
sub
scas
pop
mov
add
mov
test
and
xlat
sbb
cli
push
sbbb
cmp
dec
shll
sbb
and
cmp
jns
lock
aad
mov
es
mov
loopne
outsb
sub
out
imul
aas
pop
shlb
mov
mov
xchg
test
inc
in
push
cmp
push
ds
or
into
das
pop
hlt
xchg
fsubrs
pop
int3
lahf
sbb
pop
addb
aas
push
mov
in
dec
in
push
sub
mov
add
in
mov
ds
jmp
cmc
shrl
xchg
js
xor
adcl
xchg
mov
jns
jge
dec
adc
pop
inc
jne
out
or
mov
fisttps
push
aaa
in
xlat
adc
ljmp
inc
roll
leave
cmpb
repnz
sub
push
mov
das
sbb
jg
imul
mov
cwtl
cmp
lahf
jbe
cmc
test
xchg
add
or
cs
mov
mov
dec
data16
daa
inc
dec
fists
movsl
ja
xchg
or
imul
out
inc
sub
or
pop
sub
sub
rcr
dec
jge
aas
adc
push
popf
pop
add
inc
enter
roll
movsb
pushf
xchg
inc
lds
push
fcompl
push
jmp
stos
cmp
mov
mov
subb
ss
ljmp
cwtl
imul
pop
mov
dec
push
cmp
loop
ds
rcrb
outsb
dec
mov
pushf
je
rol
push
fsts
imul
xorw
mov
adc
cmp
shld
jmp
fstpl
add
mov
xchg
jbe
bound
mov
bound
mov
test
xchg
inc
dec
imul
test
inc
aas
idivl
ficomps
sub
rcrl
mov
ljmp
add
dec
ret
faddl
mov
test
pop
out
dec
pop
inc
sbb
gs
inc
jns
mull
pop
enter
inc
pop
add
aaa
test
fisubrl
add
jmp
mov
jo
xlat
add
ret
test
enter
inc
xchg
pop
dec
andb
lods
divb
mov
inc
pop
mov
xor
aaa
xchg
pop
aaa
in
cli
cs
sub
dec
mov
add
add
inc
int
dec
mov
xor
or
in
jns
movsb
mov
in
cmp
hlt
inc
loopne
lahf
repz
mov
shrb
and
neg
pop
jle
popf
fs
add
in
movsl
push
adc
mov
xchg
sbb
add
jg
cltd
push
subl
sub
mulb
sbb
shlb
cltd
ja
inc
mov
push
pusha
andl
xchg
pop
pop
shll
lahf
sbb
pop
in
fiadds
xchg
jl
stos
fwait
addr16
pop
adc
sti
decl
jo
jns
gs
loop
xchg
scas
sbb
std
int
loope
je
mov
es
xchg
or
xchg
daa
je
inc
dec
inc
call
test
sub
cmp
lds
or
movb
mov
add
pop
dec
and
xor
jl
shlb
popf
cmp
mov
push
push
jne
mov
mov
icebp
sarb
sbbl
adc
mov
ret
enter
data16
sbb
outsb
cld
push
imul
je
mov
xchg
cmp
out
mov
pop
popl
pop
jl
pop
jmp
out
lods
xor
in
dec
jp
and
fstps
and
repnz
test
pop
lds
fdivr
and
aad
aad
scas
cmp
mov
dec
pop
mov
mov
mov
mov
fwait
es
dec
add
or
mov
mov
stc
xor
cmc
pop
mov
jae
in
les
hlt
out
cmpsl
jbe
pop
ret
fidivs
jecxz
mov
cli
xor
es
mov
test
sub
pop
mov
push
fwait
xchg
dec
sub
int3
pushf
push
test
scas
dec
xchg
sub
dec
pop
xor
add
jge
xor
stc
xchg
push
mov
stos
or
mov
rcrb
push
push
insb
xor
pop
mov
aam
jp,pn
lea
dec
in
sbb
ficoms
sub
or
lods
mov
pop
sbb
in
mov
jge
mov
sar
out
arpl
outsb
test
jae
xor
mov
leave
movsb
mov
and
jnp
mov
xchg
andb
pop
ljmp
lea
insl
dec
or
out
cmp
in
sbb
gs
and
mov
lods
pop
jbe
mov
or
jmp
push
stc
outsb
fwait
or
dec
sti
movsb
fsubl
cmp
pop
pop
scas
cmpsb
mov
jne
popf
push
mov
stos
inc
loopne
xor
popf
add
mov
or
xorb
testb
dec
ds
adc
jo
inc
hlt
enter
jl
lods
js
xor
push
or
fstpl
cli
sbb
mov
jge
ds
clc
cld
or
in
push
in
in
pushf
mov
out
sbb
xor
fcmovbe
pop
enter
add
jecxz
dec
out
mov
or
mov
outsl
inc
and
inc
inc
push
outsb
jmp
pusha
leave
mov
out
jae
mov
adc
cmp
fnsave
pop
or
lret
sub
dec
test
fisubs
jbe
out
jbe
xchg
incl
je
sub
or
pop
cmpsl
imul
in
or
add
int
inc
mov
push
in
push
loopne
pop
mov
sbb
pop
fisttpl
pop
shll
outsl
mov
push
dec
push
mov
in
jae
ret
and
or
daa
imul
push
mov
push
mov
in
lods
fmuls
cmpb
cmp
mov
popa
in
mov
nop
js
out
pop
pop
test
mov
jmp
inc
cmp
daa
es
xorl
jle,pt
dec
ds
lret
enter
ss
dec
popf
inc
adc
icebp
sub
mov
add
mov
in
dec
mov
in
mov
sti
testb
jmp
mov
sub
adcl
adc
xchg
jb
add
dec
addl
test
mov
jle
sub
inc
push
dec
inc
mov
push
sbb
popa
sbb
jbe
lahf
lea
fwait
push
js
adc
test
mov
inc
cltd
push
jmp
div
xlat
add
and
cltd
mov
je
ds
test
bound
mov
push
in
icebp
xchg
push
sahf
pop
fcom
xor
lret
pop
sub
sub
outsl
ret
push
jp
sbb
cmc
xor
int3
std
mov
stos
mov
jp
cmpsb
test
xor
cmp
stos
mov
rolb
pushf
lret
mov
cmp
mov
push
mov
inc
pop
push
out
popf
adc
sub
mov
add
inc
std
push
cltd
xor
mov
mov
inc
loop
sub
or
je
adc
pusha
xor
xchg
nop
out
xchg
pushf
hlt
ds
cmpsb
pop
and
add
cmp
ds
dec
cwtl
pop
sahf
dec
mov
inc
dec
insl
pop
mov
jno
test
push
in
pop
mov
and
cmp
xchg
movsb
rcrb
negl
jge
adc
mov
ljmp
in
add
sub
mulb
or
jae
shll
dec
jnp
fsubr
lcall
xchg
pop
cmpsl
out
push
lds
adc
dec
adc
fisubl
xor
adc
xor
out
add
push
mov
out
repnz
xchg
mov
pushf
icebp
addl
xlat
popf
stc
loopne
sti
fistps
shlb
arpl
rcll
or
shl
xchg
mov
test
loopne
das
inc
mov
iret
sub
jb
pop
fdivl
pushf
xlat
fcmovne
stc
ljmp
sahf
mov
push
fstps
jmp
adc
sarl
in
and
dec
inc
int3
dec
fcoms
test
xor
pop
push
xchg
popa
das
jmp
lret
push
fwait
lret
cwtl
dec
cmpsl
std
dec
fucomp
rcrb
xchg
add
dec
loope
jg
cmp
cwtl
jbe
xor
pop
xor
loopne
fcomi
sbb
xor
out
fldt
gs
xor
imul
mov
fsubr
movsl
rol
neg
add
xchg
jae
or
inc
adcl
and
mov
decl
aam
or
or
jnp
add
push
les
dec
les
add
push
pop
add
jecxz
dec
lahf
cmp
and
test
sbb
adc
nop
stos
dec
xchg
or
jge
mov
loop
jo
sbb
pop
push
lahf
les
mov
adc
cwtl
testb
test
hlt
cmc
out
or
adc
mov
sub
or
dec
pop
cmpsl
and
out
mov
xor
dec
cltd
jb
out
push
lock
xor
repz
and
jmp
loopne
mov
repz
mov
add
das
dec
icebp
jb
in
fcom
sahf
pusha
popa
add
inc
ret
sbb
sbb
dec
inc
mov
add
inc
lahf
inc
lods
inc
xchg
sbb
and
jmp
cmpsl
mov
movsl
xchg
hlt
xor
cmp
movsb
mov
lcall
jl
sub
ds
jmp
fs
mov
sbb
xor
outsb
or
adc
popf
and
cmp
stc
or
jle
lret
arpl
in
into
out
add
jmp
subb
fs
int3
lods
pop
xchg
pop
fs
xchg
jnp
fnstsw
or
in
lods
rol
aas
mov
push
jg
arpl
stos
mov
mov
setnp
mov
fistl
and
mov
cld
arpl
jle
mov
dec
xor
and
sub
repnz
imul
fdivl
inc
test
ret
divb
insl
pop
sti
js
mov
cmp
fs
xor
adc
pushf
pop
push
dec
shl
cmp
or
cmpsl
int
aas
jge
fcoms
and
push
mov
out
dec
inc
add
ret
mov
xchg
jns
push
outsl
push
aas
or
gs
ljmp
adc
imul
xlat
jg
jl,pn
ja
inc
xor
adc
mov
xchg
push
pop
in
je
lret
and
icebp
cmp
pop
std
mov
cs
or
push
in
sbb
jo
aad
cmp
dec
pop
and
leave
add
push
add
push
mov
jo
in
sub
or
sub
imul
fwait
xor
mov
push
cs
jmp
enter
cs
idivb
fisubrl
xchg
insl
call
mov
and
sbb
shl
dec
daa
aad
cltd
fsubrl
std
inc
test
cmp
repz
ja
add
sub
xchg
dec
sbb
std
sub
xor
sub
or
adcb
or
ret
es
out
xor
aad
out
outsl
pop
sub
sbb
rclb
mov
movsb
or
push
inc
movsb
pop
mov
test
cs
sahf
loop
inc
arpl
dec
or
or
movsl
jo
push
push
push
mov
or
xchg
stos
and
pop
stos
or
jg
cltd
sub
xor
mov
aam
sub
jns
fimuls
js
inc
aas
mov
dec
inc
and
rclb
scas
and
or
neg
out
subb
scas
push
mov
out
add
push
cmp
pop
pop
jno
push
repz
push
mov
negl
jae
or
nop
outsl
xor
mov
stc
pop
sub
jno
cli
rcrb
jo
jmp
mov
push
pop
jae
movsl
or
mov
imul
icebp
rorb
nop
aas
push
subl
or
sub
jae
xchg
push
push
add
mov
out
pop
push
incl
lahf
push
loop
ret
cmp
sarb
jmp
mov
mov
lahf
mov
fs
rcrl
add
mov
mov
sbb
sub
pushf
ja
testl
ljmp
push
inc
pop
sbb
imulb
test
cmp
inc
and
push
bound
daa
lods
pushf
out
out
les
fisttps
cwtl
fists
lea
lock
cltd
and
sub
inc
stc
pmaddwd
gs
mov
lods
lret
outsb
dec
inc
push
out
add
outsl
xchg
pusha
jge
imull
repnz
into
or
pop
mov
inc
gs
outsb
cwtl
popa
inc
idivl
pop
mov
lret
mov
insb
xchg
jecxz
or
mov
push
fnop
mov
lock
sahf
das
xchg
cmp
xor
xor
jmp
cmc
adc
and
fucomi
aad
in
stc
out
jge
outsb
mov
jle
test
jp
ljmp
ret
sbb
push
and
or
add
xorl
shlb
lods
cmp
fldl
jo
and
repnz
out
fnstenv
mov
jecxz
outsl
push
or
shlb
xchg
cli
test
rcrl
xor
dec
out
mov
push
in
mov
jnp
jo
fwait
dec
dec
push
fsubrl
and
push
sub
adc
jl
das
push
adc
aaa
and
test
mov
dec
adcb
cli
adc
push
or
movsb
cltd
ljmp
inc
cmpsl
cltd
mov
mov
jne
dec
out
inc
mov
adc
jmp
and
mov
jb
mov
out
pop
fsubrl
sahf
push
xchg
test
sbb
cmp
popa
jecxz
and
aad
loopne
in
out
hlt
aam
arpl
xor
stos
sbb
pop
int
add
mov
idivb
push
mov
jno
jbe
sub
sbbl
test
inc
mov
mov
pop
loopne
cmp
add
repz
sbb
adc
in
xor
cmp
repz
cs
mov
mov
popf
add
add
int3
test
stos
jmp
or
stc
xor
sbb
mov
sbb
mov
push
outsl
jmp
stos
mov
pushl
movsl
jl
adc
push
sarb
pop
or
movsl
or
sub
pusha
test
iret
mov
inc
xchg
icebp
mov
xor
popf
call
sub
mov
call
inc
and
mov
imul
mov
mov
and
ret
adc
mov
adc
jecxz
lahf
in
pop
cmp
xchg
fisttpl
inc
add
test
and
jns
dec
pop
sbbl
inc
jge
push
mov
int3
out
mov
addb
imul
cmp
loopne
sar
push
enter
cmp
inc
mov
cmp
aaa
insb
adc
inc
adc
push
jno
movsl
dec
outsb
sti
sub
mov
mov
cmp
shr
pop
add
mov
add
mov
cmp
sbb
ds
mov
push
pop
push
repz
dec
js
in
in
aad
jecxz
in
xor
mov
cld
lds
clc
jae
xor
inc
int
mov
mov
xchg
pop
mov
and
mov
sarb
daa
sti
xor
and
sub
sub
andl
push
inc
xor
int3
fidivs
mov
aas
dec
xlat
mov
ljmp
xchg
scas
jge
and
out
rolb
in
insl
mov
cmp
daa
mov
and
push
add
mov
orl
cmp
sti
xchg
mov
mov
sbb
das
ljmp
sarl
cmpsb
mull
lret
and
inc
sbb
out
ret
pop
add
xchg
xchg
sti
lods
popa
sbb
fsubl
sarl
js
andb
call
mov
movl
pusha
je
fcom
mov
and
jle
pop
cmpsl
shll
dec
je
loop
xor
cltd
scas
out
jecxz
js
xor
test
add
dec
sub
ret
mov
lds
std
jnp
or
aas
scas
loope
mov
shrb
and
subb
cmp
sbb
fimuls
pop
mov
mov
cmp
gs
mov
test
aas
xor
and
rolb
pop
jge
xor
std
pop
rcrl
sub
pop
xor
stc
adc
js
add
sub
fisttpll
aaa
xor
sahf
shlb
test
js
adc
mov
adc
ja
popf
xor
test
push
mov
pop
fmuls
sub
or
insb
pusha
sahf
add
in
pop
out
filds
pop
clc
fidivrl
scas
adc
aam
mov
or
repnz
cmp
test
lret
xor
cmc
insl
sahf
ja
cmp
or
rcrl
mov
sbb
xorb
xchg
dec
or
adc
pop
xor
jo,pt
cmp
js
jecxz
cmp
test
sub
add
gs
rcl
pop
pop
xlat
push
pop
ja
jmp
cli
inc
test
out
clc
rcll
sub
sub
push
in
jmp
sub
orb
adc
ds
jae
push
mov
into
stos
frstor
push
xor
lods
sub
shlw
mov
mov
imul
adc
jg
add
int
dec
addr16
sti
cmp
addr16
push
mov
pop
fwait
cmp
aam
lods
mov
stc
in
adc
inc
sarb
sbb
lret
stc
or
lock
pop
jg
and
jns
bound
sub
pop
mov
or
loopne
xchg
leave
pop
fisttpll
mov
nop
dec
pop
lods
sub
jg
sbb
popa
iret
mov
daa
and
shll
sub
jge
mov
mov
sbb
jbe
jb
rorl
push
cmc
mov
and
lea
mov
xchg
adc
bound
xor
les
fisubrs
cltd
loope
inc
cmp
out
outsl
cmp
push
cltd
mov
lods
adc
inc
jp
std
rorb
mov
daa
enter
adc
in
jmp
js
addl
cmp
mov
jmp
jl
inc
cmp
mov
dec
cmp
adc
call
iret
push
adc
jne
jne
push
ds
dec
repz
xchg
loope
out
or
int
add
dec
mov
lods
insb
jo
dec
rcrl
xchg
jecxz
jmp
push
dec
idivb
rol
sub
cmp
pop
ret
or
icebp
push
fisttpll
sbb
sbbl
jp
push
lcall
loope
mov
fldcw
popa
pop
fstpl
push
lea
xor
ljmp
insl
js
jl
notl
dec
push
adc
movsl
jo
in
popf
sub
inc
int3
jp
xchg
scas
pop
xchg
pop
imul
imul
out
loopne
fbld
mov
scas
lods
call
lcall
pushf
sub
dec
fwait
pop
shll
out
std
sub
int3
insb
sub
cmp
mov
loop
sbb
sbb
ja
push
cmp
inc
hlt
and
dec
dec
push
jp
shl
sub
and
jge
scas
lret
sub
icebp
leave
sub
and
sub
iret
imul
mov
leave
ret
or
xchg
ret
andb
mov
rorl
mov
cmc
pop
or
dec
cwtl
aaa
call
jns
dec
push
call
cmp
das
and
jmp
pop
leave
out
mov
and
push
inc
loopne
and
sti
push
imul
stos
dec
cmc
pushf
cmp
or
push
cltd
lcall
mov
enter
dec
jmp
popfw
jmp
cwtl
testl
inc
pop
lret
and
sbb
inc
daa
mov
arpl
pop
dec
fcoms
sub
aad
test
mov
xor
out
inc
push
push
jl
push
dec
mov
mov
jg
fs
mov
arpl
outsb
fidivl
mov
aad
jbe
dec
push
add
jle
shll
xchg
add
cwtl
pop
in
lock
cltd
mov
or
not
je
js
push
xor
inc
out
bound
pop
ficompl
mov
sub
xchg
int
mov
dec
jb
pop
sbb
push
adc
jo
test
and
repz
js
dec
inc
psraw
ja
xchg
dec
inc
mov
outsb
jno
stc
mov
mov
subb
je
sub
xor
outsl
push
sbb
popf
fstpl
xchg
xchg
sub
stos
and
sub
cmp
inc
pop
js
adc
scas
sub
jl
mov
and
xchg
insl
insb
or
mov
mov
jmp
mov
cld
cld
movsl
dec
sub
shl
inc
ret
stos
negb
repz
mov
ja
mov
push
push
in
sbb
nop
ret
and
adc
push
lret
push
cmp
sti
jae
jmp
mov
or
stos
dec
xlat
out
push
repnz
mov
mov
sbb
cmpsb
pop
mov
cmp
xchg
dec
push
jb
dec
repz
dec
jg
lret
fmuls
and
fstpt
pop
sub
scas
cli
rorl
ss
mov
stos
mov
lcall
xchg
bound
or
mov
and
push
sbb
inc
adc
jle
je
jnp
add
dec
jns
jno
stos
mov
jecxz
xchg
push
jbe
dec
mov
mov
jmp
lret
fnsave
jne
or
rclb
int3
call
fs
push
lea
push
pop
xchg
stos
lods
fdivrp
pop
jno
xchg
adcl
and
lret
push
inc
rorl
jnp
lret
les
adc
sub
sti
jge
call
rclb
pop
jmp
fmuls
add
sub
movsl
or
pusha
cmp
sahf
add
out
leave
jmp
mov
in
mov
pop
iret
ficomps
repnz
in
leave
add
pushf
mov
lcall
movsl
jle
in
sbb
pushf
xor
adc
xchg
pop
shl
jl
adc
cmp
pusha
out
xor
pop
sbb
adc
cmp
cwtl
adc
jle
stos
cmp
out
add
pop
xlat
data16
adc
pop
inc
cltd
js
out
or
out
sahf
push
adc
sahf
xor
mov
pop
jo
loop
or
sub
shrb
jne
jg
mov
movsb
scas
push
stc
fimull
lret
loop
sub
mov
gs
arpl
enter
jmp
stos
mov
xchg
dec
int3
loop
sbb
out
das
push
repz
and
mov
jl
rclb
in
in
jge
mov
sub
or
pop
sti
and
pop
sar
int
jb
jge
insb
adc
cmp
xchg
stos
lret
cwtl
insb
loop
lret
es
rcll
repz
jecxz
aam
xor
mov
cmc
dec
cmpsl
add
ljmp
cld
std
push
fs
lods
xchg
sbb
imul
int3
test
out
mov
xor
clc
test
mov
or
xchg
adc
shr
scas
or
lahf
xor
test
inc
jne
xchg
ja
jns
lods
mov
insb
adc
push
pop
pushf
leave
dec
sti
pop
sbb
cmpsb
das
and
repnz
sub
and
jmp
sbb
repz
pop
cmp
loopne
mov
andb
mov
into
gs
adc
push
ljmp
ss
outsb
mov
push
addr16
push
pop
fcoms
fstpl
ret
dec
dec
push
inc
addr16
subl
push
out
mov
adc
mov
mov
ficoml
mov
pop
sbb
add
pop
dec
and
push
in
adc
shlb
xor
test
jge
push
les
mov
repnz
fstpl
inc
pop
mov
mov
stos
pushf
cwtl
adc
in
xchg
ja
dec
mov
or
sub
addr16
shrb
mov
fcmovb
pop
adc
stc
mov
mov
arpl
rcr
mov
mov
push
inc
or
cmp
or
ss
mov
inc
xchg
cmc
xor
aas
push
dec
cmp
push
push
mov
sarl
push
or
rol
and
das
ss
adc
xchg
aam
pusha
ljmp
mov
out
std
xchg
push
or
jnp
in
push
jbe
mov
and
adcb
push
mov
enter
xchg
jnp
ret
dec
lea
mov
das
lret
pop
dec
in
xchg
sbb
adc
lret
add
das
es
nop
es
inc
lret
mov
pushw
adc
shr
in
push
push
ficompl
dec
cli
int3
dec
jb
or
in
dec
mov
out
repnz
rorl
sub
or
pop
gs
or
cld
movsl
dec
lcall
xor
mov
andb
les
jae
cwtl
xchg
mov
mov
pop
repnz
jno
cmp
cmp
xor
push
adc
cli
movsb
xchg
int
pop
loope
std
mov
idiv
fdivl
out
push
mov
in
insb
cmp
imul
adc
sbb
lea
gs
je
outsb
in
mov
push
sti
or
pop
pop
gs
insl
cli
mov
sbb
xchg
shll
orl
xchg
mov
cmpsb
jmp
cmc
xor
sbb
and
cmpsl
dec
gs
sahf
repz
jb
mov
mov
popa
push
push
inc
xchg
sbb
icebp
push
or
sbb
popa
adc
jp
push
sub
in
or
mov
outsb
jecxz
mov
repnz
fcomps
pop
inc
xchg
cs
pop
or
add
xchg
cltd
addb
fstps
fldenv
loope
fldl
push
sub
rorb
mov
loope
mov
jmp
jl
es
std
xchg
cmpsb
cmc
sbb
add
dec
dec
inc
sub
lock
test
ss
mov
dec
adc
popf
roll
mov
jbe
scas
jo
pop
pop
idivb
jnp
fidivl
shlb
pop
inc
jne
add
push
mov
rcrb
cmpsb
push
das
movsl
adc
test
adc
addr16
push
mov
iret
sbb
ljmp
pop
test
scas
add
lahf
ret
inc
data16
test
je
je
leave
adc
loope
outsb
test
xor
imul
lret
xor
xlat
loope
scas
push
cmp
pop
jl
rcll
push
fsts
fistpll
inc
xchg
ret
sbb
mov
mov
lods
test
mov
adc
xchg
inc
loop
cmc
sub
mov
loop
ds
outsl
scas
adc
xor
xchg
gs
sbb
ret
fidivrl
inc
mov
lret
inc
hlt
jns
sub
inc
outsb
imul
out
add
inc
outsl
leave
fs
icebp
test
stc
cmc
pop
pop
loop
lods
fwait
sahf
popa
test
cli
sbb
or
test
mov
repz
add
clc
into
and
leave
push
fisttpll
add
addr16
and
xchg
in
adc
mov
in
mov
or
in
fbld
xor
std
mov
out
lods
jnp
pusha
imul
popf
or
cmp
shl
push
scas
xchg
into
inc
fisubl
dec
mov
int
dec
stos
push
or
adc
mov
mov
jmp
push
in
pushf
addb
leave
cmp
call
scas
mov
sub
mov
out
xor
jmp
popa
add
call
or
jge
aad
lret
sub
in
sub
xlat
jmp
mov
mov
mov
xor
adc
inc
pop
lock
arpl
add
mov
mov
push
and
lock
fisubrs
sti
test
push
xchg
xor
test
in
jg
sbb
ds
addr16
pop
lods
pop
popf
stc
xor
xor
inc
add
push
push
push
popa
jae
inc
mov
arpl
movsb
rcl
cmp
cmp
fs
cmp
pop
das
int
sahf
mov
rorb
fistpl
into
jp
jns
push
pop
lahf
inc
adc
pushf
or
aam
clc
jns
arpl
inc
in
into
mov
add
mov
test
xor
sti
test
sub
mov
fnstenv
test
stos
mov
push
sahf
mov
xchg
sbb
cmp
enter
call
ret
xchg
in
adc
arpl
mov
outsl
xor
sub
mov
push
nop
cwtl
inc
push
lock
pop
pusha
movsl
push
cmpsb
or
pmaddwd
ljmp
test
jg
jge
jmp
xor
push
mov
std
rcr
mov
and
mov
mov
mov
adc
mov
pop
jnp
cmpsb
pop
inc
adc
push
addr16
movsl
movsl
mov
cs
jnp,pn
push
gs
out
pushf
xor
push
dec
pop
push
pop
imul
mov
lds
pop
mov
andl
fstpt
dec
stos
jae
arpl
or
out
sub
mov
mov
sub
pop
add
sbb
mov
dec
jmp
ficompl
das
fs
test
inc
fwait
xchg
adc
mov
jbe
push
push
mov
into
pop
inc
mov
push
aad
mov
mov
mov
pushf
scas
ljmp
adc
mov
shrl
adcl
cmp
mov
mov
psrad
stc
pop
movsb
mov
arpl
bound
cwtl
mov
ret
gs
mov
fldt
mull
xchg
pop
scas
into
mov
inc
rcrl
inc
mov
adc
out
int
bound
sbb
sti
adc
pop
xor
hlt
les
testb
or
push
add
and
in
xchg
inc
or
xchg
pop
mov
push
mov
sti
xlat
jle
xchg
inc
mov
fildll
imul
bound
mov
in
leave
push
xchg
sbb
test
mov
leave
jbe
in
sbb
adc
mov
leave
sahf
lcall
push
dec
popf
ja
stos
pop
arpl
lea
stc
push
cmc
pop
fbstp
xchg
bound
lods
enter
cltd
test
ljmp
sbb
icebp
xchg
cld
mov
inc
sub
push
decb
cmp
jge
dec
xor
jns
sbb
enter
and
inc
adc
mov
push
loopne
jae
jp
mov
fs
push
cmp
je
daa
inc
cltd
dec
call
or
pop
ror
mov
aam
adc
mov
andl
push
mov
out
pop
ljmp
cltd
aas
pop
je
lret
mov
popa
repnz
ret
mov
adc
aad
bt
push
cmpsl
mov
stos
into
push
xorl
pop
jp
pop
xlat
sbb
mov
and
mov
cmp
mov
mov
insl
push
adc
jne,pn
push
js
push
cwtl
dec
lods
movsb
out
sbb
imul
push
mov
xorl
pusha
xchg
jnp
cmpl
or
cmp
push
or
push
aaa
lods
insl
pcmpgtw
aad
and
pop
xor
add
aam
lahf
pop
aad
jmp
jg
cwtl
cwtl
xor
arpl
xor
imul
cmp
pushf
test
addl
cmp
in
jl
push
inc
push
test
push
enter
xchg
pop
roll
xchg
or
mov
ret
dec
or
je
out
bound
sbb
pop
ret
inc
lock
pop
push
mov
xchg
dec
mov
mov
movsb
adc
xor
daa
add
push
lea
sub
mov
dec
mov
jbe
or
cs
xor
ffree
nop
xor
xchg
shr
divl
xchg
dec
add
dec
dec
mov
xchg
ds
insb
fdivs
es
and
dec
pop
push
fbstp
iret
mov
inc
ljmp
sub
add
jg
icebp
xor
xchg
mov
jns
test
test
pop
cmpsl
mov
push
xchg
or
xor
pop
imul
into
fmuls
xchg
aam
sub
jbe
clc
clc
inc
mov
int
dec
sub
dec
mov
xchg
sub
mov
sbb
clc
loopne
into
imul
mov
mov
and
sub
xchg
pop
add
test
loopne
mov
imul
adc
mov
pop
sbb
pop
jne
popf
outsb
xor
xchg
andb
insb
mov
mov
loopne
sub
sbb
sub
fnstenv
mov
adc
push
or
xor
xchg
xchg
push
shll
mov
aam
sub
xchg
or
cmp
aaa
clc
loope
int
push
in
aas
cmp
stos
inc
sarb
pop
enter
dec
inc
jge
fbld
mov
mov
lret
imul
fisubrs
out
arpl
popf
jmp
in
push
sub
jo
out
dec
jg
sarb
std
adc
sub
inc
dec
xchg
and
add
pop
cwtl
shlb
xchg
nop
movsl
fcoml
pop
test
or
pop
loope
call
lret
xchg
or
rcrb
sbb
mov
dec
inc
mov
and
or
bound
push
pop
aaa
ljmp
lea
cmp
stos
es
popa
cmp
fstl
in
ret
int3
test
or
aad
dec
dec
hlt
push
jnp
xchg
add
xchg
inc
subb
push
arpl
cmp
movsb
rclb
or
sti
movsb
or
aaa
jbe
andb
and
mov
mov
movsl
ja
add
add
aaa
adc
cmp
inc
cmpl
into
call
ljmp
mov
mov
sbb
pop
push
jge
pop
xchg
arpl
mov
add
cli
push
ljmp
jne
popa
push
jle,pn
and
pop
mov
addr16
mov
cs
mov
push
push
jo
rorl
jno
sub
fdivrl
into
mov
jg
push
outsl
test
cld
xchg
pop
or
pop
mov
sub
dec
dec
daa
mov
inc
pop
lahf
pop
push
jge
cmp
and
inc
cli
sti
xor
cmp
and
test
pop
inc
xor
inc
cmp
adcb
sbb
pop
movsl
add
cmpsb
inc
mov
cmp
xchg
adc
adc
xchg
fnsave
icebp
or
test
in
pushf
into
pop
pusha
and
xor
dec
fwait
xor
sahf
std
enter
je
sbb
lret
popf
adc
in
gs
dec
cld
test
jg
movl
and
mov
jp
out
mov
and
std
xchg
and
aaa
and
pop
aas
gs
inc
mov
cmp
test
int3
jge
andl
shll
sbb
or
cmp
inc
shlb
xchg
jg
jo
fimull
bound
and
aas
sbb
into
sbb
push
dec
inc
pop
push
dec
je
xor
hlt
cli
xchg
outsb
into
cld
mov
sbb
sar
out
jle
in
pop
xchg
mov
test
rol
shlb
gs
pop
subb
andl
int
lods
pop
inc
xor
ja
out
pusha
dec
adcb
mov
leave
pop
adc
mov
xor
push
scas
stos
push
jmp
adc
cli
fs
push
inc
and
ds
pop
and
mov
jp
sub
jno
sub
mov
push
lods
das
cli
jo
cwtl
add
add
mov
jae
xor
cmp
pusha
call
sbb
pop
fisttps
push
xor
fldenv
repz
push
pop
in
pop
xchg
sub
add
jnp
cmp
das
test
xchg
lock
andb
outsl
dec
lds
scas
sbb
hlt
mov
mov
xlat
and
adc
add
inc
rorb
in
pop
jl
push
fstl
add
std
lods
jmp
fmuls
in
adc
pusha
shll
sub
je
iret
shlb
call
pop
pop
test
out
mov
arpl
push
xchg
rcr
jle
imul
jnp
in
leave
insb
xor
stos
lcall
mov
and
mov
data16
add
sbb
jno
std
aas
sbb
add
inc
pop
mov
mov
test
xchg
cli
sbb
decl
push
imul
dec
outsb
and
mov
xor
inc
gs
js
aaa
imul
stc
clc
jb
and
push
sarb
and
popa
je
insl
and
sbb
dec
shrb
lods
les
fdivl
je
lret
jmp
test
xor
call
aam
out
mov
pop
xchg
sbb
hlt
mov
insl
icebp
ret
shll
xchg
adc
add
xor
adc
aam
mov
jmp
inc
adc
fbstp
push
not
xchg
cmp
iret
sarl
mov
in
pop
push
push
data16
icebp
sbbb
cmp
ret
movsl
lods
pushf
mov
cmpl
fdivl
andb
and
cmp
outsb
addr16
enter
shrl
into
hlt
cmp
or
xchg
inc
rcll
add
movsb
jp
testl
jmp
pop
push
add
mov
or
sbb
push
dec
cmc
or
fsts
mov
or
jmp
sahf
sbb
xor
fs
stc
cmp
and
add
adc
mov
or
jmp
rorb
aad
adc
movsb
inc
repnz
or
push
jne
and
out
stos
or
pop
xorl
scas
sub
or
jecxz
pusha
out
and
rcr
cmpsl
mov
lahf
sbb
mov
dec
xchg
dec
lret
lods
movsb
add
push
push
scas
xor
stos
xchg
clc
xor
pop
sahf
rclb
rcr
xor
sarb
shlb
mov
dec
dec
pusha
xchg
mov
pop
push
aad
pop
adc
ret
repnz
sbb
daa
inc
outsl
sub
imul
jb
pop
fimull
add
mov
shrb
sub
or
cmp
jmp
push
push
cmp
dec
daa
int
push
xor
cmc
mov
mov
lock
inc
test
jle
cltd
or
fs
movsb
rclb
mov
in
rorb
and
clc
pushf
ret
mov
je
cmp
mov
cli
sub
pop
lods
ficoms
inc
insl
sub
jnp
xchg
mov
sub
lods
xor
fdivrp
xchg
mov
cmc
aas
ljmp
je
or
fidivl
mov
pop
icebp
aas
hlt
mov
fdivs
sar
loopne
mul
xchg
sahf
cmp
and
or
xor
scas
dec
mov
imul
jp
jo
adcb
mov
inc
fucompp
dec
sub
xor
xor
and
push
lret
push
pop
mov
ret
or
lock
gs
icebp
imul
pop
dec
sbb
rcll
push
mov
dec
mov
cmp
pop
mov
pusha
push
cmp
gs
je
pop
movsbl
je
scas
dec
test
aad
loope
xchg
push
mov
enter
sub
stos
sbb
in
sbb
in
inc
xor
sbb
imul
bound
movsl
mov
mov
pushf
jbe
and
pop
dec
das
xchg
mov
mov
xlat
out
xor
sub
icebp
inc
push
push
push
mov
into
out
and
outsl
movsb
test
sub
in
pop
dec
cmp
and
out
mov
add
loopne
pop
push
sub
notb
add
les
push
out
movsl
sbb
flds
sbb
xor
in
xchg
loopne
sbb
test
std
into
mov
mov
push
sbb
sub
mov
ficoml
dec
lret
aam
xchg
push
xchg
dec
push
fmull
sbb
xchg
inc
add
pop
push
sub
xchg
mov
outsl
mov
aas
dec
xchg
jle
lods
ljmp
ds
test
js
jae
add
inc
xlat
gs
add
and
jle
mov
inc
pusha
pop
pop
sti
fwait
mov
clc
out
inc
xor
adc
cmp
mov
decb
xchg
cmpsl
mov
adc
lret
sub
mov
xor
test
fisubrs
lea
cmp
mov
adc
lcall
lret
rcr
cli
js
mov
mov
movsl
mov
xchg
out
jae
xchg
in
xchg
fwait
xor
cltd
jbe
push
jecxz
loope
add
cmpl
push
cli
xchg
inc
cmp
jnp
stc
lods
add
cmp
or
mull
adc
mov
jmp
enter
or
aas
dec
lods
sbb
sti
test
pusha
mov
daa
push
popa
fsubrl
mov
loope
lcall
data16
xchg
mov
mov
dec
repz
imul
or
and
adc
xor
sti
cmp
dec
xchg
sub
pop
std
out
pop
into
leavew
mov
jno
sbb
jg
rcll
adc
sbb
test
cmp
sub
mov
in
mov
loope
fld
mov
push
and
negb
ljmp
ss
cmp
sub
pop
cwtl
mov
adcb
nop
pushf
jmp
jle
mov
jo
dec
xchg
gs
or
dec
sub
xor
test
and
ss
fcomps
xor
sbb
sub
dec
les
sub
or
cmp
adc
xchg
sahf
or
subl
dec
jns
xchg
icebp
and
das
inc
and
dec
test
inc
dec
sbb
sahf
mov
loop
cwtl
cli
incb
lret
mov
cltd
inc
mov
popf
test
add
gs
push
cmc
push
cwtl
adc
dec
pop
mov
inc
cmpsb
pop
dec
jns
push
jae
loopne
out
jle
jb
jae
and
inc
pop
xor
add
sahf
enter
pop
push
cs
inc
jp
cmpsl
push
jo
sub
adc
aas
loop
sbb
sbb
lods
cmovb
add
mov
in
pop
cmp
xchg
xlat
lds
sub
sub
std
das
and
cmc
jle
adc
fwait
divb
xlat
insl
xor
mov
jne
and
test
mov
xor
rcr
fbld
xor
int3
mov
dec
xchg
aad
repz
leave
xchg
add
mov
imul
imul
pop
mov
pop
mov
add
push
pushf
cmp
sti
cli
roll
xchg
sbb
jbe
cltd
loope
imul
lods
out
jne
xchg
std
mov
push
movsl
fsts
fstpt
cmp
push
es
cs
sbb
insl
cmpb
sbb
out
mov
cmp
loopne
sub
xor
lahf
jecxz
inc
pop
mov
sbb
fwait
js
cltd
cmp
lods
sbb
sahf
icebp
out
push
shll
cmp
idivb
int3
daa
lahf
fwait
push
jmp
push
dec
and
out
xor
orb
cmpsl
clc
outsl
pusha
jb
scas
sbb
xchg
loop
jp
xorl
insb
sahf
cmp
xchg
ss
orl
xchg
xor
lock
enter
popf
imul
lret
rcrl
push
add
fwait
add
ljmp
and
add
sbb
das
out
dec
mov
push
cmp
mov
lea
sti
add
dec
adc
dec
fildl
ds
leave
lods
insb
adcl
lea
mov
xor
or
jge
loope
test
movsl
les
leave
dec
andb
xor
sarl
iret
pop
fs
jb
dec
or
mov
jl
clc
mov
imul
frstor
loop
ss
jecxz
jae
pop
inc
sbb
adc
lods
lahf
fwait
xchg
mov
push
lods
mov
data16
mov
fbstp
pop
stc
push
arpl
out
inc
mov
sub
sbb
repz
jle
and
jnp
mov
nop
xchg
xchg
lret
fldl
jmp
nop
lahf
cmp
mov
inc
cmc
mov
test
push
add
jnp
rcr
lret
fdiv
cwtl
aad
das
jno
lods
mov
or
xchg
xor
jg
lods
sbb
pop
cmc
push
into
sub
imul
mov
pop
stos
mov
popf
jb
adc
mov
inc
and
imul
aad
xor
mov
dec
xlat
push
and
shlb
fwait
test
fists
imul
cwtl
xchg
mov
add
xchg
inc
pop
repz
and
mov
mov
in
sti
divl
ds
clc
cmp
loopne
hlt
sub
sbb
mov
mov
cwtl
rcll
daa
sarb
mov
cmp
xchg
rcpps
xchg
xchg
dec
cmpsb
mov
push
filds
cmp
adc
fistpll
mov
into
lret
dec
push
scas
andl
adcl
push
or
and
loope
pushf
or
insl
cltd
aad
arpl
out
clc
sub
and
test
jno
xchg
popf
inc
aaa
xor
cmp
xor
dec
and
jb
or
and
gs
dec
cmp
fidivrl
xor
sbb
push
adc
and
scas
mov
sub
sbb
mov
xor
xorb
jnp
mov
and
xchg
cmp
push
cmp
aad
dec
mov
lcall
push
imul
movsl
sti
xor
lods
xor
ja
in
jp
stc
je
ret
aad
mov
enter
pop
loop
jno
mov
mov
scas
loope
sbb
pop
imul
outsb
and
loopne
inc
sub
pop
andl
push
or
xchg
and
adc
mov
fwait
mov
push
test
jns
imul
in
ss
imul
das
lock
and
cmp
mov
xchg
jmp
cmp
sti
xor
scas
pop
out
iret
mov
pop
inc
lret
and
shll
mov
mov
icebp
sub
mov
or
inc
add
or
cmpsb
inc
aam
imul
push
jne
mov
insb
test
test
cmp
jge
inc
jp
inc
pop
sub
sbb
and
stc
cmp
scas
cmpsb
jae
push
inc
or
or
sbb
xlat
push
inc
push
pop
xorl
mov
xchg
mov
data16
rol
sub
fwait
repz
and
pushf
arpl
add
mov
daa
sbb
add
repnz
cmp
cli
sbb
outsl
or
and
jl
sbb
sub
cmp
mov
fcoms
in
test
xchg
subb
cld
and
dec
or
push
xor
jge
les
xorb
fldcw
loopne
repz
negl
jp
lea
cmpsb
and
mov
mov
testl
scas
mov
aas
adc
cmpsl
add
pop
push
movsb
rcl
shll
std
sbb
sub
inc
jle
sub
mov
adc
push
adcb
scas
insb
and
int
fildll
cmp
xchg
mov
in
dec
out
aaa
cmpsb
mov
dec
bound
pop
and
cmp
cmp
push
fidivrs
add
pop
dec
xor
sub
lahf
pop
push
shl
add
jg
fidivs
bound
sub
gs
ljmp
or
inc
ljmp
sbb
cmp
mov
popa
pop
subl
xchg
pop
divl
imulb
rol
ret
adc
fcmovb
ret
cmp
aas
ja
push
pop
nop
push
xchg
enter
push
dec
push
add
pop
or
les
pushf
ja
mov
lods
or
push
mov
cmpb
sbb
mov
inc
int
or
xlat
push
addb
rcr
js
push
test
mov
and
and
inc
pop
jns
xor
add
outsl
ret
cmpsb
cmp
xchg
pop
test
push
add
daa
pushf
movsl
mov
pop
insb
aam
call
lret
xchg
int
cld
adc
xchg
jb
jmp
das
and
idivb
dec
mov
outsb
fmuls
pop
test
loop
rolb
stc
sbb
xor
hlt
fmull
in
add
fwait
sbb
cwtl
sub
jbe
jae
dec
adc
je
add
lods
pop
dec
xchg
or
xchg
addr16
sti
shll
es
fidivrs
dec
push
pop
stos
inc
cld
shrl
fdivrs
jns
add
or
mov
adc
push
push
or
cmp
xor
test
jnp
lret
testb
ret
pusha
fwait
dec
add
jl
mov
lods
insb
adc
mov
mov
xchg
out
sub
fisubs
leave
out
lret
jns
lods
sbb
in
inc
lods
shrb
dec
or
shll
mov
or
mov
fucomi
push
push
movsb
cmp
push
jae
or
iret
mov
add
insb
xor
arpl
bound
imul
mov
pushf
xchg
lods
push
cld
lret
fmulp
int
or
dec
or
inc
adc
push
jmp
ljmp
cltd
xchg
mov
andb
cwtl
arpl
imul
mov
cmp
test
test
mov
dec
sub
push
xlat
jae
push
dec
outsb
and
mov
jnp
lret
xchg
lods
jbe
sbb
xchg
mov
sbb
popl
ret
inc
pop
sub
hlt
dec
sub
movsl
je
insl
hlt
cmp
jle
idivb
lret
xchg
or
push
cmp
ljmp
call
fdivrl
and
push
addr16
subb
iret
testb
pop
fiaddl
fwait
adc
push
pop
lea
push
mov
jle
std
jae
jp
cmpl
hlt
int
jg
ds
imul
fcmovnb
mov
sub
mov
adc
stos
enter
inc
in
int
mov
push
sub
sbb
jp
lcall
scas
repnz
cmp
scas
push
fs
push
cltd
arpl
cmc
xor
push
mov
pop
mov
or
in
jecxz
xlat
pop
jo
push
pop
mov
pushf
sbb
mov
insb
sub
pusha
sub
mull
add
test
sbb
xor
sahf
loop
pop
push
rorb
inc
nop
jne
je
out
lcall
or
dec
push
cwtl
sbb
mov
stos
fadds
or
inc
push
cmpsl
cmp
or
lea
pop
lods
jmp
inc
xlat
dec
int
stc
bound
jge
repnz
popa
add
enter
fdivs
jmp
mov
jbe
repz
pusha
dec
sub
or
adc
je
pop
pusha
test
pop
movsl
xchg
std
cmp
scas
push
or
insl
popf
mov
xchg
xchg
icebp
xchg
sbb
rcrb
adc
test
daa
cmp
push
sbb
je
stos
pop
push
enter
sbb
and
jge
mov
fldcw
push
lea
cmp
pop
push
or
jno
adc
push
js
push
and
fsubrp
sub
fistpll
pop
outsb
dec
pop
xchg
sub
add
sub
sub
jae
sub
pusha
or
lret
icebp
cli
cmpsb
sub
jmp
dec
ljmp
pop
hlt
sbb
push
idivb
sub
adc
inc
cmp
mov
cmc
bound
inc
sar
xchg
in
clc
popf
imul
push
xor
cmp
and
movsb
xor
push
push
cmp
and
data16
imul
mov
or
adc
sbb
ss
sub
scas
jne
lret
dec
and
dec
pop
adc
cmp
gs
mov
nop
lret
lea
xor
dec
push
sub
mov
lret
jp
fucomp
inc
popf
ja
pushf
aaa
rolb
pop
enter
mov
add
ds
lret
add
push
nop
in
xchg
inc
pop
aaa
mov
or
in
jns
orb
sub
mov
mov
fucomi
lock
push
inc
adc
leave
sub
mov
sub
loop
addb
outsl
in
cmp
pop
or
or
ss
insb
xchg
cli
repz
add
push
push
lahf
mov
fdivrp
add
xchg
adc
fcmovb
dec
repz
orl
add
cld
movsl
push
jbe
sbb
insl
pusha
pusha
adc
xchg
outsb
push
mov
int
pop
cmp
dec
cmp
or
mov
or
popf
insl
insl
ret
cmp
inc
sbb
inc
add
cld
or
mov
jecxz
imul
popf
mov
mov
add
xchg
cmpsl
in
push
add
in
jno
sbb
and
and
cmc
cmp
sub
xchg
or
pusha
out
push
fwait
xchg
fs
inc
in
imul
int
inc
out
xchg
pop
scas
hlt
push
mov
incb
add
repnz
scas
push
fsubrl
rorb
add
or
push
adc
js
sbb
jnp
adc
ds
dec
or
adc
dec
lcall
mov
inc
pushf
jg
les
jnp
mov
scas
sbb
cltd
adc
data16
loopne
jb
int3
cwtl
sbb
push
jp
and
aas
inc
cmp
sub
sti
jg
sti
adc
insl
ss
mov
jp
sub
pop
loop
cld
mov
xor
pop
pop
adc
jns
push
fistl
je
nop
sub
inc
ja
rcrb
subl
jp
mov
jns
ss
das
xchg
ret
roll
xchg
mov
xor
movsb
repz
mov
enter
xlat
subb
push
stos
mov
cs
out
dec
push
push
clc
rol
mov
push
mov
dec
xchg
mull
or
aam
dec
aad
add
dec
pop
add
and
or
notl
adc
xchg
rcll
xor
inc
pushw
mulps
cld
jecxz
bt
mov
rclb
lock
adc
cmpsl
pusha
ljmp
leave
pop
hlt
mov
adc
sti
add
sbbb
adc
mov
sbb
fiadds
aam
test
scas
push
inc
mov
daa
pop
fwait
rcr
dec
inc
or
pop
lock
pop
andb
mov
cmp
jae
loop
cwtl
fildl
popa
jg
outsl
dec
stos
mov
shlb
je
mov
sbb
dec
cli
push
dec
sub
jp
lods
lret
or
hlt
je
pop
in
mov
and
xchg
inc
insl
jg
aaa
dec
adc
pop
xchg
mov
sbb
dec
add
jmpw
in
gs
inc
add
mov
xor
cmp
pusha
jns
xchg
jnp
push
in
xchg
fadd
xchg
push
repnz
insl
ljmp
popf
mov
inc
stc
js
pop
dec
insl
repz
scas
scas
sub
orl
sub
hlt
xlat
mov
inc
mov
mov
jp
out
mov
cmp
sbb
xlat
js
cmp
push
fimull
shll
jge
mov
jl
xchg
cltd
lcall
sbb
int
rorb
jnp
iret
xor
outsb
lock
je
cs
mov
jmp
or
rol
jp
mov
xorl
dec
nop
and
test
aaa
or
into
adcb
repnz
push
dec
mov
pop
pop
es
std
lea
xchg
js
or
ss
faddp
xor
pop
and
fdivr
sbb
mov
fisubl
adc
lock
int3
inc
faddl
fwait
mov
loop
cmp
ret
sbb
out
mov
push
xorb
jns
fsubl
je
movsb
mov
push
lock
sub
sub
cmp
jno
ret
mov
shrb
cwtl
or
xchg
popf
out
inc
fistpll
mov
and
or
test
adc
jno
xchg
jle
inc
push
mov
cld
sbb
ds
sbb
or
insb
xor
and
pusha
int
pop
mov
or
icebp
sub
das
and
iret
pop
loop
inc
sbb
gs
jnp
enter
sub
dec
adc
jg
xchg
insb
test
sub
cmp
cmp
fstl
cwtl
xchg
pop
mov
movl
popa
ficoms
stos
daa
sti
add
adc
aaa
mov
pushf
dec
xchg
lcall
cmp
push
xchg
clc
dec
pop
insl
adc
notl
outsl
loop
push
xchg
clc
fwait
mov
push
pop
cvttps2pi
int3
hlt
movsb
ljmp
sbb
dec
fbld
or
cmp
cld
cwtl
and
xchg
jbe
jnp
xor
xchg
and
ljmp
mov
aaa
jb
hlt
movsl
dec
imul
and
xchg
push
psraw
pop
mov
in
fsubl
fmul
or
adc
sub
subl
inc
push
sub
outsl
dec
ss
pushf
xlat
cmp
pop
rcr
and
and
mov
into
cmc
lret
dec
inc
mov
test
aam
mov
repnz
outsb
jl
fdiv
nop
cmp
rcll
sbb
cld
es
inc
xchg
fprem1
or
xor
imul
stc
fisubs
inc
test
fnstcw
popf
shl
popl
dec
adc
repnz
test
stc
test
fisubs
out
cltd
or
cmp
adc
in
out
imul
pop
mov
or
cmp
sub
std
adc
fcompl
jp
pop
push
xor
std
xchg
adc
std
inc
in
and
push
sub
mov
sub
rorb
jbe
cmp
push
fimull
mov
mov
out
fwait
movsl
mov
cmp
cwtl
adc
lahf
push
dec
mov
daa
or
cmpsl
fnstenv
enter
aad
nop
xor
lcall
ljmp
jge
ds
add
ret
in
icebp
mov
mov
jne
js
pop
test
mov
add
mov
mov
xor
test
add
adc
imul
repnz
cmp
mov
push
stc
pop
mov
ds
jmp
push
jle
cwtl
pushf
mov
ret
cmc
pop
push
dec
mov
arpl
out
jno
hlt
adcb
stc
mov
sahf
fsubrl
in
lahf
dec
test
push
loopne
and
mov
insl
test
subl
cmpsb
arpl
notb
or
jecxz
andb
cmp
sbbb
sub
and
dec
sahf
bound
add
out
sarl
pop
mov
cmp
push
sbbb
mov
cld
insl
in
pop
push
sub
xchg
divb
pop
enter
adc
inc
mov
cli
adc
lock
ficoml
int3
xchg
cmp
xchg
std
xchg
mov
lods
mov
and
shlb
nop
push
xlat
scas
and
lcall
jge
and
push
mov
ljmp
pop
popf
pop
and
lahf
int
mov
jl
aaa
push
push
dec
idivb
std
rclb
filds
lea
xor
jecxz
out
adc
ljmp
in
add
jp
cmpsb
pushf
fwait
das
pop
jmp
jge
xchg
xchg
test
adc
mov
adc
mov
daa
cmp
mov
dec
sbbl
sbb
rcrl
popf
adc
fstpt
lahf
adc
cmp
rorl
div
jnp
push
push
mov
jp
hlt
fnstsw
pusha
cs
jmp
ds
scas
and
andl
sahf
xchg
fwait
mov
xor
bound
dec
jle
inc
lret
scas
mov
mov
icebp
scas
fmulp
cli
mov
in
adcl
in
daa
test
test
jle
es
lret
jecxz
fidivrs
inc
add
pop
loope
jns
clc
xorl
inc
jg
sub
fisubl
and
pop
fs
testb
mov
outsl
push
push
push
nop
pop
inc
rorb
mov
daa
je
push
pop
add
xor
lcall
ja
bound
push
es
cmp
faddl
repz
mov
mov
je
orl
inc
cmc
mov
mov
mov
pop
xlat
faddp
jg
into
mov
subb
fnsave
sbb
test
aam
test
cmp
fsubr
pop
push
adc
repz
xchg
jmp
sbb
testb
sbb
rcrb
push
lea
xor
sbb
mov
enter
xchg
mov
cli
jp
dec
outsb
pop
sbb
push
cmp
jmp
dec
clc
mov
sub
daa
pop
inc
ds
pushf
imul
and
scas
clc
pop
je
in
xor
sbb
and
addl
aam
xchg
mov
xchg
dec
or
cltd
jo
test
imul
xchg
mov
cwtl
pop
xchg
andb
sub
adc
xor
arpl
jle
fwait
mov
lahf
int
push
pop
clc
xchg
jne
jae
push
push
xchg
xchg
jmp
ret
nop
out
mov
addr16
pop
inc
repz
je
dec
mov
add
test
jbe
dec
sub
insb
fnstenv
cmp
xor
or
fmull
ret
lds
sar
xchg
mov
lods
inc
xchg
mov
lret
xor
mov
cld
sti
push
out
lret
push
mov
xor
add
lods
add
xor
push
jmp
clc
push
int3
pusha
cli
gs
add
aas
mov
mov
out
push
xchg
inc
jge
or
inc
jo
xchg
imul
loopne
out
xchg
aaa
rcll
out
popa
cmp
mov
inc
and
or
push
push
mov
icebp
jnp
pop
shr
push
xor
shl
icebp
fisubrs
jb
inc
push
push
into
pusha
add
xchg
dec
and
cmp
test
shrl
lret
and
cld
xchg
mov
cwtl
xor
xor
lods
adc
xchg
cmpsb
in
push
sbb
xchg
jmp
adcl
insl
pop
mov
lcall
cmp
push
sub
push
rcll
ja
mov
aam
mov
sbb
jne
rolb
mov
hlt
aas
push
inc
cmc
cmp
out
movb
call
dec
test
scas
sub
mov
xchg
dec
pop
insb
jle
leave
jno
outsb
push
bound
sbbl
cltd
mov
xor
fisttpll
xor
out
or
cmp
popa
mov
scas
xchg
outsl
nop
pop
test
mov
fistl
rcl
lock
gs
dec
pop
out
scas
cmp
adc
inc
adc
lahf
aas
and
push
mov
xchg
lret
mov
cmc
fldt
cli
xchg
and
in
stos
lea
push
xor
or
pop
adc
lahf
dec
push
sbb
add
jp
pop
push
sbb
loop
push
push
outsb
jno
in
jge
dec
clc
sbb
inc
ret
loope
jne
jecxz
jle
mov
std
inc
loope
repz
jb
adc
and
pop
inc
sbb
jnp
out
jmp
divl
adc
mov
or
in
xchg
inc
xor
push
fsubrs
xor
jo
or
je
push
into
jmp
lcall
xchg
cwtl
fisttps
pop
mov
push
out
dec
mov
jb
imul
loopne
arpl
outsb
xchg
loope
mov
mov
mov
mov
bound
jnp
aam
push
mov
xor
shl
mov
mov
lret
clc
inc
je
adc
rcrb
out
mov
push
popf
inc
outsl
sbb
aaa
es
std
pop
iret
std
in
imul
pusha
cmpsl
jbe
pop
and
push
lods
into
and
es
lds
dec
sbb
xchg
imul
mov
cmp
adc
fstps
and
dec
adc
mov
pop
out
adc
adc
sbb
mov
je
cmpsb
jbe
cmpl
mov
xor
sbb
sub
mov
mov
xor
mov
cltd
hlt
jmp
lods
jbe
adc
mov
clc
mov
mov
popf
aaa
jb
inc
or
loopne
dec
arpl
scas
add
pusha
and
out
mov
outsl
jge
dec
or
sbb
jo
repz
jle
mov
mov
cmp
cs
rorl
sbb
inc
mov
cmp
jmp
out
lea
sarb
out
loop
jecxz
lock
fists
cmpsl
push
mov
jl
xchg
les
xor
jl
or
xchg
add
pop
jnp
mov
mov
adc
js
xchg
pop
cmp
popf
lds
inc
pop
push
es
test
jge
jge
mov
cmc
inc
mov
add
in
outsl
mov
mov
push
push
xor
xchg
push
pop
insb
in
sbb
sub
jecxz
push
stc
mov
sbb
mov
mov
out
stc
shlb
add
out
and
outsl
dec
divb
in
lock
pop
mov
dec
daa
out
aad
dec
xchg
mov
in
mov
xchg
rcrb
dec
mov
lcall
cmpsb
pusha
rclb
add
js
sbb
xchg
int3
or
push
sbb
insl
cmp
push
in
inc
push
cwtl
xor
arpl
lock
insl
push
pusha
lods
mov
and
mov
xchg
dec
mov
xlat
push
inc
inc
mov
dec
jns
push
fnsave
push
test
mov
out
inc
fisubrs
imul
in
inc
mov
cmpb
in
mov
cs
push
xchg
add
adc
test
fdiv
push
mov
xchg
cli
outsb
adc
aaa
fidivl
dec
push
daa
mov
xchg
je
mov
loope
scas
sti
cmp
push
push
jl
inc
fstpl
outsl
mov
inc
xor
cmc
jnp
adc
and
push
out
icebp
je
mov
mov
cmp
jmp
jnp
mov
adc
hlt
js
cld
dec
gs
xchg
jg
sbb
jle
adc
pop
xor
jnp
xchg
xor
dec
or
sbb
pop
jmp
or
pop
xor
adc
out
mov
daa
subl
aaa
fildll
test
testb
xchg
ss
jb
ret
lock
and
ret
shl
cltd
push
sbb
jmp
movsl
xor
jb
pop
inc
movsl
out
sub
or
data16
in
incl
arpl
and
push
out
cmp
shll
or
pop
mov
mov
mov
shrl
nop
test
mov
js
or
mov
inc
test
mov
mov
jecxz
dec
movsl
jno
out
data16
jns
icebp
popf
mov
cltd
inc
mov
outsl
push
xor
aam
dec
cmp
or
dec
es
jle
je
sbb
push
mov
mov
cmp
arpl
sahf
repz
xor
mov
mov
or
jmp
loopne
in
push
in
es
pop
fisubrl
push
pop
dec
scas
loop
and
xlat
cs
dec
and
jecxz
mov
push
dec
mov
push
incl
xchg
fld
lahf
cmpsl
xchg
cmpsl
push
sbb
cmovs
stc
lahf
out
sub
jecxz
lea
cltd
movsb
shlb
pusha
push
pop
xor
mov
mov
sbb
push
scas
dec
push
mov
sbb
nop
sbb
xor
mov
fmulp
int3
push
jmp
jp
outsb
js
gs
sbb
insl
push
fldcw
sub
pop
adc
fs
push
sbb
and
sarl
in
jae
push
popa
call
lcall
mov
loop
jge
fcoms
mov
jb
lret
sub
mov
rcl
in
mov
mov
add
dec
jno
in
xor
xchg
or
in
repz
das
or
fisttpl
pop
pop
xor
shr
movl
jns
cmpsb
and
dec
insb
inc
or
in
stos
jmp
aam
add
mov
cmp
js
fnstcw
cmc
test
mov
jnp
outsl
pusha
in
mov
popa
jmp
iret
push
cmpsl
dec
dec
xchg
jno
lret
cmpsl
and
ljmp
jb
loope
push
shll
std
or
sbb
add
pushf
xchg
inc
mov
idivb
inc
mov
ss
inc
inc
cmp
gs
fs
mov
inc
ffree
call
cmp
ret
dec
cmp
inc
xchg
lret
sarl
inc
xor
into
mov
pop
inc
mov
xor
arpl
inc
fidivl
or
testl
aam
mov
imul
ds
into
dec
inc
scas
sar
push
jns
in
ja
and
test
pop
stos
in
dec
adc
adc
inc
jg
out
pop
xchg
cmp
adc
push
ds
aas
addr16
pop
mov
imul
mov
cmp
inc
or
and
idivl
fisubrl
dec
mov
fldenv
push
and
mov
mov
mov
cmp
repz
sbb
add
daa
cmpsl
mov
adc
hlt
push
shl
xchg
add
daa
cmpsl
lds
call
sarb
mov
sub
lds
shlb
pop
xchg
xchg
jne
inc
mov
sti
mov
outsb
test
dec
dec
sub
das
jmp
shll
add
les
lds
xor
or
sbb
ret
mov
aad
adc
gs
cli
ficomps
out
pop
andl
sub
cs
div
mov
stc
inc
ret
adc
ja
rolb
bound
insl
ds
fidivs
ret
cmp
mov
cltd
stc
cld
push
loope
aas
fs
mov
pop
std
sub
inc
incl
mov
cmp
jl
inc
cmpsl
dec
addr16
jae
jg
aad
add
lock
jns
xchg
mov
rorb
popf
jo
scas
ja
fmuls
adc
aas
mov
jg
pop
xchg
jmp
xor
cmpsl
lea
out
adc
fucomp
and
pop
ja
into
lds
add
inc
bound
sub
xchg
inc
ljmp
clc
lds
and
out
adc
push
pop
xchg
mov
mov
clc
jle
mov
aam
xchg
repnz
shl
das
xchg
and
fsubs
or
or
cmpsl
aam
push
adc
in
stos
imul
mov
es
mov
pusha
and
jmp
aad
cli
pop
push
cwtl
arpl
jo
fsts
stos
mov
push
add
das
add
push
cmp
sbb
lea
ja
mov
movsl
mov
je
movsl
imul
aaa
addl
push
mov
mov
std
xchg
je
jg
roll
xor
repnz
bound
mov
test
lret
dec
jae
int3
xchg
clc
cmp
in
jb
lret
lret
xchg
push
ds
out
ss
movsl
cmp
gs
sub
decb
scas
iret
dec
and
cli
je
cmp
cli
scas
mov
clc
repz
repnz
sub
pop
pushf
push
xchg
mov
iret
mov
bound
jp
xchg
mov
lea
xor
popa
fsts
mov
adc
dec
pop
cmpsl
mov
mov
test
sub
loop
sub
xchg
imul
xchg
shlb
sbb
dec
add
aam
jp
test
mov
scas
bound
inc
mov
out
cli
test
cmp
movsb
mov
dec
sbb
mov
adc
jp
frstor
pop
mov
jmp
shrb
jbe
hlt
mov
aad
sbb
mov
ret
stc
lods
aas
stos
cmp
fsts
dec
cwtl
mov
inc
pop
dec
pop
into
outsl
sub
inc
xchg
in
fisubrs
icebp
jecxz
jae
and
sar
shr
mov
movsb
insb
jl
ret
jnp
inc
jge
rorl
es
adc
stos
mov
inc
repz
pshufw
or
pop
fisttpl
int3
xor
rcl
or
hlt
nop
imul
push
je
call
cli
add
sbb
aam
xchg
sbb
fsubl
push
xor
inc
pop
push
jnp
xchg
cmc
sbb
mov
imul
repnz
and
ret
popf
shl
fcmovnu
sub
sub
mov
xchg
je
imul
aam
sub
movsb
xor
xchg
popf
sbb
popa
es
stc
loop
mov
mov
push
sub
lods
cli
adc
and
xor
repnz
lock
mov
test
jp
cmovno
inc
sahf
push
jae
lock
push
mov
inc
rorb
mov
jmp
outsb
lcall
scas
jns
and
scas
dec
or
and
pop
add
inc
out
enter
das
lret
idivb
mov
call
scas
cmpsl
sbb
mov
popf
cwtd
mov
mov
lahf
cmp
adc
mov
sub
sti
je
gs
add
push
mov
lea
xchg
inc
lahf
mov
imul
push
cmp
repnz
xchg
or
pop
mov
test
enter
inc
neg
push
fwait
sbb
push
push
in
sbb
push
ret
ds
in
add
mov
add
std
push
sbbb
push
fs
adc
push
xchg
jmpw
fcoms
bswap
add
dec
jg
insl
andb
mov
jb
xor
enter
dec
pusha
sub
mov
add
xchg
enter
or
or
push
jge
sahf
std
jb
scas
sbb
xchg
add
pop
push
int
sbb
dec
xor
je
notb
loope
or
sahf
pop
adc
lock
rcrb
lods
xchg
xor
push
pop
xor
mov
mov
inc
aad
int
mov
dec
jmp
fdivrl
sub
mov
jge
sub
test
inc
cmp
shl
and
xor
lods
test
roll
xor
enter
xchg
outsl
pop
xor
fwait
fwait
enter
inc
iret
lds
shrb
stos
stos
rcl
push
xchg
inc
insl
add
pop
dec
scas
lahf
popa
jno
orl
push
pop
adc
mov
loope
inc
movsl
out
cmp
sub
pop
mov
lods
dec
shr
test
xor
popa
loope
and
in
nop
rclb
and
adc
insl
push
push
subl
in
in
fldenv
and
mov
data16
imul
jb
dec
aas
sbb
iret
cs
and
pushf
mov
scas
adc
sbb
xor
add
push
jecxz
insb
mov
push
pop
fmulp
mov
sub
xchg
mov
paddq
and
mov
and
jno
mov
xchg
xor
push
adc
cmp
movsb
ja
push
cmp
add
fnsave
adc
mov
pushf
cltd
daa
xor
fdivrp
iret
je
sarb
fs
xor
jp
pop
clc
cltd
xor
adc
popf
aam
cmp
loopne
dec
iret
loop
in
sub
xchg
stos
mov
sbb
cmp
or
les
xor
sahf
jle
jo
je
push
sub
in
rcrl
xchg
cmpsb
into
repz
hlt
cli
jnp
test
lahf
andb
pop
push
add
pop
loopne
lcall
sti
pop
sbbb
adc
es
lock
lret
jnp
add
push
adc
dec
repz
aas
aad
xchg
jae
jle
mov
test
mov
xchg
mov
pop
cmc
mov
loopne
xorb
mov
xlat
xor
aas
rcpps
pop
fwait
and
sbb
sbb
cmpsl
inc
pop
jbe
xor
jmp
xor
idiv
fisubrs
inc
sub
and
in
jmp
mov
mov
daa
push
or
and
es
addr16
adc
mov
popf
mov
aam
mov
or
sbb
jno
mov
mov
repz
loope,pn
inc
sbb
incl
push
xchg
push
repnz
mov
in
add
cmp
roll
push
inc
jns
jb
mov
mov
pusha
jb
sub
loope
and
int
sbb
add
xorb
into
adc
adc
sti
inc
test
xchg
lret
notb
enter
pop
ret
int
dec
add
lahf
das
mov
pop
in
dec
adc
imul
cmp
jle
in
fnstsw
jg
addr16
or
or
xlat
add
ds
out
paddq
adc
inc
xchg
add
pop
ret
out
popl
push
inc
cmp
push
xchg
lret
or
stos
adc
cld
aas
adc
popa
loop
fisubrl
mov
stos
cltd
add
aam
out
and
adc
or
push
inc
mul
enter
mov
cld
call
mov
in
movsb
rclb
pop
adc
inc
mov
push
nop
push
clc
ds
popf
into
mov
ja
cmp
fadds
jne
and
loop
mov
inc
sbb
loope
scas
cmp
hlt
imul
in
and
mov
mov
cmp
inc
gs
push
test
pop
je
xchg
dec
fcoms
inc
insl
adc
mov
pop
jbe
out
dec
pop
push
xor
lods
pop
ret
dec
sub
int3
out
aas
or
sub
cmp
fldenv
push
fistpll
sarb
inc
test
and
push
push
xchg
xor
out
ds
xchg
cmp
fnstsw
sbb
ds
cmp
jle
and
mov
or
pushf
sbb
add
sub
push
aaa
movsb
fs
push
popf
inc
or
mov
cmp
out
xchg
dec
cltd
mov
mov
mov
push
jbe
mov
testb
lock
popa
test
sub
daa
test
lahf
pop
xlat
sbb
lret
pop
lods
int
xor
cmpsl
add
cmpsl
out
fadds
mov
les
pop
andl
add
pop
lock
or
pop
shrl
dec
push
cmp
fstps
mov
adc
in
pop
add
and
cs
repz
movsb
insl
pop
pop
mov
sbb
lcall
ss
mov
push
cld
pop
xchg
inc
cmc
lock
movsb
call
xor
jb
xor
xchg
adc
or
ja
repnz
das
insl
mov
out
sbb
push
movsb
mov
in
and
aam
xchg
cmp
mov
mulb
lret
jle
dec
pop
and
dec
imul
fisubrs
pusha
and
add
cmp
pop
mov
push
xchg
jne
int3
das
lods
scas
cmpsl
add
cli
sarl
xchg
mov
ljmp
mov
aas
and
and
mov
inc
lea
push
mov
mov
in
lahf
mov
icebp
cmp
dec
xor
mov
lea
pop
add
pop
mov
mov
sub
mov
mov
pop
dec
test
fisttpl
arpl
xchg
xchg
dec
cmpsl
mov
mov
ret
int
inc
andb
xor
outsl
loopne
cmp
push
pop
clc
adc
sbb
stc
sbb
xlat
pop
cld
dec
dec
cmpsl
xchg
arpl
in
jo
or
fistl
lret
divb
jl
cmpb
sahf
std
test
and
adc
xor
cmc
stos
adc
pop
ret
loopne
lret
int3
inc
inc
out
xor
dec
mov
test
movsb
cmpsb
aam
in
aam
rcrb
sub
and
fs
adc
iret
int
dec
iret
leave
pop
or
sahf
sbb
mov
push
mov
inc
dec
or
outsb
lea
mov
lahf
pushf
adc
scas
popf
sub
pop
sarb
mov
lcall
je
sbb
rclb
inc
sahf
pop
popf
stos
push
jbe
cmc
in
xlat
js
dec
in
cmp
loope
repnz
sbb
pop
add
arpl
jb
int3
mov
xor
or
sbb
pop
inc
push
std
scas
movsl
mov
inc
fwait
mov
cmp
das
cmp
inc
das
loop
lret
sbb
mov
clc
and
adc
les
subb
or
fs
mov
imul
adc
shll
cmp
and
call
and
aam
dec
lret
in
ficompl
and
movsl
mov
js
mov
xor
cmpb
inc
pop
incl
js
push
in
and
xor
adcl
inc
dec
push
sbb
andb
cwtl
mov
iret
xor
and
stos
adc
les
jle
xchg
notl
mov
mov
repz
aam
or
std
scas
insl
sub
lods
sahf
jge
pushf
sbb
xor
sti
mov
cwtl
aad
ljmp
aad
lcall
add
aaa
ret
add
add
cld
call
and
xchg
mov
push
xor
subb
adc
js
jp
adc
push
mov
and
cmp
fldl
lret
rcll
shlb
iret
aam
and
pop
andb
test
mov
out
pushf
call
adc
mov
je
cmp
fs
ljmp
sbb
cmp
scas
add
mov
outsl
lea
lods
inc
cli
cmp
add
pop
iret
pop
dec
jb
fs
insb
add
imulb
insb
call
dec
out
xor
jle
xlat
and
add
cs
inc
xchg
sbb
pop
xchg
int3
or
je
jp
je
daa
stos
jle
mov
mov
cmp
rcrb
fdivl
sbb
sbb
leave
stos
je
xchg
out
inc
test
push
mov
data16
mov
leave
mov
rcl
cmp
subb
aad
cmp
mov
mov
push
mov
lret
push
mov
pop
mov
les
and
dec
inc
bound
mov
sbb
fldl
xlat
ret
mov
mov
xor
jl
sti
cwtl
fstpt
sub
cmp
mov
lods
add
cmp
fdivrl
add
pusha
push
add
imul
fidivs
aaa
fisttpll
les
mov
mov
inc
inc
ficoms
push
and
in
sub
xor
aad
cwtl
int3
cmc
sti
jle
or
jmp
lods
aaa
jbe
out
and
in
cmpsb
popa
popa
push
ds
mov
test
test
into
xchg
adc
faddl
pop
mov
std
arpl
pop
aaa
in
mov
mov
pop
rcr
xchg
xchg
sti
mov
sbb
cmp
loopne
adc
pop
pop
nop
lret
in
dec
jno
shrl
adc
xor
jb
test
or
mov
sub
add
fwait
std
mul
iret
xchg
test
dec
lcall
lods
inc
data16
xchg
lea
xchg
loopne
jle
jno
fistpl
pop
or
fnclex
test
sbbl
sbb
mov
hlt
ret
ljmp
jecxz
push
and
or
fs
aas
push
scas
pushf
fstl
sbb
push
scas
in
push
push
scas
sbb
mov
mov
mov
lahf
or
sub
pop
lret
push
inc
sahf
adc
test
icebp
mov
jmp
leave
sub
in
pop
adc
cmp
cmp
xchg
dec
mov
xchg
imul
lgs
pop
jge
bnd
addr16
addr16
dec
jmp
inc
sahf
xchg
dec
in
sub
dec
in
sbb
mov
f2xm1
jmp
clc
add
inc
xor
xor
pushfw
lods
sti
ret
mov
add
xor
add
movsl
xlat
sbb
jns
inc
jae
ja
xor
or
pushf
xchg
xchg
test
adc
outsb
rolb
lret
in
pop
mov
je
adc
ret
loopne
imul
mov
cltd
aaa
cmp
mov
xchg
sbb
sub
stos
push
repz
lcall
xor
xchg
je
xor
jbe
add
popa
sbb
and
ja
push
ret
push
pop
es
xchg
push
jp
xchg
mov
cmovns
lods
sub
fldenv
ja
icebp
jecxz
test
mov
bound
push
inc
cli
decb
xchg
adc
dec
fisttps
and
and
clc
xor
dec
fwait
inc
fstp
sahf
dec
nop
cs
push
add
pop
iret
pop
push
bound
push
repnz
or
sti
inc
push
fimull
mov
stc
pop
sub
xor
addr16
push
adc
fimull
out
dec
and
lods
inc
xchg
jle
mov
jae
fisubrs
xabort
cmc
stos
dec
sub
inc
dec
pop
enter
daa
ja
gs
stos
xchg
and
cmpsl
popf
movsb
and
xor
push
hlt
lods
nop
push
pusha
xchg
into
out
stos
adc
out
bound
aam
cmc
popa
mov
pop
sub
ljmp
sbb
fisttps
sub
stc
dec
icebp
mov
cmp
scas
and
movsl
pop
shlb
int
jne
iret
mov
hlt
roll
mov
xchg
imul
cld
fcmovu
popa
cli
mov
pop
lret
cmc
fninit
in
mov
push
mov
push
jl
movsb
clc
inc
stc
pop
and
fwait
pop
inc
icebp
pop
push
jge
imul
pop
fwait
cltd
dec
inc
mov
pop
sub
mov
pop
outsb
test
sub
xchg
adc
subb
les
pop
ret
push
inc
neg
into
shrl
or
insl
cmpsl
or
xor
rcr
sar
pop
shlb
cmp
push
add
jnp
nop
lret
push
jp
lret
aaa
out
xchg
push
and
mov
and
push
rorb
mov
mov
incl
into
ja
xchg
and
lahf
dec
lret
ja
push
jle
mov
pop
mov
test
movb
jo
jo
add
stc
jge
xchg
insl
mov
in
pop
inc
fst
xchg
mov
in
push
mov
out
shrb
xor
and
push
mov
aaa
dec
sub
xchg
jecxz
lcallw
lcall
xchg
sub
cmc
xchg
lock
mov
push
in
sub
fdivrl
xchg
aam
pusha
test
pop
jg
or
rclb
sbb
bound
stos
inc
mov
jbe
bound
xchg
les
fsubr
jbe
lret
push
adc
jl
mov
outsb
xor
jmp
outsb
mov
mov
lcall
movsl
stc
fs
ficompl
outsb
fsubrl
xchg
push
and
push
cli
imul
outsb
call
adc
add
int3
pop
cmp
mov
cmp
das
cmpsl
sbb
jmp
add
shlb
adc
fwait
pusha
stos
mov
jb
xchg
mov
fiadds
cmpsl
and
dec
add
sbb
pop
aas
cmc
xchg
lods
push
arpl
mov
je
roll
andb
ljmp
cmpsb
pop
cmp
dec
or
or
jb
sahf
fsub
sbb
pop
aaa
jns
fsin
repz
movl
pmaxsw
adc
jecxz
cwtl
mov
paddusw
add
push
js
in
mov
jbe
sub
inc
xlat
arpl
jmp
mov
jmp
mov
cmpsb
orl
push
rclb
add
jae
pusha
pop
fisttpl
cltd
sub
lret
add
gs
xchg
inc
stos
fdivrs
or
out
xor
pandn
rol
xchg
lahf
and
adc
movsl
add
scas
test
add
inc
gs
popf
dec
leave
xchg
jle
dec
adcl
sub
push
xchg
jmp
imul
push
push
test
out
lahf
fmull
imul
pop
mov
outsl
dec
loop
xchg
imul
lods
insb
jle
sbb
cmp
mov
cmpsb
movsl
cmpsb
or
mov
add
loop
ret
adc
std
popf
cmpl
adc
sbb
repnz
dec
lock
test
xchg
mov
xor
jae
or
andb
dec
jl
push
test
mov
or
push
stc
imul
lods
xor
cmp
xchg
sub
push
xchg
dec
test
aaa
xchg
sbb
and
rorb
pusha
sbb
mov
daa
mov
inc
ljmp
daa
inc
and
cld
adc
mov
jg
mov
fldlg2
jecxz
fdivs
inc
xchg
out
dec
mov
mov
xlat
icebp
pop
repz
jl
push
jb
movsl
aad
out
and
out
cmpsl
adc
test
aam
ja
and
jne
sub
lds
xor
dec
dec
out
pop
or
cmp
daa
add
mov
test
clc
and
int3
push
inc
cmp
xor
aad
xchg
daa
stos
inc
insb
dec
dec
mov
leave
aas
sub
or
mov
push
push
pushf
pop
pop
sbb
cmp
cltd
loop
and
add
or
loopne
lods
sbb
bound
adc
test
test
mov
jl
add
mov
push
test
and
jbe
int
sbb
decl
shl
push
and
push
cmp
sbb
mov
xchg
push
out
fmuls
or
outsb
sbb
fwait
push
sbb
and
cmp
out
mov
xchg
sbb
xlat
xor
add
mov
mov
js
mov
imul
mov
es
in
push
add
pop
cmc
push
nop
enter
or
js
es
pop
and
xchg
cmp
rolb
jb
out
ljmp
fwait
loop
xchg
mov
cmp
pushf
out
pushf
loopne
notl
and
adc
cmp
jmp
jmp
jp
and
lret
mov
push
clc
lret
jge
ficompl
sub
movhps
imul
xor
adc
mov
mov
inc
cmc
xchg
sbb
cmpsl
lahf
arpl
aaa
push
push
data16
jg
push
jge
mov
sbbb
sbb
pusha
pushf
and
and
cmp
aas
pop
nop
adc
dec
aam
ja
push
cmp
fidivs
rorb
add
dec
xor
dec
cmp
dec
aad
cmpsb
iret
shl
out
and
ja
cltd
int3
adc
or
xchg
packsswb
jo
in
sub
addr16
pop
jle
cmp
cld
or
icebp
shr
into
mov
in
pop
cli
sub
mov
inc
inc
or
sbb
fisttps
or
sahf
cmp
mov
push
daa
xstore-rng
cmpsl
mov
aad
xor
das
push
sub
cs
xchg
jbe
call
test
push
sbb
loope
cmp
pop
xchg
push
inc
jno
sub
roll
dec
cwtl
test
cwtl
mov
mov
jnp
inc
jl
cmc
sub
fs
cmp
fs
rclb
and
clc
inc
loop
sbb
lock
fisubl
shll
js
jb
imul
fstp
mov
bound
fisubl
mov
jmp
mov
ss
pop
popa
xrelease
cwtl
push
in
cli
adc
jno
movsb
je
xchg
hlt
cld
dec
fldenv
mov
cmc
adc
jne
mov
mov
or
dec
inc
gs
data16
ja
leave
loop
out
cmp
es
fldt
insb
cmp
pushf
sub
rclb
pop
enter
mov
out
mov
fwait
and
test
xchg
lea
xchg
gs
cmc
cli
fs
push
inc
loopne
ret
push
push
sub
movsl
out
sub
movups
push
out
inc
addr16
mov
push
dec
mov
pop
int
xlat
hlt
imul
xchg
inc
push
ja
sbb
push
inc
add
or
mov
or
popa
lods
icebp
imul
addb
sbb
jg
mov
ret
jne
stc
in
sub
xchg
xchg
xor
movsl
test
cmp
add
jg
repz
inc
mov
dec
arpl
int3
adc
cmpsb
mov
iret
push
cmp
rol
test
pop
xor
sbbl
andl
push
pop
jg
cmovno
call
ljmp
xor
jbe
rorb
mov
mov
jmp
adc
dec
les
xor
in
jo
in
out
cmp
xor
imul
pop
push
hlt
js
in
lods
movl
mov
push
dec
icebp
imul
xchg
adc
inc
insl
add
das
stos
out
scas
mov
sbb
adcb
and
fs
fmull
sbb
out
repnz
mov
mov
push
sti
xchg
cmp
jno
xor
push
outsb
pop
test
push
push
mov
cmp
dec
outsb
les
and
popf
pop
adc
push
push
lcall
adc
pop
out
pop
div
sub
sahf
in
or
cmpsb
das
pop
sub
shll
push
mov
push
iret
mov
push
mov
sbb
mov
add
and
mov
into
mov
mov
mov
inc
addr16
xchg
loop
movsl
int3
lahf
or
sub
mov
adc
pop
push
inc
lea
pop
jbe
test
xchg
jnp
into
jmp
pop
and
fwait
and
iret
out
jmp
cmp
or
xor
adc
jb
jge
mov
sub
popf
sub
cli
pop
sub
xchg
aaa
add
pushf
xor
adc
mov
jne
pop
insb
xor
mov
sbb
or
lea
lcall
mov
scas
arpl
push
cmc
insb
fidivrl
ljmp
ljmp
jge
insb
lods
ds
dec
xchg
jp
insl
and
test
rcrb
xchg
push
pop
pop
mov
jns
mov
test
sbb
or
fimull
ret
cmp
and
test
adc
xlat
popa
xchg
out
ljmp
and
test
and
jb
dec
cmp
loope
int3
sbb
dec
unpckhps
sti
movsl
test
add
hlt
popa
scas
das
push
xor
test
js
mov
xor
jb
and
and
dec
vmovapd
add
mov
je
xor
bound
inc
icebp
dec
sbb
imul
mov
iret
xchg
leave
imull
xor
jae
xchg
mov
xchg
out
xchg
pop
das
addr16
dec
test
sub
stc
xchg
dec
repz
ja
scas
inc
push
lret
cmpl
cmc
cltd
cmp
lcall
dec
inc
or
ja
xlat
inc
lods
insb
outsl
sub
pop
sbb
loopne
xchg
xchg
adc
call
cmp
push
int3
pop
ret
lods
xchg
mov
mov
mov
es
push
mov
sti
xor
les
ret
in
in
xchg
xchg
in
out
dec
jb
cmpsl
dec
mov
jmp
jnp
decb
lock
in
inc
loopne
lahf
xchg
jp
dec
mov
xor
pop
js
ficoml
nop
out
rorb
push
popw
pop
pop
subl
sahf
mov
adc
pushf
out
mov
repnz
dec
pop
mov
out
sub
out
xor
pop
pushf
sti
test
mov
inc
mov
inc
inc
jg
pop
cmp
lds
int3
mov
adc
test
shll
js
aam
imulb
xchg
xchg
enter
dec
and
xor
lret
sub
insb
adc
je
mov
mov
int3
push
fwait
outsl
pop
push
xchg
fistpl
movsl
push
test
hlt
rol
or
cwtl
stc
inc
inc
cmpsl
add
pop
pop
cmc
movsb
push
mov
mov
sbbb
fldenv
jg
and
cltd
xchg
xor
mov
lds
call
push
fs
cwtl
cmp
cli
mov
jns
xor
hlt
aaa
movsl
lods
adc
nop
lock
push
adc
sbb
dec
movsl
icebp
mov
int3
mov
loop
inc
test
ret
sub
lock
shl
out
cltd
jns
out
sub
cli
sub
adc
ja
daa
jae
cmpsl
outsb
jmp
and
sbb
jns
sti
fdivl
bound
jb
xchg
test
int3
insb
xor
adc
mov
out
xchg
aaa
xor
rcl
mov
push
lret
xchg
inc
fimull
dec
inc
xchg
outsb
ret
adc
dec
ljmp
pop
and
in
and
aam
xchg
in
jp,pt
jg
js,pt
mov
sub
sub
add
add
sub
lods
xor
mov
ja
mov
sub
loop
mov
sub
pushf
and
sub
cmp
sbbb
aas
popf
inc
lahf
sub
sub
jl
mov
std
int3
loop
or
mov
adc
xor
cld
insl
xor
insl
call
mov
das
dec
test
jns
mov
aaa
or
frstor
clc
jnp
xor
sbb
mov
mov
inc
enter
push
cltd
cmpsl
mov
lock
sti
sahf
inc
testl
nop
setge
lret
mov
pop
xchg
jecxz
mov
sbb
ds
test
jns
mov
lret
mov
xor
or
aas
or
fildl
xchg
cld
xor
loopne
movl
and
ljmp
lret
es
lahf
popa
leave
bound
addr16
mov
outsl
fidivrl
mov
sbb
push
out
xchg
movmskps
or
aam
scas
pop
loopne
mov
sbb
sub
cmp
loope
mov
bound
pop
icebp
test
push
jmp
sbb
scas
and
sar
ficoml
xchg
mov
inc
pop
xchg
push
pusha
sub
movb
fsubrl
outsl
scas
mov
cmp
enter
aas
sbb
dec
loop
push
mov
sbb
andl
adc
push
in
xchg
add
xchg
outsb
loope
mov
or
movsb
mov
addr16
flds
xchg
scas
das
sub
pusha
push
lahf
mov
xchg
jns
jne
xchg
and
sub
cmp
add
push
jbe
cmp
lahf
sub
out
bnd
in
pop
je
pop
cld
mov
xchg
xchg
scas
mov
popf
inc
ficoms
stos
sub
jmp
in
xchg
pushf
lahf
mov
rcrl
adc
push
jmp
mov
out
out
sbb
shl
xor
lds
shll
ret
addl
mov
loope
cmc
jmp
xor
cmpsb
loope
popf
sbb
sahf
mov
mov
out
dec
test
pushf
xchg
mov
sar
or
sub
ror
rcr
xchg
cmp
ljmp
sbb
ficompl
scas
leave
imul
daa
int
add
add
pop
push
mov
lret
in
xor
cwtl
pop
outsl
sub
push
jno
mov
add
cmpsb
outsb
cmp
mov
inc
out
inc
out
jp
aas
jns
in
add
out
jbe
ret
xor
mov
lock
sub
in
xor
stos
add
pop
rcrl
arpl
mov
dec
jl
push
pusha
test
sbb
inc
add
inc
repnz
test
add
inc
sub
repnz
ret
and
sub
stos
cltd
pop
jae
cltd
scas
pushf
push
lcall
and
loopne
xchg
mov
das
mov
jp
mov
sbb
add
jecxz
call
sub
sbb
icebp
test
sahf
jne
and
enter
and
mov
sahf
and
push
jnp
jnp
rorb
pusha
inc
cs
mov
int3
jmp
mov
adc
mov
jbe
ja
lret
cmp
push
out
and
dec
xor
lods
iret
ret
daa
ret
adc
imul
lock
sbb
in
ljmp
mov
scas
rcl
inc
in
out
mov
add
imul
or
xor
js
mov
sub
lahf
std
or
add
fsubs
add
xchg
cmp
adc
gs
sbb
cwtl
leave
int3
or
dec
adc
test
mov
jmp
in
lret
je
push
xlat
jmp
xchg
or
inc
push
iret
jl
aad
and
mov
or
pop
les
mov
pop
add
test
sub
mov
out
aas
and
jae
mov
sbb
mov
roll
clc
movsl
xchg
pop
subb
test
dec
mov
pop
jne
decb
push
pushf
cwtl
or
insb
ret
or
pop
lahf
pop
inc
mov
scas
icebp
fadds
xchg
cmp
loop
push
or
xor
mov
icebp
push
jae
loop
ficomps
xchg
mov
lods
xchg
js
pop
shrl
sub
nop
fs
ret
fldt
hlt
and
jns
cmp
sub
mov
jg
add
nop
bound
cmpsl
mov
cli
and
mov
xchg
popa
fdivl
add
rcrb
aad
pop
push
cmp
aam
cmp
adc
insb
push
and
mov
sub
mov
pop
clc
int
jecxz
dec
loopne
jecxz
cmpl
hlt
inc
dec
xchg
push
int3
xchg
sbb
push
inc
sahf
cs
loop
mov
push
inc
mov
adc
lea
jo
fistpl
std
add
les
sbb
jo
out
jnp
imul
inc
and
sub
outsl
jl
xchg
insb
jns
add
xchg
add
xlat
lods
cmp
aaa
cmpb
push
mov
imul
xor
jmp
lahf
lods
imul
add
out
mov
add
lcall
add
repz
fdivs
inc
cmc
es
mov
lods
fsubl
push
pop
inc
lcall
outsb
sub
dec
or
es
notb
or
inc
sub
mov
dec
outsb
dec
ret
ds
shr
xchg
pop
gs
mov
mov
jmp
dec
dec
imul
sub
cmc
xchg
in
stc
out
mov
mov
mov
stc
xchg
mov
test
mov
int
sbb
cli
pop
fcmovu
mov
imull
push
rorb
dec
jbe
mov
or
bound
cmp
mov
add
push
and
mov
fs
repz
adc
pop
in
sub
mov
cltd
ret
cmp
pop
mov
adc
outsb
sti
push
push
cmp
iret
rorl
sub
sbb
or
pop
dec
lcall
mov
repz
and
jns
jle
pop
adc
cwtl
es
push
xor
cli
mov
add
sbb
dec
push
mov
ljmp
ja
mov
pop
lods
inc
xchg
in
mov
and
sbb
or
mov
loope
mov
lret
dec
pop
lret
sti
iret
frstor
jbe
in
jno
stos
add
sub
inc
call
mov
mov
subl
cld
das
lds
dec
jmp
enter
xor
ret
push
jg
xor
jle
test
arpl
sbb
push
cmp
iret
jne
test
sub
cmp
repz
xchg
daa
les
ljmp
ds
mov
or
and
sbb
mov
or
jbe
mov
inc
insl
clc
add
xlat
pop
stc
ljmp
pusha
pop
ficoml
add
notb
cwtl
cwtl
call
ret
jmp
cli
outsb
adc
xchg
xchg
mov
ror
push
scas
add
xchg
mov
mov
add
inc
xchg
xchg
mov
loope
mov
or
notl
xchg
pushf
pop
mov
stos
push
mov
lahf
cmp
push
test
stc
sub
push
jbe
jmp
jo
jp
scas
stos
add
repnz
jge
xchg
cmc
xor
jmp
andb
dec
das
std
or
stos
pop
push
popf
sbbb
jp
in
into
outsl
or
sub
jp
xorb
mov
fwait
test
imul
cmp
lret
aad
into
ds
faddl
add
mov
pushf
jg
push
pop
mov
pushf
push
fbstp
inc
into
sbb
xor
clc
bound
inc
jae
sub
add
in
cmp
cmc
xor
seta
into
aad
jnp
sahf
or
xchg
fs
lods
icebp
jae
cld
stos
jo
dec
out
popa
enter
or
imul
or
dec
loopne
popa
mov
pusha
out
jo
push
hlt
pop
lds
jne
add
testl
pushf
dec
xchg
xor
imull
flds
ror
insb
mov
cmc
popa
test
cwtl
hlt
add
xchg
jg
testl
sahf
fnstenv
fadd
xor
fcoms
jmp
les
mov
addr16
sub
cmpsb
push
mov
fwait
add
mov
lods
clc
fildl
adc
jnp
jg
cmp
mov
sub
and
mov
cmp
mov
push
scas
movsl
fmuls
into
push
xchg
jp
mov
lret
push
pop
fcompl
adc
lock
mov
sbb
push
hlt
push
je
test
jle
xlat
mov
or
sarb
movsl
dec
insl
loope
fnstcw
repz
xchg
or
imul
inc
adc
and
pop
sbb
imul
mov
adc
pop
ja
test
mov
inc
mov
add
add
pusha
fistpl
dec
enter
outsb
int3
inc
and
push
pop
sub
mov
stc
cmp
jge
bound
jno
int
pop
aas
repnz
xchg
sbb
adc
add
xlat
int
cli
fucomi
cmp
in
push
mov
jmp
ja
sahf
arpl
jmp
sbb
pusha
fnstsw
and
lock
ljmp
aad
jnp
jle
mov
cmp
push
mov
mov
loop
test
push
shrb
push
xor
or
adcl
lret
dec
stos
addr16
inc
or
ds
push
xchg
inc
data16
fbld
test
sbb
push
or
lods
les
push
push
arpl
inc
cmp
aad
mov
je
xchg
sbb
into
xor
clc
push
add
clc
daa
add
in
mov
mov
clc
jmp
fisttpl
jnp
push
jge
push
std
add
lahf
outsb
popf
cltd
pop
cwtl
mov
stc
push
mov
repz
fsubrl
pop
or
mov
cmp
cmp
push
test
aas
pop
xchg
mov
mov
test
sbb
shll
adc
dec
aas
pop
xchg
add
cmpsb
push
adc
pop
push
testl
mov
push
dec
mov
gs
jnp
iret
cmp
cmp
add
jno,pt
push
mov
test
jmp
jnp
xchg
mov
decl
or
and
xlat
sbb
inc
pop
xchg
addb
loope
sbb
pop
iret
pop
jnp
inc
cltd
mov
xchg
mov
scas
ret
vminps
shlw
cmp
xchg
int3
adc
decb
or
jbe
dec
aaa
dec
jge
lret
jns
and
inc
lahf
xchg
mov
mov
adc
dec
dec
lods
dec
cld
sbb
gs
dec
ret
addb
cmpsb
fildll
test
inc
pop
mov
cs
out
fistpll
add
pusha
sub
lods
push
lods
pop
add
add
add
mov
bound
les
sbb
adc
adc
inc
mov
out
push
enter
sub
pop
fwait
adc
dec
mov
xchg
loope
inc
cmc
aas
popf
jl
ficompl
pushf
out
adc
mov
push
pop
push
mov
movsl
mov
ret
cmp
stos
inc
fldcw
pop
or
in
ret
jns
cmp
in
push
dec
dec
in
jns
xor
ror
push
mov
xchg
jg,pn
xor
arpl
sbb
inc
aaa
pop
adc
lods
icebp
popf
gs
pushf
add
movsl
mov
test
mov
test
in
push
stc
out
mov
adc
adc
or
ret
shl
nop
fldl
sbb
popa
mov
mov
add
fs
push
shll
push
sub
xchg
addr16
push
ret
pop
movsl
push
ret
mov
sub
lret
pop
loope
push
pop
insb
push
popf
stc
or
inc
fcompl
jmp
cmpsl
push
push
mov
fsubr
add
insb
mov
xor
pop
and
shl
jg
test
dec
fwait
lahf
cs
in
pop
je
add
mov
sub
jp
es
aaa
icebp
cs
dec
xchg
sub
dec
add
mov
iret
sub
fs
jl
push
pushf
mov
mov
std
xchg
xchg
outsb
ss
pop
stos
and
outsl
inc
rcr
ja
ror
pop
jb
pop
sbb
mov
outsb
pop
shrl
xchg
rolb
and
xor
pusha
mov
xchg
dec
push
push
dec
test
mov
clc
dec
sub
shl
sub
lods
je
xchg
and
cmc
sbb
lcall
jmp
cmp
rcr
or
pop
sbb
push
shl
in
sub
mov
mov
push
add
nop
dec
out
mov
lahf
lret
inc
lcall
jmp
js
repz
repnz
xlat
inc
sbb
out
sub
sbb
mov
fadds
out
ss
xchg
in
pop
adc
adc
inc
mov
lea
pop
out
lea
xchg
jl
inc
ja
leave
mov
pushf
iret
loopne
test
outsl
ja
mov
push
pop
cwtl
mov
mov
imul
jge
idivl
adc
ficoml
subb
dec
icebp
dec
inc
fs
insb
pop
jns
fiadds
int3
pop
mov
pop
xchg
rcl
pop
stos
jge
or
add
divb
mov
and
in
stos
inc
sbb
jg
pushf
fwait
add
jmp
outsb
bound
mov
xchg
lret
sub
dec
inc
stos
int
jb
dec
loopne
movsb
xor
jne
cld
aaa
pop
adc
xor
dec
outsl
call
sbb
push
pop
scas
mov
inc
outsb
lret
push
mov
adc
pop
ja
cmp
lcall
pop
cmp
std
or
scas
or
sarl
test
push
xchg
fstl
mov
pusha
push
pcmpgtd
adc
int
pop
cmp
pushl
inc
cmp
repz
gs
inc
mov
ds
lea
adc
call
jle
lods
je
sub
inc
xchg
dec
mov
out
xchg
pop
dec
mov
fwait
test
xchg
dec
pop
push
push
mov
push
inc
xchg
jns
push
arpl
movsb
sbb
push
mov
sti
mov
xor
mov
sbb
mov
pop
adc
cli
xchg
xorb
sbb
stos
std
sub
mov
mov
fdivrs
cmp
stos
dec
js
mov
inc
or
inc
mov
dec
mov
inc
or
sbbl
sub
aam
pop
rorl
pusha
imul
jmp
xor
psubd
in
pop
mov
in
dec
push
and
push
loope
sub
sti
hlt
xchg
xchg
add
pop
pushw
in
cmpsl
mov
int
or
pop
notl
mov
fstl
push
out
pop
fcmovnbe
push
aas
fstpl
push
cmp
and
mov
lods
jp
rorb
dec
push
movsl
xlat
pop
xchg
in
jne
inc
insl
push
mov
hlt
add
scas
jno
pushf
jecxz
dec
add
mov
arpl
xchg
xchg
jae
loopne
pop
into
lcall
lods
cmp
nop
sbb
fsubs
xchg
pop
push
push
pushf
jge
mov
subb
dec
xor
or
bound
mov
and
mov
push
stos
es
push
xchg
xchg
stos
sub
cmpb
and
cltd
jg
cmpsl
test
pushf
mov
cmp
dec
ficoml
pop
mov
scas
xchg
out
cmc
dec
popa
push
push
inc
mov
imul
sub
mov
xor
cmp
mov
ss
ret
jo
mov
sbb
out
lahf
dec
fldcw
sbbl
outsb
inc
inc
sub
jae
pop
fcom
cmpsb
push
mov
ljmp
xchg
push
xchg
shlb
shlb
insb
xchg
jns
adc
fsubrs
imul
pop
add
lds
test
jmp
pop
and
push
les
jnp
push
outsb
mov
call
sbb
in
xor
inc
jne
adc
scas
pabsb
movsb
xchg
xchg
push
jb
lds
icebp
iret
mov
cmpsl
mov
jbe
xchg
into
fidivrs
cmp
and
sub
push
cwtl
jmp
push
push
sub
cltd
ficoml
fstps
out
ja
jo
js
insl
rclb
dec
popa
cmp
das
xor
mov
or
jno
icebp
loopne
sbbl
shll
pop
pop
out
lds
mov
jmp
mov
lea
loop
mov
mov
test
mov
je
cmc
mov
clc
xchg
test
xlat
adc
push
adc
fwait
or
ret
add
outsl
sti
xchg
xor
mov
sub
ret
mov
test
push
imul
push
sub
fsubrl
dec
sti
insl
mov
mov
mov
arpl
stos
jns
out
rcll
adc
jmp
sbb
ljmp
dec
dec
push
push
push
fbstp
sbb
inc
movsb
dec
ljmp
mov
pop
push
in
movsb
ja
int
nop
out
pusha
and
fdivrl
push
add
aad
xchg
sarb
data16
ds
sbb
sub
addr16
js
mov
rorb
push
mov
dec
jmp
mov
or
sub
pusha
pusha
lcall
jecxz
mov
inc
mov
pusha
int
dec
add
in
lods
fs
jle
push
or
les
xchg
and
int3
shrl
cmp
dec
fldenv
xor
mov
push
dec
loop
adc
add
adc
ret
mov
inc
push
add
xchg
cmp
out
cmc
add
inc
out
xor
xchg
pop
jg
imul
jo
add
inc
or
incl
sub
gs
xchg
int3
les
bound
scas
imul
loope
in
cltd
imul
roll
out
cmp
cwtl
in
jae
mov
ror
insl
or
adc
gs
cmp
pop
enter
es
imul
pop
leave
rcll
stos
stos
mov
orl
add
sbb
sub
cmpsb
scas
xchg
or
pop
shlb
cmp
icebp
clc
xchg
push
xlat
mov
sahf
into
js
fidivrl
or
dec
dec
into
iret
push
hlt
inc
dec
push
ret
sahf
lret
pop
push
icebp
repnz
push
jae
jecxz
ss
std
mov
adc
inc
ja
fsubrs
cmpsl
add
repnz
or
add
push
ficoml
cmpsb
push
inc
fs
cmpsb
fdivs
decb
and
in
aaa
fisttpl
pop
rol
popf
inc
lret
test
gs
pop
ds
jg
jl
into
fildll
scas
jmp
out
mov
scas
sub
mov
out
cmp
bound
and
leave
andb
or
mov
gs
lods
and
jg
inc
aam
out
pop
push
mov
jmp
lahf
std
loop
rclb
mov
lahf
inc
daa
push
xchg
lret
cmpsl
xor
mov
fcompl
fs
jmp
rcl
dec
js
jbe
fwait
pop
in
sbb
pusha
aam
adc
subl
or
dec
loope
lock
and
fldt
jbe
cwtl
xchg
mov
adc
stos
cmpsl
mov
cmp
mov
pop
insb
jg
bound
push
les
fadds
or
scas
and
fwait
mov
inc
scas
xor
lds
jo
out
adc
add
cli
sub
repnz
push
mov
fisttpll
sarb
mov
mov
add
fwait
mov
gs
fsts
add
js
ficompl
push
orl
icebp
ja
mov
sub
hlt
aaa
sahf
out
jae
pop
gs
jae
mov
pop
mov
xor
mov
mov
scas
sub
mov
dec
loopne
dec
rorb
sbb
push
mov
dec
test
je
dec
dec
mov
in
sub
je
pop
xchg
fwait
orb
lea
mov
out
push
mov
movsl
pop
test
dec
lea
adc
js
fildl
pop
pop
bound
sbb
rcll
mov
xchg
scas
mov
inc
movsb
repnz
push
std
sub
mov
mov
add
jne
jge
lock
imul
mov
xchg
pop
sbb
push
decl
outsl
sub
dec
xor
adc
sub
imul
jae
cmp
dec
aaa
rcr
fdivr
mov
sbb
push
dec
enter
fdivs
inc
int3
mov
mov
mov
mov
test
mov
das
jae
add
movsl
data16
sbb
leave
dec
clc
add
mov
out
mov
fnstenv
cwtl
leave
jg
pop
adc
sbb
cmp
cld
pop
push
pop
sub
mov
jge
loope
lds
sbb
mov
cmp
cmc
fadds
or
push
movsb
nop
xor
fmuls
mov
sbbl
je
ja
jle
paddq
jbe
mov
jl
les
sub
mov
lahf
loopne
pop
mov
fnstenv
cmp
fimull
pop
into
dec
into
gs
mov
mov
or
cmp
xchg
lods
lahf
mov
mov
sub
in
ja
jp
mov
imul
or
shl
mov
ja
repz
roll
mov
stos
xchg
push
jmp
dec
xor
rcrl
iret
add
jle
dec
lods
and
xchg
and
imul
roll
mov
jge
lea
pushf
das
enter
mov
sub
pop
clc
fdivr
mov
xchg
pop
xchg
outsl
mov
mov
lcall
es
mov
inc
fnstenv
into
popw
cli
clc
loope
in
pushf
leave
and
test
inc
lea
mov
adc
cltd
int
rcl
stc
in
pop
fnstcw
pop
loop
insl
lea
jl
fdiv
sbb
call
dec
mov
loop,pt
push
adc
and
xchg
fcmovne
je
fs
fcomps
mov
les
xor
hlt
xchg
ret
xchg
pop
ljmp
inc
mov
arpl
mov
loope
or
sub
into
lods
shlb
sbbl
lcall
push
jns
push
add
jle
mov
out
arpl
jnp
sbb
mov
stos
and
fwait
push
dec
push
sbb
jge
dec
inc
in
pop
adc
and
addl
pop
das
int3
leave
cwtl
lods
aas
xlat
in
into
cmp
js
fdivs
mov
dec
sti
adc
jmp
mov
out
mov
fadds
dec
lock
adc
dec
cmp
in
cmpl
add
mov
gs
pop
scas
lock
jns
fiaddl
sahf
je
movb
xor
add
shl
ja
pushf
clc
repnz
push
mov
sbb
pop
mov
xchg
dec
popf
adc
inc
scas
lahf
dec
pop
and
xchg
mov
addr16
leave
scas
mov
inc
xchg
dec
or
test
adc
lds
andl
arpl
scas
sub
pusha
fstpt
out
pusha
jo
movsb
fsubrs
xchg
clc
outsb
mov
notl
dec
push
sub
outsl
mov
push
mov
cld
outsl
insl
ljmp
inc
shlb
call
cmp
mov
repnz
mov
orb
pop
lods
das
cmp
adc
add
and
sub
sbb
fwait
pushl
mov
and
pop
add
xchg
add
jmp
out
sahf
ja
add
je
mov
pop
xor
daa
push
xchg
or
mov
fsubrs
cltd
xor
mov
nop
pop
mov
mov
adc
push
jl
std
sahf
push
jg
imul
test
sbbl
jb
inc
inc
cmpsb
jbe
fcompl
add
std
and
in
sti
adc
xor
mov
xlat
movsl
movlps
cmp
mov
imul
cmp
mov
pop
int3
cs
push
mov
fdivl
and
ja
hlt
rol
repz
push
fnsave
ret
pop
insl
mov
pop
pop
cmp
fimull
xor
and
jae
mov
xlat
cmpsl
adc
lods
lea
rolb
push
in
adc
xor
aad
inc
xor
ljmp
add
js
dec
sbb
mov
push
jecxz
pop
cmovno
cld
fsubs
sbb
sbb
dec
mov
xor
pop
add
xor
dec
dec
pop
outsl
jmp
cltd
lret
push
sub
fnsave
mov
inc
and
add
in
lods
sub
jo
push
mov
incb
aam
dec
pop
mov
je
outsb
mov
pop
xor
rorb
test
pop
inc
jg
ja
std
jg
or
jle
aam
cmp
sub
lret
int
dec
lret
shrl
rcr
adc
rorl
xchg
or
data16
xor
dec
scas
cmp
ja
jno
out
mov
addl
iret
xchg
sub
cmp
mov
out
je
call
dec
bound
dec
addb
jbe
add
adc
mov
mov
adc
movsb
jl
stc
ret
popf
push
cmp
flds
movsl
cld
test
frstor
jg
mov
push
bound
cmp
jecxz
jnp
push
add
fs
pop
mov
stos
adc
and
jl
shl
xor
iret
ljmp
xor
add
mov
mov
sti
aas
fldl2t
push
push
fs
cmp
mov
or
pop
shrl
nopl
lret
and
add
cmp
scas
xchg
jge
ljmp
and
lahf
jg
fxtract
mov
mov
rcrb
popf
mov
push
sbbb
cli
cmp
in
fs
out
mov
into
push
inc
cmc
jl
repnz
fs
test
xchg
imulb
mov
notl
push
jg
sub
fisttpll
cli
sub
mov
ljmp
push
pop
push
loopne
fistpl
jecxz
sbb
fs
iret
int3
inc
rcl
push
jmp
mov
ficoms
ljmp
or
daa
xchg
cs
add
mov
push
std
fldl2e
jae
out
sbb
add
adc
incb
push
imul
loope
out
std
mov
lret
inc
inc
arpl
out
mov
sub
push
sbb
sub
out
lock
pop
pop
mov
lcall
dec
dec
jae
ficoml
rolb
add
push
icebp
mov
xlat
pop
dec
fimuls
cmp
sahf
dec
add
dec
hlt
push
mov
xor
mov
rcll
or
sarl
rcrl
out
mov
and
sub
std
insl
hlt
daa
hlt
call
les
fisubrs
sbb
pop
popf
jmp
sub
push
jnp
hlt
sarb
sbb
and
out
jo
and
sbbl
das
pop
jg
call
sub
mov
shld
xchg
cmpsl
ds
loopne
das
mov
insl
imul
aas
mov
out
in
sub
std
jns
mov
push
inc
and
clc
pop
xor
cs
lds
xchg
dec
incb
xchg
imul
outsl
test
addl
stos
scas
add
mov
push
mov
fstpl
gs
lcall
and
adc
out
push
and
dec
push
pop
jne
cld
pop
rolb
aad
push
iret
scas
mov
jl
jae
cli
mov
jp
test
mov
sbb
xchg
jno
push
ds
sub
or
cmp
xchg
pop
test
sbb
mov
sub
dec
cmpsl
mov
cs
dec
sbb
loope
rclb
mov
cmp
iret
ljmp
pop
sub
and
fnstenv
sbb
test
jnp
dec
xchg
adc
in
mov
popa
inc
mov
push
subw
negl
jge
sub
sub
fwait
mov
pushf
or
ds
adc
push
jg
cmpsb
aad
mov
cmc
mov
test
pop
xlat
sbb
sbb
fucomi
xchg
leave
sub
lahf
out
xchg
icebp
sar
sub
stc
les
inc
sbb
or
xor
mov
sbb
in
xor
mov
stc
mov
jo
inc
mov
inc
sub
mov
cmp
call
push
sarl
cmpsl
mov
mov
movsb
cli
aas
aas
cmpsb
push
pminub
shlb
dec
adc
add
inc
cs
fistpll
jbe
into
xchg
mov
add
inc
xor
insb
mov
xor
loop
lea
dec
xchg
pop
push
add
mov
mov
pop
jge
pusha
in
sub
cmp
lods
pop
xorb
push
fisubl
mov
xor
int3
add
ja
fmulp
mov
jb
aad
cltd
xor
mov
popa
jge
ficoms
xor
lahf
fucom
rolb
xchg
adc
mov
scas
add
cmp
mov
jl
xor
and
inc
int
jno
cmp
cld
mov
shll
sbbl
pushf
rcrb
andl
push
xor
add
outsl
push
xchg
mov
out
jg
insl
mov
xor
sub
pop
pop
in
lret
int
xchg
xor
push
rclb
push
or
mov
inc
xchg
inc
cmp
dec
cs
mov
or
add
xor
in
out
inc
fldl2t
test
popl
fistps
icebp
fdivrs
pop
int
ret
in
js
cmpsb
inc
aaa
scas
out
popa
inc
or
fidivs
xor
mov
int
outsb
je
mov
xor
fistps
in
sub
addr16
xchg
jle
jg
pop
repnz
sub
pop
imul
adc
enter
arpl
fwait
mov
clc
and
mov
inc
cltd
xor
push
rcll
fs
push
fmull
jge
leave
cmp
repnz
sub
out
int3
mov
movsl
les
sbb
mov
and
mov
cmpsb
xchg
cmpsb
fisttpl
jns
add
daa
jae
inc
rclb
dec
inc
bound
xor
das
xorb
push
shll
push
inc
dec
xchg
inc
ret
inc
pop
mov
jmp
xchg
push
ds
arpl
jno
push
jmp
addr16
jl
mov
push
insb
and
pop
test
rcll
dec
rol
cwtl
popa
sbb
fistpll
cmp
and
fldt
cli
jae
xchg
mov
mov
push
and
cwtl
push
popa
add
lea
jo
rcr
and
xchg
push
lahf
mov
sbb
shrb
jge
out
xor
jae
mov
jns
das
jl
dec
repz
push
test
push
bound
cmpsb
cmp
push
mov
xor
adcl
jb
xchg
daa
mov
clc
or
leave
popa
out
lcall
fisttpl
not
lock
jno
jbe
sbb
jmp
lods
inc
jns
out
fwait
test
xchg
jne
lods
orb
test
and
in
js
or
or
jge
pop
mov
push
int
jne
or
fbld
pop
mov
fisttpl
xchg
loopne
dec
dec
push
xchg
dec
or
push
mov
xor
mov
rorl
xchg
mov
ja
cmp
mov
movsl
scas
js
push
jbe
add
stos
cmpsl
daa
popa
xor
pop
xor
pop
sub
repz
push
imull
hlt
jb
mov
cmpsb
lahf
cmp
and
movsb
stos
pop
stos
outsb
mov
xor
div
push
xorb
xchg
push
or
ss
sub
xlat
lock
dec
and
push
jmp
and
loop
out
repz
dec
outsb
xchg
xor
sub
test
mov
mulb
out
push
mov
aad
movsl
out
imul
mov
sbb
sti
idiv
jle
or
add
in
push
xchg
fcmovbe
mov
aaa
sti
adcb
sub
cmp
lock
stc
lcall
jmp
bound
xchg
in
dec
pusha
rclb
sbb
sbb
pushf
mov
fnstenv
mov
add
push
and
repnz
mov
mov
ss
push
scas
push
jl
dec
xlat
sub
jg
adc
addr16
push
or
xchg
sbb
mov
adc
clc
dec
jmp
push
stos
dec
mov
leave
jb
cmp
fsubrl
mov
lret
punpckhwd
movsl
xchg
aaa
cltd
mov
dec
jb
fstpl
jecxz
pop
sbb
movsl
adcb
jle
adc
hlt
hlt
mov
adc
test
mov
repnz
adc
sti
out
test
jle
mov
xor
fbld
inc
xchg
xor
adc
jb
rclb
cmp
fcomps
movsl
mov
lret
or
loope
xchg
test
js
mov
cltd
out
push
std
sub
test
sbbl
add
push
es
inc
adc
hlt
mov
xchg
adc
out
cmp
call
push
cli
dec
mov
test
push
mov
inc
fcomi
scas
out
pop
adc
stos
xchg
stc
out
lcall
not
rcrl
fdivl
mov
xchg
int3
inc
fidivrs
mov
das
mov
or
mov
jle
jecxz
popf
sub
test
sbb
mov
jo
dec
ret
jb
rorl
push
or
movl
test
insb
shl
imul
cwtl
xor
lret
call
les
xor
icebp
jle
pop
frstor
push
cmp
or
push
popl
jmp
dec
int3
jns
out
aam
dec
call
mov
stos
xchg
loop
adcb
test
icebp
rorb
jae
sub
pusha
add
jmp
mov
or
shll
into
movl
cmpsb
nop
inc
bound
dec
aad
sbb
push
bound
pop
aad
iret
les
xchg
mov
les
adc
jmp
fisubl
test
ret
push
xchg
out
sti
cmpsl
jns
push
dec
lret
movsl
out
jns
shll
fwait
or
dec
arpl
adc
adc
fcmovnu
in
daa
mov
fisubrs
pushf
mov
xor
xchg
hlt
cmpsl
xor
les
inc
subl
add
push
dec
mov
es
xchg
cmpsb
divb
mov
sub
sub
lahf
push
mov
pusha
dec
clc
bound
inc
ja
hlt
dec
sbb
jle
scas
mov
loop
scas
mov
ss
xchg
push
xchg
repz
sbb
sbb
jne
push
les
ss
push
fsubs
es
cltd
arpl
jl
rcl
in
mov
xor
leave
sub
subb
mov
cmp
mov
lods
xchg
or
shlb
xor
add
aad
mov
jg
jbe
ss
push
push
sub
mov
mov
jmp
faddl
sub
pop
pop
stos
fidivl
inc
mov
rorb
push
pop
jecxz
loop
mov
adc
cmp
jbe
adc
dec
scas
and
stc
test
jnp
jno
in
pop
xchg
sbb
into
dec
or
fsubrs
int3
cld
cli
hlt
das
jmp
pop
fbstp
imul
mov
mov
sbb
fildl
dec
sbb
aad
sbb
lret
popf
imul
arpl
popa
or
dec
add
std
popf
in
push
lahf
and
jo
stos
fcoml
mov
push
xor
js
xor
sbb
iret
push
rcll
mov
aas
push
push
and
jmp
clc
and
sbbl
out
dec
rclb
and
inc
inc
push
clc
lds
or
jno
ss
xor
push
or
adcb
sbb
inc
xchg
std
mov
aad
cmp
xchg
xor
ss
movsl
push
lahf
or
or
sahf
scas
repz
sbb
ljmp
cmp
aaa
mov
jge
call
push
test
cmpsl
adc
xor
cmp
jle
rorb
lods
pushf
pop
fs
dec
cmpsb
mulb
aad
out
jmp
pop
stos
aad
lahf
sub
lock
add
jb
ds
sbb
pop
xchg
stc
stos
cmp
into
cmc
xor
or
repnz
add
mov
cld
aas
into
sbb
ret
ret
lret
or
lds
inc
lods
aad
mov
sub
fsubrl
daa
dec
and
and
ljmp
incb
shlb
test
xor
add
push
mov
push
rcrb
mov
sub
add
js
out
fistps
mov
lahf
sbb
mov
bnd
push
mov
sbbb
fisubl
ret
and
or
xchg
rorb
xchg
jecxz
popf
cmp
arpl
jnp
lods
mov
leave
jno
mov
fistl
mov
mov
push
push
out
icebp
sti
mov
call
jne
xor
pop
jns
mov
xchg
dec
iret
xor
push
arpl
popa
cld
fisubl
shll
nop
aaa
fdivrl
mov
popf
popf
jl
push
cmp
enter
mov
xor
std
in
sbb
xchg
adc
adc
adc
divl
mov
cmp
jne
fisttps
add
aam
scas
jb
dec
imul
out
sbb
sub
sbb
cs
and
xchg
inc
mov
push
loopne
mov
sub
xchg
mov
fwait
fs
ror
jmp
pop
adc
popf
mov
shlb
or
hlt
fcmovne
ljmp
fcomps
adc
pusha
inc
mov
mov
popa
xchg
xor
push
dec
js
cmp
fsubl
and
int3
imul
pop
stos
call
stos
pop
push
jnp
xchg
outsb
mov
pop
lret
test
loope
int
lods
mov
sub
in
xlat
movsl
mov
sub
inc
int3
data16
cmp
lcall
shlb
dec
xchg
aas
cltd
adc
je
dec
aas
aad
jns
leave
jb
ljmp
mov
gs
bound
dec
ud2
ds
jmp
sbb
ret
negb
pop
dec
pop
dec
mov
add
divl
icebp
or
cmpl
mov
pop
dec
fimuls
dec
movsb
vsubpd
dec
add
cmpsb
mov
and
adc
loop
repnz
or
fdivrl
or
mov
pop
call
dec
dec
sbb
ja
mov
pusha
addr16
in
adc
mov
rcrl
mov
jb
ficoms
or
mov
mov
ljmp
nop
cmp
push
push
insl
adc
lret
sub
out
in
pop
in
aaa
or
inc
out
mov
aaa
out
add
inc
mov
mov
sahf
fdivr
xorl
jnp
push
shll
arpl
add
dec
fistl
cwtl
pop
adc
inc
sti
push
mov
callw
dec
les
loop
mov
jo
fldenv
mov
adc
movsl
xor
sbbb
push
cltd
in
or
addl
fnstcw
test
test
aaa
mov
cmp
test
call
lcall
int
push
dec
fdivl
xchg
xchg
out
popf
cmc
jns
lret
shlb
daa
mull
mov
fimull
and
sti
xchg
sbb
rorb
cmp
shl
inc
call
in
int3
mov
popa
popa
sbb
sbb
dec
call
mov
xlat
sub
or
push
fstpt
notb
mov
dec
pop
mov
leave
jmp
fs
and
jl
sub
notb
popa
xchg
sbb
jo
and
popl
xorb
or
add
and
pop
jp
sbb
sbb
in
push
cmp
stos
cmp
bound
jne
aaa
push
inc
test
shlb
std
lret
xor
push
pusha
fidivrs
fnsave
inc
pop
test
mov
and
jns,pt
arpl
inc
int3
and
adc
jg
lcall
sbb
nop
sub
sub
divl
inc
test
flds
xchg
mov
scas
push
jle
lcall
jns
js
xchg
cmpsb
ds
inc
lods
test
dec
int3
test
std
insl
push
sbb
mov
mov
inc
mov
jae
lods
addr16
rcrl
pcmpeqw
mov
sbb
shll
fistpll
pop
aad
int
push
js
adc
xorb
cmpsb
stc
icebp
dec
out
push
mov
or
mov
int3
inc
mov
jmp
cmp
cmp
stos
pop
shrl
pop
shlb
jae
jecxz
ja
mov
cmp
push
jl
int3
enter
mov
xchg
repz
into
pop
mov
les
push
cmp
mov
push
cmp
jecxz
and
inc
push
icebp
push
xchg
stos
jnp
jg
add
addl
xchg
and
int
int
jo
pop
adc
push
je
pop
cmpsb
mov
leave
xchg
push
je
xor
cmp
clc
add
popf
fidivs
iret
xor
cltd
adc
jns
dec
scas
mov
sbb
sub
sub
cmpsl
pop
es
mov
mov
outsb
inc
xor
pushl
mov
cmpl
call
test
inc
jae
xor
inc
inc
movsl
mov
mov
movsl
pop
push
das
add
fists
mov
sahf
and
push
jmp
pop
jns
sub
cltd
shrw
mov
divl
cwtl
stos
icebp
ja
pusha
or
repnz
cmpsl
out
mov
xchg
imul
add
jb
pushf
jae
dec
xor
incl
xchg
xor
pop
add
inc
sbb
dec
rclb
pop
pop
cltd
insb
out
adc
mov
sub
sub
stos
mov
jae
dec
or
cmp
mov
xor
shrl
cmp
lret
mov
sahf
xchg
mov
ja
pop
sbbl
clc
inc
push
popf
and
jle
jne
sub
adc
and
push
or
jne
vpmovb2m
je
adc
sarl
scas
xor
cs
ss
sub
inc
lods
mov
rolb
add
and
cmpsl
jp
lods
mov
lret
outsl
mov
push
sahf
insb
mov
pusha
pop
jnp
leave
pop
shrl
inc
shrb
bswap
dec
xchg
std
xorl
mov
sub
leave
in
pop
mov
mov
out
fs
test
dec
mov
add
xor
jle
sub
ja
mov
fs
adc
lods
jg
xor
xchg
sub
lods
cmp
pop
sub
loopne
mov
aaa
fldenv
in
jns
aas
fistl
in
popa
pop
push
lods
mov
add
mov
and
push
cmp
nop
popa
or
pop
jmp
lods
adc
sarb
xchg
mov
mov
inc
shll
xlat
xchg
jge
insb
sbb
jbe
sti
stc
in
dec
in
fstl
mov
cmp
jp
rclb
in
sbb
sahf
sti
int3
sub
cmpb
sub
adcb
cmp
loop
or
fldl2t
adc
ret
ja
push
push
popa
pop
stos
sub
stc
mov
mov
inc
sub
fdivrs
add
jp
dec
cmc
jp,pt
cmp
std
jno
xchg
mov
mov
dec
std
push
aad
inc
ljmpw
mov
inc
and
mov
sbb
xor
jge
ljmp
scas
dec
lret
and
hlt
pop
pop
mov
cmpsb
clc
test
mov
sbbl
loope
adc
sbb
sub
mov
dec
lods
inc
dec
sub
jl
push
jne
hlt
xor
test
xor
pop
mov
inc
dec
sbb
sahf
and
mov
xchg
cmp
xor
jns
add
shlb
mov
lock
call
adc
sub
fisubs
mul
jge
addl
add
fcmovbe
pop
shlb
sarb
mov
dec
sub
fcom
inc
push
int
cmp
cmp
xchg
lods
idivl
pushf
cs
push
jmp
adc
mov
test
fcomps
ja
sub
mov
mov
xlat
fsubs
pop
test
mov
mov
dec
mov
mov
fwait
nop
dec
into
add
aas
loopne
xlat
stc
dec
cwtl
adc
dec
fsubl
or
out
jnp
fidivs
mov
rcrl
pop
punpckhdq
mov
xor
out
addr16
push
aas
pusha
imul
or
test
in
jmp
inc
shll
lahf
pop
cmp
inc
ds
add
sbb
mov
mov
jl
int
xchg
sbb
sub
push
pop
or
lret
scas
sbbl
jp
jp
popf
sub
adc
sbb
mov
in
enter
flds
idiv
push
add
mov
lahf
xchg
std
ljmp
sub
mov
mov
jnp
into
aad
sbb
bound
arpl
das
test
leave
pop
vunpcklpd
push
dec
dec
jl
add
fwait
cmpsb
repnz
xor
adc
cmpsl
fistpll
aas
outsl
outsb
call
je
jp
push
dec
or
and
lock
in
mov
inc
dec
sbb
cwtl
mov
jnp
std
ret
repnz
in
imull
pushf
sub
cmp
daa
insb
dec
lahf
jecxz
or
or
iret
pop
pop
inc
gs
sub
dec
in
imul
mov
xor
xor
pop
out
mov
jae
ljmp
mov
std
fnstenv
outsl
dec
popa
sbb
ret
mov
xchg
cld
scas
jmpw
rclb
inc
mov
jge
push
sbb
push
das
out
mov
push
xchg
pop
inc
mov
pop
inc
mov
jae
pop
inc
and
sbb
xchg
int3
cmp
cmp
ficoms
insb
inc
shll
jmp
mov
enter
les
scas
sbb
iret
mov
lret
xchg
dec
push
shl
cmc
xor
aad
mulb
mov
jae
scas
or
cmpsb
xor
sub
adc
adc
push
mov
pop
pop
sub
pop
xchg
jecxz
xchg
stos
mov
adc
mov
add
stos
dec
jbe
cltd
sbb
jp
ja
adcl
add
jge
js
inc
dec
mov
nop
loopne
cwtl
bound
nop
frstor
leave
inc
dec
sbb
cld
and
mov
outsl
insl
cmpsb
inc
inc
mov
cld
sbb
sub
dec
mov
hlt
or
fistl
rolb
insb
mov
test
cmpsb
pop
xchg
aas
xchg
mov
fdivrp
mov
iret
jnp
call
mov
sbb
mov
xor
pop
dec
mov
mov
or
fwait
stc
fmull
jle
or
test
dec
aad
or
sbb
ret
jo
or
xchg
pop
hlt
rcrb
xchg
ret
sub
sbb
aaa
push
lcall
cltd
stos
sbb
pop
cmp
or
and
cli
jno
cli
jnp
or
shlb
adc
je
pop
lret
jno
push
imul
icebp
psrad
inc
xchg
push
aam
cli
adc
jo
and
cmpsb
movnti
aam
stos
sbb
ret
sub
addr16
mov
test
gs
adc
mov
cwtl
clc
dec
xor
ss
cmp
xchg
leave
stos
sub
pop
cmp
mov
pop
in
pop
rcl
jge
addr16
data16
pop
dec
xorl
mov
aas
cmp
mov
mov
lret
inc
mov
dec
add
cmpsb
add
push
pop
pop
mov
cmpsl
mov
in
push
sti
subb
sub
mov
jno
cwtl
out
xor
cmp
mov
pop
shlb
jge
in
and
add
repnz
out
sbb
dec
aad
adc
push
jmp
jecxz
out
mov
xor
cmp
and
or
inc
sub
cmp
adc
and
push
mov
jle
out
xchg
repz
mov
xchg
pushf
ljmp
negl
cmpsl
and
mov
dec
repz
mov
or
or
cmpsb
mov
movsl
jnp
jbe,pn
cmp
mov
and
mov
sub
inc
pop
dec
pop
nop
pop
push
hlt
push
push
inc
dec
and
std
dec
dec
and
repz
jb
mov
xorb
pushf
xorl
cmpsb
in
out
add
test
cmc
jnp
sbb
or
jnp
movsb
mov
movsl
and
movsb
pop
dec
in
mov
mov
xchg
lahf
cmp
pop
jnp
sub
cmc
jae
or
stos
cmp
xor
xchg
sbb
push
cmp
je
sti
mov
xor
mov
pop
cwtl
insl
or
xlat
mov
dec
movsb
jmp
les
cli
or
fmull
pop
pushf
sbbl
jno
das
push
outsl
add
scas
mov
mov
inc
insl
or
xchg
aas
test
mov
insl
jns
add
sbb
lock
test
stos
test
adc
inc
pushl
leave
lods
mov
jo
add
add
xchg
cmp
sub
mull
ja
faddl
adc
out
dec
pop
inc
or
xchg
adc
movsl
sti
stos
add
lcall
ficoml
mov
stos
es
js
jp
mov
mov
cli
push
std
adc
popf
out
or
pushl
cmp
clc
movsl
push
rclb
inc
ja
add
pop
insb
out
adc
xchg
incb
icebp
xor
sub
cmp
rclb
xor
adc
mov
adc
aam
mov
clc
imul
loop
mov
pop
cmpsb
nop
aaa
jge
mov
mov
aas
roll
mov
popf
fmuls
dec
pop
or
cmc
test
add
loop
dec
add
adc
and
pop
push
rcr
lds
xor
sbb
fldenv
ret
mov
lea
jg
jno
or
push
adc
insb
test
lods
mov
adc
mov
insl
pop
lds
cmp
lret
xchg
jle
xlat
movsb
repz
data16
ljmp
repnz
rcll
mov
js
jne
and
subl
rclb
cmc
mov
jno
cltd
pop
and
loopne
xchg
pop
jg
lock
lret
pop
fs
mov
xchg
sbb
jb
mov
lods
or
inc
jb
push
xchg
lock
sbb
jae
xchg
loopne
push
cld
shll
adc
fdivl
clc
negl
sbb
cs
test
popa
nop
jne
imul
sbb
rclb
push
inc
and
dec
mov
call
sbb
int3
sub
and
mulb
push
pop
mov
add
sbb
and
ret
dec
sub
fwait
mov
push
xor
enter
jne
push
jns
shlb
xor
aam
add
inc
repnz
movsb
pop
dec
jl
push
testb
ja
popa
shl
mov
jecxz
pop
pop
insl
and
lods
inc
ja
pop
and
sub
ljmp
shr
adc
xchg
shl
pop
fadds
xor
mov
xor
jecxz
insl
lock
xchg
insb
popa
inc
call
and
inc
push
and
fcompl
lcall
inc
lahf
mov
lret
lds
jle
jl
fadds
stos
pop
sbb
jp
enter
dec
mov
daa
mov
sti
or
es
and
loopne
xchg
shlb
pop
mov
dec
sbbl
loopne
lret
sub
mov
push
add
sub
aad
adc
xchg
adc
pop
pop
xor
or
push
fbstp
enter
pop
xchg
outsb
test
pop
bound
cmp
xchg
repz
stc
dec
sub
xlat
mov
imul
scas
in
sbb
hlt
pop
inc
xor
xchg
movsb
into
aam
subb
and
movsb
es
dec
and
sub
push
cmc
aaa
sbb
out
out
xor
pop
cld
cmpsb
pop
clc
stos
lcall
or
or
loop
pop
adc
fs
jmp
cs
mov
imulb
call
cmp
call
add
push
push
mov
les
lds
push
add
cmp
aaa
pop
jge
adc
mov
jg
fnstcw
fcomip
mov
iret
or
lds
addl
aas
and
stc
aas
or
les
mov
int
fmull
mov
lret
sbb
addl
insl
mov
jge
popa
xor
movsl
fadds
mov
sbb
xchg
mov
lcall
mov
dec
mov
je
cs
in
dec
cmp
fimull
or
xchg
pop
inc
dec
cmp
in
mov
loope
xchg
lret
repnz
xlat
sub
jp
jl
mov
xchg
adc
addl
pop
fs
in
xchg
test
mov
mov
in
dec
sub
out
or
andl
fwait
pop
lahf
pop
cmpsb
xor
mov
pop
mov
jo
call
pop
lret
test
shl
jp
push
pop
mov
cmp
mov
pushf
mov
lret
ja
pushf
mov
into
test
xor
lret
jg
repz
jnp
jno
jle
push
jbe
enter
or
pop
adc
lock
push
repnz
fdivrl
flds
adc
wbinvd
das
mov
adc
lret
leave
in
lock
inc
jnp
sar
js
sbb
mov
jns
mov
and
inc
xchg
push
roll
ja
dec
mov
mov
fiaddl
cmp
out
or
sbb
sti
andb
adc
cmpsb
or
dec
aaa
pushf
sbb
or
pop
add
les
testb
seta
scas
sub
loope
das
add
cmpsl
add
pop
adc
jne
leave
cld
fildll
rorl
sarb
out
sbb
adc
mov
ret
pop
add
jbe
sbb
sbb
je
outsb
movsb
shll
dec
add
and
jnp
in
insb
jne
and
dec
out
mov
jns
sub
inc
mov
push
das
cmp
dec
sbb
mov
nop
pop
daa
fnstenv
inc
mov
mov
xchg
mov
push
xlat
inc
mov
jg
sub
jo
sub
mov
hlt
stos
and
mov
iret
push
mov
loopne
incl
cltd
cmp
into
cmp
mov
and
xchg
add
xchg
push
push
inc
xor
rorl
mov
outsl
nop
cmp
pop
mov
sti
rorl
fucomi
rclb
rorb
or
mov
lds
xchg
sub
and
enter
or
popa
in
or
push
pop
sbb
mov
in
mov
jnp
ret
or
ds
mov
ret
jge
sub
stos
mov
nop
mov
mov
jns
mov
sub
dec
mov
fs
xchg
cmc
xor
xor
and
lret
stos
jbe
pop
adc
imul
xor
dec
std
jl
or
loope
push
jg
repz
out
leave
xchg
inc
sbb
mov
sub
std
notb
test
ror
pop
mov
pop
xor
out
push
mov
cmpsb
sahf
mov
mov
mov
sbbl
arpl
movsb
cmp
fimull
jne
push
inc
pop
faddl
xor
das
mov
mov
and
add
stc
jg
ret
cltd
dec
std
mov
out
imul
mov
and
lea
sahf
mov
sub
and
dec
inc
or
leave
mov
push
push
pop
in
mov
jl
std
and
lea
and
fbld
pop
sahf
inc
sub
jmp
aad
pop
or
out
push
cmp
sub
in
sub
adc
pop
fs
scas
sbb
pop
jbe
insl
sbb
pop
out
xchg
pop
sbb
mov
and
popa
sub
dec
sarb
mov
lea
fisubs
clc
push
cmpsb
imul
in
mov
pop
cmp
movsb
or
add
adc
push
xor
lock
into
jmp
add
andl
fcompl
rclb
pop
iret
mov
aaa
aam
inc
sbb
or
outsl
jg
stc
mov
enter
mov
insl
push
push
xchg
cmp
dec
movb
imul
test
pop
or
cli
mov
subb
xor
and
mov
mov
clc
inc
push
mul
and
xchg
orl
cli
test
adc
add
clc
sti
xchg
mov
jo
std
mov
xchg
mov
adcl
pop
ret
mov
mov
scas
push
mov
adcb
lcall
lods
aam
xor
and
add
pop
mov
adc
lods
sahf
sbb
sbb
mov
and
pop
mov
mov
test
in
cmpsb
mov
dec
aad
call
dec
shl
lcall
xchg
loope
xlat
mov
xchg
xor
pop
and
dec
or
sbb
daa
xchg
fstpt
add
out
iret
fcmovne
xor
pop
push
ficoml
xchg
addr16
jo
fiadds
outsb
sub
pusha
add
sub
sti
xchg
add
call
in
testl
outsl
inc
cmp
adc
pop
out
ror
or
testl
stos
pop
stc
scas
jg
fmuls
shll
bound
lahf
into
pop
lcall
cmp
xor
pop
lock
movsb
push
movsb
inc
lock
lret
popf
jb
outsb
ret
jae
in
and
inc
rcrl
loope
rcll
mov
sub
cli
cmp
and
mov
pop
sbb
mov
out
imul
cmpxchg
cmp
cmc
mov
pop
repnz
inc
hlt
mov
push
xlat
cltd
shll
jb
lods
pop
hlt
bnd
mov
jge
xor
mov
inc
lahf
outsb
xchg
sbb
dec
aad
sub
in
adc
pop
out
insb
pop
mov
add
stc
enter
add
mov
xor
loopne
ja
mov
xor
out
inc
sbb
sub
xor
push
movsl
jg
aas
jp
inc
inc
fdivrs
jge
or
fistl
jo
jle
push
fwait
adc
cmp
aad
dec
mov
inc
pop
ljmp
push
pop
scas
dec
mov
and
jg
ficoml
and
out
xchg
pushf
icebp
push
mov
aad
test
shl
sub
xor
push
mov
filds
cmpsb
negb
out
dec
or
lcall
mov
xlat
fwait
shrl
inc
pop
xor
push
push
lret
jmp
out
or
and
xor
rorl
lea
cmp
jns
sbb
xor
push
mov
mov
xchg
fidivs
push
inc
rol
xchg
jp
jmp
jbe
out
or
inc
pop
adc
out
add
or
mov
addr16
or
mov
cmp
sub
clc
test
mov
jmp
jmp
add
xchg
dec
xor
into
lret
cmp
rcll
push
sbb
icebp
dec
ficoms
inc
xchg
inc
cmp
mov
cmp
pusha
sbb
and
jb
sbbb
mov
inc
sbb
imul
in
mov
dec
push
pop
movsl
mov
loopne
jmp
push
push
xchg
mov
movsl
adc
les
stos
ja
imul
fisubs
inc
mov
iret
orb
mov
orb
xchg
lcall
sub
scas
add
jp
add
dec
ljmp
xchg
mov
sbb
dec
xchg
pop
icebp
or
int
fidivrs
mov
out
push
shlb
mov
in
xchg
mov
add
cli
ljmp
icebp
jno
mov
loopne
addr16
jno
dec
jge
arpl
sub
inc
inc
mov
ds
ja
cwtl
sub
xor
inc
icebp
jg
test
rcll
ret
mov
push
fwait
es
arpl
sub
and
xor
mov
enter
adc
shll
push
stos
and
xor
xor
in
stos
insb
hlt
push
outsb
roll
sar
jb
test
dec
xor
mov
cmpl
ss
pop
jg
push
mov
sub
imul
push
pop
repnz
sbb
mov
aas
xor
xor
pop
sbb
adcb
and
ss
push
sbb
sbbb
pop
cmp
imul
xchg
and
mov
subl
fs
fimull
outsl
dec
pop
gs
pop
and
ffreep
mov
loopne
enter
xchg
jb
cmc
add
xor
mov
aas
jb
xchg
cmp
xor
sbb
inc
jecxz
lock
pop
dec
and
in
pop
cld
adcl
ss
push
fidivs
test
push
xor
mov
pop
pop
mov
push
daa
or
pop
cltd
pop
pop
mov
pushf
jl
jecxz
mov
cmp
call
cmp
push
sbb
sub
roll
adc
cwtl
push
dec
pop
or
out
push
or
pop
push
dec
jae
stos
sub
test
dec
fninit
xchg
mov
jp
jle
std
jge
mov
lea
aam
or
mov
pop
or
sbb
adc
cmp
mov
cmc
movsl
sub
repnz
sbb
jle
ljmp
and
mov
bound
xchg
mov
mov
sbb
jmp
test
insb
ss
in
das
and
lret
stc
cmp
push
and
sub
sahf
push
sub
pop
xor
add
mov
and
in
call
pop
mov
stos
xorl
sti
add
pop
sub
in
pop
mov
jns
add
loopne
or
aaa
lret
sahf
aam
lcall
pop
mov
ffree
inc
pop
push
xchg
mov
test
mov
lods
cmc
pop
fcmove
cmc
xchg
sub
dec
xor
and
nop
repnz
lods
outsb
xchg
sub
sbb
xchg
test
push
popa
lods
jne
sub
lret
test
rcl
js
or
xor
sbb
popa
pop
cmpsb
mov
mov
lahf
xchg
call
xor
jo
cmp
fcomip
jp
push
pop
inc
mov
sbb
push
mov
and
in
xlat
aad
push
and
arpl
shlb
pop
dec
sbb
add
lahf
add
mov
inc
or
iret
jp
cmp
mov
mov
pop
push
mov
leave
inc
movsb
mov
and
lret
or
jecxz
mov
lret
addl
es
leave
stos
adc
sbb
pop
cmp
adc
popa
adc
dec
xor
mov
cmpsl
jo
mov
nop
testl
xchg
cmpb
notl
in
lcall
jle
lcall
ficomps
cli
xchg
xchg
dec
repz
or
pop
mov
test
lds
fs
push
sub
jae
rcr
dec
mov
lretw
sti
aam
mov
call
out
push
in
jmp
mov
lret
js
dec
inc
xor
dec
jg
pusha
xchg
out
inc
cmp
jp
adc
jne
ja
jno
dec
ret
lds
sub
ja
and
cmp
dec
data16
out
in
lcall
inc
aam
nop
and
mov
push
push
cmp
mov
jae
jo
in
add
outsb
fistl
mov
ret
sub
int
pop
cmp
adc
pop
loopne
fnstenv
btr
jl
leave
mov
jbe
xchg
ret
fcomps
jns
inc
nop
mov
lds
add
int
leave
std
jb
mov
lcall
je
sub
mov
je
lret
mov
sub
mov
jo
lret
in
pop
jge
xchg
cmpsb
mov
out
adc
dec
xchg
in
inc
push
dec
test
rol
and
in
mov
aam
cmp
imul
inc
js
shrl
sahf
jbe
dec
movsb
ss
ja
stc
mov
cltd
fisubl
inc
fsubrl
or
mov
pop
pop
xchg
movsl
cmpsb
mov
xchg
lcall
mov
jno
pop
popf
mov
inc
cmp
sbb
add
leave
sti
lods
insb
cld
dec
pusha
ret
fdivrl
call
jecxz
loopne
mov
lahf
push
mov
ror
xchg
mov
push
mov
or
rcl
jg
fwait
cmp
int3
ljmp
jae
movsb
mov
cmpsl
mov
adc
cltd
add
pop
cltd
cmpsl
cltd
fisubrl
fistpll
fists
lret
out
pop
dec
xchg
pop
sub
fs
pop
incb
dec
outsl
lret
fldcw
out
push
repz
not
push
push
push
in
xchg
movsb
mov
icebp
scas
cmp
out
jge
int
orb
fisubrs
jge
push
lock
mov
lcall
lea
mov
add
add
iret
add
push
pop
add
mov
mov
xor
je
scas
les
test
push
push
sbb
inc
lods
ret
xor
add
daa
daa
imul
add
sub
xchg
int
test
xchg
push
outsb
shll
mov
stos
fidivrl
ret
mov
adc
aam
push
cwtl
jmp
inc
mov
insb
in
sti
xchg
mov
je
dec
xchg
pop
das
sti
fdivr
sarb
jmp
shlb
sub
ret
movsl
inc
and
xchg
and
pushl
jnp
movsb
sarb
jge
stos
add
inc
icebp
jns
loope
sub
xor
pop
inc
stos
roll
in
pop
push
imul
adc
push
clc
xchg
sti
lret
push
jno
and
jo
jmp
repz
mov
mov
fisubl
and
jns
es
inc
inc
sub
loopne
and
inc
scas
mov
sub
fadds
roll
push
mov
pop
add
cwtl
adc
xor
pop
inc
loop
pop
jne
cwtl
in
fmuls
sub
test
xor
loopne
loop
xchg
push
or
xchg
and
and
mov
mov
int
imul
adc
mov
adc
stos
mov
jne
mov
sbb
add
dec
pop
adcl
daa
sbb
imul
ds
or
push
mov
ja
and
or
push
daa
mov
adc
cwtl
lea
lods
cli
xor
cmp
je
mov
rcrl
push
enter
push
loopne
pop
mov
and
cli
lcall
inc
jbe
add
cld
mov
lahf
and
in
outsb
dec
fwait
test
sub
fnsave
jmp
and
ljmp
cmpsb
inc
mov
jne
dec
pop
xor
or
rorl
dec
cmp
dec
mov
test
leave
xchg
xchg
jo
loop
sub
das
jle
inc
mov
push
scas
inc
sbb
pop
jno
or
call
clc
mov
fisubs
test
leave
mov
lret
enter
mov
shl
lahf
xchg
aam
mov
or
stc
mov
dec
lahf
stos
xchg
push
sbb
mov
jg
cmp
loope
push
mov
inc
push
jb
dec
lods
cmc
pop
loope
lea
mov
jo
out
push
pop
mov
cltd
shlb
jne
sarl
outsb
mov
negl
dec
ljmp
ja
loopne
adc
adc
loopne
jl
push
call
pop
sub
mov
mov
insb
out
cld
je
inc
and
jl
outsb
inc
xor
dec
sub
out
ror
xor
sub
insl
cmp
dec
cmp
xchg
lods
sbb
adcb
mov
xor
mov
testb
ljmp
scas
sti
add
test
sub
xor
mov
aad
pop
cli
repnz
pop
in
cli
mov
lret
and
jge
jge
movsl
push
mov
sbb
bound
fcmovnbe
flds
fcmove
jo
jmp
cmp
ficomps
pop
jge
dec
mov
inc
inc
stos
test
or
and
jbe
aaa
stos
lods
sub
push
cmp
inc
out
mov
jnp
jne
xchg
insb
test
call
jno
jb
or
xchg
bound
xor
xor
xchg
hlt
push
sbb
mov
mov
sbb
ficoml
test
push
add
pop
add
cmpsb
jmp
or
lahf
cwtl
iret
sbb
xor
push
xchg
mov
in
loope
dec
lea
pop
fimull
ficoms
sub
lds
movsb
push
stos
mov
nop
loopne
cmp
ret
pop
add
xchg
scas
ficomps
pop
xchg
ja
xor
inc
add
adc
pop
inc
mov
sbb
mov
push
pop
test
iret
mov
sbb
in
xchg
loop
sbb
pop
shll
icebp
iret
test
fidivrl
inc
mov
ror
cmp
cld
stos
int3
push
mov
or
sti
ja
ja
cmp
jns
cli
ret
inc
cmp
mov
sbb
or
fnsave
test
mov
push
loop
and
jne
add
mov
js
lret
or
cltd
aad
push
cmp
sbb
rorb
sbb
sbb
push
addr16
dec
shll
cmp
rcrb
cltd
push
addl
jns
sub
fwait
scas
push
adc
rolb
push
jns
mov
outsl
mov
dec
test
add
movsl
ss
pop
dec
outsl
push
lds
icebp
repz
adc
inc
hlt
mov
sub
stos
cmpsb
xlat
and
jo
adc
push
mov
sub
cmpsb
loop,pt
mov
push
push
lret
add
nop
in
cli
int3
popf
insl
push
adc
enter
leave
mov
dec
add
mov
xchg
mov
imul
jbe
int
lods
xchg
filds
add
mov
cs
orb
adc
addr16
jecxz
push
mov
mov
fsubrs
or
cmp
push
or
dec
inc
xchg
das
lcall
cmpsb
jecxz
add
push
push
faddl
mov
cmpsb
push
in
adcb
mov
xorb
mov
pop
mov
nop
and
test
push
ret
rcl
sub
xlat
dec
or
lods
outsl
mov
mov
cmc
xor
stos
dec
sbb
mov
sti
mov
push
or
push
fisubrs
fiadds
aad
cmpsb
pushf
in
inc
adc
mov
sub
mov
cwtl
fs
int3
ljmp
push
ds
dec
sub
cmp
mov
mov
fisttpl
pop
jne
je
daa
stos
lahf
or
xchg
fcomps
str
jae
in
xor
and
mov
stos
andl
jae
xchg
cmp
sahf
fnsave
pop
scas
jb
mov
dec
aas
hlt
ret
dec
gs
orl
cmpsb
call
fiaddl
or
mov
push
or
mov
mov
rolb
xchg
ret
pop
call
shll
or
daa
imul
sub
xor
in
sub
xchg
mov
movsl
ljmp
popa
popa
loopne
mov
fisttps
loope
push
mov
pop
mov
xor
cmp
pusha
dec
fistpl
scas
cmpsl
and
aaa
sub
jae
rcll
jae
les
push
aam
or
xchg
test
lahf
testl
fsubrs
je
sbb
clc
insl
test
and
out
int
add
or
inc
sbb
cwtl
shl
popa
push
loopne
clc
mov
in
add
jnp
xor
fwait
xchg
add
pop
cmp
and
push
mov
mov
pop
das
mov
or
mov
mov
rclb
xchg
fs
loop
pop
or
mulb
mov
mov
and
mov
repz
and
push
in
int
jmp
fsubrs
test
pop
dec
jge
aaa
in
ss
lds
addr16
gs
outsl
cmpsl
out
mov
negl
addl
sbb
dec
xchg
sbb
mov
loopne
mov
jno
xchg
add
mov
dec
lods
inc
xchg
scas
outsl
jmp
mov
leave
fwait
mov
arpl
sbb
int
cwtl
inc
jp
aam
inc
dec
dec
jge
rcr
int3
fdivr
fcompl
cli
mov
adc
out
xor
data16
data16
mov
xlat
cmp
dec
rclb
sbbb
das
and
inc
mov
lock
sub
xchg
out
jp
pop
pop
fcomps
fsubrl
sbb
outsb
pop
cmc
inc
scas
jbe
test
xorl
jo
xor
je
and
xchg
mov
cmc
lock
cmp
jb
sbbb
fs
jle
pop
mov
cmp
jg
cmp
push
cmp
or
cs
inc
xchg
mov
jge
adc
ds
push
adc
pop
int
xor
pop
gs
mov
sbb
or
js
es
inc
cmp
pop
xor
cltd
mov
jmp
cmp
push
pop
aas
cmpsl
dec
subl
inc
jae
cmp
std
ret
mov
int
xor
sub
dec
push
push
push
stos
and
sub
inc
sub
mov
mov
xorl
dec
push
stos
adc
jl
sub
loope
out
xchg
mov
jno
push
nop
data16
add
and
jns
cmp
fnstenv
dec
lock
adc
jecxz
loope
sahf
or
es
sub
mov
aaa
pushf
mov
stc
xor
cmp
in
cmp
mov
dec
pop
inc
or
subl
fsub
jmp
pop
sbb
mov
jno
mov
fistpl
xor
rolb
loope
sub
call
or
inc
dec
lea
pop
push
adc
mov
dec
cmp
xchg
inc
add
or
cmpsl
cli
xor
and
jecxz
sbb
mov
pop
in
cli
cs
ja
idivl
mov
popf
add
mov
jns,pn
jae
adc
jbe
icebp
je
or
xchg
xchg
inc
iret
negb
fstps
adc
call
xor
imul
add
mov
jne
cs
or
mov
add
push
mov
stos
jmp
or
outsl
mov
ljmp
mov
mov
ret
rorl
push
addr16
sbb
adcb
jbe
and
sub
test
clc
xchg
jmp
lds
gs
fildl
mov
imul
add
test
loopne
inc
jge
sub
out
jne
xchg
into
cs
and
std
in
push
lods
in
cmc
mov
xor
mov
in
xor
fsub
add
sub
add
enter
mov
dec
add
xor
aad
or
idivl
repnz
out
inc
filds
daa
push
mov
cmp
push
push
add
ds
ficoms
je
je
out
mov
cmpsb
pop
dec
sub
fidivrl
sub
lret
packsswb
fnstsw
add
int
test
xchg
xor
les
xchg
pop
jle
sub
push
sbb
xor
call
jle
dec
ja
mov
outsb
fisubs
inc
and
adc
ja
insb
leave
mov
dec
pop
rolb
and
fs
fwait
pop
rcl
pop
addb
outsb
and
repz
mov
inc
adc
stos
pop
in
cli
lret
or
pop
sahf
fstpl
and
pop
cmp
aam
adc
xlat
lods
xchg
jl
and
cld
push
int
in
adc
loopne
pop
pop
mov
pop
pop
push
repz
pop
lods
sbb
addb
adc
pop
xorb
cmpsl
inc
sub
add
jno
sub
aad
sbb
lcall
jg
xor
and
add
icebp
pop
mov
fistpll
add
jge
mov
xor
jns
xor
cmp
mov
cli
testl
or
loopne
mov
ucomiss
in
testl
in
stc
popa
dec
icebp
pop
mov
sbb
mov
test
std
dec
cmpsb
loopne
push
inc
mov
jns
mulb
repz
jmp
sub
push
int3
negl
test
mov
sbb
jmp
test
loopne
mov
mov
mov
ret
mov
out
ss
repnz
xchg
in
mov
daa
jl
lea
loop
xchg
cmp
inc
stos
in
adc
xchg
rorl
xchg
jecxz
pop
mov
daa
aad
mov
xchg
xchg
in
inc
enter
dec
mov
mov
pop
lods
cld
mov
inc
pop
or
push
shll
sbb
xchg
scas
jns
sbb
inc
add
clc
inc
and
out
push
aad
adc
int3
mov
xchg
mov
cmp
adc
cmpsl
jmp
and
push
aaa
sahf
inc
sti
add
cwtl
ds
in
sub
test
lret
out
out
jb
imul
pushf
pop
daa
adc
or
loop
test
sbb
stos
mov
out
pop
pop
and
ja
or
ds
xchg
pop
xchg
jb
les
inc
mov
cmp
adc
fucom
push
imul
jb
lods
mov
mov
std
mov
addr16
insb
or
xor
push
stos
xchg
mov
adc
push
and
cmpsb
in
dec
sub
insl
ficoms
aad
rcrb
fistps
sub
mov
fstpl
ficomps
addr16
imul
enter
imul
arpl
dec
mov
fdivs
pop
xchg
mov
cmpsb
jae
rclb
cmp
in
movsb
sbb
push
push
ret
cmp
popf
dec
cmpsb
push
out
add
std
ret
sub
ret
inc
movsl
sarb
xor
mov
xor
adcl
adcb
inc
pop
pop
pop
pop
mov
pop
xchg
fcomps
fidivrl
leave
mov
data16
mov
aas
dec
sti
repnz
sub
inc
sub
shll
jp
jg
in
ret
cmp
in
outsb
adc
jb
mov
xlat
xchg
xchg
mov
fdivrl
or
inc
pop
mov
or
lods
and
cmp
mov
adc
inc
mov
mov
aad
mov
lods
addr16
mov
in
mov
xlat
and
sahf
jb
xchg
lcall
xchg
fistps
lcall
mov
push
rcrb
mov
lock
clc
or
add
mov
jb
and
sub
add
cmpsl
push
lock
call
bnd
ds
movsb
daa
xor
in
push
cmpsl
pop
mov
out
jbe
idivb
or
cmp
dec
adc
jb
imul
sub
movsl
imul
cmpsl
orb
or
loop
fisttpl
add
mov
sub
push
in
iret
jmp
sbb
mov
pop
aaa
dec
xchg
or
jae
jecxz
xchg
out
stos
out
les
push
dec
fwait
xchg
repnz
cld
loope
jae
popf
js
pop
jno
xchg
andb
int3
cmp
push
in
out
adc
pop
cwtl
mov
movsl
jae
ss
jmp
add
std
pop
ja
mov
out
push
push
jge
xor
inc
dec
push
pop
dec
sub
jbe
imul
test
hlt
sub
push
iret
bound
and
cmp
or
xchg
dec
mov
movsl
adc
adc
or
xchg
adc
out
jo
add
jnp
pop
cmp
sbb
imul
adc
in
bound
xor
and
adc
pop
xchg
pop
add
mov
leave
jne
push
out
or
cmp
inc
ja
jp
in
shl
mov
or
sbb
add
adc
adc
enter
pop
push
in
xchg
and
cli
push
jp
out
stc
lods
lods
mov
adc
mov
xchg
push
shl
loope
mov
filds
mov
push
lea
fidivrl
subl
sti
sub
push
mov
inc
divl
dec
push
sbb
jmp
xor
clc
jo
add
pop
ret
or
dec
push
cmp
jnp
cmpsl
and
pop
push
fisttpl
imul
and
cwtl
out
mov
lret
mov
push
mov
cmp
xor
inc
mov
inc
jmp
rcrl
jno
add
jo
in
jl
dec
mov
mov
sub
mov
sahf
adc
push
xchg
insl
jb
adc
push
lods
data16
dec
sub
into
movsl
ret
lret
es
push
dec
incb
and
xor
push
xorb
xchg
xchg
sub
daa
loope
and
xor
adc
xchg
xchg
xchg
mov
push
out
xchg
or
shrb
je
jae
xor
mov
jp
pop
adc
fiadds
sbb
xchg
sub
dec
mov
dec
mov
cmp
xor
loopne
jle
dec
xchg
out
and
sub
mov
bound
les
ds
cmp
dec
stos
clc
sbb
ljmp
fcomps
sub
out
aam
dec
gs
sahf
add
mov
pop
sbb
rol
dec
sub
lods
ljmp
mov
mov
pop
movsb
mov
imul
pop
mov
insl
mov
stos
xchg
push
ficoms
aaa
addr16
jmp
mov
shlb
pop
jb
arpl
pop
and
push
sbb
js
ds
push
xchg
jmp
movsb
lea
mov
mov
push
sbb
out
icebp
inc
or
cli
ret
sub
rorb
lret
scas
pop
xchg
xlat
lods
adc
jp
mov
mov
mov
gs
cmpsl
lcall
lea
data16
mov
cmpsb
nop
jmp
sub
inc
xchg
negb
sti
dec
cwtl
sbb
or
loope
xchg
mov
mov
mov
and
cltd
rep
mov
dec
inc
adc
sbb
mov
data16
into
inc
popl
mov
pop
icebp
fs
adc
scas
lods
xorl
stos
outsl
ss
or
aam
or
or
lret
or
jmp
cmp
add
sbb
xor
inc
sbb
negb
fnsave
jo
out
ret
fisubs
inc
push
dec
iret
jmp
cmp
jnp
loopne
jne
decl
cld
inc
adc
push
pop
mov
inc
les
sub
repnz
pop
daa
in
adc
cmpsl
pop
notb
mov
mov
or
xor
xor
xchg
jno,pn
into
lock
int
cltd
push
ja
cmp
mov
cmpsl
aam
outsb
jbe
nop
popa
mov
mov
xchg
in
mov
shll
sub
ret
mov
push
fwait
cmp
leave
add
lods
cld
mov
nop
adc
pop
cmp
rolb
cmp
xorl
sbb
out
add
lock
das
or
or
into
cmp
adc
mov
pushw
pop
xchg
sbb
out
jnp
cld
mov
sbb
cmp
scas
lds
lret
call
cmp
pop
into
dec
mov
cmp
aaa
stos
into
rcrb
cli
jg
testl
stos
mov
movsl
cmp
xor
ficoml
flds
xchg
in
cli
orl
inc
or
sti
xchg
cmp
add
fisubrl
sub
xchg
shrl
movsb
stc
dec
gs
mov
xchg
mov
scas
adc
shrl
inc
ret
ret
cltd
out
cwtl
dec
lahf
out
cli
push
mov
test
lahf
inc
push
cmp
jo
das
mov
cmp
inc
push
scas
adc
and
orb
ljmp
sbb
jecxz
cmp
outsl
addb
cwtl
pop
adc
sbb
mov
ja
mov
adc
xchg
mov
xlat
push
mov
inc
inc
out
mov
push
pop
inc
and
jno
xchg
mov
bound
aas
mov
pop
inc
subb
outsb
fnsave
push
imul
mov
imul
ror
cmp
decl
mov
pcmpeqd
int3
out
push
sbb
rcrl
cmp
and
jmp
jne
mov
leave
sbb
add
repz
dec
cmp
and
mov
idivl
push
fwait
lahf
movl
and
adc
inc
ficomps
dec
dec
cltd
xchg
cld
sbb
je
les
imul
int
and
sub
bound
cmpsb
inc
hlt
cmp
jmp
mov
cmp
outsl
jno
aaa
sti
sub
test
in
and
push
jb
adc
movsb
loope
or
or
shll
mov
es
movsb
sub
push
jns
les
lahf
dec
or
ficoms
fcmovb
cmpsb
pop
cmpsb
cmp
pop
hlt
and
jmp
bound
clc
xchg
push
dec
sbbb
daa
add
jle
jmp
sbb
mov
adc
cmc
xor
sub
push
sub
imul
cmp
shl
dec
and
dec
imul
flds
stos
cwtl
into
pop
lahf
sub
mov
imul
dec
aam
pop
subb
outsl
mov
out
xor
sbb
push
mov
rcrl
mov
adc
popl
scas
dec
cwtl
nop
cmp
inc
out
test
outsb
jo
jo
out
hlt
jns
imul
dec
aam
das
adc
jo
int3
lret
mov
es
adc
and
test
rclb
xor
jne
cmp
test
jmp
je
test
aam
jns
ret
mov
cmp
mov
in
cmpsb
test
mov
xlat
or
dec
je
push
mov
lret
jo
dec
insl
xor
enter
movsb
push
in
pop
add
mov
add
adc
jbe
cmp
addr16
js
adc
xlat
push
fisubrl
popf
out
mov
mov
mov
or
sbb
faddl
push
loopne
cltd
pop
lods
mov
in
ljmp
lods
cmc
sbb
or
in
rcrb
std
shrb
int3
dec
aam
fisubs
pop
test
jle
mov
imul
imul
dec
in
int3
dec
dec
sbb
fdivs
dec
push
pop
testl
xchg
and
adc
sbbw
mov
push
xchg
scas
mov
pusha
sbb
and
inc
popa
and
test
xchg
cmp
adcl
scas
sti
xchg
jmp
cli
cwtl
cmp
pop
push
hlt
sub
jmp
inc
mov
cmp
sbb
imul
lock
shl
sti
mov
fcom
sti
outsb
pop
cmp
mov
push
push
rcl
pop
sub
sarl
inc
in
adc
sti
mov
lret
and
inc
in
inc
cmp
push
xchg
or
stos
out
lret
dec
xchg
inc
sahf
outsb
jmp
in
jbe
push
pop
or
dec
xor
dec
fwait
insb
cmp
imul
push
rorl
or
loop
xor
mov
rcll
je
sti
sbb
out
insl
popf
cmp
mov
in
jnp
cmp
push
mov
cmp
and
rorb
fcom
jo
cmp
mov
inc
clc
call
inc
fadds
dec
aad
data16
and
jae
cmp
push
push
add
push
mov
mov
sti
add
cmp
cmp
cmp
cmp
dec
push
mov
push
xchg
shlb
add
sub
ret
js
add
mov
pop
add
mov
pop
add
ja
xor
fwait
popf
sbb
insb
sbb
dec
insb
lds
adc
dec
rcll
or
mov
sbb
jg
add
mov
pop
xor
or
in
test
cmpsl
sub
mov
cmc
in
xchg
xor
fbstp
xchg
lds
test
dec
fs
inc
pop
cmp
fmulp
into
sbb
fxch
fstpl
std
das
xor
and
inc
push
pop
rcl
insb
lcall
sarb
xchg
push
xchg
decb
lahf
pop
mov
frstor
or
lods
jg
dec
cmc
cli
mov
lret
mov
xor
shll
loop
fwait
test
nop
lods
lahf
sbb
inc
ljmp
xchg
xor
sbb
bound
add
bound
xor
daa
rcrb
test
sbb
ret
mov
pop
xchg
cmp
xor
lcall
dec
mov
mov
cmp
sub
outsl
mov
add
xorl
in
rolb
sub
cmp
fs
sbb
cmp
xor
pop
lret
fisubrl
lcallw
addb
mov
shlb
and
out
mov
mov
in
rorl
test
mov
pop
test
mov
sbb
shrb
push
incl
scas
into
loope
mov
dec
mov
test
inc
ljmp
test
add
mov
movsl
jo
cmpsl
pop
lea
arpl
jmp
outsl
cs
ror
lcall
pop
loope
shrb
int3
enter
lcall
pop
ficoms
xor
jne
test
inc
inc
scas
adc
mov
es
mov
sbb
clc
push
push
adc
dec
jl
les
nop
pop
jecxz
inc
cli
sbb
pop
imul
mov
pop
or
add
add
inc
mov
sbb
adc
fdivs
cld
in
popa
xorl
mov
repnz
add
fs
mov
jno
pop
pop
arpl
scas
js
repnz
push
lahf
pop
jbe
mov
jo
lret
dec
rolb
scas
dec
xchg
xchg
push
mov
sti
jno
inc
jne
xchg
xchg
js
gs
adcb
adc
cmp
add
sbb
nop
orl
xchg
mov
sub
pop
xor
push
jmp
push
test
dec
mov
xor
popf
adc
mov
pop
aad
es
int3
jns
jnp
or
mov
bndldx
inc
notl
jb
test
xchg
jno
ja
inc
lea
in
js
insb
outsb
pop
movsb
shll
cli
and
push
fcoml
cmc
adc
sar
sub
ss
das
sbb
adc
xor
mov
jne
mov
pop
cwtl
sbb
add
jo
dec
lods
cmp
bound
ds
jne
bsf
in
mov
cmp
push
popf
mov
pop
pop
pop
add
addr16
leave
inc
sbb
daa
fildll
fsub
mov
loope
pusha
xlat
adc
fiaddl
push
addl
cmc
add
mov
imul
out
adc
add
push
fnstsw
icebp
xchg
gs
and
vmptrld
xchg
add
aad
push
test
sbb
jmp
in
dec
sbb
push
jbe
fstpt
rolb
scas
scas
add
mov
stc
mov
jmp
loopne
leave
in
addr16
scas
scas
sub
sbb
ljmp
sbb
paddusw
mov
imul
lcallw
pop
sub
lock
pop
push
sub
jae
cs
clc
insl
mov
lahf
scas
loop
rcll
ret
sete
test
cmp
jo
mov
xchg
inc
sub
jno
add
pushf
sbb
test
push
pushf
push
addl
jbe
xor
movsl
add
in
and
and
das
rcll
xchg
cli
rorb
add
mov
push
mov
enter
cmp
jge
aaa
call
outsl
les
pop
repnz
xor
push
cmp
or
push
repnz
jb
and
aad
call
adc
push
ss
das
aam
jmp
inc
aam
loop
movsb
pop
mov
test
and
shlb
pop
jne
push
cmpsl
inc
ret
aad
std
dec
lret
pop
sbb
lock
cmpsb
je
sarl
xchg
mov
xor
scas
inc
add
or
es
xchg
cmp
mov
cli
lods
shlb
ja
sbb
mov
imul
adc
mov
aaa
cwtl
xchg
push
dec
xchg
add
mov
mov
out
aas
iret
add
jle
xor
sbb
pop
push
sub
ret
jecxz
cli
nop
sub
mov
fsts
sti
jle
mov
rcl
int
inc
fisubl
enter
cwtl
ds
xlat
jp
fists
stc
mov
add
dec
pop
shl
gs
fstpl
pop
inc
mov
push
nop
mov
mov
sahf
inc
rorl
test
push
in
xchg
fcom
sti
punpckhwd
inc
sub
lret
mov
cmc
imul
enter
icebp
jp
add
outsb
add
aas
test
push
out
mov
mov
sub
dec
sbb
pop
jno
xchg
scas
add
mov
testb
cli
lods
jp
int
clc
xor
push
mov
push
loop
out
test
aam
xchg
addr16
fiadds
lret
pop
dec
cmp
jmp
loope
mov
or
cmpsb
lock
and
push
inc
mov
add
add
push
jmp
jp
insl
adc
pop
jmp
ffree
scas
out
push
mov
fs
mov
rep
jecxz
jno
jns
jl
stc
push
loopne
xchg
mov
aaa
lods
push
and
cli
add
sub
in
jmp
loope
dec
add
popa
or
mov
cwtl
mov
cld
mov
dec
pop
std
mov
mov
ds
push
cmp
xchg
out
and
push
xor
stc
jbe
adc
inc
mov
pop
icebp
mov
lods
fidivrs
lahf
lret
rcrb
movsb
std
xor
sub
fsubrl
mov
and
out
bound
pop
dec
fcos
rcll
adc
cli
sub
push
test
addr16
sbb
dec
shlb
lret
out
ret
stos
sarl
cmpl
xor
adc
mov
or
aam
movsb
xor
xlat
dec
lods
sar
adc
mov
pop
jmp
dec
xor
add
dec
dec
sbb
into
pop
jle
xchg
adc
xlat
inc
repz
andl
dec
repnz
stos
pop
hlt
adc
shlb
inc
push
movsl
push
mov
popa
sbb
icebp
or
xorl
jne
inc
fcompl
shlb
pop
lods
sub
mov
stos
jecxz
aas
lods
push
jno
sti
mov
ret
jg
or
ja
lods
popf
loope
sbb
inc
rcll
cmp
push
inc
or
dec
ret
cmp
add
push
nop
retw
idivb
jmp
and
std
or
stos
in
push
mov
out
sbb
lds
dec
popa
mov
les
or
std
cld
stc
sub
gs
fsts
add
fcomip
addr16
into
jo
jno
xlat
rcll
je
xor
add
movsl
cmpsl
aad
in
lret
ljmp
cmp
xchg
xchg
test
test
movsl
add
cmp
push
arpl
cwtl
pop
cld
mov
cmpsl
add
in
jge
mov
push
cwtl
pusha
push
jno
jmp
pop
xor
mov
cmc
es
stos
fmuls
aas
es
gs
fiadds
movl
cmpb
adc
jecxz
clc
jns
mov
insb
push
sub
jmp
mov
cmp
adc
pop
sub
int
stos
ja
hlt
push
lahf
addl
cmp
and
sub
mov
insb
jae
add
pop
jb
mov
insl
mov
cmpsb
pop
movsb
movsl
sub
dec
rcll
push
inc
loope
iret
xorl
dec
shrb
test
inc
mov
jp
sub
fcompl
mov
push
enter
jne
insl
fidivrl
mov
push
cmp
push
push
sub
xchg
je
test
rdtsc
stos
popf
xchg
mov
loop
fildl
cld
stos
pop
outsb
daa
insb
and
fwait
arpl
int3
loopne
adc
dec
xchg
loope
imul
mov
xor
mov
dec
mov
lods
sub
mov
je
mov
fldl
stc
bound
pop
pop
mov
test
sub
xor
movsl
dec
add
jle
icebp
in
fistl
dec
pop
mov
dec
sub
pop
es
xor
in
fsubrl
dec
adc
lea
pop
aaa
out
xlat
inc
xchg
loop
push
lcall
jno
xchg
out
fbstp
and
test
dec
out
mov
cmpsl
aad
mov
lss
mov
push
sbb
outsb
arpl
and
ficompl
adc
sub
pop
ds
sbb
fistpll
and
mov
mov
lahf
aas
mov
mov
mov
or
aad
inc
sahf
loopne,pt
inc
dec
mov
xlat
test
hlt
push
cmp
jne
sub
outsb
rep
es
out
and
dec
lods
pushf
pushf
push
jno
out
inc
jmp
sub
rorl
jg
mov
bound
daa
leave
popa
js
cltd
movsb
lock
mov
jmp
shrb
popf
mov
adc
cwtl
cmpsl
and
xlat
sub
adc
cmp
dec
or
add
mov
imul
mov
out
mov
sbb
mov
push
mov
cmp
fstl
out
sub
cltd
pop
jae
in
test
loopne
and
jae
les
andb
inc
insb
dec
jno
and
jno
pusha
xchg
lahf
sbb
inc
or
cmc
mov
push
enter
push
out
test
inc
mov
jmp
jl
and
inc
in
cld
mov
cmpsl
xchg
rol
and
andb
paddq
sbb
loopne
mov
mov
je
lret
repz
mov
or
inc
shr
jmp
insb
mov
loopne
sbb
popa
push
lods
rolb
lret
test
mov
inc
or
aad
mov
dec
sbb
push
adc
fucomi
loop
xchg
pop
xor
into
sub
sub
loopne
dec
mov
aad
mov
dec
lret
xchg
and
lock
bound
or
inc
push
inc
std
xor
cmp
xchg
test
je
push
icebp
jns
jmp
test
pop
cmpb
fisubl
jns
imul
and
mov
add
push
loop
lcall
mov
cmp
mov
mov
mov
ret
add
fcmovu
aaa
fstpt
nop
sbb
add
xchg
gs
add
test
dec
add
ds
sub
sbb
pushf
mov
jnp
loopne
hlt
dec
xchg
addr16
mov
lret
pop
nop
jnp
rcrl
shrl
mov
call
sti
fstl
call
dec
hlt
into
add
pop
rorb
les
cmp
lods
jecxz
mov
dec
pop
push
test
mov
mov
dec
jns
pop
mov
stos
ljmp
add
inc
sub
fldenv
jnp
xchg
xchg
jae
and
cwtl
jmp
adc
pushf
cli
jae
jmp
sahf
jnp
shrb
sub
stos
sub
cltd
lods
xchg
out
pop
cmp
aam
inc
pop
xorl
add
jne
push
ljmp
stc
sub
in
shll
mov
xchg
and
cmpsb
jnp
lret
addr16
lods
imull
push
jge
fcompl
lods
sti
jg
cmp
inc
push
jbe
mov
lds
mov
arpl
test
sub
imul
mov
inc
fs
stos
lock
andl
mov
sbb
jo
insb
sbb
or
mov
test
in
dec
pop
add
lret
and
xor
hlt
ss
loop
push
in
inc
leave
das
jb
jp
ja
cmc
bound
nop
mov
sbb
test
and
std
stos
cmp
xchg
add
es
xchg
or
and
pop
aam
loope
in
jb
mov
jle
sbb
xchg
ret
fdivl
add
cmpsl
outsl
test
push
in
ss
int3
les
jb
cli
push
and
mov
inc
jnp
xchg
hlt
mov
lea
dec
jns
xlat
pop
leave
out
inc
je
jns
and
jnp
rcrl
pop
and
outsl
leave
test
dec
shlb
lret
inc
mov
cmpsb
sub
mov
jg
arpl
ret
pusha
leave
fildl
in
mov
mov
rcrl
icebp
or
xchg
out
gs
stos
adc
mov
push
xchg
cli
inc
pop
adc
in
pop
and
addb
xchg
popf
std
in
mov
rclb
mov
int3
or
lea
aam
lea
testl
inc
pop
fnstenv
jno
ffree
imul
sbb
jle
div
mov
jo
mov
jns
sarb
xchg
mov
out
dec
iret
pusha
adc
lock
and
or
or
adc
stc
xchg
add
je
jo
popf
popf
sub
stos
or
testb
movsl
unpcklps
test
pop
jg
lcall
cmp
inc
add
xchg
inc
cwtl
sub
into
iret
jne
out
fimuls
adc
jae
add
aas
jo
add
xor
fsubp
je
inc
rcl
js
lahf
mov
out
movl
aam
and
adc
jnp
lea
and
dec
insl
and
fdivs
xchg
pushf
sub
fiaddl
les
dec
mov
ss
mov
jno
ficompl
sub
daa
cli
or
jle
sbbl
iret
mov
lea
xor
rorb
ljmp
movsl
into
jmp
in
pushf
ss
xor
push
pushf
pop
and
xchg
ja
jne
or
inc
popf
xchg
cwtl
jbe
aad
std
sbb
mov
xchg
dec
mov
call
ja
shl
push
add
into
ret
mov
andl
xchg
cmp
sti
pop
xchg
and
fimuls
dec
popf
mov
xor
mov
sub
mov
std
pusha
sbbl
test
jg
jnp
stos
push
or
dec
jae
into
imul
test
shlb
test
stos
imul
xchg
adc
sub
int
mov
aaa
gs
ss
testb
lds
fwait
or
xchg
out
dec
xchg
hlt
cmp
cmovle
mov
pushf
sub
in
fcoms
sbb
fs
iret
repz
cmp
std
cld
fisttpll
cmp
add
pop
sar
movsl
adc
test
ljmp
stc
stc
mov
pop
icebp
inc
lds
fsts
jmp
and
pop
cmp
sbb
jb
gs
jmp
xchg
push
outsb
and
or
sbb
mov
outsb
mov
les
cmp
gs
ljmp
ljmp
mov
xlat
hlt
pop
cmp
shrb
lock
and
hlt
or
mov
add
jne
dec
fldenv
sub
and
in
bound
mov
arpl
push
and
mov
bound
cmp
negl
mov
and
dec
inc
mov
leave
add
jnp
sub
mov
add
int3
lret
ljmp
or
std
mov
push
in
imul
sbb
mov
aad
sub
adc
stos
push
imul
imul
mov
shll
stos
mov
iret
ds
jne
shrb
jae
aas
xor
mov
insb
scas
mov
mov
and
data16
inc
cmc
rolb
jne
xor
fadd
lret
adc
adc
nop
aad
outsl
ds
cmp
add
in
call
adc
fsubrp
add
pusha
cmp
cmpsl
xchg
sub
cwtl
ret
in
jae
jecxz
push
leave
pop
shlb
mov
mov
enter
or
cmp
repz
mov
cs
pop
pushf
dec
fcoml
out
test
jns
sub
in
jns
and
xchg
pop
cmp
insl
subl
aad
stc
andb
mov
cli
add
filds
mov
and
adc
lret
mov
ja
add
frstor
imul
push
leave
add
mov
and
sbb
push
cmp
adc
jp
out
inc
lock
cltd
sub
jne
out
xor
dec
pop
sub
jecxz
jl
mov
add
jne
or
inc
mov
add
inc
orl
jmp
mov
and
popf
addr16
push
xchg
mov
xor
test
xlat
std
pop
xchg
cld
jp
mov
cmp
fldcw
cmp
std
push
fsubr
and
adc
xor
xor
pop
adc
cmp
adc
in
repz
mov
insb
insb
in
out
pop
insb
adc
jp
adc
scas
xchg
repz
adc
dec
mov
in
add
pop
aad
add
adc
cmpsb
xor
adc
fcoml
jae
mov
sub
cmp
mov
pop
jp
adc
rorl
fcomp
rorb
jecxz
das
jb
lcall
ret
pop
sub
fcmovb
ss
sub
jo
stos
mov
mov
shrb
pop
push
sbb
jle
mov
daa
pop
mov
jnp
mov
loop,pt
mov
scas
in
xchg
sub
loope
scas
out
add
pushf
lahf
inc
and
dec
jns
cmp
or
cwtl
cmp
cld
fwait
fwait
popa
divl
add
dec
bnd
sbb
repz
subl
push
in
movsb
inc
cli
sub
cmpsl
pop
mov
aam
push
scas
jmp
ss
loop
es
jp
outsl
loope
testb
addr16
jecxz
movsl
xlat
xor
or
cs
adc
fdivl
and
adc
ljmp
adc
jg
rcrl
adc
inc
jge
loop
test
xchg
bound
dec
xor
sbb
mov
movl
in
js
jp
aas
dec
rolb
leave
sarl
push
jno
dec
int
in
adc
rcrl
xchg
cwtl
jge
pop
arpl
and
mov
xchg
jecxz
ja
push
or
cmp
aam
inc
stos
mov
jo
adc
imul
add
sbb
inc
in
rorb
test
or
mov
repz
inc
out
cmp
mov
shl
mov
aaa
xor
sub
jno
xchg
lock
mov
mov
out
adc
repnz
push
pop
mov
or
add
xchg
sbb
and
scas
fs
add
sbb
pop
arpl
aaa
cmp
popf
sub
jecxz
faddl
mov
lds
mov
pop
cli
insb
push
push
or
mov
nop
xchg
jecxz
test
jg
mov
push
dec
jne
ret
jge
out
leave
adc
test
stos
dec
repnz
mov
hlt
aas
mov
push
movsl
addr16
test
mov
pop
inc
stc
and
sub
out
push
mov
ja
and
shrb
nop
xorb
xchg
jecxz
xorl
ret
dec
cmc
xchg
cwtl
sub
add
lods
cmp
repnz
or
cmp
decl
mov
inc
sbbl
cmp
add
jno
inc
clc
jo
addr16
push
dec
mov
cwtl
cmpsl
sub
and
lods
outsl
push
nop
push
ja
push
cmp
mov
punpckldq
test
outsb
sbb
inc
add
fildll
fwait
adc
out
sbb
add
gs
sbb
mov
outsb
mov
cmp
das
adc
call
adc
xor
in
in
out
lahf
shr
cltd
lret
mov
call
mov
ds
roll
stos
pop
insl
lret
sbb
cld
daa
xchg
fisubrs
stos
push
lock
jmp
pushf
or
clc
and
icebp
dec
movsb
xor
mov
sbb
jle
icebp
sub
sub
lret
pop
dec
pop
cmpsb
ds
sbbl
into
repz
inc
mov
or
imul
jnp
sub
cmp
xor
das
jle
leave
xor
out
mov
lds
xchg
rolb
lcall
mov
mov
test
xchg
imul
inc
fs
js
xchg
and
bound
xor
out
pop
adc
loop
push
xchg
inc
aad
jns
cld
dec
dec
dec
push
addr16
popf
mov
lock
xchg
add
fnstcw
fmull
push
mov
adc
sti
scas
loopne
shll
sub
psllq
adc
enter
pusha
fwait
lret
inc
xchg
mov
push
sahf
incb
xchg
xchg
icebp
loop
push
or
cs
or
arpl
ror
lcall
sarl
adc
adcb
cwtl
repz
inc
xor
cmp
dec
in
add
enter
stos
daa
arpl
es
and
push
xchg
push
jne
rorl
out
pop
push
jmp
es
cmpsl
test
fcomi
push
xor
pop
fwait
scas
enter
dec
xor
pop
lods
outsl
xchg
imulb
test
test
sti
cmp
mov
aaa
or
xor
fimull
adc
lods
cmp
xor
mov
mov
mov
jecxz
cmc
mov
sti
mov
mov
dec
mov
mov
mov
inc
pop
xchg
mov
adc
inc
es
icebp
jae
fsubrs
xorb
enter
pop
in
lret
xorl
out
xchg
arpl
pop
sub
mov
std
xlat
sbbl
out
pop
xchg
or
adc
ret
mov
lds
cmp
fcmovne
mov
mov
add
add
sbb
out
mov
push
and
out
mov
scas
js
clc
call
lahf
clc
push
test
movsl
xchg
mov
cmpsl
scas
mov
pop
xchg
imul
jo
mov
or
sub
minps
mov
fstpt
adcb
and
sar
push
adc
xchg
std
mov
dec
xchg
stos
sahf
in
jl
mov
ds
mov
and
mov
pop
gs
push
jecxz
pop
adc
jecxz
inc
cmp
xor
roll
adc
cltd
sub
inc
sub
aad
xchg
xlat
push
shll
push
mov
sub
push
push
into
out
xor
lcall
mov
cmp
je
ret
xor
stc
mov
mov
xchg
jnp
cld
pop
out
sbb
jmp
cmp
push
cwtl
rclb
nop
jbe
sub
sub
jmp
mov
mov
stc
pop
jnp
cld
adc
xlat
scas
mov
outsb
jne
xchg
add
cld
jp
lods
test
rclb
sbb
cmc
data16
leave
daa
xlat
aaa
arpl
or
ret
jmp
scas
push
ss
and
mov
xchg
outsl
fsubrl
or
and
push
out
pop
sarb
xchg
loope
ret
icebp
add
pop
dec
lods
xchg
xchg
mov
xor
jp
sub
mov
xchg
test
lds
arpl
push
mov
dec
sahf
pop
push
mov
mov
push
lret
mov
mov
sub
jns
sub
bound
inc
or
cwtl
sar
sub
mov
add
pushf
cld
adc
and
pop
in
cmp
xchg
dec
loopne
popf
jl
pusha
mov
roll
mov
pop
bound
dec
and
pushf
arpl
xchg
jp
pop
pusha
insl
nop
mov
lret
mov
mov
mov
cmp
mov
xchg
sub
mov
add
loopne
mov
mov
push
push
mov
sub
push
js
lcall
jg
jp
inc
mov
push
xchg
or
fcomi
xchg
push
add
xchg
pop
adc
test
stc
call
push
push
lret
cmovae
aad
xor
fsubl
cmp
dec
ljmp
fisttpll
sbb
insl
mov
xchg
or
mov
lods
xor
push
push
and
jo
lock
mov
mov
daa
cmp
jecxz
loop
push
xchg
mov
gs
pop
xchg
loop
popa
sarb
leave
das
rolb
sbb
fcmovnbe
arpl
push
pop
jl
mov
or
out
mov
lea
mov
inc
adc
or
int3
xor
mov
or
push
push
add
shll
inc
push
jns
jnp
sbb
cwtl
fdivrs
push
add
xor
stos
and
cli
jp
dec
push
pusha
add
push
cmp
jo
es
sub
je
negb
icebp
jle
loopne
xor
lret
dec
js
int
clc
lods
lods
jns
lock
push
fwait
out
push
xchg
and
dec
mov
fisttps
in
adc
sub
jo,pt
dec
push
popf
sbb
pop
and
mov
xchg
stos
push
andl
pop
dec
jp
jmp
jno
cmpsl
push
les
sbb
push
cld
movsl
aam
dec
push
int
and
xchg
xchg
shrl
inc
scas
enter
movb
or
push
inc
divb
lock
lea
pop
fnstcw
dec
testb
repz
pop
sti
loope
lret
cmpsl
jnp
xlat
dec
adc
ret
ljmp
enter
xor
loope
cmp
cwtl
ljmp
insb
sbb
test
test
inc
dec
mov
sbb
lods
int3
xchg
mov
roll
insl
push
dec
lods
sub
stos
mov
fisubs
mov
or
mov
lcall
sub
mov
mov
jge
lds
dec
sub
sbb
inc
xchg
stos
mov
ror
iret
pusha
out
adc
ficoml
pop
out
int
jge
fnstcw
xchg
mov
mov
cmp
and
cmc
icebp
jno
daa
stc
test
inc
jle
iret
lock
jb
inc
and
and
lahf
mov
jle
sbb
notb
mov
or
mov
js
xor
dec
adc
xor
cmpsl
xor
add
push
jge
pop
rorb
xchg
xor
mulb
inc
xor
jno
out
aam
addb
adc
test
xchg
and
add
xchg
test
daa
repnz
push
ret
push
stos
aad
dec
sub
or
cs
cli
dec
hlt
ja
xor
inc
dec
mov
dec
push
clc
test
inc
xor
out
rolb
adcl
pop
mov
mov
aad
jbe
push
dec
lcall
cmc
aas
inc
insb
inc
outsl
popf
loope
dec
scas
clc
pop
lds
mov
loope
jmp
ljmp
cmp
frstor
imull
cmpsb
push
arpl
inc
add
xor
outsb
jno
adc
insb
push
jbe
push
das
mov
inc
ja
or
daa
or
addb
add
push
addr16
stos
aam
mov
leave
insl
in
mov
pop
out
lret
dec
loop
or
inc
inc
jmp
dec
xchg
fs
int
mov
xlat
popa
addl
lcall
xchg
ss
push
in
mov
int
fadds
xlat
movsl
mov
test
outsl
shll
shlb
sub
mov
jno
rcrb
pop
insl
popa
enter
sub
xlat
cld
and
adc
mov
inc
push
shll
and
sbb
lds
cmc
sarb
jne
push
pop
stos
cwtl
dec
pop
jg
insb
push
lods
sub
push
stos
ret
insb
mov
in
mov
stos
in
loope
or
xlat
mov
jmp
ret
xor
jnp
popa
cmp
sbb
fstps
mov
rcrl
fcoms
notl
pop
mov
add
cmp
inc
cltd
fdivrs
xchg
mov
mov
cwtl
push
dec
jmp
mov
cmp
adc
mov
shr
mov
cmovg
insl
push
ret
add
lea
mov
and
ret
ror
adc
pop
xchg
daa
fucomip
mov
ret
sarb
stos
lock
and
pop
cmc
out
and
bound
push
mov
scas
in
push
testb
xorl
fwait
cmp
stos
sbb
scas
push
lret
push
in
outsl
jne
pop
fxch
sti
add
cs
rcrb
mov
das
pop
mov
shll
ds
lds
ss
lcall
and
mov
lret
jmp
jle
sti
jg
mov
scas
inc
jecxz
push
lods
pop
mov
cmp
in
or
std
sarb
dec
add
jae
out
add
jbe
std
mov
dec
inc
xchg
or
test
xchg
inc
add
rorl
mov
fisubrl
cmpsl
mov
mov
mov
pop
arpl
add
jno
jns
dec
test
push
dec
outsb
cld
out
test
add
jp
bound
dec
push
push
shl
lds
ja
jg
dec
addr16
or
repnz
push
test
int
scas
testb
or
mov
stos
adc
cmp
test
pop
jmp
aam
or
arpl
add
testb
add
add
add
xchg
or
pusha
pop
pusha
leave
mov
mov
andl
or
ret
pushf
jne
xor
and
inc
add
xchg
popf
add
mov
adc
movsl
jb
jnp
mov
lret
push
mov
cmp
pcmpeqw
mov
pop
ss
pop
scas
fdivl
push
sbbl
aad
xchg
fimuls
ljmp
fs
movsb
mov
sti
iret
into
sahf
ljmp
cmpsb
adc
test
imul
outsl
lods
xlat
mov
jb
pop
xorl
sub
cltd
lahf
stos
fcoml
sub
addr16
cmp
into
roll
addr16
call
mov
pop
loope
cld
and
and
xchg
rclb
int3
inc
push
lods
shll
mov
jmp
sbb
cmp
cs
push
pop
std
push
je
pop
adc
or
pushf
add
ja
loop
cli
out
mov
jbe
js
lock
inc
sub
test
outsl
enter
rcrb
or
roll
pop
xor
push
loopne
test
insl
sbb
jo
inc
xchg
and
mov
dec
xchg
inc
hlt
out
jp
les
sub
jge
bound
ds
dec
jle
pop
push
sbb
pop
sub
jmp
pop
jmp
mov
and
shlb
xor
xchg
test
dec
insl
xchg
adc
push
bound
jp
movsl
mov
loopne
xor
ja
xchg
xchg
mov
test
fwait
iret
lods
sub
test
jnp
dec
add
das
sub
push
insb
sbb
pop
inc
fisttpll
push
test
fldcw
outsb
clc
ljmp
push
add
in
adc
subl
lock
or
stos
pop
push
sub
lahf
sbb
xlat
hlt
adc
pop
jno
add
mov
andl
lcall
xor
gs
pop
push
adc
xor
ljmp
sti
outsl
pop
lea
jns
inc
fst
mov
dec
jge
jecxz
push
jg
jne
inc
daa
fwait
call
mov
add
xchg
mov
ror
jns
pop
les
cmp
cmp
adc
idiv
add
stc
lcall
int3
jge
push
pop
sahf
pusha
scas
pushf
adc
xchg
icebp
loopne
mov
popa
mov
cmp
arpl
dec
xchg
insb
or
daa
mov
adc
jne
fistps
gs
shll
jb
clc
sub
add
popa
lods
popa
lret
subb
incb
push
sahf
pop
mov
jo,pt
push
test
aad
jnp
scas
and
xchg
dec
cmpsb
sarl
ds
mov
fbstp
and
mov
shl
test
xor
sub
aad
in
dec
cmp
push
cmp
aad
add
inc
mov
and
sub
sti
les
ja
inc
lret
sub
or
mov
bound
aaa
movb
dec
push
jmp
in
rcr
inc
xor
inc
lret
mov
out
sub
jno
jno
mov
add
mov
dec
js
sbbb
outsb
adcb
cmp
rcl
cmp
call
je
imul
test
xchg
fildll
push
cwtl
mov
dec
popa
cmp
stos
mov
out
inc
xchg
fildl
fcomps
mov
sbb
shl
xchg
pop
xor
adc
lock
xchg
sub
pop
in
aas
adc
jl
ret
mov
insb
adc
adc
ss
cmpsb
dec
out
inc
shl
add
pop
test
xor
scas
mov
xor
cs
je
pop
movsb
out
dec
push
mov
mov
jmp
adc
jo
lret
pop
dec
iret
mov
outsb
addl
lahf
lods
ja
push
dec
aad
mov
fiadds
insb
test
sbb
imul
arpl
inc
and
pop
or
fadd
dec
push
xchg
push
push
push
fs
loopne
outsl
adc
nop
ja
inc
sbb
stos
fwait
imul
push
xchg
fstpt
popf
push
lea
jl
push
jnp
cltd
fwait
mov
dec
xchg
mov
call
jmp
lcall
xor
dec
xchg
imul
xor
or
dec
bswap
xchg
push
dec
push
adc
adc
and
adc
pop
inc
sbb
jge
je
adc
or
fs
imul
roll
jno
pushf
test
mov
lods
xchg
mov
loopne
in
stos
jbe
or
int
shl
lods
clc
mov
stc
rolb
pop
adc
cmp
adc
data16
inc
jb
cs
xlat
mov
jg
popa
bound
xchg
dec
add
jnp
pxor
aas
and
mov
xchg
rclb
ficomps
or
das
insb
cmp
cmp
mov
push
outsb
bound
sbb
dec
ja
sbb
loop
xchg
add
idivl
xor
mov
push
jbe
xchg
shlb
test
cld
les
sub
mov
cmp
and
rcrb
jmp
inc
adcb
dec
or
jo
cmpsl
ljmp
or
mov
jecxz
fimull
aad
pop
inc
sti
out
pop
pop
lds
mov
scas
loop
test
jae
mov
cmp
cmpsl
lret
in
xchg
cltd
std
loopne
sbb
push
xor
mov
test
xchg
fisubs
cld
xchg
inc
loop
cmc
sub
pop
xlat
jge
sarl
pop
ret
leave
cmp
imul
fs
xchg
hlt
fdiv
popf
jo
out
pusha
jge
and
mov
dec
sbb
fistps
bound
mov
jno
fwait
outsl
mov
pop
test
push
pop
lfs
push
cs
push
std
mov
orb
add
pop
push
inc
jecxz
inc
jne
adc
dec
jnp
mov
sti
push
outsl
mov
int3
lahf
rcrl
pop
add
adc
jp
push
push
dec
sbb
daa
outsl
faddl
adc
stc
cwtl
stc
push
test
sbb
pop
shlb
dec
fmull
pop
arpl
dec
cmp
scas
in
pop
jmp
nop
mov
stos
leave
mov
push
insl
adc
fs
and
or
sub
int3
movsl
and
in
sub
sbb
cmp
scas
mov
mov
adc
push
pop
icebp
rolb
inc
and
rclb
mov
or
js
add
out
adc
out
xor
or
mov
add
mov
jmp
mov
push
jnp
mov
mov
inc
sub
sub
loopne
pop
xchg
lock
push
out
adc
rcl
mov
add
xor
push
xchg
add
lock
ret
adc
inc
pop
and
ret
insb
in
cmp
icebp
insl
and
xor
cmp
icebp
xchg
movsb
cmp
adcb
popa
dec
mov
ret
xchg
dec
gs
jg
out
and
test
loop
shlb
loop
clc
and
aam
lahf
loop
xchg
inc
imul
lahf
push
into
in
inc
mov
fildll
mov
xor
test
pop
inc
adc
jp
xor
push
xchg
leave
fstp
xchg
mov
pusha
iret
int3
pop
std
lods
pop
add
sbb
movsb
movsb
pusha
ret
xchg
push
sarb
pop
outsb
push
mov
jbe
push
dec
mov
sbb
mov
push
push
add
jp
dec
pop
and
xchg
xchg
push
test
mov
push
cmpsl
cmp
popa
mov
imul
nop
in
ss
std
shrl
fsts
jno
add
mov
dec
aas
inc
xchg
rcll
iret
aad
push
mov
and
sub
addl
or
mov
and
js
es
test
or
and
xlat
fs
dec
push
popf
jmp
mov
sbb
pop
jnp
and
lret
and
sbb
lret
out
xchg
mov
sub
sbb
jae
icebp
je
call
dec
sub
cmp
mov
push
pop
gs
mov
pop
add
mov
mov
xchg
inc
fs
add
jb
in
dec
mov
gs
test
leave
mov
jl
jo
pop
icebp
adc
dec
push
int3
xor
hlt
ss
out
sub
xchg
lods
sub
subb
adc
sbb
cmpsb
arpl
adc
enter
sbb
pop
call
dec
sbb
push
idiv
shlb
aam
inc
jp
cs
jle
xor
jle
cmp
xor
xor
dec
push
iret
dec
arpl
lcall
insl
lahf
aad
push
push
test
fcomip
repnz
sbb
inc
loop
aaa
dec
or
add
mov
repz
bound
push
pushf
and
pop
jp
icebp
dec
leave
adc
fucomip
aam
fisubrl
daa
push
aas
sti
movsb
movsl
jp
mov
mov
fisubl
mov
and
ds
mov
or
pop
test
insl
add
and
sub
imul
push
pop
cwtl
fcmovne
and
jl
xor
sub
mov
stc
dec
push
cmc
mov
jle
test
add
addr16
sub
stos
test
iret
cmp
mov
mov
cs
sbb
sub
jo
xor
push
or
mov
add
dec
rcrb
pop
out
mov
sbb
cmp
insl
test
cltd
sarb
xchg
xchg
mov
iret
push
in
repnz
fstps
test
out
aad
inc
out
adc
xor
insb
das
pop
push
cmp
jmp
mov
push
xchg
mov
std
clc
sarl
or
les
mov
scas
lods
imul
testl
xlat
jnp
push
xor
lea
int
push
and
sub
sub
lret
cmp
divb
xor
or
sub
pop
iret
push
mov
pop
outsl
int
fists
aad
jns
imul
dec
sbb
std
xor
bound
add
fnstsw
mov
cltd
mov
jnp
inc
jle
les
mov
mov
out
xchg
outsb
cmpsl
and
pop
je
mov
fldl
adc
frstors
push
mov
hlt
loope
adc
ljmp
mov
pop
push
push
mov
rorb
sbb
dec
jnp
pop
pop
mov
scas
pop
jnp
enter
into
add
push
enter
loopne
pusha
dec
imul
ja
or
push
jb
dec
faddl
or
shl
pxor
lahf
fimull
adc
jp
insl
push
or
jo
lock
dec
test
ret
jnp
fcmovnu
popf
sbb
mov
rcr
ret
mov
lods
mov
sbb
dec
mov
ja
mov
pop
add
xor
add
pop
mulb
lock
shrl
packuswb
mov
out
enter
cmc
insl
dec
sbb
aaa
jge
mov
scas
sub
push
test
push
lods
rorl
out
xchg
jle
pop
in
or
lds
scas
push
sub
cmp
xorb
pop
mov
ret
jg
cmpsl
xchg
pop
fdivs
loopne
xchg
aam
out
js
int3
or
test
push
fwait
pop
mov
shlb
sbb
dec
jg
loope
outsb
ret
add
xchg
sbb
in
je
mov
and
pop
dec
out
xor
or
fsubs
incb
xor
push
rep
and
aas
les
adc
xchg
xchg
fs
jae
ret
imul
pop
cmp
lahf
scas
pop
add
pop
xchg
pop
lea
pop
jmp
mov
adc
mov
xlat
mov
das
jnp
mov
in
cs
out
or
lods
ss
jl
imul
adcl
test
mov
dec
xchg
cmp
outsl
out
mov
pop
in
xchg
enter
or
clc
movsl
fbstp
int3
xor
inc
adcb
pop
cld
mov
data16
aad
adc
push
sub
das
imul
xor
push
push
mov
and
push
test
push
pop
js
mov
nop
mov
or
mov
pushf
cmc
cmp
bound
sub
lock
and
sub
mov
adc
push
ror
mov
or
mov
insl
enter
or
andl
sub
xchg
sub
ss
jl
dec
gs
and
leave
out
sbb
into
repnz
out
daa
rcll
imul
testl
jnp
or
add
lods
iret
add
ror
bound
or
adc
push
out
mov
push
sbb
mov
and
dec
cmp
push
stos
sub
int
dec
sub
subb
inc
push
sbb
scas
mov
fsubrl
hlt
hlt
lret
arpl
lea
jge
cmp
out
pusha
imul
and
add
xlat
adc
jns
adc
sbb
add
xor
xchg
mov
xor
xor
shr
jle
movsb
sub
int3
pop
cltd
inc
push
and
sbb
je
jae
std
bound
loope
xchg
jno
insl
mov
repnz
ljmp
cmp
nop
sti
and
xchg
rcl
data16
sbb
cmc
mov
push
addr16
icebp
dec
loop
jle
popa
fisubs
mov
test
fmuls
sbb
mov
xchg
cmp
sub
xchg
int
test
sub
xor
or
xor
stos
das
add
stc
pop
push
ret
out
sub
jno
xor
sub
fmul
nop
ljmp
outsb
add
jno
cmp
sti
jg
jae
jmp
int3
iret
ja
push
mov
fistpl
pop
cmp
fldcw
xchg
fsts
pavgb
mov
gs
jno
push
std
in
jle
loope
push
add
add
fnsave
sub
sahf
mov
cmp
push
int
out
ret
insb
rcr
push
cmpsl
inc
jo
enter
dec
push
inc
xchg
jne
push
lcall
fbstp
pop
sti
add
leave
push
inc
pop
fnsave
dec
xchg
sub
push
xor
movsb
mov
mov
dec
leave
and
outsl
in
xchg
pop
cmp
iret
test
pop
dec
or
cmp
inc
dec
aam
fwait
mov
roll
push
js
outsl
ljmp
fldcw
or
scas
or
jns
movsl
pop
push
clc
mov
push
fsubl
sub
push
sbb
repz
sub
clc
lret
bound
aas
cmp
imul
and
out
inc
jb
add
bound
bound
xchg
jnp
jg
push
pop
out
jl
stos
popf
or
inc
mov
and
mov
call
outsb
bswap
lret
jp
repz
stc
mov
into
cmpsl
inc
mov
shrl
sbb
mov
push
and
mov
mov
out
or
iret
and
jge
loope
xchg
aaa
sub
stos
jbe
cld
push
imulb
jecxz
repnz
sbb
cli
lods
add
mov
arpl
mov
popa
adc
and
test
dec
lea
push
push
cmp
ja
pop
fadd
mov
dec
in
mov
cltd
mov
adc
xchg
inc
pop
arpl
xchg
add
outsl
jbe
push
sub
cmpsl
and
mov
mov
loop
shll
cmp
repz
mov
and
mov
out
inc
mov
fadds
pop
cmp
jl
and
subb
xor
ret
sbb
loopne
sbb
int3
push
rcll
sarl
int
or
jb
pusha
sub
add
xchg
insb
dec
lret
push
mov
lock
insl
inc
icebp
jb
stos
test
xor
pop
jge
push
jae
es
sub
push
push
cmpsb
stos
add
cld
aad
inc
aas
or
lods
pushf
mov
and
xor
ja
loope
adc
pop
aas
sub
inc
loop
jb
iret
popa
push
test
rcl
pop
and
or
push
pop
aad
scas
out
inc
daa
sub
test
addr16
in
cmp
dec
pop
xchg
inc
xor
mov
sub
mov
dec
xchg
mov
push
xor
in
lret
rol
test
in
inc
add
or
in
ljmp
imul
jae
pop
dec
insb
fidivl
int
imul
mov
or
pop
dec
mov
pop
loope
and
sub
push
loope
test
adc
lods
fwait
cmpsb
outsl
lds
ja
aam
sbb
cld
int
scas
movsl
push
add
mov
adc
insl
cmp
je
adc
add
add
es
stos
mov
xchg
jg
xchg
cmpb
mov
add
push
adc
mov
jae
jmp
or
stos
lret
dec
out
push
stos
test
push
and
cmp
add
sbb
jg
mov
call
and
test
cltd
int3
test
in
cli
data16
mov
push
test
fcmovne
and
pusha
test
jmp
mov
hlt
inc
int3
inc
pusha
sub
add
pop
int3
cs
pop
mov
test
test
lret
ds
jge
dec
pop
lret
cmp
outsl
scas
lds
xor
mov
lods
or
adc
lods
adc
push
mov
neg
lock
pop
stos
adc
in
lea
js
sub
out
iret
push
pop
mov
add
dec
je
push
xchg
inc
xchg
fisttpll
js
sahf
jne
popf
negb
mov
sub
dec
dec
call
popa
cli
test
nop
js
data16
aad
xor
les
out
cmp
loope
dec
data16
mov
pop
xchg
mov
pusha
pop
sbb
cs
js
int
in
dec
pusha
mov
jle
adc
mov
dec
lea
or
mov
rclb
test
cli
inc
push
mov
out
push
std
or
sub
jae
xchg
xchg
test
pop
and
insl
mov
inc
adc
int3
int
push
jp
fidivrl
mov
fisubrs
adc
inc
clc
fs
clc
je
out
push
sub
and
push
push
out
mov
enter
ss
and
comiss
or
repnz
fstl
mov
or
cmp
outsb
sar
lea
mov
xchg
cmp
stos
sahf
out
pop
fists
enter
and
xor
inc
adc
insl
xor
repz
dec
test
pop
sahf
cmpb
push
fistpll
dec
xlat
flds
jnp,pn
push
cmp
mov
ja
cmp
jg
add
add
add
add
add
add
mov
jecxz
mov
inc
xchg
sub
mov
outsb
adc
push
cmpsb
add
xchg
mov
into
mov
inc
hlt
insl
push
in
lea
cmp
mov
pop
jb
icebp
pop
imul
les
insl
pop
adc
mov
pusha
dec
mov
lcall
movsb
ss
mov
mov
mov
in
push
push
loop
dec
mov
xorl
push
mov
out
lahf
sbb
mov
jae
pusha
and
jbe
jne
enter
jnp
ret
rolb
pushf
inc
xchg
std
push
mov
out
outsl
out
dec
cltd
cmp
push
inc
or
fnsetpm(287
test
pop
inc
jnp
or
xor
mov
out
lock
mov
adc
mov
out
xchg
cmpsl
jl
pop
xchg
jmp
push
inc
in
xchg
cltd
dec
imul
push
jmp
xchg
add
iret
enter
dec
pop
mov
cmp
sub
mov
stos
xor
outsl
out
sub
and
pop
mov
imul
test
add
lods
xor
jae
mov
ret
push
out
fs
or
pop
and
sbbb
movsl
outsb
ljmp
sbb
ds
sbb
mov
shlb
push
enter
pop
cmpb
sub
iret
std
dec
adc
mov
push
call
inc
rcrl
push
test
stc
cld
movb
fmul
ljmp
js
gs
mov
cmp
test
mov
inc
arpl
xor
or
adc
cmpsb
je
out
dec
push
fwait
xchg
xor
in
and
cwtl
int3
ja
stos
arpl
int
jg
or
or
pop
mov
xchg
enter
inc
movsb
test
aas
jne
adc
and
dec
pop
sbb
ja
mov
cld
lods
cs
test
test
cli
popa
leave
andb
arpl
imul
cmpsl
scas
loopne
pop
out
inc
and
outsb
inc
lods
lods
imul
pop
roll
scas
or
loop
mov
pop
pop
push
push
xor
movsb
mov
fistpll
mov
call
ret
add
addb
popf
mov
cltd
ficoml
xlat
fstpl
hlt
mov
mov
pop
jnp
fldl
pop
or
cmp
jae
cwtl
jne
cltd
xchg
out
push
fwait
scas
or
dec
iret
or
cmp
inc
pop
movsl
mov
cmp
xchg
stc
sub
push
push
xor
test
das
inc
out
push
cmp
pusha
fwait
repz
mov
jnp
aaa
dec
cmc
shrl
rclb
data16
push
rcrb
dec
push
and
dec
bound
xchg
inc
ret
in
aas
cmpsb
inc
loope
mov
cmp
jle
push
dec
adc
mov
push
insl
jbe
mov
add
lock
xchg
pop
cmp
mov
fsubl
pop
inc
insb
lret
mov
xorl
dec
or
add
mov
sbb
mov
fists
xchg
sbb
add
or
outsb
imul
gs
int
dec
insb
fsubr
cmpsb
xchg
inc
inc
insb
or
fwait
adc
mov
pop
std
sub
sub
mov
push
loopne
push
lret
mov
mov
or
xlat
add
stos
dec
mov
jbe
mov
test
xchg
scas
xor
add
jl
clc
and
mov
add
int3
popf
call
std
mov
je
les
jns
push
sub
hlt
test
jns
ror
pop
mov
pop
xchg
je
mov
jae
ds
imul
out
fnsave
mov
iret
notb
bound
pop
xchg
imulb
imul
shr
push
ret
loope,pt
mov
cmp
dec
push
shll
out
cmp
cmc
js
fwait
sub
lock
imul
mov
xchg
cmp
inc
lcall
ja
popa
out
in
push
adc
and
push
push
decl
pop
adc
cmpsb
ficompl
mov
ds
test
pop
fsubrl
mov
inc
cmp
les
lahf
aas
push
xor
mov
pop
leave
push
or
dec
and
sub
in
js
dec
jo
ja
fisubrs
cli
mulb
mov
mov
cltd
mov
test
jno
push
out
mov
add
xchg
std
mov
add
test
push
nop
iret
popf
cmpsl
mov
icebp
mov
jbe
out
xor
stos
and
lcall
and
outsb
pop
leave
lods
pop
es
jbe
mov
aam
outsb
mov
mov
jo
dec
aaa
sub
repnz
insl
inc
add
notl
jbe
cmc
push
xchg
jbe
ljmp
loopne
mov
enter
inc
or
dec
inc
cmpsb
push
pop
mov
dec
daa
push
inc
xor
xchg
cmpsb
jns
xchg
and
aas
aad
and
sbb
inc
movsb
int3
adc
pop
push
fwait
cmpb
in
cmp
mov
cmp
incl
push
add
inc
fisttpl
dec
stos
sub
pusha
in
aaa
jne
bound
insl
ret
mov
mov
pop
cmp
add
xor
hlt
in
mov
add
or
std
xchg
pop
lcall
sub
pop
loope
addb
out
push
jbe
inc
test
pusha
out
idivl
mov
loope
loopne
lods
push
push
cmpsl
xchg
out
loopne
repnz
fs
push
sahf
pop
push
cmpsb
repnz
dec
pop
mov
xor
mov
outsl
xchg
shr
jg
mov
pop
add
inc
leave
repnz
adc
inc
jg
add
insl
push
stos
or
push
add
out
xor
push
les
and
addl
negb
sub
push
ds
imul
mov
rcrl
xchg
sahf
je
ljmp
dec
or
enter
pusha
pop
inc
enter
shr
mov
inc
pop
push
xlat
pop
sbb
sub
or
mov
mov
addr16
sub
jmp
jo
or
push
jnp
out
lcall
pop
cbtw
imul
lahf
adcb
mov
ret
sub
shl
sub
xchg
cmp
jns
fiadds
push
sti
jmp
roll
pop
and
div
add
mov
ja
push
enter
hlt
iret
jnp
push
sbb
jne
cmp
dec
mov
and
add
popa
das
xchg
testl
sbb
imul
sbb
sbb
dec
mov
test
jns
or
cmpl
or
bound
sbb
dec
leave
dec
icebp
pop
js
mov
push
xchg
dec
es
enter
inc
and
mov
mov
leave
outsl
test
jb
mov
mov
jae
cmovno
xor
and
mov
mov
sub
sbb
pop
sahf
xchg
pop
mov
xchg
roll
or
cmp
xchg
xchg
aam
sub
das
xor
pop
jb
leave
outsb
test
push
cmc
mov
inc
and
mov
add
test
mov
xor
je
repz
sarl
pop
jmp
sbb
sub
jne
enter
inc
mov
fcoml
in
pop
add
mov
mov
ja
add
aad
dec
adcl
nop
jl
test
and
sarb
push
or
xchg
xchg
or
cmpb
xchg
loop
push
cmp
cmp
xchg
pop
out
fwait
cmp
mov
mov
add
sub
sbb
pop
rolb
jg
xlat
fwait
or
sbb
lds
jae
sbb
inc
dec
jne
int
xor
jg
adc
inc
pushf
mov
cwtl
xchg
out
insl
stos
lods
mov
jbe
outsb
push
cmc
test
stos
into
xchg
sbb
cmpl
imul
inc
pop
lret
scas
mov
adc
add
shlb
mov
xor
sti
pop
jbe
inc
pusha
popa
cmpl
push
aam
adc
xchg
sub
outsb
stos
inc
ja
mov
sbb
jmp
add
out
ret
mov
pop
lock
pop
enter
iret
mov
cmp
mov
mov
jne
test
rcl
sbb
adc
outsb
sbb
or
sbb
push
add
ret
shlb
in
fnstenv
ss
mov
cltd
sahf
in
nop
xor
and
jp
jg
xchg
movsl
clc
mov
lds
inc
jmp
mov
aas
pop
les
pop
inc
adc
stos
cmpsb
pop
sbb
lcall
mov
push
xor
pop
outsb
aaa
outsl
inc
pop
dec
push
mov
les
int
or
sti
lret
jae
sub
pop
xchg
add
xor
mov
push
int
sbb
scas
imul
jle
add
cli
pusha
sbb
dec
xchg
inc
mov
loope
enter
clc
adc
leave
fstps
mov
push
inc
cmp
sarb
inc
push
test
insl
data16
or
or
in
pop
js
data16
xor
mov
orb
pop
push
roll
inc
and
insb
or
pop
push
sahf
cld
dec
iret
cmp
scas
enter
in
push
je
jmp
xor
das
hlt
pop
mov
adc
roll
sbb
jecxz
add
jb
lret
fwait
clc
and
push
paddb
sahf
out
or
and
dec
xor
dec
xchg
idivl
lods
cmp
shlb
in
mov
push
test
shll
jg
not
mov
cmp
cs
push
not
nop
lret
aaa
xor
stc
mov
push
bndldx
ss
repnz
int3
sub
sbb
aaa
rcll
inc
sarl
adc
pop
adc
lret
shrl
mov
std
sbb
mov
fisttps
movsb
lods
mov
xchg
imul
enter
std
jne
inc
lea
mov
mov
xor
stos
fwait
sub
sbb
and
adcb
mov
jp
mov
mov
jle
ret
mov
inc
or
add
push
out
dec
inc
out
adc
xchg
scas
lahf
imul
lret
or
clc
ficoml
das
stc
out
pop
dec
xor
cltd
data16
popf
sbb
shlb
mov
dec
cld
mov
js
popa
mov
jbe
xchg
add
push
and
jmp
jno
xor
mov
jecxz
pop
loop
adc
fiaddl
xchg
jg
subl
pushf
jae
shll
mov
or
xor
jg
iret
jo
fmull
les
mov
popa
sub
cmp
pop
inc
in
add
adc
dec
xor
ja
push
popf
jb
aaa
push
ja
insl
aam
mov
and
in
iret
cwtl
jns
adc
lock
testl
aas
cmp
cmp
mov
sti
pop
imul
cwtl
mov
es
xchg
in
pop
jle
clc
test
ss
sbb
bnd
sub
cltd
aaa
test
mov
xchg
or
icebp
fxch
or
sbb
dec
cmp
repz
out
jae
mov
or
cmpsl
lods
adc
jnp
out
ret
dec
sbb
mov
push
lret
pop
inc
popf
mov
inc
pop
fisttps
ljmp
mov
aas
aas
push
xchg
dec
dec
subb
inc
ret
xchg
add
pusha
push
ret
push
bound
nop
cmpl
push
xor
hlt
in
cmc
adc
push
repnz
adc
xchg
int
fwait
into
lret
gs
lahf
mov
add
sbb
int3
lods
mov
lods
xchg
hlt
push
xchg
ret
or
pop
ja
push
push
addr16
inc
mov
daa
push
movsl
sbb
scas
addr16
mov
mov
shl
xchg
add
push
lea
jb
mov
dec
ret
cmp
test
adc
lea
and
jae
mov
and
add
jne
incl
loopne
mov
mov
sub
or
dec
xlat
test
mov
ret
outsl
out
sbb
or
outsl
mov
sub
lret
cmp
or
sbb
adc
fwait
mov
xor
xchg
pop
imul
fs
xchg
icebp
sbb
stc
xchg
add
idivb
lods
addb
out
xchg
test
sbb
repz
dec
and
jne
imul
lahf
insb
lret
or
mov
mov
add
daa
fimull
pusha
pop
xchg
sbb
scas
push
push
test
cmp
inc
inc
dec
in
shlb
lret
dec
xchg
leave
push
out
imul
sub
out
mov
or
pop
dec
mov
jmp
jbe
jne
dec
ja
push
mov
scas
add
xor
xchg
mov
sub
push
add
or
sub
imul
pop
sbb
rcl
jg
movsl
xchg
and
mov
sub
fdivrl
test
bound
int
subl
pop
push
ljmp
jnp
mov
lods
shrb
icebp
cmpsl
addb
sub
movsb
cmp
cmp
cli
std
stc
movsl
mov
popf
jb
imul
push
insb
stc
pushf
dec
and
sbb
xor
add
hlt
mov
lcall
rcl
mov
push
sbb
adc
cli
lock
dec
add
stos
sub
adc
lret
mov
or
inc
loop
test
sahf
aam
add
ds
xchg
adc
int
push
cmp
sbb
sub
gs
enter
adc
js
inc
mov
add
or
adc
jle
int3
jnp
nop
bound
jnp
mov
push
jns
mov
jae
rol
cmp
add
dec
and
xchg
roll
ret
mov
push
mov
xor
and
add
add
mov
lock
mov
add
xorl
push
push
aam
dec
jge
push
out
xor
mov
jmp
ja
loopne
dec
sbbl
je
hlt
push
jg
stos
clc
jnp
ja
sbb
loope
lds
jle
data16
mov
popf
mov
pop
xchg
mov
push
mov
pop
add
data16
push
adc
into
or
addl
outsb
sahf
rcrl
mov
out
ja
sbb
pop
xor
mov
adc
out
inc
jg
cltd
repz
and
dec
xchg
lods
cld
cwtl
pop
mov
je
movsl
mov
out
sbbl
xchg
hlt
data16
inc
paddb
or
adc
sub
sti
lret
sub
mov
cmp
call
iret
jg
mov
addb
imul
jns
test
and
push
ss
lahf
int
push
push
adc
dec
inc
xchg
jle
arpl
int3
push
and
mov
mov
pop
push
clc
xchg
iret
adc
mov
rcll
cld
mov
leave
rep
dec
push
movsl
cmp
mov
cmp
scas
pop
std
push
std
dec
sub
lret
sub
pop
ss
pusha
dec
pop
mov
cwtl
aas
and
fisubrl
pop
or
xor
cli
sub
in
lods
lds
inc
dec
mov
insl
mov
leave
mov
jo
cmp
das
cmp
push
outsb
mov
das
sbb
dec
sbb
scas
adc
imul
push
mov
xor
xchg
inc
sbb
sub
shr
aas
stos
out
jne
aam
fs
out
xchg
repz
dec
mov
sub
xchg
ret
adc
pop
push
inc
mov
add
cmp
mov
popa
mov
js
xchg
dec
in
frstor
imull
aad
loopne
xchg
sbb
mov
and
push
stos
ror
sbb
push
push
fwait
loope,pt
ret
int3
sub
dec
imul
add
pop
insl
cmc
or
repnz
mov
int
loop
mov
inc
imul
test
jp
aad
fs
adc
cmpl
xchg
mov
or
shll
mov
mov
xor
adc
imul
pop
cwtl
xchg
punpcklbw
scas
iret
pop
pop
sub
jp
sub
mov
pushf
daa
frstor
popa
add
jg
xchg
in
sahf
or
shlb
push
not
jbe
prefetch
add
push
xlat
insl
leave
dec
cmp
sbb
sub
pop
mov
jmp
mov
aas
jbe
dec
sti
repnz
adc
fnstcw
and
xchg
xchg
mov
orb
jae
dec
imul
les
int3
addl
cmp
imul
cld
mov
cmp
loope
mov
cld
jmp
pop
sub
nop
inc
les
shrb
into
subl
xchg
sbb
arpl
push
add
loope
loope
or
cli
movl
cmpb
adc
out
movsb
mov
inc
iret
lea
loope
aas
das
xchg
xor
movsl
add
mov
roll
test
lea
test
push
push
ja
pop
loope
and
xor
mov
push
jno
orb
inc
jbe
and
xchg
and
xchg
loop
psubb
test
xor
int3
cmpb
adc
enter
stos
or
sub
nop
iret
xchg
shr
cs
popa
dec
je
rol
and
mov
push
mov
sub
aam
ret
xchg
test
pop
adc
sarl
mov
xchg
shrb
mov
mov
shl
jl
dec
pop
out
adc
aam
xor
cmpsl
cltd
xor
es
mov
xchg
aad
mov
push
std
xor
xchg
mov
xchg
xor
jo
mov
je
pushf
sbb
push
rcrb
sbb
in
icebp
inc
loope
clc
mov
pop
sahf
scas
roll
shlb
aam
mov
mov
unpckhps
add
stos
ja
jo
scas
daa
test
call
rclb
loopne
roll
jnp
incl
test
add
cld
pop
js
aas
gs
out
popl
data16
mov
leave
or
dec
stos
cmp
sbb
mov
aad
and
mov
cmpsl
jecxz
movsb
out
and
jl
inc
addb
mov
lds
jno
and
xchg
in
lods
sbb
xchg
xchg
out
or
es
inc
adc
enter
mov
mov
into
adc
mov
and
sub
incl
cmc
mov
cmp
mov
xchg
push
push
jp
push
out
mov
ret
inc
ret
jo
aas
and
adc
mov
scas
xlat
xor
mov
xchg
ja
push
mov
cltd
arpl
xor
frstor
fstps
mov
push
cmp
cmp
les
jns
stos
sarl
add
adc
push
mov
jp
mov
movsb
movsl
jl,pn
pop
inc
xchg
push
mov
outsb
push
jg
ret
lahf
pop
mov
adc
xor
mov
lods
and
and
lfs
sub
cmp
nop
pop
ljmp
lods
ljmp
aaa
outsb
push
adc
or
clc
test
loopne
xor
pop
xchg
dec
push
sbb
mov
out
insb
xchg
mulb
ucomiss
in
and
pop
lock
jnp
out
dec
dec
mov
stc
test
push
push
ret
je
xor
pop
test
and
imull
lcall
or
cmc
push
enter
fwait
imul
push
xchg
lahf
pop
mov
fnstenv
stc
inc
push
xchg
push
and
in
pop
adc
mov
jae
sbb
in
fnstcw
xchg
sarb
xchg
lcall
and
sti
jnp
push
in
sub
mov
ldmxcsr
sahf
cwtl
dec
jmp
jmp
lahf
call
leave
and
sbb
xor
sti
or
dec
push
dec
or
adc
xchg
loopne
jp
mov
fidivrl
xor
icebp
mov
and
fidivl
sbb
dec
add
jnp
jecxz
adc
xor
jecxz
dec
dec
adc
mov
fsubl
or
bound
shl
dec
je
mov
jno
js
jle
ret
add
xchg
imul
aas
outsb
aaa
scas
mov
inc
test
xor
xchg
inc
push
mov
cmp
out
pop
push
pop
in
nop
shr
neg
xor
pusha
loop
popa
fdiv
pusha
dec
jae
rclb
pushf
jno
aam
push
jmp
or
ljmp
loop
je
jp
clc
add
add
es
xor
js
cli
sub
mov
inc
sub
lods
adc
lret
sbb
add
mov
add
je
or
inc
repnz
push
inc
sti
mov
pop
fistpll
les
mov
xor
inc
inc
jp
mov
fnstenv
pop
xchg
mov
ror
sub
bound
test
lcall
test
mov
adc
dec
gs
stos
sbb
xor
mov
out
dec
sbb
push
sbb
mov
jp
jle
or
push
mov
or
push
dec
jb
inc
aas
adc
cmp
icebp
adcb
jge
mov
pushl
adcb
mov
bound
in
pop
lret
xor
test
adc
aad
pop
jmp
jg
outsb
ror
mov
shrb
leave
std
int
xchg
lret
sarl
scas
push
push
data16
lret
xor
mov
lret
dec
int
jmp
outsl
psllq
imul
adc
inc
sub
cld
mov
mov
out
pop
lea
add
jecxz
xchg
jne
mov
cmp
pop
sbb
jle
mov
pushw
inc
sbb
xlat
mov
pop
lock
aas
or
lock
jmp
xor
jmp
sub
cli
xor
jae
mov
das
jns
push
sub
sti
or
jg
scas
sbb
cwtl
and
loopne
jg
push
lret
mov
xchg
lcall
sahf
test
std
and
push
ds
push
lcall
pop
ljmp
mov
and
inc
inc
add
cmc
mov
pop
scas
and
adc
mov
mov
das
test
mov
and
add
mov
mov
pop
lock
xor
adcl
mov
mov
fstpt
push
push
push
inc
mov
mov
shr
subl
push
mov
loopne
pop
sub
jecxz
fwait
cli
jg
sarb
icebp
xor
cmc
push
cmp
lahf
out
repnz
test
mov
mov
cltd
fnstcw
jge
pop
cmp
and
insl
pop
jge
test
pusha
cli
sub
xchg
and
stos
cmp
mov
add
lods
ljmp
ret
cli
sbb
sbb
cmove
ss
lock
or
insb
out
dec
js
add
sbb
insb
ret
mov
rcrl
popf
insb
dec
fadds
or
or
cmp
int3
pop
push
mov
inc
packuswb
sahf
add
xchg
sub
sbb
fs
or
cld
daa
mov
and
pop
movsb
orl
int
stos
test
in
fcompl
sub
cli
jp
out
enter
fbstp
or
inc
mov
imul
lret
popa
subl
not
add
stos
stos
addr16
sbb
mov
inc
loop,pt
add
inc
add
test
fs
mov
or
jae
cmp
jnp
inc
pop
sub
add
fwait
mov
xchg
pop
js
insl
mov
xlat
adc
pop
rolb
or
xor
stc
push
insl
lods
dec
xchg
lea
fisubs
jns
outsb
data16
push
mov
and
sbb
js
rep
int3
sbb
xor
daa
pop
in
cmp
movsl
pop
sub
mov
ret
cmp
add
jns
enter
xchg
cltd
push
add
rcll
out
jo
scas
add
mov
pop
shll
rcrb
adc
and
in
or
mov
sub
xchg
inc
push
pop
inc
jg
mov
jg
xchg
cmpsl
fwait
repz
mov
leave
daa
pop
adc
sub
jnp
or
mov
enter
pusha
and
pop
push
into
popf
or
adc
dec
es
push
jecxz
sbb
xorb
lcall
fcomip
ss
xchg
mov
or
push
sbb
jl
ljmp
sub
mov
lods
mov
rep
add
or
cwtl
lock
mov
and
test
int3
mov
mov
dec
incb
out
iret
fwait
dec
fsubs
lods
aas
in
in
dec
bound
jne
cmp
or
lcall
popf
mov
mov
xor
je
xor
or
int
leave
dec
repz
lock
sub
fcom
cld
jl
out
mov
pop
lods
xchg
das
add
imul
add
inc
in
cmp
sub
pusha
jle
fnsave
or
jmp
fisubrs
sub
insb
xchg
xor
ds
in
jae
cmp
xorl
pop
repnz
outsb
dec
xchg
cmpsl
movsb
jnp
movsb
shll
mov
fdivl
inc
aas
lds
pushf
scas
push
push
mov
xor
or
outsb
test
pop
dec
jl
inc
push
ljmp
in
or
and
lock
testb
lea
mov
stos
mov
fwait
or
out
outsl
adc
das
cmp
xchg
mov
popa
into
les
pop
push
sbb
adcb
js
sbb
movsl
xlat
int3
add
aad
hlt
mov
xor
loopne
add
cli
fistl
mov
std
jae
mov
incb
add
in
fsubl
sbb
jae
stos
fldt
lea
lret
lock
and
mov
lea
loop
out
cs
sub
mov
jb
enter
cmpb
or
mov
inc
cmp
mov
test
daa
push
push
xchg
cmp
sbb
dec
add
nop
icebp
lock
in
pop
and
std
test
icebp
cmp
jge
ret
leave
leave
jecxz
mov
and
cmpsl
mov
and
cs
mov
shrb
outsl
and
addr16
fwait
push
push
ror
xchg
movsb
push
sbb
adc
inc
or
into
incb
mov
out
sarl
repz
jge
push
sub
mov
jge
test
and
stos
and
jo
xor
push
mov
subl
mov
lea
shlb
shl
lcall
test
stos
rorb
xor
in
and
es
int3
adc
push
mov
mov
aas
les
adc
cmc
and
jnp
repnz
repz
leave
mov
scas
jae
in
mov
jg
repnz
out
mov
sub
push
lds
scas
add
scas
cltd
fimull
and
sub
repnz
rcr
or
cli
popf
cmpl
xchg
pop
sub
xor
mov
xchg
lea
out
nop
push
fisttpll
out
lcall
stc
lods
dec
mov
data16
std
int
jns
int
js
test
jecxz
xor
ret
xor
cmp
mov
adc
mov
aaa
add
inc
mov
pop
fistpll
sbb
xchg
mov
and
scas
mov
adc
insl
dec
inc
popf
movsb
adc
js
sbb
in
repnz
sbb
stc
mov
xorb
lahf
cmp
fcompl
pop
sub
add
test
dec
aad
mov
movsl
imul
xor
and
add
and
ds
inc
or
mov
in
sbb
pusha
stc
xor
lret
xchg
jl
or
push
cli
stos
scas
cmp
sbb
mov
test
clc
in
push
sub
gs
pop
fnstsw
dec
cmp
test
dec
cmpsl
loope
imulb
lods
hlt
addr16
mov
dec
in
push
sbb
insl
js
arpl
adc
icebp
mov
insb
xchg
push
inc
mov
pop
add
fs
rorb
sub
cmpsb
imul
sub
es
or
or
cmp
mov
ja
sub
jno
jmp
sub
dec
aad
xchg
jo
icebp
pushf
or
sub
jge
xchg
fwait
in
movsb
test
outsb
rorb
jae
jle
fldt
ret
sub
xchg
arpl
dec
pop
gs
out
bound
bound
loopne
shr
mov
testl
mov
mov
imul
ret
ds
je
sbb
outsl
sbb
cmp
mov
jnp
test
pop
and
hlt
push
paddsb
xorl
test
and
mov
inc
xor
mov
xchg
inc
inc
fwait
cmpsl
xchg
shrl
lea
rcrl
and
insb
push
xlat
sub
mov
sarb
dec
dec
push
cmp
xchg
or
pop
bnd
lods
daa
jecxz
xchg
fisubrl
cmp
ret
mov
mov
push
cmp
mov
jecxz
xor
sbb
imul
mov
je
mov
mov
jbe
data16
sbb
insl
mov
sub
cltd
sti
cmp
jg
add
rorb
inc
cmc
inc
out
sbb
cs
mov
and
jge
jns
lcall
icebp
aas
les
jo
sbb
movsb
out
invd
xor
jmp
hlt
imul
cmp
test
clc
add
imull
ret
add
mov
adcb
mov
bound
sub
and
adc
dec
mov
push
cmp
repz
imul
sarb
inc
adc
cmp
imul
xchg
rcrb
mov
dec
loop
pop
mov
aam
imul
ja
push
xlat
mov
push
subb
push
or
jo
arpl
xchg
mov
lret
adc
addr16
inc
mov
fdivrl
js
cld
xor
aam
dec
pop
jnp
test
ja
add
scas
push
sub
fcomip
dec
aam
mov
cmp
mov
aas
loop
cmp
xchg
or
mov
lret
pop
hlt
stc
sti
in
add
inc
aad
clc
aas
pop
sbb
into
into
jp
jnp
jmp
out
push
sbb
mov
push
stos
in
out
add
sub
mov
sub
mov
pop
jo
popf
popa
or
cmp
arpl
out
fimull
lcall
mov
cwtl
jecxz
ja
mov
cmp
sub
add
jo
push
nop
xchg
mov
adc
pop
xchg
mov
adc
jae
lcall
pop
bound
push
ds
sti
push
xchg
cld
cmp
xchg
mov
clc
dec
xchg
cmp
divl
dec
gs
mov
out
cmp
daa
call
in
dec
xor
sbb
adcl
mov
leave
aas
aaa
mov
jp
popa
push
xchg
mov
pop
mov
sbb
mov
push
or
mov
in
xchg
push
aas
mov
hlt
add
leave
jnp
ss
scas
push
pop
adc
das
dec
jp
adc
push
xchg
bound
or
pop
adc
pushf
lcall
mov
mov
xchg
hlt
jno
dec
insl
inc
adc
xor
jl
aam
jo
lret
add
and
lock
pop
aaa
bound
xchg
cmp
cmpsb
xchg
loopne
pop
shl
movsb
xchg
ljmp
cmpsl
jbe
jbe
test
jecxz
and
mov
sbb
div
inc
fiadds
outsb
adc
add
mov
into
ror
jae
jmp
stc
cmpsb
bound
adc
mov
xor
xchg
mov
or
mov
fisubs
insb
push
and
sti
push
sbb
xchg
mov
pop
hlt
lock
test
into
jge
xor
jge
subb
sub
xor
jmp
pop
faddl
mov
adcl
cmp
hlt
aaa
sbb
inc
sub
cltd
push
fisubl
hlt
lahf
xor
aaa
push
dec
and
push
jb
xchg
adc
pop
pop
pushf
add
jmp
cmp
sub
out
ret
adc
add
sahf
add
out
ja
imul
push
test
cmp
pusha
pop
jecxz
mov
push
pop
mov
dec
jge
inc
mov
clc
mov
sbbl
cmpb
out
mov
lea
pop
jp
movsl
jbe
mov
inc
lods
test
mov
pop
sbb
addr16
xchg
jbe
pavgb
roll
inc
jge
enter
and
inc
cs
and
or
cmp
inc
dec
sub
sbb
imul
outsb
fists
rcr
or
xor
push
pop
mov
push
or
test
out
add
rcll
mov
mov
dec
aad
mov
ss
dec
jmp
and
gs
aaa
bound
int
mov
aaa
loopne
sbb
ss
pusha
ficomps
imul
sbb
jg
lret
mov
inc
add
filds
into
and
and
sub
dec
ljmp
mov
add
pop
insl
push
cs
sub
dec
fwait
dec
test
testb
pop
xor
test
xchg
addr16
dec
imul
adc
lods
imul
jg
jne
xor
rorl
mov
inc
lods
andb
mov
sbb
mov
iret
pop
jge
xchg
in
dec
imul
xchg
push
scas
ss
jge
fwait
push
jg
inc
dec
xlat
lds
inc
pop
mov
popa
adcb
push
ss
sbb
addb
add
ja
add
addb
mov
cli
addr16
sub
mov
subl
mov
mov
mov
mov
movsl
stos
out
xor
push
jo
call
inc
dec
and
leave
push
xor
sbb
jne
outsb
add
cmp
inc
cmpsb
aaa
je
dec
stos
sahf
jns
and
inc
sti
xchg
mov
ret
insb
add
cmp
mov
popf
sbb
js
jl
test
mov
movsb
push
rcll
popa
imul
icebp
sub
stos
ss
addr16
mov
testl
adc
arpl
lret
fldz
not
jbe
fwait
cld
cmp
sub
int
enter
adc
mov
dec
pop
jl
push
jbe
push
mov
cs
cli
mov
xor
dec
je
repnz
adc
testl
daa
jne
sbb
xchg
in
jo
arpl
test
xchg
push
inc
test
mov
add
lods
inc
enter
mov
xchg
jl
and
fiadds
aam
mov
aam
cmpl
cmp
cmp
mov
push
jge
mov
in
out
cmp
push
lret
mov
sub
sub
sub
or
adc
movsb
ljmp
adc
fisubrs
jge
pop
adc
mov
cmpsl
mov
icebp
mov
mov
push
int
in
xchg
out
or
iret
loop
test
jo
sbb
std
cli
cli
stc
push
adc
lret
dec
add
sbb
push
lret
push
aam
or
pop
adc
shlb
pop
repnz
sub
mov
es
cmp
das
mov
inc
pop
sti
push
mov
jns
js
aad
jg
mov
test
adc
mov
inc
dec
inc
cmc
sub
loopne
fdivl
icebp
cmp
popf
ja
fldcw
xchg
sbbb
lds
fistl
cmp
dec
mov
lret
outsl
adc
insb
cltd
enter
adcl
scas
movsb
xor
jae
rclb
jno
gs
jl
test
loope
cwtl
jo
icebp
clc
xchg
aas
arpl
pushf
sahf
mov
cmpsl
jno
adc
sahf
sbb
jnp
sub
shl
xor
pop
dec
jns
stos
ret
or
and
ror
call
pop
subb
fcoms
xor
xchg
pop
insb
inc
xchg
sub
add
mov
test
adc
pop
mov
popa
ss
in
imul
loopne
mov
into
adc
inc
gs
testb
inc
out
es
sbb
je
je
aaa
mov
es
stos
fsts
bound
rorl
or
testb
sub
nop
mov
ficoml
sbb
mov
and
and
out
mov
movsb
push
inc
call
push
lock
and
add
fistpl
jnp
repz
bound
push
mov
inc
scas
out
andb
je
shll
or
sub
dec
movsl
pop
xor
iret
push
mov
mov
shll
push
fwait
dec
mov
add
psubusw
xor
push
lret
push
add
aaa
xchg
and
sbb
sub
push
xor
add
or
xchg
pop
stos
test
push
or
js
or
je
jae
pop
push
sub
push
pusha
nop
sub
sbb
push
dec
enter
cld
pushf
cmpl
enter
inc
daa
sub
mov
add
push
adc
adc
pusha
jae
clc
and
mov
int
sub
mov
pop
cmp
or
and
aas
pusha
cmp
xor
push
or
clc
or
sbb
pop
movsb
call
xlat
pop
in
jnp
divb
push
fcom
stos
arpl
test
jl
jne
xor
mov
pop
xor
jp
sbb
mov
int3
jl
push
push
jae
lcall
inc
int3
mov
repnz
negb
xor
rep
ja
sub
pop
jns
call
sbb
mov
and
add
loop
scas
cwtl
dec
sbb
in
pop
xor
mov
xor
add
mov
js
loope
sub
sbb
std
es
jb
lock
sbb
push
fcoml
stc
mov
xchg
cmp
and
outsl
gs
jnp
cmpb
out
or
daa
pop
mov
aam
and
icebp
push
lods
adcl
icebp
pop
push
jp
mov
in
insl
outsb
xor
mov
out
cmpsl
adc
inc
aad
dec
call
mov
mov
leave
lahf
imul
cld
mov
inc
jl
popa
push
fwait
movsb
xchg
push
fmull
fisttps
roll
push
xor
lods
sub
adc
sti
xchg
mov
cli
xor
mov
adc
mov
outsl
mov
ljmp
mov
fwait
sbb
sub
mov
sub
jg
jmp
mov
fcoml
xor
xchg
sbb
adc
lds
mov
ret
mov
dec
pusha
inc
fiaddl
mov
ror
rcrl
in
lock
mov
push
rcr
push
jp
orb
xor
inc
std
sub
fists
cmpsb
pop
js
test
sub
mov
push
icebp
xor
mov
fwait
cmc
int
push
and
repz
loop
in
hlt
xor
dec
jno
pusha
jecxz
in
ret
je
hlt
add
fistpl
mov
aas
mov
dec
into
in
fs
lods
ror
test
pop
cmp
negb
pop
mov
and
stos
out
and
loope
call
roll
aaa
xchg
jge
xor
jmp
mov
sub
inc
test
int3
es
adc
stos
test
mov
outsb
inc
sub
cmp
xchg
pop
mov
ljmp
mov
jle
dec
jmp
inc
fmull
or
rolb
push
outsb
fcoms
std
pushf
push
sbb
or
cmpsb
adc
cmpsl
adc
fsubl
fmull
and
adc
movsb
jbe
clc
jb
mov
adc
int
push
or
mov
sarb
adc
insb
lret
cmp
xor
pop
sub
jbe
jns
daa
push
lods
test
fcmove
pop
mov
enter
daa
and
xor
or
out
test
adcb
mov
out
jmp
shrb
mov
in
xchg
lods
add
xlat
in
mov
xchg
jg
dec
and
movsb
sbb
jnp
xor
xchg
adc
cmc
lods
mov
scas
rol
dec
inc
cmp
mov
cmp
sbb
xchg
clc
inc
rol
dec
das
add
rcrb
iret
repnz
and
hlt
loop
pop
inc
loop
and
sub
inc
movsl
xor
bound
push
in
in
adc
fldenv
lret
or
ret
stos
rorl
or
sbb
jns
aaa
mov
jge
push
je
call
push
sbb
rep
cs
popa
lock
xor
stos
ret
stos
or
pop
aam
xchg
adc
scas
lcall
dec
mov
add
pop
xorl
cmp
push
ss
fadd
pop
cmp
pop
shll
int3
ja
pop
cmpb
xor
imul
sarb
add
lret
arpl
dec
iret
rcrb
repz
pushf
xor
or
test
or
sub
dec
and
push
push
iret
out
test
lock
adc
test
ljmp
into
ret
aam
sub
push
sub
cs
arpl
cmc
pop
ds
mov
movsl
dec
les
jle
stos
call
shr
sbb
stos
imul
pop
inc
adc
stos
push
scas
ja
aas
ret
pop
leave
xor
leave
mov
mov
push
xor
xchg
test
and
stc
js
mov
lea
insl
inc
or
adc
aaa
imul
insb
jg
cmpsb
out
int
aas
les
test
fwait
shrb
cmp
push
cwtl
adc
mov
pop
lcall
mov
cwtl
loopne
insb
mov
add
sbb
cld
push
add
jp
in
pop
pop
ja
loop
imul
popa
stos
sbb
add
cmp
sub
imul
add
mov
test
pop
jb
sbb
and
inc
jnp
dec
mov
rclb
lock
lahf
in
add
add
or
data16
les
add
pop
cmc
popa
iret
sub
mov
popf
leave
in
insl
rcll
sarb
cltd
test
stos
mov
push
mov
push
push
repnz
add
adc
mov
xor
movsl
sbb
cmp
pop
inc
jp
sbb
movsb
std
icebp
int3
add
outsb
test
stos
cmp
clc
push
pop
push
imul
fistps
mov
mov
hlt
jmp
outsb
arpl
lcall
jmp
pop
adc
dec
jb
fldlg2
leave
cmp
jmp
sti
cmpb
adc
or
dec
ret
das
mov
outsl
mov
cmp
sbb
or
cmpsl
mov
xor
sbb
jge
push
ss
xlat
daa
int
ja
adc
mov
adc
pop
lock
mov
push
and
ljmp
dec
insb
push
mov
ss
and
cmpsb
addr16
stos
add
ds
dec
pushf
adc
out
repnz
inc
push
mov
rcl
lret
mov
call
mov
jle
xchg
sbb
pop
sahf
xor
loop
inc
add
xchg
ljmp
xorb
in
xor
jp
out
bound
fwait
mov
ljmp
sti
or
push
cmp
imul
and
push
sti
sbb
mov
mov
or
ja
fxch
push
fisubs
ret
xchg
mov
int3
je
test
test
jno
push
sbb
sbb
mov
mov
scas
xchg
aam
mov
push
push
icebp
jg
pop
loope
sub
insb
xor
pop
lds
cltd
xor
xchg
sbb
sbb
xor
dec
je
sub
ja
push
testl
test
pop
ljmp
imul
pushf
jmp
rorl
pushf
arpl
adc
inc
out
and
repz
cs
mov
test
lds
jae
and
js
pop
sub
fsubrs
xchg
imul
mov
xchg
pushf
lahf
mov
jo
cmp
lret
cmp
jo
xchg
pop
repnz
popf
je
and
in
inc
fs
movsb
sti
push
mov
fcoms
sbb
fcmovnbe
sbb
sbb
lret
bound
push
adc
ss
dec
jle
ret
test
mov
lret
imul
sbb
ljmp
mov
lock
clc
gs
rol
addb
pop
fsubs
lret
pop
pop
je
xchg
sbb
out
sarb
out
pop
cld
or
xor
lods
mov
jno
mov
sarl
int3
rorl
imul
mov
lret
and
mov
sahf
lret
push
push
iret
lods
aad
int3
icebp
in
cmpsl
pop
jmp
push
pop
lock
or
xor
outsw
cli
cli
push
inc
aas
mov
jae
jp
jbe
iret
cmp
movsb
mov
mov
lcall
int
cmc
add
dec
sub
shll
fmuls
xchg
jge
dec
adc
scas
mov
loope
pop
insb
sub
xor
subb
int
lret
leave
popa
xor
mov
enter
dec
loop
test
sub
insl
iret
adc
adcl
sbb
xchg
movsl
xor
inc
imul
xor
or
addr16
mov
out
mov
adc
scas
dec
cmpsb
sbb
dec
pop
mov
aad
dec
dec
fsubrs
movsl
clc
cmc
int3
xor
mov
loop
cmpsl
sub
or
push
dec
pop
mov
aaa
or
add
enter
push
xchg
xor
and
loope
lcall
pop
adc
jge
ds
pop
inc
inc
jle
repnz
sub
sub
dec
cmp
add
sub
adc
int3
movl
xchg
int3
pop
push
fcmovnb
sbb
or
cmpsb
lahf
jnp
and
mov
shrl
lods
jg
pusha
mov
and
cmp
jl
std
insl
inc
sub
lods
dec
in
pop
or
mov
mov
insb
xchg
cli
test
jns
push
sub
cmp
lods
jnp
inc
ds
into
out
and
test
sbb
in
fstpl
xchg
jle
mov
int3
add
sti
pop
jp
cmp
aaa
push
sub
mov
push
jmp
fstpt
repnz
lret
jae
jno
rcr
das
iret
dec
mov
mov
add
dec
inc
xchg
ret
je
mov
clc
cwtl
mov
sti
gs
enter
divl
push
pop
push
push
insb
mov
inc
pushw
in
mov
lock
insl
lods
mov
inc
or
icebp
mov
lds
stos
push
push
rolb
std
inc
idivb
pop
jmp
push
cmpb
add
cmpsl
pop
adc
pop
sub
sbb
popa
jne
ss
xchg
shl
lock
into
mov
mov
lret
xor
ficompl
push
xor
pop
push
jge
mov
aam
lret
jae
jae
nop
jg
imul
sub
cmp
cmp
js
pop
mov
jmp
loope
jns
xor
roll
imull
rclb
inc
hlt
cwtl
repnz
fdivrl
loop
add
fadd
ss
ficomps
lcall
xchg
in
sbb
adc
or
dec
enter
push
add
mov
and
aad
js
mov
out
xchg
sbb
dec
push
jbe
icebp
push
out
push
aas
idivl
xor
adc
push
pop
outsl
pop
xchg
outsl
cmp
push
mov
test
gs
fildll
pop
mov
cli
dec
push
push
sbb
orb
outsb
push
cmpsl
in
lods
or
das
mov
repz
or
mov
cmpsl
je
imul
add
sbb
jno
xor
arpl
inc
and
out
ret
sti
lods
sbb
cwtl
mov
out
addb
or
dec
pushf
jle
sbb
mov
mov
andl
frstor
jl
xchg
inc
push
jnp
mov
mov
cmp
mov
push
mov
out
cltd
pop
mov
mov
mov
sti
mov
pop
cmpsl
xor
out
push
jle
fcom
mov
push
jp
movsb
clc
jnp
outsb
or
mov
pop
out
or
scas
jbe
sahf
imul
inc
or
cmp
sub
inc
enter
scas
sbb
xchg
mov
out
pop
decl
insb
iret
aaa
and
or
lahf
enter
inc
pop
mov
push
cmp
aam
enter
mov
hlt
insl
pop
xlat
fs
sub
rorb
sub
mov
mov
js
jge
pop
outsb
push
mov
push
pop
pop
fwait
xlat
push
push
movsb
mov
bound
idivl
xchg
sub
push
mov
mov
xor
insb
pop
push
ficomps
cmc
cmp
mov
adc
ret
call
stc
xchg
mov
dec
xor
push
out
ret
sbb
jo
pop
rorb
pop
aaa
mov
xchg
std
ja
out
ror
dec
repnz
mov
add
addb
shrl
adc
lea
out
iret
sub
xchg
jle
cwtl
sbb
ja
mov
xor
ds
jecxz
xor
mov
and
jae
and
nop
rcr
ror
mov
clc
push
inc
js
fwait
imul
inc
jns
stos
cmp
xor
ds
cwtl
and
test
divb
test
das
inc
pop
std
push
mov
sarb
xor
iret
jne
inc
pop
xchg
mov
out
mov
stos
mov
inc
scas
sub
rcrb
mov
mov
jl
xor
enter
fdivrl
je
insl
cmpsb
push
inc
lods
mov
mov
dec
enter
in
lahf
push
push
xchg
adc
data16
loop
adc
fcoms
mov
je
jbe
and
sub
dec
outsl
mov
rorb
adc
icebp
lahf
push
in
mov
into
lods
pop
out
pop
ret
je
push
xchg
jnp
stos
aam
aad
sti
inc
andb
neg
push
mov
xor
aad
push
xchg
sbb
lcall
pop
and
xchg
pushl
or
loope
xchg
or
jl
data16
cld
and
mov
lret
leave
orl
adc
sahf
je
fnstcw
lods
inc
push
shll
scas
mov
dec
lea
ret
call
push
stos
and
mov
enter
ss
xor
leave
call
outsl
dec
cmp
pop
cmc
es
pop
ret
pavgb
nop
pop
dec
imul
lods
test
invd
repnz
pop
mov
lcall
and
xor
dec
cmp
add
lds
jae
xchg
stos
dec
test
mov
xlat
rol
mov
out
cmp
add
mov
lahf
mov
adc
test
and
adc
xor
lods
popa
xchg
or
rcl
loope
jno
loopne
aaa
ss
fldcw
aad
mov
sub
rol
movsb
mov
ss
sbb
icebp
popf
pop
mov
add
adc
ljmp
loop
dec
mov
add
pop
pop
roll
aas
ret
mov
push
adc
mov
jmp
mov
lea
ljmp
jnp
adc
jnp
xorb
mov
es
mov
arpl
mov
fldt
pop
sbb
dec
adc
mov
scas
inc
test
movsl
inc
jg
fisubs
mov
dec
xchg
adc
pop
inc
out
fbld
inc
aam
lret
loope
add
jo
in
adc
xchg
and
mov
iret
popf
adc
cld
jmp
fwait
sti
jo
addr16
sbb
ljmp
sahf
add
xchg
outsb
fisubl
popl
dec
in
jge
lods
lret
bound
loop
mov
push
jle
cmp
data16
loopne
out
xlat
push
mov
fsubr
incl
dec
pop
stc
sub
and
adc
rcrl
stos
daa
ljmp
movsl
jae
ret
in
div
xchg
mov
arpl
loop
and
outsb
cmpsl
dec
dec
jecxz
stos
add
cmpsl
sub
xchg
or
out
adc
in
leave
xor
dec
inc
sub
rcrb
push
jb
dec
arpl
mov
and
jno
cmpsb
sbb
inc
pop
inc
lods
fwait
jmp
pushl
hlt
icebp
mov
or
mov
arpl
xchg
xchg
inc
mov
mov
aaa
cmpb
adc
out
mov
dec
pop
das
xchg
cmpsb
mov
inc
cmp
jmp
jnp
cmp
add
mov
icebp
push
mov
sbbl
cmpsl
xchg
or
mov
mov
pop
dec
and
mov
xchg
dec
lcall
bound
loop
jno
orb
aad
insl
xor
lock
mov
sahf
dec
les
jle
imul
or
sti
sbb
cmc
jb
into
xor
fcoml
fstl
inc
xorl
push
fsts
ficompl
repnz
xor
xor
scas
fwait
mov
leave
mov
out
jp
outsl
add
xlat
push
push
mov
pop
cmp
hlt
mov
cmc
jns
and
test
jno
add
sub
imul
cltd
pop
lock
out
inc
aaa
scas
ss
fadds
push
out
pop
cmc
push
movsl
jnp
jmp
jo
dec
mov
stos
push
dec
cmp
adc
cltd
lds
out
pop
push
fsub
dec
imul
and
in
xchg
add
dec
rcl
add
pop
clc
xchg
dec
movb
subb
rcrb
add
popa
pop
sahf
sti
cmp
repnz
inc
jg
test
jae
push
pop
fdivp
pop
aaa
andl
cmp
push
sahf
dec
pop
and
ds
mov
test
popa
stos
and
movsb
leave
xchg
lods
and
aad
xor
out
psubd
push
sub
xor
mov
clc
cli
fsub
jmp
sub
xchg
sub
test
pop
jb
sub
push
push
add
xorl
inc
in
pusha
scas
jp
sbb
fcmovbe
adc
dec
fucomip
xor
sub
lret
fwait
jb
pop
xor
mov
imul
aas
xor
mov
push
lods
mov
jl
lods
cmpsl
xchg
ja
arpl
lahf
dec
mov
jmp
fwait
pop
stc
adc
inc
xor
mov
push
add
outsl
mov
in
sti
lret
pop
pop
push
or
xchg
sbb
pop
repnz
shl
pop
cwtl
and
adc
fneni(8087
dec
inc
pop
jne
or
push
push
push
or
repz
mov
arpl
inc
sti
ja
and
xchg
cmpsb
lock
out
xchg
in
sbb
jbe
sbb
jae
inc
push
inc
int3
pop
dec
push
fdivl
jbe
in
cld
mov
inc
ret
inc
cmpsb
nop
fs
out
and
fwait
ja
stos
xlat
sub
jge
dec
cmp
xor
lcall
jecxz
insb
inc
inc
pop
inc
push
or
js
xor
sbb
pxor
xlat
fldlg2
adc
test
not
push
sbb
push
pop
inc
jno
popl
lods
sub
ds
dec
fsubr
test
or
insl
into
pop
incl
inc
ds
rclb
rclb
cmp
int3
shl
mov
mov
hlt
sub
in
daa
add
adc
mov
add
inc
sarl
jmp
xlat
mov
je
orl
out
or
push
cmp
mov
jnp
jmp
popf
incb
xor
adc
gs
lret
int3
fisttpl
dec
xor
mov
out
loop
and
cmc
sar
loop
ror
jp
jmp
fidivrl
xchg
shl
mov
xchg
xor
das
push
cmp
mov
daa
popf
js
lods
lahf
sub
lods
out
sbb
mov
xchg
cmp
movsl
mov
mov
je
and
push
daa
popa
mov
jge
jno
add
push
or
jo
fcomps
xchg
sub
fsubrs
mov
mov
dec
jg
test
push
xor
in
mov
cmc
dec
push
mov
mov
shll
xchg
mov
loope
in
loope
fidivl
addr16
lds
and
fistps
mov
jno
scas
insb
out
loopne
mov
xchg
and
in
loop
movsb
xlat
inc
pop
jl
lock
in
adc
cmp
cmpsl
cmpsl
fistpl
fxch
dec
add
sbbb
mov
xor
mov
push
sbb
push
repnz
icebp
arpl
jge
add
test
mov
mov
xchg
and
stc
nop
jb
mov
dec
inc
fsubrl
mov
in
cli
ret
out
popa
lret
adc
shlb
in
fiadds
push
push
ds
and
adc
cmp
sbb
cmc
xlat
adc
int
popa
pop
sbbl
inc
scas
jle
popf
dec
inc
movsb
subl
ljmp
imul
fdivrp
shrl
jnp
arpl
cmp
call
subl
ja
shll
jmp
sbb
cwtl
lret
push
sahf
cmp
pushf
xchg
lds
jmp
adc
into
fdivr
or
lret
ss
pop
test
pop
dec
push
mov
xchg
in
ficoms
xchg
or
cli
lea
push
sbb
imulb
jp
add
movsb
jae
or
xor
jge
dec
lea
cld
insb
fdivr
xor
cmp
mov
xchg
outsb
mov
fstl
popa
fwait
mov
mov
fldt
pusha
cmp
imulb
ficomps
mov
imul
clc
inc
scas
dec
push
lock
pop
fimuls
pop
pushf
cli
jmp
xor
mov
inc
cmp
imul
stc
adc
dec
fwait
rorl
dec
sub
push
out
xchg
mov
lret
repz
in
push
mov
adc
dec
dec
les
dec
sbb
mov
std
fstps
fisubs
nop
int
push
adc
in
xchg
popa
pop
int
fwait
lock
xchg
xor
psrlq
stc
je
gs
mov
fnsave
movsb
jb
pop
lret
pop
cld
popa
xlat
std
loopne
insl
enter
mov
nop
mov
pop
mov
popa
cmpsl
xchg
sbb
mov
jno
or
rcrl
or
inc
jo
movsl
push
jge
mov
and
xchg
dec
mov
int3
lret
adc
popl
mov
jo
push
cwtl
cmp
push
fdivrl
aam
in
comiss
out
fs
lods
loope
xchg
stos
pop
sub
in
push
cltd
mov
mov
lcall
sub
add
test
pop
cld
jb
xor
inc
mov
out
lods
mov
dec
adc
dec
adc
imulb
cmp
das
add
sbb
pop
mov
loopne
sub
movsl
frstor
dec
in
rclb
insb
xchg
xchg
fldcw
dec
mov
and
push
push
insb
cld
fbstp
add
inc
std
sub
push
mov
rorl
cmc
iret
adc
lahf
stos
cmp
cmp
lds
and
sahf
in
idivb
lret
ljmp
ret
sbb
and
in
jne
sbb
xchg
mov
push
xlat
push
jmp
mov
cmp
push
mov
mov
mov
xor
sbb
or
and
stos
fwait
aas
arpl
sbb
mov
push
mov
loope
jne
add
sbb
jge
nop
sti
fstps
sub
cli
sbb
push
mov
add
cmp
adc
xchg
sbbl
jae
aaa
aaa
pop
fistps
cmp
jnp
cld
mov
dec
mov
lar
mov
dec
in
sbb
mov
ss
mov
repnz
enter
lea
pop
es
rcrl
daa
mov
add
push
push
push
add
nop
mov
in
sbb
dec
orb
xchg
sub
in
inc
imul
ja
mov
mov
loopne
das
dec
sbb
aaa
fdivrs
pop
sbb
or
lret
dec
lahf
jp
fwait
aam
dec
or
jno
loope
rclb
cmp
pop
cs
push
fimull
sti
dec
fnstcw
adc
out
inc
xor
bound
test
pop
add
orl
fs
jnp
mov
xor
jae
push
cmpsb
inc
mov
shr
enter
cmpsl
scas
sbb
pusha
inc
xchg
lahf
mov
sbb
pop
push
aad
iret
popf
xor
cld
xor
pop
mov
dec
jle
cs
xor
aaa
fwait
enter
std
imul
repnz
inc
jle
hlt
fisubrl
aad
fadd
pop
add
push
add
decl
jg
sub
mov
mov
mov
xchg
mov
movsb
add
xchg
stos
sbb
cmp
add
mov
xchg
cmp
push
xor
adc
aaa
sahf
cld
mov
in
in
jecxz
data16
inc
cmp
daa
mov
adc
lods
mov
out
pop
add
mov
jecxz
sub
movsb
mov
pop
ss
ret
push
jecxz
jne
stc
rcll
sbb
repnz
cmp
and
test
xor
pusha
in
cmpsb
fs
je
daa
loopne
mov
sub
mov
cmp
fbld
adc
dec
jns
insl
mov
enter
imul
enter
mov
jle,pn
mov
call
mov
mov
fimuls
pop
orl
movsl
xchg
cld
dec
test
imul
insl
xchg
in
xor
inc
pop
mov
roll
xchg
sub
icebp
data16
cmpsb
xchg
movsb
and
xchg
das
testl
add
jg
testl
jmp
inc
pop
lcall
xchg
mov
imul
adc
mov
sahf
das
cmp
pop
pop
xor
idivl
xor
std
or
lds
idiv
psubd
scas
dec
pop
movsb
mov
movsb
pop
call
into
das
jmp
pop
sub
shlb
ljmp
jecxz
sub
adc
lds
stos
pop
sub
mov
lds
lds
stc
mov
popl
cmpsb
dec
sti
cbtw
pop
repz
cmp
pusha
fnstsw
mov
aam
gs
adc
jnp
dec
mov
sahf
jns
addr16
push
push
movsb
add
hlt
imul
fwait
and
mov
jb
sbbl
inc
mov
cmp
push
add
mov
inc
outsb
mov
movsl
or
lds
sbb
mov
repnz
mov
push
adc
and
pop
mov
rorl
sub
or
push
dec
sbb
sub
xchg
cmp
push
incb
or
pushf
pushf
and
jnp
add
lret
mul
xor
cs
push
je
adc
and
cmp
xor
sbb
xchg
lcall
imul
push
dec
rolb
cmp
adc
mov
loop
xor
xor
and
loopne
lds
cmc
arpl
lret
addr16
lock
fidivl
out
mov
mov
xor
adc
push
mov
mov
sbb
push
dec
jecxz
inc
jne
xchg
xor
into
lahf
int3
sbbb
xor
mov
dec
aaa
inc
inc
xchg
popa
sahf
in
mov
fucomip
out
mov
loopne
mov
iret
fisttps
fisttpl
pop
lock
stos
out
js
lahf
movsb
popf
pushf
jo
and
mov
ret
fcmovnu
mov
cmp
js
sahf
and
adc
sbbl
xchg
and
push
xor
lret
test
sahf
mov
repnz
jmp
sub
push
cmpsl
test
mov
pop
cli
xchg
mov
pop
fwait
pop
jle
add
mov
pop
add
pop
jae
xor
cs
ret
pop
divb
leave
sub
lea
pushf
inc
sbb
addr16
push
cmp
jmp
xor
outsl
lea
ret
in
dec
ret
imul
jns
pop
mov
push
xchg
mov
std
mov
lods
sar
in
test
jns
jno
negb
xor
notb
pop
add
fs
mov
dec
adc
lock
fs
sahf
inc
aas
in
lcall
mov
jae
popf
int3
inc
out
jg
mov
cmp
in
stc
xchg
xchg
dec
ss
insb
jecxz
push
out
movsl
adc
shrb
jne
daa
incl
lret
fnstsw
mov
jmp
dec
xor
sub
cmp
mov
sbb
sbb
mov
inc
dec
cmp
mov
mov
lcall
bound
dec
lods
je
movsb
mov
jae
out
pusha
stos
push
lds
add
sub
mov
pop
or
jmp
cmp
sahf
adcb
dec
jge
dec
out
rcrl
out
dec
push
test
cwtl
inc
xor
cli
inc
mov
ljmp
jmp
xchg
or
mov
fmulp
fdivrs
gs
xor
femms
icebp
mov
pop
pop
xor
lcall
cmc
mov
aad
das
ficompl
lcall
jno
cmp
cli
adc
ljmp
clc
push
popf
jnp
pop
and
mov
fnstcw
icebp
add
into
mov
jmp
sahf
ss
cmpsl
sbb
cld
shll
or
shlb
arpl
incl
add
xchg
sbb
fdivl
fdivrs
sub
cmp
lock
mov
jg
int
jne
or
or
and
and
xchg
inc
outsb
pop
mov
dec
ds
inc
xor
shrl
jbe
repnz
sub
jecxz
cmp
insb
jno,pt
test
mov
rcll
dec
adcb
fisubrl
jb
int3
and
ds
mov
xchg
cmp
cmp
repz
pop
or
pop
in
or
icebp
inc
push
pop
int3
and
mov
in
aam
lods
loope
fwait
aad
into
and
dec
test
push
xor
mov
pop
lahf
push
add
in
mov
fldl
mov
cmpsl
mov
outsl
jae
and
sub
pushf
out
pop
xor
jge
pop
movsl
xor
movsl
movsb
mov
into
mov
loop
pop
push
pop
cmp
mov
loope
jbe
pop
push
mov
iret
jl
xchg
push
mov
jge
or
push
int
aam
dec
outsl
ss
imul
gs
outsb
adc
fs
and
mov
addr16
aam
jo
xchg
sti
addb
and
mov
jmp
mov
rcrb
xchg
fistpl
add
movsb
jmp
mov
mov
add
pop
sub
mov
fcmove
mov
sub
rorb
adc
cmp
div
mov
test
mov
dec
sbb
cmp
and
jnp
adc
xor
dec
cmp
jge
push
pop
adc
popf
pop
lret
sbb
cs
push
add
xchg
fabs
int
rclb
es
dec
xchg
in
inc
jg
outsl
je
addr16
lahf
ret
cli
dec
ret
inc
pop
sbb
mov
inc
stos
adc
jnp
and
xchg
loope
addb
pop
mov
sahf
dec
inc
out
push
push
lods
scas
or
dec
push
jbe
cmp
add
ss
rol
inc
jo
cmp
stos
stos
mov
dec
mov
jg
ss
mov
out
xchg
loop
push
mov
xor
xchg
in
int
aas
pop
jae
push
in
jg
inc
bound
mov
sbb
sti
fwait
push
push
cli
das
in
dec
push
mov
scas
dec
jbe
test
mov
xor
insb
add
jp
ja
icebp
jb
and
daa
inc
mov
lds
push
adc
add
mov
mov
ss
nop
jne
and
xor
fwait
push
test
push
xchg
iret
cmp
push
loop
sub
pop
sbb
insl
popa
inc
mov
jg
movsb
cmp
out
arpl
xchg
fildl
in
gs
js
movsl
inc
sub
and
push
ret
test
je
notb
lods
andb
adc
sbb
jmp
mov
pop
loopne
inc
loop
xchg
dec
lret
sahf
fiaddl
jecxz
repz
jo
mov
ljmp
lea
push
mov
lods
or
pop
mull
je
mov
cmc
cltd
addb
pop
adcb
inc
push
bound
daa
fldt
je
outsb
jno
ss
push
test
repnz
fwait
inc
aaa
mov
sar
mov
popf
scas
pusha
ja
lcall
push
mov
cltd
aas
inc
push
xchg
and
test
xchg
bound
in
mov
cmc
cmp
repz
jp
out
jecxz
mov
aaa
mov
push
lcall
lds
push
jge
lahf
pop
sub
add
daa
cld
not
dec
test
xchg
mov
cmp
lret
dec
pop
ljmp
insb
cmpsb
xchg
push
cwtl
addr16
bound
aad
out
mov
jae
aad
xchg
or
pop
daa
call
dec
roll
mov
and
ds
adc
stos
cltd
rcl
pusha
or
cmp
dec
scas
xchg
scas
cmpb
faddl
mov
mov
stos
cld
sub
xchg
addr16
out
and
lock
rcll
sahf
add
call
xlat
in
scas
out
inc
add
jmp
push
sub
cltd
inc
dec
adc
mov
xchg
rorl
arpl
fs
test
jno
int3
sbb
movsb
std
lds
xchg
sub
mov
mov
pop
testl
fldcw
adcl
shll
addr16
and
outsl
dec
dec
xor
dec
mov
loop
cmpsl
in
popf
mov
fdivs
push
mov
out
and
rorb
xor
ds
popa
sub
bound
push
pop
sub
imul
stos
xor
scas
movsl
ret
push
inc
pop
add
sbb
outsl
int
xchg
fnstenv
loopne
sbb
in
leave
fcmovbe
jp
mov
pop
aaa
add
sti
loop
in
push
xchg
out
call
and
mov
jle
ror
dec
mov
test
inc
jl
rcrb
push
inc
pushf
outsb
call
jae
cmc
insb
mov
sbb
push
lret
inc
and
je
in
dec
or
es
xor
mov
cmp
pop
add
lds
jmp
clc
jp
ja
ret
inc
jb
repz
inc
mov
mov
rcl
sbb
enter
jb
or
icebp
mov
int3
mov
mov
adc
xlat
std
loop
repz
sub
into
pop
test
es
jmp
push
dec
xchg
addr16
add
xchg
xchg
sub
xor
lock
mov
outsl
daa
sti
imul
jne
pushf
fidivrs
popa
aas
int3
mov
mov
xor
or
clc
sub
mov
roll
test
mov
test
js
push
mov
mov
xchg
push
adc
mov
push
push
jecxz
test
pop
xchg
ljmp
fdivl
jge
mov
call
neg
fists
mov
scas
xchg
loop
pop
std
lea
xor
push
out
fstp
or
lods
mov
pushf
push
rolb
jne
push
sbb
addl
cmp
out
out
lahf
mov
jno
mov
or
pop
test
mov
stos
hlt
daa
scas
adc
les
and
in
and
cmp
cmp
lds
dec
xor
ret
mov
mov
gs
out
xchg
inc
test
loopne
negb
xor
push
cmpsl
inc
btc
inc
cmpsl
adc
and
jns
stc
mov
ret
jg
outsb
xor
jle
xlat
ret
fisubl
pop
dec
cmp
jge
mov
lea
jbe
outsb
rorl
ljmp
in
push
das
fsubrl
xchg
cmp
enter
shrl
add
bound
xlat
cmp
pop
dec
in
mov
mov
push
or
sti
in
mov
insl
mov
fnstenv
xor
dec
int3
ja
pop
loopne
or
inc
aad
sub
push
movb
xchg
xchg
cwtl
dec
hlt
mov
jg
jbe
out
nop
lock
mov
pop
push
sub
xor
push
jne
sub
jmp
lcall
inc
movsb
loopne
rorb
adc
ret
dec
iret
aaa
push
mov
xchg
fisttpll
inc
mov
or
jmp
push
shlb
mov
xchg
shrb
and
stc
xor
movsb
mov
jno
sbb
cmpsl
hlt
es
sub
jge
cmpsb
pushf
repz
int3
jne
push
xlat
inc
cmp
test
insb
push
popf
icebp
stc
int3
sub
xchg
push
dec
out
inc
repnz
cmpsl
pop
jp
jp
mov
sub
scas
lods
push
je
jo
sbb
pop
cwtl
jg
lock
dec
or
jnp
push
push
pop
cs
and
push
imul
pop
ror
jns
or
jnp
filds
inc
int
sub
test
lock
data16
cmp
mov
inc
test
xchg
or
xor
sub
ljmp
push
push
outsb
cli
stos
ror
mov
pop
hlt
std
pop
sahf
add
imul
insb
loope
sub
popf
inc
js
and
std
add
inc
push
inc
inc
ja
es
sub
jl
dec
mov
lahf
adc
fsts
mov
cmp
pop
and
adcb
cmp
sbb
sahf
adc
shlb
pop
push
leave
or
sub
or
mov
mov
inc
fnstenv
dec
insb
rorl
and
mov
push
cmp
enter
xor
loop
lods
or
repz
mov
sub
lret
mov
cwtl
les
sub
xor
or
sub
rolb
cmpsb
or
mov
mov
mov
shl
roll
lds
cmp
loopne
mov
mov
push
movsb
leave
adc
sbb
rcll
add
mov
mov
loopne
inc
xchg
aam
sub
int
mov
out
shll
pop
gs
imul
mov
add
xchg
push
sbb
sti
jp
pusha
mov
out
in
pop
mov
aad
stc
sbb
jno
push
arpl
push
pop
push
sub
push
inc
cld
or
mov
adc
loopne
xor
adc
lock
lret
stos
mov
add
ljmp
movsl
xchg
xchg
jo
jp
sub
inc
and
mov
cltd
shll
mov
mov
adc
mov
and
pop
dec
fistps
adc
xchg
mov
and
add
xchg
push
lock
lods
popa
add
mov
popf
aad
sti
sub
xchg
sub
aas
mov
adc
arpl
jae
cltd
lock
mov
xor
cmp
cmpsl
mov
add
mov
in
aam
stc
sub
stc
pushf
sub
call
iret
sahf
loopne
ret
xor
or
and
sbb
sub
inc
dec
add
pop
ss
xchg
sbb
sbb
call
rclb
dec
mov
push
pop
mov
sub
test
fstpl
int
lock
inc
ret
lret
inc
pop
rclb
cwtl
mov
jge
and
shll
out
je
mov
push
push
shlb
outsb
mov
test
lcall
or
inc
jmp
inc
test
lea
and
and
sarb
jl
xor
dec
stos
adc
call
dec
loopne
push
ljmp
shlb
mov
add
out
outsb
imul
push
pushf
cmp
pop
mov
rorb
pushf
sbb
mov
sbb
adc
bound
inc
mov
add
daa
push
mov
mov
fnsave
mov
js
stc
pop
dec
outsl
filds
inc
call
mov
xchg
test
and
ret
xlat
mov
lea
imul
in
sahf
mov
in
out
into
fldcw
adc
addr16
jg
inc
xorb
out
test
pop
pop
xchg
xchg
int
mov
mov
out
xchg
add
lcall
insb
cwtl
in
cmp
push
roll
fs
and
loope
and
movsb
push
je
adc
adc
lods
int3
mov
add
jae
jmp
cmpsb
cwtl
jne
mov
lret
mov
pop
cld
cmp
mov
push
decb
jns
xchg
xlat
mov
cmpb
scas
mov
and
mov
decb
test
loopne
dec
xor
push
mov
incl
xor
test
lcall
faddl
sub
out
cmp
in
pop
pop
inc
inc
sbb
sbb
sbb
pusha
mov
lea
cmp
and
scas
pop
or
sbb
dec
out
int3
shll
out
mov
cltd
adc
xor
add
into
ss
or
push
fildl
cli
dec
repnz
mov
insl
sahf
ror
and
in
adc
or
ss
cltd
xor
mov
mull
test
cld
pop
push
scas
mov
jmp
jae
xor
push
dec
push
rcl
rolb
mov
pushf
push
mov
push
jno
sbb
sbb
outsl
shll
xchg
push
outsb
dec
popf
cmp
sub
xlat
cmpsb
movb
jns
in
roll
push
rolb
sbb
nop
imul
ret
push
add
jl
jo
sarl
fs
int
repz
andl
fbstp
push
xchg
jecxz
out
pop
cmp
inc
pop
das
loopne
xor
adc
es
dec
loop
addr16
lcall
insb
in
and
lret
add
pop
add
sub
cmp
fisttpl
xchg
imul
rol
lods
movsb
mov
dec
loopne
push
scas
pop
xor
stos
sbb
mov
imul
sbb
cmp
movsl
mov
cmp
cmp
loope
jl
in
xchg
out
adc
mov
inc
xchg
adc
scas
insl
lea
ljmp
sub
jnp
cmp
inc
push
ss
xlat
test
or
int3
sbb
mov
call
xor
jge
outsb
leave
mov
mov
movsb
adc
shll
and
xor
push
sbb
and
call
mov
mov
pop
and
jge
scas
inc
sbb
adc
push
jl
shll
jl
mov
hlt
not
pop
sub
and
insl
dec
movsl
dec
inc
jecxz
fs
xchg
jl
dec
pop
mov
cmc
in
or
inc
cli
int
lods
pop
fcompl
mov
xor
adc
add
or
push
mov
xchg
addb
bound
or
xor
std
push
sbb
ret
rorb
scas
xor
mov
cltd
jb
push
int
mov
sbbl
out
dec
or
jns
xor
jmp
fisttpll
xchg
pop
add
movsl
add
dec
xlat
sub
xor
dec
lret
jg
add
xor
push
xchg
lods
dec
loop
int3
push
push
aam
mov
xchg
je
inc
shl
adc
jb
and
imul
out
mov
into
or
pop
and
in
sbb
pop
jp
sub
outsb
xchg
clc
jb
lret
adc
sbb
pusha
arpl
or
push
mov
ret
out
fdivrs
aaa
enter
add
jbe
das
or
insl
xchg
pop
or
mov
xchg
out
jle
out
arpl
jge
pop
fcomps
sub
fwait
xor
out
stos
je
sub
fistpl
clc
add
or
jg
loop
ds
sbb
test
sbb
pop
lea
xor
adcl
loop
xchg
imul
enter
mov
jg
pop
push
sar
mov
mov
cli
and
add
pop
mov
jno
xchg
or
inc
or
ret
dec
mov
lahf
stos
dec
sbb
lret
into
in
shll
mov
jo
push
sub
insb
push
cmp
and
push
inc
in
lcall
dec
push
ss
sub
icebp
insl
or
xor
and
ret
inc
shll
popa
out
adc
sarl
insb
iret
sub
es
jp
stos
ret
in
or
add
out
cmpsl
xor
ficoms
addr16
insb
or
cmp
mov
pop
dec
add
adc
push
inc
das
add
lcall
frndint
outsl
pop
mov
loope
or
clc
out
ret
rcll
add
andb
push
mov
clc
sbb
xchg
push
xchg
fistpl
jecxz
test
sbb
jnp
movsl
test
mov
enter
subb
mov
sbb
jb
xorl
or
xlat
jecxz
xchg
sub
xchg
out
dec
mov
rcrl
inc
push
pop
cld
mov
mov
xor
push
mov
mov
ret
out
nop
xchg
in
outsl
bound
add
sub
sub
insb
std
stos
and
enter
ret
mov
ss
iret
call
shrb
or
pop
adc
notl
mov
ret
aaa
pop
fs
int3
les
add
add
inc
lret
push
xor
movsb
das
xor
and
push
mov
notb
add
and
pusha
lahf
scas
add
ljmp
int
mov
push
loopne
icebp
out
dec
xchg
xchg
pop
jle
into
andb
clc
cli
xchg
push
pop
push
cwtl
in
cwtl
movsb
ss
les
jecxz
and
insl
fs
cmp
push
sbb
jecxz
lds
notl
ret
xchg
dec
inc
lahf
xchg
mov
xlat
scas
aam
cmp
mov
mov
loope
xlat
frstor
repz
lods
ljmp
stos
lock
scas
push
insb
push
sub
xor
cmpsb
push
les
jnp
mov
xor
in
sti
jbe
pop
and
jge
shrb
or
lret
gs
std
test
jae
inc
adc
jb
loop
incb
xor
sbb
push
mov
lods
mov
gs
jmp
adc
cld
enter
repz
adc
scas
arpl
in
sbbl
lret
jl
clc
sti
cmpsl
inc
sbb
inc
cmc
mov
lock
inc
popf
cmpsb
and
fisttps
mov
ja
cmp
bound
ja
sub
sti
enter
lcall
cmp
or
ror
adc
inc
lret
pop
pop
xchg
popa
lock
adc
or
sbb
inc
aam
dec
scas
popf
jmp
lret
aas
add
inc
adc
ret
mov
xchg
mov
aam
dec
xor
or
xchg
in
stc
roll
insb
or
es
scas
push
popf
loope
jno
xchg
dec
frstor
cs
sahf
rorl
cmp
mov
or
inc
out
xor
xchg
stos
aas
pop
xchg
clc
popa
mov
push
push
test
insl
adc
mov
xor
hlt
xchg
pop
xor
aam
mov
mov
add
into
out
xchg
stos
and
fmuls
cltd
in
scas
or
loopne
sbb
es
sub
inc
push
push
xchg
adc
xor
push
jne
jae
sbb
in
je
jl
movsl
mov
jge
push
cmp
jg
mov
sbb
mov
shlb
push
inc
cmc
dec
pushf
jg
dec
inc
xor
sbbl
jns
rorl
fmuls
lret
inc
insb
enter
fwait
pop
ss
out
or
jge
mov
push
mov
enter
mov
cmp
pop
sbb
xor
in
rcrb
pop
xor
int
int
fsts
mov
in
cmpl
repnz
xor
ljmp
loope
les
shlb
pop
cmc
mov
loop
jle
subl
sbb
or
in
pop
pop
jmp
jo
jecxz
pushf
ret
xchg
push
clc
inc
sub
out
fnstenv
test
sub
inc
sub
and
mov
dec
mov
lea
lds
call
xchg
xchg
mov
aaa
mov
jle
shlb
sti
ud2
scas
sti
sbb
lea
or
mov
cltd
rolb
sti
jbe
sbbb
jmp
push
push
fnsave
cmp
lahf
xor
fcomps
sahf
in
push
sub
fcoml
add
rcll
insb
in
xor
loope
pop
sbb
push
jp
sub
ljmp
pop
add
ret
into
sub
lret
cmc
arpl
ljmp
call
xchg
stc
sub
adc
aad
sti
mov
inc
icebp
out
nop
lds
jge
cmp
repnz
pop
push
pop
mov
cs
rclb
xor
add
push
cltd
popf
addl
pusha
ret
loopne
pop
icebp
lods
sub
mov
hlt
jnp,pn
pop
aas
stc
pop
out
sbb
enter
mov
mov
mov
dec
or
in
add
cs
sub
push
sbb
jns
shrb
xor
xchg
ret
mov
xor
addr16
imul
and
push
ja
inc
xor
mov
push
sub
inc
mov
and
xchg
xor
pop
inc
outsb
pop
pop
enter
aad
bound
pop
and
mov
adc
add
lods
das
add
aam
xchg
mov
call
push
push
lods
xchg
xchg
leave
pop
sti
dec
out
xchg
jecxz
gs
rorl
push
mov
mov
jp
or
sbb
data16
cwtl
dec
test
daa
pop
loop
mov
mov
mov
jge
enter
mov
pushf
mov
mov
mov
cli
adc
mov
lods
jmp
inc
xchg
nop
push
pusha
xlat
xor
xchg
cmpl
hlt
nop
sbb
ds
mov
xor
lcall
add
sub
cmp
mov
cmp
adc
jge
ds
jle
push
cmpsl
enter
mov
lahf
mov
sbb
mov
mov
jecxz
stos
pushf
jmp
scas
xor
and
jl
enter
fcoms
je
std
gs
adc
shrl
addr16
fisubrs
cmp
cmp
sub
test
into
sub
pop
lea
jl
mov
insl
je
ffree
lahf
inc
xchg
pop
xchg
shrb
push
pop
repnz
test
popf
xchg
pop
in
or
lods
shlb
bound
outsb
lret
loopne
mov
test
push
aad
popf
pop
or
ret
cltd
test
vpshaw
add
pop
jbe
push
adc
shlb
and
pop
or
fsubrl
mov
mov
repz
jb
push
aad
cmp
mov
rorb
push
push
test
or
jno
xor
mov
cmpb
xor
xchg
fsub
stos
push
clc
sub
movsl
xchg
pop
mov
and
lods
cmp
mov
sbb
jno
out
movsb
dec
jns
and
faddl
push
rcrb
cli
sbb
add
xchg
aaa
cmpsb
sbb
inc
sbb
rorb
push
je
add
leave
imul
or
jge
rcll
cs
dec
cwtl
in
push
int
ja
add
mov
rolb
stos
or
test
and
aam
cmp
mov
fs
out
pop
out
push
jmp
scas
lret
inc
imul
jge
mov
ret
ud1
in
add
add
icebp
pop
js
add
lcall
lea
shl
test
add
cmp
pushf
push
loope
sub
ret
inc
sbb
xchg
inc
aad
les
or
cmc
mov
jp
push
pop
loope
cli
addl
mov
and
push
imul
nop
mov
xor
mov
enter
adc
xor
cmpsl
ja
in
cld
js
test
adc
sbb
shrb
pop
mov
sub
cltd
add
jns
in
ljmp
test
or
ljmp
pop
jne
movsl
jl
ljmp
push
jnp
pusha
lret
adc
mov
sahf
push
jmp
jbe
pop
pop
imul
aam
negb
jo
jmp
jne
jae
test
lret
inc
pop
out
loop
out
scas
mov
push
jnp
push
push
ja
jo
jns
arpl
nop
sub
ret
inc
mov
out
fcoms
mull
xchg
cmp
data16
lock
push
jp
mov
pop
fdivrs
fldcw
mov
push
sbb
add
add
ja
jp
movsl
xchg
sub
add
outsb
add
jge
jg
stc
pop
es
push
cmp
arpl
jge
cmp
inc
inc
xor
push
subb
in
arpl
add
icebp
xchg
adc
add
inc
fsubs
lock
enter
and
mov
xchg
aas
mov
push
dec
sbb
push
daa
cmpsb
xchg
test
or
or
push
pop
jle
dec
ds
fdivrl
not
mov
hlt
mov
push
sub
mov
fadds
mov
pop
mov
push
xchg
adc
cmp
mov
shrb
repnz
jns
in
sbb
enter
rcr
inc
lahf
push
js
pushf
mov
xor
ds
in
jbe
push
out
pusha
xchg
push
movsl
jo
inc
adc
gs
frstor
pop
ja
jae
and
push
add
dec
std
or
cld
decl
fldt
test
jp
jecxz
addl
mov
fcmovnbe
inc
mov
mov
xor
insb
clc
lods
sbb
ljmp
mov
or
xchg
xchg
and
jge
shl
mov
aaa
popl
mov
xor
adc
xlat
cs
xchg
sahf
js
adc
mov
stos
popa
pop
jp
loop
push
mov
adc
jno
cli
lods
jp
xor
sti
sub
jne
sub
fisubrl
and
in
call
stos
sbb
xchg
sahf
out
sbb
cmpsl
loopne
loop
dec
ds
enter
push
or
push
jae
mov
ljmp
inc
cmp
es
jne
push
mov
mov
mov
jge
inc
clc
mov
aad
iret
icebp
and
popa
sbbl
fidivrl
loope
stos
movsb
popf
or
inc
outsl
aas
push
cmp
inc
andl
mov
out
pop
les
shll
sbb
xlat
xchg
xor
xchg
xor
aas
out
xchg
pop
mov
pop
fdivl
arpl
testl
sahf
xchg
add
popa
mov
insl
push
jne
add
xchg
and
filds
shl
bnd
mov
clc
ffreep
das
cmpsb
in
mov
jmp
cmp
push
push
jg
push
add
mov
push
or
adc
test
xchg
int3
push
movsl
loop
ss
sbb
cltd
or
fbld
pop
and
pop
push
orb
icebp
addl
int3
aam
cltd
rcr
add
inc
jns
sub
inc
js
sbb
stos
call
pop
mov
loope
inc
xor
xor
mov
push
mov
cmc
pop
inc
pop
shrb
add
cltd
mov
sub
inc
int3
pop
pop
add
loopne
sbb
sub
ds
sub
inc
xchg
pop
test
xor
pusha
inc
scas
sub
add
outsb
sub
rorb
pusha
mov
jmp
pushf
into
pop
fisubl
mov
lret
addr16
mov
int3
jb
pop
lods
mov
stos
out
pop
loopne
jmp
push
mov
ret
test
mov
sub
pop
xchg
jle
pop
add
in
insb
idiv
lods
xor
out
push
lahf
out
das
jno
aaa
stos
adc
div
outsl
insl
fs
pop
dec
jne
out
jle
scas
cmpsb
or
sbb
imul
insl
mov
iret
les
xchg
sbb
ja
sbb
daa
lock
sti
or
je
pushf
sbb
inc
mov
push
sub
outsb
aas
sbb
in
out
dec
cli
mov
and
push
hlt
int
and
inc
jae
frstor
shr
cmp
lock
insl
inc
ret
or
ja
lahf
jecxz
in
shrb
pop
stc
sarl
cli
xorb
fnsave
inc
adc
mov
leave
lods
nop
push
xor
add
dec
sub
mov
jbe
cmpsl
xchg
sub
cmpsb
jae
cltd
xchg
les
push
mov
sub
mov
negl
dec
ret
shl
mov
aam
lock
inc
mov
rclb
mov
repz
or
pop
pop
aas
and
nop
pusha
insl
dec
inc
stos
push
loop
jp
sbb
scas
and
xor
fs
xor
leave
mov
sbbb
stos
jbe
or
and
push
xor
cs
sbb
cld
mov
or
push
es
jbe
mov
xor
sbb
mull
mov
mull
pop
mov
dec
out
das
dec
into
pop
inc
dec
cli
add
lock
lea
mov
sbb
test
hlt
mov
ljmp
mov
pop
movsb
adc
mov
js
pop
addr16
addr16
andl
dec
fildll
cmp
or
add
jno
test
test
jb
les
andl
inc
cmp
add
aam
cmp
or
stos
inc
xlat
arpl
pop
testb
ret
mov
mov
mov
leave
enter
sbb
xchg
xchg
pop
cmp
adc
test
sub
sub
test
sti
pop
and
and
subl
and
stos
cmp
test
inc
lcall
stc
mov
movsb
jo
xor
fs
cli
repz
gs
and
incl
insb
fs
nop
into
int
arpl
mov
mov
dec
aam
sub
add
sahf
cli
mov
icebp
shl
stos
adc
repz
xchg
repnz
popf
add
std
clc
fwait
or
and
ficoml
lods
mov
andb
cs
daa
repnz
lss
mov
sarb
dec
mov
adc
inc
std
add
dec
mov
xorl
test
xlat
out
das
out
cmc
das
inc
lock
inc
mov
inc
mov
ds
adc
jl
int
out
outsb
jge
ret
push
inc
call
pusha
cmp
xor
dec
fnstsw
repz
push
ds
popf
rcrb
fnstcw
sbb
pop
dec
sbb
inc
ja
movsl
in
cld
test
jle
fsubrl
xchg
xorb
test
sbb
out
data16
aam
mov
fwait
pop
pop
aad
cmc
jne
xchg
push
iret
sti
dec
iret
repnz
aas
xchg
mov
and
dec
cmp
popf
sbb
imulb
and
sbb
dec
cld
lea
dec
pop
adc
xchg
outsb
in
cmc
out
or
sub
fiadds
je
jle
adc
cmp
push
or
loop
arpl
adc
jp
out
aas
inc
je
sub
xchg
imul
sbb
mov
lahf
cmp
and
roll
xchg
fwait
jecxz
rcrl
and
into
iret
dec
pop
jle
mov
out
sub
lcall
adc
pop
enter
in
imul
adc
nop
lret
filds
cmpsl
test
push
xchg
mov
outsb
push
mov
and
jno
jp
sub
inc
push
outsb
lods
cmpsb
stc
cwtl
or
lcall
add
push
je
inc
dec
in
mov
das
lcall
mov
shll
and
push
cs
cmp
lea
push
push
mov
in
push
rcll
in
and
fs
jl
push
adc
loope
add
jp
arpl
test
mov
incl
push
dec
dec
addr16
rorb
out
adc
imul
fidivl
cmpsl
adc
mov
mov
addr16
and
lcall
out
movb
psubusb
pop
call
jp
fmuls
inc
sti
cwtl
adc
cmpsl
popa
push
je
sarl
dec
add
sbb
mulb
jae
jp
testl
jae
dec
aas
loop
sbb
lcall
push
into
sbb
xchg
xlat
and
andb
sbb
xchg
mov
add
enter
add
ret
enter
jl
testb
inc
ret
pushf
mov
xorl
xor
mov
cs
jne
outsl
repz
jns
sub
sub
mov
out
pop
pop
ja
jnp
jg
roll
mov
mov
dec
in
dec
inc
inc
out
test
in
mov
mov
leave
mov
test
lods
adc
out
xchg
or
mov
aas
pop
leave
push
lds
es
in
mov
divl
push
pop
imul
push
rcr
je
lret
imul
sub
or
sub
xchg
sbbb
cmp
call
mov
ficomps
clc
xchg
xchg
out
lods
sti
mov
outsl
rcl
adc
or
cmp
xchg
fistpl
insb
add
xor
inc
cld
inc
mov
cmc
mov
jge
je
jg
cmp
and
xchg
push
cmp
cmpsb
cld
bound
dec
sbb
jp
scas
pop
cmp
enter
inc
jmp
push
and
hlt
clc
push
and
inc
push
aaa
dec
dec
insl
stc
push
daa
mov
mov
jbe
cltd
jg
jo
cwtl
xor
fists
icebp
imul
push
jae
cwtl
mov
in
pop
inc
insl
jmp
bnd
mov
jbe
cltd
pop
pop
mov
cmp
into
movsb
adc
jmp
pop
shl
add
cwtl
sbb
and
xor
sub
int3
ficomps
dec
pop
add
xchg
popf
mov
rcl
inc
cmc
fsts
cmp
ljmp
add
xchg
jne
dec
inc
or
in
sahf
jg
scas
cli
mov
xor
imul
cmp
sub
negl
mov
mov
mov
jmp
cmp
lods
mov
lahf
dec
nop
sahf
inc
xchg
rorb
xchg
cmp
push
jle
lods
adc
inc
negb
je
mov
fwait
cs
test
in
mov
pop
out
pop
pop
sub
dec
lahf
xchg
add
cmp
dec
lahf
inc
mov
repz
dec
xchg
js
xchg
frstor
sbb
jne
push
adc
cmp
sbb
pop
push
aad
dec
push
cmpsb
je
gs
sahf
sub
stos
js
and
or
xor
idivl
pop
fwait
test
jle
jb
mov
mov
cmpsb
popf
pusha
mov
mov
dec
adc
or
pop
test
sbb
sahf
xchg
push
rclb
inc
sahf
sub
push
mov
stos
xchg
mov
inc
cmp
cli
sbb
shrb
lods
and
loope
ja
rolb
mov
mov
push
mov
fs
mov
outsl
mov
or
mov
pop
fdecstp
adc
jge
jmp
mov
ret
shlb
sbb
jno
dec
stos
xchg
js
aad
scas
inc
rclb
mov
scas
hlt
out
daa
push
jno
inc
add
pop
pushf
scas
mov
xchg
jmp
pop
je
fldl2t
icebp
mov
lcall
out
sahf
aam
inc
rcll
inc
and
xor
sbb
and
rclb
or
daa
movsl
ss
push
jmp
xor
and
sbb
sub
loope
stos
ljmp
test
rep
add
cmc
inc
loope
jmp
arpl
sub
mov
imul
sub
adc
xor
outsb
push
mov
add
sbb
mov
add
dec
and
iret
jb
add
push
jmp
inc
sbb
cmp
push
dec
inc
xor
push
fcmovbe
in
popa
mov
xlat
cs
test
int
clc
xchg
dec
rcr
inc
inc
js
addr16
lret
in
xchg
mov
or
je
push
daa
sbb
cmp
sbb
and
adc
push
in
bound
dec
push
sub
loope
cmpsb
jp
sbbb
cmp
shrb
rcl
pop
andl
adc
out
popf
push
and
cmc
or
dec
mov
and
insb
aad
insb
dec
or
and
mov
call
and
jns
les
inc
rolb
gs
pop
jnp
mov
mov
fld
mov
dec
cmp
popa
xchg
mov
add
insl
or
cld
push
cmp
mov
xchg
aas
jp
jb
inc
daa
pushf
leave
and
sbb
adcl
nop
daa
xchg
insl
outsl
fsubrl
pop
and
pop
pop
cltd
jecxz
adc
jl
pshufw
cli
mov
xor
sbb
inc
rolb
pop
sub
fnstcw
xchg
xor
std
shl
dec
jecxz
es
add
pop
cmpsl
mov
xchg
pop
sbb
fdivp
out
mov
mov
pushf
or
cmp
fisttps
cs
mov
das
lea
sub
js
ficomps
outsl
jl
xchg
outsb
fwait
fs
sub
push
lods
sar
mov
gs
lahf
xor
cvtdq2ps
stos
inc
xchg
mov
push
mov
out
ret
outsb
jb
ret
outsb
pop
cld
xchg
mull
push
and
loop
cmpsl
push
inc
mov
out
pop
dec
jne
dec
jl
push
xor
mov
call
jbe
popf
std
dec
push
sbb
mov
adc
push
mov
outsb
push
push
sub
pop
add
add
sub
inc
cmp
cmp
lahf
icebp
and
jp
or
mov
stc
je
push
sub
mov
xlat
xchg
mov
cli
in
fwait
sbb
in
add
loopne
scas
les
andb
inc
or
xchg
cmp
insb
loope
xor
sbb
adc
and
or
or
insb
imul
aad
sahf
pop
iret
push
add
cli
fsubs
movsl
and
add
xchg
sub
adc
les
dec
mov
addr16
mov
sahf
push
mov
int3
mov
insb
pop
shr
xchg
xor
bnd
sub
adc
movl
in
lcall
out
push
mov
mov
add
iret
or
mov
ds
pop
pop
pop
jmp
jl
ljmp
pop
repz
dec
cli
aad
xchg
jnp
fsubr
iret
mov
cmpsb
jne
and
mov
cld
gs
in
icebp
cmp
mov
test
icebp
or
adcl
repz
mov
dec
nop
out
outsb
and
loop
mov
pop
mov
test
cltd
cmpsb
aas
les
xor
test
test
pop
hlt
js
xchg
mov
lea
pusha
es
add
sub
imul
cmp
sbb
in
fwait
pop
push
insb
movq
stos
into
dec
xchg
movsl
aam
inc
icebp
inc
xchg
adc
std
lret
jo
sub
scas
dec
jle
jmp
aad
adc
xor
insl
test
cmp
jb
mov
jbe
pop
push
add
push
insb
ja
insl
mov
jl
xchg
sub
adc
imul
out
pop
and
or
sbb
sbb
jae
mov
pop
pop
inc
xorb
and
jne
inc
sbbl
sti
daa
repz
add
jecxz
jl
mov
and
dec
dec
loop
jmp
jnp
push
pop
xor
mov
pop
xor
cmp
leave
roll
aas
mov
sbb
pop
rorb
ljmp
pop
jno
das
jge
xchg
cmp
add
shlb
sub
popa
jo
mov
dec
sub
loopne,pn
mov
dec
das
sbbl
sbbl
into
outsl
sbb
adc
mov
mov
push
ljmp
add
sbb
mov
push
cmpsl
pop
movsl
stos
sub
or
ljmp
xorl
test
mov
test
jmp
lea
gs
mov
jge
lret
xor
lahf
sub
fadds
cmp
lods
and
or
call
lea
imul
imul
inc
test
jb
fdivrs
push
mov
inc
iret
sahf
push
or
and
sub
out
decl
mov
mov
int3
dec
popf
mov
imul
mov
cmp
xchg
fucom
cmp
ffree
sub
mov
int3
fwait
mov
pop
ds
je
inc
pusha
adc
out
cmp
add
push
in
enter
mov
comiss
jle
xor
add
out
scas
and
push
inc
inc
fists
hlt
inc
test
mov
sbb
stos
add
xchg
push
push
or
dec
xchg
xlat
test
jne,pn
fstpl
out
push
jg
aas
popa
jnp
pop
das
pop
adc
sbb
lea
fcoml
xchg
test
stos
push
inc
mov
adc
jg
ficoms
mov
mov
push
fucom
fld
int
pusha
sahf
jno
add
push
pop
loopne
sbb
ljmp
mov
cmp
pushf
fld
and
nop
push
add
shrb
ljmp
mov
pop
inc
leave
mov
jnp
out
adc
insl
cli
dec
push
xor
mov
adc
adcl
jns
inc
mov
lods
jno
push
xchg
leave
shl
bound
pop
repz
mov
cmp
aad
and
mov
shl
push
push
xchg
cmp
in
push
jne
cmp
cltd
out
jmp
das
adc
sbb
xor
scas
cmovg
adc
xchg
loop
mov
or
popa
jmp
adcb
mov
mov
test
mov
imul
pushf
xlat
mov
pusha
jmp
xor
aad
pop
aaa
inc
mov
fsubrp
dec
or
xor
jb
jb
xchg
xchg
inc
idivl
out
js
test
mov
fwait
xchg
pop
mov
inc
out
lret
ss
rcr
xchg
sbb
jmp
sbb
fsts
mov
xor
and
daa
mov
push
aaa
mov
icebp
sbb
fldt
pushf
bound
ret
push
xchg
mov
inc
mov
shlb
and
pop
lods
xchg
mov
std
inc
mov
insl
mov
sbb
add
popf
movsl
rcll
cli
mov
jl
mov
gs
xchg
sbb
in
jo
jecxz
sub
mov
aad
cmc
addr16
loop
cltd
int3
fistps
mov
leave
inc
push
call
xlat
or
imul
out
cmp
mov
and
es
mov
pop
fstl
cltd
cmpl
das
mov
fsubrp
movsl
lahf
and
cmpsl
inc
dec
testb
xchg
or
sbb
mov
imul
je
mov
mov
mov
sub
sub
jl
jns
sub
pop
test
mov
mov
movsl
test
ret
mov
test
cld
sbb
jle
pop
inc
jl
mov
mov
mov
mov
in
inc
pop
xor
jg
mov
dec
adc
cli
xchg
dec
mov
in
das
xchg
loopne
fisubl
mov
in
xchg
and
inc
push
pop
mov
mov
nop
cmp
jmp
ret
push
xor
lea
stos
pop
mov
mov
dec
push
jmp
rcrb
mov
mov
popa
inc
add
and
mov
and
jg
cs
mov
cmpsl
mov
cmp
std
int3
mov
mov
and
mov
jne
into
mov
insl
cli
test
jecxz
icebp
sub
lret
add
fidivl
dec
pop
dec
scas
xor
shl
cmp
insw
cmp
sub
shll
fs
or
lods
cmp
inc
jmp
jno
cltd
icebp
loopne
xor
shl
mov
sub
dec
push
shlb
push
xchg
cmp
xlat
aam
sbb
pop
sbb
jmp
testb
scas
sub
dec
lods
mov
scas
or
adc
les
push
mov
mov
ret
pusha
or
mov
sbbl
sub
mov
adc
xchg
lods
loop
int
dec
in
jb
sub
jne
movsb
lods
xchg
cmp
pusha
imulb
pop
jne
jnp
inc
jb
xchg
cmpl
pop
sti
xchg
push
mov
push
adc
xor
jmp
sub
in
inc
idivb
rol
xor
incl
mov
sbb
push
dec
rcrb
xchg
jmp
inc
stc
fs
mov
xchg
mov
fsubl
xchg
popa
mov
repz
inc
pop
cmpsb
pop
add
fidivrl
adc
mov
divl
mov
cmc
fsubrl
mul
or
int
hlt
cmp
das
aas
rcll
dec
ret
call
cmp
push
mov
mov
xchg
scas
xchg
jbe
mov
dec
or
mov
inc
mov
pop
or
mov
enter
flds
int
sbb
mov
subb
dec
es
adc
mov
jno
fnstsw
mov
mov
out
ret
insb
pop
add
out
fidivl
push
pop
mov
pushf
cmpsl
jmp
fidivl
out
stos
int3
stos
pop
test
xchg
js
xor
push
test
pop
addr16
jae
dec
pop
pop
test
dec
je
fsts
mov
and
and
loopne
jmp
mov
push
and
out
dec
lahf
push
test
jl
pop
sbb
push
stos
ds
in
decl
out
es
mov
sti
imul
pushf
mov
bts
sub
andb
push
fidivrs
in
jne
jmp
mov
mov
sti
sar
in
jle
ds
pop
sub
lock
gs
mov
add
shl
inc
pop
movsl
adc
fstpt
repnz
mov
adc
mov
lcallw
cmp
loope
lcall
jb
arpl
sbb
xor
lock
popa
jnp
ret
std
xchg
sub
or
push
sbb
xlat
xor
loopne
pop
je
fdivrl
aad
fwait
movsb
clc
xchg
adc
push
pop
enter
xorb
imul
or
and
popf
inc
jno
or
adc
cmp
addl
in
pop
mov
or
test
into
jmp
push
das
insl
mov
add
stc
ds
test
push
test
je
sti
addb
ds
jmp
outsb
sbbb
add
inc
mov
cmp
sbb
cmp
dec
das
mov
push
sbb
aas
or
int3
int
sub
or
enter
outsl
addr16
rolb
test
cmp
out
pop
dec
dec
iret
xor
dec
push
insb
mov
jge
add
and
adc
jnp
push
in
in
divl
and
jnp
roll
or
mov
add
imul
insl
jb
sub
mov
push
xor
jmp
icebp
lret
cmp
xor
repz
call
out
jno
outsl
daa
outsb
sti
imul
jp
iret
stos
popa
stc
scas
mov
ja
jl
xchg
add
enter
sbb
enter
decl
ljmp
sub
mov
fwait
out
aas
hlt
imul
mov
mov
mov
rcrb
dec
jle
das
int
lret
std
jns
pop
add
fisubl
xor
adc
jg
cmp
xlat
push
mov
inc
mov
cld
cmp
or
adc
pop
jp
cli
sbb
jle
adc
dec
imul
ja
pop
repz
and
scas
int3
or
insb
arpl
scas
push
adc
fcomps
sub
dec
push
addr16
stos
push
int
dec
ret
jmp
ja
fwait
push
push
xor
cwtl
xchg
or
movsl
daa
mov
and
sbb
mov
out
iret
inc
xchg
mov
ret
enter
add
repnz
stos
xchg
cmpsl
xchg
arpl
mov
pusha
cmpsl
cmpsl
nop
cmpsb
sbb
and
add
pop
fstps
xchg
jb
fsubrs
aas
add
xor
cmpsb
and
leave
jb
mov
lret
popf
cmpb
jne
xchg
shrl
sbb
pop
add
in
std
dec
gs
cmp
jl
add
pop
sbb
insb
pop
int3
xor
jo
cmpsb
fistpl
push
cmp
cmpsl
push
mov
cld
lcall
sbb
mov
inc
mov
leave
int
add
add
jbe
es
mov
in
and
mov
sub
and
dec
or
xor
cmc
add
in
xchg
mov
pop
in
cmp
mov
in
orb
mov
cmc
sahf
aaa
insl
xor
jg
push
std
or
pop
loopne
std
insb
mov
xchg
sbb
jno,pt
or
das
or
jb,pn
cs
xlat
adc
pop
mov
and
sbb
mov
mov
cmp
and
sahf
stos
andb
dec
push
dec
push
call
push
pusha
xor
leave
mov
out
repz
xchg
mov
clc
lret
out
clc
outsb
sbb
xor
push
inc
lcall
filds
outsl
cmpsl
daa
loop
or
out
pop
leave
add
aad
rcrb
push
jl
mov
pop
loopne
lea
sub
jecxz
mov
xchg
adc
or
fimull
cmp
lea
inc
adc
divb
and
lahf
mov
scas
mov
rolb
cmp
sti
out
pop
sbb
add
in
inc
lcall
xor
jg
das
mov
loope
fbld
lret
xor
fwait
daa
pop
mov
inc
mov
push
sbb
mov
xchg
dec
imul
inc
insl
xor
dec
pop
pop
aaa
bound
xor
xchg
add
jp
rcl
cmp
add
sub
pop
fdiv
xchg
or
add
negl
jmp
pushf
loope
fistps
sub
dec
sbb
cmpsl
xchg
je
js
push
movsb
divb
fwait
add
adc
icebp
test
mov
cmpsl
xlat
inc
mov
mov
dec
adc
fisttpll
cld
add
arpl
and
xor
hlt
aas
cmp
jge
out
lock
jge
daa
out
push
sarl
icebp
sbb
rcl
cmpsl
mov
or
sub
decb
or
in
cld
jecxz
xchg
push
faddl
paddb
inc
adcb
ss
and
mov
adc
imulb
adc
fwait
aas
inc
dec
mov
test
popa
pop
xor
cmp
mov
outsb
cmp
push
lret
sub
mov
jl
inc
fstl
mov
cmp
dec
or
pop
and
adc
xor
out
es
test
jg
add
mov
fs
ds
addl
mov
mov
xor
aas
stos
jo
mov
ds
jmp
mov
sar
pop
pop
push
out
lahf
ja
repnz
pop
ficomps
add
sbb
lea
out
ss
popa
xchg
ss
sbb
sub
call
pop
data16
jecxz
stos
add
lds
scas
jl
jle
dec
mov
das
pop
sbb
jae
sbbb
into
rcrl
ljmp
in
jno
cmc
adc
std
popa
cmp
add
jle
jge
sbbl
mov
push
mov
in
sahf
jne
fiaddl
sub
jns
pop
test
cld
inc
repnz
or
sub
xlat
mov
sbb
cmp
cwtl
ss
cltd
ret
mov
adc
and
xor
bound
scas
mov
lods
call
jle
sub
popf
push
add
cli
scas
loope
mov
jmp
xor
adc
subl
push
mov
in
or
xor
inc
and
rcl
out
cltd
xchg
push
add
hlt
into
call
leave
js
jae
ds
xchg
enter
mov
cmpl
clc
push
cwtl
stc
icebp
sub
jp
pop
xlat
adc
add
or
dec
insl
stos
cmp
jns
stos
sub
arpl
xchg
les
cltd
outsb
out
jmp
xchg
loope
mov
xor
iret
int3
movsb
fscale
pop
cld
mov
sbb
mov
int
andl
aad
out
push
mov
adc
imul
inc
fidivs
ret
out
push
xor
jns
not
dec
sub
sub
aad
xor
stos
ja
ss
insb
jmp
lds
jnp
leave
je
jmp
inc
aam
dec
adc
repnz
pop
cmp
inc
xor
mov
std
and
addr16
fst
test
sbb
cwtl
mov
shll
push
aas
add
add
sarb
xchg
push
bnd
jle
fisubrs
repz
outsb
call
pop
or
pminsw
jp
mov
jle
test
scas
dec
and
ret
mov
icebp
cmpsl
gs
cmpsl
frstor
les
fisttpl
cltd
push
fisubrs
popa
or
pop
jp
shll
insb
int3
rclb
push
add
xor
and
jne
push
imul
cmp
je
jecxz
cli
mov
jecxz
lea
inc
mov
xchg
add
adc
adc
in
leave
sub
adc
imul
cmp
leave
add
testb
push
or
fwait
jno
push
pop
call
xor
cld
xchg
cmp
add
hlt
push
dec
cwtl
aad
in
and
test
outsb
jmp
aam
xor
aad
xchg
sbb
ja
push
and
aas
jae
mov
sarl
cmp
scas
inc
enter
call
push
or
std
jb
cld
cmp
inc
sbb
jle
jns
std
lcall
push
cmp
test
xor
or
jl
pop
repz
out
sub
int
pop
mov
je
dec
icebp
sub
imul
test
std
jno
movsl
cmpsl
push
adc
in
leave
dec
xor
push
sub
jecxz
sub
out
les
shlb
popa
cmp
test
xchg
mov
call
idivb
cltd
hlt
mov
clc
ret
fdivrp
jle
adc
inc
cmp
pop
inc
mov
jg
push
pop
test
je
dec
fwait
insb
loope
hlt
pusha
ljmp
lret
in
insb
lds
int3
icebp
cwtl
or
pop
pop
mov
mov
or
pop
out
cmp
push
push
push
dec
xor
xor
xchg
inc
aam
sar
cmpsl
idivb
lds
pop
mov
into
dec
and
mov
fsubl
mov
mov
inc
popf
push
sahf
rcr
fcoml
sti
pushf
mov
outsl
push
inc
mov
cmc
mov
fisttpll
std
lret
std
jns
daa
stos
pusha
test
jae
adc
ljmp
and
dec
mov
jmp
xor
mov
sub
insl
pushw
sbb
sub
mov
sbb
push
fcomi
adc
xor
call
fbstp
xchg
fdivr
mov
mov
pop
imul
imul
filds
jp
jge
mov
stos
mov
add
mov
inc
inc
sbb
mov
xchg
add
inc
in
test
hlt
stos
fs
imul
js
xchg
pop
loopne
stc
pop
rorb
fsubr
das
mov
inc
fcompl
mov
hlt
dec
adc
rorb
jmp
jle
fimull
leave
ret
shlb
xor
add
test
ljmp
jecxz
mov
aad
or
into
mov
test
sub
adc
sub
jl
pop
fwait
mov
lock
aas
jge
fcmovu
test
add
imul
inc
adc
jmp
mov
pop
mov
push
ja
and
sub
pop
mov
icebp
fistps
lods
add
repz
movsb
leave
lcall
sub
lods
add
mov
lahf
xor
and
xchg
pushf
ffreep
add
adc
scas
ficomps
int
lods
cmc
ljmp
ret
or
nop
scas
jp
in
shlb
or
sbb
les
adc
gs
and
inc
add
ret
adc
daa
mov
jecxz
adc
pop
aad
and
fnstenv
add
adc
and
or
mov
inc
mov
xor
std
lret
pop
push
scas
int
sbb
mov
ja
sub
and
mov
clc
out
lods
sub
lret
jmp
int
xchg
nop
sub
xchg
or
jp
nop
aad
or
jmp
mov
push
push
sbb
out
mov
and
pop
push
std
cmp
adc
push
shrl
xor
xor
pop
lods
cmpsl
adc
add
or
fsts
ja
xchg
mov
inc
scas
movb
pop
sbb
les
out
pusha
adc
repz
in
lods
push
and
dec
scas
jnp
pop
add
scas
jl
pop
xor
bound
add
out
xchg
adc
popa
shl
cwtl
pop
aad
jb
repz
jp
sbb
cwtl
push
push
dec
dec
js
jp
dec
outsl
scas
sti
popf
in
dec
xchg
loopne
jb
into
push
lret
mov
inc
mov
cmp
fsubrs
xor
or
sbb
ret
mov
imul
or
jp
repnz
repz
bound
movsl
fcom
jbe
dec
push
lods
int3
mov
xor
pop
push
pop
inc
icebp
dec
pop
xchg
mov
pusha
mov
hlt
icebp
pusha
inc
cmpsl
ljmp
pusha
sbb
adc
and
stc
and
cmp
mov
ds
sub
jmp
add
pop
inc
pop
cmp
jno
sbb
and
aad
lcall
sahf
lea
dec
sbb
cmp
call
cmp
or
mov
xor
mov
adc
into
cmp
xchg
in
push
aas
cmp
mov
mov
int3
stc
movsb
mov
cmp
pusha
in
jp
int3
mov
pop
loop
cmpsb
pusha
adc
lock
and
add
iret
cmp
push
scas
or
dec
jecxz
inc
xchg
sarl
push
insl
xchg
out
ss
cli
adc
push
lds
and
in
mov
scas
push
mov
lea
icebp
xchg
jae
or
out
cmp
push
pop
lret
les
clc
adc
xchg
mov
pop
in
push
ljmp
xchg
movsb
xor
adc
pop
sbb
addl
mov
loope
sbb
repnz
mov
cmc
js
call
mov
in
aaa
pusha
int3
stos
mov
cs
lcall
cmpl
scas
aas
bound
add
sarl
pop
int3
dec
xchg
pop
movsb
inc
or
sarb
stc
js
xchg
sbb
jmp
push
addr16
and
testl
addr16
or
mov
int
sbbl
push
mov
into
xchg
mov
dec
pop
push
flds
xor
mov
sub
and
inc
and
inc
inc
lcall
pop
loope
nop
out
test
hlt
sub
fidivrl
jl
jp
popl
idivb
and
pop
inc
pop
mov
add
loope
add
andl
loope
pop
je
subl
inc
xchg
jp
cmc
jle
lods
call
test
movsb
std
fbld
mov
stos
xchg
mov
loope
push
adc
cmp
jg
insl
bound
mov
call
mov
add
push
xor
adc
fdivl
xchg
ljmp
xchg
gs
sbb
jmp
scas
aaa
cmpsb
jp
call
cmpsb
cmpsb
push
gs
sarl
mul
mov
adc
jb
sbb
jl
das
fbstp
push
cmp
cmp
scas
jne
movsl
shll
iret
hlt
mov
cmp
flds
xor
aas
cmp
shlb
xchg
xor
popf
jb
aas
sahf
orl
gs
fdivrs
daa
add
xor
aas
adc
inc
jns
adc
lcall
addr16
mov
loopne
add
andb
mov
add
bnd
pop
jmp
movsl
push
inc
movsb
ds
cmp
mov
or
push
sub
sbb
jns
xor
mov
push
or
popf
aaa
sbbb
fs
mov
cmc
daa
test
inc
cmc
ja
shrd
pop
or
and
aaa
push
fcompl
pop
fs
fwait
lds
aaa
bound
xor
and
jecxz
rcrl
mov
mov
ss
pmaddwd
adc
in
rcrl
xchg
or
sub
xchg
xor
into
inc
adc
lret
inc
jb
hlt
xchg
inc
ret
je
pop
push
xchg
adc
int3
addr16
loopne
arpl
je
adcl
outsl
lods
jnp
xchg
xor
or
cmp
in
icebp
cmpsl
dec
xchg
pop
cwtl
jae
dec
sbb
xor
jp
loopne
push
xor
cwtl
inc
cmpsl
mov
mov
xchg
lds
mov
push
pop
pop
mov
lods
fcmovu
int3
aaa
imul
test
mov
sub
fists
out
and
ljmp
push
aad
lock
out
push
dec
cmp
loop
mull
test
jne
jb
push
inc
jge
test
xor
jb
jp
pop
fstps
mov
roll
sbb
push
xor
and
imul
xchg
addr16
movsb
clc
pop
lds
jo
lods
movsb
sub
imul
adc
sbb
fwait
adc
push
cli
add
mov
das
pop
inc
fs
loop
repnz
push
sub
test
mov
push
mov
enter
fisttpll
mov
inc
ret
pop
inc
fcom
xor
jmp
pop
cmpl
xchg
mov
ss
loopne
xchg
movsl
lcall
addb
cmp
push
mov
loopne
js
in
ja
push
inc
dec
into
jnp
inc
pop
sub
push
roll
hlt
cli
push
or
bound
insb
jmp
das
shrb
out
lcall
icebp
jge
jo
mov
push
inc
movsl
loopne
imul
xorl
leave
jg
inc
aas
xor
iret
stos
or
aad
pop
or
and
lea
lcall
xchg
aam
adc
out
mov
push
dec
stc
pop
jg
xchg
loope
add
divb
imul
sub
test
cmc
mov
daa
dec
out
test
mov
test
or
int
popf
mov
cs
in
aam
adc
jecxz
mov
xchg
jae
push
mov
xchg
add
inc
test
leave
stos
add
stc
jae
cmc
or
dec
ds
setg
xor
decl
adc
mov
fs
testb
fiaddl
push
jle
mov
mov
pop
mov
add
testb
popf
cmpsl
mov
jo
and
das
cmc
shrb
loop
sub
dec
mov
jge
jg
cmp
push
imul
inc
push
mov
cltd
mov
test
cwtl
sarb
lahf
inc
inc
lock
or
mov
jb
aam
dec
icebp
enter
aaa
mov
ja
lds
mov
filds
xchg
xchg
call
aad
popa
cmp
jb
arpl
mov
incl
cltd
add
mov
outsb
leave
pop
fimuls
add
inc
or
xor
shll
lcall
sahf
and
cli
sub
pop
sti
out
fs
popa
int
dec
scas
mov
jmp
js
into
insl
lods
push
mov
dec
xor
jle
lea
adc
cld
sbb
and
cwtl
jne
sub
dec
mov
loop
inc
pop
leave
dec
fldl
imul
mov
insb
jmp
outsl
or
add
inc
jne
adc
or
adc
mov
aam
sub
jns
sbb
je
mov
or
sar
xor
mov
jo
stos
jae
xor
add
mov
xchg
cltd
jno
xor
imul
inc
mov
and
add
ss
loopne
jg
clc
les
imul
push
pop
jmp
cmp
fists
pop
xchg
in
cmpsl
jae
add
and
and
inc
roll
xchg
sub
mov
pushf
enter
out
out
and
clc
pop
push
push
adc
mov
into
xchg
dec
ljmp
ds
clc
mov
mov
scas
insl
lea
pop
jno
inc
sub
dec
pop
mov
ja
mov
inc
sub
out
cmpsl
test
out
mov
adc
fstpt
pop
test
sti
movsl
iret
push
fsubrl
div
scas
pop
popf
dec
repz
popa
xor
and
movsb
dec
je
cli
cmp
xor
movsl
xchg
fcompl
cld
pop
es
cltd
pushf
int3
cmp
lret
sbb
sahf
adcl
push
outsb
les
push
xchg
sub
fidivl
or
pop
ret
std
sub
fiaddl
out
mov
bound
addr16
add
jp
and
mov
cmp
inc
pop
push
out
sar
sub
mov
repz
mov
sub
movsl
cmp
xor
sub
adc
outsb
or
push
add
xchg
mov
das
in
jae
mov
sbb
fucomp
negb
bswap
mov
push
scas
mov
pop
dec
fstps
or
int
xor
add
je
xlat
add
gs
pusha
scas
gs
or
inc
es
dec
dec
sbb
jecxz
pop
ret
push
jmp
mov
gs
add
ja
aad
mov
push
sbb
pop
cmp
mov
adc
imul
cmp
arpl
lea
loope
imul
outsl
push
jp
ja
mov
lods
mov
insb
cmc
xor
sbb
loop
insb
mov
sub
lret
hlt
out
cmc
sahf
sbb
pop
push
aam
add
jl
xor
arpl
xchg
es
mov
cmp
scas
add
cmp
loopne
stos
fbld
nop
fmull
std
mulb
xchg
iret
mov
out
xorl
fisttps
lods
sub
mov
mov
add
mov
jo
rcr
sahf
sbb
enter
xor
das
mov
xchg
andb
xlat
mov
push
cli
shll
xor
sub
aas
cmp
add
sub
fsts
or
dec
and
jns
mov
add
scas
ja
dec
mov
xor
fsts
insb
mov
stos
mov
or
or
ror
xchg
cli
aam
inc
enter
jmp
int
adc
pusha
add
and
xlat
aas
or
ja
jecxz
xlat
jmp
mov
push
out
test
imul
cmp
rcl
popa
je
sbb
push
imul
jmp
sbb
movsb
cmpsl
or
int
cmp
mov
xor
jmp
lahf
fiaddl
add
lds
ja
cmc
jmp
inc
insb
out
mov
cmc
push
sbb
outsl
and
cmp
pop
bound
dec
enter
shlb
sub
jne
psadbw
jno
jmp
push
jbe
inc
data16
dec
je
mov
pop
xchg
sbb
pop
xchg
push
imul
lock
inc
push
dec
paddb
mov
xchg
or
aaa
push
inc
leave
hlt
les
pop
and
sub
push
dec
add
sarb
mov
lret
xor
mov
cmpsb
aas
or
jp
adc
lods
repz
mov
xchg
stos
sbb
sub
loopne
scas
jns
or
cmp
aaa
leave
data16
or
mov
jne
xor
xor
mov
mov
repnz
imul
adc
and
jae
fildl
mov
js
and
pop
cwtl
insb
test
in
mov
icebp
and
dec
xchg
gs
sub
add
mov
ss
loop
loopne
pusha
sbb
push
push
mov
mov
push
loop
sub
das
popf
ss
lea
bound
pop
adc
add
out
inc
push
cmc
addb
adc
hlt
and
adc
jp
sub
fwait
or
ja
stos
icebp
add
js
sub
bound
and
ljmp
inc
or
cmp
jno
ret
orb
cmpsl
inc
mov
mov
outsl
hlt
icebp
scas
fs
sub
inc
repz
stc
mov
test
int3
push
test
sbb
icebp
mov
and
sbb
shl
jbe
sub
mov
arpl
mov
add
inc
lods
stc
push
inc
fistps
mov
aas
mov
dec
lahf
jl
xlat
or
inc
cltd
cld
cmp
sub
mov
cmp
inc
cmpsl
pop
push
imulb
clc
sub
mov
shlb
mov
mov
test
ljmp
cmp
mov
push
cmc
xchg
repnz
in
fst
dec
outsl
mov
in
jmp
cmp
js
pop
push
adc
xlat
lods
in
test
fimull
aaa
mov
je
mov
xor
xor
or
out
movsb
popf
stc
mov
mov
push
sbb
or
scas
jl
arpl
adc
std
and
int3
inc
push
and
xor
pop
and
mov
shll
call
je
push
cli
mov
test
sbb
icebp
cmp
outsb
test
test
addr16
jl
push
and
movsb
icebp
out
sarb
sarl
fisttpl
ror
aas
je
jp
ljmp
test
ljmp
sbbl
arpl
push
jl
outsl
scas
movsb
ret
cmp
jmp
fildll
pop
sbb
stos
lahf
cmc
add
sbb
add
cli
cmp
into
push
mov
cwtl
fistpll
push
insl
sbb
outsl
pop
pop
mov
fldt
movsl
int3
ja
cmc
inc
pop
add
pusha
or
daa
aam
cltd
jb
nop
arpl
sub
jb
cmp
inc
insb
sarl
adc
es
cltd
mov
pop
and
aam
int3
aad
xor
pop
or
cmpsb
mov
lcall
pop
mov
clc
bound
or
xchg
sub
xchg
nop
xor
cmp
popf
cmp
loopne
jle
pop
xchg
in
popa
mov
add
fidivrs
add
fildl
loopne
cmp
sbb
dec
xorl
mov
stos
xlat
call
jmp
push
sub
movb
or
andl
jnp
jo
adc
outsl
mov
cli
cs
fwait
test
mov
push
adc
lds
cli
xor
xor
dec
mov
cmp
cmp
or
mov
movsb
sub
outsb
sub
mov
pop
mov
ja
loop
pop
ficompl
test
xchg
iret
rcrl
dec
cmp
jno
pop
les
aas
scas
mov
mov
jne
cmpb
push
mov
jnp
ljmp
aaa
dec
mov
push
imul
push
push
xchg
test
sbb
icebp
ss
mov
cmp
scas
pop
mov
cmc
pop
cmpsb
out
mov
fisubl
jg
push
test
das
loop
and
jae
in
repz
fwait
and
sar
aaa
lret
inc
xchg
xor
in
insb
or
pop
xor
orb
hlt
add
test
ret
or
and
pop
mov
loope
xchg
dec
cs
or
inc
pusha
cmp
mov
inc
lock
push
dec
dec
cmp
jno
cmp
adc
and
jle
aas
pop
rclb
pop
jae
cmpsl
inc
or
lods
and
in
or
and
iret
insl
inc
jmp
jmp
jnp
xor
push
jnp
cmp
lret
cmpsb
push
pop
inc
push
adc
aas
or
cmp
xor
cmpl
jno
inc
add
xlat
pop
push
push
call
mov
insl
mov
xchg
out
fnstsw
fst
push
jb
push
shrl
push
pop
dec
imul
mov
std
mov
loopne
enter
inc
addr16
sub
mov
notl
xor
mov
ds
inc
cli
mov
movsl
ds
inc
sahf
cld
out
nop
adc
or
push
push
in
sbb
xor
pop
mov
insb
and
faddp
dec
mov
out
cmp
aas
out
xlat
daa
call
mov
xor
jmp
lret
jmp
mov
xor
jns
ret
ficoms
insl
xor
out
test
fdivrs
test
push
xchg
jg
aaa
daa
in
lret
cmp
addl
jge
mov
orl
inc
jge
outsl
lcall
push
add
pop
leave
adc
push
push
add
inc
mov
dec
aas
sub
stos
xchg
push
sub
sbb
xor
jns
xchg
daa
xchg
jo
arpl
arpl
push
push
cmp
xor
xchg
std
mov
imul
mov
sbb
xor
jne
mov
out
repz
mov
jne
cltd
daa
les
out
sarl
mov
sub
ja
dec
roll
lahf
adc
mov
push
jno
mov
sbb
dec
lcall
repnz
jnp
xor
out
outsl
loop
pop
jmp
stos
jecxz
addl
ljmp
sbb
lret
sarb
jo
loopne
jge
insb
sti
sub
lcall
lods
jp
fdivrl
adc
xchg
jae
xchg
xchg
cmpl
jge
movsb
mov
cmp
repnz
lahf
scas
cmp
hlt
loopne
pop
aaa
sbb
adc
dec
cld
out
jne
test
insb
mov
jle
inc
sbb
ds
mov
push
jmp
arpl
add
repz
bound
mov
mov
aam
fwait
jg
test
loop
jns
mulb
adc
test
mov
cli
aaa
jbe
aam
jo
bound
and
sub
mov
mov
das
cwtl
adc
and
daa
clc
mov
push
mov
dec
jno
stos
sub
adc
mov
outsb
movsl
or
mov
sbb
setbe
js
filds
pop
test
mov
shll
xor
mov
push
push
push
or
inc
mov
add
shr
sbb
sub
ja
or
in
hlt
inc
lock
loopne
pop
jns
push
sub
imul
fs
mov
movsl
jmp
andl
jge
aad
xchg
jae
stos
jl
mov
leave
mov
imul
sahf
into
add
hlt
rorl
data16
rclb
sbb
mov
out
icebp
ret
inc
enter
sbb
lahf
lds
cmp
adc
dec
mov
into
shl
cs
mov
xor
adc
outsb
xor
fcoml
imul
je
pusha
and
jbe
jbe
inc
dec
or
in
mov
aad
or
push
xchg
push
jmp
lods
leave
pop
or
dec
mov
inc
shlb
or
jnp
scas
repz
adc
rcrb
sub
or
push
inc
cmp
call
scas
sahf
out
xorb
add
ss
xor
ds
aas
dec
xor
sub
cld
arpl
lods
out
icebp
std
mov
fists
lock
es
js
iret
add
shlb
push
negb
test
xor
mov
std
ret
repnz
in
cld
loop
xchg
jb
dec
push
sar
jecxz
fwait
or
mov
push
repnz
jg
shr
stos
xchg
imul
xor
cmpsb
les
add
push
insb
push
lcall
sub
outsb
cmp
sub
test
mov
andl
mov
out
cmp
cmpsb
pop
mov
add
movlps
jb
fdivrs
std
sbb
fstp
ret
xchg
lcall
orb
sbb
nop
cld
aaa
es
pop
gs
fwait
jecxz
ljmp
imul
aas
aad
xchg
out
ss
ret
cwtl
and
enter
adc
test
popf
pop
or
mov
testb
sbb
dec
rclb
mov
and
push
add
pop
dec
sbb
inc
jg
xchg
pop
in
test
lea
in
repnz
jae
adc
xchg
rol
dec
push
pop
xchg
jno
sbb
xchg
push
or
dec
arpl
fdivl
push
mov
jb
divb
adc
sub
insl
mov
das
cmc
shll
out
jno
mov
xlat
jp
pushw
and
mov
or
mov
add
xchg
call
popa
jp
cli
push
outsb
push
pop
push
icebp
sbb
push
mov
pop
mov
cmp
fstl
addr16
pop
int
pop
mov
pop
add
mov
push
pusha
cltd
pop
daa
sbb
xor
fld
pop
lret
stos
fiadds
push
gs
popa
mov
int3
jbe
push
add
xlat
inc
test
xor
cmp
lret
and
jae
push
bound
in
mov
dec
aas
scas
enter
xchg
outsl
test
sub
out
and
and
adc
mov
fisubrs
sub
sub
sbb
sub
cltd
mov
lods
out
or
lock
mov
add
or
sub
repz
ja
movsl
dec
or
mov
push
lret
ficoml
data16
aam
and
out
gs
xor
inc
movsl
repnz
jno
jne
and
out
insb
out
fldcw
mov
or
cmp
inc
push
jns
jg
mov
ss
imul
xchg
jmp
mov
sub
add
imul
lock
in
insb
sti
neg
lds
push
sahf
add
sbb
idivb
int
repnz
mov
ret
sbb
int3
test
fidivs
mov
and
orb
xor
test
fwait
cmp
pop
add
and
stc
sub
jg
push
inc
push
mov
out
loope
dec
inc
loop
mov
cmp
fldenv
push
lret
mov
loop
jno
outsb
pop
mov
iret
mov
push
pop
out
cli
leave
jne
outsb
xrelease
push
or
or
iret
push
fsubl
jnp
fsubrs
rcll
adc
sarb
scas
aam
and
mov
jl
stos
sub
pop
or
cld
mov
test
pop
cmpsb
dec
in
cmp
or
mov
and
jmp
inc
mov
call
sbb
adc
xchg
mov
jmp
ljmp
mov
xchg
sbb
out
sub
sbb
add
xor
push
clc
lods
mov
lahf
adc
call
cltd
sahf
jle
ret
clc
repz
xchg
arpl
sbb
pop
sub
fadd
ret
frstor
adc
dec
imul
mov
ds
roll
adc
test
push
inc
gs
mov
and
or
xor
js
pop
mov
xchg
push
dec
push
cmp
xchg
test
into
leave
cmp
jno
dec
out
dec
lcall
test
loopne
cltd
push
push
push
jp
insb
xor
lea
es
push
mov
sbb
dec
adc
xchg
mov
fnsetpm(287
sub
sbb
sbb
fcmove
jbe
arpl
xor
rcrb
lea
sbb
push
icebp
test
push
mov
movsl
negl
adc
mov
fdivrl
ss
repnz
dec
dec
xor
lret
aam
xchg
push
fs
gs
sbb
add
jb
inc
adc
imul
sar
sahf
fsubrs
dec
xlat
call
add
loope
mov
xor
cmp
jge
push
loop
add
jle
xor
fldcw
jbe
cmc
add
xchg
movsl
dec
push
outsl
stos
or
jne
inc
jno
push
ljmp
mov
push
mov
adc
xor
dec
cmp
adc
arpl
orb
iret
mov
bound
incb
mov
fs
and
inc
push
jg
ds
pop
enter
flds
and
pusha
test
aam
int
int3
test
fbstp
lea
dec
ret
push
pop
mov
mov
mov
mov
mov
lds
inc
fs
cmp
fidivrl
test
dec
pop
cltd
cmp
mov
in
jmp
dec
mov
popa
jne
mov
rdpmc
fbld
iret
mov
mov
push
inc
int3
dec
loope
js
ds
mov
sbb
adc
push
add
shlb
test
das
mov
pushl
das
jle
jo
mov
xlat
lock
stc
xor
rorl
aaa
cmp
mov
push
js
jp
lods
push
int3
sahf
les
and
data16
insb
test
das
repz
add
adc
push
dec
xchg
insl
push
in
out
push
jbe
movsl
jmp
push
fisttps
ds
push
push
ss
into
into
enter
push
mull
cmpsb
mov
pop
insl
jne
bound
adcl
int3
inc
cmp
add
ficoms
roll
stc
stc
les
lret
cmp
ret
sub
cmpsb
int
lahf
pushf
aas
fsubs
adc
movb
movsb
repnz
push
cmpsb
arpl
pop
aad
nop
sti
mov
dec
pushf
movsb
cwtl
ret
jno
jecxz
ret
fnsave
push
stos
mov
mov
mov
adc
mov
mov
mov
cmp
jns
or
mov
dec
push
fstl
xchg
sbb
or
sbb
mov
popl
sub
and
lea
fs
dec
scas
push
jbe
mov
xchg
cmpb
pop
dec
mov
movsb
aam
jle
test
repnz
popf
pop
test
push
dec
aas
push
dec
aaa
out
call
out
aas
xchg
dec
movsb
lock
arpl
ja
idiv
mov
lea
xchg
clc
or
inc
dec
cmp
rcrl
shrb
pusha
pop
adc
jge
in
sbb
push
aas
xor
jp
and
adcb
jb
cli
mov
aam
push
pop
jae
xchg
sbb
outsb
cmp
add
or
push
sbb
add
rcr
shlw
and
inc
xchg
lods
sbb
dec
adc
ja
nop
inc
test
insl
cltd
add
pop
push
cwtl
bound
pop
or
js
mov
aas
scas
out
xchg
std
xor
ret
xchg
in
cmpsl
lea
divb
inc
xchg
adc
mov
or
into
lds
pop
out
pushf
fcoms
push
or
xchg
fcmovnu
dec
jecxz
std
pusha
out
cli
nop
dec
pusha
repnz
jns
dec
in
xchg
sar
lods
mov
push
mov
adc
repz
and
mov
lods
adcb
inc
pusha
xlat
or
lcall
iret
cmp
mov
push
sti
cmp
lock
loopne
popa
sbbl
cmp
ret
inc
inc
mov
sub
jmp
sub
and
mov
js
mov
sub
push
out
and
sub
into
gs
ret
adc
test
lods
jl
rolb
and
mov
xchg
dec
jmp
inc
add
popa
mov
sbb
imul
icebp
mov
push
sbb
mov
mov
aas
push
inc
xor
popf
add
pushf
cmp
iret
push
bnd
push
mov
nop
call
inc
fistl
pop
ljmp
aaa
rolb
jns
mov
dec
jecxz
inc
roll
jg
aas
call
pop
xor
dec
jge
mov
bound
xchg
lcall
dec
sbb
add
mov
testl
es
aam
out
dec
and
into
jns
push
inc
adc
loope
call
scas
leave
ja
dec
sub
mov
xchg
adcb
inc
lods
cltd
ffree
jns
arpl
hlt
xchg
and
mov
loope
lret
mov
pop
inc
mov
cwtl
popf
sahf
push
leave
sbb
rcll
popa
daa
sbb
fimuls
call
ret
xlat
ret
adc
divb
out
addl
movsb
cld
mov
jo
add
clc
fwait
stos
stos
sbb
dec
popa
xor
and
je
or
mov
jns
mov
jo
cmpsl
clc
add
jmp
adcl
cmc
icebp
sub
and
iret
cmp
mov
add
fsubr
out
std
jl
xchg
insl
jb
mov
rcrl
jns
ja
outsb
and
and
gs
add
add
adc
daa
popf
pop
add
dec
add
fisttps
mov
mov
add
add
add
add
add
or
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
