add
add
sub
add
add
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
test
push
push
push
push
mov
jne
push
push
push
call
add
xor
jmp
push
push
lea
call
or
lea
push
movl
call
mov
lea
add
push
push
mov
call
test
je
mov
mov
mov
mov
lea
movb
call
lea
lea
push
push
push
lea
movb
call
mov
mov
test
je
push
push
push
call
mov
add
mov
test
je
push
push
push
push
push
push
call
add
lea
movb
call
lea
movb
call
lea
mov
call
xor
jmp
push
push
push
push
push
call
add
jmp
mov
test
jbe
push
push
push
push
push
push
call
add
jmp
push
lea
call
test
jne
push
push
push
push
call
add
jmp
mov
call
test
jne
mov
test
je
push
call
xor
mov
divl
mov
test
lea
je
mov
push
push
call
add
or
add
add
divb
push
push
push
call
add
mov
test
je
mov
push
add
or
lea
movb
call
lea
movb
call
lea
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
mov
lea
push
push
mov
call
mov
mov
mov
dec
mov
mov
jne
mov
xor
cmp
je
mov
xor
cmp
jbe
mov
mov
cmp
je
lea
push
push
call
mov
cmp
jne
mov
inc
cmp
jb
mov
push
call
mov
add
mov
mov
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
movb
call
mov
movb
cmp
mov
jne
push
push
push
call
add
jmp
push
push
lea
call
push
lea
movb
call
mov
lea
add
push
push
mov
call
cmp
je
mov
mov
push
mov
mov
call
test
jne
push
push
push
push
push
push
call
add
jmp
push
push
push
push
push
call
add
jmp
lea
push
mov
push
call
cmp
mov
jne
push
push
push
push
call
add
mov
lea
push
push
call
test
jne
lea
call
mov
push
call
mov
mov
lea
lea
push
push
push
lea
movb
call
movl
mov
movl
mov
mov
mov
movl
mov
lea
push
push
movb
call
mov
add
cmp
je
mov
xor
shr
divl
mov
cmp
lea
je
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
dec
mov
jne
lea
call
mov
lea
lea
push
push
call
mov
push
push
lea
call
test
jne
push
lea
mov
mov
push
call
mov
push
call
push
push
push
push
call
add
movl
lea
movb
call
add
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
xor
jmp
mov
cmp
je
cmpl
jne
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
lea
push
push
push
call
cmp
jne
push
push
push
call
add
mov
cmp
jbe
push
push
push
push
push
push
call
add
movl
lea
movb
call
jmp
mov
cmp
jne
push
lea
call
test
jne
push
push
push
push
call
add
movl
mov
movb
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
jmp
mov
call
test
jne
cmp
je
push
call
xor
mov
divl
mov
cmp
lea
mov
je
mov
push
push
call
add
cmp
je
mov
mov
cmp
jne
push
push
push
call
add
mov
cmp
je
mov
push
add
movl
mov
movb
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
lea
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
mov
mov
pop
pop
pop
mov
pop
add
add
add
push
lea
push
push
mov
call
mov
mov
mov
dec
mov
mov
jne
cmp
je
mov
xor
cmp
jbe
mov
mov
cmp
je
lea
push
push
call
mov
cmp
jne
mov
inc
cmp
jb
mov
push
call
mov
add
mov
mov
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
xor
push
cmp
mov
mov
jne
push
push
push
call
add
xor
pop
pop
mov
mov
add
ret
push
push
push
lea
call
push
lea
mov
call
mov
neg
sbb
cmp
je
push
mov
mov
mov
cmp
movb
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
lea
lea
push
call
mov
mov
call
test
jne
mov
push
push
push
push
push
call
mov
add
push
mov
call
jmp
mov
lea
push
push
mov
call
test
je
mov
test
je
cmpw
je
mov
push
push
call
add
test
push
jne
mov
push
push
push
push
push
call
add
jmp
mov
push
push
push
push
push
call
add
jmp
mov
push
push
push
push
push
call
add
mov
push
push
mov
call
add
lea
movb
call
lea
movb
call
test
jne
pop
lea
movl
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
movl
call
mov
movl
mov
mov
mov
movb
test
jne
push
push
push
call
add
lea
movb
call
lea
movb
call
lea
movl
call
xor
pop
mov
mov
add
ret
lea
lea
push
push
lea
call
test
je
push
push
push
lea
call
mov
test
jbe
mov
push
push
push
push
push
push
call
mov
add
mov
push
call
xor
divl
mov
test
je
mov
test
je
mov
push
push
call
add
test
je
mov
test
jne
mov
push
push
push
push
push
call
add
lea
lea
push
push
jmp
test
je
mov
mov
mov
mov
neg
sbb
test
movb
je
cmp
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
mov
add
push
lea
call
mov
mov
push
push
push
push
push
push
push
call
mov
add
mov
push
push
call
test
jne
lea
lea
push
push
lea
call
lea
mov
movb
call
jmp
mov
lea
push
call
test
je
add
jmp
mov
push
push
push
push
push
call
add
lea
lea
push
push
lea
call
mov
test
jne
pop
pop
pop
mov
call
mov
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
movl
mov
push
push
lea
movb
call
push
lea
movb
call
mov
mov
neg
push
mov
sbb
call
test
je
mov
mov
cmp
movb
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
lea
lea
push
call
mov
push
lea
mov
mov
push
call
push
movb
mov
mov
push
call
lea
movb
push
lea
call
lea
mov
push
call
mov
call
push
push
mov
mov
push
call
lea
lea
push
call
lea
push
mov
call
push
lea
call
lea
mov
push
call
lea
mov
push
call
lea
movb
call
test
jne
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
xor
push
lea
mov
call
mov
mov
mov
mov
movb
cmp
jne
push
push
push
call
add
jmp
call
test
jne
push
push
push
push
call
add
lea
movb
call
lea
movl
call
xor
jmp
push
call
add
mov
cmp
movb
je
mov
call
mov
jmp
xor
cmp
mov
movb
jne
push
push
push
call
add
lea
movb
call
lea
movl
call
mov
jmp
lea
call
lea
movb
call
cmp
jne
push
push
push
call
mov
add
mov
push
add
lea
movb
call
lea
movb
call
lea
movl
call
mov
jmp
push
push
lea
call
push
lea
movb
call
mov
neg
sbb
cmp
je
add
mov
mov
cmp
movb
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
mov
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
mov
jne
inc
add
cmp
jb
lea
lea
push
mov
call
mov
mov
mov
lea
push
push
lea
call
test
je
mov
jmp
mov
xor
push
push
push
push
push
call
mov
add
inc
mov
mov
call
test
mov
je
mov
mov
lea
lea
push
lea
push
push
mov
movb
movl
call
mov
lea
push
call
test
jne
mov
mov
push
push
push
push
push
push
call
mov
add
mov
push
call
add
jmp
test
je
mov
mov
push
call
test
je
mov
lea
push
push
mov
call
mov
mov
push
call
push
lea
mov
mov
push
call
mov
mov
push
call
lea
movb
call
mov
test
jne
mov
call
test
jne
lea
call
mov
mov
mov
lea
lea
push
push
push
lea
movb
movl
call
mov
test
jne
mov
lea
push
call
mov
mov
test
je
push
call
xor
divl
mov
mov
test
lea
je
mov
push
push
call
add
test
je
mov
mov
test
jne
jmp
mov
lea
push
push
mov
call
mov
mov
mov
dec
mov
mov
jne
mov
call
mov
push
push
push
push
push
call
add
jmp
push
mov
push
push
push
push
push
call
add
mov
lea
inc
movb
mov
call
lea
movb
call
mov
lea
movb
call
mov
test
jne
mov
mov
call
mov
neg
sbb
test
je
mov
jmp
mov
mov
mov
mov
cmp
movb
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
mov
jne
mov
mov
lea
inc
cmp
jae
mov
lea
mov
test
mov
jne
inc
add
cmp
jb
mov
lea
push
lea
mov
call
mov
mov
mov
lea
mov
test
je
push
call
mov
xor
add
divl
mov
mov
test
lea
je
mov
push
push
call
add
test
je
mov
mov
test
jne
jmp
mov
lea
push
push
mov
call
mov
add
mov
mov
mov
dec
mov
mov
jne
call
mov
mov
lea
lea
push
push
mov
call
add
test
jne
mov
test
jne
mov
push
push
mov
call
mov
call
inc
add
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
movl
mov
movl
mov
mov
mov
mov
lea
movb
call
lea
inc
incb
push
push
mov
movb
call
mov
mov
push
push
lea
call
cmp
jne
push
push
push
call
add
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
movb
call
mov
call
cmp
mov
je
mov
mov
lea
lea
push
lea
push
push
mov
movb
mov
call
mov
mov
push
push
push
push
push
push
call
mov
add
cmp
je
mov
cmp
je
mov
mov
push
push
call
add
test
je
mov
test
jne
jmp
test
jne
mov
push
push
push
push
push
call
mov
mov
add
lea
push
push
push
call
lea
movb
call
mov
xor
cmp
jne
push
mov
call
test
jne
mov
mov
xor
cmp
jle
mov
mov
add
lea
push
call
mov
movb
push
mov
call
add
jne
mov
push
push
push
push
push
call
mov
mov
add
push
push
push
lea
call
lea
movb
call
mov
inc
cmp
jl
mov
movl
cmp
movb
je
lea
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
call
add
mov
movb
call
movl
mov
movb
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
lea
mov
movb
call
lea
movb
call
cmp
jne
mov
push
mov
add
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
mov
pop
pop
pop
mov
pop
add
add
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
test
push
push
push
mov
jne
push
push
push
call
add
xor
pop
pop
pop
mov
mov
add
ret
push
push
lea
call
push
lea
movl
call
mov
mov
lea
movb
push
mov
call
mov
push
push
mov
push
push
push
lea
call
add
lea
movb
call
mov
test
je
cmpw
je
push
push
push
call
mov
test
jne
push
push
push
jmp
push
push
push
push
push
call
mov
test
jne
push
call
push
push
push
push
call
add
lea
movl
call
pop
pop
or
pop
mov
mov
add
ret
mov
mov
lea
mov
push
movb
call
mov
push
push
call
add
lea
movb
call
push
call
push
call
lea
movl
call
pop
pop
mov
pop
mov
mov
add
ret
push
push
push
push
call
add
lea
movl
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
mov
movl
mov
mov
lea
lea
push
push
lea
movb
call
test
je
mov
mov
push
call
test
je
mov
mov
push
push
mov
call
jmp
push
push
push
push
call
add
lea
lea
push
push
lea
call
test
jne
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
push
push
mov
mov
movl
mov
xor
cmp
mov
je
mov
xor
cmp
jbe
push
mov
mov
cmp
je
lea
push
push
call
add
cmp
jne
mov
inc
cmp
jb
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
push
mov
push
not
test
mov
je
mov
push
mov
call
mov
test
je
mov
xor
test
jbe
mov
mov
test
je
lea
push
push
push
call
mov
lea
not
test
push
push
mov
je
call
jmp
call
mov
test
jne
mov
inc
cmp
jb
jmp
mov
call
mov
dec
test
je
inc
mov
jmp
mov
mov
mov
lea
push
push
push
movl
call
mov
push
not
test
je
lea
mov
push
call
jmp
lea
push
mov
call
mov
push
mov
mov
call
xor
divl
mov
test
mov
je
mov
test
je
mov
push
push
call
add
test
je
mov
test
jne
jmp
test
jne
mov
test
jne
mov
lea
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
test
jne
mov
push
lea
push
push
call
mov
mov
shl
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
inc
push
mov
mov
lea
mov
push
call
mov
movl
push
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
movl
call
mov
dec
mov
jne
add
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
push
mov
cmp
je
mov
xor
mov
mov
shr
divl
mov
cmp
lea
je
cmp
je
mov
mov
cmp
jne
pop
pop
xor
pop
ret
mov
mov
mov
mov
mov
mov
dec
mov
jne
mov
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
pop
pop
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
movl
mov
xor
cmp
mov
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
sub
push
mov
push
push
mov
push
not
test
mov
je
mov
push
mov
call
mov
test
je
mov
xor
test
jbe
mov
mov
test
je
mov
lea
not
test
push
push
mov
je
call
jmp
call
mov
lea
not
test
push
push
mov
je
call
jmp
call
mov
test
jne
mov
inc
cmp
jb
pop
pop
pop
pop
add
ret
mov
call
mov
dec
test
je
inc
mov
mov
push
not
test
je
lea
mov
push
call
jmp
lea
push
mov
call
mov
push
not
test
je
lea
mov
push
call
jmp
lea
push
mov
call
mov
mov
shr
xor
mov
div
test
mov
mov
je
mov
test
je
mov
cmp
je
mov
test
jne
jmp
test
jne
test
jne
lea
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
mov
test
jne
mov
push
lea
push
push
call
mov
add
mov
shl
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
mov
movl
mov
xor
cmp
mov
je
lea
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
mov
test
je
lea
push
push
push
call
mov
test
jne
pop
pop
mov
mov
add
ret
mov
call
mov
dec
test
je
inc
push
push
mov
mov
mov
lea
push
push
push
movl
call
mov
mov
test
jne
mov
push
lea
push
push
call
mov
lea
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
push
mov
mov
mov
movl
mov
lea
inc
push
mov
call
lea
push
mov
call
mov
test
je
mov
jmp
mov
lea
mov
movl
call
mov
dec
mov
jne
pop
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
push
mov
xor
cmp
je
mov
xor
cmp
jbe
push
mov
mov
cmp
je
lea
push
push
call
mov
cmp
jne
mov
inc
cmp
jb
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
pop
pop
pop
ret
nop
nop
push
push
mov
mov
push
call
xor
divl
mov
mov
mov
test
je
mov
test
je
mov
push
push
call
add
test
je
mov
test
jne
pop
xor
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
xor
mov
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
xor
mov
shr
divl
mov
mov
mov
test
je
mov
test
je
mov
cmp
je
mov
test
jne
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
mov
xor
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
lea
movl
push
call
mov
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
lea
movl
push
call
mov
call
pop
ret
nop
nop
nop
nop
add
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
push
call
mov
ret
push
push
mov
push
mov
sub
push
push
xor
xor
mov
lea
mov
push
mov
lea
push
lea
push
push
mov
movl
movl
call
mov
xor
lea
lea
rep
mov
xor
mov
mov
mov
lea
push
mov
push
push
mov
push
push
mov
mov
push
push
push
push
push
movl
movl
mov
call
test
jne
call
mov
push
push
push
push
push
push
call
add
lea
movl
call
pop
xor
pop
mov
mov
add
ret
mov
push
push
push
call
mov
mov
push
push
call
mov
push
call
mov
mov
mov
mov
movb
mov
lea
push
push
lea
push
push
push
add
lea
lea
push
mov
call
mov
lea
push
push
lea
call
push
mov
movb
call
lea
movb
call
test
jne
mov
pop
test
je
mov
push
add
jmp
mov
mov
test
je
push
add
mov
push
add
lea
movb
call
add
movl
call
add
pop
mov
pop
mov
add
ret
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
push
push
mov
cmp
je
cmp
je
lea
push
push
mov
call
cmp
jge
movw
mov
mov
mov
mov
push
lea
push
push
movb
call
add
lea
push
call
mov
cmp
je
push
lea
call
lea
push
push
push
call
add
lea
push
call
mov
cmp
je
push
lea
call
lea
push
push
push
call
add
lea
push
call
mov
cmp
je
push
lea
call
lea
push
push
push
call
add
lea
push
call
mov
push
call
add
test
je
push
lea
call
push
lea
call
mov
push
push
push
push
push
call
mov
add
mov
mov
lea
lea
push
push
push
lea
mov
mov
push
movb
call
call
add
mov
mov
push
push
push
push
push
call
add
cmp
jne
push
push
push
call
add
lea
movl
movb
call
lea
mov
call
lea
push
call
xor
jmp
cmp
je
push
push
push
call
mov
add
cmp
je
lea
movl
movb
call
lea
mov
call
lea
push
call
xor
jmp
push
lea
call
mov
lea
push
movb
call
lea
mov
movb
call
push
lea
call
mov
lea
push
movb
call
lea
mov
movb
call
addl
je
cmp
jne
push
push
push
call
add
addl
je
cmp
je
push
push
push
push
push
push
call
add
lea
push
call
mov
lea
mov
add
call
sub
lea
push
push
push
lea
call
mov
movb
push
push
push
push
push
call
mov
mov
add
lea
push
add
cmp
jge
mov
push
movw
call
cmp
mov
jne
cmp
je
movw
movl
push
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movb
mov
call
lea
movb
call
lea
mov
call
lea
push
add
xor
jmp
mov
lea
movb
movl
call
lea
mov
call
lea
push
call
xor
jmp
push
push
push
push
push
push
call
add
mov
mov
pop
pop
pop
mov
pop
add
ja
inc
add
nop
nop
mov
push
push
push
mov
sub
push
push
mov
gs
add
push
jne
mov
jmp
mov
mov
jmp
inc
add
setne
push
push
push
push
push
push
call
mov
add
mov
push
lea
push
push
mov
loop
inc
add
add
lea
push
call
cmp
je
push
jmp
addl
jne
push
jmp
push
lea
call
lea
push
push
push
call
add
push
lea
call
mov
push
push
push
push
push
call
mov
add
mov
mov
jl
inc
add
push
push
lea
mov
mov
push
movb
call
call
add
mov
mov
push
push
push
push
push
call
add
cmp
jne
push
push
push
call
add
movl
jmp
mov
cmp
je
push
push
push
call
mov
add
cmp
jne
push
push
push
push
push
call
mov
add
cmp
jbe
push
push
push
push
push
call
mov
add
mov
lea
xchg
inc
add
lods
add
lea
movl
call
xor
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
call
push
call
push
call
add
test
je
push
call
mov
mov
push
push
push
call
push
mov
call
add
test
je
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
movl
call
mov
add
adc
add
call
mov
test
jne
push
push
push
push
call
add
pop
ret
push
mov
push
add
test
jne
push
add
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
mov
sbb
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
push
push
call
mov
xor
add
mov
cmp
je
mov
jmp
or
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
push
push
push
push
call
mov
xor
lea
mov
rep
mov
lea
rep
mov
lea
movl
add
rep
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jle
mov
mov
mov
mov
jmp
mov
mov
lea
cmp
jle
mov
movl
jmp
mov
mov
add
add
cmp
jle
mov
movl
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
lea
push
push
call
lea
mov
push
call
add
cmp
jb
push
push
push
call
add
lea
push
call
add
cmp
jb
push
push
push
call
add
mov
lea
push
push
call
mov
lea
push
push
call
mov
add
cmp
je
mov
mov
mov
mov
pop
pop
mov
pop
pop
add
ret
lea
lea
push
push
call
lea
mov
push
call
add
cmp
jb
push
push
push
call
add
lea
push
call
add
cmp
jb
push
push
push
call
add
mov
lea
push
push
call
mov
lea
push
push
call
mov
add
cmp
je
mov
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
mov
push
xor
cmp
push
mov
jb
aad
inc
add
cmp
jb
mov
cmpw
jne
cmpw
je
add
inc
cmp
jbe
or
jmp
add
lea
push
call
mov
lea
mov
mov
shr
rep
mov
and
rep
mov
lea
lea
push
push
mov
call
test
jl
cmpl
jb
mov
lea
cmp
mov
ja
mov
lea
cmpw
jne
cmpw
je
add
inc
add
cmp
jbe
or
jmp
add
lea
mov
sub
push
call
mov
lea
mov
mov
lea
shr
rep
mov
and
rep
mov
lea
lea
push
push
mov
call
test
jl
cmpl
jb
mov
lea
cmp
mov
ja
mov
lea
cmpw
jne
cmpw
je
add
inc
add
cmp
jbe
or
jmp
add
lea
mov
sub
push
call
mov
lea
mov
mov
lea
shr
rep
mov
and
rep
mov
lea
lea
push
push
mov
call
test
jge
mov
push
push
push
push
push
call
add
lea
call
lea
call
lea
call
pop
pop
movl
movl
pop
or
pop
ret
mov
lea
cmp
je
push
push
push
call
add
mov
cmp
jb
cmp
jb
lea
push
mov
call
lea
push
push
mov
call
cmpl
jb
lea
lea
push
push
mov
call
cmpl
jb
lea
lea
push
push
mov
call
lea
lea
push
push
mov
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
mov
mov
mov
push
push
mov
mov
xor
lea
mov
lea
push
call
mov
mov
cmp
je
push
push
call
add
test
je
sub
sar
jmp
push
call
add
mov
lea
mov
mov
mov
mov
shr
rep
mov
lea
and
rep
mov
mov
add
mov
add
lea
mov
push
lea
push
mov
push
xor
push
push
mov
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
push
lea
push
push
lea
push
push
movb
movw
call
mov
mov
add
movb
mov
lea
mov
mov
shr
rep
mov
and
rep
mov
mov
add
mov
add
mov
mov
lea
call
xor
jmp
push
push
push
push
jne
inc
add
push
les
dec
cmp
adc
push
mov
mov
mov
inc
add
mov
mov
call
lea
add
cmp
jne
mov
mov
mov
mov
mov
mov
inc
add
mov
mov
push
mov
call
mov
mov
shl
mov
mov
shr
rep
mov
movl
and
rep
lea
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
lea
mov
call
mov
mov
xor
dec
test
movl
jle
mov
test
jne
cmp
je
test
jne
add
inc
add
cmp
jl
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
push
mov
push
push
mov
push
lea
mov
call
mov
mov
xor
cmp
mov
jne
mov
jmp
lea
cmp
jle
mov
cmpw
jne
cmp
je
inc
add
cmp
jl
jmp
lea
test
je
lea
push
mov
call
lea
mov
push
call
sub
sar
mov
mov
sub
lea
dec
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
add
lea
lea
mov
shr
rep
mov
and
rep
lea
movl
call
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
mov
xor
lea
lea
rep
mov
mov
push
push
movl
mov
mov
call
add
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
call
mov
xor
lea
push
rep
lea
movl
push
call
mov
add
test
jge
push
push
push
push
call
add
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
call
mov
xor
lea
push
rep
lea
movl
push
call
mov
add
test
jge
push
push
push
push
call
add
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
mov
xor
lea
push
rep
mov
lea
mov
inc
add
push
rep
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
push
push
movl
mov
je
inc
add
mov
add
test
jge
push
push
push
push
call
add
mov
pop
pop
add
ret
mov
lea
push
push
push
call
lea
push
call
mov
lea
inc
push
lea
push
call
lea
push
call
lea
lea
push
lea
push
call
lea
push
call
add
add
movw
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
mov
xor
lea
push
push
rep
push
call
lea
mov
push
push
mov
call
mov
add
test
jge
push
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
mov
test
je
add
cmp
ja
mov
xor
lea
lea
rep
mov
push
push
call
add
lea
push
push
call
add
lea
push
call
push
call
add
lea
push
push
push
push
push
push
call
mov
test
jne
lea
push
push
push
push
jmp
call
cmp
jne
push
call
lea
push
push
push
push
push
call
add
or
pop
pop
pop
pop
add
ret
push
mov
xor
lea
push
push
rep
push
call
lea
lea
push
push
mov
mov
call
mov
add
test
jge
push
call
push
push
push
push
call
add
or
pop
pop
pop
pop
add
ret
jne
push
call
pop
pop
pop
xor
pop
add
ret
push
push
push
push
push
call
mov
mov
mov
mov
shr
rep
mov
push
and
rep
call
push
call
pop
mov
pop
pop
pop
add
ret
mov
test
je
mov
push
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
mov
test
jne
push
push
call
add
test
jne
or
jmp
push
push
call
add
test
jne
or
jmp
push
push
call
add
test
jne
or
jmp
push
push
call
add
test
jne
or
jmp
or
mov
mov
lea
mov
mov
push
push
push
call
mov
add
push
lea
call
push
push
mov
push
push
call
add
lea
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
sub
mov
je
dec
jne
lea
push
push
push
call
add
test
mov
jne
mov
mov
push
push
push
push
push
push
jmp
lea
push
push
push
call
add
test
mov
jne
mov
mov
push
push
push
push
push
push
push
call
mov
add
pop
ret
nop
sub
mov
push
push
mov
lea
push
push
push
push
mov
movl
movl
movl
call
test
je
push
push
push
push
push
call
add
xor
pop
pop
pop
add
ret
mov
mov
mov
lea
push
lea
push
push
push
push
push
add
test
jne
cmpl
jne
mov
test
je
mov
lea
push
lea
push
push
push
push
push
add
test
jne
cmpl
jne
mov
push
call
pop
pop
mov
pop
add
ret
mov
push
call
mov
pop
mov
pop
xor
pop
add
ret
mov
push
call
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
push
push
call
add
mov
call
test
jne
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
call
add
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
push
push
push
call
mov
add
mov
xor
push
lea
mov
mov
call
mov
push
lea
mov
mov
call
push
push
push
push
push
push
movb
call
add
lea
mov
push
push
push
push
push
call
cmp
jne
mov
xor
cmp
je
push
call
mov
mov
push
lea
call
push
lea
push
push
lea
call
push
lea
movb
call
lea
movb
call
mov
cmp
mov
jne
lea
push
push
mov
mov
push
call
lea
call
cmp
je
push
lea
call
lea
push
push
mov
mov
push
call
lea
call
cmp
je
movl
jmp
cmp
je
mov
mov
push
push
push
push
call
add
lea
movb
call
mov
movl
cmp
je
push
call
mov
push
lea
call
lea
movl
call
mov
pop
pop
mov
pop
add
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
movl
test
je
push
call
movl
add
push
mov
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
lea
movl
call
mov
movl
lea
cmp
ja
add
push
jmp
push
jmp
push
jmp
push
jmp
push
push
push
push
push
call
add
push
lea
call
mov
push
push
lea
call
mov
lea
push
mov
call
movl
lea
movb
call
mov
mov
pop
mov
add
ret
in
fadds
inc
repz
inc
cli
fadds
inc
add
add
nop
nop
nop
sub
mov
lea
push
push
lea
push
mov
push
mov
push
push
push
movl
movl
call
lea
mov
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
mov
xor
mov
mov
mov
mov
call
mov
lea
push
mov
lea
push
push
push
mov
push
push
add
mov
test
jne
insl
cli
inc
add
cmp
je
cmp
jne
mov
test
je
add
mov
push
mov
call
lea
lea
push
mov
push
mov
push
push
push
push
add
mov
mov
shr
push
mov
call
lea
movl
call
mov
jmp
lea
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
xor
push
mov
call
test
jne
mov
push
push
push
push
push
call
add
jmp
mov
mov
mov
push
lea
mov
mov
call
push
push
push
push
mov
push
push
mov
call
add
lea
mov
push
push
push
push
push
call
cmp
jne
mov
xor
cmp
je
push
call
mov
mov
push
lea
call
push
lea
push
push
lea
call
push
lea
movb
call
lea
mov
call
mov
cmp
mov
jne
lea
push
push
mov
mov
push
call
lea
call
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
jne
lea
lea
push
push
push
push
push
call
add
test
je
mov
push
mov
call
push
call
add
test
je
push
push
push
push
push
call
add
mov
movl
cmp
je
jmp
call
push
push
push
push
push
push
call
add
xor
mov
xor
lea
mov
rep
mov
lea
mov
push
mov
call
mov
push
push
push
push
push
call
add
lea
lea
mov
push
push
push
push
push
push
push
push
push
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
call
add
jmp
mov
push
push
push
push
push
push
call
mov
add
sbb
fidivs
push
and
push
push
call
mov
push
call
mov
push
call
cmp
je
push
push
push
push
push
push
call
add
mov
movl
cmp
je
push
call
mov
push
lea
call
lea
movl
call
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
movw
movw
mov
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
movw
movw
movw
mov
mov
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
movw
movw
mov
mov
movb
mov
ret
nop
nop
nop
nop
mov
push
push
mov
lea
mov
rep
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
push
lea
mov
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
mov
cmp
jb
mov
mov
mov
cmp
je
push
push
push
push
push
push
call
add
mov
xor
mov
mov
mov
lea
mov
mov
rep
push
stos
mov
test
je
mov
mov
mov
shr
rep
mov
and
rep
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
pop
mov
pop
pop
ret
movl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
push
call
mov
mov
add
push
call
mov
push
push
push
push
push
call
mov
add
add
push
push
push
add
mov
test
jne
call
push
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
push
call
mov
push
add
test
jne
call
push
push
push
push
push
call
add
mov
push
push
push
add
mov
test
je
push
push
push
push
call
mov
add
push
push
call
push
mov
add
test
jne
call
push
push
push
push
push
call
add
test
jne
push
push
push
push
call
mov
add
mov
cmp
jg
je
mov
push
push
push
call
mov
test
jne
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
addl
je
push
push
push
push
call
add
jmp
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
push
push
push
jmp
mov
mov
push
push
push
add
mov
test
jne
push
push
push
push
call
add
adc
pop
pop
pop
pop
mov
mov
add
ret
push
push
push
push
push
call
add
push
call
push
add
test
jne
call
push
push
push
push
push
call
add
push
push
push
push
push
call
mov
add
add
mov
mov
call
mov
mov
mov
test
je
mov
push
push
call
add
push
push
push
push
call
mov
add
push
push
push
add
mov
test
jne
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
mov
mov
lea
push
push
movl
call
push
push
lea
push
push
call
lea
movl
mov
movl
add
mov
push
lea
push
push
call
add
add
lea
push
push
push
push
call
mov
test
jne
call
push
push
push
push
push
call
add
push
add
test
jne
push
push
push
push
call
add
movl
jmp
push
call
push
add
test
jne
push
push
push
push
call
add
push
push
push
push
call
mov
add
push
push
call
push
mov
add
test
jne
call
push
push
push
push
push
call
add
or
cmp
je
test
je
cmp
je
lea
mov
call
pop
pop
pop
mov
pop
mov
mov
add
ret
push
push
push
push
call
add
lea
mov
call
pop
pop
pop
mov
pop
mov
mov
add
ret
push
push
push
push
call
mov
mov
add
mov
test
je
push
push
push
push
push
call
add
push
push
push
push
push
call
mov
add
mov
push
push
push
push
push
call
mov
push
push
call
add
push
push
push
push
call
mov
add
push
push
push
call
mov
test
jne
push
push
push
push
call
add
mov
lea
call
pop
pop
pop
mov
pop
mov
mov
add
ret
push
call
push
add
test
jne
call
push
push
push
push
push
call
add
lea
mov
call
mov
pop
pop
pop
pop
mov
mov
add
ret
push
push
push
push
call
add
lea
mov
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
push
push
push
push
mov
push
push
call
push
push
push
push
call
mov
movl
mov
movl
call
test
jne
push
push
push
push
call
add
lea
push
call
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
push
push
push
push
call
mov
add
push
push
push
push
add
mov
mov
test
mov
jne
add
push
push
push
push
push
call
add
jmp
push
call
test
jne
push
push
push
push
call
mov
add
push
jmp
mov
push
push
call
test
jne
add
push
push
push
push
push
call
mov
add
push
call
movl
push
call
mov
push
push
push
mov
mov
push
movl
mov
movl
call
mov
add
adc
add
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
ljmp
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
add
cmp
jne
push
push
push
push
call
add
lea
push
cmp
inc
add
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
push
push
push
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
in
inc
add
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
push
push
push
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
mov
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
push
push
push
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
add
add
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
mov
movl
mov
test
je
mov
movl
mov
mov
pop
pop
movl
pop
movl
mov
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
mov
mov
sub
cmp
jne
push
push
push
push
movl
call
lea
lea
push
mov
lea
push
push
push
call
mov
lea
add
mov
mov
add
push
call
mov
lea
push
add
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
add
ret
cmp
jne
cmpl
jne
push
push
push
push
call
add
call
mov
mov
mov
mov
add
ret
push
push
push
push
call
mov
mov
push
push
call
mov
add
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
mov
add
movl
mov
test
jne
push
push
push
call
mov
add
test
je
mov
add
push
call
mov
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
mov
add
movl
mov
test
jne
push
push
push
call
mov
add
test
je
call
mov
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
add
call
mov
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
mov
add
mov
cmp
ja
xor
mov
add
mov
jmp
mov
jmp
mov
jmp
mov
lea
push
push
lea
push
lea
push
push
lea
lea
push
lea
push
add
push
push
push
lea
call
inc
add
dec
and
movl
mov
push
call
lea
push
push
lea
call
mov
movb
push
push
push
push
push
call
add
lea
movb
call
push
push
push
lea
push
push
call
push
push
push
lea
push
push
movb
call
mov
movb
test
je
lea
lea
push
push
push
lea
push
push
call
mov
mov
mov
mov
test
jne
push
push
push
push
call
add
lea
lea
push
call
mov
mov
add
push
push
call
add
lea
call
lea
lea
push
call
mov
push
mov
add
push
call
add
lea
call
lea
push
lea
call
mov
mov
add
push
push
call
add
lea
call
push
push
lea
push
push
movb
call
push
push
lea
push
push
movb
call
lea
movl
call
mov
mov
add
ret
movl
mov
mov
add
ret
lea
shl
add
lock
lock
lock
add
add
add
push
adc
add
xor
sub
add
add
adcb
or
or
add
sbb
testb
add
xorb
add
pop
xor
xor
or
push
add
xorb
add
xor
and
cmp
cmp
cmp
dec
add
jae
outsl
add
add
add
add
add
xor
xor
push
add
sbb
ret
in
ret
aaa
pop
dec
in
jecxz
les
lsl
adcb
xor
add
add
add
add
cmp
scas
sahf
hlt
nop
out
mov
pop
aad
or
dec
xchg
or
add
push
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
pop
or
xor
xor
pop
pop
or
xor
xor
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
add
add
sub
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
outsb
gs
sub
sbbl
testl
add
orl
adc
sub
dec
pop
das
dec
xchg
imul
xor
bound
push
xor
ret
sbb
les
divb
fstps
scas
mov
jbe
icebp
test
imul
dec
dec
sub
pop
in
sub
subb
sub
stos
mov
xchg
push
out
loopew
ret
sahf
pusha
cmp
loop
push
mov
jnp
sub
add
shll
push
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
add
adc
add
add
xor
xor
push
add
pop
add
xor
xor
mov
and
or
add
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
je
jae
arpl
arpl
xor
push
add
and
or
or
or
push
add
xor
push
add
sgdtl
add
add
push
shlb
push
add
adc
xor
xor
xor
add
push
push
push
inc
xor
or
xchg
testl
add
push
lds
and
or
mov
inc
add
aaa
or
pop
popa
mov
add
xchg
xchg
mov
sbb
jmp
mov
ss
cwtl
dec
in
mov
inc
sbb
lea
cli
aad
add
xor
mov
daa
repnz
dec
add
dec
cmpl
push
loopne
loopne
xchg
movsb
xchg
sahf
pop
or
loop
mov
pusha
loope
lods
sub
movsl
dec
fs
sbb
lods
cmp
aad
and
lcall
inc
or
mov
sbb
mov
jmp
repnz
inc
add
push
push
mov
ds
jb
mov
sahf
sub
mov
cmp
cli
inc
add
sbbl
push
hlt
sbb
sti
cmc
lods
xchg
mov
push
andb
sub
add
jmp
js
roll
pop
mov
xor
add
add
adc
sbb
inc
neg
insl
dec
or
push
or
xchg
testl
xor
xor
push
add
push
adc
pop
inc
xor
push
add
adc
gs
gs
and
jo
xor
adc
add
pop
adc
inc
jne
bound
jbe
insb
insb
xor
xor
or
push
push
push
xor
push
add
adc
push
and
jb
imul
outsl
outsb
xor
xor
add
push
push
push
and
gs
popa
insl
jo
outsb
and
xor
pop
or
xor
xor
xor
xor
or
xor
xor
xor
xor
or
or
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
push
or
xchg
testl
xor
add
add
int
scas
or
lods
xchg
mov
icebp
ffreep
movswl
mov
mov
test
mov
mov
imul
sahf
movswl
in
js
ja
jle
cmp
xchg
scas
or
inc
add
cmp
pop
sbb
lahf
cli
das
imul
mull
add
jg
push
jecxz
pusha
in
inc
sbb
mov
mov
xchg
add
and
xor
push
sub
xchg
adc
dec
std
inc
add
mov
mov
push
outsl
jne
cmp
xchg
adc
push
rorl
inc
dec
fnstsw
jl
ds
rcrl
js
lahf
xor
icebp
out
sbb
les
pop
mov
cmc
out
jl
jge
bound
cmc
dec
or
shlb
push
test
int
mov
out
mov
fldenv
inc
add
add
add
mov
fdivs
xor
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
push
add
adc
add
add
xor
add
add
add
xor
add
pop
add
xor
xor
mov
xor
pop
inc
add
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
push
push
push
imul
jo
outsb
addr16
inc
arpl
xor
push
add
and
push
or
push
add
xor
push
add
sgdtl
add
add
add
xor
add
adc
xor
xor
push
add
adc
push
inc
xor
xor
sub
xor
dec
xchg
or
add
addl
sbb
mov
sub
sbb
int
mov
fisttps
sub
adc
add
or
add
mov
leave
xchg
dec
lcall
aaa
and
xor
mov
call
push
xchg
dec
and
test
mov
inc
repz
out
fstps
mov
popf
mov
loope
add
iret
or
lock
sub
cmp
sbb
daa
idivl
dec
xor
add
add
adc
xor
lret
in
xor
repnz
xor
dec
xchg
or
add
xorl
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
or
push
push
gs
push
imul
jae
and
je
outsl
jb
xor
xor
push
add
or
xor
insl
jae
outsl
data16
and
and
add
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
jb
popa
and
arpl
xor
xor
xor
push
add
add
daa
push
gs
push
imul
jae
and
and
fs
outsb
imul
cmp
xor
pop
or
xor
xor
pop
pop
or
xor
xor
xor
xor
or
add
push
adc
push
push
xor
xor
push
add
or
or
jae
rcl
inc
add
xor
xor
add
or
xor
xor
add
or
xor
je
insb
and
and
popa
jae
and
and
jb
jae
data16
push
outsl
data16
popa
jb
and
insb
imul
jbe
xor
xor
add
add
xor
or
xchg
testl
add
orl
xchg
cmp
leave
mov
mov
sub
pop
push
xchg
dec
jl
daa
and
pop
shrb
xor
mov
nop
lea
pushf
cmpsl
je
jne
fcomps
sbb
inc
dec
pop
lods
test
dec
push
hlt
sub
sbbb
pop
inc
or
inc
xchg
sub
test
std
and
adc
push
cmp
add
add
pop
dec
movsl
lret
orb
int
push
js
cwtl
jmp
add
addb
xor
push
add
adc
xor
xor
push
add
sgdtl
add
add
pop
xorb
push
add
pop
add
xor
xor
mov
xor
add
das
arpl
xor
sub
insb
jbe,pn
jb
jae
outsb
arpl
das
inc
push
inc
xor
sub
insb
xor
push
sbb
cmp
cmp
or
dec
add
pop
add
sub
sub
or
push
add
push
sbb
inc
add
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
jb
popa
xor
push
add
and
push
or
push
add
xor
or
push
add
add
xor
and
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
push
or
push
add
xchg
push
das
das
arpl
xor
sub
popa
jbe,pn
jb
jae
outsb
arpl
das
inc
push
inc
xor
sub
jb
pop
push
add
and
xor
adcb
imul
clc
inc
add
mov
push
or
dec
add
add
add
add
xor
push
or
push
add
xorb
add
add
xor
add
add
add
xor
dec
xchg
or
add
addb
add
push
xchg
hlt
in
sbb
cmpsb
jecxz
xlat
js
jae
sbb
cmp
icebp
pushf
dec
xor
fimull
jne
push
inc
xchg
int3
stos
or
xchg
fists
scas
inc
movsl
or
cmp
imul
dec
add
mov
inc
fsts
test
push
mov
xor
cmp
cmp
ja
add
xchg
or
mov
fwait
xor
xor
int
mov
lea
sbb
stos
out
mov
sub
mov
add
inc
out
adc
push
dec
inc
adc
int
stc
orb
hlt
and
mov
int
jno
mov
ss
adc
loop
mov
cmp
mov
sub
es
mov
mov
and
xor
jp
jne
adc
adc
divb
inc
popf
add
shll
xor
add
mov
add
gs
es
cs
pop
movaps
xor
dec
xchg
or
add
pop
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
or
cs
insb
popa
jae
and
and
bound
and
imul
gs
imul
outsl
outsb
and
je
add
inc
add
push
pop
or
xor
xor
xor
xor
pop
pop
or
xor
xor
xor
xor
or
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
or
push
push
gs
push
imul
jae
and
je
outsl
jb
xor
xor
push
add
or
xor
insl
jae
outsl
data16
and
and
or
add
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
jb
popa
and
arpl
xor
xor
xor
push
add
add
daa
push
gs
push
imul
jae
and
and
fs
outsb
imul
cmp
xor
push
or
xchg
testl
xor
add
add
stos
adc
push
pop
jl
leave
pop
xchg
jno
mov
mov
and
dec
sti
shlb
mov
cmp
pop
or
cld
adc
pop
mov
and
jnp
hlt
add
rolb
je
addr16
dec
push
in
andl
adc
adc
xor
sub
inc
mov
mov
dec
mov
push
nop
loope
negb
data16
mov
inc
add
pusha
dec
sahf
xlat
stos
adc
test
xor
adc
push
mov
loopne
sbb
add
mov
pop
mov
adc
xor
dec
cmpsl
into
leave
pop
and
outsb
jl
mov
xchg
mov
mov
sub
and
in
pusha
js
jnp
cmp
or
or
inc
and
add
add
add
addb
xor
push
add
adc
add
add
xor
add
add
add
xor
add
and
xor
gs
or
dec
add
pop
add
push
xor
push
or
push
add
push
sbb
add
inc
add
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
arpl
xor
push
or
push
add
xor
sbb
mov
inc
add
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
jb
popa
xor
push
add
sgdtl
add
add
add
xor
or
push
add
add
xor
sbb
xor
push
push
or
popa
addr16
imul
pop
push
add
sbb
in
sbb
ret
iret
subb
sbb
sbb
xor
testl
outsl
jbe,pn
jb
jae
outsb
arpl
das
jbe
insb
outsl
outsl
imul
sbb
adc
or
push
add
push
or
push
add
xor
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
push
add
pop
add
xor
xor
mov
and
or
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
jo
popa
xor
arpl
xor
push
add
adc
xor
movsb
push
xor
sbb
sbb
add
add
adc
popa
jae
xor
xor
xor
sub
xor
push
add
add
xchg
shrb
es
mov
sub
mov
push
or
xchg
testl
add
fadds
popa
imul
jle
mull
in
jae
add
add
pushf
mov
jmp
lret
jb
push
mov
adc
subl
in
push
push
aaa
xor
movsl
sub
sbb
mov
cli
addr16
gs
jp
cmp
adc
js
jbe
xrelease
punpcklbw
mov
popf
testb
loope
in
dec
movsl
cmp
fiadds
push
pop
rdtsc
addb
xor
add
or
or
or
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
or
push
push
gs
push
imul
jae
and
je
outsl
jb
xor
xor
push
add
or
xor
insl
jae
outsl
data16
and
and
in
inc
add
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
jb
popa
and
arpl
xor
xor
xor
push
add
add
daa
push
gs
push
imul
jae
and
and
fs
outsb
imul
cmp
add
jnp
xor
lret
in
xor
repnz
xor
push
add
sbb
xor
push
or
xchg
testl
push
add
xorb
add
sbb
or
push
add
xorb
add
xor
xor
or
push
add
xorb
add
sub
add
add
push
add
mov
aas
cmpsb
daa
out
mov
inc
cmc
lock
or
push
add
xorb
add
cmp
mov
push
add
add
insl
add
add
js
mov
je
jo
das
das
ja
ja
jae
gs
insl
jo
ja
jb
fs
and
or
dec
xchg
or
add
xorb
lcall
and
jp
push
xor
jecxz
call
jno
xchg
xchg
pop
mov
iret
xlat
and
inc
stc
adc
or
dec
pop
aad
cmp
sahf
push
jp
cmp
pop
dec
cmp
sub
out
add
ljmp
sub
lock
scas
jg
jmp
in
jne
sub
jle
adc
mov
popf
mov
mov
addb
push
or
xchg
testl
addb
das
xlat
inc
add
push
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
add
cmp
scas
sahf
hlt
nop
out
mov
pop
aad
or
add
sbb
sbb
or
xchg
testl
xchg
testl
xchg
testl
xor
xor
xor
xor
xor
xor
and
or
xchg
testl
jb
sub
sbbl
popf
lea
fdivl
sub
add
add
push
dec
push
repnz
loope
add
shll
test
test
pop
lods
aaa
jecxz
xlat
xor
aad
xchg
inc
fdivrs
sbbb
mov
xlat
xor
in
sbb
add
xor
cmp
loop
or
pop
call
movsb
inc
adc
jle
xchg
cli
mov
cs
pop
cmp
inc
dec
mov
push
pop
cmp
adc
add
faddl
add
add
add
dec
xor
add
add
xor
add
add
add
xor
add
and
add
adc
add
add
add
hlt
xor
add
xor
add
xor
add
add
xorb
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
insb
xor
add
add
xor
add
add
add
add
lods
add
add
add
dec
sub
add
add
add
jl
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
jb
add
test
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
dec
sub
add
add
je
add
test
add
pushf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
xchg
add
add
int3
sub
add
sub
add
sub
add
sub
add
sub
add
ss
add
push
sub
add
je
add
test
add
cmpsb
sub
fiaddl
sub
add
hlt
sub
add
adc
add
sub
add
inc
add
push
add
jo
add
xchg
add
pushf
add
test
add
mov
add
shrb
add
add
fsubrs
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
cmp
add
sub
add
sbb
add
push
sub
add
daa
add
lods
sub
add
add
add
add
addb
add
or
add
add
add
js
add
fs
add
add
xchg
xor
add
add
cmp
add
xor
add
inc
xor
add
xorb
add
xor
add
repnz
push
push
call
mov
vmaxss
notb
xchg
add
aad
add
fdivrs
add
mulb
out
xchg
jo
cmpsl
idiv
lret
movsb
add
int3
add
add
mov
in
movb
add
jmp
iret
lods
mov
loopne
xchg
add
jecxz
popf
data16
pushf
add
call
add
incl
xchg
pop
xchg
push
push
add
fldt
push
mov
jl
sbbl
add
add
leave
add
add
test
cld
add
add
mov
pushf
mov
add
pushl
add
call
mov
js
add
call
in
add
push
push
push
push
push
push
push
push
push
call
incl
jmp
js
decl
addl
cmpsb
add
fiadds
hlt
ret
jp
xchg
add
incl
add
pop
lahf
push
add
incl
lcall
add
inc
xlat
loop
add
fwait
arpl
add
pushf
js
lcall
jno
add
out
testb
inc
adcl
in
fdivr
lcall
inc
call
push
push
call
sarl
add
fcomp
add
xchg
add
nop
add
pop
shll
insb
pushl
add
add
into
cli
add
pop
in
xchg
xchg
data16
mov
incl
hlt
add
sahf
cmpsl
add
pusha
addb
lds
mov
loopne
out
jmp
add
lcall
decl
push
push
push
push
call
incb
cmpsl
add
add
fildll
jnp
add
les
add
icebp
aam
cltd
add
in
mov
cmpsb
push
shr
mov
mov
aam
jge
jmp
jmp
decl
scas
mov
jmp
jbe
add
add
add
add
in
add
rcll
jmp
clc
push
call
push
push
call
je
xchg
nop
jo
add
push
arpl
add
add
lret
ljmp
ljmp
decl
mov
sti
add
add
lret
add
call
js
jno
xchg
mov
aad
add
lcall
call
lods
add
push
jb
add
sub
call
push
call
push
push
push
push
push
push
push
call
stos
add
add
sti
bound
scas
add
out
jle
add
fwait
jno
add
add
ja
add
insb
add
in
add
dec
add
xchg
jns
fwait
mov
out
pushf
add
add
pop
add
pushl
imul
mov
pushl
cmpsl
loop
mov
push
xchg
jmp
push
push
push
push
push
push
call
add
push
clc
pushl
xchg
add
add
mov
add
decl
add
mov
mov
add
pop
add
stos
std
add
roll
ficomps
add
lcall
jnp
mulb
decl
icebp
jae
addr16
add
icebp
arpl
add
inc
lcall
les
mov
sub
ret
push
push
push
push
call
xchg
add
mov
cmpsb
lods
add
popl
pop
pusha
mov
push
out
add
fwait
add
lods
lods
add
xchg
popf
movsl
add
std
sbbb
add
incl
mov
pop
add
hlt
lds
mov
xchg
aam
mov
lahf
ret
call
pusha
je
fadds
in
add
push
add
add
jl
add
mov
stos
add
mov
push
push
push
push
push
push
push
call
add
lea
lcall
ljmp
movsb
add
incl
mov
testb
aad
iret
je
add
fdivs
in
sahf
push
push
xchg
imul
push
rclb
test
cwtl
add
add
scas
out
fiaddl
ljmp
lcall
add
jmp
fiadds
jl
incl
jb
add
decl
call
add
call
lock
xchg
add
mov
xchg
test
pop
cmpsb
add
pop
push
clc
fcomps
xlat
add
add
add
mov
jne
ret
incl
add
add
fiadds
clc
ja
addr16
sub
add
test
add
add
decl
incl
add
add
aam
inc
add
add
add
in
add
add
push
call
xchg
jmp
push
divl
add
lret
mov
add
arpl
pop
add
mov
add
add
bound
call
cltd
jmp
loopne
leave
bound
fstpt
incl
js
mov
jmp
mov
lods
adcb
add
jbe
movsb
into
add
incl
add
add
popa
pushl
in
pop
decl
pushl
call
push
push
push
push
push
push
call
imul
cli
js
mov
lods
mov
incl
lret
pushl
popa
test
cli
pop
add
add
rolb
pop
shrl
leave
mov
pushl
int3
sti
lcall
pushf
add
test
popf
int3
out
add
add
add
shrb
iret
add
add
mov
cld
lcall
jmp
scas
jmp
scas
add
add
add
mov
in
in
pop
sbb
and
push
push
push
call
add
mov
incl
fstpl
mov
mov
cld
pushl
jns
xchg
add
push
mov
rclb
loop
mov
jmp
mov
cltd
mov
add
incl
lock
fidivl
decl
add
jmp
pop
clc
mov
add
stc
lret
add
jge
test
push
add
add
mov
sub
sub
push
push
add
add
push
or
not
add
ror
sub
not
add
pop
xor
add
rol
add
pop
pushl
push
push
push
push
push
call
incl
scas
in
lret
in
je
add
iret
push
add
test
cld
fwait
call
add
add
add
cmpsl
add
add
in
add
out
add
xchg
call
push
mov
into
jp
add
add
faddl
rcll
imul
data16
faddl
add
lcall
in
call
add
fadds
add
add
jno
add
xchg
xchg
call
into
xchg
add
mov
roll
mov
popf
aad
fildll
incl
add
lods
jns
push
scas
pop
add
add
js
pop
iret
add
add
stos
mov
mov
add
popf
mov
bound
push
incl
push
outsl
add
enter
add
mov
sub
lea
push
push
push
push
push
push
push
push
push
call
add
push
push
jmp
decl
pushl
jle
call
add
add
add
pop
add
add
out
decl
mov
lods
mov
jnp
js
jmp
fistpl
pop
mov
rolb
jecxz
jns
test
push
add
arpl
incl
add
incl
call
jne
push
push
push
push
push
call
add
hlt
insb
jae
add
mov
xchg
lret
mov
add
xchg
add
mov
incl
stc
add
mov
push
icebp
jge
add
stos
in
hlt
fadds
mov
popa
add
arpl
loope
mov
cwtl
mov
add
call
add
pushl
push
push
push
push
push
push
push
push
call
mov
add
jmp
ljmp
jno
call
pusha
mov
incl
add
cld
mov
push
lods
nop
mov
test
add
add
jae
mov
add
fsubl
add
mov
xchg
lret
decl
incl
mov
mov
popf
add
cmpsl
fdivr
call
in
fdivr
call
pushl
pushl
push
push
push
push
push
call
testl
add
xorb
jnp
add
call
mov
lret
add
add
add
les
call
stos
jnp
add
xchg
movb
incl
gs
test
call
mov
mov
add
enter
push
add
add
mov
add
incl
push
add
push
push
lea
inc
push
or
not
add
inc
rol
dec
sub
not
pop
rol
dec
not
pop
push
push
push
push
push
push
call
add
fisubs
lret
add
add
iret
mov
add
xchg
jae
jmp
jmp
add
incl
scas
je
mov
decl
fisubl
lock
add
test
out
add
xchg
mov
ret
cmpsb
add
jae
test
push
pushf
add
add
pushl
add
outsl
xorb
decl
pushl
call
push
push
push
push
push
push
push
call
jmp
testb
decl
incl
add
in
ret
js
jle
mov
add
add
nop
fsubs
addb
sti
in
pushl
add
mov
test
lcall
hlt
mov
pop
mov
pushl
mov
add
pop
and
add
cltd
arpl
mov
stos
jmp
in
loopne
inc
push
push
not
push
or
inc
add
dec
add
sub
sub
shl
pop
ror
add
pop
push
push
push
push
push
push
push
push
call
pop
in
add
jo
add
roll
push
jecxz
add
add
xchg
add
add
mov
mov
pop
in
jmp
add
test
xchg
add
scas
jne
popf
clc
incl
in
call
iret
add
jmp
pusha
add
stc
in
in
add
add
xchg
mov
call
mov
movsl
fmuls
push
push
push
push
push
push
push
push
push
push
push
call
in
add
movsb
lock
push
addb
enter
add
call
xchg
pop
add
js
push
repnz
jle
test
mov
dec
fs
roll
add
scas
insb
jb
fwait
add
add
add
add
add
incl
add
jns
insb
add
push
in
jne
lods
add
fstp
add
mov
mov
sub
call
mov
push
push
push
call
mov
call
lods
mov
jo
incl
pop
jmp
add
jo
popa
stos
push
in
mov
scas
incl
fiaddl
jnp
negl
lock
xchg
mov
add
test
push
roll
add
add
jno
out
push
dec
movsl
add
add
mov
lds
out
into
add
int3
test
push
mov
add
nop
xchg
push
ret
decl
call
push
push
push
push
push
push
push
push
call
add
pushl
jge
jmp
add
add
cmc
imul
fists
mov
add
ljmp
ljmp
add
incl
incl
call
add
jmp
add
lret
add
aad
int
addl
je
mov
in
fdivr
decl
call
add
add
add
incl
jb
fwait
popa
mov
loope
movsb
add
out
test
add
add
inc
pushl
push
add
add
pop
add
int
xlat
add
add
clc
mov
popa
add
les
cwtl
lods
add
sti
test
mov
roll
incl
xchg
push
rorl
add
incl
add
add
adc
add
sub
push
push
push
push
call
jle
iret
cld
add
mov
push
add
push
mov
jmp
push
add
pop
ret
xchg
divl
popf
call
stc
lcall
fildl
pop
add
add
push
add
pop
mov
data16
xchg
loop
jb
imul
pushl
in
fdivr
incl
ja
fs
inc
add
adc
push
push
push
push
push
push
call
add
cli
add
incl
xchg
call
mov
add
incl
aad
push
std
add
imul
add
mov
jmp
add
out
add
jb
test
sahf
pushf
pop
pop
gs
incl
fcmovnbe
add
incl
roll
sti
aam
cmp
pushl
in
fdivr
incl
jne
push
push
push
push
push
push
push
push
push
call
cwtl
mov
movsb
cld
add
add
je
loopne
add
xchg
jp
xchg
cli
jmp
int
mov
mov
mov
mov
add
mov
push
filds
mov
loop
ffreep
rorl
incl
add
add
jbe
mov
mov
int3
xchg
add
rcll
in
mov
in
fcoms
push
push
push
push
push
push
call
call
lcall
stos
out
in
add
std
add
add
incl
add
lds
ljmp
jno
add
cltd
popf
add
add
mov
out
add
add
mov
shr
mov
xchg
add
mov
jge
popa
add
pop
notb
mov
jae
decl
decl
pop
inc
add
push
push
push
push
push
call
lahf
jae
mov
mov
add
test
mov
add
lcall
jae
loopne
pop
add
jbe
incl
add
mov
pop
mov
mov
call
js
push
add
lock
pushf
sar
dec
incl
mov
mov
incl
movsl
testl
jl
incl
ljmp
push
push
push
push
push
push
push
call
xchg
mov
add
add
ljmp
jne
add
lcall
sar
call
bound
out
add
decl
add
add
out
add
add
mov
decl
jmp
fwait
add
les
jmp
push
mov
jae
xchg
mov
sub
add
push
push
push
push
call
icebp
lea
idivb
movsb
mov
mov
add
mov
incl
xchg
flds
ljmp
jne
clc
sar
mov
pop
add
stc
add
push
mov
add
lds
pop
add
mov
jo
ljmp
insb
cwtl
sti
jb
mov
sub
pop
push
push
push
push
push
push
call
addl
jnp
jmp
fnsetpm(287
rcl
popa
icebp
pop
cmpsl
data16
add
imul
add
ficomps
insb
mov
lcall
add
mov
add
mov
xchg
mov
push
in
jmp
mov
sub
mov
sub
push
push
push
push
push
push
push
push
push
call
push
lcall
xchg
jge
mov
add
mov
in
add
add
pop
add
dec
mov
jbe
add
mov
incl
pop
mov
int
jp
mul
cltd
mov
add
out
data16
add
call
add
add
call
add
jmp
add
imul
lock
mov
sub
mov
sub
sub
push
push
push
push
push
push
push
push
push
call
add
jbe
add
mov
add
jp
add
lcall
stc
add
loop
xchg
addl
add
imul
add
add
incl
xchg
xchg
fldl
lcall
add
mov
out
aam
mov
ljmp
addr16
add
mov
cltd
mov
sub
pop
rep
push
push
push
push
push
push
push
push
push
call
push
fiadds
push
add
mov
add
addr16
incl
pop
add
pushl
incl
scas
in
xchg
add
add
add
cltd
enter
ret
lods
std
pop
jo
cld
mov
lea
add
incl
add
jl
add
add
lcall
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
call
in
nop
nop
lds
add
jge
movsb
push
stos
add
out
jp
jge
scas
add
subl
sahf
add
mov
cmpsb
imul
add
notl
test
pop
mov
fstp
jnp
jbe
fwait
add
movb
add
int3
add
jle
pop
sti
filds
movsb
cli
outsl
add
jmp
pushf
lret
incl
add
add
push
push
push
push
push
push
push
call
add
shll
mov
out
imul
call
fiaddl
clc
mov
add
add
add
incl
jp
lds
incl
push
add
mov
add
ret
pop
push
add
pushf
pop
add
jbe
add
xchg
add
int3
mov
incl
mov
ljmp
stos
add
push
jp
aam
mov
sub
add
push
push
push
push
call
loopne
lahf
out
mov
add
mov
lcall
call
jmp
bound
lretw
incb
push
pop
jne
iret
xchg
ljmp
fsub
cmpsb
add
jae
push
add
cli
mov
xchg
mov
xchg
lea
xchg
scas
jl
ret
imul
pop
bound
add
add
cmpsb
popf
add
arpl
incl
add
mov
sub
push
push
call
mov
add
shlb
add
roll
jle
mov
scas
add
aam
js
pushl
add
incl
mov
add
add
sti
add
outsl
add
dec
pop
stos
add
jle
lahf
out
add
jo
add
mov
lods
cwtl
push
mov
add
incl
in
mov
leave
scas
mov
in
hlt
mov
push
push
push
push
push
push
call
xlat
add
mov
add
filds
xchg
add
call
pusha
push
incl
mov
jle
idivb
add
xchg
leave
add
lahf
add
clc
out
call
add
lcall
sahf
inc
add
mov
notb
push
jge
lcall
rorb
add
aad
jmp
add
incl
ja
mov
ja
add
aam
add
add
lcall
mov
add
lahf
movsl
push
add
mov
ljmp
add
mov
mov
jle
add
stos
fildl
hlt
scas
cltd
test
add
add
call
fdivrp
call
lods
jne
mov
xchg
dec
mov
out
movsb
lret
in
decl
decl
shrb
push
push
push
call
mov
js
jnp
movsb
pop
add
jmp
cmpsb
jle
test
add
out
in
xchg
enter
leave
les
jmp
jbe
pushl
incl
lcall
jne
test
jns
into
xlat
add
pushl
pop
mov
push
lret
jle
mov
hlt
popf
jnp
in
add
add
roll
add
sub
add
add
push
push
push
push
push
push
push
push
push
call
andl
add
pop
xchg
add
test
pop
pop
ja
movsb
add
jae
out
lea
add
mov
incl
popl
repnz
add
mov
data16
out
pusha
pushf
out
mov
sti
in
incl
add
add
add
pusha
fsub
mov
movsl
mov
incl
lahf
xchg
add
decl
decl
leave
int3
push
dec
ror
push
and
add
xor
ror
sub
sub
inc
pop
rol
ror
pop
push
push
push
push
push
push
push
push
call
jl
ja
test
fisubrl
ret
add
jmp
add
lds
out
call
lahf
add
add
add
fcmovu
popa
add
add
je
xchg
add
mov
mov
mov
cmpsb
mov
fiaddl
add
test
add
jo
mov
decl
pushl
call
push
push
push
shr
sub
push
xor
add
ror
sub
rol
lea
add
pop
shr
pop
push
push
call
jb
fsubr
hlt
fsub
aam
add
add
cmpl
jnp
xchg
test
ljmp
jle
incl
add
mov
incl
lcall
xchg
mov
incl
add
mov
sar
lcall
add
fildl
lods
lock
add
push
push
push
push
push
push
push
push
push
push
call
testl
mov
add
add
out
mov
roll
add
clc
incl
faddl
bound
arpl
pushf
xchg
mov
incl
call
add
jle
clc
ljmp
add
jmp
icebp
add
pop
insb
add
out
push
lret
inc
add
incl
ljmp
call
mov
push
push
push
push
push
push
push
call
xchg
data16
add
xchg
incl
jns
mov
add
add
xchg
pushf
add
addr16
incl
xchg
add
push
push
mov
pushl
incl
add
incl
mov
xchg
enter
jbe
mov
jmp
rolb
add
rclb
add
dec
incl
mov
sub
push
push
push
push
push
push
push
push
push
call
push
push
test
push
pop
mov
lods
lcall
add
jmp
pop
push
add
add
push
imul
xchg
jmp
add
mov
decl
add
mov
test
jmp
add
xchg
in
xchg
ljmp
push
js
mov
sub
push
mov
push
push
call
popf
add
lret
add
loope
mov
incl
xchg
add
in
mov
jmp
jle
jmp
jno
add
add
add
lods
out
arpl
add
incl
add
out
lcall
add
lret
pop
cltd
pop
cwtl
add
xchg
add
inc
jnp
add
addb
incl
mov
add
hlt
add
add
push
push
push
push
call
push
push
mov
xchg
add
in
incl
movsl
fstps
incl
incl
stc
pop
jmp
add
push
add
in
xchg
add
push
hlt
add
data16
add
xchg
add
add
test
ljmp
repnz
clc
iret
add
mov
add
add
xchg
mov
add
add
and
jl
add
push
mov
fmuls
incl
add
repz
push
call
in
out
xchg
xchg
add
js
pop
add
int3
mov
add
add
pop
pushl
lahf
jbe
mov
in
add
incl
add
repnz
stc
nop
cltd
jns
add
in
jmp
push
mov
iret
sti
add
movsb
pop
loope
iret
loopne
lret
incl
and
iret
ja
push
push
push
push
push
push
call
add
mov
add
mov
fldenv
add
cmpsl
jnp
call
add
out
mov
in
fs
stc
stc
mov
hlt
testb
push
arpl
add
jnp
add
call
lods
add
add
addb
sahf
cmp
in
in
imul
mov
sub
add
push
push
push
push
push
call
dec
mov
call
push
les
add
decl
imul
push
incl
mov
stos
aad
popf
ficompl
add
add
in
add
add
ljmp
int
mov
movsb
loop
pushl
je
fidivrs
pop
jmp
pushl
jo
rol
in
decl
call
push
call
add
cltd
stos
incl
pop
rclb
add
add
add
mov
add
call
mov
add
lcall
mov
out
mov
jne
decl
imul
test
js
xchg
sahf
lds
pushl
add
mov
sub
mov
push
push
call
leave
jecxz
enter
incl
add
lods
mov
xlat
jno
add
incl
subl
add
incl
add
stos
jb
add
add
call
out
loope
out
js
jmp
add
mov
in
out
xchg
test
mov
add
mov
incl
cmp
ja
push
push
push
push
push
push
push
call
jbe
jle
aad
mov
jmp
movsl
jecxz
testb
clc
add
jmp
call
cwtl
xchg
push
add
mov
lods
bound
call
shl
jno
incl
add
add
cli
add
mov
jne
fwait
mov
add
mov
incl
incl
lock
push
push
push
push
push
call
add
fisttpl
inc
pop
lea
add
ljmp
int
mov
call
jecxz
add
fnsave
add
pop
decl
fiadds
jl
jno
pushf
fisubl
add
add
clc
movsb
xchg
add
add
mov
mov
jne
pop
popf
addb
mov
call
dec
sub
ja
movsb
push
push
push
push
push
push
push
push
call
shll
jmp
cmpsb
loope
lcall
call
into
stos
outsl
decl
xlat
addr16
rclb
cwtl
cli
add
add
scas
ljmp
rolb
popf
in
pushl
stc
add
add
mov
popa
movsl
add
decl
mov
sub
push
push
push
push
push
call
into
sub
aam
add
add
pop
xchg
add
push
pushf
push
add
out
out
movsl
add
xchg
enter
gs
mov
add
cwtl
add
call
call
outsl
incl
enter
mov
rolb
add
incl
jae
push
jbe
mov
add
add
mull
add
mov
sub
or
je
mov
push
push
call
scas
add
decl
add
leave
popf
lret
lock
je
xchg
repnz
call
xorb
jae
incl
mov
ret
push
add
xchg
add
add
out
jmp
add
addr16
lock
push
lods
jge
add
fdivrp
decl
incl
pop
mov
jbe
mov
call
jo
call
add
hlt
sub
mov
sub
push
push
push
push
call
add
stc
addl
in
add
mov
add
dec
mov
jge
mov
push
pop
call
in
mov
add
incl
outsl
fadds
mov
fstpt
add
stos
push
fisubs
aad
push
add
sahf
test
incl
call
movsb
aad
call
incl
incl
repnz
push
push
call
jno
ja
jl
mov
mov
incl
jno
jnp
fldl
add
out
pushf
mov
fdivs
add
mov
int3
mov
add
incl
add
add
cld
rcrl
jo
mov
shrl
add
mov
jmp
mov
push
add
add
add
mov
push
push
push
push
call
push
leave
mov
loop
jo
mov
add
js
in
gs
add
add
jmp
push
incl
in
jecxz
into
out
jnp
insb
add
fdivs
add
add
xchg
leave
add
aad
fs
add
pop
mov
push
add
mov
add
fldcw
add
repnz
ljmp
cltd
scas
pop
fstps
xchg
mov
push
mov
sub
sub
push
push
call
loopne
into
fisubs
add
pop
enter
mov
imull
outsl
add
mov
incl
xlat
data16
jmp
std
xchg
add
jbe
imul
lcall
add
xchg
fdivp
add
data16
lock
add
jmp
add
add
xchg
lods
xchg
mov
sub
add
push
push
push
push
push
push
push
push
call
fadd
xchg
add
call
pushl
add
add
add
add
clc
push
movsl
sub
incl
add
enter
mov
call
call
pop
rolb
add
loop
cmc
les
add
add
clc
add
out
popl
sahf
add
ljmp
add
incl
call
cli
mov
sub
pop
rep
mov
push
call
xlat
add
rcll
add
pop
insb
cli
ljmp
jp
add
add
leave
add
add
jle
add
jmp
gs
mov
insb
add
jle
xchg
jmp
add
jns
incl
call
ja
in
rcll
dec
icebp
pusha
icebp
pop
mov
cltd
test
add
clc
incl
ja
call
jmp
loope
add
pop
jno
add
movl
pushf
cmpsb
mov
clc
pop
add
inc
addl
add
xlat
add
incl
std
xchg
add
mov
ljmp
incl
add
pushl
mov
xchg
in
aam
lds
push
pushl
add
test
fsubp
add
sub
or
je
mov
add
push
push
push
push
push
push
push
call
scas
cwtl
addl
add
fucomip
cwtl
incl
cmpsl
add
add
jae
xchg
js
int3
add
arpl
rcrl
add
add
add
add
add
cmc
int3
pushl
rolb
lahf
pop
jne
call
add
js
cld
mov
xchg
out
add
mov
mov
sub
add
rep
push
call
jo
call
scas
pusha
lcall
clc
mov
push
add
add
incl
lds
clc
xchg
lea
ja
add
add
mov
incl
mov
xchg
push
test
mov
add
scas
movsl
jb
add
bound
mov
incl
add
add
loope
decl
pop
push
push
push
or
inc
add
xor
sub
ror
not
inc
shr
pop
sub
dec
pop
pop
push
push
push
push
push
push
push
push
call
mov
add
int3
fdivr
lcall
pop
push
sti
pop
add
in
jp
push
add
cld
outsl
bound
fistpl
add
add
xchg
lods
scas
mov
xchg
in
jl
add
fisubl
jl
cmpb
sar
lcall
add
cmpsl
popa
xchg
addr16
mov
mov
mov
push
push
call
add
hlt
in
cld
shll
add
mov
add
add
incl
incl
incl
add
mov
add
fwait
xchg
mov
fucom
popf
mov
jns
jns
aad
push
incl
jnp
ljmp
in
out
aad
add
incl
mov
lcall
divb
mov
add
mov
add
hlt
jmp
push
push
push
call
test
push
leave
jne
pop
mov
pop
add
jns
pop
add
pop
cld
dec
lret
push
add
add
aam
movsl
push
rcl
clc
mov
test
mov
mov
add
add
add
mov
add
fadds
movsl
pop
scas
out
mov
add
push
add
lret
data16
mov
mov
scas
mov
sub
push
push
call
fcmovnbe
sar
incl
incl
add
jge
cmpsb
lcall
mul
add
mov
ficomps
add
jmp
call
add
pushl
rcrl
test
jnp
add
push
incl
add
in
cltd
add
incl
add
add
test
mov
push
push
push
push
push
push
push
call
jne
mov
incl
add
fcos
pushl
add
int
add
mov
decl
add
std
pusha
lcall
cmc
jno
shr
test
pop
fldcw
sti
add
add
xchg
movl
imull
fcomi
mov
add
in
ljmp
incl
call
push
push
push
push
push
push
call
test
xchg
incl
jnp
incl
scas
xchg
popa
mov
add
xchg
popa
mov
gs
bound
mov
sarb
cltd
add
pop
lcall
loop
jmp
add
add
pop
add
push
sub
pop
pushf
add
mov
cmpsl
loope
add
incl
mov
sub
mov
push
push
push
push
push
call
clc
add
add
mov
xchg
add
call
out
push
xchg
iret
add
pushl
cmpsb
bnd
stos
cli
add
lods
out
cmc
mov
incl
add
add
incl
xchg
stos
popf
stc
jp
add
mov
jae
movsl
push
add
fisttps
sub
push
push
push
push
push
push
push
push
push
call
pop
popa
int
xchg
mov
jb
ljmp
incl
mov
xchg
in
add
jmp
lods
pop
push
add
add
stos
mov
pushl
jl
mov
out
decl
mov
out
fisubrl
call
jecxz
test
cld
sahf
add
in
fdivr
incl
inc
or
inc
add
push
push
push
push
push
call
sar
xchg
cwtl
xchg
add
addr16
add
scas
add
stos
sar
incl
add
jb
incl
add
pushl
mov
add
hlt
add
incl
mov
add
xchg
iret
repnz
add
jmp
add
add
ljmp
add
pop
add
jmp
add
incl
ljmp
call
mov
push
push
push
push
call
bound
fidivrs
add
fs
mov
add
mov
insb
add
int3
aad
add
add
mov
add
lock
lock
mov
jmp
ljmp
add
in
sti
jle
stos
add
dec
add
aam
call
lret
pop
jo
add
pop
add
add
enter
mov
mov
sub
sub
add
push
push
push
push
push
push
push
call
add
aad
cmpsl
incb
incl
int
add
add
call
lcall
add
add
add
mov
add
decl
push
data16
add
pop
incl
mov
inc
arpl
add
in
xchg
mov
faddl
incl
in
mov
mov
sub
push
push
push
push
push
push
call
push
cli
mov
jecxz
divl
jp
incl
lock
push
mov
mov
add
roll
stc
add
mov
lea
stos
mov
incl
not
in
ja
std
jns
add
shll
add
incb
cwtl
add
xchg
repnz
mov
decl
mov
push
push
push
push
push
push
call
jge
aad
incl
add
out
clc
add
pusha
add
leave
pushl
movsb
sti
ret
mov
incl
jle
aam
lret
pushf
incl
mov
loop
cmpsl
mov
mov
mov
push
imul
mov
leave
subb
mov
sub
call
pop
push
push
push
push
push
push
push
call
pusha
mov
popl
add
out
add
aad
out
jmp
add
fsubrs
push
mov
mov
mov
xchg
add
stos
add
pop
pop
jnp
add
jle
cltd
testl
ror
fbstp
cli
add
mov
mov
incl
jmp
call
xchg
std
out
std
idiv
decl
lcall
push
push
call
mov
mov
pusha
jmp
mov
xchg
add
add
xchg
mov
xchg
add
adcl
repnz
call
add
xchg
loop
fildl
add
sti
mov
movsl
add
movsl
fadds
add
mov
ret
bound
pop
pop
jp
incl
push
push
push
push
push
push
call
repnz
test
out
test
add
incl
cwtl
scas
add
fisubl
push
jmp
add
incl
incl
pusha
call
jge
xchg
push
pushf
mov
xlat
lret
incl
pushl
imul
add
dec
sub
mov
int3
add
cwtl
ja
clc
add
loopne
ret
push
push
push
push
push
push
call
add
xchg
jle
add
mov
lahf
add
scas
testl
decb
mov
add
incl
jge
jmp
push
add
pop
lcall
fiaddl
ljmp
mov
fs
ljmp
mov
pop
int
decl
in
in
mov
push
push
push
call
cmpsb
push
hlt
lret
mov
jns
mov
jmp
push
add
in
add
test
xchg
jp
ljmp
test
int
frstor
test
mov
xchg
outsl
ja
add
pop
add
add
insb
call
push
add
mov
lods
push
lret
add
ljmp
incl
call
in
lock
call
push
push
push
call
addr16
inc
pop
xchg
iret
mov
push
mov
mov
iret
arpl
rcrb
jmp
add
add
add
add
add
out
clc
jnp
shrb
jmp
pop
add
incl
add
bound
pusha
add
push
lea
mov
movsb
loopne
add
mov
sub
push
mov
push
push
push
push
push
push
push
push
call
jecxz
push
fdivs
jmp
push
add
test
incl
scas
add
test
js
out
jl
jmp
adc
inc
lods
imul
inc
in
push
jno
add
jb
mov
xlat
in
loope
add
mov
add
aad
mov
add
add
rcrl
mov
insb
mov
sub
mov
push
push
call
mov
pop
jnp
aam
in
xchg
add
add
call
mov
fnstsw
push
push
arpl
incl
stc
cmpsl
push
mov
leave
add
fnstcw
jp
in
add
add
add
loopne
xchg
add
loop
fildl
addl
mov
add
out
incl
in
pop
call
incl
add
add
cmp
push
call
mov
fsubl
jbe
out
add
mov
mov
sti
add
jmp
incl
mov
test
loopne
mov
add
lret
mov
arpl
mov
add
fdivs
pop
fwait
add
movb
add
mov
call
pop
sti
xchg
fwait
in
add
push
xchg
add
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
nop
cmp
decl
cli
pop
jae
incl
mov
pop
arpl
fnstcw
add
flds
adc
mov
popa
shl
xlat
add
int3
add
add
lods
mov
call
cmpb
pop
jne
ja
stc
add
mov
jmp
add
mov
add
pop
clc
mov
sub
add
dec
jne
pop
push
push
push
push
push
call
pushl
add
add
mov
mov
add
mov
xchg
outsl
pop
add
ficompl
adcb
mov
imul
jnp
add
mov
incl
sahf
add
add
cltd
leave
jno
add
add
incb
mov
mov
mov
mov
incl
lcall
push
push
call
add
outsl
add
add
je
pushl
add
jae
lcall
loop
data16
lcall
lret
mov
xor
lock
popa
call
xchg
pop
add
cmp
add
add
in
push
insb
add
cwtl
push
add
lcall
iret
bound
add
mov
sub
pop
leave
push
push
push
push
push
push
push
call
pop
add
addb
mov
call
frstor
xchg
cmpsb
add
aad
loop
pop
push
mov
aam
add
xchg
leave
mov
ljmp
je
add
arpl
ljmp
add
scas
add
push
mov
lods
add
out
mov
mov
xchg
add
mov
movsb
rorl
add
inc
add
push
push
push
call
je
fcomps
incl
ret
mov
fdivr
out
popf
call
fnstcw
add
dec
mov
pop
pop
add
jbe
lods
stos
mov
push
ljmp
jbe
dec
iret
incl
lods
jbe
out
add
jb
mov
fldl
jbe
jnp
call
out
add
pop
incl
mov
xchg
call
mov
sub
push
mov
push
push
push
call
nop
addl
pop
in
fcmovu
add
icebp
add
fwait
stc
out
incl
mov
mov
popf
insb
jmp
push
add
mov
int3
bound
nop
add
scas
xlat
mov
mov
shrb
add
pop
out
cli
lcall
add
incl
mov
aad
mov
mov
clc
mov
sub
add
push
push
push
push
push
call
add
jns
rolb
jle
add
js
push
lcall
cmpsb
fldl
add
add
sahf
add
sti
push
xchg
add
mov
add
test
test
xchg
jnp
add
push
xchg
hlt
mov
imul
incl
pop
lea
cmpsl
add
sti
cmpl
imul
in
call
push
push
push
push
call
jmp
add
jmp
bound
rolb
add
call
jb
iret
mov
decl
jle
lods
add
int3
incl
incl
je
pushl
mov
cli
add
fwait
add
incl
testb
mov
scas
adc
int3
add
in
add
push
stc
mov
add
decl
push
push
mov
push
push
push
push
push
call
push
mov
add
xchg
fists
in
add
ficompl
add
add
incl
add
int3
xchg
pop
int3
sti
add
arpl
mov
add
mov
add
jnp
test
mov
mov
popa
insb
mov
ljmp
incl
add
incl
push
push
push
push
push
push
push
push
call
jmp
add
push
roll
call
mov
add
incb
shll
lds
add
add
mov
mov
add
jae
dec
cmc
add
add
incl
xchg
int3
add
loope
cmpsl
add
mov
add
add
pop
jno
mov
mov
out
mov
incl
jo
inc
add
or
add
pop
inc
add
push
push
push
push
push
call
mov
mov
mov
call
js
jne
add
add
add
fldl
jle
add
mov
inc
lahf
push
enter
add
je
mov
add
fldcw
movsb
lret
incb
pop
stc
jl
jge
jne
fwait
pop
mov
add
add
lcall
mov
sub
pop
pop
leave
push
push
push
push
push
push
push
call
add
ret
incl
lock
add
addb
push
aam
add
mov
jecxz
lcall
pop
ljmp
in
loopne
incl
jecxz
mov
std
jmp
add
pop
sahf
jo
gs
add
enter
scas
shl
pop
hlt
add
stos
roll
add
add
aad
loopne
ficompl
lcall
add
jmp
addr16
dec
decl
inc
or
push
push
push
push
push
push
push
push
push
call
frstor
data16
jnp
scas
mov
add
push
test
jns
add
mov
add
add
je
add
xchg
incl
flds
add
cld
fucomi
repnz
add
add
add
ljmp
add
lods
add
push
sar
pushl
jns
push
rcr
add
add
inc
leave
cmc
mov
fcoms
in
push
push
push
push
push
push
push
push
call
jmp
incl
xchg
call
add
ljmp
out
jecxz
imul
add
add
jmp
add
add
add
call
push
add
add
add
out
push
pop
pop
add
incl
add
in
add
add
add
incl
aam
xor
mov
sub
add
push
push
push
call
push
add
mov
out
mov
pop
add
mov
lcall
fildll
movsl
cli
mov
in
jns
rolb
xchg
incl
fildl
sti
ljmp
jne
add
fsubrp
loop
pop
add
mov
add
jge
add
mov
incl
mov
sub
push
push
push
push
xor
shr
pop
movl
addl
test
je
push
push
push
push
push
push
push
push
call
testl
insb
test
mov
pop
test
test
call
add
add
cmpsl
add
incl
jne
add
add
add
add
scas
add
jne
int3
add
add
push
xlat
movl
lcall
ljmp
test
movsb
sti
rorb
decl
test
pop
push
push
push
push
push
push
call
mov
incl
in
into
add
mov
shl
add
jmp
push
add
add
enter
mov
mov
add
add
add
cmpsb
add
fwait
mov
js
add
add
stos
xchg
cmc
mov
out
pop
add
push
ja
jbe
addr16
in
repnz
jmp
jl
stos
sti
adcb
fcompp
mov
sub
pop
pop
leave
push
sub
pop
ret
push
push
call
imul
jl
mov
fwait
loop
jecxz
int3
push
movsl
inc
roll
add
ficoml
add
movsb
jno
pop
mov
filds
lods
mov
push
add
xchg
mov
cmc
lcall
mov
lret
sar
jle
repnz
jne
mov
je
mov
pop
xlat
pusha
jecxz
lcall
cld
lahf
pop
add
add
add
in
hlt
push
mov
push
pop
add
push
push
add
rol
xor
pop
push
push
push
rol
sub
pop
push
push
push
push
push
push
push
push
call
icebp
mov
mov
add
add
cli
aam
push
add
add
add
jmp
pop
xchg
mov
stos
ljmp
ljmp
out
sti
push
add
lret
xchg
call
fldcw
pusha
jb
movsb
jb
test
pop
add
mov
sub
testl
push
call
pushf
add
loopne
mov
stos
add
ljmp
filds
int3
xchg
xlat
mov
idivl
adcb
mov
mov
mov
add
imul
out
clc
test
lods
cwtl
xlat
add
pop
out
int
xchg
mov
fildll
outsl
push
data16
iret
jo
add
clc
addl
push
push
push
push
call
xchg
rolb
push
add
add
add
fwait
add
mov
arpl
lods
cmpsl
jl
aad
push
add
incl
mov
rcrb
ljmp
xchg
mov
mov
jns
pop
add
aad
add
aad
jle
pushl
decl
in
hlt
add
roll
mov
cwtl
fsubrs
push
hlt
mov
sub
push
push
push
push
call
gs
jmp
add
pop
fst
sti
ljmp
imul
mov
xchg
mov
mov
add
incl
cmpsb
pop
iret
lock
in
repnz
test
add
lret
pop
incl
popf
aad
jae
add
fmul
mov
add
incl
call
mov
push
xor
pop
pushl
push
ror
shr
dec
pop
push
push
call
push
push
push
push
push
push
push
push
push
call
jmp
cmc
jb
lea
add
in
out
add
stos
add
add
add
pop
pop
out
imul
incl
leave
jae
arpl
cwtl
add
fbstp
icebp
add
flds
xchg
pop
mov
add
cmpsl
add
add
pushf
add
iret
add
mov
add
add
fwait
add
filds
add
add
decl
incl
test
std
call
push
push
push
push
call
mov
in
add
jo
jp
cli
add
jo
lcall
push
add
int3
add
add
fsubrp
add
add
add
cld
mov
incl
add
ljmp
loopne
push
ret
ljmp
xchg
fadds
in
iret
stos
jecxz
stc
push
add
roll
add
incl
add
fsts
mov
add
add
pop
push
push
push
push
push
push
push
call
pushl
fildl
out
js
add
decl
jmp
add
incl
mov
add
add
jle
sti
iret
add
add
test
cmpsl
mov
fisttpl
add
add
mov
ljmp
bound
push
mov
jbe
clc
mov
add
lret
add
lcall
shl
pop
pop
push
push
push
push
call
add
inc
add
jmp
ljmp
imul
xchg
fimull
xchg
jmp
loope
add
add
decl
add
incl
fs
clc
pop
popa
gs
add
lahf
shrb
aad
test
mov
mov
xchg
call
mov
pop
add
pushf
loop
incl
ljmp
jmp
add
incl
lcall
sub
pop
leave
ret
push
push
push
push
push
push
push
push
push
push
call
lods
in
fcmovb
mov
pushl
push
xlat
add
insb
orb
add
fwait
call
pushl
scas
lods
pop
add
fists
dec
pop
xchg
iret
cmc
xchg
add
lods
outsl
pop
jecxz
cltd
mov
leave
fistps
js
add
add
test
stc
add
decl
push
push
push
push
push
push
push
push
push
call
pop
ljmp
add
jmp
incl
jge
pop
pop
mov
pushl
out
leave
lret
add
jb
movb
imul
decl
call
add
movsb
push
int3
out
add
jo
shrl
jl
fwait
add
xchg
ljmp
mov
fcoms
push
sub
xor
pop
push
push
push
push
push
push
push
push
call
inc
incl
add
faddp
add
ljmp
fdivr
incl
mov
push
fcmove
add
add
leave
fildl
add
jmp
fadds
icebp
arpl
int
lods
push
add
add
scas
into
add
test
add
xchg
test
add
add
add
jns
std
lods
pushf
incl
in
add
xchg
cwtl
add
cltd
add
movl
push
call
scas
lcall
jne
add
mov
gs
jb
add
sar
jl
add
add
push
jge
jmp
lahf
xchg
addr16
mov
stos
stc
pop
push
jmp
add
popa
test
insb
pop
imul
jo
test
test
mov
or
faddl
jmp
mov
sub
push
call
push
push
push
push
push
push
push
push
push
call
testl
xchg
add
add
loopne
stos
mov
inc
incl
add
jp
mov
add
stc
xchg
stos
add
push
add
add
mov
add
decl
xchg
add
add
mov
incl
mov
call
mov
sub
call
push
push
push
push
push
push
push
push
call
add
test
arpl
call
push
push
test
stos
add
xchg
jmp
lods
mov
lock
add
fldenv
outsl
xchg
stos
add
xchg
mov
sahf
mov
lds
jns
lods
mov
mov
arpl
add
into
out
addl
add
push
faddl
jge
add
test
call
or
add
call
add
mov
loopne
add
js
mov
pop
imul
jo
idiv
incl
mov
jmp
mov
dec
pop
push
lret
mov
rolb
lea
mov
in
jno
jmp
add
add
pusha
mov
in
add
fs
add
lcall
xchg
xchg
enter
call
call
orb
push
add
lea
pop
pop
pop
pop
push
lea
pop
leave
push
dec
pop
ret
push
push
push
push
call
rcrb
shr
test
push
les
sbbb
xchg
jmp
int
push
add
rolb
xchg
add
mov
jmp
jns
call
test
xchg
add
incl
add
mov
add
ret
incl
rolb
mov
sub
push
push
pop
mov
push
sub
inc
pop
add
push
push
push
shr
inc
add
pop
push
push
push
push
xor
push
xor
add
shr
inc
shl
sub
xor
not
pop
not
ror
dec
pop
push
inc
pop
pushl
call
call
push
push
sub
dec
sub
inc
push
or
inc
add
add
sub
rol
pop
shr
pop
push
push
call
jp
incl
lcall
push
int3
pop
xchg
pop
add
sti
mov
mov
sahf
pop
imul
add
jecxz
incl
push
push
popf
add
popf
pop
add
add
aad
xor
add
cwtl
movb
leave
mov
mov
jae
in
push
add
cmc
add
incl
or
pop
call
push
push
push
push
call
xchg
add
sti
mov
xlat
jle
push
shl
add
sar
incl
xchg
mov
add
incl
mov
inc
add
mov
incl
clc
add
fcomp
push
out
add
pusha
add
cltd
mov
mov
mov
jge
fstpl
mov
sub
call
push
push
rol
push
or
inc
add
inc
sub
add
add
pop
lea
pop
push
push
push
push
push
push
push
call
lret
add
fstl
add
mov
add
add
call
cltd
mov
add
call
lods
repnz
rolb
add
push
jmp
rcr
add
dec
movsb
add
push
add
fwait
scas
stos
pop
in
add
out
cltd
cld
add
lea
iret
mov
sub
pushl
push
lea
pop
call
call
push
push
push
push
push
push
push
call
jbe
add
imul
incl
jno
add
incl
lds
enter
add
lret
add
movsl
out
incl
pop
mov
add
incl
mov
js
incl
mov
shll
lock
in
add
je
add
cmp
decl
addr16
shlb
xchg
mov
push
add
scas
iret
aad
jl
call
in
loopne
inc
or
inc
cmp
call
test
shr
push
push
push
push
push
push
push
call
std
xchg
mov
movsl
cmpsl
addb
mov
mov
add
ficomps
fst
mov
fbld
add
add
call
add
add
mov
add
add
add
add
jmp
add
add
in
mov
mov
add
xchg
clc
add
push
jge
decl
incl
inc
or
inc
cld
push
push
push
push
push
push
call
xchg
adc
addb
std
sti
jbe
add
enter
std
jbe
add
imul
mov
lods
roll
jmp
mov
call
xor
cli
ret
add
add
loop
rol
add
add
rolb
add
xchg
ljmp
aad
ljmp
lods
push
lea
add
incl
add
decl
add
inc
or
sub
shr
pop
movzwl
add
push
lea
not
sub
pop
test
jne
push
pop
mov
movl
jmp
push
sub
add
add
pop
mov
push
push
push
push
push
push
push
push
call
lcall
mov
add
scas
mov
rcrl
jmp
add
imul
fisttpll
cwtl
in
add
add
ljmp
incl
mov
out
cmpsb
lcall
pop
in
test
lods
lds
fdivr
call
test
mov
push
push
call
xchg
fwait
add
fstl
adcb
popf
iret
fnstsw
clc
cwtl
int3
add
push
pop
int3
mov
jl
add
filds
add
jmp
xchg
push
jo
add
addl
mov
clc
shl
testb
incl
add
add
ljmp
add
cwtl
mov
add
cld
mov
lock
mov
jmp
mov
sub
sub
jne
push
dec
dec
not
pop
mov
push
call
pop
add
incl
addl
add
lcall
add
xchg
add
bound
add
add
pop
mov
add
incl
jno
repnz
out
add
addl
push
mov
jns
add
add
mov
ljmp
jl
incl
push
add
add
js
add
push
not
sub
pop
mov
mov
push
push
push
push
push
push
push
push
call
cld
lret
mov
xchg
test
mov
arpl
jb
incl
add
add
fadds
rolb
test
lods
subl
pushf
shlb
mov
add
jmp
add
data16
jmp
xchg
mov
add
cli
mov
add
jns
add
pop
push
pop
nop
add
add
jmp
mov
sub
sub
jne
mov
movl
push
shl
rol
ror
rol
pop
jmp
push
push
push
push
call
add
pop
mov
jbe
add
lahf
jbe
addl
lcall
inc
add
cld
add
addb
out
pop
andl
add
fcoms
xchg
les
add
mov
mov
jge
repnz
add
pushl
scas
clc
jmp
add
xlat
add
decl
mov
add
cmp
jne
push
xor
dec
inc
sub
pop
mov
movl
push
shr
shl
shr
shl
pop
jmp
mov
cmpw
jne
push
push
push
push
push
push
push
push
push
call
mov
add
clc
mov
incl
xchg
xlat
add
incl
mov
add
in
lcall
add
inc
add
std
into
jne
pop
lcall
pop
add
mov
add
cld
test
call
inc
fwait
into
mov
insb
flds
fisttps
mov
movl
jmp
push
add
xor
pop
pushl
pop
push
push
push
push
push
push
push
push
call
add
add
add
out
mov
mov
imul
lods
add
fildl
jns
mov
add
add
mov
clc
neg
add
lock
add
add
jne
jno
inc
cmpsb
pushl
mov
loopne
stos
xchg
sar
push
movl
mov
mov
sub
mov
mov
mov
push
push
rol
dec
push
and
add
shl
sub
shl
not
pop
pop
push
push
push
call
leave
test
add
add
decl
stos
fidivl
add
gs
incl
test
adcl
add
add
add
mov
mov
push
addl
mov
add
incl
jge
addr16
add
lcall
in
lock
push
sub
pop
call
push
push
push
push
call
add
incl
mov
clc
pop
add
cwtl
ror
incl
xchg
add
cld
add
test
lods
cltd
jmp
mov
add
jbe
mov
lcall
push
pop
pushl
jne
jno
shl
out
icebp
vpackssdw
add
mov
jmp
xchg
xchg
cld
lock
pushl
incl
add
je
push
push
add
not
push
sub
add
shl
sub
rol
shl
pop
shl
add
sub
pop
push
pop
push
push
sub
pop
call
cmpl
je
push
push
rol
add
sub
push
or
not
add
sub
sub
sub
shr
pop
shl
shr
shl
pop
push
not
pop
push
call
cmpl
je
push
push
dec
shl
push
or
not
add
lea
rol
sub
sub
shl
pop
inc
rol
add
dec
pop
push
push
push
push
push
call
clc
mov
imul
fsubrs
insb
pushl
jl
add
incl
test
out
add
add
loope
jle
push
mov
test
add
incl
loope
loop
pop
push
call
or
mov
incl
add
add
les
lds
incl
hlt
jmp
add
jmp
pop
add
jge
lcall
mov
sub
push
push
ror
sub
pop
call
cmpl
je
push
push
shl
push
and
add
sub
dec
sub
inc
shr
inc
pop
dec
not
pop
push
push
push
push
push
push
push
call
mov
add
fld
ror
lcall
add
add
mov
push
add
incl
add
ljmp
mov
fcomp
data16
fidivrs
jno
in
push
add
mov
int3
incl
add
ja
popf
pop
mov
incl
jae
cli
clc
lods
fldl
fnstsw
incl
call
xor
add
loop
lea
pop
cmpl
je
push
push
lea
push
or
inc
add
sub
lea
sub
ror
pop
add
rol
pop
push
sub
add
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
sub
dec
push
sub
add
not
ror
sub
dec
shr
pop
ror
sub
pop
push
push
shr
inc
xor
pop
call
push
push
push
push
call
jmp
add
imul
push
loope
fistpl
add
sahf
add
testb
xchg
ficoml
call
ror
cld
mov
lcall
add
jno
pushf
mov
pushl
add
sahf
push
loope
call
mov
ljmp
add
push
mov
sub
cmpl
je
push
push
not
push
or
not
add
shl
ror
inc
sub
sub
sub
shl
not
pop
xor
pop
push
push
push
push
push
call
inc
loopne
call
jnp
ja
jmp
in
pop
ljmp
jmp
cmc
enter
cwtl
add
fbstp
call
insb
jl
imul
add
push
roll
loope
gs
popa
incl
fldcw
incl
add
add
add
add
push
add
test
enter
sub
call
push
push
push
push
push
push
push
push
push
call
add
mov
fidivrl
add
loop
cmpsb
pusha
shl
fwait
mov
add
jmp
jne
jl
mov
add
call
push
jne
add
jbe
sar
test
mov
add
fisttpll
call
ljmp
push
cli
call
add
decl
incl
pop
ret
ret
add
add
inc
fldl
push
inc
add
push
push
pop
add
ror
ror
shr
sub
sub
add
lea
pop
not
shr
dec
rol
pop
push
push
push
push
push
push
push
call
rorb
icebp
ja
add
add
out
pop
add
add
sahf
fcomp
xchg
fildl
scas
ret
mov
stos
mov
call
mov
add
roll
cmpsl
cltd
add
shll
push
add
add
jmp
nop
fldl
call
aam
jp
pop
push
sbbb
scas
push
ror
mov
sub
push
push
push
push
push
push
call
add
stos
mov
movb
data16
mov
add
fiaddl
sti
pop
add
add
jne
mov
div
scas
std
xchg
mov
jmp
fwait
rclb
out
add
call
push
lds
lcall
add
cld
out
pop
pop
in
test
in
add
leave
mov
in
call
add
adc
push
push
push
push
push
push
push
push
call
add
add
add
pop
add
out
add
mov
add
mov
roll
decl
movsb
pushf
fstpl
add
lods
mov
lcall
shl
pop
int
jp
incl
test
in
add
add
xchg
add
pop
hlt
fisubl
call
jae
push
jle
add
incl
out
iret
sahf
cmpsb
cli
fstp
in
add
flds
repnz
in
mov
sub
cmpl
je
push
push
inc
add
add
push
push
pop
add
lea
ror
sub
inc
pop
shr
sub
pop
push
push
push
push
push
push
push
call
stc
jle
add
xchg
add
iret
rolb
jge
jmp
popf
add
push
mov
add
incl
insb
add
incl
add
add
imul
xlat
add
rorl
out
test
incl
add
incl
jns
jle
in
mov
add
in
test
mov
sub
push
call
push
pop
cmpl
je
push
push
xor
shr
dec
add
push
push
pop
add
inc
sub
add
shl
rol
pop
rol
lea
pop
push
xor
inc
pop
push
push
push
push
call
insb
add
mov
scas
add
cmpsl
xchg
cmpsl
mov
pop
in
add
sti
decl
jl
xchg
std
jmp
push
add
pop
mov
iret
mov
aad
mov
mov
lds
call
add
mov
call
call
sub
call
cmpl
je
push
push
not
xor
push
and
add
sub
xor
sub
sub
not
pop
inc
inc
xor
pop
push
push
push
call
lret
jne
call
ret
incl
add
push
fbstp
mov
mov
call
lods
stc
leave
mov
xchg
cmpsb
add
shlb
stc
add
ljmp
add
mov
fwait
add
add
add
add
jns
add
jmp
xchg
add
lahf
int3
rorl
push
push
push
push
push
push
call
add
jle
lock
push
add
incl
sbbl
mov
addr16
pop
jl
add
add
cwtl
shll
incl
mov
add
sti
outsl
add
add
pop
fmuls
dec
cld
roll
call
mov
data16
fdivrl
add
inc
fucomp
lcall
xchg
arpl
mov
pop
push
mov
sub
call
cmpl
jne
push
inc
pop
mov
push
call
js
jbe
mov
add
jl
stos
mov
push
roll
out
add
jmp
iret
jno
mov
stos
jge
inc
add
cmpsl
xchg
insb
mov
mov
mov
mov
incl
add
add
lods
lahf
incl
add
fwait
mov
lea
jnp
push
incl
pop
out
leave
xlat
shlb
movsl
mov
sub
movl
push
push
push
push
push
call
lock
nop
add
xchg
add
rolb
pop
div
add
mov
add
add
int3
xchg
pop
add
add
pushl
cltd
jb
incl
test
mov
incl
add
push
into
mov
mov
popa
add
cld
push
pushf
inc
pushf
add
out
mov
add
incl
jmp
xor
pop
push
dec
sub
pop
pop
pop
push
push
push
push
push
push
call
divl
testl
scas
add
pop
mov
cli
popl
roll
call
jo
incl
fists
in
add
fisubl
iret
lcall
loope
mulb
enter
addb
mov
test
cmpsb
mov
mov
ljmp
in
nop
pushf
add
sahf
cli
shll
add
incl
mov
add
push
add
pop
leave
ret
push
shr
pop
push
mov
push
shr
pop
add
push
push
push
push
push
push
push
call
sar
incl
add
cmc
xchg
lcall
lea
add
add
lods
xlat
add
shll
into
enter
mov
add
sahf
pop
stos
mov
xchg
into
fwait
lds
mov
out
xchg
incl
clc
add
mov
jp
incl
ljmp
incl
incl
test
add
add
jns
add
jo
iret
into
movl
incl
add
arpl
add
out
lea
add
xchg
add
pop
test
xchg
add
test
lcall
mov
jl
not
test
incl
adcl
add
jmp
add
mov
call
addl
push
add
decl
int3
push
push
lea
dec
xor
push
or
inc
add
shl
add
shr
sub
add
pop
shl
xor
add
pop
push
push
push
push
call
mov
call
add
fidivl
add
std
loope
jecxz
add
add
xchg
imul
xchg
cld
fdivr
incl
add
into
lret
je
out
jb
mov
add
mov
mov
add
add
add
push
in
add
insb
add
mov
ljmp
add
out
pushl
incl
or
rcrl
pop
cmp
add
push
ror
xor
shr
pop
call
push
shr
pop
jmp
push
push
push
call
mov
faddl
pushl
mov
sarb
out
addl
add
cmc
decl
flds
add
add
push
add
add
add
fwait
mov
xlat
insb
jb
std
add
incl
add
add
add
push
pop
repnz
pop
add
call
xchg
test
cmpl
jne
push
push
push
push
push
push
call
add
push
pushl
movl
fcmovbe
sti
push
incl
out
loop
add
add
je
fucompp
fiadds
lahf
fimuls
clc
bound
incl
add
mov
ljmp
les
push
hlt
push
nop
add
add
call
xchg
add
mov
decl
incl
push
not
pop
ret
jmp
cmpl
je
push
not
xor
inc
pop
cmpl
jne
push
push
lea
push
push
pop
add
dec
add
sub
add
inc
pop
shl
add
pop
pushl
push
xor
pop
call
push
ror
add
inc
pop
call
push
push
push
push
push
push
push
call
add
lret
mov
rcrl
fidivrs
lcall
push
hlt
add
mov
add
xchg
pushl
jmp
imul
ljmp
imull
add
xchg
mov
cli
test
ljmp
fcmove
mov
dec
outsl
rolb
jecxz
pop
xchg
cwtl
enter
icebp
aam
add
xchg
call
lock
mov
push
push
pop
add
not
ror
rol
sub
shr
pop
sub
not
lea
add
pop
push
push
push
push
call
add
mov
imul
add
scas
add
aad
add
mov
add
mov
incl
push
push
push
fucom
cltd
stos
mov
fadd
jecxz
lcall
lds
mov
sahf
popf
incl
mov
mov
mov
popa
std
jmp
xor
stc
add
add
data16
ljmp
add
sub
pushl
call
push
dec
dec
inc
pop
push
push
inc
rol
pop
call
int3
leave
push
push
push
call
add
in
mov
inc
xchg
rolb
add
lock
xchg
lock
add
jns
leave
ljmp
pop
add
add
mov
test
fnsave
add
add
add
push
add
add
mov
jmp
jmp
testb
incl
push
push
push
push
push
push
push
push
call
popa
add
inc
add
mov
push
add
mov
push
hlt
movsl
lcall
xchg
loope
mov
mov
popf
cmpsl
lds
lret
aad
add
dec
add
add
add
jge
incl
in
bound
andb
add
jge
add
jge
sti
add
mov
sub
pop
push
push
push
push
push
push
push
call
imul
xchg
cli
jmp
mov
mov
add
in
insb
stc
jmp
add
incl
add
push
pusha
xchg
incl
lahf
sti
test
insb
add
mov
roll
pop
flds
xchg
xchg
pushl
xchg
ljmp
add
jmp
jge
incl
sub
shr
pop
pop
push
push
push
push
push
call
test
les
add
cmpb
mov
ret
lock
add
pushl
add
cwtl
ljmp
out
les
add
add
popf
mov
lock
add
jl
pop
add
nop
mov
add
add
int3
lea
add
add
xchg
lret
jb
mov
sub
leave
add
push
push
push
push
push
push
push
push
push
call
pushl
lea
xchg
jmp
xchg
stc
add
add
mov
add
rcr
pop
ret
add
ljmp
add
add
clc
mov
add
cld
roll
xchg
pop
pop
add
add
inc
mov
pushl
xchg
add
clc
mov
incl
mov
mov
sub
ret
jmp
push
push
push
push
push
push
push
push
push
call
lods
mov
out
mov
add
add
add
incl
mov
jb
pushl
add
jge
add
hlt
add
push
call
call
add
add
add
mov
add
std
mov
mov
in
incl
mov
push
add
mov
add
mov
fdivr
incl
test
add
ds
push
dec
sub
push
and
add
lea
xor
sub
sub
inc
add
rol
pop
ror
shl
pop
push
inc
pop
pushl
push
push
call
add
test
push
add
loop
add
incl
xchg
pushl
xchg
roll
jle
push
scas
add
add
xchg
popf
in
add
add
add
sti
mov
mov
test
mov
cmpsb
into
movl
mov
add
pushf
jb
sti
lcall
in
hlt
call
push
push
push
push
push
push
push
call
add
push
into
in
notl
jnp
cltd
xchg
divl
in
js
jmp
rolb
fsub
xchg
out
mov
add
lcall
add
fs
divb
sahf
incb
mov
movsl
add
mov
add
imul
add
lcall
mov
sub
push
push
inc
pop
call
push
shr
shl
pop
jmp
push
add
add
rol
xor
pop
cmpl
jne
mov
mov
push
push
push
push
call
gs
mov
scas
call
xlat
cld
mov
ja
pop
add
popa
jmp
pop
jmp
into
add
add
jmp
pop
ficomps
add
pop
push
mov
jle
add
mov
cwtl
mov
inc
jns
loope
out
call
add
add
add
fsts
add
jge
mov
sub
push
push
push
add
sub
push
or
not
add
shl
sub
ror
lea
sub
add
pop
pop
push
push
call
sti
mov
xchg
push
push
mov
testb
xchg
roll
mov
aad
pusha
mov
add
mov
add
add
gs
movsb
and
add
incl
push
shr
stc
data16
clc
mov
jle
add
add
xchg
add
data16
les
icebp
mov
add
lcall
repnz
pushl
call
push
push
call
fstpt
fwait
cwtl
rolb
jmp
xlat
add
incl
mov
add
incl
lret
clc
mov
std
subl
test
mov
lahf
arpl
decl
call
pop
add
lcall
jle
push
add
add
lcall
push
add
pusha
add
lods
add
call
push
push
rol
xor
add
push
or
inc
add
ror
sub
dec
shl
pop
dec
add
pop
pushl
push
push
push
call
aam
sahf
nop
ja
mov
data16
mov
fldl
add
add
add
jmp
faddl
incl
add
icebp
lods
mov
inc
out
add
out
mov
jns
movsb
add
mov
incb
mov
mov
add
add
lcall
adcl
mov
add
add
jne
add
add
fcoml
in
lock
push
call
add
jae
add
mov
outsl
add
add
mov
pushl
add
jmp
cmpsb
jge
pop
shr
add
add
int3
movsb
fs
outsl
fildll
xchg
add
pop
sti
bound
shl
notb
test
out
lcall
add
add
imul
add
pop
mov
sub
call
push
push
push
or
not
add
xor
lea
sub
add
xor
pop
add
xor
lea
pop
push
push
push
push
push
call
add
jns
rolb
icebp
mov
rolb
lods
fwait
add
inc
jns
add
clc
lret
std
add
incl
popa
push
mov
jecxz
popl
ret
add
shll
mov
rorl
add
add
rcrl
sub
hlt
pushf
jmp
jmp
idiv
call
call
mov
call
mov
insl
push
push
push
push
push
call
add
add
pushl
add
add
jo
hlt
jp
pop
add
scas
add
lds
data16
mov
push
sarb
add
lock
aam
xchg
cltd
std
add
add
mov
movsl
add
std
pop
add
add
jmp
lock
stc
test
bound
jge
jno
aam
push
cmpsl
jge
out
pop
scas
xchg
jbe
add
call
push
call
popa
mov
fcom
stc
add
incl
add
incl
inc
mov
add
jmp
mov
xchg
incl
xchg
pop
js
in
mov
shrl
pop
add
int3
test
je
add
add
xchg
push
add
mov
add
mov
sub
call
push
push
ror
inc
push
push
pop
add
sub
shr
sub
xor
ror
pop
rol
pop
push
push
call
out
incl
jle
add
xchg
jp
add
jno
arpl
add
pop
popa
xchg
lcall
xchg
xlat
add
pushl
sahf
fsin
jle
add
pop
pop
cmpsl
leave
jecxz
std
mov
roll
rolb
std
loope
in
mov
call
iret
mov
add
add
incl
in
enter
jnp
loop
mov
hlt
pushl
push
push
push
push
push
push
push
push
call
enter
mov
stos
dec
popf
xchg
add
mov
pusha
js
mov
std
incl
scas
jp
jnp
addb
pushl
loop
add
in
fwait
roll
cli
mov
jbe
popf
mov
add
add
iret
cmp
incl
lret
xlat
test
mov
out
loopne
mov
pop
push
jmp
gs
jge
add
ficomps
into
roll
add
jge
call
add
jne
jo
incl
call
call
push
push
not
sub
push
xor
add
sub
inc
sub
dec
dec
ror
pop
ror
add
shr
pop
push
shr
dec
sub
pop
pushl
push
shr
pop
call
push
call
ret
add
add
popf
add
jne
cmpsl
mov
dec
insb
mov
scas
int3
pop
iret
pop
add
add
cmpsl
lods
mov
add
stos
mov
incl
rcrl
add
inc
int
out
add
mov
add
lahf
push
rclb
pop
movsb
add
pop
scas
ljmp
jmp
rcrb
fcoml
push
xchg
in
add
jbe
incl
call
push
push
lea
ror
sub
ror
push
xor
add
lea
sub
inc
pop
not
pop
pushl
push
not
pop
call
push
call
add
call
lahf
mov
add
clc
mov
add
movsb
pusha
cmpsl
lods
jle
ljmp
add
adcl
call
mov
xchg
add
movsl
add
lods
xlat
add
xchg
add
add
out
addl
add
test
jmp
mov
add
decl
fsubl
call
add
jne
in
mov
sub
call
push
push
add
ror
push
or
inc
add
xor
dec
sub
sub
add
pop
sub
not
pop
push
sub
lea
pop
pushl
call
push
not
sub
dec
not
pop
call
push
push
rol
push
sub
add
ror
xor
not
shr
sub
lea
sub
pop
dec
xor
inc
pop
push
call
push
test
add
loope
add
test
jmp
stos
imul
jne
ja
add
jecxz
lcall
add
les
out
fldl
add
xchg
adc
idiv
incl
add
data16
jne
test
xchg
add
mov
test
add
mov
shlw
mov
sub
pushl
push
sub
dec
ror
pop
call
call
push
push
shr
inc
add
not
push
xor
add
xor
add
sub
sub
xor
pop
add
sub
not
pop
push
push
push
push
push
call
rcl
add
incl
cwtl
add
call
lcall
jge
mov
add
add
add
incl
jmp
sar
fidivrs
incl
addr16
incl
add
lcall
imul
add
test
lahf
jnp
cmp
add
sti
cmp
mov
sub
pushl
push
push
call
pusha
pop
jl
incl
test
mov
jnp
call
pusha
push
call
xchg
add
add
push
mov
add
ljmp
insb
mov
sti
idiv
push
js
mov
xchg
out
jle
mov
add
add
xchg
clc
push
aad
xchg
mov
fistps
add
add
add
cmp
jmp
in
hlt
call
lea
push
push
shr
lea
shr
pop
call
push
push
push
and
add
not
add
sub
inc
add
not
lea
pop
rol
pop
push
sub
pop
pushl
call
push
push
push
push
push
push
push
push
push
push
call
incl
rolb
call
mov
js
out
push
loop
add
incl
mov
fucomp
fdivs
push
lods
popf
jge
xchg
add
jmp
fsubp
js
mov
pop
insb
shlb
push
jno
push
jmp
addb
add
jle
incl
push
push
xor
not
push
and
add
add
add
add
sub
add
dec
pop
sub
shl
add
pop
push
push
push
push
push
push
call
arpl
add
bound
fbstp
lds
add
repnz
push
add
incl
cwtl
into
mov
lds
lcall
sar
clc
add
addr16
add
lds
flds
add
cmp
add
mov
xchg
add
add
push
cwtl
jle
cld
js
dec
add
pop
int
cltd
in
mov
sub
pushl
push
inc
pop
call
push
push
push
push
call
rolb
mov
incl
pop
lcall
cld
icebp
jne
mov
clc
out
out
filds
add
add
pop
int3
out
pop
add
incl
leave
mov
icebp
int
ljmp
jno
in
lods
mov
movsl
fstl
lcall
incl
in
in
call
push
push
not
sub
sub
add
push
sub
add
dec
sub
xor
sub
pop
ror
add
shl
inc
pop
push
add
pop
pushl
push
push
push
push
call
jae
lcall
fwait
add
add
xlat
loop
test
mov
ljmp
add
add
call
lcall
add
add
ljmp
loop
rol
test
jmp
fadds
add
test
push
mov
pop
arpl
incl
add
add
add
hlt
lock
mov
sub
call
push
push
push
push
push
push
push
push
push
call
stos
add
add
ficomps
mov
jbe
incl
add
std
incl
mov
lcall
shl
std
mov
in
add
add
add
call
add
mov
cmp
out
add
mov
shlb
jmp
add
fdivr
call
push
push
add
sub
push
sub
add
add
sub
sub
dec
pop
rol
not
pop
pushl
push
xor
pop
call
push
inc
shr
pop
call
lea
push
push
shl
lea
not
push
sub
add
ror
add
add
sub
shl
pop
lea
shl
pop
push
xor
xor
dec
pop
pushl
call
push
push
push
call
add
incl
aad
add
hlt
nop
insb
mov
mov
lret
mov
ljmp
int3
cld
out
add
frstor
ret
incl
incl
jmp
xchg
enter
dec
add
movsb
into
add
cltd
pop
mov
mov
jae
incl
call
add
mov
sub
call
push
push
shl
xor
rol
push
and
add
rol
sub
lea
rol
pop
add
rol
pop
push
shr
rol
sub
sub
pop
pushl
push
push
push
push
push
push
push
push
call
incl
add
call
rolb
add
add
stos
pop
test
jge
jno
mov
add
imul
mov
jle
add
andb
add
incl
add
pushl
incl
rolb
xorb
ljmp
call
push
add
pop
call
push
xor
rol
pop
mov
push
push
xor
ror
add
sub
push
and
add
sub
pop
xor
xor
not
pop
push
shr
add
pop
pushl
push
rol
sub
rol
pop
call
push
push
call
aad
jno
dec
pop
pop
rolb
roll
lods
mov
mov
cltd
test
int3
insb
pop
jmp
movsb
jge
jl
ljmp
lock
fldl
pop
shl
call
add
js
shl
add
movsl
repnz
mov
fiadds
add
add
js
add
sahf
mov
sub
call
push
push
ror
ror
push
or
not
add
sub
lea
sub
rol
pop
sub
rol
inc
pop
push
push
push
push
push
push
push
push
call
add
lea
add
mov
cmc
add
incl
lcall
fadds
push
out
push
pusha
std
pop
add
mov
scas
xchg
jns
lods
aad
movsb
faddl
insb
add
add
mov
push
push
test
mov
lea
add
jmp
in
add
incl
pushl
push
xor
not
inc
shl
pop
call
push
push
push
push
push
push
push
push
call
movsl
mov
les
add
dec
add
aam
add
ret
add
mov
dec
add
jl
ljmp
lret
add
sarl
mov
arpl
lock
lret
div
adcb
call
fiaddl
les
add
std
xchg
decl
ljmp
push
push
push
push
push
push
push
push
call
mov
jns
lahf
add
mov
test
adcl
movb
add
in
add
out
mov
stc
add
incl
add
add
add
incl
gs
ljmp
cwtl
add
fs
add
mov
sub
pushl
call
push
push
lea
sub
xor
add
push
and
add
lea
inc
sub
xor
ror
add
pop
lea
xor
lea
inc
pop
push
push
push
push
push
call
js
incl
add
ljmp
jns
mov
js
add
cld
jb
xchg
sahf
add
mov
mov
fbld
outsl
incl
add
mov
mov
add
int
lods
mov
mov
jbe
rolb
stos
pop
ja
mov
out
add
add
fwait
mov
sub
pushl
push
dec
rol
ror
pop
call
push
push
ror
push
sub
add
inc
sub
dec
pop
add
pop
push
push
push
push
push
push
push
call
scas
push
arpl
out
fadds
add
nop
add
mov
add
add
add
pushl
add
jge
add
incl
jae
xchg
add
insb
mov
lcall
jge
add
add
arpl
add
add
addb
cli
fnsave
into
pop
mov
test
lret
pushf
int3
lret
pop
add
jmp
sub
push
call
push
push
push
and
add
add
lea
sub
sub
rol
add
pop
shr
pop
push
push
push
push
call
mov
scas
xchg
add
lahf
jl
aam
rolb
call
mov
mov
fidivrs
cmpsb
mov
mov
add
ja
std
testb
mov
add
mov
call
andb
mov
hlt
push
jp
loop
mov
jmp
arpl
incl
mov
in
in
pushl
call
mov
push
add
pop
lea
push
xor
sub
ror
xor
pop
lea
push
lea
not
pop
push
push
push
push
add
pop
push
push
lea
pop
push
push
call
pop
in
mov
pushl
imul
lcall
jne
add
mov
incl
mov
stc
add
mov
add
add
mov
incl
je
pushl
incl
xchg
add
ljmp
js
ljmp
add
cltd
shll
mov
rorb
add
test
clc
add
sub
push
push
push
push
push
push
push
push
push
push
push
call
xchg
loop
repnz
leave
mov
pop
push
add
add
imul
jp
add
mov
out
mov
incl
mov
jb
fildl
add
pushl
mov
add
add
dec
add
add
out
jmp
add
mov
mov
jns
test
pushl
push
lea
not
pop
push
push
lea
sub
ror
pop
call
push
push
dec
add
push
xor
add
xor
sub
rol
not
pop
not
sub
pop
push
ror
pop
pushl
call
call
push
push
push
push
call
icebp
mov
add
in
int3
dec
jae
rolb
lret
push
aad
addb
incl
add
inc
add
std
mov
lea
popl
sti
jns
add
add
dec
mov
adc
add
mov
je
push
mov
icebp
data16
lret
sar
mov
sub
mov
pop
dec
jne
push
push
push
push
push
push
call
mov
lcall
lock
add
decl
cli
add
lahf
add
add
call
pushf
mov
notl
xchg
insb
jl
mov
mov
mov
loop
incl
stos
roll
test
jne
decl
jmp
call
jmp
push
push
push
push
push
push
push
call
in
ljmp
add
int3
leave
add
call
loop
jmp
jecxz
scas
add
jmp
js
movsl
push
jmp
add
add
incl
xchg
add
add
push
fidivs
call
sti
push
add
out
add
add
ljmp
pop
add
leave
lds
cli
add
loope
add
pushf
xlat
pop
push
aad
addb
xchg
add
incl
call
push
push
rol
dec
ror
push
and
add
sub
dec
dec
sub
xor
pop
dec
xor
pop
push
rol
pop
pushl
push
push
push
call
add
fildl
repnz
jne
push
lcall
pop
add
imul
lock
mov
add
push
lret
add
pusha
add
add
fistps
add
add
mov
cmpsl
fcmovbe
notl
hlt
pop
mov
add
jecxz
lcall
test
loopne
sahf
add
incl
sahf
mov
sub
call
push
push
push
push
push
push
push
call
jnp
fildl
mov
add
add
add
int
popf
add
flds
cli
rorb
call
call
ja
add
add
push
push
ja
incl
pop
push
add
test
incl
incl
incl
jb
roll
add
mov
sub
call
mov
push
dec
inc
add
rol
pop
lea
push
push
add
add
push
or
inc
add
not
not
add
rol
sub
pop
inc
ror
pop
push
push
call
js
mov
addr16
add
mov
scas
sub
xlat
stc
add
int3
icebp
add
add
add
in
dec
mov
in
jbe
add
enter
call
add
add
add
incl
add
in
pop
mov
decl
add
lds
mov
lcall
in
hlt
pushl
call
lea
push
push
push
call
add
stos
out
mov
add
lret
in
mov
addr16
in
add
fwait
mov
jge
add
mov
stos
add
push
in
add
scas
mov
incl
xchg
shl
add
in
shlb
popa
lcall
mov
mov
pop
add
icebp
add
add
jne
incl
call
lea
sub
pop
push
push
push
push
push
push
push
push
push
push
call
rorb
call
add
hlt
out
add
stos
add
mov
push
xchg
incl
insb
flds
in
cli
mov
mov
imul
add
nop
jl
add
fwait
cwtl
add
les
stc
fstl
pushl
mov
call
mov
clc
mov
add
jmp
push
xchg
push
mov
out
icebp
add
call
add
mov
sub
pushl
push
push
sub
xor
push
or
inc
add
inc
not
not
sub
shl
shl
sub
add
pop
pop
push
push
push
call
add
fstps
rolb
add
leave
int
jl
add
mov
add
in
add
jmp
hlt
mov
stos
mov
add
incl
jns
mov
je
xchg
call
add
add
mov
hlt
lea
int
in
stos
roll
add
popf
cltd
in
add
incl
add
jmp
in
lock
call
pop
call
push
push
sub
not
inc
push
push
pop
add
add
sub
add
dec
add
pop
shl
lea
add
ror
pop
pushl
push
not
pop
call
push
push
push
push
push
push
push
push
call
std
loop
incl
mov
jmp
mov
lcall
push
popf
jb
data16
ficoml
add
pop
js
fucomp
mov
cltd
enter
call
mov
ja
push
push
movl
movsl
jge
incl
lret
incb
rolb
add
in
add
add
push
add
test
add
jmp
incl
mov
sub
call
push
push
inc
shr
shr
inc
push
push
pop
add
xor
not
sub
rol
shr
shl
pop
not
pop
push
not
pop
pushl
call
call
push
push
push
push
call
bound
lods
in
jmp
jno
call
lcall
mov
xchg
xchg
insb
clc
mov
lock
dec
push
add
in
mov
add
jmp
test
fidivrl
mov
movb
mov
mov
fstps
lea
add
call
mov
in
in
jmp
push
call
mov
add
lret
outsl
xchg
mov
mov
push
xchg
add
fadds
add
push
mov
sar
incl
lcall
call
jp
cltd
int3
scas
jl
incl
lds
add
add
cltd
incl
mov
aad
add
clc
jmp
add
add
push
push
push
push
push
push
push
push
call
add
mov
cld
add
je
mov
mov
jb
decl
incl
pop
xchg
mov
in
pop
into
add
popf
bound
xchg
add
into
out
jl
dec
ljmp
xchg
bound
jae
add
pushl
add
out
mov
add
lcall
call
add
mov
sub
mov
jmp
push
push
not
push
push
pop
add
sub
pop
rol
pop
push
sub
dec
pop
pushl
push
not
pop
call
push
rol
pop
push
push
push
push
push
push
push
call
add
xchg
pop
arpl
fildl
add
jle
jle
add
icebp
jae
lahf
hlt
bound
mov
push
shr
xchg
test
cltd
jmp
les
jmp
incl
push
fdivrp
call
sarb
jl
add
add
dec
jmp
fwait
xchg
jne
ret
xchg
mov
mov
insb
add
sahf
stos
add
incl
imul
incl
push
push
add
lea
not
push
sub
add
add
shr
sub
shr
pop
add
sub
add
pop
push
lea
add
ror
lea
pop
pushl
push
ror
pop
call
push
push
push
push
push
push
push
call
mov
jge
xorl
add
nop
fcomi
fcoml
jo
call
faddl
add
incl
add
mov
mov
std
add
fcompl
sbb
add
scas
add
pusha
mov
lcall
xchg
add
testb
insb
movsb
fiadds
sub
push
push
add
xor
shr
pop
call
leave
push
xor
xor
inc
pop
add
push
call
jbe
add
je
mov
add
jmp
add
add
pop
lods
fcmovbe
int3
mov
call
in
addr16
popa
int
cld
jp
cmpsl
scas
idiv
incl
mov
add
incl
pop
pusha
fs
add
xchg
lret
cmc
add
into
lahf
jae
xchg
add
jne
jmp
jb
pushl
add
pop
pop
pop
push
call
ja
push
mov
add
mov
jge
lods
add
mov
push
jge
hlt
xorb
decl
call
add
incl
add
in
testl
add
jle
rolb
std
xchg
push
shl
sahf
add
jge
xlat
ficomps
movb
bound
lock
stc
cld
mov
push
aad
stc
mov
incl
jp
mov
add
mov
sub
pop
push
push
call
pop
iret
lcall
mov
mov
call
xchg
pop
inc
ljmp
pushl
out
lcall
aad
mov
add
in
int3
add
cltd
jnp
pop
mov
pusha
jnp
add
add
mov
loop
add
add
out
add
loopne
xchg
leave
loop
add
hlt
dec
push
sub
pop
add
ret
leave
push
push
push
push
push
push
call
test
incl
in
xchg
add
mov
jmp
faddl
pop
add
decl
mov
jmp
mov
cmpsl
nop
xchg
add
call
pushl
add
add
pop
xchg
add
add
fnstcw
dec
mov
sub
ret
push
push
lea
not
not
add
pop
mov
cmpl
jne
mov
push
push
push
push
push
push
push
push
call
add
bound
out
gs
incl
movsb
push
addb
out
jp
add
jmp
lods
xchg
add
mov
incl
call
enter
add
jno
scas
push
incl
push
jp
sahf
int3
addb
jl
icebp
add
stos
add
incl
add
add
rol
xchg
jge
incl
jmp
push
call
popl
lret
add
pop
out
jmp
hlt
mov
testl
add
mov
pushl
clc
outsl
xchg
add
xchg
popa
icebp
jge
add
mov
mov
sar
adcl
add
add
add
add
movsb
add
add
xchg
out
out
pop
imul
mov
sub
mov
push
push
push
push
push
call
call
fisubs
jmp
push
fdecstp
outsl
ljmp
add
add
arpl
add
jae
sarb
mov
out
in
test
jnp
lcall
jl
add
mov
add
add
fsubr
call
add
pop
add
faddl
mov
ljmp
jbe
mov
sub
and
push
lea
ror
pop
xor
push
call
movsb
mov
jnp
test
incl
loopne
les
fldcw
decl
mov
andl
add
add
mov
add
add
in
add
incl
xchg
lea
xchg
add
std
ja
pop
add
fcos
jmp
inc
js
subl
aad
xchg
insb
pop
mov
push
clc
pushl
push
push
inc
ror
sub
pop
xor
push
push
push
push
push
push
push
push
call
jo
add
add
mov
arpl
add
add
add
mov
data16
add
add
stos
add
leave
int3
jmp
lcall
push
sahf
mov
add
mov
xchg
add
incl
incl
test
popa
mov
filds
jp
sti
add
std
addb
decl
dec
push
shl
pop
sub
push
push
push
call
mov
jecxz
jne
ret
add
fwait
add
add
add
loop
lret
fcoml
add
incl
insb
andl
scas
mov
mov
add
pop
push
mov
scas
add
lcall
popf
add
add
jnp
loop
add
xchg
ljmp
enter
mov
sub
jmp
push
xor
inc
sub
pop
sub
pushl
pop
push
xor
lea
add
add
pop
sub
cmp
jne
mov
push
pop
lea
sub
push
lea
pop
mov
push
push
push
push
push
call
cmpsb
pop
loope
test
add
mov
lea
call
in
ret
add
pop
add
les
ret
incl
incl
cmpsl
loopne
aam
mov
aad
mov
mov
add
xlat
add
add
add
pop
mov
cltd
lock
mov
sub
shr
push
push
push
push
call
push
add
add
andb
xchg
jnp
push
jecxz
pushf
mov
incl
insb
jne
push
mov
mov
jmp
mov
into
pop
push
pop
add
out
add
stos
lds
mov
mov
add
sub
add
push
rol
not
pop
sub
pushl
push
push
push
push
call
andb
les
add
in
les
mov
xchg
ljmp
pushl
nop
push
incl
add
insb
in
fiaddl
sar
call
add
push
add
decl
add
add
les
pop
shl
pop
push
mov
fiadds
in
jl
add
add
fs
add
jne
add
incl
lcall
rol
add
add
pop
shr
and
sub
push
inc
add
pop
cmp
jne
push
inc
dec
sub
pop
leave
ret
push
pop
push
push
lea
pop
mov
push
xor
add
pop
add
push
lea
pop
push
push
push
push
push
push
call
movsl
cmc
mov
fildl
rolb
pushf
add
xchg
add
push
gs
add
incl
aad
decl
mov
imul
mov
add
jmp
lods
add
mov
add
test
add
ljmp
add
push
add
mov
imul
lcall
hlt
idiv
ljmp
add
int
mov
sub
push
push
push
push
call
add
js
rolb
jmp
test
jge
push
incl
leave
scas
xchg
aam
into
mov
scas
movsb
push
lods
repnz
incl
aad
xchg
add
scas
add
add
icebp
push
incl
add
shrl
jmp
stos
add
ljmp
add
xchg
mov
add
incl
jae
fmull
loopne
not
add
in
lock
call
add
sub
lea
pop
push
push
push
push
push
call
add
lcall
xchg
data16
pop
add
push
mov
xchg
fldcw
add
icebp
cmpsb
add
add
nop
add
add
shlb
add
add
add
add
gs
add
lret
fwait
lods
pop
scas
cwtl
mov
add
mov
add
mov
in
push
mov
push
ror
pop
lea
sub
mov
push
push
call
into
jns
add
push
add
aad
je
testl
add
test
in
shll
mov
xchg
incl
into
lea
xchg
call
add
cmp
jmp
incl
xchg
arpl
xchg
mov
add
std
fldenv
cld
mov
repnz
out
lahf
add
call
add
in
hlt
shr
push
add
not
pop
add
push
push
push
push
call
add
add
out
add
fimull
ljmp
add
mov
add
add
jge
add
fdivrp
ljmp
xchg
shl
les
incl
test
push
pop
imul
push
stos
add
ljmp
push
movsb
jmp
clc
lret
sub
mov
add
mov
push
not
sub
pop
add
xor
push
push
push
push
push
push
call
mov
nop
push
out
movsl
cmpsl
add
incl
add
xchg
jmp
cli
add
add
jp
add
add
jns
mov
incb
roll
add
enter
stc
add
mov
incl
call
leave
lods
lcall
jmp
jae
call
pop
call
fneni(8087
add
add
scas
add
mov
push
push
push
call
mov
lock
push
add
add
add
jmp
addr16
jmp
mov
jp
ret
add
add
add
stos
stos
incl
lock
add
cld
mov
add
sarb
jmp
jecxz
lds
add
lcall
pushf
stos
add
scas
lock
add
in
lock
incl
sub
push
push
push
push
call
rcl
aad
add
mov
inc
mov
jns
mov
add
out
add
xchg
incb
add
incl
lock
mov
in
mov
add
jmp
push
pop
incl
out
imul
add
jp
ljmp
call
ljmp
push
jne
jo
loopne
mov
mov
sub
call
add
push
push
push
push
push
push
push
push
push
call
jp
std
out
stc
add
test
test
add
sti
scas
repnz
into
xchg
add
add
pop
movsl
cld
add
scas
idiv
mov
add
mov
decl
add
add
incl
lea
sahf
add
jl
incl
add
mov
push
lcall
icebp
add
pusha
add
test
xchg
shlb
lock
nop
loop
incl
cmp
je
push
add
sub
pop
add
push
push
push
call
add
pushf
iret
pop
add
add
pop
loopne
test
in
jne
add
mov
push
call
add
add
add
mov
addr16
jbe
decl
add
jmp
jecxz
loopne
mov
pop
jo
sti
stc
dec
mov
jmp
addb
jmp
lock
incl
test
cld
ljmp
push
call
push
mov
xchg
call
dec
add
add
cwtl
xchg
mov
add
data16
push
add
testb
cmpsb
in
popl
icebp
fnsave
stc
jecxz
add
call
add
push
add
jbe
jmp
fcmovbe
jp
out
add
int
stos
add
mov
fdivs
mov
cld
mov
incl
mov
incl
pushl
rclb
xor
pop
pop
pop
pop
push
push
push
push
push
call
cltd
test
call
mov
clc
ret
add
push
xchg
loop
add
xchg
jbe
jae
lods
jmp
mov
mov
enter
pop
add
add
popl
add
lds
push
pop
pushl
testl
jecxz
add
movsb
mov
mov
scas
incl
pushl
add
incl
shl
call
add
add
add
push
hlt
mov
sub
pop
push
lea
add
inc
pop
pop
leave
ret
push
push
call
idiv
call
in
call
add
call
push
add
icebp
in
aam
mov
fwait
incl
jnp
call
sarb
add
loope
clc
je
loope
add
jecxz
jo
jbe
fstpt
incl
push
add
lods
push
lahf
mov
insb
jge
mov
decl
mov
add
push
push
inc
sub
pop
push
push
push
push
push
push
push
push
call
add
add
mov
xchg
gs
iret
aad
incl
push
xchg
ja
xchg
lds
mov
out
imul
mov
add
add
xchg
cltd
add
jmp
mov
ljmp
push
xchg
pop
add
cltd
jp
mov
xchg
pusha
add
add
mov
add
aam
mov
pop
loope
incl
push
sub
xor
add
add
pop
mov
push
not
pop
push
push
push
push
push
push
push
push
call
add
add
jae
enter
incl
add
add
mov
push
add
sahf
jb
pop
cmc
mov
add
cmpl
popa
fdivr
jmp
test
incl
add
addr16
cmpsl
xchg
data16
arpl
dec
loop
add
add
incl
leave
mov
mov
mov
decl
call
push
push
push
push
push
push
push
push
push
call
outsl
call
jp
ljmp
add
add
add
shrb
mov
jnp
lods
mov
mov
add
ljmp
add
faddl
popa
add
xchg
in
add
lcall
add
mov
add
fistps
xorb
add
data16
movsb
jge
imul
add
xor
push
shr
shl
dec
pop
pop
pop
push
xor
rol
pop
pop
pop
push
push
push
push
push
call
mov
mov
out
lods
nop
xchg
incl
pop
test
lcall
add
mov
incl
add
incl
pop
push
xchg
add
incl
lock
fs
add
mov
add
mov
mov
add
data16
xchg
jp
add
repnz
push
call
add
fwait
add
test
hlt
mov
sub
pop
push
lea
dec
pop
leave
ret
push
push
push
push
push
push
call
les
incl
mov
fimull
add
pushf
add
mov
call
mov
pushl
cmpsl
jge
fildl
add
mov
sar
incl
add
mov
addr16
fisubrs
incl
insb
push
mov
push
xchg
jge
add
add
in
add
incl
add
in
lret
add
call
call
pop
add
push
mov
push
push
push
call
mov
imul
aam
add
incl
mov
add
fsubrs
lock
fstpt
into
outsl
pop
jae
cmpsb
incb
add
add
loopne
add
imul
pushl
add
jl
fisubrs
jp
ljmp
xchg
fldcw
incl
hlt
push
dec
sub
sub
shr
pop
push
push
push
push
push
push
push
push
push
push
push
call
imul
out
xchg
jmp
pop
add
add
filds
xchg
mov
add
popa
pop
call
add
mov
add
repnz
jns
rol
lcall
and
add
addl
aad
out
add
add
lret
pop
nop
rolb
add
int
mov
sub
push
push
rol
pop
push
push
push
push
push
push
push
push
call
cld
ljmp
lcall
outsl
push
add
imul
add
test
clc
aad
cmc
jmp
push
test
pushl
add
call
rcrl
mov
add
movsl
aam
popf
add
cld
imul
fidivrl
imul
incl
or
bound
jmp
push
pop
lea
push
push
push
call
out
add
in
add
sti
jb
mov
cmpsb
shlb
incb
add
pushl
add
sbb
mov
xchg
mov
add
pop
pop
popa
add
add
jae
gs
hlt
movsb
into
movb
add
add
add
jb
xchg
add
repnz
add
mov
add
add
add
fs
pushl
add
mov
sub
sub
mov
shr
push
shl
pop
add
push
push
push
push
push
call
xorb
xchg
add
mov
mov
out
add
fsubrl
add
mov
push
jb
push
lock
mov
incl
pop
test
jbe
clc
lcall
add
mov
dec
jo
out
cmpsl
sahf
add
cmpsl
add
add
in
add
add
lods
push
add
movsb
jbe
add
add
mov
add
pushl
push
shl
pop
popl
mov
push
xor
dec
add
sub
pop
add
push
add
lea
pop
xor
lea
mov
push
push
push
push
call
add
jae
mov
imul
ljmp
mov
popl
mov
add
jae
mov
call
test
add
push
add
cltd
add
xchg
add
incl
pushf
insb
addb
test
add
ljmp
add
add
std
mov
add
int
add
sub
add
xor
push
push
push
push
push
push
push
push
call
mov
mov
add
incl
add
lcall
add
incl
jns
mov
add
mov
add
add
loope
out
jl
add
test
hlt
outsw
add
decl
jmp
flds
add
add
push
int3
rcl
incl
jmp
clc
add
mov
sub
call
push
add
pop
add
push
push
push
push
push
push
call
xchg
popa
ja
add
pushf
add
add
shlb
in
shl
incl
jbe
mov
add
add
call
jmp
clc
leave
add
incb
add
popf
pop
jge
add
jno
clc
add
add
inc
add
add
cwtl
mov
loop
inc
jl
add
incl
add
xchg
incl
outsl
pop
jno
incl
call
nop
cmp
je
nop
push
push
push
push
push
call
inc
arpl
jmp
mov
push
mov
add
mov
imul
test
pushl
jae
subb
mov
in
js
fcoms
sti
loopne
jle
lock
add
mov
add
add
rolb
inc
xchg
lods
incl
loop
stc
mov
sub
nop
push
not
shl
pop
inc
nop
nop
push
push
push
call
xchg
fs
mov
add
add
add
mov
add
popf
lret
add
in
pusha
rcl
add
add
add
add
outsl
in
stc
movl
pushf
lcall
jno
cmpl
jl
add
add
incl
add
fsubs
fisubrl
popa
add
lahf
mov
sub
cmp
jb
xor
push
add
sub
shr
dec
pop
jmp
push
shr
pop
mov
push
lea
shl
add
pop
add
movzwl
mov
push
push
push
push
call
xlat
add
add
incl
jmp
add
add
add
push
mov
mov
jb
mov
pop
call
mov
movl
jo
in
mov
imul
movsb
call
add
into
imul
cmc
std
int
jmp
jmp
test
jbe
incl
push
push
push
push
push
push
push
push
push
call
push
add
mov
push
call
incl
jns
mov
add
xchg
push
mov
pushf
add
ret
popf
add
fcmovnbe
jmp
loopne
add
lret
mov
jae
jmp
add
add
roll
add
mov
xchg
ja
mov
add
les
add
loopne
lahf
out
mov
add
filds
mov
sub
mov
xor
xor
push
push
push
push
push
push
call
jp
js
enter
incl
add
test
mov
sti
mov
mov
mov
in
lock
add
add
add
add
mov
into
add
out
incl
add
bound
lds
mov
incl
jb
fadds
mov
mov
mov
push
cltd
xchg
mov
test
pushl
nop
shll
decl
mov
jl
mov
sub
shl
push
ror
pop
xor
shl
xor
push
xor
dec
rol
pop
shl
xor
mov
push
push
push
call
pushf
fcos
incl
incl
jp
test
movb
inc
testl
call
incl
mov
mov
int
incl
sar
test
out
add
xchg
push
jb
cltd
icebp
fcomps
ljmp
jns
popa
fdivr
fildl
xchg
add
push
ljmp
enter
loopne
jp
add
in
lock
incl
inc
hlt
pop
pop
push
shl
sub
pop
pop
pop
leave
push
ror
shr
pop
ret
push
push
call
enter
add
add
mov
push
add
addb
pop
add
icebp
lods
enter
add
iret
add
lcall
add
mov
sahf
popa
lods
add
lahf
add
icebp
in
mov
scas
cli
stc
mov
incl
jmp
add
ljmp
pop
stos
stos
addb
add
incl
xchg
repnz
add
cmpsb
popl
add
stos
add
sub
incl
decl
add
add
imul
jmp
aam
add
incl
add
add
add
flds
stos
push
lods
xchg
mov
add
sahf
mov
add
jns
pop
mov
add
push
add
fldl
add
fiaddl
test
xchg
add
aad
pushl
ljmp
ljmp
clc
push
push
push
push
push
push
push
call
mov
jl
pop
add
jmp
sub
push
mov
incl
jp
add
leave
xchg
push
push
pop
add
repnz
add
into
movsb
jle
lret
fcompl
popf
shrl
incl
decl
add
mov
add
test
mov
sub
push
push
call
add
je
test
rolb
cmpsl
bound
add
sub
add
fmul
xchg
add
les
mov
clc
mov
jmp
gs
incl
mov
add
push
cmpsl
loope
add
add
pop
add
ljmp
fcmovu
sarl
in
clc
mov
push
add
pop
mov
push
push
push
push
push
push
call
mov
loopne
pop
flds
add
decl
incl
lods
add
lcall
incl
mov
enter
movb
lcall
pushl
add
fcoms
xchg
mov
incl
pop
jp
add
jecxz
jmp
incl
pop
call
ljmp
add
add
clc
jns
mov
sub
mov
push
push
push
push
push
push
push
call
imul
incl
add
lods
add
mov
mov
mov
ljmp
push
mov
add
jo
add
clc
mov
add
add
scas
add
jge
add
add
add
mov
call
out
add
add
fdivrs
decb
mov
sub
test
je
push
call
pop
mov
mov
add
rcrb
xchg
add
add
lcall
mov
add
add
pop
lods
mov
out
js
shrb
call
sahf
lahf
cwtl
add
add
incl
add
call
lock
movsb
fnsave
xlat
push
std
lods
jp
mov
decl
decl
je
push
sub
pop
mov
mov
push
push
push
push
push
push
call
rcr
loope
jmp
enter
call
jge
cli
stos
xchg
enter
jns
fcmovb
testl
jns
incl
add
andb
add
add
add
add
les
add
add
movsb
lods
lret
scas
add
ret
fadds
inc
mov
sub
mov
push
push
push
push
push
push
push
push
call
fsubrp
add
scas
lcall
in
out
lcall
lcall
loop
cmpsl
insb
popl
cmpb
loopne
mov
xchg
cmpsb
xchg
push
shll
mov
stc
add
mov
mov
testl
lcall
aad
test
push
xchg
push
sarb
push
into
jb
add
inc
cmp
je
push
push
call
jno
add
jae
mov
push
mov
inc
movsl
test
mov
decl
add
jo
test
mov
iret
add
jne
add
sti
sbbl
lahf
add
movsb
incl
add
addl
mov
cwtl
add
cmc
mov
sub
test
je
mov
push
pop
inc
push
xor
not
sub
sub
pop
cmp
je
test
jne
xor
push
dec
pop
pop
push
dec
not
pop
pop
pop
pop
push
push
push
push
push
call
add
add
mov
add
add
xchg
lcall
negl
cmp
fcmovb
push
popf
add
add
jmp
push
mov
add
mov
lods
clc
jmp
mov
test
lcall
js
divb
add
scas
jne
add
add
add
push
clc
pop
lods
fdivr
call
add
jmp
cli
test
xchg
decl
dec
push
add
shl
pop
ret
push
shl
pop
mov
push
lea
lea
inc
pop
inc
push
sub
shl
shr
pop
cmp
jne
push
add
pop
lea
push
add
shl
pop
mov
test
je
mov
push
rol
dec
pop
add
cmp
jne
push
push
push
call
pusha
popf
movsb
in
add
pop
xchg
add
mov
call
incl
test
add
add
popa
add
test
mov
jmp
add
popa
fisttpll
add
cwtl
add
sahf
mov
incl
popf
add
jmp
outsl
mov
incl
push
add
lea
mov
fiadds
sar
pushl
enter
sub
mov
push
push
push
push
push
call
int
mov
jl
incl
rcr
add
incl
mov
push
cwtl
ja
ljmp
pop
addl
inc
ja
mov
push
pop
movsb
mov
call
jnp
mov
imul
in
mov
cmpsl
add
add
xchg
test
add
fcomps
add
incl
add
mov
add
push
dec
xor
shr
pop
cmp
je
push
dec
lea
shr
pop
jmp
push
push
push
push
push
call
cli
out
pop
add
out
mov
test
call
xchg
add
lcall
cld
mov
mov
add
fdivr
pushl
lret
push
mov
repnz
incl
xchg
mov
add
rclb
pop
mov
mov
mov
add
add
jmp
jb
fsubrp
mov
imul
mov
sub
xor
pop
pop
push
sub
sub
dec
pop
pop
push
sub
shl
shr
pop
pop
leave
push
push
push
push
push
push
push
push
push
call
and
scas
add
mov
fldl2t
in
mov
stos
repnz
mov
mov
arpl
jmp
mov
popa
fildl
mov
add
addl
imul
add
mov
inc
add
fs
pushf
mov
js
pushf
mov
ljmp
incl
inc
or
lea
pop
push
pop
pop
push
push
call
fiadds
xchg
in
add
jp
add
cld
add
insb
add
add
movl
push
xchg
mov
incl
push
jge
add
incl
jecxz
add
mov
pusha
lods
nop
add
push
mov
mov
push
mov
jnp
xchg
add
mov
add
incl
cwtl
jb
mov
mov
sub
pop
push
xor
rol
pop
pop
push
call
jnp
ret
pushl
decl
clc
lret
arpl
cli
lods
xchg
add
add
out
movl
jle
push
push
popf
add
shrb
add
incl
mov
add
int
add
jno
clc
add
incl
lret
push
mov
mov
add
jle
aad
fadds
incb
mov
in
clc
leave
ret
mov
push
push
push
push
push
push
push
push
push
call
add
test
pop
mov
ja
ljmp
add
call
pushl
ljmp
rorb
rol
add
je
andb
push
arpl
fwait
add
jmp
call
add
add
loope
add
ret
jmp
lcall
pushf
add
nop
push
out
pusha
mov
mov
sub
pop
pop
push
push
push
push
call
add
push
add
pushl
incl
test
add
add
ljmp
add
jns
mov
call
add
fcomp
add
jae
sti
mov
imul
push
cmpsl
jo
incl
xchg
add
add
add
jbe
fucomp
test
in
lcall
push
push
push
call
stc
push
cmp
pushl
test
out
xchg
add
xchg
les
ja
les
roll
add
add
pop
add
add
call
jmp
test
mov
cmc
scas
addl
add
add
mov
mov
push
in
add
add
mov
jl
pop
clc
orl
dec
push
push
push
push
push
push
call
add
lcall
xchg
lcall
cwtl
mov
mov
add
add
mov
call
add
add
shl
add
add
pop
add
add
fistl
mov
add
lret
lcall
add
xchg
pop
mov
fildl
movsb
add
call
or
out
add
add
add
mov
outsl
mov
sub
ret
rol
push
push
call
add
sub
incl
add
push
mov
ja
ret
lcall
add
leave
mov
add
dec
add
add
jns
add
push
add
rcll
les
icebp
jb
lcall
jb
icebp
add
movb
sti
add
incl
test
call
add
jno
add
xchg
incl
mov
add
enter
mov
sub
rol
xor
inc
push
sub
sub
pop
cmpb
jne
ret
and
iret
ja
cmp
ja
sbb
ja
sbb
ja
sbb
ja
or
ja
or
ja
jp
ja
movsb
out
ja
cmp
ja
cmp
ja
mov
shll
jp
ja
jbe
ja
test
mov
or
push
or
jb
fldenv
sub
push
cmp
and
daa
mov
insb
add
out
out
cld
xorl
or
cmp
mov
sub
push
push
inc
adc
mov
or
inc
cmp
xor
add
and
inc
jp
inc
add
and
xor
pop
push
repnz
lret
xor
cli
cmpsl
push
xchg
rcrl
mov
jmp
cltd
push
pop
dec
test
cmp
mov
jno
push
mov
ja
jne
adc
sbb
and
sbb
shl
xor
sbbb
xchg
adc
mov
pop
sti
clc
adc
xchg
stos
negl
sbb
mov
movsl
sar
cwtl
lcall
jbe
cld
popa
sbb
fucom
push
jle
sti
prefetch
repz
lods
inc
push
add
cmpsb
xorl
pop
imul
aas
pop
aam
dec
subb
pop
stc
mov
ds
decb
mov
mov
adc
cmpsl
xor
in
and
mov
pushf
jns
repz
arpl
scas
pop
push
lea
sbb
scas
lock
subb
add
bound
push
outsb
mov
dec
or
sub
fdivrs
jmp
cmpb
or
sbb
cltd
fdivrs
aad
add
js
test
lods
pop
sub
loope
xchg
pop
out
jp
lahf
popa
fldenv
xchg
cmp
push
test
rolb
inc
into
orb
mov
xlat
std
sbb
push
mov
mov
cli
pop
stos
pop
lea
mov
sub
aaa
ljmp
adc
in
jge
xchg
outsl
push
dec
ret
subb
mov
sarl
lock
or
std
scas
call
cld
cltd
mov
test
shll
sbb
shlb
gs
lcall
out
inc
push
les
daa
icebp
pop
enter
fwait
inc
aam
and
add
cmpsb
bound
leave
out
xchg
es
push
fcmovne
sub
dec
inc
mov
nop
xor
shll
shlb
loop
sbb
dec
sbb
add
mov
jge
scas
mov
and
cwtl
mov
in
inc
or
or
imulb
jle
xchg
and
stc
aam
pusha
or
fsubrl
xor
iret
loope
pop
push
sbb
lcall
ffree
out
sub
out
js
into
jl
addb
push
lea
in
sbb
fnstsw
dec
xlat
cmp
test
or
data16
cmp
pop
xlat
xchg
mov
mov
cmp
push
push
negb
mov
mov
cmp
xor
mov
fdiv
loope
mov
pop
lahf
sahf
xor
data16
aas
mov
sub
adc
xchg
adc
movb
jle
push
sub
jecxz
xchg
xor
add
jle
jae
xchg
xchg
push
fsubrp
lods
sub
sbb
repz
inc
lds
lret
cmp
adcl
jecxz
add
pop
iret
imulb
xchg
inc
pop
push
pop
lret
imul
xchg
push
pop
shrb
sbb
fisubrs
sub
dec
out
xchg
arpl
jne
repz
cmp
aas
imul
adc
pop
jmp
imul
cmp
jmp
ljmp
xor
pop
std
pop
lret
pop
lea
inc
pop
cltd
dec
lea
iret
je
and
sub
xor
nop
xlat
sbb
push
mov
sbb
xor
addr16
mov
add
out
jne
int3
das
mov
or
lods
jle
pop
rcrl
cmp
push
cmp
aam
outsb
jp
pop
mov
nop
fists
cmp
out
fs
mov
movsb
and
jns
dec
pop
lret
sbb
pusha
ret
inc
cmp
xor
pop
fsubrs
lea
jns
cli
lods
jns
xlat
jno
adc
fidivs
xchg
adc
call
aas
fistpll
inc
fstpl
jl
inc
sarb
aam
jg
sub
in
jne
jge
pop
mov
jmp
xchg
loopne
dec
nop
lcall
xor
mov
daa
mov
dec
mov
or
or
clc
mov
mov
je
sbb
movsb
dec
and
cmpb
jecxz
or
push
sbb
inc
sbb
scas
int3
in
andb
test
adc
cld
clc
loopne
cwtl
mov
nop
and
scas
cwtl
sbb
dec
push
nop
ds
int
les
in
sub
mov
pop
std
or
pop
in
stos
sub
cmp
jae
xchg
insb
in
xor
xchg
test
add
xlat
ss
inc
or
and
cmpsl
into
cs
mov
mov
test
adc
dec
or
sarb
xchg
xor
dec
adc
xor
hlt
movsl
out
adc
mov
call
lock
scas
jmp
mov
jmp
ljmp
jb
lret
aas
loop
mov
inc
mov
mov
fiadds
jnp
inc
pop
push
push
mov
dec
clc
xchg
js
mov
orb
or
mov
adc
imul
std
inc
mov
fimull
dec
rcrl
xchg
es
mov
sub
pop
jle
sub
add
xchg
es
or
insl
pop
cs
sbb
and
ror
mov
mov
in
lock
or
lds
popa
pop
mov
mov
push
mov
lahf
sbb
push
mov
xchg
cmp
push
dec
lods
xor
dec
cli
mov
leave
dec
popf
adc
adc
leave
mov
shrl
sub
and
xchg
sub
cmp
aam
aaa
pop
jb
add
aam
inc
jecxz
in
enterw
ret
add
bound
mov
ud0
sbb
call
clc
ja
inc
cmp
xchg
cmp
push
sbb
xor
cmp
pop
ret
jg
mov
enter
mov
inc
icebp
xchg
ja
jb
sahf
gs
sub
cmp
bound
repz
xchg
fwait
mov
roll
fldenv
and
es
jle
or
jg
test
mov
iret
hlt
adc
inc
add
roll
mov
mov
lods
loopne
test
test
mov
pop
js
lods
out
scas
sti
push
fisttpll
jl
adc
scas
mov
into
push
ss
xor
subb
cli
inc
and
mov
sbb
jmp
outsl
mov
mov
mov
out
int3
mov
aas
cs
xchg
jo
mov
lret
ljmp
jae
push
lea
cld
es
jecxz
sti
ja
mov
dec
cld
lahf
rcll
imul
bound
mov
mov
out
pop
test
outsb
or
inc
xchg
hlt
lods
lods
sub
xlat
fstpt
lcall
inc
jne
adc
pop
jg
shlb
push
xor
aam
lods
inc
popf
cmc
ja
sub
inc
aaa
push
outsb
ja
sub
aad
pushf
and
notb
jl
pusha
adc
push
pop
jae
cmp
cli
sbb
popa
sahf
pushf
xchg
cmpsl
test
cmc
cmp
gs
pop
inc
mov
pop
push
jl
xor
push
mov
lods
sub
pop
adc
ret
or
adc
or
sbb
out
add
lea
dec
sbb
jge
into
enter
push
lahf
xchg
dec
in
mov
leave
xchg
pmullw
adc
stos
int
inc
les
orb
sarb
cmp
loope
gs
out
cmpsl
cli
mov
lcall
test
push
cmp
adc
add
adc
shlb
ret
sbb
mov
and
push
cmp
mov
adc
pop
sbbb
in
push
sub
adc
lret
pop
rolb
sti
sbb
xor
cmpb
outsb
inc
inc
mov
jecxz
repnz
fbld
stc
sub
or
push
out
sbb
mov
int3
inc
ret
mov
sub
stc
lock
cmpsb
push
int3
repnz
es
xchg
cmc
imulb
fmul
jle
xor
test
das
push
mov
scas
push
stc
or
push
test
xor
lods
dec
adc
or
test
loopne
and
sbb
lock
and
mull
mov
push
or
icebp
adcl
lahf
jne
pop
inc
out
jns
shll
inc
ficoml
shlb
xchg
fwait
stc
add
mov
scas
mov
imul
into
cmp
mov
sbb
push
lock
mov
sub
and
sbbl
das
ljmp
dec
mov
clc
pop
das
xchg
cld
and
fistpl
cltd
push
ret
jae
push
mov
and
js
sbb
arpl
and
xor
xor
fldt
cmp
aaa
in
dec
fwait
into
clc
rcrl
dec
push
sbb
xor
pop
std
jl
dec
test
dec
jge
xchg
subl
imulb
lcall
shl
and
test
pop
mov
push
rcrl
jmp
arpl
cmp
mov
loope
push
scas
dec
roll
jl
nop
movsb
mov
and
push
add
push
je
push
jae
push
addr16
shl
call
hlt
daa
xchg
repnz
inc
xchg
pop
jmp
test
ds
mov
jo
sahf
jne
push
pmulhuw
test
add
iret
ljmp
xor
xchg
call
mov
les
arpl
cld
movsl
xchg
jge
out
jl
fcmovnu
stos
dec
or
fadds
nop
sbbl
add
mov
shrb
sub
out
pop
ds
xchg
mov
mov
pop
add
out
mov
sahf
inc
mov
jl
xor
imul
cmp
lahf
frstor
in
xchg
and
aas
mov
lds
leave
inc
lcall
je
jnp
adc
sbb
divl
jg
and
sbb
adc
mov
fldt
in
xchg
sbb
dec
sub
les
dec
sbb
stos
out
mov
std
sbb
pop
lds
movsb
or
nop
mov
sbb
js
gs
add
mov
loop
push
mov
push
bound
mov
adcl
inc
sub
inc
fisttpl
cli
repnz
sub
adc
push
mov
xor
cli
push
mov
push
popa
push
cs
add
enter
pop
cmp
sub
add
dec
arpl
call
dec
loopne
lods
mov
pop
shr
jnp
pop
pop
push
mov
movsl
into
test
dec
jae
insb
inc
sub
xor
cmp
and
add
shrl
popf
iret
mov
xlat
mov
mov
insb
mov
lret
mov
sbb
jmp
xor
fnsave
mov
es
mov
jbe
xor
add
add
fsubrl
nop
mov
and
call
or
push
cs
cmp
jp
hlt
mov
notb
push
sub
iret
and
arpl
icebp
out
pop
mov
popa
ljmp
dec
cmp
xadd
xor
fidivs
popf
sub
movl
xchg
jl
adc
xchg
pop
lret
cmp
jecxz
mov
test
pop
testb
mov
std
cli
icebp
pop
mov
scas
in
dec
and
les
or
addr16
aad
jecxz
and
les
mov
pop
das
add
cli
int3
cli
and
mov
in
xchg
sar
outsb
xlat
je
je
jmp
loope
add
sub
sarl
push
incl
fdivrl
out
lds
sbb
adc
or
testb
sti
sbbb
data16
insl
xor
jns
xchg
enter
in
xor
jecxz
inc
push
jnp
js
jge
and
jecxz
inc
pop
dec
jge
adc
sbbl
adcb
inc
cmp
shrb
jo
pop
ret
lret
xchg
fidivrs
shlb
inc
int
ret
push
push
fcomi
loope
xor
leave
loope
or
xchg
pop
push
push
gs
jnp
sub
sbb
insb
daa
jae
mov
arpl
nop
mov
loop
pushw
and
scas
pop
scas
and
jno
data16
push
and
xlat
jmp
cmp
push
mov
insl
int
push
sub
push
mov
cltd
daa
xchg
add
idivl
icebp
in
dec
gs
es
test
push
test
rcr
data16
int3
out
test
or
test
or
mov
cmp
movsb
sbb
repz
in
xchg
jle
enter
movsl
pop
loop
outsb
xor
ficomps
test
xor
inc
xchg
dec
pop
push
or
fs
jl
dec
sub
lcall
shll
test
lds
scas
ljmp
or
sbb
outsl
inc
inc
orb
pop
fiadds
stos
push
xchg
or
stos
dec
outsb
aas
into
push
dec
repz
inc
outsl
sbb
das
ds
push
jecxz
loope
push
xchg
fs
insb
mov
inc
iret
cld
in
fdivrs
stc
loop
addr16
js
lods
cmp
or
imul
inc
push
xorb
or
in
cld
push
sub
add
shll
xchg
out
scas
pop
outsl
pop
xchg
push
jecxz
addr16
push
jo
jmp
and
mov
xor
out
or
mov
mov
xor
jmp
fucomp
push
dec
cwtl
testb
pushf
leave
in
xor
or
iret
and
les
mov
mov
mov
mov
push
xor
jo
mov
mov
iret
stos
pop
xor
xchg
stos
and
cli
inc
outsb
adc
pop
mov
jns
mov
flds
test
mov
xchg
repnz
movsl
int
daa
pop
or
test
outsb
dec
xor
test
sbb
dec
rcrb
pop
imul
test
idivl
sbb
pop
inc
xchg
add
bound
xor
xor
ret
das
xor
and
push
xchg
pop
out
xchg
addr16
aam
mov
leave
cwtl
jl
rcrl
mov
call
nop
jle
sbb
cmpsl
mov
ds
ret
xchg
imul
push
cmp
or
add
fwait
int3
aas
test
addr16
or
dec
jp
adc
mov
jge
jne
lret
sti
out
xchg
or
and
fldt
add
mov
mov
sbb
push
loopne
push
cli
pop
imul
arpl
push
pop
cmp
push
pop
sahf
cmp
addr16
fdivs
or
out
js
and
dec
cmp
repnz
aaa
jge
cmp
and
cmp
xchg
mov
das
clc
stc
pop
pop
sub
sub
sbbl
mov
aam
mov
mov
mov
push
xchg
rorl
lcall
sub
aad
cmp
iret
lock
ljmp
or
lret
sbb
sbb
adc
cmpsl
dec
inc
divl
aam
jecxz
cltd
daa
lods
test
pushf
xchg
pushf
inc
and
movsb
subb
mov
dec
push
add
sub
jge
or
xor
scas
pop
lods
pusha
es
ljmp
ljmp
clc
push
jge
call
mov
mov
stc
cmp
add
xchg
loopne
outsl
push
mov
sti
sub
mov
adc
dec
ljmp
inc
or
ret
sbb
jmp
push
bound
leave
inc
movsb
popf
je
je
shll
sub
rolb
inc
xchg
xchg
mov
mov
orb
fstpl
push
gs
cmp
clc
fdiv
bound
xchg
pop
lret
push
xchg
pop
sti
mov
push
int3
out
mov
loop
clc
cmp
fucom
das
mov
fnsave
pusha
pushf
int
jae
negl
movsb
movsb
popf
insb
sarl
push
dec
jae
add
scas
scas
cwtl
xchg
hlt
in
mov
aaa
push
clc
xchg
mov
fdivr
rorl
movsl
mov
inc
jp
push
lods
adc
fs
mov
sub
lock
mov
popf
sub
cmp
bound
jne
lods
inc
xlat
cld
add
popa
xor
orb
sahf
sub
push
repnz
cmc
aas
inc
mov
inc
push
mov
loope
lods
hlt
push
enter
xchg
out
dec
xorl
imul
out
cltd
daa
test
xchg
jecxz
jg
push
cs
ss
daa
repz
mov
daa
pop
bound
sub
inc
loopne
xchg
or
dec
fildll
js
mov
fs
movsl
mov
mov
jmp
push
loopne
daa
nop
inc
pusha
dec
sbb
ret
pop
test
nop
jle
pop
mov
xchg
mov
add
sbb
xor
lcall
jmp
cmp
aas
in
xchg
movsw
adc
push
adc
out
rorb
nop
ljmp
inc
cltd
inc
lea
neg
es
adc
aaa
mov
push
dec
pop
mov
lods
dec
popa
cmp
and
jb
outsl
ret
adc
mov
mov
mov
popf
fists
mov
dec
jmp
xchg
mov
xchg
fdivr
popa
lahf
and
or
sti
cmp
in
jnp
mov
xor
jge
outsl
mov
fidivrl
jl
sbb
arpl
push
stos
push
pop
jne
or
vmread
xchg
insl
cmc
gs
out
dec
lods
jg
sub
fwait
dec
xor
sbb
icebp
int
fildl
sub
sbb
arpl
movsl
cltd
cmp
inc
sub
xchg
dec
pop
insl
decl
fcompl
cmp
das
xchg
scas
call
xchg
seta
jp
dec
sub
jmp
incb
dec
jp
shrl
push
outsl
insl
pusha
push
call
jle
mov
pop
mov
xor
xchg
pusha
rcrb
insb
or
sub
jo
adc
dec
aam
mov
mov
je
xchg
sbb
inc
jo
sub
pop
push
lds
int
jo
fdivrl
into
cmp
fisubs
dec
jno
cs
lock
aaa
jne
mov
push
stos
dec
xor
imul
adc
dec
xor
inc
pushf
pop
jmp
imul
cmp
push
pop
pop
add
cmpsl
clc
ds
push
xchg
fidivrs
dec
adc
and
adc
loopne
add
sahf
and
mov
and
in
jl
stos
aad
popa
lret
daa
push
push
es
out
mov
mov
adc
jecxz
or
and
push
push
mov
sub
arpl
scas
or
fcmove
inc
int
inc
mov
sbb
push
xor
push
cmp
pop
fndisi(8087
sbb
ret
out
mov
mov
pop
jl
loope
cltd
cs
add
or
rcll
pop
inc
iret
aad
dec
call
pop
scas
mov
data16
mov
faddl
xor
cmpsl
and
out
inc
xorb
int
sub
jne
inc
push
push
pusha
jmp
outsl
cmp
adc
js
outsl
push
ljmp
and
or
lods
ss
mov
cwtl
sbb
pop
push
jl
dec
inc
stos
push
mov
fbstp
add
int3
arpl
rcr
int3
sbb
jg
add
outsl
mov
int3
lds
out
lret
fs
std
adc
sti
int3
adc
jl
dec
stc
popa
fstpl
fs
xchg
mov
inc
pop
xor
insl
call
push
rcrl
and
xchg
ret
jmp
mov
and
stc
call
mov
sbb
inc
nop
push
xchg
jecxz
rcl
xor
xchg
xor
xor
mov
inc
pop
stos
popfw
fs
mov
sbb
jnp
adc
imul
inc
or
addr16
xor
fucomi
push
mov
pusha
mov
ret
jno
test
xorl
cltd
loop
jg
xor
fwait
dec
jge
ret
pop
cld
arpl
mov
incl
pop
fidivrl
cmpsb
or
ss
lods
push
mov
mov
aaa
or
mov
push
aam
pop
pop
test
mov
xorl
das
pop
cltd
ret
add
pop
xchg
out
jl
xor
int
lods
or
data16
sub
pushf
xchg
pop
int3
pop
lods
cmp
jp
rcll
fstps
imul
jo
cmp
push
pop
gs
adc
pop
pushf
pusha
lahf
xor
xchg
and
add
ljmp
cmp
out
and
lret
mov
sarb
add
fistps
lret
dec
push
push
sbb
xor
pop
dec
mov
stc
arpl
daa
ret
sbb
add
sub
add
mov
push
bnd
sbb
iret
adc
flds
jno
mov
and
and
cli
mov
or
sub
xchg
xor
adc
add
pop
out
push
and
mov
aas
stos
sahf
and
ror
adc
dec
mov
sti
int3
mov
mov
into
out
cmp
out
add
dec
add
jb
or
clc
out
mov
push
dec
pop
notb
push
loope
cmp
rorb
cltd
and
fistl
adcb
inc
scas
rcrb
sub
mov
mov
sub
mov
add
outsb
mov
popf
push
aad
jg
inc
fwait
aas
jmp
jmp
scas
lds
or
sar
xchg
pop
cmp
subb
dec
xor
aam
xchg
and
pop
dec
mov
dec
lods
insl
test
lret
incb
mov
cld
scas
bound
leave
mov
sbb
movsl
insb
dec
inc
movsb
xchg
push
and
or
stos
pop
or
jmp
cmp
ljmp
aad
out
mov
inc
lods
daa
sarb
jne
inc
insb
push
imul
insb
fs
mov
jno
popa
rolb
inc
and
xor
sbb
je
sub
aam
pop
mov
pop
loop
mul
pop
stos
mov
das
xchg
xor
rorl
mov
lret
in
lea
mov
out
sti
or
fstps
adc
icebp
lock
fs
mov
int3
cmpsl
xchg
lds
shlb
sub
xor
push
pop
pop
mov
mov
xor
arpl
nop
mov
add
jmp
add
or
add
jecxz
shll
out
lcall
inc
pop
scas
jnp
jmp
dec
jae
fnstenv
mov
pop
loope
sub
or
int
push
sub
xorb
int
sbb
out
sub
inc
ficoms
push
push
test
cmp
das
and
sarb
and
lods
shl
into
jns
sub
rolb
inc
scas
fidivrs
jns
test
sbb
dec
mov
jb
adc
imul
push
repnz
repnz
cmp
xor
sbb
jg
fidivrs
je
mov
rcl
xor
cmp
int3
pusha
cmc
and
pop
insl
mov
in
es
push
call
add
mov
cli
mov
inc
leave
sarl
mov
pop
insb
dec
inc
lcall
cmp
inc
jecxz
in
push
xchg
pop
or
sbb
lret
mov
pop
sarb
xor
repz
ja
mov
in
sub
lds
jbe
pop
data16
pusha
xor
lock
xchg
loopne
das
xchg
or
dec
in
nop
test
pop
adc
fsub
daa
stos
inc
dec
inc
dec
ret
leave
adc
xor
cli
and
cltd
xchg
imul
loopne
das
push
fcmovu
ret
xor
cmp
inc
dec
push
inc
out
bound
in
pushf
jmp
push
sub
pop
cmpsb
inc
fmull
in
jns
jbe
pop
int3
dec
add
mov
cwtl
jb
xor
movsl
xchg
jb
mov
aad
lods
jg
movsl
cmp
sbb
addr16
cmp
icebp
js
push
adc
and
in
dec
adc
xchg
adc
mov
dec
ja
popf
out
pushf
adc
xchg
mov
sbb
js
sbb
add
inc
xchg
fucomip
and
test
add
hlt
and
or
lret
ret
mov
in
lea
jge,pn
int
les
pushf
mov
inc
cmpsb
ds
mov
imull
sbb
push
mov
mov
cld
or
push
scas
jg
sub
sub
and
lds
fs
leave
and
sti
push
add
fwait
xor
cmc
out
sti
cli
cltd
cmpl
jg
test
out
divl
fxch
jg
inc
push
mov
pop
push
ja
js
scas
push
push
jg
test
dec
or
sub
inc
mov
mov
mov
inc
and
push
stos
mov
pop
push
mov
mov
or
push
fistpl
faddl
mov
xlat
lods
mov
int3
push
in
scas
mov
loopne
mov
outsl
dec
popa
clc
data16
fdivr
jge
or
add
popa
or
mov
mov
daa
int3
aad
sbb
into
icebp
loope
inc
adc
shrb
pop
dec
push
in
inc
jno
in
test
xor
subl
aas
or
dec
mov
sub
xor
daa
inc
fs
sub
rcrb
mov
mov
loope
push
mov
mov
cmc
jno
pop
mov
aad
mov
sbb
hlt
js
cmp
xchg
add
cmpsl
xor
test
lcall
test
mov
sti
mov
stc
cmp
push
xlat
sub
push
in
xchg
lcall
cmp
test
bswap
movaps
xchg
mov
pop
iret
int3
in
jge
rcrb
mov
sub
xor
mov
adc
push
sbb
outsb
and
leave
pop
int
inc
movsb
jmp
sub
hlt
adc
shrb
pop
and
mov
repnz
stos
fwait
mov
lret
aas
mov
popa
loopne
ret
mov
and
addr16
aas
sti
xchg
je
adc
adc
push
mov
sar
mov
xlat
iret
xchg
sbb
nop
roll
scas
imul
jecxz
hlt
ret
jo
test
test
sti
sbb
adc
and
pop
dec
cs
std
adcl
sarl
mov
sti
pop
rcrl
cld
push
lahf
cmp
push
jne
rolb
pop
mov
sete
dec
and
popa
push
lahf
push
hlt
adc
pushf
sbb
sub
in
push
cltd
into
call
xchg
sbb
stc
pop
add
push
xor
ret
and
mov
mov
mov
or
pop
dec
xor
xor
jns
cmp
insl
lods
push
add
mov
add
clc
dec
dec
cmp
add
decl
ljmp
aas
mov
loop
ljmp
pop
cwtl
mov
xor
pop
cmp
inc
push
push
pop
xor
sbb
jmp
shr
mov
push
std
pop
notb
mov
push
fmul
mov
cmp
rcrb
enter
cwtl
andb
push
lds
push
xlat
adc
mov
je
mov
and
inc
inc
fbld
stos
test
xlat
sub
loop
xchg
push
sbb
inc
insl
enter
movsl
cmp
jecxz
mov
jp
dec
imull
push
mov
leave
in
stos
out
repz
jne
loop
lcall
xchg
add
or
imul
mov
add
pop
daa
dec
or
into
sar
pop
mov
js
out
xor
aam
int3
cmp
cwtl
xchg
cmp
cwtl
movsb
mov
aam
sub
js
bound
jge
scas
jmp
mov
lods
xor
jp
jmp
xor
fdiv
int
and
cmp
lret
inc
cmpb
mov
js
decl
sub
pop
or
pop
enter
cmp
dec
and
dec
sub
stos
cwtl
shlb
pop
mov
js
push
mov
push
jecxz
xchg
xchg
jecxz
aas
decl
stos
push
loopne
cmc
dec
cmp
inc
mov
xchg
jae
in
inc
xor
mov
lods
mov
adc
dec
divl
sarb
in
lret
aad
daa
vmovhpd
shlb
and
xchg
fdivs
sbb
pop
movsl
dec
pop
repnz
jnp
cmp
mov
jbe
fldt
iret
pop
ret
xchg
adc
int
xchg
shrb
loopne
mov
adc
push
mov
adc
lods
iret
std
add
aaa
fs
inc
add
adc
xchg
and
loopne
xlat
cltd
imul
adc
nop
pop
and
inc
not
outsl
adc
jg
in
sub
cmp
xchg
mov
stos
je
enter
addr16
pop
lock
aaa
push
sti
outsl
call
sbb
sub
mov
xchg
fmull
xor
cmp
xchg
insl
push
sbb
push
fimuls
sub
out
cmp
mov
mov
into
int
cmp
push
fucom
sub
fdivl
and
popa
xchg
or
das
int
insl
ret
push
xor
and
fisttpl
sti
pop
in
jg
push
sub
in
cmp
lods
insl
mov
pusha
pop
xor
xchg
jb
pusha
jnp
add
pop
int
enter
outsb
pop
mov
imul
nop
shlb
test
adc
push
xchg
sbb
popf
sub
jo
jecxz
push
imul
hlt
jo
adc
fstl
push
outsb
mov
and
testb
or
cmp
xchg
or
add
fdivs
jmp
xor
mov
aad
out
call
mov
leave
adc
jmp
pop
or
xlat
mov
into
and
mov
daa
enter
ja
pop
or
and
push
sahf
fwait
das
add
scas
bound
test
pop
adc
movsl
dec
lock
and
jmp
adc
dec
xchg
jo
cmp
das
iret
pop
xor
ret
jbe
and
shl
sub
cmpl
add
mov
cmp
call
iret
scas
insb
jbe
mov
xor
loopne
movsb
fwait
ds
or
test
imul
lcall
jecxz
add
xor
inc
les
adc
xor
inc
add
fs
jg
cld
mov
neg
int
xor
in
mov
dec
decb
imul
pop
sahf
inc
cmp
loope
add
sub
nop
in
dec
jl
faddl
jge
push
mov
lods
inc
scas
decb
cmp
imul
mov
ss
pop
rol
pop
push
jmp
push
jns
pop
clc
or
and
push
out
mov
add
repnz
in
adc
mov
dec
xor
push
lds
or
cmp
jns
cld
out
sarb
sbb
cs
add
ja
xor
sub
jne
fsubs
fsts
xor
jnp
sbb
mov
fldt
jp
jns
js
es
mull
mov
es
jae
icebp
aad
ret
mov
rol
icebp
adc
or
out
jns
mov
fimuls
shlb
test
xchg
sbb
adc
sub
mov
cmp
imulb
push
adc
out
sbb
mov
and
fdivrl
xor
lret
pop
and
cli
xchg
inc
pop
jecxz
jg
aas
daa
insb
or
mov
xor
pop
into
push
and
mov
mov
insl
xor
hlt
movsb
jp
inc
icebp
inc
mov
jo
pop
jle
xor
mov
push
hlt
push
mov
cwtl
xchg
jae
sbbl
test
fs
dec
outsb
int3
adc
lock
cwtl
push
in
pop
aam
jbe
pushf
mov
es
or
push
dec
pop
in
lds
xor
rol
insl
cwtl
arpl
test
push
ljmp
fisubrs
mov
inc
xlat
enter
movsl
rorb
jnp
movsl
test
jbe
sub
in
adc
and
fmull
push
sarl
inc
push
jmp
cmp
shrb
addps
nop
fyl2xp1
js
repnz
cmp
cmpsl
pushf
add
aam
js
sub
stc
cli
push
jmp
fcomps
or
mov
lea
shrb
xor
sahf
lcall
mov
push
notb
adc
dec
push
jmp
xchg
imul
jp
xor
stos
sbb
mov
pop
dec
arpl
repz
cmp
scas
push
sbb
in
push
mov
outsl
dec
pop
jp
cli
jae
cs
pop
add
je
inc
lea
lds
sub
or
and
lcall
test
pushf
sahf
dec
aaa
adc
sub
inc
dec
inc
loope
call
mov
pop
or
outsb
popa
aad
popf
aaa
lcall
ss
sbb
es
in
adc
imul
mov
mov
pop
adc
and
jg
pop
mov
adc
hlt
lahf
jecxz
mov
mov
push
or
loope
and
sbb
push
test
ja
repz
xchg
gs
jae
pop
imul
popl
mov
mov
outsb
shlb
mov
dec
push
cwtl
in
outsl
repz
sub
popf
jnp
out
cs
sbb
pushf
js
push
adc
and
push
xchg
xlat
cli
and
rcll
mov
pop
mov
stos
dec
fiadds
pop
push
cmpsb
in
push
inc
or
aas
jecxz
ret
in
pop
mov
icebp
add
repnz
xor
and
jo
lock
or
lods
sbb
dec
and
inc
sub
lret
adc
jne
cmc
clc
cli
mov
push
xor
cmp
mov
mov
pop
lods
hlt
fstps
test
cld
adc
stos
xchg
ja
dec
testl
scas
push
ja
and
mov
mov
cmp
shrl
mov
call
adc
push
cvtps2pi
cli
push
pop
jno
sub
aam
mov
mov
add
and
out
outsl
in
dec
cmpsb
dec
pop
mov
push
addr16
push
bswap
cmp
fwait
mov
push
mov
aam
fdivs
cmpsb
mov
sti
popf
movsb
pop
xchg
test
in
shr
test
mov
loop
jb
mov
stc
cs
mov
inc
mov
push
inc
dec
sahf
dec
cld
cltd
push
incb
mov
ret
notl
insb
mulb
xchg
ja
cmpsb
or
loop
fidivrl
mov
cmp
sbb
mov
je
xor
int
bound
push
mov
lock
mov
dec
mov
movsb
pop
jmp
imul
jae
sub
fnop
fcmovu
loope
inc
popa
push
stc
pop
lret
push
loop
mov
aad
or
cli
stos
push
pop
jg
xchg
adc
dec
aas
sbb
fsubrs
mov
nop
cmp
ret
leave
mov
pop
outsb
cli
mov
std
ret
jge
jge
adc
aas
mov
aaa
mov
cmp
bound
jl
cmp
bound
fists
push
js
ret
mov
adc
xchg
fsubl
in
sbb
xchg
stos
shl
shr
cld
loope
shrl
and
mov
shll
or
or
jns
out
pop
push
pop
fldcw
mov
cmp
aad
or
stos
pop
jge
daa
mov
mov
push
pop
jge
add
xor
int
sti
xor
stos
dec
inc
xchg
in
or
into
jecxz
in
sbb
xchg
sub
and
icebp
aaa
pop
sti
mov
adc
add
jmp
in
xchg
xlat
xchg
jmp
fsub
dec
xchg
mov
jb
push
sbb
movsb
push
sbb
aad
pop
and
rorl
push
ljmp
mov
push
sbb
sub
or
out
pop
lods
pop
sbb
cld
xor
sub
sub
lret
gs
cmp
mov
xchg
xor
pop
sub
add
clc
pushf
push
inc
mov
inc
mov
mov
jg
mov
and
inc
push
and
shl
fucomp
push
test
xor
out
jmp
in
jp
push
mov
add
xchg
loopne
add
scas
mov
jle
data16
sar
inc
add
je
pop
push
ret
jecxz
pop
stc
mov
loopne
dec
mov
cmp
cltd
inc
push
iret
fistpll
or
cmpsb
popa
aad
adc
inc
inc
push
push
fs
and
sbb
nop
adc
cmp
mov
int3
enter
mov
cld
jmp
test
jae
pop
cwtl
jge
in
mov
lea
mov
int
pop
dec
push
jecxz
inc
aas
inc
les
leave
test
sbb
fbstp
jge
add
hlt
fimuls
leave
pop
pop
std
loope
sti
mov
lea
jp
sub
testb
dec
cmp
sbb
mov
adc
mov
lret
jecxz
mov
jae,pt
pop
aas
xchg
cld
mov
std
out
mov
jmp
repz
inc
mov
lock
add
inc
xor
xor
push
lret
sub
stc
pop
stos
push
cmpsl
outsl
scas
cmpsl
adc
push
lret
lret
lret
lahf
add
dec
push
xlat
inc
or
add
push
inc
aad
xor
jno
insl
push
xor
mov
test
adc
lret
popa
xor
pop
mov
cmpsl
cmp
mov
in
pop
and
xor
lds
mov
dec
fwait
cmp
test
nop
mov
mov
enter
xchg
lret
sub
xchg
fdiv
cmc
inc
pop
jne
outsl
js
jbe
or
es
jle
mov
sar
int
sbb
imul
aas
adc
mov
add
xor
popf
sbb
cltd
or
or
jge
lds
xchg
insl
stos
push
jmp
loop
faddl
xchg
pop
sub
js
outsl
mov
adc
jmp
add
cmp
loop
sub
mov
cmc
jae
push
mov
imul
cmp
test
aaa
lret
adc
xlat
hlt
aaa
movsb
in
jae
adc
ja
cmp
lods
xor
fnstenv
mov
icebp
jne
cs
call
jns
arpl
mov
clc
lds
lods
test
lods
push
and
jle
ficomps
dec
mov
lahf
lods
adc
mov
pop
shll
push
in
and
arpl
les
rclb
push
jecxz
outsb
sbb
sub
sar
jo
cmp
orl
xchg
mov
or
test
fisubs
jl
fildl
mov
bnd
dec
test
stos
jae
adc
leave
xchg
nop
push
leave
jg
jecxz
sahf
mov
negl
out
scas
jmp
adc
sub
pop
and
pop
mov
arpl
cltd
dec
lds
cmp
push
ret
pop
jbe
iret
mov
pop
cmp
xchg
jmp
mov
ret
daa
push
sbb
pop
inc
cmp
sub
call
mov
pushf
clc
out
pop
lret
sbb
stc
pop
xchg
je
outsl
mov
das
adc
cwtl
pop
call
jb
test
imul
sbb
lcall
subl
ljmp
cmp
imul
sbb
aaa
aaa
pop
addr16
pop
sbb
inc
rcr
lahf
mov
dec
pop
int
xchg
jp
add
add
push
push
add
pop
mov
pop
mov
xchg
cli
fs
mov
into
mov
test
in
call
addr16
sub
adc
sub
mov
mov
adc
xor
addr16
lds
jne
inc
paddsw
iret
xchg
xchg
frstor
rcrl
frstor
test
daa
inc
push
loop
bound
rorl
pop
xor
lret
addr16
popf
gs
ds
scas
pop
lret
fisubl
inc
insl
movsl
jp
mov
mov
ja
or
scas
push
movsb
cmp
lods
xchg
fisttpll
test
cmp
dec
lret
popa
cltd
sbb
sub
jp
adc
popf
or
dec
sub
dec
inc
jle
fs
or
mov
stc
enter
rolb
cld
lret
pop
adc
cmp
cmp
fisubrs
sub
fcoms
outsl
aad
pop
sahf
insb
divb
test
cmpsb
aam
lahf
add
in
icebp
dec
jno
or
int
ror
fwait
lcall
jecxz
ljmp
cmc
xor
xor
dec
mov
cmpsb
or
iret
popf
sub
addr16
and
iret
jo
mov
sbb
sbb
pop
movsb
sub
xor
push
mov
cld
scas
push
add
stos
mov
sub
cld
fcomps
xchg
adc
pop
mov
xor
or
push
faddp
or
mov
lds
jmp
cmp
test
stos
or
push
inc
int
or
inc
int
inc
adc
xor
adc
lea
int3
repz
cmp
and
out
push
add
int
mov
imul
lods
gs
adc
pop
in
shlb
add
pop
xchg
movsl
insl
scas
sub
inc
icebp
add
add
iret
pop
fs
lds
lock
cld
out
dec
je
inc
bound
dec
add
imul
or
ds
inc
cwtl
scas
sub
pop
rorl
add
inc
shlb
and
push
arpl
xor
pop
mov
rcll
mov
lods
das
add
lock
inc
push
adc
inc
xlat
aas
jmp
mov
mov
xchg
pop
bound
ja
xor
jo
fldl
dec
das
jnp
test
xor
cmp
mov
sub
mov
movsb
mov
rcl
pop
sub
jbe
fisttpll
add
imul
shlb
mov
fsubs
lret
call
rolb
cs
adc
and
shlb
ja
int3
mov
mov
fiadds
in
push
cmc
adc
mov
rol
sbb
dec
sub
jl
fildl
adc
and
and
inc
jl
mov
mov
inc
sub
outsl
xor
lret
movsl
inc
out
loop
out
rolb
cli
add
mov
sub
loopne
insb
jnp
jecxz
outsb
push
push
repz
pushf
push
mov
push
cmp
sub
shrb
cli
jp
dec
adc
mov
cwtl
in
lock
or
mov
mov
pushw
ja
mov
push
sahf
add
mov
sub
mov
add
adc
cld
std
xor
loope
fiaddl
push
cmp
repz
adc
daa
dec
pop
call
push
mov
adc
pop
sti
xor
sbb
inc
xchg
pusha
aad
dec
lds
push
ja
and
mov
jmp
jl,pn
fdivrs
jle
stos
fsubl
iret
repz
loopne
cmpsb
xor
cwtl
aas
sahf
cs
gs
cli
loop
pusha
push
std
inc
sbbw
popa
cmp
inc
mov
arpl
and
loope
loop
call
cli
leave
xchg
aas
mov
lea
xor
jno
outsb
stos
loopne
loop
in
out
mov
inc
test
adc
add
in
negl
sub
inc
pop
adc
cltd
pop
cmp
std
mov
dec
lret
xor
stc
lret
xorl
jbe
out
sbb
mov
je
adc
into
inc
stc
xchg
sub
and
sub
mov
sbb
enter
mov
imul
adc
test
push
cld
in
sti
sub
xchg
pop
sbb
iret
cmp
fdiv
mov
xor
xchg
aad
sarb
rcr
cli
mov
and
jae
jmp
cmp
fisubrs
js
mov
cwtl
inc
loopne
jne
mov
mov
sub
scas
push
lds
jb
repz
xor
out
jecxz
fildl
pop
sbb
sbb
lods
repnz
ret
shll
incl
bound
xchg
xchg
lds
sub
dec
out
ja
in
aaa
jge
out
int3
jg
xor
add
and
leavew
xlat
sbb
inc
int
mov
push
cmpb
pop
in
push
cvtps2pi
add
adc
mov
ja
or
mov
pushf
out
adc
add
xchg
push
jns
or
cmp
inc
jmp
cwtl
add
or
cli
mov
inc
push
mov
addr16
rorl
mov
imul
les
fistpl
add
or
pop
repz
add
loope
inc
dec
mov
data16
cmp
adc
jmp
ja
and
dec
inc
lcall
dec
inc
cmp
xor
xchg
cwtl
add
cwtl
mov
in
mov
add
push
cwtl
pop
pop
pop
jne
mov
add
push
call
pop
addr16
and
or
dec
fnstenv
mov
mov
push
test
mov
sbb
and
gs
scas
push
sti
les
iret
cmc
inc
add
stos
cwtl
pop
xor
jns
sbbb
jne
mov
les
jg
repnz
mov
int3
in
sbb
fs
mov
push
mov
stc
dec
or
add
mov
cmpsl
inc
repz
adc
jmp
sub
mov
mov
je
repz
icebp
mov
cmpsl
imul
pop
inc
cmp
addr16
pop
jbe
and
int
sbb
xchg
test
pop
lods
ja
ljmp
mov
xor
push
and
jecxz
popf
add
mov
and
fdivrl
adcb
xor
mov
mov
adc
cli
idivb
jmp
push
pop
fs
fbld
arpl
push
test
push
lock
mov
call
insl
inc
fimull
loop
push
push
lahf
inc
lea
push
sbb
repz
add
shrb
pop
add
push
mov
xchg
adc
cld
pop
pop
xchg
xchg
and
jecxz
sti
push
xlat
repnz
sbb
jmp
push
ja
out
sarl
push
jl
sar
movsl
mov
or
fimull
sub
lods
aam
cmp
sarb
mov
sub
fldt
fnstenv
je
scas
out
jne
xlat
xor
pop
xchg
jp
push
aad
rcll
jge
push
flds
adc
std
xor
dec
push
shrb
aam
stos
hlt
shlb
ss
inc
mov
fists
sub
and
sahf
jmp
test
sarl
push
xor
mov
outsl
cmp
into
mov
js
sub
pushf
inc
test
push
jmp
repz
fisubrl
test
inc
std
jmp
fstp
sub
lahf
loopne
and
mov
jge
ret
ljmp
jge
mov
jbe
jecxz
fdivrl
inc
cmpsb
and
mov
inc
jbe
push
testb
and
mov
mov
loop
repnz
loopne
imul
add
loope
lds
pop
jno
cwtl
pop
std
in
out
lcall
test
loopne
scas
mov
jmp
cli
cmp
nop
jno
sub
ljmp
popf
cmp
inc
pop
lahf
enter
addl
fwait
add
adc
sbb
pop
add
push
pusha
pop
icebp
ljmp
test
dec
push
ret
psrlq
pop
mov
aas
mulb
mov
hlt
fistpll
and
rorb
cmp
xor
and
ds
outsb
xchg
sbb
lret
push
ret
aaa
pop
xchg
push
inc
lea
ja
adc
aaa
shrl
jnp
or
loope
jae
add
repnz
fadds
repnz
shrb
or
sbb
gs
hlt
inc
loopne
sub
add
or
dec
or
push
jo
xchg
jl
lret
js
movsb
inc
fwait
mov
push
popa
sbbb
enter
imul
xchg
jle
sbb
test
add
xchg
sarl
cmp
xchg
aas
xchg
mov
icebp
jge
push
stc
insl
icebp
inc
ss
cmpl
sbb
xchg
mov
icebp
rcpps
es
mov
adc
jle
sbb
sub
sub
dec
add
inc
add
mov
xchg
and
fiaddl
mov
out
cli
fs
sti
sar
icebp
xchg
xchg
xor
jne
jnp
dec
jae
lcall
push
xchg
jnp
in
adc
cwtl
pop
lods
push
aad
pop
pop
pushf
inc
cs
sbb
fs
loopne
xlat
and
call
mov
xor
shll
repz
in
in
adc
incb
mov
push
pop
data16
mov
push
cmp
mov
sbb
std
jg
cmpsl
call
in
cs
sub
fbstp
sub
sbb
or
inc
jle
ja
xor
xchg
mov
ljmp
icebp
push
aad
xor
test
mov
and
sbb
out
push
insb
cmc
xchg
dec
sbbb
mul
lods
jmp
cmp
clc
rolb
and
fldcw
dec
xor
inc
fldcw
push
sub
sub
loopne
xchg
mov
fs
outsl
mov
xor
or
mov
push
fmulp
test
cmp
nop
cmpsb
lea
hlt
repnz
and
jnp
fsubr
ret
push
stc
mov
popa
outsl
imul
mov
jnp
aad
push
push
add
push
bound
idivb
and
pop
rolb
mov
hlt
cs
dec
jmp
push
add
xor
std
roll
loop
out
mov
and
stos
jae
js
xor
imul
adc
sahf
enter
stc
sti
icebp
cli
add
xchg
xor
cmp
and
jge
jo
popf
and
pop
in
mov
lods
push
pop
mov
mov
les
das
xor
or
bnd
cwtl
sub
adc
dec
aam
mov
ret
xor
test
xor
sahf
push
push
pop
iret
scas
jbe
movsb
clc
pop
loope
inc
xchg
and
ret
stos
jg
aad
and
jecxz
xchg
clc
mov
shll
jbe
enter
jg
cltd
lea
mov
adc
mov
addr16
fsubrs
inc
or
adc
inc
jmp
adc
mov
xor
mov
mov
icebp
imul
push
push
insb
push
in
mov
cmp
stos
hlt
fistl
mov
mov
xlat
sarb
iret
stc
pop
xchg
ds
loope
clc
sub
scas
iret
movsl
ja
sbb
je
fwait
in
movsl
or
inc
lret
mov
mov
add
ja
mov
std
shrb
leave
mov
je
aas
jne
shlb
dec
xchg
andl
loope
hlt
pop
adc
lcall
les
adc
ja
pop
dec
sbb
mov
scas
cmp
mov
jecxz
and
push
adc
mov
nop
xlat
xor
outsl
adc
mov
rol
stos
xchg
add
sbb
push
sbbl
cs
and
pop
out
std
sub
cmp
xor
inc
and
sbb
dec
scas
sahf
ja
xchg
add
lcall
arpl
lcall
aad
mov
adc
andb
add
es
sub
incl
scas
stc
ret
pop
mov
shll
jne
inc
and
dec
mov
je
mov
xor
push
push
daa
cmp
outsb
sub
xchg
mov
lock
pop
leave
inc
enter
cmpsb
xor
lods
mov
dec
jmp
pop
jno
lods
inc
mov
jle
push
repnz
cs
cmp
push
stos
mov
dec
push
sub
out
and
jo
fmull
mov
cs
jecxz
das
test
out
lret
push
in
inc
rol
ret
ss
sub
js
sub
fbld
test
movb
bound
add
or
sbb
fnstcw
mov
or
jmp
mov
xchg
mov
jg
push
and
imul
cmp
int3
add
icebp
adc
cs
in
inc
ss
cmp
dec
ja
dec
lcall
daa
pop
aam
movsl
das
inc
imul
cmpsb
fisubs
sbb
push
out
pushf
std
pop
or
xchg
add
add
insb
scas
push
jo
int
into
push
or
dec
dec
or
push
test
jae
cmpsb
jge
in
jg
mov
flds
or
lahf
xor
cmpsl
imulb
pushf
cmpsb
xor
addr16
mov
ret
pop
xchg
jp
xor
ja
sbb
lret
arpl
adc
sti
mov
test
or
aad
pop
in
aam
add
mov
sub
or
mov
les
mov
jnp
adc
mov
dec
or
fs
clc
mov
loop
mov
mov
enter
dec
in
imul
sub
icebp
call
or
jl
and
push
cli
add
dec
adc
bound
pop
test
lcall
cmpb
mulb
add
imul
add
insl
lods
mov
jmp
xor
cmp
daa
sub
daa
and
in
jb
mov
jb
pop
outsl
inc
xor
xchg
mov
arpl
sahf
test
sub
ds
hlt
cwtl
scas
ss
add
outsl
and
call
idivb
pop
pop
imul
xor
or
scas
jbe
in
inc
mov
cld
rorl
pusha
jg
mov
dec
rcll
gs
or
iret
jne
insb
imul
pop
push
mov
aam
xchg
stc
jg
mov
add
out
jae
sub
lahf
lds
fmulp
mov
repz
pop
sub
imul
jnp
jnp
xor
inc
mov
loop
cmp
orb
inc
or
mov
nop
test
cld
fsubl
xchg
pop
aad
gs
or
cmp
out
lods
jmp
xor
add
mov
mov
jne
mov
cmp
mov
aas
popf
mov
xor
std
scas
push
addl
ret
in
adc
adc
dec
mov
test
dec
movsb
cmp
mov
jecxz
insl
push
fisttps
and
lahf
addb
nop
xchg
adc
cli
sub
rcrl
push
xor
mov
push
mov
jmp
or
daa
icebp
mov
aaa
call
jl
xchg
loop
cltd
push
movsl
in
ds
xchg
mov
cmp
scas
lret
mov
mov
add
out
add
rclb
mov
ret
aam
hlt
mov
adc
out
leave
jmp
fcomps
cmpb
movsb
or
scas
push
lcall
pop
in
xor
mov
cld
dec
shrb
fildll
pop
mov
insl
jae
negb
push
orl
mov
out
sbb
sahf
xchg
jg
pop
mov
js
mov
sbb
sbb
outsl
dec
xchg
bound
mov
fdiv
push
sbb
movsl
or
jge
jbe
lds
xlat
nop
das
sarb
pusha
mov
sahf
inc
aad
dec
push
xchg
sbb
notl
xchg
sub
mov
lahf
pusha
fldenv
inc
cmp
dec
loopne
xchg
fs
mov
leave
mov
push
xchg
insl
sub
aas
push
push
mov
mov
dec
add
outsb
pop
xchg
fdivl
push
xchg
lahf
std
push
rolb
jo
dec
mov
mov
mov
inc
rorl
insb
rol
jae
or
insl
mov
dec
or
jns
jge
rcrb
iret
jp
jbe
fldenv
inc
add
mov
scas
xor
icebp
test
popf
or
xchg
bound
inc
hlt
stos
cmc
dec
loop
bound
or
shr
std
rcrb
jnp
mov
inc
sub
push
jb
fdivrl
inc
mov
ficoml
loop
cmc
cmp
fisttps
jo
mov
int
mov
ljmp
adc
lods
mov
loope
xchg
mov
fs
and
insl
movsl
pushfw
lods
in
scas
idivb
or
ret
mov
and
dec
mov
jmp
sub
fmull
insl
cmpsb
insl
or
jl
popf
mov
fsubrl
lods
xor
adc
jp
clc
out
push
sbb
ret
testl
in
imul
adc
insl
xor
iret
rcr
mov
jns
jbe
xchg
cwtl
push
pop
mov
inc
jmp
out
dec
xor
mov
lods
mov
in
sarb
pop
aam
imul
sub
mov
lahf
mov
cmp
push
sbb
sbb
ficompl
sub
sub
pop
lcall
inc
imul
mov
pop
rcll
dec
scas
push
mov
push
push
cltd
push
jle
pop
filds
loop
jne
test
push
push
mov
mov
in
and
pop
into
push
in
jbe
jae
and
fildll
lods
sti
cld
ret
mov
outsl
sub
daa
lahf
cli
gs
cmp
cmp
dec
mov
inc
cmc
xchg
sbb
mov
push
scas
roll
ds
iret
cmc
fwait
jl
lock
cmp
cld
push
test
int3
ficoml
mov
lcall
adc
movsb
or
cmpb
pop
jp
xchg
mov
dec
adc
inc
inc
es
add
dec
mov
cltd
scas
arpl
push
inc
jb
xchg
inc
push
or
shll
jle
lods
fcoms
and
data16
into
dec
sub
push
int3
inc
out
push
inc
mov
fnstenv
and
or
jo
test
lds
loop
fsubs
jmp
lea
aas
push
add
clc
fmul
add
lret
in
adc
out
nop
cmp
xchg
lea
adc
mov
div
or
cmp
sub
add
inc
test
jecxz
mov
add
push
push
cli
jle
call
push
jmp
push
xor
negb
decb
cmc
gs
cmp
mov
arpl
daa
xor
pop
xchg
dec
cmpsl
ret
dec
xchg
sahf
out
add
push
adc
xchg
int3
aaa
cmp
mov
sub
sbb
in
push
pop
out
and
sbb
ljmp
mov
push
cwtl
jl
out
jno
ljmp
subl
inc
sub
xchg
xchg
dec
ret
jbe
int3
imul
icebp
or
or
xchg
cwtl
and
xor
mov
mov
fisubl
pop
das
add
ret
in
addr16
out
mov
lret
ljmp
sbb
jmp
inc
enter
js
mov
mov
in
push
pop
add
gs
push
cltd
pusha
or
push
insl
sub
fnsave
pop
pop
push
stos
jecxz
and
out
and
push
pop
fmull
cld
xor
imul
adc
xor
jo
mov
xchg
shrb
les
out
adc
sbb
adc
mov
cmpsl
js
pop
or
jle
sub
imul
mov
mov
mov
imul
les
sbb
rep
mov
jge
leave
js
das
scas
push
cmpsl
push
fildl
and
ja
jle
in
nop
loop
stos
aad
pop
inc
xchg
leave
rorl
jae
icebp
jp
cwtl
orb
xchg
pmuludq
mov
or
in
xchg
jbe
cltd
fs
xchg
xor
lret
int3
pcmpeqw
adc
cmp
out
lret
andb
sub
movsl
ss
xchg
mov
ret
xchg
push
bound
sbb
sbb
jo
jo
lret
aam
bound
mov
pushf
in
mov
in
lods
jae
rcrl
jb
lds
ds
push
pop
rcl
add
js
stc
mov
pop
into
push
mov
aad
faddl
jge
mov
jno
test
js
mov
mov
frstor
int3
stc
mov
push
enter
cmpsl
mov
xlat
xor
movsb
push
pop
mov
cmpsl
dec
mov
rorl
push
mov
gs
sub
push
sbb
jp
xchg
dec
sub
ret
mov
xchg
out
xor
test
scas
pop
out
sub
psrad
iret
test
mov
mov
iret
sub
test
aad
shlb
cwtl
or
jb
sub
push
in
test
cltd
in
into
fdivl
mov
pop
addl
cwtl
pop
icebp
push
fsubs
test
pop
mov
scas
ret
test
pop
out
fcomip
arpl
xlat
push
lods
mov
add
lret
in
pop
xlat
lcall
push
push
and
dec
call
cmpsl
pop
rcr
lea
lahf
in
divb
dec
scas
fmull
jb
mov
aad
jb
cs
inc
dec
pusha
pop
jle
mov
mov
shll
xor
out
xor
mov
ds
pop
outsl
in
insl
loopne
int3
jae
xor
outsl
push
sbb
lods
pop
cmp
popf
in
or
hlt
lods
aaa
jb
jl
pminub
push
clc
push
rcll
popa
mov
add
push
push
shlb
iret
push
testb
add
cltd
fmul
xlat
fbstp
stos
fldl2t
gs
mov
shlb
sarl
daa
gs
scas
jno
and
mov
scas
lret
pop
aad
out
and
adcl
sbb
mov
mov
xchg
lahf
push
pop
std
pop
repnz
jo
test
stos
ret
push
pushf
ffree
movb
shll
insl
jecxz
xor
addl
dec
hlt
ljmp
sub
or
lods
outsb
inc
sub
pop
mov
sahf
aaa
test
scas
cmp
push
dec
xchg
mov
sub
pop
push
icebp
push
neg
js
xor
sti
sbb
ds
sbb
pop
and
cmc
jge
in
sub
in
mov
lods
jle
mov
push
sbb
xor
aad
push
and
addb
imulb
and
outsb
sub
call
andl
or
jno
add
test
or
mov
shrb
stos
lcall
cld
fs
clc
inc
jo
cmpsb
fmuls
push
add
adc
mov
and
push
xor
jnp
mov
cmp
push
iret
or
fidivs
mov
out
fmuls
dec
or
and
mov
repz
xchg
sub
pusha
dec
fwait
cmp
pop
jp
xor
sarb
pop
shr
mov
nop
sbb
pop
fdivl
fdivrp
shl
outsl
ret
jns
cmp
sub
in
ret
inc
dec
inc
mov
mov
lea
out
daa
xor
aad
mov
sub
shrb
or
push
inc
or
in
inc
mov
lock
pop
ljmp
and
cmp
aaa
xor
mov
ljmp
jmp
mov
out
mov
inc
inc
repz
xor
mov
mov
lret
cmp
dec
jo
es
xchg
mov
add
jno
xchg
xorl
push
pushf
insb
mov
and
sub
lcall
pop
ret
xchg
stos
xor
shll
dec
aad
ds
cmp
and
mov
mov
xor
push
pusha
lock
push
fbstp
outsb
lds
inc
sub
inc
rorl
jne
adc
dec
mov
and
dec
movsb
int
lods
and
pusha
push
fcmovbe
ret
jl
decl
lods
imul
jg
cmp
sbb
cltd
push
sti
pop
mov
jg
repnz
xchg
inc
pop
fdivl
dec
test
pop
fiaddl
sbb
clc
dec
out
popf
aam
mov
xchg
cmp
adc
or
aas
out
and
or
test
loope
add
repz
out
int3
push
push
cmp
dec
incb
or
psubsw
aaa
sub
ss
adc
cmc
mov
xchg
mov
lds
mov
xlat
rcrb
out
fidivl
sub
inc
inc
imul
cmp
sarb
inc
mov
mov
mull
cmp
pushf
movsl
jno
add
pop
jl
ret
mov
xchg
cmp
adcl
dec
dec
xlat
inc
mov
adc
decl
or
cld
and
push
out
aad
and
lcall
inc
mov
out
mov
xchg
xchg
ljmp
lds
pushf
mov
adc
dec
sub
sahf
pushf
add
add
sub
imul
jnp
push
push
xor
ljmp
jecxz
jnp
adc
lcall
sahf
mov
cld
mov
jl
lock
dec
fdivs
jns
insl
dec
rcrl
fwait
cmp
in
dec
inc
movsl
popf
push
xor
loop
push
dec
mov
clc
dec
shlb
cmp
in
push
cmpsb
jmp
fld
xchg
cld
jo
test
shrl
loopne
aam
hlt
fcmovnu
push
cmpsl
popl
cmp
into
inc
jle
jl
rorb
cmp
or
outsl
adc
lea
cwtl
lods
popf
testl
cli
in
jecxz
push
mov
pushf
pop
jae
sbb
xchg
xchg
inc
sbb
int3
sbb
mov
pusha
pop
fsubrp
jecxz
ret
sbb
es
mov
in
bound
cltd
pop
jp
mov
inc
push
mov
xchg
push
repnz
jp
dec
int3
mov
jge
andl
adc
push
fisubs
lods
in
clc
mov
addr16
loopne
sbb
daa
divl
jmp
add
mov
push
cmp
push
add
mov
mov
push
push
popa
enter
push
pop
call
fnstsw
popa
pushf
cld
adc
fisttps
mov
imull
loopne
dec
ss
mov
iret
in
xchg
xchg
pushf
xor
shrl
pop
dec
cmp
insl
dec
js
mov
mov
and
inc
movsb
data16
adc
mov
rol
dec
fisubl
loop
jne
imul
pop
inc
mov
addl
test
cli
xchg
lahf
lock
mov
mov
sub
jg
arpl
xor
mov
jge
test
aas
jnp
test
in
xor
gs
cs
mov
roll
pusha
fcmovnu
push
xchg
pop
pop
jo
imul
add
fnstcw
std
loop
adc
xchg
cmpsb
jmp
or
cs
cwtl
je
cs
lods
sbb
js
add
cmp
mov
push
jl
inc
inc
pusha
add
movsb
add
js
cmc
loopne
xor
mov
dec
aas
paddb
pop
test
enter
push
rol
and
fdivrs
hlt
inc
pop
xchg
jno
nop
add
dec
ficoms
mov
loopne
lcall
ja
std
lods
xchg
mov
jae
xor
jnp
and
insl
pop
and
cmp
test
add
mov
in
stos
sub
add
popa
insl
icebp
jae
xor
inc
fsubl
sbb
sbb
add
out
push
int
pop
lahf
push
cmc
cltd
sahf
loop
stos
fs
adcl
jp
or
xor
les
mov
insl
sti
push
shll
cmp
cli
sub
fucomi
mov
mov
add
push
or
test
or
adc
ss
test
cli
out
fistpl
lods
out
popa
insb
sub
jnp
movsb
xchg
repnz
sub
push
std
stos
mov
adc
jmp
shr
sub
inc
xchg
fldenv
jae
adcb
mov
jg
pop
aaa
xor
bound
inc
sbb
xor
int3
sub
imul
aas
cld
xchg
and
push
and
out
xchg
add
shlb
fimuls
fucom
insl
jmp
inc
mov
mov
push
mov
and
dec
aaa
cmp
paddb
fistps
out
xchg
jne
shlb
xlat
mov
test
sbb
xor
mov
es
out
or
into
push
jmp
popf
iret
mov
xor
or
push
jp
and
cs
push
lods
adc
cltd
push
inc
leave
imul
sub
or
aas
xor
lods
cmp
mov
pop
rolb
adc
int3
sub
and
push
xchg
and
bound
mov
ja
out
and
jl
aam
mov
shrl
lds
out
repnz
jle
xor
sub
and
aaa
jp
inc
pop
xor
or
sub
pop
daa
scas
cmp
dec
fmulp
shll
pshufw
insl
and
aad
push
xor
mov
xor
dec
mov
xor
mov
shrb
jb
test
jecxz
and
inc
pop
lea
mov
pop
pop
adc
pop
pop
mov
ret
mov
into
adc
cltd
and
fldl
sub
inc
ficomps
cmpsb
push
inc
xchg
dec
xor
mov
rclb
xchg
add
insb
adc
mov
ljmp
cmpsl
dec
lcall
or
stos
dec
push
fidivs
shlb
fnstenv
dec
stos
mov
push
pop
jae
mov
mov
cltd
xor
sbb
loop
fnsave
and
lret
jecxz
mov
push
and
lret
sub
push
adc
inc
popf
xor
push
out
push
mov
fiadds
pop
pop
jb
out
out
inc
fldt
push
lcall
mov
push
gs
mov
iret
xor
shll
ljmp
pop
into
jb
adc
mov
dec
cmp
pop
int3
sub
movaps
aas
and
and
fneni(8087
ss
inc
pop
push
jae
aad
add
testl
pop
xor
popa
and
mov
mov
push
adc
xlat
push
mov
inc
dec
and
sahf
mov
out
les
xchg
mov
in
stos
lds
sbb
pushf
clc
ficompl
inc
pop
pop
add
mov
ljmp
xor
sub
sub
xor
lock
mov
mov
jo
aaa
dec
adcl
shll
xchg
inc
xor
cmp
and
jne
loope
lahf
popa
fs
aaa
push
aas
mov
dec
xchg
stc
push
push
mov
sub
mov
fcom
or
jno
addr16
fdiv
dec
sub
push
jb
add
jp
xchg
ds
mov
lcall
sti
in
andb
repnz
bound
jnp
les
adc
iret
adc
loopne
inc
fwait
xchg
fadds
bound
push
mov
testb
push
and
scas
push
sbb
adc
xchg
push
int3
or
and
ds
ljmp
xchg
and
xchg
iret
adc
test
shl
daa
scas
js
sub
fs
sbb
pop
inc
mov
jle
rclb
sbb
cs
inc
dec
lods
mov
and
pop
sub
in
icebp
loop
xchg
push
adcb
in
dec
mov
cmpsb
mov
jbe
push
sbb
addr16
les
sbb
ja
into
lret
pusha
mov
xchg
jge
clc
or
enter
mov
push
xchg
push
cwtl
and
sub
mul
fldl
pop
jbe
popa
xlat
stc
pusha
sbbl
aas
in
add
pop
pop
lods
xor
scas
sbb
inc
enter
stos
out
or
lds
scas
scas
cld
addr16
lock
fisubl
xlat
mov
pusha
mov
mov
xchg
pop
adc
pop
push
cltd
mov
jb
dec
xchg
inc
mov
movsb
fwait
lea
outsb
lahf
mov
push
pop
jns
dec
cwtl
push
insb
push
aaa
out
pusha
hlt
stos
xor
pop
cli
mov
cmp
je
fld
xlat
das
pop
out
sub
repnz
movsb
dec
xchg
test
lods
pop
mov
jo
sbb
iret
test
pop
out
inc
or
js
mov
dec
fs
sbb
inc
in
jp,pt
pop
out
sub
sbb
xchg
push
jbe
sub
xlat
mov
lock
and
push
jp
mov
mov
lods
mov
and
lret
or
jmp
xchg
mov
push
mov
std
xor
sarb
jbe
cwtl
mov
inc
inc
loopne
mov
xchg
roll
cwtl
cmpsl
dec
xchg
and
shlb
xchg
xchg
pusha
ss
lret
fimull
xchg
in
pushf
inc
and
sti
bound
add
jg
pop
decl
inc
sbb
xchg
add
mov
pop
sbb
sub
mov
movsb
loope
push
outsb
push
xor
or
or
lret
popl
bound
or
loop
ljmp
jo
sub
cwtl
sub
dec
pop
test
out
aaa
mov
aaa
xchg
adcb
in
adc
inc
dec
mov
pusha
lcall
add
sahf
lret
inc
jae
push
jbe
cmc
jle
pop
mov
adc
add
push
cmc
pop
xor
leave
dec
jp
loopne
push
xchg
add
in
jae
sbb
and
or
push
mov
mov
adc
and
push
sbb
repz
inc
mov
les
out
inc
xlat
inc
icebp
jle
mov
jg
nop
and
xor
pop
mov
int
mov
lods
inc
sbb
dec
add
jbe
cmpsb
into
std
jno
adc
das
inc
mov
in
cmpsb
data16
sub
adc
jl
and
cwtl
leave
cli
movsb
aam
push
movsl
mov
es
or
sbb
xchg
shrl
pop
ljmp
xor
ds
decb
pop
es
or
cmp
mov
pop
cmc
les
cmpsb
loopne
pop
leave
mov
dec
cmp
push
es
and
clc
xchg
push
out
cld
lods
mov
shlb
push
movsb
jne
pop
outsl
loop
test
lcall
ss
cmpsb
jne
and
sti
lret
test
fidivrs
mov
movsb
jo
xchg
loope
jno
enter
and
mov
and
sbb
xchg
les
repz
pop
or
lret
xor
and
cmp
push
inc
cmpsl
xchg
sub
xor
mov
fidivrs
sbb
nop
and
ret
inc
mov
rorb
test
mov
scas
cs
in
ds
push
jnp
and
aas
adc
aaa
xchg
push
xor
and
aad
fstpt
sub
pop
or
lds
adc
cmp
int
mov
or
cmpsb
cmp
inc
add
sbb
js
jp
lea
mov
imul
sbb
cwtl
in
and
test
push
lods
ret
xor
pop
inc
stos
sub
in
hlt
add
push
or
in
fidivrs
mov
push
xor
insl
icebp
xchg
jb
shl
clc
add
ret
ljmp
push
clc
xor
mov
dec
call
xorb
dec
aam
daa
mov
fisttpll
mov
mov
add
inc
into
repnz
ljmp
movsl
pop
je
mov
int3
bound
sbb
test
add
sub
lahf
or
adc
lods
mov
mov
ret
dec
jmp
xchg
sub
xlat
movsb
push
sbb
mov
aaa
adc
mov
push
sub
addr16
movsb
mov
fstl
std
shrb
enter
rcrl
xor
dec
scas
mov
push
adc
sub
outsl
aas
adc
aas
sbb
sub
adc
jmp
dec
mov
int
call
lret
jb
mov
jmp
adc
push
push
js
pop
push
das
insl
cwtl
adc
jl
clc
jno
daa
xlat
pop
and
jg
mov
mov
push
xchg
pop
mov
int3
pop
fstps
cmp
ret
repnz
pop
insb
lcall
xor
sbb
sub
sbb
insb
aaa
xor
add
sti
mov
ss
les
sub
fucomi
xchg
jl
pop
out
sbb
movsl
imul
inc
or
out
stos
add
xor
sahf
push
loope
xor
sbb
out
gs
fxch
cwtl
sbb
inc
inc
pop
or
jnp
gs
or
fcmovne
adc
sub
sub
repnz
sub
inc
mov
addr16
mov
sbb
mov
out
js
xor
stc
lods
pop
lahf
lahf
inc
cs
add
or
pop
ret
cmp
or
stos
pop
inc
pop
jb
push
jne
mov
ss
or
roll
inc
repnz
sub
pushf
stos
pop
imul
loopne
insl
mov
cwtl
pop
jmp
subb
mulb
nop
movsb
push
push
je
enter
cmp
jmp
push
dec
mov
pop
xor
mov
dec
in
xchg
ds
push
popa
mov
xchg
aad
call
out
xor
push
pop
mov
sub
ds
dec
jp
and
cmp
cmp
pop
jb
sub
decl
adc
push
cmpsl
jnp
add
fcmovne
mov
outsb
jecxz
dec
popf
mov
mov
data16
cmp
cmp
mov
es
inc
fwait
jmp
mov
leave
or
mov
insl
mov
inc
and
test
int3
mov
cmp
dec
bound
daa
mov
mov
pop
lds
push
push
sbb
ljmp
cmp
xchg
arpl
out
inc
stc
sub
jb
mov
shlb
dec
rol
mov
movsl
sbb
sti
in
pop
sbb
jle
out
and
cmp
das
jne
xlat
call
sbb
jmp
pop
jne
leave
fisttps
lods
cmp
icebp
fstps
inc
jl
out
pushf
and
bound
pop
or
push
lret
adc
dec
and
loope
inc
jb
push
mov
fldt
mov
jl
mov
inc
rol
lea
rcll
mov
rorl
imulb
sbb
or
inc
xchg
sbb
ja
negl
popf
xchg
sub
lret
sub
fadd
movsl
sahf
clc
dec
cmp
daa
jp
cli
push
or
popf
fdivp
test
loop
lret
nop
cli
inc
in
test
lock
shrl
adc
addr16
repnz
pop
lods
stc
push
lcall
fists
push
jl
sbb
fs
sbb
test
pop
rcll
lock
dec
and
call
push
insb
and
mov
outsb
icebp
xor
mov
out
ret
leave
sbb
call
icebp
add
and
mov
push
aas
jge
fdiv
rcrl
dec
arpl
js
loope
ss
jmp
fcomps
xchg
ljmp
pop
jp
iret
add
sbbl
aas
shl
cmp
mov
jecxz
jp
pop
mov
push
and
ja
jl
ss
jge
mov
push
sbbl
add
add
push
mov
pop
inc
and
enter
sbb
out
in
insb
jne
lods
cmp
adc
std
fcmovbe
ret
movsl
xchg
arpl
imul
test
arpl
lods
lods
add
xor
mov
cmpl
sub
int3
or
rolb
inc
and
aad
sub
es
gs
clc
mov
sbb
mov
xchg
xchg
pushf
lea
inc
dec
lods
jb
xor
and
or
popf
repz
nop
cltd
mov
cmc
xchg
mov
cmpl
movsl
into
dec
cmc
test
fwait
add
hlt
mov
popa
cli
js
sub
out
cmc
and
rorl
int3
lods
xchg
xor
mov
fadds
rorl
jl
jg
push
das
add
push
imul
icebp
push
sbbl
add
std
inc
mov
pop
popf
or
movsb
enter
mov
sti
add
sbb
push
mov
mov
fdiv
insb
cmc
xchg
lock
pop
sbb
and
movsb
mov
call
xchg
jo
cwtl
mov
mov
inc
mov
cli
push
xchg
adc
lock
adc
inc
js
cli
insb
or
push
adc
dec
data16
cmp
add
mov
popf
jl
addr16
mov
mov
out
dec
sub
subl
xor
ljmp
lods
insl
fcom
jmp
dec
pop
xchg
mov
sbb
push
mov
and
pop
inc
or
inc
push
cmp
mov
rorb
sbb
addr16
jnp
pop
inc
add
pop
add
jmp
adc
call
mov
dec
sbb
fidivl
mov
std
ljmp
cmp
sbb
adc
sub
sbb
or
or
adc
mov
or
in
adc
jae
and
mov
out
in
sub
pop
mov
inc
jl
addr16
add
mov
loope
ja
ror
or
fcomps
xor
fiadds
iret
lcall
mov
xchg
mov
pop
lahf
adc
pop
sub
jbe
nop
adc
or
pop
out
icebp
adc
mov
lock
imul
sarb
out
mov
xor
lods
fisubrl
xchg
and
xor
sbb
jle
push
add
jbe
and
lds
mov
rorl
loop
popl
int3
fcomip
mov
dec
fbld
push
sbb
scas
or
movsb
fxch
sub
arpl
lods
testl
push
cmp
out
mov
sti
jns
jecxz
adc
mov
movsb
mov
xadd
es
roll
push
daa
scas
mov
xor
scas
or
andl
add
xchg
cmp
cwtl
dec
sbb
repnz
sti
push
daa
cli
and
and
cwtl
test
lret
xor
ret
dec
inc
mov
mov
pop
mov
cmp
push
lods
nop
inc
mov
arpl
cmpsb
jne
dec
rcll
data16
adc
mov
gs
sti
fs
fadds
inc
mov
jae
outsl
out
jecxz
and
inc
lods
outsl
adc
add
xchg
call
xchg
lds
jns
dec
add
push
imul
dec
fmuls
aas
pop
adc
sub
ja
xor
test
mov
push
sbb
or
inc
adc
xchg
fbstp
mov
mov
mulb
leave
mov
ja
sbb
mov
cmp
addb
rcll
call
ss
test
jmp
lret
xchg
out
inc
gs
sbb
stc
jns
mov
icebp
imul
or
sti
decb
test
orl
add
add
inc
ss
xchg
pop
mov
or
dec
mov
mov
pusha
insl
push
mov
push
fdivrs
push
push
or
rorl
fld
adc
lahf
hlt
xor
or
cli
adc
leave
push
fisubl
outsb
push
sbb
fistps
mov
xchg
mov
out
mov
test
mov
lods
insb
push
hlt
lods
imul
gs
cltd
popf
call
cli
popa
sbb
inc
outsl
cmp
xlat
sbb
push
xor
shufps
sub
mov
test
push
cmp
mov
dec
cmp
leave
mov
and
xchg
ja
add
ficomps
or
imull
sbb
mov
xor
outsb
jne
je
and
dec
xor
jl
out
ljmp
jb
adc
dec
or
int
inc
notl
add
pop
pop
aam
lock
out
out
or
mov
dec
add
pop
jge
ds
fcomp
adc
jl
mov
mov
cmp
daa
and
fsubr
push
xchg
adc
out
adc
in
cmp
aam
add
sahf
xor
jbe
xchg
push
jns
jle
ja
cli
jo
fstpl
jp
lret
popa
out
xor
cmp
cmp
cwtl
pop
shrl
stos
push
push
int3
sub
mov
fwait
lcall
jno
mov
add
inc
mov
xor
out
movsl
pop
jns
mov
pop
mov
mov
cmp
mov
mov
or
add
add
ficompl
scas
into
jno
mov
xchg
shrl
sub
dec
add
mov
mov
cmp
jnp
xor
lods
jge
int
aas
sub
lret
repz
pusha
pop
and
mov
xor
rol
es
dec
jnp
or
cltd
repnz
fistl
push
cltd
jnp
or
sbb
or
les
mov
jnp
sub
mov
mov
push
jno
js
gs
std
xchg
rcr
pop
xlat
and
insl
sahf
popa
push
movsl
scas
sahf
inc
inc
clc
lods
cmp
outsb
push
sbb
inc
dec
add
call
repnz
shr
xorb
idiv
push
fs
rorl
sbb
rclb
je
add
mov
popf
or
test
popa
xchg
ljmp
cmp
jbe
loope
inc
aad
icebp
fisubl
int3
test
adc
xchg
adc
mov
call
jb
lahf
addr16
add
sub
clc
imul
xchg
jg
mov
sub
sub
ljmp
loopne
cmp
mov
and
cwtl
mov
jge
pop
repz
xchg
stos
movsb
aam
and
dec
add
loopne
cmp
xchg
jnp
dec
out
pushf
dec
push
add
sub
pop
xchg
cmp
out
push
ret
lods
lods
jg
jnp
mov
insb
loop
fsubrs
inc
push
into
aaa
mov
pop
or
xchg
daa
sahf
lcall
sahf
movsb
loope
loopne
mov
push
repz
mov
std
gs
inc
xchg
test
mov
stos
inc
mov
bound
pop
jle
jge
inc
fmul
aaa
jbe
add
fwait
loop
cmp
data16
pop
lea
leave
mov
ds
xor
testb
mov
mov
xor
pop
xor
or
cmp
mov
add
icebp
add
sub
ljmp
jg
push
fwait
sub
cmp
push
mov
adc
mov
rcll
mov
xor
or
or
mov
or
cmp
jno
andl
repnz
aaa
mov
arpl
shll
mov
add
mov
push
mov
mov
bound
into
dec
or
sub
imul
scas
pop
sarl
imul
in
jge
mov
or
inc
mov
push
xchg
out
push
fnstcw
imul
sti
dec
fcmovnbe
in
out
ficompl
mov
lea
stos
xor
sbb
sbb
cmp
dec
push
jnp
repnz
pop
gs
jmp
vaddsubps
add
add
fsts
mov
cmp
fsubl
jbe
lock
and
pop
cmp
push
mov
mov
int3
gs
popf
dec
mov
xorb
sub
cmp
mov
pop
and
push
xor
sbb
int
in
jl
xchg
cmpsb
push
pop
xlat
lods
push
mov
cmp
and
jle
mov
lret
pop
inc
cld
inc
imul
mov
addl
das
inc
cmp
popa
mov
ss
aad
sbb
out
mov
and
pusha
push
pmulhw
cs
and
add
addr16
shll
loopne
out
inc
test
adc
push
and
mov
sahf
jo
dec
or
out
adc
ficomps
cwtl
mov
in
sub
call
rorl
lahf
loop
iret
iret
jge
xchg
out
pop
lahf
sti
xchg
test
adc
imul
inc
popa
fimuls
sbb
add
xchg
sar
out
movsb
jbe
adc
shll
pop
js
dec
push
ljmp
cmc
fidivl
leave
xchg
push
mov
rorb
insb
mov
stos
jmp
sub
mov
dec
mov
dec
les
pop
xchg
adc
stc
sbb
and
fucompp
or
shll
pop
leave
mov
mov
decb
push
int3
and
push
syscall
mov
fs
mov
mov
nop
in
pop
inc
inc
or
xchg
fcompl
jnp
lods
jb
and
xchg
cmp
mov
dec
xchg
flds
xchg
pop
lcall
xor
cwtl
jl
imul
xor
lcall
or
sahf
push
xchg
movsb
push
or
std
es
mul
aaa
cmp
into
adc
and
pop
cli
arpl
rorl
mov
sub
outsb
jb
mov
rclb
adc
loopne
in
popf
or
loope
xchg
fisttpll
in
ret
sub
flds
jbe
loopew
mov
add
mov
sbb
xchg
xor
mov
xchg
mov
jp
cmp
jmp
lret
mov
ret
xor
add
xor
lret
lret
scas
cmpb
add
sahf
adc
loope
push
repnz
push
cmp
inc
ds
mov
jo
xchg
ret
push
xchg
scas
dec
shll
xchg
xchg
mov
add
add
cmp
jnp
sub
mov
jno
inc
enter
fcoml
push
jecxz
jnp
mov
push
repz
add
int3
fs
imul
pop
faddl
mov
and
mov
mov
and
fwait
jle
push
and
loope
inc
hlt
xlat
arpl
call
iret
jo
dec
cmp
cmp
lods
fistpl
xor
mov
lret
push
imul
or
ljmp
push
adc
inc
pop
loope
popl
aam
adc
test
int3
outsl
push
sbb
clc
xor
int
lock
stos
repnz
ss
das
add
mov
notb
push
pop
nop
loope
sub
mov
sbb
sbb
inc
inc
xchg
iret
outsl
mov
pop
and
loopne
xchg
cmp
cs
outsb
lret
orl
loopne
fnstcw
sub
push
xor
sub
mov
dec
inc
in
dec
or
negw
rcrb
rcrl
pop
stos
pop
stc
mov
mov
push
cmp
lcall
jb
call
mov
adc
flds
ret
aas
push
aaa
dec
aas
mov
sub
shr
inc
sub
ljmp
mov
sbb
jo
pushf
xor
shll
fcmovnu
lods
jmp
mov
pop
push
inc
jno
xchg
mov
mov
or
sbb
fsubrl
mov
xchg
adc
sub
cmpsb
push
je
pusha
loop
pop
inc
out
pop
ja
rorb
es
pop
push
jp
repz
fcmove
jmp
and
hlt
dec
jmp
mov
sub
jmp
jne
outsl
jae
cs
out
xchg
repnz
loop
movsl
and
xchg
jnp
or
add
cmp
scas
add
sub
jge
clc
jp
pop
sarl
test
and
das
jl
pop
lret
push
data16
dec
cmpsb
adc
movsl
into
pop
sahf
push
dec
jne
jg
scas
lods
cmpsl
push
movsb
mov
fdivs
outsb
jl
ljmp
divb
and
cmp
enter
mov
push
dec
or
pop
pop
jbe
fisubrs
aaa
addl
int3
mov
mov
xchg
add
cmp
imul
lea
lock
or
add
cmp
mov
ret
aas
mov
popa
in
ss
out
lods
out
mov
mov
cmp
jge
adc
addl
je
and
xor
xor
adc
jge
ds
jnp
mov
fidivrs
dec
push
pop
out
pop
scas
pop
es
in
cmp
fs
clc
call
fisttpll
dec
repz
inc
inc
scas
and
aam
gs
daa
adcl
lret
clc
mov
sar
adc
mov
divl
mov
mov
or
rcll
cli
mov
adcl
mov
sahf
xchg
mov
pcmpeqw
adcb
addr16
icebp
mov
shlb
in
shll
sahf
je
jge
nop
gs
inc
pop
movw
imul
out
xchg
imull
mov
pop
and
push
aam
nop
xchg
outsb
mov
in
add
add
mov
cmc
and
sub
aaa
fdivs
inc
mov
xchg
add
rcrb
and
repnz
dec
leave
jl
lahf
cmp
jns
sarl
dec
aaa
xchg
cmpsl
mov
pop
aam
inc
cmp
pusha
cmp
xchg
sbb
jmp
jae
scas
push
or
jb
imul
or
or
sbb
jg
sti
xchg
pop
into
in
mov
fildl
dec
adc
js
fs
cmpsb
add
push
loopne
mov
cli
or
je
adcb
cmc
or
lock
or
sbb
fistpl
dec
aad
lcall
adc
inc
mov
lods
fildl
movsb
lock
mov
or
out
jno
sub
out
mov
into
ret
push
aad
popf
dec
in
cmp
sarl
sub
cmp
fst
std
aaa
pop
repnz
xchg
out
les
add
cmp
lds
pop
stos
int3
or
push
hlt
inc
mov
add
test
daa
filds
mov
repz
in
fisubs
or
cli
in
repnz
fwait
or
xor
add
push
push
xor
xchg
pop
dec
dec
or
pop
movsl
add
in
jbe
dec
cs
aaa
mov
rorb
int3
add
cmpsb
push
int
mov
xchg
shrb
push
mov
adc
negl
jg
add
adc
cltd
mov
xchg
dec
mov
out
dec
cmp
dec
inc
sub
scas
decl
testl
lds
add
in
push
ja
mov
push
mov
in
in
and
sbb
in
cmp
push
dec
sub
jp
stc
cli
cld
dec
icebp
or
mov
add
adc
fwait
adc
push
imul
pop
and
jb
out
inc
mov
cld
loope
insl
test
xchg
lret
fildl
movsl
fistl
and
rcll
insl
push
pop
repnz
jmp
loope
scas
dec
fst
mov
inc
je
inc
arpl
shll
ja
mov
jbe
shrb
fs
jge
and
inc
pop
mov
lods
int
inc
cmp
aam
jnp
push
movsb
inc
cmc
mov
or
jne
cwtl
and
mov
pop
mov
push
mov
enter
push
out
rorb
mov
sub
xchg
jecxz
sbb
inc
dec
iret
adc
popa
sarl
cmp
jno
inc
ljmp
insl
inc
sahf
std
jo
xchg
loopne
cmpsb
mov
inc
fsubs
aam
lcall
ret
mov
imul
push
push
repnz
fmuls
lds
aas
lret
arpl
sub
mov
gs
or
test
cmp
lcall
std
into
add
inc
test
jl
cli
or
sarb
add
xor
xchg
aaa
clc
jmp
xchg
pop
mov
jno
push
das
inc
pop
adc
mov
or
sti
cmpsl
test
in
int
and
push
clc
das
mov
call
adc
mov
dec
pusha
cmc
mov
scas
dec
iret
cs
cmp
dec
mov
jno
addl
sar
mov
rclb
sarb
rcrb
fdivl
dec
xor
pushw
add
jmp
clc
movsl
adc
shl
mov
or
arpl
lahf
in
mov
jns
mov
into
pop
ss
cmpsl
cli
subb
jl
push
pop
icebp
cmc
adc
out
sbb
scas
cld
jo
xchg
cltd
cltd
test
scas
adc
fcomi
cmp
push
bound
outsb
dec
push
lea
movsl
rcrb
int
xor
adc
cltd
out
jnp
ret
nop
test
fwait
mov
adc
lret
inc
xorb
mov
sbb
mov
sbb
push
xor
mov
xchg
scas
push
sub
cmpsb
push
ret
inc
jno
mov
pushf
dec
insb
loop
mov
or
pop
aaa
and
ret
dec
xchg
mov
mov
xchg
fwait
ja
test
jecxz
cld
jle
lahf
sti
add
leave
and
mov
mov
pop
push
movsl
dec
out
fwait
jne
xchg
call
inc
cmpsl
loope
sar
fstp
fldenv
cmp
xor
sti
lock
cltd
jecxz
data16
scas
pop
jae
lret
int3
into
pop
gs
ja
jle
add
adc
aam
hlt
xlat
pop
test
call
sbb
push
adc
jl
lea
fsubr
psrlq
inc
jp
cmp
add
adc
pop
mov
and
mov
out
arpl
xchg
mov
aad
repz
negb
je
adc
addr16
outsl
inc
add
xlat
int3
aaa
je
bound
js
sbb
mov
mov
dec
je
pop
lret
mov
jne
dec
outsb
mov
fimull
bound
rcrl
rorb
mov
insb
rcrb
jmp
xchg
insl
push
sub
xor
sbb
xchg
and
sti
xor
fs
mov
pop
adc
dec
or
push
push
cmpsl
or
xchg
clc
add
iret
outsl
out
stos
add
into
xor
mov
xchg
movsl
jge
nop
xlat
jp
ljmp
jnp
push
mov
int3
fdiv
sti
push
adc
test
add
fisttps
aam
and
pop
adc
mov
inc
adc
mov
mov
outsl
sub
push
call
leave
add
mov
in
sbb
or
pop
xor
fwait
xchg
call
mov
loope
inc
xor
mov
jbe
inc
aam
jmp
es
aam
xorb
dec
and
add
mov
or
push
sub
mov
rcrl
sub
push
push
xor
pop
push
mov
int
aad
sbb
imull
ss
cmpsb
dec
cli
add
add
xlat
addr16
ljmp
inc
mov
cmp
xor
sub
mov
daa
inc
mov
frstor
xchg
inc
fsubs
arpl
call
mov
mov
inc
mov
sub
fnstcw
out
int3
cmp
jmp
into
sub
loop
pop
sbb
loope
cmp
jnp
and
enter
inc
jbe
xor
repnz
add
mov
jne
mov
xchg
ljmp
out
adc
add
add
xchg
movsb
addl
jle
dec
mov
cmp
lds
mov
push
inc
inc
xchg
push
in
xchg
or
les
xor
sub
jne
xor
ficoms
mov
popa
sbb
sub
daa
dec
mov
push
popf
cmc
mov
aad
sbb
jg
push
sub
fbld
mov
push
cwtl
xorl
aad
push
stos
xchg
mov
test
lds
mov
das
jbe
mov
push
stos
movsb
stos
mov
push
jno
jae
stos
mov
ret
or
push
xor
insb
pop
lcall
fsubr
sti
mov
fsubrl
mov
xchg
insl
jp
arpl
and
cwtl
es
cmp
rcl
sti
in
mov
or
loopne
cmpsl
aaa
pop
fistl
outsl
mov
cmp
push
sub
push
xchg
jmp
sbb
mov
scas
and
mov
push
aas
lahf
cld
mov
xor
stos
pop
and
adc
xlat
add
test
in
cwtl
insb
sub
outsb
ret
add
dec
in
test
cmovg
cmp
xor
pop
mov
add
jp
mov
icebp
mov
or
or
inc
xchg
rcll
mov
xchg
push
sbb
mov
xchg
mov
inc
add
mov
push
rcrb
roll
stc
push
pop
jg
mov
sbb
jecxz
into
in
push
jmp
clc
mov
shlb
dec
cmpb
pushf
pop
sbb
inc
inc
iret
jl
loopne
jmp
iret
adcl
cmp
test
mov
jbe,pt
sub
dec
jns
or
scas
sbb
cs
call
ljmp
pusha
ror
push
aas
pushf
mov
sbb
rclb
mov
lea
arpl
insb
pop
rcl
shrb
mov
out
dec
and
or
je
mov
mov
stc
int
jb
ja
sbb
clc
pushf
movsb
out
jmp
les
push
out
in
xchg
pop
in
xor
clc
xor
shll
mov
roll
adc
sub
cltd
daa
xchg
mov
mov
mov
cmp
push
sub
sahf
repz
repnz
mov
cmp
mov
movsb
arpl
ds
dec
adc
dec
inc
jl
in
sbb
sahf
dec
outsb
jmp
mul
sbb
andb
jle
cmc
jmp
jne
jecxz
jns
decb
inc
dec
int3
mov
dec
repnz
mov
mov
jno
cmp
test
and
insb
ret
or
jge
cmpl
shlb
jp
cmp
arpl
call
leave
pop
mov
xchg
mov
subb
or
xchg
push
fwait
dec
sub
popa
add
add
inc
and
push
mov
or
mov
mov
mov
mov
or
aad
inc
outsl
stc
icebp
push
movsl
ret
mov
push
sbb
lahf
and
int3
fstl
insl
mov
cmovno
mov
add
pop
xchg
push
pushf
pop
xor
popf
jg
int3
cmp
fldcw
lahf
shrl
or
faddp
lret
xchg
pop
mov
mov
cmp
xchg
mov
out
push
popa
testl
pop
adc
mov
shlb
lcall
adc
cwtl
jae
lcall
sbb
iret
xchg
or
xchg
pop
cmp
mov
daa
inc
mov
daa
sbb
sbb
insl
shll
das
ret
mov
out
test
andb
xchg
xchg
jmp
add
push
sub
stos
xor
dec
cmp
hlt
jle
push
xorl
rcll
xor
cmp
mov
jle
test
pop
ret
jle
insl
inc
mov
movsb
mov
lret
in
inc
push
cmpsl
lds
das
ror
push
xchg
das
mov
js
ds
sub
sbb
mov
movsb
add
dec
sbb
xchg
inc
stc
fucom
sbb
dec
mov
and
inc
stos
mov
jb
or
push
ljmp
cwtl
dec
and
inc
jne
stos
jns
mov
es
dec
cld
test
je
cmp
clc
adc
ret
rclb
cli
adc
xor
or
xor
jp
dec
xchg
imul
imul
push
mov
mov
cld
sub
lret
in
in
add
loope
add
scas
pop
fmull
push
xchg
jbe
mov
das
jge
mov
xchg
cmp
lods
repz
lds
sub
mov
sbb
mov
jmp
cwtl
and
lock
imul
fucomp
fiadds
aam
loope
xor
or
jmp
popf
pop
rcrb
out
ss
es
mov
mov
in
and
lds
movsl
cs
lcall
sub
shrl
add
pop
sahf
jp
xor
mov
lcall
inc
jmp
lcall
and
jae
pop
stos
call
inc
test
sti
inc
jg
lret
xchg
das
jno
aaa
pusha
mov
xor
out
cltd
lods
aaa
add
inc
mov
outsl
pop
add
xor
mov
adc
mov
movsb
mov
ds
cld
cltd
push
mov
lods
insl
ja
or
fisubl
aas
jae
inc
loopne
dec
mov
or
mov
mov
test
clc
cmp
jns
and
stos
xor
sbb
sti
inc
or
sarl
int3
sbbb
pop
mov
pop
in
mov
fs
iret
out
mov
mov
or
jp
inc
inc
into
into
pop
add
mov
ud0
cmc
adc
les
pop
mov
and
lods
popf
xchg
fldl
rorb
adc
push
cmpsl
insl
jae
mov
adc
std
xchg
xchg
add
cmp
popa
push
pop
jecxz
lahf
inc
jo
ds
inc
mov
adc
xchg
xchg
push
add
jle
fld
xchg
lahf
fwait
stc
gs
or
mov
jg
pop
aaa
dec
jne
sbb
xchg
inc
arpl
pop
dec
dec
jg
or
in
ljmp
push
push
xchg
push
test
aad
testl
xchg
xlat
cmp
loopne
adc
mov
fsubrl
pop
insl
adc
xor
inc
repz
sub
push
int3
add
jg
rcr
dec
rolb
in
add
xchg
and
cmp
bound
test
push
nop
fiadds
or
enter
out
dec
mov
push
fwait
inc
jle
insl
pop
lock
fistps
or
nop
inc
xchg
andnps
sbb
add
pushl
inc
mov
or
push
ss
pusha
add
adc
cmc
dec
xor
incb
in
pop
cmp
add
dec
or
cli
fwait
imulb
xchg
add
adc
jns
fcomip
mov
sub
divb
inc
mov
fcomip
in
sub
add
subb
mov
ss
sbb
xchg
sbbl
xchg
repnz
xchg
adc
pop
fs
aaa
pop
or
dec
pop
mov
adc
fistps
mov
rorb
ret
push
jp
test
cwtl
push
inc
mov
jl
mov
jle
inc
scas
popf
clc
sbb
mov
mov
mov
insl
movsb
and
fcoms
out
leave
sbb
dec
mov
dec
enter
inc
lock
fiadds
push
sub
ja
movl
stc
inc
fdivrp
sahf
jl
push
lret
jecxz
lcall
int3
adc
aam
xor
xor
in
sahf
pop
fmulp
enter
mov
mov
lods
sbb
mov
pusha
test
mov
mov
adc
ja
stos
sub
pop
adc
sub
sbb
roll
mov
popf
jmp
pop
outsl
orl
adc
nop
pop
xchg
sub
push
mov
fadds
add
sub
inc
sub
dec
test
test
mov
jmp
mov
faddl
jge
das
or
andb
dec
pop
xchg
mov
scas
adc
inc
mov
sub
inc
pop
addr16
jl,pn
sahf
adc
dec
xchg
adc
push
out
push
dec
pusha
jo
mov
fs
scas
jl
cs
aas
and
test
cmp
lods
imul
lret
dec
shrl
xchg
repz
out
sbb
das
push
sbb
hlt
push
shll
lcall
push
dec
sub
add
cwtl
les
mov
imul
fisttpl
pop
std
pop
ret
lret
dec
push
xchg
test
bswap
cmc
sbb
cmp
add
sub
fs
push
pop
or
aam
ror
cmc
test
ja
in
clc
out
xchg
xchg
jno
mov
aad
test
out
cmp
inc
adc
add
dec
mov
movsbl
adc
outsl
imul
mov
scas
fwait
data16
jno
sti
das
jp
mov
cmp
xlat
cmp
mov
jbe
repnz
mov
iret
xchg
inc
pop
cmp
inc
jae
lea
adcb
mov
nop
out
pop
push
sub
add
xor
dec
imul
inc
into
sbb
leave
xchg
je
js
sahf
cmp
jno
pop
bound
outsb
int
mov
lret
pop
sub
fs
mov
filds
and
push
mov
sub
cwtl
sbb
pop
or
push
in
add
lods
push
mov
addr16
imul
ja
mov
mov
mov
inc
push
outsb
mov
ja
test
lret
pop
lock
and
outsl
je
pushl
cmp
arpl
popa
inc
dec
movsl
sub
mov
jno
or
pop
xchg
mov
lods
icebp
cmp
sbb
rcr
pop
sub
dec
notl
addl
mov
jns
outsb
adc
mov
sbb
jl
fsts
ljmp
fcomps
and
in
lods
xchg
jp
and
jp
or
xchg
push
xlat
adc
sub
fcoml
mov
mulb
mov
addr16
xchg
jecxz
test
xor
push
sub
sbb
movsl
sub
incl
sbb
mov
xchg
aas
and
push
cmp
out
mov
cmpb
sub
xor
and
fs
shl
pusha
jp
popa
loope
scas
cwtl
lret
or
cs
push
push
push
pop
cmp
leave
inc
sbb
cmp
sbb
fstps
jge
xchg
pushf
and
in
pop
test
iret
cmpsl
mov
sbb
test
pop
dec
xor
or
jb
xchg
nop
loope
and
outsb
add
cmp
xlat
int
cmp
dec
inc
jae
xadd
or
xor
int3
sbb
cmp
jg
push
push
sub
pusha
dec
pop
sub
enter
imul
out
testl
and
push
sbb
jmp
jl
test
imul
cmp
push
ja
dec
adc
dec
sub
std
lds
sti
mov
gs
cmp
ss
sub
xchg
jecxz
pop
push
add
jo
pop
inc
push
sbb
ljmp
lods
je
es
inc
inc
add
push
popa
adc
mov
inc
jo
adc
ljmp
aaa
cmp
and
add
pop
dec
pop
out
fsubrl
sbb
mov
jg
int
sbb
daa
loope
lock
testl
mov
mov
mov
mov
in
stos
mov
iret
sub
ljmp
mov
inc
shrl
stos
push
ljmp
mov
shlb
dec
xchg
stos
sar
inc
push
inc
daa
adc
test
cmpsl
pop
shl
fsubs
mov
test
ficompl
pop
jmp
fs
or
mov
inc
into
test
mov
cwtl
sub
cld
jno
test
icebp
std
addb
aaa
mov
mov
popa
sbb
jp
popf
sbb
stos
iret
fnstcw
fsts
inc
mov
mov
or
mov
lock
mov
push
xlat
mov
testb
movsb
dec
inc
inc
roll
call
inc
test
out
cmc
pop
cmp
jl
scas
push
dec
push
mov
out
mov
mov
rol
aam
testb
sub
cli
dec
movsl
xchg
push
in
movsl
popa
sbb
bound
popa
ss
cs
rcr
jg
pop
aam
dec
pop
sti
or
fisubl
sub
mov
xchg
test
sbb
push
lahf
inc
movb
xchg
sbb
xor
inc
dec
cli
jle
fistpll
xchg
or
fmuls
call
mov
loopne
js
jge
dec
jns
lret
xchg
inc
mov
stos
bnd
cmpsb
and
add
mov
push
ja
scas
stc
test
js
je
cmpsl
loopne
add
sahf
push
add
sbb
jno
lods
pop
mov
scas
sub
cmpsl
xchg
insl
fldt
cmc
lods
loopne
clc
test
or
into
push
and
cwtl
scas
les
fdiv
cmp
push
push
mov
das
xchg
adc
faddl
fisttps
rcll
sbb
xor
push
mov
mov
inc
je
out
insb
sub
sbb
popa
cmp
mov
ds
pop
mov
in
sahf
out
adc
mov
mov
push
mov
and
ljmp
sub
pop
stc
pop
movsl
fidivl
into
xor
cmp
cmp
mov
and
push
cmpsl
arpl
insl
cmpsl
xchg
rol
loopne
hlt
ficompl
add
icebp
jg
in
call
inc
pop
nop
inc
lds
add
sbb
scas
lret
filds
in
scas
and
inc
insb
or
ja
xchg
inc
xchg
int3
stos
push
rcl
adc
add
jno
or
pop
pop
push
lret
xchg
inc
and
test
xor
mov
les
jbe
pop
icebp
jne
mov
xchg
sub
mov
aam
fidivs
rorl
out
cli
cmp
mov
adc
jl
mov
rcr
push
repz
mov
mov
add
dec
inc
xor
inc
call
xchg
jns
xchg
pop
imul
bound
shrl
ljmp
xchg
adc
pop
data16
jmp
lods
fstpl
dec
mov
fsubr
rclb
sbb
mov
push
dec
mov
ja
jae
pop
stc
and
xchg
call
in
inc
push
xchg
mov
push
gs
xchg
jno
imul
je
insb
push
cmp
test
mov
dec
jnp
arpl
loop
and
rcll
sbb
mov
mov
mov
call
div
pop
mov
test
mov
imul
adc
scas
add
xchg
fimuls
cmp
mov
push
mov
pop
push
mov
pop
ret
cmp
testb
sbb
lea
push
push
push
mov
adc
xchg
adc
push
push
mov
popa
dec
cmp
nop
and
rclb
xor
or
repnz
mov
xor
pop
mov
std
in
call
fsts
fwait
jp
pop
inc
push
sbb
enter
cltd
fimull
or
cld
jns
int3
push
add
sub
into
mov
outsb
adc
pop
popw
push
insl
mov
popf
xor
ds
cmp
call
fisubl
in
inc
scas
fnstsw
xchg
loope
arpl
add
dec
nop
and
mov
push
sbb
cwtl
scas
xor
test
mov
jge
cmpsl
lods
sarl
leave
jns
mov
fldcw
outsl
popa
test
fsubl
fsin
insl
adc
sbb
iret
jno
into
push
das
mov
xchg
cli
xor
into
iret
sub
push
frstor
sbb
mov
sub
or
jb
inc
cmc
and
loop
xorl
cs
mov
jo
mov
fidivs
std
fistps
adc
popf
mov
jmp
adc
setns
xor
fdivrs
xchg
push
mov
inc
lahf
jp
mov
adc
dec
addr16
adc
mov
addr16
rorl
repnz
adc
pop
xor
scas
add
pop
fildll
xchg
cli
test
outsl
in
push
pop
pop
push
int3
enter
lds
sbb
cmp
hlt
mov
xor
mov
lcall
dec
in
push
mov
sti
leave
cmp
je
lods
mov
fdivl
scas
xchg
cwtl
jl
xor
dec
jp
add
clc
jns
pusha
sbb
mov
insl
dec
sub
push
daa
xchg
jp
sub
lahf
pop
xor
imulb
aaa
icebp
fiadds
inc
negb
fs
rcr
ds
push
es
sbb
mov
fsubrs
insb
push
and
sub
sub
lods
cs
fadds
daa
loope
mov
das
push
dec
clc
ja
pop
jl
aas
cmc
adc
push
loopne
cmp
add
jle
jnp
mov
push
in
sub
jno
inc
lea
iret
scas
das
sahf
adc
xchg
mov
dec
push
shll
push
sub
sbb
in
rcr
cltd
mov
test
lods
cmpsl
js
loopne
cmp
xchg
or
pop
bswap
xchg
insb
out
add
lret
cmc
xchg
mov
pushw
inc
out
push
das
add
lret
enter
lods
dec
lods
ret
fcmovu
push
pop
dec
es
mov
push
rclb
outsl
shr
mov
sbb
lock
or
je
push
pop
sbb
pop
out
dec
frndint
push
iret
mov
sub
sbb
jmp
pop
push
push
lahf
jnp
jb
or
mov
lahf
fcomps
out
cmp
pop
xchg
cwtl
scas
fistl
inc
shlb
jne
push
pop
repnz
rclb
fisttpl
add
ds
adc
aad
mov
int
jbe
jno
adc
add
ljmp
add
mov
jne
fidivl
pusha
lds
inc
jo
adc
mov
test
mov
loope
test
sub
xor
dec
adc
lea
cmp
sbb
daa
cli
lea
sbb
mov
fdivl
push
fs
adc
xor
push
and
cli
fidivs
imul
fdiv
jmp
cmpsb
ror
inc
bound
in
outsb
add
adc
popf
push
mov
orl
lcall
sbb
xchg
mov
lahf
push
and
xchg
pop
imul
lock
pop
xchg
pop
lret
in
scas
mov
jb
cmp
and
sub
jns
nop
jle
mov
sub
dec
imull
push
bound
outsl
mov
addb
sbb
sbb
rolb
mov
repnz
mov
xchg
sahf
push
push
mov
hlt
data16
pop
add
sbb
push
imul
in
scas
inc
sbb
repnz
test
outsl
xchg
clc
ret
push
bound
xchg
mov
mov
andl
jns
imul
nop
roll
inc
cli
mov
mov
mov
sub
pop
sbb
icebp
sub
cmc
dec
adc
js
mov
cwtl
in
pop
or
mov
adc
cmp
or
cmp
mov
mov
fldl
nop
std
sub
test
repnz
push
incb
mov
lods
dec
les
mov
dec
daa
adc
dec
addr16
sub
cmp
dec
dec
sti
push
adc
movsl
xor
push
push
pop
ljmp
xchg
mov
imul
push
cli
int
data16
xor
xchg
rcrb
adc
gs
ss
or
addr16
fdivl
mov
mov
push
or
push
mov
mov
mov
push
mov
push
push
fldl
roll
cwtl
fnstenv
cmp
pop
sbb
nop
mov
inc
lcall
jp
sub
mov
int3
imul
xor
push
xor
dec
in
lods
repz
test
data16
cmp
mov
stc
push
jns
cmp
jnp
and
push
add
xor
cmpsl
test
dec
lock
sti
add
nop
pop
mov
loope
cmp
pop
test
repnz
sub
pop
out
clc
lods
pop
jno
inc
mov
inc
xor
pop
popf
stos
sub
add
adc
les
lods
loopne
jl
leave
mov
add
loope
cwtl
cmp
stos
int
les
xchg
dec
adc
ljmp
je
or
cltd
clc
mov
in
sbb
ss
cmp
cmp
inc
nop
addr16
push
mov
jp
dec
cmp
cmp
jb
fists
int3
or
cmc
push
insb
push
adc
pop
push
movsl
add
fdivs
fcomi
dec
ret
or
inc
push
lret
jl
lods
cmp
push
sub
mov
mov
pop
jp
adc
lock
mov
xchg
sar
jg
cwtl
xor
stc
adc
ds
adc
fdivrl
insl
mull
push
xchg
ret
xchg
mov
ds
add
scas
mov
inc
sti
mov
lret
fidivrl
andl
mov
rolb
mov
cs
pop
inc
shll
popa
les
lcall
outsb
fdecstp
cmpsb
sub
adc
mov
jg
dec
add
rorl
stos
int3
out
cs
in
xchg
inc
sub
pop
xchg
in
rorl
clc
popa
shlb
add
adc
imul
push
and
mov
xor
enter
dec
out
mov
test
xchg
cmpl
out
fistpl
inc
pop
xorb
dec
pop
shl
in
pushf
cmc
or
out
lds
sbb
xchg
outsb
pop
jo
mov
jnp
stos
in
or
jbe
and
movsl
ds
mov
icebp
sub
testb
cmpsl
popf
int3
dec
rorb
lret
out
sub
cltd
cmpsb
aam
mov
pop
lea
iret
xchg
mov
arpl
and
add
mov
pop
add
inc
add
push
mov
out
lds
cmp
test
adc
push
push
aas
es
dec
jbe
js
pop
jb
jb
cmp
aam
and
sbbl
add
hlt
xor
sub
jne
jge
call
jecxz
mov
xchg
outsb
test
sbb
mov
fisubs
mov
ds
sbb
cmp
lods
inc
movsl
mov
ss
cld
adc
inc
lret
xchg
mov
stos
in
push
pop
stos
cmp
sub
fsubrs
jo
pop
mov
pop
xor
sub
add
mov
or
rclb
outsb
andb
movsl
and
jecxz
je
lods
xchg
dec
pusha
push
cmpsb
adc
mov
cmc
jnp
sarb
or
mov
notl
movsb
mov
cmp
sub
loopne
xor
jno
subl
insl
pop
movsb
cwtl
inc
mov
xchg
xor
mov
test
fsubr
ret
inc
inc
mov
pusha
mov
nop
dec
cmp
div
jne
inc
out
test
lcall
out
push
hlt
dec
push
xor
das
mov
add
mov
or
sub
push
cltd
movsl
test
aad
pop
jo
mov
sbb
lods
sbb
inc
jne
sbb
cmp
dec
lahf
adc
clc
outsb
addl
testl
dec
mov
sbb
push
cmc
pop
push
call
popa
add
lods
rorl
aaa
les
cmc
fnstenv
arpl
cmpsl
filds
addb
or
mov
or
sbb
hlt
sti
xchg
mov
stc
xchg
ds
pusha
ss
insl
jno
popa
outsb
push
in
pusha
jne
mov
into
into
and
das
inc
scas
xor
inc
and
aas
das
adc
int
add
xor
xchg
push
jnp
pop
movsb
imulb
outsb
fistps
mov
popf
xchg
imul
push
pop
leave
out
jl
push
inc
incl
jle
push
incl
stc
push
fcmovb
dec
adc
ficoms
movsl
jae
pop
and
sbb
cmc
aam
inc
xlat
scas
push
sbb
mov
ret
scas
add
sarb
mov
out
jmp
shrb
push
or
dec
cmp
rcrl
shll
sub
or
inc
ret
outsl
insw
pushw
lds
lods
insb
les
sbb
loop
push
dec
add
inc
fwait
sub
iret
mov
add
mov
mov
sbb
mov
mov
cltd
stc
xor
mov
enter
lds
stc
or
pop
movsl
popa
mov
pop
add
jae
andl
test
aaa
jne
subb
int3
pop
mulb
jae
aaa
mov
cmp
test
imul
lods
lcall
jne
psubb
and
fidivrl
jne
scas
insb
call
or
mov
out
pop
or
adc
mov
mov
adc
sub
xor
dec
popa
mov
call
jns
fcoms
outsb
cmp
outsb
mov
dec
cmpsl
out
inc
dec
imul
lods
jl
cmpsb
out
lods
jge
adc
mov
xor
clc
xchg
pop
decb
mov
dec
repnz
daa
testl
scas
out
aad
fwait
mov
push
cmp
call
adc
mov
pop
stc
outsb
aaa
cmp
daa
pop
add
xchg
sub
push
xlat
jg
movsb
inc
ret
xor
sub
movsb
xchg
xchg
and
jno
sub
jno
pop
ret
sub
xchg
fs
cmp
xlat
push
mov
pop
xchg
jl
fcompl
mov
into
cmp
loopne
inc
adc
js
mov
jecxz
adc
outsb
jg
adc
cmp
dec
gs
xor
cwtl
ss
loope
test
push
cmp
add
dec
pop
xor
inc
or
push
jne
or
pop
dec
push
cmp
call
lahf
movsb
lods
push
mov
pop
out
cmp
pop
jge
lods
push
inc
cmp
push
jbe
xorb
popf
imul
popa
lret
xchg
in
mov
or
push
incl
fbld
push
insb
xchg
adc
arpl
mov
jge
orb
push
inc
xor
insl
loope
roll
fsubrl
or
adc
aad
jo
sub
imul
mov
lods
or
pushf
push
pop
inc
cmpsl
lods
sti
aam
dec
fabs
outsb
sar
jbe
push
jo
sub
push
subl
shll
lcall
rorb
adc
mov
sbb
ret
push
cwtl
inc
movsb
aad
xor
mov
stos
fstpt
inc
mov
or
ret
aaa
push
sbb
dec
mov
adc
lahf
or
push
repnz
mov
mov
mov
pop
xchg
fs
jne
push
lret
sahf
push
fs
mov
dec
inc
xlat
repz
stos
cli
mov
das
xor
push
mov
notl
pop
mov
popa
pop
jnp
cwtl
or
test
dec
xlat
add
and
scas
mov
jns
out
mov
in
jne
adc
faddl
inc
data16
enter
inc
faddl
popa
or
or
fsubs
jno
jbe
add
out
loopne
push
std
rol
pop
push
gs
inc
jle
jb
add
out
popf
ror
pop
loop
test
mov
pop
adc
rcll
fnstsw
pop
mov
mov
xchg
aas
scas
andb
outsb
pop
sub
inc
mov
push
movsb
das
imul
jmp
pop
jge
jnp
mov
xor
into
jl
jg
imul
stc
pop
xor
fcoml
ss
scas
xchg
xchg
bound
pop
sbb
mov
cmp
insb
jp
call
aaa
test
xor
dec
mov
cmp
bound
ror
pop
stos
test
cmovge
jne
xchg
stos
pop
push
hlt
xchg
aam
stc
cmp
scas
xchg
mov
jae
data16
sub
jae
sar
mov
scas
test
cwtl
je
out
sbb
dec
mov
popl
mov
mov
test
js
push
into
jp
jbe
xlat
add
movsl
push
ljmp
mov
and
sbb
mov
push
mov
inc
cmpsb
add
fiaddl
cmp
dec
shll
bound
jecxz
pop
test
shrl
int
jmp
mov
adc
les
jne
inc
dec
repnz
mov
cmp
mov
dec
iret
xchg
dec
movsl
fnsave
mov
inc
out
xor
in
push
push
or
jl
iret
test
scas
mov
add
in
dec
inc
jmp
mov
popa
cwtl
cwtl
xchg
push
xor
push
adc
loope
lods
andl
sub
rcll
popf
shlb
clc
imul
and
stos
enter
add
pop
jg
sbb
lods
mov
sub
and
inc
mov
jp
enter
mov
adc
das
out
jbe
and
ja
and
sbb
xchg
test
ds
cmpsl
and
outsl
jae
push
sbb
adc
call
fucomp
push
inc
xchg
cli
sbb
adc
mov
xchg
xor
icebp
cltd
and
stos
sub
cmpsb
push
daa
cli
dec
cmp
sub
out
dec
add
xchg
pop
loope
pushf
icebp
dec
push
sbb
add
dec
xchg
insl
xchg
je
outsb
ljmp
inc
das
enter
mov
pop
and
jp
xchg
es
mov
test
int3
data16
fst
divl
add
sti
cmp
and
mov
into
mov
cmpsb
jecxz
orb
add
sbb
adc
and
inc
jae
popf
addr16
jns
imul
jne
icebp
adc
std
pop
sbb
aaa
jmp
mov
loop
pusha
pushf
repz
jl
xchg
cwtl
pop
xchg
int
sub
xor
sub
jns
decl
inc
dec
jmp
lods
leave
xlat
mov
add
inc
dec
add
add
sahf
mov
insb
cwtl
add
ret
fistpl
shll
sub
cld
jge
outsl
addr16
push
lret
mov
pop
push
cmpsb
gs
inc
dec
sbb
movsl
sub
in
lahf
mov
cmp
in
xor
gs
push
std
add
and
pop
dec
lret
dec
repz
cmc
hlt
or
xor
insb
mov
ret
or
adc
sub
repnz
in
les
pop
fwait
shll
or
imul
fisttps
or
in
nop
mov
dec
pushf
aas
push
xlat
mov
mov
mov
arpl
cmp
add
mov
jp
insl
fwait
mov
mov
mov
dec
sbb
cmpsl
add
sti
mull
or
gs
inc
lods
xchg
adc
enter
jecxz
bound
frstor
lock
sbbb
sbb
cmp
mov
push
fisubrl
loop
dec
or
or
and
mov
aad
mov
add
sbb
lcall
push
jg
sub
lock
adc
and
cmp
imul
dec
shrl
ja
sti
in
inc
insb
and
or
mov
sbb
xlat
insl
mov
fnsave
cmpl
out
xor
mov
xchg
dec
mov
aaa
test
fcoml
add
fwait
into
mov
jge
xor
leave
mov
mov
jae
das
pushf
cltd
std
ret
push
lcall
cmc
add
adc
jo
cld
addr16
sahf
lods
orl
int
pop
mov
mov
pushf
xor
xchg
insb
sub
cmpsb
test
mov
ret
jbe
mov
push
xor
subl
adc
adc
or
adc
lahf
int3
mov
mov
addr16
cli
lret
dec
mov
xchg
out
adc
xchg
push
pop
arpl
mov
and
nop
cmpsl
lods
movsb
or
sub
es
add
insl
stos
mov
outsb
xlat
push
ficoms
scas
movsl
jmp
cmc
movsb
jb
adc
jge
lods
std
cmpsl
in
mov
cmp
push
mov
add
mov
ror
test
adc
xchg
mov
std
or
lods
add
lods
stos
and
mov
pushf
lcall
jns
lret
ss
movsb
call
jge
and
sti
insb
push
mov
push
in
mov
lods
cwtl
sub
orl
dec
pop
rol
std
inc
popf
xchg
jno
mov
js
addr16
int3
sbbb
out
adc
adcl
std
movsl
test
mov
or
das
inc
hlt
in
mov
add
add
push
repz
popf
loopne
inc
int3
cmp
jp
js
repz
inc
add
and
mov
cmc
out
fadds
lret
shrl
inc
movsl
dec
inc
push
pop
and
mov
push
xchg
insb
mov
xchg
into
sti
add
push
sub
outsb
lock
incb
adc
mov
inc
add
jnp
pop
mov
lods
and
sbb
mov
adc
xchg
data16
xor
jae
std
loope
lret
aam
enter
clc
mov
xchg
repnz
hlt
ds
div
outsl
jb
push
loopne
pop
sub
stos
insl
mov
jb
pop
fs
dec
cld
lret
mov
xor
cltd
imul
sti
jbe
and
in
shl
mov
xor
jae
notb
jnp
pop
lcall
loop
adc
movsl
ja
das
pusha
inc
loop
gs
pop
xor
dec
adc
das
cmpb
sub
push
icebp
mov
rorb
xor
fldenv
out
fsubp
inc
stc
push
aaa
pop
ds
loop
mov
add
dec
cs
mov
ror
sub
xor
jge
shl
dec
mov
lret
in
ds
xchg
lret
out
sbb
pushf
std
out
sub
mov
jecxz
push
pop
out
les
mov
lahf
sbb
adc
outsb
mov
xchg
loopne
push
aaa
xor
int
addr16
adc
cmp
push
bound
je
mov
jno
daa
jb
jl
test
pop
incl
lea
mov
pop
sahf
inc
lds
rclb
enter
scas
ja
enter
inc
iret
arpl
bound
out
sahf
repnz
sub
sbb
inc
xor
pushf
mov
mov
divb
add
iret
test
push
cmc
and
insb
ret
and
cmp
in
repnz
outsl
popa
jmp
xorb
jmp
into
xor
aaa
std
adc
xchg
or
pop
mov
mov
add
movsl
sub
es
movsl
mov
out
aam
mov
adcl
stc
lods
ds
out
and
lahf
sub
dec
dec
cmc
roll
mov
pop
out
xor
cmpsb
int
inc
scas
xor
lret
movsb
jle
jbe
arpl
push
addl
shl
test
aad
xlat
ror
cmpsb
xchg
xchg
jmp
jp
aad
in
mov
cmpsl
ret
mov
outsb
mov
repnz
cli
mov
sub
mov
jbe
and
mov
xor
shr
sub
dec
out
js
fwait
std
adc
iret
aas
dec
inc
mov
adc
in
pop
pop
pop
outsb
pop
lret
ret
stc
outsl
lret
sub
add
push
jno
pop
add
iret
out
shll
lahf
and
aaa
movsl
out
add
mov
fmull
nop
nop
adc
sbb
mov
xchg
into
cwtl
les
les
scas
cli
mov
cmp
js
lods
stos
hlt
scas
aas
popa
mov
mov
mov
dec
or
mov
icebp
mov
clc
orl
inc
push
vhsubps
std
jle
push
sbb
sub
push
mulb
pushf
and
aaa
cmp
cli
repz
or
inc
mov
pop
pop
sbb
outsb
pop
push
sub
push
ds
mov
dec
aaa
mov
sub
jo
xlat
inc
sbb
add
rcrl
fcmovnu
inc
pop
push
mov
dec
xor
movsb
add
sbb
add
jmp
jb
je
jno
iret
push
cmc
mov
push
pop
xchg
stos
lods
sub
cmpsl
bound
rorb
cld
sub
pop
and
aad
mov
or
fsubr
sub
mov
decl
andl
jge
dec
and
in
pop
mov
or
pop
inc
jno
and
enter
movsb
push
pop
insl
inc
mov
addr16
insl
sbb
mov
movsl
out
xor
fwait
inc
dec
sbbl
mov
in
sbb
shlb
aas
pop
xor
das
jmp
mov
sbb
push
pop
dec
xchg
mov
jae
jne
negl
xchg
cmp
sahf
mov
sahf
mov
mov
or
imul
in
nop
pop
sub
fstpl
adc
and
arpl
mov
popa
jmp
sub
mov
xor
daa
mov
push
sbb
jmp
inc
aam
mov
or
add
shll
cmpsl
stc
push
jns
ss
hlt
fdivp
xchg
outsb
push
mov
aas
leave
das
mov
push
std
inc
out
jl
shlb
inc
inc
out
mov
out
mov
adc
mov
lea
sbbl
and
call
pop
test
out
fnstcw
mov
nop
sub
movsl
jno
or
dec
inc
rorb
xchg
sbb
cmp
sub
lock
mov
pop
sbb
push
stos
and
mov
mov
int
inc
into
arpl
xor
xchg
mov
popl
lods
into
insb
mov
lods
fcoml
fs
into
sub
dec
mov
out
imul
adc
xor
add
ret
ss
fcoms
lods
out
and
mov
and
pushf
dec
xor
cmp
xor
nop
imul
inc
push
stc
or
scas
push
pop
stos
and
jg
ret
pop
into
cmc
jle
sub
lahf
ret
sbb
ds
jge
imul
mov
and
jb
push
add
push
mov
cwtl
cmpsb
sti
and
stc
sbb
and
dec
mov
daa
iret
stos
scas
jp
js
adc
js
xchg
in
sub
in
call
jnp
sbb
or
mov
shlb
and
lock
xor
mov
int
pop
cmp
test
out
sbb
dec
jle
add
push
mov
ret
mov
inc
sub
cmp
jne
cwtl
cld
sbb
xor
cmc
xchg
xlat
xchg
push
mov
mov
mov
stc
mov
sub
pop
cmc
int
mov
adc
xchg
pop
loope
lret
dec
xchg
cmp
lret
cmpsl
pop
scas
into
and
hlt
adcl
repz
inc
inc
bnd
lahf
out
daa
xchg
jg
lret
sbb
test
sub
imul
pusha
jge
fcoml
jmp
adc
adcb
xlat
push
inc
cmp
cmp
out
dec
insb
mov
in
aad
push
into
int3
jbe
push
rcl
cmpsl
add
shrl
into
repnz
dec
aam
outsb
xchg
stc
dec
sbb
inc
mov
jl
mov
xlat
ss
stc
jl
adc
push
ficoml
cltd
cmpsb
cmc
popf
mov
or
cs
std
sbb
jae
mov
out
mov
icebp
mov
pusha
into
push
sub
jecxz
insl
cmp
inc
jmp
imul
sbb
xchg
or
lcall
div
fildll
adc
jnp
mov
mov
daa
mov
jnp
xor
lahf
mov
and
add
dec
movsl
adc
push
fistpll
sbb
mov
enter
dec
add
in
or
fsincos
aas
int3
dec
lods
lret
inc
insl
push
fidivl
bound
loopne
cmpsl
cmc
push
sbb
adc
int
sar
lcall
stc
xchg
jo
movsb
and
and
pushf
ljmp
stos
mov
int
jae
loop
mov
ret
add
cltd
mov
cmp
adc
add
or
cmp
inc
or
imul
inc
mov
jp
adc
dec
mov
outsl
push
mov
inc
cwtl
pop
pusha
mov
sub
pusha
sbb
mov
jae
cmp
fsubs
add
imul
mov
push
cmc
sarl
es
lods
popf
mov
dec
fidivrs
loop
adc
popl
xor
mov
imul
adc
push
push
das
cli
sahf
and
xorb
ret
shrl
xchg
xor
xor
idivb
adc
ljmp
test
jns
and
sahf
jno
mov
inc
out
xchg
add
cmp
test
pop
data16
sub
mov
ret
rcll
fwait
je
fsubrp
aaa
sub
enter
imul
sbb
je
pop
jnp
cli
daa
faddl
sub
cld
dec
sub
sub
leave
pop
mov
jns
clc
enter
stc
dec
andb
jp,pn
lahf
pop
out
cmpl
cld
push
xor
and
fdivl
and
into
es
sub
xor
xchg
push
fisttpl
jae
in
cmc
roll
fstpl
mov
mov
ljmp
js
sbb
sub
mov
sbb
cmp
jg
dec
add
mov
and
sub
sbb
jns
mov
sti
lods
stc
into
inc
daa
jne
outsl
scas
inc
jge
decb
scas
lahf
daa
xchg
insb
and
xor
arpl
out
fucomp
lahf
mov
jle
adc
fmuls
fildll
push
sbb
dec
rclb
shll
xor
sarl
rclb
rcrl
mov
fiaddl
sbb
xor
stos
lret
add
out
jl
sti
je
fwait
mov
push
out
or
xchg
pop
xchg
outsl
aas
mov
jge
sbb
cmpsl
icebp
shlb
or
mov
popa
push
int
leave
sahf
cli
test
xor
jnp
call
or
sub
jg
mov
in
sbbb
and
les
jns
mov
mov
push
mov
aas
cmp
pop
jae
out
scas
xlat
push
fbld
sbb
or
imul
jbe
fs
xorl
pop
cmp
jp
mov
mov
ret
mov
das
test
add
mov
inc
adc
sti
cmp
xchg
add
aad
pop
cmp
mov
sbb
jl
pushf
mov
pop
cltd
ds
fwait
pop
mov
rclb
inc
xor
mov
fdivrl
add
mov
adc
sub
rolb
push
ret
imul
ss
in
fidivl
pop
xor
mov
fisubrs
xchg
repnz
cmp
rolb
pop
fcoml
pop
in
inc
mov
sub
pop
mov
lahf
push
or
iret
pop
pop
orl
jae
cmp
xchg
cmp
sbbb
test
aad
mov
cmp
repnz
mov
xor
mov
jmp
leave
or
lcall
push
inc
imul
ds
test
fcomp
rcrb
dec
loop
sbb
mov
push
sub
dec
push
jecxz
cli
mov
negl
mov
mov
in
push
fistpll
jg
or
jne
mov
push
xchg
movl
add
fxch
pushf
enter
sub
pushf
xchg
lods
pop
clc
orb
test
push
js
jecxz
ret
mov
jmp
ds
int3
insb
cmc
pushf
fbld
xor
ror
mov
cmp
in
and
data16
lahf
ret
push
iret
and
sbb
test
rorl
das
sbb
rorb
inc
xchg
orb
jns
xchg
cmp
fisttps
decb
and
xlat
jnp
sub
dec
mov
mov
inc
add
mov
pop
andl
or
adc
xchg
jge
adc
outsl
sbb
mov
mov
js
rcrb
lret
mov
bound
loopne
add
rcrb
into
arpl
mov
add
mov
push
add
fs
ss
sub
mov
push
push
popf
ret
repz
cmp
jl
shr
mov
rcll
repnz
ret
adc
push
aaa
xchg
fwait
add
aaa
int3
insl
dec
les
adc
inc
jne
fwait
icebp
xor
push
adc
sub
sub
int
or
and
in
pop
mov
lds
push
xchg
dec
mov
cwtl
push
xchg
scas
inc
pop
repz
push
dec
pop
fidivrl
cmp
jo
pop
in
cld
mov
sub
push
fwait
lret
xlat
out
jmp
jae
push
mov
jo
pusha
imul
sbb
fistpll
cmp
and
in
mov
xchg
rcrb
cwtl
jbe
sub
push
mov
cmp
jecxz
mov
inc
fcmovnb
int
mov
fwait
ds
mov
pop
loopne
imul
mov
adc
adc
pushf
rcll
mov
inc
push
jnp
dec
add
fcmovnu
mov
mov
imul
push
xor
add
push
dec
push
xor
rcl
lea
dec
mov
dec
push
arpl
ret
mov
in
push
push
xchg
fstpl
bound
add
push
scas
call
mov
stos
test
inc
sub
push
into
pop
lock
rorb
shll
mov
dec
imul
xlat
pop
jecxz
cs
mov
out
or
movsb
xchg
les
out
imul
test
dec
stos
pop
fs
insl
mov
xchg
inc
mov
addb
xor
cld
mov
addr16
popf
lods
mov
jecxz
data16
movsb
ret
into
xor
scas
out
mov
mov
push
stos
mov
fnsave
xchg
icebp
adc
ret
ds
insl
xchg
mov
pop
pop
sarb
mov
rolb
mov
cmp
scas
loop
mov
mov
inc
pop
xor
bound
xchg
inc
jns
popa
mov
mov
insl
fimuls
jb
push
addr16
cmp
push
ffree
test
out
adc
es
mov
and
ret
and
push
loop
push
jge
sbb
repz
lock
dec
imul
leave
stos
mov
nop
pop
mov
ljmp
sub
aaa
and
inc
scas
adc
rol
push
push
div
jle
sbbb
loop
xchg
cld
mov
aam
lea
dec
jae
push
stos
xor
popa
add
and
sbb
adc
mov
pop
push
fisttpll
mov
pop
pop
add
mov
fst
repnz
mov
lods
push
pop
inc
jmp
add
push
shrl
clc
jne
inc
inc
sbb
fs
outsb
dec
mov
mov
push
and
xorb
out
push
adc
pop
add
jge
cmp
iret
push
cmp
fs
imul
jo
movl
or
cwtl
or
adc
mov
push
fstl
std
leave
xchg
adc
cmp
mov
xbegin
jle
push
out
add
add
push
push
loop
test
andl
and
mov
add
push
mov
int
out
adc
pop
out
mov
mov
inc
das
and
sbb
fbstp
mov
xor
addr16
pop
dec
das
lds
out
test
push
ss
fnstsw
mov
adc
xor
inc
push
les
pop
in
jb
fsub
sbb
and
mov
pop
jmp
cmpsb
int3
or
loope
imul
icebp
adc
jmp
jge
in
aaa
in
sbb
lods
push
ret
lds
jmp
jp
shlb
leave
mov
and
imul
arpl
iret
jecxz
inc
xchg
or
jo
inc
adc
je
es
insb
jmp
adc
push
push
add
cwtl
in
add
popa
arpl
fistps
xlat
es
xchg
testb
and
push
jb
xchg
repz
lret
mov
in
sbb
dec
adc
pushf
leave
out
or
cmp
arpl
jne
rcrl
sbb
lret
dec
push
inc
xchg
lock
push
cltd
sub
cs
nop
jo
dec
jbe
shrl
jge
shll
push
adc
out
aas
push
daa
divl
shr
jl
push
xchg
sub
stos
xlat
stos
les
rcrb
push
scas
push
hlt
lods
xchg
mov
pop
push
in
dec
xor
jbe
mov
or
jbe
inc
loope
fs
dec
pusha
mov
mov
ret
mov
lds
sub
or
ss
call
push
or
push
pusha
mov
mov
lea
adc
inc
lret
adc
sbb
sbb
xchg
adc
add
lock
test
xor
mov
jle
push
lret
jg
push
xchg
nop
call
xchg
push
outsb
jle
mov
sbb
jle
popa
loopne
popf
je
movsb
lcall
and
in
add
popa
push
aaa
insl
rcr
jmp
mov
jne
mov
cmpl
sub
lods
jmp
ljmp
xor
push
test
aad
dec
pop
mov
push
dec
test
fs
notl
loop
jmp
mov
pop
dec
ljmp
push
cmp
push
lods
xchg
leave
loope
outsl
rolb
or
xchg
lds
mov
leave
cli
sub
movsl
cmp
lods
cmp
sbbb
sub
sub
mov
js
push
out
xor
sarl
fcomps
xchg
xchg
fisttpll
movsb
icebp
andl
dec
mov
lcall
add
add
cmc
dec
xor
mov
sub
xchg
push
aas
out
xor
push
les
push
push
insb
icebp
ret
sbb
xlat
jbe
fs
xchg
sbb
cmp
pop
pop
leave
fidivl
sub
jno
mull
xor
dec
xchg
fstpl
fdivs
clc
in
pop
or
xchg
inc
add
movsl
mov
add
push
sub
sbb
das
inc
xchg
fdivrp
push
cli
decb
divb
iret
sbb
rcrb
scas
jle
xchg
loop
mov
inc
pop
xor
jmp
add
sub
mov
outsb
gs
insl
das
out
scas
add
mov
dec
aad
fnstenv
sbb
xchg
std
xchg
int
pop
dec
pop
into
jp
inc
xchg
push
jno
and
clc
sub
xchg
scas
hlt
roll
mov
scas
dec
fldl
rorb
or
pop
dec
loope
sbb
push
mov
push
cld
rcrl
sbb
mov
mov
in
adc
add
inc
sbb
inc
push
cwtl
jg
imul
jge
mov
push
mov
subl
pop
mov
enter
xor
in
or
nop
mulb
xchg
sbb
inc
jl
fbstp
inc
aad
outsb
sub
and
sbbb
adc
lds
xor
aas
bound
das
xchg
or
or
out
xchg
lret
loop
inc
loop
lods
hlt
jg
fwait
mov
and
jnp
popa
push
test
mov
cltd
push
sahf
jae
cmpb
xchg
les
sbb
push
outsl
int
push
mov
mov
popf
inc
xchg
js
repz
roll
jns
fsts
xor
or
les
xor
lret
add
or
jbe
inc
mov
add
je
sbb
mov
dec
cltd
xor
xchg
aam
push
pop
xchg
ficoml
push
repnz
imulb
push
test
shrl
jb
pop
or
mov
sub
mov
sti
rclb
xlat
test
or
cmp
xchg
push
pushf
xor
or
push
xor
inc
and
inc
add
clc
mov
cltd
clc
or
push
cmpsb
xor
pop
and
mov
enter
add
scas
mov
adc
outsb
mov
les
out
mov
sub
or
dec
add
dec
pushf
sub
rcl
lds
or
loop
push
andb
lret
lds
mov
push
xor
jg
pushf
mov
pusha
aas
push
aam
sarl
jbe
xchg
or
sbb
leave
push
shlb
test
jnp
imul
ret
jnp
xchg
test
fisubl
cltd
dec
fwait
sti
push
in
add
jle
and
mov
pop
icebp
add
cmovae
sbb
jo
push
clc
or
lahf
jnp
xor
in
xchg
fwait
scas
dec
inc
leave
push
push
mov
adc
pop
ja
push
int
mov
lcall
mov
jbe
jae
dec
fnstenv
ss
dec
fsubrl
lods
fcomp
subb
inc
add
and
mov
lret
mov
pop
sub
insb
cltd
dec
xlat
es
test
inc
rorl
test
subb
xchg
insb
or
push
cmpsl
mov
push
repnz
push
xchg
lods
sti
out
inc
fcompl
and
mov
ja
aam
xchg
inc
jo
aad
dec
outsl
stos
das
shrl
sbb
adc
jecxz
pop
insl
out
std
mov
mov
enter
xchg
bound
xor
repnz
ljmp
cmc
ret
adc
dec
pusha
idiv
mov
pop
jb
xchg
mov
sbb
mov
xchg
les
inc
sbb
add
mov
mov
dec
mov
dec
popf
jns
shrb
adc
mov
and
xor
aam
mov
mov
mov
loopne
sub
cs
add
fiaddl
xorl
out
sub
enter
mov
dec
jmp
push
dec
mov
jnp
arpl
aas
mov
test
pop
push
outsl
inc
inc
push
inc
or
mov
dec
cld
in
pop
pop
cltd
dec
dec
bound
lds
orl
add
pop
dec
outsb
cmc
inc
jo
jl
pushf
sub
dec
mov
pushl
dec
xlat
jno
push
or
sub
push
xchg
cmp
inc
enter
cld
insb
ds
fcoml
pusha
addr16
or
push
shrl
je
out
mov
inc
es
xlat
mov
inc
sub
xor
popf
out
outsl
inc
sub
jno
push
cltd
imul
es
into
inc
mov
xchg
outsl
lret
repz
jne
and
pop
mov
fmuls
inc
push
mov
sub
repnz
lods
push
fwait
jle
movb
les
enter
das
in
cmp
test
mov
mov
lcall
sub
mov
jae
dec
pop
mov
mov
loop
and
lahf
jns
repnz
cmp
pop
and
cltd
fsts
xor
fisubrl
fnclex
push
xchg
movsb
dec
jbe
into
and
bound
test
sbb
xor
insl
xchg
mov
push
pushf
sbb
jae
push
push
cmpsb
int
mov
inc
cmp
pop
popf
sbb
inc
cmpsb
add
addr16
outsb
adc
xorb
stos
jmp
adc
push
inc
pop
popa
or
dec
jge
push
imull
loope
push
push
jns
lcall
mov
adcl
or
xor
orb
push
adc
iret
and
movsb
adc
int
xchg
mov
jb
xchg
out
sbb
add
jbe
mov
enter
sbb
test
adc
add
push
clc
cmpsl
test
gs
outsb
adc
sahf
imul
loope,pt
bound
fdiv
sbb
inc
int3
mov
sub
lret
xor
sti
add
sbb
test
cltd
jmp
push
sub
mov
sbb
fs
int
add
sub
jecxz
mov
mov
mov
les
mov
loope
push
ljmp
fldt
push
lock
movsb
sbb
outsl
jecxz
in
xorl
lea
fdivl
add
aad
xor
decl
inc
test
lods
mov
jmp
or
pop
adc
in
shlb
sub
jp
add
or
add
dec
push
pop
inc
lods
popa
inc
iret
adc
xlat
adc
mov
inc
xchg
and
arpl
xor
jno
and
aaa
push
ja
dec
sub
ss
xchg
mov
xor
int3
jle
sbb
hlt
mov
pop
stos
lods
popf
dec
cmp
dec
pushf
sub
dec
jns
dec
push
inc
scas
cs
inc
pop
push
sub
fdivr
mov
hlt
mov
add
push
adc
sub
pop
or
imul
push
ret
mov
mov
mov
jae
inc
sbbb
outsb
dec
push
mov
pop
fs
xchg
lcall
xchg
fsubrl
sbb
mov
mov
aad
or
or
fwait
push
addr16
or
pop
ret
stos
andl
push
inc
std
cmpb
mov
mov
es
sbb
sti
push
negl
jle
fildl
and
pop
sub
stos
lock
inc
pop
pop
adc
adc
aam
cwtl
imul
cmp
lret
fcompl
mov
hlt
adc
inc
sbb
mov
test
or
lret
jo
sub
cmp
mov
xor
sub
roll
xor
sbb
mov
jb
aad
mov
aam
and
gs
pop
pop
and
fcomi
test
hlt
sbb
inc
mov
or
inc
pop
fstl
aam
mov
test
or
push
lea
inc
cmpb
cltd
sub
pop
out
je
mov
bound
addr16
iret
sub
and
rcll
xchg
das
sbb
nop
cmpsb
push
adc
mov
ja
xlat
ret
mov
das
jl
test
inc
xorb
imul
jbe
push
push
out
mov
xchg
addl
fildll
xchg
icebp
xchg
mov
sbb
adc
insl
js
outsl
pop
sbb
push
or
cmp
jns
adc
dec
sbb
adc
iret
pop
dec
sbbl
jg
ffreep
jp
ret
pop
inc
xchg
les
lea
mov
stc
lret
add
jecxz
mov
stos
stc
insb
inc
inc
ljmp
xor
sbb
scas
repnz
xchg
inc
push
ret
inc
into
js
push
pop
fadd
enter
mov
inc
xlat
mov
inc
shlb
fwait
ds
xlat
out
dec
xchg
mov
idivb
push
mov
and
ror
pop
pop
add
push
push
test
in
sub
mov
mov
mov
int
scas
adcl
cmp
jnp
mov
gs
ds
shlb
cmc
icebp
mov
or
cld
shll
jo
sarl
mov
fwait
daa
rcl
cs
iret
cltd
les
and
movntq
out
cmp
pop
cld
sbb
iret
or
stos
pop
add
pusha
xor
dec
fldcw
push
and
lea
dec
repnz
hlt
mov
aam
int3
adc
add
jne
mov
jae
and
fisubs
pushf
sbb
popl
cltd
loope
daa
roll
add
insl
out
lock
dec
into
lret
pop
jns
mov
add
xchg
imul
xchg
movb
push
out
xor
addr16
fists
and
adc
dec
mov
mov
jge
divb
xchg
add
jb
js
idivl
xchg
and
imul
and
mov
fwait
mov
push
shlb
inc
loope
cmp
mov
jns
mov
andl
jne
rorl
aaa
sub
repnz
cwtl
sbb
pop
sbb
aaa
jle
dec
sub
fisttps
xchg
aam
aad
packuswb
xchg
sub
push
inc
xor
sti
adc
inc
add
ds
dec
sub
mov
adc
inc
mov
push
dec
or
mov
push
imul
jge
test
jmp
xor
pop
xchg
fadds
push
mov
scas
dec
cs
testb
movsb
dec
incb
pop
jecxz
std
mov
fmuls
in
scas
out
aam
jns
jge
cmp
sbb
pop
ja
pop
mov
in
xchg
js
push
and
or
add
add
cmpb
and
mov
or
out
sbb
and
bswap
outsl
add
insb
and
fs
sub
dec
push
mov
cmp
dec
int
jg
shlb
dec
mov
addb
push
push
add
cld
inc
ss
fcomps
mov
stos
mov
pop
pop
push
test
jb
out
xlat
divb
popa
pop
bound
lock
mov
adc
sbb
loope
hlt
jno
push
ja
bound
and
xchg
negb
sarl
loopne
imul
cmp
or
xchg
jmp
shlb
xor
adc
nop
jae
mov
xorb
adc
xor
xor
inc
leave
pop
lods
xchg
push
gs
and
outsl
or
adc
lret
push
inc
push
int
lret
sarb
imul
dec
or
pushf
mov
inc
inc
mov
sub
add
pusha
jbe
in
xchg
push
sti
insl
lods
xor
mov
hlt
push
adc
cs
or
scas
cmc
jns
push
imul
sbb
cld
add
std
popa
and
out
cwtl
popf
mov
jg
aad
pop
dec
popa
xchg
ljmp
lods
xchg
sbb
call
outsb
cmpsb
push
in
stos
test
nop
sbb
xchg
mov
push
stc
sub
repnz
add
imul
add
sub
dec
jl
xlat
cmpsl
dec
jecxz
mov
jno
jmp
inc
push
mov
in
xlat
sbb
xchg
push
inc
fisubrl
push
lds
sub
sbb
in
xchg
inc
jmp
cwtl
not
pusha
mov
lea
jecxz
test
fwait
lea
mov
insl
pop
popa
mov
iret
fstl
xchg
lds
adc
jnp
mov
lds
pop
daa
or
xchg
mov
test
or
adc
inc
out
push
loop
fs
scas
movsl
xchg
movsl
inc
jbe
mov
stos
inc
or
imul
insl
sbb
sarb
aam
imul
push
outsb
push
loope
sub
cmp
cmpsb
out
xchg
pop
repnz
or
xchg
xchg
test
movb
fidivl
popf
mov
movsl
pop
fcompl
lret
jae
mov
jmp
push
and
add
insl
xchg
sub
cmpsl
xchg
leave
jae
push
push
test
push
ret
pop
lret
pop
jno
pop
mov
test
inc
subl
gs
sub
movsb
icebp
mov
or
push
aam
cld
gs
dec
in
mov
jle
clc
push
lahf
mov
jge
fs
leave
sub
sbbb
jecxz
or
push
sub
outsb
cmp
sub
shl
push
cmp
sbb
pop
scas
jle
dec
jge
stos
adc
popl
mov
sub
ret
cmp
lahf
rsm
adc
lods
add
add
sub
out
or
jl
add
lret
pop
sbb
push
lret
notb
mov
movsl
push
mov
ljmp
rolb
lds
fwait
pop
daa
cmpsl
ror
jge
repz
xchg
jge
fcomp
dec
push
dec
mov
cmp
pop
and
pop
inc
mov
iret
cld
mov
inc
jg
mov
xchg
mov
pop
dec
mull
psubsw
loop
mov
mov
pop
sbb
fdivs
std
add
fsincos
decb
inc
add
cmp
movsl
mov
pop
jno
mov
cltd
mov
lcall
clc
and
sub
fstl
sub
leave
je
or
push
or
out
flds
mov
cmp
repz
and
into
icebp
cltd
mov
fbstp
sbb
iret
sbb
call
cmp
jmp
lds
xchg
add
inc
test
rcl
jp
push
xor
jbe
mov
ljmp
insb
or
loope
ljmp
jns
xchg
in
insl
cmpsl
cs
pusha
jmp
push
sbb
sub
mov
sbb
mov
xchg
aad
stc
and
sbb
push
sbb
shrl
pop
mov
cli
inc
movsb
and
mov
push
add
sub
cmp
filds
push
sub
xchg
bnd
je
fucomip
xchg
ret
pop
data16
std
in
fbld
inc
xor
push
sub
popa
stos
pop
ret
xchg
push
fcomps
add
mov
push
push
je
sub
jno
dec
cmovg
into
aaa
xacquire
mov
push
es
and
adc
jbe
jmp
in
cwtl
and
and
mov
ficoml
mov
inc
cmpsl
sub
mov
push
push
imul
jne
or
lea
cmp
cmp
mov
push
push
cmp
sbb
lods
sub
out
test
jmp
fnstenv
xchg
dec
imul
fs
xchg
xchg
dec
test
inc
and
sbb
xlat
out
outsl
xchg
test
push
arpl
mov
add
sub
aaa
mov
test
shrb
mov
mov
mov
xorl
fcmovne
jae
leave
or
cmp
rcrb
push
inc
mov
xor
mov
fwait
pop
test
mov
jae
std
and
push
fdivs
mov
xor
push
add
aas
and
and
mov
jecxz
subl
int
add
mov
fistl
iret
xchg
out
or
sub
pand
sbb
jp
jp
or
jo
xchg
sub
adc
xchg
mov
int
jp
pop
mov
dec
mov
mov
xor
out
mov
adc
mov
out
lock
mov
mov
xor
dec
push
nop
inc
push
sub
pop
ljmp
adc
mov
xor
pop
in
adc
scas
mov
cmpsl
in
sbb
cmp
movsl
ljmp
cs
loope
dec
push
cmp
clc
hlt
push
jl
cmp
stc
add
testb
decb
xchg
adc
pop
xor
fidivrs
mov
xchg
pop
adc
scas
pop
mov
ds
cmpsb
movsl
jno
outsb
outsb
push
insl
cwtl
mov
push
add
jg
insl
xor
loope
shrb
jae
mov
jle
mov
sbb
xor
bound
and
enter
ljmp
dec
and
fiadds
xor
and
cld
or
out
push
mov
sbb
cli
lock
clc
xchg
fdivrl
sbb
popf
adc
sbbl
mov
and
test
mov
jl
jge
push
and
jp
push
inc
shll
sub
push
jns
push
scas
jae
es
add
xor
sub
dec
mov
pop
xchg
js
jbe
sbb
nop
dec
and
xchg
rep
sti
xor
inc
and
loope
fstpt
lret
adc
inc
rcll
push
bound
adc
sub
cmpsb
and
lret
xchg
shll
iret
mov
test
jge
push
inc
add
cltd
pmuludq
jge
add
nop
jge
fistps
sbb
and
iret
xchg
lahf
repz
lds
mov
test
and
dec
fidivl
push
ss
cmp
inc
sbb
outsl
sbb
cmpsb
mov
add
and
fdivrl
pop
push
clc
pop
mov
fcomp
cmp
sbbl
inc
lds
mov
scas
push
es
adc
push
jae
lock
mov
fwait
out
push
inc
gs
add
int
push
ljmp
sbb
jno
jmp
leave
mov
fidivrs
cli
mov
addr16
js
xchg
push
xor
aad
int3
ja
inc
outsl
jle
test
push
pop
jmp
push
pop
jae
fnstenv
mov
cwtl
divl
in
dec
stos
aas
inc
inc
mov
sub
xor
or
inc
inc
gs
push
mov
int
inc
fs
cmp
rcr
and
fists
orl
pop
movsl
sub
pushf
and
roll
scas
inc
into
sbb
sti
out
ds
sub
mov
leave
cwtl
push
pop
push
dec
out
ds
les
cmc
jmp
lret
adc
int3
in
movsl
add
in
outsb
shlb
pop
push
test
cli
out
dec
push
ret
pop
push
lahf
push
xor
or
mov
mov
rcl
rcrb
in
roll
add
jo
popf
push
push
cmp
lods
jmp
out
cli
fimull
adc
pop
or
mov
pop
mov
es
or
call
outsb
jo
pop
and
xchg
jno
mov
fs
daa
idivl
cmpsb
mov
mov
ret
cmpl
aaa
repnz
xor
add
cmp
movsb
jns
shll
lods
cmc
xlat
popf
mov
pop
popf
insl
cs
arpl
jl
mov
test
cld
add
into
xor
js
test
inc
movsb
stos
xor
push
ljmp
pop
sahf
xor
lds
jg
cmp
inc
std
popf
arpl
lret
add
mov
aam
add
or
mov
in
lret
fcompl
daa
shlb
not
imul
decb
aas
lds
or
sbb
push
outsb
sahf
mov
loope
inc
out
push
andl
push
mov
mov
add
es
push
nop
jmp
fwait
clc
lahf
xor
xchg
or
sti
popf
inc
fdivr
daa
xchg
in
mov
cwtl
pop
xor
mov
or
insb
das
frstor
daa
inc
mov
jae
mov
js
test
daa
cmp
scas
cmpsl
and
out
jp
jmp
dec
ss
sbb
inc
xsha1
cmpsb
dec
xchg
shlb
lds
add
push
pop
das
push
and
iret
sbb
push
pop
lret
xor
sub
jo
lea
iret
repz
or
test
ret
iret
lock
das
xor
in
cli
or
divb
xchg
std
or
aas
pushf
les
gs
rorb
and
push
xchg
and
loopne
xor
clc
cmp
cli
sahf
sbb
scas
xchg
mov
mov
in
subl
lock
mov
push
imul
inc
lea
adc
jl
je
mov
cmp
mov
loope
sub
in
lds
les
fs
cs
repnz
out
mov
lcall
xchg
adc
push
adc
cmp
push
mov
flds
mov
popf
inc
mov
in
outsl
mov
out
jl
rcll
dec
mov
mov
pop
cmp
cmp
outsb
cmp
mov
sbb
cmp
into
xchg
cld
add
push
fsub
jmp
icebp
push
and
jmp
repnz
outsl
pop
adc
xchg
jne
lock
int
popf
fsts
icebp
inc
mov
xchg
push
iret
pop
add
jp
mov
and
insl
xchg
mov
dec
movsb
data16
rcrl
pop
test
enter
jae
dec
or
mov
lret
cmp
std
jge
test
adc
push
sbb
dec
pop
mov
adc
stos
int3
sbb
mov
loope
out
nop
mov
pushf
outsb
fnstenv
xchg
inc
insb
cmp
int
test
js
shrl
mov
imul
cs
dec
mov
ficoml
stos
inc
cmp
scas
lea
mov
sbb
cmp
push
out
inc
lret
sti
sbb
mov
sub
iret
mov
dec
ret
cmp
push
out
jnp
inc
fdivrs
sbb
inc
cli
fnstsw
stc
xor
stc
cwtl
mov
mov
stos
sahf
jo
xchg
ficoms
dec
mov
lret
jge
adc
loop
mov
pop
out
loope
xor
outsl
xchg
mov
sub
testb
cwtl
jbe
add
mov
pop
dec
repz
xor
test
add
or
mov
sub
cs
hlt
insb
iret
xor
shlb
push
mov
xchg
pusha
es
inc
mov
inc
and
es
push
xor
add
sub
js
nop
fwait
jl
movsl
push
insb
sti
pop
popa
xchg
cmpsl
xchg
pop
mov
sub
cs
lret
clc
and
mov
mov
or
jmp
loop
enter
inc
add
cmp
in
cmpsb
rorb
sub
adc
sub
mov
loope
and
sbb
jg
cmp
decl
test
jmp
xchg
push
fidivrs
adc
xchg
scas
decb
not
cwtl
rorb
loopne
xlat
lds
out
jmp
mov
push
dec
lods
mov
es
dec
push
hlt
imul
sbbb
gs
fistpll
mov
pop
cmp
stos
outsb
das
jbe
out
push
mov
out
out
js
and
stc
mov
decl
outsb
jbe
inc
jl
fs
and
les
loope
add
cmp
pop
jns
test
or
loop
std
out
outsb
enter
sbb
inc
lea
enter
adcb
imul
push
push
mov
mov
repz
syscall
ret
repnz
xlat
cltd
outsl
pop
jmp
in
pusha
movsb
ljmp
ja
dec
fucom
sti
test
or
loope
adcl
jo
mov
mov
jnp
addl
das
dec
cmp
xor
mov
sub
faddl
into
push
pop
xchg
adc
aas
fucomip
sub
jge
cmp
jns
imul
insl
fnstcw
and
shr
fcmovb
mov
hlt
je
pop
and
sbb
outsl
jnp
test
leave
mov
shlb
orb
mov
rorl
fcomps
icebp
add
push
add
pop
stos
mov
outsb
xor
je
mov
ja
jmp
push
pop
inc
rcll
lea
jmp
icebp
mov
xor
mov
xchg
adc
xchg
inc
int3
add
pusha
rcr
call
imul
and
add
inc
rclb
gs
jle
mov
cmp
add
aas
pop
movsl
in
fidivl
lret
pop
inc
sahf
inc
pop
adc
sahf
insl
nop
dec
pop
fcmovu
mov
rolb
lds
and
mov
mov
subb
ds
push
mov
xchg
mov
pop
lret
loopne
jecxz
es
sub
sahf
aas
ljmp
or
mov
xchg
add
pop
and
sbb
arpl
std
popf
stos
cmp
inc
fidivrs
lods
sahf
mov
bound
pop
jle
daa
mov
jno
aad
or
aad
outsb
iret
icebp
incb
shl
add
push
lcall
lahf
sub
in
into
inc
scas
jb
or
push
ss
push
cmp
or
int
leave
sbb
leave
mov
gs
and
sbb
push
inc
push
sub
push
mov
ret
add
pop
shrb
mov
pop
ret
dec
into
movsb
lret
adc
cmp
loope
or
push
test
add
pop
int3
in
push
stc
imul
fbstp
sub
sub
push
sbb
inc
inc
out
dec
sahf
inc
aas
cmpsl
jns
push
push
addl
int
bound
stc
loopne
lret
sbb
nop
dec
and
nop
inc
adc
add
adc
ja
mov
mov
mov
test
int3
jl
dec
dec
das
ret
xor
repnz
push
sbb
push
mov
ss
add
add
stc
stos
or
cld
test
jb
cld
data16
fnsave
dec
lods
or
pop
cmp
xor
jl
movsb
aas
in
jns
shl
and
es
sbb
pusha
es
leave
outsb
mov
mov
mov
pop
mov
push
xchg
aas
outsl
mov
imul
push
push
mov
cli
mov
ds
dec
dec
and
mov
push
push
or
mov
sti
add
add
add
pop
les
fisttpl
xlat
jo
mov
rcr
mov
mov
cmp
sbb
daa
loopne
jb
cmpsb
mov
daa
mov
loope
pop
cmp
sub
out
mov
dec
sti
add
imul
lods
jmp
shrl
push
or
mov
xor
decb
int
inc
jns
cwtl
test
movsl
shlb
imul
pop
pop
push
les
lods
bound
or
xchg
or
jnp
fistpll
fcos
loopne
fisubl
hlt
adc
sub
dec
fdivrl
ret
jne
sub
push
int
push
scas
and
psubusb
movsb
add
call
jno
adc
sbb
xchg
mov
sbb
mov
mov
sub
sbb
mov
sti
cltd
lret
into
jae
xor
and
aam
cmp
push
shrb
ror
in
mov
int
sarl
data16
jbe
repnz
dec
cli
aad
xchg
mov
push
jle
imul
fistpl
xor
hlt
jnp
mov
mov
push
or
jg
xor
sub
aad
push
mov
not
insl
push
cltd
adc
es
lea
fstpl
sub
xorb
nop
stc
lahf
cmpsl
imul
clc
repz
pop
pop
push
pop
fcomps
fisubs
notb
jo
pop
mov
mov
fildll
shll
rclb
mov
imul
pop
sub
mov
add
int
pop
fcompl
mov
fdivrs
jg
notl
inc
xor
jbe
xor
mov
pusha
popf
mov
xor
ja
bound
clc
sub
mov
push
call
xchg
inc
in
daa
mov
pop
ds
das
in
inc
popl
push
addr16
adc
dec
sub
test
sbb
mov
dec
pusha
jp
lods
mov
pop
icebp
xchg
xor
or
pop
subb
out
pop
mov
lret
shl
je
je
addb
in
mov
cmp
or
and
int3
cmpsl
or
xor
mov
out
xor
mov
aaa
mov
sub
cmp
lahf
xor
je
pop
decb
ss
stos
pop
pop
or
jbe
ror
push
and
loop
sbb
mov
jecxz
jo
xor
jl
ljmp
pop
cmp
cmp
mov
sarl
call
jns
ds
push
mov
inc
outsb
popa
or
fbld
and
into
rclb
jge
mov
jbe
pop
enter
inc
scas
outsl
cs
or
scas
out
shrl
cmpsl
shl
out
inc
mov
rorl
cwtl
or
out
push
xchg
mov
xor
je
mov
icebp
pop
lods
adc
xchg
cmpsb
popf
fwait
in
cwtl
jmp
mov
rcr
mov
sub
jge
xor
fildl
xor
dec
push
cwtl
or
rcl
mov
jle
mov
and
data16
sub
push
inc
cmpsb
iret
add
adc
sti
arpl
sub
cmp
bound
mov
xchg
cs
movsb
lods
lds
xchg
clc
and
bound
adc
jb
in
cwtl
test
lret
filds
jl,pn
sbbl
push
fwait
addr16
insl
cmp
jae
sub
sbb
xchg
int
dec
rcl
cmp
and
xor
pop
sub
aaa
cmp
clc
ret
cmp
xor
jp
fdivp
enter
xor
mov
sti
dec
cmp
lea
mov
mov
cmp
dec
add
mov
sbb
sbb
cmp
mov
inc
fidivrs
pop
pop
fisubrl
js
sbb
cmp
mov
sbb
in
out
fs
mov
pop
inc
jnp
mov
stc
push
jmp
jbe
lods
xor
fisubrl
sbb
dec
adc
loopne
insb
xchg
into
stc
insl
hlt
cli
sbb
pop
mov
lds
mov
outsb
xchg
lock
out
je
jns
push
dec
daa
insl
jo
aas
ljmp
call
or
les
data16
in
fwait
cmp
mov
rorb
sarb
xchg
lods
test
in
mov
adc
cltd
push
int3
mov
dec
sub
mov
fwait
mov
push
jo
xor
lods
add
loop
push
mov
mov
and
fsubs
push
cmc
sub
pop
es
xchg
nop
sub
pop
ret
dec
nop
inc
ret
mov
adc
gs
push
ljmp
pop
mov
push
pop
mov
addl
imul
test
jae
jae
test
pop
shl
cmpsb
jne
stos
jo
adc
xorb
jno
and
ret
inc
movsb
adc
addr16
sarl
xchg
mov
cmp
divl
lea
jg
add
mov
jle
and
rcll
popf
fimull
mov
loopne
into
repz
mov
cmp
lea
add
sbb
push
mov
push
jp
jl
in
cmpsl
fmull
nop
aas
cmp
fisubl
xchg
sub
adc
push
int3
sar
mov
jns
pop
ss
xor
jnp
orl
xchg
push
dec
mov
xor
inc
mov
stc
push
and
sub
push
jle
in
scas
inc
faddp
adc
sub
sti
mov
or
int
jns
scas
xchg
dec
xchg
add
inc
jb
pusha
aam
test
mov
data16
stc
fwait
pop
jbe
adc
add
inc
push
cmp
sarb
jp
insb
lret
sub
fisubrl
sbb
daa
xor
cli
sbb
or
rcr
test
cmp
arpl
add
addr16
mov
lahf
fcompl
scas
lods
stos
sub
xchg
add
mov
int3
in
fcomps
movsl
push
sbb
adc
dec
inc
aas
sarb
std
pop
xchg
inc
ret
out
xchg
sbb
clc
pop
dec
leave
aad
xor
adc
and
mov
or
in
cmp
dec
dec
arpl
popf
ret
sub
mov
mov
push
dec
aam
add
stc
nop
sbb
add
pop
cmp
and
fidivs
xadd
sub
xor
mov
lret
ljmp
outsl
adc
xor
sti
mov
push
mov
imul
scas
pop
mov
push
adc
cmp
jno
fpatan
sub
or
insb
xorb
fwait
cwtl
in
shl
enter
aad
push
stos
inc
sahf
dec
popf
push
push
mov
cwtl
jne
mov
adc
cmp
push
lcall
fisttps
stos
pop
enter
jg
cmp
and
decb
decl
shlb
and
out
lods
stc
pusha
pusha
subw
mov
rorb
ja
test
movsl
mov
or
sbb
and
fwait
imulb
mov
adc
mov
sub
jbe
in
insl
jmp
add
pop
fsts
mov
or
movsl
inc
in
ja
loop
rclb
lret
push
popf
icebp
pop
jnp
repz
xchg
lret
pop
cmpsl
enter
jp
cmp
lods
out
mov
sbb
movsl
xorb
movsl
cltd
imul
out
sbb
inc
cmc
jb
jmp
mov
push
pop
popf
stc
push
clc
ljmp
ret
mov
cltd
jbe
loopne
mov
pop
and
pop
ss
push
sub
out
ret
sub
popa
jo
push
lea
leave
lret
sbb
ret
pop
push
loopne
addr16
mov
das
mov
int3
xchg
popa
xor
rcr
xor
sub
test
dec
movsb
push
xor
hlt
leave
loop
or
cli
clc
aad
jae
cmc
cmpsl
or
sbb
les
sub
clc
mov
pop
js
and
adc
sbb
in
xlat
jp
or
mov
cmp
fmull
xchg
jo
loope
inc
cmp
std
inc
cmc
call
inc
clc
xor
lret
outsl
sub
cmpsl
xchg
xor
xorb
ret
xor
mov
addl
fs
dec
aam
push
fildll
mov
popa
add
xor
lock
jge
xor
lret
mov
icebp
sbb
das
cwtl
jno
roll
ret
mov
lret
add
and
inc
adc
test
shlb
repnz
rcrb
inc
fldcw
dec
divb
fisubrs
call
and
sub
or
inc
xchg
ss
cwtl
push
enter
ds
pop
pop
mov
add
mov
cmp
xchg
adc
stos
cwtl
addr16
fsts
into
adc
mov
ficompl
pop
jno
es
cmp
add
xchg
mov
test
flds
or
inc
bound
mov
adc
sar
add
outsb
dec
iret
in
movsb
lock
clc
push
xchg
ss
dec
cs
les
xchg
in
repnz
xchg
bound
mov
test
pop
cmp
shll
adc
rcl
ljmp
mov
psadbw
jecxz
xlat
int3
fdivl
jmp
lock
ja
sbb
cmp
outsl
daa
and
enter
xchg
mov
int3
mov
sub
sub
xchg
pop
je
mov
push
cmp
and
push
jae
jle
dec
insb
and
test
cwtl
xchg
cli
or
mov
xchg
add
popf
sbb
mov
add
mov
or
fadd
xchg
xor
inc
aas
and
es
loope
cmc
sbb
or
sbb
test
popa
adc
movsb
sbb
xor
adc
xor
movd
sbb
test
aaa
pop
out
mov
out
mov
cmp
dec
inc
pop
sub
sub
fsubl
adc
or
mov
push
fucomi
invlpg
call
movsb
divl
rolb
push
cmp
jecxz
hlt
ja
inc
xchg
insl
sbbl
sbb
push
sbb
ss
lds
es
jp
and
leave
test
xchg
xchg
xchg
bound
cmc
aam
push
test
fcmovu
inc
mov
cmp
or
sub
ds
mov
movsb
test
mov
ss
jmp
jns
call
or
cmpsb
lcall
sbb
and
xor
dec
bound
sbb
add
jp
fcoml
addr16
xchg
enter
xor
cwtl
pop
imul
out
and
pop
pop
outsb
sbb
stc
mov
test
outsb
call
test
leave
mov
cli
cwtl
push
iret
ja
popa
out
pop
out
or
lea
stos
sub
cmpsb
mov
add
sbb
pop
xchg
sbb
sbb
xchg
mov
in
pop
dec
push
pop
and
inc
mov
jns
xchg
setnp
es
arpl
and
scas
mov
mov
cmp
movsb
sub
xchg
xor
cmp
jns
push
sub
icebp
repz
or
lret
gs
or
pop
add
test
push
add
sarl
xor
data16
ja
lret
jae
fbstp
cmp
rol
inc
aaa
stc
push
fwait
inc
mov
out
inc
cmp
mov
loop
sbb
in
mov
or
test
mov
cmp
mov
in
mov
sti
ficoms
mov
adc
or
mov
ja
jl
bound
popf
fadd
mov
sbb
clc
int3
mov
fbstp
js
dec
ret
pushf
ret
je
in
shlb
and
gs
push
push
mov
or
push
in
enter
pop
adc
mulb
xchg
int
enter
pop
dec
push
xor
int
xchg
test
hlt
xorl
or
fwait
xchg
dec
ret
and
into
pop
mov
sub
inc
test
fcompl
push
sbb
fwait
add
and
xor
dec
test
out
decb
pop
jle
mov
push
popa
dec
je
sbb
int
jae
xchg
xorb
fadd
test
xor
scas
cltd
jmp
subl
inc
movsb
hlt
cld
mov
ds
mov
inc
cmpl
cmp
xchg
or
test
in
enter
fstl
je
xorl
es
in
mov
cltd
sti
or
mov
ret
pop
push
ds
into
jmp
call
and
add
sahf
adc
loopne
push
or
pop
pop
mov
fs
cmc
pusha
inc
les
and
aam
adc
and
lds
lahf
mov
pusha
sub
ret
sarb
push
shll
cwtl
rcl
mov
lret
cmp
das
jmp
lds
adc
add
cli
push
sar
and
jne
mov
cmp
xchg
imul
xchg
sbb
xchg
and
mov
push
in
inc
and
leave
jle
pop
hlt
or
lahf
add
daa
mov
cmpsb
adc
mov
loopne
adc
clc
popa
jle
cmp
push
sub
add
push
mov
xor
inc
pop
inc
inc
ret
jae
xor
mov
pop
xchg
mov
lahf
xor
fstl
cmp
cmp
enter
push
jecxz
add
sub
or
nop
push
xor
pop
icebp
mov
or
mov
scas
cmp
js
mov
test
and
mov
shll
xchg
jne
stos
mov
pop
mov
movsb
imul
pop
or
or
mov
enter
jne
mov
fisubl
fidivrs
ds
push
sti
aam
jge
add
push
gs
pop
mov
mov
and
push
mov
mov
lods
daa
repz
push
mov
sub
pop
dec
mov
sub
pop
or
in
push
fcomp
flds
cld
in
hlt
aas
cwtl
stc
cmp
add
and
pop
pop
gs
hlt
lds
scas
hlt
imul
pop
xchg
mov
dec
arpl
jb
sub
jg
mov
shrb
mov
xchg
fiaddl
dec
outsb
jae
sbb
jb
repz
jae
or
decl
mov
fisubrl
ds
jns
fsubp
jmp
movsl
ss
dec
mov
out
in
sub
mov
inc
mov
sub
in
push
lahf
xchg
in
ret
outsl
shrb
xor
push
stc
sbb
pop
mov
movsl
xor
xchg
movsb
jp
fists
cmpsb
stos
movl
outsl
scas
push
jno
jns
data16
adc
jb
adc
es
push
and
dec
push
loopne
sahf
popl
rorl
repz
lea
aaa
push
xlat
adc
xor
sub
movsb
dec
lret
cmpb
cmp
mov
daa
jnp
sbb
out
subb
lret
icebp
sub
testb
lock
jae
dec
pop
mov
inc
push
sahf
mov
add
xchg
pushf
adc
mov
push
iret
out
inc
push
jae
dec
call
sub
cmpsb
shll
push
sar
cs
repnz
jg
or
fwait
dec
fnsave
fsubl
inc
das
mov
fbstp
ret
dec
scas
pop
in
mov
mov
mov
lahf
sub
fs
idivl
mov
je
je
mov
fwait
cwtl
ljmp
cltd
gs
fldl
xor
je
int
lahf
pop
xor
pusha
jecxz
nopl
sbb
add
fisttpll
jl
insb
stos
pop
sbb
sbb
pop
fsubl
fstl
sub
out
scas
mov
mov
out
iret
xchg
decl
addr16
mov
in
insb
adc
ret
and
movsl
or
push
js
mov
lret
jnp
xlat
mov
xor
outsb
dec
sti
inc
gs
pop
dec
rorl
cmp
jg
out
mov
stos
loopne
aad
jns
xlat
jns
adc
jl
push
call
sbb
sub
sub
aad
jno
test
pop
inc
and
pusha
sbb
cmpsl
fstps
fwait
pop
fidivrl
stos
cmpsb
sbb
mov
mov
adc
stos
in
je
dec
xchg
pusha
std
dec
or
xor
xchg
or
test
imull
jg
fwait
std
pop
fbld
js
adc
add
test
xchg
cli
les
jb
bsf
test
lcall
ljmp
mov
xchg
sub
std
jne
sbb
and
cmpsb
jo
lret
call
rorb
das
mov
push
test
icebp
cmc
aam
add
popf
loope
xchg
jmp
sbb
or
adc
push
lds
out
xor
aam
fildll
push
insl
push
adcl
xchg
jnp
hlt
scas
and
xor
mov
mov
popa
shll
rcrb
xchg
pop
negb
lea
inc
pop
xchg
lret
or
cltd
jns
mov
ljmp
rcl
cwtl
xor
push
lcall
pop
gs
imul
les
jl
in
push
dec
jns
out
push
and
or
sti
sbb
lret
leave
loop
dec
add
pop
pop
mov
aaa
adcl
push
xlat
movsl
repz
loope
sub
jge
fsubs
fnstenv
cmc
or
les
test
xchg
imul
and
sub
sub
nop
cmp
pop
inc
cmp
xor
sbb
mov
mov
xchg
inc
push
adc
adc
mov
jnp
arpl
lcall
cmp
sahf
add
lahf
or
ficomps
cmp
das
sbb
jbe
mov
adc
pop
sbb
dec
fstp
outsb
sub
jle
aad
and
adc
and
lods
lret
xchg
jg
inc
shll
rcr
in
stos
mov
inc
push
addr16
call
sbb
es
adcb
or
test
xchg
cmp
aas
pop
add
pusha
xchg
adc
ss
std
daa
add
push
lea
imul
and
sub
push
and
mov
push
data16
pop
lods
push
xchg
adcb
mov
lahf
cmpsb
or
out
test
testb
mov
leave
enter
sub
dec
std
jle
dec
jmp
cmp
xchg
daa
in
fwait
adc
pop
jp
cmp
jno
mov
and
arpl
jbe,pn
mull
hlt
test
call
cli
jnp
add
sub
popf
mov
xchg
push
test
testl
push
pop
mov
and
xor
out
mov
sbb
hlt
cmp
mov
xchg
cmp
push
and
ljmp
fcmovnb
mov
xchg
mov
pop
subl
lds
or
je
mov
mulb
mov
inc
jg
dec
add
ds
mov
push
ss
loopne
or
mov
scas
mov
dec
fwait
je
pop
mov
mov
cmp
scas
aas
dec
push
daa
cmp
mov
std
sub
mov
sbb
add
cmpsb
or
addl
bound
mov
popf
mov
cltd
mov
xchg
sahf
aam
mov
xchg
lods
xchg
movsl
testb
hlt
mov
cmc
dec
dec
pop
les
int3
mov
les
xchg
inc
cmp
push
jb
idiv
les
jmp
xchg
pop
mov
pop
jmp
pop
jnp
imulb
and
pusha
adcb
cmp
mov
clc
lcall
inc
push
jbe
push
jno
out
push
add
sbb
pop
stos
mov
es
adcl
ds
push
imul
dec
or
lock
xor
dec
lret
rol
add
pop
andl
imul
xchg
popf
mov
mov
mov
mov
aas
inc
lods
aas
mov
loope
sbb
shr
push
xor
adc
push
stc
fldz
aaa
addb
shlb
xchg
fnsave
repnz
xor
insb
push
outsl
and
push
xchg
dec
out
js
add
inc
mov
adc
aaa
lret
cmp
sub
outsl
lea
jbe
jg
mull
xchg
in
xchg
pop
sbb
call
out
inc
xor
add
cmp
mov
push
stos
mov
sahf
lods
loope
fnstenv
insb
ret
aaa
out
rcll
pop
ja
pop
iret
int3
lea
in
out
ds
inc
mov
sahf
push
mov
movsl
in
sub
jge
shlb
rol
mov
fistpl
scas
pop
mov
fistpll
jge
lcall
js
cmp
mov
add
pop
sub
icebp
pop
imull
stos
popfw
fsubp
mov
loope
xor
or
adc
jo
cmp
inc
mov
dec
nop
test
pop
data16
pop
sbb
mov
mov
xchg
mov
jp
pop
jg
sahf
mov
or
sub
and
mov
fsubrl
fs
and
dec
jno
neg
push
arpl
cli
inc
aam
mov
sub
dec
jb
push
inc
xchg
mov
jne
sbb
push
push
xor
xchg
sub
frndint
mov
adc
mov
mov
jbe
mov
cmpsb
push
sbb
and
gs
lock
rclb
shl
mov
mov
testb
test
mov
fucomi
xlat
pop
cmpl
cmc
inc
sub
pop
cs
add
je
mov
sbb
std
xor
lret
into
gs
mov
sarb
mov
dec
daa
sti
lods
jle
inc
pop
lahf
mov
and
ret
jne
jmp
xchg
pop
jne
ljmp
shrb
add
arpl
out
dec
aaa
dec
push
pop
jbe
fimull
mov
test
mov
mov
aam
scas
call
insl
in
mov
test
pop
loop
sbb
shll
push
pop
or
push
push
aam
nop
jg
lods
mov
mov
mov
stos
incw
test
arpl
in
in
int3
add
push
lock
lret
iret
outsb
add
loope
lock
adc
lcall
insl
dec
mov
arpl
add
mov
adc
jb
nop
inc
fstpl
inc
les
add
insl
push
andb
cld
ret
cmpsb
sbb
and
loop
xchg
outsl
dec
fs
xchg
xlat
add
pop
lea
roll
fsubrl
xchg
lcall
inc
xlat
lods
test
loop
lods
sub
or
sbb
stos
daa
mov
sbb
xchg
outsb
fs
mov
xor
mov
jb
mov
jne
jmp
jmp
pushf
jmp
shll
inc
jb
repz
stos
mov
xchg
jb
pop
data16
popa
aas
into
push
dec
push
and
cwtl
aaa
mov
stos
or
scas
dec
jae
sbb
mov
push
or
jo
cwtl
arpl
shlb
mov
icebp
add
dec
jl
into
jge
dec
loop
icebp
push
lret
mov
fsts
adc
mov
and
dec
out
out
jno
enter
shlb
loop
sbb
adc
and
mov
or
sbb
dec
jae
jae
subb
pusha
mov
out
and
push
inc
sbb
shrl
imul
loop
out
flds
inc
xchg
std
pushf
jbe
dec
out
lret
ret
popa
adc
push
dec
mov
push
mov
test
insb
xchg
push
inc
loopne
xor
pop
ja
sbb
adc
neg
movsb
imul
outsb
pop
push
lock
mov
je
loope
jno
cmpsb
arpl
sub
jge
scas
subb
in
push
test
dec
jno
int3
aaa
mov
sbb
pusha
xchg
cmpsb
push
pop
icebp
inc
cld
int
lods
mov
sarl
add
mov
mov
lret
add
nop
cld
cmp
das
add
adc
sarb
in
jae
jno
push
ds
mov
and
leave
daa
add
or
ds
jl
sahf
fildll
xor
xor
imul
xchg
inc
cmp
cmc
fsubs
and
or
sti
jb
cmp
push
mov
mov
fstpt
jo
std
xor
adc
and
testl
adcl
mov
mov
out
xchg
push
jg
mov
xor
pop
ret
cli
mov
or
mov
adc
adc
loopne
popf
mov
add
loope
push
cmp
aaa
jle
lock
mov
xor
fisttpl
jmp
pop
dec
imul
rolb
xchg
test
lods
mov
push
cmp
jb
imul
mov
cltd
into
rcrl
mov
push
into
iret
dec
inc
mov
iret
addr16
lods
pushf
addr16
sbb
pushf
aad
outsl
adc
in
mov
add
mov
inc
xchg
rclb
lcall
mov
sub
test
cs
xor
pop
xchg
cmpsw
add
xchg
sbb
scas
test
add
push
repz
or
jle
pusha
mov
loopne
popf
sarb
das
lock
adc
mov
or
jg
sahf
ret
icebp
dec
mov
xchg
shrb
ret
imul
sub
pop
popf
xchg
jl
and
je
aas
ja
jb
inc
inc
mov
out
mov
insb
inc
outsb
mov
stos
outsb
std
add
mov
repnz
repnz
call
shrb
dec
imul
add
aas
data16
mov
add
and
push
xchg
xor
and
xor
scas
pop
mov
pop
pop
mov
jnp
mov
xchg
aad
enter
shl
mov
or
push
jb
aam
mov
test
sub
xchg
nop
stc
jo
lahf
stc
xchg
icebp
ds
lcall
mov
lcall
outsb
mov
faddl
mov
stos
or
je
add
test
out
add
adc
xchg
inc
repz
dec
sbb
jae
arpl
jnp
cld
mov
mov
mov
enter
stos
mov
push
fdivr
lds
mov
cmp
sbb
adcb
js
scas
rcll
mov
dec
push
outsb
jmp
testb
jno
pushf
push
or
je
out
in
mov
stos
inc
inc
push
fidivs
repnz
mov
fists
mov
out
push
loope
adc
adc
enter
mov
xor
cmp
out
dec
mov
cmp
idivl
push
push
mov
mov
add
dec
loopne
into
cmpsb
mov
in
dec
lods
notl
aam
fcoms
aad
loop
sbb
stc
mov
mov
jecxz
push
fcompp
mov
fcmovne
inc
inc
mov
js
pop
xor
movsb
mov
call
adc
out
sti
fisttps
daa
mov
fcoms
hlt
lret
cmp
hlt
sbb
push
enter
js
incl
jb
int3
push
std
dec
sbb
xlat
xor
aad
jp
mov
popa
push
test
fsubrl
je
mov
mov
loope
jp
ret
mov
add
dec
adc
loopne
ljmp
or
fwait
scas
pop
cmpsb
int3
mov
cmp
xchg
adc
dec
dec
loopne
cmp
in
fldt
into
movsl
fdivrp
iret
ficoms
fstpt
int3
shrb
in
shl
add
loop
arpl
fwait
adc
mov
js
outsb
repz
in
inc
push
inc
movsb
movsl
adcb
xor
pop
ret
pop
dec
sbb
cli
inc
cmp
ficomps
clc
xor
mov
cmp
dec
cmp
push
dec
outsb
mov
sub
shlb
ret
movsl
jle
push
fisttpll
lahf
xchg
cs
in
add
roll
bnd
outsb
sub
jae
scas
fistps
loopne
and
mov
and
xor
cltd
add
push
sbb
pop
pusha
mov
jl
fimuls
inc
lret
pop
and
jbe
shl
inc
icebp
div
int3
mov
data16
pushf
dec
mov
andl
rorb
scas
jmp
mov
mov
stc
sarb
cmp
or
out
adc
xor
jno
push
repnz
mov
jl
popf
sahf
sub
xor
inc
adcl
fs
cmpsl
arpl
je
data16
and
adc
loope
cld
test
jmp
aad
or
pop
adc
fdivp
addb
aaa
lret
pop
and
sti
pop
jno
test
insb
aas
xor
dec
push
aas
sub
xchg
jecxz
imul
mov
jae
xchg
hlt
std
popa
inc
test
push
sahf
push
or
pop
aad
cmp
jns
fcmovu
jno
adc
idivb
inc
pop
pop
and
cli
jo
and
fdivs
add
fmuls
in
xor
daa
jno
daa
rolb
imul
mov
inc
cmpsl
mov
scas
jne
popa
mov
inc
xchg
push
inc
lret
pop
lock
push
xor
sub
fadds
or
sbb
sub
repz
pop
fistpll
sub
xchg
lret
or
imul
aas
test
ds
mov
dec
lret
add
push
adc
andb
jb
xchg
icebp
push
gs
movsl
push
xor
xchg
dec
xchg
rol
out
into
mov
sbb
into
cmp
jb
fcomps
jno
lret
shl
xor
mov
cs
xor
and
xor
ret
xor
insb
sti
pop
add
cli
scas
push
cmp
hlt
lret
jmp
jbe
mov
je
or
add
lods
inc
mov
dec
mov
ficomps
jns
ficompl
fcmovne
popa
das
mov
xor
sbb
into
shrl
push
insb
push
es
mov
jae
dec
cmp
in
cmpsb
mov
mov
or
push
sahf
sbb
out
aam
jg
pop
test
pop
jmp
pop
push
adc
stc
dec
lods
pop
sti
mov
jp
fisttps
movsl
out
sarb
sbb
in
ljmp
pop
out
inc
aas
aas
dec
jg
add
inc
mov
imul
cmp
push
xor
lds
dec
jge
mov
dec
cld
inc
in
cmp
xor
and
ret
jp
insl
cwtl
fwait
mov
pop
movsl
pop
push
imul
jecxz
sbb
pop
or
xchg
xor
data16
sub
loop
jbe
inc
fsubs
addb
popa
mov
mov
dec
mov
leave
scas
xchg
jecxz
and
or
mov
adc
std
icebp
ret
cmpsl
dec
mov
lcall
or
pop
push
pop
jb
in
movsl
dec
test
repz
mov
jo
jne
push
or
push
test
sbb
cmpsb
rcll
push
jno
inc
or
adc
test
xchg
lods
mov
add
fcmovbe
push
sub
cmp
ret
fcomps
out
xrelease
clc
daa
pop
stc
or
push
mov
cmp
psraw
add
dec
cmpsb
xchg
outsl
mov
inc
jp
sbb
or
jl
cmp
frstor
mov
lods
sub
out
adc
add
mov
std
pop
ret
mov
dec
fisttps
inc
std
aad
popa
out
adc
aaa
in
daa
inc
lock
jmp
jp
cmp
xor
jbe
jb
testl
movsb
data16
pop
sbb
xor
jno
xor
inc
js
rcll
ficompl
ret
xchg
mov
mov
adc
or
popa
lods
xor
cmpl
dec
push
cs
cwtl
pop
imul
out
xchg
xchg
mov
movsb
add
scas
xchg
hlt
movsb
cwtl
mov
cwtl
leave
xchg
les
rcrb
sarb
mov
sarl
pop
or
test
inc
xor
mov
mov
rcll
nop
adc
push
mov
push
nop
fidivrs
jne
cmp
loopne
and
or
xchg
loop
stos
inc
jge
mov
mov
mov
lret
push
fstl
mov
mul
lds
and
mov
out
mov
push
pop
mov
addl
and
push
mov
mov
in
into
cmpsb
fneni(8087
sahf
adc
mov
lcall
aaa
pop
mov
ret
pusha
data16
sbb
jb
es
pop
xor
outsb
xchg
jne
lds
add
adc
add
pop
fdivp
mov
xor
fs
mov
adc
popf
or
sub
repz
push
in
rolb
sbb
imul
sarl
test
sti
add
and
jnp
add
lret
cmc
xor
lods
xor
xchg
sbb
imul
cld
xor
sbb
jns
jae
jl
jg
dec
mov
sbb
sahf
jne
sub
push
rcrl
xchg
dec
in
adc
inc
push
add
icebp
xor
ljmp
jbe
pop
xlat
pop
xor
sub
out
cmp
pop
jo
stos
push
push
in
insl
jmp
push
inc
pop
mov
or
jmp
fsubrl
mov
in
hlt
cmp
imul
sbb
movsb
in
jns
aam
sub
ret
sbb
in
ljmp
lea
pop
mov
sahf
jp
push
ficoml
jne
add
stos
fs
mov
dec
mov
pop
enter
out
sbb
pop
lock
sarl
pusha
push
add
fidivrs
add
jb
push
cmp
mov
xor
add
sbb
jno
mov
ljmp
cmp
dec
mov
mov
mov
mov
and
and
adc
fwait
aas
lcall
and
aam
int3
inc
jb
lds
sbb
jns
push
insb
aas
mov
pop
mov
andb
cmp
inc
push
mov
test
sbb
lret
iret
fadd
fisttpll
stos
mov
xchg
xor
cwtl
pusha
std
test
sbb
inc
mov
or
mov
js
mov
dec
pusha
jb
mov
sub
jge
fcom
xchg
dec
xchg
rorl
das
cmp
rcrl
aas
jnp,pn
fidivl
dec
add
inc
test
jnp
fwait
gs
cmpsl
movsb
int3
mov
fwait
popf
xchg
mov
pop
cs
mov
push
or
or
xchg
mov
xlat
rorl
mov
shlb
adc
pop
push
jl
mov
shrl
arpl
rcl
faddp
push
xor
leave
int
leave
mov
nop
adc
sbb
xchg
fmull
das
mov
sar
push
cmp
cs
mov
add
sub
push
mov
js
dec
mov
dec
push
and
mov
popf
cmp
cs
pop
adc
ret
out
scas
or
dec
inc
sti
and
lret
int
je
fs
ss
jns
in
pop
xor
xor
rcll
add
enter
fisubl
cmpsl
xor
adc
adc
push
pop
daa
push
sbb
jb
jne
sbb
addr16
xchg
aad
in
pushf
sub
push
addr16
push
sub
aas
ja
shll
push
cltd
fadd
add
mov
and
ja
outsb
cmp
pop
push
mov
xor
cmpb
shr
xchg
push
ljmp
leave
fiaddl
push
mov
cmp
arpl
andb
push
mov
cmp
ja
cmpsl
arpl
pop
insb
xchg
loope
mov
mov
test
negl
sbb
outsl
jl
arpl
sti
and
addr16
push
cld
cmp
lret
daa
shrl
fwait
sub
xor
add
test
mov
cli
xchg
es
sbb
pop
adc
push
dec
jmp
and
std
lcall
stc
rcr
cld
in
aas
jno
fdivrs
xor
sbb
push
hlt
xor
jb
add
addl
cmp
sub
mov
jl
gs
add
shll
rcrl
into
sbb
loope
xor
sub
add
xor
aam
mov
jg
scas
into
out
scas
push
sbb
pop
ljmp
stc
imull
ret
xor
xchg
mov
in
jle
push
xor
popf
pusha
dec
add
jp
xchg
ja
jno
sub
sub
and
cmp
sub
pop
and
scas
out
push
sbb
stc
mov
fdivr
xor
xorl
jbe
sub
push
stc
dec
mov
dec
out
cwtl
xchg
push
data16
lds
jp
outsb
mov
jmp
jmp
xor
jno
cld
fmull
pop
sub
lahf
ja
push
aam
imul
shrb
mov
cmp
adc
decl
cld
xchg
sub
or
aad
into
push
sti
or
add
mov
push
cltd
inc
mov
mov
jge
inc
add
call
mov
stos
sub
adc
xchg
pop
imul
dec
mov
pop
imul
outsb
mov
aad
mov
repnz
pop
adc
test
dec
fwait
lcall
adc
rclb
cmp
mov
testb
jns
sub
xor
ljmp
inc
lods
push
lret
mov
outsl
push
insb
call
push
add
xor
int3
inc
scas
stos
inc
lret
mulb
fcoms
mov
out
ss
sar
mov
lret
jne
leave
mov
jg
or
mov
js
andl
xchg
test
aas
mov
cwtl
xchg
std
xchg
ljmp
out
hlt
insb
js
inc
mov
aam
sub
aaa
xlat
icebp
mull
jle
aad
jno
popf
movsb
or
pop
jno
sub
ds
or
fsubrp
cmp
mov
pop
adc
xor
ja
mov
xor
xchg
mov
mov
mov
lahf
sub
gs
pop
jecxz
pop
fistpl
xor
loope
adc
scas
mov
fnstenv
adc
imul
jb
adcb
pop
sbb
in
add
cmp
test
dec
pushf
sbb
nop
jg
xor
fld
jb
aad
lret
push
or
mov
stos
pop
jb
or
adcb
dec
sub
nop
mov
nop
sub
pop
cmp
and
mov
sbb
add
pop
rol
fidivl
dec
sbb
adc
adc
lock
shlb
mov
push
scas
aaa
jl
xchg
sbbl
insl
mov
scas
sti
imul
out
jno
std
or
mov
fdiv
add
mov
pushf
out
jae
push
sbb
cs
loop
rcrw
out
test
out
mov
bound
push
mov
sbb
mov
pop
cmp
fcomps
jg
je
lock
imul
call
mov
dec
xchg
ror
add
out
stc
xchg
mov
sub
sbb
insb
sub
dec
dec
hlt
sbb
jbe
mov
xor
xchg
lcall
cmp
or
iret
mov
jnp
in
xchg
mov
pushf
push
cmp
sahf
dec
push
ret
mov
cld
adc
lock
lea
arpl
jl
mov
shll
lahf
in
cs
ret
pop
fldt
popf
xchg
sub
test
dec
jbe
imul
test
inc
fsubl
adc
mov
pop
push
inc
cli
or
cmp
dec
test
in
xor
testl
dec
dec
cli
fcomps
push
sbb
icebp
or
into
cmpsb
imul
sub
ret
cmpsl
ljmp
rcr
lcall
es
xchg
cmp
fildll
aam
sbb
inc
xor
scas
add
xor
test
push
jnp
fdivs
push
add
in
popa
daa
cltd
push
cmp
push
or
pusha
sub
xchg
shlb
mov
stos
divl
testl
or
fcompp
jl
pop
or
pushf
cli
shlb
sahf
stos
movsl
mov
push
test
ds
leave
ret
mov
mov
loop
in
iret
adc
lahf
add
scas
sti
dec
lahf
jmp
or
test
std
push
cwtl
pop
and
mov
sbb
pop
movsb
outsl
pop
test
dec
add
pmaddwd
add
mov
xorl
mov
and
mov
cmp
pop
jne
ds
jge
fisubrs
mov
pop
je
and
shl
fxch
pop
pop
mov
pushf
or
mov
sbb
ljmp
pushf
jno
das
xchg
adc
xor
jno
fbld
adc
ljmp
int3
aaa
or
ds
or
cmc
inc
cmp
jle
lods
cli
hlt
rorb
mov
addr16
mov
imul
add
xchg
dec
mov
add
lret
inc
jl
dec
lwpins
jmp
mov
xchg
jae
loopne
popf
std
out
sbb
cmpl
sbbl
inc
add
and
je
mov
ds
sahf
dec
inc
out
cld
or
int3
mov
jmp
mov
pop
push
xor
and
mov
inc
pop
dec
je
mov
and
arpl
push
cli
js
loop
lods
in
pop
daa
lret
mov
je
hlt
lock
mov
jp
outsl
push
and
push
cs
and
mov
dec
les
jns
push
jp
mov
pop
in
in
dec
inc
les
out
cmp
ret
and
jae
imulb
insb
mov
mov
push
push
mov
repz
or
cmp
repz
outsl
mov
imul
or
aas
push
push
dec
mov
loop
lahf
out
jmp
js
or
insb
mov
jg
xchg
insl
sub
jns
pop
ret
or
aam
cli
inc
cs
in
or
xor
xchg
aaa
jmp
daa
jo
sbb
add
gs
mov
out
mov
xor
scas
mov
inc
hlt
mov
cmpl
xchg
mov
push
jo
icebp
fildl
sahf
pop
and
xchg
lock
cmpsb
dec
lret
inc
add
dec
adc
mov
jge
int3
movsl
iret
add
dec
in
stos
stos
out
mov
mov
xlat
mov
sub
sbb
cs
pop
push
push
pop
or
je
lahf
hlt
in
mov
sbb
mov
ds
pop
das
jg
mov
mov
jb
mov
pushf
pop
mov
push
adc
mov
ret
loopne
cmp
jmp
addr16
das
mov
orl
fdiv
int
sub
aaa
popf
jbe
push
bound
mov
or
cmp
mov
fcomp
or
dec
aas
ret
jmp
out
das
xor
scas
clc
inc
cltd
es
sub
in
and
movsb
insb
mov
pop
add
and
sub
jnp
push
or
jnp
mov
stos
out
das
inc
mov
out
hlt
sbb
inc
shrb
decb
lcall
ret
mov
push
scas
push
add
sbb
or
dec
in
movsl
jg
shrb
mov
mov
shlb
sbb
aam
in
adc
push
mov
adc
dec
imul
lahf
faddl
pusha
sbb
fstpl
cld
xor
and
fsub
xchg
cmpb
pop
ds
out
out
out
popf
jae
xchg
add
gs
mov
call
xchg
pop
dec
push
jmp
or
and
out
adc
mov
xor
mov
iret
jns
dec
fadd
mov
add
scas
aas
mov
pop
das
jno
nop
fstl
imul
and
xor
or
push
shl
out
dec
lock
popa
jbe
jb
daa
xlat
mov
pop
je
mov
daa
mov
sbb
data16
popf
das
das
mov
cmp
cmp
pop
add
inc
adc
xchg
sub
dec
fbstp
or
dec
pop
movsbl
and
and
push
in
sub
mov
int
divl
pop
push
cvtps2pd
and
lods
jmp
hlt
outsb
arpl
aas
mov
addr16
cmp
and
push
sarb
cmc
mov
fmull
je
testb
test
jge
sbb
sarl
mov
and
push
pusha
or
cli
hlt
loope
xchg
mov
add
int
subb
imul
and
ds
jns
mov
mov
ret
test
sub
mov
jp
cmpsb
mov
sbb
les
stc
cmp
pushf
push
sub
or
arpl
sbb
mov
loope
sub
stc
sub
cmc
lcall
inc
pop
andl
and
and
dec
pop
mov
shlb
jecxz
repz
mov
int
cmp
ret
loopne
push
cmc
jle
xor
xlat
mov
jg
hlt
cs
insl
cmp
ljmp
or
xor
daa
xchg
pop
mov
fildl
jno
imul
call
dec
scas
clc
fldcw
std
les
subl
je
movsb
jns
mov
insl
push
push
jnp
xor
decb
in
pop
lea
pop
inc
inc
add
mov
xchg
insl
xchg
lods
mov
loope
pushf
sbb
mov
or
adc
jne
push
add
jg
pop
enter
outsl
loopne
sti
mov
mov
xchg
repz
faddl
inc
popa
sahf
push
push
cmpl
in
xchg
dec
jge
push
xor
shll
mov
mov
mov
adc
mov
xchg
addw
popf
xchg
xor
inc
repnz
gs
pop
leave
pushf
sub
lods
xchg
xchg
mov
jle
loope
lock
movsl
cmpl
jno
mov
mov
push
lret
lods
mov
cltd
cli
adc
cmpsl
sub
out
icebp
fmuls
or
jl
outsb
popa
inc
jg
inc
je
aad
cltd
and
dec
sahf
test
cmp
shl
ss
scas
pop
mov
cmp
xchg
mov
jmp
or
fimull
xor
mov
sti
mov
sub
repz
mov
cmp
or
jns
sbb
addr16
adc
rcr
adc
lods
xchg
lock
rclb
negb
or
jmp
ret
out
sti
iret
cltd
adc
xlat
add
mov
fwait
ret
movb
lock
testl
push
cmp
pop
xchg
dec
or
cmpsl
or
inc
pusha
sbb
test
and
fcom
pop
outsb
mov
sbb
fists
jne
inc
ja
adc
and
sub
push
psrlq
or
out
outsb
sbb
dec
fs
xchg
mov
mov
clc
insb
push
push
inc
lea
pmulhw
leave
sub
loop
fisubs
inc
xchg
push
shrl
std
push
fidivl
mov
mov
daa
mov
sahf
shll
mov
push
test
cmp
shlb
subl
push
and
roll
push
add
cmp
in
je
inc
stc
push
pop
cmpsl
sahf
jmp
movsl
aas
sub
cmp
std
repz
aam
mov
frstor
add
cmp
adc
pop
sbb
cmp
ds
push
or
xor
pop
or
js
dec
insl
shr
mov
loope
add
add
addl
xchg
lods
shl
mov
xchg
inc
sub
lret
ficomps
inc
in
mov
push
xchg
mov
pop
pop
aad
popa
adc
inc
imul
sub
or
pushf
mov
clc
je
or
jge
ret
jmp
pop
int
sti
jbe
add
aaa
popa
mov
hlt
xchg
ja
dec
popf
mov
scas
or
pop
xorb
sbb
mov
push
and
imul
cmp
das
inc
clc
testl
push
pop
lods
ror
outsb
mov
pushf
jae
dec
shlb
fmuls
shl
pop
and
lock
dec
fsub
push
jle
subl
sar
xor
das
ss
pop
cmp
ljmp
jb
idivb
sub
mov
push
sti
out
add
lock
mov
lds
mov
jle
fbld
rcl
cmp
dec
jp
xor
push
shrl
into
in
ret
imul
fwait
cmc
iret
pop
mov
xchg
fs
fdivs
loop
xchg
movl
pop
mov
dec
mov
jae
xchg
fsubp
rcr
es
inc
js
sbb
stos
lret
mov
xlat
les
sbb
mov
or
mov
imul
out
inc
fisubrs
aaa
cmpsl
dec
xchg
lea
lret
movsb
imul
or
mov
nop
mov
in
out
pop
lret
pop
data16
popl
jne
cld
ja
loop
outsl
mov
and
add
lods
int3
xchg
mov
cld
call
or
addr16
shl
jle
shll
mov
popf
mov
dec
cmpsl
inc
test
sbbb
pop
repnz
es
and
xor
ret
icebp
adc
or
fsubl
add
adc
sbb
stc
jo
cmp
pop
arpl
pop
shlb
gs
push
imul
push
popf
lea
push
adc
xchg
pop
lcall
pop
dec
xchg
and
into
mov
add
movsl
loopne
pop
jb
ficompl
in
adc
movsb
xchg
jl
cmp
xchg
js
stos
pop
das
mov
mov
pop
pop
std
sub
mov
aas
test
es
pop
stc
pusha
fbstp
fcomps
addr16
mov
inc
adc
or
sarl
sbb
fidivrs
bound
in
sub
xchg
adcl
push
mov
mov
inc
push
xchg
mov
inc
icebp
push
movsb
xchg
and
mov
pop
jae
aam
enter
aam
rcr
fwait
daa
mov
jge
loop
movsl
loopne
int3
int3
xchg
sarb
std
int
xchg
lods
fmulp
cmp
cld
les
in
xchg
mov
loopne
cli
test
jno
push
mov
dec
mov
push
jg
outsb
test
popl
push
inc
or
or
rorb
cs
sbb
test
leave
add
shll
jle
ljmp
cs
pop
leave
mov
int
insb
xorl
dec
pop
jecxz
idivb
sbb
andb
xchg
push
sbb
mov
xlat
repz
sub
test
decb
fisttpl
out
notl
jmp
fs
pusha
inc
and
cld
xor
scas
orb
negl
addr16
mov
dec
mov
stc
sub
cltd
loop
shll
addr16
mov
push
repz
add
loope
outsl
cmp
mov
jmp
call
cmp
adc
sahf
sub
pushf
jg
pop
push
nop
mov
adc
fcmovnb
cmp
pushf
mov
adc
mov
and
stc
jle
movsl
mov
cmpsl
mov
repz
in
sbb
stos
and
or
push
imul
jge
test
outsb
and
pop
add
dec
cs
cmp
cmc
js
mov
jb
test
mov
inc
fsubrs
xchg
pop
aaa
cmp
test
rcll
adc
xchg
mov
pop
mov
mov
inc
jecxz
xchg
cltd
xchg
jle
mov
shll
or
jle
in
jmp
dec
xor
add
fdivrp
xchg
int
in
pop
sar
test
and
inc
negb
ret
inc
enter
add
mov
pop
sub
imulw
push
and
mov
jbe
jp
mov
rcrl
sub
in
mov
faddl
push
mov
into
lahf
fcmovnbe
repnz
pop
push
or
xor
ds
adc
xor
aaa
dec
or
insl
test
and
inc
sub
push
push
mov
inc
in
jbe
jno
leave
inc
sub
std
sbbl
jne
je
ud2
xchg
mov
pop
sahf
cmpsl
aam
cmc
push
sahf
cld
pusha
xchg
andb
push
fistl
add
lret
push
aaa
movsl
repz
test
cmp
lods
adc
pushf
add
cmovo
pop
divb
outsb
icebp
es
fmulp
or
mov
insb
shll
stos
push
mov
insl
xor
test
mov
fisttps
dec
addb
int
inc
sub
xor
hlt
cwtl
jecxz
pushl
outsb
bound
and
mov
aad
in
pop
lret
add
dec
push
sbb
test
xor
pop
or
pop
pop
jne
dec
popf
cmp
and
pop
mov
fadds
jl
sbb
popf
stos
lods
add
mov
or
mov
int3
aad
xchg
jl
pop
test
nop
sub
inc
fsts
or
addr16
pushf
jb
ja
pop
jl
pop
lea
pop
cli
scas
inc
sbb
repnz
xchg
sub
push
jle
test
cmpsb
insl
xchg
mov
rorb
ds
pusha
mov
jae
or
jns
mov
ja
push
push
and
ja
sahf
mov
pop
enter
cs
outsl
adc
xlat
pushf
sbb
mov
add
inc
and
ljmp
sub
imul
sarb
test
push
add
mov
mov
movb
loop
iret
testb
pop
add
mov
stos
mov
jge
popa
pop
mov
adc
cmp
std
pop
scas
push
filds
stos
shll
xor
shll
push
xchg
clc
dec
push
pop
pop
icebp
scas
aaa
popf
pop
stc
adc
sbb
ljmp
sbb
sbb
sub
sbb
lods
inc
sub
in
in
arpl
xor
push
ret
cmp
es
xor
out
mov
outsl
add
popf
imul
loop
int
sbb
push
int3
xchg
ret
jmp
test
aam
or
xchg
push
popa
jmp
popf
xor
cmp
xchg
je
imul
iret
dec
mov
js
cmp
or
pusha
fsts
in
xchg
cmp
movsl
inc
sbb
test
enter
out
aam
movl
cmpsb
leave
push
inc
out
fbld
mov
pushf
call
mov
pop
jle
int
leave
ja
mov
arpl
mov
jne
std
sbb
xor
out
mov
sarl
mov
adc
push
lret
int
adc
cli
ror
lock
inc
imul
and
mov
sub
mov
in
inc
es
mov
ret
and
ljmp
cmpsb
and
lea
cmp
mov
sub
in
dec
ja
jne
sub
dec
loope
nop
daa
inc
loopne
xor
jmp
push
aam
ret
mov
lock
push
cwtl
in
adc
outsl
pop
jle
leave
xchg
inc
inc
jne
rorl
pop
cmp
cmovae
mov
andb
mov
sub
popf
test
or
xor
adc
sub
push
xlat
fisubrs
lcall
add
movsl
jne
adc
mov
cmpsb
mov
aas
shlb
enter
mov
das
and
std
ds
sysenter
sub
pop
shll
inc
add
fstpt
jmp
mov
test
enter
nop
bound
mov
mov
dec
fwait
or
sbb
imul
sahf
jne
sbb
fdivr
stos
add
and
lret
add
sub
mov
dec
mov
out
push
cmp
cmp
sbb
int
mov
insl
jne
dec
mov
pop
gs
ja
push
pop
dec
fimuls
jbe
sbb
cmp
daa
add
dec
jnp
mov
inc
insl
insl
testb
sbb
aaa
adc
or
das
pop
adc
daa
sti
in
into
inc
fs
mov
mov
adc
sub
mov
dec
out
inc
jns
cmp
dec
mov
xchg
mov
jns
sbb
in
sbb
rclb
pop
sub
ds
aad
cmc
popf
jnp
icebp
push
dec
ret
cmpsl
sub
xor
adc
jae
std
and
lods
iret
push
stc
leave
cmp
mov
mov
bound
mov
adc
sahf
sbb
sub
dec
test
fldl
inc
jg
pop
mov
ljmp
and
xor
fdivrs
sbb
and
loopne
jnp
dec
ja
rorb
or
popa
aaa
call
sbb
out
loopne
sahf
mov
push
das
push
xor
cltd
rcrl
cli
clc
std
loopne
adc
push
inc
sbb
mov
in
jo
aam
jb
in
pop
jno
aas
incb
push
jge
pop
add
lods
push
jae
ljmp
rcr
mov
sahf
or
jne
jp
mov
mulb
hlt
dec
scas
jle
mov
sbb
push
pop
or
stc
mov
push
popa
ss
pop
scas
and
jl
in
test
jb
insb
cmp
or
in
mov
lret
dec
jbe
mov
cwtl
cmp
adc
cmpsb
bound
lds
movsb
sub
daa
xchg
push
inc
fisttpl
xor
hlt
mov
out
xchg
js
cwtl
pop
mov
cmp
int
push
push
cltd
adc
stos
ret
inc
pop
fsub
mov
rcll
inc
loope
lahf
in
sub
or
pop
xchg
gs
push
jnp
jg
scas
fldl
adc
iret
fwait
mov
in
nop
jg
mov
dec
insl
adc
bound
adc
js
or
push
repz
clc
inc
push
mov
pop
sbb
popf
pusha
sbb
scas
clc
pop
cmpsb
sbb
in
pushf
and
and
loopne
push
adc
into
mov
xchg
and
sbb
mov
push
stos
aad
pop
out
shlb
mov
aam
inc
xchg
je
sub
rclb
arpl
push
jle
xchg
cmp
push
add
clc
inc
in
pushf
fs
mov
shll
cltd
xchg
inc
or
mov
add
pop
imul
push
addb
adc
test
cmpsb
in
shl
xor
inc
sbb
pop
sti
mov
push
mov
lahf
xor
shll
xchg
sbb
xor
dec
mov
shr
mov
flds
cmp
adc
rclb
cmp
pusha
pop
xchg
jl
adc
add
mov
or
mov
push
ret
jae
jmp
out
cmpsb
dec
inc
sbb
and
aad
xchg
push
push
dec
int
lcall
ds
and
mov
xor
cmpb
pop
lret
jmp
add
xchg
add
flds
inc
insb
push
mov
mov
mov
pop
imul
adc
pop
add
fmul
push
dec
les
imul
xor
mov
add
dec
push
dec
jmp
leave
inc
sub
dec
lahf
dec
xchg
shrl
xor
mov
dec
cmpsl
xor
lret
cld
mov
xor
xchg
in
dec
imul
test
add
decl
push
ss
xlat
lret
repnz
sbbb
cltd
cmp
loop
sub
add
pop
ja
shll
decl
fucomip
dec
imul
inc
mov
push
mov
pop
sar
mov
in
add
test
push
sbb
nop
jnp
mov
fmul
xor
jb
inc
add
adc
adc
mov
loope
lahf
xor
add
mov
or
addr16
popa
sub
adc
fucomip
and
movsb
enter
pop
or
mov
in
gs
or
inc
sbb
addr16
add
and
cmpsl
and
out
or
xchg
mov
sbb
repnz
sub
addr16
pop
and
add
pop
outsb
cmp
in
das
mulb
aaa
cmc
add
addr16
incl
lahf
scas
cmpsl
mov
xchg
addb
adc
sbb
imul
and
or
imul
icebp
inc
out
pop
mov
inc
in
sahf
mov
pusha
loope
inc
in
pusha
sub
and
xor
sub
push
in
cmp
dec
loop
adc
dec
push
clc
loope
ret
int
ss
mov
outsl
dec
pop
sbb
rcrb
xor
mov
aam
sarb
lret
into
xchg
jecxz
loop
pop
fisttps
hlt
mov
mov
push
rclb
jbe
ljmp
sub
mov
dec
jnp
stc
sbb
or
jmp
dec
roll
or
mov
fwait
mov
out
and
scas
js
enter
pop
dec
jbe
loopne
mov
and
mov
sub
pop
es
sahf
pop
cli
inc
mov
xor
enter
xor
loop
push
cltd
roll
ficompl
xlat
adc
cld
mov
aaa
mov
push
fldl
xor
das
jnp
and
cld
in
sbb
mov
adc
lods
xor
mov
xchg
jne
xor
sbb
mov
or
sarb
popf
add
mov
addb
xor
mov
mov
mov
mov
mov
arpl
cld
sti
mov
pop
pushw
push
sub
mov
xor
fwait
bound
mov
push
fsubs
aaa
lret
outsl
mov
mov
adcb
jmp
adc
decl
enter
aas
sbb
xchg
pop
mov
xchg
adc
test
push
cmpsl
adc
adc
int
inc
sub
mov
sbb
dec
aad
mov
aam
push
inc
mov
or
or
mov
sbb
inc
mov
jne
fmulp
jmp
push
jge
add
sti
sbb
cld
cmp
hlt
push
gs
popa
push
movsb
cmpsb
shrb
push
mov
negl
jae
pop
lret
fst
or
inc
jl
filds
sub
ja
xlat
mov
sbb
in
ljmp
mov
mov
into
lcall
in
add
adc
notb
cmp
jg
dec
jecxz
dec
repnz
dec
movsb
add
data16
test
lret
mov
incl
mov
repz
adc
stc
int
mov
push
pop
mov
aas
in
fs
pop
out
mov
mov
mov
ror
shl
add
fiaddl
push
pop
mov
test
push
inc
cs
leave
stc
mov
mov
in
aam
rol
sahf
icebp
imulb
ficoml
add
xor
jb
fs
lods
xchg
je
ja
jae
dec
xor
pop
cmp
inc
push
aad
fucomi
call
or
movsb
lods
jmp
ja
and
sbb
mov
inc
sub
loop
push
frstor
clc
int3
ds
sbb
js
inc
and
lret
mulb
mov
sbbb
lcall
fisubl
sbb
pop
jg
xor
invd
mov
xchg
outsb
push
or
inc
adc
pop
mov
ret
add
sub
push
ljmp
sti
mov
cmp
push
xchg
mov
mov
lods
aaa
rcll
xchg
or
xchg
mov
maskmovq
testl
dec
dec
lahf
cs
in
push
shll
mov
add
loopne
rcll
mov
lcall
or
scas
psrlq
push
sub
decl
sub
inc
cmp
nop
js
cmpsl
cs
sub
leave
es
push
jbe
movsl
xchg
cmp
lds
add
test
pop
fwait
push
sub
jecxz
sub
les
sti
enter
cmp
lock
aas
jmp
fistps
test
mov
mov
mov
fwait
push
mov
sbb
cmp
call
rorl
push
inc
dec
cmp
pop
pop
xchg
add
cmp
xchg
jle
jge
push
std
das
cmp
mov
or
sub
adc
mov
mov
pop
iret
fucomp
cmp
push
jmp
shll
hlt
sub
js
test
dec
mov
add
imul
out
push
call
adc
clc
and
cmpsl
mov
xchg
fdivrs
pop
les
ficompl
lods
dec
dec
les
adc
movsl
stc
lods
in
xchg
or
pop
jp
mov
cwtl
sarl
cmp
ficoms
cwtl
inc
testb
call
aad
test
scas
mov
jl
das
out
shll
movsb
jp
jecxz
js
or
pop
sbb
cmp
xchg
test
sbb
pusha
mov
add
xor
ja
cmc
cmpl
dec
in
call
dec
mov
adc
fs
adc
lea
add
int3
jae
fisttps
add
insb
and
mov
adcl
repnz
sbb
fwait
jmp
insb
stc
dec
jle
push
push
jp
sub
push
xor
or
fsubp
loopne
xchg
cmpsl
sub
cli
xchg
test
shl
fcomip
or
pop
into
sub
imul
mov
fnstenv
push
jbe
or
cli
pop
sbb
lods
or
les
pop
adc
mov
sub
add
jge
lods
repz
dec
out
xchg
notl
push
loope
push
jmp
inc
js
dec
clc
stc
push
mov
sbb
test
stos
es
and
xchg
dec
cld
push
jmp
pcmpgtw
sub
stos
insl
xchg
test
sbb
ret
ss
vaddsd
test
add
push
inc
fidivs
hlt
test
bound
xor
ja
cmpxchg
pcmpeqd
fdivrp
fsubl
jne
sub
in
or
xor
cltd
mov
je
jl
sbb
jno
jb
xchg
push
cmpl
and
scas
add
cmpsl
fsts
dec
movsb
outsb
mov
sbb
rol
fnsaves
movsl
xor
es
jb
xchg
scas
mov
push
scas
aad
pop
scas
testb
inc
or
subb
pop
in
out
or
cmp
xchg
fsubs
pop
les
int
into
andl
ds
inc
mov
pusha
imul
gs
mov
pop
aaa
dec
or
add
jne
sarb
es
in
js
test
test
daa
sub
push
or
hlt
cmc
and
jge
sbb
cltd
cwtl
testb
call
or
cmp
roll
ja
xor
adc
fwait
aaa
pop
sti
pop
je
lods
shlb
ret
pop
pop
test
mov
cli
cs
sahf
add
jb
fdivr
das
mov
mov
icebp
repnz
ljmp
jne
and
jne
jecxz
imul
stos
or
push
ja
sbb
inc
pop
bound
cmp
fucom
enter
adc
mov
stos
mov
dec
lea
push
jmp
nop
adc
cltd
insb
call
repz
pop
imul
outsl
popf
jnp
mov
shll
push
in
sub
pop
je
scas
mov
mov
cmp
xor
push
xor
stc
cmp
push
xor
and
cld
cld
xchg
or
xor
jmp
or
stos
pusha
fildl
shll
gs
sahf
hlt
stos
push
add
sub
movsb
and
movl
icebp
pop
cli
stos
xchg
and
inc
iret
jno
mov
outsl
sub
xchg
cmpsl
mov
push
int
pop
loope
imul
adc
lods
cwtl
push
inc
jge
dec
repz
lcall
std
add
push
jno
ljmp
mov
dec
bound
loope
pop
sub
and
or
ds
inc
outsl
push
mov
rcr
test
int3
fwait
xorl
ja
mov
leave
movsb
popf
sbb
popa
dec
rcrl
xor
mov
mov
dec
jp
rolb
repnz
sbb
stc
xor
popf
mov
pop
add
inc
dec
mov
call
inc
jle
push
push
xorl
xor
mov
add
adc
popa
dec
xchg
xchg
xchg
dec
subb
pop
popa
push
lds
push
js
jb
call
fidivrl
sub
sbb
out
addr16
hlt
stos
dec
fdivr
or
xor
scas
lds
lods
xchg
fbstp
out
ss
lock
sub
hlt
mov
aaa
in
xchg
push
lea
add
sbb
mov
aas
cs
call
lcall
sbb
lcall
in
xchg
and
jle
popa
mov
movsb
xor
or
cli
insl
int3
add
xor
inc
lret
bound
xcrypt-ofb
cmpsl
jmp
rcrl
ljmp
xchg
adc
fwait
jns
jb
sahf
sub
pop
add
clc
add
lods
or
mov
shl
and
push
es
nop
pop
not
mov
aas
sub
mov
std
mov
push
jmp
js
adc
pushl
inc
cmp
push
pop
jecxz
fsubrl
cmp
repz
jp
insb
sbb
pushf
inc
mov
arpl
mov
jnp
out
ja
insb
addr16
jno
inc
or
pop
pop
jle
mov
dec
iret
push
pop
push
or
or
add
aad
dec
mov
or
cmpsb
xchg
repz
popa
pop
enter
das
gs
pop
xchg
or
loop
sarl
pop
aaa
ret
in
adc
aad
in
js
pop
sbb
nop
rorl
addr16
sub
mov
add
pop
pop
sbb
dec
mov
lods
sbb
mov
xor
leave
aas
xor
lods
out
lcall
lods
je
dec
test
mov
mov
and
test
rcrb
jmp
loope
push
in
mov
lock
lret
mov
out
test
fsubrl
fbld
insl
outsb
je
insl
fs
dec
dec
movsl
out
jbe
inc
and
addb
mov
jns
mov
cmp
gs
ss
icebp
add
inc
dec
push
rorl
mov
cmp
out
movsb
lods
dec
insb
das
add
mov
hlt
jmp
lods
push
popf
outsb
shrl
scas
pop
pop
add
or
in
sbb
add
add
insb
jo
js
dec
fisubl
test
cli
leave
jg
data16
xchg
sub
inc
dec
fldt
ret
clc
stc
enter
aam
mov
pop
es
imul
mov
sub
je
dec
add
lods
fs
mov
cmp
subb
and
and
xchg
ljmp
lock
sbb
inc
push
push
add
rcrb
xchg
xchg
lods
ja
cmp
add
lret
push
push
dec
mov
movsl
in
jnp
test
push
js
sub
ret
sbb
cmp
or
sbb
add
push
pop
leave
sub
lock
add
sahf
stc
cmp
xor
mov
mov
repz
and
xchg
adc
push
mov
hlt
adc
popa
gs
cmpsb
xchg
in
jecxz
jmp
lods
jae
dec
int
and
imul
fldl
fs
xor
pushf
dec
jbe
lea
adc
clc
push
aas
or
jno
inc
dec
hlt
inc
gs
in
or
inc
cltd
arpl
cltd
jne
mov
and
data16
pop
in
or
mov
jae
mov
ja
inc
push
pop
aam
icebp
test
mov
imul
push
pop
lret
pop
fisttpl
add
inc
fcmove
mov
call
mov
shrb
add
fwait
in
mov
icebp
rcrl
dec
jecxz
sbb
mov
cli
add
movsb
jb
jecxz
data16
adcb
add
or
pop
scas
sahf
jle
pop
sub
lret
lods
and
popa
sarb
pop
pushl
stos
mov
out
loop
stos
inc
cmp
sub
loopne
mov
mov
add
sbb
loop
mov
out
sarl
fs
xor
ret
push
mov
popl
enter
lcall
aas
or
inc
iret
pop
xchg
mov
cld
imul
xor
pop
ret
ljmp
fwait
stos
int3
jl
mov
and
xchg
sub
mov
cli
pop
dec
lea
popf
dec
inc
adc
es
dec
lods
insb
pop
jne
test
scas
daa
cmp
cld
sahf
hlt
jno
jge
xchg
mov
dec
sti
and
sbb
stos
mov
cmp
xor
mov
loop
or
in
addr16
jo
in
scas
fstpl
into
or
fcoms
xlat
adc
sbbl
aad
cli
hlt
xchg
mov
shlb
inc
int3
or
shl
out
dec
repz
dec
sub
mov
mov
cmpsb
out
jecxz
adc
jl
pop
jne
pop
es
mov
in
adc
nop
pop
sbb
push
xchg
ffreep
in
push
pop
jnp
test
ljmp
push
xchg
movsl
mov
push
das
lret
cmp
cld
mov
ss
push
fnstenv
push
ret
sti
aaa
push
sbb
inc
inc
xor
ret
aad
mov
push
loop
xchg
fwait
fwait
dec
jge
movsl
movsl
inc
test
mov
fcomp
andb
gs
jl
jnp
jno
inc
sub
shl
int3
leave
rolb
in
xchg
fisttpl
pop
dec
xadd
mov
ret
xchg
mov
cmp
jae
lret
sbb
pop
ljmp
cmpsl
adc
jnp
inc
inc
inc
mov
xchg
dec
inc
sub
das
cmp
loop
mov
in
mov
xor
adc
mov
icebp
ljmp
pop
mov
xchg
js
or
les
fs
sub
jl
adc
mov
in
jge
nop
outsl
mov
ss
idivb
push
je
jns
ret
shlb
adc
insb
in
movsb
add
xchg
pop
mov
pop
mov
fldl
push
mov
mov
lret
push
shr
xchg
out
jl
aas
mov
test
add
mov
mov
test
dec
pop
add
sub
mov
lock
pop
call
lods
mov
outsl
or
cmp
cs
dec
mov
push
push
lret
imul
sbb
repz
fbld
cli
mov
ficoml
mov
jg
fnstcw
fildll
sbb
sub
dec
and
pop
jno
mov
or
loope
mov
pop
push
jns
pop
aam
jb
icebp
rclb
aad
mov
repnz
jge
pop
fidivs
aaa
inc
pop
push
sbb
jae
push
push
xchg
ja
mov
and
stos
jno
fists
sti
das
jnp
pusha
pop
push
lret
test
add
loope
inc
movsl
mov
jb
push
mov
mov
xor
lods
imul
leave
sbb
mov
orb
sub
inc
inc
lret
and
cs
arpl
or
sub
sahf
popf
dec
lock
sarl
jae
mov
std
leave
mov
enter
movsl
cmpsl
xorb
psubusb
lods
jp
rcrl
bound
cmpsb
stc
fwait
push
dec
dec
or
iret
std
inc
push
popa
call
insl
loope
sub
jg
notb
mov
push
push
sbb
push
dec
jle
in
clc
cwtl
add
xchg
cmc
pop
mov
rcrl
pop
jmp
fxch
sarl
mov
push
pop
leave
adc
mov
movsb
push
or
adc
cmp
xor
outsb
js
or
pushf
incl
jo
mov
cmp
push
jg
mov
lds
and
pop
scas
mov
rclb
sub
and
test
sub
test
push
pop
add
and
fistpll
fisubl
arpl
and
aas
call
and
inc
push
mov
mov
xchg
lahf
ror
lret
mov
xor
adc
xorb
aad
push
daa
pop
lcall
fstpl
or
fcoml
push
adc
in
bound
je
notl
lret
inc
mov
push
sarl
insl
sub
lds
pop
xchg
imul
pop
jmp
or
mov
pop
push
mov
into
xchg
pop
sub
push
cmp
add
mov
ret
mov
loope
sub
subl
sbb
insb
adc
jb
push
shlb
and
add
sub
dec
in
in
pop
hlt
or
inc
mov
arpl
jb
ja
jns
sub
hlt
jp
sbb
shlb
mov
mov
push
lds
mov
popa
push
mov
mov
or
mov
fcmovu
and
vmwrite
xchg
or
sbb
add
mov
sub
dec
mov
test
outsl
add
lcall
ret
push
jbe
ljmp
fistl
fstpt
movsb
rorb
std
mov
into
out
das
cmp
jmp
fwait
ds
pop
add
mov
cmpsb
das
test
sbb
in
cmp
and
jle
lock
jle
fwait
insl
bound
jne
je
inc
sub
dec
in
adc
sbb
cld
pop
insb
and
mov
xor
cmpl
inc
rcrb
orl
enter
aam
les
cmc
mov
mov
insb
fsubs
jp
out
mov
and
xor
pop
jecxz
lret
cmp
inc
sub
neg
dec
cmc
or
addr16
push
xchg
sbb
not
lock
mov
cmp
sub
pop
sarl
sbb
jge
add
inc
shll
shr
xchg
mov
add
imul
add
mov
hlt
cld
daa
arpl
or
sbb
aad
dec
in
sbb
lahf
cli
xor
sbb
adc
pop
jecxz
add
scas
mov
popa
es
dec
and
jns
jg
mov
dec
xchg
push
addr16
cmpsl
mov
mov
jbe
jae
jne
mov
daa
push
cmp
movsb
cmpsl
or
xchg
xor
dec
and
cmp
test
aas
int3
scas
pop
cs
dec
pop
cmp
movsl
sahf
aaa
cs
mov
loop
pop
xor
dec
pop
aam
xchg
xchg
rorl
add
push
and
lret
sub
insb
jle
ret
cmp
jmp
repnz
scas
lahf
js
mov
mov
mov
insl
xor
cmpsl
lcall
fists
inc
dec
out
dec
cs
loop
or
test
lock
mov
jge
cld
push
mov
inc
cmp
pop
insb
fwait
sti
jle
ud2
xor
add
pop
mov
mul
adc
repz
ja
pusha
push
jge
sbb
jmp
mov
push
aas
lahf
sub
popa
out
movl
jmp
mov
pop
mov
pop
push
addb
xor
addb
cmpl
sbbb
ljmp
outsl
arpl
imul
xor
rolb
ss
rol
jg
int3
adc
mov
sbb
xor
push
arpl
xchg
lock
mov
pop
pop
sub
add
mov
outsb
rolb
mov
sti
mov
jge
xchg
cmpl
fnstenv
dec
ret
pop
jo
dec
push
aad
cwtl
sbb
outsb
insb
push
cs
aad
lods
add
inc
int
sbb
into
sub
inc
jne
sbb
cmp
test
pop
push
rolb
mov
xor
inc
jns
push
add
inc
jge
inc
dec
outsb
orb
je
adc
mov
jge
push
fists
fistpl
mov
jne
repnz
lods
and
and
imul
xor
inc
addr16
repz
push
xor
xor
inc
push
std
pushf
inc
gs
roll
sub
aad
loopne
cmc
mov
pop
xor
pcmpgtw
jne
outsb
dec
push
clc
add
outsl
pop
popf
inc
jecxz
cmpsb
jns
sub
mov
add
xor
popa
lahf
int3
mov
cvtps2pd
mov
aas
iret
jle
popf
clc
lods
shr
std
loop
dec
mov
stos
sbb
stos
add
sbb
push
repz
xchg
jb
push
stos
stos
mov
test
push
or
popa
xchg
icebp
scas
cmp
js
mov
call
dec
cltd
inc
inc
hlt
mov
imul
adc
mull
call
fs
enter
xlat
int3
sbb
jne
mov
mov
sbb
lods
dec
cmp
dec
mov
in
add
push
daa
or
adc
arpl
mov
mov
cmp
lret
mov
inc
sub
addr16
dec
jecxz
in
rorl
dec
insb
add
icebp
adc
cli
sarl
enter
fdecstp
lods
adc
push
sbb
insl
push
mov
mov
inc
adc
in
jle
out
lock
pop
xor
xchg
jle
xchg
mov
test
sub
decb
dec
mov
mov
push
inc
rcrb
mov
in
loope
mov
ss
pop
ljmp
icebp
xchg
and
cmpsl
sbb
mov
fwait
inc
ja
push
daa
or
jmp
lea
leave
rclb
adcl
stc
mov
popl
or
je
add
insl
enter
rcrb
cmpsb
icebp
out
fs
jmp
mov
xchg
sti
xchg
dec
and
cmp
std
decb
cs
or
adc
insb
jb
sub
mov
fiadds
push
push
or
cmp
mov
pop
out
hlt
mov
shlb
sub
outsb
mov
mov
jae
pusha
aas
mov
push
push
test
pop
push
popa
and
jmp
clc
aad
jle
and
int3
mov
sub
pop
xchg
in
pushw
xchg
pusha
in
xchg
leave
mov
push
inc
mov
shrb
cld
and
das
xchg
mov
lret
les
xchg
mov
mov
lods
outsb
push
sbb
cld
jb
add
into
and
adc
andb
jns
leave
sbb
lcall
xchg
dec
adc
lret
push
popfw
out
jecxz
ret
inc
daa
mov
icebp
call
pop
mov
call
jae
pop
adc
sbb
jns
sbb
lds
dec
sbb
test
jb
xchg
stc
fnsave
jbe
fcoml
loope
inc
inc
add
fneni(8087
scas
push
mov
femms
scas
adc
fldl
inc
cmpsb
imul
push
stos
mov
insl
mov
mov
aaa
in
jns
mov
mov
or
jle
sbb
xchg
and
into
repz
dec
xchg
jge
aad
outsl
cmp
xchg
xor
cmp
mov
or
test
and
pusha
cmp
stos
cmp
insl
notl
rep
dec
fstps
adc
push
push
or
jbe
pop
mov
lods
incb
jecxz
daa
push
mov
mov
pop
sbb
adc
pop
add
cmp
push
xor
call
pusha
pop
pop
inc
xlat
inc
inc
and
lods
cltd
sub
jo
mov
mov
mov
stos
fwait
xchg
in
mov
xor
add
jo
mov
popf
cmp
adc
dec
mov
xchg
lahf
mov
jecxz
insb
inc
sahf
xchg
cmpsl
shr
mov
pop
in
dec
xchg
fwait
fiaddl
jp
adc
test
mov
xchg
sti
in
adc
mov
popa
mov
inc
inc
cltd
cmp
enter
das
icebp
push
pusha
mov
fnstsw
dec
and
cli
xchg
jae
in
jmp
imul
cmp
fsubr
xor
adc
fmuls
jp
movsb
push
cmp
shrb
cmpsb
loop
jp
test
jge
fsubl
sbb
ss
add
es
aad
pop
data16
sub
dec
cmp
lret
or
lods
cmp
enter
jae
mov
jle
mov
mov
dec
lcall
fldl
sahf
jns
cmpsl
test
leave
mov
loopne
xor
sahf
sbb
dec
int3
fwait
daa
out
sub
cmp
pop
xor
js
jae
xchg
mov
mov
pop
push
iret
ret
sub
mov
pop
mov
mov
adc
subl
add
sarl
pop
mov
out
fs
cmpsl
pop
jmp
adc
loope
aad
push
cli
fabs
xchg
fs
mov
push
and
jae
popa
fidivrs
dec
movsb
aas
pop
xchg
adc
or
hlt
adc
test
cmpsl
lock
es
xchg
pop
daa
lock
movsb
pop
xchg
add
ret
xlat
push
shlb
into
xlat
sbb
ss
faddp
fnstenv
sbb
push
imul
pushl
push
mov
push
adc
in
and
pop
movsb
add
mov
mov
out
loop
cmc
adc
xchg
push
faddl
div
nop
mov
bound
js
call
jp
xlat
loope
push
jl
cmp
repz
mov
ret
fnsave
jns,pt
inc
dec
test
int
inc
xchg
mov
sti
cmp
out
adc
fistpl
aam
cmp
int
jno
hlt
stc
or
add
mov
cmp
gs
pop
mov
xor
and
sub
pop
imul
xor
repnz
lret
clc
dec
cmc
inc
push
movsl
cmp
xchg
add
dec
in
lds
pop
jp
jb
pop
lds
in
adc
pop
js
or
jl
pusha
sbb
sti
jl
insb
repnz
inc
sbb
mov
cmp
xchg
sahf
inc
xor
jge
sub
add
mov
iret
inc
repz
aaa
push
push
mov
daa
add
mov
mov
pop
push
push
push
sbb
adc
push
mov
or
repnz
ja
jl
inc
rorb
in
xor
mov
les
sti
xor
mov
pop
stc
push
adc
xchg
ljmp
xchg
mov
lahf
rorb
and
clc
adc
pusha
xchg
addr16
jne
int3
cld
in
pop
cli
adc
repz
mov
stos
adc
cli
in
mov
pop
movsb
stos
sarb
add
cmp
sar
fwait
je
cmc
or
icebp
push
pop
jbe
aam
jne
call
cmpsl
in
mov
xchg
insb
push
call
stos
test
iret
cmp
xlat
mov
imul
popf
insl
xlat
sub
rep
mov
adc
aad
cli
mov
or
add
hlt
rcll
rorb
mov
add
pcmpeqb
sarl
lret
jg
and
fistpll
xchg
push
jno
cwtl
xchg
mov
cltd
and
lcall
nop
sbb
sbb
test
cmc
lods
or
icebp
test
idivl
push
push
dec
jns
jo
test
cmp
add
pop
pop
test
mov
pop
jno
jmp
sub
mov
cmp
mov
push
lock
push
mov
ficomps
data16
adc
fmuls
inc
ret
loop
hlt
mov
fstp
jmp
mov
or
sbb
jmp
lea
cmc
gs
mov
mov
std
out
jmp
mov
xor
sarb
push
leave
sbbl
testl
leave
inc
fidivrl
fimuls
lret
mov
roll
cmp
jecxz
scas
rol
daa
inc
dec
addps
mov
inc
in
sbb
aam
loop
enter
cmp
jae
push
push
in
inc
mov
sub
popf
insb
fsubl
pusha
sbb
in
push
loope
jmp
lret
xchg
cltd
push
addr16
enter
dec
or
in
adc
inc
inc
mov
adc
loop
je
pop
test
inc
adc
inc
iret
and
or
dec
mov
xchg
mov
scas
and
cmp
cld
enter
ret
jle
inc
in
hlt
mov
xchg
and
adc
jns
fucomp
pop
aam
imul
dec
sbb
dec
insl
dec
nop
mov
adc
dec
sbbb
mov
repz
loop
cmp
nop
fisubl
sub
xor
adc
ja
sti
sbb
mov
sub
or
xor
ja
movsb
pop
push
xor
adc
dec
repz
and
adcl
or
push
jb
mov
js
gs
xor
stos
push
sahf
sub
mov
mov
cmp
sbb
cmc
or
mov
jecxz
loop
pusha
sarl
and
sbb
dec
loopne
out
and
inc
or
lgs
jno
push
clc
aad
add
pop
mov
xchg
and
rcrl
test
cmp
mov
mov
push
ret
cmp
dec
aas
outsl
imul
inc
pop
out
jmp
outsl
sbb
movl
mov
or
add
pop
inc
mov
loop
in
push
jne
xchg
and
inc
stos
sarl
clc
fmul
sbb
inc
es
lret
add
sbb
sub
push
pushf
dec
sub
arpl
and
xchg
out
in
insl
js
or
cmp
fcmovne
xor
stc
insl
divl
fwait
mov
popf
shll
or
pop
cld
hlt
cmp
js
push
test
dec
je
sbb
xor
push
or
adc
or
stos
sub
je
out
jne
lock
cmp
inc
jmp
divb
jb
test
jnp
jno
rcl
push
and
iret
bound
xchg
cld
mov
cmp
mov
jge
sbb
popa
rcrb
pop
jge
stc
add
sbb
ja
mov
push
stos
mov
fisubrl
insb
movsl
fwait
int3
aaa
pop
cmc
ja
into
mov
cld
lcall
test
in
mov
jb
das
xchg
inc
sub
xchg
addr16
xchg
push
out
mov
xchg
sub
loope
inc
and
mov
or
stc
lret
fdivs
or
pop
pop
mov
jp
rolb
adc
dec
lahf
cmc
push
lods
out
pop
dec
in
inc
cmc
aad
std
xchg
cmp
ljmp
or
outsb
out
add
jo
lods
cmp
jle
inc
cmpb
js
push
rcll
push
fisttpl
pop
clc
ret
lcall
imul
push
sub
and
mov
xchg
push
push
mov
dec
dec
out
aad
add
ja
es
xor
mov
xor
adc
jo
inc
and
inc
shlb
sti
aas
jl
out
dec
add
aam
jle
pop
jb
imull
xchg
iret
dec
add
insl
dec
addl
lods
icebp
daa
out
pop
out
pop
orl
or
fs
loope
and
pop
and
mov
sub
leave
bound
cmp
or
push
ret
xchg
icebp
imul
sbb
das
int3
mov
sub
jb
clc
xor
sbb
xchg
jbe
lret
xchg
lods
push
imul
addr16
sti
mov
sub
jbe
jnp
test
stc
mov
pop
mov
sahf
gs
je
inc
xchg
stos
aas
sbb
pop
loop
inc
leave
jmp
sub
xchg
xchg
fwait
and
call
js
mov
jbe
inc
rorl
inc
cld
xor
push
cmp
mov
popa
ficompl
pop
in
notl
jnp
int
in
rol
loope
mov
and
push
jp
mov
inc
clc
cmp
fsubs
movsb
mov
push
mov
repz
xchg
mov
js
aaa
xchg
pop
pop
daa
xor
cmp
cwtl
fbld
daa
jge
mov
lods
add
aaa
das
inc
and
jge
mov
pop
mov
addr16
and
cli
cmp
vxorps
lret
es
out
sub
rorl
outsl
lret
test
pop
mov
mov
or
adc
mov
add
pop
sbb
sbb
pop
adcb
loop
fstl
push
std
imul
and
mov
mov
ljmp
xchg
out
aam
aaa
stos
div
xlat
push
ss
negl
dec
mov
sbb
jbe
or
inc
cld
sub
jg
sbb
add
pop
xchg
adc
int
popf
push
cmp
pop
inc
jne
in
cmp
adc
inc
cs
and
inc
movsb
cmp
jo
jecxz
nop
gs
imul
mov
insb
fsub
inc
fimull
scas
and
sub
sbb
sbb
and
xlat
adc
cltd
lock
sbb
push
sti
mov
in
imulb
sub
and
stos
data16
mov
or
xchg
mov
xchg
xchg
pop
dec
add
sbb
cld
mov
push
imul
add
add
inc
cmp
add
insb
push
idivl
pop
rorb
sarb
fdiv
mov
xor
test
xchg
icebp
in
std
jle
push
leave
mov
add
cmp
cwtl
fdivl
cmpsl
adcl
fiaddl
or
gs
fnstsw
sbb
cmp
push
jmp
xchg
jns
stc
inc
test
loopne
xor
cwtl
rclb
pop
fdivr
lds
inc
cmp
ret
inc
jnp
push
arpl
or
faddl
stos
inc
pop
in
in
andl
sbb
jne
scas
xchg
sbb
inc
fcmovb
adc
loopne
mov
daa
nop
arpl
call
cwtl
cld
aas
xor
inc
scas
cmpsl
cltd
mov
dec
fmull
clc
daa
mov
inc
andl
addl
aas
in
xor
cli
mov
pmaxsw
cld
pop
arpl
mov
cmp
dec
sti
or
out
addb
hlt
cmpsl
mov
pop
ror
adc
lods
repnz
addb
pop
xchg
xor
cld
test
or
shr
scas
mov
bound
pop
push
bound
loopne
dec
fnstsw
pop
pop
mov
bound
mov
jnp,pn
sub
ljmp
dec
sbb
jecxz
mov
sub
jl
xor
ja
cltd
dec
jbe
mov
mov
fstl
mov
sub
mov
adc
inc
mov
sub
jbe
out
dec
js
loopne
jbe
cmpsl
inc
mov
jecxz
fs
flds
jnp
hlt
addl
es
xchg
stos
inc
sbb
mov
dec
arpl
push
iret
mov
movsl
push
gs
ja
iret
mov
cs
ds
mov
test
clc
mov
data16
inc
sarb
adc
shl
xchg
adc
js
cmp
fs
mov
cltd
push
dec
jne
jg
pop
mov
jmp
pop
mov
push
cmp
jp
inc
js
inc
outsl
aaa
fbld
loopne
lahf
mov
or
xor
xchg
loopne
lds
jecxz
xchg
jge
inc
inc
divl
addb
xchg
mov
dec
loop
sub
shl
push
mov
jge
std
es
push
inc
mov
daa
addr16
lcall
fdivrp
or
outsb
aaa
movsb
dec
movsl
js
repnz
subl
test
das
cltd
xchg
jmp
call
ret
push
push
arpl
dec
mov
mov
ljmp
ja
add
lods
mov
imul
mov
mov
rcll
push
cmp
filds
add
xchg
inc
lret
cld
push
std
gs
rcr
fidivl
or
lods
sbb
push
cs
cmpsl
divps
xchg
jl
das
cmp
sbb
scas
sbb
les
sub
sub
imul
clc
cmp
add
jo
iret
in
jecxz
mov
dec
in
inc
push
insl
mov
jae
incb
and
xor
add
xor
adc
mov
xchg
dec
pop
inc
pusha
jbe
fstpl
in
scas
lcall
mov
roll
and
ret
gs
and
xchg
mov
adc
fwait
in
in
fwait
jl
pop
mov
pop
sbb
sub
fmul
cld
aaa
int3
int
add
jb
or
cmp
pop
xchg
jmp
out
and
mov
add
dec
push
sahf
mov
sub
sti
xchg
outsl
dec
mov
ss
lcall
xor
lret
xor
mov
pusha
jne
mov
mov
pop
xor
add
rorb
sbb
mov
in
in
adc
pop
adc
cmpsb
add
stos
mov
movsb
cmp
movb
cltd
xor
mov
xchg
std
loop
ret
test
sbb
xchg
sub
call
push
jl
cmp
mov
mov
adc
push
int
or
aam
pop
shll
fistpll
inc
pushf
add
or
cmp
sbb
inc
jbe
js
mov
lcall
mov
sub
mov
fdivrl
mov
ja
pop
jmp
fsubrs
mov
and
pop
fsts
and
lods
roll
popf
repnz
ds
imul
es
adc
or
push
fwait
mov
jne
fdivrs
in
mov
fiaddl
enter
lods
dec
mov
xor
jb
inc
lods
jae
imul
jo
call
stos
push
pop
xchg
cld
pop
xchg
sub
cmp
pop
mov
imul
or
dec
xchg
repnz
xlat
and
or
leave
fstps
popa
shlb
popf
mov
ljmp
fcmovnu
stos
aaa
pop
mov
shll
cli
outsb
adc
in
or
and
xorl
into
push
xchg
add
xchg
jl
sub
out
sti
sub
xchg
insl
ss
lret
cmp
mov
inc
js
mov
ret
jp
and
mov
in
nop
push
outsl
js
leave
xchg
adc
out
std
jbe
push
cmp
dec
add
loopne
push
int
insl
cmc
stos
pop
aad
bound
ljmp
add
aas
or
add
ljmp
or
or
xor
mov
scas
ror
push
jl
scas
cmp
inc
stos
cs
aad
insb
out
adc
scas
out
pop
mov
mov
push
sbb
xchg
cwtl
fs
jmp
jecxz
pop
mov
das
repz
cmp
ljmp
cmp
xchg
sub
or
repnz
inc
shll
fistl
sbb
mov
div
mov
xchg
outsb
out
mulb
repz
dec
pop
mov
int3
sahf
and
lcall
stos
push
sub
fxtract
enter
cmp
ficompl
and
add
mov
xor
or
pop
sbb
daa
cwtl
bound
repnz
pop
iret
xor
sbb
or
pop
xor
xor
and
cmp
cmp
rorl
popa
inc
add
cmp
ret
add
popa
jmp
pop
test
sbb
pop
mov
cmp
ss
xorb
add
jae
or
repnz
xlat
insl
inc
cmp
xchg
das
aam
shl
sbb
mov
pop
push
cs
push
jae
lea
or
sbbb
hlt
test
bnd
rcrl
jns
xor
mov
fs
shll
cmp
dec
jl
movsl
push
pop
and
fdivl
mov
xor
xchg
fwait
pop
mov
ja
fwait
pushf
cmp
data16
and
ror
stos
pop
adc
neg
mov
add
aam
pop
out
push
aas
ss
loop
sbb
test
mov
adc
xchg
or
pop
cvtpi2ps
subb
push
loop
test
loope
adc
mov
cwtl
and
loope
jbe
inc
fadd
and
es
ds
fistpl
unpcklps
test
xchg
xorb
fistpl
negl
pop
cs
or
scas
xchg
fdiv
ret
pop
fbstp
push
cltd
cmp
pop
xchg
inc
int3
ja
push
cmp
pop
inc
inc
xchg
imul
sarb
sti
push
shll
or
mov
testl
sub
mov
or
stos
mov
stos
imul
push
jp
cmpsl
inc
jae
ja
dec
mov
testl
clc
int
outsl
in
mov
jg
ret
push
jmp
adc
add
jmp
mov
std
inc
dec
loopne
and
push
pop
lret
iret
adc
inc
leave
add
aam
sarb
in
repz
sbb
addb
fwait
or
inc
or
dec
xor
dec
shll
dec
sub
shrb
sbb
ficoml
decb
fidivrs
add
sbb
pop
mov
cmc
mov
or
sbb
adc
outsb
dec
and
mov
cmpsb
int
xor
int3
and
xor
and
pop
aas
or
lcall
pusha
dec
cmp
imul
lods
push
test
jne
flds
les
hlt
jo
mov
ret
bound
jae
push
dec
jmp
pusha
and
jp
faddl
ss
std
cmp
cmpl
sbb
push
xor
xor
cmpsl
pop
cmpsl
stc
sbb
add
insb
insb
sub
movsl
jb
and
sub
fsubs
cwtl
pop
xchg
jnp
pusha
cwtl
mul
jp
rcll
push
mov
ret
xchg
add
lret
sahf
or
cmpxchg
pusha
mov
shll
mov
jmp
mov
add
in
out
inc
pushf
es
sub
call
lcall
out
jp
xchg
iret
xchg
enter
xchg
push
mov
sub
dec
inc
jecxz
lods
cwtl
mov
lcall
xor
lret
std
sub
mov
xlat
jge
pop
ss
iret
daa
mov
xor
mov
add
mov
aad
es
cs
fildll
xor
or
push
fnstsw
into
rcll
cs
and
inc
jbe
lea
dec
aas
jg
jae
dec
push
cmp
sbb
loope
cmpsb
jg
or
add
sub
sub
and
inc
addr16
push
mov
stc
mov
sbb
mov
pop
inc
mov
jge
inc
aam
jae
ret
scas
movsl
les
add
pop
jge
aaa
aad
xor
xor
add
xor
adc
jmp
icebp
iret
mov
pop
jg
add
mov
mov
inc
ds
cwtl
add
sbb
pushl
dec
cmp
fsubrs
xor
pop
dec
in
jae
cmp
stc
mov
inc
sahf
mov
fldl
mov
repz
mov
arpl
xchg
mov
lahf
add
fmull
dec
push
add
pop
adc
xchg
sub
push
enter
fdiv
mov
mov
mov
mov
mov
lods
xchg
imul
fdivrp
pop
cltd
xor
push
sbb
and
ds
push
mov
or
cmp
loopne
add
ds
jle
xchg
push
mov
cmp
cmc
fidivrs
int3
outsb
aam
out
dec
enter
dec
roll
mov
in
xlat
pop
out
add
xor
shll
push
and
cwtl
adc
into
popf
push
push
roll
or
dec
out
andnps
dec
in
xor
out
sub
movb
push
dec
les
rorl
sub
mov
mov
or
push
adc
imul
push
lret
push
mov
incb
cld
fimuls
outsb
es
ds
sqrtps
test
sub
cltd
hlt
sub
mov
lds
pop
cmpsl
or
cs
xor
sti
xor
dec
xor
mov
xchg
jmp
xchg
and
add
rcll
push
mov
xlat
movsl
mov
adc
sahf
or
sub
xchg
cmp
mov
xchg
fwait
into
sbb
incl
jo
mov
pop
add
dec
mov
and
test
bnd
inc
adc
sbb
or
mov
aam
mov
sub
ret
pop
in
jb
outsl
push
mov
push
cmp
fdivl
popf
ficompl
clc
icebp
dec
jnp
xlat
adc
adc
aam
xchg
mov
jae
sahf
pop
ss
mov
xchg
xchg
pop
add
cltd
and
dec
push
lea
movsl
jmp
mov
in
int3
mov
lcall
in
xor
pop
orl
mov
mov
sub
das
sbb
and
clc
and
or
xchg
out
xor
movsl
fld
movsb
sbb
mov
xchg
testb
lds
or
outsl
arpl
fs
dec
or
int3
cld
jmp
mov
adc
pop
inc
ljmp
pop
add
cmp
lahf
ret
dec
cld
xlat
add
out
mov
sbb
shlb
sub
shl
in
add
fistl
fxch
push
popf
and
xor
and
fsubrp
es
xchg
push
jo
mov
test
push
faddl
movsb
xchg
or
sbb
cmpsl
or
add
jne
fnstsw
push
and
push
cmc
fistl
in
js
scas
lret
xor
ret
pop
sti
push
ja
les
dec
and
mov
mov
inc
dec
into
repnz
je
xor
mov
jge
jl
hlt
rorl
push
ja
mov
jnp
into
dec
test
jecxz
cmp
out
dec
inc
jmp
push
cli
jo
fstl
call
add
sub
hlt
imul
add
xchg
ja
xor
jbe
sub
and
mov
and
inc
andl
sbb
sbb
or
and
out
test
loopne
mov
enter
stc
or
js
js
inc
ret
jnp
pop
mov
push
push
sub
pop
aad
les
dec
xchg
int3
call
dec
sub
jge
and
mov
in
pop
dec
inc
inc
jle
ret
cs
cmp
outsb
jo
sti
push
notb
jnp
xor
test
sub
scas
fistpll
cmpsb
xchg
into
xor
dec
mov
mov
mov
cmp
lea
decl
cmc
and
push
xlat
jg
push
lret
xchg
inc
jo
jecxz
call
sbb
lods
xchg
push
pusha
fwait
outsl
sub
sarb
insl
lods
pusha
jp
jge
cltd
sub
ret
movsl
sbb
jmp
pop
aas
cmpsl
xor
sub
lret
sbbl
arpl
dec
addb
ja
mov
pop
inc
sub
pop
enter
lds
lock
or
lret
insb
test
pop
or
xchg
jge
push
jb
and
subl
cmp
clc
cmp
sub
cli
fiaddl
pop
jp
mov
pop
adc
and
pop
push
adc
movsl
push
xchg
xorl
inc
lds
push
into
psrlq
lods
int
lahf
mov
lods
mov
jae
or
add
jno
jbe
dec
pushf
aas
aas
push
fcmove
adc
push
cmp
adc
aaa
and
jb
sub
ret
inc
nop
scas
xor
add
push
mov
pop
dec
pop
in
stos
cmp
test
popf
xor
outsb
lret
lock
cmp
or
sbb
dec
test
shlb
pop
out
push
lds
push
scas
aad
push
lods
lods
dec
fmul
in
mov
repnz
push
adc
mov
filds
mov
mov
ficompl
cli
mov
lahf
fdivp
fiaddl
inc
push
je
push
inc
xlat
jle
push
sbb
insb
sub
pop
jecxz
lea
repz
xor
dec
fwait
mov
inc
jne
mov
movsb
add
push
fwait
insl
out
jnp
xchg
aam
xor
xchg
in
jae
and
xor
roll
sub
out
das
js
xor
sub
sahf
xor
flds
sahf
adc
lods
movsl
cs
dec
push
cld
aaa
inc
jecxz
lret
dec
mov
jnp
cld
mov
into
iret
sbb
sub
enter
inc
sbb
sub
xchg
push
leave
adc
fwait
cmp
mov
dec
iret
dec
jecxz
cmpb
ljmp
or
mov
sub
and
xor
mov
and
push
adc
sub
mov
test
jmp
test
dec
fsubs
or
xorl
pop
clc
fsubrs
push
loop
in
test
inc
test
jnp
xchg
aam
and
scas
jnp
es
mov
popf
pop
sbb
mov
xor
ret
imul
les
pop
cmp
pushf
adc
mov
addl
xchg
cmp
call
call
xchg
in
cli
adcl
push
xor
cwtl
cmp
dec
nop
test
lods
mov
adc
loopne
inc
cmp
in
call
std
dec
jo
xchg
stc
addb
mov
lret
mov
cmp
and
inc
rolb
sbb
push
add
out
int
push
sub
out
imul
inc
push
inc
sahf
fwait
imul
cltd
xchg
rcrl
jbe
rcrl
add
mov
lahf
push
fnsave
aaa
movsl
cwtl
or
or
cmc
icebp
mov
inc
push
hlt
push
or
sahf
xchg
sub
jbe
in
je
mov
push
mov
aaa
xor
mov
fdivp
ja
fwait
or
cltd
in
mov
sub
mov
dec
add
ficoms
lods
scas
sub
stos
loope
cmpsl
pop
out
shrl
pop
cwtl
push
iret
hlt
mov
add
adc
pushf
add
mov
mov
xor
push
cli
jg
aad
fistpll
jmp
daa
std
sbb
popf
dec
fsubs
call
ret
adc
mov
push
cmp
add
loopne
pop
pop
cwtl
jp
lods
mov
mov
loop
sub
into
stos
mov
jl
jne
pop
dec
enter
push
repnz
out
fsts
loopne
push
xlat
shrl
inc
testb
fdivr
sub
and
sub
inc
push
imul
lods
shl
pop
imul
out
pop
or
mov
lock
push
add
push
mov
loop
sbb
fisubs
mov
and
mov
in
or
sarb
pop
xchg
divl
sar
mov
inc
xchg
and
xchg
lea
inc
outsb
add
jno
shll
jle
ret
sbb
xchg
outsl
pop
stos
sub
mov
aas
push
or
mov
jb
xchg
movsl
insl
xor
dec
ret
cmpsl
stos
jge
dec
jae
push
push
xor
mov
sar
stc
inc
and
sbb
mov
sub
xor
scas
fmull
aam
aaa
lods
leave
popf
cli
xorl
mov
in
and
pop
adc
push
push
cmp
addr16
das
mov
or
and
cld
jp
icebp
shlb
insl
jo
dec
loopne
and
push
inc
je
inc
sub
flds
xchg
pop
xor
fstps
jl
call
imul
mov
mov
and
insb
dec
andl
pushf
jnp
in
sbb
fmul
mov
loope
push
push
or
rol
test
xchg
pop
push
sbb
sbbb
test
lea
xorb
pop
clc
push
mov
xorb
fcompl
shlb
shlb
and
sarb
repz
or
das
inc
jmp
rolb
sbb
fprem1
mov
cld
repz
pop
shll
dec
dec
cmp
inc
pop
test
outsb
out
les
shll
jmp
or
shr
ljmp
push
stos
repz
movsb
das
mov
cld
das
jmp
loopne
xchg
add
push
arpl
imul
dec
and
push
or
out
dec
jp
dec
add
mov
mov
pop
mov
mov
js
lock
xor
iret
push
fldcw
sti
push
lret
incb
cmp
mov
dec
and
lret
and
testb
les
ljmp
xor
mov
xchg
lcall
or
push
inc
out
push
jae
jge
dec
pop
pop
shl
and
rorl
pop
add
inc
cmpsb
sbb
test
add
pop
or
mov
dec
push
mov
and
add
sub
add
testb
aaa
sub
or
lcall
lods
adc
ret
mov
test
in
clc
or
jmp
add
sbb
mov
out
pop
mov
push
rcrb
call
sub
xorl
mov
lret
jg
mov
xchg
mov
out
aad
lea
fstl
outsb
and
push
jae
pop
jne
and
stc
adc
iret
adc
xchg
repnz
push
enter
fsubl
or
jae
jne
nop
pop
cli
mov
inc
scas
jnp
lea
cli
sub
lcall
mov
jmp
mov
pop
cmp
ss
movsb
imul
out
xor
stos
stos
mov
into
adc
popf
aam
jae
push
cmpl
inc
mov
pop
in
loop
cmp
out
pop
adc
adc
cmp
ss
add
int3
cwtl
jae
pushf
inc
and
ror
push
clc
test
cmp
mov
or
repz
inc
add
push
stos
shlb
mov
sub
cwtl
iret
incl
mov
add
fcomps
fs
hlt
popf
pop
roll
cmp
or
xchg
sbb
fimull
mov
hlt
lret
mov
adc
mov
incb
es
adc
adc
jp
insl
movsl
sbbl
sbb
mov
jl
sbbl
fcomps
pop
pop
push
outsb
jle
dec
sti
mov
lods
hlt
jnp
arpl
pop
fadd
inc
mov
cmpsb
in
cmp
dec
xchg
lret
lds
iret
jge
or
or
stos
insl
xor
test
fnstcw
push
lcall
mov
or
sete
xor
cmp
rorb
loopne
pop
jnp
aas
mov
out
pop
mov
fnstcw
lock
js
xchg
data16
ret
inc
test
sub
or
fisttps
sub
push
mov
push
into
inc
jo
lea
cmp
push
fwait
lret
das
sbbl
lcall
or
sti
test
push
flds
fistpll
add
shl
xchg
mov
xchg
xchg
inc
sbb
lahf
insl
lret
push
push
push
xlat
jnp
dec
ret
mov
rolb
push
adc
cmpsl
lahf
jns
sub
lret
jecxz
in
mov
out
push
loope
fstpt
cld
inc
mov
pusha
mov
dec
dec
jmp
add
nop
test
fbld
sarl
adc
ss
and
call
cmpsb
push
cld
aas
inc
divb
xchg
shl
out
jnp
mov
aaa
movb
loope
mov
dec
rcl
mov
xchg
add
in
cs
pop
icebp
xchg
popa
in
loopne
pop
mov
cmp
lret
sbb
scas
lds
loop
inc
xchg
adc
jg
cwtl
and
mov
xorb
jbe
jno
adc
movsl
fisubrs
adc
aas
lds
jo
cmpsb
pusha
push
inc
lock
fstpt
jg
add
pop
mov
clc
insb
lea
jns
popl
jmp
sbb
cmpsb
lods
es
jmp
sub
idivb
jae
or
inc
stos
sub
xor
repnz
inc
push
push
sahf
out
mov
rclb
and
push
andb
sub
or
in
dec
inc
xlat
jbe
and
stos
in
add
cli
fxch
nop
add
insl
jmp
xor
in
xchg
mov
in
push
pop
inc
or
push
lret
fwait
stc
xchg
xchg
xchg
lods
add
push
dec
inc
mov
xchg
mov
daa
sahf
dec
adc
and
out
jo
in
scas
sub
lret
inc
adc
sub
pop
imul
mov
pop
adc
mov
sbb
shrl
pop
fst
aaa
scas
xchg
gs
sahf
loopne
inc
mov
std
subw
jno
clc
dec
mov
push
jo
mov
jne
jb
cmp
xchg
hlt
fs
dec
cld
jecxz
inc
mov
pusha
shlb
inc
or
fdivl
lcall
mov
outsb
pop
mov
xchg
sub
lods
pop
push
xor
sub
adc
push
push
clc
mov
mov
or
cmp
cmovb
lcall
xor
daa
mov
lods
test
jp
roll
jle
fnstenv
test
jbe
je
sub
enter
in
inc
sahf
pop
push
imul
mov
adc
cmp
in
mov
into
pop
shrb
cli
xchg
mov
mov
ficoml
add
inc
mov
adc
pop
hlt
enter
jl
mov
fimull
hlt
xor
mov
scas
lret
cmp
jle
enter
mov
test
xchg
push
mov
shlb
push
xchg
mov
jnp
call
in
pop
mov
inc
add
outsl
pop
xor
dec
fsubl
fcomip
sbb
repnz
sub
push
lds
les
mov
add
in
jle
shll
jl
lret
mov
aad
enter
or
sub
xchg
sub
sbb
push
fidivrs
loopne
rcrl
jp
cmpsb
psadbw
pop
popf
in
sbb
repnz
adc
jae
in
lret
pop
mov
mov
movsl
enter
cmp
fadds
rcrl
cmpsl
das
repnz
push
pushf
aaa
mov
push
lret
pop
mov
test
mov
ja
sbb
movsl
repnz
sub
xrelease
adc
or
pop
bound
dec
mov
add
cli
and
pop
loopne
push
inc
sbb
aad
fistps
sbb
pop
add
outsl
sahf
mov
push
pop
rcr
mov
push
jnp
cld
mov
sbb
add
out
and
sub
out
fistpll
push
cmp
ss
sarb
inc
gs
xchg
pop
push
adc
dec
mov
popf
std
xor
jle
push
push
xlat
mov
sub
pop
push
idiv
lahf
not
push
nop
cwtl
jmp
adc
lods
cmc
sub
shrl
or
call
adc
ret
mov
jb
xchg
sub
in
int3
jnp
xrelease
sbb
inc
dec
push
iret
mov
aaa
adc
jne
sbb
std
lcall
jno
loope
cltd
repz
int
setns
movl
xor
pop
pop
jmp
std
repnz
sbb
arpl
fbstp
test
mov
bound
sbb
cwtl
arpl
test
add
xchg
mov
cmpsl
mov
ss
repnz
inc
jl
incb
mov
rorl
mov
iret
aaa
jo
pop
scas
insl
sbb
es
in
shlb
out
icebp
mov
add
mov
mov
scas
loop
rep
sbb
inc
mov
and
flds
movsb
inc
test
sub
xchg
lock
adc
jno
push
xchg
dec
lods
les
cwtl
fdiv
mov
pop
push
push
xor
rcl
in
or
outsl
shlb
or
xchg
cmpsl
jae
fucom
xchg
jae
leave
jo
mov
lea
mov
pop
imul
cwtl
out
or
mov
adc
mov
mov
sarb
adc
aas
and
push
sbb
leave
stc
mov
mov
dec
mov
adc
and
pop
cmp
dec
mov
fld
xchg
xor
or
les
sub
test
xor
cmp
jg
sub
and
stc
and
adc
push
adc
inc
adc
fidivrs
repz
sub
mov
lret
std
dec
ja
mov
outsl
lods
jge
sbb
or
jmp
ret
xor
and
outsb
xchg
push
push
int3
push
mov
push
cmp
or
push
int3
outsl
outsb
insl
fldcw
shlb
jg
aaa
adc
dec
inc
in
lods
fxch
inc
iret
xor
mov
std
movb
jne
cli
arpl
mov
ljmp
sbb
or
nop
scas
jle
in
sub
or
jns
mov
pop
aam
pop
add
inc
jno
stos
divb
fisttpll
push
ss
mov
hlt
test
lea
push
and
loope
push
aam
push
inc
nop
movsb
jne
xor
mov
dec
pop
mov
sbb
dec
data16
and
cltd
push
add
decl
int3
outsb
dec
and
and
es
testb
push
out
xchg
ret
dec
loop
and
fld
test
data16
repnz
inc
pop
or
jmp
in
cmp
mov
int
ljmp
mov
cmp
ds
adc
push
dec
pop
movsl
outsb
mov
dec
xor
fst
fs
das
test
es
cmpsb
outsl
add
cltd
xor
stos
mov
loop
sub
jge
in
jp
lret
test
ljmp
aas
inc
push
ret
hlt
rcrb
lret
cmc
loopne
fmul
xor
sahf
pop
push
cwtl
xor
gs
mov
push
dec
add
jno
jb
lcall
lret
dec
popw
push
sub
out
daa
sarb
adc
mov
iret
or
sub
push
inc
int
sbb
pop
push
sbb
xor
sub
jp
sbbl
sub
push
sbb
jne
add
mov
cs
jo
jns
sarb
mov
imul
mov
and
push
and
adcl
mov
rorl
fists
jnp
rdmsr
sbb
js
lods
in
or
inc
push
sbb
dec
daa
outsb
pop
stos
xchg
sti
adc
mov
jb
pop
and
jecxz
cmp
push
in
test
in
mov
push
insb
fbstp
mov
gs
pop
cmp
or
popa
lds
shrl
xchg
lret
sub
add
shll
hlt
dec
aas
lock
mov
rorb
jp
push
cli
xor
dec
ss
and
aam
jb
dec
pop
xchg
add
les
cmp
cmp
dec
repnz
push
ss
cli
xlat
mov
xchg
mov
jae
pop
cmp
es
and
icebp
jge
into
lea
xor
pop
aad
mov
daa
jno
and
fiaddl
xor
or
decb
pop
fbstp
test
inc
cs
adc
stc
cmp
cmp
mov
cltd
das
mov
addr16
mov
cmp
jmp
cmpsb
addr16
fmuls
mov
mov
xor
js
lret
xchg
jns
arpl
inc
cmp
add
insb
fadds
sub
push
hlt
mov
push
popa
mov
sahf
xor
push
jno
lahf
es
jg
pop
iret
jecxz
stos
xor
ret
gs
scas
addr16
and
cmp
pop
xor
fadds
cli
scas
inc
add
test
cld
mov
imul
push
sahf
push
or
shrl
inc
aam
add
jmp
shl
mov
mov
cmp
imul
dec
inc
aad
jo
pop
pop
mov
push
adc
je
jae
cmpsl
dec
out
std
xor
popl
int
cmp
test
mov
and
inc
lahf
mov
mov
test
ja
inc
dec
jge
or
ficompl
mov
outsl
scas
xor
daa
lods
mov
inc
rcrl
loop
xchg
and
out
jecxz
orb
in
hlt
pop
inc
mov
add
jne
mov
sub
push
ss
cmc
xlat
lock
out
and
shr
cmpsl
into
cmp
pop
adc
outsb
rcl
mov
mov
pop
es
dec
xchg
je
cmpsl
popa
mov
xchg
pushf
mov
mov
sbb
insl
iret
fdivrp
xlat
addl
pushf
es
dec
hlt
int3
out
out
popf
and
mov
std
insb
mov
xchg
pop
cmovns
jl
cmp
dec
adc
cmp
cld
push
mov
jg
inc
adc
in
adc
lds
sbb
in
stos
xor
mov
out
adc
jne
pop
mov
mov
adc
lcall
xor
push
pop
subl
ja
repz
mov
cmpsl
notl
dec
push
push
into
cmp
mov
pop
mov
dec
inc
or
adc
hlt
or
mov
sub
dec
in
sbb
push
out
pop
inc
shlb
pop
sti
mov
xchg
scas
out
push
xor
and
pop
or
retw
mov
add
mov
mov
insl
fcmovb
xor
inc
and
inc
jmp
pop
adc
arpl
clc
and
sbb
jmp
aas
psllq
popa
cmpb
jb
js
bound
clc
movsl
add
hlt
std
sti
mov
aam
rcll
daa
sbb
clc
mov
pop
inc
or
and
imul
add
adc
pop
mov
insl
loope
sbb
or
and
jae
mov
inc
dec
pop
popa
or
je
hlt
mov
inc
imul
push
data16
mov
add
cltd
das
or
pop
repnz
adc
cmp
sub
and
push
mov
test
mov
fisubrs
call
adc
pop
imul
adc
push
cmpb
mov
or
push
jecxz
push
hlt
bound
jo
add
xlat
sbb
jae
sahf
add
les
call
popf
mov
adc
cmpsb
or
inc
jp
enter
mov
fiadds
subb
shrl
lods
js
push
pop
jmp
sub
xchg
data16
arpl
inc
sub
das
adc
jae
push
shrl
fiaddl
mov
mov
gs
sub
pop
andl
add
shrb
sub
mov
fidivl
stos
push
mov
or
mov
push
xchg
aad
cmp
mov
xlat
sub
bound
pop
sub
lcall
mov
and
test
cmc
aaa
adc
repz
xor
in
adc
in
lea
hlt
xor
add
jae
or
xchg
jge
cwtl
mov
fidivs
movsl
inc
dec
repnz
out
imul
xchg
push
ret
xchg
cmp
fstpt
mov
pushf
pop
pop
pop
push
jbe
dec
push
pusha
hlt
add
jno
mov
in
stos
fucomip
rcrl
aaa
jno
js
dec
nop
add
dec
jbe
jo
ja
jns
and
stc
mov
shl
push
pop
and
mov
outsl
clc
jle,pn
or
mov
repnz
and
mov
add
lds
ja
add
fstl
into
push
subl
push
mov
mov
jge
aas
aad
ds
cmp
mov
sbb
in
mov
lcall
mov
xchg
sbb
ret
jp
or
test
out
jmp
das
xchg
xor
sbb
or
jno
icebp
pop
neg
in
jge
push
pop
pop
push
stos
scas
mov
xchg
ret
inc
inc
or
jnp
movsl
adc
stos
jmp
push
test
pop
dec
clc
add
pop
out
push
xchg
scas
rcrl
loope
mov
jb
test
clc
js
sbb
and
xor
lahf
and
mov
push
xlat
cmpsl
ror
insl
push
aam
and
imul
imul
sti
xor
mov
jle
cli
pop
and
cmp
pop
dec
pop
dec
push
and
xchg
aad
pop
pop
jp
sbb
cli
leave
cli
mov
xlat
sbbb
dec
and
mov
clc
out
out
or
mov
adc
subb
cmp
repz
jg
xchg
pop
cmpsb
or
rcrl
dec
adcb
push
pop
add
mov
std
sbb
ficomps
icebp
inc
dec
sub
in
lock
mov
dec
mov
push
lods
and
ja
pushf
sbb
dec
inc
aaa
pop
xor
in
scas
into
mov
pop
and
lcall
fimull
mov
jae,pn
lock
cmp
ds
out
and
inc
lock
fsubrl
das
cmp
mov
arpl
sub
or
jno
shl
mov
xchg
push
lods
lcall
mov
leave
aad
dec
and
data16
leave
cli
and
sbb
push
loop
ret
sub
sbb
add
imul
add
xchg
mov
sub
push
insb
mov
ljmp
mov
addr16
les
xchg
lds
in
mov
adc
shll
add
pop
inc
xor
popa
out
pop
in
jl
je
add
aam
popf
xchg
xor
cmpsb
pop
mov
jle
gs
and
inc
mov
loop
nop
popa
jns
int
xor
adc
clc
cld
xchg
mov
lock
xchg
addb
imul
mov
out
add
sbb
lret
cli
xchg
dec
adc
pusha
fs
incl
add
xchg
mov
lret
cs
xchg
pushl
dec
mov
xchg
repz
xchg
adc
arpl
lea
imul
add
stos
xlat
insb
dec
fcmovb
loope
ljmp
mov
cbtw
jg
mov
dec
dec
iret
cmpsl
push
insl
fsubrl
xchg
cmp
lds
int3
jmp
testl
or
xor
lea
inc
push
fs
xchg
into
mov
lea
jge
outsl
mov
dec
addr16
out
cmp
pop
pop
movsb
add
push
push
sbb
popa
xchg
push
sbb
push
pusha
jl
lds
movsl
mov
mov
int3
add
mov
loope
push
push
cli
mov
sbb
push
loope
aad
dec
push
insl
sbb
inc
sbb
inc
inc
inc
push
pop
inc
lds
outsl
xor
xor
cmp
inc
dec
hlt
imul
pop
jecxz
idivl
push
insb
and
outsl
dec
aad
das
and
push
in
adc
pop
adc
out
add
mov
test
mov
fwait
loopne
adc
rorw
clc
repz
aas
out
aas
jns
or
ret
shrl
inc
hlt
cmc
cmp
subb
xor
add
out
push
cmc
aaa
scas
pushf
lock
pop
lds
mov
insl
jb
cli
decb
and
xchg
arpl
add
lock
jb
or
in
fprem1
sbb
or
cs
sti
mov
int3
jno
cs
in
sbb
mov
jg
aad
lea
and
jecxz
repnz
shlb
inc
add
call
cmp
outsb
mov
sub
sbbl
mov
stos
sub
dec
hlt
sub
loop
je
ret
rcrl
mov
push
sub
jo
lcall
gs
arpl
and
xor
sub
ss
pop
jle
inc
mov
popa
cld
push
add
loope
add
mov
mov
xchg
xor
mov
popf
adc
aam
pop
hlt
testl
push
adc
add
adc
xchg
mov
lds
outsl
out
push
out
pop
jae
int3
out
clc
outsl
or
sub
jo
add
hlt
adc
jae
xchg
movsl
mov
pop
fcoml
sub
ret
gs
fwait
cmp
mov
ljmp
movsb
rcll
and
movsb
xor
inc
pop
mov
shrb
into
pop
push
stos
cld
sbb
lcall
mov
xor
fisttpl
mov
mov
pop
add
mov
ret
dec
jl
mov
fildll
call
sbb
pop
fsubrl
mov
popf
pop
les
arpl
std
xchg
add
popf
dec
lods
mov
lea
cmp
sub
in
sarl
dec
xor
js
andl
repz
std
pop
es
or
stos
sbb
ret
xchg
mov
and
xchg
or
in
and
fstpt
mov
int
or
inc
insb
sahf
adc
fadd
inc
ret
aas
jg
cmp
mov
lea
sbbl
sti
cli
mov
mov
scas
in
jp
mov
aas
imul
aaa
adc
je
cmp
sub
cmc
popa
mov
leave
lods
mov
lea
push
test
sub
dec
jnp
inc
cmpsl
out
sub
push
pop
mov
cmp
rcrb
sahf
imul
in
sub
jo
cmp
xor
lahf
xchg
bound
je
fmuls
pushf
and
cli
es
jecxz
pop
sbb
push
pop
scas
inc
cltd
add
sub
leave
lahf
fists
ds
je
dec
sbb
shlb
jl
mov
data16
pop
fucom
mov
stos
inc
mov
jg
xchg
mov
in
stos
and
pop
repz
pop
cwtl
mov
jp
adc
test
test
addr16
ss
sbb
hlt
cmp
hlt
inc
inc
imul
cmc
pop
lcall
jbe
aam
mov
jns
ret
xchg
mov
cmp
repnz
insl
or
and
mov
sarb
in
add
aaa
lds
iret
jno
nop
mov
es
ret
jmp
add
mov
or
out
or
fucomi
adc
mov
push
mov
and
jae
nop
mov
add
adc
cmp
pop
push
ror
pop
sbb
xchg
cltd
push
int
sarl
adc
inc
ljmp
inc
test
shl
adc
rol
insl
lods
daa
xor
fcmovbe
mov
das
cmp
jp
das
and
xchg
aas
ret
jg
loopne
je
ljmp
repz
or
out
xorl
mov
add
rcrb
mov
jmp
aas
xor
test
push
pusha
mov
cmp
int3
fdivrs
pop
test
data16
adc
jnp
out
insl
notb
lods
mov
sar
mov
fcompp
lods
mov
test
mov
mov
fdivp
add
ffree
bound
stc
lea
cmp
mov
lret
inc
mov
stos
pop
cmp
or
dec
outsb
mov
sbb
shrb
mov
xor
test
mov
dec
mov
adcb
sbb
js
push
mov
fsubs
dec
add
pop
int3
icebp
add
dec
out
imul
pop
daa
pop
nop
cmp
mov
jmp
xor
dec
adc
sti
ds
and
out
push
push
adcl
push
cmp
sbb
mov
je
outsb
inc
adc
mov
bound
lcall
cli
cmp
mov
loop
lods
push
mov
movsb
xlat
mov
fdiv
jle
fs
pop
call
shll
jl
inc
movsb
mov
lods
repz
inc
in
test
mov
push
test
mov
adc
sti
cmpsb
mov
sub
push
mov
jmp
stc
arpl
outsb
xor
in
movsb
adc
sbb
out
rcrl
rorl
sbb
jnp
leave
popf
mov
inc
xchg
pop
and
fdivrs
dec
xor
movsl
int3
test
xchg
mov
xchg
je
cld
out
jl
pop
jmp
add
fstps
test
loopne
mov
mov
adc
mov
xchg
mov
cwtl
add
push
mov
mov
pop
mov
lahf
not
mov
sarb
mov
js
adc
cmp
jge
jnp
mov
imul
fsubrl
dec
mov
mov
daa
mov
xorl
sbb
leave
jecxz
push
pop
ja
in
lock
xchg
cmpsb
out
xchg
pop
test
mov
sub
jb
jae
inc
cltd
xchg
cmp
and
add
xchg
add
sbb
inc
push
or
les
fcmovb
pop
pop
adc
jns
mov
fs
imul
add
adc
push
xor
fpatan
jbe
mov
sbb
dec
pushf
xchg
adc
push
xor
sbb
xor
jge
les
xchg
and
js
jne
sbb
gs
sub
pop
push
inc
enter
in
adc
sbb
mov
cmp
xchg
xor
fiadds
mov
xor
push
ficoml
scas
inc
jo
test
mov
mov
ds
jns
je
stc
or
sbb
jno
jns
and
add
jno
dec
clc
ret
mov
sahf
ror
aad
ret
sbb
lret
inc
andl
jge
and
data16
mov
out
mov
cmp
mov
xchg
mov
inc
xchg
dec
icebp
imul
adc
xlat
pop
pushf
cmp
shrb
bound
xor
test
cmp
dec
lret
mov
add
mov
pop
inc
prefetcht2
outsl
dec
in
ja
test
push
lcall
pushf
cmp
rclb
inc
sahf
subl
cmp
dec
sahf
sbb
xchg
lock
xchg
xor
cvttps2pi
jne
xchg
xchg
out
or
ficompl
sub
push
int
add
inc
xchg
leave
inc
ficompl
xchg
data16
fbstp
mov
mov
and
jbe
shll
inc
out
and
xor
jecxz
cli
icebp
mov
push
pop
or
xchg
sti
fdivrs
mov
add
sub
dec
cmp
adcl
rorb
sbb
or
jae
movsb
scas
cmp
nop
rcrb
adc
pop
sub
loopne
xor
repz
xor
lea
inc
callw
inc
adc
pop
pop
cmp
std
mov
dec
or
mov
ret
push
cmp
aad
rclb
decb
repnz
cs
inc
out
lds
push
pop
rcll
or
mov
arpl
cs
mov
or
psubusb
jg
aas
add
push
dec
jl
sti
sbb
inc
int
push
mov
push
in
insl
ret
mov
out
hlt
aad
jo
cmp
clc
dec
imul
or
and
mov
in
or
jno
cmpb
ret
mov
testl
arpl
push
in
pop
sub
sub
lahf
cltd
je
aad
outsb
aaa
mov
fld
test
aas
cmp
les
mov
jge
data16
pop
outsb
je
movswl
cmp
xorb
push
rcrb
leave
les
jbe
xor
mov
jmp
outsl
sbbl
xchg
and
dec
xor
add
mov
xchg
leave
outsl
cmp
add
das
pop
xor
cmp
add
ljmp
outsl
cli
test
adc
negl
jne
imul
lea
call
fbld
in
mov
jp
lret
inc
jnp
adc
lods
fidivs
inc
in
scas
jns
test
rolb
jae
fistps
outsl
stc
inc
shlb
push
clc
mov
mov
imul
sbb
xchg
pusha
les
fidivrl
packsswb
rcl
fwait
aam
out
das
add
div
das
repz
mov
mov
mov
push
adc
and
sub
inc
in
rolb
loop
cmovs
mov
sbb
ja
cmp
mov
lcall
cld
leave
inc
jmp
push
cmpsl
or
lods
add
jp
cmp
or
fsubl
jnp
mov
icebp
and
jo
fcoms
mov
divb
inc
pop
cmc
xchg
adc
xchg
dec
out
pop
int
cwtl
daa
jbe
aad
inc
dec
push
jno
ja
cwtl
xor
and
inc
cmp
das
jbe
pusha
jne
dec
push
xlat
add
int3
add
lahf
sbb
pop
in
cmp
jp
repnz
lock
fcmovbe
stos
add
cmp
loop
repz
xchg
mov
push
or
mov
xchg
and
sbb
sub
sub
xor
jg
mov
lahf
cmp
rolb
adc
mov
daa
add
jle
loop
and
fsub
push
jmp
xchg
out
or
pop
test
xchg
das
mov
aas
sub
cmp
inc
or
popf
and
fdivrl
pop
and
les
inc
jmp
mov
cwtl
sbb
cmp
xchg
pop
inc
addr16
mov
subb
aas
fstps
outsl
push
lahf
orl
fdivs
sbb
sub
mov
addb
stc
stos
jmp
out
mov
cmp
outsb
push
cmpsb
imul
dec
mov
mov
inc
xor
clc
or
insl
pop
out
movsl
xlat
ja
or
fadds
gs
and
orl
orb
sub
pusha
sbb
enter
sbb
inc
add
int
sbb
iret
add
jg
cmp
das
aaa
pushf
mov
cmp
js
lret
ja
jne
dec
or
adc
dec
push
jg
jp
and
dec
outsl
xor
and
and
adc
mulb
or
test
shll
or
xchg
sbb
cs
lret
sub
sub
push
lods
xchg
pop
dec
out
dec
fistpl
jge
mov
jbe
fnstcw
jae
loop
scas
adc
adc
fs
js
jmp
mov
out
in
sbb
nop
pop
mov
lret
cmpsb
sbbl
in
lock
ds
sub
scas
fwait
scas
jo
push
imul
fs
jl
xchg
je
aas
das
in
cwtl
loope
jecxz
ret
push
cwtl
push
cmp
inc
loopne
mov
in
into
dec
ficoms
dec
cmc
mov
clc
and
scas
xor
notl
sub
xchg
cltd
ds
test
int3
mov
movsb
test
ret
jecxz
fidivl
dec
xchg
jne
divb
jecxz
fistpll
push
or
xor
repnz
popa
mov
push
xor
pop
dec
sub
notb
lods
cmpl
jne
ja
add
fs
mov
mov
xchg
cwtl
aas
cwtl
idivl
incb
and
or
mov
out
and
in
sbb
imul
sti
jb
jno
int3
xchg
cmc
cmp
mov
push
cmpsb
jecxz
lahf
rcl
aas
leave
or
or
add
test
xorb
bound
xor
divb
cmp
ror
mov
and
dec
lods
add
sbb
cmp
push
add
addl
pop
add
call
ret
aas
pop
mov
movsl
fs
repnz
cmp
sub
push
and
jp
std
push
cld
jo
std
cmpsl
imulb
xchg
daa
test
xchg
je
cmpsl
scas
dec
test
mov
js
negl
in
cwtl
jne
pushf
test
in
cmp
xor
addl
in
repnz
ljmp
cmp
int3
pusha
arpl
mov
jecxz
xchg
cmp
aas
mov
orl
or
mov
lods
fnstsw
cmp
cmp
cmp
std
movsb
adcl
mov
fimull
mov
scas
jb
mov
lods
xor
cmp
mov
pop
icebp
adc
sbb
inc
icebp
and
frstor
mov
jecxz
xor
push
and
outsb
lds
int3
xchg
iret
push
mov
int3
incl
testl
popa
jno
pop
add
adc
out
cmp
ficoml
xlat
repz
je
out
xchg
sub
cmpsb
sarl
inc
std
bound
sbb
jle
cmpsb
inc
loope
fsubrl
pop
sub
ret
xchg
imul
push
mov
or
cwtl
xchg
and
lret
jbe
dec
mov
into
xchg
or
subb
std
mov
push
push
in
inc
addr16
sub
mov
mov
xor
add
xchg
sbb
shlb
cmp
rcrl
cmp
stos
movsl
cmp
ret
call
sub
mov
hlt
adc
xor
mov
jno
cs
lods
push
mov
subb
jg
cs
xor
imul
fsubp
stos
xchg
scas
xchg
mov
xor
sub
lds
mov
ss
push
inc
push
push
inc
addr16
pop
imul
mov
cmp
pop
mov
mov
mov
mov
push
cmpsl
inc
cmc
lods
mov
data16
or
mov
sub
pop
push
mov
xor
gs
into
jl
subb
dec
mov
mov
out
mov
lea
fwait
sub
icebp
jl
movsb
sti
fsubl
andl
push
mov
add
outsb
imul
and
jg
add
mov
imul
test
sbb
orl
push
aam
jmp
push
jo
je
add
fwait
sub
aam
enter
xor
xchg
pusha
jnp
xorb
mov
repnz
int
cld
and
ficoml
xchg
mul
nop
push
sub
jo
mov
and
in
jo
cs
dec
rolb
and
int3
ret
loop
push
sbb
jo
fidivl
lea
mov
jns
fwait
pop
movsb
jnp
iret
sti
std
xchg
cmpb
call
sub
and
cmp
xor
sarb
sub
pop
repnz
lahf
push
in
sbbb
cs
add
and
ss
mov
shl
aas
mov
or
bound
cmp
stos
fidivrl
xchg
imul
cmpsb
jns
daa
repz
inc
xchg
xchg
cmp
mov
pop
int
sub
fsubrs
sarb
jmp
mov
dec
inc
stc
xlat
popf
fbld
popa
pop
push
es
movsl
popf
cmpsb
ds
sub
add
and
inc
add
stc
push
cmp
ret
mov
lea
push
lret
dec
add
cld
lods
cli
push
push
movl
imul
xchg
mov
scas
loope
add
jo
xor
mov
lret
sub
sbb
in
test
push
fistl
out
sub
and
lods
cwtl
popf
dec
sbb
push
adc
cli
cmp
and
aaa
lods
jmp
out
pushf
push
xchg
fnstsw
lods
negb
pop
mov
mov
stc
add
jne
xchg
xchg
jno
imul
fwait
ja
into
push
stc
mov
or
fisttps
ds
add
xchg
gs
cmp
test
mov
shlb
bound
mov
sub
fisttpl
xchg
es
sbbl
call
push
fs
enter
fcomi
subb
ljmp
mov
sbb
repnz
das
stos
pop
movsb
imul
dec
subb
repz
xchg
mov
push
mov
cmp
aad
hlt
xor
aaa
es
xlat
test
sar
loopne
test
testl
popf
and
mov
or
imul
pshufw
inc
adc
dec
pop
std
das
or
cli
std
and
mov
or
jnp
mov
dec
insl
cli
dec
inc
or
jns
mov
sub
rolb
sbb
into
call
test
sbb
pushf
cmpsb
dec
fwait
jge
add
or
ret
popa
add
ja
cld
mov
std
mov
or
rcr
sbb
movsb
pop
sub
nop
mov
adc
sub
imulb
inc
jne
adcl
xchg
mov
pop
xchg
je
push
repnz
mov
dec
stc
shlb
dec
icebp
add
push
mov
mov
aaa
je
adc
wbinvd
addl
notl
or
adc
ds
push
out
adc
pop
jne
xchg
or
xchg
mov
sahf
xchg
es
jge
cmp
jp
and
jp
lret
cld
ja
add
adc
cmp
stos
jl
fwait
test
pop
jge
enter
push
scas
rclb
mov
cmp
insl
mov
push
push
or
sub
add
jbe
jp
loope
ret
stos
mov
aam
dec
bound
mov
pop
mov
cs
popa
jge
jmp
fstpl
fnstenv
fisubrl
lret
fnstsw
inc
push
loop
sti
stos
ret
sbb
xchg
cld
ret
jno
or
clc
add
mov
into
sbb
pop
call
insb
dec
fistps
rcrl
cmp
loope,pn
push
add
call
xchg
inc
movsb
ds
push
sahf
ss
mov
sub
pop
andb
push
jmp
ja
icebp
push
ss
aad
xor
scas
imul
std
or
dec
mov
mov
notl
sub
sub
cmpsb
or
and
notb
jmp
pop
adc
repz
mov
je
fidivrl
jl
rorl
xchg
xor
jp
ja
sbb
jnp
cmpsl
leave
out
aad
xchg
cmp
and
stos
ss
fwait
pop
adc
mov
sbb
lods
add
xchg
push
pop
movsl
cmp
mov
adcb
lcall
icebp
sbb
mov
insl
xchg
or
push
ss
cmp
mov
push
pop
outsl
mov
mov
repnz
lret
push
cs
cwtl
mov
add
aaa
imul
jl
repz
mov
push
stc
mov
jo
mov
arpl
jg
add
js
mov
bound
fwait
and
into
push
iret
lret
xor
ret
jbe
insb
mov
fs
lret
test
and
les
pop
add
or
pop
pop
jns
push
loope
push
into
jle
and
jge
mov
loope
call
test
pop
mov
mov
loopne
and
ljmp
cmp
inc
pop
adc
lods
pop
jne
int3
jl
fs
andl
gs
dec
loopne
stc
arpl
in
mov
popf
outsl
xchg
mov
andl
nop
xchg
out
mov
in
dec
inc
pop
rclb
add
adc
xchg
push
pop
pop
jl
scas
mov
sbb
add
and
dec
dec
inc
aas
mov
sahf
popf
xor
mov
inc
jno
movsb
or
dec
cmpsb
jp,pn
add
or
fwait
sbb
adc
xchg
xchg
mov
scas
cmp
in
int3
cmpsb
cs
dec
into
loop
out
xchg
push
dec
inc
gs
inc
xchg
sahf
dec
popl
add
dec
push
rcrb
xor
jl
cltd
xor
or
ds
mov
hlt
popf
gs
xor
lret
xchg
adc
mov
xor
test
insb
mov
push
dec
insb
sbb
icebp
iret
mov
cwtl
jno
idivl
mov
or
sbb
icebp
scas
leave
fidivl
xchg
sbb
xchg
gs
dec
je
adc
aas
loopne
fs
ljmp
cmp
loop
cmp
cmp
push
nop
cmp
cmp
push
push
bound
sbb
dec
push
scas
dec
or
mov
clc
pop
mov
jg
jp
icebp
xor
jmp
ja
aas
mov
mov
sub
cmp
fsubrs
and
add
jmp
rcrl
stos
std
jecxz
movsb
and
insl
test
aam
into
cmp
pop
and
cltd
gs
in
ret
cmp
aas
mov
xor
dec
lods
inc
mov
pop
repnz
mov
lcall
lds
dec
xorb
sbb
lahf
and
dec
movsb
mov
xor
ret
outsb
jb
ret
dec
xchg
lds
popf
movsl
sbb
pop
testl
cmp
ret
aas
into
mov
jbe
xchg
jp
in
cmpsl
mov
xor
cmc
pop
les
lret
jmp
pushf
enter
rcrb
out
mov
pop
out
fcoms
add
jg
jnp
std
push
cmpsb
jecxz
pop
push
cs
and
les
aas
mov
xchg
pop
sub
mov
cmp
or
jne
outsb
enter
lock
and
push
imul
adc
or
xorl
add
mov
sbb
movsb
mov
fildll
mov
pop
jge
inc
fistps
in
xchg
sbb
mov
sub
push
popf
loop
test
and
shll
adcb
cvtpi2ps
fildll
push
jnp
mov
mov
add
add
xor
lock
lds
fstl
fwait
cltd
mov
ret
enter
adc
or
aad
jno
mov
fsubp
mov
or
inc
sbb
dec
insb
fsubr
xchg
add
xchg
mov
cmpsb
adcb
dec
ss
mov
shrl
sub
dec
mov
xlat
jno
loop
push
adc
popf
mov
jmp
xchg
std
ret
mov
sti
or
mov
dec
fdiv
adc
or
adc
rorl
sub
ret
xchg
mov
pop
adc
outsb
and
sbb
lret
push
or
push
std
adc
clc
fwait
jl
push
icebp
add
xchg
lock
loopne
orb
negl
mov
xor
pop
dec
dec
xchg
lods
or
push
cltd
push
dec
sub
ja
lock
pop
call
hlt
cli
fcmovbe
sub
fwait
sub
orl
push
xor
enter
sbb
daa
and
pusha
call
sub
jns
xchg
or
push
push
xchg
loop
or
dec
pop
imul
sbb
xchg
jp
push
xor
pusha
data16
std
or
std
mov
and
movsl
or
lea
pop
and
dec
fsubs
mov
orl
xor
adc
ja
ret
mov
cmp
mov
mov
mov
fs
cmp
fwait
sbb
adc
fistl
shl
xlat
lds
sbb
insb
inc
stos
push
add
in
stos
dec
in
js
aad
mov
or
ret
xchg
xchg
push
and
xor
or
adc
popa
xchg
les
push
cmpsl
pushf
ror
lahf
gs
xor
mov
fistpl
dec
cmp
shr
aas
pop
mov
and
or
daa
aas
scas
and
pop
add
mov
inc
mov
add
mov
mov
push
and
pop
outsl
mov
mov
push
mov
mov
mov
pusha
gs
aas
jp
repz
repnz
xor
push
ret
add
inc
ss
mov
xorb
pushf
fwait
bound
les
fdivs
adc
xlat
popa
and
jns
mov
dec
fnsave
imul
push
movsb
mov
or
jns
fcompp
add
mov
mov
or
pusha
jge
jp
adc
adc
xor
insb
cmpsl
ficoms
sub
sbb
xchg
lahf
popf
cld
pop
sbb
daa
inc
mov
test
jg
sbb
add
xor
movb
ljmp
imulb
cmp
pop
jb
mov
loop
jne
sahf
das
jge
pushf
mov
cld
jb
add
or
xor
adc
add
push
stos
aam
add
pop
aas
out
push
icebp
cwtl
xchg
inc
push
je
pusha
rcr
xchg
pop
push
mov
lahf
add
in
dec
cmp
ja
fs
test
mov
cmp
dec
and
mov
mov
es
pop
cli
fimull
and
mov
cmpsl
dec
fs
sahf
mov
mov
inc
mov
mov
pop
sub
jae
iret
test
fs
int3
adc
jb
and
mov
xorl
insb
adc
lret
xlat
push
push
mov
or
inc
cmp
xchg
jle
negl
xchg
std
jnp
gs
sub
fs
cmp
xor
inc
jns
jg
jp
scas
cld
js
inc
add
xor
add
sbb
cwtl
shll
push
inc
cmp
xchg
sub
sarb
xchg
mov
adc
hlt
or
adc
ret
aam
inc
test
jns
add
or
and
jle
mov
pop
test
jl
mov
scas
jg
inc
cmp
cmp
nop
mov
jmp
sub
arpl
pop
adcb
xor
cmc
mov
mov
enter
dec
jge
addr16
inc
fcmovbe
jnp
fcompl
roll
xchg
popf
cltd
pop
mov
repz
mov
mov
jae
fmull
dec
mov
lds
pop
clc
int
aaa
in
cmc
aad
push
jb
xchg
push
lock
adc
imul
jno
dec
inc
lahf
leave
and
dec
or
mov
push
and
mov
lret
sti
loop
dec
test
imul
sbb
mov
fwait
pop
cmp
andb
mov
sub
idivl
lcall
enter
add
dec
movb
loopne
hlt
push
pop
mov
cs
mov
xor
out
movsl
arpl
push
sub
out
or
jle
mov
jnp
lock
dec
pop
gs
mov
nop
adc
js
mov
bound
xchg
test
jnp
popa
movsl
push
rcll
out
lods
rolb
leave
jle
xlat
inc
sarb
inc
xchg
cmpsl
fisttps
mov
jae
lds
flds
aam
rorb
add
rcrb
stc
in
cld
fucomp
adc
pop
out
testb
dec
cmc
mov
mov
xchg
push
ja
sub
fcomps
jb
mov
adcb
ja
fiaddl
inc
cmp
lods
xchg
cmp
mov
dec
outsb
mov
inc
jecxz
ds
ret
xor
cmpsl
jmp
arpl
mov
mov
push
in
lods
jne
mov
add
pop
mov
ljmp
add
fs
int3
pop
pop
out
xchg
hlt
aas
test
mov
std
adc
pusha
scas
add
lods
icebp
sub
adc
clc
aam
mov
sahf
inc
mov
push
popf
loop
insl
xorps
mov
adc
repnz
lock
cmp
cmpl
add
out
push
or
mov
mov
shlb
data16
add
shrb
std
ljmp
fidivrs
xor
xchg
jge
inc
aam
repz
xor
fwait
jno
pop
outsb
dec
repz
daa
xor
dec
push
cs
push
inc
xlat
lcall
mov
std
and
pop
dec
inc
jp
add
dec
push
inc
out
xchg
adc
gs
loopne
sub
push
add
lret
push
push
pop
aas
sbb
mov
jnp
jne
inc
les
xor
rorb
sub
sbb
inc
cltd
lret
fildll
add
jns
test
inc
or
and
or
push
cmp
inc
mov
cmp
mov
pop
push
jo
outsb
pop
fmuls
imul
pop
push
inc
stos
xchg
cmp
jbe
sub
sbb
xor
sub
ret
std
xchg
pop
mov
cld
sub
iret
or
cmpsb
mov
jo
mov
clc
adc
dec
incl
shll
out
sub
or
mov
ret
imul
adc
lock
mov
jecxz
pop
mov
mov
xchg
sti
pop
or
sub
dec
fcmovnb
fneni(8087
jmp
sbb
loope
jbe
sbb
jge
dec
add
shll
push
jb
xor
mov
mov
shl
lods
enter
dec
xchg
add
icebp
imul
add
andnps
popa
dec
out
add
scas
or
mov
inc
rolb
push
xchg
hlt
daa
sarl
push
scas
mov
pop
mov
pop
xor
lahf
pop
xor
fxch
pushf
lods
lds
das
add
idivb
loop
cmpl
inc
adc
inc
mov
nop
popa
add
test
mov
mov
sbb
xchg
mov
xor
cwtl
ja
push
push
push
add
scas
jle
dec
cwtl
inc
pusha
gs
inc
aas
and
lods
pop
push
push
or
pusha
mov
xchg
out
jp
push
add
inc
arpl
sbb
mov
dec
fstpl
out
hlt
mov
xchg
dec
sbb
xchg
xor
push
int
fnsave
and
and
rorl
fsubrs
test
mov
aas
mov
call
ror
xor
cmc
xor
dec
lock
fnsave
adc
ficoms
ljmp
test
fists
rcll
scas
pop
mov
inc
gs
iret
cmp
cmp
dec
push
cwtl
outsl
inc
in
xor
and
icebp
mov
out
jne
mov
rorl
lcall
xor
pop
in
cli
stc
inc
gs
or
mov
mov
mov
or
js
lahf
aaa
aam
adc
push
mov
fidivrl
jle
hlt
xchg
mov
inc
movsl
pop
add
cmpsl
leave
jns
push
in
arpl
xchg
mov
pop
fnstenv
aam
hlt
pop
lds
into
push
jnp
sub
sub
mov
mov
cmp
cmc
cmpsb
cmp
fs
xchg
loop
mov
sbb
icebp
fstps
cld
add
fs
jmp
jecxz
mov
xor
mov
setl
cmp
jp
testl
mov
cmc
test
out
clc
aaa
jecxz
adc
pop
pop
inc
out
je
jns
lcall
mov
inc
xor
xor
or
dec
out
mov
mov
mov
nop
pop
pop
and
add
and
jg
loopne
jle
scas
sbb
cmpsb
outsl
add
pop
test
mov
lock
sbb
sbb
mov
in
push
jnp
rcrl
jo
jmp
sbb
and
inc
int3
cld
outsb
push
test
xchg
stc
stos
sahf
jecxz
iret
cmp
push
iret
lock
cmp
negb
in
xchg
int3
xor
adc
sub
inc
push
faddl
push
cmp
cmc
fidivrl
and
fdivs
push
and
and
xchg
ljmp
jns
sbb
aas
cmp
inc
or
imul
xchg
jmp
addr16
mov
frstor
enter
pop
scas
sbb
pop
inc
sbb
xchg
mov
test
add
outsb
inc
add
inc
xchg
aam
lock
mov
jecxz
mov
pusha
and
ss
jns
dec
push
test
inc
cmpsb
lahf
mov
or
je
push
mov
sub
fimull
jno
icebp
icebp
pop
ret
xor
test
data16
add
dec
pop
add
jg
push
add
mov
cmp
not
add
and
inc
xchg
xchg
insl
inc
and
pop
nop
push
jno
scas
into
fidivs
dec
out
jne
adcb
sbb
adc
inc
loopne
jmp
sbb
out
js
add
ja
call
rorl
jmp
shlb
cmpsb
lcall
xlat
div
ret
sarl
popf
xor
lcall
call
loopne
stc
data16
inc
or
repnz
jne
jne
call
mov
loopew
divl
mov
enter
bound
out
xchg
mov
popf
jno
mov
add
mov
addl
ficoml
aam
mov
jbe
sub
mov
mov
xchg
test
cmp
xor
cmpsl
push
addb
je
gs
data16
sub
adcl
mov
repz
or
test
out
jb
lods
push
call
and
xlat
pushf
jb
icebp
fidivs
mov
in
imul
xor
into
add
mov
jo
inc
fistpll
sbb
pop
out
sbbb
jecxz
jl
pop
pop
cwtl
dec
lret
mov
inc
dec
bound
sbbb
jne
sbb
outsb
testb
fnstenv
fisttps
jae
fsts
aad
sahf
jns
popa
add
push
hlt
xchg
fnstsw
pushf
insl
clc
int
outsl
push
jne
leave
nop
cmp
or
ja
add
fadd
outsb
and
repz
sub
ret
inc
clc
shll
adc
decl
cmp
and
movsl
negb
push
dec
inc
lds
sti
sbb
mov
out
insl
sub
lds
rcrb
fistps
aaa
test
scas
fwait
into
test
xchg
adc
cmp
sbb
xlat
xor
add
mov
or
lahf
inc
fs
jecxz
ja
dec
std
test
daa
xor
sahf
lcall
mov
pop
jmp
jae
ss
xor
jg
sahf
sbb
lret
imul
push
xor
loope
mov
jmp
icebp
xchg
xchg
fdivr
and
sbb
out
js
pusha
notb
adc
stc
jmp
ja
fldenv
testb
jg
cmpsl
repnz
sarl
bound
mulb
sbbl
lcall
int3
popa
in
or
mov
add
dec
sub
loop
sarl
mov
out
loop
xor
cmpsl
xor
push
mov
testl
mov
ret
xchg
nop
addl
enter
icebp
pop
mov
inc
add
mov
out
fwait
leave
mov
sbb
ficoms
pop
sbb
add
popf
jns
imul
adc
movsb
jns
xor
lcall
fists
push
bound
call
enter
ss
push
scas
xor
enter
lds
mov
dec
push
push
cmpsb
jl
push
mov
fwait
hlt
repnz
outsb
aaa
insl
sub
and
push
adc
andl
sub
adc
or
in
dec
sarb
cltd
cmpsl
mov
push
ds
mov
mov
ret
mov
jns
mov
jno
adc
repnz
sbb
leave
outsl
dec
ss
and
rorb
mov
inc
ss
les
push
sub
cld
xchg
push
xchg
dec
aad
in
scas
int
into
aas
fnstcw
stc
sbb
or
rorb
xor
fimuls
cltd
out
or
add
fstl
insb
dec
and
lods
repz
stos
test
dec
into
adc
bound
pop
pop
jno
xor
push
cmpsb
jo
xor
mov
repnz
add
hlt
sub
push
lcall
cli
jnp
and
pop
mov
xor
adc
and
cmp
cmp
dec
ds
cmp
cmp
sbb
jno
incb
fbstp
test
lds
dec
xor
cmp
cmc
mov
fsubrs
jle
push
mov
out
negb
jmp
lds
inc
imul
pop
test
fdivs
mov
aaa
hlt
icebp
pop
shl
xor
jecxz
push
sbb
movsl
aad
nop
adc
movsl
jge
lea
jb
in
cmpl
mov
cmpsl
lds
or
and
push
xor
inc
repnz
int
aaa
pushf
mov
lds
negb
lahf
inc
cmp
xor
jg
jle
fisubl
int3
pop
inc
or
fistpll
adc
adc
mov
jbe
sbb
stos
mov
sbb
xchg
mov
or
sub
sub
add
dec
xchg
mov
jge
xchg
movb
dec
fcmovnu
je
xchg
jne
fcmovnu
push
ljmp
int3
mov
addr16
and
jo
test
add
cmp
mov
divb
enter
cmp
pop
jle
add
sub
popa
mov
rcrl
das
and
cmp
add
nop
inc
ss
ljmp
addr16
or
stc
leave
mov
bound
mov
pop
xor
inc
dec
mov
lods
xor
push
dec
mov
popl
sub
adc
mov
test
xchg
or
sub
adc
mov
ret
iret
aas
out
imul
inc
mov
cmpsl
loopne
aam
fidivl
int3
das
pop
xchg
ret
pop
sbb
jbe
add
bound
jno
dec
mov
js
lock
xchg
sub
scas
fnop
dec
popf
inc
mov
or
fisubrs
pop
cltd
mov
ja
and
out
insb
sbb
xchg
dec
or
ja
fistps
roll
pop
lret
xor
push
test
pop
lock
test
mov
mov
decb
daa
popf
mov
ljmp
sbbb
out
aad
ss
pop
es
adc
cmp
mov
pop
pop
mov
aaa
into
imul
inc
ljmp
xchg
jo
insl
or
cmp
imul
jp
jbe
sub
push
pop
mov
sbb
decb
xchg
lods
inc
dec
aam
inc
dec
push
test
insb
mov
vzeroall
mov
daa
mov
push
movsb
movsb
scas
std
and
adcb
adc
xor
shll
jl
imul
mov
in
lds
xor
jp
sahf
jp
cmp
push
dec
shlb
add
or
rorb
hlt
or
and
insl
adc
insl
fsubp
jmp
jno
or
mov
test
les
mov
inc
adc
jo
mov
xchg
inc
fisubrl
dec
dec
ss
inc
push
movsl
mov
lods
push
sbb
mov
bound
cltd
loopne
dec
std
mov
jae
inc
leave
xchg
outsb
bound
je
jl
out
inc
xchg
sarb
dec
fiadds
mov
scas
xchg
pop
icebp
pop
scas
dec
rcrb
push
call
dec
and
sbb
push
or
es
jp
sbb
insl
sub
xorl
orb
aaa
call
or
ficompl
test
cmp
fcmove
fcmovu
fimuls
stos
or
insl
iret
cld
pop
popf
sbb
mov
out
shl
adc
xor
aam
pop
rcrb
or
dec
ret
imulb
jg
int
mov
xor
xchg
testb
add
mov
mov
leave
mov
je
sbb
ljmp
ss
out
cltd
mov
push
pop
ret
je
xor
and
xchg
or
cwtl
repz
xor
jae
fisttpl
stc
jo
incl
push
pop
mov
jbe
mov
cltd
xchg
sub
ret
inc
cmp
push
jne
rdpmc
scas
out
mov
push
shrl
sbb
mov
dec
sbb
push
mov
mov
out
sub
popa
xor
pop
adc
sbb
cltd
cmpsb
jg
mov
mov
nop
or
test
in
lock
and
scas
les
lret
sbb
enter
bound
ss
push
gs
pop
cmp
fidivrs
lret
cmp
jbe
sbb
ljmp
mov
or
test
test
add
xchg
int3
adc
arpl
cld
xchg
pusha
dec
mov
in
mov
push
call
push
std
jl
jns
test
pop
mov
testl
add
cwtl
mov
fwait
or
imul
jae
lahf
fadds
cmp
sbb
cmp
or
jge
mov
mov
sbb
push
fincstp
jmp
outsl
stos
xor
mov
shll
lcall
xchg
inc
jg
int3
add
repnz
lods
or
sahf
xchg
ret
aas
cwtl
adc
sbb
stc
repnz
cld
je
pop
push
cmc
dec
fwait
in
out
xor
sbb
shll
fisttpll
mov
mov
int
lahf
cmp
add
dec
lret
cli
or
jne
ss
loopne
fadds
or
jp
mov
sub
dec
sbb
sar
outsl
push
cwtl
inc
test
fstl
mov
pop
xor
cltd
ja
sub
out
jae
shl
add
rcrw
lods
and
out
and
cwtl
shr
jge
ret
int3
hlt
or
xor
fucomp
xchg
call
and
lcall
fistpll
pop
lods
pop
cmpsl
inc
push
stc
sub
test
add
or
or
out
mov
lock
repnz
adc
loope
ds
xor
iret
pop
stos
rolb
imull
xchg
imul
or
mov
cld
bound
add
pop
xchg
cmpl
xlat
les
jge
cmp
ficoms
rorl
out
mov
leavew
cmp
xor
iret
add
dec
mov
sbb
pop
lret
pushf
cli
add
mov
push
loop
nop
inc
add
xor
mov
addr16
lret
mov
test
and
xchg
shl
fisubrs
mov
ja
xlat
jo
push
test
push
in
dec
push
sbb
push
sbb
or
jnp
dec
ret
cwtl
mov
push
inc
flds
mov
pushf
lcall
dec
mov
mov
nop
jle
lcall
mov
mov
popa
or
fisttpl
cmp
fs
in
and
test
stos
aad
negl
js
shrb
push
xchg
mov
cmc
cmp
mov
iret
sbb
mov
mov
in
mov
inc
out
inc
mov
push
imul
addr16
sub
or
mov
cmp
out
jns
or
cwtl
pop
aad
rol
in
fnstsw
mov
test
cmpsb
mov
stos
pop
sahf
add
mov
jae
xchg
cmp
test
lcall
add
push
das
out
xchg
stos
pushf
cmpsl
or
les
add
mov
push
or
mov
jl
jge
inc
pop
push
leave
mov
xlat
test
xor
punpcklbw
dec
xchg
sub
insl
aad
movsl
aam
cld
lcall
stos
dec
movsl
lds
jl
stos
repnz
sub
fistl
sub
push
dec
and
add
pop
xchg
dec
icebp
out
test
outsl
addr16
dec
mov
addr16
js
sbb
shrb
popf
pop
push
out
out
fwait
add
xchg
cs
inc
mov
add
pop
imulb
adc
loopne
clc
xor
jmp
pusha
sbb
test
sub
cmp
ds
or
fsts
or
xchg
dec
pop
jecxz
xchg
jo
sti
sub
xor
arpl
push
movsl
mov
aaa
movsb
mov
ficompl
mov
movsl
ss
shll
lods
testl
fadds
cwtl
es
pop
jg
imul
sbb
sbb
dec
mov
vmovsd
inc
stos
mov
mov
jns
lods
aaa
sub
or
enter
popa
dec
inc
cmp
ffreep
in
or
adc
pushf
push
pop
jecxz
jne
mov
rcrl
or
adc
stos
sbb
jnp
rcl
sbb
clc
and
mov
pop
push
int
mov
pop
mov
in
mov
in
mov
inc
hlt
imul
jbe
popa
pushl
xchg
cmp
aad
inc
push
or
push
stc
ss
pcmpeqw
fnstenv
adc
ss
leave
jne
inc
cli
aam
inc
frstor
int3
mov
xchg
xlat
mov
push
ja
fistps
popa
mov
or
jecxz
cmp
pop
rol
aam
xor
cltd
jnp
xlat
or
out
lahf
push
mov
je
dec
jecxz
out
fbstp
mov
addl
sbb
xchg
cmp
lea
shlb
or
xchg
mov
imul
movsb
aam
test
mov
insb
dec
lahf
cltd
cmpsb
xor
push
out
xchg
jg
cmp
mov
push
addr16
pop
daa
mov
cmpb
jge
mov
gs
inc
sahf
aad
push
into
mov
adcl
in
and
sub
mov
dec
test
out
cltd
dec
or
into
jg
mov
js
lds
movsb
aam
cmp
sbb
jge
inc
out
nop
scas
xor
mov
out
xor
movsb
xor
movsb
stos
aad
dec
dec
jo
cmp
call
inc
lds
insl
pop
xor
das
or
nop
cmp
insb
adc
mov
inc
cwtl
movsb
test
ja
out
xchg
mov
cmpsb
pop
mov
iret
fs
aam
and
sub
imul
outsl
jge
pop
or
out
cli
push
lock
and
adc
xor
mov
fldl2t
mov
imul
inc
fisttps
aas
adc
jl
add
inc
inc
jmp
sbb
ret
shll
mov
jle
imulb
pop
dec
xchg
inc
clc
fwait
add
jle
mov
cmp
and
or
inc
dec
in
sub
lret
xlat
adc
cmpsl
out
xlat
enter
mull
fnstsw
movsb
jns
mov
push
icebp
cmp
shld
test
pop
cmp
test
jp
dec
stos
mov
dec
shll
mov
je
cmp
rolb
ja
cld
loope
leave
jmp
mov
pop
mov
cmp
js
gs
les
outsb
out
lock
jl
enter
stc
lods
adc
test
cmpsb
inc
sbb
dec
clc
cmovl
cld
inc
cli
int
into
pushf
std
dec
pusha
jns
or
ds
or
outsl
mov
cltd
xor
inc
out
jns
movsl
scas
mov
fisubrl
jge
scas
das
jecxz
mov
sbb
or
mov
imul
cmpsl
ds
fwait
sub
push
out
stos
mull
pop
sarb
mov
ljmp
pop
out
mov
mov
int3
sbb
in
mov
in
and
mov
inc
scas
mov
addb
pop
popa
aaa
mov
bound
dec
mulps
pop
xchg
dec
ret
loop
je
addr16
scas
pop
mov
fbstp
and
in
push
sub
mov
call
mov
insl
jecxz
mov
mov
mov
dec
fs
mov
push
subl
push
addr16
lret
shl
jne
adc
cmc
test
inc
push
lods
idivl
aaa
pop
push
jmp
push
je
ljmp
inc
fsts
rcrb
fs
and
aaa
aam
and
rorb
xchg
inc
dec
fucomip
xor
rclb
add
or
pop
xchg
sahf
sarb
inc
jbe
aad
inc
mov
nop
addr16
lods
jmp
aam
ret
push
inc
mov
cld
test
xchg
inc
mov
fisttpl
push
xchg
jo
in
nop
pop
or
repz
negb
stos
xchg
into
fwait
or
xchg
xchg
out
inc
adc
inc
dec
stc
out
xor
fs
mov
jbe
or
lcall
cmp
or
fmulp
dec
xchg
mov
fwait
xor
push
mov
dec
jecxz
pop
out
fistps
data16
scas
loop
or
gs
push
xchg
xor
sbbl
stos
sbb
sbb
je
dec
cmp
bound
jle
adc
insl
cld
repz
inc
inc
and
cmp
pop
inc
adc
add
xor
imul
mov
mov
sarb
mov
pop
xchg
jo
popa
mov
push
push
icebp
mov
pop
pop
mov
push
fistpl
ret
test
pop
out
rcr
mov
in
out
repnz
lcall
mov
gs
in
aas
add
and
cmp
lea
and
pop
pop
mov
lcall
movsb
xor
scas
jae
imul
sbb
pop
js
xchg
xchg
and
int3
xchg
sbb
fwait
lret
ror
mov
nop
sbb
sbb
adc
cltd
xor
sbbl
negb
pushf
sub
cmp
lcall
hlt
add
cli
mov
adc
lds
in
push
sbb
xchg
jecxz
or
cmpsb
ljmp
mov
shll
stc
xchg
dec
insb
sub
test
dec
xor
aaa
cmpsl
inc
fistps
mov
jno
pop
daa
out
shlb
lds
lret
or
rcrl
movsb
pop
rcll
iret
mov
fmul
dec
lds
dec
cmp
xlat
inc
test
cltd
or
fildl
add
cmpsl
adc
lret
fmul
jbe
cmp
int3
movsl
inc
mov
sub
xor
scas
and
ret
xchg
sub
xor
lds
mov
call
stos
cmp
cmp
popa
jl
jbe
aaa
sub
dec
xchg
aad
sahf
scas
lret
mov
mov
notl
int3
mov
mov
mov
xchg
jne
push
push
lods
insl
scas
fs
add
inc
aam
mov
adc
fistps
sti
pop
lret
dec
xchg
inc
jge
aaa
adc
in
cmp
inc
push
cmp
cli
pop
dec
cmp
push
popa
rorl
std
les
sbb
dec
insb
sub
or
push
sbb
and
mov
mov
pop
jbe
sahf
cltd
sub
xchg
xchg
push
mov
inc
fs
popa
mov
push
inc
popl
cltd
mov
mov
fcmovu
mov
into
out
fnstcw
sahf
enter
inc
lock
les
xchg
incb
cmc
push
add
test
lret
movsl
push
xor
lods
mov
ja
mov
mov
lret
inc
and
aaa
sub
cmpsl
pop
pusha
stc
imul
mov
push
fsubrs
movsl
sub
push
or
push
adc
mov
adc
dec
shll
mov
in
or
inc
ficoms
sbb
inc
jl
jns
jle
ret
das
enter
out
std
mov
test
movsb
jp
push
cmpsl
sbb
scas
lds
cmpsl
das
sbb
jno
movsb
cmpsb
xchg
flds
sahf
imul
mov
fsubl
lock
mov
in
cmp
lds
stc
xor
lcall
pop
inc
inc
pushf
xchg
lcall
jns
arpl
test
pop
push
mov
pop
fs
mov
cmp
cs
hlt
add
mov
push
sbb
push
pop
dec
out
rorb
movsl
out
enter
push
dec
dec
ret
std
in
or
adc
xchg
dec
and
xchg
imul
out
sbbl
mov
lods
sahf
jns
adc
lock
xor
imul
mov
or
test
ds
shrb
jl
daa
jne
and
out
arpl
pop
xchg
sub
sub
dec
int
ret
outsl
in
rolb
ret
out
xor
add
into
lds
pop
push
cmc
leave
test
and
inc
mov
push
mov
mov
int
inc
cmpsl
dec
daa
das
push
sbb
inc
sbb
pop
xchg
lds
aaa
addr16
fiadds
push
jge
pop
into
pop
in
mov
jp
repnz
loopne
cmpsb
push
nop
push
push
or
cmp
jmp
cmc
fwait
sbb
loop
cwtl
mov
mov
adc
arpl
icebp
xchg
test
push
hlt
clc
movb
outsb
dec
push
iret
xchg
enter
jl
bound
xchg
xchg
into
mov
mov
call
xlat
in
and
sbb
ficoms
push
outsb
xor
mov
fdivrl
dec
popa
add
and
jl
fisttps
inc
cmp
jno
mov
mov
sub
inc
jg
push
loopne
sbb
xchg
jb
mov
es
in
fistps
inc
sbb
mov
lods
out
mov
xchg
mov
scas
int
adc
imul
incl
xor
clc
jmp
sahf
out
jns
mov
inc
pop
jae
int3
cmp
pop
and
mov
imul
aas
xor
dec
xor
pusha
jle
mov
shrl
jnp
mov
jg
fcoml
mov
data16
sub
cmp
andl
mov
mov
sbb
cld
xorb
cmp
enter
in
cmp
sub
xorl
xchg
push
xor
inc
xchg
lock
out
popa
std
ja
addr16
leave
aas
shlb
sbb
fucom
mov
adc
push
mov
xchg
mov
xor
xor
jbe
and
sbb
jnp
and
aad
shr
or
ja
sub
cmp
fidivl
push
lds
fs
xor
loop
sbb
inc
sbb
add
xor
xor
or
pop
cltd
mov
bound
iret
jg
inc
ret
cmpsl
sti
popa
pop
ret
into
jecxz
xor
pop
cs
push
push
sbb
movsb
inc
and
mov
ljmp
pushf
lods
mov
jne
in
fdivrs
add
aaa
scas
outsl
xor
aad
cld
clc
sti
xchg
gs
cmp
add
cmp
ret
and
dec
mov
iret
in
call
pop
or
inc
jae
aam
movsl
inc
lret
aam
lret
stc
cmp
aam
xchg
mulb
data16
ja
xchg
test
mov
popa
pop
sbb
push
fldenv
xchg
idivb
pop
ficoms
pusha
aas
lcall
mov
dec
jb
mov
sub
cmp
fidivrl
mov
int
push
push
cwtl
leave
cmc
incb
cmp
jle
xor
loopne
scas
dec
mov
int
xchg
mov
shll
sub
lds
mov
pushw
xor
in
call
or
loope
mov
cmp
movsl
scas
fwait
into
imul
cmpsl
addr16
jp
xchg
ss
mov
pushf
mov
fbstp
pop
bound
pop
ja
cwtl
adc
daa
cmp
or
adc
dec
cld
ss
les
dec
jge
test
jb
pop
cmpsb
rcrl
jnp
mov
dec
stos
push
jmp
pop
cmp
sbb
lret
push
aaa
jl
mov
shl
jns
js
int3
gs
push
pop
and
and
pop
and
gs
inc
ficompl
daa
into
mov
add
testb
push
les
call
dec
into
mov
in
pop
dec
adc
sbb
jl
jne
cmp
inc
cmpsb
inc
fwait
lock
mov
mov
sbb
ret
sub
mov
push
push
repnz
mov
jb,pn
inc
push
movsl
mov
add
xor
pop
pop
call
in
imul
iret
jnp
sbb
pop
test
mov
jnp,pn
lods
test
imul
int
enter
fisubrs
ljmp
imul
mov
cmp
mov
hlt
lahf
decb
xchg
cmp
jle
shlb
mov
or
in
in
push
je
fisttpll
push
mov
jle
in
es
or
lcall
imul
pop
fidivl
popa
mov
arpl
sub
push
fwait
aaa
xor
xchg
lds
sbb
mov
stc
dec
push
bound
mov
pusha
xchg
push
mov
loope
xchg
mov
vpaddd
cwtl
mov
out
aaa
sbb
mov
divb
or
fisttps
movsl
cmp
or
pushf
mov
mov
and
add
movhps
cs
iret
xor
scas
loop
out
divb
dec
push
jns
xchg
fisubl
lods
loopne
mov
rorl
xor
les
push
jmp
mov
cmp
mov
xchg
push
mov
jns
push
adc
outsl
faddp
sub
cli
cmp
add
pop
sbb
push
or
out
scas
cs
pop
mov
and
mov
sbb
inc
jge
hlt
sbb
clc
xlat
xor
in
cmp
adc
pop
shrb
insl
xor
ret
aaa
fsubrl
mov
outsb
bnd
mov
test
push
addr16
cmp
fsubl
test
loope
cmpsb
sub
roll
mov
mov
sbb
mov
mov
jp
ljmp
cmp
outsb
test
fistl
fsubl
or
enter
xor
ljmp
inc
test
notl
inc
lahf
je
in
ret
sub
loope
xchg
jg
in
cli
pop
xor
mov
xchg
inc
inc
xchg
sub
cmc
mov
add
cmp
fdivs
inc
xor
adc
lahf
jae
daa
sahf
push
fldenv
mov
shr
loope
cmp
test
notb
test
push
inc
js
mov
cli
das
or
mov
xchg
pop
and
ljmp
mov
in
xchg
es
lahf
lcall
mov
mov
cwtl
jno
jno
or
data16
mov
or
ds
mov
in
in
sarl
pop
call
mov
lods
xchg
jno
je
in
pop
mov
or
or
jge
jb
xor
xor
fdivs
nop
mov
pop
xchg
das
outsb
cmp
icebp
js
push
lds
lahf
dec
pop
xor
js
iret
es
shl
popa
mov
aas
mov
lret
test
cmp
ja
jg
mov
mov
enter
call
push
and
shlb
scas
mov
and
sub
sbb
and
cmp
mull
dec
fdivrp
cmp
fimuls
fsubrl
icebp
jo
and
shll
add
mov
sbb
adcl
pop
sub
ficomps
adc
xor
incl
scas
xlat
call
cmp
hlt
std
test
cmpsb
and
ret
sbb
ret
pop
dec
inc
fwait
mov
sub
pop
ds
mov
xchg
into
mov
sbb
ds
test
dec
adc
cwtl
divl
sbb
or
push
xchg
inc
rol
pop
das
xor
and
dec
jp,pt
notl
es
jbe
xchg
or
shrb
scas
mov
out
inc
imul
or
mov
insl
push
adc
xor
push
sub
mov
icebp
xchg
mov
adc
insb
aaa
bound
aad
and
mov
dec
xchg
pop
lcall
mov
mov
jb
lods
adc
imul
mov
mov
adc
inc
adc
mov
jbe
xor
aaa
dec
nop
ret
inc
insb
dec
push
xchg
stos
add
lods
divb
cmp
ljmp
out
push
mov
sbb
movsl
sahf
dec
fisubl
loop
xlat
jno
pop
mov
mov
inc
aas
mov
clc
arpl
outsb
jns
inc
cwtl
jno
mov
mov
stos
jle
jae
out
push
adc
movsb
call
xchg
inc
movsb
push
lret
mov
xor
sbb
dec
jl
adc
jno
daa
xchg
cmp
push
sub
xchg
bnd
addr16
pop
negb
imul
mov
adc
dec
adc
subl
adc
and
mov
mov
or
aaa
icebp
insb
lahf
sbb
push
cmp
xchg
mov
xor
dec
ss
adc
scas
xor
and
push
jne
push
inc
rolb
test
add
out
and
push
inc
loope
cmp
inc
sub
mov
sub
or
jbe
js
inc
or
mov
scas
scas
les
mov
pop
pop
mov
shll
in
lea
add
dec
rcrb
push
add
aad
daa
sbb
jb
cmpsl
fldl
rol
outsb
dec
mov
inc
mov
scas
mov
sub
mov
jecxz
rcll
xchg
mov
lock
lods
mov
sbb
loopne
mov
mov
mov
rcll
leave
rcl
insb
loope
divl
push
aas
push
jg
pop
cmp
lods
test
add
jbe
orb
mov
clc
arpl
push
dec
es
pop
add
ret
lock
cld
xlat
sahf
jno
push
les
lds
pop
mov
jae
imul
sub
les
push
mov
add
inc
mov
mov
test
jo
hlt
lahf
dec
jecxz
xchg
jge
pop
and
ss
out
inc
les
mov
push
mov
push
sahf
ret
sub
subb
test
cmp
pop
sub
mov
test
cmp
popa
rorb
cs
xchg
shll
roll
add
sub
call
cmp
xchg
addr16
dec
inc
jmp
mov
test
xor
inc
aad
and
fsubrl
adc
push
loopne
or
lret
add
pop
jb
mov
decb
cmp
sbb
jle
sbb
rcr
xchg
mov
xchg
icebp
iret
push
ret
rcl
xor
aaa
aaa
outsl
loopne
cmpsl
ret
sub
cwtl
ss
fmull
idivb
testb
push
cmp
lahf
stos
cld
jl
sbbb
fxch
into
mov
mov
or
cltd
mov
xor
fcomi
pop
mulb
or
mov
add
sti
sub
lret
mov
adc
gs
sbb
adc
and
ja
sbb
adc
pop
addr16
lock
mov
ret
pop
pop
mov
test
push
decb
test
add
mov
out
cmp
repz
addr16
lret
imul
into
bound
or
add
jmp
pushf
jno
loopne
mov
push
push
shl
popa
or
xor
pop
xchg
jne
call
sbb
mov
ficoms
rolb
aad
sbbl
or
jg
stos
dec
xchg
test
incl
adc
hlt
popa
lret
xchg
sbb
ds
jbe
dec
xorb
mov
push
push
cmp
fsubl
das
or
sbb
xor
insb
popl
jae
mov
or
das
sbbb
rorl
cs
cmpsb
and
test
arpl
ja
xor
rcrb
lods
push
and
add
inc
inc
and
mov
das
clc
ret
mov
mov
jae
mov
ss
lods
jno
test
sbb
adc
and
jge
xor
cmp
dec
cmp
jns
enter
shrb
sub
cs
xchg
std
cmp
adc
lds
jl
and
dec
out
mov
int3
or
ljmp
stos
in
test
push
dec
mov
out
addb
pushf
mov
pop
out
in
gs
sahf
sbb
mov
or
mov
dec
pop
lcall
test
outsl
xchg
jg
pop
sbb
sub
lds
popa
cmp
jno
in
inc
mov
lret
xchg
call
dec
out
sub
sbb
testb
push
xor
jp
xchg
push
ds
xor
test
sbb
out
jo
movnti
shll
inc
sahf
adc
xorb
and
ret
inc
cs
mov
rcl
jp
repnz
mov
int3
das
or
in
mov
leave
pop
lret
adc
cmp
sbb
test
inc
mov
in
ds
cmc
test
lcall
jle
jp
or
sub
sub
rcrb
adc
push
aaa
cmp
into
push
xchg
jo
dec
lods
push
jp
dec
pop
sbb
or
sub
push
or
loope
je
imul
adc
mov
jae
push
mov
push
cmpb
das
movsl
repnz
add
sti
aas
ljmp
loope
lret
sub
out
inc
in
shrl
sub
sbb
adc
and
lods
jno
outsl
movsl
gs
mov
adc
ret
or
scas
mov
out
loope
pop
jb
inc
rclb
rol
lea
stos
pop
cltd
dec
imul
sbb
mov
jb
rcll
add
jl
pop
repz
jecxz
faddl
pop
inc
es
lea
roll
xor
add
mov
jnp
add
jle
aaa
sub
fnsave
push
mov
leave
jo
sbb
aas
stc
lock
ds
es
mov
ss
rclb
add
hlt
mov
fisttpll
mov
out
sbb
outsl
int
inc
xchg
das
leave
jl
push
jp
jae
lcall
push
cmp
dec
imul
jno
or
pushf
xchg
pop
enter
pop
adc
adc
lcall
ret
xchg
mov
adc
inc
xchg
daa
test
fldl
push
and
aaa
icebp
pop
fisubl
ret
or
mov
int3
xchg
jno
inc
push
popa
mov
mov
cs
push
adc
jl
jns
insb
int3
add
mov
pop
mov
fwait
or
and
push
push
decb
and
inc
push
dec
pop
addr16
popl
or
mov
sub
mov
int
mov
fidivrl
dec
jne
adc
jo
ljmp
mov
lahf
sar
xchg
scas
out
pushf
cltd
loope
xchg
xchg
out
lods
out
ljmp
or
cld
adc
pushf
aaa
add
mov
clc
outsb
ljmp
cli
or
fistl
mov
insl
movsb
arpl
loopne
lret
ss
fcoms
inc
les
add
and
es
fs
notl
add
pop
add
adc
lock
cmpsl
xorl
test
ret
mov
add
outsl
push
jbe
inc
aad
push
add
inc
ljmp
insl
add
jne,pt
stos
jo
in
pop
jns
insl
and
jecxz
push
hlt
inc
rcrl
adc
rcll
pop
jecxz
sbb
call
add
lds
jmp
pop
int
jb
sub
rcrb
inc
jp
or
in
mov
adc
xchg
jns
mov
xor
mov
adc
imul
cli
ss
pop
out
and
addr16
mov
ljmp
xlat
fsubs
pop
pop
mov
insb
or
femms
push
in
sbb
jmp
add
mov
sbb
pushaw
dec
mov
jne
cmp
aad
sbb
jmp
lods
fimuls
pop
mov
xchg
jp
jb
sub
adc
or
xchg
je
jmp
xor
aad
cmp
addr16
movsb
pop
jmp
xor
aaa
mov
aam
inc
push
or
cwtl
inc
ds
aad
stos
xlat
ja
push
sbb
scas
pop
inc
add
inc
dec
xchg
or
jno
aaa
push
stos
jge
and
jns
push
xor
dec
roll
icebp
mov
les
jecxz
mov
mov
fwait
call
test
sub
sub
test
insl
push
xchg
loope
mov
enter
pop
das
jns
loopne
push
push
pop
adc
push
pop
cmp
push
inc
cmp
and
sub
push
or
pop
inc
in
and
pop
das
or
test
push
adc
neg
jne
mov
cld
pop
gs
sbb
data16
pop
mov
aas
mov
cmpsl
jbe
xor
xchg
lds
push
fs
leave
sub
rorl
push
adc
outsl
out
pop
hlt
or
add
and
inc
jns
adc
push
sarl
xor
test
popa
in
adc
mov
or
mov
xlat
inc
cmp
sub
sbb
test
adcb
inc
jle
jb
paddq
shrl
and
dec
adc
sti
jb
jo
xorb
nop
inc
repnz
sti
dec
dec
cmp
sub
mov
cmp
insb
test
cmp
sbb
mov
cmp
mov
sub
jbe
jb
pop
mov
movsb
iret
adc
pop
or
xor
lret
mov
movsb
mov
iret
ret
cld
in
enter
aaa
cli
push
cmp
mov
outsb
pop
scas
fwait
loopne
ds
xchg
bound
add
adc
mov
push
mov
sbb
jl
test
sub
mov
cmpsl
mov
bound
inc
roll
dec
les
push
xchg
rcr
sub
jecxz
test
add
rclb
das
int3
adc
rcr
movsl
push
loopne
mov
push
push
daa
xchg
lock
lea
push
in
ss
inc
pusha
push
sbbl
and
in
inc
mov
loop
dec
icebp
sbb
jnp
xchg
loope
cmp
or
addr16
aad
fsts
outsl
mov
mov
pop
inc
push
sbb
std
mov
sub
jle
stos
dec
loopne
mov
or
pop
sbb
repz
cmp
jg
push
cld
ret
out
add
popa
int
sub
mov
push
push
dec
test
scas
mov
push
inc
cld
cmp
mov
into
push
sub
jg
mov
cmpsb
sub
jp
lock
mov
jmp
cmc
clc
mov
jg
mov
xor
dec
fwait
lahf
aas
add
int
fs
mov
jecxz
outsl
cmp
push
js
nop
inc
movsl
xor
call
or
xchg
ss
add
insb
pushf
sbb
dec
and
fldl
in
outsl
je
out
push
imul
mov
inc
mov
lcall
scas
int3
pusha
or
pop
mov
loop
xor
lods
nop
xor
mov
mov
pop
mov
pop
dec
push
stos
adc
icebp
shll
fucompp
push
aaa
mov
cmp
scas
add
mov
fs
adc
pop
das
jbe
mov
pop
sarb
std
jecxz
push
lods
imul
sbb
jg
shrl
inc
scas
xchg
mov
mov
xchg
outsl
pop
imul
leave
or
or
out
or
ret
mov
std
sahf
cmp
inc
cmc
and
hlt
cltd
scas
and
pop
jo
mov
loope
jns
fdivs
mov
lds
stos
mov
loopne
add
movsl
sub
fisubl
dec
cwtl
jnp
lahf
add
sti
cmpsb
mov
insb
pop
int3
inc
cmp
inc
cltd
mov
cwtl
sbb
rolb
jp
nop
mov
repnz
fcoms
clc
repz
fstps
mov
fst
xor
and
mov
sbb
and
adc
out
ja
cmp
sbb
xor
sub
pop
aas
int
jle
pop
aaa
testb
mov
pop
push
lods
cli
repz
jnp
jo
popa
out
adc
sbb
mov
or
or
jmp
add
sub
push
scas
test
out
mov
cmpsb
xchg
sti
subl
ret
sbb
out
out
jbe
ja
and
js
mov
and
sahf
cld
pop
cltd
pop
xchg
cmc
out
rorl
mov
shll
mov
fisubrl
pop
jnp
ficompl
sub
mov
mov
fdivrs
scas
adc
out
je
dec
adc
mov
jb
out
dec
in
std
adc
icebp
jo
sahf
iret
fimuls
insb
xlat
xorb
int
mov
pop
pop
jb
xchg
mov
enter
not
rorl
test
pop
xchg
xchg
test
mov
imul
xor
std
std
mov
testb
cmp
or
rcrl
xchg
test
fimull
ficompl
jns
jae
fadds
outsl
or
loopne
add
fdivrl
jmp
inc
mov
outsb
lret
adc
dec
and
pop
or
ljmp
xorl
pushf
or
cli
push
sbb
and
lcall
gs
xchg
push
int
pushf
sbb
icebp
and
xchg
insl
pop
call
push
or
movsb
fsubr
jge
stos
cs
ss
sub
adc
insb
mov
mov
or
les
test
rclb
fimull
mov
and
mov
or
mov
shl
inc
adc
nop
call
pop
push
mov
and
sbb
out
lods
cmp
int3
pop
fimuls
test
scas
pop
lds
add
lods
mov
bound
pop
jnp
cs
dec
rolb
testb
lea
mov
xchg
or
pop
scas
movb
xor
js
stos
jmp
or
cmp
and
push
push
pusha
mull
adcl
cmc
jno
lock
mov
jae
inc
jns
aaa
lret
push
jno
jp
fs
xlat
xor
dec
out
cmpsb
sbb
push
add
shrb
and
das
adcl
ja
mov
lods
adc
cltd
into
outsb
dec
pop
lret
leave
imul
xor
cli
or
pop
les
add
xchg
lret
xchg
xchg
mov
mov
mov
pop
sbb
mov
in
adc
pop
les
pop
push
loope
jbe
lret
jne
ljmp
and
stc
mov
ja
mov
js
pushf
add
and
add
cmp
or
mov
xor
sub
jmp
int
adc
fbld
addr16
xchg
sbb
dec
loope
popf
call
xor
imul
jno
or
outsl
in
outsb
mov
loope
fstps
sub
mov
or
inc
inc
cmp
dec
imul
jl
jbe
cltd
mov
fcmovb
sti
test
mov
cs
testl
sti
ss
outsl
pop
mov
mov
mov
mov
jle
test
add
dec
flds
popa
mov
out
rep
xchg
cmc
mov
popf
sarb
xor
inc
dec
cmpb
pop
lods
sub
ljmp
clc
pushf
in
fisttpl
scas
mov
sar
das
inc
ficoml
test
hlt
add
fstpt
das
sbb
cmp
ror
lahf
inc
mov
dec
outsb
inc
mov
dec
test
xchg
mov
repz
and
pusha
push
add
shll
mov
call
mov
cmp
fimuls
push
test
daa
int3
les
test
fwait
push
push
sbb
push
inc
cwtl
fs
sti
ror
jl
xor
mov
pusha
movsb
sub
dec
popf
std
lods
fsts
add
dec
xor
mov
inc
adc
mov
inc
fmuls
mov
insb
pop
push
push
mov
imul
cmp
pushf
ja
popa
push
loope
cmp
jecxz
mov
push
popa
pop
das
add
xchg
add
cmp
ds
or
and
xor
dec
pop
jae
dec
jge
or
fidivs
pop
jbe
add
xor
arpl
mov
addps
mov
cs
rorb
push
in
xchg
mov
scas
xor
mov
pop
int3
push
or
cltd
sahf
rorb
cmc
mov
push
addl
dec
pop
inc
jp
dec
inc
xchg
fisubs
xor
leave
or
leave
adc
xor
xchg
outsl
loop
add
in
pop
add
ljmp
or
xchg
faddp
aas
push
out
push
repnz
jecxz
leave
arpl
in
out
cmp
dec
out
xchg
lods
and
dec
das
hlt
test
dec
lds
daa
pop
loop
les
es
pop
dec
mov
lods
mov
popa
hlt
mov
lock
ror
in
inc
div
mov
sub
jle
test
xchg
lret
and
cmpsl
in
mov
icebp
push
das
ds
and
sbbb
dec
pop
lret
hlt
aas
mov
push
mov
jae
and
mov
addb
mov
and
loope
xor
rcll
push
fistps
sub
adc
cli
int
cli
insb
pushf
ja
cmpsb
inc
jge
mov
hlt
cltd
or
xor
xlat
or
cmp
int3
pop
ds
xor
dec
mov
pushf
in
add
ds
push
loop
jnp
jo
dec
iret
loop
insb
mov
es
jne
stos
push
jge
cli
push
into
imul
addb
jecxz
imull
mov
xchg
out
sahf
out
jne
rorl
roll
mov
mov
cmp
in
fcoms
mov
xchg
shll
adc
add
out
das
jl
push
adc
push
test
movsl
xor
outsl
fcoml
dec
cwtl
cmpsl
push
lods
pop
pop
loop
ret
jl
pop
les
scas
cmp
mov
sbb
sub
cmp
shl
or
jle
adc
mov
add
inc
jbe
mov
cs
sub
addl
jo
pop
add
cltd
repnz
adc
jns
cmp
inc
roll
mov
pop
sti
and
cmp
pop
cmp
xor
std
push
mov
mov
mov
and
pop
in
div
jno
xchg
mov
insb
mov
or
xor
jmp
lock
out
mov
pop
push
dec
push
push
jae
rcl
in
cmp
repz
dec
or
ss
add
stc
sub
sti
mov
mov
xlat
lcall
subl
shrb
cmc
mov
mov
out
loopne
mov
bound
xchg
push
or
xchg
pop
mov
mov
rol
sbb
mov
lea
int3
pusha
pop
pop
daa
mov
jb
faddp
lock
movsl
cmp
test
pop
enter
pop
add
lods
pop
cmp
pushf
xor
out
pop
xchg
insb
and
push
mov
fcompl
xchg
repz
mov
lret
stc
push
xorl
ret
mov
add
mov
clc
fldenv
jb
addr16
loop
mov
adc
and
pop
dec
pushf
push
lea
xor
jae
stos
dec
and
or
lret
stos
xchg
push
cmp
jns
and
cmp
movsb
cmpsl
mov
enter
std
clc
inc
cmp
xchg
pushf
pop
leave
stc
push
mov
out
or
push
xchg
mov
stc
imul
sub
sub
fstps
in
dec
pop
cmp
jecxz
or
jmp
leave
jge
lcall
push
dec
popf
nop
mov
jbe
push
cmpsb
adc
popf
fcomps
and
and
inc
push
and
add
dec
jbe
mov
aaa
push
xchg
int3
test
mov
and
loopne
and
rolb
mov
js
es
nop
add
xor
fists
mov
add
pop
popa
push
or
jnp
mov
shll
scas
in
jl
mov
jmp
jns
outsb
sub
test
popf
test
ror
imul
jle
jne
in
popa
mov
sub
dec
cld
inc
and
sahf
jb
inc
loope
mov
lahf
ret
es
jno
pop
js
mov
fwait
dec
push
outsb
pop
jne
enter
ds
inc
sbb
push
dec
sub
jbe
mov
ja
dec
and
lock
jp
push
lahf
adc
dec
rcrb
stos
hlt
inc
adc
and
add
adc
call
push
test
fstpt
pop
imul
pushf
inc
add
cmp
inc
jb
and
in
push
push
call
es
repnz
jp
stos
or
iret
shr
dec
std
shr
dec
jno
push
pop
jmp
sub
mov
cmp
add
sbb
sub
daa
jp
rolb
push
mov
mulb
bound
test
sub
mov
das
fwait
add
push
cmpsl
jmp
adc
sub
movsl
mov
cmc
mov
aas
arpl
xor
cmp
je
clc
or
and
jecxz
xchg
repnz
jge
mov
pop
cli
aaa
adc
neg
ja
aad
sbb
pop
jmp
bound
adc
xchg
shrb
test
xor
sub
movsl
popl
hlt
adc
mov
and
mov
cmp
pop
xor
cli
pop
pop
cld
mov
test
jns
add
out
out
mov
test
repz
pop
push
cli
insl
pop
push
add
cltd
or
dec
xchg
shll
lods
inc
jno
mull
mov
cwtl
out
lcall
jno
sub
dec
fwait
in
and
xlat
inc
loope
push
jbe
xor
mov
inc
pop
arpl
inc
lock
pop
mov
adcl
or
xor
and
ret
mov
mov
shrb
out
lock
adc
mov
jnp
and
pop
jmp
fildll
and
addr16
pop
hlt
sub
rcr
sbb
xchg
in
pop
lcall
dec
sbb
dec
adc
repnz
test
and
inc
jmp
push
xlat
sbb
mov
dec
jo
mov
mov
push
mov
sbb
repnz
adc
stos
outsb
lret
imul
cmc
push
dec
dec
push
dec
shrb
cld
int
das
scas
imul
dec
lock
mov
or
xor
cmp
mov
int
pop
sub
rcl
sub
add
cmp
lret
leave
hlt
mov
stos
jne
rcrl
sbb
sub
ss
es
imul
arpl
push
xor
adc
push
push
sarl
push
sbb
adc
cmc
mov
add
xchg
ret
cwtl
cmp
test
fnstsw
sbb
stos
aam
add
xor
mov
loopne
jae
adcb
mov
pop
ret
nop
insl
push
jle
iret
jmp
imul
push
cmp
xor
mov
lret
int3
push
adc
jg
sahf
inc
add
insb
ljmp
arpl
mov
xor
dec
xor
xchg
ss
add
jle
mov
pusha
xor
push
pop
xchg
sbb
adc
and
jno
idivl
adc
adc
decb
fstl
cli
std
add
xor
and
add
int3
loop
lock
add
imul
imul
popf
test
popf
ret
jecxz
test
stos
cmpb
clc
fcoml
es
push
lret
in
shr
fmull
add
jnp
push
bound
cmp
sub
pavgb
add
arpl
push
andb
push
lret
lods
in
decl
vandps
mov
add
das
daa
dec
push
mov
mov
test
rorb
pop
sub
mov
bound
xchg
test
pop
push
sub
ds
sub
adc
les
xchg
xchg
pop
mov
stos
adc
jb
sti
rcr
int
icebp
push
scas
js
sbb
lcall
xor
jmp
xor
aaa
addl
or
sti
pop
insb
movsl
jmp
push
test
add
in
jmp
or
push
outsl
movsl
int3
lea
jae
push
sarb
sbb
ds
add
loopne
data16
sub
lock
adc
pop
xlat
mov
in
mov
jmp
mov
mov
sub
push
and
sti
pop
lahf
jae
adc
clc
fcmovb
adc
lock
dec
out
adc
addr16
mov
jp
es
mov
loopne
imul
cmpl
cli
adc
pop
pop
mov
outsb
add
add
dec
outsb
or
repnz
cmp
jmp
fwait
mov
jo
xor
pop
push
pop
cmc
fstpl
rcl
jbe
jl
add
shl
mov
fwait
icebp
or
xlat
pop
and
mov
stos
adc
pushf
cmp
or
push
dec
and
sub
sar
dec
shrb
xor
adc
and
pop
mov
cli
ds
pop
jp
and
test
xchg
adc
stos
addr16
jbe
lock
dec
add
popf
jb
dec
sub
xor
in
sub
mov
cmp
adc
into
mov
rorb
lret
fsubrs
jl
scas
mov
arpl
sbb
sbb
movsl
pusha
repnz
xchg
stos
inc
mov
ret
and
movsb
pushf
inc
jo
sbb
mov
sbb
mov
subl
pop
push
gs
aad
push
jo
add
jne
inc
push
xchg
lahf
hlt
xchg
jl
xchg
inc
in
cs
push
cmc
inc
dec
xchg
mov
or
or
aas
jmp
popa
pusha
and
lret
les
push
ror
enter
out
cmpsl
jle
push
stos
mov
cmp
xor
cmp
cs
out
and
aaa
adc
inc
lahf
xor
test
sbb
add
loopne
xor
sbb
sbb
mov
mov
jg
cmp
add
fs
pop
cli
into
addr16
imul
sub
pop
cli
icebp
mov
push
rclb
jmp
std
ds
jb
loopne
imul
mov
adc
or
lods
jnp
jecxz
lock
fdivrs
andb
insb
stos
sbb
scas
fucomip
mov
dec
inc
adc
mov
sbb
push
inc
repnz
mov
test
dec
inc
or
nop
adc
leave
lcall
pop
lret
or
fisttps
insb
pop
xchg
rorl
sbbl
test
rcl
and
push
out
xorb
enter
pop
push
cwtl
int
leave
stos
in
add
cmp
lds
pop
cmp
testb
pop
push
nop
and
out
out
dec
xchg
je
dec
or
scas
mov
sbb
lret
ret
out
push
call
loopne
push
push
or
xchg
xlat
jecxz
fldt
rcll
out
jo
inc
add
jl
repz
fsubs
jmp
andl
scas
sub
xor
pop
shlb
fwait
ret
add
add
xchg
add
rep
mov
aad
es
repz
repz
push
or
leave
lock
fdivr
enter
mov
jb
daa
fadd
pop
sub
mov
xchg
add
data16
push
decl
sarb
fwait
xchg
mov
and
push
ss
adc
insb
and
and
pusha
mov
or
lcall
pop
ja
fidivrs
sbb
cld
cmpsl
scas
loope
mov
fldt
into
sub
push
cmp
jmp
aam
popa
out
arpl
pop
sub
popa
fcompl
clc
test
xchg
adc
fcoml
dec
daa
mov
cld
inc
adc
negb
jecxz
pop
ficompl
imul
adc
testl
sub
mov
jp
mov
out
test
xorb
mov
mov
mov
aas
lods
pop
popa
mov
std
in
add
xchg
femms
mov
adc
int3
and
ljmp
les
fsts
xor
jae
push
subb
push
xchg
fists
add
inc
sbb
out
dec
into
and
adc
and
fcoml
push
xchg
fldenv
rclb
call
cs
loopne
dec
ljmp
fcmovnbe
shl
cmc
pop
popf
push
and
outsb
xor
pop
jo
pop
mov
jl
and
je
or
cltd
gs
fwait
aam
jp
dec
out
jl
push
xor
repnz
xchg
adc
pop
cmp
repz
sbb
test
add
stc
xchg
insb
and
mov
jmp
sub
aad
xor
push
xor
sub
imul
or
inc
or
lea
xchg
jae
in
push
pop
or
lret
and
xchg
pop
loope
rorb
out
movsl
lret
in
loop
dec
iret
sub
inc
adc
outsl
fwait
xchg
fs
jnp
sbb
daa
mov
cmc
pop
int
repnz
push
pushf
dec
jp
adc
ret
ss
arpl
or
mov
aam
jle
lock
jns
scas
icebp
pop
ss
cmpsl
xlat
cmp
pop
pop
cld
popa
xchg
inc
imul
out
pop
cmpsl
pop
test
inc
loop
push
lret
and
arpl
and
gs
fisttpll
jg
sub
int
enter
into
push
add
clc
ficoms
adc
adc
in
jmp
test
cmc
xchg
test
test
ret
sarl
pop
movsb
dec
dec
adc
in
scas
or
mov
inc
icebp
shrl
or
ror
inc
fucom
cmp
sub
jo
mov
fidivrs
lret
jmp
xchg
cmpsb
push
pop
jb
pusha
into
loop
push
pop
lcall
add
sbb
cld
jle
bound
roll
sahf
add
cs
and
push
cmp
or
sbb
in
mov
out
in
and
imul
lock
fdivs
cmp
cld
push
fstps
mov
push
push
ljmp
xchg
lret
or
add
fnstsw
and
andl
cmc
cmpsb
leave
rclb
mov
pushf
dec
xchg
jmp
outsl
jae
jb
mov
cmpsl
shrb
push
int
fnstsw
pop
ret
xchg
loope
out
leave
or
xlat
push
xor
insb
push
or
lcall
in
mov
aam
jo
iret
call
mov
pop
fsub
lret
inc
dec
test
mov
dec
cwtl
jl
or
pusha
dec
aad
mov
xor
ret
orb
mov
jb
imull
mov
int
mov
leave
pusha
lods
loope
mov
icebp
outsb
popf
fisubs
dec
pop
cmpl
ja
test
mov
rcll
push
inc
dec
imulb
and
dec
insb
cmp
out
push
outsb
ret
shrb
sbb
movsb
in
inc
sar
int3
xor
cwtl
push
cltd
lock
andl
mov
les
out
cwtl
push
outsb
shrb
pop
xchg
loope
mov
loopne
nop
ss
out
sub
xchg
jge
gs
pop
lds
xchg
bound
les
cltd
fwait
sarb
inc
sbbl
cld
mov
inc
mov
mov
jae
xor
mov
mov
add
push
mov
mov
loop
pop
lods
movsb
movsl
sub
dec
lds
inc
jg
mov
insl
into
or
nop
inc
and
xor
inc
pusha
or
xor
push
xor
int
fimuls
scas
dec
sti
jp
popa
addr16
das
push
push
inc
cs
push
or
mov
mov
outsb
push
aam
mov
mov
push
rcr
fmuls
mov
out
ret
cltd
push
xor
jnp
clc
or
jle
aad
pusha
or
xchg
and
push
mov
cmc
add
out
jle
mov
lret
les
out
sub
adc
cld
movzwl
stc
sbb
push
aas
xchg
inc
icebp
push
cmp
xchg
es
push
mov
cmp
nop
and
pop
xchg
mov
ret
push
mov
pop
add
mov
and
dec
cmp
imul
add
sbb
outsb
aam
push
add
or
adc
je
repnz
fdivl
cmpsl
pop
test
iret
mov
movb
int3
push
sahf
jp
cmp
and
or
cmpsl
jb
rcrb
mov
mov
lcall
cltd
or
add
jb
ljmp
add
imul
lret
loopne
sub
dec
test
xchg
gs
clc
dec
jb
add
dec
lea
dec
xorb
push
aad
push
loope
clc
cltd
mov
jle
cmpsl
jns
loope
insb
ds
mov
in
out
mov
sti
inc
pop
arpl
imul
out
jg
test
pop
jge
mov
cmpsl
cmpsl
arpl
jae
mov
jae
dec
dec
loop
adc
pop
inc
jmp
mov
mov
jl
scas
sahf
add
mov
adc
push
hlt
nop
fldl
std
pop
scas
and
push
adc
dec
rol
scas
sub
pop
adc
gs
dec
insl
pop
cmp
in
mov
into
mov
lds
cmpsl
pop
inc
daa
mov
inc
mov
pop
inc
sbb
out
cmp
push
xchg
mov
ljmp
vmread
cmp
xchg
clc
out
mov
shl
push
xchg
mov
rolb
pop
xchg
jae
fistpl
std
stos
adc
rorl
std
or
dec
loop
test
xor
push
inc
mov
pushf
pop
push
pop
repnz
stos
cmc
mov
push
push
movsl
out
and
inc
jno
sub
xchg
inc
fs
inc
adc
xchg
out
stc
repnz
in
cli
cmp
xchg
pushf
xor
add
push
sbb
pop
adc
mov
fwait
lcall
pop
repz
mov
pop
pushf
mov
ficomps
jg
jo
aam
xor
inc
mov
out
mov
ret
test
mov
mov
mov
jmp
test
loop
cmpsl
adc
fisttpll
frstor
mov
push
cld
xor
inc
and
cs
pusha
loope
int3
orb
push
pop
add
add
push
add
mov
loopne
inc
mov
jge
xchg
add
pop
sub
data16
xor
test
adc
sub
inc
ret
jmp
xchg
pop
or
lahf
ljmp
or
rclb
imul
hlt
adc
xor
mov
test
pmaxub
or
shrl
inc
sub
test
mov
xor
sbb
xchg
sbb
test
scas
and
bound
movsl
test
add
add
cld
jl
and
mov
fdivrl
sbb
sbb
bound
and
inc
mov
jl
jge
sbb
mov
xchg
and
pop
cmp
test
lcall
push
dec
jge
orl
jl
jb
cmp
in
addl
clc
ss
test
test
dec
sbbb
mov
jns
xor
or
push
jge
push
cmc
sti
mov
add
push
arpl
jmp
test
in
jno
xchg
add
pop
repz
leave
pop
xor
aaa
push
fs
mov
fwait
popa
negl
outsl
imul
jns
lock
jne
mov
pop
sub
rclb
scas
xchg
adc
je
and
and
repz
rcl
test
push
sti
pop
pop
pop
inc
add
call
outsl
data16
fsubrs
scas
lret
cmp
ja
loope
insl
cld
push
imul
dec
rcrl
fldt
dec
xchg
mov
outsb
in
movl
push
push
mov
lahf
adc
mov
stc
mov
test
fsubs
sahf
sbbb
mov
add
mov
push
stos
rcr
or
push
insb
dec
and
inc
addr16
mov
sub
cwtl
insl
fwait
into
fistps
ja
pushf
xchg
lret
xchg
or
xor
sbb
fidivl
ja
sbb
mov
xchg
push
nop
adc
lahf
icebp
mov
insb
gs
fildll
test
dec
jl
sub
jg
fisubl
aad
push
aaa
adc
jae
mov
mulb
cmp
or
mov
jns
inc
mov
imul
loopne
or
sbb
fucomi
mov
loope
cmp
cmp
loopne
add
call
push
out
xchg
ljmp
mov
dec
imul
arpl
ds
sub
inc
repz
testl
scas
adc
movsl
addr16
push
jle
add
mov
xchg
dec
or
popa
dec
mov
lret
pop
dec
sar
popa
into
jae
cli
mov
or
aam
ja
inc
pop
and
std
cmp
adc
sti
push
mov
fs
mov
add
in
fdivrs
enter
subb
and
dec
jnp
or
sub
mov
stos
push
fisttps
mov
ficoms
push
inc
push
or
pop
daa
jb
fxch
add
jne
inc
xorb
lahf
xadd
inc
int
or
mov
pop
cmp
pop
or
jp
xchg
sti
cs
fwait
or
lock
call
mov
daa
addr16
or
das
jbe
and
aad
fldenv
jle
sbb
outsb
in
xchg
lahf
jo
arpl
insl
in
lret
cltd
iret
dec
mov
mov
outsl
mov
cmp
mov
sbb
pop
addr16
pop
sbb
cmp
repz
sbb
sub
add
sbb
push
cmp
xor
mov
ret
ret
dec
sub
mov
mov
or
add
xor
or
lea
insb
inc
das
aam
push
popf
test
test
cmc
cmp
movsl
pop
sub
add
dec
inc
jno
pushw
stos
shlb
inc
adc
lods
push
jns
shr
mov
add
in
out
xchg
sub
mov
push
inc
cmpsb
jae
dec
shr
repnz
lods
jg
icebp
cmp
outsb
jno
cmp
dec
stc
xor
lahf
sbb
and
out
pop
loopne
xor
jns
mov
mov
xor
je
jp
pop
dec
jp
insl
dec
sub
push
clc
inc
push
xlat
xor
xor
add
jg
insb
xor
pop
hlt
pop
sub
dec
push
sub
shl
jecxz
fs
or
test
insb
in
pop
cmp
gs
or
movsb
push
xor
sub
inc
movsb
call
mov
mov
xchg
adc
adc
data16
in
xchg
jle
xor
mov
fucomi
mov
shlb
popl
xchg
adc
mov
sub
and
int
cs
frstpm(287
daa
ds
xchg
push
inc
or
pop
push
fsubrs
sub
mov
jb
in
lret
xchg
in
movsl
xor
mov
jp
fiaddl
es
mov
jg
xor
push
outsb
in
jo
mov
mov
popf
inc
fadds
jns
jl
ljmp
push
lret
pop
pop
cmpsb
shrb
jmp
popa
cmpb
pop
rorb
mov
push
stos
scas
in
push
jno
sti
dec
add
insb
lahf
cld
das
shll
repz
adc
mov
mov
rorl
pop
mov
aad
lahf
mov
rcrl
lret
add
and
sarb
ss
sbb
repz
arpl
enter
cmp
and
scas
adc
and
xor
mov
mov
adc
or
sub
stos
ret
ss
lds
data16
jmp
ds
in
cmpsl
movb
jg
out
xchg
push
ljmp
mov
pop
jle
xchg
cmp
stos
idivb
jmp
mov
xchg
push
ret
push
sub
xor
test
rcrb
push
push
mov
outsb
pop
lret
divps
insb
mov
std
stc
jp
ljmp
sbb
push
cld
pop
dec
pop
jo
lods
pop
dec
sub
gs
sub
test
xor
les
lret
in
xchg
cli
sub
xor
push
xchg
shll
push
sbb
or
loopne
jle
jae
xor
repz
ret
pop
and
add
dec
mov
scas
and
inc
sbb
shl
ficoml
xchg
sub
dec
popf
repz
mov
ret
mov
pop
jle
pop
xchg
mov
or
mov
call
aam
daa
cli
stos
push
jne
scas
add
jg
xchg
lea
sti
iret
push
js
sahf
xchg
and
andl
mov
pop
out
and
mov
imul
jp
xor
or
jo
cld
xor
dec
cmp
fs
ret
repz
push
mov
pop
shr
testb
cltd
lahf
mov
or
add
js
call
pop
imul
or
add
gs
xlat
jge
add
lret
cmp
pop
movsl
xchg
shrb
loopne
mov
dec
jmp
into
push
mov
add
clc
xchg
sahf
mov
or
jl
std
scas
test
jbe
filds
jmp
mov
jmp
mov
mov
add
iret
outsl
mov
je
in
push
stos
inc
dec
add
sub
and
clc
in
mov
pop
mov
mov
dec
enter
add
jne
mov
subl
push
sub
bound
sar
sub
or
test
push
add
inc
push
inc
push
xchg
in
inc
push
popf
pop
mov
pushf
ds
loop
leave
dec
daa
cwtl
xchg
and
mov
repnz
test
stc
lods
loop
mov
aad
push
mov
mov
aam
mov
pop
ror
dec
mov
or
mov
pushf
push
gs
cmp
dec
lea
inc
test
jo
pop
js
adc
mov
sub
es
jp
outsb
data16
sbb
mov
xchg
and
aad
movsb
or
ret
jmp
loope
xlat
adc
pop
or
xlat
sbb
lret
jbe
sub
pop
outsb
movl
pop
jbe
mov
inc
sub
lods
fstpt
call
jmp
aad
xor
adc
sahf
gs
stos
popa
cmp
cmc
fildl
sbb
fildll
pop
jmp
mov
je
xor
cmp
in
inc
or
fldt
sarb
orl
and
pop
cmp
sbb
cli
lea
data16
push
imul
pop
dec
lcall
pop
jmp
jle
or
mov
pop
push
insb
repz
into
in
or
loop
cli
aad
adcb
pop
fistpll
cld
or
testb
out
fs
or
mov
xchg
jle
add
out
mov
sti
pop
cli
rcrl
push
inc
xor
xchg
test
fisubl
inc
or
push
subb
pop
inc
add
clc
mov
sub
inc
int
rcrl
iret
lods
push
int
inc
das
pop
and
push
or
fisttpl
xor
sahf
insl
and
inc
mov
lods
sbb
jbe
mov
cld
imul
movsb
shrb
inc
out
pop
dec
les
jmp
sub
xchg
inc
aad
test
jb
sahf
mov
push
js
test
jb
mov
lret
aaa
lock
orl
cmp
gs
push
mov
xchg
inc
hlt
adc
inc
shll
es
sti
rolb
cmp
loop
lods
fnsave
pop
add
xor
arpl
mov
and
cmp
pop
movl
mov
or
push
inc
mov
test
inc
js
insb
rolb
add
sub
pop
add
aas
cmpb
filds
outsl
sbb
sbb
lret
out
jo
fwait
jb
int
jbe
fmull
xchg
into
test
out
mov
lret
mov
xchg
iret
xor
xchg
int3
lahf
and
and
push
mov
push
dec
and
mov
stos
stos
and
stos
xor
out
mov
mov
sub
inc
inc
push
push
pop
divb
fiaddl
lods
mov
mov
jp
adc
push
cmp
adc
jle
inc
fdivs
outsl
sub
mov
rcr
add
and
inc
adc
mov
xchg
into
mov
and
rolb
xchg
popa
add
das
dec
lock
aad
loopne
daa
mov
sub
ret
in
mov
sub
mov
dec
cmp
aad
add
clc
jmp
jg
fildl
repnz
jo
jnp
pushf
clc
mov
mov
inc
add
in
repnz
xor
mov
cld
lods
stos
mov
inc
mov
push
push
xchg
pop
outsb
push
jo
push
dec
int3
mov
fldcw
pop
xchg
pop
test
sahf
push
ljmp
mov
sbb
out
pop
jno
stc
cmpsb
or
fsubl
cs
push
ljmp
notb
push
mov
xchg
shl
out
sub
push
adc
es
ss
je
fadds
jns
xor
jae
imul
cmp
inc
adc
sbb
push
inc
es
orl
enter
clc
inc
pop
or
in
js
lds
lcall
movsl
fisttpl
loope
loopne
mov
mov
test
mov
jg
mov
add
xchg
xor
std
call
mov
fwait
stc
push
jge
nop
sbb
in
in
daa
sbb
xchg
sbb
nop
sbb
fnstenv
dec
out
test
movsl
fisubrl
add
fs
and
cli
sbb
sub
sbb
push
mov
in
outsl
cmpsl
xor
outsl
xchg
jl
adc
mov
jnp
stos
test
pop
sbb
sbb
ja
jno
and
and
shll
inc
loopne
add
ficompl
pop
sahf
and
insl
cld
xor
push
xchg
cmpsl
fimuls
xchg
sub
das
sti
xor
cmp
mov
sub
call
sbb
jle
sub
inc
add
push
bound
or
push
adc
adc
insb
mov
mov
subb
xchg
add
xchg
repz
adc
ja
xchg
dec
lods
jns
push
mov
jno
pop
hlt
enter
sbbb
testb
mov
or
rcrl
cmpsl
fcmovbe
mov
pop
add
ss
lods
outsb
scas
or
loopne
insb
adcl
sbb
xchg
or
cld
je
sbb
adc
jno
push
cmpsb
adc
xlat
negl
repz
out
pop
xchg
ljmp
loop
imull
jnp
cwtl
mov
and
push
shr
cmp
jmp
hlt
cli
push
xor
ret
pop
mov
sbb
pop
xorb
rcl
and
mov
jmp
out
pop
dec
add
xchg
push
int3
xor
pop
and
xchg
push
mov
fstpt
or
mov
insb
pushf
mov
push
std
push
inc
insb
and
std
cmp
fildll
mov
or
add
pusha
shl
sbb
lea
pop
mov
or
rclb
je
sub
inc
je
ret
push
addb
add
adc
jns
push
bound
test
jb
outsb
mov
fucom
leave
ljmp
add
pop
add
push
scas
int3
cmpsb
data16
out
pop
cli
mov
sub
sub
jmp
push
mov
sub
movsl
inc
mov
repnz
bnd
cs
and
cmpsl
mov
movsb
mov
imul
incl
pop
rclb
push
pusha
jmp
jne
sbb
mov
mov
ret
lock
dec
repnz
push
ljmp
sbb
or
dec
mov
mov
lods
ja
movsl
mov
mov
adc
ret
into
outsb
adc
xchg
in
loope
sub
bound
push
lds
sub
cmp
xchg
cli
inc
idivb
test
push
popa
xchg
scas
gs
les
js
add
adc
dec
xlat
cmpsl
sub
xor
lcall
sub
cli
test
lret
cwtl
dec
fs
gs
cmpl
fs
fwait
and
inc
inc
jo
dec
sbb
or
sub
mov
sbb
xlat
clc
ja
add
dec
jbe
mov
push
inc
in
popa
or
mov
jle
shr
jb
aas
sub
add
dec
pop
sahf
imul
sub
movsl
cli
inc
jne
dec
jae
mov
inc
push
sub
cmp
mov
aam
les
aaa
push
xchg
lds
inc
fsubs
jae
outsl
push
push
cltd
vpshufd
mov
or
in
fsubrl
ret
cs
or
adc
out
lret
adc
int3
and
insl
sub
inc
cmp
or
test
adc
or
xchg
jnp
shll
in
outsl
lds
push
lods
sub
int
fsincos
lds
sub
jb
xchg
mov
or
ret
xlat
lods
lds
push
xor
shll
loope
out
dec
cmp
aaa
in
jmp
mov
cmp
xor
sub
cmp
loopne
daa
cmpb
stos
adc
pop
data16
rcr
jne
or
les
or
pop
movsb
js
cwtl
popf
outsl
loop
mov
jne
bnd
add
ficoml
mov
cmpsl
sbb
sahf
push
icebp
dec
sub
mov
sbb
xor
stos
push
inc
inc
loop
push
xchg
mull
in
icebp
mov
les
out
lcall
filds
rcrl
inc
mov
fidivrs
or
mulb
cs
insl
sahf
xor
cmp
pmaxub
popa
or
das
mov
icebp
sti
fldenv
out
lds
jo
mov
in
mov
xchg
xor
mov
ret
cwtl
and
test
es
mov
in
ss
dec
mov
fbstp
inc
add
xor
das
push
jne
aas
inc
xor
mov
iret
fisubs
mov
hlt
leave
ret
push
ret
nop
inc
push
jo
fwait
movsb
adc
jg
popf
or
aad
push
mov
sub
pop
push
fdivs
leave
cltd
insl
xor
mov
shlb
rcr
cld
inc
xchg
sbb
jg
call
lock
in
mov
lret
mov
pop
mov
mov
mov
mov
daa
hlt
mov
mov
or
rcl
icebp
mov
mov
push
mov
movsl
test
sub
out
add
imul
mov
mov
mov
loope
inc
or
lcall
xchg
out
push
mov
das
mov
and
sub
mov
push
push
test
mov
mov
out
loopne
mov
shrl
fmuls
or
push
sub
popa
or
sub
lds
mov
or
mov
xchg
mov
push
movsb
mov
push
pop
mov
xor
sub
sahf
add
test
adc
xor
out
jbe
test
push
movsl
loop
dec
sub
ret
mov
ret
outsb
in
bound
fimuls
inc
aam
out
sbb
pushf
fildl
leave
test
or
pusha
popa
xchg
testb
xchg
or
popa
testb
shll
or
pop
cmc
push
es
sub
jne
xchg
mov
jg
inc
mov
rol
xchg
mov
rorl
push
sub
lret
adc
mov
es
lods
and
or
jmp
lods
dec
pop
flds
adc
aad
and
pop
sub
add
mov
dec
std
xchg
jno
and
test
push
fldenv
jne
aas
rol
add
je
and
xchg
push
jecxz
cmc
adc
sbb
sbb
mov
cmpsl
inc
jmp
cmpb
and
xor
push
sbb
lods
ror
ss
insb
cmpsb
bound
je
movsb
orl
lods
sub
or
sub
adc
aas
das
xchg
mov
mov
mov
pop
jge
mov
mov
and
dec
iret
mov
or
shl
and
sti
outsb
dec
pop
pop
data16
shrl
pop
sbb
lret
mov
das
and
lds
les
dec
xor
mov
xchg
cld
fisttpll
insb
xchg
ficomps
xchg
pop
gs
sti
das
fisttpl
or
cmp
inc
clc
aam
fsubl
and
and
pop
pushf
jns
lds
in
and
push
dec
stos
jp
and
and
leave
out
adc
jp
or
arpl
adc
hlt
sbb
jb
xor
outsl
mov
cld
and
in
push
cld
xchg
mov
ds
add
jb
movsl
pushf
das
xor
fistps
mov
cmp
addr16
xor
jecxz
sbb
cli
lea
pop
adc
add
pusha
cmp
adc
or
stos
icebp
pop
mov
mov
scas
jmp
andl
and
and
sbb
xchg
push
xchg
fucomip
inc
cmc
ss
addl
sbb
emms
add
incl
stos
add
imul
xlat
mov
jno
inc
push
int3
nop
dec
jnp,pn
ljmp
adc
in
add
lcall
bound
enter
sbb
mov
mov
das
fcmovnbe
mov
stc
dec
mov
jg
sbb
jae
je
mov
push
lock
xor
in
out
mov
xorb
lock
movsb
push
and
cmpb
and
jge
sub
inc
inc
pop
pop
and
push
inc
loope
inc
cltd
lret
pop
adc
aas
jecxz
xchg
stos
ds
lcall
in
mov
push
addr16
std
or
adc
pop
jmp
imul
cmpb
jl
inc
test
adc
xchg
cmp
add
mov
ljmp
xchg
jbe
push
out
adc
xor
aad
pop
lock
in
xor
cmc
loop
jg
andl
jmp
jae
sbb
pop
jnp
push
mov
pop
mov
lret
dec
daa
inc
inc
test
inc
or
out
loopne
xor
test
xlat
fldt
mov
mov
and
mov
jle
xor
daa
xchg
test
sub
inc
push
pop
adc
xor
cmp
mov
pop
addr16
rorb
adc
add
cltd
aas
push
repz
bound
jge
bound
mov
lahf
or
cmp
adc
dec
sbbb
rorb
test
inc
cmpsl
out
imul
hlt
pop
pop
jmp
lcall
call
incb
push
jb
out
sbb
mov
lcall
lods
xchg
fisttps
mov
jl
cli
in
add
mov
imul
mov
lock
mov
xor
sbb
push
mov
xchg
shll
mov
sbb
jnp
lds
pop
lods
mov
movsb
xlat
lds
push
fcmovne
mov
sbb
jo
movsb
int
int3
enter
add
sti
or
jns
ds
or
sub
sahf
sbb
ret
in
mov
lret
in
cs
dec
mov
jg
push
jg
in
arpl
mov
push
mov
out
mov
test
inc
cmp
sbb
addl
lods
aad
out
mov
lock
dec
std
mov
movl
ss
into
jmp
lcall
jge
fimull
adc
outsl
imul
clc
inc
cmp
jge
outsb
inc
int
or
cltd
xchg
clc
mov
cmp
xor
shl
arpl
mov
ljmp
cmp
jge
mov
mov
xchg
xchg
fidivl
insl
pop
jecxz
mov
das
jns
les
scas
push
jo
gs
adc
incb
xchg
jbe
mov
sub
push
xchg
jnp
jle
lods
mov
sarl
and
bound
and
es
mov
aas
jb
dec
cmpb
fs
hlt
push
lea
gs
push
sub
loop
lret
push
sti
fnsave
mov
mov
scas
insl
add
fisubl
xor
xor
dec
jcxz
insl
out
daa
ret
sub
inc
and
pop
push
stos
insb
dec
mov
hlt
outsl
lea
icebp
xchg
push
out
pop
mov
pop
sub
loop
jnp
mov
sub
jo
pop
mov
adcb
jno
pushf
pop
xchg
mov
pop
rorl
cmpsb
adc
sub
push
pop
inc
insl
push
bound
out
shlb
jae
mov
pop
test
outsl
aas
insl
dec
xchg
sar
jne
mov
les
das
and
js
xor
daa
sahf
out
sarb
push
inc
fistl
dec
aam
loopne
pop
mov
in
inc
leave
stos
enter
bound
and
xchg
pop
sti
mov
inc
dec
paddsw
pop
cltd
or
int
add
fcompl
jl
pop
lret
sti
outsb
mov
insl
mov
sub
add
out
fsts
jns
jbe
cmp
out
inc
stc
scas
push
je
pop
jle
push
nop
mov
mov
rcll
fdivrl
mov
push
add
push
and
add
hlt
add
mov
jae
lahf
and
cmp
je
mov
sbb
jp
sar
loopne
roll
stc
adc
add
stc
enter
xor
sub
jnp
enter
inc
seto
push
inc
cmp
fdivp
fldcw
mov
jae
push
xor
mov
lods
add
ljmp
insl
push
out
sarb
xor
imul
push
mov
repz
test
mov
out
arpl
in
orl
mov
pop
movl
test
or
ss
mov
pop
cmpsl
sub
scas
repnz
cmp
sub
mov
or
pop
inc
ret
jle
dec
fldcw
xor
add
dec
cwtl
sbb
notl
fsubrp
mov
pop
push
pushf
xor
add
ret
xchg
or
iret
addr16
adc
fsubrs
mov
dec
std
clc
fistpll
cmp
into
popf
ds
rclb
mov
cmp
test
mov
add
repz
jmp
sub
xchg
gs
push
loope
inc
sbb
mov
pop
mov
add
adc
lds
fsubs
pop
loop
xor
pop
or
add
shll
add
mov
inc
dec
jge
data16
lods
mov
fildll
sub
lret
mov
stc
mov
test
dec
jbe
cmp
push
xchg
testl
push
and
sbb
jmp
int
and
mov
cmc
and
xor
xlat
add
dec
stos
mov
inc
cmp
subb
lret
pop
push
insl
jbe
int
jmp
push
push
push
and
das
pushf
outsl
or
sbb
sbb
jne
aaa
xor
sbb
or
loopne
lock
rorl
push
andb
incl
notb
jecxz
xchg
out
in
jne
sbb
pop
mov
leave
dec
sbb
push
mov
cmp
pop
sub
pop
insb
adc
lock
loopne
push
mov
mov
dec
fnsave
fisubrs
cs
enter
ds
popf
or
push
fs
pop
add
add
scas
icebp
jmp
jne
movsb
imul
push
cmp
mov
pcmpgtw
dec
cmp
and
jmp
pop
fwait
jmp
popf
mov
mov
popa
dec
call
bnd
mov
hlt
fdivrs
dec
and
sti
movsb
xchg
fildll
test
call
add
movsl
sti
subb
insb
fwait
push
pusha
mov
insl
lds
loope
xchg
adc
xchg
orl
adc
cmp
ret
xchg
adcb
dec
jnp
add
aas
cs
iret
cmc
and
cmp
mov
cmpl
cmp
fcmovu
and
add
notb
pop
das
ficoms
lock
shll
mov
ret
movsl
aaa
in
sbb
sbbb
mov
loope
sub
pop
sub
mov
in
and
shlb
mov
mov
loopne
xor
aad
lahf
adc
inc
mov
mov
pop
mov
sub
mov
shrb
dec
lock
xchg
in
and
fsubl
ja
adc
dec
mov
cmpsb
les
jnp
xchg
cmp
adc
nop
outsl
sbb
fmuls
cmp
inc
movsl
cli
and
ds
xchg
pusha
je
out
pop
push
imul
inc
sbb
aam
xor
test
pop
sahf
jecxz
rcll
arpl
jmp
fmuls
cmpb
out
popf
sub
je
mov
add
into
lcall
flds
addr16
mov
xor
nop
xchg
je
adc
or
and
out
pop
or
adc
lds
sbb
inc
lret
adc
fcoml
adc
jl
jg
outsb
lcall
clc
pop
test
jo
xor
es
lods
mov
shll
mov
mov
jecxz
jae
into
fcomps
pop
frndint
jnp
test
mov
cmp
lret
mov
pop
pop
pand
push
mov
bound
sub
fnstsw
sarl
mov
loope
ss
das
or
ljmp
lods
pop
adc
and
or
mov
mov
pop
inc
fcoms
and
mov
scas
lret
mov
fsubp
jge
mov
jbe
pop
lcall
sbbl
push
cltd
push
sbb
sub
pop
addb
arpl
cmp
mov
pop
push
jb
rclb
pop
mov
or
mov
shll
ret
roll
dec
loope
lods
inc
fcomi
cmp
xchg
repnz
mov
fnsave
notl
outsb
stc
mul
aam
xchg
adc
xor
sahf
mov
add
fsubl
int
mov
outsl
stos
fsubr
aam
lea
dec
outsb
xor
jp
jo
or
bound
xlat
pop
cmp
pusha
orb
aam
add
mov
lds
inc
sahf
aam
outsl
mov
and
mov
rcrl
lea
outsl
cwtl
or
movsl
ljmp
out
fiaddl
xchg
or
inc
popa
mov
in
iret
loope
jle
push
inc
push
push
push
sbb
ds
pop
lret
ljmp
push
pop
std
cmpsb
out
or
adc
and
pop
mov
add
mov
arpl
or
ds
dec
pop
lcall
mov
cmp
cmp
jno
sub
add
push
pushf
out
xchg
inc
bound
lahf
scas
fimull
sbb
cmp
popa
dec
pcmpgtd
and
mov
push
pop
dec
inc
xlat
push
inc
or
aam
fistpl
dec
fcompl
mov
js
add
out
scas
aaa
scas
scas
sub
scas
push
call
pusha
test
jno
scas
decb
ret
aad
lods
outsb
movsb
test
out
cwtl
es
push
hlt
and
mov
dec
test
sbb
or
xor
dec
xlat
mov
bound
in
ss
mov
fcoml
inc
adc
mov
xchg
lods
push
clc
cmp
xor
loop
stos
jo
scas
xor
or
mov
pop
mov
dec
adc
inc
inc
lret
mov
mov
fiadds
dec
cli
imul
dec
mov
mov
cmp
jno
mov
testl
push
fsubrs
clc
pop
clc
jg
mov
imulb
sbb
push
ljmp
xchg
out
call
xchg
loop
decb
add
andb
test
xchg
or
jge
bound
pop
lds
mov
and
xor
or
lea
pushf
cmc
scas
sub
and
mov
stos
inc
adc
stc
push
sub
ds
mov
jne
fdivp
xor
popa
inc
pusha
in
sub
pop
push
pop
addl
or
ja
cli
lcall
dec
pusha
sbb
lds
cmp
jbe
mov
ret
fisubrl
shlb
repz
call
and
mov
test
test
pop
insl
dec
mov
dec
fisttps
add
and
cmpsb
jmp
lods
iret
xchg
xor
scas
call
inc
ret
std
or
sbbl
sarb
int
loopne
xlat
or
fbld
popa
inc
addr16
xchg
out
mov
out
out
jo
int
loop
sbb
or
fidivrl
cmp
push
cmp
push
sahf
mov
call
mov
pop
rcrb
sbb
and
jp
push
add
nop
mov
jo
push
and
clc
insl
mov
aad
mov
shlb
movsb
test
movsl
imul
jmp
jp
push
push
lds
enter
pop
lret
add
inc
and
in
fnop
ret
out
mov
imul
push
shll
dec
or
popf
xor
inc
test
call
dec
xchg
adc
test
lahf
sub
pusha
xor
lret
arpl
iret
dec
fidivl
out
hlt
pop
lret
or
mov
mov
daa
outsb
adc
mov
sbb
mov
enter
xchg
xor
rorb
inc
jne
cli
test
cs
mov
incb
and
in
add
in
dec
xchg
out
cli
push
sub
loopne
enter
in
in
push
cmp
std
pop
filds
push
sbb
push
andl
icebp
sbb
pop
lods
ficoms
fisubl
pop
xchg
loop
in
aas
xchg
mov
cmp
cmp
in
iret
pop
in
lret
fistps
jns
xchg
dec
pop
pop
data16
testb
sbb
iret
test
mov
out
push
in
fcomip
push
push
mov
fwait
inc
out
subb
push
xchg
push
adc
cmp
add
cmp
dec
into
mov
add
ficompl
lods
lods
subb
adc
adc
xchg
shll
mov
sub
loope
or
sub
imul
add
mov
jbe
out
sbb
out
pop
xchg
xchg
pusha
xor
int3
movsl
daa
and
mov
sub
fimull
shrl
es
lea
sub
sbb
imul
xchg
jb
add
jl
push
jno
inc
xor
bnd
sub
xor
add
in
mov
outsl
lret
sbb
jno
addr16
or
in
aad
in
dec
xlat
arpl
fsubs
outsl
scas
jecxz
mov
sub
test
dec
test
xor
call
imul
sbb
dec
enter
pop
cmc
inc
aaa
mov
shrb
add
jo
iret
cmp
mov
clc
pop
je
pop
mov
out
adc
add
stc
jns
ret
sbb
or
xor
and
and
arpl
inc
out
xchg
xchg
in
inc
mov
out
mov
nop
and
pop
xor
adc
aaa
mul
mov
rolb
cmp
lret
dec
mov
jge
repnz
scas
leave
add
pop
sbbl
arpl
jecxz
bnd
inc
sub
dec
les
lds
pop
mov
sbb
and
in
test
inc
iret
dec
and
cmp
jecxz
jns,pn
bound
sbb
iret
add
xor
fs
pop
stos
mov
cmp
or
pusha
lock
xchg
mov
or
insb
adc
fcompl
nop
mov
test
sbb
aam
xchg
jmp
xchg
and
mov
adc
rolb
les
ret
push
outsl
cmp
lds
dec
or
test
aaa
in
xor
dec
int3
jne
mov
loop
in
jmp
dec
out
leave
dec
cs
ja
push
push
or
cs
or
les
add
into
xchg
adc
sahf
sbb
xchg
dec
adc
xor
rolb
inc
int
daa
lock
testl
xchg
popa
pop
and
and
mov
lods
or
push
jl
mov
push
cltd
and
cmpsl
pop
mov
rolb
icebp
js,pt
fs
cmp
mov
pop
fdivrs
mov
push
rcl
into
jbe
inc
xchg
cmpsb
negl
sub
cmpsl
ds
lahf
inc
cmp
xlat
fbstp
adc
add
sub
jle
push
mov
mov
jno
lods
xchg
fisttpl
xchg
pop
out
shl
xchg
jle
sahf
jo
and
arpl
inc
lock
test
in
or
adc
popf
xor
sub
mov
insl
jno
mov
sbb
in
jne
stc
push
and
sub
aaa
add
stc
jecxz
ret
cld
out
fldl
pop
or
lahf
mov
jbe
inc
aad
fisttps
mov
pop
xor
pop
mov
and
push
cs
in
mov
ljmp
ss
sti
push
inc
frstor
inc
xor
out
xor
clc
mov
mov
jp
xchg
jbe
imul
inc
sub
adc
rorb
in
lock
inc
push
jge
insl
mov
clc
pusha
fdivp
jmp
xchg
mov
hlt
lods
xchg
sub
mov
test
mov
jg
dec
pop
test
push
test
mov
mov
jecxz
rcl
gs
or
scas
jge
push
xor
aam
inc
xor
popa
sub
pusha
fiaddl
in
fidivs
pushf
addr16
xor
add
out
dec
adc
dec
test
mov
dec
push
xchg
push
fnclex
repnz
sbb
lret
dec
jb
inc
pop
lahf
or
dec
scas
pushf
scas
cmp
call
cmp
loope
loop
inc
add
movsl
into
movsb
pop
push
adc
adc
mov
xchg
xchg
push
mov
jns
add
loopne
data16
lds
mov
stos
lcall
sbbl
ja
pop
addr16
aaa
mov
pop
sahf
mov
je
es
test
pop
cmc
push
inc
jo
lock
pop
stos
ja
xchg
mov
push
push
clc
or
das
jle
xchg
in
sbb
lea
jge
ljmp
sbb
pop
mov
cwtl
pop
insb
das
fidivs
cmc
test
adc
lods
out
imul
jp
shlb
lret
fdivrl
dec
pop
mov
shlb
xor
addl
mov
adc
js
sub
push
add
mov
xchg
rcll
and
pop
popa
scas
mov
or
cwtl
xlat
ds
or
stos
enter
or
mov
and
pop
push
push
pop
pop
mov
inc
fwait
sub
rcr
int3
cmp
daa
imul
inc
inc
repnz
and
lahf
cmp
xchg
jle
lock
aam
aad
xor
add
mov
arpl
test
mov
jne,pn
je
daa
es
push
into
scas
mov
mov
out
lock
loopne
xchg
sub
push
jge
shl
scas
fnstsw
cmp
jo
jns
leave
flds
adc
dec
mov
xchg
testl
add
sub
bound
mov
imul
fsub
mov
outsb
xchg
sbb
cmc
push
push
test
jp
hlt
mov
dec
std
cld
daa
jbe
shl
cmp
sub
lock
sub
push
cmp
dec
inc
cmpsl
xchg
bound
stos
adc
fisubrs
add
int3
mov
movsl
sbb
xor
sub
enter
icebp
inc
fldenv
shlb
mov
rcrb
sti
enter
add
and
push
cmpsb
cmp
fisttps
jnp
mov
sbb
mov
cltd
push
and
ja
cmpb
aas
lds
imul
or
push
inc
inc
mov
or
mov
cwtl
dec
lock
ret
fidivrs
hlt
bound
loopne
mov
ret
ja
cmp
mov
cmp
mov
cmp
sub
mov
fidivl
cmp
in
cmp
jae
adc
lcall
xchg
add
jne
ljmp
repz
add
cld
mov
push
pop
sbb
iret
int3
in
mov
cmp
xor
pop
xor
push
sbb
stos
das
aas
jp
nop
fstl
jo
xor
mov
jl
and
gs
xchg
cmpsl
push
add
jbe
cwtl
pop
sbb
mov
lret
pop
and
jmp
negl
les
out
repnz
clc
repnz
test
cmpsb
loope
jno
movsl
addl
inc
mov
stos
loope
sarb
cwtl
and
mov
adc
cmpsl
pop
popf
mov
jecxz
inc
mov
adc
cs
in
loopne
adc
arpl
rcll
sbb
movsb
repz
pop
mov
push
mov
mov
mov
cmp
leave
sti
jp
fstl
mov
mov
bound
loope
jg
dec
sti
adc
adc
cmpsb
daa
les
adc
pop
in
addl
fildll
sahf
adc
insb
andb
pop
sti
push
and
push
and
pop
sbb
lahf
jle
aas
mov
je
pop
outsl
test
in
pop
xor
sbb
dec
sub
int
inc
inc
cltd
sbb
movsb
loopne
js
imul
xor
mov
jnp
rcr
repnz
leave
mov
inc
imulb
js
lods
arpl
cmp
push
addl
js
mov
jno
ret
test
ret
adc
and
mov
sti
sbbb
jge
pusha
mov
mov
push
jecxz
repz
xchg
push
mov
xlat
insb
mov
mov
cmpsb
pusha
adc
dec
xor
sar
jno
ljmp
mov
pop
call
lods
lret
lock
fists
rcl
das
xorl
mov
xchg
bound
subb
out
inc
adc
enterw
enter
imul
mov
test
sub
and
fsubs
sbb
add
ds
shlb
scas
add
pop
or
jno
push
xchg
cmpsl
lods
adc
aad
xor
xor
sbb
shl
inc
mov
pop
cmpsb
jno
bound
push
cmp
mov
mov
or
mov
out
bound
test
add
lea
call
jecxz
lods
cmpsl
jmp
ds
negb
mov
inc
scas
out
fdivs
nop
loop
hlt
int
or
push
add
arpl
cmpsl
xor
test
into
scas
xchg
insl
add
inc
lret
jp
or
cmp
pop
test
es
cmp
ljmp
jg
ret
mov
mov
leave
cs
outsb
adc
mov
mov
adc
fsubrl
mov
stos
stc
mov
pop
enter
stos
jp
add
mov
pop
testl
fiaddl
cmpsb
in
cmpsb
dec
jge
add
push
stc
adc
imul
gs
sub
pop
aad
xor
lret
adc
add
mov
into
call
stos
ss
xchg
je
xchg
mov
seto
loope
lcall
pop
lahf
mov
movsl
sbb
outsl
cwtl
cmp
sbb
imul
mov
popa
xorl
cmp
mov
inc
icebp
divl
rorl
cmp
add
jb
mov
push
inc
test
cmp
fstpt
sub
push
dec
mov
data16
cwtl
nopl
pusha
lret
xor
sbb
push
jp
repz
test
shrb
xchg
fwait
popa
mov
mov
and
pusha
js
les
je
nop
sbb
dec
das
mov
ret
cmp
call
insb
sub
jnp
dec
sti
sub
fdiv
es
cwtl
jmp
fidivs
mov
ret
mov
inc
iret
and
fdivr
mov
push
shrb
lds
xor
insl
daa
xor
push
test
xchg
lea
sub
xlat
mov
pop
jmp
sub
jns
stc
mov
fdivl
jp
or
in
je
icebp
dec
jmp
leave
fildll
inc
clc
cmp
shrl
in
push
fdivl
repz
push
pop
dec
aam
scas
or
cwtl
jnp
cltd
push
pusha
cmpsl
adc
mov
aas
xchg
mov
repz
mov
stos
fildl
push
and
aaa
es
mov
xchg
sbb
lahf
dec
loope
dec
popa
mov
sahf
cwtl
adc
test
daa
inc
inc
fwait
adc
or
adcl
sbb
inc
rolb
jl
push
mov
js
outsl
into
lods
fiaddl
xor
es
fsubs
push
test
jecxz
push
jno
dec
lock
adc
or
daa
mov
repnz
aad
push
fistps
daa
stos
cmp
push
mov
mov
cmpsl
or
mov
ret
jg
repz
test
dec
imul
insl
jge
xor
aas
nop
subl
sbb
push
xchg
cmp
sbb
lods
and
jmp
mov
adc
and
push
jecxz
scas
dec
mov
adc
or
dec
rcrb
leave
xchg
or
xor
mov
loope
repnz
mov
mov
and
lret
mov
add
sbb
push
es
add
sbb
and
adc
and
push
mov
in
shll
sbb
fstpt
fiadds
ds
cmp
pop
xchg
imul
aas
pop
fisubrs
addr16
aaa
jae
leave
outsl
cmpsl
gs
xor
push
out
test
pop
cwtl
cmp
push
loope
mov
hlt
repnz
dec
fidivrl
fisttps
inc
or
lea
cmp
ja
popf
shr
es
sahf
inc
insb
dec
mov
or
xchg
imul
xchg
aaa
dec
movl
jp
and
aaa
jle
mov
fadds
test
xchg
add
push
pop
mov
dec
ret
mov
xchg
shlb
dec
lretw
cmp
cmp
mov
movb
pop
sub
push
jmp
or
push
popf
mov
stc
imul
add
scas
mov
insl
dec
push
cmc
dec
insl
mov
jle
mov
adc
mov
imul
pusha
out
mov
scas
adc
shlb
lret
test
pop
stos
hlt
scas
fbld
mov
and
sbb
xchg
jg
xchg
daa
out
jne
testl
sbb
push
xchg
or
xor
insb
cmp
sbb
pushf
pop
icebp
push
cmpsb
dec
dec
outsb
addr16
jp
lret
es
arpl
cmp
pop
mov
aas
sub
out
test
and
xchg
in
cmp
fildl
sbb
add
outsb
lret
das
jmp
cltd
js
cld
repnz
mov
int3
mov
cltd
xor
or
pop
or
adc
push
subl
out
cmpsb
mov
divl
subl
adc
aas
push
fwait
je
pop
push
fcmovbe
insb
cld
pop
shl
stos
cmp
leave
outsb
js
and
cld
test
add
mov
adc
scas
add
push
cmpsl
xor
push
adc
rcrl
mov
mov
and
sysexit
daa
dec
and
sbb
dec
or
fsubl
cmp
adc
rolb
mov
fsts
inc
hlt
pop
popf
hlt
dec
mov
jecxz
sbb
sti
push
inc
dec
and
mov
rclb
push
inc
or
outsl
out
lods
xor
popf
shll
flds
mov
xchg
dec
or
rol
mov
dec
movsb
or
outsb
aas
jp
pop
pop
out
sub
jmp
xor
lahf
fidivl
je
test
test
insl
cmp
jmp
fstpt
rorl
or
inc
or
scas
cltd
movsl
out
mov
add
sbb
in
cmp
sbb
pop
adc
fistpll
jno
mov
jnp
sub
sbb
incb
jg
jle
pop
and
cltd
ja
push
and
out
rclb
inc
imul
lsl
adc
scas
xor
mulb
ret
xchg
dec
out
dec
inc
sahf
int3
fs
popa
cmpsb
mov
mov
push
out
sub
sarb
xor
testb
sbb
enter
cmp
push
hlt
jg
xor
inc
sti
popa
lcall
aas
es
shrb
inc
sbb
aas
pop
mov
pop
mov
inc
ja
aam
or
testl
dec
push
lahf
or
lods
nop
leave
add
cmp
sbb
xchg
pop
pop
pop
push
fptan
into
cmp
jp
in
xlat
idivl
mov
or
fsubl
cltd
dec
dec
push
std
out
jg
ficomps
adc
scas
and
mov
push
adc
dec
sahf
shll
out
cmovnp
push
scas
pop
mov
xor
repnz
test
jg
and
cmpxchg
out
jp
out
in
sub
sub
pushf
pop
sbb
hlt
dec
inc
scas
mov
mov
popa
push
or
pushf
int3
dec
push
cwtl
pop
inc
mov
int
push
mov
mov
ljmp
xchg
shrl
and
andl
sbb
mov
adc
dec
push
daa
mov
mov
and
jb
adc
pop
xlat
and
mov
mov
sti
loop
xor
inc
jg
adc
gs
and
in
jns
das
icebp
incl
add
in
push
insb
dec
xor
mov
ficomps
jmp
or
nop
jecxz
mov
insl
das
lods
xchg
bound
loopne
test
lds
inc
pop
call
inc
lock
xchg
aas
lods
std
sbb
loopne,pt
cmpsb
jne
push
dec
xchg
test
sarl
fstp
mov
out
insb
inc
mov
add
sub
push
pop
outsl
jno
pop
mov
ss
mov
shll
lret
jmp
dec
mov
out
out
or
int3
or
pop
repnz
popf
scas
sahf
add
mov
push
sub
mov
jge
sarl
jns
aad
lods
inc
mov
out
and
fcoms
inc
cli
gs
into
loopne
inc
dec
dec
mov
ljmp
adc
push
int3
sub
mov
movsl
xor
aad
leave
popa
stc
mov
inc
fcompl
dec
aad
xor
pop
mov
or
inc
jecxz
ljmp
data16
filds
mov
test
cld
jge
outsb
call
gs
jecxz
xor
jbe
test
lahf
dec
cwtl
inc
dec
fdivrs
or
sti
add
and
cmp
lock
mov
into
xorb
cmc
rorl
xlat
inc
movsb
mov
pop
push
and
cmpsb
fadds
inc
das
and
fcompl
xlat
bnd
cmp
mov
stc
mov
inc
test
mov
mov
mov
jo
vmread
mov
push
daa
ss
xor
cmc
sti
lret
jge
cmp
xor
lods
xchg
cwtl
dec
cmp
adc
xchg
roll
fldt
add
test
in
mov
ud1
xchg
fcoms
loop
adc
push
and
xchg
jb
mov
pop
inc
loop
adc
clc
mov
cld
in
movb
sub
out
insb
mov
sub
ret
mov
cmp
addr16
mov
in
push
jge
lret
cmp
pop
pop
repz
pushf
dec
mov
add
cmc
sahf
movsb
xor
mov
mov
jbe
mov
cld
xchg
mov
push
mov
imul
ljmp
mov
mov
icebp
mov
repz
sbb
outsb
in
sub
gs
cltd
pop
inc
pusha
xchg
jp
lds
mov
hlt
xor
jp
int
mulb
test
push
cltd
mov
loope
test
jmp
mov
mov
out
pop
cli
add
jle
push
push
aam
test
in
rolb
fs
bound
mov
sbb
sub
cmp
or
xor
push
scas
rcl
imul
stos
push
in
xor
lret
ljmp
test
inc
fdiv
outsb
sbb
popf
dec
xor
aad
decb
iret
adc
mov
dec
ret
rcrl
daa
pusha
lds
js
cmp
sbb
repz
sbb
fiadds
or
inc
sub
ret
imul
arpl
pop
imul
scas
push
cmp
fcompl
ss
pop
pop
dec
data16
out
int3
inc
lock
andl
add
mov
test
pusha
call
add
leave
inc
pop
xchg
arpl
inc
divb
pusha
mov
and
mov
in
mov
jbe
gs
mov
imul
pusha
jae
sarl
test
cmp
out
push
jg
push
push
inc
in
add
loopne
xchg
adc
mov
jns
imul
sbb
jne
dec
or
cmp
shll
mov
lret
je
mov
jle
mov
cmc
mov
mov
pop
jae
sub
jnp
imul
cs
sbb
mov
push
ds
mov
mov
jmp
popf
sub
stos
repz
mov
sbb
add
dec
gs
popl
and
lock
cltd
adc
inc
ja
iret
or
icebp
loopne
mov
lock
cli
inc
inc
lret
mov
push
or
cltd
jne
out
cmpsb
push
test
jb
shll
pop
sbb
mov
dec
push
cld
xchg
out
out
jnp
fiadds
xlat
imul
out
inc
insb
cmp
pop
jl
xorb
lret
popf
dec
push
xor
repnz
sub
leave
adc
push
loopw
arpl
push
pop
xor
pop
mov
xor
ret
mov
fdivrl
xchg
adc
lahf
sti
addr16
jmp
bound
pop
mov
mov
inc
rorl
hlt
sub
aam
or
push
fdivl
or
mov
xchg
mov
sub
xor
inc
cmp
pop
push
pop
adc
shl
dec
fwait
test
and
jno
inc
dec
push
jae
inc
jge
inc
cmp
and
in
sbb
lret
push
pop
mov
xchg
int3
jb
xlat
adc
int
repz
jnp
fwait
sub
je
cltd
push
push
sub
loop
dec
pop
push
or
or
sbb
pop
push
shll
cld
push
idivb
dec
shrb
enter
lock
xor
pop
mov
mov
sets
or
mov
dec
mov
push
cmpl
daa
jg
pop
aas
pop
loopne
and
jne
and
mov
add
cmp
call
lret
sub
jp
call
pop
ds
data16
mov
inc
or
cwtl
mov
imul
push
push
xchg
adc
add
xor
push
fidivrl
popa
add
aaa
mov
shrb
out
out
push
cmp
ss
adc
pop
aas
and
test
ficoms
int
jle
jmp
mov
sub
adc
subb
das
out
push
xchg
lret
shlb
cmp
xchg
out
out
scas
inc
inc
mov
addr16
mov
mov
pop
iret
mov
testl
daa
push
xor
push
mov
and
add
sub
in
xlat
lahf
scas
ljmp
cmp
insl
and
mov
clc
sbb
loopne
roll
mov
stos
cmpsb
inc
aad
ja
jno
lds
adc
mov
jecxz
cmp
and
test
insl
ja
insb
cld
dec
iret
sub
mov
jmp
inc
rcrl
cmovns
mov
mov
adc
lods
sub
sbb
aas
sbb
lods
cmp
mov
dec
movsl
in
mov
lods
shl
mov
adc
ja
adc
sbb
movsb
add
das
and
cwtl
dec
sub
ja
imul
jnp
xor
stos
cmp
es
test
outsl
mov
test
xchg
mov
push
push
mov
cmp
pop
ds
imul
aad
add
sub
scas
add
dec
mov
xchg
push
cmp
outsl
pop
mov
jbe
or
lds
mov
mov
xor
mov
xchg
in
rorl
into
dec
repnz
aas
mov
das
inc
inc
lds
push
adc
pop
les
shll
pop
jae
xchg
clc
pop
mov
mov
cmc
gs
loope
js
imul
xchg
repz
ss
fwait
or
mov
xchg
icebp
and
scas
pop
push
push
and
and
mov
mov
dec
shlb
cs
out
dec
and
inc
add
stos
out
inc
leave
mov
pop
xor
xchg
sbb
push
sub
xchg
lock
lahf
sbb
test
lahf
xchg
sbb
mov
pushf
xor
sti
cmpsb
cmpsl
mov
fwait
roll
lret
imul
roll
xchg
mov
ret
inc
xor
es
out
push
mov
andl
das
cmp
idivb
jmp
jo
out
lret
mov
jmp
pop
adc
mov
mov
rclb
pusha
cmp
dec
adc
jp
push
rorb
adc
arpl
xor
outsb
mov
bound
cli
ret
mov
and
mov
leave
call
fistpll
mov
pop
lods
lret
and
int3
dec
ds
and
push
sbb
iret
sbbb
daa
pop
pop
rolb
mov
stos
xor
add
int3
xor
es
pop
mov
xchg
pop
mov
sti
and
sarl
lods
hlt
push
das
inc
xlat
cmp
cltd
clc
push
ret
jp
pop
lahf
jmp
xor
mov
in
out
adc
rolb
stc
jl
mov
or
pop
dec
push
in
icebp
push
adc
in
shl
push
inc
mov
insb
enter
push
mov
sbb
adc
mov
mov
and
inc
les
or
mov
jmp
push
insl
pop
or
mov
lcall
xor
std
call
mov
sti
lahf
icebp
push
jns
movsl
mov
jb
ljmp
ffreep
adc
pop
mov
test
ficoml
loop
sbb
das
loop
dec
nop
in
push
daa
adc
movsl
add
mov
ljmp
ret
dec
xchg
push
sub
add
mov
dec
jo
outsb
inc
sahf
sub
cli
mov
dec
fadds
addr16
gs
mov
sub
or
arpl
jle
mov
xorb
ja
mov
imul
ret
gs
arpl
movsb
adc
xor
jl
and
lods
cs
lret
sbb
test
stos
cli
js
or
or
xor
inc
sub
adc
scas
xchg
push
mov
push
push
lds
repz
flds
data16
pop
dec
and
or
sub
imul
cld
push
fadds
test
adc
xor
mov
mov
mov
mov
pop
add
addr16
stc
or
rcll
pop
fildl
icebp
mov
dec
push
into
lds
arpl
out
js
loop
rolb
mov
jb
mov
out
ds
cmpsl
mov
mov
cmp
pop
add
mov
jle
xchg
fadd
xchg
std
stos
cwtl
sbb
popf
cmc
push
cmp
insb
push
cmpsb
fdivrs
or
push
xchg
push
ret
sbb
jae
and
es
sub
iret
or
or
pop
add
xchg
and
dec
inc
jae
push
mov
sbb
aad
rorl
test
enter
mov
push
jmp
dec
pop
mov
hlt
addr16
push
and
mov
mov
je
std
or
mov
mov
test
sub
sahf
outsb
aad
loope
lods
ss
insl
sbb
mov
js
icebp
sbb
and
enter
mov
arpl
js
mov
push
adc
loope
adc
out
pop
fildl
mov
lods
pop
mov
mov
xchg
push
nop
hlt
or
mov
into
mov
aad
push
clc
cli
shrb
sub
push
cld
sub
dec
ret
rcrl
ss
push
push
push
stos
and
popa
cmpsl
jl
scas
pop
pop
mov
call
adc
and
mov
xor
lret
ljmp
cmc
mov
dec
je
sub
lock
jg
inc
push
je
hlt
mov
sbb
not
cmp
arpl
jo
jb
ds
or
add
jns
iret
ljmp
aam
shlb
or
fs
iret
ja
add
add
fadd
xor
jae
rcrb
jge
call
sti
dec
xor
movsb
pop
negb
jmp
notl
push
rcll
ljmp
adc
xchg
sub
mov
daa
outsl
mov
int
dec
ret
push
pop
popa
arpl
push
pop
shr
hlt
adc
push
pushf
icebp
cmc
push
out
out
or
pop
inc
xchg
add
popa
xchg
daa
ffreep
pop
in
aas
sarl
cmpsl
mov
fisubrl
aaa
in
sahf
xor
dec
daa
loope
xor
in
xor
aas
push
enter
push
add
pop
dec
rcll
cmc
jmp
sub
shlb
lahf
mov
cmp
loope
lahf
xor
fistl
add
out
imull
sub
test
out
or
jae
dec
fidivl
adc
fisubs
jp
xchg
js
fmuls
cmpsb
data16
push
scas
insl
in
mov
cld
mov
inc
aam
test
lods
and
xor
leave
or
adc
push
add
sbb
or
jne
das
sbb
les
int3
jb
out
jno
xchg
dec
inc
orb
or
sub
inc
sbb
xor
push
mov
ret
xor
jnp
adc
xor
aam
int3
pop
into
xorb
test
or
and
ret
dec
mov
mov
push
mov
dec
dec
loop
jecxz
std
imul
push
ret
cs
adc
pop
sub
push
movsb
push
xor
xor
sarl
out
test
rcrb
mov
stos
int3
out
loope
ficoml
mov
leave
mov
mov
push
pop
call
imul
push
xchg
inc
imul
dec
mov
in
pop
lds
mov
test
cmp
ja
jb
into
and
fmuls
loop
and
in
xor
mov
cwtl
clc
sub
in
sar
jp
adc
int
jecxz
or
imul
fstps
xlat
xchg
add
push
cs
shl
inc
pop
or
fidivrs
cwtl
stc
jg
stc
push
lods
adc
xchg
xor
clc
mul
sbb
dec
or
and
adc
rolb
scas
xor
pop
sbbb
xlat
dec
cmpsl
push
loopne
fs
mov
dec
stos
shll
mov
inc
jb
mov
subl
inc
adc
jecxz
mov
fucomip
sbbl
sub
test
jl
or
out
mov
orl
mov
jge
add
inc
or
arpl
push
gs
bound
outsl
enter
sahf
aad
adc
xchg
xlat
add
int3
out
push
push
punpcklqdq
and
push
orb
outsb
xchg
adc
or
add
mov
cli
les
dec
ret
and
xor
movsb
lret
mov
sbbb
fdivl
es
or
pushf
jno
ss
les
loopne
jecxz
cwtl
cmc
jmp
cmc
mov
stc
fs
fmul
popa
scas
call
pop
pop
dec
in
cmc
or
dec
outsl
test
inc
cmp
int
ds
dec
jnp
ret
ja
rcl
dec
pop
insl
add
sbb
mov
xor
jl
add
shrl
nop
xor
popa
cmc
lcall
jae
jg
add
or
mov
push
mov
pushf
mov
jb
cmp
jns
aas
nop
jne
or
in
cmp
xchg
push
cmpsb
ret
lcall
clc
into
inc
mov
jbe
adc
mov
cmp
push
ljmp
sub
cltd
adc
pop
lock
imul
leave
test
xchg
mov
test
shr
mov
push
adc
adcb
jno
or
push
cmp
enter
push
bound
js
iret
add
push
xor
neg
movsb
mov
in
and
cmp
out
xchg
arpl
dec
lahf
popf
fistpl
mov
icebp
or
sub
jb
sub
in
jg
dec
popf
mov
mov
jge
js
or
jp
movsb
pop
or
xor
cmp
enter
push
in
push
adc
pop
pop
jg
adc
sahf
xchg
stos
in
mov
in
pop
cmc
loop
ficoms
insl
dec
jbe
jns
and
mov
jae
push
es
shlb
or
dec
pop
les
call
dec
shll
xchg
xchg
dec
or
and
stos
mov
mov
jns
add
cmpsl
adc
icebp
xor
cmp
maxps
out
xchg
or
or
ret
xor
ss
sub
arpl
sub
cmp
loop
inc
lds
xor
test
jp
and
fbld
ret
and
test
push
fistps
pop
rorb
stos
xchg
jne
repnz
fnstcw
fs
loop
cli
push
jg
xor
inc
stc
push
xchg
shll
or
int3
into
mov
push
xor
dec
or
outsl
adc
add
or
xor
push
dec
cld
mov
lods
pusha
push
jbe
and
fstps
call
aad
jmp
dec
mulb
insl
sbb
dec
sub
jp
add
cmp
leave
iret
je
psrlw
stos
in
insb
adc
push
enter
and
mov
jmp
jo
jo
aaa
xchg
xor
fadds
stos
push
jl
out
aad
stos
pop
sti
mov
mov
dec
adc
push
jge
ret
enter
rep
sbb
pop
inc
jno
sbb
add
cwtl
arpl
ret
push
in
cmp
push
stos
xchg
inc
and
inc
push
xchg
dec
lock
sub
cmc
xchg
in
cmp
clc
mov
pop
xor
and
xchg
xchg
xchg
jb
xor
out
or
or
lret
pop
pop
push
xchg
jbe
mov
sarb
adc
push
popf
stos
ss
or
inc
xor
shrl
mov
test
lods
insl
fsts
xchg
out
jg
loope
sbb
jne
cmp
incb
mov
lahf
inc
jnp
shrb
dec
dec
xor
stos
sbb
ror
out
and
sbb
imul
mov
xor
daa
jae
push
aam
jecxz
rolb
jns
push
ljmp
inc
enter
leave
xor
test
push
mov
rol
inc
xor
push
daa
jne
mov
cmpsl
pop
mov
stos
xlat
mov
imul
sub
mov
movsl
xchg
pop
mov
jg
enter
testb
sbb
mov
dec
sbb
add
movb
test
inc
in
lahf
incb
insl
sub
fstps
mov
aad
mov
or
jns
repz
idiv
cltd
movsl
pop
cmc
xor
xchg
cmpsl
or
filds
mov
ds
push
mov
xorl
and
sub
mov
cmp
es
pop
call
std
ja
adc
out
xor
mov
cwtl
cmp
sbb
inc
popa
inc
sub
std
mov
mov
fdivp
xor
test
and
jmp
ret
and
push
and
cmc
sbb
and
bound
out
lods
sbb
or
test
mov
dec
jne
rclb
sub
and
mov
add
shr
and
and
and
pop
stc
in
out
jbe
cmp
cld
mov
dec
outsb
in
inc
lods
out
jg
in
repz
movsb
dec
mov
aam
cli
jo
cmpsl
push
stos
pop
jmp
clc
cmpsl
mov
xor
into
jae
xor
add
push
test
dec
fmul
dec
test
hlt
adc
imul
sarb
ret
outsb
xor
shll
cmp
xor
dec
cmpl
xor
jl
imul
inc
sub
sbb
dec
repz
test
and
jge
outsb
pop
mov
sub
inc
pop
xor
pop
mov
or
mov
cli
in
pop
sbbl
xor
sbb
adc
jns
pusha
rcrl
je
leave
sbb
and
mov
ret
outsl
imul
aad
mov
push
adc
lea
mov
sbb
push
xlat
sbb
sbb
out
pop
add
inc
mov
js
lret
sahf
inc
in
lahf
pop
movsl
imul
adcl
enter
push
je
bound
xor
psubw
cmp
stc
aaa
dec
push
pushf
insb
dec
push
mov
cmp
xor
xchg
mov
int
jmp
adc
xlat
xchg
xor
sub
mov
ja
mov
incb
mov
je
orl
rcl
imul
imul
enter
add
adc
add
mov
jnp
push
lret
loope
inc
lock
andb
adc
stos
in
dec
xchg
fucomp
data16
cmpsl
xchg
inc
rol
daa
jnp
mov
ficoms
xchg
inc
pusha
cmc
movsb
repz
push
pop
fisttps
cmp
adc
out
xchg
ret
stos
or
add
call
ss
pop
inc
daa
xchg
adc
cmp
xchg
adc
nopl
jmp
pop
mov
inc
mov
ds
out
enter
les
cwtl
sbb
aaa
pop
and
outsb
int3
jo
inc
xrelease
xor
pop
push
add
lds
aad
xor
mov
mov
lret
pop
jecxz
or
test
jbe
and
xchg
fucomp
das
ficompl
fisubl
pop
xor
sbb
mov
leave
out
std
jo
cmp
or
leave
imul
push
add
push
cwtl
repz
or
sbb
add
jo
pop
jb
mov
pop
inc
sbb
xlat
adc
mov
xchg
daa
int3
repnz
mov
mov
mov
sti
aas
jp
mov
xor
roll
pushf
cli
jle
or
ja
iret
sbb
mov
mov
inc
scas
popa
test
sahf
lcall
loope
adc
push
adc
loopne
or
inc
xor
test
lcall
cs
pop
mov
jmp
adc
push
out
jmp
adc
jbe
lock
dec
and
push
inc
pop
fsubs
mov
lahf
jmp
xor
movb
jbe
mov
inc
add
cmpsb
shl
xlat
lahf
lock
adc
gs
add
dec
ds
cmp
aas
adc
icebp
int
mov
les
je
in
and
mov
lods
fxch
pop
jmp
lcall
or
sbb
pop
sahf
frstor
rcr
add
cmpsb
daa
outsl
into
das
mov
fs
xchg
iret
icebp
pop
jb
icebp
push
das
push
test
pop
je
lods
lret
xor
loope
pusha
roll
imul
dec
test
out
xchg
mov
sbb
outsb
push
mov
pop
sahf
iret
xchg
push
sub
or
inc
add
in
adc
or
ret
jmp
pushf
mov
push
adc
mov
aad
mov
je
and
add
xchg
ror
test
test
xchg
adc
mov
add
dec
sbb
xor
pop
or
rcr
inc
xor
mov
shrb
negb
cli
repnz
pop
adc
fs
mov
push
xchg
fwait
in
dec
cmp
pop
mov
cmpsb
sbbb
imul
icebp
sub
insl
shl
pusha
add
inc
cmpsl
ret
xchg
pop
pop
leave
in
pushf
sub
sub
push
shll
fimull
inc
sahf
or
insb
aas
jp
adc
les
or
pop
jecxz
jbe
cmp
cli
hlt
bound
cwtl
jmp
or
aad
lahf
xchg
leave
pop
bound
fisubrs
pop
cmp
mov
andb
mov
inc
lods
inc
mov
stos
cmc
insb
loop
push
sti
dec
push
movsb
in
adc
fildl
adc
loopne
xor
adc
mov
icebp
and
ret
in
cmp
cmp
or
add
cmpsl
enter
cmpb
xchg
pop
jmp
and
push
scas
in
lods
jle
ljmp
add
js
test
repnz
movl
and
cld
push
pop
aad
out
data16
pop
and
and
out
sar
push
jg
add
mov
jl
and
push
fwait
jb
lret
jno
xor
ss
lahf
loop
dec
subl
addr16
adc
xchg
out
andb
stc
jb
das
push
int3
sbb
cmpsb
loope
pop
insb
xchg
mov
push
sub
xor
push
addl
mov
loope,pn
adc
lods
mov
in
inc
bound
cmp
xor
jno
xor
dec
jge
sbb
sahf
out
jp
lds
inc
xchg
cmp
jmp
lock
push
sub
lock
jge
add
sbb
cmp
inc
push
push
inc
mov
aaa
fldenv
imul
aad
inc
cwtl
sub
push
push
movsl
enter
adc
cwtl
inc
scas
test
pop
xchg
aaa
aas
test
jno
ret
push
xchg
dec
leave
mov
mov
push
xor
sub
mov
xchg
aaa
sahf
stc
into
add
cmp
push
mov
loop
jg
or
sahf
sbb
mov
gs
imul
imul
mov
out
stos
imul
pushf
lock
dec
and
stos
sub
int
xor
sbb
sub
dec
hlt
dec
scas
leave
fwait
add
hlt
inc
in
mov
lods
push
shrb
pop
ss
adc
cwtl
xchg
clc
out
xchg
and
test
mov
insl
mov
jp
xchg
xchg
mov
imul
fildl
int
in
inc
test
insb
aad
or
push
ret
repz
clc
push
cmp
cmp
iret
jmp
push
sbb
xor
cld
loope
sub
aas
pop
dec
fsubr
or
lds
scas
scas
and
lods
addr16
jge
jecxz
sti
push
xchg
lock
add
inc
cwtl
lahf
outsb
or
mov
es
add
pop
pop
jno
xchg
jbe
fwait
out
push
inc
sbb
jmp
loop
icebp
data16
dec
iret
mov
xor
cmp
mov
add
pop
addr16
imul
add
xor
das
pop
stc
movsl
adc
xorb
insb
int3
fiaddl
icebp
mov
cmp
in
mov
add
cltd
jg
cltd
xlat
stos
lret
iret
pop
in
std
inc
stos
pop
popa
loope
shrb
out
std
mov
dec
cmp
icebp
pop
mov
dec
fcmovb
enter
sbb
dec
push
shl
jnp
dec
xor
stos
dec
rorl
xchg
or
gs
fdivr
leave
mov
leave
xor
ljmp
cmp
cwtl
test
scas
mov
xchg
pop
xlat
cmp
mov
ss
mov
roll
nop
call
test
sub
out
cmp
mov
mov
mov
lahf
inc
cmp
stos
ss
jl
scas
adc
pusha
cmpsb
push
and
and
nop
cli
fidivs
sub
fwait
and
inc
dec
in
int3
insb
mov
mov
js
leave
scas
dec
inc
or
sub
sub
sub
dec
popa
mov
movsb
sbb
mulb
clc
jge
push
jg
jp
inc
adc
mov
lahf
cltd
addr16
loope
xchg
fwait
les
out
nop
pop
push
test
xchg
aaa
mov
into
ljmp
jnp
rclb
jge
dec
je
mov
jns
xchg
stos
jae
out
iret
mulb
lcall
or
popa
push
mov
xchg
xor
and
mov
push
imul
mov
add
xlat
fistps
repz
mov
fsts
std
xor
or
sub
xchg
scas
orb
fisubrs
into
fsubr
jmp
push
push
enter
xchg
das
mov
dec
xchg
cmpsb
cmp
mov
cmp
mov
ja
jnp
or
mov
push
loop
jno
jnp
xchg
push
je
push
scas
das
push
adc
shlb
add
xchg
pop
mov
mov
inc
mov
mov
pushf
pop
pop
add
dec
test
or
push
push
rol
dec
fidivrl
mov
addl
cmp
xchg
jl
cltd
in
push
inc
jns
dec
mov
cmp
or
inc
popa
push
je
mov
decb
mov
ror
add
cmp
stc
dec
movsl
in
mov
dec
mov
mov
jb
and
negb
outsl
cs
xchg
mov
add
cmpb
rcrb
adc
cltd
or
inc
loopne
xchg
popa
cwtl
jne
inc
xchg
rcll
clc
stos
or
arpl
aas
jge
xorl
pop
xchg
pop
mov
and
ret
xor
stc
loope
mov
pop
lret
jp
hlt
sbb
icebp
aaa
lock
imul
sti
outsl
pop
mov
add
js
inc
mov
or
mov
sbb
pop
dec
add
push
or
js
or
push
xchg
push
lea
xchg
sbb
mov
decl
movsb
xlat
pop
lods
mov
jo
push
leave
popf
and
pusha
fs
loop
cmp
xchg
lret
xor
ss
dec
sahf
leave
push
inc
lock
jmp
jbe
and
xor
xchg
xchg
adc
ja
out
pop
aad
cmp
mov
fisubl
and
aaa
push
adc
xorb
cmp
add
push
or
xchg
xor
pushf
jle
adc
dec
loope
pushf
push
stos
jo
or
lods
add
dec
jns
std
jp
ret
jbe
jg
xchg
pop
shlb
arpl
fwait
lock
or
out
jns
mov
pop
mov
inc
insb
popa
cwtl
fdivr
xor
outsl
mov
je
notl
inc
popf
add
repnz
jl
mov
ror
push
mov
loope
jns
mov
js
or
out
sbb
and
inc
adc
cmpb
js
jg
out
loope
repnz
clc
pop
cmc
xchg
or
adc
or
and
sbb
testl
cmpsl
out
sub
adcb
jno
or
xchg
andb
les
test
imul
rclb
ret
bound
hlt
mov
jmp
inc
mov
inc
or
inc
cmc
out
fcoms
leave
dec
aam
add
cmpsl
mov
sbb
pop
fstl
stos
push
test
cmp
repz
sub
cmp
sbb
inc
loop
cmp
ja
iret
xchg
negb
popa
add
cli
push
hlt
mov
mov
push
enter
sub
adc
xchg
mov
nop
sbb
mov
cmc
push
popa
nop
xchg
outsb
push
mov
add
shlb
and
dec
std
xchg
ds
mov
gs
cmp
sub
enter
inc
out
mov
sti
mov
cs
test
iret
int3
movsl
in
or
imul
mov
ds
cld
repz
in
mov
dec
xor
rol
insl
mov
sbb
in
and
inc
pop
cmp
pusha
pop
ds
repnz
test
lods
lahf
stos
hlt
test
pop
inc
and
repnz
mov
mov
xor
sub
rcll
cmp
bound
sbb
sub
lods
xor
mov
cmp
push
dec
mov
pop
mov
lret
jo
ds
pop
sbb
aas
push
push
js
dec
adc
sbbb
outsb
out
inc
leave
cmp
pop
jmp
mulb
inc
or
fadds
popa
push
mov
int3
inc
push
aas
in
dec
sbb
push
jmp
imul
pop
inc
insl
fistps
mov
in
inc
out
loopne
iret
sbb
sbb
sbb
mov
add
push
pop
aas
shlb
push
xchg
js
mov
dec
mov
mov
cld
idivl
out
call
in
std
dec
cmc
cld
dec
popa
test
fistl
jg
fistps
sbb
xchg
movsb
insb
sbb
cmp
xor
adc
insl
inc
rorb
push
jae
xor
jle
jbe
int
shll
add
adc
loop
test
jmp
adc
stos
test
and
or
push
dec
shll
loop
add
ret
scas
dec
and
lahf
test
jo
lock
jne
add
pop
test
ret
xchg
sub
ss
sub
xchg
inc
sbb
adc
mov
fimuls
stc
test
cmp
dec
cmp
imulb
out
xchg
mov
rcl
out
jmp
rorl
mov
push
add
mov
push
in
dec
jns
adc
ljmp
cld
inc
dec
cld
mov
movsb
pop
in
out
das
test
push
addr16
repz
repz
pop
xor
stc
cmp
adc
repnz
push
pusha
out
xchg
call
adc
mov
pop
fimull
inc
push
sub
inc
mov
push
daa
mov
push
cmp
shlb
enter
cmp
fdivrp
loopne
pop
stos
push
inc
fstps
inc
ficoms
xchg
sub
and
fidivs
imul
xchg
pop
ret
xchg
push
inc
jmp
mov
in
in
movsl
cmp
mov
dec
pop
call
mov
or
insb
or
dec
lret
xor
lcall
rol
add
stc
les
inc
sbb
loopne
xor
cmc
pop
lret
adc
faddl
stos
in
mov
jns
int3
fcoml
pushf
shll
adc
inc
adc
sub
push
mov
push
inc
adc
call
mov
std
out
dec
and
mov
cmpl
mov
inc
inc
pop
mov
xor
push
lods
sbb
inc
in
shr
sbb
int3
or
ljmp
ror
popf
subl
adc
mov
imul
fstps
push
les
inc
inc
mov
add
movb
cmp
sub
rolb
lahf
loop
out
shll
fisttpl
pop
outsl
cld
unpcklps
jle
jmp
jg
mov
cmp
std
mov
xchg
sbb
jmp
cmpsl
sbb
sub
jl
hlt
xchg
idiv
xor
cmc
dec
jbe
add
or
ret
or
lods
xor
mov
in
xor
gs
mov
aad
std
pop
mov
fimull
or
test
xchg
jge
jle
and
cmp
popa
pop
pop
insl
mov
popa
pop
inc
mov
into
add
push
test
cmp
jo
addr16
pop
rcll
adc
out
add
loopne
mov
data16
loope
subl
xchg
fildll
sti
or
call
jne
test
mov
mov
imul
repz
arpl
fwait
je
inc
sub
pop
int
bound
aaa
fidivs
mull
test
or
and
mov
mov
dec
push
sbbb
frstor
fnstenv
mov
dec
pop
push
and
shlb
cmp
call
jno
rcrb
mov
add
cmpb
push
je
or
or
mov
or
popa
in
mov
call
mov
jne
loopne
rol
idivl
clc
sbb
push
mov
and
out
xchg
push
pop
scas
xor
pop
es
lods
jne
lret
in
lret
imul
aaa
add
fimuls
xorb
cli
ss
ljmp
adc
xchg
or
mov
xor
sbb
xchg
cltd
jp
rcrb
rclb
or
inc
fcom
mov
adc
mov
pop
xchg
push
push
in
insb
loop
inc
movsb
sbb
jbe
mov
jbe
or
stc
ja
popa
mov
fistl
adc
enter
imull
xchg
mov
jge
data16
js
into
outsb
fstps
out
sub
jecxz
in
scas
js
lret
add
cli
xor
clc
call
mov
inc
pop
ljmp
cmp
sbbl
into
pop
cmp
rorl
orl
out
jl
adc
inc
andb
daa
enter
push
push
movsb
cmp
das
fwait
gs
fdivr
insl
or
ficomps
push
jp
sbb
adc
or
mov
and
mov
mov
sahf
in
mov
fcmovb
push
fsubl
inc
fdivp
fs
iret
gs
pop
mov
jmp
push
mov
inc
and
xchg
or
mov
movsb
or
sub
lods
push
add
movsb
mov
movsb
xchg
sub
leave
mov
mov
mov
jb
sbb
cmpsb
ljmp
lahf
inc
pop
mov
lret
mov
adc
pop
jp
xor
adc
jbe
xchg
push
mov
pop
cld
nop
sub
iret
mov
inc
push
clc
addb
orb
and
or
xchg
pop
out
in
ds
adc
push
and
mov
jmp
add
and
cmp
and
cltd
sbb
dec
jecxz
add
scas
push
push
xchg
mov
add
add
clc
xchg
mov
js
movsb
cmp
outsl
xchg
icebp
nop
out
or
and
mov
fnstsw
dec
and
repnz
outsb
add
xor
adc
push
mov
push
fcmovnu
test
lods
rorb
cmp
cltd
mov
cs
or
mov
mov
cli
mov
cmp
jbe
lea
cmc
inc
fmul
mov
stos
jnp
cmp
cmp
pop
das
xchg
pop
hlt
scas
pop
popa
fcoml
jae
lods
stos
dec
mov
push
jae
sbb
sbb
stc
mov
add
out
loope
add
in
test
sbb
aas
insl
test
insl
dec
lods
cmc
nop
adc
push
push
insb
out
rcl
inc
sbb
in
test
fldl
shrl
cmc
test
jns
cmp
add
and
fistpll
add
cmpsl
outsb
mov
xchg
inc
mov
adc
dec
clc
outsb
mov
push
inc
repnz
popl
inc
cmpsb
push
adc
js
sub
pushf
insl
mov
cmpsl
ds
adc
ss
decl
dec
sub
xchg
inc
dec
out
add
cli
inc
inc
dec
or
jecxz
mov
idivb
out
movsl
mov
jmp
sub
sub
mov
imul
ja
in
nop
loop
outsl
mov
stos
jno
fildl
mov
sub
icebp
cmp
add
push
sbb
xor
movb
jb
xchg
sbb
bound
sub
sbb
cmp
xor
sbb
ja
xlat
sbb
cmp
out
xchg
sbb
fimull
mov
mov
loope
pop
fdivl
or
sbb
or
movsb
icebp
xlat
mov
inc
adc
sbb
aam
jle
into
iret
popf
cmp
xchg
push
push
jl
jno
xor
or
dec
and
call
je
push
add
addr16
popf
js
into
fcmovnbe
jmp
mov
scas
xchg
push
xchg
adc
dec
push
inc
imul
xchg
push
int
aam
jmp
popf
adc
scas
sahf
popl
jne
arpl
push
cli
int3
jmp
aad
jns
adc
cltd
das
add
negb
jle
mov
xchg
lcall
psubw
or
in
push
gs
mov
xchg
cld
faddl
mov
inc
cmp
sub
call
sub
rorb
xor
out
insl
jb
and
dec
sub
and
lea
jge
call
inc
adc
scas
fdivrp
rcl
cld
fisubrs
mov
fsubrl
popf
and
fcmovne
sbb
orl
cmp
mov
add
jo
sahf
xchg
enter
repz
push
inc
push
out
add
mov
int3
add
lock
out
aad
or
bnd
cld
repnz
and
out
mov
mov
sub
lcall
sahf
jp
inc
jmp
mov
loope
mov
es
rclb
int3
inc
push
cmp
inc
negb
ret
fsub
popa
stos
jge
push
mov
stos
mov
sub
or
inc
xchg
adc
enter
jecxz
sahf
lret
dec
loope
call
push
rcll
outsl
sarl
xor
rcll
adc
mov
dec
shll
xchg
xchg
scas
push
mov
pop
dec
jecxz
movsl
lods
in
mulb
sti
mov
idivl
pop
xlat
lods
jo
dec
lahf
loop
adc
cmpsb
or
push
repz
adc
ror
ret
xchg
mov
mov
shl
cld
sbb
cli
aaa
adc
and
adc
bound
jne
fisttpl
loope
sub
jae
pop
test
pop
jp
notb
mov
popf
and
fwait
and
inc
movb
xor
cli
call
inc
mov
dec
aas
clc
jne
icebp
sbb
sbb
out
jno
mov
jo
icebp
inc
jmp
xchg
bound
mov
pop
and
or
scas
add
cmp
dec
sarb
ja
out
mov
out
lret
ret
stc
xchg
ret
pop
cmp
mov
cld
pusha
imul
test
jge
xchg
mov
xor
sbb
pop
xor
and
inc
lcall
xchg
lods
xlat
lret
ret
adc
into
ja
jo
in
sti
mov
mov
orb
mov
ss
shll
ss
ds
jne
cltd
dec
nop
jo,pn
cli
jle
loopne
push
out
jmp
xor
and
jle
iret
push
xor
cmp
cmp
push
inc
xlat
pop
push
push
jge
insb
pop
in
dec
mov
imul
or
out
in
ret
mov
jae
xchg
cmp
push
dec
movsb
popa
test
push
and
dec
or
jo
xchg
pusha
mov
pop
xchg
stos
rorl
or
cmp
lret
cs
sub
jecxz
insb
jnp
fwait
xchg
dec
pop
pop
movsb
jbe
or
dec
cmp
and
lea
js
inc
pusha
jg
jg
aad
leave
dec
roll
in
sahf
inc
lds
in
in
outsb
jae
adc
inc
or
test
dec
add
jnp
xchg
xor
or
mov
hlt
leave
add
push
pop
push
stos
fisubrl
aaa
push
xchg
add
mov
cld
mov
jbe
xchg
push
shlb
mov
push
stc
xchg
je
jecxz
or
or
push
cmpsb
jl
xchg
push
in
nop
sahf
pusha
das
lahf
inc
out
push
in
addr16
pop
jg
sbb
cmpsl
bound
div
clc
shll
mov
xchg
xlat
ficomps
ljmp
pop
fcomps
cltd
xchg
push
insb
add
aas
hlt
stos
mov
movsl
ds
xchg
and
xor
cmp
xchg
xor
mull
dec
loope
jae
ljmp
rcrb
lock
jo
dec
pop
push
cmc
hlt
push
cltd
jg
dec
faddl
add
cmp
insl
adc
and
dec
sub
int3
cmp
pop
or
cmc
mov
dec
cmc
adc
cmp
insl
mov
js
pop
je
jmp
jg
and
and
push
sarl
ds
fstl
jo
inc
and
notb
xchg
pop
cmp
pop
cmpsl
out
jl
mov
mov
inc
dec
or
idivb
movsb
inc
jbe
in
mov
jge
in
ja
clc
push
add
je
cmpsl
data16
outsl
mov
adc
iret
arpl
pop
outsb
or
mov
cmp
xchg
sub
add
xchg
xor
pop
notb
push
fldenv
cmp
icebp
mov
sbb
inc
add
and
mov
sub
add
jae
shll
push
push
fimull
mov
mulb
daa
pand
sub
inc
xchg
and
mov
xor
xchg
out
mov
ss
lea
inc
xlat
mov
dec
dec
pop
push
insl
lea
popf
jecxz
push
les
shrd
shl
lds
mov
cli
cmp
dec
cmp
divl
add
or
mov
sbb
stc
inc
xor
and
jae
setno
rcrb
stos
icebp
fldenv
dec
imull
dec
pop
lahf
jg
insl
aas
or
inc
push
add
push
fdivrs
shrb
push
in
dec
sub
aam
mov
push
sub
jl
lret
fcmove
pop
js
pop
mov
ja
iret
mov
push
cmp
cmpl
dec
sub
jbe
sub
pop
inc
cmp
cmp
dec
cld
fildll
mov
push
js
leave
and
mov
xlat
and
mov
xor
pop
int
call
sbb
inc
sub
iret
aam
shr
icebp
stc
ljmp
and
jecxz
dec
scas
ficomps
adc
inc
punpcklwd
pop
jb
xor
ret
outsb
mov
ds
shrb
jae
out
aaa
es
sub
nop
push
jmp
add
dec
cmp
sub
xchg
inc
cmpsb
clc
or
negb
nop
sub
dec
add
mov
mov
cmp
rol
dec
notl
daa
mov
adc
loop
dec
inc
or
mov
sbb
xchg
jmp
push
notb
rorl
mov
cmp
cld
xchg
scas
xchg
xchg
stos
cld
out
pop
in
jo
inc
adc
repnz
ret
sbb
pop
mov
cli
mov
xchg
lea
xchg
mov
jecxz
addr16
mov
dec
shr
out
and
mov
push
aas
inc
iret
and
loop
add
pop
dec
push
push
movsl
loope
mov
and
shrb
popa
sub
fcomps
mov
aam
mov
insb
adc
adc
rorb
insb
ja
cltd
or
mov
xor
add
jmp
out
and
arpl
icebp
sbbl
sub
xor
test
pop
out
aam
push
ja
insb
adc
cmp
ror
xchg
out
leave
adc
imul
call
mov
adc
orl
jmp
lock
push
mov
lahf
mov
popa
das
and
mov
fcmovbe
aas
push
mov
pop
loopne
bound
ret
jo
in
and
hlt
or
cli
mov
lods
lea
cmpl
ljmp
rorl
add
lret
cmc
mov
xor
ss
fs
xchg
xchg
js
icebp
mov
aad
enter
imul
enter
pop
mov
ss
mov
add
sbb
mov
outsb
xor
cmp
mov
dec
lea
pop
mov
dec
mov
mov
daa
outsl
test
hlt
repz
xchg
inc
cltd
pop
xor
into
add
jmp
fxch
cmp
into
hlt
pop
les
iret
xor
xor
ljmp
pusha
mov
fimull
stos
xchg
ret
cwtl
jle
shr
xor
pushf
mov
cmp
cld
sub
pusha
sbb
pop
ret
inc
daa
or
push
loopne
mov
push
leave
xor
daa
ret
repnz
test
hlt
sbb
sbb
or
push
jp
mov
cmp
pop
jns
push
push
stc
add
push
xor
and
add
xchg
fdivrs
adc
adc
int
call
sbb
add
arpl
fsubr
cmp
sbb
lret
xchg
push
mov
clc
cmp
cmpsl
jns
mov
gs
int3
jnp
inc
lret
repnz
stos
rcl
mov
pushf
add
and
push
push
xor
popa
xchg
repz
cmc
cmp
sbb
out
mov
mov
or
divl
pop
xlat
jo
sbb
sub
lods
popa
push
xchg
add
dec
jnp
sbb
sbb
aaa
bound
pushf
xor
jg
fs
das
push
cmp
out
out
dec
jge
imul
add
push
xchg
lock
push
cmp
mov
aas
sar
hlt
add
fs
pusha
xor
cmp
test
jns
mov
dec
mov
inc
dec
sahf
push
lret
cld
aam
xor
mov
mov
lods
inc
dec
lea
sbb
xor
or
dec
xor
cltd
adcl
mov
mov
pop
aas
fwait
xchg
mov
sarl
fwait
je
jno
hlt
jmp
fdivr
inc
lret
insb
xchg
jae
int
sub
out
add
mov
loope
lret
jae
push
fwait
aaa
call
mov
addr16
idivl
push
add
inc
add
loop
inc
sub
testb
rcrb
ja
sbb
xlat
sub
mov
jb
jb
inc
mov
xorb
enter
push
push
adc
out
mov
mov
test
sub
mov
inc
movsb
mov
sbb
lea
sbb
xor
iret
das
test
outsb
jg
or
pop
movsb
dec
fs
sub
pop
idivl
mov
sti
divl
mov
aam
fs
cmp
push
stos
push
cmc
push
imul
fists
inc
clc
dec
dec
roll
mov
push
or
sub
mov
loope
andl
mov
cmp
scas
sub
pusha
ja
mov
daa
push
adc
fbstp
cltd
into
adc
cmpsb
add
popa
sysexit
fcompl
push
imul
push
mov
hlt
andl
or
jmp
mov
movsb
fs
inc
es
add
js
pusha
ret
mov
movsb
xchg
mov
jmp
mov
imul
push
push
lods
out
icebp
test
xlat
in
das
ljmp
hlt
mov
into
sbb
das
or
mov
enter
mov
lods
or
inc
jne
xchg
je
jnp
push
jle
idivb
lods
adc
lret
insl
jo
dec
inc
jne
push
idivl
mov
inc
out
stos
popf
add
pop
je
pop
or
jne
pop
xchg
adc
inc
push
sbb
adc
sbbb
cmc
mov
xor
inc
inc
mov
sbb
adc
sub
push
adc
insl
pop
loopne
cwtl
sub
lret
out
inc
jno
leave
inc
push
aas
mov
cmpsb
adc
insb
aad
inc
push
gs
push
sbb
push
daa
dec
mov
ret
ja
movsl
xchg
xor
adc
jecxz
adc
add
outsb
xlat
outsl
ds
push
xchg
push
iret
ds
cli
or
cs
arpl
or
jns
aam
pop
xor
mov
or
shll
adc
movsb
xchg
jmp
mov
pop
jl
dec
cmp
cmp
sbb
jmp
mov
insb
sub
mov
rorl
jns
sarl
loope
xor
add
or
adc
data16
dec
push
cmp
nop
das
or
jno
ljmp
inc
mov
xorl
roll
jnp
dec
hlt
inc
and
sub
mov
cwtl
fsub
ljmp
stc
jno
inc
add
shll
or
dec
xchg
daa
cmpsl
cmpb
sti
xchg
loop
outsl
add
push
mov
mov
fnstsw
xor
cmp
iret
dec
insl
movsl
pop
out
pushf
cmp
pop
or
sbb
call
cli
test
test
xchg
add
lret
mov
xlat
sub
sbb
xchg
js
iret
call
aad
int
aas
xor
clc
jb
fbstp
mulb
push
xchg
inc
xchg
pop
inc
fs
testl
adc
pop
ja
mov
fadd
pop
and
sti
imul
sub
stos
test
loope
mov
test
cltd
lcall
push
cwtl
cmc
push
lret
sub
mov
fmulp
lds
sub
push
and
pop
pushf
jbe
insl
repnz
repz
mov
je
ss
cmp
stos
lret
in
add
fcmovu
hlt
xchg
iret
and
stc
inc
or
das
push
push
nop
sub
ret
aad
add
inc
sub
xchg
cmp
xlat
rcrb
xor
test
ret
cwtl
mov
jns
repz
scas
xor
xchg
pop
pop
dec
scas
ds
lods
cmp
repnz
pushf
je
icebp
dec
pop
xchg
sbb
xlat
push
mov
push
int
fs
mov
and
jnp
sub
in
and
sub
or
mov
xchg
mov
dec
mov
bound
lea
lods
ss
cld
add
in
lock
pop
xor
outsl
mov
fcomps
je
rorb
dec
inc
mov
sbb
inc
lock
cmp
sub
fistps
out
cmp
test
lea
jnp
call
sub
std
mov
sbb
repnz
cmc
ja
pop
jne
xchg
insl
mov
and
mov
shrb
or
adc
mov
popf
and
dec
and
sbb
add
lret
fs
inc
adc
mov
dec
aaa
leave
lods
fstps
jne
push
push
scas
mov
mov
mov
inc
push
sub
rcrb
cmc
or
std
or
ds
push
push
mov
pop
mov
mov
push
lret
sub
imul
in
movsb
adc
lret
je
movsb
mov
or
mov
daa
jecxz
pop
jb
mov
fisubrl
lds
xchg
pop
pop
out
cwtl
nop
out
lcall
cwtl
subb
test
fidivrl
push
sbb
hlt
or
xchg
popa
orl
sub
test
add
mov
or
cmp
pop
clc
or
and
mov
imul
fs
sti
das
push
xchg
cmp
push
push
lret
lret
pop
mov
inc
outsl
push
pop
mov
leave
and
pop
pcmpeqb
jo
ds
fiaddl
xchg
cltd
pop
out
repz
add
inc
jle
icebp
das
rcrb
jne
mov
cmp
xchg
out
jmp
xchg
insl
push
xchg
arpl
test
push
cmc
mov
lcall
mov
cld
negb
out
mov
mov
cltd
fwait
cwtl
jns
and
sbbb
lods
cmc
jne
mov
xor
sbb
jmp
je
xor
inc
mov
in
in
adc
push
out
loop
pop
mov
jbe
push
popa
or
dec
repz
in
stc
jo
cmp
idiv
xor
jecxz
pop
es
cmp
pop
cld
subb
das
mov
into
jl
fwait
inc
xchg
sarw
inc
lcall
pop
and
inc
jno
iret
aad
ja
imul
pop
andb
inc
add
cwtl
out
sub
mov
mov
not
or
scas
adc
dec
std
addr16
ret
fcoms
icebp
cwtl
shrb
jge
inc
and
mov
dec
in
das
test
ret
xor
repz
add
ja
js
jae
inc
movsb
sub
dec
add
andb
sbb
fdivrs
mov
and
fdivrs
or
popl
aam
inc
std
mov
jmp
pushl
stos
ror
scas
jno
dec
scas
xchg
inc
xchg
xor
leave
sti
cmp
lds
inc
add
mov
sub
jmp
arpl
pushf
mov
or
movsb
mov
cwtl
fcmovb
jnp
cmp
jecxz
add
dec
ss
das
xchg
mov
cmp
sbb
jae
mov
or
xchg
sarb
and
mov
pushf
int3
scas
incl
nop
pop
jae
mov
loop
inc
rcl
jno
clc
mov
and
ret
xor
shll
pop
fwait
mov
enter
or
lret
push
ret
and
stos
push
inc
stc
loop
adc
or
mov
insl
inc
fdiv
sbb
inc
rolb
and
jp
sahf
cmp
push
pop
ret
sub
sub
xchg
test
xchg
push
xchg
dec
dec
jle
lret
jmp
cmp
mov
movsb
jge
jecxz
mov
mov
fsubrs
idivl
pop
fcoml
popf
cmpsl
sub
cmp
xor
mov
add
inc
adc
leave
inc
hlt
jp
push
sbb
push
pop
lahf
and
std
das
in
in
or
and
in
dec
aaa
je
xchg
mov
fucomi
mov
cmp
das
test
jb
cmp
out
inc
lea
sub
cltd
add
daa
in
decl
test
jno
adc
cld
inc
mov
lock
mov
push
sub
iret
icebp
jp
idivb
pop
sub
xor
mov
xor
inc
mov
pushf
in
and
xchg
movl
in
lock
out
out
or
mov
pop
ret
jmp
inc
push
test
jne
jp
xor
lea
xchg
mov
sbb
push
jl
adc
xor
adcb
inc
mov
int3
pusha
gs
add
jb
or
in
ja
jmp
add
or
lret
aad
xchg
cs
lea
sbb
shr
outsl
lds
xchg
aaa
sub
or
jecxz
push
shl
shll
mov
gs
jg
pop
push
lcall
jnp
stos
fistpll
jg
mov
xlat
xor
out
ret
lock
pop
cmpsb
aas
add
push
cmpsl
enter
ss
lret
addr16
lahf
adc
or
pop
fcom
pop
fs
inc
lods
cmp
pop
push
hlt
dec
adc
and
mov
pop
pop
jo
and
fwait
pop
mov
jl
push
or
out
sub
push
cmc
cmp
adc
arpl
hlt
iret
clc
cmp
movsb
pop
add
pop
test
pop
or
outsb
xchg
inc
cmp
mov
lahf
pop
repz
and
mov
scas
sarl
lods
or
or
or
aam
push
sbb
add
mov
jecxz
mov
adc
jecxz
gs
dec
orl
icebp
test
test
arpl
daa
xchg
xchg
push
add
inc
mov
es
fsts
int3
xlat
inc
outsb
mov
jo
lods
and
stos
push
popf
xchg
imul
push
jecxz
loope
jg
mov
jmp
imul
test
mov
bound
cltd
in
shl
movsb
push
adc
cld
xchg
test
jbe
je
bound
inc
nop
cmp
fmul
dec
mov
jno
sbb
push
cs
xchg
pop
mov
imul
jle
mull
stc
mov
fcmovnbe
scas
pop
pop
sahf
lcall
lea
ljmp
pop
hlt
or
fistpll
inc
scas
pop
xchg
and
addb
or
sub
push
jmp
iret
imul
sbb
or
pusha
pop
pop
out
or
mov
mov
inc
ja
jne
loopne
sbb
mov
and
gs
sub
mov
incl
and
inc
inc
mov
or
cmp
in
mov
movsl
es
push
sbb
frstor
xchg
fdivr
and
sub
jge
push
push
mov
sbb
push
and
pop
mov
mov
mov
dec
lret
inc
add
xchg
mov
dec
dec
loopne
aad
fwait
dec
int3
popa
push
adc
test
sarb
enterw
mov
mov
or
cmpl
cmp
ficoms
xchg
jnp
movsb
xchg
mov
xchg
ret
repnz
sbb
pcmpgtd
pushf
cld
test
cmp
repnz
adc
and
pusha
adc
icebp
popf
outsb
out
fstl
mov
mov
cmp
fldcw
add
es
mov
mov
push
jg
loop
cmpsl
sub
lret
mov
shlb
push
jnp
into
push
sub
push
sarb
in
and
je
mov
sbbb
mov
jle
push
ljmp
dec
inc
ljmp
cmpsl
rcrl
fadd
repnz
sbb
pusha
insb
ret
pop
xchg
jg
cmc
into
jae
repnz
mov
lret
and
out
es
adc
xchg
sbb
mov
mov
and
addb
xor
stos
sub
stos
je
push
sbb
mov
xchg
in
pop
adc
mov
add
stc
lahf
dec
stos
rcll
mov
nop
xchg
inc
jns
push
mov
pop
mov
xchg
sbb
cwtl
aam
mov
push
xchg
xchg
lcall
jle
and
sub
push
pushf
and
or
cmp
push
xchg
dec
adc
mov
or
push
and
icebp
fsubl
aas
mov
inc
stos
idivl
push
stos
sbb
add
out
out
popf
and
cli
push
push
inc
push
nop
in
cltd
jmp
push
cltd
ret
add
xchg
mov
arpl
inc
xor
mov
bswap
repz
pusha
add
mov
adc
outsl
pop
cmp
push
cmp
jmp
inc
cmpb
xor
movsb
pop
xchg
xor
sub
out
adc
data16
call
sbb
push
pop
mov
push
and
pop
sub
sbb
xchg
lret
test
jnp
or
mov
push
sub
inc
mov
cltd
jecxz
push
sar
mov
xchg
xlat
pop
repz
dec
jecxz
sti
mov
jo
add
in
xlat
pop
pop
jb
rcll
into
lods
in
dec
adc
enter
pop
aam
insl
cli
rol
stos
in
movsl
cmp
outsb
fidivrl
das
inc
sarb
popa
fisubs
movsb
cltd
out
cli
cmpsb
pop
adc
lret
push
jno
pop
gs
xchg
xchg
sahf
mov
mov
and
pop
add
imul
shlb
in
pop
ret
enter
gs
or
out
imul
fcomp
pop
aas
adcl
lret
mov
aaa
jmp
xor
sub
sbb
fcmovnu
push
sub
cmc
sbb
cmp
push
scas
jp
std
add
sub
add
aas
jnp
pop
jno
dec
or
scas
mov
push
cli
iret
popf
push
cmp
cltd
adc
andl
fistpll
or
sub
lret
cmp
cmpsb
pop
sbb
sbb
mov
mov
sbb
aad
lret
jne
rol
mov
pop
stc
movsl
cmp
sbb
and
sbb
lahf
xchg
sub
je
ljmp
sahf
arpl
loopne
loop
push
adc
mov
out
movsb
aas
or
mov
shll
cmpsb
mov
jmp
subb
iret
testl
js
mov
cli
outsl
xor
imul
stos
nop
sbb
jno
sub
mov
cmp
pop
dec
cmpsb
adc
fs
out
mov
cwtl
imull
js
out
loope
mov
xchg
jge
jp
repz
pop
scas
sub
sub
popf
adc
les
xchg
insl
sbb
xchg
push
enter
outsb
cmp
scas
ljmp
or
sub
push
jle
fnop
test
cwtl
dec
or
sbb
insl
mov
jecxz
mov
test
clc
insl
add
sahf
pusha
ljmp
jmp
and
mov
add
sbb
cwtl
fisubrs
je
sbb
hlt
and
jne
mov
jb
pop
dec
jle
movsb
dec
and
mov
jp
ret
mov
aas
adc
jnp
aam
mov
shrl
js
inc
in
xchg
xchg
repnz
pushf
dec
js
cmp
pop
push
mov
inc
lock
xchg
nop
mov
mov
rclb
xor
scas
or
into
jge
scas
xchg
and
adc
cmpb
or
out
jns
scas
mov
jl
addr16
lods
add
call
fsts
fs
mov
jge
adc
jnp
sbb
jp
stos
sub
xchg
inc
dec
push
pop
mov
xor
pop
mov
movsl
stc
mov
ds
add
cmpb
std
xor
loope
mov
icebp
pushf
mov
xor
int3
lcall
sub
rolb
pop
jnp
das
inc
and
dec
jmp
shll
idivl
pop
aam
div
cmpsl
mov
clc
popf
out
outsl
les
mov
jmp
pusha
and
test
fcoml
dec
cli
pop
sbb
dec
push
repnz
lret
int3
mov
add
or
add
mov
cltd
dec
lcall
sub
not
lret
mov
cmpsl
lods
push
rcll
int
sub
sub
xchg
jnp
lods
popa
sti
mov
cmp
adc
push
push
addr16
rcrb
xor
jg
insb
xchg
and
mov
add
iret
out
push
xchg
mov
repnz
add
enter
jbe
fs
mov
stos
xchg
hlt
cmp
pushl
and
stos
xchg
das
xor
push
xchg
adc
and
sub
xor
jg
sahf
aam
aas
cmp
in
cmp
mov
adc
mov
sbb
xchg
add
jmp
fsubl
dec
fucom
cmp
pop
pop
daa
or
xor
in
jecxz
icebp
mov
dec
push
das
or
call
lds
mov
push
sbb
pop
sub
sbb
xchg
sub
inc
test
std
idivb
mov
rcrb
and
dec
lock
rcrl
sub
push
ret
push
xor
andb
mov
and
pushf
and
mov
jo
inc
xorb
mov
stos
outsl
mov
push
inc
fidivrs
addr16
mov
and
fldl2e
test
xchg
lea
add
stc
pop
push
pop
ss
iret
leave
and
nop
or
std
in
loop
sbb
cli
jmp
ljmp
cmp
pop
gs
inc
cs
and
pop
and
fstpl
cmp
mov
aaa
pop
out
push
xor
mov
mov
push
loope
out
xor
sub
int
imul
and
sub
jo
imulb
in
shl
pop
test
fisubrl
das
das
pushf
push
mov
leave
sub
clc
cltd
jbe
mov
loope
jns
icebp
aam
lcall
ret
ret
bound
mov
cmpsb
push
dec
sub
xchg
ficoms
dec
jo
fdivr
jp
imul
shrl
test
xchg
repnz
push
fsubr
mov
pop
mov
insl
lock
add
and
mov
ljmp
pop
adc
sub
jb
xchg
cwtl
mov
and
push
sub
hlt
xchg
lods
cmp
mov
mov
ds
dec
xor
enter
movsl
imul
roll
cld
movsl
pop
mov
loopne
shrl
movsl
sub
insl
insl
in
imul
add
sub
jbe
scas
sbb
scas
cmp
loopne
xchg
mov
mov
dec
mov
data16
jmp
test
dec
push
push
sbb
push
xor
lahf
mov
mov
mov
aad
fucomi
mov
mov
inc
or
push
jecxz
jbe
mov
and
loope
jne
stc
dec
rcrb
aaa
inc
dec
int3
ss
test
xor
sbb
mov
ficoms
xor
and
sbb
inc
mov
aad
into
into
in
sbb
xor
pop
jnp
jmp
les
pop
dec
movsl
lods
mov
pop
mov
xchg
sbb
pushf
rcrl
inc
dec
fwait
sub
jmp
outsb
jb
sahf
pop
lret
movl
sub
inc
xchg
fxch
stos
out
add
jle
pop
cmp
jmp
out
sub
repz
popa
adc
movsl
adc
jo
jnp
adc
ret
fstl
icebp
clc
pop
push
iret
pop
movsl
sub
fsts
push
add
inc
dec
jbe
fistl
jo
mov
adc
xchg
sbb
mov
sbb
in
xchg
mov
shll
cmp
pop
incb
or
orl
and
jp
fmul
ss
loop
dec
sbb
push
insl
movnti
repnz
gs
popl
inc
jbe
movsb
xor
imul
xchg
jmp
scas
pushf
ror
xor
mov
adc
xor
push
les
adc
inc
push
inc
jns
das
dec
sub
or
loop
xor
sub
cmpsb
and
shll
addb
rclb
mov
jp
xchg
shlb
pop
or
rcrl
mov
xchg
arpl
jge
fwait
jae
push
or
jno
jp
mov
and
rcl
shr
out
in
div
sbb
mov
jbe
mov
or
dec
xor
push
popf
mov
mov
stos
adc
fsubp
adc
cwtl
cli
cli
imul
xchg
rolb
adcb
mov
sub
in
mov
mov
xchg
xchg
das
je
jge
outsl
inc
fwait
or
and
adc
mov
mov
inc
mov
adc
int
inc
je
xchg
orb
sbb
out
mov
dec
js
adc
repnz
jp
pop
jb
lret
loope
ds
outsl
loope
sti
xchg
popf
movsb
ljmp
or
push
data16
xlat
lret
adc
lock
mov
mov
and
add
jl
pop
cmp
pop
insb
stos
hlt
mov
mov
xor
and
xor
cmc
movsb
jmp
int
and
push
pop
sarl
divl
cmpb
shlb
push
bound
sbb
lret
ds
in
lahf
bound
sbb
fildl
push
mov
pop
push
roll
aas
mov
orl
xchg
adc
sar
add
cmpsb
push
pop
cmpsb
inc
jae
mov
cltd
inc
in
mov
cmp
add
sarl
fcomip
pop
in
pushf
divb
adcb
sbb
adc
cmc
sbb
push
imul
inc
push
mov
call
repnz
iret
sbbb
mov
add
fcomps
jle
fidivl
es
jb
sub
jns
dec
mov
bound
outsb
aad
shll
dec
gs
stc
and
test
lods
adc
movsl
fcomip
cmp
sbb
and
jne
xchg
shrb
adc
das
add
mov
add
out
mov
mov
xor
add
movsl
lods
lret
int3
test
repz
shl
stc
adc
jmp
xchg
push
mov
jb
xchg
cmp
or
mov
or
fidivrl
repz
adc
pop
cmp
in
movq
adc
stos
jg
mov
dec
scas
arpl
inc
push
insl
mov
aam
addl
cmpl
push
adc
mov
enter
ret
push
iret
fwait
sbb
jns
sbb
sahf
mov
adc
push
push
inc
enter
jno
mov
mov
xor
loop
push
cmp
pop
adc
pushf
xor
sbb
dec
dec
sbb
cmp
sbb
pop
dec
ja
lds
pop
jbe
cmp
rcl
jle
out
pushf
ret
add
stos
xlat
ret
getsec
pop
clc
mov
jae
addr16
add
push
arpl
and
adc
inc
push
lods
mov
iret
cwtl
inc
mov
cmp
pop
repnz
jns
xor
xchg
lret
xchg
or
lahf
sub
add
icebp
lods
lods
fnsave
fnstsw
lcall
lods
iret
dec
scas
fcomip
mov
je
adc
les
sbb
add
cmc
xor
and
scas
adc
xor
arpl
inc
mov
mov
imul
xchg
xchg
cmpsl
jns
inc
dec
mov
mov
push
jp
test
iret
xor
repnz
dec
dec
adc
add
jge
mov
mov
xchg
or
jecxz
movsb
push
push
mov
adc
ss
sbbb
ljmp
sbb
sbb
and
mov
jbe
add
leave
mov
xor
out
dec
test
lods
gs
pop
xor
xor
insb
iret
jae
mov
or
add
sub
mov
mov
pop
addb
std
dec
mov
dec
pushf
lret
add
push
push
lret
dec
dec
jno
sarl
and
sub
add
mov
push
jmp
sub
cmpsl
out
fisubs
xchg
shll
lods
je
lods
jmp
inc
jmp
pop
and
mov
cmp
sbb
les
jmp
or
add
xor
cmpsl
inc
dec
pop
in
mov
jp
jle
inc
sub
imul
mov
fwait
aad
je
incl
mov
mov
fisttpll
movsl
lcall
lds
cmp
pop
adc
sti
ret
insb
gs
dec
dec
leave
or
mov
pop
lock
int
or
or
cmp
insl
push
mov
adcl
jae
daa
jno
popf
repz
inc
jae
adc
fcoml
or
mov
push
add
test
stos
shll
lcall
jmp
fwait
xor
mov
xor
xor
dec
pop
cwtl
push
sbb
push
dec
adc
cmc
ljmp
rcrb
jge
mov
imul
pop
loopne
pop
jns
and
pop
inc
push
adc
xor
mov
push
adc
clc
arpl
push
jbe
aad
add
lret
test
mov
sub
mov
dec
jg
arpl
mov
xorb
cmpsl
fadd
das
sbb
or
xchg
add
mov
pop
add
xchg
xor
fisubs
dec
loope
in
or
cmp
orb
or
add
nop
in
fwait
rorb
cltd
inc
jge
aaa
cmpsb
out
xor
adc
popf
cltd
decl
neg
adc
nop
int3
cli
sub
cmp
jge
jg
jmp
add
xor
mov
mov
push
mov
mov
rclb
dec
aaa
mov
lcall
cltd
gs
andw
mov
sbb
and
mov
mov
dec
ret
add
aad
or
dec
xchg
mov
mov
testb
call
repnz
addr16
fdiv
pop
fcompl
popa
add
sbb
std
or
inc
push
dec
lods
aad
out
xor
jnp
out
xchg
roll
push
and
inc
push
icebp
mov
insb
mov
sub
aaa
sbb
shlb
push
mov
clc
add
insb
xchg
ret
loopne
cwtl
aas
idivb
ss
push
lds
sbb
pop
imul
test
push
rcrb
out
out
xchg
inc
gs
dec
shll
in
push
mov
cmp
xchg
add
stos
dec
fs
xchg
mulb
std
das
xor
add
sbb
add
mov
xlat
and
arpl
pushf
push
fistpl
enter
int3
add
dec
popa
cli
addr16
adc
mov
les
jp
in
out
lret
loope
mov
xchg
xlat
cmp
shlb
popa
fcmovu
outsb
aaa
fstl
inc
sahf
rclb
lods
cmp
rclb
mov
mov
mov
pop
push
cmp
pop
hlt
loop
addr16
xchg
cmp
mov
imul
aam
add
pop
and
jnp
shlb
cmpsl
xor
lcall
clc
andb
mov
or
and
stos
xchg
leave
cmp
mov
lock
in
shl
or
inc
sub
mov
adc
or
and
in
or
pop
pop
pop
pop
mov
push
or
lret
pop
push
psubusw
mov
jnp
es
mov
shrl
jne
fs
fwait
hlt
daa
mov
aam
lods
stc
push
push
cmpsl
outsb
ja
inc
mov
ficomps
cmp
pop
popf
aad
add
jmp
lahf
dec
fsub
call
ljmp
leave
lock
push
jl
repz
inc
cld
daa
in
pusha
fsubrs
mov
enter
jb
loop
xchg
adc
mov
ffree
jmp
dec
pop
sbb
xchg
out
icebp
repz
cmc
dec
dec
mov
adc
cmp
hlt
jecxz
test
jns
mov
imul
cmp
stc
cld
and
jnp
inc
jae
xor
add
loopne
xchg
dec
or
dec
lret
cmp
xor
in
notl
out
mov
incb
push
sub
cltd
pop
mov
adc
xchg
pushf
rcll
xorl
mov
shr
xchg
xor
into
lock
mov
xchg
xor
imul
mov
push
fsubs
or
lret
mov
pop
jl
sbb
or
icebp
aas
add
pushf
adc
subl
push
data16
mov
fisttps
xchg
jle
or
je
imul
jl
inc
in
and
xchg
js
into
fsubrs
pop
test
xchg
cmp
ret
outsl
inc
xor
testl
rorl
test
test
jl
pop
and
or
xchg
test
mov
pop
popa
ficoms
xlat
into
lods
lods
mov
fiadds
inc
pusha
xor
shl
mov
scas
testl
rcpps
pop
dec
mov
sbb
rol
or
jge
lds
out
jmp
aas
mov
ret
leave
popl
mov
cmp
test
mov
je
inc
les
cmpsl
in
sahf
out
add
dec
cmp
loope
sub
and
pusha
mov
stos
repnz
call
ror
adc
xlat
or
stc
jge
addr16
addr16
and
nop
add
aas
data16
xchg
pop
loope
add
mov
push
push
and
dec
cmc
cmpb
out
adc
xor
inc
stos
mov
repz
loop
push
sub
push
lock
sub
lret
fsubl
mov
mov
add
arpl
xchg
adc
mulb
div
cwtl
add
out
sub
ficomps
pop
cmc
push
sarl
shrb
out
jecxz
mov
arpl
xor
jl
cmp
xor
ss
dec
adc
and
jmp
arpl
outsl
test
jns
sub
jno
mov
in
enter
loope
jbe
icebp
in
je
test
imul
cltd
mov
sub
sti
adc
push
add
scas
fistpl
rcl
and
inc
mov
repz
push
jae
mull
sbb
pop
push
adc
test
das
enter
sbb
mov
and
outsl
and
ret
sub
xchg
int
xchg
jle
cmp
adc
xor
lret
jae
cmp
jp
xor
je
dec
mov
ror
sahf
ret
push
loop
push
test
mov
leave
stos
push
mov
push
imull
cmc
ljmp
pop
gs
andb
and
pop
jl
sub
mov
jmp
xchg
loopne
mov
or
add
addl
push
jle
sub
stc
xor
repz
mov
push
push
add
ds
xlat
xchg
push
fbstp
mov
xchg
sbb
xor
mov
pop
inc
and
or
pop
add
mov
xor
sbb
and
xchg
iret
shl
incb
enter
jnp
je
add
loop
in
outsl
mov
popf
pop
adc
and
ljmp
imul
xchg
test
shlb
sbb
lahf
inc
dec
dec
fnstcw
cmp
outsl
mov
mov
aad
and
dec
add
and
dec
push
cmp
cmp
or
push
sbb
pop
push
lds
cmpsb
push
mov
inc
outsb
mov
out
dec
xchg
lret
push
jl
lret
add
adc
push
jnp
xchg
sub
and
add
js
mov
sti
not
lods
push
loop
jmp
xor
arpl
in
in
icebp
adc
or
pop
loope
pop
aas
push
iret
add
mov
in
dec
dec
gs
pop
lock
js
adc
jge
shr
dec
jp
data16
cmp
cmp
dec
or
add
xlat
sub
das
or
inc
in
and
shll
mov
sbb
push
cmc
cmpsl
mov
jae
dec
mov
jnp
jno
scas
xor
outsl
insl
xor
cltd
cltd
dec
aad
mov
adc
aad
or
clc
cmp
lahf
jnp
xor
sub
adc
lret
pop
lods
push
lret
adc
bound
sarb
leave
test
inc
jmp
ss
test
pop
mov
shlb
loopne
jl
pop
dec
xchg
sbb
movsb
sbb
mov
dec
fcomps
imul
add
or
pushf
xor
mov
cmp
and
pop
push
pop
sub
mov
dec
push
dec
pop
sahf
rcr
fidivrl
sub
dec
sbb
fisubs
lret
movsb
cmp
sbb
das
fcmove
sbb
stc
sbb
lahf
add
mov
pop
fisubl
aam
xchg
mov
movsl
jno
sbb
aam
mov
add
sbb
cmpsb
adc
push
sub
das
aas
xchg
fists
andb
add
adc
mov
pusha
sbb
int3
outsl
push
fdivs
cli
stc
insl
decl
mov
pushf
outsl
mov
fs
inc
shll
testl
sbb
cwtl
mov
repz
loopne
ret
out
outsl
in
push
pop
jl
sub
sahf
bound
pop
ds
mov
aaa
mov
and
push
in
push
outsb
push
dec
fimull
mov
lcall
sub
mov
and
pop
push
imul
testl
jp
into
sbb
sbb
xlat
add
sub
sahf
call
and
add
mov
mov
pusha
mov
scas
push
sub
push
pop
fnsave
dec
fdivrl
mov
mov
mov
jmp
xor
popa
nop
xchg
xchg
xor
sahf
cld
xchg
push
mov
in
xor
push
in
out
leave
or
out
mov
ljmp
or
ret
pop
cmp
repz
mov
xor
fwait
cmp
xchg
mov
jg
cwtl
push
cmp
and
mov
mov
mov
and
jle
pop
mov
jo
mov
push
mov
dec
mov
push
aam
daa
push
push
sub
push
adc
pop
sbb
sbb
mov
js
adc
pop
pop
dec
cmp
xchg
adc
dec
popa
fs
xchg
ror
in
cmpsl
mov
cmp
out
cmpsl
insb
mov
aad
mov
push
mov
ret
jle
fsubl
lahf
and
sbbl
mov
xchg
and
rol
notl
lahf
cmpsb
dec
mov
xchg
rclb
sub
xchg
or
mov
xlat
sub
mov
fdivr
jbe
jo
call
cli
subl
pushf
push
pop
outsl
movsl
clc
cmc
ds
mov
mov
jo
out
add
jl
mov
enter
outsl
cmpsb
push
mov
mov
je
xor
mov
xor
xor
mov
jle
fdivr
lret
mov
xchg
mov
mov
and
cmpsl
incl
mov
xchg
and
and
inc
add
loopne
pop
and
dec
inc
lds
mov
push
sub
loope
rorl
push
lock
mov
lods
dec
mov
or
sti
cmp
xchg
adc
or
mov
dec
or
inc
andl
push
add
inc
adcl
dec
insl
bound
push
inc
movsl
scas
push
aas
das
ds
mov
xchg
xor
mov
shl
cmp
hlt
fstl
pusha
xor
es
mov
xchg
movsb
pop
mov
and
add
in
out
test
xorl
test
mov
dec
lock
cmpsb
imul
pop
fsubrs
jae
data16
xchg
adc
inc
mov
daa
jg
cld
dec
or
dec
sahf
mov
popa
loope
mov
mov
mov
push
dec
lods
or
loop
shrl
in
or
mov
dec
cmp
stos
inc
jle
add
cmc
sub
int3
bound
movsb
xchg
movsb
outsl
sbb
mov
jae
pushf
out
popl
fiaddl
push
sub
ds
popa
xor
pop
in
jl
cmc
ret
mov
and
xchg
in
mov
aaa
and
rolb
mov
addr16
ljmp
cmpsl
cmpsb
hlt
pop
or
or
pop
ljmp
test
movsl
in
sbb
mov
mov
jbe
call
mov
gs
push
aas
cmp
pop
mov
and
lds
xchg
test
insb
mov
repz
fwait
rcl
xor
jnp
xor
out
ret
xchg
jb
out
int3
insb
sub
inc
rcll
ja
bound
xchg
pop
lds
xor
stos
push
dec
dec
stc
hlt
mov
pop
andl
les
inc
sub
idivl
xchg
cmp
pop
jge
mov
mov
add
jl
orl
subl
or
clc
mov
ret
cmp
and
loope
mov
adc
movsl
cmp
adc
cmp
xor
insb
orl
pop
out
mov
insl
xorb
fstps
jo
mov
testb
orl
hlt
fsts
test
xchg
and
rep
idiv
nop
les
clc
jno
cmp
rcr
sbb
adcb
mov
das
pop
cmp
clc
ljmp
lds
push
sbb
and
call
dec
cmp
fucomip
sbb
mov
ds
nop
inc
fwait
popa
mov
icebp
rcrl
dec
xor
jo
cmp
xor
ljmp
psllq
cmp
push
pop
or
call
in
jo
aas
xor
shlb
mov
ret
mov
mov
stc
pop
xor
addr16
sbb
mov
add
sbb
imul
int
mov
dec
jns
insb
scas
lock
mov
cwtl
cmc
movsb
in
cmpsb
shl
xchg
pop
pop
ja
lahf
mov
mov
dec
cs
mov
add
insl
add
aad
shll
test
fmuls
int3
cltd
sbb
mov
std
sub
mov
fbstp
fisttpll
imull
test
push
outsl
je
out
int3
fmuls
jp
mov
mov
inc
pop
mov
mov
jp
outsl
sti
push
mov
xorl
std
into
dec
aad
lcall
mov
mov
adc
jne
pop
fmuls
inc
in
jp
in
mov
rcll
mov
mov
stc
sbb
pop
inc
mov
add
mov
std
iret
movsb
xchg
pop
dec
and
dec
jns
gs
xor
push
out
push
in
cs
add
inc
movsb
std
cmpsb
push
or
test
repz
icebp
cmc
xor
stc
cmpl
dec
adc
fdivrl
cmp
mov
scas
mov
stos
scas
js
xchg
scas
jmp
xchg
xor
ja
enter
iret
stc
scas
cmpl
and
stos
mov
xchg
mov
and
mov
pop
fstpt
cmc
adc
dec
push
lods
mov
xchg
pop
mov
mov
scas
mov
and
int
ss
enter
fndisi(8087
sarb
sbb
fwait
les
or
ret
lahf
or
add
push
lea
push
xor
mov
mov
jne
and
andl
cmc
lahf
lock
and
cmp
aad
lock
sbb
xchg
jne
aam
int
aas
sub
roll
or
pop
dec
pop
movsl
fisttpll
inc
daa
adc
das
dec
cmp
ret
sub
rol
mov
sub
out
pop
outsb
cmp
ret
daa
shr
xchg
jae
fwait
lods
lods
and
mov
cmpsb
gs
std
enter
loope
loopne
dec
dec
ljmp
cmc
push
lods
pop
cld
aas
jl
push
js
fs
mov
jge
in
lcall
pop
inc
push
mov
jle
mov
aam
mov
pop
lea
inc
jb
rcll
imul
and
pop
lods
pop
and
pop
cli
dec
out
mov
xchg
in
and
jbe
repz
xchg
push
aad
xchg
and
in
and
movsl
call
xchg
jmp
adc
pushf
add
sub
stc
addb
in
cmpsb
mov
adc
mov
pop
lcall
inc
lret
daa
imul
mov
sbb
nop
lods
or
or
addr16
cmp
mov
mov
xor
test
pusha
adc
adc
movsb
mov
jmp
fwait
sbb
and
test
repz
daa
xchg
or
inc
inc
xor
ret
jmp
lret
dec
pop
add
add
lods
xchg
and
aaa
jb
fucomp
mov
inc
adc
sahf
movsl
sarb
das
ficoms
jl
je
and
mov
daa
jg
jns
out
iret
leave
movsb
inc
push
add
and
lret
mov
xchg
incl
js
inc
inc
je
push
mov
jl
mov
ss
mov
inc
push
cmpsl
pop
add
sub
xchg
and
mov
ret
scas
out
aad
popaw
ret
lock
mov
push
icebp
mov
test
insl
mov
pop
ss
jb
sub
es
pop
fiaddl
jl
inc
imul
insb
cmpsb
and
iret
cmp
loop
push
in
fdivrs
and
sbb
lea
jle
aas
addr16
fldenv
sub
mov
mov
adc
xchg
push
push
pop
std
lret
mov
ret
inc
jno
sarl
popa
into
mov
aaa
pop
inc
add
mov
xchg
jns
mov
leave
test
pusha
fwait
add
bound
popf
rcrb
jns
xchg
ficoml
and
mov
cmp
notb
inc
pop
testb
fs
cs
sbb
cld
imul
dec
push
xchg
sub
and
xchg
test
repz
pop
fwait
pop
sbb
jmp
sbb
pop
push
mov
jne
shrl
xchg
sbb
mov
push
jmp
mov
stc
adc
lods
pop
in
add
push
xor
sub
enter
push
cmc
mov
mov
pop
sbb
push
roll
inc
fcompl
jns
xchg
jne
aas
add
mov
repz
jg
adc
dec
leave
jmp
cmpl
add
mov
jge
imul
into
mov
call
push
dec
push
push
test
fcoms
pop
push
lahf
mov
out
unpcklps
mov
les
ljmp
sbb
sti
jge
cmp
ljmp
cld
pushf
cmp
dec
or
and
lock
lcall
push
aas
hlt
dec
jae
subl
inc
movsb
sbbb
adc
stc
nop
jg
into
aaa
xlat
in
inc
mov
pop
mov
pop
rol
push
out
addr16
xor
sub
insl
insb
pusha
cwtl
xchg
mov
sahf
push
mov
popa
jo
loope
xchg
das
hlt
hlt
lcall
cld
ljmp
shll
push
or
sub
out
pop
inc
fsubrs
dec
mov
push
cli
jns
pop
cmpsb
adc
jno
fsubs
loop
inc
xor
and
sub
mov
add
out
jecxz
in
out
into
add
sbb
xchg
pop
push
xlat
and
mov
stos
mov
into
jno
pop
pop
mov
mov
mov
push
pop
cmc
xor
or
push
pop
inc
mov
jmp
pop
pop
pop
data16
mull
in
dec
push
mov
sbbl
jp
push
pop
and
dec
dec
and
pusha
cmpsl
stc
gs
dec
icebp
testb
fmuls
mov
ja
xor
fldt
xchg
pop
lret
mov
jnp
mov
xor
or
mov
jecxz
push
mov
pushf
push
int
aaa
xor
dec
mov
int
popa
mov
add
gs
sub
sbbb
decb
mov
lea
aam
inc
xchg
xlat
cmp
enter
mov
and
shll
xchg
cmp
cld
mov
adc
xchg
pop
dec
rcl
xor
test
rorl
or
pop
sub
jne
cmp
mov
scas
mov
out
sub
mov
shll
push
mov
test
in
mov
pop
mov
dec
fisubl
lcall
mov
das
cmpsb
sub
mov
mov
adc
or
jmp
into
jae
ds
aad
cmpl
mov
add
mov
adc
loopne
dec
mov
xchg
shlb
cld
cmp
pushf
pop
shrb
inc
aad
and
push
jb,pn
xchg
push
jg
jns
push
xor
sbb
add
pop
int
and
xor
test
fs
sbb
mov
mov
jge
fildll
pop
sub
cli
jmp
mov
jbe
shrl
pop
imul
adc
pop
pusha
add
into
lods
xor
rclb
jmp
pop
lods
or
adc
movsb
lods
int
sbb
push
in
mov
push
out
leave
js
and
add
sbb
rorl
xor
loop
stos
xor
or
loopne
icebp
mov
sbb
lds
adc
xchg
or
iret
fs
mov
out
and
jo
xchg
imul
insl
shll
shlb
and
and
das
dec
mov
fmulp
sub
das
push
adc
mov
das
arpl
addb
add
mov
mov
gs
loopne
jge
push
inc
movsl
pop
clc
sub
sbb
pusha
adc
test
push
in
mov
push
arpl
push
push
push
cmc
push
push
out
insb
mov
cmp
aaa
pop
push
dec
push
mov
inc
sbb
icebp
pop
lahf
jg
add
or
mov
es
cwtl
stc
lea
movsl
pop
out
push
adc
int
aas
mov
cmp
in
push
movsb
es
push
into
fmulp
cmp
fcoms
ret
cmp
aaa
jp
lods
add
scas
and
add
arpl
lret
pop
pop
sahf
xchg
fbld
cmc
adc
pushf
or
cltd
dec
sbb
cltd
add
mov
sahf
add
push
mov
mov
imul
sar
cmpsl
cmp
jae
cltd
mov
rcrl
mov
loop
dec
stos
sub
lcall
and
pusha
das
scas
cli
mov
adc
mov
std
jbe
inc
lods
inc
lods
imul
clc
hlt
add
xchg
dec
or
aaa
jmp
push
into
lods
repz
lods
adc
inc
out
jmp
mov
lcall
aad
pop
mov
push
jle
inc
mov
pop
xor
push
cmp
jp
mov
xchg
adc
sub
fmuls
or
add
mov
jnp
adc
fcmovnu
mov
ret
and
xchg
xchg
test
repnz
jbe
dec
inc
test
dec
jecxz
sbb
ja
incl
scas
cmc
mov
push
pop
dec
cwtl
in
pushf
mov
ds
cmpsl
mov
add
add
stos
js,pt
in
nop
daa
push
ficomps
sub
sub
jae
rorl
jne
mov
cmp
popa
pop
or
cmpsl
sbb
inc
sbb
mov
xor
pop
push
pop
roll
inc
mov
mov
mov
orl
jnp
fwait
xchg
mov
cmp
scas
fwait
pop
pop
icebp
test
in
pop
fwait
mov
cmp
call
outsl
rol
incb
jle
mov
imul
mov
insb
shll
xor
add
or
cld
aas
mov
mov
xchg
cmp
mov
jecxz
add
inc
fistpl
push
pop
fistl
xor
mov
cmp
loop
dec
dec
scas
fldcw
icebp
repz
add
sub
jb
sbb
mov
mov
push
xchg
push
adc
cmp
in
xor
sub
int
xchg
pop
jb
cld
dec
addl
and
pop
add
out
xchg
test
inc
aad
lea
ret
sbb
xor
xchg
mov
lods
inc
pop
out
dec
adc
ret
shrb
lea
dec
mov
call
test
mov
js
mov
jbe
aaa
and
outsl
add
pop
push
test
mov
lahf
out
jbe
add
cli
mov
mov
or
out
inc
add
dec
icebp
mov
in
fiaddl
and
mov
xchg
jmp
mov
mov
loopne
cmpsb
push
sub
maxps
sub
push
push
sbb
idivb
jl,pt
adc
or
aad
iret
push
in
dec
xor
push
cmp
repnz
xchg
adc
pusha
and
fiaddl
stos
lods
xor
int3
xor
xchg
xor
pop
mov
xor
mov
loop
jmp
fiadds
cmp
cmp
adc
scas
insb
and
inc
stc
sbb
mov
stos
stos
ficoml
aaa
adc
adc
cmp
testb
lret
aad
arpl
mov
xor
cmc
push
mov
dec
xorb
das
adc
not
std
dec
sub
sub
mov
push
stc
xor
push
and
pop
fidivl
mov
shll
mov
dec
adc
pusha
sarl
pop
sub
std
inc
jg
pushf
sbb
je
push
inc
pusha
cmp
and
xchg
push
je
xchg
inc
test
imul
pop
sbb
adc
cmpsl
dec
mov
jle
pop
add
sbb
dec
pop
loope
mov
or
sbb
inc
sahf
call
adc
out
out
fisttps
cmpsl
pop
ret
lcall
adc
jns
jle
cmpsb
sub
jae
xchg
mov
cmc
jne
cmp
pusha
shlb
mov
lds
sbbb
je
pushf
mov
push
mov
and
pusha
jnp
or
lret
inc
aaa
jge
pop
add
dec
cmc
cmp
testl
xchg
jb
inc
daa
jle
xchg
movsl
xor
aad
sub
popa
adc
lret
jg
xchg
call
into
fwait
outsl
jl
or
push
out
add
ret
push
in
sub
mov
sbb
jo
push
shll
xchg
push
mov
mov
xchg
push
sub
imul
mov
mov
or
ret
push
fldt
xor
repnz
xor
ss
fidivrl
xor
push
jnp
cli
inc
enter
jge
pop
movsb
insl
cmp
or
mov
or
cli
mov
dec
or
out
xchg
popa
push
fldz
mov
fs
push
insb
dec
cwtl
push
xchg
adc
pop
or
mov
cmpsl
sub
stos
cmp
pop
in
test
sbb
insl
scas
ja
fdiv
add
stos
test
push
cltd
shl
cli
sahf
jae
and
lea
jbe
outsl
inc
pop
sub
push
in
add
std
push
cmpsb
xchg
dec
xor
imul
push
cs
es
addr16
addr16
mov
iret
mov
add
loop
push
fmulp
insl
xchg
mov
shlb
jp
rorl
mov
mov
cmpsl
push
xchg
push
fsubrl
mov
xchg
sbb
out
jb
fs
mov
or
dec
push
fsubl
push
pop
push
sahf
cmp
rcrb
ja
mov
test
into
jns
or
mov
out
in
outsb
mov
imul
xchg
sahf
fimull
adc
outsl
repnz
addr16
jb
fwait
cwtl
repz
call
lds
int3
push
push
jl
int3
pop
cmp
xchg
xchg
xchg
and
sub
pop
fcmovu
mov
dec
icebp
adc
imul
jl
or
arpl
push
xchg
xchg
std
and
rorb
or
sub
add
dec
push
jae
scas
fldlg2
push
repz
icebp
lahf
ficomps
mov
jno
dec
adcb
dec
xchg
ficompl
mov
pop
roll
ret
scas
xchg
or
aad
cmpsb
adcb
pop
in
out
setle
push
inc
test
shr
or
mov
rolb
dec
repnz
pop
arpl
pop
movsl
cmpsl
xor
or
dec
push
sbb
in
les
cltd
fst
leave
push
mov
xchg
mov
pushf
shlb
push
das
push
scas
lret
jbe
movsb
sub
jbe
in
jne
stos
ja
movl
rcr
shrb
sbb
dec
fildll
xchg
pop
cmc
pop
fmul
pop
ret
inc
shl
mov
inc
lret
movsl
adc
jno
jg
add
in
icebp
inc
dec
fmuls
and
pop
and
xor
sahf
push
xor
push
xchg
inc
shlb
sub
xor
add
dec
int
loop
test
hlt
jae
insl
in
xchg
cli
jecxz
nop
xor
aas
mov
push
mov
pop
popa
push
push
aad
and
repz
cli
pushf
xchg
sbb
jae
cli
sub
mov
or
mov
ret
test
fsub
and
test
pop
in
mov
fsubr
adc
adc
stos
das
cli
addr16
leave
sti
mov
adcb
dec
fsubl
or
fidivrl
sbb
jp
lock
jle
pop
cmp
dec
loopne
shll
mov
cmp
xchg
push
pop
and
jmp
dec
nop
and
aad
lahf
xchg
xchg
movsb
pop
test
mov
sub
mov
adc
and
std
cmp
cmpsb
jb
ret
pop
sub
test
leave
mov
jecxz
out
pop
inc
xchg
popf
mov
xor
push
cltd
lds
test
fnstenv
sbb
xor
nop
xchg
add
imulb
sub
repnz
stos
ljmp
sbb
sub
popf
xchg
ret
xor
sub
popa
pop
xor
mov
not
push
insl
inc
das
test
setl
push
and
cmpsl
lods
dec
push
cmp
mov
xor
or
pop
lea
fnstsw
in
into
sub
or
or
bound
xor
out
addr16
mov
push
scas
dec
cmpsb
pushf
inc
jl
test
hlt
lret
lods
fmulp
mov
in
icebp
jg
les
pop
nop
pop
in
mov
jmp
push
pop
mov
inc
mov
or
jmp
inc
repz
sub
adc
mov
push
cwtl
sub
pop
clc
pop
push
push
jmp
stc
in
push
add
into
sub
ds
push
push
dec
mov
inc
xor
adc
xor
dec
repz
pop
or
fs
data16
jl
mov
dec
sbb
inc
popf
adc
adc
aam
or
sti
loope
in
test
jmp
lcall
mov
loope
inc
mov
aas
gs
jnp
xorb
aam
or
mov
or
cmpsl
and
jae
or
std
rcl
mov
repnz
mov
jns
stc
push
call
daa
daa
ss
ret
popf
imul
