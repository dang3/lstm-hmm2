sbb
add
mov
sbb
lock
or
in
xchg
daa
and
adc
jo
out
loopne
pop
mov
test
push
inc
in
sbb
fbld
dec
xlat
xchg
pop
imul
jns
ss
mov
test
add
ret
data16
jle
adc
mov
pop
ret
movq
jecxz
in
insl
mov
jns
sahf
cmp
frstor
in
insl
jecxz
lods
mov
xor
jae
into
xor
sti
pop
addr16
rorl
push
cmp
iret
pop
add
jecxz
jne
out
jg
gs
adc
outsb
xor
push
cmc
sbb
mov
mov
fcomp
adc
sub
cmp
xchg
mov
dec
add
pop
mov
adc
mov
or
cmp
xor
and
in
push
dec
xchg
cmpsl
lock
jo
aam
es
addr16
sub
dec
out
push
cli
or
cmp
xchg
gs
notb
inc
cs
and
dec
push
mov
sbb
xorl
mov
sub
jb
adc
popf
or
or
lcall
xchg
inc
add
jge
xor
adc
adc
repnz
fidivs
fiadds
insl
mov
and
out
inc
sbb
out
inc
xlat
jge
xor
daa
mov
scas
mov
and
pop
cwtl
imul
xor
xor
xchg
cmp
mov
inc
mov
mov
jb
inc
idiv
xlat
push
out
dec
mov
push
js
mov
lock
test
sbb
dec
iret
mov
out
mov
inc
push
mov
cmpsb
inc
lahf
pop
xchg
mov
mov
sar
mov
fwait
scas
jp
ds
mov
ds
xor
test
dec
mov
fists
fldcw
mov
pop
arpl
push
mov
add
cmp
in
xlat
jmp
and
lahf
std
jmp
scas
iret
lea
pop
xchg
or
lods
sbb
and
mov
out
pusha
fs
lahf
pop
jmp
pop
adc
sub
push
inc
pop
call
jno
sahf
push
mov
mov
inc
inc
pop
jg
pop
mov
jle
adc
test
push
jne
mov
cmpsb
out
lcall
fucomip
sbb
xchg
insl
push
xchg
bound
push
sub
loop
cmp
out
icebp
jmp
jae
loope
cltd
pop
dec
xchg
cmp
mov
pusha
push
jge
push
shl
sub
bnd
and
dec
push
std
cmp
leave
fwait
sub
cs
mov
cs
leave
lea
mov
popa
inc
sbbl
xor
cmc
in
aad
hlt
inc
bound
loope
fcoml
inc
push
aas
add
ret
insl
and
cwtl
push
xorb
dec
mov
xchg
cli
cs
jg
mov
jo
shr
fildll
loopne
xchg
int3
push
xor
lods
adc
stos
jl
fidivrs
aas
arpl
or
inc
push
ret
addl
rorb
insl
push
adc
rorb
insb
jecxz
int3
std
fisttpl
call
sbb
xor
adc
in
mov
mov
inc
xchg
mov
scas
xchg
sahf
stos
cmp
testb
xor
or
stc
in
inc
pusha
dec
dec
mov
or
adc
pop
decl
sbb
sti
adcb
aaa
repnz
sahf
and
cmp
cmp
fiadds
or
add
mov
fucomi
and
fldenv
inc
inc
adc
xchg
mov
mov
push
leave
test
mov
loope
pop
jmp
pop
push
adc
mov
inc
sbb
mov
mov
aam
test
mov
sbb
and
or
inc
daa
int
pop
sti
mov
out
hlt
sbb
into
fcomps
rclb
push
mov
cmpsl
xchg
mov
cmpsb
push
mov
push
push
push
adc
push
adc
cmp
movsl
and
pop
adc
xchg
ret
pushf
gs
xchg
adc
aaa
adc
add
movsb
xor
mov
shr
in
jo
ss
pop
xchg
sub
fwait
jmp
hlt
into
sub
ds
adc
add
cmc
das
popf
cwtl
jmp
cmp
filds
and
in
mov
pop
or
pop
adc
add
mov
cmpsl
ljmp
inc
push
sbb
sub
test
xchg
mov
dec
add
sub
push
push
mov
add
jae
jnp
and
dec
or
stc
lahf
ret
adc
add
fnstcw
inc
mov
scas
mov
ljmp
lock
mov
xchg
pop
adc
out
cmp
stos
mov
mov
xor
mov
push
out
cmpsb
xchg
push
adc
cwtl
xor
push
lds
cmp
mov
out
in
adc
sti
xchg
mov
roll
inc
push
aaa
push
into
rorb
rolb
and
out
mov
or
lods
ret
lods
lods
in
out
imul
xor
dec
cmc
cmp
loop
cli
out
sbb
cld
dec
pop
mov
mov
repnz
xchg
test
jo
push
inc
cmpsb
jb
repz
dec
hlt
leave
and
lret
or
push
xchg
dec
and
gs
adcb
maxps
jbe
loop
sub
and
mov
idiv
nop
pop
fidivl
cltd
add
sub
sbb
mov
or
out
sbb
push
or
je
dec
sbb
mov
fdivl
cmp
ja
ficompl
arpl
cmp
jecxz
dec
lcall
inc
mov
or
imul
dec
in
sbb
xchg
inc
in
stos
adc
mov
adc
sub
dec
inc
addb
xchg
in
nop
adc
jno
gs
jo
lods
mov
fists
push
adc
adc
lea
fstl
idivb
cmp
jno
cwtl
push
push
imul
cltd
mov
pop
cmp
hlt
rcll
adc
insl
dec
inc
movl
lock
sar
test
mov
pop
movsb
rcr
jle
lods
push
sti
pop
std
push
mov
add
cs
adc
add
ljmp
in
mov
xchg
xor
mov
pop
cmp
call
movsb
cmp
cltd
jno
push
dec
scas
gs
mov
xor
inc
mov
jle
adc
inc
mov
push
mov
xor
sub
mov
arpl
inc
rcr
movsl
inc
outsl
fsts
imul
pop
int3
pop
xor
mov
cmp
loop
xchg
and
jmp
mov
xchg
mov
xchg
jle
orl
shl
push
mov
sbb
inc
and
cmp
cmp
mov
and
xor
jmp
aam
fisubrs
loopne
pop
iret
ljmp
cltd
in
stos
movsl
rcr
add
cmpsl
movb
inc
cli
push
or
dec
jecxz
mov
daa
test
ret
and
xchg
adc
rcll
movsb
std
nop
adc
push
dec
push
stos
fisubrl
scas
add
scas
cmp
pop
lcall
jl
mov
mov
loopne
sub
scas
aaa
test
and
jp
push
in
mov
pop
je
mov
or
out
xchg
xchg
loopne
add
sub
sahf
mov
subl
stos
ss
or
dec
inc
push
sub
add
mov
ret
mov
rorl
or
jb
jo
xchg
js
int3
leave
cmpsb
pop
pop
add
xor
or
fisubrl
mov
mov
lret
into
pop
into
add
xchg
out
in
pushf
mov
jns
mov
push
pop
cs
pop
sbb
sbb
ret
mov
fwait
dec
adc
mov
pusha
cli
mov
dec
ss
sbb
cli
xchg
lods
scas
adc
xor
fdiv
xorb
mov
mov
sub
fwait
in
jmp
jb
and
arpl
mov
and
pop
ja
mov
mov
inc
cltd
or
leave
pop
aas
daa
jnp
test
or
in
and
lds
test
cs
in
inc
xchg
inc
push
pop
sub
jge
dec
and
add
pop
cmpsb
cmp
inc
dec
mov
cmp
xor
rclb
sub
sub
lahf
cmc
repz
popa
test
or
xchg
xchg
fildll
leave
jp
push
std
mov
stos
add
mov
jno
outsb
mov
mov
mov
ss
in
loopne
roll
mov
xchg
adc
xor
mov
xor
outsl
add
pop
cmp
pushf
movl
fsubrs
mov
pop
mov
inc
ss
jns
jle
push
shr
xchg
sbb
sbb
pushf
cmp
outsl
or
add
cli
xlat
jge
aam
bound
xchg
xor
mov
push
sbb
push
and
adc
sub
jle
imul
xor
cmp
inc
xchg
push
xor
leave
sub
sti
mov
enter
fimull
int3
push
inc
add
leave
add
add
inc
sbb
test
xchg
mov
add
addl
pop
rcrl
addr16
cmp
and
add
and
in
dec
pop
aas
pop
cld
sar
or
mov
and
into
addr16
pop
daa
push
push
fsts
test
rcl
les
bound
out
inc
fmuls
aad
or
push
fcmovbe
and
cld
lret
cmp
or
inc
int3
mov
ficoml
adc
scas
in
xchg
push
adc
iret
lret
pushf
mov
push
movsb
into
adc
out
mov
enter
push
push
cmp
or
inc
add
jnp
add
add
in
xlat
mov
pushf
shrb
dec
hlt
inc
or
std
pushf
aad
je
mov
push
rclb
pop
mov
jnp
sub
addr16
fwait
xchg
outsl
int3
cmp
test
mov
nop
imul
int
ret
cmpsb
pop
stos
ret
xchg
push
add
lret
cmp
cmpb
shl
pop
aam
and
mov
xchg
in
cwtl
addr16
rcl
cmp
iret
es
test
in
sub
ds
cmp
jno
xor
gs
sub
jae
std
aad
addl
fisubrs
pop
dec
push
test
out
shrb
or
cmpsb
and
xchg
mov
insl
xchg
add
fistpl
add
enter
xor
ja
popa
fsub
mov
lret
push
lock
xlat
push
adc
out
cltd
mov
jo
imul
iret
mov
bound
lret
xchg
cld
addl
enter
leave
js
pop
divl
sub
shl
adc
inc
xor
cli
imul
push
jae
sti
cmp
dec
adc
jg
xchg
mov
into
push
pop
test
mov
pop
xchg
jg
mov
cmpsl
push
enter
icebp
scas
fidivl
aas
sbb
push
xchg
andb
or
mov
lcall
push
xor
insl
stc
xor
dec
ror
xor
je
lret
mov
call
call
xor
push
jno
mov
xchg
push
sub
jmp
sub
xlat
out
jbe
add
pushf
ljmp
roll
lret
mov
in
pop
mov
add
imul
std
hlt
test
in
negb
js
pop
lock
jecxz
cmp
clc
jmp
test
imul
sub
mov
das
xchg
into
icebp
pop
lcall
xor
stc
or
mov
mov
mov
push
pop
sub
jle
icebp
and
loope
or
sbb
call
cmp
andl
stc
popa
jnp
ret
movsl
pushf
movsb
push
mov
adcl
iret
inc
test
inc
mov
mov
ljmp
xchg
movsb
sti
imul
pop
xor
pop
cmc
and
dec
sub
push
test
bound
mov
mov
out
and
outsl
jg
pusha
sub
mov
mov
lds
xlat
push
in
cld
push
mov
xor
pop
in
xchg
dec
test
inc
or
add
bound
sub
xchg
mov
cwtl
sarl
pushf
in
cld
push
sub
loope
jnp
stos
fldenv
bound
test
inc
daa
push
cmc
es
mov
jno
pusha
inc
and
sbb
stc
cltd
inc
dec
mov
mov
and
push
in
fists
jb
xchg
or
gs
jne
cmp
push
inc
cmpsl
adc
les
mov
add
inc
leave
jge
or
push
mov
jp
push
loopne
ret
fstl
loop
cmp
sub
add
cmp
addl
sbb
push
xchg
scas
test
push
gs
xchg
data16
hlt
into
mov
aas
popa
mov
adc
dec
test
adc
fadds
mov
dec
int3
jg
add
xchg
shrl
hlt
cmp
ja
add
fnstcw
mov
pusha
aam
dec
std
mov
dec
pop
cmp
xchg
sysexit
out
push
in
sub
xchg
scas
push
jg
mov
xchg
push
xorl
and
sbb
xor
cs
cwtl
mov
sar
xchg
popf
or
jge
cld
mov
fs
es
xchg
in
cltd
mov
dec
pop
fisubrl
xchg
stos
lret
mov
fcmovnbe
xchg
dec
cld
fwait
mov
xchg
xor
out
add
in
inc
stc
adc
mov
xchg
ret
loope
popf
pop
adc
inc
add
leave
xor
fdiv
jbe
xchg
push
xchg
ja
dec
addr16
push
fwait
inc
jae
jl
pop
repz
cmp
add
lcall
cld
dec
cmp
test
out
fsubrl
jge
push
sub
popf
stos
divb
pushf
jnp
xor
mov
outsl
cmp
mov
mov
out
popa
out
dec
adc
xor
stos
inc
shrl
ficomps
popa
or
inc
sbbl
dec
lahf
push
test
push
test
cmp
and
fcomp
cmpsl
clc
jnp
test
push
lret
repz
xchg
inc
cld
fbld
in
xchg
pop
ds
mov
cmp
sub
jnp
mov
cmpsl
je
test
ret
jge
insb
negb
pusha
repnz
and
fstl
psubusb
xor
pop
xor
gs
inc
mov
or
cltd
push
aad
in
sbb
mov
mov
cmp
popa
cld
ret
sbb
repnz
or
push
popf
xchg
stc
test
roll
and
test
dec
mov
fsubrl
mov
cmp
cli
mov
sbb
push
mov
outsl
lfs
pop
mov
mov
leave
xor
mov
and
sub
arpl
add
divl
and
jne
cmpsl
sbb
cmp
add
stos
in
mov
mov
cmp
shl
or
andb
push
and
add
cmp
and
push
inc
cs
outsl
loopne
push
aam
aad
mov
mov
mov
pop
sarl
in
test
fimuls
xor
cmp
sbb
fsubr
or
std
mov
xchg
jnp
cli
push
dec
pop
in
sub
cmp
movsl
xor
repnz
stos
sub
out
ret
jbe
sub
aam
mov
jp
mov
mov
divb
sbb
and
sub
insb
cld
or
ja
and
fstpl
test
inc
insl
push
sti
ss
cmp
jo
sub
cmp
shlb
idiv
push
mov
mov
or
push
fcomps
pop
sub
in
push
jg
sub
sti
fsubrs
and
cmc
test
adcb
nop
xchg
and
daa
jno
pop
cld
mov
xchg
dec
shlw
in
adc
stos
add
repnz
ret
push
lock
sbb
push
les
inc
inc
or
mov
adc
cld
loop
testb
call
and
shlb
xchg
call
mov
jl
jg
adc
xor
aad
mov
dec
stc
xor
outsb
dec
adc
lcall
xchg
imul
jmp
inc
pop
and
lds
add
adc
adc
mov
clc
pop
cli
ret
scas
nop
mov
inc
add
sbb
push
lea
pushf
inc
inc
rcl
push
xchg
jbe
in
xchg
xchg
in
ret
sbb
push
dec
clc
add
hlt
repnz
dec
mov
dec
xor
pop
testl
adc
idiv
stos
xchg
push
pop
adc
ds
test
popl
js
out
cmp
cltd
dec
mov
jl
ja
cmp
xor
pop
mov
out
loopne
popa
or
jb
dec
sub
pop
adc
xchg
mov
adc
cli
lods
mov
pmulhuw
leave
jg
sbb
add
outsl
mov
sub
jl
sbb
mov
inc
pop
add
iret
inc
mov
xor
cmp
movsb
lds
pushf
jo
ss
shll
push
mov
sub
dec
cmpsl
or
cmp
mov
inc
or
cmp
mov
adc
shll
repz
cmp
mov
jbe
dec
or
dec
insb
iret
dec
cwtl
mov
addr16
popf
les
mov
ds
out
jbe
out
test
push
mov
mov
push
fcmovnb
push
mov
fxtract
aaa
int
jo
add
dec
xor
mov
dec
xchg
loop
fadd
psraw
popa
ss
or
push
jnp
mov
int
bound
outsb
jne
outsl
movl
iret
sub
ljmp
pop
mov
sbb
xchg
mov
movsl
and
xchg
cmp
add
xor
sbb
rcr
fwait
xlat
pop
mov
adc
loop
xor
jne
mov
movsb
dec
push
mov
dec
in
pop
sub
clc
sbb
sbb
add
cs
out
xor
xor
cmpl
inc
lea
jmp
std
jns
jbe
add
push
jb
insb
fidivrl
mov
push
stc
loope
mov
inc
xorb
xor
insl
sub
inc
out
adc
mov
inc
pop
jecxz
dec
cmp
xor
cli
int3
fsubs
rorb
add
js
mov
jg
or
mov
mov
icebp
movsl
xor
sub
dec
in
jbe
push
jae
imull
mov
pop
xchg
or
test
aad
dec
sbb
scas
xchg
fbstp
pushf
into
jbe
or
pop
push
jp
ds
std
sub
in
cmpsb
lret
inc
mov
arpl
jns
es
fisubs
and
mov
insb
mov
fadds
and
movsl
shlb
outsl
mov
jno
insl
popf
iret
aad
sub
fiadds
jnp
aaa
jp
or
mov
pop
test
push
xchg
repnz
cmpsb
lea
push
lahf
shrb
pop
mov
icebp
xchg
cmpsb
paddusw
aam
hlt
xor
xor
cltd
cli
call
add
add
fcoms
in
add
add
xor
aad
or
aas
lret
out
rcrl
adc
push
dec
mov
cmp
out
push
xchg
mov
sbb
adc
roll
or
scas
jle
pop
dec
inc
lea
lret
xorl
pusha
pop
sbb
jae
sbb
pop
push
or
or
loope
push
or
xchg
or
and
xlat
fidivs
aam
jne
add
test
and
les
cmp
mov
stos
dec
cmc
adc
js
subb
pop
dec
push
jge
popa
call
inc
popf
inc
sub
movb
roll
enter
jmp
jg
pop
int
sub
mov
jg
mov
mov
pop
sbb
push
mov
pop
adc
mov
jmp
in
pop
xor
fdivr
outsl
in
mov
cli
imulb
lock
notb
push
push
shrl
dec
loopne
repz
adc
add
stos
mov
lds
insb
leave
shl
cmp
sahf
xor
push
mov
jle
adc
lret
stc
xor
inc
push
pop
sub
dec
fsubp
sbb
loope
fmuls
mov
sbb
cmp
cmp
push
adc
mov
sub
jmp
stos
popa
stos
mov
xor
sbb
lock
push
sarl
or
sti
stos
movsb
cmpsb
call
and
shll
cmp
xor
sub
pop
xchg
cltd
mov
sbb
mov
sbb
insl
stc
push
fwait
sbb
inc
and
xor
cmpsl
cmp
data16
mov
cmpsb
jnp
pop
sbb
sbb
sbb
fiaddl
dec
imul
mov
push
xor
negl
sahf
adc
cmp
shrl
pop
shlb
cmp
stc
jecxz
ss
cmp
mov
mov
addl
cmpsb
aad
mulb
incl
je
and
icebp
je
mov
enter
push
xchg
xor
repnz
scas
imul
add
mov
lock
fidivs
pop
repnz
popf
lods
mov
mov
adc
mov
out
add
jne
xor
xor
sbb
add
xchg
or
sahf
sbbl
cld
ret
push
jo
mov
lods
xchg
ret
xor
lret
neg
mov
jl
test
sbb
add
hlt
push
lahf
outsb
out
hlt
clc
push
jecxz
scas
sti
dec
inc
xor
ljmp
sbb
std
lcall
inc
dec
xor
xor
xor
pop
push
mov
inc
aad
push
jge
andps
test
inc
push
popf
sbb
into
loopne
test
leave
pop
js
mov
xchg
outsb
in
mov
jnp
fldlg2
cwtl
lock
aad
xlat
test
popa
or
xchg
sub
jge
sub
idivb
adc
clc
lds
mov
popa
test
mov
xchg
pop
icebp
inc
out
pop
add
aas
repnz
call
cltd
add
in
repz
outsl
push
xchg
stos
js
rcrl
out
mov
lods
imul
out
and
les
or
pop
lds
push
add
dec
ja
jno
ror
mov
push
jmp
stos
lcall
jns
jbe
fwait
test
jmp
outsb
cmp
hlt
test
or
pop
pop
les
std
call
adc
inc
sbb
lods
pushf
jmp
movsb
jl
in
adc
push
scas
pop
scas
cmpsb
pop
mov
or
sub
test
add
adc
loope
sub
xchg
call
sub
scas
iret
cmpl
aaa
popa
lods
adc
nop
or
enter
in
sbb
xor
mov
test
mov
jmp
or
cmp
in
lret
push
push
xor
xchg
mov
movsb
xchg
xor
mov
jbe
xor
sbb
push
and
add
mov
cli
daa
cmp
test
lcall
mov
jb
sbb
addr16
stos
imul
daa
lock
aad
xchg
adc
outsl
adc
out
xchg
sbb
pop
inc
xchg
std
scas
or
ficoms
bound
cli
dec
sub
cmp
leave
lahf
ljmp
es
push
lock
bound
mov
test
call
in
push
mov
sub
or
aas
jae
push
adc
adc
xor
in
xchg
test
pusha
cmpsl
sbb
lock
cmp
pop
and
pop
pop
mov
aas
cmc
jg
pop
xchg
push
mov
popf
fdivl
test
je
push
movsl
aad
pop
cli
push
scas
ret
lds
add
shll
aas
sbb
cmp
adc
out
sbb
add
mov
xchg
data16
push
lretw
xlat
fidivrs
std
cmp
jecxz
xchg
jae
push
fs
xor
movsl
shll
pop
inc
add
ds
icebp
push
and
mov
pop
sub
andl
sbb
ret
mov
shr
cmp
into
pushf
push
int3
inc
mov
fldenv
add
aad
out
jle
mov
in
stos
pop
inc
dec
push
fistps
xchg
sub
mov
das
mov
repnz
ror
adc
inc
push
or
xchg
mov
push
repz
in
call
fcoms
xor
enter
rcrb
sub
mov
mov
xchg
or
xchg
cmovae
inc
in
aad
dec
aas
pop
mov
sbb
jmp
inc
in
pushf
jmp
push
mov
mov
sub
into
in
jg
enter
out
add
ljmp
lret
orb
arpl
cvtpi2ps
das
mov
movsl
int
and
in
jle
xor
sti
mov
push
out
cmpl
in
sbb
inc
ret
stc
dec
lea
repz
mov
dec
mov
pushf
push
repnz
adc
pop
cmp
inc
push
and
sbb
cs
push
loop
adc
pushf
pop
mov
faddl
js
adc
frstpm(287
arpl
cmpb
xsave
mov
pop
jnp
mov
adc
xchg
adc
sahf
fidivs
inc
dec
enter
filds
lds
mov
test
enter
sbb
fsubl
cmpl
pop
ret
idivb
ficomps
lret
pusha
mov
xchg
std
leave
sbb
movsb
cmpsl
daa
cmp
and
outsl
imul
jbe
pop
mov
mov
fsubrs
int
loope
inc
sub
repnz
addr16
aas
inc
icebp
xchg
xor
loope
add
add
push
jecxz
sbbb
repnz
pop
and
gs
ds
lahf
fmul
icebp
add
inc
test
fwait
mov
cltd
lret
mov
int3
mov
nop
and
rolb
outsl
iret
movsl
mov
shrb
cmp
fcomps
sbbb
pop
dec
push
int
ret
xchg
test
jnp
dec
out
add
stc
popa
pop
roll
pop
pushf
in
pop
adc
jg,pn
xchg
dec
xchg
les
cli
out
call
push
fldenv
mov
jae
aaa
cld
push
or
adc
xor
sbb
adc
sar
push
sub
ret
movsl
pusha
cmp
and
cmp
push
xor
push
mov
scas
bound
inc
outsb
lea
or
ljmp
inc
xchg
lods
rcl
dec
inc
movsl
negb
cwtd
daa
ret
sub
push
lahf
dec
aas
mov
xchg
mov
dec
adc
and
push
dec
xor
aas
arpl
add
cmp
icebp
rclb
imul
lcall
xchg
mov
xor
aad
sbb
inc
dec
jno
adc
inc
and
fwait
out
frstor
sub
enter
scas
and
mov
outsb
jb
loopne
push
iret
int
xchg
cmp
dec
mov
inc
iret
ret
shlb
orb
stos
mov
daa
js
lret
jge
inc
inc
and
push
adcb
fimull
pop
outsl
rcr
mov
ja
call
arpl
sub
xor
rorb
adc
stos
mov
aam
imul
jne
push
sub
popa
or
sub
dec
loope
sbb
mov
cmp
or
aam
push
movsl
dec
andb
and
cmp
shr
nop
lahf
mov
jne
jnp
ja
and
sbbl
adc
xchg
xchg
push
mov
lock
loopne
push
cmp
fs
fs
mov
lods
out
dec
mov
sbb
xor
test
xchg
mov
mov
pop
out
mov
and
popa
xchg
loope
pop
outsw
cwtl
mov
xor
enter
add
imul
sub
enter
test
scas
lock
stc
insb
sub
jns
pop
mov
dec
sti
in
push
jmp
push
fistpll
dec
pop
lcall
jmp
jp
jg
fstps
add
test
dec
sub
inc
out
jnp
arpl
mov
in
dec
into
push
hlt
jp
or
data16
push
fmul
and
xor
fbstp
mov
push
lahf
outsb
pop
xlat
mov
mov
arpl
out
ss
adc
dec
add
fucompp
pop
or
sti
xor
jl
jge
xor
idivb
dec
jle
aas
mull
jb
xchg
mov
mov
bound
add
mov
jl
jne
fbld
fiadds
sbb
dec
repz
aaa
fucom
test
int3
push
cld
mov
popa
sarb
mov
movsl
push
lods
rcrb
push
and
pop
pop
jo
mov
push
and
rolb
ss
jnp
inc
inc
imul
push
push
and
pop
shrb
mov
mov
push
jno
rcrl
or
jb
dec
dec
daa
in
stc
xchg
cwtl
int
add
gs
ffreep
sahf
and
fs
pop
cltd
and
lret
dec
and
popa
jbe
xlat
iret
jb
and
push
jno
xadd
pop
leave
adc
nop
pop
push
mov
test
mull
sub
adc
pop
call
jg
jle
add
sbb
mov
xor
or
adc
push
sbb
mov
xchg
hlt
test
sbb
dec
dec
cltd
cmp
cld
fcoml
push
pop
in
into
aad
dec
sub
cmpb
jg
sbb
ret
out
addr16
pop
push
jbe
xchg
xchg
jbe
rcrb
lcall
add
cmp
lea
movsb
add
loope
mov
daa
call
jl
push
outsb
pop
or
ja
std
in
movsl
fcompl
pop
fadds
push
das
mov
mov
subl
imul
fnstsw
jp
cwtl
movl
pop
mov
fidivrl
xchg
fists
mov
sub
jb
dec
aad
fldcw
out
fnstcw
es
inc
push
dec
dec
cmp
cmpsb
xor
inc
movsb
mov
jmp
sub
dec
andl
push
outsl
in
int
push
xchg
and
xor
mov
pop
push
push
and
sub
dec
imul
mov
loopne
test
pop
mov
push
and
adc
mov
mov
sbb
out
add
ret
mov
int3
adc
mov
in
cmpsl
sub
push
inc
pop
lret
push
stc
xor
mov
hlt
pop
lahf
outsb
inc
mov
mov
outsb
pop
mov
pop
ss
sbb
adc
jns
push
jg
mov
js
pusha
ja
rorl
mov
or
mov
cmp
mov
call
mov
lahf
add
or
add
clc
daa
cmp
std
cli
push
adc
add
popa
enter
pop
pop
sbb
mov
stc
ss
lahf
sub
adc
add
bound
imul
mov
pop
aad
cmp
int
sti
mov
xor
mov
clc
dec
fists
push
test
loope
in
jno
jo
mov
or
aaa
or
lea
aad
outsb
cmp
sbb
jbe
lcall
jo
inc
pusha
arpl
cmp
mov
je
ja
adc
popf
out
mov
and
mov
jbe
movsl
out
or
pop
cltd
aad
mov
sub
adc
jno
enter
ss
popf
pop
push
mov
push
pushf
mov
dec
jb
sbbb
cld
jp
imul
or
repz
int3
push
in
aaa
cmp
in
xchg
idivb
int3
adc
xchg
sahf
in
repz
adc
and
pop
push
push
sbb
dec
cli
insl
mov
lahf
int
push
cmp
pop
jecxz
cmp
push
adc
push
jp
cwtl
or
or
sub
mov
sub
push
xchg
or
leave
popf
repnz
jle
jo
stc
adc
or
in
xchg
adcb
xor
aad
lds
jg
push
inc
scas
jns
mov
imul
pop
cld
into
jmp
mov
jo
icebp
cmp
mov
jbe
dec
nop
mov
dec
sub
jb
mov
cmp
ljmp
cmc
test
sbb
ss
or
and
jecxz
scas
push
stos
movsb
imul
mov
dec
jae
mov
mov
lcall
stc
test
cmpl
lods
loop
cmp
push
jb
sbb
daa
sbb
dec
push
xchg
loop
outsl
mov
data16
add
les
sub
ds
pop
scas
pop
add
inc
rcrl
clc
xor
fidivs
xchg
cs
push
dec
popf
fidivs
stos
lods
int
and
sub
test
adc
sub
add
jp
and
movsl
stos
dec
hlt
dec
inc
mov
sahf
jle
mov
xor
mov
iret
adc
adc
sbb
cmpsl
fidivrs
adc
jae
dec
dec
adc
add
sbb
inc
pop
push
fldenv
aas
loopne
jge
jnp
xor
push
orl
push
les
jne
icebp
sbbl
dec
popa
into
daa
stos
outsl
mov
popf
inc
subl
fwait
mov
or
jle
or
adcl
jbe
push
mov
mov
cmp
negl
popf
adc
fdivrs
bound
movsl
fwait
jbe
aad
xor
pushf
ds
sbb
sbb
pop
mov
xor
mov
pusha
lock
out
dec
or
scas
aad
aam
scas
inc
orl
cmp
rorb
fdivr
cltd
dec
shlb
pop
xor
cmp
mov
pop
cltd
call
dec
sti
push
ss
movsb
out
xchg
cs
jecxz
jge
inc
xor
xchg
hlt
shlb
aas
sbb
fsubrl
pusha
ret
jnp
pusha
push
sbb
jge
pop
out
sarl
ja
iret
add
lret
ja
out
and
push
xchg
sub
fwait
xchg
mov
je
xchg
xor
imul
sub
mov
int3
ja
mov
sub
jb
fdivr
rcr
jle
inc
fsubp
mov
cmovnp
dec
push
repz
xchg
int
lock
insb
lcall
popl
adc
pushf
xor
rcrl
adc
pop
sbb
xor
adc
dec
lods
add
in
aas
add
mull
test
popa
mov
cmp
shlb
mov
fadd
test
mov
mov
insb
push
es
and
mov
mov
daa
fstp
push
adc
dec
xchg
and
mov
xchg
add
ja
sub
add
mov
shll
sbb
sbbb
call
clc
jecxz
insb
int3
jg
cltd
add
pop
adc
pop
push
test
mov
push
stc
iret
in
pop
jle
add
int3
pop
imul
aaa
aas
xor
lahf
lods
lock
mov
jmp
pop
stc
in
out
les
mov
inc
insb
adc
aam
es
lret
int3
test
mov
hlt
int
push
call
fwait
notb
lods
andl
xor
scas
add
xor
sub
lcall
xchg
mov
xchg
jle
cmp
dec
jnp
xor
xor
or
fcoms
pusha
push
mov
jmp
cmp
movsl
cmp
stc
incb
jg
aas
fucomp
mov
cmp
dec
xchg
cli
movsb
adc
bound
jl
mov
and
lret
jo
mov
ja
cmp
sub
lods
je
mov
cld
and
stos
adc
inc
dec
adc
add
add
stc
arpl
xchg
test
dec
int3
sub
cmp
lods
push
js
jne
inc
or
insb
pushf
mov
rorb
xchg
pushf
adc
mov
enter
ja
lea
hlt
out
xchg
xchg
push
inc
outsb
or
in
movsl
pop
ret
mov
aas
jcxz
and
jle
dec
gs
je
rcrb
jno
aad
jp
repz
mov
rorb
sahf
in
or
inc
xor
xchg
jb
jp
pop
and
dec
stc
sub
cmpsb
dec
push
push
mov
ss
xor
sti
cmp
mov
push
xor
push
cmpsl
push
movsb
adc
cmp
or
out
iret
xor
mov
repnz
adc
dec
jb
inc
pop
xchg
mov
pop
popf
xlat
mov
jnp
pushf
dec
icebp
jmp
lcall
fs
pop
out
pop
push
push
xor
mov
jecxz
popf
dec
sub
std
lea
mov
mov
cmp
mov
cmpsl
adc
pop
sub
shl
jns
push
jecxz,pt
in
out
sub
out
iret
xor
pop
jne
push
stos
adc
dec
enter
mov
push
lea
js
leave
sti
jae
sti
fsubrs
rcll
data16
xchg
jno
mov
or
add
sbb
mov
fsubs
fyl2xp1
sti
repnz
pop
sbb
and
imul
jbe
sub
push
ss
dec
aam
mov
xlat
mov
sub
bound
addr16
jl
call
leave
mov
sti
cmpsb
lcall
dec
lret
xchg
lret
adc
scas
push
sub
cwtl
sub
sbb
adc
cmp
imul
das
mov
mov
inc
addr16
xchg
xchg
mov
and
xor
push
mov
mov
inc
in
cmp
fcompp
ss
xchg
dec
jge
in
jg
adc
mov
pop
cmpsl
pop
mov
cld
cmpsl
fisttps
jns
jmp
push
inc
and
pop
cmp
aaa
jp
mov
test
mov
shrb
aad
jo
inc
fimuls
outsb
inc
cmp
jns
lret
iret
cld
je
and
bound
jnp
ss
arpl
je
add
add
psrlq
fisubrl
inc
dec
hlt
mov
adc
and
jp
jge
in
push
cmpsl
ss
xchg
subl
mov
mov
dec
push
hlt
lret
lcall
jmp
fsubl
fxch
ror
lret
lock
jle
leave
push
in
fildll
std
outsb
cld
sti
fs
sub
jl
push
fcomps
jne
je,pt
stos
jno
pop
into
je
dec
push
shlb
fisubrs
cmp
and
push
xchg
ja
sbb
movsl
pusha
stos
xor
fcomps
jecxz
add
data16
inc
sbb
inc
fs
inc
leave
fcoml
loope
dec
lcall
add
adc
sti
xor
mov
jle
sub
repnz
nop
scas
lods
or
mov
insl
dec
aaa
jb
pusha
loope
cmp
xchg
daa
adc
add
add
adc
jae
pop
icebp
pop
repz
inc
xor
les
aad
dec
imul
cs
push
loopne
shl
mov
mov
mov
jmp
and
push
pusha
fwait
cmp
ja
xlat
aad
movsb
pop
mov
jp
out
cmp
sub
ds
mov
insb
into
js
test
dec
jmp
or
inc
pop
inc
out
int
int
sbbl
leave
jae
or
push
mov
xor
and
roll
xchg
xchg
xchg
adc
push
sub
nop
imul
sub
lret
push
add
subl
fbstp
ficomps
cmpsl
xor
movsb
pop
cli
sbb
pop
stos
popf
mov
push
pop
add
push
push
jmp
xchg
mov
ss
pop
leave
fwait
xchg
sbb
cmc
test
shl
stc
mov
mov
nop
dec
cmpb
jecxz
shlb
inc
and
cmpsl
fcmovnbe
scas
push
dec
lahf
movsl
out
sahf
rorl
ret
aad
callw
inc
cmp
iret
popa
out
pop
pop
xor
andl
loope
sbb
cmp
inc
lock
test
adc
dec
dec
mov
sbb
clc
xor
dec
repnz
call
inc
xor
insl
and
pop
inc
sbb
insl
shrl
lcall
ja
aad
cmp
pop
sub
test
insl
cli
or
xchg
mov
aas
lods
cli
lea
shrl
sub
or
cmp
cmp
cmp
xchg
and
mov
test
xchg
pop
sbb
inc
add
jb
mov
jae
jecxz
mov
clc
mov
ret
lret
push
out
lods
add
push
add
push
dec
and
imul
mov
lods
dec
repnz
and
std
inc
mov
mov
fdivs
aas
jg
dec
xchg
or
fdivrp
jecxz
dec
adc
lods
cmp
push
or
stos
inc
movsb
aas
cmp
loope
out
pop
sub
xor
iret
jo
popf
sarb
mov
aas
test
rorl
imul
adc
outsb
ja
lret
cmc
xlat
ret
push
and
sub
dec
dec
pop
push
repnz
mov
pop
decb
mov
xlat
mov
jl
jl
js
rorl
out
pop
mov
push
push
jmp
div
jb
mov
cltd
movsl
imul
xchg
ja
es
mov
pop
nop
mov
add
inc
lret
jno
call
outsl
cmpsb
sbb
dec
insb
xor
clc
js
push
out
fidivs
sub
andl
repnz
lock
xor
adcb
add
pop
jnp
push
push
mov
and
jmp
pop
push
push
xchg
mov
cwtl
adc
mov
pop
call
pop
hlt
xchg
adc
ss
push
imul
cltd
xchg
iret
xor
and
rcr
inc
adc
push
popf
aaa
push
mov
test
mov
mov
mov
fsubr
lock
mov
outsl
out
push
test
push
cmp
stc
nop
xlat
cld
mov
in
cmp
jl
insb
cmp
lcall
and
dec
addr16
xchg
mov
hlt
insl
sahf
pop
push
rolb
popf
enter
add
into
mov
test
inc
mov
fwait
aas
mov
dec
aaa
lock
dec
push
decb
cld
inc
mov
sub
pusha
mov
xchg
mov
lods
fcmovnbe
adc
inc
insl
ret
xchg
adc
and
pop
inc
je
dec
push
out
cwtl
or
sub
imul
dec
nop
lods
mov
adc
xlat
leave
outsb
into
sahf
gs
mov
pop
sub
dec
xorl
mov
aad
daa
lods
jns
stos
mov
xchg
xchg
int3
in
into
cmc
mov
es
xchg
pop
fwait
jl
mov
inc
and
fidivrl
dec
jp
sub
jns
mov
push
add
jae
scas
add
cmp
rorb
dec
inc
stos
rcrb
shrb
and
out
jb
fstp
gs
rorl
sbb
and
jb
idivl
inc
push
ror
lds
jb
ficomps
mov
cmp
in
dec
xchg
inc
sbb
jne
or
dec
cmp
jnp
sti
es
cmp
cltd
lret
lods
dec
in
mov
inc
lret
lahf
pop
sub
dec
insl
ret
pop
mov
imul
testb
push
jmp
sbb
adc
mov
and
inc
xchg
call
clc
mulb
out
jg
out
push
pop
daa
and
inc
rcrb
sbb
pop
jo
pop
mov
and
leave
lods
bound
scas
xor
mov
out
push
adc
shr
sbb
stos
mov
ret
repz
pop
stc
sbb
mov
jle
call
stos
shl
mov
mov
cmp
mov
lahf
stc
dec
push
hlt
cmc
mov
mov
mov
or
bnd
xor
fidivrs
jae
mov
or
into
and
ja
repnz
fnstenv
cmp
pop
adc
ja
ret
dec
adc
lods
pop
adc
inc
lods
sub
loopne
mov
fs
pop
mov
psubd
add
aam
mov
cmpl
data16
ret
outsb
xor
xor
mov
push
enter
jo
push
xchg
sub
jno
sbb
inc
dec
imul
xchg
cld
cmc
jae
mov
cmpsb
leave
in
xor
outsl
inc
enter
stos
cmp
out
pop
sub
pop
sbb
mov
xchg
cmp
in
insl
cwtl
mov
arpl
loop
xor
jmp
inc
push
or
mov
xor
mov
sub
xchg
push
in
mov
stos
bound
mov
loop
jne
cmp
je
insb
lods
fcom
add
adc
shll
pop
aaa
jl
ljmp
inc
rorl
ret
push
int3
stos
and
xlat
cmp
xchg
scas
mov
cmp
adc
and
xor
imul
mov
ljmp
and
cmpsl
lock
rolb
sub
imul
mov
daa
xchg
pop
std
fbld
cld
fdivl
es
movsb
fsubrl
or
push
scas
repnz
je
int3
out
mov
mov
jp
or
aad
loope
cli
iret
sbb
imul
xor
fistpl
cmp
mov
fimull
sbb
jmp
lea
or
lea
push
mov
pop
dec
mov
lock
mov
push
int3
add
scas
es
pop
sbb
adc
icebp
adc
adc
dec
int
enter
or
cmp
mov
in
or
inc
movsb
gs
xchg
pop
sahf
or
jnp
test
sbb
cltd
mov
mov
scas
lods
loop
dec
adc
popa
addr16
call
xor
and
add
adc
loop
mov
in
mov
sbb
sub
mov
mov
pmullw
xor
push
pop
faddl
out
mov
mov
ret
add
orb
les
aad
test
outsb
sbb
nop
jo
mov
push
or
mov
pop
dec
lock
insb
add
mov
pop
loopne
sbb
mov
out
push
xchg
enter
subb
in
andb
inc
pop
jecxz
mov
add
nop
stc
sbb
icebp
orb
lods
mov
pop
jne
aam
or
sub
fiadds
cs
inc
or
leave
mov
rol
push
pop
mov
xor
cmpsl
push
iret
pop
add
test
or
mov
push
sub
pop
pop
sbb
inc
xor
rcrl
inc
in
lods
mov
imul
js
out
add
lcall
lock
enter
cmp
dec
sbb
hlt
popl
cltd
mov
lret
jnp
int
sub
mov
jl
ja
shll
sti
xchg
cmp
cmpsl
repnz
mov
sbb
mov
jns
fisttps
insl
sub
out
into
arpl
xlat
loope
ljmp
mov
stos
outsl
inc
sbb
adc
add
sub
lcall
daa
ja
and
and
mov
adc
and
jg
inc
mov
imul
out
roll
les
pusha
imul
inc
dec
xchg
jl
jmp
jb
iret
mov
cli
mov
in
inc
or
adc
inc
inc
add
push
lret
sbb
xor
jbe
xchg
jae
xor
jl
seta
movups
int
mull
fsubl
cmp
push
sub
push
cli
mov
lret
adc
in
in
inc
fadds
test
pushf
add
lds
mov
mov
dec
repz
repz
push
jbe
add
mov
push
adc
push
lcall
jbe
stos
ljmp
add
and
jne
fidivrl
mov
scas
les
pop
dec
sahf
aaa
test
xchg
shrb
mov
lea
testb
jo
add
scas
js
xchg
in
fcoms
les
call
push
pop
shll
xchg
fwait
inc
in
sbb
cmpsb
out
aaa
push
out
cmp
imul
orl
sub
mov
leave
ret
cmc
fisubs
push
cltd
xor
dec
stc
cwtl
dec
pop
inc
and
and
dec
outsl
inc
add
mov
rcll
scas
mov
or
xchg
icebp
fidivs
mov
adc
test
pop
cld
adc
sub
cmpsl
or
sahf
nop
ds
pop
lock
test
adcb
mov
adc
mov
fbld
add
cmpb
es
andl
movsl
cli
test
mov
lds
pop
mov
xor
cltd
push
lahf
dec
inc
pop
pusha
cmpsb
mov
xor
dec
insb
in
jmp
push
mov
loopne
inc
jl
add
dec
add
popa
xchg
test
fwait
pop
and
hlt
adc
aad
dec
mov
es
loope
or
inc
mov
sbb
mov
push
sub
dec
cmc
or
xchg
mov
adcb
push
dec
push
aam
outsb
pop
jge
hlt
out
mov
and
sub
pusha
lahf
imul
adc
mov
out
into
jo
push
inc
pop
jp
das
mov
je
mov
sbb
lret
and
scas
fs
in
jp
push
test
jbe
sbb
add
addl
fsubrl
pop
jl
popf
pop
sub
and
pop
stos
push
push
cli
and
dec
push
rcrb
push
lock
lahf
cld
lods
fisubs
or
inc
dec
daa
pop
inc
pop
xor
rolb
jae
sbb
call
punpckhdq
pusha
jle
fstpl
xor
lods
js
mov
jmp
les
ds
sub
add
cs
push
jns
int
lahf
mov
push
stos
push
repnz
fisubrl
xchg
loopne
fdivrl
fs
testb
xor
or
outsl
cmpsl
or
mov
jge
scas
daa
into
ljmp
dec
scas
ret
jp
jmp
je
adc
out
or
push
mov
inc
push
push
cmp
mov
nop
in
popf
fsts
call
dec
int3
mov
push
mov
or
sub
pusha
popa
movsb
mov
mov
js
cmc
jo
add
jbe
mov
fwait
in
cmp
rclb
jle
pop
repnz
mov
mov
dec
push
xchg
mov
pop
nop
lods
fadd
shl
sub
shlb
sahf
jbe
pop
pop
add
pop
sti
mov
dec
inc
cmp
aas
dec
loopne
mov
jge
adc
aad
xor
pop
arpl
xchg
test
mov
jno
sub
imul
fs
sbb
mov
fldl
push
ljmp
jns
stos
sbb
xchg
pop
sti
lds
in
xor
push
push
ljmp
subl
push
jnp
test
mov
and
pop
addr16
mov
stos
std
mov
sahf
iret
cmpsl
shlb
stc
xor
inc
pop
xchg
pop
inc
jmp
gs
loop
lret
xchg
sub
cli
push
cli
decl
js
pop
insb
fwait
xor
or
je
lea
xchg
xchg
or
or
scas
movsl
fistl
js
mov
push
push
das
jecxz
loopne
xor
popf
cltd
jle
aas
mov
sub
sbb
xchg
pop
fs
call
lahf
fs
ljmp
dec
hlt
aam
aad
dec
dec
xchg
pop
mov
xor
inc
dec
outsl
aaa
loope
lods
or
dec
push
jnp
xchg
cmp
inc
and
or
inc
lret
xchg
ljmp
cwtl
pop
out
ljmp
test
xor
pop
cmp
dec
sbb
jmp
lahf
idivl
les
sub
stos
adc
imul
mov
bound
mov
pop
push
xor
cmp
mov
imul
pop
sahf
inc
pop
xor
pop
pop
push
mov
mov
mov
jmp
mov
cmp
cltd
add
jbe
jl
mov
mov
inc
add
popa
xchg
inc
lret
push
fcmovb
xchg
lods
pop
and
mov
int3
adc
dec
inc
jo
jae
mov
xchg
aam
dec
add
lods
jnp
dec
roll
std
push
push
sbb
scas
fisubrl
rcrb
iret
xor
cmp
jecxz
mov
inc
cmpsl
xchg
inc
xor
xchg
cwtl
stc
cmp
xor
adc
push
in
pop
mov
cmp
push
leave
rcll
cmp
jl
dec
pusha
lret
mov
pop
adc
adc
in
insl
or
lahf
lock
jl
push
mov
shlb
mov
and
sub
jae
pop
addr16
std
mov
and
mov
mov
pop
hlt
push
arpl
scas
xchg
mov
add
popa
pop
ficoml
jmp
pop
scas
xchg
mov
in
inc
mov
fistps
movsb
cwtl
out
pop
push
repnz
adc
mov
call
push
dec
mov
push
addr16
push
inc
fdivrp
loop
and
inc
inc
sahf
pop
inc
inc
movsl
jbe
mov
cmp
fucom
add
push
inc
dec
or
inc
test
inc
sub
jbe
int
add
std
es
sub
rclb
cltd
test
ds
xchg
mov
jnp
mov
push
add
scas
push
repnz
test
mov
addb
xchg
xchg
xchg
push
int
rolb
xchg
pop
or
cmp
mov
push
mov
cmp
ljmp
hlt
lahf
inc
in
push
jns
hlt
pushf
lcall
sarl
cs
pop
xor
pop
repnz
dec
imul
stos
fdivs
xlat
and
push
cld
dec
bound
mov
cmpsb
movsb
movsb
xchg
adc
sbb
push
jl
fcoml
lock
mov
test
cmp
icebp
gs
xor
sbb
andl
rorb
xchg
sub
adc
jns
mov
mov
fisubrs
xor
add
loope
aaa
insl
stos
xchg
push
stc
xchg
scas
pop
fstl
mov
mov
dec
or
sbb
repz
sbb
xchg
jnp
add
mov
inc
sti
sub
sbb
fs
scas
imul
jle,pt
and
js
ss
lods
cmpsl
mov
mov
and
push
mov
imul
xlat
mov
lods
lds
mov
xchg
subb
icebp
inc
xorb
push
lea
hlt
xchg
daa
sbb
add
insb
les
lds
cmc
xchg
mov
inc
insb
arpl
push
mov
jg
push
sbb
popa
mov
jp
mov
mov
sub
popa
mov
shlb
xchg
jge
mov
ja
xchg
js
jp,pt
mov
loop
adc
imul
lea
jns
inc
inc
aam
or
adc
pop
mov
fcoml
adc
test
pop
in
push
fisubrl
cmpsl
inc
cmp
jbe
divb
pop
popa
outsb
mov
mov
jae
js
cmp
jae
adc
leave
push
jl
out
aaa
xchg
mov
rcll
test
loope
mov
mov
int3
xlat
jne
mov
mov
ja
or
push
loopne
icebp
lods
cltd
xchg
int
xor
popa
sub
mov
push
mov
cli
hlt
jb
jns
sbb
mov
add
ja
rdpmc
enter
jae
loopne
imul
sbb
ret
inc
loopne
in
rolb
mov
and
lock
xor
sbb
xchg
fsubrl
push
push
scas
push
repz
mov
repnz
out
adc
loopne
ja
lcall
or
sub
fldenvs
loope
call
adc
daa
fwait
add
cmp
insl
mov
mov
dec
fwait
cmp
out
sub
mov
or
pop
jle
add
sbb
lea
cmp
imull
bound
lcall
jne
inc
sbb
scas
mov
imul
jbe
xchg
ds
outsl
pop
push
mov
or
sbb
outsl
add
fisubrl
nop
outsb
test
lret
jge
in
sub
imul
jno
push
xchg
mov
adc
mov
cmpsb
es
mull
pop
insb
jecxz
andb
xor
repz
xchg
sbb
in
xorl
and
xchg
mov
ret
aas
mov
cmp
call
push
sbb
imulb
lods
mov
add
scas
mov
nop
xor
pop
mov
mov
iret
mov
pop
fiadds
xchg
and
dec
mov
mov
mov
fs
pop
mov
mov
push
push
push
dec
lods
lcall
fdivrs
or
sbb
dec
jg
cwtl
jbe
adc
call
mov
mov
mov
ret
cs
lea
add
call
js
dec
lea
mov
in
add
in
clc
push
imul
test
dec
mov
scas
push
shrb
pop
push
lret
lcall
jp
pop
inc
cmp
es
pop
xor
inc
popa
push
dec
xor
clc
subb
in
xchg
push
push
dec
repnz
inc
xchg
adc
popa
cltd
or
insb
jno
clc
jg
push
movl
cltd
pop
xchg
push
inc
js
dec
adc
and
push
out
dec
adc
xchg
push
repz
int
xor
lea
std
or
lcall
in
sub
and
xor
arpl
stc
jns
sbb
icebp
inc
fcomps
or
loope
mov
mov
adc
mov
inc
inc
adc
inc
jbe
testb
or
sbb
push
sbb
jmp
jno
jae
inc
inc
cmc
add
cs
dec
jno
push
xor
aaa
cmp
cmpb
pop
fisttps
repz
stos
inc
icebp
enter
and
jmp
push
push
pushf
jb
inc
mov
mov
mov
mov
ret
rep
push
pop
sub
test
pop
into
push
sub
into
fcoms
xchg
xor
ret
xor
aas
jno
test
enter
enter
ja
aaa
das
or
ffree
mov
dec
mov
js
repnz
adc
cmp
adc
scas
jae
movsl
rcl
stos
int
sbb
mov
cmp
mov
leave
sub
and
push
inc
sub
ds
xchg
cmp
adc
cmp
xlat
xchg
inc
lods
fistpll
jmp
jne
sbb
jg
push
xor
lock
mov
inc
in
andl
cwtl
in
in
cld
fstp
xor
test
jno
inc
outsb
adc
mov
sub
xchg
xor
dec
sbb
push
out
cld
lret
mov
test
mov
lcall
and
fmull
or
xchg
aas
dec
outsb
sbb
xor
call
repz
cmpsb
fcompl
push
sti
cmpb
icebp
cmpsb
mov
dec
sbb
mov
in
push
sub
sub
mov
out
push
and
mov
xor
xor
stos
adc
lcall
jge
rol
cmp
inc
xchg
mov
insb
dec
adc
jge
shll
push
push
movsl
loop
cmp
stos
lret
xchg
std
sahf
mov
test
shlb
sahf
add
dec
or
push
xchg
mov
xchg
push
jnp
add
jge
push
std
out
jecxz
js
stc
inc
loopne
or
and
push
lahf
imul
sub
sbb
and
pop
test
jnp
jmp
ret
ds
ret
mov
dec
adc
out
pop
cmp
adc
arpl
fwait
dec
stc
inc
dec
aam
dec
pop
aas
je
cmp
mov
mov
addr16
clc
cmp
loop
add
fsub
into
loopne
loop
push
sub
push
and
js
push
add
xorb
jl
add
fisubs
xchg
mov
jle
stc
cld
cli
es
lock
cmp
movsb
jo
cmp
xchg
xchg
add
push
cmc
out
mov
lcall
test
adcb
pop
bound
push
cli
subb
mov
stos
lds
cmpsb
test
pop
mov
into
lret
jb
xor
add
mov
inc
jle
shlb
aas
jp
cmpsl
pop
and
out
repnz
loopne
jmp
pop
sub
add
and
xor
dec
out
xchg
jg
arpl
popa
int3
mov
inc
xchg
jb
adc
mov
cmpsl
sub
ret
and
mov
inc
mov
decl
fbld
pop
lcall
imul
cli
push
fcmovnu
inc
pinsrw
sbb
gs
icebp
push
or
arpl
xchg
gs
loope
sbb
ja
mov
push
int
arpl
insb
and
lock
ja
sub
jle
loope
pop
icebp
mov
shl
imul
subl
sahf
mov
adc
sbb
sahf
int3
mov
icebp
movsb
jnp
adc
sub
fcompl
in
add
mov
int3
xchg
fidivl
imul
mov
add
or
push
mov
ret
jmp
aad
std
xchg
mov
lods
adc
inc
lret
das
mov
call
loope
push
pop
or
xor
push
repnz
or
xor
sbb
loop
iret
ds
mov
adc
out
lock
or
inc
xchg
mov
push
pop
cmp
bound
pop
in
mov
push
sbb
icebp
mov
adc
aaa
ljmp
add
or
and
ljmp
mov
sbb
pop
adc
push
fcmovne
lods
xor
inc
adc
popf
pop
xor
mov
pop
pushf
push
inc
sbb
jp
sbb
fcoms
sub
stos
cs
rcll
shlb
sub
xchg
or
fisubs
out
inc
test
mov
mov
and
pop
lods
sbb
ja
out
roll
sbb
cmp
repz
mov
aaa
shrl
ss
jae
sbb
addl
lahf
push
movsl
sahf
test
fs
mov
fisubrl
aad
es
mov
xor
push
iret
imul
popa
mov
in
adc
rolb
mov
ljmp
jae
aaa
mov
lret
jne
jmp
sbb
addl
pop
dec
popa
outsl
mov
mov
push
insl
add
and
xchg
ds
movsl
push
sbb
pop
cmp
andl
fcoms
jl
scas
jns
cli
outsl
dec
jb
jle
mov
and
out
xchg
cmpsb
fwait
dec
adc
mov
into
or
decb
push
cld
mov
int
sub
and
mov
add
test
cmp
push
pop
rcll
dec
jns
leave
or
in
fdiv
sbb
or
subl
xchg
and
sbb
and
jle
in
ja
mov
add
je
mov
lods
adc
jbe
roll
mov
and
pop
mov
cmp
mov
nop
pusha
call
mov
pushf
out
je
cltd
ret
pop
push
cld
and
ss
lods
or
clc
hlt
in
fistl
inc
dec
cmpsb
mov
stc
inc
hlt
icebp
rclb
lds
mov
jmp
pop
add
ds
add
xchg
sbb
out
lret
hlt
sbb
dec
jo
mov
xchg
lret
stos
sbb
add
push
cmp
xchg
stos
ljmp
sub
mov
xchg
inc
pop
push
mov
cmpsl
cltd
imul
mov
mov
pop
cwtl
aas
ja
add
push
add
sahf
or
xchg
fs
pusha
inc
or
sbb
loopne
mov
jmp
push
shrl
pusha
arpl
mov
ljmp
mov
jg
push
mov
mov
loope
or
aam
xchg
sub
sbb
nop
cmc
inc
xor
dec
push
push
mov
sub
adc
insb
cmp
inc
ss
sbb
je
je
cmc
movsl
cltd
clc
xchg
pop
dec
into
jo
jb
adc
push
sbb
shrb
lcall
pop
sti
sub
inc
push
aaa
inc
fcmovu
aas
push
call
rcll
add
inc
into
mov
cmp
out
rcrl
nop
dec
jns
sub
push
sbb
cmp
mov
inc
xchg
jle
in
lods
dec
rclb
fstpt
dec
lahf
add
fwait
pxor
cmpsb
test
test
das
hlt
jmp
pusha
inc
ret
adc
in
fisttpll
cmpb
dec
sbb
xchg
rcll
inc
in
jecxz
pop
lea
dec
mov
insb
xor
out
call
icebp
cmp
pop
lahf
jl
inc
xlat
leave
les
lock
and
aas
je
cmc
mov
add
mov
fcomp
sub
mov
jl
push
jg
mov
push
int3
jnp
icebp
popf
out
jbe
xor
movsl
push
cmp
xchg
push
roll
imul
pop
fcmovu
stos
pop
xchg
inc
jnp
mov
ret
imul
test
push
mov
inc
cwtl
call
add
in
sub
jge
jl
mov
aas
ret
int3
cmp
repnz
jae
inc
imul
sbb
pop
sbb
in
movsl
popa
inc
and
addb
movsb
mov
push
cmp
xor
add
movsb
adc
pushw
inc
cmp
in
scas
cmp
sub
xor
xlat
es
jns
dec
cmp
dec
in
sbb
hlt
popf
mov
xorb
xchg
jmp
pop
das
mov
jecxz
mov
mov
push
jge
in
sub
mov
inc
push
inc
sbb
mov
and
push
mov
xor
jmp
push
xor
imul
push
push
je
add
push
pop
or
mov
add
mov
cmp
sbb
jl
mov
fwait
into
ret
jge
fcmovnu
adc
add
sti
lea
cmp
xlat
jge
inc
ja
sbb
fnstcw
mov
into
pop
adcb
stc
and
repz
fs
and
jo
mov
and
je
daa
cld
leave
jge
pop
mov
dec
aas
jb
rol
cmpb
jl
pop
mov
mov
cmp
jl
push
xchg
xor
dec
test
shlb
dec
xor
push
push
mov
mov
mov
lcall
adc
imull
jge
cmpl
mov
scas
lret
js
adc
cmpsl
sbb
fdivr
xchg
fucomip
cmp
shrb
push
call
xorl
push
int
jae
xor
jno
push
lea
add
push
cmc
pop
push
cmp
adc
xchg
jo
popf
sbb
in
xor
in
in
leave
es
je
adc
jmp
loopne
or
shll
push
call
add
arpl
jbe
cltd
ret
lods
out
inc
mov
add
int3
ret
jne
leave
aaa
stc
push
sarb
loop
or
ds
mov
xor
lock
lret
movsb
sarb
lret
push
cmp
aas
outsl
mov
mov
inc
fs
xor
test
icebp
or
lods
addr16
pushl
or
lds
sahf
inc
jmp
xchg
or
pop
add
adc
cmp
loope
std
int3
imul
adc
mov
aaa
pop
fadd
sbb
stc
jge
or
and
lcall
imul
jno
inc
pop
dec
into
and
icebp
inc
push
cmpsb
push
dec
xchg
cmp
xchg
inc
mov
push
mov
or
sub
xor
faddl
inc
xchg
lret
and
enter
loope
in
fdivs
pop
sahf
mov
cmpsl
xchg
scas
adc
mov
mov
and
adc
adc
mov
mov
bound
iret
testl
ds
xor
in
mov
pop
inc
lret
cmc
cmp
ljmp
dec
mov
rorb
mov
leave
add
xchg
loope
xor
in
cmp
or
adc
adc
jp
pop
popa
aaa
fildll
daa
out
roll
adcb
stc
lret
add
outsb
add
dec
push
mov
icebp
es
mov
bound
stc
loopne
ljmp
test
mov
mov
push
packssdw
dec
lods
lret
adc
jo
dec
xor
mov
shrl
jo
leave
and
popf
cmpsb
push
addr16
and
loop
jmp
pop
in
xchg
xor
subb
outsl
inc
popf
push
adcb
jb
cwtl
mov
mov
outsl
fnstenv
jecxz
aad
xchg
stos
sbb
sub
xchg
xor
mov
clc
add
pop
dec
repnz
in
add
das
mov
xor
fcomps
popf
push
pushl
ljmp
inc
mov
mov
fs
or
push
fistps
push
mov
enter
cli
inc
out
rcr
fldt
aas
fdivrs
cltd
xor
adc
and
ficoml
jle
mov
sarl
pop
or
jl
or
sarb
push
dec
inc
push
std
or
iret
push
leave
fs
xchg
inc
lods
mov
sub
mov
frstor
mov
xchg
lret
pop
lcall
jno
adc
sbb
xchg
sti
leave
xchg
mov
sbb
test
sbb
lahf
repnz
pop
and
lcall
sbb
xor
imul
rol
mov
push
or
sub
mov
mov
inc
xchg
psraw
subl
adc
out
cmp
pop
pop
lods
into
lcall
data16
mov
lods
sbb
sarb
jge
stos
xchg
rorl
addr16
dec
pop
popa
call
dec
mov
xchg
inc
push
cmp
rol
test
add
test
loopne
lds
sbb
push
adc
aas
loope
out
jae
xlat
xchg
or
mov
adc
insl
std
mov
or
sbb
pop
aam
sbb
push
inc
pushf
pop
xchg
xchg
mov
lea
pop
call
inc
iret
xchg
negb
ud0
push
or
xchg
add
rcrb
sub
xchg
dec
or
in
addr16
jne
pop
lahf
out
flds
xchg
dec
pop
mov
sbb
cwtl
mov
arpl
out
mov
pop
mov
pop
cwtl
mov
filds
push
push
aad
aaa
jmp
jge
sahf
rcrb
lds
mov
add
pop
push
rcrb
rcr
pop
fsubrl
movsb
cmp
sahf
cmc
sahf
push
lds
cltd
or
and
lods
adc
push
xor
jge
sub
fnstsw
jae
mov
mov
popl
jno
push
stos
mov
cmp
fmull
dec
in
inc
or
and
push
insl
add
ss
mov
gs
ds
repnz
clc
pop
cmp
dec
jp
call
fwait
xchg
cld
dec
lods
popf
mov
hlt
mov
inc
cmpsl
add
jmp
test
mov
in
ret
fidivrl
pop
dec
jb
add
pushf
pop
or
sahf
mov
jo
add
fwait
cmp
movsl
adc
fs
mov
push
mov
arpl
adc
fcoms
xlat
xchg
ljmp
scas
lcall
fs
gs
inc
outsb
jb
push
in
sub
push
inc
cmp
xchg
sbb
testb
mov
popa
bound
xor
lret
mov
adc
pop
push
imul
jns
daa
fs
test
aaa
outsl
sub
movsb
bound
imul
scas
mov
arpl
or
adc
fiaddl
cli
jg
rclb
jae
dec
add
push
and
lret
mov
mov
ljmp
test
stc
cmp
xchg
addl
push
cwtl
std
insb
addr16
out
xor
arpl
jo
and
scas
add
scas
jp
cs
lea
and
push
push
rcll
es
inc
mov
cmp
sti
aas
and
sbb
popa
dec
dec
adc
mov
sbb
popf
mov
scas
lods
lods
popa
icebp
xor
push
dec
insb
and
test
test
adc
aad
jle
or
std
rorb
pushl
pushf
out
mov
pop
insl
je
daa
add
fadd
filds
outsl
rorl
xor
dec
adc
loop
cmpsb
fwait
push
mov
adc
cmp
sub
test
movsb
push
and
loop
lods
and
xchg
fbld
pusha
aas
or
lahf
push
mov
and
stos
add
movsb
fists
jle
cmp
test
insl
js
push
pop
inc
in
xorl
inc
jbe
popfw
xchg
std
lea
mov
mull
out
incl
mov
in
jmp
stc
outsb
jnp
out
out
cmp
test
sub
dec
sbb
scas
out
xchg
std
out
pusha
out
xchg
test
inc
vpaddsw
push
xchg
dec
lcall
negl
push
insb
addr16
mov
ljmp
push
cmpsl
out
sbb
ja
adc
nopl
int
inc
mov
xor
dec
das
mov
aaa
xlat
nop
cld
jp
lret
adc
jo
xchg
cmp
cmp
mov
insl
jecxz
push
and
addr16
adc
dec
imul
adc
popa
sub
dec
and
xor
jns
mov
pop
add
cs
jg
bound
dec
test
xor
pop
loop
bound
mov
push
inc
pop
xor
push
cmc
pop
popl
add
sbb
add
dec
int3
test
jle
jnp
sbb
pusha
icebp
das
cmpsl
jnp
stos
pop
inc
insl
add
idivl
rcl
lock
sbb
mov
lret
mov
fisubrs
lea
inc
out
or
into
clc
pop
or
pop
cmp
nop
imul
cs
mov
sarl
inc
jmp
lret
les
or
xor
nop
adc
in
fisubl
inc
pop
gs
sbb
js
or
cwtl
jg
mov
jno
sub
negl
jmp
arpl
cmpsl
push
aam
pop
adc
push
jecxz
mov
pop
shr
pop
call
or
adc
adc
xchg
pop
loopne
inc
out
std
pop
pusha
pop
mov
cs
and
fcoml
and
mov
adc
mov
jp
mov
outsl
adc
sbb
faddl
fildll
outsb
ret
xchg
pop
jb
mov
dec
inc
pushf
test
adc
push
jno
mov
stos
fstpl
adc
mov
add
mov
icebp
aad
cmpb
sbb
test
sti
and
adc
jl
push
add
push
mov
inc
inc
and
mov
repnz
lods
jg
push
mov
cmp
or
leave
imul
push
dec
mov
popf
movsl
or
lds
shrl
push
adc
push
and
mov
test
in
push
push
mov
push
cld
mov
mov
stos
test
popa
push
aaa
mulb
negw
xor
cmp
adc
mov
dec
push
les
into
addl
xchg
mov
cmpsl
mov
ret
mov
and
mov
fcompl
pop
xchg
and
in
mov
jns
imul
add
data16
leave
jle
mov
inc
pop
in
jl
sbb
test
xchg
dec
xchg
ret
pop
icebp
cmp
pop
out
add
roll
add
cltd
mov
pop
cmp
adc
push
pop
subl
fldenv
jle
add
sti
cli
outsb
repz
cltd
jb
cs
leave
xorl
jmp
jne
fisubrl
cmp
add
daa
cmp
lcall
sahf
stos
dec
and
lods
outsl
jae
jb
shr
dec
cmp
pop
out
pop
sub
mov
imul
or
repnz
xor
lcall
subl
jg
mov
sbb
adc
lods
xchg
adcb
xor
push
mov
popf
mov
ret
imul
xor
jbe
sbb
ljmp
repz
or
roll
inc
inc
push
leave
cld
pop
dec
cltd
sbb
lahf
add
movsl
int3
aas
outsb
movsl
mov
icebp
scas
ss
pop
jg
std
mov
cmc
sti
and
inc
pop
or
cmp
inc
inc
cmc
movaps
jns
or
cli
fisttps
xchg
data16
push
jmp
inc
das
fimull
adc
faddp
mov
call
xchg
xor
add
rclb
int3
cmpsl
jne
rcll
daa
lret
ss
push
add
add
lea
ret
mov
lea
lret
dec
add
and
imul
lods
je
outsb
imul
rcll
mov
ficoml
movsb
leave
lods
xchg
out
adc
mov
out
dec
add
pop
adc
movsl
xchg
mov
lret
xchg
cmc
aam
lcall
ret
and
cmc
cmp
add
jae
fcomip
negb
xchg
adc
pop
xor
ja
test
jae
mov
xchg
cmpsb
push
test
out
mov
mov
xor
idivl
daa
insb
cld
repnz
inc
mov
xor
rolb
dec
cwtl
clc
aad
aad
pop
pop
xchg
push
in
adc
inc
push
pop
scas
call
xchg
mov
or
and
add
jae
jmp
cmp
mov
psadbw
lock
mov
outsl
aad
mov
leave
cmp
add
lcall
mov
mov
stc
cmp
dec
andb
adc
and
stc
lret
sbb
cmp
fcmovnbe
fistpll
pop
and
and
mov
movsb
xchg
mov
dec
pop
mov
mov
inc
mov
add
mov
fwait
push
mov
fwait
jge
sahf
and
push
cld
mov
pop
mov
jne
jecxz
or
in
test
je
test
xchg
out
or
subl
repz
dec
movsl
fnstsw
and
fbld
inc
xlat
pavgb
addr16
mov
mov
out
dec
xchg
push
cmp
jo
unpckhps
inc
sahf
xchg
daa
add
mov
std
outsl
sbb
xorl
lret
pop
inc
add
repz
dec
inc
outsl
xchg
pusha
adc
rorb
cli
fwait
xchg
pusha
or
aad
lods
stos
mov
mov
inc
cmp
mov
xor
xlat
sti
cltd
xchg
xchg
mov
mov
add
xchg
shrl
ja
push
mov
je
rorl
mov
fistpll
mov
jns,pn
push
xor
stos
inc
pop
sbb
ss
xchg
mov
orl
aaa
call
mov
jne
rcrb
andb
mov
adc
xchg
testl
pop
jg
add
inc
test
stos
imul
imul
pop
mov
xchg
pop
xchg
dec
push
in
stos
jns
or
push
adc
sbb
ficomps
arpl
and
jnp
fldl
cmp
xor
add
shll
mov
rcl
sbb
dec
aad
mov
lret
ret
jne
subl
cmp
pop
in
imul
cmc
mov
subl
cmpsb
lahf
cmp
push
subb
fisubrl
pop
inc
cwtl
mov
and
add
or
add
xor
sub
mov
test
push
jne
and
out
daa
popl
jl
into
sbb
dec
jmp
icebp
mov
adc
xor
into
fimuls
jp
xchg
pop
andb
imul
pop
lret
divb
cmp
or
cld
inc
pop
fwait
and
xchg
or
lods
and
das
ljmpw
cli
fidivrs
inc
jnp
pop
aas
enter
daa
pop
iret
cmp
imul
cmc
jbe
pop
shrl
stos
mov
mov
aad
fisubrl
sbb
sbb
cli
ljmp
stc
dec
mov
push
pop
mov
sub
add
arpl
daa
jae
mov
imulb
add
lret
fsub
and
lods
cmp
pop
mov
ret
cmpb
sub
xchg
jmp
imul
pusha
xor
lods
mov
enter
jmp
mov
cmp
sahf
and
test
xor
movsl
mov
fwait
cltd
loope
outsl
std
cmpsb
jns
mov
jbe
mov
and
outsb
mov
cs
push
xchg
mov
test
xchg
and
jne
shrb
and
gs
sub
js
jnp
inc
shlb
mov
sbb
jno
inc
outsb
pop
into
shlb
or
push
out
jmp
leave
test
cmp
enter
fists
dec
outsl
jecxz
fwait
loope
rcrl
lret
jmp
adc
push
adc
jne
and
cmpsl
ret
loop
leave
insl
das
mov
imulb
out
inc
mov
xchg
adc
gs
cmp
pop
insb
pop
movsb
fimull
fs
push
ja
cmp
pop
icebp
aaa
jb
or
pop
movsb
lods
movsl
push
xlat
movsl
add
adc
stc
in
call
std
sbb
inc
mov
fcoml
lds
pop
stos
and
roll
push
les
push
lock
js
jecxz
test
pop
fcmovnb
xchg
sub
push
ss
idiv
mov
or
pop
push
dec
sbb
iret
or
not
push
push
std
dec
ret
sbb
std
mov
lods
test
outsb
xchg
pop
push
sti
adc
mov
dec
je
adc
jb
and
insb
mov
add
or
lods
orb
push
pop
sbb
sti
aaa
xchg
inc
push
pop
sub
mov
cmpl
jg
idivl
rolb
outsl
cmp
loopne
inc
adc
sbb
inc
mov
cmpsb
lods
jmp
mov
movsb
sbbl
or
pop
je
loope
jmp
sub
insl
andl
cwtl
into
subl
pop
subl
push
xlat
aas
or
fimuls
popf
push
clc
sbb
pop
out
jp
mov
cld
xor
adc
push
cwtl
ret
pop
xor
addb
inc
int3
xchg
sbb
mov
scas
inc
xchg
and
dec
add
nop
mov
shrl
inc
dec
pop
int3
movsb
mov
sub
int3
lret
dec
mov
fsubrl
pushf
push
push
icebp
mov
dec
rorl
cwtl
popf
pop
inc
imul
scas
clc
bnd
adc
outsb
mov
scas
sti
xchg
adc
xor
fdivrp
sbb
mov
mov
xor
jmp
cmp
cwtl
pop
in
iret
xchg
jbe
xor
stos
lods
mov
addr16
mov
mov
mov
in
xchg
add
adc
sub
jmp
xor
push
adcb
pop
pop
or
xor
add
sub
addr16
xchg
jge
sub
ja
mov
adc
mov
test
out
mov
mov
imul
push
or
imul
popf
jae
js
jo
aam
sbb
lcall
inc
push
aas
bound
iret
dec
mov
sub
fstl
mov
arpl
adc
sub
nop
mov
xor
sbb
das
lds
xor
adcb
popa
mov
outsl
lock
dec
and
and
daa
ret
hlt
outsl
cli
stos
ja
push
imul
or
aam
mov
dec
cmp
sub
andb
ljmp
lcall
xchg
test
xchg
add
pop
orb
add
mov
ss
sti
mov
dec
addr16
aas
or
icebp
out
loopne
leave
and
jne
call
push
jecxz
dec
xor
push
inc
sub
out
fcmovnbe
out
repz
push
enter
lahf
inc
sbb
and
sub
fisttpll
jmp
xlat
jle
bound
into
jg
mov
cmpsb
xchg
pop
cli
call
lods
sar
dec
imul
push
inc
sbb
mov
js
movsl
inc
add
fs
add
push
fs
leave
jle
xchg
inc
jb
call
cmp
push
stos
dec
xor
adc
jge
aas
add
push
pop
mulb
ficomps
rcrb
aam
lret
mov
xchg
sub
sbb
sti
pop
cmp
mov
cmp
fldt
pop
aas
push
add
or
imul
and
inc
lea
and
ds
xchg
xor
js
jmp
test
sbb
dec
imul
push
dec
test
bound
xchg
jae
add
xchg
sub
dec
push
popa
xor
sub
dec
les
bound
mov
ds
inc
push
xchg
das
mov
and
push
imul
je
xchg
hlt
ret
clc
mov
loop
imul
out
pop
out
mov
cmpsb
dec
dec
or
or
xor
cmp
int3
outsb
loope
sub
cs
pop
rcr
jns
sbb
jne
cmp
cmpsl
addb
mov
into
jg
in
push
ja
jmp
jmp
jl
cltd
loope
in
test
ja
pop
popf
int
test
adc
add
mov
or
cmp
lahf
test
lcall
inc
mov
push
cs
jecxz
cmp
xchg
leave
out
mov
xchg
push
and
cmp
jp
jno
aaa
push
mov
insl
testl
xor
and
insb
leave
xlat
sub
dec
out
insb
inc
mov
mov
sahf
push
mov
cli
loope
dec
nop
sub
mov
nop
cmc
sahf
sbb
lret
xchg
push
sbb
mov
mov
movsl
movsb
jle
push
adc
jmp
test
lea
pop
cmp
sub
push
adc
sbb
iret
and
scas
and
in
pop
scas
in
inc
xchg
cwtl
into
pop
and
fwait
sub
jle
dec
cmp
and
mov
jg
in
addb
push
popa
mov
or
arpl
mov
shl
pop
mov
insb
gs
imul
sub
mov
add
inc
sbb
dec
add
mov
push
fs
xchg
loope
into
mov
push
jp
subl
mov
test
roll
mov
pop
sarl
sub
jno
ja
sahf
dec
movsb
out
loop
outsb
mov
sbb
add
xor
push
test
add
cwtl
cmp
lcall
or
aad
sahf
scas
repnz
add
in
push
mov
sub
push
js
pop
cmpsb
jg
icebp
repz
arpl
add
loopne
dec
sbb
dec
mov
int
fwait
pushf
test
push
fs
sub
jne
xchg
lea
mov
lods
imul
mov
mov
test
mov
dec
push
rolb
insl
jmp
mov
out
mov
sub
sbb
ficomps
xor
outsb
push
decl
idivl
test
iret
adc
lahf
jge
into
repz
nop
push
inc
out
jae
shr
cmp
pushf
mov
repnz
cld
ds
lahf
out
dec
push
je
movsb
jne
test
jo
divl
js
faddl
jl
out
xchg
sub
cmpl
mov
xor
filds
and
dec
mov
add
repnz
daa
fimuls
xor
out
lret
fsubrs
mov
mov
sbb
scas
jb
dec
icebp
ljmp
sub
out
lods
mov
or
fidivrl
pop
das
cltd
jg
div
cmc
scas
nop
add
jae
jp
mov
pop
mov
aas
cli
xchg
rcrl
outsb
jne
in
lcall
clc
xor
daa
push
cwtl
out
jl
sar
mov
imul
add
cmp
stos
scas
cmp
push
xchg
adc
push
mov
imull
and
inc
cmp
fwait
sub
into
adc
loopne
dec
jbe
loop
cmp
add
vmovdqa
daa
insb
or
pop
push
lret
jne
sti
dec
out
fcompl
lds
ret
mov
inc
xchg
cmc
cmp
jns
sbb
jge
inc
push
adc
ficoms
scas
mov
pop
scas
pop
fwait
mov
cmp
and
pop
fwait
lods
cmpsl
adcl
sbb
cmp
push
scas
out
aaa
das
lods
les
punpckhbw
daa
loopne
scas
cmp
jle
adc
inc
or
sub
aaa
or
cmpsb
xchg
inc
mov
mov
mov
and
xor
pop
test
cmp
dec
cmp
das
add
fcmove
das
lea
int3
jb
insb
mov
pop
cli
mov
mov
mov
insb
xchg
in
ljmp
add
adc
or
adc
sbb
mov
fimuls
mov
addr16
add
test
in
mov
lret
loope
pop
ret
ljmp
jl
add
jno
jmp
addb
sbbb
rorl
mov
sbb
insb
lock
hlt
jo
call
dec
fnop
sbb
bound
mov
jmp
out
leave
cmp
arpl
inc
fwait
inc
and
outsb
add
notb
xchg
enter
pop
mov
stos
xchg
in
lods
sti
sub
mov
mov
scas
cmp
outsb
aas
add
inc
pushf
jbe
push
dec
push
ja
sub
mov
jge
subl
call
mov
jae
fsub
fildl
cmp
push
aam
sub
adc
push
testl
push
jl
mov
dec
fisttpl
js
test
leave
pop
mov
mov
xchg
sarl
div
sub
aas
lret
shlb
push
sub
movsb
push
ret
jge
mov
subb
ret
into
push
mov
adc
aad
xchg
aaa
les
inc
ljmp
mov
sub
movsl
ds
mov
sbb
mov
mov
fxch
add
sbb
jno
xor
loopne
leave
scas
clc
push
lahf
cs
fisubs
adc
insl
xchg
stos
jne
repnz
fwait
dec
cmp
jmp
fidivrl
xor
shlb
xchg
xchg
jecxz
clc
push
inc
xchg
lea
addr16
pop
stc
out
mov
fisttps
pop
xor
cmp
push
test
shrb
cmpsb
mov
jno
lods
test
sti
lods
ss
or
cwtl
mov
into
gs
dec
test
or
mov
inc
jbe
inc
mov
push
or
roll
push
add
insb
call
xchg
add
lock
adc
test
pop
loopne
cltd
insl
lea
ret
stc
add
rclb
pusha
dec
dec
cmpsb
fstpl
xchg
out
popa
cmpsl
cmc
add
cli
sbb
inc
pop
dec
jnp
cltd
lods
add
cmp
push
std
xor
test
ljmp
dec
xchg
mov
mov
cs
sbb
cmc
sub
je
xchg
nop
aaa
out
mov
ja
jae
dec
pop
dec
enter
cmp
mov
dec
int
in
loopne
mov
pop
jbe
ret
mov
dec
repz
push
aad
xor
addl
push
inc
cmp
sarb
jg
movsb
push
inc
fmull
sbb
aas
fimull
pop
add
hlt
jp
push
adc
lods
mov
ror
inc
adc
in
scas
movl
fsubl
psubusb
dec
mov
xchg
mov
xchg
push
stos
jae
outsl
mov
mov
aad
imul
testb
ljmp
cmp
sub
mov
mov
push
push
push
pop
jg
scas
mov
hlt
xchg
sbb
mov
cmp
cmp
imul
xchg
sbb
inc
sbb
stos
jbe
sbb
into
or
aad
sub
dec
mov
ss
out
xchg
xchg
lods
push
push
js
xorl
xchg
pop
and
cmpl
inc
xor
out
adc
icebp
ret
inc
lods
lods
cmpsl
sub
jns
add
jnp
xor
outsl
dec
push
dec
or
mov
lcall
jb
push
fcomps
inc
int3
stos
push
or
je
xor
repz
inc
sub
or
leave
mov
cmc
fidivrl
xorl
fbstp
movsl
adc
xchg
xchg
int
outsl
shrb
stos
data16
push
pop
sub
jae
inc
mov
push
ja
sbb
faddp
push
xchg
mov
or
push
sub
mov
jae
sub
jne
hlt
inc
sub
sbb
add
cwtl
lret
ds
fimull
sub
movsl
fcoml
ret
sub
leave
mov
jne
fwait
pop
mov
or
leave
or
adc
insb
sbb
dec
push
push
inc
pushf
mov
cmp
div
roll
adc
fs
mov
lds
das
addl
adc
or
sub
xor
mov
push
or
cmp
std
jp
into
jne
mov
jae
push
int
push
inc
cmpsl
test
fdivrl
fimull
sbbb
or
xchg
cmp
stc
mov
les
mov
mov
mov
inc
mov
and
adc
sub
lea
xchg
or
insl
mov
mov
sbb
jge
xchg
dec
rorb
std
jle
cmpl
jge
adc
stos
repnz
xor
out
xchg
inc
sub
jle
pop
or
pop
aad
sbb
xchg
adc
in
or
pop
dec
lods
add
fistpll
popf
repz
mov
mov
pop
nop
fcomps
mov
push
sbb
dec
add
loop
lods
out
aaa
mov
push
iret
lds
iret
sub
adc
xor
insl
push
inc
ss
jae
sub
test
xchg
outsl
aaa
mov
fsubr
inc
jg
loope
jle
xchg
jg
mov
add
pop
test
scas
dec
add
inc
sub
lret
mov
xchg
inc
xor
pop
add
in
fdivl
ja
out
push
mov
int
les
imul
jmp
in
cmp
or
nop
cmc
pop
xor
or
jne
sbb
out
cmp
adc
clc
sub
pop
jbe
cmp
cltd
adc
sub
push
test
and
push
cltd
inc
int
mov
notb
mov
into
mov
imul
jbe
adc
jns
lcall
xor
mov
xchg
cs
test
sbb
xchg
adc
shlb
lahf
inc
icebp
xor
xor
cwtl
xchg
or
in
add
cmp
stos
or
rcll
outsl
mov
mov
pop
or
lock
xor
test
push
sbb
outsl
into
push
inc
mov
fs
in
in
xchg
push
daa
popa
xchg
inc
mov
add
test
sbb
cwtl
stc
xorl
ret
dec
pop
std
loope
popf
sub
pop
pop
sub
pop
in
push
adc
lret
xor
inc
test
outsb
add
movsl
add
push
sub
dec
fcmove
lret
rcrl
pusha
fimull
xchg
repnz
inc
jle
shlb
add
jg
cmp
add
out
fiaddl
cmpsb
clc
repz
mov
out
dec
test
push
cmp
ja
and
pusha
or
xchg
jle
jl
xchg
test
add
orb
mov
enter
xchg
test
mov
pop
push
add
adc
and
jno
push
mov
jns
lcall
mov
or
adc
xor
dec
ret
mov
gs
filds
add
andl
stos
xorl
jo
mov
lahf
movsl
outsl
fcompl
jno
jno
loope
inc
xor
push
xor
daa
dec
fldt
pop
dec
mov
dec
dec
mov
pop
imul
loopne
dec
sbb
lahf
xchg
cmpsb
pop
push
mov
lret
shrb
cmpsl
push
add
sub
out
into
jl
adc
imul
cmp
dec
sub
lea
pushl
inc
test
repz
ss
push
dec
stos
mov
mov
dec
dec
imul
and
or
sbb
and
scas
loop
icebp
jecxz
mov
shr
inc
cmp
or
pop
mov
ret
push
repnz
mov
push
inc
fstpl
and
mov
movsb
fidivs
ja
mov
lret
sub
sbb
in
mov
or
enter
ss
jnp
scas
in
dec
movsb
repnz
xchg
push
push
push
mov
cmc
pop
sub
mov
add
lea
jmp
jbe
jbe
jo
test
into
xchg
cmp
push
cmp
call
xchg
testb
xchg
in
clc
dec
fnstcw
sbb
mov
loop
or
jns
pop
dec
imul
mov
push
orb
cli
sbb
je
fcmovnu
arpl
hlt
pop
mov
and
sub
or
out
ret
sbb
or
sub
push
cmp
lods
sahf
xchg
je
mov
int
sbb
xor
xor
xor
adc
in
inc
lcall
sahf
in
aad
or
faddp
mov
dec
movsl
xchg
cld
xchg
pextrw
sub
les
adc
and
mov
ja
cmp
ja
adc
das
push
sbb
sahf
jbe
mov
pop
or
int3
ljmp
add
add
dec
ds
ljmp
dec
and
jne,pt
or
adc
aad
xchg
test
js
scas
loope
xor
adc
movsl
fisttpll
jne
jp
outsl
fsubl
or
xor
push
ljmp
add
iret
or
not
shrl
mov
pusha
dec
cmc
push
out
cmpsl
cmc
clc
or
pop
jmp
pop
mov
xor
test
lods
mov
sti
int
push
aam
faddp
jns
dec
dec
sahf
movsl
xchg
xlat
ftst
aad
push
pop
jnp
or
add
pop
daa
fwait
push
scas
call
filds
iret
out
lods
lock
mov
daa
push
cltd
dec
mov
dec
mov
add
cmp
adc
adc
push
dec
pop
sarl
scas
lret
stos
xor
pandn
cltd
or
fisttpll
mov
inc
or
jp
inc
cli
adc
loopne
sahf
jno
pop
lahf
add
mov
pop
lcall
cmp
rcl
pop
mov
add
lret
ds
xor
repz
push
enter
jne
les
loop
ja
insl
xlat
cmpsb
test
popf
sbb
loope
add
nop
and
adc
and
push
fisttpll
and
jp
mov
sub
aaa
lahf
repz
mov
mov
in
dec
sub
inc
push
sbb
mov
mov
sarb
cld
adc
mov
mov
test
dec
hlt
mov
in
mov
rcr
and
popa
addl
js
daa
push
jbe
dec
mov
std
add
int
leave
cmp
push
or
daa
and
add
ljmp
xor
inc
push
pop
jl
outsl
jns
xchg
out
xlat
inc
out
leave
and
pop
icebp
inc
repnz
shll
insl
jp
mov
in
dec
shr
int3
push
push
aad
xor
mov
cmp
fisttpl
xorl
cmpsl
movsb
add
dec
mov
jle
shll
mov
leave
sub
xor
imul
lock
dec
mov
or
fcoml
repz
pop
popf
xchg
sub
jo
and
lods
add
mov
in
data16
mov
out
jle
sub
arpl
mov
jle
fisubrs
dec
jo
adc
idivl
xlat
fs
jo
cmp
rolb
fistl
test
mov
cmp
push
cli
lds
mov
or
mov
pop
ja
xchg
lret
pushf
data16
and
or
inc
pop
mov
sbb
jecxz
data16
adc
push
add
addr16
sub
lahf
lds
mov
je
and
mov
test
cmp
mov
fcom
mov
xlat
pop
cmp
jb
pop
adc
iret
add
or
or
daa
dec
dec
clc
push
adc
pop
sub
or
or
cmc
or
rcrl
jp
mov
fldcw
insb
popa
lods
add
xchg
mov
jecxz
pop
add
out
mov
outsl
xor
int3
push
stos
loop
dec
stos
pushf
lock
stc
adc
test
es
sbb
sub
pushf
push
daa
mov
sbb
fsincos
clc
lods
idivl
lds
push
jg
jge
js
mov
cltd
jecxz
add
cwtl
cmp
ret
subl
jle
sbb
icebp
adc
pop
lock
out
int3
das
push
popf
sbb
cld
mov
jo,pn
or
pcmpgtb
outsl
pop
jge
or
cmpb
pop
lahf
adc
push
and
sub
outsl
inc
sbbl
test
sub
adc
fwait
dec
jg
push
hlt
fidivrs
push
and
imul
lret
adcl
mov
ds
jle
loop
or
mov
jns
jmp
add
loop
movb
push
mov
into
xor
push
inc
adc
fistpl
inc
jns
jae
sub
xchg
mov
nop
popf
jbe
into
inc
sub
push
push
cmpsl
and
dec
push
mov
scas
popa
or
add
adc
dec
arpl
das
cmc
scas
adc
cs
jecxz
lock
enter
add
daa
xchg
inc
xor
xchg
lea
sub
ret
fiaddl
xchg
sub
mov
inc
xchg
dec
inc
popa
inc
push
notb
sti
call
lock
iret
push
movsl
in
sti
mov
mov
mov
pop
sbb
push
mov
hlt
xchg
lods
stc
pop
inc
stc
dec
mov
jns
mov
cli
mov
cmp
pop
popa
in
or
dec
and
dec
nop
pop
cmp
shll
arpl
xchg
and
add
fdivl
out
out
lods
mov
arpl
mov
mov
shrb
pop
dec
and
pushf
xor
pusha
stc
lret
xor
and
in
aam
fsts
jae
mov
lods
add
adc
sbb
sub
jle
pop
in
outsb
cltd
xchg
pextrw
mov
cmp
inc
push
shrl
mov
or
bnd
loop
sbb
shrl
int
test
roll
outsl
or
das
rorl
lret
mov
adc
sub
push
out
pop
fsub
push
pop
rclb
mov
dec
cmpsl
mov
ss
cmpsl
lret
vaesimc
xor
xlat
imulb
sbb
pop
cmp
jle
adc
ss
mov
out
push
mov
push
jae
xchg
ret
push
pop
imul
inc
insl
xor
in
push
cmc
es
out
inc
jne
cmp
icebp
cwtl
jg
loope
mov
adc
sbb
xor
sub
pop
pop
cmpsl
roll
mov
out
inc
roll
xchg
ds
data16
std
gs
test
jecxz
and
xor
mov
adc
and
icebp
cmp
std
add
mov
mov
add
or
ja
in
cmp
mov
orl
or
imul
mov
stos
fimull
mov
mov
leave
add
ja
out
aam
and
pop
fistl
push
ret
xchg
in
aas
leave
adc
fwait
add
inc
xchg
adc
mov
stc
add
outsb
stos
cltd
aaa
in
testb
not
hlt
xorl
push
push
lods
rcrb
push
scas
outsw
push
pop
out
dec
or
push
mov
cmp
add
xchg
dec
xor
ret
inc
imul
or
cmp
jmp
jmp
jmp
sar
add
mov
fidivrs
jo
mov
in
adc
sti
lds
and
push
mov
lcall
sub
add
add
pop
pusha
lcall
arpl
jbe
jb
cmpsl
lea
jns
push
pop
leave
cmc
addr16
inc
jne
test
jmp
je
test
lds
jecxz
add
icebp
mov
xchg
mov
stos
pop
xchg
in
and
push
fidivrl
ja
mov
push
pop
add
mov
xchg
inc
stos
inc
mov
or
jmp
xchg
mov
testl
lods
hlt
xor
or
xchg
fimuls
fdivl
scas
adc
push
nop
out
push
mov
test
add
mov
dec
add
sbb
add
mov
cs
push
movsl
ja
cmpsb
sbb
add
scas
stos
pop
ret
sbb
nop
popa
imul
call
push
xchg
sbb
ljmp
jl
addr16
stos
hlt
lret
dec
fildll
mov
fidivrl
frstor
sbb
dec
mov
dec
bound
cmpsl
cmp
cmpsb
mov
int
mov
mov
xlat
lds
std
mov
outsl
adc
outsl
cmc
push
int3
xor
mov
push
imul
mov
hlt
cli
dec
lret
es
movsb
popf
xor
shlb
out
aam
aad
sub
data16
popl
fucomp
dec
adc
stos
nop
push
pushf
jl
mov
mov
fwait
mov
lret
add
add
or
sub
out
mov
call
outsb
outsl
sub
out
mov
aad
cmp
mov
outsl
loope
dec
pop
and
cmp
ljmp
in
jo
dec
fnsave
stc
adc
addr16
push
rcrb
mov
xchg
cwtl
call
mov
mov
mov
addr16
and
xor
dec
fdivr
mov
out
xorb
mov
std
cmp
enter
push
xchg
lock
lretw
dec
sbb
ljmp
int
scas
mov
insl
lret
cmp
pop
ja
mov
cmp
rcll
inc
xchg
mov
gs
aas
call
testb
cltd
xchg
cmpsl
js
mov
inc
push
push
call
lret
pop
ret
mov
push
inc
loope
das
push
cmp
es
adc
jg
adc
sub
inc
out
sbb
outsl
adc
int3
imull
pop
fisubl
es
and
pop
aas
fs
icebp
out
leave
pop
jle
lods
adc
or
ljmp
stc
xchg
mov
jnp
fldcw
test
jle
mov
inc
aam
push
or
lahf
imul
ficoml
fwait
in
cs
push
inc
and
std
ud0
scas
sub
shll
jnp
clc
sbbl
out
pop
pop
mov
pop
add
lods
cmp
jge
or
mov
enter
aam
jp
arpl
cwtl
bound
test
mov
out
cmp
repz
dec
and
outsb
sbb
aad
enter
test
rcl
xor
mov
xchg
mov
iret
push
jbe
add
sbb
cltd
xchg
repz
in
push
jge
push
sbb
mov
sub
push
rcll
out
pop
fsubrl
sbbb
inc
or
hlt
and
call
ficoms
and
xchg
adc
ljmp
add
popa
das
mov
jne
cmp
jae
ja
mov
sub
pop
fidivrs
lods
dec
push
roll
lret
mov
or
jg
scas
das
imul
leave
push
daa
push
ficomps
jp
or
push
xor
jnp
les
enter
cmc
add
inc
stos
cmp
sarb
push
add
pop
push
sahf
inc
pusha
lcall
ficomps
fwait
sbb
add
fiadds
pop
jbe
adc
inc
movsb
or
adc
sub
add
push
mov
ret
pop
test
adc
std
xchg
jo
xor
outsb
ljmp
sub
fiaddl
fwait
ss
add
jmp
xchg
add
movl
or
lds
dec
mov
sbb
mov
and
push
sub
xchg
dec
daa
mov
cmpsb
mov
lret
add
xchg
xchg
jg
ret
fs
insl
mov
or
insl
mov
inc
mov
movsb
into
loop
push
and
and
push
leave
lcall
pop
lret
cltd
test
or
sbb
inc
rol
addr16
rcrl
mov
mov
sub
sub
out
cmpsl
dec
fstps
mov
xchg
icebp
sarl
into
rorl
sahf
cmp
xor
dec
imul
imul
sbb
lret
sbb
jno
idivb
pop
mov
cmpsl
in
cltd
movaps
or
dec
mov
sub
sub
sub
outsb
fldl
dec
clc
push
leave
sub
push
add
push
ficoml
adc
ja
and
std
inc
push
and
sbb
loop
pop
stc
sbbl
in
mov
out
mov
out
adc
lea
pop
inc
dec
dec
scas
mov
xchg
jge
adcl
push
inc
sbb
test
push
sub
std
mov
int3
cmp
xor
mov
and
loopne
stos
sbb
sub
push
xchg
and
leave
push
mov
xor
fs
inc
ja
lcall
cmc
mov
mov
orb
xchg
and
aam
mov
popa
sbb
outsl
lret
stc
or
outsl
jno
popf
push
cs
mov
es
rclb
jle
insb
cltd
sbb
cmpsb
test
movsb
pop
mov
ficoms
imul
roll
in
fldenv
fs
pop
pop
fld
dec
push
push
ret
mov
and
add
add
pop
shl
out
stos
inc
fsubp
pop
xchg
cli
mov
adc
or
lcall
mov
and
std
fidivl
aas
pop
stos
xor
outsb
leave
shll
rorl
cmp
jge
cltd
gs
cltd
push
ljmp
mov
push
push
jno
pop
mov
into
aas
shlb
jl
and
icebp
push
xchg
movsl
popa
sub
fimull
push
add
subl
sbb
add
ja
add
cwtl
mov
es
mov
int3
int3
xlat
imul
lret
pop
push
mov
shlb
pop
icebp
imul
roll
in
jb
cmp
cli
cs
cwtl
mov
jns
cld
and
and
xor
fidivrs
test
frstor
mov
mov
das
mov
scas
adc
lea
sub
xchg
and
scas
std
inc
add
inc
adc
mov
hlt
inc
and
cmc
lock
iret
pop
movsb
das
pop
add
lods
lahf
dec
mov
adc
test
inc
pinsrw
js
xor
fld
push
stc
jbe
jbe
cmpsb
adc
mov
mov
pop
jae
cmp
fdivs
inc
bound
or
int3
mov
push
cwtl
cmp
mov
fbstp
repz
fimuls
jb
int
add
cwtl
pushf
arpl
xchg
sub
stos
mov
push
test
imul
mov
lods
and
decl
adc
xor
ret
inc
lahf
adc
popf
mov
xchg
push
in
or
outsl
cmp
sbb
jne
imul
sahf
aaa
mov
xchg
and
ret
fisubs
xchg
out
gs
cmp
subb
ss
and
lea
dec
jecxz
pushl
dec
cltd
jnp
je
test
dec
insb
xchg
xchg
lds
mov
pop
lahf
inc
int3
pop
insl
xlat
jmp
and
pop
aaa
xor
in
push
xchg
cmpsb
sbb
jmp
pusha
dec
je
xor
je
adc
pop
call
mov
movb
mov
inc
mov
cwtl
call
popf
iret
mov
adc
shlb
push
pop
fdivrp
mov
cmp
mov
jbe
adc
js
and
push
jae
lfs
std
jns
xchg
imul
loopne
or
nop
mov
mov
gs
or
hlt
inc
mov
lcall
hlt
ja
jecxz
rol
adc
rcrl
adc
rcll
inc
inc
ds
dec
incl
notb
rcrl
dec
adc
pop
cwtl
insb
lods
mov
xchg
push
mov
icebp
mov
and
sbb
cmp
pop
jae
stos
fbld
in
add
pop
shlw
add
jns
fsubl
int3
mov
adc
jo
js
ds
jecxz
xor
pop
js
xchg
or
or
mov
arpl
xor
in
add
bound
fildll
dec
aas
dec
inc
les
mov
push
std
shrb
cmpsl
lret
cmpl
outsl
cmp
mov
push
push
cltd
or
lods
stos
in
jae
xorl
pop
inc
shrb
push
cmp
gs
imull
mov
lock
int3
mov
aas
loope
pop
fsubrl
and
insb
les
lahf
into
sbb
cwtl
xor
cmp
xor
push
inc
fs
mov
dec
inc
dec
es
sbb
xchg
insl
xchg
add
test
roll
out
or
ficoms
test
jp
adc
push
xor
fnstsw
pop
xchg
sbb
inc
mov
bound
daa
clc
lret
mov
hlt
jecxz
sahf
xor
icebp
push
fldz
mov
inc
subb
ds
jle
fimull
dec
sti
stc
out
mov
add
push
push
aam
fisttps
mov
int3
sub
adc
lds
dec
int
jge
add
fbld
popa
push
mov
jl
add
and
test
fwait
addr16
push
dec
es
repnz
adc
mov
popf
mov
sbb
mov
push
jb
sub
daa
mov
test
mov
add
push
mov
xor
xchg
xlat
add
adc
iret
out
pop
xor
leave
sbb
push
inc
or
arpl
xor
pop
cltd
cmp
test
insl
dec
clc
int3
arpl
mov
dec
jl
mov
pushf
les
push
negb
jle
mov
loop
dec
fmuls
sub
sub
cmp
mov
xchg
push
lret
mov
jb
jae
xchg
sbb
mov
aas
cmp
jg
iret
mov
jmp
fnstsw
push
into
mov
cmpsl
mull
and
push
popf
sub
popa
iret
mov
xlat
imul
pop
rcll
pusha
icebp
lcall
mov
push
fidivs
mov
xchg
or
push
addl
test
faddl
rolb
mov
ret
mov
or
je
gs
mov
aad
out
jno
or
sbb
into
and
scas
sbb
mov
rclb
js
popf
mov
or
cltd
cmp
in
or
xchg
mov
sahf
or
sbb
push
bound
lret
popa
popf
sbb
nop
pusha
enter
hlt
into
fiadds
mov
test
fwait
mov
std
adc
jg
hlt
mov
int3
hlt
cmp
mov
jns
ss
into
jns
xchg
cltd
cli
xchg
sti
rcrb
icebp
jg
or
movsb
lret
sub
sub
ficompl
cmpsl
cmp
cmp
call
out
xchg
sbb
sahf
in
in
shrl
inc
xor
loope
cmp
mov
cmp
jo
sub
cwtl
cmp
dec
jge
sub
out
adc
sub
or
test
ja
ss
pop
insl
lods
mov
mov
sub
pop
enter
cmp
push
jge
iret
es
pusha
or
adc
gs
cltd
cmovg
and
sub
dec
lret
shlb
aad
loope
sub
cmpsl
es
popf
in
sub
mov
dec
clc
mov
es
xchg
mov
daa
fcom
push
popf
scas
arpl
cs
stc
in
in
dec
ret
outsl
jecxz
push
test
inc
rcrb
aaa
jno
jno
push
loopne
jnp
jp
and
mov
leave
xor
mul
fwait
and
xchg
mov
xchg
stc
cmp
shrl
fs
mov
and
scas
imul
iret
cmp
jno
xor
ror
mov
rorl
lret
jo
div
stos
xchg
lock
cli
dec
sub
fsubl
insb
rcrl
cmp
cld
sbb
mov
mov
test
push
sbb
in
inc
push
and
dec
adc
mov
cmpsb
rcl
xor
out
cli
pop
mov
push
stc
test
jle
pop
or
and
sbb
lock
xor
pop
add
mov
jb
stos
outsl
dec
movsb
popa
sub
mov
jbe
insl
std
and
dec
int
jnp
loopne
push
rcll
aas
punpckhwd
popf
dec
and
lahf
mov
pop
std
pop
xor
add
xchg
fistl
fs
test
cs
test
jae
sti
sbb
lcall
lcall
jle
mov
in
push
xor
mov
mov
jg
pop
push
push
insb
in
cld
sub
sbb
xchg
test
inc
pop
mov
out
sbb
cld
pop
shlb
pop
or
aaa
push
inc
icebp
xor
fmull
mov
xlat
ljmp
rorl
mulb
xor
shll
or
bound
xor
in
adc
filds
fwait
sub
lock
lahf
dec
scas
das
add
les
inc
arpl
fld
dec
xchg
rorl
punpckldq
out
adc
aam
mov
sub
sbb
gs
sbb
adcb
pop
je
adc
dec
inc
or
dec
xchg
icebp
jae
push
sbb
adc
add
add
pop
pop
js
mov
arpl
insb
mov
orl
mov
aas
xchg
push
rorb
pop
pop
addr16
cmpl
jmp
lods
enter
inc
sbb
xchg
fcmovnb
mov
movsb
std
aas
cmp
fbstp
lret
cmpsl
or
pop
adc
inc
mov
xchg
aaa
pop
mov
inc
pusha
sub
sbb
jno
insl
aaa
std
repz
pushf
cmpsb
cld
xorl
push
cmp
pop
or
daa
clc
xor
or
add
jbe
daa
jmp
ret
fldt
or
mov
lret
imul
mov
push
add
sbb
cmp
or
clc
dec
xchg
ds
ret
cmp
shrb
imul
dec
jb
inc
fstps
aaa
jno
sbbb
sub
pop
add
repnz
push
gs
popa
les
sub
or
addr16
jae
xor
sub
pop
ds
jae
xor
pop
mov
jmp
es
jg
dec
frstor
dec
mov
repz
jmp
and
test
jecxz
xlat
in
jp
dec
adc
aas
mov
je
xor
ljmp
sarb
or
mov
push
pop
sub
dec
sbb
sahf
mov
jns
mov
inc
adc
iret
jo
inc
cli
jo
xchg
dec
adc
jo
mov
jne
in
imul
fldl
add
pop
dec
outsl
sub
sbb
jae
jg
ret
mov
sub
xor
mov
cli
pop
or
inc
insb
mov
dec
bound
inc
dec
mov
xchg
popf
dec
push
mov
shll
or
push
repz
popf
pop
adc
les
mov
loopne
mov
ds
mov
xchg
iret
sub
scas
ss
xor
dec
inc
or
bound
add
cwtl
and
jp
pop
pop
inc
cmpsl
mov
push
mov
mov
adc
jmp
inc
sbb
ret
jo
adc
sbb
xchg
pop
cld
leave
inc
add
icebp
pop
dec
dec
ds
out
pop
jle
or
push
jae
mov
inc
ret
ret
loope
push
and
cmc
int
nop
sbb
out
lea
xor
add
inc
in
inc
fimull
jb
mulb
sahf
xchg
popa
sbb
jecxz
sub
lea
cmp
jle
or
xchg
and
dec
xor
int3
out
bound
and
outsb
popa
or
mov
out
cld
xchg
jo
nop
enter
ss
add
push
dec
scas
xchg
mov
mov
and
lret
into
lds
out
mov
repz
movsb
shlb
push
enter
pusha
lea
stos
repnz
je
lahf
push
inc
sarl
push
xor
mov
fldenv
in
lods
dec
mov
ja
dec
adc
das
sub
pop
rcrb
test
xor
dec
mov
jno
jl
sbb
mov
in
xchg
stos
fisubl
std
mov
pop
daa
or
out
iret
mov
inc
xchg
or
xchg
or
int3
pushf
inc
sbb
sbb
mov
iret
stos
sarl
inc
out
pop
insb
jbe
mov
mov
das
mov
mov
adc
pusha
or
pop
test
push
loop
in
mov
cld
cmpb
imull
fs
sbb
push
push
test
adc
out
pop
mov
dec
xchg
lods
lods
mov
and
fldl
leave
pop
pop
fs
mov
inc
mov
pop
iret
push
rolb
gs
mov
fstpt
mov
lods
jmp
scas
or
lahf
dec
sti
push
cmp
sub
mov
xorb
cmp
xchg
ss
inc
pop
mov
and
mov
les
sub
daa
mov
and
xbegin
dec
and
jnp
push
std
jo
cmp
enter
push
mov
imul
scas
inc
enter
xor
xlat
push
test
mov
jg
push
jmp
jge
ret
mov
rcrb
pop
push
idivl
mov
mov
popa
es
cld
fcomp
out
jle
lret
lret
mov
lcall
mov
mov
sahf
loopne
xchg
sub
add
ret
mov
dec
mov
lcall
aaa
in
pop
js
sti
jle
in
ret
in
push
mov
mov
movl
fs
jb
daa
lcall
loopne
aam
xchg
icebp
push
cmp
push
loope
jmp
push
pop
jae
sub
int3
xor
cmpsb
cmpb
rcrb
cmp
adc
test
push
dec
push
int
xchg
mov
or
adc
sahf
dec
jecxz
mov
push
fcoml
jne
or
and
sub
pop
jge
cwtl
int
sbb
sub
xlat
pop
stc
daa
scas
lods
jbe
fcmovne
ss
enter
mov
jne
cld
pop
push
lods
jmp
je
ss
mov
aam
into
enter
cmpsb
fmuls
xchg
xlat
push
nop
mov
addl
mov
ja
mov
dec
sub
add
push
mov
cmp
xor
mov
inc
clc
sub
pushf
jae
leave
jno
xor
nop
cmp
pop
lret
sahf
jecxz
jle
dec
lret
loop
sbb
xchg
lock
dec
adc
lret
xor
lcall
cltd
pop
dec
iret
loop
xor
jle
in
push
mov
or
call
loopne
mov
xchg
adc
pop
or
cmc
jno
aam
adc
imul
xchg
cmpsb
push
jp
sub
scas
test
mov
lcall
inc
call
or
fwait
lahf
push
and
sahf
rcrb
loopne
aas
lret
es
int
and
add
inc
hlt
sub
adc
xchg
jge
out
xchg
jae
sbb
push
inc
push
cmp
imul
stos
sub
fldenv
or
cltd
sbb
ret
imul
and
sbb
pop
decb
stc
into
js
ja
pop
out
jb
pusha
push
cli
popa
shlb
xchg
out
dec
loopne
adc
fdivrl
in
stc
jne
dec
lock
divl
pusha
cmc
mov
es
shll
sbb
add
imull
and
push
mov
cmc
cmpsb
cld
jecxz
and
jno
xchg
add
add
push
pop
fucomp
sti
test
pop
jnp
pop
in
lret
je
add
shll
mov
into
aad
test
jns
mov
xorl
inc
negb
mov
dec
adc
jmp
fbstp
jecxz
sbb
ret
call
mov
icebp
inc
sbb
addr16
cmc
cmp
pusha
xor
test
sbb
xchg
dec
cld
cltd
addr16
loopne
lret
mov
fimuls
fwait
mov
subb
data16
mov
hlt
ljmp
sbb
je
negl
jnp
jo
push
lods
xchg
cmp
push
xchg
dec
pop
xchg
add
sub
daa
sub
jo
enter
shr
and
jns
push
pop
mov
daa
dec
push
sbb
scas
push
inc
rclb
and
notl
xor
mov
aad
int
pop
push
jbe
xchg
cmp
mov
dec
insb
cs
push
pusha
cmpsb
out
aaa
imul
out
push
les
shll
clc
jbe
gs
dec
repz
fisubl
xor
pop
stos
mov
shrl
jg
sbb
push
xor
movsb
and
in
push
outsl
inc
sbb
cmc
xchg
inc
stc
mov
mov
out
pushf
popa
sbb
inc
repz
into
cld
jg
jge
repz
je
dec
sub
aaa
scas
out
scas
sbb
xchg
dec
pop
nop
pop
flds
xchg
pop
repnz
int
out
xor
and
loop
mov
xor
leave
xor
data16
std
xchg
lcall
stos
add
out
inc
into
cmp
loopne
pop
inc
subl
xchg
rcll
adc
jg
xor
sub
mov
xor
ds
sbbb
ljmp
jo
addr16
push
fnstsw
mov
outsl
gs
addl
jg
dec
mov
popa
jae,pt
aad
push
jnp
inc
cmpl
pop
cli
xor
hlt
incb
mov
sbb
cmp
sbb
mov
seto
sub
pop
ds
dec
pop
addr16
or
scas
clc
ret
outsb
movb
and
jp
out
jl
mov
test
mov
mov
mov
addps
movsb
mov
sub
xchg
xor
lods
mov
mov
push
or
shr
lds
fwait
clc
adc
and
loope
inc
mov
outsl
loop
scas
add
or
xchg
add
in
stos
in
loopne
in
clc
arpl
add
mov
aad
mov
mov
enter
sarb
pop
push
or
jnp
stos
push
popf
mov
lods
and
add
stos
jle
out
fsubr
outsb
cmpsb
push
movsl
and
cs
xchg
push
fidivl
and
fcomp
addr16
mov
jns
dec
jno
fcmovnb
jle
xor
mov
popa
repnz
rclb
jp
or
out
pop
sbb
icebp
nop
jns
lods
add
adc
lods
cmc
std
pop
outsl
popl
or
rolb
mov
push
cmpsb
ja
dec
aad
addr16
jnp
dec
jp
sbb
imul
jmp
in
bnd
repz
xchg
xor
mov
push
call
jecxz
xor
ret
jb
mov
pop
in
mov
test
pop
clc
dec
adc
jle
lods
sub
popf
in
orl
or
or
stos
xchg
push
mov
lods
add
xchg
test
sub
es
xor
xchg
jno
pop
mov
out
jg
xor
xor
icebp
imul
jbe
iret
das
pop
sub
repz
adc
mov
mov
xchg
loope
out
lret
mov
loope
stc
pop
xor
push
push
aam
loope
divb
mov
aaa
xchg
sbb
insl
aaa
fistps
pop
xchg
push
sub
mov
ret
mov
mov
push
sahf
pop
push
movq
jno
dec
stos
cmpsb
shr
movsb
int
imul
jle
and
test
mov
arpl
adc
jge
adc
sahf
cmp
xor
leave
inc
jno
xchg
divb
mov
fmull
mov
sarb
mov
sbb
incb
aas
pop
mov
lea
xchg
xchg
ja
sti
jne
das
push
enter
nop
cmc
sub
mov
mov
popa
repnz
jp
mov
add
cld
jmp
aad
loope
out
cwtl
sub
add
test
insl
jg
rcrl
int3
adc
lcall
gs
gs
out
dec
mov
orb
cmpsl
into
sub
subb
jno
pop
pusha
xor
adc
cli
outsl
in
mov
mov
push
fidivs
out
add
mov
mov
jbe
xor
pop
and
decl
fucomip
stos
push
mov
fcmovbe
shll
sbb
in
push
push
out
cld
sbb
aas
cld
jg
pop
fucom
nop
inc
inc
lea
push
icebp
or
ret
cmp
jg
ss
into
and
lods
dec
jge
rclb
add
pop
mov
fsub
xchg
or
insb
test
dec
mov
int
pop
mov
aad
jns
int3
push
add
loopne
mov
decl
lret
in
mov
stc
aad
fwait
aam
jge
sub
enter
jnp
movb
imul
mov
lret
lea
push
pop
push
je
dec
xchg
jle
pop
sbb
xor
int3
jno
leave
inc
inc
cmp
pushf
adc
jl
das
mov
mov
scas
cmp
test
shll
shl
fmull
nop
mov
cli
test
sti
je
adc
adc
fnstsw
cltd
repz
rcll
inc
bound
dec
mov
sub
and
inc
sub
xorb
pop
jecxz
fidivrs
test
mov
mov
in
popf
mov
and
push
push
lds
jno
rorb
push
lret
cmp
adc
xor
cli
fwait
cld
aas
imul
mov
pop
outsl
repnz
mov
xor
mov
inc
rcrb
pop
jg
adc
mov
hlt
jle
lret
enter
sbb
jecxz
gs
or
lods
or
dec
subl
dec
fidivrs
push
jo
cwtl
je
cmc
xor
fisubl
xor
rorl
or
es
jmp
push
scas
xchg
add
push
xchg
lods
lret
test
ljmp
mov
mov
xchg
cmc
call
cmp
pop
push
int
or
sahf
inc
cli
imul
bnd
mov
xchg
lods
and
clc
gs
out
mov
insl
movswl
stc
or
sbb
jbe
je
jg
adc
jg
iret
add
das
aam
daa
stos
pop
adc
in
inc
push
aam
cmp
pop
mov
sarb
push
mov
sbb
inc
mov
popf
jb
jecxz
or
xor
pop
jl
xor
nop
fwait
mov
pop
clc
fcmove
and
mov
lea
mov
xchg
mov
jg
push
mov
int
pop
xor
inc
dec
lods
lret
push
push
and
jmp
mov
daa
out
pop
xchg
sub
or
add
cmp
icebp
xor
cmpsb
pop
cltd
xchg
inc
jo
jecxz
push
jbe
sbb
pop
mov
inc
push
inc
imul
adc
lcall
roll
mov
leave
xchg
mov
lock
lahf
inc
shrb
hlt
mov
cmp
popl
cmp
int3
push
sbb
pop
cmp
test
cld
xor
sub
outsb
push
adcb
outsb
fcomp
out
pop
sbb
pop
jae
xlat
and
gs
mov
cmpsb
jae
mov
clc
test
jl
xchg
aad
in
sub
frstor
arpl
mov
ja
ret
daa
dec
mov
jae
push
sub
dec
outsb
imul
fcomip
ret
push
not
into
dec
cld
ja
mov
sahf
cmp
adc
and
dec
into
loopne
jnp
je
pop
jns
les
stc
xchg
clc
mov
jmp
pop
cwtl
mov
sbb
lahf
add
testl
dec
or
push
sbb
mov
rol
mov
add
xor
jle
sbb
jne
mov
test
mov
sub
adc
pushf
mov
xor
ret
cmp
push
cmp
leave
mov
fldenv
mov
icebp
cld
fdiv
jns
imul
and
notb
and
jecxz
stos
and
loopne
mov
xchg
add
or
mov
push
dec
adc
jp
adc
sub
ljmp
sub
sub
xchg
inc
mov
inc
mov
les
mov
xchg
rorl
or
dec
mov
push
sub
pop
mov
mov
andl
cmp
add
jo
fs
cmpsb
lret
xor
je
jp
dec
popf
jnp
pop
xchg
add
mov
mull
pop
rorl
xor
and
push
jmp
rcll
lods
sub
in
stos
jb
int
repz
push
cmp
repz
cmp
sub
fidivs
add
insl
fcmovbe
repz
jnp
repz
and
fistpl
mov
add
cld
or
hlt
fiaddl
mov
push
dec
lea
into
sarb
stc
js
fsub
sub
das
push
sbb
push
xor
push
sbbb
mov
or
pop
jnp
cmp
mov
aas
mov
jbe
push
dec
inc
push
mov
and
push
test
mov
lret
add
mov
cmp
in
push
jge
je
outsb
mov
jg
jnp
mov
dec
loope
mov
movsb
sub
and
outsb
add
inc
xchg
xchg
cmpsb
cmp
push
push
push
imul
pmulhuw
fisttpl
popa
xchg
mov
xchg
adc
mov
hlt
mov
jae
xchg
fdivrs
insl
dec
scas
jae
push
or
jbe
int3
push
and
pop
rorl
lahf
pop
test
roll
stc
sub
fisubrs
jno
xchg
shll
xor
pop
mov
ljmp
lahf
or
xchg
jns
mov
rcll
fsub
jns
cmp
mov
orb
mov
lret
push
gs
sub
cmp
cld
dec
inc
pop
rcr
dec
cmp
jns
mov
lahf
or
xchg
fcompl
xchg
fdivrl
mov
pusha
rcll
pushf
lods
xchg
sti
push
jnp
or
xlat
xor
inc
mov
add
nop
jg
cmp
lret
or
stos
cmp
inc
push
popf
mov
nop
push
mov
cld
dec
push
rclb
repnz
jge
out
loope
pop
rcll
shlb
push
aam
push
repnz
out
cmp
xor
ljmp
in
mov
cwtl
jae
jnp
pop
inc
sarl
or
xor
fmulp
mov
mov
sub
fmul
movsb
jb
decl
adc
mov
out
and
jne
scas
jmp
pop
mov
ret
fdivs
cmpsb
cmc
mov
lock
xchg
scas
orb
int3
in
loope
aaa
and
inc
loop
fs
mov
roll
adc
data16
das
xlat
jbe
mov
insl
mov
mov
xchg
imul
sahf
xchg
int3
mov
xchg
js
mov
pusha
xchg
mov
js
dec
cld
pop
idiv
mov
add
cmp
push
adc
test
ret
sub
adc
frstor
test
pop
lahf
and
push
cli
mov
aam
sti
in
xchg
lret
sti
dec
jmp
cltd
fs
xabort
stc
push
mov
sbb
xchg
outsl
jge
movsb
xchg
cltd
fstps
cmp
sar
out
sbb
mov
mov
and
mov
pop
sub
shrb
test
clc
jbe
int
outsb
mov
call
pop
ss
pop
movsl
dec
and
xorl
cli
sub
cmc
in
jbe
or
pop
inc
arpl
xchg
mov
or
aaa
push
in
mov
jnp
jns
inc
in
push
test
dec
andl
jne
xchg
sbb
out
xchg
psubsw
loop
and
push
inc
inc
mov
push
aas
cmp
push
addr16
mov
mov
push
mov
or
sbb
pop
push
clc
icebp
push
loopne
lcall
pop
int
cwtl
or
mov
push
cld
in
int
mov
jbe
jmp
test
inc
xlat
mov
outsl
repnz
xor
ds
inc
mov
xor
sbb
outsb
aam
inc
rol
shrb
pop
pop
xchg
add
jno
xor
push
mov
aam
jmp
cltd
aad
push
bound
imul
iret
fbld
pop
ret
pop
aam
fistl
rorl
and
in
mov
ljmp
inc
addr16
push
mov
imul
imul
add
int
andb
clc
adc
outsb
in
push
pop
shl
mov
pop
add
faddl
pusha
decl
push
add
xchg
xor
clc
inc
xchg
mov
mov
mov
push
and
adc
loope
jmp
into
ret
lea
adc
or
inc
pop
jb
and
in
mov
sub
test
fisubrs
shl
insl
daa
jo
xor
insb
cmc
aam
adc
rcrb
shrl
inc
sbb
xchg
aaa
and
out
repnz
mov
dec
nop
push
pop
aam
sub
aam
pop
ret
pop
push
outsb
jnp
ret
and
hlt
push
mov
stos
cmp
cmpsb
aas
xor
and
jmp
in
and
jnp
les
push
inc
mov
push
and
xchg
sbb
popl
cmp
std
sarl
stos
jge
jle
pop
das
lret
and
sbb
inc
pop
xorl
cld
cmp
mov
push
xchg
sbb
xchg
dec
stos
push
jge
es
jmp
lcall
sub
lock
xor
mov
xor
and
pop
push
sub
arpl
inc
push
jne
jle
jne
or
mov
ss
and
testb
repz
movl
in
mov
orb
sub
inc
pop
sub
popa
daa
jae
adc
pusha
stos
out
sbb
mov
test
xchg
jae
aad
cwtl
dec
movsb
xor
jbe
and
pop
leave
adc
in
popa
clc
jmp
pop
hlt
lret
mov
adc
shr
out
in
bound
ret
push
cld
cmp
dec
push
inc
jae
out
es
jg
dec
test
push
jge
loopne
xchg
mov
pop
xchg
pop
shl
int3
sbb
fisubrl
outsb
jno
and
cmpsl
cmc
mov
jae
or
xchg
adc
xorl
jae
mov
push
in
dec
jno
rcrl
cmp
out
sub
out
dec
or
arpl
mov
and
push
jmp
push
jae
xchg
pop
push
add
xchg
les
sub
fists
scas
add
lods
rep
xchg
imul
ja
or
jmp
clc
clc
sub
mov
xor
xchg
int
shll
mov
or
mov
fists
cwtl
adc
loope
in
test
adc
push
cli
or
sti
faddp
mov
xor
aaa
lcall
sarl
mov
arpl
test
cld
lock
andb
dec
test
loope
mov
sbb
cli
sbb
ds
jmp
fs
int
adc
js
js
imul
cli
mov
inc
mov
loope
sub
add
imul
inc
xchg
insl
mov
out
lret
mov
pushf
mov
out
pop
stos
adc
mov
dec
and
rorl
dec
mov
cmpsb
mov
mov
mov
jo
pop
aas
jnp
adc
dec
test
call
fidivrl
sbb
loop
hlt
pop
imul
xlat
dec
enter
pop
lahf
popf
leave
in
push
shlb
adc
stos
fwait
xchg
std
xchg
mov
and
fs
jp
clc
jno
xor
push
mov
mov
push
ja
dec
stos
jl
cmp
xchg
aad
mov
sarb
jo
mov
xlat
jae
and
sub
dec
aaa
dec
inc
dec
mov
jb
cmp
jbe
push
cli
jns
cwtl
adc
or
in
pop
mov
mov
sti
loop
sub
mov
clc
scas
nop
jno
lcall
and
cltd
addb
ss
dec
leave
jo
xor
sbb
incl
pop
pop
mov
adc
fistpll
mov
xor
jae
in
push
sbb
test
lret
and
outsb
cmp
ret
add
addr16
cld
imul
push
subl
xchg
pop
nop
jae
jg
rclb
xchg
inc
leave
xchg
cltd
sbb
loop
pop
mov
shlb
mov
xorb
mov
lock
aaa
int
pop
in
in
fwait
mov
pop
dec
jge
sub
lret
ret
and
jo
sub
jp
dec
fdivp
pop
jbe
cld
test
jne
cmpsb
call
mov
adc
loop
jg
jg
ljmp
mov
fildll
add
xor
pop
test
push
popa
xchg
fnsave
dec
xchg
xor
mov
jp
mov
add
lret
aas
jp
daa
dec
shlb
in
inc
sub
lds
jg
mov
dec
sub
ja
or
addr16
arpl
subl
cmp
lods
out
mov
inc
jo
imul
ret
fs
pusha
adcb
daa
mov
mov
sarb
fwait
mov
adc
push
jbe
clc
pop
and
push
nop
lods
adc
sahf
push
and
popa
pop
stos
and
shl
les
rcrb
das
cmp
insl
sub
mov
fcoml
dec
sub
push
lods
stc
mov
lods
fs
push
mov
sahf
ret
pop
sbb
jmp
popf
add
push
xor
les
jb
or
outsl
out
fisubs
movsb
inc
testl
fisubl
inc
aad
lea
adcl
cmpsl
push
shll
xchg
mov
and
sub
lock
stos
xchg
in
jle
in
ja
and
cwtl
pop
pop
imul
stc
pop
sbb
sub
sahf
push
cmp
xchg
mov
cmp
call
shl
lods
in
in
sub
out
pop
or
jns
cli
test
or
xor
mov
int
iret
xchg
inc
ret
or
test
jno
cs
pop
ds
out
shlb
loop
xchg
fwait
jge
shlb
sub
jo
jle
cmc
dec
shr
sahf
cli
ljmp
push
pusha
sbb
adc
or
fisubrl
paddb
xchg
fs
adc
js
mov
or
decl
adc
iret
jo
fdiv
lea
jmp
inc
lea
cli
or
scas
sbb
mov
push
icebp
mov
sbb
movsl
xchg
imul
or
sub
inc
ficomps
leave
push
aad
jns
xor
xlat
push
jmp
aaa
push
orl
mov
jno
in
stos
cwtl
xorb
pop
xor
mov
sub
sbbb
jmp
xchg
adc
fisubrl
push
data16
sub
push
cwtl
imul
add
pushf
xchg
jmp
push
dec
aas
and
sub
mov
hlt
jg
mov
rclb
enter
lret
scas
push
and
lahf
nop
int
jmp
push
xor
das
cltd
inc
mov
or
aas
dec
repnz
inc
scas
int3
stos
mov
es
ffree
arpl
or
push
and
aam
fiadds
jle
les
or
je
sub
repz
sub
push
leave
push
push
lds
fsubrl
or
sub
gs
mov
push
or
ud2
mov
aad
leave
testl
je
cmp
movsl
jmp
sbb
cmp
xor
into
enter
push
jno
aad
ljmp
mov
shl
xchg
ficomps
aas
shlb
mov
mov
int3
inc
ret
clc
cli
mov
jge
and
sbb
aaa
inc
movl
sbb
mov
mov
int
jae
and
xor
push
mov
dec
mov
ss
xchg
mov
sub
rcr
sub
mov
or
pop
aad
aad
cmpsb
pop
lcall
cld
xor
fisubrs
cmp
or
dec
adc
neg
dec
in
or
iret
and
enter
int
mov
dec
bound
mov
xor
or
cmc
cmp
lret
adcb
out
aad
xor
ss
popa
movsb
mov
mov
aas
or
sub
lds
or
push
insl
cmp
mov
and
mov
lods
xor
or
sbb
adc
mov
xor
xchg
inc
fstpt
stc
mov
fstp
ret
or
jge
call
and
sub
pop
roll
iret
adc
and
adc
aas
xor
push
jp
mov
add
adc
mov
xor
xchg
daa
mov
mov
or
mov
into
xchg
push
int3
dec
jns
sub
xchg
jge
cmp
pusha
mov
insb
adc
mov
sbb
pushf
xchg
inc
xchg
ljmp
xor
xchg
xchg
push
es
mov
mov
and
push
inc
adc
mov
sbbb
xor
hlt
mov
mov
and
cmp
push
cwtl
push
rol
xchg
data16
dec
pop
out
xor
pop
push
shl
jae
adc
xchg
mov
inc
loop
dec
adc
dec
jno
inc
ss
push
push
fs
nop
xchg
and
enter
in
enter
mov
fcoms
mov
add
sub
mov
stc
dec
outsl
int
in
lock
and
cmc
inc
cmpb
push
pop
or
fisttps
and
aad
stos
mov
inc
aaa
dec
in
ret
dec
xchg
loope
pop
imul
pop
push
icebp
mov
mov
add
lods
jb
pop
loop
in
repnz
xor
cltd
mov
imul
mov
roll
sub
dec
es
dec
arpl
lcall
pop
mov
fs
fldcw
inc
adc
test
xchg
sbb
and
sub
inc
call
inc
es
test
das
inc
cmc
xchg
rorb
fisttps
stos
push
mov
repz
inc
sbb
sti
push
push
xor
pop
mov
fsubrl
jl
std
fwait
dec
mov
push
pushf
loope
add
popa
rorb
push
mov
sti
sar
xchg
pop
jl
mov
pop
sub
dec
fstpl
push
repnz
and
mov
adc
stc
sub
jecxz
sbb
jge
push
ljmp
add
enter
insb
jle
jge
sbb
iret
iret
sbb
psllw
mov
push
lret
loopne
dec
aam
mov
in
sub
orb
out
ds
sub
mov
das
cmpsl
jns
shr
out
in
fsubl
pop
and
stc
pop
cmp
add
sub
adc
inc
cmp
ret
movsb
adc
jne
inc
sub
push
out
mov
out
and
push
test
push
icebp
pop
mov
push
push
push
es
push
add
iret
mov
repnz
and
jno
push
mov
sub
gs
fisubl
xchg
paddusb
mov
mov
sti
into
cmpsl
fisubrl
lods
pop
fs
adc
roll
or
cltd
das
lret
pop
sti
or
push
dec
cmp
popf
mov
xor
jae
pop
repz
xor
lret
xchg
lds
and
push
test
jg
and
push
seto
ss
lods
lahf
mov
stos
jns
cli
and
cwtl
xor
sub
push
mov
xor
jns
xchg
data16
mov
fcmovnb
imulb
xor
mov
add
xchg
xchg
ret
mov
xor
gs
pop
or
adc
fs
test
pop
mov
xchg
xchg
in
push
in
mov
and
add
or
mov
cmp
mov
xor
sar
jp
fisttpll
test
jl
inc
push
or
iret
mov
add
adc
outsl
cmp
ret
lock
sub
jne
inc
fwait
insb
xor
mov
pusha
aaa
loop
out
bound
int3
inc
lds
cmp
fs
mov
jp
xchg
ds
push
mov
sub
cmp
mov
inc
jns
inc
aas
push
xlat
adc
xor
test
cmpsb
mov
dec
inc
or
adc
inc
dec
clc
add
movsb
adcl
repnz
insl
sbb
sbb
and
popf
imul
xor
sbb
jnp
repz
inc
out
push
add
andb
cmpsl
lahf
iret
loope
cmp
rcrl
ficoms
sub
pop
push
xchg
jae
jbe
subb
mov
jb
add
imul
sbb
adc
xchg
jl
mov
lods
lahf
outsb
cli
dec
adc
or
pop
jge
test
fidivrl
ficoml
notb
cmp
or
ret
fwait
loopne
sbb
push
add
xor
push
jbe
in
mov
push
dec
or
rcrb
into
xor
cs
shr
mov
jmp
cltd
mov
stos
inc
add
popa
in
pop
in
icebp
push
ss
push
xlat
stos
ret
cmp
mov
fs
pop
mov
mov
xor
and
mov
ss
shrl
sub
pushf
ss
insl
in
imul
mov
mov
frstor
add
mov
sahf
testb
jbe
mov
jmp
inc
and
scas
add
dec
rorl
xor
or
ljmp
sub
cmp
scas
adc
aam
fwait
mov
cmc
pop
ljmp
fs
mov
aas
push
dec
mov
rclb
lret
jg
data16
lock
or
mov
aas
int3
bound
test
gs
mov
adc
or
pop
lods
enter
push
adc
ror
sbb
push
pop
ja
leave
xchg
bnd
jb
std
cmp
and
xchg
dec
xchg
jl
out
mov
xchg
jg
and
sbb
icebp
test
sub
push
add
mov
fisttps
in
test
xor
dec
lret
pop
cs
repz
inc
xor
test
out
jbe
enter
push
or
sti
mov
aas
inc
leave
push
and
nop
inc
js
jno
pop
jp
lea
ret
call
int3
ror
dec
lahf
mov
push
jo
adc
in
mov
push
test
data16
repnz
cmp
imul
lods
lock
ret
dec
in
xchg
enter
daa
sbb
inc
out
in
dec
cmp
in
xchg
stos
lods
or
and
aam
es
and
jnp
adc
inc
nopl
aas
mov
js
bound
movb
popa
jmp
or
inc
lret
adc
fisubs
pop
rol
xchg
pop
adc
std
jle
fdivr
int
push
cmp
xchg
push
jge
add
lods
ss
bound
sub
or
mov
les
mov
xchg
cmp
sbb
mov
cmp
sti
call
fwait
insl
imul
mov
and
xchg
or
jno
es
ja
lods
xchg
call
cmp
jmp
cmp
fs
ljmp
gs
inc
inc
aad
mov
push
or
scas
dec
jle
sahf
push
shl
aaa
into
mov
sub
sbb
js
pop
push
scas
rcrl
and
mov
cmpb
mov
mov
lods
dec
inc
cs
mov
das
popf
js
mov
dec
cltd
jns
in
in
sub
insb
pop
in
mov
pop
popa
mov
movd
leave
mov
xchg
inc
inc
dec
push
lret
adc
dec
push
xchg
adc
iret
lahf
repz
jmp
pushf
movsl
xor
ljmp
add
cmp
test
loope
add
cs
popf
dec
push
adc
loope
sbb
jle
push
loope
sbb
sub
outsb
pushf
inc
push
adc
lret
mov
push
xor
xchg
xorb
push
rclb
fcomip
dec
out
repnz
sar
dec
mov
mov
cmp
lcall
pop
pop
xchg
repz
sub
push
fistl
or
inc
adc
cmc
arpl
insl
pop
fisubrs
pushf
add
inc
or
or
ja
adc
pop
outsl
dec
mov
out
bound
xor
lret
adc
or
jg
repz
js
ret
enter
fldenv
test
cli
aam
pop
popa
jbe
test
imul
xchg
in
xor
mul
cmp
or
jae
push
fdivl
mov
test
stc
and
jp
dec
push
mov
test
fwait
and
mov
dec
dec
roll
das
in
adc
int3
mov
loopne
pop
sub
mov
bswap
adc
xchg
xchg
ds
xchg
aad
shlb
xchg
aad
ljmp
pop
mov
in
ljmp
lea
xor
xor
mov
mov
adc
mov
xor
dec
cwtl
cmp
iret
es
lods
xchg
pop
out
jmp
push
mov
jb
xor
add
inc
sub
je
sbb
xchg
push
pop
pop
imul
or
sbb
lcall
ret
xchg
mov
jp
xchg
daa
or
movsb
fs
divl
aaa
int3
jle
int3
sub
cld
popa
addl
subb
xchg
push
dec
js
add
rol
mov
fisubs
adc
pop
jo
js
incl
outsb
xchg
sbbb
sub
lods
cs
xchg
sub
mov
lock
pop
add
sub
test
sbb
das
lds
movsb
repnz
dec
pop
xchg
or
scas
xchg
push
js
aaa
hlt
insl
aaa
sub
and
mov
xchg
out
sarl
sbb
dec
jnp
push
loop
fdivrs
lds
clc
in
out
lods
add
loop
push
call
push
hlt
packssdw
pop
mov
inc
pop
fldenv
add
pop
pop
xchg
in
adc
lods
minps
cs
jp
cli
sub
in
fisttps
push
jge
adc
xor
ret
xor
sahf
cld
push
lods
mov
insl
pop
mul
aas
push
mov
adc
iret
fsubrs
mov
aas
jns
pop
and
mov
jns
inc
call
dec
or
pop
dec
adc
lea
fldl
xlat
add
jp
adc
or
sbb
or
cmp
dec
aaa
xchg
sbb
push
jle
jno
movsl
loop
and
adc
mov
xor
or
ja
push
or
aaa
or
loope
bound
cmpsl
push
fdivrp
jp
ss
jecxz
ror
das
pop
cmp
lock
fmuls
push
call
jbe
mov
out
sbb
lcall
int
fidivrl
icebp
dec
mov
outsl
jnp
aaa
mov
mov
push
jecxz
das
sbb
nop
push
cmp
pop
sub
movl
lcall
xor
mov
sbb
rol
push
push
push
jp
or
or
inc
sahf
popa
xchg
push
jecxz
stos
mov
mov
ja
pop
out
lcall
lret
sbb
push
jl
lahf
in
in
arpl
dec
test
clc
add
test
sub
rcrl
sub
loop
daa
xchg
sbb
and
mov
or
jnp
jo
add
pusha
jne
inc
loop
pop
jl
inc
les
xlat
adc
adc
dec
arpl
cmp
dec
lods
ja
push
loope
sbb
jo
add
sub
pop
jecxz
mov
std
pop
fs
inc
xchg
cs
push
dec
in
inc
repz
cmpsb
into
lock
into
aas
adc
adc
mov
pop
aam
inc
ret
sarb
lcall
pop
movsl
add
imul
lea
outsl
inc
jge
lahf
out
movsl
je
push
arpl
fildl
rcll
scas
stc
test
mov
lcall
stos
dec
inc
push
cwtl
rclb
out
and
add
lock
inc
loopne
mov
push
or
mov
sub
sbb
andb
fcompl
xchg
movsl
dec
push
push
xor
mov
cwtl
push
cltd
out
or
mov
mov
dec
sub
stos
xchg
xchg
shrb
dec
jge
movsb
and
or
lods
hlt
out
xor
insl
ret
sti
loopne
xor
inc
pushf
outsl
push
xchg
sbb
out
lret
mov
cmp
test
mov
testb
movlps
mov
movsb
mov
xor
inc
mov
stos
cli
mov
test
ret
push
push
xchg
loope
dec
xor
jle
jp
stos
pop
xlat
bound
outsl
push
faddl
push
mov
or
cmp
fcompl
mov
pop
subb
mov
xchg
test
xchg
push
xchg
mov
or
jl
cld
or
stc
jmp
sub
imul
das
inc
ds
adc
outsb
mov
sbb
sub
cs
shll
ret
jg
push
sbb
mov
pop
inc
and
out
inc
rcrl
xlat
adc
mov
cmp
cmp
add
fwait
stc
fs
jno
cli
repz
sub
push
mov
mov
fisubs
das
pop
cmp
add
mov
lea
xchg
xlat
mov
lret
xchg
out
pop
xor
js
xor
int3
les
out
lret
push
push
mov
and
push
lret
psubsb
and
mov
mov
push
xor
jmp
stos
pop
lea
scas
stc
repz
test
test
imul
jl
cltd
scas
push
hlt
cmc
inc
pop
fcoml
sahf
push
mov
ds
mov
pop
mov
ret
mov
xor
push
push
xorb
lret
repz
xor
mov
dec
stc
jae
xchg
cmc
xlat
xchg
hlt
add
mov
jle
mov
sbb
cmp
inc
xor
sub
mov
mov
lea
divb
mov
inc
jmp
pop
fistpl
inc
or
mov
lret
jmp
aam
leave
mov
mov
test
lcall
in
enter
adc
pop
sub
jecxz
jnp
dec
lret
in
std
cmpsl
mov
adc
int3
sub
and
ret
popa
imul
or
push
xchg
movsl
test
jge
mov
jl
in
xchg
sbb
pop
add
mov
sub
sti
aam
ja
gs
cltd
cltd
scas
fcomi
inc
aaa
in
push
test
cwtl
icebp
fstpl
imul
or
sub
push
jge
stos
dec
or
into
jecxz
ljmp
jmp
sahf
xchg
xor
jb
push
push
cs
jg
fisttps
inc
xorl
mov
adcb
and
inc
sarl
out
sbb
fwait
sub
fwait
cmp
sub
add
int
dec
orl
clc
movsb
and
sti
mov
xor
push
adc
popa
loopne
rol
out
fildll
mov
mov
xchg
xor
xor
sbb
clc
sbb
mov
mov
enter
unpckhps
dec
or
pop
js
adc
sbb
mov
dec
mov
and
jp
push
lahf
lock
xchg
sarl
or
push
cld
mov
cs
test
jg
pop
jmp
dec
scas
pop
push
and
sbb
clc
pop
mov
adc
shlb
and
xor
and
pop
mov
mov
xor
testl
fistps
adc
stos
enter
cli
stos
or
das
sub
jbe
mov
xor
lea
fsts
mov
inc
sub
out
xor
jle
pop
push
xor
hlt
xchg
pushf
fwait
hlt
mov
or
loopne
aam
xchg
es
call
or
xchg
ret
lcall
mov
push
arpl
xchg
lods
mov
imul
xchg
ja
imul
push
sub
dec
sarb
sbb
push
mov
cwtl
sub
add
sub
xchg
mov
xchg
adc
xor
mov
cmpsl
mov
lods
pop
stos
in
cmp
int3
xor
inc
loopne
in
sub
insb
sbb
insb
stos
aam
lret
push
jno
hlt
lret
mov
sti
mov
rorl
dec
sarl
sub
test
mov
xlat
jns
xor
ss
xor
mov
lret
call
mov
ss
dec
je
data16
mov
pop
pop
les
out
xchg
dec
sbb
push
fwait
sbb
ret
ret
push
aam
popa
mov
and
pop
roll
xor
and
sbb
adc
add
gs
nop
iret
add
jb
push
aas
cmp
rclb
sub
mov
sarb
and
je
inc
pop
push
pop
sti
out
int3
cltd
test
jecxz
stos
jle
mov
fwait
add
mov
iret
jmp
shlb
hlt
jae
aam
add
lods
sub
sbb
fs
jl
loopne
jb
mov
imul
jg
mov
mov
int
mov
cld
cmpsl
popa
pop
sbb
adc
cltd
test
cld
outsl
lea
sbb
add
push
xchg
gs
ret
mov
pop
movsl
lret
ljmp
sbb
rcll
inc
inc
xchg
fldt
sbb
call
jb
xchg
dec
cli
insb
push
cmp
xor
sub
cld
or
fs
int
inc
push
ds
sub
mov
add
loope
ror
js
data16
mov
xor
dec
fdivrl
stos
loopne
test
mov
loopne
dec
push
jne
sbb
adc
shr
xchg
push
cli
ds
adc
ss
out
mov
inc
push
push
dec
rorb
sbb
sbbb
and
mov
and
jecxz
mov
adc
pop
xchg
out
subb
in
nop
pop
in
fcomp
cs
adc
fwait
aas
aas
std
int3
sahf
and
add
mov
outsl
in
sti
lods
sahf
sahf
push
inc
xchg
nop
daa
cmp
inc
filds
stos
std
aad
aaa
out
pop
scas
fs
andps
ljmp
sar
lds
call
lods
dec
enter
lea
dec
cli
cld
push
sbb
adc
ja
fcoms
in
adc
mov
ret
push
push
cltd
jecxz
ja
adc
dec
mov
enter
xchg
pop
adc
mov
add
mov
mov
cli
rcrl
xchg
in
push
and
test
sbb
adc
jl
cwtl
cmp
rorl
shr
mov
aas
cwtl
cmp
pop
adc
out
push
call
fistpl
fdivrl
mov
ret
scas
mov
test
ret
xchg
mov
testb
push
mov
mov
and
aam
inc
sbb
jae
add
int
pusha
aas
ret
jle
pop
pop
or
add
ja
or
push
loope
push
jb
fimull
inc
pop
sti
push
mov
or
lods
dec
sbb
mov
xchg
test
push
jnp
pop
cmpsl
dec
imulb
cmp
adc
ficoms
leave
sbb
dec
sub
fldcw
adc
adc
fchs
aam
inc
pop
mov
mov
xchg
mov
movsl
xchg
pusha
adc
xchg
les
rolb
mov
adc
out
sbb
mov
in
pop
xor
adc
pushf
daa
dec
adc
outsb
push
and
push
mov
push
sub
mov
or
subl
cmp
jo
add
add
cli
test
ret
dec
es
sub
or
inc
popf
mov
mov
inc
outsl
mov
shll
sub
cmp
sub
lock
dec
mov
xchg
xor
fcoms
dec
mov
cs
mov
jbe
lds
xchg
in
xor
lret
mov
inc
jbe
xor
mov
pop
mov
test
loop
shl
lock
add
sbb
ss
out
into
std
cmp
mov
mov
test
hlt
in
inc
push
movsb
and
sbb
into
push
ret
jae
push
push
ja
xor
push
mov
aaa
or
sbb
and
in
pop
shlb
dec
mov
jnp
push
mov
and
dec
pusha
xor
ficompl
mov
es
repz
sub
int3
cld
test
pop
mov
les
and
xor
mov
filds
jle
add
out
test
pop
sub
mov
sub
sbb
xlat
fstpl
iret
rorb
int
or
leave
pop
push
hlt
sbb
jae
jne
or
and
inc
lds
push
xor
int3
dec
not
aas
mov
dec
scas
test
mov
mov
jo
fildl
push
fistpll
xlat
or
mov
loope
aad
call
jmp
stos
imul
sti
push
cmp
mov
and
sbbl
xchg
adc
xchg
call
sub
int3
out
jp
stos
lods
jle
xor
add
in
clc
dec
lcall
xor
sbb
cmp
inc
mov
movsb
mulb
sbb
fadd
cmp
pop
gs
and
bound
mov
ja
sahf
xchg
int3
xorb
dec
or
xor
gs
test
xchg
fstpt
ret
addr16
mov
test
jns
outsb
xchg
and
adc
sbb
call
leave
in
xor
nop
fdivl
lcall
cmp
out
lea
popl
xchg
mov
popa
inc
xor
inc
out
int3
adc
adc
in
imul
add
add
jl
xchg
inc
sbb
lret
sub
cmp
test
sbb
jecxz
mov
in
mov
loope
enter
and
adc
fbstp
das
je
xor
fwait
outsl
stc
adc
xchg
ljmp
movsl
jp
fcomip
and
sbb
inc
popa
sub
outsb
sbb
and
inc
shlb
ss
add
sahf
mov
dec
loope
xor
imul
ret
int
jno
daa
jecxz
rorb
loope
lods
dec
aad
sub
sbb
ja
notb
xchg
loopne
int3
call
xchg
mov
std
sub
test
push
repz
mov
adc
pop
int
dec
sbb
aad
scas
lahf
data16
and
jl
pop
pop
roll
lret
add
xor
sub
adc
test
cli
mov
push
outsl
dec
xor
popa
push
mov
mov
dec
dec
lahf
push
outsb
mov
outsl
lds
cli
sub
adc
jl
xchg
mov
int3
daa
dec
repnz
out
inc
mov
aas
cmp
aam
incl
clc
push
mov
das
bound
mov
push
cmc
push
sbb
pop
xchg
popa
add
imul
aaa
sub
ds
inc
loop
mov
js
push
dec
sub
out
sbb
fisttps
push
mov
loope
mov
sahf
inc
push
sub
out
push
sbb
mov
push
movsb
stc
fwait
out
lds
mov
fiadds
adc
add
decb
jecxz
add
cltd
das
pop
inc
fmuls
scas
jb
adc
mov
jne
das
or
push
sti
push
test
or
test
add
out
in
mov
add
cmp
maxps
mov
setno
jecxz
lods
inc
into
mov
clc
sub
mov
out
lcall
lods
mov
shrl
dec
inc
into
pop
lret
outsl
out
orl
mov
mov
movaps
bound
pop
cld
pop
in
dec
in
mov
cmp
mov
cmpb
and
jns
jo
or
push
mov
pop
data16
into
mov
je
pop
repz
sub
ss
fistpll
aam
insl
dec
std
movsb
push
sub
fisttps
cmpsb
je
iret
mov
jmp
addr16
insl
jbe
push
mov
add
imul
mov
pop
jbe
sarl
hlt
mov
adc
push
cmp
mov
in
or
dec
roll
inc
mov
lret
inc
es
int3
inc
shlb
ja
outsb
sub
xor
in
cmp
push
add
add
jne
dec
adc
sbb
cld
loope
lock
dec
push
mov
lahf
add
sub
sbb
add
test
mov
jmp
enter
xchg
lret
lock
mov
repnz
xor
mov
in
into
sub
stos
gs
test
loop
test
loope
xchg
xor
push
pop
sbb
daa
movsb
mov
mov
and
mov
nop
aam
fwait
or
test
mov
lods
shr
stc
mov
mov
call
push
xchg
mov
loopne
cmp
push
inc
cmpsb
adc
sbb
test
sbb
test
fsts
mov
inc
aad
adc
hlt
adc
imul
into
cwtl
xchg
inc
test
icebp
inc
sbb
icebp
pop
push
mov
jl
repnz
add
push
inc
cmpsl
mov
push
lock
xor
sbb
and
repz
sti
dec
cmc
fwait
sbb
inc
mov
push
pop
push
push
call
pop
clc
imull
jae
add
xchg
pop
mov
cmp
push
fstpl
inc
mov
push
dec
bnd
dec
cmp
repz
pop
call
push
fcoml
or
loopne
and
aas
cmp
nop
mov
lret
mov
cmpsl
jmp
or
std
in
and
dec
ljmp
dec
movsl
push
gs
cld
fbstp
mov
push
aad
mov
enter
add
aad
bound
into
iret
cmp
mov
sahf
loope
xor
dec
lods
ljmp
push
jge
jno
stos
inc
adc
arpl
inc
cli
mov
add
xchg
inc
push
inc
mov
pop
cmpsb
mov
in
icebp
adc
push
cmp
bound
cmpsb
stos
out
push
insl
out
rcrb
clc
fbld
aas
pop
jg
mov
and
xor
popf
or
fbld
aam
dec
xor
jp
add
ds
inc
xorb
jns,pt
mov
jae
jp
aas
dec
mov
and
in
mov
aad
push
outsb
lcall
push
fcomip
sahf
out
shrl
cwtl
push
sbb
hlt
outsl
xor
mov
push
mov
pop
loop
dec
test
stc
add
insb
mov
xchg
and
outsb
xchg
es
sub
outsl
lds
adc
fmulp
xor
xchg
popf
mov
pop
cltd
int3
add
test
cmp
imul
push
loope
xlat
mov
and
xchg
mov
jno
dec
add
xor
leave
xchg
bound
shl
fcomps
and
fs
ja
mov
or
ss
imul
aad
fldl
mov
dec
mov
call
leave
pop
lock
fucomp
cltd
mov
mov
jle
mov
mov
inc
sbb
mov
dec
std
jb
push
lods
inc
popf
xor
adc
push
add
or
pusha
xor
jo
sbb
mov
inc
pop
push
inc
lcall
fistl
mov
movsb
subl
push
negb
push
push
jae
or
imul
inc
fcomps
pop
cli
mov
or
add
add
lret
xchg
dec
lods
int
sub
push
sbb
dec
push
mov
aas
jb
push
scas
add
push
insb
stos
sub
in
int
stc
push
icebp
sub
mov
mov
mov
les
leave
cli
and
add
movsb
mov
cmp
loop
cmpsl
cmp
mov
dec
cmpsl
mov
adc
in
push
std
cmp
aad
jb
daa
nop
mov
scas
cmp
mov
cs
cmp
outsl
mov
dec
stos
and
stos
lea
sar
xchg
lds
lock
push
adc
dec
fnsave
aas
pop
mov
push
adc
mov
add
adc
and
xor
dec
push
shlb
sbb
push
add
andl
mul
jg
icebp
or
int3
sub
js
ret
jmp
and
jecxz
pop
les
add
xor
cld
test
xchg
mov
imul
xchg
sub
movsb
cmp
inc
aam
dec
cmpsb
pop
cld
jl
sahf
pop
push
jge
daa
lret
ja
rorb
or
or
xorl
or
jnp
sbb
test
mov
mov
call
dec
test
lret
fisubl
movsl
aaa
xor
in
subb
mov
dec
xlat
nop
mov
sub
enter
mov
addl
testl
insl
add
lret
add
inc
sbb
cmovns
push
or
jne
fcmovbe
sbb
je
pop
jge
jg
cmp
sbb
dec
inc
mov
push
popa
hlt
push
sahf
dec
jg
mov
bound
mov
mov
outsl
movsl
dec
jb
xchg
scas
fadd
mov
pop
daa
jns
and
or
cmc
adc
xchg
lods
and
insl
inc
pop
shr
pop
les
dec
and
int3
mov
adc
xchg
loop
sbb
xchg
stos
dec
popf
das
and
mov
fstpl
lods
into
mov
mov
mov
mov
lret
xchg
sti
mov
push
xor
mov
and
xor
and
push
call
ja
je
popf
pop
imul
and
mov
popa
xor
lods
out
in
stos
ret
movsl
icebp
xchg
fwait
lahf
les
and
hlt
push
enter
push
cmp
sub
mov
sbb
imull
push
mov
mov
push
cmp
cmp
add
pop
aad
lods
jae
ds
xor
jecxz
xchg
out
mov
les
in
cmp
dec
aaa
repnz
daa
arpl
popa
cmp
ljmp
ljmp
idivw
mov
loop
aaa
pushf
lock
into
push
sub
out
push
movsl
mov
out
dec
js
cmp
mov
ja
test
aam
sbb
daa
push
jmp
sub
xchg
popa
sub
cwtl
cmp
incb
inc
mov
fiadds
mov
neg
cmpxchg
mov
fistps
push
xchg
inc
lret
out
dec
xchg
xor
adc
aas
or
movsb
sub
test
mov
scas
add
std
lods
pop
push
xchg
outsl
cmp
rcll
dec
loope
sub
aad
sti
inc
stos
jmp
sub
jecxz
cmp
jo
insl
xchg
mov
sub
fs
jg
sub
divb
js
fdivr
cwtl
sbb
addr16
addb
hlt
mov
mov
test
dec
adc
adc
push
xor
push
xchg
icebp
in
pop
push
jae
fdivrl
shrb
mov
push
sbb
pusha
dec
insl
pushf
xchg
inc
movb
pop
hlt
adc
xchg
pop
pop
sbb
fimull
test
mov
sub
sub
mov
xor
into
orb
xor
aas
aad
mov
push
add
jecxz
sbb
xorb
addb
adc
mov
test
movsl
pusha
pop
jge
stc
popf
call
out
mov
pop
xor
mov
stos
xchg
jae
sarl
mov
sub
in
dec
js
add
jge
xor
push
mov
mov
jno
pop
and
adc
stc
mov
xor
repnz
sahf
loope
mov
jb
sbb
movsl
int
xor
dec
adc
fcoms
in
mov
adc
cli
dec
pusha
dec
loope
jbe
fisubrs
flds
and
add
aas
jge
inc
jecxz
xchg
out
in
pop
adcb
mov
xor
xchg
leave
mov
cmp
jl
in
sbb
dec
hlt
mov
fs
add
int
repnz
arpl
cmpsl
data16
ljmp
pusha
shll
jnp
cmp
adc
popa
in
insl
in
ja
clc
pop
jns
xorb
xchg
cmp
push
cld
enter
xchg
push
cmp
arpl
xchg
dec
pop
out
int
orl
xchg
pop
pop
cli
push
cmp
arpl
test
pushf
out
cmp
mov
xchg
cmp
xchg
sti
xchg
outsb
xchg
push
push
jl
mov
rorl
sbb
scas
aad
rcrb
outsl
fiadds
xor
cmpsb
arpl
arpl
mov
aas
dec
xor
je
bound
adc
jnp
or
fs
pop
aad
add
out
mov
popf
shlb
test
add
inc
jmp
xchg
out
pop
mulb
inc
mov
jo
sbb
scas
mov
aam
nop
or
shrb
cs
aaa
adc
xor
sub
push
lock
mov
mov
dec
fisttpl
imul
sahf
dec
lcall
es
enter
inc
jle
dec
insb
rcl
hlt
sbb
int3
dec
fnstcw
das
mov
cmpb
xor
outsb
cmp
xor
cmc
sub
sbb
and
lret
mov
jne
jae
cmpsl
add
or
lcall
ficoml
jecxz
jne
push
stc
xchg
ja
lret
lcall
dec
int
xor
imul
dec
imul
icebp
inc
xor
add
sub
outsl
xor
jg
xorl
lds
xchg
mov
orb
cmp
test
div
cmp
mov
adc
inc
xor
pop
in
push
cmpsb
push
fs
movsl
data16
shl
js
xchg
xchg
int3
pop
jge
test
mov
lret
les
ds
push
jmp
icebp
lahf
or
inc
cltd
or
jb
pop
into
fmulp
ret
push
aad
mov
jae
xchg
lret
xchg
mov
mov
sub
movsb
fidivrs
and
jmp
ljmp
or
inc
andb
mov
push
jne
fidivs
call
pop
xchg
enter
pop
clc
sti
cltd
insl
jmp
in
cld
mov
pop
imul
xorb
add
js
fistps
pop
mov
sub
adc
dec
jmp
jge
jmp
inc
mov
cmpsl
jb
jnp
fsts
adc
pop
xchg
loope
imul
cltd
dec
add
jnp
and
adc
fidivl
dec
fnstenv
push
outsl
cmc
popa
rolb
inc
call
ficompl
outsl
dec
into
push
inc
addr16
xlat
cmp
mov
mov
es
add
sub
loop
loope
inc
mov
or
sbb
sbb
xor
or
iret
aam
mov
sub
mov
sub
add
pop
dec
mov
insb
shrb
dec
dec
xor
insl
adc
jge
jge
xchg
jmp
jg
xchg
dec
inc
lock
inc
lahf
and
adc
push
pop
je
cmp
push
jo
add
fistps
xchg
pop
or
mov
fsubl
or
sti
lcall
mov
push
push
pop
pop
pop
addb
pop
dec
xchg
les
push
imul
in
push
inc
pop
sbb
cmp
not
xchg
pop
fwait
and
sbb
nopl
mov
cmpl
ficoml
out
mov
ds
sbb
mov
push
in
cmp
jle
outsb
sub
mov
idivb
cmpsl
jbe
inc
inc
insl
cld
push
shl
push
lcall
mov
ret
outsb
cltd
mov
pop
pusha
add
or
int
into
sbb
adc
mov
xchg
and
mov
aas
adcb
jbe
imul
cwtl
sub
dec
sbb
sub
sbb
jno
push
xor
xchg
inc
or
xor
push
scas
lds
sbb
jg
dec
cmp
inc
stos
or
sbb
stc
pop
ret
in
push
pushf
cltd
and
mov
jge
les
or
pop
fsubrp
xchg
aad
mov
mov
mov
scas
inc
jp
sub
push
cmc
inc
add
nop
mov
push
stos
push
lret
rorl
sahf
cmpsl
xchg
sub
jp
out
jmp
ds
scas
xchg
mov
adc
popf
lcall
in
xchg
les
lret
sub
pop
iret
fisttps
mov
aad
dec
inc
out
aaa
pop
arpl
xor
inc
test
psraw
scas
mov
inc
test
add
std
dec
fiadds
lret
je,pt
pop
movl
dec
loope
lahf
test
xor
jmp
dec
xchg
sbb
mov
iret
or
pusha
xchg
aam
mov
mov
andb
mov
xchg
mov
lds
ret
cli
adc
imul
push
shl
sub
xor
mov
sub
sbb
pop
adc
pop
pushf
cmp
dec
divl
sbb
ds
jl
bound
movsb
loope
stc
in
mov
in
sub
sarl
arpl
rclb
cmp
add
adc
mov
sbb
lcall
cli
daa
cmp
jmp
ja
sbb
ucomiss
out
xchg
lea
mov
push
insl
xchg
xor
jg
addr16
scas
cmp
push
ljmp
and
push
pop
sbb
lods
int
mov
sarl
popa
in
test
ss
test
sub
in
mov
jae
push
xchg
fcoms
mov
fisubl
xchg
loope
cmp
roll
mov
xchg
pop
or
sub
ret
pop
xchg
cld
icebp
lds
add
hlt
xchg
mov
adc
lahf
jp
lods
in
fsubl
pop
ja
cmpsb
xchg
jo
sub
inc
mov
jl
or
push
sahf
push
adc
out
cltd
je
or
push
loop
or
sub
outsl
icebp
mov
stos
sarb
roll
ret
xor
mov
shl
dec
mov
repz
pop
lods
xchg
add
xchg
insb
in
dec
idivb
mov
lods
inc
adc
fcom
fcompl
cmpl
cwtl
add
sbb
mov
push
fisubs
inc
or
cmp
push
ret
sbb
inc
cmp
data16
aad
mov
hlt
cmp
cmp
loope
iret
arpl
aad
add
sub
lcall
pop
bound
pop
add
cltd
test
sub
mov
loope
xor
dec
mov
test
pusha
icebp
and
cmc
ret
xchg
cmc
scas
ss
xor
leave
shll
or
leave
jbe
dec
push
inc
push
cmp
popf
xor
sub
mov
mov
jbe
or
add
inc
dec
out
xchg
roll
aas
mov
mov
pop
mov
jl
arpl
adc
je
jp
xor
inc
xor
inc
push
cmc
repnz
cs
xlat
xchg
fs
jnp
and
add
and
hlt
mov
outsl
movsl
mov
adc
and
mov
dec
push
sarl
ds
add
stos
xlat
and
daa
mov
stos
dec
sub
inc
addr16
ja
xchg
cmpsb
dec
xor
sub
call
pushf
orl
dec
adc
rcrb
mov
mov
and
shl
mov
scas
sbb
mov
add
pop
leave
hlt
add
cs
cwtl
ror
int3
mov
or
or
movsb
shlb
outsb
mov
into
mov
mov
fidivl
push
lea
sub
sbb
daa
ds
xor
push
inc
or
sub
cmpsb
test
call
mov
std
fldt
pop
xor
sbb
cmp
add
jmp
stc
sbb
or
cmp
cmpl
out
lock
mov
lock
jmp
cmc
test
sub
inc
hlt
ja
mov
jp
pop
orl
pop
pop
cld
inc
push
arpl
adc
sbb
out
dec
dec
push
fimull
repnz
pop
mov
mov
mov
faddl
addr16
ja
push
int3
popf
mov
out
xor
jno
rcrl
sbb
ds
add
lcall
mov
rcr
idivb
addl
push
jo
add
pop
stos
xchg
cli
mov
fwait
nop
and
mov
jge
and
mulb
out
and
xchg
jae
das
xchg
gs
dec
push
clc
or
inc
mov
cmp
fsin
lods
pop
fmul
popf
mov
into
push
arpl
and
mov
test
out
xchg
lods
cmc
push
adc
loop
xor
jno
pop
call
flds
bound
sub
aas
mov
pop
bound
dec
push
mov
xchg
mov
mov
add
test
cmp
cmp
insl
adc
jmp
test
imul
sbb
dec
inc
xorl
jnp
dec
jl
sbbl
stos
pop
xor
mov
cs
sbb
or
lret
mov
jp
mov
stos
push
sub
xchg
pusha
xlat
in
aas
dec
dec
sbb
xchg
hlt
fldcw
int
add
or
lds
mov
dec
mov
fwait
jns
pop
jle
je
push
pop
xchg
gs
addr16
mov
iret
scas
jo
adc
adc
fs
mov
adc
cmp
xchg
popa
adc
adc
je
sahf
out
adc
mov
test
rcr
cmpsb
pop
aam
ss
sbb
xlat
mov
and
outsl
insl
sti
mov
in
inc
pop
sahf
inc
mov
jns
leave
push
and
ja
push
int
enter
pop
into
add
sbb
jmp
mov
dec
test
cmc
jb
pop
add
xchg
mov
fcomps
mov
inc
xchg
inc
jmp
sbb
xor
subl
sbb
and
or
mov
and
adc
sti
or
jp,pt
inc
cld
addr16
rcl
das
adc
ret
pusha
insb
test
cmp
loop
xchg
sub
test
jecxz
movsb
mov
xlat
cmp
mov
stos
jb
and
cmpsb
and
push
int
sbb
bound
push
iret
ss
mov
mov
mov
cmp
out
xor
clc
insb
test
jb
sbb
jp
fbld
jge
cmp
sbb
push
push
fisubrs
fstp
jle
xchg
cmp
sahf
xchg
cmp
and
ss
ror
mov
pusha
movsl
shl
cmpb
lods
adc
or
lods
and
dec
lods
adc
lret
xor
xor
mov
sbb
xorl
lcall
insb
movsb
mov
cmpsb
and
rolb
test
and
mov
mov
in
xorl
dec
in
mov
test
out
pop
jg
loop
jge
iret
add
adc
cltd
cmp
jecxz
mov
cmp
int3
sbb
cld
sub
mov
adc
jno
lea
ja
add
imulb
test
xchg
lret
adc
je
and
mov
dec
cmp
sub
xchg
lcall
push
xlat
test
push
sbb
jns
pop
loop
cmovle
push
sub
add
cli
arpl
loopne
popf
popf
ss
lods
cli
xor
test
xor
stos
pop
das
inc
sbb
jno
in
mov
call
rcr
out
fldcw
push
rep
js
js
jg
jge
lcall
js
insb
cmp
and
rclb
aas
mov
enter
test
stc
mov
data16
mov
jne
ficompl
jns
xlat
xor
or
call
pop
sbbb
fistpll
push
es
mov
mov
loope
xor
push
test
jg
mov
sahf
loop
fcomip
cmp
jb
sarl
mov
fnstcw
or
ds
mov
jo
cmp
inc
sti
lahf
sbb
cmp
and
bound
test
ja
push
lret
cltd
xor
outsb
add
pop
sbb
cmp
test
jecxz
pop
insl
ror
ja
adc
dec
push
js
movsb
mov
cld
popf
f2xm1
mov
nop
arpl
fimuls
dec
adc
adc
int
push
orl
bound
popa
lret
adcl
jp
dec
sbb
stos
pop
dec
fwait
inc
and
inc
adc
in
or
daa
adc
int3
insl
xchg
jo
cmpb
ljmp
and
stc
xor
pop
xor
iret
jecxz
mov
adc
xlat
loop
cmpsl
fdivrl
arpl
jbe
push
dec
nop
std
cmp
bswap
adc
and
xorb
hlt
ljmp
xor
stc
and
lret
push
mov
or
jae
lods
lods
pushf
add
mov
outsb
mov
jns
or
adc
aam
sub
jb
xor
add
imulb
xchg
cld
adc
jge
addb
inc
mov
xchg
xor
fstpl
xchg
int3
sub
in
pop
adc
gs
and
add
adc
std
gs
mov
insl
lea
leave
mov
sub
sarb
or
sub
out
jmp
push
loop
inc
dec
sbb
or
outsl
call
cmp
jecxz
xchg
hlt
add
pushl
mov
lahf
cmpl
sahf
xchg
xchg
lret
push
pop
mov
dec
test
lret
insb
xchg
dec
cmpsl
sbb
repz
in
inc
int3
pusha
mov
aad
jo
xchg
adc
das
push
mov
daa
add
xchg
jg
xlat
fld
mov
jg
lock
cmp
sbb
dec
adc
ss
cltd
arpl
cmpb
mov
mov
lock
mulb
call
jg
push
inc
dec
xchg
movl
mov
fnstsw
movsl
or
clc
dec
leave
xchg
test
and
data16
mov
jno
push
je
or
mov
mov
xchg
push
scas
outsb
lea
sbb
fnstenv
imul
hlt
pop
stos
push
cmp
cld
outsl
adc
pop
sbb
jns
push
jbe
and
or
lahf
mov
test
mov
and
lods
xchg
in
ror
jo
mov
sbb
sarl
cmp
xchg
arpl
in
sbb
bound
inc
loope
sub
mov
inc
add
out
add
mov
push
mov
iret
mov
and
test
sub
idivb
sbb
rcrl
or
aam
push
pushf
and
push
jl
inc
or
sub
nop
adc
popa
mov
or
dec
bnd
jae
popf
push
jmp
jno
out
cmp
hlt
mov
sub
jge
lret
call
fwait
dec
movsb
jae
ds
xchg
insl
cmpsl
das
ja
daa
lret
dec
push
inc
test
int3
movsl
push
sbbb
mov
dec
adc
stc
cmpsb
push
xchg
fscale
lock
loope
push
dec
ret
fimuls
jne
cmp
lret
enter
rcrb
or
pop
cmp
xchg
pop
xchg
adcl
fstps
in
es
lcall
fs
jb
clc
and
jns
mov
ja
add
adc
jb
sub
xor
cld
ja
push
popa
pop
lret
pop
xor
dec
lret
xchg
lods
test
push
sahf
dec
imul
fadd
lret
inc
pop
push
push
jmp
stc
imul
pop
stos
sub
ss
loopne
mov
xchg
xchg
cmpsb
xchg
lret
add
imul
notb
test
shl
or
loope
or
cmp
sbb
cwtl
loope
pushf
push
xorb
mov
mov
lea
dec
dec
popa
repnz
neg
movsl
mov
or
test
mov
pop
subl
addb
push
sbb
inc
pop
aad
subb
push
sbb
pop
xchg
test
and
mov
es
cs
add
inc
lea
fldenv
ss
lods
jg
pop
mov
adc
bound
mov
push
sub
lret
mov
fidivs
and
lcall
cmp
imul
mov
repnz
push
adc
loope
repz
mov
mov
adc
fisubrs
and
mov
mov
xor
mov
jb
xchg
push
sti
in
mov
aam
sti
and
aad
mov
jnp
push
arpl
or
jg
faddl
xchg
jle
cmp
fisubs
pop
pop
cmp
xchg
push
jmp
sub
repnz
lods
and
lahf
fstps
sub
les
mov
jge
test
ss
in
shll
ficompl
cmc
fwait
pop
jb
lahf
xor
aam
pop
add
aad
sbb
xchg
loop
push
cmp
ficompl
sub
adc
daa
jge
insl
sbb
sti
pop
clc
div
sub
cs
adc
xchg
cmp
fisttps
pop
mov
add
pop
jle
sbb
stos
out
mov
dec
mov
pop
aam
shll
jg
push
stos
cmp
xchg
push
jo
out
mov
enter
call
jmp
mov
subl
addr16
ja
cltd
movsl
pop
ja
and
xchg
daa
pop
mov
xchg
and
jmp
test
je
js
adc
and
sub
dec
lods
push
mov
add
or
sub
cmp
fbstp
insb
ja
sbb
repnz
or
leave
mov
mov
push
loopne
test
and
adc
bound
fidivs
iret
ss
xchg
sbb
sarb
iret
in
xchg
cmpsb
mov
jg
inc
and
lret
push
sub
sub
pop
imul
or
cltd
ja
cmp
test
cmpsl
cmp
movsl
xchg
in
lea
sbb
sbb
or
lock
mov
repz
sbb
std
jmp
lahf
dec
shl
lods
nop
sub
leave
dec
dec
pop
out
lods
jg
fiaddl
xor
addr16
and
std
ret
adc
jmp
cmp
out
ljmp
stos
sub
mov
inc
adc
outsl
fsubp
adc
hlt
xchg
in
xchg
inc
cld
orl
dec
fiadds
mov
imul
out
and
xchg
pushf
mov
sbb
pop
stos
jo
jae
fwait
pushf
mov
cwtl
pop
pop
sub
lahf
popl
cvtdq2ps
and
add
test
testl
adc
outsb
xor
imul
in
cld
xchg
stc
leave
mov
rorb
dec
or
mov
pop
inc
fld1
out
sbb
rcrl
fcoms
jnp
lea
push
dec
cmc
jge
sub
dec
ss
fists
and
movsl
push
push
sub
xchg
fistl
adc
stos
ret
mov
sub
jae
and
add
jp
and
shrb
icebp
decl
push
mov
or
add
mov
popf
rclb
jno
pop
push
std
iret
dec
xor
push
sbb
push
jae
sub
add
dec
mov
push
mov
loop
hlt
jo
fcoml
cwtl
movsl
scas
mov
rclb
sub
fdivl
pusha
xor
lret
sbb
ret
es
xchg
sub
int
sub
iret
cmp
je
imul
xor
xchg
add
ret
mov
cli
pop
cld
mov
js
dec
les
mov
mov
insl
jecxz
ret
adc
icebp
push
mov
mov
xchg
inc
dec
sbb
mov
loopne
gs
or
add
icebp
push
call
push
sub
xchg
lret
lcall
lret
pop
inc
popa
cmc
xchg
js
pop
out
add
lea
ss
and
adc
outsl
clc
in
test
mov
data16
scas
or
xchg
mov
lods
aaa
outsb
leave
shll
lods
das
jl
sti
pop
ror
sahf
std
call
cmp
adc
jns
pop
shlb
sub
add
aad
ret
dec
mov
or
daa
xchg
sub
mov
adc
div
sarb
movsb
xor
xchg
inc
aam
fistl
out
and
xchg
lret
leave
and
test
push
mov
sti
and
mov
or
add
imul
cmc
inc
xor
cmp
xchg
lret
outsl
mov
lahf
pop
les
inc
xchg
outsl
jmp
push
pop
fildl
push
jae,pt
and
scas
mov
cmp
and
mov
mov
mov
adc
mov
inc
xchg
sbb
mov
lahf
push
mov
test
sahf
dec
lret
ja
shlb
cltd
and
pop
int3
das
cli
push
dec
in
test
shll
mov
cld
popf
xor
cwtd
aaa
dec
fsubr
arpl
fisttpl
nop
aas
hlt
test
or
ja
xor
jmp
scas
shl
daa
adc
jns
mov
sub
lds
stc
aas
lret
xchg
jno
out
mov
xchg
push
mov
jl
xor
lcall
imul
scas
into
shlb
xor
jl
imul
sub
cmc
or
je
and
repnz
sbb
js
cmpsb
fwait
addr16
lcall
xchg
insb
sub
mov
dec
fcoml
stc
push
and
cmp
add
jbe
int3
lock
push
shlb
jb
cmp
pop
test
pop
pop
lret
ss
fdivr
ljmp
mov
imul
rolb
inc
shlb
fdivrs
mov
rol
lods
enter
jb
mov
les
pop
mov
aam
push
push
inc
ljmp
mov
xchg
test
and
cmp
das
add
fsubr
into
adc
push
jb
mov
fisttpll
push
jge
mov
or
inc
dec
xlat
out
adc
or
sbb
in
dec
outsl
into
das
arpl
mov
jge
out
negl
pop
sub
pusha
inc
mov
out
sbb
int3
test
mov
loop
inc
xlat
xchg
insb
and
pop
in
xchg
or
and
pop
adc
int3
pop
sbb
int
pop
inc
js
mov
std
popa
inc
lea
mov
jae
or
cmp
mov
adc
adc
mov
jmp
mov
xchg
mov
mov
aas
sahf
aaa
jge
jb
pop
aas
mov
daa
xlat
ficoml
sub
cmp
or
mov
in
mov
xchg
negl
into
or
mov
pop
out
xchg
dec
and
dec
mov
fwait
jmp
xor
push
stc
popf
and
cwtl
dec
test
and
shlb
pop
enter
push
aam
push
dec
cmp
por
gs
lahf
xchg
jno
pusha
fs
imul
fstl
lret
jo
adc
lods
movsl
cs
add
andl
pop
mov
cltd
pop
dec
icebp
adcb
out
mov
pop
mov
clc
mov
jo
xor
mov
es
sbb
xchg
testl
scas
mov
inc
adc
mov
xor
or
push
sbb
inc
pusha
sbbl
gs
notl
int3
and
clc
das
xor
sub
loope
sbb
jnp
mov
bound
adc
xchg
mov
xor
add
push
jnp
lea
imul
call
daa
cwtl
sub
sbb
enter
dec
cmp
lods
jno
aaa
sub
xor
add
adc
or
repnz
jae
push
lret
xchg
and
push
sbb
lods
xchg
std
push
cmp
loopne
sahf
pop
sbb
imul
enter
push
call
aaa
imul
leave
dec
xchg
lahf
rep
push
or
sahf
add
loopne
arpl
xchg
add
push
mov
xlat
or
lahf
fstpt
mov
jmp
and
dec
test
cwtl
mov
enter
jnp
add
daa
adc
insb
stos
sbb
daa
lcall
daa
push
pop
xor
jae
inc
add
bound
sbb
addb
xor
xchg
mov
addl
and
ficoml
inc
cmpl
mov
xor
xchg
aas
ljmp
gs
andl
jae
xor
outsb
repnz
lods
icebp
ljmp
inc
xor
and
xchg
lock
sbb
movsb
mov
mov
inc
enter
xlat
aas
test
xor
ficomps
call
in
jo
jne
add
shrb
in
mov
fbstp
push
daa
sbb
cmpsb
sub
lcall
push
inc
loope
adc
jmp
pop
sbb
push
mov
mov
and
jb
scas
pusha
daa
daa
in
xchg
mov
cmp
xor
xchg
clc
xor
addps
jae
or
add
jg
adc
mov
xchg
mov
and
in
aas
idiv
jo
pop
arpl
mov
mov
inc
dec
fxch
out
dec
pop
mov
movsl
cli
add
pop
sbb
sub
cmp
sbb
or
jmp
and
push
sub
fdivl
std
jp
xor
push
push
shlb
mov
cmp
adc
aad
sub
sti
mov
mov
rorl
add
push
das
xor
mov
leave
fcoms
adc
cld
fidivrs
rclb
push
je
ret
into
rolb
xchg
je
aas
xor
jp
rcrb
fistl
push
xchg
hlt
mov
lea
ret
test
popf
out
fwait
mov
fbstp
les
cmpsb
or
inc
imul
inc
cmp
sbb
lods
sbb
in
or
in
loopne
rcrb
mov
mov
jae
arpl
in
sbb
fs
mov
leave
neg
lods
negl
aam
add
int3
fstpt
mov
cwtl
popa
arpl
inc
or
les
add
ret
fldl
lret
xchg
lods
mov
mov
sub
dec
aas
or
mov
inc
js
push
xor
inc
cltd
mov
repz
mov
or
or
outsb
jg
movsb
mov
and
adcb
pushf
call
push
push
cmp
insb
or
ret
pop
insl
adc
adc
xor
das
imul
sbb
inc
int3
out
mov
ljmp
ss
popa
out
fadds
add
inc
sbb
mov
jle
ret
scas
add
ficoms
cmp
dec
icebp
mov
and
iret
into
movsb
mov
fisubrl
scas
add
add
add
xor
mov
or
movsb
jle
dec
jecxz
push
cmc
arpl
cmp
in
out
cmp
sbb
test
out
xchg
push
xor
das
cmc
shll
rcr
ret
adc
mov
adc
and
xchg
add
cwtl
dec
pop
in
outsl
xchg
pop
bound
push
test
pop
jle
mov
popf
mov
mov
les
lahf
add
jg
or
fimuls
inc
ret
and
adc
int
fisubrl
push
bound
arpl
push
lds
push
cli
xchg
mov
in
pop
mov
dec
add
inc
sub
cmp
lahf
push
adcb
push
lods
movl
cmpsl
add
enter
aas
out
loopne
adc
je
inc
push
or
xor
adc
jne
rcrb
ret
push
ror
mov
rcrl
bound
ficomps
xor
xor
xchg
push
add
out
rclb
arpl
lcall
mov
add
scas
push
mov
xchg
movsl
loope
movsb
insl
inc
ror
sbbl
or
dec
lock
xchg
sbb
ret
xchg
ss
stos
and
jno
add
push
jecxz
repz
xchg
stos
in
js
outsl
push
outsl
nop
imulb
add
cmpsb
loop
pop
enter
int
mov
add
dec
dec
daa
iret
or
add
cmp
jne
das
xchg
mov
jne
ret
inc
test
enter
addr16
lahf
out
pop
dec
jle
adc
outsl
or
ret
mov
cmp
ret
jg
imul
jg
add
movsb
sub
in
adc
push
sub
scas
es
xchg
and
add
movb
push
aad
inc
int
addl
stos
cli
lcall
mov
cli
add
add
lea
jb
fdivl
enter
adc
cld
jg
test
jns
fldcw
push
push
or
cmp
dec
syscall
mov
jle
jecxz
xorl
insb
sahf
or
lea
jl
sub
push
push
push
mov
adc
mov
adc
mulb
mov
insl
add
test
outsb
aam
mov
repnz
xchg
outsl
outsb
call
lods
and
push
out
adc
sub
out
ds
les
adc
je
jmp
loop
nop
jle
popf
mov
cmpsl
or
cwtl
fwait
mov
jns
sub
nop
add
outsl
sahf
or
addr16
add
das
inc
xchg
insb
jmp
mov
ja
and
daa
sub
pop
ret
adc
test
inc
ljmp
lds
mov
push
popa
aas
cmp
add
dec
call
jl
stos
mov
cmp
mov
aad
call
mov
sbb
insl
in
out
jecxz
hlt
adc
shl
xchg
and
jbe
in
test
xor
rol
arpl
xchg
lahf
xchg
mov
push
lcall
cmp
fisubrl
mov
inc
add
js
sbb
aaa
movsb
xchg
jl
xchg
dec
cli
sub
jno
mov
adc
in
jns
sbb
sbb
jns
test
test
pop
push
imul
or
andl
xlat
cltd
pop
andl
pop
dec
cmp
fildl
lahf
scas
mov
mov
mov
in
cmpsb
jge,pt
xor
mov
pop
adc
push
mov
out
inc
aad
test
pop
shl
repnz
add
rcrb
fdivs
movsl
mov
insl
pusha
sbb
xor
cmp
flds
mov
sbb
dec
or
adc
mov
lahf
push
cwtl
lret
sbb
ljmp
or
push
xor
sbb
xchg
dec
stos
pop
jge
sbb
leave
ds
popa
sub
ljmp
jle
aas
dec
outsb
and
ret
jo
sarb
enter
push
subl
jo
in
stos
sti
ds
stos
sub
out
sub
fldcw
loop
fwait
dec
in
aad
mov
and
dec
or
hlt
pusha
push
das
fldt
dec
imul
out
aaa
push
mov
lret
shlb
imul
sbb
sbb
or
nop
and
add
sti
test
aam
aaa
sti
outsl
mov
xchg
xor
dec
or
andl
and
pop
push
mov
push
stos
and
loopne
or
test
enter
ret
je
lret
add
call
cmp
in
add
sbb
push
push
and
sbb
in
push
or
pop
nop
sti
jno
or
popa
aad
es
jge
rol
push
lret
inc
or
cmp
jnp
pop
lods
or
nop
add
lcall
stos
push
adc
adc
dec
sbb
out
or
dec
or
dec
ja
jmp
fistl
mov
in
arpl
xor
cmp
mov
inc
inc
lcall
xor
or
out
jle
jne
push
xor
xchg
cmp
imul
xchg
xlat
aad
add
ja
mov
jae
sub
mov
mov
mov
dec
push
xchg
xor
xchg
mov
dec
add
stos
ljmp
sbb
mov
ret
subb
push
and
push
pop
jle
popf
repnz
repnz
shl
movsb
mov
xchg
and
nop
jmp
dec
mov
jecxz
lea
imul
mov
inc
in
sub
push
scas
and
jmp
jnp
ret
dec
mov
mov
fnstsw
test
push
test
mov
push
jle
jnp
movsl
mov
decb
rorb
in
dec
fwait
mov
dec
xchg
mov
js
mov
dec
mov
sub
test
push
clc
les
cmc
test
push
addr16
sti
jbe
bnd
dec
push
xchg
sub
into
lds
leave
les
in
mov
adc
out
or
leave
scas
enter
sarl
adc
mov
sub
ss
scas
push
jno
sub
outsb
pusha
mov
dec
fidivl
mov
jb
lds
repz
mov
stos
fidivrs
sbb
and
add
scas
mov
mov
jle
loopne
adc
sub
ss
nop
repnz
enter
sub
mov
sahf
push
sub
adc
mov
jne
adc
inc
ret
xor
pop
jne
xchg
cmp
movsl
xor
popf
pop
cmp
test
mov
xor
dec
mov
nop
sub
pop
xchg
scas
xor
js
xchg
xchg
push
imul
repnz
cmp
in
xor
mov
fs
cld
inc
inc
test
outsl
in
xchg
jl
push
jle
lods
adc
sub
cmp
popa
xchg
mov
dec
and
cmc
shrl
add
lcall
mov
and
inc
pop
cld
pop
dec
push
pushw
insl
xchg
xchg
hlt
pushf
out
xor
test
mov
cmc
sub
mov
add
xor
lods
dec
sbb
jbe
in
pop
push
sub
pop
and
jge
mov
ss
popa
mov
cwtl
pop
insl
movsb
test
and
cmp
mov
mov
stc
outsl
mov
ss
lods
imul
push
sbb
test
imul
int3
or
repnz
repnz
xlat
ds
pop
ss
inc
dec
push
ret
into
jge
sub
cmp
mov
push
movsl
ljmp
sarl
lods
add
cmpb
out
jle
adc
jne
mov
ljmp
shrl
adc
pop
mov
jnp
xchg
aas
xchg
mov
addl
push
mov
out
jb
or
in
cmp
mov
clc
shlb
insl
loop
movsl
dec
mov
or
orb
out
add
xchg
sbb
and
lods
clc
jns
fxch
pop
call
jge
mov
sbb
mov
push
movsb
movsb
ret
lock
or
in
cmovnp
bound
xchg
addl
cld
popf
adc
push
sbb
dec
mov
hlt
lcall
xor
sbb
and
jmp
xchg
mov
jnp
add
jecxz
mov
mov
xchg
sbb
or
les
and
fmull
in
sub
popf
lret
rorl
jno
mov
pop
cmpb
dec
in
xchg
lock
xor
add
inc
and
rcrl
out
nop
pop
lret
aam
xor
jg
push
sub
cmp
mov
xor
cli
mov
lods
roll
xor
and
js
hlt
push
jge
imul
or
pop
push
cmp
out
sub
inc
mov
mov
mov
sub
lret
ror
push
mov
mov
cmc
add
cmp
mov
mov
or
add
jmp
arpl
and
idivb
pop
popf
andb
cmp
cmc
pop
movsb
push
testl
popa
adc
cmpsb
stc
mov
mov
or
fwait
mov
stos
iret
or
mov
test
mov
adc
in
push
loop
mov
std
jo
push
fucomi
and
lods
fcoml
adc
cld
aam
pop
fbstp
out
jnp
pop
xchg
mov
dec
or
pop
xchg
pop
addr16
pop
aad
popa
and
add
adc
push
negl
aaa
fldl
sbbl
mov
sbb
ss
pop
mov
mov
loop
icebp
leave
scas
rcrb
mov
push
js
addr16
xor
xchg
ror
shlb
mov
cmpsl
lea
cs
adc
add
cmp
jbe
jns
add
out
or
lods
test
icebp
mov
add
or
les
dec
test
dec
pop
pop
fsubl
pop
adc
in
mov
mov
pop
jp
xor
add
xchg
testb
subl
and
addb
mov
loop
or
gs
outsl
cmpb
xlat
mov
adc
into
sub
gs
jb
sub
sbb
dec
sbb
out
movnti
fs
lock
negb
lcall
push
jb
jp
fcoml
xchg
cmp
mov
jg
inc
or
insb
sbb
test
rcrl
push
pop
push
dec
test
pop
cwtl
lahf
adc
cltd
daa
test
rol
addr16
dec
cmp
movsl
pusha
xchg
shlb
sahf
nop
lret
adc
ds
pop
mov
or
mov
sbb
mov
stos
cmp
cs
lock
pop
nop
out
mov
sub
sahf
cmp
popf
push
jae
pop
pushf
cli
mov
sub
push
jae
int
daa
jp
xor
stos
clc
incl
fs
gs
out
daa
sub
cwtl
and
icebp
inc
cld
jne
mov
sbb
nop
gs
fsubrs
fcompl
cmp
leave
dec
fistpll
xchg
xor
rolb
pop
pop
and
call
loope
and
lods
ret
addl
mov
push
ret
test
les
in
xchg
push
fbld
sub
daa
int3
fiadds
add
mov
mov
cmpb
hlt
mov
lds
imul
xor
movsl
stos
push
cmc
mull
das
aam
mov
outsl
fldenv
xlat
push
cwtl
jl
and
add
xchg
or
inc
xchg
orb
lcall
test
add
mov
dec
jne
cmpl
pop
mov
add
cmp
imull
je
xchg
mulb
iret
mov
push
rcll
inc
ljmp
xchg
xchg
xchg
xor
sbb
adc
or
sbb
div
je
out
adc
jge
ss
dec
lret
push
js
ljmp
sbb
xor
pop
jg
popf
jl
in
lds
imul
mov
push
jle
cli
ss
call
in
je
and
jge
es
dec
or
mov
pop
and
xchg
popa
cmc
ljmp
es
andnps
jp
fsubl
inc
adc
dec
pop
push
mov
test
xchg
sub
or
loop
imul
and
lret
mov
hlt
xchg
outsl
fiaddl
push
pop
or
cli
lea
iret
lcall
mov
cmp
jle
adc
mov
xchg
cwtl
and
adc
data16
sti
lea
js
popa
add
call
push
out
iret
pop
out
sar
mov
test
mov
out
sbb
out
imul
and
sbb
and
popa
xor
pop
add
inc
adc
in
aaa
push
or
addr16
sbb
mov
dec
stos
or
mulb
inc
psubq
fldcw
mov
cmp
ds
fwait
into
mov
test
pop
pop
cmpsl
sub
imul
mov
popf
lahf
or
dec
iret
and
xchg
adc
pshufw
pushf
sahf
aas
cmp
test
ret
push
xchg
cmp
adc
pop
jmp
cwtl
cmp
sahf
pop
cmp
out
dec
inc
cmp
jp
jo
push
or
mov
movsl
scas
jne
xor
cmp
mov
test
mov
xlat
or
jb
jns
push
jns
jno
dec
iret
or
aas
sbb
out
mov
xor
pop
pusha
gs
test
dec
push
jl
and
idivl
outsl
outsb
or
mov
pop
sbb
mov
mov
jge
mov
std
mov
sbb
repnz
subl
aas
pop
inc
loope
cmp
sbb
dec
imul
arpl
outsl
test
into
test
pop
ljmp
test
adc
nop
fisubrl
es
xchg
sarb
ja
loope
insl
pop
inc
incl
sub
sub
inc
pop
insb
push
jo
aas
mov
cmp
adc
addl
lods
shlb
loopne
cmp
movl
jg
imul
xor
mov
out
add
repnz
push
mov
arpl
adc
jmp
mov
cmpsb
pop
mov
dec
in
xchg
adc
clc
push
pop
dec
xorl
test
or
pop
data16
and
stc
and
jecxz
sub
inc
jb
mov
lret
add
cmpsb
test
add
out
add
mov
mov
add
and
or
out
mov
in
repz
popf
mov
stc
inc
outsb
pop
ret
addr16
lret
mov
sbb
and
ljmp
mov
mull
scas
int3
lods
cmp
push
insl
loop
in
mov
loopne
jg
mov
or
mov
loope
jae
jmp
dec
push
ret
pop
ret
je
push
dec
xchg
fistpl
mov
ret
xorb
into
adc
add
lods
push
fwait
cmp
and
push
mov
out
xor
mov
sbb
cmp
out
or
adc
adc
or
sub
lahf
mov
xlat
inc
add
lcall
in
sub
mov
inc
lret
jg
fstpl
mov
andl
stos
xor
xlat
js
adc
jp
cmpsl
cmpsl
out
mov
daa
dec
mov
fcmovnu
mov
subb
lods
movsl
insb
cs
cmpsb
push
test
adcb
xchg
dec
popl
dec
mov
mov
dec
test
xor
je
cld
js
add
jb
fidivrl
shrl
jns
roll
and
lret
repz
mov
clc
lret
cmpsb
push
dec
add
or
out
add
je
jnp
push
sub
ret
jg
repnz
lahf
dec
nop
fstpt
ljmp
inc
mov
stos
movsl
pop
inc
clc
push
jnp
aas
loop
pop
inc
mov
pop
in
pop
addr16
test
movsb
shll
cmp
mov
xor
lret
test
ret
je
roll
push
cmp
les
mov
push
addr16
xchg
jg
test
jmp
sarl
rcl
mov
mov
and
jne
jmp
or
add
outsl
shrl
lods
xchg
out
mov
push
lea
pusha
or
adc
or
fidivl
ljmp
incb
mov
sbb
das
ror
or
mov
loope
ficomps
lods
pop
cmp
jne
ret
jne
xorb
cwtl
pop
loope
es
adc
push
dec
xor
sbb
stc
sbb
and
cmp
cmp
daa
dec
rolb
or
sbb
cmpl
orl
loopne
add
dec
lods
shlb
and
push
jecxz
fadd
mov
adc
cltd
popl
sub
push
out
lret
and
push
es
inc
enter
sub
es
jmp
js
add
sbb
stos
iret
ffreep
fmull
scas
xchg
popf
mov
mov
cmpsl
inc
dec
mov
xor
or
insl
xor
ljmp
mov
fnstenv
imul
daa
mov
cltd
shlb
dec
mov
mov
push
ss
xchg
imul
mov
insb
sub
loop
in
xor
dec
jne
aad
mov
shrl
xor
cwtl
mov
mov
push
div
pop
jns
xor
jo
sub
ds
cmpsb
clc
and
sbb
dec
push
in
dec
push
jge
push
cmp
xor
ret
cmp
or
xor
adc
movsl
or
ss
mov
lcall
daa
pushf
scas
mov
scas
call
jg
mov
dec
sbbl
dec
fwait
jge
loope
xor
stos
mov
pop
push
test
lock
cmpsb
jb
xlat
pop
inc
loop,pt
adc
jle
enter
mov
cltd
dec
insl
pop
lock
push
sub
js
xchg
dec
jb
jbe
sub
bound
jmp
jne
sub
fwait
xchg
shlb
in
sar
add
andl
push
rolb
or
ret
jo
test
mov
jo
lahf
in
sbb
lret
xor
or
cli
imul
mov
sahf
cltd
mov
mov
or
sub
push
or
add
xor
insb
jb
pop
jg
xor
js
aam
loop
loope
into
loope
mov
pop
addr16
lret
mov
sub
shrl
xchg
fs
xchg
sub
stc
ret
test
adc
gs
cmp
rcrl
xor
negl
pushf
cli
jl
dec
cmp
popa
cld
in
sub
sbb
lret
mov
data16
or
mov
jo
dec
insb
js
mov
loope
gs
xchg
sbb
mov
out
cmpsl
in
xchg
or
mov
scas
inc
cmp
cs
aas
sbb
mov
repz
mov
or
push
test
pop
cmp
sbb
dec
lahf
mov
inc
inc
or
sbb
xor
das
cmpsb
stc
sbb
in
pop
jp
icebp
mov
or
mov
pop
in
test
push
xor
jno
bound
repz
stc
hlt
sub
add
sub
ljmp
shrl
mov
ljmp
out
and
inc
inc
js
dec
pop
pop
inc
xor
mov
das
and
mov
jnp
aas
xor
push
insl
out
pop
ds
jecxz
pop
bound
add
mov
daa
jae
insl
and
or
sahf
cwtl
ss
aaa
mov
add
cmc
adc
and
aad
adc
jecxz
fcompl
lods
repnz
movb
cmp
cwtl
push
in
mov
loopne
sub
aad
or
sbb
sbb
addr16
outsb
jnp
out
ljmp
inc
shll
jge
jg
inc
popa
test
xor
popf
inc
dec
xchg
fwait
pop
incb
push
fisubrs
fmul
nop
addl
mov
xchg
dec
or
mov
pushf
mov
add
pop
fistl
cmp
stos
testl
dec
and
inc
js
pushf
or
cli
es
pop
push
ja
js
sarb
inc
outsb
xchg
sub
in
jge
ja
add
cmova
in
out
mov
hlt
or
pop
pop
sarl
aam
pop
xchg
or
ret
mov
imul
xor
lcall
push
sub
mov
arpl
sbb
or
fucomi
pusha
xor
data16
cld
loopne
xchg
jae
and
mov
jnp
mov
pop
sbb
cmp
cli
insl
xchg
jmp
jno
fistps
andl
out
cmp
aaa
iret
fisubl
repnz
dec
scas
dec
jp
add
push
jle
pop
fwait
lret
aam
fisttps
dec
xor
fdivrs
popa
mov
sbb
push
pop
or
cltd
push
mov
jge
inc
loopne
dec
mov
push
cmp
out
push
mov
cmp
inc
or
enter
adc
scas
fwait
leave
adc
xchg
add
clc
stos
loope
cmpsb
push
sysexit
or
iretw
movsl
aad
and
push
out
xchg
sub
pop
sbb
cmpsl
mov
push
pop
inc
lahf
jge
mov
icebp
movsb
xchg
inc
ffree
mov
mov
adc
cmpsb
loop
loop
ds
das
pop
jle
dec
cli
movsb
cmpl
cmpsb
adc
jmp
inc
sub
test
rcrl
push
dec
push
imul
dec
aaa
pop
cmpl
xor
fsubrl
call
xchg
sbb
lcall
scas
sbb
das
shlb
aam
cmp
in
pusha
rcrb
test
dec
les
test
xlat
popa
scas
cmp
addl
test
adc
inc
fisubl
push
and
xchg
inc
out
call
mov
sbb
sub
push
out
mov
xlat
es
mov
mov
jbe
jno
xlat
in
ret
mov
addl
arpl
push
decb
and
scas
mov
or
lea
sarb
and
mov
scas
pop
scas
jmp
movsb
ja
jecxz
stc
jae
pop
dec
pop
in
lods
jne
int3
pop
iret
cmc
call
jne
repnz
shll
ljmp
mov
add
adc
lock
daa
out
jl
mov
jle
dec
dec
xchg
inc
mov
cmpsl
mov
and
ds
enter
add
test
das
pop
dec
jno
cwtl
mov
sub
xchg
loope
or
rcl
mov
push
int3
inc
shl
bnd
popf
outsl
adc
sub
jns
and
add
fs
sub
or
mov
jecxz
js
sbb
cmp
sub
jbe
push
rorb
imul
mov
pop
daa
cmpsl
lcall
ret
sbb
xor
arpl
movsb
inc
cmpsl
mov
push
aam
and
push
test
mov
movsb
mov
xor
loop
jge
stos
loop
in
cli
popf
leave
or
enter
movsl
and
adc
into
stc
or
imul
and
xchg
mov
jmp
jmp
pop
imul
dec
in
jbe
or
mov
out
repnz
lds
mov
push
fnstcw
adc
scas
aam
out
jnp
xlat
sub
mov
mov
inc
jnp
and
push
xlat
sub
fcomps
roll
scas
jnp,pn
push
scas
fsubrl
in
repz
ficoml
stc
iret
push
sbb
pop
cmp
pushf
push
out
les
mov
cld
jg
insl
mov
fs
inc
xchg
test
cmp
inc
and
jge
inc
cld
add
fwait
cmp
mov
push
out
mov
cmp
inc
call
decb
push
lock
sbb
inc
mov
test
jne
push
sub
sbb
xor
and
fiaddl
mov
sub
lcall
mov
pop
jg
loopne
xchg
and
mov
cmpsl
ja
cmp
stos
out
cmpsb
and
push
mov
rcrl
fmuls
push
jl
repz
faddl
dec
or
data16
pop
test
adc
xor
mov
mov
inc
ret
leave
xor
mov
push
add
pop
scas
adc
mov
pop
testb
mov
out
in
or
arpl
out
and
jno
xchg
dec
add
rcr
xchg
sbb
mov
jp
jns
shl
ss
xor
fsubrs
lcall
loop
rcll
dec
icebp
movl
popa
leave
xchg
ss
aas
jl
jmp
jae
in
inc
neg
arpl
sub
add
fdivs
xchg
lret
xchg
repnz
cmp
jnp
and
jmp
mov
sti
mov
out
mov
cwtl
push
mov
lds
pop
or
mov
sbb
jle
call
adc
int3
roll
or
popa
lret
cltd
sbb
or
movsb
hlt
in
sbb
loop
movsb
sub
stos
out
dec
xor
pop
xchg
adc
or
inc
test
pushf
lahf
mov
stos
fisttps
sarl
in
cmp
out
cli
repnz
mov
into
scas
cmp
jge
hlt
mov
xor
in
punpckhdq
mov
mov
adc
movsl
sub
out
or
loop
mov
xchg
mov
pop
mov
fwait
xlat
mov
jmp
xor
jp
inc
mov
fcomps
outsl
sarb
mov
mov
mov
jg
scas
in
add
test
lret
push
bound
push
dec
cmp
scas
mov
loop
inc
ja
aam
mov
fildl
and
inc
gs
fbstp
js
cmp
sub
inc
mov
sbb
mov
mov
adc
mov
cmp
add
add
pop
adc
or
shlb
pop
dec
xor
paddsb
sbbl
test
lds
aaa
fldl
cmpsl
xchg
inc
js
fnstenv
cmpsl
xchg
dec
and
pushf
push
pushf
in
leave
in
loop
cmp
loopne
popf
cltd
sbb
imul
and
cmc
adc
pusha
les
pop
mov
xor
addb
js
fwait
inc
fcmovnu
jns
pop
jno
push
dec
and
xor
jmp
and
xchg
and
ret
inc
insb
out
and
mov
sbbb
mov
cmc
lret
xlat
out
shll
dec
dec
add
in
xchg
sub
outsb
push
adc
mov
push
or
mov
ja
test
cltd
mov
push
mov
and
jbe
and
lods
sub
xlat
cmp
leave
jb
ja
ror
scas
adc
outsb
mov
cmp
popa
jge
and
hlt
mov
sbb
sahf
push
lret
xlat
mov
xor
insb
jecxz
xchg
cmp
mov
gs
cmp
outsl
ss
xchg
pusha
jmp
push
aad
mov
repnz
lret
mov
pop
cmp
add
test
aas
inc
dec
adc
mov
aas
les
xor
add
jl
shll
fbld
loopne
push
mov
push
mov
je
dec
cwtl
pop
xor
push
mov
mov
sbb
btc
push
pop
inc
push
or
into
sbb
push
outsb
jno
xchg
loope
loope
jne
in
jnp
pusha
xor
xor
in
jns
xchg
or
aas
inc
rolb
xor
and
into
and
sub
lahf
pop
mov
add
jno
mov
punpcklwd
sbb
mov
imul
into
repz
ljmp
daa
mov
xchg
dec
lret
jge
stc
sbb
pop
sub
aad
dec
mov
adc
cmp
inc
imulb
and
xorb
jae
lods
inc
add
sti
mov
mov
cmp
je
mov
popf
adc
pop
mov
enter
add
repnz
lret
mov
cmpsb
adc
data16
and
mov
push
add
in
fisubrs
or
dec
push
dec
test
mov
imul
mov
mov
or
adc
dec
xchg
js
lods
sub
push
lea
cmp
enter
jb
subl
imul
sbb
mov
jge
push
mov
mov
pop
inc
outsl
lods
lods
mov
fs
xchg
sti
js
sbb
testl
xchg
sbb
sti
and
pop
fisttpl
popf
xor
mov
mov
out
sub
or
mov
adc
and
inc
data16
adc
ret
fistpl
roll
out
es
sub
dec
cmp
xor
lret
jae
out
jno
push
inc
mov
sub
out
movsb
cs
arpl
ja
push
cltd
jne
jecxz
arpl
mov
or
mov
notb
aam
xchg
ljmp
push
cmp
push
stc
in
pop
clc
push
xor
jp
adc
cmp
push
addl
punpckhwd
sub
xor
push
mov
mov
iret
inc
cwtl
mov
add
adc
pop
cwtl
dec
test
cmp
mov
shrl
push
xor
pop
xchg
push
cmp
mov
rcrb
mov
mov
imul
xchg
out
adc
loopne
mov
jae
movsl
jae
mov
or
rorl
fnstsw
or
int3
lcall
mov
or
pop
inc
cmc
add
mov
or
in
add
jno
rclb
ret
repnz
sbb
pop
fwait
aaa
and
and
and
add
pop
ds
cli
nop
movsl
or
outsb
inc
inc
jl
adc
dec
sub
out
dec
shrb
push
fwait
daa
ret
add
movsb
xchg
iret
into
jmp
and
jecxz
pop
push
push
stos
inc
push
pop
dec
mov
cmpl
aad
clc
pop
das
inc
testl
pop
pop
jno
mov
sub
jns
mov
cmp
mov
lock
jp
xchg
push
dec
sbb
xor
mov
add
cmpsb
repz
test
call
in
in
into
pop
xchg
int
jle
push
lret
dec
lock
test
xor
outsb
es
insb
fnstenv
test
jl
mov
cmp
mov
repz
sbb
push
and
cmpsl
xchg
jae
lret
aas
mov
jbe
mov
add
adc
ja
cmp
lahf
cli
std
ja
in
and
sub
outsl
push
jmp
jbe
iret
jecxz
lods
sbb
sbb
jbe
ror
xchg
repnz
jg
popa
adc
sti
jge
dec
jl
pop
loopne
int3
inc
push
dec
nop
hlt
jb
sbb
add
push
nop
cmc
fsubrs
adc
js
std
adc
out
gs
shll
aas
xor
aam
dec
stc
or
and
aaa
clc
pop
jnp
cld
out
popf
stc
iret
out
shlb
inc
xor
cltd
and
negb
jnp
jge
gs
outsb
jns
leave
xorb
jno
mov
push
fldpi
mov
aad
testl
mov
pop
adc
shrb
addr16
add
push
pop
inc
fidivrl
imul
sbb
push
fwait
cmp
popa
push
jb
js
push
add
inc
inc
repnz
ljmp
inc
adc
jb
idivl
jae
mov
cmc
xchg
jp
push
popf
mov
mov
cwtl
enter
inc
sbb
push
sub
xor
mov
sbb
ss
loopne
leave
std
push
mov
cmp
jl
jbe
popf
jl
clc
jb
movsl
testb
mov
ror
in
or
adc
sbb
sarl
xchg
pop
int3
pop
mov
lahf
sti
jbe
leave
in
rcrl
sbb
lret
ficompl
jns
mov
cli
pop
rolb
cmp
sbb
les
dec
hlt
xchg
jl
mov
add
mov
jl
push
jle
loop
rol
jecxz
nop
pop
stos
adc
xor
lock
push
sub
jo
push
shlb
mov
ret
lock
pushf
pusha
mov
arpl
test
and
fidivrs
push
push
mov
inc
rcrl
test
loop
xchg
sub
stc
imulb
xchg
test
icebp
or
pop
jae
dec
aas
push
insb
fdivs
sbbb
daa
ret
pop
dec
lret
loopne
xchg
xchg
mov
and
dec
mov
pop
out
xor
dec
pop
mov
dec
orl
cld
sub
mov
cltd
imul
lock
mov
popa
mov
jns
xchg
xchg
in
cmp
cmpsl
push
ds
cmpsl
or
mov
fcoml
sub
cmpb
inc
jne
aas
imul
ja
xchg
adc
fwait
test
jbe
adc
xchg
lds
add
jmp
ss
lods
or
jns
cmp
pusha
inc
push
pop
test
or
roll
sbb
aam
in
sarb
mov
xchg
mov
adcb
inc
xor
iret
or
stos
mov
xor
repnz
sbbl
js
pop
sbb
aas
pusha
xor
orb
test
push
gs
pop
test
roll
pop
imul
hlt
ja
add
rcll
iret
imul
jmp
sbb
push
dec
mov
pop
xchg
mov
mov
add
xor
mov
popf
imul
push
outsb
pop
rcll
lods
xchg
push
pop
or
and
add
popf
jns
push
pop
loop
xchg
and
icebp
cmp
icebp
push
inc
loopne
fwait
aam
or
aad
shll
add
mov
divl
and
stc
faddl
or
pop
adc
mov
lahf
inc
mov
lret
lcall
cmpsb
adc
ret
add
repz
stos
lcall
fldt
cmp
cltd
xor
jae
sbb
mov
imul
sbb
xchg
push
mov
cmpsl
cmp
dec
pop
mov
push
aad
and
insb
xor
rcrb
sbb
in
sub
lahf
fsub
jp
cs
negl
pushf
lods
loopne
mov
xchg
loop
jg
inc
test
add
dec
mov
repnz
ds
rclb
xchg
pop
pop
test
mov
out
lock
leave
sbb
js
scas
and
lods
push
pop
outsb
or
fisttps
mov
mov
and
mov
inc
cmpsl
xchg
cmp
ljmp
jmp
jno
adc
int
popa
push
in
xchg
jle
xchg
mov
push
stos
mov
inc
sbb
out
fsubrs
insl
mov
pop
cwtl
dec
mov
ret
mov
push
lcall
negb
push
imul
cmp
testb
pop
test
fadd
cmc
add
aaa
cmpsl
xchg
pusha
mov
mov
mov
mov
loope
add
gs
xor
gs
jp
loope
mov
cmpsl
mov
push
in
movsl
mov
jmp
inc
push
cli
loope
loopne
push
dec
jmp
insb
movsb
scas
adc
cmp
pusha
jg
jne
fs
subb
inc
aad
loope
sarl
dec
mov
cmc
out
pop
addr16
dec
fs
rorb
repnz
mov
jno
jbe
xchg
repz
ljmp
xchg
mov
fstpl
sbb
decb
iret
loop
insl
fwait
jo
cli
sub
jl
jno
stos
arpl
test
and
les
gs
adc
or
add
dec
or
fnstcw
movb
pop
push
and
jne
incb
ret
stos
rcl
fwait
out
into
xchg
mov
inc
mov
mov
and
lcall
hlt
jp
xor
sub
mov
int3
ret
adc
mov
xor
pop
sub
xchg
mov
xor
and
inc
fistl
aas
adc
mov
dec
jle
dec
daa
mov
dec
jmp
lret
jp
xor
insb
and
cmp
lods
jno
pop
adc
jne
pop
or
mov
or
sub
fistpll
test
sbb
dec
sti
repz
cs
xchg
cmp
adc
icebp
movsl
data16
andl
cld
popa
pop
addr16
sti
addl
popf
sub
mov
jo
dec
shrb
pop
outsl
sar
mov
dec
aad
popf
jnp
mov
fisttpll
mov
mov
fnstcw
std
cmp
cmp
jno
xor
aad
mov
incb
fdivr
aas
mov
cld
inc
bound
in
pop
iret
lahf
inc
cmp
idivb
xchg
stos
mov
outsl
pushf
jno
das
fwait
xchg
loopne
imulb
out
sub
cmp
fwait
loop
cmpsl
cltd
repnz
clc
jnp
imul
or
gs
movsl
ret
mov
adc
rolb
sbb
mov
mov
stc
insb
dec
and
jo
dec
inc
cmp
out
jl
add
stos
and
mov
mov
out
dec
popw
sub
icebp
dec
cmovs
test
dec
dec
movsl
cltd
and
push
in
out
out
bswap
dec
mov
jns
cltd
adc
filds
andb
push
lahf
cmpsl
xchg
jo
shl
push
xchg
stc
rep
sbb
int
and
sbb
dec
xchg
in
ret
fildl
popf
dec
stc
addr16
out
mov
sbb
mov
cld
push
mov
or
or
and
mov
cli
adc
xor
stc
cmpsb
pusha
and
and
imul
add
or
mov
add
mov
mov
ja
stc
ljmp
pop
add
nop
fs
loop
inc
mov
lods
push
pop
jnp
adc
es
and
add
mov
dec
negl
cltd
mov
pop
xor
int3
js
add
ds
lods
icebp
ds
add
je,pn
cmpsb
add
out
xchg
sbb
jl
dec
jae
dec
mov
enter
jae
in
mov
icebp
push
pop
mov
orl
xor
sub
mov
filds
adc
cmp
jg,pt
dec
push
or
xchg
es
cltd
fs
icebp
push
push
push
sti
aad
addr16
xchg
push
xchg
stos
out
pushf
sbb
je
and
cmc
sub
lcall
push
jle
cs
push
pop
push
in
stos
push
test
mov
cmp
dec
in
movsb
adc
shll
lahf
jne
cmp
aad
or
jno
rorb
inc
jmp
orl
int
push
scas
dec
sar
xor
cld
imul
mov
sbb
push
or
repz
shrl
cmpl
mov
pop
dec
mov
dec
cwtl
fwait
pop
add
mov
fcmovb
add
push
notl
test
fimull
stos
pusha
cmpsw
add
sub
xlat
push
in
sti
and
adcb
lret
sbb
scas
mov
sub
sub
inc
adc
cmp
jae
pmaxub
ds
inc
insl
push
test
pop
mov
mov
addr16
adcb
loope
movsb
sbb
cmp
repz
out
imul
aad
popa
je
arpl
std
aam
push
jmp
mov
leave
test
shlb
in
mov
fsubs
xor
movsb
repz
dec
dec
xor
call
and
push
pop
pop
cmpsb
xor
lods
dec
sub
inc
cmp
stos
and
stos
pop
push
clc
dec
xchg
ljmp
je
mov
leave
cmp
or
test
jns
inc
lods
leave
sub
inc
add
movsb
pushf
test
mov
test
xor
dec
loop
adc
jo
jnp
scas
insl
add
lods
andl
cmpsl
adc
enter
and
inc
ror
scas
mov
data16
mov
cltd
or
int
shrl
arpl
adc
sbb
imul
cmp
mov
imul
aas
pop
jge
mov
test
loopne
lea
mov
mov
inc
push
movsb
xor
pop
into
xchg
sub
lds
lcall
cwtl
xor
mov
cmp
fbld
inc
dec
adc
sbb
cmp
popa
push
ret
call
add
jp
xchg
loop
mov
sbb
out
mov
sub
add
das
xchg
mov
dec
or
bound
lds
mov
mov
daa
mov
call
pushf
jp
sub
dec
mov
and
aaa
test
mov
jl
ret
xlat
rcrl
rol
jbe
sub
xchg
inc
push
push
or
ljmp
push
fisttpl
dec
call
cmp
mov
dec
xor
mov
inc
pop
dec
ja
cmp
pop
stos
dec
pop
mov
add
sahf
shrb
or
mov
mov
imul
pop
sbb
fnstenv
lds
stc
das
cmc
rcll
lahf
iret
cmp
ret
cmpxchg
xor
mov
in
mov
fs
sarb
mov
in
or
movsb
pop
push
xor
xchg
xor
push
mov
xchg
rclb
shlb
fdivrl
xchg
adc
fisttpll
cmp
sub
ljmp
jle
inc
pusha
stos
cwtl
in
stos
cmpsb
stc
pushf
lret
jno
adc
mov
xlat
test
push
shrl
sub
dec
in
daa
mov
inc
and
sub
inc
clc
test
cmp
sbb
push
add
pop
xchg
loop
mov
loope
in
movsb
call
imul
pop
jp
sbb
inc
fists
mov
pop
dec
xchg
cmpsb
push
push
push
push
cmp
cmpsl
shr
lea
inc
inc
ljmp
es
mov
mov
sbb
imul
add
sub
js
jne
and
mov
mov
and
pminub
push
lahf
or
mov
fxch
popf
in
cmpsb
aas
roll
jmp
pop
jno
int
imul
add
lcall
loope
hlt
push
fildll
or
ret
xor
pop
adc
popf
orb
add
int
fstpl
mov
addr16
sbb
mov
cltd
fcmovnu
shl
lds
insb
dec
cmp
mov
mov
push
fmul
adc
jmp
push
xchg
loopne
js
xchg
mov
pushl
jge
ret
es
sbb
fdivrs
ret
outsb
mov
das
rcll
imul
ja
je
or
orb
std
pop
aas
adc
inc
lcall
lret
pop
pop
lret
rclb
push
ja
into
das
mov
movsb
adc
inc
sbb
lds
scas
sbb
mov
ror
stos
sub
sahf
into
repz
xlat
fidivl
pop
cmp
ja
push
push
sahf
mov
mov
xor
popf
push
subl
dec
jae
out
mov
arpl
jmp
cwtl
jb
pop
or
add
mov
push
test
lahf
stos
repz
lods
sbb
mov
mov
jne
addr16
mov
mov
sar
push
mov
test
dec
das
mov
data16
adc
pop
dec
imul
mov
jp
mov
jmp
jno
aas
jns
inc
mov
push
ljmp
sti
arpl
js
loop
jo
aam
in
dec
lods
roll
pop
lahf
out
lcall
mov
jno
test
hlt
popa
xchg
mov
and
mov
xor
std
push
sbb
jbe
xchg
xchg
fcomp
xor
sahf
jp
test
js
pop
jle
sub
arpl
jp
test
pop
inc
mov
adc
mov
repnz
inc
stos
mov
pop
or
repnz
add
test
push
pop
arpl
stc
cwtl
inc
fcomps
dec
scas
cmpsb
push
lahf
cmp
pop
push
cmp
jbe
lods
lahf
mov
addl
cmpsl
sub
mov
pop
sahf
gs
push
sbb
cmpl
jae
pop
dec
inc
pop
sbb
cmp
mov
xchg
pusha
inc
pop
shld
cmc
adc
es
pop
lret
sbb
or
pop
pop
in
push
sub
mov
push
mov
scas
les
imul
push
movsl
dec
push
les
ficoms
rcll
sub
add
imul
jns
sub
xchg
or
repz
push
add
imul
sbb
das
loop
pop
lahf
inc
mov
out
fcomi
outsb
jmp
cltd
push
insl
idiv
scas
push
push
lahf
scas
push
ljmp
sbb
add
clc
add
mov
sub
cmp
loope
pop
out
mov
jbe
arpl
cli
add
movsb
adc
jmp
lret
stc
adc
sub
jae
mov
gs
pop
gs
js
xor
test
add
adc
mov
add
insb
xor
adc
fistpl
jecxz
cmpsl
cmpsl
cmp
and
inc
push
sbb
pop
fmuls
aad
mov
cld
and
add
add
ret
pushf
cmc
mov
pop
xor
scas
xor
ja
faddl
int
mov
mov
in
iret
inc
ss
fstpt
cmpsb
ret
faddl
dec
loopne
fsubs
fistpll
ror
rcl
gs
jl
push
xchg
mov
jno
fsts
fisubs
in
fmul
fwait
add
jg
mov
fcompl
xchg
mov
cmpsb
stc
inc
mov
scas
outsb
out
xlat
adc
ret
fisttps
cmp
push
call
mov
inc
pop
je
mov
daa
jecxz
sarl
xchg
jbe
std
lret
test
divl
push
sub
lods
das
jle
leave
and
jnp
call
bound
jge
daa
push
test
xchg
in
lods
mov
mov
xchg
jle
lret
mov
int
sub
daa
push
xchg
jo
pop
inc
add
dec
dec
mov
dec
pop
xchg
std
ljmp
adc
out
xor
hlt
mov
popa
cmp
dec
add
jge
push
adc
sarl
xchg
sbbl
shrl
outsb
mov
xor
outsl
jae
cmp
enter
inc
fst
mov
dec
imul
rcr
hlt
pop
sub
ja
data16
mov
dec
xor
insb
aad
cmp
and
imul
or
xchg
lea
mulb
cmp
sub
lahf
inc
mov
movsl
test
jae
je
adc
lods
mov
fnstsw
lods
jecxz
inc
inc
push
mov
xchg
xor
add
mov
and
sub
xchg
sub
mov
iret
stos
or
gs
inc
jo
in
jbe
or
fdivrs
ljmp
call
mov
int3
mov
sub
push
sbb
js
cs
sbb
or
mov
lock
ret
sbb
and
cs
sbb
out
cmp
imul
outsb
xor
pop
push
jl
ret
push
sbb
pop
add
fmuls
hlt
es
pop
mov
sbb
stos
sub
fisttpll
dec
mov
stc
repnz
in
faddp
push
imul
mov
add
popa
imul
je
ljmp
iret
mov
add
cs
icebp
cmp
lcall
add
pusha
pop
ret
rolb
sarl
loope
test
roll
add
sar
dec
out
cltd
jns
cmpsb
les
cmp
repnz
cltd
popa
mov
js
cld
xchg
add
or
pop
frstor
lahf
repnz
add
or
push
cmc
xchg
xchg
cmp
aam
daa
int
jne
mov
in
enter
adc
dec
xor
dec
call
sbb
inc
nop
js
aad
sahf
lods
dec
fisttpl
and
mov
pop
and
jne,pn
addb
inc
jo
pop
lcall
movl
mov
hlt
dec
push
repnz
sahf
add
push
loope
in
sub
sub
xor
mov
stos
add
dec
in
lods
clc
pop
push
xchg
jno
sarl
jl
mov
mov
jl
lret
icebp
adc
xlat
imul
jle
push
xor
loopne
cmp
pop
lds
imul
and
add
int
cmpsl
xchg
add
mov
inc
test
ss
fimuls
sub
fiadds
sub
mov
pop
xchg
jnp
out
iret
inc
clc
js
and
movsl
movsb
adc
ljmp
ficoml
test
fsub
movsl
mov
ljmpw
push
or
dec
in
xlat
xor
stc
cmpsb
fidivl
xchg
push
ret
daa
mov
ss
sbb
and
stos
sub
pop
out
push
in
int3
call
jae
or
pushl
inc
popf
jl
fstps
rorl
jo
mov
pusha
xchg
or
mov
lods
xor
out
pop
xchg
xlat
jbe
loope
ja
leave
xor
dec
es
in
pop
xlat
push
sub
pop
mov
in
into
cmpsb
loop
mov
clc
push
divb
vpaddb
xor
mov
sbb
dec
jne
loop
in
jp
mov
ret
dec
add
adc
and
push
rcrl
inc
adc
adc
xchg
mov
adc
mov
addr16
sub
jg
int
push
popa
mov
inc
sbb
test
gs
inc
int3
fisttps
daa
inc
sbb
push
jne
dec
in
mov
push
lcall
pop
lods
jne
leave
pushf
mov
jo
data16
or
cli
pop
and
mov
iret
sbb
cmpb
pop
negb
mov
add
shll
add
mov
xor
aas
mov
mov
fidivs
jno
cltd
shl
dec
into
fstl
mov
scas
aam
sub
mov
xor
out
add
jno
and
cltd
inc
cmpb
fdiv
cs
gs
out
ja
or
push
sub
and
pop
repz
dec
and
cld
lods
test
cld
daa
ficomps
push
int3
xchg
push
aad
int3
xchg
insb
inc
fcoms
xorb
pop
cltd
mov
enter
dec
mov
mov
dec
sub
repz
xchg
in
add
fs
pusha
addr16
cmp
fistpll
cli
out
idivl
pusha
mov
mov
mov
xor
shll
pop
jecxz
add
mov
daa
ss
add
push
inc
out
fbstp
mov
and
and
sbb
popa
or
lcall
push
insb
pop
sar
xchg
adc
push
jae
test
repnz
enter
rorl
inc
push
sahf
inc
inc
popa
movsl
outsl
sbb
lret
mov
xor
or
jb
scas
fnstsw
insb
jp
mov
or
mov
in
insl
out
idivl
insb
outsb
or
and
add
ljmp
clc
adcl
mov
jbe
repnz
inc
pop
cmp
addr16
sub
outsl
mov
add
or
push
sbb
xchg
test
std
test
add
lret
inc
rorb
xlat
cmp
icebp
insl
push
scas
je
or
and
dec
xchg
sbb
mov
addr16
sbb
jmp
dec
movsb
add
jecxz
mov
push
xor
scas
cmp
xchg
gs
mov
xchg
ss
adc
jge
adc
loop
ljmp
fdiv
adc
popf
push
in
sbb
sbb
insl
int
xor
lea
out
fwait
js
dec
lret
add
jmp
hlt
lret
scas
jp
outsb
xor
dec
movsb
jbe
inc
adc
movsl
dec
mov
lret
adc
mov
cmpsb
subl
out
cld
popa
push
fwait
pop
mov
bnd
mov
scas
pop
outsl
nop
dec
push
inc
lret
dec
or
add
movsb
aad
in
mov
nop
bound
xrelease
mov
mov
loope
aad
dec
fwait
mov
xchg
mov
sbb
negl
fidivs
icebp
push
test
add
push
ret
dec
xchg
test
ljmp
adc
fwait
inc
dec
inc
outsl
add
sub
cmp
push
cmpsb
xor
je
lds
pushf
in
ds
scas
pop
cwtl
inc
dec
xlat
adc
mov
mov
push
push
in
sbbl
or
ret
es
lock
test
and
sbb
push
clc
jecxz
or
int
iret
outsb
inc
fcom
out
aad
mov
inc
test
xchg
bound
sbb
mov
ret
pop
mov
jecxz
sbb
dec
jb
dec
xchg
sub
cmpsb
dec
pop
stc
mov
shrl
xlat
dec
int3
mov
loopne
sub
cmp
or
mov
mov
fdivrp
cmpsb
loopne
adc
fadds
shll
ja,pt
add
add
ds
sub
fsubrl
pop
pop
stos
xor
ficomps
out
push
daa
rorb
jbe
rorl
cmp
or
fsubl
sub
sbb
jle
cmpsb
lods
frstor
push
dec
jns
fcomps
inc
and
pusha
test
mov
dec
jp
cmp
lock
cmp
popf
into
scas
jnp
xchg
jg
bts
xchg
ljmp
xor
enter
add
cmpsb
sbb
sbbl
push
xor
iret
push
pop
mov
or
imul
movsl
lock
ds
test
in
inc
mov
mov
leave
or
enter
mov
jmp
jne
imul
lods
xor
inc
call
mov
or
fnstcw
aad
popa
xchg
insl
mov
and
adc
test
loop
and
push
aas
xchg
or
pusha
mov
int
dec
inc
std
or
test
mov
or
xchg
dec
dec
iret
cmp
rorl
repz
das
or
andl
cmp
jmp
dec
inc
push
loope
pop
mov
inc
and
ja
and
loope
ss
sbb
cmp
hlt
jle
jmp
push
mov
nop
shll
testl
dec
out
shlb
loopne
push
push
enter
test
or
cmc
divb
and
jmp
sub
outsb
jns
mov
adcl
in
cmpsl
movsb
icebp
cmp
pop
nop
mov
jge
or
cltd
inc
xchg
test
jg
adc
insb
sbb
xchg
mov
jecxz
push
pop
and
xor
test
faddp
mov
sti
repnz
mov
std
xor
dec
mov
push
or
es
pop
xor
and
cs
jmp
or
ljmp
popa
xor
inc
loopne
mov
or
pushf
mov
popf
daa
fsubs
sbb
jnp
outsb
dec
jle
iret
mov
movsl
mov
fisubs
shl
lret
cmc
inc
mov
aas
cmp
sub
adc
subl
imul
stos
outsb
jp
je
or
fwait
cltd
mov
sub
sub
adc
inc
dec
int
cmp
push
shlb
hlt
cmpsl
in
rcr
mov
cli
andl
es
pop
xor
testl
mov
ds
insb
cltd
lcall
inc
mov
fildll
aad
je
std
xchg
adc
enter
push
roll
out
jl
cli
fsub
sub
scas
cmp
push
adc
adc
cmpsl
js
pop
jae
scas
lods
ficomps
fmul
or
cmpl
mov
fcmove
add
rcl
push
xor
out
mov
add
mov
arpl
ljmp
mov
jecxz
ss
pop
jp
mov
repz
shr
loopne
pop
inc
push
xchg
inc
add
inc
ds
iret
fsubl
into
jmp
sub
dec
pop
les
pushf
xchg
pop
arpl
pop
in
insb
mov
inc
es
sbb
and
jb
out
outsl
jg
and
mov
sahf
lods
mov
outsl
mov
mov
andl
fs
or
add
cmp
cmp
pop
and
int3
in
jmp
jns
xchg
adc
sub
loopne
dec
clc
add
cmpb
mov
fisubrl
movl
mov
dec
popf
cld
xchg
rol
jo
and
dec
mov
test
mov
test
rcrb
fistps
out
xlat
andl
arpl
pop
sub
pop
pop
mov
mov
jne
sahf
into
cltd
adc
push
cmpsb
leave
lret
sub
sbb
xor
mov
negl
lret
adc
stc
popl
xchg
frstor
scas
xchg
pop
add
setg
pop
shrb
cmp
lret
add
push
mov
cmc
cmpsl
mov
jne
aam
movsl
push
push
aaa
sbb
add
movsb
clc
push
inc
cmp
mov
inc
test
pop
jl
mov
lahf
repz
cs
inc
xchg
hlt
and
ss
jge
and
popf
and
push
jg
mov
cmp
arpl
je
add
adc
stos
adc
pop
int
xchg
or
shlb
repnz
inc
inc
pushf
pop
sub
cmp
push
inc
or
sti
sub
arpl
les
pushaw
jne
loopne
ret
xchg
mov
adc
ljmp
jmp
push
sub
scas
inc
jbe
pop
mov
adc
movsb
push
jmp
cmp
icebp
lock
xchg
pmaddwd
test
daa
mov
mov
mov
mov
mov
jg
in
mov
shl
dec
fwait
outsb
or
cs
lods
scas
push
inc
sbb
fisubrs
dec
xchg
in
or
fsubrl
sub
adc
aaa
push
xchg
or
push
mov
jbe
sti
push
imul
arpl
movsl
leave
in
push
inc
shll
loop
adc
out
push
mov
cmpsb
pop
cmp
mov
scas
pop
rcrb
mov
and
add
divl
ffree
dec
fidivs
mov
dec
sub
add
test
lret
outsb
pop
call
jg
and
sub
mov
adc
cmp
cmpsb
pop
shr
inc
adc
cli
aam
xor
xor
aaa
or
hlt
xchg
mov
xchg
pusha
loope
stc
mov
rclb
adc
lock
and
in
lods
test
mov
xchg
cmp
sub
notl
xor
mov
ret
imul
int3
and
sub
xchg
push
fxch
stos
sbb
xor
rolb
divl
or
dec
into
jae
or
adc
cld
inc
add
or
mov
icebp
xor
push
out
mov
inc
pushf
ficoml
mov
mov
mov
imul
inc
jae
adc
ret
xor
and
mov
stc
jg
or
inc
insb
mov
movb
cmpsb
stos
sbb
push
pushf
das
rep
xchg
jecxz
test
es
pop
push
lret
mov
and
mov
ja
mov
scas
test
out
inc
js
ds
je
popa
js
push
jbe
addr16
shrl
rol
lods
jle
pop
push
add
pusha
lret
or
push
push
push
fildll
push
cmp
cmp
outsl
test
sbb
jecxz
setae
sub
pop
call
clc
dec
int
push
cmpsb
push
dec
ret
int
mov
addb
ret
jmp
test
mov
cmp
cmp
cmp
jmp
stos
inc
xor
jnp
in
call
cwtl
rorb
mov
out
pop
mov
lds
adc
call
mov
lds
push
or
adc
repnz
cmp
add
bound
cmpl
icebp
adc
sub
repnz
mov
sbb
xor
dec
sbb
sbb
add
mov
mov
ljmp
call
xor
jb
fs
repnz
inc
call
repnz
mov
push
sbb
sbb
dec
aad
push
in
sbb
shlb
inc
sti
stc
in
outsl
enter
mov
in
gs
adc
clc
sub
mov
fisubrl
push
mov
sub
inc
std
data16
hlt
clc
and
dec
shl
jge
xor
shlb
cmpsb
imul
push
out
pop
out
nop
xor
ret
rcl
cld
push
cli
sub
in
fnstsw
sbb
sub
enter
sti
icebp
rolb
or
and
mov
ja
dec
mov
adcl
add
xchg
or
add
imul
sahf
mov
loop
sbb
rcll
cltd
cmp
jbe
cmp
cmp
stos
xchg
lret
das
loope
xchg
mov
pop
fiaddl
sbb
outsb
dec
add
sbb
inc
shrb
or
es
cmp
jle
xchg
lds
push
hlt
fwait
push
subl
aas
pop
jge
cmp
sahf
push
arpl
imul
aam
cli
inc
push
mov
xchg
fisubrs
pop
push
fwait
jne
lea
mov
xchg
data16
jp
cwtl
test
cmpsb
sti
mov
in
aad
cmp
sti
xor
cld
testl
push
push
mov
or
jbe
push
bound
xchg
faddl
mov
call
push
xor
lret
mov
imul
inc
ds
sub
xchg
or
js
sbb
insb
lods
int
sbbl
loopne
cmp
cmp
dec
jg
in
jo
push
out
in
sub
mov
mov
sub
jg
ficoml
pop
or
push
inc
pushl
lcall
pop
or
imul
mov
rcrl
pop
cmpl
add
pushf
jns
lock
jle
into
lds
je
push
icebp
movsb
bound
aad
xor
loope
shlb
sbb
lcall
lahf
push
in
and
aad
out
fisubs
ljmp
sarb
mov
dec
jg
jns
mov
scas
test
frstor
shlb
xchg
scas
pop
test
jnp
mov
int3
dec
jecxz
pop
sbb
in
adc
xchg
ds
roll
sub
stc
loop
fdivp
sahf
ret
or
pop
sub
addr16
pop
cltd
in
aas
mov
fs
jb
push
pop
adc
mov
lock
dec
jecxz
xchg
les
push
movsl
cmp
out
pop
test
iret
xor
dec
in
lcall
sub
sbbl
stc
mov
das
push
ror
fisubs
out
dec
aaa
dec
fidivrs
out
lods
sub
push
xchg
xchg
mov
std
xchg
ret
jns
outsb
cmp
adc
and
je
fimuls
es
sbb
inc
xor
add
xor
fcomps
hlt
add
dec
jb
icebp
test
or
ja
push
mov
mov
add
adc
ds
out
push
xor
in
dec
test
lds
popa
outsl
popf
xor
rcrl
movsl
mov
fmul
or
icebp
jb
rorl
lock
jecxz
sahf
pop
push
xor
push
mov
push
push
xchg
mov
stos
inc
faddl
aaa
and
xor
push
push
sti
fwait
in
cmp
fcompl
push
inc
outsl
sub
aad
lret
outsb
cwtl
sbb
xchg
pop
bnd
fldcw
orb
cmp
aaa
adc
inc
pop
test
sbb
push
fst
xor
andb
imul
xchg
xorl
gs
pop
iret
push
enter
pop
xchg
dec
xlat
lret
sub
jne
xchg
sbb
ljmp
shll
fiadds
lret
sub
push
imul
mov
cmp
ffreep
xchg
pop
push
aad
cmpsl
out
rcll
aam
call
aam
imul
ljmp
jge
or
ss
pop
shrl
jg
in
cmp
hlt
or
and
int
fdivr
fs
pop
xchg
repz
and
xor
data16
and
fimull
dec
inc
jecxz
inc
test
fcomps
cwtl
jmp
mov
outsl
fnstsw
inc
popf
loope
mov
dec
fimuls
fwait
jnp
outsl
lret
mov
sub
repnz
xor
cmpsb
ret
sub
pushf
ljmp
jo
das
jle
outsl
fnstenv
aas
xor
or
mov
lock
addl
and
inc
mov
lret
out
pop
adc
dec
sub
out
bound
testl
hlt
or
fbld
hlt
sahf
loop
mov
sub
ja
imul
push
es
dec
sahf
add
hlt
push
jo
dec
pop
lcall
xchg
mov
test
and
lds
lods
call
push
xchg
mov
jl
int
mov
sbb
inc
push
stos
lahf
cmc
jg
xchg
outsb
mov
test
insb
testl
fs
push
stos
sub
mov
int
xchg
dec
test
imul
rol
push
xchg
out
fcmovnbe
mov
nop
clc
fiadds
call
addr16
jbe
xor
sahf
mov
sub
adc
mov
lcall
ss
into
pop
int
cli
dec
inc
loope
jno
mov
int
mov
xlat
pop
shlb
outsl
push
pusha
sub
mov
outsb
xchg
xor
dec
add
loope
add
xchg
push
ret
sbb
mov
popf
cmp
or
inc
jb
xchg
cmp
filds
or
std
cs
movsb
xor
inc
sub
pop
pusha
add
rcll
cmpsl
cmc
push
orl
aad
sti
dec
push
leave
fwait
add
jg
cmp
adc
mov
decb
scas
push
xor
push
mov
and
or
rcll
jno
lss
movsb
arpl
jne
pop
jg
push
enter
and
add
inc
or
mov
push
insl
push
push
mov
test
lods
push
jns
bound
add
jnp
movsb
lcall
push
xchg
jne
cltd
xor
test
dec
adcb
mov
mov
outsl
movsb
in
fidivrs
or
jne
mov
arpl
pop
lret
xchg
es
mov
rcrl
inc
insb
test
daa
pop
mov
cs
int
insl
inc
add
subl
stos
xchg
xor
add
mov
pusha
jnp
popf
cs
pop
insb
pop
xchg
aad
jmp
das
sahf
test
cld
or
loope
xor
icebp
and
sbb
mov
cmp
test
mov
xchg
fwait
mov
fsubs
lcall
out
jmp
add
mov
test
sbbl
xchg
sbb
out
sub
mov
fwait
xchg
bound
adc
sub
dec
bnd
push
cmp
lret
fidivrs
stos
icebp
les
mov
mov
push
lret
nop
and
ja
push
lock
push
xor
fildll
stc
pop
clc
ds
push
add
ret
add
sub
jbe
dec
adc
arpl
popf
sti
idivl
int3
fbstp
in
adc
mov
push
dec
leave
jmp
lret
stos
add
lods
lea
cs
pop
add
lods
cmpsl
push
fistpll
jb
xchg
mov
xchg
mov
dec
jecxz
pusha
in
nop
pop
fstp
insl
cmp
xchg
es
popf
mov
or
cmp
push
mov
pop
loope
les
test
insb
movsb
decb
pop
mov
scas
lret
pop
adc
aam
sbb
add
push
out
mov
lcall
push
int
mov
jno
scas
xor
xor
ret
fbstp
enter
push
roll
je
data16
ds
daa
pop
stos
ret
mov
cld
mov
or
fucomp
dec
xchg
sti
lahf
sbb
or
es
mov
inc
in
dec
lods
xchg
push
mov
push
lea
jl
popa
add
inc
movsl
dec
xchg
push
cmpsb
sub
rorb
xchg
xlat
pop
cmp
fisubs
imul
inc
dec
sub
cmp
les
dec
pop
incb
push
mov
sub
adc
icebp
in
inc
cmp
sub
ja
dec
jp
je
add
add
scas
test
mov
lret
and
mov
mov
push
rcrb
stc
sbb
cmc
mov
mov
dec
fcompl
shll
ret
shl
lret
cli
testb
mov
xchg
sbbl
loopne
lret
xlat
xlat
fdivl
sub
outsb
sbb
and
les
xchg
out
jb
mov
sbb
sub
test
adc
dec
pushl
mov
sahf
jp
scas
popa
pop
out
loop
sbbl
dec
pop
or
dec
xor
insb
negb
mul
jp
adc
fidivs
xor
rcrl
xchg
rcll
mov
or
sub
and
add
mov
fwait
jne
sbb
loopne
scas
and
mov
inc
pop
movsl
lock
sahf
stos
pushf
notl
aaa
inc
in
and
cmpsb
sbb
or
inc
add
dec
mov
push
cmpl
mov
mov
jbe
fwait
inc
push
xlat
cmp
dec
jnp
or
aam
pusha
fwait
gs
imul
ret
inc
cli
cmp
pushf
dec
mov
icebp
cmpsl
pop
xor
push
or
movsb
lock
adc
adc
repz
pop
pop
popl
push
dec
xchg
dec
cmp
pop
xor
dec
jp
mov
rclb
cs
int
inc
cld
pop
mov
cmpsl
push
fisubrs
or
jo
pop
or
mov
adc
scas
jg
or
adc
fsub
stc
movsl
cmc
mov
dec
pop
fs
lock
je
jmp
jbe
pusha
sbb
movsl
popa
pop
dec
dec
insl
mov
rorl
push
pop
test
mov
cmpsb
stc
ret
mov
ja
xchg
bound
or
adc
scas
mov
cwtl
sti
mov
lods
sahf
xor
mov
jbe
out
adc
mov
fdivrs
and
fs
fs
pop
push
xor
repnz
jmp
xor
add
cltd
cmpsl
bound
push
loope
jge
jno
sub
jp
stc
fwait
cmpsb
mov
push
xor
fmul
pop
mov
mov
jl
cld
or
jno
mov
ret
ret
flds
int3
cmpb
sub
jmp
push
fidivs
xor
sub
mov
inc
xor
dec
fdivr
cld
mov
mov
out
inc
ret
shrl
adc
fcmovnbe
insb
sbb
push
mov
jns
popa
xor
push
dec
push
sub
and
lods
popa
push
call
in
dec
push
lret
add
cmp
cmp
cmovne
mov
leave
mov
dec
loopne
push
xor
lcall
lret
fisttpl
arpl
mov
aam
das
sarb
loop
jg
jbe
das
leave
dec
dec
sbb
inc
nop
fstpt
push
sbb
cs
xchg
jge
insl
jno
adc
pop
lcall
cltd
mov
ffreep
ret
subb
fwait
cmp
inc
mov
cmc
adc
or
mov
cmp
ja
stos
dec
insb
and
insl
pop
jbe
decb
xchg
rclb
mov
mov
lea
xchg
out
orb
push
ljmp
stos
int3
mov
inc
stos
add
xor
iret
dec
and
mov
push
in
ja
lods
shl
adc
packuswb
cs
inc
outsb
test
imul
mov
cmp
pop
sahf
je
push
xchg
int
mov
aas
adc
jecxz
pop
inc
fcoms
xor
hlt
shll
jecxz
mov
mov
js
sub
scas
add
pusha
sbb
mov
stos
mov
loopne
mov
out
jb
outsl
aad
fnstenv
lods
inc
out
cmp
inc
loope
clc
fwait
sub
sbb
clc
notb
lods
sbb
lret
cmp
fldcw
sub
mov
andb
xchg
xchg
orb
sub
sbb
repnz
add
inc
xor
xor
and
jmp
addr16
stos
inc
insl
jb
in
cmc
add
sub
mov
xchg
addr16
cli
lret
fs
fldl
mov
sub
aad
mov
cwtl
sbb
adc
cmpl
jns
lock
loop
bound
pusha
mov
jbe
mov
sub
cmp
ljmp
mov
lods
or
dec
push
xorb
out
cmp
inc
in
out
cmpsl
aas
jnp
cltd
test
insb
adc
clc
scas
hlt
xor
mov
rcrl
lods
add
inc
dec
outsb
push
sarb
test
ja
xchg
fsub
sbb
push
std
jne
or
push
popl
mov
into
or
dec
cmpsb
out
fcomps
sbb
aam
jne
push
xchg
push
dec
jbe
mov
lret
pop
pop
daa
or
cmp
ret
xchg
pop
hlt
and
test
ja
lea
sti
out
test
push
mov
fwait
rcl
fisubs
fcmovu
cld
or
ret
fs
insb
je
or
dec
push
lds
mov
add
or
mov
movsl
and
sbb
adc
out
xchg
shrl
dec
push
inc
arpl
scas
dec
jae
stos
cmp
sbb
scas
repnz
pop
mov
pop
mov
lds
push
test
loopne
mov
outsl
sub
fildll
ds
inc
into
push
and
das
mov
leave
and
sub
jb
test
inc
adc
xchg
insl
xor
cmc
test
inc
adc
sahf
and
adc
cmp
adcl
aaa
sub
loopne
cwtl
or
dec
jmp
call
jp
hlt
movsb
loope
add
sub
arpl
xor
sbb
xor
and
cmp
mov
shr
ss
in
push
fdiv
xchg
popa
sahf
jne
add
hlt
lods
loop
movsl
xor
inc
aas
out
xchg
sahf
mov
dec
lcall
pop
adc
ret
addr16
dec
lds
nop
mov
lds
mov
loopne
push
add
int
out
stos
jns
pop
out
jb
push
sti
sbb
mov
enter
mov
sahf
sub
mov
ljmp
jmp
sbb
pop
cmp
cmp
dec
xor
arpl
mov
out
mov
orl
das
pop
rolb
adcb
mov
repz
test
pop
push
jle
mov
clc
lock
mov
push
xor
in
jmp
cmp
mov
and
out
push
ljmp
sahf
sbb
mov
test
xchg
call
js
push
sbb
xor
mov
pop
sbb
movsl
ret
ret
dec
movsb
and
imul
xchg
xchg
sbb
daa
add
pop
push
xchg
inc
push
cmc
mov
cli
mov
dec
scas
daa
test
les
mov
lods
test
xor
dec
push
xchg
inc
and
mov
fld1
shl
call
lahf
mov
imul
lahf
mov
js
cmp
cmc
cmc
dec
jge
mov
xchg
pop
xchg
or
es
pop
clc
xchg
ror
into
fstpt
cmp
icebp
lahf
test
jp
mov
or
repnz
cs
jnp
push
push
jp
pop
pop
andb
adc
or
rcrl
into
inc
lds
in
jg
enter
rorl
xor
mov
lcall
test
into
cli
sahf
shlb
jo
pop
shl
gs
stos
loop
or
inc
lahf
adc
cmp
lods
aaa
push
mov
xchg
jmp
ja
mov
pop
dec
or
mov
data16
push
andb
or
out
xor
cltd
mov
sbb
add
push
push
cmp
pop
mov
cli
sub
or
jl
inc
pop
in
pop
mov
scas
jge
fs
cmc
ret
repz
mov
int3
aaa
cld
xor
sbb
inc
sub
inc
jae
mov
rol
sbb
lods
xlat
adc
cmp
push
and
or
or
mov
push
lea
cli
test
imul
gs
mov
sub
pusha
test
or
pop
or
cli
shll
out
mov
iret
pushf
xor
jecxz
add
mov
adc
inc
pusha
addr16
adc
lcall
push
inc
jno
mov
and
orl
inc
cwtl
xchg
sbb
cltd
cmpsl
adc
mov
subl
xchg
enter
orl
sub
pop
cmp
daa
mov
popa
ror
leave
xor
dec
mov
popa
xorl
cmp
ret
push
nop
and
or
mov
jecxz
std
mov
cmp
movsl
and
enter
loopne
xchg
pop
adc
cmp
int3
daa
cmpb
push
out
popa
pop
nop
lret
andb
fwait
xor
pop
or
scas
cli
mov
and
dec
enter
jmp
movsl
pop
inc
add
xchg
pop
lea
loopne
and
inc
sbb
dec
jge
pushf
mov
in
xor
jmp
daa
sub
mov
out
sbb
mov
push
nop
js
push
add
inc
mov
ffree
cmp
rcrl
cwtl
adc
mov
sbb
mov
divb
sub
dec
and
lahf
fwait
pop
xor
adc
jns
int3
notl
cld
loope
adc
js
push
sub
sub
adc
cld
in
out
movb
test
and
mov
xchg
add
add
sbb
enter
jmp
test
arpl
mov
mov
test
cwtl
mov
lods
out
lds
dec
cmpsb
lods
mov
xlat
lahf
int
mov
inc
xchg
push
mull
adc
bound
mov
mov
and
pop
cmpsb
mov
pop
aam
aam
inc
in
jge
lret
or
xchg
fsubs
aas
cld
and
dec
cltd
out
popf
enter
int
mov
xchg
addr16
cmp
js
js
ficomps
adc
push
imul
sub
xchg
fldenv
and
lret
jnp
dec
out
repz
mov
mov
add
test
andl
jno
dec
je
shll
or
insl
xor
leave
out
mov
push
roll
je
enter
sbb
idivl
dec
jo
or
pop
mov
sub
stos
jecxz
xor
dec
negb
pop
aad
inc
mov
mov
iret
jnp
jno
add
jge
aaa
xorb
ret
push
adcb
push
xchg
fisttpl
push
inc
addr16
and
aas
sahf
inc
out
dec
repz
mov
xchg
push
vorps
sbb
scas
lods
inc
adc
jbe
divb
cmp
shlb
push
fbld
mov
dec
popa
ficompl
mov
and
inc
sub
push
jno
les
mov
lahf
pop
lods
int3
lcall
sbb
hlt
les
sahf
aam
cmp
cmc
rolb
cmp
fdivl
shrb
adc
rol
fbstp
out
mov
push
adc
in
repnz
jnp
ja
mov
push
and
jae
jg
stc
push
shl
ret
into
inc
mov
xor
imul
bound
lea
push
xor
xchg
or
inc
int
insb
and
jecxz
shl
fidivrs
inc
std
pop
pop
jp
call
pop
sub
loopne
es
inc
cmc
rolb
jecxz
sub
dec
bound
out
pop
aad
mov
jns
sbbb
stos
sbb
pop
mov
mov
fidivrs
sub
test
pop
xchg
jecxz
or
dec
js
mov
data16
ret
cmp
adcb
rcll
loopne
call
imul
sbb
sahf
push
inc
jp
inc
or
movsl
addl
mov
add
aaa
ret
clc
xchg
sub
rcrb
or
add
rcr
dec
stc
inc
fimuls
mull
jge
dec
ret
and
jg
sarl
mov
or
push
lret
sti
mov
clc
mov
xchg
pop
repz
push
pop
or
stos
scas
pop
mov
and
data16
fucomip
roll
ss
sbb
insb
call
and
pop
stc
xchg
js
dec
push
sub
mov
pop
jne
add
ja
fmul
test
mov
pop
rcr
push
imul
mov
xor
js
shll
notl
sahf
dec
stos
cmp
les
inc
std
fwait
lea
ret
jecxz
loope
pop
aad
inc
adcl
and
in
cs
xchg
and
in
push
xchg
xlat
cmp
mov
add
fldenv
adc
mov
jge
lea
insl
movsb
fists
ds
fstl
push
jns
data16
fnstenv
jle
xchg
fistpll
add
xor
je
in
jg
cld
insl
in
lea
imul
adc
loope
mov
ja
sub
in
push
clc
imulb
mov
lret
sbb
push
cmpsl
push
adc
pop
pop
adc
push
inc
adc
nop
imulb
dec
addr16
inc
addl
mov
mov
enter
addr16
repnz
and
pop
fcomps
cs
mov
mov
jne
lds
inc
inc
push
mov
inc
shrb
int
cmp
js
jmp
pop
outsb
das
iret
jg
add
and
mov
ja
jmp
mov
pop
cmp
pop
or
sbb
sbb
mov
les
push
clc
dec
gs
fimull
push
popa
lret
popa
push
dec
pushf
fwait
inc
ds
mov
aad
sub
stos
sub
or
rcrb
shl
faddl
test
es
adcl
test
pop
testl
xlat
lods
imull
dec
and
sbb
movsl
cmp
or
xchg
daa
pusha
mov
hlt
add
sub
add
and
movsl
inc
out
pop
jo
mov
ljmp
dec
cmpsb
and
ret
lods
mov
inc
rolb
jo
mov
aas
subl
mov
xlat
into
push
hlt
pusha
rcll
divl
sub
dec
decb
push
jns
aad
lods
inc
daa
dec
dec
sarb
cltd
sub
or
add
pop
mov
mov
das
and
jg
jle
mov
fadds
cli
test
cs
cli
cmp
ret
cmp
stos
lret
xor
adc
sub
jge
cld
cmp
xchg
pusha
adc
out
fcmovb
hlt
jl
pop
jl
bound
fcomps
cmp
mov
rcrb
jecxz
mov
fcmovnbe
ficoml
or
push
clc
decl
mov
filds
or
shr
test
ljmp
inc
mov
cltd
jae
or
lock
push
int3
rcll
insl
jg
adcl
xlat
xor
iret
add
int3
xor
repnz
sub
test
jle
add
xchg
scas
insb
sbb
adcb
popf
inc
lock
movsl
lds
xchg
repz
xchg
sub
or
pop
test
arpl
xchg
inc
push
fildl
xorb
in
sub
jbe
or
jecxz
mov
mov
jae
lahf
and
mov
jne
mov
mov
sbb
iret
or
mov
out
test
ds
lcall
xchg
push
lcall
xor
pop
fdivs
push
cmpsb
jnp
add
xorl
outsb
shll
jne
jne
dec
test
out
push
and
jbe
jl
daa
stos
cmp
push
sti
mov
and
iret
aas
fsubl
pop
cld
push
test
in
xchg
dec
bnd
adc
in
add
mov
xor
loope
jp
cltd
xor
mov
and
jae
push
mov
sbb
push
imul
push
dec
mov
pop
jg
mov
add
testl
dec
pop
js
aaa
inc
xchg
pushf
jge
lods
push
mov
lret
out
xchg
bound
xchg
subb
push
sbb
xchg
imul
and
pop
testb
mov
incl
roll
mov
mov
sub
daa
and
jl
in
mov
fldcw
add
xor
sub
maxps
sarl
scas
mov
cmpsl
xchg
xor
movsl
dec
pop
inc
jecxz
es
ds
sbb
mov
and
and
insl
jp
push
xlat
mov
addr16
mov
jo
push
cmpsb
out
mov
je
pop
jecxz
inc
xor
jge
fdivrs
ret
dec
add
mov
sti
xchg
lds
pusha
add
push
dec
jnp
std
xorl
mov
out
in
sub
lea
jl
mov
xor
shrl
lods
dec
loope
mov
or
dec
inc
ljmp
scas
out
ja
loop
cmp
std
scas
scas
push
stc
push
sbb
push
sahf
mov
dec
sbb
sbb
subl
stos
cmp
movsl
popa
into
sbb
in
push
pop
adc
sbbb
or
xor
and
aam
mov
mov
cmpsb
dec
add
and
sbb
sub
xor
fstpl
lock
jp
pop
test
imul
xchg
jns
sarb
xlat
mov
fiaddl
dec
dec
mov
in
pop
mov
xchg
loop
mov
mov
mov
jne
dec
ja
xchg
loopne
dec
imul
add
push
rorl
mov
clc
ja
inc
or
das
push
fidivrs
inc
sub
xorl
lods
and
xchg
xchg
mov
lcall
mov
sbb
xchg
or
xchg
sub
dec
lret
iret
jge
insb
fsubl
sub
xor
xchg
push
cmpsb
sarl
xor
mov
mov
fs
jmp
jns
mov
sbb
out
xorb
out
ret
mov
xlat
mov
add
push
inc
mov
gs
test
roll
insb
aas
scas
xor
mov
inc
aas
out
lret
das
and
call
dec
sbb
adc
pop
addr16
and
arpl
aas
sbb
mov
add
ret
andl
jno
mov
cmpsl
mov
sbb
dec
cmc
out
jecxz
xchg
mov
testl
enter
pop
add
test
mov
ja
sbb
mov
in
mov
in
adc
fwait
addr16
mov
cli
loopne
sbb
daa
or
pop
pop
popa
add
addr16
dec
lahf
testl
pop
mov
add
cmpsb
xor
fisubrs
mov
sbb
cmpsl
in
xchg
out
hlt
pop
xchg
scas
addl
mov
xchg
div
stos
xor
pop
pop
push
dec
jbe
mov
dec
dec
fsub
pusha
cltd
hlt
fildll
mov
mov
mov
call
jmp
pop
mov
jmp
pop
test
ds
push
sub
pop
jge
mov
test
cmp
xlat
shrb
aaa
in
jne
cmpsb
jmp
or
mov
pop
pop
and
clc
scas
stc
imul
out
movsb
and
push
mov
push
arpl
loope
ja
testl
sbbb
test
es
push
inc
add
rcll
cmp
je
mov
and
in
push
test
mov
ljmp
xchg
cmp
aaa
daa
push
rcr
scas
sbb
call
xorl
mov
or
in
xor
test
inc
inc
stos
mov
jno
test
cltd
inc
mov
dec
push
mov
dec
test
int3
roll
mov
push
test
adc
dec
cmp
push
in
test
push
imul
push
lret
repz
and
orb
xlat
stos
dec
sub
add
popf
lret
mov
int
sarl
or
xor
mull
add
arpl
mov
inc
scas
jp
sti
jecxz
jo
jmp
stos
ret
enter
and
pop
push
ret
inc
add
stos
addr16
pop
test
mov
scas
decl
xchg
roll
mov
dec
jne,pn
dec
adc
inc
int3
popf
ret
mov
out
shlb
mov
and
das
pop
inc
or
mov
into
push
mov
cmp
shlb
fld
xchg
mov
aad
cmp
push
ret
xchg
add
adc
lods
mov
or
cmp
pop
jl
out
iret
cmp
cmp
pop
jg
cmp
mov
aad
out
in
mov
loopne
inc
dec
xor
mov
push
ret
jae
mov
or
rorb
and
sub
popa
inc
push
sbb
das
push
push
inc
or
push
fnstenv
stos
dec
rcrl
shlb
lds
xchg
cmp
cld
mov
cmc
xchg
fucomip
pushf
pop
fwait
add
lret
mov
outsb
ss
pop
sbbl
inc
mov
int
dec
mov
mov
das
cmp
pop
xchg
adc
call
lahf
adc
outsb
rclb
add
xchg
dec
arpl
mov
mov
pop
cli
jo
cmp
pop
pop
ficomps
lds
push
int3
cltd
sbb
and
and
sbb
inc
pop
sbb
cmp
pop
xlat
stos
adc
mov
fnstenv
loopne
movsb
sub
mov
mov
cmp
sbb
inc
push
int3
cmp
fmull
xchg
cmp
push
into
cmp
lahf
adc
mov
cmp
jo
push
imul
adc
outsb
pop
rcll
and
jge
into
pop
cmpsb
outsl
ret
push
push
scas
das
stos
mov
icebp
or
stos
jno
aas
inc
mov
cmp
jmp
in
cmpsl
or
dec
cmp
shlb
sub
fsubp
add
in
jne
mov
or
out
push
je
sysenter
dec
pop
dec
add
lcall
inc
pop
call
pop
sti
jbe
xor
call
and
xor
lods
dec
add
aaa
movsb
popa
pop
fists
lods
fmuls
add
jmp
pop
scas
fs
add
pop
std
pop
cmp
add
inc
jl
cwtl
pop
es
das
and
push
cwtl
mov
outsb
dec
dec
jne
xchg
sbb
pop
inc
pop
cmp
dec
xlat
inc
stos
lods
dec
push
imul
sub
loope
cmp
movsb
sub
mov
push
sub
rorb
inc
cli
das
notb
jo
and
mov
add
ficomps
shlb
mov
fmull
mov
cwtl
cmpsb
mulb
mov
or
xchg
xchg
xor
les
or
jge
sub
push
pop
xchg
js
enter
test
adc
and
cmp
sahf
fstpt
cmp
mov
ja
add
ds
push
pop
mov
jl
pop
in
mov
gs
jbe
icebp
and
pop
jle
push
lock
addr16
sbb
mov
or
lret
es
fs
push
out
psubw
sub
dec
cmpsb
lock
sbb
ret
push
repz
subl
fisttps
sti
movsb
daa
xlat
sbb
pop
jb
clc
lahf
push
mov
mov
test
int
call
pop
test
dec
test
add
cmc
int3
jmp
lods
loop
and
clc
sbb
aad
lods
mov
cmp
pop
lret
mov
xchg
js
test
aas
jns
sub
bound
jecxz
dec
lods
outsb
sbb
xor
push
sbb
mov
fcoms
jecxz
push
pop
lea
sbb
das
rorb
fs
and
sarl
adc
ljmp
bound
mov
lock
mov
mov
in
aas
push
pop
xchg
aas
sbbb
aas
pushf
inc
fldcw
test
faddp
leave
dec
push
xor
lods
test
clc
pop
stos
gs
addb
push
call
add
cmpsl
fsubs
lret
sub
sbb
cmpsb
mov
add
les
and
sbb
in
in
pop
clc
andl
imul
aad
rolb
xchg
cmc
adc
mov
xor
loope
pushf
sub
fmull
mov
pop
insb
mov
jp
cs
cmp
push
leave
int
xor
pushf
mov
jne
sub
nop
jmp
sbb
adc
mov
cmp
les
mov
mov
test
jns
int3
outsb
mov
je
jnp
jbe
sbb
lret
shll
pop
roll
loopne
or
enter
in
lret
test
shll
dec
repz
add
loopne
shll
pushf
cmp
clc
jnp
out
or
mov
aad
and
lds
scas
push
dec
cmp
stos
pop
mov
test
cli
int3
or
js
lock
sub
lds
loopne
inc
mov
adc
lcall
jne
andl
mov
pop
push
outsl
or
sti
lock
mov
push
aas
fidivs
jbe
shl
mov
lods
dec
cmp
or
or
cs
or
adc
jne
repz
clc
sbb
jne
ds
mov
daa
popa
cmp
and
jl
shrb
jo
into
imul
rcrb
xchg
jge
sbb
in
inc
pop
mov
xor
add
sbb
out
fcmovnu
arpl
rep
aam
xchg
xchg
lret
pop
push
sub
pop
cs
mov
mov
mov
mov
cmp
mov
mov
loop
data16
in
cli
ljmp
jns
xlat
out
sub
fnop
jmp
xchg
fsts
sti
push
vmwrite
out
cmp
push
inc
stc
int3
sbb
jne
lods
inc
xchg
pop
std
stos
incb
dec
lock
push
rcll
mov
dec
imul
mov
sbb
test
mov
dec
inc
xchg
push
sahf
addr16
mov
scas
daa
mov
pop
stos
mov
pop
jecxz
movsl
mov
ss
xchg
shrb
fld
notl
neg
push
popa
push
jge
ret
or
push
or
pop
mov
inc
repnz
sbb
jae
mov
fistl
dec
cs
cwtl
adc
mov
pop
jmp
xchg
jne
pop
sahf
test
jmp
pop
scas
rcrb
jae
dec
gs
repz
inc
pop
call
leave
push
pop
std
rcrb
out
and
data16
lds
inc
popf
add
aas
leave
pop
xchg
adc
jle
and
xor
lock
imul
xchg
lahf
in
test
imul
xor
stc
jae
cmp
popa
pop
aam
loopne
mov
jl
cltd
push
lret
push
push
and
sbb
jle
xchg
sub
cld
jg
dec
and
xchg
sub
push
lahf
add
cmp
jl
push
push
movsb
repz
mov
add
popf
add
mov
call
jne
xchg
sub
cmp
mov
movsb
xchg
lods
loope
icebp
push
lods
rcr
leave
out
rorb
mov
mov
jbe
jecxz
dec
ds
ljmp
stos
sub
call
push
sahf
jmp
movsb
ret
pop
leave
or
mov
dec
cmp
jb
and
jle
dec
lcall
mov
loopne
lcall
mov
arpl
test
jl
lahf
lock
outsb
fucomip
dec
in
aaa
ja
mov
enter
mov
popa
mov
xor
jno
lock
shl
mov
repnz
clc
stos
popa
xchg
bsf
lock
sar
or
and
jno
ss
xchg
bswap
rclb
sub
adc
pop
mov
mov
mov
jnp
pop
insl
cwtl
test
iret
xor
sbb
jle
sbb
out
adc
cmp
xor
mov
addl
mov
or
out
rclb
movsl
and
pop
push
loop
sub
xchg
in
lret
js
jmp
inc
adc
sub
ret
xchg
adc
dec
mov
dec
xchg
pop
adc
inc
das
sbb
js
jle
rorb
mov
push
or
sub
or
addr16
mov
pop
test
dec
mov
mov
scas
inc
aam
fs
aas
push
call
lods
fs
scas
sub
xchg
daa
cli
cs
xchg
std
cmp
test
gs
fstpl
add
jbe
js
or
and
test
sti
loope
je
lret
outsl
rcll
addr16
fistl
mov
mov
fcomps
or
lret
out
inc
hlt
adc
adc
mov
shrl
and
xor
je
pop
xor
xor
dec
push
pop
add
push
cli
dec
dec
sbb
scas
notb
xor
jg
jbe,pt
push
push
mov
add
leave
test
cmp
or
xlat
jo
mov
or
fwait
jecxz
xchg
mov
andl
xchg
ret
pop
in
scas
outsl
mov
mov
sarl
ret
in
jge
fs
test
aad
test
pop
lret
fsts
adc
popa
and
movsl
mov
shll
in
sbb
mov
lret
movsb
inc
ret
cmp
push
jge
fistl
mov
iret
stc
push
dec
inc
pop
pushf
and
jnp
xchg
roll
jle
fs
push
imul
push
cs
ret
test
mov
inc
orl
mov
and
or
jmp
arpl
lahf
mov
pop
shlb
add
ljmp
test
xchg
jno
xchg
dec
mov
push
inc
mov
lahf
test
stos
adc
imul
mov
mov
sub
dec
jns
mull
xlat
rcrb
sub
mov
test
scas
inc
and
mov
cmp
cmp
pop
movsb
xor
inc
rorb
stos
fldenv
fwait
outsb
in
cs
lahf
ficompl
aas
leave
push
test
rolb
mov
cmp
jnp
mov
or
sbb
add
sub
aam
jo
xchg
shl
sti
inc
roll
push
add
test
repz
sbb
cld
mov
xchg
dec
iret
out
cmp
dec
scas
inc
in
test
lods
sub
add
lods
pop
test
fists
lods
and
lea
xchg
or
inc
cmpsb
dec
mov
dec
adc
in
sbb
ss
outsb
clc
in
popa
cmp
ret
mov
add
and
cltd
int3
mov
test
jle
inc
or
lcall
xor
scas
jns
cld
fldenv
inc
ds
data16
into
push
jns
dec
mov
xor
stos
cwtl
pop
stc
inc
int
push
mov
shrl
xor
movsl
and
lcall
sar
jecxz
sbb
push
jecxz
pop
test
mov
loop
mov
jnp
add
loopne
jae
push
test
shlb
or
test
pop
orb
xorl
lea
loop
pushf
cmp
test
sbb
movsl
mov
dec
addr16
jmp
mov
sbb
ljmp
rolb
push
pop
cmp
movsl
inc
sub
out
sbb
loopne
xchg
arpl
mov
std
mov
pusha
gs
mov
and
push
inc
jge
xlat
outsl
iret
dec
xor
cmpsl
stos
js
add
cmp
hlt
pop
push
dec
es
dec
outsl
jo
stc
sbb
daa
or
or
dec
je
sub
dec
cmp
int3
adc
cld
cli
insb
or
stos
pop
dec
inc
or
sub
outsl
pop
fdivs
ret
push
mov
adc
cmp
pop
or
movsb
mov
add
mov
mov
dec
fbld
mov
movsl
push
mov
push
xchg
xor
aas
popa
and
jbe
pop
sbb
ret
xchg
aas
push
add
inc
add
xchg
gs
mov
jnp
and
cmc
xor
sqrtps
xchg
stos
pusha
out
test
ret
stc
jg
call
pop
in
xchg
push
dec
sahf
lret
cmpsb
testl
cmp
adc
cmpsl
cmpsl
dec
mov
cmp
dec
or
pop
nop
mov
in
inc
lea
mov
aas
mov
movsb
push
and
inc
int3
scas
mov
jae
mov
fcoml
and
jl
clc
nop
dec
mov
add
push
jge
subb
mov
pop
frstor
jns
pop
repz
pop
xchg
outsb
shlb
dec
lock
mov
xchg
fs
push
negl
mov
and
or
cmp
pop
daa
je
out
add
adc
leave
lret
nop
lcall
out
repz
pusha
cmp
test
add
xchg
int3
xchg
push
jmp
into
cwtl
sub
stos
arpl
sbb
cmp
or
adc
xchg
mov
and
mov
lret
xchg
sti
xor
mov
jecxz
xchg
fcmove
push
xor
and
push
mov
cmp
push
push
dec
lcall
mov
aam
inc
fsubr
scas
rol
and
out
test
or
outsl
pushf
movsb
sub
movsb
sub
jg
cs
inc
fnstcw
mov
gs
sarl
sbb
inc
in
sbb
insb
and
pushf
sbb
dec
mov
das
lods
sbb
pop
mov
sar
out
push
push
into
int3
sbb
stos
jnp
lret
add
call
cmp
xor
lods
lret
enter
add
push
dec
loope
outsl
or
loope
les
aad
xchg
je
dec
sbb
and
bswap
mov
push
push
ss
xchg
sbb
or
jg
lahf
sti
dec
inc
sbb
xchg
je
pop
push
add
jmp
shlb
loope
push
repnz
push
mov
insl
adc
imul
pop
sub
stc
icebp
push
and
sbb
test
xchg
xor
cmp
shrb
cmp
mov
popf
movsb
adcb
adc
dec
xchg
inc
cmp
test
loop
adc
add
mov
test
xor
insb
push
mov
jg
and
shl
mov
pop
inc
iret
mov
xor
push
push
xor
fdivs
fs
ss
dec
jle
andb
mov
mov
mov
push
in
fcmovnu
and
sbb
pop
imul
xchg
outsl
xchg
sahf
pop
sbb
mov
mov
dec
arpl
sbb
mov
daa
push
pop
xchg
mov
addr16
mov
dec
jp
ret
xlat
cltd
cmp
mov
sbb
les
sub
test
sub
push
pop
add
gs
outsl
jae
jno
cmp
sbb
push
xor
push
or
lock
jae
sbb
cwtl
cmc
pop
dec
fistps
push
jp
cmp
leave
push
adc
cmc
xor
cltd
sub
xchg
dec
cmp
out
ss
data16
pop
push
xchg
adc
dec
subb
dec
in
sbb
jg
ja
addr16
push
das
adc
add
cmp
movsl
push
inc
rcl
pop
incb
sub
sti
mov
pop
lahf
cmpsb
cmpsl
push
pop
and
xchg
and
sbb
adc
jp
mov
stos
in
jbe
leave
mov
lret
pop
or
mov
mov
jae
in
imul
mov
fisttps
jp
popa
in
mov
cmpsl
mov
and
adc
jno
xchg
stos
inc
jnp
repnz
stos
dec
ret
outsl
ljmp
cwtl
jl
and
shlb
rol
sbb
fcoml
jge
push
pop
mov
test
xor
add
hlt
mov
add
rolb
out
pop
dec
cld
and
daa
pop
in
mov
daa
cld
sub
lock
test
or
push
lret
insb
fadds
dec
mov
cmovne
shrb
mov
or
cmpsb
mov
sbbl
fstps
lret
adc
movsb
pop
out
jle
xchg
mov
sub
inc
jg
das
out
inc
xor
fadds
sbb
pop
pushf
sti
std
sub
enter
or
stos
xchg
mov
pop
jmp
loope
inc
and
ds
pusha
stos
divb
jo
adc
into
imul
std
xor
in
or
pushf
call
addr16
dec
xadd
dec
mov
inc
cmpsl
adc
xorl
ret
test
cs
mov
cltd
rcr
mov
andnps
push
push
pop
mov
inc
jae
or
mov
push
gs
push
int
pop
jle
jge
mov
stos
xchg
mov
mov
push
mov
out
inc
push
fadd
pop
gs
sub
es
jne
sub
adc
xor
sbb
jns
nop
movsl
xchg
out
dec
mov
lcall
in
es
imul
jge
orl
or
mov
insb
int
xlat
or
ret
lret
sbb
repz
ljmp
pop
fldt
sbb
sahf
pushf
jo
in
xchg
xchg
pop
std
push
xorb
ret
dec
test
outsl
jge
stc
add
in
sbb
lods
mov
mov
jg
sti
or
das
adc
inc
dec
add
in
leave
test
fdivrl
sbb
inc
repz
jns
pop
jae
push
stos
add
mov
xchg
pop
lds
inc
pop
jne
sub
fs
outsl
sbb
sahf
mov
stc
ljmp
sti
test
mov
cli
pop
addb
movsl
scas
push
cmpsl
push
outsl
mov
mov
loopne
mov
scas
xlat
mov
out
push
stos
and
mov
ss
shlb
xor
pop
adc
jae
and
add
fistpl
test
mov
int3
cmc
loop
aaa
mov
jp
push
fs
testl
mov
in
mov
data16
sub
sub
call
out
mov
jbe
mov
push
stos
sub
mov
or
jae
rorl
push
xchg
xorl
pop
into
add
add
cli
int3
sub
jae
jae
mov
or
scas
dec
pushf
jno
mov
je
push
lret
call
std
rclb
or
je
aam
mov
outsb
cwtl
into
shlb
popf
xor
xor
insb
cwtl
std
out
sbb
inc
fcmove
fisubrs
mov
inc
fadd
add
pop
xchg
sub
pop
xor
sub
ret
or
addb
lahf
fisubrl
ljmp
cmova
xchg
xchg
sahf
pop
cmp
lods
mov
pop
lcall
cmp
mov
bound
fsubs
lods
mov
xchg
movsl
inc
inc
sbb
fwait
sub
mov
ds
popf
cltd
or
popa
mov
shl
stc
jne
jbe
subl
add
gs
mov
xor
mov
aas
aad
mov
stc
inc
inc
mov
adc
jcxz
out
dec
jo
rcrl
out
xor
ret
lods
out
lds
mov
in
sahf
push
jge
sbb
mov
or
xchg
xchg
mov
icebp
push
push
xchg
aaa
int
and
mov
jb
imull
dec
push
into
cmp
es
add
rcrb
inc
adc
mov
mov
jg
scas
ss
mov
inc
cmc
enter
mov
call
sub
push
adc
adc
pop
std
fsubr
cmc
adc
popa
xlat
scas
fs
push
xchg
push
cld
jge
dec
ds
lret
dec
in
popl
popaw
mov
jnp
jbe
mov
xchg
clc
jle
sbb
shl
lret
adc
jo
sbb
push
inc
inc
rol
lock
insb
mov
inc
mov
scas
imul
imul
int3
dec
mov
fwait
popf
add
fsubr
cmpsb
adc
pushf
jl
lds
or
jb
mov
sbb
js
mov
popf
fnsave
fildll
inc
mov
add
add
ja
cmpb
in
out
cltd
jo
ret
mov
push
push
out
sbb
cmp
mov
fidivrl
icebp
jbe
mov
shll
dec
paddb
or
cmp
cmp
adc
jno
push
hlt
and
push
int
add
inc
nop
or
pusha
fnstsw
test
sub
sarb
cltd
es
xchg
movsb
repz
add
add
sub
out
lea
push
in
cwtl
mov
das
mov
loop
sub
addr16
xchg
fcmovnbe
add
int3
mov
cmc
stos
in
fstpt
mov
stos
leave
dec
adc
ret
inc
lret
shll
cmp
push
inc
mov
sub
mov
jl
xor
sbb
insl
shlb
and
jmp
testl
add
fs
mov
mov
out
clc
jl
sub
sahf
out
cld
xchg
and
cwtl
notb
sahf
pop
mov
enter
insb
xor
dec
xor
dec
jmp
and
outsl
jg
test
dec
in
mov
pop
cmp
es
xor
fisttpl
lret
mov
jae
notl
clc
pop
lret
enter
sbb
add
sbb
pop
cli
cmp
mov
sub
cs
rolb
rclb
pop
lret
xor
fucomp
sbb
loop
mov
adc
inc
inc
ffreep
and
scas
aam
cmp
push
push
dec
cli
std
add
push
add
insl
mov
push
hlt
lods
dec
outsb
sub
mov
in
imul
sbb
lods
mov
cmp
mov
jae
mov
inc
repz
mov
sarl
pop
mov
scas
mov
jns
aad
add
jbe
hlt
cmpb
mov
xchg
mov
data16
dec
push
inc
andb
pop
mov
add
ljmp
xor
rorb
inc
loope
rclb
push
test
or
xchg
ss
out
movsl
sub
das
sysenter
lods
mul
out
nop
ret
ljmp
insl
imul
pop
repnz
pop
push
in
and
out
pop
inc
stc
mov
jp
mov
or
inc
mov
ja
sbb
and
lea
ret
shrl
xchg
into
mov
repnz
pop
mull
push
xchg
out
jb
adc
pop
pop
cmp
out
jle
xor
jg
cltd
movsl
mov
push
pop
bound
mov
adc
or
push
cmp
gs
dec
adc
div
scas
add
jae
mov
cmp
shr
adc
fxch
je
mov
mov
jl
imul
xlat
sub
push
adc
pop
push
or
bound
pop
movsb
adc
mov
loope
cmpsl
ret
cld
xchg
outsb
jbe
xchg
mov
imul
add
sub
sbb
int3
out
rcr
das
sbbb
adc
xor
movsbl
push
add
leave
push
rorl
stos
and
cli
xchg
addr16
fstl
cmpsb
shrb
leave
jae
mov
std
jns
xchg
ss
mov
popf
iret
idivb
cmp
dec
mov
dec
jb
test
fistpl
ljmp
imul
data16
lods
gs
jns
mov
sbb
mov
outsl
aam
test
sub
jmp
aam
sbb
in
mov
cmp
mov
mov
push
pop
mov
out
imul
scas
icebp
xchg
daa
movsb
mov
cld
dec
cmp
aas
scas
sub
out
xchg
test
insb
das
aas
fldl
fs
dec
jo
aas
push
into
out
mov
pop
enter
jmp
add
shrb
jecxz
je
cmp
pushf
push
ds
fs
pop
fidivrs
call
pop
add
and
aaa
loopne
shlb
arpl
mov
std
and
mov
out
icebp
fldt
lret
pop
jb
insb
and
insb
inc
inc
push
sti
mov
jmp
js
xor
lods
inc
jne
lahf
into
push
imul
int
pop
pusha
sub
and
xor
fwait
jl
sbb
cmp
mov
ljmp
dec
scas
leave
dec
push
push
jb
loopne
dec
sub
lahf
or
adc
aam
add
fsubrl
or
pop
adc
push
or
dec
sbb
andb
xchg
sub
shlb
pop
xchg
cmc
scas
stos
pop
jae
dec
es
loopne
add
repnz
sti
sahf
jge
sub
lock
nop
cmp
jmp
fwait
shrl
cmp
xchg
adc
lahf
push
or
in
insb
cmc
cltd
adc
inc
sahf
loopne
sbb
ds
add
xor
imul
or
adc
push
in
and
out
in
fcoms
in
or
insl
mov
mov
mov
dec
add
sahf
ja
mov
cs
push
bound
nop
or
push
xor
loop
cmp
cmc
pushl
push
or
mov
push
push
sarb
sub
xchg
ljmp
rcll
fsubrl
es
cmc
shl
jns
and
loop
addb
stos
jae
jnp
fadd
popf
jnp
lret
jmp
xchg
push
mov
xor
jbe
outsl
push
mov
jmp
cmpl
and
cmpsb
jo
test
jl
add
xchg
inc
sti
insl
lea
les
jl
fcoml
jge
jnp
arpl
rcll
inc
inc
add
sub
dec
mov
push
loopne
in
in
jbe
nop
sub
loop
ret
mov
sbb
mov
dec
testl
jge
sub
mov
enter
gs
fwait
pop
sub
cmp
xchg
jp
int3
pushf
dec
cltd
rcrl
jp
mov
push
pop
loop
push
mov
aas
add
jge
push
fbstp
lock
mov
dec
int3
das
push
out
dec
pusha
mov
mov
insb
daa
loope,pn
mov
pusha
gs
jle
fildll
ret
mov
orb
or
xchg
jno
add
mov
xchg
lea
cmpl
mov
scas
add
shll
jle
cmp
scas
in
inc
sbb
mov
add
aaa
test
add
dec
insl
in
push
jge
pop
repz
adc
cld
inc
jb
out
lea
outsb
fmull
jnp
sub
mov
add
aas
sbb
addb
call
es
hlt
lods
movsb
cmp
adc
and
adc
jg
sub
inc
xchg
lea
pop
in
add
sbb
inc
lret
dec
adc
push
enter
repz
xchg
inc
sbb
loope
add
in
mov
sub
daa
pusha
aad
stc
mov
dec
and
cltd
adc
mov
cld
xor
dec
dec
stos
ljmp
and
xchg
xchg
adc
push
push
or
pop
aam
int
dec
cmp
rolb
jle
inc
pop
dec
movsb
je
lret
pop
push
or
xchg
ljmp
loope
mov
jge
test
pop
mov
mov
addr16
sbb
roll
test
dec
mov
fnstsw
testb
jno
test
lret
push
dec
lods
push
gs
adc
pop
in
adc
jo
cld
inc
test
call
rcrb
das
adc
xor
bound
xlat
push
inc
loopne
xchg
movl
cltd
add
push
inc
lods
mov
leave
lods
xor
or
push
daa
mov
pusha
loop
lret
jmp
push
xchg
in
dec
shll
out
sub
divl
fs
sub
mov
jp
push
clc
sbb
inc
push
mov
add
xchg
lds
shl
and
lret
out
jno
xor
out
cld
mov
sahf
iret
adc
sub
push
test
and
sbb
add
and
in
mov
push
jp
xor
pushf
data16
movsl
sbb
in
mov
inc
rolb
fidivrl
xchg
xor
sub
mov
popf
push
cli
mov
cltd
push
cli
test
pop
cmp
out
or
inc
in
add
sbb
rorb
cmc
cs
js
dec
pop
dec
mov
clc
or
xchg
cmpl
roll
dec
sub
lcall
fwait
movl
insb
shrb
pop
jb
xchg
ficoms
inc
shrb
lret
hlt
mov
adc
aad
ss
lret
dec
xchg
ja
push
lock
mov
jp
jnp
sbb
and
icebp
cmp
sbb
inc
push
notl
in
dec
push
test
dec
movsl
iret
aam
inc
leave
xor
cmp
push
push
test
lods
lahf
dec
xor
pop
fs
mov
fucomp
cmp
iret
mov
inc
jge
mov
xor
xchg
stc
dec
mov
stos
lret
mov
jne
dec
stos
daa
cmp
xchg
mov
adc
pop
imul
cmp
in
js
fs
movsb
adc
or
xchg
cmp
pop
push
adc
dec
mov
mov
mov
int
flds
inc
xchg
jb
imul
stos
lret
data16
notl
shr
cwtl
ror
cmp
sti
inc
xchg
repz
xchg
push
push
in
jecxz
cs
push
nop
jge
fimuls
pushf
push
push
movb
outsb
leave
inc
movsl
popf
push
sub
int
stos
cli
dec
jne
into
fcom
pop
sbb
in
loop
add
js
mov
pusha
push
js
jne
sub
jge
enter
lcall
mov
push
cmp
call
inc
sti
iret
seta
sub
dec
arpl
sarl
mov
mov
sbb
xor
gs
inc
add
bound
pop
and
repz
sbb
push
lret
inc
icebp
xor
aas
les
and
push
sbb
mov
pop
bound
dec
cmp
inc
testb
adc
dec
sti
xor
pop
arpl
or
xchg
loopne
lods
xlat
cmp
inc
aas
nop
dec
lret
and
push
mov
lret
popfw
push
mov
fnsave
in
movsl
in
mov
cmpsb
adc
fidivl
les
sub
bound
stc
and
add
insb
sbb
mov
mov
add
outsl
call
cmc
cmpsb
hlt
ret
cltd
ja
xor
mov
add
and
getsec
dec
loope
and
or
dec
nop
movsl
movsl
pop
aad
add
and
mov
pop
stc
dec
mov
shrl
jae
cmp
sbb
mov
inc
rorb
mov
pop
leave
xchg
ficompl
mov
pop
dec
leave
fs
cmpsb
mov
aaa
xor
fiadds
jecxz
leave
pop
mov
adc
leave
icebp
pop
nop
mov
and
ljmp
js
xlat
and
sti
popa
iret
pop
cmp
jecxz
not
add
arpl
or
pop
push
pop
sub
or
cmp
jae
push
mov
inc
xor
push
nop
ficomps
inc
jg
mov
jnp
dec
ja
sbb
test
xor
adc
mov
pop
or
push
cmpsb
mov
leave
xchg
pop
iret
and
clc
stos
imul
cltd
jns
cmp
xor
dec
je
movsl
leave
outsb
arpl
das
test
fidivl
push
popf
fisttpll
loop
mov
cmp
mulb
stc
mov
test
dec
push
dec
cmp
pop
cs
jns
test
xchg
icebp
xchg
div
pop
aad
test
cmpsl
and
lock
jno
insl
push
cmp
dec
adc
adc
sbb
fists
pop
push
fs
lret
shr
sub
iret
jmp
stc
sbb
sub
pop
and
fwait
jge
add
jmp
out
pop
xor
cmp
add
stos
clc
fimuls
jecxz
xor
in
push
stos
xor
fists
dec
dec
cwtl
sbb
adc
std
lret
cmpsb
mov
jns
repnz
cli
icebp
loope
divb
jecxz
pop
push
int
sub
and
mov
ret
mov
mov
adc
jno
push
jmp
cwtl
aam
push
leave
sub
xor
cmp
lods
lcall
jb
fs
nop
mov
mov
shll
jle
outsl
dec
pop
icebp
mov
xchg
cmp
int
and
or
addr16
push
sbb
lahf
sbb
mov
or
jmp
mov
pop
les
push
push
iret
test
fstl
dec
cmpl
test
fstps
scas
inc
mov
scas
nop
dec
pop
cmp
rolb
jae
adc
fstpl
les
dec
xor
adc
mov
pop
xor
pop
jbe
jns
adcl
icebp
stos
and
sbb
pushf
es
test
xchg
xor
fnstsw
lods
jl
je
mov
mov
sbb
cmp
xchg
enter
dec
lahf
xchg
push
data16
inc
mov
or
fldenv
lret
add
test
mov
push
ja
mov
jmp
pop
inc
jge
push
sub
jne
fidivl
jle
adc
sbbl
pop
add
jle
add
push
icebp
jnp
popa
adc
xor
mov
repnz
lahf
xchg
icebp
inc
in
shl
std
adc
in
sbb
xchg
xor
xchg
push
push
movsb
lret
jmp
mov
popa
stc
jno
dec
lock
lcall
std
or
inc
jo
jg
addr16
in
in
es
stos
xor
lock
ljmp
aas
cmp
cmp
outsl
adc
js
popa
ret
cs
push
movsl
add
lcall
int
xlat
pop
cmp
cmc
jmp
fs
lds
mov
std
xor
add
pop
add
cmpb
into
dec
lahf
repnz
push
test
fists
pushf
fcompl
das
je
shl
ss
sbb
das
int
test
addr16
insl
je
sbbb
insl
and
test
push
jb
in
dec
xchg
mov
mov
adcb
xchg
mov
repnz
inc
mov
mov
dec
dec
push
shll
cmc
adc
test
jo
in
dec
movsl
inc
sbb
inc
imul
push
pushf
das
push
xchg
scas
push
push
cmp
add
and
inc
and
in
cmp
pop
adc
fisttps
sub
push
and
mov
aad
adc
mov
push
sub
pop
or
cld
mov
xchg
call
jle
and
adc
xchg
adc
fdiv
and
pop
in
sti
push
dec
mov
mov
lcall
in
andb
test
add
or
sub
lds
pminsw
js
aam
adc
fstpl
cld
mov
or
mov
mov
or
cmpsl
or
or
enter
push
fsubl
xchg
test
mov
cwtl
sub
and
or
cltd
sti
out
xlat
sub
add
icebp
into
and
jp
pusha
fs
xchg
int3
mov
adc
sub
cs
mov
dec
push
stc
xor
dec
sbbl
push
adc
cld
mov
or
and
xor
adc
das
sub
push
dec
xor
iret
repnz
adc
pop
push
enter
adc
and
dec
popa
mov
jl
fdivs
iret
scas
inc
loop
mov
pop
push
push
test
andb
pop
mov
mov
movsb
mov
dec
int
outsl
fadds
scas
data16
stos
xchg
rcrb
xor
and
ja
sbb
test
xor
mov
xchg
out
push
pop
xor
mov
movsb
mov
mov
and
mov
jno
in
jmp
adc
xor
sub
les
mov
fidivrl
js
cwtl
pop
lods
sbb
xor
mov
dec
adc
icebp
jnp
sub
in
rcrb
sub
sahf
push
mov
fs
jecxz
pop
cmp
int
cwtl
and
xor
fsubs
push
and
xchg
outsb
shl
leave
sbb
hlt
mov
cltd
lahf
cmpsl
xor
call
adc
pushf
es
arpl
sbb
mov
test
ret
fists
add
xchg
jl
scas
push
cltd
xlat
cmp
in
sbb
sbb
stc
aaa
or
add
mov
cmp
js
das
add
addr16
xchg
mov
jg
cmp
shrb
jbe
fsts
ljmp
jnp
lahf
mov
aas
jnp
test
das
mov
and
addb
xchg
gs
js
jno
orb
out
sbb
dec
fdivp
push
inc
fiaddl
in
inc
pop
hlt
lock
sbb
movsl
daa
lods
insl
push
out
pop
push
out
jbe
and
mov
or
mov
push
sar
lret
pop
sahf
sbb
sbb
ds
mov
aam
push
and
add
push
aaa
dec
jno
dec
loope
repnz
clc
sub
lds
aad
cmovl
stc
cmp
jae
mov
popa
scas
jb
xchg
push
jmp
sub
in
xchg
sbb
out
and
jg
ja
mov
iret
shrb
stos
icebp
push
rcrb
lahf
jns
sub
dec
add
push
jp
mov
cmpsl
cmp
inc
into
or
add
mov
dec
push
not
xor
outsl
mov
repz
mov
popa
lret
ret
mov
and
pop
mov
dec
sub
fldl
iret
xor
mov
add
lods
stos
lret
out
int3
or
jb
add
icebp
push
scas
insb
sub
dec
es
rorb
mov
jge
sub
clc
in
mov
fs
das
mov
push
jo
xor
add
xchg
dec
es
clc
rcl
rcrb
cltd
inc
mov
int
pop
mov
int
fstps
cmp
lock
cld
sarl
mov
jp
subb
xchg
insb
fs
and
push
cwtl
fbld
in
mov
sbb
jg
out
sbb
fists
jecxz
jp
stos
push
fiaddl
push
insl
daa
push
adc
inc
not
call
mov
out
push
pop
xchg
addr16
ret
inc
add
mov
jp
xor
adc
sbb
popa
stos
stc
cmp
test
insl
arpl
icebp
xor
mov
sub
xchg
rolb
loop
dec
or
dec
sbb
mov
mov
test
insl
out
pop
push
push
les
mov
inc
push
sub
and
arpl
or
movsl
mov
mov
loop
scas
mov
repnz
in
out
sbb
in
push
popa
xchg
jns
xor
cmp
leave
push
int3
push
mov
lods
cmpsb
in
sub
xlat
testb
sahf
hlt
pop
aam
daa
stc
or
cli
and
jecxz,pt
imul
add
insl
xchg
icebp
xor
sub
loop
lock
dec
jno
in
xor
sbb
sub
fimuls
push
arpl
inc
std
addr16
sub
push
ret
loopne
jnp
and
shll
xchg
popf
mov
aam
cld
push
cld
and
and
inc
mov
repz
jae
std
xchg
andb
lods
push
pop
lcall
mov
sub
mov
scas
mov
imul
and
lea
mov
shl
outsb
in
adc
jmp
int
call
icebp
aad
xchg
aas
cmp
sbb
push
jl
dec
xchg
fxch
dec
lods
jp
inc
jae
and
fildll
cmp
inc
mov
dec
leave
popf
aaa
jecxz
mov
movsl
pop
mov
add
inc
push
jg
push
pop
scas
add
inc
mov
add
xlat
daa
rcrl
add
sub
sub
push
iret
jb
sbb
cmp
jle
cwtl
in
cmp
pop
or
roll
out
or
lahf
sub
xchg
add
add
xor
add
jg
ror
push
out
fldt
fstl
jp
ror
pop
shlb
sbb
mov
pop
fyl2x
dec
into
inc
insb
xchg
sub
mov
push
subb
or
pop
sub
lcall
push
mov
or
add
outsl
adcl
sarb
cmpsb
subl
xlat
push
dec
sbb
jge
fs
and
pop
femms
and
int
mov
sub
xor
inc
out
fsubl
sub
cmpsb
inc
imul
inc
fistl
pop
test
scas
xor
push
jns
mov
addr16
xor
cs
jecxz
sub
data16
xchg
fsubrl
pushf
bnd
mov
adc
insb
ret
pop
add
sahf
mov
adc
inc
mov
jl
cmp
fcoms
push
repnz
add
lock
inc
test
je
icebp
shl
inc
add
ret
shrl
sbb
mov
sbb
cmp
lods
lods
dec
sarb
mov
shr
cwtl
test
movsb
sbb
ret
xchg
stc
dec
idivb
enter
mov
lret
mov
sbb
or
pop
sub
pushf
inc
mov
or
ficoms
xchg
lcall
or
and
sub
idivl
pop
cmc
test
movsl
mov
jmp
push
and
or
rcll
jg
sbb
loopne
push
add
jbe
sub
mov
mov
xlat
lods
mov
jecxz
cmpsb
in
mov
enter
push
push
repz
push
scas
aaa
adc
pop
lds
dec
sbb
push
std
mov
pop
xchg
mov
push
xor
or
lods
jno
pop
arpl
cld
lock
mov
rcrb
dec
xor
jmp
pushf
cmpsl
in
daa
jae
and
cmp
or
jp
ljmp
push
or
pop
mov
data16
mov
adc
sbb
jnp
out
ficomps
fcoms
pop
xor
movsb
mov
add
mov
inc
shl
mov
and
push
arpl
loope
movsb
cmp
cmp
sar
fbld
push
xorl
xor
je
mov
loope
adc
xor
and
sub
hlt
adc
cltd
push
jno,pt
sub
scas
or
xlat
movsl
adc
pushf
dec
jge
xlat
fcmovbe
push
rcrb
aaa
xchg
sbb
mov
movsl
and
addr16
jo
leave
mov
loope
jne
stos
mov
jnp
in
into
ficomps
out
sub
scas
shlb
inc
pop
push
inc
mov
xchg
ret
sarl
decl
cmpsb
push
aas
aas
fldt
mov
out
fadd
cmp
push
into
lcall
jp
xchg
xchg
xchg
push
lods
cmp
leave
xchg
loopne
inc
xchg
cmp
mov
jne
adc
or
jns
mov
add
rcrl
nop
or
test
scas
jecxz
sbb
rolb
add
xor
popa
pop
or
push
adc
inc
xor
push
test
js
das
in
inc
xlat
in
push
push
jne
or
out
and
add
and
jbe
andb
mov
adc
icebp
insb
xor
mov
or
pusha
fcmovnu
xchg
scas
popf
leave
ljmp
ret
test
mov
lods
ffreep
cmpl
mov
cmp
gs
lods
mov
cmp
cmp
daa
notb
shrb
jge
aaa
test
adc
mov
jo
or
pop
mov
pop
xor
dec
mov
add
mov
adc
mov
stos
xchg
sub
add
jno
mov
out
cld
dec
pop
into
sbb
add
scas
ret
sete
fnstsw
fnsave
ljmp
fisttps
pop
inc
xlat
es
gs
xlat
cli
flds
pop
jp
std
fistpl
dec
pop
outsb
sbb
push
hlt
arpl
or
inc
call
int
xchg
or
push
lds
cmpsb
or
cmpl
push
cmpb
popf
xchg
fmull
jp
inc
shrb
push
lret
xchg
imul
mov
pop
cld
push
sbb
in
push
cmp
lds
or
xor
bound
add
clc
sub
aaa
mov
rcrb
push
dec
scas
sahf
adc
sub
pop
cmp
xlat
lcall
push
xchg
sbb
in
jmp
adc
and
jle
sub
push
cmp
push
fistpll
ljmp
test
mov
pop
fcoms
mov
cmp
cwtl
iret
jb
out
in
xor
xchg
mov
cmp
bound
fidivl
mov
je
pop
adc
or
and
jae
sbb
std
mov
adc
stc
xlat
outsb
push
aam
pop
punpckhdq
inc
aam
pop
add
cmp
scas
jle
out
je
cmp
add
loop
jmp
aam
lods
mov
and
sub
lret
in
fisttps
pop
xor
lret
ds
rep
movsb
inc
mov
push
inc
xchg
bnd
mov
test
xchg
es
addr16
and
inc
aas
sub
mov
fdivl
insl
pushf
pop
jp
jbe
jp
ja
sarb
dec
or
ret
jp
stc
fmull
dec
jmp
loop
js
dec
cwtl
inc
xchg
cmpsl
xchg
fwait
rorl
jne
or
adcl
lret
test
nop
std
jp
cld
aam
xchg
cs
lds
jbe
xlat
cmpsl
aad
and
test
les
sahf
shrl
fs
cmp
mov
xor
lock
and
data16
dec
xchg
shr
and
popa
fisubrl
std
dec
das
ljmp
insb
jge
neg
imul
ret
test
pop
mov
hlt
js
jecxz
test
xor
sbb
aaa
mov
xchg
int3
xor
add
add
sbb
push
mov
hlt
bnd
lret
sub
ja
mov
cmpb
hlt
test
mov
test
loopne
arpl
cmp
fisubrs
lds
jae
add
fidivrs
pop
out
inc
jo
mov
jns
out
mov
xchg
sbb
cmp
jle
push
je
es
mov
xchg
dec
sub
xor
je
xorl
sub
dec
shlb
or
cmp
mov
roll
das
inc
sub
push
mov
fsubrl
incl
push
sbb
push
pop
jo
sub
pop
dec
movsl
call
faddl
lea
fisttpl
das
subl
add
jbe
mov
cmp
sub
mov
cmp
dec
xor
push
les
or
mov
ret
add
insb
add
dec
lret
jecxz
loop
loopne
pushf
stos
sbb
in
mov
dec
dec
xor
in
pop
mov
add
push
cld
ficompl
stc
and
mov
push
test
sub
jmp
repz
adc
mov
test
int3
sahf
adc
add
mov
and
test
ss
mov
sbb
jbe
mov
mov
into
stos
jmp
scas
jno
pop
std
and
stos
or
xchg
jne
adc
dec
addr16
dec
lock
repz
ret
ficoms
dec
mov
mov
daa
je
lret
das
test
pop
xchg
lcall
insb
xchg
mov
leave
xor
les
pop
inc
mov
jl
jae
push
fimull
pusha
inc
mov
mov
inc
add
bound
add
jmp
adc
fdivrs
mov
jb
addr16
mov
rolb
addr16
fwait
inc
imul
add
jmp
jmp
bound
insl
jb
cmp
adc
and
xor
in
push
push
out
xor
pop
mov
outsl
je
adc
addr16
orl
lret
xchg
dec
mov
push
add
call
test
ja
xor
mov
jne
xchg
mov
mov
jg
add
jae
cld
inc
dec
add
push
or
pop
hlt
clc
test
adc
inc
imul
lods
inc
lcall
dec
mov
icebp
sti
cmp
and
mov
push
pop
mov
xor
aaa
jmp
pop
lods
jbe
jle
pop
push
pop
dec
inc
lcall
adc
inc
stc
lods
xor
xor
popl
adc
in
dec
les
inc
fs
mov
xchg
ret
loopne
and
outsb
stos
pop
adc
fimuls
lret
lds
cmp
daa
scas
data16
dec
subl
or
hlt
add
faddl
aad
and
shll
mov
lock
xor
push
rcr
aas
mov
jae
add
outsl
xor
in
mov
sub
in
sti
repnz
je
insl
cld
shrl
dec
rolb
fstpl
rclb
aam
addb
mov
or
outsl
orb
xchg
jae
push
in
or
mov
push
mov
sub
rcrl
push
hlt
imul
jl
rclb
movsl
ds
adc
push
insb
sbb
pop
jne
add
mov
inc
test
mov
add
pusha
and
int
fstpt
adc
add
xchg
sbb
cmp
clc
loope
fwait
ja
fbld
nop
sbb
xor
fpatan
out
cmpsl
jo
lds
mov
dec
inc
push
pop
mov
fcomps
movb
cmpl
jnp
jns
push
scas
shl
out
and
pop
ds
mov
jge
out
xchg
nop
jnp
pop
call
mov
scas
jmp
shll
ljmp
lret
inc
cmpsl
popa
cltd
es
orb
insl
test
repz
xchg
clc
jge
jbe
dec
sub
mov
into
pop
add
js
into
adc
jnp
or
xchg
push
pop
je
xchg
lea
hlt
mov
rorb
in
push
fiaddl
mov
popa
mov
or
pop
inc
fistps
pushf
jo
pusha
rclb
outsl
xlat
je
add
adc
sbb
or
ss
push
popf
push
rcrb
movsl
or
push
adc
test
cwtl
addb
push
add
mov
lcall
inc
push
dec
imul
loop
leave
movaps
ret
jb
fsts
dec
iret
push
or
sub
sub
mov
dec
sar
and
or
mov
jp
scas
outsl
lods
inc
inc
cld
cmpsl
in
ficomps
iret
adc
and
ret
xchg
pop
clc
sub
xor
adcl
cmc
out
iret
fists
adc
test
lods
sub
xlat
insl
jo
mov
mov
sti
addb
pusha
test
xchg
lcall
pop
xchg
xor
xor
mov
jns
daa
subl
pop
xor
mov
or
dec
out
or
mov
scas
mov
rcll
cmpl
jle
mov
adc
mov
std
inc
dec
push
xchg
mov
and
data16
ljmp
xchg
out
test
pop
or
dec
jne
sbbb
sahf
pop
dec
or
sub
fbld
rcrb
inc
call
stos
mov
cmp
in
jp
outsb
add
pop
fildl
pop
or
int3
lock
ret
xor
cltd
adc
mov
aaa
test
out
xor
mov
mov
jmp
ret
loopne
mov
xchg
push
jae
outsl
or
push
and
pusha
mov
aas
cltd
insb
xchg
sbb
into
cs
cwtl
mov
sbb
xchg
push
and
xchg
icebp
divl
movsb
adc
les
add
and
adc
in
add
mov
xchg
out
sbb
in
jp
and
add
je
ficoml
push
jg
lods
in
jns
dec
aaa
cli
jo
pop
mov
out
push
mov
jb
push
inc
mov
jb
cmp
int
imul
jne
out
or
xor
das
lahf
push
int3
jno
jbe
pop
push
xlat
pushl
popa
arpl
mov
jns
sub
mov
popf
dec
mov
mov
mov
mul
push
cmp
cs
ja
scas
inc
lea
mov
sbbl
out
cmc
sub
jne
test
push
cmpsb
mov
push
and
cmp
scas
mov
in
inc
inc
nop
inc
fsubp
push
test
mov
loopne
scas
stc
add
jbe
lret
loope
loope
push
mov
mov
ret
pop
mov
shl
fwait
cld
sbbl
mov
test
jl
cmp
div
cmpsl
test
and
test
dec
cltd
clc
add
arpl
cmp
sbb
fisubl
cmp
inc
add
sub
cmp
cmc
clc
dec
inc
xchg
fsubl
mov
testl
add
test
fs
sub
mov
cli
das
scas
mov
adcb
adcl
add
and
inc
inc
daa
pushl
arpl
push
jmp
leave
push
ds
clc
popw
jl
mov
or
push
std
fnstcw
pop
dec
xchg
adc
les
inc
jo
iret
cltd
test
repz
and
ljmp
dec
push
and
mov
push
pop
aad
lahf
cwtl
les
pop
les
dec
xchg
add
xor
test
mov
addr16
das
jae
add
inc
sti
ret
jno
jecxz
inc
addb
jg
or
mov
push
cmc
add
int3
jg
cmp
and
ret
and
dec
repz
adc
add
iret
nop
add
pop
dec
jnp
adc
jns
add
fcmovnu
lds
push
arpl
adc
loopne
mov
lcall
dec
add
pop
mov
lods
add
push
imul
test
jp
or
mov
cmp
repnz
insl
cwtl
sbb
ret
in
xchg
les
into
adc
dec
fisttpl
loope
je
add
sbb
inc
shl
stos
dec
and
mov
sar
sbb
xchg
pop
push
popaw
lds
aas
dec
jmp
ffree
pushf
aas
out
lret
orb
jg
or
stos
mov
xchg
out
insb
inc
popf
out
add
stos
leave
sub
scas
inc
shrl
mov
lcall
scas
sbb
daa
testb
mov
sti
jmp
subb
lea
call
xchg
or
jnp
lret
arpl
mul
test
pushf
add
adc
dec
or
mov
mov
xor
std
int3
repz
mov
mov
sub
jns
mov
pop
push
add
xorl
or
rolb
cmp
aaa
pusha
fwait
pop
push
repnz
shlb
push
mov
insl
fisttpl
mov
lret
pop
mov
add
out
dec
movsl
out
jge
adc
mov
jae
adc
dec
arpl
stos
pop
fldenv
inc
lret
stos
xor
pop
mov
in
loope
stos
aam
es
faddl
ja
mov
push
testl
jp
sub
jecxz
std
fucomp
das
insl
inc
mov
bound
bound
cmc
gs
mov
adc
movsb
jl
mov
add
xchg
les
mov
inc
xchg
popf
negl
sbb
mov
or
cmp
jecxz
popf
es
mov
cmp
je
pop
mov
aam
lods
shl
lret
sub
repnz
gs
cmpsb
cmp
mov
mov
mov
dec
mull
insl
or
push
xlat
adc
pusha
mov
and
outsb
aam
pop
out
xor
push
cli
ja
movsl
out
popf
iret
jle
andl
mov
and
xor
adc
imul
pop
mov
sbb
jns
adc
add
mov
or
inc
sub
cmpb
mov
cmp
mov
test
adc
gs
scas
xor
test
push
out
sti
dec
daa
cmc
inc
pop
jecxz
lahf
fwait
dec
out
pop
mov
out
dec
es
inc
adc
popf
xchg
stos
mov
sub
mov
lret
sbb
lods
int3
dec
and
inc
adc
add
and
cmpsb
test
inc
fstpt
lds
clc
add
add
and
in
cld
dec
outsl
int
jmp
pop
sbbb
jge
xor
dec
enter
in
lds
xor
adc
and
dec
xor
cmp
jne
pop
xchg
daa
xchg
dec
test
inc
xor
push
hlt
jg
stc
enter
cmpsl
jp
sbb
pop
in
stos
lcall
inc
cwtl
sbb
and
data16
repz
push
cmpsb
test
or
shll
fcomp
outsb
xor
mov
cwtl
int3
out
cmpb
xchg
mov
test
mov
mov
push
sbb
cmc
aad
cmpsl
sbb
popl
lret
ss
mov
insl
push
cwtl
push
xchg
mov
fstps
mov
outsb
cmp
pop
cmc
je
sub
mov
cmovae
push
fsubrl
add
adc
aas
nop
push
insl
push
imul
xchg
int
dec
dec
sub
mov
mov
or
movsb
imul
add
in
add
insl
or
int
sbb
jge
iret
dec
adc
jg
test
xor
ljmp
std
dec
stos
andl
jle
inc
dec
imul
orl
movl
addr16
xlat
xchg
and
pop
fwait
sti
pushf
in
aam
fnstcw
jnp
fisubrs
pop
mov
or
int
xchg
sub
ljmp
sbb
ds
jl
mov
aas
lret
xor
mov
and
fldl
test
pop
fucomi
das
cmp
test
jge
lods
or
pop
mov
add
test
jnp
sub
lods
imul
bound
xor
inc
mov
inc
adc
leave
jae
or
push
int
jg
jecxz
test
and
jg
aam
clc
loop
sub
loop
pop
out
push
jmp
or
jbe
mov
or
out
sbb
lods
testl
jns
sbb
mov
lea
xchg
add
mov
out
jbe
dec
aam
mov
into
mov
in
mov
aas
hlt
xchg
ljmp
repz
rcr
popa
fidivs
mov
lret
mov
arpl
sub
mov
pusha
repz
and
pop
loopne
sbb
xor
imul
push
jmp
iret
push
push
lds
fists
popa
stos
and
dec
adc
les
xchg
ret
mov
mov
lret
std
push
call
jg
nop
mov
mov
ljmp
or
xchg
test
pop
shlb
pusha
push
lea
push
mov
scas
fwait
lret
lahf
rclb
xchg
inc
or
pop
jno
fmuls
jp
dec
cmp
xchg
cmp
mov
adc
aas
sub
movsb
rcrl
cmp
jbe
and
lds
popf
push
andl
xchg
andl
popf
cmp
shlb
xchg
push
jo
mov
leave
mov
push
aas
addl
fs
jbe
mov
mov
adc
roll
xchg
lret
inc
mov
jae
dec
scas
repnz
mov
adc
pop
pop
fisubl
popa
mov
sbb
mov
in
ja
nop
xchg
push
dec
cmp
sub
mov
ja
push
pop
jb,pt
jbe
and
jg
jle
jg
fisubrs
push
popa
and
jo
dec
jmp
mov
fstl
cmpl
add
xchg
mov
add
lods
push
imul
mov
mov
xchg
add
or
pop
lahf
adc
mov
mov
cli
add
mov
xchg
inc
jne
pop
in
fwait
sbb
sbb
arpl
movsb
xchg
push
cpuid
aaa
idivl
inc
adc
pop
movsl
aad
cmp
mov
pusha
xchg
mov
or
dec
pop
scas
mov
and
mov
xchg
cld
addr16
fstl
push
or
xchg
jo
not
mov
cmp
xlat
jo
jae
sarb
loopne
xor
xor
mov
push
xor
cmp
adc
or
addb
mov
mov
aaa
add
xchg
in
out
loope
inc
xchg
xor
inc
push
loope
xchg
pop
sub
inc
jecxz
pop
sbb
jae
dec
imul
lods
test
mov
cld
sub
mov
or
imulb
add
divb
shlb
fisubrl
hlt
cmp
pop
or
or
ss
xchg
popf
shrb
call
cmpsb
xchg
fadd
lahf
enter
mov
cmpsb
cli
sbb
push
std
jmp
dec
lcall
loopne
mov
movl
insb
jb
xlat
dec
or
sbb
test
fcompl
incl
add
pop
dec
popf
lret
xlat
push
sbbb
xor
mov
jae
lcall
jp
xchg
adc
inc
adc
dec
mov
push
inc
xchg
mov
push
pop
mov
iret
ds
outsb
jb
call
ror
loopne
jge
lea
sub
pop
push
mov
mov
daa
fiadds
shlb
loop
push
cltd
aad
inc
xchg
shrb
into
shlb
adc
dec
jle
mov
or
cli
xchg
in
imul
mov
add
lret
ljmp
sub
mov
sub
pusha
jg
lret
sub
add
sub
in
cmc
inc
lods
insl
jbe
sbb
jmp
ljmp
int
xlat
mov
mov
mov
fadds
sbb
lock
mov
insl
mov
daa
nop
mov
scas
negb
cmpsb
test
out
push
sar
loope
andb
rolb
movsl
stc
daa
pop
movaps
fistps
xchg
std
cmp
xor
adc
out
out
ficompl
inc
and
or
bound
sub
pusha
ficoml
iret
lret
int
jo
sub
or
aas
mov
out
jmp
shll
mov
bound
mov
xchg
pusha
adc
mov
cmc
jge
or
pusha
data16
fsubs
push
int
lret
cmp
insb
out
sub
les
mov
cli
push
dec
data16
in
sbb
inc
cmp
test
xchg
mov
xchg
push
mov
out
out
jnp
scas
jmp
pop
xor
int
test
inc
push
add
rcrb
xor
adcl
pop
lret
repnz
fisubrs
sub
jle
add
ds
fnsave
xor
int
lock
cs
sub
mov
sub
mov
shrl
adc
mov
inc
mov
pushw
in
cld
push
jp
and
or
inc
cmp
arpl
mov
inc
xor
test
outsl
or
mov
insl
int
adc
cld
test
arpl
scas
or
jp
xor
ss
inc
insl
add
and
lds
into
sti
xlat
pop
faddl
mov
ret
in
add
dec
inc
xchg
mov
jno
cmpsl
and
jo
in
mov
icebp
cmc
repnz
xchg
push
movsb
add
dec
test
stos
outsl
les
rorb
fwait
jne
sbb
arpl
fistl
movsl
jae
dec
inc
mov
jbe
jmp
shrb
adc
jne
mov
mov
lret
dec
fidivl
out
push
imulb
or
in
movsb
stos
inc
adc
sbb
mov
loope
out
inc
pop
xchg
jle
cmp
fdivs
add
fldt
outsl
mov
fs
cli
imull
shlb
gs
ret
ret
mov
sti
adc
mov
cmpsl
popf
outsb
pusha
xchg
je
xor
rolb
mov
jne
stc
xchg
push
mov
add
fdiv
test
jb
push
mov
cmc
dec
pushf
xor
lcall
cmc
rcrl
fisubrl
mov
leave
sbb
inc
sahf
stc
lock
test
or
rcl
lret
jp
scas
and
dec
adc
sub
insb
add
das
test
in
pop
pushf
insl
inc
push
cmp
adc
mov
imul
cmc
ss
inc
ja
les
rclb
daa
sarb
push
cmp
fucom
inc
mov
dec
sbbl
push
imul
aam
pop
add
jmp
mov
cmc
int3
mov
inc
jg
outsb
adc
cmp
jno
fldcw
stc
mov
dec
insl
jp
add
sbb
lret
idivl
jnp
jno
adc
dec
cld
and
sbb
outsl
imul
mov
fxtract
lret
lcall
adcb
pop
xlat
fdivl
out
stos
push
mov
loopne
jne
jg
sarb
and
xor
in
test
into
jbe
in
dec
or
in
add
push
mov
sti
dec
ffreep
test
mov
subb
cmp
cwtl
sbb
call
add
pop
jp
pusha
xchg
pop
es
sbb
movsb
out
add
fistpl
lcall
fcomp
fidivs
sub
push
addr16
adc
mov
xor
mov
pop
dec
testl
pushf
cmpsb
aaa
cmp
std
and
xchg
js
pop
dec
xchg
mov
add
hlt
fst
xor
ret
mov
stos
add
mov
lahf
out
ljmp
stos
loopne
mov
pop
cmp
hlt
popa
aam
das
out
rcrl
mov
jno
popf
pop
jg
leave
xchg
scas
jno
test
fldl
and
mov
cli
aad
in
inc
dec
and
aas
sbb
sbb
jmp
ficoml
mov
or
in
dec
cs
or
fsub
popf
or
loopne
cmp
mov
inc
or
ljmp
test
pushf
or
fadd
mov
add
aas
popa
sahf
mov
repnz
add
dec
fcoml
pop
int3
adc
adc
cltd
notl
jne
push
cmp
outsb
out
jg
add
mov
push
cmp
in
and
and
add
adc
shrb
mov
movsb
outsb
mov
mov
out
outsb
adc
imull
mov
inc
dec
xlat
lret
test
daa
xchg
lret
mov
pop
sahf
xchg
cmp
adc
xor
push
inc
lahf
stos
xchg
push
popf
movsb
dec
lock
gs
sub
fisttpll
addr16
stos
repz
jge
push
repz
pop
mov
cmp
leave
add
jg
jg
mov
xor
lds
inc
mov
xchg
mov
lea
jmp
dec
or
lret
adc
cmp
xor
js
xor
xchg
push
cmp
adc
ds
mov
call
aad
cmp
sub
jl
addr16
mov
flds
shrl
mov
shll
push
inc
dec
sbb
mov
hlt
mov
push
inc
sbb
fidivl
pop
and
and
mov
into
sbbb
mov
sbb
fneni(8087
inc
rcll
mov
sub
fwait
mov
mov
pop
sbb
addr16
cmp
lods
je
xchg
mov
sarb
pusha
fidivl
adc
clc
enter
add
mov
ret
mov
pop
int3
mov
scas
mov
lcall
dec
sub
pop
psubd
and
jge
add
pop
enter
xor
ret
test
jecxz
mov
das
mov
xchg
and
jne
fidivs
bnd
andb
push
pop
xchg
mov
pop
jb
xor
sub
push
lahf
out
pop
adc
mov
xchg
out
xchg
and
into
cli
orb
mov
mov
pop
mov
xchg
popf
lods
aad
dec
push
or
je
pushf
or
lret
mov
xchg
push
or
mov
lcall
mov
cmp
scas
pop
pop
add
loop
rcrb
pop
cmpxchg
mov
mov
in
dec
sub
sti
pop
fcmovne
sbb
mov
ljmp
and
into
or
jle
inc
xchg
scas
xor
repz
ret
jg
popf
lds
push
sbb
insl
fimuls
std
mov
outsb
negl
sbb
and
insb
je
and
cmp
add
sub
out
addl
cmc
pop
rcll
cmp
nop
loope
add
mov
dec
xchg
mov
in
sub
sub
flds
jns
sub
sbb
add
jl
rolb
adc
enter
out
pushf
mov
dec
pop
xchg
into
mov
lahf
or
arpl
out
notl
ljmp
popf
sub
rcl
stos
lods
sub
addb
mov
and
ss
mov
stos
jb
or
or
les
sub
mov
les
ds
repz
xchg
jmp
sub
mov
lret
cmp
dec
adc
dec
or
jecxz
push
pop
and
and
xlat
xchg
dec
aam
sub
cs
mov
xor
out
sub
xchg
and
and
lods
icebp
inc
aaa
push
mov
xchg
cmp
lret
lahf
dec
iret
adc
xor
stc
xlat
leave
sub
sarb
add
aaa
shlb
pusha
cmp
push
or
sbb
imul
and
inc
test
add
imul
aaa
mov
and
jmp
mov
negb
popf
jl
inc
mulb
or
adc
gs
sub
cltd
sub
out
ret
andb
scas
pusha
sti
push
xor
cmp
pop
dec
mov
xor
aas
lods
js,pn
sub
lds
pop
rorb
jae
jl
lahf
in
sub
fbstp
loop
insb
js
mov
divb
daa
push
push
adc
rcrl
enter
pop
pop
push
sbb
sbb
xchg
dec
stos
xor
or
hlt
mov
or
arpl
leave
push
iret
popw
fcoml
xor
xchg
xchg
xlat
push
xor
and
enter
stos
test
lcall
pusha
sbb
mov
mov
sub
pop
rcr
add
push
pop
aad
bound
aam
inc
sbb
add
xor
xlat
push
and
add
sub
or
ja
dec
and
mov
dec
push
into
mov
cmp
ss
xchg
std
ret
or
popf
dec
sub
jbe
add
mov
push
test
dec
call
sbb
cltd
js
mov
sub
fists
ret
in
adc
xor
je
pop
mov
or
shlb
std
ja
rcrl
loop
pop
sub
aas
jne
dec
pusha
and
lcall
cltd
push
mov
int3
dec
dec
popf
pop
out
andb
aad
cld
push
cmp
mov
std
xor
shll
sbbl
addl
in
rcl
rorb
pusha
aad
int3
lcall
jmp
pop
and
out
nop
fstpl
push
mov
xchg
cli
test
jae
iret
cmp
adc
lret
push
out
fwait
adc
xchg
jnp
js
xor
and
pop
cmpsb
xor
xchg
fs
pusha
out
push
hlt
adc
pop
jl
mov
rolb
mov
xchg
xor
lret
jge
pop
fstl
xchg
loope
mov
sub
ljmp
jns
stos
notb
cli
fsts
or
outsb
push
adc
imul
push
mov
xor
inc
pop
fwait
sub
outsl
mov
push
out
xchg
sbb
mov
popf
mov
ss
pushl
sbbl
call
push
repz
inc
lods
sub
or
mov
pusha
fisubl
out
cwtl
or
adc
xchg
int3
xchg
add
push
imul
xlat
adc
mov
repnz
and
sarl
mov
hlt
inc
mov
gs
mov
lea
cli
mov
mov
mov
arpl
hlt
pop
xchg
and
out
or
sbb
inc
test
std
push
in
jb
mov
dec
cmp
es
add
test
xor
stos
mov
popf
ret
into
dec
into
sub
xchg
pop
ret
stos
sub
and
jne
mov
add
mov
jne
pop
call
or
dec
loopne
fwait
fwait
and
dec
loope
or
shll
mov
dec
insb
ret
mov
insl
xor
cs
and
sbb
sbb
aaa
lcall
aaa
or
mov
addr16
cmpsb
fisubs
jle
jle
lea
mov
mov
push
or
pop
ljmp
xchg
aam
xchg
imul
inc
adc
stos
ret
std
jb
xor
std
ja
push
sub
and
xor
xchg
insl
in
int3
xchg
push
aaa
dec
incb
ljmp
movsb
mov
outsl
addr16
ljmp
and
dec
adc
ficoml
inc
shll
jmp
push
sub
pop
push
rcr
imul
or
clc
arpl
adc
add
ret
dec
int3
sub
fists
mov
add
sbb
sub
mov
add
mov
xchg
mov
push
fwait
mov
inc
bound
xchg
push
insb
scas
movsb
xchg
outsl
lds
pop
pop
push
add
push
out
scas
in
test
lds
sbb
lods
mov
or
jp
and
mov
cwtl
lahf
push
adc
aaa
cmp
in
dec
idiv
push
mov
ja
mov
addr16
mov
cltd
je
jp
or
repz
dec
push
mov
and
push
fisubrs
call
push
adc
add
fs
adc
jns
mov
push
test
push
pop
cltd
movsl
or
nop
and
scas
add
sub
lret
add
push
inc
xchg
dec
scas
js
ss
push
test
adcl
ss
adcl
rcl
cmp
xor
clc
cmp
scas
pop
xor
pop
adc
mov
repnz
pop
repnz
mov
cmpb
lret
repz
in
fstps
adc
sbb
fisubs
out
push
push
mov
jmp
cli
lea
sti
int3
inc
push
jmp
mov
aas
das
das
fistpl
mov
sub
test
inc
add
std
xor
lds
inc
popa
xor
mov
movsl
iret
adc
mov
stos
pop
test
mov
mov
pop
jo
xor
stc
jnp
pop
mov
loop
imul
fs
inc
out
aam
imul
jle
stos
cmpsb
xchg
out
call
mov
and
sbb
and
mov
jg
or
and
jo
cli
xor
in
mov
testb
das
movsb
jns
vaddsubpd
dec
call
cmpsl
subl
cmp
fstpt
addl
scas
push
orb
repnz
fwait
mov
int
cli
out
jnp
out
push
jo
push
fistl
push
jle
push
das
js
xor
xor
clc
inc
xchg
sub
lods
mov
in
jmp
and
clc
ljmp
pop
pop
insl
je
adc
xor
sbb
mov
lret
and
je
xor
sub
mov
cmp
adc
push
out
test
jl
cmp
jbe
loopne
jge
in
cmp
out
insb
inc
adc
jle
or
adc
out
mov
fwait
addr16
lods
movsl
xchg
dec
aam
inc
loop
lret
out
fimull
das
dec
leave
pusha
pusha
cltd
stos
or
xor
xchg
dec
mov
les
pop
jbe
adc
jmp
mov
aaa
mov
cmp
ds
sub
imul
loopne
or
jae
mov
push
jge
repnz
hlt
aas
cwtl
push
in
dec
cmp
popf
mov
loope
mov
es
inc
cmpsl
jl
fidivs
mov
and
mov
imul
mov
sub
dec
xlat
adc
lods
pop
movb
pop
fwait
mov
movsl
sarb
jg
test
cmp
jo
pop
sub
add
dec
dec
fdivrl
mov
lret
cli
data16
pushf
add
scas
lock
sahf
stc
cmpsb
and
jl
push
nop
mov
mov
xlat
lret
xchg
arpl
movsb
fbstp
loopne
call
out
loope
inc
jns
out
test
pop
xor
pop
and
xor
out
push
push
lret
push
push
test
and
leave
mull
enter
mov
cmp
addr16
mov
sub
sub
repz
movl
fwait
mov
in
inc
xor
xor
and
adc
and
mov
push
in
add
out
fnclex
adc
cs
push
mov
ret
xor
shll
test
dec
push
cmp
or
jo
sbbl
lret
cmp
ret
iret
sbb
cmp
jg
stc
fiaddl
into
xor
add
mov
shll
adc
xor
je
sbb
sub
inc
or
cmovb
mov
lds
xchg
mov
sbb
test
ret
sub
je
jge
mov
jmp
cmc
mov
mov
jnp
xor
pop
push
mov
imul
mov
data16
jg
xchg
push
gs
add
out
mov
inc
ss
or
mov
or
mov
dec
dec
jge
stos
pop
jmp
bound
pop
sub
cmp
test
je
add
fisttps
sahf
rcrb
jne
shll
enter
jmp
xchg
mov
xchg
int3
daa
gs
push
push
repnz
mov
or
and
lret
addr16
ret
aaa
sub
dec
pusha
int
imul
ror
mull
mov
inc
sub
push
loopne
pop
xlat
cmp
xchg
jae
dec
mov
mov
mov
pushf
test
pusha
scas
pop
test
fldt
arpl
mov
cld
movsl
cwtl
or
push
imul
insb
xchg
cmp
sub
stc
fadds
dec
inc
xchg
mov
in
add
adc
dec
xlat
roll
push
push
push
adc
mov
jecxz
stc
arpl
cmpsb
adc
pusha
mov
mov
mov
mov
jns
pop
shll
lea
push
push
adc
out
gs
push
sbb
cs
sbb
nop
aas
cmp
push
push
jge
cld
cmpsl
dec
cmp
leave
adc
fs
sub
push
ret
lcall
add
xlat
push
push
dec
xor
or
insb
jle
mov
xchg
jbe
addr16
pop
xchg
pushf
mov
outsl
inc
inc
cmpsb
xchg
dec
mov
std
jecxz
pop
push
sbb
xchg
pop
cmp
cmp
mov
dec
xchg
addb
dec
shlb
mov
adc
into
orb
aam
push
loop
mov
or
mov
dec
outsb
push
dec
mov
cltd
cmp
mov
xchg
lds
stos
inc
nop
scas
clc
cli
pop
dec
sbb
push
aam
xchg
adc
mov
xor
pop
imul
mov
dec
push
movsl
data16
add
inc
and
push
aad
cmp
lds
mov
repz
push
daa
mov
stc
pop
aas
mov
repnz
scas
loope
arpl
mov
incb
adc
sbb
mov
out
xchg
rcrb
pop
mov
sbb
lcall
adc
cwtl
mov
mov
loope
mov
add
jnp
mov
cmpsb
fists
orb
lea
jno
xor
popa
mov
rcrl
adc
and
mov
fstpl
ljmp
jns
out
icebp
and
push
dec
sti
mov
mov
push
stc
scas
repnz
rorl
es
cmp
jle
hlt
and
lea
out
popa
inc
sahf
inc
pop
outsl
sti
mov
das
cmpsb
rcrb
icebp
ret
mov
outsl
sbb
call
lcall
mov
sbb
xor
addr16
sub
add
fs
scas
or
sub
ja
xchg
sub
iret
and
mov
adc
mov
adc
test
cmpl
je
adc
sub
pushf
sbb
cmp
std
dec
mov
sbb
inc
xchg
inc
mov
adc
fsubr
adc
sub
enter
dec
lds
dec
mov
call
cwtl
jmp
xchg
iret
hlt
cmp
push
out
in
arpl
scas
mov
xlat
adc
inc
or
mov
mov
test
into
fdivl
xchg
jbe
pop
lods
jmp
loope
loope
rorl
mov
adc
outsl
mov
adc
jae
pushf
add
rcrl
cmp
aam
fwait
sub
cltd
pushf
enter
push
add
lods
pop
sbb
pop
push
jg
xchg
das
popa
xor
packsswb
mov
inc
ljmp
ret
cmp
loope
jmpw
repnz
repz
clc
cwtl
or
out
dec
ret
rcr
sub
aas
mov
lret
hlt
dec
arpl
dec
mov
pop
incb
or
daa
and
mov
mov
xchg
adc
jb
adc
mov
sub
inc
dec
xor
pop
xchg
bound
sbb
and
repz
rcrb
unpcklps
out
frstor
mov
inc
orl
pop
cmp
dec
xchg
idiv
cmpl
daa
jo
sahf
outsl
xlat
inc
dec
out
insl
and
dec
add
fdivl
cmpsl
jle
aad
jns
inc
mov
test
mov
pop
adc
aad
push
pushaw
popa
pop
and
or
shll
xchg
adcl
aam
pop
stc
jg
loopne
sub
mov
jle
mov
pop
nop
loop
add
or
cli
and
xor
shll
out
adc
inc
push
fs
xchg
adc
push
adc
imul
xor
rcpps
push
aam
cmp
mov
xchg
mov
cs
adc
fwait
push
ficomps
daa
push
dec
fistpl
or
pop
mov
push
es
inc
mov
xchg
jb
push
push
mov
mov
push
shl
dec
ss
cmp
pushf
lahf
sub
notb
inc
clc
test
pop
mov
push
test
ja
cltd
mov
movsb
mov
aaa
and
xor
add
cmp
push
lret
pop
mov
out
or
ja
pop
inc
and
cmpsb
stc
cmc
inc
pop
fldenv
sbb
stos
dec
mov
xlat
sbb
inc
mov
repnz
sbb
sbb
stos
add
aaa
sbb
das
int3
inc
cli
cmc
addr16
pop
adc
inc
push
add
fldl
lret
jl
xchg
mov
call
sbb
ljmp
lds
addr16
fildl
lods
push
xchg
or
iret
mov
push
sbb
cld
mov
or
xchg
sub
jnp
and
xchg
imul
test
stos
loope,pn
xor
xor
or
shll
mov
sub
fcomip
leave
mov
nop
inc
xchg
fwait
scas
sahf
pop
inc
popa
mov
in
sub
out
pop
xchg
ret
ds
icebp
movsb
clc
and
dec
nop
mov
movsl
sub
jns
mov
outsb
int
mov
cmp
mov
inc
pop
xchg
or
outsl
jge
insl
mov
cmp
jg
xor
scas
add
nop
xor
push
add
repz
aad
push
pop
add
lea
xor
insb
daa
pop
lock
sub
insl
js
pop
les
add
sbb
mov
leave
pop
xchg
cmp
pop
push
les
cmpl
jno
popf
out
nop
dec
popf
lahf
pop
push
aad
ffree
adc
pusha
adc
jmp
loope
jne
adc
xchg
fdivrl
icebp
into
cmc
adc
test
addr16
xor
in
sbb
bound
dec
imul
mov
mov
les
pop
in
clc
xor
xchg
mov
in
pop
pop
ja
pop
or
arpl
ds
lahf
jno
and
arpl
mov
int
lds
sbb
out
add
inc
pop
jl
sbb
cmp
dec
sti
sahf
jb
pop
ret
lret
mov
enter
xor
cmp
or
sarb
dec
ret
fdivrs
dec
ja
mov
pushf
xchg
xchg
dec
sub
pushf
insb
mov
iret
or
jb
imul
iret
subb
sbb
das
jne
pop
cmp
orl
fldenv
mov
add
cltd
repz
int3
adc
gs
mov
xorb
push
dec
adc
jecxz
mov
xchg
movsl
clc
in
jp
call
sbb
cmc
lock
push
imul
pop
rcrl
sahf
lods
addr16
out
jp
or
dec
imul
pop
pop
mov
sahf
ljmp
out
lcall
push
and
fmuls
pop
loopne
arpl
nop
inc
stos
jle
jns
je
fbld
mov
loope
mov
imul
mov
push
adc
sub
jbe
adc
in
repz
loope
mov
push
repz
cmp
int
mov
cwtl
gs
push
repz
xchg
mov
int
ret
fnstcw
adcb
push
iret
mov
push
movsb
and
ds
jg
xor
pop
xlat
sub
in
fstps
and
das
shlb
inc
lret
xchg
pop
daa
les
pop
mov
pop
pop
add
mov
ljmp
mov
ljmp
inc
push
xchg
addr16
repz
into
pop
out
pusha
ja
lahf
fists
movsl
out
add
and
clc
clc
jo
jmp
or
aad
sub
sahf
outsl
jb
mov
pop
dec
pop
push
pushf
cmp
cli
adc
or
mov
call
pop
aas
inc
fldl
arpl
stos
and
stos
loopne
mov
lret
addr16
repz
sub
or
xorl
das
mov
out
push
or
cltd
jecxz
mov
inc
pop
clc
jp
pop
xor
adc
das
push
mov
cltd
imul
outsb
sarb
xor
dec
mov
not
or
dec
add
xchg
mov
adc
sbb
push
fstpl
mov
push
jb
xchg
std
add
inc
cmp
dec
push
push
or
dec
pop
or
cs
jnp
lahf
iret
std
lock
jne
dec
sti
std
pop
callw
outsl
cmp
jecxz
sub
inc
mov
jns
je
xchg
cltd
bnd
xchg
sahf
jo
mov
sub
or
mov
xor
or
push
daa
add
pop
xor
sarb
inc
movsb
push
aaa
arpl
push
ret
xchg
mov
sbb
popf
mov
jnp
in
inc
mov
mov
in
add
mov
sbb
dec
sub
add
sbb
dec
pop
aam
mov
repz
scas
add
pusha
push
mov
or
pop
dec
dec
add
adc
xor
jb
pop
stos
adc
push
or
sbb
adc
scas
dec
pusha
xor
jns
lock
and
adc
jnp
inc
dec
xchg
popf
loope
shll
jmp
je
lret
pusha
icebp
loopne
outsl
mov
outsb
lods
jae
je
sahf
jo
pop
jmp
iret
jnp
test
lahf
ds
enter
adc
popa
rcl
in
in
scas
je
or
mov
cmp
negl
sub
into
jmp
push
adc
inc
filds
xor
ljmp
pop
xchg
xor
xor
or
in
stos
inc
fcom
cmpsl
fucomi
daa
mov
cld
mov
mov
xor
sbb
mov
inc
dec
sbb
xor
inc
adc
fs
aaa
aad
cmp
inc
lahf
test
push
sub
push
cmp
adc
cmp
jge
jge
jns
xor
mov
fs
or
inc
sahf
and
xchg
xchg
mov
rorb
arpl
bound
xorb
fs
inc
or
xchg
inc
adc
gs
and
pop
mov
call
push
sub
sarb
es
rorl
push
test
out
sbb
fstl
std
push
pop
cmp
ss
mov
aas
dec
fsubrl
jns
les
xor
cmpb
arpl
mov
pop
gs
stc
in
mov
out
movsl
aad
push
jg
sbbl
push
mov
add
mov
pop
cmp
movsl
ficoml
and
sbb
and
aam
or
push
pop
push
pusha
xor
adc
mov
push
jg
pusha
repz
mov
push
sub
adc
xchg
sbb
jb
xchg
sub
pop
mov
lret
and
cmpl
push
pop
stc
cmpsb
adc
lahf
cmpsl
icebp
or
add
shrb
faddl
insl
pop
fwait
mov
or
mov
mov
xchg
and
cwtd
push
jp
jmp
pop
cltd
out
cmc
stos
fidivl
and
adcb
add
decl
adc
cmp
aas
push
aam
cmp
inc
xchg
rolb
inc
add
push
arpl
movsl
xor
sti
lods
fcoms
jb
loopne
mov
xor
pusha
mov
pop
or
and
jns
arpl
jecxz
call
or
cmpsl
lods
ja
ret
insl
push
inc
xor
mov
sub
int
je
popf
test
fstpl
mov
addr16
test
nop
push
and
clc
icebp
or
test
cmp
imul
shlb
imul
adc
mov
inc
jo
cmp
cmp
jbe
dec
xor
jo
lahf
xor
shll
scas
adc
aam
inc
mov
inc
add
pop
sbb
pop
cmpsl
rcrl
jge
mov
loop
jmp
xchg
mov
jge
jne
xor
inc
ror
dec
sub
adc
movsb
nop
les
add
popf
fcoms
lods
mov
xchg
shr
mov
sahf
sbb
lret
fstps
scas
pop
xchg
in
pop
addr16
mov
sahf
insb
in
testb
shl
push
in
cmp
mov
and
jecxz
push
xchg
loopne
mov
mov
mov
das
jo
inc
inc
jnp
cmp
repz
or
jmp
mov
add
inc
sbb
mov
std
or
scas
or
xchg
mov
xor
push
lret
movsl
repz
pusha
dec
dec
dec
das
into
ja
cs
lock
push
dec
jl
adc
fdivrs
or
cmp
scas
decb
cmp
lock
or
xchg
adc
jl,pn
mov
sub
xchg
adc
rclb
push
mov
cld
or
sbb
lds
pop
out
inc
and
enter
lret
sub
xor
mov
push
xchg
sbb
and
inc
imul
movsl
ds
sbb
dec
outsl
lea
pop
jns
in
mov
sbb
xchg
rorb
dec
cmp
bswap
mov
movsb
repz
mov
and
repnz
popf
sbb
fcmovnb
das
fimull
lcall
mov
subl
addr16
adc
push
mov
in
fucomip
icebp
lods
js
jae
mov
cmp
loopne
dec
sbb
or
cli
lret
cmp
xchg
pop
inc
repnz
or
test
in
fidivrs
mov
push
fcmovu
jle
enter
and
les
decl
inc
ds
xchg
es
add
std
cli
xchg
jbe
daa
adc
mov
xchg
jmp
mov
dec
mov
cld
lcall
testb
add
roll
xchg
test
pusha
jge
dec
es
jmp
scas
and
test
ret
js
mov
mov
rorl
sahf
ja
push
adcl
insb
icebp
pop
sub
ljmp
xor
pop
cmpsl
sbb
mov
gs
ljmp
into
repnz
mov
ror
cmp
bound
xchg
cmp
inc
mov
repnz
inc
mov
mov
pusha
inc
jg
into
pop
mov
jae
mov
push
clc
addl
rcl
xchg
xor
aaa
pop
mov
or
cmc
out
mov
cwtl
cmp
cwtl
cmpsb
lret
loopne
pop
sub
repnz
ret
test
sti
repz
cmp
jbe
mov
xchg
es
stc
cmp
lret
sbb
adc
addb
sub
cld
or
dec
inc
sbb
mov
filds
andb
mov
inc
inc
push
int3
rcrb
mov
jle
cmc
mov
sbb
out
stc
fadds
ret
xor
sub
stc
xchg
ret
xchg
mov
loopne,pt
or
pusha
add
out
mov
inc
addr16
adc
pop
loope
mov
cltd
cld
mov
mov
dec
sbb
push
mov
xor
sbb
mov
sub
ror
mov
sti
xor
insl
mov
stos
out
push
or
xor
aam
xor
push
xlat
aaa
iret
or
xchg
jb
jo
jb
cmp
xchg
subl
sbb
loopne
sub
outsl
add
dec
in
jo
pop
bound
ja
filds
mov
pop
dec
lods
imul
pusha
into
insb
in
incl
frstor
push
inc
add
cli
out
cmp
jmp
pop
lahf
mov
fiadds
rorb
bound
mov
adc
inc
arpl
js
dec
dec
ljmp
mov
jae
inc
andl
dec
movl
je
lea
push
push
jns
fnstcw
arpl
mov
xchg
pop
negl
inc
inc
mov
jg
mov
mov
sub
les
into
bound
jo
loop
dec
icebp
inc
loope
jg
jle
movsb
into
lds
pop
mov
shll
xchg
xlat
xlat
fmul
push
negl
rolb
clc
jmp
sub
jnp
mov
jp
roll
lods
aad
or
cmp
in
neg
inc
test
cltd
sti
jl
es
xor
jbe
addr16
push
stos
sub
lods
dec
xor
jmp
popa
lea
push
adc
outsb
push
std
mov
xchg
aad
adc
pop
sti
cmpsl
push
icebp
mov
stos
les
jg
dec
mov
pop
inc
addr16
add
jne
test
unpckhps
sbb
xchg
and
mov
ficoml
xor
dec
push
pop
pushf
push
xchg
les
popl
pop
mov
pop
or
fistl
xor
jbe
in
mov
rcrl
adc
and
ljmp
push
dec
jbe
in
out
jno
add
xor
mov
push
test
js
xor
popf
push
mov
inc
mov
mov
cld
xchg
mov
pop
jo
cmp
mov
xor
dec
int
mov
mov
xchg
in
or
nop
outsb
je
cld
add
imul
jb
sub
adc
sub
adc
and
lret
iret
and
rcrl
pop
xchg
pop
push
add
sbb
mov
addr16
fimuls
mov
jo
push
add
xor
add
and
jb
xchg
cwtl
fdiv
adc
mov
ljmp
mov
icebp
fmull
cltd
jl
add
and
cmp
adc
mov
pop
jg
mov
outsl
inc
aas
sbb
xor
outsb
jg
mov
out
arpl
push
sbb
push
insl
hlt
adc
mov
xchg
add
int3
es
xchg
repz
insb
jge
std
jne
xchg
lods
push
lds
or
jno
clc
fists
sbb
shl
sbb
inc
xchg
mov
loop
clc
hlt
les
sub
or
in
mov
aad
inc
aad
push
pop
les
and
pop
sti
mov
in
call
pop
mov
jg
ljmp
sbb
mov
sub
and
jbe,pt
xchg
jns
lret
xor
inc
mov
xor
xor
mov
mov
mov
sub
push
mov
and
lea
ret
mov
fs
int3
adc
ror
pop
in
or
stos
adc
gs
xacquire
cmpsb
int3
dec
sbb
icebp
mov
sub
mov
mov
xlat
loopne
adc
mov
jmp
mov
jg
ud2
ljmp
das
fwait
lea
push
clc
pop
dec
xor
lret
jmp
xor
pop
test
ret
dec
cli
add
gs
cmpsl
mov
dec
or
js
cld
lock
or
adc
add
std
imul
pop
mov
or
aad
fiaddl
ficompl
push
les
xchg
mov
in
loope
fnstcw
mov
movsl
cmp
mov
and
push
sbb
cs
scas
mov
clc
int3
push
ret
inc
mov
sahf
jb
mov
mov
mov
repz
adc
roll
imul
aad
mov
jo
adcl
xor
and
jno
fiadds
and
push
dec
and
ss
pop
cmpsl
add
pop
sub
push
sub
or
or
mov
xchg
xchg
sbb
push
sub
dec
ja
jg
jmp
repnz
fistpll
push
jle
imul
gs
outsb
sbb
icebp
mov
orb
pushf
xchg
push
outsb
add
out
lea
icebp
cmp
mov
or
sub
sub
lret
add
adc
scas
stos
inc
sbb
xchg
inc
ret
loop
mov
fimuls
xchg
fstps
xchg
xorb
icebp
nop
jge
or
pop
cmp
or
push
cmpsl
nop
pop
sub
sub
loopne
push
xchg
das
paddb
fildll
jnp
roll
in
cwtl
pusha
push
mov
cmp
int
pop
test
mov
inc
push
xchg
ret
dec
jns
out
mov
icebp
adc
std
xchg
hlt
pusha
repz
xchg
pop
fisttpll
sub
mov
lahf
or
jg
push
sub
and
sub
and
repnz
jle
fists
lock
jnp
fistpl
dec
pop
push
mov
pop
dec
sbb
pop
xor
sarb
push
mull
fisttpll
or
das
pavgb
push
adc
jp
test
js
or
in
sbb
fs
enter
rorl
dec
pop
and
or
jge
clc
mov
or
mov
inc
inc
jnp
stc
bound
xorl
or
mov
call
and
inc
xor
or
mov
push
push
fmull
fldl
sti
sbbl
std
and
cmpsl
mov
in
dec
sbb
addr16
xor
and
loopne
ss
stos
pop
sub
inc
mov
mov
jno
push
mov
std
movsl
push
in
ret
icebp
xchg
movsl
cld
cltd
jmp
jne
loope
pop
pop
sub
imul
ljmp
add
fldcw
pop
jnp
movsl
aam
xchg
mov
sub
mov
dec
lods
pushf
in
addr16
push
loopne
js
int
mov
aas
call
dec
mov
mov
repnz
sbb
push
sub
iret
pop
pop
jmp
jnp
mov
adc
push
pop
cld
cmp
push
sbb
lcall
test
flds
xlat
cld
flds
cmp
movsb
mov
push
rolb
ret
jg
adc
roll
cmc
add
shlb
xchg
fldenv
mov
loopne
mov
or
cltd
adc
xor
pusha
or
adc
sub
insb
mov
ret
stos
lds
add
mov
xor
out
push
div
mov
int3
push
fisubrl
and
imul
lock
xchg
loopne
xchg
dec
notb
jns
iret
cld
jge
fidivs
popl
jae
dec
jle
stos
imul
enter
loope
and
mov
mov
mov
out
jns
mov
pop
lods
fstl
mov
stc
loope
fmull
jmp
js
push
jne
inc
xchg
add
fstpl
xchg
js
adc
out
add
sbb
imul
ret
push
or
adc
dec
iret
iret
jnp
mov
jne
addr16
inc
jo
rolb
mov
mov
stc
je
es
pushf
pushf
cmp
pop
jg
cwtl
addr16
jns
jo
push
inc
and
addb
or
jg
jle
inc
out
mov
xor
movsb
push
je
sbb
fidivl
jo
jb
xchg
ret
and
mov
xchg
int
jns
stos
shll
inc
pop
dec
stos
sbb
andl
repz
jge
lcall
lea
imul
dec
rol
in
cmc
arpl
adc
mull
cmc
icebp
lret
push
cli
push
loopne,pt
movb
ret
push
stos
arpl
sbb
je,pt
out
and
push
jae
inc
cltd
loopne
mov
data16
andl
lret
js
aaa
mov
insb
push
fsubp
jecxz
add
inc
cmp
daa
and
inc
sub
fsub
mull
jecxz
xchg
lahf
sahf
inc
add
sti
sbb
inc
mov
test
cmp
shr
cs
adc
pop
rcrl
outsb
in
test
sbb
and
jge
ss
and
jbe
and
popf
movb
mov
into
in
ljmp
xlat
xor
mov
ret
cmp
sbb
pop
es
cwtl
shlb
add
fidivrs
movsl
mov
outsb
jno
dec
repz
es
ret
inc
pop
adc
test
loop
rcrb
ror
push
inc
xchg
scas
xor
stos
cmp
insb
loop
xchg
jge
test
not
jl
add
js
int3
dec
popa
cmpl
arpl
or
fs
or
push
sbb
test
jge
jecxz
fmulp
pop
imul
insb
push
cmp
mov
insl
or
repz
clc
lahf
call
or
sbb
mov
int
gs
mov
cmc
repz
pop
xor
inc
nop
and
out
push
pop
sbb
adc
cs
cmp
and
push
mov
xor
rclb
mov
and
dec
mov
addr16
push
nop
cmc
mov
push
cmp
sahf
or
inc
or
inc
pusha
dec
test
xchg
test
fs
test
std
xor
xor
cs
mov
fidivl
repz
rclb
push
push
or
push
std
pop
js
inc
rcl
or
nop
adc
mov
jmp
jecxz
xchg
jmp
out
cmp
mov
xor
mov
and
movsb
jl
lods
je
lret
dec
pop
pop
aaa
lret
bound
mov
adc
jnp
mov
sub
test
int
mov
in
loopne
insb
ret
adc
push
fisttpll
adc
popw
cltd
out
in
jns
dec
je
adc
lock
divl
mov
sub
in
hlt
ret
inc
addl
mov
or
dec
push
shlb
jb
mov
push
dec
fisttpll
xor
and
sbb
xchg
push
add
xchg
push
lock
push
xlat
inc
mov
lahf
pop
mov
xor
mov
es
insb
aaa
jecxz
repnz
xchg
pop
push
jae
cld
xchg
out
fdivrs
mov
adc
in
gs
cltd
insb
add
insl
jns
addr16
dec
push
in
push
dec
mov
iret
pop
inc
pop
or
sbb
sub
aam
sbb
xchg
les
sbb
add
mov
fsubrl
push
pop
jg
xlat
bnd
scas
ss
push
mov
mov
push
mov
test
pushf
test
dec
not
sbb
cmpsl
loopne
and
stc
incb
out
xor
idivb
dec
mov
loope
pop
adc
and
out
cs
out
push
cmp
outsl
and
inc
pop
clts
sbb
inc
dec
sub
xchg
sbb
mov
pop
ja
mov
mov
dec
sarl
xorb
pushf
xchg
into
pop
dec
adc
sbb
xchg
and
insb
call
and
cmpsl
notl
loop
gs
ret
inc
rcrl
shlb
dec
mov
or
ja
dec
in
test
jmp
rcll
pop
mov
jg
out
imul
inc
jne
aaa
xor
mov
stc
dec
movsb
movb
lds
jle
icebp
cs
bound
pushf
dec
pop
xchg
lret
cmpl
add
xor
out
dec
add
adc
addr16
or
int
sbb
movsb
cmp
xor
xchg
fmul
mov
pop
inc
rorb
adc
jbe
pop
out
icebp
push
out
sarl
call
idivl
mov
mov
dec
insb
adc
mov
mov
ret
sub
fs
cmp
cmpsl
mov
and
daa
test
mov
scas
push
dec
fdivrp
mov
cmp
add
jecxz
ljmp
xor
in
pop
lods
mov
fucomi
mov
lock
pop
adc
test
xchg
dec
jb
sub
cmpsl
mov
xchg
pop
pop
ds
push
sahf
int
push
test
ljmp
cmpsb
mov
enter
push
xor
out
xchg
push
or
push
sub
push
sbb
and
cld
sub
sub
push
xchg
dec
jge
cltd
cmpsl
cs
xlat
js
push
shll
popa
iret
xchg
push
or
dec
mov
or
enter
inc
add
sbb
mov
inc
xor
xchg
fwait
xchg
fistl
dec
mov
push
aad
in
xor
sbb
cmp
mov
cmpsl
jmp
mov
sbbb
xor
xchg
pop
call
push
pop
sbb
in
and
lcall
mov
pop
push
sarb
mov
mov
pop
rorb
mov
push
cmp
and
jnp
icebp
scas
frstor
mov
paddusb
lods
daa
jle
sti
mov
test
push
roll
xor
bound
sbb
mov
inc
dec
js
testl
int
fimull
fnstsw
cli
js
or
adc
mov
movsb
jge
fsubs
pop
xchg
sub
xchg
xchg
pop
sbb
mov
pop
rolb
mov
push
nop
out
xchg
mov
popf
sarl
mov
int
test
cmc
in
imul
icebp
or
cmp
add
call
mov
lock
push
xchg
fsubr
jle
mov
xor
mov
int3
jb
jns
jne
popa
icebp
cmp
ljmp
jle
adc
xor
cs
cld
xchg
lcall
push
inc
mov
pop
jge
insl
add
pop
enter
or
arpl
pop
jecxz
fnsave
sub
outsl
scas
aam
pusha
popa
jecxz
push
add
or
icebp
and
adc
in
stc
mov
add
popf
ds
jle
inc
push
xlat
mov
adc
out
sti
cmpsl
jge
fwait
mov
fnstcw
shll
and
and
fcomi
jne
add
mov
cmc
pop
push
add
fcomps
pop
test
ja
cli
dec
cwtl
lahf
ja
inc
mov
mov
cli
push
cwtl
jns
mov
and
or
lahf
or
jae
out
or
mov
xchg
ret
push
xchg
mov
inc
inc
cli
shrb
xlat
add
cmovs
xorb
loopne
das
leave
jae
ds
jecxz
xchg
pop
cmc
push
sub
pusha
mov
adc
push
inc
mov
jae
push
mov
sbb
lahf
lock
data16
xor
mov
mov
movsl
push
sub
bound
cli
inc
or
mov
pop
jmp
cs
in
aam
dec
xchg
mov
and
jbe
xchg
lahf
pop
xor
mov
xchg
jb
push
ljmp
js
inc
popf
fbld
xchg
mov
scas
addr16
call
dec
xor
add
cmc
push
sub
xor
cmpsl
in
mov
or
inc
mov
test
mov
fistps
add
roll
addr16
add
out
push
mov
or
in
and
lods
ficompl
push
jbe
mov
add
jp
inc
iret
hlt
and
xor
mov
outsb
bnd
push
aaa
mov
orl
push
inc
popa
arpl
xchg
stc
pop
insb
addr16
imul
clc
outsl
dec
or
xchg
roll
arpl
adc
das
xchg
push
xchg
sub
popf
dec
enter
cmp
outsb
mov
ds
xor
push
cmpl
fsub
sub
mov
cmp
mov
mov
mov
push
fcmovnbe
insl
pop
int3
mov
push
mov
data16
mov
sti
ret
mov
jmp
mov
and
mov
jecxz
cmp
call
aas
xor
cli
int3
cmp
loopne
push
sbb
dec
adc
or
cld
cmp
in
dec
pop
fld
cwtl
mov
jecxz
cmp
fdivrs
rclb
or
mov
push
mov
call
adc
test
mov
out
xorb
test
dec
add
test
insl
cli
xchg
lret
adc
push
loop
lret
cmc
insl
xor
push
imul
add
push
jns
repz
movsl
or
inc
les
into
aad
hlt
mov
xor
fimuls
daa
les
cmp
fs
jnp
rep
iret
jne
cwtl
rcrl
ljmp
jecxz
popa
iret
lock
adc
call
xchg
cmp
or
push
add
cmp
setge
dec
jle
andl
fiadds
xor
xchg
fldt
dec
xor
or
and
in
push
add
stos
cmpsb
mov
cwtl
movq
jo
jecxz
stos
test
insl
ret
xchg
mov
test
jle
clc
dec
add
sub
mov
and
out
dec
dec
js
jp
and
stos
sbb
les
sub
xchg
out
repz
mov
push
dec
cmp
mov
jg
mov
pop
mov
xchg
out
sbb
clc
jg
lock
pop
sub
inc
mov
add
lods
jbe
inc
ja
xchg
pop
push
negl
sbb
lret
jp
ds
sub
call
es
add
dec
not
cmc
lods
lahf
rcrl
fsubp
fcoml
and
dec
sub
cmp
sbb
mov
or
fisubrl
xor
gs
mov
push
mov
mov
es
xchg
xor
out
fstps
xchg
dec
push
fdivrl
mov
cmp
jb
insl
push
out
out
in
xchg
inc
stc
mov
xchg
arpl
iret
aas
add
sar
inc
jns
fidivl
enter
dec
into
add
ret
sbb
pusha
cwtl
mov
lret
jecxz
sub
icebp
sub
psrld
out
pop
jno
sub
filds
nop
lret
jae
cmp
mov
mov
jae
mov
push
jge
sbb
add
rclb
mov
sbb
push
sbb
or
sbb
iret
sub
movsl
pop
mov
lret
ss
out
cmp
lea
icebp
mov
mov
add
xchg
add
pushf
or
and
loopne
fmul
stos
xchg
cs
out
decb
mov
iret
mov
or
or
mov
mov
sar
imul
daa
xor
xor
loop
sbb
mov
xor
pop
jmp
add
mov
mov
mov
insb
sbb
rcrl
mov
cmp
lods
ds
fcompl
fbld
xchg
xor
stc
out
cmc
in
insb
push
ja
adc
push
xchg
loopne
js
xlat
movsl
push
sbb
jle
jge
jnp
jb
sbb
sbb
adc
jmp
mov
cmp
push
cmp
xor
addb
ret
adc
adc
xchg
jecxz
xorl
movsb
lret
dec
mov
test
sbb
lods
xor
nop
mov
insb
xorl
sbb
movsl
xor
xchg
mov
xor
push
dec
cmp
roll
push
jbe
push
xchg
loop
inc
inc
out
iret
mov
data16
push
out
push
inc
inc
leave
xchg
push
cs
mov
lret
and
sti
sub
lds
cmpsb
lds
pusha
fs
xlat
xchg
notl
jp
xor
je
rorb
xor
pop
cs
test
adc
dec
rcrb
cli
cmpsl
pop
jns
inc
imul
movsl
popf
mov
and
sub
jge
jns
iret
lds
fcmovnu
int
pop
jl
adc
inc
add
ljmp
lock
in
callw
push
pop
out
xchg
popa
adc
cmp
pop
imul
mov
cwtl
pop
pushf
xor
scas
lcall
push
push
mov
and
out
add
int3
cli
adc
gs
notb
jge
sbb
sub
imul
lock
mov
enter
and
iret
and
and
scas
pushf
push
push
cmpsb
aad
push
pop
test
push
rol
xor
pop
push
mov
and
fwait
jle
or
cmp
aam
xor
aad
sarl
ja
int3
xor
xchg
push
or
xor
gs
add
push
cmc
cmc
pop
push
cmp
xor
cmpsb
icebp
pop
xchg
fdivl
lods
pop
divl
fstl
cmpl
outsl
out
fiaddl
dec
pop
mov
adc
fsubrl
mov
enter
jno
jno
mov
pop
sbb
push
jecxz
cmp
and
pop
div
pop
mov
test
sbb
sub
adc
popa
gs
pop
or
and
es
stos
push
mov
dec
cmp
enter
enter
and
mov
jle
and
sti
fsts
dec
ds
mov
test
fcom
inc
push
in
and
loopne
test
xor
lret
movsl
add
lock
sbb
insb
insb
xor
sub
pushf
fistps
mov
jmp
ffreep
xor
fidivl
gs
test
aam
rol
outsl
push
in
dec
mov
les
mov
jge
test
lods
movsl
add
lock
fs
fisubrs
lock
mov
cli
mov
sbbb
loope
icebp
xor
mov
jb
aas
and
inc
aad
xchg
popf
add
xor
xor
cmp
dec
das
je
stc
mov
loope
add
xor
mov
or
or
out
sub
xorl
div
xchg
adc
imul
ffreep
and
ds
jne
or
pushf
cs
push
mov
mov
pop
call
aam
pop
mov
pop
cmp
je
dec
pop
cld
mov
loopne
push
jle
xchg
imul
jbe
gs
ljmp
and
sbb
mov
add
aaa
lcall
mov
in
dec
push
rorb
mov
jbe
lock
and
fs
xor
mov
test
aad
add
mov
ja
mov
ds
dec
jge
inc
insb
out
outsb
aaa
cltd
lret
xor
fcom
aad
mulb
sub
xor
int
push
insl
lahf
lods
pop
imul
mov
imul
imul
rcrb
outsb
in
outsb
adc
xor
ret
xchg
fxsave
lahf
and
mov
mov
inc
xchg
cltd
jle
xchg
sbb
dec
inc
addr16
xlat
lcall
nop
jg
iret
cmp
mov
xor
inc
mov
out
pop
sub
jnp
jo
cmp
js
mov
enter
adc
xor
pop
stos
inc
pop
inc
outsb
mov
xchg
mov
sub
fucomp
es
ss
es
jl
into
mov
cmp
mov
xor
jg
cli
pop
in
fs
lahf
mov
insl
incl
mov
leave
sbb
shl
pop
mov
out
jns
out
pop
and
idiv
adc
fwait
xor
ret
adc
sbb
sbb
out
sub
subl
mov
insl
jb
in
js
jmp
aas
inc
sub
mov
xlat
jecxz
jge
jg
arpl
sti
fnstcw
jmp
ffree
jecxz
jne
sub
es
into
xor
inc
sahf
or
ficoml
aad
outsl
ljmp
repz
push
adc
or
jp
psrlq
lds
cmp
sbbl
in
mov
inc
leave
mov
ja
test
jbe
aad
cmp
or
adc
dec
jg
adc
jno
clc
fldl
pop
ret
inc
adc
in
mov
subl
cwtl
pop
xchg
aaa
jnp
mov
mov
push
sbb
jl
mov
dec
test
sbb
or
stos
sbb
xchg
push
push
fcompl
mov
add
cmpsb
nop
out
jmp
test
xchg
xchg
and
xchg
xchg
mov
push
lahf
pop
icebp
ds
xor
sub
mov
or
adc
sbb
push
inc
mov
mov
xchg
imul
xor
popf
pop
lea
dec
push
into
add
adc
fwait
mov
and
sbbl
les
add
pop
pop
inc
movsb
fnstenv
add
pop
mov
cli
arpl
stos
lcall
movsl
and
cmp
filds
or
and
sarb
dec
cld
xor
dec
popf
mov
movsb
into
mov
xor
mov
fadds
mov
xor
mov
cmpsl
sub
and
mov
xchg
pop
sbb
cmc
sbbl
mov
stos
movsl
push
js
cmp
jb
cltd
pop
sbb
cmpsl
xor
loop
pop
int
dec
enter
cs
mov
rolb
sbb
lea
dec
mov
jbe
cld
shl
xor
pop
push
fcompl
and
xchg
cmp
inc
xlat
fnsave
fwait
jbe
mov
out
jl
ja
pop
mov
out
scas
adc
divb
cmp
push
sub
mov
movsl
sbb
insb
sahf
sub
xor
dec
cs
push
jbe
jle
fcmovne
mov
enter
push
pop
cli
sub
lds
iret
push
in
dec
xor
cmp
add
sub
push
pop
dec
sub
lret
mov
lods
into
mov
add
lret
push
mov
stos
adc
clc
inc
mov
leave
mov
push
or
out
hlt
add
xlat
shlb
jo
aas
mov
and
sub
xor
icebp
mov
rolb
bound
sub
push
xor
xor
mov
pop
test
xchg
inc
stc
inc
mov
and
jnp
jne
cld
mov
sub
dec
lds
imul
jne
cwtl
xor
xor
sbb
sub
ja
das
jecxz
es
sbb
scas
mov
rcrl
cld
sbb
dec
popf
jge
pop
mov
dec
shll
negl
outsl
cmp
sar
add
xchg
push
pop
push
xlat
mov
and
fnstenv
ljmp
enter
rcr
mov
js
ret
xchg
les
mov
cmc
mov
or
out
lret
decb
push
int
in
out
out
or
fbld
cmpsb
std
xor
and
lods
and
scas
lahf
arpl
fnclex
add
ret
dec
push
rcrl
fstl
inc
dec
mov
cmpsb
rcrb
pop
aas
and
or
lret
orl
xor
cmpsl
ret
mov
ja
mov
and
sbb
mov
addb
pop
push
in
and
mov
es
push
mov
shrl
pusha
sub
js
iret
cli
xchg
iret
je
js
adc
std
push
fsub
mov
addr16
imul
lahf
lea
xchg
sbb
out
dec
and
repnz
push
pop
and
or
std
adc
cmp
push
ss
xchg
mov
movsb
jecxz
call
repz
push
dec
loope
xchg
pusha
cmp
cmpsb
pop
scas
inc
ds
lods
orb
inc
int
sbbl
stc
dec
push
jmp
aam
leave
les
scas
gs
arpl
gs
xchg
popa
mov
push
maxps
lret
and
mov
pop
test
out
ret
cli
cmc
push
or
add
out
out
insb
loopne
mov
xlat
mov
rcr
in
adc
jbe
cmp
out
loopne
adc
push
sbb
push
jns
cmp
add
xor
arpl
mov
and
or
mov
jns
push
jle
rep
sub
lea
and
andl
sub
pop
aad
push
rorb
lea
sub
outsl
dec
push
sbb
jmp
inc
cmpb
in
outsb
popf
inc
push
das
or
push
push
cwtl
loope
and
push
or
pop
loopne
sarb
adc
stos
std
aaa
pop
pushl
mov
loop
ret
sub
pop
out
mov
or
data16
mov
inc
mov
int
jmp
aas
insl
in
movsb
mov
pop
movsb
mov
mov
cltd
fs
lret
xchg
std
fnsave
sub
dec
inc
jae
cs
mov
mov
lds
inc
jbe
mov
xchg
mov
push
gs
dec
dec
iret
mov
iret
sbb
shrl
fst
mov
out
or
icebp
out
sub
lret
inc
or
cli
sbb
push
andl
or
push
adcb
lcall
pop
adc
les
verw
test
cmp
mov
cmp
loope
dec
insb
int
enter
add
std
or
sub
mov
sub
leave
jmp
hlt
insb
das
add
mov
mov
mov
push
mov
ds
cmpsl
test
sarb
push
jmp
or
xor
sbb
add
jl
cli
mov
sbb
push
push
movsl
data16
pop
rolb
je
rorb
inc
mov
pop
loop
jb
add
jno
cwtl
loop
icebp
adc
cmc
test
adc
test
enter
ds
bound
jb
push
divl
fistps
mov
xchg
xchg
arpl
adc
dec
je
xor
add
xchg
psubq
dec
mov
xchg
push
mov
push
push
imul
xchg
ss
pop
mov
push
ror
rorl
lea
das
les
adc
pop
and
or
leave
int3
bswap
add
xchg
mov
enter
cld
dec
mov
pop
out
mov
insl
adc
roll
jns
jle
sub
push
cmp
loopne
repz
das
or
pushf
push
jo
mov
iret
xchg
lret
pop
lret
or
in
cmc
sub
mov
xor
mov
enter
push
pop
mov
adc
js
or
xchg
lcall
das
cmpsl
xchg
popa
jnp
stos
test
jmp
aad
lret
in
push
inc
inc
sub
je
stc
xchg
mov
mov
mov
sbb
aas
shll
jmp
insb
cld
mov
cmpsb
fcomp
dec
dec
inc
push
mov
sbb
xchg
adc
mov
rcl
dec
mov
ret
mov
pop
xchg
and
inc
add
and
jp
xchg
mov
pcmpeqd
dec
push
xchg
fwait
cmp
aad
fmull
push
mov
pusha
repz
iret
loope
cmp
sbb
jo
imul
ret
jns
sbb
scas
es
ljmp
leave
mov
jmp
std
sbb
jmp
test
in
mov
mov
sahf
jae
sti
je
push
mov
xchg
add
push
push
jp
jl
lock
movsb
pop
sbb
test
scas
pop
int
dec
int
int3
jl
and
sub
into
subl
nop
call
mov
add
mov
dec
or
ror
and
dec
mov
test
jb
push
aaa
inc
mov
jge
or
pop
inc
and
lods
test
sbb
inc
xchg
jmp
or
sarb
test
stos
in
ret
or
test
add
insb
out
push
xchg
mov
xchg
shlb
add
cmp
adc
jns
fdivr
pop
sbb
insb
adc
mov
lods
dec
lods
daa
inc
pop
mov
lds
xor
stc
cli
add
lods
popf
sub
cmc
pushf
fdivl
test
adc
leave
and
dec
lods
leave
and
push
jecxz
pop
xor
ret
mov
sub
mov
mov
ret
cmp
jns
jnp
js
js
jne
int3
insb
das
loop
cmp
loop
sbb
insl
and
fs
pop
lods
dec
mov
test
adc
mov
mov
dec
adc
js
shrl
lahf
jbe
push
subl
imul
icebp
or
jp
cmp
rcll
shlb
in
xchg
ret
hlt
ljmp
addb
loope
pop
push
xlat
cld
xor
addr16
popf
jb
movsl
iret
jmp
jb
jle,pn
sbb
std
inc
shll
fdivrs
sbb
icebp
jb
aas
or
and
loopne
ror
xor
dec
bound
mov
out
out
je
pop
ljmp
push
aaa
cmp
add
stos
stos
adcb
ret
into
fs
cltd
iret
cmp
adc
inc
or
mov
fsubr
inc
mov
arpl
bound
into
fwait
xchg
sahf
out
jbe
ret
cmp
fstl
std
out
jne
call
pop
xchg
pop
into
in
and
pop
cltd
sbb
adc
les
lret
out
jmp
std
jp
leave
mov
lods
jb
jo
shl
ret
jns
loopne
push
xchg
mov
in
popa
fsubrl
xchg
cld
scas
add
repz
leave
outsl
in
sbb
in
das
and
hlt
fistps
sbb
xchg
inc
sub
xchg
pop
xchg
mov
inc
insb
je
movsb
js
mov
std
jo
stos
cmp
add
in
xor
xchg
xchg
jno
pop
jecxz
xchg
int3
jo
int
ret
nop
fs
ljmp
or
iret
jecxz
aaa
xlat
pop
jl
adc
es
mov
xchg
mov
mov
call
dec
les
lds
push
push
hlt
aas
lret
push
loopne
loopne
add
or
rorb
fstl
das
push
js
std
mov
and
add
inc
repnz
dec
into
sbbl
mov
pushf
and
test
xchg
or
xchg
add
pop
pop
cwtl
loopne
mov
mov
sub
cmpsl
xchg
cwtl
andl
loopne
and
jae
mov
ret
xchg
pop
cmc
fstps
fdivrp
xchg
or
jg
aad
jge
sub
imul
cmc
hlt
push
or
xchg
mov
jno
push
pop
imul
test
pop
jbe
jl
mov
mov
sub
arpl
mov
in
adc
gs
hlt
push
adcb
into
lret
jl
out
adc
xchg
insl
imulb
adc
and
jl
aas
pop
pop
adc
add
jae
push
pcmpgtw
loope
test
xor
xchg
testl
cmp
ss
mov
js
dec
cmpb
jl
xor
lret
cli
pop
push
xlat
xchg
and
mov
imul
mov
inc
fisubrl
inc
test
hlt
sub
imul
mov
sbb
ss
and
dec
cli
cli
insl
lods
imul
rcrl
sub
xor
lret
stos
aam
dec
mov
outsb
jg
sbb
jae
divl
xchg
in
shlb
mov
nop
xchg
and
cwtl
int
test
mov
cmp
leave
push
mov
push
jbe
push
aas
fistl
sarl
data16
fsub
pop
in
sub
jnp
pop
test
ficoml
mov
or
jne
mov
lss
lods
out
sbb
in
push
or
cmp
adc
xchg
sub
xchg
fsubr
in
mov
xchg
cmp
mov
nop
clc
cld
cs
dec
inc
xchg
fcom
cs
repz
adc
addl
xchg
fsub
arpl
test
addb
out
pop
out
test
nop
popa
loope
iret
stos
sbb
xlat
into
dec
adc
pop
in
mov
cli
lock
and
sbb
mov
xchg
add
dec
cs
imul
push
xchg
dec
and
and
xor
cmp
sahf
or
mov
jge
push
xor
jno
test
int3
inc
icebp
jno
lods
outsb
xchg
mov
ror
xchg
cltd
dec
xchg
inc
fisttpll
push
aad
and
mov
out
leave
out
add
insb
pop
aam
xlat
aad
iret
das
leave
pop
mov
jnp
mov
xchg
mov
cltd
testl
adc
mov
inc
lds
sbb
cld
pop
lret
repz
dec
cmp
adc
or
jno
into
cmp
add
stos
sub
push
test
mov
push
lahf
sti
mov
leave
hlt
jo
mov
fstpt
test
ret
cmp
out
inc
mov
xchg
cmp
xchg
pop
add
adc
into
and
mov
icebp
gs
jmp
stc
imul
sbbb
in
mov
jp
xchg
and
lods
pop
shll
mov
sbb
xchg
push
mov
repnz
test
orw
jns
pushf
int
mov
dec
lret
fdivrs
sub
sub
add
loope
aas
aas
and
mov
push
pop
cs
pop
scas
aas
scas
shrb
mull
pop
mov
xor
or
push
inc
in
dec
fsts
rorl
lret
int
popf
stos
xchg
sbbl
jns
into
addb
xor
sbb
mov
in
clc
cmp
mov
mov
pop
cmp
inc
lods
adc
shll
push
cmp
and
and
pop
out
shlb
xchg
in
int3
push
adc
jae
add
sbbl
call
mov
ss
nop
mov
push
lods
dec
mov
cmp
cmp
jno
mov
scas
pop
xor
adc
jp
jbe
mov
shrl
addr16
repz
rolb
push
jne
popf
adc
push
add
xor
dec
cmc
push
mov
xchg
push
adc
in
iret
mov
dec
cltd
cmp
push
mov
in
mov
pop
mov
fiadds
out
aam
lock
mov
or
push
add
sub
mov
pop
fs
push
adc
sti
inc
es
call
stos
andl
jl
add
negb
pop
sub
add
mov
xchg
xchg
dec
out
jmp
pop
jb
jo
mov
mov
cmp
iret
aaa
mov
pop
add
lahf
lret
push
shl
xchg
inc
xlat
xor
idivb
imul
jl
sub
and
sarl
jb
dec
cmpsl
adc
fildll
mov
outsb
mov
popf
dec
lods
imul
dec
pop
fsubr
jg
push
aad
movsl
and
sub
insl
push
mov
mov
mov
and
test
add
test
push
popf
fwait
lret
pop
add
fistps
nop
mov
jnp
sbb
sub
cs
popa
movsl
cmp
inc
in
pusha
cltd
push
daa
add
outsb
mov
and
mov
pop
les
sbb
xchg
cmc
xor
xchg
out
scas
mov
adc
daa
add
mov
jg
incb
loop
inc
sbb
daa
push
mov
add
loopnew
xchg
les
mov
or
fiaddl
xor
jecxz
xor
sbb
push
aaa
insl
inc
cmp
cli
sub
jnp
xor
call
mov
fsubrl
and
aad
fiaddl
test
mov
stc
or
lahf
test
mov
daa
pop
mov
rorl
lods
movsl
adc
je
pop
hlt
sub
sbb
cld
mov
adc
enter
lock
ret
shr
push
out
cmp
loop
ja
mov
xchg
inc
repz
and
sub
fidivrl
and
divl
mov
mov
incl
adc
sub
xlat
sub
bound
xchg
ljmp
out
dec
ret
aad
jle
out
cmp
nop
icebp
insb
cmp
push
push
and
and
xchg
push
leave
or
and
pop
sbbl
js
sub
int
fsubrl
stc
imul
adc
push
xchg
enter
mov
ret
adc
add
out
sbb
adcb
sahf
push
mov
xor
and
ffree
mov
test
push
lcall
push
out
and
jno
lcall
pop
push
fnstsw
mov
dec
and
imul
xor
shrl
cwtl
xor
test
sbb
loope
cltd
sti
dec
sub
pushf
out
pop
mov
xor
or
cli
adc
sbb
imul
xchg
subb
push
mov
lea
lret
mov
repz
mov
icebp
cmp
dec
mov
xchg
lods
mov
mulb
in
and
push
fnstsw
and
jns
push
jge
push
stos
ret
push
clc
decb
mov
dec
fisubrs
jno
push
mov
leave
sub
mov
das
clc
inc
sti
push
sbbl
push
addr16
cltd
pop
push
xchg
mov
sbb
cltd
aad
xchg
mov
in
and
push
dec
xchg
jg
pop
lods
adc
dec
fimull
dec
divl
push
fs
sub
lret
lods
loopne
adc
mov
in
cmp
shll
dec
bound
inc
outsb
dec
sbb
pop
xchg
fcmovnb
addr16
pop
in
cmpsb
pop
pop
push
scas
sub
in
xchg
cmc
sbb
jne
pop
fildl
iret
cmpsb
push
jg
neg
ficompl
jns
call
in
fs
mov
leave
sub
jmp
mov
pop
sub
lods
cmp
mov
sub
test
out
in
jne
cld
inc
and
sbb
or
imul
mov
stc
and
nop
pop
out
call
and
in
aas
js
inc
or
cli
mov
pushf
dec
mov
pop
pop
inc
popa
mov
adc
add
mov
xchg
lds
movsl
fdiv
pop
dec
lods
or
bound
jle
add
jno
and
or
adc
cld
mov
mov
push
xor
bound
imul
cli
sub
mov
int
fld
xor
jb
mov
jbe
into
enter
cmpsb
imul
popf
mull
pop
icebp
in
jp
mov
xor
imul
add
in
pop
sub
mov
cld
mov
leave
and
out
xor
mov
movsl
stos
mov
jns
dec
pop
sbb
or
sub
sahf
inc
scas
inc
mov
dec
cmpsb
dec
insb
rorb
andb
dec
inc
sub
test
mov
jl
ret
jl
pop
orb
test
es
push
in
sbb
pop
andb
test
fimull
jns
mov
pop
leave
insb
mov
arpl
rcl
pop
pop
pop
jnp
imul
or
mov
inc
xor
into
sbb
jno
pushf
sbb
repz
xchg
cmc
jmp
into
xchg
dec
jne
adc
ret
mov
cmp
scas
sbb
sti
pop
shlb
decb
mov
mov
mov
mov
rolb
mov
mov
gs
xor
lcall
fcomps
push
pusha
imul
stos
mov
cli
push
inc
out
cmp
test
mov
es
mov
cld
pop
sbb
and
mov
xchg
dec
ret
cmp
ss
rcrb
call
ja
lret
pop
in
subb
jecxz
mov
mov
adc
jo
ss
inc
pop
mov
xor
lcall
mov
push
inc
mov
mov
out
jne
inc
out
push
pop
loope
scas
es
arpl
inc
jecxz
pop
jg
test
rorb
fdiv
xor
add
cld
imul
sti
inc
mov
imul
and
imul
push
les
jle
adc
int3
xor
push
sbb
add
or
lret
and
mov
adcl
test
shll
and
mov
cmc
sub
dec
pop
add
mov
loopne
in
adc
push
push
fistps
fisubs
and
pop
lahf
pop
or
les
and
xor
out
mov
test
inc
fdivs
mov
add
mov
sub
outsb
xchg
jb
cmp
lds
push
pop
imull
js
dec
rorb
pop
add
xor
nopl
sbb
mov
mov
jb
cmpsl
mov
lret
btr
call
aam
sbb
inc
xchg
mov
xchg
lods
test
je
gs
jo
cmpsb
adc
jmp
test
fmull
xor
xlat
jne
push
cmp
movsb
or
xor
jp
push
test
dec
mov
jb
mov
jecxz
cmp
pop
jcxz
mov
lahf
mov
scas
mov
scas
add
ja
push
out
sti
cmp
filds
adc
int
add
inc
jns
jl
les
cld
sbb
sbb
adc
adc
cld
jno
xor
mov
jge
cwtl
cmp
hlt
lock
adc
mov
jle
fldt
in
jge
mov
test
ror
lods
push
and
inc
shrb
push
lea
adc
push
ret
lock
jmp
pextrw
mov
ret
mov
fsts
sbb
mov
jge
adc
loopne
pushf
mov
xchg
add
lock
cmpsb
out
and
scas
fstps
out
in
jge
or
xchg
jg
pop
aad
fisttps
pop
lcall
xchg
cmp
gs
cld
mov
lahf
xor
adc
mov
and
xor
test
aam
cmp
idivl
pushf
or
aad
mov
mov
and
push
jno
pop
cmp
fimuls
adc
mov
jb
or
jp
fcoml
mov
mov
cmp
push
or
dec
add
and
add
push
cltd
mov
mov
out
xchg
inc
je
push
cmp
fs
andb
jmp
mov
xchg
test
mov
in
jns
pop
sbb
xchg
jg
dec
arpl
inc
cwtl
movsb
arpl
push
sbb
mov
adc
jp
mov
sub
xor
cmp
push
xchg
jge
push
dec
pop
or
or
movsl
cmp
mov
mov
mov
push
sbb
dec
xchg
mov
dec
test
jae
adc
sbb
mov
push
adc
dec
mov
leave
loop
jnp
aam
pop
and
xchg
jns
push
notb
push
mov
or
dec
dec
cwtl
scas
ds
pop
jmp
mov
mov
inc
daa
add
out
es
cmpsl
ret
mov
in
or
fdivr
dec
jmp
push
js
sbb
lods
in
mov
call
jbe
jmp
jle
gs
add
les
imul
sti
in
pop
repz
xchg
sub
sbb
movb
cmpsl
xor
sbb
pop
fs
or
add
js
add
imul
leave
mov
enter
mov
sub
xlat
and
decl
addr16
pop
cmpl
or
cmp
cwtl
add
out
outsb
repnz
mov
xchg
sbb
in
cmp
mov
das
daa
inc
iret
inc
imul
or
and
mov
xchg
mov
push
in
dec
or
jno
aam
dec
lahf
sbb
add
push
or
mov
xor
inc
sub
sbb
or
adc
push
dec
add
sub
mov
mov
pusha
shrb
lret
jo
leave
int
pop
pop
pop
pop
xchg
cmp
xchg
mov
add
fiaddl
lods
les
xchg
lret
adc
mov
iret
cld
push
das
sub
stos
mov
out
roll
pop
repnz
lcall
sar
xchg
insl
mov
lcall
insl
lods
rcr
xchg
fisubrs
stos
into
gs
out
fisttps
xchg
and
push
bound
inc
loope
mov
inc
loopne
aam
into
nop
ret
and
and
imul
sbb
cwtl
mov
fpatan
mov
push
into
push
ret
adc
in
jno
scas
popf
movsb
out
ret
fistpl
fildll
xchg
sub
test
ds
rcrl
xor
in
cmp
mov
dec
mov
lcall
cmp
test
pop
mov
push
cltd
lret
out
inc
aaa
stos
sbb
fadds
sbb
mov
clc
outsl
mov
xor
inc
subl
iret
adc
out
sti
mov
cmp
mov
andb
cli
out
inc
adc
inc
mov
popa
adc
sbb
pop
aas
sub
jns
lret
ss
xlat
int3
push
inc
mov
mov
jle
aad
mov
insb
test
add
dec
test
cwtl
jno
lea
movsb
in
pop
lds
adc
mov
bound
xlat
in
sub
mov
leave
inc
stc
push
inc
stos
mov
add
cwtl
ret
jmp
int3
outsl
pop
or
cmp
scas
or
pop
int3
pop
xor
push
push
xchg
dec
xchg
and
mov
rcrl
xchg
push
imul
lahf
imul
pop
cli
es
mov
fstl
mov
ljmp
test
sahf
insl
or
jp
stos
pop
sti
xor
mov
sbb
test
enter
pop
push
xchg
mov
jnp
add
and
push
jmp
adc
test
sub
int
repnz
cwtl
dec
inc
cltd
int3
js
mov
add
pmaxsw
mov
inc
dec
jnp
pop
bound
fsubrl
fwait
mov
rolb
lret
cmpsb
jbe
push
ret
mov
inc
lahf
out
pop
lea
insl
fcompl
push
ret
pop
in
jg
stos
xor
popa
lods
cltd
jne
shr
adc
daa
lcall
inc
xchg
pop
imull
pop
push
fiadds
bound
pop
and
push
cmp
xor
stos
dec
cltd
popa
fstpt
lds
sub
rolb
stc
sbb
in
cmp
mov
push
or
ljmp
adc
pop
jae
adc
xchg
cmp
stos
mov
data16
arpl
xor
push
adc
cld
and
ja
push
sahf
into
rcrb
in
xchg
push
mov
ds
xchg
call
aas
mov
pop
enter
cltd
push
cmp
and
popa
jle
push
or
jmp
filds
data16
jnp
and
out
push
lcall
fldl
inc
in
stos
sti
icebp
mov
dec
adc
push
lds
mov
mov
ja
xor
andb
xchg
pop
cltd
test
test
inc
sti
or
mov
and
xor
inc
jl
add
and
mov
nop
push
mov
or
pop
addl
lea
sahf
or
out
testl
leave
sbb
sub
in
outsw
inc
mov
xchg
adc
sbb
sub
jmp
push
sub
pop
pop
inc
test
push
inc
stc
push
lcall
rorl
mov
cmp
inc
inc
sbb
inc
push
xor
pop
mov
cli
xchg
xchg
stos
cmpsl
aam
fistps
stc
pop
movsl
orl
pop
dec
int3
mov
arpl
inc
sti
hlt
fcomps
inc
push
cmpl
xchg
add
jae
adc
mov
sbb
xor
adc
ja
xchg
cmp
mov
sbb
sub
fisttpl
sbb
test
inc
aaa
fcos
js
and
andb
jno
ljmp
loope
inc
xchg
pop
pop
mov
out
es
or
sti
outsl
mov
and
adc
push
test
std
popa
je
cmp
or
repnz
pop
jmp
call
jecxz
shlb
pop
es
mov
push
xlat
out
dec
addl
roll
in
mov
inc
mov
shll
adc
aam
sbb
inc
mov
or
dec
test
pop
xlat
gs
or
aaa
les
xchg
fs
dec
ret
stos
test
pop
push
add
pop
testl
fwait
cmp
pop
ja
jg
shlb
mov
fistps
dec
pop
xchg
sub
pop
push
adc
inc
fnstcw
mov
fnsave
push
mov
or
mov
dec
imul
dec
movsb
aaa
repz
sbb
mov
in
int
and
mov
ss
fidivrl
push
jnp
ds
js
mov
fstl
push
jmp
out
scas
insl
inc
fcmovb
sub
fwait
rcll
insb
shrl
adc
xchg
sbb
pop
lock
cmpsl
js
push
jecxz
push
mov
shll
add
lods
mov
adc
addb
push
jl
pop
lods
repz
lcall
push
cmc
mov
pushf
ret
xor
cld
cwtl
push
std
sub
rcl
sbb
cld
dec
std
popa
es
push
pushf
add
xchg
les
and
je
push
lcall
es
mov
xchg
lahf
inc
popa
fdivs
enter
xchg
stos
cmp
xor
cmp
mov
pop
or
shlb
lcall
js
scas
inc
fldcw
inc
jecxz
fcompl
enter
mov
inc
hlt
mov
mov
mov
xor
cs
cmp
jns
rorb
jo
ret
sbb
pop
and
push
add
arpl
scas
mov
popa
mov
inc
mov
jmp
push
out
addr16
adc
repnz
rorl
shll
add
jp
push
dec
int
push
mov
test
inc
pop
test
sub
in
sbb
add
movsl
lds
mov
cmp
or
aad
mov
mov
mov
push
sub
rorl
pop
dec
fcmovnbe
bound
push
popf
cmpsl
or
fistps
lods
cwtl
xchg
pusha
pop
aaa
push
xlat
and
test
mov
fadd
xchg
rcr
adc
mov
adc
mov
addl
xchg
testb
dec
mov
ret
fstpt
in
pop
jnp
popa
mov
dec
in
cmp
jmp
stc
xchg
addr16
pop
outsb
dec
jl
mov
roll
pop
add
add
scas
imul
popa
lcall
js
xchg
movsb
mov
xchg
lcall
fstpl
cmpb
jp
ja
jno
out
pop
aaa
xchg
popa
or
or
arpl
cmpsl
in
cmp
outsb
pop
push
out
std
scas
ljmp
ret
pop
testb
aad
xor
mov
into
andb
jne
pause
cmp
adc
cld
lods
aaa
addr16
mov
pop
aam
nop
ficoms
and
mov
push
sti
fsubs
je
pop
mov
into
aad
aad
or
jns
cmp
sti
das
pop
cltd
jge
dec
mov
outsb
push
sbb
cltd
test
push
sbb
lds
out
push
sbb
out
push
ja
lret
cmp
ret
clc
imul
inc
fwait
cmc
pusha
pop
push
rorl
cwtl
sbbl
push
dec
dec
pushw
fstl
xchg
pop
mov
das
in
adc
fs
xchg
fisttps
aam
or
pusha
fistpl
sub
aas
sti
out
inc
dec
repnz
xlat
loop
lds
or
mov
subl
cs
dec
mov
adc
push
sub
lds
ret
insl
sbb
call
mov
push
testl
jl
cmp
out
inc
mov
or
xchg
icebp
adc
adc
lahf
cmpsb
cmp
dec
jl
xor
xchg
xchg
ds
stos
inc
inc
xor
mov
jne
sub
fwait
pop
stos
sti
in
and
outsl
mov
and
and
out
push
testl
sahf
je
nop
test
test
fdivs
sbb
sar
pop
lahf
enter
sahf
stos
xchg
fwait
mov
lea
ret
xlat
mov
popf
cmp
push
loop
shrl
add
ds
cmp
dec
movsb
jb
inc
or
lret
mov
cmp
shrb
out
pusha
fcmove
pop
ror
inc
addr16
mov
fs
sub
mov
or
mov
outsl
frstor
dec
pmulhw
ret
inc
add
push
bound
xchg
int
mov
iret
pusha
test
pop
jns
dec
add
das
icebp
add
ret
cmc
mov
pop
dec
xchg
adc
sub
aaa
roll
add
data16
aaa
xor
jmp
mov
inc
add
jmp
xchg
inc
cmp
sbb
sub
jnp
cmpb
fsubs
cmp
dec
lret
lret
adc
shlb
loop
stc
sahf
nop
adc
push
xor
and
cmp
loope
push
jle
lods
mov
sbb
and
insl
xchg
ljmp
adc
shl
mov
and
stc
lods
xor
or
add
mov
mov
and
mov
xor
jne
cmp
mov
gs
jmp
inc
push
push
das
sub
das
jae
mov
and
sub
mov
cltd
movsl
jns
movsl
lcall
out
scas
push
cmpsl
or
and
into
xchg
fisubl
das
test
shlb
push
popa
ja
test
popf
mov
sti
je
sub
xchg
and
popf
rcr
int3
iret
dec
mov
push
ficompl
flds
push
push
or
aas
leave
or
or
xchg
cmp
inc
and
mov
inc
cmp
loope
cmc
pop
push
hlt
add
outsw
sbb
movb
cmp
sbb
shll
sbb
mov
or
mov
push
add
pop
ss
fdivrs
iret
sbb
lret
shr
add
xchg
cmp
jge
loop
xchg
push
or
fnsave
jae
cmpl
nop
daa
mov
fdivl
fbstp
jp
andb
add
imul
in
mov
sahf
jp
mov
or
lods
std
sub
sti
pop
mov
inc
rclb
mov
jns
sub
sbb
xor
xor
repz
jge
aaa
mov
add
cmp
int
xor
dec
add
pop
add
mov
mov
jo
push
dec
shlb
sub
add
stos
fsub
inc
inc
push
sub
inc
repnz
dec
popa
jl
cmc
or
ja
and
repnz
sbb
cmp
test
pop
inc
sub
aam
mov
push
xchg
popf
les
adc
dec
test
and
fimuls
add
mov
sub
sub
mov
fidivl
fistps
sbb
test
and
and
imul
jp
xlat
lds
xorb
jno
js
xor
stc
divl
adc
xorb
xchg
loopne
paddusb
test
mov
inc
cmp
sub
mov
push
pop
jecxz
cwtl
in
outsl
push
jp
pop
lcall
sbb
inc
pop
sahf
mov
call
add
add
jmp
sarl
adc
mov
repnz
mov
xor
and
pop
dec
lods
imul
xchg
and
stos
jnp
jb
outsb
ds
mov
xchg
aas
or
push
pushl
nop
inc
outsl
push
pusha
cltd
mov
stc
in
stc
mov
cmp
push
dec
pop
mov
sbb
add
adc
loopne
cmp
mov
dec
in
sbb
push
out
adc
rcll
cld
mov
mov
lods
sbb
cmp
push
fwait
in
js
mov
xchg
sti
mov
pop
cmpsl
add
test
inc
mov
das
push
fstl
add
rcll
mov
and
out
out
loopne
inc
aas
push
sbb
add
add
inc
test
lods
addr16
and
cmp
or
mov
sbb
ja
pop
aad
loopne
movsb
pusha
in
and
pop
fwait
ss
insb
push
fstl
mov
notl
xchg
pop
hlt
mov
sub
jecxz
sub
pop
test
aad
jle
test
adc
nop
jbe
inc
sub
loopne
sub
jge
fiadds
cmp
js
xchg
fwait
inc
dec
mov
sbb
cld
cld
jmp
leave
fnstsw
add
sbb
repnz
xchg
sub
mov
and
insl
cmpsl
out
jb
loope
jae
pop
mov
ljmp
je
sub
inc
loopne
aas
push
add
bound
cmc
sti
xchg
push
xchg
jp
ret
roll
pop
cmp
aam
lods
fstl
scas
mov
je
mov
cmp
dec
ud1
nop
cmc
and
inc
mov
loope
mov
inc
mov
loop
cwtl
addb
mov
test
or
mov
xchg
adc
add
jg
pop
xchg
mov
inc
pop
out
xor
mov
push
mov
aad
xchg
movsl
cs
mov
call
mov
jecxz
xlat
lea
add
or
ljmp
sub
jg
jmp
adc
shlb
xchg
negb
daa
dec
xor
cmp
out
adc
dec
mov
dec
out
hlt
daa
popa
decl
cmc
add
adc
dec
das
push
inc
adc
sti
loop
inc
jnp
movsb
mov
jg
test
or
cli
adcl
mov
xlat
hlt
into
repnz
das
xchg
jecxz
js
mov
or
sti
sahf
or
xor
push
add
enter
mov
jb
cmp
lret
xor
mov
imul
cmpsb
mov
xchg
ror
xlat
dec
cmp
mov
xchg
popf
dec
push
lcall
pop
pop
push
jmp
and
mov
into
into
js
add
test
imul
xchg
add
es
ljmp
cmp
dec
jle
outsb
mov
jg
jmp
daa
xor
xchg
xor
pop
mov
int3
shr
cwtl
sub
cmp
push
inc
aaa
mov
dec
mov
adc
inc
leave
repnz
pop
std
jno
push
adc
push
xchg
aam
in
push
loope
shl
loope
neg
test
cmp
dec
in
add
xchg
aas
fcomps
sub
ret
dec
shrb
fidivrl
add
or
sub
je
rol
jno
jge
add
popa
fcoml
xlat
jno
mov
dec
lock
cmpsl
xchg
das
fs
dec
inc
add
daa
sbb
dec
and
test
mov
pop
fildl
sub
dec
icebp
jge
inc
xor
std
sar
sub
ss
or
jge
xchg
dec
mov
cli
dec
inc
je
cmpsb
sub
xchg
cmpsl
arpl
mov
push
inc
test
inc
fistpl
mov
push
and
test
in
out
cmpsl
ror
push
inc
lods
ljmp
pop
xor
sub
repnz
fwait
sub
nop
lods
jl
repnz
enter
pop
or
js
add
sub
les
xchg
lods
lret
lods
mov
fistps
mov
or
clc
add
mov
mov
into
loope
adc
and
shlb
fwait
and
xchg
add
mov
inc
flds
mov
sarb
mov
xchg
cmp
xchg
inc
jnp
cmp
lahf
in
xor
jg
adc
cmpsb
mov
and
lret
out
pop
or
dec
push
xor
sahf
int3
pop
xor
push
mov
rcrl
enter
cmp
and
movsb
or
xor
fsts
fsub
xor
incl
scas
or
xchg
mov
xor
mov
sub
adc
mov
cmp
mov
ficoms
adc
int
xchg
in
push
xor
push
aam
mov
add
sti
sub
cld
loop
xlat
test
mov
in
hlt
and
jmp
test
push
xchg
repnz
and
sub
outsl
xchg
and
inc
xlat
adc
xchg
pop
inc
out
cmp
mov
dec
add
inc
loopne
out
add
ss
out
xchg
mov
fs
push
pop
cltd
out
dec
jbe
cltd
dec
push
repz
in
push
shrb
fsubrs
cmpsl
sub
inc
and
push
inc
mov
test
cld
or
jecxz
icebp
push
sbb
jae
leave
movsl
adc
sar
mov
lret
mov
idivb
ret
or
out
pusha
mov
xor
cli
pusha
mov
mov
dec
sahf
jle
gs
aad
nop
and
sub
aas
xlat
mov
jle
xchg
arpl
dec
pusha
cmpl
dec
xchg
outsb
fldt
xchg
test
add
outsl
subb
xor
xchg
dec
inc
push
cmp
jmp
or
rol
int
xor
inc
aam
push
xor
mov
dec
mov
test
ss
mov
jp
loope
movsl
movsl
adc
lret
dec
dec
sahf
mov
pop
cmp
nop
in
orl
mov
xchg
add
outsl
adc
mov
or
inc
mov
fwait
and
sbb
stos
pusha
adc
aaa
pushf
and
aam
pop
cmp
dec
cmp
call
add
movsb
push
rcl
cli
leave
out
cmp
mov
call
push
pushf
sti
repnz
arpl
inc
add
fwait
decl
pushf
xor
pop
movb
inc
xchg
outsb
cmp
lahf
xchg
push
dec
jp
mov
int
daa
cmpsb
and
ds
imul
push
or
push
cli
loopne
sbb
shrl
loope
xchg
mov
es
in
inc
inc
cltd
mov
cs
push
ljmp
je
imul
fucomp
adc
dec
fnstsw
xor
jbe
scas
cmp
iret
ficoms
scas
mov
xchg
icebp
jmp
cltd
xor
cmc
notl
pusha
and
sub
pop
gs
xor
or
push
dec
lds
push
adc
icebp
or
bound
push
pop
xor
call
stos
pop
sub
pop
pop
mov
out
jmp
jae
mov
ljmp
mov
cmp
stos
stc
repnz
sar
arpl
inc
jl
ret
das
out
xor
ja
add
fucomip
test
pop
in
inc
adc
fiadds
movsb
std
sar
inc
or
rcl
pop
fstp
cmp
in
pushf
xchg
xchg
push
lea
and
pusha
mov
dec
cmp
lea
lds
loope
dec
push
sbb
mov
dec
mov
rclb
fstl
das
jp
pop
jbe
and
sbb
xlat
or
lret
mov
mov
or
ret
pop
rclb
movsl
fsubrl
pop
ljmp
add
in
popa
mov
push
and
adc
ja
push
xor
push
loopne,pt
nop
xor
movsl
insl
mov
xchg
es
and
lods
ret
or
dec
fists
and
xchg
pop
es
fwait
daa
mov
into
add
mov
pop
sbb
js,pn
int3
into
cmpsb
orb
les
push
ds
mov
pop
sub
neg
pop
repnz
jbe
mov
fisubrl
stos
das
dec
lock
test
mov
cli
add
ss
lea
push
mov
cwtl
popa
pop
jo
adc
popf
xlat
or
ss
jno
xchg
mov
jp
scas
sti
lods
gs
mov
rcrl
cmp
pop
movsb
pop
mov
into
xchg
popf
insl
in
and
xchg
or
pop
lea
rcr
out
mov
xor
xchg
add
inc
shl
imul
mov
arpl
dec
xor
mov
cmc
xchg
ljmp
mov
iret
cwtl
pop
sahf
and
jmp
iret
in
dec
cmp
inc
insl
mov
sbb
cwtl
or
jne
pop
push
inc
inc
clc
sub
mov
push
and
addr16
dec
fidivl
push
call
fiaddl
out
testl
cmp
adc
clc
add
stc
or
test
mov
jo
movb
mov
gs
aas
mov
jg
es
adc
outsl
scas
xor
xor
dec
cwtl
lahf
push
data16
test
inc
leave
xlat
push
call
or
sbb
pop
ds
rcll
ds
mov
mov
push
lods
aas
stos
add
sbb
cld
adc
loope
ss
lea
bound
mov
adc
lods
in
mov
neg
sbb
pop
jno
mov
ljmp
test
pop
or
dec
es
adc
mov
adc
icebp
fcmovnu
mov
imul
or
mov
inc
scas
push
xchg
or
rolb
jo
aad
lret
fs
jp
cmp
loop
loope
mov
cmc
or
into
shr
ror
testb
jns
jnp
mov
fcmovu
ret
cli
mov
sbb
getsec
jb
add
cs
push
push
pop
xlat
mov
jbe
inc
in
push
addr16
cmp
jne
outsl
fidivl
add
out
ds
or
loopne
jge
xchg
push
mov
pop
cmp
sahf
jno
fldt
cmp
mov
adc
ja
into
cmp
jns
and
mov
test
das
sbb
pushf
add
sbb
in
mov
jnp
out
les
push
mov
add
fidivl
mov
into
je
imul
mov
into
pop
aam
mov
shlb
inc
mov
dec
or
mov
jmp
or
cmp
inc
mov
mov
pushl
jbe
daa
sbb
xor
push
fcomi
in
xor
push
fbstp
add
cltd
test
and
and
xor
insb
fsubl
sbb
jmp
add
cmp
xor
pop
fadd
pushf
mov
add
insb
mov
sub
sub
dec
in
loopne
or
test
icebp
stos
mov
pop
mov
fbstp
pop
cs
or
add
adc
out
hlt
mov
push
xchg
jbe
inc
pop
or
cmovo
dec
mov
imul
clc
rcl
push
stos
pusha
mov
les
js
sbb
int
push
xlat
jmp
popf
push
push
adc
loope
pop
jmp
aas
push
xchg
popf
cmp
push
mov
xchg
adc
sub
repnz
push
and
in
mov
inc
jp
sti
out
sbb
mov
popf
mov
cmp
rorl
inc
sbb
loopne
xchg
or
inc
negl
or
stc
mov
mov
and
xchg
mov
testb
repz
das
jae
lock
hlt
jno
lcall
push
or
rcl
inc
popa
or
adc
fs
dec
popa
pop
push
xchg
ret
xchg
pop
jb
push
push
xchg
xchg
mov
xor
das
mov
inc
sbb
pushl
mov
xchg
in
mov
push
push
gs
sbb
pop
ljmp
int
iret
sub
mov
sub
stos
jbe
cmpsb
sbb
add
test
inc
out
jne
inc
fsubrl
or
addr16
dec
shl
fwait
xorb
leave
push
sub
dec
shl
repnz
lock
push
lea
mov
dec
pop
lods
push
mov
mov
stos
outsl
push
jg
jecxz
test
call
addr16
jo
pop
mov
mov
bound
test
movsl
or
fincstp
push
mov
lods
xchg
dec
out
lahf
or
sub
and
xchg
es
jbe
shlb
mov
fstpl
fistl
out
lret
push
and
pop
sbb
adc
pop
push
xchg
jge
pop
xor
mov
jge
lods
fcomi
push
inc
cmp
push
cltd
jnp
imul
xchg
push
push
push
mov
scas
imul
adc
push
sbb
loope
sub
jae
dec
test
cmp
pop
cwtl
test
lods
adc
pop
mov
aas
les
fmulp
add
mov
rcrb
lcall
inc
xor
cmp
xchg
jle
inc
ret
inc
xchg
popa
cmpsb
ret
dec
mov
adc
mov
and
push
or
lods
jp
leave
push
push
sub
xchg
push
or
les
xor
xchg
popf
jbe
sbb
jle
pusha
ja
insl
pop
jp
mov
ljmp
in
xchg
mov
mov
and
cltd
add
or
mov
int
mov
outsb
sub
arpl
pop
mov
adc
leave
cwtl
mov
test
gs
lret
int3
icebp
out
movsl
pop
sbb
xor
jb
lock
fimull
stos
fdivr
sub
fiaddl
cmpsl
push
lds
mov
sub
dec
xor
popa
es
in
lds
jnp
xchg
mov
fs
xchg
push
mov
adc
pusha
xor
and
sub
mov
sar
test
dec
dec
pop
jecxz
loopne
pop
pop
mov
out
inc
inc
and
and
dec
negl
into
or
inc
xchg
ficoml
xlat
cs
push
pusha
or
push
push
xchg
cwtl
cmp
sub
push
adc
xchg
sahf
xchg
rcrl
jbe
and
aam
push
repnz
movsl
divb
testl
in
cwtl
inc
sbb
in
adc
mov
cmp
dec
daa
jecxz
xor
lahf
mov
jbe
push
hlt
sbb
cmp
cmp
test
loop
mov
add
or
xchg
mov
adc
dec
shll
sub
adc
pop
dec
push
mov
into
mov
sub
ds
push
aam
dec
inc
and
pop
stos
inc
push
jne
rolb
outsl
fsubs
aam
mov
xchg
jno
pop
inc
jecxz
inc
sahf
cwtl
mov
cmp
and
xor
push
out
sbb
ljmp
and
cli
lret
clc
pop
inc
or
dec
sub
mov
cmc
dec
push
cmp
popf
stos
icebp
push
test
mov
dec
sbb
test
test
gs
jno
mov
pop
push
dec
cs
test
mov
mov
mov
add
jo
mov
adc
lods
push
divb
and
xor
xchg
mov
icebp
mov
cld
pushf
outsb
cmp
sub
xchg
sbb
xor
jl
and
scas
fwait
pop
xchg
pusha
lcall
sub
lock
jae
js
add
inc
push
pusha
mov
push
popa
xchg
sub
mov
enter
mov
scas
pop
loop
pop
mov
jae
addr16
stos
sub
push
mov
mov
xor
push
leave
dec
sahf
cmp
aam
pop
inc
lahf
mov
xchg
cmp
add
repz
jl
js
clc
std
adc
gs
aam
sub
push
and
in
or
adc
cmc
adc
adc
adc
fadd
frstor
in
notl
call
cmc
rorl
loopne
mov
notb
pop
movsb
data16
shr
mov
dec
pop
xchg
cmp
xchg
out
aas
test
inc
mov
mov
dec
push
cmp
jo
pop
addr16
mov
xchg
rcrb
scas
jg
je
mov
data16
adc
fsts
fstl
aaa
pop
push
mov
xchg
mov
cld
setp
std
push
mov
sbb
mov
int
aaa
addr16
push
jns
in
scas
movsl
jp
mov
das
mov
enter
mov
inc
pop
shlb
gs
jne
sahf
and
pop
push
mov
add
adc
scas
sbb
cltd
inc
cmpsb
arpl
push
jle
or
adc
fstl
cmp
jl
push
lods
aas
int
enter
cmp
xchg
jae
sbb
rorl
lahf
cmpsl
xchg
fnsave
mov
adc
imulb
insb
mov
lret
je
and
inc
xor
pop
popa
in
xchg
xlat
out
mov
mov
or
pusha
push
sti
add
mov
dec
sti
shrl
ret
js
in
iret
jmp
sbb
sub
cmpsl
sub
jl
lcall
jns
ffree
add
add
pop
and
insl
push
shll
lea
lods
in
dec
imul
test
xchg
adc
xchg
dec
leave
out
push
pop
hlt
out
mov
inc
sahf
lret
pop
jecxz
jl
sub
dec
cmp
cli
xor
xor
pop
pop
or
xchg
cmp
sbb
dec
pop
mov
lea
jo
adc
mov
mov
dec
xor
and
adc
sarl
es
push
jl
and
insl
rolb
inc
mov
mull
cltd
sbb
cmp
push
subb
dec
add
push
mov
in
ret
xor
mov
xchg
xchg
shll
xchg
in
and
mov
leave
aas
inc
ss
mov
shr
test
add
mov
xlat
imul
fsubrp
clc
cmp
inc
es
sbb
sahf
test
cld
in
add
leave
sub
jl
pop
pop
or
mov
xchg
outsb
inc
mov
cltd
sti
or
cmp
pushf
xchg
dec
inc
push
or
rcl
leave
rcrb
sti
es
xor
add
aad
fs
push
or
movsl
cmp
lock
or
fwait
mov
jns
dec
shrd
test
xor
rcr
movsl
lock
sub
sbb
mov
and
jl
lods
mov
push
dec
push
lret
xor
inc
mov
clc
mov
icebp
cmp
cmp
in
loopne
xor
lret
mov
push
cmp
scas
adc
mov
mov
jge
or
mov
mov
call
inc
imul
push
inc
mov
jecxz
mov
jle
jmp
mov
mov
mov
adc
imul
call
pop
cld
in
out
ljmp
xchg
mov
push
jno
inc
push
lds
aam
outsb
test
sub
jbe
test
testl
clc
xor
fs
mov
or
test
mov
pop
cltd
jecxz
punpckhwd
cmovo
or
jl
xorb
inc
inc
lgdtl
sbb
lahf
es
loop
sub
insl
icebp
mov
jnp
add
sub
sti
aam
das
lods
or
inc
pop
addl
push
lods
je
cmp
sbb
push
pop
into
pop
in
lret
mov
mov
mov
jno
lret
or
xor
dec
shl
xchg
mov
dec
aaa
int
push
insb
jno
fadd
adc
jno
iret
dec
rcll
testb
pop
dec
js
dec
or
push
popa
rcl
add
vminpd
call
jp
inc
push
aas
daa
xor
push
in
iret
sub
cmp
add
dec
cmp
xor
shrl
mov
sarl
pop
pop
les
outsb
das
jle
hlt
push
data16
pop
push
mov
xchg
dec
in
push
sbbl
dec
add
and
mov
insl
add
cwtl
push
std
ds
fsubs
aas
ja
sbb
lods
idivb
mov
mov
mov
mov
mov
sub
lods
push
aad
pop
pop
js
adc
jg
hlt
mov
cli
mov
sbbb
cmpsb
loope
aas
into
mov
add
and
pop
les
shrl
out
inc
or
inc
ja
in
xor
adc
mov
fcomps
sbb
sub
jne
gs
mov
dec
jbe
dec
or
sbb
xchg
test
or
inc
pop
js
add
loop
jo
sysexit
mov
out
gs
cmp
pop
mov
sbb
fcmove
jne
sub
clc
ljmp
lods
lret
push
jle
xlat
or
stos
inc
or
sti
jae,pt
xor
adc
imul
rcl
hlt
fdivrs
mov
in
shll
dec
and
popf
or
jg
add
cmpsl
in
cmpsl
insb
insl
pop
call
push
mov
movsl
jmp
clc
jge
sub
aaa
pop
jns
and
test
and
nop
imull
imul
lahf
cltd
in
int
pslld
mov
jnp
sbb
mov
sub
dec
daa
fwait
popf
jl
push
imul
inc
sub
push
hlt
or
mov
jne
test
jbe
test
sbb
das
scas
inc
sub
adc
nop
dec
ret
xchg
dec
stc
ja
cmpb
push
push
xor
orl
insb
fbstp
or
push
fildl
push
pop
xchg
mov
add
push
fstpl
or
nop
mov
adc
xor
aad
xor
rorl
mov
mov
or
sti
cmpsl
xor
add
movsl
xor
xchg
scas
or
pop
mov
push
adc
scas
mov
std
adc
pop
jo
pop
adc
vpunpcklwd
into
and
bound
jb
jle
lds
movsb
xchg
jg
imul
sub
lods
test
pop
jg
jmp
daa
lcall
sbb
cmp
lcall
cmp
shlb
mov
adc
pop
push
push
adc
mov
adc
push
cwtl
ljmp
inc
cmc
std
fadds
cmc
aad
int
wrmsr
fwait
and
cmc
lahf
sbb
mov
mov
test
out
mov
gs
xchg
jo
sbb
sbb
xchg
push
cs
dec
int
andb
pop
xchg
mov
rorb
adc
adc
mov
push
sbb
je
xchg
sbb
je
ret
xchg
shrl
sbb
mov
into
xor
or
cmp
inc
or
cmp
pop
out
aaa
jb
aad
mov
mov
stos
jl
or
sbb
dec
xor
out
mov
sub
cmp
lds
sbb
jne
inc
add
sti
fildl
out
inc
enter
inc
add
jle
mov
cli
and
push
mov
push
ds
dec
addr16
xor
mov
xchg
pcmpgtw
addr16
imul
mov
add
dec
dec
sub
cmp
insb
xor
add
inc
inc
jge
inc
arpl
pusha
mov
jns
adc
push
push
mov
cmpsb
mulb
sub
xor
fwait
or
lea
daa
push
cwtl
sub
loope
das
sbb
mov
popf
inc
jno
sub
out
lahf
jnp
insb
pop
int3
sub
imull
stos
sbb
lds
mov
mov
lret
adc
lahf
iret
subb
pushf
cwtl
loop
sti
jb
test
je
sti
jmp
hlt
stc
pop
ret
out
stos
mov
rolb
mov
mov
dec
out
loopne
cmp
xchg
les
imul
ficoml
push
jnp,pn
xor
arpl
cmp
xor
leave
data16
mov
mov
push
add
dec
scas
and
pusha
mov
add
loop
sub
repnz
pop
jecxz
bound
jns
sbb
js
std
ret
je
jae
pop
cmp
mov
mov
dec
cmc
push
repz
xor
xlat
aam
idiv
lock
jns
lahf
xchg
mov
inc
stos
imul
cmp
and
lret
fs
or
fiaddl
push
hlt
sub
cmp
sub
adc
xor
xchg
loopne
pop
lods
adc
mov
lds
mov
or
jnp
mov
pop
jl
dec
movsb
jae
mov
jne
sub
or
imul
xorb
scas
jb
mov
mov
xor
mulb
mov
mov
stc
daa
pop
mov
inc
aas
fs
cmp
push
adc
les
and
adc
pop
aam
or
mov
push
testl
mov
rcr
bound
jo
lods
mov
leave
std
dec
jle
push
mov
mov
mov
ja
push
sub
stos
aas
pop
push
out
outsl
shrb
icebp
inc
repz
inc
or
lock
xor
imul
mov
aad
insl
push
popf
push
jle
mov
inc
inc
jns
mov
push
leave
js
mov
loopne
mov
or
das
fsubr
stc
out
cmp
inc
sbb
out
cltd
add
test
movsb
call
xchg
popa
andl
jecxz
scas
or
in
or
sub
fsubrl
and
icebp
mov
addb
and
mov
or
incl
sarl
adc
insl
ja
dec
lret
cmpsl
aad
jns
test
scas
out
xchg
mov
cwtl
push
push
jo
fsubr
jne
mov
dec
imul
scas
and
movsb
push
or
or
jo
cmp
mov
hlt
cs
sub
hlt
dec
push
das
pop
adc
inc
mov
lahf
sub
cmp
or
sbb
mov
adc
mov
rolb
jl
xor
mov
faddl
insl
enter
mov
pop
ljmp
xorb
loope
icebp
hlt
xchg
push
add
lcall
test
in
mov
shll
and
out
push
movsl
imul
push
mov
mov
adc
test
lea
stos
adc
int
mov
sub
and
test
sbb
xor
in
dec
adc
ficoml
test
insb
push
mov
adc
jne
mov
add
cmp
clc
dec
outsl
int
lret
loop
jbe
cmpsl
ret
mov
xchg
mov
push
addr16
xchg
mov
in
rolb
test
adc
fisubs
inc
sub
jmp
cmp
out
xchg
mov
mov
mov
cwtl
pop
xor
fnstsw
dec
push
je
fsub
lret
cli
xchg
ds
sbb
jg
xchg
inc
xchg
stos
dec
lahf
insl
sub
push
out
es
pop
rclb
xchg
int3
xchg
decl
std
dec
jmp
xchg
jp
jecxz
and
mov
add
sub
inc
and
inc
push
jle
lock
pop
dec
push
fidivs
std
lock
adcb
xchg
jg
sub
mov
sbb
fst
popa
add
fidivrl
xor
or
fdivr
pop
imul
aaa
or
push
repz
sbb
push
lock
sbb
loopne
sahf
cmp
lahf
stos
pop
add
ljmp
das
dec
xchg
cmpsb
imul
fs
out
scas
push
imul
lock
mov
inc
test
scas
call
pop
call
xor
sti
adc
pop
inc
dec
lods
sub
xchg
adc
mov
cwtl
xchg
pop
das
movsl
inc
lods
xchg
into
aaa
lahf
sub
clc
and
rol
cltd
add
cmpsb
push
aad
int3
test
mov
fldl
mov
arpl
pop
stos
imul
mov
hlt
xchg
mov
hlt
hlt
pushf
xchg
push
mov
jo
lods
aas
idiv
xor
mov
int
inc
push
jmp
imul
inc
movsb
daa
insl
sbb
and
xchg
add
clc
out
jge
imul
or
mov
bound
cmp
push
mov
push
ja
imul
or
aad
outsl
jns
jno
es
std
push
popf
add
popl
ss
pop
adc
sbbl
sbb
cmp
popf
push
cli
pop
add
and
push
fwait
jbe
xor
mov
lock
push
cmc
rcrl
push
adc
push
jge
hlt
call
out
mov
outsl
or
ficoml
popa
or
out
mov
je
push
stc
xchg
repnz
dec
jmp
add
lds
mov
mov
xor
sahf
dec
cmc
push
in
xorl
rclb
adc
push
sub
out
add
lock
xchg
mov
mov
iret
cmp
push
xor
and
xchg
pop
xlat
xchg
sub
cli
daa
subl
inc
push
in
nop
inc
js
hlt
xorb
je
push
inc
lds
xlat
pop
repnz
inc
sti
jne
popf
mov
jg
out
outsl
dec
rclb
mov
into
xchg
shl
test
sarl
stos
mov
fdivl
les
mov
sub
push
mov
sahf
je
movsl
add
pushf
mov
sub
inc
fcoml
loop
leave
sub
sbb
sub
fdivs
fstps
xchg
pop
cli
and
inc
adc
fdivrl
mov
loope
xor
cmp
fwait
mov
iret
js
xchg
xchg
js
dec
fmul
fcmovb
cmpsb
lahf
cld
sub
inc
push
mov
clc
jp
fldenv
mov
dec
xchg
inc
dec
jno
add
dec
clc
cmp
xchg
mov
scas
fwait
xor
push
mov
mov
push
mov
mov
loope
test
adc
inc
call
in
ljmp
pop
lcall
aaa
test
lea
pop
lods
jmp
cmpsb
xor
iret
sub
jg
mov
fldl
sub
hlt
in
sbb
scas
rorl
das
mov
pop
roll
jmp
pusha
mov
add
mov
mov
mov
test
inc
test
out
add
mov
mov
mov
jecxz
mov
roll
repz
lods
dec
std
enter
inc
mov
shrb
jne
xor
testl
rcrb
xchg
sub
jp
or
xchg
xor
jae
push
pop
mov
xchg
add
fwait
cmpsl
mov
xchg
sbb
mov
cli
inc
shl
pop
push
adc
jnp
sbb
lcall
in
call
add
fcomps
jb
sub
test
sbb
and
xor
ds
add
mov
shlb
push
fucomp
sub
insb
je
int
jb
lock
push
nop
mov
push
xor
mov
sub
mov
sub
xor
insb
aaa
xor
scas
sti
fwait
or
pop
xchg
adcb
test
dec
movsb
js
mov
movsb
xor
clc
sub
xchg
mov
mov
inc
dec
fdivrs
insl
push
sub
push
dec
test
js
mov
cmp
fsubrl
lahf
mov
cwtl
sbb
arpl
pushf
mov
push
cmpsb
add
push
or
ljmp
fistps
jbe
jle
cmp
hlt
loope
stos
ljmp
add
jg
inc
fbstp
and
or
pop
and
add
leave
aam
test
mov
mov
orb
mov
add
mov
imul
pop
loopne
or
negl
lock
cmp
in
inc
test
cltd
js
movsb
lahf
adc
test
and
dec
or
imul
adc
adc
popa
jne
push
rclb
inc
out
xor
jmp
iret
add
pop
dec
xchg
push
or
inc
and
pop
cmpsl
stc
mov
jmp
pop
fstps
push
fisttpll
addr16
int3
shl
sub
cld
inc
sub
jecxz
inc
sub
push
les
inc
stos
xor
or
push
sbb
and
xor
test
adc
lcall
into
inc
jecxz
push
int3
inc
lock
sub
jecxz
sub
nop
xchg
imul
xor
push
test
test
xchg
insl
mov
mov
sti
ret
outsl
popf
sti
mov
pop
xchg
adc
inc
cmpsb
sbb
das
sahf
in
mov
push
sub
jle
inc
pop
enter
cmp
or
mov
inc
sub
push
in
shll
jg
fistl
repnz
cmp
lds
xchg
repnz
daa
pop
scas
filds
pusha
fwait
cmp
dec
or
aas
gs
sub
pop
mov
add
shll
mov
test
lods
cmp
jnp
iret
xor
and
adc
adc
cmc
mov
cmp
cs
in
and
xchg
adc
dec
add
jo
ljmp
and
jp
ss
and
rclb
and
xor
push
or
insl
arpl
pop
in
dec
inc
push
inc
pop
je
push
jae
sub
fdivr
cli
pop
sbb
subl
mov
jae
popa
xor
dec
mov
and
dec
incl
in
movsb
outsl
cmpsb
ds
fsubp
mov
mov
xchg
pop
fimull
pushf
ret
cs
cli
mov
ret
mov
ljmp
divl
and
pop
stos
loop
push
inc
in
adc
jp
lcall
pop
pop
repz
cltd
in
les
adc
arpl
call
cltd
dec
fidivrl
sub
leave
xchg
popf
sub
test
dec
cmp
out
mov
mov
out
dec
pushf
rcll
mov
test
les
daa
jnp
inc
cli
mov
mov
xchg
fmuls
and
mov
adc
out
inc
insb
jle
icebp
arpl
shr
sahf
iret
xchg
sbb
xchg
lcallw
cmp
movsl
sub
mov
and
mov
add
xchg
arpl
dec
ss
test
mov
ret
sub
xor
aam
rorb
mov
sub
push
inc
in
pop
inc
or
sbb
adc
popa
test
mov
dec
jbe
adc
fidivrl
pop
outsl
test
lea
or
jecxz
callw
push
dec
sub
jae
mov
adc
inc
mov
add
fnstenv
fdivs
dec
cmp
popf
inc
mov
xor
push
lods
adc
je
push
insb
xchg
jb
fistpll
repz
jl
or
jns
loopne
popf
xchg
push
leave
xchg
mov
into
mov
popa
das
xchg
loop
ds
sub
inc
push
or
push
inc
push
ret
bound
sbbb
mov
bound
and
add
fstps
cmp
subl
out
xchg
jbe
rorb
pop
outsb
mov
cmpsl
rcl
lods
filds
xor
mov
jge
add
lret
or
inc
xchg
inc
enterw
fbstp
fmull
mov
aam
aas
fstps
pop
loop
je
jne
out
jnp
loope
jp
sbb
or
inc
or
movsb
fwait
and
enter
test
cli
stos
sti
push
pop
xchg
jg
xchg
scas
add
mov
dec
jne
cmp
mov
pop
pop
cmp
mov
ror
xor
incl
pop
or
movsl
push
andl
outsl
in
fstpt
and
loopne
icebp
jno
lahf
ret
loope
decl
icebp
ja
xchg
out
imul
loope
mov
push
mov
mov
fucomip
fldenv
subb
into
je
dec
cltd
sarb
xor
insl
pop
out
sarl
mov
pop
sbb
xor
outsb
dec
dec
mov
aaa
repnz
nop
or
aaa
mov
aas
jmp
or
or
or
scas
les
push
movsl
hlt
mov
leave
or
pop
cltd
movsb
xor
jge
dec
movsb
add
fs
inc
ret
push
rorl
push
cmp
mov
jp
mov
xchg
in
ljmp
jbe
out
add
roll
js
pop
pushf
and
and
cmpsl
sbb
jle
push
fucom
adc
jmp
jl
stc
negb
lds
xchg
add
movsb
imul
subb
and
add
push
sub
sub
jecxz
daa
xchg
enter
mov
jecxz
jle
push
xor
xor
dec
out
push
lea
mov
add
mov
xor
xchg
clc
leave
dec
cwtl
inc
movsl
and
pusha
add
xorb
xchg
dec
cmp
push
clc
loope
insb
xchg
inc
add
inc
in
cltd
shlb
pushf
leave
sbb
data16
popa
jl
clc
inc
insb
mov
lock
out
stc
lock
pushf
into
je
repnz
fcoms
sbb
mov
xor
loopne
mov
cld
xor
adc
mov
jmp
lods
fists
inc
ret
insb
pop
scas
loop
jns
dec
jle
push
leave
inc
cli
mov
call
sbb
gs
aas
jo
out
mov
cmpl
call
cld
xor
cld
in
call
pop
fnstcw
jb
and
sbb
pop
jb
dec
int3
cmpsl
lcall
xor
dec
aas
cld
pushf
sbb
testb
aaa
lods
xlat
jle
pop
inc
push
scas
sbb
rcr
xor
movsl
sahf
sarl
mov
pop
nop
push
pushf
xchg
xor
jae
scas
into
rep
mov
imulb
xor
cmp
sub
jge
shll
pop
andb
mov
sbb
fsubrs
outsl
dec
mov
dec
inc
adc
ret
jmp
push
sbb
push
xor
mov
loop
stc
clc
xchg
pop
jb
and
inc
cmpsb
xchg
add
stos
or
sbb
jle
in
pop
cmp
and
cmp
into
xchg
cli
fmuls
call
or
cmc
xor
mov
pcmpeqd
adc
xlat
std
out
pop
fidivs
sti
fisubrs
ret
shlb
adc
sub
dec
lret
dec
ret
lea
dec
sub
jo
int
gs
call
mov
pop
scas
into
mov
pop
cmpsl
int
add
sahf
notb
adc
sub
dec
ret
scas
div
cmp
je
ret
movl
outsl
ss
addr16
insl
jmp
rcrb
mov
insb
pop
xlat
and
dec
xchg
inc
xchg
daa
std
and
outsl
lret
imul
mov
cmp
xchg
aas
sub
xor
aas
dec
mov
jl
xchg
aaa
es
and
loopne
cli
lcall
ret
fisttpl
mov
cmp
negb
and
aad
or
mov
and
add
daa
mov
out
mov
nopl
icebp
es
adc
fstpl
pop
and
mov
mov
call
bswap
cmp
xor
xchg
ret
in
pop
adc
fsubrl
std
xchg
adc
test
sub
int
loop
adc
loop
or
addr16
enter
sub
adc
or
jg
test
jecxz
push
daa
sub
popa
std
sbb
adc
sbb
pop
lret
pop
xor
in
mov
push
push
call
clc
mov
inc
jnp
outsb
sbb
or
cltd
mov
and
ss
aam
scas
in
xchg
jns
fld
mov
pop
into
test
out
cmp
dec
sbbb
or
xchg
push
push
inc
xor
movsl
push
sub
popf
add
fsubr
xor
gs
shrb
aad
inc
gs
xor
fildll
lea
out
push
clc
cmp
sbb
inc
add
mov
fsts
jmp
repz
xlat
clc
nop
xchg
sbb
adc
ja
xchg
ljmp
inc
xor
ja
sbbb
mov
mov
ja
fisubl
lahf
ret
pop
notb
pop
cmova
cmp
push
mov
dec
popf
ja
pop
ss
clc
mov
lcall
pop
sbb
out
test
xor
or
js
mov
cmp
popa
mov
xchg
xor
mov
xor
mov
mov
shrl
lret
stos
inc
imul
out
jno
push
arpl
repnz
dec
shrl
ljmp
clc
call
or
add
enter
jns
fsub
dec
mov
add
push
lcall
fldln2
push
repz
cltd
iret
cmp
push
mov
icebp
sarl
cmp
cpuid
sub
pop
ja
scas
lret
xchg
mov
add
int3
stc
xorb
out
ret
push
das
sub
and
sbb
jb
subw
into
push
push
ja
std
call
dec
fildl
shll
mov
fcoml
fisubrs
movsb
jo
mov
and
lcall
push
mov
ret
movsb
dec
jl
pop
push
adc
outsb
lcall
jnp
js
pop
mov
dec
jmp
je
ljmp
xchg
test
xlat
xlat
outsb
loopne
aad
ret
jae
cmpsl
outsl
adc
jmp
mov
loope
in
mov
out
mov
outsb
test
stc
in
sti
pop
clc
xchg
rorb
mov
xor
pop
into
pop
das
adc
and
and
in
dec
dec
outsl
fstpt
xchg
gs
xchg
scas
jne
sarl
popf
inc
imul
js
push
cmp
dec
jnp
sbb
movsb
sti
inc
xchg
jb
fistpll
mov
dec
or
sbb
or
pop
cmp
xor
jb
je
add
cmpsl
out
sub
lcall
mov
sbb
pop
loope
xchg
push
mov
push
cmp
mov
xchg
out
sub
pop
or
add
pop
cwtl
or
enter
sti
clc
in
jle
xchg
inc
mov
sub
ret
daa
fwait
pop
pop
push
jo
je
ja
xchg
dec
mov
pop
roll
roll
mov
out
push
dec
adc
mov
push
enter
cli
and
cld
cmp
pushf
insb
in
cmpsb
add
inc
xlat
sub
push
das
sbb
leave
and
fadds
bound
jp
mov
push
dec
pop
fsub
ja
ja
and
dec
cli
idivb
sarb
and
das
jne
sbb
ds
aas
test
mov
add
lods
push
nop
mov
sti
xor
inc
jecxz
mov
or
lret
add
jp,pt
inc
dec
dec
aaa
movsb
xor
sbb
jo
jg
out
add
or
out
sub
and
jl
push
adc
std
addl
sbb
int3
aaa
xchg
push
aad
rclb
sub
call
inc
cmp
add
mov
sbb
push
xchg
jbe
cli
mov
es
bound
add
xchg
outsl
loop
pop
pusha
push
sbb
add
xchg
sub
mov
add
std
fmul
adc
push
roll
xchg
mov
xor
mov
lds
or
adc
fnstenv
jle
mov
dec
popf
ds
pop
sahf
push
add
xlat
mov
clc
ja,pn
stc
mov
lock
mov
fwait
jl
lcall
and
push
mov
adc
and
jg
filds
push
lret
pop
cmp
lock
ds
stc
add
sti
xor
punpcklbw
out
mov
lods
mov
ficomps
scas
mov
scas
aam
xor
or
push
sub
shrl
push
repnz
orl
jl
das
xchg
outsb
push
das
pusha
loop
test
into
rclb
jo
dec
inc
mov
mov
loop
add
neg
push
jae
js
ficoms
and
add
neg
sbb
push
fimull
gs
dec
stos
jge
pop
das
mov
xchg
sbb
es
cmp
mov
repz
out
das
mov
inc
jns
loope
dec
sbbl
pop
mov
das
jnp
push
xor
or
bound
cltd
sub
mov
ja
dec
outsb
pusha
daa
xor
jbe
ds
jne
cmovae
lcall
or
mov
fiaddl
sbb
incl
mov
pop
fisubrs
sbb
jecxz
add
imul
adc
pop
hlt
scas
lret
xchg
xchg
out
dec
cmp
xchg
sbb
inc
mov
pop
mov
jb
stos
xchg
jb
cmp
xchg
cmp
mov
sbb
cmp
in
insl
sbb
ja
mov
adc
or
inc
imul
pop
mov
adc
inc
jbe
divl
sbb
dec
xchg
outsl
ret
and
enter
inc
xor
call
push
outsl
pop
adc
pop
or
jmp
mov
jge
cld
jbe
mov
shlb
stos
cmp
subw
lret
inc
sahf
in
or
xchg
pop
sbb
lods
subl
xchg
mov
add
loop
js
cmp
mov
popf
lods
adc
mov
adc
inc
ss
inc
scas
lret
stos
fstpl
push
sbb
insl
jns
cmp
out
pusha
popa
imul
inc
jns
mov
adc
fcmove
cmp
test
clc
rorl
sbb
fcomps
out
stos
jbe
in
xchg
xor
call
sbb
cmp
int
mov
pop
std
xchg
movsl
cmp
out
out
nop
dec
cld
xchg
popf
jo
aad
xlat
pop
subl
and
cmp
cmpsl
rep
cmc
fwait
jle
cld
shll
pop
in
fstl
xlat
dec
mov
pop
sbb
subl
mov
imul
scas
pop
scas
in
mov
inc
jg
int
xchg
and
gs
mov
in
leave
imul
xchg
cmpsb
adc
jbe
jae
mov
dec
xchg
xor
pop
inc
lret
sbb
cmp
push
fnsave
loope
outsb
movsl
les
xchg
sahf
lcall
into
fs
inc
pop
or
cltd
lcall
pop
inc
sbb
mov
mov
sub
mov
or
ss
sbb
cmp
lods
jg
fisubs
pop
pop
imul
lcall
lret
jno
cmpb
sbb
jmp
fisubrl
stos
jge
add
mov
lret
fisubrl
pop
rcll
push
mov
subb
negl
inc
or
dec
xor
mov
or
fwait
gs
dec
xchg
add
out
fstl
call
mov
into
dec
xorl
jl
push
jmp
test
in
dec
add
js
dec
imul
push
sub
inc
insl
sbb
xchg
inc
xchg
in
mov
xor
adc
mov
dec
cltd
movsb
lret
aad
inc
sub
mov
lret
pusha
aaa
adc
rcrl
adc
jg
xchg
arpl
sbb
mov
pop
sbb
pop
pop
or
add
sub
pop
es
fs
jge
push
ds
sbb
adc
je
leave
mov
cs
inc
lcall
dec
lods
test
inc
in
jle
aas
pop
xor
or
mov
xlat
andl
insl
stos
ret
mov
outsb
sbb
sti
jne
imul
out
into
insl
jmp
lock
inc
mov
adc
or
add
fnstsw
jno
inc
fdivrs
pop
dec
stc
ljmp
out
or
cmp
cmp
adc
inc
cwtl
movb
andl
scas
sarl
in
les
cmp
xchg
or
inc
subl
pop
testl
push
mov
gs
mov
mov
or
les
mov
daa
sbb
inc
test
dec
xchg
das
lret
enter
fidivs
cmp
jno
push
mov
and
mov
adc
push
pushf
test
in
in
out
fisubs
outsl
pushf
push
lods
dec
in
loopne
jp
mov
and
sahf
mov
and
push
or
push
mull
movb
pushf
outsb
push
xor
pusha
js
lock
in
jl
outsb
movsl
lods
insl
rcl
pushf
xchg
fisubrl
cs
or
cltd
push
loop
push
in
mov
aad
aam
mov
rcrl
ret
xor
lcall
sbb
fsts
add
push
or
cmp
bound
in
rdtsc
push
int
jl
jns
popf
xor
cmp
xchg
jbe
int3
lods
sahf
cmc
mov
push
aad
es
nop
or
lods
mov
mov
aas
sbb
sahf
scas
sub
sbbb
pusha
xchg
add
fidivrs
push
mov
das
addb
dec
aas
or
imul
ret
into
int
das
inc
out
inc
mov
int
and
sti
sti
and
jns
mov
cmpsl
xlat
in
cmp
ljmp
pop
sbb
adc
push
mov
fisttpll
mov
cmp
iret
pop
lret
xor
sub
mulb
jmp
jecxz
int
rcr
mov
dec
mov
mov
stos
xor
out
adc
dec
dec
cmp
rol
adc
fildll
cltd
xlat
xchg
push
ficoms
dec
xchg
cmp
sub
jp
dec
test
sub
mov
outsb
cmp
add
pop
inc
add
js
scas
adc
das
xor
mov
arpl
mov
and
iret
mov
cs
jp
int
les
aas
sub
cwtl
xor
push
and
or
lahf
jno
shlb
jle
add
xor
adc
sub
xor
adc
pop
or
xchg
sahf
nop
cld
cld
inc
loope
movsb
inc
jmp
sub
dec
jne
cmpl
fadds
add
imul
mov
adc
sub
sbb
mov
aas
push
mov
fnsave
inc
push
add
push
dec
cmp
xchg
mov
ja
push
dec
or
adc
mov
sub
in
in
arpl
mov
call
push
ds
lret
inc
in
pop
leave
add
bnd
and
jo
mov
enter
loope
clc
shl
pushf
pop
mov
pop
cmpl
scas
add
xchg
xchg
bound
add
push
jl
cli
cld
or
and
xchg
sub
fwait
or
imul
jmp
xchg
inc
sub
cmp
cmp
insl
aam
xor
mov
loopne
call
lock
fwait
cli
cltd
mov
lods
mov
call
fsqrt
cmpl
adc
lock
dec
dec
sbb
sysenter
sub
mov
mulb
lea
pop
pop
sub
cmp
push
leave
push
leave
test
sbb
add
fdivr
add
dec
shrw
out
sahf
out
cmp
in
jb
popa
nop
repz
mov
je
les
or
adc
jmp
dec
lret
add
lret
fcoml
imul
outsb
aas
subb
push
sbb
or
data16
mov
mov
ficoms
or
add
xor
jno
xlat
scas
push
loope
vsqrtpd
inc
outsl
and
mov
pop
or
mov
pop
mov
push
adc
dec
cmp
ja
pusha
fildl
leave
dec
mov
mov
add
into
mov
out
xchg
push
je
repz
loopne
outsl
pushf
repnz
sbb
stc
std
dec
adc
je
inc
mov
mov
push
dec
rorb
mov
cmpsl
sub
push
jp
sbb
fisubl
mov
aad
gs
ret
and
daa
jecxz
mov
cli
push
mov
mov
dec
xchg
jb
pusha
jbe
pop
dec
fidivrl
push
nop
pushl
js
xor
fs
cmp
jmp
clc
mov
xchg
sbb
mov
and
xor
mov
push
pop
xlat
push
dec
out
mov
ljmp
sbb
jo
sub
mov
out
sbb
jmp
add
jecxz
mov
jmp
pop
clc
fsubrl
movsb
lock
lret
je
xchg
scas
movsb
call
sar
std
sahf
enter
call
ljmp
mov
or
loop
pop
pusha
jge
repz
add
cmp
pusha
iret
outsl
xor
shrb
mov
aas
sahf
cmpsl
lods
and
sbb
iret
adcb
sub
push
mov
inc
into
popa
pop
sbb
inc
neg
mov
cmc
aad
pop
or
add
fucomp
cli
sbb
lock
xor
push
test
dec
mov
popa
adc
out
pop
lock
xor
aas
cmp
les
hlt
pop
push
mov
daa
leave
pop
addr16
mov
xchg
in
mov
and
xchg
pop
pop
push
dec
stc
cli
mov
stos
jbe
cwtl
cltd
adc
sub
adc
mov
stos
add
xor
adc
into
into
adc
adc
dec
cmp
dec
or
xchg
repz
movsl
mov
dec
lret
fiaddl
enter
popa
mov
jmp
mov
imul
dec
std
daa
fistpll
leave
xor
mov
ss
cwtl
or
dec
xor
cli
movsl
out
push
push
pop
jl
mov
inc
int
ret
xchg
mov
mov
jle
push
pop
jle
cli
es
repz
jne
mov
mov
mov
js
jmp
inc
mov
lret
sub
push
fs
jle
mov
mov
sub
jnp
sub
aad
mov
xchg
adc
mov
pusha
mov
inc
adc
mov
lods
ficoml
pop
mov
or
scas
or
out
xchg
push
jle
mov
push
lret
jg
js
mov
loop
push
aas
push
push
je
push
ljmp
popa
xor
mov
mov
stos
jno
loope
sub
inc
add
test
or
insb
or
mov
xchg
xchg
inc
lahf
addr16
adc
pop
inc
pop
sub
mov
ja
dec
fmulp
cmc
outsb
jnp
sub
ret
out
aaa
or
vmovaps
cmp
clc
inc
xchg
pop
in
lods
pop
pop
xor
sub
dec
jae
xchg
jmp
push
int3
loop
xchg
push
push
push
jno
push
mov
sarl
cwtl
stc
and
cltd
cmc
inc
lods
inc
lret
fstpt
lock
xor
push
push
repnz
bswap
jecxz
push
push
pop
add
pop
dec
dec
jmp
sahf
mov
jge
adc
enter
mov
test
sub
pop
dec
or
pop
shrb
xchg
inc
fwait
int3
dec
push
outsb
mov
pop
jp
xchg
xchg
int
dec
and
cmpl
inc
mov
imul
push
push
xor
fists
scas
xor
xchg
sub
xchg
and
mov
dec
mov
mov
daa
fisubrl
popa
shrb
pop
mov
jne
out
cli
xchg
cmp
aaa
inc
mov
ret
orb
mov
mov
inc
lret
adc
fs
push
xor
cmp
inc
mov
es
sahf
lods
adc
inc
int
mov
pop
je
aaa
mov
mov
cmpsl
aas
lock
lock
cwtl
sub
hlt
aad
inc
jb
dec
jp
cmp
imul
mov
push
fcmovnu
push
ret
out
aam
inc
lock
jnp
jbe
mov
mov
sbb
loope
sub
test
aad
cli
ljmp
push
call
lahf
jns
std
jecxz
stos
sbb
lcall
fstpt
cli
mov
xchg
xchg
fiadds
pop
ss
jae
hlt
addr16
scas
adc
repz
mov
test
sub
ljmp
popf
test
fsubs
jno
imul
jp
or
inc
jl
mov
and
xor
pop
or
pop
mov
ja
fiaddl
and
sub
sti
rolb
push
sbb
push
jns
insb
div
lods
es
hlt
sti
jbe
roll
mov
add
xchg
add
lcall
aaa
mov
aaa
cmp
jo
scas
stos
xchg
stc
and
push
jg
push
mov
cmpsb
call
mov
fisubl
outsl
fbstp
into
dec
pop
sub
addl
and
inc
ds
fwait
dec
enter
inc
sub
jbe
js
inc
mov
movsb
cmp
cld
xchg
lods
xor
xor
sub
sbb
cs
lods
iret
dec
rcrb
xchg
leave
pushf
adc
test
mov
dec
das
push
aam
jl
out
into
imul
push
mov
or
mov
stos
imul
je
add
dec
cs
aas
lcall
lcall
jmp
fs
cli
das
adc
inc
mov
pop
mov
mov
inc
fisubrs
and
xor
cmp
mov
adc
idivb
js
or
es
jl
out
int3
outsl
rolb
cmp
roll
clc
cmc
mov
pop
cmp
insb
imul
inc
mov
lret
lock
xchg
shlb
add
xchg
pop
push
lret
or
or
push
scas
es
stc
outsb
mov
adc
pop
in
in
mov
xchg
cwtl
repnz
xor
out
xchg
popa
mov
jne
push
adc
cmpsb
push
test
popa
cmp
iret
cmp
in
aas
xchg
into
repnz
xorb
inc
not
cwtl
xorb
sti
dec
pop
pop
pop
xchg
pop
adcl
addl
in
in
pop
or
push
pop
stos
imul
rcl
test
cld
mov
fbld
cmpsl
cmp
ljmp
loope
sti
dec
stos
lds
adc
iret
mov
push
sub
inc
icebp
dec
dec
aas
dec
leave
dec
jl
dec
inc
pop
repz
or
push
jge
les
les
add
adc
cli
add
popa
adc
ds
fcom
ljmp
lods
and
daa
xchg
addr16
push
fmuls
int3
sbb
stos
ss
mov
ret
jmp
fcmovnu
jb
ds
outsb
daa
jnp
or
in
gs
rclb
bound
aam
dec
jp
inc
inc
inc
fcoml
push
push
mov
ja
xlat
pop
fs
push
xchg
aam
cmp
mov
cmp
stos
mov
pop
inc
jecxz
in
dec
mov
les
inc
mov
repnz
jnp
mov
and
jge
jmp
in
repnz
push
push
add
mov
ss
sbb
rcll
test
nop
clc
add
xor
lods
pop
and
sbb
sahf
push
ljmp
lret
stos
pop
lods
add
outsl
adc
pop
mov
push
gs
xchg
cmp
enter
rorl
sub
sbb
or
fimuls
cmp
imul
in
int
ljmp
lods
nop
add
gs
mov
bound
stos
mov
push
cli
test
ret
imul
xor
xorl
aaa
stos
mov
repnz
out
mov
pop
es
xchg
mov
adc
push
pop
jl
leave
loopne
adc
mov
xchg
cs
fdivrl
lcall
xchg
filds
add
fcomi
adc
xchg
andl
jle
aam
fsubr
fisubrl
push
sahf
movsb
std
mov
repz
leave
subb
dec
or
fdivr
push
sub
ret
shlb
dec
add
les
popl
cmp
repz
xor
inc
sub
dec
dec
ror
inc
push
movsl
test
pop
pop
mov
push
mov
xor
cmp
out
imul
repnz
es
rorl
jecxz
pop
outsl
fistl
je
adc
xor
pop
lea
push
inc
xor
nop
sub
dec
adcb
sbb
sahf
xchg
jl
adc
mov
lret
lods
lods
test
cmp
leave
pop
sub
fldl2e
out
lcall
and
adc
xchg
test
aam
test
add
xor
xor
call
pop
adc
aaa
dec
cli
push
add
lcall
out
loopne
imul
cwtl
cmp
ja
pop
data16
inc
frstor
fnstsw
mov
int
push
out
xor
inc
stc
out
mov
in
cmp
xlat
inc
sbb
dec
mov
rep
fstpl
sub
jp
push
or
cmp
xchg
sub
or
rcrb
mov
in
lret
lods
mov
faddp
and
loopne
cmp
add
mulb
scas
out
xor
nop
pop
movsb
push
mov
fstl
outsl
mov
jg
sahf
in
cmpsl
add
xchg
test
adc
sbb
sti
push
add
cmp
xchg
movsb
mov
xchg
mov
cmp
bound
aad
inc
jge
sbb
aas
test
or
into
sbb
mov
cli
bound
addl
clc
pop
jne
ljmp
lods
xlat
xchg
in
ljmp
mov
adc
test
adc
gs
mov
xchg
mov
sarl
testl
mov
lds
into
xchg
shlb
sbb
int3
ds
inc
enter
lahf
add
cmc
pop
loope
push
repnz
adc
popa
xchg
mov
jge
fwait
mov
aas
mov
clc
je
jecxz
sbb
xor
xchg
jne
addr16
sub
push
ds
push
inc
or
adc
dec
hlt
push
scas
subl
mov
or
inc
mov
push
push
mov
sub
out
mov
sar
jle
cmp
and
nop
cmp
xor
lock
or
fcomi
cmp
xchg
sti
cwtl
fwait
jb
add
cld
mov
sahf
clc
mov
push
divl
shll
cmpsb
push
je
ror
fistl
and
pop
mov
imul
int
cmp
add
adc
out
fisttps
fs
sahf
or
sbb
xor
out
pop
mov
push
out
inc
popa
adc
mov
bound
or
and
xor
dec
adc
fmuls
add
xor
sbb
fdivl
std
clc
and
lods
push
inc
movsb
sbb
icebp
pop
xchg
xor
mov
xor
inc
movsl
pop
sub
jae
cs
jbe
adcb
sahf
sub
mov
movsb
cli
cmp
pushf
stos
or
mov
push
sbb
sbb
subl
inc
mov
mov
xchg
pop
or
leave
pand
mov
inc
bound
rcll
jo
xchg
je
cmp
std
inc
cwtl
out
xor
jmp
dec
pop
fsubrl
xor
shll
sub
icebp
lock
or
add
lods
xchg
scas
mov
in
fcompl
push
push
mov
ret
adc
call
mov
dec
outsl
and
dec
or
push
add
jg
movsl
pushf
and
push
out
or
add
int
push
es
movsb
pop
or
aaa
insl
cmc
vmovq
cwtl
stc
cmp
sbb
xor
sbb
jmp
or
dec
cld
jbe
ja
mov
xchg
shll
stc
pop
int3
fdiv
repnz
inc
fmul
jg
xchg
inc
mov
jge
lods
jns
jg
loope
sbb
dec
mov
nop
inc
mov
mov
xor
pusha
jmp
int3
arpl
inc
scas
mov
mov
scas
ret
in
test
and
pop
jb
sbb
stc
pop
push
scas
adc
repz
fisttps
aam
out
pop
test
sub
push
cmp
pop
jns
ret
cmp
lret
orb
adc
clc
ljmp
aam
data16
mov
aaa
jb
add
stos
cli
inc
mov
pop
xor
dec
and
int3
cmc
push
mov
jns
mov
xchg
or
arpl
divb
xor
cmc
cmp
mov
data16
sti
add
adc
inc
pop
sub
push
xchg
mov
test
test
icebp
mov
mov
loop
mov
fs
jmp
jno
dec
sahf
rol
leave
test
cmp
xchg
inc
into
jl
inc
sbb
in
cmp
pop
add
sbb
lds
hlt
pop
insb
fisubs
into
pop
dec
mull
mov
mov
or
out
ds
lods
movsb
jge
push
sahf
je
mov
push
cmp
out
sbbb
repz
adc
push
pop
pusha
sahf
cmp
xchg
pushf
stos
testl
sbb
popf
adc
sub
push
mov
jmp
ss
sbb
sbb
push
dec
nopl
dec
bound
inc
xor
ficomps
outsl
adc
dec
insl
jae
and
adc
out
pop
or
ja
insb
dec
cwtl
out
stc
fiaddl
pop
jecxz
dec
sub
and
int3
imul
fisttpl
roll
dec
stc
and
jge
mov
sbb
lea
cld
mov
adc
test
jmp
or
jb
pop
jp
fisubrl
clc
clc
sub
dec
pop
mov
dec
test
rclb
cli
jge
dec
adc
outsb
cs
xor
shrl
dec
ficoml
pop
outsb
xchg
adc
inc
in
clc
mov
je
jae
stos
sahf
sbb
add
sub
mov
ljmp
push
and
mov
mov
aaa
jo,pt
movsl
int3
aas
loopne
add
popf
push
mov
sbb
loope
roll
jge
lcall
ss
leave
adc
or
sub
xchg
sub
cmpsb
inc
insb
repnz
stc
dec
cltd
adc
pop
push
push
jmp
xchg
popf
test
lea
mov
pop
inc
pop
xchg
addr16
mov
jo
jno
popf
les
pop
cmp
dec
cmp
and
mov
mov
xor
aas
ljmp
jns
jnp
fmuls
pop
daa
cltd
push
std
push
sub
sub
mov
pop
xor
push
and
in
not
mov
mov
into
add
jo
mov
in
int3
sub
loopne
stos
inc
push
push
test
scas
push
fistpll
fmuls
xchg
jbe
sub
sbb
fmulp
ljmp
mov
dec
mul
insb
push
mov
adc
lds
cmp
sub
mov
roll
in
push
movsb
addr16
cmp
ss
ja
pop
pop
push
out
addr16
out
dec
pushf
inc
add
push
xlat
cmpsb
les
inc
fdivs
ret
outsb
xchg
mov
out
ss
fbld
hlt
outsb
inc
call
cwtl
jmp
pop
pop
xor
mov
push
int3
inc
subb
sbb
lret
or
mov
or
jg
xor
faddp
insl
xchg
jae
push
shl
les
outsl
xchg
mov
sbb
rol
sbb
add
das
push
inc
stos
idivb
cmp
je
faddl
mov
push
cwtl
push
mov
mov
mov
jns
xchg
pop
mov
andl
inc
imul
aas
cld
fbld
mov
push
lock
cmc
mov
mov
cmc
xchg
filds
xchg
insl
jae
inc
dec
push
rclb
jle
stc
ljmp
sbb
mov
or
jp
lods
push
in
insl
rcrl
sbb
es
aam
inc
xchg
addr16
mov
add
test
xor
insl
rorl
xor
addl
sti
lock
dec
xchg
dec
mov
xchg
cmp
inc
cmpsl
adc
stos
ljmp
call
repnz
das
pushf
arpl
mov
and
fwait
call
mov
je
pop
xor
test
cmp
jge
insb
mov
push
imul
jl
fildll
cs
cmp
ffree
or
mov
mov
mov
add
jle
lods
mov
imul
sar
xor
jae
mov
sti
rcr
clc
jge
xchg
stos
cmpsl
mov
sub
add
cmp
or
adc
jne
bound
pop
sbb
mov
insb
movsb
out
ret
cs
mov
dec
push
or
ffreep
outsl
or
aas
ss
insl
out
outsb
daa
mov
enter
push
fwait
les
loopne
jae
fimull
push
inc
fidivrl
pusha
test
pop
mov
sbb
call
mov
negl
imul
xlat
addl
leave
dec
fidivrl
cmp
popa
or
int3
lods
bound
and
js
mov
cli
imul
call
neg
xor
cmpsl
dec
mov
mov
adc
es
rcll
mov
popf
in
mov
jo
rol
adc
sub
push
hlt
and
fstpt
mov
pop
test
cmpsb
jge
push
dec
pop
xlat
cmpsl
scas
pop
mov
inc
aaa
jnp
aas
inc
rorb
pop
jbe
iret
xchg
test
and
xor
cmp
xchg
pop
sahf
pop
bound
and
jae
test
dec
out
sbb
xor
sbb
std
ljmp
mov
sarl
icebp
in
ja
cmp
dec
xor
xchg
sbb
jge
sbb
dec
test
inc
loopne
inc
test
lcall
aad
jo
sbb
divl
call
inc
or
dec
cs
test
ljmp
popf
fimull
mov
imul
loop
sbb
popa
or
or
out
push
xor
jae
test
test
xchg
mov
cmp
out
test
aad
loopne
push
icebp
mov
ja
lea
dec
or
int3
xor
das
xor
or
xor
ret
mov
add
mov
mov
jno
jmp
xchg
dec
andl
xor
jne
xchg
mov
xchg
loop
mov
or
jmp
cmp
adc
dec
cld
add
pusha
add
jae
rcr
or
mov
push
or
xchg
mov
push
inc
and
push
cmp
es
addr16
fisttpl
push
aad
insl
sub
mov
out
xchg
jne
adc
movsl
xchg
dec
cli
mov
inc
dec
xchg
jo
cmp
pop
mov
dec
cltd
cmp
sub
cmpsl
jmp
loope
repz
pop
imulb
movb
xchg
stos
sahf
leave
in
jge
sbbl
imull
pop
mov
lcall
dec
mov
movsl
cwtl
cwtl
imul
faddl
rol
or
pushf
insl
xchg
es
ja
inc
dec
mov
clc
pop
adc
mov
test
test
sbb
ret
xchg
pushf
push
sub
mov
and
js
mov
mov
xchg
push
scas
jp
fwait
mov
data16
ja
mov
in
jecxz
sbb
mov
cmpsb
add
stos
movsl
push
mov
popa
sub
cmp
add
xorl
rol
or
mov
aas
cmc
int
rcrl
push
lock
jle
cmpsb
cli
out
push
sub
nop
push
xor
cltd
or
leave
js
mov
dec
mov
and
mov
jbe
pop
scas
dec
and
in
fildll
and
in
addr16
out
outsl
pop
aaa
sbbb
loopne
cwtl
lds
mov
add
pop
xchg
xor
aaa
das
inc
sbb
jmp
sub
inc
daa
lods
lods
inc
sbb
insb
push
in
cltd
ret
out
and
xchg
or
xor
cmc
rclb
popf
adcb
enter
mov
pop
test
cwtl
xchg
mov
sbbb
loop
lods
shrb
adc
aad
ja
fstl
xchg
mov
rcrl
add
in
cmp
xchg
stos
jb
sbb
in
mov
fwait
shlb
pusha
cmp
scas
xchg
ds
lds
flds
aad
xchg
sbb
scas
push
mov
in
add
fldln2
jo
and
and
mov
insl
inc
jo
fists
xchg
dec
dec
jecxz
fisttpll
popf
push
jbe
jecxz
sub
pop
jmp
aas
xchg
dec
mov
aas
xor
cmp
dec
mov
mov
push
push
cmpl
rcrb
aas
add
xlat
loop
push
js
pop
in
or
mov
fwait
aaa
lea
or
shlb
mov
in
adc
jle
mov
movsl
in
push
int
pop
and
sub
hlt
aam
jbe
adc
jecxz
mov
pushl
or
out
movsl
aad
or
gs
cmpb
hlt
xchg
inc
pop
lds
add
mov
lret
ret
ret
int3
dec
push
mov
adc
stos
jae
inc
cmp
adc
pop
and
outsl
lds
xchg
push
pop
inc
andb
in
cs
or
movb
xchg
pop
mov
lret
jae
imul
rolb
lock
cltd
mov
lods
pushf
jmp
cwtl
jecxz
push
or
shrl
cmp
xor
xlat
movsb
mov
in
pop
dec
jp
add
ret
fnstcw
fbstp
add
push
jmp
lock
sbb
imul
sti
popf
cmp
sarl
insl
outsl
mov
xchg
test
pop
mov
call
xchg
sub
mov
sbb
outsl
jp
xchg
dec
mov
mov
in
add
repz
mov
jb
aas
sbb
not
andb
push
mov
pop
stos
dec
add
add
lret
xchg
and
scas
lahf
or
jmp
jecxz
inc
xchg
std
sbb
jbe
dec
movsb
add
out
popf
lcall
jne,pt
sub
stos
cmp
cmp
lock
subl
dec
mov
jb
je
mov
xor
in
cmp
imul
ljmp
and
jge
fwait
fisttps
mov
cmp
lods
or
gs
xchg
lea
in
idivl
xchg
adc
rcll
ljmp
pop
cmp
popa
cmc
mov
aas
inc
cmpsl
int
insl
cli
jnp
inc
jae
outsb
add
cmp
orl
in
cli
xor
aaa
shll
xchg
pop
sub
push
in
jg
mov
dec
nop
jecxz
or
xor
test
or
lods
mov
rol
out
and
and
xor
gs
add
jecxz
std
test
pop
mov
dec
es
mov
std
jmp
je
xchg
push
mov
pop
inc
outsl
cmp
fwait
lds
xor
sbb
mov
out
mov
movsb
loopne
loop
pop
mov
jb
cmp
xchg
fdiv
push
negl
inc
adc
aas
stos
movsb
js
lahf
cli
movsl
xchg
push
or
dec
or
mov
pop
push
push
in
push
mov
pop
stos
bound
pop
push
dec
pop
push
inc
repnz
out
ficoms
inc
pop
and
insb
cmc
jno
mov
jns
stos
cs
out
mov
inc
dec
std
test
mov
lret
push
test
jno
or
test
and
clc
mov
mov
dec
fildll
pop
mov
dec
popf
jp
push
fs
cmp
xor
inc
push
mov
push
fidivrs
pop
mov
inc
sbbb
lods
out
and
jmp
fcompl
scas
add
ret
inc
fiaddl
pop
popf
shlb
das
mov
addr16
fs
adc
icebp
jns
scas
stos
xor
add
lret
inc
push
cmp
in
xor
cmp
ja
xlat
jne
lret
filds
adc
outsl
cltd
ret
and
add
pop
add
jns
mov
daa
es
movl
movsl
aad
jb
shrl
xor
dec
insl
das
inc
mov
in
add
add
and
cmpsl
mov
adc
fdivs
dec
push
shl
add
incb
jo
fcmovne
lcall
adc
movsb
inc
inc
dec
mov
push
mov
rcr
jle
inc
fildll
dec
ja
arpl
bound
cmp
movsl
loope
adc
and
mov
xchg
jo
lahf
inc
test
pop
enter
fidivs
mov
mov
sbb
loope
js
push
pushf
pop
lds
mov
sub
je
popa
dec
mov
or
dec
cli
pop
jo
dec
dec
push
and
cli
int
xor
cmp
xlat
xor
outsl
leave
shl
mov
add
mov
mov
jns
ja
push
dec
ficoml
and
and
push
in
mov
adc
loope
jecxz
inc
sbb
les
jb,pn
aam
mov
fnstenv
int3
pop
fistpl
ds
xor
add
push
mov
mov
iret
sarb
add
adc
lret
push
xor
dec
inc
mov
fldcw
lahf
adc
and
cltd
and
and
xor
addr16
pop
ret
mov
sbb
and
or
push
sbb
pop
ds
into
jmp
bound
add
push
pop
mov
cmpsb
cli
lret
test
imul
in
testb
leave
lret
sub
ficoms
dec
mov
data16
jb
and
pop
fwait
jbe
clc
adcb
push
cmp
add
push
ss
insl
jmp
rcrl
rorl
andb
xchg
adc
in
lret
das
into
popa
adc
arpl
into
xchg
out
inc
or
dec
pop
ja
movsl
cmc
fbstp
enter
mov
mov
loop
inc
pop
jne
shrl
xor
aaa
or
data16
aas
lret
or
cwtl
sub
stos
jmp
mov
in
cmp
out
xlat
fidivrs
loope
add
inc
out
nop
sbb
adc
fisubs
cmc
daa
lds
jp
jnp
loopne
cwtl
aaa
add
outsl
stos
adc
mov
daa
outsl
or
loopne
sbb
stos
mov
fstps
cs
xchg
adc
or
je
das
fisttpl
sub
adc
pop
and
mov
adc
jg
lahf
xchg
sub
or
dec
xor
aas
mov
dec
pop
enter
ret
pop
lods
mov
cmc
std
sbb
jle
outsl
push
testb
xor
outsb
aad
dec
lcall
mov
adc
dec
pop
aaa
jp
mov
shrb
dec
aad
sbb
pop
dec
mov
ja
rcr
cmp
mov
shl
subl
push
xor
es
xor
jp
stos
jnp
dec
push
push
cmpsl
mov
imul
imul
pop
lds
sbb
mov
push
fsts
cmpsl
and
cmp
std
notl
sti
xchg
clc
lea
jge
push
aam
inc
bound
add
daa
stos
xchg
movsb
xchg
push
std
mov
aas
pushf
mov
adc
pusha
pop
shrl
out
mov
mov
das
pop
aad
push
and
mov
lock
or
outsl
mov
jge
jno
sbb
dec
cld
or
sarl
cmp
loopne
push
stos
jo
sub
adc
push
dec
or
loopne
or
popf
push
adcl
clc
leave
inc
xchg
and
int
lcall
mov
push
and
lea
jl
pop
in
push
push
outsb
cmp
mov
mull
or
dec
and
cwtl
popaw
or
fldt
and
ss
roll
arpl
sar
push
and
jmp
sub
jp
rcl
fnstenv
xchg
sub
cmp
addr16
cmp
lods
fldcw
sti
add
add
xchg
mov
push
add
mov
xchg
inc
mov
lcall
enter
mov
xchg
sbb
or
dec
shlb
out
scas
lds
xor
lods
ret
fwait
loopne
bound
jg
int3
pop
cmp
xlat
and
xchg
xchg
jno
sub
in
and
xchg
pop
mov
jge
adc
mov
xchg
stos
push
lods
movsl
repnz
mov
mov
push
mov
sahf
lahf
mov
loope
cmc
xchg
dec
dec
sahf
add
bound
flds
das
mov
cmp
lahf
ljmp
mov
in
les
inc
push
mov
pop
dec
pop
test
popa
sti
mov
icebp
aad
rorb
hlt
test
pop
daa
or
fisubl
iret
inc
lods
inc
notl
pop
xchg
push
jmp
mov
jmp
jecxz
inc
shrl
sbb
gs
pushf
or
pop
call
cmp
aad
mov
mov
add
shlb
jmp
loop
xchg
gs
out
in
mov
pop
fdivs
pop
ss
test
pop
rcr
movl
in
adc
push
js
int3
fcmovu
pop
lret
jnp
ficompl
je,pn
popf
mov
adc
lea
outsb
jbe
cli
mov
pop
push
mov
cltd
lcall
mov
cld
lea
push
mov
sbb
jle
and
mov
gs
je
push
lods
jb
int
xchg
ds
xor
test
outsl
xor
popa
sub
or
dec
pop
mov
call
scas
push
mov
dec
sub
xchg
call
adc
out
cmp
ljmp
lds
sbb
xlat
add
add
mov
sbb
mov
push
popf
lds
mov
outsl
movsb
fidivl
mov
jle
xchg
mov
mov
cmp
cmc
xor
xchg
mov
fsubp
rcrl
sub
icebp
xchg
mov
pop
addb
mov
sbb
mov
xchg
in
or
xchg
sub
sbb
jge
adc
push
inc
and
mov
mov
push
std
negb
fsubl
stos
std
stc
push
outsl
arpl
dec
outsb
sub
arpl
fsubrp
ljmp
or
lods
xchg
sub
push
xor
in
int
and
pusha
dec
add
test
stos
push
test
test
insb
push
cli
xchg
add
fisttpll
push
inc
dec
je
test
jns
xchg
dec
repnz
add
arpl
test
pop
test
pop
push
cmp
mov
mov
inc
push
push
repnz
cmp
jp
or
rol
xorl
mov
fisubl
nop
jno
xorl
mov
fildl
cmpsl
testl
scas
bound
je
sbb
pop
sub
into
sub
andb
jno
jo
dec
sbb
mov
xchg
roll
mov
cmp
sub
repz
sbb
lock
insl
cmp
es
adc
movsb
inc
cmp
cmpsl
xor
lds
fsubl
aas
imul
or
sbb
mov
daa
mov
repz
mov
push
mov
cmp
sbb
xor
push
xchg
sbb
addr16
movsb
js
test
jle
in
in
cmp
jne
insb
mov
cmp
std
scas
cmp
dec
sub
aaa
or
ret
popf
test
imul
mov
pop
jmp
cmpsl
stos
in
xchg
xchg
sbb
mov
mov
cld
hlt
pop
test
jmp
pop
mov
pop
mov
jecxz
xchg
imul
dec
stos
cmp
mov
aas
xchg
loop
repz
cli
xor
push
aaa
nop
loopne
testb
push
cmpsl
add
jb
data16
inc
push
jb
movsl
sub
xchg
adc
repz
cmp
dec
loopne
rorl
cs
pop
pop
lret
sbb
push
rorb
or
inc
mov
rolb
test
outsb
and
inc
xchg
sbb
mov
ret
mov
add
jp
cmp
nop
dec
jns
rorl
pop
call
icebp
jno
pop
das
add
rcrl
sti
popf
popa
cmc
adc
pop
fildl
roll
mov
fs
sahf
push
xchg
sub
shr
cld
ja
repnz
push
dec
nop
push
sbbl
repnz
mov
cmp
jno
mov
popa
xorl
xor
mov
dec
jno
add
inc
aas
dec
dec
dec
aam
int3
sbb
test
cmp
aaa
test
in
xor
bound
arpl
pop
jo
outsb
xchg
orl
mov
jno
mov
jecxz
cmp
pop
popa
inc
stos
je
mov
shlb
sub
fisttpll
xlat
ja
iret
push
into
dec
pandn
mov
mov
rcr
rcrb
lret
or
stc
ja
test
rorb
rorl
in
ja
mov
stos
fadds
inc
push
xor
pop
dec
jno
xchg
mov
push
push
xchg
cmp
insl
scas
fmuls
and
fstpt
add
or
lea
inc
repnz
adc
mov
loopne
stc
das
mov
mov
dec
pop
cs
cwtl
cmp
inc
cmpsb
and
pop
push
dec
xchg
dec
iret
addb
jmp
ja
hlt
call
sub
pop
ljmp
pushf
outsb
bound
sbbl
in
jl
icebp
sub
fsubs
lahf
pop
adc
push
js
xor
jmp
ret
jl
bound
jge
xor
ja
push
addb
arpl
xor
pop
fsubl
sub
pushf
cmpsb
adc
ret
fdivrl
imul
mov
dec
push
mov
cli
in
ret
or
jle
sbb
out
adc
les
ja
rcll
mov
inc
mov
push
xor
xchg
ja
insb
int
inc
push
dec
push
jae
push
mov
adcb
push
jmp
fs
ljmp
sahf
sbb
ss
in
pop
push
gs
fstpl
sbb
leave
outsb
push
cmp
xor
repz
fnstcw
add
mov
mov
pop
ret
xchg
push
imul
fistl
negb
xchg
ja
xchg
xchg
lret
movsl
clc
xchg
xor
push
movsb
sub
jge
add
add
cmp
fdivs
mov
add
add
cltd
test
adc
pop
push
push
jp
xor
cmp
or
and
fcmovnbe
mov
pop
jecxz
fldenv
pop
stc
mov
cmp
xor
jno
cmpsl
gs
cli
lods
push
int3
mov
out
cmpsl
movsl
bound
fisttpll
dec
movsb
jb
in
sarb
loopne
adc
test
dec
sbb
inc
gs
dec
insb
cmpsl
cmp
cmc
jbe
ss
or
mov
sbb
push
inc
inc
stc
cmp
mov
sbb
xchg
pushl
stos
adcb
xchg
xor
push
bound
aam
test
movsl
cli
jp
icebp
sti
inc
andl
fdivrl
sti
pop
sahf
aad
in
fisubl
xor
inc
cmpsl
sbb
outsb
push
mov
outsl
push
adc
mov
into
fwait
test
cld
rcl
loopne
scas
rcrb
dec
lock
lods
mov
aaa
sub
sarb
adc
das
pop
push
subl
lods
sbb
xchg
sbb
out
or
ret
ficoml
insl
test
push
sbb
adc
mov
ja
adc
ljmp
jbe
xor
iret
fdivrs
mov
imul
mov
fwait
cmc
adc
repnz
mov
imul
aas
cltd
inc
or
cmp
sbb
adc
lea
data16
mov
stos
pushf
aas
sbb
repnz
movsb
fs
ret
jge
cli
je
loope
xor
pop
daa
fildll
mov
lea
sbb
pop
mov
xor
sub
dec
and
push
and
mov
add
mov
repnz
cmp
mov
pop
ret
mov
ffree
fimull
xor
cltd
xchg
test
faddl
cltd
fisubl
fcmovb
fs
sub
xchg
or
push
pusha
fimuls
in
xor
inc
sbb
push
dec
les
mov
pusha
xchg
jns
fs
rclb
aam
fisubs
jns
xor
ds
pop
aam
loope
rorl
sub
adc
inc
in
mov
xchg
xchg
push
pop
mov
lea
shll
push
loopne
add
and
add
xor
bound
in
add
out
cwtl
and
or
add
mov
ljmp
xchg
jb
sbb
jl
mov
dec
jo
std
inc
cmp
xchg
cmp
sarb
adc
in
inc
sbb
cmc
fadds
out
cmp
pusha
push
pop
mov
loop
pop
dec
fidivs
test
and
push
hlt
push
and
cld
icebp
shll
cltd
fsubrs
inc
mov
roll
lock
testb
xor
loope
add
xchg
mov
adc
dec
pop
ljmp
mov
adc
rcrb
jg
xor
pop
ja
push
pop
dec
pop
addr16
test
or
mov
adc
mov
aas
push
mov
fs
mov
mov
mov
inc
imul
jo
sbb
inc
mov
sub
leave
push
add
pop
xchg
lea
inc
cmpl
lods
mov
loope
insb
inc
inc
or
and
or
xor
cmp
out
enter
xchg
sub
sub
mov
inc
fstpt
xchg
add
mov
sti
ret
cmpb
or
mov
sub
jnp
mov
sbb
mov
dec
mov
ljmp
or
test
push
out
sbb
bound
lea
xor
scas
fimull
sub
add
inc
adc
addb
jmp
inc
idiv
fldt
adc
lea
repnz
pop
adc
jl
stc
inc
add
pop
push
pop
mov
movsb
adc
dec
fisubrl
lock
xchg
test
jnp
lock
adc
cmc
mov
cmpsl
repz
sbb
jbe
push
test
les
cmpps
pop
dec
adc
int
filds
jp
xchg
int3
jne
push
fcoms
nop
add
push
jmp
ljmp
cmp
insb
mov
dec
cwtl
jns
inc
dec
mov
push
ret
xchg
and
ret
mov
addr16
xchg
cmpsl
jne
in
and
add
mov
xchg
mov
vpxorq
test
lcall
stc
add
adc
adcb
outsl
inc
outsl
sub
adc
test
push
loopne
pop
call
mov
mov
jnp
xor
push
lock
mov
pop
neg
jmp
add
fldcw
test
in
leave
mov
xchg
pop
and
call
shll
rclb
jb
dec
not
lahf
or
in
push
dec
dec
ret
dec
mov
cmpsl
or
pop
inc
jle
fdivrl
inc
in
in
out
mov
jne
loop
mov
fsubl
repz
jecxz
in
mov
inc
es
inc
addr16
jnp
jmp
push
adc
mov
sbb
popa
pop
add
mov
mov
ja
mov
shrb
xchg
addr16
in
mov
adc
std
dec
dec
or
xchg
pop
aas
fistpl
fistps
cld
negl
fisubrs
insb
mov
mov
lret
mov
inc
mov
out
jp
sbb
mov
cmpsb
pop
mov
sbb
dec
adc
fucomp
cmpl
sbbl
aas
and
and
repnz
xor
test
in
iret
dec
push
cli
adc
inc
mov
mov
mov
aas
mov
cmpl
pop
xor
in
nop
add
mov
push
jp
jb
cltd
mov
cmp
cmp
pop
jns
imul
aad
in
sbb
loop
sub
shlb
int3
or
pop
cmp
pop
push
cmp
jecxz
out
out
fwait
pop
add
mov
xchg
push
cmc
sub
mov
dec
dec
dec
sar
subb
dec
movsl
fdivs
add
negb
xorl
data16
sarl
repnz
pop
add
cmp
dec
fldl
jge
rorb
lds
outsl
adc
rcrl
fiadds
xlat
outsb
repz
daa
mov
add
cmpsb
pop
adc
negl
out
fidivrs
mov
int3
xor
test
int
mov
lods
ss
loop
inc
xchg
mov
pop
rcrb
repz
fsub
fs
hlt
inc
push
mov
btc
mov
push
cmp
xchg
inc
js
cld
std
sub
fwait
xchg
aaa
pusha
sti
mov
mov
popa
sub
pop
jae
cmpsl
repz
push
in
out
lret
add
sahf
cmp
arpl
jmp
sbb
add
lret
pop
add
jg
mov
dec
add
test
mov
mov
adc
dec
inc
int3
jne
int3
dec
sbb
xlat
cmpsl
jno
and
insb
mov
or
sahf
in
call
inc
mov
push
addr16
push
pop
mov
xchg
xchg
stc
inc
dec
ds
outsb
mov
outsl
or
inc
or
int
fcmovnu
adc
jecxz
test
outsl
pusha
fimuls
push
das
or
pop
jmp
xchg
dec
inc
push
movsb
call
jno
sub
ljmp
mov
lret
add
cmp
fisttpll
lret
mov
pop
ret
add
push
mov
mov
cltd
iret
add
xchg
mov
push
mov
cmc
inc
sbb
test
mov
cmpsb
sub
mov
pop
rolb
xorl
sbb
mov
stos
mov
in
and
mov
mov
fstpt
fcoml
mov
pop
jle
test
push
and
test
out
inc
xor
and
rorb
repnz
movsl
insl
push
dec
jns
cmp
push
jecxz
cmc
jmp
scas
ss
xlat
dec
and
fwait
sub
cmpsb
dec
push
in
push
stos
mov
mov
test
rcrl
stc
popa
sub
mull
mov
mov
xlat
sub
or
sbb
in
pushf
xchg
movsl
or
mov
push
sbb
push
jb
mov
inc
stos
dec
mov
fdiv
lcall
mov
addr16
mov
adc
lock
repz
jo
fsubrs
push
inc
xor
xor
inc
push
push
adc
xor
movsbl
in
gs
repz
addl
adc
sbb
ret
adc
mov
sub
lret
clc
iret
loope
jmp
lret
aam
dec
jecxz
mov
popl
movsl
aaa
stc
jo
cmp
add
mov
add
push
cmpsb
jge
mov
inc
sbb
jnp
inc
in
xor
xchg
mov
cltd
negl
cmp
mov
aad
cmpsl
cld
imul
sub
and
sbb
mov
loopne
push
adc
aad
xlat
xor
daa
push
jae
and
mov
cmp
lods
sub
push
add
loope
mov
mov
dec
cmpl
ljmp
cmp
mov
subl
xchg
add
mov
ficoml
dec
stc
or
cmp
mov
int3
shl
rclb
mov
add
pop
pop
push
ficoml
push
mov
in
cmp
or
xchg
jns
xlat
rorb
jmp
mov
add
add
push
aas
call
pop
js
lods
add
lods
int3
fwait
dec
js
pop
mov
xorb
sub
stos
mov
ds
mov
lea
adcl
popf
xchg
mov
shrb
add
pop
cmp
push
sub
rorl
mov
cmp
cmc
ss
dec
cmp
enter
mov
jae
xchg
dec
movsb
mov
sbb
testl
sarl
add
cwtl
dec
inc
orb
repnz
push
ja
dec
nop
movsb
mov
into
push
sub
and
xchg
test
and
hlt
std
in
mov
pusha
aad
lcall
cltd
sub
mov
mov
ljmp
and
outsl
in
cmp
gs
and
int
mov
ljmp
and
xor
sbb
xchg
pushf
fadds
lahf
cmp
sbb
out
jnp
pushf
inc
inc
inc
cmp
int3
and
pop
jmp
icebp
or
dec
or
std
fisubs
mov
subb
push
mov
sub
lret
sub
lea
test
lods
push
and
jl
popl
sbb
int
ficoml
jmp
data16
loope
sub
call
mov
ret
leave
mov
and
jns
loope
add
inc
xor
xchg
add
sub
pop
arpl
or
repnz
clc
in
inc
outsw
push
jle
gs
je
xchg
ds
add
pause
lods
xchg
xchg
clc
lahf
mov
sbb
hlt
mulb
jmp
inc
push
xchg
fsubs
adc
cmp
jno
clc
gs
pop
mov
andb
add
and
mov
repnz
loop
xchg
aad
mov
adc
decl
ret
lock
or
inc
fcmovnu
jle
bswap
mov
add
dec
testl
ss
gs
jmp
call
lods
into
adc
and
and
je
xlat
push
pusha
sub
inc
aaa
sbb
cmpsb
iret
popa
fcoml
jae
lret
and
cld
jp
shlb
xor
cli
into
mov
xor
lret
xor
pop
sub
pusha
xlat
andl
jl
out
icebp
and
mov
out
popa
and
add
fmulp
or
inc
inc
pusha
repnz
pop
cmpsb
cmpb
insb
fbld
ss
test
pop
lods
sbb
jge
and
insb
push
xor
and
fsubl
mov
das
add
scas
sub
pop
negb
add
enter
fcmovne
cwtl
mov
xor
mov
xchg
dec
fcmovu
jp
sbb
into
push
pusha
cli
out
pop
jb
dec
out
push
adc
inc
xchg
stos
jge
outsb
dec
or
mov
push
or
or
or
xor
hlt
mov
dec
push
nop
cmp
insl
xor
adcb
iret
loope
xchg
lret
mov
rcr
popa
cs
ja
lock
shr
and
jo
pop
jp
sarl
xchg
mov
outsb
mov
sarb
mov
das
clc
add
xchg
cmc
sti
or
jne
dec
add
das
ret
jge
fwait
test
popa
ja
sbb
and
cmpsl
cmpsl
cmp
and
push
mov
sti
sub
mov
push
repz
pop
xlat
imulb
out
push
xchg
aaa
inc
push
popf
popa
and
mov
inc
cmp
inc
add
push
ss
cli
popf
push
stos
jmp
enter
imul
insb
int
cs
sbb
push
pop
addr16
cmc
orb
sti
inc
mov
sahf
and
sub
imul
out
out
lcall
das
xchg
iret
test
dec
test
inc
out
dec
push
adc
pop
jmp
fnstsw
push
cmp
ss
push
cmp
xchg
punpcklbw
sbb
cmc
push
test
sbb
cmp
sti
cli
or
fiaddl
movsl
mov
sbb
add
mov
mov
xchg
enter
mov
nop
gs
jg
pop
push
lea
imul
inc
push
pop
xorb
out
test
add
mov
push
xchg
dec
addr16
xchg
pop
xor
pop
sub
mov
imul
fstpt
daa
lock
scas
xor
arpl
push
cli
fs
fsts
push
mov
loop
mov
xor
loope
enter
and
xchg
mov
fiadds
dec
push
repz
or
or
out
sub
push
or
cltd
mov
xor
mov
mov
arpl
enter
scas
cmp
sub
lock
js
xchg
aas
sub
add
lcall
inc
jmp
mov
sub
add
push
mov
in
iret
inc
addb
shrl
xchg
aad
xor
sarl
pushw
fxch
mov
dec
mov
stos
adc
hlt
mov
outsl
jns
test
or
mov
fildl
imul
je
push
loope
dec
cld
mov
adc
sahf
outsb
and
jecxz
js
into
cld
addb
mov
mov
push
jg
popf
and
repz
jne
mov
repnz
cwtl
sbb
or
adc
adc
je
jp
pop
pop
sti
mov
mov
mov
and
arpl
xchg
add
flds
outsb
cmp
adc
enter
push
lock
push
js
xchg
push
push
pop
lock
and
xor
inc
pop
std
push
cmp
imul
scas
mov
lea
cmp
ficompl
mov
dec
outsb
add
enter
and
outsb
adc
xor
out
idivl
cmpl
inc
nop
push
mov
fiaddl
mov
xchg
test
add
pop
dec
idivl
jnp
cmc
sbb
repnz
iret
sbb
insb
add
shll
push
jmp
lods
jo
leave
cmpsl
icebp
cwtl
adc
xor
sub
bound
fs
inc
or
or
sbb
jbe
mov
clc
mov
ret
jne
inc
lret
xor
jae
add
stos
xchg
jecxz
outsb
sbb
mov
xchg
push
jle
inc
test
aas
mov
addl
jnp
push
lds
mov
mov
gs
push
adcl
inc
bound
inc
daa
sti
shll
sbb
insl
add
shll
scas
xor
xchg
fsts
sub
pop
and
mov
add
dec
ljmp
push
mov
arpl
movsb
shll
mov
icebp
adcb
inc
mov
mov
jo
jg
inc
stc
pop
popf
jo
ret
cmpsb
dec
jbe
out
adc
imul
xor
loope
cli
pop
xlat
cmp
dec
cmpsl
cmp
jmp
mov
mov
or
lock
les
jg
decb
mov
lret
aaa
cmp
mov
or
repnz
lods
sbb
mov
cmc
test
dec
pop
xlat
or
cmpl
pop
inc
fcompl
ret
dec
pop
bswap
mov
mov
xor
sbb
push
cmp
popa
hlt
cmp
lahf
fisttpl
cmp
ficoms
cmp
lahf
sahf
jg
bound
push
lods
imul
mov
and
adc
mov
hlt
cwtl
fnstcw
stos
or
leave
or
sbb
scas
xchg
mov
mov
sub
jbe
fs
sbb
jecxz
xchg
adc
lea
aas
jne
fsubr
stc
lret
dec
daa
frstor
lds
sub
cmp
aas
ljmp
outsb
or
mov
jl
ljmp
pop
loope
pop
xchg
cs
outsl
and
jnp
addl
aaa
xchg
xor
fistpl
jo
into
xor
cmp
adc
rol
or
adc
in
shrb
push
and
jmp
jb
iret
jmp
adc
ficompl
arpl
out
hlt
inc
and
int
cmc
sti
ss
xchg
xlat
add
inc
add
leave
jne
call
xchg
jae
cld
mov
inc
arpl
pop
ljmpw
ret
push
scas
lock
jp
cmovns
mov
fidivrs
mov
rcl
jno
mov
jae
sbb
mov
and
imul
lods
ret
inc
jmp
mov
xchg
sarb
test
lea
mov
popa
cmp
jecxz
sahf
cmp
js
loopne
sahf
dec
push
or
sti
mov
push
xor
int
cmpsb
jno
inc
dec
std
test
push
adc
adc
pop
ret
and
push
inc
daa
cltd
popa
std
aam
mov
cmp
loopne
dec
sbb
dec
aas
cmp
iret
leave
push
iret
xchg
pop
pop
test
xchg
pop
cli
adc
inc
jnp
js
pop
jno
sbb
scas
dec
cld
sub
mov
inc
and
pop
adc
pushf
lahf
pop
push
dec
movsl
dec
mov
inc
std
xchg
cmpsl
inc
mov
imul
sub
enter
ficoms
and
mov
int
mov
sub
dec
xor
mov
mov
jg
and
out
cmp
fnstenv
in
rol
push
sub
pop
test
inc
jae
or
movsl
jmp
es
sub
das
das
aaa
cmpl
xor
aad
fsubrs
iret
loopne
ljmp
jnp
cmc
pop
mov
jg
mov
fldcw
push
push
pop
sahf
roll
rcrb
and
lods
and
cwtl
fmul
or
stos
clc
cli
or
inc
loopne
outsb
andb
jns
and
cmpsb
adc
popa
push
mov
insb
pop
inc
movsb
sbb
lods
ret
stos
mov
pop
fldl
aas
adc
ret
std
int3
sahf
push
dec
add
push
fs
or
outsb
pop
sub
jp
and
xchg
mov
inc
insl
mov
pop
aam
push
xchg
lock
push
subl
dec
cs
inc
popa
mov
ret
imull
and
push
roll
out
xchg
rorl
push
mov
aad
into
test
popa
mov
icebp
jmp
and
sub
shll
sbb
mov
ja
rclb
rclb
push
in
mov
cltd
orb
aam
sub
jecxz
jo
xor
ljmp
sub
mov
or
adc
cmpsl
rorl
jns
lret
repnz
repz
outsl
xchg
test
dec
xor
pop
pushf
mov
and
out
sbb
or
lret
pop
imul
cltd
ss
lret
ds
repnz
jae
mov
pop
mov
or
xchg
test
mov
lcall
inc
mov
xchg
pop
rcrb
pop
dec
push
or
jo
mov
cld
sbb
and
sub
sbb
shr
and
jmp
shrb
clc
xor
xlat
cmpsb
lds
xor
nop
bound
movsl
push
cltd
clc
mov
mov
loop
inc
adc
jne
insl
andb
adc
and
aam
push
mov
aam
fsubr
or
shll
cmp
mov
add
xchg
xchg
xor
mov
psubsw
cli
push
push
cmp
repnz
adc
push
enter
int3
sarb
sahf
add
popa
jbe
stos
pop
aaa
mov
xchg
sub
test
pop
adc
inc
push
lret
imul
ds
jne
outsl
xor
mov
shl
inc
cld
sti
jl
test
imul
mov
lods
test
aad
pop
cli
sbb
push
test
in
xchg
lods
or
dec
loopne
add
das
push
xchg
lahf
cmp
jns
lods
push
int
aad
mov
imulb
dec
rclb
out
xchg
dec
out
fidivrs
mov
mov
jmp
lahf
inc
mov
cs
lods
mov
ljmp
divl
repz
cli
mov
jbe
lds
out
dec
xchg
jns
cmp
and
ret
mov
cwtl
cmp
xchg
nop
leave
or
pop
aad
aad
mov
cmp
mov
insb
mov
xor
loopne
cmp
stc
subb
sub
popa
or
push
mov
xor
arpl
test
xchg
pop
fdivrs
sbb
mov
jne
push
pop
cmc
mov
cmp
or
jb
lret
cmp
cvtps2pd
xchg
push
sbb
aad
or
rorb
out
mov
mov
cmp
in
jb
outsb
inc
ret
mov
test
jne
and
mov
test
jbe
mov
add
jp
cmp
in
inc
sub
jb
fisubrs
or
in
ds
pop
inc
sbb
loope
inc
js
pop
dec
mov
cld
push
lds
imul
stos
adc
clc
add
clc
jmp
sub
xor
pop
loopne
push
inc
mov
inc
punpckldq
cmp
jl
jns
ror
imul
add
scas
xchg
xor
pop
cmp
add
cmp
mov
pop
xchg
add
lods
sub
les
jp
scas
adc
and
or
rorl
push
xchg
jg
ret
test
fdiv
adc
sbb
xchg
add
inc
inc
int
gs
sbb
addr16
loope
andl
or
xchg
jmp
jb
sub
lods
add
stos
adc
insb
jmp
lcall
pop
pop
and
mov
mov
ljmp
xor
sub
xchg
push
ss
or
push
pop
outsb
vphsubbw
xchg
pop
cmp
mov
xchg
lock
sub
js
lods
nop
addb
mov
decl
sub
and
lods
fistpll
aas
cmp
es
inc
lds
pop
push
rolb
jae
mov
sbb
in
fs
mov
imull
and
sbb
xor
outsl
push
lods
aaa
add
cltd
insl
ds
jecxz
xchg
mov
gs
pop
shrb
mov
test
xor
xchg
outsb
mov
in
scas
inc
inc
ficoml
jmp
cs
incl
sbb
or
jecxz
mov
dec
fnstsw
enter
jecxz
lret
scas
es
iret
push
push
iret
jmp
outsl
jae
cmp
cmpb
mov
aad
mov
sahf
jae
cld
fistl
lret
jne
inc
mov
mov
fcomps
push
mov
test
cmp
pop
add
lds
mov
les
movsl
jmp
inc
mov
dec
or
mov
stos
sahf
lret
and
loopne
pushf
inc
jne
cmp
xor
roll
mov
inc
mov
jae
xchg
cmp
dec
xor
arpl
ss
mov
pop
mov
pusha
fcmovbe
cltd
popa
movsb
outsb
pop
jns
dec
int
gs
pop
push
aam
sarb
jl
es
xor
fdivl
add
test
jne
xor
out
xchg
xchg
sbb
dec
es
pusha
icebp
adc
stc
mov
mov
shlb
sarb
sbbl
inc
lods
hlt
call
mov
add
mov
aad
shl
mov
or
inc
cltd
adc
jns
fcmovnb
jge
mov
mov
dec
mov
mov
outsb
jo
mov
sub
inc
pop
test
das
xor
push
orb
xchg
test
jns
imul
mov
shr
lods
popa
ss
aam
dec
out
test
mov
ret
push
xchg
cmp
jp
clc
leave
push
loop
std
pop
xchg
push
jmp
cmc
hlt
sbb
and
out
daa
pop
jecxz
fcmovnb
ret
jl
mov
test
xchg
outsb
ret
push
xlat
sbb
out
adc
call
fdivrl
mov
inc
mov
in
xor
negb
mov
dec
iret
movsl
push
mov
cmp
mov
jne
aaa
cmpsb
pop
add
sub
mov
int
jno
fisttps
in
mov
outsl
adc
pop
cs
out
xchg
loop
cs
jae
xchg
push
sbbb
js
or
xchg
push
or
jg
dec
in
lock
jno
aaa
ljmp
outsl
cmp
lcall
mov
xchg
push
mov
sub
loopne
fucomp
sub
push
cmp
in
arpl
insl
sbb
or
in
pop
dec
sbb
mov
sbb
idiv
cwtl
mov
xchg
dec
mov
push
sub
mov
iret
add
sbb
aaa
cli
outsb
inc
mov
fsubl
call
push
cli
fistl
arpl
bound
mov
ror
xor
add
mov
lret
fcomp
cmp
mov
cmp
xor
out
sarl
sbb
lods
mov
mov
fnstsw
pop
cltd
ret
cwtl
stos
leave
insl
js
jmp
bound
mov
pop
mov
ret
faddl
sahf
jbe
push
mov
jp
mov
cmpsb
or
mov
add
mov
scas
pop
mov
adc
push
in
inc
outsb
cmp
rcll
pop
push
adc
push
fcomp
rcrb
fs
scas
ljmp
and
xchg
or
ret
or
int
pop
repnz
pop
xchg
outsl
arpl
loop
mov
aas
xchg
aas
lock
int
lret
sub
jp
test
xchg
out
aas
popa
lcall
adcl
insb
ret
rcrl
xor
pop
sbb
mov
lods
aad
push
mov
or
icebp
sub
add
pop
pop
shlb
or
xor
jne
sub
cmp
shlb
imul
dec
test
dec
mov
xchg
loop
fwait
pop
mov
in
mov
sub
pushf
nop
les
push
or
and
aam
addr16
dec
sub
sarb
xorb
mov
ds
cld
hlt
xor
mov
xchg
mov
push
aaa
sbb
push
or
push
lods
lret
pop
add
cmp
mov
mov
lret
cmp
test
push
subb
pop
jno
dec
mov
popa
sbb
aad
and
sbb
or
insl
aaa
popf
and
mov
jnp
ljmp
sbbb
or
cmp
ret
adc
fsubrs
sahf
add
add
fucom
fildl
pop
xchg
imulb
std
out
pop
ss
insl
jmp
cmp
bswap
gs
mov
jl
shr
imul
push
inc
mov
or
sub
add
in
jnp
fs
pop
sub
push
or
std
mov
shlb
push
sub
mov
push
inc
and
stc
fdivrp
ss
jbe
divb
add
mov
loope
or
adc
mov
jg
cmp
push
stos
test
mov
out
or
lock
js
scas
in
int
test
call
jmp
dec
ret
jg
xchg
cs
mov
in
rcl
jnp
xchg
jecxz
xlat
sub
mov
cmpsb
aad
jnp
lcall
aas
mov
ja
repz
cmp
push
ret
dec
add
mov
ss
jg
cmp
jl
add
mov
cmpsb
sub
xor
and
aad
or
leave
adc
out
pop
bound
sub
xor
adc
sbb
sub
xchg
mov
mov
imul
es
rclb
shrl
push
into
dec
int
xchg
jmp
adc
fstl
adc
movl
outsb
sbb
les
push
fs
jo
sbb
inc
leave
in
ja
mov
mov
push
sbb
inc
pop
and
int3
jo
in
mov
pop
shr
lods
xchg
or
dec
sti
int3
jle,pt
xor
enter
pushf
aad
mov
fwait
mov
adc
inc
cmpsl
mov
test
xchg
icebp
dec
iret
mov
movl
xchg
aad
jp
pop
int
mov
lret
int
jae
xor
xchg
add
cmp
push
test
and
sarb
adc
sbb
das
std
mov
pop
and
test
cmpsl
gs
ret
and
cmpsl
or
dec
es
hlt
push
xlat
aam
and
jns
pop
jno
lods
jo
test
xchg
sbb
ret
mov
sbbb
push
ds
jbe
mov
add
mov
out
ficomps
aam
sub
pop
bound
std
les
cwtl
dec
lea
scas
push
cmp
push
lock
aaa
lea
mov
mov
icebp
mov
fs
mov
xchg
aas
add
mov
or
cltd
sahf
ss
sbb
nop
jecxz
push
inc
adc
jmp
adc
jg
shll
loop
shll
cmp
push
xor
fimuls
mov
mov
mov
and
out
aaa
cltd
jle
sub
popa
mov
push
mov
add
push
adc
fbstp
xchg
cmp
js
inc
std
and
xchg
jno
cmp
shrl
leave
popa
iret
mov
cmp
push
imul
test
fmull
jne
pop
pushf
fisttps
pop
outsl
or
test
repz
sbb
inc
mov
insb
in
divl
movzwl
add
push
push
lahf
test
into
aas
nop
test
pop
pushf
or
push
stos
adc
lds
xor
fisubrl
outsb
ret
adcb
and
ret
orl
pop
sti
lahf
inc
out
xchg
mov
sub
call
jbe
pop
lods
lods
mov
fs
jp
stos
push
or
adc
push
add
negl
in
inc
mov
xlat
jns
test
push
xchg
das
dec
out
sbb
xchg
fldenv
push
shrl
es
xchg
add
lcall
mov
imulb
shlb
clc
stos
loope
sub
xor
insb
cmp
add
pushf
pop
mov
jnp
sub
or
iret
xor
inc
scas
fmuls
sub
lahf
stos
jbe
sbb
js
adc
out
cmpsl
sbb
or
inc
ret
push
push
outsl
pusha
inc
cli
xchg
mov
cs
imul
sysexit
cmpsl
fwait
movsb
sbb
into
xchg
add
jne
stos
addl
and
push
popf
out
lods
imul
xchg
mov
lret
popa
adc
fadd
adc
insl
adc
hlt
iret
xor
mov
daa
push
or
cli
fisttps
adc
xorl
shll
jmp
add
push
inc
gs
lret
jle
mov
push
test
aaa
pop
pop
sbb
cli
mov
cli
xchg
lods
popa
pop
into
cmp
roll
push
pop
dec
pop
mov
xchg
mov
mov
shlb
scas
jg
xchg
sub
add
mov
testl
dec
dec
jmp
sub
mov
fld
fcompl
jne
mov
repz
test
jb
mov
movsb
xchg
sub
jne
xchg
xor
addb
xchg
inc
mov
jle
mov
jge
sbbl
mov
or
and
mul
ffreep
fsubl
sub
or
test
dec
out
nop
lods
hlt
cmpsl
add
cwtl
push
jge
push
push
aaa
sub
xchg
rcll
stos
fmuls
pop
clc
pop
jne
dec
fdivrp
repnz
mov
mov
lods
test
cmp
pop
aas
loop
mov
popa
cmc
jmp
and
in
mov
cmp
cmpsl
xor
push
inc
adc
adc
orl
popf
lods
imul
sub
fs
add
mov
cli
dec
adc
and
cld
loopne
add
jmp
bound
pop
cli
push
or
dec
dec
adcl
out
dec
pop
lcall
imul
adc
mov
inc
repnz
sbb
movsb
fcomps
cmp
negl
jg
push
mov
jno
sti
fsubs
mov
xlat
dec
jmp
lahf
xchg
addr16
mov
jmp
jp
add
jecxz
cmp
jno
sub
xchg
sbb
movsl
movsb
push
mov
cmpsl
mov
pop
sar
loop
add
pusha
jp
pop
call
mov
jl
shlb
mov
rorl
mov
xlat
inc
ljmp
or
cmp
push
andl
adc
inc
sbb
and
movsl
shlb
daa
enter
inc
nop
dec
xchg
xor
into
lret
mov
adc
repz
mov
jmp
movsb
and
loop
jmp
pop
divl
xor
rcr
and
inc
insb
mov
shlb
add
jno
push
mov
xchg
pop
icebp
popf
and
dec
mov
sbb
dec
mov
cmp
inc
dec
bound
test
inc
ss
pop
mov
inc
sbb
xorl
push
mov
mov
std
cmpsb
out
pop
or
in
push
inc
ds
shrl
dec
or
push
jno
mov
xor
sti
fnstcw
clc
push
fwait
dec
in
inc
jge
sbb
imul
or
sbb
mov
mov
imul
push
shl
out
arpl
aad
pop
repnz
jmp
fisttpll
mov
inc
jg
push
cmpb
js
in
imul
ja
not
mov
out
mov
pop
mov
fimuls
loop
mov
jmp
xchg
fdiv
rcll
mov
ficoml
xchg
ss
mov
and
insb
daa
and
adc
pushf
and
cmpsb
mov
sbb
or
popa
mov
xchg
and
leave
push
jne
cmpsl
js
aaa
lcall
pop
insb
scas
imul
inc
and
sub
flds
push
ret
cltd
and
scas
in
sbb
rorl
xor
int3
mov
in
push
les
es
push
push
mov
ljmp
sarb
inc
mov
sbbb
push
cmc
cltd
inc
roll
mov
pop
iret
movl
leave
xor
call
rcrb
sbb
out
shlb
push
add
fcmovnbe
mov
xchg
js
mov
out
jb
rclb
mov
cmc
xchg
aaa
cs
fmull
ret
int3
push
add
jmp
push
or
std
jb
iret
popa
std
lock
scas
outsl
bound
xlat
xchg
scas
cli
out
push
std
mov
ret
dec
pop
mov
daa
adc
dec
xchg
jbe
inc
mov
mov
xchg
pop
xchg
movsl
and
std
dec
mov
push
dec
inc
push
pop
dec
jge
push
cltd
mov
push
jno
mov
adc
xor
int
adc
pusha
pop
ret
in
nop
or
imul
pop
cmpps
das
push
xchg
int3
test
pop
ljmp
fisubs
scas
fldt
sti
repnz
xchg
mov
clc
aam
inc
mov
mov
and
push
fs
jb
outsl
paddd
or
cmpsb
int
mov
xchg
test
dec
cmp
lds
pop
mov
jno
jl
fbld
iret
inc
mov
andb
jg
sub
jecxz
hlt
dec
jne
inc
pop
xor
mov
xor
mov
mov
jle
xor
mov
pop
jbe
or
arpl
data16
dec
fnstcw
push
mov
jp
cld
sub
and
pop
mov
in
sbb
push
stos
jne
xchg
add
inc
lods
std
es
shlb
pusha
sbbb
icebp
scas
andb
lea
mov
in
iret
orb
in
bts
mov
std
inc
jmp
cmp
fistl
out
shrb
mov
xchg
pop
and
mov
popf
push
xchg
orb
data16
rcrb
in
jmp
sahf
stos
or
push
ret
rorb
mov
movsb
lock
jge
ja
out
dec
lcall
pop
popf
or
xor
fldl
sbb
add
repz
imul
int3
loopne
dec
sub
push
mov
loop
jmp
loopne
push
push
jns
and
pop
jmp
push
jbe
mov
sub
jb
mov
jno
add
adcl
cmp
xchg
fldl
adc
test
push
iret
jb
cmp
xchg
pop
push
int3
cmpsb
fists
dec
cltd
inc
fwait
repz
lea
cmp
jge
sub
daa
xchg
outsl
xchg
mov
cmp
pop
xchg
cmp
dec
or
stc
dec
hlt
inc
sub
pusha
pop
mov
or
movl
pushf
pop
fnstsw
and
scas
sub
mov
popa
inc
jecxz
push
test
fisttpl
xor
xchg
aam
mov
mov
dec
xchg
push
int3
inc
aaa
dec
lret
mov
pushf
xchg
sar
pop
shll
jmp
push
add
test
jb
push
pop
testl
es
aam
popa
enter
jnp
mov
stc
dec
inc
test
dec
add
sarb
jecxz
push
pop
jns
push
cmp
or
mov
movsl
cmp
mov
rorl
insl
aaa
mov
aaa
mov
and
xchg
add
add
int
sub
loopne
fnstenv
xor
jle
subb
cmp
jle
mov
orb
mov
divb
add
dec
ret
dec
in
dec
ljmp
test
out
scas
movsl
sahf
test
lock
jl
xor
push
xor
xchg
nop
and
or
lods
jp
jp
lahf
es
pop
lds
or
lea
movsb
xor
rolb
jo
lret
or
pop
lock
add
push
cmpsl
add
or
lcall
es
or
leave
sbb
cmp
scas
sbbl
loope
icebp
out
insl
into
cli
pop
xor
int3
cmpb
jns
xor
mov
add
adc
pop
push
addr16
lds
adc
rol
gs
xchg
arpl
jo
and
mov
add
dec
push
jns
repz
pop
pop
and
mov
xchg
and
ret
cmp
fwait
pop
outsb
clc
iret
add
push
loop
ficompl
ds
xor
clc
and
popf
lea
mov
movsl
cmp
pop
sub
push
sti
int3
xor
in
popf
imul
lds
outsl
mov
scas
jecxz
jb
sahf
sub
pushf
add
sarl
xchg
inc
stc
outsl
cmp
adc
mov
and
stos
cs
adcb
mov
insl
filds
stos
and
mov
fildll
push
or
movsl
xlat
jmp
jb
pop
into
xchg
push
xchg
mov
or
repz
flds
mov
pop
mov
insl
cmp
stos
fiadds
push
dec
xchg
bound
jnp
mov
adc
and
scas
pusha
mov
dec
aas
and
push
pop
call
jge
jae
pop
pop
orl
adc
push
int3
and
aam
xchg
data16
fwait
and
pop
mov
push
mov
outsl
pop
imul
dec
push
scas
inc
and
or
icebp
sub
lcall
scas
and
jp
and
lds
cmpl
sahf
push
notb
push
int3
sahf
and
lret
aad
mov
gs
pop
lcall
inc
jnp
cmp
pusha
cwtl
jb
and
adc
movsb
push
cmpsb
mov
or
pop
xchg
push
and
sub
jmp
shrl
mov
dec
std
jecxz
arpl
dec
and
add
lods
sub
mov
idiv
or
push
popl
cmc
jb
lock
bound
xchg
test
data16
stc
mov
pusha
mov
iret
cmp
add
into
into
mov
imul
and
xchg
xchg
and
loopne
outsl
mov
aad
adcb
sub
out
aam
pop
enter
lcall
jmp
out
aad
adc
cmpsb
add
mov
mov
subl
lods
int3
dec
dec
sub
jle
lock
and
or
mov
test
adc
mov
jl
bound
xchg
insb
push
pop
and
mov
mov
ds
adc
jmp
pop
dec
jl
pop
pop
hlt
ja
pop
ja
cmp
enter
loop
push
clc
into
dec
popf
repnz
jbe
mov
mov
mov
outsl
xor
das
retw
push
inc
fdivrl
jno
pop
lret
mov
cmp
sahf
cmp
ffreep
xchg
lock
dec
sbb
fdivs
mov
or
outsl
shll
adc
pop
mov
gs
sbb
out
cmpb
out
xchg
mov
xor
dec
push
xor
sbb
mov
outsb
mov
jae
cld
push
xchg
cltd
int3
aam
push
push
insb
jns
popf
aas
inc
sub
imulb
lcall
xor
mov
fldenv
push
adc
pop
lahf
mov
insl
cmp
xor
and
inc
sbb
push
pop
and
rolb
or
xchg
or
cs
cmp
push
mov
or
push
jo
sbb
out
xorb
test
sub
xchg
pusha
roll
mov
dec
xchg
stos
shrl
icebp
negl
push
pop
push
xchg
mov
cwtl
and
jle
mov
lock
pop
xor
clc
lcall
inc
and
xchg
ja
fwait
dec
dec
fistpl
int3
sub
icebp
mov
ja
and
adc
rcr
sbb
dec
inc
adc
push
lcall
jb
and
test
mov
sbb
inc
ds
call
and
sbb
push
les
cmp
cli
pushf
or
pop
xor
dec
jl
cmpsl
mov
adcl
xchg
adc
xchg
sti
cmp
call
push
jo
leave
pop
jno
out
sbb
mov
es
add
or
jne
lea
bound
outsl
ret
or
bound
mov
push
pushl
ljmp
stos
sbb
cli
pop
xchg
push
mov
test
push
test
push
test
push
lret
sub
sub
mov
clc
gs
lcall
pop
test
jge
sub
add
mov
cmpl
ds
hlt
repnz
aas
aam
cmp
cltd
dec
xlat
mov
out
std
sub
push
mov
aas
cmpsb
adc
mul
test
int3
mov
xchg
jo
jno
fldl
roll
scas
push
xchg
adc
push
aad
xor
lea
xor
adc
dec
push
ret
fisubrl
popa
add
push
in
leave
outsb
aas
fisubrs
pushf
xor
push
cmpsl
cmp
xchg
push
leave
add
jp
push
lods
mov
icebp
and
addr16
leave
inc
ret
dec
lret
dec
jnp
ds
sub
outsb
fwait
lock
mov
xchg
testb
lods
arpl
out
and
pop
mov
or
mov
jecxz
mov
nop
divb
push
or
stos
scas
movsb
or
push
adc
mov
xchg
push
in
push
or
sbb
xchg
xor
mov
sub
sub
cltd
std
pushf
js
stc
push
jb
add
or
sgdtl
push
push
in
cmp
xchg
sub
push
movsb
cltd
std
leave
pop
jle
roll
add
push
fwait
lcall
scas
xlat
jp
jmp
add
pusha
scas
cmp
mov
gs
mov
adc
cltd
xchg
push
mov
arpl
push
sti
mov
int
call
int3
xchg
je
mov
lods
rcrl
or
jb
xor
xor
andl
rclb
pop
mov
mov
mov
test
roll
shl
js
inc
in
mov
inc
lods
lcall
jp
cmp
push
xchg
push
add
adc
dec
xchg
gs
dec
aad
inc
add
aam
ds
js
jbe
adc
push
clc
stc
cwtl
fstenv
push
repnz
pop
or
sub
int3
pop
jae
shl
push
lea
inc
jl
pop
push
inc
jns
inc
or
push
ss
pushf
push
imul
sub
push
jge
mov
xor
out
sbb
add
ret
and
scas
outsl
jae
jg
into
sub
mov
mov
adc
clc
and
xchg
mov
popf
mov
jo
fsubrl
sbb
cmp
pop
call
mov
jns
cmp
push
js
xor
int
aam
cmp
xor
cmp
mov
and
cwtl
push
sub
cli
aaa
pop
bt
fbstp
pop
cmp
cmp
xchg
jg
loope
fdivs
sbb
xchg
adc
push
inc
push
inc
std
sub
cmp
lret
xor
and
cmp
mov
jne
movsb
lock
ret
xchg
jno
adc
mov
lods
adc
mov
cs
cmp
mov
mov
xor
pop
test
das
jg
adc
jl
mov
call
loop
ja
adc
mov
mov
aaa
cli
push
inc
push
xchg
lock
rorb
and
mov
mov
sub
sub
sbb
add
lahf
mov
xchg
mov
lods
test
js
push
insb
sbb
das
cmpsb
repz
cld
cmp
xchg
fdivrs
cmc
push
adc
repz
lods
hlt
inc
into
sbb
jns
cmc
outsl
jl
lcall
add
cmp
cwtl
cltd
jmp
mov
push
rcrb
cmp
or
mov
push
jl
hlt
aad
cmp
repz
xchg
jne
fwait
pop
dec
xor
inc
cmp
sbb
repnz
out
insl
mov
fidivrl
lcall
adcb
inc
dec
dec
ljmp
mov
mov
sbb
mov
push
xchg
mov
stos
mov
xor
fs
out
std
ss
paddusb
xlat
xchg
mov
icebp
sub
pop
subb
inc
popa
movsl
xchg
lods
sbb
sbb
jmp
push
imul
out
sub
aaa
and
push
inc
cmpsl
rclb
cmp
and
nop
pop
mov
cmp
push
stc
stos
fimuls
cmpsb
fisubrl
cli
jge
fcoms
popa
mov
outsl
mov
pop
popa
cmp
rcrl
pop
fcomi
adc
in
pusha
inc
or
fsts
enter
inc
mov
stos
jg
popa
pop
sbb
jo
xor
test
ret
inc
jl
or
mull
fistpl
notb
xchg
ss
fcomps
adc
hlt
and
call
dec
sbb
jecxz
pushf
lea
imul
lods
or
sbb
adc
jo
test
push
jle
je
sub
jb
inc
imul
les
mov
daa
subl
mov
xor
imul
push
xor
daa
jmp
roll
add
jle
inc
and
and
rcrl
cmpl
sub
lahf
test
movsb
push
cmc
rep
inc
jp
lahf
cmc
pop
andb
movsb
dec
adc
mov
sarb
add
pop
xor
out
sbb
inc
mov
ss
mov
sbb
aas
add
out
sub
test
adc
jo
and
inc
cmp
in
les
fwait
subb
int
scas
adc
gs
dec
stc
es
mov
inc
movsl
add
scas
mov
sbb
mov
inc
xchg
xlat
inc
cli
or
inc
xor
inc
fsts
adc
jl
je
scas
adc
testb
dec
add
pushf
sbb
mov
icebp
sub
gs
lret
jb
dec
clc
in
cmp
xchg
xor
fisubrl
adc
jge
xchg
sbb
add
ret
in
lret
and
int3
jge
fadds
mov
inc
jnp
int3
mov
mov
popa
push
inc
scas
or
mov
inc
cltd
pop
ljmp
subl
adc
call
daa
mov
inc
lds
xor
xor
xchg
in
xchg
push
dec
mov
dec
jae
rcrb
fs
fisubrs
mov
cmp
inc
or
mov
scas
lret
dec
inc
jbe
xor
jb
pop
rorl
lret
ret
push
outsl
cmp
shrb
or
in
icebp
xchg
pop
iret
lahf
cmp
xor
aam
std
xor
pop
push
mov
gs
sbb
push
push
push
lods
or
push
xlat
mov
arpl
int
push
xor
push
jmp
push
pop
lret
cli
push
push
pop
jge
sahf
inc
add
jecxz
notb
repnz
dec
mov
jne
enter
add
push
in
pop
jmp
test
cld
and
xor
sub
mov
xchg
jno
xchg
pop
scas
test
daa
add
mov
ret
inc
dec
cli
sarb
add
notb
pop
sub
jbe
cmp
jmp
adc
mov
dec
scas
fisubl
push
sub
test
mov
inc
imul
fsin
iret
repnz
div
rorl
push
sub
pop
jne
jnp
out
int
rcl
cmp
int
popf
cmc
cwtl
jns
or
arpl
stos
int3
lcall
jg
test
mov
idivl
sbb
mov
stos
xchg
scas
adc
xor
mov
adc
test
adc
mov
or
and
adc
add
xchg
in
inc
mov
sbb
mov
lcall
je
pop
repz
fwait
outsl
mov
movsl
and
push
sub
dec
cs
add
mov
mov
inc
cmp
cmp
jno
les
push
jecxz
shlb
push
inc
fiaddl
sahf
and
push
xchg
icebp
iret
fsubr
ds
jno
hlt
cwtl
fcoml
sub
jge
push
jecxz
addr16
mov
mov
xchg
jae
sahf
aam
test
pop
xchg
inc
dec
jecxz
loop
sti
mov
rcrb
stos
shl
enter
cwtl
in
call
dec
das
adc
cmp
cs
shlb
roll
jp
ljmp
hlt
aad
ja
sbb
fs
push
adc
std
and
ret
mov
push
inc
jb
mov
lret
adc
inc
mov
add
popa
outsb
icebp
lret
and
ficoml
jmp
lret
aad
mov
jno
cmp
int
sub
mov
sti
sbbl
in
jecxz
inc
in
mov
lret
lret
xlat
cmp
and
loope
aam
mov
in
jl
pop
arpl
hlt
xor
cs
faddl
cmp
outsl
xorl
cltd
cmp
popaw
and
sbb
out
das
mov
jns
push
mov
pop
sub
inc
inc
dec
lds
clc
fdivrs
dec
fwait
pushf
xchg
mov
mov
shl
stos
aam
sahf
mov
cmpsb
data16
sahf
sbb
cmp
ljmp
mov
jns
add
adc
jp
cmpsl
inc
dec
sbb
test
mov
cmpsl
repz
fidivl
in
inc
loope
je
movsl
mov
add
inc
movsb
sub
cmp
xchg
std
sbb
push
lret
sub
xor
cld
das
inc
lret
ja
sti
mov
andb
jnp
popf
and
clc
inc
cmp
aas
jne
or
sub
popf
push
mov
mov
movb
or
mov
enter
sarb
push
pushf
cmpsb
stos
dec
xchg
xchg
sub
sti
pushl
clc
ret
in
mov
pop
jmp
xor
mov
lock
stos
hlt
lret
and
and
lret
and
jae
out
leave
ss
mov
inc
push
pop
jno
or
pop
xor
fsubr
sbb
ficoms
dec
inc
mov
pop
xor
adc
xchg
aad
es
mov
xchg
bsr
mov
pop
cmp
test
into
cmc
in
mov
push
das
cmp
inc
push
and
xor
mov
push
inc
xchg
movzbl
out
cmp
mov
jg
or
das
hlt
pop
mov
sub
rcl
mov
mov
loope
dec
js
pop
jns
cs
inc
rcrl
fidivs
ficoml
jle
or
lcall
imul
repnz
je
cmpsl
adc
mov
loop
imull
outsl
into
mov
fchs
jg
sub
sub
sbb
pushf
std
into
imul
out
push
inc
cmc
out
fstp
jbe
into
ret
repz
mov
dec
aad
add
adc
pop
mov
dec
sub
fdivrs
sbb
or
inc
xchg
inc
pushf
cmp
pop
jmp
mov
mov
pop
mov
cmpb
ljmp
xchg
gs
cld
lock
bound
aam
lods
lods
insl
sbb
add
cmpsl
mov
adc
rcl
inc
sarl
cmp
mov
jae
frstor
mov
nop
or
popf
lahf
push
bound
ret
shr
icebp
jne
push
movsl
pop
push
mov
sub
hlt
cmc
add
pop
dec
pop
jo
pop
cmp
jmp
push
ret
in
xchg
xchg
bound
aam
push
push
repz
je
cwtl
popa
test
scas
shrb
jp
mov
nop
xor
dec
test
test
adcb
je
dec
push
xor
cmpsl
push
das
scas
iret
leave
mov
mov
add
push
cld
fcmovb
sub
pop
xchg
sarb
inc
jb
add
mov
lea
mov
jno
xlat
or
sub
jl
ds
inc
cmpsl
push
jg
add
jae
cmpsl
dec
sbb
mov
fcmovnu
lods
fldl
xchg
sbb
mov
in
pop
pusha
xor
pop
lock
lods
popf
xchg
dec
aad
cmp
popf
add
push
aas
or
mov
cld
xchg
cmpsb
push
mov
dec
push
popf
inc
cmpsb
movsb
pop
jp
push
mov
jmp
and
shll
dec
sbb
sarb
xor
lret
pop
push
arpl
repnz
inc
or
sbbb
dec
mov
push
cmp
ret
std
in
pop
and
dec
ljmp
mov
bound
jg
std
stos
pusha
std
loop
in
inc
or
mov
in
lds
loop
es
dec
dec
movsb
pushf
add
in
and
test
xchg
fyl2xp1
jmp
mov
fdivrl
xchg
cmp
sbb
mov
inc
inc
xor
pop
mov
in
out
push
fldl
add
push
lret
test
insb
inc
jge
sbb
sub
sbb
inc
int
cmpsb
cmc
nop
data16
xor
rcrl
sub
dec
std
ljmp
sbb
scas
cltd
inc
mov
cmc
scas
mull
adc
mov
mov
ficompl
fs
dec
shlb
movsb
jmp
jp
adc
and
mov
stos
xchg
out
mov
adc
fdivrs
fs
mov
lock
mov
lds
mov
xchg
jp
aaa
movsl
add
adc
repnz
cmovno
pop
add
ds
loop
dec
add
subl
and
xchg
xchg
xlat
jmp
aas
mov
jbe
xlat
mov
mov
cwtl
stc
and
insl
mov
push
fildl
push
push
in
mov
cld
dec
cmpsb
jb
fcomip
fiaddl
inc
mov
xchg
mov
imul
pop
mov
ljmp
leave
cmp
cli
das
daa
lahf
outsb
cmp
lret
mov
jmp
push
pop
inc
aam
or
push
mov
push
add
std
mov
nop
add
dec
mov
add
add
out
mov
sub
iret
mulb
mov
repz
mov
pop
adcl
insb
std
jnp
sarl
shl
xchg
cmc
add
xor
add
outsl
mov
sub
mov
push
mov
in
aas
push
cmp
mov
fwait
iret
cmp
pop
insl
inc
bnd
cwtl
cmp
pop
inc
mov
mov
inc
or
xor
stos
lods
xchg
dec
cmpsb
cmc
mov
add
enter
test
ljmp
sbb
int
cld
dec
std
xchg
movsl
jmp
decb
or
dec
out
push
pop
popf
lea
leave
testb
push
outsl
and
push
xor
scas
icebp
mov
xchg
nop
testl
lea
mov
xchg
adc
lahf
push
pop
lahf
rorb
mov
dec
mov
andnps
scas
mov
sbb
and
or
push
jne
push
push
in
pusha
mov
cwtl
sbb
fcmovne
dec
rolb
jnp
or
mov
push
mov
mov
cld
lret
shll
jmp
or
fsubrs
clc
pop
add
mov
cmp
push
and
push
shrl
and
sub
hlt
popf
pop
fisubrl
out
mov
sbb
mov
mov
rclb
mov
mov
test
aas
lret
xor
imul
repz
or
test
fadds
test
hlt
fcoml
gs
repnz
mov
sti
es
inc
pop
adc
fs
mov
pusha
mov
push
jns
xor
in
movsl
lea
pop
rclb
loop
rep
in
jae
cmp
mov
add
lds
inc
popf
mov
sbb
mov
add
dec
or
call
lea
sbb
popa
nop
ss
aam
pop
mov
mov
in
shrb
xchg
fstps
lret
or
inc
imul
mov
adc
popa
lock
cmp
pop
lret
iret
movsl
jnp
dec
xchg
xchg
jbe
lds
sub
push
push
pop
push
mov
mov
jnp
jo
mull
push
arpl
jp
int3
les
shll
pusha
call
repz
xchg
xchg
push
mov
mov
add
aaa
lods
fists
and
out
lcall
je
fsubs
cmp
sbb
inc
mov
pop
pushf
jne
mov
pop
inc
sbb
cmc
in
mov
push
xlat
mov
ss
es
out
jmp
cmp
or
psrlq
loop
jb
push
xchg
push
sub
inc
shrl
gs
lahf
inc
leave
mov
rcrb
divl
sbb
inc
outsb
iret
pop
cmp
sarl
repz
insb
dec
test
mov
mov
jbe
adc
imul
call
push
pop
cmpl
ss
mov
lods
rcrb
sub
pop
xchg
data16
sub
push
mov
and
addb
mov
xor
loopne
cs
xchg
sbb
loop
inc
xor
repnz
adc
dec
imul
adc
ret
inc
jns
pop
xchg
mov
add
and
test
pop
out
mov
in
fldt
cmpsl
add
ficompl
sahf
mov
sub
and
mov
enter
lods
jle
xorl
test
in
js
mov
enter
or
adc
sub
add
jb
inc
mov
jg
adc
or
mov
fiaddl
push
cmpsl
dec
fcomi
mov
sbb
push
in
add
push
mov
mov
mov
lret
or
mov
js
int3
mov
adc
cs
and
add
inc
fincstp
dec
scas
lock
es
xchg
and
nop
cwtl
jg
pusha
scas
daa
cmpsb
mov
sbb
sbb
in
repnz
mov
and
roll
out
jbe
pop
pop
jae
jbe
mov
xor
flds
or
outsl
bnd
push
push
push
mov
push
and
je
loope
insb
aad
sub
inc
add
jl
clc
dec
pop
aam
mov
or
mov
adc
imul
cli
pushf
ret
test
je
test
call
in
lahf
xchg
fisttpll
aad
testb
aam
pop
cmp
sbb
stc
sti
mov
inc
push
inc
mov
ja
fdivrs
out
cmp
or
cmp
repz
pop
imul
sti
mov
dec
add
add
inc
lahf
or
sbb
xchg
enter
cmpl
daa
les
cmp
mov
cmp
jmp
dec
xchg
jmp
pop
sbb
scas
cld
outsl
push
xchg
daa
dec
and
and
mov
jb
inc
pop
push
mov
mov
jmp
les
out
test
mov
mulb
jge
jl
insl
inc
pusha
sbb
xor
and
aad
js
mov
lods
das
xor
jb
ret
repz
mov
cmp
arpl
add
out
arpl
mov
adc
orb
iret
jnp
or
je
inc
cmpsl
push
cltd
mov
mov
jne
clc
pop
inc
and
xchg
mov
add
outsb
pop
rcr
adc
xorb
pop
cmc
das
inc
xor
add
jno
inc
mov
out
or
lahf
jmp
ds
xchg
push
aad
or
std
rcll
sbb
mov
iret
push
push
lock
das
jle
out
lock
or
cmp
loop
lock
xchg
rorb
jb
jns
mov
adc
push
fucomp
int3
out
add
push
mov
inc
outsl
or
mov
add
cmp
xchg
test
push
inc
in
xchg
jns
punpcklbw
movsl
lods
or
jl
sub
or
ja
mov
gs
add
enter
lret
out
xor
mov
jge
push
dec
inc
dec
sar
jb
in
inc
popf
lods
or
xchg
push
lock
adc
mov
addr16
sbb
cmp
or
jmp
mov
rcrl
out
bound
mov
stos
push
cmp
add
jae
aam
outsl
or
aam
xor
fcmovnb
sub
repnz
or
popa
sub
scas
loopne
add
inc
push
cwtl
adc
sub
mov
mov
inc
scas
int3
jge
movsl
jecxz
daa
sar
cwtl
mov
pop
adc
jns
rcr
aas
outsb
add
pop
pop
repz
les
sbb
adc
and
jge
fcoms
mov
and
shrb
cld
inc
rorl
rorb
jb
or
jae,pn
jle
int
cld
stos
sub
adc
sbb
jle
loope
gs
subb
lods
lcall
outsb
repnz
push
js
mov
ljmp
pushf
mov
ja
rcrb
fisttps
lret
sarb
scas
xchg
aas
in
mov
mov
add
xorb
shl
outsb
out
movsb
jg
jge
sub
mov
sub
jb
cltd
xor
sbbb
dec
cld
sbb
sbb
sbb
jg
inc
lock
outsb
bound
adc
jno
dec
push
and
sub
clc
adcb
sarl
sbb
pop
mov
sub
sub
mov
fistpl
mov
loop
inc
mov
xchg
icebp
xlat
mov
test
pop
rdmsr
icebp
dec
add
mov
loopne
int
fisubs
mov
call
add
mov
inc
push
sbb
jmp
mov
rclb
addl
cmp
jmp
gs
les
bound
testl
mov
jae
fidivrs
insl
dec
pushf
inc
jle
mov
pushl
nop
jp
or
or
test
adc
push
roll
scas
push
mov
jle
mov
push
xchg
cltd
push
or
adc
sbb
call
and
in
pop
loop
pop
xchg
shll
out
pop
stc
cmpsb
xor
cmp
loope
test
cmp
sbb
mov
or
pop
xchg
nop
dec
mov
pop
arpl
adc
pop
in
and
lock
test
inc
xchg
imul
pusha
punpcklbw
cltd
in
adc
aam
bound
adc
jecxz
cmpsb
xorl
push
and
adc
int
sbb
mov
and
popa
rcl
or
loopne
pop
leave
pop
ret
sti
mov
sbb
sbb
mov
jns
scas
dec
mov
inc
adc
icebp
iret
std
mov
mov
jb
aas
aas
jb
ss
dec
mov
xchg
mov
in
cmp
fisubs
pushf
sub
and
mov
mov
dec
out
ret
mov
cli
sbb
pop
imul
icebp
push
sti
xchg
pusha
mov
pusha
cmpsl
cmp
jp
test
outsb
dec
icebp
add
inc
subl
cwtl
sub
and
ljmp
adc
aam
cmp
out
inc
or
int
mov
pushf
dec
inc
ds
lcall
push
pop
mov
push
lret
jo
clc
cs
dec
sub
add
cmp
xor
jns
xchg
mov
push
sub
dec
or
faddp
ja
xor
dec
scas
out
dec
mov
mov
cs
xchg
test
mov
adc
xchg
jb
lods
shrl
aaa
stc
in
loope
ror
insb
iret
sbb
push
aam
orb
lods
test
add
rolb
iret
dec
insb
sti
aaa
sub
in
jne
pop
testb
push
movsl
mov
xchg
or
orl
jmp
pop
push
fsubl
cmpsb
inc
cmp
int
cmp
ret
and
sbb
mov
rcrl
stc
in
pop
xchg
loop
fists
test
pop
cli
xchg
pop
in
mov
subb
repz
cmpsb
enter
mov
jecxz
adc
and
push
shrb
mov
subl
lods
loop
sbb
xchg
fdivr
fmul
ds
cmpsl
ss
pop
jnp
mov
dec
xor
mov
mov
xor
shrl
out
cmp
sbb
mov
pop
sub
lahf
aad
enter
fmuls
aad
mov
lods
mov
pop
arpl
push
lods
mov
push
xchg
fs
jno
test
mov
in
insb
in
pop
pop
roll
pop
push
rorl
mov
clc
jmp
push
adc
dec
mov
int
sub
jo
mov
xor
or
push
pop
stc
mov
mov
xchg
sbb
hlt
add
push
dec
ss
inc
daa
add
les
adc
xor
movsb
sub
ret
daa
inc
lds
aas
pop
repnz
lret
sbb
sub
bound
imul
fisubrs
push
ljmp
jecxz
and
mov
out
insb
xchg
mov
jae
cmp
adc
jg
test
add
cwtl
insl
fistl
cmpsl
sti
sub
inc
mov
adcl
outsl
stos
mov
push
push
insb
dec
loope
fadds
mov
sbb
outsb
fcoml
sub
out
push
jp
inc
sbb
std
int
pop
std
dec
shrb
cwtl
push
iret
mov
out
ret
imul
mov
lock
aad
imul
ss
push
xor
push
mov
jmp
mov
sbb
sbb
and
in
loopne
xor
sbb
mov
pop
enter
mov
cmc
sub
or
cmp
lea
sbb
mov
inc
in
push
or
mov
stos
mov
jne
mov
notb
les
into
ds
in
aas
and
sarl
into
cltd
dec
cmp
inc
mov
sbb
call
dec
jo
xorb
add
inc
jne
xchg
pop
dec
popa
add
ljmp
push
popa
pusha
pop
xor
cmpsl
out
sub
xchg
cmp
cmp
sbb
xor
cmp
inc
ss
inc
xchg
mov
jno
mov
mov
xchg
mov
lds
xorl
scas
adc
lods
adc
push
and
loope
rcr
dec
es
cmp
into
jns
in
dec
inc
cld
loopne
ja
cmpsl
jle
push
inc
and
ljmp
cmp
mov
or
sbb
push
in
push
cmp
xchg
rcrl
sti
ja
movsl
stos
lods
pop
stos
push
mov
rcrl
fiaddl
enter
cmp
mov
scas
inc
inc
push
jecxz
jbe
dec
ds
sbb
stc
jle
incb
mov
arpl
outsl
xchg
xchg
dec
inc
push
fiaddl
push
lods
mov
pop
aam
repz
xlat
push
inc
outsl
sbb
hlt
int
dec
and
cltd
mov
cmp
mov
cs
out
xchg
mov
push
inc
mov
or
mov
jmp
into
ds
call
mov
inc
mov
push
shrb
not
inc
outsb
and
xor
test
mov
ljmp
mov
jae
mov
std
fs
mov
add
fistpl
dec
push
lods
fwait
push
lcall
data16
popl
sub
pushf
adc
dec
cwtl
fcoml
or
xchg
or
push
aaa
insl
or
cmpsl
push
loop
testl
test
out
xor
inc
lock
push
mov
adc
pop
jb
sti
cmp
lret
dec
or
mov
xchg
sub
adc
hlt
mov
pop
stos
ss
xchg
cmp
cmp
ret
mov
mov
or
adc
mov
xchg
push
push
jae
fdivs
in
push
xchg
sub
jb
sbb
xchg
mov
in
lea
call
jne
xchg
sbb
push
imul
pusha
mov
mov
jge
sub
push
cmp
or
jne
or
fucomp
lock
add
mov
fisttpl
jle
or
pop
push
xchg
imul
pop
add
cwtl
repz
add
shl
adc
adc
mov
cltd
xor
or
and
dec
pop
ljmp
mov
push
out
orb
mov
jne
xchg
and
inc
push
lret
adc
lcall
add
jg
enter
mov
cmc
lock
popf
push
ds
lahf
lahf
stos
cmp
imul
das
push
mov
les
call
sub
jmp
mov
mov
js
mov
jbe
mov
xorl
xor
sub
lret
es
mov
fwait
sbb
xor
jle
sub
ja
repz
aas
leave
shrl
pop
dec
mov
ret
outsb
pop
pop
jae
and
inc
inc
fwait
rcr
sbb
dec
mov
push
pop
shl
lahf
mov
nop
xchg
jp
cwtl
jp
pusha
pop
stc
out
sbb
sbb
jmp
mov
movsl
ss
cwtl
imul
pop
push
push
sbb
pop
sti
sbb
xor
push
loop
sti
add
test
icebp
fisttps
jno
mov
aas
xor
mov
xor
imul
lcall
adc
push
mov
cltd
pop
test
mov
jne
push
jmp
aam
mov
sub
add
dec
mov
push
or
cmpsb
or
hlt
out
add
jl
daa
loop
stos
inc
ljmp
sbb
pop
in
jae
hlt
or
or
and
adc
jae
sub
outsl
out
jno
lsl
jecxz
add
pop
stos
imul
in
pop
pop
xchg
sub
loopne
call
push
cmp
xchg
enterw
and
adc
xchg
mov
push
mov
dec
xchg
fstpl
and
pop
orb
ret
jns
pop
push
pushf
sbb
test
xchg
sub
xchg
lahf
mov
pop
mov
jg
dec
aad
xlat
cli
and
adc
mov
xor
fdivr
xchg
insl
xchg
jmp
nop
xchg
out
outsb
pop
divl
jle
insl
mov
pop
in
loopne
mov
adc
sub
out
out
rcl
jnp
mov
inc
xchg
sti
mov
jg
jbe
push
jne
fdecstp
mov
or
cmp
and
scas
jae
cmp
in
sbb
fsubs
cmpsl
dec
fisubl
aad
outsl
cmpb
cmp
cmp
int
jo
inc
into
es
xor
and
push
jno
adc
insb
ficoms
jle
xor
je
ret
cmp
pop
cmp
lods
aaa
pushl
imul
test
dec
inc
push
pop
sbb
and
xor
pop
add
cmp
lods
daa
mov
pop
push
leave
jl
xor
stc
inc
mov
bnd
or
movsb
cmp
imul
xchg
and
and
xchg
pop
popa
or
add
jp
scas
xchg
movsl
inc
ja
mov
lret
cmp
xchg
add
mov
movsb
test
xchg
or
mov
sub
mov
in
loopne
inc
or
icebp
clc
scas
test
mov
push
scas
dec
mov
push
add
jg
mov
jg
cmpsb
insb
xor
enter
in
sub
cmp
cmpsl
ud1
arpl
aad
push
int3
sub
fnstcw
add
imul
xor
out
xor
jmp
cwtl
xor
xor
cs
dec
mov
pop
mov
sahf
aam
movsb
popa
and
jne
mov
or
pop
das
pop
add
dec
mov
jp
add
xchg
mov
bound
or
push
pop
arpl
daa
popf
aaa
cmp
and
push
cs
jmp
test
pop
push
in
mov
and
push
fldt
push
xor
orb
jg
in
mov
in
scas
in
loop
cld
fiadds
shr
cmp
ljmp
adc
mov
stos
and
jns
push
and
aas
mov
cmp
es
pop
mov
inc
jecxz
xchg
or
sub
insb
mov
fwait
sbb
pop
xor
in
and
mov
add
or
push
xchg
mov
orb
sbb
dec
cmovbe
or
adc
xchg
or
or
pop
fdivr
push
mov
rol
cmpsb
loope
add
and
cmp
add
mov
rclb
sahf
or
add
repz
mov
and
jle
add
dec
scas
mov
cmp
movsb
jle
jnp
jecxz
clc
push
pop
shll
pushf
jmp
sbb
fstpt
and
or
xor
dec
shll
sub
add
sub
rcll
pop
fisubrl
jmp
add
add
xor
into
je
and
hlt
repnz
pop
sbb
ret
lock
lcall
fdivrs
fwait
cld
mov
add
imul
xor
jmp
fmuls
js
mov
pop
pop
mov
push
jne
sbb
pop
arpl
cltd
sbb
cwtl
addb
adc
mov
cmp
std
cmc
and
add
ret
jne
cmp
mov
pusha
inc
shrl
mov
add
mov
test
sbb
pop
cmp
add
addb
cmp
ret
jno
push
cmp
mov
mov
and
mov
ds
loop
sbbl
iret
push
mov
ret
cs
out
das
outsl
out
bound
sbb
xchg
mov
scas
mov
mov
cli
scas
push
cld
xor
inc
pop
negl
inc
pop
test
mov
mov
les
inc
sbb
dec
int3
jb
call
add
leave
fwait
das
adc
add
mov
and
pushf
ret
dec
inc
hlt
int3
insb
ss
mov
xor
and
outsb
adc
mov
push
sbb
movsw
test
xchg
inc
pop
mov
bound
test
xor
adc
leave
scas
inc
jp
cmp
mov
ds
ss
push
and
cmpsl
mov
test
jne
sti
test
lret
xchg
sbb
pop
cmp
sbb
cltd
movsl
pop
adc
adc
mov
scas
inc
xchg
mov
std
call
mov
cmpl
or
push
jmp
test
jp
shl
imul
stos
push
push
jno
inc
js
mov
pushf
push
mov
call
adc
jl
and
iret
pop
xchg
out
out
testb
dec
push
push
repnz
addb
push
pop
fistpl
enter
xor
adc
dec
cmc
stos
nop
dec
xchg
mov
mov
inc
sub
xchg
cmc
mov
dec
jge
out
mov
and
addl
enter
xchg
or
mov
push
stos
int
jge
pop
ja
out
sbb
sti
mov
sbb
push
pop
ss
inc
dec
pop
jnp
xchg
adc
pop
mov
daa
test
xchg
dec
leave
add
mov
movups
add
mov
pop
data16
insb
mov
xor
add
dec
mov
mov
inc
imul
js
cmp
test
es
pop
jnp
cmp
and
jae
jae
cmp
cld
ja
pop
jge
shr
icebp
repnz
mov
xadd
push
cmp
cmpb
pop
or
ret
or
xor
pop
adc
fadds
cmp
fwait
push
mov
lds
pop
cmpsl
lods
jae
aad
dec
or
or
xor
outsb
imul
loopne
lds
scas
fcmovne
push
adc
aad
test
sub
fwait
sbb
aad
inc
push
popf
sbb
jp
cwtl
jnp
les
jno
das
in
lock
push
es
out
andb
push
sbb
inc
sub
int3
rcrb
sbbb
adc
add
jo
cmp
mov
es
iret
jns
aas
xchg
das
pop
int
mov
jg
pop
xor
mov
mov
or
adc
sub
adcl
mov
dec
rorb
into
add
cwtl
jmp
es
push
add
add
ret
xor
in
repz
mov
rcrb
lock
push
divl
andb
and
mov
mov
out
mov
and
rorb
mov
arpl
aam
push
push
and
or
aam
inc
cmp
movsl
sbb
lahf
imul
cmp
inc
icebp
mov
dec
insl
xor
mov
dec
jecxz
roll
cmp
sahf
iret
pop
loop
imull
movsl
inc
lods
xor
aaa
test
loopne
icebp
jbe
shlb
jno
push
mov
cmp
adc
nop
imul
pop
stc
sub
in
push
shll
push
xorl
cmp
das
nop
or
push
jle
mov
mov
mov
test
inc
push
push
hlt
imul
in
mov
shr
dec
adc
and
xchg
jmp
mov
outsl
mov
mov
pop
jmp
add
xor
push
loop
adc
cmpsl
cld
mov
xor
or
mov
xcrypt-cfb
cmpsl
es
hlt
jbe
in
push
adc
out
adc
adc
movsl
xchg
dec
fisubrs
mov
pop
mov
dec
arpl
loop
push
pushf
fsubl
jnp
and
mov
xlat
cli
xor
xor
jmp
mov
fwait
testl
pop
xchg
test
adc
mov
loopne
pusha
ja
add
and
je
mov
inc
adc
jmp
test
dec
pop
sti
test
lea
xor
inc
xchg
insb
fbstp
inc
and
rcll
dec
js
cld
loopne
cmpb
ficoms
dec
ds
dec
ljmp
shlb
add
xchg
mov
sub
ret
or
adc
mov
stc
lods
leave
loopne
push
jno
repnz
in
xrelease
popa
xchg
les
daa
xchg
icebp
mull
arpl
add
push
fdivl
pop
rcl
dec
repnz
out
subb
adc
jae
sbbb
inc
popa
push
pop
pop
fiaddl
and
and
bound
cld
lret
filds
insl
push
cmp
dec
and
mov
xchg
xchg
adc
lea
dec
out
neg
jae
ljmp
jp
xlat
ds
loop
shlb
fiadds
xchg
mov
push
lret
and
xchg
mov
in
mov
lds
insb
cwtl
insb
xchg
pop
jg
mov
mov
pop
mov
lods
aam
enter
or
lds
jnp
mov
andb
roll
nop
fildl
xor
fstpl
pop
scas
adc
cmp
nop
push
shll
hlt
rorl
and
outsb
cltd
or
mov
cmp
jmp
nop
icebp
outsb
sub
pop
enter
std
xor
loopne
pop
les
sbb
jp
call
ja
fwait
sub
or
jae
mov
xchg
sub
mov
test
inc
test
push
ljmp
inc
lret
pop
js
cld
pusha
aad
das
jo
jecxz
imul
inc
jo
loopne
xchg
and
fdivs
cmp
mov
shlb
in
push
jp
sti
daa
pop
ror
lahf
aad
int
shlb
repz
stos
or
loopne
sar
mov
out
mov
outsb
inc
lods
or
jbe
inc
pop
pop
sti
adcb
popa
icebp
test
sbbl
sbb
pop
xor
loope
or
bound
pop
push
add
mov
xchg
dec
dec
fmul
cmc
nop
jno
cmpb
in
mov
cmpsl
outsl
and
adc
dec
mov
out
out
aad
enter
xor
cmp
mov
sar
fsubs
sbb
pusha
sub
mov
aam
mov
push
dec
popf
cltd
push
pop
in
cs
mov
dec
dec
lods
cli
ja
cmc
push
inc
lods
shrd
sbb
inc
fwait
sahf
ret
mov
xchg
pop
out
jns
jo
mov
outsb
in
or
insl
push
add
aam
jnp
and
cmpsb
xchg
jae
iret
enter
int3
inc
sbb
outsb
and
negl
and
leave
pop
pop
pop
es
int3
push
and
fcmovb
or
or
dec
lret
jecxz
out
push
sub
or
movsl
inc
fchs
fstl
add
jne
jb
push
jae
sbb
push
hlt
pop
mov
xchg
xchg
cmc
addb
inc
in
in
sbb
jmp
es
xchg
fs
scas
xchg
movsb
sbb
fs
and
adc
lock
push
cld
test
mov
mov
inc
stc
or
in
out
movsl
lods
loope
inc
ficomps
pusha
hlt
and
lret
add
sbb
sbb
stos
jecxz
pop
out
scas
sarb
mov
cld
fwait
add
push
cli
rolb
push
lods
xchg
mov
push
fldenv
fadd
push
inc
pop
mov
mov
jmp
movsl
mov
int3
xor
adc
xchg
jge
pop
clc
out
jae
insl
int
bound
pop
xor
iret
gs
mov
add
aaa
test
loope
shr
push
stos
jle
xlat
pop
repnz
adc
mov
or
adc
cmp
mov
call
xor
fidivs
data16
stos
lods
push
loope
sbb
iret
inc
je
test
rcll
and
add
jne
push
jne
mov
jbe
inc
cmpsl
das
icebp
inc
mov
jl
js
jo
out
hlt
mov
addb
xorl
sbb
mov
pop
cmpsl
push
dec
test
imul
xchg
jecxz
sbb
std
std
mov
lcall
xor
jg
jb
icebp
sahf
int3
fsts
mov
icebp
loopne
fisubl
lret
add
cmp
xor
cmp
shrl
sub
adc
pop
push
add
pusha
mov
neg
xor
mov
jle
int
stos
jo
and
and
jmp
and
jmp
loopne
jae
sahf
test
frstor
inc
stc
popa
add
inc
pop
adc
and
dec
push
mov
and
sarb
js
mov
sbb
jl
xlat
cmpsl
sbb
aas
push
pop
or
and
cltd
sbb
add
xchg
and
imul
mov
pop
xchg
movsb
push
sub
pop
mov
sbb
mov
in
enter
in
std
xchg
mov
mov
pop
and
push
adc
or
int
mov
cli
mov
inc
adc
jne
xchg
aad
dec
movb
jo
jp
xrelease
xchg
out
sti
jmp
inc
jns
fisubrs
loop
jmp
lahf
fs
jns
mov
out
jb
push
jge
test
or
enter
xor
add
pop
in
push
xlat
ja
add
jo
movb
xorb
adc
imulb
loope
dec
mov
sbb
pop
or
pusha
mov
mov
cld
xchg
pop
inc
jne
mov
cld
jle
in
lahf
adc
mov
dec
cltd
sahf
pop
leave
xorb
pop
mov
add
test
int3
cwtl
scas
sbb
push
dec
inc
mov
lds
mov
mov
nop
push
sub
hlt
jo
in
pop
shr
mov
sub
scas
xor
ja
loop
lods
cld
jns
into
es
xchg
popf
stos
cmp
fs
xor
push
mov
jecxz
dec
bound
incb
cmovo
xor
mov
push
jmp
fsubrs
inc
mov
lcall
outsb
insb
lret
inc
mov
xor
fdivrs
fmulp
mov
ljmp
fidivrs
mov
int3
bound
mov
std
inc
repz
xchg
cld
std
mov
bound
jp
cmp
pop
mov
insb
or
dec
pop
lods
sbb
ja
xor
scas
test
adcl
test
or
push
jecxz
mov
aam
mov
push
out
mov
jae
pop
xor
pushf
inc
or
push
or
rcrb
jno
movsb
ds
add
lret
jmp
mov
fisttpll
dec
in
test
enter
jmp
cmp
js
inc
fmuls
lcall
and
inc
mov
cmp
push
loopne,pt
fisttpll
aas
inc
dec
mov
push
cmpsl
bound
add
popf
jg
clc
mov
jecxz
mov
mov
cmp
xchg
xchg
cli
mov
pop
rol
pushf
push
fdivr
mov
loope
test
andb
mov
enter
add
add
xchg
ds
jae
lret
push
xchg
inc
movsb
roll
xlat
or
nop
jb
pminsw
push
xchg
dec
adc
dec
test
and
je
cmpb
movsb
cmp
jmp
daa
sub
ja
popf
scas
or
loopne
or
aaa
mov
jno
mov
adc
cmp
enter
push
jo
sbb
jnp
xchg
in
mov
push
sub
push
mov
xor
les
mov
lret
shrl
inc
insb
scas
inc
cmp
fiadds
fcomps
push
and
sbb
mov
dec
pop
dec
adcb
testb
jle
xchg
or
in
add
dec
stos
lret
mov
addb
int3
fbld
dec
jno
loope
fwait
cmp
xchg
ss
aas
stos
jnp
adc
insl
xorb
mov
mov
test
jg
sub
out
dec
shlb
call
lret
mov
out
lret
mov
mov
pop
xlat
scas
mov
sub
cmpsb
test
adc
je
sbb
sub
mov
jnp
lcall
ja
sbb
cwtl
repz
sbb
mov
xlat
xor
ret
bound
pushl
cwtl
int3
pop
mov
gs
jecxz
aad
jnp
sarl
mov
outsl
or
decb
fisubrl
dec
xchg
or
shrb
inc
push
and
fstpl
push
xor
sbb
pop
or
jb
cltd
dec
sub
in
xchg
mov
cmp
pusha
xchg
push
dec
push
int
inc
fcmovbe
sbb
lahf
push
jns
mov
jle
push
or
hlt
push
test
xchg
adc
test
outsl
js
inc
loop
add
sbb
movsl
jnp
loopne
mov
add
mov
fmull
outsl
ret
inc
test
outsl
lahf
mov
push
add
cmc
pop
mov
sbb
shrb
cmc
mov
jbe
add
push
lahf
or
or
push
cmpsb
adc
mov
cmp
in
jl
cld
sti
imul
clc
movsb
xor
pop
cwtl
sbb
sahf
adc
jp
push
enter
mov
fmuls
call
int
fsts
scas
rcr
loope
cmc
inc
pop
mov
andb
clc
flds
std
sbb
popf
xchg
cmp
pop
dec
fistpl
imul
and
popf
adc
pop
or
scas
insl
pop
cmpsl
rcrl
push
pop
mov
cwtl
gs
xor
xchg
adc
movsl
push
aas
sbb
dec
sbb
dec
cli
int
test
sub
mov
fs
push
scas
push
call
das
mov
imul
mov
outsb
imul
push
incl
xchg
or
lret
pop
sbb
std
leave
and
jo
das
std
cmp
xchg
jmp
pop
in
int
leave
pop
addb
ret
jne
aad
ds
jle
dec
add
neg
ret
repnz
in
addb
xchg
decb
mov
or
xchg
pop
ja
push
imul
ja
aam
and
push
mov
and
dec
pop
push
and
sarb
les
xchg
leave
in
xor
out
dec
mov
pop
jge
jge
into
loop
xchg
xchg
adc
mov
loope
cmp
test
jp
sbb
sbb
insl
adc
add
cmp
sbb
pop
out
push
mov
test
mov
ret
mov
cmp
je
jmp
mov
das
sub
gs
test
pop
shrl
jnp
add
push
mov
out
out
in
out
mov
sub
insb
or
sub
cmpsl
fldenv
or
pop
xor
jns
rorb
push
pop
push
add
jo
popa
push
pop
sahf
mov
mov
lret
test
imul
xcrypt-ecb
cmpsl
dec
pop
nop
ret
jl
js
les
out
adc
add
inc
jg
or
pop
cmpb
stc
mov
ss
je
ss
imul
in
leave
mov
ja
into
stc
aad
inc
testl
mov
lcall
in
mov
idiv
sbb
out
sub
dec
sbb
dec
cld
fstpl
sub
mov
ja
test
jne
push
dec
sbb
mov
cwtl
popa
cmp
and
xchg
push
mov
ljmp
popa
bound
lock
push
test
xchg
add
sbb
and
jo
dec
aas
into
cmp
jno
add
sbb
mov
je
adc
jns
jbe,pt
jmp
sbb
sub
cld
addr16
adc
jl
mov
gs
and
in
and
out
pop
imul
xchg
pop
mov
jb
push
and
cmp
stos
dec
sbb
sub
test
lret
loopne
repnz
lcall
andl
aas
mov
leave
es
and
out
call
in
cld
aam
popf
jge
les
adc
lahf
mov
subl
outsb
shrb
icebp
mov
cmovb
pop
jge
fstps
inc
pop
lods
shlb
popf
mov
cmp
jnp
mov
enter
push
cmpsb
xchg
hlt
pop
xorl
in
pop
fwait
test
pop
cmp
arpl
mov
lret
inc
push
out
inc
sbb
shlb
arpl
fiaddl
push
pop
clc
dec
cmc
out
aam
cmp
fisubl
into
mov
cmp
or
or
xchg
addr16
shlb
xor
xchg
idivl
jmp
inc
in
shr
xchg
sbb
pop
lock
mov
out
pop
xchg
clc
pop
jecxz
sbbb
and
rcrl
mov
addl
xchg
and
dec
pushf
orl
mov
cmc
or
nop
popf
cld
push
inc
lret
add
adc
out
ds
sbb
bnd
out
bound
sbb
add
shlb
test
subb
lret
into
mov
xor
mov
xor
imul
lods
cmpsl
xor
jno
pop
stos
insb
in
je
mov
mov
clc
inc
mov
mov
mov
pusha
daa
xchg
mov
cmp
mov
jne
mov
cmpsb
sbb
sub
cmp
or
cwtl
xor
push
fwait
sbb
xor
mov
filds
inc
xor
sbb
cmp
jno
sub
ds
add
xchg
hlt
lret
mov
rcll
jp
insb
jecxz
jo
out
rorl
pop
add
pop
shr
jl,pn
daa
addl
cmp
aad
adc
inc
movsb
movsl
fldcw
cmc
xor
stc
repnz
fildl
adcl
mov
ret
push
add
testb
ljmp
mov
ror
lods
scas
ret
popa
and
fcomi
and
mov
adc
mov
cltd
inc
mov
movsb
cwtl
and
dec
inc
add
in
sub
sbb
mov
inc
outsl
inc
test
pop
ss
ret
adc
cmpsb
stos
cmc
sbb
js
adc
sub
dec
cmc
push
std
sahf
pop
sub
icebp
bound
addb
jp
std
rorb
push
outsb
inc
add
je
imul
cmp
out
mov
hlt
lcall
sub
imul
jmp
imul
out
jb
out
dec
xchg
cmp
cmp
roll
fdivrs
pop
int
in
adc
icebp
aam
sarl
les
cli
jne,pt
inc
pushf
mov
pop
call
gs
inc
outsb
ja
pop
in
gs
or
mov
test
dec
mov
in
push
pop
add
arpl
fwait
gs
mov
pop
add
xor
add
sti
push
sbbb
iret
xor
dec
mov
jecxz
inc
stos
push
mov
or
mov
fcmovnu
ja
fwait
jbe
int
shll
push
je
push
test
dec
mov
lods
test
push
jge
pop
lock
add
sub
stos
cmp
sbb
ss
add
xchg
mov
adc
int3
pop
ret
mov
mov
inc
ffreep
daa
push
and
adc
lret
jmp
xor
add
loop
pop
lods
and
mov
pop
pusha
mov
push
cld
dec
data16
stc
jnp
inc
or
xor
sbb
sarb
pop
ficomps
loop
push
scas
jne
sahf
cltd
add
or
mov
mov
ljmp
repnz
std
mov
iret
jns
pop
in
test
loop
sbb
dec
cmpsl
jb
inc
pop
pop
je
xor
in
test
inc
repnz
fldcw
adc
adc
mov
xchg
gs
cmp
pop
jmp
test
aaa
movsb
leave
out
ret
mov
inc
or
fstpl
mov
ja
cld
jno
je
xchg
loopne
pop
sbb
iret
mov
or
leave
clc
ja
jg
adc
leave
ret
stos
les
jg
cmp
jb
das
scas
sbb
das
or
dec
mov
push
in
pop
push
mov
jnp
xchg
cmp
orl
dec
jecxz
xchg
jo
into
popf
and
adc
out
es
ret
aam
xor
ficoms
mov
adc
pop
ljmp
hlt
mov
ja
sti
jbe
add
pop
xor
push
fadds
push
dec
lds
add
push
sbbb
js
jge
cmp
mov
mov
fisttps
aad
pushf
xchg
sbb
stc
push
lock
ss
mov
jl
divb
dec
push
pop
xchg
sahf
dec
int
lods
ret
inc
jg
jecxz
fs
roll
mov
bound
stc
popa
xor
push
stos
cmp
sahf
push
or
into
out
cmpl
adc
faddl
add
xchg
dec
jno
mov
jl
scas
and
jl
adc
in
into
test
or
out
xchg
add
inc
fstps
movsb
sti
into
dec
fsubrs
pop
and
pop
pop
and
inc
mov
jo
jnp
xlat
jno
ljmp
std
push
fisubs
sahf
iret
repz
jb
or
xor
arpl
add
loopne
inc
jge
xchg
pop
adc
int3
std
inc
arpl
sbb
dec
inc
arpl
mov
sub
add
push
sbb
out
addr16
test
int
fildl
pop
jo
fcoml
jmp
les
clc
push
cmp
lods
xchg
xchg
js
ljmp
fcoml
inc
push
cmp
pushf
mov
mov
mov
mov
or
imul
jns
in
clc
cmpsl
bound
pop
inc
ficompl
outsl
or
push
jb
add
inc
add
loopne
xor
leave
jbe
or
inc
lcall
cmp
inc
mov
mov
pop
add
xchg
xor
out
add
push
nop
push
adc
es
push
mov
sbb
and
outsb
sub
push
and
mov
lcall
or
cmc
xchg
or
jle
mov
in
lret
pop
outsl
insb
movsl
icebp
insb
push
cli
cs
inc
iret
inc
std
sti
add
xor
cmp
push
and
xor
adc
shlb
mov
aad
lock
pop
test
js
gs
sub
mov
xchg
or
or
push
push
jecxz
and
sbbb
notl
mov
cs
xchg
test
test
mov
and
lcall
nop
jbe
shrl
dec
push
cmp
repz
dec
push
and
sbb
add
pusha
fldt
push
push
test
push
sub
inc
push
lods
mov
and
xor
jno
push
fdiv
pop
pop
addr16
std
push
cmp
mov
mov
call
rcll
jp
push
mov
mov
mov
fcomps
stos
pop
or
push
jbe
std
popf
or
inc
std
pop
repz
loop
add
push
roll
stos
icebp
mov
xchg
jmp
or
outsl
scas
cmp
jmp
dec
rcrb
mov
js
test
enter
or
push
jbe
testl
mov
sub
xchg
bound
scas
xor
or
movsb
in
pop
push
orb
cmp
pop
jae
jnp
mov
das
rcl
jb
lds
test
and
dec
gs
pop
aas
mov
xchg
cmpsl
or
pop
iret
push
adc
sarl
dec
hlt
inc
shr
jne
sub
imul
mov
loope
pcmpeqw
adc
daa
pushf
movb
mov
outsb
cmp
xlat
mov
cmp
add
addr16
cmp
or
dec
sbb
aas
sbbb
pop
lcall
sarb
or
jecxz
or
xchg
xchg
xchg
adc
adc
arpl
jle
push
pop
or
orl
jp
outsb
test
inc
mov
dec
pushf
bnd
popa
insl
int
mov
mov
out
sub
push
fwait
lods
icebp
cs
push
inc
cmp
xlat
aas
jmp
and
xchg
fdivs
mov
mov
push
cmp
stc
icebp
sub
insl
jb
addr16
adc
leave
xor
pop
dec
jno
inc
sub
leave
sbb
dec
das
adc
out
pop
add
mov
mov
inc
movsb
gs
mov
imul
les
stos
in
lea
mov
lds
adc
dec
jno
sub
and
lret
pop
movsb
mov
insb
add
out
andl
insb
aam
pop
inc
add
inc
fwait
sbb
into
je
pop
or
into
pop
cmc
aam
mov
mov
es
jne
cmp
jae
pop
dec
pop
mov
pop
movsl
shll
xlat
jmp
adc
cltd
mov
sub
jbe
push
and
cwtl
add
sbb
roll
pushf
xchg
push
jb
iret
inc
inc
lcall
inc
xchg
daa
mov
xadd
mov
test
repnz
or
sbb
lock
mov
stos
loopne
mov
stos
mov
or
pop
orb
movsl
xor
lock
add
jae
mov
fimull
cs
mov
insl
xor
cmp
inc
lret
stos
insl
pop
cs
push
repnz
push
pop
movsl
mov
xchg
aad
fcmovne
xchg
lds
das
or
xchg
sti
xchg
les
push
xchg
fisttpl
dec
test
push
cmpsb
pop
and
pop
push
faddp
mov
adc
cmpsb
cld
sub
cmp
outsl
inc
sbb
enter
inc
insb
ljmp
add
sbb
adc
imul
add
fcmove
cld
jecxz
lods
mov
mov
inc
jns
enter
test
sub
cs
pop
mov
outsb
ficompl
shrb
roll
bound
mov
inc
es
xchg
mov
dec
sbb
and
and
ret
outsb
inc
ret
pusha
mov
jnp
push
xor
sbb
in
jbe
int
and
repz
xchg
divb
cmp
and
lods
adc
pop
jne
sub
xlat
jno
les
mov
lock
cmpsb
cmp
aaa
xor
sub
or
into
sahf
inc
jne
jecxz
imull
add
mov
mov
cli
rclb
push
mov
push
and
movb
push
or
outsb
pop
push
and
mov
fimull
scas
enter
les
add
mov
fisubs
and
mov
pop
mov
pop
push
xor
testl
in
push
sub
xor
push
rcl
loop
or
mov
pop
or
pop
aad
aaa
icebp
inc
aas
out
cmp
bound
cmpsb
jecxz
xlat
pusha
mov
test
push
ret
jl
or
jno
cmpsb
shrl
scas
cmovne
and
add
rclb
push
dec
je
ss
mov
add
loopne
or
cli
jo
jmp
or
dec
mov
fdivr
sbb
jbe
cltd
sbb
add
sbb
add
mov
cmp
popf
mov
push
ror
ljmp
pop
mov
sub
pop
push
insl
sbb
jle
inc
add
cmp
adc
insb
loope
test
sahf
jns
inc
sahf
xchg
das
cmp
fwait
mov
jne
mov
ret
das
and
sub
pop
or
dec
jb
icebp
xchg
cmp
jne
pop
in
xor
adc
jmp
dec
xchg
inc
loop
mov
sahf
addr16
cmp
dec
lds
mov
es
pop
mov
inc
scas
ja
outsl
jl
xchg
aad
sub
testb
adc
fisubs
shr
cmp
aaa
cmpsl
bound
push
insb
shrb
xor
mov
cmpsb
xchg
and
adc
mov
pop
in
popf
xchg
xchg
aaa
clc
mov
lods
pusha
clc
sarb
mov
push
mov
cli
movsl
jae
jmp
shrb
dec
fmull
iret
daa
cmovl
pop
pop
decl
test
ret
sarl
add
popf
pop
push
add
pop
mov
xchg
xor
daa
pop
imul
xchg
rorl
ret
rorl
ja
insb
loopne
scas
sub
outsb
aaa
test
addr16
or
sti
dec
in
push
aad
testb
mov
rorb
sbb
or
pop
xchg
popf
push
leave
sbb
popf
add
insb
or
and
inc
testl
cmp
fnsave
lret
jle
punpckhdq
xchg
xor
out
divb
mov
pop
stos
out
mov
dec
inc
es
dec
in
mov
mov
push
fisttpll
jbe
out
add
cli
pop
mov
shr
dec
mov
sysexit
xlat
les
js
mov
jecxz
loope
mov
mov
cmp
and
out
ret
and
push
test
cmp
sbb
fsubs
int3
mov
inc
mov
in
push
mov
and
pop
adc
push
xor
cmp
xchg
jg
adc
lock
stc
sub
fdivrl
test
loop
mov
sti
xchg
push
iret
fsubrs
xchg
imul
dec
in
push
pop
jle
pop
jne
cmp
inc
in
sub
mov
mov
jae
or
jmp
adc
cmp
mov
lret
mov
movsl
imul
add
fwait
pop
inc
fists
enter
and
xor
dec
aad
sbb
jno
and
sbb
call
rol
mov
fisttpl
movb
ljmp
int
cmpsb
cmc
jb
rorl
add
stc
xchg
in
test
loop
enter
dec
xlat
pop
mov
mov
scas
jge
ficoml
xor
pop
dec
inc
push
and
mov
cmpsl
sti
insb
pop
stos
xchg
cmpsl
lods
fwait
or
pushf
sbb
lods
or
shll
sti
stc
dec
inc
cmp
imul
inc
mov
sbb
gs
xor
lahf
lock
pop
jbe
scas
aaa
mov
movsb
mov
mov
mov
insb
imul
stos
loope
adc
cwtl
shrl
lret
stc
fcmovnb
push
lods
xor
and
and
fisubrs
mov
movsb
fcoms
les
lds
inc
cmp
lods
jns
jne
rcr
cmpl
imul
in
mov
sti
mov
mov
jo
pop
inc
lods
cld
jmp
pop
sub
aas
lods
out
push
out
pop
in
add
les
jns
mov
mov
rcll
jecxz
mov
loope
pop
xchg
lods
pop
pop
inc
les
xchg
add
push
jo
jae
jg
aaa
addr16
pop
xchg
pop
imul
jbe
lods
loope
mov
pop
jae
mov
push
fwait
pop
or
mov
dec
push
daa
fwait
mov
xor
cltd
pop
cmp
dec
pop
cmp
fcom
out
out
jecxz
test
jne
ss
into
cld
mov
pushf
jns
push
lret
inc
fildl
pop
adc
fidivs
out
cmp
mov
xor
adc
rcrb
dec
aas
xchg
scas
xchg
push
adc
and
mov
sbb
into
and
cmp
cltd
sub
pop
sti
imul
clc
mov
test
fimuls
insb
or
shrb
pop
dec
ljmp
cmp
push
pop
add
jp
push
lea
in
js
mov
mov
insl
and
adc
adc
jecxz
orl
nop
jge
add
ss
xor
andb
rcl
call
dec
outsb
loop,pt
mov
shrb
nop
jae
cmpsb
repz
xor
call
mov
dec
mov
pop
dec
mov
xchg
scas
jge
xchg
xchg
cmp
ja
clc
mov
inc
out
mov
enter
loope
xorl
sbb
mov
fiadds
add
nop
loope
rol
jbe
sarl
mov
lret
adc
xor
adc
add
je
jecxz
adc
adc
fadds
clc
testb
mov
xor
ret
add
push
js
filds
jecxz
shll
mov
pop
xchg
fisttpll
add
jmp
imul
repz
dec
in
rcrb
inc
icebp
loopne
loope
cmpl
fcoms
cmp
cld
in
xor
push
fcom
pop
push
pusha
fstps
ss
or
mov
cltd
dec
inc
xor
dec
mov
mov
es
mov
mov
jo
mov
push
and
call
mov
xchg
aad
outsb
ja
dec
shrl
movb
dec
fiadds
dec
arpl
int
inc
out
pop
dec
mov
sub
sbb
xchg
dec
jo
sahf
push
cmpsb
mov
lods
ja
adcl
stc
aam
orb
bound
enter
gs
jns
out
pop
scas
sahf
mov
add
mov
popa
int
call
jae
scas
adc
xchg
fidivrs
rclb
mov
les
jp
icebp
xor
icebp
nop
cltd
loopne
mov
and
mov
mov
jmp
cli
xchg
sbb
popa
xor
mov
jl
add
and
mov
dec
ret
jmp
ljmp
xchg
lock
gs
jnp
in
or
cwtl
mov
in
cmp
mov
aam
cltd
mov
push
ljmp
fsub
or
pop
aad
mov
xchg
insl
shrl
jp
daa
jl
into
hlt
inc
test
les
push
into
fldl
call
mov
fisubs
sbb
push
cs
aas
mov
mull
jns
sub
sahf
sub
bound
sahf
inc
or
jb
mov
mov
clc
aaa
sub
shr
mov
jle
dec
or
jmp
jns
fmull
sahf
loope,pt
inc
popf
imul
cmpsl
mov
and
fidivs
outsb
ret
adc
daa
or
rol
cltd
pop
pop
jno
shll
jl
fs
rol
push
mov
or
xlat
mov
mov
pusha
in
cli
out
inc
jl
iret
mov
mov
popf
adc
repz
incb
mov
insl
dec
ss
fwait
outsl
push
inc
push
inc
mov
out
cmp
or
aaa
movsl
outsb
in
ret
mov
mov
cli
gs
pop
or
mov
cmp
popf
xchg
inc
pop
pop
push
xchg
inc
adc
add
cs
arpl
jl
add
mov
mov
popf
push
cs
sub
cmpsb
imul
push
add
sub
push
test
fstps
inc
bound
pushf
cmp
adc
jnp
das
inc
cld
inc
aam
cmp
stos
ss
out
jne
fsts
adc
in
imul
or
and
add
mov
mov
loope
scas
addr16
imul
cmp
mov
test
mov
outsb
ret
mov
in
mov
xor
dec
test
mov
mull
pop
sbb
ret
sbb
mov
or
stc
jne
jge
cmc
sub
mov
mov
xor
cmp
mov
push
xorb
jno
dec
pop
shlb
aad
xchg
das
xchg
push
popf
fdivr
jecxz
bound
cvtpi2ps
pop
sbb
and
sbb
jae
jl
mov
xchg
sbb
icebp
push
jb
mov
and
int
xchg
adc
and
jecxz
test
enter
aam
repnz
je
mov
addr16
dec
jo
loope
xchg
das
inc
ret
cmpsl
or
cmpsl
adc
push
popf
test
aam
sbb
cltd
mov
mov
mov
lea
insl
hlt
sahf
jb
xor
aam
mov
sub
js
mov
or
mov
add
out
add
call
pop
push
out
adc
and
aas
fincstp
cld
sbb
xchg
test
xchg
faddp
mov
push
xor
sub
dec
and
mov
lret
mov
lret
sbb
cli
jae
mov
xor
stos
inc
fdivs
enter
xorb
jns
mov
inc
mov
inc
ret
repnz
mov
fimuls
in
cltd
xchg
jle
adc
lahf
js
cmp
cmp
call
jno
shl
jge
shlb
cmp
pop
in
sbb
fildll
add
in
sbb
adc
cld
push
cmp
push
loopne
mov
aaa
xor
test
popa
mov
rcrb
pop
dec
push
push
fistl
sbb
sahf
dec
jbe
mov
mov
push
xor
jb
test
sub
out
pop
aaa
mov
sub
adc
aad
sub
sbb
mov
and
cmp
jg
mov
in
idiv
push
call
push
rcrb
scas
sbb
int3
or
push
mov
xchg
add
mov
jae
nop
shll
out
jge
and
jae
jecxz
imul
pop
out
ret
xor
adcl
pop
std
cmpl
enter
cs
in
add
lock
adc
cwtl
fwait
push
mov
mov
mov
psadbw
push
shlb
lock
adcb
mov
lret
mov
js
push
push
xor
movsl
pop
mov
mov
jge
out
aaa
ret
push
add
dec
jg
mov
jb
jecxz
sti
fnstsw
cmp
out
sub
jns
mov
jmp
shrl
fcoml
xchg
mov
push
sahf
enter
cmp
mov
sbb
mov
mov
sbb
jns
dec
mov
pop
out
imul
repz
push
stos
xor
mov
movsb
mov
es
imul
int3
cld
mov
inc
movsl
shll
or
imul
int
cmpsb
inc
inc
sub
xchg
mov
mov
pop
or
pop
mov
mov
movsb
mov
pop
adc
adc
test
or
or
addb
outsb
mov
imul
loope
mov
pop
cmp
add
lret
dec
inc
inc
and
xchg
std
testb
shlb
bound
in
loopne
addr16
pop
jl
push
je
xchg
aaa
repnz
inc
mov
inc
fistpl
mov
sbb
push
fcoms
cmp
mov
pop
pop
and
pop
lods
sub
push
cltd
rol
popf
inc
ja
icebp
xor
aas
adc
cmp
mov
push
jp
andl
add
inc
call
push
lahf
xchg
sub
shll
jmp
loop
ljmp
aaa
dec
xchg
out
lcall
cmpb
xchg
lahf
pop
aaa
or
fnstenv
stos
ljmp
sub
adc
lret
rcrl
cs
jne
push
sub
in
repnz
aam
mov
add
cmp
or
aaa
data16
sub
bound
cmp
or
mov
incl
dec
in
rolb
pop
popa
sarl
fadds
sti
adc
shl
add
shl
outsl
aad
sub
lods
add
outsl
dec
inc
jmp
cmp
xchg
movsl
aad
sbb
cmp
fwait
popa
inc
movsb
sub
das
xchg
jae
int3
loop
sbb
inc
aam
imul
dec
sub
out
data16
sbb
js
push
mov
aam
push
insl
xor
aad
lcall
or
mov
lods
xlat
jb
add
or
hlt
shlb
dec
xor
jns
pop
iret
popa
pop
jb
mov
pop
pop
mov
cmpsl
mov
cmp
mov
cmp
ret
pop
ss
sub
gs
and
mov
addr16
push
add
push
xchg
push
gs
jb
and
push
cmp
inc
adc
fbstp
or
push
pusha
push
in
or
shll
cmp
sbb
test
jns
int
mov
add
fbld
shrl
mov
mov
fnstsw
mov
pop
das
dec
and
adc
inc
testb
test
push
popf
mov
pop
bound
int3
pop
lock
mov
cmc
enter
insb
mov
jns
ja
mov
add
jne
icebp
pop
iret
adc
mov
push
nop
enter
push
push
lahf
jecxz
shl
fldlg2
cmp
push
mov
scas
jp
lcall
push
inc
mov
faddp
repnz
inc
iret
aad
test
add
push
js
mov
jae,pt
mov
jae
jl
fcoms
dec
adc
jmp
pop
sub
call
and
inc
add
push
sub
xchg
loopne
in
rcrl
mov
fiaddl
imulb
inc
repz
stos
sbb
cmp
pop
mov
fcmovnu
pop
add
and
jle
es
jno
insl
stos
test
rorb
js
pop
aad
lods
jp
aad
inc
add
xchg
add
xchg
jmp
mov
cmc
insb
jnp
sub
mov
and
out
mov
or
adc
dec
pop
sbbb
pop
mov
inc
rcll
test
cmp
add
aad
push
xchg
sbb
push
daa
scas
cmp
dec
add
out
push
fimull
push
sub
das
xor
pop
push
adc
and
clc
pop
mov
and
push
fstps
or
sub
inc
lret
mov
inc
stc
bound
sub
jg
add
xchg
mov
imul
aaa
xchg
je
aam
xor
cmp
add
mov
jne
pop
lock
mov
mov
or
cmc
ljmp
pop
jp
mov
lret
mov
test
and
or
and
popa
xlat
jne
add
dec
dec
cmovge
inc
sarl
xchg
or
loope
jnp
out
repz
and
fildll
bsr
test
addl
aaa
mov
xchg
rorb
fisubs
sahf
mov
scas
mov
and
decl
xchg
xchg
dec
adc
pushf
adc
das
jmp
movsl
pop
lods
mov
cs
pop
mov
cmpsl
adc
lret
inc
sub
xor
ror
pop
or
loope
pop
mulb
nop
sub
scas
insb
js
fisubrs
test
push
je
jg
push
mov
mov
dec
test
mov
nop
loop
punpckhwd
fadds
push
mov
fnop
icebp
adcb
fnsave
dec
aas
mov
lcall
clc
and
push
inc
add
orb
lds
mul
push
sub
sbb
or
mov
sub
cmc
jnp
or
or
sahf
jo
incl
jl
and
pop
jg
lahf
mov
sti
add
or
and
mov
mov
sti
mov
stc
lahf
inc
cmp
aam
aas
out
fstl
mov
pushf
xchg
jl
xchg
dec
pop
clc
lret
gs
lds
cmpsb
mov
sbb
xchg
add
mov
cmp
cmp
mov
push
loopne
aas
push
lds
stc
add
add
or
lcall
jae
inc
pushf
lret
cmpsb
sbb
into
adc
dec
repnz
js
jno
mov
dec
push
cmp
testl
mov
push
and
dec
add
dec
aam
orl
pop
jg
dec
in
xchg
inc
ficoms
xchg
imul
inc
into
xor
push
out
sbb
adc
dec
out
loope
add
fwait
xchg
in
adc
loope
lea
adc
dec
mov
mov
hlt
scas
cmp
lahf
ret
sbb
adc
jl
mov
pop
movsb
mov
push
loope
iret
cli
dec
lea
popf
dec
sti
mov
sarb
std
test
push
jp
inc
mov
add
jo
fimuls
fdivl
loop
mov
shrb
or
add
pop
cmpsb
out
das
cltd
inc
loop
lods
pop
and
std
jb
push
dec
dec
push
sbb
dec
cmpsb
mov
pop
mov
sahf
rep
push
add
popf
icebp
iret
adc
jge
jl
mov
xchg
aad
insl
pushf
sbb
adcb
aad
dec
or
clc
loope
xor
pop
call
out
lds
scas
mov
push
popf
sbb
sub
xchg
push
inc
add
pushf
fidivs
or
clc
in
lcall
ja
inc
and
dec
adc
inc
sub
mov
sbb
mov
jae
add
fisubs
sbb
or
sub
xor
cmp
xchg
daa
imul
aad
xchg
dec
or
cli
xchg
adc
cmpsl
add
sar
cmc
xchg
enter
stc
hlt
leave
or
dec
repnz
sbb
sub
je
sbbl
incl
lds
inc
inc
fdiv
or
lds
mov
les
fld1
sahf
sbb
dec
test
jnp
ret
repz
cmp
xor
andb
clc
dec
rcll
hlt
cli
or
jl
call
jle
test
int
pusha
xchg
and
sbb
add
xor
in
push
dec
mov
icebp
pop
push
fdecstp
cmc
jl
mov
test
xchg
add
xchg
mov
xchg
xchg
ffree
pop
js
shrl
arpl
movsb
push
scas
and
pop
mov
popa
and
jbe
shlb
aas
push
mov
ret
aam
shlb
rcl
sbbb
into
mov
pushf
mov
dec
sbb
pop
das
or
jp
repnz
ret
mov
ljmp
mov
icebp
mov
mull
push
push
sbb
mov
adc
in
in
dec
pop
push
addr16
xchg
mov
roll
in
mov
rcrl
rcll
pusha
mov
mov
imul
dec
adc
adc
adc
lds
xchg
ficoml
or
lcall
mov
dec
gs
jne
sub
pop
ss
jmp
xor
cmp
jns
sbb
xorb
fcmovne
adc
lds
cltd
xor
shrb
call
movsb
jmp
jl
aad
addr16
repnz
clc
mov
pop
test
push
add
and
lahf
mov
jbe
lret
cmp
or
xchg
lret
and
addr16
insb
sbb
or
or
fstl
xchg
pop
xor
dec
dec
jecxz
add
jl
test
xchg
or
pushf
outsb
lods
in
repz
or
mov
dec
mov
incl
add
cmpsl
adc
sbb
jo
jp
es
stos
push
or
mov
sbb
mov
cltd
ret
sub
cwtl
sbb
scas
lcall
xchg
stc
out
inc
dec
or
pusha
xor
adc
clc
mov
dec
out
mov
push
push
adcb
subl
mov
in
or
jae
imul
xchg
sub
inc
jl
dec
les
sti
lret
cltd
addr16
cmpsb
or
xor
cmp
hlt
fsts
hlt
orb
clc
ljmp
sti
out
pop
xor
push
xor
lods
inc
push
pushf
and
daa
add
jg
push
arpl
inc
push
outsl
mov
pusha
mov
ss
sahf
xor
in
insb
sbb
adc
mov
insb
sub
inc
mov
fs
lods
fcompl
and
push
arpl
enter
cltd
lret
loope
out
cmc
and
mov
test
dec
mov
xor
fnstcw
inc
push
inc
pop
movsb
out
cpuid
push
test
adc
sbb
and
outsl
jb
add
insl
stos
cmp
ret
ss
or
mov
enter
mov
out
or
call
lea
mov
iret
jbe
stos
popa
push
cmp
inc
inc
lret
jmp
push
out
pop
insb
lock
jno
sub
pop
leave
or
or
jg
push
iret
std
jne
aaa
jmp
pop
std
jb
add
cmp
pop
xchg
mov
das
or
divb
dec
jmp
in
in
and
sbb
push
lret
push
ljmp
out
xor
mov
dec
roll
fnsave
mov
xor
mov
jle
test
pushf
divl
movl
push
mov
or
pop
out
and
int3
jmp
mov
cmp
jb
xchg
sbb
jns
fcomps
mov
shl
and
mov
into
xchg
dec
or
xor
inc
fcmovu
xchg
das
scas
push
add
lods
lods
adc
jne
iret
push
loopne
mov
or
loope
cmc
aaa
sbb
xchg
arpl
inc
jg
test
out
repz
cmp
jecxz
test
cltd
mov
ds
push
lds
dec
cs
pop
scas
adc
or
das
in
mov
in
pop
and
mov
imul
in
or
enter
mov
inc
dec
popa
and
push
subl
dec
inc
adcl
push
fimull
rcr
mov
leave
repz
dec
xchg
pop
mov
ja
lahf
mov
andb
lods
adc
out
mov
mov
imul
xor
or
in
in
mov
iretw
aam
lods
push
loope
add
and
pusha
test
mov
dec
mov
adcl
aaa
mov
jge
xchg
test
sub
call
call
std
sub
loop
jo
scas
pop
inc
xor
loope
push
or
jmp
fs
dec
pop
ret
jns
lods
mov
add
movsl
into
xor
and
adc
fcoml
lds
adc
dec
lret
push
jnp
cli
jl
aam
mov
sub
jno
mov
jnp
add
jbe
cs
jno
clc
pop
rcll
push
in
sub
mov
mov
in
imul
mov
push
cs
lcall
shrl
stos
subb
xchg
and
add
nop
pop
in
sbb
or
xchg
pop
xchg
xchg
mov
enter
pop
sbb
out
xchg
jbe
push
push
ret
in
pop
jmp
out
push
stos
dec
cmc
inc
and
cs
mov
push
add
inc
out
out
lods
outsl
xchg
mov
adc
fisubs
rorb
adc
into
pop
xchg
clc
out
push
mov
dec
mov
stos
cli
cli
pop
sbb
imul
movsl
mov
push
mov
mov
push
mov
mov
adc
icebp
jp
dec
add
int
cmpsl
sub
inc
mov
dec
dec
inc
inc
jmp
push
outsb
not
insl
pushf
push
out
mov
in
push
stos
adc
mov
xchg
imul
negl
sub
sbb
aaa
mov
aam
inc
das
pop
sbb
sub
movsl
sub
xor
push
in
and
arpl
orb
pop
das
nop
xchg
push
mov
test
fstps
add
jg
or
push
adc
test
cli
sub
inc
iret
test
test
and
dec
push
mov
xchg
cmpsl
shlb
cmc
inc
inc
fs
pop
push
sub
pop
xor
fcompl
icebp
adc
rolb
sbb
add
in
and
pop
incb
jl
mov
outsl
iret
jnp
imul
call
push
inc
lods
mov
out
sub
roll
movsb
out
cmp
jnp
out
sarb
sbb
xor
jbe
mov
pop
lret
in
add
jb
cmpsl
cwtl
dec
pusha
outsl
sbb
mov
sub
cmpsb
ja
adc
and
and
dec
jnp
jge
mov
scas
cwtl
ljmp
lds
sub
aas
jne
ret
ret
dec
jb
test
dec
movsb
push
ss
out
push
sub
repnz
imul
test
sbb
sub
leave
enter
ss
and
out
sbb
mov
adc
daa
insl
adc
fwait
and
fadd
insl
xchg
in
mul
dec
insl
xorl
push
stos
dec
sub
shlb
xor
lcall
dec
shl
in
ss
ja
sahf
icebp
xor
and
mov
mov
push
iret
dec
leave
daa
lret
lods
popa
das
testl
mov
cmp
ret
pop
leave
dec
adc
push
jb
mov
and
jae
aad
xchg
and
out
xlat
sbb
xchg
cmp
xchg
movsl
jecxz
pushl
dec
test
pop
jmp
mov
xchg
or
push
out
push
pop
movsl
pop
je
xchg
sti
hlt
mov
addr16
sub
cwtl
bound
bound
xchg
loope
inc
insb
adc
mov
imul
cmp
mov
shll
jbe
adc
popf
popf
mov
push
hlt
enter
enter
mov
dec
fsubrs
mov
daa
outsl
mov
xor
add
js
dec
shlb
movsb
pop
sub
test
shll
xor
xor
pop
in
ja
outsl
clc
jp
dec
sbb
insl
jecxz
into
push
xor
pop
out
xor
das
aas
or
leave
lds
ljmp
mov
fsts
cld
in
hlt
mov
sbb
pop
mov
fcoml
aad
push
dec
pop
shl
pop
mov
xchg
dec
xor
sbb
fildll
jno
or
aam
inc
mov
mov
mov
pop
addr16
ja
inc
mov
xor
mov
dec
push
push
leave
test
scas
jnp
outsl
rcrb
movsb
cmc
xchg
rcrb
aas
mov
jns
out
jecxz
leave
aad
push
aas
imul
in
into
loopne
mov
repz
mov
and
xchg
bswap
lret
pop
loope
jge
fisubrs
test
sub
pop
fimull
xor
mov
jne
push
inc
pop
cmp
lods
and
stos
add
jns
dec
jae
or
icebp
ljmp
sub
push
clc
test
xor
stos
dec
lea
pop
mov
outsl
mov
adc
pop
sbb
xchg
xorl
aaa
pop
mov
jnp
pop
test
push
lock
sti
gs
inc
jg
leave
movsb
loope
in
imull
pop
add
leave
cwtl
arpl
ljmp
push
jb
es
push
mov
add
decl
pushf
cmp
sbb
out
mov
stos
add
mov
xchg
stos
test
repnz
popa
jle
sub
add
sub
xor
icebp
insb
cmc
xor
pop
add
ds
cmp
xchg
push
ud1
fmulp
repz
lds
decb
dec
mov
rorb
mov
addb
leave
aas
int3
sub
adcl
dec
jo
mov
ss
cmp
insl
dec
nop
mov
sbbl
inc
jg
into
push
mov
lds
in
pushl
aas
mov
test
sub
cmp
andl
pop
push
aas
xlat
adc
add
clc
dec
cmc
nop
jmp
jecxz
aas
in
xor
pop
popf
push
dec
jnp
and
loopne
add
jl
dec
and
in
pop
enter
add
jbe
stos
scas
lcall
push
xchg
xchg
or
adc
mov
inc
ja
cmc
push
aaa
out
mov
xchg
pop
mov
sbb
ja
or
pop
pop
ss
mov
or
dec
ja
and
int3
iret
cmp
icebp
cmpsl
xor
sub
sar
add
lods
into
imul
movsb
xchg
je
mov
dec
cmc
mov
inc
push
xchg
add
and
fwait
cmp
and
dec
and
repz
data16
pop
stc
cld
fcomp
lea
or
cmpsb
xchg
sub
imul
enter
in
pushf
mov
int
and
ret
add
jnp
sub
xchg
jecxz
adc
xor
lods
sar
loopne
inc
cwtl
popf
lret
mov
jge
insb
mov
lret
add
test
cmc
hlt
cmp
jns
lret
daa
movsl
xorb
add
cmc
jns
pop
jb
out
jecxz
aad
add
scas
ret
xchg
pop
jnp
stc
jecxz
mov
inc
les
mov
xor
mov
ljmp
sub
sbb
test
push
shl
cmpsl
ds
dec
xchg
lahf
xchg
pushf
adc
test
mov
lahf
out
dec
dec
jb
movsl
orb
sbb
jne
add
mov
sti
mov
lock
push
imul
int3
push
stos
mov
cmp
jb
das
mov
jp
push
test
inc
hlt
xor
bound
dec
adc
mov
leave
das
mov
push
adc
xor
jae
xor
rcll
or
scas
addr16
inc
inc
rclb
mov
xor
mov
lret
out
js
test
or
jmp
mov
scas
add
enter
lcall
mov
out
lahf
adc
cltd
sub
xor
rclb
hlt
and
xor
fwait
push
out
in
stos
pushf
je
iret
arpl
insb
sbb
iret
mov
popf
das
call
cmp
jg
insl
loop
push
add
xor
stos
jl
test
dec
adc
dec
add
mull
mov
incl
push
cmp
pop
test
fisubrl
push
icebp
xchg
sub
dec
jne
hlt
js
cmp
and
nop
pop
pusha
xchg
test
fwait
push
mov
insl
fwait
lds
int3
pop
lahf
loope
in
in
pop
pusha
ljmp
add
add
cmp
inc
add
ja
in
push
ds
aas
lret
bound
int3
movsb
rolb
xchg
int
add
xor
jae
comiss
mov
mov
nop
push
clc
mov
repnz
cmp
jle
xchg
push
mov
pop
mov
xchg
xchg
or
nop
mov
mov
pop
outsb
popf
das
int3
fmull
sbbb
push
loope
mov
or
mov
outsl
lcall
fdivs
xlat
adc
lret
outsl
mov
fisubl
mov
fildll
mov
outsb
push
and
fstl
pusha
inc
insb
inc
inc
loope
pop
xor
add
ljmp
xor
sbbl
rorl
imulb
ficomps
mov
xor
sbb
or
jo
or
jg
mov
jne
cmp
imull
cmpsl
jge
jo
mov
cmp
scas
sbb
sub
mov
add
mov
mov
ljmp
xor
aad
push
xchg
mov
es
data16
dec
mov
jl
cld
sub
push
test
hlt
mov
je
mov
add
aad
dec
in
fwait
adc
ror
jmp
inc
je
fstpl
roll
lret
idivl
fisubrs
or
loope
cmp
scas
mov
aas
ret
iret
push
xchg
insb
mov
cmpsl
push
lcall
cmp
inc
sub
cmp
movsb
addb
and
pop
pop
scas
xor
in
jae
aad
retw
popf
push
dec
arpl
int
adcb
repnz
outsb
sti
test
cwtl
push
dec
mov
sbb
sub
jp
pop
inc
and
psubsb
lret
mov
arpl
cmp
push
mov
jbe
pushf
fisubrl
xchg
mov
or
cwtl
les
inc
sub
popf
mul
jle
pop
int
fsubs
daa
push
or
pop
aam
xchg
sbb
push
and
push
mov
bound
mov
shrl
add
pop
push
scas
and
xor
pop
xor
xor
add
xchg
roll
push
jae
mov
or
insl
movsl
jmp
and
mov
data16
adc
insb
cmp
test
js
cmc
into
stc
lret
pop
pop
xlat
mov
fcoml
inc
das
cwtl
push
or
cmpsl
ja
mov
mov
push
add
sbb
ljmp
adc
sub
mov
adc
xchg
mov
stc
arpl
xlat
mov
daa
pushf
push
adc
and
dec
stc
xorb
cwtl
inc
lcall
call
mov
ret
dec
icebp
sub
sti
add
inc
in
adc
xor
inc
xchg
sbb
sahf
xchg
sub
xchg
test
cmpb
dec
sbb
mov
inc
inc
out
out
call
out
ljmp
sbb
std
lea
add
dec
ret
push
or
add
stos
cmp
sbb
push
cmp
mov
je
cwtl
push
fsubrl
cmc
nop
inc
bound
ret
adc
das
sbb
and
mov
rol
dec
mov
jnp
xor
mov
sub
jg
addl
or
or
push
xchg
cmp
movsl
inc
test
push
inc
or
ret
enter
mov
bound
pop
pop
dec
dec
leave
arpl
cmp
xchg
lahf
clc
loop
out
sti
mov
in
adc
inc
sub
neg
sbb
sbb
mov
add
divb
fisttpl
pop
pop
pop
dec
int3
div
jns
andl
add
fisubrl
aam
cmp
pop
mov
mov
shll
cmpb
int3
pop
pop
xchg
add
mov
test
push
jle
jg
xchg
jne
lock
lock
test
mov
dec
hlt
pop
mov
fldl
jg
ficompl
dec
inc
dec
faddp
pop
hlt
mov
icebp
jnp
jb
cmp
push
aas
push
jg
std
cld
mov
lea
loope
stos
xor
pop
out
jae
fcoms
and
mov
and
in
sbb
inc
enter
mov
popf
shr
mov
stc
lods
fmuls
mov
dec
test
jp
lcall
xchg
push
adc
cltd
mov
and
xchg
out
or
call
mov
fst
pop
or
sub
pop
inc
mov
es
inc
gs
cmp
mov
int3
imul
pop
decb
adc
mov
fdivr
popf
xor
aam
test
aaa
arpl
cld
mov
cltd
push
imul
paddw
daa
lock
stos
pop
aas
pop
dec
or
ret
sbb
iret
aas
popa
mov
scas
mov
js
add
rcll
stos
dec
hlt
cmp
andb
mov
dec
leave
xchg
movsl
lcall
adc
filds
mov
add
cwtl
aam
add
arpl
sub
add
filds
mov
out
mov
fbstp
subl
sbb
inc
xchg
mov
and
loop
in
ja
or
ja
cld
fsubrs
dec
and
dec
push
jo
pusha
and
or
xchg
and
outsl
mov
lret
out
enter
adc
mov
cmp
imul
je
aaa
frstor
js
xlat
mov
rcrb
popf
push
add
and
jne
mov
jno
xor
arpl
pop
cmp
insb
dec
or
imul
add
inc
xchg
sbbb
aam
cmp
jns
xchg
test
movl
in
scas
test
fdivr
xchg
pcmpgtw
nop
or
test
das
fwait
add
cwtl
xchg
fs
adc
sub
mov
xor
xor
jbe
jp
xchg
ret
cmpsb
adc
incl
in
stc
push
std
ljmp
movsl
es
outsb
jmp
push
mov
pushf
imul
push
std
addr16
cs
out
dec
aam
outsb
inc
dec
ja
or
mov
out
and
or
and
mov
jns
ds
cmc
ja
fstps
pop
add
sbb
sahf
sbb
test
adc
xchg
test
lods
mov
dec
dec
leave
cmc
mov
test
dec
fnstsw
cmp
pop
sbb
pop
xor
mov
ljmp
push
mov
lahf
lret
icebp
xor
pop
loop
shlb
cmp
mov
pop
movsl
lods
sbbb
into
cwtl
loopne
pusha
cltd
ss
push
fadds
std
sub
popf
or
jb
pop
mov
test
pushf
pushl
xchg
mov
xchg
cli
mov
mov
test
and
rcr
mull
lret
xor
jnp
xchg
lods
cwtl
and
xchg
sbb
xchg
sbb
cltd
jge
jns
or
push
in
push
pop
mov
loope
and
add
dec
arpl
sub
mov
ljmp
jb
movsb
or
xor
shr
sbb
cmpsl
mov
imul
bound
jnp
inc
jg
sbb
cmp
adc
int
les
lret
lahf
mov
push
inc
and
pop
and
enter
xlat
and
push
pop
shrb
out
lods
cmc
pop
push
sahf
mov
push
xor
jo
adc
push
sbb
push
ljmp
push
sarl
dec
add
adc
mov
in
int
jge
push
push
stos
outsb
cmp
push
cltd
mov
out
lods
mov
mov
test
pop
sbb
and
xor
aaa
pop
lret
push
jbe
js
dec
fwait
xlat
gs
push
sbb
dec
xchg
or
cmp
aad
cmp
jnp
dec
lods
cmp
pop
sti
dec
lret
test
inc
push
js
out
sbb
movsl
test
pop
push
adc
or
out
cmpsb
jo
ja
movsl
xchg
mov
push
adc
je
daa
ficomps
inc
sub
out
adc
push
or
adc
jns
aam
push
outsl
leave
push
insl
adc
out
xor
lea
mov
imul
je
mov
sti
add
or
out
or
mov
mov
sarl
sbb
test
filds
cli
jecxz
adc
xor
mov
mov
sbb
adcl
loop
mov
sbb
ds
cs
divb
nop
cmp
or
adc
inc
stos
mov
stc
les
push
lcall
fistl
add
adc
aad
jecxz
or
mov
fwait
mov
inc
push
or
out
ja
out
pop
jnp
jns
clc
xor
xchg
enter
pop
mov
mov
mov
insl
xchg
or
jbe
mov
repnz
mov
fisubs
in
adc
fs
or
pop
jbe
mov
das
addr16
shrb
sub
lock
pop
jae
jbe
dec
jo
loope
mov
jbe
mov
xchg
cmp
aas
leave
into
jp
icebp
loop
outsl
addr16
pop
outsb
fdivl
arpl
push
mov
and
lret
jne
push
sbb
pop
push
xchg
adc
lods
mov
inc
sbb
or
xor
mov
gs
fiadds
jo
nop
inc
jp
xchg
jne
fdivrs
or
rcll
mov
div
shrb
hlt
rorb
pop
mov
in
imul
inc
or
jb
and
push
dec
jae
or
test
mov
push
mov
loope
sub
sbb
into
shrl
out
sbb
ja
loop
sbb
stos
and
mov
and
jae
sub
shl
pusha
dec
mul
xchg
dec
movsl
mov
mov
fildl
repz
jl
mov
test
mov
adc
inc
mov
ret
jb
cli
mov
add
or
mov
test
mov
mov
sbb
pop
or
pop
mov
aas
jno
in
pop
pop
lret
cmp
aas
and
and
pushf
mov
adc
add
scas
inc
jp
inc
mov
jp
jae
leave
outsb
dec
sbb
leave
mov
sbb
dec
ficoms
push
jmp
cmp
xchg
sarb
push
sti
ss
in
dec
pop
adc
daa
push
sbb
cmc
movsl
jne
jl
sub
and
add
sub
je
outsl
cwtl
je
insl
add
xchg
sbbl
mov
out
popa
xchg
push
adc
inc
inc
popa
cwtl
aas
lahf
enter
icebp
xchg
mov
dec
pop
push
or
push
mov
sub
and
push
mov
sbb
mov
and
in
or
sbb
push
adc
rorb
jb
add
adc
jns
mov
cmp
imul
pop
shl
push
mov
in
and
add
inc
mov
jmp
jp
sbb
shl
ret
cmpsb
popa
dec
mov
into
sub
scas
mov
test
sbb
mov
test
push
sub
jge
or
lret
lret
fistpll
push
cwtl
cwtl
cmpsb
mov
pop
inc
outsb
cmc
push
push
pop
jae
repnz
sub
and
daa
push
sarb
jmp
inc
mov
adc
icebp
outsl
push
adc
icebp
leave
xlat
sub
pop
xchg
mov
or
and
and
out
mov
arpl
jns
dec
or
ficoms
ret
rcll
pop
fwait
xlat
mov
lods
push
adc
aas
push
loopne
inc
cmpsl
fisubl
lcall
iret
aaa
sbb
insb
sub
shll
lds
lcall
dec
xchg
in
inc
hlt
out
js
mov
lret
cltd
loopne
movq
daa
pop
cli
push
cltd
or
in
pusha
lods
fsubr
scas
nop
cmpsl
les
pop
jp
adc
dec
movsl
xchg
jb
cmp
daa
cmpsb
fmul
adc
js
jns
push
push
gs
imull
mov
jecxz
mov
lock
or
sub
inc
or
divb
adc
lcall
test
cmp
sub
cmp
and
cltd
mov
mov
clc
daa
mov
and
mov
lcall
xchg
lds
sbb
sub
and
xor
xorl
push
rolb
xlat
lcall
cwtl
mov
sbb
xchg
stc
jl
xchg
fsubrl
pop
adc
stos
adc
les
je
push
pop
push
mov
add
stos
xchg
ja
lea
mov
or
and
jb
ds
push
push
adc
scas
push
or
sbb
sti
xor
lock
ret
loopne
std
inc
push
or
test
scas
or
sub
notl
fidivl
or
mov
dec
mov
aad
roll
xlat
mov
int
push
and
notb
imul
xor
sbbb
nop
stos
mov
test
inc
lahf
fs
cmp
inc
inc
push
enter
push
pop
jecxz
pop
mov
das
sbb
and
lcall
push
test
addr16
add
xchg
pop
push
adc
cmpsb
jg
sbb
insb
pushf
dec
jnp
sub
add
xchg
adc
jno
pop
imul
xorb
test
mov
mov
xchg
push
hlt
jo
adc
fwait
mov
lcall
std
dec
imulb
dec
popf
clc
mov
mov
mov
aam
cmp
mov
jno
repz
adc
lahf
movsb
outsb
sbb
shr
cmp
jae
pop
cmc
inc
xchg
jae
popa
out
shl
insl
pop
loop
out
mov
ffree
pushf
lds
pop
hlt
and
dec
sub
test
cmp
gs
rcrb
mov
sub
and
ds
mov
call
in
inc
mov
arpl
push
aas
mov
jecxz
jecxz
cmp
dec
lahf
cmp
mov
push
dec
pop
jl
pop
sarb
scas
jnp
nop
cmp
mov
outsb
addr16
push
fistl
lahf
inc
fs
shll
mov
jp
aad
xorl
lods
inc
pop
shr
xlat
imul
inc
dec
inc
and
dec
sub
insl
sahf
std
fbstp
xchg
je
cmpsl
sub
jno
int
dec
push
ja
out
push
fstpt
cmp
in
jns
inc
icebp
lock
out
pushf
les
scas
push
jmp
lods
bound
imul
mov
ja
pop
pop
pop
shlb
jae
dec
xor
imul
push
inc
mov
inc
stc
push
dec
mov
test
or
jno
xchg
sbb
lds
into
pop
nop
xchg
pusha
or
or
adc
out
jmp
pushf
xchg
mov
insb
sub
mov
dec
adc
iret
push
sbb
cmp
mov
xor
mov
push
and
push
cmp
mov
popf
mov
fidivl
dec
in
xchg
push
mov
mov
in
xlat
or
sbb
movsb
enter
jno
call
mulb
sbb
jle
xor
int3
outsl
xor
mov
mov
or
pop
sub
adc
aas
lds
mov
mov
ljmp
xchg
inc
push
sbb
js
mov
jb
jl
aaa
xor
pop
orl
cmp
mov
mov
repnz
mov
insl
pop
movsb
adc
adc
push
adc
scas
mov
mov
push
dec
je
loopne
xchg
shlb
pop
shll
jno
hlt
outsb
inc
xlat
in
adc
pusha
pop
pop
push
sti
cs
call
stos
inc
pop
lock
jno
lea
and
sub
scas
sbb
cld
fs
ja
test
lcall
pop
xor
or
inc
xrelease
mov
lret
xor
rorl
aaa
adc
dec
and
subb
push
mov
mov
scas
xchg
lcall
rclb
mov
repnz
jnp
inc
jbe
dec
leave
shll
imul
jae
xchg
or
pop
cli
or
sub
push
xor
popf
push
lds
mov
xchg
fstps
sbb
int3
bound
cwtl
push
mov
mov
or
jecxz
dec
sbb
inc
gs
daa
aaa
inc
or
ret
cmp
addr16
inc
push
sbb
shlb
or
pop
loop
push
fst
cwtl
ret
enter
inc
mov
subl
insb
lahf
or
cmc
jecxz
xchg
adc
pop
stos
psrad
ja
es
lret
pop
sub
cmpsb
sbb
mov
je
das
les
or
mov
pop
repnz
pop
xchg
mov
dec
mov
sub
cmpl
xor
sub
xchg
sub
repz
pop
lret
add
es
mov
and
ret
movsb
popa
sbb
jp
cltd
push
dec
stos
out
pop
ficomps
in
adc
cmp
mov
lahf
lret
cmp
jo
mov
sub
sub
mov
test
jmp
inc
adc
mov
mov
sbb
jno
test
dec
adc
pop
insl
dec
cmp
imul
ja
pop
adc
push
in
lret
xorl
fcomps
ja
cld
jne
inc
mov
repnz
push
lret
arpl
out
loope
pop
ljmp
jb
add
dec
mov
scas
sbb
inc
sti
sub
hlt
or
les
mov
movsl
mov
fcmovbe
xor
jle
push
or
sbb
pop
fdivrl
call
mov
addl
mov
jmp
mov
adc
outsl
repnz
hlt
in
js
push
dec
test
inc
xchg
xor
fidivrl
or
dec
imul
insb
pop
lods
adc
loopne
iret
cld
fwait
mov
pop
mov
jl
jae
out
lods
fidivl
push
mov
dec
add
mov
mov
mov
loopne
in
xchg
orl
sbb
sbb
and
inc
dec
inc
enter
je
testl
pop
pop
pop
sub
cmp
cli
mov
fucom
cmp
mov
sahf
jbe
jle
ljmp
push
push
fwait
cmp
int
pop
je
jns
pop
in
adc
in
push
push
cmp
rol
mov
imul
xor
lret
xor
aas
mov
pop
and
cmp
push
dec
and
sbb
repnz
cmp
sub
mov
and
orl
xor
mov
fadd
pop
lods
cmp
in
cltd
jmp
xchg
dec
insb
fxtract
jmp
jg
mov
icebp
daa
int
int3
inc
insb
mov
into
xchg
andb
add
insl
or
jo
or
int3
mov
dec
std
clc
mov
popa
sti
scas
dec
cltd
jnp
mov
xor
inc
fndisi(8087
out
into
dec
jmp
fs
cltd
aad
sbb
pop
mov
vpor
push
das
jne
mov
mov
shlb
inc
scas
inc
sbb
inc
mov
mov
sti
mov
xor
pop
adc
and
sub
or
adc
lea
sub
or
lcall
test
cmp
xor
sarl
or
dec
addb
decb
pop
ss
inc
adc
and
aad
fistpl
push
mov
dec
pusha
hlt
adc
test
daa
pop
je
shrl
sub
sahf
ja
sahf
or
inc
push
jge
bound
les
ficoms
mov
test
xchg
hlt
mov
xchg
xor
mov
adc
leave
push
or
xchg
fbstp
lods
and
mov
xlat
cmp
mov
jbe
add
clc
daa
xlat
cmp
jns
push
lock
popf
notl
mov
push
dec
sbb
scas
dec
sub
jmp
sbb
or
aad
nop
popa
mov
stos
ja
dec
imul
sahf
adc
inc
cltd
popa
data16
and
cltd
ljmp
push
sub
rorb
cmp
ffree
jle
stos
mov
les
xlat
in
jns
cmpb
mov
dec
mov
sbb
dec
mov
mov
in
rclb
dec
js
pusha
testl
movsl
mov
sub
mov
in
xchg
aad
in
lahf
mov
rcr
push
in
shr
adc
iret
outsl
xchg
cwtl
push
rorb
loop
testb
jge
pushf
xchg
iret
cmpsb
mov
pop
jb,pt
lret
test
jno
call
xchg
notb
mov
imul
fstps
lea
ret
xor
aaa
scas
scas
mov
in
repnz
lahf
incl
stc
pushf
jbe
cs
jns
dec
arpl
cwtl
mov
div
or
lds
mov
and
sub
mov
or
lcall
mov
mov
gs
adc
sub
mov
inc
data16
dec
mov
stos
andb
pop
shll
push
sbb
xchg
mov
in
enter
jb
jo
sbb
push
pop
add
sarl
jmp
aam
clc
dec
push
dec
cmpb
sub
sbb
sbb
xorb
pop
dec
dec
xor
mov
outsl
mov
fdivl
cmc
mov
jns
and
xchg
push
imul
xchg
pop
xchg
ja
push
hlt
inc
xchg
aad
pop
mov
fildl
add
push
ljmp
in
lahf
jge
dec
outsb
push
adc
enter
inc
dec
xor
popa
int3
loop
xchg
sbb
int
shlb
mov
std
and
test
mov
stc
out
push
sbb
call
cmp
xlat
int3
sbb
pop
scas
jo,pn
dec
and
and
shrl
rcll
ret
xchg
jnp
fildl
inc
jne
xchg
inc
imul
in
jl
or
jnp
dec
rcrl
lret
push
xor
punpcklbw
xchg
mov
push
mov
pop
jp
scas
sub
or
sbb
add
jge
lods
popf
dec
and
sbb
mov
sub
xchg
jmp
adc
lock
push
pusha
imul
ljmp
add
orl
inc
pop
int3
popf
sub
and
lret
test
push
sub
lds
into
dec
mov
fnstenv
jnp
scas
idiv
mov
push
ss
and
enter
jnp
stos
mov
xchg
dec
mov
jo
pop
xchg
jnp
ljmp
pop
mov
lcall
aad
xor
cmc
sbb
xchg
push
inc
xor
es
or
out
xor
frstor
outsb
xor
in
pop
jno
sahf
pop
dec
in
add
std
add
incb
call
mov
ljmp
dec
lret
imul
xor
test
ja
lods
push
or
std
xchg
lock
fmul
mov
dec
mov
add
sahf
mov
je
rorb
leave
nop
and
jnp
out
jbe
cld
imul
and
ja
jb
in
xor
dec
push
push
push
scas
fwait
scas
and
jo
pusha
rol
inc
dec
imulb
xor
dec
xchg
lcall
cmp
adc
dec
bswap
mov
push
popf
sub
cld
mov
es
cmp
mov
or
outsb
jge
loop
adc
push
or
mov
or
push
adc
push
mov
jle
cmp
jns
addb
cmp
mov
mov
cmp
dec
loop
int3
adc
fcmovbe
add
inc
inc
fcmovne
mov
adc
mov
test
outsl
rcr
dec
inc
js
sub
test
es
push
dec
popf
push
lea
aad
mov
mov
movsb
mov
cmp
xor
js
xchg
jge
pop
xor
test
cltd
clc
adc
mov
pop
add
cmp
les
jne
jmp
mov
cmpsl
dec
shrl
pop
xchg
mov
fldt
jae
in
push
mov
or
mov
push
xlat
ds
movsb
lock
dec
push
and
ret
jle
sbb
enter
and
inc
scas
add
inc
stos
and
hlt
jns
push
push
jle
inc
inc
adc
and
jo
mov
adc
pop
adc
mov
jmp
fcmovbe
sub
test
xor
aam
cmp
cmp
xor
movsb
out
add
in
add
faddl
enter
inc
jno
jns
pop
push
push
loop
arpl
mov
pop
and
add
sub
mov
rorl
enter
fldt
xchg
pop
fcomps
pop
xchg
adc
rorb
dec
sbb
inc
fucomp
mov
pop
sbb
jnp
addb
shll
sti
jbe
or
cmp
push
outsb
sub
xchg
dec
xor
out
popa
jae
movsl
xor
push
or
fcmovnb
sbb
push
mov
outsl
and
cwtl
lods
mov
push
and
movsb
stos
or
inc
xchg
arpl
jmp
sub
repnz
dec
jecxz
scas
add
out
or
repnz
mov
imul
loopne
ss
add
mov
cmpsb
add
mov
std
lods
div
dec
shll
rorb
push
movb
inc
mov
xchg
jmp
sub
imulb
ja
or
push
mov
data16
cli
test
mov
mov
nop
lahf
pop
cld
xor
les
test
out
outsb
fdivs
push
out
cmp
out
and
and
fadds
aad
mov
fs
rorl
pop
imul
mov
int3
pop
mov
mov
sub
subl
push
call
loop
mov
or
pop
outsb
or
aas
xchg
mov
cmp
in
das
push
ret
loop
popa
mov
fidivs
ss
bound
call
imul
ficoms
pusha
pop
fsubrs
pop
cmpsb
fdivrp
call
jnp
xor
xchg
dec
jae
sub
int3
xor
jmp
or
mov
loopne
nop
icebp
xchg
xor
xchg
or
sbb
push
dec
cli
aas
sti
in
mov
pop
push
rolb
cmp
xor
ljmp
fisubrl
add
es
outsb
adc
cmp
lfs
adc
and
rcll
std
xlat
outsl
adc
imul
rolb
in
ret
imul
mov
sub
sub
add
pop
cmp
in
inc
pop
xor
pop
push
xor
push
inc
scas
mov
fiadds
xor
inc
packsswb
xor
jle
fs
add
push
push
sub
subl
mov
insb
iret
add
outsb
xor
scas
shlb
sbb
imul
add
out
mov
ds
mov
test
push
sub
mov
pop
int
xlat
pop
insl
jbe
imul
lds
fnstenv
lea
outsl
lahf
enter
add
mov
mov
or
jge
dec
out
divl
cmp
push
test
test
jmp
push
ret
out
xor
jl
mov
inc
jp
data16
rcrl
pop
rcl
outsb
adc
cli
lock
cmc
rcll
mov
test
xor
fbld
std
cmp
xchg
addb
xchg
sbbb
mov
repnz
push
cmp
sti
divl
filds
hlt
idivb
scas
push
mov
xor
mov
adc
jno
push
adc
pushf
cld
xchg
mov
and
mov
adc
sub
push
pop
cli
or
xor
add
ret
push
inc
stos
mov
inc
sbbl
loop
mov
lret
mov
and
pop
mov
jg
sahf
dec
or
repnz
xlat
pusha
lcall
push
lret
mov
push
inc
add
out
push
inc
lret
cmpsl
pop
jns
lods
cmc
popa
loope
in
mov
pusha
sbbb
mov
jno
pop
sub
popa
enter
cmpsl
mov
test
pushl
push
out
jp
cmp
mov
push
nop
mov
pop
xchg
loope
sarb
sbb
stos
jo
pop
and
sti
fadds
xlat
imul
mov
push
add
in
std
sarl
insb
xor
dec
idivb
pop
out
mov
xchg
adc
es
pop
xchg
popf
fidivl
lods
cmp
sub
cmp
divl
loope
es
adc
mov
rcl
shrb
push
sarl
scas
push
mov
push
xchg
inc
loope
adc
je
cmpb
sub
lea
mov
cs
mov
adc
pop
push
mov
stc
sub
jns
rcrl
cmpsb
mov
or
xor
mov
sti
add
icebp
mov
jo
jo
loop
ret
pop
or
jae
pop
sbb
sub
xlat
outsl
iret
test
push
or
sbb
lret
or
cmp
pop
rorl
jp
gs
jecxz
xchg
fistps
inc
ficoml
ret
popf
nop
add
aaa
cli
push
fbstp
sbb
add
jmp
shl
orl
mov
inc
mov
out
inc
fadd
rcl
jnp
mov
negb
outsb
pop
sub
or
movsb
sbb
cltd
jae
repnz
or
loopne
cs
aad
ret
loope
cld
fcmove
adc
jle
je
insb
push
aad
pop
cwtl
shrl
das
or
popf
subl
adc
xchg
int
add
jnp
fnstsw
dec
lcall
mov
and
jbe
dec
into
rolb
imull
xor
aad
rclb
xchg
arpl
sub
mov
xor
ja
pop
movntq
and
into
lea
icebp
call
fdivrl
insl
popf
push
movsl
fwait
adc
lret
cltd
int3
test
sti
fwait
xchg
nop
add
data16
push
nop
jp
adc
lds
loopne
sbbl
mov
gs
repz
jp
inc
ljmp
sbbl
pop
mov
dec
xor
jg
xchg
mov
jmp
add
imul
cmp
jae
pop
lock
pop
ret
adc
pop
fwait
sub
add
or
leave
lret
fadd
mov
loope
stos
xor
xor
sbb
and
movsl
and
ret
clc
jbe
int3
cmpsb
insb
pushf
ja
fsts
scas
mov
cld
stos
test
or
addr16
xchg
jae
out
add
mov
jg
mov
ja
pushf
dec
xor
loopne
sub
movsl
xor
mov
jecxz
xor
xchg
push
push
xchg
dec
ret
dec
mov
sub
aam
dec
scas
and
dec
and
cmc
leave
push
movsl
popa
ret
inc
push
xchg
jns
loop
mov
sarl
lods
les
adc
or
hlt
pop
inc
fwait
imul
fwait
addl
movb
xchg
aaa
adc
pop
xor
nop
test
outsl
call
ret
daa
cmc
inc
sub
adc
cmp
aad
subb
negb
inc
cwtl
sub
jle
sarb
add
cmc
sub
jle
or
je
faddl
mov
add
add
call
jp
imul
push
std
lock
je
pop
pop
repnz
adc
bound
lods
fwait
lods
push
sub
jp
aas
push
ret
lret
stc
test
lret
in
push
imul
push
inc
xchg
je
sub
sub
cmp
mov
and
in
and
mov
xrelease
fisubrl
fsts
out
out
insb
and
jne
add
outsb
pushf
mov
jbe
shll
enter
jmp
pop
add
lret
imul
pusha
or
call
jo
inc
mov
add
sub
xchg
sar
int
sub
call
dec
jg
jmp
ret
repz
jge
mov
leave
dec
mov
dec
pop
loopne
push
push
push
and
es
movsb
stos
popa
loopne
arpl
pushl
fldl2e
push
shlb
and
addb
ljmp
jne
xchg
cmp
dec
in
push
outsl
dec
out
and
and
test
pop
mov
xor
out
jo
cmp
and
add
imul
push
scas
inc
negl
xchg
push
out
adc
or
push
xor
data16
mov
mov
cwtl
aaa
addl
push
push
or
data16
mov
dec
sub
or
stos
xchg
shrl
xchg
push
imull
adc
cli
cmpsb
ljmp
sub
cmpsl
in
lods
and
lock
push
adc
dec
test
jmp
iret
push
data16
aam
sub
push
data16
dec
push
mov
jns
sub
cwtl
push
push
fadds
insb
gs
adc
lahf
xor
test
les
cmpsl
adc
sub
cs
loop,pn
sarl
dec
mov
push
lods
movsl
notb
xchg
pushf
addb
fs
sahf
xchg
add
inc
mov
jne
cmp
cld
addl
data16
lods
leave
aas
jp
mov
pop
lods
pop
lret
xchg
push
movb
mov
xlat
popf
lea
cmp
js
into
inc
mov
jge
jl
mov
leave
cmp
and
pop
mov
pop
push
and
mov
sbb
jle
mov
in
jl
in
mov
fucomip
mov
and
adc
mov
pop
gs
leave
dec
pop
inc
pop
mov
mov
stos
imul
jmp
out
adc
imul
push
or
lahf
lret
lahf
int3
rclb
out
pop
inc
push
inc
data16
sbb
pop
mov
mov
aas
and
rep
add
in
fstps
sub
or
push
mov
les
xorb
push
aaa
jle
push
push
or
jo
insl
mov
ret
leave
cmp
aam
jno
jg
call
cld
xlat
fs
pop
cwtl
cmpsb
dec
enter
test
mov
jo
or
scas
mov
rclb
or
sub
gs
cmc
dec
pop
out
call
adc
pop
int
adcl
scas
mov
sbb
lods
clc
mov
push
pop
sahf
and
sub
out
push
dec
ds
jne
dec
push
cwtl
or
jg
jl
sbb
rclb
push
dec
sub
xchg
test
ds
or
inc
cld
test
and
shl
mov
loopne
pushf
les
jbe
std
rolb
push
cmpsl
loope
jge
xchg
push
dec
jge
test
mov
jo
out
rorw
dec
add
xchg
dec
jge
or
insl
sbb
sti
aam
xor
mov
mov
dec
test
popf
lcall
jns
sahf
mov
mov
call
lcall
shll
leave
stc
sahf
and
jmp
shll
push
iret
jo
xlat
inc
sub
mov
and
jp
ret
fbld
daa
or
xchg
test
and
aaa
sahf
or
push
test
ljmp
in
cmp
cmp
loope
or
es
and
dec
mov
push
fwait
and
daa
out
dec
jb
movsl
repz
scas
push
xor
out
mov
lds
js
xor
pusha
sbb
shrl
cmp
js
loope
or
mov
add
scas
and
lds
xor
jbe
das
sbb
ds
or
popf
rol
insl
dec
cmp
in
jb
icebp
in
daa
push
out
mov
cltd
xor
in
dec
mov
jmp
add
mov
sub
test
push
fwait
mov
ret
pop
xchg
xchg
dec
xlat
jae
jbe
push
mov
sub
pop
outsl
dec
pop
mov
pop
pop
inc
rcr
arpl
jle
inc
jb
in
dec
popa
and
push
pushf
sti
js
mov
xchg
gs
xorl
outsb
inc
dec
adc
add
adc
addb
loop
mov
scas
lds
mov
pusha
icebp
xor
ds
shrb
jecxz
int3
push
repz
inc
jge
js
jecxz
pop
mov
xchg
aad
sub
ds
mov
xchg
sub
fdivrp
mov
iret
loop
dec
shrl
stc
sarb
pop
xchg
xor
ss
loope
ljmp
mov
ss
ret
fisubl
xchg
lahf
cmp
cld
cmp
add
mov
popa
or
jge
inc
into
cmpsl
int
jge
aad
loopne
xor
jnp
sarb
dec
mov
outsl
pop
jmp
scas
jae
lods
bound
add
stos
outsb
mov
or
mov
inc
add
pop
add
mov
popf
iret
sbb
dec
push
dec
fidivrs
inc
pop
mov
sub
and
std
sbb
lret
mov
xorb
mov
lret
jmp
push
jg
cli
arpl
adc
les
xchg
jg
shrl
movsb
xchg
lret
cmp
outsl
pop
scas
fwait
aam
ffreep
call
sub
aad
rcl
es
xchg
pop
inc
jmp
shll
fidivrs
mov
imul
mov
iret
enter
sub
mov
imul
sub
into
stos
clc
jecxz
dec
aas
add
adc
jne
or
pop
fsts
pop
xchg
dec
push
jo
loopne
inc
jl
addb
icebp
or
movsb
cmpsl
push
hlt
inc
cld
test
pop
xchg
lock
lds
jecxz
lret
int3
aaa
cmp
jecxz
lock
dec
ja
dec
out
lcall
sub
loopne
pop
test
mov
movsl
mov
loop
pop
je
adc
jo
aaa
lods
loope
sub
lock
cmp
repnz
dec
fildll
lods
js
inc
cmc
test
push
ret
fisubs
ror
repnz
jl
mov
clc
fidivl
mov
ss
sbb
gs
pop
cmp
popa
xor
subb
fmuls
cmp
sbb
out
cmp
lcall
xchg
mov
pusha
sub
xchg
shrb
fildl
mov
scas
call
jno
jns
mov
scas
test
repnz
mov
or
xchg
adc
mov
outsl
aas
cmp
sahf
pop
cmp
inc
inc
pop
sub
xor
aas
rcrb
enter
dec
rorl
bound
sub
pusha
push
scas
fcoml
push
xor
lcall
movlps
jecxz
sub
cld
std
into
xchg
std
xor
pop
jno
sti
and
sub
cli
pop
jns
push
enter
int3
and
sub
pop
sarb
fcmove
js
fldl
jmp
fcoms
sbb
pop
or
out
in
and
sti
mov
jnp
int
ds
inc
ffreep
inc
das
xor
mov
xchg
clc
dec
xchg
fld
shlb
aam
push
mov
cmp
aad
cltd
mov
rclb
add
sbb
add
cld
and
mov
cmpsl
das
cmp
testb
insl
aam
pushf
pop
out
jne
push
xchg
mov
into
adc
fwait
mov
in
stos
sbb
jno
gs
cmp
jb
add
mov
stos
mov
push
add
hlt
shlb
iret
push
cmp
push
call
inc
and
inc
sahf
pop
mov
loop
outsl
repnz
enter
ret
jecxz
in
lock
xor
and
into
mov
insb
push
mov
push
xchg
cli
aam
push
push
and
jo
mov
jl
repz
inc
cmpl
scas
test
out
adc
lcall
iret
ljmp
cwtl
mov
sarl
add
dec
jno
test
xchg
lods
out
or
xchg
cmp
jns
xlat
sub
sub
nop
jno
rcr
inc
sbb
std
xlat
stc
fs
rcl
mov
js
jmp
lcall
int
adc
les
dec
sarl
aaa
orl
mov
cmpl
xor
call
mov
ds
cmp
insl
loopne
ja
jp
clc
jmp
std
sbb
nop
cltd
lret
jae
ja
sbb
mov
xchg
popf
jae
jbe
lock
add
loope
jp
sbb
mov
test
lock
mov
jge
nop
xchg
mov
aad
rcrl
jge
daa
jns
sbb
repnz
rcll
mov
dec
push
frstor
repnz
jnp
and
test
gs
adc
mov
jp
sub
ljmp
mov
cmp
adc
stos
mov
fimuls
das
testb
rorb
sbb
or
add
mov
test
ja
dec
into
mov
pop
pop
mov
sub
jmp
clc
inc
roll
mov
cltd
jnp
xlat
push
call
xchg
ljmp
inc
movsl
xchg
or
ret
jno
add
aad
dec
or
mov
sbb
mov
jg
int3
xor
into
repz
mov
cltd
out
je
test
mov
cmpsb
mov
notl
jg
dec
mov
lcall
movsl
enter
insl
jmp
inc
and
andl
stos
insl
mov
mov
sbb
testl
xchg
je
imul
into
cmp
daa
aad
addr16
repz
clc
das
fadds
sti
pop
jo
shrl
inc
or
mov
rol
mov
ja
insb
lods
xor
lret
lock
xchg
sbb
lods
jl
pop
add
cmpl
dec
lret
jle
aaa
dec
mov
xchg
add
push
adc
mov
pop
jl
cmp
mov
inc
mov
lock
sub
nop
mov
frstor
out
cltd
mov
push
push
inc
pop
nop
pop
fcomi
idivl
sbb
jp
xor
lods
mov
out
sahf
mov
mov
in
hlt
jg
xlat
sbb
lret
out
test
sbb
fnsave
sti
mov
inc
push
fadd
mov
cmpsl
mov
in
arpl
pop
fwait
jo
fidivrl
idivb
icebp
clc
pop
pop
inc
jecxz
xor
mov
mov
inc
cmp
cmp
jbe
cmp
call
in
mov
push
popa
cld
daa
mov
cmp
rol
repnz
pop
dec
fimuls
out
decl
inc
daa
push
incb
dec
subl
jae
dec
mov
push
push
out
mov
cmp
fldt
arpl
arpl
pusha
mov
mov
mov
or
pop
sbb
xchg
xor
cmpsl
inc
xchg
sub
push
mov
dec
das
mov
sbb
push
je
out
or
lret
xchg
pop
pop
pop
push
pop
std
dec
lret
push
cmc
clc
xchg
das
add
dec
iret
add
data16
sub
cmc
stos
aaa
shl
lds
adc
stos
mov
outsb
sbb
scas
mov
dec
xchg
icebp
lods
aad
fdivs
cwtl
orb
addl
and
inc
int
mov
xchg
cmp
adc
and
sbbl
adc
mov
ja
xchg
das
sbb
push
arpl
aam
dec
into
out
pop
jp
cmp
fsubp
dec
xchg
xlat
xchg
clc
push
mov
mov
lock
ljmp
dec
xor
lahf
sbb
pop
bound
jo
mov
icebp
push
or
inc
iret
mov
sub
std
push
jp
xor
jne
aam
fiadds
ficomps
scas
pop
inc
sub
adc
sahf
adc
vpmovmskb
mov
jae
leave
cmp
aaa
lret
mov
out
adcb
out
push
cs
push
es
mov
test
iret
nop
daa
mov
xchg
xor
add
jnp
lret
push
repnz
in
js
int
cmp
and
aad
jbe
dec
xor
shrb
inc
out
test
movsl
or
cmp
rcrl
pop
jg
pusha
sub
jecxz
ret
sbb
pop
push
dec
push
cmpsl
inc
cs
lcall
sub
sub
adc
shll
lret
jl
mov
pop
ss
or
add
mov
dec
sarb
shl
outsl
jae
movsl
pusha
push
imul
pop
es
sub
pop
mov
sbb
fistps
sub
jg
in
mov
out
inc
mov
rcl
mov
loop
inc
xchg
cmpsl
jb
aaa
orb
into
and
cmpsl
jle
out
fnstenv
inc
loopne
push
push
sti
inc
dec
push
mov
mov
in
jbe
gs
xchg
loop
adc
aad
imull
and
imul
stc
fadds
int
jmp
pop
push
lcall
pop
scas
ljmp
dec
jl
notl
mov
int
setg
push
inc
or
rcrb
das
cmp
sbb
jmp
mov
xchg
lea
fisubl
idiv
xlat
cmpsb
xchg
ds
and
shlb
push
mov
ja
sub
into
push
jmp
divl
outsl
in
push
xchg
pushf
icebp
sbb
and
mov
jns
outsl
cld
adc
and
mov
sbb
jmp
in
mov
sub
dec
push
cltd
movsb
pop
mov
bnd
dec
sbb
xchg
jecxz
cld
mov
or
xor
test
jle
mov
mov
lcall
adc
xchg
sbb
push
cmp
loop
pop
movsb
xchg
mov
xor
xor
fisttpll
mov
mov
cmp
inc
mov
sbb
inc
flds
jle
xchg
fcompl
adc
popa
cmp
mov
addr16
repnz
xlat
rcrl
mov
pop
and
stos
cmp
mov
and
fs
inc
faddp
addr16
push
insl
xchg
lret
cwtl
inc
add
popa
add
lods
jbe
fldl
push
stc
push
mov
sbb
pushf
ljmp
ret
cld
dec
roll
mov
mov
pop
xor
adc
out
sub
xchg
call
iret
mov
divb
loopne
in
loope
pop
push
inc
push
clc
pop
mov
add
push
mov
and
xchg
fisubrl
add
pop
or
sbb
jne
movsb
fwait
jne
or
xlat
inc
ficoms
out
push
sub
jo
xlat
jnp
fisubs
add
pop
in
cmp
loopne
sbb
jno
dec
mov
adc
xor
mov
push
add
fs
add
jecxz
lret
bound
je
aas
cwtl
outsl
popf
addl
rorb
in
shr
jbe
jg
out
incl
xchg
mov
push
lcall
cmp
jl
cwtl
pop
jnp
clc
pop
jge
loope
mov
xor
mov
out
add
fs
xchg
jg
pushf
cmp
daa
xor
xlat
shll
push
sub
fdivs
in
mov
out
ret
mov
inc
xor
xchg
fs
fs
push
xorl
andb
jb
push
fdivs
inc
fisubrl
rcll
push
xchg
das
or
push
dec
std
mov
pusha
call
rcrl
repnz
adc
xchg
je
mov
mov
sub
or
lock
mov
lcall
mov
xor
dec
sub
orb
pop
adc
add
inc
jl
dec
pop
sub
pop
inc
dec
aad
sahf
or
xor
lods
adc
and
lret
insl
mov
cmp
in
loopne
xchg
cltd
movl
adc
lcall
add
test
movsb
and
sbb
cmp
xchg
pop
out
jl
fs
mov
outsl
mov
int3
mov
subl
push
mov
ret
lods
loope
fcmovnu
push
leave
sub
jo
mov
jp
ss
pop
cmpsb
mov
or
lret
inc
xchg
sub
adc
jae
leave
sbb
stos
mov
cmpsb
add
inc
sbb
daa
insb
sub
inc
mov
aad
ljmp
dec
push
pushf
xchg
xor
push
mov
or
divl
inc
cmp
imul
pusha
sub
ja
insl
movsb
test
jecxz
jge
decl
test
xor
imul
xchg
jp
jmp
movsb
jg
and
adc
enter
mov
sbb
aad
cmp
xor
add
dec
insl
xchg
jb
insl
pop
dec
int
xchg
out
cmpsl
xchg
inc
xlat
xchg
and
pop
loop
pop
mov
popf
sbb
movsb
insb
filds
stc
xor
bound
jle
cli
sub
fcmovnbe
jae
jae
mov
sub
xor
in
mov
outsb
push
mov
lret
jb
popl
sbb
lahf
mov
or
push
mov
sub
jecxz
lods
mov
xchg
dec
lods
jl
cld
fadds
xchg
sbb
pushf
in
lret
lahf
insb
pop
fdivrl
xchg
gs
je
imul
out
unpckhps
mov
insl
mov
cmp
incb
mov
mov
sbb
fimull
je
push
loop
scas
fcmovb
xor
xor
add
lods
out
call
and
adc
inc
lahf
aad
mov
repnz
sub
add
lds
sub
jmp
jmp
dec
inc
xor
ret
fsub
fndisi(8087
jno
cmp
add
fwait
test
cmp
repz
test
pop
mov
and
lds
stos
dec
adc
repz
sub
dec
shlb
push
popf
les
inc
pop
inc
outsl
pusha
xor
adc
lcall
pop
xchg
adcb
cmp
or
add
pop
std
push
gs
add
pusha
push
addr16
inc
mov
shl
pop
icebp
mov
fs
out
lfs
mov
sub
iret
in
mov
add
sub
mov
jg
or
add
mov
inc
out
push
push
cwtl
add
mov
jle
pop
cmc
cwtl
mov
push
xchg
jne
sub
add
aam
int
jo
cmp
pop
sub
jge
xchg
fistpl
cmp
cs
xor
sbb
repz
das
pop
mov
pop
icebp
fdivl
dec
adc
mov
dec
mov
in
jns
pop
cmp
addr16
push
pop
add
movsl
fldcw
aad
les
sub
pop
arpl
fs
adc
jp
out
cld
mov
sbb
mov
jge
enter
xchg
fwait
add
lds
leave
mov
jecxz
or
xchg
jae
mov
lock
stos
es
sub
dec
std
jmp
ret
jp
sahf
jb
xor
xor
inc
xorl
xlat
pop
outsb
cmp
cmp
fstl
xchg
adc
cmpsb
outsl
dec
jecxz
mov
dec
popa
in
pusha
out
bound
add
bound
dec
mov
mov
test
pop
popf
stos
jl
ja
roll
imul
repz
mov
mov
insl
push
push
in
adc
outsb
mov
ja
push
test
movsl
shll
or
in
sub
push
pop
or
mov
mov
out
hlt
and
xchg
arpl
int3
sbb
jns
pusha
hlt
or
into
xchg
pop
fsubrl
movsb
int
and
xlat
subl
ret
pop
scas
hlt
out
in
jae
lods
xchg
xchg
lock
lea
pop
jae
adcl
and
mov
add
cmp
mov
lock
ljmp
sbb
mov
imul
test
sub
pushf
and
ja
xchg
cmpsb
xor
jbe
mov
pop
aaa
pop
or
orb
repz
sbb
jg
adc
mov
xchg
mov
push
push
rcll
dec
mov
inc
lods
xor
cwtl
std
add
cmpsb
cmp
adcb
cwtl
in
clc
and
ret
aad
mov
add
mov
jb
out
mov
icebp
jl
xor
adc
inc
je
push
repnz
fisttps
xchg
push
stos
imul
jg
dec
or
mov
imul
std
insb
jmp
idivb
xchg
jmp
cltd
mov
nop
xor
lahf
out
adc
jge
outsl
sbb
popf
mov
arpl
adc
xchg
inc
pusha
insb
pusha
daa
mov
test
mov
scas
hlt
jle
aad
lods
jo
jo
sub
pop
dec
ficomps
inc
and
cmp
push
push
adc
jo
lds
dec
pushf
imul
fidivs
pop
cmp
jnp
in
cli
sbb
sub
adc
cwtl
ljmp
data16
mov
mov
jecxz
psubsb
pop
pop
mov
xor
mov
cs
es
cwtl
pop
imul
popa
nop
inc
pop
ja
mov
in
subb
fiaddl
arpl
sub
rorl
lods
subb
fdivl
and
xorl
dec
daa
xor
pop
stos
daa
push
jmp
jne
pop
cmpsl
clc
xor
ret
xchg
jo
lret
fwait
sbb
decb
jns
mov
mov
xchg
in
and
fidivl
sahf
sub
xor
jle
pop
jnp
push
repz
lods
stc
push
insl
add
mov
pusha
out
loop
cwtl
mov
subb
sarb
mov
inc
out
mov
aam
and
push
mov
rcll
jp
jae
rorb
dec
pop
dec
push
fstpl
mov
mov
pop
jmp
lret
push
mov
mov
xor
ljmp
pushl
jmp
dec
icebp
cltd
xor
adc
mov
mov
mov
lret
in
jl
imul
jnp
lods
test
cld
testb
pop
je
mov
pop
cmp
enter
push
lret
fs
jg,pn
sbb
jno
push
bound
and
out
jg
loop
xchg
insl
addr16
adc
jmp
scas
push
andl
sbb
aas
sar
add
mov
push
arpl
bound
sub
xor
sub
jp
dec
fmul
jne
mov
outsb
loope
ret
cli
sbb
jp
mov
and
and
xchg
in
mov
dec
cltd
and
test
adc
negl
loopne
lods
mov
inc
mov
dec
gs
decl
lcall
mov
push
incb
addr16
lds
pop
ljmp
sub
ss
jmp
push
mov
dec
fwait
out
push
cmpsb
pop
xor
rorl
adc
push
daa
ljmp
mov
jg
sarl
jecxz
test
sub
mov
lcall
add
sar
outsl
loope
dec
push
adc
sti
call
or
js
push
or
inc
mov
pushf
mov
inc
fsub
in
push
push
gs
lea
xchg
pop
aaa
mov
test
cmpsl
mulb
sbb
mov
and
inc
dec
andl
aam
das
add
ss
cmp
pop
jb
xchg
cmp
addr16
jecxz
add
pop
push
pusha
sbb
pop
mov
pop
orb
cwtl
cld
push
adc
and
pop
and
add
and
xchg
pop
loop
jecxz
inc
jl
inc
push
xchg
int
xchg
fucomp
adc
fcmovne
inc
std
pop
pop
orb
cmp
dec
xor
subl
pop
and
dec
fisttpll
imul
pop
or
mov
mov
arpl
rsqrtps
mov
fistps
cmc
sbb
push
mov
dec
xchg
rcl
imul
sbb
sbb
push
insl
pop
jmp
cld
mov
push
cmp
int3
nop
sbb
popf
insl
mov
pop
mov
daa
je
add
repz
xchg
xchg
mov
mov
pop
clc
sub
xchg
loopne
xchg
in
stos
adc
pop
enter
jl
mov
jbe
push
fimull
loope
loope
js
mov
jno
push
mov
xchg
or
pusha
in
xchg
repnz
imul
in
insl
fwait
jns
addr16
aam
adc
add
pop
rcrb
adc
sub
add
add
fsub
push
into
lods
sbb
lcall
jno
push
jge
pop
fistps
push
add
out
mov
mov
lea
pop
lods
imul
rcll
xchg
adc
nop
std
sahf
cmp
repz
shll
iret
xor
in
in
mov
inc
jns
loop
dec
and
xchg
lret
clc
cmp
add
jb
es
inc
enter
lods
xorb
add
scas
pop
faddl
movsl
int3
movsl
rorl
aaa
daa
mov
js
cmp
aas
fwait
aad
int3
cmp
into
and
xorl
daa
nop
xchg
inc
fwait
lods
aad
xchg
imul
aas
dec
popa
ljmp
lock
xor
ljmp
mov
mov
sahf
pop
stc
int3
fcomps
jecxz
outsl
cmc
mov
test
cmp
outsl
pop
into
cmpsl
or
nop
xchg
jae
out
adc
inc
sbb
lret
out
rclb
cmp
cmpsl
orb
stos
dec
sbb
sti
lret
adc
outsl
in
pop
cmc
xchg
popf
xlat
cmp
mov
mov
inc
addr16
push
mov
adc
ficoml
shr
pop
int
movsb
and
add
lea
fldenv
cmp
lret
aas
and
mov
repnz
aam
mov
lcall
daa
aaa
push
adc
dec
ja
mov
fwait
pop
add
adc
add
pop
into
mov
sub
ret
daa
pop
and
pop
or
pop
xchg
dec
lea
adc
adc
xor
xor
mov
lret
xor
push
add
scas
ret
aam
test
std
push
mov
mov
jge
inc
in
mov
and
je
out
dec
sub
inc
cmpsb
xchg
stc
mov
clc
scas
or
cltd
mov
push
clc
pop
xor
aas
in
push
ret
test
inc
ud2
push
mov
xor
cwtl
push
pop
loopne
je
popa
in
dec
movsb
xor
xor
lods
adcl
xor
cld
mov
sub
xchg
jo
jo
mov
push
test
mov
icebp
pop
outsb
pcmpgtd
fcomps
xchg
imul
push
jl
je
sub
shl
add
lods
pop
subb
outsl
imul
and
xchg
pusha
adc
mov
scas
movsl
cmp
adc
dec
and
add
push
xchg
insl
push
popa
xchg
lea
dec
xchg
sub
push
inc
stc
push
lahf
scas
cli
sbb
mov
mov
mov
cmp
dec
out
xchg
add
sbb
cli
sbb
cmc
dec
adc
insb
fdivs
test
jnp
cwtl
lcall
stc
scas
test
push
push
inc
fstl
and
rep
xchg
rorb
iret
jg
mov
icebp
mov
fstpt
stos
jbe
out
filds
outsb
adc
mov
inc
leave
jns
ret
stos
aad
push
sahf
into
insb
daa
sub
ficoml
in
stos
ror
cmp
mov
adc
ret
mov
sub
insl
xchg
call
rcll
ror
lock
aaa
mov
dec
stc
sti
push
jns
fnsave
inc
popf
test
ret
ret
jo
adc
out
inc
insl
mov
and
addr16
mov
mov
mov
cmp
add
mov
mov
jno
sbb
nop
orb
outsb
and
adc
fnstcw
fisttps
jne
in
mov
rcr
adc
cmp
insl
movsl
repz
push
mov
inc
int3
iret
pop
xchg
and
and
and
test
loop
das
jle
sub
add
inc
inc
cmc
inc
cmpsb
shll
js,pn
cmpsl
jns
sbb
std
mov
sar
ret
or
mov
push
pop
xlat
push
shrb
lds
and
outsl
ss
xchg
dec
add
or
mov
popa
or
or
mov
xchg
out
dec
pop
mov
negl
jg
cmc
jl
mov
les
lgs
sub
sarb
or
loopne
dec
push
fnstenv
inc
scas
inc
fs
lods
cltd
ret
and
mov
inc
pop
mov
es
scas
out
dec
mov
sbb
iret
inc
sub
scas
stos
mov
aam
pushf
mov
popf
fisubrl
and
je
xchg
xor
add
xlat
addr16
nop
xor
lret
dec
push
sarl
sub
int
pop
leave
stos
adc
ljmp
jle
jnp
jo
mov
lahf
rolb
fdivl
nop
cmpsb
push
cmp
out
and
into
dec
sub
aaa
add
lahf
mov
or
mov
push
cli
stos
out
adc
in
rcl
aas
xlat
clc
fwait
mov
push
add
mov
cltd
into
fiadds
add
aas
jecxz
push
push
inc
inc
jae
in
ret
mov
pop
in
test
es
xchg
inc
sub
fstp
nopl
mov
sub
mov
out
shlb
and
adc
mov
mov
xlat
jmp
xchg
cli
dec
push
loope
dec
ljmp
mov
lods
push
and
rolb
dec
fcomps
xor
in
sbbb
mov
fcomi
inc
and
lods
out
sbb
adc
xchg
xchg
and
xchg
test
in
rcrb
daa
xorl
test
xchg
fs
cmp
sbb
inc
xchg
dec
rcll
or
dec
xor
lcall
mov
pop
jmp
add
dec
in
add
or
pop
outsl
mov
cli
xchg
or
mov
push
stos
call
data16
adc
out
or
outsb
fdiv
mov
xor
sahf
dec
int
push
push
nop
cmc
mov
je
adc
cs
repz
dec
mov
cmp
popf
mov
imul
sbb
sub
icebp
sub
fcmove
shrb
into
outsb
add
sbb
je
inc
in
or
scas
jne
lret
and
and
arpl
and
into
pop
fnstsw
fidivrl
jno
iret
xor
mov
ss
out
pop
pop
sbb
jmp
mov
inc
cmp
and
xor
mov
or
rolb
cs
xor
fwait
shl
adc
rclb
int
cmp
inc
fisubl
addr16
fldt
pop
data16
or
mov
jns
mov
faddl
cwtl
mov
push
mov
loopne
fiaddl
pop
into
jbe
rcll
sub
cmpsl
sbb
adc
lods
insb
pop
mov
icebp
in
add
orb
push
mov
or
ret
inc
call
lock
cltd
cmp
std
mov
jecxz
sbb
lahf
out
test
push
sbb
or
adc
loop
sub
inc
xchg
cwtl
cltd
mov
cmpsl
jmp
lcall
inc
imul
stc
repz
aas
lock
enter
inc
adc
sbb
cmp
in
mov
movsl
cmp
ficomps
aad
pop
outsl
jno
into
int
push
inc
jecxz
sbb
and
mov
ret
dec
xor
jg
rclb
ja
loope
sub
loopne
xor
push
fisttpl
sub
fs
push
jb
jmp
aas
push
rcrl
mov
jmp
mov
or
test
lds
pop
loopne
pop
sbbl
mov
push
cmp
adc
in
xor
int
push
xchg
dec
test
xchg
cmp
test
arpl
push
cmpsl
add
divb
add
xlat
movsb
popa
roll
jg
push
adc
cmp
add
mov
rcll
stos
mov
mov
ret
out
mov
mov
jge
push
and
or
xor
mov
and
push
sub
push
mov
in
mov
lods
in
scas
add
je
out
fstpt
xchg
addr16
xchg
mov
sub
cmp
xor
rcrl
repz
sub
andl
mov
lock
add
add
dec
inc
in
cmp
and
hlt
jl
pop
popf
add
test
enter
sbb
push
xchg
jle
sbb
iret
add
adc
jb
ds
jnp
dec
mov
dec
ljmp
fnstsw
ret
lret
mov
hlt
out
fmuls
push
cmp
pop
dec
xor
lcall
call
dec
cld
call
aas
and
mov
stc
xchg
jo
call
mov
xor
mov
lahf
cs
or
jecxz
cmpsl
adc
push
pop
je
lods
inc
inc
out
lcall
mov
pushl
dec
mov
jo
lcall
fisubrl
loope
sahf
sbb
mov
and
cmpsb
mov
jg
jmp
mov
dec
sahf
repz
out
and
cmp
adc
push
xor
jnp
popf
dec
jg
pop
cmp
pop
imul
sub
jp
adc
mov
loope
and
imul
addr16
fwait
psubb
test
fwait
dec
cmp
jbe
in
fcmovb
push
add
fmul
lret
ds
in
sar
or
call
rcr
orb
mov
xchg
push
or
mov
cmp
ficoms
pop
mov
xchg
not
jne
add
add
fiaddl
imul
andb
add
pop
dec
call
inc
mov
sbb
mov
xchg
in
int3
cmc
cld
sbb
or
fcmovnu
pop
or
xchg
or
arpl
mov
or
pop
in
sub
and
or
lcall
add
daa
pop
vmovaps
cmp
sub
lods
out
cmp
or
in
sbb
iret
addr16
pop
sahf
mov
mov
fwait
mov
pop
data16
dec
push
sahf
jnp
push
pop
push
in
in
sub
sti
inc
jo
lret
addr16
arpl
gs
outsb
jecxz
xor
shll
jmp
rcll
push
fidivrl
mov
mov
movsl
outsl
leave
inc
pusha
out
outsb
push
int3
dec
adc
ljmp
jno
jl
push
outsl
sbb
ljmp
movsl
or
adc
aas
sbb
fstps
out
jns
sbb
out
jle
xor
fcmovnu
push
bound
add
addr16
outsb
inc
lock
ret
cli
and
xchg
sub
pop
pop
jmp
mov
psubw
xchg
pop
and
das
inc
stos
push
jne
les
ja
lret
and
outsl
cmp
mov
test
jge
imul
jae
imul
outsb
or
mov
xor
mov
cmp
outsb
xorl
cmp
scas
xchg
add
fldenv
or
lret
and
stos
icebp
sub
mov
imul
cwtl
mov
pop
or
call
cli
pop
cmp
sub
insb
outsl
out
loope
xor
inc
outsl
sbb
xchg
fbstp
rorb
fsubl
mov
push
mull
sti
fstl
pop
pop
jo
pop
testl
jmp
lods
pop
outsl
sbb
gs
pop
dec
stc
or
pop
stos
fbstp
mov
movsl
mov
add
mov
lahf
mov
lret
push
mov
push
mov
cld
ss
fnstenv
andb
sbb
out
les
inc
jnp
mov
int3
enter
enter
sub
push
hlt
js
xor
pop
dec
add
sub
sub
jge
ret
lock
xor
popf
stos
inc
jnp
ficoml
push
cmp
out
popa
in
push
jns
and
pop
push
mov
test
mov
or
jns
jno
and
std
shr
out
fidivl
xchg
and
cli
and
jle
jbe
add
stos
insl
sub
mov
in
adcb
fwait
xchg
stos
test
jns
adc
mov
pusha
fxch
add
push
and
mov
call
pusha
loope
mov
mov
jmp
xor
xchg
jp
jo
mov
cld
das
dec
and
cs
mov
push
sub
jecxz
sub
cs
cmpsb
pusha
movsl
roll
jne
movsl
add
mov
js
adc
imul
cmc
push
dec
push
cmc
ss
add
adc
cld
lea
sbbl
js
cmpsl
je
fsubl
pop
xchg
sti
stos
xchg
xor
jge
jns
and
es
sahf
int
fnstenv
add
loope
push
lcall
call
xchg
and
cmp
lods
or
add
push
and
repnz
enter
mov
rorb
das
dec
fsubrp
rclb
dec
sahf
bound
nop
stos
mov
lods
mov
jae
mov
ljmp
scas
pop
inc
mov
push
xor
dec
test
js
xor
jp
inc
add
push
or
cmp
loop
lahf
mov
and
cmp
ret
push
dec
and
fists
sti
movsl
or
lret
repz
mov
shr
mov
shll
sub
jp
inc
cmp
daa
fwait
inc
lods
addr16
test
mov
loop
out
sub
mov
jae
or
aam
test
sbb
fistl
mov
push
stos
mov
mov
xchg
pop
xor
sbbb
mov
adcl
mov
xor
fistpll
xchg
or
inc
inc
and
adc
leave
insl
dec
push
mov
lods
mov
adc
icebp
cmpsb
out
test
pop
orl
adc
cmc
add
dec
sub
add
pop
shufps
jo
sub
fidivs
gs
pop
lods
icebp
jo
add
mov
or
mov
jno
fwait
dec
bound
addr16
imul
push
mov
in
subb
jl
fildl
fcmove
fstpt
cmc
mov
push
out
cmp
jns
lods
pusha
jne
mov
mov
rcrl
sbb
jp
pusha
or
inc
and
ret
inc
xor
push
repnz
clc
bound
cmp
adc
xor
stos
jmp
das
inc
imul
out
test
push
sbbl
push
xchg
clc
adc
dec
push
sub
in
dec
jmp
pop
gs
mov
xor
test
push
and
out
loop
jge
into
les
int3
and
xchg
imul
inc
mov
sbb
icebp
test
dec
lea
into
add
lcall
xchg
push
fsubl
cmp
daa
insl
test
fdivs
mov
cltd
cmp
scas
adc
xchg
inc
imul
xor
mov
add
stc
dec
cmc
lds
mov
dec
cs
stc
insb
dec
rcrl
xor
aad
xchg
scas
push
insl
imul
sar
add
push
daa
lods
insl
mov
xor
dec
lods
ficomps
pop
ds
scas
rorb
sbb
lahf
dec
xchg
mov
movsbl
jbe
cmp
pusha
popa
adc
iret
jno
ret
stos
xor
xor
jbe
sub
scas
test
xor
dec
lcall
int3
add
scas
fstpt
fnstcw
out
mov
inc
and
mov
es
mov
mov
orl
fyl2x
lcall
gs
inc
mov
in
adc
sub
out
fwait
and
dec
mov
movb
pushf
mov
adc
mov
pop
gs
rclb
inc
stc
inc
ds
cmc
outsl
jnp
sarl
lock
inc
mov
cmp
dec
mov
icebp
jne
jne
mov
dec
push
popl
out
dec
in
xorb
fimull
iret
mov
cmp
sub
in
pop
mov
mov
dec
fmull
mov
into
push
mov
shlb
push
add
add
repz
outsl
das
adc
dec
out
insb
add
cmpsb
ds
cli
test
and
stos
test
xchg
aam
lods
add
je
push
notb
test
dec
mov
or
cmp
pop
add
cmc
nop
test
adc
mov
cmp
shlb
sarl
dec
pop
icebp
ljmp
cwtl
aam
ja
lea
fcmovnb
lret
cwtl
fstps
sub
cmp
inc
inc
adc
outsl
push
dec
sub
adc
xchg
rclb
and
sarl
sbb
sub
dec
mov
push
push
clc
and
dec
sarl
xchg
cmp
movsl
hlt
xchg
jns
xor
int3
js
add
daa
lods
mov
addl
mov
push
push
insb
add
inc
in
add
hlt
jo
lcall
sub
aaa
dec
push
repnz
inc
pop
xor
dec
push
enter
dec
jl
xchg
jb
daa
pushf
xor
mov
sbb
rclb
das
aam
dec
mov
les
sub
or
pop
jecxz
call
pop
lahf
lcall
xor
and
inc
push
jne
pusha
pop
pop
lods
mov
add
ret
mov
decl
loope
pop
cmpsb
mov
pop
sbb
imul
daa
mov
pop
aam
mov
hlt
xor
sub
mov
fstpl
push
ljmp
cld
add
sbb
lds
mov
mov
pop
and
push
xchg
in
xchg
xorb
cmpsb
cmpsl
xchg
add
pop
pusha
call
scas
std
iret
jae
movsl
shrl
push
movsl
mov
ss
inc
adc
mov
mov
stos
sti
and
add
mov
int
int3
pop
cmpsb
ds
sbb
xchg
mov
hlt
jnp
sub
mov
out
into
mov
pop
sti
xchg
xchg
fstpl
push
and
scas
cmpsl
sbb
jmp
dec
cmp
push
movsl
mov
xchg
int3
jnp
movsb
adc
hlt
fstps
sub
stos
int3
sbb
addr16
mov
or
shlb
sub
inc
adc
dec
cmp
fcmovb
int3
cmp
ret
fimull
dec
xchg
add
jle
je
ljmp
inc
jecxz
jne
test
sub
std
pop
inc
sub
jg
mov
adc
mulb
and
adc
cmp
fmull
push
movsl
shl
mov
inc
insl
leave
mov
addl
push
aad
push
mov
xlat
test
adc
push
or
mov
cmp
imul
adc
pop
shll
stos
sbb
xchg
pop
push
out
dec
popf
neg
mov
jo
nop
cltd
mov
mov
mov
sub
and
inc
and
xchg
jbe
fidivs
in
leave
jo
pop
mov
and
inc
bound
or
xor
dec
mov
jmp
dec
in
cltd
cmp
clc
lret
or
sub
jg
call
cmp
icebp
mov
add
scas
divl
mov
movsb
dec
lock
xchg
sub
in
arpl
mov
repnz
pop
pop
out
jns
into
sti
adc
in
xlat
dec
xchg
and
inc
mov
imul
xor
cmp
stos
jp
xlat
adc
push
mov
out
ret
push
sar
hlt
lods
or
sbb
sub
ljmp
outsb
in
dec
push
mov
pop
or
loope,pn
cmp
jecxz
test
inc
loop
xlat
mov
into
jne
loop
lock
enter
sarl
pop
dec
and
push
add
int3
push
std
dec
out
jbe
mov
cli
pop
mov
inc
sub
idivb
mov
inc
insl
stc
pop
sub
addr16
clc
addb
outsl
xchg
enter
mov
scas
sarb
push
cld
xchg
repnz
rolb
test
jb
rcrb
dec
cmp
mov
lret
jns
or
or
push
sub
sbb
sub
stos
movsb
jecxz
mov
cwtl
aam
mov
ds
cmp
jnp
adcl
addr16
push
mov
pop
or
mov
push
fsubrs
shl
mov
movsb
mov
bound
push
mov
dec
push
cmp
into
or
orb
lods
dec
jmp
rorb
push
popf
stc
push
mov
sub
and
das
shrb
xchg
mov
js
sub
inc
jae
je
mov
push
dec
imul
mov
mov
sub
fs
flds
out
int
mov
mov
mov
lahf
sahf
les
sbb
ret
xor
cmpsb
push
pop
adc
inc
mov
in
adc
adc
sti
add
lcall
xchg
call
jecxz
fstps
push
je
cmp
or
lret
dec
outsl
lahf
lret
popa
cli
ret
lock
adc
lods
or
xor
push
jmp
mov
shlb
dec
jbe
fs
clc
lahf
jge
decb
cmp
orb
jmp
sbb
les
adc
cli
pop
ret
int
les
cmp
mov
pop
pusha
dec
mov
mov
xchg
xor
push
jns
push
mov
or
jb
push
int
xor
and
fiadds
gs
into
xchg
test
pop
rcrb
das
pop
cmp
xchg
or
inc
cmpxchg
push
fldenv
mov
fisttpll
sbb
int3
stos
ja
arpl
fcoms
mov
xchg
out
mov
xor
pop
push
fidivrs
jbe
sub
xchg
fiadds
in
out
addr16
mov
ljmp
pop
stc
adc
mov
xchg
or
adc
push
addr16
popa
xor
ss
shl
sysenter
push
cmpsl
xchg
or
xor
jle
in
data16
mov
jle
in
daa
push
cmp
fdivs
and
aaa
rorb
mov
add
inc
lret
and
imul
sar
inc
mov
js
ret
sbb
mov
aad
inc
data16
gs
in
xchg
xlat
push
stos
ljmp
sbb
xchg
clc
arpl
mov
fdivr
aaa
imul
lods
mov
push
and
shlb
adc
mov
fiadds
pop
jnp
inc
dec
and
lret
pushf
inc
mov
jne
jl
idivl
scas
sahf
inc
dec
std
stos
sbb
js
push
imulb
mov
push
sbb
jle
push
repnz
fcompl
jp
dec
xlat
mov
sbb
add
and
mov
pop
out
jb
call
sub
mov
es
sub
mov
mov
and
cld
sbb
lret
lret
insb
lods
pop
stos
into
pusha
jno
adc
fs
or
jnp
in
xor
dec
pop
lods
add
xor
mov
push
mov
pop
inc
shll
iret
insl
pop
out
fidivrl
and
xor
jge
or
xchg
mov
imul
jns
pop
cmp
push
rcll
mov
adc
add
inc
sub
mov
push
push
vpmacsdd
cmp
jbe
xchg
inc
arpl
stc
in
insb
push
sub
pop
mov
es
mov
ja
out
sub
xchg
xchg
dec
adcb
xor
xchg
inc
inc
and
dec
lret
jecxz
xchg
jge
dec
loop
push
dec
clc
xor
stos
mov
imul
shlb
mull
adc
jge
data16
fnsave
cmpsl
ret
mov
aam
daa
test
inc
and
stos
loope
dec
movsl
xchg
mov
inc
cwtl
push
addb
movsl
jno
xchg
mov
cmp
pop
sbb
push
rcrb
jg
xor
inc
sbb
add
xchg
push
dec
ret
pop
popa
aaa
stos
or
push
aad
mov
imul
inc
fadd
xchg
mov
mov
es
pop
insb
repz
sbb
xchg
lods
pop
loop
and
lcall
pop
sahf
mov
movsl
or
or
and
jmp
xchg
ret
mov
pushf
mov
xlat
sbb
ljmp
push
mov
push
adc
gs
xchg
mov
fimull
rorb
aas
push
lahf
pop
je
fiaddl
pop
movsb
sub
xchg
test
in
sub
and
dec
lahf
andl
mov
ljmp
rclb
shlb
xor
mov
leave
pop
mov
mov
wbinvd
clc
dec
push
push
jbe
scas
sub
sub
push
mov
mov
xchg
jp
lahf
sub
jae
mov
mov
sbb
jmp
in
clc
xchg
popa
mov
lods
xchg
xchg
push
lods
xor
lcall
mov
xchg
pop
add
ret
inc
iret
cmp
shlb
ret
lods
pop
mov
daa
mov
push
lahf
dec
gs
cwtl
cmp
pop
pop
push
or
dec
cmp
inc
mov
mov
imul
in
xchg
xchg
testl
mov
xorb
push
or
fs
shll
or
or
jb
jle
xor
ljmp
mov
pop
nop
xorl
in
int3
jp
stos
pop
test
mov
lods
aas
ja
pushf
jle
and
lret
lods
xchg
jp
inc
xchg
cmp
or
cmp
push
and
jp
jbe
js
push
repnz
lods
pop
sub
sub
inc
ds
jbe
inc
mov
enter
pop
stc
sub
xchg
or
xchg
ljmp
cmpsl
popa
std
in
add
std
sbb
scas
add
movb
sub
cmpsl
or
mov
rolb
cld
push
and
fcom
gs
mov
loopne
scas
ljmp
test
ss
xor
icebp
mov
cmp
scas
lcall
adcl
pop
sbb
or
xor
xchg
xchg
inc
and
mov
push
outsb
ljmp
add
mov
push
int3
sbb
and
movq
ja
mov
sahf
int
imul
rorl
pop
pop
lret
iret
ret
inc
ret
cltd
fildl
jg
pop
fsubl
push
cmp
push
adcl
aaa
push
data16
sarb
sbb
xor
sbb
addr16
enter
shlb
mov
push
test
jge
lds
dec
or
lcall
add
adc
or
aaa
push
sub
imul
sbb
clc
into
sub
fistpl
addl
xor
mov
sub
add
mov
loop
jae
pop
das
repz
sahf
lds
test
rcrl
subb
out
pop
fstpt
pop
mov
mov
ljmp
popf
xchg
ljmp
test
pop
dec
sbb
mov
cmp
xchg
std
lcall
and
insl
xchg
xorb
outsb
push
xchg
outsb
jne
lret
test
mov
adc
and
cld
das
push
jns
stos
pop
in
cli
jge
add
xor
jo
jno,pn
jno
daa
es
ret
movsl
ljmp
out
negb
mov
icebp
fstl
push
jp
loopne,pn
rcrb
idivb
mov
jno
cmpsl
fwait
adc
adc
jp
add
lods
stos
mov
loop,pn
add
mov
add
stc
les
lret
nop
xchg
mov
mov
popa
rcrl
and
cmp
jecxz
adc
ds
adc
sbb
gs
fnstsw
push
in
cwtl
fdiv
iret
jecxz
mov
push
fnstenv
mov
mov
stos
mov
into
mov
mov
xlat
adc
cmp
loope
xor
add
inc
stc
adc
lock
push
dec
mov
pop
fidivrs
sahf
xor
inc
popl
pop
adc
cmp
outsb
or
aas
cmpl
sar
sbb
xchg
and
int
cwtl
test
ds
jmp
sbb
dec
dec
scas
ja
daa
ljmp
das
or
dec
sub
pop
mov
shll
inc
cmp
push
nop
repnz
xor
add
mov
sbb
cli
int3
in
xor
ljmp
jae
lods
ret
lock
xlat
imul
in
sbb
push
mov
push
jmp
lahf
sbb
xor
cmp
mov
repz
nop
sbb
sbb
xor
cmp
jg
daa
cmp
aas
mov
inc
dec
in
sbb
sbb
cmp
aad
notb
dec
fisubs
mov
int3
or
cmp
mov
int3
jle
mov
adcl
pusha
cmp
into
test
xor
lock
int
in
clc
aam
or
pop
mov
rolb
js
mov
popa
out
sahf
fcompl
cld
pop
cmp
cmp
xchg
and
fmul
icebp
test
aam
cltd
cmp
decl
mov
das
and
insl
push
fwait
inc
pop
dec
das
test
mov
outsl
and
xor
and
out
pop
xor
pusha
in
pop
pushf
mov
sbb
movsb
xchg
divl
mov
fcomps
and
rclb
cmpsl
push
dec
mov
clc
and
sub
stos
inc
subb
lods
addr16
xchg
or
stc
jg
pusha
hlt
jp
dec
jo
pop
jl
and
inc
xchg
xlat
mov
and
ds
cli
push
arpl
hlt
push
aas
mov
push
pop
nop
repz
cmp
fwait
lods
xor
push
enter
add
dec
stos
xchg
pop
or
xchg
loop
insb
ds
js
cli
cmpsl
xchg
jle
aad
or
enter
mov
je
mov
dec
aaa
lds
xor
push
clc
cld
in
int3
shrl
enter
push
push
cmp
addb
pop
lret
xchg
jb
jb
fbstp
into
loope
and
test
fistl
mov
push
lods
adc
es
xchg
mov
mov
push
push
fucomp
pop
in
xor
insb
pop
xchg
pop
mov
loop
leave
out
in
mov
fs
xchg
addr16
and
dec
faddl
mov
aaa
out
es
jmp
fidivrs
aam
mov
dec
inc
es
rclb
cmp
in
clc
int3
jb
mov
xchg
daa
mov
int
xchg
std
sti
jbe
jb
xor
pop
mov
mov
fmuls
pushf
add
mov
push
adc
imul
movsl
adc
jle
jecxz
iret
int
pop
cli
cmpb
push
imul
and
scas
add
pop
xchg
arpl
dec
mov
add
ljmp
jge
loopne
pop
dec
mov
hlt
add
push
les
push
imul
sar
insb
mov
xchg
or
hlt
mov
into
fcomps
pusha
mov
xor
and
aam
int
mov
mov
inc
dec
sahf
call
xor
xor
popa
jns
mov
sahf
cmpsb
jae
mov
mov
push
adc
cmp
inc
mov
mov
scas
mov
sbb
in
or
push
jne
aas
stos
aad
ret
mov
rcrb
sub
rorb
test
imul
push
lock
mov
jb
popf
add
mov
mov
fisubl
push
roll
loop,pt
and
dec
jno
mov
push
ljmp
popf
call
push
lea
jge
sbb
mov
cmpsl
pminsw
sbb
scas
jg
sub
lahf
mov
push
jle
icebp
mov
or
lods
mov
fdivr
movsl
test
mov
and
sub
pop
pop
pop
mov
inc
in
jmp
inc
adc
test
xchg
insb
ds
or
add
mov
test
mov
pop
adc
adc
movsb
xchg
mov
inc
push
xchg
das
push
jge
popa
sbb
shrb
cmp
mov
push
or
sub
test
push
iret
or
dec
inc
aaa
or
xlat
repnz
outsl
jp
imul
shll
iret
cmp
xlat
xchg
fidivrl
sahf
movsb
in
inc
test
pop
pop
aam
xorl
out
aam
and
sub
lds
jp
cmp
mov
call
xchg
sarl
jle
cli
jb
cltd
popa
hlt
pop
insl
jae
mov
test
inc
iret
nop
xor
jecxz
sub
in
out
push
cmp
jbe
push
outsl
fdivr
jns
jmp
out
movsb
scas
js
das
xchg
cld
jp
roll
out
int
and
enter
add
insl
lock
push
std
in
dec
cli
push
aam
add
fsubrl
push
pop
cmp
and
add
push
shl
mov
mov
mov
aas
dec
push
insb
add
pusha
adc
outsb
and
cli
pop
dec
sub
dec
mov
add
ljmp
orl
jl
mov
into
lods
jns,pt
aam
xchg
push
add
movsl
dec
imul
jg
enter
mov
jl
loope
ret
add
push
push
pusha
add
mov
cmpsl
test
movsl
adc
lods
fwait
in
pop
scas
outsb
loope
sub
sbb
das
add
std
mov
sbb
sbb
pushf
push
mov
pop
call
mov
mov
cmp
inc
rorb
push
push
sbb
cli
adc
aaa
dec
fdivrs
shlb
test
jp
addr16
mov
lcall
imull
dec
lds
fdivl
sub
mov
cmp
nop
repnz
sub
jb
mov
mov
mov
jge
dec
out
fdivr
ja
sub
xchg
xchg
mov
jne
std
and
mov
lods
jecxz
enter
fdivrs
fdivp
sbb
lret
jge
or
out
jno
dec
mov
xor
js
outsl
sub
push
hlt
jl
xchg
and
str
repz
push
loopne
add
movsb
inc
das
jecxz
call
lret
lods
outsl
sarl
addl
jmp
push
imul
xchg
idiv
bound
mov
sub
movsb
mov
out
lods
pop
outsl
pop
xchg
pusha
icebp
lock
add
hlt
sub
popa
sub
pushf
rcll
push
xchg
push
movsb
roll
js
fisubl
dec
adc
loopne
lods
mov
xchg
sub
or
sbb
sub
mov
nop
xchg
sbb
jbe
mov
jmp
out
jp
jb
js
fistpl
xor
mov
mov
fcmovbe
jp
xorb
lcall
cmp
frstor
imulb
xchg
add
mov
lds
cwtl
shll
rolb
cmc
pop
jg
ror
xchg
and
loopne
sub
mov
out
gs
sub
and
lret
jle
outsb
cmp
mov
mov
mov
xlat
inc
rcr
mov
in
mov
adc
xor
inc
imulb
insl
jae
leave
push
test
hlt
sub
popf
mov
push
nop
sbbl
adc
mov
jl
xor
xchg
pop
jmp
pop
dec
fnstsw
jge
aam
cmp
mov
pop
xor
and
addr16
shlb
incb
push
movl
in
les
ja
sbb
ljmp
sbb
clc
arpl
mov
fs
std
sub
mov
or
mov
clc
rcrb
outsb
loopne
jl
es
push
inc
std
push
sbb
out
les
mov
or
xorl
push
jecxz
test
add
sub
pop
fcmovne
xchg
sti
out
mov
xchg
sbb
fsub
adc
cmp
inc
aam
sbb
and
mov
xchg
sbb
push
lcall
movsl
push
or
das
fmul
fiadds
push
and
mov
clc
push
xchg
mov
pop
sbb
jns
cmpsl
or
out
ds
cld
push
xchg
mov
mov
popf
outsl
sbb
ja
cmp
popa
test
fbld
dec
jmp
xor
xchg
adc
loopne
pushf
sbb
gs
fdivp
aas
jecxz
shll
jns
lret
in
sub
push
in
sub
inc
aam
ror
pusha
mov
cmp
test
jae
and
dec
hlt
or
sbb
dec
cmp
sub
dec
sub
dec
xor
push
mov
mov
inc
or
sub
or
in
pop
xchg
dec
pop
test
pop
or
jne
fistpll
or
cmp
lods
inc
push
data16
shl
lds
push
mov
dec
scas
out
rol
dec
loop
pushl
in
pusha
xor
pusha
lods
dec
and
lcall
add
in
mov
mov
loop
shl
pop
fs
xor
fbld
or
andb
mov
jg
xchg
pusha
loop
fstp
adc
mov
cmp
dec
xor
mov
pushf
insb
inc
xor
mov
sbb
mov
mov
pop
dec
cld
lcall
adc
cltd
xor
push
out
pop
adc
and
cltd
sub
call
add
mov
or
int
pushf
je
and
adc
scas
push
mov
mov
pop
shl
push
mov
adc
push
add
insb
and
in
cmp
lret
gs
cmp
mov
faddl
lock
dec
add
mov
adc
inc
pusha
mov
add
mov
aad
pop
fnstcw
add
into
dec
lcall
lods
jl
popa
dec
push
sbb
adc
sbb
shlb
repnz
pop
mov
sub
fsubrs
xchg
adc
mov
add
mov
or
sub
test
int3
fidivl
sbb
test
or
loope
das
push
nop
imul
cli
or
out
xchg
jne
jnp
pusha
and
jmp
mov
push
push
nop
and
mov
fidivrs
mov
idiv
xchg
push
stc
std
shll
ss
xor
femms
xchg
pop
pop
xchg
pop
jb
mov
mov
cmp
cmp
sub
in
push
leave
arpl
push
dec
in
icebp
in
inc
cmc
jo
movsb
inc
mov
push
leave
push
jl
adc
stos
divl
fwait
sub
push
mov
rorl
xor
cmp
aad
sahf
xchg
and
leave
das
cmp
dec
and
push
out
mov
or
dec
ss
or
jp
pop
mov
xchg
inc
and
in
inc
into
lea
lret
lcall
rcll
int
sub
pop
mov
xor
dec
xor
lds
dec
jp
xor
mov
pop
rcl
and
add
dec
insb
xorb
mov
loopne
jmp
sbb
pop
jle
push
insb
leave
out
sub
sub
mov
nop
cmp
mov
fstl
dec
cs
sub
scas
push
in
pop
or
dec
leave
jb
fwait
push
cli
dec
push
push
je
push
out
sbb
xor
dec
dec
push
jbe
xchg
ret
sub
pushf
jns
insl
push
cld
sub
cmp
sbb
lods
push
dec
and
fwait
ljmp
daa
js
dec
mov
or
pop
inc
in
sbb
bound
pop
out
xor
sti
inc
outsb
stos
add
pop
dec
and
xchg
dec
cmc
faddl
dec
dec
loopne
fdivrs
stc
add
cmp
gs
jo
loopne
mov
rorl
into
movsl
imul
test
and
orb
dec
sti
add
data16
pop
cmp
push
stos
lock
out
in
out
test
movsl
popf
ss
outsb
adc
push
ljmp
jmp
or
mov
cltd
loop
inc
pop
cwtl
cmp
dec
or
and
mov
mov
xchg
pop
bound
cmpsb
xor
mov
push
sub
movsb
push
popa
aas
jle
jmp
lock
fcomps
cwtl
mov
insb
iret
mov
out
bound
push
sbb
and
pop
cmpsl
mov
mov
pop
jb
iret
aas
push
jl
or
fwait
in
xchg
outsl
scas
pop
dec
loope
rorb
sub
push
pushf
add
rclb
dec
dec
xor
mov
dec
add
push
in
pop
outsl
lds
xchg
mov
xor
stos
jb
push
aaa
mov
rorl
cs
cltd
std
mov
lret
sahf
call
add
lods
fiadds
fs
insl
fnstsw
psrad
cltd
inc
aad
pop
xchg
ds
out
adc
xchg
out
das
insb
lahf
adc
xor
jge
jns
inc
sahf
jbe
or
mov
mov
push
arpl
inc
mov
jae
cli
pop
pop
addr16
jb
out
sbb
out
insl
jge
xor
xor
aad
cwtl
pop
push
jmp
shl
ret
xchg
cmp
xlat
add
pop
mov
xchg
in
and
dec
stos
sbb
xor
xlat
push
xchg
mov
sub
jne
xchg
in
roll
and
mov
xchg
xchg
dec
jmp
popf
test
test
add
or
insl
sub
xor
mov
jl
fdivs
mov
jns
stos
jecxz
mov
lahf
xchg
or
mov
repz
loop
fsubrs
pusha
lods
sub
sbbb
mov
xchg
xchg
mov
mov
dec
test
mov
sub
mov
sahf
into
inc
scas
push
in
push
lret
mov
dec
sbb
ret
mov
sub
push
pop
mov
rcll
dec
or
rclb
stos
adc
out
xchg
ds
xchg
daa
push
xchg
jge
xor
and
loope
inc
rorl
in
lret
jno
ffreep
cmp
fs
jge
and
add
jnp
push
lahf
pop
idivl
cmp
mov
xchg
pop
mov
cli
outsb
lret
pop
enter
test
cmp
mov
dec
lock
out
test
insb
pop
add
int3
dec
add
dec
lcall
sbb
int3
in
aad
inc
movsb
dec
jecxz
dec
iret
add
imul
arpl
pop
roll
lods
test
dec
ljmp
fcoms
into
shr
fwait
jmp
rcrl
push
pop
dec
dec
pop
enter
lods
lahf
mov
pushf
xor
pop
lock
sub
ficoml
pop
movsb
xlat
ficomps
pop
fucomp
cmpsb
icebp
mov
sbb
jns
sbb
repnz
mov
mov
push
leave
mov
pop
cmp
cmp
imul
push
cli
pop
mov
adc
jo
repnz
xor
arpl
cmpsl
push
aam
push
mov
scas
out
ficoms
xchg
mov
pusha
jbe
orb
fadd
aad
testb
fisttpl
dec
jp
mov
int3
sub
push
sub
mov
cmp
rclb
sbb
dec
js
test
push
cmp
shlb
jle
scas
mov
int
cmpsb
test
gs
out
test
and
cltd
jo
cmpl
push
dec
xorb
inc
xor
add
pushf
cmp
add
leave
cmp
movw
adc
imul
inc
cmpb
ds
jnp
loope
add
call
mulb
adc
stos
clc
std
stos
jp
push
insb
mov
sub
adc
lds
inc
movsb
xor
inc
int
insb
repz
sbb
lahf
lods
incl
fbstp
ret
or
das
sbb
outsl
out
pop
mov
push
or
add
addb
popa
cwtl
pop
nop
pop
cld
imul
je
jmp
in
les
lret
fwait
push
rorb
adc
outsl
mov
mov
ds
mov
mov
out
test
mov
add
je
enter
adc
in
push
lods
bound
and
jo
xchg
jl
stc
mov
sti
mov
xchg
ja
loope
ljmp
pop
insl
mov
imul
sub
pop
aaa
or
shll
adc
and
enter
das
jge
outsb
mov
sub
mov
or
pop
sub
adc
fisttpll
push
mov
lcall
pop
shrb
movb
mov
outsl
adc
pop
inc
in
popl
inc
cmp
jbe
cmc
addr16
add
mov
repnz
out
pop
xchg
cmp
inc
cmpsl
mull
lods
and
mov
xchg
lock
or
leave
lea
mov
sbb
loopne
push
clc
push
push
aam
mov
add
scas
out
and
dec
adc
ja
mov
es
pop
or
xor
cltd
mov
jnp
test
cmp
repnz
dec
in
int3
xadd
jmp
xor
or
or
pop
fldenv
out
loope
push
test
mov
push
jl
sub
fcoms
add
fldl
xor
lods
movb
lahf
shll
mov
cmp
jle
jmp
popa
mov
ret
pextrw
mov
cli
cli
adc
push
repnz
jle
and
int
idivb
xorb
inc
test
jmp
jg
mov
add
aam
fsin
add
sub
inc
xor
shrl
lcall
xchg
cmp
dec
xchg
sbb
and
cmp
jl
mov
loope
pop
popa
add
dec
cmp
xor
aaa
mov
jp
inc
push
xor
dec
push
mov
in
jg
mov
pusha
shrb
sbb
mov
sarl
dec
ror
jb
mov
hlt
aam
mov
es
out
jle
ljmp
xchg
and
mov
ds
inc
outsb
sahf
mov
ret
adc
or
test
in
push
out
int
fmull
sbb
test
sub
xor
ret
ss
xor
jge
mov
adc
in
gs
jnp
jb
xor
cli
dec
push
lcall
aaa
les
inc
xlat
xchg
test
sub
out
xor
mov
mov
sub
loop
lret
jne
lea
inc
mov
movsl
flds
push
add
sarb
push
mov
pop
dec
add
pusha
fisttps
loopne
xlat
jl
shll
xchg
loopne
mov
sahf
lock
insb
sbb
mov
xchg
fwait
add
mov
and
in
ss
pushf
inc
inc
push
xchg
mov
xchg
fwait
cmc
push
jne
sub
cmpsl
mov
pop
add
mov
mov
dec
int
imul
es
js
dec
rclb
inc
leave
inc
sub
push
nop
int3
add
insb
push
fadd
add
push
fstps
sbb
dec
arpl
or
andb
push
lahf
fwait
inc
pop
xor
jbe
adc
out
outsl
dec
inc
add
mov
pop
icebp
loope
cmpsb
data16
pop
mov
push
and
sub
mov
icebp
adc
movsb
xchg
ret
pop
imull
cmp
adc
and
js
das
bound
jae
inc
fnstenv
arpl
ja
jnp
nop
addr16
and
je
gs
orl
dec
xor
dec
jae
xor
mov
jecxz
xor
sub
cmp
dec
fdivr
sarl
fisubrl
enter
in
mov
lret
rcll
outsl
mov
add
push
testb
popa
nop
sub
and
flds
or
pop
test
dec
xor
sbb
sub
push
pop
xchg
jne
inc
xchg
in
cli
jnp
mov
lds
mov
mov
jb
lret
scas
adc
enter
jge
mov
aam
xor
fs
clc
out
fstpl
fstps
or
inc
enter
stos
mov
movsl
sub
data16
insb
data16
das
outsl
push
fldl
mov
jp
xor
jg
aad
sahf
mov
rcrl
fstpt
nop
push
fildll
jle
sbb
sbb
push
add
fisubs
or
mov
and
call
aad
mov
inc
xchg
fwait
pop
stos
xchg
stc
lcall
hlt
lret
xchg
clc
pop
mov
insb
sub
cmp
icebp
xchg
jg
mov
int3
sub
shlb
add
ret
les
and
inc
gs
addr16
cmp
sbb
pop
out
inc
cmpsb
mov
xchg
push
out
mov
jecxz
mov
adc
das
js
fistpll
arpl
cwtl
lcall
iret
inc
sub
inc
out
jae
jg
divl
and
lods
js
xor
or
cltd
lahf
lahf
mov
pushf
mov
dec
push
or
das
push
addb
iret
repz
je
cmp
xchg
xchg
ret
cltd
cltd
loopne
jns
xchg
sti
popa
adc
les
mov
jp
and
scas
cli
jl
or
stc
adc
inc
int3
sbbb
lds
out
sbb
jo
out
adc
inc
mov
mov
cli
push
cmpsl
jns
mov
pop
lret
in
or
inc
cltd
movsl
hlt
movsl
jmp
jbe
shl
xor
mov
xchg
addb
add
movsl
shlb
push
inc
std
mov
add
jp
jns
lods
mov
jne
bound
rcr
enter
lds
fidivs
lods
cmc
and
aaa
fisubrl
mov
sbb
xchg
rorb
pop
or
sarb
xor
push
pop
dec
hlt
jmp
pushf
test
dec
xchg
lea
xor
push
cmpsl
cmc
add
mov
hlt
cld
sbb
call
mov
outsb
ds
ds
addr16
stos
in
mov
cmp
xlat
and
mov
inc
cltd
cwtl
mov
repz
addr16
sub
cli
or
xchg
mov
clc
loopne
repnz
add
jp
mov
rcl
fmul
mov
movsl
cli
push
repz
pop
test
outsl
fisubrl
je
dec
mov
cltd
out
pop
adc
aad
sbb
mov
push
mov
push
xor
ficomps
push
jp
xor
inc
lret
inc
sub
cwtl
cwtl
aam
adc
aad
test
jnp
call
lret
adc
cli
push
out
lods
and
inc
xchg
mov
adc
clc
xchg
cmp
add
out
and
cwtl
aas
rcll
push
addr16
mov
lea
daa
rorb
repnz
xchg
movsb
add
xor
xor
pop
jb
or
popf
xsave
and
dec
mov
cmp
test
jmp
movsb
inc
jae
cmp
out
or
sbb
push
iret
or
push
movsb
push
jnp
inc
jl
mov
and
pop
add
dec
cmp
repz
sahf
cmp
repnz
add
subl
lods
nop
mov
pushf
movsb
jo
add
ss
cmp
jbe
lea
out
lods
movsl
popa
dec
xor
mov
and
and
cmpsb
jb
mov
or
mov
mov
sbb
sbb
pushf
mov
xor
outsl
fimuls
lds
or
push
pop
arpl
jbe
adc
lret
or
add
int3
pop
cmpsb
and
pop
inc
xchg
imul
inc
adc
pop
mov
clc
dec
lcall
loop
cmp
jns
icebp
jl
xor
sub
and
ds
push
dec
in
mov
aaa
sti
mov
adc
in
sub
fadd
add
in
mov
incb
aad
cmp
push
mov
data16
gs
call
dec
insl
js
lock
loop
sub
and
arpl
push
dec
andl
test
aad
mov
shr
xor
adc
lods
insl
mov
repz
mov
adc
fs
fnstsw
sub
add
mov
ss
test
pop
aaa
repnz
adc
repz
jb
pop
in
jae
cld
lcall
sbb
or
ja
out
sbb
scas
jae
ret
mov
xor
jno
lods
mov
pop
sbb
fcoms
icebp
pushf
sbb
dec
pop
es
and
lds
xlat
mov
sbb
das
daa
cmpsb
push
in
lahf
pop
xchg
cltd
inc
or
mov
fwait
scas
jp
xor
xor
clc
je
pop
lea
xor
xchg
js
popa
cld
mov
adc
aaa
mov
and
push
xchg
call
push
pop
lahf
pop
jecxz
lods
and
add
lods
xorb
inc
iret
movsb
push
popa
sub
xor
mov
mov
ret
into
loope
ljmp
inc
outsb
pop
aam
lods
jno
add
shll
or
leave
rorb
pop
xchg
lret
mov
pop
cs
pop
mov
push
out
imul
mov
pop
cmp
into
mov
push
ljmp
adc
dec
jg
mov
add
sub
adc
sti
jns
push
push
pop
sbb
adc
data16
or
add
xor
in
mov
loopne
cmc
into
mov
jmp
flds
sub
pop
cmpsb
pop
cwtl
push
dec
jo
mov
jnp
push
mov
xor
aam
call
popf
fwait
add
fsubs
dec
rcll
adc
mov
ss
xchg
iret
fistpl
ret
movsl
sub
adc
xor
jecxz
scas
xorb
lods
mov
ds
dec
xchg
xchg
dec
insl
jge
mov
fimull
push
addr16
mov
clc
jecxz
push
ret
jmp
fcmovnbe
scas
popf
dec
stos
fidivl
cmp
and
outsb
or
cltd
dec
pusha
cmp
callw
stos
jge
rcll
or
in
mov
cltd
and
fwait
cmp
xor
iret
and
dec
push
dec
shrb
fildl
dec
dec
das
dec
mov
hlt
mov
inc
lahf
pop
cmp
or
push
repz
xchg
xor
dec
inc
jno
repnz
cmp
neg
sbb
jmp
dec
fwait
jne
fcmovbe
mov
cmp
push
cmp
adc
inc
push
jg
jecxz
enter
popf
sti
sbb
pop
xchg
arpl
repnz
fmull
outsl
and
out
and
push
mov
add
jg
out
sbb
std
adc
inc
outsb
dec
inc
dec
mov
int3
aas
xorl
in
cltd
gs
repnz
js
movsb
fmuls
sbb
jl
orl
lret
xchg
mov
cmpsb
dec
lods
mov
loope
dec
iret
dec
or
lods
adc
call
aad
sub
adc
sub
in
mov
or
mov
cmp
lret
xchg
out
dec
test
adc
or
nop
mov
mov
pop
xchg
cltd
inc
mov
fnsave
ret
pop
add
icebp
popa
adc
insb
andl
ja
and
ret
aas
mov
pop
packsswb
nop
fcom
arpl
test
add
bound
jnp
sub
out
push
mov
fildll
mov
icebp
xor
in
xchg
push
mov
je
jns
and
mov
aas
cmpsb
aas
cmp
mov
cltd
xlat
xor
xchg
pop
pop
adc
aaa
adc
pop
xlat
pushf
stos
sub
pushf
mov
dec
xchg
adc
pop
test
data16
pop
add
mov
hlt
sub
jle
jle
pop
push
aad
test
cmp
xor
sbb
rcl
iret
js
jge
ss
clc
add
repz
mov
mov
mov
jecxz
popa
cmp
mov
cmpsl
sti
shl
adc
in
pop
push
mov
sub
out
xchg
pusha
or
cmp
or
jmp
mov
push
add
jae
jb
in
shlb
movsl
test
jle
adcl
xor
push
adc
pop
rorl
pop
aad
mov
cs
and
jecxz
jp
dec
mov
imul
arpl
cmp
in
mov
test
into
sub
inc
jne
add
das
loope
int
add
stos
jns
pop
loope
test
xchg
pop
or
push
mov
addr16
cmc
into
mov
add
or
fcmovne
hlt
push
sbb
test
pop
xchg
clc
test
test
ljmp
jl
dec
aam
fldt
mov
ljmp
jecxz
neg
movsl
stc
or
pop
fs
xor
ss
shlb
fld
cmp
outsb
fstpl
jmp
push
mov
mov
jl
dec
dec
mov
data16
sbb
adc
push
std
ss
push
daa
rclb
shrb
mov
outsb
rolb
and
and
inc
sub
mov
dec
call
fcoms
test
jo
jno
mov
jecxz
call
imul
cltd
sbb
ret
lods
pushf
jmp
aas
lods
mov
rcrl
sbb
mov
dec
pop
sbbl
les
in
add
daa
lods
sub
dec
xor
into
push
xchg
lods
out
addl
in
stos
orb
xor
mov
xlat
stos
test
ss
mov
xor
add
push
repz
sbb
mov
movsb
pusha
or
enter
add
cwtl
idivb
pop
outsb
add
xchg
and
mov
add
stos
mov
stos
out
mov
inc
add
ja
dec
mov
pop
push
retw
jno
lods
insl
stc
adc
mov
mov
ja
xlat
adc
lcall
cmc
lahf
sbbl
lea
out
cwtl
and
lret
xchg
and
mov
fisttpll
fsubp
dec
and
je
mov
push
mov
sbbl
xor
cmpsb
inc
sbb
int3
sub
sub
insl
int
idivl
dec
popf
xor
popf
fistpll
xchg
fcmovu
mov
xchg
mov
test
lret
add
push
mov
xchg
jo
mov
test
stos
xchg
flds
jp
out
xor
loope
sub
leave
mov
fdivs
ret
xor
mov
push
jecxz
inc
testl
dec
test
mov
leave
es
mov
bound
sbb
and
mov
fldt
icebp
and
aam
sbb
sti
push
loop,pt
sbb
popf
das
inc
iret
cmc
add
cwtl
jp
cltd
fdivs
rcr
push
sahf
push
pop
pop
cmp
jbe
xor
repz
ss
jnp
xor
test
test
pop
dec
sbb
loopne
lret
and
xchg
rorl
mul
aaa
cmp
xchg
inc
and
push
lret
push
xor
jo
push
loop
cmp
andl
and
or
dec
repnz
arpl
mov
mov
xchg
jge
fwait
xchg
pop
add
push
sbb
add
andps
jb
jb
popa
pop
fstl
jp
pop
inc
dec
loope
iretw
sbb
rorb
pop
sub
insl
loope
xchg
cmp
pop
adc
std
sti
and
aaa
add
or
movsl
out
mov
adc
sbb
pop
pop
push
sub
pop
ror
push
xchg
and
dec
fwait
bound
into
shl
cmpsl
mov
push
or
sub
scas
xor
outsb
jmp
mov
stos
xchg
in
jb
and
sub
xor
cmpsb
enter
jle
iret
and
jnp
clc
lds
xor
sti
push
mov
mov
lret
jae
xor
pop
repnz
and
movsl
fs
push
push
les
sub
jmp
and
add
out
imul
fs
adc
mov
cmp
lods
adc
add
xor
enterw
test
stos
xor
or
addr16
popa
filds
fs
sbb
pop
add
ljmp
jnp
mov
dec
jmp
xchg
mov
xchg
cmc
dec
inc
dec
xchg
push
fisubrs
jne
cwtl
lahf
int3
ja
ret
add
out
popa
jle
je
inc
in
std
lods
sbb
jno
jns
xor
or
hlt
mov
cltd
fbld
pop
inc
inc
movsl
imul
xchg
mov
pop
imul
enter
adc
mov
add
add
lret
lds
xor
hlt
pop
out
xchg
xor
pushf
into
test
push
mov
mov
ds
add
push
ret
mov
or
mov
dec
lods
stc
imul
sbbl
cmpb
push
pushf
inc
jb
pop
and
add
mov
and
adc
ja
mov
cmpsl
mov
adc
mov
xlat
rclb
sub
clc
scas
aaa
mov
push
inc
cltd
fstpt
in
cwtl
jnp
mov
int3
mov
jnp
ss
mov
pop
bound
test
push
in
jbe
shrl
into
adc
push
cmp
jg
movb
mov
inc
or
icebp
push
inc
xlat
adc
push
out
aaa
lock
in
jmp
sarl
outsl
lods
and
loop
mov
and
mov
jmp
xor
xchg
mov
clc
cwtl
add
hlt
jge
mov
int3
int3
dec
faddl
pop
negl
mov
sbb
test
in
or
pop
pop
push
test
andl
and
push
jns
enter
fmull
call
rcrb
movsb
or
sbb
jo
lock
lea
adc
cltd
xor
sbb
fs
or
pop
lahf
push
push
ss
out
mov
or
icebp
repnz
inc
xorb
xchg
and
jae
cld
lods
lock
adc
cmpb
nop
fcompl
call
test
insl
fs
push
inc
ret
xchg
in
in
dec
dec
ljmp
xchg
int
orl
adc
push
xchg
js
or
call
ljmp
leave
test
jae
push
outsb
stc
pop
les
add
jl
dec
cs
pop
mov
cmc
xchg
cld
insb
cmp
adc
xorb
push
push
aam
dec
fcom
adc
mov
out
into
xchg
mov
mov
sbb
cmp
in
push
shl
rclb
fimuls
inc
dec
jle
neg
mov
sti
lea
fcom
ds
mov
mov
call
xor
or
lods
pop
cltd
adcl
jns
sarb
mov
or
mov
xlat
cwtl
xor
lods
scas
leave
in
and
fcmovnb
pop
pop
and
loop
aaa
sbb
jo
in
outsb
push
shrl
cmpsb
jp
xchg
popa
neg
xor
dec
push
mov
subl
jbe
in
test
xlat
adc
lret
or
push
and
jl
fucomi
pop
movsl
jno
paddusw
pop
gs
addl
lret
mov
push
or
mov
data16
in
push
insl
dec
dec
out
int
pop
xor
aad
pusha
pop
xchg
xor
sbbb
cs
mov
ljmp
int
inc
stos
mov
mov
ja
je
ficoml
push
and
out
and
std
add
push
lret
lcall
adc
int3
movsl
clc
xchg
jne
lea
lahf
xchg
jns
insb
push
shlb
or
cmc
sti
inc
xor
mov
inc
icebp
jne
lea
push
adc
or
imul
cli
cmc
sahf
in
xchg
mov
dec
pop
sbb
data16
and
stc
xchg
ret
xchg
lea
cmp
clc
push
adc
xchg
dec
std
dec
push
add
push
hlt
scas
pop
loope
cmp
and
fmuls
scas
jmp
push
cmp
add
jno
outsb
dec
lods
lock
ljmp
lret
rorb
cs
xlat
out
loop
pop
inc
jp
mov
sub
adc
dec
mov
iret
sub
mov
mov
out
stos
xchg
or
sub
lret
jp
stos
stos
pusha
cltd
add
jl
pop
movsl
add
es
lcall
jg
dec
xchg
push
add
movq
mov
inc
inc
mov
mov
and
pop
stc
mov
fwait
sub
scas
les
out
fbstp
mov
dec
jb
dec
inc
add
repz
xor
in
cmp
or
hlt
ret
or
ds
lock
js
mov
mov
mov
ffreep
mov
sub
hlt
mov
pop
clc
sub
mov
pop
lret
or
adcb
aaa
addl
mov
push
scas
pop
andb
out
unpckhps
cmovnp
lahf
stc
pop
push
movsl
fadds
mov
fcomps
insb
std
adc
jno
hlt
jno
mov
stos
lea
rclb
fprem
add
imul
out
sbb
fs
fdivs
and
cmc
cmc
jp
icebp
xchg
inc
scas
jno
cmp
leave
in
aaa
cli
xor
xchg
aad
dec
cmpl
div
pop
dec
lret
push
mov
xchg
jnp
scas
pop
sub
test
adc
testb
insl
sbb
pop
dec
or
inc
push
push
daa
hlt
gs
jecxz
pop
int3
scas
jmp
mov
mov
or
cmp
mov
pushf
or
sbb
sbb
xor
cld
push
push
sbb
inc
inc
push
mov
cmc
cmp
fildl
adc
bound
rclb
mov
rolb
mov
leave
fcoml
cmpsb
pop
arpl
adc
mov
test
jbe
outsl
cmp
xchg
xor
stos
mov
xor
or
pop
test
call
and
je
xchg
mov
sbb
cwtl
vpaddd
adc
loope
cld
out
lret
mov
adc
test
add
dec
cmc
movsl
enter
stos
mov
push
subb
inc
js
fwait
adc
pop
sub
shrb
inc
inc
sahf
js
jnp
jle
aaa
sbb
jbe
imul
jns
xchg
in
adc
push
decl
xchg
lgdtl
dec
fadds
inc
jle
cmp
add
out
in
test
scas
popl
xchg
sarl
pop
push
test
pop
ds
sahf
pop
repz
hlt
add
out
das
sarb
pusha
roll
dec
es
insb
aaa
or
cmpsl
pushf
sub
out
add
ficompl
push
popa
rorl
add
xchg
jp
adc
mov
push
cmp
inc
ret
aad
mov
jae
lods
lahf
pop
mov
insl
mov
fmuls
add
adc
fildl
rorb
cmp
enter
jnp
and
pusha
mov
push
ret
mov
pop
mov
cmpb
clc
movsl
and
jl,pt
dec
in
jmp
movsl
stc
xor
in
lock
mov
mov
inc
test
sub
xchg
inc
cmc
add
push
call
pop
dec
pusha
xchg
outsb
cmp
mov
sub
cli
pop
icebp
push
mov
adc
ja
sub
shll
pop
inc
inc
adc
mov
lods
sub
pop
loop
push
pop
adc
mov
std
mov
fisttpl
jne
out
sahf
repnz
add
pop
inc
mov
repnz
push
enter
fdivrl
mov
push
aad
mov
push
mov
dec
cld
addb
sbb
les
negb
mov
or
out
mov
inc
sub
add
stc
fwait
jnp
std
mov
dec
stos
xchg
xchg
out
sbb
xor
pop
into
pop
fs
inc
pop
mov
mov
or
sub
cmc
cmpsb
mov
mov
fildll
add
and
jae
add
or
push
aas
sahf
mov
push
repz
clc
insl
mov
or
push
clc
out
test
cwtl
jo
jle
outsb
dec
pop
xchg
sub
mov
or
sbb
mov
add
in
addr16
jecxz
push
je
and
repnz
stos
or
stc
popf
jle
inc
inc
jle
mov
fidivrs
mov
fldl
stos
xor
insb
imul
inc
mov
adc
in
repz
loop
adc
push
data16
sahf
movsb
adc
mov
or
adc
xorl
test
xchg
mov
push
addl
and
ljmp
addr16
dec
movsb
dec
cmp
nop
mov
xchg
xchg
in
dec
stos
mov
hlt
inc
test
mov
insb
shll
shrl
push
mov
push
je
gs
pop
ja
inc
inc
stc
ret
or
jmp
cltd
rcl
jbe
nop
push
sbb
sub
imulb
mov
ret
mov
out
lret
imul
lahf
or
fwait
sbb
mul
popa
and
loope
ror
xchg
notb
ss
in
fiaddl
adc
jmp
sbb
popf
adc
in
out
ret
and
sarl
nop
insb
jle
mov
pop
dec
mov
xchg
iret
inc
sbb
int
popf
jle
jne
int3
inc
sbb
pop
pushl
jle
out
lods
add
and
rorb
fyl2x
sub
inc
pop
add
inc
lret
das
or
into
sbb
fst
iret
fisttpl
jge
push
lods
xor
lret
gs
and
outsb
lods
mov
mov
pushf
xor
rcll
cmpsb
jae
test
xchg
mov
lcall
inc
add
jl
push
mov
and
sub
add
lock
add
mov
cmpl
mov
leave
pop
mov
cli
shl
popf
mov
js
cmc
andb
les
out
sbb
xchg
push
adc
xchg
sbb
ror
pop
cwtl
mov
jno
mov
inc
ljmp
cli
insb
scas
xor
jmp
dec
pop
and
jecxz
add
sahf
mov
push
sti
clc
ss
outsb
das
sub
in
xor
inc
xor
and
mov
std
mov
sbb
mov
mov
dec
sub
xchg
mov
jo
fxch
addr16
mov
dec
fdivrs
jmp
sbb
icebp
lcall
mov
shr
out
xchg
imul
loopne
dec
xchg
sub
mov
sub
mov
add
dec
xor
call
xor
andl
or
fwait
dec
daa
aas
bound
pusha
iret
out
je
idivl
inc
dec
test
jb
and
cltd
sahf
sbb
sbbl
arpl
insl
hlt
sbb
jnp
inc
push
ud1
into
mov
arpl
xor
jbe
fbstp
jge
inc
in
js
adc
repz
mov
pop
cld
pop
xchg
jp
icebp
lret
or
mov
cld
insb
shlb
xchg
lock
les
jecxz
stos
or
and
daa
jno
data16
int
sub
mov
testl
pop
jecxz
add
loope
mov
and
shl
jnp
iret
loop
jnp
fstps
mov
fsubrl
cli
out
or
rcll
ljmp
mov
push
mov
mov
push
mov
pop
daa
pop
sub
xorl
cmpsl
mov
rolb
xchg
in
sub
inc
pop
xchg
mov
sbb
pop
jne
xor
nop
loope,pt
mov
out
jge
dec
mov
push
pop
and
xor
sub
dec
push
mov
push
repnz
cmpb
add
cmpl
cmp
ret
push
movsl
cmc
mov
inc
pop
jo
fs
fs
out
push
mov
cmc
cmpsb
hlt
adc
imul
adc
xchg
jg
leave
rorb
push
mov
inc
mov
sub
push
lahf
xchg
icebp
fcmovbe
fcomip
pop
std
shll
adc
les
outsb
xchg
inc
ja
cld
push
leave
push
scas
inc
aam
and
lock
mov
dec
or
pop
mov
adc
mov
xor
popa
xor
sub
iret
inc
inc
lcall
adc
pop
cmp
outsl
mov
jno
mov
mov
fucomp
imul
inc
faddl
scas
fistpll
sub
fldl
inc
aad
out
mov
stos
inc
inc
popf
repnz
inc
pop
cmp
movsb
repz
leave
test
scas
out
stc
fsubrl
inc
rcr
mov
pop
test
jge,pn
push
sti
sbb
rclb
xchg
sbb
pusha
sbb
xlat
cmp
ret
xor
aas
xchg
xchg
xlat
pop
out
sar
jne
mov
cld
hlt
pop
or
rolb
and
xchg
inc
bound
xchg
adc
les
xlat
pop
mov
cld
scas
movsl
pop
and
arpl
stos
xchg
pop
or
mov
jge
stos
or
mov
in
push
movsl
xchg
xor
mov
adc
movsb
enter
pop
xor
xchg
or
scas
imul
rol
and
mov
mov
pop
adc
les
repz
cmp
daa
push
sub
mov
std
mov
jo
je
mov
xchg
xchg
mov
enter
paddw
xchg
dec
lds
stos
mov
adc
imul
loop
inc
cmp
ljmp
add
jmp
aaa
rcl
test
cs
int3
leave
and
mov
test
inc
jae
into
fadds
pop
aam
ljmp
xchg
xor
mov
xor
outsb
xchg
and
popf
outsb
xchg
mov
rol
add
cmpsb
push
push
aad
leave
addr16
push
pop
jge
cwtl
jnp
daa
insl
mov
dec
pop
ss
jle
inc
cltd
ficoml
fstpt
sbb
pop
adc
sbb
cmpl
fstl
fwait
jbe
sbb
cmp
sarb
repz
add
xchg
shr
inc
jae
rorl
jno
or
sbb
int
xchg
andl
test
sub
sub
xchg
push
dec
lods
orl
add
push
ds
pop
icebp
mov
jmp
cmpsl
lcall
rcrb
and
cmp
sub
xchg
dec
adc
ja
jle
pop
or
std
cs
push
out
lods
adc
lock
bound
adc
rcll
xchg
cmpsl
and
lods
pop
fcmove
add
cmp
sbb
outsb
lcall
fdivl
lret
cltd
jecxz
sbb
mov
adc
or
lcall
cld
sbb
hlt
enter
xchg
jmp
movsb
enter
jbe
inc
dec
ljmp
iret
into
push
jecxz
fstps
xlat
ret
insb
rorb
loopnew
sub
sub
jne
ja
adc
sti
dec
out
js
push
xchg
xchg
jno
pop
data16
or
ja
push
stos
shrl
popf
push
dec
push
aam
dec
test
imul
adc
jns
dec
xchg
sub
adc
pop
in
mov
daa
mov
mov
iret
dec
fistps
dec
push
jo
jl
popf
nop
mov
cld
out
adc
dec
xor
mov
dec
frstor
ss
pop
mov
pusha
lea
iret
jp
stos
xchg
dec
sahf
mov
sub
add
push
jbe
jbe
add
jecxz
outsb
int
test
cmp
daa
sub
push
jl
ja
jns
adc
push
xchg
int3
int3
mov
aam
movsb
and
out
jge
fidivrl
xlat
push
popa
push
mov
adc
stos
jmp
push
stos
jo
ds
pop
or
cmp
fstpl
testl
insl
lea
jmp
mov
mov
mov
fstl
xor
dec
pop
cmp
xor
mov
aaa
sbb
sbb
xchg
inc
decl
lret
xchg
pusha
add
js
sub
and
mov
push
outsb
bound
jl
jle
nop
or
mov
sbb
mov
sub
mov
insl
js
and
gs
push
sarb
fcomps
add
fcomps
or
fisttpll
dec
push
push
ds
sbb
sbb
inc
loopne
call
xor
xlat
xchg
push
sbb
ds
cmpl
mov
jb
dec
notl
mov
cmp
pop
add
js
rcrl
lods
cmp
xchg
jne
or
dec
jl
jnp
std
sbb
faddl
sbb
stos
pop
mov
dec
lret
aas
add
xchg
xchg
or
inc
xor
mov
cld
bound
pushf
in
rorb
js
testb
jno
add
scas
sbb
fisttpll
dec
repz
loop
cmp
push
movsl
xchg
push
imul
pop
out
and
cmc
mov
das
stos
fidivrs
loop
mov
lea
sbb
gs
xor
dec
les
jp
pop
mov
adc
clc
or
mov
mov
test
movsl
mov
pop
push
pop
mov
pop
mov
push
std
lcall
mov
dec
mov
sbb
out
mov
fwait
jl
mov
cwtl
jne
dec
inc
mov
inc
pop
jo
clc
adc
sbb
inc
adc
inc
stos
dec
hlt
dec
shrl
pop
pusha
and
xchg
lret
inc
cmp
lea
aad
icebp
and
mov
jnp
inc
push
mov
in
xor
cmpsl
xor
sub
dec
sbb
sbb
inc
dec
mov
jecxz
mov
aas
pop
and
push
test
frstor
cmp
cmp
fmull
xlat
adc
call
ret
psubb
xlat
push
fsubs
mov
shll
inc
and
xchg
pop
pop
cs
inc
les
shl
add
subl
ret
rorl
mov
push
sbbl
jle
js
push
xchg
xor
xor
push
rcl
push
movsb
dec
test
or
fimuls
cmp
sbb
dec
push
sahf
push
mov
out
popf
cld
pop
mov
inc
xor
shlb
daa
mov
pop
or
xchg
xchg
shll
mov
mov
out
mov
jmp
cmp
mov
sub
mov
push
fisttps
jge
xchg
mov
cmp
pop
push
jnp
in
stos
test
out
iret
lods
sbb
out
push
cmp
iret
fidivl
adc
mov
arpl
inc
pop
in
leave
or
push
adc
dec
ljmp
adcb
xor
push
inc
or
ret
pop
out
es
lret
or
adc
nop
add
pop
insb
js
loop
imull
gs
sbbb
fistps
sub
sbb
lret
cld
push
xchg
push
lret
into
lret
jnp
arpl
cs
push
sbb
jl
dec
fnstsw
jae
pusha
pop
dec
and
mov
inc
jmp
xchg
cmc
add
in
mov
frstor
push
adc
call
sub
xchg
cld
fcompl
bound
mov
bound
mov
inc
mov
movsl
jmp
outsb
mov
sub
adc
inc
sbb
lods
push
outsb
fucom
int
ds
jmp
adc
adc
xor
shlb
or
xchg
insl
scas
xor
push
or
pop
push
sub
xor
lcall
sbb
aaa
sub
inc
cmp
mov
jmp
gs
jmp
fistpl
pop
cli
rorb
jg
add
imul
les
inc
std
adc
je
xchg
shll
jae
ret
sbb
add
dec
out
or
xchg
jmp
stos
cmp
mov
std
in
arpl
cwtl
aam
rolb
cli
lahf
adc
cmp
xor
lods
les
iret
test
xchg
push
xchg
mov
mov
mov
cwtl
cmp
inc
nop
xor
push
scas
mov
ja
dec
mov
repz
cs
xor
repz
shrb
rcl
mov
dec
pop
sub
or
adc
clc
xchg
addr16
xor
cli
push
mov
add
loope
push
xchg
jecxz
out
lock
dec
das
push
js
pop
push
xchg
rcrl
push
mov
aas
sti
cmp
mov
dec
insl
loopne
sbb
lcall
mov
ss
and
fpatan
jnp
cli
mulb
jbe
add
sub
aas
in
adc
mov
and
lock
lret
icebp
into
lea
out
mov
loopne
sbb
aad
jecxz
outsl
add
mov
movsl
fnstsw
pop
imul
sahf
pusha
icebp
ljmp
out
or
mov
insl
lock
mov
lret
in
lcall
cmpsb
incb
dec
inc
jno
lods
adc
dec
sbb
pavgb
inc
ror
sub
cmp
pop
lds
dec
xor
xchg
pop
jge
adc
loope
and
mov
pop
jp
gs
out
mov
mov
mov
notb
rcrl
jp
inc
push
test
or
loop
jp
add
mov
mov
aaa
sti
add
mov
inc
std
inc
pop
arpl
sbb
mov
push
mov
mov
adcb
insl
dec
xchg
in
jne
lret
rcrl
push
pop
int3
or
jno
dec
mov
or
lahf
imul
lahf
loopne
cmp
jle
mov
sti
mul
pop
es
fcmovb
lcall
in
mov
cmpb
ror
cmp
lods
or
add
mov
in
mov
in
sub
or
in
xchg
add
imul
cmp
mov
push
push
shlb
lods
and
shrl
xor
sbb
mov
rclb
mov
fistps
ss
sub
popa
push
mov
jns
mov
xchg
lahf
cmp
out
jb
scas
ficoms
aad
sub
adc
out
xor
mov
mov
popa
adc
bound
fmul
pop
inc
add
cltd
ret
push
xchg
aaa
sahf
pusha
jbe
call
lret
imul
jns
in
repnz
idivb
mov
sub
push
out
sub
sti
dec
leave
fsubrs
leave
movsl
in
adc
lock
xor
pop
orw
cmp
fadds
bound
cmp
ret
dec
jecxz
mov
inc
std
push
xor
std
sbb
cmp
jmp
sti
aad
adc
and
fildl
push
mov
out
sbb
sbb
xlat
mov
fwait
inc
cmp
dec
daa
push
mov
inc
sbb
push
lcall
dec
in
movsl
push
mov
lods
imulb
stos
jnp
cmp
insl
inc
or
jg
loopne
fs
mov
out
mov
int
stc
das
inc
out
jl
pop
xor
in
or
sti
fdivs
sti
in
ret
dec
lret
or
mov
sbb
sbb
fwait
stc
lds
xchg
inc
call
mov
fnstenv
mov
jo
jb
sahf
or
xor
movsl
adc
push
bound
jmp
add
pushf
or
and
jo
mov
cmp
addr16
aas
adc
jl
and
cs
pop
sbb
mov
mov
ret
shr
ds
adc
mov
adc
mov
mov
fs
jbe
push
push
iret
dec
ds
je
sub
insb
hlt
aad
outsb
push
cltd
inc
inc
dec
jle
push
inc
pop
mov
jmp
mov
mov
or
mov
sbb
dec
jp
stos
shll
add
pop
xchg
pop
aas
icebp
mov
dec
inc
mov
test
dec
dec
in
jnp
testb
loop
adc
inc
cmp
cmc
fs
imul
cwtl
cmp
mov
mov
jns
cmpsb
mov
push
jle
icebp
xlat
jp
test
lea
aad
scas
rorl
mov
outsl
pop
insb
icebp
loop
lahf
jmp
push
repz
les
movsb
pop
addl
inc
sahf
mov
out
cld
in
push
xor
cmpsb
and
or
inc
inc
mov
xlat
mov
push
cwtl
jbe
adc
push
dec
fadd
xor
inc
or
mov
push
ljmp
enter
scas
lcall
sub
test
in
mov
out
xchg
or
cmpsl
aam
incb
pop
push
sbb
cli
fs
mov
and
or
jnp
shlb
or
jb
xchg
xchg
aaa
jae
movsl
push
lea
icebp
push
cmp
or
and
or
push
loopne,pt
and
sub
test
inc
mov
test
cli
adc
pop
pop
xor
sahf
inc
jns
add
ja
iret
loop
lret
movsb
mov
hlt
sbb
mov
xor
lods
mov
aad
nop
lea
xor
mov
dec
mov
aad
inc
fwait
aas
in
adc
out
inc
add
out
mov
es
push
xchg
das
pop
scas
mov
int
lock
pop
sbb
and
je
adc
adc
sub
pop
xor
pushf
mov
or
inc
lods
fwait
lcall
pop
enter
fs
cltd
repz
mov
add
push
icebp
and
int3
push
or
fistps
cmp
push
push
mov
cli
popf
ds
sbb
imul
fwait
stos
movups
and
mov
sub
mov
sbb
sbb
and
jo
lea
js
and
mov
stos
ficompl
mov
daa
push
push
fnsave
push
rolb
divl
in
shr
subl
jno
jge
es
inc
in
insb
jnp
cmp
mov
and
sarb
in
and
rcrl
fcmovb
dec
jo
aaa
loope
test
xorb
jnp
data16
mov
sbb
fstpt
leave
out
sbb
aam
pop
fcompl
js
add
out
jnp
inc
mov
jp
cltd
fisubrs
jbe
fwait
mov
push
push
jl
mov
cltd
rcll
mov
inc
dec
jmp
cmp
test
xchg
xchg
pop
rclb
sbb
insl
cmp
flds
enter
push
das
out
cwtl
push
push
mov
mov
aad
pop
and
int3
push
outsl
jae
mov
ret
daa
inc
fbstp
es
mov
add
sub
push
or
pop
enter
imul
jmp
popf
mov
lret
sub
mov
lcall
outsb
in
stc
call
mov
dec
xlat
jmp
xchg
aad
xchg
cmp
mov
xchg
addl
sbb
out
cld
cmpb
pop
test
sahf
mov
scas
cwtl
adc
dec
loopne
jbe
vmulps
pop
shll
movsb
sub
add
sub
fisubrs
addr16
cmpsl
adc
es
add
aam
mov
adc
in
js
add
mov
outsb
es
cmp
mov
sub
mov
and
adc
jns
mov
fidivl
jecxz
movsb
jg
sub
inc
or
xchg
enter
in
mov
negb
dec
xor
lret
mov
pushf
dec
js
lahf
push
dec
jno
mov
mov
cltd
push
sub
jno
pop
xor
sub
inc
in
mov
insl
enter
adc
std
mov
push
in
hlt
inc
sub
jo
push
test
push
lahf
fldt
or
jl,pn
shll
pop
insb
push
jge
sarb
icebp
cs
jecxz
mov
jg
and
cmpb
rolb
jle
xor
add
dec
sub
cli
pushf
mov
es
into
jae
call
stc
dec
sub
pop
push
movsb
inc
push
push
sarb
das
test
pop
or
inc
outsl
ss
popf
test
inc
xchg
dec
jmp
push
or
xor
into
stos
movsl
cltd
aam
pop
rorl
mov
sti
push
call
ds
aas
jnp
sar
jo
inc
ja
lahf
mov
mov
jg
or
insb
pop
push
pop
lock
dec
loopne
pop
push
cmp
cs
mov
faddl
roll
stos
or
stos
sahf
scas
mov
pop
bound
or
push
lahf
inc
pop
cmp
rol
mov
enter
in
stos
dec
inc
ja
dec
inc
test
roll
cs
and
mov
xchg
cmp
and
imul
cmp
xlat
or
mov
repz
or
xchg
in
inc
push
decb
dec
fisubs
jg
out
mov
push
mov
mov
dec
pop
cmp
jne
xorl
mov
add
mov
test
cltd
cltd
lods
cmovb
xchg
or
test
int3
sbb
mov
push
inc
add
inc
pop
jge
mov
loope
mov
repnz
mov
bound
inc
adc
pop
dec
pop
cli
adc
aad
mov
divb
and
xor
xchg
cmp
fcompl
daa
xchg
or
imul
into
pop
push
cmpsl
cmp
or
fld
push
mov
xchg
pop
or
dec
inc
test
mov
dec
outsb
adc
andb
push
sub
adc
in
subb
add
xchg
addr16
fnstsw
mov
mov
mov
je
dec
pusha
pop
std
cld
inc
add
inc
in
mov
frstor
mov
add
mov
jge
mov
sahf
push
dec
sbb
hlt
hlt
ss
mov
mov
int
cmp
ja
popf
jns
int3
mov
sub
xor
pop
pop
or
mov
lret
dec
dec
or
rorl
lds
mov
icebp
xchg
mov
ja
mov
into
fdivrs
push
mov
pop
xchg
jmp
mov
mov
inc
add
fwait
lahf
cltd
shll
jge
or
push
aaa
icebp
and
in
pop
add
dec
imul
sbb
shll
add
repnz
hlt
in
repz
aam
movd
pmaxub
stc
inc
lock
push
cmp
hlt
xchg
adc
adc
mov
mov
int3
cli
sub
les
fstps
pop
loopne
inc
popf
lods
jno
sub
mov
je
fstpl
ret
mov
test
pop
dec
sbb
dec
sbb
ja
and
jmp
dec
mov
dec
fidivrs
mov
push
adc
mov
mov
out
js
adc
fldt
loope
xchg
add
mov
outsb
fdivs
mov
pop
in
icebp
mov
dec
ret
xchg
cmp
adc
cs
outsl
popl
cmp
sub
xlat
mov
repnz
scas
dec
stc
adc
and
lret
sub
or
jmp
sbb
mov
pushf
in
add
or
lret
rcll
mov
mov
aaa
jnp
les
push
mov
aam
and
les
cs
sub
pop
inc
xchg
out
xchg
mov
xor
mov
fs
push
cmp
mov
in
cmp
cli
push
lods
cmpsb
scas
rcrl
mov
sbb
sbb
sub
add
xor
leave
sbbl
sahf
fs
push
pop
es
in
sahf
leave
push
push
dec
inc
stc
push
movsb
mov
or
sub
pop
flds
fdivrs
ret
jge
shll
push
adc
test
cmp
jns
dec
or
leave
xchg
pop
xor
lods
xchg
stc
in
enter
lds
inc
pop
sbb
stc
xchg
sub
pop
in
xchg
pmullw
pushf
xchg
or
fcmovnbe
mov
inc
test
push
pop
dec
clc
or
adc
movsl
jnp
inc
mov
stos
xor
mov
into
das
leave
inc
je
loope
push
xor
dec
or
cmp
mov
jp
pop
jo
lret
add
cld
push
adc
mov
adc
dec
fidivs
insb
ret
and
pop
enter
ret
imul
int
inc
mov
adc
daa
dec
punpcklwd
sub
bnd
bound
jecxz
mov
dec
jo
aam
jne
inc
mov
aaa
xchg
add
mov
jbe
dec
xchg
repz
pop
ds
dec
mov
push
iret
push
xchg
jno
mov
cmp
xchg
cmp
add
test
adc
popf
adc
std
cwtl
mov
pop
in
ja
jecxz
mov
adc
pop
add
iret
mov
movsl
cmp
sbb
pop
fistpl
sbb
mov
cmp
push
popa
mov
jg
out
sbb
mov
bound
xchg
cmp
dec
fcoms
sub
push
or
cld
int3
adc
xor
fildl
nop
xchg
sets
add
pop
mov
pop
pop
lret
push
inc
out
stos
or
adc
and
call
shrb
fsts
add
adc
mov
sbb
xor
adc
push
loope
add
sbb
mov
cmpsb
das
sub
sbb
movsb
push
inc
or
pop
jbe
pop
jbe
jmp
pop
xchg
fcmovnbe
xchg
mov
cltd
incb
repz
fdivr
fsubr
mov
sbb
imul
pop
scas
xchg
mov
shll
push
add
int3
sbb
mov
test
mov
test
icebp
fdivrs
movsb
or
push
mov
and
xlat
imul
out
jae
add
inc
inc
cmp
mov
adc
mull
jmp
je,pn
int
cwtl
mov
xor
sbb
add
fdivrs
and
add
sub
jg
insb
loop
jo
pop
out
sub
bound
int
cmpsl
outsl
xchg
pusha
bswap
outsb
aas
stos
mov
and
and
pop
repnz
inc
decb
into
push
psubd
movsl
dec
cmpsl
push
imull
repz
call
or
js
hlt
push
xchg
adc
lcall
outsl
bound
inc
jo
jge
aas
jae
test
das
out
lret
mov
jb
add
gs
insl
adc
xchg
mov
test
flds
jge
bound
or
lcall
imul
shlb
lret
das
sub
xor
xchg
inc
mov
ss
sub
cli
cmp
xor
pop
xchg
js
sbb
lock
stos
jo
imul
mov
out
lds
adc
jne
or
sbb
sarb
fildl
lcall
fnstsw
adc
add
movsl
pop
dec
test
loop
sbb
das
fisubrs
notb
outsb
cmpb
movzwl
out
rorl
divl
pushf
ja
insl
test
in
xchg
outsb
or
push
cmpsb
sbb
arpl
out
add
cmp
clc
sub
xchg
rcll
push
add
xor
lret
cmp
xchg
inc
and
or
adc
sub
outsb
jno
jae
add
es
jno
lock
xchg
or
dec
add
cmp
add
adc
inc
mov
in
imul
mov
mov
sbb
fwait
inc
jmp
sub
ret
push
cmpsb
sub
shlb
ss
mov
call
xchg
das
pop
fdivl
pmaxsw
std
aam
mov
movsb
or
hlt
inc
daa
mov
sbb
ret
pop
je
mov
inc
mov
xor
xor
sbb
mov
jle
frstor
xchg
in
jmp
lods
push
aam
adc
jmp
ds
sahf
testb
pop
out
inc
pusha
add
pop
mov
mov
or
cmp
inc
inc
sbb
sbb
pop
je
call
jb
into
mov
or
push
mov
or
push
mov
ret
ljmp
jp
mov
popf
ljmp
xchg
fdivr
in
not
inc
xchg
nop
in
pop
jge
mov
sbb
or
jno
and
das
jge
sbb
mov
cmp
js
sbb
rcrl
mov
repnz
xchg
inc
adcl
fimuls
adc
xor
dec
inc
or
jl
mov
bound
mov
add
stos
cwtl
loope
fwait
lds
rcl
lods
push
int
cs
mov
dec
mov
mov
sub
jl
sbbb
outsb
cmp
in
int
lds
or
dec
pop
sahf
adc
int3
cs
sbb
cmp
or
dec
or
push
testl
bound
cld
stc
sub
movsb
fwait
adc
idiv
nop
mov
dec
sbb
mov
repnz
pop
cli
or
jp
out
loop
mov
or
push
imul
push
cld
ret
das
mov
lock
movsl
jb
test
aam
or
dec
rcrl
jge
popf
nop
ret
leave
repz
pop
sti
jo
jmp
enter
in
dec
dec
inc
jbe
ljmp
jge
mov
pop
ds
daa
ljmp
xchg
add
add
jb
xor
sub
loopne
lods
imul
or
jmp
pop
jmp
jecxz
jb
mov
sbb
mov
dec
mov
rcll
cld
fdivrs
xor
jmp
pop
lock
fwait
movsb
xor
mov
mov
or
xchg
rorb
xchg
imul
nop
dec
lret
stos
inc
into
xchg
push
cltd
sub
lahf
push
inc
mov
sub
test
in
aaa
mov
mov
dec
das
jbe
shrl
push
loopne
or
lock
jmp
lret
pop
loopne
xchg
cmc
cli
push
repnz
mov
add
push
xchg
sub
fdivs
repz
fidivl
xor
cmpsb
sbb
jb
jl
ret
imul
nop
in
push
gs
incl
cs
sti
pop
loop
es
jg
pop
inc
in
mov
enter
push
es
mov
cmp
add
sub
mov
test
lahf
xchg
fldl
mov
ret
dec
add
push
movsb
or
mov
push
mov
cmpsb
mov
lret
lret
dec
fstpt
enter
lss
or
or
rcr
push
mov
shlb
adc
pop
jle
rdpmc
push
jecxz
sub
jne
out
mov
lahf
addr16
ret
aas
bound
cmp
jmp
jecxz
dec
xchg
jge
pushf
inc
aaa
pop
mov
xlat
aaa
dec
notl
mov
jae
test
cmp
sub
out
add
pop
add
repnz
sub
push
incb
mov
jecxz
push
aas
or
call
out
cmp
push
mov
or
mov
jo
cli
gs
test
ja
mov
adc
and
aad
das
dec
mov
jmp
aad
les
push
mov
int3
pop
orb
xor
jns
add
sub
cmpsb
bound
or
ja
lock
push
jl
jb
sbb
pminub
movsb
imul
test
xchg
fwait
pop
jns
cld
jmp
push
pop
xor
cs
dec
rcrb
test
es
mov
movsb
or
push
inc
int
stc
xchg
xor
pop
notb
cmp
xchg
out
dec
rcl
pop
js
jg
mov
jae
lods
popf
dec
mov
nop
aam
sub
in
dec
add
mov
imul
mov
cli
add
inc
pop
push
insl
cmpsl
aaa
inc
or
sbb
jmp
pop
ffreep
pop
out
jae
dec
cmpsl
mov
popf
sub
mov
jnp
test
fisttpl
call
xor
stc
add
mov
shll
pusha
sbb
out
add
add
xchg
dec
lea
adc
std
jle
mov
or
jnp
push
mov
xchg
fwait
pop
pop
mov
pop
sub
icebp
mulb
pop
jp
mov
push
jno
mov
fucompp
pop
mov
mov
cs
ret
mov
pop
pop
das
sub
daa
ja
pop
jg
iret
inc
jl
xor
pop
arpl
jne
lret
test
adc
sti
cmpsl
jl
pop
adc
ss
in
jo
xchg
cs
cmp
or
icebp
in
inc
fs
mov
sub
jo
xchg
cs
std
jne
cmpb
jbe
cmp
cmp
subb
xchg
lods
push
sub
dec
dec
or
xchg
sbb
jle
sub
les
pop
jns
daa
xor
mov
shll
dec
incb
xor
cmp
aad
incb
dec
or
shlb
sbb
lods
sub
cmp
in
stos
or
mov
mov
mov
ret
dec
and
sub
mov
pop
inc
scas
pop
fstl
pop
mov
les
mov
ljmp
adc
mov
fldt
lock
mov
aaa
xor
cmp
mov
sub
nop
aam
out
rcl
jl
loopne
out
jo
push
xchg
cltd
lcall
mov
imul
mov
cmc
mov
dec
xor
jl
mov
scas
adc
jnp
test
test
lret
mov
xchg
mov
jnp
bound
lods
mov
out
add
int3
dec
movsb
pop
iret
push
jnp
xchg
sbb
inc
out
and
stc
ljmp
jge
ja
xchg
xlat
fisttps
xchg
out
sub
or
ljmp
orb
fimuls
or
daa
hlt
pop
lahf
rcrl
dec
pop
ss
sbb
jne
xor
mov
xchg
test
stos
mov
cmpl
add
pop
aam
xchg
clc
sbb
data16
pop
iret
mov
pop
pusha
dec
cmp
popa
hlt
fadd
jno
dec
xchg
pop
lret
mov
sub
outsb
jmp
bound
in
jae
imul
add
ja
lahf
cmpsl
mov
sti
xor
ret
inc
inc
jnp
jo
ret
lds
dec
icebp
or
mov
cmpsl
xchg
pop
cmc
xor
add
pop
add
cli
pop
and
jne
scas
adc
inc
cmp
testb
faddp
and
rorb
xor
lret
adc
push
xchg
sub
imul
pop
push
cmp
cmp
mov
jae
jne
andnps
pusha
mov
fcoml
inc
rep
loop
sbbb
out
out
lea
mov
inc
rorl
call
int3
fisubs
inc
mov
in
rcrb
jo
cs
add
mov
jle
mov
test
arpl
sbbl
push
or
aad
pop
adc
fidivrl
cmpsb
rolb
cli
push
test
dec
stos
xchg
sbb
in
rolb
enter
jne
dec
jle
jne
sahf
mov
jl
mulb
fimuls
pop
in
adc
movsl
dec
bnd
scas
flds
and
adc
iret
aaa
stos
loopne
inc
xchg
sub
and
jecxz
adc
test
cli
add
test
loopne
out
aam
pop
out
lret
jbe
fldcw
nop
xchg
sub
or
jnp
cmp
arpl
xchg
dec
fdiv
cmc
jmp
icebp
adc
cmp
imul
sub
xor
mov
movsl
inc
repnz
test
lcall
repnz
loopne
inc
xor
bound
add
mov
aad
push
sbb
nop
inc
ljmp
cld
pop
mov
xor
dec
sbb
pop
or
sarl
push
mov
add
nop
mov
out
and
sbb
ljmp
in
stos
lods
and
test
outsb
je
dec
cmpsl
pop
cmp
cmp
dec
jmp
call
push
sbb
adc
mov
push
push
and
test
mov
bound
movsb
mov
ljmp
dec
jns
sbb
clc
je
test
cmp
jnp
pop
sub
cld
mov
inc
or
and
mov
push
and
xchg
jns
imul
add
clc
sbb
subb
sbb
push
push
add
add
sbb
push
aas
jb
or
ja
sub
mov
scas
das
and
loop
add
xlat
push
cmpsb
mov
mov
in
sbb
pushf
jb
adc
sbb
mov
setg
pop
mov
mull
pop
and
test
jb
mov
sub
inc
add
imul
ficompl
insl
and
in
fwait
divb
frstor
cmpsb
div
int3
shl
sbb
mov
sbb
lods
mov
add
pop
mov
sti
pop
orl
mov
orl
rorl
inc
jmp
cmp
pop
nop
stos
cs
mov
xor
ljmp
mov
mov
cmp
cs
jne
push
rol
stos
xchg
cmp
inc
inc
scas
jae
daa
and
add
mov
xchg
movsb
lods
dec
scas
rorb
lods
clc
inc
stos
jbe
add
xchg
cld
sbb
mov
shrl
or
adc
int3
idivl
cld
xchg
repnz
daa
push
sbb
jbe
mov
test
sbb
insl
push
xor
and
adc
adc
aas
dec
fsubrs
push
pop
inc
outsl
sbb
ror
cwtl
push
in
shr
out
cmpsb
mov
fwait
dec
jl
mov
lcall
out
cmpsl
xchg
jle
jle
sbb
outsl
out
push
mov
mov
xor
xor
push
lock
loopne
pop
mov
jge
or
xchg
cwtl
mov
gs
mov
aaa
iret
or
fisttpl
fdivrl
mov
lods
cs
rclb
or
lahf
fwait
sub
leave
mov
je
pop
frstor
cld
scas
loope
arpl
js
xchg
in
xorl
icebp
repnz
dec
movsl
rcl
clc
hlt
jg
cli
or
push
cmc
mov
std
pop
test
inc
and
mov
mov
in
adc
dec
fcomps
cs
inc
adc
cmp
test
and
jmp
inc
iret
mov
insb
adc
dec
and
scas
daa
mov
test
xchg
mov
testl
jbe
fistpl
push
xchg
aad
loopne
jb
fisubl
mov
in
out
cwtl
lret
xor
or
aad
cmp
and
je
push
pop
adc
mov
push
sahf
adc
fwait
loop
clc
xor
add
push
push
fistpl
push
xor
lahf
inc
iret
sbb
bound
dec
fdivr
iret
repz
or
test
outsb
and
dec
lea
sbb
icebp
push
xor
mov
push
adc
mov
sbb
lret
xchg
jl
sub
insb
push
pop
push
aam
and
xchg
mov
loop
enter
pop
shl
mov
xchg
dec
outsb
sahf
lea
pusha
jbe
mov
pop
push
mov
lods
ja
mov
in
mov
jbe
xor
pop
imul
movsb
and
popf
lea
sbb
xlat
sub
pop
mov
adc
xor
sbb
xchg
scas
add
enter
scas
push
int3
es
cmp
cli
mov
jns
test
push
mov
je
xor
dec
sub
mov
cmp
in
stos
mov
ja
mov
or
les
jne
and
xchg
fldcw
push
imul
xchg
and
adc
mov
sti
cmpl
jns
push
fwait
mov
xchg
jg
out
adc
popa
dec
and
dec
test
lret
lret
les
es
lock
mov
lcall
stc
ret
mov
mov
ret
outsb
jp
jecxz
jne
scas
mov
or
xchg
push
add
mov
arpl
push
cwtl
ds
call
outsl
xor
mov
dec
mov
and
jg
xchg
arpl
xor
rcll
mov
xchg
dec
push
fs
jle
fwait
int3
xor
pusha
loope
sbb
add
jnp
lret
push
mov
jae
sub
pop
shrb
stc
out
repz
mov
inc
pop
pop
xor
movsb
test
ffreep
lea
clc
cmp
movsl
add
mov
mov
mov
jo
adc
adc
inc
dec
addb
jg
hlt
out
mov
into
mov
and
xchg
cmp
xor
and
mov
inc
ja
dec
dec
mov
iret
mov
pushf
and
or
leave
sbbb
out
xchg
ds
add
movsb
out
or
rcll
push
mov
insb
ficompl
add
xor
std
xchg
mov
imul
pusha
pop
and
stos
fdivrl
inc
pop
popf
cmp
js
push
mov
inc
call
ljmp
xor
pop
mov
xchg
addr16
xchg
fsubr
mov
outsb
mov
mov
sub
dec
mov
fdivrs
pop
xchg
push
testb
sbb
dec
pop
fdivs
mov
push
xchg
xchg
pop
pop
ret
or
add
cmc
push
inc
pop
scas
test
adc
xchg
cmp
lock
dec
popa
ret
mov
adc
jge
jl
or
clc
pop
les
sub
iret
loopne
mov
addr16
xor
jns
mov
sub
scas
sub
hlt
mov
inc
dec
roll
adc
xchg
cwtl
jge
sub
xchg
add
jo
je
adc
xor
mov
popf
jo
add
mov
outsl
add
imul
cmp
and
xchg
pop
mov
icebp
movntq
std
fdiv
frstor
and
sbb
cld
lcall
xorl
adc
in
lret
inc
fnstsw
ja
cld
out
jnp
xor
ss
fwait
jecxz
mov
lock
popf
fldenv
mov
leave
inc
aas
sub
jb
pop
rcll
fidivl
mov
and
fiadds
push
inc
xchg
or
push
sbb
in
dec
mov
fisttps
cwtl
xchg
mov
inc
je
mov
adc
jns
pop
stos
push
sub
loope
out
mov
sub
push
or
adc
adc
mov
pushf
cmc
add
das
cs
jge
mov
mov
in
jmp
xlat
cmp
lods
mov
pop
lret
adc
adc
inc
popf
lods
enter
lds
in
shrb
pop
test
repz
movsl
mov
js
mov
adc
rcl
lcall
push
insl
shl
ret
idivb
sub
and
mov
inc
fildl
ret
rcrl
data16
ja
inc
and
xchg
adc
sbb
scas
stos
jp
repnz
dec
pop
jo
ja
lcall
insl
push
or
repz
and
pop
sub
sahf
shrl
jo
dec
push
add
arpl
aad
out
jmp
ljmp
lea
pop
or
push
fsts
mov
imul
sub
call
pop
mov
cmp
movb
pop
lea
lret
daa
pop
test
add
push
mov
gs
mov
jle
jnp
cmp
ljmp
and
push
ret
inc
sarb
or
insb
dec
jo
cmpsl
mov
xchg
mov
and
push
mov
xchg
mov
dec
insl
push
push
jno
mov
movsb
pop
adc
incb
loop
mov
in
imul
mov
inc
inc
mov
repnz
mov
mov
push
mov
daa
xchg
loop
cmp
lcall
jbe
call
fucom
xor
outsb
in
or
jecxz
test
gs
xchg
fldcw
into
jg
sub
lock
cmp
mov
out
or
pop
cmp
sbb
not
add
mov
mov
pop
cmpsl
jl
pop
jmp
mov
cmp
popf
jns
or
jo
outsb
mov
sub
mov
adc
jge
xor
sbb
je
or
inc
sbb
and
ss
call
movsl
stos
shrl
lret
aad
mov
inc
and
mov
test
jge
shr
push
out
aas
rcr
loop
mov
orb
cmp
in
nop
stc
psubsb
fistpl
aam
pop
push
mov
pushf
and
jle
test
shl
pushf
lods
xor
sti
mov
arpl
add
into
push
jecxz
push
jg
jge
dec
xor
aam
jecxz
jns
fs
add
adc
sbb
push
gs
mov
mov
pop
lret
push
ja
jmp
in
mov
roll
sub
stos
mulb
cld
lahf
in
add
sbb
mov
dec
sahf
or
cmp
sahf
adcl
mov
jle
add
inc
fmuls
cmpsl
popa
sbb
add
sbb
push
stc
or
clc
jae
fdivrl
xor
inc
cwtl
and
xor
movsl
dec
jg
es
test
mov
sbb
in
sbb
mov
mov
sub
repz
pop
out
repnz
or
or
loop
ds
das
xlat
mov
mov
jno
jne
mov
mov
cld
sbb
icebp
in
cltd
in
mov
xor
inc
shlb
xor
popf
and
dec
adc
push
jnp
mov
xchg
cmp
popf
cld
clc
xor
mov
sub
add
xor
mov
xchg
daa
sti
and
adc
testl
mov
dec
push
dec
mov
pop
mov
dec
push
push
dec
subb
pop
scas
mov
jb
pop
pop
push
movl
daa
adc
hlt
repnz
pop
mov
jp
mov
addr16
push
xchg
icebp
stc
and
inc
sub
fwait
push
adc
mov
sbb
xchg
sub
cli
and
dec
jge
fidivrl
cmp
cmpsl
xchg
in
leave
sub
inc
adc
jp
mov
pop
shrl
mov
cmp
lods
iret
std
hlt
repnz
leave
shr
inc
sbb
int
fcompl
and
jle
sub
cli
push
cmp
mov
push
jne
insl
mov
sbb
daa
data16
mov
push
push
jp
and
lea
sub
outsb
cmpb
cmpsb
mov
decb
xchg
adc
inc
jo
aaa
or
add
push
arpl
jg
mov
insl
mov
mov
fwait
out
outsb
mov
bound
sub
fwait
mov
push
psubsb
adc
add
adc
push
lds
mov
jo
xor
addr16
je
jp
jle
and
sub
pusha
push
nop
mov
inc
push
jecxz
test
adc
ret
cmpsl
scas
xchg
and
add
cmpsb
stos
fistpll
mov
adc
ret
inc
mov
or
out
push
push
movsl
les
bound
fisttpl
add
lea
sbb
ficoms
call
jecxz
mov
sbb
jnp
ja
cmp
jecxz
in
test
js
lea
in
js
mov
cwtl
lds
inc
mov
in
stos
mov
push
adc
sti
mov
aaa
arpl
cltd
push
lcall
testb
adc
pop
cmpsl
cs
addr16
adc
mov
lds
xchg
bound
xchg
mov
mov
inc
mov
mov
ret
outsb
cwtl
inc
push
jp
es
lods
jbe
jbe
cltd
and
cmpsb
jnp
add
xor
jne
adc
mov
push
popf
sti
dec
mov
xor
stos
mov
add
mov
adc
xchg
ffreep
jg
mov
inc
loope
je
pop
inc
imul
jo
mov
imul
into
add
or
and
jmp
push
mov
loopne
fstpl
imul
out
xor
insb
sub
cmp
mov
xor
hlt
cmovl
jle
dec
lret
les
dec
push
fcomps
cmp
cmp
sub
ja
rorl
or
pop
jne
in
cld
das
cwtl
xchg
push
push
cli
andl
repz
cmc
orl
sub
push
mov
add
mov
in
mov
in
icebp
mov
rcr
in
cmpsl
jno
das
scas
mov
int3
inc
add
imul
xor
loope
lret
mov
add
pop
nop
bound
pusha
mov
jecxz,pn
stos
cmpsb
mov
add
loopne
popf
sub
pushf
mov
push
outsl
clc
stos
jmp
inc
pop
adc
mov
jbe
cli
stos
mov
pusha
push
xor
scas
call
jae
pushf
push
add
fdiv
pusha
push
arpl
mov
inc
sub
sub
sub
xor
dec
mov
loope
out
pop
mov
sub
stos
jle
mov
sub
cmp
test
sub
xor
lret
pop
add
cmp
aas
imul
int3
outsl
stos
rorl
call
test
es
fistpl
sahf
mov
cltd
aam
sub
icebp
pushf
add
in
pusha
loope
movsl
popf
sub
sar
sbb
jbe
xchg
dec
xor
lcall
loopne
hlt
es
xor
outsb
jne
xchg
in
or
xchg
cmp
pop
stos
xchg
ret
out
andb
addl
xchg
in
inc
push
mov
sub
mov
aam
adc
test
loopne
sub
sbb
push
mov
dec
pop
xchg
out
xchg
enter
sbb
ffreep
out
lods
fbld
xchg
jecxz
nop
leave
pop
dec
imul
int3
inc
xor
cmpsl
add
xor
nop
dec
aam
and
stos
xor
in
jbe
cmp
aaa
pop
test
dec
add
lods
ret
pop
mov
inc
or
xchg
jl
adc
les
imul
inc
fisttps
push
push
dec
push
jne
in
dec
lods
into
cwtl
shr
out
mov
pop
lcall
js
lret
insb
lods
mov
xor
pop
lcall
repz
dec
add
addr16
stos
daa
jno
mov
ja
mov
loopne
and
adc
xor
mov
stos
jo
fcmovnu
int
dec
pop
pop
adc
test
or
cmc
dec
gs
stos
mov
jmp
out
nop
loop
sub
mov
clc
ja
addr16
add
call
lcall
mov
sar
cmp
pushf
inc
pop
les
ror
fsts
add
inc
inc
mov
call
out
jne
js
in
shrl
push
and
test
or
shll
fst
xchg
faddp
jmp
stos
and
cwtl
lcall
sub
cmp
pop
push
sti
cmp
and
cli
mov
icebp
add
and
pop
cmpl
fiadds
sub
adc
inc
inc
add
fucomi
lahf
dec
cs
popa
xchg
fwait
add
or
leave
adc
ds
mov
sbb
enter
cmp
add
cmpsl
jns
cmpsb
daa
xor
xor
outsb
and
and
pop
and
jge
loope
adc
dec
push
jne
pop
adc
and
inc
push
sub
ljmp
fucomip
stc
rcll
sbb
push
adc
mov
mov
enter
jae
lea
jl
adcb
pusha
and
outsl
int3
inc
xchg
mov
xchg
gs
mov
cmc
xchg
in
pop
out
movsb
jae
pushf
daa
pop
dec
popa
ret
inc
mov
std
push
dec
mov
mov
pop
fdiv
push
add
outsb
imul
xor
pop
mov
sub
cmp
int3
xlat
cmp
dec
fldenv
test
stos
fistl
movb
mov
loopne
sbb
mov
hlt
pushf
push
stos
aad
xor
in
in
cs
push
mov
stos
addb
push
jle
cmp
enter
insb
inc
test
sbb
add
lock
mov
add
stos
pop
fs
add
cmp
jg
inc
outsb
test
cmpsl
mov
sahf
shrb
ljmp
cmp
adc
push
repz
mov
cltd
jg
fiaddl
movsl
mov
jmp
icebp
loope
pop
hlt
jnp
jg
imul
cld
mov
jo
and
loop
in
subl
adc
in
xor
adc
sbb
mov
outsl
out
mov
out
sbb
adc
mov
or
mov
jbe
pop
fdiv
cli
addr16
aad
popl
cmpsw
pop
push
das
jge
es
cltd
dec
jl
pop
lods
ss
daa
mov
insl
cmp
out
test
into
aas
movsb
xor
repz
mov
sub
xchg
pop
neg
xchg
cmpsb
fcomip
cmp
or
push
jne
arpl
mov
jl
push
pop
push
mov
test
and
cmp
cmp
outsl
xchg
into
ficompl
repnz
inc
mov
dec
adc
js
mov
push
lods
inc
pop
ljmp
jmp
pop
sub
iret
ret
pop
and
push
rol
lds
pop
adc
dec
test
jmp
sub
sub
mov
adc
clc
cmp
loop
outsl
inc
fistpll
subl
sub
out
add
sub
xchg
pop
sti
cmp
sbb
sti
cmp
push
adc
adc
div
mov
xor
lahf
fistpl
inc
push
cmc
insb
pop
dec
inc
add
adc
adc
jmp
test
dec
imul
dec
in
aas
movsl
insl
mov
jmp
out
jno
cmp
lock
stos
inc
lods
testb
adc
in
pop
xchg
adc
arpl
and
jbe
mov
fisttpl
add
xchg
xor
jmp
outsb
add
out
call
cmp
outsl
les
sbb
xor
stc
cs
pop
and
or
or
jne
add
aam
sarl
cmp
aaa
jae
sbb
aad
jl
pop
lcall
push
push
std
cli
test
dec
out
push
push
mov
pop
lea
adc
pusha
sub
add
xchg
push
sar
stc
or
cltd
sub
cld
mov
xor
and
std
fldl
jmp
cmp
jl
dec
inc
sub
sub
lds
push
inc
dec
xor
lret
fcomps
loopne
mov
std
and
xlat
les
arpl
sbb
sbbl
fimull
nop
push
lret
imul
mov
incl
inc
mov
dec
cmp
or
sbbl
inc
adc
cmc
mov
into
and
out
ficoml
cld
popf
jl
mov
pop
aad
mov
or
fimull
inc
ja
data16
jl
cmp
out
inc
push
add
or
lcall
sbb
fistpll
lcall
adc
scas
jns
popa
bound
icebp
mov
insb
xchg
movsb
bnd
scas
notl
pop
adc
xor
and
jg
hlt
pop
pop
xor
mov
mov
pop
cmp
ficoms
imul
test
loop
aas
push
divl
mov
jge
rorb
sub
mov
pop
push
mov
xlat
xor
or
jb
addl
xchg
scas
push
adc
scas
dec
jmp
int
sub
fs
leave
pop
and
xchg
fadd
jge
mov
adc
nop
subl
push
test
test
dec
sub
add
in
inc
cmp
sti
dec
xchg
dec
nop
pop
test
scas
dec
inc
call
xor
push
xchg
push
sbb
dec
mov
sbb
mov
sbb
mov
jo
idivb
add
addr16
mov
fs
and
xor
dec
push
pop
mov
mov
xchg
dec
sbb
add
outsb
inc
out
frstor
int
jmp
test
fmuls
fwait
insb
adc
outsb
jmp
sbb
mov
pop
and
dec
xchg
mov
popf
jecxz
jl
cld
mov
fadds
push
imull
pop
arpl
mov
leave
mov
ret
or
mov
dec
popa
inc
pop
scas
mov
inc
out
add
nop
fsubr
push
pop
shll
cmp
mov
cwtl
loope
cmpsl
leave
aas
add
pop
add
cmp
push
pop
pop
pop
ficoml
or
nop
inc
scas
cmp
cmp
subb
or
cmpsl
push
stos
mov
out
pop
lock
mov
add
push
aad
xchg
aam
icebp
aaa
cmpsb
jl
push
push
fldenv
incl
pushf
inc
test
sarb
repnz
in
mov
outsl
push
dec
cltd
stos
mov
sarl
mov
cmp
mov
ljmp
inc
test
jbe
out
dec
cwtl
inc
push
popa
jg
push
dec
sub
xor
sti
mov
jbe
cmp
pop
aad
aaa
in
ret
mov
jle
push
sahf
cmp
je
hlt
pop
dec
mov
les
xchg
and
or
movsl
arpl
sbb
shl
daa
loop
les
sub
xor
or
fwait
call
lret
and
xor
lock
dec
out
fwait
xor
mov
dec
jbe
das
push
fcoms
xlat
push
add
adc
rcrl
add
mov
stos
or
xor
pop
movb
and
pop
and
dec
cmp
and
push
sbb
push
mov
mov
pop
pop
mov
ja
fidivrs
js
fwait
xchg
ljmp
xchg
pop
aaa
int3
mov
pop
mov
mov
push
cld
out
xor
mov
push
es
sub
jmp
inc
xor
xlat
lret
mov
test
int
popf
es
sti
std
mov
or
fidivrl
int3
and
push
fcompl
dec
repnz
stc
sub
mov
xchg
push
cld
jl
stos
push
xlat
jle
insb
add
lods
lret
and
scas
dec
mov
repnz
imul
cmp
aas
cmp
nop
add
cmpsl
loope
loopne
inc
gs
add
gs
iret
ret
xor
pop
jmp
cmp
sbb
nop
ror
xchg
lcall
leave
ret
or
inc
adcl
shl
cltd
jne
adc
inc
outsb
mov
iret
inc
xor
xor
repnz
sub
mov
pop
mov
xchg
aaa
xor
not
sbb
pop
insb
inc
and
xor
dec
or
jp
leave
loope
lcall
loop
pop
dec
pop
aad
mov
ss
pop
movsb
fldt
sti
dec
xor
xchg
mov
lret
mov
cld
lret
hlt
cltd
fdiv
xor
add
dec
or
push
into
jecxz
int3
sub
into
xorb
cwtl
in
js
adc
xor
iret
jnp
cmpsb
lcall
loop
test
inc
fistps
out
mov
push
aad
push
daa
mov
lods
fisubrs
push
and
sbb
adc
and
int3
fimuls
cmpl
ja
or
jl
mov
out
or
inc
and
sub
lods
hlt
xchg
adc
pop
inc
xlat
sub
push
mov
cmp
jg
call
xlat
adc
adc
faddl
push
mov
rcrl
test
ret
and
pop
mov
hlt
push
repnz
sti
mov
or
rcr
dec
dec
xchg
cli
lods
cld
pop
pop
xchg
ror
inc
push
fnsave
int3
repz
mov
lahf
psubq
add
cli
xor
dec
fs
xchg
pop
fisubrs
mov
cmc
test
adc
push
fsubrl
andb
fistpl
add
push
data16
mov
pop
not
mov
jmp
or
adc
xor
mov
inc
jmp
in
mov
loop
push
movsl
sbb
dec
addr16
xor
ja
aas
inc
mov
fldl
incl
dec
and
loop
push
or
xchg
fsubrs
add
lock
jge
mov
sbb
sbb
jne
pop
fwait
add
outsl
lahf
mov
rcll
jmp
and
dec
stc
fs
push
mov
sbb
shll
jecxz
mov
sbb
icebp
mov
cltd
jnp
arpl
in
jnp
aaa
rcrl
mov
xchg
ljmp
aas
icebp
sub
loopne
or
cmp
sbb
xor
push
movsl
jecxz
js
stc
enter
int3
jge
jmp
xor
jl
cli
jnp
jp
add
mov
inc
clc
xlat
subl
enter
je
sub
jne
mulb
mov
pop
sbb
xor
add
cmc
push
cmp
sub
lds
ljmpw
subb
mov
call
stc
rorl
out
cld
dec
xchg
sti
cli
adc
adc
mov
pop
pusha
or
test
xchg
mov
mov
push
sub
and
sbb
sub
xchg
loop
push
daa
rcll
pop
cmp
push
lods
push
out
mov
sahf
xchg
inc
dec
adc
mov
call
jbe
xor
add
lods
cmpsb
mov
mov
pop
or
push
int
sbb
orl
fsubrl
filds
clc
xor
lods
arpl
inc
mov
addb
lds
popa
andl
enter
repnz
movsl
or
int3
jb
lods
pop
lea
pop
jg
mov
and
inc
push
dec
cmp
stos
ret
lods
push
adc
pop
jp
sub
mov
gs
or
cmc
xor
dec
lea
ficompl
pop
ja
imul
or
or
and
ret
mov
in
out
or
mov
jo
daa
xor
dec
ljmp
inc
cmp
push
fistl
pop
jne
in
fstps
mov
add
push
scas
xchg
into
lds
pop
cmpsl
dec
test
call
bound
xchg
sarb
and
cmp
sub
in
fisubrs
stos
xchg
add
hlt
push
aam
leave
stc
pop
dec
int
or
xor
adc
movsb
push
mov
and
ffree
pop
lea
add
inc
insb
push
pop
pop
sub
pop
cmp
xchg
int3
mov
inc
mov
cmpsb
cmp
stos
sub
stos
out
cmp
push
cmp
xlat
adc
clc
push
ss
aam
cmpl
movl
repz
sti
mov
dec
jg
mov
test
lret
pop
pop
cmp
fisttpll
pop
xchg
cwtl
push
dec
ss
add
mov
fsts
adc
pop
cmp
int3
cmp
mov
xchg
out
pop
aaa
movsb
out
jno
jno
mov
and
addr16
jne
movb
rorl
sub
stos
sahf
ficomps
movsl
xor
in
repz
mov
mov
dec
sub
dec
dec
cs
push
or
xchg
xchg
sbb
icebp
enter
jg
jb
test
sub
imul
adc
push
movl
shld
outsb
sub
push
fsts
or
inc
ds
js
fs
out
cld
lods
sbb
inc
stos
int
rcrl
mov
xchg
and
push
push
push
xchg
cmpsl
xchg
cld
test
xlat
jbe
or
lods
xor
jl
mov
jge
fs
adc
fs
xchg
cltd
dec
adc
and
add
mov
pushf
int
cmp
mov
lret
mov
out
test
js
or
mov
sub
fwait
add
bound
jo
adc
insb
add
inc
leave
jmp
dec
and
and
rsqrtps
add
std
sbb
sub
add
in
ret
mov
xchg
jl
and
jbe
ret
in
add
xchg
cmp
test
add
fwait
jbe
add
les
loop
ss
mov
mov
cmc
dec
xchg
mov
stc
ljmp
in
mov
dec
or
jecxz
test
repz
pop
outsb
scas
and
das
lods
out
in
testb
push
cmp
pop
cmp
and
cmp
pop
das
ljmp
mov
cli
ret
lret
adc
sarb
push
sub
leave
lds
sub
jne
ret
into
dec
mov
loope
push
in
dec
cld
cmpsb
stos
ret
mov
pop
lahf
pop
sub
push
dec
xchg
cld
leave
leave
shll
sub
mov
push
cmpsb
mov
cmpl
push
and
popa
mull
out
xchg
test
loopne
in
add
fiaddl
add
sar
repz
cmp
fxch
sub
adc
outsl
into
pop
int3
fwait
aas
push
lods
ja
sub
pop
pop
bound
dec
stos
shll
scas
jae
and
sub
lret
ja
fnsave
inc
xchg
jnp
jle
mov
push
sub
adcb
movsb
xor
shrl
mov
and
mov
sti
sbb
ret
pop
pop
ret
dec
notl
fwait
out
adc
out
mov
je
loop
jp
mov
jmp
fs
lret
and
mov
pop
mov
sti
out
pop
icebp
cmp
mov
shrl
mov
lods
popa
andl
or
mov
aam
fildl
mov
jnp
mov
mov
lock
scas
add
aam
lods
cmp
mov
mov
add
push
jnp
lcall
xchg
sub
inc
dec
addb
inc
add
xchg
pop
stos
mov
dec
lea
push
rcrb
adc
cli
sub
dec
inc
insl
mov
inc
and
dec
push
aam
ret
frstor
and
out
int
pop
or
adc
lods
ror
arpl
movsb
rorl
sub
jb
lock
loopne
push
and
jae
enter
pop
repz
shl
int3
out
or
add
in
dec
mull
icebp
xor
std
iret
sti
adc
enter
pop
sbb
pushf
fldenv
gs
pop
lea
inc
ja
xor
push
jae
mov
pusha
or
mov
cmp
jle
insl
pop
cltd
inc
imul
out
out
sbb
out
js
xlat
add
jne
movsb
sbb
cs
sbbl
pop
sahf
xor
in
dec
mov
add
sub
fisttpl
cmp
sub
jae
aam
mov
mov
inc
orb
lock
clc
pop
mov
jbe
imul
std
push
loopne
push
in
add
jno
mov
and
fwait
jbe
in
cmp
or
xor
sti
add
jne
and
push
pop
xor
jg
insb
xor
aam
outsl
insl
xchg
add
mov
lea
inc
jne
data16
aam
nop
es
test
imul
in
fiaddl
sti
loop
mov
repnz
popf
ss
std
mov
jl
pop
dec
mov
inc
cwtl
pop
push
sbb
imul
andl
loop
adcl
sbb
in
jp
mov
push
mov
mov
adc
sbb
dec
mov
inc
int
std
call
add
cs
in
in
mov
dec
lock
lahf
popa
and
stc
xor
testl
jno
imul
fisubl
fldl
loop
xchg
insl
pop
shrl
add
out
into
pop
in
push
test
clc
repz
fwait
mov
insl
or
movsl
and
push
sbb
mov
stos
icebp
mov
ret
xor
loopne
pop
fcmovb
fsubrp
enter
sarl
push
add
push
push
insl
push
lock
sub
pop
arpl
mov
cmp
push
sbb
xchg
test
repnz
lods
ficoms
cmpb
fchs
scas
pushf
add
xlat
lret
inc
inc
jecxz
testl
xor
lret
pop
dec
in
in
testb
out
adc
mov
je
pusha
sbb
sbb
adc
push
int3
stos
jae
movsb
inc
inc
cmp
sbb
movsb
aaa
in
sub
cmpsl
and
adcl
fsubr
dec
addr16
lcall
popa
fwait
push
test
fcmovnb
jae
shl
add
adc
xor
xchg
push
jne
repnz
mov
mov
sbb
ret
stc
gs
pop
rcll
cmp
scas
stos
adc
hlt
xchg
or
sub
xchg
insb
fwait
xor
ja,pn
cltd
les
das
jae
mov
pop
add
fwait
xchg
fstps
insb
fistl
imul
xor
in
mov
scas
xchg
in
js
and
jns
and
mov
push
jno
add
xchg
jns
sbb
jg
arpl
mov
lea
xchg
fdivrs
lods
icebp
mov
aas
dec
add
or
push
jle
jl
mov
jbe
lahf
xchg
push
jle
into
mov
dec
je
imull
notb
stos
stc
mov
xchg
or
dec
int
mov
aas
sti
fs
inc
push
jp
out
andl
fwait
jns
sbb
jg
data16
push
movsl
ret
xchg
pop
xchg
les
push
mov
pushf
mov
imul
lds
dec
rol
cs
mov
scas
dec
pop
or
popa
pop
add
inc
js
jns
test
lcall
mov
arpl
xchg
repnz
jnp,pt
addb
pushf
cmpsb
call
scas
out
xor
cmp
xor
mov
mov
aas
mov
sub
ret
and
push
in
int3
xchg
cmpsb
addw
mov
sub
insb
rcrl
outsb
mov
fdiv
dec
imul
aad
add
xor
stos
sub
icebp
rcrb
es
das
push
ss
xchg
push
dec
test
xchg
adc
jp
xchg
xor
xor
sub
push
adc
aad
mov
push
xchg
mov
cwtl
mov
sub
shlb
jmp
jmp
rorb
leave
inc
xchg
std
or
test
inc
int
sub
jae
pop
outsb
mov
pop
or
pop
loop
sbb
xchg
sbbb
jle
es
jle
dec
leave
mov
rorl
pop
jl
rolb
into
pop
push
jl
mov
test
mov
in
in
scas
cmp
loop
addb
out
imul
or
in
cwtl
jns
sub
push
mov
xchg
cmp
and
add
in
call
into
cmp
pop
fs
xlat
inc
push
das
int3
or
test
scas
dec
pop
bound
fldt
jmp
mov
lods
shll
stos
add
imul
out
cmpsb
sarb
dec
cmc
out
lods
sbb
stc
cmp
andl
incl
push
movsl
jle
mov
fadds
pushl
pop
jmp
jg
or
in
repnz
sub
push
stc
sbb
or
test
loope
out
jo
in
dec
pop
sbb
sub
subps
jne
ret
out
ret
incb
push
cmp
jl
icebp
stc
add
inc
enter
data16
fdivrp
and
and
stos
add
push
mov
in
sahf
cld
xor
dec
mov
cmp
popf
gs
repz
pop
push
jno
js
out
leave
out
and
xchg
ret
mov
loope
dec
mov
fs
mov
enter
psubd
int
or
inc
xchg
and
lahf
imul
cltd
or
notl
xor
mov
add
and
mov
test
cwtl
aad
lcall
xchg
shr
je
sti
sbb
inc
bound
pop
fisubrl
mov
cmpsl
data16
std
sti
mov
mov
sub
jle
mov
mov
arpl
or
aam
push
je
jmp
add
push
or
call
push
fidivl
popf
pop
pop
ss
push
faddl
pop
xchg
push
jmp
mov
std
shrl
xor
sub
pushf
pop
xchg
xchg
hlt
fcmovb
fwait
nop
mov
mov
push
cwtl
pop
xor
xchg
insb
jl
imul
pop
pushw
loopne
dec
bound
cs
xor
ret
adc
and
in
es
aad
lahf
inc
lea
lret
es
xchg
sub
adc
repnz
mov
dec
fcom
inc
push
cmp
call
cmp
cwtl
push
jb
jge
push
pusha
xor
into
add
mov
inc
xlat
jns
lds
xlat
call
cmpsb
sbb
adc
inc
cmc
adc
lret
out
jg
sub
xor
daa
mov
pop
xlat
mov
inc
seta
dec
stos
jb
or
ret
mov
push
jo
push
push
sahf
push
jle
dec
roll
inc
add
jg
mov
inc
in
js
cli
lahf
mov
add
fldenv
stc
mov
mov
subl
hlt
shlb
xchg
cmc
add
repnz
mov
loopne
mov
sti
loop
out
cmpsb
popf
sbb
shll
pop
pop
or
repz
jle
cld
sbb
bnd
and
xor
adc
pop
dec
aaa
adc
pushf
or
and
iret
setno
movsb
mov
xchg
inc
jp
sub
push
mov
lahf
repnz
lahf
push
jbe
cmp
or
pop
pusha
push
in
pop
fdiv
enter
je
jne
or
clc
cmp
rcrl
loope
pusha
push
push
xor
loope
sar
dec
mov
jmp
mov
iret
lods
pop
je
orb
sbb
add
test
cmp
push
cltd
movsb
loope
in
xchg
xchg
stos
jecxz
aas
imul
dec
pop
pusha
pop
jo
testb
mov
push
add
div
aas
dec
cmp
inc
pop
ss
std
xchg
lea
dec
or
push
jnp
fwait
punpckldq
jno
adc
daa
or
popa
test
adc
test
cmpl
shlb
mov
inc
add
pop
or
xor
jmp
dec
call
or
mov
xchg
sti
add
and
lea
adc
push
push
jae
cmp
adc
arpl
xchg
jbe
cld
cmp
call
jl
cmp
adc
mov
jl
inc
mov
les
in
mov
inc
push
pop
jl
cmpsb
int
xchg
daa
pushf
sbb
dec
sub
ljmp
repnz
mov
cs
daa
das
fists
aas
into
push
clc
sbb
jge
movsl
add
xchg
repnz
sub
mov
scas
inc
push
or
pop
cmp
mov
insb
and
repz
push
mov
movb
cmp
and
sub
adc
cmp
loopne
movsb
push
int3
test
pop
mov
push
aad
and
sbb
push
iret
pop
push
inc
lds
jecxz
dec
aaa
sar
into
pop
inc
cmp
xchg
pop
pushf
xchg
add
push
fidivrs
rolb
sbb
sub
or
test
adc
out
ss
jnp
je
cmpsb
stos
popf
ds
cltd
push
cmc
and
sub
lret
xchg
sub
push
daa
and
mov
daa
test
repnz
mov
jae
leave
push
movsb
popa
mov
in
addr16
mov
inc
lret
aad
mov
test
lea
loop
lods
adc
test
mov
mov
jae
testl
outsb
and
pop
jmp
dec
mov
daa
fwait
and
or
popa
int
aas
mov
negl
movsb
pop
cwtl
xchg
sub
sbb
adc
hlt
cmp
dec
lcall
mov
mov
lods
sub
ret
mov
push
cmp
pop
pop
or
cmp
sub
cmpsl
sahf
cmp
sbb
jne
push
xor
and
sbb
xchg
xor
repnz
push
popf
sbb
cmp
push
sbb
setnp
adc
mov
jmp
xor
inc
sbb
iret
imul
xorl
pop
or
sbb
hlt
dec
gs
xchg
xor
stc
iret
and
sub
mov
bound
bound
rol
jmp
stos
jge
popf
sub
cmpsb
insb
jl
xor
shlb
imul
jae
adc
xchg
jo
out
sar
daa
inc
call
xor
insb
cmc
inc
fldl
inc
cmp
out
ljmp
sahf
jecxz
imul
push
xchg
mov
je
dec
lcall
mov
dec
xor
cltd
xchg
xor
int
leave
jnp
addr16
cld
in
sub
out
imul
or
sub
cmp
cmp
jae
outsl
push
stos
jnp
pop
dec
flds
aad
lods
hlt
pop
das
aas
inc
sbbb
stc
cmp
ja
xchg
cli
inc
pop
sbb
frstor
adc
scas
imul
and
sbb
in
mov
cmp
pop
push
pop
sbbl
xchg
mov
mov
dec
xor
loope
pop
das
adc
mov
mov
dec
aaa
bound
mov
imul
sbb
stos
sub
insl
xchg
mov
push
and
and
sarb
push
cld
ja
loopne
mov
inc
xchg
lea
mov
mov
pushw
inc
add
add
mov
pusha
jae
mov
adc
xchg
lods
add
test
cmp
xlat
ja
lea
fnstsw
cli
xchg
hlt
fimull
mov
dec
ss
pop
pop
lret
jle
imul
mov
or
popa
leave
into
or
test
clc
sub
cli
cmc
sbbl
dec
hlt
jnp
xchg
xchg
mov
cmp
aas
dec
bound
jns
outsb
mov
xchg
or
mov
adc
push
xchg
dec
ror
xchg
mov
aas
adc
rclb
rorl
jmp
das
add
adc
jmp
push
xchg
xor
lods
iret
cmp
xor
in
cmpsb
mov
sub
pop
ret
pop
int
sub
inc
sub
jmp
cwtl
daa
inc
xchg
add
push
stos
adc
jne
popl
scas
push
sub
nop
push
loope
scas
push
mov
arpl
xchg
daa
gs
dec
fadds
je
cmovae
in
dec
mov
mov
test
repnz
clc
maskmovq
testl
add
cmpsl
jno
jle
mov
mov
es
adc
fidivrs
mov
sahf
aaa
and
iret
mov
sbb
and
out
sub
mov
push
and
fdivr
sbb
push
mov
xchg
pop
in
les
push
adc
jbe
lods
aad
je
pop
jb
adc
xlat
jle
push
jmp
mull
jae
push
icebp
pop
and
mov
or
movsl
push
push
rclb
inc
push
push
cmp
mov
sbb
pop
out
cmp
pusha
sti
sbb
inc
ret
lea
pop
and
add
xlat
adc
idiv
es
inc
sub
dec
bound
stc
cmp
pop
sub
out
sbb
or
fmull
rcll
mov
xor
push
or
add
or
pop
mov
into
scas
xchg
mov
add
data16
cmp
jg
mov
rorl
mov
cmp
imul
dec
cmpsb
lret
int3
mov
or
xchg
mov
push
sti
pop
in
das
cmpsb
mov
cmp
popf
jb
ret
addr16
inc
cmp
push
idivl
fwait
popaw
and
sub
loop
mov
cmp
int3
sti
cld
inc
xlat
push
fwait
add
notb
inc
fnstcw
insb
mov
mov
push
ja
insl
popf
pop
and
inc
stos
push
out
jecxz
jp
dec
dec
cmp
repz
jp
dec
push
lahf
decb
jg
dec
adc
daa
cmpsb
into
pop
movsl
pop
fldcw
ret
arpl
test
addb
mulb
mov
cmp
roll
sti
mov
xlat
and
imul
xor
push
mov
or
jg,pn
pusha
dec
cmc
repz
or
mov
xor
addr16
int3
aam
call
add
shlb
sbb
jo
scas
sarb
pop
adc
leave
fists
add
or
and
pop
and
mov
fisttpll
adc
rcrl
or
mov
push
mov
rorb
mov
js
popa
pop
and
pusha
add
pushf
jnp
and
cmp
orl
test
addr16
add
daa
sahf
pop
insb
and
sbb
add
push
push
in
push
mov
in
out
mov
imul
insb
pop
or
xchg
push
inc
xchg
stos
in
cmp
movsl
aam
ds
loope
cwtl
sub
pop
testb
mov
aas
mov
fiaddl
in
xor
fs
arpl
icebp
sub
mov
ret
xchg
mov
subb
inc
es
popa
sub
mov
fmuls
add
jo
dec
sub
fwait
cmpsl
mov
cltd
cmp
scas
jg
cmp
loope
daa
push
fs
sbb
in
sub
int3
mov
bound
push
cmp
pop
in
jo
aam
int3
xchg
jo
imul
sbb
dec
je
and
xlat
mov
add
mov
pop
cld
pushf
inc
test
test
adc
and
inc
jo
cmp
arpl
xchg
inc
mov
push
cmpl
push
sub
pop
cmp
xor
clc
loopne
data16
insb
cltd
shl
mov
repz
mov
or
in
fwait
push
jp
pop
or
jle
bound
dec
insb
pop
xchg
clc
mov
inc
xor
and
sub
ljmp
mov
int
mov
imul
cmpl
mov
add
out
push
adcb
imul
gs
lret
adc
clc
mov
xor
imul
sbb
or
enter
lahf
orl
test
in
pop
insb
repz
cmp
dec
pop
jl
cmp
cmp
inc
xor
fwait
sbb
xchg
int3
vpsubsb
mov
ds
cmp
insl
gs
xchg
orl
push
daa
xchg
and
sub
lods
mov
div
sbb
mov
insb
stc
into
jnp
scas
sbb
jae
in
cmpsb
mov
aas
add
cmp
dec
sub
dec
call
xchg
inc
test
movsb
jge
sub
sub
jo
xchg
cwtl
jo
jno
das
setae
imul
int
dec
jp
les
aaa
jmp
int3
jle
lods
dec
dec
mov
lods
fsub
mov
mov
ja
jno
lret
sahf
subb
jns
push
stc
div
cmp
mov
jmp
mov
ret
in
aas
leave
scas
inc
pop
cmp
jge
clc
out
sub
push
sub
xchg
mov
fisttpl
jno
mov
mov
pop
nop
inc
or
sbb
add
cmp
shrb
adc
add
mov
fimull
cld
fnstenv
mov
pop
mov
cmpsl
push
fwait
add
xchg
mov
and
sbb
or
mov
push
out
out
inc
mov
sub
jl
mov
out
rcll
jl
or
jae
xor
mov
loopne
mov
lods
xchg
jae
mov
fcomip
arpl
pop
jno
pop
mov
mov
out
add
icebp
pop
push
out
pop
mov
jl
cltd
sub
pop
subl
mov
push
out
test
push
pop
add
js
pusha
push
hlt
cmc
jp
lret
push
inc
adc
fisubl
lret
mov
cmp
xchg
sub
out
cmp
sub
out
hlt
js
cmp
in
mov
daa
mov
cld
cmp
aad
pop
xor
jne
arpl
cmpsl
mov
testl
inc
inc
add
cld
jp
rorb
mov
push
jmp
sbb
cmp
sti
imul
imul
inc
xor
dec
mov
aad
dec
sub
mov
push
iret
ds
pop
out
mov
fs
xchg
add
dec
div
loopne
popf
pop
jb
dec
inc
sbbl
sub
xor
inc
mov
pop
jne
jnp
lcall
jns
dec
mov
add
mov
or
faddl
xor
aaa
push
lods
push
aaa
fistpll
std
or
mov
stos
stc
mov
fstps
sbb
cli
jns
inc
sbb
cs
jb
inc
bnd
pop
add
das
cmp
xchg
test
lret
int3
xchg
mov
mov
add
jo
mov
dec
mov
nop
mov
add
and
dec
mov
das
mov
pop
inc
in
cmp
jecxz
movb
ss
inc
ljmp
xchg
xchg
mov
orl
or
aad
pop
fwait
dec
push
pushf
mov
push
loopne
adc
leave
pop
cmpsl
int3
or
imul
movsl
xchg
pushl
or
xchg
add
mov
popa
or
es
scas
subb
lahf
jo
rclb
cmp
add
nop
xchg
cmp
lahf
mov
push
sbb
push
data16
aas
jecxz,pt
dec
push
xor
mov
xchg
mov
jmp
test
popf
enter
fildll
stc
lds
aaa
xchg
sub
add
adc
cmp
or
jnp
rcrb
pop
add
pop
sbb
or
cmp
rcll
inc
add
insb
xchg
lds
or
scas
decl
lahf
push
pop
mov
out
imul
in
fwait
push
jg
pop
gs
in
and
push
and
ret
pop
jg
fnstsw
adcb
leave
push
adc
or
dec
mov
addr16
repz
insl
or
jne
ficoms
xor
pop
stos
test
sbb
aam
fstp
icebp
push
jg
data16
push
out
push
test
sahf
ljmp
pusha
xchg
test
push
jmp
inc
mov
adc
loopne
popa
xorb
out
jle
dec
and
cmpsl
sub
hlt
bound
push
mov
pusha
sub
repz
inc
pusha
sbb
fldcw
pushf
cmc
ljmp
xor
add
aas
lock
ss
aas
dec
sahf
inc
mov
test
cmp
rorb
jnp
inc
cmp
inc
fcomps
test
out
mov
or
and
js
xchg
dec
push
enter
mov
add
and
and
jb
sbb
mov
cmp
sub
fistps
loop
shlb
xor
pause
jecxz
jns
fnstenv
jle
xor
fdivl
imul
or
inc
jg
fmul
cwtl
xchg
lods
xlat
jg
push
xchg
adc
mov
or
add
or
add
sub
dec
js
mov
adc
pop
loope
push
pop
mov
arpl
mov
xor
jmp
push
xlat
jne
icebp
xor
andl
insb
sbb
mov
pop
add
adcl
sbbl
sub
ret
repz
add
dec
lock
ss
sbb
lahf
pop
sub
cmova
dec
and
dec
lock
sbb
lock
rol
xlat
mov
sti
ja
out
jns
stos
lcall
mov
mov
lock
dec
addl
scas
push
ficoms
sub
cmp
jo
push
pop
int3
stc
ds
cmp
incl
push
mov
push
cmp
xlat
mov
in
xchg
mov
icebp
xchg
sti
and
adcl
sbb
in
adc
cli
addb
mov
or
sub
arpl
je
push
sbb
enter
dec
mov
stos
stos
adc
cld
cmp
cmp
test
sub
and
jnp
div
dec
xlat
mov
cmp
mov
add
jge
xchg
hlt
aad
out
and
lds
adc
dec
push
cmpsl
sbb
jnp
jns
insb
das
mov
adc
sub
lods
movsb
addl
pop
adc
mov
dec
shrl
test
mov
dec
jecxz
mov
repnz
cmp
lds
repnz
inc
add
shlb
adc
mov
xchg
sbb
dec
adc
jmp
jns
lret
mov
rcrl
or
fdivp
mov
inc
xchg
mov
shll
fisubrl
sub
cs
lea
aad
dec
mov
xchg
pop
mov
sub
lods
cltd
insb
cmp
sub
mov
scas
ret
cs
loop
test
xchg
dec
ljmp
loope
adc
xor
or
aam
bound
jg
out
scas
pop
in
mov
imul
push
xor
scas
jae
pop
fwait
pop
xchg
test
in
push
lock
pop
subb
push
popf
sub
push
cmp
out
adc
out
push
mov
xorl
mov
les
sbb
mov
lock
cmp
cs
or
xchg
mov
add
ja
insl
sti
loope
xor
sbb
dec
jbe
cmp
mov
jp
and
test
mov
leave
mov
push
shlb
push
xor
cmp
cmc
dec
add
pop
push
les
cmp
aad
pop
xor
out
jmp
in
pop
jb
xor
push
adc
mov
mov
mov
sbb
lea
adc
mov
inc
sub
and
mov
out
or
add
pushl
cmp
cmp
xlat
push
push
ss
shlb
xor
pop
out
push
cmp
cltd
jg
int
fwait
scas
outsb
and
push
rolb
arpl
outsl
cmpb
and
das
mov
inc
sar
add
movsl
and
cmp
mov
add
loop
fimuls
jnp
dec
icebp
jmp
or
inc
adc
sbb
push
cmpsl
fcmovnb
enter
cmp
inc
or
adc
or
jmp
mov
sahf
das
mov
loopne
push
fisubrl
cs
and
call
jns
testl
push
xchg
xchg
repnz
lods
push
mov
call
inc
jmp
test
or
mov
roll
sbbb
inc
mov
fidivrs
sarb
stos
mov
jnp
lock
xlat
mov
pop
aad
pop
cli
mov
sub
dec
repz
sahf
outsb
dec
dec
lds
pushf
and
hlt
dec
cmp
hlt
jnp
out
pop
insb
in
out
inc
jp
mov
mov
xchg
insl
cmp
leave
movsl
xchg
cwtl
xchg
lea
mov
incb
ret
adc
cmp
sub
leave
mov
push
lods
inc
pop
dec
icebp
daa
dec
negb
jle
and
shlb
sub
js
or
sbb
aaa
addb
rolb
mov
sub
mov
fwait
mov
outsl
sub
ret
mov
cld
mov
pushf
push
push
inc
adc
cmp
sub
lret
lret
jp
imul
pop
adc
repz
inc
lahf
mov
scas
jnp
icebp
ret
add
inc
sub
jb
jbe
xor
mov
add
jge,pn
push
add
inc
inc
test
ret
leave
sub
and
jmp
push
xchg
pop
pop
insl
sub
nop
rolb
dec
adc
femms
aaa
push
pop
pop
sub
stc
lods
rcll
clc
inc
shrl
das
push
ror
add
and
out
or
jg
pop
popf
dec
lods
xlat
orl
mov
sbb
sarl
int3
insb
xchg
lahf
cmp
mov
fcoms
or
and
push
adc
xlat
addr16
aad
mov
add
fisubrl
mov
mov
or
push
imul
jle
jmp
outsl
xor
movsb
cmp
ss
test
jne
pushf
sub
or
repz
mov
add
mov
stc
push
mov
out
mov
icebp
out
sbb
sbb
jo
mov
mov
inc
into
push
sbb
and
mov
iret
adc
ret
mov
push
outsl
lds
adc
and
or
lods
int
sub
imul
xchg
popf
push
cmpsb
cmc
mov
and
xchg
mov
in
mov
adc
movsb
adcl
and
push
pop
nop
mov
out
pop
shlb
cwtl
iret
scas
or
ja
add
call
cltd
test
jmp
add
cmpsl
scas
xchg
sbb
mov
int3
xchg
push
int3
lock
das
repnz
inc
jmp
push
and
loopne
je
sbb
xchg
outsl
in
or
fistps
sub
sub
push
mov
les
inc
mov
rcr
pop
imul
std
out
mov
in
cmp
jno
das
dec
dec
cmp
sub
loop
fisttps
push
aam
pop
dec
flds
aaa
push
cmpsl
shll
orps
xor
daa
cwtl
xchg
jl
pop
mov
mov
mov
mov
aam
jnp
push
push
movsl
cmp
cmp
popa
xchg
push
mov
cmpsl
ror
xor
inc
test
mov
fisttpl
aaa
push
push
adc
lea
mov
and
lods
mov
data16
fildl
popa
imul
jmp
loope
sub
lret
ret
addr16
push
in
jp
dec
sbb
mov
movsb
loopne
xchg
dec
cld
cmp
jmp
lret
sub
mov
loop
aam
mov
fbstp
scas
in
adc
outsl
out
mov
cli
fdivl
fcmovnb
sbb
fiadds
cmp
pushf
mov
psadbw
push
push
or
add
dec
test
in
mov
adc
into
clc
popf
leave
jns
test
cmp
aaa
hlt
stc
ja
shlb
add
mov
mov
or
ljmp
js
ret
mov
xor
stos
sub
repnz
mov
mov
pop
repz
add
test
movsb
lret
ds
cmpsl
jmp
outsb
and
test
pop
sbb
mov
and
xchg
dec
adc
jge
popa
lods
cmc
sti
scas
xor
add
dec
xchg
cmp
repnz
or
inc
out
add
push
and
int
push
inc
sarl
sub
fwait
lret
sbb
sbb
jae
mov
pop
push
imul
andl
cwtl
pop
pop
mov
push
mov
leave
hlt
int
out
adc
fidivrs
jbe
sub
or
arpl
pop
mov
or
xchg
sbb
inc
inc
mov
or
cmp
dec
sub
add
mov
mov
popf
testl
push
in
ljmp
push
movsl
xor
jnp
inc
aas
inc
mov
and
imul
in
pop
cmp
repnz
xor
out
shr
cmpsl
stos
icebp
arpl
rcrl
jbe
xchg
ss
cmp
fimuls
or
leave
out
jb
iret
fnstsw
enter
int
out
push
xchg
psadbw
imul
loope
or
cwtl
dec
test
lods
das
push
rcl
je
sbb
inc
in
scas
cwtl
mov
test
pop
bound
dec
ret
mov
dec
in
push
in
mov
xor
dec
testb
mov
cmp
scas
mov
dec
fdivrl
cmpsb
inc
sbb
adc
lock
jnp
xchg
or
mov
sub
cmp
xchg
fisttps
lods
sub
jbe
jne
dec
sbb
in
mov
cld
mov
test
pop
les
aas
jp
and
into
inc
data16
aas
mov
nop
dec
cltd
dec
mov
add
sbb
pop
pop
and
fcomps
inc
sbb
jmp
mul
dec
mov
icebp
jo
stos
mov
dec
ja
mov
cmp
jp
stc
mov
xor
sub
fs
cld
ljmp
fildll
repnz
push
loop
dec
fs
negb
lods
mov
mov
loope
jbe
pushf
imul
lahf
test
bound
or
icebp
fwait
cmp
add
mov
stos
or
cmp
cmp
jae
dec
mov
xor
dec
inc
jmp
mov
movsb
cmp
test
ljmp
jo
inc
movb
jle
lods
dec
cmp
ss
cs
arpl
rclb
sti
cltd
adcb
mov
jns
into
ljmp
fisttpl
divl
sub
addr16
cmpsb
nop
scas
push
inc
imul
sbb
idivb
mov
xchg
jle
out
xor
or
dec
push
lods
push
rcrb
push
mul
add
dec
fdivrs
or
push
lods
xchg
push
xor
sbb
or
bound
jmp
in
adc
repz
in
cmp
mov
gs
cmc
pop
inc
enter
or
xor
sbbl
mov
ret
xchg
push
jmp
pop
xchg
add
push
inc
jge
or
shrb
and
cmpsb
out
mov
xchg
fsubrs
movsl
je
das
repz
push
xor
je
push
loope
push
pop
hlt
cmpsb
sub
mov
stos
inc
lock
and
mov
loopne
mov
mov
adcb
loopne
fisttps
push
xchg
and
orb
push
rcrb
cli
xor
jl
lahf
jbe
or
iret
adc
adc
lods
xor
ret
sbb
js
push
adc
xor
ljmp
rcr
je
add
and
ss
pusha
mov
mov
sti
mov
cmp
sbb
xor
cltd
daa
mov
leave
jmp
mov
out
mov
pop
loop
aam
mov
cmp
lods
mov
les
dec
xor
or
sahf
dec
pop
out
xor
adc
loope
mov
ds
pop
lea
cmp
xchg
mov
mov
es
mov
pop
outsl
xchg
jo
fcmovnb
sbb
sbb
outsb
insl
mov
movsb
sbb
or
aas
out
cmp
inc
or
mov
xorl
insl
dec
movl
popf
jp
sbb
int3
dec
movsb
loopne
daa
cmp
mov
out
arpl
mov
sahf
adc
push
xchg
call
xorb
sahf
push
jmp
xlat
cmp
fcom
mov
sbb
stos
mov
ja
ss
repz
mov
aad
gs
mov
or
cmp
mov
inc
xlat
dec
or
cmp
push
pop
add
inc
dec
cmp
jb
or
or
push
out
fisubrs
jl
sub
pop
ds
addr16
add
roll
xchg
pop
sub
lods
xchg
mov
and
pop
aas
mov
push
movsb
mov
loop
scas
movsl
dec
sbb
xchg
out
aam
pushf
sub
push
push
mov
std
push
mov
or
leave
jne
and
clc
pop
ljmp
in
int
pusha
gs
jmp
inc
adc
arpl
shll
js
and
subb
mov
cltd
or
push
add
lret
add
sub
xor
into
mov
test
hlt
cld
cmpsb
cmp
cmp
fsubs
inc
mov
fwait
ja
add
cmp
mov
mov
hlt
out
nop
rcll
iret
jmp
adc
int3
aaa
inc
faddl
lds
cmpsl
lock
rcr
jg
dec
dec
into
pop
mov
adc
jae
mov
push
loop
inc
pushf
cs
popl
jl
das
cmovo
and
mov
pop
adc
pop
popa
cmp
stc
fs
test
xor
outsl
ss
dec
add
dec
xor
fadds
push
or
push
scas
mov
add
cs
push
jecxz
aad
out
test
cmp
mov
fwait
push
pop
sub
paddq
jno
mov
jno
mov
push
mov
pop
pushf
ret
push
bound
push
sub
testb
xor
jecxz
sbb
sub
call
push
or
std
clc
loope
filds
dec
call
testl
and
add
fs
and
inc
xchg
sarl
jp
xchg
push
pop
pop
cmp
and
and
ss
fs
add
add
xchg
sbb
jg
jnp
lcall
xchg
and
lock
in
icebp
mov
sahf
js
xchg
sub
pop
mov
out
adc
loop
data16
mov
pop
or
popa
es
ja
sub
fisttpll
xchg
pushf
push
xor
int
pop
add
aam
hlt
sbb
xor
pmaxub
inc
push
test
jle
mov
dec
inc
rclb
pop
adc
jmp
mov
xor
in
in
sbb
mov
lods
scas
std
or
into
outsl
mov
decl
lret
and
nop
test
movsl
addr16
enter
out
xchg
mov
sbb
push
addr16
cmp
push
cmp
pop
sbb
mov
lods
push
or
test
hlt
loopne
incl
sbb
fcomp
dec
int
in
mov
cmp
xchg
scas
je
adc
xchg
pop
xchg
test
xchg
lcall
adc
pushf
mov
mov
mov
adc
dec
fdivr
cmp
ljmp
shlb
xchg
call
cmp
push
cmp
xor
sub
enter
pop
xchg
in
mov
aas
cmpsb
add
adc
mov
pop
xor
mov
ret
in
mov
jo
or
xchg
mov
roll
cld
mov
repz
into
test
push
movsb
fisubrl
sbb
lds
lods
insl
mov
adc
dec
push
cmp
repnz
ret
jne
pop
pop
mov
push
jg
loope
xchg
dec
pop
lcall
loope
popf
sub
jb
jb
scas
mov
int3
pop
jp
mov
fs
dec
cmp
push
ret
jbe
cltd
in
test
ret
iret
jg
adc
cmpsb
loop
nop
les
inc
pop
or
push
or
sbb
notl
iret
out
mov
ret
lea
or
in
sub
rcll
lods
cmpsl
xor
les
mov
pop
jecxz
enter
insl
mov
test
insb
jbe
in
jmp
stos
xchg
in
stos
lret
push
sbb
pop
jl
mov
lret
add
roll
cmc
and
mov
xor
fidivrs
int
dec
lret
mov
shll
xor
sbb
dec
in
lods
sbb
in
inc
div
mov
dec
pop
out
or
adc
mov
pushf
int3
cmp
inc
mov
mov
xor
out
add
dec
ret
or
lret
shl
add
lret
xchg
jnp
test
popa
add
jno
jmp
adc
mov
jno
fmul
fwait
mov
dec
lahf
xchg
dec
sub
sbb
cld
aad
enter
daa
lea
mov
ret
outsl
sub
xor
adc
and
and
movsb
mov
pop
pop
dec
sbb
fs
add
mov
inc
xchg
mov
pusha
adc
jle
fisttpl
cmc
cmp
mov
stc
inc
es
nop
xchg
mov
cmp
fsubs
mov
aad
aas
jmp
aam
sub
pop
mov
pop
fwait
xchg
lar
jge
xchg
and
in
and
and
jecxz,pn
mov
cltd
aam
pop
lock
filds
adc
lret
mov
jnp
mov
jne
xchg
jne
popa
lret
jbe
inc
pushf
or
dec
outsb
cmp
sarl
rcll
pop
into
test
fpatan
push
stos
orl
ljmp
push
bound
xor
and
imul
add
scas
in
out
or
loop
and
sbb
lret
std
movsb
sbbb
imul
pop
movsb
jge
loop
pushf
call
cli
pop
add
push
into
pop
mov
pop
pop
dec
pop
adcl
dec
mov
push
repz
xchg
cmp
mov
xchg
cmp
sbb
stos
fwait
inc
sbbl
and
jnp
test
push
stc
addl
sub
xchg
cmpsb
dec
leave
iret
push
jnp
sarl
enter
mov
lret
pop
xor
pop
nop
lock
sub
jb
jb
jle
movsl
stc
add
popa
pushf
jb
rorb
sub
call
add
mov
or
mov
cld
jle
pop
adc
jo
cmp
inc
cmc
ds
pushf
add
push
mov
cmpsb
ljmp
mov
daa
dec
inc
imul
ljmp
mov
and
shrl
loop
filds
mov
out
cltd
mov
lahf
aaa
mov
sti
jae
xchg
loope
add
jmp
pop
sub
cmp
mov
adcl
adc
cmpsb
ret
sahf
mov
shll
stos
or
iret
insb
cld
or
and
arpl
mov
in
outsb
cmp
inc
fcoml
xchg
cmc
sub
push
mov
aad
outsb
fwait
sub
sbb
mov
nop
sub
ds
mov
cmp
inc
mov
xchg
push
mov
jbe
shrl
ja
xor
fsubs
in
push
mov
pop
jmp
dec
or
add
sbb
out
inc
ficompl
cmp
sub
jne
adc
xchg
inc
pop
mov
xor
fmull
popa
xor
in
lds
jo
sbb
pop
push
cwtl
lret
insl
cvtdq2ps
sbb
shr
scas
data16
pop
inc
sbb
leave
and
ret
lahf
loope
adc
flds
sub
into
push
lret
mov
cmpsb
ds
aas
adc
and
mov
std
jne
mov
andb
outsb
pop
aam
pop
popa
lahf
adc
sub
fcmove
out
mov
inc
mov
es
push
cwtl
lea
and
arpl
pop
out
pushf
cmp
adc
addr16
arpl
adc
pop
cld
cmp
push
outsb
out
iret
fwait
cmpsl
inc
add
adc
mov
iret
mov
adc
push
sarb
sbb
jo
pop
fadds
loop
notl
out
jl
stos
imul
pop
jge
and
dec
and
sub
xchg
push
push
loopne
mov
stos
jmp
jmp
pushf
mov
sbb
loopne
imul
out
mov
jne
add
imul
push
xor
jae
out
rcrb
mov
cmp
sbb
xor
add
sarb
or
inc
hlt
out
mov
neg
pushf
ret
sbb
cmpsb
popf
inc
lods
daa
push
test
xor
fimull
xchg
notb
dec
fcmovb
pusha
gs
or
xlat
pop
fwait
jmp
xlat
jns
pop
mov
outsb
sub
jne
cwtl
xchg
jle
pusha
lahf
mov
jbe
js
and
cmp
or
fisttps
out
jle
pop
inc
sbbl
aaa
sub
dec
push
shl
shl
cs
fs
fildll
pop
xor
xor
aas
outsb
pop
jno
out
sbb
xchg
add
outsb
imul
mov
mov
or
sbb
sbb
adcb
jg
out
lea
out
adc
sbb
cmp
or
sub
es
mov
xchg
cwtl
dec
testl
fwait
add
ljmp
pusha
xor
xchg
sub
sbb
xchg
aas
inc
lock
mov
adc
mov
cltd
cmp
popa
add
stos
arpl
lret
mov
test
mov
adc
pop
roll
stos
sub
mov
sbb
sarb
es
jle
mov
std
lret
repnz
sti
dec
adc
icebp
mov
jge
in
or
inc
into
fbld
cmpb
daa
mov
push
adc
cmp
aas
dec
leave
mov
mov
xchg
call
sub
cmc
cmp
mov
push
push
sub
pop
jg
xor
xor
sbb
pop
lock
mov
adc
xchg
out
xor
add
inc
jnp
popf
xor
gs
mov
test
gs
rep
imul
lcall
mov
sub
js
xlat
adc
and
jbe
fcomps
cmpsb
pop
enter
ljmp
adcl
adc
nop
mov
sbb
cmpsb
and
xchg
movsb
loopne
outsb
or
push
jl
xor
sbb
shlb
sub
repnz
in
and
or
rolb
popa
mov
gs
es
mov
ret
inc
mov
push
emms
push
setp
fmulp
leave
aad
inc
out
je
repz
frstor
in
xchg
add
aam
cwtl
push
sbb
xchg
ret
pop
sub
mov
leave
call
sbb
xor
sub
add
or
fnstenv
jbe
xadd
sahf
xlat
mov
pop
not
xchg
inc
mov
sbb
and
mov
or
push
test
rcrl
cmp
inc
xchg
lahf
out
fbstp
aad
gs
punpckhdq
and
inc
imul
test
dec
mov
jb
or
outsl
in
cli
scas
pop
cmc
scas
pop
popa
jo
xor
mov
adc
adc
sbb
add
push
pop
mov
add
lds
ds
cmp
add
aam
pop
into
ljmp
fwait
cld
faddp
and
daa
add
xchg
popf
in
xchg
add
jae
cmp
call
xchg
dec
aad
fdivr
sbb
mov
cmp
pop
roll
cli
popa
mov
out
mov
in
mov
xor
ja
int
mov
sahf
in
pop
stc
push
xchg
int
out
cmp
cwtl
cld
inc
data16
lret
rcrl
push
int3
push
hlt
push
sbb
ret
cmc
or
out
dec
sbb
faddl
aam
idivb
xchg
ljmp
daa
push
xor
sub
nop
imulb
push
inc
mov
or
or
or
or
and
xchg
sbb
lahf
fwait
add
rorl
andl
xchg
xor
pop
mov
pop
mov
lds
into
xchg
adc
call
mov
negb
jnp
pop
ljmp
push
imul
inc
int
in
xchg
push
mov
jno
push
test
insb
lods
jns
xorb
xchg
mov
cmpsb
popf
xor
inc
in
sbb
cmpsl
ljmp
push
sub
mov
cmp
je
pop
pop
pop
mov
mov
and
shlb
enter
cmpsl
jl
or
imul
les
sarl
inc
dec
in
and
imul
add
fidivrs
mov
int
add
mov
mov
mov
mov
loop
clc
jmp
lcall
sbb
stc
aad
jns
daa
xlat
push
dec
push
cmpsb
push
fidivrl
enter
shl
inc
test
daa
imul
adc
nop
lods
sbb
push
pop
fsubs
icebp
mov
or
ror
jae
mov
in
mov
xchg
pop
mov
scas
sahf
aam
sbb
dec
js
lret
xchg
xor
loope
aaa
or
mov
pushf
mulb
mov
mov
cmp
add
lock
jg
and
cmp
addb
popa
add
insb
mov
adc
gs
jg
test
mov
bnd
xchg
jge
int3
lahf
mov
pop
jb
cmp
jb
inc
out
lds
cltd
stc
aam
mov
clc
sub
aas
push
popf
lds
and
add
inc
add
outsb
stc
push
insl
inc
sarl
pop
decb
xchg
push
gs
mov
fucom
dec
mov
inc
insl
inc
xlat
xchg
popa
sub
movsl
pushf
shlb
dec
mov
cmovae
add
cs
loope
mov
punpcklwd
sbb
sub
dec
dec
mov
cltd
cmpsl
add
das
rclb
push
es
out
imul
dec
pop
arpl
inc
adc
inc
cs
xchg
loop
fimuls
mov
or
mov
dec
adc
das
push
mov
aaa
pop
fs
sbb
call
shrl
pop
mov
icebp
dec
or
lret
or
dec
sub
pop
imul
mov
sbb
xor
js
stos
leave
cld
out
cmc
and
add
int
pop
incb
cmpsb
int3
fwait
cmp
mov
inc
lahf
mov
out
push
fadd
mov
lods
shrl
mov
sbb
bound
packuswb
je
fstps
data16
and
mov
lret
mov
sti
mov
insl
cs
out
test
push
lahf
fdivr
enter
leave
sub
bound
mov
xchg
in
cwtl
clc
adc
xor
sti
sbb
jno
adc
push
push
inc
jae
dec
jo
imul
cmp
pushf
sahf
pop
sub
jle
cwtl
out
or
sbb
inc
popa
daa
test
add
jbe
sbb
aam
xor
lods
xlat
jecxz
inc
and
inc
mov
icebp
dec
iret
or
xchg
in
or
rclb
sub
sbb
push
in
dec
adc
mov
and
jecxz
lods
cmp
push
pop
adc
add
mov
dec
mov
cmp
repnz
xor
dec
leave
icebp
sub
cmp
xchg
test
jb
adc
sbb
repz
pop
xor
and
cmp
mov
xor
mov
add
cmpsl
cmp
in
pop
adc
lret
mov
ja
mov
xchg
xchg
pop
push
xchg
cmp
push
push
scas
mov
adc
loop
mov
cmp
repnz
sbb
sub
and
hlt
jecxz
push
mov
mov
jo
jns
aad
aad
loope
push
aad
icebp
lea
push
sbb
mov
jp
aas
cwtl
popa
int
xchg
pushf
notb
sti
and
mov
out
jmp
sbb
pop
ljmp
lahf
int
fisubrs
cmpl
sub
sarb
adc
sub
stc
jmp
push
into
adc
cmpsb
outsb
cs
in
out
pop
in
fdiv
out
mov
ficoml
lahf
lahf
dec
bnd
sbb
and
sub
fsts
outsl
pop
dec
sub
into
or
mov
xor
add
adc
les
pop
mov
cmp
mov
push
in
pusha
je
fwait
aas
pop
cwtl
push
fucomip
pop
cld
xchg
imul
in
sub
mov
out
cmc
xchg
cmp
dec
sub
shlb
lcall
fisubl
adc
xor
inc
cli
fsubl
iret
sbb
and
sar
push
mov
xchg
repnz
popa
sbb
sub
mov
pop
add
popa
push
loop
mov
push
inc
out
in
xchg
xor
mov
mov
or
sti
enter
jo
insb
cltd
into
cmp
pop
imul
pushf
pop
jmp
jg
out
pop
lods
dec
iret
push
pop
lods
and
xor
scas
mov
arpl
and
xor
mov
lea
lret
or
gs
sahf
imul
mov
test
js
pop
mov
push
mov
inc
mov
and
inc
rolb
fstps
mov
scas
jg
aam
adc
rol
int3
mov
lcall
jmp
movsl
jg
mov
push
clc
inc
xchg
mov
enter
jne
stc
dec
in
push
cmpsb
ds
mov
xchg
adc
fisttpl
lea
movsb
or
aas
pop
stc
dec
inc
lret
push
pop
bound
push
daa
push
xchg
andl
and
cwtl
stos
scas
incl
je
or
inc
sbb
shr
inc
int3
stc
adc
mov
aas
mov
gs
jno
push
sahf
scas
and
add
sub
int3
mov
adc
popa
fimull
mov
shrl
scas
dec
pop
fildll
roll
lcall
dec
cmp
rep
mov
in
pop
lock
xchg
fwait
std
xlat
or
add
xlat
pushf
vpackusdw
insb
mov
into
hlt
sbb
ljmp
xchg
add
aad
pop
out
scas
ljmp
inc
lods
cmpsb
mov
sbb
xor
shrb
decl
push
ljmp
mov
je
rcrl
stos
sub
pop
stc
pop
mov
aad
push
fisubrs
aaa
or
jo
mov
pop
xor
das
jnp
fs
lahf
xchg
jl
fadds
in
inc
test
mov
shr
adc
data16
pusha
add
push
sbb
pop
sub
les
xchg
lcall
adc
sub
mov
xchg
lock
out
inc
pop
sub
or
jg
popf
ret
gs
lret
aam
push
mov
xor
cmpsb
out
repz
sub
sub
adc
dec
je
int
cmp
insl
pop
mov
sub
sbb
mov
sub
mov
rcll
mov
ljmp
jl
cmp
ja,pn
cmpl
jo
daa
or
mov
loopne
sub
lock
jns
inc
jle
xchg
jo
and
in
cmc
cli
ret
jns
mov
and
or
jo
mov
jae
daa
inc
pop
mov
dec
aaa
cmpsb
outsl
inc
ds
nop
js
and
das
pop
jmp
push
scas
fistpl
jae
jge
inc
int
cmp
push
stos
sub
ds
add
test
inc
jp
and
fcomp
scas
lahf
inc
push
pop
imul
sbb
inc
lock
cmpsl
pop
lcall
cmp
or
sub
jno
jne
jp
lcall
sub
jo
mov
push
jl
and
inc
int3
ds
push
notl
push
jns
scas
jae
sbb
les
pop
add
mov
inc
cmpsl
insl
popa
inc
inc
mov
nop
mov
push
jno
scas
popa
pop
or
push
dec
add
mov
and
cmp
jg
push
dec
inc
loope
call
fisubs
sbb
and
mov
popf
or
loop
sbb
repnz
dec
shrb
out
lea
cmp
add
loop
add
scas
pushf
ds
sub
repnz
and
inc
push
repz
fbld
fwait
and
mov
out
pop
lock
jo
cs
test
lret
and
mov
cmp
mov
lcall
icebp
mov
jmp
mov
mov
mov
pop
subl
sub
enter
mov
jge
outsl
adc
dec
xchg
sahf
xchg
or
inc
pop
and
out
pop
sbb
scas
mov
jnp
mov
mov
mov
je
pop
mov
clc
mov
inc
inc
lcall
mov
inc
mov
dec
ret
das
kandb
in
test
jecxz
xor
sub
inc
int3
xchg
lock
jp
cmovnp
cmp
loop
les
jge
sbb
inc
xor
adc
mov
pop
jl
repz
imul
pop
sbb
pushf
and
pop
pop
in
add
cmp
dec
mov
imull
jo
and
inc
jge
jnp
icebp
push
jns
mov
push
ljmp
scas
pop
adc
dec
pusha
clc
sub
mov
push
mov
lcall
scas
inc
lcall
into
xor
sub
sti
adc
cwtl
scas
or
push
cmp
dec
xchg
mov
cmc
sub
clc
push
icebp
test
nop
cmpsb
dec
popa
int
and
lds
push
and
into
pop
fadd
mov
out
out
jecxz
adc
rcrl
sar
dec
inc
cmpsb
cmc
inc
ljmp
inc
xor
pop
cmp
lahf
notb
pop
enter
enter
inc
outsl
push
xchg
mov
fnstcw
repz
cmp
jle
push
loopne
cmp
add
lock
jp
sub
sub
popf
xor
add
cmp
mov
js
or
mov
outsl
mov
xchg
sub
cmpsl
cmc
mov
jns
sub
rcrb
pop
or
dec
cmp
adc
fnstcw
and
and
mov
jmp
mov
lods
stc
inc
mov
ffree
xor
repnz
mov
and
sbb
dec
pop
int3
fstps
ss
jnp
je
adc
das
cmpsl
xchg
imul
roll
sub
shlb
adc
dec
insb
int3
mov
mov
mov
cmpsb
ja
lock
pop
imulb
add
lock
push
xlat
cmpsb
out
cmpsb
in
daa
cld
scas
insb
sub
test
insl
sub
inc
xchg
push
clc
mulb
loop
or
orb
jle
mov
jge
sbb
cli
fnstcw
push
ljmp
pop
cld
fs
push
rolb
test
lock
out
into
fadds
loope
sbb
arpl
xchg
dec
out
push
sub
or
rolb
push
enter
push
adc
adc
je
push
dec
mov
dec
int3
adc
push
bound
pop
filds
xor
dec
movl
loope
inc
push
push
jo
sub
add
lds
xchg
adc
out
inc
movsb
push
fisttpll
adc
push
xchg
mov
loop
clc
shlb
mov
mov
repnz
lret
mov
xor
pop
sbb
xor
imul
sbb
push
inc
popa
push
xor
mov
adc
push
xchg
addl
mov
rcrb
int3
sub
fsts
pop
push
add
cwtl
ljmp
int
adc
adc
sub
mov
inc
and
adc
test
xor
or
aad
fstl
jo
pop
inc
pop
ja
and
push
push
movsb
pop
cmp
fistpl
mov
adc
mov
sbb
outsb
into
push
inc
add
in
sbb
pop
jno
iret
push
cmp
add
pop
mov
inc
rcll
jl
aad
es
inc
test
incb
jecxz
push
je
gs
negl
mov
mov
add
push
repz
xchg
movsl
addr16
push
lahf
data16
pop
mov
lret
pop
cwtl
dec
rclb
sub
cltd
cli
pop
mov
cs
scas
push
cmp
aaa
push
ss
dec
jg
inc
jnp
and
lcall
xor
mov
bound
lret
mov
sub
jg
mov
hlt
test
inc
inc
add
pop
mov
mov
mov
adc
adc
dec
pop
lret
pusha
mov
push
push
xor
sahf
ds
shrb
sbbl
loop
push
rcrb
fprem1
data16
add
add
push
sbb
pop
scas
cs
jne
mov
fistpl
xor
xor
shlb
add
push
mov
fistpll
scas
icebp
out
inc
mov
add
sti
fadds
jle
test
lret
dec
fidivl
push
jns
or
or
xchg
sub
fwait
sub
out
fs
addr16
adc
outsl
mov
lret
mov
adc
popa
adc
cli
fildl
adc
mov
hlt
lea
mov
ljmp
push
jnp,pt
mov
imul
gs
outsl
dec
dec
ret
inc
sub
mov
sbb
aad
cltd
loopne
stc
sbb
inc
adc
shr
movsl
dec
arpl
and
xchg
inc
and
notl
mov
push
negb
sarl
jmp
add
scas
sub
xchg
inc
pop
xor
xor
clc
shl
mov
test
mov
mov
scas
arpl
mov
jl
scas
xchg
mov
cwtl
mov
dec
mov
mov
mov
xorb
mov
cmc
mov
int
mov
cmp
ret
mov
testb
jbe
mov
jg
int
push
loop
mov
pop
pop
inc
daa
inc
out
out
jnp
enter
lods
sub
or
cli
in
clc
pop
sbbl
rcr
sar
add
outsb
pop
dec
mov
push
mov
sbb
pop
test
pop
mov
ljmp
and
cmp
in
fs
cwtl
jne
mov
dec
xlat
mov
cmp
xchg
xchg
jle
je
push
test
test
adc
fdiv
mov
insl
imul
inc
leave
jl
fsub
and
jle
leave
shr
cwtl
mov
cwtl
push
das
xchg
cmpl
xchg
xchg
mov
add
adc
popf
pop
in
movsb
xchg
add
mov
pop
mov
cld
cmp
inc
out
or
lret
mov
test
mov
and
xor
mov
push
pop
adc
bound
nop
mov
and
mov
lods
arpl
sub
and
xor
pop
sti
stc
jge
sub
add
aas
negl
outsl
es
sbb
push
iret
out
int
push
js
sub
add
testl
mov
and
xchg
sti
imul
insl
dec
and
cltd
xchg
scas
aas
and
cs
adc
lahf
bound
pushf
push
add
cmp
pop
filds
sub
add
cmp
insb
ret
adc
lret
mov
cmp
sbb
inc
dec
lods
mov
orb
dec
jno
or
adc
sahf
sub
pop
je
push
rcrb
inc
pop
sbb
push
xor
sbb
or
cwtl
js
push
inc
and
aad
and
pushf
pop
add
mov
lcall
into
sbb
mov
jne
sbbl
clc
xchg
rolb
enter
inc
repnz
push
ljmp
repz
test
leave
xor
int3
mov
aaa
adc
call
das
or
jnp
xchg
inc
mov
mov
push
fstpt
mov
sbb
mov
cmp
std
mov
or
adc
pop
dec
dec
cs
leave
mov
cmp
or
sbb
movsb
xor
stos
aad
cmp
insl
ja
pop
cld
adc
roll
aad
xchg
fisttpl
sbb
sahf
xchg
daa
mov
cmpsl
loop
scas
cmp
mov
imul
stos
out
test
sahf
cmp
pop
into
lods
loope
dec
scas
cmp
cmp
add
lods
insl
lcall
add
mov
push
ret
mov
js
repz
es
divl
cmp
int
inc
xor
lods
sti
xchg
arpl
aaa
lret
gs
mov
push
nop
xchg
enter
fists
add
scas
adc
jbe
jg
fs
lods
adc
push
call
adc
cmpsb
jo
add
pop
jecxz
mov
or
lock
mov
loop
imulb
add
push
cmp
fwait
xchg
inc
pop
movsb
lods
rolb
xor
xor
call
pop
dec
ret
inc
out
mov
out
mov
fisubrl
test
test
ret
dec
inc
sub
loopne
into
movsl
lahf
hlt
les
stos
xor
imul
push
cmpsb
or
and
inc
or
scas
push
gs
rclb
nop
xchg
pop
rcrb
cli
mov
ljmp
push
enter
int3
xchg
addb
push
mov
mov
xchg
out
fwait
dec
dec
bound
cmp
pop
idivb
stos
inc
sbb
fildl
inc
pushf
dec
xor
add
and
shl
lcall
pop
and
xor
fiaddl
clc
pop
add
cmc
nop
mov
repz
push
xchg
leave
add
ror
and
push
sbb
stos
xchg
out
mov
inc
or
fs
fstps
and
xor
jo
out
xor
int
lods
mov
cmp
cmpsl
xchg
mov
scas
and
imul
mov
and
bound
xlat
int3
cmp
test
xchg
aam
pop
inc
inc
iret
sub
mov
cmp
arpl
cwtl
jbe
iret
movsl
jb
aaa
sub
dec
inc
out
push
lods
add
jno
push
into
sub
test
in
dec
sub
popa
in
adc
jg
arpl
adcb
std
push
jno
int3
fs
adc
cmpsb
and
mov
test
inc
jbe
sbb
ret
dec
in
jno
or
arpl
push
loopne
test
jecxz
dec
loope
pop
xchg
mov
shll
lods
dec
push
lds
sbb
imulb
cs
sbb
adcb
cmpsb
dec
mov
sub
push
dec
lahf
jbe
in
xchg
call
jp
cmc
shl
sub
fcomip
sti
movl
jg
mov
pop
or
fsts
pop
mov
ret
push
push
cmpb
out
lods
ret
fcomps
or
pop
xchg
jmp
clc
repz
and
divb
popa
int3
dec
xlat
inc
mov
imul
and
movsl
pop
cmp
rclb
test
jl,pn
jbe,pn
sarb
int
aam
cmpsl
mov
push
mov
or
jnp
mov
and
loopne
loop
jle
dec
mov
xor
in
pop
adc
imul
mov
mov
lcall
pop
enter
rcr
mov
mov
mov
lds
push
sbb
int
push
mov
mov
out
jns
jge
and
and
ja
test
ss
mov
mov
pusha
push
dec
mov
push
aaa
jne
xor
push
cmp
xchg
lds
mov
shll
rorb
dec
mov
or
fcmovne
mov
mov
cmp
jge
cs
pop
mov
inc
inc
jb
in
push
cmpsl
adc
add
mov
stc
outsb
outsb
inc
push
pusha
and
leave
pop
pop
and
push
mov
xor
adc
icebp
test
out
jns
lds
jle
iret
out
rcrb
fldt
mov
inc
scas
push
mov
loope
call
xlat
sahf
sub
aam
inc
xchg
mov
jmp
cmc
sub
lock
jl
in
push
int
test
int
out
jo
jae
xor
inc
adc
nop
dec
imul
jb
push
lock
pop
lret
mov
pop
test
lahf
les
fadds
inc
cmp
push
mov
scas
daa
pusha
test
and
dec
inc
push
lea
test
sub
or
mov
sahf
or
mov
fmul
jbe
sub
inc
adc
or
pop
sub
lea
jp
pop
cmp
sbb
stc
not
pop
sbb
mov
push
or
push
xchg
adc
addl
pop
push
scas
roll
push
outsb
sbb
push
cmp
inc
mov
mov
shl
pop
mov
sbb
les
mov
add
jg
push
xchg
mov
adc
xchg
xor
xor
push
mov
mov
insl
and
push
jl
pop
jmp
imul
mov
mov
mov
andps
test
dec
or
outsl
pop
xchg
outsl
lock
fildll
push
aad
cwtl
movsl
add
push
into
cmpsl
or
test
mov
je
xchg
add
mov
fdiv
pop
out
aad
push
jecxz
add
ret
pushf
pop
push
inc
jne
push
cmc
xchg
push
xchg
adc
mov
cmp
hlt
out
or
ds
xchg
jne
nop
push
dec
xor
xor
jns
stos
insb
pop
sub
adc
icebp
pop
pop
adc
pop
xor
movsl
call
loop
lea
mov
dec
xchg
lock
jo
mov
cmp
mov
pop
popa
mov
shr
pop
dec
cmpsb
sbb
lea
xchg
aam
cmp
arpl
stos
sub
clc
ds
rcl
inc
lahf
mov
mov
adc
jl
inc
pop
leave
mov
subl
std
xor
or
mov
push
sbb
js
xchg
je
inc
fldenv
nop
stos
dec
mov
mov
xchg
lods
ss
mov
loop
lahf
repz
inc
test
and
jb
orb
addb
orb
pop
loop
cwtl
push
out
mov
mov
aad
push
jnp
pop
xorb
and
andl
in
xor
push
aas
mov
scas
daa
scas
lahf
nop
leave
hlt
push
push
pop
cmp
pop
leave
cmpsl
jae
stos
xchg
sub
fs
mov
push
mov
jb
rep
add
xchg
sbb
push
aas
pop
jecxz
ret
pushf
jecxz
adc
imul
inc
cmp
pop
shlb
mov
and
jbe
sub
aad
fnstcw
cmp
pop
out
mov
pop
cmp
sub
add
xchg
mov
pusha
insb
mov
in
push
loop
jnp
aad
test
cmp
roll
mov
or
jns
xor
fcompl
movsbl
mov
mov
push
data16
lods
scas
cwtl
mov
jo
mov
and
xchg
mulb
shll
int
jl
cmp
out
xchg
mov
sub
or
loope
adc
gs
hlt
mov
add
loopne
pusha
fsubrp
jae
sub
and
insb
lods
mov
outsb
push
sbb
sub
push
mov
xchg
or
dec
jb
push
lahf
pushf
push
or
mov
pop
push
testl
mov
jge
mov
xchg
sahf
xor
mov
xchg
mov
shlb
lcall
inc
insl
sbb
insl
push
jg
push
jmp
stc
idivl
sub
add
inc
mov
negb
icebp
repz
inc
shlb
sbb
sar
xor
andb
mov
jne
repnz
mov
arpl
stc
enter
stos
xchg
sub
sub
hlt
dec
orl
sti
adc
adc
adc
jns
mov
cld
inc
cld
movsb
mov
ret
xor
pop
stos
xor
jns
or
loopne
mov
je
outsb
ret
mov
ret
movsl
repnz
pop
jmp
outsb
sub
push
cld
cltd
lret
xchg
add
mov
pop
out
mov
pop
jnp
sbbl
mov
lods
or
push
inc
jns
add
bound
xor
cmp
popf
add
pusha
xchg
add
stc
push
cmp
pushf
or
mov
out
sub
sub
sub
sub
mov
test
sbbb
imul
pop
jecxz
xchg
js
dec
mov
dec
jmp
push
push
sahf
sbb
data16
lahf
pop
add
cwtl
sub
mov
push
ds
enter
xor
mov
in
xchg
jbe
ss
fsubr
ret
stos
pop
cs
inc
pop
repnz
cmp
cmp
int
mov
or
jp
jne
test
shl
pop
xor
xchg
js
cmp
addr16
jo
js
lret
movsb
movsl
pop
dec
in
fld
lea
pop
and
es
mov
ja
imulb
dec
sti
scas
xor
mov
cld
pop
and
or
jne
fwait
jmp
loope
dec
dec
loope
fcmovne
sub
xor
push
fstps
push
fxam
sbb
and
cli
xchg
repz
insl
push
clc
aad
inc
cmc
inc
cltd
push
xchg
and
jle
mov
inc
mov
inc
xchg
fdiv
adc
dec
mov
push
mov
push
add
add
sub
add
shrl
das
xor
cmpsb
das
scas
ljmp
sbb
stos
repz
push
or
loope
pop
ds
stos
nop
andb
add
inc
adc
into
dec
mov
dec
fstpl
mov
sahf
rcll
test
imul
ja
push
mov
xchg
adc
mov
sbb
xor
jle
scas
mov
mov
mov
xor
dec
pusha
mov
out
in
or
lahf
fsubl
dec
sbb
cmp
stc
cmp
out
pop
cld
inc
out
push
mov
dec
jo
mov
xchg
add
divb
in
jp
outsl
mov
in
xchg
and
xor
lods
inc
jo
xlat
sti
xchg
test
push
clc
mov
xchg
stc
jmp
pop
cmp
subb
cwtl
mov
inc
cmp
and
and
sub
mov
inc
inc
push
lods
pusha
ficompl
mov
jmp
or
push
xor
in
and
cmp
adc
cmp
imulb
out
adc
loop
cmp
data16
cmp
cmpl
es
insb
push
jp
and
jp
mov
movsb
dec
cltd
adc
data16
aam
pop
test
mov
lret
xchg
lods
xor
repnz
push
sbb
stos
jb
jb
inc
pop
push
jae
shlb
cli
jle
int
insb
int
lret
pusha
push
jmp
cmp
dec
test
fidivrl
arpl
icebp
cli
fabs
or
fs
into
addr16
cmp
roll
nop
out
insl
mov
jns
dec
sarl
aam
inc
pop
pop
push
push
mov
fs
add
and
aam
in
out
mov
fistps
loop
dec
lods
shrl
mov
xlat
faddp
leave
cmp
cmp
out
push
xchg
loope
cwtl
mov
fs
jo
sbb
xor
sti
call
mov
incl
pop
add
xchg
xchg
test
in
dec
iret
aas
mov
jg
jmp
xor
ret
loope
cmp
cmp
dec
dec
push
and
ds
cmp
fadd
pop
jns
out
or
lret
repnz
jge
push
test
adc
adc
aad
sbb
cld
push
pop
fdivl
dec
cmpsb
bound
loope
dec
xor
cmp
pop
test
adc
imul
mov
aaa
or
outsb
pushf
sbb
and
xor
mov
push
dec
fs
loop
mov
lret
test
scas
pop
push
cmpsl
inc
mov
jns
jmp
pop
mov
inc
iret
call
add
scas
push
mov
jecxz,pt
add
in
cmp
scas
mov
push
sub
cmp
push
popf
adc
loopne
bound
mov
leave
pop
mov
xor
stos
push
or
insl
jae
xor
into
jb
sub
push
mov
mov
mov
mov
xchg
xorl
test
or
dec
or
add
sbb
cmp
mov
mov
pop
mov
mov
and
mov
mov
or
lods
js
iret
xchg
xor
jmp
fnsetpm(287
mov
stc
add
test
jb
jl
sahf
insb
add
repz
pop
iret
enter
iret
in
push
adc
mov
outsb
and
mov
xchg
in
xchg
sub
imul
cmpl
popf
cmp
xchg
add
pop
ss
pop
lods
cmp
cwtl
jl
or
cltd
fmuls
mov
cmp
pop
popa
jecxz
xchg
adc
addr16
pop
and
dec
mov
lahf
fdivp
jge
xor
mov
cmp
stos
inc
mov
mov
test
test
out
xchg
add
pop
mov
mov
jo
addr16
mov
jb
scas
inc
dec
das
jne
xchg
ds
in
shrl
int3
popa
inc
fdivrl
js
inc
aas
cmp
dec
mov
cli
mov
cmp
pop
shl
mov
push
daa
lock
and
push
out
fwait
sub
addr16
andb
inc
dec
das
mov
mov
xchg
nop
dec
lahf
cli
mov
subl
nop
js
mov
lock
jmp
cs
sbb
stos
pop
ljmp
dec
fdivrs
pushf
inc
cs
out
sub
adc
fwait
loope
dec
xchg
push
dec
dec
ljmp
mov
adc
imul
mov
iret
shrl
idiv
fld
mov
shlb
into
in
in
sub
jb
es
pop
and
movsl
fimull
mov
lcall
addr16
jae
push
stc
je
inc
xor
xchg
fwait
fwait
dec
add
adc
test
mov
ljmp
push
mov
mov
pop
add
stos
add
jg
repnz
mov
pop
xchg
pushf
adc
int
xor
fld
xorl
mov
mov
pop
jb
mov
add
or
gs
pop
mov
outsl
call
nop
ficomps
out
adc
stos
movsl
cmpsl
sub
and
and
loope
loope
pop
mov
inc
push
mov
nop
or
test
fwait
ja
das
stos
test
dec
lods
inc
xlat
sbb
fsts
inc
dec
sub
mov
stos
adc
stc
jle
mov
movsb
rcll
mov
dec
sub
mov
jg
xchg
mov
stc
sbb
fcmovb
mov
jo
lret
mov
rorl
aad
call
jmp
rol
mov
jmp
push
sub
add
cmpsl
push
dec
lret
pop
loope
je
mov
fistps
mov
mov
sub
jno
sbb
dec
pop
jmp
jo
and
fdivs
xchg
pushf
iret
push
loope
daa
sbb
dec
aad
sarb
and
sbb
scas
out
ja
adc
xchg
adc
popf
daa
stos
stc
pop
iret
mov
xor
je
int3
lods
mov
loopne
daa
subl
adc
dec
ja
xchg
sub
ret
adc
jle
insl
call
adc
cld
cmpl
push
inc
addr16
sub
xchg
mov
sbb
jge
add
xchg
jecxz
in
mov
push
andb
outsb
jb
or
ret
xlat
out
xchg
sub
dec
and
rcrl
insb
xor
dec
pop
movd
mov
xor
call
xchg
roll
add
lcall
je
fisubs
jnp
adc
xor
sub
or
mov
and
test
stos
les
push
sar
inc
or
imul
into
jo
or
sbb
imul
mov
std
iret
cmp
in
sbb
icebp
pop
mov
loopne
dec
add
adc
xor
adc
test
ja
mov
adc
xchg
mov
pop
push
inc
cmc
mov
push
or
andl
popf
stos
sub
cld
pop
add
dec
lods
imul
imul
sub
xchg
daa
mov
lahf
jge
sub
shr
xor
incl
mov
mov
ret
pop
mov
xchg
ficomps
scas
ficoml
imul
jg
fs
push
out
sbb
pop
jp
mov
xor
push
out
std
mov
inc
leave
es
divb
stos
mov
xchg
jnp
pop
call
jae
adc
mulb
jp
jne
xchg
sahf
mov
test
add
icebp
sbb
mov
ret
dec
sbb
ss
sbb
cmpnleps
dec
jns
push
xchg
xor
or
sbb
bound
fbstp
pop
imul
pop
jo
aas
test
cmp
cmp
addl
push
shrl
mov
adcb
jbe
test
outsb
cld
cwtl
lock
add
adc
push
cmp
inc
out
dec
and
and
ret
int
add
or
test
cs
out
sub
lret
or
xchg
and
xor
mov
lahf
scas
nop
lods
mov
inc
xor
mov
adc
rorb
xchg
push
cmpsl
dec
cmp
or
outsl
arpl
lea
push
sbb
lea
sub
mov
dec
xchg
sub
ds
aad
jge
xor
inc
nop
adc
das
or
jecxz
xchg
mov
push
xor
xchg
aam
iret
clc
xor
sbb
jge
mov
inc
add
cmc
jle
idivb
mov
sbb
and
std
adcl
and
inc
inc
adc
pop
scas
movhps
stos
dec
xor
repz
adc
add
dec
aaa
or
imul
mov
mov
in
push
pop
movsl
jl
pop
lea
imul
xchg
xchg
push
sub
insb
inc
clc
xor
push
insb
in
into
pop
aaa
test
push
xor
jecxz
pusha
lret
xchg
fiaddl
mov
ljmp
cmp
movsl
test
cld
pushf
push
mov
decb
xor
jge
mov
add
hlt
sbb
mov
jecxz
fldenv
out
iret
push
mov
ljmp
or
out
xchg
sub
mov
xchg
inc
rclb
ret
clc
adc
cmpsl
sbb
jnp
ret
pop
popa
fcomps
insb
in
mov
scas
data16
xchg
ja
pushf
add
pop
xor
mov
cld
xchg
xchg
dec
and
inc
xchg
jmp
divb
fwait
pushf
jbe
add
xchg
jl
repz
aas
mov
es
dec
outsb
gs
clc
inc
adc
out
sbb
mov
out
mov
inc
decl
in
push
int3
nop
cmp
cld
sbb
push
mov
jbe
stos
daa
mov
inc
inc
pop
aaa
icebp
divl
pop
jp
xor
aam
or
rcrl
inc
sub
pop
push
mov
ljmp
pop
or
lds
popa
inc
cmp
or
dec
cmp
xlat
add
mov
push
fstps
xchg
call
push
mov
mov
in
aaa
sub
and
sub
sub
mov
popa
jmp
adc
adc
cmp
ljmp
scas
fwait
mov
dec
push
xchg
push
repnz
fisubl
mov
push
sbb
ret
jle
movsl
enter
xor
adc
cmc
cwtl
out
sti
iret
or
stos
rolb
je
mov
shlb
ja
push
fmul
sub
jae
xor
and
pop
adc
dec
cmp
xor
jb
mov
adc
mov
push
sub
lds
pop
sbb
das
mov
pop
rep
loop
mov
mov
mov
jg
mov
repz
mov
mov
dec
je
and
out
test
enter
in
add
adc
in
jg
lock
mov
inc
xor
sub
and
xchg
outsb
jmp
movsl
das
lds
or
lock
daa
mov
sbb
inc
in
adc
mov
push
cmp
mov
push
jmp
into
inc
cmovge
mov
pusha
aas
inc
into
ret
sbb
mov
popw
mov
fcomi
adc
in
inc
mov
cmpsl
mov
ss
push
mov
decl
xor
inc
mov
pusha
adc
fistps
stos
mov
js
adc
loopne
and
lods
ret
sub
mov
sbb
cmc
dec
jmp
push
and
shl
mov
mov
sbb
pusha
dec
test
pop
mov
fimull
jbe
mov
sub
push
aaa
ss
test
sarb
mov
adc
test
jbe
push
adc
lods
cmp
or
outsb
xor
int
push
sub
pop
movsb
mov
cmpsb
and
shrl
mov
mov
enter
shll
hlt
popl
pop
xchg
push
push
dec
and
inc
or
imul
ja
lcall
outsl
repz
je
lret
insl
loope
sti
shrl
popa
dec
call
cld
sbb
js
mov
pusha
inc
in
mov
mov
mov
lahf
pand
inc
pop
mov
inc
dec
jle
mov
xor
jb
cmpsb
lea
xchg
testl
test
xor
scas
mov
loope
jns
push
into
ljmp
xchg
test
pop
mov
jmp
jbe
js
push
mov
pop
cmp
mov
mov
mov
dec
stos
push
jae
mov
aaa
pop
jg
out
test
xchg
orb
sbb
or
into
decl
ds
pop
pop
fstps
xor
sbb
test
lea
add
lods
jecxz
fsts
lret
test
inc
fisubrl
sbb
push
cld
add
add
mov
xlat
or
xchg
test
mov
cli
push
movsb
rcl
push
ret
fildll
and
sbb
out
pop
shrb
enter
jle
push
or
inc
cmpsl
imul
mov
mov
inc
adc
pop
jo
push
aad
cmp
rorb
and
arpl
or
mov
mov
xor
sub
and
sub
das
sub
adc
push
pusha
cmc
xchg
pop
mov
pop
jbe
in
jno
es
xchg
add
sbb
push
ja
loop
movsl
dec
insb
jecxz
hlt
xor
or
addw
xor
push
sub
aad
push
pop
pop
pop
stc
lods
pop
cwtl
out
dec
aas
dec
jmp
test
inc
pop
xor
mov
aas
inc
xor
cld
pop
ljmp
pop
pop
and
scas
es
movsb
and
test
jns
xchg
pop
inc
outsb
push
lock
sbb
scas
mov
mov
sub
rcrb
and
sti
cmp
cwtl
jecxz
sbb
adc
sub
jge
or
stos
sbb
rcll
dec
xchg
nop
cmp
add
bound
or
sub
pop
lcall
rclb
repnz
push
es
push
hlt
stos
jg
add
adc
rorl
cltd
mov
daa
push
mov
out
mov
pop
lods
test
inc
jns
sbb
inc
outsb
into
ss
sub
mov
test
mov
xchg
and
aaa
aad
lods
xchg
out
sbb
sahf
mov
fiaddl
shll
inc
out
sahf
ret
imul
jo
test
pop
js
aad
iret
pop
out
push
pop
jo
xchg
ss
hlt
andl
jae
test
cli
aam
lock
sub
pushl
push
or
fwait
add
cli
fs
and
nop
call
push
jecxz
cmp
imul
inc
lret
out
lcall
xor
dec
jg
xchg
aaa
jmp
subl
repz
mov
push
sbb
mov
in
test
test
mov
std
sbb
xor
data16
and
xor
push
push
lret
popa
or
mov
out
jno
jae
movb
sub
outsl
mov
je
cmp
jmp
fisttpll
mov
cwtl
in
xor
xchg
lock
in
adc
push
mov
dec
mov
push
pop
adc
mov
rorb
test
jge
jnp
lcall
stos
sbb
movsl
and
enter
into
in
sub
js
sti
push
push
push
data16
test
rclb
push
jns
add
mov
call
sbb
sbb
cmpsb
outsb
loopne
add
push
aaa
insb
std
pop
inc
sub
in
adc
xor
outsb
jne
jle
dec
add
mov
inc
lret
fs
mov
stos
adc
shrb
scas
mov
push
repz
cmp
pop
adc
mov
sbb
xchg
cmp
jp
stos
xchg
cmp
test
inc
scas
push
loope
mov
xor
bound
mov
int3
pop
bound
clc
fistpl
cmp
jne
clc
push
int
sub
daa
mov
outsl
jecxz
arpl
mov
daa
test
movsl
lods
push
push
and
push
insb
push
xorb
sbb
lea
mov
push
mov
mov
sub
jbe
pop
sbb
inc
stc
inc
push
adc
pop
inc
adc
mov
mov
adc
mov
jo
shll
sub
in
cld
mov
mov
pop
mov
cmpsb
and
jnp
push
push
cmpsl
sub
mov
test
cmp
int
jp
jne
push
mov
loop
inc
add
popa
mov
mov
popf
loopne
lahf
add
je
adc
out
xchg
inc
jb
jg
or
pop
dec
mov
mov
arpl
pop
mov
out
mov
adc
jb
jo
rclb
dec
dec
fstpl
fs
mov
and
mov
test
or
enter
test
cli
pop
xchg
and
sub
rcll
sub
adc
mov
pop
mov
fsubrs
lds
adc
mov
adc
fsubr
mov
mov
leave
mov
pushf
cmp
clc
or
push
add
mov
repnz
mov
in
mov
sbb
add
mov
inc
pop
dec
pop
ds
scas
inc
mov
cmpsb
xchg
ss
add
pop
pop
scas
ret
std
pop
test
jae
pusha
mov
pop
cmp
lea
and
lds
cltd
dec
inc
pop
sbb
jns
test
out
adc
lahf
clc
cmp
pushf
xor
leave
cmp
jmp
fdivr
dec
dec
fldcw
sub
dec
shlb
mov
xchg
mov
in
ret
mov
mov
dec
lcall
fisttpl
inc
inc
stc
mov
jg
out
inc
adc
sub
out
jmp
outsb
insb
or
jg,pt
test
mov
rolb
or
adc
mov
xor
pop
dec
ds
ret
daa
jle
js
cmc
mov
adc
xor
dec
sahf
nop
cs
push
outsl
lret
lret
xlat
aam
adc
jp
fldcw
stos
adc
adc
xchg
dec
ret
add
sub
push
adcb
sub
fmull
xlat
adc
push
stc
movsb
cmpsl
jecxz
lods
lcall
and
add
lds
pop
arpl
scas
loopne
push
rcll
les
cmpsb
mov
push
pop
je
mov
int3
mov
add
hlt
mov
or
push
arpl
daa
into
xor
xor
cs
mov
lods
mov
fisubl
cmpsb
inc
inc
sbb
hlt
xor
popa
mov
movsl
jb
rolb
loope
mov
pop
stos
aaa
mov
movsl
dec
arpl
pop
adc
dec
or
and
dec
lret
rorb
sbb
xor
mov
sub
push
sub
out
cmp
mov
lahf
cwtl
in
jns
icebp
jo
mov
dec
icebp
inc
or
pop
lods
ja
cmp
adc
inc
movsb
out
aas
add
iret
cmc
loopne
xor
xor
jo
cli
xchg
jno
cli
fsubl
pop
iret
bnd
push
mov
movsb
mov
mov
popf
xor
xchg
loopne
mov
mov
mov
mov
mov
xor
adc
mov
and
test
insb
fildll
dec
fs
imul
call
sbb
push
sbb
jns
in
xchg
pop
mov
and
mov
sbb
stc
add
jnp
push
pop
pop
jnp
mov
ret
in
icebp
or
jge
xor
fisubs
movsl
dec
mov
mov
dec
insb
or
dec
adcb
flds
out
or
adc
cmp
sub
fcoms
mov
mov
jb
adc
xchg
fxch
loope
push
in
hlt
and
sub
dec
lahf
add
mov
out
add
cmp
je
iret
cmp
iret
mov
cmp
xor
and
xchg
xchg
sbb
sub
stos
add
mov
insl
mov
in
mov
cmpsb
lds
and
push
gs
rcrl
and
idivl
int3
inc
in
ss
lahf
test
or
fldt
inc
push
jg
je
out
pop
lds
and
add
stos
cwtl
lea
lret
jnp
sti
in
push
xchg
test
dec
sarl
dec
dec
cmp
cmp
or
jecxz
inc
jl
inc
xor
mov
mov
aaa
or
lahf
arpl
lods
and
xchg
push
xchg
clc
test
lahf
leave
cmp
or
lahf
fstpt
xor
test
mov
stc
out
sub
das
fimull
inc
mov
add
sub
add
or
inc
dec
jae
mov
adcl
fisttps
mov
loope
mov
in
jne
jp
mov
or
rorl
mov
mov
loop
xor
cmp
inc
and
add
cmpsb
and
scas
push
icebp
aam
arpl
or
pop
xor
stos
jb
fs
xchg
rcrl
xchg
dec
mov
cmpsl
xor
push
aad
rolb
negb
pop
xchg
mull
pop
dec
and
mov
sub
out
call
rcrl
lcall
mov
jb
fistps
sti
xchg
in
xchg
dec
xor
mov
aad
mov
mov
push
mov
jecxz
mov
mov
inc
cmc
dec
cmp
adc
fldenv
mov
loopne
movsl
pop
out
and
fwait
add
add
inc
push
xchg
push
inc
cmpsl
sub
cli
sti
mov
add
adc
inc
push
mov
xchg
std
mov
scas
add
mov
pop
popa
add
stos
gs
stos
outsb
and
int3
xorl
sbb
sbb
and
fmuls
mov
lods
jno
dec
cwtl
lds
push
mov
test
adcb
repnz
arpl
pop
cwtl
in
mov
or
cmpsl
in
lods
jp
add
inc
sub
jnp
and
cmp
ljmp
sbb
jmp
mov
in
int
mov
psubd
inc
aam
call
jb
js
jp
xchg
push
sahf
xor
sub
roll
mov
xor
hlt
xchg
and
lret
fildl
mov
lahf
and
and
pushf
std
pop
inc
sbb
mov
fstl
xchg
iret
mov
sbb
sub
imul
aaa
lock
xlat
ljmp
int
cli
mov
dec
ds
dec
lods
mov
sbb
xor
int
mov
scas
sub
cld
jmp
mov
inc
cmp
jg
stos
or
sub
and
xor
and
mov
sbb
mov
stos
mov
push
cmp
jecxz
sub
xchg
loop
push
das
pop
mov
xchg
or
imul
outsb
out
lret
jecxz
dec
push
inc
xchg
mov
iret
fcompl
js
andl
pop
adc
cmp
stos
aad
add
or
addr16
mov
repz
sub
push
dec
nopl
fidivl
push
shrb
aad
xchg
xor
stos
or
mov
es
sbb
xchg
push
addr16
or
and
int
int
inc
arpl
ret
jnp
pop
pop
outsl
push
and
sub
adcl
int
scas
push
sbb
xor
cmpsl
sbb
dec
in
fwait
iret
pop
jp
push
inc
cmp
imul
adc
dec
dec
imul
inc
rcll
pushf
push
sbb
cmp
inc
in
lret
mov
mov
add
mov
push
iret
and
cmp
push
loopne
sti
ljmp
jg
cmp
adc
inc
or
sbb
mov
dec
sbb
jmp
pushf
loop
mov
test
test
dec
cli
ret
fcomp
sub
out
or
in
cs
mov
xchg
and
arpl
bound
icebp
xchg
outsl
andb
das
fildl
cmp
mov
rol
cmp
das
sub
je
dec
loopne
mov
cli
push
test
scas
push
add
push
out
adc
dec
push
xchg
fcompl
inc
jge
scas
adc
add
push
test
mov
inc
pushl
or
les
push
cmpl
imul
or
mov
lahf
inc
push
cmp
mov
jmp
outsb
mov
jle
xor
in
in
sahf
mov
stc
je
push
jno
test
les
aas
inc
cmp
sub
push
lcall
out
out
and
push
pushf
cmpb
push
and
pop
xchg
and
repnz
stos
jg
mov
push
out
fmull
sub
mov
dec
or
push
das
pop
cmpb
jge
jne
or
mov
int
and
lea
scas
inc
ja
dec
jmp
adc
pop
cmpsb
ret
movsb
lods
dec
sbb
push
out
add
mov
idiv
out
rcll
sbb
sbb
sub
cmp
jmp
jo
pop
push
mov
sbb
cmp
inc
xorb
or
xor
xchg
loopne
stos
cmp
add
mov
push
ja
pop
sti
out
jae
cmp
mov
pop
mov
fcoms
cli
cli
sbb
int
add
das
sub
or
lahf
add
sbb
xchg
push
or
dec
push
adc
shlb
mov
jb
pop
or
xor
out
xchg
nop
hlt
pusha
or
icebp
xchg
test
add
adc
and
lods
into
maskmovq
testl
adc
jmp
cmp
xor
xchg
jmp
pop
jg
cmc
filds
cmpsl
pushf
pop
xchg
mov
inc
mov
add
imul
and
cli
xchg
daa
outsl
in
movsl
xchg
mov
notl
mov
inc
cmp
jbe
ret
in
notb
push
push
mov
outsl
std
mov
mov
mov
fsubp
push
jmp
cltd
sub
mov
movsl
shr
imul
fucom
inc
cld
push
sti
lcall
or
jecxz
mov
add
inc
jmp
imul
loopne
cmp
sub
xor
mov
popf
fdivl
jns
aas
mov
dec
xchg
or
or
xorb
dec
mov
sahf
or
imul
hlt
push
mov
xlat
pop
lcall
fildl
adc
cli
hlt
je
mov
ss
cmp
jmp
or
notb
aad
dec
loope
pop
mov
jle
jecxz
scas
mov
xchg
sbbl
pop
or
stc
lods
lods
xor
mov
mov
pushf
mov
jmp
std
mov
imul
mov
mov
inc
ss
cmpsl
aaa
sbb
fsubrs
fdivrl
lea
xchg
mov
in
mov
ja
fsts
inc
sub
adc
fstpt
pop
repz
repz
int3
add
das
cmc
fisubrl
sub
push
lods
pop
in
fsincos
imul
outsb
lcall
mov
or
mov
fwait
jbe
inc
mov
loop
push
call
dec
outsb
movl
sbb
aaa
outsb
sub
push
jp
mov
out
insb
in
fsubrs
cmpb
int
xor
mov
cmp
es
xor
dec
mov
je
push
and
es
ffree
into
sbb
int
jbe
push
enter
add
div
pop
sbb
xor
int
das
adc
pop
mov
push
or
lahf
gs
mov
pop
dec
stos
leave
sbb
xlat
inc
mov
xchg
sub
and
adc
out
mov
sbb
push
xchg
rorl
pop
and
mov
ss
mov
cmp
push
sbb
cmpsl
sbb
xchg
pop
pop
test
or
or
pop
lret
sbb
xchg
push
cmp
inc
jecxz
xchg
mov
scas
xchg
push
iret
mov
imul
movsl
mov
stc
pop
add
out
mov
mov
iret
lea
enter
ror
lret
test
xchg
stos
mov
mov
pusha
test
clc
sbbl
adc
call
xchg
or
xor
fsub
insb
push
adc
int3
aas
pop
jb
sbb
fcmovbe
mov
popf
cmp
out
setl
imul
loopne
sbbb
mov
push
dec
sbb
xchg
pop
pop
jns
loopne
fstpl
lock
cmp
in
add
lea
hlt
subb
sub
out
push
aas
sbb
addr16
sub
out
pop
testl
into
movsl
je,pt
imul
inc
jmp
ret
sbb
push
jmp
imul
pop
dec
clc
out
ds
imul
ror
dec
mov
inc
ret
fisubrl
sbbl
icebp
filds
filds
cmp
mov
jne
fisubrl
xor
sbb
push
inc
add
inc
jo,pt
push
push
jl
pop
jp
out
lret
daa
clc
test
scas
mov
push
cli
popf
mov
pop
lods
into
aad
clc
ljmp
push
testb
mov
cmc
sbb
add
add
dec
jno
ja
mov
mov
mov
jns
mov
ret
pop
push
sub
pushl
jl
sbb
fcmovnu
or
aad
test
cli
call
filds
jge
pop
ror
in
push
outsl
cmp
mov
push
cs
mov
add
lods
in
inc
dec
gs
inc
xchg
subl
dec
clc
mov
xchg
mov
das
bound
in
and
push
xor
iret
cmp
es
mov
pop
fistpl
imul
add
cmp
xchg
mov
cmp
call
vhsubps
in
cmpsl
jmp
add
jbe
push
ja
jb
loopne
sbb
pop
pop
out
in
call
ss
mov
lret
jno
ret
loope
js
fwait
add
dec
fs
aas
mov
rolb
hlt
loope
mov
inc
lcall
jmp
ficoml
mov
push
add
add
cwtl
ljmp
nop
push
int3
mov
aas
cmpsb
cmp
std
aad
loop
inc
sbb
adc
jge
les
push
dec
or
and
mov
mov
stos
ret
into
divl
sbb
data16
pop
cmc
mov
enter
sub
gs
sbb
or
mov
sub
xor
push
xchg
loope
fstl
out
lcall
mov
xor
add
jnp,pt
add
xchg
push
cmp
ds
pusha
mov
ficoml
es
lret
inc
mov
mov
sbb
mov
inc
inc
sti
inc
lock
or
lds
into
unpcklps
movsl
mov
jne
xchg
push
fiadds
adc
push
jge
adc
dec
jo
into
aad
push
aad
pop
jmp
fwait
mov
xchg
pop
xchg
lea
push
mov
mov
and
sub
test
sub
inc
stc
insb
inc
fwait
mov
fcomps
cli
pop
xchg
xchg
divl
pop
repz
mov
lret
iret
testl
in
jo
push
add
add
jecxz
cmp
jp
lods
pop
or
lret
mov
repnz
sub
xchg
jmp
push
sub
xor
loope
xor
mov
mov
mov
lcall
pusha
out
add
rorl
jnp
inc
popa
clc
jno
xchg
mov
iret
push
insl
insb
cwtl
aas
xor
jae
or
adc
dec
call
test
mov
int
mov
adc
push
xlat
mov
clc
fsincos
out
ss
jne
fistl
add
fcmovb
inc
inc
pop
xor
and
push
mov
jne
fisttpl
rolb
mov
lds
clc
pop
adc
add
mov
pop
outsb
leave
int3
imul
scas
pop
jle
imul
inc
or
xchg
dec
adc
daa
xchg
hlt
cmp
std
mov
mov
sti
pusha
cwtl
mov
push
fidivl
iret
data16
mov
sahf
in
xor
int3
out
jno
lcall
imul
rcl
mov
repz
xchg
ficompl
or
rcl
in
insb
popa
mov
add
iret
fisttpl
push
mov
lods
clc
leave
data16
sbb
or
fldl
jns
f2xm1
push
dec
int3
shr
pusha
mov
mov
or
loope
xchg
sub
add
mov
lcall
sub
sbb
xchg
push
movlps
jmp
or
jg
mov
insb
les
and
ret
cli
push
jecxz
adc
test
or
sbb
sahf
scas
dec
mov
push
dec
outsb
packsswb
outsb
adcb
je
sti
sbbb
xchg
pop
sbb
hlt
stc
int3
iret
enter
add
outsl
std
jp
and
push
sbb
repz
xor
loope
pop
dec
test
mov
jg
inc
dec
bndldx
sarb
jae
adc
test
adc
sbb
xor
mov
cmp
or
jns
dec
lret
add
stos
push
push
imul
or
xchg
xchg
mov
sbb
mov
and
dec
ja
mov
pop
push
pop
cltd
ss
aaa
imul
add
mov
sbb
jmp
call
mov
data16
fbstp
mov
outsl
dec
mov
lock
ret
mov
cmc
test
dec
data16
pop
sbb
sbb
pop
add
mov
les
xor
push
jge
imul
dec
push
lret
and
cmpsl
sbb
fstpl
push
ror
ss
fcompl
mov
pop
dec
xchg
push
inc
lahf
cmpsl
das
pop
push
shl
sub
pushw
arpl
push
push
rorb
mov
icebp
sub
sbb
scas
push
add
in
sbb
cmp
lds
cmp
and
cmp
data16
ret
inc
cmpsl
out
adc
mov
in
ja
mov
pusha
call
dec
and
enter
frstor
sbb
je
sar
push
push
push
test
mov
xchg
cs
xor
int3
insb
xchg
jae
mov
jne
movsl
inc
aas
dec
frstor
leave
push
mov
dec
outsb
push
add
cmp
popa
lcallw
adc
shr
insb
push
stc
cmpsb
nop
lock
pop
or
mov
out
mov
shlb
or
xchg
push
sbb
outsl
add
cli
lods
mov
fildll
pop
dec
in
out
jbe
insl
mov
loop
jae
jmp
inc
add
add
push
loopne
xchg
data16
push
pop
inc
stos
push
mul
test
mov
loope
arpl
sub
add
popf
cld
mov
push
pop
or
cltd
sbbl
xor
dec
test
gs
test
ds
xor
call
cwtl
push
mov
and
jmp
sbb
sub
fmull
insb
inc
lret
lock
call
inc
cwtl
sar
insb
push
int
fwait
push
ret
jno
add
and
lret
cwtl
mov
sbb
cmpsb
dec
fmull
fs
popa
fldl
pushf
out
pop
inc
movsb
scas
lods
stc
insb
push
sbb
inc
xor
popa
cmp
shrb
xchg
outsb
push
repz
adc
jns
dec
push
xchg
iret
xor
cmp
jno
lods
pop
scas
and
xchg
lret
jl
xorl
insb
mov
daa
cmp
mov
rep
aad
xor
mov
dec
adc
lahf
sbb
jns
add
pop
hlt
xlat
sub
rorl
ret
icebp
mov
sub
push
push
lahf
int3
hlt
push
std
fstl
push
lods
jl
cmp
mov
xlat
mov
sub
jb
xor
aad
outsb
adcl
in
aam
pop
xchg
ss
sub
sbb
cmc
xchg
push
sbb
cmp
jmp
pop
popf
mov
lods
clc
and
rcl
add
cmpsl
push
mov
sti
out
bound
dec
cmp
and
inc
es
sbb
push
nop
idivl
adc
jp
push
xchg
adc
sbb
repnz
add
out
adc
xchg
sbb
sub
mov
add
mov
mov
mov
xor
dec
rcrb
aam
lahf
gs
ljmp
leave
call
rcll
fmull
mov
inc
int3
movsb
insb
push
xchg
mov
mov
movsb
test
xchg
pop
inc
jne
fldt
fwait
xchg
mov
xchg
or
loop
mov
lods
pop
adc
adc
sti
daa
sub
push
xchg
xor
sub
je
or
js
adc
je
into
lods
cmpsb
mov
push
cmp
call
sbb
pop
dec
addr16
xchg
aaa
out
test
jmp
movsb
mov
and
pop
mov
jo
roll
mov
jnp
pop
dec
cld
or
adc
mov
push
movl
lahf
sbb
loopne
sub
in
inc
fisttps
sbb
adc
pop
ret
pop
cld
xlat
mov
int3
fs
je
in
xorl
sbb
mov
imul
in
aas
push
sqrtps
rcll
xor
cmc
ds
mov
mov
cmpsl
inc
iret
ds
pop
mov
dec
jno
cs
outsl
add
ss
jne
sbb
cmpsb
pop
mov
mov
cmp
loopne
les
mov
and
jp
sbb
fwait
xor
jno
mov
sbb
add
sub
loop
stos
mov
std
lds
mov
gs
xchg
mov
push
dec
xchg
sub
movsb
stos
movsb
cmc
mov
out
js
lds
adc
stc
mov
cwtl
push
xor
das
mov
clc
adc
movsl
in
cmc
pop
insl
out
dec
adc
mov
mov
stos
out
add
xor
cmpb
and
imul
imul
inc
inc
loopne
jno
xor
scas
mov
jo
inc
xor
mov
imul
push
dec
dec
stos
addb
imul
cmp
jl
xor
loope
push
inc
and
cwtl
cmpsb
repz
mov
ljmp
and
fwait
and
dec
push
roll
lcall
or
adc
incl
lret
addr16
fnstcw
gs
and
test
and
fiaddl
xor
dec
and
mov
sbb
push
icebp
dec
mov
ficomps
push
mov
xchg
and
jno
xlat
mov
div
jb
in
insb
inc
add
jo
xchg
out
pop
sti
rorb
cmp
insb
xlat
mov
mov
push
repz
sbb
fstpl
stos
dec
stos
adc
mov
dec
out
add
sti
push
xchg
leave
adc
mov
mov
sub
loop
gs
mov
mov
or
dec
mov
int3
ss
out
or
sarl
cmc
cltd
mov
andb
loope
sub
test
dec
fstpl
inc
jo
mov
dec
adc
dec
cmpsb
out
nop
clc
or
cmp
jns
and
aaa
std
xor
add
out
xor
lods
or
pop
test
out
xchg
xor
fwait
mov
add
jp
cli
inc
xlat
sbb
mov
cs
ret
daa
mov
push
sub
leave
int
cmp
enter
in
mov
fidivs
sub
sub
cmp
mov
jg
int3
lods
xchg
loope
dec
loope
hlt
mov
nop
in
inc
mov
pop
cltd
push
cltd
cmp
addb
jge
jne
inc
mov
xchg
ret
loope
cmp
inc
cwtl
mov
adc
leave
das
push
push
xchg
imul
repz
push
push
lcall
mov
loopne,pn
mov
xlat
into
leave
sub
fimuls
jl
pandn
out
cmp
adc
xor
xchg
push
fst
xchg
mov
adc
popa
xchg
xor
pop
sbb
popa
pop
es
cltd
jle
cld
mov
xor
ret
hlt
sub
jl
sub
sub
inc
xor
jg
jp
adc
shll
test
lret
pop
sub
add
stos
xchg
dec
adc
pop
mov
inc
insb
mov
test
in
cmc
imul
call
xchg
mov
out
inc
xchg
mov
fistps
imul
dec
sub
divl
ljmp
mov
hlt
mov
test
inc
leave
add
push
inc
movsl
mov
sbb
sbb
addr16
lret
mov
jl
jmp
lahf
push
test
cmp
bnd
popf
lcall
or
movsl
pop
and
icebp
pop
aaa
sub
enter
popa
rcll
inc
daa
pop
das
xor
dec
stc
xor
lcall
mov
add
or
popf
lock
pusha
push
notl
shll
fdivrl
adc
shrb
scas
out
cwtl
pop
add
sbb
dec
dec
es
xchg
add
cmp
push
jl
aam
xchg
sub
pop
sub
jmp
rorb
mov
sub
push
push
or
inc
cmp
dec
dec
add
sub
and
cwtl
adc
and
pop
jne
cwtl
jmp
lods
stos
jo
adcl
test
xchg
in
fwait
jl
xor
dec
loope
add
cmp
imul
outsl
arpl
pop
cwtl
or
das
push
bound
ror
add
mov
xchg
mov
xor
sti
push
addr16
psllq
inc
or
sub
mov
rcr
scas
jle
push
lods
in
xchg
es
movsl
cld
insl
cld
mov
adc
lcall
fdivl
cmp
testl
insl
stc
aam
imul
push
fildl
icebp
arpl
or
sbb
aaa
lock
fdivrl
je
lea
cmp
push
inc
push
cld
push
adc
stos
mov
mov
jecxz
add
out
jge
int
xor
outsb
out
cli
mov
cmp
fdiv
pushf
push
js
daa
pop
stos
add
jbe
fstp
cmp
dec
xor
outsb
lret
into
xlat
fstl
push
cmp
mov
adc
hlt
scas
js
and
xor
push
xchg
out
xchg
add
and
sub
mov
mov
dec
push
idivl
into
orl
or
mov
aad
negl
sbb
stos
sub
mov
mov
movsl
sbb
repnz
jne
dec
rep
enter
mov
mov
mov
mov
push
stos
mov
jle
push
enter
jne
xchg
or
sub
ds
scas
xchg
xchg
fidivs
data16
jl
inc
jp
and
jo
andb
or
xchg
out
ljmp
dec
jnp
and
xchg
jae
sbb
fldt
mov
jge
mov
mov
mov
add
cmp
mov
lcall
cld
mov
mov
xchg
inc
lret
push
sbb
adc
sub
aaa
and
push
lcall
pop
push
lds
movsb
inc
adc
jne
mov
stos
inc
xchg
mov
cmp
sti
hlt
jno
in
jae
shll
loope
aas
sub
outsl
adc
push
int
pop
int
loop
sub
and
dec
xor
lahf
fisubrs
pop
inc
rcrl
or
and
mov
pop
mov
das
out
iret
pop
cmp
shl
ror
lods
je
mov
iret
sub
insb
jo
outsl
mov
lods
fucomi
ja
mov
xchg
mov
cltd
jg
jecxz
or
adc
xchg
sbb
jns
cs
loopne
mov
pop
or
out
ljmp
mov
mov
test
xchg
xor
adc
mov
test
loop
popf
call
movsb
ret
and
mov
js
dec
or
in
xor
ret
push
leave
insb
pop
int
jle
cmp
jnp
add
cs
stos
repnz
sbbb
dec
ret
mov
mov
lret
fisubs
shl
push
jmp
mov
adc
sahf
pusha
leave
insl
rcll
push
scas
sub
out
out
jnp
pushf
jo
je
stos
mov
pop
enter
or
pop
es
in
insb
inc
aaa
daa
mov
pop
out
cmpsl
arpl
cvttps2pi
or
fnstsw
cli
mov
out
add
mov
pusha
mov
push
out
mov
xchg
adc
cmp
dec
cmpsb
sbb
pop
in
scas
and
or
ss
in
mov
pop
dec
push
mov
jne
jae
into
cmpsl
add
idivb
adc
jbe
push
add
add
mov
ds
inc
cli
das
mov
scas
lret
cli
les
jbe
aas
rorb
test
movsb
mov
or
xchg
je
xchg
pop
inc
xor
in
xlat
enter
adc
xchg
fisubs
dec
loope
push
jo
xor
adc
shl
inc
jecxz
mov
aaa
test
ds
mov
lods
inc
cwtl
pop
xchg
xchg
xchg
mov
stos
rcll
dec
mov
mov
imul
pop
leave
ljmp
or
insb
xor
and
mov
pop
add
sbb
pusha
mov
fldpi
push
adc
arpl
adc
or
lock
sub
faddl
push
lods
aas
sti
popf
jo
into
jns
pop
dec
outsb
mov
rcrb
xchg
int
mov
sub
xchg
ret
mov
pop
aaa
ds
div
inc
bnd
inc
jno
jmp
add
jno
mov
inc
mov
jbe
inc
push
push
rclb
rcrb
mov
out
cmp
or
mov
pop
mov
sub
or
xchg
adc
es
stos
mov
adc
out
mov
xchg
jo
int
imul
int3
outsb
pop
xchg
lret
int3
psllq
ss
call
adc
xlat
out
test
pusha
jmp
cs
mov
sbb
or
mov
repz
loope
xor
sbb
mov
jl
enter
mov
sub
mov
xchg
jge
jge
in
xor
xchg
xor
pop
cmpsl
inc
mov
int
nop
pop
enter
jb
shrb
frstor
inc
scas
std
add
and
jns
lea
cmp
push
cmp
push
jne
cli
jo
mov
jb
adc
sub
subl
add
test
pop
sbb
cltd
and
sub
cmp
mov
fimuls
dec
repnz
cmpsb
cmp
mov
push
icebp
outsl
pop
add
jne
shll
and
icebp
mov
jp
jb
sub
xchg
pop
or
aaa
add
inc
mov
subb
lods
cmpsl
add
ret
pop
xchg
and
add
xchg
push
idivb
int
mov
out
cli
lods
add
cmpsl
or
outsb
in
repz
xchg
mov
mov
clc
aaa
aam
loopne
and
mov
mov
mov
cmp
xchg
push
sbb
stc
dec
or
dec
adc
push
sbb
mov
pcmpgtb
pop
aam
leave
xchg
inc
nop
lret
shrl
mov
movsl
ljmp
adc
mov
or
rcrl
add
inc
js
testl
and
fbstp
xchg
test
out
xor
inc
popa
testb
dec
mov
xchg
pop
cwtl
cmp
inc
jae
iret
popa
cmpl
lcall
test
lock
ljmp
je
push
shlb
jecxz
arpl
xlat
sbb
dec
mov
mov
fnstenv
aam
mov
mov
jno
pop
mov
add
cli
and
adc
cmpsb
dec
sbb
loopne
ret
jmp
push
push
jmp
pop
jl
int
xlat
clc
pushf
std
lods
jne
popf
es
jnp
mov
popl
xor
push
lret
mov
fildl
fwait
mov
test
mov
daa
jg
les
mov
lock
jl
adc
lret
xchg
lds
add
imul
iret
sub
xor
scas
jne
lds
addr16
insl
lea
and
lods
mov
je
sub
test
mov
dec
in
mov
dec
addl
push
roll
mov
arpl
int
jecxz
stos
and
inc
in
sbb
ss
sbb
sub
xchg
imul
test
in
xchg
cmp
sbb
xlat
xor
jb
push
mov
and
pusha
shrl
mov
fdivrl
xchg
loope
test
push
out
sub
mov
sahf
lods
pop
jno
mov
rolb
mov
pusha
sub
aad
flds
jns
pop
cmc
les
out
xchg
push
sbb
push
cmp
add
test
sahf
push
dec
andl
arpl
mov
mov
mov
mov
mov
lret
inc
push
fnstsw
stc
lcall
out
cmp
shll
push
xor
push
jnp
mov
and
insb
push
pop
jns
cmp
mov
pop
movsb
stos
sub
xchg
in
mov
xchg
testl
icebp
pop
mov
mov
repz
inc
inc
test
lds
dec
jle
fidivs
pop
shll
mov
push
push
push
mov
daa
mov
mov
and
stos
orl
insb
mov
lds
stos
add
cmp
sbb
aaa
or
and
aam
sbb
ss
add
in
clc
sbb
jp
xchg
sahf
mov
dec
xor
or
mov
adc
enter
lret
pop
stc
or
arpl
insb
test
dec
imul
cmp
lahf
frstor
or
mov
jno
jle
adc
and
xlat
jge
xchg
push
inc
xchg
xchg
jo
dec
ljmp
jg
leave
mov
jne
mov
sbb
std
faddp
popa
dec
mov
imul
and
cli
mov
call
push
pop
out
das
stos
or
enter
out
sti
adcb
call
mov
push
xchg
inc
das
fwait
cmpsb
loopne
neg
adc
cmp
test
std
dec
push
push
out
sahf
inc
cltd
xorb
lods
or
pop
mov
pop
mov
jle
cmp
dec
push
add
stos
add
pop
pop
or
lods
les
xlat
fmull
mov
push
pop
inc
sbb
dec
and
inc
inc
fsubrl
fs
xor
addr16
aad
inc
sbb
call
out
pop
pop
test
push
cwtl
imulb
xchg
sub
call
add
stc
ret
jae
adc
out
out
stc
push
stos
or
and
push
imul
leave
mov
add
jmp
je
pop
mov
cmc
xor
leave
popf
insb
pop
out
sbb
xchg
dec
pop
movsl
mov
js
and
xchg
repnz
inc
mov
inc
repnz
xchg
out
xchg
mov
cwtl
push
jl
sbb
xchg
cli
in
sub
mov
xchg
lods
stos
pop
sub
cmc
push
mov
lret
cmp
mov
dec
xchg
xchg
out
pop
cmp
or
cmp
scas
inc
scas
mov
in
mov
xlat
leave
mov
add
shlb
add
inc
je
mov
fbstp
inc
pop
addr16
pop
mov
icebp
mov
jbe
add
inc
xor
fiadds
mov
mov
jecxz
fistl
icebp
xlat
data16
movsl
sub
mov
pusha
xchg
mov
push
xchg
stos
pop
add
iret
xlat
add
pop
shl
jae
adc
or
out
sbb
jb
rorb
sbb
popf
es
pushf
fsubr
out
sub
movsl
and
push
cmp
mov
mov
lock
jl
mov
sbb
inc
add
push
and
adc
inc
pusha
dec
mov
inc
les
popa
imul
mov
pusha
outsb
lock
and
push
imul
stc
repz
cmp
into
sub
push
in
into
push
je
popa
mov
inc
inc
jne
or
lret
in
jno
outsl
dec
shlb
mov
emms
cld
outsl
je
xchg
push
insb
int
movsl
shr
leave
add
jle
stc
and
ljmp
mov
lock
lret
decb
fnstcw
xchg
mov
sub
jns
cli
mov
mov
lods
daa
movups
mov
mov
stc
js
mov
shl
hlt
sbb
dec
jmp
fucom
dec
in
mov
sub
in
jno
cmp
xor
dec
mov
push
out
adc
cmp
xchg
push
sbb
fiadds
ss
sbb
or
test
in
xchg
mov
adc
or
mov
lret
push
jb
test
jae
lcall
pcmpgtb
out
in
pop
mov
mov
dec
aaa
call
loop
mov
jmp
pop
int3
jl
inc
enter
imul
outsl
inc
xor
clc
jecxz
push
scas
inc
pop
add
adc
sbb
mov
out
push
jmp
xor
cmpsb
fmul
ror
stc
mov
pop
or
aad
xchg
hlt
clc
or
lods
push
shlb
or
mov
repz
sti
xchg
jo
fildll
repnz
and
adc
dec
pop
imul
out
cmpsb
sub
dec
fsubs
fcomps
movsl
jl
repz
shrl
test
scas
mov
fdiv
jbe
stc
inc
sbb
inc
pop
mov
cmp
fistps
into
popa
mov
ljmp
dec
xchg
std
and
bt
aad
push
cmp
sbb
aaa
outsl
dec
sbb
imul
ljmp
in
cmc
movsb
addl
ret
xorb
push
cmpsb
cli
mov
repnz
mov
or
loopne
scas
push
add
jge
aaa
dec
push
jle
jmp
mov
fadd
negb
aam
dec
push
into
jns
push
cltd
nop
mov
das
push
in
enter
inc
jbe
xorb
test
mov
mov
stos
xchg
adc
mov
mov
subl
aad
pop
pop
fwait
add
jecxz
mov
mov
pop
stc
xorl
insb
cmp
movsb
and
mov
jbe
xchg
sub
icebp
test
push
add
mov
push
gs
cltd
loop
xor
mov
xchg
adc
scas
mov
add
sbb
scas
nop
dec
sahf
insl
orl
and
pop
push
jo
sbb
mov
push
dec
inc
mov
nopl
pop
push
cmp
repz
dec
jge
or
and
shrl
cmp
aaa
jecxz
push
mov
push
pop
add
cwtl
push
jp
xor
sbb
and
sbb
lods
std
call
shll
fldl
sub
sti
sbb
sub
pop
lds
cmp
inc
pcmpeqd
cmp
in
pop
in
pop
iret
test
lods
xor
inc
loope
sbb
hlt
pop
mov
js
xor
cli
jge
jo
inc
xchg
and
mov
aad
or
xchg
mov
push
daa
and
pop
out
mov
mov
lea
pop
mov
mov
sbb
sub
push
data16
inc
lods
push
or
and
add
xchg
mov
xchg
in
cmpsb
inc
xor
pop
ja
mov
mov
ret
sahf
mov
sub
es
adc
dec
in
xchg
enter
adc
sti
and
in
xchg
shlb
pushf
gs
adc
arpl
imul
add
movsl
fs
in
testb
or
mov
dec
pop
and
icebp
cmp
ret
iret
addr16
and
xor
add
int
pushl
mov
out
and
fnstenv
xor
cmp
push
add
stc
pop
outsl
popa
loopne
fdivrl
cmp
cmp
pop
inc
jb
sbb
or
out
push
test
pop
cli
sahf
imul
mov
and
ja
cmp
jo
daa
aaa
aad
dec
pop
xor
ficomps
jg
shll
fidivrs
mov
xor
dec
loopne
sbb
push
cmpsb
xor
aam
jle
mov
insb
pop
mov
call
leave
addr16
shrl
call
sub
sub
sarb
aad
mov
cs
inc
xchg
push
xor
icebp
lcall
xor
stos
adc
out
and
js
fnstcw
stos
pop
icebp
dec
sub
xor
out
imul
dec
mov
xor
push
popf
sub
outsl
shll
xlat
mulw
adc
add
stc
fldenv
pop
xchg
adc
sahf
mov
iret
cmpsl
mov
sbb
aam
ds
xor
lea
add
mov
inc
fwait
cmovns
in
cwtl
mov
pop
mov
rolb
insb
dec
nop
xchg
shll
ss
mov
int3
pushf
stos
sub
mov
rcrl
sub
sub
cmp
nop
xchg
jp
and
xor
mov
mov
insl
xor
xchg
loop
lret
xor
fsubl
test
aas
test
and
cmp
xor
scas
pop
dec
lods
in
pop
pop
pusha
push
or
jnp
cmp
mov
sbb
loopne
mov
push
jp
dec
sub
add
push
lret
incb
dec
inc
lcall
mov
cmp
xor
jmp
call
shlb
lods
scas
jmp
sbb
sub
sub
pop
push
fs
xchg
inc
addr16
out
xchg
mov
mov
push
push
xchg
lods
adc
xchg
xor
leave
jae
push
pop
add
xchg
in
sbb
mov
jge
test
in
push
pop
xchg
cwtl
or
std
adc
xor
in
jb
jmp
daa
lea
js
sahf
inc
xor
shrl
int3
ja
fsubr
psllw
xlat
jg
adc
push
mov
aaa
pop
dec
sub
fistps
scas
fscale
mov
sbb
aad
addr16
lcall
or
fsubr
adc
push
mov
jp
stos
addl
rcrb
pop
lahf
insb
sub
or
out
mov
push
outsl
pop
fsubrl
adc
dec
popl
and
pop
or
dec
mov
xor
xor
nop
loop
sahf
pop
int
pop
sub
insl
stos
cmp
sub
shll
filds
outsb
rorb
or
jge
arpl
lret
mov
arpl
add
sbb
ds
jns
xor
jae
mov
lahf
test
out
ret
add
jp
jecxz
xor
sti
repnz
add
xchg
movsb
pop
push
add
sub
mov
mov
or
and
outsb
cmpsb
aad
mov
imul
sti
mov
out
scas
cmpsl
neg
lahf
add
fcomp
push
mov
dec
push
inc
jbe
cmp
adc
sub
sbb
sub
sub
xchg
out
jb
mov
andl
fs
js
mov
dec
pop
stc
out
nop
hlt
and
pop
fldt
enter
mov
int
sarl
int3
lock
mov
pop
fcomps
in
sub
lret
inc
inc
or
into
dec
sub
insb
popa
mov
xor
shll
les
mov
push
arpl
jo
and
push
cs
pop
jl
sahf
mov
call
push
adc
stos
mov
xchg
push
add
add
jbe
jl
in
dec
cltd
int3
sbb
adc
dec
add
mov
loop
fsubrl
gs
lret
add
aam
inc
push
sub
cmp
out
xor
cmp
dec
lret
sbb
mov
arpl
mov
xor
dec
sub
sbb
mov
cli
fnstsw
roll
sbb
pop
stos
negb
fdivrl
cld
shll
dec
inc
dec
push
out
testb
jmp
mov
cli
aad
cmp
lahf
push
pushf
ret
test
adc
ret
rcll
pop
mov
js
adc
sbb
xchg
inc
test
mulb
popf
or
popa
mov
cwtl
ficoml
add
fsubrl
jnp
stc
jnp
push
mov
mov
dec
incb
xor
lock
jo
fsubp
and
insb
or
rcr
add
shll
in
ret
push
int
push
mov
rol
popf
mov
mov
push
lds
add
and
addl
ficompl
pop
test
iret
sub
xchg
repz
insb
bound
cmc
sbb
sbb
pop
xlat
pop
stos
push
lods
inc
fldenv
pop
xchg
addl
das
lcall
je
push
mov
test
push
xor
int3
mov
shll
add
inc
adcb
repnz
push
sub
outsb
mov
mov
jo
sbb
aam
lods
sub
cmp
push
aaa
ljmp
cs
mov
cmp
fiaddl
iret
mov
or
mov
or
andb
pusha
loopne
dec
mov
xchg
mull
scas
xchg
lret
mov
inc
xor
addl
sahf
inc
stos
mov
inc
xchg
lods
pop
jo
adc
in
int3
ret
pop
cmc
popa
pushf
cmp
or
and
pop
and
call
lock
ret
jecxz
cmp
rcll
aam
hlt
mov
inc
fmull
fimuls
aad
nop
pop
mov
ret
or
out
jns
outsb
shl
jl
out
cmp
cmp
das
mov
jae
test
pop
imul
inc
pop
xor
jo
rcrb
repz
xchg
ficoml
insb
push
pop
std
jo
mov
je
cmc
mov
cmpxchg
xchg
xchg
push
xor
fwait
xchg
jno
clc
adc
sbb
jns
pop
push
push
or
pop
mov
clc
outsb
or
sbb
filds
jno
push
pop
mov
inc
mov
fcomip
dec
outsb
inc
lahf
arpl
insb
push
add
loope
xchg
dec
inc
inc
decl
hlt
cmpb
adc
pop
dec
popa
sbb
lea
in
je
pop
push
test
adc
je
insb
dec
jp
add
dec
call
or
into
cmc
push
lock
pop
xor
lods
test
add
push
inc
xor
pop
loopne
dec
nop
stos
rcr
test
add
lret
popf
fiadds
enter
mov
stos
adc
movsl
jp
fmull
jl
mov
imul
add
rorl
jo
mov
mov
nop
xchg
icebp
arpl
xor
pop
scas
imul
insb
inc
pushf
fstl
mov
js
sub
adc
xchg
mov
jg
sub
push
cmpb
pop
cmp
xchg
aas
popa
and
pop
push
pop
lret
pushf
sub
pop
stos
leave
jo
icebp
pop
fsubrl
xchg
dec
xchg
push
sbb
dec
das
cmp
jb
push
inc
sub
js
jmp
fdivrs
adc
mov
sti
loop
push
inc
and
lcall
dec
push
inc
sbb
and
mov
xor
xor
fistpl
and
mov
sbb
mov
ret
xchg
push
scas
rorb
cld
loope
or
mov
fwait
mov
xchg
lret
dec
cmc
inc
iret
push
sbb
popa
mov
clc
xlat
gs
dec
js
dec
cld
mov
lods
fimull
mov
sub
jnp
cmc
jmp
or
xchg
jns
jo
jne
pop
cli
stc
mov
and
jnp
jg
das
jmp
cmp
daa
lret
aas
and
xchg
mov
movsb
filds
stc
sbb
movsl
dec
jb
cltd
adc
mov
dec
xchg
inc
and
sub
outsl
mov
sbb
inc
xor
ret
xor
ds
out
addr16
jle
popa
push
stos
movsb
inc
lret
shll
jmp
imul
xor
push
add
pop
and
push
dec
mov
jb
xchg
jge
xor
repz
cmp
enter
loop
ds
add
aam
pop
mov
mov
test
push
aad
push
outsl
xor
push
lret
loope
sbb
jge
imul
out
pop
fcmovu
movsb
in
adc
mov
in
sub
jne
lock
outsb
into
test
pop
orl
loope
out
xchg
mov
loopne
out
loop
in
xor
sbbl
push
push
into
sarb
sbb
ss
cltd
mov
sub
xchg
inc
cmp
xchg
mov
pop
arpl
and
in
cmp
xchg
addr16
out
popa
je
xchg
xor
push
pusha
in
sbb
mov
into
and
imul
mov
lret
outsb
mov
cli
fdivs
push
pop
adc
cmp
mov
pop
jecxz
inc
xor
jae
fldenv
jp
lahf
loopne
lods
sbb
add
jge
and
dec
or
push
repnz
aad
cmp
scas
aad
lcall
and
fisttpll
std
pop
aam
push
and
jns
sub
xor
dec
and
push
ret
pushl
mov
mov
jns
jmp
jmp
addl
pop
scas
xchg
ret
mov
inc
inc
inc
sbb
addr16
pop
repnz
xchg
outsl
fsub
movl
pop
ret
cs
data16
loopne
xor
xchg
fiadds
ret
sub
push
std
pop
jb
xchg
push
dec
lret
shrl
ret
enter
and
aaa
adcl
addr16
xor
imul
lret
jle
sbb
outsl
mov
mov
mov
insb
sbbb
pushf
inc
or
cltd
mov
dec
pop
dec
stos
jge
fld
ret
sub
bound
fs
cld
push
mov
inc
and
adc
xchg
fsubr
dec
int3
lods
inc
mov
setnp
or
scas
out
je
sub
negl
or
das
mov
leave
jno
in
adc
inc
jle
addr16
add
xchg
push
insb
sub
cli
cwtl
into
dec
sets
inc
aas
call
xchg
push
xor
mov
mov
jmp
fdivrl
xchg
dec
inc
stos
jp
xor
andb
dec
lods
lret
cmp
xor
cmp
insb
mov
aaa
sub
aas
arpl
inc
xchg
andl
daa
cltd
sub
ret
sub
jmp
sub
pusha
xchg
inc
icebp
jmp
mov
push
mov
and
mov
pop
mov
enter
mov
xchg
cmpsl
or
in
mov
inc
mov
mov
jecxz
pop
xor
jne
mov
sbb
inc
push
aas
mov
mov
xor
test
es
cli
jmp
popf
jno
or
cs
dec
mov
xchg
xchg
fcmovb
or
sub
repnz
and
and
sub
xor
imul
or
test
insl
add
outsl
dec
pop
adc
push
pop
repz
aas
mov
aas
inc
adc
sub
xchg
xcrypt-cbc
cmpsl
push
and
loope
in
inc
mov
es
pop
mov
or
sbb
cmpsb
adc
divb
and
jno
outsl
jo
push
dec
push
mov
or
pushf
mov
out
mov
rol
ret
mov
jbe
and
or
mov
out
push
mov
or
subb
lret
and
ret
cli
lret
pusha
xor
popa
cmpsb
jmp
or
repnz
push
jle
mov
cld
adc
push
jg
mov
and
pop
cli
jg
xor
sahf
jo
mov
adc
mov
jp
iret
nop
shll
mov
pop
sub
and
push
push
sbb
jg
sti
pop
mov
movsb
fnstenv
movsb
mov
outsl
jnp
pop
inc
dec
add
fidivrl
pusha
xor
iret
lock
xchg
sub
out
adc
add
push
adc
mov
or
cmpsb
mov
xchg
sbb
rcl
mov
lcall
jno
cmc
push
jno
push
aas
push
cltd
and
jmp
jle
jae
mov
rol
add
aad
push
stos
xchg
dec
mov
mov
loope
jnp
inc
cmc
mov
cli
or
pop
mov
stc
aas
mov
push
mov
in
out
or
lds
xor
and
mov
jle
pop
sub
mov
ss
fisttpl
shlb
jb
sub
cmp
or
dec
jmp
lods
xchg
mov
sbb
jo
xor
inc
scas
add
inc
cmp
adc
or
sbb
fs
and
pop
jl
push
jns
adc
ljmp
in
in
decl
pusha
adc
icebp
fsubrs
dec
sub
sub
xchg
shl
mov
pushf
pop
jne
ljmp
fs
cmpsb
out
adcb
lock
jnp
jge
rorb
lods
pop
lahf
add
fdivs
and
sahf
fmul
xor
ret
data16
xlat
jge
js
jmp
sar
cmpsb
movsl
test
mov
mov
mov
sti
dec
out
jae
and
or
fsts
in
lds
jmpw
sub
push
cmc
adc
inc
sahf
es
xchg
pop
rcl
ljmp
cmp
subb
xor
mov
dec
rcll
adc
jecxz
scas
divl
or
popf
cmpl
push
pop
mov
add
inc
mov
adc
cmp
vphsubdq
stos
loop
sub
arpl
pop
jge
cltd
stc
ss
push
jno
adc
inc
or
adc
dec
xor
or
in
push
push
adc
popf
pop
inc
push
adc
mov
sti
mov
les
xchg
jp
add
lods
mov
jno
sbb
in
inc
aam
cld
data16
in
fnsave
push
popf
sti
push
adc
test
cmp
push
add
popa
dec
mov
pop
sub
jg
xchg
jecxz
pop
fs
cmpsl
mov
mov
cmc
cmpsl
imul
mov
imul
sbb
push
orb
jnp
fnstenv
nop
dec
xchg
adc
or
mov
mov
sub
data16
mov
pop
cmp
hlt
sub
jp
mov
push
jmp
adc
lods
mov
sub
rcrb
mov
daa
mov
inc
iret
mov
in
jge
xor
sbb
or
pop
lds
and
pop
gs
shl
enter
xlat
ret
xor
adc
inc
jge
jae
xor
and
mov
lods
jl
pop
jns
xlat
or
ret
out
stc
mov
inc
fstps
lret
jns
xor
sbb
dec
aas
and
mov
push
sub
jb
jge
fisubrs
sbb
test
jnp
or
ret
outsb
mov
repz
rcll
xchg
xor
sub
ret
je
insl
into
aaa
jg
push
lods
jg
dec
push
mov
or
sbb
in
pop
sub
mov
sub
mov
andb
ret
inc
aaa
push
test
or
jp
jno
lret
lods
stos
add
add
mov
jae
adc
popa
jb
pop
outsl
sar
xchg
add
hlt
mov
mov
pushl
popf
push
cmp
ja
mov
in
adc
test
sbb
pop
stc
xor
sub
dec
mov
popa
popa
shrd
out
xor
push
es
xor
je
pop
mov
cld
rcl
push
pop
jns
sysexit
sub
dec
push
and
inc
pop
rcrb
mov
fcmovb
jmp
lods
mov
jg
outsl
cld
mov
insl
bound
xchg
jnp
ss
mov
fstpl
inc
or
fs
push
and
xor
subb
nop
add
adc
lea
pop
sbb
mov
ret
mulb
mov
pop
movsb
in
shrl
fdivrp
mov
sbb
orl
adc
test
cmp
jo
mov
adc
cmp
push
mov
sub
in
push
add
and
mov
shll
push
pop
jno
jecxz
in
loop
push
xchg
insb
xor
mov
fsubs
and
fisubrl
pop
mov
das
repz
lcall
lret
add
stos
out
xchg
lcall
dec
dec
jb
jle
xchg
or
test
jb
clc
and
adc
cmp
stos
xorb
push
push
dec
pop
popa
pop
std
jne
dec
xchg
cltd
adc
jle
dec
sub
std
arpl
jae
js
or
mov
cmp
ds
xchg
mov
push
dec
rcr
cld
or
and
ja
jo
lock
dec
jge
lret
and
cld
mov
jg
inc
insl
xlat
or
fwait
sbb
jae
in
bound
mov
and
scas
das
movsl
test
bound
pop
ss
sub
inc
adcl
xor
xor
test
into
shr
in
push
outsl
lods
ja
inc
mov
lcall
mov
jno
mov
mov
jmp
aad
movsb
xor
jae
test
loope
xor
adc
out
cltd
xor
dec
xchg
cli
fwait
and
hlt
mov
cmpsl
movsl
or
cmc
fwait
test
ds
lahf
sahf
sbb
push
or
and
cmp
or
pushl
lret
and
orb
mov
inc
mov
sarb
in
jle
cltd
sbb
mov
cld
out
dec
jbe
or
addr16
pop
dec
movsb
repnz
cmc
insb
mov
pop
shrb
test
cmp
sub
jbe
in
ucomiss
xchg
inc
stos
outsb
pop
inc
lds
dec
jno
sub
ds
les
in
mov
pop
inc
jb
test
cmp
fwait
mov
mov
insl
loop
filds
in
mov
arpl
popf
test
add
std
insl
sub
dec
jecxz
push
inc
out
xchg
add
loope
xchg
pushf
rcrb
sbb
dec
inc
jg
mov
pop
repnz
outsl
mov
movsl
sti
imul
push
mov
inc
repz
or
cwtl
lcall
les
mov
bound
leave
sbb
add
popa
scas
fbstp
dec
sahf
cmp
outsl
mov
sbb
adc
fs
into
imul
ds
sbb
rcrl
lods
xor
xor
pop
lds
ror
sbb
mov
mov
leave
leave
mov
mov
lea
rcr
clc
imul
adc
enter
or
xchg
loope
fisttps
mov
pop
fisttpll
pop
push
mov
cmp
mov
sbb
in
icebp
push
int3
sbb
scas
xor
in
pop
mov
inc
mov
push
lods
jecxz
sub
xchg
stos
or
fbld
shlb
cs
in
push
and
cs
dec
dec
mov
sub
call
mov
xchg
stos
lds
hlt
xchg
xorl
bound
test
cmpsb
jbe
pop
inc
pop
scas
hlt
and
inc
xchg
lds
orb
add
pop
insl
inc
pusha
int
pusha
sub
push
pop
les
cmp
repz
dec
and
mov
rorb
add
mov
mov
inc
inc
inc
icebp
add
jbe
adc
inc
out
in
dec
enter
vhaddpd
add
mov
push
repz
movsl
adc
dec
mov
lahf
in
jp
test
jp
iret
rcr
lret
gs
aaa
sbb
and
in
fwait
into
xor
ret
les
sbb
push
cmc
and
int3
aad
cmp
pop
call
mov
rcll
mov
movsl
push
push
stc
cs
fisubs
stos
cmp
push
idivb
ljmp
insl
test
hlt
mov
lock
push
in
shrb
mov
xor
lock
pop
icebp
mov
push
jl
jl
cmpsl
pop
and
jl
sub
ljmp
inc
imul
inc
pop
adc
mov
jae
fidivs
jbe
test
test
cltd
cs
sbb
pop
xor
stos
clc
mov
mov
pop
push
test
sub
ds
nop
scas
out
adc
cmp
xchg
addr16
ret
enter
mov
sbb
bound
jge
dec
in
sarb
hlt
in
inc
fsubrl
pusha
addr16
loopne
push
cwtl
icebp
ljmp
aas
movsb
out
push
cmp
cmpsb
push
pop
mov
dec
and
dec
push
lods
adc
in
cmp
loope
mov
xchg
movsb
loope
mov
loope
and
sub
stc
and
push
xchg
cmpsb
lock
dec
xor
pop
mov
adc
test
jp
jle
lock
push
lods
mov
jne
in
xchg
xor
outsb
cmc
sub
add
mov
ja
jmp
sti
xchg
data16
mull
lock
jb
ret
aas
lock
out
cli
dec
mov
pop
mov
sbb
gs
data16
mov
popa
pop
inc
jmp
stc
pop
in
ds
mov
jl
jnp
inc
aad
in
mov
inc
scas
movsl
hlt
or
idiv
mov
adc
rcl
xor
mov
push
mov
inc
cmp
add
roll
add
pop
int
cmp
iret
sbb
sbb
imul
ret
repz
mov
ret
orl
arpl
inc
add
mov
je
idivb
dec
xchg
es
mov
inc
les
sbb
push
sar
fwait
push
sub
inc
xchg
push
cmp
in
xchg
add
into
mov
xor
loope
inc
les
and
sub
fiadds
or
jl
and
jge
inc
arpl
xchg
lret
ja
xchg
sbb
addb
lret
imul
out
inc
pop
add
into
cwtl
fisubrs
cmp
push
fidivrs
push
jl
inc
jbe
scas
xchg
cmc
std
in
push
cmp
cmp
out
xchg
outsl
int3
mov
dec
xor
test
cmp
cmp
stos
dec
lret
sub
jl
leave
xor
xor
mov
incl
adc
sti
in
js
pop
add
fmuls
jg
dec
add
mov
mov
pop
test
mov
or
lcall
subb
adc
sub
lcall
pop
mov
mov
push
mov
mov
jmp
ljmp
adc
sub
std
push
push
push
std
cmp
nop
stos
xchg
inc
jl
xor
aam
out
xor
stos
loop
pop
popa
sbb
push
int
push
js
inc
outsl
and
jmp
repz
push
push
and
xchg
xchg
scas
test
popl
and
ret
fwait
push
adc
in
lock
mov
int3
push
dec
daa
in
std
cltd
aaa
rcrb
mov
mov
outsb
popa
or
shlb
mov
pushf
sbb
out
push
stos
lret
push
cmp
push
out
test
call
ret
daa
xor
xor
pop
push
shlb
iret
das
hlt
xchg
pop
icebp
mov
dec
sbb
aas
mov
int
sbb
jno
dec
mov
dec
cmpsl
pusha
clc
inc
cmp
fidivrl
ret
push
mull
sbb
enter
xchg
jecxz
adc
dec
pop
jmp
xchg
add
fcompl
inc
sarb
arpl
nop
leave
fs
mov
mov
cmpb
es
add
and
insl
push
lret
fbld
mov
xchg
aam
and
hlt
leave
jl
sub
test
sub
xchg
inc
hlt
das
je
sbb
aas
xchg
popa
and
scas
out
in
push
lcall
jnp
jecxz
add
gs
mov
outsb
cwtl
add
loop
cmp
push
fildl
inc
sbb
xchg
or
call
xor
and
dec
jg
das
jmp
mov
or
inc
das
lods
dec
mul
test
adc
into
adc
and
mov
aas
inc
rclb
test
mov
loopne
jns
je
ret
out
out
and
adc
add
mov
xor
inc
cli
jmp
aas
je
fldenv
jno
push
push
cmpsb
jp
mov
xchg
dec
jbe
filds
xor
inc
jbe
pop
adc
aaa
pop
jp
push
sbb
push
sbb
ds
mov
fisubrs
cwtl
mov
push
mov
out
fcomi
aam
jge
xchg
in
jp
xchg
sub
xor
or
mov
loope
dec
mov
addr16
dec
imul
lds
pop
mov
repz
xchg
in
dec
and
pop
dec
jb
sbb
xchg
pop
adc
stos
pop
xchg
in
aas
push
fwait
mov
inc
pop
bound
lahf
pop
scas
xlat
mov
cmp
jbe
inc
js
xor
mov
leave
jno,pt
cmp
ret
xor
rcll
scas
dec
add
testb
sti
shr
mov
out
pop
inc
push
or
mov
or
xor
js
and
add
mov
mov
mov
shlb
mov
dec
lret
push
mov
push
mov
dec
sbb
mov
test
lods
or
lods
jmp
adc
loop
adc
inc
inc
add
mov
movsl
sub
fdivrl
jl,pt
xor
popa
mov
fs
andb
pop
lret
popl
pop
mov
les
sbb
jb
cwtl
call
push
popa
fucomip
int3
and
xchg
sbbl
out
movsl
cmpsb
mov
adc
adc
leave
fs
jbe
fists
push
xchg
adc
test
adc
arpl
call
xor
pop
pop
add
les
cli
movsb
lret
fdivs
movsb
jecxz
cmp
mov
shl
xchg
cmp
and
aad
jmp
mov
paddsb
bound
xor
ret
iret
fldcw
adc
inc
jae
and
mov
xchg
int
inc
testb
jnp
mov
xor
jns
lods
and
rep
sarl
inc
sbb
movsb
movsl
ds
in
in
repz
scas
xchg
mov
mov
jmp
and
dec
out
pop
addr16
push
mov
mov
adc
imul
jo
int
lahf
xchg
adc
in
in
es
mov
jecxz
add
mov
push
in
push
jno
test
sub
jnp
jg
stos
in
fldenv
jne
push
and
js
and
lods
mov
mov
jae
lds
shrl
popa
dec
insb
or
jbe
inc
mov
int3
pop
movsb
pop
lds
sub
push
add
inc
enter
fnstsw
cwtl
js
cs
aas
pop
push
fucomi
ficoms
dec
out
and
push
loope
outsb
inc
test
sbb
push
mov
jmp
push
ret
repnz
arpl
mov
sbb
cmpsl
cmp
inc
sar
cli
xchg
lret
mov
movb
mov
sub
lcall
sbb
inc
mov
out
and
movsb
sbb
fs
xchg
pop
lahf
adc
jb
fildl
lds
add
ja
jbe
cmp
jle
and
inc
test
into
out
jb
scas
add
jl
xchg
test
inc
cltd
js
jo
arpl
mov
push
xchg
mov
xor
sbb
mov
xchg
lods
jns
shr
inc
mov
mov
pop
into
iret
lcall
cwtl
out
add
inc
pmaddwd
jno
fsts
out
xchg
pop
lds
lods
xchg
and
cmp
push
mov
cmpsl
fdivrs
test
cmp
xor
fucomip
test
xchg
hlt
aas
daa
andl
push
mov
and
mov
je
out
add
addr16
or
and
pop
subl
push
or
hlt
loopne
daa
and
popf
jns
push
fists
aas
mov
pop
repnz
inc
sbb
or
int
and
push
jbe
sbb
jb
lds
add
loopne
jmp
jo
sub
jle
jmp
shl
adc
or
fisubl
dec
mov
sbb
ret
dec
adc
mov
pop
push
std
cli
lret
push
dec
jmp
xchg
icebp
dec
xor
inc
pop
cmp
xor
xchg
adc
or
jle
lods
mov
nop
sub
imul
or
cwtl
xchg
insb
fistps
leave
bound
leave
rep
push
test
sbb
mov
in
mov
test
outsl
out
xor
jmp
orb
push
js
loopne
push
aaa
inc
mov
aam
repz
loopne
mov
xor
rcl
xchg
sub
jg
pop
mov
jp
mov
mov
lcall
xchg
sbb
pusha
push
adc
sbb
dec
jno
fdivrl
pop
jo
test
push
push
in
movsb
in
push
mov
unpcklps
out
ret
ljmp
jb
adc
xor
xlat
mov
fs
adc
in
or
scas
fcoml
dec
add
outsb
pop
sub
ljmp
jbe
sub
repnz
repnz
pusha
ss
mov
loopne
outsb
bts
jno
and
and
imull
add
jb
mov
mov
in
vdivpd
ds
mov
mov
decb
sbb
fcmovnbe
mov
pop
popf
insl
imul
ja
sahf
mov
sub
idiv
lret
pop
push
inc
aam
pop
jg
jne
loope
mov
inc
xor
mov
scas
or
ficomps
push
mov
insb
dec
loop
and
sbb
repnz
dec
das
pusha
aaa
and
xchg
push
insl
pop
int3
jne
xor
mov
mov
cmc
shll
stos
mov
nop
sub
test
jno
lahf
daa
lods
jmp
daa
lock
sarb
movsl
ror
adc
sbb
cmp
jge
adc
aaa
or
clc
lret
xor
in
lods
pop
mov
mov
js
nop
add
sarl
call
jno
push
imul
aad
gs
lods
mov
js
jp
dec
push
stc
xchg
add
push
cmp
aaa
mov
imul
insl
push
mov
fnstsw
cmp
stos
pop
or
cmp
movsb
ret
adc
mov
roll
ret
test
loop
cmpsb
mov
fsubrs
dec
xchg
add
mov
push
in
push
cmc
xchg
cmp
and
bound
clc
jl
std
mov
cmpsb
cmp
jns
into
or
inc
test
sarl
mulb
repnz
mov
dec
sub
push
stos
xchg
fisubrs
loope
mov
inc
xlat
mov
call
notb
fs
mov
cmp
rclb
lahf
popa
xor
mov
mov
xchg
cld
cli
rcrl
mov
sbb
mov
repz
imul
out
dec
push
inc
add
mov
icebp
xchg
xchg
loope
jns
imul
pop
call
insb
mov
and
xchg
cld
sbb
repnz
stos
bound
jne
mov
jae
mov
aad
sahf
outsb
inc
push
push
push
push
xchg
lahf
enter
pop
push
mov
lahf
aaa
xchg
enterw
xchg
clc
mov
add
fwait
sti
stos
xor
xchg
inc
fmuls
shrl
dec
das
xchg
and
jg
lahf
leave
inc
xlat
imul
sbb
popf
aad
push
inc
div
xor
mov
ror
cld
mov
lods
dec
mov
pop
jb
mov
negb
ret
ficomps
movsb
add
pop
xor
daa
sub
addr16
lret
sbb
aam
in
sub
and
aaa
push
inc
cmp
scas
test
fimull
lcall
ljmp
mov
movsl
mov
mov
in
test
or
adc
pushf
dec
enter
adc
enter
sbb
add
xchg
mov
cld
dec
stos
sbb
jecxz
xor
std
push
loope
clc
mov
pop
mov
inc
xor
adc
lcall
sub
adc
mov
insl
xchg
add
bound
pop
and
popa
insl
adc
jnp
arpl
push
pop
mov
sub
jb
inc
adc
and
aaa
into
cmp
out
mov
aas
pop
js
fistpll
mov
dec
rep
pop
loopne
or
out
add
popa
ljmp
push
js
arpl
jmpw
and
jmp
scas
dec
outsl
call
loopne
fstpl
loope
push
inc
minps
add
jb
hlt
jno
jmp
and
lcall
dec
cs
lea
xor
sbb
push
pushf
cli
mov
les
lds
fs
je
in
sub
testb
pop
out
dec
inc
rcll
dec
into
mov
pop
cltd
in
fstpl
scas
mov
sub
pusha
inc
add
mov
outsl
stos
jge
cmpsl
clc
jnp
sbb
arpl
repnz
jp
popa
push
lcall
int
sbb
repnz
pop
scas
or
add
adc
aad
adcb
cmpsl
out
xchg
inc
or
pusha
push
ljmp
cmp
adc
sbb
pop
or
repnz
add
pop
mov
fildl
cli
cld
in
or
outsl
push
inc
jge
cmp
inc
cmc
aad
aam
hlt
roll
mov
insb
mov
daa
notl
loope
mov
das
scas
pusha
xchg
sar
mov
sub
ds
sbb
mov
fdivl
adc
movl
push
xchg
test
cmp
xchg
test
call
test
push
jbe
push
mov
inc
loop
pop
or
sbb
cltd
add
dec
xchg
sbb
out
rolb
xor
mov
xor
pop
push
popf
adc
push
lret
adc
and
xlat
into
sti
mov
sbb
jb
mov
call
cmp
push
clc
dec
add
push
insl
pop
addr16
fildl
aam
iret
and
mov
dec
xchg
pop
lock
sub
in
pop
mov
or
pop
sbb
lret
pop
adc
out
jg
fiadds
fwait
xor
icebp
shl
cmp
jg
add
leave
sbb
fs
hlt
outsb
es
ret
xor
inc
cwtl
inc
ret
cld
mov
dec
test
mov
cmp
push
shll
pop
mov
cltd
std
pop
xor
sub
imul
xor
mov
dec
add
mov
out
or
jp
les
jne
mov
cmpsb
lret
arpl
sub
das
pushf
sub
add
jg
test
mov
sbb
mov
pop
pop
sbb
loope
loope
xchg
sahf
test
iret
mov
jle
xchg
inc
ljmp
scas
push
add
iret
jae
fwait
or
int3
les
sub
ja
in
enter
push
stos
les
cld
mov
xchg
mov
or
iret
and
std
lea
dec
cmp
mov
xchg
sub
push
add
cmp
pop
dec
mov
mov
subl
movsl
push
ss
mov
rorb
cwtl
aad
ljmp
mov
jmp
in
popa
xor
push
xchg
mov
test
mov
push
mov
push
push
cli
mov
and
addr16
pop
rcrl
test
push
or
mov
push
and
test
push
mov
idivb
movsl
mov
jae
or
sbb
push
fcoml
xor
out
add
pop
jns
push
sbb
movsb
mov
loopne
fstps
push
aaa
cmp
fwait
lods
jnp
or
je
stc
or
push
dec
ss
in
movsb
xor
shlb
cli
aaa
push
insb
pop
addl
adc
xor
je
jmp
scas
lods
mov
push
test
mov
rcrl
mov
addr16
mov
dec
arpl
dec
cmp
popa
rcr
rolb
pop
push
leave
pop
cmpb
jo
lods
sub
lock
outsl
mov
pop
jbe
scas
enter
test
sub
sub
push
dec
adc
cmp
dec
arpl
push
push
fs
add
inc
xchg
inc
jmp
push
rcrl
sti
iret
dec
and
inc
mov
dec
add
das
cli
imul
inc
pushf
jle
shlb
inc
jnp
push
pop
out
xchg
adc
push
stos
sbb
sub
adc
push
inc
xor
scas
scas
jge
pop
out
out
fwait
lods
sub
inc
xor
pop
fxch
mov
push
in
xor
sub
stos
cmp
jl
mov
push
ja
or
out
jle
pop
enter
clc
std
cs
inc
test
mov
push
loop
dec
or
adc
js
add
pushf
data16
int3
mov
mov
imul
nop
push
or
xchg
inc
mov
and
leave
jp
mov
cltd
push
add
rorb
dec
mov
unpckhps
or
popf
mov
or
js
shll
jl
insb
mov
or
mov
faddl
in
sar
lods
sbb
ret
je
dec
rcrl
add
cmp
test
sbb
ror
gs
mov
or
jae
jne
xorl
fidivl
test
mov
hlt
mov
bound
cmp
dec
cmpsl
cli
pop
inc
push
cwtl
scas
mov
ja
cmc
aad
xchg
fisttpl
loop
sbb
hlt
cmpxchg
jae
stc
in
lret
sub
sbb
gs
jg
lods
or
outsl
aas
xlat
shll
pop
dec
jbe
int
es
sub
in
std
arpl
int
jle
push
add
imul
je
sub
rcrl
jp
inc
xor
inc
xor
fwait
cld
push
popf
xchg
shr
pop
sbb
cltd
sbb
imulb
bnd
out
fisubl
stos
jmp
testb
inc
mov
mov
jns
and
jecxz
add
rcrb
push
jmp
jge
mov
dec
or
testb
jno
push
and
mov
dec
fidivrs
and
data16
xchg
outsl
outsb
add
adc
xor
push
mov
in
mov
jge
inc
lea
inc
stos
adc
dec
push
sub
or
xor
sub
push
test
xor
cmpsb
xchg
jle
and
rorl
mov
mov
pusha
jecxz
inc
jns
xchg
stos
outsl
or
add
inc
add
add
adc
dec
stos
shlb
in
mov
inc
fwait
xor
jp
pop
pop
pop
stos
inc
test
dec
mov
dec
int3
push
or
push
push
sbb
xchg
shrl
fdivrs
clc
in
orl
bound
jne
lahf
inc
xor
fwait
cltd
mov
mov
inc
enter
cmp
and
pop
fsubrl
daa
movsb
insb
bound
test
ja
addr16
outsb
ficoms
push
std
inc
mov
dec
cwtl
xchg
loope
inc
xchg
and
xchg
push
dec
shll
pop
mov
xchg
dec
or
ret
xor
addr16
mov
cmp
scas
cmp
dec
xor
clc
sbb
ret
push
movsb
mov
test
sbb
scas
mov
jno
pop
and
outsb
es
push
add
and
push
int
adc
fistps
rorw
jno
xlat
or
mov
push
mov
aad
jle
aad
and
iret
cmp
fs
push
sahf
outsb
mov
adc
jg
popf
mov
das
or
push
std
call
xor
int3
adc
ljmp
je
or
xchg
lods
jp
xor
pop
xchg
or
scas
jae
push
xchg
or
add
cmpsl
mov
ret
cltd
adc
mov
mov
cwtl
xor
mov
test
ljmp
lds
cmpsl
jo
dec
cmp
test
fcoml
imul
cli
stos
or
or
push
repz
outsb
lahf
jg
add
push
lret
inc
insl
loop
mov
inc
mov
imull
dec
inc
fiadds
inc
fs
pusha
in
stos
popf
and
mov
addl
fadds
mov
or
adc
cmp
inc
sbb
lcall
add
popf
pop
int
adc
leave
rol
iret
arpl
ja
repz
jmp
sbb
outsl
jl
icebp
cltd
fxch
inc
or
push
lcall
mov
cltd
and
dec
sub
dec
addr16
adc
and
mov
mov
mov
push
repnz
ja
int3
fs
sub
cmc
fs
cmp
jl
xor
push
dec
rorb
sahf
lock
dec
mov
push
mov
dec
sbbb
in
jns
aad
js
xor
xchg
in
shl
sbb
arpl
xchg
sbb
xchg
and
cli
mov
hlt
rorl
bnd
cmp
push
and
movsb
xchg
cltd
call
and
xchg
adc
adc
or
add
dec
mov
stos
fistl
mov
mov
xor
jmp
lret
pop
dec
adc
in
fwait
andl
nop
jl
cmp
and
inc
in
int3
clc
mov
xchg
mov
adc
jp
add
mov
mov
ret
xchg
xor
fisubrs
or
and
leave
and
shll
rcrl
adc
fstpt
xchg
or
scas
repnz
push
lods
push
pop
mov
in
push
insl
bound
sbb
rcrb
mov
cmp
dec
std
test
ret
in
int
sarb
cltd
sub
jae
leave
sbb
pushf
insl
test
push
or
dec
xchg
lods
mov
adc
sub
and
or
std
cltd
test
out
dec
adc
loope
pop
loop
mov
js
push
cltd
insl
sti
or
add
insb
jecxz
inc
sar
jno
cmpl
jp
sbb
or
lret
stos
shlb
push
test
dec
stos
jl
out
rcl
fimull
repnz
mov
hlt
inc
dec
bnd
mov
xchg
in
or
stos
arpl
popa
popa
xchg
dec
mov
mov
inc
push
push
insb
dec
addb
pop
dec
cmp
mov
sahf
xor
leave
cmp
pop
mov
dec
out
jns
das
dec
lahf
mov
sub
rolb
mov
xchg
adc
fwait
mov
lds
sbb
les
jo
push
cmpsl
test
jg
add
out
stos
in
and
lret
rorl
xchg
xchg
fwait
in
cwtl
jne
lods
fnstcw
dec
cmpsb
lods
pop
shlb
push
andl
enter
fldcw
cmpsb
jnp
xor
icebp
faddl
pushw
mov
sbb
out
lret
mov
in
loopne
addr16
enter
sub
pusha
mov
cmp
mov
in
mov
add
mov
sbb
movsb
in
cmp
mov
push
pusha
push
jae
out
and
jg
mov
test
cld
sub
pop
cmp
icebp
stos
xor
mov
inc
fldt
mov
repz
add
ds
pop
in
jmp
dec
pop
push
add
shll
and
push
dec
ret
mov
cmpsl
add
push
mov
ret
mov
inc
dec
cmpsb
imul
sbbb
cwtl
cltd
sbbl
scas
adc
ret
hlt
lods
fidivrs
inc
negl
das
int3
xchg
test
sub
loopne
adc
popa
or
sbb
pop
add
sub
xor
sub
push
push
or
jmp
dec
mov
push
rclb
loop
int
ss
jge
xchg
xor
jne
mov
or
sub
xchg
sub
cmpsb
push
test
in
call
shrl
xchg
movsb
lcall
mov
xchg
aaa
loope
and
mov
cmp
jno
repz
in
push
out
and
xor
cmpsl
fmuls
in
mov
cmpsb
icebp
push
dec
mov
jge
insl
insb
or
and
inc
sub
xor
mov
pop
sub
push
out
sbb
push
divb
lret
pop
sbb
mov
sbb
popf
lcall
cmp
jp
push
dec
mov
jbe
sbb
mov
dec
push
sbb
cmp
cmpsb
fisttps
cmpsl
shrb
add
arpl
lods
enter
pusha
bsr
inc
cmpsb
adc
jg
lcall
and
shrb
daa
fistl
scas
xchg
inc
lods
outsb
cs
rcr
pop
add
sub
or
fneni(8087
dec
jbe
jnp
aaa
add
xor
jno
fadds
data16
into
scas
add
jns
xchg
sarl
int
xchg
pushf
xlat
movb
xor
jno
mov
jmp
dec
cli
jb
ss
lahf
imul
xor
in
lahf
cmp
xchg
mov
adc
adc
insl
clc
shrl
jmp
mov
pop
iret
lcall
popf
mov
leave
jae
pop
sub
lcall
jo
sub
pushf
push
adc
dec
sub
jmp
push
add
imul
lds
shl
dec
mov
dec
mov
xorb
stos
pusha
jb
dec
adc
inc
xchg
jecxz
frstor
pop
sub
add
inc
inc
cwtl
mov
pusha
enter
lods
inc
pop
iret
shl
jo
add
sahf
out
jle
sub
jmp
int3
or
jnp
sub
inc
test
pop
fstl
int3
sub
bound
hlt
stos
mov
je
stos
outsl
cmp
pop
movhps
push
adc
test
adc
shl
fisttpl
sarl
dec
je
insb
mov
mov
ds
sub
xor
daa
andb
dec
mov
cwtl
or
push
shlb
mov
fstps
addl
out
stc
fcompl
jmp
dec
xchg
sub
or
cmpsl
xor
dec
int3
inc
out
mov
push
push
lock
push
insl
jge
and
mov
and
add
icebp
fisttpll
das
mov
stc
push
sti
jmp
test
mov
jbe
push
std
jp
push
insl
out
jg
adc
xor
mov
inc
xchg
sub
outsb
fdivrl
mov
push
mov
pop
imul
adc
cmp
push
jmp
xchg
test
in
sbb
and
cmpsb
aaa
js
mov
pop
push
dec
xlat
loopne
notb
xchg
ljmp
push
decl
jno
push
or
push
pop
sub
dec
push
jl
mov
add
mov
add
push
lret
and
xor
fsubs
sub
sbb
addb
outsl
lret
push
repz
push
lds
or
leave
std
and
les
gs
cltd
inc
mov
aad
and
movsb
notl
ds
loopne
shr
dec
aad
inc
add
mov
test
fcomip
xchg
lret
les
pop
mov
cmp
clc
push
movsl
outsl
cmp
hlt
sub
adc
mov
inc
pop
lods
repz
subb
mov
mov
jns
sbb
push
sbb
mov
jno
push
cltd
push
les
inc
push
sti
fcoml
shrl
test
sub
adc
mov
add
mov
sub
inc
dec
sti
add
sub
cmp
xor
out
int3
jbe
int3
xchg
dec
idiv
dec
push
or
andb
mov
pop
loope
rol
sub
adc
and
mov
xlat
test
sbb
dec
outsl
xor
enter
mov
dec
pop
mov
das
jmp
sub
scas
push
insb
mov
xchg
or
dec
and
xchg
jnp
fadds
rolb
call
push
sub
ror
pop
dec
inc
xor
xchg
pop
subb
fadd
mov
inc
pop
push
cmp
push
cltd
push
cmp
aam
jmp
or
jge
push
cmpsl
inc
rol
outsl
loope
xchg
cmc
jne
and
sbb
dec
mov
adcb
call
or
xchg
jo
shll
xor
in
mov
std
imul
adc
fidivrs
fidivl
dec
dec
cmpsb
popf
lea
lret
shll
lds
popa
push
mov
add
shll
roll
jb
sbb
push
je
test
mov
lock
lods
rorl
enter
aam
pop
call
repz
int
add
adc
jne
pop
test
rcr
xlat
in
adc
push
pop
insb
insb
pop
cmp
sbb
adc
sbb
jbe
stc
inc
cmpsl
and
sbb
and
icebp
loope
inc
dec
push
dec
enter
test
cs
dec
fidivrs
sbb
cli
cli
and
xchg
sti
and
sbb
cwtl
mov
addr16
movsb
inc
mov
jp
fwait
mov
adc
cmpsb
cmp
repnz
adc
mov
pop
or
sub
bound
push
int
adc
cmc
idivb
or
push
xchg
mov
shr
test
sbb
cmpl
into
out
lret
cmp
inc
pop
jnp
sub
cmp
mov
push
pop
into
in
test
mov
scas
stos
repz
ljmp
lods
cwtl
inc
in
fisubrs
mov
repnz
sub
daa
outsl
mov
push
aas
or
dec
out
jne
fcomps
sbb
cmc
dec
rorl
mov
out
das
mov
es
movsl
pop
mov
sub
cmp
aaa
dec
mov
jne
cs
fisttpll
push
push
das
sub
xor
test
push
or
mov
xchg
cmp
or
dec
jns
inc
addl
adc
cmpsl
push
cmpsb
dec
inc
bound
or
push
in
push
adc
in
jg,pn
ljmp
jns
xor
or
nop
sub
jo
loopne
xchg
jp
imul
lods
add
mov
repnz
sahf
and
push
dec
jle
push
mov
mov
mov
orl
dec
ret
sub
inc
fists
dec
iret
or
pop
jp
jno
cli
jb
xchg
sbb
mov
ret
push
in
loope
add
bound
test
adc
repnz
and
or
sbb
xchg
daa
push
add
test
loope
mov
int
push
scas
adc
rep
rcll
shrl
mov
pop
mov
sbb
in
loope
dec
std
call
aaa
sahf
sub
out
pop
adc
lcall
adc
xor
sbb
mov
add
ret
adcb
mov
add
inc
or
inc
push
clc
sub
and
insl
mov
cmp
call
dec
xchg
icebp
xchg
xor
ret
rol
sub
pusha
jmp
xor
imul
arpl
add
pop
in
dec
adc
pop
pop
insl
leave
push
repnz
pop
sbb
pop
push
and
dec
dec
aam
adc
adc
repnz
cwtl
sbb
fstp
mov
les
aad
test
sub
push
jmp
pop
clc
cmp
in
into
std
adc
sbb
mov
pop
xchg
clc
dec
jb
nop
jns
push
in
scas
imul
pop
jp
and
stos
mov
insl
scas
frstor
mov
in
pop
push
in
fcom
aaa
arpl
push
fadds
nop
jae
push
push
subb
or
cmp
stc
andb
out
push
rorl
aas
cmp
jl
mov
jmp
add
jae
stc
and
outsb
or
lret
ret
jmp
push
adc
mov
outsb
jl
mov
cwtl
dec
jns
xor
and
push
pop
ds
dec
jg
out
mov
fmulp
dec
pop
ljmp
dec
bound
mov
rcrb
idivl
jae
sub
incb
rol
pop
adc
fabs
dec
insb
repnz
daa
sub
push
sub
mov
or
bound
es
xor
push
test
jg
outsl
loop
and
mov
mov
mov
add
gs
out
push
test
test
mov
pop
mov
jmp
in
sbb
mov
push
adc
mov
mov
hlt
mov
xchg
xor
adc
enter
pushf
xchg
es
aaa
dec
xchg
mov
xor
push
in
inc
ror
push
subl
push
sub
mov
dec
mov
lcall
mov
jno
in
push
loopne
push
movsl
cmovp
xchg
mov
subb
subb
mov
lahf
scas
andps
or
inc
mov
mov
inc
mov
int3
sti
mov
inc
mov
scas
push
lcall
scas
mov
cwtl
loop
cmp
add
dec
or
sbbl
inc
test
inc
xchg
shll
cmp
jecxz
mov
mov
mov
sub
clc
fcompl
fs
rcl
iret
movsl
out
add
push
imul
jo
adc
mov
es
sbb
cmp
stos
pop
cmp
inc
sbb
pop
pop
sbb
sub
call
sub
imul
test
inc
push
into
cwtl
adc
jne
xor
rcrb
loopne
repnz
mov
in
pop
sub
mov
pop
fldcw
adc
push
mov
ljmp
xchg
lods
mov
mov
std
push
shrb
cmp
in
lret
mov
push
xchg
call
push
js
gs
sahf
aas
stos
adc
repnz
inc
jae
push
repnz
out
aam
scas
jae
pop
push
inc
stos
pop
mov
fwait
sbb
mov
adc
cltd
mov
sti
xchg
pop
xchg
jecxz
ret
dec
fadds
rcl
mov
mov
sub
cmp
or
or
outsl
cmp
cs
je
fdivrl
lahf
dec
addl
in
adc
ja
insb
mov
and
rorb
adcl
stc
sub
adc
xor
fmuls
mov
push
dec
jo
inc
fidivl
ja
clc
lods
sarb
inc
add
xchg
mov
jge
cltd
adc
scas
xchg
aam
mov
lahf
push
insb
cmpsb
pop
dec
les
jnp
and
insb
xor
sub
cmp
iret
pop
les
pop
push
call
leave
adc
inc
stos
mov
or
cmc
mov
enter
mov
lock
test
call
repnz
xchg
pushf
pusha
leave
rcl
scas
fs
or
mov
outsl
incl
addr16
xchg
push
mov
xchg
clc
dec
and
xchg
mov
std
or
mov
cs
popf
mov
dec
fdivrs
jle
mov
xchg
sahf
sbb
in
test
jmp
and
cmp
mov
arpl
mov
frstor
in
dec
arpl
jle
jmp
addl
or
pop
and
scas
es
xchg
cmpb
adc
lahf
sbb
jnp
pop
jg
data16
jl
jl
outsb
es
push
mov
jle
pop
xchg
ds
pop
jae
jmp
pop
jg
pusha
push
jno
loope
repz
and
outsl
push
lods
sahf
shrb
adc
add
lock
add
in
sub
inc
imul
ficoml
sbb
cmp
out
push
dec
test
xchg
push
adc
int3
test
push
popf
incl
xchg
jg
cltd
mov
push
pminub
mov
and
inc
inc
shl
test
cmpsl
cmpsl
pop
cmp
xchg
icebp
jbe
add
jne
repz
orb
xchg
dec
fldt
rorl
mov
gs
adc
repnz
lea
adc
and
mov
nop
aad
push
sub
mov
mov
movsb
clc
dec
sub
les
int
imul
jb
push
add
or
hlt
daa
cli
js
jne
movaps
cli
ret
scas
xchg
in
lea
fdivl
movsb
mov
pop
push
mov
mov
xor
mov
cmp
xchg
bnd
and
je
push
sub
outsl
cli
adc
add
or
sbb
orb
mov
loopne
and
jns
and
bound
scas
push
js
push
pop
inc
inc
mov
xlat
push
scas
enter
jno
or
iret
jmp
inc
jle
mov
xor
gs
int3
mov
push
and
xor
adc
pop
lods
les
in
subl
mov
mov
dec
pop
xchg
popf
push
sarl
outsl
dec
into
int
rcrb
add
add
and
xor
dec
or
fists
incl
sub
push
addb
push
out
mov
lea
mov
mov
push
pop
mov
ret
xchg
inc
ja
or
mov
ss
pusha
xchg
sti
es
and
aas
add
pop
inc
mov
xchg
mov
mov
pop
mov
xchg
and
outsb
enter
cmp
movsl
sub
cmc
fmulp
aaa
mov
imul
ret
cli
or
cmc
jnp
mov
pusha
enter
mov
call
fnsave
mov
xor
jae
aaa
inc
mov
das
hlt
push
mov
dec
test
pop
pop
je
ss
cmp
sbb
add
jo
scas
sub
shl
add
xor
test
outsl
sub
cmp
pop
push
test
loope
jb
cmp
pop
jne
dec
and
test
pop
cmc
in
lea
daa
add
fsubrl
mov
call
imul
xchg
xchg
dec
icebp
push
fisttpl
int
and
sub
lret
fiaddl
mov
mov
ret
pusha
mov
mov
rol
subb
stc
sbb
lret
rclb
cmpsb
xchg
xchg
push
and
std
ror
dec
and
call
jne
daa
insb
inc
shlb
test
lods
lret
aad
push
iret
xchg
pop
repz
es
aam
test
test
test
iret
sbb
mov
fs
insl
idivb
lds
inc
je
xor
jge
sub
movsl
vhsubps
cltd
jae
dec
fldcw
push
mov
lret
mov
adc
mov
ds
jecxz
xchg
xchg
push
fnsave
mov
gs
ljmp
push
adc
je
push
inc
mov
push
and
cmp
pop
pop
mov
inc
adc
cltd
mov
add
adc
into
mov
fcoml
sti
push
jge
and
xchg
fisubs
xchg
dec
data16
or
mov
aaa
sub
mov
les
sarl
inc
fldt
inc
sub
mov
movsb
mov
mov
fisttpl
in
outsb
dec
jo
adc
in
test
cmpsl
sbb
dec
sahf
fisubs
loop
xchg
mov
inc
addr16
jns
mov
adc
movsb
pusha
hlt
sbbl
xor
mov
xchg
add
rcrb
int3
pop
adc
out
in
shrl
and
stc
mov
aaa
fdivrs
out
mov
imul
mov
mov
int
bound
or
push
and
xor
sub
lret
pop
pop
aam
xchg
aam
and
in
adc
test
jns
fnstcw
stos
fwait
sub
fbstp
mov
dec
jecxz
fdivr
testb
or
test
lock
lods
mov
in
cltd
sbb
jge
cwtl
sbb
sub
sbb
sbb
addl
and
sahf
fucomi
cli
lds
dec
nop
mov
mov
pushf
inc
push
movsb
sbb
mov
aam
pop
mov
pop
std
sahf
jns
outsl
adc
ds
pop
mov
icebp
sub
add
int3
ds
sbb
mov
push
cmpsb
pop
cmp
in
sub
data16
ljmp
dec
pop
fiadds
adc
adc
lret
cli
jecxz
repnz
push
mov
inc
lea
repz
ss
lea
loop
lea
cmc
insb
xlat
cli
cmp
push
sub
sub
adc
stos
xor
jge
mov
ficoms
pop
aam
or
daa
jle
sub
dec
cmc
ret
push
push
in
iret
imul
outsl
xlat
das
mov
pusha
mov
and
cmc
pushf
out
shr
pop
mov
out
nop
stos
and
or
jae
cmp
cli
mov
xchg
xor
lds
leave
in
xor
ljmp
xchg
call
push
mov
aaa
sti
fdecstp
loop
xchg
sarb
cmp
lret
rorl
xor
dec
aaa
or
out
lret
cmp
sub
or
jno
ret
inc
mov
xor
fsubrl
xor
dec
add
inc
ds
adc
in
loop
add
add
mov
jg,pt
mov
loopne
mov
push
inc
setae
sbb
mov
mov
pop
aad
adc
adc
in
adc
push
and
rolb
jp
stos
subb
push
xchg
call
sti
loop
xchg
push
xor
jge
mov
pcmpeqd
jb
fwait
mov
jnp
mov
pop
and
fstpl
outsb
cli
sbb
xchg
dec
xchg
inc
mov
pop
cmp
cmpsb
fwait
dec
icebp
imul
popf
fisttps
dec
push
lods
cmpsb
loopne
mov
cmpsl
mov
pop
mov
cmpsb
es
ficompl
mov
ret
push
adc
xlat
ds
mov
call
push
stos
fucomi
mov
cmpl
stos
imul
push
sti
mov
pop
out
dec
push
inc
sti
adc
xchg
and
out
jg
mov
aas
xchg
imul
mov
popa
stos
incl
mov
lret
fidivl
shll
adc
push
cmp
repz
sub
out
out
and
shll
enter
shr
cs
pop
pop
mov
cmp
cmpl
in
sbb
sbb
outsl
sbb
mov
mov
xchg
lods
mov
sbb
or
jmp
int3
popa
sbb
fs
or
adc
out
sbb
addr16
jp
mov
mov
inc
or
cmp
fsubs
add
mov
jmp
stos
jmp
das
out
mov
sbb
lret
out
lahf
mov
pop
out
sbb
incl
push
lret
shlb
mov
mov
adcl
test
sub
out
ret
xor
leave
movsb
lea
mov
scas
cmp
cmp
push
test
into
loopne
add
mov
mov
fldenv
ja
mov
push
add
ficoms
mov
test
xor
xchg
xchg
xchg
jnp
lock
xchg
dec
test
les
aad
sarb
aam
inc
flds
mov
push
jne
mov
ss
shrl
scas
jmp
js
test
dec
jmp
icebp
aaa
ja
cmp
push
adc
fsts
movsb
pop
sbbb
fisubrl
jmp
sbb
popa
inc
loop
loop
in
paddusb
cs
jmp
inc
cmpsb
addr16
pop
push
jne
xor
xor
and
stc
icebp
aad
xchg
int
lds
div
mov
cmp
ljmp
cmp
out
adc
xchg
lock
sub
sub
jg
lods
mov
xor
xchg
mov
xchg
ficompl
inc
ja
rcr
int
jl
ficompl
mov
gs
inc
add
fwait
mov
fidivrs
arpl
lods
in
jno
add
shl
dec
nop
adc
or
cmp
cmpsb
xchg
dec
mov
and
leave
xor
mov
das
aas
jbe
and
pop
aaa
stos
fstl
sbb
js
pop
xchg
xchg
fdivrs
insl
pop
movsb
sarb
cmp
sti
sub
loopne
popf
pop
fdivr
int
cmpsb
lret
sti
inc
mov
pop
rcrb
mov
testl
scas
sbb
or
movsb
add
sarl
out
fxch
pop
adc
and
iret
inc
daa
sub
sbb
jne
pop
incl
cmp
test
lahf
inc
cmp
jg
cwtl
lret
test
in
sbb
xchg
adc
mov
dec
shrl
and
mov
pop
cs
mov
mov
sbb
loopne
mulb
pop
mov
xchg
sub
or
sahf
and
xchg
int3
inc
lret
sarb
mov
cli
adc
push
aaa
loopne
stos
scas
cmpsb
outsl
pop
int
add
jo
cmp
fidivl
std
outsb
test
dec
pop
mov
xchg
movsl
sub
ret
pop
cmp
jp
in
xchg
mov
iret
mov
mov
adc
shlb
adc
add
xchg
sub
inc
dec
sarl
ret
testb
and
test
xchg
lds
adc
test
movsl
jno
out
test
and
jg
cmc
addr16
xchg
inc
pop
lahf
bound
aaa
scas
jle
jg
or
int3
and
lea
mov
xor
sbb
ss
dec
shlb
in
cmpsb
cmp
inc
jge
les
pop
xor
mov
clc
pop
aas
das
sbb
mov
xchg
fists
mov
jge
addr16
mov
orb
fbstp
scas
das
test
add
aaa
xchg
mov
jle
mov
jb
inc
scas
sbb
mov
adc
or
out
mov
sub
lds
pinsrw
cltd
daa
mov
push
pop
fwait
cmp
push
mov
gs
popf
ret
cltd
push
jnp
inc
out
adc
es
pop
int3
lods
icebp
test
pop
lret
jae
dec
mov
jo
push
mov
xchg
ljmp
sbb
sub
lahf
xchg
addl
loop
mov
push
xor
mov
mov
pop
iret
xchg
add
jl
dec
push
out
and
ja
sub
mov
insl
ret
jmp
inc
jmp
pop
jne
mov
push
out
or
ja
xor
jmp
aam
or
jge
mov
mov
cld
mov
jg
orl
out
stos
pop
outsb
pop
xchg
and
sub
iret
pop
rolb
les
cmp
pop
sbb
push
jnp
xchg
pop
xlat
ja
cld
mov
push
into
or
lcall
pop
imul
cmp
aad
pop
lahf
ret
pop
inc
inc
jl
add
pop
in
sbb
pop
jb
cmpsb
in
sub
fs
nop
rcl
movsb
addb
in
cmp
shl
lret
dec
sub
movsb
cs
out
pop
dec
in
test
inc
mov
mov
pop
mov
mov
aad
xchg
std
inc
xor
in
mov
cmp
push
mov
push
mov
jge
lds
push
les
sub
and
sub
cmp
mov
jle
mov
in
mov
shlb
cmp
jmp
jmp
popa
jnp
xchg
pop
stc
mov
dec
pushf
loop
in
in
add
sbb
and
aad
cmc
jnp
mov
sbb
insb
dec
jns
jmp
mov
or
jmp
mov
xchg
push
jl
cmc
cli
mov
xchg
lcall
add
mov
sti
ja
cmc
sbb
aad
test
rolb
jns
popf
mov
jge
push
andl
push
push
jo
ret
ret
addr16
imul
jo
lods
and
imul
cmp
dec
mov
mov
or
sub
push
fcomip
jmp
dec
jno
or
mov
lods
imul
mov
adc
or
inc
repz
mov
and
jb
dec
jge
ret
pop
dec
push
inc
pop
dec
jle
jecxz
movsl
fld
inc
pop
movb
sub
fcomi
push
pop
shrb
ss
add
mov
scas
push
sub
push
in
js
xchg
insb
add
imulb
ret
fldl
and
dec
ret
dec
cmpsl
add
clc
xchg
test
fs
test
int3
push
push
or
cld
sub
dec
dec
leave
sbb
jge
and
clc
adc
push
jbe
jno
cld
cmp
bound
mov
adc
outsl
and
sbb
adcl
inc
dec
lret
hlt
jge
cli
ds
or
push
insl
cmp
mov
pop
fs
mov
add
mov
inc
cmc
or
call
jecxz
add
test
adc
setno
pop
shlb
and
les
jns
xor
xor
inc
arpl
add
add
insl
in
cmpb
pop
add
inc
test
pmulhw
aam
pop
jns
incb
mov
popa
jle
sarl
ret
or
sub
xor
push
mov
pop
lcall
jg
std
xchg
dec
les
popl
dec
xchg
xorb
mov
or
rorb
add
incl
mov
testl
inc
aam
int3
enter
inc
stos
xchg
ret
lods
xor
ss
shl
sbbl
sbb
mov
push
in
pop
int3
adc
xor
xchg
xor
xor
lds
hlt
mov
fdivs
mov
fs
push
in
mov
lock
inc
xor
xor
push
loope
lock
add
inc
repz
repz
scas
rcrl
ds
rcll
or
jo
sbb
sbb
gs
sub
sub
or
test
mov
repz
push
pop
mov
xchg
dec
mov
in
sahf
leave
data16
sbb
test
addr16
cmp
jge
mov
add
flds
lods
fisttps
fs
sahf
push
scas
pop
inc
dec
sbb
cmc
mov
test
js
lock
movsl
jae
xchg
cmp
and
lcall
mov
icebp
jmp
mov
stos
add
adc
or
insb
inc
cmp
mov
inc
xor
xchg
sbb
leave
jmp
aaa
aad
fistl
cmp
cmp
and
pop
push
jmp
subl
jo
das
xchg
mov
frstor
pop
es
rcl
jns
inc
push
ficoml
mov
dec
mov
imul
ss
lds
push
outsl
xor
sub
xor
sub
mov
sub
adc
lods
nop
mov
xorl
imul
mov
cwtl
fidivl
push
insl
aaa
sbb
stos
hlt
sbb
cmp
jbe
inc
push
xor
mov
adc
bnd
mov
mov
insl
rcrl
inc
lcall
sub
fadd
int
ret
xchg
pop
xchg
dec
sbb
out
cmp
sti
or
jl
xchg
loop
sbb
mov
int
jmp
add
ret
push
mov
sub
stos
adc
rcl
jmp
push
in
repnz
nop
cmp
fdivl
mov
pop
call
adc
scas
rcll
cmp
and
negb
xchg
dec
aaa
add
and
aam
into
jmp
push
pusha
in
lods
push
arpl
out
mov
in
ficoml
insl
and
inc
inc
and
xor
sub
lret
call
lds
pushf
adc
mov
or
enter
push
inc
bound
into
loop
dec
xchg
iret
cwtl
insb
lods
pop
lds
xor
mov
lcall
pop
dec
icebp
int
sub
jp
cmp
inc
sbb
add
inc
mov
xor
inc
sub
dec
pop
testb
imul
sbb
repz
in
scas
mov
dec
loopne
int
scas
dec
cwtl
mov
sbb
jmp
cs
pusha
bound
lds
adc
cmp
lret
xor
push
push
or
inc
lcall
jl
mov
mov
xor
and
inc
int
xor
mov
das
lods
imul
push
jae
arpl
xor
mov
inc
push
jnp
lods
inc
imul
push
push
ja
or
not
pop
in
and
repnz
adc
repnz
xchg
cvtpi2ps
cmp
xchg
fidivrl
and
out
addl
jecxz
dec
sub
in
push
mov
pusha
hlt
or
hlt
leave
pop
push
lret
stos
push
cli
pushf
imul
aam
dec
add
testl
pushf
cmp
sbb
adc
cmpb
mov
movsl
pop
push
adc
sbb
xor
leave
jge
scas
fwait
xchg
int3
adc
adc
stos
push
pop
cmp
mov
add
mov
movsb
sub
pusha
mov
je
mov
xor
out
mov
lret
lock
orb
sub
mov
aam
stos
in
daa
out
push
mov
xchg
idivl
arpl
add
push
out
lcall
out
aaa
add
mov
movsb
mov
divb
jle
push
mov
xor
leave
stc
sbb
pop
call
cmc
pop
mov
sbb
dec
call
dec
pushf
test
mov
add
out
mov
dec
sbb
dec
js
sahf
lock
pop
iret
shll
loop
pusha
sbb
push
daa
sbb
in
in
jbe
xchg
popa
inc
dec
add
stos
gs
fstl
out
pop
xor
outsb
and
inc
outsl
lea
xor
popf
and
inc
mov
daa
xchg
cmp
xchg
lahf
and
cmp
movsb
jo
jl
jae
call
xor
inc
fsubrl
or
icebp
popf
mov
add
mov
outsl
or
push
mov
iret
fstl
fsubrl
xchg
push
jecxz
jo
adc
cmpsb
adc
gs
add
dec
xor
cmp
xchg
jns
mov
jp
pop
ja
mov
inc
pop
scas
shlb
je
pop
stos
insl
fstpt
mov
dec
test
repz
push
push
jg
jnp
arpl
mov
push
add
pop
je
xlat
in
int3
pop
ljmp
jbe
in
mov
lods
sbb
lret
sub
adc
insb
sbb
or
push
cmp
dec
sbb
mov
mov
adc
stc
jae
loope
fimuls
add
mov
ss
or
adc
dec
out
inc
cmp
imul
xor
jl
in
dec
insb
and
or
aas
int
clc
jmp
sub
data16
lret
fmuls
or
jae
fsts
or
inc
push
inc
cmpsb
and
and
inc
cs
test
mov
cmp
cwtl
sahf
add
jmp
mov
adc
scas
mov
mov
push
das
add
test
cltd
mov
fldt
sub
andl
mov
pusha
adcl
sub
push
enter
xchg
ret
stos
in
arpl
adc
dec
shll
pop
repnz
pop
pop
out
call
lods
push
imul
mov
clc
add
mov
and
push
cmovge
adc
aad
mov
inc
push
test
mov
rcll
mov
cld
cld
mov
iret
iret
shll
jmp
aas
shrb
jg
pop
shrb
mov
cmp
movsb
fwait
cmp
inc
inc
cmp
lods
adc
loope
push
popa
add
cwtl
mov
xchg
sti
mov
jae
sahf
fdiv
cmp
bound
push
out
mov
or
jle
push
jns
adc
jb
push
je
dec
arpl
and
aad
add
inc
rcr
or
inc
in
stc
push
fsub
stos
fwait
sbbl
imul
dec
push
fbstp
test
sbb
repnz
mov
or
cld
and
add
lods
add
dec
xchg
imul
sub
fwait
out
mov
jb
fucomip
mov
les
mov
add
mov
cmpsl
cmp
sbb
push
shll
mov
stos
popa
insb
icebp
sub
scas
jl
cmp
sub
cld
daa
movsb
aad
inc
mov
cltd
cwtl
mov
sub
gs
dec
sub
and
fs
mov
push
add
sbb
test
cmp
insl
dec
jp
jae
stos
or
cmc
inc
rcrl
aad
lods
lret
in
xchg
movsl
subl
aaa
sbb
fcompl
jbe
sbb
mov
dec
pop
jp
pop
insb
inc
sbb
enter
xchg
push
dec
sub
add
addr16
jo
push
push
pop
mov
dec
xchg
xchg
jecxz
push
dec
les
add
inc
insb
lds
mov
out
subl
xchg
jmp
orl
addr16
sub
loop
adc
js
xchg
xor
shrb
pop
sbbl
iret
out
add
cwtl
mov
arpl
pop
aad
sub
adc
adc
dec
into
cld
pop
stos
push
xchg
push
xchg
pop
sbb
mov
nop
sbb
mov
and
adc
data16
mov
sarl
sbb
or
cli
aaa
enter
sti
in
add
jae
cwtl
mov
fists
inc
in
xor
cmp
xchg
arpl
mov
jno
lods
fldcw
cs
movsl
mov
in
pop
jb
adc
inc
cltd
in
dec
jle
adc
mov
iret
arpl
ljmp
adc
out
shl
arpl
jb
leave
arpl
test
repnz
dec
aad
pop
xchg
hlt
push
into
sub
jmp
lea
cltd
push
mov
in
in
adc
repz
sbb
jmp
scas
stos
jg
stc
pop
add
aam
jg
jmp
push
xor
aad
ds
addb
jmp
dec
and
mov
adc
hlt
scas
ret
repz
addr16
mov
cmpsb
mov
cltd
inc
aam
sub
push
xor
push
lock
jecxz
push
in
gs
bound
adc
sub
mov
lds
adc
xor
push
sub
push
mov
mov
stc
jge
pop
fwait
mov
jne
sub
jle
popf
jo
out
mov
lea
mov
jle
xchg
xor
cmp
xchg
mov
cmp
dec
mov
aas
mov
sub
sti
call
popa
and
mov
xor
dec
fimull
sub
sub
in
jns
aaa
movsl
cltd
jge
fcomi
adc
pop
mov
insl
stos
fcoml
hlt
ljmp
pop
pop
ret
inc
jns
add
and
jno
jmp
fwait
sysexit
ljmp
mov
stos
imul
in
das
stos
pop
test
adc
xchg
ret
in
sub
ja
rclb
push
iret
insb
aam
cli
fistpl
lahf
push
repnz
lret
add
ja
nop
popa
call
lahf
push
adc
mov
adcl
je
aas
jbe
test
mov
cmp
push
or
and
push
mov
cli
orl
out
cld
data16
jmp
xor
mov
loope
arpl
dec
xchg
and
orb
mov
js
jg
clc
jl
inc
popa
or
push
mov
pop
fdivs
in
fwait
popa
sbb
pop
mov
push
xor
jecxz
in
jbe
imul
in
lcall
scas
pop
cmp
stos
ss
mov
and
lds
aam
movsl
inc
scas
push
mov
adc
jb
pusha
sbb
or
sub
push
pshufw
fnstsw
adc
and
xchg
lret
test
ret
in
pop
push
mov
jl
pop
dec
sbb
loop
pop
repnz
scas
mov
sbb
push
insl
push
cmp
les
xchg
cmp
cmp
jbe
mov
gs
mov
mov
cmpsl
add
and
dec
add
xor
cmpsl
cmovl
cli
and
mov
fwait
test
lahf
fldenv
cli
jg
jb
enter
ljmp
imul
push
cmp
les
adc
in
shlb
fcomps
sahf
dec
jl
jl
adc
inc
dec
js
iret
lds
loope
cmp
adc
movsl
push
and
mov
jmp
dec
sub
sbb
xchg
xchg
mov
push
mov
push
push
jae
gs
cmp
roll
lods
mov
nop
imul
cmpsl
fs
jbe
mov
xchg
dec
xchg
nop
sub
jb
aas
xchg
mov
mov
dec
repnz
or
sbb
adcl
xchg
dec
jp
jmp
lcall
xor
mov
push
lcall
add
daa
pop
and
and
pushf
or
popf
sbb
jge
push
and
inc
jns
sbb
test
lahf
test
outsb
fnstsw
xchg
jae
callw
gs
mov
inc
lret
mov
das
jmp
and
rcr
or
mov
add
push
xor
std
sahf
aaa
sub
repz
fiaddl
lods
in
inc
pop
loope
decb
mull
add
int3
lcall
daa
ret
sbb
sbb
fstps
adc
sahf
test
adc
in
addr16
mov
sub
sub
xor
push
ficomps
stos
insb
sbb
pop
std
ret
cmpsb
imul
hlt
mov
adc
add
xor
mov
mov
cmp
sub
fs
sbb
into
icebp
xchg
cs
gs
push
out
push
mov
pop
sarb
jecxz
cmp
mov
jecxz
inc
xor
push
xor
pop
pop
cltd
movsl
cmp
leave
push
scas
jmp
push
lods
imul
ret
xor
insl
les
jns
outsl
push
pop
push
xlat
jl
dec
mov
dec
inc
and
pop
push
push
cmp
lret
fwait
out
or
dec
mov
push
shrb
cmpsl
fmull
stos
pop
lret
dec
pop
xchg
in
arpl
sub
mov
in
jns
fdiv
outsl
xchg
cli
std
out
adc
fpatan
and
ds
test
dec
jb
shll
push
or
movsl
and
jo
dec
roll
gs
in
or
jo
fsubrl
nop
push
bound
test
jmp
xor
adc
pop
pop
and
xlat
or
aaa
mov
sbb
lock
push
stos
mov
lds
popf
mov
lret
loop
cmp
insl
xor
and
xor
mov
jmp
jg
mov
sarl
pop
ret
mov
test
jns
or
mov
ret
fnstsw
push
call
pop
in
sbb
inc
push
mov
fdivl
ficomps
pop
in
sbb
cmp
leave
in
fsubr
jae
push
xchg
in
andl
pusha
fisttpl
pusha
sub
lea
add
imul
add
add
pop
jge
mov
int
inc
out
dec
lock
fsub
jno
push
insb
jns
js
in
shrl
stc
cmp
xor
jmp
jl
sarb
cltd
addr16
fcmovne
nop
ret
scas
je
shl
lods
sbbl
out
inc
inc
pop
xchg
rorl
sbb
out
cli
xor
cmpsl
mov
inc
lcall
or
xor
or
lahf
int3
or
enter
je
mov
lret
lret
fists
xlat
cmpsl
cmpsl
pop
hlt
sbb
bound
in
cld
aaa
cmc
sub
data16
repz
imul
or
testl
js
aam
and
sbb
sub
mov
pusha
fcmovu
xchg
and
mov
in
popa
xchg
and
xchg
repnz
mov
mov
jno
imul
xchg
xor
sbb
dec
sub
cmpsb
scas
lret
adc
test
cmp
lret
jp
mov
dec
mov
incb
sarb
or
mov
es
push
pusha
cld
xor
push
pusha
aam
adc
push
sbb
jne
cmovno
cmp
jbe
adc
pop
pop
std
int3
ljmp
pop
push
push
imul
inc
add
dec
popf
into
pop
cmpl
sbb
and
aam
cmc
jns
and
fs
push
or
mov
popf
mov
outsb
xor
xchg
les
xchg
lock
xor
mov
lock
or
scas
push
and
lds
cld
mov
mov
and
cld
jecxz
aad
les
push
lret
ss
fsubrl
xchg
xchg
stc
fcomip
sarb
dec
sub
jne
pop
inc
hlt
test
repz
hlt
jle
iret
mov
or
movsb
loopne
jp
add
sub
mov
inc
or
push
shrb
add
mov
inc
imulb
jecxz
jns
inc
inc
inc
and
cli
jg
fldenv
mov
push
jg
aaa
fwait
jb
scas
dec
stos
inc
jle
sbb
sub
inc
adc
test
push
repz
mov
and
xchg
loope
sbb
jo
pop
pop
cmp
xchg
add
jmp
cmc
in
or
push
or
test
data16
fs
cli
lret
mov
ret
sbb
lret
adc
jecxz
out
sahf
icebp
mov
pop
lods
outsl
lea
sub
and
or
inc
add
cs
mov
js
imul
adc
push
mov
int3
leave
ds
xor
xor
in
and
imul
out
jmp
cmp
jb
fdivrl
das
jnp
dec
pop
jg
decl
pop
or
in
cmp
cmp
sub
push
fldenv
pop
lahf
popf
ljmp
lret
sarl
cmp
std
ret
inc
scas
push
int
mov
jae
jle
mov
inc
add
aad
shlb
stos
mov
divw
push
std
lods
std
ret
inc
iret
dec
in
outsl
jge
ficoms
jo
mov
iret
lods
les
jne
xchg
out
mov
xchg
mov
enter
push
test
mov
les
lret
ret
iret
push
mov
dec
add
out
cli
sub
add
xor
scas
mov
mov
mov
mov
iret
add
enter
xor
in
test
and
adc
aad
mov
add
pop
out
xchg
movsl
jge
sahf
cmpb
or
sub
sarb
and
rep
and
mov
or
push
repnz
out
xor
dec
or
push
mov
aad
insl
fnstenv
dec
ljmp
cmp
jb
xchg
andl
call
jb
pop
mov
mov
xor
das
aam
push
gs
ja
push
jo
add
stc
stos
push
int
push
cmp
mov
adc
xchg
cmc
add
les
aas
mov
push
test
sub
xor
mov
cmp
inc
mov
cwtl
sbb
sahf
xchg
and
or
adc
xor
sub
mov
push
fsts
push
int3
jp
mov
int
push
sub
movsl
icebp
fnstsw
push
mov
pop
lcall
std
jle
sbb
dec
xor
xchg
xor
pop
and
xor
xchg
ljmp
pop
fisttpll
ficompl
aam
dec
or
stos
jle
dec
adc
ljmp
stos
sahf
push
loope
clc
adc
arpl
clc
and
mov
bound
mov
pop
fwait
std
lcall
cmc
mov
test
cmp
inc
cmp
jmp
jne
sub
push
jno
in
mov
scas
sti
adc
inc
in
mov
dec
push
aas
ficoml
xlat
push
mov
push
fs
fwait
arpl
mov
mov
adc
jle
stos
add
into
bound
sub
or
pop
into
and
jmp
or
fs
fists
inc
mov
loopne
or
mov
clc
rcrb
pop
pop
jae
adc
in
dec
dec
mov
and
pop
add
and
push
ficoml
mov
mov
mov
lret
xor
cltd
stos
out
lods
push
insb
stc
dec
and
inc
inc
popf
scas
pop
in
mov
jecxz
pop
ss
sub
lahf
add
mov
pop
or
lea
sbb
cmp
icebp
jb
iret
inc
in
es
cwtl
mov
xor
mulb
adc
mov
pusha
add
push
jge
movsl
push
jmp
and
xor
mov
push
add
dec
push
loope
dec
hlt
sub
pusha
sub
mov
bound
icebp
sub
xchg
dec
add
cwtl
fwait
jmp
pop
in
ficoms
mov
mov
hlt
xchg
push
aam
push
inc
or
or
xchg
and
or
lret
xor
ss
and
mov
scas
sbb
cs
sub
jae
mov
pop
xor
pop
lret
fs
lret
jnp
mov
sub
mov
xchg
sub
out
in
mov
push
cld
or
xor
mov
cwtl
aam
or
out
or
xor
ja
jp
cmpsl
sbb
sbb
or
nop
ds
into
jl
and
loopne
pop
dec
pop
lods
fcoms
push
mov
xchg
push
fldenv
jno
mov
loope
xor
gs
xor
jl
push
lahf
scas
jo
lcall
pusha
cmp
in
imul
mov
rol
out
mov
dec
and
cmc
aaa
stos
pop
ds
push
ret
push
test
xor
cmc
movsb
mov
lods
rorb
add
or
cmp
inc
inc
pop
rorb
adc
mov
cmpsb
jbe
gs
movsl
cli
mov
lea
fistl
idivl
pop
dec
aad
inc
adc
jno
fwait
jbe
popf
mov
fldl
mov
shr
and
cmc
dec
sub
adc
shrb
movsb
add
in
sti
xchg
push
sbb
pop
jns
jne
add
mov
stos
imul
arpl
push
push
pop
or
push
aad
mov
ret
repnz
fdivs
addb
push
or
gs
bound
add
ds
and
push
stos
push
lods
dec
sbb
sub
js
jns
mov
push
add
into
pop
outsl
adc
fwait
mov
aad
mov
ror
ja
xchg
ljmp
mov
popf
push
ret
mov
xlat
rcrb
mov
mov
scas
jmp
add
aaa
jg
scas
dec
pop
les
in
shrl
add
in
test
sahf
lret
aas
jg
jmp
dec
rorb
xchg
dec
popa
fadds
arpl
addr16
jb
imul
inc
leave
add
notb
mov
mov
mov
jae
int3
xchg
lcall
dec
fstpl
mov
xchg
or
stc
pop
into
popa
add
xchg
aaa
sti
mov
cs
mov
sub
cmc
ret
mov
cltd
cmc
push
cmp
aam
imul
adc
inc
push
dec
fstpl
or
outsw
ss
sub
test
outsl
pop
fldl
cs
addr16
inc
pop
mov
lock
fiadds
push
adc
lods
add
mov
mov
or
repnz
xlat
fs
jle
leave
dec
sub
cmp
mov
sub
pop
test
lea
pop
xchg
test
pop
push
xor
push
mov
jp
jle
or
inc
pushf
cmp
mov
shlb
int
push
and
adc
push
jne
add
push
lods
aaa
add
push
fisttpll
loop
pop
sub
xor
cmp
pop
es
adcb
fidivl
mov
xchg
mov
cmp
mov
push
cmp
inc
int3
sbb
imul
and
adc
mov
mov
dec
push
arpl
outsb
in
sbb
or
ja
sbb
stos
lock
jns
cmp
inc
dec
decl
and
xchg
repz
dec
xchg
addr16
sub
mov
lods
inc
popa
add
notb
mov
pop
sub
aam
adc
push
iret
cltd
fucom
sbb
insb
inc
mov
test
movsb
sub
mov
xor
mov
push
clc
dec
sbb
test
dec
lcall
lcall
lahf
jns
rol
and
mov
jle
gs
cmp
int
inc
jns
sub
push
mov
and
push
flds
stos
pop
lock
xchg
push
xor
jns
aam
xor
iret
or
or
adc
imul
lahf
cli
xchg
mov
push
inc
adc
pop
mov
ljmp
jmp
inc
rcll
outsl
ja
add
inc
repnz
sarl
sub
out
jbe
fwait
aaa
int3
cmp
mov
aaa
push
rcrl
in
or
jecxz
inc
mov
lods
push
sbb
inc
pushf
lods
xchg
inc
push
dec
mov
sub
shlb
or
pop
xchg
fstpl
scas
test
push
xor
out
shll
fcmovne
clc
out
add
hlt
cmc
pop
stos
movsb
dec
loop
test
mov
pop
mov
ficoms
out
sbb
test
mov
rcll
sub
sbb
push
in
fdivs
mov
aas
and
lods
sub
jge
push
loopne
out
inc
stos
in
iret
out
leave
and
xchg
or
into
imul
sbb
add
mov
xchg
xchg
lods
jbe
jns
and
jae
sub
shl
cmp
dec
pop
out
adc
xor
ret
xor
jo
add
adc
in
cmpsb
or
dec
repnz
gs
mov
or
push
adc
pop
insb
outsb
cmpsl
jns
out
lods
cmp
fstps
adc
sbb
stos
stc
bsr
cmp
mov
std
lcall
nop
adc
jle
push
and
incl
outsl
stos
xor
mov
lcall
sbb
fisubl
mov
xor
adc
mov
in
inc
cld
leave
bound
das
rcll
mov
mov
popa
sbbl
sub
jle
rorl
xchg
push
push
add
push
push
push
in
xor
mov
add
pop
cmp
pop
pop
dec
pop
lock
jmp
mov
mov
mov
jno
in
movsl
cmp
mov
mov
pop
mov
dec
pushf
adc
push
add
data16
xchg
fs
sbb
sub
mov
in
sahf
jne
mov
jmp
jmp
adcl
loope
pop
jne
fsubs
cld
xchg
cmp
das
push
ja
cmpsl
cmc
imul
cmp
push
pop
shll
push
movsb
lret
dec
lea
fnstsw
fildll
sti
mov
insb
nop
adc
mov
cmc
pusha
mov
xchg
dec
mov
mov
cwtl
xorb
xchg
mov
or
adc
es
test
jmp
mov
and
js
jae
or
pusha
das
fildl
es
scas
insl
fnstenv
jne
pop
sbb
int
xlat
or
addl
pop
mov
test
xchg
addb
cli
pop
jne
iret
jg
fistpll
mov
out
cld
sub
mov
shlb
neg
movsb
jne
pushf
pop
out
push
xorb
dec
sub
sub
mov
jns
xor
gs
cmpsl
std
pusha
scas
dec
cld
cmp
jns
cmpb
addr16
jae
sbb
and
mov
aam
inc
dec
sbb
mov
je
in
insb
xor
pop
pusha
mov
add
mov
jmp
aam
or
jbe
sets
lea
lods
fnstenv
or
sub
lcall
adc
mov
add
lret
add
mov
push
cld
movsb
xchg
aad
pop
mov
je
iret
imul
fdivp
push
incb
icebp
push
mov
dec
inc
xor
cmp
pop
lcall
add
xlat
mov
in
xor
daa
out
sahf
xchg
ror
lret
aas
push
xor
push
mov
jl
mov
fldenv
adc
jb
imul
aad
dec
and
add
jo
cmp
mov
movsl
adc
add
or
dec
cmp
sbbb
rorb
cmp
dec
xchg
mov
dec
jg
sub
mov
test
pop
ss
mov
jmp
cld
es
xchg
jbe
lea
call
or
or
popf
sti
jecxz
xor
add
jno
enter
pop
pusha
jl
fisttpll
xchg
adc
bound
jecxz
mov
cmp
and
pop
pushf
lret
insl
pushl
movsl
add
int3
fdivl
hlt
ds
jb
push
mov
push
dec
clc
mov
push
mov
icebp
jbe
aam
es
ds
lock
hlt
jno
popa
pushf
cmp
xor
pop
push
frstor
leave
int3
mov
push
push
push
sbb
sub
lods
and
jg
dec
dec
divl
fcmove
mov
dec
mov
pop
or
jg
fmull
and
loop
dec
pop
in
cld
mov
rolb
dec
fisttpl
pop
sub
adc
ja
xor
xor
je
fnstenv
fcmovnb
xor
or
data16
scas
mov
lea
lea
or
jge
jp
push
jo
xchg
push
rcrb
jecxz
fwait
xor
cmp
nop
push
mov
mov
and
add
push
mov
xor
inc
push
xor
fisttpll
fsubl
adc
filds
cli
add
sbb
cmp
sub
xor
stos
mov
lret
sub
repnz
movsb
mov
ss
lock
in
jl
popf
adc
sbb
cmp
jb
inc
add
xchg
xor
cwtl
sahf
cmp
lds
jecxz
jbe
mov
xor
jo
dec
shrl
inc
xchg
ja
out
cmpsl
or
fistpl
inc
push
dec
and
dec
fidivl
push
lret
cs
xor
je
adc
or
out
jnp
icebp
roll
sub
lret
scas
stc
add
in
rolb
mov
pushf
out
mov
xor
insl
push
popa
pop
mov
ds
lds
jl
outsl
ss
mov
or
xchg
stos
out
add
pop
inc
cmp
xchg
hlt
cltd
iret
mov
call
mov
mov
push
mov
cwtl
in
lret
ret
pop
xor
dec
push
lock
xchg
add
mov
sub
daa
jmp
adc
push
sahf
addr16
add
les
xchg
cmp
mov
jecxz
jae
mov
push
enter
sahf
fcmovne
mov
repnz
fnsave
adc
scas
jns
lds
sub
cld
les
or
sbb
jp
repnz
sahf
adc
imul
test
push
dec
sub
inc
push
mov
add
popa
mov
dec
or
add
lret
sub
inc
push
lret
and
mov
pop
cmpsb
inc
push
js
jle
out
cwtl
les
pop
filds
inc
ret
outsl
imul
mov
jmp
push
jg
jp
lods
mov
dec
xchg
push
nop
inc
push
les
cmp
push
imul
lahf
xchg
out
pop
in
int
fwait
cmp
xchg
ljmp
mov
xor
ljmp
and
xor
test
pop
push
jno
test
inc
mov
sti
ss
shl
loope
je
sbb
and
push
notl
mov
rorl
add
bound
in
out
pop
cmc
ljmp
out
xor
fldt
mov
in
cmpsb
mov
pop
jle
inc
sub
sub
cltd
cmp
lods
rcll
test
es
test
leave
xchg
fs
mov
sub
rcll
cmc
pop
and
xlat
adc
add
sbb
jns
push
rolb
push
test
push
mov
aas
inc
jg
jne
loopne,pn
xchg
cmpsl
loopne
gs
mov
mov
sbb
fsubs
mov
iret
mov
add
push
sbb
jno
add
stc
sbb
outsb
ss
sub
sbb
xadd
test
pop
fcompl
insb
fidivrs
negb
push
push
repnz
ljmp
aam
iret
popa
cmpsl
adc
inc
test
inc
jne
in
mov
jge
fisttpl
jge
aas
fs
push
lahf
pushf
push
imul
mov
cmpsb
ret
icebp
mov
and
dec
sub
mov
imul
das
cs
dec
or
hlt
int
lahf
inc
add
and
fisttpll
or
xchg
test
incb
cmpsb
push
xchg
xchg
mov
outsb
or
test
pop
adc
outsl
aam
mov
pop
and
out
mov
outsl
jno
mov
jl
xor
add
jnp
lods
lods
add
insl
cmp
mov
mov
pushf
lods
call
fcmovnbe
push
mov
rcrl
aas
mov
cmp
cli
xchg
addr16
or
dec
data16
or
add
dec
imul
xor
cld
sbb
rorl
out
aad
jne
in
push
cmp
pusha
mov
scas
and
or
mov
movsl
sbb
inc
jo
lods
pop
imul
scas
mov
mov
testb
xor
jmp
xchg
test
imul
aaa
pop
notl
jo
cmpsl
adc
add
daa
xchg
insb
mov
mov
adc
xchg
addb
loope
icebp
out
notb
cwtl
outsb
inc
dec
inc
fadds
mov
out
mov
jo
lock
pop
in
dec
outsl
pop
test
cmp
inc
mov
movq
or
cmpl
movsb
or
movsl
xor
jo
cmp
jbe
or
adc
daa
outsl
lock
repz
mov
jle
fadds
movsl
loopne
inc
lods
xor
pop
cltd
div
add
xchg
in
jl
shrl
imul
movsb
jno
or
add
adc
push
fisubs
dec
jnp
or
mov
stos
sahf
adc
mov
cmpsl
jae
fwait
addb
or
mov
dec
mov
fstps
idivl
icebp
xchg
shlb
out
fstps
pop
adc
dec
pusha
inc
adc
jmp
or
sbb
fldl
aas
push
pushf
and
mov
sbb
daa
sbb
cmp
inc
and
mov
add
test
div
loope
xor
jge
stc
push
test
cmp
jle
dec
xchg
and
insl
out
sbb
cmp
mov
add
xchg
jl
aad
xchg
mov
jno
pop
mov
pop
negb
clc
or
pop
or
stc
mov
js
jg
jl
pop
shr
mov
sub
mov
add
ljmp
push
daa
movsl
addb
dec
aad
sbb
sub
or
testb
cmp
mov
push
scas
jmp
inc
out
enter
shll
inc
sub
in
xor
mov
sbb
shlb
mov
fnstenv
push
jle
jb
push
lods
pushf
and
mov
jge
movsb
mov
aas
in
ss
jo
pop
scas
fcompl
jmp
cli
leave
and
mov
mov
lods
or
fstpl
ficompl
addl
cmpsb
pop
xor
ret
cmp
or
pop
pop
push
cmpsb
loope
adc
mov
xor
notl
inc
ss
push
mov
or
inc
jnp
sar
cltd
cld
xor
daa
lock
inc
das
dec
lods
push
mov
pop
rcr
add
cmp
and
xchg
mov
inc
pop
push
jle
cmpsl
js
mov
out
jno
sbb
and
dec
es
sub
repnz
call
inc
dec
fcmovu
xor
or
push
cmp
jae
pushf
adc
loope
and
pop
push
pop
xor
mov
jp
bound
pop
cmp
das
fs
dec
jno
js
cs
pop
cmpsb
xor
cmpsb
decb
push
mov
fnsave
mov
jnp
xor
cmp
mov
fsts
xlat
mov
mov
or
push
mov
adc
xlat
push
push
scas
lods
nop
mov
movsl
stc
xlat
aam
xchg
test
loopne
or
mov
arpl
int
out
add
js
mov
iret
std
jecxz
mov
ds
sbb
nop
mov
ret
mov
scas
idivl
out
outsb
pushf
or
into
fs
or
inc
xchg
sbb
and
pop
movsb
sub
adc
mov
push
inc
dec
loop
xchg
sahf
mov
clc
insb
sbb
push
cmpsb
lods
xor
mov
sahf
dec
pop
dec
hlt
incl
loopne
mov
in
xchg
std
jno
xor
ret
jle
push
out
push
fidivrs
cmp
xchg
pop
stc
jbe
push
or
rcrl
dec
sahf
xchg
inc
sbb
push
inc
dec
dec
mov
es
incl
andl
int3
sahf
cmp
add
jg
mov
jmp
cmp
jle
jbe
pop
out
aam
lock
lds
daa
xor
imul
lahf
mov
mov
mov
jp
jecxz
push
call
call
lds
fiadds
out
push
pop
inc
test
xchg
xor
cmp
xchg
pop
or
dec
inc
adc
scas
add
jns
jmp
mov
jecxz
push
lods
pop
push
fcmovu
loope
stos
ja
ljmp
jl
jl
repnz
addr16
into
xchg
xor
and
popf
push
dec
les
movsb
shl
lock
cmp
cltd
xor
push
stos
mov
out
pusha
xchg
mov
scas
shrb
jge
push
push
lret
shl
inc
in
inc
xor
lods
loop
outsl
fcom
push
mov
outsb
cmp
sahf
mov
js
mov
cld
add
push
cmpsb
int
cltd
inc
push
and
sbbb
stos
scas
mov
lods
rclb
fistps
andl
fimuls
scas
mov
dec
fdivrl
mov
sahf
hlt
push
pusha
or
das
pop
shlb
xchg
ss
lds
or
dec
sbb
push
dec
push
rolb
lods
lods
inc
cmp
idivl
test
fisubrs
cmpsb
and
dec
imul
call
mov
bound
repnz
jle
cmp
fdivrs
lods
mov
or
movb
das
rorl
jbe
and
fcmovnu
xchg
ljmp
cli
adc
out
inc
into
dec
lret
scas
mov
out
mov
aam
in
lds
jmp
or
enter
mov
mov
ds
popa
ljmp
fdivrs
or
pop
mov
jae
lahf
pushf
in
sub
mov
das
pusha
jge
dec
xchg
cmp
pushf
and
jo
cld
das
push
jg
mov
lea
jo
mov
push
sahf
xlat
xchg
push
inc
push
sarl
jle
cld
scas
push
lock
ror
bound
stc
inc
aam
and
dec
jnp
lret
ds
mov
mov
movsl
jb
fnstenv
adc
fldt
and
cmpsb
mov
cs
pop
adc
and
lods
cltd
pushf
push
jo
and
les
mov
jb
push
lret
jmp
push
mov
test
insb
pop
mov
jp
insl
stos
ficoms
mov
sbb
rolb
hlt
fisubrs
push
std
xchg
sub
jno
inc
add
data16
and
mov
popa
xchg
jge
fwait
sub
int
movb
inc
mov
xchg
js
and
dec
lahf
pop
inc
rcl
adc
push
inc
dec
arpl
xchg
mov
pop
or
fsubrl
mov
jnp
scas
push
xchg
push
inc
fildl
xchg
push
fcomi
mov
push
test
mov
pop
pop
cmpsl
mov
je
or
out
shrb
stc
pop
push
cmp
mov
jns
mov
push
inc
sub
insl
jae
push
and
js
addb
pop
lret
ds
pop
sbbl
and
hlt
bswap
mov
and
cmp
leave
dec
jge
cmp
sub
adc
orb
js
mov
xchg
mov
inc
adc
shll
xor
test
jmp
fidivrs
into
adc
inc
and
jns
push
mov
inc
lock
adc
in
adc
mov
and
rcrl
jg
pop
nop
cmpb
cli
cmpsb
or
cmp
xor
pop
and
dec
mov
mov
inc
repz
insb
out
jnp
sbb
fidivrs
fstl
in
cmpsb
sub
in
pushf
test
rorb
fisttpl
inc
ret
hlt
push
or
addr16
sarb
push
mov
mov
push
out
loope
cmp
xchg
adc
imull
mov
iret
push
stc
sbb
sub
dec
movsl
mov
mov
sub
lcall
ret
adc
hlt
add
mov
outsl
fs
ss
inc
aaa
push
loope
push
scas
sbb
xlat
cmp
jo
mov
das
xchg
mov
mov
add
sbb
in
jle
and
mov
and
pop
cmp
xor
and
movsb
nop
adc
add
xchg
sub
pop
idivb
adc
sub
mov
add
aaa
fistps
in
mov
gs
rorb
stos
aad
mov
xlat
cmp
ja
aam
fldlg2
jecxz
mov
int
dec
outsl
adc
sub
add
cmpsl
push
pop
sbb
rcrl
in
aas
dec
or
iret
push
dec
xchg
mov
jns
push
aad
lods
lods
adc
fdivl
lret
mov
out
pop
fs
addb
mov
or
inc
or
popf
rorb
test
sti
loopne
or
dec
pushf
daa
bound
insl
mov
add
push
icebp
fisubs
mov
leave
sub
sbb
outsl
adc
and
rorb
popa
cmpsb
mov
leave
ret
mov
movsb
and
lds
push
push
out
stos
dec
iret
mov
jo
jno
and
xchg
jns
sbbb
leave
xchg
dec
push
in
jg
inc
and
mov
std
and
xor
jae
mov
mov
cmp
mov
shrl
and
pusha
fisttpll
lea
jmpw
dec
mov
fcomps
and
in
cmpsl
es
mulb
clc
xchg
mov
and
jo
stos
mov
out
cmc
pop
std
push
sub
aaa
and
fldenv
sarb
dec
divb
icebp
xor
cmp
stos
fdivrs
xlat
or
nop
pop
ret
sub
decl
rcrb
push
xor
dec
or
dec
dec
adc
ret
lock
mov
mov
mov
push
jg
addr16
iret
inc
mov
shll
sub
ja
outsb
dec
or
jne
xchg
insb
into
lahf
outsb
shll
imul
mov
out
into
out
sub
repz
popa
fdivrl
push
gs
cmpsb
dec
loop
push
inc
mov
inc
stc
xchg
cltd
jecxz
subl
fmull
dec
cltd
push
mov
jae
ret
mov
testl
clc
jecxz
xchg
test
ffree
cmpb
mov
mov
je
test
xor
or
jnp
insb
jo
lcall
and
push
push
mov
add
test
outsb
inc
or
push
test
push
int3
es
sbb
push
stos
sahf
loope
jp
mov
push
mov
dec
ljmp
fdivrs
mov
inc
xchg
add
imul
data16
mov
pop
in
push
pop
mov
mov
sti
lahf
and
mov
jno
push
xchg
add
in
pusha
mov
adcl
jecxz
xchg
lock
mov
rorb
cmp
mov
jecxz
out
movsb
or
add
lea
cmovnp
jmp
cwtl
enter
mov
mov
sti
les
popa
mov
in
dec
mov
lods
xchg
movb
mov
pop
std
cltd
movsb
inc
adc
hlt
mov
cmp
mov
inc
hlt
mov
xchg
dec
mov
mov
dec
and
xor
fnstsw
xchg
addr16
les
clc
mov
mov
inc
arpl
outsl
imul
jnp
sub
ss
sbb
xchg
mov
sbb
loopne
cmp
cmpsb
fiadds
and
pop
imul
fwait
mov
fldl
cmpsl
stos
fdivrl
jae
jle
inc
mov
cwtl
mov
scas
fucomip
push
mov
dec
lret
in
mov
enter
std
out
arpl
outsl
rcl
fists
jo
fdiv
jmp
addr16
sub
faddp
test
sub
inc
cmpsl
iret
cmpsl
mov
jb
xor
cmp
or
or
scas
mov
nop
jg
fstpl
je
fdivr
fidivrl
pushf
xlat
adc
decl
dec
mov
in
mov
test
mov
ret
jns
dec
push
call
push
lea
jne
add
cwtl
sbb
dec
xchg
add
push
lock
inc
push
adc
fwait
mov
mov
jg
outsb
js
inc
stc
sub
pop
ds
xchg
scas
mov
stc
sarl
mov
aam
jns
movl
xor
cwtl
ror
mov
sbb
cs
jbe
movsb
inc
lock
dec
adc
movsl
jne
nop
ret
mov
call
or
jle
lret
push
aaa
loope
dec
cmpl
outsl
cld
xchg
adc
enter
frstor
sbbb
inc
sbb
cli
adc
clc
sarb
scas
xor
dec
jno
lods
mov
mov
mov
fdivr
adc
daa
xchg
loopne
arpl
imull
and
sbb
dec
aad
ja
sub
xchg
ds
cmpsb
loopne
add
jnp
std
xor
shlb
adc
cmp
mov
sti
out
xchg
aas
or
adc
push
sbb
ljmp
cmp
fs
loope
or
repz
jns
addr16
or
xor
pop
mov
insl
popa
xchg
mov
lds
cmp
into
mov
mull
cwtl
stos
cmp
loopne
cli
cmpsl
mov
dec
das
decb
lods
test
dec
jae
inc
add
mov
in
jb
mov
outsl
inc
add
push
push
daa
mov
add
icebp
shrl
push
fcoml
adc
mov
cmpsl
popa
sub
icebp
xchg
rol
push
or
xor
pop
push
mov
xlat
jl
and
pop
repnz
mov
adc
fsubl
push
movsb
inc
in
out
loop
jmp
add
iret
test
in
hlt
lods
or
cwtl
lret
or
xchg
mov
test
and
faddl
sti
mov
rorb
iret
dec
mov
or
mov
insb
dec
sub
push
mov
rcrb
in
fisttps
jmp
mov
ret
cld
mov
sahf
mov
add
les
and
repz
mov
and
test
loope
in
clc
inc
cmp
pop
push
add
xor
xor
lds
stos
pushf
push
popf
jns
cltd
mov
mov
mov
ja
in
je
lods
ljmp
jns
add
dec
sub
pop
lods
mov
stos
or
cmpsl
insb
hlt
cmp
and
add
ja
insb
inc
push
and
leave
repz
mov
pusha
cmp
push
test
xchg
movsb
ljmp
adc
xor
jne
movb
mov
mov
mov
mov
mov
sbb
mov
loop
bound
dec
pop
insl
fcmovnbe
cmp
sub
aad
dec
mov
and
and
les
jl
adc
movsb
xchg
fildl
les
sub
imul
fcompl
ja
cmp
orb
push
jecxz
iret
add
scas
fsub
or
loop
cmpsb
mov
test
mov
enter
loopne
movsb
sbb
aam
imul
inc
push
xchg
lock
dec
sti
mov
mov
mov
inc
and
and
movsb
shlb
bnd
call
lock
test
mov
jecxz
xchg
ret
pop
push
push
mov
enter
jne
pop
and
ret
push
and
sahf
iret
jmp
fnstsw
mov
iret
xlat
popa
test
pop
out
xchg
call
int
stos
dec
jmp
fcomip
mov
arpl
push
rcll
popf
adc
pop
pop
fwait
aas
aam
mov
mov
mov
mov
dec
gs
addb
inc
push
pop
cmp
stos
inc
xor
icebp
xchg
mov
and
loop
push
xor
daa
mov
fadd
sbb
jecxz
fistpll
aam
xor
jl
sub
mov
jns
scas
or
test
cli
xor
mov
ja
stos
test
cmp
insb
repz
mov
insb
mov
sbb
or
add
mov
dec
and
mov
xor
outsl
repz
push
mov
test
sub
sar
ret
shlb
test
mov
sbb
or
mov
stos
mov
adc
adc
stc
xchg
lret
cmp
sub
sub
ljmp
outsb
push
dec
xchg
jl
enter
inc
add
shr
nop
mov
sbb
icebp
sub
outsb
sbb
cmp
jo
lods
jne
out
cmp
and
dec
jo
dec
xchg
mov
sbb
in
ret
lock
in
dec
mov
lea
aam
fildll
add
add
dec
mov
jmp
pop
xchg
jg
xor
mov
mov
push
pop
adc
scas
icebp
sub
scas
xchg
add
fldt
mov
mov
adc
hlt
aaa
ja
popf
mov
sub
cwtl
xchg
sahf
hlt
xor
sbb
ret
sbb
dec
cmp
push
push
push
je
xchg
fsubr
sarl
push
xchg
xor
addr16
bound
jp
sbb
inc
inc
sbb
into
adc
movsb
xchg
pop
gs
mov
sbb
jns
xchg
shr
push
cmp
ljmp
cmp
and
xchg
inc
testl
scas
movsl
cld
sbb
dec
dec
js
clc
fisubrs
int
mov
xor
adc
in
mov
cmpsl
inc
mov
mov
ficoml
sbb
sbbl
xchg
mov
push
sub
repnz
sbb
pop
lds
stos
dec
ja
imul
out
int3
mov
xchg
dec
cmovl
inc
push
aam
scas
test
xor
dec
push
test
and
lcall
lds
fcoml
inc
xor
sub
sub
dec
xor
jbe
cmp
sub
iret
pop
push
int
fcmovne
lock
dec
adc
push
rcl
mov
push
iret
mov
mov
je
repz
addl
lods
int3
cmc
jno
sbb
push
push
sub
adc
sti
dec
cli
cmp
fidivrl
jmp
in
mov
or
mov
popf
dec
dec
jle
xchg
subl
mov
xor
fwait
jecxz
pusha
mov
pop
shlb
les
and
hlt
test
adc
mov
repnz
xchg
fidivs
test
imul
add
sti
adc
pop
add
mov
mov
xor
xor
xchg
add
hlt
dec
add
mov
mov
jno
jl
das
fcoml
jecxz
mov
adc
ja
xchg
sbb
mov
push
dec
cld
cmp
pop
sbb
mov
or
cs
insl
test
sahf
inc
sbb
lret
pushf
xor
jnp
std
add
xchg
xchg
shlb
adc
xchg
aad
adc
outsb
adc
sub
aad
imulb
jmp
adc
push
out
test
xchg
loop
fldcw
mov
pop
es
mov
xlat
and
sbb
or
neg
mov
gs
lret
les
mov
icebp
sbbl
scas
mov
into
test
xchg
fwait
cmpsb
lret
jnp
jnp
push
inc
ljmp
mov
lea
lret
in
pop
push
test
in
mov
push
shrl
jge
jg
adc
sbb
popf
inc
add
push
fwait
fwait
shlb
scas
pop
out
add
inc
jb
dec
dec
mov
out
test
adc
pop
test
ret
out
aam
rcll
iret
sub
mov
repnz
xchg
sbb
sub
pop
add
pop
lea
push
push
icebp
lea
pop
mov
icebp
and
mov
cmc
mov
fldl
push
add
or
ja
arpl
or
popf
mov
xchg
inc
sbb
mov
daa
xchg
cmc
push
andl
lahf
inc
sub
fwait
sbb
ret
lods
fnstsw
andb
fcomi
dec
in
sub
shr
shlb
jp
push
jle
xchg
cmp
pop
in
test
lds
add
dec
mov
cmp
xor
aaa
jbe
lret
pushf
adc
adc
js
mov
dec
push
and
dec
sbb
pop
pusha
or
mov
dec
add
out
std
clc
pop
test
int
out
adc
stc
pop
lock
inc
or
add
out
scas
into
inc
add
pusha
popa
sti
jns
add
adc
dec
stc
and
outsb
loop
cli
subb
testb
sub
xor
movsb
daa
sub
out
or
mov
inc
out
jp
fadd
mov
repnz
mov
sub
push
inc
push
pop
mov
push
aam
mov
ja
out
cmp
scas
dec
lods
xchg
ret
out
in
jmp
or
dec
cmp
pushf
shll
ds
aam
sbb
pop
pop
ja
push
mov
dec
lret
jp
mov
add
mov
out
sti
call
adc
pop
mov
sub
mov
pop
pusha
out
test
sub
jnp
cmp
inc
ret
test
mov
xor
fsubrl
adc
lods
popf
inc
pop
and
push
jp
mov
aas
mov
xchg
iret
mov
push
jns
movsb
or
dec
fcmovnbe
or
dec
gs
ljmp
xlat
or
popa
add
xchg
rcll
add
inc
data16
lret
xor
lea
pop
ss
nop
ret
jecxz
test
and
lahf
push
mov
mov
rolb
jge
and
or
lahf
dec
jno
fidivs
mov
dec
int3
int3
or
pop
fnstcw
loop
push
frstor
ret
mov
cmpb
scas
dec
jne
dec
xor
pop
lods
mov
pop
inc
loope
movsl
mov
es
adc
je
mov
out
cld
xor
or
es
fidivrl
cs
daa
push
mov
inc
or
mov
daa
lea
rorb
xchg
bnd
sub
in
or
in
enter
pop
xchg
xchg
dec
sub
sub
adcb
jecxz
fisubs
rolb
ljmp
mov
inc
insb
push
mov
fbld
repnz
xor
and
gs
dec
push
addr16
jle
xchg
push
xor
into
adc
or
or
dec
mov
sub
push
inc
inc
push
xchg
and
xchg
push
add
xor
stc
icebp
push
sub
enter
mov
sbb
pop
xchg
pushf
jns
bound
out
addl
xlat
loope
lret
pop
pop
bound
lret
xor
pop
adc
dec
xor
mov
pusha
pop
xlat
and
pop
test
push
cmp
pop
sub
ss
push
ja
mov
aaa
adc
loop
aas
punpcklbw
mov
xor
jne
mov
mov
push
scas
das
fisttpll
jl
out
mov
pop
mov
pop
das
mov
push
mov
jne
xchg
jo
mov
cld
inc
xchg
pushf
or
sbb
mov
ljmp
mov
rcl
mov
enter
enter
adc
pop
push
stc
adc
cmp
push
jg
cmp
lock
mov
pop
inc
fs
xor
cmp
mov
addr16
inc
pop
out
adc
into
sarl
and
xchg
push
lods
xor
sbb
outsb
adc
cmp
push
xchg
pop
shrb
add
cmp
scas
xchg
ret
and
mov
in
sub
loop
mov
fmul
ret
mov
dec
or
imul
pushf
test
repz
lahf
cltd
aam
add
cmpsb
mov
pop
xchg
mov
pop
mov
ss
decb
in
imul
out
adc
movsl
je
xor
leave
push
or
mov
idivl
sbb
icebp
jp
mov
dec
daa
sahf
mov
push
dec
std
imul
cmc
or
mov
mov
mov
imul
imul
addr16
insw
adc
sub
lds
cmp
dec
mov
outsb
sbb
enter
jb
xor
orb
pop
inc
xchg
test
in
outsl
fdivrl
dec
aad
imul
lds
jae
mov
fld
push
imul
mov
movsl
enter
xchg
mov
sub
pop
out
dec
vhaddpd
shll
and
es
push
test
mov
cmp
or
ss
jae
or
sub
lret
mov
fwait
pop
add
in
jns
xlat
and
pop
adc
repz
mov
cmp
rcrb
mov
sub
roll
cli
adc
xchg
lock
push
dec
fcomps
pop
into
in
dec
out
xchg
hlt
sbb
inc
stc
mov
hlt
sbb
jl
out
xchg
sub
arpl
xchg
xor
adc
push
jp
or
sbb
cmpl
je
xor
and
data16
cmpsb
stos
lds
outsb
mov
ss
mov
addr16
and
test
stc
add
dec
xor
adc
ret
sub
xorl
xchg
pop
xor
pop
pop
sub
arpl
pusha
xchg
add
dec
push
cwtl
dec
dec
xchg
sahf
sub
gs
icebp
lods
jge
xlat
cwtl
adc
into
xor
inc
sub
pop
aam
data16
xchg
pop
dec
out
insl
insb
mov
aas
cs
idivl
jne
orb
lahf
fsubrl
xchg
jo
cmpsb
repnz
inc
jg
sbb
jl
mov
repz
aam
mov
pop
je
out
jne
mov
or
and
xlat
xchg
call
add
xchg
in
lret
adc
repnz
inc
mov
cs
test
adc
jle
pop
data16
into
dec
push
and
rcr
jle
jge
leave
mov
insb
cmp
test
in
xchg
xor
pop
ss
loopne
ret
fs
fs
xchg
shrb
fisubrl
mov
shlb
xchg
daa
repnz
pop
xchg
jbe
je
les
pusha
fwait
jno
mov
xchg
out
xor
arpl
fcompl
push
pop
jmp
mov
inc
and
sbb
aad
inc
mov
cli
jnp
ret
lea
pop
and
rcll
je
dec
sub
push
xchg
add
nop
cwtl
mov
xor
push
fcompl
jbe
pusha
in
call
and
clc
push
insl
xchg
dec
pop
sub
popa
notl
mov
lret
push
mov
imulb
mov
jns
mov
mov
mov
and
loop
sbb
in
mov
loopne
insl
xchg
cmp
inc
je
sti
inc
jle
dec
iret
inc
and
movsl
ror
jnp
daa
std
push
or
ret
stos
insb
pop
mov
sahf
dec
movsl
dec
adc
cmp
out
scas
gs
ds
dec
jae
imulb
movsl
movsl
xchg
repz
xchg
outsb
push
sbb
jne
insb
pop
mov
mov
xchg
mov
cld
bound
movsb
lds
cli
mov
adc
daa
sub
dec
or
lods
push
pop
xchg
decl
sbb
insl
icebp
sti
out
pop
add
shll
mov
pop
shrb
xor
mov
mov
xor
inc
pusha
xchg
fwait
push
sarb
mov
xchg
add
sbb
lds
icebp
xor
lods
shr
push
ja
ljmp
rcrl
pop
jbe
adc
mov
fistps
mov
jnp
mov
and
into
jmp
mov
and
or
push
dec
das
jb
in
lock
loop
pop
cmpsb
mov
call
add
and
shr
xor
inc
sbb
jmp
ret
lea
and
push
gs
test
mov
xor
ljmp
jmp
sbb
cli
jp
mov
and
popa
fcompl
mov
mov
push
fsts
add
jl
sbb
add
mov
inc
adc
pop
xchg
sbb
js
pop
mov
cltd
fldt
sub
repnz
mov
insl
es
test
or
or
sbb
enter
mov
xchg
xor
lock
fs
imul
nop
decb
jne
sbb
pop
add
pop
or
push
lock
fstps
sbb
pop
insl
push
std
cmpsb
rcll
into
loope
cmpsl
fstps
movsb
sbb
dec
jmp
adc
sub
mov
or
icebp
pop
pop
cmpsb
cld
xor
imul
lock
push
push
fnsave
jg
mov
sbb
xorl
dec
test
loope
push
mov
pop
ljmp
outsb
add
js
pop
test
dec
aad
test
cmc
std
pop
adc
vcvttps2dq
pushf
jle
mov
std
and
das
mov
pop
xor
pop
push
shrb
fs
jmp
popa
mov
xchg
xchg
sub
inc
push
ret
aad
pop
lds
add
roll
aaa
popf
out
mov
adc
lea
int
push
mov
xchg
jl
inc
mov
cmp
mov
ljmp
xor
lock
mov
ret
sub
cmp
dec
push
sbb
jno
push
loope,pt
jge
cmp
add
data16
ss
movsl
push
fisubrs
mov
sub
in
cmc
adc
dec
ds
int3
scas
dec
dec
loop
jmp
mov
mov
sbb
push
cmp
insl
adc
dec
dec
sbb
cmpsb
test
and
popf
sub
test
stos
sbb
sbb
stos
pop
nop
in
scas
out
fsubrl
mov
fs
into
aas
or
inc
pop
push
sbb
andb
fs
jmp
rorb
dec
inc
subl
int
xchg
dec
pop
aaa
shld
and
inc
mov
aas
shll
jo
pop
pop
mov
mov
jbe
int3
nop
and
and
cmp
fisubl
push
outsb
iret
jne
push
cli
fidivrs
push
jmp
or
mov
insb
jecxz
das
ja
xlat
dec
cld
mov
ds
iret
lret
inc
or
mov
mov
dec
aas
lret
jmp
push
push
cmp
push
push
cmp
mov
xlat
insl
push
mov
mov
cmp
xchg
repnz
xorl
mov
les
test
call
push
jmp
in
lds
int
inc
scas
dec
mov
inc
push
xchg
mov
rcrb
cs
cwtl
inc
aaa
jnp
add
adc
pop
mov
dec
stos
lods
lahf
jb
call
pop
push
pusha
shrl
push
mov
popa
inc
mov
or
xor
pop
loope
add
popf
fs
data16
pop
stos
insb
pop
fidivl
mov
inc
popf
lock
mov
into
adc
negl
ljmp
outsl
fcoml
jmp
sbb
divl
ja
roll
xor
jne
out
stos
push
lods
lods
jno
xor
out
pop
shlb
fwait
cmp
cli
pop
xchg
popa
fneni(8087
cld
std
sti
cmp
sahf
cmp
or
shl
das
sbb
fidivs
clc
jnp
cmpsb
and
mov
cmc
xchg
loop
push
cmc
mov
pop
xor
jns
scas
add
mov
out
push
push
std
sbb
cmc
inc
and
rcl
dec
sahf
ret
lds
push
cld
ror
lea
add
add
fiaddl
add
aas
cltd
insl
push
push
imul
or
dec
mov
rclb
cmpsl
adc
xor
hlt
inc
mov
inc
and
cwtl
inc
push
mov
xchg
movsl
inc
adc
daa
testb
mov
mov
sbb
and
and
lods
mov
mov
shlb
push
inc
or
cmp
push
out
add
orb
sub
sti
lea
arpl
test
cmp
xor
pop
insb
or
mov
rolb
inc
repz
fs
mov
gs
cmp
add
insb
jg
mov
push
call
daa
loopne
ds
add
mov
dec
repnz
js
push
push
jp
mov
cs
mov
push
sub
ja
xor
and
pop
xchg
and
fbld
inc
movsb
adc
popf
mov
pop
push
setge
xor
mov
fxch
loopne
mov
cmpb
jle
inc
mov
test
aaa
or
sub
mov
sbb
or
sahf
cmpsb
scas
mov
pop
ja
mov
stos
popa
mov
and
push
test
outsb
test
imul
mov
xchg
scas
mov
lods
testl
daa
lret
les
out
add
fistps
or
adc
in
stos
lea
mov
ds
stos
fisubl
ret
hlt
lret
or
inc
imul
lods
xchg
outsl
mov
inc
lcall
dec
and
popf
add
inc
mov
push
fstpt
fidivs
shrb
and
jbe
stos
in
adc
add
jg
aam
xor
shll
stc
and
or
dec
stc
mov
adc
mov
scas
push
das
popl
iret
decb
fiaddl
mov
movsl
scas
xor
in
mov
leave
cli
inc
sub
sbb
and
pop
xchg
rcll
orb
inc
xor
in
mov
adc
jmp
out
lcall
fbstp
std
cmpl
adc
dec
imul
mov
cli
call
or
repnz
out
int3
push
jp
pop
sti
dec
out
or
or
mov
push
shlb
xchg
push
gs
cmp
dec
jae
and
sbb
das
ret
lds
shlb
push
inc
movsl
pop
cmp
jnp
loop
mov
fdivrl
xchg
lock
cld
out
add
aaa
jo
popa
xor
sub
cmp
cmp
fwait
jle
lock
call
xchg
lret
mov
rorl
int3
mov
cmp
sahf
or
out
push
cmpsb
sub
push
add
hlt
or
pop
mov
add
daa
push
push
andb
xchg
fsubrl
dec
push
data16
jmp
cmp
aam
sbb
fwait
loope
jle
int
in
outsb
faddl
movsb
sbb
sbb
mov
push
jp
test
sahf
aam
xchg
daa
inc
shlb
lds
inc
std
rcrb
xorl
lcall
std
pop
xchg
ret
lock
xor
mov
enter
or
add
push
lcall
lret
adc
sbb
dec
dec
dec
xchg
xchg
adc
dec
pusha
xor
test
add
ljmp
cli
xlat
cmpsl
dec
add
cmp
fisttps
jo
mov
sbb
insb
mov
mov
inc
dec
adc
sbb
gs
push
push
and
es
les
repz
aad
ljmp
pop
insl
push
out
mov
gs
mov
out
lret
loop
into
or
clc
das
mov
aas
aam
cmp
inc
and
ljmp
fnsave
mov
xchg
dec
sub
lods
pop
sub
mov
lret
cmp
push
add
daa
not
es
jge
filds
dec
dec
lahf
imul
popa
enter
iret
ficoms
push
add
xchg
adc
mov
inc
lea
push
in
lods
lcall
jne
pop
ret
push
insl
adc
loop
mov
pop
jmp
es
xchg
mov
stos
push
xchg
cwtl
or
sti
push
mov
sarb
mov
adc
loopne
xor
sti
rorb
loopne
cmp
cmpl
inc
xor
test
stc
scas
enter
cli
leave
add
xchg
inc
sub
cmp
xor
jo
in
xor
iret
shrl
pop
lcall
pop
in
cli
fs
popa
test
jmp
rcrl
mov
inc
cmp
pop
daa
pop
popf
dec
jb
fldenv
inc
xchg
sbb
xor
sub
sti
fistpll
and
pop
xchg
push
mov
pop
cmp
and
data16
pop
mov
aam
gs
xlat
sar
lret
mov
add
rorb
adc
les
push
scas
and
inc
mov
push
cli
je
insb
sub
inc
or
mov
mov
dec
push
stc
pop
push
insb
loope
xchg
push
bound
and
mov
xor
hlt
mov
jp
jecxz
std
pop
add
pop
jecxz
jb
push
xchg
mov
add
adc
test
adcl
cmp
repz
gs
mov
cltd
sti
gs
out
xlat
lods
mov
mov
sbb
xor
push
jge
push
push
into
xchg
fidivrs
in
imul
fisttpl
es
clc
hlt
in
mov
and
test
push
push
out
and
jmp
repnz
test
sahf
xchg
mov
dec
and
mov
decl
sub
mov
mov
insb
inc
test
push
mov
push
loope
jg
mov
daa
daa
in
jp
xor
out
aas
lods
and
cmp
cmp
outsl
jno
notb
dec
stos
and
or
les
sarb
int
dec
mov
mov
pslld
andps
loop
mov
xchg
clc
or
pop
xchg
jp
fisubrs
mov
cmp
subl
xchg
fldcw
mov
cli
fwait
shll
push
sbb
sbb
insb
cmp
dec
nop
rcl
and
mov
mov
jmp
int3
dec
mov
pop
divb
push
xlat
ret
in
and
or
pop
and
add
mov
jp
jbe
lcall
sahf
jge
mov
mov
sub
mov
jmp
lods
ror
fcmovnu
fisubs
shl
ret
dec
aad
dec
outsb
iret
mov
mov
sbb
dec
mov
inc
xchg
cmp
mov
orl
dec
idivl
jns
mov
cmpb
mov
dec
out
les
aad
inc
push
push
and
jecxz
cmp
sbb
push
push
jno
movsb
lea
add
xchg
push
sti
sub
nop
iret
daa
lds
cmpsl
jg
or
dec
stos
jbe
jbe
push
aad
sbb
jno
push
ret
dec
scas
mov
inc
mov
push
or
inc
pop
xchg
push
sub
mov
dec
mov
dec
leave
jge
and
ljmp
mov
and
les
int3
movsl
xor
insb
stos
inc
cmp
dec
gs
cmp
aad
mov
int3
test
mov
aas
outsl
cmp
cmp
or
mov
adc
sahf
mov
imul
add
sub
push
das
add
xchg
mov
pop
dec
inc
push
jb
push
mov
mov
xor
inc
xchg
cmp
jmp
ret
dec
data16
shll
stc
push
inc
das
lea
and
push
sub
dec
int3
stc
mov
inc
jne
sbb
insb
icebp
pop
and
mov
adc
push
push
cmpsb
lock
xlat
leave
fcomip
scas
pushf
jl
imul
push
jmp
mov
ds
fs
mov
jb
cltd
xchg
mov
ret
out
loope
mov
jg
pop
xor
or
loopne
int
scas
sub
push
adc
dec
mov
sub
and
cmp
dec
sub
cmp
inc
cld
sbb
arpl
cmpl
cmp
pop
sub
vaesenc
jne
sub
mov
ret
pushf
scas
sbb
mov
in
inc
dec
add
push
and
movsl
fucomip
cmpsb
imul
and
imul
jb
sub
and
adc
jno
add
sub
xor
xchg
shlb
add
cmp
lret
leave
sbb
mov
pop
hlt
xchg
wrmsr
inc
or
cmp
adc
mov
adc
pop
mov
fcmovne
lock
inc
repz
hlt
and
xor
in
cmp
cld
xchg
adc
sti
mov
jp
xor
aaa
dec
inc
test
mov
adc
neg
out
xor
mov
data16
cs
lcall
push
loop
addl
push
mov
sbb
in
cmc
loopne
jo
les
fisttpl
cli
cmp
lcall
jnp
push
stos
push
outsl
mov
dec
or
outsb
fucomp
adcl
jbe
nop
adc
inc
stos
inc
aam
pop
dec
fs
xor
xchg
das
nop
lea
sbb
decl
rcl
cmpsl
mov
mov
jns
movsb
shll
sbb
rorb
mov
outsl
pop
xchg
ds
push
stc
pop
pop
or
insb
mov
pop
lcall
mov
fisttpll
aaa
jns
and
in
dec
subb
mov
das
test
push
pusha
dec
mull
fimull
adc
push
ret
dec
jbe
bound
les
test
add
sub
jnp
mov
mov
adc
xchg
pop
or
ret
jle
inc
mov
add
daa
xor
stos
push
push
out
dec
cmp
out
hlt
into
out
xchg
sub
sbb
data16
lcall
and
lea
pop
inc
inc
and
mov
add
out
cmp
loopne
inc
adc
clc
dec
leave
mov
sbb
cmpsl
mov
mov
mov
pop
pop
add
ret
push
or
push
jge
pop
in
add
pop
js
jmp
lock
xchg
xchg
jecxz
dec
add
mov
fwait
adc
pop
fwait
cmpsl
lds
xchg
aas
cmpsb
jnp
adc
xchg
rep
in
mov
or
or
inc
inc
idivl
sbb
cld
jge
push
mov
lahf
insl
jns
js
cmp
inc
xchg
pop
sub
stos
in
sbb
xchg
das
sub
sbb
xchg
push
repz
and
or
outsl
pop
int3
xchg
dec
sbb
push
je
mov
push
pop
or
jge
mov
lods
insb
jmp
movsl
add
pop
mov
jge
cmpsb
push
xor
stos
out
arpl
adc
mov
sbb
xchg
jl
push
xor
ss
add
push
adc
push
fiaddl
test
ja
xchg
ficompl
cwtl
arpl
test
fisttpll
out
sarb
lea
jle
xchg
scas
cmc
jb
or
rcrl
xor
xchg
lods
jmp
jb
dec
dec
mov
jne
sub
sub
and
lcall
pop
in
test
mov
xor
movsl
xchg
jb
adc
mov
int
insl
movsl
es
rcll
mov
insb
push
sub
jl
cli
push
notb
jecxz
fs
mov
les
sbb
cld
rorl
inc
adc
sbbl
loopne
mov
cli
push
leave
stc
out
fnstsw
sahf
jnp
out
xchg
add
clc
push
cmp
add
push
in
imul
mov
icebp
shrb
shrl
and
mov
sahf
xchg
push
ret
add
movsb
sub
and
or
xchg
adc
mov
pop
cmp
mov
cmpl
adc
or
imul
fistl
fwait
cmp
pop
in
push
fs
rcrb
mov
pop
flds
mov
leave
movsb
nop
sbb
cs
or
adcl
jp
jo
flds
popf
xor
addl
xor
dec
pop
outsb
inc
testl
jne
outsl
cld
jo
imul
push
cmpl
cmp
jno
int
cmp
enter
adc
cmc
add
loopw,pn
pop
mov
add
push
pop
lret
insl
push
leave
or
cmp
popf
cwtl
loop
xchg
dec
movd
bound
sub
fidivrs
loop
pop
movsl
xchg
mov
push
outsb
xor
and
mov
and
stos
xchg
fucomi
sub
in
or
outsb
mov
mov
fnstsw
mov
ss
jmp
push
jp
loop
sub
lahf
shrd
push
je
add
xor
outsb
subb
inc
xor
dec
ja
stos
shrb
cmp
xchg
sbb
addb
ret
mov
fdivs
mov
xchg
enter
mov
pushf
repz
adc
pop
insl
xor
pusha
testb
mov
mov
xorl
push
test
push
xor
dec
in
sub
stos
xor
or
scas
aad
mov
jb
test
imul
cmp
scas
mov
sbb
push
call
xorb
out
fwait
mov
sub
shlb
sarl
das
not
sbbb
sub
dec
xchg
popf
mov
decb
and
scas
dec
in
lods
add
arpl
ss
into
cmc
jmp
aas
ret
mov
mov
push
xor
cmp
insb
xor
cmp
rcll
push
ss
sti
imul
jp
std
sub
add
jae
mov
dec
inc
xchg
mov
jns
push
pop
mov
rcrb
aad
in
imul
bound
inc
cmpsb
imul
daa
loopne
std
addr16
pop
sbb
push
loope
jge
and
xchg
mov
mov
pop
out
lcall
jecxz
xor
fwait
inc
ja
lea
scas
inc
dec
test
jnp
aam
movsl
xor
push
jns
mov
sbb
xchg
mov
inc
cltd
push
loop
push
aad
xchg
xor
cmp
lods
jnp
and
loopne
mov
xlat
or
shrb
dec
sub
imul
adc
shlb
es
out
movb
sub
jle
dec
mov
aas
pop
xchg
mov
sahf
push
stos
int3
adc
repz
aam
push
popf
xlat
jl
mov
dec
adc
add
xchg
addr16
addr16
sbb
xlat
push
and
mov
pop
in
jae
or
jg
cmpb
push
inc
mov
pop
loope
mov
push
sub
and
lods
xor
into
jae
ret
dec
mov
pop
icebp
adc
push
sub
lods
jnp
add
in
dec
sti
pop
movl
xchg
or
gs
push
add
pusha
out
xchg
adc
std
shr
hlt
sub
jnp
mov
imul
fs
fs
and
repz
xchg
hlt
sub
add
push
mov
aad
loope
adc
movsb
mov
pop
out
jmp
or
and
adc
mov
outsb
gs
mov
adc
mov
pusha
ljmp
dec
inc
sbb
jl
push
mov
jns
in
mov
xor
and
cmpsb
out
xchg
mov
fwait
inc
in
in
pop
pushf
dec
mov
mov
jnp
outsb
xchg
and
mov
xor
into
cmp
cmc
in
fsubrs
decb
jp
fstl
mov
sbb
repnz
mov
xchg
fidivl
and
jae
loope
cmpsb
mov
add
repz
cmp
fcoms
inc
imul
ja
roll
iret
jne
xchg
inc
add
sti
mov
push
enter
in
dec
shl
popa
inc
jns
jp
mov
frstor
sbb
sahf
adc
jl
xor
repnz
mov
movb
mov
mov
addr16
mov
daa
push
cmp
ds
in
rcl
push
dec
addb
dec
test
push
jle
pop
ljmp
sbb
int3
aad
sbb
out
or
adc
and
dec
fadds
shl
out
push
popa
nop
inc
fyl2x
cmpsb
jle
out
ret
push
push
mov
loopne
adc
sarb
loope
add
lcall
mov
std
mulb
jge
xchg
xchg
cltd
iret
ret
test
jmp
xchg
outsl
cmc
icebp
mov
iret
mov
and
ds
addb
popa
enter
or
adc
movsl
popa
mov
int
xchg
jecxz
out
fs
pop
lahf
push
adc
add
or
xchg
or
and
or
cmovb
lods
cltd
ret
dec
aad
inc
pop
adc
push
adc
lret
pop
cmp
mov
xchg
incl
scas
pop
pop
mov
std
or
push
out
cmp
int
or
pop
fs
cmp
imul
jbe
cltd
aas
loop
int
cmp
jl
sbb
mov
adc
repnz
adc
lcall
add
sbb
pop
jp
xchg
pop
fnstsw
cltd
pop
dec
mov
jns
add
push
mov
mov
stos
xchg
push
scas
sbb
cmp
xor
and
xchg
push
xchg
add
jno
sub
lret
add
mov
jbe
std
aad
mov
and
jnp
push
add
add
insb
jne
ret
add
outsb
vsqrtps
xor
sbb
lret
js
and
out
mov
lcall
sbb
int3
mov
aas
pop
xor
push
je
andl
jae
lahf
jo
mov
fs
nop
lret
mov
and
loopne
pop
aam
push
mov
repz
push
cmc
sbb
ffree
cltd
fidivs
mov
mov
cmp
fcomps
pop
or
push
mov
sti
jno
in
inc
popf
mov
mov
and
sarb
sbb
fdivs
push
mov
sub
xor
cwtl
or
imulb
sub
xchg
ljmp
pushf
and
aas
adc
stos
mov
mov
iret
scas
stc
sub
dec
scas
mov
outsb
iret
mov
mov
repnz
aas
sti
fisubs
filds
in
mov
jl
leave
cmc
push
insb
test
and
call
inc
daa
or
pop
dec
ljmp
inc
sub
sbb
sbb
jnp
cmp
sbb
shlb
sub
out
sbb
pop
enter
rcrl
mov
subl
js
mov
scas
and
mov
mov
es
sbb
in
and
mov
out
pop
xchg
icebp
xchg
test
mov
cmpsb
mov
mov
test
lods
xor
ret
aad
sti
jb
sahf
imulb
sahf
cmpsb
adc
jns
jbe
pop
dec
test
jne
in
imul
push
sub
adc
xor
push
das
jnp
xor
fwait
add
clc
dec
jns
jno
or
in
sub
div
dec
push
xchg
adcb
ficoms
mov
insl
lahf
jne
adcl
sub
std
imull
pop
cmp
cmpsb
mov
xor
popa
pop
dec
jo
nop
cmp
int
outsl
psraw
dec
data16
sbb
les
out
and
aam
idivb
lcall
out
scas
lret
mov
test
popf
pop
fnstsw
adc
mov
imul
and
aaa
stos
std
stos
fs
and
aad
jecxz
std
adc
inc
mov
cwtl
inc
jg
mov
mov
sub
ja
jno
pop
pop
add
and
push
out
fcoms
sub
pop
arpl
mov
and
push
mov
scas
dec
jecxz
and
cli
stc
jb
shl
inc
and
xchg
test
js
cmpsb
add
add
scas
xor
mov
mov
inc
pop
xor
call
sub
imull
cvtdq2ps
ljmp
adc
sbbl
test
imul
sbb
inc
push
mov
and
jle
xchg
pop
inc
test
imul
dec
sbb
add
jmp
mov
lds
popf
mov
test
hlt
mov
les
jle
lods
ds
daa
movsl
jg
cld
or
jb
sub
mov
shrl
cmpsb
jb
insl
cmp
mov
or
decb
out
dec
mov
outsl
cltd
add
sahf
push
push
fstps
ret
jb
adc
std
ss
mov
sub
mov
push
xor
cmp
xor
add
fstps
or
xor
pop
xchg
mov
adc
aam
leave
sar
sarl
xor
add
mov
add
jp
cmpsb
push
aad
sbbb
data16
fwait
sti
arpl
push
loopne
pop
sahf
or
or
lea
das
inc
das
jb
push
pushl
idivb
pop
fiadds
adc
dec
popf
xor
inc
jne
enter
cmp
push
or
scas
in
mov
xlat
push
sub
sbb
aad
int3
shll
sar
jb
ret
les
mov
or
stc
std
ss
clc
push
aam
movsl
decl
iret
mov
scas
add
or
adc
and
inc
mov
pop
lahf
ljmp
pop
fdivs
or
insb
jne
add
dec
data16
add
jno
jns
inc
adc
mov
lret
sub
push
test
out
mov
mov
jns
vunpcklps
or
xchg
in
sysexit
lret
mov
xor
cmp
ror
dec
fstl
cmp
pusha
nop
test
jg
push
cmpsb
inc
push
movsb
push
inc
repnz
cmp
mov
shrl
dec
lds
pop
xor
jne
nop
cmp
mov
pop
jns
bound
xor
dec
insl
xchg
mov
das
nop
or
push
mov
fwait
inc
cltd
outsb
push
mov
sub
popf
lret
loop
xchg
pop
cli
rorl
xor
xorl
mov
dec
sarl
movsl
ficoml
roll
pop
push
sub
ja
gs
pop
or
or
dec
rcrl
pop
jne
mov
test
pusha
ja
jb
lret
shl
aas
mov
mov
add
push
mov
lods
xchg
mov
mov
jbe
leave
mov
imul
jge
and
jge
in
jecxz
pop
imul
je
stc
mov
lahf
fucomi
cmp
jg
cmp
adcl
mov
call
xchg
insb
clc
aaa
ss
xor
gs
dec
mov
or
jp
pop
pop
sbb
jbe
pop
xchg
pop
movsl
jae
cli
mov
add
iret
fstps
and
aam
enter
and
movl
orl
rclb
add
mov
call
loope
pushf
orb
int
inc
xchg
stc
addr16
lahf
adc
clc
dec
call
add
lea
pushf
xor
ret
mov
xor
add
in
divl
push
jno
icebp
ja
cmp
jae
pop
adc
ja
mov
in
mov
shlb
lahf
data16
in
ficompl
idivl
test
mov
aad
stos
xchg
mov
pop
jns
pushf
imul
xlat
cld
jbe
jmp
cli
add
xlat
loop
mov
dec
jnp
enter
movsl
lock
mov
test
push
in
sub
inc
ja
fwait
dec
push
arpl
scas
mov
cmp
or
push
xchg
out
push
nop
sub
adc
dec
add
outsb
pop
popf
mov
loope
adc
addr16
mov
mov
mov
mov
mov
adc
inc
or
negl
ss
adc
xchg
cmc
push
sub
pop
std
cmc
iret
pop
popf
lret
xor
test
out
repz
inc
xor
test
hlt
cmpsl
mov
jb
movsb
cs
test
sub
outsl
out
js
add
sbb
mov
cltd
dec
xchg
aaa
cmc
or
fnstcw
push
aad
repnz
cmp
inc
xchg
sbb
mov
data16
out
cmp
lods
jp
leave
rcrb
or
dec
fistps
cli
mov
arpl
dec
int
rolb
movsl
dec
jno
jg
les
mov
or
mov
cmp
imul
cmp
mov
cmp
fsts
jmp
push
out
subl
outsb
mov
rcrl
push
jnp
lea
ja
movsb
nop
cli
mov
lret
push
push
mov
pop
mov
push
xor
add
out
int3
fildll
inc
push
inc
sbb
add
vpmaddwd
jmp
pop
sbb
sub
or
ret
add
or
pop
and
push
jae
xchg
out
ficomps
ret
cmp
mov
sbb
sub
jp
jecxz
adc
lods
ds
pop
dec
ficoms
and
mov
add
jnp
xor
insl
inc
shl
fwait
adc
sbb
pop
ficompl
shrb
loope
test
and
inc
cmp
ret
out
nop
mov
ja
or
idivl
add
lods
insb
int
arpl
sti
fsincos
insl
sahf
test
stos
cwtl
xlat
ds
xchg
mov
add
xor
in
fimull
mov
jae
into
pop
fwait
js
cwtl
cmp
enter
scas
roll
loop
mov
sub
or
push
pop
xchg
arpl
bound
mov
lods
sub
call
pop
cmp
xor
movsl
jbe
push
push
jbe
pushf
mov
test
cmp
iret
push
or
int
je
or
xchg
mov
sbb
cwtl
jnp
insb
fimull
pushf
lds
clc
adc
int3
or
jb
out
in
lock
das
dec
cmpsb
adc
fs
pcmpeqb
int
aaa
pop
fcoms
addl
fmul
int
xchg
popa
mov
stos
aas
sub
inc
daa
fcompl
cli
or
cmp
fwait
in
leave
jmp
adc
mov
imul
or
mov
and
dec
mov
js
divb
jo
mov
mov
xor
pushf
fsts
sbb
mov
adc
inc
mov
or
cltd
xor
or
pusha
inc
jae
push
push
loop
dec
cld
push
dec
mov
cltd
mov
test
lahf
dec
dec
cld
mov
pop
cmc
lea
int3
push
aam
fimuls
sbb
cmpsl
sub
mov
adc
or
sbb
or
fiaddl
hlt
pop
mov
test
out
decl
orb
mov
outsb
pop
pop
ret
loope
lds
sbb
inc
jne
mov
arpl
xchg
in
out
mov
leave
fs
mov
out
cmp
jmp
dec
rolb
xlat
int3
mov
sbb
loope
nop
inc
push
ljmp
adc
pop
and
add
fld
hlt
or
ds
jbe
jle
outsb
cwtl
cmpsl
mov
xor
xchg
pop
sub
jge
or
popa
jae
pop
nop
call
pop
mov
jo
rcll
cltd
xor
cmp
pop
add
jae
pop
in
push
jge
out
or
popf
addb
jns
sub
in
shrl
jg
outsl
sub
test
addr16
and
loopne
cmp
xor
inc
xchg
and
mov
sti
cmpsl
push
js
pop
xchg
and
inc
cs
fbstp
cmp
mov
or
bsf
sarl
rclb
adc
xor
pop
jp
lss
mov
imul
mov
push
movntps
in
shll
cmp
adc
pop
test
adc
pop
test
add
jecxz
push
popa
xchg
cmpl
in
jecxz
or
xor
sub
repnz
mov
es
repnz
and
pop
adc
push
cs
and
sub
or
xchg
sub
cmp
imul
inc
add
repnz
mov
test
rol
leave
mov
add
push
cmp
push
outsb
push
cli
jg
outsb
cs
stos
cltd
sbbb
mov
push
jne
daa
mov
cltd
test
cwtl
dec
jp
out
hlt
in
sub
push
sti
and
or
push
dec
cmp
lahf
iret
mov
es
adc
stos
inc
xchg
push
imul
lea
xor
and
push
push
mov
pop
mov
or
int
mov
fiaddl
js
leave
or
sbb
xor
push
mov
pushf
push
mov
inc
mov
scas
mov
sahf
cmpsb
sbb
or
scas
stos
push
mov
cmp
cmc
sub
jae
push
inc
pusha
insb
xor
imul
and
inc
and
xor
stos
cwtl
xlat
aad
pop
in
int3
push
push
inc
pmuludq
fisubrl
int
stos
adc
add
ss
iret
jno
mov
movsl
js
test
mov
cmp
and
inc
call
clc
add
test
iret
sbb
lock
pop
negb
and
in
rcrl
pop
inc
mov
cmp
lods
mov
mov
mov
mov
sub
pop
test
lods
sbb
push
mov
js
mov
cmp
pop
xlat
sti
icebp
into
xchg
cmpb
cltd
pop
xor
mov
enter
mov
ljmp
dec
adc
ljmp
outsb
inc
add
fstl
call
int
roll
clflush
inc
cmp
rcll
adc
xchg
mov
pop
mov
lahf
stc
repnz
sub
sbb
inc
xchg
adc
dec
call
aas
push
cmp
xchg
adc
sub
xchg
xor
push
repnz
push
cli
mov
cmc
jbe
mov
ljmp
sub
fwait
mov
mov
and
push
nop
mov
jmp
push
fistl
call
fldenv
mull
test
int3
nop
or
jae
sbb
pop
es
stc
push
push
lret
sub
sub
call
pop
aas
pop
in
icebp
mov
cmc
out
xchg
fbld
push
jecxz
xchg
xlat
bound
pushf
xchg
outsb
fadd
imul
repz
xchg
ja
test
mov
lret
mov
mov
stc
shlb
mov
mov
in
mov
addb
subb
cmpsb
sti
or
iret
jmp
mov
stos
scas
xor
iret
call
cmpsl
push
jmp
stc
movsl
sbb
icebp
lcall
imul
ret
jnp
fsubrs
test
aam
fdivr
das
loop
add
nop
clc
or
daa
or
clc
jge
sarb
push
mov
sub
mov
sbb
push
dec
jnp
add
fdivl
fsubrs
xchg
mov
xchg
dec
cwtl
nop
add
fsubl
cmpl
push
clc
push
add
ficompl
andl
add
movsl
out
cmp
std
xor
mov
divps
cmp
das
pop
ja
mov
insb
jne
or
mov
mov
test
mov
into
mov
sub
sub
and
sbb
movsl
and
mov
mov
imul
add
dec
sub
imul
ss
pop
ja
jmp
xchg
cmpsl
mov
jnp
sbb
movsb
add
push
lods
sub
fldl
jno
xchg
dec
adc
int3
movsl
add
ljmp
jno
js
pop
lock
mov
arpl
cltd
mov
push
lods
push
cmp
mov
adc
dec
add
jnp
dec
cmpl
into
adc
rcr
mov
orb
push
mov
xchg
sub
in
aaa
xor
daa
cmp
aad
mov
and
jbe
xchg
xor
sub
jnp
fstpl
sbb
and
xchg
and
in
mov
cmp
sub
and
mov
loopne
pop
fdivs
rcl
and
sbb
inc
inc
xchg
or
sbb
adc
ret
push
leave
pushf
insb
and
pop
test
push
push
and
pop
nop
cmp
into
data16
mov
xchg
mov
add
leave
in
shlb
idiv
cmc
stos
push
push
inc
ja
jmp
cwtl
or
ret
outsl
mov
pop
mov
nop
enter
adc
mov
shrb
jg
sbb
out
mov
gs
inc
cmp
ret
neg
lret
mov
cli
jns
jl
push
pop
mov
imul
dec
dec
xchg
data16
inc
xchg
xchg
mov
inc
inc
mov
and
call
jo
lret
xor
ret
mov
das
inc
das
sub
aad
cmp
pop
adc
notb
fdiv
orb
jg
aam
mov
ljmp
sub
inc
adc
inc
mov
cmpsb
fnsave
dec
add
cs
in
pop
xchg
mov
dec
dec
inc
aad
js
mov
icebp
outsb
in
imul
adc
shlb
push
sub
xor
pusha
in
mov
cmp
xor
mov
insb
or
sahf
xor
adcl
mov
and
fsubl
dec
pop
out
std
xchg
mov
test
add
inc
or
jb
mov
lret
lret
and
hlt
push
shll
shrd
loop
fiaddl
lret
nop
pop
mov
lock
repz
pop
and
std
rolb
xor
push
xor
es
jmp
decl
insl
mov
shrb
shlb
xchg
fchs
jae
repnz
movsb
js
jl
inc
dec
fwait
lcall
or
push
xchg
add
cmp
xchg
pop
cltd
clc
xor
jno
add
mov
arpl
stc
mov
lods
add
rcrb
jp
inc
add
sbb
fimull
jbe
sub
or
stos
jp
sub
pusha
and
jg
cs
mov
push
lret
repnz
xor
cmp
mov
xchg
and
inc
sahf
repnz
sub
jno
imul
cmc
ja
jl
sub
sarb
xchg
orb
push
mov
test
in
pop
jo
or
jge
and
dec
negb
pop
add
pop
pop
out
dec
jns
mov
test
and
push
rorb
js
and
hlt
leave
push
jae
shrb
ja
mov
data16
int3
push
push
cmp
xchg
enter
aam
es
cmp
push
mov
or
scas
jo
daa
cwtl
push
xchg
jbe
fisubs
and
insl
jne
sub
push
lods
ret
or
cli
bound
inc
aam
or
xor
inc
mov
mov
loope
fimull
out
mov
or
mulb
fstpl
pop
sbb
push
leave
loope
fdivs
add
push
daa
push
cmp
cmp
mov
mov
push
imul
stos
xor
sub
add
loop
fldt
pop
pop
and
inc
jne
repnz
mov
insl
bound
jb
out
or
sbb
sbb
inc
shrd
pop
pop
adc
adc
les
inc
sbb
xlat
jle
repnz
test
push
das
rcrl
jb
cmpsl
jecxz
sbbb
mov
shrl
ljmp
and
mov
jle
push
dec
add
sbb
js
dec
test
rcrb
jb
pop
sbb
dec
or
sbb
je
jae
xorl
inc
lods
jg
dec
out
aaa
hlt
outsl
lods
sub
and
dec
pop
adc
aam
xlat
lods
sbb
out
rcrb
mov
and
pop
notb
inc
sti
adc
dec
inc
sbbl
mov
call
lret
scas
cmp
add
scas
and
inc
jno
jp
xor
fbstp
lock
addr16
int3
imull
loopne
mov
das
subb
inc
fdiv
adc
enter
daa
cmp
enter
add
sbb
movl
xchg
xchg
cmp
fs
xchg
and
ret
inc
or
xchg
cmpsl
enter
pop
in
fcoml
out
and
out
mov
adc
cmp
je
adc
pop
push
xor
and
pop
pop
mov
mov
mov
inc
test
ficoml
inc
cmp
xchg
std
sbb
jg
and
sbb
sysret
out
loop
sub
jno
bound
sub
lcall
cmpsl
jnp
popf
push
out
arpl
sbb
mov
aas
jbe
subl
outsl
jle
test
jnp
sub
aaa
xor
outsb
sbb
repz
add
cmp
cmp
and
call
clc
jb
push
dec
xchg
pusha
sbb
adc
xchg
xchg
pop
pop
push
mov
mov
xor
adc
cmp
cmp
leave
iret
xlat
js
sub
add
or
mov
cmpsb
stc
xchg
or
xchg
push
xor
inc
ss
mov
ds
jmp
push
test
cmp
icebp
cld
rolb
das
adc
sbb
pop
push
sbb
fsubrl
icebp
stos
mov
dec
cmp
sub
loopne
inc
and
xor
cmp
sbb
push
cmpsb
aaa
int3
adc
inc
xchg
je
decl
addb
out
adc
dec
sub
dec
xchg
sub
movb
inc
or
dec
cltd
lret
insb
and
sahf
xor
inc
out
sub
fldl
mov
ss
pop
add
or
or
sub
push
ret
mov
cmp
imul
push
cli
and
je
cwtl
pop
movsl
cmp
mov
scas
lcall
mov
add
mov
int
lock
jmp
jns
pop
mov
insl
xlat
in
dec
xor
mov
out
lea
cmpsl
inc
fnstsw
andb
dec
imul
fs
add
lret
sti
inc
push
sahf
in
ds
sub
add
andl
xchg
fsubrp
add
dec
sti
pop
jne
cmpsb
jge
cmp
push
mov
jnp
call
js
jmp
ret
dec
cltd
iret
vcvttps2dq
xor
fwait
xlat
in
sub
mov
bound
mov
roll
repnz
mov
sub
mov
insb
lds
sahf
add
sti
mov
mov
dec
js
mov
dec
push
js
pop
cli
xorb
adc
jp
imul
sbb
fmulp
psllw
push
ss
insb
in
bound
mov
jp
mov
scas
jo
or
in
icebp
xchg
pop
sub
xor
aas
or
into
addr16
call
xchg
sbb
dec
pop
fsqrt
movsb
mov
pop
in
in
out
xchg
dec
mov
or
pop
jmp
fisubs
mov
push
rcll
je
adc
mov
stos
cmpsb
or
mov
push
pop
pop
imul
xchg
pop
inc
ss
xlat
std
movsb
movsb
and
or
push
push
outsl
addr16
pop
ret
mov
pop
and
leave
into
hlt
pop
shll
sti
mull
push
popa
dec
cltd
jecxz,pn
push
test
fidivl
test
add
sbb
sbb
fwait
add
add
push
bound
out
xchg
test
cmpsl
and
int
bound
insb
rolb
jmp
inc
je
in
jg
dec
jne
fildl
add
xchg
mov
pop
std
xor
vaddss
xchg
xchg
pushf
xlat
dec
insl
int3
push
movsb
imul
mov
leave
push
fwait
add
sub
movd
inc
nop
in
cli
ljmp
dec
movsb
sahf
mov
push
das
cmp
loop
sbb
mov
dec
ss
xchg
fnstcw
pop
mov
add
lea
xchg
mov
ss
test
jp
ror
out
sbb
enter
ret
iret
dec
cmp
or
fidivrs
sbb
jl
xor
xchg
xchg
pop
push
into
outsb
dec
xchg
das
loop
jae
fcomi
pop
mov
push
out
pmaxub
inc
stos
mov
mov
fldenv
push
jecxz
xor
scas
clc
lcall
shll
stos
xor
add
fsubrs
icebp
icebp
fidivrs
dec
ss
leave
movsb
mov
push
jo
jmp
sbb
push
fsubr
xchg
dec
cmpsb
call
in
ficoml
inc
in
cmp
into
push
fs
jg
movsl
out
add
fdivrl
and
lcall
pop
cld
sbb
mov
cmp
js
movsb
int
xchg
pop
xlat
xchg
adc
idivb
inc
cwtl
mov
mov
cli
push
lret
hlt
loope
lahf
and
push
mov
jmp
cmpsb
jo
fiadds
repnz
xor
lock
jae
sub
pause
fwait
mov
insb
test
adc
sub
enter
sbb
xchg
lcall
add
arpl
mov
es
dec
and
xchg
xchg
mov
int3
ss
jbe
lock
int
lock
lahf
lds
jge
imul
jecxz
fstp
fs
mov
aas
out
rolb
shll
lds
fabs
pop
cmc
xchg
adc
sbb
sub
in
sbb
and
mov
jl
movsb
cltd
pop
cwtl
in
addr16
int3
ret
lcall
push
andl
xor
inc
cmpsl
mov
sub
mov
inc
xchg
mov
cmp
cmp
mov
adc
sub
daa
ret
mov
sbb
add
hlt
adc
dec
jno
mov
mov
stc
sub
inc
shl
imul
xchg
sbb
push
xor
pushf
testl
mov
and
stos
pop
sahf
inc
clc
inc
xchg
loopne
scas
in
notl
pop
xchg
rorb
cmp
je
out
mov
jbe
mov
out
aaa
lret
mov
xchg
stos
fidivl
std
dec
dec
mov
mov
dec
mov
cmp
fisubl
xor
mov
rcrl
mov
push
sbbb
add
test
ror
scas
mov
cmp
jo
stos
pushf
int
in
addb
cwtl
mov
dec
sub
ret
flds
cmpsb
xchg
and
inc
cmp
fisubl
xchg
enter
pop
ret
mov
jae
ljmp
or
inc
push
cltd
add
iret
cmp
sub
push
inc
adc
js
ds
push
aas
jne
sbb
lret
fdivs
addb
decl
std
stc
popa
xlat
inc
mov
mov
fnstenv
dec
jl
std
stos
xlat
iret
add
push
incl
dec
repnz
in
xor
sbb
andl
and
ficoml
push
mov
sbb
lock
jecxz
fnstcw
in
out
int3
pusha
orl
adc
mov
add
mov
jp
pop
adc
call
aas
sahf
xlat
es
jge
pop
int
cmp
jbe
mov
jns
or
cltd
js
call
clc
cmpsb
jl
cmpsl
inc
int
jg
imul
loope
fidivrl
xchg
cltd
data16
out
inc
dec
imul
imul
pushf
xor
mov
or
mov
icebp
and
jg
fdivl
lret
adc
sbb
mov
imul
push
ret
nop
pop
in
fadds
test
push
cmp
adcb
and
lret
lods
ja
cwtl
and
push
jne
add
imul
xchg
loopne
scas
dec
lds
dec
mov
mov
das
inc
jge
and
or
jbe
inc
lret
mov
mov
cmc
cmpsb
call
and
inc
dec
sti
xchg
jg
dec
loope
cmpsl
mov
add
inc
dec
cmpsl
dec
roll
movsb
and
mov
pushf
adc
pushf
pop
push
sarl
and
icebp
lods
cmc
popf
scas
xor
xchg
pop
sahf
mov
js
loopne
les
mov
arpl
jge
xchg
dec
insb
out
add
add
cld
dec
jp
xchg
cs
lods
sbb
mov
add
mov
dec
lds
mov
push
test
pop
loope
mov
mov
xor
inc
int3
cli
popf
fistpl
icebp
xchg
adc
or
into
mov
cs
insl
mov
jecxz
xor
pop
cmpl
push
mov
fiadds
js
inc
dec
inc
sbb
mov
xor
sbb
cmpsb
inc
test
fmull
test
sarb
and
pop
stc
mov
mov
jl
je
and
mov
cmp
std
cmp
or
int
in
lods
or
ljmp
or
cli
inc
add
mov
mov
xchg
push
mov
roll
rcr
cmp
sti
lret
jae
xor
leave
lods
rcrb
movsl
cs
in
lret
cmp
clc
fidivrl
push
mov
iret
sub
fiaddl
jl
xor
jmp
pop
cmc
ret
push
adc
fcomps
jle
aad
inc
pop
mov
loop
xchg
xlat
dec
lahf
push
mov
test
adc
aad
adc
mov
push
cs
lea
adc
mov
xchg
add
sub
dec
mov
gs
sbb
add
mov
cmp
popa
std
mov
ret
inc
mov
scas
aad
loop
out
cmp
pop
push
sub
mov
into
mov
mov
inc
xchg
dec
jl
sbb
nop
test
push
push
pop
sarb
insl
sub
fbld
dec
add
fstl
scas
mov
pop
outsb
mov
jae
xor
pop
orb
int3
into
xor
imul
int
push
std
lcall
mov
jg
cmpsb
jae
std
enter
adc
mov
xor
cwtl
mov
add
out
cmp
or
mov
adc
add
popa
adcl
dec
dec
adc
ss
das
fs
cmp
and
mov
adc
or
int
mov
and
negb
loop
cmp
mov
jae
ret
imul
aaa
and
inc
xor
iret
lds
sub
or
jbe
xor
xchg
stc
pop
cli
or
sbb
fnstsw
adc
xor
and
pop
xlat
cmpsb
dec
notl
or
sahf
pop
repnz
jge
sbb
jmp
push
fistpl
daa
mov
out
lret
mov
cmpsl
lds
push
pop
out
xchg
cld
and
out
sbb
adc
sbb
dec
into
lods
cltd
repz
scas
je
xor
jo
adc
pop
jae
and
shl
pushf
mov
adc
adc
lea
pop
mov
fstpl
out
add
fwait
and
lret
in
loope
psubd
insl
nop
mov
and
mov
enter
cmp
int3
movsb
or
mov
cli
cs
pop
scas
xchg
ror
imul
out
inc
inc
push
mov
xchg
pop
dec
scas
imul
icebp
or
sbb
or
movsb
aaa
iret
add
pop
sub
in
dec
inc
pop
cmpsl
mov
nop
adc
cmp
push
push
dec
pop
and
pop
jge
and
mov
hlt
outsl
adc
sbb
lret
xchg
cwtl
addr16
enter
xor
sbbb
sub
dec
dec
es
dec
push
cmpsb
lret
insb
cwtl
stos
in
repnz
xor
rolb
push
push
mov
es
mov
pop
mov
inc
xchg
cli
or
lods
mov
dec
aad
int3
push
adc
in
clc
cli
daa
je
dec
js
mov
pop
xor
jno
add
jno
cli
cltd
inc
sub
sbb
mov
xor
or
sbbl
or
sahf
arpl
lea
hlt
jp
dec
outsl
pop
idivb
test
pop
call
clc
dec
mov
jp
ja
pop
cmpsb
cmp
xor
enter
jae
and
push
adc
inc
out
ljmp
jge
jmp
mov
inc
stc
mov
mov
lea
fwait
dec
jne
lods
sbb
loop
add
cmp
xor
mov
jae
dec
sub
daa
mov
push
testl
pushf
int3
mov
add
cmpsb
xchg
adc
mov
push
inc
mov
jg
movsl
dec
fisttpl
int3
pop
inc
aam
hlt
or
fldcw
psubsw
aaa
into
ljmp
mov
cmp
test
das
fistl
movsb
fwait
dec
in
lret
icebp
inc
add
sbb
xchg
inc
and
add
cli
adc
xlat
pusha
adc
insb
add
cmp
leave
pop
fucomi
arpl
add
gs
cmp
bound
lds
inc
les
jmp
xchg
cmp
out
dec
push
subl
mov
out
rol
fwait
adc
fsin
adcl
vpunpcklbw
jmp
pop
imul
aas
sub
dec
mov
xchg
mov
sarb
mov
into
dec
fldt
pop
mov
adc
loop
mov
pop
iret
mov
inc
mov
daa
sti
pop
pop
stos
in
jnp
js
hlt
lds
daa
mov
popa
sub
xor
or
jns
and
ret
mov
cltd
mov
mov
inc
inc
pop
lahf
dec
addb
fdivr
rorb
jge
in
cmp
cmp
gs
stos
jo
push
test
pop
xchg
imul
mov
mov
push
fdivs
adc
push
or
cmpb
add
add
daa
out
xor
sub
sub
mov
fldenv
in
jne
push
push
ficompl
mov
dec
rcrl
lods
lds
sbb
push
sarl
push
mov
inc
call
out
jns
or
fldt
mov
mov
and
out
jno
adc
mov
in
add
xchg
inc
push
es
mov
xor
aad
scas
xor
js
jb
adc
cmp
notl
repz
pop
adc
pushf
cmpsb
sbb
lds
mov
lcall
leave
imul
mov
pop
into
fs
add
mov
cmp
cmpsb
in
mov
inc
ja
jmp
mov
or
mov
xchg
sbb
cs
sub
mov
andb
sbb
adc
mov
fisubl
fcomps
out
out
or
leave
jb
les
xchg
xchg
xchg
adc
pusha
xchg
inc
in
decl
out
jle
out
faddl
out
scas
sbb
test
xorl
cmp
sub
pop
cmp
pcmpgtw
divb
addr16
lret
add
add
in
xchg
or
mov
xlat
cmp
icebp
dec
insl
pop
xor
and
push
loop
jne
dec
xor
in
mov
daa
adc
hlt
call
pop
jo
sbb
mov
jbe
cmp
mov
mov
std
jmp
xor
and
hlt
mov
loop
ss
push
pop
inc
sub
test
insl
pushf
adc
cvttps2pi
int
hlt
mov
aam
adc
divl
outsl
shlb
xor
mov
iret
lcall
lock
lock
popa
sub
in
jnp
fucomi
mov
icebp
cli
ss
sti
cmp
push
or
jl
int
jle
ss
inc
inc
xor
inc
or
push
inc
jmp
sub
mov
pop
push
pop
ret
into
dec
add
ffree
sbb
aas
loopne
scas
out
aam
into
mov
mov
das
gs
push
mov
push
jbe
or
out
cmp
aam
push
outsb
xchg
jae
mov
mov
test
and
sub
arpl
pop
xchg
inc
movsl
sub
rorl
push
aaa
xchg
dec
gs
add
add
mov
push
iret
popf
sub
sub
push
dec
push
or
aam
pop
pusha
fmul
lea
xorb
testl
and
test
stc
cmc
lods
cld
movzbl
in
out
add
add
push
add
pop
fidivs
outsl
sub
fwait
orb
movsb
add
jle
jne
adc
push
xor
fcoms
popl
xchg
cmc
sub
cmp
or
cmp
mov
cltd
les
aam
mov
xchg
jbe
or
sub
nop
mov
dec
mov
dec
test
or
repz
xchg
int3
mov
sbb
sub
xchg
shrl
icebp
xchg
adc
loope
xor
inc
jnp
sbbl
xchg
cltd
mov
push
loop
mov
pop
ds
dec
ds
scas
loope
call
mov
dec
jmp
or
mov
mov
inc
clc
adc
mov
cwtl
int
xor
outsl
fsts
outsl
add
ret
dec
jecxz
popa
arpl
xchg
in
and
mul
jmp
jbe
push
js
cli
pop
sub
pop
sbb
mov
add
ret
mov
inc
push
sub
popl
rclb
aas
fs
dec
inc
sub
mov
mov
sbb
shrb
aam
pusha
adc
add
mov
daa
stc
and
inc
cwtl
ss
ljmp
addr16
out
xchg
dec
arpl
xchg
xchg
int3
jo
lods
mov
dec
mov
push
xchg
inc
rcll
enter
in
mov
mov
push
aad
jle
outsl
xchg
or
leave
clc
adc
aaa
xor
inc
sahf
sarl
enter
fistpll
aad
sbb
jne
icebp
pop
xchg
aad
push
mov
stc
xchg
pop
faddl
adc
nop
aas
cmpsb
lds
lret
inc
and
mov
hlt
mov
orl
daa
push
stos
push
aam
mov
inc
mov
mov
lods
sahf
jo
cmc
xchg
pop
stc
mov
in
orb
mov
mov
loop
jecxz
jg
sub
xchg
fisubs
push
out
in
inc
in
mov
jmp
cmp
dec
aas
xchg
inc
jmp
push
outsb
fidivrl
push
add
int3
pop
cltd
push
cmp
in
inc
ds
and
sbbb
les
int3
cld
mov
fwait
test
add
arpl
push
cli
inc
fwait
dec
cmp
sub
dec
adc
in
mov
and
hlt
jmp
jecxz
lret
stos
pop
and
lahf
mov
mov
cmp
popf
or
push
stos
jle
pop
lds
sub
pusha
sub
cld
pop
sub
cmpxchg
cmpsl
rep
dec
mov
and
cwtl
inc
inc
jle
fstpt
pop
inc
and
mov
lods
popf
mov
cli
xchg
push
mov
in
dec
lret
test
sbb
or
sbb
loop
or
and
lret
aam
addr16
or
mov
or
out
jnp
dec
jle
fisttps
cli
out
add
and
fmuls
call
or
xchg
inc
scas
pop
cli
out
out
sbb
lods
es
lods
imul
xchg
jno
testl
jbe
cmp
out
cli
addr16
cmp
pop
fwait
pop
pop
xchg
mov
insl
add
or
into
xchg
aas
push
inc
xchg
push
bound
out
in
hlt
test
mov
push
jmp
mov
testb
aam
mov
pop
cmp
push
mov
add
shlb
jnp
fmul
xchg
push
and
cmp
lcall
ud1
push
repnz
push
dec
rorb
push
adc
push
fs
into
lcall
into
push
dec
mov
pop
outsl
inc
pop
negb
shll
cmp
dec
clc
popf
xchg
adc
xor
mov
popa
inc
pop
xchg
inc
mov
leave
sbb
jmp
cld
das
fsubrs
inc
and
aad
hlt
or
into
xor
roll
out
out
mov
popf
pop
les
or
push
xchg
jge
sub
add
mov
jns
xor
xor
cli
or
mov
mov
add
fs
outsb
pop
lret
leave
mov
ja
aad
sbb
xchg
fdivs
mov
in
mov
addb
xchg
cmp
pop
push
rol
dec
sub
in
pop
and
pop
rclb
sub
or
lret
push
mov
mov
cmpsl
jle
dec
pop
add
push
negb
movsl
shrb
imulb
mov
cli
inc
pop
vtestps
jg
cmp
sub
test
testb
dec
out
push
sub
or
cmp
push
push
add
aad
sbb
push
sarl
dec
popf
popf
pop
xchg
mov
rcrl
iret
ficoml
mov
add
xchg
cmp
daa
leave
jbe
lcall
or
jg
pop
cmpsb
mov
mov
insb
dec
push
push
scas
scas
jnp
pop
ss
mov
sbb
or
add
nop
or
mov
arpl
push
jae
xchg
push
clc
mov
mov
mov
pcmpgtw
mov
fidivrs
mov
shl
sbb
cltd
dec
lock
inc
test
pop
xchg
cmc
and
popa
les
loop
mov
outsl
addb
cmp
out
dec
ljmp
add
fcoml
add
ds
fldcw
lea
filds
push
movsb
mov
jne
and
sbb
cmp
xor
je
sti
addr16
outsb
mov
subb
xchg
xor
or
mov
fs
mov
lock
insl
jmp
add
xor
cld
out
push
sub
insl
sbb
pop
push
imull
stc
dec
repz
xor
jae
shlb
mov
push
out
cwtl
jp
lret
dec
fs
xchg
inc
mov
or
cmpsl
into
insb
inc
lcall
and
jecxz
push
mov
xor
stos
xor
jbe
rorb
fmull
aas
xor
xor
cmp
mov
or
jecxz
fs
lods
jp
jle
add
cmp
leave
mov
mov
inc
xor
dec
inc
jg
ljmp
fcompl
push
push
jae
mov
mov
xchg
add
test
test
jne
lock
cwtl
inc
lret
xchg
push
pop
imul
and
or
mov
or
mov
sbb
std
fidivl
imul
xchg
inc
enter
in
sbb
std
cmc
in
adc
add
psubd
fisubs
mov
and
cld
xor
push
xchg
push
cmc
fsub
out
outsl
fists
xor
xor
xchg
lcall
loopne
sbb
or
mov
pop
inc
mov
and
mov
push
and
popf
or
popf
mov
sbb
icebp
iret
add
push
and
int
test
cmp
pop
bound
insb
add
adc
movsb
lea
xorl
dec
insl
outsl
xchg
test
xor
popa
xchg
std
fisttpll
es
aad
vpminub
je
adc
pop
push
mov
inc
xor
repz
bound
outsl
sbb
mov
cld
addl
pop
jns
jp
mov
add
enter
dec
leave
int
cmp
xchg
pop
leave
in
push
outsl
mov
cmpsb
loopne
push
sbb
pop
mov
fwait
xchg
xor
cmp
repnz
xchg
fdivrp
mov
repz
sahf
adc
in
mov
push
jge
and
fldl
loop
adc
pop
subb
test
jecxz
jo
outsb
and
fdivrs
xor
push
ss
cmp
and
aas
in
cmp
int3
mov
pop
push
icebp
sub
mov
iret
notb
lahf
cmp
push
jge
adc
jl
pop
sbb
rclb
and
insb
loope
cli
ret
loope
test
pop
jnp
jno
loopne
mov
out
roll
push
and
jns
push
jne
sub
insb
int
data16
wbinvd
and
fnstcw
pop
ja
or
dec
scas
clc
nop
fwait
xchg
mov
mov
pop
call
ret
sbb
cwtl
addb
out
fwait
movsb
sahf
stos
and
or
mov
dec
xorl
cld
outsb
out
inc
push
sar
sbb
fstps
punpckhdq
enter
ret
hlt
int3
jle
push
mov
int
and
movsl
test
xor
bound
xchg
push
push
aaa
lret
dec
sub
push
mov
xor
scas
not
inc
jp
enter
shlb
lret
mov
sbb
push
jns
mov
cmp
rolb
in
std
loopne
push
mov
mov
les
mov
pop
aaa
mov
mov
mov
mov
jmp
ficomps
test
and
sbb
les
outsb
mov
or
adc
in
pop
push
sub
out
mov
pop
bound
dec
cld
pop
xchg
dec
jno
inc
lret
cmpsb
jmp
adc
repnz
notl
notb
imul
jno
push
adc
loopne
pop
mov
pushf
mov
push
inc
testb
fcompl
sahf
push
std
notl
sub
dec
imul
adc
adc
jbe
insb
or
pop
cmpsl
repnz
in
lods
jmp
fisubl
inc
sahf
rol
inc
ljmp
lods
frstor
xor
inc
cmp
in
adc
adc
jnp
in
iret
or
or
out
lahf
adc
jg
lea
in
lods
add
push
stos
xchg
int
sub
call
js
cmp
arpl
xchg
sbb
int
movsl
notl
and
and
and
sbb
jb
xchg
push
testl
arpl
jne
sub
icebp
popf
push
jecxz
lret
or
pusha
cs
push
pushf
cld
gs
arpl
push
popf
cltd
xchg
jg
cmpsl
movsl
popf
cltd
call
pop
ret
std
frstor
popa
push
insl
lds
xchg
gs
in
cld
repnz
stc
notl
subb
loop
pop
les
mov
mov
outsl
sub
pop
clc
cmpsl
mov
lods
jecxz
xchg
and
inc
jle
adc
mov
outsl
ficomps
je
rol
stos
fsubl
push
insb
mov
cmp
js
ret
cmpsb
stos
repz
out
jnp
ds
shlb
enter
ret
push
lock
mov
pop
inc
test
mov
insb
push
xchg
mov
enter
mov
fwait
shlb
push
gs
stc
fstpt
cmpsb
out
add
scas
lahf
jns
cmp
aas
xchg
inc
pop
lret
push
mov
inc
cmp
test
fsub
inc
int3
xlat
xchg
pop
in
jno
les
enter
mov
testb
push
cmc
xor
jp
int
xchg
outsl
pop
stos
jo
outsb
das
and
jmp
xor
add
lret
jp
mov
jno
lret
fildl
inc
inc
js
jmp
mov
mov
stos
fcmovb
adc
dec
adcl
push
mov
sub
movsl
cmp
int
imul
or
mov
mov
inc
xor
mov
xchg
jnp
push
push
mov
in
jb
nop
mov
lcall
aad
shrd
dec
lcall
mov
rclb
rolb
pop
lds
in
xchg
mov
sub
inc
in
scas
int3
adcl
into
mov
jge
xchg
stos
shl
repz
mov
sub
dec
push
mov
xchg
sbb
mov
pushf
mov
js
ljmp
xchg
out
jge
mov
mov
cld
mov
fwait
in
mov
les
and
mov
mov
divl
aas
xor
mov
mov
push
mov
cmp
lds
jg
je
dec
cmc
stos
loopne
clc
sbb
loopne
adcb
mov
pop
ret
mov
sub
fucomi
jns
sub
pop
daa
daa
fwait
repz
lods
sub
lds
sub
xor
jnp
gs
test
cmp
and
leave
or
stos
leave
dec
int3
xor
lods
inc
push
jns
hlt
pushf
rcrb
xchg
mov
push
sub
xchg
add
lahf
inc
out
xor
rolb
fwait
mov
orb
arpl
or
iret
js
inc
rcrl
pop
mov
sbbl
xchg
in
std
punpckhwd
mov
push
sbb
cmpsl
jmp
test
movsb
cld
xor
jle
and
inc
fwait
sub
in
daa
ret
sbb
and
test
pop
aaa
dec
jle
mov
inc
aas
xchg
imul
pop
in
fstpt
dec
mull
out
push
movsl
nop
insl
cmp
sbb
aam
mov
xchg
lock
and
test
lds
or
add
mov
ret
sti
out
mov
cwtl
out
mov
je
xchg
inc
ror
push
mov
xchg
lds
mov
orb
push
cmp
test
xchg
push
aam
xchg
push
lret
cmpsl
lods
jp
mov
and
sar
nop
adc
mov
popa
or
mov
jns
movsl
fld
mov
fsubr
int
adc
sub
xlat
jns
notl
lods
sbb
nop
cmp
dec
lret
cmc
nop
jl
add
cmp
int
or
dec
mov
cmp
dec
dec
es
adc
stos
sbb
and
push
fs
daa
sbb
mov
or
out
lea
in
jne
push
cmp
ds
inc
mov
fwait
sbb
dec
out
add
jo
stos
adc
xlat
pusha
mov
aad
jp
clc
pop
push
xor
sbb
in
pop
lcall
cmp
and
xor
cli
stc
and
imul
frstor
cltd
sub
cmp
mov
xor
push
mov
inc
pop
mov
test
jnp
cmp
and
jb
int3
subb
adc
dec
pop
sahf
scas
iret
enter
xor
adc
lods
push
mov
mov
roll
stos
mov
sub
cmp
xor
movsl
jge
mov
pop
sub
xor
cmp
pop
nop
subb
push
aas
pop
sahf
mov
jo
ret
sbb
fimull
gs
aas
xor
dec
repz
test
ja
test
xchg
ds
and
push
in
and
add
popl
jmp
xor
mov
sub
lods
cld
or
adc
ja
jmp
inc
adc
int3
ljmp
je
xchg
mov
adc
mov
mov
dec
mov
xchg
insb
push
data16
inc
cmp
sub
push
int
push
push
mov
push
fisttps
xchg
push
imul
into
int3
lahf
pushf
inc
dec
ljmp
push
lds
cmpsb
sub
icebp
arpl
push
pop
or
cmp
enter
push
pop
ret
or
jnp
test
jno
mov
test
lds
shr
jl
mov
iret
out
insl
dec
add
fldt
aam
stc
pop
sbb
dec
imul
and
lds
adc
popa
or
insb
insl
lods
jne
pop
pop
mull
jb
dec
sbb
mov
out
outsl
xlat
insb
in
sbb
in
jno
test
loopne
scas
pushf
xor
cmp
into
xchg
lcall
or
repz
mov
rclb
xor
notb
sub
sbb
pop
mov
outsb
test
pop
lret
sub
cmp
push
lock
sbb
scas
xorl
jne
or
pop
pushf
mov
jnp
dec
stc
outsb
sbb
cmp
rcll
pop
xor
test
mov
add
add
and
push
xchg
sti
inc
push
adc
sbb
and
test
adc
xchg
mov
xchg
jns
into
pop
pop
dec
arpl
cmc
mov
xlat
cmpsl
out
xchg
add
popa
inc
sbb
mov
mov
xchg
pushf
in
xchg
dec
push
sbb
arpl
fcom
les
decl
jg
sub
pop
or
mov
aaa
popf
sbb
std
push
and
scas
mov
lock
ds
cmp
xchg
not
movsb
adc
or
add
mov
roll
in
jl
mov
popf
sbb
lret
cltd
push
pop
xorl
cmp
popf
mov
pop
cmp
xchg
sbb
out
lahf
or
sbb
in
xchg
xchg
xchg
dec
jge
adc
js
es
inc
push
xchg
shrl
xchg
in
and
test
les
mov
push
and
arpl
popa
fisubs
shl
pop
stos
mov
ja
hlt
push
lcall
fstpt
pusha
or
xor
or
loop
lock
punpckhdq
inc
and
jge
shll
into
das
mov
mov
or
mov
movsl
mov
push
mov
lods
push
call
pushf
lds
jo
cwtl
popf
ja
xor
jb
adc
lret
mov
sbb
loope
out
test
test
lcall
dec
add
cwtl
iret
out
cmpsb
cmpsl
inc
add
mov
sbb
popaw
mov
xchg
movsb
dec
divl
mov
mov
adc
mov
sahf
test
outsb
fistl
adc
pop
cld
pop
js
dec
in
icebp
mov
subb
dec
pop
and
das
in
mov
lea
popa
leave
stos
mov
inc
jg
test
push
inc
cltd
jg
jnp
stos
clc
sub
movsb
jle
mov
push
xlat
cli
ja
or
pop
push
sbb
into
dec
hlt
and
loopne
pop
call
cmp
xor
xchg
fcmove
lahf
add
repz
enter
and
rcr
and
stc
sub
clc
jle
jne
mov
sbb
sub
xor
fstp
add
pop
adc
decb
sbb
xchg
mov
daa
ret
push
cmp
aad
xor
xor
jg,pt
jge
xchg
jg
repnz
je
mov
push
loopne
mov
adc
test
push
ds
adc
xchg
ja
sbb
jmp
mov
rorl
or
imul
and
cltd
and
xchg
movsb
in
inc
pop
rolb
and
insb
fisubl
xor
fsts
xchg
push
mov
or
enter
sub
les
push
scas
lea
pop
ret
test
movsl
push
push
xchg
cwtl
xor
add
sub
adc
iret
ds
popa
decl
push
enter
pop
or
jmp
fisubrl
mov
jl
lods
xor
cmp
arpl
mov
sbb
pop
test
rcll
fidivs
loop
sub
in
or
adc
js
push
mov
jmp
or
cmp
push
mov
pop
sub
lea
lods
jno
icebp
loope
test
ret
inc
dec
stos
dec
cmp
sbb
es
sbbb
hlt
xchg
sub
mov
nop
xchg
jp
insb
sbb
xor
test
inc
cwtl
les
jmp
push
cli
ret
cltd
xchg
push
clc
in
jne
setb
and
in
jo
sbb
int3
xchg
dec
mov
int
inc
nop
mov
sub
or
fucom
inc
xor
sub
xchg
lock
add
sub
ret
nop
fstpl
jbe
inc
rorb
pop
adc
cli
stos
mov
aad
inc
or
adc
fdivrl
ds
jl
adc
cmpsl
sub
pop
xchg
fcomps
repnz
or
enter
jo
mov
movsb
sbb
arpl
pop
into
iret
pop
push
ds
sbb
xchg
fildl
sarb
insb
cmp
pop
iret
ja
mov
mov
clc
movsl
xchg
subb
cwtl
mov
out
aam
cwtl
lods
dec
popf
adc
test
xor
testl
setp
or
das
jne
into
cwtl
out
xchg
subb
ret
add
and
cmp
mov
and
adc
cmp
shl
push
sub
jmp
add
les
jmp
mov
and
shll
inc
xchg
ljmp
mov
cwtl
je
jl
stos
in
push
fiadds
sbb
test
dec
cli
push
fwait
mov
mov
inc
outsb
test
push
jns
mov
imul
dec
cvtpi2ps
lock
inc
imul
loop
les
xchg
jbe
les
fstl
xchg
bound
xchg
cld
jne
scas
fs
jmp
xchg
lahf
sub
mov
sbb
xchg
mov
push
jo
addr16
test
es
icebp
stos
shlb
popa
adc
adc
mov
pusha
imul
add
insl
pop
dec
hlt
aas
or
hlt
mov
in
test
add
jo
mov
cmpsl
les
addl
mov
sub
push
insl
mov
xchg
xor
pop
xor
scas
xor
and
sahf
daa
and
jmp
cmp
jae
push
xchg
dec
sbb
stos
dec
imul
jnp
mov
loop
pop
jg
adc
js
add
mov
mov
push
mov
cmpsb
or
jnp
cltd
imul
adc
mov
adc
fs
xchg
call
sub
clc
into
dec
ret
daa
pop
pop
fmull
push
lock
pop
fldcw
mov
lea
cltd
cmpsb
add
insl
sub
repz
nop
jmp
orb
push
enter
jl
xor
lds
mov
jmp
inc
into
and
das
xchg
or
mov
add
pushf
lods
movl
mov
xchg
test
mov
int3
test
insb
jne
test
outsl
add
imul
sarb
xor
shrb
das
fidivrs
sbb
repnz
or
sbb
push
push
lods
sub
dec
sti
lds
mov
lea
rep
fstl
mov
rcrl
mov
jl
fimull
lret
inc
add
sub
sbb
out
cwtl
push
inc
mov
cmp
push
pop
adc
std
js
sbb
add
mov
pop
mov
ficompl
cmp
pop
loopne
pop
pop
aam
xlat
iret
out
xchg
loop
pop
pop
adc
icebp
icebp
xlat
sbb
add
imul
or
jns
nop
jae
or
aaa
jnp
imul
sahf
push
cld
pop
jl
ljmp
call
or
in
jns
int
ss
scas
push
xchg
mov
mov
popf
pop
fistl
repnz
je
add
movsb
fdivr
pushw
pmuludq
out
pushf
mov
inc
xchg
mov
cmp
loope
div
xor
ljmp
jo
icebp
push
jb
mov
call
fisubrs
ret
jb
mov
pop
lret
hlt
popf
or
imul
mov
popf
dec
cs
movsl
fs
clc
inc
push
enter
push
int3
icebp
xor
jle
ret
imul
mov
pop
sti
lcall
cmp
pop
movsb
int3
dec
dec
fs
xor
pop
ja
push
push
and
js
decb
insl
sub
jmp
rcll
imul
pop
mov
cwtl
push
pushf
sbb
in
dec
and
push
mov
comiss
dec
fisubs
cmpsb
cmp
pop
stos
or
sub
outsl
data16
testb
push
dec
or
pusha
fisubs
jo
and
ret
pop
cltd
imul
mov
and
in
in
jno
xchg
push
lods
loop
sti
rolb
lea
aaa
out
jb
push
movsl
inc
cmp
cwtl
subb
out
popa
pop
xchg
push
sarb
mov
add
cmp
push
xchg
pop
mov
repnz
repnz
jl
imul
int3
aaa
inc
mov
and
mov
cmp
fisttpll
enter
sub
pop
outsl
jne
add
mov
cld
dec
lock
mov
mov
fldenv
or
ret
fisubrl
mov
aaa
hlt
fisubrs
mov
lock
lds
cmc
lods
lock
cmp
mov
fnsave
mov
cmc
fldt
outsb
xor
fs
pushf
js
xor
jecxz
je
pop
stc
push
xchg
mov
xchg
ss
in
mov
or
add
aas
jl
xchg
stos
sbb
push
fidivrs
inc
push
imul
pop
sbb
add
rcrb
gs
cltd
testb
clc
iret
pop
je
push
sub
out
orl
dec
outsb
std
sahf
cmp
pop
mov
dec
shlb
mov
pop
out
inc
push
dec
punpcklbw
jne
push
and
icebp
inc
jmp
in
addr16
stos
jne
test
mov
mov
pop
gs
adc
call
ljmp
and
test
cmp
cltd
inc
jp
jb
pusha
stos
jbe
sub
mov
movsb
add
sub
in
cmc
jno
pop
lahf
hlt
fisttpl
ljmp
iret
push
loope
cli
and
test
movsb
aam
adc
in
aam
sub
stc
xchg
les
or
popa
pop
xor
sbb
lret
push
push
jnp
stos
adc
pusha
popa
jbe
aaa
test
cmc
fsubrp
or
push
mov
jbe
cmp
mov
nop
loopne
fsts
fistpl
imul
loope
mov
lods
sub
xchg
hlt
repz
out
enter
inc
bound
xor
repnz
stc
and
dec
xchg
lret
clc
insb
push
cmpsl
scas
sub
push
jl
pop
push
fs
add
push
inc
dec
sub
lods
xchg
lahf
jae
cmp
xor
push
inc
or
repnz
push
mov
xchg
imul
mov
ret
inc
or
sti
mov
mov
mov
xchg
pop
add
xor
mov
cmp
lret
aas
inc
aaa
xchg
lcall
jb
or
mov
and
ss
cmpsb
int3
xchg
dec
xchg
in
outsl
lods
ret
lret
and
add
and
shlb
imul
or
lods
dec
cmp
dec
inc
dec
insb
je
push
iret
lods
mov
mov
and
cs
sub
xchg
inc
xchg
enter
fistpl
bswap
inc
xchg
leave
lret
test
jmp
and
jb
pop
mov
cwtl
test
xchg
or
and
push
and
cli
xchg
cli
adc
ret
hlt
inc
dec
icebp
rcrl
popf
popa
cmp
sbb
jmp
sub
jns
loop
dec
sbb
loopne
test
repnz
test
loopne
mov
popa
adc
lret
mov
setl
fmuls
cltd
sbb
loopne
mov
cld
movsl
lock
push
sti
test
cmc
pop
iret
mov
cmp
ret
push
mov
int
cmp
sub
imul
imul
and
call
add
setne
and
mov
arpl
lock
nop
xchg
push
or
in
pushf
xor
aad
dec
outsl
pop
lock
lret
lahf
xor
jmp
es
movsb
lcall
clc
cmp
dec
pop
iret
mov
cmpsb
cmp
xor
fildll
test
ljmp
mov
xchg
jne
rcrb
add
jo
xor
and
cs
or
scas
lds
loop
out
cmc
insb
das
add
fldl
lods
fistps
xchg
adc
scas
push
daa
pop
js
cmp
jg
gs
pop
mov
sub
filds
jae
sbb
insb
testb
add
in
xchg
jge
out
mov
fcmovb
sub
inc
xor
mov
ljmp
mov
nop
daa
pusha
lods
xchg
adc
jo
cmpl
cmp
pop
sub
aad
fs
roll
xor
add
loop
nop
ret
xor
cld
jge
sahf
pop
loopne
aad
stos
loopne
pop
jnp
lods
and
dec
lret
or
out
jo
push
jnp
pop
mov
xor
and
leave
push
xor
pop
leave
repnz
inc
out
adc
sahf
sub
jmp
pop
sbb
pop
mov
imul
repnz
sub
jne
imulb
test
jno
imul
sbb
cmp
leave
sub
ja
negb
notb
add
iret
data16
fldenv
bound
push
mov
test
daa
xchg
mov
xchg
test
addr16
jnp
daa
test
fsts
aas
or
or
addr16
pushf
movsl
mov
xor
cmpsl
add
add
or
cmp
mov
test
pop
cmp
mov
lret
jnp
in
int
cli
jno
aas
mov
jns
in
fdivrl
lds
sahf
adcb
xchg
push
in
xchg
inc
repnz
dec
enter
dec
cs
jnp
sub
pushf
scas
xor
leave
leave
jp
dec
cmp
pslld
test
inc
lods
cltd
pusha
subl
push
pop
in
jnp
es
jle
mov
imul
out
and
pop
roll
inc
sbb
out
cli
mov
out
dec
mov
lret
mov
fdivrl
mov
lock
jecxz
out
cmp
mov
ss
jo
xor
shll
mov
adc
adc
in
popf
nop
xor
rcl
nop
or
lods
lds
mov
xchg
add
popf
stos
sahf
test
mov
xchg
add
pop
stc
rorl
rclb
adc
cmp
push
hlt
and
sahf
mov
push
mov
jp
mov
xchg
loop
call
jae
adc
jle
pop
mov
dec
icebp
push
cmp
xor
xchg
cmpsl
pop
in
hlt
lret
pop
add
fidivrs
adc
push
add
rcr
sbb
jns
inc
fildll
int3
dec
pop
cmp
sbbl
das
cmp
mov
fists
idiv
inc
test
das
sbb
mov
add
dec
pop
loope
shrl
adc
sub
out
insb
pop
adc
es
xor
jg
lret
mov
mov
loope
cld
add
mov
sub
mov
clc
inc
dec
push
jne
out
into
mov
cltd
insb
mov
jge
call
cmp
stc
lds
sub
dec
incb
scas
out
sub
fbstp
imull
inc
fidivl
into
mov
fnstsw
and
gs
dec
into
fadd
rorl
sbb
mov
mov
adc
sarl
iret
gs
push
enter
pop
aaa
xchg
testb
mov
xor
jbe,pn
test
imul
mov
das
into
lods
comiss
xchg
test
lea
js
mov
push
stc
in
sub
or
jb
loop
push
sbb
aas
jne
je
and
mov
cmp
ret
iret
pop
sbb
adc
scas
sbb
stos
daa
mov
inc
mov
div
or
loope
leave
addb
fstl
fisubs
fs
sub
aad
xchg
or
ficomps
xchg
cmp
daa
and
or
outsl
push
sub
or
rclb
movaps
jae
xor
clts
or
mov
in
movb
cmp
mov
mov
shrb
ljmp
adc
out
sub
jl
add
cmp
push
pop
pop
jae
jnp
imul
cmp
icebp
cmp
je
cmp
or
out
cmp
dec
popa
xchg
push
out
imul
cmpsb
sbb
rcll
inc
ud0
test
hlt
fcomps
lods
fstpl
mov
push
rcrb
adc
idivb
fidivrl
jecxz
cmc
cltd
cmc
jmp
sbb
sbb
dec
xor
mov
rolb
jp
test
mov
mov
inc
and
dec
fbstp
pop
dec
cmpsl
pushf
sahf
dec
gs
les
mov
cmpl
cs
mov
jge
mov
fs
div
pop
mov
rclb
sub
cmc
nop
sbb
xor
test
sub
inc
xor
pushf
outsb
push
aad
in
mov
adc
jnp
push
icebp
xor
jae
loope
insw
lret
and
lods
out
and
scas
lock
push
ja
in
mov
push
mov
gs
jbe
mov
sub
pop
mov
push
mov
push
cwtl
inc
repz
mov
mov
xor
mov
jmp
and
mov
inc
sub
dec
movsl
fbstp
aad
jp
je
not
pop
mov
cmp
ficoms
mov
mov
bound
mov
adc
lods
test
sbb
jae
mov
addb
push
mov
inc
or
jge
mov
clc
push
inc
scas
push
ret
inc
rorl
cmc
mov
jle
dec
pop
cmc
lret
lods
push
add
sub
xchg
jo
push
aad
xchg
mov
lret
xchg
xor
xchg
sbb
push
ja
mov
movsl
mov
mov
sar
mov
outsb
and
mov
loope
and
cmp
jecxz
cs
in
mov
xor
jae
cmp
ret
rcll
fsubrs
mul
sbb
mov
test
ret
xlat
dec
cmp
lret
sub
dec
lret
push
sub
ja
imul
mov
rolb
adcl
pop
inc
orl
repnz
push
sub
adc
or
in
mov
outsl
sbb
dec
test
mov
dec
cwtl
idivl
jae
roll
lock
btc
jmp
add
mov
rcll
add
out
dec
mov
out
inc
aad
adc
mov
mov
xchg
cmp
push
enter
mov
stc
mov
xchg
dec
xchg
jns
mov
jmp
mov
sahf
enter
clc
and
adc
sbb
add
lods
mov
and
add
lret
sub
and
inc
dec
jnp
cltd
ljmp
mov
out
aaa
lock
cmp
ljmp
pop
cltd
out
dec
in
mov
aad
fdivl
dec
jmp
test
scas
ficompl
ficomps
int
push
inc
insl
cld
dec
cmp
xchg
sbb
cmp
movsl
shll
aad
shrl
dec
pop
pusha
adc
sarb
test
mov
and
xor
pop
fwait
test
push
sti
fadd
xchg
xor
lret
jbe
pop
xchg
movsl
inc
jge
mov
mov
cltd
adc
call
inc
sub
push
pop
js
mov
inc
int3
add
int3
hlt
dec
daa
xchg
les
stos
jmp
jno
mov
testl
mov
xor
inc
lret
inc
jnp
or
sbb
jno
xor
mov
rcrl
dec
jle
in
mov
jp
add
sub
inc
sbb
insl
xchg
cmp
ret
cmp
sub
jbe
mov
gs
mov
mov
adc
nop
cmpl
pop
push
pop
add
les
lahf
jcxz
bound
jg
cmp
or
loope
push
lea
addr16
inc
push
adc
and
push
sbb
scas
iret
add
mov
outsb
imul
cltd
fs
push
fcomi
push
fwait
scas
cld
loop
adc
lcall
dec
cmpsb
inc
sub
imul
orl
xor
mov
ds
stos
pop
mov
stc
mov
test
stos
notb
or
and
inc
aaa
xor
sahf
std
aas
cli
xor
lods
insb
push
aad
pop
jg
lods
xchg
add
cli
push
jle
and
jp
jne
cmpsl
or
mov
out
repnz
sub
out
jnp
loop
lock
or
fdiv
sub
lret
dec
sbb
lods
mov
mov
push
mov
pop
sub
iret
mov
push
repz
repnz
bound
dec
inc
ja
adc
sbb
inc
cli
scas
cli
call
repz
dec
dec
mov
or
hlt
adc
push
stos
dec
aas
movsl
adc
ljmp
outsl
test
dec
loopne
ficoms
inc
add
movsb
cs
frstor
cmpsl
iret
sbb
aaa
leave
iret
inc
jae
xchg
pop
das
clc
fistl
inc
pop
or
lahf
push
push
cmp
out
pop
sub
cmp
mov
dec
push
lds
pop
ret
adc
push
inc
imul
cltd
fmuls
arpl
les
out
cmp
loop
sub
mov
push
jae
sub
pop
xor
pop
pop
js
dec
ljmp
cmp
in
pop
popa
xchg
adc
inc
mov
lds
and
pop
add
dec
adc
ret
lahf
cmp
mov
xor
push
out
inc
sahf
test
push
test
clc
sbb
inc
std
dec
mov
push
xor
test
lods
ret
out
filds
adc
xor
sbb
out
pusha
xchg
mov
movsb
pusha
sub
jbe
movsb
push
scas
lret
add
add
je
sub
stos
xchg
and
jg
mov
pop
xchg
jle
xlat
insb
icebp
pop
mov
push
je
and
xchg
push
sbb
adcb
enter
scas
xlat
emms
cmp
int3
push
pop
sbb
stc
push
pop
mov
cmpsl
mov
test
xor
enter
sub
jb
stos
or
and
jns
add
pop
jle
jecxz
int
push
movsl
xchg
mov
subb
pop
cmc
cmp
mov
pop
xchg
iret
in
aad
mov
mov
inc
mov
and
mov
jns
dec
aad
int3
fs
dec
in
or
xchg
and
push
stos
push
adcl
sbbb
stos
and
lahf
cltd
mov
sarl
push
or
sub
cmpsb
or
push
sub
fs
ljmp
push
jp
cmc
les
scas
cli
sahf
adc
and
mov
cld
jnp
arpl
int3
pop
xor
adc
ficompl
roll
mov
push
or
inc
inc
idivb
push
fisubrl
jmp
sbb
insb
mov
dec
sbb
pop
mov
xor
jne
or
lret
arpl
and
cmc
js
pop
push
pop
stos
or
jmp
cmp
test
mov
int
shrb
lcall
pop
shl
sbbb
mov
add
xorb
movsb
es
cmp
scas
mov
jg
or
mov
dec
pop
lcall
mov
sbb
sbbl
jnp
and
fcmove
testb
cmpsb
popf
adc
lret
sbb
cmp
push
jbe
test
sbb
dec
clc
xchg
and
lods
mov
cli
roll
cld
adc
xor
loopne
jne
pop
push
std
fsubl
repnz
or
or
jg
cmpl
fdivs
sub
into
jg
out
mov
cmp
mov
sbb
orl
sbb
pop
or
aaa
push
ret
addr16
mov
mov
lock
ja
ret
pop
stc
repz
pop
dec
js
add
cmp
push
addr16
int
andl
mov
mov
or
cmp
adc
add
cltd
jns
loope
mov
pop
insl
into
xchg
dec
jle
mov
adc
lods
push
xor
jle
sbb
shlb
lahf
mov
sub
mov
dec
hlt
add
pop
xchg
jae
movsl
ss
sbbb
lahf
adc
stc
adc
fs
jne
call
pushf
push
dec
jle
imul
cmpsl
lret
inc
xlat
int
je
int
pop
repnz
jle
pop
add
in
iret
mov
jle
call
cmp
or
pop
test
and
scas
cmc
jmp
push
pop
enter
xchg
rcrb
xchg
xor
pushf
leave
jecxz
lods
add
cmp
xchg
push
out
cli
dec
pop
stos
les
shrb
int
idivl
jbe
xchg
push
mov
sbb
mov
mov
sub
jb
cmp
add
in
jp
pop
sub
add
cltd
xchg
das
cmovnp
add
fs
mov
xchg
mov
fcomps
push
bound
shlb
popf
xchg
je
in
aaa
xchg
jp
adc
jne
stos
subb
out
shlb
adc
popf
rorb
cmc
jne
ja
dec
fbld
clc
clc
orb
push
lret
test
pop
pusha
sbb
into
adc
mov
mov
scas
mov
dec
outsb
dec
push
pop
or
pop
xchg
cmp
and
or
sub
fbstp
sub
or
into
inc
push
outsb
inc
cld
sub
add
sbb
nop
mov
mov
test
push
lock
mov
lahf
enter
mov
mov
daa
lret
bound
push
ror
je
ss
jge
popf
cmpsb
shlb
xor
xchg
into
not
jbe
js
aam
lds
ret
test
mov
or
jmp
pop
shll
xchg
fdivrs
lahf
pop
fisubs
fsubrl
pushf
pop
fists
sub
mov
filds
mov
cmp
loop
inc
xlat
scas
push
inc
rclb
dec
shr
push
lret
xchg
fwait
sub
sub
fimuls
xor
push
loop
mov
sahf
cld
je
testl
gs
jl
and
adc
aas
push
or
sbb
sub
mov
and
sarb
ds
nop
inc
jle
aaa
imul
jg
filds
sub
add
mov
aad
jg
jl
sub
enter
sbb
pusha
cmpsb
lock
bnd
bnd
jne
mov
dec
in
jg
pop
test
repnz
ja
mov
sbb
daa
cli
jnp
out
std
insl
iret
aas
cs
xlat
js
aas
xor
out
fsubr
cs
cwtl
and
bound
mov
sti
cmpsl
or
out
xchg
sub
out
jne
insb
fdivrs
inc
push
fcoml
popa
lcall
mov
pop
inc
mov
sbb
jnp
imul
repnz
fistps
xlat
cmp
sti
aam
stc
cmpsb
pusha
jge
or
cmp
inc
fcoms
lock
mov
lds
popa
enter
mov
shrl
aam
sarb
andl
into
sbb
lea
dec
and
outsb
xor
mov
sub
hlt
movsl
bound
xchg
xorl
clc
stos
repz
adc
stc
icebp
cmp
int
mov
mov
popf
pop
add
xor
jbe
mov
lcall
icebp
loope
cmp
jg
xor
in
cwtl
dec
xor
and
stc
push
mov
fimull
daa
jb
mov
ret
hlt
cli
ret
inc
dec
dec
and
test
fistps
jl
mov
sub
stc
lea
mov
xchg
pop
sbb
push
sub
ds
sbb
das
or
imul
std
dec
xor
add
add
or
cmp
dec
imul
mov
push
mov
dec
dec
cltd
lea
pop
push
adc
movsl
cmp
into
fstps
dec
hlt
adc
daa
dec
jmp
cmpsl
xor
and
fiadds
out
add
xchg
push
mov
hlt
adc
jecxz
stc
je
cli
jecxz
cwtl
in
aam
jge
pushf
pop
hlt
aaa
jmp
and
cmpl
sti
mov
lock
test
or
sub
clc
ss
xor
repz
push
loopne
je
ret
mov
cld
fs
add
cmc
fdivrs
add
imul
popf
loope
or
mov
mov
jp
movsl
sbb
lods
or
out
in
cmp
mov
lods
cwtl
in
test
jmp
in
push
lods
and
leave
add
pop
adc
jns
mov
mov
movsl
add
or
mov
test
pop
cmp
insb
pop
pop
dec
pop
pop
mov
aaa
xor
mov
loope
xchg
in
test
pop
sub
insl
push
mov
xchg
fs
push
shl
out
dec
jo
mov
out
outsb
adc
pop
mov
sub
mul
div
inc
push
je
cmp
decb
add
call
xchg
jae
push
xchg
jno
inc
dec
adc
push
mov
sub
mov
cmp
sbbb
sbb
ljmp
xor
xlat
in
insb
out
pop
sbb
sub
inc
int
icebp
lret
outsl
out
adc
pusha
jnp
addr16
and
lahf
fnstcw
mov
insl
jae
cmp
xor
das
push
movsl
push
add
inc
ds
ljmp
test
jbe
jbe
and
add
jnp
out
addr16
pushf
pop
add
adc
push
add
repz
dec
mov
in
push
loopne
mov
stos
ljmp
cmp
or
sti
clc
dec
repnz
mov
jo
add
stc
in
mov
mov
and
lret
lods
fcoms
xor
arpl
mov
rclb
and
jne
cli
fwait
xor
enter
scas
data16
or
cmc
pop
mov
pop
push
lods
jl
mov
scas
inc
insb
inc
jno
in
scas
sbb
lods
pop
int3
push
ficoml
iret
pushf
dec
iret
sbb
jecxz
lret
dec
cmpsl
sub
mov
sahf
add
sub
data16
pop
aas
jp
movsb
cmp
mov
push
jmp
ss
scas
loope
mov
mov
scas
sbb
mov
jmp
stos
lret
push
out
pmaxsw
mov
fbstp
leave
pop
fbld
shrb
and
mov
push
negl
mov
push
xchg
pushf
aam
xchg
push
xchg
pcmpeqd
mov
jae
mov
jno
ljmp
sbb
scas
je
orb
and
out
mov
mov
xchg
test
aaa
int3
mov
dec
xlat
xchg
je
or
dec
inc
mov
les
mov
test
imul
sbb
lea
pop
mov
push
insb
add
pop
inc
mov
stc
push
adc
loop
dec
cmp
rsm
sbb
adc
xchg
stc
dec
mov
mov
in
pop
stos
jb
pop
fwait
rorb
gs
add
lea
mov
xchg
inc
outsl
cmp
mov
inc
fldt
pop
leave
cltd
and
push
jp
ljmp
cli
fcomp
or
cwtl
aas
rcl
int
sub
xlat
push
ja
cmp
js
or
outsl
gs
jg
jecxz
prefetch
nop
pop
cwtl
cld
cmp
scas
scas
sub
ljmp
mov
mov
data16
insb
int3
inc
movl
inc
les
out
sub
mov
leave
das
je
add
inc
push
xor
pop
jecxz
lret
int3
adc
sbb
push
fimull
vpaddq
pushf
sub
ds
jb
in
idivl
dec
dec
leave
pop
cmp
xor
in
pop
add
jbe
mov
cmovbe
push
mov
sub
sub
js
sbbl
shrb
jno
ss
lahf
xor
insl
inc
pop
hlt
std
push
das
sbbb
or
pusha
jle
icebp
or
dec
test
scas
stc
sub
mov
aad
jne
pusha
inc
cvtdq2ps
xchg
iret
pop
fdivrs
adcl
ja
jb
sbb
add
pop
cmp
mov
push
and
xchg
mov
add
fnstenv
or
cmpsb
stos
out
sbb
scas
jae
js
cmp
xor
insl
mov
jns
and
aam
dec
jg
js
inc
adc
hlt
daa
jno
cmpb
cli
sub
std
jb
sub
jns
test
mov
xlat
adc
dec
adcb
ljmp
xchg
pusha
cmpsl
ret
shrl
cltd
rclb
insl
loop
pusha
dec
rol
aad
enter
inc
sub
mov
push
subb
jecxz
cmp
bound
inc
out
cli
test
fwait
mov
scas
jle
lret
xlat
jmp
xor
add
mov
pop
dec
lret
pop
sti
roll
insb
fwait
lock
aad
imul
mov
movsl
and
and
or
or
sub
sbb
hlt
adc
adc
jl
inc
lods
mov
scas
aad
cli
pop
int
sub
cmp
aam
cltd
inc
loop
inc
cmpb
xchg
shlb
aaa
clc
ffree
xchg
dec
dec
add
rcll
cli
cmc
pop
cmp
mov
jb
aad
mov
addb
jmp
lret
icebp
push
mull
popa
jecxz
into
xlat
push
pop
mov
adc
pop
mov
jnp
sarb
call
test
sub
inc
pop
or
fdivrl
and
jae
push
insl
adc
and
push
loop
mov
enter
push
je
inc
cmpsb
pop
nop
in
sub
jmp
lahf
std
pop
xchg
in
dec
ret
out
sarb
add
mov
rol
sub
testb
mov
xchg
and
mov
ret
inc
roll
imul
mov
jbe
cmp
mov
insb
jecxz
stc
sub
mov
sbb
in
bound
mov
or
sub
int3
add
sub
adc
popf
repnz
dec
sbb
ss
cwtl
pop
xchg
jnp
les
pusha
cmp
les
xlat
movsb
pop
jnp
pop
jmp
lock
push
xor
mov
ret
rorb
and
push
cmc
inc
stc
daa
jp
fwait
pop
add
lds
cmpsb
pop
cmp
aad
adc
fs
cmpsb
lods
repnz
mov
movsl
xor
sub
dec
lret
mov
sahf
outsl
movsl
adc
push
sahf
sbb
and
xor
out
neg
jo
popa
cmp
push
xchg
mov
lret
mov
fcomi
sbb
mov
test
and
inc
test
test
pop
jge
loope
xchg
test
xchg
fsubp
popf
push
popl
cmp
cmp
fldenv
cmpsb
ds
mov
cmp
fisttps
addl
jnp
sbb
and
test
mov
lea
push
mov
and
ret
inc
or
loop
rclb
jbe
lahf
stos
cltd
fcoml
pop
jmp
mov
xchg
xor
outsl
inc
in
pop
inc
sbb
pop
or
adc
data16
jmp
jle
mov
gs
outsb
adc
rcll
sub
test
out
dec
shll
jp
inc
xchg
mov
mov
push
jg
or
bound
sub
xor
mov
orb
hlt
push
and
adc
xchg
fists
mov
gs
scas
jbe
and
or
xchg
jmp
adc
pop
je
cld
jle
mov
jb
mov
int3
mov
mov
inc
jg
push
xor
pop
ja
es
sahf
shll
insl
inc
loope
sub
and
add
popa
cmp
popa
push
cli
pop
cmp
inc
cli
cli
dec
inc
mov
test
mov
or
outsb
loopne
inc
sub
inc
mov
jp
fs
xor
inc
in
and
int3
pop
cwtl
add
inc
mov
mov
dec
push
fiadds
in
cmp
and
mov
sub
push
std
pop
test
lcall
pop
lea
jns
mov
cmp
cmp
adc
adc
movsl
lret
loop
sbb
out
pop
adc
xchg
xchg
in
rorl
fisubl
cmp
sub
daa
call
loope
shrb
xor
mov
jp
mov
fisttpll
lds
jb
icebp
pushf
mov
mov
mov
inc
in
dec
ud0
sbb
out
add
in
jo
shlb
sub
and
rolb
sbb
or
dec
into
add
jno
int3
mov
fisubs
push
or
sub
fadd
mov
stos
add
aaa
loopne
push
xchg
or
out
jmp
int
cmp
movsl
mov
filds
jo
pop
loop
xor
dec
sub
push
imul
push
sub
pop
inc
cmc
call
ds
xor
test
cmp
sub
shl
loop
sbb
divl
test
fnstcw
sbbl
and
stos
scas
pusha
mov
sarb
pop
in
dec
push
aam
pop
leave
pop
mov
out
call
fldt
mov
lods
out
mov
je
icebp
fisttpl
push
jne
jo
push
into
nop
inc
mov
idivb
mov
loope
mov
mov
sti
push
dec
lahf
lahf
stos
lods
movb
dec
iret
xor
push
int
jge
sbb
mov
push
mov
mull
mov
and
adc
call
mov
mov
mov
or
dec
dec
and
test
push
push
jge
mov
xchg
aaa
cmp
pop
jp
fdivrs
dec
cmpsl
xchg
fcomip
imul
push
scas
xchg
lret
sti
jecxz
in
mov
cwtl
mov
pushf
jecxz
dec
pop
xor
pop
mov
test
aaa
inc
push
dec
dec
mov
hlt
mov
fs
mov
jb
or
andb
jno
and
sbb
push
mov
sbb
push
test
iret
or
xchg
pop
pushf
mov
fwait
inc
in
push
xlat
mov
loopne
cmp
jbe
adc
ss
fnstenv
cmp
or
adc
imulb
into
add
and
push
js
ss
cmpsl
mov
pop
hlt
aas
arpl
push
jno
push
bound
mov
and
sbb
lret
subl
mov
aas
stos
cmp
ljmp
aaa
cmp
in
xorb
in
fcmovbe
xor
push
jns
shl
adc
push
les
test
or
push
outsb
sbb
mov
test
clc
dec
clc
add
dec
nop
push
scas
jp
aam
imul
insb
aas
xor
mov
and
data16
mov
ja
fidivrs
fwait
add
jp
iret
lret
sub
xchg
adc
pop
mov
out
inc
cmc
in
mov
inc
fnstsw
loope
pop
jb
leave
and
cld
lea
mov
popf
pop
hlt
repz
add
sbb
sub
sub
xor
mov
out
movsb
dec
add
mov
lret
loope
test
stc
les
adc
and
nop
xlat
jb
out
repz
xchg
lock
cmp
xchg
and
stos
sub
and
inc
jo
sbb
inc
icebp
int3
inc
and
mov
hlt
mov
xchg
mov
pop
inc
mov
push
xor
pushf
xor
push
push
outsl
lret
cmpsb
or
xor
fiaddl
inc
insb
lret
orb
sahf
cld
and
mov
sbb
xor
in
mov
int3
dec
jmp
je
int
out
das
pop
pushf
jmp
push
jnp
lea
mov
mov
filds
xchg
xchg
mov
jp
xlat
jns
mov
xor
sbb
adc
out
push
aam
push
mov
fnstsw
mov
lods
cmp
jnp
inc
into
repz
pushf
push
pop
mov
scas
and
fwait
pusha
add
mov
orl
shll
push
cmp
out
jmp
and
or
or
lods
daa
ja
loop
xor
dec
fsubrp
push
push
test
ficompl
loopw
ret
inc
mov
js
cmp
test
int
mov
adc
ja
fdivrs
jmp
adc
inc
pop
add
shrb
and
push
jno
int
xchg
mov
mov
int
iret
sbbb
lock
cmp
push
push
xor
pop
cmpxchg
mov
mov
dec
ret
inc
jbe
add
arpl
inc
shl
ret
call
sarl
lahf
and
popa
cmp
aad
int
mov
lock
rcl
ret
add
xchg
cltd
pop
movsl
add
cmp
scas
ljmp
lahf
xchg
out
les
daa
push
lcall
in
jmp
inc
add
dec
fildll
dec
pop
ds
jbe
cmp
mov
and
hlt
inc
push
outsb
fcoml
xchg
or
lods
xor
adc
dec
inc
cld
and
jnp
sbb
sbb
mov
mov
sbb
test
mov
mov
inc
movsb
lds
xchg
aaa
push
psllq
aaa
sub
xchg
cltd
push
mov
xchg
jb
cmpsl
mov
jne
je
imul
push
push
loop
fcoms
jo
push
pop
sar
sbb
push
push
aaa
mov
jns
xor
jo
adc
imul
xchg
in
cmp
xor
mov
cmpsb
or
fwait
daa
mov
mov
fidivl
or
std
out
sar
bound
nop
int
lahf
mov
cmp
arpl
rcrl
mov
iret
xorl
test
sbb
aad
jecxz
shlb
inc
jns
mov
outsb
psllq
int
and
push
lret
out
int3
cmp
stc
mov
js
mov
xor
pop
xor
lds
push
xor
shrb
in
xchg
add
pop
pushl
xchg
out
cmc
inc
ret
test
adc
cld
mov
jge
lods
mov
pop
imul
rcll
inc
cltd
shlb
mov
out
cmovge
out
jp
sbbb
jno
xorb
push
mov
cmp
ret
push
lock
outsb
out
pusha
mov
xchg
sahf
add
dec
push
add
mov
mov
fs
mov
scas
loop
insb
jo
sahf
dec
fstpl
data16
jle
xchg
inc
push
cmpsb
mov
stos
mov
jmp
in
cmp
into
mov
sub
movsb
je
and
push
shrb
jbe
pop
mov
cmp
add
or
xlat
push
and
pop
push
xor
pop
jl
xchg
xchg
insl
pop
into
popa
push
mov
mov
mov
and
inc
jne
mov
mov
cmpsl
nop
repnz
popf
addr16
ljmp
sub
sub
or
and
pop
popf
loope
cmpsl
push
fwait
lcall
insl
xchg
pop
subb
adc
lds
rorl
cwtl
xor
mov
fldcw
mov
es
inc
lods
adc
scas
idiv
add
fcomi
shrb
dec
out
inc
out
popa
divl
popf
bound
repz
add
lock
pop
pop
inc
xor
and
adc
adc
lods
pushf
xor
pop
xchg
enter
add
outsl
push
xchg
lcall
test
and
adcb
push
add
mov
mov
arpl
sbb
sub
jle
jae
mov
and
dec
pop
nop
push
ss
prefetch
rorb
fiadds
les
les
iret
cmp
push
movsb
mov
xchg
incb
cmpsb
pop
mov
loopne
iret
push
cmc
mov
mov
xchg
fwait
xor
inc
jecxz
int3
dec
loope
adc
inc
sub
jbe
ret
adc
hlt
in
sbbl
cmp
lret
jmp
maxps
je
sub
pop
lahf
dec
xor
mov
push
fwait
arpl
leave
mov
pop
and
ds
aaa
or
out
add
mov
divb
jbe
sahf
jl
in
adc
mov
xchg
dec
pop
pop
dec
pop
les
insl
pusha
push
xchg
and
scas
xchg
sbb
push
and
xor
cmpb
push
in
jne
sub
dec
lods
xor
dec
test
imul
outsl
pop
or
adc
call
push
imul
push
je
lcall
jbe
aam
push
mov
negl
sub
out
jbe
xchg
mov
das
sti
popa
adc
ds
push
test
xor
push
inc
jp
xchg
daa
sti
xchg
pop
les
inc
xchg
add
xor
mov
addr16
in
lods
imul
cmp
jle
pmulhuw
mov
gs
les
ret
hlt
push
jle
fistl
push
push
push
jno
je
lock
and
sub
push
pop
movsl
ss
out
pop
sub
sbb
xchg
add
movsb
push
mov
add
jns
jge
jbe
pop
enter
mov
les
fcomps
int
jae
cli
popa
adc
fdivs
loop
adc
rclb
adc
jmp
dec
lret
sar
aam
or
out
adc
bound
fadds
jns
push
orl
idivl
imul
mov
pop
popa
loopne
cwtl
imul
sbb
xchg
mov
cmp
adc
dec
std
inc
shl
aam
filds
add
cmp
into
push
xor
jbe
pop
inc
push
push
cltd
sub
aas
mov
in
sub
push
mov
or
dec
sbb
adc
xchg
inc
inc
jp
jb
cs
jmp
jge
mov
mov
movsl
pop
pop
jns
xchg
outsl
mov
mov
dec
outsl
mov
push
popa
gs
test
mov
sahf
cwtl
mov
pop
test
in
add
xor
mov
iret
jmp
lods
dec
mov
into
stos
push
jl
xor
push
movsb
cli
inc
add
andb
div
or
stc
or
mov
xchg
lcall
xor
fidivs
sti
mov
mov
xor
adc
adc
mov
fldenv
mov
inc
sbb
pop
mov
xlat
mov
leave
dec
fsubrp
aaa
xorl
insb
nop
lods
adcb
mov
mov
and
dec
sub
jns
scas
inc
sub
mov
insl
jno
sbb
ljmp
dec
mov
sbb
je
jle
icebp
push
bnd
outsb
push
inc
pop
repz
jmp
pop
sbb
aas
leave
clc
mov
dec
fimuls
test
xchg
mov
sub
xor
pop
xor
stos
lock
and
adc
clc
sbb
inc
sbb
ret
dec
sub
cld
cmc
pop
mov
jne
or
addl
inc
jae
jmp
jne
pop
add
mov
sbb
cmp
inc
mov
xchg
mov
pop
pusha
mov
push
sub
add
dec
sub
lahf
mov
ret
outsl
cmpsb
or
gs
and
mov
dec
mov
push
out
lahf
add
xor
pop
or
rclb
pusha
icebp
outsb
in
or
pop
aaa
dec
loop
outsb
inc
std
add
lds
fwait
sub
adc
mov
pushf
das
mov
cmp
lret
fsincos
movsl
sub
xor
imul
mov
rcrl
das
push
sub
lahf
sbb
and
fucom
sub
and
or
jp
push
rcrb
imul
mov
dec
jo
aam
xchg
rclb
or
icebp
mov
pop
push
jecxz
lods
stos
jne,pt
mov
dec
jg
out
sbb
pop
add
jbe
loopne
insb
jnp
stos
dec
mov
das
mov
cmpsb
and
cmp
fists
xor
jle
cmpsl
sbb
sahf
sbb
cli
push
xorb
mov
nop
bound
adc
pushf
icebp
add
inc
imul
push
movsl
add
inc
rclb
hlt
add
ficoms
outsl
add
fsub
xor
rcll
shlb
adc
pop
adc
and
push
sahf
cmp
shlb
and
mov
xor
cmp
cmc
cmp
aaa
sub
adc
scas
movsb
mov
fs
scas
outsl
aam
stos
mov
xor
sahf
pop
jg
and
inc
jno
in
ja
adc
add
xlat
out
fnstenv
shll
dec
mov
stc
adc
test
pop
cmp
shrb
xchg
iret
lods
dec
test
imul
sbb
jo
jl
xchg
xchg
sbb
mov
imul
xchg
iret
jne
imul
rolb
mov
push
cmp
fistps
cs
jae
adc
jmp
sub
std
or
out
leave
bound
out
xchg
sub
sbb
mov
jecxz
int3
push
jbe
ss
adc
mov
cmp
in
pusha
out
lock
rorl
mov
sbb
inc
std
push
ljmp
aaa
mov
jbe
cwtl
mov
fimuls
stos
insl
repnz
sbb
popf
mov
pop
in
sub
imul
sbb
and
pop
sub
lret
xor
test
dec
mov
data16
xor
cmp
xchg
dec
sub
cld
imul
mov
push
sub
ds
dec
jae
sarb
mov
adc
out
pop
xchg
outsb
adc
ret
or
push
add
out
loopne
xlat
loopne
icebp
xchg
in
cwtl
lahf
inc
xchg
cmpb
cmp
imul
enter
ss
test
outsl
sarl
dec
xchg
mov
dec
sbb
dec
ljmp
push
mov
lret
inc
incb
jae
mov
or
and
fcomps
roll
sbb
sub
dec
hlt
fdiv
mov
aam
lods
mov
sbb
mov
enter
add
mov
jb
fs
aam
ds
and
shr
loop
jp
mov
mov
push
out
movsl
call
int3
jae
and
nopl
xlat
loopne
js
xor
add
inc
jg
fisubl
dec
in
push
jg
mov
fimull
push
xor
mov
aad
sub
and
add
jne
divl
push
adc
xor
sar
in
fstpt
jae
jmp
adc
jne
fcom
aam
mov
xchg
lahf
into
iret
clc
or
xor
adc
outsl
loopne
ror
je
jmp
mov
mov
mov
js
mov
aam
jno
add
mov
sub
and
in
sub
bound
jo
jl
into
mov
sahf
cmp
or
mov
outsl
dec
stos
aas
test
shrb
jge
fistpl
add
push
fldcw
in
adc
out
mov
data16
stos
lahf
jno
iret
insb
push
fsubrs
call
pop
pop
flds
xlat
adc
imul
xchg
enter
std
test
push
push
jge
nop
cmp
mov
sub
les
fcoml
push
les
mov
jp
push
push
cli
jle
cmp
push
pushf
test
push
push
imul
clc
mov
adc
mov
inc
cmp
inc
int3
adc
inc
jnp
stos
add
mov
mov
xchg
mov
xor
out
cmpsw
sbb
inc
sbb
lods
popa
popa
mov
xchg
jo
loopne
test
lahf
add
lahf
rol
pushf
loope
mov
cmp
dec
sbb
icebp
in
aad
inc
jne
jg
push
mov
mov
bndstx
push
xlat
dec
and
outsl
mov
es
popf
dec
sub
push
imull
icebp
and
push
jp
iret
inc
cmp
xor
fdiv
add
xchg
push
xchg
test
nop
imul
repnz
ret
xor
imul
cld
stos
movsl
sub
pop
mulb
jno
pop
in
mov
pop
arpl
imul
stc
or
mov
jg
inc
xor
mov
dec
imul
imul
mov
pop
shr
mov
ja
fs
xchg
test
add
xor
push
jbe
dec
shll
mov
add
xor
cs
je
jo
loope
popf
and
pop
adc
inc
mov
mov
imul
sub
mov
lds
cmpsl
pop
cltd
add
push
call
aaa
push
rolb
push
lea
iret
push
jns
addl
xor
jb
push
sarl
insl
mov
cmp
sub
ljmp
outsl
and
push
and
pop
sbb
in
xchg
xchg
dec
roll
cmp
pop
xchg
and
aaa
pop
inc
add
jp
loopne
out
inc
push
into
mov
or
lret
push
pop
insl
cmc
popf
xchg
sbb
cs
movsb
xor
or
cmp
mov
xor
fiaddl
outsl
cmp
add
arpl
xor
in
push
movsl
fs
into
das
pop
sbb
lods
push
cld
mov
je
pop
scas
jbe
jl
popa
and
xchg
fisubrl
repz
leave
dec
mov
lahf
adc
in
idivl
cld
mov
or
roll
xor
push
lods
or
mov
cmpsb
aas
jg
or
adc
and
std
and
fldt
imul
jl
cmp
ficomps
push
popa
xchg
insl
repnz
ficoml
cmp
xchg
mov
lret
scas
loope
rorb
ret
int3
sti
ret
and
jnp
cmpl
aad
les
sbbb
sub
rolb
aaa
bt
push
and
sti
dec
out
jge
sbb
js
cmpsb
jge
shlb
mov
push
add
fs
and
pop
dec
into
test
adc
inc
sbb
add
pop
mov
mov
pusha
inc
push
cmp
pop
ret
lds
mov
mov
dec
outsb
daa
bound
lret
add
js
hlt
cmc
ret
jmp
gs
mov
lock
int3
test
mov
push
mov
decb
outsl
jno
pop
and
mov
je
inc
sub
jle
mov
lahf
loop
dec
imul
jmp
cmp
scas
ljmp
cmp
pushl
pop
push
out
jg
inc
out
mov
pop
mov
adc
jne
pop
jge
incl
or
xchg
popf
cli
mov
xchg
fnstcw
adc
inc
loop
test
dec
int3
clc
iret
add
cmp
cmp
mov
stos
test
adc
push
insl
aas
xor
mov
rol
movsb
sub
jecxz
jg
xchg
enter
jle
mov
inc
icebp
mov
inc
cld
idivl
pop
jecxz
ljmp
jecxz
mov
dec
mov
jno
mov
es
aas
jnp
and
push
dec
leave
jmp
adc
xor
repz
xor
mov
push
stc
mov
mov
in
mov
inc
mov
mov
pop
jg
lods
in
sbb
xchg
push
scas
xlat
cld
out
popf
daa
sub
clc
aas
sub
fimull
in
cltd
dec
ja
adc
lahf
call
mov
cs
repz
pop
xchg
xor
dec
sub
cmc
sbb
mov
jo
gs
cmpsb
imul
add
jnp
out
pusha
jge
mov
mov
jo
mov
jns
test
arpl
ja
jne
out
mov
aad
rolb
and
mov
in
inc
and
imul
inc
pusha
subb
mov
nop
xchg
push
pop
xor
ljmp
das
mov
sbbb
xchg
cmp
bnd
sub
test
pop
pushf
mov
mov
xor
mov
int3
sub
sbb
pop
mov
out
xor
dec
sbb
lret
inc
rcrl
scas
cmp
out
out
xchg
jmp
or
leave
dec
sbb
cwtl
cmc
popa
aas
mov
incl
cli
jno
fisttps
jbe
mov
andl
xor
outsl
aaa
aam
push
and
push
jl
leave
nop
cli
pop
sub
cmp
jne
sahf
sub
cli
test
jne
adc
push
out
mov
and
pop
inc
arpl
push
dec
pop
test
loop
inc
xchg
xor
dec
jge
lea
repz
hlt
mov
cmpsl
mov
jp
inc
sbb
dec
imul
inc
ficoms
adc
jmp
fistps
adc
enter
jge
rorb
push
ljmp
cli
pop
mov
repnz
addr16
jge
clc
mov
aas
arpl
dec
mov
sbb
lea
and
icebp
ss
aaa
dec
mov
add
fcompl
xchg
or
pop
test
idivl
je
pop
mov
call
sbbl
jno
adc
lret
push
mov
inc
cltd
ss
in
pop
dec
dec
repz
xor
test
lods
fmul
fucom
sbb
fwait
aaa
pop
push
dec
inc
sbbl
sbb
or
std
add
inc
bound
mov
sbb
cmp
pop
jo
mov
pushf
push
jmp
xchg
pop
aaa
sbb
inc
mov
xchg
jmp
push
cmpsb
repnz
and
sub
push
inc
iret
loope
mov
pop
mov
mov
sbb
mov
sbb
repnz
out
test
insl
adc
jp
pop
add
ret
in
dec
lock
nop
mov
xlat
lea
push
cwtl
or
sbb
and
mul
jge
xor
movsb
les
es
mov
nop
decb
mov
scas
or
scas
lods
mov
xchg
ja
mov
jo
out
popf
push
fcmovnu
push
push
in
sub
jbe
mov
add
mov
dec
mov
pmulhw
jecxz
add
xchg
je
cs
cwtl
add
and
push
roll
orl
insb
mov
imul
add
cli
pop
aad
ljmp
std
outsb
test
adc
test
ja
aam
jp
std
jnp
jns
pop
pusha
and
pop
lret
cld
sbb
sbb
bound
int
mov
fwait
xlat
jmp
push
xchg
push
mov
in
mov
outsb
mov
mov
adc
pop
mov
das
iret
jle
bound
movsb
loope
mov
mov
add
sub
dec
mov
test
imul
jb
and
idivb
mov
or
aas
shl
xor
repz
push
subl
stc
scas
dec
ljmp
int
pop
cmpsb
jl
insl
clc
je
aaa
test
or
pop
in
mov
add
pusha
outsl
xor
scas
ljmp
sbb
decb
lcall
ret
fcmovnbe
les
adc
outsl
and
std
aam
bound
movsb
push
jae
dec
xchg
sub
subl
roll
jb
pop
mov
cld
sahf
popf
enter
push
sbb
xchg
jne
loopne
adc
cmp
xor
and
frstor
rclb
xchg
dec
pcmpgtd
lods
lret
add
cltd
outsl
pushf
push
mov
xor
sub
mov
xchg
fsubr
out
jae
aam
addr16
das
push
lock
mov
cli
jae
and
fmuls
into
or
cwtl
or
xor
mov
jo
lret
gs
loopne
xchg
mov
and
rorl
les
adc
add
dec
lret
add
repz
jb
xchg
push
cmp
mov
imul
jnp
xchg
push
in
arpl
clc
shlb
xor
mov
movd
sbb
nop
imul
pop
ret
add
nop
int
add
inc
fimull
dec
jns
loope
dec
mov
push
shll
test
and
idivb
lock
dec
adc
stos
sub
incl
inc
daa
pop
push
push
jns
es
leave
inc
mov
inc
push
loop
sahf
repz
bound
out
push
les
rcll
loopne
mov
cmp
inc
loop
rcrb
aas
xor
inc
mov
fldenv
ficoms
inc
push
in
sarb
imul
jp
inc
in
cwtl
mov
dec
add
push
enter
sub
sbb
or
push
mov
stc
inc
inc
and
mov
movsb
push
cmpsl
sbbb
inc
or
test
xchg
push
arpl
adc
loop
jns
push
xchg
ds
push
pop
imul
add
loopne
and
pop
test
dec
jb
add
inc
stos
inc
clc
cmp
mov
dec
adc
adc
cmpsb
adc
enter
xchg
and
rol
mov
adc
and
mov
push
or
ret
test
jmp
jle
push
lds
push
inc
aam
push
scas
xchg
and
add
jmp
or
dec
loopne
shrl
or
je
lods
mov
mov
pop
inc
rcrl
sbbb
cmc
inc
sbb
andl
pushl
lea
add
arpl
aaa
out
push
mov
inc
stc
cmp
jns
mov
lods
fs
inc
sub
push
fcoms
xchg
xor
mov
aam
pop
xchg
fstps
pusha
push
or
dec
push
add
xchg
in
push
xorl
adc
divl
pushf
rcl
mov
pop
push
add
pop
inc
push
mov
and
push
ljmp
sti
in
dec
jg
adc
push
daa
mov
mov
call
cs
cmp
cmp
or
jno
popf
repnz
sub
cmpsb
xchg
ffree
pop
inc
pop
jle
das
mov
adc
shlb
fsubs
push
xchg
popf
push
adc
int
subb
sub
sbb
jmp
outsl
mov
fcompl
xor
pop
int
pop
mov
sbb
das
popf
mov
adc
dec
jmp
cmp
push
mov
mov
inc
je
aad
cltd
in
fistl
or
mov
mov
scas
pop
push
adc
and
fdiv
fs
das
test
fistps
cmp
push
push
cli
out
sub
inc
xchg
mov
xchg
mov
cmp
jle
les
mov
movsl
push
scas
and
mov
cltd
and
lock
es
dec
and
out
push
sti
lods
js
mov
aas
dec
mov
cmp
out
out
push
xchg
es
stos
xchg
jg
push
pop
out
int3
push
mov
pop
ljmp
loop
inc
dec
mov
ljmp
jo
jb
jmp
jbe
loopne
and
movsb
push
out
jns
push
add
fdiv
inc
and
jmp
jb
test
add
cmp
dec
sub
pushaw
ret
jmp
mov
hlt
test
xchg
sbb
sbb
fmuls
ds
inc
dec
les
je
pushf
adc
ret
sar
jbe
mov
enter
loope
dec
enter
adc
mov
je
add
fisttpl
pop
fmull
mov
xor
mov
movsb
in
dec
push
ja
mov
mov
testb
lods
out
push
jae
aad
bound
jns
dec
xchg
andb
or
adc
pop
push
inc
xchg
or
or
sbb
xchg
or
xor
in
xchg
in
ljmp
aad
adc
xor
hlt
cltd
cmp
xor
andl
or
rclb
aas
incb
dec
out
popa
filds
inc
pop
cmc
and
jnp
lods
insb
lods
repz
stos
stos
and
jns
cmp
imul
push
cmp
incb
xchg
xchg
enter
xchg
jle
xchg
add
hlt
in
and
lods
aam
imul
jnp
cltd
jno
push
push
scas
push
xorb
sub
insb
repnz
jge
popa
pop
jns
sub
mov
jb
mov
cld
ljmp
sti
shrb
cs
enter
les
mov
or
fwait
repnz
inc
je
inc
nop
add
mov
sub
fadds
fldenv
repz
int
cmp
bnd
pop
lods
addb
sub
xchg
in
jge
jno
adc
jp
and
es
scas
xchg
out
fwait
mov
adc
or
lahf
mov
scas
push
cmp
adc
pop
and
inc
xlat
add
in
lret
cld
incb
int
gs
in
imul
mov
cmp
stos
lret
sub
or
or
outsl
pop
jae
ds
sub
int
mov
ds
jle
pop
sbb
push
lods
loope
xor
jg
cltd
sub
int
xchg
jae
pushf
jmp
lods
push
mov
sub
adc
cmc
adc
ss
mov
into
iret
test
and
mov
ljmp
lret
fsts
cmp
xor
fidivl
popw
adc
movsb
int3
dec
jno
mov
push
xor
mov
enter
pop
xchg
daa
rcrb
inc
mov
and
shr
inc
jo
mov
fs
adc
daa
inc
pop
add
pand
push
test
mov
mov
mov
push
pop
sbbb
cld
inc
and
scas
inc
xor
jb
sub
xor
push
aaa
cmp
pushf
jae
popa
add
jo
cltd
xchg
cltd
mov
loopne
adc
shlb
ljmp
xchg
sub
fists
iret
in
xor
faddl
lds
mov
in
and
mov
stos
cmpsb
mov
push
rolb
push
movsl
pushf
jecxz
call
add
sub
ret
imul
sbb
sbb
test
imul
xor
inc
mov
neg
adc
call
scas
xchg
cmp
mov
xchg
sub
mov
test
mov
in
out
rclb
mov
repnz
or
popf
jb
std
sbb
mov
pusha
xor
pop
out
mov
cmpsl
push
dec
and
je
sti
cmp
shl
std
mov
mov
cmp
testb
stos
push
xchg
xchg
pop
popa
cmp
adc
jae
mov
adcl
sub
lea
fs
icebp
mov
and
scas
icebp
mov
ret
sub
out
insb
add
fdivl
and
jge
inc
inc
pop
cwtl
sahf
into
xchg
fistps
ret
insb
ljmp
in
inc
xor
cmp
sarl
and
sub
es
std
or
adc
sbb
xor
test
aaa
cltd
inc
loop
jno
sahf
addr16
negl
mov
test
sbb
xchg
addr16
push
sti
sub
push
pop
mov
stc
pop
or
mov
xchg
fwait
sub
loopne
jb
jno
ja
cli
xor
andl
imul
jns
cmp
mov
push
push
sbb
mov
xchg
iret
inc
rolb
cwtl
mov
dec
dec
pop
fs
mov
adc
mov
movsl
rcrl
jecxz
and
dec
imul
or
xchg
shll
sub
sbb
js
lods
bound
lods
imul
fwait
das
popf
aad
arpl
xor
jne
fidivl
cld
push
lods
xor
push
dec
cmpsl
sbb
stos
or
aam
rcrl
negl
adc
xorl
add
sub
cmp
or
mov
stos
loopne
in
je
inc
inc
mov
push
inc
in
mov
lahf
dec
je
dec
mov
divl
int
fmuls
testb
int3
pop
cmpsl
in
xchg
decb
xor
sahf
inc
mov
xchg
bound
daa
xchg
imul
mov
or
or
ljmp
xchg
push
js
pop
push
push
mov
mov
xor
mov
lods
gs
mov
push
in
dec
mov
push
xlat
mov
into
fldt
sub
push
jg
mov
mov
sbb
test
jp
sbb
lcall
or
mov
xlat
sbb
int
sub
inc
mov
outsl
mov
divb
out
push
cmpsb
fwait
dec
pop
sbb
lods
xchg
push
push
push
sub
mov
and
les
loope
pop
or
fbld
data16
mov
mov
jno
push
roll
movsb
icebp
das
inc
orb
cmp
dec
pop
lods
std
hlt
pop
loope
rorb
fstps
sub
call
in
xchg
loope
mov
inc
xor
movl
inc
cwtl
popf
xchg
jne
addr16
cmp
mov
mov
and
pop
mov
fwait
push
add
pushf
xor
dec
push
push
out
inc
mov
xlat
ljmp
int
jb
insb
jecxz
les
mov
cmp
lods
push
cmpsw
xchg
mov
js
pop
push
pop
add
call
adcl
pop
aaa
cli
mov
in
and
adc
push
or
mov
mov
push
out
jecxz
jmp
dec
push
js
movsl
cmp
shl
jl
imul
daa
in
jo
mov
ja
imul
and
daa
sti
lods
push
icebp
jecxz
std
cmp
xchg
jg
pusha
stos
stos
xchg
and
hlt
jge
mov
cs
lahf
stc
popf
fwait
mov
cltd
dec
sbbl
mov
fnstcw
orl
loopne
fisubrl
fimuls
call
cmp
cmp
dec
ret
jle
sbb
mov
jae
mov
in
imull
sbb
cwtl
adc
sbbb
pop
filds
inc
pop
or
sub
push
test
sbbl
cmp
inc
or
jns
sbb
out
sahf
lock
cmpsl
push
imul
imul
loope
xchg
pop
mov
xor
popa
jmp
lds
stc
pop
xor
cmp
add
daa
out
xchg
inc
cltd
in
push
je
or
adc
push
roll
dec
rorb
push
xchg
dec
fildll
sub
mov
in
cmpsb
aam
lret
xchg
and
jge
mov
pop
xor
in
jns
dec
cmp
out
divb
or
mov
sub
jle
loope
cmp
adc
aad
js
out
fildll
jae
lret
mov
daa
fdivs
dec
jmp
pop
mov
mov
aad
sarb
sub
gs
sbb
lods
dec
add
lahf
movsb
outsb
imul
mov
scas
xor
or
xor
fwait
in
insl
das
dec
rorb
lock
add
xor
dec
imul
arpl
das
pop
roll
push
out
enter
jg
jge
lds
push
ret
cmp
std
popf
mov
lcall
push
jb
divl
lcall
test
and
gs
int3
idiv
inc
xor
and
dec
daa
cmpsl
inc
fs
adc
adc
dec
pop
push
xor
and
mov
xlat
loop
mov
sub
mov
push
pop
in
xlat
adc
ds
or
jne
or
insl
clc
xchg
out
bound
lahf
addr16
lahf
cmc
and
add
sub
dec
xchg
pop
sbb
pop
dec
add
dec
adc
in
repz
jne
mov
xchg
sub
xchg
mov
adc
aam
cmp
xchg
icebp
in
pop
or
ja
xchg
jns
fmul
imull
dec
lods
enter
xor
jns
out
xlat
dec
pusha
orl
pop
lods
call
subl
or
lahf
jl
movsl
and
sti
aas
cmc
fsubrl
cmp
inc
jmp
outsb
xlat
jbe
xchg
idivl
xchg
mov
stos
fimuls
adcl
and
cwtl
stos
lock
mov
shr
add
add
aam
push
xor
mov
sub
mov
dec
scas
xchg
and
push
scas
xor
rol
jge
push
ret
mov
push
into
ljmp
mov
iret
lret
lcall
mov
inc
pop
adc
int3
hlt
push
cmpsl
js
repz
pop
popa
orl
push
aam
add
inc
lock
jo
mov
hlt
fs
sub
xor
dec
andl
jbe
pop
and
mov
push
movsb
test
shlb
in
rclb
mov
dec
xor
lods
mov
cmp
sbb
cmpsl
adc
pmulhuw
and
rcrb
xchg
xchg
sbb
out
push
fstpt
jmp
and
jne
in
lcall
sbb
arpl
jp
push
adc
stos
mov
xchg
dec
in
out
xchg
sbb
je
push
dec
cli
dec
add
int
cs
arpl
das
lret
sbb
dec
inc
jecxz,pn
lock
sub
push
lcall
out
cmpsl
xor
cmp
popf
cmc
test
std
lahf
jge
imul
ret
test
repnz
push
xor
hlt
xchg
jae
cwtl
and
inc
pop
and
xchg
dec
or
aam
into
cmp
clc
icebp
jmp
daa
mov
jle
xor
out
les
lods
jmp
stos
shr
sti
and
bound
ss
sti
pop
stos
jno
jne
out
imul
stos
fistl
nop
loopne
lret
cmp
mov
insl
inc
mov
jl
and
xchg
cmp
sub
fidivl
push
push
mov
adc
jae
aam
bound
shlb
iret
sub
pop
xchg
sbb
outsl
outsl
addr16
and
adc
jle
loop
mov
xchg
imul
aad
sbb
std
adc
sub
inc
adc
fstps
mov
push
aas
mov
jnp
pop
loope
jns
call
addr16
sub
add
jae
insb
xor
or
in
cmpb
fildl
mov
pop
inc
pop
or
xchg
mov
adc
jbe
call
push
hlt
add
sub
mov
inc
in
pop
adc
cmpl
jecxz
cwtl
mov
inc
push
pushl
mov
clc
push
pop
or
or
pop
stc
dec
sbb
or
rolb
arpl
int
xlat
ret
loop
bnd
ljmp
iret
out
addl
or
lret
imul
data16
mov
pop
and
pop
pop
cwtl
inc
and
scas
into
shll
push
mov
js
movsb
arpl
mov
xchg
mov
daa
clc
xchg
es
out
lahf
sub
syscall
mov
sarb
adc
or
sub
and
add
shlb
sbb
les
orl
test
mov
movsl
xchg
mov
fldcw
les
jbe
imul
je
push
jp
sar
mov
les
loope
nop
jae
adc
repz
fcompl
pop
test
loop
and
movb
lahf
jns
add
and
testl
subl
imul
inc
in
mov
sti
ljmp
insb
vfixupimmss
jne
out
mov
cmp
sahf
fistps
sahf
das
mov
sbb
mov
push
inc
fucomip
or
sar
push
rcll
icebp
push
leave
daa
mov
or
icebp
rolb
js
lret
xor
add
sbb
and
fidivrs
mov
test
daa
push
adc
mov
inc
and
ja
test
rolb
xor
insl
ret
xchg
adc
mov
mov
in
scas
and
jbe
pop
fmulp
scas
xor
pop
or
xor
mov
jge
fs
lea
jmp
jae
add
sub
sub
lods
pop
cmp
add
xchg
mov
fiaddl
std
xchg
pop
jns
adc
cli
and
push
pop
test
cmpl
mov
int3
repz
stc
adc
out
adc
notl
out
mov
add
out
jmp
popa
inc
jbe
fcompl
sbb
loopne
push
or
rclb
test
mov
insb
mov
in
fucomp
loop
push
xchg
mov
test
imul
inc
das
jge
push
sbb
xor
data16
xor
inc
pop
mov
mov
jno
lds
and
int3
adc
and
int3
icebp
test
pop
imul
or
xlat
shl
sub
pop
sti
cltd
mov
lock
sbb
inc
dec
pusha
sub
dec
xchg
or
hlt
xlat
out
loope
add
jae
arpl
mov
push
fistps
xor
xchg
sub
push
sbb
mov
xchg
sub
addr16
aad
lock
fisttps
rcrb
and
js
icebp
and
push
mov
jne
dec
fnstcw
jo
mov
pusha
push
mov
mov
push
mov
xchg
sub
jne
or
and
adc
ret
popf
push
fdivl
insl
ret
push
xchg
inc
loopne
cmp
xor
pop
test
in
mov
push
ss
addl
in
in
adc
push
sti
dec
or
adc
sbb
insl
aad
outsl
lea
shlb
mov
jo
lahf
xchg
inc
lret
repnz
inc
les
out
aas
sarb
lahf
mov
push
shr
inc
pop
cmp
mov
hlt
xlat
aad
inc
ret
movsb
sbb
add
inc
add
mov
xor
add
pop
adc
xor
and
sbb
mov
xrelease
and
and
push
or
xchg
lock
sbb
scas
sbb
sbb
add
xor
subl
negb
jl
mov
std
push
cld
sub
dec
mov
shl
cld
jbe
and
icebp
pop
std
out
push
and
scas
and
add
loopne
bound
shlb
mov
xchg
or
adc
and
mov
nop
xchg
aad
iret
add
pop
mov
xchg
dec
adcb
dec
jns
mov
stos
shl
outsb
aas
inc
push
inc
and
roll
inc
add
inc
cmpsl
imul
mov
mov
and
fcmovu
push
loopne
mov
std
cli
das
fwait
xor
jno
rcl
outsb
or
adc
gs
push
and
add
lods
lret
mov
fldl
mov
sbb
cli
and
filds
test
jmp
jo
enter
inc
out
mov
aaa
ja
mov
jo
push
scas
mov
mov
ss
fs
cmpsl
aad
mov
cli
subb
cld
les
add
sub
popa
arpl
lcall
mov
cld
je
into
sub
jmp
push
or
outsl
rcll
xchg
mov
pop
aam
repnz
fidivl
mov
push
rcl
xchg
fwait
adc
ljmp
xchg
and
xchg
sbbb
cltd
cmp
cmc
mov
test
dec
jmp
ds
mov
fwait
or
pop
sti
mov
ds
inc
loop
sbb
aam
pop
fists
popf
mov
sub
jle
inc
sbb
pop
leave
sbb
xchg
mov
mov
cmpsl
jo
push
jbe
lret
pop
jnp
test
lret
in
cli
cli
pop
cmp
cmp
mov
inc
sahf
int3
call
pop
xor
pop
dec
adc
dec
repz
jo
mov
ljmp
fs
xor
lea
leave
jns
loope
and
cltd
mov
insb
pop
loopne
sti
mov
xchg
fimuls
inc
pop
cmp
xchg
cmp
add
xchg
adc
aam
xchg
jmp
mov
sti
dec
mov
stos
mov
aad
pop
cmp
add
mov
dec
imul
jmp
inc
jl
cli
movsl
sbb
in
gs
or
mov
mov
and
jmp
inc
negl
and
adc
sbb
shll
xor
inc
lds
adc
sub
ljmp
push
mov
sub
sbb
xor
xor
or
and
sahf
lods
mov
or
rcrb
push
pop
sub
subb
ret
icebp
das
jnp
xchg
repnz
std
adc
out
stc
sub
mov
out
testl
and
push
cmp
cmp
inc
inc
outsb
and
testb
fsubr
xchg
xor
jl
call
push
lods
sub
pop
fldl
pop
mov
enter
cmp
xor
loop
sbb
cmc
cmp
and
es
out
mov
xor
xor
add
imul
rcpps
add
and
insb
faddl
jecxz
adc
imul
mov
mov
adc
cmc
jne
inc
in
jae
ret
lods
jl
out
cwtl
xor
cmp
mov
push
sahf
and
xor
mov
mov
push
mov
pop
jae
fldl
sbb
mov
sahf
jg
cmpsb
sub
ficoms
lock
in
xchg
xchg
or
subl
pop
pop
rorl
repz
sbb
pop
mov
das
xchg
and
cmpsl
clc
leave
and
xor
cmp
aaa
jae
out
pop
scas
popf
add
cmpsb
shrb
rorb
adc
mov
aam
sahf
sbb
push
dec
mov
cwtl
pop
jecxz
add
mov
and
mov
jp
push
addr16
adc
out
negl
or
mov
dec
dec
push
test
faddl
scas
and
lret
clc
mov
and
jb
arpl
dec
pop
xor
adc
and
mulb
inc
ds
xor
mov
aas
cs
jp
das
push
mov
aaa
cwtl
nop
mov
inc
pop
in
ret
sub
iret
dec
xor
ficomps
push
sar
fadds
and
adc
rolb
in
fnstsw
ficoml
imul
test
cltd
test
mov
cmp
add
je
lret
sub
mov
cmp
jge
movsl
and
repz
push
js
push
jo
jne
stos
imull
mov
cmpsb
mov
mov
out
sub
sbb
jno
mov
dec
ret
outsl
sub
push
push
stos
cmp
fldt
mov
out
mov
aaa
pcmpgtb
popl
add
cmpsb
jnp
jbe
and
mov
daa
cmp
aad
sbb
andb
movsb
ljmp
jmp
jmp
add
lahf
inc
and
aad
add
call
mov
outsb
push
les
cmp
popf
out
movsl
stos
adc
dec
mov
in
jo
popa
jae
subb
aaa
adc
movsb
dec
stos
inc
lcall
fwait
pusha
push
jg
cmp
into
fbstp
in
jle
sbb
inc
push
sbb
cmp
ljmp
orb
add
jnp
pop
cmpsb
aam
xchg
cmc
mov
mov
cmc
dec
aas
repz
frstor
ds
jg
pop
sub
stc
test
pop
pop
mov
roll
ret
bound
inc
pop
pusha
sbb
pushf
inc
test
pop
mov
jno
movsb
cs
fisttpl
testb
sub
shlb
outsl
daa
scas
rcrl
scas
cmp
push
mov
lds
pop
fsubp
lods
mov
inc
jne
das
xor
out
jp
and
xor
mov
inc
xchg
add
loop
in
xor
pop
xlat
sahf
mov
mov
addr16
jo
sub
daa
cmpsb
popa
cld
cli
xor
outsl
dec
cmpl
xor
pop
pop
repnz
adc
gs
sbb
push
xlat
adc
pop
and
outsb
inc
mov
pushl
lods
pop
arpl
or
mov
pop
test
cmpsl
inc
mov
roll
repz
push
incb
sahf
out
cwtl
jae
mov
fs
xchg
mov
cmp
sbbb
aad
dec
pop
outsb
jb
pop
sbb
inc
in
aad
push
sbb
lcall
xchg
dec
pop
mov
ret
imul
shrl
ds
push
mov
stc
push
push
sub
ret
sub
inc
jge
aad
mov
pop
inc
sti
jmp
iret
insb
mov
adc
and
ja
ret
sub
jcxz
dec
dec
or
fistps
lahf
and
fwait
test
icebp
xor
stc
movsl
popa
outsb
cmpsb
sar
clc
cmpsb
sub
subb
clc
js
enter
test
ja
stos
pop
and
iret
aaa
cli
cmp
out
je
nop
cmpsl
aam
mov
imul
dec
ljmp
movsl
mov
nop
jmp
sub
fldl
jae
idivl
stos
jle
insb
fidivrs
jl
scas
int
sbbb
int
cmc
pop
inc
cmp
mov
out
cmp
mov
mov
jbe
xchg
idivb
push
jle
inc
cli
sti
test
lret
sahf
cmp
lods
negl
iret
aam
pop
flds
ljmp
pushf
mov
sarl
xchg
out
pop
pop
dec
cs
jmp
sub
in
add
xchg
dec
pop
dec
add
scas
push
sahf
jnp
jmp
lock
inc
pop
out
fiaddl
mov
ret
push
leave
cmp
jo
lahf
stos
dec
fcmovb
addr16
jbe
push
pushf
jl
adc
orb
loopne
test
test
insl
stc
jnp
popf
out
mov
fwait
sbb
pop
repz
sarb
cmp
add
cld
xchg
es
xor
dec
movsb
out
inc
lahf
push
pushf
push
shll
icebp
push
inc
push
inc
mov
push
push
mov
cs
pop
sub
int3
int
mov
mov
mov
pop
inc
nop
dec
cmpsl
or
shll
insb
inc
mov
mov
pop
or
fs
push
adc
mov
jnp
imul
add
sub
pop
mov
dec
and
xchg
push
fidivrl
mov
stc
jne
stos
xchg
inc
sbb
jp
outsl
shrl
fldt
sub
and
push
fisttps
jg
or
movsb
pop
mov
sub
hlt
orl
loopne
in
andl
clc
pop
add
popf
aaa
ja
test
mov
ror
adc
jl
dec
jg
adc
and
xor
xor
imul
cmp
cmp
icebp
das
adc
mov
xor
lea
test
call
insl
int
fnstcw
and
sbb
xchg
loope
push
xor
sub
jno
push
ljmp
jmp
jecxz
sbb
pusha
push
mov
xor
inc
sub
dec
push
aam
call
xchg
xor
bound
into
out
adc
mov
adc
push
cmp
mov
pop
icebp
inc
aam
cmc
adc
jns
jnp
inc
jns
int3
pop
jb
mov
ss
push
mov
cli
jle
or
dec
xchg
jge
sub
fmul
js
int
aam
mov
aad
jb
xor
ficomps
sbb
xor
data16
push
loope
xlat
jns
cmp
rolb
mov
aad
ret
sbb
cli
in
jno
xchg
mov
rcrb
sbb
fldenv
jne
sbb
aam
clc
in
imul
cmp
xchg
aam
lea
enter
jnp
inc
mov
sbb
in
inc
add
pop
stos
lods
adc
ljmp
xorl
jl
inc
mov
xchg
rolb
xor
fst
inc
xor
add
jnp
push
xchg
cmpsb
push
loopne
jmp
dec
jae
nop
int
xchg
ficoml
in
cmp
mov
pop
inc
jns
inc
mov
in
dec
xchg
sti
data16
daa
pop
dec
xor
dec
adc
xor
cmp
ljmp
repz
rcl
jae
inc
in
pusha
add
mov
call
jp
push
or
fistpll
in
out
stos
insl
nop
xchg
mov
loop
in
fsts
inc
int3
in
test
pop
fwait
bound
imul
ljmp
divb
ja
cmp
push
ss
lods
sbb
push
sbb
in
sahf
jns
xor
fisttpll
fnstcw
mov
mov
cmp
sub
rcrb
lds
popa
in
xchg
or
scas
lea
imul
bound
mov
test
lods
mov
insl
xchg
jnp
loop
rcrb
pushf
dec
or
push
sub
les
mov
pop
sub
or
addr16
adc
sub
rolb
outsb
imul
sub
xchg
fucomip
dec
push
or
iret
int
and
push
xor
inc
adc
inc
cld
pop
adc
arpl
int3
xchg
lds
pop
xchg
sbb
lock
mov
mov
push
mov
sub
es
cmovns
lods
pop
loope
lods
cli
push
xchg
out
dec
mov
jle
icebp
push
test
and
xchg
mov
mov
les
jne
sub
pop
mov
push
loop
into
xor
dec
aas
pop
out
cmp
sbb
jmp
adc
movsb
ljmp
pop
repz
pusha
rcrl
call
dec
cwtl
mov
push
cld
inc
stos
stos
cmpsb
mov
and
adc
push
xchg
or
jno
pop
or
mov
shrd
inc
lods
stos
ljmp
imul
mov
pushw
xor
sbb
in
push
stos
cld
add
jmp
jecxz
loope
and
gs
aad
ret
in
into
jp
mov
subb
add
or
pop
movsl
in
and
sahf
push
and
xchg
aas
cltd
add
pop
dec
adc
mov
xor
add
ljmp
sahf
pop
adc
jno
xchg
in
push
push
sub
cmc
imul
mov
test
jp
lss
push
int3
hlt
lcall
ss
outsl
mov
lcall
icebp
mov
scas
mov
dec
lods
jo
jns
lds
cltd
pop
loop
out
xchg
sarw
jmp
arpl
out
testb
test
les
std
xor
jns
scas
xlat
adc
imul
movb
sub
cwtl
js
mov
movsb
inc
xchg
out
movsb
add
jl
test
rcrb
addr16
xlat
push
cld
fisubrl
addr16
xchg
lcall
mov
jmp
xchg
pop
mov
fcoml
pop
ret
loope
clc
sbbb
scas
push
cpuid
cmp
mov
mov
mov
repnz
cmp
mov
dec
mov
outsl
pop
xchg
gs
adc
inc
bound
xor
lea
int3
jle
sub
rolb
idivl
inc
push
outsl
mov
dec
mov
push
cmpsl
xor
insl
and
pop
fcoms
fldt
pop
ja
dec
addl
push
xlat
outsl
frstor
call
push
bound
popf
push
sbb
outsl
fs
sub
xlat
xor
hlt
rcr
mov
sbb
mov
daa
int
sbb
push
xchg
jae
sub
jle
sbb
push
gs
mov
jne
ljmp
xor
je
mov
fistps
and
push
je
adc
sub
jnp
sahf
cmp
call
dec
jg
cmp
jmp
adc
test
mov
fwait
xchg
call
sbb
fldl
jae
add
imul
pusha
xor
mov
cmpsl
ja
jecxz
pusha
test
in
add
lods
push
aam
inc
fdivl
xchg
loop
repz
pop
pop
shlb
xchg
mov
mov
cwtl
bound
imul
mov
popa
mov
add
xchg
sub
dec
cmp
push
out
adc
and
mov
mov
clc
pop
lods
dec
or
in
mov
loop
adc
sbb
mov
mov
adc
jo
push
out
jo
in
and
addr16
push
iret
scas
notb
push
push
xor
movb
mov
dec
out
cmp
sahf
fs
emms
pop
lcall
xchg
push
jl
lock
loopne
jmp
dec
rcl
xlat
sub
xchg
div
pushl
cmp
or
xchg
ret
cmp
test
mov
sub
les
push
or
dec
add
shrl
lds
roll
sub
imul
orl
sbb
test
sub
sbb
pop
mov
sbb
imul
sbb
xorl
mov
jle
hlt
inc
mov
jl
aad
mov
ds
data16
lret
inc
push
xor
adc
mov
sbbb
sub
mov
mov
icebp
sbb
sbb
mov
adc
ret
loop
stos
int
mov
inc
add
scas
nop
and
in
lods
aad
sbb
cmp
imul
pop
xchg
push
pop
jo
push
les
sbb
icebp
xchg
insl
stos
or
pop
cmpsb
sbb
jno
ret
sub
in
das
dec
cltd
mov
adc
xor
lret
sbb
lods
leave
sbb
rcl
push
into
adc
sub
or
insl
xchg
rclb
or
xchg
inc
mov
fs
adc
fisubs
jnp
loope
jp
add
arpl
inc
jo
mov
outsl
aad
in
and
repz
cli
adc
push
adc
or
push
leave
insb
jmp
pop
out
jg
dec
in
pushl
test
inc
dec
mov
shlb
in
out
sub
pcmpgtb
inc
aad
arpl
pmulhw
cld
xor
mov
decb
cmp
loop
loope
mov
mov
lods
pop
insb
lcall
test
call
outsb
and
lods
xchg
ficoms
stc
and
fadd
or
push
dec
insl
enter
push
in
fidivrl
fsubl
jmp
add
mulb
lahf
jecxz
aad
mov
pop
lods
js
imul
push
lcall
aas
inc
xchg
xchg
sti
jp
cltd
out
aam
push
xchg
jne
jo
jg
dec
test
and
or
mov
cmp
test
frstor
and
pushf
sar
in
cld
loope
push
mov
mov
inc
lds
test
clc
enter
pushf
sub
push
xchg
push
push
mov
adc
and
push
mov
outsb
jae
pop
jbe
and
push
lock
in
sub
cmc
negl
iret
arpl
push
cli
pop
rorl
inc
cld
data16
adc
push
lock
out
cmpsb
jl
out
dec
adc
xor
and
mov
inc
scas
jnp
mov
je
test
pop
cmpsl
mov
hlt
mov
out
ja
and
adc
jge
mov
add
mov
inc
dec
loop
cld
dec
add
xchg
aaa
mov
shlb
pop
pusha
mov
xchg
repz
popf
xchg
push
adc
mov
dec
adc
cmpsb
mov
sub
mov
ffree
mov
aaa
mov
outsb
jmp
mov
sbb
dec
fmuls
cltd
icebp
repnz
fimull
movsb
sbb
jge
or
mov
sub
fwait
pop
dec
cmp
ljmp
cmpsb
xchg
push
aas
mov
ja
fisttpll
mov
xor
mov
cmp
dec
jle
jbe
movsl
out
or
mov
mov
jo
bound
mov
cmpsl
cmp
sbb
rolb
or
ret
sub
mov
xorb
mov
aad
movsl
insl
inc
cmp
scas
cli
cmp
cmpsb
pop
sub
mov
mov
add
je
sub
pop
xchg
mov
loopne
xor
scas
mov
jae
imul
sahf
sbb
push
and
lea
sub
orb
lahf
and
sub
mov
fistpll
fcompl
cmp
mov
jo
gs
inc
in
xor
jnp
jns
out
aad
cs
cmpsb
pop
push
addl
xchg
push
pop
mov
jmp
inc
inc
js
addl
jge
pop
xchg
sub
xchg
std
mov
loope
gs
cmp
cmc
adc
inc
jbe
mov
xchg
scas
add
xor
mov
xchg
xchg
mov
mov
call
fisttps
xchg
sbbl
sbb
fidivs
shlb
jg
pop
cwtl
loop
and
mov
je
cmc
inc
repz
jmp
and
or
movsl
mov
push
adc
aad
pop
xor
lahf
test
mov
mov
rcr
cmpsl
push
push
cmp
dec
jne
sbb
cltd
lds
mov
rcr
or
inc
fwait
push
iret
push
pop
and
jg
dec
inc
in
rorb
adcb
add
arpl
test
jmp
mov
outsb
leave
jo
lahf
aad
inc
mov
sbb
daa
xor
or
sbb
lret
adc
xor
jnp
mov
mov
sub
inc
sub
ds
pop
cwtl
xor
clc
shufps
icebp
jmp
lods
sbbl
cld
imulb
dec
mov
mov
mov
jge
and
cmp
xchg
cltd
inc
cmc
mov
daa
leave
xor
aaa
sbb
shr
je
and
cmp
insl
sbb
jb
adc
ds
and
mov
and
pop
rcrb
push
lds
cmpsl
push
sti
ja
call
jno
cmp
mov
icebp
arpl
push
cmp
js
or
xchg
pop
add
push
mov
sbb
pop
jg
inc
mov
adc
jl
lcall
lret
rorl
lret
cwtl
dec
in
call
push
dec
sub
test
inc
mov
mov
inc
fs
icebp
pop
or
push
out
inc
pop
jge
dec
pop
pop
push
xchg
dec
fs
sub
mov
or
adc
jb
leave
out
sbb
push
lods
lret
loop
pop
stos
lock
movsl
fstps
rclb
div
mov
fmul
inc
mov
fiaddl
inc
por
fninit
addb
xchg
out
pop
jne
scas
dec
shll
sbb
rorl
sti
cmp
sub
popf
jnp
loopne
je
or
sbbb
mov
mov
push
loop
enter
pop
lods
fidivrs
icebp
lret
mov
adc
std
jno
mov
mov
mov
leave
mov
rolb
mov
jp
test
dec
mov
mov
es
or
mov
xchg
jmp
in
xchg
sbb
jg
mov
cmp
rcrb
xchg
flds
movsl
push
cmp
js
testl
cmc
dec
inc
push
movsl
cmpsb
mov
cli
cld
dec
into
inc
xor
es
nop
mov
psraw
clc
mov
frstor
jb
jb
insl
bound
dec
mov
push
out
incb
mov
sub
dec
push
cmpl
movl
fldenv
add
outsb
add
and
pop
push
mov
xor
sub
dec
test
pop
xchg
ret
in
sti
push
pop
push
dec
int3
cmp
jno
sub
inc
mov
lahf
or
sub
add
sahf
adc
aam
cmpsb
into
mov
mov
xor
insb
add
push
inc
mov
mov
mov
jmp
js
aad
dec
adc
xchg
pop
mov
sbb
sub
dec
lret
pop
xchg
sbb
aam
ds
int3
arpl
jnp
adc
xchg
and
jmp
inc
scas
dec
sbb
addr16
call
lcall
ror
xor
xor
dec
jne
push
cmp
push
loope
cmp
add
mov
mov
xchg
scas
fimuls
fwait
or
repz
sbb
jnp
sbbb
ja
rcl
stos
sbb
xor
mov
sub
lahf
adc
mov
and
or
jae
out
xchg
ficoml
mov
out
ret
rolb
jbe
stos
mov
mov
xor
push
scas
notb
and
or
or
loope
sbb
hlt
int
fadd
mov
lret
cli
aaa
pop
ja
xchg
in
push
sbb
jno
inc
adcb
xor
xchg
lahf
in
adc
jl
sub
mov
insb
iret
inc
popa
mov
into
pop
pop
outsb
sbb
cmp
mov
ja
notb
ret
mov
pop
xchg
add
xor
or
sub
and
stos
jnp
jbe
loop
xor
and
sub
fnstcw
push
inc
scas
psubd
insb
push
adc
loopne
mov
das
out
outsl
push
add
mov
xchg
bound
pop
imul
mov
fidivrl
in
js
js
sbb
adcb
fwait
push
imul
sbb
movsl
or
fdivs
mov
stos
lret
inc
out
or
aas
in
jmp
mov
outsl
cmp
inc
lods
mov
jp
and
sbb
add
and
pusha
das
das
int3
pop
add
push
scas
in
subl
cmp
movsl
inc
mov
sub
notrack
lods
pop
adc
inc
outsl
sub
jo
xchg
add
negl
xor
jge
sbb
mov
add
and
and
fldt
insl
movsl
xchg
ja
out
dec
dec
pop
cmpsl
adc
push
loope
dec
cmp
in
push
push
dec
pushf
cld
aad
lods
daa
or
fisubrs
push
inc
dec
mov
stc
ret
mull
mov
fadd
lcall
and
scas
in
imul
cmp
sub
sbb
lds
push
and
cmp
fcomi
sub
jne
cmc
in
lret
xchg
xor
mov
mov
mov
pop
test
pop
lods
dec
lret
jnp
cmp
sbbl
mov
adc
sub
add
mov
push
es
in
gs
and
lock
shr
sti
push
or
mov
add
arpl
leave
sub
mov
dec
je
mov
push
jl
adc
sarl
mov
jno
xchg
popl
sub
push
xlat
stc
and
rcr
xor
repnz
lods
and
jb
add
push
adc
das
pop
cwtl
inc
int3
xchg
lahf
nop
in
mov
inc
insl
or
add
stc
lods
mov
lock
sbb
xor
and
mov
das
fwait
lcall
cmp
mov
fucom
les
jl
push
cmpsl
cmp
iret
sub
mov
test
adcb
xor
push
test
push
lret
or
loopne
adcb
adc
pop
pop
dec
mov
sbb
in
jg
cwtl
jae
aad
addr16
pop
rcll
push
mov
or
pop
mov
lds
test
pop
cmc
in
pushf
push
aad
xor
mov
add
sbbl
outsb
fwait
mov
aas
mov
cld
dec
call
inc
outsb
outsl
push
sahf
or
mov
mov
pusha
or
jo
mov
lret
je
stc
lock
test
pop
ret
dec
lds
lods
fdiv
dec
lds
add
out
lea
push
rcll
rcr
xlat
push
push
dec
pop
jl
sbb
fwait
subb
ret
scas
dec
lcall
push
sbb
inc
sbb
cmpsl
inc
and
outsl
sbb
jle
in
mov
loope
mov
mov
mov
dec
std
push
dec
shll
sbb
movsl
jo
testl
mov
pop
jno
daa
insl
inc
sub
test
sbb
push
xchg
push
pop
xchg
aam
pop
mov
mov
es
jp
ret
add
jo
xor
mov
dec
aad
mov
popf
sahf
mov
sub
mov
inc
sub
xchg
sti
lock
inc
or
sahf
sbb
cmp
popf
test
test
in
xchg
dec
mov
push
xor
sub
sarb
xor
iret
daa
dec
xlat
stos
jp
inc
or
lock
mov
mov
push
or
pop
fisttpll
test
and
imull
and
scas
adc
test
gs
cmpsb
lcall
dec
and
imul
pop
repz
push
dec
cld
push
pop
and
aaa
lret
inc
sbb
push
and
push
rolb
dec
jne
pop
std
or
out
ret
mov
adc
mov
daa
lods
gs
fisttps
jl
ret
mov
daa
xchg
cmpl
sub
cmp
or
and
or
push
nop
mov
mov
add
test
rolb
lods
cmpsb
cmp
mov
pop
push
mov
popa
int
dec
inc
daa
and
sub
inc
xchg
lcall
push
decb
xchg
fsubs
andl
fucom
add
or
mov
jne
lods
ss
call
pop
push
dec
inc
dec
daa
rcrl
xchg
cmp
jmp
mov
rorl
push
cmp
xlat
enter
rorl
sub
fisubrl
cltd
sbb
mov
bound
push
and
and
mov
xchg
cltd
add
add
xlat
cmpsl
fldpi
sub
jg
call
sub
mov
imul
mov
mov
mov
std
into
jge
mov
out
divb
test
divl
and
jne
dec
inc
imul
and
sbb
adc
std
fstpt
scas
xlat
lret
lods
inc
stos
push
int3
sub
mov
push
mov
or
fnstenv
add
repnz
jb
pop
enter
out
pop
mov
lret
iret
mov
xchg
inc
or
jge
jb
push
rcr
sbb
xchg
mov
daa
pop
cmpsb
sbb
sahf
mov
xor
cmp
xchg
mov
popf
jmp
pusha
movsl
aam
test
pop
or
jae
add
stos
xorl
xor
push
mov
sar
test
push
mov
shrb
mov
data16
adc
and
cli
fdivs
das
data16
mov
dec
push
sti
popa
dec
popa
fsubrs
les
movsb
imulb
and
and
xor
push
mov
mov
fldcw
push
daa
ja
adc
cld
pop
and
adc
aad
mov
inc
ffree
outsb
cli
sahf
jno
scas
xchg
das
call
stos
insb
fwait
test
movsb
and
jo
or
mov
jns
mov
jns
jecxz
repnz
repz
xchg
mov
cmp
jecxz
fsts
mov
out
scas
insb
lods
sti
ds
in
xor
mov
mov
mov
cs
pop
imul
shll
push
sub
add
mov
fld
leave
jg
cmp
cmpl
aas
ficoml
cmpsb
mov
lds
xchg
sbb
jg
pop
std
or
push
sahf
cmp
xchg
add
push
test
sbb
out
cmp
cmpl
jnp
ja
sub
add
add
pushf
sbb
add
xchg
dec
mov
jae
aas
out
xchg
adc
frstor
jl
push
jne
cmpsb
xor
fdivr
mov
sbb
shl
inc
adc
sbb
inc
xchg
iret
xor
pop
jo
add
adc
cld
cmp
xor
outsb
and
sbb
mov
lahf
mov
enter
cmp
notb
in
mov
dec
or
pop
rorb
inc
sub
mov
cld
pop
xchg
sahf
fistps
or
add
push
push
mov
push
out
adc
inc
mov
adc
in
jp
jnp
cwtl
into
dec
stc
test
mov
mov
or
test
add
rol
stc
pop
pop
push
shll
scas
fmull
xchg
inc
fimuls
out
pop
fiaddl
mov
out
xchg
fimuls
mov
fidivs
xor
leave
int3
sbb
mov
loopne
iret
or
bswap
gs
mov
push
xor
inc
cmp
and
shrb
jg
rcr
xchg
xchg
dec
mov
fistl
aad
sahf
pop
sbb
add
add
out
out
add
sbb
fbstp
test
cmpsl
iret
add
ja
mov
inc
lods
mov
jb
push
mov
pop
jge
xchg
jb
jne
outsl
add
fucomi
aam
push
jne
sbb
mov
repnz
mov
outsb
mov
jge
rolb
test
xor
in
sub
shll
cmp
mov
push
fdivr
into
imul
cmovnp
rcll
mov
test
cmp
cmp
add
out
adcb
pop
sbb
repz
and
adc
cmp
cmp
xor
jmp
or
pop
das
divl
enter
popf
test
jae
jno
sub
test
mov
lds
dec
or
lods
xchg
arpl
mov
inc
aas
and
jbe
popa
sub
mov
stos
inc
pop
ss
inc
dec
dec
push
jne
cmp
out
mov
fsubl
data16
or
repnz
inc
mov
xchg
imul
xchg
pushf
mov
mov
pushf
lods
out
sub
js
iret
fucom
pop
dec
inc
xor
aad
mov
mov
fdivl
sub
sbb
adc
dec
jg
mov
adc
fwait
mov
dec
and
leave
leave
dec
ds
jno
mov
test
icebp
cltd
imul
rol
adc
dec
fsts
cmpsl
out
push
fs
inc
rorl
push
fmuls
or
cli
in
cwtl
stos
test
pop
xchg
movsb
jnp
lds
sub
adcl
imul
scas
out
xchg
incl
mov
inc
std
arpl
cli
inc
lds
jmp
cmpsb
pop
sbb
add
outsl
push
add
dec
cwtl
sub
xor
mov
leave
jne
or
push
leave
inc
aad
sahf
lods
scas
lods
pop
popa
cmp
dec
mov
mov
ficompl
nop
scas
outsl
and
sbb
enter
mov
jbe
jns
pusha
scas
add
sub
adc
ret
sub
fisttps
mov
jecxz
loope
fidivl
mov
push
xchg
xlat
dec
loop
mov
sub
mov
add
and
sub
add
clc
cmc
cmp
and
fidivrs
or
outsb
aas
loop
insl
das
push
imul
pop
out
fistpll
and
imul
push
jne
addr16
fsubrl
icebp
popa
test
sub
inc
sbb
leave
mov
cmpsb
xchg
fildl
loop
xor
es
jo
ret
push
rclb
into
mul
push
movsl
mov
jp
fildll
lds
outsl
mov
jmp
movsb
lahf
cld
jecxz
ds
fwait
jbe
lock
mov
jle
sbb
popl
mov
mov
js
adc
rcr
std
mov
dec
pop
stos
stc
inc
sbb
adc
xchg
aas
sub
loope
mov
sarl
inc
jle
std
icebp
xlat
sbb
jg
mov
push
daa
cmp
pop
imul
lds
add
cld
cmp
or
test
lods
xchg
pop
sub
rcll
hlt
add
pop
ds
mov
cld
mov
cmpsl
bound
sbb
fisubs
fdiv
xor
push
es
inc
lods
int3
mov
roll
out
jb
rorl
daa
xchg
into
mov
inc
jge
outsb
or
int3
sbb
add
xchg
or
mov
sub
mov
in
push
fsubs
jne
arpl
shlb
xor
stos
sbb
mov
push
rcrb
popf
cld
sub
pushf
add
lods
testb
sahf
lcall
movsb
lods
push
mulb
dec
idivb
mov
popa
lock
cmp
lea
mov
mov
inc
xorl
dec
inc
loopne
fsub
xchg
dec
imul
dec
addr16
sub
sti
push
pop
sub
movsl
mov
adc
xchg
push
insb
dec
pop
jnp
bound
adc
lcall
mov
add
adc
fs
inc
mov
sbb
pop
dec
cmpl
adc
lret
fistps
add
cwtl
sti
outsb
sub
inc
cmc
push
jno
sub
sti
add
sub
dec
fucomip
adc
pop
test
pop
mov
lret
js
stc
js
push
inc
pop
push
mov
bound
or
lcall
outsb
add
adc
adc
mov
push
dec
inc
lahf
aas
cld
popa
pushl
fldl
test
mov
sbbb
sti
lea
fistpl
jb
lahf
push
ret
bound
outsl
andl
imul
mov
gs
pushf
mov
pop
lahf
dec
xorl
inc
into
jecxz
je
loop
sub
cmpsl
jne
fcompl
test
lods
test
lret
adc
lahf
mov
sbb
mov
or
stc
jbe
lock
cli
inc
cmp
bound
push
add
push
pop
lods
mov
or
andl
inc
mov
adc
fwait
push
ficompl
sbb
inc
sbb
loopne
xchg
addl
in
arpl
loopne
xor
cmp
fs
pop
mov
ss
ja
movsb
fisubl
cmpsl
popf
imul
pushf
imulb
xor
lcall
lods
pop
push
jae
dec
or
lret
std
in
mov
dec
cmp
and
pop
pop
cltd
mov
ret
cltd
sbb
notb
cmp
ss
int
jg
stos
mov
adc
out
mov
iret
dec
lret
push
jp
rorb
cmpsl
std
sub
clc
mov
xchg
sahf
and
aad
gs
sub
push
pop
dec
pop
je
out
mov
scas
fcoms
ja
mov
jg
mov
dec
cwtl
int3
and
xor
or
pusha
rclb
stc
scas
inc
mov
push
xchg
ret
lock
iret
pop
insl
and
dec
js
daa
ja
in
inc
lahf
xor
mov
lock
jnp
in
xor
mov
push
out
int3
push
sub
sub
sarb
jno
test
sub
push
out
int3
pop
popa
and
dec
pop
pop
dec
fsubr
jmp
cmp
xchg
sarl
or
js
sbbb
adc
mov
xor
sub
sarl
es
je
add
fmul
in
jnp
test
dec
clc
add
pusha
mov
jmp
and
xchg
stos
jmpw
setae
aas
fists
je
push
ss
adc
es
cwtl
mov
jmp
aaa
test
sub
popa
stos
movsb
sbb
js
lods
mov
popa
dec
addr16
ficompl
push
aam
xor
ljmp
inc
mov
xor
pop
inc
std
dec
lods
xchg
jae
adc
adc
inc
out
add
mov
ret
out
push
movq
iret
lock
push
dec
subb
enter
mov
ficoml
jnp
bound
cli
notl
nop
in
lds
inc
das
mov
rcrl
mov
out
mov
outsl
sbb
lahf
pop
popa
inc
repz
divb
push
insb
jle
scas
jle
fistps
sub
iret
xchg
pop
adc
xorb
and
jo
lret
cmp
cli
mov
jo
es
xor
mov
xchg
sbb
test
scas
sbb
nop
jp
mov
out
jns
xlat
in
fucom
jle
mov
pop
lahf
push
outsb
sub
jbe
cmp
mov
in
roll
pop
sahf
dec
roll
rcrl
shll
adc
xor
push
xchg
push
cmc
mov
scas
dec
xor
ja
add
clc
adc
pop
shld
jnp
xchg
mov
ds
aas
mov
loop
cwtl
call
push
adc
xchg
insl
leave
xor
rcr
mov
xchg
insl
inc
fisttps
pop
xchg
hlt
stos
and
jnp
decl
add
pop
jo
int
sti
xchg
mov
add
sub
mov
jp
aas
sub
incb
push
mov
jle
shrb
push
and
popf
cwtl
dec
lret
test
repnz
fsubrp
dec
dec
or
fldenv
mov
int3
scas
or
and
pop
xchg
mov
inc
mov
dec
imul
lds
scas
pop
dec
lods
loopne
mov
sub
int3
mov
pushf
aad
out
cmpsl
insb
leave
jo
int3
add
xor
imul
cmp
test
je
xor
call
lods
add
clc
add
ljmp
fnstenv
lret
dec
ror
icebp
ljmp
imul
or
dec
mov
xchg
or
mov
add
xchg
ret
adcl
inc
testl
iret
pushf
loopne
or
test
add
add
inc
xchg
or
cmp
pop
shr
xchg
mov
lcall
rcll
lret
sbb
dec
push
push
jecxz
dec
push
popf
adc
call
repnz
movsb
rcr
jp
call
cmc
jae
ja
negl
loopne
iret
push
negb
imul
push
bound
test
ljmp
jo
das
sbb
adc
add
je
int
add
xor
mov
inc
push
push
mov
rep
push
aam
inc
and
sbb
repz
fldenv
jecxz
or
cmc
mov
xlat
add
cmp
icebp
sub
fcomi
adc
dec
in
adc
and
insb
in
xchg
sbb
jo
and
scas
iret
pusha
pop
stos
and
test
adc
adc
mov
add
out
mov
bound
loopne
inc
imull
sub
stos
movsl
cmp
fists
jecxz
add
imul
or
lds
test
mov
xchg
scas
call
into
jno
lods
out
adc
inc
idivb
pop
sbb
or
lock
je
jb
dec
js
push
in
push
xchg
xchg
and
sahf
fs
inc
aas
xor
iret
push
pop
sbb
call
shrl
xorb
dec
pop
mov
push
mov
mov
inc
mov
add
adc
in
sbb
in
xchg
jb
jge
and
imul
pop
fadd
pop
xor
loop
dec
lock
push
popf
call
movd
push
in
mov
fnstenv
ss
test
pop
test
xchg
or
add
jae
pusha
ss
sbb
aam
push
fsubl
xchg
xlat
in
stos
xchg
pop
add
lods
in
call
rcr
pop
pop
mov
xchg
test
movsb
in
xchg
or
ficompl
xchg
test
jmp
leave
or
mov
mov
lock
mov
mov
rcrl
fdiv
cli
insl
push
imul
cmc
clc
aad
xchg
add
xchg
into
or
in
shl
inc
adc
mov
adc
xlat
jmp
jae
add
das
shlb
pusha
add
fnstcw
cs
fisttpl
shlb
sbb
push
in
sbb
jno
jmp
adc
imulb
cwtl
cld
sub
int
jp
into
mov
scas
mov
out
out
pop
sahf
xor
rorl
test
call
add
push
outsl
scas
push
xchg
mov
lcall
scas
mov
imull
out
mov
arpl
xchg
pop
xlat
adcl
andl
mulps
pop
mov
add
mov
sti
insl
addl
cmp
inc
sub
mov
movsb
inc
pop
ljmp
mov
xchg
shlb
addr16
xor
pushl
addr16
out
imul
out
movsl
cmpsb
pop
fdiv
pushf
pop
aad
inc
out
inc
push
mov
jne
scas
sbb
jp
cmp
and
pop
sbb
sbb
push
xor
loope
addr16
add
sbb
gs
mov
inc
push
push
dec
mov
push
cs
pop
xchg
imul
ret
jg
xlat
fadds
jg
shr
and
test
movsl
dec
xor
bound
add
aad
xchg
adc
psubsw
in
popa
mov
in
out
pop
push
test
mov
sbb
jo
sti
gs
adc
push
les
jne
pop
inc
rol
mov
pop
idivb
enter
jecxz
inc
cltd
pop
mov
test
into
pop
loop
sahf
add
sbb
jl
cmpsl
push
loop,pt
cmp
lahf
or
or
pop
jle
inc
sarb
jns
test
std
sub
sub
cmpsl
aad
xor
push
stos
jge
fwait
jno
mov
or
test
jbe
adc
mov
dec
adc
movsl
mov
nop
cmpl
pop
psrad
pop
jg
icebp
push
mov
inc
jl
fwait
mov
xor
daa
push
stc
test
shrb
mov
movsl
adc
xchg
jp,pn
mov
add
cld
mov
lret
loopne
mov
rorl
stos
insb
in
jmp
add
movsb
mov
ret
add
cmc
xor
rcrb
ret
jns
sub
sti
xchg
or
dec
xor
sbb
repz
add
adc
adc
jmp
cmp
out
lock
adc
in
test
push
mov
cmp
sti
in
stos
mov
dec
add
adcl
loop
push
push
lret
test
cmp
sub
aas
imul
pop
pop
add
mov
and
loop
pop
in
mov
je
push
xchg
mov
pop
iret
sbb
test
sub
pop
add
adc
hlt
xchg
pusha
push
pusha
xor
push
aaa
mov
insl
mov
jno
dec
mov
mov
add
loopne
lret
divb
xchg
mov
aam
cltd
xchg
cmp
dec
test
jne
clc
jg
insb
mov
insb
sub
decl
aad
aaa
cld
sti
loop
out
in
repnz
mov
cmp
mov
sub
std
fdivr
aam
lds
and
out
dec
adc
js
enter
inc
xchg
mov
stos
adcl
mov
lods
lds
mov
mov
dec
lods
push
sbb
inc
lret
xor
mov
xor
sbb
stos
pop
insl
inc
dec
inc
mov
aaa
ja
mov
arpl
and
out
push
int3
mov
sbb
pop
lock
mov
fidivrl
in
mov
cmp
arpl
jb
mov
pushf
fimuls
sarl
sub
cmp
xchg
mov
and
cmp
int3
ss
ret
add
fnstcw
lock
movsb
imul
mov
roll
jl
jbe
add
xchg
adc
pop
pushf
fstps
out
mov
cmp
aaa
jns
push
jl
icebp
cmc
jecxz
js
mov
mov
mov
and
imul
adc
je
addb
sbb
cmpsb
inc
jno
add
rorb
pusha
subl
ss
pop
dec
out
push
and
dec
dec
mov
mov
mov
out
movsb
lret
lock
xlat
cli
push
mov
fmul
outsb
xor
fdivrs
bound
shll
mov
insb
xchg
push
dec
cmp
loope
nop
sbb
cmc
call
sub
ja
iret
mov
mov
lcall
lret
dec
lret
rcrl
mov
pop
or
dec
and
or
pop
or
sti
sub
aad
add
clc
fwait
sbb
movsb
fiadds
pop
inc
mov
aam
jge
jbe
std
add
cltd
xor
mov
sti
xchg
das
mov
leavew
jmp
mov
les
mov
scas
inc
jo
xor
cwtl
cmp
push
and
mov
cmp
mov
filds
sbb
push
mov
cmp
and
loop
jns
jb
push
push
int
pop
daa
adc
add
mov
push
cmp
jmp
mov
outsl
incb
xchg
mov
out
push
xor
mov
xchg
jle
inc
outsb
inc
into
xchg
dec
xchg
xchg
fisubrl
ja
arpl
mov
xor
pop
rcll
pop
mov
sub
aam
aad
pop
ret
xchg
lods
idivl
mov
or
pop
movsl
pusha
push
sub
je
mov
lret
jge
test
xchg
xlat
mov
fisubrs
inc
rorl
sbb
push
dec
pop
ljmp
pop
mov
xchg
in
je
jae
repz
mov
loopne
xor
xor
push
jne
sub
lret
scas
movsb
fisubrl
adc
sbb
cmpb
pop
sbbb
push
sub
jmp
jno
sub
mov
dec
adc
cli
add
ja
shll
imul
xchg
sbb
je
pop
pop
and
data16
lods
adc
aam
jo
xchg
push
mov
push
clc
dec
dec
fisttps
mov
subl
nop
lahf
sbb
sbb
mov
lods
push
or
dec
ja
mov
push
insb
cmpsl
pop
xor
sar
rcll
pop
pop
jbe
jno
mov
mov
test
scas
arpl
enter
and
jecxz
adc
ss
xchg
xor
enter
and
xchg
insb
pop
mov
and
or
icebp
push
sub
sbb
dec
or
lea
test
stc
test
adc
mov
repnz
out
push
sbb
adc
cwtl
mov
cs
pop
in
test
aam
jp
daa
js
add
mov
pop
jmp
in
out
in
mov
in
jb
push
aad
out
push
add
bound
into
cld
push
js
cmp
mov
mov
inc
lods
xchg
jge
inc
lret
and
addr16
jae
shll
fcompl
aas
insl
jbe
cmpl
leave
push
stos
ja
js
idivb
jl
mov
popa
mov
push
shlb
fwait
cld
mov
xlat
out
dec
cmp
push
xor
mov
inc
stos
imul
mov
insl
cmp
adc
add
and
jmp
xchg
xor
push
mov
xchg
gs
iret
mov
mov
sub
mov
ds
ljmp
xchg
and
mov
mov
inc
imul
pusha
add
test
std
mov
push
push
sbb
xchg
dec
jne
scas
icebp
jl
call
pop
mov
adc
mov
jmp
jg
aaa
push
les
sbb
or
or
push
jecxz
cmc
dec
ds
push
shld
pop
loopne
mov
mov
push
inc
or
test
pop
push
les
call
or
dec
mov
jp
mov
inc
inc
mov
pushf
cmpsl
loop
stos
sbb
adc
or
xchg
test
mov
lahf
das
jo
xor
dec
bound
dec
icebp
mov
inc
mov
or
xor
or
adc
and
xor
adc
adc
out
lret
test
or
aam
or
sbb
mov
shlb
add
xor
movsl
cmpsb
cmp
repz
sbb
push
mov
push
scas
pop
or
into
inc
lock
inc
test
dec
cmp
decb
daa
fistpl
ljmp
mov
imul
sub
mov
repnz
push
jl
xor
and
cltd
sub
mov
lea
cmp
es
cvttps2pi
dec
lds
mov
std
fisubrl
addr16
insl
cmp
jge
add
mov
sbb
dec
test
sbb
adc
addr16
aas
clc
adc
imull
mov
mov
push
inc
jecxz
fists
push
shlb
jle
dec
push
popf
sub
pop
cmp
jge
enter
fwait
scas
leave
aad
cmp
jns
sbb
adc
inc
mov
mov
je
inc
and
mov
lods
shrb
popf
scas
pop
into
cmpsb
sbb
cmpsb
xor
in
sbb
xor
mov
cli
jmp
mov
inc
sti
push
sbb
imul
push
add
jbe
push
xchg
xchg
push
insl
repnz
adc
mov
pop
andl
xchg
enter
jg
lds
mov
pop
call
sbb
shlb
jmp
ss
lcall
fsubl
mov
int
xchg
cmp
inc
cmp
mov
sbb
popa
repnz
test
inc
push
push
jl
in
adc
inc
sub
and
xchg
push
fldenv
cs
cwtl
popa
or
jl
roll
jnp
pop
xchg
cs
inc
aaa
sub
hlt
lahf
fs
shl
subl
jb
xchg
aad
imul
maxps
scas
jle
mov
dec
orl
mov
popa
imul
psllq
clc
mov
test
roll
cmp
add
adc
aas
mov
sti
mov
test
cld
ds
cmp
arpl
add
mov
push
outsb
imul
push
daa
dec
out
cmpl
inc
in
sti
call
fildl
jle
cli
jno
out
sti
mov
dec
add
jns
outsl
cwtl
mov
add
loop
outsl
mov
arpl
and
mov
sub
dec
fdivs
negb
cmp
cmp
mov
out
nop
mov
repz
mov
or
lock
cmp
cli
lcall
adc
mov
jnp
ret
and
pop
add
fstpt
ja
pushf
icebp
jnp
lods
sbb
xor
loopne
cmp
sub
or
movsb
lds
mov
add
xor
out
sub
pop
sysexit
cmp
ss
fstpl
insl
jg
cmp
dec
out
arpl
push
adc
imul
mov
iret
or
daa
call
lds
push
adc
mov
inc
adc
int3
out
adc
stos
or
dec
jae
xchg
mov
jp
enter
mov
xchg
inc
mov
fidivrs
into
fnstcw
ss
mov
sbb
or
addb
cmp
inc
cmpb
jo
sub
add
call
lea
mov
sbb
xor
xchg
pop
and
or
or
dec
clc
loopne
bound
mov
dec
mov
cmp
sbb
jno
add
ja
mov
mov
aam
out
fs
push
popf
or
jne
jg
lock
insl
sbb
mov
mov
cli
inc
push
add
cmpb
dec
jne
pusha
cmpsl
movsl
cld
gs
cmp
adc
jp
insb
or
fisttps
push
jnp
ss
push
sub
in
sub
outsb
dec
and
inc
stos
loope
in
mov
inc
dec
adc
mov
push
push
push
sbb
push
cmp
out
fsubp
jae
filds
popa
dec
mov
aas
sbb
pushf
add
testb
or
aaa
xchg
sub
movsl
xchg
sub
fidivl
ja
push
idivl
dec
ss
out
inc
int3
stos
popf
sbb
mov
clc
pop
add
sub
push
inc
add
in
in
jle
xor
mov
xor
bound
repz
mov
in
push
aas
clc
repnz
mov
loop
xor
jge
lods
xor
test
xchg
scas
sti
push
pop
pop
xor
out
sarl
jae
bound
leave
xchg
mov
push
testb
adc
insb
cs
xor
mov
cmpl
add
jp
aam
cmpsl
push
enter
adc
xlat
cmp
andl
mov
mov
notb
ss
push
imul
xchg
ljmp
in
repnz
mov
daa
sub
sub
inc
out
mov
popl
xchg
cwtl
divb
xor
inc
push
lods
orl
xchg
adc
sbb
pop
ja
dec
outsb
mov
movsb
ret
sbb
jns
ds
fidivl
adc
int
and
jbe
xchg
fidivrl
test
mov
bound
push
pop
mov
pop
pop
jno
inc
sbb
push
lret
mov
outsl
cmc
icebp
or
clc
pop
test
outsb
add
fsub
mov
bound
mov
test
adc
lea
movsb
scas
sub
push
push
and
sub
xchg
sbb
cli
jmp
pop
stos
push
outsb
lods
xchg
int3
scas
icebp
mov
arpl
call
aas
rcr
gs
out
dec
sub
fcmovb
lret
add
mov
repz
mov
jo
into
in
ja
sbb
xor
mov
clc
pop
jae
dec
fwait
fs
cmp
mov
jo
inc
push
pop
jge
push
fwait
sti
inc
cmp
jle
sti
mov
push
xchg
sub
out
adc
add
scas
jns
int3
ja
add
xchg
lods
fstpt
push
enter
xchg
mov
icebp
fiaddl
and
cmp
xchg
cli
push
inc
lock
sub
insl
lret
and
mov
fs
fsts
mov
lretw
push
xor
sbb
inc
rcrl
je
mov
and
dec
mov
jp
cmp
pop
outsb
push
lock
in
scas
out
mov
loop
scas
xor
ja
stos
clc
divb
testb
cmp
mov
cltd
xor
sub
sti
xor
scas
push
sub
dec
dec
ror
pusha
pop
dec
loopne
sar
dec
mov
inc
jl
push
xchg
and
jne
pop
jp,pn
jmp
jb
xchg
cmp
aad
push
das
xchg
dec
mov
js
sub
dec
jge
or
test
cmpsl
dec
fidivl
lcall
jge
mov
mov
xor
xorl
cmc
jbe
pop
sti
jnp
jmp
add
mov
test
xchg
outsb
daa
ret
roll
in
mov
pushf
jg
movsb
dec
inc
es
shr
fstpl
cmp
or
inc
in
mov
mov
in
pop
mov
loope
cmpsl
add
icebp
mov
test
jne
sub
jb
xchg
scas
pop
xor
xchg
pop
push
mov
jae
rdtsc
pop
xchg
xchg
push
stos
pop
adc
aam
popa
icebp
pushf
daa
adc
mov
es
outsl
xorb
or
push
cmpsb
cltd
pop
add
xchg
mov
mov
or
and
cmp
loop
add
jae
jae
pop
jg
stos
jge
xchg
adc
pop
loopne
cmc
call
mov
push
clc
push
xchg
repnz
notb
stos
adc
dec
add
sub
or
xchg
or
outsb
pushf
cmpl
pop
mov
clc
push
icebp
shlb
pop
pop
mov
out
call
ljmp
xlat
pop
pop
sbb
lret
pop
mov
cld
shlb
inc
mov
dec
and
inc
sub
push
push
stc
ret
xchg
fs
xchg
ds
add
les
call
aam
int
das
jmp
jg
xchg
andl
push
adc
clc
mov
mov
mov
dec
adc
dec
pop
inc
std
mov
enter
das
nop
sub
mov
roll
mov
rolb
and
inc
notl
lea
or
pop
orl
inc
push
test
and
out
add
mov
sbb
mov
sbb
ljmp
push
xor
scas
xchg
adc
imul
lea
cld
add
idiv
in
add
in
pop
pop
adc
div
xor
sbb
dec
mov
iret
addr16
jne
aaa
xchg
sbb
sbb
dec
mov
inc
out
enter
addr16
sub
hlt
xchg
xor
cmpsb
adc
rolb
rcr
aaa
cs
mov
bound
push
decl
mov
iret
aaa
mov
jb
mov
mov
test
int
adcb
imul
jp
jecxz
xor
pop
cmpsl
add
int
jbe
lretw
jmp
sti
ret
add
dec
in
jp
in
push
arpl
sub
imul
fadds
push
ret
jno
inc
push
fs
orl
rol
mov
push
pop
shrb
sbb
jae
xchg
rcll
push
mulb
push
call
push
test
les
mov
pop
scas
adc
xor
xchg
sbb
notb
xchg
mov
and
stos
add
stc
add
mov
jecxz
outsb
int
cmpsl
aaa
xchg
push
in
xchg
jge
inc
rcr
push
sbb
sti
mov
cmp
test
loop
outsl
mov
inc
out
in
or
js
mov
cmp
loopne
dec
pop
mov
inc
scas
jae
gs
mov
cwtl
aaa
stos
dec
es
push
lea
pop
loope
dec
push
adc
cmp
jbe
out
mov
inc
movsl
out
xlat
int3
lcall
lock
xor
xchg
pushf
movsb
std
mov
xchg
nop
imul
xlat
xchg
sti
xchg
addb
cmpsb
ljmp
push
adc
jo
mov
push
cwtl
sbb
jmp
jb
fidivrl
mov
iret
lds
xchg
rorl
or
fmuls
je
inc
sub
fucomi
adc
inc
adc
pop
pop
inc
fs
mov
push
jp
cmp
xchg
sbb
cld
and
mov
jl
popa
scas
outsl
sbb
ret
out
ljmp
xor
jl
es
mov
dec
jne
mov
out
mov
clc
call
ljmp
jmp
inc
int
out
test
ss
shll
and
xor
sti
jmp
push
mov
dec
cld
mov
call
rcll
loop
mov
pop
enter
nop
aad
add
mov
jnp
mov
call
xchg
mov
xchg
sti
jge
inc
jmp
sbb
cld
jmp
cwtl
ja
mov
addr16
jmp
xor
pop
out
sbb
filds
incl
in
ret
push
mov
test
adc
inc
adc
cli
mov
pop
pop
icebp
adc
int
mov
adc
enter
lret
jl
xchg
std
icebp
pop
cld
out
test
dec
movsl
cltd
mov
jns
aaa
in
sub
sub
aas
arpl
adc
inc
repnz
mov
inc
addr16
sub
pop
push
popf
sbb
jecxz
push
int
xor
in
sub
addr16
fiadds
and
loop
test
inc
inc
decb
in
into
test
xchg
outsl
pop
add
xor
adc
stc
add
andb
cmp
add
sub
mov
inc
cwtl
sbb
enter
das
lcall
jg
loop
cmpsb
nop
icebp
sti
ljmp
sub
sbb
mov
mov
mov
fldl
push
jne
inc
lret
pop
add
lods
xchg
fldenv
lods
pop
cli
push
mov
dec
popw
or
xor
addb
mov
jecxz
bound
inc
int
adc
mov
pop
mov
ss
pop
repz
pushf
bound
and
jnp
or
mov
fcmovbe
jae
jle
ja
in
rcrb
ja
pop
scas
rol
mov
popf
mov
or
mov
outsb
fwait
jmp
ret
icebp
mov
incl
test
lock
mov
xchg
scas
in
stos
add
nop
dec
testb
sbb
data16
add
ss
push
push
jnp
cld
xorl
out
and
or
insl
xchg
jl
enter
inc
adc
cmp
cmpsb
cwtl
scas
jp
and
push
jmp
dec
js
mov
mov
inc
les
mov
xor
cltd
iret
outsl
out
mov
inc
cmp
dec
shlb
jns
aad
fdivrl
scas
icebp
rcl
ret
mov
pop
mov
jo
pusha
pop
loop
lock
sbb
bound
add
ljmp
stos
add
fwait
xchg
fs
cld
cmpsb
xchg
jnp
adc
push
sarl
xor
add
push
xor
add
fiadds
xchg
enter
push
popa
lahf
rcrl
arpl
sub
sbb
fsubl
clc
sbb
cld
push
push
movsl
and
jns
hlt
loope
or
popa
inc
addr16
inc
cmp
pop
sarb
orb
andl
jp
push
inc
sub
mov
lret
pop
lahf
sbb
jle
add
inc
xchg
xchg
sbb
hlt
cmc
inc
pushf
cmp
or
cltd
sbb
sub
test
mov
lods
lahf
fstps
fnstenv
enter
into
dec
jns
push
fistl
inc
xor
dec
icebp
dec
fisubl
ss
add
aad
test
jle
out
xchg
cmpsb
mov
mov
rcl
test
and
popl
pop
pop
ljmp
inc
cltd
lods
jns
pop
and
push
shrb
and
or
push
cmp
mov
data16
outsb
fcompl
push
into
mov
js
add
mov
fcoml
outsb
shrb
rcll
cmp
and
cmp
std
pop
xchg
mov
xor
ret
arpl
popa
lods
adc
lods
movsb
divb
cmp
sub
test
jmp
push
cli
or
call
cmpsb
ret
add
xchg
jg
aad
mov
popf
xchg
dec
insb
add
xchg
sar
in
xor
icebp
call
add
je
movsb
imul
push
push
filds
clc
lock
fwait
int
jmp
or
mov
fstp
sbb
cs
aas
repz
push
or
and
pushf
mov
icebp
inc
into
dec
out
mov
dec
loopne
push
or
and
fsubs
das
stos
fisubrl
cmp
or
int
cmp
mov
out
test
mov
jge
ror
repz
adc
fsin
insb
push
ss
inc
dec
cmpsb
inc
mov
sub
push
or
pop
lods
mov
pop
xchg
ret
loope
push
mov
filds
inc
adc
fnstenv
or
mov
pop
jl
or
es
xor
jecxz
dec
push
shl
aad
lods
mov
mov
mov
ja
sbb
icebp
mov
or
sub
push
jecxz
popa
in
jge
jno
outsb
aam
cli
cmp
divl
mov
js
add
lock
cld
call
push
xchg
mov
xor
out
xor
ret
mov
cmp
arpl
shll
scas
inc
mov
or
stos
stos
loop
movsb
inc
loop
int
sub
imul
shll
lfence
fistl
add
les
cmp
jns
fsubrs
xchg
adc
jl
push
and
cli
push
jmp
add
mov
xor
mov
push
ret
pop
rcll
in
rolb
mov
fwait
ss
arpl
mov
je
in
dec
dec
mov
shll
push
xchg
pop
xchg
rcr
leave
leave
inc
scas
mov
loope
sar
int
ljmp
lea
daa
adc
test
lahf
sahf
mov
push
insb
jp
insb
dec
cmpsb
sub
jbe
adc
ror
fidivrl
mov
push
push
xor
adc
pushf
cmp
das
ja
dec
add
in
jae
sarl
xor
rcrb
adc
in
push
push
fs
or
sti
push
jae
cmp
inc
xchg
xchg
or
dec
fildl
imul
mov
out
js
mov
les
icebp
inc
xchg
aam
out
cld
pop
gs
mov
out
das
arpl
das
dec
ss
add
fnstcw
and
test
bound
ret
scas
stos
fnsave
cld
adc
mov
lods
push
mov
out
stos
or
or
in
in
test
pusha
imul
pop
sbb
cld
and
push
iret
mov
gs
xchg
es
mov
into
cmp
popa
mov
mov
ja
sbb
lret
in
xor
xchg
sbb
outsl
enter
and
jl
inc
mov
inc
cmp
jne
sbb
test
inc
and
sarb
hlt
std
sbb
nop
mov
aad
cmp
pop
dec
xchg
insl
sub
sahf
cmpsl
cmp
lcall
movsl
pop
ret
clc
jo
movsb
push
aad
push
adc
mov
cmp
mov
pop
fiaddl
sub
lcall
jmp
and
cld
pop
sbb
mov
es
lahf
pop
das
sahf
test
xchg
jb
js
mov
jnp
or
addl
sbbb
je
addr16
lret
sub
fs
adc
repnz
or
lock
sysenter
cmp
ja
iret
rcl
int
mov
add
jo
aas
mov
mov
push
adc
and
cmp
xor
jno
mov
adc
sub
adc
cld
sbb
les
cmpsl
mov
push
les
pcmpeqd
sbb
mov
cltd
sbb
ret
mov
stos
inc
ja
adc
inc
repnz
mov
push
das
push
fsqrt
xchg
cmp
pusha
xor
fdivs
mov
rcrl
lahf
fwait
dec
xchg
jle
in
cmpsl
shl
push
pop
and
fwait
enter
sbb
cmp
out
cmpsb
out
or
sarb
movsb
jp
ljmp
mov
inc
add
sbb
outsb
loopne
xchg
popa
fistpll
ds
out
mov
inc
sti
adc
mov
sub
cmp
jecxz
add
sahf
shl
mov
jnp
hlt
or
into
int3
pushf
nop
cli
xor
adc
ret
mov
mov
pop
ljmp
lods
in
nop
ljmp
mov
cwtl
add
sbb
or
lret
enter
nop
sbb
jg
add
push
pop
scas
dec
ss
lock
jnp
enter
xor
lods
pop
repz
test
push
into
roll
add
in
lods
jo
and
jne
scas
dec
fs
xchg
test
clc
add
lock
add
scas
push
je
sbb
sbb
xor
cmp
testb
imul
fs
stc
lahf
icebp
ljmp
lcall
cmp
jecxz
mov
and
fucomp
dec
and
and
test
cmp
xchg
cltd
xchg
sub
pusha
cwtl
je
mov
inc
inc
jns
lods
xchg
sub
inc
ret
imul
enter
add
push
and
nop
inc
add
sub
and
rclw
sub
cli
jecxz
add
pop
ret
fs
cmpb
cmpl
scas
fimull
adc
push
pop
cmp
daa
add
pop
popa
lahf
sbb
mov
test
xchg
ret
mov
cmp
push
mov
inc
nop
pop
xor
jecxz
jnp
and
mov
das
ja
in
arpl
mov
ja
mov
loopne
loopne
push
sub
insb
int3
ss
mov
cmpsl
into
xchg
mov
out
repz
cmpsb
insl
inc
mov
fildll
scas
mov
out
xor
push
lret
push
push
xchg
loop
ret
mov
mov
mov
jmp
leave
sbb
stc
or
inc
cmpsl
jg
lret
lds
shrl
addl
xchg
dec
and
sub
and
mov
adc
mov
mov
mov
and
push
mov
xchg
icebp
mov
test
sub
lock
adc
push
mov
rorl
adc
fwait
cwtl
mov
jge
pop
jle
cs
fcmovnb
iret
inc
xor
or
mov
loop,pn
test
mov
mov
or
sub
das
loope
lahf
jg
test
repz
fisubrl
mov
adc
pop
mov
lock
pop
adcl
aam
ret
inc
mov
xorb
es
adc
push
ret
jp
outsl
ret
cmp
mov
in
mov
dec
mov
mov
push
add
push
add
repnz
mov
outsb
sarl
xor
outsl
mov
in
push
sub
or
dec
lds
sarb
mov
es
jne
fmulp
xchg
jp
and
insb
xchg
mov
inc
adc
cmc
pop
seta
lahf
lahf
cmp
push
loop
push
xor
xor
decl
out
aas
pop
test
dec
jbe
xor
pop
lahf
outsb
lahf
jl
dec
pop
mov
and
cmp
js
push
jns
xor
pop
dec
push
push
inc
mov
cld
je
test
cmp
fiadds
sub
jo
or
mov
arpl
in
ja
shll
mov
or
xchg
xchg
push
mov
add
aaa
inc
mov
xchg
pusha
sar
push
out
nop
fs
ja
add
cmp
outsb
fcmovu
adc
fwait
adc
lcall
xor
xchg
jns
aas
mov
movsl
jecxz
pop
sbbl
arpl
loopne
dec
pushf
jg
fs
sub
out
addr16
xlat
lods
fstps
cmp
push
mov
out
mov
inc
xchg
xchg
mov
jns
imul
rol
sub
repnz
cmp
xchg
pop
stos
or
loopne
scas
jbe
xchg
adc
loopne
aam
das
and
cmpl
push
leave
cld
lret
or
call
std
and
outsl
mov
mov
arpl
cmc
push
addr16
mov
cmpsb
sahf
push
sbb
xrelease
mov
addb
mov
in
test
enter
test
in
inc
repz
push
mov
sbb
mov
sbb
cmc
cmpps
sti
adc
mov
cmp
ljmp
sti
inc
dec
push
sahf
push
jno
add
ret
or
out
in
bswap
pop
lock
jne
insb
xchg
inc
push
in
test
into
jle
movsb
out
jbe
in
adc
fldl
mov
cmp
lods
cmpsl
mov
int
sahf
divb
push
outsl
push
aam
adc
mov
mov
cltd
jp
dec
mov
hlt
xchg
mov
cmpsb
shl
dec
mov
mov
pushf
sub
jo
lea
and
mov
scas
or
test
mov
xchg
stc
cmc
lea
push
pop
adc
sbb
cmc
sub
mov
ret
icebp
and
mov
inc
push
hlt
out
xor
cltd
mov
mov
fmuls
out
push
fidivrs
sbb
pop
lock
mov
lcall
and
int3
repnz
xor
xor
in
mov
sub
shrb
mov
negb
ds
sti
stc
xchg
lock
test
pop
inc
jne
arpl
dec
flds
enter
jecxz
push
pop
cld
insl
aam
mov
imul
cmpsb
ljmp
scas
sti
mov
mov
jnp
jmp
mov
stc
nop
mov
in
inc
push
aaa
push
push
jge
add
mov
sbb
sub
lods
xchg
jle
aaa
adcl
subl
push
jge
test
push
in
jp
scas
xchg
out
and
adc
pop
mov
push
xlat
push
out
jl
fimuls
rorl
push
xchg
add
mov
sbb
out
jno
mov
sbb
pop
jmp
in
int3
dec
inc
rclb
mov
and
push
sub
icebp
ja
in
sbb
cmp
adc
dec
push
lahf
xchg
add
pushf
jmp
sarl
pop
push
add
jnp
and
mov
fimuls
pop
lret
repz
fisttpl
push
adc
jo
fwait
jns
xchg
mov
aam
add
out
push
xor
mov
mov
enter
shll
out
mov
xor
scas
sub
push
push
insb
in
int
jp
cwtl
lcall
mov
movb
ds
ja
jmp
lret
mov
mov
mov
lcall
pusha
mov
inc
or
in
sub
dec
xor
pushf
xchg
clc
fldcw
dec
mov
xor
outsb
mov
nop
mov
insl
or
adc
sbbb
pop
add
stc
addr16
cltd
xchg
sub
add
push
cmp
jbe
cmp
bound
hlt
xor
or
cs
test
inc
repz
fisubs
fcoms
cmp
or
movsb
push
sbb
test
xchg
xor
mov
and
fwait
mov
pop
dec
adc
jbe
das
inc
cmpsb
adc
test
push
test
and
ja
adc
es
inc
incl
pop
sbb
sbb
xchg
in
mov
test
shlb
pop
clc
pop
push
and
jl
repz
xor
mov
xchg
add
ficomps
fdivr
es
xlat
loopne
sbb
pushf
lea
push
and
fisttpll
fdivrs
rorb
aad
clc
sbb
inc
xchg
add
lret
ror
dec
sub
push
out
out
adc
pop
push
push
mov
mov
les
rcll
add
jae
jae
xlat
push
ja
daa
fists
xchg
ljmp
ret
addr16
push
xor
movsl
pushf
mov
stos
dec
mov
lret
jl
push
mov
xchg
sbb
lahf
pop
pop
and
hlt
dec
jo
popf
fistps
mov
out
repnz
mov
jnp
sbb
sub
jge
mov
out
mov
sub
gs
xor
mov
fdivrl
movsl
scas
xor
icebp
and
pop
jl
fcomps
pop
repnz
sub
outsb
stc
or
outsl
out
std
stos
repz
sti
mov
ss
jb
sbb
lds
and
mov
sbb
cs
xlat
pop
es
or
lea
sbb
filds
mov
dec
mov
push
sub
sbb
mov
ljmp
pop
into
scas
orl
movsl
je
gs
repnz
add
aam
mov
aam
xor
cmpsb
or
sbb
mov
out
inc
mov
popf
outsb
dec
pop
ds
lods
sbb
xchg
outsl
xchg
fstpl
shlb
adc
shrb
lret
mov
pusha
mov
leave
loopne
mov
pushf
push
test
xchg
outsl
stc
loop
cwtl
pop
mov
out
in
and
loope
cmp
lds
fiadds
add
shll
imul
pop
xor
push
fcomps
pop
aad
jp
dec
and
mov
jnp
adc
cli
call
mov
fisubrs
dec
stc
jge
push
jae
loop
hlt
mov
sbb
add
fidivrl
loop
ljmp
mov
mov
pop
lret
adc
xchg
mov
loopne
incl
mov
xchg
insb
mov
xor
mov
add
call
xchg
mov
fwait
dec
sub
inc
xor
push
dec
lds
mov
orl
cmp
cs
loope
add
xchg
mov
cmp
lods
ret
lret
jle
lret
addl
jnp
test
test
cmp
pop
pop
jno
push
arpl
jb
pop
mov
sub
or
inc
sbb
and
outsl
fisttps
xchg
push
ljmp
jmp
fbstp
sub
std
aas
add
testb
bound
mov
and
sub
pop
mov
shrl
cmp
adc
orl
scas
jns
adc
jo
jmp
cmpsl
dec
test
adc
inc
mov
pushf
cltd
cmp
icebp
daa
sub
sahf
cvtps2pi
cld
ret
mov
lret
sbb
pop
jae
pop
add
xor
push
add
jmp
and
jg
jo
dec
loope
sub
frstor
xchg
fimuls
push
inc
cwtl
jecxz
push
outsl
in
xor
fcoms
outsb
jnp
sub
jo
rcl
add
in
pop
sbb
push
mov
pop
popa
mov
mov
xor
mov
aaa
dec
add
xchg
in
inc
pop
sub
fmuls
adc
ds
insb
out
cmpsl
test
jo
icebp
mov
enter
into
fwait
lret
cmp
clc
or
cmp
pop
push
fcmovnbe
nop
push
out
sub
lock
cmc
sbb
in
jp
or
mov
mov
xchg
nop
mov
jnp
inc
lahf
repz
pop
or
scas
sbb
fnstenv
pusha
fwait
call
jns
movsb
mov
adc
rorl
testl
test
mov
sub
movsb
cmpl
test
cmp
pushf
dec
ljmp
push
or
js
es
lea
adc
jecxz
aad
push
ret
scas
and
aad
in
pop
aam
push
mov
add
mov
fnstenv
sub
jp
loop
sahf
push
push
icebp
out
data16
xchg
orb
inc
stos
sar
test
bound
out
mov
lea
sbbb
xor
mov
iret
test
test
mov
test
mov
and
lahf
adc
fwait
cmp
in
lret
inc
test
mov
xchg
je
jp
pop
imul
imul
aas
xor
sbb
gs
mov
mov
mov
sbb
jg
inc
mov
pop
or
xchg
stos
fimull
test
jno
mov
cwtl
ss
imul
cltd
and
jge
addb
lods
pop
cmp
sbb
inc
mov
test
ja
xor
in
sarb
mov
les
pop
and
test
adc
sub
shll
in
pop
mov
cli
icebp
xor
jle
xchg
and
lds
and
lds
xor
push
sbb
mov
xor
push
stos
ja
cmpsl
push
jne
outsl
xchg
adc
pop
inc
push
lds
shr
ja
popa
popf
hlt
ja
mov
xor
add
and
repz
fwait
popa
vhsubpd
aaa
dec
push
mov
sub
jb
aam
clc
sub
popa
shrb
cmp
or
push
insb
pop
adc
push
push
ss
mov
clc
push
cltd
fisttpll
and
mov
xor
idivl
pop
shlb
and
pop
sub
fwait
jae
xlat
mov
mov
insl
xor
xchg
scas
aad
daa
mov
scas
jno
jb
cmp
xlat
repnz
lret
push
adc
test
shrl
inc
jae
xor
sub
mov
add
cmp
adc
in
aam
cmp
les
shrb
push
cmp
and
cmpsl
imul
jbe
mov
popa
mov
adc
mov
lea
sub
adc
and
fpatan
add
mov
hlt
push
lods
ja
sahf
adc
or
js
inc
rorb
movsl
mov
mov
lock
sbb
xorb
js
stc
negl
fsubs
xchg
or
adc
bound
inc
aaa
xchg
dec
addr16
sbb
add
fwait
aad
das
decb
xchg
mov
add
mov
pop
xor
fs
imul
cmp
cmp
lds
loopne
out
and
push
push
sub
mov
jmp
pop
sub
paddusw
mov
stc
vmwrite
mov
cmpsl
sbb
xchg
cmp
sti
inc
flds
jecxz
loope
lock
movsl
cltd
test
mov
inc
or
aam
shll
dec
movsl
popa
dec
push
rol
mov
rolb
mov
cmp
or
lods
add
mov
into
aad
push
repnz
push
dec
inc
xchg
push
xchg
in
add
add
sub
ret
jmp
repnz
cs
xchg
popa
clc
push
mov
mov
mov
mov
insb
mov
pop
lcall
imul
add
fistps
rcr
push
xlat
adc
push
xchg
inc
int
mov
call
jne
jno
adc
cmpsb
mov
push
xchg
pop
adc
in
inc
in
pop
pop
cmp
jne
lds
les
dec
popa
mov
sub
stos
leave
bound
jo
cmp
out
stos
jno
loop,pn
negl
push
lret
test
mov
inc
mov
cmp
or
inc
xchg
jae
mov
mov
in
cltd
lods
movsl
dec
xchg
lcall
xor
mov
fwait
cmc
mov
cmp
jp
ljmp
fbstp
sub
stos
dec
mov
inc
xchg
adc
cwtl
imul
cmp
jle
ja
fsubl
loop
pop
das
lock
sub
or
and
xchg
rorb
or
scas
xlat
push
push
mov
mov
pop
pop
pop
test
xchg
fs
push
out
and
jae
pushf
ds
jne
cmp
imul
adc
push
dec
or
icebp
imulb
jno
cmpsl
aaa
fstl
lahf
cmpsl
pop
push
jns
jns
ds
push
testl
in
mov
sub
mov
jg
push
clc
jle
and
or
and
bound
outsl
xchg
push
or
xor
cmpsl
lods
clc
lcall
xchg
adc
ret
into
cmpl
lahf
lahf
push
pusha
mov
dec
lock
scas
mov
cmpsl
pop
rcl
test
lret
add
fs
sub
loop
arpl
mov
rcpps
or
inc
std
dec
add
mov
or
cmp
dec
cld
or
cld
mov
sbbb
sub
out
sbb
repz
push
adc
loopne
lods
push
mov
mulb
sti
lret
sbb
cmp
ss
shll
icebp
sub
jns
pop
ret
mov
imul
fidivs
imul
mov
xchg
shll
sub
popa
pusha
xlat
dec
rorb
movsb
js
icebp
je
xchg
fdivs
cmpl
jbe
cmp
cmp
xchg
rol
jo
outsl
lcall
loope
loopne
sub
adc
xor
jg
push
inc
dec
push
lcall
imul
inc
xor
negb
mov
lcall
shl
or
in
jne
test
ss
imul
lock
add
push
mov
xchg
js
imul
aad
roll
mov
in
xlat
lock
insl
or
repnz
cmp
adc
push
popf
dec
xchg
inc
cmc
nop
inc
add
and
add
test
shrb
jno
mov
mov
cmp
lahf
pop
jns
push
xchg
add
xor
aad
push
add
mov
inc
fistl
fidivl
test
loop
add
call
or
pop
inc
jp
xlat
int
or
scas
mov
ljmp
ja
orb
out
rol
int
or
dec
outsl
sub
sub
push
ret
es
imul
mov
in
mov
add
stos
lcall
mov
das
sub
cmp
loope
ljmp
int
out
dec
lea
pop
cmp
sbb
push
in
inc
aam
pop
out
rorl
sbb
sbb
cld
mov
adc
push
pop
mov
rcll
lock
movsb
cmc
loop
les
stos
dec
mov
inc
imul
jne
jnp
mov
add
push
add
xor
inc
stos
mov
inc
call
jp
sti
and
cmp
cmc
cmp
dec
or
loopne
test
push
into
fistps
jge
push
push
mov
in
sahf
daa
dec
das
lret
insl
push
cwtl
scas
adc
xor
ret
inc
inc
pop
mov
sub
lret
inc
int3
pop
pop
jg
xchg
imul
push
mov
adc
popf
je
mov
les
xchg
dec
cmp
xchg
pushf
sbb
leave
int
fstpt
inc
or
pop
xchg
cmp
mov
add
mov
pop
jae
xchg
je
sbb
mov
test
sub
pop
lret
test
xor
in
loop
xchg
jecxz
pop
das
xlat
xlat
jbe
stos
bound
fistps
notb
or
leave
cmp
mov
inc
sarl
bound
xorl
pop
mov
push
loopne
mov
pop
dec
mov
lret
insb
cwtl
sub
pop
inc
out
imul
lahf
or
ret
mov
fs
jg
in
mov
enter
into
add
mov
add
push
xor
xchg
cltd
xchg
in
inc
fdivl
push
mov
and
sub
adc
push
adc
push
dec
test
or
mov
fsubs
push
nop
dec
xor
dec
shlb
outsl
dec
sub
dec
jg
nop
pop
shll
xlat
nop
cmc
adc
fdivrp
es
and
sub
int
in
in
mov
xchg
lods
xchg
outsb
jne
xchg
mov
rcrl
enter
inc
add
push
leave
jno
gs
test
mov
out
or
mov
pop
jle
fidivrl
add
inc
xlat
test
lods
pop
jno
scas
dec
lret
push
shll
stc
xor
or
add
add
jno
jge
nop
fsub
ds
jne
in
mov
icebp
pusha
movl
inc
pop
fcomi
xor
aam
adc
imul
pop
sahf
ds
fisttpll
loope
jmp
stos
fxch
ret
pop
mov
loope
jmp
jg
lds
imul
xor
xchg
es
test
es
cmpsb
cmp
ljmp
lock
nop
xchg
mov
cmc
in
aad
cmp
push
mov
movsl
out
outsl
mov
push
inc
xchg
adc
dec
leave
movsb
mov
inc
unpckhps
mov
bound
icebp
hlt
or
adc
inc
cmp
fnstsw
xlat
fbld
xor
in
adc
lods
sbb
ja
inc
mov
mov
loope
aas
mov
push
mov
xor
leave
xchg
dec
inc
rorl
pop
shlb
fcmovnb
push
fchs
mov
push
dec
dec
push
mov
subl
lret
jecxz
imul
mov
mov
cmpsl
pop
push
daa
mov
xchg
adc
scas
adc
xchg
sbb
mov
xor
outsb
loopne
sahf
out
cmc
pop
in
rcr
xchg
push
adc
mov
pop
lods
aad
cmpsb
jmp
addr16
push
jno
or
cmc
push
into
cmp
cli
add
push
cmpsl
fucom
pop
and
imul
mov
lea
in
or
inc
jbe
sub
loopne
sbb
jp
repnz
sub
pop
adc
inc
cli
test
push
push
out
lret
sub
stos
std
push
xchg
lock
pop
ret
xchg
movsl
subl
pop
repz
movsb
cmp
and
aad
test
dec
mov
cmp
enter
jnp
sbb
pop
subb
scas
push
mov
xor
dec
and
mov
mulb
and
cld
cmp
pop
insl
dec
mov
popf
addr16
sarb
sub
mov
push
push
in
and
inc
inc
loopne
or
shl
nop
addl
ds
dec
adc
jp
mov
rcl
mov
dec
or
outsl
push
addb
addr16
icebp
fildl
jg
mov
fadd
push
mov
fs
in
js
arpl
or
mov
pop
mov
jle
and
lds
js
inc
cmpb
sub
enter
outsl
scas
jb
cmp
in
adc
sti
cmp
fs
out
cmpsl
pop
xor
mov
or
lds
push
push
cmp
icebp
mov
lret
imul
ljmp
adc
arpl
pusha
cld
sub
addl
movl
hlt
xchg
or
lcall
mov
test
fldl
sarb
pushf
sub
pusha
sar
add
dec
mov
lcall
push
pusha
out
xor
fisttpl
or
scas
add
sbb
mov
dec
imulb
mov
jae
pop
pop
sbb
xchg
aaa
xor
inc
xchg
sbb
xchg
aas
lahf
or
push
sub
out
xorb
mov
push
jp
jno
movd
pop
inc
faddl
xchg
icebp
add
cmp
mov
sahf
dec
adcb
mov
mov
xchg
dec
xchg
popa
sahf
add
clc
push
adc
mov
rcll
inc
xchg
push
call
jns
pop
or
hlt
cwtl
call
adc
or
inc
jnp
dec
outsl
xchg
in
pop
and
sbb
call
dec
cwtl
pop
sti
je
bound
cmp
pop
mov
jl
sbb
mov
add
and
adc
adc
pextrw
mov
nop
mov
bound
loope
adc
xchg
dec
xor
inc
cmp
cli
xchg
in
mov
xchg
xor
cmp
xor
add
jmp
fsts
inc
cltd
test
jo
dec
sub
outsl
setbe
cmp
and
loopne
xor
cmpsl
leave
repnz
adc
movsl
fs
mov
xchg
or
inc
xor
jl
or
bound
ret
fdivp
hlt
pop
nop
jge
in
xor
dec
in
xor
mov
cmp
cmpsb
lret
add
loop
int3
mov
push
scas
lret
stos
aam
jae
mov
fnstenv
adc
pop
hlt
cmp
xlat
sub
stos
mov
xlat
aam
scas
mov
test
xchg
mov
test
test
cmp
out
mov
xor
pop
mov
jg
jge
xor
pop
xchg
mov
lret
in
es
mov
inc
push
popa
in
imul
stos
jge
and
adc
lods
adc
test
and
mov
xor
clc
int
mov
je
jne
mov
inc
mov
ret
jl
ret
popa
ret
out
das
imul
fwait
loopne
out
mov
aaa
pushf
aam
leave
jns
enter
data16
push
jg
mov
into
sbb
sbb
push
arpl
jo
pushf
adc
or
mov
push
pop
ret
lret
push
and
xchg
and
mov
outsl
sub
push
hlt
jge
inc
pop
dec
popa
xchg
sub
nopl
movsb
dec
push
notl
sbb
jns
dec
fsubs
das
sub
imul
imul
jge
sbb
test
shrl
pop
and
outsb
xor
pop
idivb
daa
ret
fstpt
call
push
mov
pop
ss
bound
aaa
fimuls
xor
out
cmc
jp
push
or
or
and
js
cs
cmp
mov
pop
mov
pop
inc
inc
cmpsb
push
pop
or
jecxz
pop
popf
or
insb
mov
imul
inc
sahf
cld
or
mov
lds
pop
lods
xchg
ffreep
mov
mov
mov
and
mov
jns
shr
pop
xchg
push
cmpsb
mov
dec
cli
jbe
sbb
push
sub
out
dec
in
lods
mov
outsl
dec
jmp
or
sub
pop
arpl
test
fstpl
rcr
sti
ljmp
outsb
sbb
xchg
icebp
mov
xor
xor
dec
call
adc
popa
mov
scas
lcall
cmc
cs
loop
and
cmp
or
sbb
fcmovu
push
repz
das
daa
daa
lret
sub
xlat
gs
pop
sbb
std
sub
lcall
insl
test
fildl
dec
int
es
pop
hlt
addr16
stos
mov
mov
sub
pop
mov
pop
mov
and
pop
imul
mov
les
loopne
pusha
mov
push
aad
bound
and
pop
cs
rcrb
sub
xchg
ja
imulb
mov
mov
jno
dec
lahf
xor
icebp
loope,pt
xchg
mov
dec
mov
or
add
das
repnz
notl
ja
or
fnstenv
je
mov
lods
mov
sbb
and
adc
cmpsb
push
adc
xchg
mov
sbb
arpl
popa
jp
aaa
scas
rcll
mov
call
xchg
ret
in
inc
cmc
test
sbb
jmp
addr16
mov
sub
xchg
popa
push
je
ljmp
clc
popf
gs
arpl
jecxz
fneni(8087
xlat
roll
xchg
mov
int
jbe
sbbl
fs
sysexit
jmp
pop
inc
inc
iret
test
xor
ret
pop
push
pop
es
jg
fs
adc
and
dec
adc
das
push
call
mov
sti
jp
loope
cwtl
jecxz
pop
loopne
into
stc
fwait
xlat
mov
jmp
rcll
cltd
dec
pusha
mov
mov
push
int3
mov
popf
xchg
and
jmp
fadd
arpl
mov
mov
add
jge
and
incl
call
lret
fucom
jg
int3
cmpsl
jmp
nop
jnp
and
ss
add
adc
es
mov
fwait
xor
xor
fxtract
loopne
adc
shll
mov
adc
cmp
fcomps
ret
call
fmul
xorb
gs
pop
mov
addl
mov
lds
sbb
sbb
pop
shlb
jno
xor
mov
or
fs
je
int
loop
int
data16
jl
sbbl
jmp
add
out
adc
and
rcrb
adc
outsb
mov
xchg
adc
mov
clc
in
cmp
sbb
jns
pop
in
xor
dec
dec
fnstcw
pushf
jbe
mov
xor
xchg
or
ja
dec
lods
jo
mov
rolb
push
cmpsl
jle
lds
add
shrl
and
imul
jb
jnp
push
cmp
xchg
gs
nop
inc
and
cld
add
dec
movsl
jmp
aas
pop
xlat
xchg
pop
add
inc
imul
xchg
mov
jmp
test
adc
fistps
daa
mov
cs
das
sub
cmp
pop
inc
lret
pop
cmp
cli
push
cmpsb
out
jle
and
ret
mov
pop
xor
push
xor
hlt
adc
sbbl
cmpsb
outsb
jg
arpl
into
add
mov
sbb
cmp
inc
rol
loop
pop
shll
aas
or
fcompl
dec
fistl
sbb
rclb
jle
dec
push
rcl
pushf
xchg
xchg
push
jmp
scas
or
xchg
push
in
sbb
jg
insl
dec
jbe
push
and
mov
jmp
jae
dec
imul
fdivs
rcrl
sbb
mov
popa
fisttps
jae
popf
adc
sti
sbb
sub
xchg
movsl
jl
js
push
int
popf
push
outsl
frstor
sarb
addb
add
inc
insl
or
mov
add
jae
loopne
add
ret
stc
fdivr
pop
mov
dec
inc
subl
outsl
lods
xor
mov
push
out
xchg
xor
test
addr16
or
enter
mov
addr16
and
dec
mov
lock
cltd
cmp
imul
inc
xlat
xchg
adc
das
push
adc
push
mov
xlat
test
push
xor
cmp
stos
mov
xor
push
cmp
add
test
xchg
fistpll
mov
push
push
sub
or
mov
adc
push
and
fadds
ret
add
jne
add
scas
push
dec
mov
js
stc
or
xchg
daa
jae
and
pusha
movzbl
adc
add
or
xchg
cmp
jg
and
push
dec
hlt
cmp
and
xchg
adc
pushf
pop
cli
mov
add
jb
add
push
push
daa
fisttpl
xchg
loopne
pop
orl
sbb
push
dec
sub
out
jp
pop
iret
cld
mov
mov
cld
aas
test
out
sahf
mov
sbbb
sbb
inc
mov
mov
out
insb
inc
aas
push
stos
xor
sub
xor
or
aam
imul
or
lahf
shll
fwait
jno
mov
in
cltd
sub
cmp
xchg
cli
xchg
in
in
xchg
loopne
out
mov
cmpsb
inc
mov
or
dec
sbb
rcll
nop
aad
cmpsl
jbe
cmpsb
add
cmpsb
push
cli
mov
aas
jl
or
xchg
pusha
and
mov
add
repnz
fnsave
jbe
xchg
mulb
repnz
stos
push
push
into
mov
ja
dec
jbe,pt
ljmp
popa
dec
lock
stos
imul
ror
mov
xchg
and
mov
pop
mov
cmpsl
pushf
mov
repnz
stos
rcll
xchg
and
scas
paddsw
rcr
xor
pop
fbld
adc
mov
in
jno
adc
fcoms
or
pop
sahf
loope
jae
or
in
out
add
xor
jp
inc
stc
pop
test
xchg
push
push
xchg
sub
jge
fwait
inc
scas
clc
test
sbb
push
les
repnz
dec
insb
sub
ja
ljmp
cmp
push
cmp
into
or
sub
pop
push
mov
js
mov
lret
jp
fcom
add
ja
mov
inc
in
and
outsb
push
xor
or
insb
or
cld
mov
sbb
mov
xchg
and
andb
jl
cmp
out
mov
fwait
push
jmpw
and
mov
inc
fistl
cltd
xor
or
int3
sub
scas
adc
es
aaa
dec
and
or
mov
mov
xorl
mov
fcomps
push
push
fcmove
jo
test
sbb
lret
push
stos
sbb
cmpsb
out
setae
call
sub
mov
call
cmp
adc
shrl
divb
push
adcb
shl
cmpsl
test
divb
loop
add
shr
imul
adc
fwait
popa
push
mov
dec
clc
xchg
shlb
ljmp
push
push
pusha
arpl
xchg
add
add
adcb
mov
call
xlat
mov
fcmovu
xchg
pop
add
mov
xor
in
xchg
jns
and
push
adc
adc
inc
packsswb
test
mov
fsub
ljmp
push
jp
jno
pop
incl
mov
scas
and
add
inc
out
xor
inc
pop
js
ficompl
loop
lret
sbb
fucomip
mov
jle
in
push
inc
xchg
mov
sbb
xchg
push
or
insb
rcrb
push
xor
pop
xor
xchg
pushf
push
dec
sahf
in
icebp
lock
mov
mov
mov
mov
sub
cmp
or
sbb
call
pop
and
imul
lret
jge
cmp
push
mov
in
push
inc
in
and
insb
jnp
in
add
jns
fiaddl
pop
test
add
movsl
or
sub
push
cmp
pop
ret
sbbb
lea
jno
shlb
dec
loop
jl
push
notl
sbb
in
in
or
int3
mov
fs
popf
loope
mov
stos
push
cwtl
xor
aad
outsb
push
pop
jnp
xor
mov
mov
clc
jl
cmpsb
xor
iret
sub
sub
push
aaa
pop
xlat
or
pop
jns
push
jl
jo
inc
das
repnz
sub
sbb
mov
in
push
mov
sbbb
cld
lock
inc
sti
xor
sarb
movsb
add
sahf
sbb
xlat
mov
xchg
inc
dec
int3
es
out
xchg
pop
and
outsb
adc
lcall
data16
daa
in
outsb
mov
adc
dec
cmpsl
and
add
mov
jle
cmp
rcrb
popa
xchg
pop
dec
pop
call
jno
add
arpl
aam
and
xlat
xor
jne
lods
lods
mov
jmp
sbb
lret
inc
sti
mov
add
sbb
pop
push
das
mov
idiv
dec
stc
scas
xchg
popa
pop
shlb
pop
repnz
shrb
lods
pushf
and
jns
out
js
mov
ss
das
mov
idivb
dec
mov
out
dec
ret
or
dec
loopne
inc
pop
xchg
out
and
xchg
dec
xor
test
inc
pop
mov
aam
push
insl
cli
inc
push
test
cld
cmp
mov
iret
data16
adc
adc
cli
es
inc
jp
and
jae
mov
add
mov
iret
sti
cli
out
sub
push
jo
cs
xor
adc
adc
popf
xor
mov
jl
js
mov
fildll
mov
test
jno
and
clc
mov
push
jecxz
lret
fisttpll
mov
fimull
dec
adc
inc
push
nop
dec
push
shlb
arpl
and
das
adc
cmp
jns
jmp
add
inc
sub
push
push
xchg
icebp
into
test
data16
in
xor
jae
adc
inc
add
icebp
out
les
adc
jae
loop
jbe
fiaddl
cmpl
lock
aam
sub
lret
sub
mov
mov
xchg
out
inc
filds
jl
jnp
ds
jl
mov
sarl
sbb
pop
lods
push
int
xor
mov
jg
imul
jo
subb
push
lods
adc
jae
push
ret
in
push
ds
adc
mov
sub
test
jbe
wbinvd
inc
fwait
xchg
adc
pop
out
cmp
imul
mov
ret
ds
mov
dec
rcrb
fdivs
je
push
in
cltd
xchg
call
cmp
xor
xchg
leave
xchg
cmp
cmpsb
jmp
fisubl
scas
dec
icebp
pop
sub
pop
pop
sbb
hlt
or
ds
lock
popf
and
cmp
adc
insb
dec
or
xor
fwait
cmpsb
movsb
test
loop
fs
mov
sbb
test
mov
stos
call
dec
sub
inc
and
stos
inc
mov
mov
cmp
arpl
mov
mov
xchg
xlat
push
cmp
sbb
loope
jle
mov
dec
add
jbe
insl
das
or
jmp
enter
adc
mov
and
adc
pop
int
data16
divb
fldcw
pop
and
cwtl
rcrb
fincstp
and
out
jp
in
mov
cld
jo
jo
mov
ss
loop
out
std
xchg
adc
outsl
sarl
enter
or
shrb
inc
hlt
adc
pushf
inc
popa
pop
cmp
push
cmp
je
int
les
sbb
jmp
inc
push
data16
cmp
and
rcl
outsl
push
sbb
xchg
xor
cmp
inc
mov
addr16
mov
and
sbb
jge
sub
sbb
cli
xorb
inc
je
int
dec
ds
in
cmp
jbe
ljmp
gs
and
mov
scas
ret
cmp
ret
out
dec
mov
sbb
push
imul
sub
fdivrp
cmp
rclb
and
fstpt
movntps
out
fisttps
shll
out
fisubl
xchg
sbb
xchg
push
jmp
xchg
das
xchg
loope
fldt
shlb
xor
jp
cmp
std
aam
dec
dec
mov
or
push
aaa
addb
sub
xchg
std
jmp
inc
xchg
jns
cmp
jmp
xchg
xchg
in
inc
mov
and
ds
pop
outsl
stos
outsb
pop
mov
mov
dec
cli
mov
push
scas
lods
jp
into
pop
mov
ljmp
or
cmp
std
jge
cmp
mov
aaa
mov
nop
xor
pop
mov
fcompl
adc
je,pn
and
adcl
mov
cmp
popf
sbb
cltd
adc
mov
sbbb
dec
in
ss
cmp
adc
jp
movsl
out
mov
adc
test
cltd
inc
mov
test
mov
stos
fdivrs
jo
jae
fcmovnu
mov
je
mov
dec
and
dec
jmp
lods
lds
mov
push
movsl
and
test
jmp
lret
test
pushf
add
lods
mov
idivb
bound
or
or
out
test
and
dec
lds
mov
xchg
mov
pushf
dec
icebp
push
adc
pop
or
dec
adc
cwtl
aas
sbbb
gs
int3
lods
icebp
les
pop
sarl
ljmp
push
jmp
pop
add
outsb
push
mov
out
cwtl
and
jnp
sbb
or
push
mov
cmpsl
push
xchg
jp
mov
fnstsw
outsl
or
orb
jle
xchg
xchg
jns
inc
stc
das
push
jo
jns
pop
jne
je
mov
xchg
stos
fldenv
jbe
flds
lret
cltd
add
je
push
inc
lahf
fcomps
mov
mov
lea
add
leave
negl
mov
incb
or
sub
int3
pop
xchg
jle
in
fs
jp
sub
xchg
xor
es
add
pop
in
xchg
dec
stos
rclb
int
jg
into
xor
into
sbb
cli
lock
jl
stc
fsub
adc
lret
cmp
jne
lds
xchg
ret
cmc
fdivs
lods
cmp
jecxz
shll
loope
xorb
cmpsl
xchg
jecxz
ljmp
into
add
loopne
aad
cwtl
sub
pop
push
into
in
inc
sbb
dec
movsb
iret
fstps
jp
pop
rol
or
iret
add
mov
in
adc
test
push
mov
sub
inc
mov
jg
pop
jae
das
or
push
xchg
sub
fsubl
lods
sbb
imul
ret
adc
mov
adc
xchg
decb
jnp
adc
imull
idivb
out
add
pop
jbe
lea
lret
nop
call
shlb
add
sbb
pop
roll
push
or
leave
sbb
fucom
subb
lods
sbb
pop
movsb
sbbl
movsl
mov
lcall
icebp
stos
les
lret
insb
loope
cli
add
mov
or
fiadds
icebp
xor
sub
add
dec
and
xor
pop
cmpsl
jl
cmp
xchg
lds
call
push
inc
mov
dec
jg
mov
pop
push
xor
pop
dec
mov
inc
pop
outsb
add
mov
insb
aas
ljmp
dec
rcrl
filds
insb
in
sub
dec
lds
mov
mov
cmp
jno
into
sub
sbb
rorb
mov
pop
jge
xor
cli
pop
push
push
cmp
push
add
scas
mov
not
jne
jmp
mov
out
push
cmpsb
aad
xchg
sub
lret
loop
jns
xlat
les
mov
lret
imul
cs
loop
xlat
stos
fisttpl
out
data16
jne
dec
enter
loopne
mov
and
aaa
cwtl
mov
loope
sub
or
rorb
or
addl
xchg
or
daa
pop
movsl
sub
inc
push
leave
or
xchg
cltd
in
je
inc
jecxz
inc
shlb
movsb
daa
loop
jae
in
add
cmp
cmc
dec
les
xchg
adc
cwtl
faddl
dec
jge
sti
scas
lods
lret
mov
lea
xor
dec
inc
xchg
or
and
mov
js
fildl
shld
inc
dec
das
movsb
inc
jne
jb
into
inc
outsb
pop
pop
xor
xchg
push
inc
cmc
loopne
pop
pushf
call
add
les
movsb
lret
pusha
sub
add
mov
push
mov
jg
sahf
inc
aad
gs
int3
dec
test
test
xchg
dec
jp
pop
xor
adc
mov
and
ja
mov
ret
mov
push
in
shrb
scas
mov
leave
arpl
shlb
inc
lods
movsl
outsl
addr16
test
xor
mov
or
movl
std
adc
pop
mov
mov
test
je
leave
lds
pop
or
lock
fisttpll
sub
test
cmp
adc
jg
add
fistpl
dec
push
mov
inc
call
lret
push
fdivrs
add
aas
outsl
mov
push
mov
dec
inc
push
std
adcl
call
movsb
imul
xlat
push
mov
mov
lret
mov
repz
sbb
push
aaa
dec
mov
mov
jns
lock
outsb
popa
sbb
in
mov
cmp
add
in
cmpsb
stc
pop
mov
into
popf
lock
dec
jnp
sbb
push
ja
xchg
push
mov
in
jl
ljmp
cmpsb
fbld
mov
pushf
int
jae
mov
sbb
add
lret
addb
pop
sub
adc
cld
mov
inc
es
push
js
jns
cmp
dec
dec
xchg
adc
pop
push
inc
loop
mov
shl
pop
shlb
lock
xchg
dec
xchg
mov
test
pushf
pop
mov
dec
xorl
mov
mov
dec
push
int3
pop
sbb
pop
mov
pop
fisttpl
shl
mov
test
roll
xchg
sub
stos
insl
fs
push
movsb
ret
sbb
rol
and
test
or
inc
push
and
cltd
sbb
sub
jecxz
lea
dec
fildll
lds
fstpt
add
aas
shr
push
arpl
jmp
in
enter
mov
jle,pt
sbb
cmpsl
push
pop
push
leave
movsl
es
cmp
orl
xor
pop
pop
pop
int
icebp
xor
scas
xchg
lods
xchg
dec
mov
xor
in
dec
outsb
dec
cmp
sub
in
loope
add
adc
out
insl
out
out
lods
and
stc
xchg
xchg
mov
dec
xor
das
mov
jl
add
sbb
in
xchg
pop
mov
imul
cmp
push
sub
push
mov
cmpsl
cmpb
pop
sub
mov
mov
ljmp
sbb
cmp
fidivrl
push
nop
jno
ret
outsb
and
sbb
lock
xchg
add
pop
loopne
dec
int3
mov
scas
iret
jnp
push
stos
es
pusha
sub
imul
addr16
addl
and
mov
in
ret
imul
dec
pop
fcmovne
mov
repnz
inc
inc
out
push
xlat
sub
js
mov
push
add
jl
je
cmp
roll
dec
int
sub
add
sub
cmp
bound
lcall
pop
jne
cltd
pop
jae
adc
inc
lods
pop
mov
ret
test
push
cld
jl
imul
pop
fsubrl
leave
inc
lea
notl
mov
dec
jb
and
ss
adc
mov
xchg
add
stos
and
mov
xor
repz
loop
inc
ficomps
sbb
js
mov
lock
push
dec
inc
flds
and
and
ret
pop
push
hlt
arpl
push
xchg
loope
mov
test
ljmp
jne
dec
mov
or
neg
fsubr
jmp
testl
xchg
ja
stos
inc
jno
sti
add
popa
sbb
jo
mov
int3
inc
repnz
xchg
fimuls
jbe
and
test
push
jecxz
int3
ds
pushf
lea
dec
in
jle
pop
out
xchg
pop
lahf
test
cmp
push
jp
mov
divb
mov
out
pop
lret
fnsetpm(287
add
jb
out
inc
or
loopne
push
adc
into
mov
mov
std
pop
push
cltd
jo
lret
sbb
out
aam
cwtl
adc
data16
inc
and
push
sbb
push
fisubrs
pop
ret
mov
mov
mov
pop
inc
adc
loop
dec
mov
jge
jg
lock
jbe
jne
sahf
adc
je
ja
lods
pop
inc
mov
inc
sar
mov
sahf
adc
cmp
loopne
sbb
xchg
xor
scas
xchg
dec
fs
jl
enter
mov
sub
pop
sbb
push
sahf
idiv
nop
sbb
mov
push
aaa
push
and
cs
cmp
cmp
inc
in
jl
cmovbe
push
jae
rcll
les
push
roll
shrl
loope
or
push
out
es
repz
and
loope
sub
sub
or
pop
jnp
mov
mov
std
cmpsb
nop
jge
lahf
xchg
xor
lock
push
pop
out
mov
loop
out
add
inc
pop
xlat
push
mov
ss
push
out
shlb
clc
jle
jmp
cli
test
and
mov
sbb
dec
cmp
dec
scas
loope
xchg
mov
sarl
add
aad
or
cmp
out
mov
sub
inc
loopne
pop
mov
pop
icebp
or
mov
add
sub
inc
repnz
fildl
dec
inc
sbb
push
jmp
stos
inc
push
outsb
outsb
mov
mov
pop
cmp
fsubl
jne
pop
mov
xor
insb
xor
pushf
xorb
mov
and
inc
add
mov
mov
shl
add
in
push
in
lret
and
pop
mov
mov
mov
and
loop
jecxz
pusha
mov
adc
out
sbb
inc
call
orb
imul
inc
imul
std
push
push
jle
out
lcall
sub
cmp
dec
call
pop
faddl
je
pop
cmpsl
inc
fsts
or
jle
icebp
mov
pop
push
imul
mov
stc
daa
shrl
pop
js
fistps
leave
fmull
jmp
inc
xchg
xchg
std
in
cwtl
test
dec
shll
addl
mov
mov
sbb
xor
shl
out
mov
inc
stc
adc
adc
js
pop
stos
lock
xchg
sub
inc
loop
inc
mov
jle
mov
ss
xor
mov
loopne
sbb
pop
inc
inc
shl
ret
mov
loopne
cmp
aam
dec
xchg
inc
hlt
fdiv
aaa
xor
dec
jl
adc
leave
rcll
ret
sub
cmp
leave
gs
sbb
bound
leave
ret
sub
insl
mov
add
or
movsl
mov
inc
fadds
movsl
sti
xchg
clc
pop
push
jne
xchg
jecxz
or
repz
or
lret
je
xchg
cmp
out
addl
jae
push
pop
outsl
sub
mov
rol
in
xlat
cmpsb
dec
dec
pop
push
or
mov
mov
push
add
sbb
add
int
jae
out
iret
addr16
lahf
cmp
and
ljmp
stos
or
mov
push
icebp
sub
mov
mov
adc
repz
mov
int
push
jbe
ret
add
jae
cmp
insb
jg
mov
pop
or
loopne
push
mov
sti
cmc
xor
loop
mov
pop
xchg
jbe
and
push
sub
or
push
lret
inc
jne
dec
lret
nop
movl
inc
aad
mov
mov
pop
xor
pop
cltd
or
je
pop
loope
dec
fistps
mov
dec
nop
dec
repnz
ret
and
stc
xchg
in
insl
mov
mov
ljmp
cmp
sti
das
aad
push
pop
sub
call
push
pop
jae
xor
pop
shll
lods
ret
jbe
into
mov
add
aad
popa
rcll
ds
pop
hlt
rorb
test
rcll
or
and
cmp
loope
leave
add
adc
inc
and
cmp
or
scas
sub
gs
xor
cvtps2pi
fisttps
push
jl
lods
adc
stos
aaa
or
mov
stos
nop
lret
xchg
mov
fisttps
outsb
incl
and
cmpl
and
pushf
fildll
dec
rcll
fwait
sbb
pop
lret
mov
imull
pop
dec
mov
cmp
sub
or
or
xorl
lds
clc
xor
xor
arpl
scas
movsl
push
mov
and
adc
cld
das
ret
and
sub
fwait
push
sub
sbb
inc
rcrl
xchg
rol
inc
lods
or
add
in
call
repz
cs
out
dec
cmp
jnp
mov
loope
out
into
repnz
repz
test
data16
sarb
subb
cmpsl
push
aad
rcrb
andnps
pop
pop
xor
jo
rolb
stos
adc
xor
sub
fisubrl
fs
fcmovbe
mov
lcall
movsb
sbb
xchg
out
xor
fsts
in
popa
sub
loope
xchg
xor
das
and
add
push
push
lahf
or
adc
cmp
fcoml
jns
or
mov
testl
mov
push
aas
inc
mov
or
and
cmp
pop
ficoms
repnz
daa
dec
fmul
cmp
push
and
dec
dec
cs
addr16
int3
lret
iret
cli
movl
sbb
mov
cmp
roll
ds
iret
add
add
pop
inc
mov
in
insb
mov
sub
jg
mov
dec
pand
out
inc
into
and
ljmp
dec
sub
stos
sarb
adc
or
inc
std
test
lods
ja
xchg
iret
mov
repnz
push
js
mov
test
insb
jns
jo
mov
cltd
lea
mov
dec
jecxz
js
mov
loop
pop
push
leave
mov
and
je
dec
mov
int3
movsl
inc
inc
inc
dec
ss
xor
pop
xchg
jle
cmp
sbb
mov
or
jl,pn
fisubrl
aas
sahf
inc
adc
mov
inc
sti
les
xor
xchg
aaa
jo
scas
mov
lret
test
mov
dec
ficomps
test
repz
push
aam
xchg
int3
daa
bound
inc
mov
push
jb
lcall
or
je
fbstp
pop
je
leave
cmpsl
jg
or
aad
fstl
cltd
add
cltd
sbb
xchg
cmpsl
icebp
xchg
mov
imul
loop
dec
cwtl
bound
dec
xor
inc
cmpsb
movsl
rolb
insl
cs
loopne
mov
cli
cmp
jmp
or
sbb
out
jb
call
pushf
js
pop
popa
jp
int
clc
cmpb
pop
lea
rorb
cmp
mov
or
out
sbb
jno
andb
add
xchg
sub
in
mov
dec
push
sbb
xor
mov
dec
lcall
pop
shlb
push
cmpl
repz
or
inc
and
push
call
pop
lds
lods
mov
push
sbbl
pop
daa
or
dec
fwait
push
lret
sub
lock
xor
dec
push
ss
sub
movsl
and
daa
cld
fs
jae
add
push
mov
jno
jl
mov
dec
adc
imul
mov
pop
imul
mov
and
adc
clc
cmc
push
sarl
aam
push
xlat
sbb
lds
mov
push
xor
bound
inc
jbe
add
push
pop
xchg
fsubl
sub
and
gs
mov
in
pusha
stos
lods
das
pop
stos
imul
add
cwtl
add
arpl
inc
out
ja
xor
xor
test
xchg
mov
rolb
inc
aad
scas
inc
call
xlat
scas
and
lahf
cmpsb
push
mov
arpl
mov
sbbl
pushf
stc
leave
or
or
push
pop
enter
mov
xchg
cmp
mov
push
sbb
jg
cmp
pop
mov
cld
mov
pusha
sub
test
mov
call
inc
or
xchg
in
call
into
repz
fsubl
js
pop
cwtl
lsl
sub
idivb
jo
iret
cltd
push
cmp
sahf
push
and
mov
push
mov
add
jno
imul
xor
pop
push
sub
test
cmp
loope,pt
lret
mov
or
inc
sbb
xor
mov
xor
sub
xor
jno
jl
out
inc
or
lds
adc
fld
adc
dec
push
imul
repz
push
ljmp
je
mov
mov
in
scas
leave
sub
shrb
adc
cld
fwait
push
dec
cmp
cmp
das
xor
jg
adc
adcb
add
aad
faddl
adc
and
mov
sub
mov
test
xor
inc
clc
fwait
lods
sbb
data16
jge
sub
push
mov
movsl
lods
jae
sub
rorb
cld
push
push
mov
mov
in
jle
jle
pop
sbb
and
popa
jge
sub
jge
xchg
in
repnz
push
test
fstl
push
push
iret
iret
or
rclb
lods
insl
jns
jmp
cmp
pop
jbe
mov
cmp
cmp
xor
sub
fcmovnu
mov
test
ss
or
and
add
or
mov
or
push
sbbl
adcb
lds
pop
xor
xor
lahf
lahf
xor
lds
xchg
cwtl
lret
push
sub
movsl
cmp
test
push
ret
movsb
jmp
pop
fwait
loopne
add
pop
jns
pop
rol
mov
fsubr
shlb
jb
jecxz
ret
cli
bound
aam
dec
sarb
outsb
fidivrl
sti
add
roll
xor
jne
or
sbb
lds
xchg
jb
aas
dec
lea
jb
jbe
and
scas
sahf
fmuls
pusha
aad
cmpsb
add
leave
inc
cmpsl
mov
scas
inc
or
test
hlt
insl
scas
sub
mulps
shlb
pop
rorl
cmp
and
lret
int3
pop
dec
or
std
mov
icebp
fildl
scas
ljmp
pop
ds
imulb
mov
aaa
add
xchg
negb
dec
inc
rcll
ret
xchg
stos
in
data16
aaa
lahf
imulb
jg
mov
call
fbld
or
cmpsb
loop
jnp
fwait
in
rclb
loop
mov
insl
mov
aad
aam
imul
sahf
dec
in
out
mov
dec
stc
mov
jge
lahf
push
add
subl
sbb
cmp
lea
cmp
or
dec
movsb
sbb
push
push
push
lock
lea
decl
inc
xchg
les
dec
fnstsw
lahf
outsl
fldl
or
popa
xchg
lds
cmpsb
jns
xchg
jo
mov
mov
inc
xor
movsb
or
inc
inc
sub
mov
sar
test
popf
insb
mov
daa
sti
out
jp
add
in
sub
shlb
ret
sbb
sub
in
push
arpl
xchg
pop
repz
pop
orl
xchg
adc
clc
xlat
sahf
ds
dec
out
sbb
mov
sbb
popf
mov
mov
add
neg
loop
cmp
or
xchg
or
aaa
sub
dec
push
sahf
and
pop
sarb
mov
push
mov
fbld
stos
adc
clc
jmp
sub
dec
int
pop
pop
mov
jo
daa
clc
leave
dec
rcrl
mov
lret
push
stc
add
and
fs
lcall
adc
sbb
jl
enter
and
adc
adc
cltd
add
pop
mov
and
movsl
sbb
dec
out
lods
scas
and
add
addr16
xchg
int
shlb
cmp
ret
mov
adc
cmp
popf
cmp
dec
pop
sub
sub
or
adc
push
jbe
mov
dec
repz
ret
bnd
mov
cmp
arpl
xor
pop
xchg
dec
mov
xchg
push
mov
mov
sub
rclb
and
call
mov
and
shlb
adc
test
or
sbb
jae
inc
int
and
jne
add
jno
dec
pop
jne
pop
in
add
xor
add
inc
out
jecxz
xlat
mov
icebp
xor
xchg
push
mov
push
and
inc
out
push
sbb
mov
arpl
and
cmp
leave
xchg
cli
imul
lods
push
fnsave
enter
scas
xor
cmp
call
cmp
xor
es
push
call
dec
sti
cltd
call
das
sbb
mov
pop
push
sbb
sbb
fwait
in
les
fldcw
xor
bound
pop
imul
shl
loope
sbb
sbb
jne
or
cmc
or
daa
decb
push
sub
sbb
push
adc
pop
sarb
push
add
dec
mov
insb
fstpt
icebp
xchg
fdivl
loopne
jns
fnop
ss
jmp
les
je
cmp
pop
sbb
mov
push
jp
int
adc
inc
iret
cltd
push
sub
push
fisubs
pop
rcrl
popf
cmp
xor
fstpt
ss
lock
xchg
or
das
lock
xchg
fcomp
push
imull
ret
popl
xlat
adc
adc
pop
out
push
bound
clc
lea
test
ret
call
popl
idivl
mov
mov
mov
in
push
cmp
test
push
mov
xchg
dec
lret
mov
cmpsb
dec
add
insl
dec
or
mov
fisubs
repnz
sub
inc
pop
push
jo
push
arpl
das
sub
xor
sub
jne
adc
jp
sub
stos
dec
push
stc
push
mov
xlat
and
adc
adc
jns
mov
fldl
lahf
push
and
lahf
out
push
dec
out
fwait
movsl
jb
movsb
push
push
je
mov
jp
rol
and
xor
outsb
clc
or
pop
cmp
lods
dec
arpl
mov
je
ret
inc
gs
mov
test
lods
and
ret
lahf
push
add
enter
push
fs
mov
sub
adc
into
fistl
add
xchg
stc
gs
leave
fisubs
mov
fsubrl
ja
sbb
ja
xor
mov
bsf
mov
cli
mov
outsl
inc
cli
call
aam
lods
pop
ffreep
fiaddl
stos
or
test
push
mov
pop
sbb
out
js
jno
cmp
enter
xchg
insb
repnz
loope
mov
add
or
dec
fdivs
sub
aaa
outsl
fwait
jmp
add
imul
mov
inc
cs
or
cmpsb
xor
test
add
or
and
test
aas
and
mov
xorl
les
cwtl
inc
in
inc
push
test
mov
andb
dec
and
cmp
and
aas
ret
jmp
jb
adc
push
add
push
sbb
in
jmp
sbb
push
mov
lahf
xchg
and
data16
xchg
cmp
mov
dec
lahf
outsl
and
mov
sbbl
add
adc
imul
mov
jbe
push
sub
push
push
inc
pop
decl
push
fwait
sti
sbb
test
sub
cltd
dec
jns
testl
lock
jp,pn
es
cmp
mov
mov
jmp
adcb
mov
test
sub
in
ljmp
stos
and
cmp
lret
imul
inc
lret
imul
mov
out
jp
test
mov
add
ja
or
imul
int
jmp
jae
xchg
dec
lret
shrb
mov
and
fwait
mov
cmpl
dec
dec
sbb
mov
fsubs
in
rcr
stc
insb
or
fisttpll
push
and
sub
jg
fiadds
int
jno
jle
test
pop
mov
inc
std
xor
push
mov
popa
fs
mov
dec
je
jno
sub
lds
in
das
scas
push
cmp
mov
mov
fdivr
insl
cltd
and
or
movl
imul
mov
enter
cmpsb
mov
jnp
pop
mov
fcoms
stos
lahf
mov
in
je
repz
shrb
in
shrb
ret
xlat
shrb
pop
aad
pop
imul
sbb
arpl
add
loop
pop
test
xor
mov
bnd
add
test
sahf
jno
push
xchg
ljmp
jecxz
mov
xchg
mov
push
pop
or
cmp
mov
mov
jnp
sbb
cmpsl
mov
sarb
mov
xchg
jo
mov
and
xor
mov
pop
int
addb
and
push
adc
arpl
pop
outsl
push
mov
js
adc
sbb
cmp
ret
cmp
dec
subb
cmpsb
stos
fbstp
lock
push
ds
xor
cmpsl
out
leave
in
and
jp
push
imul
push
add
cld
jg
pop
jle
mov
xchg
sub
pop
push
scas
fbld
ret
imul
cmp
sarb
pop
xchg
loopne
es
aaa
outsl
scas
in
jp
sbb
addr16
ja
cmpsb
mov
sbb
mov
xchg
arpl
or
cmp
data16
iret
gs
cmp
push
jle
repnz
rcrb
mov
ret
clc
int3
push
dec
lds
in
sbb
sbb
dec
sahf
and
pushl
cmp
fdiv
and
pop
xchg
enter
int3
shrl
sahf
or
add
stc
sub
andb
in
sub
cmp
xchg
fiaddl
out
jge
and
adc
or
out
pusha
pop
loop
movsb
mov
add
mov
in
push
popa
je
or
adc
push
iret
sub
lahf
iret
rcrl
stos
mov
xchg
adc
sarl
add
and
jl
sti
and
dec
movsl
xchg
sar
xor
outsb
add
outsl
add
jmp
sbb
adc
mov
inc
mov
pop
adc
stos
jl
lret
xor
dec
dec
fs
ret
or
ja
in
ret
bound
sub
push
adc
mov
cmpsl
insl
stos
sahf
xchg
int3
aas
xor
ljmp
jbe
shlb
add
iret
jp
sub
test
xchg
jno
dec
in
das
pop
mov
xchg
adcb
lods
xor
mov
test
ret
int
sub
cmpsb
std
xor
lds
xchg
rclb
repnz
inc
js
les
shl
inc
push
arpl
or
xor
nop
adc
lahf
push
inc
shl
pop
leave
cmpsl
mov
pushf
jmp
push
in
inc
inc
js
lock
or
sbbb
pushf
dec
or
jmp
repz
xor
lock
sbb
add
pushf
fs
testb
idiv
pusha
and
inc
pop
pop
mov
rorl
pop
mov
repz
add
push
sub
rcrb
mov
dec
inc
stc
js
clc
and
or
and
sbb
nop
ss
and
in
ret
sbb
or
hlt
sub
aaa
xchg
and
sbb
sub
rclb
ret
mov
enter
test
inc
xchg
push
popf
mov
sbb
daa
xor
inc
fcompl
or
lcall
mov
mov
out
mov
fwait
lahf
and
jge
mov
enter
scas
addb
notl
pop
jp
loope
daa
sub
pop
mov
mov
jne
jnp
leave
inc
jbe
movsl
pop
call
xchg
sti
dec
cmp
adc
jno
std
fld
ja
insl
daa
pop
add
sub
subl
stos
pop
mov
add
scas
pop
push
incl
pop
xorl
push
jle
fsts
cmpb
lret
dec
sub
bnd
add
pop
insb
lods
ret
cli
and
jne
mov
sahf
jno
dec
and
aaa
mov
push
nop
ftst
daa
into
sbb
xchg
rcrb
mov
lahf
add
iret
mov
xchg
lret
push
pop
push
inc
in
sbb
push
lock
and
sbb
lock
mov
mov
cmpsb
pop
mov
loopne
mov
popf
fisttpl
cmp
push
mov
aaa
push
std
shl
imul
pop
outsl
into
ja
mov
xchg
jl
ja
push
dec
aam
and
push
inc
movsl
push
out
repz
clc
orb
and
std
mov
mov
insb
into
mov
xchg
sarb
popf
dec
in
and
sbb
sbb
shlb
in
mov
popf
rcrb
xchg
pop
pop
push
cltd
mov
push
xchg
aam
mov
jp
addr16
jle
add
ljmp
ljmp
push
pop
lcall
int3
mov
test
inc
test
fsubrs
ljmp
pop
fwait
mov
or
or
mov
stos
xor
movsb
dec
push
cwtl
dec
fs
cwtl
test
je,pt
xor
ss
aas
or
inc
cmp
cs
mov
dec
pop
mov
notl
push
jp
push
insb
sbb
andl
cld
xchg
adc
push
jecxz,pt
push
je
cli
gs
lret
fstpl
inc
arpl
sarb
and
rolb
cwtl
cmpl
std
in
test
pop
imul
les
lahf
or
and
jge
test
ja
out
adc
addr16
push
lcall
cmp
leave
inc
adc
inc
jge
and
in
mov
das
pop
setnp
in
pop
loopne
scas
in
bound
out
repnz
pop
test
xchg
int
add
cmpsb
push
dec
ljmp
pop
lcall
xchg
and
lret
jno
mov
sarl
mov
jnp
and
xchg
inc
lock
lret
stc
in
push
mov
in
fadds
or
repnz
jnp
sbb
shl
nop
shrb
fcompl
jecxz
sub
enter
stc
ljmp
or
add
push
aas
mov
or
add
imul
sbb
ds
mov
out
jmp
cmc
aam
xchg
xchg
push
sbb
out
fs
pop
pop
adc
sti
mov
push
arpl
xor
out
ss
test
inc
mov
out
sarl
cld
jg
dec
icebp
pop
popf
ljmp
popa
loope
je
xchg
js
aaa
inc
enter
outsb
push
bound
mov
push
pusha
mov
into
cmc
pop
mov
mov
jno
dec
pop
add
add
mov
andb
orb
insb
sahf
push
scas
notl
jp
iret
push
repz
lds
loop
ds
and
xor
xor
xlat
mov
loopne
inc
fidivs
out
enter
push
popf
mov
xchg
xchg
clc
out
inc
mov
aas
aam
in
call
jp
pop
mov
adc
rol
pop
sbb
mov
xor
mov
mov
mulb
dec
cmp
pop
xchg
sbb
push
sbb
pop
inc
faddl
data16
xchg
jmp
imul
cwtl
or
mov
jo
xchg
jp
mov
jp
jp
popa
stc
nop
addl
or
fadd
add
popa
jge
mov
shlb
test
mov
std
pop
sub
in
and
int
imul
aas
mov
sbb
adc
sub
dec
loope
stc
mov
push
aaa
add
cmc
mov
xchg
out
and
stc
xchg
std
out
add
push
xor
xlat
sub
test
sub
cmpb
dec
push
inc
jb
dec
push
fstpt
icebp
push
cli
mov
cmc
sbb
mov
xchg
jg,pn
jmp
or
adc
lock
push
dec
jl
jmp
lret
stos
jns
popf
and
adc
mov
push
sub
mov
nop
push
mov
arpl
sbb
and
fldl
sub
xchg
popa
les
scas
into
test
lea
idivb
pop
hlt
adc
add
in
popa
pop
into
test
adc
mov
sub
push
sahf
loope
clc
xchg
fisubs
mov
ja
push
fcmove
jo
or
jno
fiadds
addr16
mov
stos
scas
ret
into
ja
ss
fdiv
in
shll
lock
clc
cwtl
gs
mov
jb
js
out
aam
mov
int
adc
adc
sbb
jmp
and
scas
xor
mov
enter
sub
adc
push
iret
lret
rclb
cmp
daa
shll
ror
xchg
pushaw
mov
out
repz
mov
bound
adc
sbbl
daa
push
pop
pop
rcr
out
or
pop
sar
and
icebp
cld
inc
push
lret
mov
dec
sahf
lcall
sti
cmp
pop
jge
test
aam
sbb
rcrb
test
inc
xchg
inc
jmp
jae
mov
lahf
push
sub
xchg
insb
ds
mov
sbb
xchg
orl
arpl
push
ds
or
pop
outsl
cmc
adc
push
ds
out
sbb
add
mov
cmc
inc
mov
das
adc
sbb
orl
mov
popf
jo
sbb
xchg
ret
pop
aam
pop
lods
fcompl
dec
jbe
idiv
add
sbb
dec
aam
stc
and
test
hlt
mov
jno
lock
jb
lds
vpacksswb
and
repz
adc
fisttpll
sarb
or
mov
aas
pop
jp
std
inc
jns
pop
inc
dec
push
sahf
les
pop
cmp
dec
pop
and
rcr
not
orb
pop
xor
scas
out
clc
nop
pusha
in
pop
imul
test
daa
pop
ljmp
fsub
jb
or
mov
dec
std
sbb
pushf
mov
xor
stc
or
mov
mov
and
lret
test
xchg
mov
movsl
out
cwtl
push
cwtl
das
xchg
inc
jmp
add
stc
sbb
loopne
outsb
negl
popf
addr16
test
jmp
data16
jne
lea
cmp
cli
pop
pop
frstor
mov
jae
stos
inc
or
or
fwait
jg
nop
adc
dec
adc
cltd
ror
bound
push
int3
mov
add
stc
jecxz
out
ret
fst
je
xlat
mov
aaa
mov
ror
inc
imul
pushf
iret
inc
inc
mov
sub
fmull
or
nop
mov
lret
inc
sahf
sbb
sub
push
fisttpl
xchg
mov
or
and
mov
pop
pop
insb
int3
sbb
mov
add
sti
push
int
inc
mov
inc
jmp
push
xchg
xlat
mov
cmp
lret
xchg
sarl
jbe
push
xchg
jae
js
sbb
dec
enter
dec
add
test
mov
aaa
mov
or
popf
addr16
mov
leave
js
and
or
out
xchg
xor
sahf
mov
loopne
ret
in
inc
add
dec
mov
cmp
scas
iret
mov
cmp
aad
test
out
mov
int3
in
fiaddl
xchg
add
mov
adc
lcall
mov
out
cmp
jge
push
loop
pop
xchg
push
je
mov
imul
rcrb
stos
test
xor
test
sarl
xchg
sub
cli
loopne
lret
cs
popa
or
jmp
repnz
ljmp
cmp
push
and
stc
push
ficomps
jle
lcall
mov
rcll
daa
push
adc
or
test
adcb
pop
jbe
imul
xlat
cmp
les
cmpsb
mov
xchg
mov
or
in
hlt
xor
roll
push
scas
bound
std
lea
outsl
je
std
scas
cmp
es
imul
inc
xchg
jb
jae
inc
jne
imul
sahf
rcrb
cmp
leave
mov
xchg
adc
xlat
sub
repnz
sbb
pusha
mov
fadds
mov
push
mov
fadd
shrb
aaa
lods
and
push
cwtl
push
dec
xor
test
shrb
dec
aas
xor
push
pop
ret
jge
sbb
scas
inc
inc
loope
mov
pop
and
les
cmpsb
imulb
call
pop
leave
sahf
xor
mov
pushf
xchg
xor
pop
int
fistps
addr16
or
xor
in
mov
push
orl
std
and
in
ficompl
gs
outsl
nop
cmc
and
cmp
sbb
mov
mov
lcall
push
mov
popl
xor
testb
mov
sahf
loopne
iret
movsb
push
cmp
js
mov
out
and
ret
addr16
loope
das
cmp
sub
pop
fwait
js
sarl
or
int3
mov
mov
js
dec
outsl
fstpl
xchg
mov
or
jne
jl
ror
and
mov
int
push
fwait
or
cmpsb
jns
ret
jmp
mov
pusha
in
loop
pop
sbb
enter
popf
add
push
scas
fmul
or
in
ret
insb
sbb
ja
mov
mov
and
addr16
xchg
dec
popa
cmpsb
sub
psubsw
cli
jns
adc
sbb
pop
mov
push
lock
and
push
stc
mov
daa
jae
out
out
loop
xchg
aas
cmp
push
push
xchg
cmp
sbb
xchg
push
xchg
push
test
mov
fcom
out
or
add
mov
xchg
aas
rclb
mov
imul
aas
or
mov
ja
sbb
lret
adc
fnstcw
jo
mov
and
out
ljmp
cmpsl
lea
push
in
in
cwtl
push
cmp
in
idiv
ficoml
imul
add
sbb
sbb
xchg
jecxz
pushf
and
scas
gs
f2xm1
test
fs
ds
pop
cld
enter
int
ret
or
and
cwtl
mov
aad
add
sbb
std
inc
and
dec
push
push
push
out
fdivl
js
sti
push
cli
dec
daa
add
js
dec
dec
gs
xchg
fdivl
push
xor
add
sarl
sbb
jmp
xor
bound
jno
loope
fisttpll
imul
fstps
mov
mov
xor
cmpb
scas
sbb
and
sub
les
mov
inc
sbb
xor
mov
shll
jnp
shlb
mov
cli
adc
mov
in
push
sbb
lock
aad
fnsave
push
sbb
mov
testb
mov
inc
cld
popa
scas
sbb
stos
and
fs
lahf
idivl
mov
aam
mov
cltd
mov
callw
adc
mov
xlat
fwait
cmp
sbb
cmp
inc
adc
and
add
sbb
pop
push
std
jae
mov
and
mov
mov
mov
mov
jno
fildl
test
inc
andl
mov
popa
sti
jb
fmuls
mov
mov
int
dec
push
adc
out
js
in
dec
icebp
sahf
mov
imul
pop
push
fists
imul
fldt
sbb
xor
ret
or
jo
pusha
xor
inc
pusha
xchg
bound
pusha
add
or
inc
inc
inc
jg
xchg
lods
and
jge
and
stos
inc
push
inc
push
or
icebp
lcall
fdivl
xor
mov
aas
in
popa
mov
mov
int
mov
mov
mov
push
xchg
pop
sub
xor
jp
lahf
add
test
shll
leave
shr
mov
pop
movsl
sub
mov
mov
lret
fldenv
cmp
inc
pop
bnd
push
push
mov
int3
js
mov
sahf
call
ror
cmp
fisubrl
jb
sbb
jno
mov
stos
dec
mov
fisttpl
das
negb
inc
fildl
mov
popa
dec
and
inc
shll
cmc
push
sub
ja
andl
mov
push
mov
lret
or
xchg
add
std
xor
ljmp
xchg
push
and
arpl
or
pop
jns
inc
push
loop
mov
decl
dec
addl
lds
cltd
out
mov
cld
and
jp
mov
sti
out
pushf
fisubrs
je
outsb
mov
cli
sub
jmp
ss
hlt
xchg
jecxz
mov
aaa
or
mov
pop
pop
test
or
fcmovb
mov
addr16
cmp
adc
sti
fwait
pop
outsb
adc
or
xchg
mov
daa
lcall
adc
in
sbb
in
hlt
and
mov
push
ds
push
in
xchg
loope
or
xor
movb
cld
or
push
lds
cmpsl
xor
ret
icebp
movsl
fistps
daa
cmp
push
cli
clc
fadds
cmp
ds
adc
sti
ds
jmp
adc
and
cltd
arpl
movb
dec
imul
mov
dec
mov
mov
jo
pop
inc
xorb
push
in
or
and
es
push
xchg
shll
xchg
daa
js
inc
in
mov
mov
shr
mov
in
cmc
cmpsb
in
cmp
sbb
jb
mov
jne
dec
xchg
and
mov
ret
xlat
mov
jmp
xchg
jne
xchg
mov
hlt
jns
fbld
jg
out
jnp
outsb
jle
fdivl
push
hlt
xchg
fnstcw
movsl
fists
lea
adc
lea
xor
inc
mov
sub
notb
and
xchg
cmp
jo
loop
xor
imul
push
stc
xchg
in
sbb
in
divl
jbe
adc
mov
das
mov
xchg
nop
mov
xor
pop
pop
sbb
cmp
jno
lods
xchg
dec
mov
sbb
pop
xor
adc
cs
or
mov
pop
int3
pushf
in
or
jne
dec
fistl
cmp
push
in
test
pop
in
mov
xor
std
repnz
fwait
dec
pshufw
dec
mov
mov
in
or
pop
pop
sbb
arpl
lgs
mov
repnz
test
inc
pop
pop
mov
lds
xchg
cmpsb
into
xor
cld
mov
leave
mov
imul
inc
jg
bound
int3
enter
xlat
psubusb
outsl
cmpsb
cmpsb
in
scas
sarb
scas
jmp
mov
xchg
in
sbb
xchg
mov
cs
fmull
sub
or
lock
xor
or
mov
arpl
mov
jmp
xlat
popf
incb
inc
mov
mov
dec
pushf
xor
xor
jecxz
gs
in
ja
insl
pop
int
jno
dec
scas
mov
push
jb
pushf
add
in
pop
test
push
jge
faddl
stc
daa
pop
scas
mov
popa
mov
mov
int
clc
out
mov
or
push
mov
adc
loope
outsl
mov
jg
lock
adc
xor
test
push
js
mov
pop
and
popf
stos
pop
push
aam
icebp
hlt
add
jecxz
lods
aas
out
test
pop
inc
pushf
fildl
add
and
pop
or
jne
je
mov
aam
xor
inc
in
subb
fistpll
mov
in
les
mov
push
in
mov
cmp
xchg
mov
cmp
int3
xchg
ja
pop
cmp
jle
dec
adc
int3
adc
ss
xchg
jge
shll
xchg
sbb
jnp
es
jne
pop
push
je
and
add
js
cmp
jmp
in
incl
cmp
xchg
jno
out
xchg
adc
or
xchg
movsl
mov
push
cmp
lahf
mov
mov
cmpsl
cmpsb
mov
cltd
sub
cmp
hlt
add
daa
icebp
orb
mov
pop
ret
stos
mov
inc
mov
fistps
fidivrs
jb
add
push
je
jp
mov
push
int3
sub
xlat
mov
fsubl
jmp
fs
push
das
btr
leave
ja
pushf
xchg
xchg
bound
cmp
mov
loope
xchg
mov
or
xchg
add
jno
lea
xchg
pop
mov
jge
adc
mov
push
stc
mov
xor
idivl
fwait
repnz
loope
rorl
sarl
or
sbb
test
jle
dec
push
dec
js
gs
ljmp
insl
int3
lret
and
jmp
jae
sub
jae
push
inc
sarb
int
cmc
inc
lcall
mov
mov
xchg
mov
jne
js
negb
pop
jb
call
push
push
xchg
push
and
cld
mov
inc
sub
pop
or
mov
lret
dec
fistl
and
sbbb
jecxz
cltd
jle
lret
or
pushf
sbb
push
jae
jns
rorl
pusha
push
add
cmpsb
push
cmp
aaa
push
repz
loop
sub
lret
imul
jg
push
dec
cld
aaa
push
loop
sub
les
sbb
inc
adc
inc
sub
fs
xchg
ret
dec
lock
xchg
je
test
daa
data16
lret
hlt
pop
xchg
mov
movsb
mov
mov
cwtl
daa
xchg
leave
mov
add
mov
sbb
xor
fs
dec
jl
mov
xchg
push
pop
dec
add
or
mov
popa
inc
les
orb
out
pop
dec
xchg
jle
pop
out
push
in
xor
pop
dec
add
fists
popa
test
loope
inc
sub
js
mov
dec
jp
enter
and
sbb
inc
call
mov
in
mov
pop
add
out
xor
fs
inc
adc
test
sbb
les
xchg
adc
mov
lret
and
fldcw
mov
sub
add
lods
int3
push
shrl
sbb
and
push
mov
jns
mov
mulb
dec
mov
mov
or
add
add
in
sbb
dec
xchg
adc
cltd
jne
sbb
sub
mov
jbe
mov
push
sub
dec
or
stc
repz
xor
dec
push
or
pushf
xor
mov
out
fcoml
fmuls
push
pushf
repz
ss
fcomp
jo
outsl
es
xchg
dec
fsts
lock
jge
or
cmp
ja
shll
mov
sbb
add
push
cli
mov
sbb
in
and
xor
jnp
ja
bnd
push
stos
ds
loopne
rclb
adc
dec
jb
fisttps
push
stc
ffree
addr16
ja
out
mov
sbb
jle
iret
cmp
xchg
mov
adc
cmp
decl
add
mov
gs
popf
and
shrl
mov
lods
mov
andl
xlat
mov
add
insb
xor
cmpsl
outsb
xchg
xor
xchg
xchg
add
sbb
cmp
mov
movups
es
cmp
in
scas
stc
cs
lock
or
imul
push
mov
mov
lods
lods
adc
mov
sbb
popf
addb
es
pop
stos
lock
inc
lods
mov
out
test
or
jae
int3
jno
js
cmp
outsb
imul
fwait
push
es
arpl
push
scas
popa
addr16
test
pusha
push
pop
scas
sti
ret
fwait
xchg
into
shld
mov
inc
mov
out
in
insl
sub
iret
fldl
or
inc
lods
stos
or
xlat
bound
stos
xchg
and
repz
jo
rolb
push
jmp
jb
sti
cltd
js
enter
pop
jno
dec
stos
fildl
adc
test
xchg
and
xchg
fcoms
xchg
and
hlt
xchg
aas
hlt
fsubl
cmp
inc
jmp
addb
push
sub
clc
pop
in
nop
loop
jecxz
and
jno
aam
add
pop
jecxz
add
jb
sbb
inc
fstpl
mov
dec
fcmovb
jmp
pop
negb
imul
call
data16
push
lret
dec
shrl
loop
xor
cli
cmp
inc
test
jno
repnz
stos
adcl
in
in
cmpsw
enter
fisubl
inc
adc
xchg
lods
mov
inc
enter
lods
xchg
hlt
mov
sub
cmc
inc
push
js
sub
add
pop
scas
lock
lret
mov
mov
push
sub
xchg
or
fldt
lcall
xchg
add
mov
aas
aas
inc
xchg
je
fisubrs
movsb
sti
pop
inc
jbe
pop
scas
add
pop
nop
push
push
cmp
fwait
adc
adc
xchg
pop
sub
sbb
pop
mov
fst
fs
outsl
mov
xorb
sub
add
mov
ss
xchg
out
dec
add
cs
sbb
in
pop
and
sub
enter
jae
fcmovnu
je
jecxz
xchg
sub
sahf
clc
stc
cmp
sbb
imul
dec
lods
pop
inc
xlat
arpl
pop
jp
dec
pop
xchg
jecxz
sub
and
outsb
aas
repnz
fmull
pop
stc
sbbb
test
cmp
or
lcall
ljmp
push
mov
stc
mov
add
fcoml
shrb
push
call
pop
pop
jae
addl
push
adc
ficoml
inc
xchg
std
add
pop
cmp
arpl
and
aam
ficomps
loopne
stos
jo
push
test
js
sar
mov
sub
xchg
cs
popa
test
ljmp
fwait
test
dec
cld
pop
xchg
loop
pop
test
loop
pop
mov
in
cwtl
sub
in
sbb
ficoms
cltd
aad
nop
sub
or
mov
rcll
inc
jp
arpl
popa
jb
ljmp
mov
enter
mov
cwtl
push
sub
pop
pop
and
ljmp
sub
imul
out
in
mov
push
xchg
pop
popa
push
dec
mov
and
scas
fsts
shrb
ficomps
or
data16
clc
inc
pop
mov
rorl
xor
repz
push
mov
fwait
mov
xor
shrb
sbb
sbb
pop
imull
fldcw
push
jge
xor
sub
sbb
adc
stos
aad
loopne
ret
mov
nop
and
mov
add
out
xor
jl,pn
pushf
out
ror
call
jl
mov
sbb
jge
sub
xor
jge
adc
popf
pop
ret
stos
aas
test
inc
pop
lahf
push
hlt
cmpsb
pop
sbb
sbb
popf
jecxz
lret
mov
mov
pop
jno
aaa
push
imul
xor
dec
stc
add
cs
inc
push
pop
mov
pusha
call
leave
pushf
jo
loop
pop
mov
xchg
out
pop
mov
test
rcl
mov
inc
mov
mov
pop
scas
inc
stos
aam
mov
mov
jl
cmp
dec
xchg
mov
dec
cmp
fildll
cwtl
mov
add
add
movsl
fidivrs
aam
push
fs
and
dec
mov
add
leave
sub
jno
lcall
inc
ss
lods
bound
clc
out
pop
and
nop
xchg
sbb
cmp
fcoml
fadds
out
jbe
mov
dec
jmp
xchg
stos
sbb
and
mov
movl
cmpl
sbb
push
daa
movsb
cmp
mov
sub
or
jecxz
jbe
aad
add
sbb
in
jl
mov
adc
cmp
dec
lahf
cwtl
bndstx
int
jg
or
sbb
mov
xchg
and
stos
lock
inc
call
jp
mov
mov
lahf
lea
push
out
jo
and
adc
or
mov
pop
test
jge
test
xchg
mov
loope
add
lcall
adc
mov
xor
lcall
xchg
mov
icebp
and
xchg
ds
cmpsl
outsb
cmp
sbb
push
out
loop
ret
or
sub
mov
sti
dec
mov
xor
movsb
loope
jg
fcomi
shl
mov
les
sahf
inc
hlt
xchg
fs
mov
rolb
mov
sbb
cmc
out
or
inc
lods
pop
xchg
shlb
pop
dec
xor
dec
int
scas
pop
push
mov
clc
xor
add
pop
insb
pop
xor
jg
sahf
fwait
std
or
pusha
push
mov
leave
es
adc
dec
pop
add
adcl
pop
jle
pop
or
daa
pop
pop
aas
test
aaa
repz
and
mov
testb
or
or
adc
add
dec
jno
dec
xor
shrl
loopnew
lock
dec
mov
imul
push
orl
call
sbb
inc
pcmpeqw
fwait
leave
outsb
pop
jne
bound
jb
inc
test
imul
ja
xor
filds
mov
cmc
arpl
push
outsb
pop
push
mov
jo
cli
bound
push
mov
xchg
fiaddl
xchg
cmp
push
mov
lahf
pop
mov
and
adc
xorb
sti
test
mov
add
les
int
fwait
divps
add
std
push
mov
push
jp
fisttpll
fwait
mov
lods
sbb
notl
add
mov
mov
xor
dec
cmp
adc
mov
push
jmp
ret
data16
in
ja
mov
push
xor
sub
push
sbbb
lret
fildl
sbb
pusha
dec
adc
aas
test
xchg
xchg
cmp
repnz
ljmp
cmpb
lcall
call
sub
adc
push
shll
adc
decl
loopne
push
cltd
je
adc
push
cltd
adc
les
pop
jmp
sbb
push
filds
or
and
popf
sti
sbb
scas
das
das
lock
inc
xor
push
outsl
fs
or
lahf
pop
cmp
xor
xchg
push
mov
dec
lea
jo
or
xchg
mov
mov
aaa
mov
xchg
loop
shrl
insl
adc
leave
aaa
movsl
jmp
test
push
jmp
loopne
into
stc
test
loop
inc
dec
das
sub
sarl
add
push
arpl
lret
stos
mov
xor
xchg
sub
sbb
push
pop
inc
lds
ja
mov
mov
pop
sub
sub
std
dec
fistl
lock
test
leave
hlt
pop
movsl
rcll
in
out
jne
sahf
push
jp
adc
mov
fnstsw
jmp
stos
out
lcall
lret
pop
test
dec
cli
jmp
popa
stc
xchg
mov
in
add
mov
lret
loope
sub
imulb
dec
lods
out
dec
push
push
sbb
outsl
in
in
cmpsl
and
pop
inc
mov
xchg
fisubl
les
add
popf
xchg
iret
sti
scas
roll
jp
jmp
and
jb
shrl
stc
mov
cmp
aas
lds
cld
jno
xchg
shl
fimull
pop
ja
dec
mov
in
test
fwait
addr16
xchg
sar
xchg
xchg
test
ret
and
inc
out
jne
pop
mov
fdivrl
inc
ret
xor
and
push
inc
xor
nop
add
pop
outsl
push
divb
and
jb
jg
sub
adc
adc
dec
imul
test
imul
dec
sbb
movb
mov
xchg
out
add
cld
pop
into
mov
cmp
or
rcl
rol
mov
hlt
popa
test
mov
mov
add
sub
dec
mov
xchg
mov
xchg
jmp
inc
fidivrs
pop
ljmp
mov
xchg
ror
repz
daa
fstl
sub
jmp
cli
hlt
into
cli
cld
sahf
js
adc
push
daa
mov
nopl
sbb
sub
frstor
enter
mov
hlt
sysexit
mov
roll
adc
repnz
aaa
repz
ljmp
test
iret
xchg
cli
fld1
pop
int
hlt
dec
cmpb
xchg
add
dec
sahf
pop
pop
out
js
outsl
sub
pushf
iret
imul
xor
lock
popf
repz
jne
loopne
cmp
mov
cld
dec
push
cltd
arpl
loope
rolb
add
es
mov
pop
stos
mov
mov
out
xor
lds
and
xor
pop
loope
aas
inc
jg
add
jmp
jmp
and
int
iret
mov
pop
cwtl
inc
add
xor
xor
xchg
nop
call
push
pushf
subb
aam
lahf
jno
and
out
inc
mov
shrb
adc
pop
mov
cmp
test
outsb
push
mov
xchg
push
movsb
call
lcall
inc
mov
sub
test
repnz
repz
fsubp
pusha
xchg
pop
cmp
sub
inc
dec
inc
add
xchg
pop
cltd
ffree
retw
cmp
and
sbb
mov
in
push
adc
sub
mov
rcrb
stos
lods
push
fstl
mov
popa
outsl
iret
aaa
aas
xchg
push
fidivrs
mov
cmpsb
sbb
test
dec
daa
jne
xchg
push
sbb
bound
or
inc
mov
orl
stos
outsl
mov
or
inc
andl
scas
xchg
mov
jp
popf
test
cltd
mov
incb
cmc
int3
and
dec
adc
jnp
sub
clc
nop
mov
out
stc
or
sub
mov
jno
out
adc
mov
adc
into
nop
push
mov
jmp
xchg
scas
adcl
pusha
int3
dec
sbb
mov
sbb
xor
sub
lds
inc
aas
mov
mov
dec
popa
movsb
dec
jae
pop
std
push
outsl
addb
insb
sbb
ret
ljmp
inc
jnp
add
out
xchg
int3
lldt
rcll
orl
jle
loopne
jl
add
and
adc
divb
inc
cld
cltd
lcall
popa
add
lahf
fdivr
mov
gs
dec
cmp
iret
xchg
dec
cmc
pop
push
fisubrl
pushf
push
mov
xchg
lock
jnp
insl
pop
cmpsb
sub
mov
dec
jne
std
push
inc
pop
dec
int
or
mov
cwtl
ss
sub
dec
and
mov
cld
roll
and
or
inc
sbb
icebp
sbb
dec
sub
and
jnp
mov
sbb
sub
push
or
and
lea
jmp
xor
cmp
or
or
aaa
dec
jns
cmp
mov
dec
fmuls
lcall
pushf
cmpb
ds
andb
xchg
push
or
jno
xor
adc
add
inc
inc
jno
out
cmpsb
rcrl
dec
cmpsb
sbb
dec
mov
push
mov
add
jae
inc
lods
jecxz
inc
test
dec
lods
sub
sub
and
stc
or
aam
sub
jle
mov
adc
lcall
mov
loope
xlat
pop
jbe
arpl
adc
aam
jbe
addb
or
cmpsb
divl
insb
or
fildl
mov
add
fidivrs
xor
leave
cmp
cmpsl
cmp
pop
out
imul
popa
ds
mov
mov
sahf
into
leave
and
sbb
ljmp
add
fmull
in
cmp
or
aad
mov
dec
addr16
and
test
inc
mov
pop
ret
shrl
ret
aas
ljmp
or
test
xchg
dec
cmp
out
and
out
pop
sub
mov
sub
ret
pop
push
jnp
es
mov
out
loop
repz
mov
dec
xor
sub
xchg
jbe
syscall
jo
xchg
out
dec
imul
in
and
or
pop
gs
aam
add
div
cld
xor
add
paddsw
ficomps
jno
and
mov
add
mov
stos
icebp
scas
pop
lahf
jo
pop
lret
inc
cmp
cmp
dec
mov
popf
popa
clc
stos
adc
sub
int
dec
mov
fcmovu
pop
dec
jecxz
rclb
xor
data16
cld
aas
jns
mov
jns
rolb
rorl
es
ss
sub
sbbb
fwait
or
outsl
pop
or
stos
stos
mov
push
mov
pop
addr16
dec
adc
lods
movb
sub
js
mov
or
in
nop
loopne
or
sub
sar
aam
testb
aam
jnp
sar
xchg
cld
es
xchg
leave
in
aam
push
xchg
sub
movsb
pop
mov
or
push
push
mov
push
xchg
loop
sbb
and
loopne
dec
imul
sbb
outsb
lea
xchg
js
mov
xor
int3
test
jne
jae
and
or
cmp
xchg
push
xchg
enter
fcoms
imul
jg
xlat
int3
push
mov
mov
inc
mov
cmc
lds
andl
pop
add
or
in
jmp
adc
imul
inc
leave
or
mov
mov
data16
out
mov
repnz
sbb
fs
ret
mov
mov
mov
lods
jg
add
insb
and
xchg
cmpl
idivl
cmp
repnz
jnp
push
inc
push
jmp
sbb
pop
cmp
mull
icebp
rcrl
arpl
das
jb
mov
cmp
hlt
pop
sub
in
addb
jp
sub
xchg
clc
mov
push
jne
sti
pop
mov
inc
stos
and
xchg
ds
xchg
adc
addl
lods
add
sahf
rclb
fmull
into
lret
dec
pop
fisttps
or
cmp
cmp
fstl
xor
sub
push
or
call
test
in
push
and
shll
fnstsw
lea
es
in
sbb
dec
out
xchg
xchg
ret
inc
inc
sahf
orl
jb
jb
outsl
inc
adc
js
popa
test
lret
sub
cmp
pop
lea
xor
mov
pushf
lods
cmp
aam
cmp
jno
movsl
and
jnp
nop
cmp
insl
cmp
mov
mov
or
add
adc
xor
cwtl
push
ficoms
mov
out
pop
cmpsb
and
lea
aaa
pop
addr16
jp
mov
jl
iret
stos
or
inc
adc
mov
fistpl
cmpb
adc
mov
ret
or
mov
mov
into
cmp
test
repnz
rclb
dec
call
inc
pop
push
push
or
fbstp
mov
push
int
test
jno
inc
pop
fwait
and
outsl
out
jno
xchg
into
adc
inc
push
lods
dec
add
xor
jnp
xor
or
cmp
notb
shl
scas
test
out
push
jnp
mov
or
test
aad
push
mov
adc
add
es
push
mov
mov
fdivrs
push
dec
mov
xchg
cltd
mov
mov
decb
mov
loopne
not
xor
out
jmp
pop
testb
adc
dec
jecxz
shll
icebp
xchg
subl
repnz
push
adcl
sbb
pop
lret
sub
xchg
out
sub
dec
movsb
xchg
cmp
mov
xor
jo
lds
jns
mov
jno
popf
add
scas
push
stos
sbb
daa
xchg
or
jnp
mov
jmp
ljmp
or
mov
and
pop
pop
xor
scas
add
adc
sub
ss
cld
adc
pushf
jl
fmull
lods
cmpsl
or
scas
lcall
stos
mov
out
mov
sub
mov
mov
add
lea
cmp
sbb
loop
pop
cmc
out
cmpsb
push
loope
push
pop
mov
pop
repz
xlat
ret
icebp
out
les
pop
movsb
ss
jnp
jg
jg
sbb
imul
rcrl
lret
out
in
jg
les
ret
imul
pop
mov
pop
mov
std
mov
sarb
in
shll
rcrb
dec
repnz
pop
mov
cmp
shr
je
push
sub
xchg
mov
stos
adc
xchg
mov
mov
sbb
or
mov
or
mov
fisubrl
mov
add
fdivrl
in
add
xchg
test
and
fstpl
stos
mov
pusha
xor
mov
add
les
gs
mov
cmp
ret
cwtl
dec
mov
fcomps
add
mov
pop
aam
das
icebp
xchg
jno
shrb
fcoml
mov
push
cmpsl
enter
mov
jmp
movsl
lahf
jp
dec
out
ffreep
mov
mov
cwtl
fcoms
insb
jp
pop
ss
frstor
lods
call
and
lds
adc
push
mov
mov
scas
pop
add
test
mov
lea
clc
push
popa
movsl
lea
cmp
test
sti
adc
int3
jg
adc
inc
pop
xor
out
adc
push
cmp
or
fsubl
ja
push
jecxz
mov
inc
sbb
cmpsb
pop
jae
lods
int3
cmp
stos
test
xchg
xor
cli
in
xor
adc
xchg
push
icebp
clc
lret
and
adc
xchg
daa
mov
xchg
lods
or
sbb
cmp
mov
sarl
sub
sub
pop
rorb
xchg
jns
les
hlt
sub
mov
cmp
loop
add
std
or
aad
sbb
bnd
adc
pop
mov
jns
clc
add
pushf
out
or
jbe
and
js
add
lods
in
push
lret
fbld
adc
js
rorl
dec
push
enter
inc
jmp
xor
lds
hlt
jmp
and
sahf
scas
mov
pop
dec
push
sbb
mov
out
lea
xchg
and
mov
jno
or
inc
add
lods
out
pop
in
scas
mov
jnp
inc
mov
imul
fisubl
xor
jbe
cmp
mov
sbb
sahf
cltd
xlat
movsb
pop
add
jecxz
out
cs
jge
fbstp
pushf
push
out
test
out
mov
mov
outsl
scas
outsb
ds
int
xchg
cmc
stos
stc
outsl
inc
js
es
scas
gs
std
mov
pop
int
bound
test
cmp
xchg
jmp
in
mov
js
pop
add
out
fs
push
or
or
imul
cmpsb
and
inc
mov
push
mov
fdivrs
arpl
xchg
dec
imul
ret
adc
adc
lahf
out
xchg
repnz
dec
sarl
xlat
outsl
test
jns
cmp
fldcw
insb
sbb
mov
rcrl
cmp
ficomps
cmp
dec
pop
adc
pop
jo
or
das
push
xor
dec
stos
cmp
dec
dec
add
popf
cltd
dec
jg
js
push
stos
adc
mov
jle
and
xchg
lea
add
inc
mov
filds
jp
lods
loopne
jle
xchg
pop
cmpl
xor
push
mov
repnz
mov
jge
mov
jmp
mov
aas
mov
mov
push
cmpb
mov
dec
daa
jmp
or
push
push
add
xchg
scas
out
add
movsl
fisubl
data16
push
dec
pop
mov
pop
add
inc
or
push
sbb
fmuls
lds
ljmp
xchg
in
dec
sbb
cmc
cmp
cwtl
pop
adc
fistps
xor
lea
pop
and
push
jns
popa
xor
push
aad
push
ret
lods
jle
mov
mov
sbb
sbb
aas
dec
mov
cmc
sub
mov
lret
and
ret
sub
outsl
fnstcw
gs
and
push
lret
stos
dec
in
outsl
loop
out
fs
scas
dec
push
cmp
lods
jno
movsb
ss
ljmp
push
icebp
sbb
arpl
out
mov
pop
mov
das
dec
xchg
pop
scas
add
fs
push
mov
lods
in
into
pop
cmp
push
mov
sarl
aad
and
pop
sarl
std
push
jp
fidivs
test
movsb
sti
sub
fldcw
fs
lcall
jmp
push
data16
inc
into
gs
lods
sahf
xchg
inc
scas
rcll
add
lret
stc
dec
sub
mov
sub
out
stos
adc
rcr
add
mov
fstl
test
scas
sbb
jg
mov
cmc
inc
rorl
or
in
or
lcall
in
fistpll
dec
out
or
in
test
insb
imul
inc
adc
out
outsl
mov
lods
das
pop
sbb
mov
push
add
out
adc
jmp
jl
rorl
cld
mov
or
sub
mov
pop
testl
inc
mov
repz
jmp
pop
fimull
loope
xchg
ja
aad
pop
inc
out
call
and
es
sub
daa
repnz
out
jae
jmp
lds
aad
xor
pop
repnz
test
loope
xor
outsl
pop
rorl
pop
sarl
scas
dec
adc
pop
leave
and
push
imul
sub
push
imul
mov
out
sub
push
lahf
outsb
mov
adc
jp
lea
in
cmp
in
rolb
adc
cmp
ss
addr16
jnp
jecxz
fisubs
add
outsb
ja
popa
xorl
sub
xlat
add
out
outsb
in
pop
lock
aad
outsl
xchg
sub
je
frstor
test
loop
ret
push
xor
mov
ja
jg
jns
cmpsl
cs
aas
and
xchg
leave
iret
fs
jle
jo
test
insl
fwait
xor
cmp
xchg
inc
mov
dec
ret
or
dec
es
push
stos
mov
add
or
or
push
call
jp
sbb
mov
lods
test
xchg
and
xchg
lret
test
stos
jp
out
fs
repz
mov
cmp
ljmp
bound
xor
mov
frstor
jb
pop
je
and
xchg
inc
andl
test
test
fnsave
dec
or
pop
sahf
faddl
sarl
mov
repnz
daa
jnp
mov
das
xchg
mov
mov
mov
sbb
pop
inc
jg
dec
and
lds
pusha
push
cwtl
mov
inc
jns
mov
das
es
pop
push
lock
sbb
pop
in
insb
ret
jmp
or
or
xchg
jg
fistpll
cmp
rolb
inc
cmpsb
push
subl
and
test
orl
pop
clc
cmpb
or
pop
rcr
ret
add
icebp
sar
outsb
adc
or
push
sti
inc
mov
xor
test
outsl
jo
inc
popf
and
nop
xorl
lahf
sub
into
int3
ljmp
sbb
call
and
push
out
sbb
ret
mov
sbb
fmuls
add
xor
out
push
out
push
ret
mov
dec
inc
mov
jae
jbe
out
fwait
mov
repnz
mov
cld
sub
sub
push
cmp
push
in
or
adc
iret
fs
push
jle
sub
mov
xchg
stc
sbb
fildl
fwait
mov
and
or
push
xor
inc
xchg
xchg
stos
mov
xchg
pop
hlt
mov
out
push
add
xor
mov
xchg
pmaddwd
lahf
push
jmp
out
scas
xchg
lods
jle
lods
cs
jbe
mov
mov
push
dec
test
adc
or
aas
stos
pop
js
cmpsl
shlb
xor
cmp
iret
inc
mov
xchg
cwtl
jne
iret
sub
jbe
mov
out
fimuls
push
sahf
jb
popf
mov
inc
std
movsl
mov
dec
push
jne
xor
xor
inc
jg
cmp
sti
out
and
test
cltd
ss
fisubrl
aam
icebp
push
sbb
add
mov
js
push
popf
lods
add
xor
imul
mov
leave
fld
xchg
stos
mov
xor
or
dec
add
addr16
mov
out
mov
lret
nop
aaa
andl
movntq
out
add
sub
jg
outsl
xor
xchg
sbbb
rcrl
pop
out
xor
jp
dec
mov
mov
inc
and
fmuls
mov
mov
cmp
jge
inc
xchg
xchg
push
xchg
mov
rclb
fsts
jnp
ss
push
sub
aam
mov
es
xor
clc
mov
call
xchg
xlat
xchg
ss
add
lret
mov
and
aam
lds
mov
and
pop
je
cmpsb
and
add
jle
aad
inc
pop
sub
scas
and
adcl
push
orb
pand
stos
les
shll
sbb
mov
rolb
and
jp
pop
sar
or
mov
adcl
outsl
mov
pushl
cmpsl
shll
mov
xchg
mov
cmpl
pop
test
pop
sar
test
jge
shll
mulb
arpl
fadds
jbe
cmp
js
mov
jno
jp
cltd
icebp
adc
dec
xlat
je
or
repz
test
imul
or
xor
dec
push
arpl
dec
lock
pop
mov
pop
sbb
imul
enter
js
stos
shll
rolb
jno
scas
stos
mov
les
loopne
aam
mov
inc
les
lds
cmp
jle
mov
nop
inc
push
shll
imul
rcl
and
and
cmp
sar
adc
inc
jg
and
mov
mov
push
mov
inc
push
cmp
inc
xchg
imul
movsl
and
ret
dec
sbb
pop
jns
jnp
test
stos
mov
inc
ja
rcrl
and
loopne
stc
cmp
call
data16
push
mov
mov
dec
or
out
add
add
sahf
adc
or
aaa
aad
cmp
addl
and
push
fwait
nop
xchg
cmp
and
push
lret
sbb
adc
xchg
mov
bound
fstl
mov
rcrb
cld
adc
rolb
cmp
movsl
fsubrl
xor
push
fcoml
dec
vmread
clc
inc
mov
cli
lcall
ret
adc
adc
inc
shlb
aad
cmc
icebp
push
push
out
sahf
inc
out
cmp
aaa
and
or
cwtl
push
push
mov
lret
stos
and
sbb
test
fwait
es
lock
add
int
and
pop
push
inc
aaa
pop
cmp
mov
pop
jle
adc
dec
mov
cmp
lods
pop
pop
adc
inc
mov
js
or
ja
inc
int
xlat
jmp
push
stc
roll
int3
mov
xchg
mov
or
xchg
mov
dec
hlt
dec
adc
sub
cmp
fdivp
cmp
out
sbbl
adc
sub
inc
mull
mov
pop
inc
bound
bswap
jecxz
push
insl
or
jb
inc
sbb
std
pop
es
andl
xchg
scas
bound
xchg
outsb
push
inc
int
pop
testl
lret
push
xchg
mov
aas
stos
std
cmp
mov
lods
inc
loop
mov
mov
cmp
mov
fdivs
unpckhps
add
icebp
imul
push
push
pop
inc
in
movsl
xchg
sub
dec
repz
fistpl
in
mov
outsl
js
mov
mov
mov
adc
and
pushf
shll
jg
sub
push
mov
pop
mov
adc
lret
adc
stc
push
cmp
leave
sbb
push
dec
lds
push
dec
jge
pushf
mov
or
mov
xor
frstor
pop
mov
xchg
cwtl
sbb
xor
sbb
rclb
xchg
mov
push
pop
pop
xchg
outsl
xchg
pop
ljmp
dec
adcb
cli
xor
cs
mov
sub
andb
xchg
adc
lcall
and
ret
fucom
gs
adc
js
ret
mov
mov
inc
int3
add
cltd
mov
jg
mov
outsl
xlat
iret
push
push
ja
cli
cli
lods
add
scas
pop
je
push
ds
aam
inc
hlt
adc
icebp
jns
sub
clc
mov
lods
cwtl
jo
pop
inc
stos
out
rorb
in
int
test
movsb
mov
aam
dec
rcl
add
cmp
test
or
popf
aaa
cmc
jae
notb
jge
adc
bound
pop
mov
or
or
lahf
dec
or
add
or
xor
outsl
mov
jecxz
ss
das
shrl
sub
enter
popf
add
or
ja
push
data16
sti
pop
xchg
dec
mov
xchg
test
adc
hlt
sub
add
pop
jno
mov
test
adc
test
jle
fstl
mov
ds
fmuls
sbb
sub
fdiv
mov
xchg
fsubrl
cld
mov
push
jg
and
and
fildll
test
sub
jno
scas
test
std
mov
cmp
addr16
rorb
int
ret
arpl
xchg
mov
addr16
cmpsl
cmp
into
pushf
in
inc
sbb
cmpsl
test
mov
adcb
mov
test
fcoml
filds
andl
cs
pop
pop
das
jo
aam
adc
push
inc
mov
scas
jmp
lds
icebp
mov
rcl
dec
dec
pop
test
jnp
aad
test
pop
mov
push
adc
pop
add
sbb
stos
outsl
dec
adc
ljmp
sti
sub
icebp
xchg
pusha
push
js
shl
in
mov
and
repnz
xor
sub
pop
ds
test
and
xor
inc
fldl
aas
xchg
gs
repz
fnstcw
cld
jecxz
xlat
sub
out
add
adc
aas
out
gs
sbb
mov
leave
pop
inc
inc
aas
ret
push
push
push
insl
mov
repnz
out
out
sub
lret
stos
loopne
pop
push
mov
jg
xor
test
mov
rcrb
outsl
inc
inc
mov
fmul
xchg
lds
ficomps
cwtl
jno
cld
scas
lock
cli
icebp
mulb
jae
and
jb
mov
jp
add
test
mov
sti
xor
scas
adcl
sbb
adc
rcrb
movsl
test
stos
pop
lods
dec
inc
sbb
jmp
inc
shlb
xor
inc
xchg
xchg
jns
in
in
xchg
pop
outsb
add
call
dec
mov
notl
jp
divl
clc
mov
or
pop
xchg
fstps
mov
les
xor
pop
and
sbb
push
xor
lcall
push
inc
jb
cli
inc
mov
call
xchg
fstps
sub
fwait
add
push
rcrl
pop
mov
add
addb
lods
push
push
pushf
imul
dec
xchg
stc
inc
outsl
jb
repnz
pop
clc
jl
push
jns
ljmp
bound
mov
cld
shlb
loop
xorb
cli
in
or
inc
dec
or
test
jb
dec
ret
and
jb
xor
mov
fcompl
adc
movsb
adc
les
int
jg
xchg
in
ss
inc
sub
xlat
dec
push
sub
mov
sbbl
sahf
sub
jle
xchg
mov
ss
mov
jle
mov
dec
push
or
push
xor
xchg
inc
adc
add
jge
sbb
pop
inc
pusha
test
aaa
dec
add
xlat
jmp
mov
inc
insl
daa
lods
cmp
sub
push
testb
xor
subb
ja
pushf
jb
mov
fidivrl
dec
push
mov
push
cmp
je
fs
shrl
jecxz
or
addr16
les
push
xorl
rcr
sbb
imulb
ja
mov
js
sbbl
push
xchg
mov
movsl
inc
addr16
repz
out
jle
stc
sub
mov
js
mov
repnz
xchg
sbb
or
jmp
iret
int3
jge
loop
data16
push
insl
aaa
adc
jge
sbbb
jbe
mov
roll
movsb
das
aaa
inc
adc
lahf
arpl
repz
popa
jb
ret
rcll
je
lcall
mov
and
and
enter
cmp
xchg
data16
add
mov
dec
pop
pushf
push
push
cmp
mov
adc
mov
or
and
mov
jg
popf
movsb
movzbl
cmp
xchg
scas
adc
cli
mov
pop
xchg
lods
cmc
lods
icebp
add
sub
cmp
std
fistps
ficoms
inc
or
test
dec
fisubs
dec
mov
call
loop
xchg
bound
fs
jnp
jo
leave
xchg
roll
xchg
sbb
loop
dec
mov
sub
repz
mov
jmp
repnz
outsb
dec
fmull
loop
les
leave
movsl
mov
dec
xchg
mov
outsb
mov
fdivs
add
pusha
nop
cmpsl
fbstp
lret
push
add
mov
or
push
pop
dec
mov
in
icebp
out
or
int
les
les
push
je
pop
hlt
cwtl
test
xchg
cmp
int
sub
ret
icebp
stos
xchg
pop
dec
mov
pop
push
std
push
jns
xor
ljmp
mov
dec
ljmp
pop
xor
in
or
aas
xor
dec
in
lcall
pop
inc
jmp
out
mov
iret
mov
inc
sar
out
mov
xchg
push
hlt
sbb
adc
inc
xchg
jg
mov
mov
fdivr
es
push
es
aad
inc
cmp
mov
sbb
cltd
inc
insl
pop
mov
dec
xchg
push
sbb
and
pop
mov
mov
aam
es
out
xchg
dec
xor
test
leave
mov
cwtl
dec
mov
das
outsl
int3
loopne
pop
enter
xchg
xor
mov
cmp
dec
xchg
add
sub
and
cmc
mov
mov
ja
shll
ja
jo
inc
jno
mov
lret
jbe
test
mov
jb
sub
or
movsl
das
fs
popf
pop
stos
add
mov
mov
push
sbb
test
adc
cmp
fadds
daa
jo
add
jp
inc
cmp
push
stos
dec
mov
ljmp
xor
rcll
lret
adc
test
jae
or
in
dec
dec
and
mov
dec
pop
xchg
in
jbe
cwtl
cmp
cmp
pmaxub
fldl
cmp
dec
jno
icebp
add
stc
shr
mov
dec
int3
push
addr16
xorl
insl
pop
sub
les
pop
ror
shll
xlat
and
aaa
gs
cmc
dec
notb
and
jbe
mov
or
pop
mov
sbb
loopne
inc
bound
mov
cltd
adc
jge
popa
test
stc
aas
pop
mov
les
je
aaa
in
mov
jmp
dec
ja
and
jmp
pop
inc
adc
cmp
adc
aaa
xor
mov
cmp
mov
iret
push
leave
sub
das
and
popa
mov
sbb
insb
push
scas
inc
nop
mov
sbb
imul
jo
test
adc
ja
lock
xchg
and
xlat
enter
icebp
pushf
xor
fldl
pop
dec
ret
ficoms
mov
stc
mov
leave
fiadds
pop
sub
mov
cmp
mov
fstpt
cmpsb
lret
pop
mov
test
inc
call
js
jmp
aam
cmp
loopne
fldcw
rorl
xor
xor
add
xchg
inc
add
ret
jbe
inc
aaa
insb
xchg
jmp
or
xor
mov
mov
and
adc
ds
jns
dec
in
pop
xchg
je
and
flds
and
rorl
sti
mov
mov
aas
mov
movsl
adc
xor
repz
sahf
jmp
rclb
mov
mov
ja
hlt
cltd
lods
or
mov
push
jg
shr
insl
cmp
push
and
add
mov
mov
test
loopne
cltd
out
sbb
mov
pushf
gs
sti
cmp
lret
add
ret
divl
inc
icebp
clc
adcl
rcll
inc
adc
jno
outsl
movsb
scas
dec
lea
xor
lret
stc
popf
in
testb
dec
add
std
testl
aad
sub
adc
insl
pop
test
cli
test
and
push
sbb
or
push
cmp
add
loop
add
xchg
jae
mov
scas
dec
sub
negb
xor
imul
pop
mov
stc
pop
cmpsb
sbb
testb
fmul
jle
clc
aas
cvtdq2ps
mov
jns
mov
cwtl
dec
push
dec
adc
pop
mov
xchg
jmp
out
in
xchg
mov
xchg
push
jmp
pop
addr16
es
cmc
mov
fiaddl
mov
fsubrs
aam
stos
xor
add
push
ficoml
test
daa
das
fnstcw
dec
cmp
ds
push
pop
leave
mov
in
lock
dec
movsl
das
jb
cmp
dec
mov
mov
icebp
pop
lret
popf
pop
negl
sub
cmp
stos
ret
in
lahf
mov
jl
fwait
pusha
out
jmp
add
adc
sbb
pop
loopne
test
sahf
popa
stos
jmp
xor
mov
insl
pop
xor
js
je
xor
push
adc
sub
add
xor
lret
dec
bound
lahf
fdivr
or
dec
inc
in
dec
mov
shll
out
imul
pop
jb
or
or
fs
and
popf
or
addr16
mov
xor
in
call
mov
repz
iret
add
vpcomud
push
sahf
xchg
jne
addr16
sbb
push
or
xchg
mov
dec
inc
adc
cmc
pushf
ret
mov
sub
insb
push
cmp
mov
shll
imul
xor
push
mov
mov
jge
jp
pop
jns
in
push
gs
fwait
sub
popf
or
push
mov
in
add
push
sar
xor
xor
aam
push
call
dec
adc
in
imul
inc
add
imul
scas
mov
fwait
xor
repnz
dec
aad
xor
inc
repz
pop
push
pop
lea
hlt
out
jns
pop
or
mov
cmc
push
bound
ficoml
fisttpll
xor
stos
lds
and
xor
pusha
scas
inc
aaa
daa
xchg
das
lds
clc
cwtl
cmp
jb
out
pop
sbb
icebp
in
add
push
jmp
lahf
ljmp
cmc
test
pop
mov
add
pop
bswap
test
ljmp
and
mov
dec
mov
and
sbb
subb
fsubrs
test
les
inc
mov
add
pop
mov
inc
cmp
dec
and
imul
loop
sub
xor
loop
inc
ret
mulb
cmpsl
fidivrs
jne
loopne
iret
aas
ds
xor
shll
xlat
popf
iret
pop
push
int3
inc
xchg
mov
jg
cmp
lea
cli
ror
push
mov
mov
ljmp
frstor
push
sti
and
dec
jl
pop
push
add
das
and
mov
adc
and
cmp
adc
movsb
lahf
push
bound
ret
loopne
lea
inc
push
jne
cmc
and
adc
jmp
push
mov
and
adc
xor
bound
fwait
pop
fsubrl
jbe
lahf
nop
stos
imul
mov
cmpsb
push
add
ljmp
xchg
dec
dec
int
addr16
orl
pop
mov
js,pn
or
rcrl
push
add
popf
mov
frstor
es
das
xor
mov
jbe
adc
lret
push
subb
insl
and
push
clc
test
inc
cmpsl
and
in
imul
cli
les
loope
scas
dec
xor
fnsetpm(287
and
xchg
or
adc
pop
fcompl
je
ds
xchg
jnp
jl
ss
sbb
aaa
mov
aaa
in
push
and
loope
jge
lahf
mov
icebp
mov
movb
roll
hlt
in
mov
aas
nop
cmp
sbb
xchg
pop
sub
daa
movsl
notl
cmp
and
testl
fbld
cltd
cmp
or
imul
and
es
pop
mov
push
movsb
dec
fadd
mov
jecxz
fidivl
add
lea
in
jle
je
or
vpcmpgtb
cmc
sti
insl
mov
mov
ja
jle
pop
les
sbb
gs
lret
xchg
sub
test
xchg
shll
sbb
mov
aas
mov
push
mov
dec
push
inc
sub
dec
xor
sub
sbb
daa
mov
shll
sub
daa
sub
movsb
xchg
pop
push
dec
sbb
lock
mov
cltd
andb
dec
out
ret
fldl
mov
shll
roll
bound
subb
jne
ds
stos
test
sbb
cmc
push
cmpb
inc
jne
xchg
add
adc
ds
cltd
xchg
ja
jno
scas
fstl
push
mov
std
movl
fdiv
movsl
push
fimuls
mov
xor
sarl
ds
pop
mov
inc
test
push
mov
pop
pop
in
xor
adc
in
lock
cld
out
lock
iret
inc
fcmovnu
mov
add
movsb
push
insl
xor
inc
popf
or
sub
hlt
icebp
mov
repz
pop
or
push
outsb
push
mov
pop
lcall
jno
es
aas
adc
mov
shlb
repnz
inc
lcall
push
add
hlt
mov
xchg
mov
add
push
lcall
cwtl
mov
imul
cmc
imul
loopne
bound
loope
dec
xchg
or
icebp
inc
fwait
loope
bound
mov
adc
ror
insb
jo
in
sar
jge
fistl
xchg
sbb
mov
fdivs
fldl
fnsave
stos
adc
insl
jae
je
jl
jb
outsb
fs
cmc
das
mov
or
loopne
iret
or
mov
xor
add
adc
sti
cwtl
cltd
push
out
mov
leave
sbb
pop
and
lds
lret
imul
rol
fistpl
cmp
cld
mov
imul
insb
jo
flds
in
mov
fstl
dec
dec
insb
or
mov
sbb
lods
shrl
pop
jmp
hlt
cli
test
imul
push
push
enter
fcoml
mov
lret
cmc
xor
cltd
shlb
call
push
lret
andl
jle
shll
inc
loop
fwait
add
cmpsl
sbb
adc
cmp
cmp
cmp
pushf
insl
fwait
pop
xchg
pop
adc
push
jmp
call
inc
add
jnp
ret
jns
adc
data16
mov
daa
outsb
mov
jge
fwait
int
dec
cs
pop
mov
lock
xchg
pushf
and
jg
mov
rcrb
xchg
lret
insb
mov
cs
jl
jmp
sub
sub
ljmp
pop
mov
mov
gs
bound
mov
sbb
fidivl
popf
mov
add
les
cmp
mov
sbb
and
cmp
inc
jle,pn
add
push
rcr
subl
sbb
mov
subl
stos
sarl
push
insb
mov
out
pop
or
pop
or
rorb
mov
fidivl
mov
sub
cld
or
daa
and
rorl
push
aad
clc
loopne
cmpsl
cli
push
loope
pop
in
mov
add
addr16
lock
rcll
xchg
mov
test
movsb
mov
fdivr
push
sbb
sub
test
movaps
test
fstpt
stc
fdivp
scas
je
mov
add
cwtl
pop
enter
lock
fnsave
lock
lahf
cmp
jecxz
lret
or
js
push
imul
jne
insb
and
xor
inc
xchg
push
mov
test
push
xor
sbb
iret
pop
inc
fldl
out
xchg
mov
stos
or
movsl
inc
jnp
movsb
fdivr
push
fs
push
popa
ss
jge
or
sahf
shlb
jmp
xchg
loope
loopne
mov
cmc
sbb
inc
pop
mov
sti
add
xor
outsb
push
mov
fsubl
sbb
xor
out
icebp
push
or
dec
or
cmp
pop
loop
out
fwait
js
out
inc
pop
push
xchg
insb
fstl
sbbb
mov
push
adc
pop
push
fs
mov
push
xor
or
ret
or
shrb
lahf
adc
cmc
or
xorb
adc
scas
es
fs
adc
sbb
scas
jae
pop
mov
setno
jae
sbb
mov
out
enter
je
push
outsb
push
aam
cld
adc
lds
loopne
aam
outsb
add
cmpsb
add
lods
stos
ss
or
sbb
repz
mov
cmc
inc
push
dec
inc
jecxz,pn
rolb
scas
jae
dec
add
inc
fidivs
testb
pop
gs
out
int
jg
inc
aam
daa
flds
ja
jg
movsl
repnz
call
push
fists
sbb
lock
mov
sbb
lcall
movsb
mov
repnz
mov
jg
data16
push
mov
add
pusha
mov
andl
push
jge
jo
sub
call
jle
in
movsb
jg
inc
adc
in
xor
fmull
dec
sub
mov
in
push
mov
mov
pop
out
pushf
aam
dec
mov
loopne,pn
xor
add
sahf
mov
bound
lods
push
test
dec
stc
adc
xchg
xchg
lds
cmpb
gs
aas
xor
cmp
adc
lods
sbb
sub
lods
je
test
scas
fnstsw
inc
insb
mov
out
incb
mov
jae
dec
mov
std
adcl
cld
call
mov
add
adc
addr16
push
sti
rcrb
cmpsl
sub
adc
icebp
lods
sbb
jns
push
sub
incb
dec
loopne
adc
cltd
pop
mov
shl
jmp
and
sbb
mov
sub
jo
rcll
push
aaa
add
fadds
xchg
jne
gs
cmp
add
and
and
lods
or
push
pop
push
cmc
xor
lods
pop
cmp
xchg
pushf
cld
sbb
fwait
push
mov
nop
lods
movsl
loopne
dec
in
sbb
test
jecxz
sub
mov
mov
ret
int
mov
jecxz
mov
jmp
or
fcmovu
mov
mov
sbb
iret
iret
push
filds
pop
lea
xchg
or
lret
inc
push
xor
mov
inc
sbb
ss
pop
repz
cli
js
frstor
fiaddl
xor
negb
in
xchg
sti
shr
ret
or
fisubrs
frstor
lahf
stc
or
mov
sbb
enter
add
jne
xor
stos
pop
and
add
xchg
cwtl
pop
sbb
mov
cltd
fstps
xor
outsl
mov
les
adc
add
fcmovu
in
xchg
pop
jle
mov
into
xor
loope
test
dec
aaa
lahf
cmp
sub
dec
mov
subl
fisubs
shlb
jmp
cmp
jae
mov
push
push
jge
mov
pop
or
mov
push
lock
add
andl
xchg
int
movsl
mov
sub
mov
inc
nop
push
fadd
cli
out
jns
pop
pushf
push
movsb
sbb
ficomps
daa
adc
sub
push
pop
xor
dec
fwait
jae
xchg
cmpsb
sbb
add
mov
xor
orl
and
xlat
jecxz,pt
xlat
in
mov
cli
movb
push
push
push
cmpsl
jo
outsl
leave
dec
subl
js
jl
test
int3
out
add
lret
mov
dec
js
lahf
jl
inc
or
ret
cmp
and
xchg
arpl
mov
in
and
push
cmc
repnz
jo
and
imul
mov
push
movsl
fnstcw
or
xchg
xchg
xor
test
and
inc
and
fmuls
mov
icebp
lret
adc
pop
jle
sub
scas
and
repnz
leave
push
popa
and
mov
in
mov
add
fs
test
inc
adc
cld
mov
fwait
sbb
aad
jo
sub
xchg
inc
pusha
sub
daa
in
test
jo
test
fnstsw
adc
das
dec
lcall
push
fimuls
lahf
inc
mov
andb
cmp
rcl
mov
add
xchg
and
cs
les
lods
mov
shlb
pop
xchg
jo
loopne
inc
adc
fldl
pushf
js
xor
mov
jecxz
or
ljmp
inc
fnstsw
test
enter
mov
es
insl
sub
or
jnp
aaa
mov
cmp
push
lods
ds
jae
cmp
sub
in
xchg
ss
xor
int3
push
mov
inc
mov
addr16
int
push
std
add
mov
push
lods
pushf
and
cmp
or
out
aaa
mov
xchg
jnp
and
out
bound
lret
add
scas
add
xor
dec
lea
ret
jecxz
mov
push
pusha
jns
or
sub
add
inc
mov
xchg
push
sub
cs
mov
or
push
mov
lret
test
xchg
and
cmp
and
stos
jns
pop
mov
adc
lea
cld
sbb
and
out
mov
sysenter
repz
pop
sbb
cs
push
fwait
stc
clc
movsb
mov
jmp
ds
loop
divb
loop
mov
jl
pop
push
loop
jge
cmpsb
and
insl
sbb
and
xor
clc
xchg
cltd
call
sbb
xchg
dec
insb
mov
mov
rorb
sti
out
ret
lock
mov
stc
xlat
scas
dec
mov
outsl
pop
xor
pop
shl
ds
rcll
sarb
add
fisubs
or
fistpl
xor
add
sbb
movsb
test
jnp
jmp
and
int3
xchg
mov
xor
sbb
mov
out
pop
add
push
loop
lods
testl
or
cwtl
jo
add
push
mov
add
jge
test
mov
mov
jmp
test
xchg
xchg
pop
add
lret
call
into
or
xchg
out
in
dec
movsb
lret
js
lds
pop
leave
jp
or
xor
pop
sar
ret
stos
dec
cli
ss
les
out
xchg
jg
push
or
andb
imul
ret
inc
orb
mov
clc
dec
addb
xorb
repz
incb
stc
addr16
mov
push
push
fwait
loope
cmp
push
shll
sub
insb
cmpb
add
mov
mov
cwtl
mov
add
pop
sbb
sub
sbb
imul
leave
sbb
orl
mov
inc
mov
add
xlat
dec
push
pushf
cmp
jmp
jns
xlat
cmp
lcall
movsb
sbb
js
data16
pushf
push
dec
sub
fs
and
ljmp
sub
in
jno
and
jg
add
pop
insb
int3
imul
push
popf
shrb
xchg
inc
adc
lods
jecxz
and
les
lods
lods
fadd
dec
lds
fistpll
ds
add
jb
outsb
lret
shll
inc
mov
int3
loope
aas
xlat
fwait
ss
mov
aam
push
addb
xor
mov
dec
cmp
mov
pop
icebp
icebp
sbb
adc
push
ss
ret
insb
into
add
or
sub
enter
pop
jno
das
mov
mov
mov
cmp
pop
ror
cli
xor
iret
sbb
fcom
xchg
pop
cld
xchg
sbb
push
dec
jle
jbe
imul
xchg
outsb
or
fbstp
lds
ret
jb
gs
clc
lds
jno
movsb
jmp
adc
in
sub
xchg
mov
xchg
dec
ret
inc
jae
stc
push
lret
daa
arpl
test
popl
outsb
sub
scas
xchg
les
push
push
push
xchg
mov
les
mov
test
mov
jnp
inc
jb
sub
lock
add
je
cmp
stc
xchg
outsb
nop
in
int
xchg
xchg
movb
int
pop
sub
je
add
or
in
cmp
into
xchg
push
dec
push
or
cmp
mov
xlat
sbb
jp
lret
popf
xchg
xchg
jns
sub
pop
sarb
adc
imul
psllq
ret
xchg
adc
inc
fldcw
rorl
push
leave
das
and
mov
jge
sbb
push
adcb
add
or
movsb
imul
mov
mov
cli
mov
pop
or
int
pop
add
xchg
pop
or
fstpt
ficomps
je
inc
fcompl
movsb
sbb
dec
insl
ret
in
pop
aaa
push
fsubrs
inc
loop
push
dec
add
mov
jge
jge
jle
or
pop
or
mov
jo
stc
cmpsb
mov
pop
adc
jne
pop
ret
add
leave
aas
inc
jp
xchg
enter
and
and
dec
test
xchg
and
dec
nop
mov
or
test
imul
push
imul
mulb
mov
gs
shlb
mov
aam
test
call
mov
cs
lds
icebp
in
sub
xchg
movsl
xor
inc
fidivrs
mov
mov
inc
fwait
and
int3
push
jle
les
and
out
idiv
movsl
shr
add
push
rorb
js
pop
iret
hlt
pop
lahf
push
inc
push
cli
cmp
insb
pop
lret
mov
loop
shlb
frstor
push
sub
xor
dec
mov
lods
dec
sub
jnp
test
inc
mov
sbb
subl
adc
test
mov
int
lcall
out
mov
cmpsb
lds
dec
imul
loope,pn
icebp
movsb
ret
mov
mov
dec
dec
mov
pop
and
dec
cs
sbb
add
sub
pop
es
xorb
negl
cli
push
test
loopne
mov
mov
push
xor
mov
cmp
sarb
jp
xor
cwtl
cld
repnz
insl
push
testb
adc
xchg
popf
insl
sahf
inc
push
sub
sarl
mov
addr16
arpl
or
mov
adc
sbb
lret
loopne
pop
xchg
or
ficoms
outsb
mov
xchg
aaa
sahf
jmp
push
ja
mov
into
sub
jnp
push
push
ret
int3
xchg
add
lea
icebp
sub
sahf
cmp
or
sub
adc
repz
jecxz
aam
in
test
jp
stos
pop
rcll
lock
mov
testb
sbb
outsl
mov
jge
and
test
and
jl
ljmp
cmp
out
repz
jno
addr16
add
xchg
jns
xor
pop
xor
bnd
int3
cmp
inc
mov
xor
lret
inc
xchg
xchg
xchg
repnz
mov
cwtl
jp
arpl
pop
imull
scas
popf
xchg
rclb
neg
cld
and
fimuls
jo
xchg
bound
cmc
lock
pop
dec
scas
movq
cltd
jmp
insl
loop
lock
inc
mov
add
mov
push
mov
mov
imul
sub
dec
push
loop
mov
add
sbb
cmp
fbstp
fidivrl
mov
test
decl
inc
cmp
repnz
dec
add
popa
cmc
push
test
xor
popa
and
lret
test
mov
push
aam
icebp
dec
mov
imul
in
subb
dec
insb
je
addr16
mov
fwait
inc
stc
sahf
test
xchg
pop
outsl
ds
mov
loopne
cmp
dec
mov
lock
or
push
dec
mov
dec
clc
dec
bnd
test
jle
mov
pop
cmp
bound
xor
enter
cmp
add
jp
sbb
insb
pop
iret
xlat
xorl
pusha
out
pop
xchg
lea
sub
nop
ret
aaa
xor
ss
les
mov
adc
sar
cs
les
ror
orl
push
fdivrs
rcrl
mulb
imul
cs
roll
sbb
mov
sarl
push
push
sbb
in
add
subb
adc
pop
aas
mov
loope
repnz
xor
sbb
inc
ret
inc
cmp
sub
sub
and
sbb
stc
xor
dec
call
lret
pop
ret
bound
pop
scas
dec
jns
add
mov
jno
aad
xlat
mov
xchg
outsl
push
xchg
sub
fidivrs
les
bound
sbb
lock
pusha
pop
arpl
scas
and
xor
push
mov
test
jb
xlat
cmpl
mov
cwtl
gs
cmp
cld
add
mov
jmp
in
pop
aas
cwtl
mov
sub
mov
xlat
pop
repz
rorb
outsb
test
sbb
int3
jp
add
bnd
negb
dec
add
punpckhdq
add
or
xchg
fildl
jne
loop
cmp
push
jle
xchg
call
cs
mov
cmpsb
ret
push
pop
add
out
testl
adc
jns
mov
jp
cmp
mov
shrl
out
mov
sti
push
cmp
and
jecxz
gs
lret
mov
enter
pop
fiadds
ja
add
out
in
andl
in
xchg
dec
inc
mov
lea
lahf
sub
aad
adc
test
or
jecxz
sbb
mov
outsl
outsb
dec
and
sub
std
or
ret
add
mov
jnp
lcall
sbb
jle
pop
mulb
xchg
dec
mov
sub
lea
std
adc
imul
int
lods
test
dec
xchg
add
xchg
xchg
xlat
dec
mov
test
add
mov
mov
dec
sbb
dec
iret
pop
or
xor
dec
cmpsb
call
inc
push
cltd
mov
iret
jno
movl
mov
in
push
mov
jg
push
or
test
cs
xor
and
push
test
adc
push
jae
push
jmp
sti
and
mov
mov
ficoml
cmc
dec
stos
dec
inc
ficomps
stc
mov
aaa
pop
hlt
xchg
xchg
aam
stc
cmp
call
lahf
daa
or
ror
xor
icebp
dec
mov
mov
addl
stos
mov
cmpsl
test
aas
jnp
stos
and
dec
mov
dec
push
xchg
pop
outsb
fldcw
sub
fsubrp
stc
pop
mov
mov
cmc
xchg
lds
ror
call
jmp
loop
and
test
xchg
mov
and
xor
nopl
adc
jmpw
push
mov
mov
xor
mov
icebp
inc
test
fs
mov
scas
mov
out
or
outsl
in
mov
loopne
gs
mov
cmp
mov
stos
dec
jl
dec
imul
or
cmc
scas
daa
dec
pop
rorl
std
pop
fwait
leave
push
inc
les
cs
xchg
call
push
das
cmp
add
inc
in
rol
fistpll
and
stos
outsb
sub
lahf
in
imul
aaa
jle
pop
sbb
xchg
jbe
cltd
push
adc
xchg
push
repnz
xor
pop
movsb
pop
and
xor
fwait
adc
mov
xchg
orl
sahf
xor
mov
loope
or
xchg
addr16
cmp
or
std
pop
jne
jg
xor
inc
cmc
xor
jo
mov
pop
add
jp
push
xchg
das
add
xchg
push
mov
and
xor
test
dec
test
jmp
cmpsl
sbb
push
ds
shrl
mov
mov
shll
xchg
arpl
jmp
lods
xor
mov
adc
fwait
jne
hlt
cmpsl
shl
stos
fnstsw
jbe
cmp
incb
cld
pop
pop
push
in
mov
lcall
es
mov
or
xor
jp
xor
das
popf
roll
roll
jae
int
imul
mov
mov
push
fdivrs
mov
mov
mov
movd
lock
and
mov
sub
out
jns
push
mov
dec
lahf
add
lea
sbb
dec
and
xchg
data16
sub
jecxz
lcall
daa
and
mov
xor
and
adc
jmp
rclb
loope
jge
xchg
cltd
fisubrs
or
cmp
push
inc
sub
pop
ret
into
xchg
ficomps
and
add
fstp
loop
jae
in
or
mov
bound
outsb
cli
lea
mov
jmp
sbb
and
mov
test
push
xor
inc
pop
or
bound
xchg
call
inc
adc
data16
jb
jnp
mov
inc
mov
data16
mov
in
inc
or
pop
fs
push
mov
icebp
or
mov
dec
dec
jecxz
sbb
jo
es
add
mov
int
test
fs
lret
push
mov
je
push
jnp
xchg
cmpsb
sbb
test
xchg
xchg
inc
rcrl
sub
add
aad
cmp
and
inc
adc
aam
jp
xchg
xor
das
subb
sbb
into
fists
sahf
xchg
mov
xor
or
scas
add
or
sub
leave
outsl
mov
cmp
rcrl
inc
outsb
add
lds
and
cmp
mov
jo
hlt
bound
ret
in
mov
adc
or
jne
shrb
dec
pop
addl
in
movsbl
inc
mov
pop
sarl
not
leave
in
inc
pop
push
xchg
mov
adc
xchg
mov
cmpb
pushf
push
xor
in
cmp
xorb
inc
in
sub
mov
jbe
push
ret
js
js
out
fs
sahf
mov
xlat
int3
push
dec
mov
dec
fnstsw
jns
mov
out
inc
pusha
loopne
lcall
dec
or
mov
jecxz
pop
jb
mov
das
inc
popa
mov
into
push
lds
ja
xchg
and
dec
mov
mov
mov
cld
push
or
push
pop
jmp
ret
adc
or
cmp
mov
lcall
mov
pop
cmpsb
popf
mov
outsl
in
fidivrs
jns
and
xor
ret
movsl
push
push
insl
jmp
sbbl
mov
push
mov
sub
cmpsl
mov
testb
js
imul
mov
mov
push
lock
loopne
out
stos
cmp
mov
mov
push
mov
push
inc
iret
cmp
out
jmp
mov
pop
or
mov
call
jnp
xchg
and
imul
sub
mov
cmpsl
dec
cld
mov
jl
push
pusha
sbb
or
cmp
ret
mov
mov
add
xor
sub
aas
sbb
aas
mov
roll
addr16
mov
add
shrb
push
lahf
ja
sub
xor
daa
xor
sbb
pop
cmpsb
mov
xor
xchg
add
into
imul
test
add
clc
xor
fwait
cmp
dec
repnz
and
xor
mov
sti
rol
or
or
scas
jl
jne
inc
add
and
aas
adc
sbb
imulb
ljmp
fisttps
leave
loopne
jg
cmpsb
xor
in
cmp
sub
xchg
arpl
imul
out
fdiv
pop
add
push
sub
cwtl
pop
dec
lahf
inc
das
mov
stos
xchg
mov
xchg
mov
std
nop
sub
insl
fadd
sbb
imul
callw
inc
fldz
andb
jge
adc
mov
jae
fnstcw
xlat
xchg
mov
enter
xor
jo
cmp
packuswb
aaa
xor
mov
cmc
cmp
jecxz
mov
or
mov
addb
lods
test
dec
add
xor
mov
and
and
cmpsb
jae
xchg
subb
xchg
and
into
into
js
int3
lea
sub
jl
dec
cmpsb
fisubrs
lock
lahf
aad
scas
outsb
inc
fwait
int
stos
scas
cmpsl
sub
test
out
cwtl
push
xchg
push
mov
stos
insb
repz
mov
mov
insb
pusha
insl
mov
popf
lods
dec
fsubl
pop
mov
mov
mov
aad
adc
insb
out
imul
jae
lcall
fs
shrb
outsb
xchg
xor
popf
lock
aas
cmp
pop
cld
inc
mov
out
push
aaa
xchg
das
sti
enter
std
fisubs
push
fs
jnp
push
dec
push
rolb
ss
add
adc
rorb
rolb
mov
dec
lock
dec
xchg
test
mov
call
in
jl
xchg
sub
leave
prefetch
or
mov
lahf
inc
adc
arpl
insl
jl
mov
cltd
adc
stos
fcoms
mov
es
xor
call
lock
or
stc
aad
or
add
mov
dec
stos
jge
and
mov
pop
mov
mov
insl
cmp
push
insb
sub
inc
adc
outsl
into
sub
sbb
insb
mov
inc
fwait
xchg
sbb
xchg
fwait
jle
mov
lds
inc
inc
xor
shlb
pop
insb
xorb
daa
shrb
sbb
fistps
adc
in
jecxz
test
test
icebp
xor
sub
xchg
pop
lcall
nop
adc
loope
dec
pop
repnz
inc
ja
pop
in
cwtl
sub
imulb
pop
js
lea
xor
mov
jbe
add
daa
outsl
xchg
iret
or
xchg
outsb
push
mov
add
jb
lods
push
enter
lock
add
sahf
push
pop
pop
test
loopne
jno
stc
cmpsl
call
jns
jle
mov
cli
addr16
add
sub
xlat
xchg
or
es
icebp
push
inc
bound
inc
in
aad
lods
movsb
inc
aaa
pop
xchg
jge
mov
mov
jmp
inc
scas
push
mov
mov
repz
ljmp
outsl
sbb
cmpsl
icebp
push
std
test
sbb
and
dec
aaa
mov
fs
popa
jecxz
jo
stc
enter
fidivrl
std
xorb
js
sbb
fisttpl
mov
loopne
adc
cmp
cmp
mov
out
mov
push
popf
popf
mov
or
stos
aad
pop
loopne
xor
ds
mov
xchg
fnsave
sbb
mov
xlat
mov
jns
pusha
sbb
fists
add
pop
pop
cld
or
in
daa
sub
cltd
imul
into
stc
push
aas
fistpll
ds
inc
cmc
insb
test
pushf
jbe
mov
shr
ljmp
ret
or
cmp
jo
cmp
int3
dec
mov
mov
cmp
push
jmp
hlt
outsb
rcrl
mov
push
addr16
pop
cmpsb
aaa
fidivrl
mov
jl
mov
repz
add
mov
outsb
repz
add
push
mov
mov
inc
pop
push
scas
nop
int
jl
pop
add
int3
enter
les
cmpl
xor
dec
lcall
adc
adc
jg
in
cld
sub
daa
ss
mov
scas
in
imul
into
pop
cmovae
xor
mov
fisttpl
lock
notl
cli
mov
jp,pn
pop
stos
js
loop
int3
push
xchg
cs
icebp
adc
adc
das
in
stos
loopne
lds
add
les
lea
cmp
and
out
jmp
jecxz
push
lods
data16
or
int3
int3
or
inc
imul
mov
push
data16
cmpsl
arpl
or
lock
adc
xchg
call
fildll
fs
push
lret
cmp
filds
lods
je
push
mov
mov
cmc
jnp
lcall
cltd
call
loope
xchg
lea
mov
iret
test
div
idivb
leave
cmc
mov
xor
ret
cli
sbb
inc
aas
cmp
xor
push
mov
popf
pop
leave
sbb
pusha
repz
iret
fisttpl
push
cld
mov
ficompl
pop
lcall
scas
popf
jno
pop
jne
inc
or
adcl
mov
mov
cmp
cmpsl
out
or
arpl
ljmp
xchg
fwait
xchg
mov
stos
fs
in
das
push
in
sub
or
or
lock
outsl
imul
in
aaa
rol
in
jb
aaa
int
clc
mov
add
adcw
daa
repz
lock
fistpll
shll
into
jo
pop
sbb
xchg
imul
add
inc
dec
sbb
outsb
push
adc
adc
sbb
in
fisubrs
lods
lock
pop
lods
shl
mov
and
cli
mov
or
lea
xor
iret
cmp
rcll
sti
mov
pop
divb
dec
add
jbe
sbb
icebp
mov
cs
aam
nop
ret
push
out
notl
ret
fwait
insl
xor
mov
xchg
cmp
stc
cmp
test
or
jp
in
cmp
sub
stos
xor
xor
out
push
nop
cltd
push
pushf
and
lea
sub
sahf
xchg
and
repz
jae
mov
jmp
das
inc
push
mov
xor
mov
std
mov
adc
ror
shrb
add
fmul
push
icebp
les
int
push
sub
stos
testb
jg
std
aaa
cmc
mov
jbe
aas
std
mov
mov
test
in
jb
imul
mov
push
mov
cmpsl
dec
xor
lock
cmp
push
pop
jne
push
dec
and
ljmp
iret
mov
jle
mov
mov
ficomps
mov
mov
sbb
lret
xchg
icebp
mov
jmp
andb
rep
dec
loop
dec
frstor
out
ret
rolb
or
sahf
sub
mov
and
out
pusha
pop
pop
icebp
test
ds
cmpsl
mov
sub
pop
dec
fdivl
xchg
jne
cwtl
enter
add
inc
mov
cmp
push
mov
fisttpll
mov
xor
sub
adc
mov
enter
mov
aam
aas
in
xor
inc
and
xchg
cmc
fwait
stos
sub
mov
mov
pop
mov
pop
pop
addr16
lret
cmp
out
pop
push
xchg
mov
lods
int3
cmc
sub
imul
insb
mov
pop
mov
sbb
lahf
iret
mov
insb
jnp
or
xor
outsl
xchg
bound
dec
ficomps
push
into
fcoml
pop
fcmove
push
lods
push
mov
pop
es
out
mov
adc
and
aaa
aam
jle
sahf
addps
jle
shlb
pop
es
or
sbb
orl
add
mov
jp
ljmp
or
sbb
jl
pop
stos
into
daa
loope
mov
fisubl
ficoml
mov
jle
adc
pop
and
sub
scas
jb
cmp
sbb
push
into
inc
mov
repnz
or
mov
jle
jae
mull
xorb
mov
scas
adc
adc
loopne
jnp
std
js
inc
cmc
in
add
arpl
ss
dec
xchg
push
jl
shlb
mov
aam
sbb
cld
jne
shrb
push
xor
pushf
or
jbe
mov
fcom
sar
shrl
test
xchg
adc
stos
jge
mov
jns
cmp
loop
add
xor
movsb
push
adc
xchg
push
push
add
mov
jnp
rolb
push
jbe
mov
nop
mov
into
orl
sub
rcrl
bound
out
push
jne
loop
fs
pop
adc
inc
and
adc
std
lcall
subw
jmp
xchg
cmpsl
sub
hlt
sbb
push
mov
push
inc
popa
in
inc
lahf
ret
fwait
cs
jmp
pop
loope
pop
out
test
jno
into
or
lahf
sbb
adc
dec
mov
and
mov
sti
in
jmp
in
out
sub
stc
sub
push
hlt
int
gs
fstl
imul
addl
lret
fs
xchg
or
mov
mov
sbb
fnsave
xor
addr16
xchg
loop
xor
jle
mov
fmuls
push
test
mov
and
add
lods
aas
pushf
insb
cmp
sbb
rcll
xchg
xchg
andb
and
outsb
dec
mov
int3
pop
jecxz
xchg
mov
mov
adc
pusha
js
xor
lret
or
fs
outsb
loopne
loopne
loopne
add
adc
rolb
scas
pop
mov
fsts
sub
cmpl
or
cld
and
xchg
out
lret
dec
sbbb
mov
xor
jg
dec
mov
in
mov
aad
jecxz
sbb
xor
out
int
scas
dec
xlat
mov
xchg
adc
adc
das
enter
pop
dec
cmpsb
pop
movsl
gs
push
mov
mov
cmp
or
add
mov
out
add
leave
dec
sub
cmp
xor
jbe
shrl
les
lods
ret
fldt
in
pop
xchg
rcr
idivb
xchg
mov
stc
jl
jno
pusha
push
mulb
scas
mov
jns
mov
cmp
push
add
dec
into
test
fsubl
push
mov
push
push
ja
push
xchg
lret
push
jg
add
popa
pop
push
sub
out
int
imul
lret
lock
and
jns
and
pop
mov
sub
sub
dec
sti
mov
ljmp
mov
lahf
or
sub
shlb
cwtl
dec
lods
pop
sub
jg
std
dec
xchg
push
out
jp
iret
pop
mov
lods
leave
pop
xchg
idivb
jp
sbb
ror
push
pop
jg
std
imul
js
test
mov
cltd
push
inc
xor
mov
ljmp
jecxz
rclb
call
dec
imull
ds
setb
lret
fidivrl
fnstcw
mov
lea
cmp
popf
push
mov
pushf
pop
fdivrp
icebp
xor
cmp
loop
xchg
mov
sbb
inc
cmp
inc
into
out
xchg
push
or
mov
in
xchg
rclb
pusha
lock
mov
sub
aaa
pop
xchg
lret
push
lahf
ss
dec
test
adc
faddp
xchg
cmp
lahf
or
or
mov
mov
dec
inc
adc
cmp
push
loopne
pop
xchg
sbb
fiaddl
mov
jmp
push
dec
push
scas
sbb
addr16
mov
imull
pop
imul
dec
mov
into
iret
or
repz
cmp
aaa
and
inc
jo
imul
insl
pop
or
mov
or
orb
dec
jae
outsb
sti
mov
pushf
push
ds
shl
push
jno
aad
sub
jnp
adc
fwait
ret
lock
lea
sub
push
dec
xor
je
dec
mov
mov
sbb
jl
leave
push
xchg
pop
dec
call
or
test
or
jbe
insb
xchg
pop
jns
dec
mov
push
lcall
or
test
out
in
jl
push
jp
push
dec
pop
lods
sbb
dec
adc
sub
cmp
cs
popf
xor
cmp
into
data16
push
jbe
mov
fmuls
loop
xchg
mov
out
mov
ds
mov
adc
inc
jns
shr
test
daa
mov
das
jb
inc
mov
inc
popa
or
mov
push
jns
loope
cmp
mov
mov
cld
loop
dec
ja
mov
pop
inc
adcl
mov
jge
cmp
and
shlb
jmp
cs
mov
pop
call
in
xchg
add
and
arpl
stos
into
sub
inc
jae
or
xchg
ss
cmpsb
js
dec
nop
and
mov
ficoml
mov
loopne
jno
int
enter
or
pushf
ret
shlb
shrw
leave
aas
xor
int
jae
out
mov
jg
sub
enter
mov
sbb
into
sti
mov
sub
ret
add
and
clc
nop
mov
add
push
mov
int
outsl
adc
xchg
lcall
push
movsb
mov
dec
sbb
rorl
xlat
enter
insl
jmp
adc
push
add
ret
push
sub
int
xor
neg
sub
push
pop
and
icebp
ds
es
push
bound
sbb
and
loopne
mul
push
mov
data16
jns
xor
push
sub
jp
jmp
decb
jp
inc
js
xor
mov
roll
jle
sub
push
and
xchg
outsb
nop
xchg
push
pusha
mov
hlt
fists
xor
adc
in
loop
push
xchg
add
lods
push
fdivl
xor
jge
daa
bswap
push
jp
sub
xchg
cmc
rorb
arpl
daa
add
pop
jl
add
andb
bound
ss
lock
sbb
jbe
cld
adcb
aam
cmp
adc
mov
inc
push
popa
int3
test
lods
jmp
jae
outsl
xchg
cmp
mov
stc
sub
xor
mov
pop
rorl
cmp
movsl
iret
dec
pop
stc
inc
imul
mov
ljmp
lcall
or
sub
or
imul
hlt
mov
rcrb
setae
jnp
sub
scas
jae
test
pop
loopne
cmp
inc
xor
sbb
add
mov
push
cwtl
pop
out
lret
adc
xlat
jae
fnsave
cmp
sbb
fidivs
fcmovnu
xchg
sbb
inc
push
xchg
inc
jns
call
lahf
pop
jecxz
fldenv
fnsave
inc
mov
jg
cltd
dec
cmp
ss
dec
mov
mov
jl
in
inc
add
mov
loope
fistpll
outsl
xchg
sarl
push
add
push
out
add
shlb
je
xor
popl
mov
lahf
dec
js
hlt
stos
sbb
je,pn
lods
xchg
xchg
push
push
fnstcw
pop
loop
in
add
jge
ljmp
inc
push
aaa
mov
mov
jae
and
xor
lock
cwtl
sbb
jmp
push
or
pop
cmp
movsb
dec
adc
mov
jo
pop
psrlq
mov
scas
xor
rcrb
test
push
pop
sbb
mov
xlat
mov
adc
incb
stos
mov
pop
jne
or
cmp
xchg
cmp
adc
pop
outsb
sub
sti
sti
inc
mov
sarb
adc
mov
mov
inc
mulb
xlat
sbb
mov
jns
xor
into
sub
outsl
inc
lret
roll
je
jnp
sbb
cmc
sub
push
or
lods
mov
pushf
and
int3
stos
add
loopne
pop
popa
cli
mov
mov
push
cld
xor
push
xor
lcall
mov
loope
push
call
inc
test
sahf
idivb
movsb
daa
aas
push
adc
das
push
mov
ficoml
test
imul
push
pop
lea
and
sub
and
shlb
imul
or
add
xchg
and
add
pop
pushl
pop
mov
das
pop
inc
dec
scas
insl
sahf
cmp
dec
mov
push
hlt
sbb
jl
into
pop
xchg
popf
pop
xchg
inc
cmp
bound
cli
mov
push
push
sub
mov
cmp
pop
mov
daa
fisubs
jle
ret
fs
dec
jbe
cs
icebp
or
fld1
in
jp
adc
xor
repz
pop
inc
in
push
sub
je
dec
test
cmc
dec
arpl
js
movsl
jle
sarb
loope
dec
icebp
addr16
lret
cmpsb
incl
loope
sar
test
sub
das
ljmp
pop
test
push
xchg
sahf
adc
shlb
sti
mov
test
push
mov
jp
rorl
cwtl
sbb
jge
repnz
xor
sub
mov
sub
push
xchg
jb
sbb
add
loop
insb
cs
sub
loopne
loop
scas
jae
repnz
xlat
mov
mov
pop
xor
cltd
mov
aaa
xor
adc
adc
sub
daa
sti
stc
mov
lods
iret
sub
mov
int3
test
adc
iret
jl
lds
sarb
mov
adc
inc
sbb
mov
mov
aas
lahf
xor
pop
fstpt
dec
push
es
xchg
dec
or
jmp
movsl
mov
pop
xor
inc
cmp
pop
mov
arpl
outsb
or
daa
cmpsl
jecxz
movsl
lret
mov
adc
mov
scas
and
int
or
cmp
pop
cmp
ss
sbb
sub
subb
repz
fwait
mov
cwtl
pusha
dec
sub
stos
mov
mov
cmp
inc
das
sbb
popa
mov
inc
dec
gs
sti
or
bsf
push
rol
mov
movl
add
dec
divl
test
lods
jbe
loop
fcmovu
fistpll
sbb
jp
mov
inc
fistpll
scas
inc
mov
outsl
fisttpl
and
stos
mov
sbbl
and
mov
mov
push
xor
jae
prefetchw
add
ljmp
xchg
scas
pop
aam
dec
std
jmp
mov
stos
cmp
lods
std
leave
bound
mov
sub
movsb
mov
sub
pop
push
js
adc
inc
and
ljmp
ss
xchg
imul
clc
lret
daa
mov
cmp
mov
pop
lcall
clc
pop
mov
inc
push
jge
arpl
adc
movsl
mov
in
ja
loope
les
pop
mov
outsl
xlat
imul
out
stos
scas
jno
xchg
mov
std
dec
push
fwait
movsl
cli
arpl
mov
cltd
mov
push
in
pop
jb
loopne
lock
fs
movsb
cs
lds
inc
call
adc
fxam
cwtl
scas
call
push
sti
mov
call
mov
add
or
mov
push
add
dec
lock
ja
fdivrs
test
nop
ss
movsb
push
xchg
in
cli
jno
mov
mov
adc
push
mov
mov
pop
out
xor
cmpsb
cmp
cmp
mov
or
lea
push
inc
mov
mov
aad
mov
push
or
push
mov
shl
add
mov
imul
shl
adc
inc
dec
pop
and
mov
xchg
lcall
test
icebp
sbb
pop
push
cmp
arpl
loopne
pop
sbb
cmp
fwait
jbe
and
clc
or
in
mov
rcrl
std
adc
push
in
lahf
dec
sarb
mov
xchg
mov
loop
push
imul
loope
stos
mov
push
aas
das
cltd
jmp
mov
xchg
add
pop
gs
xor
mov
in
fldcw
fs
mov
push
inc
push
add
mov
and
adc
adc
jno
add
test
push
sti
mov
jg
stc
mov
mov
xchg
jno
pop
pop
sbb
dec
pop
cld
cli
adc
jecxz
addl
cld
dec
pop
add
inc
fistl
int
les
pop
sub
dec
js
xchg
hlt
hlt
aas
fisubrs
jg
or
lret
es
push
sbb
sub
popa
cmp
mov
push
dec
sbb
sbb
xorl
stc
fisttpl
jge
je
mov
jle
adc
sub
rcll
out
dec
mov
dec
mov
pop
xlat
push
mov
sub
cltd
ds
out
mov
mov
xchg
popf
push
outsl
data16
mov
xor
cmpl
out
adc
fstpt
pop
into
outsl
aas
or
mov
mov
inc
fdivs
out
das
aas
sbb
adc
ja
rcrl
pop
popa
mull
sti
sahf
test
mov
out
jmp
je
dec
push
pop
sub
nop
stc
pop
arpl
pop
mov
and
pop
mov
pop
and
rclb
xchg
push
jae
imul
jo
pop
and
and
add
push
insl
gs
je
dec
pop
loop
and
push
mov
add
push
and
cmp
inc
lds
mov
xchg
mov
jg
add
into
xor
pusha
fsubl
arpl
add
lret
fisttpll
and
addr16
shrl
mov
shll
mov
jl
push
mov
lods
lcall
rcr
add
push
sahf
or
cld
lahf
nop
movl
pop
mov
andb
loop
enter
loopne
stc
cld
fmul
sbb
inc
jecxz
fiaddl
dec
or
or
mov
js
movsb
jns
jbe
cmpsl
mov
mov
test
jl
xchg
mov
inc
jae
mov
enter
repnz
and
mov
mov
jmp
mov
push
fldenv
pusha
adc
dec
pop
jno
inc
push
pop
jg
addr16
xorl
add
sbb
xchg
lahf
sbb
pop
insb
fwait
dec
adc
xchg
dec
hlt
stos
xlat
std
xlat
sub
mov
cmp
daa
push
fs
sub
jl
xor
aad
les
or
in
adc
jge
lahf
mov
push
lret
lret
and
js
xchg
addr16
mov
cs
and
dec
shll
and
stos
add
dec
loope
cmpsl
inc
scas
and
push
mov
pop
jmp
int
into
push
fidivl
jae
cld
dec
push
inc
mov
cltd
pop
test
sbbl
push
or
dec
or
adc
inc
enter
insl
iret
push
and
dec
fimuls
sbb
mov
jno
xchg
cld
xor
pop
scas
push
roll
imul
dec
repnz
pop
int3
sahf
cs
pop
or
mov
push
aam
aam
sub
inc
sub
mov
cmc
and
jmp
or
push
lahf
sub
push
pop
xchg
inc
repnz
ja
sub
imul
pop
lock
in
pop
sti
dec
pop
mov
cmpb
jmp
cmpsb
inc
lds
push
ret
push
inc
scas
mov
test
push
pop
sbb
sarl
jne
clc
ficompl
ljmp
or
int
lea
in
in
jo
je
shll
mov
cld
xchg
push
lahf
into
cs
std
dec
jnp
adc
scas
mov
int3
aaa
push
jno
cmp
scas
pop
sbb
call
push
enter
repnz
xchg
rorb
xor
lods
in
mov
in
xchg
pushf
mov
nop
inc
stc
adc
lds
or
int
sub
sub
sbb
outsb
cmp
xchg
sti
fisttpl
sub
push
stc
adc
das
xchg
jl
fiaddl
mov
and
mov
cmp
test
fistl
pushf
adc
cmp
fcom
imul
rorl
ja
leave
pop
movsl
cmp
mov
test
push
dec
push
xor
dec
cmp
cmp
ret
push
jp
xchg
les
insl
xabort
ds
jbe
fldt
mov
dec
in
repz
inc
les
mov
xchg
sarb
mov
mov
mov
fiaddl
and
hlt
lods
out
xchg
test
and
out
test
and
and
mov
movsl
enter
rol
xchg
mov
imul
scas
xchg
dec
push
adc
push
add
sahf
aad
inc
repnz
cmpsl
lcall
insl
loopne
xchg
call
sub
push
sarb
mov
outsl
sub
shll
cmp
push
dec
fadd
fs
ret
xchg
outsb
add
adc
jmp
lock
mov
into
out
cmp
push
or
insl
push
xorb
cmpb
fwait
fs
inc
js
lock
pop
testb
mov
gs
sbb
dec
xor
add
nop
andb
subl
push
lods
mov
fdivl
cmpsb
add
push
and
test
push
lds
pop
xor
loop
popf
mov
fdivrs
cwtl
mov
rcrl
rcll
mov
stos
negl
mov
sbb
cli
iret
lea
jae
icebp
insb
not
lock
mov
mov
cmpsb
loopne
pop
xor
mov
mov
sbb
push
push
iret
rolb
insb
cmp
stos
xrelease
mov
mov
mov
lods
inc
mov
cmp
int3
mov
sub
mov
sub
test
rorb
sti
aad
mov
les
adc
mov
leave
mov
inc
mov
mov
test
je
lds
sub
aad
sbb
inc
and
bound
arpl
arpl
fcom
ret
dec
mov
hlt
push
insb
icebp
or
dec
outsb
insb
xchg
insb
mov
xchg
or
pusha
stc
hlt
push
std
ror
pop
lods
mov
into
mov
dec
fistpl
cli
and
call
stc
inc
pop
sub
cmp
sub
sub
out
cld
pop
dec
or
jmp
int
sti
aas
jae
adc
push
shr
lahf
add
jae
push
stos
pop
jecxz
pusha
adc
push
xor
inc
popf
mov
stos
or
sbb
imul
repnz
rorl
mov
imul
shll
inc
sbb
ror
push
cmpsl
xor
mov
xchg
xchg
fsts
push
es
mov
mov
jp
or
xor
test
mov
out
ret
outsb
sbb
clc
stos
addb
sbbl
fldenv
sbb
stos
xchg
cmp
jg
dec
sub
test
sub
aad
add
les
jns
dec
cmp
lahf
adc
sbb
mov
jae
sub
xlat
jg
dec
test
sbb
out
xor
cld
push
lock
les
inc
stos
jo
push
push
push
inc
and
lahf
xchg
popa
in
daa
stos
imul
cmc
push
push
loopne
xorl
nop
mov
push
repnz
imul
mov
adc
orb
in
inc
and
mov
imul
mov
mov
xchg
xchg
cmp
mov
notb
call
gs
movsb
pop
mov
push
ret
les
ficomps
push
addr16
sub
mov
add
movsb
adc
repnz
adc
push
inc
lock
pop
mov
sbb
cmp
ret
pop
aam
aaa
pop
pop
mov
add
pusha
mov
imul
dec
and
sub
arpl
pop
mull
push
cld
dec
je
movsb
cltd
pushl
fwait
inc
or
jmp
push
dec
inc
xlat
dec
adc
and
repz
jnp
test
mov
add
in
mov
data16
out
cmpsb
jnp
push
outsb
cltd
arpl
jae
cwtl
stos
pop
mov
xchg
mov
push
pop
repnz
xchg
ja
nop
fs
mov
sbb
faddp
sub
mulb
sti
enter
lods
scas
repz
pusha
xor
sub
repz
cmp
mov
push
xor
push
sub
mov
int3
icebp
cmp
add
arpl
cs
cmp
loopne
imull
or
cli
jl
xor
or
mov
aad
sub
push
inc
lahf
shll
mov
xor
das
rcrb
inc
add
std
out
fdivl
lock
push
push
add
in
cmpsl
adc
push
xor
loop
jle
jnp
les
xchg
sahf
adc
or
inc
inc
jbe
xor
iret
cmc
or
or
jno
sub
das
fcomi
test
jo
fstl
loope
in
add
pop
cmp
imul
mov
ror
pop
frstor
dec
call
mov
scas
push
mov
inc
inc
fcompl
xor
scas
jge
stos
add
push
xchg
jae
mov
mov
adc
xchg
adc
dec
add
imul
enter
push
test
pop
fmull
test
mov
std
rep
pop
add
out
in
repnz
stc
mov
cld
push
cmp
dec
sbb
push
nop
es
xor
fsubr
push
push
sub
lret
int3
enter
movsl
push
dec
fwait
lret
mov
adc
adc
pop
lret
inc
ret
pop
or
xchg
or
outsl
mov
jmp
push
dec
add
or
in
in
arpl
pop
push
mov
mov
in
lds
addr16
lock
lds
mov
aad
dec
pop
fcmove
xchg
adc
adc
mov
mov
lahf
es
out
cmp
xor
mov
mov
inc
sub
in
pop
lods
enter
cwtl
xchg
cld
shlb
test
mov
pusha
ja
shl
aaa
or
repz
push
mov
add
mov
jge
mov
dec
incl
mov
jl
cltd
les
scas
sbb
outsb
adc
into
dec
ret
or
call
cmp
or
fucom
das
cmp
test
or
or
in
mov
sbb
cmpsl
xor
xchg
test
cmpsl
jle
xchg
testl
ds
bound
xor
dec
or
or
add
fidivrs
adc
xchg
std
insl
cmc
xor
in
mov
xchg
popf
adc
xor
cmpsb
xchg
push
imul
adc
dec
push
call
or
jmp
cld
push
inc
jae
add
arpl
push
and
pop
adc
xchg
ljmp
mov
icebp
jne
ftst
lret
imul
and
ss
int
pushl
cmpsl
scas
fists
mov
insl
fiadds
push
mov
ljmp
insb
dec
ljmp
pop
in
mov
adc
or
push
jmp
mov
loop
push
ja
daa
cmp
insb
mov
stos
push
fistl
cmp
inc
cwtl
dec
and
mov
shll
addb
xor
jmp
mov
mov
xchg
push
sub
movhps
pop
mov
xor
mov
inc
mov
ljmp
mov
add
sbb
xor
scas
loop
outsb
movsl
stos
loop
cltd
fistl
subl
imul
ds
insl
pushf
mov
scas
subl
mov
lahf
xchg
cmpsl
fimull
pop
shl
push
fbstp
mov
lods
lret
xchg
mov
inc
add
push
xchg
ds
lea
push
add
dec
stos
lret
cmpb
adc
sbb
and
ss
les
imul
fiaddl
mov
dec
mov
fidivrs
das
sbb
popf
movsb
out
roll
xchg
repz
test
push
stos
mov
xor
popf
fs
jno
push
dec
ret
es
xchg
out
mov
and
cmpsl
or
iret
dec
mov
cmp
addl
mov
and
or
cld
repnz
std
scas
pop
iret
enter
int
dec
jmp
push
gs
mov
add
out
push
add
int
jnp
gs
xor
cmp
cli
popf
dec
les
pop
mov
lcall
cmpsl
cmp
mov
inc
adc
mov
push
js
dec
test
cmp
cli
mov
je
pop
adc
jle
sahf
imul
mov
adc
inc
repnz
cltd
outsl
jns
jecxz
jle
push
flds
out
daa
push
mov
mov
mov
pop
cmp
dec
sbb
enter
imul
nop
gs
daa
test
mov
cld
or
shrb
fists
jnp
cmp
dec
scas
sub
add
mov
cmp
pop
lods
cli
inc
test
leave
int
jo
lock
or
ja
shlb
or
rol
fcoms
inc
sub
add
inc
mov
mov
or
mov
fs
test
add
mov
inc
in
flds
jle
out
pop
popa
jnp
push
mov
add
cmp
imul
sub
cltd
xchg
and
or
mov
addb
nop
testb
and
cwtl
pop
jnp
adc
div
ss
pop
push
test
ret
div
cltd
mov
in
or
gs
push
std
daa
out
or
outsb
adc
push
xchg
and
pop
add
pop
cmc
mov
and
xor
shll
hlt
add
or
cli
xor
add
xchg
sbb
movsl
add
xorl
in
scas
dec
aam
rorb
jmp
mov
mov
pop
rcll
pop
aad
int
outsl
out
adcb
mov
xchg
pushf
jb
cmp
sti
cmp
mov
lret
mov
je
ja
dec
lcall
outsb
pop
or
dec
sbb
xor
inc
push
adc
dec
mov
out
cltd
jo
imul
mov
daa
cmp
mov
or
rorl
xor
stc
ficoms
pmulhw
dec
xchg
pop
mov
std
push
roll
mov
pop
in
sbb
rorb
jo
mov
icebp
cs
test
in
add
sub
xorl
test
mov
je
cltd
sbb
add
filds
push
or
mov
mov
pop
xor
pop
shrl
fldl
pop
sbb
or
mov
sti
ljmp
lcall
fucomi
push
sbb
aas
cmp
inc
and
cmp
dec
cmpsb
pop
mov
jae
test
push
data16
cmpsl
and
inc
inc
insb
fimuls
sbbb
and
lods
std
out
add
outsl
roll
gs
dec
bnd
roll
mov
mov
push
mov
mov
inc
add
scas
cmp
mov
dec
rcrb
loopne
aas
dec
pop
mov
xlat
dec
test
mov
inc
or
ja
outsl
mov
cmp
push
aaa
sub
aam
shl
sub
enter
sbb
mov
xor
xlat
lea
stc
mov
pushf
in
enter
nop
sbb
cwtl
mov
push
sbb
inc
cltd
aad
inc
xor
call
mov
outsl
insb
jl
movsb
insb
in
xchg
jp
sbbb
add
jmp
imul
call
lds
sub
dec
inc
adc
icebp
and
fisubs
mov
or
loopne
cld
mov
inc
xorl
fiaddl
nop
icebp
stc
in
xor
sbb
aas
cmp
lret
fldl
pop
mov
stos
fcoms
mov
mov
sti
sbb
test
sbb
dec
mov
add
sbb
push
and
fdivl
out
sub
push
mov
mov
adc
inc
dec
sub
xchg
bound
aaa
gs
lret
adc
mov
lahf
adc
pusha
roll
repz
and
xchg
call
rorl
sub
pop
or
and
add
push
xchg
pop
aas
in
adc
mov
mov
stos
sarl
cmpb
fmull
int
xchg
pop
push
sarl
js
mov
xchg
push
cmpsl
inc
mov
dec
dec
add
pop
lahf
cwtl
lods
filds
mov
mov
lahf
scas
lret
ret
mov
sbb
sub
xor
push
pop
arpl
inc
mov
repnz
lock
dec
mov
and
fbstp
mov
xor
jecxz
cwtl
mov
or
cmp
mov
sti
arpl
fldenv
sbb
pusha
and
loope
int3
and
mov
mov
push
hlt
inc
xor
add
push
lret
push
out
pusha
mov
or
cmp
cmp
mov
push
mov
repnz
stos
inc
aam
xchg
imul
lahf
std
xor
loopne
and
and
mov
xchg
mov
mov
cld
xchg
jno
aad
mov
dec
mov
adc
aad
int3
pusha
das
mov
inc
dec
xlat
notb
adc
pop
inc
shrl
out
test
xor
inc
dec
pop
and
das
or
cmp
mov
sub
je
add
dec
jge
shlb
or
adc
out
icebp
sub
insb
sarl
mov
flds
pop
adc
or
or
mov
rcr
dec
sbb
out
fsub
push
into
jg
lods
jne
jae
cmp
xchg
xlat
adc
clc
test
sub
cld
add
aaa
mov
push
adc
subl
popa
mov
out
repnz
cmp
cmp
pop
jge
fmulp
mov
jbe
and
sahf
jge
mov
mov
lea
sbb
mov
rorb
lret
xchg
ljmp
test
dec
and
or
push
sbb
jnp
test
mov
aas
jb
lahf
imul
movsl
sub
daa
cmpsb
ret
cmp
call
xchg
xchg
xor
les
dec
insl
nop
insl
cmp
mov
leave
lcall
and
push
movsl
fisubrl
sub
fiaddl
movsl
and
xor
pop
cli
pop
scas
sahf
cmc
dec
mov
push
xchg
popa
adc
and
std
call
popf
xchg
fidivs
imul
mov
cmp
js
or
add
test
mov
xchg
testb
push
pop
fistps
sub
shr
hlt
mov
test
add
inc
xor
xchg
data16
pop
sub
jle
test
notl
daa
pop
add
mov
cmp
loope
sub
mov
pop
faddl
cmp
mov
les
lret
sbbl
jo
ds
dec
and
or
xchg
sbbb
dec
shrl
rcl
ds
or
add
mov
addl
or
pop
dec
push
shll
shrl
pop
dec
das
pop
or
movsl
mov
stc
dec
and
push
iret
cwtl
push
insb
mov
outsl
xchg
cltd
pop
xchg
andb
xchg
cmp
fsubl
jmp
mov
shlb
je
adc
push
movsb
adc
jge
mov
sbb
sarb
push
cs
cmp
loopne
pop
xor
ljmp
adc
sub
int3
sbb
mov
cmp
repz
rol
mov
fidivrl
insl
sarl
pusha
in
inc
out
push
sti
inc
ja
pop
insb
pop
jmp
push
ss
lret
mov
int3
add
or
dec
sar
repnz
aam
frstor
cmpsb
ret
add
inc
sbb
gs
cmp
negb
jle
jnp
orl
test
jmp
mov
clc
outsb
cld
div
popa
or
dec
cwtl
ret
nop
fcmovu
adc
mov
mov
rorb
push
and
lret
lret
test
fucomip
insl
adc
js
push
cmp
lds
ret
popa
mov
ljmp
js
mov
and
or
lret
cmpsl
fstp
pop
scas
jo
das
nop
add
cmpsl
mov
jnp
sahf
adc
sbb
ret
push
cmp
jne
sbb
pop
add
jo
pop
sahf
jecxz
add
mov
mov
lret
sub
sarl
dec
xchg
andl
mov
and
ja
mov
adc
push
stos
cmc
add
dec
popa
int3
pop
push
adc
or
inc
les
sub
cli
mov
pop
push
dec
cmc
mov
divl
rcr
call
or
sbb
inc
xchg
jp
lcall
lret
out
subb
lea
add
fildl
inc
out
add
jl
push
inc
xor
mov
subl
imul
cmc
xchg
ljmp
xchg
int3
std
xlat
fidivrs
ljmp
inc
mov
pop
pop
lds
lock
sub
or
cmpsl
scas
cmpsl
sub
sbb
push
pop
mov
dec
out
mov
xchg
sub
int3
push
sbb
stos
cmp
mov
fistpll
rcrl
ret
fsubr
add
add
mov
push
jg
cmp
and
nop
aas
rcl
pop
popl
push
pop
jle
enter
dec
pop
rol
inc
mov
lret
cwtl
loop
int
lods
or
push
mov
mov
mov
je
stc
cmp
ljmp
mov
fcomps
sub
clc
jno
sub
std
sub
leave
adc
mov
lds
pop
jae
add
es
lds
sbb
mov
testb
stos
and
jb
ljmp
add
push
cmp
mov
dec
adc
jl
inc
mov
out
inc
adc
and
fsubr
and
data16
lcall
std
sti
mov
loopne
in
pop
add
pop
cmp
int3
lods
pop
cmp
std
in
incl
rol
and
lahf
in
sub
test
inc
mov
xor
dec
repz
test
sti
mov
sub
sbb
lahf
fsubrs
movsl
jmp
test
mov
sar
mov
hlt
fimuls
je
pop
in
gs
int3
test
rcrl
mov
add
outsl
inc
and
dec
mov
mov
xor
movb
push
popf
ja
mov
shr
jae,pt
jmp
xchg
push
sub
dec
out
std
jge
jns
ss
sub
pusha
xchg
push
mov
mov
sub
or
mov
pop
push
inc
setg
ficoml
mov
shrl
xchg
pop
imul
stos
divb
jnp
push
pop
int
insl
adc
ljmp
popf
xlat
sub
test
mov
fwait
push
or
xchg
clc
aam
faddl
push
fs
mov
xorb
andl
lahf
sub
push
jmp
shlb
scas
mov
jl
add
aad
movsl
sysret
stc
ljmp
and
js
push
pop
mov
sub
stos
mov
stos
or
mov
iret
imul
mov
lret
mov
insb
dec
enter
ja
and
lcall
outsb
xchg
and
clc
movsb
aad
xor
dec
xchg
lock
shl
cmpsl
inc
pop
cs
xchg
clc
sub
repz
jmp
push
dec
lods
pop
sub
adc
add
ret
inc
out
dec
xor
jo
icebp
cmp
aaa
mov
data16
pop
out
adc
cmp
popa
lds
rorl
push
inc
cmp
sub
cmp
pushf
in
lds
mov
mov
sub
ds
push
adc
mov
in
ljmp
xchg
loopne
cmp
xor
aam
pop
mov
ret
sbbl
inc
dec
cltd
mov
imul
int
jl
stc
inc
lahf
int3
inc
call
jle
pop
pop
test
or
sar
gs
mov
lock
jns
jle
sbb
lds
push
mov
dec
jl
xor
xchg
push
pop
call
dec
cmp
push
push
out
fsubp
xor
xchg
out
scas
pop
std
jmp
sbb
adcl
imul
lret
mov
test
lock
mov
and
push
and
mov
inc
mov
dec
fisubrl
push
push
cmp
add
pop
inc
sbb
and
mov
insl
jp
je
cmp
or
mov
fsubrs
sub
mov
cmp
aam
cli
popf
add
lods
cmp
adc
es
leave
dec
ss
cmp
das
mov
jne
push
stos
xchg
push
clc
adc
xlat
push
jb
sbb
inc
stos
inc
cwtl
leave
xchg
popa
shl
jle
hlt
sti
push
cmc
xchg
and
ret
mov
fmulp
lahf
adc
sbb
rol
sbb
mov
popf
cmc
mov
popf
dec
sub
add
add
ja
pop
or
pop
inc
xchg
sbb
dec
mov
cmp
mov
xor
test
xchg
insb
pusha
cmp
popa
dec
cmc
cmc
xchg
mov
insl
mov
cmp
xchg
popl
xchg
je
mov
mov
sbb
pusha
aas
mov
adcb
add
cmpsb
sahf
pop
inc
xor
pop
sbb
fucom
xchg
mov
inc
mov
xchg
inc
pop
orl
mov
cmp
hlt
jge
and
pop
imul
inc
test
xchg
add
rol
inc
pop
inc
cmp
xor
imul
outsb
adc
ret
pop
push
sahf
insl
adc
jbe
dec
add
in
sahf
and
and
add
xor
and
mov
jecxz
loope
xor
fisttpll
xor
adc
ds
mov
xchg
jmp
add
insb
cmp
sbb
jo
jl
adc
addr16
aas
loop
cmp
cmpsl
cltd
dec
gs
lds
stos
add
dec
cmp
dec
ja
movsb
pop
shl
mov
test
sbb
aas
xor
sub
ret
push
and
pop
insl
xchg
ja
je
fdivs
inc
lahf
out
cs
out
xor
je
stc
pop
fnstcw
push
shl
adc
xor
ljmp
jb
xchg
daa
jecxz
sbb
mov
call
test
xor
in
fsubs
adc
adc
jmp
push
dec
lret
cmp
and
adcl
mov
ret
jne
push
sarb
adc
aam
lea
clc
jns
jo
in
adc
add
or
add
hlt
sbb
xlat
pusha
mov
nop
test
xchg
push
cmp
orl
lcall
xor
add
xchg
jae
dec
addr16
xchg
push
repz
out
loope
shrl
lcall
out
test
lret
outsb
pop
icebp
push
mov
sbb
out
mov
shlb
icebp
jb
push
je
push
sub
adc
testl
or
adc
push
ffreep
loop
test
lahf
fsub
xchg
pop
push
add
jae
push
dec
cmove
and
sub
dec
push
adc
push
mov
pop
xlat
cmp
adc
les
aad
pop
or
dec
add
fstpl
mov
pop
fcmovnbe
jne
or
mov
mov
mov
enter
push
push
es
insl
fwait
mov
fcmovnbe
push
sbb
inc
scas
adc
decl
mov
sbbb
scas
orl
inc
or
mov
iret
hlt
lods
cltd
push
sub
iret
ljmp
dec
cltd
push
sub
jbe
int
inc
shll
push
push
in
mov
shll
pop
xlat
xchg
xor
xor
and
cmp
scas
mov
testb
push
dec
mov
daa
les
mov
insb
std
ljmp
ja
inc
mov
in
ds
mov
dec
pop
leave
mov
popa
add
jmp
mov
fcomip
mov
imul
popa
scas
repnz
aad
cs
push
decl
mov
mull
aas
jbe
jbe
jo
lret
outsb
shll
sub
fbstp
mov
xor
xchg
cmp
shlb
icebp
out
lods
cmp
xor
xorb
xor
pop
fnstenv
loope
test
xor
push
ljmp
jb
push
fisubl
or
pop
int3
xchg
ficomps
sahf
add
imul
dec
xchg
ficoml
sub
or
repz
inc
push
mov
cmp
sbb
inc
cltd
xor
std
loopne
push
mov
aam
push
jmp
pop
cmpsl
dec
sbb
pop
pop
repz
jns
movsb
orb
jg
sbb
shrl
lds
out
in
xchg
dec
daa
dec
cmpsb
jp
lods
push
cmp
nop
aad
mov
lahf
cltd
mov
cmp
pop
out
jle
sbbl
xlat
push
rcrl
addl
jns
and
ljmp
pop
flds
ss
pop
adc
cmp
cmp
idiv
jl
sub
jno
pop
inc
adc
js
aas
lret
call
sbb
and
mov
inc
jmp
dec
pop
popa
xlat
jge
nop
xchg
std
sub
cli
xor
imul
shll
lret
mov
or
movsl
rclb
or
jmp
mov
lods
fiaddl
sbb
xlat
mov
cwtl
call
dec
or
cmp
mov
dec
push
inc
cmpsl
stos
xchg
sbb
lret
jle
int3
cmp
popf
pop
add
sahf
xchg
push
ret
mov
shl
sar
addr16
inc
push
xor
shrb
imul
clc
sub
dec
test
insl
les
int
aaa
pop
inc
or
clc
ss
lret
clc
jae
mov
xlat
mov
into
xor
clc
adc
stc
lcall
ss
adc
pmulhuw
fwait
js
add
mov
mov
push
adc
adc
in
sahf
dec
addb
cld
jmp
or
call
or
sbb
push
hlt
dec
maxps
ljmp
inc
sbb
cltd
push
cmp
xor
pop
sbb
add
xor
stos
push
insb
mov
stos
shll
xor
in
push
sub
or
xor
sub
dec
xchg
push
cwtl
ds
adc
push
push
loop
stc
fwait
mov
lock
add
fs
divb
hlt
jnp
test
cld
mov
xchg
rorl
enter
mov
out
in
repz
add
enter
pop
mov
cmc
pop
adc
add
cmp
int
loope
mov
pop
inc
inc
mov
and
mov
cmp
jge
xchg
jns
push
sub
cmp
in
sbb
push
insl
push
test
pop
addr16
jmp
cli
jp
mov
mov
jno
repz
fwait
sbb
inc
pop
mov
pop
jl
cmc
xchg
dec
aad
mov
dec
clc
idivl
dec
cmp
lds
clc
sbb
mov
or
pusha
bound
push
xchg
addr16
and
adc
mov
test
iret
sbb
orl
sarl
jp
mov
aas
xor
mov
jns
pop
sub
or
adc
sbb
outsb
inc
xchg
imul
sub
stos
cmp
clc
mov
xchg
cmp
scas
insl
je
lock
dec
andb
pop
xchg
fstp
jns
inc
pushf
xor
jle
fidivs
frstor
pop
mov
imul
sti
daa
movl
pop
inc
in
pushf
fs
xor
fxch
test
adc
sbb
mov
outsb
loopne
and
inc
mov
adc
push
bndstx
fiadds
cmp
mov
mov
push
leave
xchg
call
jbe
aad
xchg
fucom
pop
xchg
int3
movsl
mov
inc
cwtl
sti
adc
mov
test
testb
les
jp
loop
shrb
mov
lret
je
leave
ljmp
and
sti
push
into
fcmovbe
or
incb
xlat
xchg
cmc
rol
xlat
outsl
push
fistpl
mov
les
dec
scas
and
jecxz
scas
xchg
arpl
stos
mov
mov
cmpsl
sbb
data16
cs
add
push
jbe
imul
mov
loopne
mov
adc
sahf
and
pushf
mov
sbb
loopne
mov
xchg
dec
mov
dec
xchg
outsl
push
cmp
xchg
imul
xchg
mov
push
adc
les
adc
cmp
add
fsubrl
movb
jmp
push
inc
outsl
or
adc
sbb
fmul
or
add
movsl
pop
sub
mov
lahf
pop
xchg
out
mov
nop
sbb
pop
or
imul
movsl
or
mov
dec
out
nop
fistl
cld
add
clc
dec
mov
and
mov
and
jne
aad
adc
cmpsl
add
je
sti
je
mov
adc
mov
mov
inc
loop
ljmp
sub
mov
and
pop
mov
data16
daa
push
js,pt
sbb
int3
leave
subl
inc
sbb
dec
push
je
mov
test
lret
add
aaa
pusha
cmp
add
xor
and
xorb
hlt
pop
xchg
mov
sbbw
and
xchg
mov
adc
xchg
call
lret
dec
jl
xlat
lret
pop
movb
cmp
es
mov
xor
mov
aam
or
cmp
jecxz
jns
in
imul
into
movsb
in
jl
aad
jne
sub
mov
imull
repz
in
mov
popa
pop
fcom
call
cmp
mov
xor
cwtl
aad
decb
xchg
in
pop
ret
adc
lret
fnsave
pusha
mov
add
adc
call
scas
pop
orl
mov
test
js
add
ds
push
jge
rcll
orl
ret
inc
push
add
sahf
adc
leave
shll
and
jle
adc
push
or
lds
sub
lea
dec
xchg
mov
fsubr
pop
dec
int3
xchg
jle
push
xchg
or
scas
stc
mov
sub
adc
pop
daa
adc
ficompl
addr16
in
lods
mov
sub
mov
cmp
mov
test
push
and
int3
pop
rcr
xchg
lret
into
jecxz
push
xor
inc
repz
xor
jmp
mov
stos
xchg
pop
fldenv
pop
stc
or
adc
or
or
leave
mov
gs
pop
jae
out
fcmovu
aaa
fldenv
mov
ret
mov
loopne
inc
mov
xchg
lret
nop
mov
sbb
xchg
xor
out
dec
cwtl
inc
scas
fs
imul
fdiv
cld
ror
and
mov
or
aam
insl
xor
and
gs
dec
js
stos
dec
mov
jl
test
add
mov
mov
and
mov
dec
cmpsl
ds
dec
jp
lods
data16
fbld
push
jmp
sub
mov
ror
into
push
sbb
test
adc
mov
movsl
mov
sbb
or
adc
push
mov
popa
hlt
rcr
call
pushf
out
repz
pop
adc
jmp
pushf
in
adc
xor
daa
push
push
sub
jae
in
lcall
and
adc
lret
mov
rolb
xor
outsb
ret
cmpb
mov
push
lods
pop
inc
pop
push
lds
in
xor
xor
sub
insl
xor
clc
inc
neg
lods
mov
in
je
dec
adc
pop
iret
inc
into
sub
sbbl
mov
sti
loope
adc
xchg
adc
or
pop
add
xor
hlt
push
cli
adc
movl
fwait
fs
out
call
dec
pop
dec
mov
mov
xchg
add
sub
fcomps
xor
fidivl
dec
repz
mov
aas
out
outsb
mov
xor
mov
movb
test
lahf
xor
add
inc
xchg
xchg
sbb
dec
cmc
repnz
in
jmp
jne
shl
addr16
mov
jl
jo
and
rcrl
je
sti
leave
xchg
lahf
cli
adcl
mov
lret
adcb
jne
jns
int3
enter
mov
mov
cmp
cs
mov
leave
leave
out
sbb
clc
adc
cmpsl
jb
sub
xor
ret
mov
bnd
scas
in
pop
int3
sahf
add
inc
mov
pop
inc
int
inc
push
pop
arpl
loop
cmp
fsubrl
xor
sbb
and
push
inc
mov
dec
xor
out
stc
xor
pop
xor
push
xor
test
jo
daa
loope
push
cmp
add
ret
test
lahf
add
jo
popf
mov
adc
sub
js
iret
pop
nop
inc
xor
xchg
in
add
call
in
jle
stc
fisubs
mov
cli
je
push
and
adc
jecxz
cltd
push
xor
adc
fistl
cwtl
inc
sbb
insb
js
jb
inc
inc
jns
push
mov
xchg
js
mov
rcrl
insl
scas
xor
sub
lahf
and
js
mov
cltd
and
shrb
cmp
dec
outsl
ja
or
rol
mov
inc
pop
adc
sbb
stos
shl
xor
mov
sbb
dec
stos
add
or
push
or
xchg
fisubl
mov
pushf
ret
or
mov
add
sub
pop
test
mov
sahf
ja
mov
adc
sbb
ret
xchg
ret
sub
outsb
jecxz
lods
mov
fs
addb
rorb
or
test
test
loope
pop
or
testl
adcl
jmp
leave
fldcw
sahf
aas
dec
sti
test
add
mov
ljmp
add
xor
xchg
push
pusha
pop
inc
sbb
push
lcall
fstps
mov
lods
mov
loope
inc
mov
iret
xchg
test
xchg
mov
jmp
xor
dec
mov
mov
and
and
pusha
jle
in
cli
clc
rcr
xchg
jno
jns
dec
mov
xchg
addr16
push
xor
mov
sbb
and
mov
mov
or
jne
mov
lret
repnz
xor
data16
aad
jns
lret
adc
sub
jo
push
in
lret
push
flds
adc
imul
or
nop
sbb
test
dec
jge
or
nop
and
dec
mov
or
fcmovnu
dec
shll
fscale
cmp
icebp
daa
cltd
push
int3
jnp
mov
dec
cmp
xor
shlb
jne
scas
cmc
sbb
stos
xor
lds
pop
imul
add
add
add
inc
popf
fidivs
pushf
aam
jno
dec
std
sahf
fwait
cld
rorb
adc
imull
inc
or
inc
fisubl
popf
jle
movl
dec
stos
xchg
cmpsb
ljmp
xor
xchg
add
sub
adc
setl
pop
xor
daa
cmp
pusha
les
and
cmp
ja
dec
xor
mov
cmpsb
or
dec
jno,pn
lret
jb
or
sbb
test
jmp
in
adc
lret
and
das
mov
mov
stc
loopne
mov
push
inc
or
dec
push
mov
add
sub
mov
fidivrs
fisttpll
mov
lea
pop
jno
nop
mov
lea
lock
js
icebp
push
xor
add
inc
xchg
and
push
sub
push
mov
cli
sub
mov
push
clc
sti
push
mov
pop
pop
adc
add
push
lahf
and
inc
or
sub
in
enter
add
mov
pop
push
aaa
lock
jb
shrb
inc
imul
popa
jnp
mov
int3
pop
test
jae
mov
sbb
stos
je
sysexit
dec
or
fistl
dec
xchg
addr16
lret
lcall
jge
pop
add
xchg
ss
loopne
aad
lock
xchg
and
sub
jl
push
call
sub
movl
imul
xor
gs
xchg
shlb
push
adc
jae
hlt
movsb
insb
sub
pop
mov
sub
inc
insl
sub
dec
repnz
dec
ret
lahf
mov
out
adc
xchg
into
fimull
mov
les
xchg
mov
lods
push
loope
fdiv
jp,pn
fistpl
in
cmp
push
nop
imul
daa
inc
xor
in
and
add
xchg
jb
stos
cmpb
mov
in
movsb
xor
call
bound
adc
mov
pop
or
jg
stc
push
sub
or
mov
stos
insl
fists
mov
jecxz
pop
sbb
mov
xor
mov
daa
cmpsb
test
xchg
fildll
pop
jge
popf
push
psubq
jg
icebp
int3
add
and
sahf
add
sub
arpl
jbe
cmc
or
dec
mov
addr16
pushf
add
sub
loop
cltd
jnp
insb
test
clc
in
stos
pop
loope
mov
and
jnp
pop
hlt
dec
popf
sbbl
add
mov
jb
inc
std
shll
xor
inc
push
imul
sub
mov
push
movsb
cmc
cmpl
sbb
xchg
fwait
mov
dec
cmpsl
cmp
out
mov
mov
sub
loopne
mov
inc
cwtl
ljmp
int3
and
add
sahf
loop
sbb
jne
pop
ja
pop
arpl
insb
ja
jge
sarl
test
je
jae
out
xchg
jb
sbb
xor
jnp
jle
sub
std
and
mov
outsl
dec
sbb
subl
xor
adc
into
stos
mov
pop
imul
leave
jnp
lds
mov
mov
pushf
lret
sub
push
jg
je
pop
loop
cmp
mov
push
repnz
mov
cld
pop
jp
in
and
rolb
sub
repz
and
jo
mov
cmpsl
test
push
leave
in
jb
push
mov
mov
add
pop
adc
adc
pop
mov
or
nop
mov
xor
mov
push
test
cld
lcall
cmp
cmp
popf
jnp
popa
or
xchg
xor
in
jp
cli
push
push
mov
cmc
dec
bound
mov
int3
addb
jnp
inc
aaa
mov
sub
test
outsl
sub
jle
xchg
imul
xchg
idivb
adc
mov
aad
push
push
dec
addl
xchg
push
insl
test
push
and
xorl
mov
mov
mov
cmp
cmp
dec
out
aam
sbb
jle
or
je
andb
mov
jb
xchg
mov
add
cmpsb
flds
mov
lret
mov
aad
bound
popf
mov
iret
adc
lods
xchg
and
outsb
inc
xchg
gs
in
xchg
lcall
movsb
in
sbb
xchg
xlat
outsl
mov
rclb
repnz
add
or
mov
mov
xorb
mov
lds
fs
dec
sbb
or
push
in
iret
in
rorb
mov
aas
hlt
iret
out
ret
in
repnz
imul
int3
fdivrs
pusha
or
dec
fs
push
jno
lods
sti
cld
aas
xchg
xchg
in
std
iret
bnd
dec
pushf
in
sbb
insl
movb
sti
mov
notb
clc
push
in
mov
mov
add
out
mov
dec
cli
out
dec
lret
push
ficoms
lods
sbb
dec
cwtl
je
jb
sub
lock
sbb
testb
xor
scas
lret
psubusw
or
cmpsb
es
idivl
push
add
sahf
imul
xor
shlb
sub
scas
call
mov
dec
adc
pop
sub
adcb
loopne
inc
lcall
mov
loop
out
fcmovne
sbb
adc
pop
sarb
xchg
repz
cmpsb
dec
sbb
arpl
loop
push
xor
adc
dec
arpl
loope
pop
loop
mov
sub
ds
push
pop
mov
mov
push
jno
lret
into
sub
pop
in
jo
lcall
push
pop
stos
cmpl
xchg
into
ljmp
and
ljmp
add
test
fwait
out
aas
jmp
aam
jo
push
cld
stos
pop
pop
daa
mov
or
test
sub
mov
sub
stos
lods
inc
push
insb
jmp
rorb
xchg
xchg
xor
lcall
test
fisttps
cmc
jo
jecxz
out
sbb
fsts
daa
push
push
fdivl
rcl
nop
sbbb
sbb
sub
pop
out
xor
fwait
repnz
loope
gs
test
popf
adc
xchg
pop
pop
int3
cmp
leave
test
push
push
stc
xor
mov
outsl
imul
lds
arpl
mov
lods
scas
push
loop
int3
ds
adcl
roll
sub
push
cmp
repz
sub
jl
jmp
sub
rclb
sub
adc
push
iret
dec
and
cltd
adc
jmp
leave
je
inc
es
lods
lods
or
cmp
lret
mov
ret
stos
lahf
pop
mov
fisubrl
inc
mov
cmc
sub
lods
push
ret
fiaddl
jecxz
push
fwait
ret
add
sub
mov
pop
mov
int3
fdivrl
mov
cmp
outsb
sbb
jmp
adc
push
sub
rcl
xchg
ret
aad
or
jne
dec
push
dec
adc
mov
push
cmp
xchg
add
pop
out
rolb
inc
test
pushf
ds
cmp
or
jmp
pop
das
sub
in
in
repz
mov
test
pop
or
imul
insb
xchg
rep
or
pushf
stos
test
filds
cmpsb
fcoml
add
dec
adc
adc
push
dec
sub
jg
pop
jo
jp
xchg
mov
rolb
mov
push
mov
mov
int
inc
and
arpl
pop
mov
das
push
shll
dec
jge
inc
push
push
into
stc
int
aas
ds
sbb
outsb
rcll
scas
or
aam
imul
jle
scas
sub
push
sti
push
cmp
dec
inc
out
xchg
inc
outsb
in
add
fcomps
push
inc
or
mov
or
shrl
or
inc
sbb
inc
xchg
xor
cwtl
mov
pop
clc
sar
das
sub
mov
lahf
insb
mov
fisubl
sbb
pop
sbb
je
pusha
rolb
outsl
cmp
dec
sub
sub
jecxz
incl
shlb
je
filds
xlat
js
cmp
movsb
movsl
push
movsb
pop
popa
les
clc
push
add
adc
js
adc
adc
push
lahf
pop
mov
cmc
sbb
loop
mov
mov
adc
shll
jmp
add
hlt
push
movsb
sti
rolb
testb
cmc
lcall
repnz
ror
lahf
jg
rcr
sarb
inc
shrl
sti
mov
sub
pushf
fwait
sub
mov
mov
sar
mov
movl
stos
popf
int3
fwait
mov
mov
call
cmp
push
hlt
filds
push
sbb
push
mull
sbb
cmp
xchg
loopne
adc
sub
lds
and
cmpsb
sbb
jp
xchg
jl
lret
ret
ret
xchg
jo
lret
xor
inc
push
cmp
mov
subl
push
xor
js
dec
sahf
iret
loope
lock
cmp
dec
int
or
in
imul
stos
ljmp
mov
xchg
les
push
push
jne
cmpsl
xchg
hlt
iret
ret
jns
adc
rorb
inc
testl
pop
dec
popf
lods
sbb
js
loopne
ss
pop
dec
insb
mov
cwtl
in
sbb
stos
lds
imul
loopne
push
jo
pusha
fcoml
xlat
loopne
cmpsl
jp
loopne
mov
dec
adc
cld
lods
jb
imul
add
stos
dec
js
jg
fcoml
in
pop
pop
pushf
rcrb
insl
xchg
mov
pop
loope
lahf
push
es
push
insb
push
sub
xor
lcall
pop
inc
arpl
ret
dec
ret
lret
xchg
ficoms
mov
loopne
fcoms
and
pop
xor
or
inc
inc
and
sbb
mov
lock
out
jmp
xor
push
in
fsubrs
out
or
loop
jge
dec
cmp
dec
push
lret
jnp
test
mov
into
imul
mov
lret
es
mov
test
jns
lods
cmp
ficomps
aaa
jnp
out
and
xchg
cltd
and
pop
lock
jo
pop
dec
jg
sarl
dec
jb
fcompl
movsl
iret
jp
lahf
test
cmp
mov
rorl
lret
ss
and
push
mov
sbb
daa
jle
sarb
out
inc
push
xor
xchg
lods
xor
in
sbb
fdivrs
push
fwait
rolb
xchg
cmp
adc
adc
aaa
mov
mov
xor
cmp
adc
adc
sub
jo
adc
mov
cs
jmp
lock
mov
mov
daa
mov
adcb
movsl
mov
clc
cmp
lret
pusha
push
push
aaa
adc
pop
push
fwait
jge
push
cmp
cltd
repnz
inc
sbb
pop
mov
pusha
push
rorl
push
stos
test
jmp
mov
mov
aaa
movsl
lahf
aas
pop
cmp
jns
mov
in
xchg
sbb
arpl
fdivrs
mov
mov
and
pop
movsl
mov
ror
icebp
xor
std
and
outsb
mov
ja
loopne
adc
push
xchg
mov
lahf
in
pop
lods
push
jnp
sub
repz
sbb
les
xchg
add
mov
pop
and
dec
adc
loope
lds
imul
mov
in
sbb
out
inc
rclb
leave
xchg
or
shll
test
rolb
lahf
sub
pop
test
enter
lcall
or
fcoml
sub
pop
push
repnz
mov
mov
mul
iret
inc
enter
pop
lret
andb
neg
or
fs
jno
ret
out
and
outsb
aaa
jl
add
or
mov
mov
shlb
mov
shrb
mov
pop
mov
sbbl
pop
nop
daa
jmp
adc
sub
push
pop
pop
jo
cmpsl
popf
xchg
stos
adc
fsubs
jb
cwtl
mov
mov
mov
lcall
pushf
nop
sub
lods
ljmp
les
mov
cmp
sarb
jno
mov
fldcw
xchg
push
mov
mov
xchg
push
imul
cwtl
movsl
fsubs
shrl
in
incl
or
push
mov
cmp
mov
dec
mov
cmc
cmp
push
xchg
xor
jb
or
pop
es
jmp
movsl
loopne
in
cld
jecxz
jl
jo
aas
cli
mov
xchg
dec
push
mov
push
or
cmpl
fisttpll
shl
mov
xor
dec
ret
dec
es
fildll
iret
sub
jno
cmp
inc
pusha
xor
int3
dec
mov
sti
dec
outsl
dec
add
add
sub
in
xor
cli
aas
daa
inc
add
jecxz
adc
xchg
rol
nop
sub
xchg
aas
fs
icebp
add
leave
out
ret
push
ret
gs
push
in
pop
sub
int
mov
xchg
mov
dec
nop
jge
sbb
dec
xchg
int3
subb
adc
into
dec
loop
mov
xor
stos
stos
xchg
jno
cli
pop
dec
or
cli
mov
icebp
mov
pop
popa
push
jecxz
lret
add
and
adc
mov
sahf
fmull
dec
mov
ds
mov
repz
jg
and
js
movsl
cmpsb
fcoms
add
daa
xchg
inc
pop
loop
mov
pop
xor
in
cmp
ret
adc
and
pop
scas
es
and
mov
addr16
inc
push
mov
cmpb
xor
cmp
jne
xchg
int
jno
scas
lds
xor
push
sbb
rcrl
xchg
jb
bound
adc
mov
pushf
aad
mov
jp
sub
ljmp
mov
cli
xchg
sub
pop
or
mov
insl
in
xor
sub
or
loopne,pt
test
push
in
add
inc
jle
pop
mov
stc
lods
ficoml
or
inc
fistpll
enter
and
push
xchg
pop
lods
jo
pop
mov
test
pop
enter
cmpsb
jns
mov
mov
insl
fcoml
in
xchg
and
mov
test
arpl
les
lret
lahf
sub
repnz
stos
adc
movsl
sbb
outsb
jbe
arpl
inc
and
push
insl
in
sahf
mov
jne
jl
adc
xchg
pop
mov
mov
jno
mov
jecxz
add
shrl
in
sub
mov
cmp
add
into
jo
xorb
cmpsl
add
xor
lcall
sbb
aam
sub
xchg
xor
inc
push
mov
jae
push
mov
fnstenv
cmp
mov
fcmovnu
xchg
lahf
pop
push
mov
xor
daa
test
int
push
dec
sbb
mov
push
cli
mov
out
sub
ret
push
hlt
adc
mov
or
pop
or
bound
lea
ljmp
ret
lcall
mov
dec
insb
cmp
enter
sub
jg
mov
pop
mov
hlt
rolb
outsb
inc
mov
and
hlt
movd
cmp
jecxz
aad
adc
shl
mov
fiaddl
mov
mov
cs
ficomps
pop
cmp
xchg
fdivl
mov
popa
jp
dec
int3
mov
mov
inc
stos
loop
or
pop
arpl
sahf
mov
mov
cmp
mov
out
sub
and
add
test
imul
or
xchg
lret
std
lds
or
mov
push
sub
lret
out
data16
arpl
push
data16
xchg
out
arpl
cmpsl
ss
fistps
lods
outsl
nop
hlt
push
xchg
and
inc
negb
imul
popa
stos
add
in
lock
push
insb
insb
sbbl
jecxz
out
xor
popa
jmp
aas
arpl
jle
ret
sbb
das
mov
pop
dec
lret
and
clc
dec
outsl
inc
fsubrs
test
mov
mov
adc
push
fstps
jb
pushf
imul
fidivrs
xor
dec
mov
iret
insb
cltd
xor
push
fadd
cmp
out
inc
sbb
subb
xlat
jb
jns
in
mov
inc
pop
lea
mov
out
pop
push
jno
jb
addl
rclb
xchg
hlt
insl
pop
sbb
subb
xor
mov
mov
nop
shrb
andb
sub
mov
dec
fistl
rorb
sbb
jmp
pop
lret
mov
mov
mov
insl
mov
cmp
aad
lretw
pop
ds
dec
sahf
pop
cmp
daa
inc
sbb
xlat
out
xor
cmp
repnz
and
subl
and
sub
repnz
imul
jno,pn
xor
shll
cmp
loop
lods
fucom
cmp
jae
jo
and
in
je
repz
lods
cmp
jp
std
sub
dec
xor
and
mov
jo
add
rolb
xor
cld
sub
das
jle
push
pop
jg
pop
fnstcw
pusha
adc
stos
xchg
in
jmp
dec
in
jne
dec
mov
sbb
sub
jle
int
pop
cmp
pop
jne
jns
cmp
stos
gs
std
stos
sti
jns
xchg
clc
xchg
pop
cmp
fstpt
int
mov
xchg
and
cmp
aam
adc
rolb
popa
pop
and
pop
dec
inc
je
push
mov
aam
push
outsl
js
sahf
pop
push
pop
es
icebp
lret
fiadds
cmp
xchg
scas
and
jno
inc
xchg
adc
bound
arpl
loope
lods
inc
cmp
mov
dec
add
mov
rcrl
popa
mov
dec
mov
push
cmp
pop
test
or
mov
out
inc
out
sbb
sahf
push
mulb
fidivs
popa
push
dec
lret
hlt
ret
pop
cmp
mov
sti
sub
pushf
xor
scas
and
mov
mov
pop
sbb
aaa
stos
sub
dec
mov
mov
push
imul
xchg
test
ffree
sub
dec
mov
shrl
or
or
cs
test
mov
inc
sti
insl
mov
cmpsl
out
rclb
cmp
pushl
sarl
push
cmp
mov
jne
adc
leave
cwtl
push
mov
aad
xchg
cld
jno
jle
lods
jmp
dec
jbe
movsb
mov
push
scas
adc
push
je
mov
inc
push
nop
movsl
sub
aad
enter
imulb
and
mov
push
inc
cs
xchg
jns
test
pop
jb
into
sbb
or
and
fs
mov
dec
movsl
cmp
push
test
or
sub
rclb
push
daa
adc
popa
inc
push
xor
sbb
incb
and
jmp
pushf
lahf
test
jo
dec
out
pushf
push
adc
xchg
sbb
ret
dec
shll
sub
sar
int3
outsl
out
xor
pop
xor
inc
mov
adc
je
pop
xor
js
inc
and
sub
mov
push
adc
pop
mov
xor
xchg
mov
push
and
sub
mov
mov
jbe
dec
stos
xlat
shll
jno
mov
mov
mov
xor
call
call
mov
repnz
inc
pop
outsb
pop
mov
icebp
xlat
cmc
lods
mov
mov
ds
xchg
lock
sahf
movsl
idiv
stos
inc
int
mov
cmp
fsts
sbb
xchg
fimull
lods
jle
mov
ljmp
pop
push
push
adc
cltd
push
jge
in
mov
ja
adc
adcl
arpl
jmp
dec
aaa
pop
icebp
in
xchg
dec
dec
push
and
mov
std
push
lcall
cmpsb
xchg
fisubs
fsubrl
pop
jbe
inc
inc
sbb
jge
sub
mov
gs
and
mov
inc
mov
subb
rcl
enter
out
insb
stos
mov
in
int
js
xchg
lcall
stos
adc
lods
fwait
pop
adc
mov
mov
clc
shrl
sub
push
xor
mov
xchg
cmp
rclb
das
inc
outsb
subl
sub
cltd
in
jae
sahf
mov
jle
repz
mov
fucom
dec
mov
or
lods
mov
pushf
add
xchg
inc
adc
addl
adc
pushf
xchg
push
sbb
mov
mov
daa
shll
nop
cmp
add
in
in
push
je
add
mov
incb
das
les
adcb
add
clc
js
cmc
cmp
mov
push
in
rorl
faddl
subl
cwtl
push
subb
jle
mov
jo
repnz
decl
inc
pop
es
xlat
sbb
stc
out
cmp
mov
stos
sbb
inc
in
cmp
inc
mov
fs
pop
sbb
mov
mov
stc
arpl
jo
ja
sub
rcll
movsl
xchg
lods
pop
cmp
roll
and
std
lea
mov
aam
fcomps
push
hlt
push
pop
cmp
neg
push
ss
stc
stos
push
aad
mov
cmp
jae
ret
loopne
cwtl
gs
and
in
cmp
scas
sbb
mov
mov
pop
jl
and
in
and
inc
mov
daa
xor
sbb
jno
scas
inc
cmpsb
inc
pop
cltd
adc
in
jg
fwait
push
out
fistpll
mov
dec
cmp
popf
inc
pop
xchg
cmp
and
stc
mov
add
mov
inc
mov
push
in
dec
imul
xor
addb
ret
loopne
ljmp
in
cli
daa
lods
pop
je
jno
rol
aam
je
cmp
std
jnp
push
push
lcall
push
loop
sub
ds
es
pusha
subl
lret
add
hlt
add
cwtl
mov
movsb
xchg
scas
cwtl
ret
repz
stos
pop
aad
add
out
and
daa
mov
movsl
pavgb
xchg
sub
cs
lret
andb
lock
jae
stos
lock
sbb
sar
in
push
test
jmp
stc
add
aas
test
cmc
adc
test
sbb
mov
adc
jnp
cmp
cmp
std
cmc
mov
xchg
adc
dec
adc
addr16
mov
jge
xor
iret
sbb
inc
jmp
repnz
icebp
inc
outsl
add
in
add
stos
icebp
cmp
push
and
adc
lcall
mov
mov
xchg
sbb
adc
rorb
mov
sub
mov
jb
frstor
in
mov
cld
lcall
std
rcrb
imul
add
dec
mov
sub
pop
aaa
adc
xor
dec
je
cmp
sub
or
std
dec
add
fdivs
push
stos
jbe
dec
out
mov
mov
je
popa
daa
cli
in
push
mov
and
insl
aam
mov
insb
adcl
mov
inc
mov
xchg
into
jae
lret
data16
jmp
rdmsr
sbb
ja
mulb
sbb
in
jne
push
jno
js
mov
sbb
fcoml
adc
pop
bound
aad
sbb
fldl
jbe
data16
dec
lea
mov
and
cwtl
sub
ljmp
jle
vmulsd
clc
adc
mull
cmp
cmp
cmp
mov
les
out
sbbl
lea
sbb
ret
cs
aad
jo
stc
testb
lahf
ljmp
xor
pop
dec
cmpb
adc
lahf
ss
rcl
xchg
popf
jl
inc
scas
mov
call
lahf
jl
in
rcrb
inc
cmovg
test
sub
shl
sbb
imul
cmpsl
int3
mov
in
ficoms
xchg
xor
sub
cmpl
dec
jnp
imul
lcall
sahf
add
cld
dec
add
movsb
mov
xor
dec
xor
pushf
inc
add
dec
cmp
xchg
mov
lock
add
jae
imul
shrb
push
mov
pop
pop
xchg
adc
hlt
test
or
int
enter
loopne
jle
shlb
test
xchg
cmpsl
mov
aad
cmp
orb
xchg
test
lock
adc
sbb
mov
int3
mov
sbb
adc
push
int
iret
iret
dec
mov
fwait
push
jmp
repz
subl
addr16
imul
shrb
cli
mov
ljmp
aad
xor
in
mov
les
or
pop
icebp
cli
pextrw
cmpb
fsubrs
jl
sub
push
bnd
mov
pushf
or
in
das
lods
jg
nop
jp
out
fisubrl
shl
add
push
inc
dec
in
xchg
mov
aas
es
add
arpl
sub
pop
jg
roll
adc
inc
sahf
push
jmp
lea
adc
std
stos
movsb
fdiv
arpl
xlat
and
inc
cmp
fcmovnbe
mov
add
outsb
lcall
cmpsb
sarb
add
lock
int
ret
test
xchg
mov
in
test
pusha
lcall
cmp
fwait
sahf
xchg
sti
out
push
push
jg
mov
addl
add
adc
xchg
mov
call
cmp
sbb
and
sub
adc
mov
xchg
inc
dec
dec
dec
bound
cs
mov
pusha
mov
push
sbb
xor
idiv
in
cmp
mov
iret
adcb
out
test
lods
movb
int
adc
fdivrp
popa
jne
popf
adc
dec
mov
sub
mov
sti
repnz
pop
lds
jo
insb
add
adcl
and
lea
sbb
sub
push
arpl
mov
cmp
sub
lahf
scas
stos
pusha
cmp
xor
mov
sbb
and
push
sbb
xchg
int
xor
in
shl
imul
jge
mov
cmp
add
lods
mov
and
pop
nop
jae
adc
sbb
arpl
pop
jl
mov
mov
enter
data16
cmp
push
sub
loop
inc
leave
mov
jle
add
xorl
je
js
and
cmp
mov
and
mov
and
add
mov
push
movsb
pop
cld
sbb
test
outsb
sti
lods
stc
lret
in
add
push
sbb
sti
mov
or
aaa
cmpl
push
xor
sub
jae
ds
mov
popf
xchg
addl
int3
mov
into
sbbb
sbb
pop
mov
enter
fs
xchg
push
orb
jl
ret
fildll
fisubl
inc
cwtl
pop
jge
icebp
addb
ljmp
mov
sbb
xchg
jmp
rcrl
xchg
loop
and
mov
cltd
push
cwtl
push
ret
dec
jl
xor
in
sbb
adc
ror
mov
mov
mov
jo
int
es
mov
pop
xor
jo
pop
cltd
sbb
loopw
pushf
and
inc
nop
jmp
scas
xchg
sbb
int3
inc
ret
or
lret
stos
mov
xor
movsl
icebp
lods
in
sub
inc
shrb
addr16
sbb
je
push
fimull
lods
ds
cmpsb
cmpsl
and
jo
icebp
hlt
lds
notb
jnp
mov
aas
clc
or
divb
and
lds
pop
fcom
inc
stc
lock
jge
pop
das
stc
popa
addr16
mov
fwait
movsb
mov
inc
sbb
inc
stc
cmp
push
in
les
jne
push
movsl
mov
push
cmpsl
push
inc
test
xor
daa
leave
pop
add
sbb
sahf
scas
and
clc
out
idivl
stos
mov
or
jge
mov
insb
or
mov
aam
inc
adc
cmc
jb
andl
in
ret
ret
pop
mov
icebp
xlat
stc
pop
sbb
xor
jge
adc
cmp
push
xchg
mov
cmp
cwtl
aaa
stc
inc
mov
sub
icebp
xor
iret
lahf
rolb
mov
rol
pop
adc
in
or
into
aad
cmpsb
jne
pushw
add
cmpsl
xchg
fistl
insb
adc
aas
pop
sbb
cli
cmpsb
aas
sub
fld
fisubrl
and
inc
lcall
in
pop
popf
stc
xchg
pushf
jp
or
dec
out
cmp
aam
sbb
jl
testb
lcall
imul
jl
push
movb
sbb
add
cwtl
sbb
stos
jb
sub
rolb
fistps
push
fdivrl
movsl
imul
mov
hlt
out
jmp
adc
fiaddl
gs
fwait
xchg
lods
pop
sbb
mov
jmp
daa
aam
jmp
clc
mov
insb
inc
sbb
cmc
push
mov
sub
out
adc
addr16
xor
mov
daa
loop
mov
nop
hlt
inc
es
jg
stc
lods
outsl
popf
pop
fs
pushf
jnp
cmpsl
or
fsts
loopne
sti
clc
sub
hlt
or
call
out
shlb
pop
add
aas
in
lds
mov
lds
add
jge
dec
jmp
loope
in
xor
inc
adc
jo
mov
pop
sub
test
jge
mov
xchg
xchg
and
in
xchg
push
lods
sti
jnp
fistpll
out
popf
push
mov
mov
dec
jae
in
jnp
fisubrs
notl
rorb
xlat
ror
inc
rclb
mov
or
xor
xchg
test
xor
push
in
mov
aaa
mov
loopne
sub
cmp
fbld
jle
dec
mov
push
std
inc
es
xor
test
lahf
xchg
ja
sbb
mov
push
cmpsb
xor
int3
in
es
pusha
sti
call
xchg
out
sti
and
fimuls
adc
inc
cmp
negl
push
xor
xchg
hlt
dec
mov
mov
jg
stos
in
dec
decb
hlt
fs
dec
dec
daa
leave
movsl
or
pop
in
popf
test
test
and
xchg
fdivrl
pop
arpl
dec
sub
nop
mov
sti
dec
out
lret
sub
pop
in
repnz
icebp
decl
or
sarb
loopne
sarb
outsl
mov
sbb
push
or
fxam
cltd
or
xorl
inc
push
adc
pop
push
pushf
or
xlat
les
or
jmp
je
fnstsw
loop
sub
mov
repz
addr16
xchg
jno
sub
xor
movsl
nop
inc
divl
add
cwtl
ret
mov
mov
lea
inc
mov
ja,pt
test
cmp
fstpl
aas
sbb
test
divl
mov
sbb
mov
push
mov
ret
lods
imul
and
and
push
push
out
add
imul
icebp
adc
leave
es
pop
sub
and
movsb
sub
neg
insl
add
xlat
push
and
imul
orl
and
idivl
imull
jecxz
mov
add
std
xchg
sbb
sbb
lahf
das
sbb
jle
xor
xor
mov
daa
data16
out
mov
jle
pop
aas
mov
sahf
xchg
cmp
pusha
jle
mov
mov
inc
stos
inc
jmp
int3
push
test
mov
mov
leave
jl
or
dec
sub
dec
mov
mov
dec
sti
out
ss
cmp
push
popf
and
movsl
and
ljmp
pop
leave
dec
clc
dec
mov
jmp
xor
xor
add
ljmp
dec
cmp
dec
cld
divb
push
packssdw
rcr
pop
mov
mov
fisubl
repz
dec
push
jne
out
in
out
stos
and
test
pushf
iret
xchg
popa
inc
roll
sub
push
lahf
xor
sub
push
pop
pop
fstpt
sbb
mov
fnstcw
mov
add
cmc
push
sbb
out
pop
push
movsb
aaa
dec
jl
and
fmulp
lock
xchg
adc
sub
adcb
fcmovbe
neg
enter
in
aaa
xor
mov
arpl
jp
adc
xor
cmpsb
pop
mov
popf
adc
sarl
in
pop
and
or
add
sbb
lret
out
sub
mov
into
pop
jge
fwait
dec
xlat
or
and
pop
arpl
xchg
outsb
push
xchg
sarb
cld
outsl
sub
insb
loop
xor
pop
popf
popf
loop
cmp
lcall
add
xor
cmpsl
xlat
aaa
mov
push
pushf
pop
out
jl
imul
scas
ret
push
out
and
cmpb
into
arpl
and
add
cmp
out
loope
or
repnz
fisubl
call
fwait
sbb
int
xor
das
call
pop
push
jle
adc
cmpsb
idivb
pop
fwait
int3
out
inc
mov
lock
sarb
inc
inc
outsb
push
sub
add
bound
inc
test
hlt
jmp
mov
jnp
dec
inc
cmp
rorb
loop
sbb
jmp
xchg
lcall
leave
adc
lods
xchg
xor
bound
or
lahf
out
test
adc
mov
xor
adc
roll
repnz
jbe
sub
xchg
inc
call
pushf
push
add
pop
loope
pop
insb
push
mov
push
fwait
popa
add
das
inc
jb
mov
stos
xchg
dec
adc
add
xor
popa
and
cmp
jp
cs
cli
push
mov
xchg
add
xor
pusha
in
ret
not
jno
dec
push
cmp
lcall
arpl
test
scas
hlt
and
dec
imul
cmp
xor
out
call
arpl
cmp
push
f2xm1
and
pop
inc
fldt
adc
sub
sahf
mov
mov
test
mov
test
insl
mov
inc
add
call
inc
push
pop
cmp
ja
adc
jecxz
push
dec
les
sbbl
jmp
xchg
xchg
inc
pusha
sub
adc
packuswb
jp
fwait
cmova
push
rorl
mov
arpl
xor
dec
aas
jle
out
nop
inc
fidivl
aas
sbb
or
repz
jns
aaa
sub
dec
jnp
out
xchg
adc
dec
xor
sbb
mov
add
mov
jnp
pop
push
movl
mov
cmpb
cs
ret
addb
and
aas
jo
aaa
push
lret
call
mov
js
pop
sahf
mov
pusha
jecxz
fiaddl
mov
push
xchg
fidivs
aas
xchg
outsb
scas
fcom
mov
enter
push
es
xor
movsb
xchg
mov
jne
jl
sti
icebp
xchg
lcall
test
or
pop
imul
popa
hlt
mov
fmull
cmc
popl
pop
dec
cmp
movsl
jae
xchg
sti
cmpsb
in
ret
push
and
dec
jge
in
push
or
inc
add
add
insb
add
mov
xor
inc
mov
inc
mov
int3
push
test
add
mov
loopne
imul
std
sahf
sarl
fldl
sarb
mov
repnz
mov
mov
mov
inc
int3
nop
sub
cmp
cmc
cli
imul
hlt
xor
rcrb
outsb
push
cmp
out
push
fiaddl
sti
mov
cmc
xchg
cmp
fldenv
adc
cli
cmpsl
lods
sbb
stc
add
push
lea
xor
sbb
loop
or
ror
xor
jge
jle
cmpsb
push
push
xor
inc
mov
add
jl
xchg
ss
and
cli
jnp
lret
out
je
pop
call
dec
in
mov
pop
repnz
test
cli
outsb
mov
cwtl
xchg
lock
fisttps
mov
xchg
inc
leave
cltd
sarl
leave
test
repz
add
pop
sbb
sub
sub
clc
std
jmp
sub
mov
mov
xchg
and
pop
push
cmp
dec
mov
addr16
outsb
jbe
mov
icebp
mov
cs
mov
xchg
scas
push
lds
js
adc
daa
rcll
xor
mov
clc
xor
cli
mov
mov
xchg
out
pop
cld
jmp
adcl
or
loope
lret
js
pop
aad
icebp
ret
sbb
test
and
cwtl
push
jp
shrb
xchg
sahf
pop
ljmp
jl
movsl
sahf
ror
cmpb
imul
cmp
push
or
dec
push
pop
mov
or
sahf
sbb
pop
jl
mov
sbb
pop
lods
dec
xlat
cltd
stos
jge
mov
imul
jl
aaa
sub
leave
push
daa
mov
mov
testl
roll
push
imul
push
ret
loope
xchg
dec
dec
sub
clc
lcall
mov
add
test
leave
pushf
aaa
cmp
into
scas
movsl
mov
xchg
mov
insl
out
jns
xchg
pop
and
xor
mov
icebp
sub
ret
hlt
dec
inc
inc
xor
inc
mov
sub
and
test
jg
test
test
js
and
dec
test
inc
inc
jae
or
dec
inc
adc
jno
lcall
xchg
jae
pop
loop
xlat
outsl
adc
les
jmp
call
imul
sub
cwtl
sbb
fdivp
out
mov
push
repnz
imul
or
pop
pop
jge
mov
fldcw
ficoms
stos
xchg
xchg
jb
sub
cmp
adc
adc
or
bound
ror
lods
cmp
rolb
icebp
inc
test
push
pop
dec
jae
cwtl
xchg
aaa
mov
cmpsb
lea
pop
or
add
iret
dec
xchg
adc
icebp
scas
jae
xchg
push
fisubrl
jg
lds
orl
mov
cwtl
jl
jp
mov
cwtl
inc
pop
cltd
mov
sub
cmpsl
ficoms
test
ret
loope
jbe
int3
fnstsw
lcall
push
sbb
mov
xchg
xchg
insb
and
cmp
pushf
push
les
xlat
and
das
adc
ret
dec
xchg
loope
insl
xlat
mov
orl
testl
cmp
dec
and
mov
adc
cmp
out
loope
dec
push
add
push
shll
popa
mov
rorb
cmp
cmc
adc
mov
outsl
and
xor
faddl
mov
stc
arpl
mov
fsubrl
jmp
mov
dec
xchg
std
and
fwait
pop
mov
outsb
pop
lea
push
fistps
dec
scas
push
sbb
jecxz
in
xor
outsb
mov
repnz
add
sub
scas
lods
fdivl
add
cli
call
gs
fs
mov
xor
xchg
pop
rorl
mov
dec
aas
iret
data16
or
lock
sbb
cli
fisttpll
lea
das
mov
aam
rcll
mov
jae
dec
pushf
sbb
mov
test
scas
mov
je
jl
or
aad
mov
int
push
negb
fisttpll
ss
fldt
fiadds
int3
push
jmp
and
ss
xchg
xchg
sub
fstpt
pop
xchg
inc
adc
xor
xlat
inc
mov
scas
cli
jbe
fsubp
jecxz
inc
xchg
stc
je
cmpsl
out
mov
loope
test
xchg
test
addr16
pusha
fs
xchg
sub
out
dec
xor
test
mov
mov
jecxz
gs
add
jl
addr16
push
fwait
imul
push
outsl
cmpsl
push
xchg
insb
addl
rolb
jl
lea
pop
icebp
stos
pop
cmp
cs
and
out
movq
jns
and
jnp
jb
pushf
push
cltd
push
pop
mulb
aaa
inc
fldenv
jecxz
mov
jmp
std
mov
dec
adc
out
pop
lcall
inc
xor
inc
cmc
sub
xorl
adc
jae
lret
cmp
out
adc
data16
das
mov
ja
ret
adc
es
dec
cli
mov
mov
arpl
mov
mov
jns
cltd
enter
mov
dec
jg
fisubrl
loope
lret
jg
inc
gs
rep
popf
je
cmp
out
mov
inc
stos
fst
movl
inc
push
loopne
xchg
or
lret
fwait
pop
cmp
mov
out
aam
lret
lea
xchg
insb
mov
cmp
ljmp
inc
data16
or
loopne
fwait
shlb
ret
jb
stos
into
ret
xchg
out
int3
add
cmp
movsl
push
mov
out
jns
mov
das
adc
jne
aad
test
mov
sub
repz
das
cmpsb
gs
xchg
lret
int3
lea
add
mov
sbb
pop
insb
jne
jns
addr16
dec
xchg
sbbl
adc
xor
pusha
ljmp
movsb
mov
shrb
pushf
dec
and
sub
in
mov
sti
mov
jmp
enter
push
in
imul
inc
or
in
popf
ja
pusha
xor
pop
int3
stos
stos
clc
hlt
jae
fisubs
pop
aam
call
push
pushf
int3
sub
or
mov
pop
mov
and
mov
adc
addl
mov
and
imul
scas
ret
sbb
pushf
ja
xor
pop
mov
inc
dec
cld
inc
adc
in
idiv
cmp
fmuls
jbe
or
xor
mov
mov
leave
nop
adc
jecxz
cmp
scas
push
pushf
addr16
rcl
leave
push
pop
xor
les
movsl
leave
rolb
gs
jne
push
lret
les
stos
jb
data16
jp
repnz
dec
or
in
into
adc
insb
test
mov
fidivs
pop
test
or
cli
sbb
movsl
popa
xchg
mov
pop
inc
dec
outsb
int3
lods
out
jmp
mov
bound
sub
adc
mov
lods
mov
sub
popa
into
rclb
and
sbb
adc
out
jbe
sbb
cmp
mov
popf
sub
int
adc
dec
in
push
push
mov
mov
cmp
lcall
cmp
mov
ja
pop
inc
gs
int
adc
adc
adc
fcoms
push
lahf
push
xor
repz
sbb
mov
add
aam
bts
jbe
mov
jmp
mov
test
jae
test
adc
sub
popa
stc
add
nop
add
sahf
sub
adc
xorb
push
out
je
rcrl
call
xchg
jmp
out
mov
or
mov
pop
icebp
push
mov
mov
xchg
out
dec
out
mov
nop
pop
aaa
xor
in
negb
sub
ja
pop
pop
jo
test
add
lea
test
clc
bt
adc
fcompl
imul
and
aam
xchg
ja
sub
insb
addr16
adc
inc
das
mov
mov
sarb
sbb
ss
jae
jns
cld
jb
sbb
and
cld
in
pop
das
test
mov
push
sbb
push
inc
shll
negl
icebp
insb
loope
aaa
shr
cmpsl
aaa
sti
adc
aaa
dec
mov
js
andl
sub
pop
out
cwtl
push
sbb
push
pop
gs
cs
popl
fs
outsb
push
mov
dec
and
repz
ljmp
mov
insb
mov
cs
mov
repz
sbb
daa
jecxz
movsb
mov
flds
mov
xchg
push
dec
xchg
fsubrl
jno
aas
mov
call
mov
push
in
add
fists
inc
ret
out
push
out
bound
pushf
or
mov
popf
add
xor
test
int3
jae
outsb
cmp
inc
outsb
mov
pop
sub
int
pop
cwtl
je
mov
rcl
push
xor
mov
xchg
jae
mov
pop
mov
aad
jb
mov
jp
jbe
inc
mov
loope
in
mov
lret
pop
lock
sbb
out
cmc
movsl
shrb
or
push
arpl
push
popa
test
mov
pop
push
inc
cmc
into
test
inc
xchg
pop
xchg
push
mov
mov
repz
ret
mov
fistl
hlt
dec
pop
jge
insl
push
mov
shll
push
pop
push
xchg
push
add
mov
sahf
out
xor
jl
pop
cld
fstl
in
xor
or
pop
lea
cmc
add
xlat
test
jl
or
dec
sbb
push
es
popa
lahf
ret
mov
inc
mov
mov
arpl
or
inc
sub
mov
ljmp
loop
xor
cmpl
cmp
or
mov
insb
insl
pop
sbb
dec
and
push
cltd
push
ljmp
sub
ficomps
cwtl
push
mov
xchg
lods
adc
push
mov
fisubl
idivl
and
arpl
leave
sti
cmp
ss
adc
push
leave
sub
sti
sub
mov
add
pop
fidivs
push
mov
popa
loope
jb
mov
dec
dec
into
and
jno
aas
jbe
out
subl
ds
cltd
xchg
inc
xorb
jle
push
jg
outsl
dec
pop
or
xor
jo
pop
mov
push
add
xchg
and
fwait
pushf
out
cwtl
xchg
aaa
insl
lds
call
adc
mov
adc
insl
scas
jmp
popa
add
mov
adc
xor
int3
int
add
dec
sbb
mov
imul
mov
pop
pop
dec
mov
shrb
mov
jo
cmp
aas
pop
scas
dec
or
inc
std
mov
sbb
js
fstp
lods
ljmp
cli
stc
push
mov
or
add
add
hlt
sbb
pop
sub
stos
repnz
bound
stos
scas
cmp
cmp
call
into
xor
sbb
adc
outsb
jg
sbb
cmpsl
lock
into
mov
xor
mov
mov
fwait
pop
sti
xchg
adc
daa
sbb
xchg
ret
inc
sub
enter
stc
andb
shl
mov
iret
cmp
repnz
push
ret
insl
popa
pop
movl
push
scas
cli
mov
jp
xor
jbe
roll
and
dec
in
push
aaa
push
sub
gs
pop
sahf
push
jo
clc
shlb
je
dec
aad
test
jle
adc
xor
lods
out
xorb
mov
adc
jne
idivl
mov
stos
test
mov
pushf
in
testl
fs
addr16
mov
add
fistpll
inc
push
hlt
mov
sbbl
and
fbld
jecxz
mov
repz
orb
jecxz
imul
inc
push
imul
adc
xchg
lret
inc
test
jae
icebp
inc
add
mov
inc
push
mov
aaa
cmp
rol
test
mov
fldl
sbb
out
push
call
dec
enter
stos
ljmp
int3
push
cmp
cmp
enter
mov
out
mov
push
mov
adc
lcall
inc
jb
sub
dec
mov
flds
cmp
cmp
lret
or
aad
jge
push
sar
add
sub
lock
rcrl
xchg
jl
pushl
andb
ret
pop
or
inc
out
dec
mov
les
int
mov
cmp
lock
test
gs
mov
mov
push
inc
jb
sahf
push
sbb
jo
aad
push
sbb
dec
in
movsl
test
push
push
push
icebp
fistps
rorl
adc
pop
out
scas
sub
popa
repnz
mull
fisttpll
fucomp
cwtl
aad
nop
cmp
jge
sub
jo
gs
lea
add
add
xor
lcall
dec
jns
inc
or
lahf
shr
shll
mov
shr
or
sub
out
xchg
mov
pusha
repz
dec
sbb
mov
clc
dec
ret
lret
fcomps
fcomip
movsl
jnp
sub
or
inc
cmp
lock
add
add
les
jp
push
dec
xor
out
push
and
cmp
test
inc
cmc
inc
pop
popf
sbb
mov
arpl
stos
into
out
inc
cmc
jnp
cmp
jns
push
inc
lods
pop
pop
add
je
push
mov
leave
data16
mov
lcall
ss
dec
xchg
and
xchg
push
mov
fildll
mov
push
xor
add
xor
pop
stc
xchg
sub
mov
dec
pusha
mov
stos
lods
mov
jmp
sbb
pop
sbb
pop
or
pop
arpl
pusha
jecxz
ret
xchg
stos
lods
ljmp
mov
adc
test
add
push
xchg
push
pop
mov
inc
mov
sahf
nop
xor
mov
ret
divb
jb
jae
xchg
dec
ret
imull
mov
cs
adc
mov
loopne
mov
mov
add
sahf
pop
and
mov
pop
dec
lret
push
jge
xor
in
push
mov
jnp
mov
test
mov
fsub
mov
lcall
cmpsb
ficompl
sub
mov
jl
addr16
or
lahf
sub
mov
jg
mov
inc
mov
aas
lods
stos
dec
dec
in
adc
push
insl
and
mov
and
cmpsl
jg
in
cli
push
mov
fwait
iret
inc
push
add
jnp
lret
mov
rcrb
insl
repz
xor
and
jb
mov
andl
repz
rclb
fwait
jge
rcl
test
jne
lret
push
mov
ljmp
lret
pop
pop
outsl
popa
fisubrs
cltd
mov
cmp
fldt
jg
or
lea
xchg
xlat
sub
gs
sbb
jb
stc
cmp
hlt
mov
or
lock
pop
int3
outsl
pop
lret
movsb
jmp
adc
push
dec
frstor
test
in
or
sbb
ljmp
cmpsb
adc
decl
lcall
ret
test
fwait
xchg
addr16
mov
lea
push
jmp
imul
pop
sahf
push
mov
xchg
mov
pop
sub
jns
push
inc
add
jne
jae
clc
fs
sub
and
movsb
dec
mov
fisubs
outsb
subb
pop
xchg
ret
dec
aam
movsb
inc
dec
sub
pop
and
mov
jp
fmul
stos
ss
push
inc
sub
cs
xchg
mov
adc
cli
sbb
sbb
xor
pop
pop
std
sub
insb
adc
cmp
into
notb
pop
mov
mov
nop
pushf
cli
jl
jo
dec
cmp
in
cmp
insl
mov
sbbl
adc
mov
insl
test
adc
mov
or
mov
movsl
and
mov
das
popa
xchg
cmp
mov
lahf
mov
xchg
fdivrl
cwtl
sbb
mov
popf
loopne
int3
ror
lock
sbb
out
popa
or
inc
jns
cltd
bound
xor
shlb
add
je
adc
add
dec
jg
jle
shrb
es
xchg
or
test
dec
jne
dec
xchg
fwait
sub
push
jnp
push
pop
lcall
dec
lret
mov
je,pt
hlt
or
xchg
xchg
adc
inc
jae
fs
jl
push
mov
push
aam
jecxz
out
jae
cltd
pop
das
ret
out
pop
loopne
pop
adc
insl
jno
push
clc
cmpsb
push
dec
push
fisubl
wbinvd
test
and
aas
jnp
arpl
and
xchg
int
loopne
push
daa
mov
jmp
popw
roll
pop
fistps
cmp
xchg
pop
jmp
jecxz
scas
push
icebp
fstpt
jmp
mov
or
inc
fidivrs
scas
inc
sbb
shll
fisubrl
and
sahf
lock
adc
out
sahf
fs
push
sub
push
sahf
testl
xor
fnstsw
add
sbbb
xchg
bound
cmp
push
movsb
jg
mov
je
out
je
insl
jg
mov
xchg
or
int3
dec
aad
dec
lods
push
inc
xor
test
leave
mov
jge
imul
jl
pop
push
jbe
mov
cmp
scas
cmpl
sub
dec
xor
sbb
inc
test
adc
les
jno
movsb
jle
mov
xor
and
enter
in
xor
inc
ss
flds
movsl
xchg
lods
inc
pop
or
adc
or
cmc
jp
and
lock
lahf
push
jge
xchg
mov
leave
jb
sarb
push
jb
stos
les
jns
lock
imul
mov
stos
xchg
addb
cmpb
movsl
xor
imul
lods
sub
pop
push
xchg
lods
dec
in
add
sbb
sar
mov
out
mov
ja
rolb
sbb
test
cli
jecxz
out
xor
sub
stos
adc
addl
das
lret
test
adc
pop
inc
xor
dec
cltd
and
add
inc
stos
icebp
sub
pop
add
push
out
xchg
dec
repz
sub
sbb
stos
mov
push
lcall
repnz
inc
jo
test
aas
ficoml
sbb
xchg
les
xlat
aad
mov
fs
mov
dec
push
jo
jmp
dec
mov
cli
int3
iret
pop
fmul
jge
arpl
je
data16
notb
icebp
insb
push
testl
jne
push
sub
push
cs
shrb
out
push
mov
xchg
mov
mov
dec
sub
pop
ds
loopne
test
mov
sbb
notl
aad
xchg
dec
addl
insb
cmp
lahf
pop
adc
out
xchg
sub
mov
adc
or
add
mov
jns
jmp
out
xor
push
out
pop
bound
in
movsl
fbstp
les
push
std
push
jne
mov
adc
lea
pushf
in
xchg
pop
pop
inc
negb
dec
je
cwtl
and
or
xchg
mov
dec
popf
lods
mov
repz
or
outsl
popf
sbb
dec
push
xor
sbb
sar
mov
push
ljmp
push
dec
aaa
sbb
push
sub
push
xchg
fsub
xor
loop
cmp
mov
and
dec
sub
mov
adc
pop
aad
lret
dec
or
push
addl
jmp
xor
inc
jnp
mov
nop
test
dec
inc
ds
xchg
cmp
cld
bnd
sarb
lock
xchg
jp
fisttpl
imul
iret
mov
xchg
mov
sarb
testl
test
inc
cmp
pop
xchg
xchg
adc
movsb
push
icebp
ds
sbb
add
in
roll
pop
lret
fistpll
lods
ljmp
jne
mov
mov
jnp
shlb
aad
icebp
sub
andl
addr16
sbb
pop
sbb
jno
out
outsb
call
push
stos
mov
enter
fisubl
out
pop
xor
jmp
push
mov
dec
lahf
rorb
mov
mov
inc
in
loope
jge
sub
addr16
jno
insb
js
dec
xchg
pop
mov
adc
mov
inc
xor
clc
and
in
imull
cld
shl
pop
popa
in
xchg
sbb
push
dec
cmp
loopne
mov
sub
fstl
icebp
pushf
loopne,pn
leave
and
neg
cmpsb
xlat
sub
sbb
lret
lods
int3
test
enter
push
mov
fcmovnbe
lret
pop
dec
push
push
pop
or
jne
fidivl
outsl
xchg
jne
insb
outsb
sbb
xlat
push
or
lea
aad
test
inc
xor
addl
push
mov
inc
push
dec
push
not
pop
mov
rcrb
mov
jno
sbb
push
sti
add
or
jo
xchg
push
daa
stos
int3
repz
std
mov
decl
imul
mov
or
lock
jge
and
aam
dec
lret
and
push
xchg
pop
and
and
xchg
fisubs
lahf
lea
xor
add
in
jne
xlat
pushf
jl
popa
sbb
xchg
shll
sahf
jns
imul
mov
jno
sub
testb
adc
ljmp
adc
andb
in
xor
cmp
in
and
xchg
ret
nop
mov
xchg
xchg
mov
xchg
and
subb
mov
push
xor
cmpsb
adc
test
xchg
popf
add
dec
lock
cmp
xchg
xchg
inc
inc
scas
push
aad
stos
ret
ss
imul
inc
sbb
and
sahf
and
pop
jne
pop
jle
push
lret
mov
jb
daa
nop
jns
and
cmpsb
add
stc
mov
pusha
in
pusha
mov
sub
les
sahf
cli
inc
cmpsl
push
adcl
add
leave
loopne
loopne
jnp
inc
in
lcall
push
fisubrl
imul
xor
xor
mov
xor
and
ficompl
xchg
adc
rclb
stc
cmpsl
and
xchg
out
mov
inc
daa
setb
add
xor
push
popa
scas
ret
stc
andl
mov
add
lock
adc
jmp
lods
stos
xchg
iret
loop
jb
ret
dec
incl
ja
popf
or
dec
mov
popf
pop
dec
fldl
push
jae
add
pop
imul
mov
rcr
lock
xor
add
jno
loopne
pop
jbe
loope
outsl
lds
in
and
jle
push
and
or
ss
sub
std
inc
dec
jg
or
mov
adc
cli
mov
stos
xchg
or
adc
test
cmp
jle
adc
shlb
out
mov
dec
cmp
pop
jge
cwtl
lea
lahf
mov
dec
push
jecxz
repnz
adc
mov
pop
cmp
and
je
dec
test
out
into
inc
sbbl
sti
dec
ffreep
adc
mov
and
nop
xor
rclb
pop
ljmp
xor
pop
pop
fs
push
gs
mov
in
sbb
out
push
movl
std
xchg
std
push
adc
pop
test
jmp
repz
test
call
out
in
xchg
and
fs
adc
inc
jae
je
xor
cmpb
inc
ficoml
mov
stos
negb
jp
stc
mov
leave
jge
mov
mov
dec
or
call
repnz
std
ljmp
mov
inc
xchg
cmp
cltd
cmp
jle
inc
lret
push
scas
sbbl
loop
rcll
vprotq
adc
ficoms
ja
push
sub
cld
dec
iret
and
inc
ficoml
push
mov
or
mov
sub
dec
mov
cltd
in
cmp
inc
dec
add
mov
dec
add
movsb
or
cmp
mov
cwtl
add
aaa
outsb
and
in
int3
lret
scas
call
imul
pop
jp
lods
jne
inc
lock
mov
mov
les
pop
test
add
and
mov
pusha
xchg
aam
ja
mov
inc
sbb
andb
repnz
or
inc
sahf
sti
xchg
sti
imull
pop
or
shlb
loope
cmpsl
aam
push
ret
arpl
pop
or
sub
pushf
fistpll
ds
mov
pop
adc
lds
jge
cli
sub
mov
or
rolb
sbb
mov
xchg
imul
stos
and
test
add
out
mov
mov
std
and
test
sbb
or
test
mov
sub
lret
lock
xchg
mov
or
pop
jp
ret
stos
and
mov
mov
inc
in
inc
cli
insb
jno
mov
in
xlat
fcomps
ja
adc
movsl
sbb
sub
pushf
mov
rolb
sbb
and
sbb
sahf
out
aas
clc
or
or
mov
jb
repnz
mov
call
mov
aas
rcrl
xchg
dec
mov
outsb
push
jb
movsl
and
mov
adc
push
inc
or
jp
or
mov
std
xchg
mov
xlat
add
ja
xor
or
push
mov
shr
pop
cltd
dec
mov
jp
into
not
cmpsb
shr
shrb
subb
jp
xchg
push
adc
xchg
cmp
mov
adc
jns
int
mov
outsb
mov
inc
repnz
insb
pop
jno
xchg
pop
mov
aas
jecxz
test
sub
ljmp
ds
inc
jo
mov
jg
js
cwtl
repnz
cld
repz
sub
push
data16
cltd
mov
push
fisubl
enter
cmp
xor
jp
rcl
mov
aam
sahf
mov
pop
add
flds
mov
das
fwait
mov
popa
sub
addr16
pop
dec
dec
stos
jmp
xor
mov
nop
or
movb
leave
out
push
lret
xlat
mov
int3
das
cmp
mov
inc
mov
xchg
jecxz
hlt
es
cmovns
cld
repz
jmp
mov
idivb
dec
fs
push
in
imul
mov
mov
or
dec
std
or
mov
imul
mov
mov
mov
icebp
inc
pop
push
xorb
mov
xlat
fisubl
pop
dec
mov
mov
or
cld
addl
xor
movsb
sub
lahf
mov
cmpsl
loop
nop
insb
jbe
es
cmp
xchg
push
mov
jl
stos
test
jp
xchg
mov
shrb
test
bound
jg
out
in
scas
lods
pop
adc
push
popf
xor
ret
daa
stc
cli
push
arpl
cltd
stos
push
lea
sub
dec
leave
pop
and
mov
jmp
add
mov
cmp
mov
out
and
pop
and
adc
pop
push
mov
pop
idivb
adc
jno
pop
cmp
stc
fnstcw
sbbl
adcb
xchg
or
mov
ds
arpl
push
mov
popa
sub
pop
inc
add
cmc
lock
or
xor
lock
out
in
insl
scas
add
cmp
arpl
in
imul
mov
lcall
sub
movsl
jmp
fstpt
js
jnp
pusha
iret
ja
mov
test
cltd
shl
and
sbb
outsl
subb
jl
mov
dec
cmpb
sbb
lret
fcmovne
pop
pcmpeqd
mov
test
jl
test
push
inc
je
lcall
fdivs
mov
scas
inc
getsec
cmpsb
insl
push
lret
mov
fs
xor
inc
xchg
mov
xlat
adc
shl
fistpl
lret
dec
ja
call
add
push
xchg
mov
pop
cmp
sarb
cmc
dec
xchg
cmp
dec
xchg
jl
jp
adc
aam
les
jmp
daa
pop
add
repz
cmpsb
sub
stc
ficoms
xchg
cmpsb
jne
out
ja
rcrl
cmp
xor
int3
jmp
push
mov
fstps
fstl
addr16
jb
dec
or
sbb
inc
push
repz
add
inc
push
rcl
outsl
dec
push
inc
cmpsl
stos
or
pop
lds
lea
ljmp
push
mov
cmpsl
out
xchg
sub
add
add
ja
iret
push
roll
ss
adc
adcl
mov
lret
bound
push
mov
pushf
dec
push
xchg
ret
ficomps
pminsw
in
sar
daa
test
das
cltd
idiv
jbe
testb
fsubp
or
cmp
in
and
outsb
cwtl
mov
scas
mov
out
dec
fldl
jg
xor
add
dec
mov
adc
js
test
lret
test
xchg
mov
into
xchg
ret
leave
loopne
in
out
xchg
push
sub
dec
mov
and
inc
jge
pop
jmp
jnp
sub
pop
sub
pop
jg
add
mov
add
in
xchg
mov
pop
or
add
sbb
jp
mov
fmull
and
mov
cmp
pop
push
sub
enter
lds
sub
mov
test
add
fwait
enter
or
jne
out
mov
sub
mov
daa
lds
rclb
pop
jl
icebp
ret
ror
fldcw
xor
mov
push
mov
ss
mov
lods
dec
or
fildl
pop
je
inc
gs
push
and
mov
dec
pushf
dec
push
out
push
cwtl
pop
and
lcall
enter
ds
cmp
adc
and
mov
sub
xchg
stos
nop
adc
out
in
test
dec
pop
pop
out
test
leave
push
jp
sbb
fsubrl
jno
loopne
insb
add
jo
pop
js
ret
adc
je
pushw
inc
testb
sbb
push
dec
nop
incl
and
lret
mov
push
cmpl
jae
int
leave
add
cs
cmc
inc
cmp
push
icebp
inc
push
xchg
mov
out
dec
lea
pop
gs
jle
insb
sahf
sbb
cwtl
push
xorl
sub
push
push
fcmovnb
xor
flds
inc
inc
test
sub
jmp
push
push
loopne
cld
dec
cwtl
pop
lcall
pop
out
add
mov
xchg
lret
pop
mov
bound
cmpsl
mov
icebp
shl
cmp
out
sbb
cmpsb
mov
push
mov
inc
adc
daa
jle
out
jae
push
sti
scas
sbb
sbb
ret
into
ftst
push
mov
jo
adc
pop
jp
xchg
sbb
mov
fucom
divl
ds
push
out
push
shlb
jge
int
shll
cmp
aam
mov
lret
and
lods
mov
cmp
sbb
and
aas
pop
mov
popf
lock
and
stc
divl
mov
mov
fs
xchg
nop
outsl
cwtl
out
jp
push
in
xor
inc
inc
lods
xchg
in
in
mov
sbb
movsb
insb
adc
fisttps
jb
in
mov
mov
lods
pop
shr
lcall
mov
sbb
adc
stos
test
pop
rclb
and
fcmovnbe
sub
sbb
dec
aas
pop
and
in
jnp
stc
adc
shlb
fists
pushf
sbb
and
xor
xchg
push
sbb
popl
jge
mov
cmp
and
mov
out
filds
mov
xchg
lahf
mov
dec
xchg
pop
and
mov
sub
icebp
jle
and
pop
xchg
push
shl
shll
adc
mov
push
jns
icebp
xchg
idiv
fdivrs
in
xorb
pop
adc
mov
jmp
adc
mul
pushf
add
adc
dec
sbb
or
adc
aam
xchg
pushf
mov
mov
sbb
push
mov
or
movb
inc
jmp
sub
in
dec
int3
inc
test
xor
inc
out
loop
or
add
aas
pop
lock
stos
cltd
add
into
iret
or
into
notb
sbb
outsl
fiadds
int
nop
call
lret
mov
lret
xchg
out
add
pop
push
mov
jmp
mov
xor
test
jmp
outsb
mov
mov
xor
sub
pop
push
fldenv
inc
mov
pop
imul
pusha
ljmp
pusha
cmp
push
mov
mov
scas
mov
call
xor
jbe
mov
mov
in
outsl
jecxz
mov
adc
cmpsl
or
jmp
push
popa
adc
out
lcall
pop
inc
int3
int
or
scas
iret
add
push
out
jbe
dec
insl
adc
add
add
mov
mov
mov
rorl
pop
lods
fs
rclb
out
mov
ret
out
movsl
dec
dec
xchg
loopne
lock
inc
push
hlt
stc
negl
push
push
fnsave
push
lret
jne
mov
js
mov
mov
outsl
ds
iret
adc
sti
andb
dec
nop
dec
xchg
repnz
cmp
into
sbb
sbb
rolb
cmp
and
adc
jbe
and
pop
mov
inc
pop
cmc
fisttpl
inc
push
aas
jg
jne
stos
mov
ja
adcl
dec
inc
adc
out
or
mov
jb
lods
lods
add
pop
and
cld
les
es
fdivrl
cmp
xor
xchg
int
sub
scas
add
xchg
bound
mov
push
add
mov
cmpsl
pop
sub
push
xchg
lret
aaa
sub
test
sbb
sbb
ret
inc
sbb
mov
cld
xchg
ljmp
xchg
fs
jns
popa
xor
lret
mov
cmp
lock
in
rep
test
out
xchg
aaa
mov
int3
fldt
dec
cli
pop
inc
jg
push
icebp
enter
xor
lcall
or
clc
aas
mov
popa
out
jb
mov
mov
adcl
jo
inc
mov
and
clc
add
pusha
dec
sbb
jns
jmp
jmp
popa
dec
xor
insl
fs
in
xchg
mov
test
icebp
cmp
pop
or
cmpsb
dec
and
sbb
mov
sbb
pop
inc
or
push
push
iret
push
push
je
imul
cwtl
stc
movsl
cmp
mov
fstpt
movsl
out
data16
popa
jb
arpl
sahf
iret
in
stc
shrl
fidivrs
dec
mov
jnp
xchg
sbb
add
ljmp
and
jge
dec
or
test
fs
or
cmp
mov
jp
jb
jno
ret
out
enter
xor
xor
sti
adc
mov
or
or
mov
mov
call
mov
mov
sub
popf
inc
xor
les
pop
out
mov
lahf
push
shll
mov
hlt
dec
shl
sub
adc
dec
js
cmp
in
push
inc
push
popa
movb
cmp
cmp
hlt
cs
sbb
add
push
enter
popa
daa
mov
orl
jns
sti
out
push
jmp
push
dec
sbb
pop
or
pop
rcrb
cmp
xchg
pop
std
shlb
inc
xor
pusha
mov
jg
mov
rol
mov
ss
adc
popf
lods
push
mov
and
adc
push
sub
mov
test
sti
pop
je
pusha
push
jge
inc
in
cmc
mov
or
jb
fs
ds
out
adc
dec
into
jle
movsb
jmp
add
out
pop
cltd
fisubrl
add
sahf
xchg
lret
fidivl
or
xor
pop
outsb
in
cmp
pop
push
mov
lea
dec
cmp
xchg
xchg
mov
fwait
ljmp
loopne
xchg
loopne
in
ds
dec
in
pop
sub
das
inc
push
push
sub
aas
cmpb
jp
push
cld
popf
adc
pop
cmp
inc
movsb
add
or
sub
push
in
pop
sti
and
fldenv
ret
mov
outsl
pushf
fimull
add
jne
cmpsb
adc
mov
mov
mov
cltd
bound
cmp
repz
cmpsl
cli
cmp
sbb
in
jbe
jl
cmp
and
jle
pop
pop
out
insb
test
xchg
xchg
mov
sub
sub
and
stc
sarl
ret
mov
imul
push
cmc
mov
sahf
xchg
mov
jp
test
cmp
jns
mov
mov
dec
pop
dec
mov
in
jns
add
inc
loopne
adc
std
fsubrl
and
out
push
cmp
in
jge
in
sbbl
add
imul
push
mov
lods
lret
jp
pop
into
or
popf
fdivrs
sar
mov
inc
mov
xchg
inc
xorl
fdivrl
mov
dec
clc
ffreep
mov
or
test
outsb
out
cs
inc
mov
fiaddl
stc
in
rcr
xor
stos
in
and
cmp
imul
adc
mov
out
es
pop
cli
push
fldl
jno
lea
cmc
loope
xchg
jmp
outsl
pusha
jle
js
idiv
xlat
mov
lcall
stc
fadds
sbb
mov
cmpsl
mov
jo
hlt
jae
pop
gs
jno
in
push
test
dec
in
cmc
fsts
scas
call
xor
lods
les
icebp
push
js
int
pop
test
dec
movsb
push
stc
mov
out
loope
loope
sbb
lcall
and
lret
adc
cmp
mov
and
ss
push
scas
js
cwtl
fmuls
mov
out
out
mov
sub
lods
add
lods
jns
add
cmp
dec
pop
mov
fdiv
inc
pop
mov
add
shlb
clc
jmp
cmp
pusha
loopne
daa
outsl
gs
or
dec
aam
fbstp
ds
cmc
cmp
pop
mov
adc
jae
pop
icebp
shrb
sarb
popa
lods
mov
pop
aaa
inc
std
xor
enter
mov
int
pop
jecxz
sbb
je
clc
jmp
cli
lcall
xchg
aad
in
into
mov
mov
push
icebp
jae
dec
push
not
pop
push
pushf
pop
jae
lret
mov
pusha
aaa
aas
add
mov
push
int
push
pop
adc
ljmp
les
in
mov
jae
lret
test
pop
dec
pop
test
lret
xchg
push
das
push
push
pop
xchg
std
push
jp
and
jg
push
neg
fs
push
add
mov
xor
divl
fxch
sub
xor
push
or
sahf
int
push
out
cmpsb
jns
xor
pop
outsb
jnp
std
lahf
nop
jle
loope
imul
pop
inc
inc
xor
cmpsb
cs
bound
push
mov
xor
lret
imul
call
sbb
aas
sbb
mov
cmpsl
jb
in
scas
xor
and
fidivl
xor
pop
movsb
mov
cli
jns
ret
fists
mov
jle
lahf
lock
xchg
repnz
inc
lahf
fwait
pop
sbbl
jno
xor
out
cmp
dec
mov
pop
inc
mov
mov
xchg
shlb
pop
push
sub
std
lods
test
gs
jecxz
inc
daa
fildl
add
lret
outsl
inc
sarb
adc
loopne
sahf
and
add
sbb
dec
rcl
push
int3
mov
sbb
adc
clc
cmp
and
mov
lahf
pop
adc
cs
cmp
outsb
cmp
adc
mov
rolb
pushf
mov
dec
hlt
add
push
mov
lds
repz
rcrl
sbb
je
pop
xchg
test
ret
or
iret
pavgb
std
push
xor
or
xchg
dec
and
xor
mov
xor
lcall
pop
xchg
inc
shll
repz
push
fiaddl
into
aaa
push
cltd
cmp
cmp
stos
and
jnp
pop
mov
cmp
pop
and
xchg
adc
sbb
sub
xor
sbb
jge
push
in
xchg
dec
inc
ret
subl
mov
pop
mov
sbb
lods
roll
mov
out
or
fsubp
or
cmc
mov
push
xchg
mov
push
cwtl
xor
and
mov
or
cmp
or
adc
lahf
es
add
inc
jns
mov
jg
out
lahf
adc
mov
imul
push
sub
mov
push
aad
push
shl
pushw
pop
sub
mov
rorb
mov
scas
pusha
out
pusha
in
lret
popf
sub
dec
ss
dec
mov
gs
and
inc
and
out
xchg
pop
jae
in
cs
mov
sar
fnstenv
pop
jge
add
out
adc
repnz
or
mov
stos
mov
mov
stos
addr16
ret
or
in
lret
sbb
movsl
xchg
dec
std
sbb
mov
and
and
daa
aam
pop
lret
scas
subb
loop
dec
in
arpl
stc
das
mov
out
jge
rcrl
shll
xorl
adc
dec
mov
clc
jmp
gs
and
xchg
sarl
sbb
jnp,pt
sbb
mov
add
dec
ljmp
sarl
cmp
pop
adc
int3
xor
add
test
pop
pop
and
xlat
fcmovnb
push
dec
push
xchg
sub
lock
push
pop
add
pop
pop
dec
outsl
and
aas
iret
mov
leave
push
mov
dec
fdivs
bnd
xorl
in
and
mov
fcmovu
shlb
inc
sbbl
xor
cmpsb
push
jnp
pop
pop
mov
rdtsc
aad
pop
sbb
inc
mov
stos
cmp
or
jae
es
leave
arpl
push
imul
sbb
pop
xor
jle
xor
sbbb
enter
jnp
and
lds
popa
xor
xchg
pop
les
cmp
push
ljmp
lret
jp
pop
lcall
push
out
dec
push
and
or
xlat
int
mov
test
stos
mov
mov
xorl
nop
cmpsb
lret
fimuls
cmp
mov
mov
mov
in
and
xlat
pusha
mov
mov
lock
nop
lcall
sub
loopne
stos
imul
xchg
cld
clc
sbb
call
aad
test
shlb
shll
loopne
lock
mov
fs
push
xor
clc
jecxz
lcall
frstor
jg
mov
mov
dec
sbb
or
jecxz
mov
cmp
fnstcw
pushf
lea
mov
xor
jp
nop
mov
mov
stos
sbb
ljmp
scas
and
xchg
jg
sub
mov
add
aad
fs
pop
push
std
mov
xor
das
ficoms
leave
cld
xchg
icebp
jb
mov
sbb
insb
popa
sub
dec
iret
sub
loope
mov
test
negb
adc
hlt
loope
push
mov
insl
cld
or
sub
mov
cmp
jp
cmp
push
pushf
mov
pop
cmpl
fimuls
jbe
jo
add
outsl
pop
js
pop
aas
sub
es
push
push
sub
sbb
cli
xchg
inc
mov
cmp
xor
mov
imul
xorl
adc
repz
xlat
add
dec
sarl
add
cmc
lea
mov
mov
call
jae
movb
xchg
popa
mov
mov
xor
push
push
fstps
dec
dec
dec
mov
cwtl
pop
mov
cmpsb
andb
and
loop
xchg
stos
lret
std
xchg
sub
cmp
xchg
enter
hlt
jge
push
jge
bound
or
and
repnz
dec
xchg
pop
and
or
sub
jbe
mov
stc
xor
pusha
mov
cwtl
inc
cmp
outsl
or
daa
jno
test
sahf
shrl
jb
leave
inc
ljmp
das
adc
xchg
mov
pop
out
pop
xlat
add
sar
and
jecxz
lea
out
mov
cwtl
arpl
fidivrs
lds
pop
push
into
sbb
xchg
and
mov
adc
mov
cmp
fisttpll
inc
mov
mov
ljmp
sahf
ret
jno
sub
xorl
push
push
push
repz
xchg
sub
lret
pop
jp
cltd
xor
jns
adc
xor
std
sbb
popf
das
test
mov
fidivs
xlat
cmp
push
repnz
mov
adc
cmpsb
sti
fsub
fnstsw
adc
pop
lods
dec
push
mov
out
jmp
movsb
mov
xor
rcll
mov
std
xor
sahf
outsb
pushf
xchg
rcl
test
movsl
fildl
push
dec
lcall
sysenter
or
shll
js
dec
dec
sbb
xor
dec
jle
xchg
sbb
and
ljmp
aam
outsb
pop
push
cmp
lea
mov
add
dec
cwtl
bound
mov
jnp
out
cmp
xchg
jg,pn
xor
inc
and
inc
jp
nop
mov
xchg
dec
aam
xchg
stos
nop
jne
neg
mov
daa
cmovl
lds
hlt
inc
mov
xor
negl
sti
xor
mov
xchg
stos
int3
rcl
cltd
enter
flds
cmp
add
mov
xchg
rorb
cmp
xor
aam
imul
push
outsl
lock
cltd
xlat
and
sbb
nop
dec
hlt
in
dec
mov
jns
jmp
and
aaa
testb
ljmp
shll
cmpsl
fs
xchg
lea
xor
mov
adc
sub
mov
pop
movsb
jmp
lds
lret
cld
pop
cmp
pop
sbb
hlt
cmpsl
into
jnp
mov
xchg
fisubrs
daa
pop
xchg
xor
hlt
jle
mulb
lret
inc
xchg
adc
mov
fcmovbe
inc
lahf
mov
popa
sti
mov
cmpl
pusha
int3
rorl
pusha
or
cmpsb
les
or
leave
inc
scas
jl
mov
cmp
or
ret
repz
imull
jbe
stos
adc
mov
inc
push
mov
mov
push
fs
sub
mov
stos
xchg
mov
stc
test
pop
js
ljmp
and
or
or
mov
outsb
jnp
repnz
sbb
xchg
test
and
jne
out
and
mov
je
test
push
cmp
mov
bound
loopne
jo
gs
in
push
ret
dec
xchg
into
xchg
bound
sti
shr
and
dec
sbb
data16
scas
adc
int3
int3
mov
cmp
mov
insb
jp
pop
jg
jmp
sahf
lock
fwait
dec
xlat
movsl
mov
dec
mov
jmp
clc
or
add
fdivs
inc
js
pop
mov
mov
cmp
xchg
jmp
inc
dec
sub
outsl
cli
mov
lret
aad
mov
hlt
dec
push
xlat
out
std
movsl
daa
movsl
addr16
cmc
mov
and
out
cltd
lret
popa
inc
cmp
js
movsbl
xchg
fistpll
mov
pop
add
sub
lret
pushf
shrl
popf
sub
adc
lea
je
jae
push
mov
mov
enter
pusha
and
notb
inc
cli
incl
inc
ljmp
push
shlb
movsb
ficoms
aad
hlt
add
cmc
divl
sahf
outsb
out
xorl
xchg
aaa
fucomi
daa
push
push
lods
jmp
es
icebp
mov
xchg
and
push
mov
pop
aad
iret
inc
dec
dec
insb
lret
adcb
jle
test
push
jg
xchg
into
ret
adc
push
mov
pop
fsubrs
pop
mov
lods
leave
mov
lcall
push
test
rcll
dec
cmc
add
mov
stos
in
insl
in
jns
add
sub
sti
mov
adcb
rcrl
push
mov
mov
pop
cmp
push
movsb
movsb
sub
mov
andb
orl
jno
icebp
sub
movsb
xor
pop
xchg
or
xchg
and
jo
dec
ds
jp
arpl
int
mov
or
mov
sub
lock
mov
arpl
fninit
mov
test
pop
xlat
insb
inc
jp
jne
fcoms
inc
inc
pop
outsl
rep
in
cmp
call
sti
sti
pop
dec
mov
dec
and
push
xchg
dec
test
out
cmpl
fwait
mov
hlt
mov
inc
lock
xor
lds
mov
xlat
dec
mov
mov
fsubrs
ljmp
outsb
xor
inc
sbb
xchg
loop
adc
aad
inc
jno
inc
mov
and
mulb
or
pop
lahf
fwait
pop
pop
add
xor
sbb
sbb
sbb
push
mov
test
fiaddl
xchg
pop
or
movl
push
pop
arpl
adc
je
into
mov
inc
sub
dec
mov
cmp
mov
icebp
pop
dec
xchg
adc
mov
in
ret
stos
add
xor
sti
jmp
ret
leave
sub
adcl
or
and
push
sbb
mov
or
jne
adc
mov
adc
test
pop
adc
cmp
mov
mov
pop
jl
fnstsw
dec
sbb
inc
out
in
mov
dec
aad
repnz
iret
sub
xor
test
inc
divl
adc
mov
and
push
dec
subb
dec
inc
rorb
xchg
imul
stos
mov
mov
lods
lock
jg
pop
addl
add
mov
rol
jae
ljmp
fistpll
icebp
adc
jb
pop
mov
jge
inc
mov
lret
xchg
push
rorl
outsl
sub
push
loop
es
test
call
xor
mov
aam
jnp
sbb
dec
mov
xchg
lahf
xchg
out
sub
xchg
icebp
jecxz
ret
lods
xor
mov
adc
sub
cmp
mov
aas
int
insl
mov
scas
mov
sub
xor
and
cmp
out
jb
cmp
rorl
pop
popa
shrb
lds
dec
mov
imul
stos
and
test
mov
loopne
and
push
dec
test
xor
dec
adcl
cmp
mov
or
lea
pop
xor
lods
mov
loope
cmpl
mov
inc
or
ja
mov
jb
mov
dec
inc
lods
push
movsl
fisubl
push
jne
fistl
lock
stos
xor
pop
sbb
push
leave
mov
je
mov
dec
insb
lcall
adc
mov
cltd
mov
enter
push
jb
pop
cld
pusha
sub
scas
push
xchg
loopne
cmc
jae
mov
nop
pop
stos
mov
std
inc
or
mov
ret
jo
lret
dec
and
mov
les
imull
push
shll
xchg
testl
dec
mov
lock
inc
arpl
sub
outsl
orb
xchg
and
je
in
pop
pop
into
mov
sbbl
lock
inc
mov
mov
mov
hlt
lods
cli
push
pop
enter
push
pop
and
aam
sub
ja
testb
xlat
sub
lahf
mov
jle
jne
sbb
dec
sub
adc
orb
sbbl
cmpsl
jne
divb
mov
lods
and
push
fistps
dec
adcb
ja
inc
xor
add
int
repz
mov
xchg
dec
jb
mov
lret
jno
mov
xchg
sarl
dec
stos
jg
in
sahf
les
push
leave
cmp
daa
inc
or
je
sub
add
movsb
inc
pop
andl
jb
xlat
jg
sbb
xchg
mov
mov
cli
adc
mov
jl
adc
in
push
ret
xlat
cmp
adc
inc
popa
in
push
mov
inc
aaa
mov
xor
std
sub
xchg
inc
inc
mov
in
test
add
sub
and
and
sbb
inc
and
in
repnz
jno
push
addr16
addl
jle
adc
ret
cmp
outsb
mull
fistpl
sarb
jg
push
arpl
mov
repz
cmp
ret
jg
adc
mov
nop
sbb
pusha
enter
mov
jbe
jle
mov
push
mov
push
test
notl
rcll
mov
cmp
inc
mov
adc
cmp
arpl
or
inc
cli
sahf
inc
mov
push
sub
roll
mov
aaa
lahf
jg
cli
subl
pop
cs
xlat
pushf
repnz
shl
mov
adc
lret
adc
or
scas
fcomps
mov
mov
add
add
mov
jns
push
je
sub
hlt
dec
mov
add
pop
int3
mov
shl
xchg
loope
aad
iret
xchg
or
mov
jbe
std
into
xor
fnstcw
cmp
pusha
and
bound
cmc
mov
cmp
or
inc
test
lods
mov
sub
pop
lock
mov
decl
ljmp
fidivrs
ss
dec
add
test
data16
stos
mov
dec
inc
div
mov
jno
push
jle
scas
lds
arpl
mov
int
stos
mov
or
insl
mov
cmp
mov
sub
sbb
mov
adc
les
lahf
and
dec
addr16
into
daa
and
sub
ret
hlt
or
jge
out
pusha
hlt
pop
mov
jecxz
pop
lea
xchg
xchg
dec
scas
jnp
daa
pop
jge
jae
sub
and
sub
cli
cmp
mov
sahf
fisttps
mov
sahf
cld
and
js
dec
jno
out
scas
test
add
jg
push
pop
test
movsb
dec
mov
mov
test
xchg
mov
pop
cmp
jno
fsubs
ficoms
inc
sub
std
fadds
sbb
or
cwtl
mov
test
lea
cmp
dec
lcall
and
popf
out
shl
xor
cld
in
mov
sbb
adc
es
xchg
repz
push
leave
mov
movsl
jmp
xchg
pop
insb
fstl
add
xchg
add
ret
jmp
inc
and
xor
fists
adc
arpl
pop
aad
add
stos
adc
cli
fists
addr16
fs
ljmp
lret
mov
popf
xchg
js
cmp
fbld
mov
sbb
pop
or
cwtl
sub
jno
loope
and
sbb
and
fstp
and
adc
jo
jmp
sub
fdivp
cltd
shlb
pop
leave
dec
movsb
ret
mov
shlb
sub
imul
fildll
add
sbb
sub
out
fmuls
lret
xchg
scas
inc
xor
mov
adc
popf
mov
lods
jo,pt
ja
xor
mov
mov
cwtl
or
sub
dec
negl
clc
mov
mov
call
in
push
sbb
sbb
sub
sahf
and
cmp
pop
imul
and
dec
inc
rclb
into
movsb
pop
push
inc
scas
mov
jnp
or
pop
sbb
add
movsl
jae
dec
xchg
sbb
mov
and
daa
and
imul
leave
rorl
push
fwait
insl
xchg
mov
das
push
mov
enter
out
lahf
or
jne
mov
and
js
mov
sbb
sub
int
mov
sub
or
lea
sub
popa
sub
mov
cmc
int
jno
out
jae
in
test
add
jne
cmpsb
cli
cld
dec
and
xor
sub
dec
inc
js
stc
jno
cmpsb
jo
or
and
jecxz
mov
lock
mov
insl
sub
mov
pop
aad
sahf
xor
cmp
rol
pop
jge
inc
inc
mov
outsl
adc
xor
add
cmp
xchg
mov
mov
orb
mov
pop
push
stos
push
mov
cmp
cmp
xor
xor
add
popf
aas
cld
arpl
jmp
loopne
or
in
and
notl
std
in
int3
adc
movsb
gs
adc
bound
out
sbb
daa
out
addr16
stos
inc
cmpsl
out
xor
shlb
cmp
mov
mov
std
loope
mov
rol
add
lahf
mov
inc
lods
out
insb
push
clc
fiaddl
lcall
jb
stc
popf
sub
sbb
ljmp
jge
xchg
stos
xabort
xor
and
sub
daa
mov
cli
push
fimull
adc
lahf
inc
jle
das
std
mov
cmpsb
fstps
jp
out
pop
inc
outsb
cmp
lds
adc
das
xor
popa
dec
pop
lea
fisttps
mov
cmpsb
xchg
jle
cmp
mov
xchg
aam
pop
jo
and
sub
adc
xchg
adc
pop
ret
ljmp
pushf
add
enter
add
mov
mov
fs
fisttpll
lcall
loop
aas
jmp
add
ficoms
add
adc
inc
lds
stc
repz
outsb
inc
sbb
insb
add
into
push
mov
pop
int
out
mov
scas
or
inc
rclb
inc
mov
sbb
sub
shl
in
nop
lds
daa
out
out
and
xchg
mov
pop
mov
sub
push
andl
psubusb
push
jg
xor
adc
xchg
outsb
int3
lret
fistl
mov
dec
ret
dec
jo
mov
cs
push
push
cmpsb
jmp
xor
push
lods
add
ljmp
les
jns
cmpsl
push
adc
jns
cmp
jecxz
and
mov
cmp
add
or
and
fsubrp
ljmp
out
xchg
mov
into
cwtl
push
dec
push
inc
jnp
cmp
rol
jecxz
fucompp
lret
lahf
fbld
pop
roll
int
jno,pn
hlt
mov
test
cs
ss
test
lea
xor
add
lahf
or
push
imull
push
sbb
xchg
repz
cwtl
stos
push
sub
sahf
dec
mov
push
stos
add
bound
inc
leave
add
and
int3
iret
je
fsubl
cltd
xchg
add
lods
sub
mov
push
add
xchg
inc
call
or
sti
repz
xchg
or
rcrb
mov
shll
fdivp
mov
pop
push
inc
xor
sub
out
lods
mov
cmc
jne
pop
mov
loop
int3
lds
and
repz
por
daa
and
xchg
sbb
mov
test
push
fmulp
adc
xchg
mov
dec
jecxz
sub
add
daa
addr16
adc
or
cmp
jecxz
mov
mov
arpl
testl
notb
xchg
mov
sbb
fisttpl
cwtl
cmp
jmp
add
addr16
cmp
outsb
call
call
in
addb
or
mov
cmp
loop
lahf
add
and
cltd
push
cmpsb
push
mov
enter
xor
pop
ss
mov
dec
mov
jmp
lahf
imul
loop
push
roll
jmp
into
scas
jmp
jno
xchg
push
xchg
mov
sub
hlt
pop
push
orl
inc
movsl
in
push
xchg
pop
mov
pop
mov
jmp
jg
leave
push
push
add
pop
subl
pusha
xchg
les
scas
ss
je
jo
sub
and
pop
into
fcoms
add
cs
sub
jle
xchg
cmc
inc
iret
xchg
sub
es
xchg
hlt
andb
adc
fisttpll
ds
pushf
sahf
cmp
xchg
ds
fcomp
rolb
lea
jecxz
and
or
jno
popa
out
mov
aam
divb
repnz
adc
rorb
lret
jns
add
push
inc
sahf
xchg
xlat
rolb
cli
das
jp
shlb
aaa
push
in
lahf
aaa
push
pushl
mov
rcrl
rol
dec
icebp
imul
add
jns
mov
pushf
clc
lds
into
dec
test
ret
dec
cmp
cwtl
sete
pop
jp
mov
pop
js
stos
cmp
jbe
mov
mov
add
lcall
adc
insb
mov
xor
cmp
imul
lcall
iret
das
jo
insl
mov
and
lahf
xchg
mov
into
jmp
mov
loopne
mov
add
cmp
cmc
out
dec
push
fstpl
arpl
and
mov
cltd
test
and
out
mov
push
fchs
stos
std
mov
sahf
fwait
aas
jns
lods
cmp
jb
mov
add
dec
lcall
push
popa
xor
inc
movsl
push
mov
rorl
jns
or
cli
fwait
imul
mov
cmpsl
mov
ret
xorb
xor
xorb
xchg
out
sbb
insb
xor
xchg
fnstsw
insb
test
mov
push
xchg
icebp
out
inc
inc
add
lds
xor
in
out
iret
dec
pusha
test
ds
out
pushf
and
data16
leave
shll
sbb
cmp
push
and
mov
gs
je
mov
jae
jno
xchg
outsl
sub
jns
nop
bound
jb
jle
add
inc
mov
pop
test
fistpl
dec
lock
dec
gs
dec
dec
mov
xchg
inc
fcoms
fnsave
jg
mov
test
cld
jo
cmp
mov
cmpsb
out
mov
mov
pop
and
xchg
roll
cmp
push
lds
loope
daa
xchg
pop
arpl
mov
testb
rcrb
xorb
shll
cld
std
pop
pop
fwait
cs
xchg
xor
and
pop
mov
ret
mov
cmp
testb
in
repnz
fwait
loope
lods
or
loope
sub
sbb
jg
dec
cmc
jle
decl
xor
lods
cld
cmp
pop
mov
and
das
push
inc
leave
cmp
lret
popl
mov
adc
push
cld
pop
dec
pushf
ljmp
aad
arpl
ljmp
movsb
fiadds
lahf
subl
xor
xor
outsl
xchg
sbb
fbld
xchg
divb
xchg
adc
fiaddl
enter
mov
sbb
repnz
das
mov
into
add
stos
test
or
dec
cmc
stos
inc
lock
xlat
cmp
cmp
cmp
test
int
add
mov
push
cltd
mov
adc
mov
subl
mov
enter
or
mov
divb
adc
divl
or
and
lcall
dec
popa
shl
int
mov
into
adc
xlat
fs
sbb
test
fsin
js
pop
add
insl
cmp
rclb
mov
out
mov
xor
sub
xchg
sbb
sahf
mov
andl
mov
xchg
adc
lcall
rcl
stos
add
or
cmp
cmp
addr16
jle
dec
loop
ja
sub
fnstenv
jle,pt
sbb
xchg
xorb
movsl
lods
roll
outsl
xchg
dec
push
mov
xor
fs
ja
sub
enter
arpl
aas
ljmp
mov
outsl
dec
lret
mov
aam
shlb
dec
mov
pusha
pop
pop
mov
mov
and
jge
xchg
movsb
cmpsb
pop
push
out
out
jle
lods
mov
pop
pop
push
loope
mov
mov
adc
push
sub
cli
push
lret
mov
ljmp
popf
sub
mov
outsl
fld
repnz
cs
sbb
out
lahf
out
mov
mov
xor
cmpsb
ja
cld
adc
or
dec
out
insb
mov
sub
movsb
call
popa
cmp
sbb
lods
xrelease
add
inc
aad
mov
mov
cmp
cmp
rorl
fldt
lret
mov
pop
pop
jl
push
xchg
inc
lods
inc
sbb
inc
je
push
add
cmpsl
jae
and
repnz
dec
and
mov
les
jge
ja
inc
inc
push
arpl
jb
fcmovb
lock
fcmovbe
fiaddl
mov
repz
popa
mov
loopne
out
es
dec
cmovne
inc
cmp
test
sarb
pop
in
stc
jmp
push
pop
cmc
in
outsb
jb
loope
pop
jae
adc
sahf
push
mov
rcrl
and
cmpl
cmpl
sub
mov
imul
call
imul
dec
mov
stos
aaa
jl
ret
roll
das
and
mov
leave
xchg
into
pop
cmpsb
mov
data16
out
out
push
je
cld
pushf
icebp
subb
sbb
out
movb
pop
loope
jle
push
adc
scas
pop
cwtl
aad
mov
out
iret
out
cmpsl
stc
icebp
inc
jmp
jp
mov
mov
xchg
mov
jg
fistl
stos
sub
xor
out
orb
cmpl
xor
add
in
pushf
dec
dec
push
aas
push
mov
pop
jno
cwtl
push
push
xchg
mov
inc
subps
xor
and
imul
std
in
sub
ss
pop
pop
test
inc
mov
pop
lcall
dec
mov
cmpsb
ds
iret
xor
add
jl
hlt
popf
xor
pop
hlt
ret
or
inc
call
adc
push
or
rolb
mov
hlt
test
aam
pop
mov
pop
jns
inc
cmp
mov
mov
flds
mov
sbb
xchg
popf
push
add
popl
xchg
popf
into
fistpll
xor
add
add
jmp
scas
xchg
loope
outsl
lahf
cmpsl
xchg
pop
out
mov
add
mov
mov
pop
fcoms
fists
and
sar
pop
pop
std
xor
stos
push
push
xchg
dec
cmpsl
add
ret
ds
dec
es
jmp
sbb
jns
or
icebp
pop
or
mov
mov
test
jo
test
jp
cmp
add
xor
mov
mov
pop
dec
mov
mov
fisttpll
not
sub
pop
pop
ret
gs
jae
andl
mov
in
cltd
fistpll
test
jecxz
lds
adc
lret
xchg
arpl
lea
push
lods
pop
cmp
fcomps
mov
jb
jge
bound
adc
push
dec
popa
mov
stos
push
push
cmp
test
mov
pop
mov
fs
or
mov
shll
sarb
inc
in
jbe
jle
idivb
out
mov
nop
fsubr
xchg
ja
clc
mov
insl
movsl
ja
out
in
lods
inc
mov
inc
pop
cmc
lret
out
push
pop
pop
cmpl
stos
clc
lret
sti
pop
test
xchg
fs
ja
xchg
outsl
ljmp
movsb
dec
xchg
sbb
es
pop
inc
subb
pop
test
dec
arpl
push
fnstsw
mov
xchg
out
push
in
pop
arpl
scas
add
mov
inc
push
mov
jmp
xchg
push
dec
das
stos
jae
pop
sbb
bnd
inc
jne
and
cltd
imul
lahf
mov
jo
adc
fmuls
xor
js
cmp
push
cwtl
mov
sbbl
pop
inc
mov
dec
inc
cli
ficompl
xchg
pusha
daa
gs
cmpsb
dec
pop
std
mov
dec
shll
mov
shll
pop
add
push
xchg
imul
les
mov
push
aas
jmp
mov
cmpb
and
shll
xor
ret
mov
outsl
scas
and
pop
aad
aam
les
sub
mov
lcall
dec
rclb
cmc
adc
imul
push
xlat
clc
fnsave
cmp
push
subl
testb
xchg
imul
pop
lret
sbb
fs
cmpsb
jbe
adc
inc
les
out
bound
lahf
test
fcmovnbe
mov
stos
mov
rcrl
xchg
iret
adcb
mov
stc
js
sti
sub
repz
xchg
loopne
pop
mov
fdivrs
push
push
ss
cmovp
dec
fwait
adc
popf
icebp
sbb
cld
cwtl
inc
xchg
and
and
fnstcw
ret
dec
mov
mov
das
repz
sub
scas
jge
mov
mov
push
movsb
pop
mov
shrb
add
inc
or
push
repnz
loop
push
xchg
es
or
out
insl
mov
add
add
adc
add
sub
cwtl
int3
xchg
into
js
xor
xchg
in
cwtl
cmpsl
push
mov
fstpl
mov
divl
and
xchg
mov
insl
jge
adc
je
and
fucom
ds
cmp
sti
pop
push
shlb
adc
jno
decl
adc
xchg
dec
scas
insl
jmp
mov
icebp
nop
jg
fcmovnb
dec
dec
inc
mov
es
dec
jmp
ljmp
fstl
scas
lea
xlat
das
jge
xchg
inc
dec
xchg
mov
fs
xchg
dec
testl
jecxz
jg,pn
sbb
cmc
add
outsl
adcb
pusha
jecxz
sbb
stos
jg
addb
pop
fdivr
in
xor
addl
cmc
jns
shl
or
dec
test
push
sahf
aam
insl
ja
pop
loope
sbb
jg
push
fwait
sub
mov
cmc
testb
mov
push
push
dec
jae
push
pop
into
jne
and
adc
lcall
xchg
add
mov
sahf
push
push
push
ficompl
roll
jnp
cmp
xor
jae
je
dec
in
push
test
jmp
jl
fldt
mov
shrl
cmp
test
adc
cmpl
jecxz
mov
pop
mov
lahf
or
cmpsb
push
test
enter
add
unpcklps
std
scas
xchg
cmp
stos
sub
xlat
mov
fisttpll
xor
movsb
fwait
mov
call
cmp
fdivrl
cmpsl
xchg
mov
cltd
movl
fs
ficoml
xor
leave
xor
iret
sub
out
inc
adc
ret
in
fnstenv
es
pushf
mov
cmpsl
aas
cmp
repnz
iret
cmp
fdivl
dec
je
insl
xor
or
testl
das
outsl
cmp
popf
loopne
pop
push
in
lods
lea
pop
jnp
mov
into
rorb
xor
scas
push
das
ss
sub
pushf
jne
imul
jns
mov
gs
pop
mov
sbb
rcll
lret
pop
insb
stos
inc
adc
jmp
mov
rclb
divl
arpl
jns
in
mov
push
push
sbb
movsb
call
ret
test
xlat
add
xchg
mov
push
lods
jmp
outsb
or
jp
adc
js
inc
push
test
test
mov
or
aam
and
mov
jnp
popa
dec
adc
fstpt
test
dec
mov
and
iret
jl
push
subb
pop
or
in
sbb
push
rorb
push
nop
call
mov
or
into
push
test
hlt
mov
dec
cli
xor
iret
mov
pop
xchg
fistpll
sti
setp
in
jl
mov
sub
popa
sub
lds
or
lahf
dec
add
mov
lcall
fwait
lret
aam
fldt
mov
sub
arpl
add
cmp
mov
fstps
push
or
cmp
dec
popa
inc
dec
lds
jle
mov
jmp
incl
dec
push
fiaddl
inc
push
jg
lds
adc
mov
cmp
xchg
js
stos
test
dec
xor
ror
jmp
xor
jae
mov
push
orl
cld
push
icebp
xor
lret
mov
inc
and
addl
aam
jae
decb
mov
push
xchg
lcall
lretw
jp
xchg
cli
lret
or
imul
aaa
into
inc
cmpl
xor
dec
ds
add
data16
xchg
jecxz
sub
arpl
testl
test
pop
and
call
adc
sbb
int
mov
enter
mov
push
lcall
pop
dec
movhps
jae
add
lock
dec
add
scas
loopne
loop
test
out
and
cltd
out
ret
jno
jmp
aad
mov
and
test
mov
movsl
rcl
xchg
cltd
jne
int
jb
les
jmp
scas
out
ret
inc
jmp
xor
push
xchg
add
decb
xor
loop
push
loopne
aas
jb
sbb
jp
loope
inc
xchg
pop
lds
push
push
fbstp
negb
lahf
adc
or
mov
insb
ds
rcll
pop
sbb
dec
mov
cmp
sub
in
jnp
mov
shll
and
shlb
fldt
jae
cmp
lahf
dec
mov
jno
mov
adc
push
cmp
and
mov
lods
mov
fadd
les
aad
ret
xchg
or
fdivrl
inc
push
popa
add
pushf
jns
jns
push
scas
xchg
mov
mov
cmp
arpl
lahf
fiaddl
out
pop
movsl
mov
and
aam
or
pop
pop
hlt
and
enter
hlt
ljmp
daa
loopne
lret
inc
imul
rclb
sbb
insb
inc
adc
pushl
or
push
push
in
mov
sub
out
scas
push
cmpsb
mov
imul
jns
cwtl
mov
fcoml
jo
mov
inc
and
jmp
out
int
repz
sub
dec
les
push
and
js
xchg
cmc
ja
adc
scas
pop
lods
imul
aas
cmc
dec
mov
cmp
aaa
mov
leave
arpl
cmovbe
xor
sub
cmc
inc
lods
push
mov
imul
inc
movsb
mov
fisubrl
je
push
xchg
arpl
and
push
push
adc
and
xor
fs
adc
in
loop
movsl
adc
cs
stos
nop
push
push
lret
add
fidivl
fnstsw
mov
adc
mov
or
pop
divl
mov
scas
dec
sbb
jmp
or
popf
test
push
insl
cmp
loopne
and
subb
add
stos
xlat
test
inc
cltd
cmpsb
pop
xchg
sbb
jno
sbb
and
notl
mov
in
jns
sub
sub
loop
test
in
daa
pop
cs
dec
pop
test
jmp
imul
adc
xchg
mov
push
out
es
outsb
cmpsl
addr16
jmp
aad
adc
fwait
lods
sbb
xchg
xchg
aas
stc
dec
cmp
adc
lret
xchg
or
divl
add
jne
out
add
pop
adc
int
dec
pop
jecxz
cld
pop
push
cmp
jb
lods
jne
cmp
daa
lcall
in
test
pusha
inc
pop
add
cmp
mov
add
movsl
lahf
sub
dec
jmp
jmp
mov
jle
inc
sbb
adcb
fsubs
xchg
inc
jle
jecxz
inc
cmp
jecxz
lock
inc
sti
out
jnp
sbb
das
or
js
enter
stc
je
dec
pop
les
jns
push
mov
xchg
mov
mov
inc
imul
stos
sbb
jbe
sbb
movsb
loop
sbb
in
scas
cmpb
adc
push
dec
stos
lret
pop
xchg
ljmp
jge
in
lret
ljmp
push
fldenv
jo
adc
int
dec
shlb
test
xor
cli
int
dec
inc
andl
cltd
push
xchg
mov
pop
jbe
xchg
xchg
int3
mov
mov
les
xchg
addb
pop
iret
sahf
xlat
cs
push
movsb
or
mov
push
dec
sahf
ss
lret
sub
stos
mov
je
addl
cli
inc
lods
int3
xchg
pop
ret
dec
pop
repz
cmp
cwtl
or
add
lahf
cmp
jno
mov
ss
sbb
mov
std
mov
loope
sub
jns
shlb
push
adc
ret
lcall
lods
shrl
popf
xor
xchg
cmp
loopne
in
stos
sbb
adc
loop
aad
add
sbb
icebp
in
pop
gs
push
mov
jno
add
sub
out
cs
jle
test
dec
stos
cmpl
mov
xchg
lahf
mov
mov
xchg
inc
hlt
or
cltd
mov
fwait
cltd
pop
jl
shrl
xlat
insl
leave
shr
addr16
add
mov
or
inc
pop
sbb
jne
mov
in
sub
lods
mov
cli
push
xchg
mov
mov
ss
fiaddl
int3
rorl
xchg
dec
fbstp
imul
cmp
clc
sarb
add
sub
jp
dec
pop
ret
imul
pop
sbb
into
in
in
pushf
imul
imul
ret
js
inc
cmp
push
dec
in
cltd
fistpl
xlat
in
fstl
pop
xchg
stc
mov
vminpd
mov
icebp
stos
inc
pop
push
push
sub
in
cmp
stos
jo
sahf
stos
mov
fsts
lods
daa
roll
jmp
aas
xor
dec
cwtl
cmp
into
notl
or
pop
fwait
aad
cmp
test
data16
insl
xchg
ret
pop
adc
pop
jl
push
js
inc
sbb
xor
or
push
les
ljmp
xor
mov
xor
shrl
mov
jne
adcl
fisubrs
adc
or
sub
shrb
push
aaa
mov
cmp
push
movsb
fbstp
mov
into
adc
popf
fstps
push
inc
subl
cmpsl
add
idivb
out
sahf
mov
jo
je
cmpsb
jo
inc
lret
mov
bound
push
cmpsb
call
cmpsb
mov
in
mov
mov
out
clc
movsb
dec
sbb
xchg
movsl
sbb
addr16
xchg
aad
mov
mov
lret
dec
bound
mov
or
xchg
xchg
mov
jl
pop
dec
mov
test
jl
jmp
std
add
sahf
jp
cmp
inc
clc
fisubrl
dec
jae
insl
fsincos
inc
mov
hlt
movsb
cmc
aam
xchg
jge
sbb
mov
rdmsr
lock
or
inc
mov
xchg
data16
inc
dec
cwtl
cwtl
and
stos
and
mov
mov
xchg
xor
test
adc
and
dec
jae
inc
in
icebp
stc
call
dec
and
outsl
inc
mov
adc
data16
push
dec
out
ljmp
imul
sbb
les
push
pop
test
test
inc
popa
or
popa
mov
add
or
dec
xchg
xor
pop
and
push
mov
push
lcall
xor
pop
mov
or
inc
out
sub
mov
push
cmc
mov
dec
bound
jno
cmpsl
mov
xchg
pop
test
lahf
cli
mov
in
and
das
and
inc
inc
sbb
pop
dec
sbb
mov
jmp
sub
sbb
dec
nop
out
jle
pop
repz
insl
mov
imul
inc
fmull
or
sbb
int
in
nop
mov
sbb
pop
sbb
mov
jno
lock
adc
mov
adc
repnz
out
xchg
add
inc
jae
push
bnd
ror
pop
loopne
daa
pop
pop
xor
fcmovne
stos
push
int
mov
shll
ds
xchg
lahf
out
ja
or
mov
pop
inc
stos
imul
xchg
mov
pop
fcmovu
stc
sti
xor
pop
stos
aam
testl
xchg
push
adc
icebp
push
adc
add
inc
xchg
mov
and
ret
cltd
in
scas
or
and
and
sarl
insl
loope
popa
jle
mov
hlt
inc
lods
mov
fstp
add
xor
cmp
sahf
mov
cld
clc
xchg
aas
and
in
sahf
sub
mov
movsl
push
cli
and
and
imul
insl
sbb
repz
pop
sbb
pop
out
push
mov
leave
nop
jb
and
ret
jl
push
in
into
aam
rol
mov
shl
das
cs
lds
imul
stos
fst
dec
loopne
scas
xchg
xchg
jecxz
out
pusha
and
or
aad
jle
shl
jo
jp
scas
sti
xchg
dec
sti
leave
inc
or
out
aam
or
mov
jo
xor
negl
aad
lahf
xchg
lods
imul
inc
and
daa
and
outsb
lods
iret
pop
xchg
adc
cmpsb
ljmp
lea
jbe
push
and
mov
cmpsl
jns
mov
insb
aad
xchg
out
data16
cmp
jb
inc
mov
pop
and
sub
sub
pop
jmp
hlt
sub
hlt
in
push
cwtl
xchg
ror
xchg
movsl
in
mov
imul
xchg
in
push
jge
mov
push
dec
nop
stos
xor
mov
data16
sti
gs
hlt
jg
dec
push
xchg
push
pop
adc
add
aam
data16
stc
inc
or
ds
ljmp
or
insl
mov
lret
shrl
fwait
add
outsb
dec
pop
sbb
xchg
push
das
dec
lock
mov
pop
mov
xchg
outsb
jmp
into
cmp
or
or
xor
pop
lock
jo
mov
mov
mov
fsubr
mov
jle
imul
rorl
lods
xchg
and
xchg
adc
pop
pop
mov
and
jg
sbb
mov
loopne
pop
push
or
fdivrl
loop
push
or
inc
movsb
push
or
dec
roll
xlat
lea
scas
jno
daa
test
fucomip
loop
ret
loopne
aaa
inc
push
inc
xlat
push
scas
mov
mov
outsl
aam
xchg
push
out
jbe
ror
push
inc
add
xchg
jg
sub
stc
push
movsb
and
ja
cltd
push
cmpl
xor
sub
mov
std
je
sbb
mov
fs
pop
ss
loop
jbe
xchg
sub
nop
jae
js
in
cmc
cwtl
sub
xchg
in
and
lods
add
push
leave
icebp
orb
xor
push
mov
idivl
sti
sti
scas
dec
es
ret
jnp
push
into
sub
jl
xor
popf
in
sar
aam
data16
popa
xlat
mov
lret
jl
dec
push
int3
mov
add
pop
in
in
fcoml
lret
ss
clc
lods
dec
jp,pn
sub
enter
adc
xchg
and
bt
es
es
mov
movsl
dec
add
stos
adc
stc
xor
sti
aad
and
cmp
jle
pop
popf
leave
jno
incl
jmp
stc
jne
mov
les
jnp
jmp
jae
mov
clc
ret
sbb
cmp
mov
jmp
push
mov
adc
test
inc
les
shl
sub
lcall
jge
int3
pushf
es
dec
out
dec
mov
adc
inc
mov
sub
bt
gs
dec
jns
add
xchg
imul
sub
jp
jb
cli
push
jg
inc
and
adc
push
cmp
outsl
addb
pop
int3
cmp
lret
lcall
sub
sub
jo
cmpsb
loope
pop
mov
pop
xchg
dec
movsb
inc
aam
push
or
dec
and
rcll
pop
insl
test
in
adc
scas
mov
sub
lds
in
arpl
pop
adc
pop
jb
std
push
push
test
jle
cmp
test
or
sub
dec
or
dec
push
mov
dec
pop
xchg
mov
mov
out
imul
jo
mov
aaa
lods
mov
fdivrl
adc
ljmp
aas
inc
lcall
jecxz
sbb
fnsave
jns
mov
adc
lret
test
push
nop
sbb
cmp
and
dec
sbb
and
cwtl
negl
push
cld
adc
ret
jnp
lods
aad
inc
movsb
std
mov
add
ljmp
xchg
adc
ljmp
push
mov
nop
sub
popf
sub
lock
mov
lret
dec
mov
insl
jb
or
imul
inc
pop
loopne
pusha
test
jnp
into
loopne
mov
cmpsb
xchg
adc
mov
mov
jb
orl
mov
jne
pop
add
jle
push
pop
jo
push
jnp
xchg
cmc
add
aad
and
jns
lds
fdivs
cs
xchg
lretw
mov
sub
push
xchg
loop
clc
scas
and
xchg
or
pop
adc
xchg
mov
ss
ljmp
and
mov
push
shr
call
mov
sahf
movzbl
cmp
lcall
test
xchg
les
pop
dec
inc
xor
call
pop
loopne
lock
loope
in
cmp
in
ret
shrl
push
xchg
or
jl
pop
pop
ss
cli
es
lret
addl
inc
call
sbb
outsl
fisubrs
inc
adc
mov
jl
push
add
pop
popf
nop
hlt
sarl
pop
adc
cli
jo
xor
bnd
jns
lgdtl
mov
push
pusha
popf
pusha
outsl
stos
pop
push
ficoms
imul
repz
cmp
popf
mov
adc
frstor
jl
pop
jmp
push
pop
in
cmc
pop
adc
arpl
and
mov
xor
xchg
or
jl
lea
cmp
jl
shlb
xor
test
std
pop
fidivs
fstpl
sar
in
mov
aaa
push
in
in
or
push
ljmp
lahf
dec
lea
jne
cmpsl
cmp
cltd
pop
and
mov
int3
mov
xchg
mov
xor
aam
in
ljmp
xor
or
mov
rol
das
std
push
dec
jp
imul
and
scas
cltd
jno
pop
stos
int
cmp
sahf
pop
xchg
mov
cwtl
pop
stos
and
sar
lahf
aas
pop
cmc
jmp
push
lret
or
lods
mov
clc
hlt
repz
cmp
repz
dec
mov
add
arpl
sbb
cmp
pusha
mov
xor
outsb
outsb
cld
pusha
cmp
pop
sub
fwait
stos
addl
call
pop
lret
xchg
jl
sbb
pop
cmpsb
push
stos
lods
mov
inc
lahf
roll
shl
ljmp
pop
call
xchg
mov
iret
push
scas
inc
adc
fisubrs
sub
mov
cmp
cmc
mov
lock
adc
ret
popf
mov
dec
insb
jmp
fstpl
jnp
push
push
int
mov
or
xchg
rcr
pop
jae
outsl
repnz
fstps
jbe
mov
jns
sbbb
dec
xchg
cmpsl
xor
or
mov
sub
xchg
add
jmp
jb
bound
daa
ja
jns
mov
movsb
adc
fwait
jae
outsl
mov
pop
mov
outsb
sbb
setns
cld
pop
es
iret
xor
add
sbb
repz
pop
ds
push
add
arpl
int
mulb
mov
dec
jmp
dec
pop
lods
cmp
mov
testb
jmp
ljmp
mov
jb
or
pushf
push
adc
pop
pushf
jle
dec
xchg
sar
pop
gs
fadds
sahf
les
imul
cmpsl
cli
push
mov
inc
pop
aaa
fldl
jae
subl
xchg
int3
rorb
or
and
pop
jmp
jl
gs
pushf
push
push
inc
or
sbb
mov
rcll
insb
nop
mov
jecxz
cmpsl
pop
mov
sub
outsl
dec
lret
fidivrs
jp
pop
std
mov
pop
mov
inc
fstpt
outsl
jg
inc
adc
lret
and
shlb
daa
or
daa
push
jno
sbb
xchg
out
and
stos
fstps
dec
and
imul
xor
mov
mov
jl
adc
mov
dec
lea
mov
inc
aam
andl
inc
jnp
jnp
je
xchg
out
sbb
aad
cld
inc
or
stc
sub
inc
sub
jle
xchg
test
mov
sbb
xor
and
and
mov
dec
mov
mov
rol
pop
or
cmp
sbb
in
cmp
xor
outsl
jne
shl
aam
pop
mov
insl
adc
js
xchg
lahf
mov
add
mov
and
jecxz
xchg
fstpt
imul
add
mov
push
loope
pop
cmp
mov
ffreep
mov
movsl
push
push
stos
sbb
inc
dec
shrd
lret
pop
pop
iret
mov
and
mov
pushf
pop
sub
repnz
inc
or
and
pop
xchg
out
fdivp
push
out
bound
lods
fwait
icebp
int
scas
jns
sbb
push
sarb
les
push
mov
add
adc
js
ljmp
cmpsb
push
or
cli
inc
nop
cmp
cmc
icebp
mov
cld
jmp
adc
filds
push
push
add
je
mov
hlt
movsl
inc
or
sarl
lods
pop
aad
pop
push
test
inc
lock
push
dec
nop
lahf
xchg
inc
inc
mov
sbb
mov
jmp
mov
push
daa
xchg
clc
jbe
arpl
pop
test
inc
ljmp
dec
or
sarb
lods
sub
arpl
and
adc
shlb
fcoml
inc
inc
pop
fidivrl
push
sti
in
lds
outsl
pop
xor
in
inc
cmpsl
push
xchg
enter
or
add
pop
ret
push
add
pop
cmp
dec
xlat
mov
xlat
xor
fidivrs
push
cli
xchg
mov
insl
pushw
popa
sbb
orb
push
sbb
mov
mov
shlb
stos
sub
pop
mov
mov
movsl
lods
mov
sti
sti
add
jecxz
mov
scas
pop
cmp
hlt
outsl
lahf
cmp
loope
rol
jp
inc
sbb
sbbb
mov
fimull
imul
nop
cmp
andl
bound
or
jo
daa
mov
cli
fdivr
and
push
ficoms
cmp
push
fldenv
ret
stos
mov
lock
or
add
lock
cmpsb
jae
lahf
pop
mov
xor
cli
mov
pop
sbb
add
mov
enter
movl
mov
sbb
xchg
sub
push
cltd
dec
xor
jle
mov
push
and
jg
dec
in
lods
mov
add
pop
ret
scas
nop
adc
jle
outsb
fmulp
int
xor
pop
xchg
add
ss
add
mov
mov
pusha
adc
and
add
push
xchg
pushf
or
push
or
testl
dec
je
loopne
mov
leave
jp
sti
pop
lahf
dec
push
iret
lods
insl
out
dec
jo
sbbl
mov
inc
out
push
nop
out
adc
push
outsb
aaa
daa
fsubl
stc
and
cmp
sub
nop
mov
cmp
cmpsb
jle
int3
push
fwait
pop
inc
push
cli
fs
pop
out
shrb
xor
pushf
fwait
rorl
stos
adc
test
mov
loope
xor
std
insl
add
or
pop
addr16
dec
push
xchg
add
sarb
imul
repnz
xchg
out
loope
popf
cmc
fildl
cmp
pop
adc
inc
add
fstl
pop
pop
jp
xchg
inc
xchg
push
test
sarb
pop
mov
shlb
out
sbb
addl
sbb
out
xchg
push
std
adc
or
mov
jbe
xchg
cli
rol
int
jmp
push
js
rclb
mov
mov
popa
enter
mov
adc
mov
leave
jo
jp
mov
push
push
xor
mov
xor
inc
sbb
mov
imul
inc
gs
or
ja
dec
and
movsl
xchg
push
arpl
mov
mov
pop
or
sub
outsb
je
hlt
ds
or
xchg
and
je
cli
aam
dec
int
leave
jns
jns
movsb
roll
flds
jns
push
xor
shll
sbb
roll
jbe
cmpb
outsl
push
inc
jp
clc
push
cmp
cmp
ds
jbe
stos
fwait
pop
cs
enter
aas
ja
mov
mov
leave
add
cmp
push
in
sbb
jno
das
xor
dec
push
clc
pusha
cli
int3
fcomps
inc
push
push
and
idiv
mov
jecxz
inc
cwtl
mov
add
cmp
loope
fs
pushf
inc
js
jmp
loopne
inc
jnp
enter
divl
std
pushf
scas
inc
ja
fistps
nop
jbe
pusha
addr16
out
jle
in
jl
xchg
xor
jmp
pop
lret
out
lods
sub
push
and
inc
sbb
mov
daa
inc
fwait
clc
fisubl
popa
add
push
iret
sahf
xchg
mov
lods
imul
stos
stos
xchg
es
inc
dec
fmuls
ds
clc
dec
cmc
sbb
mov
push
add
xor
hlt
in
inc
cmc
mov
and
pop
xchg
stc
xchg
dec
icebp
mov
jns
jle
ja
push
add
push
pop
loope
shlb
fs
xacquire
mov
movsl
xor
dec
and
mov
cmp
and
xchg
jmp
mov
and
sarb
icebp
fcoml
push
mov
and
mov
ror
aaa
bound
pop
popa
hlt
sbbl
add
iret
pop
cmp
icebp
mov
pop
or
adc
push
sub
jb
sbb
lods
or
push
cmpsb
aaa
fsts
add
pusha
push
mov
mov
add
lret
es
in
popa
pop
data16
in
in
std
pop
lea
shlb
lahf
pop
xlat
nop
add
test
mov
in
shlb
cwtl
mov
int
jb
cld
fwait
stos
cmpsl
pop
out
pop
std
mov
es
dec
mov
stos
jmp
fwait
cli
mov
xchg
jecxz
or
cli
popf
data16
imul
and
loopne
out
fs
aam
fildll
mov
xor
rolw
ja
mov
into
cmp
push
hlt
add
dec
adc
and
xor
nop
shlb
pop
mov
xchg
lock
xchg
fmull
or
repz
in
enter
mov
add
neg
cmp
xchg
roll
out
pop
pop
bound
je
mov
cli
inc
ljmp
cmp
ret
sarb
xchg
out
sub
sub
mov
jae
jb
jmp
xor
cltd
pop
fisttpll
push
mov
aad
adc
mov
loopne
xchg
jb
xor
adc
decl
and
es
or
jl
xchg
enter
fisubs
fistpl
in
jnp
and
xor
mov
pushf
adc
fisubrl
jmp
cmpsb
sti
pop
outsl
mov
out
sbb
or
pushf
mov
out
loope
fdivrp
pop
in
mov
pop
mov
idivl
xchg
cmpsb
int
or
dec
movsl
dec
sti
fistpl
push
pusha
and
jne
lcall
xlat
lea
sub
outsb
or
clc
lds
push
xor
cmpsl
js
mov
jge
push
scas
pop
jg
ret
sbb
inc
fmuls
das
fnsave
or
js
xor
sahf
mov
add
dec
fisubrs
mov
or
xorb
add
xchg
lahf
enter
xlat
xor
nop
adc
ljmp
dec
inc
adc
and
push
not
sbb
and
push
jp
push
mov
jo
rol
xchg
jmp
pop
add
call
lds
adc
push
int3
divb
lods
mov
lahf
outsb
and
and
mov
mov
mov
stos
lret
lahf
adc
add
imul
movsl
mov
and
jmp
jno
xchg
dec
push
mov
sub
push
lret
mov
mov
je
fidivrs
iret
or
rep
out
mov
pushf
loopne
pop
ret
dec
jge
jns
gs
inc
cli
icebp
int
and
sub
add
sub
mov
xchg
ret
xchg
mov
outsl
repz
mov
sti
in
mov
push
sub
out
mov
xchg
mov
inc
cmp
repz
pop
adc
data16
or
int
and
pop
push
nop
ret
pop
scas
and
and
inc
loop
mov
xor
mov
dec
repz
dec
out
and
sbb
cmpsl
iret
stos
mov
sub
jp
mov
sahf
cmp
imul
test
or
out
mov
std
fsubrl
push
dec
loop
imul
ret
pop
cli
nop
lock
jne
push
rcl
orps
add
xchg
lret
mov
mov
incb
xchg
sarb
jnp
lods
xchg
pop
out
and
mov
mov
inc
push
orl
sbb
adc
lea
es
sti
lods
jmp
jae
lahf
cmpsl
cmp
add
or
rorb
mov
jne
mov
inc
push
call
aad
push
mov
or
fadd
fstps
adcb
mov
sub
je
mov
ret
mov
xor
jg
xchg
xchg
js
imul
dec
lret
fdiv
loopne
mov
adc
xchg
pushl
adc
push
or
mov
stos
add
nop
testb
mov
push
xor
je
jns
push
ficoms
out
test
adc
inc
cwtl
xchg
mov
inc
cs
push
dec
inc
sbb
add
out
mov
ja
mov
loop
and
pop
jmp
and
inc
mov
add
dec
or
mov
jne
and
inc
jns
lock
jge
subw
test
insb
or
sub
sbb
push
jns
ret
adc
push
cmp
cmp
jmp
cltd
mov
loop
mov
fs
and
jbe
or
gs
test
loop
in
fists
imull
iret
popa
ja
mov
loope
push
nop
dec
lock
fisubrs
and
daa
ficomps
outsb
inc
dec
movsl
das
lea
dec
data16
lds
cmp
shlb
pop
pushf
adc
mov
and
jbe
or
sub
movsb
jne
sbb
test
xchg
es
mov
mov
pop
popa
fdivl
mov
jge
xchg
and
push
xorl
or
mov
ret
mov
push
or
into
and
hlt
cs
cmp
repnz
push
push
dec
sub
mov
sbb
stc
ljmp
adc
mov
ds
inc
test
add
xor
leave
mov
out
loop
stc
popa
aam
and
test
jl
mov
push
cmpsl
push
xchg
ljmp
int
dec
sub
mov
iret
int3
repnz
xorl
shrb
xlat
add
pop
inc
bound
jge
insb
das
dec
jecxz
push
pop
sahf
xlat
mov
xlat
cmp
or
lds
xor
mov
test
or
lcall
push
inc
daa
xor
cmp
add
aas
adc
jb
stos
or
jb
lds
sahf
sub
adc
mov
push
rclb
mov
dec
out
in
pop
nop
sub
mov
out
and
xorb
test
int
cmp
fnstcw
add
pop
fiadds
pop
sbb
in
rcll
jb
cmovns
inc
pushf
sbb
aaa
ret
dec
lea
mov
pop
popa
add
mov
push
cli
or
sbb
int
jb
hlt
dec
adc
lret
mov
dec
fsubrs
sbb
dec
cmpsw
mov
pusha
add
inc
ret
or
pop
jae
lcall
sarb
or
int3
data16
aaa
cmp
jno
xchg
ret
arpl
jp
fists
les
loop
lcall
dec
xchg
or
pop
dec
stc
sbb
outsb
cs
xchg
xchg
jnp
dec
fisttps
mov
sub
in
push
out
mov
inc
bts
jp
insb
sbb
mov
aam
aaa
and
xchg
cmpsl
inc
jb
push
pop
xor
jle
dec
mov
jne
addr16
dec
imul
mov
shll
pop
or
orb
jbe
mov
lods
push
cmp
lret
das
push
xchg
rolb
sbb
hlt
add
lret
inc
lock
clc
sbb
ss
lcall
sti
pop
aas
outsb
ljmp
cmpsb
pusha
lea
sbb
and
in
movsl
cmp
and
adc
mov
lcall
and
or
pop
jbe
pop
push
or
daa
adc
pop
dec
fs
xor
test
mov
push
loop
cmpsl
sahf
inc
adc
xor
mov
jg
daa
push
repnz
cmpsb
mov
stc
cmp
add
xor
cs
cmp
dec
cmc
inc
sbb
cld
sbb
test
mov
add
push
and
jne
dec
insl
lods
sub
jb
test
fmulp
dec
movsb
inc
scas
test
ja
fs
cmp
dec
push
inc
shl
pop
xlat
ret
or
outsb
enter
adc
cmp
in
xchg
dec
sbb
xorl
mov
jno
push
and
xor
in
ljmp
jg
lcall
jmp
inc
and
xchg
ficompl
jb
xor
and
mov
xchg
push
jle
hlt
cmc
sub
jbe
adc
adc
fadds
sbb
add
pusha
pop
adc
mov
xchg
movsb
je
push
cld
sub
or
mov
or
pop
dec
les
mov
sbb
aaa
in
fiadds
loop
pop
ds
out
dec
adc
and
and
rcl
pop
push
adc
mov
mov
das
inc
pop
inc
dec
mov
cmpsb
lahf
xorl
test
push
out
pop
cmc
adc
in
mov
mov
outsl
sbb
adc
or
xlat
mov
pop
mov
cmpsl
adc
cmovae
cmpsb
and
insb
movsb
dec
sbbl
test
jge
sub
and
cmp
lret
push
repnz
mov
and
mov
and
fsubs
add
test
icebp
lcall
or
pop
jmp
leave
aas
test
jne
mulb
repz
pushf
push
sbb
imul
xor
dec
sub
ss
pop
lret
pop
inc
outsb
or
imul
int3
sahf
mov
ss
fs
sub
aaa
push
nop
pushf
push
addr16
and
stos
gs
xchg
stc
and
scas
jb
test
cmp
adc
xor
adc
fstl
lock
mov
pop
adc
sti
add
daa
int3
in
push
sbb
cli
leave
test
jbe
imul
sbb
aaa
enter
call
fwait
pusha
and
pop
popa
xchg
stos
mov
xor
adc
and
add
mov
fisttpll
push
mov
loopne
jp
pop
cli
inc
jbe
jo
ret
fildll
push
repnz
je
out
mov
lahf
in
pop
mov
inc
push
clc
push
xchg
fnsave
mov
sub
gs
mov
fwait
xor
out
gs
and
sub
aas
clc
mov
inc
push
xor
shlb
jmp
pushf
push
ret
xchg
clc
push
mov
pop
cltd
pop
pop
loope
pop
cmp
jg
push
test
jecxz
xor
out
sbb
aas
mov
sbb
xlat
mov
je
rcr
inc
out
in
rcr
mov
mov
scas
lods
cltd
lcall
ljmp
fsub
dec
mov
xchg
cmp
push
outsb
outsb
stc
sub
inc
cwtl
rcrb
pop
xor
jae
xor
push
or
sub
fidivl
mov
add
mov
js
adc
jl
xchg
iret
dec
or
pop
rcll
sbb
dec
dec
or
sub
repz
push
rorl
dec
fiadds
out
add
addb
xchg
movsl
rcl
aam
cmp
xor
repz
cmp
push
add
dec
inc
sbbl
sbb
repz
rcrl
fsts
fs
test
jg
idivl
stos
xor
popa
mov
xor
mov
sub
jmp
pop
jp
popf
cmpsl
enter
scas
pop
sub
xor
sbb
cld
leave
xchg
lahf
in
xor
shll
cwtl
pop
ljmp
stos
mov
xor
mov
push
jno
and
xor
stc
xchg
mov
dec
mov
and
lock
or
adc
xor
lcall
loopne
jecxz
mov
imul
cmc
xor
mov
clc
push
dec
dec
outsl
mov
xor
dec
mov
repz
in
pop
fists
dec
fs
jp
notb
test
fstps
es
pusha
icebp
fcomps
repnz
mov
mov
dec
outsb
push
sbb
lea
fwait
leave
js
jmp
adc
pushf
sahf
sub
bsf
stos
pop
rcrl
mov
into
mov
xor
bound
repnz
insb
stos
and
aaa
jmp
mov
mov
dec
push
mov
ljmp
inc
je
fwait
je
leave
pop
xchg
das
fcmovb
push
push
sahf
xchg
test
popf
xchg
out
ljmp
pusha
cli
outsb
int3
pop
test
push
out
jne
jle
iret
outsl
bound
push
ficompl
push
incb
scas
testb
mov
iret
lds
roll
mov
dec
fsubrl
scas
lret
int
cmp
mov
les
pusha
aad
clc
mov
out
jmp
mov
push
sub
jno
int3
clc
jne
pop
cwtl
stos
sbb
popf
pop
cltd
dec
pushf
pop
mov
mov
data16
test
rorb
cmc
std
imul
mov
jae
lods
jae
fwait
mov
lock
sub
jle
mov
mov
outsb
dec
mov
lods
push
jecxz
and
stc
mov
ss
push
pushf
jne
inc
insb
in
push
je
fdivs
pcmpgtb
xor
xor
sub
fbstp
xor
xchg
jno
cwtl
clc
fidivrl
add
mov
rcrl
or
xchg
mov
inc
ja
add
adc
ja
fcmovne
mov
outsl
ds
sbb
xchg
xchg
fcomp
stos
shl
xor
lods
inc
call
sub
fdivp
mov
sahf
pop
leave
dec
mov
mov
xlat
fiaddl
sti
test
or
inc
xchg
in
ret
sbb
popf
and
repnz
loope
movsl
pop
mov
es
dec
add
in
xchg
fisttps
push
leave
test
scas
add
adc
jecxz
lods
int3
lock
push
test
xor
lods
test
push
pop
pushf
rcrb
pushf
mov
movsb
push
adc
pop
out
inc
out
inc
mov
cmp
out
xor
clc
fisttpl
mov
xchg
xchg
adc
setge
aas
sbb
or
mov
in
push
xor
push
cmpsl
add
cmp
push
mov
hlt
add
xchg
adcb
lahf
or
mov
movsb
mov
cmp
adc
rcr
sarl
and
outsb
pusha
ret
xorb
inc
pushf
test
cli
js
mov
adc
out
outsl
roll
pop
movzbl
cld
mov
pop
clc
dec
mov
outsb
adc
sbb
sub
dec
push
out
jns
je
js
stos
sahf
dec
adc
pushf
jp
aad
sbb
aam
dec
inc
nop
push
dec
jns
cmp
sub
sbb
bound
cmp
fimuls
xchg
dec
pop
nop
negb
jmp
dec
inc
sub
mov
loop
adc
fdivl
adc
cmp
pop
and
inc
xchg
pop
mov
neg
lods
or
mov
pop
and
pop
sbb
push
adc
repnz
roll
mov
loopne
cmpb
sub
sysexit
inc
adc
in
dec
mov
mov
push
push
pusha
hlt
pop
insl
notb
jmp
inc
fildl
dec
jo
or
push
popf
sub
or
das
cli
in
fs
cmp
add
jecxz
cli
lock
adc
jge
cmp
cmp
rcrl
in
push
pop
ljmp
andb
andl
leave
push
fisubrl
sub
jmp
mov
negl
and
xor
fstl
adc
xchg
shrl
or
adc
repnz
lods
xor
cmp
push
cmp
addr16
ret
sahf
sarb
das
pop
mov
mov
and
pop
dec
loopne
fidivs
out
mov
bound
push
pop
cs
pop
add
stc
int3
mov
adc
pop
push
lods
mov
loopne
jp
push
repz
mov
scas
pop
or
ja
fisubl
or
popf
outsl
cmp
mov
sete
jmp
push
loope
add
punpckldq
scas
push
mov
cmp
les
mov
insl
and
mov
int
fistpll
hlt
mov
push
adc
xchg
mov
mov
cmp
push
cmp
cmp
sbb
adc
or
inc
cltd
int3
add
xor
stc
jg
mov
cmp
pop
mov
dec
cwtl
pusha
inc
sub
sub
mov
mov
push
cs
clc
push
sub
enter
movsl
and
rcll
sub
mov
inc
leave
insb
fs
popa
jno
pop
inc
mull
js
sahf
xor
es
sub
ret
and
lods
lods
push
xor
in
mov
push
mov
fs
test
mov
call
dec
pop
aad
fnstcw
std
adc
sbb
addb
mov
fcomps
jge
repz
js
and
loope
mov
mov
adc
fldt
xchg
or
pop
adc
data16
pop
xor
lea
cmp
fcoms
pop
inc
xor
mov
insb
xchg
inc
repnz
pop
push
iret
cwtl
jle
cltd
bound
sub
cmp
cs
test
mov
push
mov
jmp
or
push
cs
push
cmpsb
cmp
int
mov
lods
sub
or
aam
clc
js
and
movsb
dec
pop
lock
jle
addr16
push
lret
jnp
ljmp
flds
sbb
mov
inc
fs
cwtl
fsub
cmp
in
jo
pop
push
popa
test
sbb
pop
dec
repz
movsl
cmp
pop
popa
cli
jo
pop
enter
adc
jge
inc
and
lret
pop
xorb
ja
pop
xorb
or
adc
ljmp
lea
insl
push
lret
int
mov
sub
fmull
sbb
ss
ja
cmp
fcomps
scas
mov
cmp
inc
lcall
cld
push
lods
mov
shll
loopne
pusha
push
jae
andl
shlb
mov
mov
rcll
add
aas
dec
xchg
in
or
mov
pop
out
push
aad
loope
push
xor
push
dec
sbb
ss
xchg
sub
dec
xchg
pop
and
add
push
mov
rcrb
mov
aaa
cld
mov
cmp
jae
fcoms
int3
cmp
mov
adc
stos
mov
bound
loope
movsl
sub
xchg
add
mov
and
sbb
xor
xor
incb
into
mov
xor
int3
divb
pop
in
jg
into
and
add
je
pop
cltd
mov
mov
mov
je
in
shrb
pop
xor
xchg
js
out
sub
xchg
xchg
sub
xor
xchg
loop
addr16
fstl
jmp
lcall
inc
ss
xchg
out
xor
int
push
jns
leave
dec
jns
outsl
cs
cmp
shll
dec
cmp
lods
pop
lock
fnstsw
cmp
imul
mov
inc
dec
jno
xchg
mov
sub
jecxz
cmpsl
cmpsl
mov
mov
fisttps
in
vcvtss2sd
push
xchg
lcall
jnp
sbb
xor
rolb
int
call
in
adc
std
mov
push
xchg
ds
int3
cmp
loope
xlat
push
xlat
xchg
xchg
jo
pop
rcrl
jne
std
fldl
jo
or
pop
push
mov
mov
sbb
in
inc
stc
sbb
mov
mov
notb
dec
push
inc
sub
mov
push
and
sbb
aaa
mov
aad
cltd
and
cli
ljmp
cmp
pop
jo
aas
cwtl
mov
roll
test
mov
adc
pop
sti
add
cmc
mov
inc
leave
cs
jnp
push
add
in
mov
std
sbb
dec
dec
pop
xorl
ret
push
pop
nop
mov
loope
movsl
push
aam
jnp
push
lret
jecxz
das
repz
mov
add
adc
push
int
outsb
dec
xchg
testb
adc
and
inc
test
mov
test
sub
mov
dec
das
and
ret
outsl
jmp
sub
cmp
dec
rolb
xchg
fucomp
cwtl
cmc
cmp
fists
icebp
xchg
shrb
fcoml
xor
mov
cmp
jg
das
dec
adc
hlt
fptan
je
lea
lahf
lods
xorb
and
test
mov
mov
sbb
cmp
cmpsb
sbb
inc
inc
in
mov
inc
fstpt
mov
aad
jecxz
icebp
into
jl
loop
pop
lock
xor
inc
into
loop
mov
mov
cmc
sbb
test
outsl
fsts
sbb
lret
dec
call
sbb
push
cmc
scas
scas
ljmp
xor
mov
dec
dec
xlat
dec
add
roll
adc
shlb
cmpsl
or
pushf
jl
jg
cwtl
in
sub
addr16
xor
pop
push
mov
jmp
or
scas
addl
gs
shlb
mov
sub
mov
dec
and
inc
add
cmp
adc
scas
and
mov
sbb
mov
aas
nop
jb
add
lahf
and
mov
cmpsb
scas
xor
and
inc
add
out
mov
and
cmc
jne
repz
xchg
pop
pop
cmp
mov
jb
aas
cmp
lods
and
out
pop
dec
sbb
cltd
fldl
in
push
or
cli
xchg
mov
inc
or
stos
jg
jecxz,pt
lods
adc
or
int
inc
cmp
leave
les
hlt
js
jne
das
mov
aas
data16
dec
imulb
or
andl
adc
cmp
in
jno
mov
cli
dec
cmp
cli
inc
lea
loope
adc
jo
sbb
mov
mov
rol
pcmpeqw
or
dec
test
lcall
cwtl
rorl
xchg
je
insl
dec
sub
adc
or
shrl
mov
decb
outsb
add
fwait
inc
sbb
loope
aad
in
cltd
xchg
adc
addr16
push
leave
data16
dec
cmc
xlat
jle
outsl
push
jne
mov
xchg
pushf
aam
mov
pop
xchg
incb
add
mov
mov
xlat
sbb
cmp
mov
gs
insb
cs
pop
ljmp
push
mov
jge
ret
ret
stos
push
xchg
nop
and
jbe
jbe
jmp
bound
push
cmp
aaa
scas
in
out
adc
ret
and
insb
push
test
sub
cld
xor
mov
in
cmp
clc
cli
icebp
xor
leave
aaa
push
dec
jb
out
mov
cmc
inc
shll
std
mov
adc
outsb
enter
das
fcmove
pop
bound
mov
push
xor
es
inc
pop
pop
push
divl
fldenv
mov
mov
jae
sbb
sbb
and
mov
fcoms
or
mov
mov
call
aam
icebp
adc
jp
das
push
xchg
jns
rcrl
push
in
cmpsl
pop
imul
sbb
dec
jno
lods
xchg
daa
test
das
stc
pop
mov
enter
repnz
push
inc
icebp
xor
jl
dec
sbb
movsb
pop
testl
cli
mov
shll
sbb
jns
rolb
xor
clc
cmp
pop
scas
push
mov
loope
pushf
mov
mov
fwait
movsl
popf
mov
jl
and
add
adc
push
cwtl
loopne
add
dec
jb
add
insb
xor
in
pop
in
repz
sub
xor
loopne
push
mov
sbb
sbb
push
or
xchg
pushf
in
jne
cmpb
mov
adc
jno
push
add
mov
lcall
clc
rorl
lret
push
push
jecxz
inc
xor
jg
nop
je
subl
mov
sarb
xchg
sbb
pop
pop
divl
insl
aad
ret
je
jb
add
inc
adc
pop
cltd
repnz
sub
jo
pop
fistl
pop
sbb
push
or
jl
mov
mov
lahf
adc
pop
pop
adc
cmp
cld
fwait
pusha
lods
push
dec
xchg
or
stos
or
inc
js
xchg
and
push
cmovne
dec
int
notl
pop
pushf
sbb
lea
and
jo
out
insb
mov
popa
testb
ret
fwait
lcall
fwait
repnz
fsubrl
test
cmp
insl
movsl
xchg
mov
ficoms
sbb
sti
push
ds
jmp
fs
mov
mov
addb
repnz
add
lahf
mov
aam
outsb
pop
outsl
sbb
les
push
lret
out
add
lea
sub
adc
icebp
shl
fadds
ljmp
lds
das
mov
popf
repnz
push
cmovs
dec
cmp
add
inc
mov
and
inc
push
call
push
push
pop
int
push
jl
lods
shrl
cld
test
sbb
mov
mov
jp
mov
sub
mov
roll
jmp
orl
inc
push
stos
cs
dec
cmp
pushf
in
pushf
pop
in
and
sbb
push
icebp
jne
aas
outsb
popf
popf
jbe
stos
pusha
xor
xchg
cs
mov
inc
shll
push
jl
enter
inc
fsubrl
cmpsl
sbb
sbb
js
xor
inc
push
inc
push
mov
dec
sbb
cmpsb
mov
psrad
ja
mov
pop
mov
sbb
adcb
pop
and
xchg
sbb
jno
xchg
cltd
mov
pop
clc
cmp
loop
xchg
scas
les
les
and
and
jl
xchg
jne
push
leave
dec
mov
sahf
aas
stos
pop
xchg
fs
add
rolb
repz
out
ss
push
pop
imulb
pop
pop
push
sub
ljmp
movsb
cmpsl
ficompl
jg
xchg
insl
push
outsb
popl
out
fists
fs
dec
sub
gs
ljmp
sbb
mov
or
nop
sbb
sbb
fdivrs
lret
inc
adc
push
testb
push
mov
iret
ljmp
mov
cmp
out
adc
push
adc
mov
mov
push
dec
insl
cmp
push
cmpsb
add
in
cmp
sbb
dec
lret
cld
adc
lea
jae
int3
jp
cmpsl
xchg
pop
jge
xor
inc
push
sarb
sub
pop
jp
mov
push
ret
sub
rsm
cld
mov
loopne
pop
jns
loopne
outsb
jecxz
add
cmp
push
sub
cs
out
roll
cmpsl
out
testl
cmp
cmp
aam
fistps
push
adc
test
aam
shr
push
test
jo
jno
inc
pop
subl
add
lea
sub
jmp
sub
jne
lea
cli
and
orl
icebp
shll
inc
stc
adc
sub
push
hlt
div
jnp
cmp
test
pop
jno
pop
mov
cmpsb
icebp
mov
or
je
rclb
inc
jo
inc
test
fidivs
xor
mov
movhlps
adc
mov
jae
cli
push
fldt
mov
xchg
sub
xlat
ret
xchg
and
push
int3
cli
repz
jnp
mov
or
mov
dec
loope
fcoml
push
inc
fmul
sbb
sbb
cmc
loope
sahf
es
or
popa
ds
les
xor
or
push
popw
add
pop
scas
xlat
pushf
rcl
mov
std
adc
popw
outsl
jb
adc
add
ds
jo
fnstenv
pop
lea
jg
push
xchg
xchg
ss
stos
sti
hlt
inc
inc
mov
push
and
xor
mov
lock
ds
xor
pop
in
mov
pop
push
int
gs
insb
lods
mov
push
inc
stc
and
push
sbb
or
mov
aaa
ss
xor
mov
jg
mov
icebp
dec
daa
stos
sti
jg
xchg
add
decb
movsl
out
ret
jge
add
xchg
mov
jmp
adc
xchg
lods
popa
stos
cmp
test
push
bound
cli
in
cmpsl
inc
adc
sahf
pop
sbb
fwait
mov
push
or
xor
xor
xchg
pop
stc
add
bound
lock
stc
clc
lahf
and
je
inc
cmpsl
test
push
pusha
out
fcoms
fsubs
or
addr16
test
inc
lret
pop
testb
push
jns
inc
xor
inc
adc
cmp
rolb
cmpsb
ds
sahf
rcll
fistpll
hlt
lock
mov
inc
or
cmp
sub
cltd
ljmp
outsb
xor
mov
adc
xchg
push
popa
fcompl
mov
inc
pop
sub
es
mov
cmpb
std
imul
lcall
xchg
mov
jbe
push
adc
push
adc
cld
call
dec
insl
cmc
shrl
add
sbb
dec
test
fwait
into
jp
xchg
mov
cs
in
dec
cltd
sub
xchg
fwait
cmp
loopne
or
dec
out
lcall
int
sbb
sbbl
dec
adc
repnz
jnp
cmpsb
mov
popa
int
push
mov
test
pop
rorl
ss
pop
outsl
push
pushf
repnz
push
mov
paddq
cmp
repnz
add
jp
jle
rcrl
faddl
test
std
dec
addr16
pop
rcrl
mov
sub
dec
mov
push
sbb
push
adc
jmp
subl
pop
inc
inc
add
mov
push
push
icebp
out
adc
rcr
jp
jbe
das
repnz
xchg
pop
out
in
enter
sub
mov
mov
and
inc
stc
scas
xor
inc
jg
pop
rclb
sbb
int3
cmc
cmpsb
dec
push
add
pop
out
scas
jmp
or
fimull
jo
rcrb
daa
mov
in
lods
js
mov
jb
in
mov
and
or
aad
adc
sbb
jle
mov
push
div
mov
ljmp
jns
nop
mov
cmpsl
jle
inc
jl
cmp
arpl
ljmp
mov
dec
add
mov
out
push
repnz
mov
imull
adc
aad
xchg
mov
cltd
scas
mov
xchg
imul
xor
inc
mov
jecxz
std
add
adc
jmp
or
out
enter
push
ds
scas
or
iret
aad
aaa
sahf
xlat
insl
xor
jp
mov
sahf
jns
and
jno
xchg
mov
mov
push
xchg
push
repnz
sub
jle
mov
sub
fsubl
fnsave
dec
out
cmc
in
sbb
xor
das
cmp
cmp
ds
xorl
ja
and
aas
pop
and
lds
and
cld
mov
xor
cmc
leave
mov
imul
mov
enter
dec
mov
jae
aas
call
stos
inc
add
and
lock
cwtl
sub
hlt
hlt
sahf
stos
ficomps
dec
add
dec
scas
rcl
adc
jge
mov
xchg
dec
mov
aaa
icebp
inc
add
and
sub
pop
js
jbe
rorb
mov
cmp
add
clc
pop
nop
mov
push
push
ret
dec
mov
lods
ret
mov
mov
xchg
insb
dec
xchg
lret
jg
mov
out
in
test
adc
lret
adc
loopne
lds
loopne
inc
or
xchg
sub
xchg
mov
cmpsl
jnp
popf
xlat
cs
pop
cld
inc
sub
jecxz
xorb
lock
mov
mov
inc
cmpsb
and
mov
jnp
add
mov
sub
mov
in
stos
shlb
out
and
mov
add
sti
sub
jnp
and
rcll
cld
sbb
out
mov
dec
mov
mov
into
outsl
popf
int
inc
xor
ds
push
arpl
push
test
dec
ja
sub
cmp
xchg
cld
xor
fldcw
inc
arpl
movsb
int
les
stos
adc
jns
leave
loope
mov
clc
int3
add
arpl
int
cltd
mov
shlb
clc
ljmp
lcall
push
inc
in
sub
jmp
mov
lret
mov
insb
mov
push
adc
xchg
mov
lock
popf
dec
and
adc
iret
mov
out
test
add
jnp
add
mov
hlt
sub
aam
xor
sti
jae
pop
out
cmp
out
notb
sbb
or
lods
push
mov
and
inc
pushf
ret
mov
add
sbb
and
inc
sbb
xorl
mov
xor
xor
popa
jp
int3
dec
mov
in
jb
push
dec
shll
imul
loopne
inc
insl
mov
cmp
lahf
fwait
sar
fadd
stc
pop
pop
and
mov
sbbb
dec
mov
jle
cmp
sub
clc
scas
adc
fsubl
jbe
stos
les
into
pop
add
xor
mov
dec
movsb
ret
inc
pop
daa
aad
sbb
mov
data16
sub
out
sahf
cmp
stc
pop
pushf
and
push
inc
inc
inc
jns
jns
push
call
divl
mov
push
inc
mov
fs
pushl
mov
repnz
popa
aas
scas
pop
jl
repnz
jge
xchg
push
fcoml
xchg
sub
mov
ja
call
inc
in
rorb
pop
rcl
sahf
add
cmp
mov
setns
ja
push
jg
aam
stos
xor
pop
pop
je
xchg
insl
xchg
or
push
ds
or
xchg
in
stos
aaa
add
jle
and
out
push
out
pushf
pop
sti
xchg
test
cmp
in
pushf
in
push
jae
or
ljmp
jns
jns
adc
push
ljmp
cwtl
push
jnp
in
adc
pop
subb
test
shll
sti
mov
push
sti
mov
fwait
test
or
sbb
cmp
push
xor
add
mov
inc
mov
and
pop
movsl
movsb
cmp
sahf
aam
pop
jecxz
fisttpll
lods
or
jmp
popa
lcall
inc
add
sub
imul
inc
int3
push
sbb
imul
mov
fstps
popf
or
jo
push
nop
sub
scas
jne
jo
rorl
repnz
xor
pusha
sbb
rol
fldenv
and
ljmp
ret
inc
and
aam
push
stc
and
dec
idivb
sbb
sbb
negb
lcall
xchg
or
insb
fildl
jbe
xchg
sbb
mov
ss
mov
xchg
sub
stos
je
push
iret
cli
cmp
mov
mov
push
loop
out
push
arpl
iret
jnp
rcr
out
outsb
rcll
push
sub
and
in
push
dec
and
notb
fcmovbe
inc
sti
fisubrs
insl
lret
xor
adc
push
ja
cmpb
push
cmp
shlb
fimull
sti
cmp
rcrl
pop
int3
mov
jl
push
scas
shl
mov
popa
mov
imul
lret
popf
mov
sub
mov
jnp
sbb
inc
push
dec
std
dec
mov
mov
fisubs
test
pop
dec
stc
mov
push
bound
mov
pop
test
add
aaa
cmp
adc
xor
push
cmc
test
mov
test
cmp
fistps
ds
or
aam
pop
sbb
stc
xor
xor
add
aaa
je
ret
lcall
addr16
lret
faddl
mov
inc
mov
mov
sub
inc
and
fisubs
shrb
outsl
test
aad
mov
mov
inc
roll
outsl
mov
dec
repz
shrl
sub
fwait
in
mov
cmpsb
jnp
mov
adc
dec
test
je
nop
scas
stos
lods
test
stos
add
fs
jmp
mov
inc
stc
or
mov
loop
out
xor
cwtl
jne
push
nop
loope
fldl
aad
rcr
je
icebp
fsubrl
mov
or
adc
ret
inc
dec
int3
frstor
aaa
cmp
jne
jle
fisubl
cmp
mov
jbe
add
jg
push
jmp
frstor
mov
xor
xchg
lds
fwait
aad
imul
scas
outsb
aas
mov
cmc
repnz
inc
push
ret
jl
jo
je
call
adc
push
mov
popf
cmp
jge
add
and
mov
xlat
lahf
adc
jge
aaa
cld
mov
out
lahf
pop
jl
inc
push
inc
mov
cmp
lret
inc
pop
adcb
or
loop
adc
and
xchg
lret
or
cmpl
test
or
imul
add
insl
lock
cmp
sub
mov
mov
cwtl
or
dec
or
mov
mov
push
out
sti
or
in
int
into
fwait
sahf
mov
jnp
mov
incl
nop
mov
ret
inc
mov
adc
lret
mov
dec
push
add
cwtl
sbb
pushf
sti
repnz
jp
lret
ret
xor
test
lcall
sbb
jg
mov
adc
repz
cmp
push
repz
xor
repnz
std
xor
shl
jp
mov
mov
xchg
enter
mov
or
sbb
popf
test
negb
scas
cwtl
push
cmpsl
dec
pop
xor
fldt
xchg
imul
dec
ret
loop
xchg
adc
dec
add
inc
fdivrs
mov
je
mov
mov
pop
in
xor
leave
jge
cmp
fnstcw
sub
in
sahf
iret
fisttpll
pusha
xor
pop
iret
clc
xchg
cmp
jmp
sub
das
adc
pop
popf
in
shrb
sub
dec
out
and
cld
jmp
add
cmp
sbb
or
mov
sub
xlat
push
adc
xchg
cmp
xchg
mov
pop
sbb
add
sbb
jno
inc
mov
pop
jbe
mov
mov
enter
ds
es
push
push
sub
push
repnz
clc
pop
and
or
out
push
mov
xor
testl
scas
lock
ja
and
and
idivl
pop
push
sub
jecxz
rcr
add
sbb
mov
add
sbbb
mov
mov
pmuludq
idivl
cmpsl
sarb
sub
xor
xor
sbb
inc
lcall
or
jbe
sbb
and
das
inc
hlt
das
push
dec
ret
ret
call
adc
fsubl
ds
in
stos
ss
add
repz
add
sub
ret
add
adc
and
fs
dec
add
mov
ret
nop
lods
mov
aad
push
sub
or
testl
lds
pop
pop
gs
andl
das
repnz
int3
std
cmp
aad
insb
xor
lods
sub
iret
fwait
xchg
les
push
push
sbb
bound
mov
jge
cmp
aas
pop
fnsave
scas
imul
sar
add
or
test
aad
dec
inc
in
inc
ret
push
and
cmpsl
das
insl
xchg
inc
mov
addr16
je
les
ret
jp
inc
repz
nop
out
xchg
test
push
in
or
jp
pop
jmp
enter
dec
xor
cli
xchg
xor
test
icebp
and
repnz
cwtl
xor
leave
push
in
inc
adc
aas
lcall
mov
adc
push
inc
cmc
and
and
repz
fisttpl
popf
clc
jnp
in
mov
cmp
lret
enter
jae
mov
ds
mov
orl
jge
rcll
push
sub
jnp
mov
fs
or
dec
ja
mov
repz
xchg
sahf
adc
sub
mov
nop
mov
lret
fldl
fistpl
movsl
test
lahf
shrb
clc
push
jecxz
lea
jae
sahf
xlat
fdivrl
mov
sub
stc
test
mov
inc
jns
push
fwait
fwait
movl
fisttpl
and
dec
inc
mov
dec
and
xor
cli
mov
loope
sbb
lods
fildl
cltd
mov
cltd
push
sti
and
cwtl
mov
push
fcoml
pushf
or
verr
adc
outsl
mov
lcall
mov
xor
arpl
pop
loope
lock
and
hlt
lret
xchg
dec
out
adc
dec
je
sbb
jl
xchg
or
out
js
mov
pop
outsl
rorl
pusha
mov
add
test
inc
push
gs
or
pop
add
jnp
cmc
js
mov
adc
arpl
lea
push
outsb
es
inc
sub
sub
and
mov
push
cmp
pop
outsb
cmpb
mov
push
dec
pop
jns
cwtl
inc
mov
add
pop
mov
jne
pop
jp
jl
xor
fidivrl
into
pop
leave
out
xor
jp
lcall
or
adc
xor
xor
mov
jae
pop
xor
aad
jno
jb
mov
xor
out
in
das
push
test
or
adc
push
xchg
movsl
jbe
jne
sbb
lret
pop
inc
icebp
mov
inc
push
cmp
sbb
mov
mov
mov
leave
daa
insb
js
xchg
xchg
cmpsb
jge
rolw
lods
mov
aad
imul
es
mov
mov
mov
inc
fldcw
dec
imul
fisubrl
mov
lock
xchg
ss
popa
ficompl
xchg
dec
jg
lret
xlat
mov
bt
jnp
and
push
sbb
and
mov
pop
je
or
pop
jb
nop
gs
or
es
jnp
inc
ljmp
jl
mov
mov
subb
leave
fldlg2
ret
jecxz
and
push
mov
and
pop
ljmp
mov
js
add
out
or
repz
aad
fcmovbe
jl
and
jae
mov
aad
mov
js
test
rclb
movsl
pop
mov
add
neg
sahf
repnz
xor
ret
aam
popa
cmp
xor
int
xchg
and
sahf
int
daa
ss
in
bound
iret
xchg
cmp
mov
in
mov
insl
mov
mov
cmp
mov
add
lods
xchg
mov
inc
jno,pt
and
lds
push
repnz
repz
stc
repz
jne
xchg
outsl
mov
cmpsl
outsl
cmp
cmp
xor
xor
lea
jl
push
push
jp
insb
out
xchg
outsb
fiaddl
mov
push
inc
pop
ja
les
pop
xor
xchg
jge
mov
mov
daa
sbb
push
in
xor
iret
mov
in
cmpsb
cmc
test
ljmp
xchg
rcrb
pop
testb
loope
push
lret
lea
scas
push
xor
scas
jnp
jno
push
rcrl
xor
xchg
adc
adc
xor
cmc
test
dec
ss
mov
adc
outsb
icebp
add
clc
xor
ret
mov
cmpsl
filds
and
pusha
pop
nop
or
lahf
pop
inc
rcr
mov
cmp
mov
and
inc
addr16
insl
sbb
xor
add
pop
sar
cmp
or
ja
inc
add
xor
aam
sarb
enter
sub
or
push
roll
adc
fsubrs
out
or
mov
jbe
sub
call
dec
popa
mov
fsubrl
out
mov
test
jge
inc
js
pop
aaa
pop
insb
insl
out
jno
push
pop
pop
dec
jno
rcll
test
mov
ret
xlat
and
jmp
pushf
mov
roll
call
outsl
into
pop
fisttpll
dec
lcall
pusha
int
movsl
xor
push
push
bswap
into
dec
repz
xorl
pop
mov
mov
repnz
push
adc
mov
cmp
pop
repz
push
adcb
leave
mov
mov
jno
and
sub
mov
and
mov
push
data16
mov
push
sarl
inc
dec
jo
movsl
imul
mov
sbb
xor
cwtl
in
aam
movsl
pushf
adc
sub
test
sbb
push
rorl
mov
lahf
xor
xor
sbbl
mov
icebp
clc
mov
les
sbbl
jg
ss
popa
loopne
out
jmp
subb
dec
test
pop
hlt
xor
shll
xchg
push
cmp
je
sahf
mov
inc
jbe
add
jp
mov
fisubrl
out
dec
cmp
sti
faddl
adcb
inc
and
inc
mov
jmp
cmp
outsl
dec
mov
dec
add
jl
jno
mov
push
pop
and
jno
lods
sbb
arpl
dec
cmpsl
pop
push
pop
cwtl
cld
ljmp
pop
xchg
insl
push
out
mov
push
loopne
pop
xchg
addl
xor
fs
and
enter
xchg
mov
or
aas
xor
jae
mov
outsl
inc
xor
mov
mov
xor
pop
fwait
cmc
adc
inc
mov
into
lcall
call
jb
sub
lret
idivl
xor
dec
ret
mov
mov
fwait
repz
inc
pop
cmp
in
scas
pop
xchg
cmpsl
sub
cltd
out
cwtl
in
pop
test
sub
inc
push
xor
push
lds
stos
test
lret
mov
loop
sub
xchg
or
sarb
xorb
sub
sbb
loopne
sbb
pop
fiadds
iret
dec
jp
int3
stc
push
pusha
sub
pop
scas
lods
repnz
jle
pusha
rolb
fucomi
test
lds
loope
notl
js
push
js
rcr
xchg
mov
add
sbb
jne
in
or
dec
mov
xor
arpl
aas
xchg
cmpsl
sbb
and
out
jae
inc
aam
insb
addr16
in
es
mov
lret
mov
movsl
loop
push
flds
fdivs
aam
aad
int3
mov
and
push
cmp
adc
add
enter
das
adc
ficomps
sub
and
pop
cmp
mov
insl
lcall
int3
sbb
xor
js
pop
cmpsb
jb
scas
in
xor
pop
adc
dec
and
jo
lea
cs
adc
ja
pop
imulb
aas
jns
dec
mov
imul
lahf
inc
nop
jp
inc
pop
mov
pop
dec
fldl
out
pop
or
push
in
cld
or
fildll
pop
enter
xor
push
ret
adc
add
push
lcall
ja
fstl
into
in
sbb
mul
sbb
push
cs
cmp
mov
mov
push
pop
insl
push
in
mov
movsb
sub
sbb
push
insb
lret
cmp
std
sti
dec
cs
fisubl
cli
fldcw
and
pop
dec
pop
ret
cmc
mov
aam
hlt
push
imul
cmpl
inc
repnz
inc
jb
xorb
inc
fldcw
cwtl
out
cwtd
adc
loop
idiv
add
or
daa
xor
aaa
out
ret
adc
jmp
and
loopne
sbb
sahf
push
mov
fidivs
cmp
sub
adc
shll
test
je
sub
stos
mov
sub
fwait
loope
test
xchg
dec
xchg
lcall
push
sub
lock
jnp
test
sub
add
lods
xlat
pop
fldcw
mov
or
clc
pop
daa
jle
mov
add
lret
xchg
mov
outsb
xor
jle
or
in
sub
les
js
adc
and
pop
mov
jmp
push
scas
into
xor
adc
dec
pop
mov
xlat
test
jmp
mov
jns
adc
rclb
mov
clc
dec
mov
dec
mov
arpl
jge
es
xor
jecxz
xor
jne
test
bound
cmp
roll
xchg
add
xchg
mov
mov
pop
hlt
mov
pop
sub
mov
mov
dec
dec
es
idiv
mov
pop
icebp
mov
adcb
push
xchg
xor
mov
cmpsb
sbb
mov
jg
inc
inc
sub
sbb
bound
xorl
jno
andl
lods
xor
add
fidivl
gs
or
jnp
shl
add
test
ss
in
js
repz
jne
sbb
jne
inc
mov
mov
repz
cli
insb
push
dec
cld
movsl
shll
subb
nop
ljmp
sbb
iret
xchg
insl
cmp
in
push
int
in
or
sbb
mov
mov
call
pusha
or
jno
mov
mov
shlb
cmovs
ficoms
out
mov
jno
adc
inc
jbe
xchg
push
movsb
in
cli
dec
pop
arpl
cmp
xchg
scas
icebp
fidivl
lods
bound
fcmovne
je
test
push
xor
imul
ret
imul
xor
mov
sbb
pop
lods
dec
jbe
or
jo
jbe
cwtl
imul
pop
push
mov
lahf
test
inc
add
jno
fldt
lods
xor
cmc
xchg
rorb
cmpsb
rcrl
push
pusha
pop
enter
jge
loopne
mov
loop
push
pop
jmp
mov
lds
ja
addr16
into
jmp
jnp
mov
adc
xchg
fwait
mov
push
cmpl
mov
or
or
out
js
sbb
push
inc
outsb
dec
adc
adc
les
jp
fidivl
sarl
jno
dec
push
imul
add
xchg
dec
jne
inc
shlb
mov
iret
gs
fincstp
dec
aad
push
iret
jle
cltd
pop
mov
lock
jb
js
mov
mov
cmp
cmp
cltd
push
or
cmp
or
enter
shll
shrb
add
call
and
cmpsl
mov
shll
push
add
ret
xchg
addr16
sub
jecxz
bound
insb
jo
mov
fwait
add
xchg
lret
mov
fldenv
xchg
pusha
xlat
xor
insb
in
fiadds
xchg
push
push
push
subl
movsb
fs
pop
lock
push
bound
addr16
sbb
mov
test
mov
cwtl
insb
cli
sahf
jecxz
dec
jg
out
es
push
movsl
lods
mov
outsb
rolb
adc
mov
xorb
push
dec
fcompl
fsts
add
nop
out
mov
cld
sub
add
movsb
jmp
enter
sub
bound
fcoml
and
inc
and
dec
das
mov
lods
jmp
loope
xor
addb
andb
mov
js
xchg
mov
adcb
pop
lea
pop
aad
mov
pushf
push
cmp
in
sub
cmpsb
pop
je
cmp
pop
inc
mov
or
push
cwtl
mov
out
aad
xchg
fmul
shlb
mov
pop
gs
out
out
or
andb
xchg
icebp
rcll
movsl
add
mov
jns
cmp
mov
scas
stos
popf
mov
subl
mulb
and
sub
xor
dec
push
fwait
add
dec
mov
sarl
pop
add
js
xchg
out
and
ja
or
pop
pop
cwtl
pushf
shll
push
cld
xor
lock
mov
inc
cltd
cmp
adc
mov
inc
cmp
lds
aas
outsb
lods
mov
aas
clc
add
popf
push
sti
insb
push
and
inc
xor
popf
push
add
movsl
and
adcb
jae
xor
mov
mov
out
out
decb
cmp
push
insb
mov
mov
dec
push
sbb
popf
insb
mov
call
add
xor
fprem
sbb
andl
repnz
stos
pop
dec
addr16
jecxz
sbb
leave
cmp
cmp
jo
jge
mov
test
daa
daa
xchg
or
loope
and
aam
mov
cld
repnz
inc
cwtl
popf
lcall
adcb
inc
ret
mov
outsb
fs
dec
mul
mov
xchg
and
out
shl
je
or
imul
mov
fs
xchg
dec
or
pusha
ffree
sub
inc
dec
xchg
push
jmp
pop
cmpb
mov
cmp
aas
mov
lods
mov
mov
repz
pop
cmp
push
cli
aaa
ljmp
or
scas
push
xchg
mov
jle
xor
pop
cs
ja
mov
gs
sbb
add
mov
sub
inc
cmp
push
arpl
adc
jle
pop
mov
cwtl
or
push
push
xor
lret
stos
in
add
push
ds
lea
shrl
pop
jge
lds
adc
ret
mov
lds
xchg
bound
cltd
jge
lods
loop
ret
pop
arpl
imul
or
movsb
xlat
add
cmp
mov
and
sti
movsb
xor
xchg
jnp
fwait
mov
jmp
aaa
add
dec
xor
mov
stos
push
in
shlb
sbb
push
jne
pop
shl
xor
push
iret
mov
lods
or
jl
aam
je
sar
mov
mov
push
inc
das
iret
sti
shrl
andb
flds
loop
scas
outsl
cmp
movb
sub
add
fwait
mov
sarb
lret
repnz
adc
sub
xchg
pop
mov
in
scas
sub
add
sahf
dec
jmp
scas
pop
jb
fidivrs
in
jns
mov
add
mov
and
jl
xor
testl
shll
jg
cld
dec
shlb
xchg
daa
in
dec
imul
sbb
pop
insb
cmp
ja
scas
into
mov
popa
inc
outsl
fdivrp
add
insb
ss
clc
je
icebp
mov
fidivs
inc
mov
stos
in
orb
test
pop
jl
and
cwtl
and
es
sub
xorb
orl
fsubr
loopne
insb
adc
add
sbbl
repnz
mov
pop
leave
fbstp
lret
mov
lods
jne
and
cld
test
sarb
pop
fld
insl
pop
daa
test
xor
dec
jp
mov
ljmp
into
cmp
mov
cmp
sbb
fs
faddl
cmc
mov
add
sub
lea
inc
outsb
in
in
dec
push
or
jecxz
shll
arpl
cmp
test
xchg
dec
sti
pop
mov
inc
test
xor
fmul
rcl
add
inc
xor
aas
jmp
dec
stos
push
cmp
ja
push
mov
outsb
inc
arpl
push
mov
inc
sbb
es
inc
icebp
repz
stos
pusha
mov
mov
adc
sub
sub
cwtl
lods
adc
stos
lcall
test
and
mov
inc
stos
jge
inc
xor
es
sub
or
xchg
xchg
xchg
and
fistpll
or
loope
pop
in
insl
test
jb
xlat
xchg
xor
cmp
xchg
outsl
lods
mov
sti
subl
stos
add
stos
add
fwait
jl
lods
mov
adc
arpl
lds
popa
cli
inc
and
dec
movsl
xor
icebp
fmull
jl
sub
push
leave
and
clc
test
push
daa
push
leave
sbb
arpl
inc
lock
iret
movsb
inc
pop
cmc
pop
push
xor
sarb
or
leave
or
add
dec
dec
out
stos
lcall
jno
orl
mov
lret
adc
nop
scas
rcl
outsb
mov
mov
xor
movb
sarb
mov
aam
or
push
fistps
mov
fsubl
rorb
xchg
in
insb
fstl
sahf
or
mov
and
jb
sbb
jle
add
lret
sub
movb
sub
rolb
andb
aaa
inc
pop
add
in
aad
aad
cs
lcall
fisttps
xchg
xor
pop
and
gs
fcmovbe
pop
push
jl
mov
arpl
cmpsl
sub
enter
push
gs
ret
jae
push
insl
mov
jno
je
xor
test
das
and
fiaddl
xchg
fsubrs
imul
add
mov
loop
add
jecxz
cmpsl
fwait
imul
mov
push
jo
mov
fistpll
push
mov
push
iret
fcmovnbe
pop
popa
sbb
push
test
and
pop
or
popf
in
pop
cwtl
mov
xchg
dec
xchg
and
dec
pusha
clc
subb
mov
jae
clc
data16
mov
ret
xor
add
xor
pop
cs
sahf
cmpsb
imul
cmp
mov
sbb
daa
mov
push
pop
mov
aam
add
cmc
addr16
sbb
push
pop
scas
xor
or
dec
xchg
adc
pop
mov
ja
lea
addr16
push
and
movsb
outsb
add
icebp
pushf
mov
fcompl
pop
popf
push
cmp
adc
mov
aam
push
adc
jns
lds
movsb
mov
lods
lcall
and
dec
xor
and
cmp
adc
lea
sub
std
xor
icebp
sarl
xchg
iret
jne
and
push
lds
adc
xor
iret
ret
xor
scas
jmp
xor
and
push
mov
aam
push
pop
iret
int3
xchg
push
subb
jae
add
mov
test
enter
mov
rcrb
push
insl
mov
test
mov
ror
sbb
mov
and
lods
xchg
out
call
add
mov
bound
enter
mov
mov
lea
add
dec
dec
std
test
and
daa
mov
xchg
fcomi
push
mov
dec
pusha
aad
jns
test
cli
mov
jnp
aam
jp
pop
mov
or
or
loop
inc
jnp
fcomi
or
sub
in
sub
ja
divps
sbb
aaa
sub
sti
into
daa
add
or
cmp
sbb
into
cmp
lret
clc
cmp
stos
inc
sbbb
fwait
pop
sbb
aam
mov
es
add
xor
addr16
mov
inc
sbb
sub
xor
jmp
je
pusha
lods
pop
adc
cmp
and
lea
cmovp
cs
cmpsb
jmp
jp
mov
jp
mov
out
and
cmp
sbb
pop
movsl
popa
cs
and
push
pop
and
pop
lahf
imul
scas
hlt
es
inc
loopne
adc
mov
insl
je
xor
jle
push
mov
mov
adc
arpl
shlb
sub
outsl
dec
notb
mov
sahf
lods
in
enter
arpl
dec
mov
loopne
or
bound
add
mov
repz
sbb
pop
adc
pop
adc
sub
pop
sti
mov
ret
mov
pop
and
scas
cmpsb
leave
push
cmp
inc
push
addl
dec
fdivrs
std
xchg
inc
fisttps
and
dec
and
push
mov
nop
or
stos
push
dec
or
cmc
cmpsl
test
or
jp
add
ret
bound
lahf
xchg
test
mov
test
mov
mov
adc
jno
divl
xchg
mov
arpl
jo
adc
mov
sub
pop
lock
lds
sub
sub
inc
cwtl
shll
aaa
lcall
cmp
jge
insb
inc
adc
notb
mov
stos
xlat
popf
loope
loop
ret
mov
sbb
sbb
mov
fs
jp
in
stos
shlb
pop
push
pop
or
cmpsb
das
inc
lock
shll
loope
repz
cmp
jl
dec
pop
mov
sahf
mov
sub
loop
push
push
mov
sbb
popa
mov
lods
and
mov
push
sarb
jno
lock
cmp
adc
arpl
les
add
lahf
adc
xor
ja
cmp
jp
rcr
das
jecxz
pop
insb
movsl
mov
or
jecxz
mov
add
and
adc
inc
mov
fistpl
xchg
hlt
test
test
xchg
subb
mov
int
cmc
sahf
dec
mov
call
push
fildll
mov
cmp
imul
nop
add
shr
cmpsl
mov
mov
dec
pop
popf
xchg
mov
scas
stc
xor
xchg
inc
push
in
xchg
xchg
enter
and
int
stos
and
popa
aam
mov
in
dec
pop
jmp
sub
jno
push
pop
inc
jmp
mov
sbb
jnp
in
out
jne
ret
mov
dec
pop
fld
mov
outsl
lahf
mov
add
aas
mov
ret
add
jnp
mull
andb
vpmacsdd
sbb
insl
jmp
sub
es
jo
sub
dec
jge
cmp
mov
pop
jecxz
daa
mov
mov
js
sbb
push
test
popa
cmp
popa
stc
das
xchg
xchg
out
test
test
sahf
mov
pop
xchg
push
jle
dec
test
dec
ret
inc
fidivrs
jno
cmp
xchg
push
fidivs
jmp
or
dec
daa
pop
mov
enter
jnp
int
popa
int
add
pop
rorl
xor
push
sbbb
push
push
pop
xchg
and
sub
xchg
mov
js
cmpsl
mov
ret
cmp
push
ds
pop
jbe
ds
add
xchg
fists
loopne
mov
dec
jb
push
mov
inc
xchg
cmp
aad
mov
mov
outsb
dec
popf
shrb
das
loope
es
mov
jmp
gs
cmp
adc
imul
inc
push
mov
or
ret
pop
sbbl
or
std
arpl
push
mov
xchg
inc
fs
mov
xchg
push
xchg
call
or
js
outsb
scas
pushf
fisttpl
fisttpll
add
and
mov
xlat
arpl
pushf
inc
out
push
or
xor
xor
in
mov
jge
mov
popa
adcb
jmp
mov
test
sub
xor
cmp
add
adc
jbe
pop
daa
mov
imul
pop
or
mov
or
int
les
jg
ret
push
stos
push
mov
pop
jl
fcmovnbe
enter
movzbl
add
mov
mov
push
or
pop
jmp
mov
push
loope
mov
into
and
fs
test
scas
repnz
and
outsb
xor
enter
mov
xchg
and
xchg
xchg
jnp
sub
loope
imul
std
xor
and
jo
mov
sub
shll
lods
cwtl
mov
and
push
push
sbb
jge
jmp
shll
insb
aad
or
decb
mov
ror
xor
std
xor
pop
out
mov
and
dec
outsl
adc
pushf
inc
xchg
mov
ljmp
into
cli
cld
push
mov
cld
ror
cmp
jle
loopne
adc
xchg
sub
jp
repz
mov
sub
mov
aas
imul
jbe
or
mov
cmp
hlt
lahf
dec
and
lahf
fistl
data16
mov
repz
sahf
loope
cmp
adc
test
mov
and
push
mov
das
jno
rcr
xor
and
fisttpl
fidivl
clc
pop
jbe
mov
outsl
mov
icebp
orb
adc
pop
lret
jbe
pop
scas
es
cmp
jo
pop
fs
or
test
in
insb
dec
push
fsubrs
jo
loope
daa
jo
mov
mov
int
icebp
iret
aam
pop
test
jb
mov
outsl
jo
lock
stos
jne
iret
dec
jo
add
ds
cmp
and
cmp
test
cmpsb
inc
fisttpll
adc
int3
lods
test
jo
jo
hlt
stc
xor
scas
in
sbb
loope
mov
mov
cmp
add
lcall
xchg
aaa
fsubs
jno
test
fs
aad
mov
insl
xchg
cmpsb
push
mov
xchg
sahf
sbb
push
jmp
imul
add
jne
pop
dec
neg
loope
js
mov
scas
inc
xor
shrl
dec
adcl
jmp
mov
dec
out
ficompl
in
or
mov
je
xchg
jns
loope
inc
outsb
cld
xlat
sub
adc
adc
jle
mov
mov
pop
ucomiss
push
movsb
addl
pop
push
mov
inc
inc
and
jbe
sbb
enter
fdivl
call
loop
loope
mov
imul
frstor
add
popf
les
jecxz
imul
jns
pop
enter
pushf
mov
dec
xchg
adc
sti
mov
mov
mov
lods
rol
xchg
xlat
push
aas
add
imul
jmp
adc
mov
fnstenv
sub
sub
push
or
mov
stc
fidivrs
jg
adc
inc
sbb
xor
shl
negb
mov
cwtl
mov
shl
and
jno
add
and
ss
mov
ds
ss
aad
sbb
jle
cmp
test
stos
mov
inc
and
cli
jo
jne
and
sbb
mov
push
and
xchg
sahf
xorl
repz
std
enter
sub
jbe
inc
rcrb
ds
push
mov
jae
adc
xchg
fs
jmp
gs
das
insb
dec
sub
cmpl
scas
nop
imul
popa
sti
lret
in
scas
and
mov
iret
adc
or
loop
jle
cmpsb
out
adcb
les
xchg
adc
aas
aaa
lret
negl
cmc
loope
lahf
movsl
sbb
loope
addl
insb
adc
std
mov
inc
lcall
mov
xor
push
xor
xchg
mov
xor
push
push
mov
movsl
inc
fs
sbb
pop
or
nop
filds
inc
dec
inc
stc
sbb
aad
clc
shrl
dec
fwait
sti
loopne
ss
into
int3
jae
xchg
std
imul
mov
iret
popa
scas
ja
or
pusha
dec
or
cltd
jae
inc
in
jg
rol
xchg
andl
xchg
pop
inc
sti
pop
cmc
scas
loopne
mov
adc
pop
out
fdivl
in
stos
nop
std
shl
sarl
pop
adc
pop
push
cmpsb
pop
or
push
cmpsl
jecxz
loope
dec
add
inc
ret
jg
and
fists
mov
clc
vmovmskps
repz
mov
inc
mov
popf
cmp
or
jo
cmpsb
out
pop
mulb
jne
aad
outsl
pop
pop
or
xchg
std
xor
movsb
xchg
in
lret
sbbb
pop
push
jmp
add
push
xchg
jg
aam
inc
sub
enter
push
adc
lret
cwtl
add
shll
pop
push
xchg
cmp
cmp
cli
test
test
pushf
popf
mov
push
or
mov
sbb
push
push
push
clc
cli
and
xlat
into
rcrb
or
into
lds
mov
jae
lods
adc
jb
sub
std
roll
mov
dec
sbb
fdiv
jecxz
push
call
xchg
inc
push
or
test
mov
sahf
dec
shrl
pop
sahf
int
adc
fcoml
and
filds
or
inc
push
push
js
pusha
push
pop
sbb
lcall
das
pop
dec
adc
push
js
dec
mov
icebp
lods
cli
cmpsl
push
mov
xor
int
lret
andb
gs
in
es
clc
movsl
cwtl
mov
dec
mov
mov
sub
pusha
outsl
out
std
push
lock
jo
pusha
mov
pop
imul
inc
sbb
dec
or
test
movsb
sub
out
cmpsb
xchg
sub
mov
in
shll
adc
outsl
int3
push
sbb
adc
xor
mov
pop
in
mov
jmp
xor
out
js
pop
movsb
leave
lods
and
push
cmp
push
fisubrl
mov
sub
pop
jnp
jmp
out
cmp
adc
inc
in
insl
pop
fistpl
pop
jge
icebp
xor
es
add
sub
cmp
aad
bound
xor
dec
lds
jns
cmpb
dec
jle
xor
je
jle
subb
or
jecxz
xchg
adc
or
jl
mov
rolb
push
jp
jb
inc
in
shrl
xor
insb
scas
adc
sub
aad
in
jp
xchg
mov
imul
xor
cmpsl
xchg
sti
int3
sbb
pop
cmp
jne
sahf
in
jb
ja
cwtl
fisttpl
js
ljmp
mov
xor
push
inc
pusha
or
inc
jmp
in
inc
jb
sarb
call
sbb
fwait
push
adc
add
jo
adc
pushl
pop
aad
xor
mov
idivb
imul
rcrl
test
push
pop
icebp
sub
loope
repz
jo
pop
sbb
cmp
pop
add
je
gs
jb
push
dec
lock
xchg
mov
repnz
dec
jno
push
popa
loope
out
add
aad
jge
add
push
cmp
sub
outsb
jb
icebp
popf
movsb
jecxz
ret
sub
mov
jl
xor
mov
fisubrl
imul
adc
mov
popf
bound
cmpsb
sub
in
in
loop
out
lret
sub
xchg
mov
lock
add
lret
pop
add
stos
lock
aaa
sub
bound
rorl
mov
mov
and
adc
fdivrs
into
xor
cmp
adc
decl
sbb
or
pushf
rorb
inc
shl
add
and
xchg
hlt
xorl
push
and
add
into
dec
lret
mov
xchg
dec
and
xchg
out
and
pop
mov
dec
dec
subb
cli
xor
cld
daa
lods
dec
aam
jo
jp
cmc
adc
cs
arpl
insl
mov
in
sbb
xor
add
rorb
int
sahf
out
jecxz
divb
mov
cmp
adc
mov
cmc
adc
repz
into
loopne
cmp
dec
sbb
jbe
sub
ret
sub
pop
inc
mov
divb
loope
js
and
sti
bound
xchg
pop
dec
dec
mov
fisubrs
popf
cmpl
xchg
xor
lock
add
mov
xchg
orl
sub
xorb
je
imull
lcall
jp
xchg
push
cli
mov
lahf
sub
or
dec
ret
outsl
mov
mov
mov
xor
outsb
jno
fwait
add
pushf
or
push
mov
jp
cmc
xchg
mov
mov
xchg
scas
fcomp
aaa
aas
fisttpll
call
mov
in
push
mov
adc
ja
cld
push
xchg
push
stc
int3
lods
int
addr16
ret
fwait
aaa
inc
add
in
mov
sub
pushf
sbb
out
rolb
inc
add
clc
and
test
hlt
inc
les
mov
scas
cld
cs
add
fmuls
stos
add
cmp
add
dec
jb
mov
jo
fwait
addr16
cmp
mov
inc
insl
imul
add
or
in
insb
xchg
popf
mov
cli
gs
shlb
mov
mov
cld
lods
popa
pop
inc
xor
cmp
lods
and
popf
filds
in
or
insl
cmpsl
iret
xchg
shl
cld
lret
mov
xor
jle
insl
jmp
sub
dec
mov
push
xchg
icebp
add
das
repz
movsb
addr16
add
push
jl
js
ja
jo
icebp
jb
out
push
enter
push
add
pushf
xchg
sbb
fsubrl
dec
inc
mov
imul
ret
test
pop
xchg
sub
xor
pop
jge
push
les
enter
sbb
push
xchg
lcall
cmc
xor
xchg
or
sbb
rolb
xchg
and
mov
add
mov
adc
insb
push
fsts
adc
sbb
out
dec
inc
dec
sti
mov
sub
sbb
scas
js
xchg
jmp
sub
sub
push
pop
and
inc
or
and
ret
push
push
inc
call
mov
push
cwtl
pop
xor
movsb
add
cmc
xor
movnti
mov
cs
push
sahf
loope
lcall
and
das
add
mov
mov
mov
adc
in
negb
mov
popf
fsubs
es
jnp
pop
insl
inc
loope
repz
lods
push
aaa
sbb
jo
loop
sbb
xor
sbb
inc
mov
mov
mov
and
dec
sbb
jl
out
mov
xorl
xchg
imul
lods
cmpsb
fucomp
test
adcl
or
mov
rcll
rclb
sub
popa
test
pop
xor
cwtl
rolb
dec
jp
push
test
cmp
xchg
xor
cltd
and
shrl
fs
test
lea
and
subl
xlat
dec
push
mov
mov
dec
std
lret
call
sti
cs
bound
adc
lods
cmp
into
pop
data16
cld
adc
and
jp
jge
jno
in
test
add
xlat
mov
mov
push
push
cmove
jle
inc
jns
jbe
pop
dec
add
and
mov
insl
test
push
rcll
scas
mov
pop
loopne
inc
xlat
or
sti
insl
mov
hlt
ret
jne
push
cmp
movsb
push
mov
xor
dec
xor
push
fs
ljmp
dec
mov
dec
xchg
ffreep
jno
xor
cmp
jecxz
dec
or
in
shlb
sbb
lds
cmpsb
loope
add
xchg
pop
std
ret
shrb
mov
nop
out
imull
lea
or
jge
xor
dec
lret
cmp
lea
adc
pop
sbb
movsl
push
mov
push
arpl
push
pop
int
div
lods
mov
xchg
push
xchg
sub
loope
pop
negb
mov
stos
and
and
test
add
mov
dec
dec
xor
adc
mov
adc
push
outsb
add
add
scas
pop
test
out
stos
idiv
mov
mov
dec
dec
shr
or
aaa
and
ja
mov
idivl
fs
ret
out
mov
out
dec
ret
std
outsl
push
push
sahf
jecxz
sbb
sub
rclb
xchg
hlt
xchg
negl
daa
dec
sub
pop
hlt
add
fs
out
dec
cmp
pusha
cmpsb
ror
call
test
and
push
loope
cmp
push
cld
cmp
mov
mov
sbb
push
ret
pop
scas
cmp
ss
add
sahf
pop
xchg
mov
loopne
sub
jecxz
mov
in
xchg
movsl
out
pop
in
or
jno
fildl
iret
cwtl
cltd
fcomps
jl
insl
repz
imul
inc
dec
stos
aaa
sbb
cwtl
iret
xchg
rorl
icebp
pusha
lret
gs
jnp
adc
stc
sbb
pop
rcrl
adc
cmp
mov
int
push
and
inc
or
mov
mov
loopne
addr16
push
stc
mov
imul
pushf
lods
movsb
clc
dec
call
out
test
mov
mov
or
cmp
ss
add
mov
add
push
ss
es
xor
test
and
fdiv
out
xchg
pop
mov
test
rcl
push
and
jbe
pop
fptan
stc
cs
xor
jbe
hlt
mov
andb
xlat
loop
mov
psubq
push
lea
leave
aaa
xor
dec
mov
adc
jne
add
cltd
sahf
iret
enter
fnsave
or
bound
adc
imulb
cmp
mov
adc
rol
addr16
fistpll
pop
ja
outsb
mov
pop
lods
in
leave
fcompl
inc
or
filds
outsl
fs
ret
xchg
jl
gs
mov
sahf
push
aas
lret
and
mov
jae
mov
cmp
xor
push
ljmp
and
lods
mov
mov
sbb
inc
sub
sub
push
add
xchg
aad
pop
pop
and
sbb
adc
loopne
xor
xor
add
jg
pop
mov
lods
cmp
dec
mov
roll
test
ret
or
call
mov
dec
sbb
call
int3
cmp
addr16
roll
fwait
xchg
jmp
addb
rcrl
es
mov
iret
nop
das
or
data16
push
xchg
sti
cmp
insl
cmpsl
ljmp
fsub
into
sub
jg
movsb
test
xchg
sbb
cmc
pop
push
insb
repnz
xor
xchg
pop
in
or
fcompl
and
push
rcrl
or
movsl
cmp
mov
rcr
mov
enter
cmp
cs
cld
insl
mov
pop
lahf
inc
inc
ret
scas
cmpsl
jae
int3
xchg
pop
xchg
mov
inc
imul
lcall
push
jae
dec
inc
push
popa
fs
add
or
dec
cltd
mov
cwtl
cmp
adc
jb
mov
test
cld
and
jmp
xlat
pushf
fiaddl
inc
add
push
call
cwtl
or
jo
out
fmuls
lcall
pop
das
inc
bound
lods
xchg
xor
push
pop
dec
lds
shll
in
mov
popa
dec
pop
lds
outsl
and
xchg
or
or
sbb
test
in
pop
cmpsb
mov
call
mov
mov
and
xchg
cmp
mov
loope
mov
mov
sub
pop
pop
inc
mov
pop
or
outsb
mov
imul
lods
dec
jl
jle
jbe
stc
dec
pop
in
int
je
loope
jp
in
sahf
push
fildll
mov
std
sbb
and
leave
fsubl
xor
pop
xchg
xor
movsl
lods
scas
inc
dec
and
push
lret
and
movsb
ja
rcl
lret
in
mov
sub
dec
adc
popf
adc
shll
lods
push
mov
icebp
loop
inc
sahf
test
cwtl
jb
xor
cmp
mov
jl
cli
addr16
sub
filds
ljmp
outsl
ret
push
inc
sub
or
push
xor
lea
dec
xlat
mov
jae
icebp
iret
push
pop
mov
jne
pop
clc
arpl
push
mov
adc
out
xor
imul
xchg
xor
jbe
ja
inc
inc
fnstcw
sbb
mov
fcmovnu
sub
lods
iret
js
inc
dec
call
or
pushl
das
dec
and
inc
add
jl
mov
das
mov
daa
sub
dec
push
mov
not
push
repnz
sahf
iret
in
sti
jnp
out
mov
lahf
or
fsubr
inc
mov
or
js
xor
cmp
ret
or
test
gs
pop
or
ret
mov
dec
cmc
cs
cmp
adc
sbbb
and
cmpsl
add
push
sbb
push
iret
mov
add
loope
std
push
mov
ret
mov
ss
or
mov
test
mov
xchg
pop
inc
mov
pop
or
int3
adc
sahf
push
aas
sbbl
mov
out
out
das
add
scas
jo
push
ljmp
test
xor
push
stos
insl
rorl
cwtl
rorl
aad
leave
jmp
and
jo
cmp
out
push
sbb
lock
shrb
add
jmp
dec
lods
mov
into
iret
mov
xchg
jmp
das
xchg
inc
sbb
add
popf
or
dec
data16
mov
flds
cmp
lds
test
jmp
cmpxchg
pop
in
lods
push
aam
push
cmp
adc
pop
jo
mov
insl
mov
mov
jae
and
xor
inc
inc
fucom
lahf
and
xor
aaa
test
xchg
mov
inc
inc
jno
xchg
fwait
dec
test
pop
mov
cltd
shlb
sbb
popa
inc
andl
mov
jno
sbb
add
loopne
jle,pt
xchg
push
lods
adc
ret
fnsave
repnz
je
ret
aaa
mov
sahf
xor
xlat
cmp
adc
in
xchg
mov
inc
xchg
xor
add
sbb
pop
xor
pop
daa
je
inc
ja
sahf
or
repnz
mov
imul
fidivl
ljmp
pop
mov
add
mov
add
fsubrp
lahf
subb
adc
out
dec
arpl
xchg
shll
into
dec
pop
adc
sbb
out
aad
sub
push
test
test
adc
or
imul
icebp
sub
and
faddl
mov
out
imull
rcll
pop
xchg
and
jmp
adc
cmp
inc
mov
sub
mov
or
sti
adcl
push
lock
leave
add
cmp
xchg
sar
mov
xchg
lret
cmpsb
cmp
out
mov
inc
ljmp
scas
fsubs
in
adc
fimuls
xor
stc
shrb
push
addr16
adc
lret
inc
lret
adc
mov
mov
jge
adc
out
dec
outsb
sarl
inc
adc
fwait
dec
sarl
push
xchg
lock
push
cmpb
aas
sub
mov
in
mov
movsb
cmp
clc
dec
test
lret
dec
into
jl
mov
and
lret
loopne
test
mov
cltd
lods
bound
add
adc
cmp
mov
mov
clc
add
dec
bound
lea
cld
inc
iret
orb
and
add
xchg
xchg
push
jle
dec
gs
pop
adc
cmp
ffreep
imul
clc
and
jmp
sti
push
mov
addr16
mov
inc
bound
roll
into
sbb
lds
cmc
sub
imul
repnz
sub
cli
ret
addr16
push
mov
cmp
cmp
gs
add
xor
aas
dec
mov
add
aas
stos
sarl
ret
jp
sub
jbe
mov
bnd
mov
cmp
nop
cmp
push
repnz
jg
iret
pop
imul
outsb
out
mov
stos
adc
in
out
or
mov
jnp
cli
pop
stc
adc
pop
mov
je
test
les
push
orb
mov
pop
or
nop
push
mov
cmp
push
mov
fsin
es
mov
js
push
mov
sub
rcr
in
pop
fidivl
xchg
mov
sbb
shlb
lret
push
nop
add
jne
repnz
mov
jb
mov
rcl
mov
inc
es
je
push
dec
fdivl
lods
jae
sub
mov
mov
aam
jg
and
or
test
iret
jecxz
add
jne
negb
jne
js
sub
data16
imul
repnz
fldt
fs
pop
leave
mov
into
mov
pusha
out
hlt
push
push
mov
jp
addr16
mov
fdivrs
and
adc
xchg
repnz
andl
mov
sub
cs
adc
xor
es
push
adc
pop
sub
call
scas
out
scas
shlb
out
sbb
jnp
out
sub
cmp
into
xchg
sub
adc
cmp
pop
push
lods
std
lea
repnz
decb
daa
repnz
push
icebp
xchg
xchg
or
insb
and
fisttpll
sbbl
sbb
push
xor
repz
cld
sub
lret
jns
nop
pop
pop
cld
push
cmp
mov
or
push
cltd
jg
xchg
lret
aad
test
lock
nop
adc
sbb
mov
in
mov
mov
div
daa
push
mov
sbb
xchg
add
cmc
pushf
and
adc
into
fwait
inc
cmp
jne
lock
out
jae
cmp
movsb
addb
movsb
scas
mov
inc
mov
xor
dec
cmp
jl
ljmp
repnz
sti
push
mov
movsb
in
xor
lock
cmc
test
xor
inc
dec
or
fs
mov
in
cwtl
pop
mov
or
aas
cmpb
inc
dec
call
inc
fwait
popa
add
sti
lods
jne
push
xchg
jge
ret
or
sarb
enter
pop
aaa
je
testb
inc
xor
lods
rorb
inc
shl
mov
push
movsb
sti
icebp
ret
test
mov
jmp
mov
mov
insl
das
rorl
and
or
ror
jae
outsl
sbb
sahf
mov
pop
jmp
rcll
sub
in
sub
outsl
cmp
mov
cmp
push
addr16
pop
icebp
fwait
adc
mov
imul
sbb
scas
and
insl
test
xchg
jb
outsb
std
pop
out
adc
and
push
xchg
fistps
int3
inc
xor
jge
pusha
fstpt
out
imulb
das
cmpsb
sbb
inc
rcll
test
mov
mov
mov
sub
leave
or
scas
and
sub
xchg
inc
xor
adc
lods
lahf
mov
sbb
xchg
pop
int
pop
dec
sub
and
jp
xchg
insl
leave
stos
fsub
jge
push
ljmp
mov
cmp
fs
fs
xchg
stos
rcll
cmp
xchg
pinsrw
je
xchg
ja
mov
insb
das
pop
xchg
aas
xchg
and
leave
inc
mov
out
xchg
faddl
mov
push
xchg
hlt
mov
mov
jecxz
popa
lea
pop
dec
pop
pop
dec
fbld
and
mov
ja
in
cmp
xchg
mov
xchg
xchg
mov
sbbb
or
xchg
fidivl
ds
iret
aas
insb
insl
and
rolb
shrb
in
jne
jno
mov
or
pop
cmp
fld
aam
add
pop
and
mov
stos
test
idivl
out
out
pop
inc
roll
xorb
cmc
or
out
jne
sbb
xchg
test
inc
xor
mov
pushf
xor
or
inc
push
xchg
ja
and
mov
fnsave
mov
jns
nop
loop
lods
in
pop
icebp
sar
adc
dec
mov
pop
les
cmp
cs
jmp
enter
out
push
inc
insb
mov
push
int
mov
mov
pop
mov
mov
or
and
enter
iret
sub
jge
ffreep
scas
arpl
je
fs
stos
scas
add
jns
mov
mov
push
daa
lahf
or
sahf
iret
add
fcomps
call
jbe
xchg
shlb
jl
gs
mov
xchg
cltd
and
loopne
or
popf
mov
mov
faddl
and
insb
xchg
pusha
ret
jge
xor
mov
scas
xor
push
shl
inc
jl
push
idivb
shll
cmc
pop
out
test
lret
cmp
push
inc
stc
repz
icebp
iret
stos
sbb
imul
lea
sbb
out
ds
lret
xchg
ret
mov
cmp
cli
pop
adc
xor
xlat
mov
repz
xchg
js
sub
pop
lret
jge
push
xchg
cmp
jbe
pop
xor
dec
and
or
add
jnp
out
pop
mov
add
pop
in
or
nop
dec
rcr
lcall
mov
cld
jns
xchg
sti
test
pop
fsubrl
add
dec
stc
jno
push
push
cmpb
pop
mov
sbb
xchg
es
dec
dec
in
push
or
push
and
shrb
gs
add
stos
jnp
and
or
mov
xchg
inc
pop
pop
cmp
lahf
arpl
jp
jb
xor
aaa
sub
ss
and
addr16
sub
dec
dec
adc
xchg
and
in
clc
test
and
test
cmc
dec
xchg
mov
mov
fabs
test
fisttpll
std
push
mov
addr16
lods
adc
inc
rcl
and
imul
dec
or
sbb
add
sarl
data16
xor
imul
loopne
lea
cltd
sbb
push
ficoml
int3
daa
fcoml
jbe
adc
hlt
lret
and
xchg
add
or
dec
adc
push
clc
xor
dec
sub
push
lods
push
fwait
mov
mov
xchg
mov
jle
jg
or
icebp
cmpsl
lock
scas
arpl
adc
and
int
ljmp
and
fldt
jno
xchg
sti
fstpt
shlb
lock
mov
scas
pop
push
cmpsb
pop
not
pop
cmp
shlb
stos
mov
adc
and
inc
call
addb
out
mov
aad
mov
fmull
push
sbb
jae
inc
mov
lret
addr16
fs
pop
in
sub
pop
mov
push
mov
icebp
and
shll
adc
pop
arpl
test
dec
mov
inc
movsl
imul
mov
and
ljmp
aad
pop
push
mov
jnp
jmp
or
fisttpl
pop
fsubl
xchg
ss
sub
mov
int
mov
mov
enter
ljmp
pop
cmpsl
mov
cwtl
lret
fists
lret
add
mov
mov
inc
dec
arpl
mov
fistl
sahf
add
adc
movl
addb
lock
loopne
jp
fwait
push
cmpsb
shll
mov
jno
addr16
push
cmp
lock
testb
xor
mov
rcl
gs
mov
jmp
cmp
or
mov
movsl
jne
and
sub
dec
jo
scas
dec
neg
sub
ret
test
or
enter
shlb
add
imulb
cli
call
mov
cmp
movsb
and
sbb
out
adcb
out
xchg
adc
roll
xor
sub
adc
aas
jg
xor
lret
sub
in
fsubs
ret
jns
jge
ja
arpl
ljmp
cwtl
mov
stos
clc
test
scas
mov
shlb
dec
or
mov
mov
ja
jmp
js
fwait
sub
pop
rolb
sub
out
jp
clc
ret
flds
std
sbb
in
mov
push
into
adc
jne
scas
cs
sbb
loope
popa
xchg
test
std
daa
push
xchg
loopne
cwtl
fwait
jnp
and
push
out
xchg
inc
push
mov
jmp
int
mov
out
mov
or
sub
mov
xchg
in
push
cmp
insb
pop
mov
imul
insl
cmp
shll
mov
mov
enter
dec
xchg
cmc
mov
adc
xor
ss
dec
jle
cmpsl
pop
pop
fistpl
lcall
push
lcall
mov
out
cmp
loop
xchg
into
pop
cmp
xchg
xchg
lret
fsubl
addb
addr16
add
aam
or
movsb
xchg
pop
sti
mov
aad
jge
dec
sahf
mov
dec
aas
subb
gs
dec
lods
aad
das
loope
es
fcompl
cmp
dec
dec
and
mov
push
insb
push
data16
and
inc
cmp
mov
sub
dec
shl
pop
rorb
xor
divb
pop
frstor
xor
mov
mov
addr16
xchg
mov
mov
cld
orl
movl
rcrb
sbb
fs
add
in
scas
sti
gs
orl
xchg
xchg
mov
jl
lock
sub
fwait
xor
and
adc
add
sub
mov
dec
add
loope
imul
adc
add
sbb
data16
mov
mov
sbb
mov
dec
jle
mov
std
icebp
cmp
call
lcall
imul
ja
cwtl
sub
ds
or
les
jno
adcb
mov
les
icebp
lret
push
mov
icebp
push
fcmovu
push
je
std
cwtl
dec
mov
or
rorb
mov
pmulhuw
fisttpll
in
jmp
pushf
jmp
mov
lea
hlt
and
outsb
sahf
or
scas
dec
and
jp
jae
dec
lret
jg
xchg
aad
in
adc
xor
mov
sub
jmp
jae
pop
xchg
xchg
fidivl
rolb
jbe
bound
pop
cwtl
loopne
outsl
or
push
push
mov
setno
shl
or
jle
add
enter
std
jmp
push
sbb
sbbb
js
fists
sbb
mov
outsl
mov
flds
inc
inc
pop
inc
sbbl
inc
xchg
inc
cmp
mov
jne
push
js
mov
pop
push
lret
sahf
ds
mov
cmp
jle
mov
rcll
popa
dec
xchg
sub
mov
dec
cli
mov
dec
dec
scas
in
out
push
stos
lods
scas
stc
lret
push
rol
push
loopne
push
fcmovnu
jae
cmp
ret
adc
pop
in
int3
ja
push
add
pusha
sti
cli
sub
jne
pop
push
leave
pop
xor
loop
dec
mov
ss
push
cmp
outsl
in
inc
sbb
mov
movsl
rclb
mov
pop
add
mov
jecxz
push
pop
adc
jno
push
or
mov
les
push
lods
sti
jecxz
lods
sahf
mov
dec
xchg
mov
jle
sbb
push
cmpsl
lret
enter
mov
xor
test
cltd
inc
or
mov
dec
rcll
testl
cmc
test
lret
inc
jno
xor
int3
pop
out
or
xchg
or
push
add
dec
jl
add
jne
cmp
addl
rolb
aam
or
btc
std
mov
lret
inc
mov
adc
mov
leave
jo
pop
sbb
adc
into
dec
push
xlat
xor
bound
in
pushf
cmp
and
lods
and
jbe
lret
mov
pusha
lahf
jecxz
xchg
sub
adc
fisubrl
and
push
sub
call
add
inc
mov
cmpsl
and
bound
push
shlb
in
jbe
out
mov
mov
pop
ds
in
mov
ljmp
and
or
push
pushf
bound
sbb
or
mov
jno
call
pop
faddl
jne
daa
jnp
mov
sub
sarl
mov
clc
test
je
nop
push
jbe
leave
xchg
jge
lret
addr16
xchg
andb
pop
js
push
jg
mov
cmpl
push
sbb
mov
jl
cmpsl
adc
sub
hlt
xor
jg
out
inc
js
add
dec
divl
jae
add
and
lcall
pop
cmp
rorl
sti
sbb
les
mov
dec
xchg
pop
test
fsub
and
stc
lock
out
nop
shlb
inc
into
or
sub
or
push
orl
cld
pusha
mov
rcrl
scas
and
fwait
inc
pushf
gs
jnp
sub
rclb
out
jp
shlb
jnp
lret
sti
aas
sub
mov
aad
xchg
add
int3
inc
enter
mov
xchg
xchg
cli
or
and
sbb
xchg
mov
mov
mov
mov
lahf
and
cmpsb
sbb
cwtl
adc
mov
sub
xor
jecxz
clc
push
pop
ja
and
out
fs
push
push
test
adc
pop
into
mov
adc
mov
sub
mov
jbe
pop
jge
and
fildll
sub
in
inc
outsb
js
aas
add
cs
outsb
mov
bnd
clc
insb
hlt
inc
pop
inc
sahf
mov
mov
stos
cmpl
cmp
xchg
jle
ljmp
decl
movsl
test
or
sbb
push
aaa
sahf
fmuls
add
ja
xchg
mov
mov
iret
imul
lea
inc
xlat
mov
rcrl
push
xchg
dec
addr16
int3
ljmp
lods
push
dec
inc
xlat
mov
sub
jbe
imul
jno
int
shrb
xchg
mov
mov
xor
sbb
rorl
push
int
jbe
aad
and
inc
sbb
pop
mov
mov
iret
lods
add
in
inc
imul
dec
lret
mov
cs
mov
inc
mov
cltd
mov
in
nop
mov
mov
xchg
mov
fs
mov
sbb
mov
mov
stos
fisubrl
sub
cltd
ret
xor
push
stos
dec
dec
scas
repnz
adc
push
pop
add
xchg
rorb
jle
sub
out
or
fwait
and
xor
ficoms
sbb
cmp
sbb
push
cmc
and
pop
or
sbb
mov
outsb
xchg
sub
push
int
pop
jns
push
xor
sub
out
xchg
sti
xlat
inc
int3
dec
lcall
or
push
mov
out
mov
adc
pushl
adc
iret
xchg
mov
add
inc
fstps
hlt
push
xchg
xchg
cltd
shll
mov
pop
push
xor
xchg
gs
dec
test
sub
xor
jae
and
icebp
mov
cli
dec
shll
jl
stos
jp
pusha
out
pop
adc
js
cmp
mov
jne
cmp
add
scas
bound
or
inc
mov
xchg
pop
and
lea
int
es
mov
pusha
test
and
dec
adc
popf
dec
inc
popf
popa
or
daa
cmp
add
aaa
push
inc
out
mov
dec
lcall
cwtl
das
push
mov
sbb
xchg
in
inc
popa
mov
cmp
push
xchg
jno
sub
or
cld
mov
imul
ljmp
mov
daa
adc
xchg
push
mov
dec
push
lea
movsl
and
fnsave
sub
and
ret
dec
adc
loopne
push
inc
neg
sub
divl
mov
mov
clc
xchg
add
xor
repz
test
mov
lods
adc
clc
or
xor
sbb
sub
cmp
popf
lods
mov
cmp
sbb
and
pusha
jns
cmp
or
jecxz
lret
cld
mov
or
rcl
adc
mov
out
sub
add
out
dec
pop
pushf
or
bound
fs
pop
outsb
aam
lret
cmpsb
mov
jno
mov
or
icebp
inc
mov
out
fdivrp
std
push
adc
daa
pop
or
or
out
jmp
js
inc
xchg
lcall
negl
mov
outsb
mov
hlt
cmp
in
mov
scas
cltd
mov
in
jae
dec
dec
imull
xor
fcoml
insb
push
xorl
inc
inc
les
or
xchg
xchg
fldl
in
stos
sub
mov
sahf
adc
outsl
xchg
mov
push
xchg
pcmpeqd
into
cld
cmc
movb
gs
or
sbb
popa
les
fs
int
adc
cltd
sti
dec
out
dec
inc
or
or
mov
sub
inc
outsl
mov
loope
leave
mov
les
rcll
cmp
push
shl
adc
push
mov
push
stos
or
sub
pop
lahf
aad
outsb
or
ret
fimuls
xor
push
sbb
nop
fimuls
sbb
add
cmp
test
dec
pop
out
addr16
sbb
lea
and
xchg
das
out
aam
leave
adc
lea
xor
inc
js
lcall
or
mov
or
repz
int3
lret
xchg
fdivrl
inc
add
test
cmp
cmpsl
mov
test
jl
jp
cmp
or
inc
std
out
ret
adc
sbb
mov
or
fstps
ret
add
add
add
mov
jmp
lds
jne
cltd
adc
cmc
imul
lock
cwtl
inc
das
add
out
int
sahf
push
dec
dec
dec
pop
aam
repz
sbb
clc
or
repz
or
sub
mov
clc
jns
ja
flds
fimuls
sub
xchg
je
stc
loop
dec
xchg
add
ret
adc
add
inc
ss
cld
jno
ror
adc
mov
leave
mov
cmp
xchg
dec
aam
dec
shl
clc
or
lahf
ret
or
mov
adc
ja
fidivrs
aas
jmp
imul
mov
leave
enter
push
aad
push
adc
cwtl
and
mov
dec
jne
cmp
xchg
ljmp
ja
mov
mov
and
dec
stc
xor
incl
jo
push
jae
dec
add
jmp
and
pop
lds
pop
mov
es
mov
ljmp
in
cli
jb
popf
sti
lds
pop
adc
dec
jns
cmpb
or
mov
outsb
xor
lods
stos
cmpsb
mov
add
cmp
inc
aam
das
faddl
int3
nop
or
ljmp
pop
pusha
repz
mov
mov
mov
adc
stc
pusha
rcll
dec
mov
or
inc
mov
push
mov
mov
das
mov
mov
outsl
imul
sbb
iret
push
mov
cmp
mov
jnp
repnz
shlb
dec
les
push
outsl
mov
jle
cmp
push
mov
pop
movsl
push
inc
xchg
call
roll
xor
mov
mov
cltd
jnp
xchg
xchg
je
push
push
jo
int3
ja
daa
jne
mov
and
xor
fisttpll
subb
pop
adc
xchg
ds
jle
in
or
sub
mov
mov
hlt
mov
lahf
pop
jno
jne
xor
xor
push
int3
lea
cs
mov
mov
les
aaa
mov
fists
cmp
add
repz
push
adc
sbb
push
arpl
jne
inc
mov
xor
jns
pop
aam
inc
fisubl
jmp
iret
push
call
mov
ljmp
aas
outsl
rcl
mov
loope,pn
sbb
lahf
lret
orb
add
add
pop
aaa
stc
mov
pop
xor
lret
sbb
mov
inc
lret
jne
pop
insl
jp
movsb
ds
pop
mov
inc
fs
pop
test
jb
cmpsb
shll
fstl
testl
sbb
add
mov
leave
iretw
mov
ss
not
test
adc
std
and
mov
pop
mov
adc
lods
or
hlt
insl
adc
or
test
gs
jp
xlat
pop
into
mov
mov
cli
xor
cmp
movsb
jmp
in
mov
xchg
es
lods
popf
fildll
add
mov
and
and
mov
cltd
sub
jge
mov
jae
ret
pushf
inc
mov
fldl
cwtl
js
lds
ret
mov
and
hlt
andb
aaa
sbb
data16
push
sti
into
in
mov
pop
mov
or
cmp
inc
mov
loop
push
data16
mov
adc
ret
popf
fidivrs
outsl
add
scas
xor
lea
sahf
out
adc
push
lret
div
mov
out
lret
data16
popf
and
xchg
test
mov
pop
lods
lcall
and
push
pop
in
adc
aad
or
pop
insl
jmp
fiaddl
lods
lahf
sub
aaa
mov
loop
jnp
test
in
xchg
ljmp
xchg
sbb
aad
dec
dec
popf
sbb
sti
jbe
pop
inc
mov
dec
jnp
lods
cmc
test
push
mov
fxch
pop
imul
aam
dec
xchg
mov
mov
add
mov
es
mov
jns
enter
int
pop
inc
push
addl
xchg
xchg
xor
in
and
sbb
pop
pushf
jg
aaa
pop
jecxz
cmp
stos
pop
ljmp
add
or
add
pop
mov
jb
mov
sub
aas
dec
pop
shrl
loope
sub
scas
popa
andb
mov
cmpsb
and
pop
xchg
push
in
push
pop
jno
mov
dec
mov
out
xor
dec
add
pop
js
fidivl
imul
adc
or
test
popa
rcr
jg
fcmovu
jae
push
loope
mov
push
arpl
hlt
in
loop
outsl
and
sub
mov
lock
mov
roll
xor
xchg
mov
js
in
dec
les
aad
stos
lods
jecxz
mov
mov
popl
fdivr
dec
mov
loop
aam
imul
adc
sub
mov
pop
or
inc
cmp
adc
push
mov
push
xor
dec
in
nop
sub
insl
test
adc
mov
cwtl
fdiv
cmpsl
out
inc
mov
mov
rcll
push
jae
xchg
int3
call
or
pop
std
xor
lods
and
fsubs
push
and
pop
fs
aad
stos
lock
aam
cs
mov
stos
clc
pop
dec
cmpsl
data16
test
sbb
loop
mov
xlat
mov
fsubs
daa
pop
dec
dec
pushf
jp
mov
pop
jo
push
xchg
stos
aas
or
jge
mov
fstpl
gs
sbb
xor
xor
icebp
inc
in
rcll
mov
nop
repz
add
xchg
repnz
xchg
dec
mov
out
popa
repnz
inc
ret
or
fsubs
lods
sub
lahf
mov
fnsave
sar
out
lret
and
out
aad
dec
jmp
jo
xchg
xlat
mov
mov
mov
nop
stos
push
out
lret
push
push
inc
sbb
nop
cmp
aaa
stos
inc
xor
out
cmp
pop
movsl
add
dec
popa
das
xchg
ds
xchg
imul
out
inc
xor
in
sbbl
shlb
push
cmp
add
mov
cmc
push
ja
aas
pop
mov
adc
jg
aam
outsl
mov
jb
dec
je
out
gs
jae
into
sbb
dec
cs
das
mov
test
dec
push
in
mov
rolb
mov
pushf
sbb
push
xchg
fcom
jle
in
rorb
cmp
addr16
xlat
adc
cs
xchg
popa
in
inc
in
adc
mov
cmp
cmp
pop
sbb
addr16
cwtl
or
or
jle
adc
mov
in
repnz
xchg
cmp
pop
inc
jo
decl
add
jbe
fcomi
mov
jb
icebp
adc
push
cltd
xor
mov
mov
sti
loop
loope
loopne
cmp
xor
xchg
mov
stos
jno
out
pop
enter
mov
into
cmovs
out
pop
shll
out
in
xor
aas
fwait
loop
pop
repnz
xorl
jo
ret
xchg
xchg
xchg
cld
out
pop
sbb
lahf
push
iret
popf
lea
les
call
je
pusha
in
and
mov
fwait
mov
fld
ljmp
mov
adc
mov
mov
outsb
mov
jns
cltd
xchg
pushf
popf
lods
mov
in
jae
testb
xor
lods
xchg
je
xchg
xor
push
cs
mov
pusha
loopne
inc
mov
add
add
adc
jbe
sub
mov
adc
xor
or
loopne
push
push
ljmp
loopne
inc
daa
sub
add
dec
push
fcoml
mov
xchg
pop
sbb
cmp
outsl
jns
shr
dec
test
jne
dec
mov
mov
jecxz
incb
mov
cmp
jae
lret
mov
or
inc
sahf
ficomps
outsb
push
enter
push
mov
fistpll
inc
mov
mov
fdivr
xor
dec
pop
pop
add
dec
mov
jb
outsl
rorl
repnz
sbb
and
cmp
xchg
inc
and
mov
inc
cmpsb
mov
cmp
decl
test
lret
outsb
ljmp
jmp
jno
jo
pop
scas
pop
ret
jae
inc
xor
mov
iret
cmp
fmull
addr16
cmc
inc
lret
inc
mov
shrb
push
imull
jb
sub
jno
in
clc
mul
xchg
add
lock
sti
adc
jg
in
pop
or
pusha
jns
das
mov
enter
fucom
push
cwtl
pop
sbb
sbb
loopne
and
mov
mov
popl
inc
inc
sub
inc
lea
scas
push
or
cmp
lods
mov
pop
insl
aas
sbb
cmpsb
dec
mov
jp
or
jne
sbb
dec
rcrl
lret
adc
pop
or
mov
adc
sub
sub
gs
sti
mov
les
movsb
jle
mov
scas
cmpsl
mov
movsb
adc
cltd
adc
add
xchg
faddl
in
ret
out
cmc
push
lcall
lcall
sbb
cs
or
dec
add
test
jnp
sbb
aas
jbe
jnp
shl
inc
dec
dec
xor
inc
icebp
les
xlat
xchg
sbb
mov
dec
pushf
in
push
mov
push
in
mov
inc
mov
scas
push
sbb
mov
cwtl
push
mov
les
mov
push
ja
lds
cmpsb
mov
xchg
jb
hlt
push
dec
jae
jle
test
hlt
cmp
push
jo
fcmovb
ds
pop
mov
into
in
xchg
jmp
sub
and
inc
jge
adc
and
sbb
test
jne
imul
mov
mov
and
jge
scas
xor
mov
mov
and
jmp
jnp
or
mov
xchg
inc
mov
mov
cld
push
cmpl
andb
aad
mov
mov
std
jne
cmp
xchg
cmp
inc
mov
sti
fbld
decb
ror
pop
ret
ds
adc
lods
stos
imul
inc
in
xchg
cmp
xchg
fsubs
jecxz
into
push
arpl
cmp
pop
lods
pop
mov
nop
in
es
ret
or
insb
cmp
push
sarl
scas
add
and
mov
adc
enter
cmpb
cmp
movsl
and
sbb
inc
inc
mov
mov
test
jmp
push
stos
in
pushf
mov
xchg
out
mov
ret
and
push
dec
xchg
out
or
leave
or
lahf
stos
fidivs
rcrl
dec
das
sti
mov
xchg
push
rcll
xchg
cwtl
out
jne
ret
mov
popw
and
loop
hlt
test
lcall
insl
ja
fwait
int3
aas
mov
xchg
cmp
or
stos
test
pop
lret
cmp
push
ret
jbe
mov
adc
pop
add
je
dec
push
jge
push
ret
xchg
in
popa
in
andl
dec
add
adc
mov
adc
mov
mov
cltd
scas
dec
push
js
jns
fidivrs
pop
ret
and
pop
or
inc
push
stc
in
xchg
pop
nop
nop
dec
sbb
insl
sub
data16
adc
les
js
sar
pop
xor
imul
pop
movsl
movswl
popf
push
shrl
push
dec
pop
insl
dec
daa
jmp
div
sub
dec
hlt
sbb
pushf
in
sub
jecxz
mov
leave
mov
and
scas
notb
jno
mov
fucomp
lcall
mov
inc
sub
dec
add
xchg
and
jbe
lock
jmp
push
cltd
sbb
ss
test
fstpl
ret
mov
mov
push
enter
cmpb
cmpsb
xor
jb
ss
ret
in
mov
and
mov
and
stos
arpl
in
in
sub
rcl
mov
push
in
mov
adcb
lret
adc
mov
mov
popa
push
cmp
cld
push
mov
pop
dec
inc
loopne
jae
mov
mov
js
push
loop
scas
fs
movsl
jns
rclb
jp
sbb
and
pop
loope
cmpsb
mov
jo
dec
mov
mov
or
scas
repnz
js
xchg
push
lahf
popf
mov
popa
jne
jo
popf
in
int
fmull
mov
fsub
xchg
push
ja
xor
repnz
sarl
inc
hlt
jbe
or
and
push
stos
sbb
cmp
shrb
bound
xchg
lcall
mov
aam
pop
mov
ja
xchg
addr16
pop
inc
adc
out
sbb
xchg
js
jbe
movsb
jmp
mov
lods
push
xchg
aas
imul
sub
lds
icebp
in
xor
rcr
xchg
mov
adc
jb
xchg
int3
fsts
mov
or
out
push
jmp
push
dec
xchg
iret
mov
mov
out
enter
mov
sbb
nop
mov
icebp
xchg
push
repnz
jmp
fisubrl
mov
push
cmpl
cmp
dec
jp
lds
mov
js
ss
mov
cmp
xlat
sbb
push
jae
or
dec
sti
push
scas
cmp
outsb
insl
out
push
imul
jno
inc
stc
mul
loope
adc
push
inc
jge
popf
hlt
push
add
loop
adc
or
mov
jmp
xchg
iret
fidivs
out
frstor
pop
inc
pusha
outsl
out
and
and
mov
in
call
push
gs
xchg
push
inc
fs
in
sbb
fisttpl
sbb
nop
mov
mov
dec
sbb
jbe
push
fmuls
inc
in
mov
mov
call
lcall
dec
add
iret
dec
filds
add
cli
or
sbb
arpl
dec
ret
inc
insl
clc
hlt
movsb
pop
int3
into
xchg
push
xchg
pop
pop
fnstcw
and
in
std
adc
outsb
mov
mov
lods
xchg
fstpt
mov
add
lods
sbb
xor
test
int3
js
dec
dec
jmp
hlt
fisttpl
push
les
mov
xchg
jae
mov
in
inc
add
out
sbb
int
loope
insb
lea
xchg
mov
and
je
aam
rorl
jns
push
jge
or
add
xchg
fs
call
sbb
adc
push
movmskps
scas
jne
in
sbb
dec
outsb
inc
stos
popf
xchg
inc
insb
xlat
imul
dec
push
cmpsb
add
mov
cmp
xorl
jb
fs
lret
xor
decl
or
or
cmp
adc
data16
inc
pop
sbb
sub
push
insb
test
inc
jp
jl
mul
lock
into
mov
popf
mov
daa
lcall
icebp
jae
js
jne
pop
lea
testl
cmp
test
ret
out
js
mov
inc
mov
jae
inc
sub
andb
and
enter
or
adc
pop
loop
dec
mov
test
dec
in
cmp
cltd
adc
cvtdq2ps
xchg
sub
scas
rolb
xchg
cmpb
pop
adc
test
push
jmp
jl
aaa
mov
movsl
popf
stc
add
test
into
or
adc
inc
and
mov
andl
hlt
insb
sub
mov
gs
lock
rorb
addr16
fisubs
jecxz
xor
and
scas
popa
lea
sar
dec
cmc
lds
insb
lret
or
iret
scas
js
das
insl
mov
push
adc
mov
int
or
jg
stos
dec
loope
mov
add
pop
cmp
push
leave
push
test
adc
mov
cmp
pop
jno
in
repz
clc
mov
into
sbb
cmp
and
testb
mov
mov
lods
xchg
mov
call
mov
movsl
fs
inc
xor
leave
lods
dec
filds
pop
fdivl
mov
aam
repz
mov
fidivrl
or
xor
dec
pop
xchg
ljmp
mov
outsb
leave
push
ret
out
sub
in
cwtl
mov
mov
mov
dec
xor
mov
test
xlat
inc
jmp
adc
sahf
add
cmp
scas
test
sbb
aad
or
idivb
out
sahf
mov
jl
loope
loope
insl
dec
hlt
cmc
pushf
jecxz
pusha
or
fwait
insb
std
pop
cmp
sub
push
rcll
dec
xchg
stos
mov
fbstp
fiadds
ljmp
xor
adc
ficompl
jnp
inc
mov
ficompl
pop
in
pop
sub
cmp
les
sbb
pushf
cs
push
pop
cmpb
cltd
jge
std
cld
loop
or
jbe
sub
dec
call
insb
out
jge
pop
pop
aas
inc
test
push
jl
mov
jnp
mov
insl
mov
movsl
mov
mov
lret
jo
cli
add
sub
sub
int3
sbb
lea
lods
adc
cmp
idivl
popf
dec
cmp
lods
sub
mov
test
fidivl
xchg
push
lret
mov
jge
mov
dec
loope
push
clc
bound
into
js
loope
enter
addl
jmp
add
xchg
and
xchg
out
pop
or
jg
jle
fistps
icebp
in
ja
xchg
inc
pop
xchg
mov
ret
fidivrs
aam
gs
mov
aas
cltd
push
push
fwait
adc
lret
ret
aam
cltd
call
xchg
adc
xor
arpl
jl,pt
fdiv
dec
xchg
into
mov
ja
dec
inc
out
jb
mov
pop
sbb
mov
mov
xchg
insb
pushf
shrl
jmp
push
mov
loope
aad
jns
filds
les
loopne
int
pop
pop
sub
js
push
loop
and
lahf
outsl
jp
mov
out
iret
add
inc
add
and
stos
ja
cmp
or
mov
cmp
cmpsb
xor
sbb
push
pop
dec
je
xchg
int3
sbb
sahf
aas
outsl
mov
jne
inc
cmpsb
sub
outsb
jo
push
out
test
sti
clc
and
mov
shr
stc
adc
pop
std
lcall
and
jno
or
push
sti
out
adc
adc
or
xlat
clc
sbb
mov
cltd
loopne
fldenv
push
inc
pop
or
shl
cmc
shrl
xchg
out
leave
in
popa
lret
std
cmp
xchg
rcl
gs
jae
dec
out
pop
push
cmp
dec
fs
push
cmp
ja
jb
mov
dec
mov
aam
xor
in
pop
cld
in
push
mov
push
out
add
mov
sbb
jno
dec
aas
fsubrl
xor
mov
in
mov
ja
sub
repz
ja
jae
push
inc
das
jb
sub
sub
jmp
xchg
mov
mov
jmp
stos
sbbl
push
stos
xlat
dec
mov
pop
sbb
ret
cmp
xchg
adc
or
shl
jbe
mulb
adcl
lret
mov
mov
adc
adc
into
add
cmp
and
mov
or
movsb
jp
clc
push
bound
adc
mov
rcl
test
dec
cs
stos
pushf
push
jecxz
fstp
rorl
adc
jno
lret
jns
es
cmpsb
sbb
mov
cltd
mov
loope
dec
push
fnsave
mov
scas
inc
xchg
mov
clc
in
fiaddl
jns
in
cltd
add
mov
outsb
xchg
icebp
jno
mov
pop
mov
xchg
lret
adc
insb
push
lea
cmp
shll
pop
and
add
push
icebp
cmp
in
xchg
xor
inc
mov
cwtl
ret
out
notl
sub
dec
mov
dec
xchg
cld
cmpsl
jns
je
call
mov
out
jmp
mov
movsb
cmpl
cmpsb
imul
mov
lds
in
inc
mov
xchg
adc
lcall
dec
outsl
test
cltd
std
aad
ror
in
pushf
xchg
call
hlt
xor
or
je
shl
jb
aam
pop
mov
push
push
cltd
inc
outsb
sbb
sbb
shl
ret
mov
pop
pop
dec
fldt
adc
insl
sti
in
pop
ja
hlt
add
bound
mull
movsb
inc
stc
push
ljmp
sbb
xor
cmp
push
xchg
popa
push
fidivl
push
sar
imul
nop
inc
mov
xchg
popa
cmpsb
cmp
xchg
daa
popa
out
cmpsl
in
xchg
or
loope
fisubrs
push
cmpsl
cmpsb
mov
or
scas
insl
or
les
mull
in
or
xchg
and
cli
and
add
cltd
sti
in
ss
stos
pop
test
adc
pusha
fs
inc
mov
sbb
jno
cmpsl
cmp
xorb
lret
adc
xchg
mov
bound
ret
push
test
pop
sub
pusha
sbb
js
mov
jl
xor
push
ret
repz
out
bound
ja
add
pop
jmp
jns
push
loope
and
bound
push
nop
sbb
mov
mov
dec
adc
cli
inc
lcall
out
adc
jle
add
aaa
push
jb
xchg
std
xchg
jae
in
or
incb
imul
mov
dec
incl
or
subb
les
es
popf
rorl
loope
loope
xchg
mov
xor
jl
sbb
xlat
out
out
jne
cmp
add
and
scas
xor
lods
mov
clc
sub
and
int
xor
pop
es
clc
mov
adcl
mov
or
in
adc
jae
jmp
cmp
jmp
hlt
mov
xchg
xchg
cs
rolb
xor
lock
xchg
int3
xchg
sub
ds
jbe
and
add
lds
jnp
sbb
fnstenv
inc
addr16
jne
or
cwtl
sub
push
in
add
addr16
xor
cmp
sub
push
sbb
mov
push
xor
aam
icebp
cmc
or
jecxz
loop
mov
inc
ret
adc
int
fnstsw
rcll
out
pop
push
pusha
or
bound
aas
dec
cltd
sbb
dec
cmp
push
test
in
jae
or
inc
jns
in
jg
jecxz
add
push
pop
push
imul
dec
inc
push
mov
sbb
ret
and
sbb
adc
shr
add
push
nop
mov
and
cmpl
outsb
sti
popa
lds
imul
in
outsl
pop
cmp
fisttpl
jp
cmp
mov
fidivs
add
xor
jb
cmp
stc
adc
or
ss
xchg
cli
fstpl
jmp
pop
nop
push
xor
mov
cmp
mov
jp
in
sbb
adc
cli
out
mov
int
and
cmp
sub
jnp
xchg
sub
or
pop
xchg
stc
jge
adc
pop
imul
ljmp
push
clc
xor
ret
in
pop
stos
je
jbe
sbb
jb
cmc
add
inc
aaa
and
aaa
je
add
jnp
call
lods
lret
movsl
dec
arpl
out
pusha
mov
inc
sahf
mov
dec
mov
pop
icebp
adc
scas
pop
outsb
js
xchg
not
shrl
cld
xor
in
push
ds
and
push
shl
push
lret
inc
jno
fxch
mov
sbb
subl
or
inc
push
test
add
inc
xchg
es
test
notb
bound
cwtl
jecxz
shl
xorl
sub
jb
in
push
xchg
inc
adc
cmp
pop
lea
iret
outsl
xchg
dec
or
cld
stos
scas
lcall
leave
ja
xchg
push
ss
in
jo
fcoms
jne
fstpt
push
ljmp
jnp
push
jmp
in
je
fwait
arpl
dec
xchg
nop
xor
ljmp
movsl
rclb
cmc
test
or
dec
xor
xor
mov
mov
insb
ds
mov
mov
imul
test
mov
flds
adcl
icebp
daa
adc
aas
lock
and
mov
inc
pop
xor
xchg
jno
aas
das
cmp
and
mov
sub
arpl
or
dec
pop
mov
jp
std
clc
jne
repnz
scas
ljmp
addr16
xlat
dec
fidivrs
mov
push
mov
sub
cmpb
fdivs
out
xor
popf
pop
fcompl
sbb
lock
cmp
arpl
or
jmp
test
movsl
or
ret
mov
shlb
repnz
mov
inc
lahf
push
mov
push
xchg
jmp
cmp
leave
sub
push
pop
or
in
rcrl
mov
push
sub
outsb
adc
push
adcb
dec
les
mov
stc
mov
mov
inc
lret
lret
test
call
push
imul
xchg
xor
outsl
sti
jb
sbb
mov
mov
aad
loop
popa
sbb
push
cmpsb
sub
ja
push
loope
inc
mov
fidivs
jecxz
popf
dec
or
fcomi
or
mov
xchg
cmp
sub
in
cmp
scas
cmp
xchg
lcall
jns
sub
lret
pop
jl
clc
cmpl
mov
xlat
xchg
jecxz
popf
pop
movsb
xor
sbb
add
or
push
jg
in
das
sub
push
pusha
jle
lock
call
movsl
subl
in
xchg
test
mov
stos
sub
add
gs
je
aas
insb
std
pop
sub
repz
fwait
stos
dec
add
and
fwait
add
sub
cmp
in
fdivrs
daa
push
stos
fildl
jmp
xchg
aaa
push
mov
jmp
mov
shll
icebp
lahf
out
clc
sti
ss
mov
popf
xor
insb
adc
aaa
mov
loope
ficoml
fidivrl
test
lods
xchg
outsl
push
mov
push
fdivl
lea
nop
jbe
or
sbb
xchg
out
mov
movsl
mov
leave
and
fs
cmpsl
daa
xchg
mov
sbbl
fistpll
sub
or
leave
orb
insl
jp
out
push
xchg
notl
in
jg
incl
push
test
loopne
cmp
clc
adc
loopne
les
insl
je
fnstcw
loopne
sbb
aam
xor
xor
insl
shl
mov
cmp
sbb
mov
mov
stos
push
data16
ret
ret
rolb
xchg
jnp
mov
adc
push
push
adc
imul
inc
mov
pop
cmp
jns
stos
jl
lret
xchg
test
jl
push
mov
cwtl
cmpsl
lret
push
jns
pusha
push
dec
cmp
xor
mov
pop
popa
mov
or
xor
adc
movsb
stc
test
filds
cmp
fnstsw
sbb
sbb
push
dec
mov
mov
sbb
aas
xor
adc
stos
sbb
xchg
mov
lret
push
incl
lret
ljmp
mov
lods
ret
pop
push
inc
popf
mov
cli
decb
hlt
push
pop
into
in
pushf
adc
std
test
add
pushf
js
sbb
mov
cmpsb
mov
loope
mov
lahf
out
jge
sub
mov
pop
xchg
cmp
cmpsl
mov
mov
inc
inc
adc
test
pop
fcom
mov
sub
sub
outsb
mov
push
inc
mov
jnp
ds
std
inc
mov
add
cmp
inc
xchg
sub
outsl
repnz
cmpsb
js
adc
xor
push
sub
mov
rcpps
mov
xchg
cli
call
fbld
pop
jecxz
fs
pop
add
cmp
or
sbb
lahf
fidivs
jp
rol
jae
jg
call
jle
fidivl
test
movsl
adc
sub
sub
xchg
sub
mov
jno
dec
cld
mov
fstpt
fsubl
loopne
daa
test
mov
sbb
pop
push
test
imul
jl
dec
mov
outsb
xor
dec
je
cli
ret
push
out
bnd
rorl
loopne
xor
fwait
dec
xchg
and
fstl
jne
cmpsl
xor
xchg
les
pop
das
xchg
xor
popa
adc
adc
xchg
xchg
int
push
jl
mov
movsb
xchg
mov
cmp
jae
xor
movsb
loopne
mov
lcall
js
outsl
int3
xor
int3
mov
mov
scas
adc
xor
arpl
sub
pushf
push
sbb
xchg
push
pop
jle
xchg
gs
mov
cli
xchg
addr16
sbb
mov
in
sub
sbb
icebp
ds
jmp
mov
inc
cmovne
sbb
push
addr16
lods
sbb
lea
cmp
adc
popf
mov
xor
dec
jbe
cmpsl
mov
mov
cmpsb
sub
insl
jmp
jb
sub
clc
dec
mov
push
pushf
lea
inc
repz
or
enter
dec
pop
mov
dec
add
pop
scas
js
mov
bound
ljmp
ret
test
xor
and
jecxz
lcall
sarb
aam
nop
adc
push
and
pop
hlt
jg
xchg
xor
shlb
push
mov
jno
inc
sub
std
pop
jl
ja
jb
dec
push
daa
stos
mov
sbbl
imul
icebp
movsl
push
xchg
mov
xchg
sahf
les
je
pop
addl
jae
mov
out
std
shrl
pop
dec
pop
cmp
das
sub
and
add
jp
inc
push
xchg
gs
xchg
shll
in
and
push
mov
mov
scas
and
fbld
ja
sub
mov
jno
mov
or
and
insb
test
or
adc
pop
cli
inc
sbb
shll
mov
pop
push
cmc
push
std
xor
in
clc
jns
fcomip
sub
cs
in
cmp
ds
pop
sbb
jbe
lods
cmp
add
je
adc
xor
popa
ja
sbb
in
gs
movsl
cltd
shll
lods
inc
lock
mov
movsl
mov
mov
mov
loopne
mov
clc
xor
insb
mov
add
pop
fs
adc
push
mov
sbb
sahf
jg
scas
add
sub
lock
ret
data16
in
push
or
sub
cmp
and
jge
mov
in
inc
sub
fimull
push
cmpsb
xchg
notb
adc
aam
test
mov
ret
das
sbb
push
jge
mov
leave
mov
aas
adc
out
movb
sti
inc
ja
lcall
mov
test
aad
adc
cmp
inc
dec
or
cwtl
inc
sbb
gs
fidivrl
leave
js
push
andl
jecxz
insl
xchg
lahf
data16
pusha
dec
lods
xor
jae
dec
pop
dec
fidivl
dec
mov
fmuls
lret
sarb
pop
loop
je
or
lods
stos
jecxz
sahf
inc
stos
pop
popf
mov
xchg
mov
sub
stos
mov
lea
gs
cmp
in
mov
push
sbb
cmp
inc
into
ficoml
push
xchg
add
adc
cmpsb
mov
dec
loopne
mov
lea
cmpsb
or
repnz
cmpsb
jbe
lock
mov
hlt
mov
mov
inc
xchg
loop
push
mov
fistpl
sub
push
pusha
imul
sbb
jnp
inc
mov
adc
pop
and
stc
imul
dec
es
inc
out
nop
fs
inc
add
cmp
mov
movsb
mov
pop
cmp
je
int
sbb
or
dec
insl
cwtl
shrl
xor
push
int
and
frstor
out
fwait
xorb
fstl
pushf
stos
sbb
cmpsb
scas
jns
call
pop
jg
fs
pop
or
ds
pop
mov
cmp
add
dec
or
das
lahf
or
pushf
dec
fcompl
jg
insb
outsl
imul
mov
jbe
inc
xor
out
fidivrs
sbb
jbe
and
xchg
bound
sahf
es
sbb
lods
or
pop
adc
subl
ds
addl
aam
xchg
cmp
das
or
lahf
call
mov
mov
imul
pop
int
mov
mov
mov
stos
mov
push
inc
pop
in
jnp
xchg
sahf
jnp
std
jp
push
jecxz
pushf
int
inc
mov
sbb
add
lds
xchg
push
cwtl
mov
sbb
push
sbb
sarb
int3
aam
and
fmull
xchg
pop
and
adc
scas
inc
orb
jbe
out
mov
aad
inc
scas
test
and
jae
xchg
sbbb
jecxz
loope
mov
ss
out
mov
vmwrite
xor
andl
mov
mov
push
add
out
repnz
imul
test
in
push
push
push
test
pop
add
imulb
test
shrl
xlat
mov
into
cmpsb
cltd
jnp
dec
and
subl
sub
push
fsubrs
rcll
push
movsl
test
and
scas
xchg
mov
outsl
xchg
loopne
pop
sub
fisttpll
dec
adc
lock
dec
adc
clc
ret
jg
scas
sub
iret
cwtl
push
jbe
dec
pop
push
push
insl
int
data16
pop
test
pop
adc
lret
inc
sub
inc
sub
mov
test
movl
jbe
inc
out
adc
xchg
outsb
mov
cmp
pusha
std
test
std
cmp
push
movsl
mov
ffree
cwtl
xchg
mov
jge
stos
sub
out
mov
mov
mov
les
rcll
mov
inc
or
fldcw
test
xchg
call
or
das
rorl
pop
inc
pop
add
or
pop
dec
in
negl
dec
and
xchg
jo
or
inc
loope
outsb
sub
cmp
and
mov
sub
cli
xchg
sbb
out
mov
push
shl
int3
les
inc
jle
adc
loope
jb
inc
adc
or
push
lret
dec
mov
test
xorl
pop
mov
mov
add
dec
mov
sbb
xor
pop
mov
push
jo
mov
aaa
pop
popa
mov
pop
iret
mov
scas
cmp
arpl
pop
adc
or
in
and
movsl
inc
hlt
push
sub
xor
je
test
dec
js
repnz
jb
das
and
negl
rcll
addr16
or
xor
and
adc
aaa
inc
cltd
or
loop
sarb
sub
pop
push
mov
jge
sbb
andb
jae
pop
push
icebp
aad
mov
adc
mov
push
leave
subb
aaa
out
xor
pop
lea
push
or
add
inc
jmp
mov
and
pushf
mov
xlat
push
fucomip
cmp
mov
ret
stos
sub
aas
push
mov
and
push
ljmp
or
fdivl
and
pop
dec
xor
sbb
dec
sbb
loopne
push
dec
inc
push
lea
lock
mov
xchg
ss
ja
mov
or
fbld
adc
sbb
filds
mov
mov
cmp
or
dec
jae
pop
sti
clc
cmpsl
sub
or
cmp
xchg
subl
pop
sbb
cmpsb
adc
jle
jmp
loopne
ret
bound
cmp
mov
adc
add
mov
movsb
enter
push
sbb
pop
popa
lods
loop
out
cld
pushf
int
and
sub
pop
xor
pop
shlb
add
or
dec
sbb
xchg
aad
or
push
mov
mov
test
mov
pop
xchg
xchg
mov
cld
cmp
popf
out
enterw
pop
scas
push
gs
mov
mov
testb
stc
mov
mov
sub
push
shll
sbb
ljmp
and
ret
add
sti
or
push
cmc
rcll
sbb
jnp
cmpsb
mov
adc
stos
ljmp
jmp
jnp
out
fisubl
popf
xchg
sar
ss
jno
ljmp
inc
cli
dec
pop
push
jl
inc
adc
cltd
shrb
or
cwtl
jno
ljmp
dec
ret
fisubs
test
or
cmp
jle
cmp
or
mov
aad
mov
rcr
ficompl
ja
mov
test
pop
pop
orl
push
sub
sbb
stos
cmc
fcomip
pop
dec
subb
jae
sbb
mov
stos
arpl
addl
xchg
outsb
dec
shlb
iret
imul
and
inc
shlb
stc
cmpsb
andl
dec
sub
xchg
adc
mov
subl
push
or
xchg
stos
mov
cwtl
mov
mov
sub
pop
mov
sub
sub
stc
inc
aad
and
mov
cmp
scas
sbbl
sub
mov
fdivrs
decl
mov
cmp
or
lods
aas
outsb
imul
xchg
aas
mov
xchg
inc
mov
bound
ficompl
idivb
jle
outsb
or
adc
loopne
fst
sub
pop
pop
aaa
xchg
jmp
test
orb
out
push
loope
mov
jle
xor
icebp
inc
pop
stos
jl
insl
scas
mov
push
xor
sbb
aas
push
xchg
pop
lret
clc
mov
lret
pop
insl
popf
inc
adc
adc
mov
push
mov
xchg
daa
les
jb
add
sahf
shl
sub
ljmp
insb
xchg
and
call
ljmp
shrl
pusha
mov
out
mov
fnsave
in
xchg
push
stos
ljmp
dec
scas
enter
notl
popf
jbe
sbb
imul
fwait
inc
loop
out
lahf
cltd
lock
pop
aaa
jbe
in
pop
popa
sub
sub
mov
cmpsb
or
jb
mov
mov
imul
sbb
mov
aaa
out
push
xchg
ss
stos
pop
cmp
mov
mov
mov
pop
mov
outsl
push
add
daa
pop
dec
cmp
sbb
mov
lds
pop
daa
push
cmp
add
xor
cmpl
idivl
sbb
adc
push
mov
jnp
outsb
adc
jb
push
mov
push
addr16
test
imul
push
ss
inc
mov
data16
mov
fs
out
test
jle
dec
jg
cmc
jmp
mov
cwtl
and
iret
jbe
sbb
and
add
jnp
nop
daa
add
xchg
mov
stos
pop
jmp
xor
pop
pop
outsl
xor
cmp
pop
ja
dec
fnstenv
jl
test
std
xchg
pusha
rcr
insb
popf
sbb
jae
leave
push
movl
jo
imul
jmp
adc
mov
jae
pop
lret
pushf
push
or
push
hlt
xor
cmc
jne
fs
paddusb
mov
addr16
mov
imul
sub
inc
adc
jbe
lock
push
add
inc
in
mov
dec
scas
movsl
aas
pop
or
sbbb
insb
loop
and
push
cmpsl
jg
leave
pushf
movsl
xchg
js
divb
pop
xorb
sti
jne
into
jle
add
cmp
or
mov
je
dec
sbb
rcr
dec
adc
sbb
sub
mov
ljmp
imul
in
fsubr
ss
addr16
adc
jecxz
sub
add
push
and
rcrl
out
stos
std
out
dec
fdivs
dec
sub
push
lret
sbb
xor
add
in
cmpl
xchg
cmp
push
lcall
push
mov
xbegin
aaa
cli
pop
jne
add
hlt
test
inc
aaa
orl
jns
popl
hlt
sub
and
and
je
push
loope
inc
mov
dec
aas
push
stos
push
sbb
test
inc
lret
xor
std
mov
fcomps
and
fcoms
inc
sub
test
dec
imul
rcrl
imul
pop
xor
lcall
imul
adc
dec
outsl
jecxz
sub
loop
sbb
push
mov
clc
in
aad
lea
jae
add
popf
dec
test
data16
aad
pop
or
popl
jg
aam
stc
push
stos
mov
mov
xchg
or
sbb
and
stos
sahf
push
pop
pop
outsb
push
das
out
stos
jbe
mov
es
pop
pop
lds
out
inc
add
cmc
inc
adc
mov
jle
push
insb
xchg
fstl
shrl
out
imul
mov
pusha
outsb
dec
mov
cli
jg
push
shlb
and
inc
cld
mov
aas
decl
mov
xor
andb
int3
xchg
js
cmp
jge
mov
icebp
loope
mov
jno
imull
loopne
int
push
dec
cltd
outsl
pop
imul
lds
cmpsl
lock
adc
xchg
sbb
je
sub
cmp
mov
fidivrl
mov
sbb
movsb
cmp
sbb
mov
daa
mov
loope
stos
outsl
dec
fcomps
mov
scas
sbbb
repz
pushw
cmpsl
enter
pusha
cmp
push
mov
nop
push
stos
clc
out
lret
mov
je
cmp
or
sub
mov
push
fldcw
mov
jl
jbe
in
in
dec
loopne
data16
movsb
lock
out
cmc
dec
testb
push
movsl
imulb
aad
dec
popf
lods
and
rcrb
sub
sub
push
xchg
scas
push
mov
leave
xchg
mov
cli
shrb
or
xorb
push
jp
xchg
push
xchg
daa
dec
mov
fsubl
je
in
pop
dec
cmc
fcomi
xor
and
out
addb
nop
shll
push
inc
xchg
dec
gs
add
add
mov
dec
add
sbb
sub
out
idivl
int
jmp
out
dec
lret
dec
mov
xorl
push
mov
pop
cwtd
mov
mov
mov
lods
mov
mov
push
inc
adc
push
dec
std
mov
repnz
or
push
stos
fiaddl
pop
in
mov
idiv
ret
loop
push
add
mov
lea
pop
jmp
cli
lret
int
inc
add
mov
cmpb
push
mov
sub
mov
pop
sbb
fcmovu
daa
nop
pop
push
inc
or
into
push
sub
mov
cmpsl
call
or
or
fcoml
in
ja
enter
inc
or
mov
cmpsb
repnz
cmc
cs
notl
mov
sub
mulps
xor
add
adc
mov
sub
les
inc
in
cltd
imul
push
out
test
cmp
int
aaa
mov
xor
and
push
dec
lods
adc
mov
movsl
jbe
xor
inc
cmovl
addr16
lret
lea
and
add
inc
and
and
xlat
add
dec
push
jb
jmp
dec
sub
in
xor
mov
repz
dec
loopne,pn
shlb
jge
mov
es
add
jecxz
mov
adc
sbbl
push
insl
dec
add
pop
mov
stc
lds
xor
xchg
mov
icebp
js
hlt
ja
jge
dec
addb
or
std
or
loop
xchg
sbb
iret
sti
popf
mov
cmp
js
aas
sbb
xor
shrl
push
lods
iret
outsl
movsl
jbe
outsl
daa
inc
inc
test
mov
jno
loope
aaa
mov
arpl
push
cmp
cmp
cmpl
idivl
ret
lods
inc
insb
jmp
xlat
add
push
int
arpl
cmpsl
out
lea
fcmovb
lods
push
sbb
cmp
addr16
adc
xchg
mov
out
xor
popf
call
mov
mov
inc
out
xor
jb
lea
iret
addr16
xchg
jo
stos
aam
fxch
jp
out
adc
stos
inc
adcl
adc
or
lahf
lret
sbb
mov
xchg
mov
lods
es
and
jge
test
pop
xor
cmp
mov
cwtl
inc
stos
dec
loop
fnstenv
lock
mov
jg
mov
sub
in
loop
daa
xor
js
stc
lahf
mov
xchg
int3
jb
loope
pop
push
leave
iret
sbb
fdivrp
or
int
scas
es
std
repnz
sbb
fdivrl
int3
movsl
add
dec
add
repz
mov
adc
out
sub
or
test
lcall
cmp
lods
sbbb
insb
add
push
mov
fistpl
in
or
sub
stos
mov
push
stos
ljmp
inc
xlat
jg
das
les
stos
lret
repz
mov
cmp
dec
adc
mov
push
cli
inc
insb
mov
or
sbb
inc
fistpll
sub
das
test
jo
stos
jl
push
cli
xor
lahf
cmp
fs
dec
mov
jmp
aas
test
mov
jg
pusha
es
pop
and
leave
jmp
data16
pusha
pop
mov
ds
ret
inc
sub
jb
or
push
mov
xor
sbb
loop
adc
sbb
cwtl
lods
xchg
add
frstor
inc
inc
cwtl
adc
dec
out
mov
pop
sbb
adc
mov
ss
lds
cmpsb
mov
sbb
mov
in
lods
mov
loop
insl
cmpsb
lret
inc
neg
xchg
lcall
adc
fwait
add
test
or
lret
adc
push
hlt
jns
in
int
lahf
pop
push
cmc
aas
and
jnp
imul
pop
lods
jp
add
int
jbe
mov
xchg
andl
inc
leave
dec
xchg
jg
into
mov
and
pop
pop
mov
jecxz
push
repnz
out
int3
subb
jg
addr16
sub
jne
cmp
xor
fbstp
inc
mov
pop
add
in
pop
or
push
imul
inc
pop
push
xchg
xor
outsb
xchg
rclb
or
out
in
jnp
shr
outsb
jo
mov
mov
xor
js
scas
cli
xchg
jecxz
pop
xchg
jmp
cmp
mov
movsb
sub
jmp
out
sbb
push
int3
js
sbb
insb
dec
xor
jp
xorl
pop
xchg
push
movsl
in
cwtl
addr16
fwait
aaa
ret
mov
arpl
and
imul
dec
jnp
xchg
jae
popa
pop
push
jge
loop
sub
loope
sti
pop
aas
test
mov
repz
sbb
fidivrl
repnz
lods
sbb
or
aad
xchg
int3
sub
mov
mov
repnz
pop
push
imul
cmpsb
mov
add
iret
mov
nop
ja
fidivl
cwtl
xor
pop
pop
lods
es
cmp
sbb
lods
jp
jnp
pop
add
push
adc
cmp
xchg
push
fbld
lds
enter
jb
test
mov
mov
cli
sub
or
push
roll
stos
out
fistpll
lods
xor
mov
sbb
and
xlat
add
subb
imul
add
daa
adc
stos
subb
jnp
xchg
sub
xor
aad
fdivrs
jp
into
stos
adc
imul
out
cmp
inc
jecxz
imul
inc
lock
shl
sub
jg
fwait
sub
in
push
sbb
pop
mov
lret
cmp
adc
push
arpl
mov
xchg
addr16
jnp
mov
and
sarb
mov
sbb
dec
adc
xor
adc
ret
imul
mov
sahf
jbe
and
rcrl
shrb
fdivrl
pusha
sbb
jmp
jg
mov
js
insl
pusha
ljmp
in
push
mov
xchg
push
jl
inc
inc
icebp
vunpcklps
cmp
mov
sbb
addr16
pushf
ds
lret
sub
pop
pop
in
popa
fsubrp
sbb
lds
jg
cmp
sub
insb
ds
mov
cmpsl
mov
xlat
push
add
push
lea
cli
and
and
hlt
push
mov
mov
mov
loopne
icebp
inc
lods
jmp
jle
sbb
fstl
jb
xchg
xor
xchg
jp
aam
dec
push
int
adc
mov
push
xor
arpl
cld
xchg
js
xchg
call
cmp
cmpsb
std
push
cmp
lock
sti
lods
sarl
fucom
sub
roll
stc
and
push
in
in
sbb
dec
adc
or
sbb
pushl
jb
loopne
mov
pop
imull
clc
mov
jecxz
adc
inc
mov
ds
xlat
movsb
cmc
adc
push
sub
mov
mov
pop
lret
jo
lret
arpl
cmp
xlat
xchg
and
jecxz
sbb
out
xor
mov
dec
mov
dec
in
pop
pop
es
xchg
cmp
loopne
sarl
mov
es
addr16
xchg
xchg
push
arpl
mov
inc
sbb
stos
push
loop
lahf
mov
movsb
in
lock
mov
ret
adc
push
icebp
push
adc
xor
jb
cmpsl
rcll
cmp
leave
ds
dec
data16
cmpsb
dec
adcb
jmp
icebp
out
bound
mov
xchg
xchg
adcl
sub
push
push
dec
mov
pop
lret
push
call
loop
sbbl
fmuls
daa
pop
cmp
call
es
pop
rcll
mov
in
fldt
ljmp
push
in
dec
in
enter
mov
shlb
adc
pusha
in
adc
xchg
aas
ret
lods
fmul
popa
loope
lcall
and
or
lock
mov
mov
pushf
lock
push
insb
mov
mov
lods
ljmp
add
fstpl
add
and
sub
inc
cld
sti
leave
ret
cs
rclb
or
xor
cmp
pop
mov
cli
cli
lcall
ja
idivl
xchg
popa
jnp
aam
cmc
mov
xor
push
inc
or
mov
mov
cmpsl
aas
pop
add
push
jecxz
cmc
jns
lcall
scas
jmp
push
lock
add
mov
test
xchg
addl
or
sub
dec
pop
xchg
or
xchg
mov
rcrb
ljmp
clc
fstpl
aad
push
inc
mov
push
in
pop
xor
add
sti
aas
shl
dec
aas
adc
lcall
mov
mov
loop
and
loope
ret
in
xchg
shrb
pop
inc
iret
mov
xchg
cmpb
movntq
jl
lret
test
mov
in
jae
mov
and
sbb
int
loop
nop
cmpb
out
lret
push
aaa
mov
sbb
dec
push
rcl
lcall
pop
sub
sub
pop
xchg
hlt
shl
loope
pop
sub
loop
mov
cmpsb
pop
test
in
add
mov
jl
xchg
jbe
or
popa
xchg
push
jle
jne
mov
movsl
mov
cmp
pop
imull
arpl
push
xchg
xor
rcll
cwtl
ss
mov
pop
imul
pusha
enter
mov
xor
inc
dec
lret
push
cli
stc
inc
mov
inc
xor
andl
push
lret
mov
jnp
lret
cmp
out
sbb
call
sub
enter
rcrb
or
mov
loopne
jp
add
cmp
fcmovb
add
add
call
fisubrl
mov
outsb
xlat
jo
call
test
data16
push
mov
les
hlt
xor
imul
cmp
pop
fs
je
cmp
lea
int
hlt
shll
pusha
data16
sbb
mov
jp
fistpl
inc
jb
or
lock
lds
rolb
daa
mov
pushf
pushf
stc
es
lods
xorl
adc
cwtl
arpl
mov
add
push
jb
sbb
or
jns
cmp
and
loopne
jecxz
jle
sbb
outsl
stos
xchg
pop
test
jge
sub
mov
cltd
jno
sbb
jge
shl
mov
xor
rorl
ret
and
push
add
addl
cmp
cmp
dec
cltd
js
or
mov
loopne
shll
mov
jecxz
in
enter
addr16
xor
jns
lds
and
fs
add
aas
push
movsb
push
xchg
sub
push
popa
mov
dec
movsb
add
add
lret
mov
repz
dec
adc
jmp
mov
dec
andl
lret
mov
jg
cwtl
gs
ja
fdivrs
imul
jo
cmp
test
lods
std
lahf
cmp
dec
fstpl
shl
sbb
xorl
fnstcw
pushf
mov
mov
cmp
rcl
dec
dec
cmp
jl
sub
or
fnstcw
testb
lret
adc
lret
sbb
pop
inc
test
shrl
fbld
mov
repz
popf
insb
pop
es
arpl
fidivrs
insb
mov
sub
imul
or
popa
lahf
add
insl
or
popf
insb
add
sbb
jne
dec
fbld
ja
or
xor
loope
ljmp
pusha
clc
sbb
sbb
aas
jmp
fmull
mov
lds
mov
pop
and
mov
xchg
mov
adc
xchg
pop
cld
cmpl
ljmp
test
mov
loope
cmpsb
inc
in
mov
mov
data16
ret
fisubrs
outsl
pushf
int3
adc
mov
jmp
cmpb
xchg
gs
loopne
jne
or
or
out
pop
loope
or
adcl
push
ds
add
lret
push
sar
addr16
fnstsw
pop
pop
xchg
mov
das
add
rcrl
pushf
fwait
mov
out
inc
lods
cs
and
adc
mov
jne
in
outsl
fcmovnbe
shr
adc
xchg
movsl
jbe
mov
lret
and
outsb
or
dec
xchg
xchg
cwtl
cmp
inc
mov
dec
cmp
sbb
cltd
xchg
sar
fcmovbe
movsb
popf
sub
leave
call
add
cmp
mov
js
int
sbb
int3
inc
xchg
jnp
jle
xor
mov
dec
insb
out
pop
mov
cwtl
in
aam
sub
sbb
xor
inc
iret
pusha
jb
push
push
jp
jl
les
sbb
sbb
mov
sti
ror
adc
jne
cmp
dec
pop
sbb
aam
add
aaa
adc
xor
in
jo
int3
add
mov
ss
in
sarb
in
sub
or
leave
loop
adc
jne
sub
mov
or
mov
inc
sub
sbb
jl
gs
adc
lahf
push
out
jge,pt
cld
out
lock
pop
add
cmp
dec
jno
loopne
adc
adc
in
jg
sub
adc
cmc
sbb
mov
mov
xor
jmp
aas
stc
cwtl
push
push
daa
or
mov
add
jb
jae
dec
push
pop
gs
add
sub
pop
inc
xchg
xchg
add
into
and
mov
in
dec
test
sbb
mov
test
push
xchg
xchg
sbb
mov
inc
mov
push
and
add
scas
into
mov
stos
mov
pop
push
cli
repz
fnsave
mov
aaa
popa
fistpl
sub
test
pop
lret
mov
ja
xlat
xlat
fcomps
and
stos
mov
adc
aad
sub
jecxz
push
mov
lock
dec
cmpsb
and
or
js
pop
push
fs
sbb
xchg
imul
in
stc
push
arpl
push
cmp
jle
lock
cmp
fbstp
push
push
xchg
adc
push
xorl
jo
fucom
jge
sbb
jg
test
xchg
or
pop
pusha
icebp
in
and
pop
cmp
loope
les
xchg
and
inc
dec
mov
sub
fwait
int
movsl
push
xacquire
mov
aad
push
adc
xor
add
movsb
movsb
cmp
jp
fwait
fwait
push
pop
stos
xchg
mov
jg
shl
popa
popf
test
and
jb
pop
das
das
add
mov
pop
pop
lcall
jae
subb
outsb
xchg
data16
pop
int
mov
push
repz
push
ud1
mov
cld
dec
nop
cmp
bound
push
data16
aad
mov
cmp
out
cmpsb
cmp
mov
sub
shrb
mov
mov
loope
jecxz
mov
int
inc
idivl
pusha
mov
bnd
in
test
push
insb
jae
sbb
xchg
mov
mov
xchg
popa
lock
lret
lcall
sbb
push
sub
push
test
popa
dec
lods
xchg
and
xor
aad
add
fwait
adc
sbb
shrl
mov
cmpsl
mov
sub
scas
xchg
or
xchg
lea
pop
popa
fcompl
mov
mov
inc
or
push
gs
mov
dec
sbb
pop
movsb
mul
mov
adc
into
inc
stc
xor
popa
jb
and
push
lods
aam
aam
in
dec
xchg
sbb
jge
out
add
mulb
dec
cld
push
cmp
lds
imul
sub
adc
aam
into
sub
pop
repz
fisubrl
mov
dec
xor
mov
sahf
lahf
fwait
cld
cmp
test
orl
fwait
outsb
shlb
pop
inc
dec
cwtl
and
add
mov
ss
mov
adc
lods
mov
pop
mov
ffreep
jp
ds
lods
inc
loope
lods
sarl
movsb
jl
pop
adc
pop
shlb
scas
xlat
cmp
dec
cmpsb
aad
ds
ja
xor
or
js
mov
in
dec
mov
mov
outsl
sbb
inc
sub
jns
adc
or
lret
push
lret
add
fstpl
xchg
rorl
dec
test
xchg
and
lds
cmp
xchg
loope
fsubrs
jns
push
ret
pop
mov
aam
mov
daa
nop
add
shrb
jne
lret
popf
ret
pop
fidivrl
xchg
bound
lea
push
inc
inc
lods
mov
inc
popf
ds
xor
rolb
mov
scas
in
dec
mov
add
mov
sahf
mov
mov
xor
inc
add
in
sub
imul
and
jne
mov
and
loop
pop
dec
nop
out
xor
mov
jns
cs
push
jae
ds
and
mov
cmc
cmc
aam
sbb
inc
addl
cmpsl
sbb
cmpsb
cmp
mov
sbb
push
jmp
xorb
pop
cli
mov
jge
xlat
cmp
lret
inc
movsl
jbe
outsb
push
je
outsb
mov
shr
xchg
sbb
data16
sub
dec
push
pushl
push
fnstenv
push
mov
out
push
cld
movb
gs
pop
in
leave
test
mov
adc
mov
cs
xchg
jne
pop
cmpsl
sti
filds
or
mov
push
fisubl
out
mov
addl
cli
roll
jecxz
cmp
mov
push
outsb
repnz
sub
mov
inc
mov
sarb
popa
iret
sub
lret
push
ds
pop
dec
xorl
pop
and
clc
leave
jb
movsb
bound
sbbl
ljmp
sub
test
adc
loope
cltd
enter
in
push
jnp
and
rcll
call
or
cwtl
mov
lret
sub
hlt
add
add
sbb
movl
cmc
mov
je
inc
mov
dec
bound
fsub
and
or
jmp
fidivrl
push
sbb
cld
mov
jnp
mov
mov
push
icebp
dec
call
mov
fs
rorl
push
mov
invd
mov
sbb
mov
mov
stos
rorl
in
jno
adc
cmp
and
ret
dec
nop
bound
test
rolb
xchg
mov
xchg
ds
jp
jp
repnz
dec
sub
add
xchg
mov
mov
out
cmp
arpl
call
rep
into
sub
out
mov
add
pop
fwait
in
stc
push
fsubrp
dec
jl
cmpsb
fisubrl
pop
bnd
pop
adc
sbb
adc
and
sub
xor
xchg
das
inc
test
push
jmp
cmpsl
push
or
inc
add
jbe
xchg
inc
cltd
cmpsb
jo
movsl
ja
les
or
xchg
fidivs
mov
es
pop
in
and
adc
push
jnp
sbb
out
adc
cmp
mov
cli
lock
mov
pop
sbb
clc
arpl
mov
int
lods
pop
inc
pop
fbstp
inc
pop
ss
pop
or
pop
mov
sahf
sbb
sbb
leave
push
xchg
pusha
test
adc
lret
cmpsl
sub
cmpsl
lods
incl
pop
jne
enter
pop
ljmp
cwtl
sub
jno
mov
je
push
jmp
inc
push
inc
cmp
jecxz
pop
adc
mov
mov
mov
ds
sub
inc
lcall
jnp
insb
mov
jne
and
push
jmp
push
lret
push
rcl
pop
adc
test
or
pusha
aam
ret
dec
xchg
mov
subb
incb
mov
mov
inc
mov
mov
setg
std
cmp
adc
mov
inc
mov
push
xlat
adc
push
icebp
cmp
xor
or
push
sub
inc
ss
push
cmpb
loopne
mov
mov
or
or
shrl
hlt
in
sbb
jp
inc
aas
jnp
jecxz
sti
outsb
dec
data16
orb
das
sbb
jmp
js
add
fwait
push
dec
jecxz
lcall
dec
add
sbb
jb
dec
lahf
push
adc
loop
dec
mov
lahf
mov
inc
adc
orl
pop
aam
shll
pop
andb
popf
sub
hlt
stc
hlt
insl
notb
idivb
test
add
jo
jbe
mov
sub
das
arpl
cmp
scas
jg
mov
dec
mov
cld
pop
mov
push
addr16
pusha
inc
ja
ret
mov
clc
adc
mov
outsb
lods
dec
cmpb
aas
xor
in
cmc
cs
add
std
lret
cmpsb
in
lret
jmp
mov
or
push
push
mov
int3
mov
inc
scas
dec
je
outsl
pop
int3
mov
xor
adc
lods
adc
fnstcw
movsb
roll
sub
inc
fs
popf
adcl
mov
mov
pop
dec
jae
mov
push
data16
loop
jge
clc
cltd
mov
ljmp
in
mov
mov
adc
cmp
syscall
dec
loopne
dec
jae
push
arpl
dec
scas
push
aaa
fwait
xchg
pop
popl
xchg
test
ja
and
lret
pop
mov
xchg
or
sti
jmp
shlb
shrb
mov
icebp
das
sub
xchg
pop
shlb
push
lcall
mov
insl
xchg
mov
lds
adc
xchg
gs
mov
pop
testl
movsl
fucomi
dec
pop
mov
shrl
push
mov
xchg
add
sbb
loopne
and
mov
dec
jge
mov
sub
fcmovnbe
nop
xor
xchg
out
pop
mov
jge
jecxz
fs
aas
jnp
repnz
cmp
lcall
daa
jge
mov
xchg
add
loopne
sbb
fnstenv
add
inc
nop
xchg
sbb
adc
test
mov
aaa
xchg
lock
pop
sar
xor
das
push
repz
pop
add
lds
xor
cmp
jge
dec
xchg
int3
arpl
jmp
push
popf
or
mov
xchg
test
adc
xor
lahf
jbe
add
mov
or
or
push
in
pop
xor
xchg
inc
addr16
mov
push
jo
add
addb
jmp
cltd
jmp
inc
push
mov
mov
jmp
mov
lcall
cmpsl
cmpsl
gs
xchg
and
repnz
insb
outsl
ja
push
mov
pop
aad
pop
add
adc
dec
inc
in
sbb
lock
inc
sbb
xchg
sub
hlt
out
jnp
cmp
lret
mov
into
xchg
lds
mov
sbb
sbb
mov
dec
adc
mov
rcll
popf
mov
push
test
xor
cmp
sbb
push
pop
int
iret
fidivl
in
sub
out
jo
mov
mov
or
data16
scas
popa
adc
test
add
in
mov
jge
mov
pop
fsubp
pop
jecxz
mov
and
aaa
cld
dec
fimull
loopne
push
loope
pop
insl
jmp
sbb
stos
divb
mov
and
lds
mov
ss
aad
mov
inc
ljmp
push
iret
jle
rclb
cmp
jl
stos
dec
jno
adc
mov
xchg
cmp
insl
push
lea
in
pop
mov
cmpsl
int
adc
sbb
lret
inc
or
ret
add
ljmp
push
jbe
cltd
jp
push
mov
movsl
shll
dec
fsubrp
and
shll
mov
and
fbld
mov
jmp
inc
cwtl
out
gs
push
push
cmp
stos
mov
sarl
in
xlat
cmp
sbb
inc
add
xchg
mov
or
jne
nop
cmp
sbb
movsl
jno
ret
add
dec
xchg
test
in
stc
das
push
xor
shl
mov
fmull
adc
push
sub
mov
or
fs
push
sub
lahf
pop
or
loopne
mov
sbb
or
mov
xor
fadds
xchg
add
jnp
stc
cmpl
push
clc
clc
and
inc
dec
xchg
xor
inc
inc
add
in
lock
int3
lock
jb
adc
movsl
cmp
cmc
ja
shrl
mov
int
xchg
xchg
dec
mov
sbb
in
mov
lret
popl
notl
scas
daa
xor
mov
sbb
adc
lods
cmp
push
stos
inc
mov
xchg
cmp
in
fdivr
out
ljmp
ret
mov
mov
cmp
loopne
into
in
push
fidivrs
adc
and
push
cmpsl
mov
in
lret
inc
in
fsubl
mov
mov
inc
xchg
clc
xor
orl
adc
loop
fdivr
mov
outsb
mov
jp
int
xorl
cmp
orb
cld
or
ljmp
mov
pop
sbb
jl
push
mov
test
dec
pop
clc
imul
test
int3
xlat
adc
cmp
mov
fwait
jle
aaa
push
gs
sub
data16
pop
scas
dec
aaa
mov
jle
les
jb
lret
lret
xor
das
pop
test
adc
dec
jl
fisttpll
les
ficoms
push
loopne
cmp
cmp
adc
ret
and
jmp
mov
lock
or
push
pop
cmp
jns
mov
add
mov
push
jne
push
xor
mov
insb
mov
jb
mov
fdivrs
in
int3
sub
lods
xchg
inc
lret
adc
lcall
nop
subb
out
loope
sti
lcall
dec
addr16
inc
mov
clc
lods
cmpsl
mov
sarl
in
push
fcmovb
scas
sbb
sbb
mov
mov
dec
pop
mov
and
xor
xchg
cmp
nop
data16
mulb
sub
int
sbb
pop
pop
push
js
rcrb
mov
les
jb
fs
scas
data16
pop
mov
movsl
and
jo
arpl
fistl
jbe
dec
xchg
pop
pop
ret
xor
sub
clc
xor
cmp
and
dec
mov
mov
add
jne
mov
mov
xchg
push
int
adc
lods
hlt
push
add
popa
imul
out
mov
cmp
mov
push
jb
lock
std
xchg
lea
and
adc
rorl
xchg
fs
jae
mov
mov
or
ss
lahf
push
movsb
addr16
mov
out
pop
loope
push
out
faddp
js
cmp
js
push
test
sub
mov
jb
adc
mov
loope
loope
movsl
daa
xchg
jns
iret
bound
adc
and
mov
or
mov
xorl
push
push
inc
mov
les
sub
dec
es
rcrl
scas
adc
icebp
cld
mov
xor
addr16
out
and
cmp
adc
add
pop
pop
incl
idiv
insb
cmp
into
mov
lret
inc
add
xchg
out
push
rol
inc
js
out
negl
int3
fistpll
xlat
push
ds
pushf
add
adc
mov
shr
orb
in
bound
enter
adc
lock
cmp
jo
aad
push
and
call
lcall
xlat
ljmp
mov
mov
test
mov
jb
xor
adc
fs
stc
decb
outsl
push
or
cmpsb
xchg
hlt
mov
cs
pop
sbb
xchg
xchg
inc
cmp
xor
fwait
push
xor
inc
mov
push
popa
ss
fstpl
jg
popa
or
cld
sbb
push
lret
xor
and
pop
call
xor
mov
push
mov
movsb
out
jmp
jns
out
sub
loopne
pop
shrl
cmp
loop
xor
popf
sbb
adc
sub
push
and
inc
jo
icebp
repnz
push
cmp
pop
into
add
push
mov
ljmp
testl
xchg
scas
pushf
jb
dec
add
outsb
mov
fsub
ret
or
loopne
jb
popf
inc
cmpsl
ss
jg
iret
xchg
popf
adc
cmpsl
mov
stc
shlb
push
push
sti
rcll
jbe
repnz
loope
inc
mov
or
cltd
fs
cmpsb
pop
fnstsw
ret
popf
jno
jle
pop
lock
xchg
test
pop
push
jno
aam
jmp
pop
aas
es
cs
mov
mov
mov
shl
cmp
inc
push
mov
rolb
cmp
dec
sub
or
jg,pt
es
xchg
das
and
mov
dec
aam
sbb
lock
add
insl
xchg
fdivrp
in
sub
mov
xchg
jp
test
mov
xchg
push
pop
popf
aaa
xor
push
add
shlb
nop
adc
mov
fsts
and
int
cltd
out
cltd
jecxz
stc
xchg
in
mov
push
or
popf
and
jo
scas
movsb
mov
xor
jne
cmp
clc
sub
cs
mov
pop
ja
sub
js
out
add
inc
sahf
cs
jl
insl
cmpsl
sbb
addr16
scas
in
push
test
dec
push
repz
dec
cmpsl
xor
gs
cmc
in
push
rcrl
mov
loopne
imul
les
mov
lock
idiv
cmpb
gs
je
jbe
shlb
inc
sbb
popa
mov
and
popf
into
push
cmpsl
fwait
cmpsb
js
enter
jp
fstpl
imul
mov
jne
icebp
inc
loopne
iret
cs
pop
mov
inc
mov
gs
aas
test
push
mov
inc
inc
push
adc
jmp
push
lret
adc
pop
std
sbb
or
jecxz
and
sub
xchg
or
out
cltd
dec
test
cltd
imul
cmp
mov
in
pop
sub
mov
or
jg
filds
pop
mov
pop
popf
cmp
lahf
adc
or
push
dec
int3
sbb
sub
jp
scas
add
lods
xor
adc
xlat
push
movsl
push
adc
mov
addl
add
cmc
pop
mov
jo
sub
add
adc
in
push
int
cltd
ja
jp
jbe
cmp
cmpsb
or
call
test
lret
les
subl
lea
mov
or
push
jecxz
mov
dec
cmp
xor
mov
xor
sbb
mov
int
movsl
cmpsl
outsb
and
lds
clc
jl
jns
mov
vunpckhps
xor
repnz
xor
mov
lret
into
icebp
out
push
sbb
repz
cmp
push
cs
sbbl
loope
jno
adc
pop
mov
fisttpl
xor
lret
xor
loope
and
sbb
jle
mov
jnp
xchg
adc
fwait
sub
cld
in
xor
es
aas
lock
xchg
adc
mov
mov
jne
rol
cmp
nop
shlb
les
jns
mov
cmpsb
faddp
mulb
fisttpl
inc
sbb
mov
push
insl
test
in
or
inc
adc
inc
rcll
mov
ljmp
jg
and
pushf
mov
aam
loopne
out
add
add
sbb
stc
jg
jbe
sarl
xchg
loop
mov
shll
jg
lds
jl
pop
cmp
xor
pop
pop
ret
sbb
dec
arpl
cmp
ficoms
mov
inc
aaa
faddl
push
dec
pop
shl
jmp
call
iret
mov
shlb
mov
int
jns
push
rcl
dec
cmp
stos
stc
pop
push
fwait
sub
lcall
mov
lahf
test
mov
adc
and
inc
aas
jle
pop
scas
lock
cmp
or
fadd
rolb
stos
push
icebp
push
adc
aam
addr16
cmp
es
movsl
jns
sub
jne
lahf
sahf
into
xchg
inc
fimull
das
mov
aaa
pop
push
mov
and
ljmp
je
mov
cmp
rclb
cs
psubsw
in
test
or
nop
mov
cmp
pop
je
add
inc
jp
pop
les
lods
shrb
rolb
in
mov
jo
scas
mov
mov
add
js
popa
dec
and
outsl
push
mov
or
mov
mov
mov
mov
in
xchg
jno
push
or
push
jb
lret
adc
push
mov
adc
fwait
dec
xor
daa
jno
sbb
cmp
lcall
arpl
xor
dec
mov
rolb
jecxz
add
pop
hlt
jmp
jge
mov
cmp
jne
cs
dec
mov
and
and
cmp
dec
push
scas
scas
ds
push
aam
inc
rorb
add
aaa
mov
push
sbb
rcr
xchg
pop
lods
mov
imul
ficoms
cmp
xor
dec
jecxz
add
cli
jae
mov
ret
jle
mov
push
xor
fildll
add
outsb
das
ss
dec
enter
popl
clc
push
xor
push
fiaddl
mov
mov
into
clc
jns
je
mov
mov
lock
cmp
xchg
jmp
cwtl
mov
mov
out
lods
push
add
lcall
cmp
adc
fnstsw
cmp
push
mov
cmp
sub
scas
addr16
jp
sbb
inc
daa
sub
push
inc
xor
xor
lods
fmull
fiadds
mov
adc
inc
mov
out
sti
sarb
mov
in
mov
pop
cli
mov
lods
adc
pushf
in
test
sub
push
jb
sti
je
cltd
xchg
push
pop
ret
cld
jge
or
icebp
sbb
jmp
xor
addb
test
imul
cmp
push
enter
adc
inc
mov
loopne
pop
mov
mov
pusha
scas
inc
or
iret
mov
in
in
add
imull
or
sub
jns
inc
shll
orl
push
push
mov
into
and
lret
jge
add
adc
ret
std
jns
xchg
sub
mov
inc
lea
std
jmp
adc
jp
cmp
pop
fnsave
pop
xor
mov
dec
lods
and
mov
mov
jbe
aaa
das
sbb
adc
jle
sub
mov
clc
mov
jle
cld
pop
pop
inc
mov
ja
jecxz
ja
in
add
pop
lock
and
fwait
pop
or
dec
aaa
mov
loopne
mov
sbbb
jg
in
in
fs
sub
mov
popf
xor
push
mov
push
jo
lret
loopne
xor
lahf
xchg
ret
jecxz
pop
lods
jg
push
test
push
mov
xchg
mov
push
add
sub
pop
out
in
adc
lahf
mov
dec
push
movsb
mov
push
xchg
push
and
inc
xlat
cld
roll
jnp
jl
aas
lock
mov
and
sbb
insb
call
cs
and
xchg
mov
or
cltd
ds
jle
mov
mov
sub
xchg
mov
add
sub
dec
mov
sahf
and
jns
loope
pop
std
jbe
push
loopne
xchg
aam
stos
push
or
mov
loopne
jp
and
fucomp
and
adc
lds
iret
add
repz
mov
pop
stc
frndint
sub
push
in
fimuls
mov
ja
repnz
das
sub
movsl
aas
loop
dec
div
testl
and
leave
js
fcoml
fisubrl
cltd
fistl
fsubl
push
and
movsl
das
add
pop
pop
xchg
dec
jg
sub
dec
mov
xor
loope
jae
ja
jmp
movsb
cwtl
mov
cmc
push
mov
push
jl
mov
mov
mov
pop
xchg
push
add
mov
jnp
imul
fistpll
test
inc
mov
aad
sbb
icebp
neg
out
xchg
xor
ficoms
mov
and
dec
insb
jo
jnp
out
xchg
popa
es
adc
cmp
push
jp
out
jbe
and
out
cmp
loop
or
pop
and
in
test
jmp
outsl
ljmp
aaa
inc
dec
pop
cmp
push
out
xchg
adc
xchg
dec
cmp
add
daa
sub
or
es
stos
cmp
insb
and
sub
jns
jbe
or
lahf
jecxz
mov
popf
push
xor
fs
popf
dec
std
out
dec
mov
mov
insb
lds
xor
sub
xchg
jnp
sub
mov
inc
movsl
test
jmp
fists
sbb
cmp
stc
sub
sbb
iret
stos
pusha
inc
or
cmpsb
test
std
sub
xchg
lcall
mov
outsl
sub
jecxz
or
mov
test
mulb
sahf
popa
aas
jge
movsb
add
in
cmp
int3
or
inc
xchg
pop
stos
mov
pop
out
negb
xor
mov
insl
sub
bound
daa
mov
adc
ds
push
in
out
imull
and
dec
jns
cld
and
cltd
andl
and
fbstp
lds
std
pop
icebp
mov
mulb
in
pop
cmovge
dec
or
lahf
dec
adc
adc
lea
fimuls
cmp
mov
out
dec
mov
jmp
sbb
data16
adc
sbb
outsl
sub
fcmovu
jg
repnz
lahf
pop
push
add
push
rcl
and
push
add
insl
jo
mov
pop
jmp
adc
jno
clc
dec
sbb
arpl
pop
std
shll
fiadds
push
icebp
inc
push
iret
inc
arpl
sub
xorl
mov
and
sbb
sbb
push
sub
push
repz
inc
lret
imul
push
inc
jmp
add
or
js
out
xchg
stos
xchg
ja
push
jne
stc
dec
arpl
out
xorl
aam
cwtl
and
out
mov
mov
fnsave
iret
or
mov
lods
aam
push
lea
cwtl
in
fsub
bound
notl
fdivs
fs
sbb
ret
mov
jb
add
pop
stos
mov
xlat
sub
jmp
mov
scas
adc
and
enter
push
movsb
xchg
push
add
xchg
inc
into
push
ret
mov
scas
cmpsl
cltd
je
mov
sbb
inc
push
popa
pushf
push
inc
mov
test
insb
aam
lods
loop
fidivrs
push
into
mov
cmpsl
fdiv
jb
addr16
pop
xchg
sbb
xchg
and
push
leave
inc
add
xor
mov
int
sbb
push
xor
inc
adc
mov
xor
mov
xor
clc
cwtl
dec
out
push
cld
aaa
pop
testb
roll
mov
fisttpll
and
int
or
pop
bnd
lods
mov
lods
xor
push
out
bound
shll
xor
sub
leave
iret
out
sub
mov
pushf
and
clc
pop
jg
xchg
popf
fadds
addl
insb
enter
ljmp
lods
push
xchg
jnp
test
or
cwtl
addl
xchg
push
inc
sbb
out
mov
xor
shlb
lret
push
sub
mov
adc
cli
jne
jb
jmp
inc
aad
das
sbb
std
sti
push
add
fnstcw
mov
add
sub
fsubrs
push
outsb
dec
sub
pusha
mov
mov
out
call
and
push
mov
sub
push
sbb
roll
xor
es
push
sbb
and
add
pop
xor
aad
lods
push
inc
in
mov
scas
fmul
ja
cmp
mov
xchg
add
sbb
adc
and
je
aas
scas
add
aaa
sub
sbb
dec
stc
shl
ror
sbb
inc
mov
cmp
inc
xchg
sbb
ret
xor
xchg
pop
mov
dec
andl
pop
push
insl
jbe
pop
mov
rep
clc
mov
lcall
push
push
fisubl
xchg
and
xor
nop
add
and
insb
xor
out
pop
enter
xor
mov
fs
or
jge
xchg
dec
dec
js
pop
aam
lods
and
or
xchg
push
or
shrl
ror
sub
sbb
jl
jge
or
es
arpl
sub
stos
sahf
sbb
add
push
fildl
popf
pop
mov
pop
fimuls
cwtl
jp
test
clc
sbb
repnz
js
mov
xchg
cmc
and
and
fwait
adc
push
inc
lods
roll
xchg
faddl
jmp
int3
dec
pop
cmp
mov
xorl
inc
sub
pop
dec
faddl
pop
mov
sti
nop
fdiv
lock
inc
push
paddsw
xor
int
push
fs
xor
shll
pop
xchg
and
in
xor
inc
pop
mov
jbe
loopne
das
andb
in
out
inc
dec
ficoms
cld
push
outsb
xor
jo
data16
or
or
outsb
push
xchg
xchg
pop
mov
repz
jnp
xchg
sub
in
push
pop
ss
in
sbb
mov
push
nop
daa
jbe
in
pusha
addr16
dec
aaa
loopne
jp
stos
add
hlt
xor
push
sarb
out
inc
sbb
push
xchg
mov
ja
mov
mov
dec
dec
rcrb
in
jno
mov
in
outsl
mov
in
outsl
jp
aas
cltd
fnstsw
sub
outsb
mov
imul
mov
out
fs
or
mov
sbb
lea
jne
aaa
in
ss
movsl
jecxz
add
pop
cltd
fisubrl
data16
mov
and
inc
repz
push
and
xor
pop
sbb
xor
xchg
xor
xor
mov
mov
lcall
pop
stos
inc
push
dec
adcb
mov
jle
ljmp
test
dec
inc
and
cmp
add
idivl
sti
fsubrs
pusha
sub
xchg
pop
fstpl
sub
cmp
adc
leave
arpl
pushaw
das
adc
mov
jns
jmp
cmp
repnz
fldt
mov
mov
in
loop
in
pop
les
ret
pop
mov
test
repnz
sahf
push
movsl
fs
pop
cmpl
popf
xor
sub
subl
out
mov
xchg
in
mov
aas
push
push
aas
pop
push
jecxz
mov
ret
push
test
cmp
imul
pop
sarb
pop
scas
sti
lds
out
lret
lahf
subb
dec
push
faddl
imul
shlb
sub
pushf
lahf
rcll
mov
repz
inc
xchg
jne
and
xchg
inc
mov
mov
sbb
mov
sbb
pop
sbb
scas
stos
cmp
addr16
int3
jnp
inc
aas
xlat
outsl
push
mov
inc
jmp
icebp
fadds
fdivr
add
stos
jg
sub
adc
pop
mov
fwait
sbbb
pushf
push
call
popa
mov
and
xor
pop
in
sub
push
push
mov
stc
test
push
jg
ficompl
loopne
xor
out
insb
sbb
test
jns
mov
lds
addr16
mov
and
jge
mov
pushf
adc
loop
in
xchg
in
fstpl
mov
push
inc
cmpl
pop
pushf
push
jo,pn
jno
push
cltd
pop
jnp
call
fiadds
cmp
fcmovb
or
nop
xor
sub
dec
push
xor
lret
sub
and
or
mov
add
adc
inc
dec
adcb
test
std
xor
fdivs
xchg
mov
daa
mov
fists
pop
lds
mov
dec
xchg
pop
dec
push
sarb
jecxz
mov
es
jle
jae
ds
std
add
sbb
rcll
jg
fisubrs
mov
aas
sub
pop
sub
fwait
divb
xchg
das
push
inc
dec
jl
ljmp
push
int3
dec
movsb
or
sub
jnp
and
push
repnz
xchg
mov
dec
test
ret
add
cld
hlt
lods
ja
xlat
mov
nop
push
xchg
adc
les
subps
addl
pop
cwtl
pop
jae
mov
sti
cltd
test
or
test
mov
mov
xchg
inc
aas
add
cld
and
aaa
fldcw
xchg
cmpsb
scas
popf
mov
and
loop
jo
jns
sahf
mov
lods
rolb
mov
adc
mov
pop
test
or
lds
mov
mov
in
add
ljmp
push
fsubrs
inc
cmp
cmp
frstpm(287
xor
sbb
mov
xor
mov
push
fldl2t
int
repnz
jg
xchg
or
sbb
or
test
jne
out
pusha
mov
adc
cmovs
jno
pop
xchg
ss
hlt
inc
daa
push
jp
rorl
xor
or
xor
ljmp
sbb
mov
mov
sub
or
mov
fnstcw
and
fcmovnbe
stos
mov
sub
gs
mov
aad
aas
sub
add
imul
cmp
int3
push
mov
jg
mov
adc
add
popa
sub
fwait
or
sbb
out
push
nop
or
mov
and
or
pop
adc
fsubs
lds
aas
push
mov
jb
test
xchg
mov
movsb
pushf
movsb
ror
sbb
add
sbb
inc
aad
sbb
pop
or
mov
jae
or
adc
call
pop
sar
mov
mov
fnstsw
jmp
adc
and
movsb
dec
xchg
add
dec
push
adc
out
adc
and
addr16
xchg
addr16
dec
pop
test
inc
daa
sub
jle
xor
popa
testl
jno
call
pop
push
jecxz
loop
mov
jg
add
in
gs
jp
mov
add
push
mov
sub
xchg
inc
mov
push
push
push
xor
test
dec
or
test
xchg
sub
clc
pushf
cmp
adc
inc
inc
jp
and
mov
repnz
mov
decb
mov
xchg
mov
stc
xor
stos
out
sub
xor
lret
or
jb
enter
xchg
loop
lret
push
sub
rolb
ljmp
fdivs
out
xor
xchg
jmp
loope
mov
push
inc
es
jae
push
mov
data16
clc
shll
out
mov
test
lret
fnstsw
cmp
xchg
call
lods
mov
mov
mov
inc
cmp
sub
jp
mov
mov
pop
jo
dec
or
pop
insl
adc
mov
mov
loopne
mov
cmp
in
sbbb
cld
mov
arpl
pusha
ja
outsl
pushf
push
cmp
cmpsb
pushf
aam
iret
aas
or
add
mov
adc
adc
mov
loopne
int3
push
inc
sub
bound
mov
push
mov
enter
mov
stos
jo
ja
out
rorb
sub
or
addr16
xchg
cmp
jmp
scas
and
in
cmp
testl
loopne
pop
clc
jp
lds
mov
xlat
adc
sub
cmp
ja
inc
mov
cmpsb
pop
pop
xor
mov
jb
into
lock
cmp
mov
or
stos
repnz
mov
jb
pop
std
jnp
call
and
mov
xchg
enter
xchg
rolb
outsl
jno
jle
jns
aad
push
into
test
sub
sbb
in
adc
mov
mov
iret
jp
jnp
jns
dec
adc
ret
push
fcmovbe
andl
mov
xchg
push
les
stos
cmp
push
stos
mov
lret
or
xchg
lahf
inc
sbb
rcll
outsb
lock
push
mov
rcr
inc
imul
or
xor
mov
mov
mov
mov
push
push
nop
test
sbb
inc
push
leave
pop
or
inc
mov
scas
mov
jb
inc
xor
lock
xor
inc
inc
xor
sub
ret
les
in
xchg
lock
push
out
in
push
jl
mov
stos
nop
and
xchg
outsb
and
gs
inc
gs
shrl
popf
xor
and
daa
push
pop
enter
js
test
clc
push
mov
jno
cli
push
pop
sub
in
and
mov
dec
in
stos
mov
in
ficompl
es
std
loopne
cmp
iret
test
cmpsl
int3
xchg
pop
into
mov
cmp
subps
pop
stc
jb
xchg
fldt
sbb
in
mov
add
cmp
mov
xor
mov
cwtl
bound
xchg
xchg
fs
lods
lahf
pop
loop
mov
jle
add
pop
outsl
cltd
xlat
pop
mov
outsb
xchg
or
inc
sbbb
shll
test
and
ds
mov
inc
xor
inc
mov
mov
stc
nop
dec
ret
loopne
pusha
movl
dec
cmp
inc
add
inc
imul
mov
scas
je
or
push
shll
aaa
jle
lods
xchg
cmpsl
and
push
jns
sub
cld
stos
mov
ss
ljmp
inc
xlat
mov
lds
frstor
dec
push
aad
mov
cmp
cltd
xchg
mul
mov
xchg
xchg
das
pop
jb
xchg
repz
cmpl
mov
or
dec
dec
dec
mov
pop
mov
repnz
rclb
fldln2
int3
fidivrs
sub
pop
shlb
pop
sub
xchg
stc
cmp
bound
cwtl
movsl
popf
std
or
loope
nop
dec
cmp
les
inc
pop
outsb
fdivrs
mov
cmp
out
int
dec
popf
xchg
out
dec
cmc
or
xchg
push
mov
xchg
dec
cmp
scas
jbe
iret
pushf
jmp
int
addr16
inc
lret
into
sub
mov
cmp
mov
mov
adc
mov
sub
jns
lods
testl
fldlg2
fcoml
add
fcompl
movsl
add
xchg
xor
sahf
pop
test
and
rcr
xchg
in
aas
xor
leave
shrl
xchg
out
mov
push
lahf
jbe
in
add
lret
repz
mov
fcomps
imul
pop
jns
mov
push
pop
push
cmp
xlat
mov
rcrl
xabort
jle
into
mov
cmp
xchg
fbstp
into
dec
push
outsl
pop
stos
inc
sbb
add
imul
adc
inc
adc
testb
out
clc
shr
pop
out
dec
or
in
dec
enter
add
in
xchg
xchg
sub
subb
test
xchg
jge
je,pn
test
cmp
push
mov
jnp
negb
cmp
jnp
sbb
test
xor
nop
sarb
test
es
mov
das
addb
test
push
pop
pop
in
jns
sbb
cld
stos
and
out
mov
test
lds
je
cmp
jecxz
xor
and
adc
and
fs
dec
push
mov
xor
gs
insb
daa
jo
in
shlb
push
daa
scas
push
pop
xor
mov
rcrb
std
sub
clc
fcompl
or
inc
mov
shll
push
push
mov
out
loopne
and
jbe
push
push
cmp
adc
clc
mov
aad
push
test
cmpl
imul
mov
push
clc
das
push
shll
fadds
sbb
or
xor
test
cmpl
sub
add
push
idivb
loope
sub
inc
or
aad
jnp
push
and
rcrl
jnp
pop
jl
in
xor
fsubl
mov
loop
dec
mov
cld
push
fistpll
jns
test
pop
scas
test
or
jbe
pop
mov
adc
addr16
inc
jb
test
pop
popa
jns
push
push
jno
hlt
lods
inc
inc
push
push
sbb
pop
fisubl
adc
loop
test
adc
xor
push
fnstcw
sarl
cmp
sbb
or
leave
cld
cltd
xchg
in
push
mov
sbb
sbb
jmp
out
sub
jbe
bound
push
xor
or
push
xor
data16
mov
mov
enter
out
xchg
stos
xchg
cmp
stc
pop
push
and
pop
jecxz
stos
inc
and
dec
mov
mov
faddl
pop
enter
iret
push
pop
aaa
add
sbb
mov
sbb
test
mov
add
jp
and
lahf
in
repz
adc
xor
mov
jg
jbe
outsl
movsl
shlb
in
fldenv
add
fisttps
int
pop
mov
pusha
mov
fucomi
cld
sub
faddl
lahf
addr16
or
por
lock
add
lret
sbb
loope
cmp
addr16
test
lods
movsb
mov
out
loope
movsl
lock
jb
cmp
ret
out
lock
xor
xor
out
shl
data16
jg
sbb
outsb
jne
ror
test
pop
xchg
aad
xor
or
pusha
leave
mov
mov
xor
add
out
xor
shll
lahf
xchg
clc
sbb
push
xor
sbb
xor
cmp
shll
inc
dec
orb
jae
insb
les
ss
insb
into
mov
sub
cmp
xlat
stos
push
outsb
lcall
test
push
push
push
adc
mov
out
mov
sub
popf
jo
and
mov
sahf
xchg
fst
push
dec
pop
mov
xchg
pop
scas
test
cmpsl
lret
pop
mulb
sarb
xchg
pushl
xchg
inc
mov
aad
cli
les
shrl
fs
enter
sub
jnp
fildl
sub
lds
loop
jb
scas
or
inc
xlat
ror
pop
mov
sub
shlb
ljmp
fcom
fdivrl
or
leave
and
mov
inc
cmp
jp
jae
das
sub
sub
sub
in
mov
cmp
add
mov
lods
cmp
add
mov
jmp
dec
and
push
lea
and
lock
fcoms
fisttpll
or
sbb
add
xor
icebp
mov
cmp
sbb
outsb
mov
and
sbb
pop
xchg
add
push
xor
loop
fldl
jo
xor
inc
movsb
rclb
or
push
aas
aad
pusha
leave
shr
fisubs
inc
insb
enter
mov
in
stos
add
fpatan
shrb
sti
xchg
insb
hlt
out
jb
push
push
jno
das
mov
aad
sbb
jp
pushl
sahf
cs
lock
jecxz
shrl
dec
or
and
jbe
gs
test
jns
add
sub
ret
popa
cmp
mov
shrb
inc
addr16
push
mov
dec
shl
notl
adcb
movsb
mov
lods
push
mov
xchg
icebp
xor
lahf
pop
sbb
mov
mov
ficoml
in
add
push
mov
adc
ds
ret
inc
notl
fsubp
adc
jae
xchg
sub
jnp
nop
test
jmp
sub
es
and
inc
pusha
inc
and
stos
xchg
cmpsl
xlat
push
clc
iret
test
pop
or
cmpl
in
lods
inc
add
repnz
pop
test
mov
lahf
adc
pop
push
push
ret
rcrb
fsubs
mull
mov
xchg
xchg
mov
gs
mull
push
adc
push
dec
xchg
push
dec
mov
mov
mov
cmp
cld
add
mov
pushf
les
jecxz
mov
cltd
sbb
cmpsl
mov
xor
rcrb
pop
sbb
mov
sub
pop
roll
outsl
dec
mov
aad
pop
movsb
jg
repnz
flds
xchg
mov
fwait
xchg
mov
das
movb
pop
push
shlb
mov
rorb
mov
shll
xchg
jnp
dec
lods
mov
hlt
leave
lods
push
out
jbe
hlt
leave
jns
push
mov
lret
dec
cmp
loop
jmp
sbb
inc
sub
sti
pop
push
inc
movsl
xchg
adc
mov
fsubrl
out
xchg
xchg
rclb
imul
pop
push
push
sbb
mov
ret
adc
jns
jp
sahf
es
aad
mov
mov
gs
dec
jne
hlt
jp
fnstenv
repnz
and
xor
push
fimuls
movsb
lock
xchg
cwtl
mov
mov
loopne
inc
inc
je
and
pusha
sbb
dec
stc
idivb
xchg
stos
inc
inc
cltd
xchg
bnd
jb
or
inc
pop
lcall
scas
push
lds
insl
int
loop
dec
push
inc
add
mov
cmp
insl
or
cwtl
mov
dec
inc
stos
loope
lret
xor
pop
add
mov
gs
mov
sbbb
mov
jg,pt
mov
mov
lcall
scas
jle
xchg
mov
inc
inc
xchg
pop
mov
adc
push
imul
push
sbb
push
ret
inc
mov
adc
aas
js
movsb
inc
jecxz
or
mov
insl
pop
es
lds
in
inc
lock
mov
testl
clc
adcb
push
xor
ret
lcall
push
int3
shll
mov
push
or
mov
and
repnz
stc
aad
add
add
mov
shlb
pop
imul
pop
push
lea
lcall
pushf
out
gs
sbb
inc
push
inc
scas
or
test
leave
das
js
inc
xlat
loop
jl
xchg
js
inc
repnz
inc
cmpsb
pop
int3
mov
scas
shrb
sub
pop
into
dec
pop
dec
add
cmp
sbb
pop
clc
aaa
mov
cmp
inc
sub
or
xor
cmp
push
add
lock
cwtl
adc
mov
mov
scas
add
and
jle
mov
or
xchg
cmpsl
pushf
mov
mov
inc
adc
mov
fstps
imul
subb
jmp
imul
mov
clc
xchg
aas
dec
cwtl
jb
push
aas
mov
das
lcall
aad
mov
roll
and
shrl
imul
pop
or
xchg
gs
inc
push
js
repnz
mov
dec
mov
leave
lock
dec
sbb
mov
xchg
pusha
xor
ljmp
cli
xchg
xchg
mov
jae
mov
pop
dec
std
scas
ja
mov
add
cmp
enter
sub
loop
jb
shrb
int3
call
push
test
stc
pop
lds
fldl
lea
push
icebp
mov
into
and
mov
and
shll
mov
adc
or
dec
mov
sbb
mov
push
pop
mov
fldt
out
pop
jo
dec
cltd
push
nop
mov
sub
jecxz
mov
rcll
je
push
jns
pop
arpl
insb
nop
xchg
pop
imul
imul
sub
jmp
jne
aad
and
sub
push
popa
cmp
push
adc
roll
fwait
jne
fcomip
lcall
daa
mov
das
js
sub
cmp
cmp
cmc
cld
add
push
mov
xchg
outsb
sub
std
shrl
into
lcall
pop
cmp
push
inc
inc
cmp
pop
nop
shlb
xchg
daa
fxch
add
nop
inc
movsl
mov
movsb
shl
icebp
or
pop
cmp
sub
add
xor
mov
sbbl
outsl
mov
cmp
cmc
cwtl
into
pushf
mov
mov
mov
and
or
jbe
test
int3
jl
xchg
leave
mov
outsl
jle
ret
cld
fcmovbe
and
ret
or
cmp
jg
scas
ja
pop
mov
arpl
mov
xchg
push
aam
loope
mov
inc
lods
aas
shll
cs
sbb
sahf
jl
roll
flds
clc
fldl
dec
arpl
pop
adc
inc
push
mov
and
stc
mov
scas
data16
popf
test
mov
jle
jnp
aaa
imul
hlt
rcr
mov
test
push
ja
stos
pop
jle
adc
cmp
mov
cmp
imul
dec
lds
fcmove
push
mov
jne
es
jl
pushf
shrb
pop
xor
adc
and
out
adc
aad
adc
dec
inc
mov
mov
jae
out
and
data16
loope
dec
pop
ja
iret
mov
jmp
lahf
fcmovnu
cmp
mov
xchg
adc
push
out
cld
loopne
cli
adc
imul
and
sahf
sub
movl
mov
int3
and
push
arpl
dec
clc
jne
enter
mov
cltd
dec
jo
dec
repz
mov
jg
and
mov
sub
test
inc
jecxz
and
loopne
insb
mov
and
pop
sub
sub
lods
push
mov
jne
or
inc
andl
lret
inc
jno
shll
aad
cltd
aad
out
mov
mov
dec
mov
in
wrmsr
push
mov
aam
jbe
and
lea
dec
movsb
jecxz
test
push
fcmovnu
jge
sbb
or
enter
loop
pop
mov
sub
popf
xabort
jmp
test
add
xor
jecxz
sbb
lds
aam
in
fstpt
jo
jp
jnp
imul
push
dec
mov
add
andl
int3
cmc
jnp
out
ror
ficompl
add
rcl
or
and
sti
push
xchg
test
jl
loope
ljmp
xchg
dec
xor
push
jp,pn
lods
add
addl
fsub
adc
sbb
add
xchg
rcl
or
push
jg
dec
cmp
cltd
sbb
flds
adc
sub
jmp
pop
test
push
pusha
test
data16
pop
les
push
jne
mov
pop
xor
aaa
adcl
cmp
icebp
lods
arpl
mov
out
test
push
cmp
aaa
leave
decb
mov
sahf
or
pusha
mov
sbbl
scas
fidivs
gs
ds
or
mov
inc
loop
mov
fmull
andl
in
mov
repz
imul
ret
lahf
movsb
jmp
movsb
outsl
dec
xchg
push
inc
ljmp
or
cmp
and
ficoml
flds
inc
cmp
int
add
add
int
mov
movsl
mov
icebp
cmpsl
mov
push
pop
subl
mov
out
mov
add
mov
pop
xchg
scas
mov
lahf
and
mov
std
test
enter
add
scas
insb
inc
divl
ds
sbb
cld
xor
and
push
nop
filds
add
xlat
test
push
in
add
xchg
pop
bound
jne
mov
jg
cmp
adc
xchg
shl
out
sar
aas
mov
and
jnp
pop
sbb
sbb
inc
ja
sbb
shrd
push
in
loopne
iret
int3
xlat
aas
pop
adc
in
insl
test
inc
lods
mov
ret
jmp
lea
fsubr
sub
push
pushf
cmpsl
mov
mov
cmp
inc
xchg
lret
lods
lds
sbb
adc
push
push
shrl
test
inc
dec
jle
insb
sub
and
push
int
inc
sbb
sahf
xchg
mov
js
lods
pop
test
xlat
xor
stos
popa
jle
clc
lds
sub
fnclex
mov
popf
nop
jmp
pop
ret
imul
sub
inc
ss
ds
pop
out
mov
mov
jecxz
les
cmp
add
mov
dec
pop
sbb
xor
popl
push
lret
or
xchg
pop
bound
repz
xchg
inc
scas
loope
or
lea
into
add
pop
inc
inc
fstpl
sbb
jns
loopne
cmp
push
and
push
jle
stc
pusha
fmulp
movsb
dec
cwtl
or
movsb
push
mov
mov
nop
aaa
jecxz
push
push
in
call
cli
shlb
out
xor
inc
mov
pop
cmp
mov
pop
jns
lcall
pop
inc
adc
insl
inc
adc
movsl
aaa
push
sub
pop
fs
mov
xchg
mov
daa
inc
movsb
push
lret
lock
iret
dec
inc
cmpsb
inc
inc
adc
lock
mov
lea
sbb
cmp
xchg
dec
sahf
push
fistps
xchg
in
andl
mov
repnz
xchg
popf
push
jne
mov
mov
pop
orb
mov
jecxz
jl
cmp
sbb
jp
pop
xchg
fmulp
mov
jae
arpl
push
mov
xchg
jb
mov
fisttpll
lods
push
and
push
or
mov
adc
in
lret
jmp
inc
push
imulb
xor
xchg
in
das
inc
dec
iret
dec
dec
sub
push
xchg
popa
shrb
dec
add
negl
mov
scas
mov
xchg
or
rcrb
dec
cmc
jge
sub
push
outsl
pusha
push
popf
mov
in
in
rorl
mov
inc
mov
lret
add
shrl
rclb
sbb
ret
cmp
in
adc
mov
out
hlt
mov
cmc
mov
dec
popa
inc
xor
sbb
cmp
leave
ja
and
jecxz
push
mov
std
xlat
sbb
pop
in
lods
xor
ret
rclb
pop
xor
call
sbb
ss
mov
and
es
mov
adc
or
xchg
and
icebp
clc
icebp
jl
ret
mov
xchg
in
loopne
ds
push
and
sbb
cli
ja
arpl
xlat
sbb
push
dec
and
clc
jle
push
stc
scas
mov
test
mov
sub
int
jecxz
test
inc
mov
lret
hlt
cmpsb
fsubrs
rcl
add
xchg
mov
ljmp
popa
mov
imul
insb
lds
xchg
mov
or
movsb
lahf
iret
imul
mov
pop
movl
push
and
dec
sbb
lods
sub
xchg
dec
movsb
mov
in
or
pushf
adc
pop
mov
jmp
or
movsl
lds
test
in
pop
test
fwait
in
add
shl
mov
pop
dec
int3
mov
mov
inc
in
arpl
cmp
std
call
rorb
or
mov
dec
mov
movsl
sbb
cwtl
aas
mov
pop
and
xchg
xor
dec
xor
cli
mov
mov
pop
lahf
adc
mov
dec
inc
jb
out
mov
ficompl
sub
das
mov
rorl
add
loope
out
cmpsb
dec
and
sahf
add
pop
fisubrs
pop
imul
shlb
mov
sti
cltd
and
ficoms
mov
add
xor
pop
outsb
jmp
in
adc
pop
dec
xor
cmp
rolb
sub
sbb
pop
mov
cmc
push
xchg
jns
shlb
in
int3
lret
aaa
lahf
xlat
int3
scas
add
jge
movsb
std
lcall
cs
xchg
sbb
xor
push
mov
push
xchg
pop
dec
test
xor
or
call
and
inc
cs
lods
jns
stc
add
loope
sti
adc
mov
add
movsl
stos
jae
fisubrl
insb
loope
test
pop
adcl
cld
in
dec
jle
pop
addb
loop
mov
sahf
lret
pop
jmp
scas
xchg
aad
lods
cmp
mul
out
jmp
jmp
popl
insb
xor
int
cs
enter
in
lret
adc
lock
cmp
adc
pop
pop
cmp
mov
lret
xor
fucom
mov
loope
dec
aam
jns
mov
or
mov
dec
inc
mov
cmp
add
sbbb
js
push
imul
and
push
jo
enter
shrb
push
inc
pop
outsl
mov
jp
push
outsb
adc
dec
push
loop
cmp
xlat
pusha
pop
sub
inc
jno
jo
subl
jno
or
jb
jbe
int
push
and
aas
mov
adc
push
js
sti
inc
or
int
pop
into
mov
push
fwait
pop
xor
stos
dec
imul
icebp
imul
pop
inc
int
or
out
dec
pop
or
mov
jge
jns
stc
pop
pop
hlt
test
lock
sbb
xchg
dec
arpl
inc
call
pop
pop
addr16
jg
sub
pop
inc
in
and
mov
mov
rolb
and
xor
in
pop
add
inc
loopne
and
jle
add
sub
inc
mov
loopne
or
adc
ja
sub
ljmp
ja
ja
test
test
pop
fildll
push
insl
or
and
lahf
inc
pop
pop
imul
cld
mov
sbb
mov
jmp
test
mov
shr
in
pop
cmc
push
jae
adc
mov
mov
sub
xchg
stc
xor
mov
fidivs
punpcklwd
and
pop
movsb
jmp
sbb
and
pop
xchg
inc
test
xchg
aas
in
ret
mov
popf
repnz
cmp
mov
pusha
loopne
cmp
and
pop
test
jg
sub
push
daa
mov
adc
mov
in
ja
xor
xchg
outsb
cmp
sbb
lret
and
in
dec
mov
fisubl
adc
ret
test
mov
jo
pop
out
je
insl
out
jae
xor
and
pop
jmp
add
xchg
mov
xlat
loop
and
push
test
repnz
xchg
xchg
scas
out
cmp
and
add
shrb
adc
mov
movsb
roll
stos
pop
add
scas
jge
cmp
adc
or
sti
mov
bound
mov
fldcw
gs
add
jo
incl
loopne
mov
mov
test
pop
mov
lcall
insb
nop
orl
scas
movsb
hlt
mov
ja
adc
sbb
mov
adc
mov
cli
inc
lods
out
fiaddl
lock
push
mov
push
lret
call
stos
push
jno
loop
scas
mov
mov
sahf
pop
adc
mov
jmp
mov
dec
jbe
stc
cmp
push
lret
in
mov
popa
mov
mov
inc
movsb
inc
cmpsb
sub
ret
jne
decb
loopne
aam
loop
push
pop
inc
arpl
add
mov
pop
mov
sbb
decl
cmpsl
fst
mov
addl
cmp
imul
jae
aad
inc
inc
bound
testl
xor
dec
push
nop
arpl
inc
or
bound
test
loope
cmpsb
mov
lds
cmp
or
pop
pop
or
fistl
adc
xchg
testl
ret
and
lods
or
push
xor
fnstcw
mov
push
adc
pop
repz
jae
enter
add
outsl
push
or
pop
pop
fs
xor
outsl
xor
enter
push
sbb
push
push
push
jbe
sub
addb
shrb
pop
mov
int
mov
mov
enter
or
push
mov
lock
adc
jl
mov
mov
sub
inc
loop
push
std
js
and
dec
push
das
rorb
fstps
cmp
push
or
addr16
stc
ljmp
movsl
lods
or
xchg
dec
cmc
xchg
ljmp
xchg
imul
pop
fs
repnz
ja
les
lock
pop
mov
push
adc
mov
pop
cmp
scas
adc
xchg
insl
test
xor
stos
inc
cmpsl
push
xchg
int3
js
ret
push
or
jle
jns
call
push
outsl
fidivs
jl
mov
in
sbb
fldt
aad
and
and
test
in
loopne
fsubs
ret
mov
xchg
js
mov
xor
xlat
sbb
pop
sahf
or
lret
stos
mov
das
enter
xor
divl
sysret
add
xchg
sub
push
xor
testl
scas
fsubs
mov
mov
into
sub
dec
les
cmc
rol
xor
aas
aad
aad
xchg
cmp
stc
mov
xor
sti
aas
adc
and
push
sbb
flds
jno
jae
sbb
test
rcrb
dec
lahf
dec
xor
xchg
subb
mov
jl
les
popa
pop
or
in
fistl
outsb
mov
push
sub
dec
popf
fs
cmp
pop
push
scas
aaa
rclb
inc
lods
xor
inc
scas
pop
sub
adc
aad
xlat
xchg
pop
ja
insb
mov
arpl
xor
pop
mov
test
icebp
xlat
fnstsw
ffree
out
add
lret
loop
aad
sub
scas
sbb
out
shlb
enter
mov
stc
imul
ljmp
jbe
cld
testb
cmc
push
push
mov
test
mov
insb
jmp
inc
fs
mov
xchg
pop
lds
inc
sti
dec
sub
cmpl
fwait
pop
hlt
repz
adc
test
sti
jae
push
jmp
aad
inc
jne
fwait
movsb
data16
mov
imul
adc
sbb
add
add
pop
cli
sub
aad
mov
cmp
sub
and
rolb
les
std
in
ds
rcll
xchg
jp
in
idivl
pop
mov
sub
or
xor
add
sub
or
lods
sahf
sbb
lahf
sarl
push
add
pop
push
sub
fs
mov
mov
or
dec
sbb
pop
pop
dec
pop
adc
inc
testl
adc
or
test
pop
inc
mov
sbb
mov
imul
cmp
aam
xchg
sub
ds
insb
aad
pop
sbb
xchg
sbb
or
aad
mov
clc
push
bound
and
sub
inc
cmp
repz
scas
or
shr
push
mov
lret
ljmp
and
mov
dec
aam
xor
loope
add
mov
push
loopne
push
and
gs
pop
cmp
cmc
add
nop
orl
mov
out
enter
mov
rcll
aad
and
fildl
mov
dec
xor
insb
xchg
stc
or
mov
in
jo
mov
ss
push
imul
mov
fistps
icebp
into
cmp
mov
mov
sub
dec
inc
mov
test
pushl
mov
sbb
inc
add
movsb
push
cmpsl
push
movsl
pop
enter
movsl
mov
ss
cmp
sub
dec
pop
pop
lret
xchg
and
popf
dec
cmp
in
loopne
sbb
or
popa
scas
sub
and
jge
in
jns
push
cli
out
hlt
sub
int
fst
xlat
pusha
aas
add
fistpl
js
pushf
scas
movsw
inc
sub
repnz
pop
push
add
scas
arpl
clc
in
mov
sub
pop
gs
push
pushf
sbb
cwtl
ret
mov
leave
aad
mov
mov
and
pusha
push
mov
cmc
out
xlat
ss
jne
stc
pop
outsl
leave
xor
xchg
cmp
stos
lods
insl
add
call
in
jo
les
dec
bound
fsubs
jp
mov
movsl
mov
or
ficompl
jge
iret
xor
pop
movsl
push
xchg
mov
hlt
jb
or
loopne
and
and
push
or
dec
mov
scas
adc
xchg
sub
jne
lds
sub
cmp
inc
in
fdiv
pop
stc
mov
mov
data16
cmp
loop
sti
xchg
addr16
jmp
jg
add
and
out
sarl
testb
mov
pop
test
mov
mov
inc
into
cltd
mov
cmp
arpl
in
mov
pop
adc
and
adc
mov
pop
and
inc
sbb
shlb
movsb
sbb
lea
lods
int3
sbb
daa
mov
or
pop
mov
ja
fdivrl
lea
std
jl
jo
sub
sbb
incb
push
jno
cmp
pop
sbb
imul
xor
jmp
popf
and
lret
jns
mov
stos
fdiv
jnp
inc
xchg
scas
pop
sub
pop
cmc
jle
dec
adc
xor
inc
inc
sbb
insl
mov
mov
mov
scas
test
pop
jl
push
sub
iret
pushf
mov
cltd
test
mov
mov
shl
push
cmpsl
loop
aaa
arpl
ret
inc
jo
mov
mov
cmp
rcrb
pop
xchg
xchg
lret
repnz
xor
inc
push
loope
dec
arpl
mov
mov
in
loopne
popw
inc
jle
iret
add
push
test
std
push
add
ss
int3
push
xchg
add
mov
es
lds
and
push
xchg
insb
adc
push
shr
mov
push
das
xor
lock
icebp
jl
lret
mov
cmp
into
repz
mov
cmp
enter
outsl
mov
xor
dec
dec
ret
daa
jbe
add
mov
add
push
fstpl
jmp
mov
mov
mov
jb
lret
test
movsb
into
mov
aaa
add
mov
xlat
shrl
xor
ljmp
pop
or
jnp
cmpsb
xchg
rcrb
out
in
push
adcb
mov
push
pop
movsl
inc
and
adc
cmc
cltd
adcl
mov
and
push
mov
loope
sub
inc
push
adc
pop
push
negb
fbstp
mov
add
fisubrs
mov
mov
dec
pop
ror
cli
cld
mov
orl
loopne
enter
dec
and
or
popf
loopne
adc
cli
xchg
mov
adc
or
rol
inc
push
mov
pop
mov
loope
and
sub
jmp
mov
or
or
repz
ja
sar
xor
pop
mov
in
sub
lret
cmp
dec
loop
loope
pop
int
test
pop
idivl
insl
movsb
ret
mov
add
mov
lretw
cmp
iret
insb
nop
and
lds
mov
lods
sbb
fdivrl
repnz
sub
dec
push
and
xchg
test
jb
movsb
jne
popl
test
mov
xchg
xor
popa
dec
cli
leave
jne
sbb
jns
subl
xor
stos
xchg
inc
andl
mov
lcall
mov
rcr
mov
mov
clc
adc
mov
sti
xor
cmp
pop
push
add
adc
mov
adc
or
cli
daa
push
scas
pop
cmp
push
dec
or
jge
clc
jns
mov
xchg
dec
push
fcompl
inc
popa
lods
adc
sbb
mov
pop
sbb
scas
in
mov
int
and
call
adc
pushl
mov
push
jp
cmp
cmp
adc
pcmpeqd
aas
jge
lods
aaa
dec
mov
jl
xchg
fstpl
inc
pushf
unpckhps
xchg
mov
out
lods
add
cld
mov
shlb
push
dec
push
scas
fwait
pop
sub
mov
cmp
sub
imul
lret
push
outsl
jl
test
sub
and
mov
xchg
push
pop
mov
sbb
mov
cli
in
push
push
push
bnd
scas
jo
les
aad
cwtl
mov
jb
jns
fsubp
cli
je
push
xor
cwtl
lea
cmp
inc
jnp
out
clc
nop
sar
iret
ficompl
stc
push
pusha
pop
dec
imul
insb
lcall
int
and
ret
and
jbe
or
imul
push
add
std
xlat
fimull
jno
jp
inc
adc
pop
push
lret
jns
out
popf
or
lods
push
iret
pop
test
xchg
pop
das
sbb
jl
scas
das
mov
repz
pop
cmp
clc
push
jae
stos
jge
les
jmp
lret
sbb
cmc
xchg
cmp
xor
or
push
mov
or
clc
or
outsb
scas
jb
rol
push
aaa
sbb
add
mov
mov
ja
fisttpl
loopne
jnp
ja
jp
cmp
ljmp
or
into
pop
jbe
and
cmpsl
loopnew
jbe
inc
and
or
cmpb
lret
ror
dec
aaa
fisubrl
sti
test
pop
dec
ficomps
add
bnd
or
shll
mulb
stos
jp
fiaddl
xor
inc
push
cltd
es
lahf
mov
adc
out
pop
cvtps2pd
dec
popa
inc
test
jnp
fisubs
out
fs
push
pop
adc
jmp
jnp
inc
daa
inc
movsb
xor
hlt
sbb
jae
mov
pop
or
pop
sti
daa
pushf
jno
in
add
fmuls
and
jmp
pop
push
lods
sbb
enter
sub
ret
push
test
xor
sbb
cltd
dec
xor
pop
mov
outsl
ljmp
bound
rcrl
lods
test
add
push
mov
cwtl
sub
notl
ss
mov
into
pop
aaa
stc
sub
cmp
in
jmp
and
fsubrp
in
js
into
mov
add
or
std
adc
dec
mov
mov
xchg
push
jg
xchg
cmpl
mov
shll
aas
or
icebp
mov
xor
mov
add
adc
mov
testl
insb
lcall
or
xor
repnz
insb
sbb
std
das
icebp
inc
mov
loop
xor
test
fnsave
push
mov
jnp
mov
pop
loope
dec
dec
cmpl
cmpsb
bound
adc
sbb
sub
mov
clc
mov
fidivrl
and
scas
jmp
lret
dec
rcrl
or
cmp
out
loopne
jmp
jno
cltd
stos
add
jg
fldl
addr16
movsl
push
jns
push
into
jle
push
cmc
jmp
lcall
mov
decb
add
faddp
and
xor
rcll
jne
out
xchg
mov
aas
ficompl
ror
incb
icebp
mov
push
gs
imul
or
add
push
imul
xor
mov
xchg
mov
sbb
inc
pop
nop
adc
mov
shrb
in
fldl
sahf
pushf
dec
imul
lret
push
inc
mov
adc
push
out
dec
sbb
icebp
add
jle
jle
fldcw
lcall
dec
imul
adc
fmuls
int
out
movsb
lret
add
shlb
push
lods
aad
fucomip
fsts
xchg
push
mov
int
fwait
dec
icebp
rcrl
xor
shlb
pushl
cmp
cs
sub
cmp
daa
dec
fidivl
mov
test
jnp
sbb
xchg
sub
arpl
jo
mov
je
sub
adc
loope
mov
jmp
popf
add
cs
leave
jmp
mov
sahf
cmp
shrl
daa
lret
sbb
stc
ret
imul
and
lea
lret
push
pop
lds
push
jbe
sub
cmp
dec
out
decb
testl
aas
push
pop
sbb
sbb
xchg
fstpt
lods
dec
inc
fs
arpl
and
jecxz
mov
fs
mov
popf
ret
das
int
fstpl
daa
movsl
inc
cmp
jge
ja
scas
xchg
xchg
ds
mov
gs
xchg
inc
loop
inc
inc
out
push
imul
fsubrs
inc
sbb
int
sub
clc
fwait
xor
cmp
ret
adc
test
push
jns
popf
pop
dec
sbb
imul
adc
je
jecxz
popf
and
lods
lret
es
dec
xchg
cwtl
jnp
lods
mov
rcr
lcall
jns
xchg
cli
cmp
int
in
dec
lcall
fiaddl
scas
and
add
std
jb
sub
cltd
ja
mov
mov
jmp
sub
imul
adc
dec
fcmovbe
fdivrs
pusha
movsl
mov
cwtl
cmp
fcmovbe
data16
pop
mov
mov
push
inc
in
ljmp
dec
cld
inc
mov
out
test
fistl
adc
inc
mov
loop
mov
sbb
inc
dec
pop
pop
lea
notl
cmp
xor
repnz
fistpl
movsl
aas
mov
fcompl
negb
cmp
and
addr16
scas
data16
sbb
ljmp
adc
adc
movsl
xchg
enter
lea
call
les
outsb
imul
xor
js
ljmp
lahf
sub
jne
xor
adc
dec
clc
inc
dec
adc
out
aas
mov
clc
pop
mov
dec
push
xchg
adc
inc
add
je
sub
sbb
sbb
jmp
fisttpll
mov
jmp
inc
out
inc
pop
hlt
insb
and
sbb
pop
aam
push
in
mov
lods
dec
add
mov
cmp
xor
cld
pop
ret
cs
xchg
mov
fiaddl
bound
test
xor
jg
dec
in
cmp
mov
daa
daa
stos
jl
dec
ret
gs
push
or
cli
std
dec
jb
mov
data16
xor
movsl
lods
jo
mov
jge
cmp
rep
mov
and
leave
dec
aad
inc
loopne
sbb
jne
dec
sarb
mov
lahf
ret
stc
push
mov
add
push
add
testl
xchg
sbb
dec
aam
push
sbb
push
je
fdivrs
fwait
aam
pop
cmpsb
jb
pop
mov
xor
mov
adc
movsb
sti
aas
pop
and
cmc
dec
popf
in
mov
cmp
or
je
mov
inc
mov
mov
ret
adc
mov
pop
mov
cmp
sub
cmp
mov
lcall
jmp
jo
xor
insl
jecxz
add
pop
push
xchg
mov
xor
jns
stos
pop
adc
flds
xchg
repnz
das
es
scas
out
inc
push
mov
mov
roll
ss
dec
xor
fisttpl
cmpsl
cmovg
adc
jbe
out
adc
jmp
adc
mov
jne
dec
mov
pop
inc
add
sbb
icebp
popa
sub
jnp
movsl
ret
push
and
das
push
and
imul
mov
mov
lcall
push
ja
rcrb
test
or
adc
push
rorb
popa
xor
test
pop
scas
dec
cmp
lods
aad
xchg
aas
arpl
sub
negb
movsb
mov
imul
cmp
icebp
icebp
push
adc
mov
add
enter
out
inc
fwait
xchg
std
mov
xlat
mov
push
rorl
xor
lahf
xchg
lods
ret
add
scas
or
jl
inc
xchg
cmpsb
clc
out
xchg
out
add
in
xchg
enter
pop
gs
or
mov
sub
int3
shrl
fs
jbe
iret
sbb
mov
xor
push
frstor
insb
pop
lret
xchg
aaa
jnp
pushf
lock
mov
cmpsb
std
cwtl
ret
xor
jbe
stos
mov
dec
movsl
in
jnp
push
cmovns
inc
jb
adc
lea
dec
lods
sub
jp
mov
out
iret
ret
sub
iret
inc
mov
ljmp
cltd
dec
test
push
mov
adc
in
and
aad
sbb
jl
mov
push
mov
test
or
js
sub
jbe
xchg
push
cmp
jecxz
test
sbb
mov
repz
addr16
push
ss
std
sbb
or
sub
test
push
dec
test
ret
inc
out
mov
ja
cs
dec
sub
nop
addl
inc
xchg
hlt
jbe
cltd
push
shlb
out
or
aaa
test
aad
jl
not
lcall
mov
mov
mov
jl
add
mov
loope
imul
pop
cmp
enter
loopne
inc
xchg
pusha
pusha
ficompl
pop
imul
ret
add
pop
mov
inc
mov
lcall
popf
es
aaa
jae
loope
into
scas
lret
ss
in
sti
cmp
cli
or
std
pop
mov
xchg
gs
jns
lret
dec
clc
dec
and
pop
push
inc
add
jne
in
sbb
rcrl
sub
das
lods
fcoml
add
adc
cmpsb
imul
pop
frstor
add
sub
push
cs
mov
mov
xorl
dec
adc
sbb
push
dec
xor
or
leave
fiaddl
repnz
popl
mov
iret
stc
add
lock
mov
popa
rorl
jno
adc
push
xor
outsl
fsubr
in
fsubrl
and
mov
ja
adc
pop
dec
stos
mov
or
xchg
fstl
push
ja
aad
in
cmp
out
inc
std
imul
adcl
mov
lods
insb
adc
cmpsl
adc
jns
arpl
mov
daa
iret
sahf
bound
jle
test
jl
xchg
ret
jle
cmc
cmp
dec
dec
dec
daa
ss
and
and
les
ja
jge
or
cmp
out
enter
mov
sbb
and
sub
sub
mov
pop
and
loop
les
adc
xlat
rcrb
test
xchg
mov
and
popf
mov
lcall
sbb
cld
fwait
xor
mov
shlb
repnz
fnsave
shlb
xchg
pop
jmp
xchg
cmp
mov
push
pop
mov
cmpb
xor
pop
lret
mov
cmpsb
push
cmp
xchg
lahf
pop
aam
adc
iret
push
repnz
mov
sbb
jbe
cmp
pop
jne
and
test
aad
popf
stc
pop
popa
les
adc
cmpsb
sub
outsl
rcll
iret
jp
arpl
and
and
pop
fnstsw
jae
out
inc
sbb
jecxz
pop
jge
lods
mov
xchg
add
push
inc
pop
cmp
shlb
fidivrl
jns
and
clc
mov
sbb
mov
add
cmp
outsb
and
fwait
outsl
mov
mov
xchg
mov
add
push
mov
jecxz
add
movsb
adc
gs
sbb
mov
es
dec
sahf
jns
mov
pop
cmp
ds
and
inc
ss
pop
pushf
add
cmp
pusha
stos
mov
jnp
cmp
inc
jecxz
jp
jno
mov
mov
jl
je
loopne
insb
test
ret
inc
sbb
aaa
shlb
jnp
cld
mov
inc
jnp
jns
pop
inc
popf
loop
lods
icebp
dec
push
push
dec
cmc
rclb
push
loopne
and
dec
and
data16
aam
push
pop
add
xchg
pop
arpl
and
xchg
cmp
test
and
movsb
mov
jecxz
or
lods
jno
jne
add
push
jb
xor
or
div
jmp
fisttps
dec
push
adc
jge
pushf
in
mov
lcall
lds
ljmp
pusha
mov
lea
cwtl
cmp
rcrb
lods
mov
mov
ja
pusha
add
cmp
jle
mov
or
daa
sbb
in
add
dec
shll
or
leave
scas
cmpsb
mov
xor
add
fsubr
xor
mov
inc
add
cmp
sti
push
xchg
or
mov
add
lods
int3
pop
cmp
leave
mov
rcrb
xor
aad
or
mov
enter
sar
pop
loopne
fpatan
in
xor
lea
adc
imul
jnp
lcall
in
cmp
vpsubusb
in
aam
dec
inc
xchg
xor
shl
push
sbb
jecxz
cmc
adc
mov
in
cmp
mov
xchg
pop
xchg
sbb
jbe
arpl
xchg
mov
add
pop
jnp
add
mov
mov
pushf
adc
fwait
or
insb
ret
dec
andl
cli
push
cmpsl
stos
test
dec
in
sbb
rcr
sbb
stos
add
je
sbb
push
ja
jbe
loopne
jb
js
arpl
cmp
and
pop
xchg
push
xchg
aam
add
mov
jle
mov
sbbb
inc
jle
popa
nop
pop
xchg
mov
es
mov
cld
dec
xor
lods
dec
sbb
add
mov
call
jnp
enter
push
cmc
fildll
cmc
dec
or
inc
arpl
aas
insl
sub
cwtl
mov
xor
stos
xchg
daa
sub
mov
mov
jecxz
ljmp
into
jmp
leave
cmc
add
out
and
mov
test
shld
xchg
mov
loop
cli
in
cmp
sub
test
repnz
hlt
mov
mov
shl
push
add
dec
hlt
dec
push
inc
pop
sub
sbb
adc
mov
addr16
clc
inc
jo
jg
and
sarl
mov
sbb
cmpsb
fmull
cli
jbe
scas
mov
cmp
fwait
mov
das
sub
jne
out
popf
mov
mov
add
mov
sbb
dec
faddl
sub
sbb
adc
lds
and
arpl
or
adc
or
rolb
fidivl
mov
pop
arpl
jge
mov
lods
das
fldt
arpl
or
pop
jb
push
andl
aas
mov
adcl
jbe
dec
xchg
cld
lcall
cmp
mov
cld
cmp
lods
sarb
mov
pop
loopne
push
data16
fcoml
andb
jae
loope
movsb
or
movsl
testl
mov
je
mov
mov
popf
xor
nop
aam
mov
push
jg
outsl
cs
xchg
xchg
inc
push
sbb
inc
out
or
ret
or
jbe
xchg
out
adc
xor
mov
outsb
add
mov
aam
push
add
ja
arpl
pushw
lods
sbb
imul
xor
pusha
xor
insb
jl
cmc
lock
mov
in
imul
jae
sub
push
mov
popf
fwait
cmp
enter
sbb
mov
popl
data16
ret
push
xchg
push
mov
ret
jno
add
ljmp
lahf
mov
pop
movsb
cmp
pop
dec
inc
sbb
data16
movsb
test
jp
jp
adc
or
xor
pop
mov
fcmovne
mulb
test
fwait
bound
jb
ficomps
and
push
inc
imul
pop
adc
sbb
lret
pop
aaa
icebp
enter
in
into
ss
cwtl
rorb
pusha
inc
fldt
or
jne
fldl
aaa
inc
cltd
adc
push
xchg
and
mov
inc
add
mov
jbe
inc
out
scas
fimuls
dec
sub
xor
cld
aam
mov
jecxz
in
push
inc
lea
pop
and
push
dec
mov
jns
inc
movsb
cltd
mov
sub
or
incl
inc
pop
adc
in
js
jae
mov
int
adc
int
stc
mov
nop
cmc
cli
adc
ret
orl
out
mov
mov
pop
xor
cwtl
lds
xchg
shrb
jne
mov
add
push
shl
sar
jmp
subb
mov
push
into
pop
loope
add
fwait
out
js
mov
and
insb
popa
jno
sbb
clc
xor
test
lock
dec
dec
push
push
or
adc
lret
incb
mov
cmpsl
dec
dec
aas
dec
insb
ficomps
popa
into
bound
adc
dec
lock
mov
fnstsw
mov
das
cwtl
arpl
cmp
jbe
jnp
pop
lret
loopne
mov
shrb
addr16
mov
jecxz
sbb
bsr
roll
mov
inc
add
jmp
cmp
mov
or
xchg
enter
nop
dec
mov
kmovb
shl
and
iret
icebp
jmp
push
sahf
sbb
jecxz
ret
sbb
inc
cmp
mov
xor
imul
mov
xchg
and
jae
mov
mov
repz
ss
jge
call
sbb
pop
dec
mov
push
jecxz
shl
stc
adc
outsl
lods
lcall
popl
mov
fchs
lock
mov
inc
xor
pop
inc
pushl
stos
hlt
push
mov
lds
sub
push
cmp
mov
arpl
lock
sbb
xchg
push
inc
fsubs
sbb
jecxz
aas
adc
jecxz
mov
jno
adc
iret
mov
cli
scas
loope
test
sahf
movsb
push
lods
add
das
repz
movsb
cmpsb
jns
hlt
mov
sub
push
lods
cmpl
out
and
pop
aas
xchg
les
mov
aaa
je
sbb
sarb
lock
and
cmp
mov
mov
test
cwtl
pop
sahf
scas
cmp
popa
incb
rorb
lea
outsb
mov
xor
fucomp
test
lret
test
adc
cmp
cmc
inc
cli
push
dec
mov
xor
or
push
mov
and
jg
outsl
test
in
add
inc
pop
mov
jl
sub
mov
addr16
int3
cs
out
inc
cmp
aad
pop
cmp
call
mov
incb
test
xor
push
and
cmp
cmpsb
mov
push
inc
fstpt
xchg
test
push
cmc
push
addl
mov
mov
inc
mov
mov
enter
imulb
ljmp
jp
mov
jl
cmc
mov
mov
push
inc
fsubrp
aas
arpl
mov
sbb
sbb
inc
mov
fwait
mov
mov
jp
cmp
hlt
imul
dec
fwait
in
cld
stos
jo
js
jmp
in
movsb
jle
cmp
in
and
aaa
cmp
xchg
shrl
setp
jbe
jbe
fistl
cli
inc
fprem1
imul
pop
sub
jbe
aas
jnp
push
inc
ret
cltd
push
mov
test
and
and
outsb
jbe
cs
and
outsb
loope
jmp
dec
xchg
mov
cwtl
nop
cmp
jo
and
mov
dec
pop
faddl
lahf
js
enter
dec
push
imul
clc
pop
xor
je
ret
test
sbb
cmp
jmp
jne
mov
cwtl
push
fadds
sahf
dec
cmp
sbb
fsubrl
mov
push
xchg
stos
xchg
std
out
push
hlt
mov
cmp
sub
inc
xchg
or
int
mov
and
cltd
mov
add
and
leave
cmc
je
fbld
xchg
jp
ds
xlat
sbb
fildl
movsb
dec
test
jne
cmp
push
stos
pop
outsb
movsl
lahf
in
sahf
cltd
push
jl
cmp
dec
xchg
or
jge
push
sub
aas
xor
mov
or
daa
mov
jge
loop
mov
sbb
mov
pop
rol
pop
into
dec
cwtl
or
repz
xchg
jne
cltd
decb
prefetcht2
sbb
add
stos
outsl
cmp
jge
jle
enter
mov
cmc
jp
les
cli
aaa
in
add
sub
ss
sub
xor
lods
movsb
nop
pop
mov
dec
mov
enter
cmp
in
data16
xchg
mov
xlat
dec
enter
popa
lds
push
sahf
mov
arpl
fsubl
sub
outsb
out
shrl
sti
imul
inc
xchg
pop
call
mov
or
xor
mov
lock
loopne
mov
ds
loop
jb
push
leave
and
add
add
cwtl
pop
mov
jno
pop
aaa
nop
xchg
cmp
mov
ljmp
int
std
pop
jns
popf
out
in
dec
pop
or
pop
lods
jbe
mov
cmc
push
movsb
ss
aad
mov
pop
es
lea
sub
rorl
pmaddwd
xchg
js
imul
stos
movsb
test
xchg
xchg
jnp
daa
jp
xchg
cmpsl
out
push
jne
out
add
mov
out
cmp
mov
stc
aaa
cmp
inc
mov
cli
fwait
dec
out
push
dec
ja
xchg
lock
inc
add
in
popf
cmp
mov
push
imul
and
push
icebp
lcall
and
ret
loope
loop
fldenv
jmp
cwtl
dec
dec
mov
jecxz
fnsave
pop
xchg
cmp
aaa
fcoms
sahf
xchg
adc
testl
mov
mov
cmp
enter
fwait
test
loop
fs
push
test
mov
testl
cmp
xchg
add
dec
test
rclb
ds
dec
rolb
dec
adc
lods
out
xlat
cmpsb
mov
dec
or
icebp
fidivl
scas
or
xchg
pavgw
cmp
fmul
shrl
jl
loopne
xchg
push
cmpl
iret
adc
dec
cmpsl
fiaddl
cmp
enter
imul
sbb
repnz
inc
fsubs
push
pop
xchg
inc
push
adc
loopne
lret
out
push
aaa
xchg
shll
sub
mov
cs
dec
stc
ja
xor
clc
ficompl
pop
popf
xor
mull
jl
push
xchg
test
adc
jo
sub
cmpsl
inc
movl
shlb
rcll
mov
adc
into
mov
test
sub
xchg
imull
sbb
in
jge
loopne
mov
xor
pushl
xor
lods
adc
xor
dec
mov
mov
hlt
xor
fmuls
scas
std
shlb
mov
or
cmc
enter
idivl
sbb
xchg
mov
aam
es
sbb
push
movsb
ljmp
cwtl
fs
enter
jae
inc
call
arpl
push
sti
lcall
dec
or
or
sub
push
call
cld
aaa
push
icebp
adc
xlat
mov
jmp
fbld
jbe
add
popf
aad
scas
mov
enter
jl
adc
in
sbb
xor
ret
rcrb
fisubs
cmpsl
stos
mov
ljmp
test
push
sub
mov
cmpsb
bound
jge
lret
out
jbe
push
pusha
add
ljmp
jge
jge
add
mov
cmc
mov
push
and
in
xlat
mov
aad
movsl
cli
add
out
push
sbb
daa
inc
mov
inc
out
popf
mov
dec
pop
mov
mov
push
cmp
xor
or
dec
fcomps
pop
std
sub
stos
xor
cmp
lcall
add
dec
subb
or
aas
call
cmpsb
mov
imul
test
into
test
movsb
push
sbb
mov
lods
enter
and
push
daa
lret
cld
xor
push
sti
adc
leave
dec
dec
push
test
pop
push
pop
negb
movsb
bound
mov
movsb
pop
adc
cmp
arpl
aaa
jb
out
dec
cli
mov
or
jbe
fists
in
sbb
mov
cli
pop
inc
mov
loope
cwtl
xchg
xor
mov
jo
sbb
xorb
lret
shl
push
addb
stos
cmp
push
dec
stc
xchg
xchg
push
outsb
pop
mov
lock
inc
sbb
out
aaa
int
inc
aam
fwait
cmovae
mov
sub
setge
adc
fdivrl
arpl
cli
mov
ss
imul
stos
cmp
ret
mov
insb
push
popl
arpl
mov
fbld
cld
imul
hlt
int
mov
out
gs
cmp
cmpsl
ret
mov
inc
push
cmc
xchg
loop
icebp
fs
sahf
cmp
adc
or
lret
or
sub
insb
scas
mov
pop
mov
shrl
jo
repnz
xor
int
vmovups
cli
aas
daa
cmc
fimuls
fadds
and
outsl
jo
sbb
in
lret
mov
lods
out
mov
insl
aas
push
pop
adc
inc
ljmp
add
jae
rcrl
mov
jecxz
xor
imul
adc
or
leave
cmp
mov
fwait
jge
sub
xchg
adc
jnp
aam
mov
addr16
pop
dec
xor
cmp
mov
imul
cli
mov
pop
stc
daa
imul
sbb
aam
xor
shll
push
insb
push
add
loopne
ljmp
sub
int
cmpsl
enter
xchg
mov
int
testb
dec
dec
ljmp
sub
adc
add
push
scas
repnz
aam
mov
jae
adc
jb
jg
push
jnp
adc
es
xchg
and
or
or
xchg
inc
dec
loop
jne
ss
mov
repnz
cwtl
add
jmp
scas
aas
or
push
nop
addb
loopne
xchg
test
mov
cmp
jmp
mov
inc
dec
adc
out
mov
jns
xchg
xor
mov
pop
xorl
pop
push
incl
incb
dec
fbld
jae
sbb
lahf
jnp
push
lcall
flds
dec
jae
mov
sbb
xor
inc
mov
push
cmpsl
or
and
insl
xor
popf
mov
popl
rcrb
pusha
movsl
or
push
push
fmull
adc
mov
and
outsl
inc
dec
or
rcrb
mov
dec
loope
mov
xchg
das
movsb
cmp
call
and
cmpsb
out
dec
sub
cmpsb
mov
mov
sbb
pop
out
jne
das
lret
adc
std
ret
jp
inc
jmp
add
fstpt
pop
inc
xchg
loopne
imul
subl
hlt
stos
sub
add
adcb
dec
testb
test
jns
jo
shlb
fsts
sub
pusha
jle
fs
mov
xor
stos
pop
or
test
sbb
popf
repz
add
adc
fbstp
outsb
enter
xor
mov
arpl
lret
sub
jno
icebp
in
push
mov
pop
sahf
cli
fsubs
stc
movsb
dec
das
cmpsb
adc
inc
js
xor
xor
rol
fimull
ja
rclb
fbstp
std
pop
add
cmp
cld
imul
aam
out
pop
pop
or
or
jno
push
stos
lods
les
test
add
mov
xchg
cmp
lahf
and
ja
adc
jbe
mov
inc
mov
addl
hlt
pop
pop
dec
jmp
aas
dec
mov
cmp
or
push
repz
jmp
or
daa
call
inc
imul
jmp
cmp
vphaddubw
and
pcmpgtb
mov
adc
jmp
and
add
leave
adc
test
inc
cmp
shll
imul
lret
xor
lret
insb
xchg
jmp
sarb
dec
stc
mov
xor
mov
ficoml
sub
sbb
cmp
xor
pushf
pop
sub
mov
ljmp
and
mov
subb
jae
dec
mov
mov
in
cli
mov
push
lds
popf
push
or
xchg
out
pusha
mov
jo
jle
and
lea
dec
js
xor
mov
bound
xor
inc
nop
outsl
iret
cwtl
add
push
bound
mov
popa
scas
repnz
fwait
inc
roll
mov
stos
mov
dec
cmp
dec
sub
fbstp
testl
push
leave
push
jo
dec
fisubrl
mov
jae
insb
inc
xchg
or
aad
icebp
mov
mov
clc
leave
out
rcl
inc
pop
mov
jns
xchg
jmp
jecxz
jge
fdivr
fld
jp
push
sbbl
das
pop
mov
fistps
jecxz
js
inc
inc
ret
jae
xchg
mov
mov
push
sbb
insl
jl
std
shl
cmp
nop
fsubl
dec
sbb
lock
xor
loope
inc
inc
sahf
or
fwait
dec
scas
and
pusha
or
sbb
movsl
xchg
movsl
xchg
pop
sbb
daa
ss
clc
aaa
lret
adc
add
inc
xchg
lds
xor
or
mov
stos
mov
in
inc
add
imul
or
gs
cmp
pop
fnstcw
lock
mov
and
jle
aaa
sub
ja
out
sbb
xchg
push
xchg
outsb
xchg
xor
and
andb
mov
adc
add
pop
xor
xor
or
das
stos
test
movsb
sti
push
sahf
add
scas
addr16
mov
inc
shrl
cmc
out
ljmp
in
xchg
in
sti
sub
lds
mov
sub
jbe
cltd
mov
js
adc
loop
jo
mov
sbb
in
xlat
loop
fs
mov
push
push
push
jno
jl
jle
pop
outsl
inc
fsubs
push
and
movsb
cmp
f2xm1
imul
add
sub
and
mov
xchg
test
jae
out
cltd
pop
in
add
pop
pop
js
add
cmpsb
xchg
jp
test
xor
ds
pop
and
add
mov
mov
fstp
mov
addr16
sub
stos
rorb
sub
xchg
ss
lea
fnstenv
cmp
mov
jae
dec
mov
fisttpl
xchg
out
push
cltd
adc
mov
adcl
movsb
movsl
lret
out
xchg
dec
in
pop
in
dec
lahf
lds
add
push
in
hlt
andb
pop
gs
cld
and
clc
pop
dec
pop
xor
pop
and
negl
mov
xor
in
xlat
smsw
jg
fnstenv
arpl
push
dec
or
jbe
push
pop
or
xchg
or
scas
mov
and
adc
mov
push
aad
inc
and
cmp
push
sahf
jne
pop
or
add
mov
sub
push
dec
push
pop
icebp
ljmp
in
and
dec
cmp
pop
cmc
test
ror
add
mov
or
push
inc
sbb
push
sbb
pop
fnsave
mov
mov
outsl
insl
loop
pop
xor
and
outsl
sbb
std
or
jbe
cmp
cmp
inc
jle
leave
or
jle
push
insl
insl
cmc
and
outsl
ja
subb
dec
jmp
and
arpl
test
movsl
push
mov
push
or
sub
jbe
shl
popf
hlt
or
cs
adc
pop
mov
push
push
cs
mov
jle
movsb
and
xchg
xchg
outsb
mov
ret
sub
jge
pop
loope
lods
pop
mov
test
pop
xchg
popa
daa
ret
xor
rcll
nopl
add
sub
mov
adc
es
fdivl
add
dec
mov
push
inc
dec
pushl
out
and
ds
movsb
rcrl
adc
pop
test
fldcw
sarl
push
aaa
popf
cld
pop
lea
sbb
push
in
aaa
arpl
addb
popa
push
lahf
outsb
fldl2e
add
dec
pop
ror
outsl
subb
push
dec
inc
add
pop
pop
rcll
data16
and
outsb
push
and
dec
push
sahf
in
mov
xor
aam
jbe
inc
js
xor
and
repnz
idiv
push
sub
nop
lock
mov
mov
and
mov
push
cltd
mov
mov
pop
lds
adc
xchg
jnp
adc
lods
xor
fistps
pop
and
mov
test
add
jecxz
clc
and
subl
adc
pop
movsl
sbb
out
bound
aad
dec
aad
mov
xchg
test
iret
clc
andb
mov
mov
mov
mov
push
into
adc
xchg
out
nop
mov
fisttps
pop
cmpsl
mov
pop
cltd
inc
int
push
lods
je
mov
sub
jge
fldcw
push
lcall
push
into
xchg
sub
mov
mov
cmp
lods
repnz
dec
inc
imul
push
aam
mov
sub
stos
sbb
push
adc
cmp
cld
movsl
add
inc
pop
sbb
dec
jns
fildll
test
test
mov
push
mov
adc
ret
or
nop
cmp
or
dec
xchg
add
mov
push
daa
shlb
jnp
xor
lods
inc
dec
and
sub
sbb
pop
fs
movsl
xlat
cli
mov
jnp
jbe
test
frstor
inc
jge
cltd
jae
int3
test
and
sbb
xchg
outsl
lods
inc
pop
sbb
pop
mov
pop
sub
sti
or
cltd
mov
inc
out
int
or
push
les
jle
sub
ljmp
dec
sub
fdivrl
mov
psubq
test
addr16
repz
aad
js
or
mov
jne
mov
sub
jbe
stc
lcall
pushf
int3
repnz
add
pop
add
xchg
rcrb
mov
jbe
outsb
fdivs
push
jp
lods
jns
inc
xchg
out
adc
mov
lds
cs
jb
mov
cltd
shll
or
sub
sbb
mov
leave
sub
and
xchg
inc
imul
mov
jmp
dec
adc
test
aaa
scas
or
dec
mov
idivb
ljmp
inc
pop
xor
lods
or
add
mov
lcall
or
stos
jne
dec
orb
in
aad
and
xor
push
jecxz
push
pop
jl
shl
or
jb
scas
jg
fisubs
ja
mov
into
sub
das
cmc
jge
mov
sub
cltd
hlt
daa
pusha
sbb
pop
jge
lock
jno
sbb
sub
fimull
ret
mov
inc
adc
ja
xor
mov
bnd
shl
repnz
sub
sbb
mov
sahf
ret
jecxz
sbb
push
hlt
repz
jnp
cmp
cmpsb
cld
das
sarb
popa
cmp
lods
sub
es
mov
mov
daa
das
aam
aas
xor
addr16
mov
ds
insb
hlt
jns
cs
pop
and
mov
adc
negb
or
lods
and
sub
pop
and
pop
mov
xchg
cltd
cmp
cmpsl
inc
cmp
arpl
cmp
xor
popw
cltd
scas
movsb
dec
pop
sbb
mov
cmp
imul
jle
es
out
sub
lret
push
rcrl
imul
mov
mov
inc
mov
xchg
outsb
mov
dec
mov
and
xor
push
in
pop
sahf
inc
xchg
push
in
gs
jns
ret
push
andl
test
push
cmpsb
push
dec
xor
add
adc
push
jmp
adc
xchg
cmpsl
je
mov
or
push
sub
xchg
adcb
mov
or
xchg
push
pop
jo
cmp
movsb
pop
daa
push
aam
out
cmpsl
push
in
dec
call
shlb
adc
fs
imul
jae
sbb
xor
mov
push
js
mov
push
mov
loop
and
rorb
sub
adc
shrb
ret
pushf
dec
xor
jl
cmc
mov
scas
xor
dec
adcb
repz
dec
lcall
fs
sbb
aaa
push
test
pop
aam
rclb
xchg
mov
mov
out
ja
addr16
push
mov
adc
pusha
fstpl
pop
xor
hlt
in
cli
sub
mov
inc
sti
adc
mov
push
pop
or
mov
adc
xor
out
imul
test
pushf
into
xlat
adc
rol
mov
cmp
scas
pusha
mov
inc
dec
adc
pop
lods
call
subl
mov
jb
jae
cmpsl
sub
ja
bound
andb
leave
mov
mov
cmp
inc
mov
shrl
mov
loop
push
pop
or
in
push
ficoms
mov
jb
cli
imul
dec
inc
mov
lods
ret
nop
adc
jmp
gs
aad
scas
push
cs
cltd
sbb
aas
mov
and
addr16
pop
mov
out
mov
xchg
cltd
fcmovb
ljmp
mov
cmc
in
adc
call
movsb
cmp
gs
into
push
es
sbb
movsl
xor
ret
inc
aam
cmp
inc
add
lret
jno
mov
mov
add
lahf
push
xor
and
adc
scas
mov
xor
insl
cmp
jb
cmp
pop
std
sub
cltd
cmp
out
xor
sbb
shl
adc
test
jne
sbb
dec
cld
call
in
sbb
jle
fsts
fcmovnu
and
jmp
dec
mov
andb
push
scas
mov
jne
data16
lds
add
movb
add
sbb
or
mov
daa
scas
fidivrs
std
aad
adc
xor
jb
fdiv
inc
lea
adcl
adc
mov
neg
scas
mov
push
jae
sbb
test
jmp
into
jmp
xchg
mov
jge
xchg
repnz
adc
stc
lea
inc
and
jecxz
pop
popf
bound
or
std
ret
push
mov
stc
and
insb
out
push
cmpsb
scas
lods
and
and
fwait
jb
mov
push
jbe
pop
push
add
es
push
xchg
movsl
xchg
daa
out
xacquire
add
xor
movsl
insb
jae
idiv
roll
pop
testb
cmp
loope
xlat
out
mov
icebp
and
and
mov
shlb
push
adc
push
mov
movb
xlat
xor
lret
pushf
sbb
cmp
idivb
pop
ja
ficoms
outsb
shrl
out
push
enter
outsb
das
mov
das
xor
sub
pop
pop
mov
subb
jno
data16
in
aas
or
push
xor
fs
inc
mov
mov
inc
jno
enter
dec
aaa
jmp
mov
aaa
dec
movsl
movsb
cmp
icebp
jb
add
test
rclb
negb
int
xchg
leave
lds
jne
insb
ja
iret
rolb
scas
mov
pop
xchg
and
setns
mov
movsb
sbb
cmp
out
dec
pusha
popa
cmp
data16
incb
jns
insb
sub
jo
jo
cli
addr16
mov
loopne
jecxz
int
cmp
pop
jmp
cltd
into
mov
ja
cmc
mov
xor
adc
lcall
mov
pop
jae
jnp
test
in
stos
adc
sub
test
lock
inc
add
stc
shl
aam
mov
std
pop
xor
cmp
int3
push
dec
mov
and
adc
ds
popa
fistpl
push
ss
jmp
aam
jle
add
shll
sahf
out
shrl
xchg
mov
jg
rolb
outsb
andl
repz
push
ss
out
adc
scas
sub
shll
js
mov
xchg
das
test
lock
inc
mov
loope
pusha
lahf
stos
sarl
jge
dec
add
lahf
fs
stos
pop
cmp
pop
push
jne
jg
popa
in
jp
fisubs
rorl
sub
outsb
aad
sub
imul
inc
fimuls
cmp
xor
ljmp
inc
cmp
fxch
mov
mov
addr16
xor
sub
rol
sub
out
dec
out
insb
mov
inc
push
outsl
pop
ret
mov
sarl
imul
faddl
sti
inc
imul
push
and
loopne
dec
das
push
not
jbe
leave
mov
mov
adc
imul
inc
pusha
test
mov
movl
or
aam
enter
add
mov
push
enter
movsb
test
popa
mov
loope
mov
pop
test
aam
rcrl
xor
stos
ljmp
in
jnp
xchg
push
lcall
je
fistpll
clc
pop
mov
into
and
xor
mov
pop
stc
xlat
xchg
push
cmpsl
dec
pop
jnp
fidivrs
push
outsl
push
in
mov
int3
pop
stos
fidivrl
xchg
add
adc
js
decb
pop
sub
jo
add
inc
cltd
cmp
je
push
jns
cmc
mov
xchg
and
jp
or
pushf
cmp
icebp
add
lahf
mov
add
lcall
pop
das
leave
pop
jae
cld
and
push
cwtl
imul
fisubs
out
sub
scas
nop
clc
aaa
pop
fistpll
pop
cmpsl
mov
dec
pushf
mov
lods
imul
loop
test
push
mov
subb
ja
das
shrb
push
loope
rcr
dec
dec
out
arpl
or
call
jns
arpl
dec
xor
movsl
mov
loope
ret
arpl
cmpsl
iret
ds
ljmp
push
xor
sbbl
add
sti
gs
fs
xchg
je
mov
jno
lock
loop
ja
sub
popa
mov
jmp
lret
jo
movsb
std
sub
dec
mov
ds
cmp
mov
into
fs
lret
leave
cmpsl
add
cs
aam
das
add
mov
inc
enter
sbb
or
addr16
adc
outsb
lcall
fwait
js
dec
call
push
fsts
add
fdivp
loop
push
jo
xchg
shrb
mov
popa
inc
sub
pop
or
rcrl
jl
aad
std
dec
fstpt
lds
mov
mov
mov
test
sub
dec
inc
stos
clc
sub
jno
test
loop
and
mov
aam
ljmp
aad
test
and
push
sbb
pop
mov
repz
loopne
mov
stos
mov
out
dec
cltd
or
ret
mov
push
test
leave
push
fildl
push
mov
push
out
fxch
out
jle
cmpsl
push
fdivrs
sub
jae
clc
fwait
mov
fildl
cmp
cwtl
insl
adc
add
dec
inc
dec
adc
stc
add
scas
cmc
mov
jnp
stc
inc
sub
les
aad
scas
jg
mov
pop
rcl
insl
jle
incb
mov
out
sub
adc
gs
jnp
or
in
nop
js
sti
dec
xchg
out
jmp
cmpsb
jae
lods
cmp
push
or
or
ds
jns
call
fmulp
adc
rclb
roll
insl
xlat
add
xor
inc
imul
push
xchg
ljmp
xor
pop
xor
ret
lret
push
xchg
aam
mov
sahf
xchg
subb
por
cmpsl
jl
adc
sub
cld
int
push
or
ret
sub
pop
and
inc
into
xchg
or
aam
jecxz
scas
int3
mov
sub
mov
sbb
pop
inc
mov
aad
fmuls
mov
jno
pop
je
dec
icebp
mov
or
into
ret
xchg
cld
cmpsb
push
xchg
add
test
std
addr16
dec
dec
xchg
mov
int
jle
jne
jns
and
adc
pop
outsb
testl
push
hlt
loop
mov
mov
push
push
mov
mov
negb
ljmp
xchg
sbb
jne
cwtl
jmp
les
insl
or
mov
and
inc
mov
roll
sar
add
daa
and
mov
jbe
xchg
push
aas
sub
nop
cmp
jno
pop
pop
std
mov
stc
jmp
cltd
pop
in
mov
ja
jo
mov
aaa
pop
or
pop
sub
fildll
pop
pop
fbstp
in
mov
jbe
shl
cmp
cmpsl
push
test
dec
movsl
add
sbb
lahf
sub
sbb
xchg
fsubr
pop
xor
mov
add
lds
dec
inc
pop
pop
dec
xchg
loope
push
add
pop
xchg
orb
inc
sub
stos
dec
adc
out
jmp
dec
dec
mov
sbb
sub
mov
or
xchg
cmpsb
xchg
push
xor
pushf
ja
rolb
insb
adc
jle
mov
ss
mov
mov
mov
movsb
pop
fdivrl
lock
pushl
jns
andl
mov
mov
jns
jle
mov
mov
xor
mov
lea
movsl
cmp
sub
in
loope
arpl
mov
pop
mov
mov
mov
or
or
fisubrs
mov
div
mov
pop
and
inc
mov
fisubl
inc
sti
lcall
jmp
rol
xor
popf
xchg
add
cmp
iret
std
mov
adc
popa
dec
cmpsl
shll
add
jl
data16
jbe
int
jl
mov
nop
inc
ljmp
outsl
and
pushf
ja
sbb
mov
nop
mov
jecxz
and
fadds
adc
pop
sbb
shrb
ret
push
mulb
lret
ficoms
mov
fldenv
aas
dec
outsw
dec
add
inc
fwait
addr16
popf
mov
daa
outsl
push
cmp
add
in
test
sub
int
in
lods
push
sbb
adc
adc
fistps
dec
int
or
adc
and
lret
mov
mov
mov
je
pop
test
sbb
pop
mov
cmp
pop
int
cmp
jmp
fwait
mov
pop
add
mov
stos
xchg
jp
xlat
shll
adc
or
dec
cld
das
mov
inc
mov
pop
xlat
cmp
jge
lret
ja
inc
popa
cmp
and
push
popf
stos
sbb
bound
loope
mov
pop
sub
shll
adc
imulb
xor
xor
les
push
or
repz
fnsave
cs
push
dec
inc
js
xchg
push
mov
mov
lods
jbe
xor
push
fs
test
wbinvd
cltd
sbb
pop
mov
and
cwtl
mull
and
add
pusha
repz
pushf
fwait
std
mov
rorb
inc
xchg
int
push
leave
testl
mov
jb
pop
inc
stc
es
xor
cs
mov
xchg
mov
dec
cmp
cwtl
ret
or
xor
pushf
out
pop
imul
xor
lods
rcr
fdivrl
insl
push
pop
or
ret
sbb
outsb
std
sbb
sbb
lret
push
or
dec
fcoms
push
push
test
dec
mov
f2xm1
pop
sbb
inc
jne
pop
pop
push
or
push
inc
mov
xchg
testl
iret
ret
out
and
gs
push
lret
push
jbe
lret
inc
jg
push
push
dec
jp
bound
out
adc
imul
sbb
lock
icebp
jb
jl
cmpsb
out
popa
mov
inc
sarl
push
test
sub
aaa
and
push
bound
lock
mov
dec
fwait
sbb
and
push
addr16
iret
mov
aaa
fnstenv
ja
icebp
sbb
xor
cmp
mov
mov
push
jmp
xlat
inc
add
clc
or
in
lret
push
xor
and
sub
push
push
mov
in
loop
jbe
xchg
mov
lret
mov
fwait
jmp
push
leave
stc
and
scas
ror
add
test
fldcw
stc
aad
cmpsb
pop
outsl
in
adc
push
test
fstpt
push
dec
fstpl
sub
cli
xchg
jg
mov
xor
jns
mov
pop
test
lods
sahf
mov
orb
negb
cs
cmp
push
fcomps
popf
or
lds
stos
paddsw
arpl
inc
and
pop
xor
xor
in
jb
dec
jns
mov
pop
pop
out
push
add
fstpl
std
movsb
mov
cmp
sub
sbb
aad
xor
aas
jl
sbb
outsb
xor
fs
les
js
mov
sub
sbb
popa
ljmp
cmc
cmp
nop
jle
or
adc
jbe
adcb
daa
test
rcll
test
push
ret
adc
aam
mov
cmpl
in
cs
push
sbb
jl
fstl
shlb
or
hlt
dec
sub
lods
call
dec
mov
lods
mov
pop
rorl
mov
sbb
sbb
push
insl
pop
imul
fdivrp
adc
sub
pop
insl
inc
xchg
das
loope
inc
xor
mov
hlt
push
push
or
inc
lret
add
xlat
xor
sub
jns
push
pop
pop
xchg
adcl
andb
mov
cmp
adc
mov
imul
push
aam
sbb
xor
lock
dec
inc
or
mov
sahf
dec
mov
ds
sub
test
and
test
sub
insb
mov
cmc
add
fldl
dec
mov
pushf
dec
adc
sub
icebp
sub
and
mov
jecxz
pop
add
push
or
cmp
push
inc
mov
lcall
and
dec
inc
or
and
inc
dec
mov
mov
scas
jmp
fisttpl
jb
push
loope
pop
mov
andl
pop
insb
or
adc
cmpsl
mov
cmp
jl
in
or
es
ja
jmp
lret
mov
xchg
jge
sarb
cmp
mov
shr
jl
push
mov
cs
xchg
push
pop
jl
sarb
ds
xor
mov
ret
xor
inc
xchg
test
sbb
call
dec
xchg
imul
push
inc
mov
insl
xor
or
pop
in
sub
icebp
cmp
sub
and
xchg
mov
push
jecxz
xchg
sete
mov
sub
movsb
cmp
add
or
popf
add
push
cmpsb
pop
add
addl
and
or
cmp
test
xlat
sub
mov
jbe
fsubrp
orl
mov
mov
outsl
imul
cli
sub
fnstcw
mov
fs
sbb
loope
ficompl
jg
mov
clc
imul
insb
data16
enter
cmp
mov
mov
pop
sub
push
fstp
xor
inc
lods
push
fbld
and
xchg
cmp
mov
cmc
jb
fistpll
mov
rorl
divl
xor
decl
fadds
jne
cwtl
or
std
fcoms
jae
push
pop
jae
push
pop
and
fldlg2
mov
cltd
data16
inc
push
mov
pushf
jo
cwtl
inc
push
iret
push
test
jp
dec
jge
into
inc
aam
cmc
pop
hlt
in
hlt
das
aas
dec
jno
sub
sub
add
shll
ret
lods
mov
sar
fmuls
into
lahf
sbb
stc
sti
xlat
pushf
xchg
subl
movsb
test
mov
adc
and
cmp
adc
std
lds
cmp
jae
jp
pop
cltd
adc
cld
test
cmp
jo
mov
dec
outsb
pop
out
lods
testb
push
test
mov
or
jmp
inc
cld
bound
sbb
scas
jmp
sbb
dec
xchg
daa
aad
xchg
gs
jg
mov
xor
jb
mov
test
mov
jp,pn
add
push
mov
jne
repnz
jne
in
cli
mov
jl
pop
mov
pop
jnp
data16
jae
mov
push
xchg
pusha
cmp
push
sbb
enter
mov
in
shlb
or
push
xlat
rcrl
inc
dec
jbe
stos
mov
out
test
js
or
inc
fs
jns
lea
xchg
and
or
and
sti
xchg
popa
mov
aad
cmp
pop
push
xchg
rcrl
mov
mov
andl
or
je
insb
mov
push
xchg
and
subl
cmp
xchg
movsl
cmp
cmp
pop
lahf
cmpsl
subl
fdivrl
fisttpl
push
or
loop
jb
and
adc
pop
int3
stc
xor
cltd
popa
cmp
movd
adc
inc
mov
sub
iret
mov
jbe
pusha
or
dec
jl
dec
mov
inc
cwtl
cmpsl
adc
pop
jbe
fbld
mov
mov
imul
gs
neg
cmp
fisttpl
sub
repnz
or
jecxz
cli
lahf
rorb
scas
jmp
bswap
stos
push
jl
xor
sti
cmp
mov
cmp
jb
rol
imul
jle
arpl
in
cmp
mov
sbb
iret
mov
test
out
sub
pop
cmp
aas
data16
scas
lock
stc
xor
aaa
jno
mov
test
cmp
pop
ljmp
and
and
fmull
in
leave
jge
jno
gs
scas
jmp
push
mov
and
mov
lods
xlat
aad
mov
add
xchg
notb
adc
jmp
in
jae
mov
xor
dec
and
cs
xchg
xor
push
or
and
mov
and
hlt
jo
cltd
xchg
cs
pop
xlat
call
pop
or
pop
popa
lock
dec
ljmp
loope
shrl
enter
or
pushf
add
test
mov
xchg
add
inc
push
fwait
inc
ret
pop
xor
enter
lods
push
scas
cmc
jnp
out
sti
mov
les
clc
push
sub
jb
stc
dec
push
std
or
inc
mov
mov
js
aaa
ljmp
mov
dec
push
ret
sti
push
loope
pop
aas
mov
add
scas
adc
xchg
cmc
cmpsb
ficoms
fucomp
fiadds
xchg
cmpsl
mov
hlt
outsb
push
adc
dec
lret
test
inc
out
aaa
push
xchg
out
aam
ret
sbb
xchg
lds
faddl
inc
mov
xor
aas
jne
xchg
fnstenv
add
popl
scas
xchg
cmp
and
lret
sahf
aam
or
jle
cmpsl
xorb
imul
pop
or
cmp
pop
mov
icebp
sbb
dec
mov
add
insl
pop
xchg
test
test
stos
dec
cmp
lock
fildl
mov
or
push
dec
ja
and
sti
ret
loopne
lcall
fmull
fmul
and
pop
jno
jmp
mov
popa
lret
mov
push
add
mov
cmp
mov
and
in
pop
subl
jne
mov
xlat
scas
popa
scas
notl
cmp
pushf
loop
inc
scas
mov
jae
int3
dec
arpl
adc
into
xlat
dec
lock
into
mov
add
inc
dec
test
pop
xlat
mov
mov
fs
mov
pushf
mov
popa
aas
data16
lea
fcomip
cmc
cwtl
repnz
shll
fwait
pop
std
cmp
mov
aad
scas
dec
sbb
ficoml
push
cmp
mov
cld
and
pop
push
bound
sbb
jecxz
mov
cs
xchg
aaa
push
ds
push
cmp
int3
enter
fnstsw
and
push
add
inc
jecxz
scas
loope
div
int3
adc
cmp
xchg
and
pop
popf
cmpsl
movsb
mov
lock
lds
sahf
mov
loopne
mov
sub
adc
mov
scas
sub
mov
ss
mov
lcall
sub
cltd
cmp
xchg
and
clc
sub
enter
mov
cld
sbb
adc
jnp
out
clc
jmp
and
test
inc
imul
popf
fwait
in
sub
ja
inc
or
adc
push
movzwl
lds
push
mov
rorb
rcl
int
mov
ja
pop
cltd
add
mov
out
cmp
fcomps
and
and
push
lret
cmp
in
aam
mov
or
push
test
mov
jl
sbb
les
and
mov
call
mov
jae
cli
je
gs
xchg
movsb
push
mov
and
mov
inc
adc
xchg
inc
loop
in
ss
mov
movsb
mov
sbb
iret
mov
mov
push
cmpsb
push
add
pop
xchg
pop
sbb
aas
sti
adcl
sbb
mov
xor
jae
push
add
ret
jbe
push
int3
sbbl
ss
sub
test
js
negl
cmp
mov
cmpsb
call
shrl
cli
aaa
xor
fisttpll
int
scas
jecxz
pop
jmp
jnp
fsubrs
rcll
out
adc
add
pusha
pop
adc
les
mov
inc
pop
ja
add
clc
repnz
and
or
fistpl
int
and
xchg
pushl
push
adc
jg
roll
jne
sti
fwait
sbb
dec
inc
lahf
out
jp
sti
cli
ds
insl
jns
mov
in
xor
inc
les
mov
daa
and
xchg
stc
in
add
or
sbb
in
sbb
call
iret
shlb
xchg
cmp
adc
dec
lea
add
dec
pop
push
fiadds
scas
out
jae
imul
clc
std
pop
mov
pop
jg
cmp
mov
cmp
mov
nop
inc
orl
cmp
and
ss
push
mov
adc
jno
stos
push
mov
mov
jnp
adc
dec
shl
inc
es
ljmp
or
in
jg
aaa
test
pusha
negb
shr
ja
imull
pop
fwait
test
cs
jmp
mov
shlb
movsl
or
ret
ja
push
mov
cmp
rolb
pop
outsb
cmpsl
hlt
adc
add
xchg
adc
mov
xchg
mov
ret
out
insb
adc
mov
fistps
cmpsl
outsl
inc
les
leave
pop
mov
dec
loop
mov
loopne
mov
push
out
xor
adc
jb
jnp
cwtl
sbb
in
out
adc
dec
sbbl
xchg
in
mov
push
mov
dec
xlat
pop
lods
out
mov
adc
in
clc
xchg
push
xchg
dec
cmp
sahf
cs
repz
mov
adc
push
or
push
call
cmp
sub
mov
add
mov
fst
in
or
cmc
jnp
cli
xor
aam
repnz
add
jno
es
and
rcll
push
adc
adc
outsb
popf
loope
adc
popf
push
aas
and
cltd
andl
cmp
add
cli
fwait
mov
nop
cmp
xchg
scas
ficoms
outsl
adc
push
mov
push
ljmp
popa
lret
add
test
imull
push
push
int3
cltd
sub
and
or
mov
dec
ret
mov
testb
sub
mov
int3
out
mov
push
punpckhdq
dec
xchg
or
cmp
fs
push
dec
sbbl
mov
repnz
mov
cld
cs
xor
push
jbe
orb
adc
movsl
and
sbb
jns
ficoms
dec
adcb
and
loopne
pop
popl
repnz
jno
mov
inc
xchg
stos
jns
pop
sub
cmpsb
sbb
pop
movsl
push
fdivl
cmc
ja
call
cmp
sbb
lods
lock
out
stos
xchg
mov
dec
and
divl
leave
jle
fcmovnbe
xor
mov
in
in
mov
push
mov
pop
dec
loop
mov
subb
xchg
loope
xor
bnd
enter
test
xchg
sti
pop
pop
adc
dec
cs
fwait
pop
cmp
xchg
pop
lods
sbb
adc
daa
adc
xchg
ds
insb
lret
jge
iret
repz
mov
push
xor
xchg
ljmp
push
mov
scas
dec
pop
add
ljmp
add
aas
je
xchg
sbb
jmp
mov
xor
or
sahf
xchg
outsb
sti
mov
cmovg
xchg
and
xorb
xchg
divb
mov
outsl
push
or
nop
inc
ret
jle
cwtl
cmpsl
xchg
push
fistpl
jle
cmc
gs
imul
sahf
mov
jns
in
mov
out
cli
loop
fwait
adc
js
pop
lahf
jne
and
sahf
push
xlat
pop
je,pt
repnz
jb
fimuls
out
push
roll
sahf
jae
sbb
add
dec
or
pop
inc
lods
loope
testl
jge
aas
sub
xchg
aad
into
mov
dec
data16
push
mov
push
lods
and
aaa
cmp
outsb
inc
pushf
adc
jg
jg
pop
bound
sub
js
pushf
xchg
pop
rclb
xchg
cmp
clc
and
cwtl
jbe
js
dec
into
sub
test
mov
jo
mov
test
xlat
dec
cltd
mov
pop
lahf
nop
arpl
cmpsb
cmpsl
fldl
mov
cs
mov
addr16
xchg
cmp
xchg
out
scas
push
mov
jno
xor
aas
cwtl
icebp
mov
push
inc
into
mov
mov
out
les
outsb
out
inc
pop
out
popf
cld
and
shlb
inc
push
in
dec
add
mov
inc
mov
stc
sbb
repz
out
dec
cmp
sahf
inc
cmp
inc
push
call
jae
push
jns
jp
fwait
adc
ljmp
cmpsl
mov
out
dec
mov
ljmp
cmp
lret
das
pop
mov
mov
jb
push
outsb
das
iret
out
sub
test
movsl
push
xorl
cmp
sub
sub
lcall
inc
mov
pop
jbe
arpl
out
jecxz
add
gs
add
fs
shl
aas
int3
mov
add
jmp
dec
pushf
xor
sbb
and
lock
cmpsb
or
pop
test
stos
cmc
sbb
outsb
shr
push
test
xor
mov
bound
lret
and
imul
dec
xor
aad
call
dec
pop
cmpsb
push
adc
xor
and
mov
jae
andl
xchg
mov
cmp
mov
push
icebp
cmp
icebp
sahf
jge
or
xchg
jo
out
ret
xchg
jns
outsb
push
daa
lock
adc
popf
lods
sub
int
adc
mov
fisttpll
mov
lds
cmp
nop
dec
and
loop
nop
mov
xorb
imul
sub
inc
xchg
cmp
pop
mov
sub
stos
and
mov
out
sbb
lods
shlb
repnz
pop
div
js
cmp
pop
push
sahf
cwtl
mov
inc
mov
outsb
mov
xchg
test
inc
sahf
fwait
or
sbb
fiaddl
notl
ds
mov
mov
mov
jmp
movsl
lock
mov
pop
popa
inc
sbb
sub
inc
and
jne
cmp
mov
aaa
test
repnz
push
mov
sbb
loop
sti
or
frstor
jg
xor
inc
rcrl
mov
insb
xchg
rorb
iret
fmuls
hlt
adc
mov
push
pop
popf
mov
sub
imul
arpl
push
push
les
jp
push
mov
push
hlt
sbb
ror
enter
add
sub
jb
test
inc
inc
or
xchg
aas
aaa
cmc
mov
hlt
jp
jnp
sub
or
xchg
ret
sub
inc
daa
dec
int3
jns
lds
repz
cli
icebp
je
xor
sub
jmp
xor
and
fidivrl
push
rcrl
push
push
es
add
mov
pop
mov
fstp
xchg
popa
or
jae
ja
sub
adc
push
ficomps
pushf
xor
jbe
lods
inc
adc
in
sub
push
xchg
add
iret
cs
rcrb
mov
sub
mov
outsb
xor
inc
outsb
push
or
xor
push
mov
loop
sub
sub
fstpt
jae
repnz
fldenv
push
bnd
fnsave
call
inc
insl
sub
and
push
dec
pop
pop
mov
dec
xlat
and
mov
out
dec
push
mov
adc
outsb
ljmp
jno
sbb
jge
mov
mov
mov
in
dec
pop
icebp
jno
xorb
insl
js
pop
lret
rclb
imul
jecxz
jno
loop
addr16
add
addb
loop
mov
arpl
xor
or
das
xchg
ret
mov
xchg
xor
mov
xor
gs
cmpsb
mov
test
in
sti
sub
stc
fidivs
sub
jecxz
fs
xor
call
inc
aaa
pop
ja
and
mov
cwtl
lds
shrl
pop
cmp
out
divb
aad
jns
movsb
sub
movsl
jno
inc
add
leave
and
dec
lods
xor
or
hlt
mov
mov
mov
mov
scas
aas
adc
cli
xor
test
xor
cmp
leave
push
or
leave
push
outsb
pop
cwtl
sahf
xor
xorl
cld
shr
xchg
cmp
int
popa
jnp
push
pusha
dec
clc
ja
dec
push
jg
aam
fst
push
out
jb
loop
enter
pcmpgtw
fsubr
jp
add
cmp
imul
scas
xchg
into
fidivl
xorl
dec
out
jbe
and
lcall
lods
movsb
lods
imul
mov
push
pushf
adc
dec
ljmp
pop
bnd
div
fcompl
push
mov
sub
int3
lahf
mov
clc
jg
mov
es
testl
insb
pushf
call
adc
jmp
lret
xchg
cmpsb
adc
cmp
push
std
and
cli
mov
cmpsl
add
push
iret
push
jp
sbb
push
push
loope
and
sahf
jnp
push
mov
push
adc
mov
push
and
mov
add
jb
push
dec
data16
mov
mov
inc
sbb
dec
cmpsb
aaa
pop
out
xchg
add
loope
sbb
mov
or
mov
pop
and
cli
pop
jnp
dec
das
adc
daa
test
mov
mov
stos
fsubl
daa
adc
fs
mov
dec
mov
push
jecxz
push
inc
inc
popa
mov
mov
ja
imul
mov
cmpsl
out
imul
stc
data16
mov
mov
mov
inc
mov
cmc
push
clc
ret
insl
pop
fmuls
pusha
mov
sub
daa
lods
sbb
push
and
lods
push
adc
inc
stos
jecxz
jl
lret
cmp
cmpsb
sub
shll
xor
mov
imul
mov
dec
out
or
push
ret
aas
and
ss
mov
dec
pop
fwait
xchg
adc
lods
popa
lods
pop
push
pop
stc
inc
mov
push
or
mov
sub
insb
add
adc
int3
xchg
lcall
pop
test
in
adc
fldl2t
sbb
loope
xchg
in
lcall
sub
fcomps
fdivl
mov
dec
fbstp
and
mov
pop
jge
mov
loope
xor
dec
popa
sbb
pop
testb
push
mov
jae
cmp
mov
int
xchg
ja
inc
xchg
and
enter
add
inc
push
dec
in
sbb
hlt
sub
in
pop
and
xor
jecxz
clc
pop
scas
cbtw
pop
gs
mov
jns
subb
sbbl
es
jecxz
and
cmp
scas
sub
mov
pop
jb
push
lcall
mov
add
push
fldl
stc
sbbl
into
fsubrs
push
jo
ss
mov
movb
push
jle
cmpsl
fsubrs
mov
pop
jbe
adc
jecxz
xlat
pop
lcall
push
pusha
mov
loop
out
xchg
icebp
mov
xchg
inc
test
sarl
add
mov
andl
adc
push
int3
mov
cmp
dec
xchg
xchg
jo
ds
mov
sub
or
in
xchg
inc
mov
pop
mov
jmp
les
sub
or
mov
mov
aad
add
and
add
inc
imul
rclb
cld
push
in
push
xor
inc
mov
aas
xchg
fmul
mov
outsb
pop
push
add
or
add
mov
sbb
lea
mov
jmp
lods
cmc
and
cwtl
dec
popf
out
pop
jae
std
mov
mov
or
mov
adc
mov
mov
xor
sbb
fsubrl
sub
push
lcall
lcall
adc
xchg
pop
add
pop
jge
iret
rcl
xorl
sbb
xor
mov
sahf
and
push
sbb
sub
ja
mov
sbb
cld
orb
iret
call
ds
xchg
dec
jge
dec
and
lcall
shll
int3
xor
pop
pop
divl
mov
orb
ret
into
xchg
ret
rclb
xchg
cs
mulb
jo
inc
insl
mov
repnz
ljmp
je
lret
out
hlt
add
sub
mov
push
enter
cmp
push
ret
cmp
sub
out
out
pop
pushl
ss
mov
dec
pop
inc
jl
or
push
insl
mov
and
mov
adc
jbe
sub
lcall
gs
push
lods
adc
mov
xchg
shlb
hlt
adc
inc
andl
adc
jecxz
pop
add
outsl
leave
jecxz
sbb
sahf
sbb
dec
fstpl
pushf
enter
aas
jmp
pop
or
fsubs
mov
leave
mov
mov
mov
jl
xor
jae
movsl
repz
add
cmpsb
lea
pop
mov
jno
inc
jo
xchg
scas
sbb
cmp
clc
int3
add
and
sub
xor
lea
sbb
mov
cmpsb
add
fdivr
setns
sahf
in
shll
daa
nop
popf
dec
aam
mov
xchg
xchg
mov
push
dec
or
mov
rorb
jmp
inc
sahf
push
push
repz
mov
je
ret
gs
cmpsb
cli
and
cmp
ss
std
mov
das
pushf
imulb
inc
and
call
negb
pop
or
mov
testl
xor
mov
push
jbe
adc
and
pop
aaa
sbb
aad
add
lods
xchg
test
aam
rclb
mov
jmp
rorb
lcall
sbb
fisubrl
std
stos
ds
mov
ja
out
adc
loope
fcmovbe
lahf
push
jae
add
inc
sbbl
jb
xlat
xlat
int3
loopne
sub
addr16
nop
jmp
movsl
ja
jb
cld
sub
jg
and
pop
mov
ds
in
movsl
inc
jp
or
ror
or
scas
fucom
arpl
push
movsl
hlt
rcrb
les
cwtl
mov
shl
fdivr
test
cmpsl
fdivl
jle
loope
pop
xchg
fmul
sbb
cmpl
outsl
mov
adc
inc
aaa
push
fidivrs
test
call
stc
pop
jno
mov
mov
pop
dec
popa
subl
test
adc
mov
jb
arpl
pushf
inc
mov
push
inc
mov
int
out
repz
push
loopne
mov
adc
sbb
mov
xor
pop
inc
stos
jno
xor
push
pop
lret
sbbl
in
add
mov
insb
mov
sub
into
gs
sbb
imul
inc
aad
js
mov
test
fwait
loope
mov
xchg
mov
add
adc
jecxz
mov
movsb
bsf
test
lcall
dec
shll
sbb
mov
mov
test
daa
clc
sub
jecxz
out
cmp
jne
mov
dec
sbb
pop
test
loopne
xor
lods
ja
pop
push
pop
adc
and
out
enter
fisttps
jle
pop
sbb
rcr
test
cld
insb
sub
scas
mov
jnp
int3
and
cmp
je
push
dec
add
and
dec
adcl
into
or
imul
jnp
mov
pop
push
jbe
xchg
mov
not
cld
and
mov
add
ljmp
xor
fbld
sahf
aad
mov
lea
insb
cmp
jnp
push
sub
test
decb
mov
sub
and
jmp
lcall
fadds
add
leave
pop
loopne
mov
or
push
cld
dec
add
fwait
sbb
sbb
leave
adc
sub
xchg
mov
stc
clc
je
je
loope
scas
cmovs
dec
sbbl
aam
push
jae
adc
cmp
scas
pop
aas
ret
xor
pop
sub
ss
mov
and
pusha
xchg
mov
test
inc
pop
lret
or
sbb
mov
inc
flds
cltd
add
jecxz
and
jne
push
in
jp
cmp
daa
and
jns
dec
ficoms
add
add
js
xor
aam
jnp
lcall
popa
es
mov
int3
inc
inc
dec
pop
cmpb
aad
subl
xchg
loop
mov
cs
sbb
adc
nop
push
pop
in
or
jne
or
addb
fcoms
test
daa
and
out
sub
sbb
movl
bound
cli
pop
imul
sbbb
xchg
ss
out
test
mov
inc
shrl
insl
addl
enter
mov
movsl
mov
ja
scas
xchg
mov
sti
cs
add
mov
cs
adc
mov
into
xchg
lea
cld
sysenter
inc
enter
jne
cltd
sbb
aad
dec
cmpsl
prefetch
movsl
arpl
imul
ret
gs
loope
loope
xchg
add
fadds
out
cmp
mov
loopne
sbb
xor
fisubrs
out
cs
lret
pusha
ret
jmp
or
pop
mov
and
push
icebp
push
mov
sbb
xchg
and
xchg
jecxz
xor
xchg
shlb
ret
and
dec
out
aam
les
mov
inc
add
jb
cmp
inc
int
or
outsb
and
clc
inc
or
jle
cltd
insl
jge
sub
test
mov
xchg
add
dec
sbb
fs
or
xorb
aad
fstl
test
adc
jg
or
push
pop
test
daa
or
aaa
fcompl
sbb
jmp
insb
xlat
inc
and
push
push
mov
fnsave
cs
xor
mov
test
stos
das
push
lcall
sti
subl
adc
lock
sarb
out
or
int3
push
adc
movsl
dec
or
mov
jbe
es
and
lahf
pusha
jns
add
fbld
cmp
dec
push
stc
xchg
xor
ret
pushf
les
and
rorb
aas
inc
xlat
or
stc
pushl
andb
mov
fdivs
mov
xchg
adc
mov
sbb
xchg
push
adc
movb
dec
cmpsb
movq
fidivl
mov
xor
hlt
sahf
jecxz
outsl
std
adc
fistpl
push
push
ss
daa
pushf
repz
rcr
lods
sahf
stos
push
lahf
cmpsb
aad
roll
lcall
dec
inc
in
shl
push
adc
je
aas
pop
mov
lret
shlb
iret
or
icebp
mov
fldcw
and
xchg
mov
add
push
rolb
inc
push
sub
popa
push
sbb
jmp
decl
nop
mov
aaa
clc
sbb
inc
je
enter
nopl
test
push
push
or
pop
decb
gs
loop
add
std
and
stos
mov
sbb
jo
loope
xor
sbb
jne
pop
push
cld
mov
test
mov
or
test
cmpsl
cmp
popf
mov
cmpsb
bound
icebp
popa
mov
mov
ret
aas
xlat
lahf
mov
xor
rcrl
aam
sbb
test
rcr
ds
cmp
addr16
out
dec
cmpsb
fdivrs
es
sub
cmp
pop
sub
xor
pop
imul
mov
aas
push
repnz
sub
rcll
rcrl
push
jmp
roll
sub
fdiv
into
clc
inc
scas
fstps
and
ret
dec
mov
adc
mov
cmp
pop
push
dec
cmp
jg
ret
pushf
and
and
ja
insl
fs
int
aas
mov
mov
sets
and
popl
orb
lds
lds
in
sub
dec
jns
rcll
out
ja
adc
or
shlb
push
std
fsubr
shll
nop
xor
rorl
fcoms
test
outsb
repz
cmp
xchg
sahf
push
arpl
dec
insl
pop
shrl
xchg
mov
ljmp
mov
jl
mov
arpl
pop
mov
inc
std
or
stos
les
out
jno
mov
inc
stc
popf
push
fists
ret
pushf
addr16
sub
lcall
pop
ljmp
sbb
xchg
in
dec
mov
jns
inc
push
inc
negl
sbb
shll
popa
or
mov
push
clc
stos
dec
ret
lret
mov
mov
aas
fisubs
fstpl
mov
jmp
or
rcll
mov
xchg
push
mov
adc
je
out
and
dec
jp
cs
fmuls
or
xchg
mov
rcrl
cmp
pop
push
mov
xchg
into
push
xor
xchg
xchg
test
push
xor
aaa
aam
mov
scas
add
jg
sub
inc
sahf
adcb
incl
cmp
lcall
mov
mov
int
or
fistl
mov
dec
int3
mov
mov
inc
pop
fwait
imull
lds
call
jl
popa
and
mov
ret
test
in
mov
rcl
mov
xor
push
mov
mov
adc
xor
dec
dec
popf
pushf
xchg
movsl
dec
pop
add
push
int
mov
ds
pusha
aas
jb
scas
mov
xchg
jp
in
xchg
mov
xchg
mov
add
testb
sbbb
in
push
jmp
adc
or
aaa
dec
mov
cmpsl
lret
xor
mov
mul
sbb
xlat
push
sub
jbe
stos
int3
daa
cli
push
ja
dec
jmp
fsubs
int3
xchg
enter
push
or
fildll
sub
cmpsb
sbb
cmp
stos
inc
scas
insl
adc
scas
or
or
das
mov
fidivs
jle
cmc
add
int3
and
mov
dec
cmp
sbb
in
jecxz
jg
in
pop
pushf
jae
inc
test
mov
xchg
add
push
cmpsl
push
cmpsl
lea
test
pushf
fs
cs
pop
int
cmpl
lahf
xor
mov
jno
mov
pop
aad
movsl
or
pop
sub
xchg
jne
xchg
push
push
fwait
sub
fmulp
inc
nop
ret
or
loop
das
enter
ret
scas
lret
xchg
push
xchg
push
fs
cmp
pop
or
push
cmp
lret
std
leave
or
dec
adc
cmc
jp
push
mov
adc
je
es
cwtl
mov
psrlw
rcr
aas
push
pushf
inc
mov
cmp
lret
push
jg
cmp
sbb
jmp
sbb
jecxz
xor
into
mov
sbb
sbb
xchg
icebp
push
cmp
cs
int
movsl
scas
xor
rcll
fcmovu
int3
test
out
inc
filds
pop
fisubrs
dec
lea
out
filds
jmp
xor
pop
inc
addr16
cs
outsb
loope
or
repnz
andl
mov
xchg
test
lods
jp
imul
mov
cs
push
inc
shlb
mov
mov
and
inc
cmpsb
out
test
sub
xchg
loopne
inc
push
inc
jo
lahf
repnz
add
js
ljmp
sub
inc
adc
cmpsl
scas
cmp
fmull
gs
wrmsr
addl
rolb
push
and
push
repnz
lds
xor
adc
dec
xor
push
cs
scas
mov
cltd
fmuls
add
or
pop
insl
sahf
mov
bound
hlt
adcb
jmp
sub
jmp
push
sbb
mov
andb
push
jns
jb
cli
inc
ret
mov
jg
sbb
loope
inc
dec
push
or
andl
das
xor
roll
inc
adc
lret
gs
popf
negl
aam
mov
cmp
sbb
pop
fdivrs
stos
jo
xchg
xchg
shll
jg
or
sub
push
scas
pop
jle
mov
fistps
or
lods
les
in
and
movsl
int
lds
popw
pop
bound
gs
mov
pop
test
out
ljmp
ljmp
push
and
and
adc
sub
adc
xchg
addr16
inc
pushf
call
les
insl
jmp
mul
sahf
pushf
and
jno
jge
out
call
push
je
inc
or
shlb
scas
sbb
add
mov
xor
ret
sbb
shll
mov
cwtl
loope
dec
xchg
cmpsb
inc
inc
inc
scas
or
adc
mov
push
and
push
out
jmp
scas
jo
or
lcall
movsb
daa
pop
and
xchg
out
sahf
iret
mov
leave
incb
adc
into
xchg
xor
jmp
das
test
leave
push
imul
or
sbb
dec
jge
sti
ss
icebp
shr
dec
or
cltd
loopne
lahf
call
cmc
mov
popa
cs
repnz
loope
ud1
lret
sahf
ja
ja
bound
mov
adc
dec
adc
cld
cld
loop
outsb
int3
push
dec
xchg
test
push
pop
xchg
sbb
jne
inc
repz
dec
jne
cli
push
fwait
pop
pop
and
fsubr
jno
out
mov
pushf
xor
push
loopne
jbe
aam
fimull
icebp
or
sub
addb
xor
mov
dec
es
cmpl
push
adc
popa
add
or
mov
cmpsl
pop
repnz
les
pop
push
fs
sbb
pop
sarl
mov
add
inc
mov
mov
mov
aam
add
push
push
push
cmp
cmc
adc
lock
pop
rorl
xor
push
jl
inc
andb
mov
push
bound
sub
jbe
pop
add
insl
into
mov
mov
push
pop
xchg
mov
lcall
adc
adc
loop
lods
push
sub
pop
dec
or
fistps
fidivrs
aaa
cmp
into
fidivrl
pop
push
repnz
pop
mov
dec
cmp
dec
lods
stc
ja
imul
inc
outsl
loop
push
dec
imul
mov
cmp
and
ljmp
cmp
inc
mulb
sti
pmaddwd
arpl
lahf
mov
fimull
sbb
lret
sahf
outsb
jns
mov
movsl
add
outsb
inc
and
xor
jg
shrb
push
mov
xchg
and
daa
xlat
xchg
cs
push
aaa
sub
movsb
xchg
mov
lods
jl
mov
push
hlt
add
lds
fdivl
sarl
fidivrs
dec
test
lret
movsl
cmpsb
lods
mov
inc
orl
test
push
scas
test
sbb
push
shlb
loope
mov
lcall
imul
movsl
sub
iret
repnz
dec
int
pop
aad
dec
pop
dec
insl
imul
inc
pop
adc
and
cmp
or
data16
andb
out
cmpb
mov
adc
push
mov
sbb
fidivl
lahf
and
ja
dec
repnz
xor
sbbb
outsb
fisubs
sti
mov
xchg
rclb
jl
pop
jmp
mov
lea
jle
cs
cmpsl
jo
push
scas
decl
out
les
push
loope
mov
popf
jp
sbb
mov
setle
inc
cmp
ret
push
icebp
jns
ficoms
xor
xchg
data16
fisubrl
outsb
test
scas
int3
sub
lods
test
push
sub
pop
aad
iret
cltd
movsl
stc
push
icebp
sbb
mov
lret
jb
fldl2t
dec
mov
mov
and
dec
imul
push
pushf
fcoml
test
add
xlat
bound
xlat
test
cltd
xchg
dec
push
ljmp
ret
arpl
dec
cmp
inc
lcall
inc
fnstenv
jg
mov
movsb
ret
cmpsb
pop
adc
adc
xchg
mov
and
mov
das
insb
cwtl
add
sbb
out
fildll
push
movsl
ss
adc
fxrstor
adc
push
sbb
sub
mov
ss
out
icebp
sbb
imul
fnstsw
inc
lret
and
loopne
lahf
mov
jnp
imul
fidivl
call
jmp
push
push
jbe,pn
sbb
pop
lahf
adc
in
cli
add
popa
in
pop
mov
ret
inc
shrb
pop
push
mov
into
gs
loop
inc
sti
int
xchg
sub
aas
inc
ja
pop
sbb
jle
sti
push
or
data16
sbb
add
cmp
fimull
cmpsl
mov
popf
sub
mov
ficomps
pop
jg
mov
rcrb
sbb
jmp
mov
add
fucomp
in
ljmp
jg
mov
dec
loope
dec
je
jne
adc
cmp
shl
xchg
insl
call
insl
sbb
xlat
fstpl
sbb
adc
push
mov
push
inc
mov
sub
clc
mov
mov
inc
sahf
push
ret
movsl
inc
or
pop
repz
push
pop
fistpl
pop
test
inc
and
mov
outsl
push
add
xor
jbe
dec
jmp
shr
hlt
adcb
mov
mov
and
pop
and
mov
sbb
sub
pop
pop
pop
mov
inc
jo
xchg
cltd
inc
mov
dec
mov
imul
out
mov
adc
xor
insl
fiadds
mov
pusha
lret
cmp
stc
mov
sahf
jno
mull
rorl
mov
or
mov
cltd
mov
aad
fnstenv
stc
cmpsl
and
adc
insb
add
mov
sti
mov
push
adc
sub
int
and
dec
movups
lret
test
sbbl
sbb
mov
outsl
add
rcr
cltd
xchg
and
and
dec
loope
mov
es
pusha
sbb
filds
lcall
lret
and
in
jo
inc
sub
insl
xor
mov
clc
movsb
mov
nop
cmpsb
cmp
cmp
mov
das
rcl
or
xchg
lret
cltd
jno
jb
mov
out
pop
push
push
fwait
scas
in
int3
or
pop
cmp
push
imul
inc
out
icebp
jno
cmp
mov
icebp
lcall
lods
aas
repnz
cs
negl
sbb
add
in
arpl
inc
xchg
into
cmp
and
adcl
and
or
loop
push
dec
and
fldenv
fidivrs
adc
push
imul
loop
ficompl
jno
test
push
mov
mov
push
push
inc
sub
or
and
mov
or
xchg
rep
fdivrs
jo
stc
push
mov
add
or
ljmp
jge
loop
mov
enter
cli
dec
aad
sbb
xlat
pop
adc
sbb
xorb
inc
mov
sub
in
or
sti
sbb
ss
cmc
int3
mov
test
test
shr
cmp
xchg
cmp
mov
mov
push
sub
int
pusha
cld
push
test
xor
cmp
or
mov
cltd
in
lods
or
jl
in
das
lahf
xchg
dec
inc
testl
pop
xchg
push
push
pop
add
outsb
xor
adc
rclb
jns
mov
shl
dec
push
sub
das
xlat
testl
hlt
add
cmp
into
add
les
cmp
cmp
outsl
test
or
aam
rorl
cmc
pop
push
in
or
xchg
cmp
shrb
and
pop
stos
inc
pusha
in
outsl
aaa
mov
iret
scas
pop
leave
ss
lock
into
sbb
stos
sbb
bound
in
cwtl
leave
andb
aam
aam
sahf
in
dec
adc
cs
push
mov
jo
rclb
movsb
xchg
in
mov
shlb
in
sub
outsb
push
inc
imul
scas
psubsb
pop
xchg
push
movsb
ja
xchg
shrb
lahf
shl
jmp
sub
add
or
clc
lahf
add
pop
cmc
nop
jns
out
push
fmul
mov
mov
sub
mov
fstl
rcll
cltd
sbb
sub
xorb
out
push
mov
out
aad
cmp
xchg
sti
xchg
fnstsw
nop
mov
xchg
push
loop
mov
cmpsl
loope
jecxz
add
adc
lret
mov
ret
ret
pusha
mov
sbb
push
xchg
imul
mov
jp
loopne
mov
push
mov
shll
fsubp
pop
jae
aam
push
pusha
cltd
call
movsb
jmp
sub
push
lock
xor
pop
aad
lahf
lret
inc
mov
mov
es
sub
inc
cmc
shrl
cli
leave
jb
addr16
into
push
iret
outsb
or
cli
jecxz
mov
sbb
sub
mov
xchg
or
lods
and
adc
xchg
add
in
aad
int
cltd
in
pop
push
sbb
xchg
mov
inc
movsb
cmp
push
aaa
inc
jo
or
lock
jae
pop
jne
cmp
xor
jno
xorb
jmp
or
fidivrl
mov
pop
jae
int
jmp
cs
sub
clc
mov
mov
pop
xchg
xor
out
sbb
test
popf
xchg
jne
sub
push
inc
xchg
dec
incl
pop
jbe
mov
and
out
xchg
repz
inc
push
xlat
and
pop
data16
iret
shl
les
sti
push
push
sbb
inc
insl
paddsw
sub
mov
inc
cld
mov
roll
cmpsb
or
mov
cmp
sbb
jge
push
das
cli
mull
jo
mov
xor
adc
andl
enter
jmp
js
sti
xchg
and
fildll
mov
sar
stos
push
stos
inc
movsl
aam
pop
sbb
mov
cmp
and
popf
cmpsl
dec
loope
or
pushaw
lea
cltd
sbb
rcrb
rcrl
sub
inc
mov
xor
xchg
mov
jp
dec
loope
mov
add
inc
aaa
fadds
lds
arpl
insl
push
andb
inc
dec
inc
mov
sub
pop
inc
dec
mov
out
test
daa
xor
cmp
mov
jle
push
push
add
aad
xor
aad
lods
mov
out
add
and
stos
jp
fucomp
clc
mov
in
mov
mov
ss
aam
dec
out
daa
in
add
xor
xorl
bound
test
inc
dec
es
lods
and
outsb
lods
or
jp
clc
mov
ficomps
mov
sub
dec
hlt
dec
int
insl
call
push
test
sbbl
mov
pop
int
mov
and
mov
fcmovne
aaa
dec
aaa
sahf
cmp
test
repz
pop
pusha
jle
scas
call
fsts
ror
out
movb
mov
mov
fnstcw
nop
push
stos
fwait
mov
repz
cltd
in
xlat
lret
sub
jle
inc
fwait
into
sbb
stos
jnp
or
lcall
mov
pusha
outsb
sub
cmp
push
sbb
int
test
imul
popa
pusha
xor
popf
aam
xchg
push
frstor
push
pop
fisttps
and
test
out
xor
ljmp
xlat
jl
xchg
add
lahf
fcoml
dec
mov
stos
xchg
loope
xchg
mov
mov
xor
jb
hlt
jo
sub
mov
pop
into
mov
inc
xor
and
pop
arpl
inc
rcrb
xchg
cmpsl
lock
divb
dec
fwait
enter
xchg
flds
and
jbe
imul
fmuls
add
sbb
icebp
cmp
mov
mov
into
loopne
add
ja
mov
leave
xchg
icebp
cmp
int3
xchg
pop
mov
jl
xchg
mov
lcall
sub
inc
gs
lods
mov
mov
in
pmulhuw
shrb
call
mov
sub
daa
fcoml
fldenv
and
mov
in
aaa
daa
es
ret
fdivrl
mov
js
add
lock
jne
repnz
sub
pop
call
bound
clc
inc
ss
mov
test
mov
mov
sbb
pusha
adc
faddp
xlat
cmp
mov
mov
push
push
ds
aad
push
insl
add
fnstsw
mov
or
adc
lea
mov
shrl
xlat
inc
imulb
pop
test
xor
iret
lahf
lea
imul
xlat
add
sub
popf
mov
pop
pop
enter
fsubr
int3
add
mov
loop
jnp
stos
stos
aas
mov
mov
ret
rclb
mov
add
movsb
inc
arpl
lea
sbb
mov
push
sub
pop
test
dec
ror
scas
inc
sahf
push
mov
lahf
scas
ljmp
cmp
inc
movsb
inc
inc
add
pop
popf
inc
jg
lock
gs
mov
mov
mov
inc
iret
movsl
push
jl
outsb
mov
jmp
fs
push
nop
pop
dec
lods
sub
mov
shlb
test
mov
leave
adcb
and
mov
movsb
shll
xchg
xchg
lock
pop
dec
mov
out
movsb
cwtl
jle
scas
ret
or
cmpsl
std
jno
push
int3
or
testl
adc
pushw
outsl
repz
bound
jge
mov
cmp
pop
lret
push
ret
and
dec
movsl
jns
push
push
das
aas
aas
cltd
push
jg
xor
xorl
pop
sbb
cmc
sbbb
fidivs
pop
sbb
mov
mov
mov
dec
nop
mov
jecxz
jo
push
push
gs
popa
out
ds
and
jae
sub
stc
out
sahf
jae
mov
mov
ret
imul
cmp
mov
xor
mov
movsb
adc
sahf
daa
adc
outsb
std
outsl
xorl
push
ja
mov
enter
dec
dec
lahf
ret
imul
js
movsb
or
mov
sar
xor
icebp
pop
ret
sub
fsubp
aaa
sub
test
xchg
inc
jl
in
or
dec
loop
push
mov
or
idivb
xchg
pop
jae
or
loopne
inc
dec
fmuls
mov
xchg
pop
lds
adc
add
jbe
push
scas
out
cmpsl
jg
das
in
sbb
or
cmc
data16
add
icebp
scas
jge
negb
mov
sub
fs
mov
pop
je
jg
cmp
mov
push
ret
test
in
pusha
xor
and
sub
xor
dec
jecxz
jb
inc
mov
mov
js
push
loope
repz
clc
leave
movsl
andb
adc
sarb
popa
popa
dec
mov
jmp
xchg
clc
or
test
popf
ja
and
dec
out
cmp
lods
cmc
mov
roll
add
push
and
cmp
adc
cmp
nopl
js
inc
dec
ret
roll
ljmp
xchg
jnp
rol
fwait
cmc
adc
jmp
ret
loope
jno
dec
ret
lcall
lcall
jle
call
fsubrs
hlt
stos
jl
push
xor
or
jne
cmc
fidivrl
enter
movb
mov
lcall
mov
cmp
adc
hlt
inc
aaa
shrb
sub
outsl
fdivl
popl
xor
pop
pop
dec
sub
stos
lret
lea
adc
xchg
stos
mov
mov
sbb
xorl
and
popf
filds
xchg
lcall
bound
cmpb
pop
hlt
dec
jmp
pop
aad
in
sbb
push
std
fidivl
or
addl
inc
pop
mov
mov
xchg
shll
pop
pushf
inc
mov
sub
ret
or
inc
stos
roll
cltd
jp
cmp
xchg
out
xchg
cmpxchg
nop
iret
lock
xor
inc
mov
xor
pop
and
mov
adc
and
imul
loopne
add
cmp
cmp
in
pop
ljmp
fcmovb
mov
mov
in
in
pop
mov
cmp
iret
dec
pop
in
cmpsb
fs
xor
xchg
jg
mov
mov
mov
orb
mov
lds
dec
jnp
std
xor
mov
in
dec
movlps
nop
cltd
rorl
std
add
addr16
xchg
mov
mov
jnp
mov
imul
inc
push
sub
push
out
pop
ss
xchg
and
lcall
pop
xorl
or
or
mov
mulb
bound
and
je
lock
sahf
out
jo
sbb
into
jg
sbb
adc
xor
inc
jg
lahf
lods
leave
push
cmp
mov
mov
mov
jg
fcoml
push
loopne
cmp
add
adc
jg
popf
data16
cmp
mov
xchg
sbb
or
popl
ror
fimuls
insb
mov
push
jb
add
aam
std
stos
sti
movsb
setae
out
test
popf
push
xchg
jae
stc
jo
xchg
mov
inc
loop
enter
push
jne
outsl
xor
data16
out
shl
outsl
loop
lcall
lret
adc
lea
pusha
pop
fstl
cld
scas
and
sar
add
and
cltd
js
addl
scas
add
push
aad
mov
mov
push
sete
sub
push
imul
gs
cmpb
push
pushf
sti
lahf
pop
jg
sbb
sti
mul
add
mov
cmp
jbe
dec
rorl
xchg
ret
sbb
leave
into
ja
sub
out
push
repz
les
lods
pop
push
in
mov
jp
adc
cmc
jne
jno
mov
push
sub
inc
nop
leave
mov
mov
iret
or
aad
cmpsb
cmp
dec
cmp
mov
icebp
aas
inc
daa
in
pop
xchg
stc
idivb
and
call
sbb
jo
outsl
leave
mov
sub
mov
cmp
mov
dec
or
int
in
pop
pusha
je
adc
clc
dec
push
xchg
xchg
lods
mov
sub
add
push
push
icebp
bound
sub
loope
and
sar
push
stos
jb
cs
and
fs
mov
push
xchg
jb
cld
bound
push
mov
mov
sub
xchg
sub
ret
int3
xor
loop
add
push
fwait
pop
cmc
mov
pop
loope
in
les
stc
xchg
cmp
and
outsb
ret
shrb
lcall
les
pop
addr16
push
notb
xor
mov
xor
xchg
mov
fiadds
push
xorb
pop
in
in
leave
pusha
data16
into
popa
fwait
adc
xchg
xchg
xor
clc
mov
and
dec
bound
mov
cmp
imulb
or
pushf
frstor
and
in
nop
adc
fisubrs
pop
xchg
nop
in
ja
jo
jnp
imul
repz
push
adc
adc
je
xor
xor
sbb
add
sbb
loopne
repz
adc
enter
dec
mov
hlt
jo
testl
push
mov
or
sbb
out
mov
sbb
test
sbb
xor
std
pop
rorl
adcb
jl
dec
pop
mov
fs
mov
or
imul
mov
repz
test
imul
aas
fsubs
repz
xchg
cmc
mov
aad
mov
and
loop
gs
push
fcoms
mov
lods
adc
cli
mull
add
call
or
mov
ret
pusha
hlt
std
pushf
loopne
or
and
fidivs
jle
aaa
sub
push
hlt
jmp
in
push
push
pop
mov
xchg
dec
mov
mov
xor
add
dec
and
arpl
inc
push
test
imul
loope
fistl
xor
mov
stc
into
es
fistps
xchg
sub
push
jno
jmp
dec
mov
xchg
xchg
es
xor
scas
inc
fisubrl
mov
fnstenv
das
in
push
ud1
pop
decl
xchg
aas
dec
mov
inc
jb
inc
shlb
xor
repz
push
xchg
fnstcw
test
fldl2e
push
adc
cs
pop
cmc
push
sbb
jle
jo
sbb
push
lret
ret
mov
and
sahf
dec
dec
imul
mul
dec
lcall
push
xor
cmp
cmp
enter
sub
das
add
push
inc
cwtl
mov
mov
sub
add
lods
cs
and
aad
imul
mov
or
push
in
lods
or
vshufps
cld
int
mov
outsl
cltd
push
push
cwtl
mov
dec
aad
lods
xchg
xor
push
std
pusha
cmp
or
pop
fsub
jle
movsb
fwait
aas
xor
shl
xlat
xor
scas
test
cmp
cmp
stc
filds
sub
subb
repz
addr16
push
insl
jp
outsb
mov
ja
mov
pop
aaa
dec
dec
push
jl
testl
pop
lcall
out
scas
aad
sbb
mov
loope
outsl
inc
mov
incl
jb
sahf
loopne
sbbl
push
xor
pop
dec
in
loope
adc
mov
in
push
sub
push
arpl
and
test
and
pushf
iret
cmp
inc
call
push
add
test
int3
xchg
mov
adc
add
and
sub
inc
push
ja
mov
and
fs
xor
sub
inc
sbb
imul
sbb
pop
push
mov
push
mov
xchg
lock
std
and
cmpsb
cmp
push
cmp
dec
dec
push
nop
inc
sbb
or
xchg
in
inc
aaa
mov
mov
stos
stc
test
stc
std
xor
add
movsl
pop
roll
arpl
mov
or
popa
push
and
cmpsb
sub
xchg
and
jne
or
mov
inc
movsl
lods
scas
test
leave
aaa
dec
mov
push
and
pop
sbb
fsubrs
adc
jg
cmpsb
inc
or
mov
das
popf
jb
fistpll
and
mov
sbb
mov
and
fnstsw
sti
sbb
xchg
or
mov
std
outsl
jae
xor
adc
shlb
stos
sub
out
rcl
adc
mov
int3
sti
pop
in
push
mov
adc
push
daa
mov
cltd
enter
popf
aad
outsb
inc
push
lock
add
stos
stos
sahf
xchg
fnstcw
insl
push
nop
shrb
pusha
jb
jo
movsl
and
dec
rol
cmp
and
adc
out
lods
cmp
pop
std
daa
sbb
push
and
pop
cmp
jnp
jg
or
in
cmp
or
gs
std
cltd
xor
jns
ljmp
enter
pop
add
jb
addr16
sbb
sub
and
das
hlt
dec
movsb
fsubrp
bnd
add
das
test
pop
cmp
shlb
inc
fwait
adc
xchg
call
das
ror
movl
pop
insl
cmc
lahf
dec
adcl
bound
es
adc
out
fldl2e
xchg
add
mov
xchg
add
jae
int3
mov
mov
xchg
loope
adc
lods
outsl
mov
movsb
sbb
bound
lret
js
push
mov
cmpsb
and
xchg
inc
mulb
or
imul
out
xchg
xchg
xchg
sub
jo
jno
jle
xchg
inc
push
add
mov
jbe
cmp
dec
inc
xchg
sbb
or
insb
jae
aad
incl
inc
out
fwait
ljmp
js
mov
push
cld
or
call
cmc
mov
lea
jo
add
dec
fiaddl
push
addr16
pop
fdivrs
jg
lret
or
mov
and
cmp
xor
scas
sbb
push
mov
out
sub
jp
sbb
push
mov
dec
pushf
sti
data16
mov
push
aas
mov
cmp
aaa
shrl
cmc
ret
fldcw
iret
js
repnz
out
sub
aam
lods
sbb
lret
fistl
sbb
pop
out
int3
aad
into
fs
dec
in
sub
rorb
and
jno
push
call
xchg
std
pop
mov
mov
jecxz
mov
pop
loopne
push
mov
mov
cmp
sbb
jle
cmp
sub
repz
xor
cmpsb
mov
lret
adc
mov
sti
scas
aas
adc
cmp
add
sub
xchg
imul
lahf
loop
cmp
js
daa
jg
mov
call
lea
into
cli
fadd
add
mov
lea
sahf
data16
lock
push
enter
data16
ret
push
mov
mov
outsl
movsb
and
stc
daa
or
idivl
sub
mov
push
dec
adc
fmulp
in
cmp
je
jl
lret
dec
fisubl
sbb
addr16
inc
and
cmp
stc
mov
insb
and
pop
xor
les
xchg
xor
fiadds
cmp
sbbb
cmp
testl
mov
pop
addr16
mov
mov
imul
pop
vmovq
icebp
cmpsb
mov
adc
fistpl
sti
sub
mov
xor
and
in
test
int
dec
and
adc
cmpsl
cmp
test
rclb
push
xchg
and
lahf
ficompl
insl
aas
sub
mov
cwtl
jbe
icebp
das
adc
ret
fimuls
test
js
pop
mov
stc
or
cmp
mov
and
stc
pop
mov
xor
shrl
orb
push
fisubl
jne
fsubrp
test
ljmp
sahf
andl
inc
in
int
les
insl
jo
divl
jge
dec
cltd
push
ds
xor
or
test
mov
pop
add
xchg
xchg
cltd
into
stos
mov
sbb
repz
add
pop
stc
ret
bnd
sahf
dec
loopne
fsubrl
jmp
lea
or
stc
jl
jo
inc
pop
xchg
out
mov
les
in
std
xor
inc
push
lahf
mov
bound
nop
ret
insl
mov
outsb
push
pop
test
or
pop
jno
or
jns
sbb
mov
mov
shl
jae
adc
mov
jp
pushl
fucompp
jp
sbb
ljmp
sub
xor
cmp
dec
push
add
fadds
sub
mov
xlat
inc
ficomps
imul
mov
inc
pop
sub
test
lods
mull
shll
in
dec
pusha
test
jle
movsbl
out
cs
repz
inc
je
les
out
sbb
out
sub
mov
push
mov
mov
cs
push
addr16
jle
dec
push
and
dec
lods
sbb
sub
mov
cs
ret
iret
jmp
xchg
je
sahf
fld
rcll
jb
insb
xchg
stos
push
sbb
mov
cli
xor
lock
hlt
and
fisttps
push
xchg
jno
xchg
shl
sbb
xchg
aad
and
scas
insb
sbb
mov
xchg
pop
lret
gs
adc
xor
jmp
pushf
out
mov
mov
xchg
sub
ret
push
repnz
mov
std
push
mov
lahf
push
sbb
hlt
mov
or
fstp
jne
sbb
mov
inc
dec
xchg
inc
cmp
dec
mov
mov
push
movsb
mov
ljmp
pusha
jmp
xchg
push
ja
xor
sbb
sbb
sbb
in
cld
dec
jl
dec
ss
cmp
adc
loope
lahf
push
xchg
test
fwait
outsb
addb
jns
sahf
mov
add
and
pop
dec
out
nop
pusha
cld
repz
inc
pop
jbe
and
mov
faddl
xchg
rorb
add
fdivrs
divl
loopne
xchg
imul
xchg
movsl
dec
cli
pop
adcb
push
enter
mov
push
and
xchg
pushf
pop
mov
cmpsl
outsb
and
outsl
add
stc
cmp
or
addr16
push
mov
xor
leave
in
xor
js
jno
push
ficomps
faddl
push
movsb
les
push
xor
and
jge
inc
push
push
ljmp
jns
xor
ja
loope
adc
into
dec
outsb
push
popf
sbb
stos
fwait
add
and
xchg
jle
les
popa
mov
or
cld
lods
enter
in
adc
jg
jmp
scas
dec
xchg
test
push
lretw
jg
imul
orl
mov
data16
jg
fwait
jmp
test
shrb
in
inc
iret
xor
mov
jns
cmc
jne
inc
mov
pop
inc
imul
dec
cs
cs
sbb
xchg
push
shl
std
sub
and
sub
fptan
in
loope
jmp
pop
or
inc
lahf
dec
mov
cmp
popa
mov
scas
cmp
aas
xchg
cmpl
mov
aam
cltd
outsb
out
cld
mov
sub
fs
dec
pop
sub
jle
repnz
push
jne
dec
into
jne
scas
mov
stos
sub
fcmovnu
lds
inc
das
in
movsb
lods
lcall
sbb
shlb
hlt
jp
mov
fmuls
test
xchg
sti
cmp
or
cmpsb
jg
clc
fbstp
ds
mov
cmp
mov
jnp
arpl
push
insl
bound
mov
xchg
sub
dec
int
pop
test
aam
sti
lea
or
in
repz
inc
insb
xchg
cmp
cmp
ss
mov
lret
int3
cmpsb
outsb
imul
jmp
das
mov
or
aad
lret
cmp
sbb
lret
fadds
enter
xor
mov
out
push
adc
jmp
jmp
ljmp
imul
fwait
std
mov
out
xchg
inc
gs
test
xor
push
sbb
adc
cmpsb
fldcw
in
insl
in
mov
out
arpl
xchg
cmp
xor
pop
push
in
ret
pop
xor
cmp
gs
repnz
in
imul
push
lea
int3
mov
imul
stos
cmpsl
filds
insb
push
xchg
cmp
leave
add
test
imull
mov
movl
sub
loop
cwtl
sbb
xchg
fidivs
sbb
es
sub
pop
andl
jb
sub
dec
call
jbe
scas
and
es
or
or
fs
mov
add
mov
sbbb
addr16
jbe
sti
outsl
sbbl
mov
cmp
pop
mov
cltd
jmp
js
add
cwtl
insb
dec
or
pop
adc
shlb
scas
cmp
xchg
sbb
bound
pop
fdivrl
lahf
or
sub
lcall
and
ret
test
fwait
sbb
hlt
out
dec
xchg
psadbw
clc
cltd
fstpt
add
int3
jle
xor
ss
inc
cwtl
aaa
fchs
fcomp
mov
cmp
mov
mov
push
fisttpl
in
add
pop
pushf
rcrb
addl
scas
lret
outsb
xlat
dec
lret
push
mov
xchg
lods
out
add
les
test
imul
addr16
add
adc
ret
push
cmp
inc
lock
mov
mov
hlt
sbb
push
mov
push
xchg
sbb
and
mov
in
mov
shrl
cmp
fldcw
pop
lret
and
je
xchg
divl
mov
fwait
test
xchg
fs
mov
jle
mov
inc
hlt
mov
int3
dec
sbb
push
imul
clc
mov
in
add
mov
push
mov
js
jo
mov
shll
pop
sub
push
xchg
fs
iret
roll
out
xchg
into
insb
push
int3
xchg
mov
int
cmp
inc
adc
sbbb
mov
and
push
xor
inc
sbb
ja
mov
mov
or
loopne
mov
in
insl
jnp
adc
enter
xor
jecxz
push
mov
icebp
in
popa
cmp
adc
out
icebp
aam
outsb
or
cltd
sub
mov
jmp
loop
mov
pop
pop
dec
pop
push
popf
pop
push
sbb
inc
xor
sub
or
test
mov
jge
stos
int
mov
loop
mov
shlb
jmp
lods
out
ficoms
sub
pop
in
or
test
inc
pop
pop
push
or
insl
repz
test
adc
jmp
out
push
clc
and
ss
cmpsb
xchg
push
pusha
movsl
add
mov
ss
aas
stc
cs
fcmovnu
loop
lea
mov
xchg
lds
incb
jg
clc
daa
cmpsl
xlat
push
cmp
call
pop
mov
test
fadd
push
sti
jae
xlat
adc
lods
inc
sahf
xlat
insl
movsb
je
dec
push
cmp
call
and
mov
nop
popa
aad
movsb
sub
stos
sbb
stos
mov
rolb
pop
cwtl
fcmovbe
loopne
pop
jnp
adcb
pop
dec
jp
push
push
loop
testb
scas
scas
js
adc
out
mov
addb
int3
ds
lret
dec
inc
push
cmp
push
test
cmp
xor
mov
loopne
test
inc
fcoml
push
sbb
rorb
xchg
jo
adcb
call
fcoms
push
jae
out
int3
fcomps
repnz
pop
dec
xchg
lods
inc
or
pop
mov
dec
pop
mov
cmpsl
xchg
test
mov
pop
jne
sbb
push
or
jne
fistps
daa
aaa
sbb
subl
lods
daa
xchg
out
jmp
push
sbb
mov
push
pushf
daa
and
std
arpl
cmpsb
jnp
fisubl
pop
cld
fldcw
xchg
ljmp
adc
xor
adc
sub
jl
push
and
call
lds
sub
mov
data16
iret
test
ret
or
sti
dec
mov
loope
shlb
and
jno
into
cmp
adc
push
sbb
jg
and
cs
lock
jmp
fwait
sbb
sbb
fnstcw
mov
mov
popf
jno
inc
cmp
adcb
and
int
adc
or
pop
out
add
sar
scas
xlat
jle
push
rcr
ja
mov
mov
in
xor
out
adc
adc
dec
and
or
arpl
xor
pop
jb
lea
push
loopne
xchg
es
xchg
lock
sub
insl
hlt
data16
push
adc
xchg
add
les
js
fisttpl
cmp
push
jns
dec
push
sarb
arpl
addb
jecxz
push
aaa
ds
mov
paddw
fmul
xchg
iret
sub
ds
pusha
push
test
inc
sbb
test
fwait
movsb
or
adc
ljmp
push
sub
repnz
mov
and
push
xor
gs
add
hlt
push
scas
enter
add
lahf
adc
pop
mov
in
xor
sub
jne
ret
shlb
es
hlt
lret
cmp
js
test
xchg
mov
imul
loopne
cmpsb
imul
sub
rcll
xlat
mov
jo
or
push
sub
fsubs
ret
or
je
stos
dec
aaa
std
adc
popa
xchg
out
dec
mov
jecxz
xor
sbb
pusha
push
xorb
xchg
out
mov
mov
call
stc
out
or
jge
test
fwait
pop
test
jae
mov
sbb
fwait
or
xchg
sub
pop
orl
jno
sub
xchg
jmp
adc
xor
push
imul
ret
sahf
mov
vmovups
cli
adc
sahf
movsl
aam
outsb
es
ficomps
jo
xchg
xchg
mov
dec
pushf
mov
ficompl
pop
push
push
mov
dec
arpl
jmp
push
insl
push
outsl
std
cltd
pop
add
push
xor
dec
xchg
stos
jns
mov
testl
notb
shrl
pushf
inc
ret
or
dec
or
pop
dec
shll
inc
and
sbb
popf
andl
xor
push
imul
xor
add
or
es
mov
out
stc
mov
jbe
lea
cmp
daa
lods
std
outsb
push
lds
iret
inc
fdivrl
nop
sbb
inc
int3
pushf
outsb
popf
lret
sbb
les
fstpt
fdecstp
orb
out
sbb
sar
movsl
pop
pop
clc
inc
repnz
xchg
jns
inc
mov
fmull
sub
inc
mov
xor
and
movsb
mov
test
cmp
fcomps
repz
mov
hlt
xchg
xchg
dec
cmp
lcall
jle
popa
sub
es
mov
xchg
gs
fiaddl
fld
cmp
mov
ds
and
push
dec
cmp
hlt
jle
dec
in
nopl
push
stos
leave
lret
cmovge
cmp
pop
pop
pop
dec
pop
fistpl
xchg
cmp
mov
dec
bound
mov
aad
cwtl
popw
ret
and
stc
out
add
sbb
inc
and
mov
xor
cli
scas
xchg
sbb
push
xor
jbe
inc
dec
dec
fstl
add
movsb
out
mov
into
aam
push
cmp
adc
out
push
add
fildl
scas
mov
enter
adc
dec
dec
scas
outsb
push
les
add
ja
fsubrs
je
xor
enter
cwtl
popa
loop
pushf
scas
loopne
xor
or
repnz
push
cld
push
loop
popa
jbe
mov
cmp
sti
insl
cs
xor
fldt
std
mov
jp
aas
xchg
cmp
pop
jo
adc
mov
rorb
das
pop
dec
imulb
push
repnz
mov
int3
and
and
fcmovne
mov
jns
lds
xor
enter
iret
icebp
push
sub
lods
gs
and
lret
mov
or
lret
and
imul
ficomps
cmp
jno
jbe
mov
xor
sahf
dec
sbb
sar
scas
xor
mov
or
or
lret
and
pop
or
sbb
test
jne
lds
outsl
les
ds
mov
test
mov
into
test
dec
lret
xchg
and
in
and
adc
pop
in
jl
mov
inc
mov
cmc
jge
xchg
iret
lds
fnstcw
sub
and
aad
loope
data16
or
push
mov
and
fcoml
jns
and
mov
pop
mov
pop
sbb
imul
cmp
mov
pop
push
fmull
lahf
xchg
insl
in
jae
rcrb
and
sbb
mov
call
imul
daa
adc
or
or
push
push
dec
fisubrs
or
xchg
jecxz
popa
filds
mov
xchg
js
dec
lahf
sbb
mov
inc
or
in
jg
xor
xchg
out
mov
loop
push
bound
dec
jne
xchg
cmp
mov
cwtl
cmp
cmpsb
bound
or
movsb
mov
dec
lds
mov
dec
lods
pop
lods
sarb
pushf
shrb
push
mov
sub
adc
pop
pop
jnp
jl
dec
push
cmp
vmovddup
xor
mov
daa
dec
or
shrl
sbb
pop
inc
test
jb
movsb
mov
mov
test
pop
cmp
push
cmp
sub
mov
loope
pop
shlb
xor
mov
ds
jmp
out
mov
jne
data16
addr16
dec
pusha
and
xchg
pop
mov
shrb
and
cltd
add
xchg
idivb
and
jmp
nop
ja
outsb
xlat
sbb
xor
js
xor
ret
dec
lods
fisttpl
jns
sbb
mov
lds
test
out
imul
mov
mov
mov
pop
lods
xchg
or
sub
inc
scas
adcl
test
mov
jecxz
pop
mov
sbb
xor
stos
hlt
cwtl
push
stos
add
test
movsl
adc
cmp
jl
jns,pt
js
orl
adc
into
nop
aaa
push
pop
pop
xor
pop
mov
xor
push
mov
dec
pop
int
ret
push
xchg
and
cmc
stos
pop
xchg
insb
push
fcom
outsl
xlat
push
movsb
lock
mov
in
cmpsl
lret
mov
sub
cld
xchg
dec
jle
add
ds
xchg
sbb
loope
jbe
cltd
or
sahf
inc
add
adc
test
sbb
or
ljmp
sub
cltd
mov
test
pushf
cltd
popf
or
clc
xorb
inc
les
push
adc
repnz
xchg
jmp
jae
ret
xor
inc
into
mov
and
sbb
xchg
xchg
mov
inc
pop
sbb
add
dec
mov
sbb
mov
gs
pop
pushf
jno
mov
mov
repz
ror
hlt
jg
pop
mov
aaa
jo
sbb
push
inc
jg
and
xchg
push
loopne
mov
add
adc
sbbl
and
pop
or
stos
jmp
scas
movsl
inc
cmpsb
fwait
loopne
cmp
aas
out
mulb
ja
mov
test
outsl
and
shl
ss
out
sub
xor
push
mov
mov
aas
jae
sbb
mov
and
add
dec
adc
movsl
adc
loop
sub
xor
push
mov
dec
int3
ret
lcall
popa
outsb
dec
sarl
ret
inc
lods
mov
notl
lods
aaa
lds
or
mov
xor
mov
lods
sub
push
xor
lea
xor
inc
cltd
sub
jmp
sub
xchg
xor
es
test
sbb
xchg
aaa
inc
jo
xchg
loope
and
cmp
mov
aam
xchg
hlt
push
cmpsb
lahf
xor
dec
fadd
jno
shl
nop
pop
repnz
test
pop
push
mov
pop
and
or
pop
imul
lret
icebp
mov
into
adc
fcoml
orb
pop
lret
adc
push
ljmp
jmp
incb
xchg
xchg
aad
cltd
sarb
rorb
jo
sbb
jo
sahf
popa
fdivrs
sub
in
int
xchg
js
shlb
push
jb
adc
pop
lcall
jns
mov
sub
ret
mov
hlt
xor
outsl
lods
popa
lds
jnp
pushf
in
out
jmp
stos
mov
clc
fildl
stc
dec
dec
lcall
xor
sbb
mov
adc
dec
mov
jo
sbb
lock
push
call
addl
jb,pn
stos
mov
push
test
xchg
rcrl
adc
pop
imul
sbb
jp
jp
sub
mul
mov
clc
mov
or
lea
adc
fs
dec
adc
or
xchg
and
and
insl
into
mov
mov
lock
movsl
push
or
fnstsw
enter
lods
xchg
and
nopl
jp
jg
fsubs
sbb
scas
dec
push
jg
jg
mov
std
inc
adc
stos
push
sub
sbb
cltd
dec
jbe
mov
loop
das
cli
jo
scas
mov
aam
enter
ret
icebp
cli
rcl
les
sub
int
fildll
pop
xor
lds
cmp
addb
ret
pop
shlb
ss
push
sbb
notl
inc
xlat
mov
ret
mov
je
dec
cmp
inc
hlt
nop
or
cmp
and
mov
sbb
or
inc
out
mov
std
add
add
and
rcrl
push
imul
mov
sbb
loopne
add
in
ljmp
add
jo
rorb
sub
addb
outsl
xchg
dec
ljmp
inc
xlat
adc
movsl
bound
xchg
fidivrl
shl
mov
lock
lcall
dec
cld
cmp
jge
popf
fwait
and
jo
push
jb
sub
subl
jg
pop
mov
dec
test
orl
popf
xor
xchg
fwait
or
push
sbb
scas
popf
add
inc
add
xor
add
cmpsb
or
push
sbbb
add
mov
outsl
add
push
cs
mov
lock
and
lods
inc
mov
das
fisttps
jl
and
xchg
out
sub
in
call
and
mov
sub
cmp
xor
mov
xchg
pop
aas
ds
out
lahf
dec
sbb
sbb
xlat
pusha
sub
lret
lods
xchg
ret
pusha
ret
das
fnstcw
add
sbb
pop
fs
inc
sub
inc
loop
lcall
aam
inc
ja
add
push
inc
addr16
lock
mov
jne
call
sub
fwait
pop
sub
aad
test
dec
xor
inc
sahf
dec
inc
dec
test
rolb
mov
sbb
popf
dec
xor
push
mov
sub
xor
dec
sub
dec
sbb
daa
xor
dec
addr16
jge
dec
daa
mov
pop
jl
push
fsubl
mull
fwait
repnz
imul
mov
jae
mov
fnsave
adc
lahf
mov
stos
push
mov
pop
inc
test
sbb
addr16
pushf
cmp
adc
pop
xlat
cmp
clc
lods
sbb
dec
fndisi(8087
cld
or
cs
std
sbb
sbb
jne
or
jb
loopne
mov
fistl
aaa
pop
pop
lds
cltd
dec
das
xor
scas
sbbl
sahf
push
jg
repnz
lcall
out
xchg
sbb
inc
stos
adc
xor
add
jmp
push
push
out
and
in
sbb
mov
sub
xchg
cmp
push
aam
test
jg
xchg
sbb
pop
movb
mov
jnp,pn
sbb
jns
pushf
xchg
mov
push
mov
pop
jbe
jg
enter
mov
xchg
xor
or
sub
in
jns
mov
mov
jp
les
mov
lcall
mov
jl
fwait
xchg
outsb
cmc
jbe
push
es
jecxz
js
mov
add
cmc
mov
imul
rorb
sub
jne
fwait
lods
fistpll
ss
mov
pusha
mov
sbb
rcrl
adc
test
adc
jo
lods
out
mov
mov
hlt
add
xchg
cmpl
adc
push
bound
in
std
jne
jp
and
pop
pop
jbe
popa
mov
jmp
lcall
push
sbb
out
or
shll
inc
add
mov
movsb
adc
lods
cmp
push
push
xlat
push
inc
xor
sbb
int3
fwait
mov
pop
out
lods
push
inc
mov
popa
inc
push
and
mov
and
repz
pushf
ss
and
out
loope
popf
and
mov
mov
mov
push
js
cli
push
lcall
xchg
dec
fsubrs
mov
adc
cmp
iret
mov
ja
mov
sub
push
lret
xchg
adc
push
cmpxchg
js
mov
adc
jo
aas
ret
out
fisttpll
dec
xor
jle
inc
fbld
xchg
or
add
mov
into
sbb
sahf
out
inc
mov
lcall
pop
nop
jae
shrb
cli
fs
ret
mov
ret
aam
xchg
xor
mov
dec
mov
mov
ljmp
xchg
mov
aam
clc
mov
inc
jo
hlt
xor
mov
sub
and
xchg
mov
dec
push
xor
push
jmp
lahf
xlat
push
repz
pop
adc
dec
xchg
cld
pushf
lahf
jbe
fsub
fnsave
mov
cmp
out
inc
ret
adc
lret
mov
mov
loope
fidivl
pop
movsb
out
pop
in
idiv
adc
pop
popa
and
cmpsb
mov
aaa
and
sub
xor
inc
test
shrb
and
and
fldt
sub
pop
sub
inc
mov
mov
enter
fs
push
mov
push
je
jp
arpl
mov
movsb
add
pusha
nop
jmp
rcrl
jno
dec
popl
mov
cld
pop
std
lods
shlb
stos
xor
xor
add
xchg
fwait
push
hlt
cmp
lret
dec
add
inc
cld
jl
out
ja
jb
andl
sahf
cmp
jne
ss
popa
sub
lods
inc
sarl
and
aad
add
rcl
decl
in
les
pop
jbe
loop
cmp
outsl
rol
lahf
xor
pushf
sbb
clc
and
inc
mov
mov
test
sbb
xchg
stos
xor
push
ret
xorl
jo
ds
jno
adcb
jo
stos
push
ja
pop
sti
cmp
mov
fwait
mov
push
mov
arpl
lods
mov
xor
in
cmp
out
push
dec
cmp
lea
xchg
addr16
inc
into
fs
movsl
scas
out
ja
adc
movsb
mov
mov
xchg
sub
inc
jecxz
dec
or
movsl
lds
das
cmp
jnp
nop
push
mov
pop
xchg
scas
mov
inc
lods
push
push
add
sub
jo
cmp
inc
and
cmpb
add
dec
cli
add
sub
scas
xor
cmpsl
sahf
movsl
mov
cmp
push
loopne
inc
dec
sub
mov
je
stos
icebp
mov
inc
popl
jge
push
imul
or
lods
or
jge
xchg
cmp
jecxz
rolb
hlt
aam
or
in
ficoml
mov
popa
mov
mov
fwait
bound
testb
fwait
mov
jbe
mov
jl
lahf
fs
add
insb
pushf
push
jmp
js
xchg
jecxz
add
pushf
cmp
inc
push
hlt
mov
adc
arpl
sub
fcmovb
clc
loopne
aam
aad
mov
scas
xchg
ret
movsl
mov
sub
sub
mov
inc
lods
jo
aas
cmpsl
mov
xor
fcompl
lea
xchg
jecxz
sar
loope
adc
pop
arpl
loop
pop
jmp
movsb
and
jne
sbb
data16
push
imul
scas
test
shll
stos
sub
cwtl
jmp
inc
sbb
into
out
jge
sbb
adc
aas
add
and
popf
pop
movl
imul
clc
test
pop
push
das
push
ljmp
addr16
lcall
das
push
lock
cmpsb
sti
insl
cmp
sti
mov
or
ret
pop
sub
lret
outsb
movsb
inc
sbb
mov
dec
and
mov
xor
hlt
inc
or
pop
xchg
inc
lods
aam
adc
dec
inc
shll
inc
jo
jmp
fcmovu
xchg
mov
negb
push
inc
xor
movsl
testl
lahf
dec
in
in
jb
fistps
call
sub
sbb
xlat
xor
lea
xchg
data16
out
call
xorl
or
mov
repz
push
pusha
sbb
aad
ret
mov
jle
mov
xchg
pop
xchg
lea
adc
cld
push
scas
adc
jnp
sub
cld
addr16
adc
testl
movsb
cmpb
lcall
mov
xor
out
popf
addb
mov
inc
cltd
pop
mov
dec
pop
fsubs
xlat
int
or
adc
and
test
pop
dec
mov
fwait
pop
fidivrl
out
sub
leave
add
cli
into
mov
popa
loop
popf
push
out
hlt
cmp
cld
pop
mov
cmp
or
popl
mov
popa
imul
pop
fwait
rcrb
popa
push
mov
cmp
addb
adc
addr16
mov
and
sub
jp
xchg
lods
pop
or
sub
lds
out
cmp
cmc
mov
ret
push
sahf
cli
cmpsb
leave
test
and
adc
mov
mov
sub
add
out
nop
mov
push
adc
cmpsb
pop
xchg
jo
mov
aam
cmp
jae
xlat
bound
cwtl
jp
xchg
ficoml
mov
xchg
fwait
aas
out
dec
leave
and
shlb
push
jmp
xchg
stos
cmp
add
mov
mov
push
insl
dec
ficomps
loope
repz
ljmp
pop
les
in
popf
enter
fs
aaa
sahf
test
pop
stc
dec
cmpl
ffreep
cmpb
pop
aas
dec
in
xchg
push
xor
enter
mov
cltd
icebp
mov
add
fdivs
push
insl
mov
lea
in
je
mov
pop
stos
notl
fs
pop
rcrb
xlat
push
mov
es
sti
mov
jno
out
adc
popf
fcoms
pop
cmp
or
and
or
or
outsb
inc
mov
push
jns
mov
mov
cld
jo
mov
sub
add
pop
adc
push
push
adc
nop
dec
dec
andl
mov
aas
int
add
pusha
mov
add
out
sub
lea
pop
xor
in
dec
imul
pop
test
sbb
pop
sti
ret
rclb
lods
popf
jge
mov
inc
add
xor
xchg
dec
movsl
inc
inc
ret
iret
adc
ljmp
outsb
movsl
lcall
and
pop
mov
inc
into
mov
rclb
inc
xlat
out
jae
data16
xor
xchg
adc
loope
mov
sub
push
mov
call
es
jge
fists
loope
jl
data16
mov
mov
repz
pop
pop
pusha
jmp
stos
xor
rcr
cmp
push
popa
stc
pop
lret
ffreep
and
call
lcall
bound
xchg
push
imul
fbstp
cld
test
pop
dec
sub
testl
call
out
jge
cmp
sub
add
jns
mov
push
pop
xlat
mov
and
sarl
loopne
arpl
xchg
mov
and
push
push
pop
jns
sahf
mulb
outsl
test
adc
orl
xchg
sub
inc
and
sti
div
lea
add
xor
lea
sub
imulb
scas
test
leave
xor
insl
xchg
adc
cwtl
addl
lcall
mov
hlt
xchg
cmp
xor
ss
mov
sbb
fldcw
ret
push
cmp
mov
loop
jmp
or
jp
inc
repz
xorb
and
ret
dec
scas
cmp
adc
inc
fdivrl
mov
inc
test
push
mov
fidivrl
pop
or
mov
mov
mov
mov
bound
push
xchg
jbe
mov
aaa
add
test
cmp
cli
jno
mov
ljmp
xchg
lods
repz
andl
xor
scas
push
mov
adc
pop
push
sub
xchg
lods
xchg
push
stc
aaa
ret
fucom
jl
lret
adc
xchg
fbstp
dec
sarl
and
jge
add
xor
or
add
sbb
popf
addr16
ret
sti
adc
mov
mov
sbb
inc
push
dec
repz
inc
add
inc
push
out
adc
jne
mov
loopne
xchg
xchg
cld
mov
or
imul
rolb
inc
popf
ljmp
imul
fwait
push
and
lds
adc
mov
clc
sub
push
jle
mov
mov
add
aam
rorl
and
addb
stos
cs
scas
shll
int
je
push
ljmp
cld
leave
repz
sbb
sahf
pop
and
insb
repnz
jbe
test
jecxz
mov
xor
fs
jns
jp
xlat
into
or
add
push
sbb
pop
cmpsb
fisttpl
loop
fwait
pop
add
mov
stos
xchg
in
fs
push
mov
mov
dec
lcall
mov
inc
pusha
adc
jecxz
icebp
test
es
shll
pop
xor
nop
cmpsb
mov
push
push
out
mov
int
xor
ljmp
cmp
daa
jb
mov
and
add
sahf
dec
sub
pop
xchg
mov
or
pop
icebp
mov
xchg
dec
pushw
fldz
mov
pop
je
sub
jno
int
lods
or
insb
cmpsl
push
mov
lret
mov
jmp
xor
popf
in
call
and
int
sub
sbb
aaa
insb
lods
push
mov
stos
xorl
fdivrs
decl
push
ss
jge
repz
xor
daa
out
push
loop
push
dec
lahf
xchg
lcall
ja
pop
js
sbb
test
es
enter
movsb
add
fs
enter
int
in
add
pop
dec
pop
aas
xchg
pop
xchg
shrl
cmc
xor
add
push
popf
dec
push
mov
nop
and
jnp
xchg
popf
cld
ds
inc
sbb
in
push
movsl
xor
js
jb
xchg
push
bound
dec
aam
mov
int3
xor
jae
lds
push
xchg
cmp
jnp
and
xchg
lds
push
sbb
cld
hlt
mov
popa
inc
mov
dec
bound
mov
jmp
out
push
mov
cli
shlb
je
mov
mov
aad
mov
pop
stos
mov
js
lods
adc
cwtl
xor
mov
cwtl
loope
or
dec
jmp
insl
into
shl
or
imul
ret
das
pop
test
aam
push
xor
testb
data16
aas
outsb
bound
int3
xchg
data16
mov
ss
inc
fnop
dec
cmp
mov
xchg
lea
dec
ja
push
ljmp
cmp
sbb
testl
enter
xchg
mov
mov
lea
mov
or
test
dec
and
push
mov
xor
jge
dec
fs
sahf
inc
sub
fdivl
lods
mulb
add
out
cld
sub
pop
dec
in
out
cmpsl
popa
add
ss
adc
xchg
vmovaps
lock
cmp
shrb
push
mov
add
mov
notl
aam
outsb
cltd
pop
int
lds
rcrb
mov
fidivl
aas
sbbl
or
pop
jnp
jns
in
adc
jle
lahf
mov
dec
pop
lods
scas
mov
sarb
loope
addr16
pop
and
mov
lret
xor
out
aam
push
and
add
xlat
mov
xchg
notrack
mov
mov
inc
scas
xchg
dec
dec
inc
test
jmp
push
cli
out
movb
out
test
pushf
cmp
jg
ret
xchg
cmpsl
mov
xchg
mov
js
stos
push
sbb
dec
fdivl
dec
mov
dec
rcrl
or
icebp
rolb
sbb
mov
test
aaa
test
mov
hlt
cmp
das
mov
xor
aam
inc
movsl
js
sarl
add
daa
addl
movsb
cmp
adc
jecxz
sbb
in
and
aaa
test
popf
dec
cwtl
add
inc
cmp
jo
cmpsl
push
fistps
jecxz
mov
add
push
and
mov
mov
xchg
mul
inc
es
jle
dec
fnstenv
test
aaa
rorl
push
or
and
push
adc
push
sahf
lret
pop
pop
test
dec
pop
xchg
in
xchg
scas
xor
dec
cld
dec
inc
xchg
cwtl
cmc
xchg
mov
or
and
mov
add
xor
pop
das
jle
test
pop
pop
or
fistps
push
mov
mov
adcb
dec
ret
cmpb
mov
mov
aad
test
add
add
mov
dec
and
or
add
je
shl
out
in
xchg
add
push
cs
and
push
adc
dec
dec
roll
mov
daa
dec
stc
dec
add
mov
xor
or
dec
and
inc
pop
mov
mov
adc
addl
rol
mov
ja
mov
dec
inc
cmc
mov
sarl
mov
cmovle
push
out
cmp
inc
inc
and
mov
dec
outsb
test
negb
push
cmpsl
ds
bswap
mov
pop
call
inc
in
adc
out
xchg
pop
jno
aas
aas
aas
jnp
mov
inc
sbb
call
and
push
cmc
adc
xchg
jecxz
and
xor
out
ljmp
mov
aas
lret
les
cwtl
xor
and
insl
xor
sub
incb
sbb
pop
mov
jecxz
mov
movsb
idiv
test
jmp
test
push
movsb
push
inc
xor
ss
jmp
icebp
pusha
push
pop
xor
adc
addr16
mov
dec
filds
fimull
jno
xor
int3
rcl
adc
pop
push
data16
add
and
inc
je
push
xor
and
sbbb
call
aam
movsb
ret
jno
enter
aaa
push
lret
sbb
inc
outsl
das
lock
push
mov
shrb
dec
add
gs
fdivrp
aaa
xchg
mov
rolb
jns
mov
stos
sub
mov
leave
dec
push
or
add
xor
sub
in
mov
addr16
jb
cmp
xchg
out
sbb
nop
dec
pop
push
das
daa
pop
sti
jge
fs
jo
sub
insl
push
stos
jge
cli
mov
leave
pusha
subw
ret
and
mov
es
pop
or
out
aad
sbb
mov
xor
sub
cmp
xor
out
xor
iret
adc
pop
adc
data16
sbb
loope
pop
sti
mov
sbb
lock
cmp
jns
sub
mov
xchg
pop
dec
jbe
cmp
lret
sub
sbb
cli
sub
dec
mov
data16
mov
add
mov
rcl
adc
push
daa
dec
fcmovne
and
add
mov
jl
clc
fldcw
into
xlat
mov
rolb
lcall
icebp
jns
loopne
cmp
je
dec
cmp
outsb
dec
add
fsubp
dec
dec
xchg
sbb
sub
push
xor
lret
decl
pop
mov
pop
aad
sbb
xchg
movsb
fdivs
mov
les
mov
scas
sub
gs
lret
xchg
mov
push
ljmp
stos
fstps
aas
mov
or
dec
fstpl
std
outsb
rol
adc
jae
xchg
bound
mov
push
push
mov
push
jecxz
sbb
and
imul
mov
mov
inc
or
call
or
ljmp
adc
xlat
cmp
push
pop
or
repz
xchg
add
add
fists
clc
jmp
int3
add
mov
xor
cli
aam
into
cmp
fcmovne
sbb
das
adc
pop
dec
fildll
fstl
insb
je
pop
sti
cmpb
lock
mov
pop
les
or
ret
jb
or
mov
out
push
ds
lret
insb
mov
mov
push
leave
cmp
or
out
jl
push
sub
lds
cs
stos
call
mov
aaa
and
mov
jns
inc
inc
sub
cmp
imul
enter
xor
ss
pop
xchg
cmp
fldl
mov
or
jmp
rcl
and
jecxz
cmpsb
js
dec
lds
int
jo
js
xor
sbb
mov
jb
dec
mov
mov
dec
inc
or
push
bound
std
rcll
out
lds
mov
enter
pop
xor
jnp
cmp
popf
sti
sti
xchg
cli
pop
std
dec
sahf
mov
daa
insl
dec
daa
mov
loopne
adc
adc
dec
xchg
push
in
mov
imul
mov
les
inc
dec
call
fwait
dec
out
cmp
gs
mov
aas
pop
xchg
vcvtps2pd
cmp
inc
pop
dec
imul
pop
lods
push
loop
adc
mov
jg
fwait
or
ljmp
cli
in
mov
nop
sub
cmp
hlt
push
pop
aaa
adc
xchg
and
xor
mov
xor
and
fidivrl
testl
repz
push
pushf
xor
enter
in
cli
test
add
xor
call
and
dec
add
xor
jp
push
cli
push
adc
cld
imul
lods
stos
jl
inc
push
inc
daa
push
cmp
mov
xor
in
sbb
mov
test
scas
dec
mov
sbb
jno
mov
pushf
loop
add
mov
cmp
add
clc
jbe
dec
in
push
test
subl
gs
ljmp
enter
cltd
int3
xchg
in
stc
mov
push
in
jnp
sbb
add
xchg
pop
push
cmp
fdivrl
imul
fimuls
xor
add
xchg
ljmp
insb
mov
add
inc
or
in
in
cmc
pop
and
stos
out
mov
sbb
fimull
mov
inc
lods
push
dec
and
insl
insl
push
leave
mov
mov
insl
mov
mov
jmp
and
enter
data16
cs
sbb
test
dec
scas
inc
inc
xor
mov
xchg
jecxz
push
dec
test
sub
popf
push
dec
add
repz
inc
cmp
jge
mov
cltd
pop
cmpb
pop
outsl
inc
pop
xchg
out
icebp
add
inc
leave
sbb
lret
mov
mov
and
xlat
jl
push
mov
pminsw
lea
mov
add
daa
xchg
dec
sub
cmp
add
leave
sarl
push
mov
sbb
xorb
jp
das
mov
jne
adc
das
jge
sub
xchg
and
mov
xchg
les
xor
lea
mov
sub
or
stos
scas
dec
adc
add
add
fnsave
cmpl
fprem1
sub
sub
dec
out
cmp
out
or
pop
cmp
mov
lods
clc
push
xor
into
xchg
notl
jg
cmc
add
sub
popf
lahf
sub
add
popa
aad
js
mov
xchg
pop
iret
mov
daa
and
lods
es
jmp
and
xchg
mov
daa
mov
mov
xchg
out
pop
lcall
jae
orb
mov
or
push
jl
sub
cwtl
dec
ss
pop
int3
test
jp
cld
sub
pusha
fcomip
je
out
jl
mov
stos
inc
pop
pop
pop
or
jmp
in
stos
fadds
sahf
popa
mov
mov
sub
andb
in
fnstcw
nop
loop
jo
es
mov
mov
or
es
add
iret
stos
mov
cwtl
mov
cmpsl
idivb
jo
movsl
cmp
sub
or
jno
bound
lods
cmp
std
mov
lret
das
test
xchg
or
adc
test
fbld
ds
repz
pop
pusha
or
fidivs
push
iret
pop
adc
ljmp
dec
adc
cmp
jp
fistpl
out
or
fcmove
inc
fisttpl
or
int3
mov
out
mov
pop
out
mov
mov
in
pop
mov
mov
xchg
jae
push
mov
xchg
jno
fistpll
cld
enter
dec
popf
dec
int
push
jecxz
xor
dec
xor
pop
sub
pop
sti
sti
fidivrs
dec
sbb
add
into
insl
adc
adc
push
in
dec
adc
je
pop
std
xchg
sbb
cwtl
jecxz
sub
push
inc
std
gs
add
mov
imul
adcb
jg
mov
mov
lret
lods
xlat
out
sbb
xor
fbstp
imul
iret
std
add
rol
dec
xor
dec
push
fistpll
es
outsl
mov
mov
push
or
mov
pusha
jnp
push
scas
xorl
inc
xchg
mov
ret
rolb
mov
sub
cld
inc
sub
xor
ret
sub
mov
cltd
push
cmp
std
jmp
test
push
adc
data16
pop
mov
or
pop
arpl
pushf
jg
inc
and
fsubl
sbb
add
sub
jno
adcl
icebp
aas
out
cmp
clc
je
inc
or
insl
stc
aam
in
jnp
pop
cli
jb
cwtl
sbb
inc
add
inc
dec
int
jo
ret
add
dec
sub
ds
shlb
push
out
push
orb
dec
popf
mov
cs
inc
or
scas
dec
lock
jp
pop
inc
rcll
mov
dec
add
repnz
outsb
and
std
into
test
or
das
mov
sub
stos
push
mov
sub
ja
sub
and
test
test
fwait
cmpsb
inc
add
pusha
xor
lret
imul
gs
enter
cli
movsl
and
jno
cli
mov
dec
push
sti
push
jle
jle
rorb
mov
sub
cmpsl
push
dec
mov
push
mov
mov
cs
or
push
mov
push
test
mov
rorb
xchg
fisttpl
pusha
cmpb
lcall
roll
mov
sub
fldcw
push
cmpl
add
pop
movsl
sbb
std
lsl
sub
cli
gs
rolb
mov
jnp
push
out
imul
push
and
sub
adc
adcl
mov
mov
lret
outsl
out
hlt
add
add
test
inc
jno
enter
and
xor
add
jnp
popf
adc
call
fdivrl
sbb
dec
mov
or
icebp
ret
pop
xchg
sbb
enter
lods
push
push
js
pop
je
data16
inc
fistpll
ss
mov
fidivs
stos
sbb
fsubs
imul
push
cmp
xor
int
xlat
cmp
jns
ficoml
daa
push
adc
daa
mov
cwtl
add
push
leave
insb
jecxz
decb
mov
fldt
stos
popf
inc
and
frstor
popa
sbb
bound
cmp
mov
adc
icebp
test
dec
add
scas
pop
out
push
add
push
add
jg
jno
in
dec
je
sub
fsubs
mov
lret
addr16
addl
das
fisubrs
in
je
jge
cmpl
pop
mov
test
pop
mov
inc
xor
pop
inc
push
sbb
ljmp
mov
xor
cmp
inc
mov
mov
imul
lcall
mov
enter
fcmovnu
pop
mov
mov
icebp
pop
aaa
or
cmc
mov
mov
adc
xor
mov
ljmp
sbb
adc
mov
jmp
mov
outsb
mov
in
lds
xchg
lret
je
orl
dec
pushf
mov
xor
in
shlb
shll
jbe
ds
mov
movsl
ja
test
jns
fiadds
lods
push
cmp
inc
jg
hlt
iret
dec
lods
iret
cmc
loope
mov
inc
dec
aas
xchg
jno
call
xor
fcmovnbe
mov
stos
and
mov
sub
sti
and
int3
push
test
push
push
mov
fcomps
sbb
mov
dec
aaa
lea
fisubrs
sub
das
lods
xchg
scas
jp
call
push
stos
or
fwait
lods
ja
fmuls
dec
jle
movsl
les
dec
cmpsl
cmp
mov
out
xchg
imul
push
adc
jl
dec
stc
arpl
inc
notl
adc
loop
xchg
push
inc
sub
gs
sbb
rolb
dec
xor
push
jns
xchg
pusha
sbbl
in
and
sub
sbb
fwait
mov
cld
push
xchg
sub
repz
push
aam
clc
mov
fbstp
cmp
lret
and
lcall
xchg
mov
sbb
xor
cmp
test
inc
lds
mov
dec
mov
movsl
jecxz
jb
loopne
push
xchg
jp
push
clc
mov
scas
lock
push
lock
orb
jle
push
repz
pusha
xor
inc
jnp
mov
cmp
mov
xchg
push
adc
loope
enter
in
or
outsb
cs
enter
sahf
jp
add
adc
mov
aad
fcmovnu
loopne
pop
mov
mov
pop
sub
jmp
shl
xchg
and
dec
xchg
std
cmp
ret
cs
push
dec
iret
leave
push
mov
outsl
mov
pushf
jmp
sbb
mov
push
lds
cli
dec
lock
sbb
sbb
jmp
test
pop
iret
fnstcw
call
mov
sub
jnp
sub
daa
outsb
sub
jle
shl
inc
loop
stc
shl
fists
mov
fwait
in
insl
xchg
xchg
jp
cld
mov
push
inc
test
jmp
sti
mov
vpmacsdd
or
xor
iret
mov
fists
popa
mov
lcall
add
cmpsl
jo
xchg
lcall
and
es
sti
stos
in
fs
jle
std
test
test
ficompl
out
loope
push
outsb
aas
xchg
outsl
mov
ret
dec
xchg
and
mov
lods
ret
mov
loop
into
arpl
dec
stos
lret
pop
ret
mov
sub
les
mov
inc
inc
nop
xor
add
js
ljmp
repnz
mov
jno
xchg
ds
cmp
add
jg
bound
sbb
or
jne
aas
push
repz
inc
lret
push
mov
cli
and
inc
mov
or
pushl
fisttpl
xlat
jno
adc
inc
enter
mov
sub
jnp
dec
cld
add
adc
out
ret
dec
xor
daa
mov
jg
test
and
sub
mov
mov
adc
mov
das
jbe
repz
inc
cwtl
cwtl
out
mov
or
mov
jmp
lods
aad
pop
inc
std
out
enter
out
push
sub
arpl
sub
mov
gs
std
jne
sbb
cmc
cmp
lahf
mov
mov
arpl
xor
mov
pop
popf
inc
pushf
cli
icebp
or
push
or
mov
xor
pusha
les
cmp
rolb
pusha
dec
pop
sbb
jle
mov
push
sub
gs
jno
loope
pop
cmp
sub
insb
dec
cli
xor
push
xor
out
xchg
addr16
lret
cmpsl
es
jae
mov
ds
mov
add
cmpsb
sub
mov
pop
loopne
dec
stos
xor
mov
dec
adc
or
cmpsl
es
pusha
mov
cld
inc
in
addr16
fsub
sbb
aad
jno
lea
fidivrl
push
mov
and
enter
andl
xchg
mov
stc
fs
popa
mov
lahf
cld
out
jnp
loope
test
addr16
mov
mov
push
cmc
xchg
icebp
push
enter
dec
cld
in
cmp
aaa
mov
mov
lahf
std
mov
xor
sub
pushf
xlat
sbb
into
cmp
fcom
call
dec
xor
addr16
jg
pop
das
bound
ss
and
shlb
add
inc
sbb
dec
cli
adc
sbb
cltd
mov
cwtl
pop
rorl
push
aam
xor
adc
add
adc
movsl
aas
negb
les
or
addr16
arpl
sbb
mov
in
cmc
frstor
subb
adc
push
pop
sbb
pop
sarl
repz
fisubs
cmpsb
mov
dec
dec
pop
or
subl
mov
jb
jb
shrb
push
mov
bound
nop
repz
adc
mov
adc
int
dec
and
pop
shl
mov
mov
mov
scas
adc
adc
and
sahf
pop
mov
enter
add
rolb
repnz
sbb
and
pop
lret
inc
pop
xor
fcmove
jle
in
and
mov
aam
jnp
or
push
es
cli
std
in
jbe
out
ja
je
jne
mov
in
pusha
jo
and
adc
adc
push
out
adcl
dec
enter
mov
loopne
lret
pop
pop
mov
add
dec
in
in
mov
cmp
and
movsl
sub
cmp
rcrl
xchg
push
pushf
adc
das
aam
mov
jne
cltd
js
decb
das
dec
cmp
gs
scas
insb
jb
test
cld
je
inc
sbb
outsl
insb
in
adc
inc
adc
out
push
sub
push
fdivrs
inc
mov
shlb
mov
inc
sbb
stc
rorl
mov
sti
add
es
mov
test
test
dec
ljmp
mov
movsb
pop
push
mov
push
and
lods
cmc
loope
aam
sbb
add
jb
repz
ss
std
xchg
pop
xchg
rorb
dec
loope
dec
roll
mov
mov
fucom
in
pop
pop
cs
xchg
or
xchg
frstor
addl
shrl
addb
mov
fcoms
hlt
out
in
mov
ja
inc
sub
aad
sub
imul
pop
lret
pop
xchg
push
mov
out
outsl
lret
das
paddsb
cmc
sub
mov
lcall
jno
sub
push
cwtl
or
fdivrs
int3
iret
sbb
or
push
pop
int3
or
pop
sbb
and
shll
das
sti
and
push
xorb
loopne
paddq
xchg
cmp
and
rcrb
es
xor
mov
cmp
xor
mov
jno
adc
push
dec
xor
sahf
mov
das
push
mov
push
pop
xchg
mov
mov
addb
adc
in
js
inc
aam
out
or
jmp
and
sahf
insl
add
fidivs
test
adcl
inc
int3
or
test
adc
adc
fimull
or
sbb
pop
sub
lea
mov
ret
nop
mov
inc
xchg
imul
dec
jl
jno
xlat
xor
cmpsb
loopne
mov
int
jge
loopne
jmp
gs
in
and
clc
sub
inc
xor
insl
xchg
js
and
jmp
mov
lret
shrb
and
push
pop
push
mov
push
hlt
mov
out
lods
imul
mov
xchg
loopne
xchg
or
sbb
sarl
mov
push
cld
fnstsw
mov
stos
mov
mov
popf
pop
and
mov
rcl
dec
lret
xchg
leave
ljmp
xchg
cmc
and
popf
mov
jnp
mov
repnz
pop
cwtl
clc
mov
and
push
pcmpeqd
mov
jg
repz
inc
dec
xchg
loopne
jle
rorb
xchg
mov
sahf
push
and
negl
stc
mov
sbb
sub
imul
mov
pop
ljmp
lcall
lret
dec
fcomps
out
fnstcw
dec
cwtl
negb
add
int3
fs
sub
jb
push
popf
movsl
jmp
sbb
pop
xor
call
xlat
rcrl
and
mov
aam
and
mov
jno
aad
ret
aad
xchg
mov
push
mov
sahf
or
hlt
sub
sarl
in
xor
mov
pop
fs
lods
jae
mov
call
arpl
sbb
mov
sarb
lahf
test
mov
push
ror
inc
mov
in
adc
aas
inc
inc
fsub
leave
xchg
lcall
add
in
and
sub
stos
fsubl
and
in
xchg
and
or
xchg
stos
dec
das
mov
test
push
daa
sub
fcmovnbe
sti
test
mov
loop
mov
in
push
fcmovnb
xchg
mov
inc
fs
push
lods
inc
aas
fistl
xor
or
sbb
subb
pop
dec
mov
pop
cmp
lcall
adc
lahf
or
jle
pop
jecxz
inc
in
orb
in
mov
inc
sub
dec
testl
inc
inc
mov
mov
andb
pop
stos
movsb
std
xlat
subl
pushf
aas
mov
popa
pop
push
add
dec
jg
xchg
rol
jnp
and
pop
ror
adc
pop
dec
repnz
dec
andl
pop
adc
imul
sub
mov
notb
xchg
lahf
sbb
sbb
rclb
out
inc
push
inc
push
jno
leave
lds
out
cli
push
push
inc
ficompl
in
nop
cmpb
movsb
lret
es
movsl
xor
ret
xchg
cmpsb
repnz
ret
hlt
mov
add
js
es
cmp
pop
fwait
movsl
push
inc
lahf
js
andl
cmc
cs
mov
or
inc
pop
push
or
out
push
lret
cli
inc
push
sti
iret
rcrb
cmp
mov
ja
loopne
add
lock
in
scas
sbb
dec
sbb
jb
pop
sbb
daa
ljmp
andl
cltd
dec
shr
dec
rcrb
cmp
testb
stc
cmpsl
orl
push
rorb
or
jecxz
inc
mov
xorl
pop
jmp
mov
sahf
rcrb
push
dec
ret
gs
lds
es
xor
repnz
xchg
cmp
pushf
adc
loopne
push
int3
mov
mov
lods
movsl
bound
cmp
jns
adc
xchg
push
ja
idivb
dec
sarb
pop
ds
aad
out
cli
mov
inc
or
and
sub
popf
pop
and
xchg
xor
xlat
or
dec
xor
cs
push
mov
mov
aaa
mov
add
cmpsl
aad
xchg
sbbl
and
mov
repz
fs
dec
pop
cmc
inc
lret
push
xchg
out
inc
mov
pop
shlb
iret
inc
mov
test
push
add
out
jns
push
pop
xchg
and
dec
lcall
and
cld
push
lods
cwtl
outsb
mov
gs
shll
xor
andl
lods
and
sbb
sbb
inc
and
mov
inc
and
or
inc
or
sub
cmp
pop
pop
adc
inc
rorl
aam
mov
cmp
outsb
scas
xor
fiadds
nop
or
aas
data16
adcb
dec
cmp
ss
cwtl
pushl
inc
aam
push
sbb
xor
scas
mov
lret
sti
mov
push
leave
into
arpl
mov
mov
rcr
dec
outsb
push
dec
jmp
dec
leave
xor
jle
fwait
je
rorb
jno
jge
dec
and
js
sbb
jbe
xchg
in
inc
aam
loop
ss
mov
or
sub
pop
pop
lcall
mov
lea
push
mov
inc
pop
outsb
and
sub
addl
sub
xchg
int3
cmpsb
scas
aad
daa
inc
dec
addl
sbb
outsb
or
and
sub
push
adc
es
stos
pop
mov
pop
int
lcall
insl
jae
lds
dec
sbb
xor
icebp
cs
in
gs
cmpsb
testb
mov
mov
inc
aad
push
mov
js
cmp
daa
mov
inc
cltd
scas
daa
jecxz
mov
pusha
xchg
dec
cmpsl
test
xor
xor
pop
mov
sub
xlat
enter
push
add
das
sahf
rclb
and
insl
sbb
inc
cmc
rclb
daa
divb
xchg
lea
inc
cltd
mov
notb
sub
add
push
out
mov
lea
dec
push
add
cwtl
add
dec
adc
outsl
push
xchg
lock
or
jecxz
xchg
xchg
xor
push
test
outsb
imul
stos
pop
push
test
lods
sti
push
pop
mov
fcmovnu
out
xor
orl
cs
nop
and
test
daa
pop
jge
add
aaa
ljmp
bnd
cmp
icebp
jg
cmpb
or
cld
push
les
jne
jae
or
fwait
bound
outsl
push
add
sub
ret
cs
adc
push
xor
inc
test
sahf
inc
or
lds
sbb
pop
aad
lea
cli
sti
push
sub
mov
bound
sar
cmp
dec
pop
iret
lcall
mov
out
call
mov
je,pt
gs
pop
enter
adc
nop
and
in
inc
jae
ja
push
and
scas
aad
mov
in
xchg
jle
adc
lods
insb
popa
cmp
jo
fistpll
mov
dec
dec
sbb
out
inc
push
popa
pusha
in
pushf
and
or
scas
xchg
mov
addr16
push
faddl
pop
sbb
mov
nop
and
out
shl
lcall
lcall
lock
mov
jns
fimuls
mov
scas
lock
mov
xchg
in
ret
sbb
ror
xor
leave
iret
jno
stos
pop
cmp
mov
iret
roll
shll
cmp
cmpsl
inc
jg
dec
xchg
int3
or
sub
popf
loope
xor
push
fnstsw
negb
dec
cmp
sbb
inc
cltd
fstl
js,pt
mov
adc
inc
cli
and
clc
movb
ljmp
mov
inc
sub
dec
xor
paddw
push
call
mov
xor
outsl
in
loopne
jp
imul
mov
pop
aad
adc
inc
sbb
pop
cltd
into
clc
jo
jbe
int3
mov
xor
sub
or
pop
xchg
lcall
mov
xchg
jnp
cmp
inc
mov
andl
std
test
lcall
jle
push
cmpsb
cltd
adc
aad
pusha
sahf
push
push
daa
insl
cwtl
inc
adc
inc
mov
iret
xchg
cs
pop
fldenv
sbb
sub
mov
xchg
ret
call
mov
clc
mov
sarl
mov
and
leave
jp
jno
xor
cmp
shrl
push
sub
into
xchg
movsl
dec
cmpl
jne
mov
push
lcall
repz
loop
jg
jae
nop
les
fidivrs
jbe
insl
mov
jns
aad
pop
sbb
adc
add
pop
mov
sbb
xor
aad
mov
jno
popf
add
subb
mov
adc
jle
dec
imul
xlat
xchg
mov
and
or
mov
dec
ds
cmpsl
and
fisttpll
js
pushf
loop
sahf
call
cld
and
push
add
repz
scas
pop
lds
or
cltd
xlat
push
jp
sbb
sub
lods
in
cmpsl
inc
movsb
fimuls
mov
ret
inc
addr16
outsb
out
jge
mov
into
cmp
adc
popa
sub
std
aaa
push
das
xor
adc
xor
fs
orl
adc
popa
mov
jle
or
xchg
or
push
add
cs
mov
pop
adc
mov
les
lea
mov
and
call
lahf
jns
lods
std
fnstenv
add
fistl
xchg
icebp
test
jnp
repnz
or
pop
mov
arpl
imul
cwtl
adc
push
cld
clc
sbb
pop
popa
test
xor
adcl
cmpl
mov
mov
stc
insb
mov
mov
and
fisttps
lret
and
inc
jmp
mov
cmc
cmpsb
sahf
stos
push
push
mov
leave
xor
fistps
inc
pop
xchg
inc
mov
shll
and
test
jecxz
xchg
lret
mov
cs
fwait
int3
out
arpl
pop
je
movsb
xchg
cli
push
shll
in
shl
inc
stos
loop
ja
jp
pop
xchg
out
iret
adc
aam
xor
inc
iret
popf
mov
aam
sarb
or
sbb
push
repz
or
sbb
mov
pop
sbb
lcall
fstl
shrl
fistpl
dec
push
popa
add
mov
xchg
xor
push
int
roll
xchg
stos
nop
ret
lods
insb
push
sbb
rep
jmp
or
inc
das
mov
push
mov
loop
out
pop
mov
bound
dec
fnsave
sbb
pop
loop
dec
mov
test
dec
out
mov
iret
mov
fldt
xor
popf
movsl
jae
push
adc
inc
insl
pusha
arpl
inc
mov
loope
mov
in
outsb
sahf
push
fbstp
cli
xor
mov
imul
jae
in
sbb
pop
and
pop
lock
shlb
stc
sar
cmpb
sbb
inc
scas
inc
mov
jl
into
in
ss
fs
lods
or
pop
roll
ljmp
xchg
out
pop
jmp
or
pusha
and
ret
add
cmpl
jmp
and
rcr
out
enter
push
sub
cwtl
sti
loopne
andb
jnp
mov
pop
jb
ljmp
mov
in
xchg
adc
sub
and
js
adc
adc
mov
adc
jp
scas
hlt
inc
sbb
push
cmpsb
mov
xchg
pop
mov
sbb
inc
int
int3
fld
sbb
add
cli
fldcw
and
incb
xchg
mov
enter
testl
aam
xchg
sbb
shrl
ret
mov
mov
sbb
scas
fwait
inc
sti
push
sti
fnstenv
cmp
scas
lods
xchg
outsb
movsl
pop
rclb
js
fldt
dec
cli
adc
mov
mov
lcall
hlt
fwait
add
sarb
fmuls
push
jns
nop
or
inc
icebp
xchg
xchg
lret
rorb
mov
int3
lret
push
int3
sahf
mov
sub
jmp
xor
sub
push
pop
adc
pop
xchg
sub
lss
outsl
or
push
out
lret
fsubp
lahf
adc
lds
cmpsl
or
sub
mov
fs
addr16
jp
jle
fiadds
add
stos
mov
js
mov
xchg
push
data16
lcall
nop
dec
dec
pop
xchg
cmp
es
mov
and
loop
push
push
xor
pop
mov
out
dec
mov
cmp
mov
je
jno
mov
insb
add
sub
mov
xchg
dec
mov
in
cld
dec
mov
xlat
das
sti
or
push
es
mov
cltd
or
dec
mov
mov
xchg
cmp
lret
hlt
and
fisttpl
sub
sub
lods
jnp
cld
out
xor
jmp
mov
dec
f2xm1
mov
cmp
add
es
mov
in
stc
les
shl
cwtl
ffree
sbb
lahf
ss
or
scas
aas
fsubrs
imul
xchg
inc
gs
sub
xor
dec
faddl
vmread
adc
lahf
lods
mov
repz
imul
jb
and
fisubs
or
push
out
test
adc
push
gs
cmp
ljmp
pop
push
icebp
pop
xchg
in
cmp
lcall
imul
push
fwait
loop
je
cmp
loopne
and
cmp
pop
hlt
jl
lea
shrb
inc
inc
popf
adc
aaa
int
lcall
in
or
int3
in
aam
mov
in
mov
je
jmp
lods
mov
hlt
stc
iret
jl
outsb
cmc
mov
jl
cmpsb
shl
push
add
mov
push
xchg
sahf
cmpsl
lahf
gs
mov
aam
sti
mov
and
dec
adc
cmp
push
sbb
in
ret
push
imul
jmp
pop
or
ljmp
out
adc
jno
mov
arpl
pop
inc
adc
jno
xchg
rcl
cli
sbb
jns
jle
pop
int3
in
fcmovbe
lds
flds
lock
out
js
cwtl
adc
add
mov
stos
les
pop
shlb
mov
jno
add
cs
xchg
arpl
insl
movsb
ja
fiadds
sub
repz
shlb
into
ja
cmpsb
mov
std
xchg
xchg
mov
mov
or
push
pop
out
nop
out
mov
mov
fmulp
int
cmp
mov
xor
in
push
lret
push
jbe
add
enter
in
shlb
and
mov
popf
addr16
cwtl
mov
jge
inc
or
aam
mov
jecxz
pop
mov
jns
aas
jne
push
lret
xchg
mov
xor
mov
mov
bound
iret
dec
cmp
fisubrl
rclb
in
cld
dec
xchg
mov
popf
imul
in
lods
xchg
stos
dec
outsl
adc
daa
mov
pop
xor
ja
lods
inc
inc
cmp
fnstenv
pop
icebp
cmp
xor
in
imul
mov
stc
xlat
popf
jecxz
lahf
int3
dec
pop
lock
cmp
sbb
xchg
or
popf
call
loop
lds
jno
mov
aaa
lock
imul
add
iret
adc
js
mov
popf
ja
mov
jg
jae
popa
dec
push
dec
out
mov
inc
dec
pop
test
push
lret
cmpsb
xor
or
in
jb
pop
jne
in
iret
int3
ret
push
xchg
sar
test
adc
nop
lock
pop
sbb
pop
sti
mov
xchg
cmp
jns
sbb
mov
rcll
ret
addr16
mov
jno
mov
push
xchg
mov
dec
sub
popf
mov
in
mov
inc
sub
dec
outsl
add
aas
rep
sub
ret
fwait
sub
aam
enter
cmp
or
mov
fisttpll
adc
mov
xchg
inc
push
in
popa
or
ret
shll
mov
cmp
lcall
adc
icebp
subl
mov
or
mov
movsb
cld
aaa
aaa
mov
loop
jl
sbb
push
mov
and
cmp
push
in
imul
out
jb
movsb
stc
pop
outsb
push
cmp
fnstcw
fcmovbe
sti
jmp
insl
lock
mov
mov
add
push
gs
push
fimuls
push
xor
fmull
cltd
push
mov
or
inc
imul
and
inc
sbb
pop
call
aam
stc
push
dec
das
pop
jnp
pop
mov
sbb
sub
add
sahf
test
xchg
jmp
dec
cmpb
jmp
xlat
stc
xchg
pop
js
test
xor
pop
pusha
pushf
sub
or
les
addr16
arpl
shlb
inc
mov
ds
and
sbb
into
ffreep
xchg
notb
mov
mov
add
cmp
push
xchg
ljmp
fcoms
cmp
jbe
jp
rcr
mov
push
fstps
jno
lahf
and
clc
cmp
adc
out
sbb
push
and
loope
fs
test
pushf
pop
aaa
mov
repz
not
negl
and
les
jns
xchg
add
pushf
xchg
jmp
pop
out
test
xchg
repnz
jge
notl
mov
js
xchg
sti
inc
shl
inc
cmc
std
in
inc
lods
or
stos
repnz
ja
mov
mov
jb
shlb
cli
lods
adc
sti
js
xchg
bound
and
loop
insb
lods
adc
fstpl
and
jo
js
lds
mov
std
ret
mov
jmp
jno
jp
ja
jecxz
test
add
std
es
sbb
inc
aam
fisubl
test
and
je
mov
test
ret
sbb
pop
xor
in
arpl
mov
int
insb
shrl
sbb
cli
xor
push
jno
lahf
push
std
cmpsl
jo
fsubr
xchg
jge
or
lds
jle
sub
add
inc
adc
and
cli
mov
gs
or
mov
imul
out
addb
gs
loope
inc
pop
negb
scas
jecxz
fisttpll
pop
test
stos
or
into
dec
xchg
ds
js
add
loopne
lods
out
stos
mov
ja
jmp
mov
xor
cmp
add
cmp
int3
and
lods
mov
inc
movsl
inc
cmp
cmp
sbb
xlat
std
std
pop
pop
sub
mov
jg
jmp
jbe
dec
jg
shl
repz
jg
bound
push
push
aad
sbb
pop
insb
cltd
or
loop
mov
xor
cmp
arpl
mov
leave
aas
dec
mov
enter
popa
push
jl
or
mov
movsb
imul
push
arpl
adc
xor
movsl
push
dec
mov
mov
out
dec
les
pop
lods
xchg
test
iret
push
jecxz
call
movsb
dec
jno
xor
dec
call
mov
inc
jl
xchg
xor
xor
pop
sub
in
gs
loopne
iret
out
fcoms
cmp
add
jo
mov
popf
fbld
mov
repz
push
xchg
xor
test
inc
dec
xchg
cmp
out
in
nop
dec
out
sti
inc
addr16
fistps
pop
inc
push
mov
sub
add
cwtl
xchg
or
fs
dec
adc
cmp
push
lods
scas
test
inc
cwtl
sbb
dec
dec
pop
adc
mov
hlt
in
sbb
mov
xchg
inc
mov
shr
nop
int
inc
stos
jge
cmp
mov
inc
lret
jg
inc
push
loop
add
cmp
test
daa
push
jne
jle
dec
repnz
sbb
icebp
ljmp
repz
aad
sti
rolb
bound
cmp
pop
inc
aad
lcall
cmp
daa
cmp
gs
fcom
lods
push
jmp
and
out
inc
sub
push
inc
mov
shlb
or
les
cmc
clc
in
adcl
mov
bound
cltd
aam
adcb
add
or
into
xor
lds
xlat
loopne
insl
cmp
pop
mov
and
xchg
sub
in
cli
jno
insb
xchg
jl
in
rcll
lahf
dec
mov
xor
jl,pt
mov
dec
pop
lds
mov
add
fidivs
lea
xor
sub
mov
stos
aad
add
add
out
sbb
int3
enter
cmpsb
cmp
lahf
sbb
scas
cmp
fsubrl
mov
pop
mov
lahf
mov
stos
rcrb
cli
jnp
xor
lcall
lahf
test
in
mov
fmuls
addl
dec
in
xor
repz
out
movl
cmp
insb
sub
cld
outsl
mov
in
cwtl
out
arpl
mov
adc
inc
imul
push
xchg
mov
and
pop
jo
and
sub
mov
fcoms
insb
andb
insl
or
adc
cmpsl
xor
test
scas
or
pop
xorl
call
jecxz
out
cmp
fbld
lret
xchg
test
in
lods
in
int
xchg
xor
clc
rorb
nop
inc
xor
int3
and
add
sbb
pop
and
rcll
into
lret
dec
test
or
push
jnp
add
fisttps
loopne
inc
loope
push
pop
mov
loope
jb
js
repz
pop
pop
jmp
jmp
cmc
inc
aad
call
xchg
test
cmp
out
divl
push
pop
push
xchg
sbb
push
push
lea
adc
adc
push
outsb
add
add
into
loopne
notb
mov
push
xchg
pop
rol
xlat
scas
jecxz
sarb
sub
into
int3
push
rolb
fstps
and
cmc
imul
rorb
std
and
add
jo
cmpsl
mov
outsl
xchg
push
jg
lret
add
add
mov
cmpsl
or
movsb
mov
add
dec
xor
pop
cmpsl
or
or
jecxz
pop
xor
add
outsb
bound
out
push
mov
mov
sub
hlt
dec
outsl
pusha
xchg
ja
lods
or
cltd
pushf
stc
sbb
xchg
inc
leave
sbb
cmpl
jle
frstor
adc
jbe
out
mov
stos
pusha
mov
movb
jno
stc
stc
dec
jmp
xor
adc
out
in
pushf
ss
push
jnp
inc
push
fmulp
aam
jmp
mov
dec
sbb
aam
shrl
cmp
mov
mov
jae
mov
add
add
int
sub
ds
dec
pop
cmp
scas
dec
push
filds
popf
loopne
inc
cld
in
jl
lret
pop
nop
arpl
push
inc
sbb
mov
pop
cwtl
insb
ret
pop
out
pop
ljmp
es
scas
add
xchg
push
fstpt
shrl
or
gs
cmp
dec
mov
mov
sub
iret
jge
sti
jp
mov
hlt
sbb
cpuid
in
jae
mov
xchg
popa
bound
cmpsb
pushf
pop
jne
adc
arpl
movsl
lret
mov
jl
mov
cmp
mov
mov
dec
enter
sbb
and
popf
hlt
adc
or
pop
mov
lods
leave
mov
repz
jge
ret
jmp
push
jno
out
jne
insl
dec
jae
inc
xchg
push
lcall
pop
in
ss
and
jne
inc
cs
lcall
xor
mov
jecxz
das
sti
out
sti
sbb
fldenv
xchg
mov
sub
fnstcw
add
pushf
dec
inc
ffreep
jnp
or
addr16
add
adc
test
insl
mov
inc
ljmp
jmp
gs
xor
pop
vmovlps
adc
pop
rcrl
lret
sbb
shrl
add
pop
add
testl
in
inc
xchg
jae
lahf
or
inc
and
dec
mov
dec
xlat
sbb
or
mov
xchg
lock
cmp
outsb
sbb
push
lcall
jmp
es
mov
jae
cmpsl
pushf
or
jl
add
cmp
and
cli
push
xor
inc
sub
fwait
pop
out
ja
in
xchg
adc
push
ret
rcrb
pminsw
push
cmpl
mov
push
xor
imulb
adc
or
fnsave
xchg
push
or
std
mov
cmp
sbb
flds
stc
mov
xchg
and
dec
cmp
sub
inc
stc
clc
sub
imul
mov
mov
jns
shll
jnp
scas
loope
sub
xor
out
andl
xor
aaa
bound
dec
cli
lret
leave
loop
inc
pop
movsb
repz
ret
jp
sub
fdivs
fs
insb
ljmp
xlat
inc
pusha
mov
ja
scas
arpl
and
cmp
sub
icebp
lock
xor
es
jne
sahf
cmpsl
pop
popa
jbe
shll
jg
pop
pop
xchg
ja
sahf
and
mov
int
shlb
and
mov
inc
or
mov
jle
mov
fimull
pushl
adc
shl
xchg
loopne
push
adc
add
imul
imul
into
scas
adc
call
sub
out
mov
mov
in
dec
pop
or
dec
cli
mov
xchg
dec
inc
adc
hlt
mov
cmpsb
and
lods
in
xor
adc
loopne
jb
mov
lahf
jge
test
movsl
adc
pusha
lods
pushf
mov
pop
xor
sub
push
sbb
inc
xor
fs
test
add
outsl
orb
add
addr16
ret
mov
out
out
xchg
sub
or
fdivl
leave
mov
insb
jmp
ret
and
or
es
dec
jb
mov
add
in
and
and
shl
cltd
dec
mov
dec
push
inc
xor
push
imul
mov
imul
xchg
adc
pusha
loop
loop
sarl
into
aaa
inc
dec
xchg
inc
fisttpl
adc
mov
stos
mull
adc
cmp
pusha
jg
mov
fsub
imul
filds
cwtl
fstps
out
jno
xchg
movsb
xor
dec
sbb
xor
mov
repz
aam
cmpsl
fwait
bound
in
xor
pop
ficomps
scas
movsb
mov
rorb
adc
adc
sbb
fistps
jbe
mov
sbbl
add
xchg
fldlg2
into
and
xor
xor
or
lret
adcb
sub
pop
or
or
pop
dec
inc
popa
mov
inc
mov
xchg
lcall
and
cld
inc
pop
or
jl
jmp
xchg
ds
test
pop
xchg
cs
push
sbb
jmp
insl
jl
fmul
jae
out
push
out
add
enter
fisubl
inc
adc
mov
cmp
aaa
iret
xlat
add
inc
lods
push
xchg
ret
add
nop
pop
enter
mulb
gs
bswap
rcrb
ret
inc
cmpl
loop
pop
add
js
adc
mov
popf
cld
ret
mov
lods
test
mov
je
mov
xor
mov
and
xchg
lret
jl
movsl
pop
leave
call
cmc
inc
xorl
negb
push
push
stc
ffreep
jo
and
cmp
cmp
outsl
pop
push
push
sbb
sbb
rcll
pop
lea
push
loop
sbb
pop
mov
add
cli
push
js
imull
sub
mov
mov
xchg
fwait
mov
ss
test
les
pushf
xor
movsb
or
xor
inc
ror
aad
imul
dec
pop
aas
push
and
dec
xor
adc
sti
jp
xchg
imul
pushf
xchg
sub
adc
outsl
ret
mov
jo
scas
xchg
adc
push
std
lock
mov
cli
or
dec
sub
mov
and
sti
adc
test
jl
dec
lock
sbb
ja
ds
nop
sub
push
adc
lods
stos
jne
pop
mov
bound
sub
mov
rolb
in
jg
in
dec
lcall
outsl
aam
mov
lcall
jne
repz
call
or
push
pop
pop
aas
inc
mov
popf
cltd
dec
icebp
mov
cmp
push
popa
adc
loopne
add
idivb
dec
and
cs
cmpsb
jge
sbb
xor
inc
addr16
ja
mov
mov
repz
push
lcall
xchg
aam
jnp
pop
ret
sub
xchg
jno
bound
lods
push
push
or
je
add
sub
add
or
mov
cmp
cltd
jmp
imul
push
mov
cmp
les
adc
jae
xchg
mov
push
xchg
fists
js
shlb
xchg
and
pushf
subb
lahf
jg
rolb
mov
mov
add
mov
pusha
pop
out
push
sub
popf
divb
mov
addb
fidivrs
aad
pusha
jae
mov
jns
popa
insb
jp
shrb
sarl
add
ja
fisttpl
push
xchg
jl
adc
psubw
cs
aad
lds
out
cmp
jne
mov
jno
add
xor
and
inc
push
mov
cmp
xchg
xlat
je
cmc
sub
daa
dec
leave
daa
leave
pop
mov
inc
in
ss
fisubrs
mov
push
xchg
shll
ret
es
fisubs
mov
loopne
sub
xchg
sub
mov
movsb
xor
mov
dec
ret
mov
lods
cmp
mov
sub
fnstenv
sub
mov
aas
es
sub
sub
fnstenv
mov
inc
jo
mov
jbe
cld
mov
inc
inc
out
popa
arpl
popa
fcoms
mov
add
cmpsb
popf
mov
aaa
shll
mov
imul
mov
mov
sar
xchg
scas
pop
data16
xor
pop
js
jbe
fstp
fsubl
or
dec
lcall
jne,pt
sbb
xor
mov
std
sub
repz
add
jcxz
mov
inc
jl
aad
lea
mov
xor
cmp
arpl
inc
and
andl
cmp
mov
scas
mov
movsl
ljmp
shr
mov
dec
add
mov
xchg
sbb
leave
or
mov
rcrl
mov
xor
mov
fadds
xchg
orb
pop
out
movsl
jp
push
pushw
cmpb
adc
fisubrl
inc
imul
mov
mov
inc
or
shlb
add
mov
mov
xchg
push
xchg
sub
mov
test
mov
cwtl
gs
mov
fstpt
movsl
pop
xchg
dec
pushf
push
jbe
scas
mov
shlb
inc
add
imul
arpl
inc
je
daa
outsl
insb
cltd
fs
enter
in
adcl
jge
xor
cmpb
mov
add
aad
lods
pop
fsts
dec
out
xchg
adc
cs
sub
inc
lcall
dec
mov
pop
mov
out
aad
push
sbb
jp
cmp
mov
inc
or
in
fstpl
mov
or
xchg
mov
mov
pop
mov
mov
or
rolb
pop
mov
sbb
mov
dec
nop
inc
ret
scas
aas
mov
push
push
cmpl
lods
mov
and
mov
sbb
sahf
stos
dec
leave
push
or
dec
jmp
arpl
imul
mov
sub
add
cwtl
mov
mov
inc
mov
movsb
stos
nop
xor
lods
xor
cltd
jg
mov
insl
pop
cmp
inc
outsb
dec
mov
add
and
pop
or
outsb
fisubs
jno
xchg
mov
or
mov
lea
sub
leave
dec
or
mov
inc
mov
mov
add
imul
add
pop
sahf
xchg
mov
cmp
sub
adc
in
adc
loope
pop
xchg
pusha
mov
popa
xchg
mov
out
sbb
jo
pusha
notl
lods
arpl
pop
stos
clc
lods
jl
cmp
int3
into
add
mov
adc
xor
push
dec
xor
nop
adc
mov
jmp
xchg
add
mov
das
movsl
loop
les
je
shlb
push
test
push
test
pop
incb
repnz
frstor
lret
pop
out
sbb
popl
push
mov
xchg
mov
mov
scas
sub
or
push
push
push
pop
testb
shrb
cmp
lock
and
addr16
outsb
sarb
outsl
xchg
lret
mov
dec
mov
sti
sub
enter
repnz
mov
and
mov
aad
addr16
in
roll
leavew
mov
xchg
xchg
push
scas
jne
adc
adc
fdivl
inc
sbb
cmp
and
adc
leave
movsb
mov
sbbl
xchg
popa
xchg
sbb
mov
pop
rcl
dec
pop
dec
and
fcomp
scas
mov
inc
dec
rorb
hlt
sbb
pop
movsl
test
xchg
mov
hlt
inc
fisubs
cmp
inc
and
mov
cmp
ss
popf
lods
xor
pop
mov
mov
daa
lret
push
sub
fwait
decl
rorb
clc
nop
and
mov
mov
loopne
leave
ja
je
sbb
sbb
sbb
xor
les
jns
shll
push
fstpl
add
add
repnz
daa
insb
jle
test
pop
xlat
stos
inc
jno
or
and
add
dec
in
push
movsb
pop
test
add
arpl
sbb
gs
mov
push
pop
dec
pop
cmpsl
call
popf
jno
divb
add
sub
stos
les
push
scas
addr16
xchg
mov
xchg
xor
mov
mov
adc
push
pushf
out
pop
insb
push
shlb
icebp
mov
dec
in
mov
jns
dec
popa
fldl
into
jp
dec
cmpsl
adc
int3
enter
shrb
scas
repnz
push
nop
push
jl
push
jg
fcoml
sub
rolb
mov
jle
xlat
ds
adc
orl
push
mov
sbb
push
sbbl
xchg
int
jge
lds
rcrb
xchg
scas
inc
rcrb
and
or
lcall
push
sahf
mov
xor
cmpsl
out
hlt
icebp
sbbl
fldenv
mov
out
std
and
mov
outsl
adcb
push
es
sbb
decb
lahf
aad
movsl
pop
ret
test
test
scas
loopne
and
fsubrp
sbb
mov
lret
fwait
ret
mov
xor
iret
in
data16
je
out
nop
in
rclb
das
fisttpll
out
fwait
sub
xchg
pushl
movsl
xchg
inc
out
decl
add
gs
aam
adc
or
lret
push
rcrb
ret
pop
aad
aas
jae
in
and
or
mov
lcall
push
stos
mov
mov
gs
in
inc
out
pop
xchg
jmp
cs
ss
fimull
xchg
into
lcall
nop
xchg
sbbb
pop
adc
adc
mov
mov
xchg
push
or
testl
cltd
jno
push
cmovae
cmp
es
cmp
pop
addr16
add
andb
popa
movsl
adc
push
pop
mov
cmc
push
js
cmp
outsb
shlb
jns
cmc
ss
std
stc
pop
add
cmpsb
scas
sub
jl
xchg
pusha
mov
stc
inc
or
mov
mov
and
xchg
fstpl
ficoml
push
sbb
mov
xor
adcb
fstpl
sub
lds
fidivrs
xchg
mov
jg
inc
mov
outsb
popf
pusha
push
mov
arpl
add
jg
xor
adc
inc
int3
and
add
ret
stc
mov
ljmp
incl
or
stc
mov
push
shrb
cli
xchg
data16
inc
arpl
sbb
push
mov
enter
dec
push
mov
pop
and
and
scas
pop
add
out
sub
jo
mov
lret
sub
and
pop
jmp
pusha
mov
adc
fwait
sub
dec
mov
dec
repnz
push
inc
add
dec
mov
cli
repnz
pop
jmp
outsl
ret
fstl
mov
push
dec
jnp
or
ret
cwtl
or
inc
repz
cmp
xchg
jb
add
sbb
mov
or
pop
sti
dec
ror
adc
cli
popa
mov
pushf
add
mov
and
or
xchg
rclb
in
mov
out
mov
popa
jno
in
jecxz
mov
sbb
lds
fisttps
xor
mov
in
or
inc
ret
sbb
fldenv
cmp
loopne
pop
je
popa
popa
in
mov
addl
cmp
lret
mov
call
ret
sbb
sbb
ss
sub
out
adc
cmp
in
or
insl
jne
pop
popa
dec
das
fidivl
cmp
or
and
adc
mov
ds
dec
inc
xchg
jae
sub
mov
imul
fisttpll
mov
pop
xor
jecxz
pop
test
adc
aad
add
xlat
xchg
data16
mov
mov
movsl
sub
je
lea
sub
lock
aam
cmp
aam
sbb
in
sbb
mov
or
ret
pop
cmp
addr16
add
shr
sub
push
outsb
mov
adc
test
insb
pop
push
ret
push
aam
mov
dec
enter
inc
dec
fdiv
or
imul
pop
lret
pop
cmp
lret
jno
jle
jbe
dec
cmp
mov
out
inc
mov
or
xchg
cmp
fildl
filds
in
cmp
dec
fnstsw
in
ja
xor
inc
sbb
xchg
fdivrp
mov
add
push
daa
stos
cmpsl
push
fists
cmpsl
jne
outsl
mov
dec
cmc
push
push
xor
dec
rorl
jnp
and
lret
iret
inc
or
and
or
stos
push
push
lock
out
les
insl
and
add
fmul
std
hlt
adc
push
inc
or
aad
popf
jnp
mov
fdiv
test
xchg
xor
jmp
mov
cmpb
add
fidivrl
mov
pushfw
cmc
out
cmpsl
jl
mov
or
jno
fdivr
loop
in
shlb
and
lret
jle
sbb
icebp
push
repz
mov
dec
ljmp
fistl
stos
aas
mov
mov
adc
dec
les
icebp
sahf
mov
daa
sub
mov
pop
xor
add
pop
pop
xchg
mov
frstor
adc
mov
adc
mov
push
or
fisttpll
xor
aad
xchg
test
cmp
xchg
pop
outsb
xor
scas
rcrl
int3
and
pop
sbb
adc
fisttps
xor
andb
jp
je
ficoms
arpl
test
push
aad
jmp
xor
add
stos
enter
jne
jne
test
xor
int
js
and
pop
or
xor
je
pop
mov
rcl
and
and
add
pop
ss
xchg
adc
cmp
mov
mov
cmp
push
fs
cmp
cmp
icebp
aaa
sbb
mov
insb
test
ret
xor
or
xor
insb
imul
push
ret
stc
xor
stos
mov
pop
addr16
jmp
cmp
mov
loopne
lock
xor
and
mov
jl
mov
loopne
rolb
mov
mov
dec
mov
inc
jne
insl
lret
xchg
adc
push
call
push
ljmp
movsb
shl
or
aaa
mov
xchg
add
xor
lds
loope
in
cltd
insb
mov
cld
cmp
dec
push
cmp
adc
jbe
je
cltd
mov
push
lea
psrad
mov
dec
outsb
mov
rcrl
sub
cmpsb
pop
out
sbb
push
inc
cmp
mov
or
cwtl
ds
and
ds
inc
jmp
and
imul
loop
mov
imul
mov
mov
jns
jno
mov
clc
scas
push
mov
loopne
pop
outsl
sbbb
push
xlat
fisttps
xchg
sub
scas
push
mov
call
sub
lock
sub
cld
int
rcrb
ljmp
sahf
lret
xchg
rcl
pop
ljmp
scas
sub
mov
movsl
jnp
in
sub
jle
xchg
mov
loop
lret
pushf
cmp
and
mov
lds
fcoms
arpl
dec
fwait
dec
mov
mov
call
mov
fs
into
rorb
push
clc
scas
loopne
pop
jle
xchg
fs
in
dec
jb
mov
mov
xor
les
in
jb
or
or
insb
test
into
mov
push
leave
cli
xchg
gs
push
mov
pop
clc
mov
sub
xlat
xor
adc
jecxz
sub
inc
push
test
aad
mov
pop
clc
ror
mov
push
mov
mov
jecxz
stos
mov
outsb
jg
add
pushw
das
popf
push
mov
shlb
pushf
xorl
mov
xchg
jl
xor
sub
call
jo
clc
xchg
inc
lret
mov
add
add
cwtl
cmpsb
call
fs
sub
add
fistpll
fldenv
mov
cmp
pushf
jnp
out
imul
mov
sub
mov
pop
cld
mov
repnz
aam
xor
pop
or
xlat
xor
sub
decl
add
test
xlat
negl
push
push
imul
pop
in
dec
test
xor
mov
push
pop
xor
aaa
pop
rolb
call
sbb
or
pop
ret
cwtl
repnz
lock
les
push
dec
loop
add
push
jecxz
aad
stos
scas
std
jo
dec
test
dec
clc
push
push
fwait
xchg
jbe
xchg
jno
lret
aad
xor
jnp
fildl
fildll
mov
mull
xchg
movsb
stos
inc
imul
cltd
aas
mov
imul
adc
aas
xchg
jl
push
dec
out
das
pop
pop
sbb
outsb
cmpsb
stos
fistps
fcmovnu
jp
adcb
fs
or
dec
and
imul
notl
jnp
pop
sbb
dec
outsb
js
xor
or
mov
jne
mov
lret
xchg
inc
inc
shll
and
adc
ss
fsubrs
fxch
push
jnp
pop
and
jmp
push
xchg
shlb
xor
sahf
or
jns
push
outsl
sbbb
inc
jmp
pop
cld
ret
data16
andl
loop
sbb
adc
push
or
mov
insb
nop
add
pop
pusha
addr16
inc
cmp
push
or
inc
stos
enter
inc
clc
stc
push
insl
inc
aaa
push
es
pop
cmpsb
inc
stc
cmc
mov
lahf
inc
sahf
add
popa
call
mov
or
icebp
pop
nop
mov
imul
test
jnp
cltd
jbe
inc
and
jne
cmp
cmp
sub
sub
add
cmp
mov
cld
insb
jne
jns
jge
and
pop
cmp
or
sub
cmpsb
lret
and
pusha
sbb
ljmp
enter
mov
subb
mov
jl
dec
jno
fcmovbe
pusha
mov
cwtl
jnp
imul
inc
mov
or
mov
lds
mov
dec
push
popf
xchg
and
ss
imul
lret
push
cmp
mov
outsb
icebp
xor
adc
mov
add
popf
js
dec
or
push
pop
lahf
fldt
xlat
lahf
into
sub
fs
jb
xor
movsb
js
loopne
add
add
jbe
jmp
mov
push
xchg
jno
outsb
push
xchg
cmp
dec
aad
pop
push
adc
mov
je
les
cmp
pop
ret
les
adc
push
push
je
clc
rcrl
in
sub
mov
mov
out
in
and
and
call
jbe
outsl
sbb
call
test
mov
jge
mov
loopne
mov
lahf
dec
std
jb
jmp
cmpsb
pushf
inc
cli
fimuls
jl
xchg
and
mul
jne
inc
dec
test
add
loopne
out
leave
ds
add
mul
loope
adc
pop
xor
xor
sbb
dec
inc
in
mov
arpl
add
data16
jae
shr
adc
je
lea
push
or
gs
xchg
mov
add
fnstsw
mov
mov
jnp
int3
rolb
add
out
mov
sti
daa
push
mov
imul
popa
imul
lods
sbb
scas
sti
outsl
rcrb
pop
push
repnz
mov
and
cli
lea
push
out
inc
adc
xor
inc
into
fcmovnb
jge
cwtl
mov
jae
lock
mov
nop
sti
lea
dec
sub
inc
jg
fsubl
sub
inc
add
ljmp
test
loopne
lods
sub
incb
cli
clc
inc
mov
lahf
dec
xor
in
jle
mov
aaa
movsl
jnp
cmpsb
xchg
adc
or
inc
xlat
inc
add
popa
or
mov
push
inc
xchg
adc
aad
movsl
jp
jbe
inc
cli
cmp
imul
xchg
cld
inc
lea
jne
cmp
xchg
xchg
xchg
ljmp
mov
cmp
inc
inc
inc
inc
shll
mov
jecxz
inc
push
stc
cmp
xor
mov
ss
adc
cmp
push
xor
ret
cmp
mov
ret
xlat
repnz
aam
gs
inc
insb
lahf
icebp
jmp
dec
sarl
loopne
xor
test
pusha
inc
sub
lcall
cli
test
sbb
lret
es
sti
xlat
jecxz
jns
mov
sub
xor
push
dec
fidivs
test
add
cmp
cld
add
int3
je
test
xor
insb
and
and
push
or
inc
insb
cwtl
dec
pop
enter
cltd
or
fisubl
cwtl
push
inc
add
hlt
adc
testb
pusha
lret
xchg
test
cli
cltd
ret
pusha
mov
aaa
pop
xor
xchg
lods
xchg
leave
jae
push
xor
mov
inc
mov
das
inc
mov
or
sahf
pop
pop
mov
push
push
sti
int
mov
into
imul
in
dec
in
insl
idivb
mov
stc
into
xchg
dec
dec
push
jnp
cmp
out
mov
pusha
inc
popf
add
inc
shll
rcl
ficoms
and
movsb
pusha
jl
xchg
les
cmp
hlt
leave
mov
or
sub
into
fistpl
int3
add
add
fidivrl
mov
repnz
divb
push
jge
lahf
call
add
movsl
cmp
push
mov
inc
idivb
aad
stos
mov
mov
loop
pop
fimuls
push
stos
sub
je
cli
push
jle
sti
aaa
outsl
xchg
fcmovbe
push
and
mov
cli
ss
mov
xchg
mov
mov
in
fcomip
xor
jbe
pop
scas
inc
nop
dec
mov
xchg
rolb
sub
mov
pop
ljmp
xor
cmpsb
cmp
sub
shlb
mov
add
stos
inc
loopne
jb
xor
scas
add
das
mov
sbbb
jl
loop
add
mov
or
adc
popl
sti
in
sarb
or
mov
movsl
jl
cmpsl
and
mull
adc
adc
or
and
add
add
mov
je
movsb
insb
insb
mov
jmp
mov
mov
mov
xor
addr16
xlat
jne
repz
jo
mov
das
xor
push
xchg
mov
adc
jb
outsl
lea
mov
xchg
in
cwtl
cld
jno
repz
test
pop
lea
loopne
push
pusha
sbb
or
jae
sbb
cmp
fcomi
sub
arpl
and
fbld
testl
inc
gs
movsb
cmp
dec
sahf
inc
cmp
mov
push
dec
sarb
notl
inc
pop
push
add
pushf
add
mov
fisubl
cld
jge
jge
insb
xor
and
lock
dec
jp
push
mov
and
fbstp
push
js
nop
xchg
xchg
jae
ss
push
pushf
dec
cmpsb
cmp
jb
mov
xor
sahf
xor
or
and
cmp
sbb
mov
xchg
xor
std
adc
adc
jne
jno
cli
dec
xchg
iret
mov
sub
popf
dec
mov
nop
mov
or
cmc
pop
cltd
inc
in
pop
or
and
pop
sub
stos
stc
ljmp
scas
push
mov
loopne
outsl
push
xchg
inc
jne
pop
aam
mov
inc
push
fisubs
sarl
and
into
hlt
or
and
fbstp
fisubrl
adc
shll
outsl
xor
cs
adc
xchg
es
sarl
cmp
push
loop
dec
mov
pop
cmp
test
and
mov
dec
inc
cmp
push
mov
jp
add
sti
hlt
lret
popf
aaa
add
or
iret
add
mov
mov
das
in
push
aam
mov
movsl
dec
mov
out
loop
push
loopne
mov
xor
mov
arpl
and
gs
shll
push
imul
sti
dec
das
shrl
shlb
sub
ret
je
pop
or
push
mov
mov
int
jne
pop
loop
fcmovnu
push
popa
popa
dec
jmp
mov
xchg
cltd
inc
cmp
pop
mov
dec
mov
push
lods
dec
inc
sti
inc
push
xchg
xchg
sub
mov
fisubs
adc
jmp
nop
incl
push
cmpsl
inc
loope
jmp
mov
outsb
notl
add
inc
es
clc
rorl
jae
mov
xchg
ds
jecxz
push
lds
jl
mov
ja
dec
sbb
arpl
in
imul
mov
out
lea
das
dec
and
sub
jne
jnp
mov
sub
fnsave
push
cmp
mov
xchg
sub
enter
mov
mov
or
jl
pop
xchg
icebp
or
out
js
test
aam
inc
xchg
cld
into
xor
mov
lock
addl
sbb
mov
jnp
push
cwtl
xor
mov
mov
loopne
scas
movb
daa
jno
cltd
push
pop
icebp
xor
filds
cmp
pop
imul
lock
dec
jmp
loopne
pushf
repz
mov
incl
xchg
in
cltd
xchg
mov
cltd
or
outsb
repnz
popf
scas
movsl
aam
negl
xor
inc
xchg
push
out
popf
mov
mov
cwtl
xchg
rolb
xor
pop
adc
jp
or
xor
mov
cmp
sub
shrb
aad
xor
mov
scas
cwtl
shll
stc
adc
jp
dec
pop
iret
subb
mov
ljmp
sub
cmp
mov
fcmovb
xchg
lahf
mov
repnz
decb
jmp
cmpsl
mov
test
mov
scas
add
or
jg
pushf
shll
test
sub
frstor
xorl
test
flds
inc
out
jle
mov
push
stos
push
cld
int
inc
int
dec
inc
outsb
loop
int
ds
sbb
arpl
daa
and
pusha
pop
push
scas
arpl
mov
loope
shrb
jnp
rcrl
aad
jl
arpl
je
jae
mov
clc
stos
std
adc
sbb
stos
push
lods
ljmp
call
mov
mov
add
fnstsw
mov
insl
je
mov
cltd
data16
int3
stos
movsb
lret
clc
dec
push
jne
leave
pop
jg
int
mov
testb
comiss
scas
push
push
mov
lds
xchg
pmulhw
mov
mov
mov
dec
rcl
fwait
and
test
cmp
aas
test
leave
dec
lea
stc
repnz
adc
sbb
pop
lds
adc
pop
adc
jbe
cmp
xchg
scas
mov
shlb
cmc
pop
sbb
gs
repnz
outsl
arpl
push
cmp
fists
mov
pop
adc
fwait
and
aas
push
push
jae
mov
std
inc
mov
sbb
mov
jmp
pop
fsubr
jne
push
rcrl
iret
gs
out
dec
cmp
jbe
cmpsb
dec
scas
mov
ss
popa
out
lods
fcmovbe
and
mov
sub
scas
out
cld
stos
outsb
adc
call
jb
jp
mov
sub
scas
mov
pusha
std
loop
mov
test
adc
repnz
and
or
push
and
adc
cli
dec
jns
incb
and
jns
icebp
aam
fildll
sbb
cwtl
mov
sbb
pushf
cmp
std
mov
outsl
mov
fwait
pop
mov
into
push
popf
add
clc
sbb
push
jns
push
enter
cmpsb
test
dec
cwtl
arpl
dec
push
mov
add
shll
xor
jnp
xor
mov
jl
movsb
test
shll
lock
fyl2x
jnp
dec
getsec
mov
in
test
sbb
enter
imul
ret
mov
mov
mov
push
cld
insb
cltd
jmp
insb
adc
in
lock
shr
out
mov
les
fsubs
addr16
fcompl
insl
and
ret
pop
test
jp
dec
jno
jmp
lcall
lahf
mov
sbb
inc
test
sub
inc
add
sbb
adc
iret
xor
fistpl
push
dec
adc
push
mov
popf
aaa
adc
call
in
cmpsl
cli
and
push
mov
xchg
callw
lods
push
mov
ljmp
fldl
xor
aam
pop
mov
push
lret
fisubrs
enter
xor
sbb
push
popa
enter
inc
icebp
cmp
adc
sahf
sbb
and
sti
pop
dec
sti
addb
add
mov
sub
or
loope
cmp
ret
mov
out
pop
sub
sub
aad
lock
shlb
movsb
adc
arpl
push
cli
out
xchg
ljmp
inc
mov
cmp
les
mov
shll
mov
cld
add
sbb
inc
adc
incl
les
mov
stc
enter
loope
testb
pop
rcl
and
push
cwtl
pop
mov
insb
xchg
jno
out
aaa
cmp
pop
sahf
cwtl
mov
rcll
in
sbb
mov
cmp
push
lds
gs
imul
cmp
push
dec
mov
cli
jb
int
and
les
push
mov
lods
pop
mov
mov
inc
mov
lcall
sahf
or
shrb
push
xor
fstps
sbbl
mov
push
lahf
outsb
ja
xor
mov
push
mov
ja
cltd
xor
fisubl
in
adc
int3
adcb
push
or
sbb
mov
fisttps
cmpl
std
aas
jmp
sbb
jp
push
fisttps
addr16
in
push
mov
cmp
push
hlt
in
sarl
add
and
inc
arpl
mov
leave
sahf
dec
push
popa
scas
out
mov
cmp
fstps
pop
aad
dec
cli
mov
xorb
sbb
add
or
cmp
cs
int
das
mov
jecxz
lahf
push
mov
jbe
mov
stos
imul
and
add
add
out
cmp
xor
and
test
ljmp
pop
std
add
movsl
cmc
adc
gs
pop
into
gs
cmpsl
daa
mov
push
cmp
repz
sti
stc
mov
sbb
je
pusha
pop
cli
sub
nop
ja
lock
das
mov
leave
push
mov
xor
xor
ret
in
mov
dec
mov
scas
inc
add
les
add
add
sar
inc
or
sahf
mov
mov
mov
inc
and
in
aad
into
mov
push
push
xor
fwait
lods
and
adc
sbb
lods
sub
push
aaa
cld
rcrb
popa
dec
test
jno
sarb
enter
dec
adc
xchg
repnz
sub
test
fbstp
or
lods
mov
in
aam
push
dec
push
inc
mov
loope
jnp
loop
mov
jle
cmpsl
cmp
or
pop
push
push
jg
dec
dec
sti
cmp
adc
pop
cwtl
imul
in
in
sbb
daa
jbe
imul
dec
adc
idivb
mov
les
icebp
stos
movsb
insb
rep
inc
add
mov
rcrl
or
dec
xchg
call
lret
mov
jle
mov
or
mov
test
jns,pt
addr16
add
repz
lock
push
mov
jnp
ljmp
inc
scas
iret
add
pop
cmpsl
cmp
dec
jl
xchg
jmp
ds
mull
lea
mov
mov
repnz
aad
mov
sub
mov
imul
mov
test
jmp
inc
add
dec
xor
jp
jns
aad
cwtl
es
push
mov
push
call
adc
sbb
stos
sbb
jns
xorl
mov
inc
dec
pop
add
clc
push
rcrl
xor
mov
push
or
mov
push
mov
pop
rclb
hlt
lods
add
mov
push
mov
cli
into
sub
add
repnz
ja
cmpsb
mov
cmp
and
cmpsl
adc
pop
mov
mov
fdivrl
pushf
mov
inc
js
dec
mov
decb
mov
das
push
xchg
xchg
fnstenv
xor
bound
ljmp
scas
mov
xchg
dec
mov
push
dec
mov
mov
in
fstl
cmp
cmc
std
xchg
sbb
loope
xlat
push
cmp
dec
jecxz
sub
lock
inc
in
andl
cmp
shr
out
mov
jmp
idiv
xor
jle
notb
pop
mov
xor
sahf
sahf
lds
dec
xchg
cmp
aaa
cmp
push
data16
xchg
inc
xchg
or
pop
mov
sub
sahf
xchg
jge,pt
mov
mov
dec
mov
clc
dec
ds
mov
pop
adc
test
jge
out
push
mov
out
adc
xor
ljmp
fsubrs
push
out
mov
adc
movsb
inc
sbb
js
std
in
xchg
cwtl
nop
jecxz
clc
je
mov
insl
sub
push
mov
pop
xorb
xchg
aad
lahf
aas
sarb
rcrl
pop
daa
inc
jp
mov
shrl
push
pop
cltd
or
lock
cwtl
sbb
por
jb
fwait
lret
xlat
mov
mov
fists
mov
xchg
mov
int3
cmpsl
pop
xchg
push
push
dec
cmp
js
adc
mov
jg
cmpsb
insb
jmp
pop
cmp
sub
in
aaa
int
fcoml
das
rclb
mov
mov
jnp
cmpsl
cli
scas
cmp
out
mov
pop
imul
push
push
popa
inc
sub
in
popa
out
pushf
fsubl
ljmp
and
xor
lahf
test
mov
data16
outsb
sbb
pop
fstpl
cmpsl
push
and
test
jge
dec
in
cmp
and
xor
mov
inc
hlt
push
cs
jl
push
ljmp
shl
scas
pop
icebp
xor
lock
rorb
movsb
sub
jg
psubd
push
sub
xchg
shl
lods
push
dec
shrb
sub
and
std
test
iret
mov
xchg
ss
jne
dec
pop
pop
in
stc
sub
pop
mov
sbb
jno
xor
inc
lock
insb
clc
and
out
inc
xchg
jae
test
cmp
aaa
adc
ss
xchg
jo
pop
mov
mov
dec
test
and
xorb
or
aad
stc
iret
inc
xchg
lret
jns
cmp
cmpsb
cltd
xor
mov
into
fldl
call
hlt
scas
in
imul
in
mov
loopne
xor
or
cmpb
cltd
jno
shll
mov
loope
pop
push
push
icebp
sub
xchg
mov
roll
jg
jne
aas
mov
movsb
sahf
xlat
imul
outsl
sub
dec
and
mov
mov
out
mov
and
jo
cmpsb
insl
push
ret
xchg
and
test
sub
and
les
jp
out
jge
or
sarb
pop
pop
sub
jmp
call
imul
ja
loope
pop
or
jecxz
test
stos
outsl
int3
ja
arpl
pop
xchg
test
loopne
sbb
cmp
pop
enter
fcoms
mov
dec
nop
pop
pusha
adc
mov
adc
xor
insb
int3
add
stc
shlb
aad
cld
dec
xor
enter
clc
push
mov
jmp
xchg
das
push
inc
lods
push
pop
in
shl
and
mov
push
cs
sub
jnp
inc
or
cmpsl
dec
lock
test
jae
pop
add
test
scas
aaa
jae
mov
inc
in
push
fdivl
push
jb
add
out
int
jmp
addb
xchg
xor
fsubl
and
nop
mov
ljmp
mov
and
mov
fcmovbe
repnz
mov
andb
lea
jge
or
sub
xchg
loopne
lods
mov
adc
mov
add
add
sub
jb
push
cmp
jns
push
pop
xlat
dec
mov
iret
xchg
and
sbb
pop
jle
fwait
or
mov
mov
sub
and
insl
cmp
xlat
lods
jnp
notl
les
je
xor
mov
mov
rolb
lods
xor
mov
mov
addps
addb
cmc
dec
adcb
pop
push
stc
sti
out
pop
sbb
cmp
cmp
mov
xchg
adc
lods
fs
out
fnstenv
ja
js
push
xchg
add
push
into
dec
lahf
fistpll
out
sbbb
and
in
mov
lahf
test
sub
push
sub
gs
adc
cmc
inc
cmc
mov
rcrl
aad
mov
scas
or
ret
sarl
mov
inc
pusha
jle
enter
enter
push
jg
xchg
xchg
push
pushf
lea
test
cmc
leave
adc
lcall
push
cltd
cltd
mov
fsubrl
xchg
push
or
in
pop
enter
add
flds
fldl
push
mov
sub
xchg
inc
push
enter
std
les
cltd
or
shll
and
jne
popa
xor
push
or
in
jns
faddl
loope
sbb
mov
push
sahf
mov
mov
or
or
insb
sub
inc
xchg
in
ss
daa
xor
testb
mov
push
mov
xchg
rolb
pop
je
add
int
add
sbb
sbb
loop
xchg
int3
dec
imul
mov
xchg
cmp
negl
mov
andb
dec
inc
sub
pop
in
enter
jns
das
enter
mov
xor
stos
pop
jno
cwtl
sub
gs
dec
jnp
jle
pusha
loopne
popf
test
sub
mov
mov
dec
mov
mov
scas
sub
push
pop
mov
xor
les
add
inc
xchg
push
aam
or
je
dec
adc
into
cmp
sbbl
xlat
push
pop
arpl
xchg
push
or
nop
inc
movsl
mov
mov
jmp
in
push
sub
jmp
inc
push
xchg
xchg
lods
mov
jge
lcall
test
sub
mov
int3
in
cmp
inc
lahf
mov
xchg
adc
or
pushf
sub
sti
loopne
out
icebp
rolb
xor
add
rcrb
sbb
inc
imul
sbb
scas
jg
in
bound
adc
les
dec
push
push
mov
push
repnz
std
fnop
jne
aas
cltd
add
push
jmp
mov
inc
imul
roll
scas
in
add
int
std
ret
pop
lods
and
jo
bnd
adc
std
lret
add
push
clc
add
ror
sbb
pop
dec
sub
xchg
int
sbb
sub
pop
mov
mov
idivl
mov
cli
cmp
sti
lock
or
cmp
sbb
and
sbb
in
das
test
dec
pop
pop
xor
mov
mov
xchg
dec
adc
lret
cwtl
int3
cld
stc
push
popf
das
xchg
sarl
pop
loopne
call
lods
xchg
insl
stos
jbe
out
inc
cli
sahf
das
es
lock
das
sbb
add
arpl
cltd
stos
test
aas
push
push
inc
int
pop
repz
imul
inc
fwait
pop
shrl
and
inc
jnp
fisubrl
fists
jl
mov
sbb
inc
inc
subb
test
stos
sub
aad
out
stos
in
xlat
std
push
jl
dec
nop
dec
movlps
push
test
sbb
cmp
fdiv
imull
ljmp
nop
movsl
jmp
daa
shll
sahf
pop
cmp
test
or
addr16
std
lea
sahf
push
dec
adc
jp
cmp
push
dec
jg
jns
popf
in
push
and
repnz
cmp
mov
mov
mov
mov
cmpsl
out
testl
test
repnz
inc
enter
in
jge
jbe
xor
jno
cmpl
push
sahf
mov
test
lcall
sub
mov
pop
std
dec
xor
inc
xlat
jbe
pop
into
fisttpll
sub
inc
es
loopne
fistpl
shl
mov
jle
std
daa
pusha
sub
flds
lock
and
lret
mov
mov
clc
mov
scas
and
dec
inc
dec
and
or
call
icebp
mov
mov
mov
ss
mov
ja
scas
mov
mov
push
dec
sbb
stc
cwtl
cmc
sub
push
or
cmpsb
mov
mov
or
aaa
jo
fdivs
mov
dec
add
enter
inc
jo
daa
ljmp
loop
orl
jo
sti
cwtl
into
push
pop
loopne
jge
and
arpl
jo
push
xor
mov
mov
enter
out
mov
rcl
xor
ss
enter
mov
pop
mov
adc
popa
in
pop
cli
cmp
cli
pop
ficomps
dec
xchg
insl
dec
movl
divb
icebp
cmc
std
lea
mov
lret
mov
les
call
push
mov
fbld
mov
mov
fstpl
mov
lret
sti
adc
out
scas
sbbl
adc
push
mov
jl
scas
inc
leave
xor
pop
mov
push
adc
inc
sarl
das
fmuls
mov
push
int3
out
jp
es
jae
cwtl
stos
pop
sbb
xchg
cmp
loopne
lahf
xor
shl
add
data16
ja
sub
std
clc
xor
pop
daa
xor
mov
jmp
and
mov
push
push
cmpl
hlt
cmp
inc
divl
jmp
iret
lahf
imul
fiaddl
mov
lcall
and
and
aad
test
push
fadd
cmc
jmp
movb
push
hlt
out
and
sti
mov
shl
adcl
and
xchg
sub
ret
mov
scas
test
mov
in
lcall
xor
push
add
mov
and
jb
xchg
int
mov
je
cmp
lods
mov
mov
fisubs
out
push
daa
mov
fmul
cmp
mov
mov
or
pop
cmpsb
xchg
mov
les
mov
sbb
mov
inc
cmp
sbb
nop
out
cmc
xchg
adc
dec
mov
xor
add
test
mov
fisubrs
lcall
xchg
sbb
bound
cs
imul
push
js
jnp
cmp
andl
jnp
add
clc
cli
dec
jmp
mov
enter
out
lods
jle
cmpb
orl
out
outsb
push
xor
ds
push
je,pn
mov
push
mov
lret
cmp
lret
outsb
xor
adc
shll
pusha
aas
adc
std
sbb
pop
sbb
in
dec
repnz
sub
lahf
add
sub
imul
xor
dec
fcomi
push
cld
jp
adc
pop
arpl
lea
inc
inc
and
mov
rcrl
pop
xchg
inc
test
mov
aam
jo
mov
loopne
dec
int
push
and
rorb
adc
inc
xchg
sbb
outsl
das
mov
dec
mov
rcl
lret
adcl
out
add
xchg
jmp
cmpsl
ret
mov
mov
mov
ret
push
addb
cmpsb
cmp
clc
jge
decl
pop
adc
add
loope
mov
test
lock
and
xor
loope
int
add
roll
cmpsl
aas
lock
sbb
cmpsb
inc
pop
insl
cmpsb
pop
sbb
test
xchg
das
out
and
icebp
or
out
sbb
andl
cltd
mov
cmp
hlt
out
dec
mov
pop
jp
and
subb
cmp
bound
sbb
daa
ficompl
push
pop
and
sbb
push
ja
dec
test
inc
sub
inc
in
aam
mov
repz
lcall
xchg
ljmp
lods
insl
lds
std
cld
push
inc
cmp
xor
push
add
push
das
icebp
mov
mov
mov
bound
cmpsb
scas
mov
add
adc
sub
jo
dec
mov
lock
movsb
xor
or
cmp
jae
push
decl
jmp
and
push
mov
pop
mov
inc
xchg
cwtl
jnp
mov
pop
sub
pop
out
push
rcrl
loope
mov
jbe
icebp
jo
inc
adc
or
xchg
jl
inc
sbb
je
and
or
add
inc
dec
lea
sbb
xlat
ss
sub
add
outsl
xor
aam
adc
scas
leave
rep
or
mov
inc
inc
push
lret
jg
outsl
ja
fsubrl
aas
mov
out
mov
cld
cmp
cmpsl
negl
add
popa
insl
jle
mov
sub
inc
pusha
jbe
cmp
add
mov
push
hlt
pop
outsl
repz
cmp
jbe
mulb
mov
mov
stos
loopne
push
adc
jl
andb
add
lret
jg
lahf
fs
pop
jns
popl
push
lcall
shlb
cmp
xorl
jge
mov
int3
add
ret
cld
jmp
xor
lret
dec
xor
das
loopne
sub
xchg
repz
mov
pop
outsb
lock
sub
mov
fdivrs
nop
and
fldt
cmp
xor
cli
or
mov
out
outsb
sti
les
xor
mov
dec
and
sbb
mov
and
dec
pop
repz
icebp
lods
rorl
cmp
ret
filds
hlt
inc
jne
scas
mov
in
xor
jbe
test
repz
outsl
pop
jp
cmp
popa
sub
sub
insl
aas
movsb
fnstenv
scas
xor
sbb
dec
stos
push
insb
in
inc
loopne
pop
adc
mov
sahf
add
sub
repnz
xchg
or
sub
icebp
jg
lods
mov
out
inc
movsb
fildl
lods
sahf
push
dec
incl
mov
scas
int
pop
fdivl
cld
pop
lcall
jmp
add
mov
repz
jo
movsl
xor
jns
popa
icebp
push
add
or
mov
lahf
mov
pop
out
push
je
ds
lods
sub
subb
mov
jge
push
xlat
mov
popf
adc
and
xchg
pushf
sub
add
mov
inc
xlat
bound
hlt
add
idivb
sub
loop
in
shlb
cwtl
mov
out
sets
and
xchg
and
subb
test
xor
sbb
out
cmp
sti
sarl
cmc
xchg
lcall
es
shlb
es
insb
sbb
mov
xor
sub
push
mov
and
push
test
inc
sub
adc
push
test
xchg
sahf
imul
enter
fs
and
mov
roll
jg
adc
int3
repz
xor
cmp
insl
add
jno
lahf
movsl
shlb
pop
call
dec
stos
push
in
bound
xchg
jns
je
imul
je
test
loop
pop
mov
sbb
mov
stos
pop
jmp
inc
cmp
jmp
jae
mov
aad
test
fstpt
inc
pop
or
cmp
loope
mov
lret
mov
cs
pop
hlt
loop
xor
jle
add
sub
rclb
out
pop
or
inc
or
xchg
pop
xor
aam
sub
sub
cltd
jp
stos
fdivs
jmp
add
leave
push
insb
cmpsb
lods
inc
mov
rcll
pop
mov
push
inc
dec
fldl2e
jecxz
out
ror
out
jge
add
mov
dec
movl
xor
jmp
je
sbb
pop
fldl
shll
or
add
xor
out
inc
cltd
sbb
push
data16
add
push
or
repnz
shr
mov
mov
cs
andl
das
jg
out
jle
cmp
fsubrs
jp
xlat
mov
jae
out
stc
les
int3
jg
mov
cs
iret
into
and
sbb
fdivp
mov
mov
push
mov
pop
jmp
clc
arpl
add
popa
inc
pop
ds
imul
jge
lcall
ljmp
scas
push
pop
cli
mov
leave
ficomps
outsl
das
dec
aaa
repz
js
nop
lods
dec
xchg
fcomip
push
lods
js
cs
addr16
add
jae
testl
mov
jbe
mov
sbb
and
jecxz
int3
fdivp
lret
ficomps
sbb
sti
pop
movsb
bound
stos
fisubrl
in
lcall
loop
loopne
outsb
test
push
sahf
dec
push
lock
ret
div
pop
hlt
movsl
dec
fsubp
sarb
mov
or
lods
mov
sbb
sbb
xor
mov
imul
aad
xor
push
sub
push
int
mov
sahf
clc
adc
ljmp
lcall
sbb
pop
sbb
or
or
add
fcomip
inc
test
shrl
das
mov
inc
mov
aaa
leave
negl
fstl
imul
std
push
inc
fs
hlt
fprem1
dec
mov
loop
mov
mov
sbbl
repnz
mov
xchg
dec
inc
adc
adc
xchg
adc
and
cwtl
pop
mov
movsl
in
negb
inc
out
mov
jbe
repnz
or
adc
mov
cmp
jb
ret
std
aaa
call
mov
cmp
cmpsl
or
leave
pop
inc
repz
hlt
pop
ds
sub
in
push
push
pop
push
xor
fwait
or
xor
mov
ror
and
pop
daa
mov
jmp
in
cmpsl
push
out
adcl
inc
mov
loopne
jnp
mov
push
xlat
xchg
mov
ss
popa
rcrl
dec
mov
aad
divl
add
sub
ret
adc
notl
mov
cmp
lret
nop
add
ss
lahf
xchg
sub
xchg
insl
pop
rep
insb
scas
cwtl
gs
sar
movaps
mov
sbb
and
and
add
icebp
pop
loope
jo
cmpsb
inc
cmpsl
repnz
inc
gs
test
ret
mov
or
jnp
aad
xchg
mov
arpl
fsts
scas
imul
inc
inc
push
in
out
mov
mov
cmp
and
mov
addr16
xchg
out
xchg
xor
cmp
add
sbb
lea
push
lahf
sahf
outsl
hlt
push
and
outsl
mov
dec
lds
dec
xor
lds
ss
test
mov
or
fmuls
das
add
inc
pop
bound
jnp
dec
fdivrs
sbb
pushf
push
mov
sub
call
outsl
xlat
lock
leave
adc
sbb
lret
faddl
icebp
imul
cmp
sbb
mov
mov
mov
ss
test
imul
mov
rcl
shrb
push
insl
push
cmpsb
movsl
mov
ljmp
in
adc
sub
lock
in
xchg
in
cmp
push
in
fcompl
popf
ss
insl
mov
fwait
sbb
pop
inc
jae
frstor
out
stos
gs
int
orl
jp
jg
mov
mov
shlb
aad
dec
popa
hlt
mov
jo
xchg
cwtl
arpl
fildl
pop
enter
pop
sti
dec
xlat
pusha
dec
lea
and
mov
inc
xchg
test
das
xor
jecxz
xor
sbb
xchg
cmpsl
into
inc
aas
mov
cmp
xchg
pop
push
popf
mov
sbb
pushf
dec
mov
jmp
push
cltd
push
push
cmp
adc
mov
std
push
aaa
iret
jge
xchg
pop
les
pop
mov
cltd
push
push
mov
inc
xchg
bound
hlt
pause
pop
mov
cmc
add
xchg
mov
arpl
cmp
xchg
bound
mov
into
jle
shl
fmull
jnp
or
mov
int
js
xchg
inc
ss
cwtl
fidivl
mov
cld
push
out
jbe
sub
fmuls
mov
jbe
xor
mov
fadds
cmp
lock
adc
lods
scas
lahf
xor
ds
sub
movsb
scas
dec
mov
fisubrs
sar
gs
add
adcb
and
movsl
and
sbb
cwtl
ficoms
repz
mov
mov
dec
pop
add
cmp
push
mov
or
insl
lahf
xchg
and
push
sahf
mov
xor
jge
jne
ret
daa
mov
and
jp
jne
call
or
push
data16
daa
lahf
addr16
cs
imul
lock
popa
cmp
mov
xor
andb
push
mov
mov
inc
pushw
xor
psubusb
push
inc
scas
fs
pop
mov
outsl
cmc
repz
pop
lret
cmp
rorb
loopne
adc
jl
add
and
push
push
sub
fistpll
mov
add
daa
mov
scas
outsb
scas
push
sbbb
sbb
pop
sbb
inc
pop
xchg
sbb
sbb
fildl
shrl
pop
xchg
dec
jno
mov
repnz
shl
lcall
out
mov
inc
mov
fidivrl
jl
mov
sub
flds
sbb
sub
jl
jl
fimull
in
jmp
daa
outsb
ljmp
pop
nop
adc
mov
mov
repz
mov
or
pop
pop
add
adc
loope
stos
add
jb
sbb
das
adcb
fldcw
sbb
mov
int
add
movsb
lret
pop
jp
ret
jnp
pop
mov
push
push
repz
xchg
daa
mov
in
sbb
jg
outsl
cli
inc
mov
mov
jo
enter
fsubs
int3
je
imul
jo
jbe
ret
and
out
jns
sbb
insb
cld
mov
call
fisubl
and
xchg
bnd
xchg
cs
jbe
scas
movsl
jmp
xchg
stc
pushw
mov
jl
jl
adc
adc
orl
repnz
stos
dec
sub
mov
xor
ljmp
dec
pusha
lea
sbb
clc
or
sbb
cli
movsl
cmp
push
cmp
shll
test
cmp
jle
mov
add
out
call
loopne
pop
jnp
fwait
mov
push
xor
xchg
jne
insl
lahf
pop
fstp
out
adc
xor
outsl
enter
jae
sbb
inc
jnp
mov
icebp
mov
mov
int3
xor
cltd
clc
mov
cli
push
roll
jl
shlb
sbb
pop
push
ret
sbb
cmpsb
fsubr
adc
repnz
sub
pop
leave
mov
lea
int3
ret
outsl
and
arpl
jge
inc
or
xchg
jmp
cmp
pop
jge
in
adc
mov
push
adc
jbe
mov
inc
in
sbb
add
and
dec
jle
stos
pushf
mov
fcmove
or
xchg
cmp
inc
adc
sub
sbb
or
je
outsl
mov
push
dec
in
mov
mov
and
dec
hlt
clc
fsubl
fldl
inc
add
stc
jg
in
pop
stos
aas
es
mov
shlb
movsb
ja
mov
adc
sbb
testl
pop
filds
and
or
sub
iret
mov
push
push
movsb
pop
mov
xchg
xlat
sub
pop
idivb
mov
in
rep
aaa
sub
loop
hlt
lret
mov
fwait
lock
out
aad
rcr
dec
sub
movsb
in
mov
pop
test
ficoms
adc
xchg
and
cmp
xchg
pop
push
sub
aad
adcb
lret
gs
and
jecxz
add
mov
jle
mov
arpl
addr16
sbb
bound
push
mov
pop
inc
bound
daa
addr16
nop
pop
sbb
shrb
pop
outsl
call
sbb
jmp
dec
rcll
lods
es
je
xchg
sbb
push
pop
loope
in
dec
xchg
aam
inc
lahf
mov
sub
into
cmpsl
lret
push
fistpl
scas
mov
hlt
push
sbb
lock
mov
xchg
hlt
das
xor
cmpsl
iret
adc
or
or
xchg
sahf
jge
mov
ret
push
mov
mov
mov
cwtl
inc
repz
add
shlb
push
int3
cltd
pop
inc
mov
call
pop
xchg
imul
insb
adcb
or
movsb
mov
into
push
mov
in
jne
mov
xor
xor
mov
int3
push
cmc
mov
jg
ds
pop
inc
aad
sahf
inc
cli
mov
push
loopne
xchg
daa
push
xchg
fistpl
decl
andl
push
cmc
cmp
pop
inc
push
sbb
jne
movsb
pop
test
repnz
dec
inc
cmp
pop
xchg
fstpt
hlt
dec
js
xor
jge
jmp
rolb
mov
xchg
ljmp
pusha
into
mov
pop
jno
arpl
sub
lret
test
ljmp
sub
sub
inc
ss
pushf
mov
push
ja
js
and
nop
lret
xor
fistps
out
not
jno
push
les
jb
pop
daa
sub
mov
xchg
mov
adc
mov
aas
add
loope
lahf
scas
mov
jnp
aam
int
add
sbb
or
xor
ret
int
mov
int
outsb
inc
fwait
inc
mov
pushf
lcall
sbb
jmp
or
stos
pop
push
jo
lret
cli
xchg
inc
cwtl
sub
mov
sub
mov
mov
sbb
incl
jl
popf
call
adc
jne
mov
icebp
cwtl
fcompl
daa
jl
dec
add
stos
fisttpl
xchg
jo
sti
and
cmc
or
and
jne
lcall
pop
push
aaa
leave
std
mov
push
jmp
cmp
aas
subb
jle
sub
or
adc
inc
xor
mov
mov
inc
adc
and
test
scas
sbb
mov
pop
dec
push
std
dec
cmpsl
xchg
mov
lock
bound
and
cmc
mov
movsl
mov
sarb
fstpt
imul
es
mov
aam
das
jb
addr16
fmuls
xor
jp
repz
xchg
fsubrl
mov
shlb
shl
fcompl
push
lret
shl
adc
pop
jo
ds
mov
ret
xor
mov
popa
or
addr16
rorb
xor
out
mov
pop
cmp
lods
mov
jg
mov
cmp
pop
js
xchg
loopne
flds
pop
notl
pop
lock
stos
push
mov
xor
loope
xchg
add
jle
fstl
and
mov
scas
sbb
mov
fdivs
out
shlb
adc
sahf
xchg
in
pop
ret
add
inc
mov
negb
adc
adc
mov
push
add
and
int
loopne
pop
jmp
xor
pop
sbb
mov
cmp
sub
xor
das
mov
rcrb
fists
stos
push
hlt
shrl
icebp
aam
mov
pop
jge
das
mov
mov
sahf
lds
into
xlat
mov
dec
xor
pop
xchg
mov
mov
xchg
hlt
mov
or
stos
mov
mov
mov
insl
rcr
imul
fdivl
sbb
in
inc
je
ficoms
int3
xchg
iret
in
pop
sahf
out
dec
inc
enter
sbb
repz
mov
pop
dec
lret
and
mov
pop
and
rcll
out
ds
sub
dec
add
dec
xchg
repnz
and
and
aad
je
popa
mov
push
fadds
and
push
dec
pop
pop
stos
scas
jae
fldenv
mov
push
leave
test
sbb
loop
xchg
test
dec
mov
sbb
mov
pusha
jns
jmp
rcll
mov
test
add
in
mov
and
addr16
adc
ja
aas
fwait
sub
js
xor
pop
sbb
scas
cmpsb
es
movsb
adc
lcall
cmp
inc
cmp
lea
outsb
mov
test
or
fdivr
jle
mov
sti
dec
out
cmc
pop
inc
jb,pn
sbb
test
lods
mov
add
andb
inc
roll
in
roll
je
mov
xor
inc
and
aad
push
pop
pop
push
loopne
outsb
adc
imul
insl
js
push
pop
dec
adc
out
loope
mov
icebp
mov
jle
test
jne
in
mov
idivl
cmpsl
enter
in
xorb
loop
mov
outsb
cli
or
leave
mov
popa
mov
push
xor
inc
call
andl
adc
mov
repz
push
jno
mov
fbld
xchg
fcmovb
outsb
test
lahf
fmul
imul
in
adc
mov
or
push
sub
xchg
mov
lock
sbb
sbb
nop
xlat
aad
fidivs
daa
jnp,pn
dec
mov
sbb
mov
fstl
sbb
loop
jmp
ds
sbb
mov
adc
cli
mov
sbb
cmc
add
or
push
adc
mov
mov
push
sti
lods
aas
cmp
sti
stc
dec
lret
inc
mov
mov
jl
xchg
sub
loope
pop
mov
adc
insl
fs
fwait
test
pop
ficoml
pop
cwtl
inc
pushf
push
cld
mov
cmpsl
adc
loop
xchg
and
cmp
and
movsb
add
into
sbb
mov
or
lahf
mov
xchg
stos
in
xor
sub
mov
into
pop
inc
jne
out
stos
mov
cltd
aad
nop
mov
cmp
adc
add
and
push
arpl
mov
jo
lock
popa
fbld
les
adc
test
push
inc
or
sub
bnd
mov
loop
call
ficoml
pop
stos
out
push
mov
mov
cli
into
in
bound
pusha
jo
stos
adc
push
cwtl
push
inc
xchg
xchg
mov
hlt
jecxz
ret
idivb
cmpsb
in
test
jnp
popf
push
inc
ret
cmpb
out
dec
or
clc
add
mov
jg
cmpl
in
lock
ficomps
bound
mov
lds
mov
in
fdivs
push
movsw
dec
insl
loopne
cmpsl
cmp
mov
inc
icebp
in
iret
shl
or
js
enter
mov
test
or
push
sub
mov
push
push
aaa
nop
pop
push
xor
xchg
cmp
test
jp
push
xor
fstpl
imul
out
imul
inc
adc
dec
outsl
je
movsl
je
mov
adc
fucomp
xchg
push
popa
pop
xchg
les
and
inc
scas
inc
pop
cli
lret
lds
imul
jae
fnstsw
mov
cmp
xor
arpl
mov
popa
out
ds
dec
cltd
mov
mov
dec
jns
es
mulb
movsl
stc
add
jmp
and
and
gs
mov
cld
jae
test
jmp
nop
mov
out
xchg
add
adc
pusha
mov
dec
aam
add
cmc
push
xchg
mov
add
or
jmp
add
inc
jns
add
push
jnp
daa
lock
inc
shr
jl
lret
out
flds
out
repz
ret
cmpsb
sbb
xor
adc
enter
sbb
lret
pop
sub
fmul
push
clc
icebp
lds
test
mov
mov
and
xlat
cmp
push
cmp
dec
and
in
stos
pop
testb
inc
sahf
xchg
arpl
repnz
add
ljmp
loop
inc
rorl
xor
mov
push
ss
std
enter
pop
popa
jb
fcoml
shrb
shrl
dec
xor
roll
or
or
outsb
mov
test
adc
nop
mov
mov
inc
jne
movsl
xchg
fidivrl
test
jge
sarb
or
adcb
inc
sub
stos
sbb
icebp
loope
pop
adc
fwait
xorl
hlt
jle
mov
insl
mov
aad
retw
in
ljmp
ja
imul
and
jg
jl
jnp
dec
in
sbb
out
aam
push
int3
cwtl
jne
iret
call
das
scas
loopne
dec
je
rcrb
cmp
pusha
pop
lock
mov
add
lds
sahf
jmp
mov
xchg
aam
ror
mov
and
xchg
sti
jae
mov
call
dec
aaa
cmovnp
std
mov
jp
push
cs
lcall
fiadds
mov
orb
mov
jno
dec
jbe
cmp
add
adc
sbb
cmp
in
cmp
jmp
xor
push
and
mov
test
in
jle
test
inc
pop
cltd
and
jg
adc
and
rclb
xchg
and
pop
xchg
adc
push
loope
dec
fcoms
inc
cmp
outsb
mov
fwait
add
lret
jp
fsubp
cmpsl
outsb
or
mov
rcrl
fidivrl
mov
aam
popf
jle
jp
dec
fdivrs
mov
mov
add
push
jno
dec
mov
inc
dec
cmpsb
cmp
xor
or
xor
pushf
out
fidivs
stos
filds
mov
ss
add
dec
mov
shrl
jbe
in
cmp
les
cli
in
push
test
shl
lock
stos
lea
jae
sahf
scas
mov
xchg
inc
push
push
into
sahf
xor
xchg
ljmp
rcrl
andl
gs
mov
push
stos
mov
int3
mov
addr16
dec
jle
push
dec
mov
cmp
and
mov
xchg
cmp
add
xchg
fstl
jo
les
cmpsb
pop
cmpsb
cmpsb
lock
fimuls
fnstsw
adc
mov
ljmp
lret
std
imul
je
add
pop
cltd
insb
mov
aas
fisttpl
cmpsl
adc
jge
pop
xchg
and
and
cmp
test
lret
mov
inc
cmpsl
repnz
dec
daa
push
shlb
or
mov
xchg
loop
adc
sbb
daa
ficoms
jo
or
adc
mov
add
xor
add
pop
add
mov
rep
cmp
jb
adc
and
dec
cwtl
xchg
popl
mov
cltd
inc
inc
outsl
and
scas
lea
insl
mov
mov
cli
jo
jo
ja
jge
adc
out
pop
jg
ret
lods
push
int
ds
mov
jb
cli
sub
mov
cmpsl
enter
and
daa
adc
shrb
push
aam
mov
fxch
mov
sbb
dec
aaa
xchg
pop
cmp
shl
loop
call
sub
xchg
hlt
std
inc
jmp
sbb
out
add
jmp
jo
shl
out
jle
pop
xchg
cmp
sub
push
inc
int3
sub
cmpsl
sub
jle
dec
sbb
push
rol
inc
into
xchg
sub
or
xchg
cmp
fwait
sbb
imul
clc
cmpsb
push
ljmp
fwait
lods
cmp
test
orb
xor
inc
cld
pushf
aaa
xchg
in
sub
push
dec
in
iret
inc
adc
and
test
cmp
push
int
jg
call
mov
cwtl
mov
adc
shr
xchg
iret
es
in
mov
xor
test
nop
inc
js
cltd
xadd
pop
dec
loope
mov
in
rcrb
dec
inc
scas
or
pop
mov
sbb
hlt
in
jae
sbb
cli
sbb
rcrb
add
lahf
aas
adcl
das
xchg
sub
fiadds
outsl
add
pop
or
push
lret
xchg
or
fcompl
in
and
int
cmp
mov
cld
xor
inc
sub
lret
data16
pusha
xchg
scas
lret
sbb
pop
cmc
jg
bound
mov
mov
xchg
in
mov
push
ret
ret
mov
dec
or
mov
push
cmpl
cmp
daa
inc
add
and
enter
cmp
jle
jp
outsl
fbld
mov
push
in
cli
xlat
cmp
ss
popl
lock
repz
aad
fsubrs
ret
out
add
es
cmp
out
cmpsl
jne
shlb
fdivs
in
and
test
xlat
into
xor
fcom
inc
and
es
test
xchg
ficompl
testb
iret
cmp
pop
adcl
pushf
and
sub
pop
and
out
sub
call
lods
push
push
outsl
xchg
cmpl
lret
add
xchg
mov
jb
jno
cmp
int3
dec
rol
xchg
inc
xor
push
cmp
in
pusha
aam
cmp
fs
xor
xchg
mov
push
gs
jno
repz
test
jmp
adc
jge
push
xor
adc
bswap
repz
sbb
sub
in
adc
std
dec
cmp
inc
stos
or
adc
sbb
inc
jge
aaa
outsl
xlat
jnp
jg
ljmp
rolb
or
jmp
dec
iret
call
inc
mov
stos
fwait
xchg
dec
adc
std
mov
mov
lahf
shr
pop
adc
mov
andl
lret
aad
cmpsl
xchg
psubusb
dec
pop
pushf
test
js
dec
mov
push
je
jp
push
add
imull
inc
or
and
or
out
or
mov
lcall
test
mov
xor
scas
pop
bound
stos
jecxz
aam
stos
inc
mov
cs
mov
sarl
and
rorl
lds
in
sub
jecxz
push
pop
push
lcall
jp
or
sub
neg
out
dec
imul
dec
es
and
ja
mov
mov
repnz
jge
data16
adc
loope
pop
in
xchg
xchg
icebp
pop
out
rcl
ljmp
lea
out
fildll
pop
pop
cltd
movsl
xor
cmp
fisttps
xor
cmpsl
xor
aam
cmp
int
pop
ds
dec
scas
lods
in
cwtl
into
roll
push
push
pop
pop
sub
pushf
push
jo
sahf
add
sub
inc
mov
cmpsb
mov
dec
in
lret
lahf
mov
imul
dec
imul
add
ret
scas
int
add
test
push
cmp
shrb
dec
arpl
aas
es
pushf
or
fistpll
mov
mov
mov
sub
outsb
jp
cmpsl
scas
jno
inc
test
push
xchg
loopne
and
enter
int
dec
es
sbb
scas
jno
pop
test
and
xchg
mov
cmp
mov
or
xchg
test
ja
les
inc
adc
adc
add
movsb
inc
test
xchg
daa
push
fldt
in
pop
sahf
mov
cmp
imul
jne
int
jne
div
clc
pop
lea
aad
push
or
clc
in
xor
push
pushf
data16
push
hlt
pop
int3
aad
shll
dec
out
adc
push
pusha
cli
cmp
jns
sub
movl
dec
daa
divl
mov
mov
and
lods
push
out
loopne
repnz
fwait
push
icebp
lret
adc
mov
sti
sbb
movsb
cmpsl
push
fwait
nop
insl
xchg
call
mov
mov
or
test
clc
push
mov
out
sub
jl
add
repz
adc
pop
enter
xlat
je
xlat
es
stos
xor
insl
psubusw
sub
jecxz
or
stc
cli
lret
repz
leave
bound
and
nop
imul
out
dec
lea
bound
call
sbbl
jne
or
popf
mov
sbb
xchg
add
xor
cmc
cmp
sti
push
xchg
popf
cltd
lret
xlat
les
add
lret
add
mov
or
scas
lds
scas
cmpsb
hlt
movsl
out
jle
repz
xchg
xchg
shll
xchg
xchg
stos
sub
add
sub
mov
leave
lcall
pusha
pop
lock
ret
push
xor
testb
imul
add
or
xor
pusha
adc
or
inc
imul
fcmovbe
jae
mov
pop
sbb
jmp
jge
inc
pop
pushf
adc
test
mov
imul
cltd
add
mov
imul
test
stos
push
mov
sarb
stos
lcall
ja
and
inc
xchg
negl
pop
fmuls
mov
in
mov
pop
lret
in
test
lcall
lcall
std
loope
shrb
rcrl
jbe
fwait
hlt
push
xlat
or
scas
pop
push
push
lea
rclb
xchg
mov
and
mov
cmp
jmp
xorl
test
xor
shr
mov
mov
xchg
insl
inc
adc
jmp
xchg
outsb
mov
lret
mov
jne
fsubr
push
cmc
xor
scas
loope
or
pop
mov
scas
or
adc
ret
push
fwait
sub
cltd
pop
add
sub
cmp
add
cs
mov
in
aaa
mov
imul
xor
and
shl
fstps
push
xlat
sahf
sbb
pop
aad
xchg
and
xchg
repnz
pop
es
cwtl
ficompl
sahf
push
or
shll
jo
jecxz
xor
add
es
xchg
je
dec
jmp
mov
lret
je
or
mov
call
sbb
jnp
test
test
mov
repnz
fcomi
testb
xor
mov
push
jecxz
lret
mov
stc
push
jmp
jecxz
inc
sub
ficompl
push
cmp
sbb
dec
mov
out
ljmp
jbe
mov
stc
inc
mov
test
fxch
pop
icebp
lea
enter
add
test
dec
adcl
sti
jp
notb
mov
adc
mov
pop
nop
insl
mov
stos
fidivs
sub
jns
lcall
xor
push
cmc
jbe
xlat
and
mov
dec
cs
lods
lcall
dec
push
push
mov
pop
nop
cmp
cmpsb
arpl
outsl
jns
cmp
out
pop
sbb
fisubrs
jmp
aad
aam
mov
mov
add
insb
pop
fistps
mov
rcll
sti
push
int3
ret
dec
out
lods
xor
or
dec
inc
pop
pop
ds
mov
int3
mov
popf
xor
in
iret
xor
jg
das
imul
stos
inc
jg
adc
mov
shlb
lret
int
cld
push
fisttpll
push
pop
sbb
cmpsl
rcll
lret
js
ret
mov
arpl
imull
ja
insl
dec
push
xchg
xlat
pusha
lds
mov
dec
jnp
test
cs
adc
mov
xchg
popf
add
out
jmp
shr
jp
jl
pop
push
push
mov
dec
test
mov
mov
mov
lret
lds
pop
push
push
pusha
loop
jl
xchg
sub
fsts
mov
sub
push
xchg
loope
jmp
pop
in
fildll
cmp
xchg
xchg
and
rcl
xor
xlat
xor
jns
fwait
adc
mov
call
andnps
inc
into
fiadds
push
push
shl
mov
pop
jp
xor
movsb
jo
push
mov
and
adc
loope
nop
mov
stos
imul
repz
out
out
outsb
dec
xchg
jge
and
jnp
mov
ret
shll
xor
js
mov
mov
scas
clc
out
repnz
adc
les
inc
mov
fcomi
ret
ret
shl
lds
and
pop
mov
inc
add
push
pop
sub
xor
jns
mov
and
jmp
mov
dec
inc
mov
cmc
loopne
mov
jl
jns
aaa
cmc
push
dec
call
xorb
lret
lods
das
jno
xchg
mov
sti
push
ret
ljmp
arpl
outsl
ror
push
mov
cwtl
stos
and
and
lock
jmp
scas
push
loope
cli
fcoml
pushf
xlat
mov
sbb
lahf
jle
mov
mov
cmc
sub
sbb
inc
cmp
int
inc
icebp
loopne
testb
inc
push
pushl
add
mov
and
lods
adc
popf
clc
fldcw
jl
push
in
add
jg
in
mov
xor
aam
call
in
fisttps
add
inc
fldcw
int
popa
inc
clc
pop
jo
jl
mov
sahf
iret
jne
loopne
mov
imul
inc
ret
inc
mov
repz
sub
dec
push
add
push
xchg
ljmp
or
insl
arpl
movsb
ljmp
sbb
pop
mov
pop
ljmp
loope
push
xchg
xchg
or
push
inc
aam
xlat
inc
outsb
fldt
loope
test
and
repz
and
mov
fadd
fistpll
xor
jge
adc
adc
mov
add
mov
addr16
pop
sti
sarl
jecxz
add
sahf
filds
imul
sbb
test
popa
add
xchg
or
test
aam
shll
outsl
lret
rorb
mov
cwtl
xor
test
les
add
inc
ret
repz
add
lods
jge
push
dec
jmp
stos
into
stos
push
inc
adc
insb
or
pop
sbb
clc
adc
inc
lea
jb
out
pop
icebp
lret
push
jnp
call
sbb
in
out
movsb
lds
xor
pop
push
sahf
push
add
rcr
fisubs
push
inc
mov
fidivl
insl
gs
push
sub
mov
xchg
ficompl
cmp
pop
movsb
push
cmp
xchg
daa
push
jno
in
popa
or
and
mov
and
pop
pop
dec
shl
repz
inc
sbb
stc
sub
jle
ret
ljmp
mov
cwtl
and
pushf
mov
inc
decl
icebp
lcall
add
pushf
or
lods
ret
jo
xor
andb
sarl
jns
fidivs
xchg
xchg
cltd
mov
push
loop
fisttpll
add
sahf
les
or
ret
clc
je
or
cmpsl
cmc
stc
sti
push
push
xorl
xchg
push
movsl
adc
aad
mov
sbb
sub
xor
lret
shll
gs
push
inc
mov
mov
pushf
nop
ffree
out
xor
jg
stos
xor
call
lret
jns
push
mov
ret
repz
inc
jl
or
cmc
popl
mov
pop
mov
out
and
rcrl
push
ja
push
pop
xor
fs
fnsave
popf
mov
scas
clc
ljmp
sub
sbbb
inc
xchg
sub
lea
mov
subl
mov
jnp
mov
cmp
pusha
testb
cmp
jmp
ljmp
out
pop
ret
jns
sbb
inc
or
jae
sub
push
sbb
sbb
stos
testb
loope
cmp
pop
add
lret
out
stc
adc
ret
lods
in
cltd
or
add
mov
into
inc
cmp
jecxz
pop
popf
daa
repnz
jns
out
scas
push
out
je
mov
adc
sbb
dec
sub
add
cwtl
xchg
test
mov
mov
sub
mov
sbb
inc
mov
jo
lods
add
mov
xchg
mov
mov
jnp
test
pop
daa
pushf
mov
imul
inc
and
pop
gs
repz
mov
in
jne
jne
mov
mov
jle
pop
cmp
ficoml
xchg
jmp
xchg
pop
xor
mov
lods
add
mov
hlt
jg
pushf
fwait
sub
aaa
sub
or
lds
test
xchg
sub
jle
sub
mov
sbb
notb
and
cmpsl
adc
gs
pusha
out
insb
push
xchg
cwtl
pop
lods
add
arpl
notl
adc
les
add
mov
in
sti
dec
jae
es
cld
pushf
sahf
gs
mov
push
mov
pop
fcmovnb
cmpsb
ljmp
sets
push
ds
sbb
call
test
popl
pop
stos
push
stc
fstpl
sbb
enter
push
xchg
inc
pinsrw
mov
xorl
mov
insb
fwait
stc
outsl
dec
pop
xchg
add
sbbb
adc
push
hlt
and
fcmove
adc
or
or
cmpb
xchg
incl
mov
int
mov
aas
pop
sbb
push
xchg
fs
js
cmp
ret
shll
sub
dec
daa
mov
ljmp
aas
dec
sarl
stc
pop
int
arpl
xchg
dec
popa
or
stos
xchg
xchg
aas
jno
pause
mov
in
cltd
insb
and
add
insb
gs
xor
inc
fcompl
bound
je
jae
mov
stc
push
jnp
cmp
fwait
in
jae
out
add
std
inc
or
add
pushf
fcmovnb
andl
scas
sub
test
jmp
das
adc
xor
or
or
add
push
dec
outsl
pusha
adc
jno
imul
ret
xor
ljmp
lcall
sbb
inc
sbb
mov
rcrl
or
xchg
enter
mov
into
test
mov
jl
mov
mov
pop
shrb
es
xor
sub
jno
mov
andb
cmc
fisubrs
dec
clc
cmp
sti
gs
out
pushf
test
decb
sub
inc
loop
fildll
and
mov
mov
insb
and
call
jge
imul
pop
sub
mov
xchg
mov
mov
cmp
jnp
add
pop
dec
push
lcall
test
mov
mov
sub
pop
fmuls
fistps
mov
or
or
int
adc
dec
add
xchg
mov
sub
or
add
cmpb
stos
aam
pop
inc
pusha
jne
sub
pop
push
lods
mov
repnz
dec
and
and
loopne
cli
lock
in
or
sbb
push
enter
cmp
mov
cmp
jp
push
sub
cmp
mov
clc
pop
out
jb
or
test
test
call
jbe
rclb
gs
add
aam
push
dec
sub
nop
xchg
adc
insl
fadds
push
cmp
in
test
inc
add
inc
and
xchg
call
dec
push
je
and
mov
icebp
imul
insb
loop
stos
stos
rolb
ret
add
or
mov
daa
pop
jge
scas
pop
xor
adc
jbe
pop
popa
or
adc
or
loope
pop
inc
jp
aam
mov
cmp
jnp
xchg
inc
fildl
adc
fucomi
jp
adc
fidivs
jmp
xchg
and
stc
pop
mov
jg
shrb
dec
loop
aaa
shrl
inc
faddl
scas
fiadds
pop
push
dec
fs
pop
dec
add
sub
testb
mov
mov
jmp
icebp
data16
lds
mov
mov
into
cld
jmp
add
mov
in
and
andb
jl
or
jns
pusha
insb
adc
add
sbb
mov
xchg
pop
push
mov
mov
push
ret
cmpb
adc
xor
inc
inc
fdiv
jno
clc
cmp
mov
push
insb
inc
dec
aad
xchg
add
dec
dec
adc
jno
jmp
arpl
ret
xor
pop
ja
iret
xchg
mov
xor
jnp
popa
shrb
dec
out
mov
jg
lea
in
insl
inc
sub
mov
ss
ja
test
sbb
sub
adc
mov
inc
xchg
cmp
jmp
pop
jo
cmpsb
add
bnd
cld
popf
xchg
lret
and
cmp
pop
sub
das
jbe
jmp
push
jmp
mov
jle
test
pop
lret
adc
ja
cmovnp
jbe
ret
inc
pushf
add
and
movsb
mov
lahf
mov
mov
scas
cs
push
mov
and
push
ss
mov
jecxz
jg
jg
mov
bsf
cmpsl
sub
push
inc
pop
pop
mov
or
adc
imul
sbb
or
mov
pop
mov
loopne
dec
pop
xor
mov
or
aas
jl
lahf
mov
adc
xor
adc
iret
mov
or
inc
jns
aas
lret
sbb
shlb
pop
xchg
push
sbbl
popf
push
mov
xchg
cmpsb
es
sub
nopl
dec
out
adc
popa
mov
cmpsb
cmpsb
xchg
aad
and
jb
arpl
mov
outsb
enter
sbb
pop
pop
repz
xchg
stos
dec
and
ljmp
lahf
lds
and
adc
es
pushf
and
sbb
add
insl
lcall
inc
xchg
sti
jecxz
xchg
jmp
sahf
dec
sub
hlt
subb
nop
mov
movsb
loop
adc
mov
mov
test
out
pop
mov
sbb
xor
dec
stc
clc
lock
xchg
mov
cmp
pop
cmp
subl
clc
int3
imul
xchg
and
pop
push
int3
in
mov
xchg
std
ret
test
daa
inc
jo
repnz
push
dec
xor
iret
outsl
aaa
mov
add
xlat
adc
jne
fstl
mov
clc
shr
lods
lods
inc
jae
xchg
mov
stc
and
ss
and
and
lcall
pop
out
mov
cmp
cmc
dec
popa
inc
into
imul
xchg
js
and
mov
jnp
push
fdivs
xchg
ds
mov
xor
adc
rorl
sub
jg
pop
cmpsl
adc
test
adc
test
sbb
dec
loope
jp
add
std
or
in
loope
lds
cmc
adc
push
and
addr16
negb
adc
dec
mov
inc
mov
loopne
fisttps
imull
out
rep
jno
xor
mov
push
and
nop
push
out
aaa
scas
hlt
push
inc
loop
jge
out
sbbb
out
daa
or
icebp
lods
mov
push
lahf
xchg
imul
adc
inc
inc
jge
and
pop
pop
int
push
mov
mov
sbb
lock
aaa
lret
pushf
movsb
and
jae
sub
pop
add
or
and
orb
pushf
push
fucomip
sub
push
arpl
in
test
fwait
adc
dec
push
and
ja
add
jns
cltd
std
cli
out
xor
adc
push
mov
mov
xor
xchg
les
and
ret
repz
insb
mov
cmp
ja
stc
loop
ds
adc
pop
fistpl
cs
jo
das
add
or
lcall
test
arpl
movsl
das
cmp
sbb
outsb
loopne
push
repnz
inc
xor
add
pop
push
sub
push
sahf
and
xchg
lea
cld
nop
movsl
ret
xor
xorb
dec
cld
mov
inc
cli
mov
jge
push
out
sub
loopne
xchg
int
cltd
jnp
xchg
mov
leave
insl
ljmp
push
in
pop
loope
fcmovnu
sahf
cmpxchg
cmp
mov
packssdw
lcall
pop
mov
inc
dec
xchg
mov
mov
cwtl
lret
xor
dec
addl
mov
insb
into
mov
clc
jb
repz
mov
cmpsb
hlt
push
adc
mov
lcall
ss
ret
mov
lret
jmp
or
xchg
dec
push
mov
nop
fsts
mov
sarl
imul
adc
adc
in
jp
decb
dec
mov
in
lahf
and
mov
addb
mov
addr16
das
imul
xor
pop
cmc
aad
sbb
nop
sub
adc
jnp
xor
cmp
push
jge
jmp
scas
adc
push
mov
mov
js
mov
movsb
jnp
dec
mov
jbe
loope
ljmp
sub
test
cmp
mov
cmp
dec
inc
inc
sub
hlt
inc
xchg
lahf
aas
std
push
push
mov
mov
jo
js
mov
jmp
or
cmp
mov
adc
mov
out
stos
cmp
sbb
inc
jmp
push
dec
outsl
mul
sbb
dec
add
lahf
test
mov
mov
sbb
dec
or
ret
call
out
ja
adc
gs
imul
outsl
dec
std
popa
std
cld
dec
adc
fsub
inc
loopne
adc
ret
adc
inc
outsb
lock
pop
pop
jbe
sbb
loope
inc
out
arpl
xor
cltd
sbb
inc
inc
cmc
rorl
scas
hlt
mov
cmpsb
or
fs
pushl
fwait
mov
inc
or
mov
sub
add
xor
fwait
test
pop
fcompl
fsubr
dec
loope
cltd
iret
adc
dec
xor
jg
mov
mov
dec
popa
adc
enter
shlb
loop
mov
xchg
cmp
cli
lods
imul
xor
cwtl
sbb
push
pop
dec
xchg
jg
push
jl
xchg
xor
in
dec
inc
jae
das
repnz
pop
mov
ja
jns
and
rcll
pop
in
bnd
loopne
pusha
popf
arpl
int3
cmp
std
dec
sub
test
je
inc
jne
int
fidivl
mov
push
cmp
popa
ljmp
sub
fstpl
in
das
insl
sti
cli
mov
jae
cmpsl
jo
gs
mov
jae
into
xchg
cwtl
dec
push
or
int
popa
cld
pop
xchg
movsl
mov
popf
push
shr
inc
and
or
cmp
pop
ret
data16
pop
popf
xchg
mov
add
stos
add
pop
mov
lock
inc
stos
ror
enter
das
adc
jmp
ljmp
fsubrp
sar
cwtl
test
pusha
es
xor
sbb
out
push
add
into
push
fdiv
inc
nop
pusha
fsubl
icebp
aaa
aaa
sbb
imul
inc
in
sbb
cmp
scas
mov
jge
shl
pop
aas
or
and
or
adc
xchg
jp
inc
ret
xchg
push
jae
in
push
in
inc
loopne
fwait
mov
repnz
jo
lock
clc
sbb
mov
mov
sarb
jmp
sbb
and
push
lahf
movsl
or
pushf
dec
xor
dec
mov
inc
and
ret
push
into
ds
jnp
ss
ljmp
shl
mov
decl
call
cmpsl
push
mov
stos
adc
testl
imul
pop
out
jecxz
cmp
push
das
cmp
xchg
inc
mov
pop
loop
dec
mov
jg
mov
fdivs
inc
cwtl
adc
neg
and
aam
and
xchg
test
sbb
push
mov
sub
in
dec
adc
cli
sbb
out
or
mov
push
mov
lcall
clc
jg
cwtl
cmp
out
dec
bound
add
sbb
cmp
sbb
jo
dec
lret
cmp
rclb
pusha
sub
lret
cmp
mov
mov
clc
jle
mov
or
sbb
test
repnz
aad
add
xchg
xchg
sub
mov
mov
xchg
mov
jnp
push
adc
jmp
inc
or
adc
xor
jb
je
cmp
cmp
mov
repz
insb
lea
dec
cltd
shl
into
jno
xchg
jl
push
and
lds
pop
inc
pop
rorb
outsb
xchg
mov
adc
dec
test
sbb
lods
mov
std
addr16
add
jle
xor
xchg
scas
dec
mov
fdivrs
pop
jns
add
jo
push
sub
outsb
fcmove
sub
mov
and
fsub
dec
adc
int3
jbe
jg
clc
push
mov
cltd
xchg
rorb
xchg
aam
sub
test
dec
scas
rcl
filds
ret
sub
inc
sbb
pop
push
stc
jbe
dec
out
mov
jle
cmp
add
pop
stos
fsubs
dec
stos
push
stc
fsubr
pop
jb
rcrl
pop
jbe
in
cmp
repz
xchg
int
adc
paddb
insl
jp
cmp
test
pop
loopne
je,pn
sbb
scas
inc
call
stc
aas
nop
cli
xor
jnp
pushl
es
cli
inc
push
popf
inc
hlt
pop
mov
cld
aad
mov
cmp
lret
xor
sub
push
jb
dec
enter
cltd
ret
cld
in
dec
sub
ja
testl
shll
mov
jno
cmp
outsb
subb
mov
mov
add
mov
jo
inc
mov
sti
push
fisubl
push
into
nop
pop
movsb
add
pushf
insl
rclb
sbb
mov
sub
push
push
adc
div
jg
inc
xlat
dec
and
or
jge
out
imul
or
lods
jmp
pushf
dec
push
mov
inc
outsl
xor
insl
mov
push
bound
ret
push
pop
mov
cli
pop
in
stos
cs
mov
fadd
mov
movsb
repz
loope
dec
mov
pinsrw
cmp
sti
mov
jns
mov
sbb
adc
mov
stc
dec
insb
in
lret
out
pop
mov
stos
inc
fidivs
test
fstps
mov
movsl
or
sub
or
lock
cmp
fidivrs
push
loope
cwtl
sti
sub
jl
cmpsl
in
mov
mov
pop
and
clc
xchg
dec
or
cmp
adc
loopne
adc
push
into
mov
or
rsm
adc
pop
jmp
mov
fwait
jb
dec
aam
das
aaa
lret
add
mov
sub
addl
frstpm(287
scas
aam
dec
and
inc
xor
inc
lahf
scas
xchg
gs
cmpsb
scas
call
push
movsb
mov
enter
shl
rorb
lds
cmp
mov
jecxz
lret
sbb
sub
rcr
jp
movsb
sub
and
jbe
mov
mov
leave
lods
lret
sub
repnz
mov
inc
xor
jecxz
xor
mov
in
inc
xchg
pop
pop
test
push
cwtl
out
stos
pop
mov
or
mov
in
lods
mov
xchg
add
xor
mov
rorl
dec
push
jne
jae
jno
dec
pop
lds
out
dec
loop
jne
add
je
stc
stc
add
inc
push
mov
nop
dec
push
aas
xor
push
adc
aaa
roll
in
jge
fimull
pop
lcall
scas
gs
jecxz
or
lods
jmp
cmp
lock
and
fs
dec
jbe
mov
xor
inc
adc
stos
loop
sbb
jnp
je
bound
lods
push
mov
or
jnp
dec
push
jl
dec
mov
ja
pop
sarl
inc
nop
and
data16
shl
imull
sbb
push
mov
add
xor
xchg
mov
jecxz
daa
xchg
test
mov
movsb
loope
adc
sbb
aas
outsb
testl
test
out
shrl
ret
pop
je
sti
lea
pop
or
shll
mov
jge
sbb
adc
adc
ljmp
mov
cmp
lahf
pop
inc
outsb
push
push
sarl
jecxz
xchg
inc
add
dec
mov
repz
movsl
rorb
ss
aam
push
jae
lods
shr
mov
loope
rcll
popa
push
in
pop
pop
nop
jg
dec
xor
pop
movsb
aaa
push
and
push
daa
mov
pushl
and
add
test
sti
xchg
mov
test
xchg
js
popa
sub
in
movl
pop
jmp
dec
add
push
push
negb
xchg
fsubrs
or
mov
xor
push
push
ja
push
cmp
jns
pushw
outsl
dec
xor
cltd
in
mov
push
sub
xor
mov
vpmaxsw
add
add
inc
inc
scas
in
imul
xchg
mov
mov
fsubl
push
sub
mov
cmp
mov
push
subl
loop
clc
push
jge
out
out
loopne
add
push
mov
and
mov
xchg
fildll
pop
jb
ss
movsb
xchg
test
mull
dec
fidivs
xor
cld
jp
jnp
and
pop
cmp
sub
xchg
xchg
or
ret
lds
jle
ds
mov
in
jg
xchg
test
mov
jne
or
mov
mov
sti
mov
divl
add
push
dec
mov
adc
inc
lret
dec
jae
cli
pop
jbe
ret
push
mov
cmp
leave
test
cmp
stos
pop
mov
dec
mov
dec
add
adc
push
jae
xor
xor
sbb
data16
jge
js
in
or
aad
lea
mov
xor
mov
dec
bswap
and
popa
jecxz
add
adcl
mov
mov
push
xchg
jns
mov
pop
testl
in
sbb
mov
into
xor
daa
inc
cmp
lock
out
dec
xor
das
inc
jno
jge
jmp
stos
lahf
and
mov
clc
f2xm1
push
xchg
imul
iret
jle
adc
mov
sbb
movsb
jge
adc
and
dec
lea
sahf
pop
xchg
jecxz
test
add
adc
out
shll
mov
cmpsb
adc
cld
adc
dec
fwait
mov
out
mov
pop
es
scas
mov
cmc
fldcw
loopne
mov
in
aaa
aam
popf
pop
pop
test
inc
and
sbb
ljmp
movsl
mov
mov
cmp
mov
js
sub
mov
xor
daa
out
pop
mov
loope
or
sub
adc
lret
data16
inc
mov
pop
hlt
push
shrl
push
pop
test
mov
enter
fs
imul
es
in
cmp
mov
aam
lahf
pop
inc
cmp
hlt
mov
call
movl
pop
ds
imul
dec
pushf
inc
mov
or
dec
inc
mov
test
pop
imul
pop
mov
sub
and
les
inc
mov
pop
out
push
jno
rcll
xchg
sbb
jg
inc
jg
or
add
push
cmp
fmul
xor
cs
sub
lods
cmp
lods
int3
mov
inc
out
loopne
mov
jne
dec
iret
or
daa
push
and
dec
rdmsr
imul
add
jp
mov
pop
cs
inc
jno
repnz
orb
ret
cwtl
lock
rcrb
add
jnp
push
pop
cmp
pop
movb
cmc
mov
cwtl
test
add
aas
fisttps
shrl
mov
sub
jg
pop
push
dec
sub
jb
dec
jl
in
setnp
cli
pop
in
cmp
jno
and
mov
pushf
inc
es
cmc
fwait
push
or
test
lock
mov
lods
mov
push
mov
cmpb
shrl
leave
scas
xchg
cmp
cmp
jo
inc
into
adc
mov
mov
out
and
and
fstpl
subl
inc
xchg
or
outsb
push
fwait
sbb
pop
cld
cmp
ds
std
fiadds
cli
gs
pop
out
mov
repz
lret
addr16
outsl
scas
out
pop
stos
popf
pop
xor
add
lret
jp
or
mov
fstl
ljmp
aaa
sbb
pop
jl
fadds
iret
sahf
dec
xchg
fwait
add
shl
mov
movb
push
mov
test
into
cltd
sub
lahf
push
xchg
nop
leave
pop
sbb
xchg
outsl
push
lret
lds
lds
pusha
add
push
inc
aaa
push
or
iret
pusha
sub
std
jge
iret
out
adc
mov
sub
sub
xchg
fs
jmp
mov
std
out
sub
sbb
je
pop
or
loop
jl
jnp
hlt
sbb
rcrb
out
or
pop
push
pop
std
out
pop
int
scas
pop
ret
push
sbb
pop
loop
adc
mov
push
xlat
push
mov
out
xor
xor
int
inc
adc
sub
outsb
fdivr
pop
xchg
pushf
and
mov
mov
pop
add
mov
lods
shl
push
stc
test
aam
fstp
aad
push
rcll
test
or
adc
js
mov
dec
insb
out
jae
jecxz
push
pop
loop
mov
mov
outsl
push
add
sub
adc
push
popf
inc
dec
xor
sub
push
imul
jne
sub
or
xchg
push
dec
dec
dec
xchg
xchg
jmp
cmp
mov
andl
xor
pop
jmp
push
sbb
jmp
push
cmp
call
out
sub
orl
mov
ja
sahf
or
and
push
mov
inc
mov
les
xor
adc
inc
inc
fwait
rolb
popf
in
cmp
mov
dec
sub
and
aaa
sbb
mov
lods
fists
cmp
jmp
scas
xchg
cmc
xchg
push
cmp
addr16
xchg
xchg
jo
inc
and
pop
push
loop
imul
inc
jmp
scas
or
cld
nop
jmp
call
cltd
xor
mov
loop
dec
push
mov
add
das
das
xchg
xchg
mov
mov
push
andl
cmpsl
dec
mov
fsubs
jmp
sbb
mov
stos
dec
ja
jp
push
xor
cmp
jo
aad
inc
or
scas
mov
je
adc
or
ds
stc
aaa
and
outsb
cmpb
xchg
sub
cmpsb
lods
cmpsl
insl
adc
sub
ja
mov
sub
adc
fptan
cmc
stos
and
mov
pop
cmp
cld
adc
rcll
sub
or
pop
adc
mov
sti
cld
aaa
jae
daa
xchg
push
loop
sbb
and
test
jbe
cmp
sahf
lret
jmp
enter
xchg
sahf
in
inc
xchg
jb
jle
ljmp
orb
ror
add
mov
cs
fwait
dec
xlat
loop
xchg
add
scas
adc
movsl
jo
sbb
gs
jo
inc
rclb
rorl
aam
das
add
add
les
adc
xlat
lcall
jb
lods
cmp
adc
clc
bound
mov
insb
mov
cwtl
shlb
lret
aad
push
scas
jge
cmpsl
dec
sub
rcr
cmp
mul
jbe
andb
mov
adc
out
imul
mov
into
fdivrs
jp
movsb
jb
lds
sub
adc
mov
ss
mov
jg
xchg
arpl
rol
mov
mov
jg
repz
aad
mov
enter
fcompl
dec
ss
mov
in
bound
pop
pop
jno
les
lcall
dec
ljmp
sub
mov
jbe
les
or
add
mov
imul
sbb
es
pop
push
push
rcrb
aad
ret
dec
inc
jnp
inc
pop
inc
lock
sub
inc
fadd
dec
mov
mov
shll
lea
into
insb
nop
and
push
outsb
je
or
jl
call
push
sahf
mov
mov
xor
cmp
test
mov
xlat
jb
cmpsl
xchg
je
int3
push
cmpb
outsb
pop
fs
xchg
sti
loopne
cmp
ret
cmp
mov
adc
insl
bound
sub
dec
mov
xchg
mov
add
and
outsb
cmp
into
mov
lock
cmp
pop
xchg
test
sub
mov
shlb
addr16
int
sub
fidivrl
pop
std
push
pop
jne
xor
xchg
xchg
daa
insl
xchg
push
cmp
push
lahf
and
test
in
ror
add
push
sbb
pop
and
cld
and
test
push
push
enter
cli
pop
pop
push
popf
das
sub
test
xchg
xchg
dec
js
pop
add
pmuludq
xchg
je
dec
xor
mov
add
push
sbb
in
mov
jno
mov
iret
in
into
hlt
dec
ds
and
jo
adc
mov
sarl
inc
lods
xor
sub
mov
pop
inc
jns
xor
sub
add
jne
fwait
jg
dec
fcomps
cmpsl
sbb
dec
pop
xchg
cmp
jo
push
pop
add
cmpsb
pop
lods
repnz
mov
into
and
ljmp
or
xor
push
dec
cmp
sarb
adcl
mov
jge
test
out
sarl
add
pop
inc
mov
jbe
cmpsb
xchg
xlat
push
cltd
ret
dec
test
mov
mov
hlt
sub
movsb
xchg
ss
adc
out
xor
out
push
jnp
sbb
push
dec
test
xchg
je
int
mov
pop
inc
int3
nop
test
jge
xor
sub
sub
movsb
or
mov
je
xchg
xlat
imul
adc
xchg
or
pop
push
xchg
movsl
out
inc
jbe
out
cmpsl
lods
std
lret
pop
ss
and
pop
sub
cld
pop
mov
jmp
pop
push
adc
xchg
mov
mov
add
pop
sbb
dec
test
jg
pop
mov
rorb
mov
lock
arpl
push
pushf
cmpsb
xchg
push
inc
loop
popa
aaa
jp
mov
jge
or
addr16
loope
arpl
gs
ja
movsb
fidivl
outsb
jl
adc
fsubrs
shll
outsb
adc
test
sbb
mov
push
daa
and
jno
mov
cmp
rcrl
add
out
lahf
in
test
cmp
inc
mov
rol
push
jmp
add
or
xchg
loope
rorb
mov
pop
push
jno
cltd
cli
lock
mov
xlat
pop
and
adc
lds
andl
sbb
mov
sub
int3
movsb
inc
filds
push
movsb
in
test
test
enter
adc
add
jo
jne
mov
pop
xor
lods
mov
mov
sub
lds
xchg
push
das
pushf
cld
out
mov
fisubrl
xor
xor
add
imul
outsb
pop
inc
insl
aam
pushf
cltd
bound
cld
stos
test
or
stos
leave
out
and
and
rclb
hlt
movsl
or
loope
inc
mov
hlt
push
cltd
mov
adc
and
push
inc
jmp
insl
lcall
push
addr16
stos
mov
push
test
cmpsl
ss
hlt
outsb
xchg
sbb
lret
push
adc
mov
into
pushf
xchg
mov
sahf
push
xor
add
jl
adc
mov
or
sub
inc
add
int
pushf
lret
or
icebp
adcb
xchg
pushf
mov
repnz
aaa
xor
scas
cmp
repz
mov
sub
mov
sbb
mov
lret
mov
jp
cmp
cmp
je
pop
mov
loop
sbb
add
or
xchg
repnz
dec
or
dec
inc
test
jmp
sbb
data16
cmp
mov
imul
repz
and
jg
loope
das
cmp
pop
nop
dec
aaa
std
test
ss
adc
out
xor
loop
rorb
xchg
adc
or
push
inc
jne
adc
and
dec
jbe
cli
shl
mov
sbb
xchg
or
xchg
test
xchg
ja
iret
sub
je
test
cmp
jg
or
lock
loop
push
fxch
pop
aas
es
cmp
sbb
dec
mov
adc
lds
adc
int
fstpt
fs
xor
clc
iret
leave
mov
fisubrs
pop
xor
mov
inc
cmp
jnp
icebp
in
mov
pop
stos
push
sub
jnp
pop
stos
shll
xor
inc
hlt
jne
int3
cmpb
and
in
or
push
push
in
push
dec
bound
hlt
cmp
adc
shrl
add
mov
and
out
add
mov
dec
shlb
clc
ficoms
lods
mov
rclb
lods
inc
pop
aad
push
jle
scas
jbe
in
fimuls
ds
sbb
xor
pmulhuw
fcoml
push
js
clc
cmp
mov
popf
mov
dec
pop
mov
mov
cs
sbb
or
mov
pop
and
lret
sbb
jb
dec
xor
mov
mov
icebp
cmpsl
ret
into
imull
dec
inc
jne
jmp
stos
inc
push
sbb
adc
out
xchg
xchg
testl
fcom
shr
or
pop
in
jb
fs
mov
fcmovb
aaa
sti
test
int
xchg
mov
ss
sub
mov
mov
pop
pop
cmc
push
jo
sbb
sbbb
adc
jg
mov
aaa
sbb
fbstp
ret
xchg
mov
daa
ds
ja
push
inc
int3
inc
cmc
mov
inc
fwait
add
dec
ja
or
sahf
jnp
test
sbb
call
xor
mov
cmpl
or
jmp
imul
or
mov
nop
adc
in
cwtl
cltd
add
mov
mov
das
mov
sbb
or
rorl
add
mov
xchg
cmp
pop
arpl
imul
sbb
les
arpl
filds
in
cmc
add
dec
shlb
rcr
mov
jle
cmp
lret
int
cld
ror
addr16
xchg
scas
inc
daa
xchg
fs
mov
adc
inc
mov
mov
xchg
sub
jp
add
ljmp
jle
lock
cld
mov
rorl
loopne
aad
xchg
mov
jle
push
xchg
outsl
mov
push
ljmp
pop
fs
js
insb
dec
mov
scas
mov
add
pop
mov
pop
sub
push
pushl
lret
xchg
jnp
inc
cltd
push
inc
cmp
fldenv
repz
cs
xor
mov
test
test
sahf
sub
sbb
popf
lea
nop
leave
sub
rorl
sub
xor
xor
cmp
and
test
shrl
adc
mov
jnp
sbb
pop
mov
fsubp
or
dec
mov
leave
pusha
insl
dec
pop
test
lods
jo
pslld
repz
xchg
inc
cwtl
sahf
mov
sub
dec
mov
jp
pop
and
add
scas
xor
sahf
lods
mov
scas
mov
leave
jae
lea
pop
jg
rcrb
jg
popf
cmpsb
lock
sbb
popf
and
xor
pop
lods
nop
jns
outsb
xchg
xor
das
cmpsb
loope
pop
dec
xchg
jg
push
fs
inc
lahf
fldcw
pop
mov
test
dec
mov
pop
mov
pop
nop
sub
stos
test
dec
inc
cli
mov
cmp
in
cli
mov
mov
jnp
lret
fucomi
out
test
out
mov
push
roll
dec
and
pushf
xchg
add
xor
cld
lcall
shrl
sub
push
cmp
iret
sahf
add
scas
mov
cmp
and
out
mov
ljmp
mov
shrb
sub
xor
xor
sub
mov
mov
stc
shll
fadds
lret
pop
push
or
inc
mov
aas
movsl
dec
xchg
in
lret
xor
aas
jmp
and
or
stos
mov
aas
sub
in
jb
es
sbb
push
jo
xor
int
jnp
stos
fldcw
fcomps
mov
jecxz
push
ja
xchg
push
popa
stc
mov
jecxz
push
mov
cmp
adc
xor
add
mov
adc
loopne
std
fcomps
jle
call
and
nop
jmp
xor
test
inc
movsl
push
dec
pop
mov
push
out
fdiv
xchg
cmp
ds
sbb
loopne
mov
push
mov
inc
mov
xor
jecxz
sbb
fs
add
pop
pop
ret
push
pop
jmp
jne
jne
je
sbb
ja
repz
ret
imul
std
or
pop
cwtl
jmp
pop
aas
outsb
imul
jns
xchg
xor
dec
loope
inc
mov
pop
lret
jo
iret
out
das
daa
in
jle
arpl
ss
jle
addb
mov
js
xor
mov
dec
xor
mov
out
push
lahf
push
je
and
arpl
rclb
sub
add
mov
test
jg
test
fdivrl
mov
js
aas
mov
fstl
adc
jmp
call
andl
cltd
out
bound
sbb
int3
push
outsb
fidivrl
push
aam
repnz
mov
jb
xchg
sbb
sbb
addr16
add
mov
lcall
mov
or
iret
xchg
mov
repnz
bound
dec
in
and
daa
ret
push
fwait
test
addr16
movsl
inc
xor
lods
lock
xor
fistps
jmp
mov
cld
mov
lret
bound
ljmp
nop
cmpsb
jl
popf
jp
jo
call
lcall
add
sub
xor
push
adc
and
sbb
push
xor
mov
lcall
loop
sub
mov
mov
xchg
jo
sbb
sbb
lcall
das
sti
or
pop
mov
aas
sahf
std
add
dec
add
in
fcom
dec
shr
clc
dec
jo
lret
pop
mov
mov
xchg
mov
xor
mov
addr16
add
iret
jg
sbb
lods
fnstenv
test
incl
insb
xchg
inc
or
insl
pusha
push
jns
cwtl
mov
sbb
or
add
adc
cmp
arpl
xchg
mov
dec
popf
aas
adc
movl
cmp
lret
dec
mov
pop
bound
sahf
inc
ja
mov
scas
add
mov
pop
roll
mov
cld
cmpsb
mov
xchg
sub
test
jnp
and
cmp
pop
cwtl
sub
mov
pop
andb
dec
pop
cmp
les
lret
or
push
scas
mov
into
and
mov
shll
dec
cmc
cmp
dec
pop
hlt
and
call
push
adc
inc
data16
lods
mov
jbe
vorpd
test
test
sbb
adc
imul
and
or
lods
mov
cld
jno
push
and
icebp
test
jnp
jnp
cmpsl
dec
sub
fwait
push
push
repnz
in
addr16
je
pop
xchg
and
lret
mov
pushf
imul
cwtl
pop
inc
fistps
das
daa
rorl
lods
mov
lock
cmpsb
or
mov
xchg
inc
and
and
cmp
dec
ljmp
jmp
cmp
lret
jb
jb
jg
jge
clc
test
jbe
jl
int3
nop
inc
arpl
sub
jns
xrstor
movsb
shr
xchg
roll
test
cld
rol
scas
in
dec
jbe
vminss
rcrb
or
leave
icebp
pop
xor
loope
sti
mov
push
shr
xchg
mov
and
stos
jae
fidivrs
jmp
and
in
aam
pusha
adcb
add
cmp
pop
and
out
in
in
mov
mov
sahf
xchg
pop
or
out
push
leave
out
push
nop
mov
adc
leave
cwtl
loopne
lret
out
lock
cmp
pop
mov
mov
fdivs
ljmp
ret
mov
fistps
pop
inc
push
mov
xor
cmp
dec
adcb
inc
lcall
mov
dec
std
int3
pop
in
icebp
add
jne
mov
fstl
inc
xchg
sub
andl
or
shr
mov
dec
or
jmp
movsb
inc
mov
outsl
cmpsl
dec
ljmp
push
add
iret
int3
pusha
adc
movsb
or
push
pop
xor
or
enter
and
push
adc
enter
cmp
movsl
mov
das
stos
mov
lea
sub
or
add
movd
jecxz
push
in
ret
mov
mov
aad
mov
jl
outsb
and
mov
cs
push
xor
cmc
adc
rclb
std
fidivrl
mov
xchg
adc
hlt
mov
ret
xchg
sahf
jnp
pinsrw
in
lds
or
pop
push
daa
push
inc
pop
ficomps
add
add
dec
jmp
aam
mov
aad
or
push
sub
sub
sti
adc
faddl
fbld
lret
jbe
xchg
aaa
fiadds
ret
adc
movsl
rorl
arpl
cmp
mov
mov
insl
mov
jg
out
scas
mov
and
icebp
lea
jnp
xchg
lock
call
mov
movsl
dec
mov
lret
xchg
xchg
popa
jb
out
cld
cmc
xor
xchg
mov
aas
jmp
sbb
shll
aam
and
jmp
outsl
push
xlat
mov
cwtl
aad
and
outsl
lcall
cmpb
dec
std
fdivl
jbe
add
fimull
arpl
inc
jo
jno
cmp
ds
dec
dec
cmpsl
push
scas
mov
outsw
jbe
dec
outsl
mov
pop
cmpsl
in
adc
mov
jne
ret
xor
lcall
cmp
mov
add
ficoms
jge
sub
test
adc
fstps
into
cltd
xchg
pop
pusha
pop
push
add
fldl
pop
push
test
fldenv
cmp
pop
xchg
xchg
fcmovb
sub
addr16
arpl
scas
hlt
jle
xchg
lcall
imul
sbbl
fdivrl
mov
cmpl
mov
or
add
sahf
fstpl
neg
sub
out
inc
mov
call
mov
jae
in
das
mov
clc
inc
bound
cmp
push
es
or
push
sub
inc
dec
inc
push
popl
ret
stc
push
out
lea
in
mov
int
ss
popa
sub
jo
push
xchg
dec
cwtl
in
outsl
lahf
and
sbb
cmpsb
lods
aad
gs
push
jbe
dec
jl
lret
loope
sub
inc
pop
push
cld
pop
push
jbe
dec
insb
lods
neg
inc
mov
testl
mov
sub
inc
mov
inc
in
xor
ljmp
fcomp
pushf
adc
cmp
dec
cmc
les
inc
pop
lcall
test
adc
cs
in
ja
push
fisubs
cmp
cli
adc
test
aaa
push
das
ret
add
sbb
aad
and
decl
lret
clc
inc
add
imul
pushf
loop
lret
xchg
dec
pop
mov
test
insl
dec
adc
xchg
ja
scas
sub
call
add
loope
and
das
and
fstpl
push
inc
adc
mov
mov
dec
inc
mov
out
outsl
leave
addl
fcomi
lods
push
mov
mov
cmpsb
pop
cmpsb
push
sbb
fsubrl
mov
rolb
push
aas
xchg
and
fisubrs
orb
and
sub
add
arpl
ja
insb
in
push
pop
add
mov
repz
add
dec
jle
adc
testl
adc
cmc
mov
arpl
jg
adc
xchg
insl
xor
hlt
out
adc
cmc
je
cli
sub
jno
dec
je
cs
es
jo
add
adc
mov
push
loopne
mov
cmp
bound
sbb
and
lds
sub
sub
jmp
nop
es
aad
pop
gs
add
inc
inc
pushf
push
in
ret
addr16
stos
out
ds
xchg
cmp
pusha
aad
cmpsb
rol
add
shl
push
pusha
pushf
xchg
aad
enter
sub
ds
out
jmp
outsb
adc
pop
cld
popf
adc
lods
cmpsb
ljmp
lcall
dec
icebp
mov
mov
mov
mov
cwtl
mov
cmpsb
mov
adc
mov
mov
aad
cmp
mov
sub
cmpsb
int
insb
repnz
and
hlt
mov
popa
adc
and
mov
adc
inc
scas
pop
inc
movsl
xor
sbb
mov
push
dec
repz
in
popa
sbb
notb
pop
pop
ss
out
and
sbb
inc
arpl
mov
pop
shlb
sbb
mov
mov
lock
in
pop
cmpb
in
lret
out
scas
mov
lea
sub
flds
scas
int3
mov
loop
dec
mov
mov
inc
sub
push
mov
sbb
push
insb
jmp
mov
jae
pop
dec
int
or
mov
adc
jp
lret
fcomps
daa
faddl
dec
mov
xor
jae
mov
inc
sub
lcall
loopne
xchg
test
fsubs
pusha
push
adc
pop
and
rcll
insb
rcrl
xor
in
pop
movsl
pop
daa
mov
sbb
js
lock
dec
mov
imul
sub
mov
mov
shl
test
mov
sbb
inc
cmp
mov
mov
ds
dec
insb
ja
mov
lock
pop
sbb
jne,pn
loope
dec
xchg
popf
mov
jmp
cmp
outsb
idivl
das
mov
aam
fwait
push
sbb
pop
ds
add
inc
jle
jmpw
pusha
dec
pop
bound
mov
pop
sub
xchg
mov
pop
in
sahf
fnstsw
cwtl
mov
cmpsl
sarl
cmp
adc
icebp
andnps
push
repnz
nop
insl
adc
xchg
push
pop
pop
fcomps
rorb
fstpl
loop
inc
mov
cmp
shlb
hlt
jo
fisttpl
inc
cltd
imul
js
data16
ja
cmp
mov
push
leave
ret
push
into
mov
xchg
or
adcb
out
sbb
mov
insl
mov
stos
add
xchg
inc
imul
das
bound
add
inc
daa
test
and
xor
xchg
mov
bound
jne
add
pop
mov
pushw
je
popa
mov
cmc
leave
cmpsl
jecxz
jo
lods
stos
icebp
and
test
cmp
icebp
rorb
push
popf
mov
test
add
cmp
lds
mov
xchg
fmuls
mov
sub
jg
xchg
sbb
cmp
fildll
mov
push
xchg
lahf
lret
pop
mov
cs
dec
movsb
mov
out
mov
pop
ret
inc
cmp
push
push
lcall
cmp
and
inc
sarl
fsubrl
mov
adc
daa
jge
and
adc
loopne
stc
and
ret
fwait
or
xor
add
mov
sbb
imul
mov
adc
fildl
int
and
add
push
in
cmp
scas
movsb
addr16
repnz
push
jnp
movsb
insl
rorl
gs
mov
test
loop
lret
das
adc
rolb
movb
fwait
sub
iret
push
out
fnstsw
fistpl
leave
xor
dec
mov
fs
sbb
inc
std
xchg
out
aam
push
mov
xchg
data16
nop
sar
repz
jb
adc
lds
jecxz
rcrb
mov
pop
in
imul
vpaddw
js
mov
add
mov
adc
jecxz
mov
jb
scas
push
and
out
fcmovne
pop
push
pop
mov
inc
pop
sbb
stos
jnp
dec
push
xor
popf
push
lcall
mov
out
xchg
and
in
sbb
pop
push
scas
arpl
out
ret
lods
sahf
aaa
test
out
or
rcl
pop
rolb
mov
cld
enter
lds
xchg
pop
lahf
fwait
ja
sbb
jmp
jmp
les
pop
shl
outsb
and
jno
sbb
push
push
mov
add
popa
test
out
mov
popf
lock
jne
xor
adc
push
movsb
mov
outsb
outsb
shl
lahf
test
or
jle
dec
fcompl
or
sbb
faddl
out
hlt
push
je
dec
insl
scas
bound
mov
das
jns
push
push
mov
aaa
push
fs
xchg
xor
inc
iret
xchg
xchg
lahf
cmp
xor
cwtl
xor
in
cmp
mov
push
jne
or
jnp
push
push
lods
mov
dec
stos
and
outsl
cmp
ljmp
jbe
test
cmp
ret
lahf
dec
rorl
inc
inc
popf
fnsave
lcall
out
mov
ret
fwait
lret
loop
idivl
sub
pop
arpl
int3
ss
outsb
subl
pop
movsb
mov
adc
clc
not
add
leave
dec
jno
pusha
pop
adc
and
fsubs
push
and
scas
mov
sahf
jmp
jg
ss
sub
sub
jb
inc
pusha
shl
testb
pushf
hlt
lds
or
bound
test
bound
jb
in
out
nop
lret
mov
pop
sti
xchg
mov
shlb
jmp
ret
rclb
cmc
bswap
add
nop
and
sub
sbb
cmc
inc
cmp
sub
xchg
mov
mov
push
jg
scas
mov
cwtl
sbb
insb
xchg
test
pop
inc
mov
cli
push
sub
cmp
out
sub
jb,pn
arpl
or
jns
sbb
and
push
fimuls
cmp
daa
in
fisttps
jo
cmpsl
dec
cltd
aaa
sbb
xchg
pop
into
inc
cwtl
shlb
addr16
pop
int
sbbl
pop
cli
push
push
lahf
sub
gs
iret
fstpl
pcmpeqw
add
mov
lds
setg
xchg
xlat
xchg
and
aad
testl
test
ljmp
incb
pop
mov
sahf
lret
dec
jecxz
int3
push
clc
aad
add
jg
and
cmp
mov
cmpsb
or
fstl
or
lret
js
in
cs
jmp
xor
inc
addr16
mov
scas
and
xchg
adc
push
jp
mov
xchg
xchg
adc
sub
in
dec
jns
cmp
or
mov
cmp
cmp
pop
sub
jle
lret
repz
lock
dec
add
push
dec
aam
or
jnp
xchg
xlat
out
mov
sbb
cmpsl
mov
fcoml
or
sub
ror
lret
pop
jbe
or
clc
mov
mov
in
jp
fcomp
addr16
sbb
or
ficomps
dec
int3
imull
mov
std
xchg
xchg
dec
enter
jbe
rol
repz
mov
iret
stos
or
lret
cmp
pop
enter
cmp
loopne
lret
push
nopl
int
mov
inc
cmpsl
lcall
cltd
xor
mov
push
xor
push
xlat
int
call
xor
inc
add
jp
pop
pop
insl
or
cltd
inc
lds
ljmp
mov
gs
fsubrl
rcr
xor
xor
and
inc
and
mov
clc
adcb
xchg
dec
adc
jno
mov
push
push
rcr
pop
add
pop
jne
sbb
jne
jp
push
test
mov
lcall
in
test
inc
jp
es
out
rcl
cld
fstpt
clc
or
add
stc
pusha
cwtl
or
jl
cmpsl
gs
adc
push
call
ficoms
xor
lea
jp
xor
call
pusha
xor
push
cltd
out
cmp
dec
adc
dec
scas
and
daa
mov
jbe
dec
das
add
jg
cld
lahf
ss
adc
call
pop
dec
inc
dec
mov
push
stos
ljmp
popa
pop
push
imull
push
clc
inc
pop
lods
lea
cmc
shrl
enter
adc
iret
push
fidivs
mov
add
xchg
pop
das
mov
jl
in
dec
mov
sbb
nop
jge
movsb
mov
adc
sbb
inc
sahf
inc
add
push
out
das
aas
sbb
lcall
jns
insl
adc
dec
xchg
movsl
sub
xchg
pushl
out
mov
cs
aad
insb
aaa
mov
cld
sbb
or
inc
jno
scas
enter
scas
dec
push
ds
sbbl
bound
fdivl
insl
dec
adc
xor
and
lret
pusha
sbb
mov
outsl
inc
inc
mov
outsb
rcll
add
sub
inc
ljmp
adc
cmp
jmp
iret
mov
les
gs
dec
pop
out
mov
push
and
scas
sbb
cmp
inc
fcompl
int3
mov
push
mov
leave
mov
das
sahf
stos
push
out
dec
in
and
sahf
and
mov
and
lods
inc
loope
hlt
std
idivl
push
cmp
nop
sbb
cld
xchg
jae
scas
lcall
cmp
sub
push
movl
xor
dec
cmp
bound
cmp
fidivrl
add
sbb
xchg
popa
imul
mov
sbb
test
xlat
out
xchg
loope
push
mov
shrb
xor
ja
sub
xchg
lahf
and
jp
sti
sub
cmpsb
push
fbld
add
popa
aas
ret
ss
lret
out
aaa
adc
rcrl
push
das
push
jne
icebp
xchg
mul
pop
mov
mov
popf
push
cs
jae,pt
sarl
pusha
or
xchg
mov
cmp
cmpl
push
cmpl
nop
mov
lods
cs
sbb
mov
xor
adc
cmp
in
jle
ds
shrl
mov
and
mov
pop
sub
cmp
stc
push
ljmp
lcall
loop
xchg
dec
mov
lods
xor
jmp
mov
roll
popa
sub
fisubs
jbe
push
sub
mov
fdivl
mov
mov
pop
mov
mov
hlt
ficompl
ret
sbbb
xchg
int3
xchg
lea
sti
insb
pop
jb
rcrb
sbb
jmp
fisttpl
es
ja
push
insl
rorb
push
loop
and
clc
cmpsb
insl
xor
fcmovnbe
inc
or
dec
and
adc
ja
sub
adc
int
push
idiv
scas
fcmovu
pop
aas
es
aas
dec
cwtl
mov
xchg
dec
test
adcb
bound
cmc
adc
push
loope
push
test
dec
ror
dec
mov
out
xchg
in
pop
loopne
inc
data16
inc
loop
fwait
mov
adc
adc
fsubp
pop
scas
and
inc
aaa
mov
subb
pop
scas
add
std
push
aas
dec
xchg
mov
fucom
push
fwait
push
add
mov
cld
repz
fisttpl
sbb
scas
mov
dec
pop
jne
aam
shll
je
stos
dec
inc
les
adcb
add
rolb
sarl
cmp
bound
shl
inc
jno
aas
aaa
aaa
and
fbstp
jge
xor
adc
ja
repnz
repnz
xchg
scas
cmp
xchg
popf
sub
cld
repnz
cs
imul
push
js
daa
sbb
lcall
int3
pop
xchg
mov
stos
sub
jo
sbb
cmc
mov
leave
das
inc
daa
push
mov
push
shlb
jae
ja
dec
dec
rolb
jge
jae
loopne
push
decl
pop
shrd
in
push
pop
cwtl
adc
cli
mov
aaa
mov
lea
xchg
xlat
pop
jno
aad
into
cltd
add
add
hlt
shlb
xchg
dec
and
std
adc
imul
and
add
xor
xchg
hlt
out
or
push
or
repnz
add
adc
jb
scas
ret
jns
hlt
lret
lret
push
jle
pop
mov
jg
sahf
clc
cs
xor
rcll
sub
adc
rorl
push
inc
imul
mov
jle
cmp
cmp
fbld
add
cltd
inc
stos
sbb
ret
ss
mov
and
cmp
sub
inc
push
pop
movsb
ja
js
stos
cltd
pop
xor
xchg
sbb
push
inc
xchg
mov
lret
push
and
repz
sbb
xchg
aas
pop
sub
fildl
aad
and
jno
je
pop
sti
es
sbb
jmp
daa
out
cmp
call
pop
adc
pop
andb
mov
add
lds
fstpl
pop
cli
shlb
or
jbe
pop
add
mov
shlb
inc
inc
int3
jnp
xchg
in
xor
aad
push
nop
xchg
loop
cs
pop
ja
pop
mov
out
lods
sub
xor
fimull
jge
mov
sti
add
outsb
shll
stc
push
pop
lret
mov
pop
repz
jmp
ret
adc
adc
pop
in
sahf
adc
sbb
loop
pop
jns
mov
popa
mov
sub
xchg
xchg
xchg
or
mov
mov
outsl
sub
imul
shll
jae
jl
insl
mov
repz
push
lds
jnp
lcall
lock
mov
adc
orl
movsl
or
pop
pusha
mov
jb
add
lcall
ret
add
inc
jo
push
sub
out
mov
mov
in
mov
xchg
mov
xor
pop
mov
shll
mov
inc
inc
mov
push
cltd
daa
dec
imul
pop
cmp
rcrl
push
jg
pop
ss
xchg
aas
outsl
dec
lods
push
ljmp
and
into
ret
dec
lret
bound
mov
repnz
fmull
xchg
ljmp
loope
mov
xor
xchg
js
mov
in
cmp
dec
add
enter
mov
rolb
push
xor
dec
mov
popa
scas
add
sub
rcr
dec
push
jl
jbe
xor
sbbl
mov
inc
add
call
out
mov
loop
sub
in
cmp
add
push
loopne
fs
scas
pop
mov
xor
shlb
cmpsb
lahf
andb
in
bound
mov
sbb
xchg
push
jl
mov
push
jg
xchg
ror
adc
lock
filds
xchg
mov
sbb
push
out
daa
mov
das
add
inc
push
mov
test
les
test
push
js
es
lcall
xor
adc
jge
out
jb
jecxz
lods
mov
xor
push
cmp
push
stos
push
in
cmc
jge
xchg
stc
imul
push
in
adc
xchg
jg
insb
adc
cmp
loope
xor
sar
push
nop
sub
pop
js
fsubrp
adc
xchg
lock
dec
lret
cli
adc
mov
mov
xor
and
mov
adc
inc
inc
loope
or
gs
mov
sub
cli
adc
adc
sbbl
mov
stos
pop
xchg
outsb
pop
push
lcall
cmpsb
test
pop
sbb
push
xchg
stos
jae
push
repnz
inc
mov
mov
sbb
out
pop
cli
cld
fidivrs
negb
push
scas
gs
aaa
mov
and
inc
pop
ljmp
pop
mov
pop
pop
and
out
enter
hlt
rorl
cli
fnstsw
mov
rorl
in
add
cld
pop
pop
int
stc
jnp
jmp
in
dec
mov
inc
and
rol
cld
inc
push
test
fwait
cli
push
cmc
xchg
add
mov
cmp
adc
mov
ds
and
add
insb
cmpsl
lret
test
aas
push
mov
out
enter
jne
rorl
es
jle
loope
es
test
cmpsl
push
addr16
fwait
cmc
push
add
fidivl
pop
xchg
jo
dec
push
das
push
outsb
cmp
sti
cmc
pop
add
pop
inc
lret
dec
das
addl
stos
popf
ljmp
fistpll
pop
into
andnps
sub
mov
lret
jg
jnp
xchg
movsb
add
pop
adcb
sbb
xchg
pushf
aam
mov
add
push
push
cs
jo
pop
jnp
in
pop
cmpsb
xor
mov
pop
add
aad
out
cmp
mov
jb
jmp
add
sbb
push
push
popa
movsl
lcall
and
les
mov
mov
cmp
filds
dec
jae
std
sub
fisubl
sbb
or
dec
roll
xlat
mov
icebp
push
rcrb
ljmp
add
mov
das
loope
cmp
xchg
jmp
jnp
mov
adc
js
ds
in
cwtl
pop
add
aas
cs
std
into
js
shlb
nop
pop
jnp
int
andl
movsb
outsb
mov
ljmp
icebp
sar
pop
popa
push
aad
clc
pop
les
lcall
popl
jle
push
adc
sarl
repnz
mov
inc
scas
movsl
and
xchg
fisubs
mov
xchg
dec
dec
fwait
in
pop
adc
push
sti
add
xchg
cwtl
dec
sbb
outsb
push
dec
inc
adc
xchg
nop
inc
inc
sub
rcr
lods
adc
mov
sbb
mov
out
insb
or
loop
mov
repnz
cs
lcall
mov
sub
jle
arpl
es
or
mov
sub
mov
ja
jb
out
mov
lds
daa
dec
mov
cltd
addb
and
push
xchg
outsl
out
insl
add
adc
decl
sbb
mov
mov
cmpsb
inc
xor
aad
test
or
xabort
fcmovnu
int3
cli
mov
and
add
and
xchg
xchg
rolb
push
ds
insl
xchg
mov
mov
mov
mulb
or
shll
scas
loope
jno
add
push
adc
mov
xchg
enter
mov
sbb
sub
test
xor
cltd
mov
sub
push
pop
in
test
pop
sub
adc
hlt
cmp
dec
jp
mov
xchg
add
pop
aas
fsubl
cmpsl
xchg
in
sub
div
lret
lods
jge
enter
mov
arpl
adcb
and
aam
adc
jmp
sti
jb
fidivl
test
je
test
lret
test
insb
ret
dec
jno
movsb
push
and
aad
lock
lea
js
jae
in
rolb
and
aaa
cmp
mov
inc
fdivl
mov
fs
imul
pusha
notb
fwait
test
je
aam
mov
mov
mov
loopne
inc
adc
push
rcll
mov
and
int
cltd
or
repz
popa
mov
sub
lds
mov
adc
push
cwtl
outsb
sub
xchg
jae
lahf
shr
mov
and
xor
and
mov
jo
inc
xor
mov
sarb
ret
or
jecxz
add
int
inc
mov
adc
rcll
into
dec
and
jns
mov
clc
add
push
test
es
jl
sbb
daa
jae
rcll
dec
ljmp
xchg
in
xchg
filds
inc
in
xor
add
cwtl
call
push
sub
dec
xchg
pop
adc
mov
das
add
add
add
add
push
adc
mov
jne
out
ss
movsb
push
in
inc
pop
std
les
shlb
cli
lret
mov
and
sub
adc
lods
mov
in
nop
mov
iret
test
shlb
xlat
jne
ror
fstpl
pop
test
scas
in
stos
xchg
ljmp
sbb
andl
jno
cmp
sub
lret
in
cmp
dec
xchg
cmp
push
cli
mov
fs
filds
fwait
xchg
out
mov
std
int
mov
outsb
fcom
mov
pop
pop
push
in
ja
lcall
mov
adc
add
rorl
cmp
movsl
insl
mov
or
jg
jno
incb
mov
adc
xor
in
mov
fsts
sbb
jmp
call
pop
pop
jns
cwtl
pop
test
mov
or
fadd
pushf
cmpsb
adc
aad
jmp
xchg
push
push
xor
jp
popa
mov
aam
inc
push
add
outsl
fdivrp
imulb
push
fldl
in
mov
add
lds
fdivs
xor
cmp
push
jns
fists
aaa
js
cwtl
or
and
jmp
jmp
test
xchg
nop
cmp
or
pop
lods
sbb
mov
fdivs
repnz
test
jb
es
call
cwtl
mov
rorb
push
xchg
mov
push
jecxz
dec
repz
xor
dec
gs
ss
adc
fcoml
and
jne
mov
and
pop
push
lret
cli
xchg
out
faddl
mov
cmpsl
add
lea
addr16
add
adc
xor
lret
xchg
pushf
pop
repz
adc
pop
mov
push
nop
arpl
xor
mov
xor
andb
jg
in
push
fdivl
jne
out
pop
xchg
mov
or
dec
out
jl
int
cmpb
addl
push
in
dec
or
xor
jge
pop
cmp
jbe
jnp
inc
mov
xchg
dec
or
inc
jle
xor
cs
xor
sub
fisubs
jmp
mov
popa
test
or
and
cli
faddl
jp
push
add
add
mov
clc
cld
sub
out
xchg
sub
lahf
fsubrl
aaa
fistpll
adc
cld
ds
adc
testl
jge
cmp
std
mov
jnp
daa
push
mov
dec
jg
push
xchg
mov
imul
pop
xlat
cmp
add
or
int
push
daa
shrb
push
sbb
mov
movl
pusha
adc
divb
pop
mov
je
inc
lret
rorl
fsubr
cmp
push
mov
inc
enter
mov
das
lods
adcb
rolb
sub
mov
mov
adc
cmpsb
sub
adc
mov
jb
lcall
sbb
stc
dec
xchg
cmc
mov
icebp
mov
lods
sub
icebp
enter
pop
jp
inc
inc
cmp
in
in
mov
arpl
xchg
aaa
push
jbe
push
mov
xchg
dec
pop
sub
sub
fimull
cmp
xchg
jbe
outsb
mov
push
stc
nop
xchg
stc
cmpsb
dec
adc
ficompl
inc
sub
adc
lcall
leave
jbe
mov
mov
push
cmp
stos
aad
out
std
push
into
loopne
outsl
dec
and
xlat
mov
inc
sarb
inc
sub
inc
jns
repnz
imul
rorl
or
sti
in
das
push
testb
clc
pop
scas
decl
sbb
in
fldenv
int
int
sub
fldcw
inc
cmp
inc
daa
in
data16
add
in
ret
sbb
adc
mov
ljmp
das
gs
mov
cmc
ret
test
adc
xchg
add
xchg
push
fistpl
imul
rcll
push
cld
lods
mov
rcrl
sti
push
popf
and
imul
dec
mov
or
into
add
loope
jl
mov
sarl
jne
subl
in
test
sub
out
sahf
push
mov
add
stos
fcomps
xchg
int3
popa
add
mov
dec
mov
pop
fdivs
mov
das
sbb
adc
mov
popa
xchg
mov
roll
adc
aaa
lret
push
into
inc
jle
dec
enter
jmp
aam
ja
cmc
dec
xchg
xchg
xchg
int
xchg
cmp
sbb
sbb
leave
js
push
sbb
mov
fst
jno
ljmp
popa
pop
into
stos
or
cmp
inc
cltd
push
mov
push
je
stos
imul
scas
test
mov
shrb
mov
rcrl
dec
jecxz
cmpsl
mov
insl
rcrl
pop
push
repz
ret
mov
iret
mov
xchg
xchg
repnz
mov
mov
movsl
and
leave
pop
jmp
push
xchg
fnstsw
test
mov
aam
scas
push
jns
pop
pop
call
fldl
sub
test
jl
sbb
xor
sbb
dec
dec
ficoms
push
pop
pop
sbb
sub
lea
jge
adc
cld
les
or
cwtl
sarl
stos
mov
ljmp
loop
or
sbb
and
addr16
dec
lods
jnp
mov
jb
test
jge
cmp
jno
ret
xchg
xor
mov
or
jmp
jo
xor
and
cmp
shll
and
xor
jb
mov
pop
and
inc
pop
scas
mov
push
or
xor
sbb
iret
xor
mov
xor
test
push
mov
arpl
pusha
pop
pushf
cmp
out
dec
leave
jge
nopl
jmp
movsb
cs
add
xor
mov
add
and
xchg
and
icebp
imul
mov
pop
push
xor
repz
xor
jae
andl
dec
outsl
mov
inc
in
pop
mov
pusha
inc
push
pop
test
mov
xchg
or
inc
popl
mov
pop
in
mov
pusha
jg
clc
push
ja
cmp
inc
or
sub
stos
jbe
mov
dec
xchg
test
sarl
mov
and
mov
out
cmpsl
cmp
jb
adc
push
sub
xor
jo
cs
xor
mov
sahf
sub
outsb
ffree
repz
mov
test
cmp
or
repnz
je
clc
scas
aaa
pop
scas
enter
mov
and
or
dec
inc
cmp
insb
jo
imul
jge
xchg
lcall
mov
push
mov
dec
test
lea
or
pop
lods
mov
clc
dec
push
xchg
lret
jns
ss
pop
adc
aaa
nop
xor
mov
fs
and
xor
pop
imul
ss
sub
fsubrl
dec
pop
stos
mov
mov
rep
mov
mov
cmp
popf
mov
lret
and
lret
cmp
test
sbb
mov
mov
lock
mov
xor
icebp
jp
pop
in
int3
mov
lcall
jmp
push
push
cli
xchg
xorl
mov
sub
lret
ja
popa
and
icebp
push
pushf
inc
adc
fs
cmp
push
add
jg
out
mov
out
or
lret
aad
pop
and
popa
jo
stc
lret
xor
mov
ljmp
in
jp
jns
jbe
push
jge
push
mov
lret
xor
leave
movsl
mov
inc
add
mov
gs
test
testl
call
dec
dec
jnp
call
sbb
fidivs
sub
xor
stos
jg
dec
in
mov
daa
sbb
mov
test
jbe
andl
fistpll
xchg
mov
cmpsb
pushf
incl
or
rcrl
xlat
aaa
push
xor
xorb
inc
push
in
dec
xchg
mov
mov
ds
jbe
push
loop
test
pop
mov
test
je
lock
rcr
ret
rorl
xor
movsl
sub
jbe
push
ja
mov
xor
dec
jge
adcb
stos
stos
pop
divb
cmp
mov
pop
aam
lahf
aam
adc
int
mov
incl
push
loop
jl
xchg
xchg
scas
les
dec
inc
icebp
fistps
cltd
rclb
aad
jecxz
mov
scas
rolb
repz
pusha
mov
lcall
loope
ds
sbb
xchg
xchg
sub
inc
xchg
and
imul
neg
outsb
ficoms
pop
and
or
aaa
jg
mov
fs
jmp
add
data16
jg
mov
xor
lcall
ret
dec
push
adc
mov
adc
dec
fmuls
pushf
inc
outsb
imul
mov
imul
jl
mov
rol
dec
fnstcw
cwtl
or
dec
je
mov
test
sub
sbb
or
mov
lea
rclb
loopne
and
lret
mov
push
pop
pushl
cld
arpl
jnp
jl
xchg
mov
movsb
push
push
inc
sub
sbb
shr
mov
or
push
sbb
mov
cmp
push
xor
cli
test
aam
inc
decl
outsb
movsb
test
cld
or
lret
insl
mov
and
xchg
xchg
sub
push
cmp
fsubr
dec
ret
subl
jg
dec
push
rorl
dec
orb
test
ret
icebp
sahf
js
or
das
outsl
cmp
dec
gs
and
ficomps
out
sbb
lahf
loop
push
lea
popf
js
test
outsb
push
inc
adc
sub
daa
mov
pop
xor
aaa
mov
sbb
cmp
rcrb
ret
scas
je
xlat
adc
stos
pop
mov
push
pop
push
pop
inc
repz
shr
dec
call
xchg
or
adc
inc
andl
fdivl
and
inc
movsb
xchg
mov
mov
push
jb
cmc
dec
aam
testb
add
mov
pop
pop
push
add
cwtl
js
mov
fcompl
push
jmp
mov
jl
fwait
mov
fstl
lahf
addr16
pop
mov
lcall
xor
jg
inc
add
jle
shl
testb
sbb
js
ret
cmp
cmp
in
add
add
ljmp
pop
daa
mov
xchg
movsl
lahf
mov
add
sti
mov
lret
push
mov
pop
mov
dec
imul
sbbl
test
movsl
aad
ret
je
cmp
push
xchg
adc
fidivl
scas
lahf
in
mov
out
or
icebp
mov
pop
movsl
scas
lret
daa
mov
sti
ljmp
fwait
add
adc
dec
mov
lock
jns,pn
decb
push
iret
or
testb
add
fildl
jnp
add
inc
aam
fcompl
out
icebp
orl
cmp
xor
insb
dec
dec
stos
push
or
mov
out
jo
cmpsb
test
dec
inc
pop
insb
push
cmp
xor
push
and
adc
xchg
aas
js
sbb
test
leave
push
into
dec
mov
fiaddl
jmp
cmpb
sahf
rcll
push
pushf
mov
pusha
fucomi
inc
popf
fldenv
mov
lcall
and
and
add
into
mov
addr16
mov
lahf
lahf
mov
inc
fnstcw
xor
pop
and
cmp
lret
sbb
mov
xchg
popf
push
pop
pop
sahf
inc
adc
mov
mov
jno
mov
push
xchg
aas
dec
push
sbb
cmp
lds
rorl
in
inc
pop
movsb
add
push
push
decl
lds
test
push
or
push
lahf
adc
pop
mov
mov
and
int3
cmp
jp
stc
dec
pop
shll
push
mov
in
popf
jg
sbb
inc
xchg
test
adcl
int
shlb
push
pop
push
mov
cmp
push
scas
xor
mov
xor
std
fcmovnu
inc
mov
fldenv
adc
idivl
nop
xchg
sub
mov
dec
mov
ds
movl
ret
mov
sar
jns
out
sti
int
std
cmp
subb
movsb
aaa
jb
fnsave
cs
pop
ljmp
inc
int
gs
xchg
mov
mov
mov
fbld
mov
insb
daa
xor
and
push
f2xm1
sub
xchg
popf
enter
inc
out
outsb
aas
pop
add
stos
mov
subb
dec
mov
or
jle
fwait
inc
and
adcb
inc
add
dec
xadd
stos
popa
jg
shll
or
cli
clc
arpl
pop
mov
xchg
and
call
add
and
pop
mov
pushf
push
adc
adcl
fdivl
jo
mov
in
xor
aam
cmpsl
fmul
cmpsb
test
jle
cmp
jmp
mov
fiaddl
mov
pushl
pop
xor
push
add
dec
mov
pop
inc
xor
shrb
push
xor
std
loope
int3
or
pop
test
sub
in
inc
mov
shll
inc
adc
jmp
jb
ficoml
ljmp
subb
shrl
mov
sub
fisubl
es
mov
das
icebp
scas
sbbl
sahf
fs
pop
ds
or
out
lds
adc
pop
mov
test
clc
inc
adc
jne
jb
dec
ds
out
ss
sub
stos
inc
incb
inc
mov
pop
push
cmpsb
loop
fidivl
scas
icebp
push
push
cmp
les
movsl
jmp
insb
add
cld
mov
xchg
rcrb
es
or
push
mov
mov
ss
xor
jg
lahf
push
aaa
and
mov
or
scas
xor
dec
aam
les
cs
andb
pop
push
mov
jmp
push
adc
push
push
in
push
cmp
mov
lcall
mov
cmp
bound
xchg
cmp
in
lock
xchg
adc
push
xchg
loope
inc
cld
and
pop
fists
sub
lds
dec
mov
adc
pop
imul
push
mov
xor
fmul
xor
push
sub
popf
imul
mov
add
mov
rolb
addr16
shll
inc
in
ljmp
mov
jmp
movsb
loop
sbb
mov
scas
lret
cmp
adc
mov
cmp
call
in
mov
adc
mov
xor
in
push
cltd
mov
mov
or
mov
lds
testb
cmpsb
mov
ficompl
movsb
pop
mov
push
add
jae
add
cli
inc
lret
xchg
inc
out
add
or
call
jle
cmpsl
rolb
xor
pop
jne
pop
les
out
mov
or
fdivrp
sti
aad
dec
push
cli
jno
jge
add
cmp
sub
aas
iretw
push
dec
cmp
ss
xor
cmp
icebp
pop
cli
add
add
push
int
dec
shl
adc
adc
out
inc
aam
shlb
inc
push
ds
mov
es
mov
loop
ficoms
das
das
enter
push
arpl
hlt
pop
push
mov
sub
icebp
cmpsb
pop
test
jb
aas
test
fs
push
sbb
test
adc
notl
mov
std
ljmp
inc
pop
add
pop
pop
and
das
adc
dec
stos
mov
mov
mov
aaa
inc
testb
add
dec
jae
inc
lcall
add
fldt
pop
subb
push
repnz
pop
loopne
jbe
pop
nop
xchg
or
inc
xchg
jnp
push
sub
sub
jp
xor
push
movsb
lcall
pop
pushf
push
jle
push
pop
mov
push
aam
add
sub
adc
lret
mov
ss
sahf
adc
cmp
and
xor
add
jl
repz
inc
scas
and
pop
sarl
pop
mov
cmpsb
scas
cmp
shrl
xlat
mov
sbb
fldenv
mov
add
jge
in
jo
or
mov
sti
and
in
sbb
xchg
leave
lods
ja
pop
lods
sar
les
xchg
cltd
or
xor
sub
sti
aaa
jp
add
push
popf
in
imul
lods
jge
xlat
mov
sub
adc
sbb
xchg
mov
add
dec
pop
pop
fldl
imul
mov
cmovno
mov
jns
sbb
pop
mov
and
sbb
scas
xlat
jne
icebp
adc
xchg
out
xchg
push
mov
shrl
icebp
mov
and
jae
adc
mov
imul
movsb
sti
in
int3
fdiv
cmc
cmp
and
notl
popa
sbb
call
or
and
into
lods
icebp
dec
cmpsb
test
popf
arpl
mov
jo
nop
and
mov
jno
test
push
push
fdivrp
push
xor
dec
jmp
xor
sub
inc
push
jg
mov
cmp
dec
daa
xor
mov
aam
hlt
cltd
pop
cmp
scas
clc
and
fisubl
ret
lahf
pop
inc
jle
les
sbb
push
push
jmp
call
ja
lods
lcall
xchg
cmpsl
push
sub
jge
and
aaa
mov
and
outsb
push
sarl
outsl
jl
data16
sbb
rcl
or
aad
mov
xor
mov
add
xchg
cmp
in
sub
lret
inc
fildl
cmp
push
and
mov
insb
mov
inc
and
cld
mov
sbbl
sbb
mov
shll
jns
sbb
jo
pop
call
aas
scas
ds
out
stos
or
jno
dec
aad
ficoms
pop
outsb
call
jns
push
jns
jae
or
xor
mulb
xorl
xchg
jl
arpl
js
addr16
test
lcall
add
sub
adc
popa
jnp
adc
lcall
shll
or
xchg
mov
popa
and
cmpsl
jb
js,pn
cmp
divb
clc
mov
cs
mov
out
sahf
xchg
xlat
sbb
dec
jle
scas
dec
nop
mov
mov
popa
sub
test
adc
popf
jae
jle
push
dec
cli
loop
sub
mov
xor
shl
aaa
mov
mov
insl
sbb
pop
mov
adc
xchg
jge
fwait
inc
cld
ret
ljmp
xor
cltd
in
sub
loop
in
adc
ret
add
sub
xchg
xchg
cltd
jbe
jge
mov
mov
stos
ja,pt
ljmp
jecxz
push
loope
stos
xchg
subb
jp
sub
sbb
aaa
adc
or
cmpsb
push
das
rclb
dec
jp
insl
clc
fistl
sub
lcall
movsb
inc
arpl
out
push
add
jmp
jle
mov
fiaddl
xor
fwait
cmp
mov
cmpsb
je
and
push
cmp
jg
inc
pop
push
outsl
popa
mov
ljmp
lea
cmp
push
mov
dec
adc
into
jp
aad
cmp
pop
fstps
dec
jl
mov
pop
andb
and
mov
push
mov
mov
and
push
sbb
adc
push
lahf
push
lcall
push
lret
roll
movsb
mov
aas
imul
or
mov
cld
push
divb
push
popf
xor
xchg
lock
cltd
popa
test
ja
sub
jmp
data16
dec
dec
stos
cmpsl
sbbl
out
inc
bound
dec
add
mov
mov
arpl
pushf
or
gs
loop
adc
mov
cltd
test
and
push
inc
stc
sub
cmc
xor
movsb
leave
jmp
fidivs
es
fistps
xchg
adc
fwait
ss
cs
enter
inc
aam
je
pop
cld
mov
cmpsl
sub
pop
insl
test
jg
xchg
stc
mov
out
fimuls
cmpsl
pop
push
xchg
mov
fidivrl
stos
arpl
fdivr
jne
popf
scas
jbe
int3
pusha
push
push
sbb
push
shl
mov
stos
cmp
mov
arpl
xor
movsb
int
cwtl
out
mov
rclb
js
shll
pushf
or
int
rol
mov
out
jle
xorl
pushf
lds
insb
in
mov
divl
pop
outsl
jae
xor
push
push
pop
xor
and
mov
push
inc
jmp
int3
fsubrl
dec
inc
pop
mov
ret
in
mov
fidivl
mov
adc
rcll
pop
mov
push
jg
loop
sub
push
sub
jnp
inc
js
and
and
add
push
loopne
cmc
add
bound
mov
adc
mov
dec
jae
and
xchg
adc
sbb
lret
incb
sub
ror
sbb
adc
cmp
push
lods
frstor
popa
es
push
pop
push
imul
int
adc
enter
or
push
std
adc
fwait
cmp
cmpsl
mov
jge
inc
jae
inc
arpl
insb
and
and
lds
pop
add
pusha
xchg
mov
push
es
and
push
cmp
out
mov
lahf
cs
repz
push
mov
test
push
add
popf
into
xlat
cs
adc
pop
int3
or
cwtl
and
and
push
lahf
xchg
dec
xor
jae
popa
in
adc
fisttpl
in
cs
mov
cmp
sti
ret
jmp
fisubrl
dec
push
out
std
sub
jnp
enter
add
mov
leave
lahf
jns
dec
inc
jge
popf
mov
sbb
push
jmp
cmpsb
inc
lea
fsts
push
xor
gs
pop
test
in
and
aam
xor
inc
or
mov
inc
pop
rcl
pop
vmulss
cmp
adc
out
mov
pushf
and
xlat
ret
cmp
or
jl,pt
add
adc
xchg
xchg
out
outsb
popf
clc
mov
je
nop
jns
sahf
push
mov
stc
add
push
pop
jne
js
fsts
cli
jp
sbb
xlat
jecxz
cmp
fdivr
or
sub
mov
scas
and
call
and
xlat
es
or
lock
mov
push
fstpl
pop
xor
cmp
daa
sub
ret
cs
jae
mov
lret
xlat
lcall
pop
insb
sub
fldcw
adc
ds
fnstenv
cmp
cmpb
ja
jb
sbb
divl
jl
sar
add
gs
std
jmp
cmp
cs
jge
jno,pt
call
stos
adc
ljmp
scas
sbb
pop
jae
mov
fcmovbe
les
fcoml
mov
testl
xchg
mov
inc
mov
jne
dec
sbb
mov
cld
xchg
frstor
in
leave
xchg
rcrb
out
dec
fwait
insl
rorl
pop
xor
cmpsb
ret
xor
jnp
pusha
cmp
ss
sbb
mov
adc
insl
push
shl
sbb
inc
shl
xchg
repnz
cmp
adc
inc
jne
imul
mov
mov
lods
sarb
pop
pop
addps
inc
sub
sar
sub
push
scas
jg
bnd
int
fbstp
xlat
lds
sbb
fisubl
sbb
ja
std
adc
daa
adc
mov
shl
and
rolb
cmp
mov
insb
jo
pushf
icebp
xchg
shll
dec
push
and
imul
mov
into
test
sbb
mov
or
push
mov
fnstcw
je
mov
sahf
pop
or
lock
gs
cmp
sbb
push
jmp
leave
cmp
fsts
shlb
or
adc
mov
out
pop
push
or
idivb
in
lods
or
int
out
xorb
push
xchg
cmc
mov
mov
mov
fiadds
mov
ja
data16
fidivs
push
rcrb
adc
ss
sahf
je
movsb
mov
xor
sbb
push
fs
lcall
pushf
xchg
inc
stos
in
in
xor
sub
xor
mov
mov
or
or
movsl
fwait
mov
pop
cmc
jg
push
push
iret
pop
ja
ja
psllq
sub
push
and
addr16
in
cmp
test
sahf
fcoms
notb
fs
push
lcall
mov
jl
dec
clc
mov
sub
fidivl
add
test
rcrl
adc
jmp
iret
shld
pop
iret
sub
jbe
rcrl
xor
in
divb
aam
inc
stos
out
retw
lret
and
jp
add
adcl
lahf
cmp
jp
sbb
mov
fdiv
sbb
shl
adc
ret
loope
test
das
arpl
xchg
ret
dec
pop
jns
jno
sub
mov
mov
enter
stos
sti
shll
imul
outsb
sub
pop
push
mov
mov
scas
cwtl
sub
mov
in
pop
or
mov
cmpsb
pop
or
test
movsb
pop
inc
push
imul
pushf
and
inc
lods
mov
cmp
fldl
shll
push
inc
mov
mov
movsb
sub
pop
adcl
push
mov
mov
mov
dec
aad
icebp
test
mov
push
jmp
mov
pop
mov
and
rorl
xchg
js
lods
mov
daa
and
xor
loopne
pop
or
scas
out
aad
and
pushf
pop
jns
mov
mov
pop
stos
clc
dec
jge
xchg
gs
loopne,pn
inc
and
in
je
lret
sub
jo
les
fiadds
mov
mov
mov
dec
fstps
add
popw
mov
iret
jge
fldlg2
sti
cmp
mov
rclb
fldenv
lods
in
pop
data16
and
loope
push
cmp
lret
scas
mov
test
insl
pop
fsubrl
add
rol
out
fcomps
sbb
pusha
sub
aaa
jmp
aam
std
cmp
jne
cmpl
insl
sub
xor
jns
xchg
mov
push
sbb
sbb
add
int3
inc
push
mov
mov
jb
sub
rcll
insb
and
imul
ret
cmp
fbld
add
and
jl
cmpsl
adc
fwait
pop
add
bound
cmc
repz
mov
insb
fcoms
pop
lock
or
xchg
rcrb
mov
test
in
loopne
fildll
push
jb
enter
aam
jmp
xchg
mov
xchg
inc
js
into
frstor
insb
sbb
lret
roll
mov
xchg
or
mov
mov
scas
data16
lahf
mov
aam
lds
push
sahf
sahf
jne
loope
test
mov
mov
and
dec
mov
mov
jae
cmpsl
cs
sbb
pop
jb
aad
ss
dec
adc
push
mov
xchg
addr16
jno
xchg
repz
jmp
mov
push
jecxz
cmp
imul
jnp
pushf
inc
pmulhuw
dec
push
mov
in
pop
xchg
jle
bound
sub
mov
mov
hlt
into
test
ds
inc
ljmp
or
test
les
lods
aad
pop
push
call
push
cmp
push
outsl
xlat
and
imulb
mov
cli
sti
jnp
xchg
fstpl
cmpb
cmp
fsubl
pop
les
add
mov
int
xor
xchg
dec
adc
and
lret
pop
and
xor
jnp
repnz
pop
jmp
mov
or
popf
out
xchg
out
sub
push
or
cld
mov
fimuls
fadds
je
push
aad
adcb
sbb
arpl
sbb
aam
out
sbb
shr
fwait
push
pop
pop
jl
push
cmp
lds
int
inc
out
lret
and
xchg
fstpt
clc
jle
or
aam
inc
or
sub
stos
pop
cmp
insl
mov
mov
xchg
inc
mov
data16
pop
mov
int3
push
xchg
xor
jle
cmp
shl
fwait
cld
sub
and
call
shrb
or
sub
add
addr16
adcl
stc
repz
popf
adc
dec
xor
pop
dec
pop
das
bound
std
ss
pop
cmp
nop
scas
movsb
insl
test
pop
sti
xchg
bound
cs
ror
xchg
int
jno
sub
adc
popf
sub
dec
jp
dec
mov
mov
jg
stos
push
cmp
pop
xchg
dec
jge
stos
jno
dec
pushf
xor
jne
or
push
adc
in
sbb
jmp
dec
pop
sub
sti
jns
scas
jbe
push
push
push
dec
push
icebp
xor
bound
mov
mov
push
fmuls
jbe
jne
scas
adc
lock
loop
push
in
dec
cmp
dec
outsl
sub
test
push
fsubrs
lret
and
xchg
pop
sub
inc
test
inc
scas
lcall
loop
push
pop
cld
sbb
aaa
out
xor
fwait
jb
cmp
sbbb
xchg
or
xchg
repnz
xor
push
mov
push
hlt
arpl
int3
rcrl
xchg
push
push
dec
sbb
or
stos
jge
pop
mov
arpl
jge
out
sub
insl
ds
add
mov
inc
shl
enter
test
push
out
adc
stos
mov
shll
add
dec
test
in
adc
pop
hlt
ds
ja
dec
add
pop
xchg
mov
loope
and
add
jb
sbb
inc
and
lea
fildll
ret
sub
fnstsw
jge
or
sti
push
pushf
xor
mov
push
mov
fs
lods
inc
push
not
mov
adc
popf
imul
data16
mov
orl
aad
sub
jp
repz
mov
jmp
mov
flds
in
mov
pushf
jbe
out
es
dec
add
xor
push
cmpsb
sub
leave
inc
int
dec
sub
or
adc
test
mov
dec
test
js
ss
jge
xchg
sbb
jae
dec
mov
dec
leave
push
pushf
lahf
jne
cmovo
shl
mov
push
je
cmpsb
outsb
out
jge
clc
push
lods
test
and
rcll
cwtl
mov
bound
imul
cmp
jns
push
fisubrs
ss
or
hlt
pop
outsb
xor
dec
sbb
dec
add
jnp
and
dec
push
test
cli
pop
popf
into
jb
cmp
ds
icebp
stos
xchg
xor
jbe
push
jmp
lahf
scas
adc
xchg
xchg
rolb
or
scas
pop
in
mov
fs
sbb
adc
jo
push
pop
mov
sub
mov
mov
jle
nop
test
outsl
xchg
add
lods
cmpsb
sbb
pop
mov
sbb
jnp
jg
pop
ficomps
add
mov
fwait
jmp
fnstenv
dec
push
inc
out
mov
cmp
stc
ret
imul
cmpsl
outsl
stos
jmp
stos
xchg
out
add
je
mov
or
dec
out
out
push
loop
lahf
cmp
inc
sub
cmp
cmpsl
dec
or
or
mov
test
add
pop
test
clc
ljmp
xor
rep
jbe
cmp
add
es
loope
lcall
jnp
xor
pop
push
lea
jae
xchg
movswl
das
pushf
mov
cs
movsb
std
rclb
js
mov
dec
or
lock
sahf
call
out
add
in
pop
xor
sub
adc
mov
arpl
pop
jns
in
cwtl
js
cld
stos
ja
rcrl
imul
lods
jecxz
sahf
push
daa
jg
cmpsb
or
cld
das
pop
adc
test
sahf
mov
std
adc
mov
cmp
mov
and
popl
mov
push
dec
pusha
pop
out
stos
adc
jge
inc
ja
xchg
fcmove
scas
ja
fistl
scas
subl
stos
cld
fstpt
rcll
pop
and
shll
mov
es
jb
push
lret
loop
les
adcb
sub
icebp
mov
xlat
mov
ret
or
jecxz
stos
or
jp
movsl
add
cmp
fwait
inc
rcr
add
in
js
xor
xchg
mov
out
gs
cmp
xchg
inc
sub
out
and
lods
mov
outsl
and
pop
lret
add
xchg
popf
fidivrl
bound
fcoml
dec
pop
leave
add
sub
pusha
push
pop
pop
sub
sub
add
inc
mov
pop
mov
ljmp
pop
sbb
or
lock
dec
jle
cmpsl
jg
nopl
into
push
mov
or
pop
inc
push
test
dec
test
xchg
cld
dec
addl
std
cmp
mov
nop
loopne
add
push
lock
jmp
sahf
lods
out
sbb
mov
stos
shlb
dec
ret
sbb
ss
insl
test
cmp
inc
pop
adc
inc
mov
jle
lods
adc
je
sbb
stos
clc
cld
jmp
out
mov
and
xor
inc
mov
icebp
xor
pop
scas
loop
pop
aad
std
xchg
push
pop
push
ret
lea
xor
jno
jno
xchg
mov
rcl
dec
push
jge
insl
sarb
shll
xlat
push
push
cmpsl
int
or
inc
test
inc
push
mov
mov
sub
mov
xchg
int
daa
in
aaa
sub
xor
popf
xor
dec
mov
mov
inc
sti
gs
outsb
adc
fbstp
fadd
xchg
pop
sbb
mov
lret
aad
movsb
ret
sti
and
jp
pop
jmp
mov
aaa
cld
xchg
xchg
out
pop
ljmp
stos
mov
mov
mov
cltd
out
add
adc
mov
xor
xchg
in
cmpl
and
pop
outsl
rol
mov
stos
dec
push
mov
jae
mov
sub
jle
sahf
sbb
jno
xchg
mov
int
divb
cmp
fwait
add
je
xor
xchg
fistl
out
clc
jge
cmp
loop
dec
sub
gs
cmpsb
mov
rcrb
mov
inc
and
sbb
cmp
fbstp
fcmovnu
xchg
pop
lret
adc
push
and
ror
scas
pop
push
mov
lret
pushf
enter
inc
aaa
jl
cld
or
fadd
movsb
ret
mov
aam
lock
ja
lcall
movsb
int3
push
addr16
push
stos
in
xor
pop
adc
or
in
icebp
sti
and
negb
test
adc
popf
or
xchg
sub
add
cld
pop
adc
cmpsl
mov
sar
mov
cmpsl
js
and
cld
push
xchg
and
loopne
jno
pop
cltd
cwtl
mov
arpl
pop
and
jp
jo
sub
mov
dec
mov
pop
or
mov
cmp
push
lds
fxch
pop
xchg
jb
imul
cmp
and
insb
push
fs
scas
xchg
imul
mov
sar
sti
addr16
add
addr16
arpl
mov
and
or
testb
cmc
sbbl
dec
ret
jmp
xchg
mov
and
cmpsb
js
mov
push
js
push
hlt
lock
add
loopne
dec
sub
fwait
inc
ds
add
pop
fdiv
sbb
inc
mov
ret
pop
fimuls
xchg
dec
dec
and
cmp
lods
add
scas
sub
int3
mov
pop
xchg
int3
push
sahf
and
jne
sahf
fld
mov
xor
lea
pop
sti
push
inc
add
aas
out
xor
pop
in
xchg
icebp
mov
cmp
jo
mov
and
pop
lock
aaa
and
mov
sbb
ds
popf
push
jmp
inc
rol
pop
pop
cmc
aam
lahf
insl
popf
aas
push
insb
adc
out
fwait
inc
pop
arpl
int
lods
dec
pop
dec
jnp
or
dec
inc
jns
cmp
orb
fiadds
repz
rcr
and
mov
push
imul
aaa
mov
lea
mov
fbstp
mov
out
insb
pop
call
add
push
add
sub
sub
jp
icebp
mul
sbb
cmc
xchg
ffreep
push
cmpsb
pop
fsubl
push
das
jb
inc
into
notl
mov
jl
sub
jmp
pop
mov
into
repz
push
push
gs
dec
mov
mov
scas
or
leave
lods
add
fs
sub
push
fdivrs
stos
cltd
cmp
inc
push
dec
enter
fmull
addr16
mov
mov
je
lods
and
dec
inc
or
movsl
and
mov
roll
cli
xchg
mov
cmpsb
xchg
mov
movsl
xchg
pusha
or
mov
adcb
je
in
jnp
loop
out
test
stos
sbb
shrl
xor
sbb
pop
pop
jb
mov
sbb
push
inc
js
mov
xchg
push
mov
xlat
mov
jo
mov
inc
dec
test
in
jmp
stos
jns
push
sarl
addr16
add
test
cmp
xchg
lds
dec
out
test
nop
dec
push
dec
push
push
scas
fldcw
xchg
inc
mov
mov
ljmp
loope
cmp
ret
iret
cmpsl
mov
inc
lods
jle
test
mulb
shlb
pop
xchg
std
and
sub
nop
stos
bound
sbb
addr16
lock
mov
cmpsb
xor
rcr
loopne
xchg
mov
push
dec
mov
dec
mov
out
xor
test
frstor
dec
dec
inc
pop
add
mov
aaa
mull
inc
lods
adc
pop
clc
lret
mov
jnp
scas
pop
or
jb
fstl
add
hlt
pxor
inc
aas
jmp
out
cs
adc
or
mov
sub
cmp
pop
add
xor
loop
int
mov
mov
mov
test
jo
pushf
mov
lret
cmp
jb
movsl
mov
js
lods
mov
sub
inc
mov
or
cs
fldenv
in
mov
adc
test
pop
lods
jbe
popa
and
call
and
or
add
dec
lock
xor
xchg
sub
test
jae
std
add
lar
scas
fbstp
sbb
adc
lea
fcoml
gs
or
jg
pop
in
fistl
in
xor
mov
lahf
sbb
das
cli
in
sbb
add
jle
rcrb
jns
push
call
in
aas
out
jbe
cmpsl
shll
fdivl
or
mov
scas
mov
js
pop
pop
mov
stos
scas
shl
dec
mov
push
mov
mov
in
sbb
cwtl
push
or
cmp
or
inc
mov
out
pusha
inc
jle
mov
lock
and
inc
pop
jae
ljmp
push
iret
jp
insl
xor
lahf
mov
fdivl
gs
mov
jbe
add
in
push
mov
mov
add
dec
sbb
add
pop
hlt
lods
dec
loope
jmp
test
outsb
imul
mov
xchg
pop
cld
cli
dec
xor
sub
xchg
pop
sar
fwait
push
rcrb
sar
inc
xchg
add
pushf
and
cmp
add
inc
cmp
push
sub
loope
cmp
in
jl
mov
aas
js
mov
call
lods
dec
mov
sbb
inc
and
sbb
lret
xor
sbb
out
ja
jecxz
inc
sbb
pop
add
ja
insb
inc
int
aad
jo
jle
and
in
in
jbe
or
bound
sti
mov
les
jne
xor
movsl
stos
mov
call
and
aaa
mov
lock
aam
mov
push
ret
mov
mov
out
outsl
ficomps
cld
mov
shrl
rcr
pop
popf
pop
cmc
lcall
lods
jnp
push
lods
add
scas
mov
mov
fdivrs
clc
mov
and
cmp
insl
fidivl
idivb
mov
test
out
jecxz
and
fs
pushf
push
inc
dec
bound
pop
cmp
xor
cmp
and
shl
outsb
dec
jecxz
xchg
cmpsl
mov
movsl
dec
xchg
pop
pop
rcrb
sub
dec
cwtl
push
jno
sub
or
sub
popf
cltd
shl
xor
pop
pop
inc
stc
hlt
stos
lcall
movl
pop
cltd
int3
sub
xor
xor
adc
push
xor
pop
mov
sbb
daa
fstl
in
or
xlat
mov
inc
sub
test
xor
lods
add
repnz
arpl
fwait
mov
ds
lea
mov
das
loopne
push
cli
sti
cwtl
sbb
mov
pop
sub
daa
xorb
sub
jp
jle
dec
xchg
lock
and
daa
inc
call
jg
pop
call
mov
test
cmpsb
jb
fwait
xchg
lahf
out
lds
dec
push
pop
inc
mov
shlb
es
imul
test
iret
sbb
ss
loope
push
mov
cmpsb
hlt
pop
jmp
adc
dec
in
repnz
add
movsb
cmpsb
add
sbb
push
mov
test
int3
aad
fdiv
jmp
pop
pop
xor
jl
or
je
lds
cmpsb
loop
addl
scas
add
jo
and
in
lcall
xchg
loop
std
push
dec
nop
xchg
lret
loop
jbe
and
xorb
enter
pop
push
shl
cmp
clc
xor
jbe
lods
mov
cmpsb
psraw
outsl
mov
fldcw
mov
xchg
push
aas
test
out
pop
repz
pop
sub
stc
and
mov
sub
ss
adcl
clc
lea
inc
jp
xor
add
es
dec
mov
or
mov
lea
lods
cmp
and
cs
lret
push
mov
rcrl
ret
push
fucomi
mov
test
cld
into
mov
jae
cmc
test
bound
ror
out
loope
jo
cmp
or
testl
mov
cs
aas
jbe
ds
pop
into
pop
inc
inc
test
lret
les
mov
lods
mov
test
or
sahf
sub
pop
in
in
in
or
cmp
add
mov
pop
fcoms
cmp
fs
mov
mov
out
jp
xchg
add
mov
jb
mov
xor
jp
int3
jecxz
arpl
dec
outsb
fnclex
pop
mov
mov
mov
je
sar
aas
mov
ret
insl
inc
in
mov
insl
push
or
hlt
lea
call
push
xor
ljmp
nop
test
aam
inc
lret
mov
imul
call
jg
repz
mov
and
xchg
lcall
ret
int
scas
frstor
mov
fstl
outsl
jnp
aad
fisttpll
test
push
hlt
ret
mov
add
pop
mov
sbb
aaa
leave
mov
adc
aaa
mov
add
adc
inc
in
push
shrb
xor
push
pop
xchg
repz
cmpsb
mov
xchg
out
mov
xchg
dec
sbb
pusha
and
aam
ffree
adc
arpl
add
je
adc
adc
ds
and
cmpsl
and
fimuls
in
dec
dec
lcall
cli
dec
or
daa
data16
sub
and
cwtl
xor
rcrb
std
addr16
or
add
jno
push
adc
shl
jg
xor
inc
adc
push
cmp
cli
cmp
cli
dec
pop
mov
mov
insl
xor
add
xor
popl
fwait
sub
sti
sub
xchg
jle
fimull
push
xlat
hlt
xor
xor
jne,pt
xor
sbb
inc
ret
les
adc
cwtl
js
movq
mov
shl
and
cwtl
push
test
pusha
pop
cmp
adc
inc
outsl
fadd
adc
adc
fwait
cmpsl
mov
jnp
stos
mov
xor
fs
clc
inc
and
addl
es
leave
out
or
push
inc
ret
cmp
stos
xor
outsb
mov
dec
addps
inc
inc
jg
xlat
sub
xchg
xchg
pop
test
gs
fwait
push
cmc
push
or
jns
test
shlb
push
or
and
cmp
inc
pop
and
push
mov
stc
lcall
mov
test
movsl
pop
and
cmp
leave
cmpsb
or
mov
and
std
pop
jae
mov
pop
xor
mov
call
shrl
adc
es
inc
xchg
test
jbe
mov
cmp
xchg
or
inc
pop
mov
cmp
cld
add
pop
jnp
jge
mov
adc
inc
stos
movsb
in
ret
in
repnz
pop
xchg
pop
test
test
xchg
sbb
and
je
out
adc
push
jns
jns
xchg
stc
xchg
pop
std
jp
lret
sbb
sbb
pop
mov
movsb
inc
mov
cwtl
sub
outsl
xchg
adc
negl
jg
mov
mov
sti
jns
fwait
enter
mov
dec
in
lock
sub
sahf
dec
lcall
stos
fs
mov
aam
cmp
loope
rorb
hlt
sahf
inc
push
pop
or
sub
orl
jmp
sub
incl
dec
hlt
mov
fnsave
mov
add
sub
int3
lock
cmp
add
ds
lret
adc
mov
jb
movsl
scas
or
lea
mov
xor
std
mov
sub
cld
cmpsl
out
xor
ficompl
mov
dec
out
std
aam
fistpl
mov
test
jmp
add
stos
pop
lret
clc
aam
cltd
lods
jno
mov
decb
sub
push
pop
push
out
lds
adc
sub
xlat
ret
test
jae
bound
push
rcrb
loope
xlat
popf
sarb
nop
inc
sub
jg
fadd
pop
popl
dec
mov
cwtl
imul
sbb
add
pop
icebp
movsb
pushf
mov
cmpb
inc
ret
mov
sbb
mov
inc
jno
sub
xchg
sub
dec
pusha
and
lret
stos
sbb
lods
in
cmp
pushf
mov
andl
outsl
cmp
pop
icebp
es
mov
xchg
pop
jle
mov
xchg
ficomps
jbe
pop
xor
js
out
sub
gs
cmp
pop
xor
aas
sarb
or
cwtl
loop
gs
cmp
out
pop
jl
jns
sbb
fs
cmpsb
rcll
add
or
bound
stos
pop
inc
popa
daa
mov
xor
mov
mov
adc
xchg
stos
insl
shr
inc
cmp
pop
push
inc
in
rorb
ds
and
mov
pop
leave
rclb
aad
test
adc
push
sbb
sub
negl
xor
nop
pop
inc
or
adc
test
cvtpi2ps
dec
add
mov
jb
mul
imul
inc
out
cmc
mov
xchg
js
dec
push
jne
out
push
rcll
movsl
jbe
push
adc
stos
stos
mov
inc
or
in
pop
dec
movsb
and
dec
addr16
imul
das
addr16
mov
sti
xchg
or
cltd
ljmp
and
dec
or
rolb
test
cwtl
movsl
fstl
pop
xor
lret
dec
sbb
jb
xor
imul
test
fsub
xchg
pop
dec
mov
or
out
jae
pop
mov
and
shll
mov
jecxz
sti
jg
data16
or
cmp
lret
mov
mov
dec
inc
hlt
sbb
jne
sbb
cmp
mov
and
jno
cwtl
mov
andb
sbbl
stos
sarl
leave
mov
sarb
add
pop
lahf
cltd
mov
addr16
pop
stos
xor
adc
test
les
push
xchg
repz
dec
cmp
fstpl
pop
xchg
outsl
sbb
pop
ret
push
mov
jge
aad
cwtl
orb
div
lock
ds
jne
jg
dec
pop
fbstp
adc
cmp
and
xor
fiadds
push
and
push
dec
in
scas
inc
cs
jnp
repz
dec
mov
cmp
xchg
cmpsl
push
adc
jecxz
dec
inc
adc
test
cmp
pushf
in
incb
out
xor
sub
xor
ljmp
inc
sbb
ud2
push
cmpsb
cld
arpl
cld
pop
mov
imul
jmp
xchg
stos
push
cmpsl
xchg
inc
jecxz
jecxz
popf
jbe
cvttps2pi
stos
cmc
xor
jae
lcall
lret
mov
mov
mov
inc
in
push
fcomp
insl
add
test
and
push
and
das
pop
call
int
adc
pop
adc
dec
mov
fwait
cmp
xorl
xchg
mov
int
adc
push
adc
dec
push
scas
cmc
mov
loope
pop
add
or
movb
hlt
loop
jmp
test
add
data16
popa
push
adc
cwtl
fsubp
xchg
inc
cmpl
rcrb
cmpsb
ss
lret
fcompl
xor
dec
xchg
imul
nop
push
adc
cld
add
cmp
mull
stc
jecxz
and
out
xor
fisttps
cmp
lcall
outsb
jl
sub
pop
mov
dec
negb
sub
stos
mov
mov
xchg
jno
xchg
data16
or
nop
sbb
mov
hlt
call
je
lea
add
mov
pop
ror
add
testb
stc
stc
xchg
sarb
xor
test
mov
mov
adc
es
push
jmp
mov
sbb
xchg
repnz
ret
pop
cli
repz
sbb
mov
stc
fwait
mov
aas
cmpsb
jmp
pop
lods
xlat
dec
icebp
push
dec
xor
lahf
mov
mov
mov
push
sub
into
and
stc
jae
jle
notb
sbb
stos
sbb
call
mov
sbb
mov
inc
insb
test
jecxz
sub
xlat
push
imul
mov
clc
cmp
adc
lods
xor
or
jge
push
sbb
stos
jbe
iret
push
call
push
cmp
ljmp
lret
fwait
cwtl
fs
jbe
push
lds
inc
xor
and
jmp
xchg
push
fimull
push
dec
popf
aam
int
pop
mov
xchg
inc
pop
push
cmc
lcall
mov
mov
pushf
xchg
in
stos
xchg
xor
sub
inc
mov
fldl
shl
and
add
dec
lods
xchg
fisubrl
xlat
jbe
out
stos
push
cmp
testl
repnz
loope
popf
sub
aam
add
lret
notl
movsb
add
xor
jb
mov
jg
xor
testb
or
xorb
sbb
lcall
neg
jo
fs
cmp
imul
lcall
add
add
scas
subl
cmp
mov
and
dec
imul
jp
or
inc
das
fadd
dec
out
inc
pop
pop
popa
daa
push
in
pop
enter
clc
fcompl
stc
dec
pop
push
mov
shrb
xor
inc
jns
js
pop
insb
in
xchg
push
xchg
leave
movsl
ja
jp
shlb
mov
subl
inc
test
fsubrl
pushf
push
movsl
adcb
or
mov
adc
xor
pop
xor
testl
and
sbb
inc
cmc
mov
fs
jg
rorb
or
mov
or
nop
addl
ds
mov
test
sti
std
sbb
test
or
jnp
test
jae
mov
adc
lret
cld
pushf
xchg
out
rorl
out
sub
aad
aas
fwait
pushl
add
sub
mov
pop
dec
aas
push
sub
in
aaa
push
or
rcl
outsb
inc
mov
aaa
pop
scas
leave
xchg
xor
adc
jnp
inc
popf
lea
stc
inc
cmc
pop
or
imul
xor
imul
or
shll
or
loope
arpl
dec
sub
jmp
dec
mov
push
les
pop
outsb
js
bound
ret
mov
jg
test
out
adc
ret
testb
and
clc
cmp
inc
cltd
lcall
cmc
xor
xor
je
sbb
xchg
insl
pop
subl
scas
incl
jo
filds
xchg
xchg
sub
adc
stos
testb
cld
scas
mov
push
adc
and
aad
fs
push
jno
dec
fwait
xchg
push
mov
jg
test
test
call
dec
cmc
arpl
sub
cmp
xchg
test
in
jp
test
and
sbb
movb
add
jnp
roll
push
xor
dec
stos
addr16
rolb
daa
jmp
fisubrs
das
enter
mov
jno
xor
mov
pop
pusha
das
test
out
inc
adcl
dec
mov
call
int3
adc
xchg
jb
dec
mov
nop
jo
dec
cmp
pop
std
cli
repz
cmp
add
insl
fwait
mov
mov
mov
sti
outsb
fsubl
sbb
ret
mov
jl
add
pop
je
add
push
dec
jle
data16
xchg
mov
movsb
push
std
aad
je
out
shlb
lret
sub
pop
movl
fbstp
push
sbb
sub
jae
arpl
lds
xchg
int
adc
push
and
addr16
xchg
lret
jl
imul
mov
xchg
movsb
jbe
dec
cmp
lahf
adc
jno
js
loopne
inc
movsl
cld
sbb
test
push
lds
cmp
xchg
sarb
adc
push
pop
cmpsl
dec
xor
fcompl
loopne
nop
loopne
ds
jb
mov
pop
scas
es
or
icebp
gs
xchg
xor
loopne
push
adc
jmp
pop
mov
fsubl
gs
and
add
xchg
sti
xlat
leave
shl
mov
sbb
mov
jecxz
push
iret
movsl
sub
cli
sbb
push
mov
movsl
scas
andl
lahf
mov
rcrl
xor
jnp
and
outsl
xchg
sub
inc
loop
insb
lcall
cmp
fadds
mov
sti
mov
sbb
das
push
ret
mov
push
int3
sub
insl
jecxz
mov
aas
movsb
and
outsl
cmp
rcrl
push
cli
aas
shl
dec
test
aam
repz
sbb
loope
leave
jl
mov
ja
fiadds
sarl
movsb
mov
mov
cmpsb
sahf
sub
push
cli
mov
sbbl
shll
je
xchg
pop
cli
ja
adc
jp
hlt
add
and
pop
sahf
in
push
push
in
pusha
mov
andb
lea
jae
mov
call
xor
fnstcw
stos
jle
pusha
adc
jno
loope
jecxz
hlt
and
adc
aam
dec
pop
in
xchg
or
inc
daa
adc
imul
pop
or
push
dec
mov
aaa
or
imul
movsb
sbb
jecxz
or
scas
mov
lret
shrb
xor
mov
lahf
je
ret
std
add
es
fucomp
mov
mov
sbb
in
aaa
sub
mov
add
cwtl
repnz
inc
js
stc
cltd
add
mov
adc
cmp
push
lods
sub
sbb
dec
or
test
pop
lcall
cltd
mov
pop
lods
xor
je
lods
pop
dec
mov
aas
jae
andb
mov
mov
clc
test
daa
ret
push
push
mov
pop
arpl
dec
sbb
xor
shll
inc
push
ret
xchg
and
outsl
push
movsl
cmp
aas
push
ljmp
popf
fs
in
in
shrl
cs
cmpsl
fisttpl
roll
mov
stos
sarl
xor
mov
fcmovu
inc
xchg
lock
int
mov
pop
inc
lds
pushf
jmp
sub
ja
mulb
dec
imul
push
dec
jno
push
stos
push
cld
aas
ljmp
add
std
xor
or
dec
test
pushf
jge
and
mov
push
push
or
ss
or
dec
mull
or
jecxz
ss
xchg
fcompl
cmpl
push
icebp
mov
add
mov
dec
lret
xor
push
ja
pushf
rcrb
ss
dec
sar
stos
mov
pusha
adc
dec
add
flds
xchg
jmp
jmp
jb
shll
shll
jne
cmp
out
and
pop
dec
negl
jo
adc
jb
andl
push
call
mov
mov
xor
loopne
ljmp
mov
mov
stc
jbe
mov
mov
fs
xor
dec
and
add
popa
rolb
push
push
test
sbb
jbe
mov
movsb
aam
movsl
movsb
addr16
dec
fdiv
repz
mov
mov
cmp
mov
roll
lcall
test
out
aaa
popa
sbb
pushf
aam
adc
hlt
out
pushf
push
sbb
mov
mov
loope
add
jae
add
lea
cli
jmp
inc
sbb
sti
decb
notb
cmp
jge
mov
xchg
test
outsb
pop
imul
cmp
adc
pop
sahf
xlat
pop
lea
adc
jecxz
xchg
dec
into
or
sti
push
test
sbb
popa
jp
jl
add
xchg
js
xor
rcrl
inc
aaa
adc
icebp
push
jp
rolb
lods
xor
fisttpll
jge
pushf
adc
addl
inc
movsb
cmp
inc
popa
sub
lret
std
sbb
mov
das
out
sub
pop
push
jnp
cmp
xor
xchg
test
and
or
or
dec
ds
dec
or
and
pop
add
and
shrl
outsl
rolb
ja
jmp
inc
js
push
xor
push
xchg
xor
dec
addb
movl
insb
out
fwait
dec
xor
mov
mov
popa
cltd
rorb
and
mov
xchg
mov
aas
adc
mov
dec
dec
mov
pop
sahf
lcall
mov
dec
mov
rorl
loop
mov
xchg
loop
sub
pushl
addr16
fsubp
out
mov
sbb
mov
sub
mov
xchg
push
ret
cmp
adc
push
aaa
dec
shrl
add
call
icebp
pop
xlat
xor
push
fsts
push
mov
and
js
shll
xor
mov
cwtl
inc
lods
icebp
or
outsb
jecxz
int3
pop
mov
mov
sbb
pop
stos
sbb
cmp
fbstp
pop
cmp
sbb
xor
push
aas
jnp
clc
add
mov
jns
jecxz
mov
ds
push
mov
fisubrs
js
xor
hlt
popa
jne
xchg
jnp
fcompl
cmp
arpl
fimull
stos
pop
shr
fisubrl
std
mov
xchg
sbb
test
lahf
les
lock
movsb
ds
or
sbb
dec
stos
mov
cmp
mov
and
mov
es
stos
or
test
ja
loop
in
dec
movsb
cltd
pusha
loopne
push
out
mov
cs
sub
lcall
sub
shlb
and
xchg
pusha
in
scas
pop
fld
lods
fiadds
xor
push
fstpl
aas
jg
out
sub
jge
arpl
adc
adc
jno
aas
mov
enter
mov
or
jbe
cmpsl
movsb
fistpl
addl
xorl
adc
sub
xchg
test
out
in
push
lahf
mov
in
cmpsl
xchg
cs
arpl
js
fnstcw
mov
fadd
stos
fbstp
fwait
mov
fistps
push
test
xor
js
ja
xchg
and
pop
adc
pop
xchg
mov
push
jno
repz
pushf
addb
aam
cmp
mov
xchg
mov
gs
mov
jns
xchg
fisubrs
in
aaa
fdivrs
xchg
ljmp
push
sbb
dec
add
inc
xchg
pushf
movsl
notl
fistl
rol
hlt
bnd
jmp
pop
inc
push
enter
iret
outsb
pop
adc
or
cmp
mov
jg
cs
xchg
notl
fsin
inc
gs
cmp
daa
pop
push
xor
cmp
scas
inc
pop
push
js
leave
clc
mov
push
stos
ds
xchg
xchg
and
jb
lods
sbb
pop
mov
adc
insb
inc
mov
cmp
dec
enter
mov
jl
orl
mov
sti
jns
jge
bound
lea
push
push
pop
or
hlt
pop
dec
test
fs
into
movsl
idivb
pop
imul
inc
out
mov
cmp
push
sbb
adc
sub
mov
adc
jo
aaa
movsl
mov
cmpb
xchg
loope
test
mov
addr16
mov
in
xchg
and
jge
adc
lret
inc
xor
rsqrtps
lret
in
pop
or
mov
push
push
and
sbbb
dec
ja
sbb
mov
pop
sbb
xchg
inc
fs
mov
and
lahf
xchg
in
push
mov
mov
or
fs
push
mov
ja
fidivrs
cmp
out
mov
xor
xchg
xchg
orb
or
push
xor
sar
movsb
lods
mov
pop
aad
jne
dec
jae
adc
lahf
arpl
shlb
mov
mov
adc
lods
pop
and
sbb
loop
out
push
mov
or
xchg
aad
popf
and
cmp
adc
ss
fldl
mov
pop
jl
mov
orl
pop
outsl
pushf
or
adc
out
cs
push
or
or
daa
sub
shll
loop
hlt
test
rclb
mov
mov
inc
dec
inc
jle
enter
incb
in
outsb
push
inc
dec
sbb
out
imul
cmpsb
mov
adcl
mov
icebp
adc
aam
xchg
scas
mov
sbb
int
inc
add
xchg
daa
js
shll
push
enter
and
adc
or
or
or
mov
dec
ljmp
idiv
roll
sbb
sub
outsl
nop
pcmpeqb
mov
jbe
mov
outsb
in
into
mov
add
das
cmpsb
jge
jbe
aas
dec
sti
popf
cmp
loop
lds
push
mov
sbb
adc
fldl
lahf
pop
cs
mov
imul
or
test
jb
incl
mov
xchg
pop
icebp
mov
jmp
out
outsb
xchg
xor
add
adc
std
aam
fs
cld
aad
lret
mov
imul
jbe
mov
out
push
and
packsswb
dec
mov
scas
xchg
imul
stos
mov
mov
cld
in
out
les
ret
dec
fndisi(8087
repnz
out
int3
jo
inc
jns
jns
mov
aas
sub
jnp
pop
push
mov
nop
xchg
pop
push
sbb
mov
mov
push
add
icebp
cli
ficoml
jp
and
in
ficompl
les
andl
jb
inc
or
xor
bound
xor
jge
push
mov
ret
add
in
mov
inc
stos
mov
aaa
xchg
adcb
pushf
popf
xor
xorl
jg
repnz
imul
clc
aam
lahf
pop
mov
jecxz
lods
das
cmp
clc
jle
sbb
xorl
and
sahf
jb
sbb
sbb
pop
aam
cmp
pop
out
sbbb
push
xchg
cmp
xor
sub
dec
cmp
cmp
xchg
mov
jae
inc
mov
push
loope
sar
mov
icebp
inc
mov
inc
inc
jnp,pt
fcoms
mov
xor
inc
push
frstor
mov
adc
insl
enter
fcmove
jne
insl
lahf
mov
aad
dec
es
jno
mov
mov
lcall
fsubrp
dec
stc
xlat
lea
adc
jge
leave
pop
push
and
xchg
outsl
xchg
sti
push
mov
xor
filds
shl
out
out
loope
dec
add
inc
repz
and
mov
outsb
sahf
push
mov
push
push
or
mov
cmp
rorl
test
aad
cmp
scas
rorb
push
sahf
fxch
daa
xlat
loope
sub
jp
xchg
jl
pop
jns
jmp
std
pusha
xor
int
or
mov
arpl
add
mov
scas
xchg
enter
xchg
cltd
sarl
fdivr
mov
add
push
and
xor
dec
pop
int3
adc
jg
adc
rol
fiaddl
out
scas
pop
insb
fists
stos
imul
cmp
les
bound
mov
testb
cli
movsl
les
mov
aaa
jl
frstor
mov
aas
js
xor
mov
es
pop
jb
shrb
and
push
mov
inc
pop
out
mov
fucom
inc
es
cltd
imul
lret
jno
scas
int3
xor
mov
jg
mov
mov
xchg
sbb
cmpsb
std
cwtl
xchg
sahf
mov
popw
push
jle
sbb
fwait
push
shlb
fdiv
and
pop
mov
jnp
pop
mov
xor
xchg
clc
stos
mov
stc
add
test
push
mov
push
std
mov
pop
jg
cmpsl
insb
hlt
jge
gs
ficoml
aam
test
cli
xor
pusha
mov
add
pop
out
adc
rcr
outsl
inc
xor
xor
and
leave
dec
gs
xchg
pop
enter
xlat
cwtl
dec
push
xchg
cmpb
dec
cmp
jle
test
pop
add
xchg
pushf
xchg
xor
stos
fimull
pop
inc
loopne
pusha
sahf
subb
das
test
ljmp
xlat
jge
jg
pop
call
xor
test
dec
cmpsb
stos
pop
jnp
jne
sbb
sub
test
cmp
sub
repz
pop
sahf
and
cs
out
jle
sbb
vandnps
mov
sub
xor
stos
lcall
push
push
adc
cmp
lret
mov
loope
dec
aas
imul
adc
mov
push
rcll
sub
push
subb
pop
jg
int
sbb
sub
scas
stos
inc
outsl
sbb
ds
dec
jl
add
ljmp
cmp
out
xor
loope
or
sbb
ja
call
add
stos
cmpsb
loop
aaa
mov
sbb
movsb
in
inc
stos
inc
mov
jno
and
fucomi
enter
xor
mov
fstps
lods
jb
sbb
pop
loope
pop
nop
lods
sbb
loopne
pop
mov
adc
js
pusha
dec
pop
mov
int
xchg
ljmp
dec
loope
addr16
and
aam
xchg
mov
aas
xor
adc
or
adc
aas
inc
and
and
mov
fisubl
or
mov
cmp
jo
pop
push
xlat
aaa
sbb
dec
fcompl
out
popa
or
mov
xchg
mov
testb
popa
inc
aaa
or
inc
je
sahf
inc
jno
fs
lahf
ret
pop
out
fnstenv
stc
call
adc
sbbl
das
xchg
inc
gs
sub
imul
stos
and
mov
in
rcll
out
cltd
xchg
mov
fldl
inc
shll
fcmovbe
or
adc
mov
adc
and
push
xchg
inc
nop
mov
mov
or
mov
xor
bound
cltd
sbb
lcall
dec
push
cwtl
xchg
adc
jle
out
push
xor
repz
sahf
jge
test
inc
fs
rorb
xchg
fiadds
bound
je
cs
adc
cmc
shl
pusha
pop
cmpsl
loope
movsl
sbb
int
or
arpl
cwtl
in
push
xchg
and
adcl
xchg
cmpsb
xor
popf
test
enter
aam
aas
mov
xchg
xor
jne
in
pushf
mov
movsb
in
jp
jp
cld
pusha
sub
pop
int
outsb
xor
xor
or
mov
shr
mov
adc
adc
push
ja
enter
sbb
data16
repz
jecxz
pop
scas
ljmp
pop
shrl
rcrl
sub
stos
xchg
outsb
dec
fidivl
in
xor
leave
inc
call
popf
loopne
ret
cli
xor
repnz
push
ficompl
jno
test
les
repnz
sbb
hlt
in
movsl
out
adc
xlat
cld
cmp
sub
mov
jne
pop
push
pop
fisttps
jae
mov
push
clc
ja
inc
pop
out
dec
into
cld
aad
add
shl
ss
xorl
cmp
mov
adc
ret
inc
cwtl
xchg
int3
fcoml
call
jno
fisubrl
stos
icebp
mov
pop
sbb
or
pop
jo
mov
lahf
fstpt
imul
pop
in
mov
pop
jb
test
sbb
xchg
lods
jmp
cmp
in
pop
push
retw
adc
lods
jns
adcb
xor
sbb
xchg
data16
sti
sbb
add
dec
dec
xchg
sbb
daa
sbb
lods
adc
or
dec
movsb
rclb
iret
xor
push
jp,pt
xor
sahf
xchg
inc
repz
mov
pop
add
int3
sub
sub
fwait
jmp
pop
je
imul
outsb
inc
mov
jne
shrl
stos
xacquire
das
sbb
mov
or
loope
mov
lock
js
sbb
sbb
dec
push
mov
lds
data16
mov
jbe
cmp
xchg
enter
push
mull
jb
shrb
mov
or
stos
xlat
push
fbld
int
out
mov
call
sbb
lea
inc
outsb
or
stc
mov
sbbb
les
cmp
xchg
pop
jg
enter
js
lock
enter
cmp
mov
push
push
imul
frstor
out
add
sub
jg
jbe
insb
in
jb
pop
jnp
sub
hlt
xor
test
dec
dec
cltd
or
sbb
mov
cmp
cmpsb
pop
push
in
arpl
mov
lods
sbb
pop
sbb
adc
pop
sbb
sub
cmp
dec
or
mov
fwait
add
mov
cwtl
lcall
aaa
pop
sbb
fwait
xchg
pop
jle
lods
insb
mov
aad
adc
mov
xor
xchg
jg
scas
cmp
jecxz
cli
mov
pop
jl
movsb
movsb
mov
or
xchg
or
int
es
imul
repz
lcall
sbb
popf
fwait
pusha
jg
scas
jl
push
lret
inc
fildll
nop
not
xlat
lods
inc
fmull
dec
std
cmpsb
mov
test
mov
xorl
test
adc
sub
inc
outsb
push
mov
mov
ljmp
notb
inc
aad
popf
out
adc
sub
jae
xor
enter
sub
testl
mov
jmp
in
and
pop
das
xor
adc
les
push
jp
add
mov
sbbb
mov
scas
push
fsubrl
cmp
mov
lret
outsb
call
imul
adc
aaa
jp
fstl
sub
incl
add
scas
and
ret
bound
enter
dec
push
jp
pop
lret
cmp
xchg
fiadds
or
and
adc
or
out
push
jno
mov
mov
cli
int
imull
cs
std
nop
call
out
xchg
in
jecxz
xchg
mov
lods
movsb
rcl
or
ret
or
sbb
shll
cld
pusha
mov
jb
frstor
push
fsubrl
imul
sbb
inc
imul
pop
mov
push
int3
es
orb
push
xor
jb
ret
cmp
ds
xlat
jle
je
out
filds
inc
pop
inc
push
jae
imul
adc
in
test
adc
fldcw
xchg
xchg
or
addr16
test
mov
pop
out
cmp
out
pop
pop
mov
dec
orb
cmp
sbb
mov
iret
lock
jmp
push
stos
mov
sbb
push
jmp
mov
dec
mov
add
insl
cmp
mov
lds
icebp
cmp
adc
jle
lods
test
addl
out
popa
aaa
aad
bound
test
rcrl
jecxz
loope
cmpsl
cltd
jge
les
aad
add
addr16
pop
xor
imul
jne
loopne
mov
pop
and
jbe
xchg
pop
aad
add
sbb
inc
xor
les
cli
jg
std
xchg
out
fsubr
cmc
mov
adc
jne
inc
daa
sub
test
adc
xchg
shr
mov
add
inc
xor
cmp
cmpsb
and
and
enter
adc
add
pop
int3
into
sbb
sti
iret
add
jno
mov
shll
add
notb
ja
mov
clc
repnz
hlt
adc
adc
push
fildll
popf
test
push
outsl
xlat
xchg
ds
enter
aam
in
cmp
xor
jae
dec
fisubrs
and
xchg
inc
jle
sbb
cmpsl
xor
loope
or
icebp
popa
es
pushf
lock
cmpl
push
out
dec
aas
movl
sub
and
je
mov
jno
pop
repnz
jecxz
push
xor
dec
pop
mov
fnsave
xchg
jno
sub
jo
sbb
push
mov
insb
out
push
push
pop
movsb
dec
pop
adc
adcl
rorb
inc
movsl
cld
and
jecxz
fisttpl
jne
and
and
push
jae
pop
testl
stc
mov
jne
cmp
popf
cmp
push
popf
or
cwtl
and
addr16
jns
xchg
mov
in
inc
into
ficoms
xchg
shlb
or
inc
and
ds
mov
pop
mov
mulb
repz
xor
mov
adc
sahf
jmp
jns
jge
cmp
mov
pushf
xor
rolb
jb
jl
test
fiaddl
sbb
mov
scas
xchg
adc
or
and
push
call
sub
shl
ja
or
pop
mov
les
icebp
in
sub
xorl
add
jecxz
loop
pop
fstpl
jae
inc
adc
cli
cmpsb
mov
lahf
pop
mov
xorl
mov
cmp
lea
ficoms
icebp
aas
inc
je
sbb
xchg
jecxz
mov
adc
aam
lock
mov
dec
loopne
mov
shrb
xchg
clc
scas
and
js
mov
and
mov
pop
test
add
cwtl
mov
dec
inc
pop
xchg
xchg
bound
xor
jecxz
mov
add
lahf
add
jl
push
jbe
pop
sub
mov
fldln2
mov
outsl
add
arpl
insl
mov
mov
cs
cld
or
scas
addb
adc
pop
jbe
dec
pushf
scas
dec
mov
pop
repz
pop
flds
loope
pop
xlat
enter
mov
dec
add
incb
leave
mov
xchg
mov
in
dec
dec
shlb
hlt
shrl
test
mov
push
xchg
loope
xor
sti
jne
pushf
cmp
data16
xchg
das
addl
inc
sahf
add
pop
jp
jecxz
test
xchg
sarb
push
fisttpll
repnz
push
int3
xor
outsl
gs
jo
stos
pop
adc
js
push
enter
xchg
jb
repnz
mov
rclb
and
dec
inc
cmp
dec
ret
push
aad
imul
push
mov
call
mov
xchg
pop
insl
addb
and
jmp
inc
fldl
sub
cwtd
sbb
or
stc
push
pop
jo
movsl
add
popf
nop
fucomip
push
xchg
int3
pop
xchg
mov
pop
outsl
ret
nop
mov
ss
in
lret
mov
jle
jns
scas
cltd
jnp
insl
mov
or
add
mov
shll
push
test
das
daa
leave
push
rcrl
adc
jnp
cmp
ret
push
mov
xchg
or
dec
cmp
dec
cmpsb
movsb
mov
add
xchg
mov
dec
or
jg
test
popa
mov
cmp
ja
xor
and
sub
filds
repnz
mov
sarb
pop
out
sahf
cli
add
jl
sarl
ljmp
fisttpl
lcall
mov
test
arpl
ret
cmp
fisttpl
sub
inc
stos
sarl
pop
mov
mov
sub
pop
loope
aaa
adc
jecxz
les
lret
jno
pop
testl
jno
divb
dec
mov
push
int3
adc
sub
sbb
int
jle
add
enter
testb
in
test
pop
pminsw
adc
into
adcb
pushf
out
imul
xchg
push
out
sbbb
xchg
pop
mov
sti
push
daa
aam
mov
cmp
shr
push
lahf
xlat
fdivp
dec
push
and
cwtd
movsl
xchg
push
out
sub
fs
and
pop
mov
inc
cmp
pop
dec
addl
int
mov
dec
jno
sub
lahf
xchg
in
xchg
inc
sbb
out
loope
insb
pop
scas
add
cmp
jae
cltd
lahf
or
and
jmp
or
stc
jns
daa
call
jns
rcl
xor
ret
pop
and
into
mov
inc
into
imul
mov
xlat
inc
xchg
fistps
repz
scas
fldl2t
mov
paddsb
popl
push
in
mov
sub
and
mov
jecxz
mov
or
xchg
inc
cmp
cli
mov
insb
pop
xchg
or
hlt
mov
push
add
movsl
sahf
data16
iret
mov
inc
mov
jecxz
inc
mov
pushf
out
jno
mov
jle
sbb
or
mov
stos
mov
jg
jno
mov
pop
mov
daa
inc
lahf
xor
add
adc
movl
mov
cmp
stos
imul
scas
loope
ret
xchg
popa
and
pop
imul
push
gs
add
pop
int3
outsl
xchg
cmp
add
in
lret
push
push
pop
or
jnp
cmpb
mul
xor
and
mov
mov
lret
out
inc
aas
adc
arpl
test
adc
bound
insl
dec
adcb
es
bound
imul
or
sbb
aad
mov
fnstcw
insl
shll
mov
shlb
mov
ds
call
mov
roll
test
cmp
fnsave
mov
push
js
mov
mov
std
je
add
inc
push
aam
pop
cmpsl
addr16
data16
jno
repz
and
pop
invd
mov
stc
es
call
sbb
add
jle,pt
push
cmp
cmp
mov
std
mov
movsb
in
icebp
fistps
das
addr16
jmp
lahf
inc
sub
outsb
not
cmpsl
fcoms
jb
es
ret
pop
pop
clc
cmp
aas
sbb
insb
daa
mov
mov
stos
insl
inc
pop
mov
push
imull
inc
cmp
or
scas
leave
xchg
lret
pusha
imul
mov
sbb
shl
fadd
addr16
sbb
test
sub
lret
pop
cli
fstps
sahf
sbb
or
mov
mov
jle
push
jmp
push
push
jmp
jl
lret
sbb
pop
adc
imul
into
push
xor
cmpsl
lods
stc
jmp
adc
mov
dec
rcll
push
xor
loopne
scas
test
push
fbstp
mov
inc
les
mov
xchg
cmp
je
rcrl
fs
clc
fidivl
test
add
scas
outsl
cmpsl
sti
mov
repz
in
push
xchg
pop
ja
push
imulb
mov
add
dec
stc
loopne
cmp
movsb
xchg
mov
je
inc
ds
in
jecxz
scas
xor
xchg
push
mov
cmp
push
frndint
popa
popf
jns
push
or
neg
out
fidivrl
mov
divl
popa
mov
mov
jmp
inc
pop
pop
aas
sbb
sub
jae
fistl
pop
arpl
and
shrd
insb
cld
imul
xor
dec
inc
loopne
cmc
dec
call
rcrb
mov
dec
and
mov
push
mov
cli
jl
jbe
std
lods
sub
mov
push
mov
pop
fmull
lods
mov
fs
rol
sbb
xor
xchg
xor
sbbl
or
outsb
xchg
mov
sub
decl
sarl
adc
fstpt
lds
popf
inc
movsl
mov
popl
mov
pop
mov
testb
jbe
xlat
sbbb
push
imul
cmp
xlat
iret
mov
and
mov
push
push
mov
push
sbb
xchg
mov
dec
sbb
insl
arpl
test
jae
push
rcl
dec
jns
rcrl
fidivrs
mov
jno
loopne
xor
mov
mull
fwait
out
out
mov
or
mov
cli
es
nop
push
pusha
jge
and
mov
inc
movsl
es
dec
imul
fldcw
loop
pop
stos
aam
mov
mov
adc
add
dec
addr16
pop
and
push
test
jnp
pop
dec
xchg
xor
shl
inc
sbb
mov
push
cmp
scas
mov
mov
in
xor
mov
xlat
movsb
xchg
cmpsl
adc
enter
mov
aaa
notl
push
lret
cmp
sarb
bound
mov
cld
xorl
and
mov
repnz
push
mul
push
jno
mov
mov
in
out
repnz
mov
roll
shrl
and
sar
push
rcrl
lods
ret
call
mov
mov
mov
pop
dec
adc
insb
dec
out
mov
lret
in
dec
or
test
sub
add
add
scas
cmp
or
scas
mov
fnstcw
adc
push
mov
pop
rclb
insl
add
adc
int
xor
repnz
sahf
pop
sbb
inc
fst
jmp
cmp
and
arpl
movsb
jns
adc
xor
or
sbb
bound
sarb
jge
scas
jmp
arpl
aaa
add
and
test
insl
pop
mov
js
jp
mov
push
xchg
int
and
clc
adc
sbb
sbb
jb
jbe
sbbl
aaa
and
adc
mov
mov
or
and
cld
movsb
test
dec
mov
aaa
sahf
and
mov
inc
invd
aam
test
scas
clc
jp
loop
hlt
sbb
xor
or
lret
sub
jbe
pop
adc
xchg
jge
stc
test
dec
jecxz
out
std
jns
fdivr
dec
cwtl
jno
ljmp
icebp
lret
mov
bound
inc
cwtl
jecxz
dec
shrb
xchg
xor
dec
enter
and
fsubr
sahf
hlt
push
aad
inc
stc
xor
sbb
movsl
adc
jae
out
mov
aam
inc
pushf
adc
fs
inc
int
repnz
ljmp
or
scas
and
sub
outsl
lods
sub
shlb
sti
sbb
adc
std
jmp
dec
jae
lock
mov
iret
test
push
pop
lods
stos
mov
insb
sbb
fldenv
xchg
xchg
aad
sbb
mov
mov
dec
dec
or
in
insl
inc
and
pop
mov
push
pop
pop
lret
xor
push
pusha
loopne
lea
mov
in
add
and
call
dec
fisttpl
jg
std
mov
mov
xor
mov
mov
aam
add
jb
xchg
inc
jmp
mov
mov
fbstp
aam
loopne
push
sub
xchg
xor
adc
mov
sahf
add
sub
inc
sahf
stos
popf
lea
add
mov
pop
inc
outsb
mov
cmpsb
stos
aas
std
repnz
xor
dec
mov
imul
bound
std
divb
aas
in
loope
jmp
cmp
xchg
in
ret
jmp
lret
stos
mov
jbe
shll
or
dec
sti
bound
mov
jnp
xlat
in
sub
adc
mov
repnz
xlat
popf
jns
xchg
and
cmc
mov
push
inc
dec
mov
fimuls
push
test
inc
jecxz
movsl
dec
pop
dec
rclb
cmp
jg
jecxz
pop
mov
test
ss
pushf
adc
cmpsb
pop
test
lcall
fisubrl
mov
imul
sbb
mov
imul
aaa
fstps
mov
xchg
pop
sub
push
xor
lret
jno
jl
adc
mov
cmp
and
in
int3
dec
jecxz
adc
xchg
mov
scas
jg
sub
mov
test
mov
pop
insb
adc
and
xchg
shll
cmp
pop
mov
mov
mov
loope
fwait
jnp
test
dec
push
sarb
mov
add
adc
add
aaa
pop
repnz
mov
adc
cmp
sbb
popa
mov
adc
and
pop
daa
mov
mov
sub
iret
sbb
xchg
clc
lds
sbb
xor
xchg
movsb
fdivrs
cltd
or
lret
push
stos
fistpll
outsl
jb
push
out
outsb
movsb
fdivrp
lcall
dec
xchg
data16
mov
and
xchg
inc
inc
inc
pop
mov
in
cs
mov
fldenv
sti
out
call
cmp
sbb
sbb
movsb
cmp
pop
xchg
jp
pop
popf
mov
cmp
sub
xor
cli
js
add
imul
cmp
xchg
test
mov
add
pop
sarl
xchg
fwait
hlt
dec
adcl
xchg
jge
sbb
pop
sbb
loopne
mov
and
scas
add
test
inc
daa
sahf
std
cmp
xorb
sub
push
xchg
int3
insl
mov
pusha
mov
lods
jb
mov
cs
repnz
xchg
clc
cmovp
call
andb
int3
movsb
adc
lcall
pop
repnz
and
mov
mov
es
xchg
add
fsts
aaa
sbb
inc
jecxz
push
aad
in
and
sahf
lcall
push
in
or
jge
push
sahf
cltd
ss
pop
sub
pop
lods
pop
fbstp
cmp
and
frstor
testl
mov
xor
out
dec
shr
js
and
mov
mov
mov
ljmp
jecxz
inc
fs
jle
mov
repz
mov
rcl
dec
jnp
sahf
in
mov
and
in
hlt
or
mov
sahf
push
pop
mov
je
testl
fsts
imul
push
mov
push
xor
clc
stos
lods
cmpsl
xchg
add
mov
repnz
adc
adc
insb
mov
fwait
test
sti
mov
add
or
sub
fsts
rep
lea
xchg
xor
lds
and
hlt
hlt
outsb
sbb
and
das
mov
notb
cmp
cmp
subb
push
mov
push
fstps
call
les
inc
dec
pop
jg
mov
aam
hlt
mov
cltd
testb
xchg
push
imul
lods
jo
sti
cmp
inc
out
jecxz
in
adc
inc
pushf
test
sub
fldenv
repz
fsubl
xchg
scas
cld
push
xlat
scas
stc
call
ljmp
mov
insl
aas
adc
adc
popf
push
movsl
ret
rorl
orl
popa
or
cld
nop
lods
gs
mov
adc
test
wbinvd
cmp
pop
push
mov
jmp
dec
loopne,pn
iret
aad
rcll
sub
mov
mov
add
lahf
adcl
fidivrl
punpcklbw
xor
mov
and
sub
adc
mov
nop
mov
jnp
das
cmp
pop
pushf
mov
inc
loope
arpl
mov
sti
inc
test
xor
xchg
insl
dec
push
lahf
popf
push
jmp
xchg
shlb
repnz
js
cmp
mov
jo
dec
and
loopne
cmp
cld
ret
add
test
ja
xchg
sub
jmp
mov
and
jb
in
push
clc
lret
xchg
mov
mov
cmp
pop
or
repz
mov
gs
xor
outsb
add
or
ret
mov
repz
mov
add
push
jle
jno
imul
adc
shl
pop
jle
or
ficoml
aad
fidivrl
adc
int3
sbb
cs
sub
or
sub
out
int
pop
cmp
inc
mov
sbb
aas
test
mov
dec
aam
xchg
es
or
mov
push
xchg
std
loope
daa
jmp
mov
mov
cmp
mov
rclb
mov
jge
jmp
jnp
cmp
jge
popa
sub
std
mov
inc
or
adc
cmpsl
jl
mov
lds
outsl
out
xchg
push
cltd
nop
fld
jp
lcall
or
adc
dec
xchg
fldl
and
fdivs
mov
add
pop
out
xchg
inc
xchg
lods
xor
int3
cmp
mov
jmp
pop
mov
pop
lret
pop
push
jb
es
mov
push
push
pop
xchg
push
jge
or
inc
jns
js
adc
jne
imul
sub
push
mov
push
jne
inc
or
xchg
ficomps
fnsave
push
pop
mov
jno
xchg
dec
cmc
add
inc
pop
call
mov
inc
sti
es
mov
inc
ds
mov
es
adc
flds
push
fstps
push
and
xor
mov
push
int3
outsb
sbb
out
test
insb
xor
adc
test
ja
and
mov
insl
faddl
or
mov
jbe
xchg
mov
jge
popa
shr
mov
xchg
js
or
or
hlt
pop
ret
lods
mov
jmp
pop
push
popa
fs
fcoml
pushf
add
fwait
aas
xchg
aaa
dec
push
xor
push
mov
stos
pop
call
cmpsb
push
sub
or
mov
dec
xchg
pop
daa
imul
stc
in
adc
push
xchg
js
cmc
add
imul
bound
scas
add
test
xchg
out
or
std
sub
and
jmp
push
mov
xor
scas
ror
mov
inc
leave
jmp
mov
and
mov
stos
mov
push
xor
aas
cmpsl
loop
lea
jno
jg
adc
sbb
mov
xchg
je
sub
adc
nop
mov
stos
cltd
jle
sti
std
add
jo
mov
pop
mov
sub
shl
insb
movsb
mov
imul
cmp
test
push
dec
js
idivb
jb
adc
mov
pop
ss
repz
pop
rcrb
shrb
cmp
loope
jb
dec
mov
mov
mov
mov
test
ss
and
into
ja
fadds
imul
out
inc
pop
adc
lods
mov
and
popf
mov
sub
or
mov
lea
outsl
jne
clc
out
arpl
aas
int3
mov
cmpsb
add
out
das
pop
lock
repnz
and
cld
in
jae
add
loope
or
adc
or
push
stos
push
aaa
scas
nop
in
dec
into
mov
testb
mov
jne
or
lods
cli
add
das
inc
fbld
jo
and
fdivrl
andl
movsb
loopne
cltd
adc
xor
repnz
mov
in
cmp
lea
add
daa
mov
mov
cmpsb
xchg
shrl
or
adc
or
jg
dec
lea
mov
ficomps
pop
sbb
dec
mov
pop
xchg
lds
lock
or
ret
fldenv
leave
sbb
test
sub
xchg
push
add
xor
inc
cwtl
test
push
loop
push
sbb
pushl
imul
mov
push
les
cmp
shrb
sbb
jne
mov
nop
push
cmpsl
out
lods
out
test
or
lock
ss
out
shrb
xor
and
cmpsb
icebp
fildl
js
insb
inc
push
add
cmp
mov
cmp
outsl
imul
cltd
into
mov
dec
add
sti
push
pushf
or
push
in
sub
inc
call
sbb
xchg
mov
xchg
mov
pop
stos
into
faddl
sbb
pop
fdivrl
pop
sti
cmp
nop
pop
jp
hlt
fsubs
loop
rorb
or
lea
push
xchg
ljmp
dec
push
out
shll
jns
testl
fdivl
fildll
divb
push
mov
out
jno
aas
pop
pop
cmp
inc
sub
add
and
pusha
xor
mov
pop
xchg
in
movl
inc
dec
push
test
or
stos
data16
imul
mov
dec
mov
xchg
insl
push
roll
dec
mov
add
cs
jmp
out
subl
call
adc
cmp
ljmp
nop
xchg
jno
clc
push
clc
xor
push
pop
gs
fld1
movsl
fdivrl
mov
icebp
jns
push
inc
cwtl
insl
cmpsb
or
mov
test
dec
add
nop
sbb
xchg
sarb
nop
mov
int
orl
nop
xchg
sub
lret
xor
in
jno
lahf
jno
lret
scas
outsl
push
adc
pop
push
mov
mov
sub
or
fs
mov
sti
jg
in
adc
movsl
pop
jl
pushf
add
and
jne
call
mov
add
mov
adc
mov
ljmp
xchg
or
or
push
cld
out
cmp
lret
cmp
lcall
shrb
cmp
lcall
stos
inc
pop
in
add
sbb
dec
mov
push
loopne
arpl
add
adc
leave
lcall
jne
mov
cltd
sbb
imul
add
sahf
pusha
xchg
fbstp
inc
lods
sbb
leave
mov
and
mov
adc
push
jp
aam
mov
ljmp
jecxz
inc
test
mov
sub
incl
gs
mov
pop
sarl
or
fs
jg
scas
sbb
mov
cmpsb
rclb
mov
ss
int
fbstp
ret
in
int3
das
enter
subl
xchg
sub
test
sub
mov
jecxz
or
adc
sbb
jns
push
lock
imul
clc
pop
fldcw
in
cmpsb
imul
sub
into
mov
jge
mov
or
sbb
pushf
test
jne
push
scas
out
jbe
and
stc
jb
or
xchg
fcom
mov
push
jnp
fistpll
insl
in
jl
ret
inc
jo
fwait
mov
pop
inc
test
stc
push
clc
addr16
insl
sbb
nop
mov
lea
adc
and
in
loop
add
fisttpl
mov
rclb
pop
shlb
js
adc
lds
mov
push
in
stos
jmp
into
loopne
xor
dec
pop
test
adc
mov
mov
js
mov
std
push
xchg
mov
pop
call
movsb
dec
push
lret
addr16
cmpsl
ljmp
loop
rorb
push
movsb
dec
sub
xchg
sarb
sbb
movsl
jle
repz
xchg
jne
je
nop
leave
lods
xchg
cmp
sub
fbld
mov
or
std
add
xchg
xor
mov
into
push
dec
fsubrl
movsl
leave
insb
imul
popa
ljmp
stos
jae
push
negb
push
cmp
daa
mov
add
enter
push
dec
popa
jno
cli
and
outsb
jp
mov
outsb
sbb
push
popf
sarb
push
adc
pop
mov
jbe
inc
pop
xor
xchg
sub
clc
out
enter
popl
cmc
std
jne
outsb
stos
in
mov
xor
cmpsl
jmp
in
stc
push
fimull
dec
je
outsl
mov
test
and
push
and
mov
scas
cmp
arpl
dec
jbe
jmp
adc
arpl
pop
imul
push
jmp
ja
mov
and
add
dec
in
dec
pop
in
jge
ljmp
icebp
sbb
xlat
mov
pop
pop
lcall
orb
inc
pop
push
not
mov
addl
outsl
xchg
xchg
jl
mov
pop
lret
hlt
call
outsb
mov
stc
or
in
dec
sbb
cwtl
nop
or
ds
dec
aam
xchg
add
je
mov
dec
aad
repz
dec
dec
rcl
dec
and
sar
sbb
cmp
mov
mov
in
filds
shll
pusha
sub
pop
sbb
mov
adc
shlb
add
insl
push
mov
xchg
jo
js
lds
in
add
loopne
sub
imul
pop
adc
xchg
adc
test
cmp
popa
mov
xchg
bound
and
pushf
subl
and
sbb
fidivs
imul
mov
ss
xchg
scas
or
out
push
fwait
mov
push
push
push
rcrl
mov
out
iret
jae
push
jo
stos
leave
sub
jmp
cmp
jle
xlat
popa
scas
jns
xchg
mov
inc
sbb
cmp
jns
xchg
ficompl
rcll
pop
adcl
inc
pop
test
sub
cmp
adc
xlat
test
js
enter
cmpsb
mov
leave
xchg
xchg
loop
inc
pop
ficomps
mov
std
div
shll
pushf
mov
mov
das
ss
push
movsb
stc
pop
mov
sub
cmp
repz
mov
lret
sti
dec
cmp
add
js
inc
out
stos
daa
and
std
jp
mov
dec
xchg
jns
xor
or
mov
inc
dec
call
decl
pop
pop
mov
imul
arpl
imul
addr16
mov
lods
outsb
lret
scas
add
xchg
out
sbbl
scas
clc
test
adc
into
push
mov
repz
outsb
add
shl
pop
test
xor
cmp
fsubrp
dec
repz
xchg
lret
mov
and
or
mov
cmp
mov
pop
push
insb
test
ss
hlt
sti
xor
clc
jp
int
and
loope
or
xchg
out
add
mov
gs
sub
bnd
pop
mov
es
add
bnd
sahf
and
scas
mov
popf
lock
mov
add
test
xchg
aam
clc
cs
ret
push
xor
out
enter
push
imul
mov
shlb
rcr
shl
jl
es
repnz
mov
fstp
iret
mov
pop
pop
add
or
mov
mov
jno
ljmp
mov
lret
dec
scas
leave
enter
xchg
jg
addr16
pusha
jmp
pop
dec
inc
imul
push
addr16
dec
mov
movsb
test
xor
jl
add
in
js
loop
mov
ret
jge
mov
mov
xor
loopne
dec
xor
popf
mov
add
inc
sti
add
dec
stc
in
mov
xor
sbb
stos
cmp
and
mov
mov
addr16
add
out
jbe
lock
std
mov
dec
xorb
neg
cmp
in
cltd
jp
rcr
arpl
xchg
popa
cmp
outsl
xchg
mov
out
mov
adc
mov
out
shr
test
stos
aam
outsb
dec
jmp
mov
ja
pop
jge
inc
popf
inc
dec
divb
lods
mov
aaa
adc
mov
sub
mov
xor
push
sahf
xor
cs
jmp
push
pop
outsl
mov
dec
pop
cli
add
stc
dec
mov
cld
cmpsl
loop
push
sub
adc
stos
rorl
cmp
mov
and
xchg
jge
or
push
pop
dec
cmp
icebp
push
in
mov
jg
mov
es
add
out
xchg
adc
ds
aas
cmp
ret
adc
pushf
xchg
xor
imul
sbb
or
sti
adc
adc
mov
mull
pop
push
pop
std
faddl
push
lret
cmp
push
stc
push
mov
xchg
mov
bound
cli
xchg
loop
ljmp
fsub
ss
push
sub
shll
outsl
xchg
mov
lock
cmp
push
bound
pop
sahf
mov
sbb
ljmp
enter
lock
mov
imul
push
fsts
pop
mov
cmp
je
cmp
mov
bound
mov
es
icebp
xor
jmp
cmp
and
js
scas
push
mov
mulb
and
hlt
cmp
or
aad
sub
mov
mov
mov
std
cmpsl
mov
scas
outsb
mov
and
and
xor
lcall
or
and
mov
adc
dec
shrl
cmp
push
into
mov
xor
mov
out
xchg
repz
fnstsw
jmp
daa
lods
mov
negb
adc
cltd
jg
stc
leave
mov
lahf
inc
imul
sbb
add
stos
jbe
jnp
push
imulb
mull
into
loope
je
sub
hlt
lahf
fsubrs
das
es
fiadds
dec
or
fmul
iret
and
inc
mov
jge
ret
aaa
ja
inc
and
loopne
ss
hlt
rcrl
push
movsl
fnstsw
push
les
add
push
cmp
fs
lods
inc
dec
cmp
cli
jle
cmpsb
pop
ret
fisttpl
cli
int3
jae
xor
stc
mov
stos
mov
mov
ljmp
jecxz
dec
loop
arpl
shrb
out
mov
sarb
mov
or
adc
adc
and
xchg
fsubrs
adc
mov
shrb
sub
pop
jb
orl
leave
cld
sbb
pushf
lea
or
pop
jecxz
mov
dec
rcrl
mov
xchg
xchg
test
rcll
lods
in
inc
leave
inc
jecxz
sbb
mov
sbb
call
test
ret
mov
sahf
cmp
pop
fsubrl
mov
mov
mov
or
jg
sbb
xchg
xor
test
lea
inc
sarl
ljmp
or
insl
pop
add
jnp
xchg
imul
aaa
dec
dec
cmc
pop
lret
xor
jle
cld
inc
pop
jg
je
lcall
cmp
hlt
bound
adc
pop
mov
jns
xor
adc
lahf
jl
xor
xor
test
sub
jl
push
jo
pop
jo
push
inc
push
in
shlb
fdivrl
pushf
dec
cli
cmpsl
leave
and
push
mov
mov
jns
daa
in
add
mov
in
pop
sbb
push
pop
in
pop
out
push
mov
push
push
iret
adc
jae
xchg
push
sbb
sbb
lock
aam
cmp
ss
les
mov
out
ljmp
xchg
jmp
aam
pop
daa
pop
mov
lret
leave
add
dec
sub
adc
jl
ret
addb
sub
dec
movsb
jle
dec
mov
push
popf
faddp
mov
outsl
popf
jge
push
xchg
fwait
pop
add
pop
sbb
mov
ljmp
push
int
dec
subl
pop
xor
xorl
repz
xor
pop
aaa
stos
sub
jecxz
push
xchg
inc
lea
and
dec
shlb
mov
test
pusha
mov
pop
jle
mov
shr
mov
lods
jns
loop
mov
enter
sub
repnz
imul
stc
pop
xor
aad
imul
mov
or
stos
jge
das
aaa
sub
mov
xchg
push
loope
mov
aaa
adc
js
xchg
int3
mov
scas
cmpsl
push
and
mov
mov
mov
scas
cmp
mov
inc
sub
sub
shll
mov
std
scas
mov
test
jp
imul
sbb
jecxz
in
mov
xor
shlb
push
pushf
xchg
pusha
iret
outsb
mov
xchg
jns
xchg
dec
mov
rcrl
stos
adc
mov
mov
ret
mov
dec
fnstcw
mov
dec
push
sbb
lahf
mov
push
adc
arpl
jle
int
mov
mov
sbb
stc
dec
mov
mov
jp
push
mov
cld
arpl
stos
andl
add
lea
jecxz
ficompl
test
sahf
mov
mov
into
jg
mov
nop
sub
lds
test
fs
add
std
jg
aas
and
jo
mov
insb
sbb
gs
and
daa
cmp
and
mov
cmpsb
cltd
jecxz
fistpll
dec
push
fiaddl
mov
xchg
mov
sbb
push
aas
dec
dec
flds
mov
or
xchg
imul
outsb
lahf
xchg
iret
aam
imul
insl
addr16
pop
mov
sarb
mov
jbe
nop
inc
fwait
repz
or
jge
insl
pop
pop
lock
divb
and
push
adc
inc
or
push
cs
add
xchg
movl
ret
aad
sbbb
orl
and
push
repz
dec
inc
mov
push
in
inc
mov
adc
sar
jecxz
clc
jno
loope
lds
mov
or
inc
xchg
loopne
test
push
lds
pusha
cli
push
cmp
push
xchg
mov
lock
sahf
sbb
orl
imul
lcall
int3
pop
aam
cmc
dec
stc
add
je
mov
repnz
scas
insl
inc
test
ret
lret
ret
jno
xlat
xchg
lahf
mov
xor
pop
out
mov
test
test
dec
or
sub
ficompl
mov
sbb
icebp
repnz
fdivs
stos
lcall
or
mov
pop
dec
out
and
repnz
and
mov
add
sbb
scas
fsub
mov
pop
sbb
int3
xchg
test
sub
add
xlat
aad
push
loope
adc
jp
cld
fistps
push
fs
pop
popf
ret
dec
pop
inc
mov
cmpsb
scas
shl
rolb
cmc
pop
pop
mov
xchg
das
mov
jo
add
ficoml
xchg
call
mov
lcall
in
aam
mov
push
lods
int3
inc
mov
mov
xchg
xor
jb
push
push
cmpsl
jecxz
inc
jns
lock
push
jmp
pusha
mov
lcall
mov
inc
ficoms
jne,pn
add
jnp
and
xchg
mov
pop
xor
adc
ss
add
jp
int
out
jno
pop
jo
and
daa
xchg
arpl
xchg
ud0
mov
imul
int3
mov
push
sbb
stos
jmp
jno
lock
add
xlat
mov
jnp
mov
pushf
in
mov
sbb
movsb
outsl
das
outsb
rorl
sbbl
mov
mov
mov
int
pop
mov
adc
inc
cmpsb
movsl
out
fstps
mov
rcl
add
leave
dec
jne
ja
outsb
addr16
xor
xor
pop
xchg
add
mov
call
xchg
test
add
add
out
pop
cmpsb
fs
cmc
inc
adc
data16
jno
pop
xchg
or
push
call
pop
lea
or
in
mov
cmp
in
xor
jp
arpl
icebp
inc
pushf
gs
rorb
xchg
push
jnp
les
push
jmp
loopne
cmp
pop
insb
add
jecxz
inc
hlt
mov
je
ds
xadd
pusha
add
pop
test
jge
insb
mov
sarl
xor
mov
inc
inc
in
mov
jnp
mov
stos
mov
add
scas
mov
int
cmp
dec
gs
jg
cmp
daa
loopne
in
mov
adc
inc
andb
mov
xchg
das
or
test
orb
mov
insl
mov
iret
mov
movsb
push
in
jmp
cmp
fdivrs
in
fmull
add
mov
add
xchg
in
push
aam
outsl
mov
xor
cwtl
loope
repz
xchg
aam
lahf
mov
adc
push
add
out
cwtl
mov
xchg
adc
xor
sub
mov
in
and
loopne
out
aaa
sub
push
pop
addl
adc
sub
sbb
adc
out
pop
out
scas
cmp
daa
sbb
dec
scas
lea
in
add
push
sar
imul
inc
pop
incb
test
xor
xor
mov
cmp
dec
shll
js
repz
aaa
xor
xlat
add
and
idivl
ficomps
in
mov
push
dec
add
inc
adc
inc
imull
adc
or
pop
fdivl
mov
mov
push
sbb
add
fiaddl
mov
adc
lock
xchg
mov
inc
sbb
dec
cmp
not
ljmp
mov
mov
sub
into
repnz
dec
push
push
pop
mov
rcl
popa
inc
pop
sub
lcall
es
gs
mov
mov
out
xor
or
std
lds
pop
cmp
icebp
mov
cmc
pop
and
ds
aam
fisubl
cmp
add
xchg
mov
rclb
stos
mov
pop
push
cld
mov
gs
cli
pop
roll
stos
mov
ja
leave
mov
mov
mov
pop
mov
repz
js
pusha
inc
mov
pop
jbe
dec
sti
xchg
sarl
inc
loope
jnp
gs
popf
icebp
jns
es
push
daa
pop
or
mov
aaa
scas
divps
xchg
xchg
divl
push
inc
add
test
add
jne
add
mov
mov
cmp
mov
sbb
jl
inc
jae
mov
aaa
movsl
pop
shr
test
mov
fucomp
jo
adc
stos
add
dec
inc
pop
dec
dec
insb
mov
or
lock
sarb
aas
xchg
jp
aam
loopne
sub
int3
sbb
xchg
sub
hlt
mov
lahf
adc
cmp
xchg
jle
out
push
adc
iret
cmp
inc
mov
pop
xchg
adc
loop
mov
cmpsl
push
push
inc
mov
in
inc
pop
inc
popa
gs
xchg
popa
fbstp
cmpsb
es
je
fs
testb
into
imul
int3
push
mov
add
jbe
add
mov
adc
stos
push
std
mov
mov
inc
roll
filds
addr16
scas
xor
cmpsl
jne
pop
lcall
into
cmpsb
mov
int
sti
jb
not
js
adc
push
add
push
jl
jmp
jne
pop
jno
imul
jp
mov
lret
mov
or
aaa
lds
test
pop
divl
imul
lahf
imul
dec
dec
mov
sub
es
mov
dec
jge
repnz
inc
fwait
lcall
ficomps
push
and
jae
das
scas
adc
testl
cmpsl
shll
dec
inc
cmp
test
lods
pop
into
and
lret
or
in
ja
orl
push
dec
aad
cmp
lea
decb
and
popf
fisubrs
mov
ljmp
jo
in
lcall
jb
xchg
xchg
cmpsb
adc
cmp
imul
sahf
inc
mov
inc
jo
push
or
rcrb
mov
add
hlt
mov
push
mov
and
xchg
aaa
lahf
or
xchg
jmp
xor
adc
bnd
mov
push
and
mov
sbb
sbb
mov
pop
mov
aas
sub
mov
jo
hlt
mov
add
xchg
dec
int
or
ss
and
inc
sbb
je
movsb
jle
bound
mov
xor
and
test
dec
fsubrs
xor
aam
stos
push
scas
mov
pop
fbstp
mov
mov
scas
out
fs
ja
int3
cli
jbe
out
pop
fwait
inc
pop
inc
jbe
mov
adc
mov
incl
dec
and
jle
clc
push
test
aas
ret
or
inc
stc
xchg
push
mov
inc
cmpsb
es
subl
xchg
nop
imul
out
mov
push
insb
and
fucompp
dec
inc
inc
mov
and
jo
sub
enter
inc
jae
pop
ret
jle
xor
popa
nop
roll
ds
mov
mov
sbb
push
pusha
sbb
or
addr16
push
mov
xchg
mov
outsb
mov
mov
sbb
cwtl
nop
loop
xor
mov
adc
js
std
nop
notl
xor
cmp
aad
sbb
jl
mov
in
fucomip
mov
inc
cmpsl
clc
aad
je
inc
leave
popf
jle
data16
pop
imul
cwtl
sub
and
fnsave
popa
lock
xchg
outsb
sahf
movsl
lods
mov
leave
out
nop
mov
mov
insl
xor
jg
dec
cmp
inc
push
scas
dec
icebp
mov
mov
jne
xchg
mov
mov
leave
jne
sbb
in
in
enter
out
sbb
scas
cmpb
mov
outsb
jne
aam
add
repnz
jmp
sbb
aad
adc
ja
mov
push
push
xchg
nop
push
cs
adc
pop
sbb
sbb
out
dec
mov
pop
shlb
out
dec
sbb
pop
adc
outsl
subb
bswap
jb
rcrl
gs
cltd
out
xlat
fldcw
adc
faddl
dec
in
add
int
mov
rorl
clc
js
in
pop
stos
scas
insb
rcr
je
mov
jo
or
jg
add
es
mov
fldt
and
xchg
sub
les
mov
jge
jle
add
pop
sbb
divb
std
lret
xchg
xor
pushf
daa
xchg
mov
mov
and
lret
cmp
add
and
mov
fcomi
mov
inc
fistpll
test
call
jle
pop
mov
cmovge
imul
mov
jno
mov
lods
int3
pop
leave
push
shl
imul
out
in
mov
mov
add
mov
fadd
sahf
ja
mov
xchg
push
es
test
or
std
daa
push
notl
push
aad
stos
ud2
in
sar
or
dec
imul
mov
les
pop
jb
pop
in
jo
shrb
xchg
ljmp
and
inc
adc
adc
mov
lods
rcl
out
popf
aas
mov
outsl
adc
jns
repnz
aad
pushf
mov
fidivs
mov
xor
push
cs
std
cmp
sub
stos
loop
push
mov
rolb
faddl
out
mov
stos
push
mov
rol
jne
dec
pop
cwtl
scas
adc
test
cwtl
pop
das
sbb
cmp
sbb
pop
mov
out
xor
xor
pop
adcb
daa
out
jecxz
movsb
lock
mov
insl
jecxz
mov
outsl
leave
dec
test
or
mov
sbb
lods
sub
add
pushf
sub
cli
stc
mov
sub
test
pop
cmpsl
mov
movsl
popa
int
je
dec
xchg
inc
iret
addr16
xor
js
sub
fadd
fiadds
sub
mov
dec
sar
jae
push
push
xchg
mov
ret
cmp
mov
cli
mov
imulb
jl
cmc
dec
xor
and
mov
loop
lods
xor
test
fistpll
into
jle
orb
jae
inc
and
mov
mov
mov
pop
loope,pt
sbbb
xor
push
mov
imul
rorl
and
or
lods
sbb
test
out
or
sub
repz
xor
sub
loopne
pop
ja
imul
cmp
icebp
das
mov
pop
inc
insb
into
pop
jns
sarb
jae
aas
mov
mov
test
dec
xor
roll
scas
mov
mov
inc
pop
cmc
jle
lret
jnp
cmpsb
lods
mov
andb
mov
xor
xchg
jne,pt
push
loopne
or
cli
stos
jp
fldt
and
push
add
mov
jmp
pop
adc
pop
jo
xor
cld
ds
sarb
and
mov
subb
xchg
pop
xchg
pop
mov
sub
adc
addr16
cmp
pop
cmc
test
or
das
ficomps
pop
cli
test
dec
fimull
xchg
push
push
mov
inc
daa
inc
cltd
jg
jge
pop
lret
sarl
jns
xor
lahf
andb
push
orb
movl
pop
push
stos
jno
or
lods
fwait
push
int3
push
loop
loopne
decb
inc
call
add
lea
cld
dec
sbb
mov
mov
push
leave
ljmp
ret
ret
lcall
add
fisttpll
xchg
adc
cld
loopne
dec
popf
daa
ljmp
push
cmpsl
lret
popf
dec
pusha
call
movsl
in
pop
dec
mov
aas
jp
fdivr
cmp
fstp
sub
jmp
loopne
mov
loop
sub
add
or
pop
pop
and
rcll
sbb
stc
dec
adc
js
not
scas
mov
lcall
repz
sub
jnp
in
sub
call
das
das
inc
test
in
stc
push
and
into
add
adc
xlat
jne
cs
push
mov
outsl
push
push
in
push
test
and
ss
or
comiss
jbe
add
pop
pop
sbb
stc
loope
aas
jmp
imul
adc
push
scas
xchg
push
ja
fwait
insl
test
out
outsb
icebp
xchg
jo
cli
in
lock
sbb
cwtl
or
jmp
test
and
outsl
sub
or
pop
mov
stos
cltd
in
sub
sub
rorb
outsl
inc
lret
jb
inc
jge
fbstp
sub
ficoml
cmp
sbb
imul
insb
ss
mov
jecxz
lret
fprem
fwait
dec
xchg
xor
lret
arpl
mov
outsb
and
arpl
push
or
pop
les
jmp
and
mov
dec
nop
jmp
out
into
cmc
fistpl
jb
cmpsb
cs
push
xor
das
sbb
dec
xor
jecxz
and
lret
sbb
and
pop
push
stc
add
leave
stos
and
popa
mov
jge
lcall
xor
cmpxchg
hlt
fs
jae
jge
xchg
bnd
stos
mov
push
lods
scas
movsl
stos
mov
push
pop
xchg
ja
stos
push
insb
lcall
xor
xchg
mov
lods
xchg
inc
jmp
rcrb
je
leave
cmp
mov
xchg
lahf
and
jne
mov
out
jno
popa
sub
shl
mov
add
adc
arpl
scas
out
xchg
ficompl
scas
and
sub
call
dec
loope
cmp
daa
data16
push
lods
jg
or
cmp
pop
pop
aas
sahf
sbb
nop
xchg
mov
rorb
mulb
jae
pop
jno
aam
notb
aam
pop
mov
repz
iret
mov
lods
les
xchg
pop
dec
daa
pop
call
sti
ret
sbb
lahf
mov
cs
push
sbb
jmp
iret
cmp
fistl
daa
xor
mull
movsb
test
out
mov
xor
jbe
jp
mov
gs
icebp
dec
or
add
ficompl
ret
fldcw
ficomps
pop
push
fistpll
add
lock
and
mov
scas
ret
out
mov
lahf
cmp
jle
ss
push
xchg
imul
enter
mov
xchg
sbb
sahf
pop
push
shl
mov
stos
xchg
aam
pusha
cmp
add
test
cmp
sbb
mov
sti
sbb
int3
outsb
insl
jb
cwtl
mov
sti
pop
lea
sbb
xchg
test
add
xor
inc
pop
test
add
cs
popa
imul
jbe
push
mov
sbb
push
in
das
call
xor
jmp
lea
fucom
sar
xor
add
ja
lcall
pop
push
xor
mov
adc
xchg
sub
flds
sub
in
push
cwtl
inc
in
idivb
mov
xchg
loop
pop
push
aaa
addr16
mov
cltd
lcall
rcll
mov
mov
das
mov
imul
sbb
sbb
push
pop
stc
fldenv
stos
jae
repz
movsb
ss
in
icebp
call
imul
sbb
jl
jmp
mov
jl
std
idivb
call
cmp
sbb
jecxz
shll
sub
movsl
mov
xchg
lds
dec
leave
aad
xchg
lret
cmp
cmpsb
js
pop
int3
cld
inc
gs
adc
cmc
sbb
fmul
imul
pop
mov
jbe
ljmp
sbb
jnp
push
aam
mov
cmc
lcall
cmp
aam
xchg
xchg
add
out
or
cwtl
out
xlat
jne
les
add
out
sbb
fwait
outsb
mov
les
pop
jb
jl
xchg
add
dec
pop
or
loope
mov
int
mov
into
cmp
adc
or
push
arpl
add
mov
pop
les
jo
cld
rorb
push
mov
shll
mov
push
repz
es
cli
adc
mov
sub
xor
dec
int
pushf
xchg
imul
fwait
sub
add
bnd
add
mov
and
mov
movzbl
and
faddl
call
loopne
jmp
into
inc
push
lea
or
fwait
mov
jbe
and
and
movsl
imul
gs
int3
iret
pop
decb
dec
mov
repnz
mov
stos
into
cmp
xchg
std
sbb
cmc
jg
pusha
push
outsl
inc
data16
sbb
mov
movsl
loopne
ret
or
push
push
mov
cmp
push
push
xchg
stos
inc
jg
and
imul
mov
out
pop
inc
pop
dec
cld
mov
xor
inc
xchg
fildl
div
pop
mov
mov
jmp
mov
shll
insb
pop
jle
dec
xchg
xchg
test
fs
loop
sbb
inc
lahf
add
stos
mov
mov
push
ss
sahf
add
imul
push
pusha
je
sub
rol
jnp
xchg
and
adc
xlat
lcall
test
mov
in
xor
jbe
in
sbb
movsl
or
jne
sbbl
inc
mov
ja
add
adc
mov
js
mov
xchg
pop
lods
jg
sub
or
jnp
ret
lret
push
mov
xor
and
add
pushf
sub
sbb
mov
sub
mov
jl
movsb
mov
and
dec
ja
addr16
cmp
orl
push
mov
leave
ret
dec
mov
mov
nop
push
xchg
bound
mov
pop
pop
xor
mov
pop
adc
xchg
aas
or
fmuls
cmpsb
mov
push
pushf
xchg
xor
dec
ja
mov
and
push
cmp
mov
dec
and
ret
sbb
mov
ret
aaa
add
movzwl
lret
hlt
out
cmc
xchg
jge
mov
mov
sahf
outsl
or
xchg
outsb
sbb
shrl
lds
js
or
push
outsl
xchg
cmp
data16
mov
cmpsl
xor
dec
xchg
xchg
test
push
jnp
fsubs
sub
jns
aas
fwait
push
pushf
mov
and
cwtl
mov
sti
sub
int
enter
mov
cld
imul
inc
sbb
ficoms
popaw
cli
push
dec
add
loope
test
and
scas
dec
pop
push
fdivrs
cli
push
add
mov
outsl
cmpsl
jnp
sub
dec
cmc
push
shlb
cmpsb
mov
mov
mov
dec
shrl
hlt
jno
outsb
jp
xorb
sbb
push
jns
cmc
int
inc
inc
popaw
and
pop
mov
dec
jno
push
dec
scas
ss
mov
repz
mov
fdivrs
or
and
sbb
adc
adc
stc
inc
add
xor
and
sti
fwait
sub
adc
sahf
xor
adc
mov
pop
das
cs
inc
cmpsl
nop
inc
leave
loop
scas
adc
xor
test
adc
sbb
lock
xor
sbb
sahf
sbb
loopne
adc
pop
cmpb
gs
rorb
out
lods
sub
sbb
jp
movsl
xchg
pop
xchg
xrelease
out
popf
mov
push
repz
test
test
stos
adc
stos
mov
stos
mov
sub
adc
dec
or
mov
cmp
jbe
lock
jo
push
loope
cld
lahf
push
push
andb
lea
cmpb
push
popa
iret
fstps
je
push
fisubl
and
scas
sbb
and
insl
fistpll
push
mov
adc
leave
adc
test
cwtl
jle
arpl
js
adc
les
pop
xchg
and
and
cltd
ja
jg
cmpb
lds
sahf
enter
fcomip
sbb
ja
sub
leave
push
push
repnz
insl
outsl
dec
nop
popl
pop
test
mov
arpl
aas
popf
shrl
dec
insl
dec
js
xor
push
adc
subl
cli
xor
push
adc
pop
fdivp
test
ret
add
mov
mov
insb
lcall
imul
enter
iret
rcrb
stos
xlat
cmpl
iret
pop
and
mov
jmp
mov
push
xor
popfw
movsb
or
cmp
push
xchg
pop
mov
mov
jae
xchg
dec
jno
inc
jecxz
cmp
inc
dec
mov
xchg
shr
lret
daa
movsl
call
pop
fwait
popf
sbb
adc
daa
arpl
jl
inc
gs
scas
loop
mov
pop
enter
repnz
stc
repz
jp
testb
sahf
pop
xchg
lcall
sub
push
adc
shlb
aas
outsb
or
cmp
mov
imul
mov
std
into
movsl
and
bound
enter
add
into
out
xor
rorl
rcll
daa
ja
dec
push
loopne
out
jge
sub
in
subl
and
andl
incb
int3
call
fbld
add
out
add
std
xchg
jbe
xchg
cltd
ljmp
in
push
adc
push
fiaddl
dec
int3
outsb
pop
xchg
nop
jno
inc
sub
sbb
push
scas
sub
pop
xchg
mov
or
inc
push
out
inc
in
pop
pushf
adc
add
adc
mov
aaa
fidivrs
sti
sahf
mov
xor
ret
mov
shrl
or
adc
enter
js
add
sub
push
dec
mov
popa
pop
pop
icebp
iret
pop
pop
mov
mov
jl
or
mov
pop
xchg
stos
mov
mov
jno
push
push
sahf
and
stos
iret
xchg
test
adc
push
sub
out
loop
pop
loopne
les
cwtl
cs
and
or
pop
loop
dec
sub
cmp
aam
pop
push
jns
sbb
xor
frstpm(287
repnz
aaa
ss
jb
pop
adc
fldenv
in
adcl
ds
add
dec
cmp
mov
in
clc
test
adc
mov
sbbb
inc
inc
push
shrb
mov
push
sti
pop
int
lods
cmp
repz
jmp
pop
push
mov
dec
xchg
jg
xor
hlt
rcr
adc
jp
shl
pop
clc
ds
notl
mov
or
adc
outsl
or
stc
and
add
pop
std
loop
pop
lcall
call
fcmovnu
arpl
loopne
inc
xchg
jo
jnp
cld
das
xor
arpl
bound
jge
sub
je
adc
adc
and
test
dec
out
pop
dec
std
ss
scas
pop
loopne
pushf
je
popa
add
pop
cmp
xchg
xor
xor
or
sub
cs
dec
fldt
fwait
adc
mov
out
aam
xor
enter
ficompl
push
adc
push
ja
mov
dec
pop
mov
push
adc
inc
bound
xchg
sti
ret
push
stos
lahf
iret
stc
sub
movsl
push
rolb
pushf
xor
mov
mov
gs
int3
shrb
int3
mov
inc
daa
mov
sbb
push
sarb
popl
mov
cli
inc
mov
pop
mov
dec
in
dec
stc
stos
adc
cmp
sub
int3
insl
movsl
jmp
push
add
cmpsl
mov
in
mov
cmp
inc
jmp
lds
ja
adc
jle
sar
xlat
mov
sub
dec
int
mov
es
stos
test
mov
test
push
sbb
adc
jl
int3
and
jge
push
les
jnp
mov
xlat
sbb
pushf
mov
lock
nop
push
jecxz
mov
sbb
lea
xchg
fsts
pusha
inc
sbb
repnz
inc
dec
in
std
hlt
mov
pop
adc
out
xorl
mov
addl
loop
es
fwait
and
cmc
loop
ja
out
outsl
cltd
icebp
xor
dec
xchg
repz
in
xchg
sub
iret
mov
imul
mov
cmpsl
and
sbb
xchg
cltd
jg
ja
or
gs
jle
dec
pop
clc
clc
sbb
fcmovbe
jnp
outsb
fnsave
mov
cmc
clc
dec
sub
stos
lret
cmp
push
ret
movsl
sub
out
jbe
clc
xchg
add
cmp
add
or
add
mov
test
sbb
mov
rcll
test
pusha
add
pop
push
push
std
sub
popl
push
test
push
rolb
sub
fwait
mov
sahf
jecxz
andb
mov
stos
or
xchg
inc
pop
mov
loop
sbb
lods
xchg
mov
inc
sub
jmp
rcrb
aad
dec
int3
mov
clc
xor
cmc
bound
mov
push
mov
cmp
enter
imul
jbe
or
shr
iret
or
inc
movsl
out
lahf
push
js
inc
lret
call
mov
addr16
mov
dec
loopne
movsb
and
mov
inc
daa
cld
cmpsl
mov
inc
clc
icebp
xor
jl
mov
cli
push
jns
lock
int
jmp
movsl
xor
mov
mov
jne
sbb
and
jnp
les
add
inc
inc
mov
xlat
jnp,pt
xchg
jb
or
xchg
icebp
push
mov
sbb
icebp
xor
cltd
mov
iret
sub
icebp
loopne
es
lcall
adc
mov
test
pop
dec
sahf
inc
xchg
xchg
jecxz
sbb
shr
or
fcmovnu
sbb
or
inc
jmp
xor
ja
stc
lods
push
cmc
mov
popa
movsl
in
add
push
jnp
inc
popl
sbb
mov
mov
jns
icebp
ja
dec
scas
fdiv
jbe
mov
insb
fcomps
in
lock
cwtl
adc
sub
xchg
cmp
fmulp
jl
add
and
ds
clc
and
xor
in
popf
jbe
jl
adc
or
add
mov
inc
sub
out
sbb
iret
sub
cmp
cmp
sub
inc
pusha
push
mov
cmp
sbb
or
sub
jbe
mov
jbe
sbb
ds
ret
bound
or
adc
cmp
aad
mov
inc
adc
aam
cmc
mov
aaa
fisttps
xchg
lea
mov
ror
outsb
data16
xorl
xor
std
fwait
mov
dec
cmp
jb
repz
or
inc
dec
mov
jne
sti
cmpsl
mov
pop
ficoms
mov
sbbl
or
mov
push
jp
jbe
test
push
dec
dec
out
adc
dec
and
jg
mov
sbb
add
lret
lods
outsl
dec
aad
jne
adcl
xchg
xor
in
in
cmp
mov
popf
enter
mov
sbb
inc
roll
rcrb
lock
int
mov
out
out
test
lcall
jne
test
xlat
xor
xchg
testl
shl
push
xor
gs
jb
sarb
int
lret
mov
icebp
jmp
push
xor
out
mov
and
rorl
aaa
fldcw
clc
aaa
inc
cmp
fucomi
lock
scas
cld
loop
inc
inc
cmpsb
sub
jmp
xchg
xor
or
out
iret
xor
push
xchg
push
pop
and
data16
in
lret
push
inc
int3
xor
insb
repnz
sbb
imul
and
sbb
test
jl
xchg
test
negl
rcl
sbb
shlb
out
jae
mov
cmpsb
nop
mov
push
cld
add
in
repz
data16
inc
pushf
inc
scas
lock
stos
sbb
cmpsl
push
dec
es
subb
push
cs
cpuid
or
xchg
std
mov
fiadds
adc
cmc
jbe
shrb
pop
push
and
jge
jl
sbb
pushf
lcall
cwtl
scas
sahf
sahf
popf
ret
and
mov
gs
fs
jmp
jbe
or
push
fistpll
mov
cld
cmc
cs
movsb
dec
adcl
jecxz
repnz
and
lds
push
xchg
in
jmp
xor
rorl
push
jmp
mov
mov
lock
mov
mov
ficoml
test
jns
rorl
subb
mov
out
mov
addb
sbb
jae
fsubl
xchg
mov
pop
inc
sbb
lret
pusha
xor
cmp
xor
pop
pusha
outsb
nop
mov
outsb
aam
mov
outsb
dec
lcall
pop
pushf
repz
dec
pop
imull
mov
out
add
mov
sbbb
lods
test
lock
in
fisubrs
aad
inc
jmp
dec
jae
jo
dec
jp
stc
xchg
jl
aam
and
lds
ss
mov
xlat
inc
xor
inc
std
pop
inc
ljmp
lret
in
or
int
in
inc
cmp
sub
dec
js
push
out
pusha
or
push
mov
rol
sbb
jns
sub
mov
lods
popa
out
pop
inc
arpl
pop
and
mov
and
pop
mov
stc
shr
mov
imull
sub
mov
or
and
fs
push
sub
out
fsub
aas
cli
dec
cmp
mov
pop
data16
lds
mov
inc
mov
mov
cmpsl
mov
add
xor
sub
mov
sbb
lret
in
push
fiaddl
scas
loop
ja
aam
out
call
lret
jno
mov
movsb
lock
pop
xor
jo
fs
pop
jnp
mov
popf
dec
push
pop
idivl
mov
pop
out
scas
cltd
jb
sbb
mov
leave
push
dec
rorl
movsb
cmc
push
ret
loope
or
ss
xchg
pusha
mov
rolb
mov
mov
pop
mov
pusha
adc
sbb
in
xchg
or
lods
dec
or
test
jmp
xor
subl
pop
xor
stc
loop
aam
dec
mov
dec
pop
xchg
pop
clc
sbb
sbb
mov
enter
push
daa
incl
mov
scas
mov
inc
mov
adcb
xchg
mov
push
jge
jp
mov
insl
inc
sub
lcall
rcrb
xchg
arpl
aas
adc
inc
lock
dec
jne
je
dec
xchg
push
jge
jns
out
xchg
push
sti
xchg
mov
data16
dec
scas
jle
scas
cmp
fldt
adc
imul
lahf
fsubs
js
mov
or
daa
movsb
dec
movsb
dec
movsb
push
scas
jns
cmpl
fadds
cmp
inc
in
pop
cltd
mov
mov
or
in
jo
adc
lret
pop
xor
xchg
xor
aaa
mov
and
and
xchg
mov
add
jnp
lock
rcrl
inc
mov
in
dec
dec
mov
and
arpl
mov
push
cld
and
outsb
out
jno
cwtl
ss
mov
lahf
inc
fmuls
mov
xchg
neg
dec
or
xchg
loope
jo
mov
test
and
es
xchg
lcall
add
bound
test
add
ja
inc
xor
mov
lcall
icebp
stos
stos
sbb
fbstp
repnz
mov
xchg
mov
jge
addr16
imul
pushf
xchg
ja
mov
aas
xor
insl
fildl
jecxz
adc
push
cmpsl
nop
lahf
out
jne
leave
xorb
sub
insb
out
adc
dec
dec
mov
cmp
and
mov
mov
out
dec
in
and
movsb
test
and
sub
jnp
jae
mov
mov
xlat
add
mov
xchg
xor
loope
into
mov
inc
popf
int3
je
and
data16
ljmp
mov
cmc
insb
popf
mov
aam
ja
stc
mov
fwait
mov
in
jae
add
ret
and
mov
test
mov
cli
mov
adc
repnz
jg
jae
sbb
fwait
adc
mov
int
mov
fstpl
push
scas
cmp
cmp
inc
push
adc
aaa
pop
dec
adcb
adc
mov
scas
aad
jns
mov
mov
outsb
jne
dec
cmp
jns
cs
rcl
sub
in
pop
call
popa
fldcw
jae
xlat
popa
mov
rorl
repz
jle
add
lea
xor
sub
out
js
sub
xor
mov
pop
loopne
stos
stc
cmp
push
mov
mov
cmc
push
add
xchg
cs
push
pop
imul
in
and
and
dec
test
jnp
or
cmc
add
out
std
push
jo
lret
xchg
mov
jbe
test
sarb
idivl
ficoms
jecxz
mov
sbb
neg
mov
mov
cmp
orl
xor
icebp
sbb
out
ljmp
push
sbb
cmpsb
xchg
or
rcl
sub
jecxz
popa
int
mov
movsl
fbld
enter
pop
or
mov
scas
inc
in
addr16
push
mov
data16
pop
xorb
pop
mov
ds
adc
fcom
mov
decb
pop
ljmp
sub
sbb
clc
adc
cmpsl
movsb
xchg
push
nop
xchg
pop
cmpsb
dec
xorl
mov
je
aad
push
pop
jno
ss
xchg
nop
neg
mov
mov
dec
cmpsl
pop
dec
inc
inc
xchg
inc
jle
xor
in
cmp
addr16
lods
dec
das
sbb
jb
cmp
mov
jle
sbb
stos
push
pop
jge
fstpl
mov
in
std
rorl
push
jo
fldl
mov
sub
pop
and
test
dec
repz
lods
lods
arpl
in
sbb
mov
inc
xchg
nop
sahf
mov
xlat
in
adc
lock
fisttpll
inc
adc
cmp
push
fidivrs
ficoms
das
fildll
mov
les
sub
lock
push
xor
notb
ret
xchg
xor
pop
dec
adc
fcoms
fisttps
sti
dec
cmp
fmuls
jnp
out
test
xchg
xlat
push
sti
nop
stc
inc
xor
repz
fcomps
cmp
jne
or
into
fwait
in
ss
daa
pop
push
lods
fs
mov
shlb
dec
lahf
inc
aam
ret
scas
inc
mov
xchg
fsubrs
mov
pop
push
dec
ljmp
xchg
aaa
pop
push
add
mov
dec
fimuls
rol
sub
or
add
mov
and
imul
mov
dec
adc
lret
adc
mov
shrb
or
xchg
jge
stc
mov
push
sbb
sub
cmp
xor
jmp
xor
out
inc
mov
jne
lods
xor
mov
pop
imul
mov
ret
insb
xor
lcall
sub
into
icebp
shl
cmpsl
pop
ret
mov
fisubs
aam
iret
push
cmpl
mov
mov
test
sbb
cmpsl
int
adc
pop
cwtl
fcomi
mov
lods
int
xchg
or
rorl
cmp
jb
test
repnz
in
push
xchg
into
add
mov
andl
cmpb
xchg
aam
repnz
cmp
clc
dec
mov
xchg
sub
pop
jge
ror
mov
into
je
into
popa
mov
xor
ds
int3
aaa
mov
sub
jmp
mov
in
adc
dec
lds
jle
ret
lret
xor
pop
and
orb
fstpl
shrb
stc
xor
and
xor
cmp
js
pop
dec
movsb
in
adc
jg
adc
aaa
mov
sub
jno
loopne
lock
test
adc
lock
fldt
ljmp
mov
js
dec
pop
loop
sub
and
pop
mov
cmpsb
lods
xor
pop
inc
mov
and
xchg
aad
add
jno
dec
xchg
out
fwait
mov
fmull
push
add
push
add
in
mov
iret
in
sbb
and
outsl
out
inc
ret
call
ja
jg
sub
loop
sub
faddl
pop
jecxz
shll
lret
orl
and
push
data16
stos
pop
mov
cs
into
pop
inc
out
sbb
shr
gs
inc
fisttpl
pop
ret
pop
mov
cltd
jns
add
jnp
push
out
insl
mov
stos
push
in
lods
js
xor
sub
mov
add
jo
pop
movsb
idivl
mov
mov
mov
adc
push
cmp
dec
xor
mov
lock
hlt
xchg
sbb
call
std
insb
sub
sahf
dec
or
lcall
jae
adc
shl
inc
inc
pushf
add
mov
jl
fisttpl
sti
imul
js
test
push
push
ss
pop
gs
or
aad
sbb
stos
ret
fsts
sub
xor
cmp
inc
cli
jg
outsb
jle
jb
jle
out
push
sarb
arpl
inc
mov
call
ja
es
fiadds
outsl
mov
jmp
in
std
cmp
jb
std
push
fbld
xchg
jb
lds
fs
sub
aad
mov
sub
das
nop
push
xor
add
hlt
pop
mov
lahf
sub
lcall
xchg
inc
or
add
and
add
sbb
and
shl
xchg
xchg
jecxz
adc
xchg
test
jle
push
inc
mov
inc
or
sub
and
fmull
sti
int3
pop
mov
loop
cmp
cli
mov
scas
push
fisubl
jg
out
add
mov
test
or
test
mov
arpl
out
addb
cli
xor
int
mov
fidivrl
xor
lcall
scas
fsubrp
outsl
mov
pop
push
sarl
push
aas
mov
sbb
cld
push
dec
out
call
add
aas
mov
mov
cmp
lock
sbb
push
int
xor
or
xor
lret
add
sub
hlt
pop
ljmp
fcoms
out
cmp
inc
cmc
shlb
dec
loop
outsb
jbe
fs
addr16
scas
nop
push
sub
fcompl
sbb
pop
inc
and
cmpsb
test
cwtl
and
push
or
cmp
dec
sbb
dec
dec
lahf
push
cmp
xorb
push
inc
stc
aad
push
loopne
pop
inc
hlt
pop
xchg
adc
vcmpss
xor
mov
push
mov
popa
int3
jns
dec
lods
dec
shl
mov
out
cmp
or
lods
cmp
rorb
jmp
clts
aam
push
es
mov
imul
add
mov
sub
dec
outsl
into
movsl
and
xchg
push
mov
cld
sarb
add
adc
xchg
sbb
cltd
rcrb
add
push
lock
addl
sub
ret
sbb
ss
les
stos
into
sbb
pop
sub
int3
insb
xchg
jp
imul
sub
lahf
xchg
lods
dec
daa
mov
nop
push
icebp
faddl
idiv
sbb
hlt
aas
adc
cmp
add
in
mov
xor
dec
cli
lds
int3
in
mov
loopne
and
mov
inc
fs
mov
jle
pop
inc
fidivs
jo
pop
jo
fcomps
insl
shll
iret
pop
or
add
xchg
jg
mov
arpl
fildll
fiadds
addr16
or
mov
sbb
pushf
and
or
sub
push
xor
sub
push
arpl
in
mov
xchg
cld
ljmp
cli
jg
push
ds
xchg
mov
mov
or
xor
mov
xchg
adc
mov
mov
or
mov
aad
adc
aaa
pop
and
jge
iret
xchg
mov
dec
stc
or
mov
fs
add
mov
dec
test
xor
push
dec
sub
pusha
notl
sbb
mov
or
aam
int3
das
push
idivb
aad
xor
xchg
dec
es
in
sbb
cmp
sbb
ret
mov
inc
aam
cmp
push
cld
inc
aad
popa
sub
sub
xor
notb
leave
pusha
push
clc
insb
ret
fwait
leave
outsb
sarl
clc
stos
jo
inc
cltd
mov
mov
pop
scas
movsl
lcall
sbb
mov
push
mov
or
faddp
xchg
mov
insb
das
out
cmp
jecxz
call
stos
sub
push
push
pop
std
sbb
push
cmpsl
xchg
into
sbbb
dec
imul
hlt
jge
push
or
or
and
lods
in
scas
shll
push
orb
lea
cvtps2pd
cmpl
out
mov
push
test
out
in
pop
or
lock
push
pop
loop
jne
dec
pop
subl
nop
arpl
add
sbb
jbe
lret
jle
pop
loope
jp
inc
shll
ds
add
pop
mov
mov
dec
nop
mov
into
sti
fxtract
fwait
inc
lods
fistps
jbe
fdiv
add
cmp
cmpsb
or
pop
lcall
pusha
shlb
stos
outsl
inc
loopne
cmpsl
bound
sbb
jg
nop
int3
das
cmp
push
mov
punpckhwd
sub
data16
push
jge
add
es
mov
push
je
jne
hlt
push
loope
mov
mov
pop
and
daa
sarl
test
xor
cmp
mov
jg
lock
gs
outsb
inc
imul
aas
adc
mov
dec
addr16
gs
or
mov
jns
jge
push
dec
sbb
mov
and
mov
adc
mov
je
ss
mov
mov
imul
mov
or
mov
cs
mov
mov
cltd
sbb
cmp
add
mov
je
cmc
adc
jns
lds
addr16
jmp
push
repnz
lods
icebp
fwait
ret
mov
aad
divb
pop
and
insb
pop
mov
inc
in
mov
fs
pusha
lret
ret
fadds
divl
adc
cmp
fwait
mov
push
es
sub
cmc
adc
pop
push
cmp
mov
out
xor
rcrb
mov
xor
scas
lahf
sub
mov
and
in
xor
repnz
movsb
out
mov
mov
fnstenv
add
sub
sbbb
outsb
in
icebp
dec
and
cs
sbb
sbb
mov
jg
mov
je
daa
mov
sarl
out
scas
push
adc
mov
jecxz
out
and
aam
lock
xchg
xor
pop
add
sub
jmp
lock
sbb
pop
mov
popf
bound
aad
sarb
mov
or
and
imul
push
test
into
add
lods
and
fildl
inc
outsl
sbb
mov
jnp
nop
lret
lahf
pop
xor
jge
scas
cmp
sub
ret
fstpl
cmp
pop
adc
adc
punpckhdq
mov
loop
aad
sti
push
push
push
movsl
cmp
inc
aam
cmpsl
mov
add
xor
and
xchg
push
xor
inc
mov
or
shl
lock
jmp
mov
xchg
add
js
xchg
mov
jecxz
xor
add
pop
add
cmp
jbe
faddl
cs
dec
inc
cmc
cmpsl
cs
adc
adc
mov
jl
pop
mul
insb
imul
insb
cmpsl
repz
adc
pop
aam
sub
shlb
bsr
push
pop
jle
imul
sbb
lock
addl
cmpl
sub
movsl
pop
inc
push
imul
push
dec
xchg
push
xlat
ds
xor
jmp
mov
data16
movsl
movsl
shll
scas
cmpsl
jns
adc
es
mov
in
or
test
lahf
add
mov
mov
mov
push
scas
mov
inc
jnp
mov
fstp
adcl
sub
push
adc
aas
outsb
icebp
push
adc
cmp
sbb
dec
repz
adc
pop
lahf
imul
sbb
mov
ss
shrb
mov
aam
inc
lret
fsubs
addb
xor
mov
xchg
fcoms
xchg
xlat
dec
push
pop
jge
pop
cld
add
aaa
mov
mov
shrl
cltd
fstpt
xchg
ret
aam
loopne
daa
loopne
enter
shrb
loopne
insl
subl
mov
lret
dec
sbb
gs
mov
xor
movsl
fiadds
lcall
fldcw
push
xchg
cltd
fadds
movsb
jle
out
sub
jbe
inc
inc
xor
push
mov
aas
rcl
ljmp
xor
xchg
scas
fcmove
shrb
cmp
pusha
mov
lcall
mov
jmp
sub
test
aas
add
adc
xchg
xchg
int
xor
pop
ss
out
mov
or
add
and
jp
jp
lods
or
push
pop
jb
xor
je
xchg
fnstenv
dec
and
jmp
mov
cmp
pushf
scas
addr16
pop
test
cmpsb
je
std
jl
jb
in
dec
push
jp
imul
jecxz
movsb
dec
mov
mov
and
nopl
push
loop
loop
imul
fs
push
lret
pop
dec
les
inc
inc
inc
mov
cwtl
inc
sarl
mov
movsb
imul
ljmp
inc
hlt
nop
xchg
js
mov
sahf
pusha
repnz
or
mov
ror
mov
push
inc
mov
jnp
adc
pusha
mov
loop
pop
popf
xchg
and
xor
or
pop
add
pop
and
addr16
jns
cmc
pop
add
xchg
mov
les
loope
ss
outsl
test
into
out
xlat
cmpsb
test
test
dec
pop
inc
pop
mov
test
mov
stos
pop
dec
arpl
push
repnz
inc
jmp
in
pop
jb
lods
or
mov
sub
jns
mov
sahf
pop
inc
sub
xor
mov
cld
xlat
sub
inc
rcrl
dec
mov
xor
dec
adc
mov
js
repnz
fstl
insl
aaa
lods
cltd
loopne
lods
nop
in
je
or
mov
mov
in
cmp
xchg
test
pushf
cmp
loop
stos
daa
stos
ljmp
outsl
insb
fstl
sti
xor
nop
adc
pop
in
enter
movsb
rcrl
push
pmulhw
xchg
aaa
in
push
arpl
push
cmpb
pop
jo
mov
xor
mov
movsb
mulb
jne
push
mov
sbb
std
mov
popf
cltd
pop
notl
gs
sbb
testl
mov
dec
jns
test
sub
in
arpl
or
and
push
adc
or
adc
pop
cmp
shlb
push
sbb
xlat
dec
cmpsb
jbe
pop
xor
imul
dec
daa
jg
arpl
inc
adc
or
arpl
cld
inc
cmpsb
mov
pop
subl
sub
imul
in
mov
cmp
or
inc
lea
call
sbb
or
sbb
or
std
inc
loope
inc
fwait
jle
fwait
into
adc
hlt
xchg
pop
pop
mov
cmp
and
cmp
adc
inc
insb
pop
and
shll
in
xor
adc
rcrl
fcoml
je
adc
push
push
out
pop
fdivs
adc
rorb
ljmp
clc
ss
pop
xchg
roll
push
cltd
imul
and
cmp
sbb
pop
push
xchg
ds
sbb
out
test
cltd
pop
aam
push
mov
mov
enter
sbb
rolb
xchg
xor
sti
inc
inc
push
xor
mov
call
pop
clc
push
sub
cmp
adc
int
ss
dec
mov
lret
xor
rorb
pop
mov
mov
mov
mov
testb
loopne
faddl
xchg
mov
imul
xor
cmp
mov
mov
dec
test
mov
pop
or
in
lcall
lahf
mov
sbb
cmc
adc
ja
push
movsb
mov
rolb
push
or
add
push
mov
leave
push
pop
imul
fucomp
std
movsb
xchg
push
or
sbb
movsb
scas
ja
loop
cmp
xchg
lock
rcll
xor
jbe
lcall
mov
xchg
lcall
mov
std
les
aad
cs
cld
inc
mov
rorb
add
fnsave
jmp
or
pop
nop
pop
int3
rcrl
push
pop
pop
jp
or
cmp
cmp
sahf
xor
sub
xchg
js
in
push
enter
lret
push
arpl
in
cmpsl
adc
and
jo
or
xor
repnz
mov
sub
scas
and
or
jle
add
scas
rep
in
rorb
fdiv
ljmp
cltd
and
aam
clc
pop
jo
scas
andb
adcb
and
fmulp
and
sbb
in
lods
ljmp
pop
cli
and
ror
mov
sub
push
add
mov
inc
mov
in
movsb
lods
jmp
mov
outsl
data16
cmp
pop
cmp
add
pop
dec
pop
sub
push
jmp
out
scas
es
ret
sub
sub
cltd
adc
xor
push
stos
pushl
loop
out
ret
stc
push
cli
rorb
lret
xor
mov
or
xchg
in
out
mov
push
fnstsw
mov
sbb
popf
loopne
xor
push
pop
test
stos
lods
push
imul
aas
pushf
sub
imul
and
in
hlt
in
les
xor
repnz
xchg
test
push
stos
daa
clc
idivb
in
jecxz
ret
dec
adc
xor
bound
jg
jecxz
addr16
xchg
das
sub
pusha
ja
jno,pt
push
scas
cmpsb
push
inc
or
in
mov
sub
xchg
je
add
xchg
dec
mov
jp
dec
outsl
xor
xor
push
fmul
mov
adc
sbb
xor
adc
adc
jb
lea
scas
inc
pop
nop
or
pop
add
xchg
add
ss
notl
sub
xorb
icebp
scas
fcoml
or
cmp
aam
popf
push
mov
or
imul
adcl
jmp
pushf
ljmp
lcall
repz
mov
pop
loop
enter
mov
mov
les
adc
xor
inc
add
push
adc
pop
js
lods
pop
add
ret
push
sbb
je
call
aam
adc
aas
fst
mov
xchg
mov
mov
cmp
pop
xlat
xchg
jle
jo
jo
push
jge
cmp
mov
and
add
addr16
aas
icebp
mov
xor
sar
fcoml
or
mov
lret
sub
sub
add
and
mov
jp
push
sub
mov
sbb
loope
lea
aam
sbb
jge
dec
fisubs
jmp
jnp
icebp
mov
addr16
sbb
ljmp
pop
scas
pop
imul
inc
sub
pop
in
arpl
inc
cmpsl
add
pop
outsl
jbe
ds
mov
scas
mov
rcrb
mov
pop
jnp
test
sahf
loope
cmp
adc
xchg
mov
pop
adc
add
js
adc
dec
rcrl
mov
nop
push
mov
gs
lock
std
mov
sbb
vpshlb
movb
inc
fisubrl
in
imul
xchg
sahf
test
or
iret
pop
xor
aaa
in
popl
nop
inc
fsubrp
test
or
in
ss
test
sub
loopne
stos
leave
cmpsb
loop
int
mov
sahf
adc
lcall
or
mov
mov
stos
mov
lods
mov
inc
iret
inc
cmovne
aas
lea
and
push
imul
ds
movsb
pop
rorl
ret
sbb
mov
into
jae
jno
mov
xchg
fwait
rcrl
aad
jo
sti
popf
pop
dec
aas
out
fisubl
pushf
pop
cmp
cmp
rcr
push
mov
movsb
sbb
jae
xlat
push
add
xor
cmp
jle
mov
xlat
dec
fcmovne
cmp
jl
xchg
sub
scas
mov
aad
inc
pop
lret
mov
dec
jnp
fisttpll
dec
and
inc
add
insl
imul
add
insl
sti
xor
sbb
xchg
fsubrl
cli
icebp
inc
in
mov
mov
jp
push
scas
das
sbb
cmp
js
and
jns
cmpsl
pop
and
imul
pop
mov
aaa
insb
js
jge
repnz
add
lods
push
leave
rclb
xchg
jmp
clc
clc
das
xor
loopne
dec
adc
daa
fsubrp
jp
push
test
cmpl
test
les
pop
scas
into
cld
dec
bound
negb
sarl
inc
fnstcw
into
jno
mov
nop
cmp
jnp
imul
and
inc
or
xor
xchg
inc
out
test
or
mov
cmp
icebp
mov
stos
or
in
loope
sbb
popa
shlb
pusha
lahf
inc
mov
jmp
cmp
ret
sub
pop
out
jmp
jmp
xor
jge
insb
adc
fs
xlat
nop
mov
in
adcb
cli
inc
jb
mov
dec
nop
mov
call
lea
mov
push
pop
or
jmp
jge
sbb
movsb
pop
mov
in
or
arpl
xchg
inc
in
inc
mov
addr16
cmpsb
rorl
sbb
test
pop
es
or
pop
jl
icebp
mov
xchg
scas
fdivrs
mov
mulb
outsb
aam
ljmp
sub
sub
pop
add
les
mov
push
fcmovnb
inc
mov
and
lret
test
es
sahf
aad
imull
pop
push
fnsave
push
inc
je
dec
mov
or
or
sub
scas
xor
or
cltd
jp
xor
xchg
adc
testb
xor
mov
xor
std
dec
lret
es
invd
shl
sbb
lock
adcb
repz
gs
mov
mov
mov
xor
mov
mov
mull
aaa
sti
and
je
adc
fnstcw
in
add
mov
push
gs
stos
ja
cli
dec
sbb
lock
adc
int3
cmpsl
pushf
add
sbbb
bound
dec
inc
sub
movsb
jmp
iret
lds
es
ret
push
mov
mov
data16
pop
or
inc
rol
sub
scas
into
jno
jl
push
hlt
xchg
mov
js
loop
movsb
xchg
arpl
xchg
insl
pop
pop
dec
in
popf
pop
pop
popa
add
push
inc
cmpsb
mov
and
inc
push
rolb
mov
push
xor
or
or
mov
ret
out
mov
mov
lds
pop
jp
ficoml
idivl
inc
mov
inc
or
stos
cmp
insl
into
jbe
lcall
adc
and
inc
cltd
xor
push
mov
popa
pop
jge
or
mov
jp
mov
rcl
xlat
jecxz
sahf
fnstcw
sub
orb
sub
adc
loope
mov
and
hlt
nop
xor
push
cmp
mov
ja
xchg
jbe
lcall
rclb
or
mov
xchg
xchg
xchg
mov
orl
jg
jo
into
cmp
mov
js
lock
pop
cwtl
push
fnstcw
lods
nop
in
hlt
test
cli
mov
test
pusha
call
cltd
ror
fcompl
les
jecxz
hlt
add
inc
mov
out
pop
pop
mov
pop
stc
pushf
cmpsl
inc
mov
sbb
mov
les
add
es
rorl
mov
cwtl
pop
sub
hlt
out
mov
adc
out
in
xor
lcall
movsb
mov
cmpsb
pop
mov
pop
out
int
data16
shlb
add
cmp
out
insl
lret
nop
into
sub
mov
jne
jbe
add
adc
cs
dec
and
push
and
movsb
in
jno
push
fneni(8087
or
movsl
insl
lods
pop
call
cmp
mov
enter
lahf
popf
jp
rcll
add
fwait
sbb
pop
scas
jle
cs
xor
dec
mov
or
mov
inc
std
or
call
dec
mov
scas
or
mov
sub
or
popa
lock
add
fsubrp
aam
inc
or
lret
in
stc
xchg
mov
cmp
xor
setg
movb
das
xor
pop
in
xchg
xor
xor
or
sbb
cmpsb
push
iret
add
insl
lds
pop
xchg
push
pop
adc
push
xchg
mov
rcrb
jne
ja
js
or
ss
lahf
lds
cmpsb
cmp
arpl
inc
mov
fs
pop
sbb
push
push
daa
aas
jecxz
daa
xchg
sub
xor
aam
fldenv
stos
loopne
cwtl
cmp
mov
inc
push
fcmovb
data16
daa
mov
xor
adc
inc
call
jb
adc
sbb
ljmp
aaa
mov
fists
pop
cmpsb
push
adc
add
lds
repz
jge
dec
push
jle
addr16
dec
xchg
shll
fistpl
push
stos
adc
xor
pop
mov
loope
mov
pushf
les
adc
xor
fdivrs
movsb
cmp
daa
bound
js
jmp
fnstcw
push
and
inc
or
add
inc
nop
mov
fidivs
lret
inc
lds
in
add
xlat
in
xchg
add
mov
mov
lcall
cmpsl
adc
lea
iret
sbb
nop
rcl
jb
dec
std
mov
cli
add
dec
adc
xor
and
adc
or
and
jo
out
bound
mov
inc
bound
mov
mov
mov
stos
es
push
pushf
xchg
jl
push
loopne
popf
shlb
std
aaa
out
test
cmp
movsl
cld
in
push
adc
jmp
fidivrs
sbbl
inc
mov
dec
arpl
jb
sbb
int
inc
push
cmp
xor
jno
das
and
or
negb
pop
mov
xchg
and
and
sub
repz
dec
or
mov
sbb
jnp
jb
sub
sahf
and
cld
cld
loop
inc
std
jns
fmuls
fucomip
fsub
pop
xlat
ss
mov
add
cmp
lcall
nop
mov
xchg
cld
add
mov
sbb
add
pop
ja
stos
fs
pop
adc
repz
sbb
repnz
les
cltd
scas
gs
enter
xchg
adc
mov
rorb
mov
push
add
or
mov
lods
popa
call
xor
andl
out
dec
mov
and
pusha
adc
xchg
out
jb
sti
aas
mov
test
mov
out
dec
ds
adc
sub
xchg
mov
mov
shl
loope
mov
mov
cmp
or
stos
jmp
ret
cltd
xor
mov
rcll
mov
es
mov
xchg
lea
mov
les
pusha
mov
dec
insl
sbb
js
push
lods
sbb
jbe
js
and
repz
ret
cmp
mov
mov
fdivr
es
fadds
mov
sbb
aaa
jmp
sbb
ss
aaa
fdivrs
push
into
aad
inc
sbb
xor
push
ds
mov
or
xchg
cmp
bound
sbb
lcall
dec
pop
xchg
sbbb
add
les
cmp
fcmove
mov
cmc
loopne
cmc
pusha
fucomi
push
cmp
movzbl
lcall
mov
dec
push
stos
out
test
dec
ror
mov
mov
sbb
adc
test
xor
jne
and
or
imul
dec
mov
xchg
xchg
xchg
xor
mov
xchg
je
pop
int3
jmp
test
lret
jg
sahf
daa
ljmp
inc
mov
in
adc
jle
in
rolb
pop
dec
push
cmp
jge
daa
insl
adc
push
jl
adc
rolb
adc
push
xchg
fs
xlat
jo
inc
xchg
mov
sbb
testl
stos
rol
inc
insb
mul
rorb
xor
xlat
stos
cmp
and
lods
mov
fs
dec
mov
xor
xchg
cmp
jl
js
and
sbb
pop
lock
push
push
xchg
ret
cmc
xlat
clc
push
jle
mov
jb
shrb
jne
test
and
push
mov
scas
xor
and
lods
xchg
sti
insb
jno
jmp
mov
in
xchg
jge
aaa
out
ljmp
mov
je
adc
test
push
stos
loope
sbb
cs
sarl
mov
mov
sub
inc
add
cmp
lods
lock
inc
and
mov
jmp
jbe
cmpsb
mov
gs
testl
adc
pushf
xchg
sahf
idivb
cwtl
adc
sbb
xor
dec
test
ss
imul
pop
pop
pop
lods
push
and
xor
add
arpl
jle
jl
ss
mov
imulb
daa
dec
inc
dec
dec
push
xor
iret
loop
cmc
je
or
jnp
lahf
sbb
out
sahf
aas
inc
out
sbb
sarb
push
lods
push
or
pushf
push
iret
pop
or
cli
xchg
push
mov
xor
cmpsl
push
loopne
popa
mov
add
popf
movsb
test
pcmpeqd
sbb
mov
fwait
sbb
insb
pop
in
jb
ret
pop
lock
mov
icebp
pop
dec
repnz
dec
dec
add
jecxz
mov
mov
enter
mov
dec
sbbl
scas
push
jge
sbb
adc
mov
test
adc
jp
inc
outsb
xchg
pusha
fldl
jmp
add
jno
jo
movsb
push
jne
mov
mov
lret
mov
sub
out
cmpb
sub
cmp
mov
inc
and
cltd
xchg
pop
push
mov
lea
or
mov
cmp
std
dec
fdivl
or
mov
iret
cmp
pop
add
sbb
movsb
add
test
fstpt
inc
fldt
lret
jb
adc
es
dec
push
jae
shrb
lea
stc
xor
cmp
iret
push
outsb
sub
repz
les
dec
dec
jle
lret
jle
int
sbb
inc
sub
cltd
repz
lds
movsl
mov
iret
ja
aas
imul
je
hlt
in
fsubp
bound
sbb
inc
sbb
lret
mov
gs
mov
fwait
and
dec
jg
insl
int3
movsl
adc
pop
clc
out
arpl
sub
test
iret
push
sub
js
and
aas
cmpb
mov
mov
subb
xchg
es
xlat
mov
jecxz
pop
les
rclb
scas
xchg
out
pop
je
add
push
sub
cld
fidivrl
sbb
call
sbb
xchg
and
jl
out
or
mov
int3
sbb
iret
insb
jge
aaa
pop
inc
nop
xor
inc
into
add
dec
imull
fsub
cwtl
push
daa
test
and
lock
fmull
lock
push
pop
jo
inc
inc
dec
pop
inc
loop
xchg
sub
dec
pushf
jg
push
jecxz
mov
imulb
push
mov
xchg
inc
cld
jg
mov
mov
out
lahf
cmp
pop
das
lahf
imul
outsb
jmp
pop
ds
jl
aaa
sub
hlt
cmpb
pop
shr
sbb
adcl
in
adc
dec
clc
icebp
pop
data16
mov
xor
stos
mov
outsl
mov
push
cmc
seto
test
ss
shlb
jge
fldt
jecxz
lods
inc
inc
dec
call
or
cmp
invd
rcr
insb
lods
dec
ret
ret
repnz
inc
enter
test
pushl
into
adc
sbb
sbb
js
xor
xchg
mov
jns
mov
inc
jnp
pusha
shrl
push
in
adc
icebp
push
js
jns
xchg
cmc
in
rclb
andb
lcall
out
adcb
repz
mov
in
rcrl
xchg
mov
imull
dec
stos
add
lret
pop
mov
adc
xlat
fwait
mov
and
mov
leave
sub
sub
xchg
add
mov
test
mov
xor
arpl
jne
cmovb
xchg
decl
roll
in
int3
hlt
shl
hlt
add
repz
sarl
into
in
lcall
mov
xchg
adc
iret
fs
push
lock
movsl
pop
push
shlb
dec
adc
movsb
std
lock
pop
fstps
lods
xchg
mov
mov
aaa
sbb
add
or
test
iret
sub
jno
clc
cmpsb
rcrl
add
xchg
mov
sub
comiss
aam
lea
pop
pop
mov
enter
jno
imul
and
int
pop
jbe
pop
ret
in
mov
sahf
push
stc
dec
cmp
xor
loop
cmp
xchg
and
arpl
repnz
repnz
sbb
xchg
xchg
push
imul
call
pop
mov
iret
jnp
aam
mov
test
and
emms
cld
sub
sbb
add
out
adc
ficompl
sbb
mov
sbb
mov
and
roll
mov
pop
outsb
push
mov
insl
ss
ret
scas
cmp
sti
xor
sub
pop
jg
jae
dec
xchg
xchg
cld
scas
and
xlat
and
popf
mov
xor
add
call
add
jp
into
inc
push
icebp
ss
bswap
sbb
arpl
gs
insb
ds
lret
lods
scas
xor
fstps
jnp
mov
dec
and
inc
inc
loope
fimuls
loope
repz
loop
pusha
scas
dec
fdivrs
aad
leave
pop
leave
shrl
jge
lea
adc
jo
pop
xchg
inc
test
mov
into
pop
repz
mov
icebp
jge
push
jne
insl
mov
shll
jnp
mov
movsl
dec
push
mov
xchg
iret
push
and
push
xchg
pop
lea
dec
or
imull
movsb
cmp
rcl
dec
lds
popf
xor
fwait
push
xor
lahf
lret
push
jmp
jb
jne
and
push
fwait
push
inc
inc
mov
adc
pop
mov
popa
mov
mov
dec
pop
mov
rcrb
in
inc
jge
xchg
nop
icebp
sub
orl
lock
cmpsw
xor
ret
cmp
fidivs
lods
lods
aam
idivl
adc
push
fs
fisubl
xor
and
push
adc
cld
mov
pop
mov
mov
les
or
es
lret
mov
or
adc
push
mov
repz
ret
aas
push
jbe
cmc
rorl
push
in
or
lea
sub
roll
push
popf
rorb
scas
lret
rcrl
jb
pop
popa
push
xor
mov
dec
pop
inc
roll
fwait
cmp
jmp
inc
adc
mov
lock
mov
fistpl
add
pop
ja
mov
into
and
sar
add
jl
lods
sbb
pop
dec
or
sbbl
mov
pop
push
cmovge
cmp
shrb
and
xchg
add
jle
xchg
pop
sub
mov
mov
sbb
rorb
nop
dec
dec
lcall
shlb
out
cmpb
incb
xchg
movsb
dec
fwait
shl
jp
or
pop
inc
into
fidivl
seta
cs
mov
fnstcw
push
push
cmp
ficomps
cli
mov
rcrl
sahf
in
rol
imul
loop
loopne
push
bound
lret
cmp
dec
dec
push
dec
jle
pop
xlat
shlb
jge
pop
stos
pop
fistps
enter
jmp
adc
dec
or
mul
or
in
jnp
idivl
sub
in
cmpsl
out
es
bound
jns
sti
fnstcw
imul
js
or
sbb
ret
call
mov
shll
data16
pop
inc
inc
xor
mov
xchg
mov
enter
out
jne
pop
mov
pop
sub
mov
fnstsw
inc
mov
cmpl
cli
xchg
ret
int3
fcoms
sub
pop
shll
mov
imul
xchg
and
fsubrl
ret
test
fs
in
pop
mov
sbb
jecxz
jge
fisubl
repnz
cs
pusha
iret
mov
out
rcr
pop
cwtl
lock
cmp
cmp
pop
ds
cmp
shlb
xlat
out
pop
es
jne
xchg
sar
pusha
pushf
testl
imulb
in
test
fisttps
jns
ja
fldlg2
imul
pop
nop
jmp
xor
add
xor
ljmp
fs
add
jge
out
lods
mov
push
in
sbb
iret
xchg
and
mov
movsb
bound
loope
add
inc
sti
cmp
lods
sub
fbstp
lods
test
inc
cmp
jns
pusha
loope
dec
imul
push
push
adc
and
in
jecxz
mov
out
xor
dec
shll
xor
sub
mov
leave
push
sbb
add
ror
gs
jae
adc
mov
aaa
and
jg
enter
scas
dec
out
lods
loopne
stc
or
daa
mov
inc
dec
lahf
sbb
xor
mov
lret
or
push
mov
ficoml
stc
sbb
loope
and
adc
lods
out
loop
inc
mov
adc
push
cmpb
stc
sbb
adc
push
scas
pushl
cmp
outsb
sub
leave
mov
fisttpll
or
xchg
test
dec
std
sti
xor
cmpsl
cmp
es
arpl
sbb
xor
out
bound
jb
pop
std
js
sbb
adc
dec
loopne
ficomps
idivl
and
repnz
out
lds
lods
out
jp
lret
lock
hlt
cmp
icebp
sti
pop
lahf
les
dec
sbb
sbb
repz
fsubs
adc
ljmp
sbb
and
rcrl
lcall
mov
push
push
and
iret
lods
in
cli
out
sub
xor
sub
sbb
xor
jle
out
mov
xor
rclb
mov
cltd
addl
cmp
dec
fnstsw
ljmp
repz
cmp
outsl
push
pop
pop
mov
shlb
scas
cmpsl
adc
pushl
dec
aas
xchg
test
mov
test
mov
lret
push
push
push
mov
call
and
push
and
aaa
mov
rcll
add
adc
mov
jmp
rol
push
and
mov
enter
push
pop
les
movsb
scas
jae
xor
shlb
add
flds
lcall
ret
inc
outsb
xor
std
mov
push
xchg
cmp
pop
pusha
fwait
or
mov
pop
pop
daa
cmp
xchg
xchg
xchg
faddp
insb
es
pop
lds
ja
mov
ret
sub
aam
xchg
aaa
sub
jae,pn
adc
fsubrl
adc
push
hlt
mov
inc
mov
int3
push
cli
ss
xor
lds
mov
sarb
push
mov
jp
popa
mov
cmp
test
lea
mov
sbb
insb
cmp
cltd
adc
stos
adc
cs
adc
mov
xchg
rcrl
xor
pushf
push
add
mov
push
js
imul
lds
xlat
ja
out
sbb
lcall
sbb
rclb
or
mov
xor
mov
pop
push
enter
pop
add
xchg
sbb
lds
fwait
sub
loope
enter
sbb
push
and
xor
pop
daa
imul
dec
push
pop
inc
aad
or
sbb
xchg
push
xorb
sbb
xchg
cmp
addr16
cmc
mov
pop
fmull
in
push
push
test
cltd
xor
inc
in
mov
cmp
mull
test
loop
mov
sbb
add
int
sub
push
inc
sbb
fwait
inc
mov
int3
add
push
jle
movsb
add
stos
leave
jge
xor
xchg
arpl
out
xchg
cli
lret
out
in
movsl
adc
insl
pusha
movsl
inc
loop
rcrb
inc
fs
lahf
bound
dec
int
shll
insl
xor
loop
cmp
push
out
fdivr
xchg
jns
es
push
icebp
push
dec
incb
inc
in
ds
insb
cwtl
mov
data16
and
imul
mov
test
rclb
mov
data16
lcall
xor
pop
clc
roll
sub
popa
rcr
fmull
dec
fisubs
jno
adc
add
sbb
cmp
int3
scas
cltd
push
scas
push
ljmp
in
inc
sbbl
cmc
rcrb
jl
sbb
movsl
mov
adc
xlat
xor
lret
repnz
inc
cmc
or
bound
jmp
cmc
scas
inc
call
pop
lret
sbb
and
into
cmp
int
inc
rorl
cmp
aaa
cmp
imul
pop
mov
or
adc
push
xchg
fs
fsubrs
mov
dec
sub
mov
mov
xor
das
or
pop
stos
test
lret
dec
cmp
imul
cli
jge
push
aad
push
push
xor
dec
adc
inc
int
outsl
cmp
and
cmp
jbe
sub
cmpb
lret
mov
js
inc
vhaddpd
push
sub
ds
mov
xchg
or
xchg
dec
shll
in
inc
pop
push
es
fmull
fs
fmuls
repnz
mov
bound
orl
add
pop
lods
jns
jae
pop
loope
mov
dec
mov
lods
pushf
push
rorl
sti
sub
loop
mov
xchg
loop
sub
mov
into
lahf
jmp
and
add
movsl
test
pop
sub
push
add
sub
data16
mov
adc
mov
arpl
or
idivl
xchg
pop
push
jns
in
inc
xchg
lods
xchg
or
lock
lcall
faddl
in
fisubrs
popa
nop
sub
lret
mov
loope
outsb
daa
add
dec
mov
ret
neg
sti
pop
and
jae
testb
gs
xchg
mov
cmpsl
ja
notb
adc
and
std
hlt
cmc
loope
test
std
xchg
jl
insb
popa
mov
xor
mov
cmpsb
out
jno
jo
lret
or
leave
pop
sbb
xchg
in
outsb
jmp
std
es
add
jbe
or
mov
dec
mov
or
cmp
stos
push
cmpsb
cmp
cmp
xchg
loopne
mov
pop
dec
jp
ds
insb
mov
inc
xor
pusha
xchg
test
test
sbb
sub
adc
lods
mov
mov
inc
in
mov
lea
repnz
pop
aaa
mov
push
pop
popf
xchg
ja
push
pmuludq
shll
ret
sub
fadds
mov
ja
mov
sbb
dec
jno
inc
and
into
adc
stc
addr16
mov
jb
xchg
mov
fcmove
jp
cmp
int
jbe
add
iret
sahf
mov
or
mov
sarb
jle
inc
cmpl
dec
adc
sbb
jl
shll
xchg
ret
aam
pop
ds
pushf
add
sbb
dec
andl
inc
sbb
int3
push
sub
ret
sub
gs
shll
stos
js
fwait
jle
inc
pop
imul
push
xor
push
xchg
adc
xchg
outsl
test
dec
cmp
aam
in
test
lret
mov
incb
add
lret
xlat
dec
inc
sub
mov
and
aas
mov
pushf
mov
xor
inc
push
push
xchg
xchg
leave
push
cmpsl
or
xor
add
xor
cmp
sahf
nop
xchg
and
je
xchg
push
jle
fstp
adc
jmp
jbe
icebp
lea
ds
sahf
cmp
clc
aam
mov
add
mov
jns
add
std
jmp
loop
push
mov
inc
ljmp
ljmp
gs
mov
lods
cmc
inc
out
iret
push
sub
jae
push
mov
pop
jbe
dec
rcll
jo
out
sbb
loop
adc
ret
jae
pusha
cmp
xchg
shlb
loop
bound
rcll
mov
popa
cmpb
add
cmpsb
repz
lock
data16
in
add
movsb
pop
imul
sbb
icebp
xor
adc
cmp
inc
cmp
nop
jge
iret
aaa
aad
sbb
sbb
pushf
xor
lcall
lret
fwait
jmp
ja
insb
xlat
clc
test
dec
stc
jno
jbe
pop
out
mov
adc
jne
imul
pop
mov
push
insb
outsb
lea
cs
cmc
xor
mov
push
mov
mov
xor
mov
mov
ds
push
and
cld
rclb
rcrb
pop
xor
add
sub
jmp
jne
ja
adc
sub
sub
icebp
pop
jle
pop
pop
lds
paddw
out
push
xchg
loope
cmpb
sbb
xchg
arpl
mov
mov
bound
inc
mov
push
aad
cmp
mov
addr16
add
movsb
add
xchg
movsl
pop
push
pop
xchg
xor
push
ja
loope
enter
pop
mov
addr16
test
roll
test
mov
pop
ret
sub
sub
imul
xor
dec
pushf
or
mov
inc
test
or
inc
xor
pop
adc
mov
pop
jg
mov
push
stc
mov
call
rolb
xchg
mov
dec
sahf
shl
imul
movsb
fstl
xchg
sbb
inc
cmp
das
fbld
sbb
arpl
scas
rorb
mov
cli
into
jmp
jo
pop
mov
xor
xor
and
lret
inc
idivb
mov
fnsave
fcmove
dec
and
xchg
sbb
lods
jle
mov
ds
cmp
ljmp
xchg
pop
xchg
lret
pop
and
mov
inc
pushl
xchg
sbb
test
scas
mov
mov
add
nop
cmp
mov
fs
and
add
sub
insb
stc
xor
call
fdivrl
jl
stc
lods
testl
adc
dec
pop
mov
aad
xor
xchg
xor
and
loope
mov
clc
dec
xor
jbe
lods
pop
xor
xchg
js
not
or
inc
or
xchg
cmp
add
std
movsb
push
push
and
push
jmp
push
lods
push
pop
out
js
jb
ret
xor
fs
ds
mov
fldl
ficomps
jmp
mov
sahf
aas
insl
scas
mov
mov
and
out
cmp
inc
nop
ret
lret
int3
jnp
test
cli
xchg
es
callw
sarb
imul
inc
jbe
push
jmp
add
sbb
loopnew
pop
fcoml
imul
out
adc
ds
xor
test
in
ss
scas
stos
jmp
mov
inc
push
xor
jne
and
and
out
stos
aam
incl
adc
fs
mov
pusha
data16
test
mov
fs
add
xchg
ret
sbb
aas
adc
jae
cli
xchg
cmpsl
clc
push
jne
pop
sub
jno
ss
mov
test
sbb
mov
mov
xor
jae
mov
imul
xor
lds
mov
pusha
adc
mov
mov
pop
pop
mov
sub
xchg
testl
sbb
and
int
lods
jo
std
adc
jo
jl
movsl
adc
scas
cmpsb
mov
cmp
fbstp
xor
cltd
xchg
jg
ss
aad
adc
into
push
cmp
loopne
xor
mov
icebp
ja
mov
mov
and
movsl
dec
sbb
fdivl
dec
lds
mov
cmp
sub
lcall
xor
lret
je
jb
cltd
xchg
push
jne
loop
lods
bound
hlt
imul
gs
scas
sub
add
xchg
call
pop
jns
cmp
sbb
mov
pop
test
mov
mov
push
cmpsb
sbb
sbb
xor
repz
pushf
fistpll
jne
xor
add
jle
sub
popf
rcll
mov
in
imulb
mov
pop
fldenv
les
sarl
aam
sti
xchg
ficompl
in
jle
popa
pop
ficoms
push
dec
push
nop
out
addl
mov
mov
fwait
cs
dec
jno
dec
daa
push
cmp
pop
scas
daa
jbe
jl
sar
lock
push
movsl
xor
fwait
xor
and
outsb
or
popl
push
nop
jno
inc
sti
fdivrp
pop
sub
lcall
jb
sub
cli
and
lds
and
jbe
lods
repnz
dec
mov
lcall
dec
repnz
pop
aas
add
sbb
jb
pop
sub
cmpsl
pusha
mov
jmp
into
add
and
xchg
clc
nop
mov
outsl
mov
mov
sti
mov
aaa
outsl
outsl
sbb
hlt
cs
and
fsubrs
mov
out
aaa
push
mov
subb
lods
shll
inc
ret
mov
outsl
les
les
add
jae
xchg
pop
sub
popf
mov
push
outsb
push
lock
mov
addr16
ljmp
and
clc
out
xor
into
pop
mov
add
aaa
stc
sbbb
xchg
adc
push
jecxz
xchg
jl
pop
insl
dec
sbb
ss
xor
cmp
push
push
ja
push
cmp
and
mov
adc
add
adcl
mov
in
adc
out
mov
pop
stc
inc
repnz
sahf
mov
ja
loopne
xchg
add
sbb
fisubrs
js
fildl
jp
pop
xor
movsl
dec
rolb
ficompl
jne
mov
in
xor
mov
jne
mov
test
int
jge
cs
sub
aas
push
mov
push
aam
or
fmul
lahf
mov
sub
xchg
out
jae
lods
mov
cmp
inc
andb
mov
xor
mov
or
and
ljmp
in
hlt
dec
mov
mov
int
or
cmc
lods
scas
cli
sti
xchg
rcll
mov
divl
arpl
pop
adc
lods
or
int3
jno
pop
inc
jecxz
mov
cltd
lock
mov
pop
in
in
icebp
add
jbe
inc
lcall
sub
xchg
popa
mov
inc
jb
lds
pop
inc
repnz
sbb
xchg
repz
rorb
out
xor
cmp
scas
cmp
adc
loope
repz
mov
fwait
mov
and
add
dec
pop
push
and
jg
fnstenv
push
js
mov
mov
xor
ja
fisttpl
jecxz
imull
mov
sbb
push
dec
movl
in
xchg
push
leave
push
and
and
jns
and
inc
or
push
in
stc
jp
mov
int
sbbl
push
xchg
sti
lcall
sub
in
inc
sbb
shrb
test
lds
pusha
icebp
int
scas
jmp
stos
lcall
aaa
or
push
add
outsb
mov
or
cwtl
pop
jae
cmpsb
cmp
xchg
aad
in
mov
jp
lahf
cld
sbb
lahf
mov
cmpsb
jno
push
pop
std
xchg
inc
sbb
popf
int
sub
xchg
fwait
dec
pushf
pop
fidivs
jle
mov
out
test
stos
cwtl
mov
sub
movsl
push
dec
mov
cmp
add
loopne
shlb
mov
icebp
hlt
dec
out
add
icebp
cmpsl
jl
filds
in
dec
rcl
add
sti
test
mov
rcr
imul
pop
adc
fcoms
adc
pop
xchg
aam
push
inc
mov
out
push
mov
add
aam
aam
adc
jne
jno
test
cmp
inc
das
inc
popf
dec
push
loope
ja
icebp
lahf
data16
shlb
sahf
pop
enter
call
jns
dec
lods
inc
jge
cmp
adcl
xor
cmp
fidivrl
frstor
and
repz
jg
sbb
insl
push
mov
or
addr16
dec
stc
addr16
cmp
jo
inc
nop
push
addr16
test
test
int3
push
hlt
jecxz
subl
dec
ret
insb
out
lds
fnstsw
dec
mov
adc
test
jns
cld
inc
xchg
inc
mov
or
dec
out
adc
ljmp
mov
and
sub
mov
push
lea
stc
andb
jno
int3
popf
nop
jg
add
das
je
dec
bound
pushf
inc
sarb
push
add
dec
push
jl
pop
lret
xlat
or
xor
sub
repz
stos
dec
imul
fisubrl
push
mov
outsb
mov
or
cmp
pop
imul
cmp
shll
pop
push
fistl
push
dec
mov
fstps
lcall
dec
in
pop
mov
inc
pop
cmp
mov
ret
sub
andl
xor
sub
dec
addr16
jmp
cs
dec
movl
sub
mov
sahf
lods
jg,pt
dec
cmpsb
pop
sbb
ds
cmc
int
add
in
dec
out
int
inc
orb
rclb
cmp
mov
jl
insb
xchg
inc
sub
cmpsl
loope
sbb
shll
mov
pop
lret
sahf
cwtl
dec
mov
lea
inc
jne
and
daa
dec
fsubs
sti
out
cmp
dec
add
add
jecxz
dec
je
adc
add
push
pop
jae
loopne
xchg
and
dec
push
mov
dec
fdivs
xchg
rcrl
xlat
js
mov
es
loop
fcoml
mov
jo
mov
dec
in
inc
pushf
jmp
jae
sub
xchg
and
push
push
in
gs
adc
mov
pop
je
leave
lods
mov
sbb
cmp
mov
loop
ljmp
dec
cmp
mov
sub
xchg
aam
popf
adc
ret
jl
aaa
int
push
ja
jbe
inc
cmp
push
add
dec
mov
sbb
fisttpl
idivb
adc
xor
mov
dec
mov
cmp
test
pop
add
jns
out
mov
jle
js
cltd
inc
lret
icebp
cwtl
jle
repnz
mov
mov
mov
in
xchg
xchg
lahf
fiaddl
add
inc
insb
cs
fisubl
cmc
dec
std
lods
xor
pushf
pop
fidivl
repnz
push
jmp
xor
ficoms
mov
testb
and
out
sahf
mov
out
push
push
cmpsl
mov
arpl
pop
push
push
cli
cmp
pop
dec
sbb
mov
cmp
adc
jg
jae
inc
dec
jb
cld
sbb
cmp
or
addr16
mov
xchg
arpl
rcrb
mov
jno
mov
stc
push
dec
mov
fs
jmp
std
mov
pop
add
or
into
shr
mov
ss
rcl
jbe
inc
cmpsb
push
xor
push
inc
in
adc
hlt
jecxz
fisttpll
fnstsw
mov
jecxz
or
imul
setb
arpl
insl
xor
test
lahf
cmpsb
pop
adc
dec
daa
dec
xchg
push
mov
mov
jb
adc
movsb
push
mov
mov
adc
fsubs
lahf
dec
pop
arpl
fwait
leave
cmp
ds
mov
into
push
fcmovnu
stos
and
jmpw
rolb
sbb
pop
jae
aad
jl
in
cmp
jg
dec
fnstsw
jno,pt
movsb
iret
nop
rorb
jbe
das
mov
arpl
inc
pop
popf
or
dec
into
inc
sbb
dec
lcall
push
int
dec
je
test
stos
dec
nop
add
testb
andb
and
or
pop
xor
push
adc
adc
pop
lock
insl
jb
enter
notb
mov
movsl
jp
adc
xchg
test
std
rclb
cld
aas
shl
dec
sbb
sub
cmp
xchg
xchg
cmp
ret
movsb
in
push
inc
jns
dec
fdivrl
pop
mov
cmc
add
ljmp
push
pop
movsb
jb
ja
sbb
add
js
in
stos
pop
adc
sti
adc
push
ljmp
mov
mov
push
imul
pop
mov
or
sub
ficoml
fwait
xchg
fdivs
mov
fidivrl
add
xchg
notl
fnstenv
subl
fildll
lock
jo
sub
mov
xchg
adc
xchg
xchg
stos
enter
lahf
xchg
sbb
arpl
cmp
icebp
jb
jl
leave
outsl
or
and
popa
jp
test
rolb
jns
mov
mov
aad
fadds
inc
add
or
push
push
or
xchg
mov
repnz
enter
arpl
add
in
xor
jbe
pop
scas
addr16
sbb
das
xchg
mov
or
loope
sub
jge
sub
cli
cs
js
mov
insl
push
and
sub
daa
adc
mov
xor
lods
dec
test
mov
fxch
inc
lcall
pop
clc
test
push
ret
mov
pop
sbb
push
or
sub
out
pop
sarl
inc
xor
sub
or
data16
mov
jbe
cmc
pop
out
mov
std
into
mov
mov
add
pop
adc
insb
pop
test
sti
sbb
nop
movsb
std
pop
cmp
movsb
test
shll
aad
lret
xor
hlt
and
add
fimuls
loope
adc
gs
sub
xchg
hlt
or
sbbl
out
ss
push
scas
push
push
and
aas
jns
fadd
sub
xchg
cmpsl
or
test
inc
call
push
sahf
push
xchg
rclb
gs
add
cmp
xchg
sbb
jb
dec
loopne
hlt
fwait
xchg
sub
push
nop
fisubrl
frstor
xchg
inc
aas
out
aaa
sub
es
pusha
pop
out
addr16
lret
or
push
hlt
insb
cmc
mov
inc
shl
dec
lcall
xor
push
cmp
and
leave
adc
loope
mov
imul
lahf
dec
dec
mov
and
push
jne
fiaddl
mov
mov
adc
lea
jl
push
cmp
iret
jecxz
pop
dec
cmp
push
jb
push
xchg
mov
ret
ffree
pusha
mov
sub
mov
rorl
adc
pushf
cltd
jg
jne
into
and
sbb
mov
xor
pushl
lcall
clc
test
adc
mov
insb
clc
xor
test
outsl
dec
shr
scas
jmp
mov
cmp
push
sti
adc
lds
aas
mov
mov
mov
out
call
push
push
aas
call
popa
push
mov
cltd
cmpb
in
aas
jae
jnp
leave
repz
mov
pop
fiadds
inc
call
insl
icebp
loop
popl
cltd
lods
dec
push
outsl
sarl
xor
aaa
cs
sub
imul
push
cmp
cmp
jle
ljmp
jo
cli
mov
or
out
push
sbb
mov
adc
cmc
pushf
xchg
aas
mov
out
repnz
sbb
movb
cli
jae
dec
ror
popa
xchg
pop
inc
enter
mov
js
inc
out
sub
out
sbb
dec
ds
inc
shlb
jp
cmp
xor
adcl
mov
movsb
mov
ljmp
test
dec
arpl
fnsave
push
jne
mov
repnz
enter
jns
xchg
mov
outsb
sbb
fs
cmp
jo
mov
inc
scas
cld
outsl
test
push
sbb
xchg
sbb
sbb
cltd
add
lret
xchg
or
insb
movsl
mov
aas
adc
mov
popf
push
out
xchg
xchg
lahf
pop
movl
ljmp
cmp
leave
sbb
mov
movsb
je
bound
adc
dec
lret
jge
mov
sti
leave
jp
mov
iret
push
adcb
cli
pop
or
sub
andl
xor
arpl
icebp
aad
push
jecxz
inc
mov
or
cmp
cmp
or
pop
lds
shl
loopne
mov
mov
psrlw
loope
add
test
xchg
sti
push
xor
jnp
push
cmp
sbb
popa
jno
mov
jno
and
sbb
adc
insb
je
int3
pusha
jae
pop
mov
ficompl
loop
fmuls
lret
mov
push
in
pop
iret
and
inc
mov
dec
pop
add
fcompl
mov
xchg
adc
sarl
add
inc
dec
add
outsl
orl
pushf
add
mov
out
in
sub
jbe
push
xchg
xchg
push
fdivrl
xor
dec
loopne
sar
into
test
add
sbb
adc
icebp
add
or
or
mull
mov
ja
sarl
sarb
lret
shrb
add
imul
std
sub
jno
jnp
push
outsl
xor
xchg
outsl
iret
int
push
jne
xor
and
inc
stos
repz
pop
inc
dec
call
xchg
push
movsl
movsl
cld
dec
into
dec
lods
lods
mov
mov
and
jecxz
jbe
and
std
sub
orb
xchg
sbb
inc
mov
idivb
test
push
inc
jo
lock
out
pop
idivl
jo
adc
jne
sub
lret
lea
out
mov
ss
cmp
nop
cmpl
ret
out
hlt
sbb
mov
push
cwtl
rcrl
js
into
xor
ret
imul
xor
data16
push
cmpsb
arpl
test
sbb
pop
pop
xchg
and
cmc
sti
mov
sahf
leave
sub
lods
cmp
adc
jg
pusha
mov
leave
out
filds
int3
dec
adc
fidivs
mov
aaa
into
xchg
xchg
repnz
mov
sbb
xchg
insl
adc
xchg
mov
inc
xchg
stos
inc
cltd
xlat
clc
mov
jl
dec
mov
dec
fisttps
push
popf
jo
dec
and
out
and
sbb
aas
add
fildl
mov
cwtl
rclb
fidivs
sub
mov
andb
repz
cmp
sar
cmpsb
stos
mov
mov
scas
adc
push
dec
outsb
test
dec
fisttps
js
xchg
xor
popa
dec
sarb
bound
lcall
out
mov
cmp
or
addr16
test
sahf
or
outsb
or
jns
mov
push
inc
pop
fstl
jle
lods
ret
xor
pop
mov
mov
xlat
mov
std
or
call
and
pop
test
fwait
xorl
xchg
pop
das
jns
push
jmp
aas
dec
or
out
int3
and
ss
inc
inc
adc
or
push
testl
xlat
pusha
mov
rolb
in
in
xchg
fstl
fs
cwtl
outsb
lods
aad
movsl
and
and
adc
inc
loop
out
xchg
push
stc
outsl
je
sbb
aas
or
lahf
and
push
ret
jb
insl
cwtl
jo
inc
adc
mov
leave
xchg
stos
mov
std
cmc
mov
leave
mov
lret
je
daa
jmp
fldl
insl
fxch
and
jge
sub
add
shr
addr16
lcall
imul
dec
test
aas
push
repnz
jae
sahf
push
insb
ljmp
mov
ret
andl
mov
sub
dec
pusha
sub
lods
cmp
insb
cmpsb
das
shll
lcall
lret
add
data16
jecxz
icebp
test
bound
mov
lret
jl
mov
stc
test
sub
xor
xchg
lcall
mov
inc
add
jmp
and
pop
insb
cmp
sbb
int
adc
sub
arpl
mov
jne
add
or
add
sbb
std
add
shl
insb
aad
outsl
push
pop
fdiv
cltd
pop
lea
cmp
in
dec
push
jge
jmp
jno
sbb
push
jo
push
sub
xor
jb
sbb
mov
lret
shr
xor
jmp
and
jmp
out
and
comiss
out
ljmp
icebp
jle
jo
out
jno
imul
lock
adcl
cmp
and
xchg
cmp
sbb
les
outsl
cmc
mov
jb
dec
dec
sub
dec
xchg
xor
push
nop
ljmp
into
xlat
jle
imul
movsl
outsb
xor
and
loop
jae
loope
fcmovnb
adc
xor
dec
xchg
mov
out
negl
push
mov
test
out
and
push
lea
or
and
insb
jecxz
dec
mov
sbb
push
cli
mov
data16
out
out
pop
cmp
mov
repz
add
sub
lods
add
inc
scas
repnz
negb
imul
xchg
push
orl
mov
outsb
inc
jns
xchg
or
roll
mov
in
sub
mov
mov
jne
stc
sbb
add
fdivrl
push
jo
dec
adc
mov
mov
sbb
cld
mov
scas
testl
shll
xor
sub
cmp
jl
out
mov
sub
push
mov
adc
loop
pusha
push
jo
sbb
lcall
jno
jne
clc
mov
mov
dec
repnz
mov
inc
mov
add
mov
fbld
das
add
lock
sahf
jnp
into
les
sub
scas
pop
and
outsb
pop
pop
mov
mov
mov
test
jp
cmp
sbb
ret
xchg
sbb
loop
dec
push
ja
rcll
sub
stos
sbb
outsl
mov
jg
pusha
test
stc
xlat
clc
jne
pop
inc
pop
mov
mov
jmp
mov
cmc
sbb
outsb
out
xor
leave
and
push
jg
imul
cmp
ds
sbb
cmp
pop
sarb
into
mov
das
add
push
xlat
push
mov
into
or
outsl
add
cs
sub
fnstcw
inc
fwait
das
scas
out
sub
ret
mov
xor
sti
jnp
out
mov
and
pop
adc
into
pop
ja
push
add
aam
push
push
cmp
inc
and
xor
or
mov
int
pop
fdiv
add
pop
incb
leave
mov
test
ret
jp
ss
movhps
bound
jmp
dec
incb
sbb
inc
into
adc
lcall
ja
ret
dec
or
addr16
lret
xchg
mov
cmp
jae
aas
or
fadd
inc
call
xor
adc
push
inc
xor
cvtps2pi
and
inc
inc
lahf
int3
jnp
sub
pop
mov
fistps
shrb
add
dec
ja
ds
or
mov
cmovs
push
stc
push
pop
rcll
jmp
mov
frstor
inc
and
cmp
mov
cs
mov
pop
in
clc
mov
pushf
arpl
push
jmp
leave
in
xor
mov
mov
push
popa
stos
int
push
out
pop
push
xchg
test
mov
mov
les
add
int
iret
scas
cmp
lods
add
xchg
leave
stos
mov
fcomps
sub
es
popf
sub
pop
negb
dec
call
inc
ficomps
pop
mov
lods
out
pushf
roll
hlt
jo
push
or
jae
test
out
pop
mov
in
push
ds
fmuls
cs
sarb
imul
rolb
iret
mov
or
arpl
add
ffreep
fs
pop
push
xchg
mov
out
pushf
movsl
cmpsl
pop
addr16
xchg
xchg
scas
ss
stos
fdivrp
std
in
jl
test
stc
dec
ret
cmp
sub
jo
add
and
aad
mov
ret
std
imul
pop
fucomi
sbb
outsl
stos
xchg
or
jp
or
outsl
lcall
pop
jno
xchg
pop
dec
sub
sbb
xchg
clc
pop
mov
push
loope
push
adc
iret
mov
mov
cmp
cld
clc
xchg
sub
ja
and
adc
xchg
fstpt
and
adc
test
cmpsl
mov
cld
xchg
cmp
mov
sbb
push
push
in
lds
mov
test
repz
adc
dec
fstp
insb
popf
jmp
jbe
jnp
adc
ret
lock
dec
ljmp
dec
fistl
in
pop
jge
xchg
dec
adc
dec
movb
enter
movsl
imul
insl
sub
sub
sbb
dec
sub
ficoml
xlat
xor
popf
outsl
jmp
aad
mov
push
xor
into
cli
push
xchg
nop
jp
jmp
jo
pop
and
pusha
fadds
movsl
rorb
ljmp
dec
andb
pop
mov
adc
test
or
pop
lea
nop
add
xchg
cmp
fdivrs
fiaddl
call
mov
nop
mov
mov
lock
and
daa
aas
inc
and
es
insb
mov
loope
outsl
ljmp
pop
jl
or
and
outsb
xchg
addr16
stos
xchg
inc
test
lret
in
roll
test
fistps
or
inc
mov
aam
outsl
pop
jge
mov
sub
add
out
mov
addb
std
or
insl
shl
insb
sahf
gs
movsb
data16
mov
sbb
repz
dec
or
jle
dec
lods
fwait
dec
lock
dec
mov
sahf
test
jle
or
push
lock
lcall
mov
pop
mov
ds
push
fstps
je
xlat
sbb
and
fstpl
mov
xor
lret
jbe
pop
or
movsl
dec
jb
sti
iret
jae
jge
xchg
fbld
insb
mov
xor
mov
add
les
aad
ret
movb
push
inc
adcb
cmp
pop
negb
hlt
jno
and
jle
adcb
xchg
shll
inc
adc
mov
adc
sbb
in
inc
aam
stos
lock
adc
dec
mov
mov
sti
xchg
cwtl
je
out
out
pusha
sbbl
adc
test
aaa
out
push
gs
or
dec
mov
lods
stc
push
dec
lahf
sub
cmc
fidivrl
mov
in
ret
pusha
shlb
orl
xchg
mov
or
lcall
sahf
in
cmp
sahf
push
cmpsb
call
jb
inc
scas
pop
sbb
push
push
jge
sub
fs
jo
xchg
repnz
or
rclb
push
jg
dec
mov
fwait
dec
or
mov
dec
jl
xchg
ja
outsl
jmp
push
bound
aad
test
in
test
lret
out
add
mov
xchg
lcall
sarl
popa
lock
push
cltd
stos
inc
lds
pushf
mov
arpl
cwtl
jmp
push
pushf
lods
xchg
push
psrlq
cld
test
ljmp
add
mov
xor
lea
fs
add
int
mov
pop
fstpl
lods
mov
das
and
sbb
add
adc
fbstp
and
xor
addl
jbe
xor
pushf
cmp
inc
mov
lds
ret
icebp
mov
imul
popf
test
test
xor
in
mov
push
jmp
sub
push
insb
push
into
inc
mov
imul
push
pop
mov
nop
std
test
jmp
daa
out
bound
jne
and
rorl
cwtl
and
dec
lret
popa
rclb
xchg
js
test
or
cmp
dec
rolb
mov
cmp
or
push
lock
outsl
mov
leave
test
push
shl
mov
pop
xchg
pop
mov
ror
sbb
aam
cmp
add
xchg
cmp
jae
jnp
lea
cmc
in
int
bnd
cli
popf
ficompl
incb
or
test
icebp
aam
sbb
inc
jecxz
xor
out
lock
rclb
sbb
adc
adc
push
add
lahf
push
mov
int3
mov
into
aas
push
mov
add
inc
test
xchg
lret
add
adc
lcall
sub
out
lahf
mov
ljmp
ja
push
pop
into
int
or
bnd
lahf
cld
cmp
mov
adc
leave
popf
dec
lods
mov
cmp
and
les
mov
lahf
pop
or
clc
inc
push
js
rcl
repnz
mov
fcmovbe
xchg
fcompl
adc
cmp
sub
imul
push
out
push
ret
in
enter
lahf
mul
shlb
mov
pop
mov
jmp
pusha
add
loop
lcall
jmp
jg
dec
popf
ljmp
mov
mov
pop
in
xchg
or
mov
sti
movsl
addr16
mov
xor
mov
xchg
and
inc
mov
inc
mov
movsb
sub
repnz
lods
inc
fdivr
or
inc
xor
add
sub
stos
adc
inc
mov
pop
hlt
or
arpl
arpl
hlt
clc
jle
testb
jge
push
aad
fiadds
add
fdivrs
sti
dec
and
pushf
lea
es
cmp
mov
mov
sub
mov
push
pop
and
ds
aad
jge
out
mov
imul
pop
push
and
sub
repz
and
pop
mov
lea
jae
pop
lcall
and
add
popf
add
scas
out
fidivrs
ret
jg
test
sbb
cmpsl
js
dec
pop
or
ret
sub
xor
psubsb
scas
mov
cmpsb
mov
push
subl
or
aam
jno
push
jmp
sbb
push
sub
les
mov
dec
xor
or
cmc
movsl
inc
xchg
lods
incb
pushf
negl
mov
imul
mov
mov
xchg
shrl
imul
mov
idivb
pusha
mov
sbb
mov
xor
xor
dec
lcall
inc
dec
fldt
cmc
outsb
ss
pop
jmp
jae
add
inc
ds
fsubrl
in
pop
mov
sub
jnp
push
cmp
bound
lds
pop
lret
xchg
in
bound
mov
xor
adc
ret
inc
icebp
xor
pop
outsb
adc
and
enter
out
in
mov
mov
outsb
adc
push
data16
scas
js
sahf
pop
cmp
fnsave
sub
mov
pop
cltd
jb
movl
sahf
aas
push
stos
jecxz
insb
insl
sbb
pop
ret
cmc
mov
push
les
and
push
adc
pushf
jo
fildll
jb
jle
sub
cmp
jmp
fcmovnu
mov
push
dec
outsl
mov
pop
arpl
cltd
cmp
inc
out
pop
call
jb
mov
pop
ret
decb
mov
leave
outsb
mov
movsl
test
sbb
cmp
jb
dec
pop
test
add
daa
nop
outsl
inc
es
sarl
mov
adc
mull
mov
xor
mov
lods
push
fnsave
push
adc
js
enter
and
lahf
or
and
das
popf
sub
jnp
jle
rclb
lock
scas
push
xchg
mov
pop
cmp
in
test
faddl
push
mov
scas
inc
andb
mov
and
pop
lods
cmp
mov
outsb
xor
xchg
pop
push
push
inc
inc
or
push
push
shr
jle
fmulp
push
push
cmp
rcrb
or
xchg
mov
xchg
mov
mov
loopne
fstpt
fsub
or
xchg
dec
sahf
mov
push
into
ss
inc
add
cmp
enter
mov
xchg
sbb
xchg
pusha
xchg
jnp
cltd
popf
xchg
xor
push
je
in
sbb
or
cmpsb
pop
jne
sub
push
cld
into
mov
daa
loop
ljmp
leave
in
out
out
hlt
pushf
mov
sbb
sub
sahf
pop
sbb
into
cli
enter
jp
loop
ror
pop
mov
sub
or
ja
fcompl
cs
pop
add
aam
loope
ret
jae
pop
fisubl
imul
inc
xchg
sbbl
lcall
pop
mov
lret
subl
lea
leave
jnp
aas
sbb
lahf
fwait
push
pop
gs
dec
sub
mov
mov
out
in
add
stos
mov
jecxz
fistps
and
cmp
inc
loope
idiv
clc
xorb
es
push
int
rol
or
aas
shlb
push
push
mov
aam
jmp
icebp
pop
push
or
inc
leave
adc
jns
movsl
gs
dec
pop
xchg
or
add
add
je
push
in
aad
loope
jb
lods
push
or
out
push
into
lea
and
scas
xor
pop
dec
jnp
add
scas
mov
inc
sbb
and
push
cmp
scas
mov
inc
cld
aam
call
cmpsb
dec
stc
inc
shl
inc
ret
rcl
iret
mov
push
xchg
orl
dec
cwtl
mov
repnz
movsl
add
jg
push
cmpb
xor
jnp
xchg
int
sub
fcoml
mov
inc
cmpsb
add
pop
mov
out
jns
popf
add
cmpsl
add
adc
cltd
lock
dec
lahf
std
fiaddl
mov
or
inc
leave
xor
mov
lahf
mov
jmp
ljmp
stos
sbb
mov
adc
push
xor
dec
pop
cmp
fwait
lds
inc
aad
cmpb
mov
in
dec
pop
or
outsl
cmp
mov
mov
fwait
and
jg
jne
lahf
mov
aaa
scas
aad
jns
cmp
mov
test
ficoml
cmp
mov
xchg
shrl
fistl
inc
mov
and
push
js
dec
mov
jp
aaa
xchg
test
sbb
or
sarl
das
mov
cmp
push
mov
mov
fcompl
iret
in
dec
inc
lods
sub
stc
push
cmp
mov
push
mov
add
sub
subl
push
inc
mov
shlb
das
adc
mov
inc
jns
push
sub
testb
mov
sbb
xor
adc
push
ficomps
add
scas
jmp
nop
mov
call
mov
mov
repz
nop
xor
sahf
neg
fnclex
push
mov
movsl
adc
xchg
rcpps
cmp
mov
mov
icebp
cmp
dec
scas
int3
dec
or
sub
xchg
lea
xor
imul
stc
pop
mov
mov
mov
rclb
test
in
adc
cli
adc
push
cs
adc
movsl
sub
test
jnp
add
scas
push
mov
popa
lods
inc
cmp
and
xchg
pop
inc
or
iret
push
shll
xchg
sti
adc
insb
jecxz
push
stos
bnd
inc
add
adc
sub
mov
or
cwtl
add
push
pop
int
gs
data16
dec
jp
lret
aam
inc
mov
or
dec
cli
cmp
xchg
fildll
mov
sbb
in
inc
loop
sbb
cltd
sub
in
push
popf
and
outsb
xchg
jg
cltd
out
jle
inc
addb
cmp
and
js
andb
cmc
int3
or
pop
jmp
andb
stc
pusha
pop
sub
lea
sub
bound
fdivr
pop
pop
in
xor
fimull
cmp
popl
popf
fisubl
pusha
imul
pop
xor
mov
bound
test
pop
aas
test
ret
bound
cmp
xor
cld
jle
or
mov
int
jl
mov
xchg
popa
lcall
roll
cmc
addl
pop
scas
or
cmp
pop
xchg
cmp
pop
mov
add
sub
add
rcr
jae
leave
inc
mov
subl
lahf
jo
mov
mov
shrb
jbe
ss
out
sbb
dec
push
clc
mov
mov
sbb
dec
ror
gs
addr16
add
cmp
xor
cmp
sub
dec
xchg
jl
inc
cmp
dec
and
sub
popa
pop
jo
xor
inc
pop
push
mov
jle
mov
or
mov
dec
or
loope
sbb
mov
mov
xor
xor
cmpsl
fcmovne
xchg
jns
pusha
cwtl
jl
inc
jmp
dec
adc
and
jmp
mov
out
add
push
jl
and
mov
loop
cmp
shlb
es
in
mov
add
enter
lret
and
mov
adc
cmp
mov
add
lods
cmc
ret
gs
test
lods
or
test
xchg
mov
sbb
adc
sarl
push
js
lret
push
shrb
xchg
dec
xchg
pop
dec
fdivl
xlat
mov
pop
pop
inc
mov
movsb
shl
icebp
jg
enter
push
xor
sub
loop
icebp
xorl
aad
jo
jns
das
pushl
cmpsl
test
sbb
pop
inc
push
data16
cwtl
cmp
xchg
leave
or
imul
rcrb
push
sbb
out
sahf
loopne
mov
shr
aaa
aad
and
cmpsb
ret
dec
cmp
cmp
insb
inc
pop
sbb
or
adc
push
xchg
jns
lret
js
or
out
mov
aaa
stos
je
xchg
shrl
or
stos
int3
push
gs
mov
andb
and
clc
fdivrs
mov
mov
push
xor
jl
and
and
push
insl
pop
and
xchg
loopne
sub
pop
sti
cmpsl
lahf
rorb
cmp
mov
add
loope
xchg
jmp
ret
test
mov
mov
and
xor
or
sub
mov
add
int3
in
and
aaa
xchg
add
bnd
inc
iret
dec
shll
iret
and
loopne
daa
scas
pop
xchg
ret
std
xchg
in
fwait
add
dec
xchg
cmp
mov
pop
or
roll
jmp
ja
js
movsb
jno
enter
and
mov
xchg
pop
in
add
aaa
push
push
hlt
jle
mov
ret
add
jae
jne
pop
and
lcall
stos
jg
mov
data16
pop
xor
adc
imul
frstor
sahf
jle
fsubrs
sub
pop
mov
movsb
shrb
inc
adc
scas
popa
bnd
pushf
add
jle
pop
sub
outsl
lret
and
add
enter
jecxz
sbb
pop
les
jp
jle
and
test
and
shl
out
popa
xor
popf
cmc
adc
lret
stos
xor
mull
pop
jp
adc
mov
sbb
pop
mull
cmp
adc
fisubl
adc
sbb
std
adc
push
mov
push
adc
cmpsb
dec
sbb
ja
frstor
push
mov
mov
lds
mov
xchg
jnp
fnstsw
mov
popa
nop
ret
push
or
jp
in
out
mov
mov
aaa
dec
or
and
cltd
cli
jg
cmp
sub
or
xorl
shlb
sarb
in
dec
jne
mov
rcrb
into
xor
pop
lock
xchg
mov
mov
bound
dec
out
shr
mov
subl
inc
fdivrp
in
out
dec
xor
addr16
rcrl
adc
adc
adc
inc
addr16
scas
sbb
inc
clc
mov
sub
fs
mov
mov
outsl
inc
mov
mov
mov
cli
jge
add
jnp
lret
fcompl
pushf
mov
popf
push
cwtl
lahf
xor
jns
lock
movsl
push
sbb
push
inc
xchg
mov
jno
pop
dec
jp
mov
mov
loopne
mov
sub
push
and
lds
mov
fnstsw
dec
inc
mov
fimull
divl
es
test
shll
fdivs
shrb
xor
lret
jb
and
loopne
mov
inc
bound
dec
cld
aaa
jbe
adc
mov
cs
dec
pop
sbbb
mov
jae
pop
pushl
imulb
outsb
jl
lret
out
dec
js
jmp
int
test
mov
dec
cmp
jl
lods
xor
add
mov
icebp
int
in
sub
mov
lock
cmpsb
adc
inc
fldl
jg
xor
jo
hlt
in
and
in
mov
setp
fiadds
or
loope
addl
dec
mov
ljmp
enter
out
jl
pusha
loope
out
movsb
scas
mov
inc
cmpsb
adc
dec
cmpsb
mov
jl
fsubrl
inc
out
or
jle
icebp
daa
mov
stc
sti
out
jmp
js
jo
adc
pusha
std
fcmovb
dec
daa
sbb
dec
loop
jmp
nop
aaa
stc
out
ja
hlt
lods
jbe
jno
xor
lods
push
jg
jne
xor
jns
sub
cmp
negb
cli
sahf
shrb
pop
scas
mov
xchg
scas
stc
mov
sbbb
cmp
cld
in
mov
mov
mov
mov
add
lcall
dec
repnz
lret
lds
mov
dec
push
pop
divb
daa
push
xchg
mov
stos
mov
or
or
rcr
pop
aaa
jmp
push
sub
jbe
fimull
dec
push
sub
adc
mov
jo
addb
jg
dec
cmp
or
adc
mov
aaa
mov
inc
popa
fnstenv
imul
pop
xchg
xor
fdivs
clc
in
mul
add
sub
adc
push
out
inc
inc
sarb
lods
enter
rorb
or
mov
enter
in
std
mov
test
cwtl
mov
mov
mov
out
jg
cltd
mov
ret
pcmpgtd
mov
push
std
push
movsb
insb
and
out
mov
sub
sub
rcll
adc
xchg
imul
int
mov
push
mov
mov
fstpl
cmp
inc
out
pushf
fcmovu
arpl
addr16
inc
push
rclb
add
adc
sahf
out
or
insb
jo
or
xor
cmp
inc
push
and
leave
adc
call
xchg
mov
dec
xchg
xchg
scas
jmp
out
sub
xchg
pusha
cltd
push
int3
jo
fdivl
add
push
mov
mov
pop
sbb
mov
gs
call
stos
mov
in
aaa
clc
dec
mov
cltd
xor
and
sub
jo
aam
jnp
inc
mov
adc
or
repnz
sbb
shrb
scas
pop
iret
and
xlat
mov
adc
xlat
sub
sub
or
arpl
inc
xor
out
and
add
lcall
aad
or
push
fmull
pop
push
icebp
jbe
xchg
add
cmp
loopne
iret
add
scas
jg
inc
xchg
imul
pop
jle
cwtl
xchg
ss
pop
xchg
stos
jb
pop
lcall
insl
pop
xchg
ret
xchg
js
stc
xchg
add
mov
push
sbb
inc
mov
jnp
das
jecxz
mov
cmp
pushf
int
cmc
mov
xor
pop
stc
sub
mov
or
hlt
xorl
jecxz
out
push
in
dec
in
lds
pop
inc
cmpsb
in
and
psubsb
aaa
add
sbb
adc
test
decb
and
iret
mov
movsb
fldl
rorl
cmp
jge
cmpsl
fdiv
jo
jns
pushf
daa
dec
icebp
xchg
pop
cmp
ljmp
push
and
xor
or
push
add
xchg
add
jg
xor
sbb
outsb
loopne
testb
cmp
pop
add
add
cmp
pushf
and
xchg
scas
adc
push
dec
ds
lds
ss
outsl
outsb
repnz
ret
xchg
adc
pop
jl
test
cwtl
subb
pop
pop
push
mov
shll
into
pop
or
and
cmp
in
xchg
or
ret
hlt
xor
jmp
jecxz
inc
add
ja
cmp
fs
cmp
call
inc
push
pop
push
dec
cli
mov
push
mov
mov
mov
outsb
lds
popa
test
ljmp
push
jne
scas
lret
out
xor
jp
ret
cmpsl
jo
cltd
xchg
adc
std
add
sub
mov
int3
repz
jo
xor
xorb
sbb
push
sbb
arpl
cld
loop
and
repz
jle
bound
adc
cwtl
jle
mov
sbb
ret
xchg
jl
dec
ficoms
mov
das
in
ja
add
and
les
jmp
dec
sbb
pop
xlat
push
test
lds
push
dec
test
enter
add
in
jle
jle
mov
mov
lea
xor
call
mov
xchg
xchg
scas
mov
out
enter
lods
and
mov
lcall
popf
inc
loope
mov
ficoml
addr16
sbb
pushf
inc
xor
lods
out
in
dec
insl
jl
mov
xor
jp
aas
dec
in
je
scas
cmp
insl
cmpb
pop
movsb
call
orl
sbb
xchg
ror
inc
jmp
pop
and
sbbl
nop
dec
mov
mov
stos
mov
adc
inc
ret
cmpsb
clc
cli
adc
jo
add
outsl
sub
cmp
test
mov
add
pop
enter
out
fwait
xor
push
xor
sub
adc
call
fisttpll
push
and
jl
fstl
cmp
shll
adc
orb
inc
aad
inc
leave
jb
mov
dec
push
xchg
mov
cmp
jmp
sub
pop
or
insb
popf
add
out
dec
mov
jnp
scas
insb
sbb
pop
cmp
sub
pusha
cld
inc
xchg
mov
mov
call
dec
pop
sbb
xchg
push
insl
lea
hlt
pop
mov
gs
xorb
call
scas
nop
push
mov
xor
push
jge
pop
cmpsb
xor
mov
xlat
in
pop
mov
xchg
push
add
mov
pop
push
rorb
and
cmp
ja
xor
push
push
leave
mov
cmpsl
adc
shr
pop
jne
ja
invlpg
push
subb
movsb
sbb
jb
jne
pop
adc
cs
insb
sbb
xor
pop
addr16
cmp
cmp
lds
rclb
test
dec
xorl
je
sbb
mov
or
out
xchg
ja
or
lods
outsb
mov
aam
fst
hlt
mov
mov
cmpsl
mov
pop
cmp
xchg
push
push
and
push
ds
pop
lret
add
pop
mov
xor
hlt
pusha
jne
xchg
dec
sub
cmp
mov
pop
sub
and
scas
and
lods
int
mov
cmp
sub
pop
orb
inc
outsl
sub
pushf
aaa
cmp
or
mov
flds
cwtl
xchg
fs
and
movsl
imul
or
xorb
cmp
lahf
lea
icebp
shrl
adc
add
mov
popf
mov
lahf
pop
shrl
divl
jbe
aas
popl
test
dec
test
dec
movsl
arpl
mov
movl
cmc
call
pop
in
and
lahf
mov
dec
incl
lock
sbb
xchg
imul
in
jmp
sbb
out
xlat
jae
xor
test
arpl
mov
stos
aam
add
jbe
push
rcrl
sbb
repz
scas
dec
lods
push
push
call
cmc
ljmp
mov
lret
cmpsl
cmpsb
add
dec
out
lahf
mov
sub
mov
inc
js
mov
pop
jb
inc
jecxz
push
inc
dec
cmovns
adc
add
push
cltd
jns
and
nop
jne
push
push
or
mov
pop
xchg
loope
push
sub
jge
stos
std
cmp
push
mov
pop
push
dec
enter
fcmovu
xchg
add
and
xchg
daa
pop
rclb
jne
push
fists
ret
push
addr16
jo
cli
in
out
mov
push
xor
outsl
sbb
test
or
pop
notl
mov
cmpsb
popf
sahf
xor
scas
mov
fisubrl
aam
shufps
fwait
mov
jl
and
cs
mov
jbe
idivl
fisttps
inc
xor
fimull
imul
ds
scas
inc
add
shll
add
pop
fidivs
jp
mov
or
ja
test
insb
bound
xlat
mov
push
cmp
mov
cmp
lds
xlat
inc
mov
fidivrl
sub
cmp
adc
mov
cld
bound
pushf
je
imul
push
fdivrl
push
pop
cmp
das
xchg
movsl
outsb
call
mov
mov
cmp
adc
sbb
into
mov
out
pop
lret
inc
jp
fstpt
cmpsl
test
mov
and
shll
imul
sar
jl
cmp
add
aad
nop
mov
insl
sahf
mov
fs
pop
xchg
xchg
and
int3
lea
mov
jno
sahf
rorb
xor
aam
jmp
ret
sbb
cmp
push
xor
mov
mov
aaa
inc
sti
push
xor
push
xchg
cmc
dec
push
loopne
xor
xchg
dec
les
aam
and
adc
out
mov
xchg
cld
movsb
adc
xchg
mov
cld
loopne
fcmovb
mov
and
enter
out
mov
push
and
pop
push
cmpl
fstpt
pushf
cmp
mov
jb
push
repz
imul
sarb
inc
sbb
jb
out
sbb
imull
test
push
out
mov
stos
loope
ss
xchg
mov
dec
filds
lock
les
inc
jo
in
scas
and
xor
imul
sbb
loope
std
setle
mov
or
enter
lea
jb
pop
push
or
mov
mov
scas
movsb
inc
loopne
outsl
aaa
mov
aas
mov
mov
dec
xchg
stos
xchg
lret
gs
decb
out
in
sub
js
inc
pop
loop
sub
add
das
dec
push
shr
lods
inc
or
and
aad
xor
xor
push
test
pusha
mov
pop
cs
mov
movsl
sbb
dec
cmp
and
movsl
xchg
ficoml
mov
cmp
arpl
jno
loope
shll
mov
fmulp
jge
jle
cmc
in
popa
dec
aam
xchg
mov
sbb
push
and
ret
shrb
push
dec
mov
mov
outsl
data16
shlb
int
daa
mull
add
mov
rcrb
sub
cli
pop
inc
ret
rclb
adc
insb
dec
inc
xchg
es
out
pop
popf
arpl
fidivs
sarl
jno
sti
mov
mov
inc
xchg
ret
loop
mov
push
xchg
bound
ljmp
scas
notb
push
es
test
faddl
iret
xchg
test
test
cmp
shll
inc
jns
cmp
stos
add
xchg
push
pusha
mov
in
xor
push
mov
dec
and
sub
cmp
movsb
pop
icebp
ljmp
and
movsb
add
add
mov
jl
or
jge
mov
cmp
stc
add
es
sub
int
xchg
lcall
dec
inc
xor
jp
xchg
mov
pop
push
insb
test
cmp
dec
jnp
sbb
enter
dec
call
sbb
sbb
xlat
out
dec
popf
test
jecxz
leave
shll
arpl
out
mov
lret
in
mov
jle
dec
scas
lods
xchg
cs
test
mov
or
adc
dec
pop
test
inc
dec
inc
push
inc
loope
push
lret
adc
idivl
jg
push
inc
aaa
mov
popa
mov
lea
fwait
cmp
dec
scas
push
mov
inc
push
addl
mov
arpl
mov
jl
mov
sub
fimull
cmp
fwait
add
mov
pop
std
mov
lret
out
mov
inc
fcmovnb
call
adc
mov
hlt
pop
mov
out
aam
data16
in
jne
jnp
and
mov
mov
test
mov
xor
sbb
fisubl
add
adc
fisubrl
clc
das
sbb
cmpsb
push
leave
out
sahf
dec
mov
test
fldcw
dec
leave
mov
push
mov
loopne
lock
loopne
mov
shlb
orb
scas
rorl
mov
mov
cmp
adc
push
shrb
not
je
in
mov
call
mov
ds
enter
mov
jno
sbbl
sahf
scas
mov
ja
mov
push
frstor
enter
or
inc
pinsrw
loopne
pop
and
or
mov
into
or
ljmp
adc
leave
lret
mov
js
jecxz
cmp
int3
mov
scas
cmpsb
inc
push
and
mov
xchg
mov
jne
cmp
fisubrs
adc
popf
inc
jl
xchg
lods
cmp
out
and
sub
inc
cmp
mov
cltd
push
push
inc
mov
sub
adcl
xchg
into
mov
add
fcmovu
je
dec
jle
les
int
jmp
test
lea
mov
lods
mov
mov
cs
mov
mov
cmp
scas
xor
mov
mov
roll
xor
data16
inc
ret
pop
or
sbb
loopne
cmpsl
lods
inc
cmp
xlat
pop
xor
cltd
mov
dec
pop
jmp
pop
jl
shl
data16
push
out
popf
ljmp
pop
jnp
icebp
lret
mov
imul
mov
lock
sub
enter
mov
cmp
fs
divl
mov
xor
cmp
imul
fsubrl
jmp
adc
mov
add
aam
ds
mov
repnz
adc
push
loopne
or
aad
xchg
sbb
cmp
stos
iret
sub
outsl
sub
cmpsb
stc
push
scas
pop
xchg
xchg
ljmp
stos
stc
test
or
iret
insl
xlat
add
push
std
mov
pop
in
sub
repz
in
jmp
mov
inc
repnz
inc
test
sub
pop
and
aas
jl
lods
xor
cmc
and
les
insb
mov
adcb
je
mov
jl
jl
push
jbe
pop
xchg
and
lret
adc
sbb
hlt
fcomps
adc
rcll
adc
std
jl
jae
into
push
sbb
in
ds
mov
mov
stc
dec
jecxz
daa
and
lods
xor
test
jo
in
sub
jl
mov
ja
js
lahf
dec
add
and
popa
add
out
jo
mov
jb
clc
fmul
mov
test
sbb
and
cmc
xlat
sub
jnp
fstl
ljmp
xchg
push
xor
cli
add
sub
sbb
test
cmpsb
add
aad
sub
adc
xchg
shll
cmpsb
push
cmp
cwtl
push
sub
flds
scas
insb
mov
mov
cld
lods
dec
sti
loope
aaa
adc
mov
rorb
out
fildl
test
notl
in
and
push
aas
cmp
imul
loop
xor
dec
or
xor
cwtl
cld
in
or
test
in
imul
and
in
mov
mov
add
jmp
push
mov
imul
lock
jmp
jno
lret
xlat
loop
add
stos
dec
fbstp
std
leave
aam
pop
out
mov
pop
dec
out
pop
sarb
or
pop
mov
and
inc
xchg
les
test
stos
mov
outsl
lock
cli
xorl
fwait
and
add
jae
sbb
pop
cmpsl
mov
xor
lock
dec
scas
pop
jno
int
adc
stc
std
push
test
xchg
or
push
sti
mov
movsl
insb
push
je
imul
xlat
test
in
bound
stc
push
xor
roll
call
add
sbb
lock
push
out
push
data16
out
dec
idivb
xchg
cld
xchg
push
push
add
sub
cmpsb
imul
ret
pop
lds
dec
mov
mov
xchg
xchg
inc
icebp
loopne
shlb
xchg
mov
mov
imul
ja
and
pop
cmp
lods
mov
cmpl
xor
push
inc
adc
aam
mov
add
and
sub
mov
pop
jno
mov
jae
into
rclb
jo
mov
push
repz
mov
jp
fsubrl
ljmp
and
dec
pop
xchg
sbbl
ss
xchg
dec
mov
insb
cmp
les
negb
fstpl
mov
mov
inc
adc
mov
mov
in
jge
je
xlat
push
lret
adc
cmp
mov
imul
cmp
sarl
mov
xchg
adc
cmp
mov
adc
insb
xorl
mov
push
pushf
stos
jno
dec
sbb
pop
inc
adc
push
inc
fsubs
ss
lds
cmp
aas
inc
out
cwtl
jne
xlat
cmpsl
jl
dec
daa
push
lods
in
ja
lock
mov
and
clc
call
sub
sub
enter
nop
dec
ss
cmpsb
sub
fstpl
cmpb
rol
ret
int
mov
loop
div
cmp
mov
inc
jno
aas
or
xor
inc
adc
data16
pop
popf
cmp
jne
imul
test
mov
aas
push
cmp
jg
imul
xlat
test
int
loope
popf
pop
fisubrs
jb
pop
sti
dec
pusha
jnp
fstpt
sbb
dec
movsl
and
inc
cmp
daa
daa
out
xchg
pop
dec
bound
xchg
add
xor
in
cmc
jne
rorb
fwait
jmp
sbb
into
xor
mov
or
cmp
out
jns
xor
push
stos
sbb
cwtl
sub
sbb
bound
leave
push
cmpl
mov
xchg
sbb
add
movsl
and
adc
mov
ds
pusha
jae
adc
mov
xor
pop
xor
jge
jge
mov
jns
aaa
fisttpll
xor
gs
or
mov
xor
sbb
inc
mov
cmpl
ljmp
xchg
and
sub
movsl
sub
inc
sub
ret
jno
adc
movsb
add
movsl
hlt
push
sbb
adc
repz
mul
dec
arpl
mov
icebp
cltd
sbb
pop
imul
insb
jae
shrb
jne
inc
sbb
movsb
and
aas
sub
out
mov
cltd
inc
inc
xchg
pop
dec
test
jg
mov
mov
movl
sbb
push
std
lds
pop
lea
sbb
fwait
mov
pop
mov
jl
mov
data16
sbb
gs
vpinsrw
dec
adc
stc
cmp
addr16
shrl
push
inc
lcall
jb
imul
fldt
or
adc
outsb
lcall
jne
mov
dec
pop
popf
scas
xlat
add
inc
je
and
sub
scas
push
mov
sbb
jmp
xor
xchg
frstor
insb
sarl
push
jmp
sahf
inc
hlt
add
data16
jnp
rcrl
test
lret
mov
cs
sbb
pop
fbld
leave
je
lock
popf
enter
jo
mov
lea
adc
mov
mov
test
mov
add
outsl
outsb
jl
les
sbb
es
xchg
mov
xchg
xor
stos
sub
loop
xchg
jg
addr16
call
cld
aad
push
daa
sbb
cs
jmp
mov
inc
inc
idiv
mov
push
mov
orb
sub
insl
mov
xchg
adc
adc
leave
mov
dec
mov
aaa
scas
fadds
repnz
xor
out
mov
lcall
cmpl
jns
imul
push
cmp
popf
add
mov
dec
arpl
jp
adc
pop
call
test
pop
jp
sub
mov
cs
push
cmp
xchg
mov
loopne
mov
mov
sub
insl
bound
push
ja
iret
cs
loop
mov
call
lret
add
sub
insb
and
push
sub
popa
lahf
push
pusha
cmp
cmpb
ss
rorb
pop
rorb
dec
inc
cmp
sti
mov
aaa
push
inc
insl
icebp
cmpsl
lods
cmc
push
outsl
jmp
stos
pop
cli
mov
sub
out
idivb
scas
out
mov
cmp
pop
shrb
xlat
loope
cltd
push
jns
xchg
loop
add
cmp
inc
push
mov
sbb
hlt
xchg
stos
stc
pop
pop
stos
sub
loop
ds
pop
loope
and
push
inc
mov
lcall
xchg
into
fwait
daa
in
xchg
jp
loope
sbb
jns
lcall
jb
es
sub
xor
mov
clc
xor
adc
sbb
mov
push
mov
ja
xchg
sbb
idivl
ret
imul
scas
pop
popa
hlt
cmp
dec
leave
mov
xchg
inc
mov
cmpsb
jg
jno
lods
daa
or
std
sub
dec
mov
fdivrl
cmp
xchg
fisttpll
xor
pusha
sbb
stos
pop
fistpl
sarb
out
jo
push
daa
sub
and
jmp
rcll
sbb
or
fisubrs
push
cmp
inc
lret
cwtl
sbb
int
pop
ljmp
adc
mov
pop
mov
push
movswl
insb
test
mov
mov
xchg
mov
push
cs
mov
pop
bound
dec
es
push
mov
or
mov
mov
mov
out
cltd
and
jl
xchg
psubsw
and
jl
sbb
push
sub
and
out
sub
pushl
dec
xchg
inc
mov
xor
sub
cwtl
push
loop
std
loopne
es
rorb
adc
xlat
xorl
fidivrs
mov
adc
and
loope
push
clc
cmp
pop
xchg
adc
xchg
ret
repnz
inc
inc
push
icebp
cs
test
cmp
leave
xor
mov
adc
pop
and
xchg
leave
dec
or
pushf
mov
pushf
or
dec
mov
cmpsb
adc
pushw
mov
mov
scas
xor
cmp
mov
and
aam
imul
mov
xchg
pushf
lods
scas
ds
inc
mov
adc
adc
sbb
pop
lock
jge
mov
xor
xchg
ud1
push
cmpsb
sbb
nop
dec
push
sbb
arpl
outsl
cmp
jne
jle
daa
lods
xor
call
pop
cltd
xor
es
jns
mov
outsb
pop
stos
cmc
pop
push
decl
lods
mov
mov
push
mov
inc
xchg
pop
es
cmc
roll
cmp
lcall
mov
push
icebp
mov
or
clc
jp
std
jnp
in
gs
cld
or
pop
adc
lods
inc
ret
fwait
xor
stc
jb
xor
cmp
sub
daa
push
pop
sbb
inc
inc
mov
push
jle
aad
mov
and
inc
int
lret
xchg
mov
jl
insb
lcall
in
mov
das
pushf
xlat
push
and
inc
pop
les
mov
sbb
xlat
das
xchg
xor
push
sub
out
clc
and
stc
imul
scas
aaa
fists
shr
push
leave
sbb
arpl
pop
sub
shl
mov
push
adc
pop
add
ror
into
ljmp
sbb
dec
aas
das
mov
sub
lock
mov
loope
sub
mov
push
sbb
mov
or
nop
in
jecxz
adc
xor
int3
xchg
insl
push
sarl
inc
sbb
jge
scas
in
rcll
inc
cltd
or
sbb
lds
mov
rcrb
jmp
cli
repnz
push
pop
repnz
ret
cltd
xor
mov
jb
inc
mov
int
sbb
xor
sub
movhps
push
scas
sbb
stos
lret
repz
cld
lock
mov
cmpsb
add
inc
push
stos
jnp
sub
mov
jl
pop
mov
icebp
popf
repnz
and
fidivl
in
dec
or
mov
mov
push
pushf
push
sub
arpl
bound
ljmp
mov
jle
loope
or
pushf
pop
cmc
cld
ss
mov
push
sbb
dec
lcall
mull
out
push
inc
in
mov
mov
xor
sub
lea
and
xchg
mov
mov
shrl
mov
push
add
lahf
inc
push
sti
repnz
add
arpl
jp
jns
pop
mov
repz
lods
xchg
pop
jbe
xor
adc
push
repz
cmpsb
sbb
cmpsb
adc
mov
loope
pop
mov
outsb
sub
jo
mov
sub
pusha
xor
jb
mov
dec
imul
jnp
fwait
adc
and
xor
aaa
stc
or
sahf
outsl
or
xor
repz
mov
add
mov
cmp
cmpsb
jno
and
xacquire
and
repz
sub
scas
test
push
xor
adc
fistps
gs
mov
lea
call
push
jnp
sub
sub
add
push
fwait
stos
mov
inc
mov
fdivr
clc
or
xorl
mov
lret
adc
movsl
and
jno
incb
sub
xor
mov
push
ret
inc
mov
adc
int
cmp
cmp
mov
ljmp
jbe
xchg
sub
ficompl
lahf
and
pushl
cmp
rcr
pop
loop
xchg
fdiv
orl
stos
sahf
out
adc
push
repz
ljmp
push
sti
or
lret
sarb
mov
dec
push
inc
ret
in
test
dec
frstor
gs
js
sub
adc
and
jl
mov
cltd
sbb
sub
mov
dec
rcll
in
pop
add
mov
jecxz
mov
or
push
mov
outsl
ja
test
mov
std
sub
testb
add
push
push
jno
test
dec
ret
test
mov
mov
iret
mov
es
rclb
xchg
inc
mov
pop
dec
incl
inc
pushf
scas
jo
pop
ror
iret
in
aad
jge
test
xchg
push
std
inc
bound
xor
scas
xor
shlb
popa
arpl
add
insb
mov
xchg
sub
xchg
and
pop
xchg
mov
testl
dec
aaa
add
inc
pop
pop
aam
or
add
out
int3
in
mov
lahf
and
pushf
pop
xorl
add
mov
or
push
xor
mov
jno
sbb
mov
pop
add
fists
jecxz
aas
pop
clc
repnz
movsl
popf
sbb
cwtl
sub
or
mov
dec
mov
sbb
mov
xchg
add
mov
dec
pop
outsl
sbb
pop
mov
outsl
pop
xchg
shrb
lret
mov
xor
pop
hlt
cmpsl
xor
das
mov
stc
sti
fwait
and
out
jne
shll
call
daa
mov
mov
mov
and
lods
lcall
cmp
nop
iret
arpl
test
subb
lods
fucom
sub
sub
and
pop
loopne
mov
inc
fisttps
divb
lret
jmp
addr16
clc
push
xor
imul
adc
jae
repz
out
sub
push
shrl
outsb
xchg
imul
outsb
cmpsb
iret
aam
iret
rorl
dec
dec
test
lock
iret
hlt
cmpsl
sbb
push
movsb
stc
sub
pop
shll
fcmove
mov
scas
mov
fwait
jecxz
cmp
in
arpl
out
pop
push
fwait
dec
mov
lret
ds
dec
rorl
inc
mov
adc
fcomps
sub
daa
imul
fs
pop
and
fmuls
ret
xchg
stos
lds
mov
and
xor
mov
inc
push
hlt
xchg
inc
int
pop
cltd
cld
mov
jmp
xor
push
and
fistps
dec
cmpsb
dec
fsubs
orb
xor
dec
adc
and
pushf
jnp
jbe
add
rcll
mov
xchg
pushf
sarl
push
cmpsb
fildl
test
test
paddw
mov
std
insl
jae
daa
lds
xor
cmpl
inc
test
xor
cli
fldenv
jg
mov
jo
fs
lds
inc
xchg
ror
std
adc
loopne
push
xchg
pop
mov
or
xchg
mov
jnp
push
cmp
mov
jle
aam
ret
and
xchg
sar
data16
or
lods
stc
das
jmp
and
outsb
negb
mov
mov
add
push
jae
int
js
pushf
push
inc
jae
sbb
cmpsb
js
jge
xor
jbe
shl
fidivs
bound
leave
pop
xchg
addr16
mov
mov
pop
pop
jns
mov
xlat
hlt
mov
jmp
or
sbb
jbe
push
push
js
xor
add
pop
push
jne
aaa
sbb
cmp
push
lods
pop
mov
popa
adc
inc
or
jbe
cmp
movsl
jbe
pushf
in
in
inc
es
lahf
rol
rorl
push
out
test
or
mov
cwtl
jns
xchg
jmp
pmaddwd
nop
push
jp
or
fistpll
mov
decl
and
dec
adc
push
loopne
enter
std
imul
jl
jne
add
jp
lahf
js
jb
xor
das
pop
dec
das
cli
int
out
or
inc
adc
mov
xor
test
jg
fidivrl
jnp
fisttpll
cwtl
add
fisubrs
sti
lcall
in
mov
inc
push
xchg
test
cmc
or
push
mov
jbe
pop
adc
test
pop
int
lahf
iret
inc
and
pop
sti
bound
and
inc
lahf
aam
testb
adc
xor
scas
cld
or
imul
fs
cli
jnp
rcrb
jo
ja
mov
jecxz
mov
xor
adc
scas
or
arpl
sub
or
cld
sub
add
outsl
push
cmpsl
add
jns
pushl
lds
test
jg
aam
shll
roll
mov
out
pop
cmp
sub
mull
and
stos
inc
jg
ljmp
les
pop
push
aam
dec
lock
jnp
test
mov
jae
leave
cwtl
fdivs
repz
and
outsl
in
lock
xchg
jno
add
mov
fadds
fimull
test
lahf
sbb
or
cmp
cld
mov
fmull
pop
stos
sbb
mov
jl
shlb
out
js
xor
ljmp
ds
lods
clc
sub
xor
jge
jno
push
cmp
jns
aam
lcall
shlb
cmp
out
xchg
and
data16
pop
mov
enter
std
pop
in
mov
or
paddq
inc
mov
daa
daa
lock
and
mov
fcoml
add
adc
and
aad
cltd
xor
xor
movsl
sarb
jns
add
movsl
lods
mov
idivb
jl
adc
xchg
and
stc
push
aam
out
mov
or
subb
adc
mov
push
sbb
dec
jns
jb
xchg
jo
dec
add
inc
test
xchg
pushf
cmp
imul
popf
mov
sbb
add
and
cli
test
imul
mov
imul
ljmp
fs
mov
sbb
shlb
jge
test
add
fidivl
inc
je
cmpb
add
out
push
and
push
adc
ret
loopne
mov
hlt
mov
daa
mov
cld
inc
push
xchg
inc
test
sbb
pop
jns
inc
mov
out
xlat
icebp
xchg
push
pushf
xchg
push
aas
pop
in
fisttps
pavgw
jg,pt
arpl
adc
pop
push
fld
ds
fs
imul
ja
aas
repnz
mov
xor
dec
inc
lret
hlt
fsubrl
out
pop
jae
jbe
cmc
das
mov
xlat
pop
xor
clc
les
ret
and
dec
and
fstl
cmp
lret
arpl
shrl
mov
and
add
in
jb
dec
mov
popf
xchg
push
fs
push
notb
out
jo
push
xchg
cmp
mov
xor
inc
pop
cmp
adc
mov
mov
test
jns
mov
fs
dec
ret
mov
and
pushw
es
sbb
jmp
jge
fistpll
fildl
daa
jg
mov
mov
inc
push
sti
fwait
dec
mov
daa
shll
test
xchg
mov
inc
xor
outsl
mov
inc
mov
add
out
jmp
leave
js
fldlg2
stc
pop
jp
jb
jmp
sbb
shl
push
xlat
cltd
cmp
psubsw
adc
xor
icebp
inc
ret
xchg
cmp
dec
xchg
rcrl
fucomp
jge
cmp
ss
imul
dec
mov
or
ja
pop
ds
fadds
mov
rorb
xchg
std
xor
adc
sbb
divps
pop
lret
sarl
push
and
push
scas
mov
mov
das
icebp
test
andl
popf
scas
adc
push
dec
mov
pop
push
roll
or
cmp
outsb
aad
sbb
es
and
fidivrl
int
call
mov
sbb
pop
sbb
insl
les
repz
adc
xor
pop
sbb
push
call
mov
cmc
stc
xor
xchg
pop
sti
adc
insl
xor
shl
scas
cli
dec
pop
imul
or
mov
mov
push
push
out
xor
add
cmp
add
dec
fcomps
xchg
dec
faddl
mov
popa
mov
clc
push
xchg
scas
imul
aaa
rorl
pop
aam
ja
rcrb
sub
xchg
inc
jmp
pop
popa
imul
xor
mov
enter
nop
sub
bound
dec
lock
mov
addr16
mov
push
hlt
mov
push
imul
mov
hlt
add
retw
jnp
test
fistpl
push
or
adc
test
mov
sub
mov
or
adc
xchg
int
imul
push
sub
mov
aam
ficompl
in
adc
scas
mov
mov
cmpsb
orb
inc
repz
mov
in
push
lret
push
xlat
push
sbb
sub
mov
mov
jns
sbb
sbb
fcompl
mov
push
fdivrs
xchg
adc
inc
pop
imul
or
or
lods
movsb
imul
pop
mov
stos
mov
mov
into
out
inc
enter
and
xor
mov
popf
xor
adc
xchg
jmp
cmp
xchg
fistps
xor
aaa
test
loop
das
les
push
cmp
adc
iret
and
jno
xchg
arpl
je
ds
pop
dec
movsl
pop
das
and
or
shll
pop
ds
mov
testl
ret
cltd
xchg
or
sbb
xor
addr16
int
dec
inc
loopne
stc
inc
xlat
jp
push
fistpl
inc
outsl
cmp
idivl
or
js
inc
mov
pop
mov
stc
xchg
cmpsl
or
add
add
fbstp
frstor
scas
mov
pop
test
adc
lret
rcll
cltd
push
pop
les
xor
fisubrl
aas
inc
adc
je
aam
popf
push
cmp
call
push
pop
and
cmpsb
cmp
movsl
addl
dec
or
cmpsl
out
and
and
jns
and
push
sbb
mov
cmp
lahf
xchg
movl
mov
iret
scas
jecxz
push
pop
inc
mov
clc
repz
dec
dec
cmp
or
pop
mov
jge
data16
mov
insb
scas
push
insb
or
add
xor
xor
mov
xor
cmp
orb
fbstp
pop
adc
jge
icebp
cmp
aas
xchg
loop
icebp
inc
jb
hlt
insb
cmp
adc
pop
xchg
push
nop
mov
out
mov
sbb
loopne
sti
mov
xchg
jnp
fs
lea
push
loope
pop
xor
mov
mov
adc
ss
inc
pop
or
mov
mov
rclb
mov
and
add
ret
lret
sti
and
xchg
call
fimuls
dec
xchg
cli
jl
fwait
xchg
mov
sub
shll
lahf
jp
bnd
lds
scas
ret
pop
jmp
xlat
mov
test
mov
xor
and
mov
rolb
mov
data16
lds
sahf
sbb
inc
fisubl
pushf
mov
outsl
inc
mov
movzwl
mov
xor
lods
fnstenv
adc
xor
cmpsb
mov
mov
outsb
ss
pop
outsl
cmp
cmp
ror
stos
and
xchg
test
dec
pop
or
sti
jno
jmp
jge
in
sub
inc
xor
jo
xor
shr
sar
bound
pop
insl
add
or
and
fstl
fdivrl
adc
ror
jae
int
xor
pop
jmp
popa
xor
movsb
add
int3
movsb
xchg
imul
js
mov
ds
fistpll
sub
xor
jp
xchg
and
xchg
pop
mov
andl
push
lea
imul
stos
gs
inc
lods
addr16
xor
sub
cmpsl
int
fisubl
adc
ret
lcall
dec
fucomp
into
mov
cwtl
into
fldt
pop
dec
ja
ljmp
jl
outsl
out
or
repnz
push
push
push
bound
inc
push
inc
loopne
test
or
fwait
jns
mov
cmp
jno
test
into
mov
sbb
or
test
pop
aaa
into
pop
lds
icebp
sbb
fsubr
mov
sti
push
mov
insl
cwtl
mov
adc
hlt
in
fdivrs
aaa
rorb
or
imul
ret
shl
sbb
push
call
std
inc
into
aas
lret
add
mov
out
sub
in
cltd
push
cmc
imul
and
imul
inc
std
lahf
jbe
ret
icebp
push
shlb
shrb
in
jmp
js
lcall
rcr
sbb
daa
mov
jg
mov
dec
mov
dec
add
outsl
rorb
mov
aas
xchg
dec
es
jbe
or
push
or
out
shlb
mov
or
in
push
addr16
jae
jo
jge
loope
ljmp
pop
lret
mov
lret
scas
adc
push
pop
mov
xlat
ja
sub
cmpsb
fstpl
push
hlt
mov
cmp
inc
adc
xor
mov
sbb
pop
cld
jmp
test
clc
inc
je
loop
push
int3
jecxz
mov
add
nop
addr16
insb
je
aad
push
sbb
jg
outsb
enter
shrb
scas
sub
or
das
and
or
les
pushf
stos
dec
add
push
pusha
jns
out
loope
ret
jp
pop
popa
xor
pop
test
mov
pop
bswap
and
xor
xchg
sti
in
test
adc
dec
movsb
iretw
test
jl
and
pop
jmp
shlb
fcompl
sti
jg
loope
js
sub
mov
cmp
jecxz
movsl
mov
jle
inc
fmuls
sti
dec
and
sbb
mov
outsb
inc
mov
repz
mov
mov
xchg
cmp
imul
cmpsb
pop
xor
aam
out
inc
push
popf
loopne
out
in
inc
lds
jmp
and
fwait
sbb
stos
jg
mov
pop
sbb
xor
xor
inc
stos
cmp
pop
pop
push
push
pop
push
stos
adc
pop
cmp
cmpsl
sbb
popf
rcll
sbb
clc
mov
aad
xorl
addb
pop
sub
rcrl
fmuls
cmp
dec
mov
das
filds
xchg
sub
pop
out
sub
dec
add
cmpsb
inc
adc
test
fildll
data16
pop
fwait
icebp
mov
and
es
aam
mov
sbb
lret
xchg
int
xor
push
int
in
sbb
lock
fsubl
xchg
push
sub
adc
jno
xchg
mov
lidtl
notb
push
inc
jae
outsb
pusha
cmp
sarl
arpl
add
sbb
lret
out
cmc
jnp
lcall
push
cmc
hlt
lods
fidivrl
pop
xchg
xor
xchg
and
mov
test
jp
xor
or
gs
pop
dec
stc
mov
int
hlt
and
out
push
or
fdivl
int3
cmp
inc
or
rclb
pop
aam
roll
scas
movl
mov
fnstenv
add
adc
mov
and
mov
xchg
xor
or
fwait
aas
lods
imul
or
jae
pop
xchg
and
push
data16
fcmovnb
out
xor
push
or
xor
adc
dec
adc
sbb
dec
pop
or
out
mov
popl
mov
out
and
add
mov
les
in
aaa
stos
in
xor
and
sub
lahf
mov
into
ss
jbe
mov
xchg
jmp
jae
cld
out
cli
les
push
cmp
lcall
inc
pusha
in
sarl
ret
outsb
pushf
sbb
pop
fnstenv
mov
inc
hlt
xchg
inc
adc
cmp
push
inc
in
stc
nop
push
dec
mov
mov
or
mov
mov
scas
or
fwait
icebp
or
pusha
in
push
or
sbb
push
addr16
les
test
scas
xchg
dec
rcrb
aad
in
aam
mov
inc
in
ret
mov
int3
jl
mov
jno
leave
xor
lods
dec
sub
jle
scas
sub
sbb
xor
and
mov
add
cmp
bound
in
inc
lcall
pop
inc
popa
pop
xchg
jnp
enter
mov
int
cltd
shlb
sbb
jle
sahf
cmpsl
and
sysenter
scas
out
ja
jle
lods
stc
divb
inc
inc
jns
jns
mov
adc
loope
add
pop
push
or
mov
enter
xor
aam
push
loopne
adc
jae
mov
mov
arpl
shrl
scas
mov
ss
dec
add
int
jns
arpl
insl
fs
jb
test
dec
mov
mov
sbb
test
aam
inc
add
and
into
dec
addl
pop
xchg
xor
in
into
mov
jle
or
cmp
push
sti
sbb
jae
xor
addr16
dec
mov
fldcw
jmp
ret
jl
call
sbb
jo
cmp
sahf
ljmp
push
out
or
ljmp
mov
in
xchg
gs
sbbl
cmpsl
out
sub
sahf
test
into
mov
and
mov
cli
sub
cmovs
out
imul
out
mov
mov
in
pop
outsl
xchg
jp
out
jae
scas
into
inc
mov
test
xchg
lcall
add
jb
data16
cmp
insb
add
lea
jg
cwtl
mov
mov
insb
shll
push
setne
add
stc
je
ds
jbe
pop
lods
sub
xchg
xchg
flds
jae
and
push
mov
jp
into
mov
mov
or
out
adc
lcall
mov
addr16
lahf
push
sbb
das
dec
pop
into
adcb
clc
pop
mov
jecxz
loopne
test
lcall
fdivl
incb
rorb
lahf
insl
cld
xor
or
sbb
test
and
loope
and
cmp
pusha
fs
sub
fistpll
jnp
xchg
int
lds
dec
aad
into
xchg
mov
loopne
addr16
and
imul
xor
scas
ficompl
pop
mov
mov
repz
push
or
iret
adcl
movsl
ret
pop
and
dec
cmp
pop
add
leave
call
mov
cmp
xchg
nop
jne
insl
mov
inc
pop
insb
movsb
pop
jns
inc
lahf
xor
push
inc
roll
and
mov
bound
test
call
ficoms
scas
push
mov
dec
fidivrs
or
mov
cltd
subl
cld
es
pusha
lock
aad
cmp
mov
sbb
divb
lock
dec
mov
inc
cmpsl
popf
adc
pop
mov
sub
cs
nop
mov
pop
xchg
xor
jl
data16
outsl
lret
movsb
enter
loopne
imulb
cmpsb
mov
cmp
dec
push
xchg
dec
addr16
int3
test
test
push
jmp
rol
dec
cmp
mov
mov
push
fldl
test
call
push
jns
stos
adc
mov
pop
fcoms
fs
es
mov
sub
or
popa
mov
adc
loop
fbld
addr16
jae
adc
repnz
in
fimull
mov
cwtl
ss
lock
mov
mov
shl
push
int
mov
je
cmp
pop
push
mov
or
cmp
movsb
fwait
scas
out
mov
ja
cmp
aas
insb
mov
xorl
push
xlat
inc
jbe
jnp
fcomps
adc
mov
sbb
xor
jne
ljmp
stos
push
and
pop
nop
out
add
xor
in
cmpsb
xchg
enter
sub
movsl
push
and
out
xchg
jmp
push
pop
inc
push
jns
or
push
int3
push
inc
sub
in
fldt
out
push
xchg
fs
lret
and
fists
mov
xor
loope
dec
adc
test
fwait
xorl
jb
icebp
cltd
pop
push
les
pop
push
pop
push
sub
xor
fs
and
in
dec
outsb
shll
mov
mov
adc
repnz
lea
add
push
xchg
cwtl
inc
roll
mov
mov
lea
cmp
loopne
mov
mul
cli
dec
dec
dec
dec
jecxz
add
cmpsl
pop
out
jae
sbb
push
push
pop
sub
pop
mov
xchg
and
jecxz
sbb
stc
push
mov
xor
loope
loope
add
int
dec
jge
mov
enter
fwait
push
sub
mov
cs
imul
sbb
cmpsb
sub
out
shll
into
movsb
xchg
in
shl
mull
cltd
cltd
loop
pop
mov
lret
add
inc
sbb
mov
and
iret
fcomi
fisubl
push
arpl
sbb
repnz
mov
or
rol
inc
mov
test
into
pop
push
mov
mov
mov
and
adc
xchg
or
xor
sub
cmp
and
and
insb
fldenv
insl
std
lods
test
cmp
cmp
ja
push
pop
xchg
incl
jle
popl
dec
cmpsb
test
push
cltd
jns
xchg
inc
mov
mov
inc
jp
mov
lahf
pop
jnp
inc
out
andb
push
adc
or
jle
mov
fs
adc
std
push
fbstp
jl
mov
je
fistps
shrl
xchg
sub
mov
gs
dec
jg
and
imulb
add
into
mov
rcrb
ljmp
enter
mov
inc
mov
pusha
test
push
pop
test
push
cmp
out
stos
xchg
push
jnp
cli
aad
lret
test
outsl
sub
ret
cld
mov
sbb
dec
inc
iret
push
dec
in
or
xchg
or
sbb
in
jnp
fwait
sub
add
mov
inc
mov
mov
rorl
arpl
stc
pop
lods
sbb
pop
popa
dec
jl
lock
loopne
rcll
and
adc
add
mov
bnd
add
mov
ret
int
adc
cmp
sbb
mov
fwait
jmp
data16
sub
and
and
xor
sbb
popa
adc
scas
mul
sub
cmp
xor
sahf
lock
mov
cmp
stc
or
jg
fdivrp
pop
shll
fwait
xor
mov
cmp
mov
push
dec
xchg
enter
addr16
loopne
imul
ret
das
je
vmovhps
outsl
jne
pop
mov
dec
adc
mov
mov
xchg
int
mov
les
inc
rcrb
xchg
push
outsb
loope
js
push
sub
out
or
bound
imul
xchg
adcl
inc
mov
add
adc
stos
out
mov
in
or
cli
push
les
push
adc
hlt
pop
xchg
cltd
lods
xor
push
cmpsb
stos
arpl
movsb
test
je
and
inc
push
fcomps
aam
cmp
lods
dec
push
push
mov
andb
push
out
int3
int3
arpl
sti
pop
push
mov
push
jne
icebp
sbbb
and
xor
es
mov
das
dec
outsl
or
mov
mov
jl
mov
cmp
sti
cld
xchg
iret
push
push
movsl
jns
jns
jge
mov
stos
xor
jnp
pushf
les
pushf
and
sbb
outsb
cltd
out
or
xchg
add
jmp
push
lods
test
ret
xor
and
les
or
push
shlb
dec
aaa
lods
pushf
mov
out
push
shlb
sbb
mov
cli
out
xlat
stc
lsl
sti
add
aas
les
add
imul
sbb
pop
or
in
inc
cmp
jo
pop
call
inc
sub
mov
dec
or
cwtl
insl
mov
xchg
xchg
lret
insb
rolb
shrl
mov
imul
pop
inc
pop
or
push
hlt
adc
leave
dec
pop
jge
xor
int3
aam
fs
cmc
sub
add
jb
shll
jae
pop
dec
mov
cmp
mov
jecxz,pn
mov
mov
stc
jmp
gs
out
stc
pusha
orl
push
arpl
sub
or
dec
fucomi
in
push
les
mov
or
cmc
lods
dec
xchg
dec
jbe
lcall
test
bnd
jne
roll
add
sub
adc
pusha
xor
ud1
ja
je
daa
inc
add
arpl
insb
mov
xchg
mov
jb
add
std
out
call
cmp
mov
scas
call
sub
mov
adc
fwait
loope
in
fwait
or
or
jle
push
shlb
mov
mov
icebp
sti
cld
adc
pop
sub
ficoml
mov
cmpsl
sbb
push
scas
in
cmp
out
sahf
jle
fstl
test
loop
mov
cmp
aam
sti
xchg
push
push
push
mov
and
popa
fcomip
and
jne
jle
fwait
in
outsb
pop
mov
lock
or
jp
shl
pop
out
jle
or
xchg
stos
das
loop
jle
inc
dec
jmp
sub
pop
sbb
ret
lcall
sbb
out
lds
adc
loop
mov
in
jg
sub
in
jne
mov
iret
mov
aaa
loope
xor
sbb
xor
xchg
sti
jo
xchg
mov
in
jne
pusha
jmp
lcall
jecxz
dec
cmpsl
mov
pop
dec
mov
cld
sbb
and
push
jle
aas
pop
add
xchg
stc
lods
or
or
addr16
pop
mov
jae
add
inc
repnz
arpl
and
xor
loope
fmull
push
and
outsb
cmp
in
xchg
int3
push
test
sub
inc
ljmp
xor
loope
adc
dec
sbb
nop
jg
sbb
sbb
sub
dec
out
pop
je
test
stos
sbb
jp
push
fnstenv
cwtl
cmp
inc
fbstp
pop
pop
lret
sar
and
and
jns
jnp
outsl
mov
cld
repnz
adc
pop
je
jmp
les
shll
cmc
xchg
int
or
sub
cmp
mov
cs
dec
pop
adcb
test
jecxz
xchg
lea
fcmovne
into
cwtl
sub
mov
and
xchg
cmp
inc
dec
add
lock
ret
stos
cmp
ret
flds
xchg
loopne
lcall
imul
cmp
add
jno
cmc
int3
ret
ljmp
pop
cltd
lahf
and
stos
mov
pop
sub
add
xor
push
pop
and
bound
or
stos
je
daa
mov
adc
jl
xchg
sbb
mov
das
pusha
add
lret
mov
rol
ficomps
lods
adc
sub
sbb
scas
out
sbb
cmpsb
loope
and
shlb
stos
jns
shl
and
adc
adc
cmp
xor
xchg
add
test
mov
aam
movsl
int
into
push
addr16
call
adc
fcoms
mov
rcl
push
std
cli
xlat
and
pop
ja
dec
daa
sarl
adc
xlat
xor
js
loope
or
lea
dec
push
test
mov
rorb
push
push
inc
sbb
add
and
pusha
arpl
cmp
shl
icebp
pop
fld
xchg
adc
and
pop
arpl
mov
cmp
mov
mov
inc
mov
sbb
fiadds
call
xor
nop
push
insl
jnp
mov
pop
mov
mov
sbb
mov
or
adc
leave
sub
or
xchg
psrad
lfs
inc
xlat
pop
jns
sbb
fs
int
test
mov
pop
icebp
out
jno
movsb
push
fcomps
fwait
test
sbb
jbe
or
insl
out
or
mov
jbe
push
sbb
loop
adcl
xchg
mov
jbe
pop
pop
inc
or
lods
in
adc
mov
jge
in
xchg
cwtl
and
cwtl
scas
sub
ljmp
push
xchg
mov
daa
ja
adc
cmp
sub
jl
sbb
or
push
pop
out
or
or
mov
sub
mov
cs
lret
imul
shrb
test
sbb
testl
inc
cmp
hlt
dec
mov
lret
into
fcoml
nop
lea
mov
or
scas
dec
mov
sbb
cmp
jnp
dec
ret
aam
sub
inc
lret
dec
xchg
outsl
dec
push
test
gs
cmp
mov
pop
cltd
mov
cmpsl
and
cmp
lods
add
sbb
pop
mov
adc
mov
arpl
ljmp
pop
lret
outsb
pop
adc
dec
popf
es
mov
sub
sub
inc
jge
dec
addr16
sbb
or
mov
adc
gs
pop
not
adc
pushl
cmc
xchg
cmp
ljmp
mov
pop
icebp
xchg
shll
test
and
dec
xchg
push
movsl
int3
or
aad
nop
dec
cli
xor
cmp
adcl
xor
into
mov
sbb
or
ss
adc
sbb
push
pop
inc
mov
pop
pcmpeqd
push
mov
fcoms
mov
arpl
repz
mov
aad
jmp
add
aas
inc
pop
and
ret
push
aam
roll
and
xor
lret
test
das
sub
cmpl
leave
stos
pop
dec
in
mov
push
mov
xchg
or
repz
inc
fs
shr
pop
daa
es
add
pop
fstpt
mov
gs
pop
jecxz
mov
cmp
dec
xor
jno
add
pop
xor
push
scas
and
imul
or
icebp
leave
jp
ret
sbb
fstl
shrb
sub
scas
or
insl
in
add
shrb
sub
je
mov
in
ds
add
into
mov
pop
cs
mov
adc
add
scas
cli
jmp
mov
shlb
jl
mov
xchg
dec
sub
and
lods
and
pop
adc
cmp
call
pusha
or
add
das
pop
rorb
sub
popf
arpl
sub
sub
in
pop
mov
paddsb
loop
addr16
aaa
push
test
sub
fwait
roll
dec
in
adc
hlt
xchg
ret
outsb
mov
inc
jecxz
orb
sbb
pusha
dec
mov
loopne
test
mov
scas
movsl
or
loopne
jg
addl
xchg
enter
sbb
pop
inc
adc
imul
or
mov
nop
bound
mov
push
ret
adc
ret
arpl
jmp
cmc
xor
mov
adc
cmp
inc
push
dec
jmp
popa
sahf
jnp
mov
ror
mov
mov
sbb
out
sub
icebp
lret
das
fs
dec
aam
gs
xchg
lea
insl
mov
andl
mov
cmp
jge
lods
sahf
push
sbb
xchg
sub
adc
xor
outsl
ljmp
or
in
inc
lock
mov
mov
lock
lret
rclb
cld
stc
push
imul
scas
inc
fistps
pop
xor
lods
push
jle
out
jg
loop
aaa
push
sub
cwtl
mov
loope
mov
ret
or
notb
jp
shll
xor
int3
fidivl
pop
inc
jecxz
int3
cld
fadds
push
mov
das
movsb
mov
jno
test
testl
je
push
cld
add
adc
stos
xor
out
andl
and
scas
mov
fdivrl
fs
cli
push
adc
mov
iret
sar
pop
inc
lahf
into
add
mov
sahf
je
jbe
orl
or
fwait
cwtl
aam
mov
lret
pop
sbb
mov
enter
in
mov
xor
lock
lds
rep
mov
icebp
push
jb
mov
adcb
test
inc
add
sbb
popl
dec
pop
lods
mov
mov
xchg
insl
je
jns
and
stos
mov
cmpl
dec
cmp
std
add
dec
nop
inc
pop
loop
gs
jmp
mov
jl
fwait
outsl
and
cli
dec
pop
mov
arpl
dec
pop
aad
jno
loopne
fsub
stos
insl
xor
or
adc
inc
fwait
jl
mov
inc
push
sti
aam
je
dec
pop
nop
stc
jns
fcmovne
dec
xchg
dec
testb
call
mov
xchg
push
ret
ss
nop
mov
jecxz
mov
nop
fs
sub
mov
loop
mov
ss
push
jo
adc
mov
jl
lods
sub
mov
xor
mov
xchg
mov
adc
and
lods
mov
sub
shufps
stos
loopne
jmp
dec
or
mov
xor
fistpl
mov
enter
and
xchg
and
push
shll
shll
fsts
arpl
fwait
sub
movsl
mov
xchg
in
jo
mov
fcompl
adc
pop
hlt
or
stc
leave
pushf
fnsave
int
adc
rolb
jb
xchg
adc
rcl
sti
fldl
call
insb
xor
js
test
lock
push
jmp
mov
jg
js
repz
scas
test
outsl
mov
call
mov
jle
movsl
mov
stc
push
lds
adc
mov
mov
pop
out
adc
fbstp
rcrb
cmp
jae
inc
lods
mov
pop
pop
adc
xchg
insb
lock
mov
jno
int3
inc
clc
sbb
rolb
inc
movsl
stc
mov
dec
notb
lds
movsl
jns
dec
lahf
dec
or
xor
inc
int3
lcall
lods
clc
ja
sbb
xchg
rcrl
adc
push
cld
testb
repz
add
pop
cmpb
fbstp
lock
dec
lods
xchg
jno
sub
mov
rolb
arpl
xlat
hlt
or
sbb
cmp
inc
sub
mov
adc
outsl
insl
mov
and
loop
add
or
or
out
fistps
dec
push
xchg
incb
dec
and
cmp
enter
pop
shlb
mov
stos
add
add
mov
popa
lods
add
or
dec
mov
adc
bound
test
into
scas
mov
adc
xor
insl
shl
in
inc
lods
push
and
push
out
rcll
outsb
jge
shrl
outsb
out
jl
xor
dec
or
xchg
repnz
cwtl
lret
xchg
ss
xchg
cld
out
dec
maskmovq
testl
sti
push
jns
jbe
adc
pop
incl
cwtl
js
aas
ret
fsubr
mov
inc
pop
jne
mov
cmp
mov
ret
repnz
jecxz
sub
stos
mov
shlb
and
push
sbb
outsl
cli
mov
mov
mov
jne
push
cli
pushf
iret
push
icebp
sbb
nop
ret
cmc
lods
add
in
sbb
xchg
ret
dec
pop
inc
leave
cmpsl
stos
pop
je
sbb
xchg
sbb
imul
notw
clc
inc
xchg
insl
jns
movsb
stos
add
push
dec
adc
add
fnstcw
in
cwtl
loop
pop
inc
lret
out
pop
sub
mov
mov
xchg
mov
and
mov
mov
out
dec
mov
xchg
jle
sbb
pop
loopne
in
pop
dec
stos
lods
insb
mov
lods
adc
mov
aam
stc
cmc
leave
jnp
push
inc
jno
roll
mov
lods
cmp
mov
ret
push
add
push
or
ja
sub
fs
insb
push
popf
or
mov
add
mov
mov
jg
sbb
lret
mov
push
xchg
push
xor
aam
ds
stos
mov
or
or
clc
jl
movsb
or
jl
in
fcmovb
sbb
movsb
mov
xchg
add
test
push
outsb
in
pushl
and
arpl
pop
pop
daa
fisubrl
in
loope
fildll
fadds
stos
xchg
sub
pop
adc
jp
jb
js
psllw
jecxz
jae
xlat
lea
push
fstp
imul
ja
out
loop
push
cli
xchg
pusha
das
aas
out
insl
push
mov
scas
push
negl
dec
cmp
lcall
into
xchg
lock
jo
lock
pop
aad
pop
dec
lock
push
cltd
clc
lahf
arpl
fisttpl
stc
test
ja
inc
ds
pop
jge
out
adc
mov
adc
mov
iret
cld
xchg
fucom
mov
dec
stc
popa
frstor
inc
les
pushf
push
mov
aam
sahf
sbb
xchg
sbb
xor
rclb
mov
popf
add
lahf
mov
mov
addr16
dec
cmpsb
stc
fdivs
movsb
push
ja
sbb
aas
out
sub
je
push
ljmp
fldenv
sbb
lds
adc
popa
clc
sbbb
lret
ljmp
ret
inc
adc
out
dec
lds
pop
mov
loop
imul
fwait
test
cld
lcall
mov
aaa
adc
adcl
shlb
lods
push
jns
out
outsl
cmp
fs
sbbb
cmc
shl
in
adcb
inc
dec
cmp
jne
jp
sbb
int3
dec
je
add
loopne
cmp
sub
pop
lret
in
hlt
into
jl
mov
sbb
into
mov
inc
xchg
lea
inc
jmp
aam
cmpsl
sub
packsswb
xchg
jae
xor
push
loopne
mov
mov
fwait
mov
in
cld
jnp
inc
in
les
cmc
dec
sbb
dec
fdivrp
add
push
xlat
push
rcrb
mov
push
rclb
outsb
adc
push
test
push
out
cmpsl
les
repz
movsl
das
and
pop
in
xorl
inc
push
cltd
aad
inc
test
sbb
imul
add
or
xchg
fdivrl
adc
inc
adc
cltd
add
mov
mov
test
mov
test
call
push
mov
les
and
jg
das
pop
add
mov
sbb
jne
add
mov
pop
adc
push
adc
or
push
lods
inc
push
test
rcrb
test
popf
lret
adc
je
cmpsb
push
orb
jb
jno
iret
jns
nop
sub
mov
push
das
sbb
xor
sti
pop
lock
sahf
xor
dec
jbe
lahf
int3
xor
repnz
xchg
in
pop
add
jne
ud0
add
xchg
out
lds
sub
jg
sub
inc
outsb
rcrb
sbb
dec
sti
mov
aad
out
imul
in
decl
int
mov
mov
xchg
jbe
pop
inc
mov
repnz
inc
fdivr
ljmp
push
gs
cld
mov
mov
fs
lock
out
and
adc
mov
rolb
cld
fdivl
cmc
les
mov
dec
mov
cmp
out
cmpsl
ss
gs
imul
icebp
pushf
push
ror
or
test
pusha
jle
cs
mov
mov
iret
dec
test
xchg
mov
cli
dec
mov
xor
je
mov
sub
cld
test
mov
cmp
push
mov
fcomps
inc
cwtl
out
jp
fdivr
xchg
popf
and
mov
movsl
jae
aad
lods
dec
push
pop
movsl
sub
lea
cld
pusha
das
push
and
xlat
pop
das
rcll
lcall
mov
shlb
push
ja
rcrb
push
and
mov
out
sub
and
adc
scas
mov
cmc
jecxz
stos
ret
cmp
or
add
xchg
mov
push
dec
pop
aam
pop
cmp
mov
nopl
test
insl
pop
jl
adc
add
mov
popf
jl
xchg
sahf
xor
and
mov
sarl
ret
push
cmc
test
inc
pop
aad
mov
mov
arpl
std
fsubrs
inc
adc
jp
lods
jecxz
fsubrl
dec
mov
push
inc
int
insl
push
dec
orb
push
dec
bound
push
xor
sbb
js
push
loopne
push
dec
and
mov
add
into
into
adc
adc
push
and
test
pop
scas
sub
sbb
lock
negl
sub
fmul
pusha
mov
stos
in
fildll
addr16
sbb
mov
sbb
in
mov
loop
cmp
test
mov
mov
loope
sub
into
mov
xchg
addr16
cli
test
fsubr
mov
ret
xor
add
pop
aam
mov
dec
push
fisubrl
jne
push
pusha
stc
pop
test
xor
mov
lahf
inc
inc
mov
fsubl
in
sub
testb
roll
jae
pop
sub
cltd
pop
divl
adc
inc
popl
test
push
mov
aam
inc
mov
cmpsb
xorl
inc
mov
ja
cli
lret
fldcw
inc
push
pop
pushf
sub
push
push
int3
cmp
aas
pop
xchg
mov
mov
pop
out
lods
dec
xor
dec
add
rolb
fdivs
lret
push
jmp
lret
in
pop
mov
and
outsb
mov
lds
aad
jne
push
inc
pop
add
ds
gs
scas
inc
xchg
pop
push
fdivp
insl
xor
mov
int3
xchg
jno
cmc
mov
jae
ljmp
mov
outsb
jnp
gs
mov
push
pop
sbb
adc
inc
fstps
dec
ret
adc
andl
inc
and
push
cs
jbe
outsb
cmp
adc
js
xlat
jg
insl
outsl
stos
sbb
insb
dec
mov
and
pop
ss
pop
xchg
and
in
pushf
repnz
add
push
xorb
or
xor
cmpsl
pop
mov
outsb
jmp
inc
pushf
jae
fistps
mov
cwtl
push
mov
pop
mov
push
enter
sti
in
stc
in
mov
mov
movsl
inc
cld
push
sbb
lahf
and
adc
push
repnz
imul
loope
jmp
xlat
imul
das
repz
inc
sbb
mov
lahf
fidivs
and
or
mov
hlt
out
adc
arpl
jmp
xor
xlat
ljmp
lret
xor
xchg
pop
js
pushf
sbb
pop
les
cs
out
in
lahf
scas
nop
dec
inc
dec
fstpl
daa
add
push
pop
xor
mov
test
cmc
js
and
cli
mov
enter
xor
scas
mov
insb
outsl
sub
outsb
cmp
mov
and
mov
imul
push
jmp
jb
lock
into
or
xorb
shlb
mov
daa
jmp
mov
insb
or
sbb
pop
push
popa
and
subl
xlat
inc
andl
aas
jae
adc
mov
movsb
cmp
push
popa
sub
outsl
enter
into
rcrb
mov
xchg
cmp
test
daa
daa
nop
jp
scas
ret
inc
jl
xchg
jp
nop
fstpl
xchg
jp
lret
aam
jb
or
or
jl
lds
adc
aam
scas
aaa
and
hlt
mov
test
in
fdivrs
xchg
cli
pop
lahf
ret
pop
data16
rcll
orps
in
jl
loopne
sub
bound
lods
rorl
lods
jbe
in
pop
sti
cld
and
dec
cld
ljmp
stos
cmp
and
leave
addr16
push
or
imul
mov
addr16
sahf
dec
adc
sahf
frndint
adc
adc
jns
gs
icebp
rorb
rol
xor
adc
sbb
pop
inc
mov
test
mov
cmp
test
aaa
outsl
sbb
cmp
ficomps
mov
in
sub
repz
inc
lods
jl
ja
push
dec
cmp
xchg
mov
xchg
push
scas
in
dec
idivb
test
push
fs
rcrb
cltd
push
sbb
cmp
jns
or
lahf
jno
std
lds
dec
or
lock
xor
leave
xchg
rcrl
pop
jp
xor
lahf
les
inc
orb
out
jo
push
pop
rorl
cmpb
push
jmp
cmp
in
sbb
and
cs
dec
sub
xchg
sub
dec
xchg
ret
push
pop
outsb
add
stos
in
lahf
cmp
cmp
stos
jg
in
fadds
push
jp
xorl
cmp
pop
jl
out
or
aad
fcmovu
clc
mov
shll
in
lret
jle
dec
ljmp
cmp
inc
int3
cmp
data16
xchg
add
jne
add
cli
mov
dec
ljmp
cwtl
and
cld
push
outsb
aas
mov
mov
adc
lock
mov
xchg
push
xor
sub
add
js
lods
pop
xorb
sbb
pop
lcall
xlat
add
lret
xchg
push
xchg
sub
dec
out
dec
mov
cli
mov
adc
mov
out
push
mov
mov
test
sbb
ja
stos
das
mov
pop
jnp
jl
nop
shrl
cmp
pop
clc
jno
daa
mov
imul
jecxz
repz
mov
std
in
out
jno
xchg
scas
gs
xlat
lret
fdivs
add
jo
lahf
loop
xchg
iret
sub
fs
pop
or
pop
fldcw
or
int
xchg
or
push
jmp
lea
adc
dec
add
adc
in
out
dec
jb
out
rcrb
adc
lea
in
stos
lret
lcall
test
inc
pop
cmp
fsubrs
sub
fisubrs
cs
cmp
pop
fwait
std
int
jl
or
movsb
sbb
fsubp
shll
mov
lret
shll
imul
cmp
cmp
hlt
mov
mov
add
ds
movsl
sub
mov
or
lret
push
adc
jb
aam
jns
sbb
xchg
dec
stos
in
or
xlat
mov
cmovp
aad
mov
addb
cltd
jbe
std
insb
xchg
sub
imul
arpl
fs
into
fwait
stos
adc
push
insl
test
jge
in
outsb
xchg
cmp
cli
sti
popf
inc
push
inc
xchg
push
iret
jmp
int3
pop
xor
in
pop
xchg
sti
push
ret
out
in
fsub
cmpl
lods
push
mov
testb
loope
sub
jo
add
xchg
pop
sbb
or
push
into
xor
push
sbb
xchg
ja
ds
test
ret
jg
sbb
and
cmp
push
mov
and
dec
xchg
push
add
xchg
repnz
pop
movsl
js
popa
jecxz
cli
jnp
lock
push
jle
lock
dec
aas
or
adc
es
mov
pop
and
rorb
adc
push
jne
adc
int3
stos
adc
rolb
mov
xor
sbb
dec
aas
add
mov
dec
and
aas
sbb
pop
lea
arpl
mov
sub
push
pop
ret
xorb
popa
adcb
cmp
inc
pop
adc
add
adc
ffreep
xchg
rcrb
incl
movsb
xor
inc
out
hlt
sub
ret
loopne
scas
dec
insb
mov
out
mul
out
adc
into
imul
sbb
movl
notl
adc
mov
cmp
inc
fwait
push
sahf
pop
test
in
xchg
cs
sbb
and
fstpl
or
call
stos
push
mov
mov
mov
cmp
stos
jle
sub
loope
dec
mov
cltd
jecxz
adc
data16
aam
xlat
pusha
and
repnz
stos
mov
aam
lret
fidivl
or
leave
sub
lret
jge
push
out
divb
sti
mov
ret
add
dec
hlt
movsb
fcmovnu
fsubrl
lea
ds
sub
sbb
jmp
imul
or
pushf
call
pop
fadds
push
cmp
xor
bound
sbb
mov
mov
insb
stc
je
xchg
sti
ds
js
push
or
push
sbb
push
push
or
mov
push
lret
cmpsl
mov
push
insl
mov
cmc
push
popa
cltd
aaa
adc
clc
mov
out
imul
mov
daa
repz
roll
icebp
fmuls
adc
fidivl
fstp
mov
inc
jp
les
cmp
dec
das
fisubrl
push
push
push
icebp
or
ret
sbb
lock
or
mov
sbb
imul
in
fidivrs
clc
mov
add
or
push
add
adc
mov
jecxz
arpl
cltd
lods
dec
out
push
jae
cmp
mov
jge
dec
into
test
push
pusha
ffree
lret
ljmp
pop
sbb
test
out
sbb
out
fstps
fstpt
test
sbb
mov
and
pop
cmp
add
in
push
shl
lods
cwtl
call
jns
mov
push
xorb
lds
push
leave
pushl
je
fs
push
pop
mov
push
or
arpl
insb
fistl
mov
lods
adcb
ss
repnz
andl
sub
jno
push
daa
jg
nop
add
mov
popf
adc
cltd
mov
jno
imull
icebp
or
jne
loop
push
arpl
das
ds
mov
or
mov
test
leave
dec
ja
mov
mov
mov
adc
cmp
imul
cmp
xchg
es
in
lock
mov
mov
sbb
pop
pop
jg
leave
movsl
mov
jmp
or
push
jne
test
push
repnz
mov
push
fisubs
stos
fs
jmp
cmp
or
jno
push
fiaddl
sbb
jae
jbe
imul
mov
jle
testl
mov
xchg
adc
in
xor
mov
push
pop
sbb
rorl
pop
push
dec
cmc
inc
pop
cmpsb
fs
cmp
dec
xlat
fnstsw
or
les
repnz
dec
xchg
mov
push
xor
add
fwait
adc
in
idivl
sub
hlt
inc
xchg
push
hlt
pop
dec
out
mov
fdivl
mov
push
movsb
jg
pop
jns
pop
daa
fucom
out
add
ret
xchg
dec
sub
push
pop
ljmp
fildl
xchg
pop
or
popa
pushf
test
cmp
xchg
outsl
and
lret
fldcw
dec
outsb
xor
mov
mov
ror
dec
shl
sub
jo
jne
add
push
push
jno
repz
pop
mov
push
fs
callw
inc
ret
les
fwait
shrl
enter
lret
dec
repz
pop
jne
adc
cmp
dec
jbe
push
fistps
mov
inc
out
mull
cli
inc
fbstp
fistps
pop
std
or
mov
mov
jl
sbb
sub
xchg
xchg
add
enter
pushl
jmp
mov
dec
jb
popa
les
sbb
stos
ja
xlat
test
sbb
xlat
ss
insb
loope
xor
adc
jecxz
les
push
inc
lahf
pop
popa
and
xor
sbbl
add
push
lret
pop
mov
sub
int
les
push
in
insb
jae
cmpsl
xor
mov
jg
and
inc
cs
sbb
rcl
dec
lock
mov
les
jns
repnz
lret
fdivrs
jmp
mov
pop
jnp
mov
sub
mov
xor
out
clc
mov
push
fildll
lea
insl
fdivp
inc
iret
orl
mov
loopne
mov
ja
lret
pop
sbb
or
aaa
in
shl
add
stc
adc
repz
fs
repz
cwtl
or
inc
scas
fidivl
inc
push
inc
pusha
sub
sub
int3
pop
sub
pop
sub
arpl
push
push
jp
fnstsw
and
cmp
fiaddl
and
lods
xor
jp
inc
mov
sarb
inc
repnz
add
push
push
and
loope
je
in
and
popf
iret
cmpsb
dec
dec
adc
mov
into
mov
lods
pushf
add
mov
mov
jae
xchg
xchg
hlt
lcall
ficomps
rol
mov
xchg
je
xor
sbb
fwait
or
test
js
pushf
mov
inc
imul
dec
daa
sti
pop
fs
lods
cmc
hlt
fidivrs
sub
mov
idivb
hlt
xchg
jmp
std
or
cmp
pop
pop
mov
bnd
push
std
and
sub
lahf
xchg
or
pop
add
lods
lcall
neg
ror
mov
adc
fisubs
cmpsl
clc
sti
lock
jbe
movsl
int
add
into
lock
jo
aam
jmp
ret
xchg
pop
test
push
add
stos
adc
notb
popf
push
mov
out
cmpb
push
mov
dec
xor
mov
and
or
pop
mov
cmpsb
jbe,pn
sbb
jnp
dec
ljmp
call
sub
add
fs
mov
in
cmp
xor
push
cmpsb
push
mov
bswap
cmp
or
in
and
mov
mov
enter
and
pushf
out
mov
xor
call
inc
push
es
loop
jb
stos
rcrb
fisttpl
insb
jmp
stos
sarl
cld
sahf
loopne
push
pusha
rcrl
test
xor
mov
fcmovnbe
lods
pusha
out
jnp
jb
or
imul
cltd
sbb
add
cmpsb
lock
sarw
xlat
pop
mov
faddp
xlat
push
outsl
int3
fsubs
push
js
pop
jge
insb
in
xchg
and
sbb
cltd
data16
dec
fmull
xchg
add
cmp
or
rcll
insl
movsl
cmp
adc
test
daa
icebp
mov
in
pop
clc
and
cmp
jle
int
mov
or
jno
std
and
test
test
xchg
or
jecxz
dec
mov
fdivl
sub
and
push
fistpll
adc
stc
jno
jbe
lods
outsb
je
or
sarb
vminsd
pop
in
lods
insb
lcall
mov
cmp
push
sahf
in
adc
and
inc
jge
scas
push
mov
es
sub
ljmp
adc
mov
adc
cmp
dec
jl
or
pop
sti
jge
fldt
inc
cmpb
add
aas
pop
rcrl
push
mov
icebp
mov
gs
lock
mov
and
inc
popf
ljmp
pop
dec
xor
adc
out
mov
mov
dec
int3
add
aad
xor
repnz
clc
ret
leave
push
push
sbb
enter
xor
push
adc
pushf
addl
add
sbb
push
push
add
sbb
adc
jbe
stc
xor
inc
fdivl
bound
mov
mov
pop
dec
and
dec
movsb
push
xchg
sbb
add
sbb
sbb
xchg
mov
mov
lahf
inc
mov
jmp
cmpsb
les
out
inc
sub
push
ja
out
fcoms
jno
mov
mov
push
cmp
sub
fisttps
mov
or
mov
inc
mov
subb
mov
jnp
and
or
inc
pop
or
mov
jg
jbe
enter
test
lret
adc
mov
sub
popa
stos
push
es
push
mov
out
mov
add
or
sbb
or
pop
cmc
mov
add
cmp
and
pop
sub
shll
mov
add
fs
inc
jne
cwtl
pop
adc
enter
popa
add
aad
mov
outsl
sub
movsl
arpl
push
xchg
gs
test
adc
mov
fnstsw
cwtl
outsb
test
out
clc
and
sub
mov
dec
inc
sub
mov
push
pop
fmuls
fsubrl
mov
add
hlt
dec
fdivl
movsb
mov
scas
xor
pop
and
dec
mov
cmp
pop
or
mov
aas
sub
int
fsubrs
xor
mov
ja,pt
cmp
pop
leave
lods
adc
fld1
lret
sub
fiaddl
leave
ljmp
dec
insl
ja
aam
push
or
subb
push
arpl
sbb
adc
iret
fldenv
fisubrs
inc
cmpsl
mov
in
mov
mov
leave
mov
loopne
adc
andb
out
movsl
dec
aam
jmp
aas
mov
push
aam
adc
and
mov
dec
ror
sub
lret
cs
adcl
aam
cmpl
adc
sub
or
int
mov
push
pop
aam
jmp
and
push
jnp
push
jne
adc
mov
sbb
aam
aad
mov
filds
ss
dec
iret
pusha
dec
xor
and
pop
pop
dec
push
jge
jge
outsl
inc
mov
add
enter
lods
jmp
xchg
shll
or
movsl
rcrb
iret
ja
inc
mov
or
add
aam
aad
std
fsubrs
into
add
gs
cwtl
or
das
mov
xchg
xchg
notb
jp
cmpsb
xchg
dec
jmp
addr16
data16
ja
das
pop
inc
pusha
ret
in
xor
or
push
aad
mov
fwait
or
lret
pop
jo
subb
in
das
ds
test
add
out
lods
mov
dec
mov
call
ljmp
loop
pop
scas
and
out
fs
push
lret
pop
inc
and
cmc
push
rcrl
mov
cs
mov
lods
mov
add
pop
jae
les
cmp
inc
jo
push
xlat
iret
jb
jae
mov
cmp
lahf
in
pop
movsl
cmp
fists
fdiv
lret
sbb
lock
jge
add
xchg
std
cmpsb
daa
push
cld
sahf
subl
fs
ret
idivb
cwtl
stos
jge
jnp
aaa
xchg
enter
dec
and
jae
es
sbb
xlat
add
push
push
sbb
cmp
in
sbb
fs
cmp
and
sbb
push
inc
mov
aas
xor
out
iret
dec
dec
jmp
mov
adc
mov
in
and
xor
stos
or
scas
add
cli
adc
cmpb
das
dec
in
movb
cmp
loope
fistpl
ficoms
pop
fidivl
cmp
pop
cltd
pop
pop
xor
add
aaa
inc
pop
sub
or
dec
je
push
dec
jecxz
xchg
inc
lcall
mov
js
pop
popa
popa
lds
scas
xor
ds
test
push
divps
iret
in
push
xchg
inc
out
int
cli
mov
xor
or
dec
adc
insl
aam
mov
ljmp
mov
repnz
out
aam
push
fistpll
or
rcr
jp
adc
sbb
mov
xchg
cmp
mov
push
inc
lods
add
fsubrs
shll
fidivrs
xor
jge
xor
adc
or
stos
ds
mov
mov
lcall
popf
xchg
inc
in
negb
in
dec
ds
jbe
jbe
dec
mov
sub
inc
push
mov
arpl
mov
cld
dec
adc
lcall
push
les
mov
mov
add
andl
push
dec
fs
ret
xchg
jg
aam
movsl
adc
inc
in
orb
lods
sahf
mov
xchg
das
cmc
movl
int
sti
jecxz
test
add
or
mov
xchg
push
enter
test
jo
sub
add
and
leave
insl
in
loopne
push
test
cwtl
mov
loop,pn
inc
push
xlat
nop
jns
jo
ss
jmp
icebp
mov
stos
and
or
jmp
cltd
mov
jge
outsb
inc
jnp
dec
sbb
adc
pop
mov
dec
incl
nop
fists
arpl
jno
dec
pop
inc
sarl
jecxz
outsb
xor
ljmp
mov
dec
sti
inc
shrl
cmpb
jo
mov
int3
and
jae
jne
out
mov
pop
xor
mov
mov
out
dec
stos
mov
xchg
icebp
gs
jbe
inc
add
outsl
les
scas
xchg
xchg
lret
fsubs
nop
fsts
push
push
push
pop
add
pushl
xor
push
aaa
mov
stc
dec
and
mov
pusha
insl
cmpsl
push
inc
jo
pop
cmc
arpl
and
pop
pop
jo
jecxz
out
jmp
lcall
out
ljmp
insl
xchg
test
mov
scas
sbbl
int3
subb
inc
sbb
jge
movsb
rcrl
popf
sub
fcmovne
add
cmpsb
mov
mov
jg
andb
inc
inc
lds
push
out
adc
inc
add
stos
and
pop
or
xchg
mov
push
pop
and
jae
sbb
pop
dec
loop
jecxz
scas
cmp
js
scas
lods
stos
xchg
dec
jle
pushf
jle
xor
fucom
xor
push
lret
xorb
cmpsl
pop
mov
insb
lods
in
pop
fs
leave
lods
push
push
cwtl
push
hlt
adc
stos
leave
ss
icebp
mov
mov
sbb
div
lods
mov
iret
cmpb
je
sahf
movsb
mov
arpl
in
dec
lea
aam
and
dec
in
lods
adc
mov
cmp
leave
lock
xchg
mov
ds
mov
sub
sub
scas
dec
fildll
jle
pushf
jp
mov
fisubs
clc
fisttps
leave
push
cli
outsl
in
arpl
jmp
cmp
cmp
imul
fdivl
loopne
shll
sub
stc
and
in
cwtl
popaw
fwait
pop
imulb
popf
mov
jo
inc
enter
inc
movsb
xor
dec
add
push
outsb
dec
bound
mov
fs
jp
push
mov
movsl
dec
dec
inc
lret
iret
fisttpl
xchg
ficomps
sub
shl
xchg
inc
leave
xor
imul
add
out
rcrl
mov
pop
loopne
cmpsb
pop
push
dec
push
gs
fldcw
imul
ja
mov
popa
add
mov
or
movsb
sar
in
inc
mov
leave
es
push
lcall
mov
pushf
cwtl
cmc
cmp
imul
fdivrs
repnz
mov
test
cld
mov
adc
repz
ret
mov
js
std
mov
sbb
inc
aas
cmp
sub
lea
mov
or
push
mov
leave
xor
movsb
imull
pop
or
imul
sahf
or
xchg
push
mov
xchg
pop
aam
mov
fmull
stos
into
rclb
lahf
push
popa
xorb
or
sbb
jns
dec
pop
mov
bsr
ret
mov
popa
imul
int3
movsb
sub
insb
call
sti
pop
out
mov
mov
mov
lds
outsl
sbb
lods
loop
or
daa
mov
pop
mov
xor
cltd
or
and
fcomps
jns
rolb
fsubrs
cmp
and
scas
dec
push
lcall
lods
icebp
cmpsl
scas
cs
cwtl
mov
sub
loopne
cwtl
inc
stos
inc
inc
hlt
insl
push
xlat
out
decl
jecxz
lods
repz
bswap
cmp
leave
aad
inc
int3
cwtl
das
xor
ja
lret
out
xchg
es
xorb
mov
enter
lea
shlb
jg
lret
push
leave
test
push
aad
xchg
xor
push
rcl
icebp
or
cmpsb
test
leave
out
ljmp
dec
mov
dec
sub
stos
les
xchg
mov
push
push
out
jle
and
mov
xchg
add
sbb
inc
pop
cmp
sub
fdivr
xchg
insb
cmp
adc
pop
dec
add
arpl
imul
icebp
mov
sbb
out
iret
aam
test
aas
sub
xchg
xor
pusha
push
aad
adc
xchg
mov
and
push
sahf
or
mov
mov
andl
ret
mov
xchg
int
jge
push
sbb
or
daa
int3
push
and
sbb
sub
outsb
and
push
pop
and
mov
mov
mov
or
leave
xor
pusha
cvtps2pi
xchg
push
sbb
orb
xor
inc
pop
xor
idivl
pop
popa
jecxz
loopne
cmp
fimull
inc
xchg
lods
icebp
out
mov
fnstcw
jg
pushf
shrl
pusha
add
ffree
lock
shrb
mov
add
clc
rorb
xchg
xchg
jecxz
or
mov
pop
popf
push
mov
nop
sbb
push
jbe
stos
mov
push
lock
and
adc
clc
dec
mov
adc
xor
mov
xor
mov
loop
xchg
subb
ret
cld
ja
jle
enter
aad
jge
test
in
es
dec
test
add
int3
jo
add
lea
fs
sub
push
stos
xchg
out
inc
mov
mov
push
lahf
repnz
sbb
mov
call
addr16
scas
jns
ret
scas
out
push
lret
ret
and
scas
fsubrs
mov
mov
inc
xchg
pop
hlt
fisttps
cmp
aas
aaa
movsb
mov
adc
or
push
adc
jl
arpl
mov
sub
or
mov
sub
mov
ljmp
jne
scas
dec
cmp
mov
jle
lret
sub
sbb
sbb
mov
imul
dec
mov
pop
addb
jne
mov
inc
mov
jnp
cmpsb
arpl
mov
mov
outsl
pop
inc
lea
mov
dec
jp
std
or
cmp
and
repz
rcl
fnstenv
cmp
pop
or
and
pushl
xchg
mov
inc
mov
push
and
test
jp
roll
cwtl
pop
and
ficompl
lods
inc
ds
in
scas
test
inc
loop
scas
and
lret
jge
in
call
jae
pop
xchg
jle
adc
push
add
adcb
ret
loopne
test
notb
lds
xor
lret
xchg
mov
push
mov
inc
ret
int
xchg
mov
jecxz
adc
xchg
aas
mov
test
inc
js
int
imul
push
cmp
cmp
test
push
ds
jns
xor
adc
adc
xor
cmp
lds
or
mov
mov
hlt
sub
je
mov
push
xor
stc
ja
arpl
fsubl
mov
ret
push
xor
xor
negb
push
jmp
das
les
ds
adc
dec
repnz
adc
rcll
mov
loope
mov
fcmovne
fs
and
shl
pop
jg
data16
enter
fildl
je
add
std
push
xchg
or
in
imul
fsubr
test
imul
mov
mov
pusha
or
sub
aas
mov
stos
shr
loopne
sbb
sahf
xchg
and
ljmp
jae
mov
lahf
or
dec
wrmsr
nop
int
test
cmp
mov
and
lcall
out
mov
rolb
adc
sbb
add
jae
jg
js
xor
xchg
add
pop
add
cmpsb
popa
shrl
cld
data16
cmpb
dec
fisttpll
push
gs
shl
in
add
imul
in
add
pop
std
leave
movl
pop
imul
test
jnp
roll
ds
pop
jnp
xor
test
mov
test
inc
xor
ret
pop
inc
les
aas
and
push
pop
clc
lsl
loopne
or
cmp
push
aad
hlt
xor
sub
xor
in
lret
movsb
jno
and
add
loopne
loope
fbstp
dec
adc
test
aas
sbb
pop
daa
fs
hlt
push
xlat
and
gs
js
lds
fimull
imul
pop
idivb
inc
sub
push
das
dec
test
xchg
adc
imul
shrl
fadd
or
out
lcall
jmp
clc
push
and
lds
jo
clc
jmp
cltd
int3
add
and
lret
and
pop
notl
dec
lahf
jle
out
test
les
pop
outsb
adc
sbb
push
in
mov
pushl
hlt
dec
pop
inc
inc
mov
ret
pusha
int
cmp
out
cs
mov
jno
cmp
mov
popa
outsb
mov
push
popf
add
imul
flds
mov
and
int3
or
add
ret
xchg
out
push
cld
push
and
cmpsl
aad
int3
mov
test
imul
dec
cwtl
mov
movsl
stc
insb
aas
lods
mov
or
addr16
xchg
pusha
mov
movsl
rorl
test
pop
leave
sbb
mov
push
mov
std
repz
mov
in
xchg
les
cmp
dec
outsl
xchg
loopne
add
in
test
rclb
jmp
inc
jnp
cmp
mov
cmp
test
mov
into
xchg
dec
lds
loope
fwait
sti
cmpsb
test
rcrb
je
xlat
cmc
xchg
int
mov
sub
adc
out
dec
xchg
inc
aas
pop
push
jge
dec
xor
and
xchg
xor
mov
stos
insb
out
pop
and
sbb
adc
pop
sbb
add
les
stos
enter
push
xchg
xor
mov
xchg
mov
xchg
cmp
sub
stos
dec
adc
push
mov
xchg
into
and
jb
push
testl
jecxz
dec
jp
loop
fs
sub
mull
mov
push
lods
je
mov
pusha
shll
xchg
in
xchg
cmp
cmpsl
movsb
mov
stc
adc
icebp
mov
mov
in
adc
or
inc
jmp
jb
sbbb
in
push
outsl
jnp
jne
arpl
sbb
xchg
fcmovnu
les
imul
dec
jp
out
popa
dec
sahf
aas
dec
cmp
pop
pop
div
fucomip
rcll
inc
filds
sub
cmp
inc
and
xor
subl
ficompl
mov
push
pop
imul
les
imul
add
inc
push
inc
inc
inc
jmp
rol
rolb
cmp
push
mov
jle
cmp
jne
stos
jle
mov
movl
fcmovu
add
dec
mov
rcr
sbb
mov
data16
adc
mov
les
aad
aas
mov
sbb
scas
outsb
push
ret
cli
cmp
pop
inc
lahf
out
xchg
xchg
inc
sbb
push
ds
fstpt
adc
lcall
cmp
xlat
sub
lea
xor
xchg
mov
adc
pusha
std
int
sbb
and
jns
pop
shr
lea
pop
pop
lcall
rorb
sub
mov
addr16
mov
dec
dec
hlt
jns
ret
push
loopne
rclb
in
nop
fs
dec
xchg
push
loope
icebp
je
mov
lods
and
sub
xchg
sbb
popf
xchg
add
loop
add
repz
sti
das
and
lahf
fs
cmpsb
dec
fmulp
push
sub
pop
adc
rolb
clc
jbe
mov
sbb
insb
in
mov
imul
cmc
out
sub
mov
or
sub
sub
lcall
int
sarb
popa
push
cmpsb
jns
dec
mov
xor
scas
inc
jae
inc
mov
cld
sbb
inc
xor
lcall
jne
add
inc
add
mov
sti
fcomps
pop
lods
cmpsb
data16
add
jb
leave
ficoms
inc
das
sub
cvttps2pi
sub
xchg
outsl
jno
aas
sti
mov
pop
xchg
repnz
cmp
jle
pushf
idiv
xor
mov
push
add
fnstcw
mov
loope
xor
arpl
xor
sbb
and
mov
cltd
jmp
mov
mov
mov
addr16
rorb
imul
dec
or
and
popa
gs
push
push
xchg
fnstcw
popf
clc
mov
loopne
push
mov
mov
and
call
xor
cmpsb
adc
pop
cs
ja
cli
xor
jae
inc
xor
inc
dec
push
jnp
inc
sbb
mov
bound
scas
ja
out
ja
lahf
mov
cs
add
sub
fistps
fstl
clc
adc
into
fs
call
adc
inc
ja
push
adc
jae
cmc
xor
repnz
insl
adc
std
flds
mov
jge
lds
aam
add
jmp
xor
mov
jecxz
je
add
or
cwtl
cmpsb
ds
cmc
dec
mov
rcll
pushf
clc
sti
xchg
adc
or
and
jecxz
lds
shll
dec
jp
jbe
stc
push
sahf
sbb
push
xchg
outsb
push
pop
mov
in
pushf
pop
js
xlat
adc
jge
adc
and
stos
lret
jbe
outsb
dec
hlt
in
jl
adc
sbb
loopne
mov
push
inc
aad
and
ret
cmpsb
push
pop
push
push
loop
inc
ds
jae
dec
lds
lock
push
aam
in
mov
inc
mov
divb
lret
push
shr
sti
mov
les
cmp
test
ljmp
loop
dec
or
sbb
jle,pt
in
int3
cmp
mov
ss
data16
dec
into
inc
cwtl
inc
mov
fsubs
mov
dec
dec
and
lea
movsb
popa
adc
jp
xchg
xor
popaw
push
xor
sub
mov
xchg
scas
std
fistl
iret
or
loopne
cwtl
jl
out
pop
lret
mov
lret
add
sub
cmp
mov
cmp
sbb
mov
sbb
das
xchg
shlb
mov
loopne
jg
jl
sbb
mov
mov
roll
or
je
and
ret
push
lods
pop
rcll
shr
adc
mov
mov
mov
aaa
arpl
mov
ret
std
inc
mov
push
jl
sub
jle
les
inc
adc
gs
pusha
loope
orb
jmp
scas
cmp
cs
and
arpl
mov
mov
sbbb
fcmovbe
add
fidivrl
rolb
push
xchg
xchg
cs
sbb
mov
or
scas
or
shll
addr16
sbb
adc
cltd
js
insb
push
push
xchg
std
sbb
cmp
mov
les
lea
inc
pusha
ljmp
xchg
jb
inc
mov
sub
mov
outsb
add
fwait
dec
jmp
cmp
into
lcallw
out
sahf
mov
sbb
pop
sub
jb
das
inc
fcmovnb
push
push
enter
adc
lahf
inc
mov
pop
cmp
jnp
ss
mov
gs
inc
in
push
adc
lock
ljmp
sbb
into
xchg
push
sub
xchg
push
sarb
dec
cmp
xchg
loope
incb
jecxz
imul
mov
fwait
inc
inc
test
mov
dec
loop
test
roll
add
mov
test
in
jge
xlat
out
les
jg
movsb
mov
cmp
fwait
xchg
pop
jmp
cs
fisubs
push
scas
mov
inc
movb
jo
mov
daa
push
cmp
pop
loopne
push
xorb
lcall
icebp
test
fdivs
mov
adc
movsb
lea
subl
insl
fidivrs
fdivs
push
push
mov
movsb
mov
gs
cmpsb
mov
xor
lea
out
adc
in
movsl
xchg
js
jbe
or
jmp
stos
push
sahf
mov
mov
pop
jecxz
pop
popf
xchg
outsb
insl
pop
cltd
adc
hlt
mov
mov
push
add
xchg
roll
int3
iret
add
inc
jmp
mov
xchg
fs
cmc
push
les
movsb
adc
and
out
xor
pop
adc
mov
xchg
push
mov
or
xor
shll
cli
sub
sbb
lock
pop
movsl
add
pushf
loopne
xor
ljmp
push
or
pop
mov
shr
int
ret
mov
inc
dec
imul
push
cmc
test
fs
xlat
add
fs
xchg
inc
or
cmpsb
lods
repz
in
xor
and
or
outsb
fwait
incb
es
loope
out
test
in
sbb
rolb
nop
lret
jl
inc
push
mov
add
mov
mov
xchg
fsubr
data16
inc
sahf
push
mov
pushf
or
enter
addr16
mov
push
pop
push
dec
xor
setge
roll
pop
shr
mov
cmc
pop
add
and
mov
sbb
negl
popa
pop
shrl
jp
imul
cwtl
sub
xor
sbb
lods
rol
mov
xor
aad
insb
xor
jl
sub
mov
imul
mov
sub
cmpsl
stc
inc
rcrb
pop
dec
ja
stos
in
fidivl
xchg
cmp
mov
or
ss
mov
inc
les
movsl
sub
imul
inc
push
mov
jge
js
popf
push
sub
xchg
jl
hlt
jl
lock
dec
lea
and
mov
mov
scas
pushw
addl
popf
enter
mov
sub
push
loop
movsb
jge
sti
in
rorl
cmp
jmp
push
orl
push
stc
lret
leave
cmp
out
insl
and
mov
adcb
test
imul
xor
jg
push
addr16
push
mov
xor
daa
test
int3
lahf
adc
fldenv
ret
sub
outsb
lret
pop
loop
inc
rcl
xlat
cmpsl
stos
lahf
dec
xchg
in
mov
ss
cld
popa
mov
es
xchg
adc
inc
ja
test
arpl
ret
sub
mov
xchg
xor
pop
lcall
aas
call
jbe
fisubrs
sub
jns
dec
neg
push
xchg
fwait
aaa
cmpsb
mov
pop
push
inc
movsb
sub
fcompl
jo
dec
push
xchg
mov
xorl
out
cwtl
mov
jmp
int
scas
enter
xlat
fdivs
mov
in
shll
push
addr16
pop
inc
cmc
mov
inc
inc
outsl
xor
dec
sbbb
sbb
adc
dec
scas
ja
push
and
aas
sub
loope
in
inc
je
stc
pop
daa
les
mov
dec
jle
xchg
xchg
pop
mov
and
ljmp
data16
dec
movsb
lea
mov
outsb
inc
daa
or
dec
dec
jo
push
mov
adc
dec
add
les
fwait
outsb
and
xor
xor
xor
jle
push
dec
pusha
mov
add
adc
cmp
inc
icebp
cmpsb
and
lods
mov
outsb
dec
or
jno
push
fisubs
adc
icebp
push
insl
stos
push
adc
out
call
inc
xor
xor
jecxz
cld
rolb
test
repnz
dec
fucomip
sbb
jns
aad
addb
jge
out
fists
jl
xchg
jecxz
add
insb
add
pop
andb
dec
sbb
sbb
jae
insb
lret
hlt
jecxz
push
rol
pushf
std
jle
jnp
call
outsl
xlat
aas
rol
mov
dec
das
test
cs
pop
cmp
fimuls
adc
fisttpll
pop
adc
fdivr
gs
inc
repz
xlat
pop
lock
and
fs
xor
and
push
sub
mov
int
aam
outsl
ret
sahf
add
jbe
xchg
push
scas
ret
pop
mov
mov
loopne
frstor
in
jge
out
or
or
iret
in
mov
xor
scas
pop
mov
repnz
repnz
xchg
and
xchg
jno
mov
add
sub
jge
loope
cmp
and
and
ret
jl
clc
push
mov
cmpsl
out
insl
inc
push
pop
push
jl
mulb
das
repnz
xor
clc
mov
loopne
cli
ds
mov
outsl
fmul
lret
push
mov
out
sub
lock
push
mov
xchg
outsl
das
test
lock
test
xchg
test
inc
cmc
mov
mov
or
mov
add
cld
jno
movsl
and
pop
inc
xchg
aad
mov
cmp
out
insl
mov
mov
mov
invd
add
mov
jns
ss
mov
nop
and
test
scas
jg
sub
mov
sub
call
fmull
mov
imul
jo
inc
push
add
fisubrs
test
sbb
adc
cltd
icebp
cmc
add
clc
loop
sbb
cs
dec
pmuludq
lock
mov
jge
push
mov
jnp
mov
shll
add
or
mov
stos
aaa
aaa
pop
fsubrs
js
loop
out
dec
and
lea
insl
adc
push
ja
xor
inc
jecxz
cmp
pop
adc
jne
aas
shll
mov
inc
xchg
out
stos
sbb
movsb
add
xchg
dec
lods
sub
mov
inc
stc
jge
cmp
ficompl
xrelease
jge
shrb
in
mov
add
push
sub
dec
xchg
ss
inc
dec
adc
sub
pop
jb
or
sbb
push
adc
mov
shlb
sub
nop
fldl
fs
mov
adc
add
push
mov
inc
add
jp
and
push
in
pushf
mov
inc
cmp
repnz
mov
add
mov
cwtl
in
push
adc
adc
roll
dec
push
in
push
rclb
cli
xor
lahf
cmc
in
call
mov
inc
icebp
mov
clc
mov
or
pop
pop
push
ss
pushw
dec
and
mov
xchg
fistpl
push
pop
cmp
dec
lea
sti
nop
mov
mov
stc
addl
xor
in
add
jne
repz
mov
scas
insb
fidivrs
mov
jp
cmp
sub
sub
mov
fucomi
stos
outsl
stos
xchg
aam
cwtl
arpl
jae
idiv
xchg
jge
aad
jmp
nop
das
xor
xchg
add
or
test
stos
ds
dec
lahf
jg
popa
fiaddl
out
fwait
add
jae
jge
out
out
int3
pop
call
xchg
push
scas
sbb
insb
arpl
xlat
and
pop
add
int3
pop
pop
outsb
jmp
aas
dec
jl
sahf
push
enter
push
add
or
scas
jb
add
or
and
movsb
xor
and
out
int
sar
mov
adc
jns
inc
mov
push
jmp
mov
arpl
outsl
inc
daa
jp
xchg
jo
fwait
mov
ret
jmp
add
and
shll
data16
scas
ret
pop
adc
sbb
shrd
or
in
adc
lret
xor
pop
sub
push
mov
add
pop
inc
out
mov
and
inc
lahf
shll
dec
fbstp
sbb
fistl
addr16
dec
xor
dec
pop
pop
data16
mov
jmp
or
push
pop
mov
lds
or
mov
lock
idiv
rcrl
pop
sbb
or
fcomps
push
push
jmp
inc
adc
stos
outsb
adc
dec
repz
or
xor
insb
loope
icebp
ss
clc
aam
or
mov
ret
push
fstp
sbb
push
pop
cmp
cli
add
mov
or
lea
mov
or
bound
sub
add
cwtl
push
hlt
jne
xor
call
in
sbb
add
movsl
into
lahf
adc
sbb
sub
out
sub
es
test
add
lds
dec
shll
jno
inc
mov
loopne
mov
pop
int3
mov
adc
mov
push
scas
mov
std
sbb
inc
cmpsl
pop
fistpll
sub
mov
jle
iret
es
test
testb
adc
jb
aaa
insb
popa
adc
aaa
mov
sti
jg
frstor
xor
mov
adc
popf
test
cmp
add
jns
adc
jne
popa
or
mov
cmpsb
movsb
insl
xor
cmpsl
aam
mov
int3
or
loope
test
stos
push
sbb
sbb
mov
mov
lods
sub
jecxz
mov
ret
sub
or
js
ret
jno
arpl
push
push
fists
cmp
mov
adc
cli
ficoml
rorb
fsubp
inc
mov
mov
xchg
push
arpl
aaa
mull
imul
fiaddl
hlt
dec
push
push
push
push
mov
scas
mov
push
adc
xchg
loope
sbb
aas
sub
in
fwait
cmp
push
sbbl
inc
push
movsl
sub
mov
jno
xchg
pop
int
push
jmp
adc
nop
mov
mov
and
adc
ret
ss
repz
ljmp
mov
mov
jnp
push
imul
xchg
jnp,pt
orb
xor
aaa
movsl
add
jl
inc
arpl
pop
sbb
xor
int3
push
test
ss
dec
divb
mov
jns
lahf
paddusw
in
jo
cmp
dec
mov
cs
cmp
ja
pop
cs
adc
push
mov
jg
orb
ds
insl
and
jp
push
dec
out
lret
movsb
pop
shrl
sbb
stos
data16
pop
pop
sahf
pop
aaa
icebp
pop
in
cltd
push
cmpb
rcrl
subb
inc
arpl
fcmovnu
or
in
add
aas
les
and
nop
daa
call
xchg
lods
cld
insl
push
jmp
mov
mov
jb
dec
divl
cmp
das
dec
cld
xchg
imul
int
pusha
mov
ret
adc
sub
mov
mov
mov
shlb
imul
idivb
aaa
cmc
shlb
loopne
aad
data16
xchg
out
mov
ds
mov
mov
sti
test
test
or
ljmp
pushf
clc
lods
pop
inc
dec
testl
adc
arpl
or
pop
xor
mov
push
setg
test
dec
inc
cmpsb
cmpb
push
adc
and
and
dec
xor
int3
addr16
test
ret
aad
bound
arpl
mov
out
in
or
cmp
les
dec
jbe
std
lods
add
jb
std
aad
insl
sub
push
mov
jb
mov
fabs
push
sbb
cli
lods
fwait
sub
popf
sbb
push
test
fstl
dec
push
push
out
dec
out
pop
fs
mov
cld
lret
jnp
pop
shll
test
mov
lea
or
xor
sbb
dec
mov
aas
fdivs
dec
sbb
ljmp
int3
adc
mov
push
jbe
iret
jp
push
and
push
pop
cltd
dec
fnstcw
adc
add
jp
fmuls
idivb
in
sbb
sbb
pop
pop
pop
mov
or
mov
fdivr
and
in
push
sub
inc
lds
xor
mov
xchg
stc
mov
mov
ret
jnp
jo
xchg
mov
lods
or
fbld
test
lcall
dec
mov
xorb
data16
pop
std
mov
sbb
jae
rorl
shrb
sub
lods
int
add
dec
cmp
xlat
scas
popf
divb
adc
int
inc
sti
icebp
add
sti
idivl
dec
lret
pop
pop
xorl
inc
jno
push
xchg
or
fnstcw
or
fdivr
and
add
xor
test
mov
push
in
pop
dec
push
aas
out
int
js
sub
jnp,pn
dec
es
jg
xchg
mov
ljmp
cs
fisttpl
and
push
mov
push
pop
std
arpl
pop
lods
addb
aam
scas
clc
mov
cld
stc
xchg
push
or
push
push
mov
stc
movsl
cmp
movsb
and
pop
xor
cmp
cmp
lret
out
stos
in
in
arpl
xchg
xlat
sub
sub
sbb
out
pusha
jle
mov
pop
or
mov
cs
ret
jae
mov
pushf
aas
cltd
pop
lock
int
sub
jl,pn
imul
jmp
pop
movsl
fdivr
cmp
sahf
pop
pop
insb
leave
and
xor
repz
mov
lahf
jo
dec
je
es
xor
lea
and
push
jbe
mov
inc
adc
xchg
and
mov
pop
and
sub
cmc
sbb
daa
push
or
lret
push
jmp
call
xor
dec
imul
aaa
scas
cwtl
addr16
in
inc
mov
xchg
sub
add
or
fists
clc
mov
and
dec
xchg
or
sbb
mov
xor
xlat
test
pop
pop
add
out
ss
fdivl
lods
nop
mov
jle
mov
xchg
inc
or
pusha
js
imul
adc
jmp
mov
pop
lret
xchg
fs
xchg
cmp
ja
outsl
jb
pop
mov
lea
mov
mov
adc
sbb
jnp
add
imul
xchg
rcll
cmp
cmp
dec
xchg
loopne
or
fdivs
dec
in
lea
pop
pop
mov
in
cmc
pop
daa
inc
ffree
cs
cmpsb
ljmp
mov
in
mov
sub
dec
mov
pop
and
in
lret
pop
aas
xor
mov
js
ret
adc
xchg
mov
push
shr
lock
call
jb
sahf
imul
pop
das
push
out
mov
mov
mov
adc
out
js
mov
push
outsb
addb
inc
adc
mov
roll
out
pop
cltd
fwait
or
clc
jmp
shr
fsubs
loope
fs
int
movsb
pop
cld
sub
pop
lret
hlt
shrl
xor
xchg
aaa
mov
mov
mov
dec
xchg
sbb
sub
inc
add
in
push
xchg
cwtl
stc
xchg
xchg
repnz
neg
shll
bound
or
push
std
push
test
cmpsl
ds
shll
out
xchg
lock
adc
cmp
mov
xchg
mov
loopne
jle
sti
adc
and
notl
push
adc
fadds
in
inc
aaa
mov
fstpl
sub
sbb
dec
cli
xchg
pop
les
push
inc
sti
lcall
push
rol
dec
les
mov
popf
out
dec
xchg
add
or
adc
in
jae
out
adc
mov
inc
clc
cs
xor
lahf
das
out
or
outsb
aas
cmpsl
aam
or
jbe
push
sbb
pop
int3
inc
das
in
movsb
movl
lock
flds
cmp
pop
push
jecxz
jns
movsl
insb
jl
loope
rcrb
aad
mov
cmc
cmp
push
imul
loopne
fstpt
fwait
or
fisttpl
push
leave
add
fcmovnbe
dec
adcb
cs
fldt
mov
insl
and
push
outsl
ss
fsubrl
ret
xor
leave
lea
out
fdivl
cli
pop
test
pop
push
lea
int
jle
dec
inc
inc
push
sbb
fwait
movlps
inc
sub
loop
xchg
clc
xchg
xlat
xchg
not
int
cmc
popa
inc
outsb
add
pop
sub
add
pop
lret
jmp
or
jmp
xchg
pushf
lods
jnp
adc
in
orb
mov
pop
sbbb
mov
pop
test
jno
and
add
fmuls
test
dec
test
pop
jbe
push
mov
mov
stos
nop
dec
cmpsl
jle
scas
scas
cli
mov
mov
or
adcb
fs
shll
mov
jecxz
das
inc
clc
les
test
jns
ds
pop
cmp
or
into
out
mov
aad
cwtl
push
stos
das
jne
inc
ret
mov
hlt
add
xchg
sbb
out
dec
mov
roll
insb
push
xor
inc
push
dec
and
sbb
lods
stos
sub
pop
and
ret
fs
adc
jl
int3
and
sqrtps
dec
push
fisubrs
xor
mov
lock
test
add
es
adc
push
jae
adc
pusha
pop
xchg
sbb
pusha
test
mov
call
scas
xor
and
bound
xor
xor
xor
jno
dec
rorb
mov
mov
sbb
shlb
ds
sbb
sub
jge
mov
xchg
fcmovnb
stos
ss
cmp
lahf
inc
into
push
pop
outsb
je
jg
pop
xchg
cs
cmp
dec
ficoml
mov
jbe
addr16
cwtl
cmpsl
sar
popa
stc
cli
mov
mov
and
fsubl
repnz
jg
dec
stc
fsubr
pop
cmpb
mov
inc
jo
hlt
scas
xor
fdivrs
daa
mov
cs
mov
xchg
hlt
mov
scas
cmpsl
pop
mov
orl
or
mov
out
jo
les
dec
mov
push
xchg
loope
add
mov
bound
push
xorb
je
fcompl
into
daa
sti
pop
xchg
jl
inc
shrb
xor
dec
mov
dec
sbb
in
and
mov
mov
fistpll
enter
aad
call
cvttps2pi
add
add
or
test
push
dec
ja
xchg
dec
jb
fbld
fisubs
stos
adc
loop
jge
cmp
mov
mov
je
mov
int
loopne
xchg
movsb
xchg
or
ret
sub
lds
mov
cmc
sub
pop
sahf
leave
loope
xor
push
or
iret
push
pop
jecxz
test
es
cwtl
pop
fsts
and
pop
es
and
mov
cs
frstor
pop
xor
decb
scas
dec
test
cli
dec
lock
test
jg
jnp
mov
das
cmp
test
mov
scas
mov
arpl
in
adc
in
inc
or
jecxz
inc
cltd
or
pop
cmp
clc
cmp
adc
adc
sbb
scas
mov
and
loop
aad
outsb
into
xor
adc
rcrb
test
out
pushf
mov
or
fst
icebp
mov
mov
stos
stos
clc
ds
outsb
test
test
call
add
lods
jl
mov
mov
jo
dec
pop
add
dec
dec
inc
jae
inc
movsl
jb
add
mov
lock
lods
nop
xchg
cmpsl
and
and
int3
push
out
jae
push
iret
jmp
sbb
dec
imul
jle
pushf
jg
xorl
jmp
setp
lock
sub
loop
push
inc
xor
in
push
push
pop
sbb
xor
sbb
mov
jae
lret
hlt
je
mov
nop
rorl
push
cmp
decl
mov
xchg
add
adc
outsl
movsb
add
andl
xchg
rcl
push
out
mov
or
mov
jae
mov
in
not
pop
push
pop
fistpl
and
inc
mov
jp
out
andl
inc
mov
enter
test
data16
leave
jo
adcb
inc
test
jnp
mov
pop
pop
xor
xchg
sub
pop
add
bnd
xchg
sahf
fsubr
or
shll
pop
adc
mov
popf
loope
mov
adc
adc
shlb
jecxz
ja
fnstsw
cli
add
mov
cmp
nop
dec
scas
and
lret
popfw
mov
in
stc
call
add
sahf
dec
jne
sbb
sbb
fdivrp
adc
subb
inc
mov
cmp
inc
or
cmp
shrl
xchg
and
imul
and
das
cmc
push
lods
aam
inc
push
jno
shrb
movsl
bnd
xorb
mov
fcmove
inc
jnp
cld
sbb
inc
mov
jle
sub
fmull
imul
jl
imul
adc
pop
mov
add
jmp
and
lds
lods
push
popa
sbb
cvttps2pi
sub
cltd
fidivrl
jo
pop
imul
dec
lds
out
cmp
jne
xchg
mov
jbe
iret
addr16
stc
cmp
fucom
mov
mov
dec
mov
outsb
lcall
js
jae
cmc
inc
cmp
push
movsb
lock
sbb
cmp
fisttpll
cwtl
inc
test
mov
bound
inc
and
psllq
movsl
out
test
cmpsb
add
add
test
sub
mov
mov
mov
mov
mov
mov
push
std
cld
insl
sarb
cmp
mov
xor
movsb
push
jmp
xlat
iret
pop
cmpl
mov
fs
cmp
stos
pop
mov
sub
or
cmp
or
rclb
lcall
js
outsl
mov
ficompl
xchg
cwtl
pop
sbb
ret
and
shll
push
add
lods
imul
je
test
aaa
sarb
rcrl
out
inc
aad
dec
and
cmp
jmp
push
push
jo
aad
lea
mov
dec
sbb
movsb
mov
xchg
sbb
das
jle
mov
mov
push
scas
sbb
fnstsw
dec
cmp
pop
icebp
inc
or
push
daa
cmp
aad
cwtl
lock
jmp
stos
and
dec
sbb
cmp
test
inc
rolb
fld1
aas
adc
push
leave
out
push
jo
mov
test
pop
daa
cmp
xor
fistpl
iret
push
jle
adc
xchg
sbbl
cli
mov
lock
push
sbb
ljmp
es
push
ljmp
or
lods
mov
jbe
jecxz
inc
lock
or
add
fucomi
xor
ds
dec
sarl
mov
push
fucomip
cmpsl
mov
cli
dec
ret
inc
inc
shl
pop
pop
push
or
push
sub
jmp
pop
cmc
out
mov
pop
xor
push
lret
cmc
int
jg
pop
mov
mov
ja
lahf
jb
aaa
pop
dec
xor
mov
lret
mov
sub
out
jmp
idivl
loopne
jb
jecxz
cmp
mov
mov
pop
push
notl
cmp
popa
push
data16
dec
lahf
loopne
pop
mov
mov
xor
incl
inc
fdivs
adc
repnz
js
es
jl
fsubs
xor
mov
test
mov
mov
inc
dec
mov
lods
loope
cmpsl
xchg
shll
fldcw
mov
mov
pop
pop
daa
mov
or
ret
repz
inc
mov
mov
stc
jge
fsubrl
sbb
xor
fidivs
data16
loop
out
xchg
fsub
jne
adc
adc
pop
xchg
out
js
gs
movsl
arpl
andl
dec
push
mov
dec
cmpsb
pop
xor
testl
mov
sti
mov
xchg
cli
push
rclb
mov
stc
mov
jge
inc
loop
mov
xchg
push
jle
dec
stos
jmp
xchg
lret
ds
pop
dec
inc
mov
mov
adc
test
cmp
lods
das
pushl
mov
or
pop
and
dec
loopne
cmp
in
mov
sbb
add
push
dec
sub
and
cltd
push
fdivp
ds
and
dec
cmp
fmuls
test
jo
test
lret
or
push
cs
fldl
and
dec
sub
sub
je
lret
sbb
sahf
ret
lods
test
push
jg
mov
xchg
jmp
mov
dec
inc
pop
and
jmp
dec
in
fcomi
cmp
lods
pop
popa
jmp
xchg
outsb
xrelease
pop
mov
loopne
lret
repnz
jmp
adc
jl
cld
flds
jp
push
push
xor
scas
mov
data16
ja
or
data16
mov
andb
stos
mov
pop
fadds
int
out
push
or
cmp
sub
mov
test
icebp
ret
inc
jo
xchg
add
out
pop
cmpsl
cmp
xor
nop
fldenv
pusha
clc
mov
xchg
enter
push
in
insl
xchg
inc
or
popf
pusha
jb
lods
sub
movb
lcall
sub
lea
mov
xchg
repnz
dec
sbb
lret
loopne
stos
sub
loop
cmpsb
cmpsl
ret
rcll
push
jmp
adc
or
in
and
cmp
aas
cmpsb
jae
insb
rcr
loopne
add
pop
cmp
lods
andl
into
loopne
pop
into
inc
hlt
push
push
mov
fadd
fldcw
enter
pop
call
push
mov
sub
push
mov
lock
inc
jnp
stos
lcall
insl
lret
dec
sbb
cmp
cmp
xorb
or
mov
xchg
addr16
dec
arpl
addl
repnz
ja
and
adc
ds
iret
mov
mov
jmp
pop
and
outsl
mov
and
in
inc
xor
or
cmpsb
or
in
outsb
jg
int
mov
stc
jnp
lret
or
ret
out
sti
mov
fsub
sbb
mov
ljmp
adc
mov
decb
in
add
and
xchg
je
or
sub
push
rorl
adc
cmp
jl
jo
inc
inc
or
cmpsl
xorb
sbb
sbb
out
and
xchg
movsl
adc
in
inc
mov
push
dec
add
push
movsl
movsb
stc
loop
into
dec
daa
je
mov
xor
sbb
mov
adc
or
ret
rorb
jbe
sbb
es
jl
sub
scas
mov
cmp
mov
int
and
push
xor
sar
add
adc
xor
pop
fildl
popa
push
dec
cmpsl
inc
push
jne
cld
mov
mov
loope
test
les
xorb
xlat
fiaddl
test
call
lahf
mov
dec
and
mov
ss
icebp
shlb
xor
pop
push
push
mov
pop
dec
dec
int3
out
cld
outsb
mov
inc
les
xor
cmc
mov
pushf
xchg
mov
mov
xor
loop
ret
sub
test
and
push
xlat
rcl
test
jbe
mov
pushw
lock
into
leave
mov
sbb
inc
and
dec
das
xor
dec
or
dec
int
sub
mov
jmp
out
hlt
fidivrs
sbb
nop
dec
xor
and
fcompl
lcall
in
jbe
jne
jmp
jno
lcall
in
sti
xchg
adc
xor
xor
adc
cld
inc
cld
fcompl
mov
jp
mov
fwait
mov
dec
adc
and
cld
mov
addr16
stos
and
sub
mov
jns
outsl
or
adc
dec
cmpsl
jg
inc
mov
push
xlat
popa
mov
stos
pop
dec
xchg
adc
ljmp
xchg
xor
pop
xor
adc
inc
mov
test
out
js
repnz
mov
mov
std
jmp
cmp
icebp
dec
cmp
shll
adc
js
fnsave
xchg
or
or
ficompl
mov
cwtl
or
cmp
fs
xchg
jns
add
inc
scas
jbe
dec
inc
data16
xchg
push
dec
sbb
lret
popf
inc
dec
push
or
ret
cwtl
jp,pn
adc
test
fcmovne
mov
test
test
lods
je
mov
aad
add
xchg
and
inc
mov
mov
enter
xchg
pop
repnz
subb
inc
fdivrl
sub
cmpb
add
shlb
sub
pop
add
or
push
lahf
cmp
sbb
mov
out
jae
push
test
inc
jb
adc
int
aam
jl
sub
and
pop
loopne
enter
mov
xchg
into
sbbl
push
ja
jb
inc
push
mov
adc
ret
int
dec
sub
cs
or
leave
negl
lcall
ljmp
nop
popf
mov
in
lock
and
push
aas
lahf
jl
enter
stos
push
divl
add
imul
popa
sbb
pop
sbb
push
sbb
fucomp
sets
or
inc
and
inc
sti
cwtl
pusha
out
notb
jg
mov
adcb
add
xor
aas
stc
or
push
fildll
rcrl
xchg
jns
out
loope
cmpl
leave
imul
dec
stos
shll
xchg
sbb
je
shrl
mov
cmpsb
xor
mov
cmp
push
sbb
add
clc
xchg
push
shlb
mov
mov
dec
roll
jb,pn
pop
push
sahf
cld
je
test
jmp
sbb
cmp
add
push
hlt
add
shr
pop
in
mov
test
fincstp
inc
dec
sub
mov
cwtl
ja
lret
cmpsl
aad
sub
inc
cmpsb
int
mov
or
or
pop
scas
and
jne
push
pusha
fwait
xchg
or
loop
xor
sub
inc
cmpsl
imul
mov
or
pop
test
xchg
cwtl
mov
push
and
popf
in
and
int
and
add
jnp
mov
sbb
mov
lock
in
adc
mov
or
movsb
ljmp
push
sub
mov
push
and
sahf
es
lahf
test
xchg
daa
add
inc
dec
imul
cmp
ss
inc
adc
mov
jnp
leave
sqrtps
inc
outsb
sar
mov
aas
bound
repz
rclb
xchg
pushf
ljmp
lahf
mov
sub
push
int
shrb
xchg
test
fcompl
out
push
sar
dec
out
mov
adcl
push
psrlw
enter
adc
jno
je
xchg
or
stos
push
push
mov
sub
or
or
std
out
pop
scas
mov
xchg
or
mov
cmp
xor
inc
adc
cs
stc
stos
rolb
mov
mov
or
movsl
adc
stos
mov
ret
sub
sbb
int3
xor
mov
pushl
int3
shlb
adc
les
fwait
rcrl
lock
dec
dec
mov
rcrb
or
and
push
or
sub
push
jno
mov
ja
sub
hlt
inc
data16
jmp
std
sbbl
add
inc
loope
lahf
mov
roll
in
xor
mov
rclb
cwtl
jmp
out
xchg
mov
mov
or
push
dec
incl
ficompl
sbb
mov
mov
push
fidivl
adc
mov
push
cld
cli
cmpsb
and
jno
mov
add
sub
push
mov
pop
mov
ss
pop
std
or
cmc
test
aaa
push
dec
stos
orb
and
scas
sbb
add
lret
addr16
sub
mov
dec
xchg
outsb
pop
push
fimuls
or
or
inc
pop
xor
lock
adc
xor
sbb
inc
idivl
lret
push
push
lods
and
pop
inc
mov
xor
dec
sub
mov
stos
mov
mov
ds
xor
mov
pop
testb
dec
call
jo
scas
adc
cmpsl
jno
mov
std
imul
mov
sbb
mov
out
cwtl
xchg
add
jecxz
lret
arpl
mov
lcall
pop
pushw
enter
rcl
rcrb
jmp
scas
pop
mov
jno
jb
xor
rcll
test
xor
testl
cmp
iret
std
lcall
and
mov
mov
jl
inc
hlt
sahf
jp
add
insl
sub
cmpsl
dec
dec
jg
adc
mov
inc
cld
pop
sbb
mov
and
jne
xor
mov
aad
jge
incb
sbb
into
outsl
dec
sub
mov
dec
out
sbb
imul
add
fnsave
in
daa
aam
xchg
pop
push
lods
mov
and
div
vsqrtps
or
test
out
montmul
sub
jns
xor
dec
inc
and
add
outsb
xor
cmp
test
decb
jnp
mov
push
ret
inc
mov
loop
dec
into
data16
scas
push
movsl
pop
popf
lods
push
mov
mov
fistpl
lods
outsl
jne
test
mov
xor
fnstenv
jb
arpl
ljmp
push
leave
test
dec
stos
lfs
or
pushf
ret
inc
mov
popa
loope
ljmp
sti
sub
mov
pop
push
dec
xor
mov
into
lret
imulb
mov
fldt
cmp
hlt
out
movsl
mov
fs
fwait
dec
xor
adc
mov
icebp
testb
out
pop
mov
fcoms
out
pop
lock
pop
sub
push
or
mov
popa
jo
arpl
inc
popf
inc
movsb
fidivl
jecxz
mov
mov
loop
sbb
inc
stos
adc
sar
mov
inc
push
scas
clc
inc
adc
fisttps
cmc
insb
pop
mov
mov
movsb
push
insb
xchg
mov
outsl
pop
xor
mov
fcompl
cmp
push
sbb
xchg
sahf
jmp
add
adc
pushf
dec
popf
pop
cmp
popf
xor
in
jb
jle
aam
sub
cmp
mov
add
popa
inc
cmc
loopne
mov
sbb
rcll
add
sahf
hlt
jo
push
andb
inc
mov
ret
or
inc
jno
shll
add
pusha
xchg
add
and
push
ja
mov
and
add
pushf
sti
push
cs
sbb
shlb
push
sbb
jo
sub
xlat
daa
xor
jae
inc
push
lock
pop
push
dec
gs
lret
cmp
xchg
mov
mov
mov
decl
repz
jp
jnp
enter
pop
out
imul
pop
push
dec
xor
leave
adc
scas
jno
sbb
fadds
std
imul
dec
jns
mov
inc
cmp
add
mov
call
adc
scas
std
add
cli
movsb
into
jecxz,pn
push
mov
mov
into
insl
ja
add
xlat
jno
test
push
aas
popa
push
unpckhps
ret
cwtl
or
jl
addl
push
je
icebp
xor
fistpl
xor
lds
sub
rol
adc
push
test
cmc
gs
pop
and
jle
sahf
int3
push
xchg
fwait
mov
inc
andb
inc
jmp
hlt
cmp
pop
daa
and
mov
jge
test
push
adc
into
sbb
cmp
push
lahf
mov
inc
scas
das
mov
inc
lcall
test
scas
inc
jae
sahf
push
and
adc
and
xor
mov
mov
xchg
jb
cld
dec
rclb
push
test
bound
push
xchg
jl
cmp
xchg
fbld
call
xor
rolb
fsubr
inc
ja
jmp
sbb
lret
pop
sub
xor
fsubl
mov
push
jbe
xchg
mov
bound
roll
xor
in
xchg
xchg
jns
nop
fstpl
les
sbb
lock
data16
mov
fwait
push
xchg
jns
inc
arpl
and
push
mov
pop
popf
cmp
pop
or
push
cmp
in
mov
in
mov
imul
lret
add
imul
mov
inc
in
inc
rcrb
orl
fs
cmp
inc
sarl
test
pop
inc
sahf
test
mov
fists
mov
xchg
lea
mov
out
mov
cs
jb
jne
jae
mov
stc
dec
or
mov
mov
lcall
cmpsb
lcall
in
cs
mov
jne
push
xor
scas
or
scas
and
dec
xchg
out
sbb
mov
lahf
sbb
adc
out
push
jbe
js
fidivs
hlt
fdiv
ja
xor
leave
mov
repz
adc
add
xor
and
fs
inc
dec
fdiv
ret
xchg
cwtl
in
cwtl
out
fdiv
adc
jle
in
pop
lret
out
push
dec
jg
filds
and
sbb
scas
bound
jns
ds
and
das
cltd
cld
mov
sub
cmp
jle
ret
push
cmc
pushf
cli
jae
ljmp
ficoml
jg
xchg
sub
roll
jecxz
jno
arpl
sub
popa
scas
leave
pop
insb
cmpsl
ss
fdivrs
outsl
cld
add
fsubrs
fidivl
loopne
std
fisttps
mov
ss
inc
inc
pop
inc
mov
add
aad
push
dec
into
add
aad
aas
rorl
and
xchg
dec
mov
adc
mov
cld
iret
xor
ret
cmp
sub
stos
jecxz
into
sub
push
dec
pop
mov
pusha
stc
or
lea
stc
dec
call
jo
or
push
fstpt
out
mov
push
adc
or
shll
and
movsl
movsb
adc
cmpsw
lcall
pop
mov
outsl
pop
sub
sub
fcomp
mov
movl
add
mov
dec
cli
sub
mov
lea
aam
or
push
outsl
cli
jp
lret
xchg
inc
pushf
or
or
test
sbb
cmc
mov
jmp
mov
adc
mov
mov
dec
movsb
pop
mov
mov
bound
cwtl
or
fdivrl
cmp
inc
fsts
aaa
jo
in
mov
push
dec
jle
rorl
xor
mov
pushf
mov
xchg
inc
mov
pop
aad
jle
aam
add
call
into
lahf
stos
pushf
cmpsb
into
lock
or
xchg
cmp
push
movl
jg
loop
imul
cmp
pop
push
adc
add
sbb
sub
aad
jnp
je
ret
rcl
pop
cltd
xchg
dec
out
mov
inc
mov
mov
cmp
xor
ljmp
sub
jne
jge
out
imul
fimuls
mov
inc
cmc
add
jle
xchg
mov
cmpsb
xor
fdivrs
sub
out
add
push
addr16
in
incl
add
rcll
and
adc
push
push
adc
fsubr
inc
sub
dec
jbe
push
inc
and
mov
push
dec
push
jecxz
out
jge
out
adc
aam
and
or
jmp
and
flds
cmp
and
fcmovu
and
in
ss
dec
movsb
sub
sub
mov
fwait
mov
push
dec
sbb
mov
imul
add
daa
xor
mov
and
ret
lcall
add
and
sbb
pop
fimull
into
sub
mov
out
stos
lahf
popf
adc
jbe
sbb
mov
adc
mov
xchg
adc
pusha
out
mov
xchg
mov
neg
leave
dec
jp
fs
or
aad
iret
xchg
push
fdivrp
pushf
je
pushf
and
int3
push
jbe
cwtl
pushf
or
jnp
data16
je
push
mov
aas
pop
dec
mov
push
cmp
aas
out
inc
outsl
xchg
ret
inc
popf
ja
in
bound
scas
fistpl
and
test
ds
pop
arpl
loop
scas
ret
adc
jge
movsl
fildl
addr16
sbb
sahf
insb
leave
jne
lret
push
pop
int
adc
ret
int
imul
inc
test
cwtl
and
inc
add
sbb
or
lret
xchg
jno
xor
adcl
mov
andl
xchg
or
add
in
popl
xlat
aaa
scas
pop
imul
mov
dec
or
repnz
sbb
leave
xchg
adc
addr16
test
cmpb
push
mov
jnp
les
jecxz
push
mov
sub
rcrb
pop
ss
and
add
es
addr16
test
xlat
rorb
rclb
mov
lcall
sbb
cli
push
mov
outsl
aad
lcall
lret
mov
aam
ds
arpl
rolb
sar
sti
iret
jmp
out
push
fucomip
adc
xor
or
rcrb
sub
pop
cmp
xor
dec
push
xor
rorb
adc
lret
mov
add
xlat
sbb
sub
add
dec
int
fcompl
mov
push
add
jg
sub
adc
xor
sub
add
pusha
jnp
je
sahf
push
add
dec
ficoml
imul
jl
fwait
xchg
jl
push
adc
movsl
loope
test
or
test
aas
mov
repz
mov
xchg
shrb
int3
push
adc
sub
dec
push
orl
xor
push
sbb
jl
push
add
pop
add
sarl
sahf
leave
inc
insl
adc
cmp
adc
pop
in
in
js
arpl
lret
ficompl
sub
loopne
out
popl
mov
aad
mov
mov
cli
xchg
mov
jo
adc
dec
cmc
and
repnz
les
sbb
dec
or
lret
cltd
out
pop
mov
add
loope
in
fstpt
stos
inc
aaa
adc
sub
mov
and
mov
mov
mov
popf
xchg
repnz
xchg
in
jb
sbb
add
dec
sub
pop
loopne
cli
mov
mov
cmpl
ret
mov
mov
ret
std
loopne
push
addr16
lahf
sub
inc
xor
mov
stos
inc
xor
popa
arpl
xor
jae
stc
imul
or
inc
test
sub
push
push
jge
dec
xor
adc
dec
jno
jge
shll
add
dec
cmpsb
push
or
shlb
mov
push
cmp
add
add
bound
in
mov
fdivs
xor
add
xchg
jge
in
testl
and
xor
stc
add
dec
xor
ret
sbb
push
pop
pmaxub
lret
push
ret
mov
cltd
dec
popf
imul
sub
jle
inc
enter
inc
inc
mov
adc
icebp
dec
cmp
and
push
mov
lahf
cmp
sbb
pop
jg
icebp
mov
ret
jg
dec
pop
inc
test
dec
xchg
pop
jns
xor
lods
pop
ss
test
jns
add
fiaddl
inc
pop
push
stos
fistpl
fsubs
rol
pop
mov
xor
mov
int3
adc
popa
arpl
dec
iret
mov
icebp
in
sub
lret
push
and
push
add
dec
or
sub
sbbl
icebp
mov
mov
cmp
fiaddl
stos
mov
lods
lret
mov
xor
mov
pusha
or
fsubs
dec
dec
xchg
repz
jo
pop
push
jge
jg
adc
sub
or
rep
lret
orb
sbb
pusha
lock
mov
inc
and
std
xchg
sarb
divl
sub
out
fs
addr16
das
je
pop
ret
lods
xchg
xchg
mov
adc
sub
scas
daa
movsb
add
dec
loop
in
ds
xchg
cli
jmp
movsb
adc
lret
add
pop
sbb
insl
cmp
and
arpl
mov
nop
sbb
aam
test
cld
mov
fimuls
pop
adc
xor
sbb
xlat
sub
mov
arpl
pop
or
sub
insl
xor
popl
aaa
shrb
inc
sbb
cmpsl
jno
dec
jecxz
xchg
lret
and
inc
push
xor
push
sbb
sub
cmpsb
dec
stos
es
or
cli
ret
xor
and
nop
cmp
inc
je
cmpsl
lock
or
adcl
inc
add
mov
mov
ja
and
adc
shlb
test
out
imul
lcall
jnp
mov
dec
adc
or
xchg
fdivrs
movsl
mov
adc
inc
pop
fstpt
stos
cmpsl
iret
xor
push
lods
mov
shrb
ja
hlt
inc
sub
aas
ret
jg
rorb
rolb
mov
cltd
lcall
test
paddsw
fdivs
sbbb
or
cmpsb
fmuls
popa
xor
mov
cmp
ss
std
mov
cld
jp
ret
dec
pushf
cmp
cmp
movsl
sub
pop
scas
daa
xchg
adc
clc
or
push
movsb
stos
add
mov
cmp
jns
xor
nop
cmpsb
mov
mov
lcall
cmp
xchg
add
jno
sbb
mov
sub
push
aam
cmpsb
into
xlat
cmp
popf
inc
test
lcall
ret
xchg
cltd
into
testb
cmp
push
and
xor
pop
std
xlat
jno
pop
sbb
mov
xlat
fdivrl
cmp
repnz
out
pop
inc
mov
pop
xchg
loopne
into
fisttps
cmp
hlt
cmp
adc
mov
cmc
cmp
nop
add
dec
repnz
stos
shrb
out
mov
mov
lret
ret
cs
fstl
jl
pop
jle
and
in
les
call
sub
cmc
xchg
sbb
push
into
test
add
mov
js
add
pop
aaa
fimull
push
out
push
outsb
mov
lods
in
jge
xchg
out
cmp
test
mov
fstpt
inc
mov
mov
add
push
mov
stc
sbbb
lock
push
push
or
or
incl
xchg
adc
add
imul
dec
lret
cmp
mov
xor
pop
std
lahf
les
xchg
jecxz
test
clc
or
add
repz
repz
out
jl
pop
mov
xor
mov
cmp
jns
dec
mov
lea
orb
dec
sub
mov
mov
test
xchg
jno
dec
out
dec
jb
ja
and
xchg
mov
pop
in
sub
std
dec
adc
xor
out
jo
das
jns
adc
subl
push
stc
gs
dec
ret
adc
dec
ss
scas
jae
icebp
push
mov
test
lret
shr
popa
imul
and
fs
xchg
mov
sub
fsubrl
les
sbb
jno
cltd
pop
inc
or
xor
gs
xchg
fdivrl
shll
push
je
jg
call
fimull
xchg
and
outsb
in
lret
fstl
dec
jl
aam
dec
mov
ljmp
lods
es
cld
cltd
add
fmuls
push
repnz
mov
add
push
adc
stc
aas
dec
pop
inc
and
in
sbb
push
fdivrs
test
lret
sbb
cmp
inc
xchg
mov
mov
stos
out
xlat
out
inc
sbb
cltd
jno
int3
add
pushf
dec
sti
mov
cli
js
dec
imul
pusha
or
insl
mov
pop
cli
sbb
jo
inc
mov
jecxz
mov
mov
dec
mov
inc
pop
dec
dec
cmp
jg
repnz
sub
mov
mov
loopne
leave
addr16
jecxz
mov
and
dec
lcall
adc
cmp
imul
xorl
test
popf
adc
iret
add
dec
jo
popa
xchg
lods
sub
sub
mov
sbb
pusha
rcrb
push
gs
dec
sub
outsl
test
lock
xor
cmpsl
in
js
es
push
stos
pop
sti
stos
dec
jl
jno
adc
add
stc
or
mov
mov
imul
insb
insl
insl
fs
nop
pop
mov
dec
dec
mov
push
rcrl
push
push
adc
or
cld
inc
cmp
icebp
dec
cmpsb
outsb
pop
lds
dec
imul
icebp
fildl
xor
xor
mov
sahf
fstpt
pop
out
rcrb
mov
fimull
inc
out
sbb
std
sub
push
jl
clc
vhsubpd
sub
subl
lret
inc
insb
dec
inc
lods
push
fs
push
pop
shrb
cmpsb
mov
sbb
aas
out
cmpsb
in
xchg
enter
dec
add
cmp
jecxz
jae
sub
int
sub
repnz
sub
sbb
test
jae
xchg
jo
fistpl
push
jl
pop
jmp
imul
rcl
repz
fcmovnb
jnp
push
dec
sbb
push
xchg
lret
push
push
andl
mov
pop
out
ss
push
cmpsb
int
cmpsb
call
mov
enter
and
adc
lods
lock
sub
in
add
cmp
fsts
repz
add
rcll
outsb
push
mov
in
addr16
hlt
push
cmp
and
call
pushf
mov
or
push
and
insl
aas
cmpsl
sbb
jecxz
mov
loop,pt
iret
aaa
mov
sub
sub
sub
xor
mov
je
jnp
in
mov
faddl
inc
jnp
cmp
jge
mov
ja
out
mov
push
add
jo
lea
cmc
pop
or
sub
jmp
int
mov
or
xlat
dec
sub
rclb
test
jno
and
pushf
out
int
aam
sbb
or
inc
xchg
mov
xchg
dec
adc
dec
dec
push
inc
shrb
mov
pop
xchg
es
xchg
cmp
xchg
xor
mov
ss
or
or
pop
in
mov
mov
or
push
and
rolb
lea
cli
repz
repz
pop
add
cmc
dec
call
aaa
les
pusha
and
sbb
dec
andb
adc
stos
jecxz
lea
inc
pop
push
dec
idivb
aad
sub
cwtl
add
mov
sarb
add
fcmove
pop
inc
mov
leave
lret
xlat
xchg
mov
hlt
jo
ret
adc
mov
mov
rcl
mov
leave
mov
jecxz
stc
js
dec
ljmp
xchg
xor
js
and
pop
add
cs
inc
mov
xchg
ret
mov
bound
inc
popf
mov
aad
mov
or
mov
or
jmp
mov
pop
jno
ss
and
mov
pop
add
push
jg
negb
mov
and
fdivl
in
push
gs
mov
imul
sbb
push
xchg
cmc
inc
pop
xchg
sub
idivb
mov
aam
out
lods
mov
aaa
pop
fsubrl
xchg
out
mov
in
dec
cltd
aam
cwtl
inc
inc
outsl
sbbl
sarl
xor
in
jp
sti
mov
jbe
mov
jae
pop
dec
mov
js
pop
fucom
ficomps
and
add
xor
dec
jl
cmp
mov
loop
jecxz
pusha
fstpl
xor
sbb
insl
push
sbb
aam
icebp
out
mov
mov
jns
jle
xchg
jle
sbb
test
mov
cmp
mov
and
cmp
sbb
das
adc
into
mov
inc
cmpsl
inc
or
iret
repz
popa
jge
cmp
stc
sbb
cwtl
adc
add
in
rol
sbb
aas
pop
mov
test
push
negl
jnp
mov
daa
clc
and
push
cmp
aaa
pop
inc
xchg
mov
dec
add
fcompl
jae
cltd
ja
outsl
cmpsb
xchg
call
jnp
movsl
xchg
mov
or
in
cmp
adc
sar
inc
add
outsl
add
xchg
jo
xchg
ss
or
mov
sbb
loop
scas
xchg
xchg
rorb
test
faddl
dec
push
aaa
xchg
mov
call
jbe
nop
push
push
les
leave
arpl
in
dec
push
mov
sub
xchg
cltd
pushf
jp
sbb
push
aad
enter
push
inc
dec
xchg
jae
cltd
mov
cmp
icebp
cmpsb
or
mov
insb
fdivl
lahf
xlat
mov
add
cmc
das
xchg
sub
int3
pop
mov
push
stos
stc
pop
xchg
xchg
add
push
mov
sbb
or
jae
push
mov
xchg
or
inc
jle
jmp
add
sbb
or
and
jge
enter
lahf
out
mov
xor
xor
jge
xor
lods
popf
mov
lock
iret
or
insl
and
in
push
stc
cs
mov
cmp
push
call
in
xor
mov
lds
jp
cli
adc
fmul
loope
mov
ds
xchg
lea
adc
out
fwait
mov
fstpl
mov
push
push
and
shl
push
pop
shl
fdivl
addr16
lods
movsl
movsl
pop
or
repz
sub
xchg
push
arpl
cmp
scas
ficompl
mov
jns
push
push
pop
lea
push
xor
sub
cmpl
adc
arpl
jge
lahf
test
rcrl
xor
jb
dec
movsl
fld
xchg
subl
lods
ss
jnp
mov
fsubl
imulb
cmp
cmp
pop
pop
sbb
push
hlt
lret
divb
push
push
aaa
sbb
ljmp
push
test
pop
sub
cmp
add
pusha
jae
jmp
cmp
cltd
loope
lret
mov
stos
xorl
lcall
adc
push
push
outsl
and
pop
inc
push
mov
jle
inc
fwait
ja
fldl
mov
cli
std
mov
xor
ja
data16
inc
icebp
push
inc
divb
pushf
sub
fcmovnu
adcb
jns
cs
roll
pop
adc
cmpsb
pop
gs
aaa
cli
pop
mov
loop
sub
stc
and
iret
jp
pop
jg
mov
cmc
sub
stos
in
stc
icebp
sbb
iret
add
idivb
popf
es
push
adc
sub
daa
and
pop
cmp
cltd
jle
loop
mov
clc
sbb
dec
rorb
fs
cltd
inc
add
dec
lahf
dec
adc
stc
pop
lods
adc
out
add
mov
xlat
cmc
ret
cld
inc
adc
add
sub
add
jle
pop
popf
jmp
mov
or
adc
mov
cmp
into
ret
lahf
loopne
or
ss
int
scas
push
cmp
fnstsw
clc
fidivl
ret
push
stos
xchg
inc
dec
mov
pop
jecxz
in
or
out
std
dec
inc
flds
mov
jmp
xchg
xor
push
dec
push
adc
test
ja
ficoml
imul
cmp
adc
jmp
xlat
out
std
andb
add
adc
icebp
xor
sbb
xchg
sbb
jae
add
fwait
xlat
xor
sbb
adc
push
push
fsubl
rcrb
shl
mov
push
js
aam
lds
shrb
pop
loop
pop
test
jge
cmp
pushl
adc
mov
inc
pop
or
fisttps
lea
test
xor
test
add
mov
or
js
inc
fwait
outsb
in
popf
in
stos
xchg
rcrb
or
sub
fmul
in
mov
xchg
push
rcrl
pusha
arpl
mov
push
cmp
enter
push
orb
push
hlt
je
lret
pop
rclb
xchg
add
repz
aas
sbb
pop
xor
dec
nop
loope
jbe
gs
pop
lds
shlb
adc
insl
in
xlat
js
add
cs
mov
add
and
scas
loope
sahf
and
out
insl
rclb
jnp
xlat
movsb
push
lods
mov
pop
xor
mov
and
scas
aas
pop
ret
and
fwait
clc
add
ss
cmc
mov
ljmp
data16
xchg
dec
sbb
adc
ss
aaa
mov
xchg
shrl
setg
lret
sub
mov
mov
mov
cmpl
pop
in
ret
jmp
outsl
mov
andl
jbe
frstor
sbb
rcrb
adc
stc
inc
adc
mov
mov
popa
add
fldcw
cmp
xor
ja
inc
aaa
jg
es
cmpsb
daa
sbb
orb
mov
leave
jle
in
mov
cmc
xor
mov
pop
add
cmp
mov
add
mov
sub
mov
cmc
in
cmp
push
sbb
lret
aam
push
es
jle
pop
cwtl
mov
stos
je
shl
and
push
or
frstor
nop
cld
pop
sbb
cld
or
lods
decl
sarl
into
dec
pop
in
sub
pop
inc
add
enter
hlt
lcall
lods
sub
stc
or
rorb
mov
insl
int3
arpl
imul
mov
jns
add
nop
and
adc
sbb
sbb
leave
push
stos
sbb
cli
xor
xchg
lods
mov
out
in
insl
call
dec
sarl
mov
mov
fisubrl
sbb
lahf
inc
lods
clc
scas
nop
call
cmp
xlat
xor
sbb
jno
out
pop
inc
cmp
xor
xchg
scas
enter
inc
jns
int3
or
xchg
sbb
jl
pop
shrl
outsb
imul
add
in
jle
leave
mov
cmp
iret
popf
jp
sbb
std
outsb
int3
dec
pop
mov
ficoml
jecxz
clc
sub
pop
sub
repz
lds
int3
and
inc
rcrl
xlat
in
inc
mov
and
ret
inc
push
test
lea
div
dec
mov
add
out
outsb
pop
mov
das
xchg
inc
add
xchg
mov
xchg
popf
push
lcall
insb
xchg
jmp
aad
mov
sahf
push
pusha
xchg
inc
and
icebp
outsb
push
cmp
add
push
pushf
mov
addr16
mov
push
stos
or
jp
and
sbb
into
xchg
lahf
mov
enter
idivl
xlat
inc
cli
imul
xor
cli
xor
jae
push
popf
das
fs
push
aad
cwtl
cs
stos
xor
out
cli
mov
sbb
mov
push
outsb
dec
inc
xchg
scas
inc
je
jmp
jns
shrl
jne
lds
adc
jmp
fldl
call
mov
pop
int3
pop
pop
cmp
test
lock
or
pop
xchg
dec
clc
lds
or
or
inc
sbbl
mov
add
rcrl
movd
or
jae
pop
pop
stos
out
cmp
ror
cmp
and
out
mov
sub
adcb
lods
aas
xor
mov
fistpl
aaa
jb
sub
pop
in
pop
jns
aam
and
rorb
imul
insb
jb
or
cmp
add
sahf
xor
sbb
mov
out
dec
lods
je
loopne
pop
adcl
in
scas
insb
aad
outsb
loopne
into
fwait
lret
mov
pop
mov
imul
movsb
inc
cmpsb
pop
int3
addr16
pusha
mov
dec
sbb
adc
inc
mov
aaa
sub
mov
frstor
test
mov
adc
clc
add
lret
mov
outsb
fistpl
add
cmpsl
push
and
jno
cmpsb
mov
aas
mov
out
insb
push
adc
mov
rol
mov
add
push
push
xchg
adc
divb
out
js
stc
sahf
sarl
shl
or
cwtl
je
push
bound
xchg
pop
bound
mov
sti
es
inc
jp
arpl
sub
fldl2e
or
sbb
lods
cmpsl
movsl
imull
movsb
pop
xor
aaa
jmp
adc
push
imul
insl
dec
scas
into
xchg
xchg
and
pop
xor
sarl
ljmp
ja
mov
add
or
ja
sti
dec
or
push
and
push
clc
jle
mov
push
out
fwait
add
xor
sahf
aas
or
pusha
pop
mov
pop
insb
roll
dec
jl
cmp
cmp
arpl
rol
dec
iret
push
inc
out
bnd
repz
test
sahf
in
lock
hlt
fdivs
insb
pop
adc
fs
arpl
and
push
add
jle
dec
popf
popa
and
lcall
jg
or
and
int3
jge
pop
sbb
outsb
push
dec
pop
jnp
cwtl
lcall
push
cli
dec
adc
and
shll
popf
push
mov
pop
push
cs
adc
cmpsb
in
push
gs
mov
xor
mov
rcl
dec
lods
iret
add
add
shll
inc
mov
mov
cwtl
iret
dec
in
into
mov
xorl
lcall
mov
mov
fimuls
js
xor
pop
bound
adcl
pop
fwait
sub
jae
lcall
movsb
push
ds
aaa
pop
shrd
sbb
pop
mov
xchg
push
fdivp
jmp
loope
stos
or
dec
imul
in
ret
dec
pushf
xchg
repz
dec
sbb
sbb
push
rcll
cmp
lods
sub
xor
push
jnp
fisubs
mov
adc
ljmp
add
jnp
loope
add
movsl
xorb
or
pop
sub
inc
test
lea
xchg
xchg
outsl
mov
js
ficoms
jns
mov
lods
push
push
iret
dec
jbe
leave
fistpll
xor
daa
add
push
shrb
pop
int3
cwtl
loope
mov
add
inc
fwait
or
out
and
vpshlb
sbb
adc
int
negb
jb
out
mov
push
xlat
ja
mov
or
jmp
xchg
add
shlb
mov
in
xchg
shl
aaa
mov
pop
jne
jecxz
sbb
daa
mov
sub
jl
sbb
mov
add
mov
fidivrl
dec
ret
aad
push
loope
into
jge
cmp
into
jecxz
adcb
jb
mov
mov
mov
adc
scas
lods
jbe
push
lahf
sbb
inc
mov
cltd
popa
fmuls
shl
sub
movsl
sub
cmp
loope
inc
sub
in
lcall
or
pop
fadd
add
divl
inc
std
jge
mov
sbb
nop
adc
xlat
inc
or
jg
push
cs
xchg
jns
mov
fstpl
and
xchg
lods
add
lods
clc
jecxz,pn
fisubl
int3
ljmp
test
out
sub
sub
xchg
pop
xor
cmp
cmp
inc
icebp
sub
push
xchg
fxch
cmc
lahf
inc
add
lret
int3
push
push
xchg
push
dec
shr
xor
adc
roll
mov
nop
sub
andb
leave
subb
je
pop
adc
xchg
xchg
fmulp
out
or
adc
mov
rcr
sub
aas
nop
xchg
xor
fwait
aas
fldt
es
cmp
lret
or
adc
sbb
or
scas
and
push
fisttpl
lahf
test
loop
xchg
add
xor
daa
push
xor
add
fnstcw
lcall
cmc
sub
xor
adc
hlt
inc
daa
adc
fdivr
bnd
enter
mov
testb
adc
jne
cmpsl
and
insb
lods
push
lods
btr
mov
sti
jns
mov
adc
cmpsb
lahf
mov
jns
call
stos
shlb
test
cmpsb
inc
int
je
shlb
mov
pop
jecxz
or
negb
sub
push
aaa
push
aam
rcll
or
xor
int3
cmp
adc
in
fwait
or
jns
sbb
adc
pop
xor
nop
out
jae
outsb
mov
lods
inc
xor
jg
push
clc
pop
xor
or
stc
cmp
dec
xchg
jecxz
pusha
and
test
inc
push
and
lods
notb
lock
in
sbb
mov
loop
add
mov
mov
divl
je
sti
push
fmull
xlat
mov
pop
adc
push
sysret
jne
js
add
and
out
cwtl
arpl
mov
mov
leave
mov
and
adc
lods
mov
xor
push
jp
cltd
jmp
and
mov
mov
jb
in
push
adc
add
loopne
jmp
and
dec
aam
dec
and
cmp
fs
movsl
cmpsb
outsl
mov
icebp
xchg
cmpsl
jne
mov
scas
or
jo
push
sub
stos
mov
adc
addr16
and
xchg
push
cmp
in
sbb
hlt
xor
mov
xchg
push
sti
cmp
shlb
fldt
lea
fnstsw
out
loope
sub
mov
jb
mov
daa
cmpsl
out
hlt
mov
xor
push
jne
push
mov
mov
push
and
scas
je
cmp
imul
in
cmp
das
inc
leave
sub
jns
sbbb
out
pop
dec
mov
lock
adcl
mov
jg
out
ljmp
sub
or
xchg
insl
fwait
shlb
gs
ja
shll
xchg
mov
shrl
stos
add
adc
push
or
mov
push
and
sbb
mov
cs
pop
inc
jbe
xor
daa
fstl
push
mov
inc
scas
test
push
adc
add
ss
mov
sahf
add
inc
pusha
adc
mov
mov
jmp
pop
inc
inc
cmpsb
inc
xchg
movsl
sahf
jns
or
xor
jge
mov
sti
repnz
add
push
add
and
dec
stos
mov
xor
stos
add
sub
das
stc
loopne
mov
cmpsl
xchg
dec
js
fsubrl
pop
mov
adc
imulb
inc
push
leave
ficompl
add
push
or
jns
insl
adc
flds
test
and
pop
cwtl
or
xchg
arpl
jbe
hlt
sub
push
cld
adc
call
push
add
push
sub
ficoms
or
stc
les
data16
fisttps
cld
stos
sarb
push
ljmp
sti
cmc
cli
mov
push
jb
xchg
lret
jnp
cmpsl
mov
mov
pushf
mov
add
mov
and
mov
cs
ss
cltd
aaa
ret
jg
inc
inc
jb
test
jbe
loope
sbb
xor
sub
dec
neg
inc
push
jp
outsl
sbb
dec
xor
push
lock
fcmovne
bound
insb
loope
jnp
cmp
imul
jle
iret
gs
cli
sub
fdivrl
xchg
or
pop
mov
pop
cltd
fsubrs
mov
cltd
popl
inc
pop
fdivrl
into
leave
dec
lock
pop
dec
mov
stos
mov
test
cmpsb
adc
sbb
iret
jl
jne
fwait
push
or
nop
clc
pop
ljmp
scas
pusha
call
cltd
lahf
gs
xor
dec
sbb
shlb
pusha
cmp
addr16
sbb
add
add
xchg
mov
inc
cli
pop
mov
mov
int
pop
loopne
xchg
sbb
test
test
adc
cmp
push
fcoms
div
pop
test
push
jbe
sub
cmp
cli
adc
mov
sti
icebp
imul
mov
xor
sbb
lods
fnstsw
gs
aaa
mov
into
or
pop
ss
imul
lret
popf
xchg
test
mov
push
mov
inc
rolb
sub
icebp
xchg
hlt
or
fstps
aas
jbe
lea
adc
decb
and
push
insb
cmpsb
push
adc
rcll
adc
in
mov
out
mov
push
dec
mov
pop
jg
mov
mov
jno
faddl
fcmovne
and
cmp
lret
mov
loopne
add
inc
xor
xor
ret
rcll
mov
xchg
adc
outsb
xor
add
addr16
push
xor
es
sarb
lcall
pusha
lahf
xchg
sub
rorl
ret
aas
and
mov
sahf
popa
out
je
add
mov
xor
sbbw
gs
test
insl
sub
jnp
jae
cmpsl
jb
jecxz
mov
sar
mov
mov
cmp
push
sub
cmpsl
popa
add
jecxz
mov
xor
cmp
cwtl
mov
and
cmp
pop
hlt
mov
xchg
push
jecxz
movsl
push
jo
clc
xchg
es
test
stos
mov
xor
inc
xor
cmpsb
cmp
inc
pop
in
aaa
or
clc
jmp
xor
popf
mov
or
cltd
push
pop
lcall
add
add
cmp
sbb
xor
mov
outsb
or
jl
bound
and
in
jl
adc
mov
mov
lds
aad
xchg
xchg
add
pop
arpl
sbb
shlb
xor
push
mov
test
add
stc
nop
stos
arpl
xlat
shrl
stc
icebp
popl
sub
in
jae
ret
xor
cmc
pop
loope
lods
fwait
sub
jbe
outsb
pop
notl
aaa
aad
mov
pushw
fildl
pop
sbb
mov
sub
sub
int
mov
mov
cltd
mov
push
leave
jmp
pushf
push
push
rorl
pop
jg
push
fnstsw
inc
and
test
mov
mov
jmp
mov
pop
pop
pop
adc
subl
test
imul
inc
in
or
icebp
repz
mov
or
adc
fiadds
je
xor
mov
xchg
shlb
cwtl
std
test
xchg
pop
mov
sete
adc
mov
iret
inc
hlt
jno
push
test
fstp
pushf
fstpl
out
loopne
ret
fcomps
nop
jp
mov
shll
movsb
mov
sbb
sbb
sub
mov
outsb
adc
scas
jmp
xor
sub
and
popa
inc
fs
std
or
int
adc
ret
loope
cmp
add
adc
and
push
xor
out
insl
or
int3
xor
stc
ljmp
mov
mov
arpl
rcrb
push
mov
popf
in
add
push
jle
stos
lds
arpl
lret
pusha
popa
or
or
fmul
pop
cmpb
add
lret
or
pop
mov
pusha
mov
add
shrb
jecxz
clc
test
xor
pop
out
push
leave
add
mov
stos
or
out
es
jecxz
ds
imul
jns
jmp
push
sub
mov
pop
sub
lcall
dec
test
stc
inc
sbb
dec
pop
mov
int
ffree
movsb
neg
and
cmp
test
das
lods
filds
out
inc
outsb
xor
mov
rorb
out
pop
cltd
inc
fcomip
mov
mov
xchg
iret
addr16
movsl
jb
fistl
loop
lods
cmp
fimuls
sub
cli
sbb
mov
adc
adc
adc
cmp
jno
outsl
movsl
xor
or
or
and
sub
aad
les
ds
fs
jl
cmp
push
inc
aam
les
pop
inc
jbe
cli
xor
and
sub
cmp
dec
int
fidivs
xchg
jge
std
cli
pop
lods
dec
pop
push
cmc
es
add
sbb
sbbb
dec
clc
cmp
les
dec
popf
add
push
lahf
jmp
outsb
dec
les
mov
and
ljmp
gs
pop
push
lock
mov
mov
outsl
imul
fldl
push
adc
mov
fwait
jnp
and
mov
insb
enter
sbb
fwait
and
pop
lods
stc
or
cmp
and
mov
pusha
lock
clc
xchg
xchg
xchg
rcrl
mov
out
sahf
insb
xchg
insl
xor
jb
inc
and
xor
xor
lods
push
add
or
nop
dec
xchg
dec
mov
xchg
cwtl
mov
push
jo
lret
and
xchg
dec
mov
popa
cmp
jp,pt
aam
cmp
push
mov
inc
fs
loopne
adc
lret
in
filds
cs
pop
jmp
lahf
es
add
ljmp
lods
mov
jmp
add
mov
fwait
imul
ret
cli
cs
sti
sbb
test
stc
lock
adc
aaa
inc
xchg
xchg
in
dec
push
sbb
daa
inc
adcl
adcl
cmc
lcall
dec
jecxz
push
xchg
clc
mov
lods
push
jb
stos
jne
pop
mov
mov
jnp
fldt
rep
add
in
loopne
or
pop
sub
jl
repz
jne
lret
leave
push
xchg
scas
and
sub
push
enter
pop
adc
out
and
test
sub
pop
inc
cmp
prefetch
sbb
push
push
jg
add
sbb
iret
cmpl
inc
das
and
sbb
xchg
fs
mov
push
fisttps
xchg
push
cmp
out
xor
stos
shl
pop
xor
faddl
shr
mov
jae
add
fcoml
fisubs
add
outsb
mov
pusha
rolb
rorb
sbb
mov
divb
dec
cld
and
xlat
stos
xchg
xchg
xlat
cmp
cmp
inc
sbb
rorl
pop
xor
add
in
imul
xor
xorl
add
mov
mov
in
and
mov
xor
mov
aaa
shll
sbb
pop
inc
xor
dec
mov
pop
cmp
divb
test
ds
pop
cmp
add
fstps
mov
jle
ret
sbb
mov
xor
pop
aaa
imul
loop
rclb
sub
sub
cmp
out
fimull
test
push
mov
lcall
sub
aaa
mov
inc
inc
mov
rcll
inc
test
pop
inc
fstl
movsb
sbb
leave
sti
mov
add
fadds
sbbl
pop
dec
or
dec
jmp
dec
mov
daa
adc
cmp
cmp
imul
scas
les
fs
mov
in
cmp
pushl
sbb
add
jne
jp
jle
fdivrs
lea
dec
jge
or
dec
jge
mov
add
dec
cli
std
faddl
inc
cmpl
mov
jnp
mov
test
push
mov
mov
sahf
pop
aad
push
sbb
pop
lcall
in
push
insb
mov
aaa
cmpsl
mov
and
mov
out
ret
mov
sub
fnstcw
test
lods
shl
ss
or
dec
add
out
aaa
test
cmpsb
repnz
mov
out
es
mov
add
std
shll
inc
mov
xchg
adc
push
mov
adc
pop
imul
and
repz
cli
mov
ss
xchg
ss
add
dec
shlb
fldcw
sbb
xchg
ret
ror
pop
inc
add
push
int
leave
mov
outsb
outsl
movsb
push
mov
repz
mov
xchg
mov
xlat
xchg
ror
adcl
clc
mov
fimuls
adc
ret
fadds
insl
mov
push
subb
daa
dec
cli
out
xchg
mov
sbb
dec
mov
rorb
flds
cmpsb
das
jle
je
out
sub
and
mov
sub
fistpl
pop
push
xor
mov
or
push
xchg
sbb
outsl
push
insl
lea
popf
das
arpl
test
adc
mov
scas
lds
cmp
inc
push
loope
imul
cmpsl
rorb
add
sbb
mov
stos
xor
test
sbb
les
xchg
or
gs
sub
xor
adc
push
push
xor
mov
push
bound
mov
lcall
dec
mov
inc
push
ss
mov
out
mov
add
or
xchg
xor
ret
pusha
fistl
mov
inc
or
lret
mov
lret
fcomip
rorb
loope
sahf
and
jae
lods
popa
inc
lock
ja
or
lret
test
notb
mov
pop
xchg
pop
mov
cmpsl
imull
cmp
das
mov
rorl
lods
jp
or
xchg
mov
mov
sahf
cmp
out
sbbl
loope
add
xchg
mov
xor
addl
push
and
add
or
out
fisttps
shlb
or
inc
in
mov
fldcw
jg
cmp
lret
out
push
mov
sti
cmp
dec
xor
rcll
or
inc
mov
daa
in
xor
bound
pop
jo
or
mov
mov
dec
mov
inc
ds
xor
jmp
mov
xchg
sahf
jbe
sub
test
xchg
or
fidivl
push
sub
bound
mov
testl
or
mov
scas
inc
mov
cmp
jecxz
mov
int
jecxz
stos
cmp
cs
mov
fnstcw
jo
push
icebp
cmp
sarl
inc
sbb
and
xchg
fstps
jno
fcmovb
xor
cld
add
mov
loop
rclb
fidivl
les
inc
or
push
idiv
das
and
lcall
leave
fadd
inc
push
in
popf
jp
shl
bound
test
out
aas
xchg
push
mov
call
inc
dec
xchg
add
lods
dec
cmpsl
adc
or
dec
movsb
and
xor
mov
les
xchg
cmpsl
jns
xor
ljmp
and
popf
xlat
mov
ret
jecxz
sub
lcall
leave
pop
test
inc
jg
ja
mov
jle
fs
loope
aas
mov
iret
xor
inc
aas
dec
int3
jbe
pop
jmp
loop
loope
adc
lods
adc
adc
dec
shlb
fisttpl
pop
int
shl
jmp
enter
fisubl
movsb
sbb
or
add
ficoms
jg
pusha
jo
add
xchg
repnz
jge
jp
lods
cmp
xchg
or
test
pop
ja
lock
inc
inc
mov
mov
push
push
bnd
lods
frstor
mov
jo
cmp
lahf
fsts
pushf
sbb
fists
jns
sar
push
inc
mov
in
push
ds
int3
cld
loope
inc
add
repz
mov
push
mov
jp
loopne
test
sub
inc
xchg
dec
dec
xchg
mov
add
ror
push
cwtl
add
cmp
andl
cwtl
lret
cltd
ret
out
sbb
and
and
lds
dec
cmp
push
out
xor
push
cli
in
sbb
lea
into
cmpsl
mov
mov
call
jle
iret
mov
push
mov
mov
iret
adc
and
dec
cmpsl
cmp
and
in
push
mov
cmp
dec
jge
jp
xchg
cmp
and
sahf
sub
mov
push
fstps
mov
icebp
ficomps
sbb
push
js
scas
cmpl
push
out
cmp
push
mov
loopne
popa
cwtl
sub
ret
popa
push
pop
dec
negb
push
push
fs
aam
push
out
jg
or
push
ret
xor
popa
mov
inc
cmp
jmp
xchg
cmp
xchg
repnz
out
fmuls
mov
arpl
insl
das
test
and
out
jp
mov
push
jae
aas
fcmovbe
sahf
sbb
fstpt
fs
push
nop
cmpsb
lods
jg
add
dec
inc
add
or
daa
xlat
in
cli
js
pushf
xor
mulb
jno
stos
js
adc
mov
adc
jbe
and
jmp
add
lds
xor
into
push
pop
mov
shl
mov
nop
or
sbb
iret
cmc
xor
sub
ret
mov
or
cmpb
call
int3
dec
das
push
dec
int3
inc
add
inc
cmpb
xchg
ficoml
xor
cmpsl
or
inc
iret
and
test
inc
imul
add
cli
xchg
enter
scas
xchg
cmp
mov
push
inc
imul
xor
xchg
or
sub
cmp
adc
dec
scas
call
xor
fldl
repz
orb
repz
sbb
sti
fwait
jge
push
add
nop
test
stos
cmp
leave
inc
jp
jp
icebp
iret
jmp
adc
inc
add
pop
aaa
adc
or
cmp
std
xchg
in
and
push
scas
lret
jbe
xor
ficoms
aad
push
es
idiv
aas
xchg
out
inc
hlt
mov
pop
or
add
sti
jl
test
pop
cltd
mov
test
mov
sub
fnsave
or
cmc
push
adc
lock
sti
xchg
data16
sub
in
mov
xlat
and
adc
pop
inc
ja
or
cmpsl
hlt
insb
sbb
push
pop
lret
fs
add
pop
mov
filds
test
mov
mov
cmp
or
lods
out
popa
dec
mov
adc
inc
sbb
imull
sbb
dec
fiadds
adc
mov
ret
sahf
out
int
push
rol
cwtl
cld
fildl
js
xchg
ss
push
xor
or
push
js
cmp
fcmovnu
out
jne
cltd
pmulhw
pop
jo
jp
fwait
mov
jg
push
mov
pop
das
dec
lret
daa
xor
dec
xor
pushf
and
nop/reserved
sub
out
lcall
mov
xor
stos
add
mov
xor
inc
adc
mov
gs
addr16
jle
lcall
ficompl
imul
lods
imul
sahf
js
idiv
sbb
dec
insl
aad
mov
xor
mov
sub
inc
pop
mov
adc
and
bound
insl
and
mov
pushf
leave
ret
leave
jae
scas
or
rclb
fildl
xor
pop
jecxz
pop
cmc
lods
inc
daa
cmp
orl
in
fiaddl
pop
loope
dec
jne
mov
sub
les
insl
cmp
mov
das
in
call
push
jmp
xor
rolb
adc
test
cmp
mov
sub
adc
xlat
add
ds
jecxz
xchg
ret
lods
in
push
add
pop
loope
mov
jmp
push
pop
jmp
jae
pop
mov
sbb
or
jne
cmc
push
xchg
mov
adc
lea
add
inc
cmp
push
cmpsl
scas
or
popf
xor
cmp
int
addr16
mov
lods
add
mull
jb
sub
pusha
shlb
and
mov
or
mov
les
mov
popf
std
xorb
inc
xlat
push
lret
aaa
inc
xor
gs
inc
sub
in
das
cmpsl
fwait
jno
les
or
in
add
lcall
pop
mov
rcrb
xchg
ds
aam
push
stos
mov
testb
jnp
jns
jecxz
sub
dec
push
push
adc
pop
les
jo
pop
push
jne
popf
fildll
or
stos
jmp
jns
mov
xchg
enter
aam
std
movsl
xchg
addr16
mov
and
das
fmull
xchg
cmp
xchg
aam
fwait
mov
lods
xchg
addr16
mov
stc
push
xchg
mov
push
mov
hlt
mov
inc
into
cmp
mov
hlt
cmc
xor
cmc
add
and
test
stc
or
test
in
orl
mov
mov
hlt
xor
repnz
pop
dec
xor
pop
xchg
pop
add
and
in
lock
dec
std
loopne
cmp
adc
inc
out
sti
std
cmp
add
mov
ja
lods
or
leave
dec
push
pop
shl
pop
or
mov
jnp
xor
lods
xor
rorb
mov
icebp
xchg
imul
adc
cmp
sbb
push
aas
adc
xor
inc
mov
inc
ljmp
jne
dec
into
adc
out
mov
test
mov
and
jle
fstpt
arpl
or
pop
test
cmpsl
addb
adc
sub
push
jo
insl
adc
dec
mov
and
jmp
push
push
mov
cli
cmp
outsl
loopne
in
aam
into
xor
bound
jae
jns
testb
push
dec
mov
push
cmp
sbb
and
and
mov
dec
cltd
aad
in
adc
mov
cmpsb
in
mov
mov
and
xor
pop
lahf
jne
pop
mov
xchg
stc
mov
sbb
dec
mov
pop
push
js
push
jmp
add
pop
mov
mov
mov
pop
push
dec
nop
popf
shrl
sub
loope
testb
sti
jnp
mov
rol
imul
in
push
dec
iret
adc
inc
mov
sub
fcoml
sbb
nop
mov
mov
aas
aaa
or
push
fildll
mov
repz
xlat
jl
sub
rorb
mov
addr16
outsb
data16
sbb
mov
xchg
sbb
adc
mov
sbb
mov
dec
xor
pop
jbe
les
sub
test
mov
ficoml
stos
clc
outsl
pavgw
add
test
and
push
pop
mov
icebp
cs
sub
loop
outsl
repnz
filds
sub
mov
cmpsl
movsb
jg
mov
imul
in
xor
ljmp
xchg
repnz
aaa
pop
jl
outsl
sub
testb
stos
jecxz
lods
inc
xchg
lods
negb
cpuid
pusha
imul
jb
adc
cmp
cmp
pop
daa
jle
adc
sbb
orb
jne
int3
sub
lds
mov
arpl
test
sbb
shlb
xchg
pushl
test
out
imul
and
jne
das
pminub
scas
lock
pop
addl
xchg
lods
arpl
xor
jl
push
data16
push
testl
ja
scas
js
xor
xor
sbb
push
jle
sahf
xorb
add
xor
out
push
std
iret
out
mov
nop
push
aaa
lods
xor
icebp
pusha
sub
fiadds
mov
push
cmpsb
sub
xchg
jno
push
xchg
arpl
test
out
mov
mov
les
mov
daa
les
leave
cwtl
lret
scas
ret
test
jns
out
pop
fs
or
cs
mov
bound
pop
das
push
inc
decb
jb
xor
mov
sub
mov
push
adc
lods
out
call
xor
int
outsl
push
inc
push
and
push
pushl
daa
sbb
jecxz
insb
lock
cmpsb
xchg
xor
jo
and
daa
pop
jle
jno
lock
fcompl
mov
pop
nop
nop
out
sbb
xchg
sub
mov
pop
rclb
cltd
lret
mov
xor
les
push
jae
xchg
ret
add
cmc
xchg
fneni(8087
sarb
or
ss
popa
lods
cmp
pop
dec
xchg
mov
fs
push
adc
push
cmpsb
popf
jge,pn
ret
lods
jae
imull
lcall
push
jg
outsb
movsb
xchg
mov
mov
pusha
subb
scas
sbb
xor
lret
stos
sbb
ss
outsb
sti
jp
lcall
test
push
mov
movsl
xor
aam
jge
aad
cmpsb
xor
ds
lret
mov
lcall
ja
clc
push
daa
mov
xor
mov
push
in
pop
daa
fimull
fwait
cmp
push
fistpl
popf
inc
mov
je
lea
loopne
sub
pop
lret
fs
imul
mov
arpl
cmp
xor
mov
or
cltd
jecxz
xlat
jg
subb
pusha
jae
lods
in
pop
out
xchg
ret
clc
stc
or
out
cmc
js
scas
cltd
js
outsb
bound
jbe
js
sub
mov
jmp
leave
fdivs
xor
daa
ja
push
movsb
mov
mov
outsb
loope
sahf
xchg
jecxz
in
xor
inc
ljmp
addl
repz
mov
insb
mov
mov
cmp
ret
and
add
les
add
and
sub
and
push
lea
mov
dec
pop
mov
sbb
in
bound
fucom
pop
in
xchg
lods
cmc
sti
add
pop
mov
addr16
pop
mov
loope
pop
add
in
xor
cmp
lahf
xor
dec
insl
jbe
fistl
out
sbb
adc
divb
jmp
xor
or
stc
sarb
and
insb
in
jle
mov
inc
scas
cmc
insb
in
notl
lcall
and
adc
cmp
lea
adc
cmp
adc
or
pushf
fcoms
jmp
lods
lods
lea
pop
out
cmp
xor
and
stos
jge
icebp
pop
rorb
xor
sbb
dec
dec
xchg
adc
xchg
ret
loop
xchg
clc
xchg
es
xchg
loop
sbb
scas
dec
jg
int
je
nop
pop
fsts
and
add
std
ljmp
cmp
lcall
mov
mov
in
mov
sub
mov
lret
loop
sti
mov
adc
jns
pushf
call
cmpsl
outsl
inc
pop
push
cmp
inc
xchg
adc
cwtl
aad
dec
in
ljmp
xchg
arpl
shll
fmull
xchg
hlt
lea
add
cli
les
xchg
lahf
pop
lods
mov
cli
nop
pop
pop
mov
sbb
call
iret
icebp
aas
push
jbe
hlt
scas
in
dec
lods
jp
mov
xchg
jmp
insb
dec
adc
andl
out
sub
aam
xchg
add
push
mov
sub
lea
mov
xor
lahf
jb
adc
daa
push
outsl
aad
jne
pop
roll
cmp
push
dec
cmpsl
push
xchg
pop
mov
jnp
in
jmp
sbb
data16
lods
loopne
xchg
ja
sub
mov
jb
dec
scas
into
popa
out
hlt
lods
mov
je
outsl
sarb
lods
dec
xor
ljmp
adc
xchg
lds
es
je
pop
js
cmp
mov
xchg
dec
sub
repz
push
les
sub
shl
push
pcmpgtb
leave
jg
push
mov
xor
add
sahf
cld
lods
ljmp
pop
xchg
addr16
mov
je
in
lcall
push
mov
inc
test
pop
je
mov
mov
insb
rcrl
testl
add
movsl
xchg
xchg
cmp
and
ret
addl
dec
or
xor
pop
xorb
dec
mov
in
mov
adc
inc
testb
mov
rol
push
mov
dec
aam
dec
loopne
out
pop
add
and
xchg
jae
cmp
add
or
loopne
out
sbb
add
adc
dec
add
mov
js
mov
push
div
mov
add
in
in
sbb
popf
ja
xor
sbb
jo
movsb
or
into
push
test
gs
aaa
mov
ss
and
sub
test
add
pop
je
lock
push
outsb
lods
das
cwtl
cmp
pop
mov
xchg
js
xor
push
into
fcmove
in
pop
push
loop
rcr
lcall
sbb
mov
add
pop
push
cld
ret
cs
loop
jp
nop
xor
xor
fs
ljmp
mov
addl
sub
fists
popl
push
repz
and
dec
or
jge
push
inc
jp
adc
xchg
adc
out
lahf
sbb
mov
nop
cmpsl
lods
je,pn
mov
mov
repnz
xchg
inc
mov
movsb
add
nop
ljmp
les
xor
mov
and
inc
sbb
js
push
gs
adc
into
sub
jmp
pop
cmp
mov
lea
cmpsb
adc
mov
mov
mov
xchg
xor
jno
aas
mov
test
push
lods
scas
push
out
pop
ret
das
aam
stos
pop
lahf
stos
sub
inc
jbe
je
cmp
insb
lods
mov
cli
insb
lcall
in
les
pop
push
adc
ret
cs
push
xor
andb
push
xor
sbb
jae
dec
push
mov
push
mov
xlat
rorb
or
lret
inc
je
xor
xor
jl
nop
mov
lods
xchg
jo
push
mov
lcall
jns
test
push
cmp
cmp
lret
jnp
sarl
add
imulb
je
pop
inc
cmp
pop
xor
stos
mov
xlat
nop
jecxz
push
jmp
mov
iret
jno
sub
jo
xchg
sub
fcomps
outsl
fdivr
xchg
xor
sub
aas
sahf
or
std
and
stc
sbb
scas
adc
sbb
rorb
jmp
push
int3
adc
mov
sub
dec
push
decb
adc
cmp
and
test
push
test
sbb
mov
cmp
push
jecxz
mov
pop
fistl
scas
xchg
inc
roll
pop
sarl
loope
pop
rcl
rol
mov
sub
xchg
xor
inc
les
cmp
gs
sbb
xor
icebp
and
ja
mov
es
scas
cli
dec
mov
xor
sbb
mov
insl
in
mov
pop
mov
sbb
into
lahf
es
jp
push
ficoms
and
lahf
bound
not
sar
xchg
sub
jg
inc
adc
inc
pop
fwait
add
cwtl
mov
dec
xchg
bound
negb
jecxz
sbb
ret
mov
sub
ss
mov
sbb
js
mov
adc
enter
or
sbb
stos
bound
ljmp
arpl
dec
fistl
stc
aas
pop
scas
cld
push
jecxz
lcall
jecxz
adc
imul
add
data16
sahf
push
scas
jp
sbb
push
sbb
jecxz
fbld
lods
pushf
add
inc
or
dec
out
dec
adc
and
pop
sahf
adc
xchg
and
mov
add
xchg
cwtl
push
push
cmp
sub
sub
jae
mov
js
shlb
lret
in
sbb
out
cld
lcall
jecxz
in
loopne
sub
fdivrl
and
icebp
lock
jl
int
in
push
or
fmull
enter
cltd
fnstenv
inc
stos
mov
xor
cmp
mov
stos
cmp
cltd
adc
mov
jecxz
cmp
jne
in
adc
and
or
roll
mov
and
movsb
das
jb
sbb
outsb
fstps
sub
dec
jge
loop
and
sbb
dec
negb
leave
cs
dec
jne
dec
push
iret
test
je
add
add
cmpsb
movsb
fiadds
pop
ret
lds
cmp
sbb
sbb
popl
lods
in
nop
mov
shl
cmp
xor
mov
fidivs
jb
or
mov
pusha
xchg
int
fdivrs
addl
dec
mov
int
or
out
daa
jle
dec
pop
pop
or
enter
cmp
into
stc
pop
loopne
pop
scas
sar
fistps
mov
outsb
fists
cmpsl
sub
cmp
test
outsb
dec
ds
jb
cli
das
cmp
cwtl
daa
push
dec
mov
cmp
enter
pop
and
es
lods
jae,pt
nop
test
and
pop
stc
inc
pop
jbe
data16
in
cmp
mov
inc
into
mov
jge
rclb
daa
in
add
xor
or
scas
mov
pop
repnz
loop
stos
mov
rorb
stos
add
mov
lret
xchg
stos
arpl
pop
imul
loope
dec
clc
mov
xchg
mov
cmpsl
std
jb
pushf
roll
jg
das
sbb
mov
xchg
mov
lock
nop
sub
fdiv
pop
xor
cmp
and
clc
in
fcomps
pop
imul
sbb
adc
pop
cmpsl
negb
mov
call
sbb
test
mov
dec
or
mov
mov
int
orb
stos
js
jbe
cmp
jle
add
mov
out
xor
fildll
es
aaa
andl
jl
jbe
pusha
sub
xchg
arpl
jbe
pop
fsubrs
lods
fstpt
xchg
idivb
sub
insl
and
push
ja
jbe
popf
clc
fwait
dec
pushf
pusha
xchg
jecxz
cmpsl
mov
fistps
mov
dec
pop
stc
stos
in
push
and
and
hlt
cltd
mov
pushl
jmp
das
cmp
rorl
gs
mov
lsl
add
hlt
xchg
push
into
imul
mov
inc
jnp
mov
push
push
jbe
je
sub
push
mov
fsubs
push
cmpsl
cmp
scas
cmp
add
push
dec
jp
stos
pusha
inc
leave
xchg
inc
and
pop
jg
in
or
lret
dec
out
sti
sub
dec
bound
leave
int
add
in
outsl
add
mov
sub
aad
icebp
stos
mov
mov
xlat
or
mov
mov
mov
popf
jns
adc
and
jbe
jg
fldl
xor
repnz
shlb
cmp
andb
dec
mov
push
and
data16
mov
je
out
lahf
ljmp
pushf
mov
jl
xrelease
dec
int3
sub
or
xchg
incl
adc
and
hlt
cltd
and
cmp
lahf
push
ud2
incb
and
repz
ss
sub
push
push
in
xor
lods
jbe
mov
mov
pop
popf
ror
popf
or
add
jmp
cs
stc
int3
pop
jae
sbb
push
icebp
sub
in
xor
inc
adc
mov
dec
shrb
movsl
inc
cltd
inc
sahf
mov
fildl
add
xchg
nop
faddp
lret
in
cld
shl
ret
fnstsw
add
mov
mov
icebp
mov
or
sub
shrb
hlt
add
in
pop
dec
sub
scas
das
gs
add
lds
aad
xchg
inc
ret
pop
mov
lock
mov
jae
popf
xor
enter
inc
sti
shll
outsl
hlt
mov
mov
jle
sub
fisubrs
mov
xchg
xchg
inc
push
sarl
cmp
mov
add
and
insb
js
mov
lahf
hlt
xchg
add
or
pop
mov
cmp
sbb
leave
adc
mov
inc
mov
test
xchg
bound
adc
into
mov
fidivrl
jg
gs
cmc
jno
add
jmp
mov
pop
enter
cmpsl
shll
stos
pop
stc
das
push
rorl
xor
xor
cwtl
repnz
pop
xor
sub
ja
xchg
bound
test
push
xor
ds
xchg
inc
dec
outsb
movsl
jne
xchg
sahf
cmpsb
mov
imul
dec
dec
jb
cmp
sbb
inc
adc
mov
sbb
xor
mov
inc
loope
add
fildl
movsb
mov
push
je
add
mov
sbb
mov
fidivs
and
enter
jg
push
clc
jp
pop
fidivrs
dec
rclb
inc
cmpsl
mov
and
xchg
push
lahf
cmp
filds
or
pop
ds
jg
imulb
mov
les
int
jle
mov
push
sbb
fnsave
jmp
iret
fimuls
sbb
mov
pusha
mov
pop
dec
push
ret
and
stos
cltd
mov
es
mov
cmp
mov
in
insb
cltd
and
cmp
inc
pusha
loop
ss
add
xchg
xchg
hlt
xchg
data16
bound
cmc
adc
cwtl
cs
gs
cmpsl
imul
in
mov
push
roll
push
mov
jae
pop
pop
add
fstps
shlb
jbe
adcl
ljmp
xchg
test
std
je
ss
das
mov
mov
mov
push
xchg
jbe
out
and
in
rcl
dec
mov
sub
xor
lcall
mov
sbb
fs
addb
out
jb
jae
addr16
and
ja
mov
mov
cmc
add
jns
mov
mov
fcmovnb
adc
cmpsl
mov
and
and
outsl
push
test
mov
arpl
in
mov
inc
arpl
inc
neg
pop
mov
xchg
insl
push
int
inc
mov
push
add
push
loop
push
jl
sbb
outsl
xor
xor
dec
xorl
mov
sti
jno
dec
dec
in
inc
jns
xchg
xchg
dec
mov
fsubr
dec
jbe
ficoml
xor
dec
pop
cltd
inc
gs
sub
or
mov
js
inc
mov
dec
mov
jmp
push
mov
cmpl
fimull
daa
mov
movsl
sarl
add
adc
aas
dec
sbb
adc
xchg
mov
pop
repz
rcrb
xor
mov
and
xchg
pop
xchg
cmp
sarl
mov
xchg
cli
imul
andb
mov
jae
in
jbe
sub
in
add
or
jecxz
sub
popa
mov
pusha
shll
push
mov
xor
add
pop
scas
gs
lock
jge
adc
push
mov
mov
mov
pop
inc
push
jle
xor
outsl
sahf
sub
and
inc
xlat
scas
aam
movsl
shlb
add
sbb
icebp
dec
bound
int3
test
cltd
popf
fld
and
ret
and
and
fdivrs
ds
xor
ret
out
fisttps
and
xor
adc
jecxz
xchg
mov
sbb
add
jo
cwtl
xor
movsb
adc
or
push
leave
xor
std
inc
in
and
loope
push
cmc
js
inc
call
divl
repnz
out
adcb
ja
pop
pop
test
sbb
adc
std
xor
push
fcmovnbe
fnstcw
cmpsb
gs
and
addr16
lea
into
fcomps
sbb
sbb
mov
pop
dec
adc
xchg
mov
sub
in
jp
jp
std
add
cmp
aas
lret
mov
call
sbb
lret
sbb
and
cwtl
push
cmc
add
sahf
xchg
loop
mov
loopne,pt
enter
in
jbe
sub
in
xor
mov
pushf
xchg
mov
inc
lea
and
insl
push
and
imul
cmc
call
adc
mov
xchg
xchg
inc
xchg
mov
mov
stos
aad
mov
data16
loope
imulb
ss
or
adc
lret
icebp
mov
pop
hlt
nop
rorl
inc
jg
stos
and
lods
jb
mov
mov
lahf
es
dec
xchg
cmp
xor
pop
outsb
add
call
and
inc
stos
cmp
or
or
jns
mov
and
sahf
add
int3
fcmovb
lret
cmp
xor
or
add
nop
cwtl
rcrl
or
or
cmpsl
lret
add
loop
cli
subl
outsl
aas
loope
sbb
xchg
loope
rolb
mov
or
mov
add
push
jle
mov
sahf
pop
mov
xlat
in
and
dec
ret
incb
inc
out
pushf
lret
cs
or
sub
xchg
sbb
xchg
lret
sahf
and
fidivrl
add
int
add
mov
shl
jno
jb
xchg
jl
and
mov
je
sti
jns
sti
pop
ljmp
das
addr16
test
fcomps
sbb
mov
js
inc
dec
dec
or
mov
jmp
inc
inc
iret
mov
orl
pop
xor
lods
rcr
pop
fstp
cmpsb
ror
mov
push
mov
push
nop
mov
pop
lods
loop
or
int3
lcall
cmp
ret
fistps
stc
sbb
aas
xor
jnp
mov
xchg
xchg
cmp
call
inc
je
les
add
mov
jl
ss
shrl
leave
or
cmp
imul
aas
xor
mov
in
xchg
cmp
rcr
or
into
pusha
iret
dec
cli
sahf
scas
xor
fs
stc
dec
std
je
mov
or
mov
add
cmp
cmp
or
loopne,pn
orb
imul
mov
jae
popa
add
mov
cmp
pop
push
inc
hlt
roll
outsl
leave
call
test
sub
movsb
addb
fwait
mov
add
jno
scas
out
mov
js
loopne
pop
cli
sub
push
sbb
mov
test
inc
pop
test
daa
movsb
mov
rcll
lret
inc
and
mov
pop
mov
pop
sbb
into
adc
and
push
sub
pop
sahf
movsb
in
bound
dec
xchg
dec
mov
dec
leave
jg
lcall
add
dec
repnz
sahf
popf
jg
push
es
aaa
hlt
popa
cmp
insb
adcb
aam
mov
sbb
jnp
out
dec
sbb
adc
mov
xlat
stos
xlat
fildll
push
pop
lret
and
sub
pushf
mov
std
sti
xor
mov
cmp
sbb
addr16
jnp
pop
sub
scas
ret
jns
or
jb
mov
cmpsb
cmc
xchg
sub
cwtl
sahf
or
add
leave
dec
add
aad
xor
cwtl
and
mov
dec
mov
jecxz
adc
mov
frstor
xchg
dec
aad
sbbl
sbb
leave
sarl
inc
add
addl
mov
dec
xor
es
mov
bound
out
fcompp
imul
xchg
push
daa
shll
pushl
push
std
xchg
in
mov
out
fcmovne
or
mov
outsl
mov
inc
inc
in
aad
add
inc
fdivp
mov
xchg
push
mov
scas
xor
pushf
xchg
jae
cltd
sbb
test
pop
pusha
mov
mov
sahf
mov
repnz
push
sbb
movsl
sub
insl
dec
lret
js
nop
or
push
sbbb
push
jp
push
dec
pop
cmp
jle
xchg
mov
cmp
ret
cld
push
adc
setbe
aad
ffreep
pop
ljmp
pop
mov
aam
loope
int
outsb
mov
mov
mov
cltd
sub
mov
outsb
ret
rcrb
cli
cli
cmp
pop
jae
test
int3
arpl
cltd
gs
in
in
pusha
push
push
inc
repz
lahf
das
xor
shld
sub
cmp
movsl
imul
push
xchg
int3
hlt
leave
mov
mov
mov
jg
cwtl
arpl
adc
inc
leave
add
fdiv
mov
lret
lea
sbb
jno
enter
pop
stos
aam
jecxz
push
fisttpl
xor
nop
call
pop
add
sbb
shll
jp
mov
xchg
sbb
pop
or
out
sub
imul
xchg
data16
jne
mov
in
pop
out
popf
or
mov
and
dec
sbb
es
or
sub
add
jle
inc
xchg
repnz
dec
jmp
fsts
add
js
fisubrs
shlb
lret
je
movb
jge
ja
in
shll
mov
push
cmc
dec
push
call
cmc
push
sbb
cmp
pusha
add
js
enter
sub
sti
das
pop
jmp
push
jnp
add
in
test
mov
mov
xchg
ljmp
and
mov
pop
fidivl
lret
ds
hlt
and
repnz
int3
push
fsubs
jecxz
and
mov
cld
jmp
sub
mov
testb
cmp
je
adc
jp
insl
cltd
xor
dec
mov
xchg
popf
or
nop
xor
push
jle
subb
in
push
inc
mov
or
jns
sbb
insb
dec
scas
inc
cmp
and
cs
loop
stos
cmpsl
or
hlt
cmp
jp
insl
inc
adc
das
aas
in
aam
in
cmpsb
sbb
lea
orb
aas
idiv
js
pop
sti
rol
jnp
or
or
mov
push
push
int
cli
outsl
test
push
fnstsw
or
xchg
push
popa
mov
mov
js
push
ret
fwait
xchg
clc
adc
sub
jg
add
sub
lods
aam
xor
add
or
inc
sti
cmpsl
loop
adc
je
inc
pop
cmpsb
lcall
mov
repz
stc
fmull
fidivrl
push
dec
pop
mov
push
bound
mov
ror
xchg
pop
mov
xor
jae
xor
or
or
push
icebp
xchg
icebp
int3
mov
stc
inc
and
inc
cmc
daa
sbb
sahf
adc
dec
in
in
test
hlt
movntq
push
push
insb
add
in
outsl
imul
and
mov
lcall
cs
sbbl
lret
mov
loop
outsl
mov
xor
das
adc
dec
jnp
sub
outsb
fidivrs
xchg
pop
mov
mov
dec
out
call
lret
in
push
sar
mov
sbb
std
movsl
mov
mov
std
xchg
sub
dec
push
mov
push
scas
or
sub
dec
test
inc
push
pop
adc
lcall
add
sarb
int3
sub
jb
fcompl
cmc
push
cmp
movsb
xor
or
fcmovnb
adc
jo
and
adc
adc
hlt
out
mov
pop
pop
dec
pop
and
add
push
sbb
addl
mov
xor
cmpsl
lret
imul
xor
add
lcall
push
cld
xchg
sbbb
xor
lea
rcl
cwtl
arpl
jp
mov
jbe
mov
xchg
xchg
scas
mov
dec
stos
and
lds
andl
jp
mov
xor
inc
cs
inc
sbb
gs
adc
xor
pushf
ret
fldt
jbe
sbb
xchg
test
jnp
es
in
sub
aaa
add
jb
or
xor
dec
jmp
scas
pop
insb
mov
xchg
sub
inc
insl
pop
pop
push
movsl
jmp
push
add
and
addb
loopne
aas
outsb
leave
inc
jns
imul
aad
or
push
popa
loope
cmp
cmp
inc
mov
push
mov
xchg
mov
scas
mov
push
addr16
sub
into
jo
mov
je
popa
test
adc
stc
pop
mov
xchg
ret
popw
dec
out
jg
out
cmp
pop
test
adc
out
jp
xchg
jnp
cmp
inc
mov
adc
sbb
outsl
xor
sbb
xor
sti
jmp
jg
mov
jle
push
ja
cmp
popf
sbbb
aas
leave
mov
icebp
jl
sub
call
sub
push
mov
fsubl
push
test
jb
imulb
mov
xchg
fisttps
mov
lods
sbb
xor
arpl
mov
loope
flds
lock
adc
je
inc
iret
test
shl
pop
out
mov
into
cs
pop
add
push
mov
pop
jo
xchg
xchg
xchg
int
dec
push
ljmp
mov
ljmp
lret
out
add
jbe
sbb
cs
lret
rorb
push
and
sbb
sbb
out
test
and
pop
adcl
sahf
dec
clc
loopne
jno
out
daa
out
xchg
jecxz
ss
stos
jo
mov
push
adc
and
push
stos
lret
fmulp
outsl
inc
js
jmp
inc
xor
scas
stos
add
xchg
inc
test
and
add
daa
data16
xor
push
lods
mov
rolb
and
jb
repz
xchg
push
pop
adc
nop
pop
ja,pn
xchg
xor
cmp
loope
pusha
mov
adc
lds
dec
xor
inc
push
popa
add
mov
fdivrs
dec
mov
lods
mov
lea
call
cli
stc
dec
and
xchg
je
adc
in
mov
xor
scas
mov
mov
cmpsl
inc
aam
aad
lret
pop
sbb
jecxz
shlb
ret
cmc
nop
add
stos
sahf
scas
je
adc
cmp
or
daa
cmp
hlt
movl
out
mov
dec
adc
or
icebp
xchg
push
add
test
ja
ret
mov
iret
sbb
mov
inc
pop
fwait
or
pop
push
mov
xchg
ss
imul
xchg
jl,pn
jbe
cld
sti
xor
aam
rcr
out
add
lods
push
aas
movups
mov
mov
scas
fucomip
mov
inc
rorb
imul
and
sbb
sbb
or
sub
cs
gs
fnsave
rolb
mov
add
xor
xor
adc
add
xchg
nop
popf
xor
aam
xchg
int
pop
frstor
leave
mov
adc
jg
fcompl
arpl
lds
xchg
aam
push
push
sbb
cli
push
flds
adc
stos
je
or
xor
cli
rolb
inc
inc
xchg
addb
dec
imul
cmp
push
ret
xchg
inc
out
inc
xor
dec
jp
dec
negl
imul
jge
push
fcmovbe
gs
xchg
adc
out
and
hlt
or
inc
arpl
sub
add
stos
pop
rorl
mov
stos
push
mov
xchg
sbbb
push
jnp
jne
idiv
scas
pminsw
adc
mov
cmpl
cwtl
mov
mov
jmp
xchg
sbbl
mov
mov
sbb
xor
jne
or
mov
adc
or
xchg
jp
and
jp
jge
inc
inc
into
adc
ljmp
add
fdivrs
adc
or
jl
mov
insb
pop
xchg
xchg
jb
push
cmpsb
pop
insl
push
mov
jmp
push
ret
mov
movsl
mov
enter
shlb
mov
test
jecxz
pushf
dec
push
cmp
pop
test
mov
pop
mov
aas
aas
rol
jge
pop
cmp
cli
mov
filds
lock
andl
shl
or
test
push
mov
adc
xchg
sub
and
mov
mov
ss
fwait
mov
or
fidivs
rcll
test
inc
jbe
aad
sahf
in
pop
add
sbb
test
cmpsb
jo
mov
fadds
add
lods
aas
pop
jg
inc
out
xchg
pop
dec
lcall
jp
dec
adc
jae
sbbb
mov
cmp
pop
mov
aad
mov
pop
outsb
stos
rcl
pop
testb
dec
hlt
inc
pusha
cmp
xor
repz
ret
outsb
cmp
jg
lahf
inc
adc
and
mov
push
mov
xchg
xorl
clc
lret
cli
rcll
fsubrs
inc
sbb
adc
mov
test
pop
mov
cmpsb
add
pop
lock
les
fisubs
cmp
lret
movl
lock
add
and
push
xor
andb
push
inc
into
xor
lds
and
stc
and
cmp
jmp
leave
xchg
mov
pop
mov
pop
imul
xor
loope
push
xchg
pop
xchg
fxch
push
cmp
adc
sbb
aas
int
push
das
ss
push
inc
je
push
and
iret
sub
int
in
lea
in
pop
pop
out
mov
inc
jno,pt
sub
nop
jne
xchg
out
dec
and
inc
cltd
adc
xchg
scas
lock
repnz
lcall
mov
xchg
mov
mov
pop
dec
adc
in
scas
fwait
push
sub
cmova
stc
cmp
push
adc
pushf
lods
cmp
sahf
adc
and
das
jp
shlb
movsl
cs
js
jnp
ret
movsl
arpl
cmpsb
test
aam
loopne
ljmp
add
ja
jle
filds
inc
test
sbb
xor
mov
incl
cmp
cmpb
les
xchg
mov
cmp
dec
mov
out
mov
cld
pop
test
inc
ficoms
sbb
mov
in
js
adc
sbb
push
test
popa
sbb
mov
gs
stos
loop
cmpsl
loop
xchg
xor
loope
lock
movb
shlb
mov
xchg
mov
mov
scas
xchg
das
iret
movsb
lcall
inc
mov
mov
pop
test
jo
mov
ss
aad
pushf
pop
xchg
test
mov
inc
push
fimuls
add
add
dec
fstpl
jae
mov
fwait
jg
add
aam
add
add
bound
mov
mov
hlt
sbb
fmull
sub
movsb
mov
sbb
lock
xor
mov
xchg
hlt
push
push
pop
cmc
loop
cmp
adc
sbb
pop
jl
in
or
out
sub
lahf
dec
mov
adc
mov
fdivs
or
mov
out
dec
push
cmp
xor
ret
daa
shlb
push
mov
cmp
sbb
and
rol
out
sub
sbb
xchg
ds
adc
lds
lods
inc
push
lods
sub
cltd
jnp
cmp
aas
adc
xchg
cmp
xor
subl
ret
and
sbbl
inc
sbb
push
lock
stos
stos
push
mov
inc
loop
push
xchg
xchg
jo
xchg
xchg
xor
push
inc
pop
mov
push
adc
jb
push
xlat
push
xchg
xchg
mov
jb
cs
mov
insl
mov
fiaddl
lret
stos
out
dec
cmp
jl
outsb
iret
xchg
xor
sbb
rorb
xor
addr16
insb
out
rclb
inc
mull
ja
or
loop
xor
imul
mov
aas
mov
pop
rcll
xor
mov
or
in
stos
adc
mov
cltd
test
dec
dec
pop
arpl
pushf
dec
call
cmp
lret
jo
lret
dec
push
cwtl
mov
sub
sahf
cltd
push
push
add
clc
cvtpi2ps
jmp
dec
nop
jbe
mov
or
ja
pop
push
out
push
xor
pop
aaa
or
add
xor
ret
lock
in
mov
cmp
sti
sbb
mull
sbb
xchg
daa
test
xchg
cmp
aas
or
movsb
inc
in
mov
mov
adc
jnp
cli
mov
cmp
out
and
xchg
cwtl
adc
rcl
push
jl
iret
push
jb
pop
cmpsl
gs
out
aam
mov
nop
hlt
mov
mov
pop
cmp
jbe
mov
add
mov
pop
scas
imul
pop
cmc
popf
cmp
in
dec
jo
fcmovb
add
cwtl
repnz
push
jge
loop
add
dec
ja
pop
mov
mov
pop
or
inc
scas
xchg
stos
stc
sub
mov
cmp
js
jo
inc
mov
mov
mov
pop
inc
rclb
jge
cmc
adc
aaa
cmpb
subb
mov
sti
arpl
inc
inc
push
xor
mov
shlb
cmovle
loop
mov
leave
data16
aaa
clc
iret
adc
sub
movb
dec
dec
cmp
mov
iret
jno
inc
stos
push
in
or
mov
push
imul
fs
int3
push
pop
sub
call
push
sahf
addr16
cmpb
cmpsl
push
popf
and
xlat
aad
lahf
mov
popf
mov
and
adc
rclb
jp
xchg
loopne
cmp
push
sbb
inc
pusha
xorb
les
fnstenv
mov
cmp
rcrb
sub
mov
ret
xor
push
mov
jns
pop
lock
icebp
mov
scas
dec
xor
daa
mov
mov
cmpsb
jge
push
ret
cmc
inc
test
imul
jne
pop
les
stos
shll
push
jle
fwait
out
popf
push
add
daa
repz
xor
loop
lcall
push
push
jp
add
por
cmp
mov
inc
sub
loop
repz
xchg
push
movsl
in
pop
jp
lods
in
jno
in
jle
jne
mov
rcrl
mov
cld
sbb
int
mov
mov
xlat
jno
leave
add
insb
dec
and
pop
pop
sarl
xor
pusha
cs
mov
rcrl
push
xor
lret
dec
add
cld
sub
lcall
jecxz
cmc
aaa
setns
scas
mov
dec
repz
addb
test
cwtl
inc
push
andl
pusha
test
xchg
insl
pop
mulb
fcmovnb
icebp
lea
ljmp
xor
xor
pop
aam
or
sahf
pop
out
shll
push
or
int3
and
mov
adcb
cmc
mov
mov
push
or
add
aad
mov
out
and
cmp
outsl
lods
into
out
cld
xlat
jbe
in
das
out
ss
popa
popl
scas
fildl
movsb
dec
hlt
or
dec
or
test
rcll
inc
shll
lea
lcall
push
jo
xlat
les
out
out
pop
xor
repnz
jp
scas
js
adc
pop
dec
add
mov
cmpsl
cmp
sbb
insl
sti
inc
xchg
jp
sti
mov
scas
inc
dec
add
dec
repnz
or
lds
push
int3
or
or
fbstp
sub
add
mov
mov
xchg
imul
dec
rcl
inc
outsb
dec
xor
popa
xor
pop
outsl
xchg
fistps
mov
xor
mov
cmpsl
outsb
stos
sti
cwtl
nop
out
mov
sahf
fldz
and
mov
mov
mov
push
and
iret
mov
inc
jecxz
dec
icebp
mov
pop
and
jae
add
sub
je
cltd
xchg
loope
fnstcw
mov
pusha
cmp
xchg
pop
mov
out
leave
or
faddl
mov
dec
mov
lods
daa
rolb
and
cmp
inc
insb
mov
push
xorb
jl
fwait
cmp
dec
push
imul
push
or
xchg
call
adc
ja
popf
or
add
xlat
mov
push
ds
sub
in
mov
dec
js
mov
xor
call
and
pushl
sbb
ficoms
pusha
pop
cltd
cltd
or
stc
and
call
or
imul
and
lret
enter
inc
mov
xchg
shl
test
mov
mov
jmp
cmp
mov
shlb
outsb
loop
sbb
jbe
pop
daa
loopne
loopne
mov
xor
jmp
jmp
adc
xchg
pushf
mov
dec
pop
mov
cs
xchg
or
xor
pop
ret
imul
dec
cltd
mov
adc
insb
loop
aaa
pop
es
faddl
pushf
or
hlt
outsb
rcll
daa
cli
mov
jbe
xor
ljmp
mov
pop
loop
aam
pop
mov
cmp
call
mov
lock
add
push
ljmp
int3
pop
sbb
push
xchg
pop
cmpb
hlt
mov
and
lods
test
test
decb
insb
dec
lds
and
push
cmc
jge
adc
adc
mov
xchg
xor
jbe
fisubrs
pop
scas
sub
mov
out
sub
es
je
xchg
cli
and
dec
scas
jle
inc
push
out
pop
in
ds
sarb
sbb
mov
clc
xchg
dec
adc
addr16
adc
mov
mov
mov
push
mov
subb
sub
setg
inc
lahf
ja
mov
xor
imull
xor
cmp
or
iret
aas
or
and
push
pop
incb
inc
popa
test
nop
imul
sub
outsb
mov
push
gs
pop
mov
mov
or
add
iret
cld
mov
out
pop
mov
ss
sub
aad
sbb
popa
add
imul
std
mov
loope
rol
and
inc
fcmovne
add
rclb
lock
dec
insl
subl
push
stos
adc
inc
test
popaw
jmp
and
in
fists
das
jecxz
mov
inc
fsts
sub
mov
mov
jmp
fidivrs
mov
xchg
and
cmpsb
test
mov
xchg
fisubl
inc
pop
ret
popa
mov
daa
add
jl
xchg
pusha
dec
xlat
and
repz
aad
aaa
pop
lds
sbb
push
push
push
inc
adc
push
pushf
or
jp
xchg
fisubl
insb
pop
ja
sub
sub
pop
push
out
mov
lds
push
sbb
or
mov
xchg
movsb
les
inc
mov
aaa
dec
cmpb
mov
outsl
mov
cmp
ss
jns
into
mov
fsub
add
mov
cs
and
cmpsl
push
inc
jecxz
xorl
push
mov
dec
push
xor
cmpsl
pop
xor
in
sbb
pop
mov
imul
cmp
inc
out
jo
cmp
mov
scas
jbe
or
jg
inc
push
mov
xchg
test
mov
or
dec
sub
popf
rcrl
das
sarb
not
sub
neg
mov
outsl
call
xchg
cmp
xchg
jmp
stc
cmpsl
mov
adc
out
test
es
filds
adc
xchg
dec
jnp
pushl
iret
sub
nop
jno
inc
adc
adc
mov
push
cmpsl
push
repnz
sbb
in
mov
addb
jno
and
cwtl
mov
inc
mov
xchg
jo
lock
sub
jns
cwtd
push
or
lods
scas
shll
pop
imul
push
mov
paddusw
inc
cs
xor
pop
call
ja
jno
sbb
xchg
pop
sub
sub
testl
mov
inc
mov
jae
mov
push
mov
add
pop
jbe
test
stos
gs
popa
fimull
dec
jg
call
sbb
ss
lds
push
ljmp
jno
addr16
mov
insb
std
cmp
push
popf
xchg
je
fwait
je
leave
adc
repnz
loopne
mov
inc
fwait
adc
inc
je
ret
xor
loop
xchg
shl
hlt
mov
adcb
jge
xchg
js
daa
in
loop
mov
add
mov
push
inc
out
jge
std
or
stos
aas
fstl
aad
int
out
push
and
fcompl
rorl
and
pusha
and
cwtl
test
dec
cmp
xchg
sub
popa
pop
in
push
ljmp
add
fcmovbe
add
add
inc
pop
inc
push
repnz
mov
jmp
aaa
and
fadd
clc
inc
mov
sub
dec
xchg
lods
mov
push
add
sub
sti
dec
in
lds
fidivl
xchg
pop
scas
push
rolb
pop
aaa
aaa
sub
in
sbb
pop
adc
pop
mov
cmp
pop
mov
sahf
xor
mov
in
jnp
sbb
iret
call
and
mov
lods
aas
dec
insl
lods
pop
inc
and
inc
mov
aaa
lretw
std
daa
repnz
lret
mov
int3
arpl
int3
xor
je
push
pop
mov
mov
mov
popa
hlt
and
mov
cmpsl
fldl
pop
dec
addr16
aas
fnsave
push
scas
pop
mov
lahf
in
add
pop
or
mov
test
shlb
push
in
daa
push
inc
das
imul
fistl
push
xor
sbb
test
ds
adc
add
xchg
fs
cmpsb
mov
daa
mov
shl
enter
data16
decb
test
and
out
xchg
lret
nop
frstor
xchg
or
leave
sbb
cltd
pop
pop
add
out
dec
icebp
hlt
cmp
adc
dec
lret
movsl
addr16
xor
loop
xor
xchg
add
ds
push
lret
loopne
xor
mov
repz
sub
jno
or
add
sub
inc
ret
or
hlt
mov
cmpl
cmp
xor
push
jmp
jge
std
mov
or
stc
rcrb
mov
scas
clc
mov
pop
lahf
scas
push
call
negb
fildll
xchg
xchg
lss
xchg
jl
mov
pop
push
xor
push
int3
cli
fdiv
cmpsl
dec
stos
pop
xchg
leave
dec
out
pusha
mov
cltd
dec
sarl
fs
or
fwait
xchg
dec
pop
add
xchg
insl
sub
xchg
sbb
xchg
mov
loopne
adc
fcompl
orl
xchg
jb
adc
rorb
mov
pop
aam
or
sub
mov
cmp
xchg
lahf
inc
mov
inc
daa
popf
adc
adc
pushf
int
sub
add
add
pop
cmp
xor
mov
or
negl
popf
push
mov
and
mov
notb
jnp
stc
inc
cld
roll
cmpsl
jnp
or
out
gs
rclb
mov
scas
adc
dec
std
gs
inc
jo
notl
add
sahf
sahf
mov
mov
out
out
mov
icebp
rcr
fcomi
pop
lock
jmp
lock
or
jnp
sbb
push
inc
imul
jmp
in
or
lret
cmp
sub
xlat
sahf
insl
xchg
ret
outsl
mov
pop
mov
push
test
rclb
andl
loope
insb
hlt
in
pop
test
sbb
cld
cmp
vpaddsb
rorl
mov
call
mov
fsts
xchg
push
testl
jge
sub
mov
rcrl
fildll
jge
enter
or
addr16
aaa
out
mov
and
outsl
or
pushf
xlat
xchg
inc
mov
mov
fldenv
call
xchg
mov
xor
jmp
xor
rcrb
jmp
jg
jns
cmp
xor
inc
inc
mov
lahf
lods
shl
push
jmp
pop
sub
or
adc
out
add
pusha
cmpsb
lcall
mov
pop
les
push
jns
repz
xor
addr16
cld
shll
in
add
push
xor
test
inc
test
idivl
pop
lret
dec
sub
jno
ss
ret
mov
data16
shr
cmp
in
sub
mov
xlat
fwait
dec
cwtl
xchg
cld
es
in
subb
shl
add
bound
addr16
pop
adc
xor
lods
jle
pop
flds
test
mov
faddl
repz
or
test
in
sbb
and
push
pop
insb
aad
mov
xor
addr16
mul
scas
cs
sub
push
mov
xchg
mov
pop
jo
add
lods
push
fbstp
mov
pop
sarb
mov
sub
shl
cmpb
push
hlt
imul
inc
idivl
setl
cli
sbb
or
jmp
inc
arpl
adc
and
push
push
fistpl
call
call
in
inc
mov
sub
out
pop
mov
cmp
movsl
push
sbbl
jno
mov
inc
xchg
xchg
xchg
xor
push
push
enter
imul
in
add
jo
and
stos
pop
subl
cli
aam
hlt
xor
dec
sbb
popf
mov
mov
mov
arpl
vmcall
mov
popf
scas
hlt
xor
outsl
push
cmovo
ret
sbb
iret
fisubrs
iret
cmp
std
inc
adc
xor
mov
sti
mov
je
dec
out
xchg
push
arpl
leave
or
dec
pop
dec
sbbb
bound
jb
jle
push
sbb
lea
sbbb
aaa
out
arpl
ds
dec
sub
sbb
push
gs
push
es
data16
jmp
fprem1
fcomps
aam
sbb
pop
cli
mov
mov
xchg
and
testl
sahf
into
fnstenv
mov
mov
cmp
jg
imul
xchg
mov
inc
jmp
dec
sub
lret
push
es
subl
push
inc
push
xchg
loop
mov
adc
adc
int
push
fstps
sahf
sub
adc
das
data16
adc
aaa
loopne
mov
icebp
stc
clc
les
inc
das
xchg
jge
push
xchg
out
loop
cmp
xchg
mov
inc
sub
aas
push
rol
sub
lcall
dec
mov
js
in
inc
cwtl
dec
jg
fs
divl
inc
xor
out
cmp
push
or
xor
bound
xor
xchg
xchg
lret
shll
xor
mov
roll
xchg
stos
mov
jo
dec
stos
jg
cli
jae
adc
sarb
jne
cltd
pop
cmp
data16
imul
mov
adc
ret
add
jb
xchg
pop
push
xor
adc
fs
je
lods
sbbl
into
pop
aad
mov
pop
test
push
mov
ja
mov
imul
jbe
int
xchg
dec
jnp
ja
push
loope
int3
lcall
and
lods
mov
insl
in
mov
repnz
cwtl
jge
lret
loope
or
sub
shrb
xchg
in
push
jns
subl
pop
loop
push
adc
outsl
adc
dec
add
lods
leave
daa
xorl
hlt
repnz
jp
clc
mov
mov
addr16
sti
subl
jnp
ds
cltd
adc
inc
pusha
cmp
cltd
inc
sub
pop
test
xchg
data16
jmp
inc
mov
pop
mov
cmpsb
inc
enter
js
cld
xchg
cmovae
push
imul
mov
pop
adc
and
stos
pop
inc
add
mov
nop
cmp
stc
out
stos
fbld
xchg
jno
sub
adc
test
mov
sbbl
shrl
stc
ret
mov
fidivl
mov
mov
stc
mov
das
mov
inc
push
sub
stc
xor
cmp
cmp
add
clc
jb
push
push
call
push
pop
pop
popf
cmp
push
fcomps
push
stos
mov
addr16
sbb
lods
dec
adc
sub
xor
pop
and
ret
xchg
out
popf
push
lret
call
sub
leave
aaa
inc
xchg
sub
cmp
lret
test
iret
shrl
test
adc
aam
jl
cld
aas
rol
cmp
outsb
sahf
cli
ss
stos
hlt
sarb
or
lret
mov
dec
jmp
inc
ljmp
pop
mov
les
adc
cli
ret
repz
out
movsb
pop
lods
or
inc
xor
hlt
dec
insl
lds
les
stos
adc
mulb
push
notl
jno
jle
sub
jb
cs
sub
sbb
and
add
adc
and
out
bound
gs
add
mov
insl
or
dec
sub
lock
loopne
notl
inc
sub
cs
test
in
or
jb
jmp
test
mov
cmp
inc
insl
jmp
clc
jae,pn
jae
iret
lods
jmp
iret
sbbl
ds
mov
xor
sbb
push
mov
adc
xor
xchg
push
mov
xor
lds
into
adc
mov
ror
into
xchg
jl
sub
lahf
xchg
outsl
in
lods
push
insb
stos
cmp
dec
mov
sar
dec
and
in
stos
das
icebp
hlt
fidivrl
out
adc
jmp
adc
pop
xchg
aas
aas
punpckldq
pusha
and
push
add
mulb
shrb
das
sub
lods
add
sbb
dec
cmp
daa
and
fs
or
roll
xchg
sub
fcoms
fcoms
jmp
cmp
rcll
mov
jno
dec
dec
dec
pop
xor
cwtl
js
int
lahf
in
adc
xlat
sahf
xchg
jne
inc
int3
sarb
lods
imul
in
sbb
cwtl
jb
sbb
push
xor
stos
pushf
jb
xchg
ficomps
pop
xlat
lds
test
ljmp
pop
mov
pop
sahf
cmp
mov
push
push
sub
jmp
xchg
or
cmp
pop
cmp
ljmp
into
call
scas
xor
dec
xor
add
mov
gs
fstps
mov
fisubrs
pop
rorb
ja
cmc
pop
and
not
mov
sub
movsb
mov
lods
dec
dec
lret
mov
push
xor
enter
mov
lret
sub
push
jno
pop
add
rcl
fnsave
push
loope
inc
xchg
imul
sbb
gs
popf
push
and
icebp
shlb
inc
sbb
pop
repz
data16
sub
lds
lahf
ss
xchg
mov
xor
or
orb
and
push
mov
lahf
insb
xchg
ret
loopne
mov
fmuls
fwait
in
mov
sbb
mov
xor
and
inc
pop
or
lret
inc
xchg
jp
icebp
cmpsl
cs
popa
test
add
imul
jns
mov
jo
mov
adc
mov
cmp
daa
inc
dec
enter
cmpsb
mov
mov
cmp
stc
in
push
nop
into
lahf
cmpl
cmp
add
pop
lods
mov
xchg
sahf
shrl
and
sbb
sahf
push
sbb
inc
fnstsw
lret
jge
sbb
push
xor
cmp
ficoml
lods
xor
xchg
xchg
jge
sub
out
mov
xchg
lret
imul
sbb
int
pop
xorb
mov
adc
daa
mov
rorb
insb
push
sbb
lods
mov
mov
mov
lcall
fwait
pop
fisubrl
sti
popa
jae
mov
dec
add
push
xor
xchg
add
adc
push
cvtdq2ps
fs
call
sbb
sub
xor
jecxz
loop
add
roll
xchg
or
push
lods
repz
test
jp
jb
lea
cmp
call
mov
sbb
push
shrb
in
mov
jne
mov
and
dec
into
push
push
jb
jg
cmc
jle
pop
lods
movsb
xchg
into
add
xchg
jl
inc
pop
addl
mov
rcrb
inc
in
mov
dec
pop
jns
in
subl
cltd
ds
cwtl
out
arpl
jbe
lock
jbe
mov
push
insb
mov
sbb
repnz
lods
loop
sub
cmc
ret
lret
cld
xor
mov
push
call
inc
xchg
xor
dec
icebp
sub
scas
mov
xchg
divb
jg
pop
cltd
testl
lods
ds
lret
divb
mov
nop
inc
into
inc
adc
fsubrl
mov
sbb
jle
pop
aaa
push
lods
loop
cs
retw
cwtl
pop
data16
fdivr
imul
daa
sub
arpl
sbb
add
push
mov
sar
call
adc
adc
add
sbb
lods
pop
dec
mov
pop
and
adc
jnp
pop
push
mov
jmp
sbb
sub
sub
dec
outsb
mov
arpl
stc
clc
lret
into
cmc
in
cwtl
in
pop
bound
mov
lret
sbb
push
jg
pop
ret
cmc
xchg
inc
inc
cld
jle
mov
xchg
dec
xchg
cli
add
test
and
fidivrs
cmpsb
aad
add
cltd
in
rorl
rcll
loopne
mov
int3
mov
jmp
mov
dec
outsl
mov
sahf
push
sahf
cmc
push
sti
mov
in
imulb
cmp
jecxz
push
jo
jle
mov
cld
test
std
jb
hlt
push
sbb
push
lahf
leave
lock
insb
das
sbb
popf
std
inc
fs
call
or
add
addr16
adc
pop
dec
sbb
rep
push
push
xchg
int3
cmp
or
or
add
js
arpl
loope
inc
call
push
fldz
pop
sti
aad
or
pop
aaa
movsb
mov
ret
rclb
pop
pop
lock
xor
movsb
sbb
jg
push
xchg
or
repnz
push
push
mov
je
out
ret
out
adc
mov
push
fdivl
aas
sub
pop
jl
mov
inc
xor
mov
mov
in
jns
sbb
cmp
data16
pushf
jo
fwait
cmp
jecxz
scas
lods
sub
call
popf
jno
test
inc
adc
jae
gs
lret
aaa
jp
fisttpl
push
leave
sub
in
pop
ss
rclb
push
pop
outsb
or
cmpsl
clc
lock
jle
or
pop
out
sub
pop
pop
bound
inc
or
flds
push
inc
dec
in
push
pop
xor
bound
bound
jo
popl
popa
icebp
dec
jno
cmp
sub
mov
test
aas
mov
ja
add
jle
into
fisubs
std
ret
insl
jg
mov
mov
inc
pusha
cmpsb
mov
arpl
push
dec
sbb
out
sti
or
mov
sbb
mov
lahf
xchg
pop
sub
or
ljmp
dec
dec
fsub
pop
adc
repnz
pusha
inc
imull
mov
inc
in
dec
xor
call
mov
stc
jle
inc
rcll
lret
and
popf
mov
lcall
add
dec
jle
and
pop
popf
mov
rorl
into
mov
cwtl
xor
jg
cli
push
js
pop
jns
stos
push
cmp
inc
sub
andb
sub
mov
das
and
sbb
or
mov
add
lock
push
and
fwait
or
iret
xchg
dec
adc
lcall
clc
imul
xchg
fdivs
cltd
jle
out
fcom
andb
mov
test
lea
dec
add
lods
popf
mov
outsl
jo,pt
mov
adc
out
out
stos
sub
ret
pop
out
dec
xor
adc
loope
insb
fwait
push
sub
xchg
push
sbb
iret
shl
sbb
push
mov
mov
js
cmp
xor
cmpsl
cmp
inc
and
sarl
xor
popfw
int
outsb
outsb
or
shrb
sbb
mov
xchg
mov
in
rol
andl
pop
in
mov
into
test
jns
ss
pop
imul
mov
out
push
fcompl
bound
inc
into
divps
sbb
sub
ja
jmp
stos
loop
or
add
adc
xor
push
ljmp
lods
pop
pop
test
adc
push
out
fs
mov
mov
push
test
es
cmp
cmp
ss
stos
sbb
or
pop
stos
mov
into
outsb
fcmovu
jp
push
sbb
sarl
pop
xor
cmp
fcoms
outsl
fiaddl
dec
and
sub
or
pop
sbb
inc
xchg
lcall
xchg
scas
jg
sbb
jle
ljmp
xchg
cltd
dec
sub
out
icebp
rcrb
adcb
es
les
adc
mov
cltd
aam
pop
and
sub
in
pop
roll
pop
xchg
pop
push
std
fidivrl
and
das
or
mov
fwait
pop
and
mov
in
or
clc
ljmp
add
into
inc
add
leave
mov
adc
sbb
xchg
xchg
xor
xchg
in
push
or
loopne
cld
test
outsl
push
out
add
xchg
mov
and
mov
pop
mov
sbb
dec
jo
stos
cmc
mov
push
pusha
jne
push
stos
push
movsb
cmp
lret
xlat
adc
and
mov
cmp
pop
outsb
daa
sub
fnstenv
xchg
arpl
call
imul
jle
push
mov
enter
lock
stc
outsl
or
sub
mov
inc
mov
dec
nop
sti
ret
pop
or
jae
mov
sti
scas
lahf
mov
push
and
in
adc
and
out
adc
add
add
sub
test
add
push
jmp
mov
movsl
into
lret
xchg
out
cs
mov
sub
into
and
and
ficompl
clc
cmp
push
mov
cld
xor
leave
dec
xor
test
lret
mov
subb
or
aaa
mov
or
jl
mov
je
jne
push
cld
pushf
stc
inc
jnp
fs
jae
aaa
popa
sub
repz
or
rcrb
pop
pop
inc
jmp
aam
jo
leave
xor
push
in
mov
sub
xor
xchg
push
add
pop
popf
inc
sub
gs
inc
leave
popl
xor
pop
hlt
push
ret
mov
and
inc
xchg
je
test
fistpll
lea
insl
ret
dec
sub
xchg
leave
cmpsl
xor
jnp
pop
push
push
push
or
jp
bound
gs
enter
xlat
outsl
test
sbb
imul
fiaddl
add
sub
lret
mov
adc
or
mov
cwtl
lea
push
pop
fadds
xor
adcl
hlt
fistpl
inc
test
push
add
std
mov
jg,pn
iret
pushf
in
hlt
mov
push
pop
cmp
lret
fidivrl
leave
or
ret
leave
test
cmp
push
fld
dec
xchg
or
cmp
inc
xchg
pop
cs
fldcw
sub
mov
in
xchg
jno
es
dec
jmp
fs
pop
sar
out
xor
pushl
mov
adc
xlat
outsl
cmc
enter
cwtl
sub
inc
loope
in
jbe
call
inc
mov
inc
pop
dec
sub
sbb
dec
mov
jae
loopne
test
vhaddps
jg
ja
test
lret
shll
and
fmuls
dec
mov
xchg
imul
mov
outsb
lret
pop
in
dec
xor
inc
adc
mov
popa
in
sbb
or
lret
xchg
in
lahf
and
jns
lock
mov
mov
pushf
fists
mov
fstps
fistl
loop
adc
rcr
test
into
lret
dec
jg
lods
push
das
cmp
xchg
out
jle
xor
das
popf
dec
repz
xchg
dec
sbb
cmp
hlt
cmpsl
and
mov
pop
pop
jmp
movsl
dec
and
aam
icebp
stos
or
add
js
mov
sbb
imulb
mov
sub
xchg
xchg
and
in
push
ficoms
data16
xor
cmpsb
popa
and
pusha
dec
pop
rcrl
fisubs
out
aaa
out
mov
mul
cmp
dec
mov
testb
cmpsb
pop
inc
das
mov
sbb
lds
pop
not
test
mov
cmpsl
push
jns
mov
test
es
xchg
mov
mov
jecxz
inc
addr16
ljmp
inc
push
dec
bound
mov
cld
jmp
push
sub
pop
mov
repz
int
imul
imul
jecxz
and
pop
adc
push
leave
adc
sub
jb
xlat
loop
cmpsb
fsubl
in
cld
loopne
aam
xorb
mov
xor
jl
fsubr
dec
imul
shll
testl
add
loopne
cmc
aas
pop
cmc
popa
lret
jbe
mov
inc
in
cmp
jl
mov
push
aad
data16
push
jae
out
in
les
jo
outsl
fnstenv
popf
movsb
pop
fsubr
lahf
cs
mov
lcall
outsl
data16
inc
stos
add
sbb
push
sbb
rol
and
add
sbb
mov
call
pop
xor
lods
jae
aad
cmpsb
lret
rclb
sub
je
inc
in
adcl
pop
iret
cmpsb
cmpsb
or
mov
cmpsb
pusha
sub
in
or
mov
pop
mov
call
ret
out
fistpll
ficomps
outsb
aaa
mull
bound
cmp
push
pop
pop
xchg
xchg
xchg
xor
iret
pop
bound
out
insl
jl
sub
sbb
inc
insl
daa
mov
cmpsl
xchg
stc
mov
xor
je
addr16
pusha
sti
lods
mov
mov
push
rcrl
repnz
lret
lods
jmp
xchg
mov
je
fdivrs
xor
daa
jne
push
in
mov
mov
clc
mov
andb
push
push
lods
icebp
pop
pusha
xchg
cwtl
push
mov
add
lret
out
bound
je
stos
add
fldt
clc
or
dec
out
add
out
mov
and
pushl
stc
ret
jnp
fmul
jg
mov
ret
pop
push
jb
jecxz
add
out
sbb
cld
pop
ret
cmp
shrb
stos
adc
or
and
mov
rorb
or
pusha
bound
rcr
aas
movsb
sahf
sub
ja
jmp
sub
sti
in
push
mov
inc
push
and
les
dec
aaa
test
jmp
mov
dec
aad
repz
ljmp
test
dec
ret
out
gs
mov
inc
cwtl
jmp
filds
fdivs
fnstcw
jo
aas
push
aad
pop
ret
mov
in
rcl
nop
mov
lock
lea
shr
jle
adc
xlat
jmp
loope
cmp
out
mov
sbbl
pusha
or
arpl
push
pop
push
ss
nop
adc
enter
adc
push
loopne
mov
adc
push
pop
mov
push
leave
mov
dec
cs
insl
movsl
jmp
mov
jnp
fstl
sbb
pop
xchg
dec
ja
and
cmp
mov
scas
cli
jne
in
scas
loop
lock
or
cmc
push
aad
outsl
scas
adc
ljmp
scas
imul
sbb
out
cmpl
xchg
dec
add
arpl
dec
lods
clc
stos
dec
xchg
aaa
mov
inc
ret
loope
lods
dec
out
mov
insb
add
cltd
inc
inc
dec
inc
popf
pop
xor
and
or
cmc
cmpsl
push
js
sti
notl
not
in
push
and
pop
daa
xor
lahf
xchg
or
out
fistpll
lock
inc
push
mov
or
ds
adc
inc
ja
sub
adc
lock
xor
sbb
jb
or
xchg
cltd
pop
jns
stos
fs
cmp
in
arpl
aad
iret
stos
addr16
jbe
dec
ss
icebp
mov
into
test
lods
aad
scas
adc
dec
sbb
out
jnp
inc
fmuls
stc
cld
popa
mov
adc
xchg
add
push
mov
mov
dec
mov
in
enter
mov
inc
aaa
or
push
sti
repz
mov
and
xchg
test
stos
lock
andb
jmp
outsl
ljmp
inc
std
or
ficoms
ja
xchg
mov
in
push
mov
test
cmp
popf
por
fs
adcb
movsl
cmp
into
mov
ljmp
pop
push
ror
pop
dec
jmp
js
inc
mov
jg
out
push
or
enter
fs
call
pop
jae
add
sbb
push
inc
sbb
jecxz
inc
or
imul
fsts
xor
dec
loop
jo
pushf
or
imull
adc
xchg
dec
out
mov
pop
jno
insb
mov
pop
roll
je
in
cmp
rorb
bound
dec
aaa
mov
adc
or
cmp
inc
sbb
sub
push
gs
add
les
fstps
mov
dec
cmp
mov
je
loope
xchg
jp
mov
fimuls
pushf
cmp
cmp
shrb
ds
or
ljmp
jnp
and
push
loope
cmp
mov
and
stos
jecxz
mov
mov
inc
adc
pop
xchg
mov
xchg
jecxz
push
fcomps
loopne
or
mov
push
loopne
xchg
rorb
rcll
pop
jae
daa
mov
bound
cmp
jns
pop
xor
cmp
push
das
jp
cmc
out
ret
int
mov
dec
cmp
adc
cmc
movsl
push
ljmp
fnstsw
or
pushf
pop
lret
fsts
in
mov
jb
lock
jg
sbb
rorb
lahf
mov
imul
sbb
pop
mov
jb
fisttpll
dec
pop
mov
mov
into
sub
dec
lret
mov
dec
loopne
mov
ja
xor
repnz
and
cmp
ja
adc
out
cli
dec
in
insb
fdivl
mov
cld
push
movsl
mov
jl
sbb
inc
mov
mov
out
test
mov
roll
mov
xchg
das
and
cmp
adc
mov
push
loopne
fimull
jl
mov
mov
sahf
ret
in
clc
and
lods
sbb
scas
ja
rol
ror
xor
in
xchg
push
decl
jp
jl
pushf
into
pushf
leave
fs
sub
sub
cwtl
add
fmulp
rclb
pop
xchg
imul
dec
sti
and
pop
loopne
or
rcrl
fdiv
imul
xchg
aas
sbb
fistps
es
lods
push
push
sbb
push
sbb
fcoms
sbb
adc
aaa
in
mov
jnp
ja
popa
xlat
popf
jge
xchg
lods
cmpsb
pop
jmp
or
xor
les
mov
nop
and
lods
cmp
pop
cmpsb
ds
push
repnz
xlat
jbe
dec
fisubl
scas
sarb
roll
pop
jnp
jns
xchg
mov
xchg
add
xor
xor
daa
xor
aam
pop
gs
fsts
jno
push
arpl
push
lcall
imul
mov
jb
aad
jns
and
insl
int3
push
jne
jne
xchg
fdivrl
sbb
dec
ds
insl
test
pop
lods
add
xor
cmp
lret
add
jbe
repz
add
out
jae
shl
fcomip
ds
out
incl
mov
ljmp
jo
sti
mov
cwtl
xor
xor
out
cmp
xor
shrl
mov
dec
pop
mov
js
loopne
xor
aam
cld
dec
push
int3
pop
insb
mov
add
fistpll
inc
out
sub
inc
lcall
aad
mov
ds
xlat
stc
or
jnp
bound
fs
adc
std
aad
inc
and
sbb
pop
inc
cmc
mov
cmpsb
scas
mov
jg
imul
flds
xchg
cmp
jmp
cwtl
fildll
mov
out
cmp
cmpsb
icebp
out
test
cmp
and
mov
ret
and
pop
ror
pop
ds
repnz
sub
jmp
pop
pop
add
mov
sub
scas
jp
outsl
call
mov
jno
adc
sbbb
xor
jl
mov
adc
mov
aam
add
xchg
js
pop
pop
sarb
dec
pop
pop
mov
orl
insl
in
pop
mov
fcomps
dec
sub
adc
aad
xchg
mov
jb
cwtl
mov
cmp
insb
push
test
jp
push
ret
mov
orl
mov
jg
divb
sbb
mov
addr16
xchg
loopne
sub
sub
stos
push
xchg
xor
fildl
cmc
test
jns
sub
aad
jmp
add
es
test
es
add
addr16
roll
fidivl
jle
icebp
mov
arpl
es
in
jle
cmp
je
out
push
cmp
out
cmpsb
imul
and
mov
inc
nop
sub
mov
push
dec
mov
fdivl
movsb
push
outsb
lcall
inc
lret
sub
les
mov
push
jmp
cwtl
les
or
push
mov
add
jecxz
adc
cli
orb
xchg
popf
mov
add
out
mov
icebp
jp
cs
jne
adc
push
pop
call
cmp
jge
stos
push
and
adc
mov
push
stos
neg
ds
mov
imul
fildl
xchg
out
or
ljmp
sahf
call
adc
xchg
mov
sbb
in
lret
xor
int
jg
gs
hlt
insl
ret
fstl
mov
pop
ja
mov
and
push
cmp
xchg
pop
dec
mov
push
inc
or
mov
dec
stos
cli
sbb
js
xorl
dec
bound
aaa
xor
mov
jecxz
jne
cmp
aam
arpl
repnz
cli
testb
add
outsl
push
xchg
sbb
and
push
dec
add
mov
mov
jmp
lock
les
int3
sbb
dec
mov
fs
add
je
cmp
js
dec
cmpsl
data16
sub
es
rcl
sbb
cmpsb
mov
mov
andb
movsl
or
jno
shlb
stos
cli
mov
and
cld
lea
test
outsl
inc
pop
out
insl
xlat
sbb
push
cmp
sbb
int3
fmull
fildl
aad
stc
imul
mov
pop
fs
pusha
cmp
lds
nop/reserved
add
shlb
sbb
xchg
into
adc
imul
or
sub
or
pop
jecxz
int
cs
sbb
mov
sbb
orl
rcrb
jp
loop
xor
jge
jo
div
rorb
repz
ss
dec
push
stos
inc
in
mov
in
and
test
call
sbb
pop
add
sub
dec
outsl
inc
ja
fiadds
jno
push
push
mov
pushaw
sti
test
enter
popa
mov
mov
sahf
xor
mov
rclb
shr
test
aas
mov
out
or
add
xchg
mull
ret
loop
pop
outsb
incb
outsl
mov
jmp
and
cwtl
loop
sub
lahf
xchg
insl
out
mov
arpl
cli
add
mov
es
std
out
ret
mov
mulb
cmp
fisttpll
adc
int3
pop
jmp
dec
nop
stos
in
hlt
js
push
sub
adc
mov
out
mov
es
ret
aad
adc
sbb
movsl
sub
in
daa
imul
repnz
mov
push
mov
cmp
xor
adc
dec
pushf
leave
mov
je
and
stos
in
cmp
scas
jge
loope
xchg
fdiv
pop
movsl
push
dec
jo
movsb
aas
cmpsb
push
es
mov
and
mov
lahf
xchg
ja
scas
scas
lock
pop
fistpll
push
test
xlat
daa
and
in
xor
hlt
fimull
icebp
mov
pop
mov
fcmovnu
mov
inc
mov
inc
add
pushf
inc
and
nop
mov
mov
enter
mov
cmc
dec
mov
mov
xchg
jbe
sub
sbb
popf
or
jne
xchg
xchg
and
and
xor
pop
iret
pushf
stos
inc
cmp
jge
ret
xchg
iret
push
mov
cmp
mov
inc
mov
jb
inc
mov
ss
xchg
sub
pop
cmpsl
inc
fcompl
mov
leave
xchg
fs
mov
inc
sub
js
dec
inc
lahf
cs
adc
jae
dec
pop
negb
dec
adc
mov
int
pop
cmp
insb
xor
sbb
cmpsl
sbb
repnz
dec
xchg
call
xlat
sub
pop
sbb
mov
pushf
popa
insl
cld
std
and
sbb
shrl
mov
xchg
imul
or
fs
int3
addr16
push
xor
imul
or
cmpsl
int
nop
jmp
lods
xor
mov
jns
xchg
mov
sbb
dec
inc
test
aam
mov
dec
enter
pop
adc
mov
out
mov
or
jecxz
test
pop
xchg
aad
aaa
mov
mov
fadds
jne
mov
sahf
inc
xor
xchg
sub
push
lods
sub
adc
les
or
in
call
jo
cltd
cs
sub
jo
cmpsl
inc
jmp
mov
out
mov
js
bound
or
fldcw
and
ja
int
adc
dec
mov
call
mov
bound
faddl
rclb
jo
push
lods
fs
push
add
sti
clc
stos
push
ficoml
fisubl
and
loopne
scas
dec
push
push
cmp
imul
xor
cltd
pop
jle
add
jge
lcall
jns
adc
add
pop
jmp
xor
pop
in
jecxz
inc
cmp
cmp
pop
hlt
adc
sbb
push
adc
test
sub
dec
rcrb
sbb
jno
mov
lahf
inc
shrb
and
xlat
jo
jb
pop
jmp
out
mov
pop
pop
and
pop
add
push
pop
sti
mov
xchg
dec
mov
sahf
cmp
mov
mov
pop
rorb
cmpsb
cld
fisubl
and
int3
push
nop
loope
jnp
aaa
cmp
cmp
xchg
cmp
inc
testb
shl
mov
sub
pop
int3
das
test
das
jns
ja
jo
insl
adc
lcall
jne
adc
int
jno
mov
sbb
mov
loopne
mov
fmul
mov
cmp
int3
dec
in
out
or
push
sub
bound
ds
adc
sub
dec
xchg
sbb
pop
test
test
stos
outsl
cwtl
pushw
pop
sbb
cwtl
inc
xor
or
cmc
adc
pop
pop
negb
mov
xlat
ss
in
test
lds
add
pop
shll
add
ljmp
js
mov
loopne
inc
into
xor
dec
or
stc
adc
pop
arpl
iret
sbb
mov
xchg
bnd
sub
loop
push
mov
cld
xchg
roll
sub
sub
adc
lret
test
int3
lods
inc
cmc
fcomps
push
mov
pop
xchg
repz
test
mov
insl
imul
xchg
enter
mov
dec
and
fildl
fsub
icebp
into
inc
push
inc
outsb
lcall
cmp
jns
mov
mov
cltd
mov
xchg
fstpt
add
sbb
out
in
arpl
sarl
mov
xorl
add
fistl
test
lret
loop
mov
xchg
add
xor
and
or
cs
cmpb
aas
xchg
push
arpl
push
cmp
and
pop
into
add
add
pop
lods
push
mov
test
int
or
push
inc
sbb
push
das
fidivrl
dec
shll
das
dec
mov
pop
mov
call
mov
mov
dec
movl
call
int
ljmp
fwait
cltd
in
sbb
cwtl
xchg
cmpsb
push
inc
add
push
add
mov
or
pop
pop
mov
pop
fstl
pusha
stc
pushf
pop
sbb
fs
mov
ja
mov
push
or
mov
mov
repnz
aam
adc
mov
arpl
pop
fstpt
mov
and
leave
add
pop
idivb
sub
rcrb
adc
pop
cmp
enter
jns
stos
xchg
sarb
push
mov
popa
shll
mov
adc
cmp
jge
push
xchg
mov
incb
xchg
and
rorl
pop
sub
dec
mov
xchg
mov
push
push
lods
mov
mov
movsb
fdivrs
adc
pop
pushf
sbb
cmp
push
loope
daa
mov
sub
in
dec
rclb
lcall
xor
and
fidivrl
sbb
xor
repz
in
cmp
iret
and
xchg
lea
mov
cmp
fsts
push
mov
test
push
add
fstpl
popa
cmc
cld
repz
or
push
rdpmc
mov
cmc
push
add
sub
push
clc
sub
push
push
jmp
adc
test
xlat
jecxz
movb
test
bound
inc
xchg
fs
enter
std
push
jmp
aas
cld
ds
cltd
inc
enter
ret
mov
cs
jb
push
jg
mov
mov
adc
xor
xchg
rclb
loope
push
lcall
in
sbb
out
pop
push
sub
ss
mov
gs
rol
test
iret
push
sbb
pusha
pop
cmp
xlat
or
nop
jb
mov
push
and
add
push
into
add
cmpsb
jg
mov
cmpsl
ret
or
cmp
sti
jno
cmp
pop
fsubp
jmp
lds
xlat
mov
mov
gs
sbb
stos
stc
adc
push
mov
mov
sub
hlt
clc
dec
add
jo
out
orl
jns
outsb
nop
mov
and
push
fisubrl
das
call
jne
cmp
sbb
or
push
outsb
mov
into
shlb
mov
xor
cmp
iret
sahf
and
dec
push
push
test
mov
adc
lods
ret
sahf
es
out
ret
and
dec
mov
negb
clc
push
pop
mov
or
stos
push
fdivrs
stc
jmp
insl
hlt
gs
cmp
lret
out
es
cmp
pop
dec
popa
jae
jecxz
mov
fisubl
jecxz
in
push
pop
cmp
sbb
adc
in
inc
push
sbb
out
leave
xor
subb
aad
jmp
clc
xchg
mov
cltd
outsb
je
sub
push
sub
add
lcall
inc
pop
xor
pop
hlt
lods
and
and
push
movsl
or
dec
inc
or
or
mov
lret
stc
loopne
and
roll
ret
and
or
and
pop
sti
jmp
sub
push
ret
cltd
outsl
loopne,pt
sub
jbe
out
shrl
push
push
test
mov
pop
fbld
pop
fsubrl
shlb
and
sub
cli
add
test
pop
lret
outsl
sti
xchg
fsubrl
mov
dec
jo
enter
gs
data16
in
adc
out
aam
subb
movsl
jle
fcmovnb
mov
and
xchg
jbe
hlt
loopne
jnp
xchg
inc
sbb
lea
aas
outsb
sbb
std
out
adc
xor
push
jae
push
push
mov
cmp
ds
pop
mov
aad
push
mov
sub
xchg
dec
push
test
daa
bound
daa
pop
pop
mov
shlb
leave
jge
out
repz
not
lahf
sbb
in
lods
in
rcrl
dec
lods
pusha
and
rcl
sub
xchg
inc
cmp
sub
pop
cmpsl
pop
or
stos
movsl
inc
and
and
lods
lds
cmpsb
aam
movsl
push
insb
in
mov
mov
sahf
imul
mov
das
popa
inc
fbstp
xor
pop
mov
add
sub
into
jge
dec
pop
push
mov
jnp
int3
or
mov
pop
add
jne
mov
pop
cli
lods
sub
fucomp
xorl
cwtl
dec
ror
push
xchg
imul
daa
int
dec
sbb
shrl
fcompl
into
add
add
push
cli
ljmp
push
push
out
cmpsl
sti
pop
cmp
test
insb
out
pop
adc
mov
dec
jl
sub
shll
jmp
pop
xor
sahf
sbb
addb
jmp
popl
inc
jl
mov
je
pop
insb
jle
clc
inc
push
iret
leave
lret
or
sub
add
and
cmp
jns
sbb
jp
shll
sarl
push
imul
ds
jecxz
xchg
mov
pop
push
ror
outsl
jl
jno
xchg
mov
push
mov
mov
mov
xchg
mov
mov
sbb
das
or
lock
lods
sbb
loopne
cmp
pop
jl
xor
mov
mov
mov
xchg
dec
ret
pop
idivb
xchg
sub
das
insl
stos
inc
mov
cmp
rcrb
sub
xchg
ja
dec
jl
inc
sbb
cmp
inc
xchg
sbb
fadd
or
mov
xor
fidivs
repz
xor
out
adc
pop
mov
mov
or
inc
sti
movsb
sub
sbb
sub
loop
jp
lcall
out
cmp
push
pop
scas
stc
in
add
test
and
in
insl
jo
or
loope
and
mov
jae
add
movsl
jne
mov
inc
inc
rorl
lock
popa
mov
sub
xbegin
test
jge
jecxz
aam
mov
dec
js
fmuls
sahf
int3
and
push
dec
inc
xchg
push
jno
popf
pop
aas
adc
dec
aam
ja
push
stos
lret
pushf
push
loopne
pop
or
pop
jle
fistpll
mov
clc
fmuls
int3
adc
mov
ret
xor
add
xchg
push
rcrl
lods
mov
pop
lret
imull
hlt
daa
adcb
lret
outsl
push
xor
imul
and
xchg
lods
jle
mov
fisubrs
pop
inc
jno
add
bnd
out
jmp
movl
dec
sbb
sbb
and
nop
sti
ret
xchg
mov
xchg
pop
arpl
push
xchg
movsb
fimull
cmp
sub
mov
mov
jo
jae
mov
inc
fdivp
push
jl
into
xchg
repz
das
test
into
inc
push
lock
mov
hlt
sbb
mov
xchg
mov
push
enter
inc
fdivl
xor
jmp
imul
cmp
sub
outsl
clc
xor
inc
roll
in
mov
sub
pop
scas
push
psrld
sbb
test
data16
aad
scas
pushl
cltd
mov
pop
addr16
test
dec
fsubrs
jno
inc
push
mov
mov
pop
jns
inc
gs
sub
arpl
arpl
out
outsl
test
push
jns
les
popf
cmp
inc
std
mov
pop
jbe
cld
js
mov
rdmsr
ja
sub
test
data16
cltd
test
pop
cmp
jae
mov
in
pop
mov
mov
orps
in
or
in
add
sub
sub
mov
rorb
dec
or
jb
scas
adc
es
add
inc
jne
lods
fs
insb
xlat
pop
pop
cmc
mov
imul
scas
adc
pop
mov
movsl
lods
jno
test
lods
sub
lods
psubsw
xor
sbb
daa
jno
mov
pop
push
or
sahf
imul
and
in
mov
cmp
add
pop
ja
mov
ret
stc
adc
add
les
sbb
aam
or
pinsrw
out
hlt
imul
notb
xor
xchg
push
js
ljmp
cli
ljmp
outsl
pop
lea
dec
and
sbb
rcrl
outsb
pusha
mov
lock
js
add
pop
dec
and
xchg
mov
jb
jle
pushf
jnp
inc
push
or
sbb
iret
in
std
in
gs
inc
and
mov
inc
je
and
sar
lods
mov
mov
mov
test
int
xor
pop
sahf
ja
inc
frstor
and
pop
inc
push
data16
mov
cmp
stc
cmpsl
mov
mov
cmp
jmp
and
or
adc
rcl
xchg
sub
mov
fcompl
mov
mov
shl
or
in
movsl
imul
lods
fidivl
jle
cmpsl
fistpl
sub
pop
cld
add
imul
dec
cld
ret
or
fs
leave
push
pop
pop
dec
sbb
cld
push
nop
push
movsl
mov
mov
loopne
pop
inc
mov
cmp
mov
cmpsb
outsl
push
leave
bswap
gs
pop
stos
add
pusha
aaa
mov
repnz
fidivrl
pop
icebp
jmp
xlat
jle
jns
es
lret
gs
cld
jns
push
int3
cltd
dec
cmp
stc
and
repz
mov
popl
cli
and
les
cmc
jg
sbb
fstps
call
sbb
pop
add
enter
dec
repnz
je
sub
ds
add
pop
mov
ror
stos
push
shll
cmp
push
lock
add
daa
pop
idivb
notl
pop
and
enter
iret
sbb
sbb
movsb
jg
lahf
xchg
out
test
xor
sub
add
popa
mov
cmp
enter
lret
or
push
adc
fs
imul
or
mov
loopne
mov
jl
jno
lods
in
lahf
and
imul
dec
xchg
stos
xor
add
adc
dec
lret
pop
ds
pop
rcrb
add
adc
dec
pop
fsubl
pop
cwtl
adc
sbb
lcall
je
mov
scas
pop
addl
aaa
xlat
xor
sahf
and
stos
mov
pop
aaa
fwait
aad
insl
cmp
pop
aaa
mov
push
mov
in
imul
and
add
addl
mov
call
dec
sub
pop
mov
dec
sub
je
adc
popl
insl
adc
push
jne
and
mov
xchg
xor
xchg
jb
je
xchg
adc
mov
test
rorb
mov
aam
mov
enter
mov
lea
jge
sub
pop
mov
aam
pop
out
cmc
in
enter
cld
cmp
neg
lods
and
and
adc
lret
xlat
idivl
mov
jl
repnz
mov
test
fstpl
inc
xchg
adc
daa
mov
push
std
pop
shl
popa
lcall
fcoml
movsl
fsub
insb
sub
dec
add
pop
push
sbb
add
mov
pushf
push
jecxz
int
or
les
or
aas
and
jno
cs
sarl
hlt
ja
cwtl
mov
repz
das
jbe
dec
mulb
test
push
push
mov
mov
arpl
dec
subl
cmp
cli
sub
inc
or
sbb
call
sub
in
in
adc
cmp
outsb
or
pop
pop
scas
out
pusha
sbb
jle
loopne
add
dec
lods
and
xor
jg
sbb
inc
cmpsb
jg
mov
inc
sub
add
dec
push
and
mov
dec
stc
xor
sahf
lods
out
inc
fisubl
test
fists
jle
lods
cs
mov
inc
testb
sbb
cmp
aas
mov
mov
pop
loop
xchg
js
cwtl
ret
cmp
ret
xlat
shrl
mov
sbb
cmc
cmp
cmpsb
loope
das
adc
or
daa
jge
int3
mov
out
push
push
cmpsl
aam
fimull
push
pop
and
sbb
fwait
cmp
pop
or
push
dec
jo,pt
xchg
cwtl
cmp
xor
int3
ja
imul
mov
icebp
nop
sub
test
lds
pushf
call
pushf
push
sarb
cmc
cli
fistl
pop
push
pop
sub
adcb
nop
fmull
push
ret
add
ss
push
push
and
js
and
data16
mov
cmpsl
xchg
sbb
stos
les
mov
pop
or
mov
push
dec
pusha
cmp
nop
in
test
dec
push
mov
fwait
xor
shll
dec
in
pop
std
jae
inc
xchg
ljmp
cltd
fisttpll
dec
adc
mov
ds
push
pop
or
imulb
xchg
test
adcl
adcl
xchg
scas
jnp
clc
jno
addr16
lahf
shll
popa
scas
cli
mov
mov
data16
pop
lods
cltd
lock
cmp
xchg
or
ds
aas
pusha
or
sbb
mov
gs
xchg
out
pop
scas
icebp
xchg
inc
nop
sbbl
rorl
adc
xor
pop
jne
inc
xor
dec
out
rorb
rcll
adc
cmpsb
jp
int
xchg
adc
sbb
lods
inc
push
pop
iret
push
jns
outsl
icebp
jmp
out
xor
lret
mov
sbb
cmpb
dec
add
or
jl
ds
jge
xor
xor
xchg
shlb
dec
mov
cmpsl
pop
mov
push
jae
jnp
pop
jbe
mov
nop
ss
jae
aam
sub
ret
int3
and
nop
sub
jne
js
xor
iret
dec
cmp
gs
daa
pop
push
or
and
js
stos
sbb
leave
sub
out
outsb
or
add
inc
fiadds
and
shl
inc
lods
movsl
ja
pop
lret
or
push
cwtl
sahf
in
xlat
cmp
imul
es
jbe
xchg
xchg
sahf
js
fsubl
mov
nop
shrl
mov
shll
les
cwtl
pop
xchg
cld
mov
add
xchg
and
arpl
fwait
sar
mov
into
inc
aaa
mulb
dec
movsb
push
sbb
sti
fldl
ds
imul
xor
inc
fstpl
inc
loope
scas
and
mov
ljmp
push
addr16
inc
cli
inc
daa
out
dec
inc
and
fnstcw
jp
int
idiv
ret
xor
movb
js
popa
cmp
shrb
scas
testb
mov
popf
push
std
out
cmp
push
cmpsb
jns
xchg
and
cld
inc
inc
out
add
dec
imul
cmp
int3
jne
jnp
mov
aam
and
mov
mov
mov
fstl
dec
cltd
push
push
stc
int3
aad
xchg
andb
mov
sbb
xchg
fisubl
xor
mov
repz
scas
mov
mulb
gs
lcall
xchg
ret
addb
mov
in
xchg
popf
xchg
sahf
mov
push
jmp
std
cwtl
das
mov
pop
hlt
pop
repz
push
or
and
mov
mov
inc
in
loop
pop
or
sahf
fidivrs
aaa
scas
ja
mov
push
xchg
mov
xor
cmp
lea
jl
addr16
push
arpl
addl
dec
notl
divb
sub
lret
mov
nop
push
fwait
mov
adc
lock
sti
fisubs
jne
fsubrl
push
pop
pop
xchg
add
scas
and
add
sbb
cltd
sub
mov
or
test
fwait
dec
lret
clc
repnz
test
add
inc
cli
and
stc
sub
test
cli
inc
out
mov
mov
lea
cltd
pop
xor
lcall
or
or
mov
and
inc
lock
dec
push
int
fsincos
insb
adc
pop
ss
mov
ja
mulb
pop
test
sub
xor
scas
movsb
shl
adcl
lahf
add
or
les
in
clc
add
push
or
out
daa
aad
sbb
push
mov
or
fiadds
rcrl
inc
adc
insb
cmp
or
std
cmpl
jb
xorl
mov
inc
mov
push
sbb
frstor
pushf
sbb
jnp
cwtl
and
clc
pop
xchg
hlt
push
add
push
js
lods
cmp
sbb
mov
push
adc
data16
or
popa
inc
mov
and
shrb
mov
push
xlat
xchg
fsubs
mov
inc
add
lods
mov
test
xor
leave
scas
jae
or
add
pop
shlb
cmp
mov
rorl
shrl
imul
xor
ja
fwait
lahf
sahf
inc
cmp
paddusb
inc
push
adc
pop
inc
inc
loopne
fimull
mov
mov
stos
aad
nop
sahf
outsb
push
aas
lcall
fimuls
or
in
adc
aas
imulb
adc
or
mov
iret
in
inc
mov
outsb
cwtl
or
xchg
mov
ds
jae
mov
cmp
fstpt
mov
lds
adc
lds
repz
sti
repz
pushf
ss
jl
mov
icebp
testb
es
sub
xchg
jmp
rol
sub
adc
mov
cmp
test
fmull
jl
xor
cmp
sub
flds
out
jbe
sub
aam
sub
data16
fmulp
fstl
jmp
repz
rcrb
ret
jp
aaa
into
jecxz
js
pop
out
jl
push
ret
jl
jg
pushf
cs
cmp
pushf
inc
or
mov
push
inc
cltd
test
jns
stc
cmpsb
cmp
out
fstp
addr16
shrb
mov
mov
rcl
xchg
clc
gs
aas
insb
cld
sti
or
cltd
pop
notb
bound
cmc
sbb
out
bound
movsb
fildl
mov
repnz
divb
pop
sahf
sbb
push
xlat
sub
cwtl
mov
adc
cltd
aas
repnz
lock
push
mov
lock
js
inc
or
adc
or
inc
dec
xchg
adc
xchg
filds
push
mov
cmp
iret
jae
in
lock
adc
sbbb
test
stc
cld
cld
inc
sub
insb
ret
daa
or
lret
cltd
xchg
adc
mov
cmp
push
push
lcall
sub
out
mov
mov
insb
loope
xcrypt-ecb
cmpsl
or
dec
je
ds
jns
mov
test
or
dec
cmpsb
add
fmull
je
or
xchg
scas
push
test
and
in
pusha
sbb
push
enter
dec
stc
dec
movsb
push
adc
pusha
mov
xchg
pop
shl
repnz
or
mov
mov
jl
ja
insl
cmp
push
rcl
cmc
es
popa
cld
aas
sub
loope
cld
fbld
pop
stc
cmpsl
adc
repnz
std
hlt
and
out
mov
daa
add
xchg
aaa
push
subl
negl
bound
inc
cmpl
mov
andl
daa
pop
std
xchg
pop
and
mov
inc
shl
mov
add
and
jp
outsb
jp
xchg
gs
pop
fldl2e
mov
xor
jae
cmp
adc
push
adc
in
scas
sub
and
jl
bound
lret
ret
and
mov
fcoml
jo
lods
jo
inc
or
test
aaa
adc
scas
mov
repz
add
daa
sbb
scas
sti
nop
fstpt
and
pop
push
call
shrl
repnz
cmovb
jnp
dec
stos
jnp
and
xlat
into
ja
ficomps
insb
jmp
sub
xor
add
movsb
cmpsl
jae
xchg
mov
icebp
mov
movsl
inc
jnp
addr16
lock
mov
pushf
inc
cmp
fstpl
jp
fistl
mov
adc
xor
or
stos
icebp
adc
rclb
mov
popa
fadds
adc
sahf
cmp
mov
jne
pushf
mov
adc
and
mov
fwait
jmp
loope
lds
das
dec
dec
xchg
mov
stos
add
out
pop
jg
in
lods
mov
das
pop
sarb
xchg
xchg
decb
popa
mov
into
cmp
pusha
mov
loopne
stc
sub
sub
lahf
sub
insl
jne
lods
sub
out
test
inc
insl
xchg
dec
loope
adc
rclb
adc
bnd
je
in
inc
pushf
dec
je
or
ret
rclb
push
lcall
test
sub
loope
cmp
idivb
pop
fldenv
sub
icebp
stos
fcoml
cmp
ret
cmp
or
clc
adc
vfmaddsub132ps
dec
mov
mov
pushf
aaa
inc
or
jo
xor
movsl
pop
dec
imul
cmp
xor
adc
or
test
xor
cmp
add
or
sbb
push
xor
jo
xchg
mov
dec
fldcw
push
int
rorl
pop
add
cmpsl
cs
add
outsl
insl
xchg
xor
mov
hlt
fisubrs
dec
sbb
rcl
cmpsb
jns
ds
rolb
pop
and
inc
jmp
cmp
xchg
and
cmp
jbe
add
adc
or
push
push
sub
mov
add
popf
dec
pop
aad
xlat
adc
and
cmp
mov
icebp
adc
into
cmp
cmp
movsl
dec
sub
loope
adc
stos
xchg
scas
adc
mov
add
and
jnp
or
dec
mov
outsl
shll
ljmp
inc
inc
outsl
push
dec
and
sub
mov
ret
pop
sub
insl
mov
or
cltd
cmp
and
int3
xchg
mov
xor
mov
cmp
push
jge
xchg
pop
scas
mov
scas
pop
push
and
pop
cld
pop
inc
xchg
dec
leave
rorb
mov
bsr
fnstcw
dec
dec
adc
jl
insb
mov
mov
push
or
dec
mov
in
or
rep
mov
xchg
idiv
push
loope
fstpt
adc
mov
scas
mov
push
xorb
fiadds
aaa
or
fldenv
mov
jle
and
shlb
stc
pop
imul
mov
out
pop
hlt
and
and
ret
leave
add
pop
test
sbb
mov
out
adc
stos
inc
popa
ja,pt
cld
pop
jae
fwait
push
out
xor
clc
aaa
insb
cmp
jnp
outsl
daa
pop
pushf
mov
aaa
scas
ret
xchg
fstpl
mov
cli
loopne
sbb
and
cmp
cmp
dec
sub
iret
lods
pop
incb
pushf
add
and
stos
pop
adc
xchg
or
dec
and
clc
xchg
jmp
in
cmp
fmul
lret
add
popf
test
fsts
nop
and
cmp
inc
cmp
push
decb
jno
mov
mov
xchg
adc
sti
cmp
das
pop
insl
cltd
unpckhps
jecxz
jl
gs
sbb
sbbl
xchg
fistl
cmp
mov
jae
stc
or
add
mov
in
divl
sbb
or
pop
dec
subl
shll
push
cmpsb
push
out
cmp
and
mov
push
cs
mov
adc
data16
jp
sbb
les
pop
xchg
lods
out
out
xor
mulb
mov
or
jg
and
lret
sub
jo
fisubs
in
shll
out
push
sub
sbb
test
ret
rorb
shll
rorl
xor
popa
jae
jmp
pushf
outsb
jae
mov
xor
mov
gs
cmp
icebp
push
fistpll
mov
jle
jnp
fld
in
notl
dec
pop
push
test
and
lock
out
adc
aaa
les
add
cmpsb
pop
stos
push
xchg
ret
ficoml
fsubs
in
std
repz
or
in
pop
rcl
jecxz
cmpsl
mov
mov
mov
cmp
lahf
test
iret
fistl
ja
adc
cmpl
aam
xchg
out
adc
addr16
and
imul
dec
es
sub
push
mov
mov
divb
or
xor
sbb
inc
rol
jmp
and
and
cmp
mov
or
xchg
ss
cli
push
xor
dec
pop
mov
ret
push
ret
push
cmc
mov
orl
cmp
movhps
pop
aaa
stos
inc
push
pushf
mov
repz
or
mov
adc
adc
push
in
xor
pop
sbb
into
mov
icebp
xorb
movsb
daa
mov
sbb
rcrb
lret
dec
jp
clc
jge
xchg
das
int
mov
inc
push
jne
lock
les
and
mov
movsl
push
add
rcrl
add
das
cmc
inc
jmp
fnstsw
or
std
aas
js
and
inc
sbb
or
jo
icebp
xor
cmp
test
daa
inc
push
cmp
mov
subl
lcall
push
xor
mov
xchg
fstpl
call
sub
sub
lret
fdivs
push
xchg
sarl
test
xchg
out
sub
lcall
pop
cmpsl
pusha
cmpsb
lock
addr16
repnz
pop
aaa
pop
sbb
or
mov
arpl
xchg
xchg
lds
pop
lret
jge
push
push
lds
popf
sub
cwtl
mov
mov
jle
xchg
jmp
fmull
lds
cmpsb
fsubl
xchg
mov
sbb
add
push
inc
cmp
cmpsl
adc
jecxz
cmp
push
fiadds
jl
ds
inc
pop
push
push
add
cmc
mov
add
push
lods
in
pop
js
stos
test
subb
push
fcoms
push
inc
jl
or
mov
insl
xor
das
sbb
shlb
mov
mov
push
xlat
jno
jle
adc
sbb
inc
add
jle
mov
push
ss
cli
mov
out
fisttpll
or
xlat
add
loopne
xchg
idivl
mov
sahf
xchg
daa
add
es
jge
mov
insl
out
sub
int3
cmp
imul
icebp
lods
repz
jbe
fcmovb
andl
pusha
sbb
aaa
lret
jle
inc
xchg
pcmpeqd
adc
movsb
inc
sahf
stc
inc
adc
fisttpl
adc
xchg
sub
stc
lods
in
cs
loopne
cmpsl
frstor
xor
sbb
std
std
cltd
adc
mov
jo
sbb
add
fiadds
pop
ljmp
xchg
outsl
aaa
xchg
jnp
imul
enter
mov
xor
mov
xchg
dec
adc
jbe
jle
ret
repz
outsb
into
adc
mov
daa
faddl
jnp
add
out
call
out
lock
mov
popf
or
mov
push
js
pusha
jge
adc
inc
push
sbb
leave
mov
popa
dec
jae
cmp
and
data16
enter
aad
add
stos
out
cmpsb
pop
sbb
xchg
movsl
aaa
test
xchg
shll
and
push
movsl
lahf
in
push
add
clc
hlt
mov
cwtl
mov
mov
jp
pop
and
pop
push
loopne
sub
pop
xchg
imul
add
loope
xor
inc
loopne
or
jne
dec
in
popf
pusha
jb
into
add
or
mov
js
mov
mov
xor
add
cmpsb
jns
or
pop
mov
sub
fnsave
lock
mov
or
and
test
mov
adc
cmp
shl
xlat
arpl
add
shr
gs
cmp
jp
inc
scas
mov
adc
or
daa
fnstenv
jne
cltd
mov
int3
test
inc
xchg
cs
mov
push
into
js
sub
jmp
or
roll
dec
sbb
lock
pslld
ret
cmp
repnz
mov
mov
insl
jmp
push
sub
dec
lods
pop
into
lock
iret
idiv
lret
enter
push
cmp
cmp
cmp
push
les
rclb
pop
or
xchg
mov
repz
push
insl
in
loope
iret
pop
sub
xchg
popa
ret
scas
sub
rclb
andb
daa
lods
cmpsl
mov
nop
push
jmp
sbb
mov
mov
jmp
mov
mov
add
in
rcll
sub
mov
shlb
lcall
push
movsb
sbb
mov
push
shll
push
roll
rolb
mov
incb
out
outsb
jl
aad
ret
mov
mov
push
adc
inc
mov
insl
leave
les
idiv
fcomip
test
stc
inc
and
lods
dec
adc
jmp
pop
stos
inc
cmpsl
lcall
xchg
jns
adc
lret
push
cltd
test
sub
pop
fbld
xor
arpl
fcomip
bound
test
sub
dec
push
push
arpl
jg
xchg
xchg
out
js
fists
shrl
pop
fnstcw
mov
jmp
pop
mov
outsb
and
out
repz
and
mov
scas
push
out
xchg
push
js
sub
sub
clc
sub
xor
sub
xchg
not
stos
xor
cmpsl
sbb
outsl
mov
mov
stos
movb
or
xchg
sti
shll
push
inc
sub
cwtl
pop
hlt
cli
cmpsl
test
pushf
lds
popa
ljmp
inc
scas
popf
push
ljmp
and
imul
adc
jle
xchg
lock
adc
jecxz
in
jecxz
or
jno
pop
push
lods
cmp
sub
and
cmp
sub
inc
sbb
repz
xchg
rcll
xor
pop
data16
lcall
add
ss
push
loope
hlt
mov
arpl
imul
daa
and
in
lock
inc
lahf
ljmp
pusha
insb
int3
or
jne
cld
and
je
xor
push
cmp
mov
mov
mov
add
sbb
push
mov
into
adcb
push
popf
out
jbe
aad
add
cld
jbe
mov
sub
xor
jecxz,pt
leave
and
mov
lods
push
int3
leave
std
daa
call
andl
test
mov
in
push
mov
lods
push
leave
dec
lret
movsl
push
dec
sub
jne
add
push
rcr
mov
loop
mov
dec
add
cli
nop
in
rorb
xor
dec
loop
mov
pop
add
xchg
test
movsb
pop
fs
in
mov
fwait
xchg
push
movsl
leave
lahf
nop
insb
jg
sbb
and
les
out
cmp
jg
test
inc
out
add
mov
mov
mov
adc
test
xabort
pop
or
push
mov
xor
lret
ja
ss
mov
inc
inc
pop
cmp
or
test
xor
adc
test
into
and
leave
fisttps
cli
dec
rcl
xor
nop
scas
fdivrs
iret
jg
fwait
xor
adc
test
mov
stos
les
pop
xor
mov
xor
sub
mov
call
pop
ds
jle
in
outsb
push
scas
ret
imul
mov
jns
popa
inc
mov
je
mov
add
sarl
xchg
in
nop
and
jp
jae
leave
push
adc
add
or
loope
roll
jne
call
mov
jbe
and
push
xor
and
pop
push
jecxz
xorb
cmp
leave
dec
loopne
jmp
pop
ret
sbb
addr16
cmp
pop
out
lahf
or
or
dec
sub
lret
xlat
push
mov
repz
out
outsl
xchg
xchg
int3
hlt
xchg
addr16
iret
dec
sub
lea
jns
xchg
add
out
iret
pop
xchg
in
nop
jmp
pop
xor
pop
addr16
or
mov
pop
cmp
push
out
lret
out
in
cmp
push
mov
cmp
ficomps
pushf
sbb
pop
dec
mov
cwtl
fwait
and
rorb
clc
xor
es
mov
cwtl
insl
ja
inc
xchg
je
mov
pop
ja
mov
out
sub
shrl
je
push
cltd
lcall
inc
mov
cwtl
sbb
sub
out
jp
popa
cltd
and
aad
aas
stos
hlt
mov
mov
cmp
xchg
loop
bound
cmpsl
add
sbb
sub
cmp
pushf
or
lods
jo
mov
jnp
dec
sbb
jo
icebp
test
dec
lods
movsl
lds
jecxz
jne
cmpsb
adc
pop
dec
xchg
mov
stos
je
mov
sti
push
insl
xorl
fisubrl
inc
add
or
stc
rolb
jmp
inc
sbb
sahf
xor
xchg
mov
jg
inc
push
fcmovnb
into
lcall
cmp
aaa
out
je
inc
inc
in
mov
shll
fmuls
inc
and
enter
dec
data16
jp
je
imul
and
shrb
xor
mov
adc
out
pop
add
pushf
push
add
sbb
and
inc
xor
in
scas
dec
lods
movsl
andl
test
mov
mov
mov
mov
or
fmull
ret
sti
test
or
aad
bound
mov
hlt
push
or
scas
data16
push
aam
aad
mov
mov
jnp
ljmp
test
pop
dec
jle
fcmovnb
movsl
add
adc
faddl
pop
xor
xor
in
sub
mov
sub
dec
aaa
fcmovu
mov
xor
adc
push
dec
jbe
loopew
cltd
mov
mov
sub
ja
dec
xor
or
jno
sub
pop
movsl
cwtl
xorb
lds
or
fdivs
xor
xchg
pop
in
lock
mov
lcall
mov
jbe
xchg
repz
mov
sbbb
ljmp
jns
pop
in
jbe
xor
pop
cld
in
lods
add
es
jnp
aam
xchg
or
inc
decl
in
mov
test
insb
lret
out
jg
ret
jecxz
enter
lret
push
or
xchg
dec
cmp
fsubrl
mov
cmp
sti
roll
fistpll
mov
fs
mov
das
inc
rcl
sbb
das
fsubrs
pusha
push
inc
mov
fs
add
xor
adc
inc
or
cmpsb
jae
test
jno
xchg
sub
rclb
sbbb
popf
mov
xorb
mov
xor
jp
mov
clc
popw
cmp
dec
mov
sbb
adc
movsl
adc
jnp
and
jb
jae
xor
cmp
int3
push
lods
mov
and
enter
negl
pushf
bound
push
and
mov
stc
scas
inc
adc
cmp
adc
rclb
leave
xor
pop
inc
je
rorl
out
lahf
ss
push
bound
cli
xchg
jbe
jo
cmc
or
inc
mov
push
sbb
scas
or
in
call
dec
scas
cmpsl
ret
mov
fistps
adc
sub
es
orl
enter
inc
pushf
jae
xor
add
xor
adcl
jp
popa
ficoml
bound
and
pop
pop
jp
lret
xchg
in
dec
cltd
and
insl
cmpsl
jle
movsb
pop
lods
or
sbb
push
mov
stos
push
pusha
add
add
push
fsubrl
lock
mov
push
inc
cltd
pop
rcl
pop
cmpsl
and
rclb
adc
fwait
inc
les
cmp
sbbl
loope
jno
in
les
sub
repz
push
dec
pop
sbb
pop
jmp
cmpsb
sbb
cmp
push
xlat
inc
inc
push
add
add
dec
aaa
subl
test
pop
sub
dec
call
outsl
lods
xchg
lret
mov
cmpsl
mul
fbld
mov
pop
fmuls
add
mov
aas
sbb
sub
sti
push
mov
add
repz
dec
std
pop
mov
xlat
sub
dec
pop
cmp
pop
cmp
and
cmc
mov
mov
addr16
hlt
loope
rolb
iret
or
mov
sbb
cmc
cmp
les
push
stc
lea
lods
js
sub
jae
or
mov
mov
cmp
lods
xlat
sbb
cmp
xchg
mov
mov
leave
dec
jbe
mov
mov
inc
ja
call
xor
sub
push
dec
inc
mov
add
inc
shrl
xor
notb
popa
add
push
adc
mov
sub
into
jnp
push
jecxz
std
out
out
inc
fucomi
mov
xchg
mov
movsb
lcall
jmp
or
rcl
jnp
rolb
pushf
pop
mov
and
popf
sub
and
cmc
inc
inc
cltd
jnp
mov
sbb
lock
flds
pop
lahf
adc
or
and
sbb
cltd
dec
sbb
or
jne
and
push
clc
mov
pop
push
pop
cltd
ret
dec
or
pushf
jg
mov
push
xor
out
lock
or
movsl
push
test
fimull
gs
pop
fistpll
pushf
int
jge
jne
add
xor
jnp
pusha
test
int
pop
dec
dec
sbbb
daa
jns
or
fisubs
sub
pushf
push
test
cmp
scas
add
je
and
mov
pop
sbb
out
das
push
and
and
xchg
ret
mov
jecxz
pop
jo
xchg
fidivrs
test
insb
sbb
mov
pop
pop
sub
add
cmpsl
or
lods
cmpsb
pushf
popf
jnp
cmp
add
lahf
and
push
xlat
fnstenv
ret
iret
xchg
repz
or
push
testl
jno
ret
mov
pop
sub
cmp
jl
cmc
insl
rcrl
test
mov
push
and
stc
dec
mov
or
leave
mov
sub
lcall
icebp
test
popf
lods
mov
adc
pop
negl
jl
pop
inc
cld
sbb
dec
or
mov
fsincos
mov
push
sub
popf
pop
cmpsl
test
xchg
xchg
xchg
push
loope
arpl
mov
cmpsl
nop
scas
faddl
pop
cmpsl
daa
andb
icebp
cmp
mov
jecxz
cli
xor
jg
repz
int3
inc
and
add
or
iret
hlt
into
fldl
shr
shlb
push
and
push
insl
mov
mov
xlat
jl
bound
mov
jno
ss
clc
inc
pop
push
call
leave
jmp
xchg
pop
fwait
sub
into
fs
scas
mov
or
pop
cvtpi2ps
ss
push
cs
mov
sbb
lock
sti
pop
dec
push
hlt
jnp
pop
sahf
xor
push
in
adc
push
pop
test
cmp
adc
addr16
sarl
dec
aaa
push
adc
add
rep
ffree
ds
repnz
jmp
inc
ss
stos
cltd
repnz
enter
pop
add
in
or
insl
dec
repz
popa
fs
notl
pusha
js
loopne
inc
stc
mov
jae
shlb
jno
imul
jne
rep
dec
je
add
and
aaa
pop
and
mov
imul
aas
mov
mov
clc
push
sbb
push
into
jp
or
and
inc
inc
call
mov
jg
fcomps
clc
je
adc
test
jo
mov
or
sbb
sub
clc
in
push
into
xor
rcll
push
popf
test
push
aad
jge
inc
add
xor
pop
jle
je
stc
into
pushl
cmp
mov
sub
leave
push
rcr
ror
xor
ljmp
dec
or
imul
mov
add
fists
jno
add
out
dec
jbe
inc
daa
insb
bswap
call
mov
aaa
adc
or
xchg
cld
les
dec
jae
sbb
shll
rclb
cmp
in
ror
mov
shlb
scas
cmpl
test
shlb
scas
jmp
fnop
or
icebp
fists
into
cmc
out
std
cmp
pop
xor
or
mov
jnp
pop
test
mov
lret
cmpsb
in
iret
mov
sbb
in
cld
rcrl
ret
xchg
push
fucomi
leave
fisttpl
cmp
mov
pop
cmp
jne
or
jne
addb
movsb
push
xchg
or
fdivrl
mov
mov
cs
bound
test
mov
push
mov
jmp
neg
test
inc
adc
push
stc
sti
cmp
das
xor
cld
pop
iret
lea
and
std
jo
or
push
xor
or
push
mov
repnz
and
adc
iret
lock
xorb
pop
pusha
dec
sbb
inc
pop
loop
cld
mov
in
mov
or
int
cltd
mov
imul
pop
decb
push
push
test
imul
push
xchg
out
pop
or
sbb
shlb
rcrl
mov
or
es
push
jbe
repz
dec
push
fnstenv
cmp
xchg
sbb
test
ja
mov
pop
cmp
test
jbe
test
lcall
xchg
loope
aaa
mov
jno
outsl
pop
mov
cmp
inc
lret
andl
cld
rolb
pop
fwait
sub
rorl
jg
bound
lods
fildl
outsb
mulb
and
mov
xor
gs
test
mov
cmp
xchg
add
fisubl
pop
test
push
jo
dec
sbb
mov
xor
and
add
rcl
test
dec
fucomip
push
mov
jno
adc
xchg
mov
in
aad
lahf
mov
or
mov
js
push
add
xchg
sarb
adc
xor
fisubrs
adc
push
sbb
iret
rolb
push
clc
mov
inc
ret
add
add
out
aaa
bound
pop
mov
lods
xor
repz
lret
mov
int
mov
mov
and
es
jmp
fsubs
dec
ljmp
jae
mov
lods
gs
mov
mov
and
inc
mov
mov
test
jns
adc
xchg
leave
and
xchg
mov
popa
pop
frstor
insb
xchg
pop
es
test
test
sbb
in
xchg
cmpsb
aaa
rcr
cltd
adc
add
push
dec
inc
mov
mov
push
mov
mov
into
or
inc
mov
cwtl
out
mov
pop
sbb
jecxz
nop
test
data16
adc
or
jle
mov
pop
mov
loop
mov
fs
jnp
in
aam
jl
leave
mov
out
imul
lret
inc
int3
xor
outsl
insb
mov
xchg
fiaddl
je
inc
clc
ljmp
mov
jecxz
adc
xchg
jnp
adc
sbb
and
lea
mov
inc
in
out
clc
xchg
addr16
decl
rclb
inc
inc
push
cltd
into
clc
into
xchg
mov
mov
mov
lods
pop
ret
dec
jle
cmp
je
nop
cmp
sahf
pop
add
movsb
pop
pop
js
xchg
or
push
pop
in
shll
push
mov
rolb
mov
scas
lcall
add
orb
adc
push
cltd
sub
sub
out
mov
das
jge
or
mov
rorl
mov
or
psadbw
add
or
lea
test
push
loop
push
call
push
jmp
je
push
mov
add
adc
mov
jne
xchg
pop
inc
jae
xchg
jno
int
adc
fldcw
jb
cmp
cld
roll
add
cmc
lret
xor
das
insb
mov
sahf
fisubl
inc
dec
inc
pop
mov
lds
inc
das
aam
loopne
dec
test
push
or
adc
sbb
push
lret
fbstp
mov
dec
adc
imul
xor
push
pop
fmuls
stos
add
jmp
lahf
in
pushf
jae
cmpsb
and
or
inc
cmp
fimuls
mov
mov
add
fiadds
es
mov
sbb
and
inc
cmp
ds
int3
jmp
push
add
cmp
push
rcrb
jp
leave
cli
out
std
dec
lock
dec
jnp
jb
push
xchg
es
inc
fisttps
add
mov
jp
and
int
rclb
gs
jbe
fistpl
adcb
hlt
sbb
inc
mov
sub
jnp
xor
aam
aad
fld
test
adc
rclb
jb
xorb
inc
push
push
jg
test
cmp
xchg
dec
icebp
cmp
push
push
bound
cs
jb
and
jne
cs
shrl
gs
or
imul
lea
xchg
rolb
outsl
mov
push
pop
xchg
xor
leave
lret
jbe
xlat
lret
lods
mov
insl
cmpsl
pop
jg
subb
in
imul
repz
fwait
sbb
adc
add
cmpb
jns
fwait
scas
cmpb
ds
add
xlat
lahf
mov
pushf
push
aad
mov
jb
xchg
fsubrl
inc
test
repnz
push
cmp
xorb
inc
divb
pushf
sahf
push
aam
out
cmp
xchg
inc
movsl
outsb
add
popf
sbb
cmp
jg
stos
and
push
or
out
sub
rol
icebp
insl
jl
xchg
push
outsb
dec
mov
lods
add
ljmp
lahf
cmp
or
rcrb
jae
imul
sti
lret
push
call
into
test
mov
sub
repz
xchg
icebp
mov
jae
add
mov
fidivrl
ret
cli
inc
or
imul
dec
adc
cmpsb
testl
jmp
xchg
pop
mov
sbb
jbe
pop
add
push
fstpt
aad
xor
xor
pop
push
popa
pusha
jo
loopne
jmp
and
jbe
imul
push
sbb
test
loopne
mov
ret
imul
and
or
lods
int3
jp,pt
xchg
pop
or
pop
xchg
popa
std
es
scas
fsubrl
mov
sub
in
or
push
scas
aas
sahf
out
lahf
fs
test
push
ret
in
ja
adc
cli
or
mov
inc
dec
jmp
push
inc
mov
xchg
mov
xchg
inc
in
aam
cmpsb
aad
inc
lock
repnz
leave
xor
in
lret
call
hlt
xor
push
inc
xchg
adc
fsubl
pop
dec
jp
fcomps
mov
lock
or
and
scas
js
ss
subl
pop
sub
sub
add
mov
sbb
ljmp
into
mov
xchg
xchg
lcall
cli
inc
push
jp
hlt
enter
sbb
addr16
jmp
int
loop
popf
mov
test
mulb
jl
inc
sbb
stos
adc
xor
ret
push
subb
into
jecxz
or
adcb
mov
outsb
cmc
bound
insb
add
or
dec
xor
mov
imul
jp
dec
ja
inc
lret
lods
stos
sub
lahf
push
stc
fimuls
xor
in
cmpb
pop
test
bound
aaa
or
fistps
pop
and
nop
sbb
jo
adc
out
xchg
fsubl
xchg
push
jp
fstp
xor
movsl
mov
push
jae
cmpsl
xor
pop
mov
jg
pop
mov
pop
sub
cld
push
cmp
mov
adc
dec
je
xchg
into
enter
icebp
sbb
xchg
push
adcl
push
pop
test
push
cmp
cmp
pop
push
iret
je
xor
add
loope
jl
mov
mov
enter
sub
pop
push
jae
repnz
or
jno
daa
rolb
add
mov
inc
pop
sub
or
push
dec
out
int3
mov
mov
lea
mov
jp
shll
push
adc
pop
aad
insl
pop
out
sbb
ljmp
add
mov
push
add
push
arpl
jae
mov
sbb
mov
aad
pop
fsub
pop
pusha
sub
jae
jge
xchg
addb
inc
arpl
pushf
es
push
fisttpl
xchg
sbb
sub
fldenv
push
scas
icebp
shrb
lss
fs
cmp
mov
addr16
or
rcll
pop
mov
xchg
sub
push
add
dec
stos
or
test
fimuls
mov
sti
push
sti
sub
jns
out
mov
enter
int3
imul
sub
push
adc
jle
mov
insb
inc
dec
clc
add
stos
cmp
out
sbb
aam
mov
mov
das
aam
lods
shrl
ss
add
add
movsl
les
fdivr
loopne
shll
and
pop
ficomps
xchg
aam
or
xchg
add
fnstsw
mov
jge
adc
jp
add
icebp
dec
daa
mov
jae
pop
test
dec
orb
movsb
and
in
sub
dec
test
sti
lahf
xchg
lods
shlb
in
xor
je
adc
cmpsl
aad
iret
fs
xor
add
and
in
mov
push
dec
and
test
insl
mov
and
ljmp
adc
in
flds
leave
sbb
add
jp
jns
jo
xchg
inc
bound
call
inc
shrb
inc
add
test
arpl
push
mov
jp
imul
push
mov
mov
call
loop
cmpb
sbb
outsb
clc
pushf
loopne
out
loope
mov
pop
jno
pop
mov
add
inc
and
dec
rcr
sar
bound
shl
mov
pop
fcoms
and
test
mov
nop
ret
inc
push
cs
inc
call
imul
inc
js
xor
xor
xor
push
das
dec
filds
cwtl
sbb
pop
mov
mov
out
inc
jmp
mov
adc
xor
leave
in
loopne
jl
iret
sbb
ficoml
inc
loope
inc
andl
ss
iret
fnsave
inc
mov
dec
out
cmp
dec
cmp
xchg
test
ror
cmp
out
inc
adc
shll
or
jae
stos
jmp
clc
hlt
mov
les
mov
test
scas
fdivs
xlat
insb
jno
sub
jg
lcall
pop
int3
lret
lock
mov
and
add
in
push
in
push
adc
test
cmc
int
mov
mov
xchg
sbb
inc
and
adc
jno
loop
push
and
movb
test
jbe
cmpb
mov
shrl
movsb
or
hlt
popf
push
push
in
js
lret
pop
js
cmpsb
fst
mov
add
jae
jecxz
inc
pusha
leave
xor
mov
jle
push
cmp
arpl
xchg
aad
jmp
in
push
jecxz
sub
jle
test
adc
add
mov
adc
sub
pop
add
shrb
cmpsb
pop
xor
dec
lea
scas
les
lcall
mov
fwait
xchg
add
mov
adc
jecxz
iret
adc
dec
shr
rcl
sbb
idivl
stos
idivl
stc
lcall
jecxz
and
rol
adc
sub
out
sub
cmp
dec
nop
adc
into
or
imul
test
int
add
lock
lods
adc
ja
cmpsb
and
movl
or
mov
imul
pop
inc
jb
icebp
test
or
or
mov
mov
mov
jp
inc
sbb
xchg
and
stos
cmp
push
mov
jg
push
or
and
in
aas
push
and
mov
jb
fldl
mov
pop
lcall
xchg
aas
or
outsb
or
gs
into
xor
cmpsl
pushf
mov
fnsave
out
or
and
test
fdivrp
pusha
pop
cmp
aam
push
xchg
add
mov
loopne
scas
inc
add
mov
into
test
push
mov
push
pushl
add
push
scas
inc
add
sub
mov
dec
cmp
mov
lcall
sbbb
jno
cmp
leave
loopne
mov
jo
jns
es
or
dec
popa
lea
test
in
push
sahf
add
icebp
lds
imul
jmp
sarl
jg
adc
ss
dec
mov
push
push
cld
adc
lret
add
sbb
sub
pop
inc
mov
popf
add
aad
andb
push
jg
inc
shl
in
repnz
jg
sti
xor
jne
xchg
cmp
sub
jl
out
jle
in
adc
push
mov
sbbb
mov
xchg
mov
jne
mov
xor
in
sub
mov
hlt
movsb
xchg
test
inc
lock
icebp
xorl
adc
bound
in
sub
mov
push
icebp
pop
subl
fcom
inc
sbb
cs
stc
ds
dec
or
enter
loope
jae
out
cmpsb
js
jle
xor
mov
push
or
scas
and
sub
mov
cmpsb
shr
fdivs
outsl
orl
adc
or
or
jb
push
daa
ret
cmp
stc
in
push
int3
into
add
stos
scas
sbb
jge
dec
mov
in
ss
cmp
xchg
pushf
jmp
test
aad
xor
mov
dec
add
push
imul
add
jo
enter
stos
movsl
and
dec
and
icebp
pop
push
iret
mov
mov
mov
xor
fxch
movsl
mov
adc
adc
push
cs
xor
adc
ja
sti
mov
out
int3
xchg
pop
ljmp
fcoms
push
mov
sub
in
fistl
addl
cmp
sub
rcrb
pop
stos
or
push
ret
out
mov
repz
xor
std
int
mov
xlat
fucomip
mov
pop
jb
std
movsb
icebp
into
daa
inc
rorb
adc
jne
hlt
jle
push
push
movsb
in
dec
ror
mov
scas
add
sub
push
fs
sbb
aas
add
add
mov
push
mov
daa
sub
add
and
imul
rcrl
jmp
mov
subb
pop
stos
pop
aad
push
jg
leave
lods
add
xchg
and
adc
test
bound
inc
xor
sti
sub
fdivs
and
scas
sbb
test
addr16
and
ja
shll
inc
inc
mov
int
and
loope
mov
jbe
sub
mov
aad
in
into
jmp
dec
lds
in
mov
leave
out
sub
mov
nop
roll
jmp
sbb
fsubr
popa
and
test
jmp
sbb
arpl
or
cli
sub
pop
push
outsb
jne
cmp
xchg
xlat
stos
or
sahf
dec
cmpsb
mov
andl
mov
icebp
movsb
ss
ss
jne
sub
subb
mov
or
xchg
dec
and
ss
xchg
xchg
jle
lods
out
or
sub
jb
xchg
daa
lea
xor
insl
sbb
into
shrl
pop
cmpsb
inc
jo
les
sub
and
addb
mov
mov
mov
jecxz
lea
xor
pushf
pop
push
xchg
pop
push
fwait
in
dec
dec
jo
mov
enter
sarl
jae
lock
mov
mov
sbb
enter
ffreep
pop
xor
xor
or
nop
dec
into
jecxz
lahf
mov
mov
test
lock
mov
daa
push
das
or
cmp
aam
jno
ss
pop
xlat
mov
fs
add
int
pusha
daa
aam
push
jno
xor
and
dec
mov
cmp
lahf
adc
test
inc
mov
push
mov
inc
insb
push
inc
scas
adc
sub
xchg
xchg
lret
gs
push
in
fs
roll
jnp
push
dec
jge
adc
jb
filds
xchg
push
xchg
jne
fdiv
andb
int3
xchg
jge
push
push
jo
sbb
sbb
mov
pop
xor
and
jmp
mov
xchg
jo
clc
xor
xor
fwait
paddd
mov
jnp
stos
pop
popl
pop
xor
repnz
ja
xchg
pcmpgtw
mov
inc
push
daa
dec
mov
push
or
push
pop
jns
aaa
push
cmp
loopne
ret
xor
nop
push
xchg
jb
xchg
mov
sbb
aaa
push
cmp
mov
xlat
inc
cmpb
cmp
clc
es
add
hlt
inc
inc
fbstp
clc
fsubr
aas
mov
xor
adc
addr16
mov
hlt
cmp
imul
retw
inc
cmp
mov
sub
mov
lret
pop
push
insl
in
icebp
or
ds
and
and
jnp
jb
adc
pop
sub
add
adc
std
dec
cmp
push
dec
xor
sbb
ret
add
dec
addb
imul
add
and
mov
pop
jp
and
add
cmpl
adc
jns
rcll
push
stos
cmp
add
or
dec
dec
push
std
lret
lods
xor
adc
arpl
in
jno
rorl
mov
stos
imul
testl
daa
add
jb
or
push
jle
add
test
and
sub
pop
cmp
mov
and
ja
call
ss
mov
mov
and
cmc
into
insl
xlat
jmp
jmp
xchg
cs
call
cs
mov
and
mov
or
pop
lods
sub
movsb
out
popa
add
call
pop
ja
roll
sbbb
pop
xchg
mov
pop
xor
outsb
stos
outsl
mov
sbb
daa
loop
movsl
negl
insl
xchg
mov
out
stos
fdiv
jl
push
push
mov
inc
fists
push
loopne
dec
repnz
sbb
xchg
mov
fnstcw
xorb
push
push
pop
jo
pop
repnz
xor
mov
push
aaa
jns
dec
movups
call
inc
in
pop
loopne
dec
movsl
push
cmpl
std
cmpsb
jl
fs
movsb
jmp
cs
stc
jb
pop
inc
out
movsl
mov
xchg
aam
decb
pop
out
sbb
push
ret
mov
jmp
sbb
and
out
es
inc
push
sbb
mov
mov
ja
cmpsb
mov
es
mov
sahf
push
push
inc
inc
stc
add
cmp
xlat
aas
hlt
mov
mov
popf
lods
outsb
ror
cmp
cli
fcmovbe
cmc
push
push
sub
ficoml
adc
cld
xchg
insl
adc
mov
pop
adc
movsl
dec
mov
ds
dec
call
push
mov
pop
mov
in
fwait
and
push
sbb
fldt
fcom
cld
and
imul
popf
pop
xchg
mov
out
xor
jno
adc
push
add
cmp
mov
out
mov
movsl
xchg
mov
js
jl
push
sti
inc
or
or
sbb
sbb
push
inc
xchg
lods
jae
ljmp
adc
and
or
stos
cmp
outsb
shll
into
mulb
push
jmp
mov
add
in
xchg
xor
stc
jbe
aad
addr16
lahf
repnz
adc
xor
mov
loope
xchg
int3
lahf
inc
mov
mov
mov
rcll
xchg
dec
dec
arpl
push
jmp
dec
addr16
and
dec
sub
shll
sbb
mov
or
sub
push
mov
sarl
cs
andb
andl
icebp
ret
ret
push
and
cmp
mov
dec
dec
sti
dec
cmpsb
jle
and
mov
mov
and
outsb
sarl
sbb
push
adc
fdiv
xlat
pop
mov
xor
aaa
jbe
mov
add
arpl
xchg
repnz
jmp
repnz
ret
jg
shrb
pop
mov
push
les
xor
shlb
clc
or
sub
imul
out
sahf
jle
enter
xor
inc
mov
popa
mov
je
sbb
lahf
test
stos
aam
subb
mov
xchg
call
inc
int3
mov
mov
jo
stos
cwtl
mov
push
in
std
fidivrl
or
ss
xchg
jecxz
cmpsl
test
cld
addr16
fiadds
dec
pop
push
mov
cs
cld
lret
stos
xchg
sar
mov
arpl
add
sti
sub
jns
js
insb
flds
shrl
mov
repnz
xchg
xor
or
mov
xor
mov
add
sbb
and
sbb
inc
test
js
outsb
orl
clc
xor
fsubs
add
xchg
xchg
out
in
mov
jle
movb
mov
xor
packssdw
int
xchg
jae
sahf
data16
or
out
adc
subl
xchg
scas
iret
xchg
mov
mov
lahf
cmc
jp
data16
out
inc
jo
sahf
iret
cmpsl
push
in
xchg
lea
fucomip
bound
mov
adc
dec
daa
popf
adc
mov
scas
cld
nop
push
sbb
push
xchg
jmp
bswap
mov
mov
push
sbb
outsb
and
jmp
jne
sub
clc
adcb
dec
subb
mov
xchg
cmpsl
dec
aad
jg
sbb
leave
fsubrl
out
clc
xor
inc
pop
cmp
scas
pop
lahf
into
sub
add
int3
pop
xchg
jbe
aam
sbb
mov
int3
sti
or
cmp
stc
xchg
test
mov
cwtl
out
lret
clc
andb
xchg
rclb
sub
sub
aaa
push
jle
call
inc
test
add
mov
aad
and
pop
int
adc
ret
negb
aam
sbb
in
loop
sbb
push
mov
cli
jg
sahf
sub
repnz
dec
cmc
or
andb
pop
shrl
push
jo
or
jle
xchg
sub
jbe
pop
enter
adc
repnz
dec
fisubrl
inc
xlat
inc
or
push
mov
repz
dec
sub
push
movsl
adc
mov
inc
lahf
mov
loop
jmp
leave
push
and
mov
lret
or
sbb
imul
mov
push
outsb
imul
fdivrl
pop
pop
fmuls
scas
out
in
add
mov
mov
mov
cltd
and
inc
mov
mov
cmc
in
clc
dec
aas
sub
pusha
sbb
scas
xchg
add
jp
mov
add
and
inc
xlat
cltd
test
mov
push
pop
mov
rorb
xchg
lret
xor
cld
lods
pop
outsl
push
movsb
mov
out
mov
push
cli
push
add
int
dec
push
fwait
cmp
jmp
xor
jae
push
adc
outsb
cmp
in
jmp
out
imul
sbb
repz
pop
or
mov
aam
mov
pop
mov
mov
cli
xchg
sahf
pop
xor
into
cli
pushf
cmp
in
pop
testb
xor
add
cmp
sbb
jae
push
dec
imul
pop
mov
jb
fs
xchg
sbb
xor
dec
test
outsl
cmpsl
xor
sahf
cmpsl
mov
scas
in
adc
pop
push
jae
scas
rorb
push
stos
sbb
xor
or
xchg
xor
into
insl
xor
xchg
push
mov
pop
dec
cmp
les
iret
fs
adc
mov
test
jge
fs
xor
inc
adc
mov
or
cmp
fidivrl
in
aad
insl
cmpsb
cs
sbb
adcb
inc
inc
add
enter
mov
scas
lds
xor
repnz
les
imul
and
ret
sahf
hlt
scas
sub
addr16
xchg
hlt
cmp
cmc
cmpsb
fwait
cmp
inc
inc
outsb
and
and
adc
jb
adc
out
lret
adc
popf
xor
jno
pop
imul
inc
dec
inc
shl
push
psubq
cmpsl
cmpb
in
decb
dec
and
dec
aam
mov
push
push
pop
pop
cmp
xor
xor
mov
pop
jns
pop
and
pushf
sub
add
jmp
and
dec
sahf
insb
nop
xchg
pop
adc
add
xchg
out
in
cwtl
xor
xorl
mov
push
jns
inc
add
cmp
mov
repz
movsl
jge
in
xor
aam
and
mov
jle
or
mov
loopne
sbb
adc
cltd
or
js
in
mov
loopne
stos
movsl
test
out
adc
out
cmpxchg
inc
cmc
mov
adc
mov
js
bound
jnp
pop
jns
fcomip
pop
or
adc
or
add
inc
lea
mov
leave
out
bound
stos
in
call
nop
daa
lds
and
imul
stos
in
jmp
dec
movsb
push
jle
inc
in
xlat
cwtl
mov
lcall
xchg
inc
dec
rcrb
mov
push
and
xchg
xchg
xchg
cwtl
movsl
js
icebp
jmp
add
pop
cwtl
sub
out
insb
leave
mov
push
pop
mov
push
add
jne
call
mov
repz
xor
aas
mov
fdivrl
xchg
xchg
xor
iret
enter
leave
cltd
and
xchg
dec
cmp
data16
hlt
movsb
imul
dec
out
mov
mov
pop
cmpsl
fs
jle
cltd
in
and
or
pop
and
cmp
add
movsb
aas
cmc
adc
hlt
jne
pop
adc
in
sbb
sub
je
and
shl
mov
test
ljmp
aad
shlb
test
stos
mov
mov
mov
sub
add
sbb
and
aad
pop
dec
or
push
inc
sub
aaa
pop
cmp
lods
movsl
push
sar
or
add
shl
imull
jle
jp
int
fcomi
cltd
or
out
or
jno
add
xchg
out
xchg
jg
fcmovne
lods
mov
dec
push
sti
shll
adc
mov
idivl
stos
inc
or
in
sbb
pop
xchg
lods
push
cwtl
js
cli
pop
lret
sbb
insb
push
call
data16
mov
test
sub
mov
leave
loopne
dec
mov
cmp
xchg
sbb
fcmovnbe
popf
in
loope
add
sub
and
inc
fdivl
inc
test
push
loop
add
xchg
sbb
jns
mov
jg
pop
lret
ljmp
les
lret
cmp
mov
mov
imul
pop
sti
mov
inc
push
enter
fiaddl
cmpsb
in
fildl
aaa
lahf
adc
add
call
push
push
sub
add
cmp
xchg
jg
insb
fisubrl
test
xor
push
pop
mov
mov
xchg
insb
mov
mov
cltd
mov
jg
das
imul
adc
and
popf
adc
mov
and
dec
jecxz
notb
mov
push
in
imulb
sub
xchg
js
shrb
mov
test
push
scas
cmp
cs
test
push
jb
scas
sahf
out
mov
and
sbb
or
add
shrb
xlat
imul
xchg
push
or
lret
sub
test
outsl
push
jmp
ret
and
lret
mov
dec
shrb
movsb
sahf
mov
jmp
movsl
add
mov
lahf
adc
mov
sbb
mov
scas
pop
lret
sbbl
cltd
jo
jg
dec
xor
or
adc
jl
movsl
mov
shlb
mov
ja
inc
data16
add
out
xchg
std
in
out
pushf
movsl
outsl
pop
add
dec
push
daa
stos
mov
repz
lods
pop
loop
sub
out
jbe
inc
nop
jl
mov
fsubl
rcrb
fisttpl
inc
icebp
and
and
xchg
mov
adc
aam
in
shrl
jp
pop
fisttpll
mov
cmp
pop
movsl
push
ja
mov
or
aas
loopne
cli
div
dec
nop
mov
test
fdivrp
cmc
push
ret
add
push
mov
fwait
mov
leave
das
jno
lods
andl
mov
cmpsb
popa
add
jo
mov
inc
js
dec
fcoml
mov
jmp
adc
adc
test
jo
xchg
sub
mov
testl
pop
aad
inc
inc
cmp
sub
pop
mov
dec
and
push
call
mov
mov
je
mov
dec
adc
inc
aad
dec
dec
or
pop
jnp
push
add
xor
gs
jnp
sbb
and
lea
imul
scas
and
push
fadds
imul
mov
imulb
push
lcall
mov
pop
sub
stos
xor
jno
shrl
add
dec
jnp
inc
push
and
add
sub
jo
xor
inc
bound
mov
push
sub
xor
adc
xchg
mulb
cmp
out
in
pop
jp
ficoms
xor
mov
push
andb
mov
ret
test
data16
adc
sub
dec
test
test
jge
imul
or
push
and
and
sub
fdivs
add
inc
dec
lcall
gs
pop
test
dec
scas
idivl
rcr
cmp
cmp
and
pop
popa
fwait
xor
sbb
ss
xor
or
leave
cmpsb
roll
sub
in
shlb
and
out
aaa
je
data16
mov
mov
push
out
xchg
push
xchg
jl
inc
pop
stos
sub
xchg
jae
inc
add
jle
pop
cmp
add
out
add
imul
rolb
pop
mov
lcall
add
lds
mov
arpl
dec
xchg
mov
sbb
inc
fimull
dec
daa
pushf
adc
adc
pushw
xor
in
push
lods
xchg
add
jg
lret
sbb
push
or
mov
loope
xchg
scas
mov
push
lock
jl
cs
xor
sbb
mov
xchg
cmpb
mov
lcall
sbb
xorb
out
ret
sub
inc
movsb
mov
in
mov
stos
push
mov
inc
scas
loop
mov
dec
or
or
addr16
cmpl
aas
jnp
pop
les
add
fnstsw
pushf
jge
popa
cld
push
jecxz
add
xor
adc
rcll
in
mov
aam
dec
mov
pusha
mov
adc
lcall
xlat
jnp
ljmp
pop
adc
std
push
cltd
adc
clc
fdivs
fcompl
les
pop
jge
push
cmpsl
test
lahf
or
inc
jnp
mov
inc
add
into
stos
lret
lock
pusha
rolb
mov
in
lret
cld
adc
pop
xchg
std
cmp
cmpsl
inc
inc
push
int
nop
in
mov
mov
dec
inc
fsts
aad
in
ja
jle
cmp
lods
xor
ret
jg
pop
shrb
sbb
cs
outsl
adc
mov
jmp
pusha
sub
data16
mov
mov
cmp
xchg
jmp
cmpsl
out
lret
outsb
xor
mov
mov
jp
mov
je
ret
mov
mov
mov
aad
popa
mov
pop
push
pop
pop
sbb
ret
aaa
outsl
dec
notl
imul
sbb
in
mov
gs
xchg
ret
dec
sub
dec
loopne
mov
fiadds
sbb
and
sub
rorl
enter
adc
movsb
or
cltd
lods
dec
xor
in
jne
ds
add
mov
dec
pop
jns
sub
and
jno
aaa
mov
aam
or
lds
and
fidivs
jp
mov
mov
rcll
movsl
int
jno
lock
icebp
dec
mov
mov
inc
sbb
int
xor
xchg
add
lret
cmp
out
sahf
xor
jo
iret
push
movsl
add
rclb
fsubr
frstor
scas
mov
test
jmp
pop
jo
xor
or
inc
sti
imul
sbb
push
jecxz
shll
ret
pop
sahf
mov
xor
stos
rcr
cmovb
lcall
push
mov
dec
sbb
outsb
mov
pusha
mov
xchg
adc
cmp
mov
movsb
add
sbb
jnp
data16
ja
icebp
ja
andl
aaa
loop
lret
cmp
xor
enter
jbe
mov
leave
repnz
mov
dec
outsb
faddl
ds
popf
push
cmp
or
iret
aas
out
lods
mov
fstl
add
imulb
push
fs
dec
xchg
jb
xchg
movsl
in
mov
insl
cld
js
pop
shll
fists
out
sbb
in
mov
xchg
movsb
jge
sub
sti
pop
or
adc
mov
pop
leave
iret
stc
fneni(8087
push
mov
cmp
mov
movsl
jnp
arpl
mov
add
dec
push
jle
sub
mov
push
jns
lcall
mov
push
int3
or
mov
repz
push
adc
add
push
cmpsl
pop
sahf
push
rclb
into
push
push
nop
mov
sub
ljmp
dec
xchg
xchg
int3
leave
lock
push
push
movsl
lret
cs
jae
jmp
mov
add
sti
mov
and
dec
adc
sub
sub
mov
fistpll
lock
sti
fimull
mov
jb
xchg
inc
xlat
jmp
shlb
dec
iret
jmp
adc
lods
push
mov
mov
in
xor
jp
jecxz
sbb
into
pop
and
daa
loop
jo
pop
xchg
and
icebp
sub
mov
dec
dec
jbe
nop
add
aam
cld
ss
ljmp
cwtl
out
add
addr16
push
add
inc
push
movzwl
sahf
mov
mov
mov
cmp
mov
dec
cmp
pop
xor
in
mov
js
dec
sbb
test
mov
push
clc
xchg
mov
xor
shl
fisubs
imul
loop
insl
push
fildl
mov
adc
pop
lods
ja
cwtl
jne
pop
xchg
outsl
dec
sbbb
cmpsb
rcll
fimull
ja
lea
sbb
cmp
mov
push
push
jns
fcoms
stc
shrb
jb
aam
push
out
shr
clc
in
testl
orb
in
pop
add
aam
fdecstp
mov
dec
sahf
stos
jo,pt
outsl
sahf
and
or
jmp
xor
adc
sbb
sbb
push
lods
push
cmp
pop
out
adc
xchg
mov
xor
ds
dec
mov
add
jl
mov
stos
push
cmc
imul
loope
bound
cmpsb
jae
jp
adc
cmc
or
call
or
jno
scas
push
mov
clc
dec
ret
inc
into
xchg
dec
sar
ja
push
nop
frstor
insb
mov
jecxz
scas
mov
test
rcll
jb
outsb
lahf
or
xchg
and
jb
fldcw
cmp
rcr
outsb
lods
mulb
mov
jmp
jle
fmull
fcomps
cs
cmp
jbe
iret
xorl
in
mov
popf
push
dec
je
jne
and
imul
xor
push
dec
xor
shll
out
pop
movsb
adc
sti
cmp
sub
mov
or
aas
pop
jae
xchg
sbb
mov
sbb
jg
mov
sub
cmpsl
mov
add
inc
addr16
or
or
jns
mov
lods
xlat
pop
sub
pop
pop
in
or
inc
lcall
call
pop
cmpb
pop
out
push
movsb
or
mov
aas
add
add
xchg
popl
xor
aaa
push
or
dec
jo
adc
les
sarl
cld
mov
or
cmpsb
xor
mov
cmpsb
jo
ret
mov
mov
inc
cmp
xorb
leave
and
sahf
pop
sub
or
dec
loop
icebp
sti
popf
add
fstpt
dec
mov
imul
mov
add
jne
pop
out
int3
cld
jmp
inc
sub
lods
push
out
cwtl
cltd
inc
popl
imul
dec
inc
in
pushf
adc
xor
shl
loop
jecxz
mov
lods
cmpsl
sub
cmpsb
in
mov
mov
movsb
fs
lods
xchg
pusha
xchg
mov
loopne
popf
int
enter
fsubs
or
ljmp
cli
and
inc
pop
and
xor
inc
add
pop
pushf
mov
leave
jmp
adc
cmp
aas
mov
std
inc
in
aad
movsb
xor
sub
jle
jle
fbld
xor
add
imul
outsl
shll
test
inc
xor
jge
fwait
scas
jle
cmp
mov
dec
mov
mov
fbstp
fdivrs
and
pop
clc
inc
push
mov
setle
mov
mov
push
and
insb
and
es
ds
jmp
push
shlb
cs
mov
and
lea
fwait
gs
cvtps2pd
sahf
xor
loope
stos
jae
push
sub
mov
cs
cmpsl
push
ja
dec
inc
adc
cmpl
repnz
push
outsl
and
xchg
icebp
into
cmp
cmpsb
out
sbb
cmpsl
jno
adc
stos
enter
xor
jb
and
pop
and
sub
std
fildll
inc
xor
inc
adc
test
test
pop
mov
add
pop
push
mov
andl
jle
xchg
gs
mov
outsb
mov
cwtl
jns
shll
rcl
fidivrs
fcompl
lea
cld
fsubr
jl
ret
xlat
add
pushf
xor
push
sub
dec
mov
pop
pop
jecxz
data16
cmp
adc
add
outsb
pop
sbb
adc
bound
push
int3
xchg
pusha
xor
int3
ret
mov
cltd
loop
xor
ss
sar
jmp
ret
nop
dec
sbb
lods
test
xchg
xchg
jle
adc
jne
int
testb
fs
inc
pcmpeqb
pop
imulb
dec
sbb
pushf
sarl
pop
jle
mov
adc
repnz
js
push
inc
daa
rcr
adc
rorl
xor
add
inc
dec
inc
or
std
scas
or
pusha
cmpsb
rolb
jge
pop
mov
and
out
fistpll
dec
dec
xchg
stos
cs
shl
in
add
jns
or
test
not
and
jns
mov
jge
mov
jo
and
adc
push
pusha
roll
test
js
cwtl
sub
jg
cmp
cmpb
shlb
pop
push
cmp
fmul
adc
push
nop
lods
cmpsl
push
nop
or
dec
cli
test
test
jae
lods
insb
andb
stos
aaa
push
in
mov
out
daa
sbb
adc
outsb
insl
fs
pavgw
sbb
mov
jge
cld
iret
cmc
mov
jnp
jge
pop
hlt
sub
dec
mov
out
or
pop
jbe
push
outsb
mov
jp
push
dec
adc
insb
sub
lods
dec
inc
bound
mov
push
js
adc
mov
inc
mov
sti
scas
dec
cmpl
mov
ret
clc
mov
fwait
repz
push
lret
sub
add
sub
jecxz
cmc
scas
pop
dec
lods
bound
out
push
stos
pop
push
mov
ljmp
xchg
xor
push
aam
pop
ja
jp
lret
roll
sbbb
repz
dec
sbb
inc
daa
nop
xor
mov
btc
sub
in
pop
mov
xor
inc
fsubrs
decl
mov
sti
cli
sbb
test
add
mov
ret
jmp
push
xor
cli
xchg
call
lods
pop
cmp
and
xchg
test
pop
fstpl
pushf
stos
jae
fdivrs
add
fcompl
sub
aaa
mov
mov
xchg
jb
popf
cld
mov
dec
or
out
movsb
mov
pop
shll
push
jns
mov
sub
dec
dec
cld
sbb
inc
dec
mov
andl
add
push
rcll
aas
dec
cld
fbld
sub
xor
sbb
aas
lods
mov
aas
imul
mov
fstpl
adc
and
pop
mov
je
lret
adc
iret
repz
addr16
and
or
mov
inc
rcrb
rorb
and
stos
roll
or
stos
in
xor
mov
divb
lods
jnp
push
pop
fs
pop
and
test
dec
lret
fnstenv
mov
imul
shlb
pop
xchg
hlt
push
jmp
sub
stos
sbb
mov
jg
inc
mov
gs
jp
push
bound
adc
xchg
sbb
in
inc
sub
sti
cltd
test
pop
mov
sbb
cmp
les
mov
pop
adc
cmp
fcompp
dec
arpl
cmc
xchg
dec
aaa
push
push
test
inc
mov
hlt
mov
xor
dec
and
sub
push
sti
xor
xchg
xorl
push
jnp
mov
sbb
pop
dec
popf
cmp
ds
push
int
movsb
pushf
mov
jb
mov
push
or
test
lea
pushf
or
jne
xor
xor
push
outsl
sub
in
adc
outsl
jl
icebp
andl
mov
outsb
and
cmp
push
sbb
movsb
inc
lea
movsb
pop
ss
mov
ljmp
out
xor
ror
fisubrl
lea
icebp
adc
add
lcall
in
nop
cmpsl
cmp
and
lcallw
sbb
cmp
sbb
push
cmp
mov
push
and
xchg
mov
jns
sbb
clc
push
pop
iret
mov
jp
xlat
js
xlat
pop
fs
fistpll
mul
stos
stos
mov
das
arpl
je
insl
int3
or
mov
adc
ljmp
in
in
cmc
fdivrl
jns
addr16
xchg
dec
add
fwait
sbb
or
mov
scas
xchg
sub
hlt
sub
mov
jae
adc
icebp
das
lods
aam
mov
sub
fxch
sbb
inc
xor
push
and
in
das
and
jae
pop
mov
hlt
push
mov
pop
pop
fwait
adc
fdivrs
shrb
or
out
cmc
int3
subl
add
dec
sbb
cmp
orb
stos
cmp
enter
sub
xchg
lcall
jmp
jnp
pushf
push
loopne
xchg
leave
gs
testl
fwait
or
lret
mov
push
xor
cs
ds
out
int3
jne
push
add
stos
fs
insb
jbe
cmpsb
lods
jecxz
sbb
mov
mov
test
add
sbb
add
mov
adcb
pushf
adc
xchg
mov
test
and
pushf
xor
adc
scas
xchg
sbb
inc
dec
jae
ret
add
sub
mov
dec
je
jp
ficomps
fbld
mov
ja
movsb
sub
sub
lret
pop
push
in
arpl
mov
mov
mov
lcall
test
data16
int
mov
pop
pop
leave
mov
add
sahf
stos
jo
std
scas
push
stos
jg
push
or
sbb
xchg
xchg
jge
out
test
outsb
test
mov
subl
adc
push
sub
push
cmpsb
repnz
insb
push
cmp
das
mov
icebp
add
xchg
inc
testl
mov
xor
xorb
lcall
mov
ds
lea
test
sbbl
aad
scas
sbb
mov
shll
xchg
adc
les
nop
cmc
xchg
es
fsubs
aad
cs
lock
xchg
int
sbb
inc
pushf
jg
mov
mov
ja
adc
xchg
loopne
mov
mov
pop
mov
xchg
mov
jns
inc
push
xlat
pop
jo
xchg
arpl
pop
dec
lods
push
stos
iret
fsin
sti
push
jle
xchg
cmc
int
lods
out
xor
arpl
jne
lret
and
ss
testl
mov
add
lahf
repz
mov
inc
jmp
imulb
in
mov
fdivs
mov
insl
mov
sbb
orb
dec
jle
dec
push
pop
shlb
cmp
scas
cmp
or
out
rclb
insl
xor
dec
xchg
pop
xchg
mov
adc
xchg
pop
xchg
sbb
or
jnp
ret
shlb
push
mov
aaa
testb
imul
fsubrs
mov
xchg
std
in
cwtl
jmp
dec
movsb
xchg
insb
out
popa
insb
sbb
mov
dec
fmuls
and
stos
lock
mov
popf
fldcw
dec
mov
sub
lods
in
sub
xchg
jae
scas
outsb
sar
outsb
xchg
inc
hlt
xor
mov
fxch
pop
dec
sub
test
popl
inc
fisttpll
leave
mov
push
ret
popa
movl
arpl
cld
jno
jae
adc
push
mov
inc
xchg
add
push
xchg
mov
es
xchg
cmp
mov
or
xor
addl
std
mov
iret
jecxz
add
inc
repnz
and
sub
ljmp
lcall
repnz
lods
adc
cs
push
dec
dec
fsts
push
sahf
and
sbb
enter
dec
lods
sub
xor
negb
iret
dec
or
out
fucomp
adcl
insb
leave
aam
and
xchg
xchg
xchg
sarl
das
cwtl
jno
sbb
push
sub
sahf
movsl
cmp
aas
inc
inc
mov
xor
out
jg
inc
test
jne
mov
jb
aam
cld
fcoml
mov
jb
mov
pop
call
je
lcall
test
aaa
adc
pop
ja
mov
add
pop
in
scas
add
cli
mov
xchg
ljmp
or
cmp
cmp
mov
push
cli
xor
repnz
xor
cmpsl
clc
mov
pop
and
xlat
sub
mov
mov
subl
nop
push
mov
xchg
test
cld
pop
add
push
mov
in
into
xchg
pop
enter
lret
int
inc
lret
ret
push
push
sub
xchg
fcmovnbe
outsl
shrb
arpl
sbb
scas
aad
dec
mov
push
lock
mov
jl
int3
sub
push
ret
adc
lcall
out
adc
pop
popf
adc
dec
jae
cltd
cmp
mov
in
mov
fidivl
adc
cmp
or
jb
ljmp
fs
xor
daa
adc
mov
ds
sbb
iret
sbb
iret
mov
jno
adc
sarl
lods
test
jp
imul
mov
enter
xorl
dec
pop
stc
mov
push
fcoms
test
mov
sub
stos
fdivl
lods
pop
xchg
rorl
lret
add
repz
lods
std
cmp
scas
insb
jge
imul
test
imul
add
in
cltd
fldl
aad
jmp
and
jo
mov
call
xlat
push
add
cmpsb
inc
mov
loop
repz
jne
mov
push
jg
push
shrl
sub
shrl
mov
pushf
out
lret
dec
fs
in
mov
clc
and
lds
arpl
pushf
jne
or
push
addl
sbb
jg
or
sub
xor
xor
mov
xorb
push
popf
ja
mov
jge
loope
aaa
push
insb
outsl
gs
inc
outsl
rclb
push
mov
pusha
popa
shr
xor
inc
and
or
push
pop
xchg
jge
adc
cmp
mov
mov
jle
push
mov
out
or
mov
sbb
repz
mov
iret
dec
nop
mov
int
xor
mov
mov
sub
push
push
pop
and
jmp
mov
fs
call
and
fnstcw
aaa
add
loope
adc
lret
fidivrl
mov
data16
dec
pop
int
push
clc
aaa
jo
cmpsb
inc
jp
jge
inc
or
dec
push
sub
call
in
adc
jge
mov
sub
sub
iret
pop
sarl
scas
mov
add
mov
mov
test
aad
cld
ja
aas
mov
js
fs
and
arpl
jnp
pop
lods
mov
repz
jge
mov
nop
sbbb
cli
jns
lock
xor
das
call
xchg
and
pop
jbe
dec
repz
or
or
fucomp
ffreep
lods
mov
xor
and
pop
mov
mov
mov
jle
adc
fistpl
das
inc
pushf
jae
push
sub
mov
test
and
push
jae
add
xor
ljmp
adc
pusha
fdivrl
dec
push
lret
lds
pop
fxch
stos
add
or
inc
xchg
mov
lret
mov
and
or
mov
pop
cwtl
mov
lahf
xchg
pop
movsb
lock
sbb
add
out
mov
mov
fcompp
xor
mov
sbb
fwait
mov
inc
inc
cmp
dec
rclb
cmp
clc
jmp
or
dec
sbb
inc
sub
adc
mov
ret
jo
imul
fwait
or
lods
dec
xor
push
out
pop
adc
stos
shrl
push
jae
mov
clc
popf
lahf
lcall
lods
daa
xor
sub
mov
or
adc
aas
lods
in
stos
movb
push
rcrb
loope
test
out
dec
adc
fimull
lea
data16
insl
mov
out
js
lods
sub
aam
clc
xchg
xor
das
and
imull
out
jb
sub
out
ret
popf
adc
pop
jne
cmpsb
lahf
fxam
or
or
cli
inc
xor
and
pop
pushf
push
stc
in
loopne
xor
adc
push
fadds
enter
lock
ja
push
mov
fcmovne
pop
inc
or
scas
xchg
iret
cltd
and
dec
adc
push
mov
ret
and
inc
dec
pop
pop
jmp
aam
popa
out
push
orb
stos
jp
sub
jmp
add
daa
dec
nop
pop
jp
in
mov
repz
dec
shll
ret
call
dec
ss
sahf
lock
mov
loope
cltd
dec
and
into
mov
into
cltd
stos
adc
xor
les
push
xchg
xrelease
inc
mov
cmp
ret
push
push
xchg
hlt
mov
mov
mov
mov
movl
sub
mov
jbe
adc
adc
add
icebp
mov
stc
lahf
xchg
and
arpl
jmp
sbbl
test
les
movsb
ds
test
push
dec
pop
xor
inc
test
fs
push
inc
popa
inc
or
inc
adc
aaa
imul
das
mov
mov
mov
mov
pop
add
adc
inc
jmp
das
xor
and
jb
int3
daa
call
push
xor
inc
or
jbe
push
or
jle
xor
xchg
enter
jle
mov
mov
lock
mov
rcrl
mov
dec
shlb
das
gs
fmull
rcll
fnstcw
loopne
lea
push
push
movsb
push
or
xchg
cmp
inc
or
mov
arpl
inc
repz
dec
ret
in
and
outsl
out
mov
add
stos
push
js
mov
or
mov
gs
mov
lahf
xor
inc
pop
fsubrs
dec
pop
mov
not
enter
cmp
ljmp
and
fwait
cmpsl
cmpsl
cmc
sbb
insl
jns
inc
hlt
cmp
daa
add
inc
test
push
jle
jns
jbe
enter
lock
std
arpl
rolb
sbb
cltd
jecxz
dec
push
sub
int
hlt
iret
inc
push
clc
and
popa
mov
mov
mov
inc
in
mov
popf
xor
pop
mov
adc
cmp
or
mov
push
lods
cmp
push
rorl
cmp
sbb
push
pop
sub
jns
jecxz
call
cmc
in
stc
jge
lds
lock
cwtl
pushl
mov
mov
cld
popa
pop
scas
mov
inc
jbe
or
push
js
fsub
leave
dec
outsb
cmp
in
and
outsl
fadd
jnp
xchg
popa
in
into
or
stc
mov
jecxz
fdivrs
or
and
aam
xchg
cmp
stos
loopne
xchg
xor
out
cmp
out
lock
ret
insl
aam
cmp
out
cld
adc
cwtl
adc
lcall
leave
aad
push
daa
idivb
xchg
and
cltd
xor
push
jecxz
sbb
adc
or
fsubrl
pushf
jns
or
insb
mov
dec
pop
out
dec
popf
mov
stos
mov
leave
push
mov
data16
mov
jbe
lea
mov
mov
adc
add
xor
jnp
lahf
ds
repnz
inc
push
cltd
iret
fdivrs
push
shll
in
xor
xchg
jl
inc
xor
aam
cs
adc
repnz
rorb
in
sbb
ror
or
test
leave
cmc
inc
mov
sbb
and
sarb
mov
dec
lds
sti
out
pop
ja
in
test
data16
cs
pop
pop
shl
jle
add
mov
push
outsl
jmp
aas
push
insl
nop
mov
jo
mov
repnz
pop
mov
clc
daa
outsb
cmpsb
sub
mov
sarb
add
inc
adc
dec
test
pusha
xchg
mov
dec
out
jmp
shll
fstpt
mov
stc
mov
pop
mov
or
mov
scas
cmpsl
out
and
pusha
daa
push
cmc
xlat
sbb
lret
inc
jne
mov
inc
sbb
xor
mov
fs
stos
les
std
xchg
adc
push
gs
int
cli
adc
fcomps
cmp
ret
pop
aas
stc
cvtpi2ps
mov
imul
pusha
incb
cld
arpl
sub
mov
mov
icebp
out
sbb
mov
mov
and
imul
inc
mov
popa
dec
cli
add
mov
jbe
adc
pop
adc
cwtl
mov
ljmp
and
lea
ret
pusha
cmpsl
dec
out
push
imul
insl
loope
sbb
aas
les
add
or
imul
dec
pmullw
sbb
fldenv
mov
lahf
jbe
inc
inc
pop
pop
mov
adc
sbb
sahf
cli
js
cmp
xor
pushf
and
and
fistpl
scas
mov
xor
xchg
aam
jmp
out
fimull
adc
pop
mov
inc
pop
jae
lret
fnstenv
ficompl
imul
ret
in
das
push
cld
adc
xchg
sub
mov
inc
les
outsl
sbb
sbb
mulw
sub
mov
arpl
ficoms
aaa
fwait
pop
push
sbb
inc
adc
ret
fwait
push
mov
inc
movsl
mov
add
jne
xor
mul
jb
cmp
test
ret
mov
adc
pop
dec
nop
mov
in
insb
gs
mov
pop
addr16
cmpsb
lahf
add
push
pop
bnd
jns
fisubrl
dec
mov
int
cs
out
adc
dec
or
cltd
xchg
sbb
jmp
scas
xchg
hlt
dec
fstpt
sbb
outsb
pop
push
mov
add
add
dec
ret
inc
insl
push
push
jno
mov
loope
bound
add
cmp
test
jb
pop
mov
mov
sarl
lahf
in
bound
mov
dec
or
cltd
mov
andl
xchg
clc
sub
daa
xchg
xchg
xor
je
popl
jmp
inc
sub
out
or
shlb
fmul
adc
jmp
in
adc
jg
shll
arpl
sahf
mov
sahf
addb
mov
lods
or
lahf
pop
fwait
dec
push
sub
jns
xor
cmp
xchg
out
or
fs
test
push
cwtl
mov
xchg
adc
lds
stc
sbb
fwait
mov
xchg
dec
mov
movsb
loop
push
sbb
push
sub
lret
sub
les
roll
dec
inc
frstor
xchg
or
xor
lret
add
pop
out
test
sub
pop
dec
cmpb
test
pushf
mov
cmpsb
sbb
or
and
sbb
and
clc
ljmp
in
sub
jle
addb
adc
sub
enter
fwait
xor
in
into
sahf
aam
xor
mov
lret
dec
mov
pop
inc
jmp
ljmp
add
das
dec
lock
insb
xor
psubsw
int3
xor
mov
ja
addr16
pop
and
add
adc
in
xlat
adc
mov
lahf
adc
aas
or
popf
movsl
insb
mov
sbb
movsl
aad
popf
inc
repz
clc
mov
and
xor
pop
mov
lret
cli
mov
fcmovu
test
xchg
mov
xor
fs
cmp
sbb
arpl
fstpt
xchg
pop
inc
mov
icebp
push
popf
das
movsl
pop
push
pop
adc
mov
cwtl
inc
push
xchg
rcl
dec
or
mov
xchg
dec
mov
inc
adcl
push
xchg
mov
data16
push
out
in
push
and
sub
mov
imul
mov
mov
jb
or
mov
adc
rcrb
xor
or
insb
pop
lods
lahf
loope
xchg
cli
adc
flds
repnz
mov
mov
jp
adc
fldt
out
xchg
clc
jo
jmp
xchg
loop
into
sbb
xadd
fucomi
xchg
mov
cld
mov
lahf
push
ds
scas
push
sub
dec
negl
popf
jno
mov
out
mov
loopne
add
jne
std
jns
push
inc
test
sub
repz
add
sbb
mov
popa
nop
adc
sub
xor
les
shrb
loopne
xor
ret
and
add
cmp
add
cli
inc
cltd
mov
insb
mov
insl
push
nop
xlat
cmp
flds
mov
stos
fidivs
fdivs
sbb
mov
test
loop
int3
mov
mov
and
dec
cld
cwtl
pop
jno
inc
sbb
ljmp
mov
mov
push
inc
fiaddl
dec
loopne
push
sahf
sub
loopne
daa
push
push
repnz
or
xchg
mov
popf
add
cli
mov
xchg
icebp
push
xor
cltd
mov
xchg
popa
push
inc
insb
out
or
loop
clc
mov
mov
mov
jl
add
lret
cli
in
sbb
sub
in
or
out
xor
lcall
and
ret
imul
jno
xchg
pop
pushl
mov
je
xchg
scas
test
fdivrl
pop
inc
scas
leave
outsl
cli
cmp
mov
rolb
in
aas
adc
jo
aam
sub
movl
mov
sarl
notb
imul
jmp
sarb
lcall
ljmp
jne
sbb
dec
sbbb
mov
popf
pop
cmc
sub
dec
or
lds
jecxz
ja
add
inc
cmp
pop
hlt
sbb
cmp
xchg
lods
cmp
imul
add
lea
dec
xchg
lds
mov
push
lret
mov
scas
fcompl
sbb
sub
rorl
pushf
mov
flds
pop
les
mov
pop
loopne
mov
movsl
mov
fistpl
mov
mov
je
movsl
push
aaa
push
fistpll
push
jp
daa
pop
stc
inc
and
adc
and
xlat
push
sbb
sub
leave
lea
xlat
mov
fbstp
iret
in
pushf
cwtl
or
xchg
jb
dec
cmpl
mov
mov
cwtl
sbb
sahf
sbb
scas
dec
mov
enter
into
roll
mov
mov
out
dec
cmp
cli
out
lcall
push
scas
call
add
fwait
sti
pop
push
adc
push
adc
sub
rcrl
xor
mov
lcall
fisubrl
jmp
js
dec
pushf
repnz
inc
dec
adc
pop
fcomp
fimull
jg
pop
int3
mov
jl
fildll
mov
inc
adc
cwtl
push
mov
shrb
in
push
adc
dec
imul
jg
cmc
in
dec
jne
xchg
mov
das
push
aaa
sub
add
in
and
xor
jmp
fldcw
icebp
lahf
ret
sub
out
pop
adc
mov
sub
jmp
add
mov
and
push
cli
xlat
cmp
into
mov
cmpsl
cwtl
add
xchg
les
pop
aaa
mov
sub
pop
aam
pop
xor
and
subl
inc
and
lea
mov
rclb
jns
out
jo
xchg
jle
lret
cltd
fs
or
pop
dec
ss
in
dec
or
arpl
movsl
in
dec
or
push
xchg
pop
lret
mov
in
decb
lahf
sub
push
jp
jb
andb
lods
enter
cmpsb
pusha
mov
call
xchg
pushf
pop
adc
mov
jae
mov
adc
stos
in
inc
cs
fisttpl
mov
rcrb
or
test
jnp
push
loope
xchg
inc
pop
push
sub
dec
aaa
ja
js
jg
push
ds
loopne
dec
adc
and
negb
mov
cmp
pusha
imul
mov
xchg
arpl
bnd
xchg
test
jno
pop
push
pop
movl
mov
push
mov
rol
or
mov
subl
icebp
loopne
bound
mov
shll
or
and
mov
sbb
inc
cld
test
xchg
cmp
imul
adc
loop
sbb
mov
das
negb
cmp
or
ljmp
mov
push
insl
and
aas
jp
inc
xchg
leave
push
shrb
orl
add
xor
mov
jne
out
repnz
sbb
or
data16
and
call
das
mov
sub
pop
pop
enter
frstor
jne
insl
xor
pop
xor
data16
enter
sarl
lods
dec
addr16
outsb
insl
popf
adc
stos
push
lds
inc
ss
sahf
cmovb
bound
fs
mov
and
mov
aas
jl
mov
popa
sbb
sbb
xor
in
pop
jle
std
imul
fs
sub
daa
mov
jecxz
fwait
add
pop
push
mov
xchg
sub
inc
adc
gs
std
cmp
test
or
push
xlat
icebp
inc
pushf
and
xor
sub
call
cmp
sbb
in
mov
mov
cmp
inc
insl
ljmp
movlps
sbb
cmpsb
and
mov
in
clc
jmp
xchg
xchg
sub
mov
leave
mov
pop
enter
mov
dec
icebp
xchg
call
xor
stos
das
arpl
adc
pop
mov
stc
adc
cli
imul
fwait
out
call
dec
xor
dec
icebp
push
inc
gs
loop
jno
mov
push
and
stos
ret
adc
adc
aaa
cmp
sub
adc
mov
pop
lods
cwtl
add
xor
sbb
orb
mov
cmp
hlt
add
xchg
mov
mov
jae
stos
push
leave
mov
leave
test
divb
fistpll
sub
pop
inc
cmc
xchg
mov
and
test
push
push
lods
push
push
sbb
jge
fs
xor
pop
stos
iret
cmp
jnp
mov
push
xchg
popf
mov
in
jmp
mov
push
sub
or
test
ja
mov
imull
std
lods
jmp
into
push
xchg
sub
mov
and
mov
fs
out
test
inc
pop
mov
das
fcomps
jge
inc
movsl
inc
mov
adc
in
aaa
aas
mov
and
add
shll
and
imul
aad
cli
add
push
shlb
loope
insl
mov
sub
int
rorl
lods
jmp
fisttpll
lret
adc
dec
bound
xchg
ljmp
or
sub
xlat
jp
and
or
mov
push
lods
sub
lea
adcl
adc
push
jb
pop
or
cmpl
mov
pop
test
lock
jbe
pop
cmp
sub
fldln2
int
shr
cs
hlt
fwait
xchg
fisttpll
inc
popa
inc
dec
rcrb
call
popf
xor
or
mov
mov
jbe
sub
int
pop
cmp
add
push
and
shll
loop
outsb
ret
cltd
push
sub
in
sahf
mov
in
xchg
cltd
and
xor
orl
sbb
jp
push
dec
dec
sbbl
ret
ja
gs
repnz
sbb
pop
scas
hlt
push
pop
pop
nop
and
les
sbb
dec
jbe
adc
sub
sub
xor
xor
add
sub
pop
and
std
add
pop
stos
xchg
test
cmp
pop
jp
repnz
out
push
push
push
stos
fsubrs
call
pop
lds
enter
call
xchg
jmp
cmp
jecxz
ljmp
repz
rcrl
xor
adc
or
sbb
shll
cld
sub
cmpb
push
movsl
jno
pop
and
jecxz
xchg
sub
cmp
pop
inc
stos
dec
mov
pop
adc
loop
mov
test
pop
sub
jno
inc
ret
jne
mov
adc
movsb
adcl
sub
in
cli
jmp
sbb
push
js
icebp
mov
cmpsb
dec
jecxz
mov
adc
mov
jp
sbbb
lds
sub
fildll
sub
ror
sub
scas
ljmp
lret
repz
mov
es
rcrl
movsl
add
ret
sbb
push
ljmp
adc
imulb
fidivrs
pop
xor
adc
nop
xor
adc
mov
js
pop
inc
xchg
adc
and
bound
inc
fidivrl
jle
pop
add
outsl
repnz
dec
jb
pushf
sbb
outsl
lret
leave
mov
testb
xchg
ja
dec
xchg
lcall
cwtl
ds
jmp
xchg
lcall
rcl
xchg
cld
sub
inc
or
fnstsw
data16
jecxz
dec
and
imul
sbb
ffreep
xor
adc
sbb
shrl
fsubl
push
js
cmp
sti
mov
pop
push
inc
incb
pop
scas
int
lret
loope
shl
xchg
sub
cwtl
aas
mov
or
enter
imul
sar
pop
lret
xchg
loop
adc
sbb
pushf
dec
cltd
push
das
push
xchg
and
or
jnp
sbb
dec
cmp
cld
out
outsb
movsb
gs
jp
std
inc
sub
ret
mov
mov
lds
sarb
inc
dec
clc
dec
add
aad
xor
sahf
add
fisttpl
jmp
mov
and
fwait
pop
lret
sbb
les
rcrl
pop
cli
fisttps
inc
ss
sar
test
leave
loope
rorb
xor
xor
arpl
jne
or
je
scas
push
mov
jge
addb
or
pusha
out
adc
lret
xchg
jg
xchg
out
mov
xor
pop
bound
jp
je
jecxz
cmp
int
sbb
int3
cld
inc
cwtl
xor
adc
mov
ret
jo
fildl
sub
in
xchg
dec
mov
mov
push
sbb
movsl
pop
out
mov
push
andl
or
add
xchg
jbe
fistl
pushf
push
mov
lcall
xchg
js
lods
icebp
add
dec
xchg
loopne
loope
mov
or
fidivrs
jge
ja
pop
sti
pop
sub
mov
lock
cmp
push
sbb
cld
jns
mov
lcall
sub
insb
lret
inc
jo
sti
sub
imul
inc
aas
mov
add
push
dec
cmc
mov
mov
mov
test
enter
test
pushf
cmp
movsl
push
xchg
int3
cli
out
repnz
insl
or
push
inc
mov
ss
insl
loope
lret
fidivrs
sub
dec
bound
dec
pushf
mov
dec
cmpsl
adc
lret
jl
mov
and
popa
push
fldt
jecxz
jecxz
cld
shrb
pop
mov
daa
inc
add
or
jecxz
enter
jnp
dec
inc
push
std
jb
or
push
negl
ret
sti
testl
push
dec
xor
mov
mov
adc
mov
xchg
inc
sbb
scas
push
test
xchg
mov
or
lock
lods
push
mov
movsl
sbb
mov
pushf
daa
lds
fisttpl
mov
daa
out
push
cld
cmp
inc
pop
inc
rcrl
jp
dec
xchg
imul
sbb
scas
push
leave
mov
add
loop
fldl
cli
js
into
xor
jl
adc
aam
cmc
movntps
dec
cmc
cmp
fs
mov
inc
sub
mov
call
sbb
xor
int
rcr
std
inc
aaa
loopne
jmp
or
mov
js
daa
cmp
lea
scas
and
mov
push
xchg
push
stos
or
insb
and
les
jp
jle
imul
scas
adc
mov
sub
sub
mov
jmp
jle
loopne
dec
cs
xchg
sub
arpl
adc
movl
cmpsb
sbb
push
sti
mov
leave
stos
fsubr
adc
js
mov
or
outsb
loopne
movsb
mov
mov
jb
lds
rcrl
dec
mov
fildl
aaa
inc
imul
and
xor
xchg
mov
inc
and
cltd
shrl
icebp
and
inc
cmp
scas
xor
cmp
sbb
dec
cltd
jae
mov
mov
in
xor
pop
mov
xor
pushf
adc
mov
push
and
cmp
xchg
mov
ljmp
cmpsb
std
scas
aaa
mov
xor
and
mov
into
xchg
jo
es
cmp
sub
jle
stos
mov
loope
dec
fwait
jg
hlt
jle
mov
stos
inc
aad
mov
in
lret
ljmp
cs
sub
or
xlat
push
pop
xor
xchg
cmpsl
lds
mov
sub
das
test
mov
or
int
mov
out
cmp
xchg
outsl
mov
jp
mov
pop
test
adc
cltd
jbe
add
int3
ss
jns
mov
std
arpl
testb
inc
xchg
adc
scas
pop
push
iret
popa
lea
push
add
xor
stc
clc
sub
addl
xchg
cmpsl
push
loope
mov
addr16
pop
mov
aad
ret
out
pop
aam
lods
cmc
fs
testb
inc
pop
mov
lds
xor
lahf
aad
pop
cmp
iret
fimuls
cmp
es
and
insb
mov
sub
aad
jge
loop
and
push
xchg
leave
pop
push
and
and
ljmp
jne
or
mov
xchg
sbb
fimuls
jmp
jg
aam
sbb
add
mov
cli
xchg
inc
push
stc
out
cmp
dec
test
fxch
mov
lds
sub
mov
inc
nop
xchg
imul
fldl
inc
pop
xor
push
push
push
mov
and
sbb
mov
fisttpll
inc
movsl
and
pop
xor
bound
call
lret
fmull
lock
inc
arpl
mov
push
in
in
stos
push
jae
inc
cli
push
movsl
aas
lods
inc
xchg
inc
mov
dec
stos
pop
js
arpl
jbe
test
lods
jae
loope
out
shl
xor
jp
pop
adc
xchg
popf
aam
stos
cmp
testb
jmp
fwait
xor
push
iret
repz
les
xchg
pop
inc
sti
fldl
js
popf
inc
xchg
push
sbb
insl
push
into
pushf
sbb
stos
mov
inc
jne
sub
sub
aad
out
push
fnstsw
jmp
fsts
mov
cmp
pop
leave
sbb
ss
cmpsb
rorb
in
lret
pop
aam
das
mov
aam
mov
sti
inc
mov
fbld
jbe
shrb
mov
lock
xorl
push
jb
test
jb
sbb
mov
pop
sbb
or
xchg
popf
jge
iret
mov
popa
lcall
imul
mov
pop
inc
push
push
iret
xchg
add
fstps
mov
mov
movsb
dec
jg
leave
enter
xor
fwait
mov
in
mov
mov
rorl
aaa
lock
or
out
adc
jl
dec
orb
bound
or
xchg
ret
call
push
mov
mov
dec
mov
clc
jg
loopne
jg
pop
lock
cmovno
jmp
cmp
mov
imull
ljmp
adc
lret
ja
pop
out
ds
and
cmp
je
fs
test
pop
mov
ja
push
sar
inc
arpl
sti
push
popl
insb
push
int
pop
cmpl
xchg
jp
pop
adc
jb
jnp
mov
mov
push
push
std
inc
mov
and
or
mov
fisubl
mov
mov
sti
out
push
mov
int
cmpsb
pop
pop
lock
sub
pop
je
pop
cmp
push
jae
les
mov
int3
pop
xor
repnz
stos
pop
or
ja
sub
mov
fpatan
inc
fwait
or
je
cmp
cld
or
xchg
or
mov
insb
mov
sub
call
and
lock
jecxz
js
mov
sbb
adc
cmp
adc
adc
jno
insl
pop
cmp
std
shlb
mov
xor
jno
lret
adc
lods
cmpsl
out
aad
inc
add
jae
jcxz
jb
dec
push
dec
sbbb
loopne
ret
and
out
jno
hlt
add
test
or
xor
pop
xchg
fiaddl
nop
push
sahf
jg
aaa
popa
out
xchg
pop
push
fistpll
pop
cld
addr16
sti
lret
int
std
pop
jle
fwait
pop
pop
or
cs
mov
adc
hlt
das
pusha
add
jns
fwait
pop
and
divb
outsl
ljmp
scas
jne
push
cmp
mov
std
jecxz
mov
stos
inc
aas
enter
mov
loop
movsb
clc
adc
popa
jns
ljmp
jae
mov
push
sub
mov
add
dec
lods
mov
movl
fcos
cld
idivl
jo
rcrl
insl
pusha
lods
push
push
jle
fsubrs
dec
test
mov
loop
nop
sbbb
jle
or
sbb
out
fmull
mov
or
push
or
xor
outsl
xorl
addr16
loopne
push
cld
and
sub
ja
dec
bsf
jb
in
repnz
jge
pop
add
dec
pop
divl
xlat
sahf
cmp
addr16
popa
mov
in
xor
dec
es
test
in
scas
sub
sahf
or
mov
push
mov
dec
pop
push
xor
sti
cs
data16
mov
push
cmp
cs
xor
fcmove
xor
and
push
push
pop
shll
imul
lcall
inc
lds
pop
outsb
lods
shl
gs
dec
es
out
in
test
push
cmp
shlb
cmp
xor
xor
das
add
call
or
push
and
sub
mov
jbe
xor
jo
mov
int
dec
lods
fiadds
cli
mov
dec
testb
sub
push
incb
test
sarb
fists
fiaddl
mov
jae
push
lods
mov
xchg
aam
adc
mov
sbb
aaa
jno
mov
sub
sahf
and
sbb
xchg
pop
adc
rcrl
rcl
cmc
pop
xlat
mov
fucom
push
enter
inc
push
repnz
add
jns
cli
movsb
or
dec
lret
adc
mov
in
imul
cmp
rep
lahf
inc
lea
push
and
sti
jb
xchg
lods
mov
or
and
mov
data16
and
ljmp
mov
fstl
pop
fwait
jbe
sahf
mov
stos
ja
divl
add
loope
aam
enter
sub
lea
loop
mov
xchg
inc
push
inc
imul
sbb
mov
mull
lods
not
inc
and
int
mov
xchg
les
lcall
dec
lods
cwtl
cld
in
jp
xchg
mov
mov
sbb
es
mov
imulb
das
mov
adc
addr16
gs
mov
jnp
mov
es
and
sbb
mov
lahf
mov
fsts
outsb
es
mov
stos
idivl
arpl
lret
xchg
adc
daa
xor
push
and
sub
mov
jb
mov
fwait
push
pop
iret
fbld
dec
sub
jecxz
out
pop
out
int
push
cmp
xlat
push
push
jno
loop
xor
push
or
mov
cli
stos
jmp
jecxz
mov
pop
cmpsb
out
test
ds
repnz
mov
lret
stc
addb
sub
push
cmp
pop
ss
sbb
das
adc
neg
ficompl
xchg
add
adc
jecxz
xchg
inc
adc
push
mov
imul
mov
dec
adc
insb
or
cwtl
mov
and
icebp
mov
int3
xor
xchg
loop
mov
cmp
push
jl
outsb
fisubs
out
es
jno
sub
es
scas
sbb
jne
fisubrs
pop
mov
inc
jne
mov
rcl
inc
aaa
aad
aam
pop
add
mov
shld
xor
sbb
pop
les
jo
rcll
lret
inc
lock
push
scas
mov
fwait
sti
enter
mov
cmp
jnp
fmull
sub
mov
shll
lock
inc
pop
jle
add
jp
in
fistl
sbb
shlb
jo
mov
fistps
inc
xchg
mov
xchg
sbb
stc
sbb
xor
sub
fldt
mov
jl
fbstp
xor
or
push
loope
aam
in
in
adc
dec
cli
mov
jo
shll
mov
dec
pop
sbb
pop
xchg
hlt
ja
jnp
shl
push
fisttpll
adc
out
je
stc
out
and
mov
xor
icebp
test
jecxz
and
aaa
cltd
ja
dec
or
loope
mov
mov
xchg
mov
lret
cmp
outsb
aaa
cs
lret
insb
popl
pop
fdivrs
mov
and
mov
adc
and
ret
aam
pop
pop
aam
inc
ja
or
in
fistpl
loopne
aas
push
icebp
jp
push
push
push
loop
jle
sbb
lds
outsl
lods
sub
mov
fnstsw
mov
inc
inc
idiv
inc
mov
pop
iret
cmpsb
mov
in
rcl
fstl
xor
lods
cmp
jp
ljmp
xor
pop
dec
test
popa
pop
repz
mov
test
repz
ret
sbb
mov
fadds
fimull
in
xchg
cmp
jae
xchg
cmp
jnp
sub
sub
fldenv
int
aad
js
or
dec
dec
scas
mov
pop
ljmp
dec
mov
mov
shrb
sub
arpl
ficompl
and
cs
cmp
ja
inc
inc
test
outsl
pop
rclb
mov
push
mov
ljmp
pop
inc
mov
inc
inc
fdivs
test
fsubrs
pop
jne
xor
cmp
sub
pop
dec
call
xor
outsb
pop
repnz
add
add
mov
stos
mov
push
cmpsb
adc
xor
jle
sbb
shl
pop
or
ss
ret
push
jecxz
dec
lahf
hlt
jae
sub
pop
cli
cltd
scas
add
push
fiadds
lock
push
cmp
mov
xchg
js
in
pop
jae
mov
out
mov
int
inc
arpl
dec
add
outsb
fwait
mov
rclb
into
outsb
adc
mov
jecxz
cmp
adc
inc
sub
mov
push
xchg
int3
mov
sbbl
loope
test
cltd
imul
stos
pop
jmp
cs
mov
addl
fdivrl
hlt
je
ss
jmp
push
faddp
dec
cmp
shll
mov
adc
test
fidivrs
add
jmp
stos
mov
and
xchg
scas
xchg
imul
pushw
movsl
inc
outsb
pusha
jnp,pn
into
cmpsb
loopne
lret
lds
jno
je
sbb
repz
inc
stos
cmp
sub
pushf
sbb
pop
movsl
rep
in
rolb
add
in
sbb
xchg
xchg
leave
pushf
fisubrl
das
cmp
dec
popf
mov
jl
outsl
or
add
lods
pop
adc
mov
push
dec
sub
push
xchg
pop
enter
gs
xor
inc
out
jmp
pop
fwait
mov
inc
push
fwait
push
hlt
fwait
push
sub
mov
cmp
pushf
mov
jne
cmp
xor
loopne
adc
inc
mov
dec
pop
test
sti
mov
das
mov
xchg
jne
or
scas
mov
lret
mov
cli
addr16
and
movsl
mov
scas
testb
jo
pop
xor
int
rcll
mov
or
test
sub
cltd
outsb
jecxz
mov
cmpsl
stos
push
outsb
orl
cwtl
in
pxor
inc
and
or
pop
cli
sbb
stc
mov
bnd
xchg
lods
lea
mov
push
hlt
leave
nop
lahf
test
dec
jae
and
popa
adc
jecxz
dec
fxch
xor
fstl
cmpsb
mulb
jns
mov
push
js
xchg
jns
into
jl
aad
icebp
outsl
mov
jge
in
push
add
mov
aaa
daa
dec
adc
inc
faddl
jae
insb
sbb
fwait
sbb
fdivrs
push
and
cmp
jns
daa
push
or
pusha
cmp
mov
mov
ret
xchg
mov
mov
pop
int3
je
outsl
imul
out
xor
dec
cmp
sar
lock
ret
insb
mov
arpl
jmp
push
adc
ficoml
xchg
ficompl
ficompl
imulb
adc
xor
mov
add
mov
cmp
or
repnz
dec
int
pop
mov
adc
sbb
ss
push
mov
loope
sub
xchg
jno,pn
pusha
or
sub
and
ja
xor
mov
pop
add
int
jmp
gs
xor
push
mov
ret
mov
pop
leave
test
and
aaa
and
pop
js
mov
mov
xor
jne
movzwl
or
fdivl
jno
je
jo
add
pop
stc
fsubrs
sahf
lock
fcomip
mov
mov
push
cmp
stc
and
sti
jmp
xchg
leave
pushl
into
xchg
push
dec
fimuls
and
lods
lret
pop
cmpsb
stos
cmp
push
std
mov
push
mov
dec
scas
mov
adc
sbb
cmp
cld
mov
imul
fildll
clc
mov
inc
inc
sti
cld
dec
and
adc
pop
pop
push
imul
jb
jle
and
xor
adc
push
push
add
icebp
add
out
mov
pop
jg
test
shlb
aas
add
sub
insl
or
insb
pop
adc
repz
mov
into
daa
outsb
fucomi
loop
pop
aad
cli
push
jne
cmp
mov
and
sbb
mov
imul
loopne
mov
insl
sub
push
adcb
adc
mov
out
movsl
fcmovbe
repnz
mov
mov
rorl
enter
jb
cwtl
fmuls
add
nopl
inc
cmp
gs
lcall
sarl
xchg
cmc
in
push
mov
fwait
cwtl
icebp
lret
fsubrl
ljmp
xchg
clc
scas
loope
in
and
adcl
jne
imul
jnp
push
adc
jmp
call
or
and
scas
pop
jmp
fsubr
sbb
mov
mov
aam
lret
out
jno
cs
aas
jmp
fucom
out
lahf
inc
sti
sub
pop
jge
xor
sub
fwait
mov
xor
loop
jbe
inc
mov
rcr
dec
in
xchg
aas
outsl
or
loop
xor
cltd
imul
mov
int
jmp
in
mov
or
add
lods
jo
mov
push
xor
or
add
shl
xchg
inc
pop
clc
mov
cmp
js
xchg
jae
lods
fcomip
xor
mov
stos
xchg
cmpb
jnp
dec
sti
push
push
xor
imul
test
mov
in
xchg
adc
mov
in
bound
xchg
xchg
sub
push
adc
pop
jge
popa
repnz
push
test
lcall
jle
push
dec
pop
xor
stos
f2xm1
shl
or
daa
push
xchg
out
or
and
xlat
push
jmp
pop
push
push
pop
mov
jg
xchg
sbb
inc
lret
push
cmpl
inc
mov
push
popf
inc
or
jmp
into
rclb
push
mov
mov
iretw
mov
xchg
mov
mov
add
ljmp
cltd
std
leave
aad
and
imul
adc
rol
test
mov
mov
lds
es
and
mov
add
and
cli
shlb
push
xchg
fs
shll
daa
lret
ja
stos
push
add
xor
jb
xor
outsb
jmp
sub
aaa
adc
sbb
pop
add
fwait
arpl
adc
push
add
pop
jmp
clc
cwtl
aaa
dec
xchg
push
test
testb
mov
jae
cltd
mov
std
bound
and
mov
leave
jge
rorb
in
rclb
insb
xchg
cli
adc
arpl
pop
xor
xchg
pop
in
dec
inc
pmaddwd
lds
xor
loop
ret
sub
dec
xchg
popa
icebp
gs
arpl
lods
in
shrb
rcl
xor
xchg
js
aad
or
shrb
in
lahf
fldz
sub
pushf
filds
iret
and
sahf
faddl
nop
pop
out
push
sbb
iret
xchg
mov
jnp
iret
sbb
cmp
sbb
mov
mov
sbb
push
adc
sbb
mov
aad
dec
dec
rorl
lcall
xlat
cmp
push
add
gs
repnz
sub
inc
loopne
jno
xchg
imul
in
in
cli
add
sub
scas
call
inc
ficompl
insl
xor
push
mov
inc
or
cmp
lea
push
mov
rorb
sub
shll
inc
inc
sbb
jns
insl
dec
adc
jp
arpl
add
je
dec
ds
sbbl
jns
xor
cmp
pop
sub
sbb
sbb
into
add
sbb
out
add
cmp
orb
ret
and
ss
mov
or
shrb
cltd
out
mov
adc
mov
test
adc
es
inc
inc
dec
movsl
idivb
jp
mov
cmpb
sbb
jns
mov
and
pop
mov
repnz
addl
test
cli
fisubl
int
out
ror
xchg
test
jmp
fisubrs
mov
xchg
in
dec
xchg
cli
and
push
push
loopne
andb
ret
inc
sar
popa
push
pop
mov
xor
dec
movsb
jns
mov
loopne
das
negb
leave
jle
movsb
or
rcrb
pop
xor
pop
ror
test
icebp
insl
mov
subl
imul
jge
sar
inc
mov
inc
fwait
or
push
rcpps
mov
push
inc
scas
mov
aaa
sti
pop
ljmp
xor
jmp
lcall
jp
jmp
pop
imul
jge
add
xchg
pop
fwait
in
inc
je
insb
mov
out
out
idiv
push
mov
popa
or
fimuls
popf
dec
mov
xchg
sub
ljmp
inc
lea
jbe
enter
inc
pop
sub
pop
shrl
adc
mov
das
into
lcall
adc
push
add
das
xlat
sarb
and
sbb
mov
jns
mov
dec
jmp
fsubs
mov
aad
int3
in
xor
or
cs
add
jmp
lea
mov
xchg
ret
pop
adc
fwait
lds
sub
mov
mov
mov
repnz
sbb
popf
cmp
enter
test
stc
insb
test
dec
pop
jg
dec
jb
addr16
push
sti
add
sbb
xchg
xor
pop
popf
subb
fxch
das
xor
add
ja
jge
add
jecxz
ficomps
sub
jns
or
nop
inc
hlt
sbb
test
lret
dec
cli
out
adc
push
enter
js
mov
sbb
fidivs
test
in
leave
and
clc
jo
fwait
aaa
imul
xchg
pop
aaa
stos
mov
sub
sbb
aad
pop
sti
mov
xchg
xchg
sbb
ds
ljmp
lret
jle
inc
pop
inc
xor
inc
cs
popa
pop
popf
fldl
mov
cld
test
or
cmp
jae
gs
frstor
inc
sub
subl
dec
addl
cmp
cs
jbe
fidivl
out
js
xchg
cmp
push
sti
inc
rcrb
push
stc
add
mov
xchg
mov
loopne
cmpsl
lahf
and
adc
fwait
sub
jge
rcll
inc
mov
les
dec
lds
jmp
out
scas
das
xchg
xor
sbb
inc
adc
mov
aaa
cmpb
ds
mov
fstpl
pop
xor
test
adc
stc
rclb
mov
ds
pushf
mov
jae
pop
inc
data16
adc
or
movb
or
lods
out
adc
stc
add
adc
es
inc
xor
jmp
inc
jns
insb
inc
cld
in
idivb
sti
add
sbb
pop
fs
gs
mov
or
movsl
dec
fldcw
scas
in
inc
push
pop
call
lahf
jmp
cmpsl
cmpsb
ja
push
jl
popf
sbb
inc
mov
lds
orl
test
push
not
loope
sub
mov
cmp
fsts
mov
into
sub
data16
xorl
jge
cmc
cmp
xchg
adc
loopne
mov
insb
xchg
daa
jg
jne
xchg
adc
lret
hlt
in
lcall
xchg
adc
pop
aaa
sub
xor
push
sti
and
mov
cwtl
mov
jg
insb
dec
mov
cmp
dec
outsl
aaa
mov
jge
movsb
cwtl
sbb
xor
push
leave
adc
push
test
jns
adc
je
dec
xor
sub
movsb
jge,pt
inc
sbb
mov
jbe
pushf
into
jl
movsb
inc
lea
jge
aad
adc
clc
pop
mov
xorl
lcall
sbb
mov
xchg
inc
mov
lcall
mov
inc
clc
negl
imul
pop
jns
jecxz
inc
sub
or
pop
push
jecxz
lret
mov
sub
sbb
lret
push
lods
or
mov
mull
pusha
xor
pop
stc
pop
jmp
sti
lods
sub
shr
lock
cmp
clc
shll
and
in
in
jne
scas
and
aam
repnz
jle
xor
and
ret
fcoms
xchg
cwtl
jle
pop
mov
and
mov
ficompl
pop
lods
mov
jns
shlb
lds
cmp
loop
push
push
jb
stos
push
fimull
add
inc
ja
jmp
and
out
insb
jp
andb
sbb
mov
repnz
pusha
rcll
xchg
jle
incl
mov
adc
fisubs
xchg
push
loopne
add
mov
mov
jecxz
jl
inc
dec
int
cmp
lcall
movsb
ffree
and
in
pop
test
cmp
icebp
inc
jb
mov
mov
mull
inc
in
cmp
add
sti
jle
jnp
loope
push
fldl
jl
xchg
aaa
jnp
subb
xchg
pop
hlt
dec
push
add
sbb
mov
popa
loopne
les
es
jae
mov
cmpsl
mov
clc
insb
jge
mov
out
mov
dec
iret
ffreep
negb
sub
shlb
enter
pop
outsl
mov
add
push
int
or
arpl
adc
and
popa
jp
data16
addr16
fdivrl
mov
lods
loopne
push
dec
test
jg
movsb
xor
insl
inc
add
mov
iret
int3
fdivr
ret
xor
push
push
pop
add
orb
dec
mov
sbb
fistps
sti
es
ja
stos
sbb
xchg
pop
js
add
mov
movsl
js
aaa
jmp
and
gs
xchg
sub
fwait
mov
in
jb
mov
out
idivb
dec
add
andb
stos
cli
sub
loop
or
sbb
push
mov
imul
mov
test
out
cwtl
jle
mov
rorl
fcomp
nop
xchg
inc
add
ljmp
dec
push
add
sub
adc
pop
mov
subl
shll
movsb
push
ljmp
push
cmpsl
popf
rorl
pop
in
jae
mov
adc
outsb
imul
xor
imul
jae
pop
mov
jnp
and
cmpsl
out
cltd
xor
cmpsb
sbb
xchg
mov
xchg
jo
add
mov
adc
sbb
cmp
mov
ret
adc
pop
aas
fldenv
mov
cmc
mov
in
aaa
dec
in
fcoms
adcl
int
inc
out
add
or
das
sub
and
stc
aad
mov
lods
in
sti
cwtl
mov
insl
jbe
jl
cmp
pop
push
cmp
xor
shlb
xchg
ficoms
lea
aam
adc
sbb
mov
popl
loope
push
sub
call
adc
insl
push
jmp
out
jbe
imul
and
xlat
movsb
cmp
rcrb
mov
pop
sbb
lcall
push
shr
mov
adc
test
stc
std
out
fwait
mov
and
fdivrl
aam
adc
and
push
movsb
or
inc
aaa
push
dec
stc
mov
cmp
and
sub
nop
inc
jl
xchg
cwtl
lock
inc
inc
daa
unpcklps
dec
adc
cltd
test
mov
imul
pop
and
mov
imul
lods
jge
dec
cli
enter
adc
push
or
fldln2
cmpsb
cltd
insl
not
mov
add
loop
dec
rorl
sbb
mov
inc
ss
test
call
mov
popf
and
aas
addr16
into
push
inc
cmpsl
sbb
call
fdivs
jecxz
outsl
repnz
push
notrack
pop
lds
jns
out
hlt
incl
jge
inc
testl
outsb
nop
xor
pop
lea
rclb
daa
popf
and
mov
std
sbb
adc
lret
sub
inc
jo
push
jg
sbb
inc
dec
jle
pop
pop
adc
push
arpl
sbb
xor
fcmovnu
ljmp
or
stos
xlat
mov
mov
cmp
mov
lret
pop
stos
rcll
sti
cld
fs
scas
pop
lods
mov
lret
ffree
repz
imul
pop
into
popa
cmpsl
cmc
ret
or
fxch
mov
push
dec
cld
or
mov
movsb
mov
or
xchg
fptan
cmpb
or
enter
xor
outsl
es
lods
imul
push
ret
mov
shl
cs
xchg
push
mov
outsl
add
scas
out
jl
fwait
push
sti
mov
inc
mov
and
sti
jnp
fdecstp
and
sbb
xchg
mov
dec
outsl
mov
je
mov
enter
jbe
pop
xor
and
shlb
popf
jb
pop
mov
outsl
stos
xor
sub
cmp
lahf
jns
add
arpl
repnz
out
lock
cli
loope
test
sbb
add
cmpsl
sub
xchg
inc
and
arpl
incb
in
in
mov
push
dec
fdivrs
mov
cmp
in
dec
push
mov
out
fsubp
jnp
adc
pop
adc
stc
jnp
push
lds
push
in
pop
lock
xor
mov
push
movl
jl
lods
add
or
cld
pop
sub
lcall
jbe
ds
sub
ja
mov
aam
loope
pop
bnd
and
adc
xlat
inc
jl
inc
aas
dec
cwtl
push
mov
mov
ror
rcll
mov
cwtl
inc
sbb
out
jns
notb
adc
mov
pop
scas
pop
and
mov
pop
jae
push
shlb
sti
pop
or
sub
inc
ss
xor
pop
inc
out
fs
scas
nop
push
mov
adc
pop
mov
shl
mull
aas
pop
xorb
xor
sbbb
fldenv
push
lret
xorb
pusha
push
addl
or
xchg
pop
dec
add
pop
mov
lock
sub
mov
mov
je
dec
pop
cltd
pop
lods
jg
xor
sbbl
jp
andb
sub
xchg
decb
mov
jb
clc
pop
pop
sub
daa
jg
iret
sub
insl
or
add
pop
scas
rol
mov
dec
clc
jne
ror
out
mov
dec
mov
sbb
mov
leave
aad
sub
push
and
out
push
daa
jns
and
leave
cld
repz
xchg
xchg
pushf
jae
shlb
pusha
ficomps
mov
push
mov
mulps
dec
imulb
into
movsl
sub
fidivl
dec
cmpsl
mov
sbb
sub
loop
xor
jle
cmp
mov
mov
xorb
mov
mov
pop
fisttpl
popl
jae
sbb
mov
jle
xor
je
pop
jae
popa
lret
sbb
into
hlt
arpl
loope
adcl
push
lcall
int3
insb
xchg
outsl
pop
je
pusha
and
mov
andb
adcl
and
jg
jg
jecxz
xor
push
loope
or
lret
test
aam
daa
es
movsl
cmp
imul
sarb
mov
sub
loope
sub
scas
mov
outsl
in
daa
and
sbb
ss
addr16
cli
sbb
cmp
inc
loop
mov
pusha
push
mov
mov
jo
ret
sbb
les
cmp
scas
ret
shrb
mov
ljmp
ret
call
and
fists
movsl
cs
lds
jns
fisubrs
mov
into
xchg
cmp
mov
adc
test
das
adc
jg
sub
mov
push
mov
mov
scas
xor
popa
popa
in
shrb
into
mov
mov
jmp
in
or
lock
sbb
ds
lock
in
ss
or
xor
mov
sub
insl
call
in
mov
jne
adcl
jno
js
pop
es
jp
lds
fdivrp
mov
xchg
fdivs
sbb
rcr
add
push
cmp
sbb
lds
int
popa
inc
pop
adc
stos
ss
stos
adc
push
xchg
mov
roll
pop
and
xchg
ret
dec
jne
xchg
xor
xor
in
inc
pop
fwait
add
scas
sbb
data16
mov
xor
leave
or
repnz
sbb
mov
arpl
shll
jbe
dec
sbb
add
inc
shl
fs
decb
xchg
cmc
cmpsl
mov
jecxz
pop
push
out
in
jp
xchg
jbe
ret
scas
sbb
das
fadds
test
inc
dec
pushf
mov
and
in
mov
jne
int
sbb
add
mov
xchg
cmc
data16
out
test
inc
mov
add
and
or
stos
rcll
clc
pop
mov
jae
stos
dec
jg
mov
or
repnz
ds
push
push
xchg
or
pop
jge
std
in
jg
add
adcb
movsl
das
sarb
pop
push
cmp
imul
cwtl
xor
push
add
cmc
dec
sub
fs
pop
adc
or
insb
jbe
lcall
jge
outsl
fnsave
fwait
mov
fdiv
nop
cld
cmpsl
push
imul
push
and
mov
jl
pop
xchg
data16
mov
jns
hlt
icebp
ds
sahf
adc
rorl
fadds
fs
push
or
adc
push
xchg
inc
stos
mov
push
cmovnp
pop
gs
ucomiss
sbb
in
shrl
push
add
pop
jae
dec
scas
out
or
jecxz
mov
sbb
mov
jecxz
push
xor
mov
inc
inc
dec
push
loope
adc
test
xchg
xor
stc
cmp
negl
mov
mov
push
lods
nop
pop
cmp
xlat
add
clc
cwtl
push
and
dec
dec
aad
cmp
jge
mov
adc
dec
cli
fwait
mov
iret
pop
adc
mov
std
sub
jne
es
sti
idivl
daa
xchg
cmpsb
scas
dec
flds
mov
add
cmp
dec
sbb
icebp
xchg
aas
and
out
pushf
cwtl
sub
dec
fdivr
adc
or
mov
or
mov
inc
mulb
and
outsb
cli
xchg
stc
jno
arpl
mov
jbe
sbb
xchg
movsl
cmp
or
psrld
mov
aas
stos
aad
inc
mov
or
jnp
movsb
std
roll
ds
stos
fprem
add
les
es
movb
dec
and
sar
inc
cmp
setnp
lahf
jecxz
push
adc
and
push
pop
pop
movsl
call
ficomps
inc
pop
sub
hlt
testl
mov
push
xor
xchg
mov
test
arpl
fmull
jp
dec
xchg
pop
fdivs
cmpsb
ret
adc
out
sub
in
cli
adc
shlb
sbb
xchg
dec
mov
pop
mov
and
jp
push
dec
jo
jl
jp
aam
and
outsl
idivb
out
lods
mov
pop
loope
std
jne
mov
cmp
sbb
nop
imul
inc
adc
push
xor
pop
sti
movsb
jmp
adc
xchg
in
push
stos
icebp
out
je
mov
jecxz
cmp
add
add
mov
addr16
lret
fmulp
dec
insl
jl
repz
test
repz
lcall
mov
shll
mov
inc
pop
bound
push
loop
jge
repz
push
daa
std
mov
lret
pop
mov
xchg
aas
fcompl
das
repnz
int3
add
shrl
push
sar
adc
hlt
gs
push
out
pop
mov
inc
adc
stos
test
dec
or
inc
flds
jno
inc
stc
hlt
cwtl
into
repnz
insb
test
mov
add
adc
ret
testl
stc
test
out
stc
lock
enter
loope
dec
mov
call
sti
mull
inc
mov
lods
jmp
mov
or
daa
testl
es
mov
outsl
jl
xchg
inc
sahf
cs
mov
dec
sbb
sub
xchg
outsl
imul
lcall
inc
out
sub
and
movsb
mulb
add
popf
cmc
inc
and
cmp
fsubrl
rcrb
dec
cmp
ret
pop
gs
rclb
xchg
out
sbb
push
lret
fabs
lock
lods
push
mov
dec
inc
in
adc
adc
cwtl
inc
fildl
ja
icebp
pop
mov
rcll
xlat
mov
je
push
lods
add
imul
fs
btc
xor
and
in
out
dec
inc
je
adc
decl
sbb
adc
add
xchg
sti
inc
dec
out
pop
pushf
mov
rcrb
nop
mov
dec
xchg
cld
mov
and
inc
popa
fwait
push
inc
pushf
add
rclb
mov
cmp
mov
leave
cmp
push
and
dec
ljmp
push
mov
stc
sbb
mov
push
xor
shll
fnstsw
xchg
cmp
dec
sub
add
push
xchg
lret
int
js
xchg
clc
dec
push
mov
or
jp
and
dec
sbb
cmc
daa
adc
jnp
push
pop
fisubs
push
sti
pushf
stos
jle
aas
mov
xlat
es
mov
cltd
mov
negb
mov
test
mov
and
movsl
pop
rorb
sub
pop
lods
mov
lahf
lock
adc
loope
clc
popa
mov
stos
cmp
jbe
test
std
sub
jo
rorl
orb
sarl
mov
test
and
push
lods
cltd
ficoml
shrb
int
rcll
dec
cmc
iret
daa
sub
fcmovbe
je
lcall
icebp
inc
push
dec
pop
pop
ror
aas
jl
or
neg
pop
fstpl
or
pop
loop
out
das
test
aad
inc
fwait
mov
xor
jle
pop
xor
push
mov
mov
jno
gs
filds
jne
sub
call
push
xor
lds
sub
mov
cmp
dec
mov
push
popa
xlat
mov
inc
or
movsb
pusha
negl
inc
ss
lods
bound
repnz
sub
lods
ljmp
lods
movb
sub
sub
push
sbb
rorb
pop
sarl
fstps
stc
mov
adc
cmp
sub
mov
push
test
hlt
mov
lea
mov
push
subl
mov
dec
icebp
xchg
fwait
xor
aam
test
push
subl
add
pop
dec
push
dec
rcr
cmc
imul
cmp
stos
push
insl
sub
cmpsb
add
std
cli
xchg
not
adc
imul
lock
dec
xor
dec
sbbb
add
push
mov
lea
adcb
std
sub
adc
cmp
inc
lock
out
outsb
cli
xchg
stc
jns
out
insb
cmp
insb
xlat
in
xchg
xchg
lea
pop
and
ficomps
nop
cld
inc
lods
mov
aas
pusha
cmp
xchg
popf
sub
pop
cmc
inc
push
fists
xor
sahf
dec
cmp
jne
fsubs
cmc
ss
imul
or
xor
ficoml
ja
push
test
dec
es
ret
inc
sub
and
mov
call
cmp
cmp
shrb
jge
add
aas
into
test
stos
jno
sub
and
pop
sub
fwait
loope
loopne
in
ss
ss
cmp
dec
cmp
and
or
push
dec
addb
aam
std
xchg
fwait
cmp
lods
js
out
push
test
enter
lcall
sub
and
mov
xchg
dec
bnd
or
push
xchg
nop
les
mov
pop
ja
lcall
out
in
ficoml
addr16
popa
mov
xchg
addl
js
iret
stc
xor
cmp
lea
or
pop
repz
fbld
dec
adc
jnp
jnp
cmp
sbb
sub
filds
mov
cmp
addl
popa
adc
mov
bound
mov
dec
inc
fistl
cmp
pop
ret
xchg
lods
sbb
mov
outsb
repnz
adc
loope
shr
test
and
lret
cmp
adc
pop
into
in
jae
lret
jb
icebp
jne
mov
add
dec
lock
stos
mov
pop
dec
adc
sub
fnstsw
leave
mov
push
repnz
push
inc
or
std
inc
jne
popf
arpl
jge
dec
add
dec
mov
mov
mov
ss
mov
into
imul
popa
movb
clc
rcrb
negb
rorl
sub
push
push
fimull
adc
adc
xchg
cltd
aaa
cmpsl
daa
sbb
mov
stc
out
clc
mov
sub
adc
pop
js
out
nop
das
jecxz
sbb
adc
insl
xchg
pop
and
sub
shrb
pop
sbb
push
cmpsl
lods
inc
outsb
in
add
shrb
sbb
jecxz
jns
jg
inc
mov
pop
aaa
pushf
and
cltd
jno
and
sub
cmp
fldcw
jp
cmp
adc
mov
push
lods
out
iret
into
mov
test
outsb
ret
push
lods
repz
inc
or
mov
inc
pop
xlat
push
xor
repnz
test
jle
out
or
fwait
jns
cmpl
jge
cmpsb
inc
mov
lcall
daa
loope
loop
adc
or
or
dec
fwait
push
int3
sub
inc
stos
cmpl
jl
push
push
push
popf
jno
lret
jg
loope
repnz
mov
ljmp
cltd
nop
mov
mov
cmp
std
repz
mov
xor
adc
sbb
loop
dec
shlb
dec
loope
lret
mov
int
inc
fisttpll
out
out
popa
xchg
inc
xor
hlt
mov
clc
cmc
inc
mov
jne
xor
repz
in
repnz
scas
cmp
cmp
testl
mov
jge
stos
rcrl
and
lods
jp
sti
cmp
filds
lea
push
adc
lret
cmp
sti
jge
push
push
jno
popf
ret
int
popa
mov
inc
movsb
aaa
add
add
xchg
and
add
dec
push
add
mov
pushf
enter
lcall
lods
mov
push
push
push
std
jl
mov
push
into
mov
mov
and
mov
dec
aaa
lock
stos
add
leave
dec
dec
sub
pop
xchg
or
ficoml
add
outsl
popa
test
xchg
fsubr
mov
cmpl
cmp
stos
dec
fldz
jmp
andb
jbe
inc
imul
mov
xchg
dec
inc
loopne
icebp
outsb
mov
aad
add
inc
lret
mov
vmwrite
or
and
xor
xchg
or
push
push
mov
mov
dec
addr16
inc
dec
jns
jo
lahf
mov
dec
fsubrl
mov
lea
xchg
shrl
jge
inc
xor
jecxz
jp
inc
ret
sbb
out
sub
idiv
dec
add
jae
fwait
xchg
xor
fs
push
mov
jo
or
fiadds
ljmp
or
xchg
xchg
outsl
lock
fcoml
incl
pop
push
lcall
and
xchg
jp
mov
push
xorb
xchg
ret
ss
rorb
inc
call
jae
cmp
ja
sub
andl
sub
imull
outsl
sub
and
mov
aaa
ds
in
cmp
dec
pop
mov
into
sub
sbb
das
mov
xchg
divb
inc
lret
in
mov
aaa
sub
pop
cmpb
cmp
cmp
pop
int
push
ficoml
lods
cmp
mov
scas
cld
xchg
scas
dec
mov
sub
or
xlat
lcall
out
sub
scas
out
mov
jbe
cmp
repnz
add
xchg
sbb
dec
cmp
and
enter
pop
pusha
in
rorl
ja
inc
popa
push
ja
js
loopne
mov
out
repz
mov
test
add
stc
cmp
loopnew
sbb
fwait
xchg
add
inc
data16
jge
xor
out
adc
data16
popa
pop
rolb
adc
enter
dec
or
jg
movhps
mov
shll
call
es
popa
cmp
repnz
data16
popf
xor
lods
add
out
jns
ljmp
sar
push
mov
insl
lea
ds
mov
rcl
fldenv
into
imul
cltd
cmp
ds
adc
lret
test
jo
cli
fucom
mov
icebp
lea
add
push
stos
sbb
lret
mov
jne
sbb
pop
inc
shll
mov
xor
fisttpl
cmp
popl
mov
xor
push
ss
push
adc
shrl
cltd
data16
push
cld
ja
add
xor
xchg
cmp
scas
cmp
jns
sub
push
enter
in
xor
in
iret
loopne
ljmp
insl
mov
shrb
addl
or
hlt
adc
loope
loopne
push
fdivp
rcrb
sub
xchg
add
cli
clc
test
movb
test
aad
mov
jp
daa
pop
sbb
inc
lret
inc
sbb
orb
sub
xor
sahf
repz
xor
cs
push
xchg
add
add
mov
and
repnz
fildl
std
or
push
repnz
ds
mov
jae
mov
cmp
outsl
call
pop
ffree
mov
pop
ljmp
xor
sbb
xor
adc
push
add
test
inc
jb
pop
push
jmp
sbb
push
ds
and
scas
fwait
daa
out
inc
les
es
enter
mov
inc
pusha
addl
cmpsb
mov
std
hlt
xchg
adc
mov
loopne
xor
pop
pushf
or
negb
push
mov
sub
or
push
adc
out
pop
and
mov
sbb
data16
add
inc
cmc
rcrl
xchg
loope
call
push
in
push
jge
cmp
push
push
int3
fwait
xchg
jecxz
idivb
je
mov
rolb
jp
pop
or
mov
loop
stos
pop
add
mov
push
sbb
or
ja
outsb
xchg
and
sarb
repnz
mov
addr16
push
cmc
xor
pop
push
and
xor
jecxz
dec
movsb
xor
mov
scas
inc
jmp
push
lahf
pushaw
mov
fmulp
shrl
add
mov
cmp
cli
lds
cli
lahf
inc
into
xchg
sti
sub
or
fstl
push
imul
rorb
mov
xchg
arpl
gs
pop
clc
dec
lods
mov
out
cwtl
test
cmpsb
je
and
pop
add
mov
sub
ja
lods
cmpb
mov
lods
jg
das
mov
jl
pop
add
lahf
adc
test
fistl
push
test
mov
loopne
icebp
lea
push
sub
mov
jnp
in
jmp
jmp
pop
test
mov
xchg
cs
clc
bound
or
pop
dec
dec
xchg
cltd
outsb
inc
testb
add
cmp
mov
sub
inc
mov
or
mov
idivl
inc
cmc
es
inc
fadds
pop
shl
popa
js
out
pop
leave
inc
pop
fnstcw
xchg
mov
into
push
sbb
inc
bound
mov
or
pop
pop
lods
fucomi
leave
ret
inc
in
inc
add
fldt
inc
mov
in
inc
xor
pop
mov
iret
fnsave
leave
adc
add
addl
jp
xchg
dec
add
loope
push
jae
ficomps
lds
mov
in
imul
inc
les
fnsave
mov
adc
idivb
fstl
test
jmp
xchg
out
adc
lods
xchg
inc
lods
push
xchg
push
and
jmp
dec
mov
fxch
mov
sub
xor
fwait
call
xchg
push
sti
sbb
cmp
lods
xor
mov
idivb
fcoms
orb
xor
push
adc
xchg
mov
jp
lret
adc
sar
pop
push
ljmp
mov
sbb
jne
into
pop
sar
ja
lock
xchg
xchg
cmp
out
mov
in
fsts
aaa
arpl
sub
es
scas
rcrl
or
jg
mov
pop
and
mov
je,pn
rorb
data16
mov
sbb
mov
cmp
ret
adc
inc
mov
roll
fdivs
cltd
jbe
mov
int
clc
fwait
xor
cli
dec
fcmovnu
in
pop
aas
xor
imul
cmpl
adc
imul
push
sti
jne
mov
mov
das
mov
popf
fs
adc
in
push
mov
icebp
sub
imulb
inc
push
mov
inc
xchg
push
dec
icebp
xchg
popl
outsb
shrl
pop
push
stc
fwait
sbb
ret
push
and
pop
sub
or
mov
cld
jg
add
and
iret
dec
fwait
roll
pop
sbb
push
out
mov
xchg
into
xchg
stos
mov
and
mov
mov
and
int3
ds
dec
dec
sub
cmp
dec
sub
jne
or
mov
rcll
fimull
and
out
addr16
outsl
xchg
in
popf
out
mov
jae
movsl
bound
outsl
push
ja
mov
bound
mov
insl
xrelease
cmpsb
add
sub
pop
push
test
je
mov
fwait
js
nop
or
adc
fmulp
and
sub
xor
mov
fidivrs
dec
xlat
jne
push
divl
adc
scas
pop
es
mov
and
lcall
jo
daa
cmp
push
nop
fxch
adc
and
xchg
and
jno
adc
jbe
repnz
cwtl
pop
scas
inc
adc
pop
cmp
and
adc
push
add
sahf
nop
sub
push
jb
jbe
outsb
loop
or
push
dec
add
mov
outsl
test
out
push
aad
or
out
push
sub
fs
lock
dec
sub
mov
jbe
mov
xor
rcrl
adc
cmc
sub
ja
pop
cld
ja
mov
int
inc
jge
daa
adc
mov
pop
mov
test
iret
out
xchg
and
cmp
mov
add
jns
mov
cli
add
lret
les
gs
jmp
xlat
jnp
jnp
lcall
xor
data16
mov
xor
jae
push
mov
cli
sub
push
inc
repz
cli
scas
lret
fstpl
lock
out
fimull
cmp
xor
movsb
or
andb
mov
sbb
mov
loope
push
xor
dec
int3
inc
clc
add
xor
inc
mov
shrb
sarb
scas
clc
cmp
test
adc
rcrl
jo
xor
mov
out
dec
mov
push
or
sbb
outsl
cmpsb
xchg
bnd
popa
sub
pop
fcomp
fsubl
aam
sub
inc
dec
insl
sbb
stos
int3
filds
mov
inc
pop
jmp
dec
bound
imul
sbb
fstps
dec
pushf
movsl
in
jmp
ret
mov
cltd
xor
and
inc
fbstp
sbbb
shlb
shrb
dec
pop
stc
test
or
xor
mov
ffreep
dec
sbb
test
mov
rcr
jns
sbb
test
jle
sbbl
and
fists
xchg
mul
dec
shlb
aaa
or
es
mov
cld
mov
sub
cmp
jbe
push
jge
cwtl
sub
pushf
sub
jae
inc
lds
add
xor
out
lods
push
pop
call
pop
int3
shlb
mov
test
stc
pop
mov
punpckhbw
sub
leave
inc
ret
sub
sbb
mov
push
daa
mov
xchg
add
or
das
scas
popa
scas
leave
insb
inc
pop
inc
push
cli
mov
xchg
inc
mov
mov
pop
xor
sar
xor
inc
mov
cmp
pushf
jmp
jne
push
sti
mov
imul
loopne
std
sbb
and
jg
inc
push
in
scas
pushf
cmp
mov
push
stos
push
jns
push
popf
jmp
dec
fs
sti
enter
nop
add
ficompl
push
cmp
inc
xchg
pop
ds
sbb
or
faddl
movsl
pop
std
jns
push
mov
cmpsb
adc
shlw
ret
mov
out
out
pop
lahf
cs
and
mov
lods
ja
fcoms
arpl
dec
out
leave
iret
lods
fidivl
movsb
lcall
xchg
adcb
enter
mov
loop
cmpsl
dec
inc
mov
xchg
cmp
aaa
xchg
repnz
inc
je
int3
outsb
mov
push
mov
test
inc
sub
out
test
addr16
mov
int
cmp
push
sub
xor
xchg
pop
out
or
inc
call
mov
hlt
push
cmp
push
inc
cmp
aas
lock
push
mov
and
dec
jb
push
rorl
push
add
and
das
mov
dec
repnz
lock
icebp
mov
scas
enter
vmwrite
and
xor
mov
leave
fcoml
out
aad
push
shrl
adc
sahf
pop
pop
cmp
mov
jge
fbstp
or
bound
pop
cwtl
cmpsl
push
aad
mov
mov
dec
mov
mov
add
pop
mov
insb
cli
iret
push
pop
or
cmp
lcall
aas
shlb
push
jbe
testl
inc
stos
scas
and
daa
jbe
xchg
cmc
sti
pop
repnz
pop
mov
xor
sti
sub
mov
adc
pushf
xor
mov
mov
imull
sub
mov
and
jb
jle
push
mov
imul
mov
mov
and
adc
jle
lock
fmull
rolb
jecxz
lret
adcb
mul
push
mov
mov
arpl
pop
shlb
dec
adc
sbb
adc
fs
imul
pop
mov
pop
push
nop
xchg
popf
adc
pop
xor
push
shlb
das
mov
dec
add
or
ds
sub
in
out
sub
dec
daa
cmp
test
sar
sub
sarb
pop
repz
mov
fistpll
mov
in
mov
sbb
dec
inc
jg
in
mov
adc
insb
inc
inc
push
pop
sarb
adc
push
xlat
inc
leave
pop
cltd
mov
mov
frstor
push
jns
scas
and
cwtl
out
pop
test
popf
fnsave
insb
inc
mov
sbb
inc
xor
pop
test
add
lds
frstor
xchg
and
xor
inc
ficomps
or
out
sbb
or
fistpll
push
lds
adc
sbbb
adc
data16
cmc
or
fsubp
jecxz
ljmp
pop
int3
push
stos
inc
dec
rolb
js
cmp
loope
inc
imul
out
mov
jge
fldl
xor
mov
lods
cmpsl
dec
js
inc
std
or
or
push
jno
repnz
pop
or
cli
jne
std
inc
jmp
sahf
lods
mov
mov
dec
sahf
push
mov
stos
outsb
mov
lret
mov
pop
sbb
lods
loope
arpl
lods
cltd
cmpsb
or
xchg
scas
cwtl
outsl
cmp
pusha
bsf
pop
push
ds
mov
xchg
adc
cli
xchg
test
gs
clc
jmp
jmp
shl
mov
xor
and
add
pop
dec
out
loope
cmp
xchg
dec
mov
add
subl
outsl
test
xchg
xlat
lods
leave
lods
jb
sahf
test
sub
adc
mov
mov
decb
push
sub
shrb
jle
push
push
rclb
mov
lods
sub
mov
ds
movsl
iret
or
idivl
mov
stos
push
or
pop
inc
or
lcall
and
and
sbb
aas
sti
or
ja
jle
adc
jae
mov
jp
lds
cwtl
xchg
movsb
imul
int
popf
and
lods
jl
pop
and
mov
out
xor
mov
xor
dec
push
fldenv
orl
lret
popa
loopne
xchg
mov
and
xor
pop
xor
mov
ja
pop
enter
cmp
sub
stc
sub
pop
loopne
mov
stc
out
or
xlat
mov
xlat
fdivr
je
and
vcvtsi2ssl
sub
lods
cmp
fstps
testb
push
int
iret
jecxz
cmp
dec
negb
adc
cmc
mov
xor
aad
adc
jae
push
stc
nop
stos
je
mov
inc
orl
cmpsl
mov
out
fdivrs
xlat
sbb
lahf
mov
and
fcmovb
sub
xchg
aaa
xlat
cmp
pop
xor
cwtl
pop
sbb
call
cmpsl
jns
outsl
xor
adcl
notl
mov
cmp
ja
in
loope
mov
loop
xor
push
clc
add
mov
int3
mov
fadds
lret
jbe
bound
imul
rorb
inc
inc
or
push
lock
jle
out
imul
loopne
jnp
adc
xor
aad
bound
lahf
mov
add
mov
add
push
in
push
loop
aam
sbb
out
add
jne
inc
stos
dec
dec
scas
stc
mov
inc
cltd
popf
cmovs
test
sbb
xchg
sub
push
mov
xor
dec
andl
sti
inc
aad
pop
cmp
add
jge
inc
pop
popf
mov
iret
jo
fs
movl
adc
push
push
popa
pop
loope
in
pushl
repnz
mov
xor
scas
cmpsl
pop
push
decb
lcall
sti
in
mov
cmpsb
mov
mov
mov
jne
js
jo
loop
xchg
cmp
out
xchg
adc
push
in
dec
inc
mov
mov
mov
xor
je
mov
jecxz
cmp
add
xor
xchg
inc
jo
clc
fists
fs
xor
pop
xor
adc
cmc
enterw
addb
jmp
xor
pusha
push
adc
cmp
or
std
scas
or
nop
sub
fprem1
je
loop
insb
jl
push
jo
outsl
push
aaa
icebp
xchg
lcall
lods
mov
mov
mov
sub
movsl
int
mov
xor
int
cmp
test
cmc
cmc
mov
xchg
xor
fstp
ss
xchg
sarl
arpl
push
inc
and
adc
decb
mov
aad
sbb
lcall
or
pop
call
add
cmpsl
jmp
or
jno
xchg
imul
lcall
dec
xor
mov
imul
icebp
je
sarb
mov
and
mov
lahf
mov
movb
flds
fs
out
test
inc
push
xchg
mov
bound
out
push
cld
cmpsl
xchg
pop
jae
adc
aam
and
inc
mov
push
cmp
gs
mov
xchg
mov
and
dec
inc
ret
nop
lret
in
clc
push
pop
jne
mov
add
mov
in
fidivl
bound
nop
push
mov
jecxz
das
in
sub
cmp
jae
dec
std
mov
ds
pop
xchg
fsubrs
xor
lret
scas
ja
xchg
repnz
push
imul
xor
inc
gs
cld
adc
lret
mov
xchg
pop
rorb
in
push
cmp
mov
mov
push
mov
push
or
lock
jg
pop
aaa
lods
cmp
xor
lcall
stos
popa
aad
adc
and
cmp
adc
repnz
cld
pop
inc
out
dec
out
jmp
xchg
fistl
mov
xchg
or
lret
nop
xchg
mov
sbb
mov
xor
jno
add
mov
dec
aad
mov
mov
mov
pushf
test
hlt
push
in
cmpl
xchg
std
pop
xor
sub
jge
xchg
fsubl
test
pop
stc
push
dec
mov
dec
xchg
pop
gs
movsb
addb
lea
sub
testl
sub
repnz
shll
int3
jle
pop
scas
mov
repnz
daa
sarb
cs
and
cmp
jns
sub
out
int
popf
out
pushf
pop
dec
push
mov
daa
mov
js
rclb
incl
call
enter
fsubrl
movsl
and
into
aad
jge
fcoml
aad
jge
jb
pop
mov
iret
imul
pop
lahf
bound
and
mov
inc
scas
scas
add
and
jno
negb
stc
call
imul
xor
xchg
test
stos
out
pshufw
stc
popf
out
adc
mov
mov
pop
js
neg
push
in
push
frndint
sbb
and
nop
push
pop
aam
mov
inc
xorl
pushl
xchg
jmp
inc
enter
xchg
ret
pusha
pop
xchg
je
sub
fstpt
jg
push
out
out
pop
dec
lcall
mov
adc
inc
or
repz
stos
sbb
dec
push
test
xchg
sub
sub
mov
fisttps
xor
int
fmull
adc
mov
ret
call
pop
sub
cmp
pop
cmp
dec
jge
or
leave
xor
add
inc
into
push
add
das
pop
add
mov
stc
jl
sarb
mov
sbb
mov
jg
aaa
lock
das
mov
movsl
mov
push
mov
data16
addr16
mov
or
in
pop
mov
out
pop
xchg
mov
push
repnz
push
lods
insb
rclb
movsl
das
jb
inc
pop
in
and
mov
push
das
outsl
lds
cmp
call
call
repnz
adc
gs
sub
sub
orl
sbb
ja
mov
imulb
stc
pop
ret
std
or
bound
ljmp
pop
xchg
incl
scas
sub
sbb
enter
roll
cmpsl
xor
mov
mov
push
int
ret
or
cmc
mov
inc
enter
lds
or
mov
repz
mov
mov
mov
shll
push
sub
xchg
jle
xchg
test
push
adc
int3
xor
repnz
out
xor
lret
mov
in
pop
cmpb
cmp
popa
popa
clc
mov
lret
shll
fstps
sub
jge
dec
int
dec
mov
fildll
ret
mov
mov
jnp
call
add
mov
mov
int3
xlat
or
xchg
leave
test
mov
adc
insl
mov
add
int3
dec
dec
dec
add
add
xchg
insl
out
inc
out
clc
insl
out
jne
negl
add
fldenv
or
les
lock
cmpsl
cmp
das
fimull
cltd
and
ljmp
xchg
jge
dec
popa
or
and
push
cmc
mov
xor
in
pop
out
je
xor
xchg
pop
frstor
jmp
mov
dec
pop
inc
xor
add
in
nop
js
mov
je
jo
sbb
xchg
test
imul
adc
sub
xchg
js
aam
lods
xchg
outsb
sahf
in
in
out
add
dec
dec
lods
pushf
sti
loop
inc
jo
mov
stc
stos
movsb
jp
dec
lods
push
cmp
jle
fistpll
scas
mov
popf
jne
or
daa
jle
lds
popfw
loopne
mov
pop
adc
fldt
push
nop
in
stos
lods
and
xchg
mov
test
imul
mov
rclb
mov
push
mov
mov
mov
gs
outsl
jp
or
rol
fisttpll
xchg
fmull
cmp
ja
push
pop
pusha
mov
imul
loope
mov
ret
push
scas
jg
jmp
sbb
jp
sbb
scas
ljmp
mov
subb
data16
adc
cli
fcoml
inc
fsubrl
pop
addr16
dec
icebp
fisttps
push
push
cwtl
jbe
jl
lret
shlb
ret
fs
movsl
imul
jg
lods
adc
sbb
insb
int
pop
ret
imul
sbb
leave
push
mov
mov
jnp
addr16
sbb
cwtl
dec
add
xchg
push
mov
ret
xchg
pop
mov
push
outsb
js
out
mov
add
les
bound
repz
push
add
jl
nop
cmovae
dec
push
cmp
cmp
das
adc
cmpb
repnz
rolb
xchg
sbb
aas
push
push
xchg
bound
ljmp
loop
sbb
jecxz
in
cmp
pop
ss
sbb
test
cmp
adc
inc
xchg
lods
adc
pop
cmp
gs
sub
add
pop
push
mov
xchg
adc
add
pop
jae
es
mov
cld
cmpsb
cmp
cmpsl
lds
push
insb
dec
push
jae
imul
sbbl
inc
and
sub
bnd
push
fs
pop
adc
test
sub
dec
or
add
scas
sahf
dec
in
shll
and
and
lret
mov
push
mov
mov
xchg
vmwrite
add
xor
int
scas
and
sahf
mov
sti
stc
movsb
push
cmp
xchg
xchg
jne
outsb
in
mov
add
cmp
sti
push
sub
test
sub
arpl
ficompl
mov
cmp
xchg
mov
jmp
sti
sbb
mov
push
stos
inc
in
hlt
add
xchg
inc
test
mulb
test
ja
inc
rcll
fnsave
and
fadd
pushl
and
inc
outsl
mov
mov
push
mov
mov
mov
mov
imul
jmp
cmp
sarl
inc
jo
and
and
cwtl
fdivrs
jle
scas
xchg
cmp
lret
stc
popf
cmp
loop
pop
ret
gs
jno
inc
or
imul
cltd
and
push
cltd
addr16
dec
popa
mov
aas
push
push
out
mov
mov
xchg
sahf
test
add
adc
inc
dec
aad
scas
jle
jae
mov
mov
push
dec
lret
jo
inc
sub
sub
xchg
fildl
mov
jp
hlt
pop
es
repnz
pop
loope
push
test
mov
and
push
jg
test
xchg
das
test
mov
inc
mov
movsb
jmp
cmp
add
daa
std
pusha
iret
xorb
mov
mulb
and
push
cmp
imul
lcall
dec
and
xor
mov
pop
lret
icebp
bound
xor
push
jo
outsb
adc
sub
pop
ds
cmp
out
inc
fmulp
imul
add
jle
dec
mov
iret
pop
out
cmpsl
jbe
mov
xor
cmp
mov
jne
repnz
dec
fiadds
add
or
lret
imulb
adc
adc
int
adc
mov
or
call
add
add
lret
add
or
addr16
mov
xchg
push
jmp
data16
mov
repnz
push
roll
sbb
stos
pop
mov
insb
xchg
mov
pusha
mov
xor
jb
mov
rolb
lcall
push
imul
test
sub
fnstsw
push
js
aam
lahf
jo
cltd
or
and
ds
push
dec
cs
aaa
outsl
or
lcall
xchg
jg
rdpmc
mov
adc
xor
fidivs
jmp
jle
nop
into
stc
bound
pop
and
lods
add
sbb
sub
pop
cmp
inc
add
xchg
cmc
jb
xor
insb
add
xchg
addr16
cmp
ror
loope
cli
xchg
out
leave
inc
push
ds
push
les
lret
pop
popa
hlt
aaa
jmp
jae
xchg
and
lock
sub
out
fidivs
out
imul
pushf
arpl
xchg
andl
or
popa
sbb
jno
aas
xchg
jmp
mov
dec
lds
orb
pop
lds
sti
rcl
lods
scas
and
adc
xchg
dec
push
adc
mov
sub
xor
sbb
mov
cltd
data16
adc
mov
popl
cmp
cs
mov
xchg
movsb
mov
push
sub
iret
leave
jnp
adc
nop
adc
pushl
std
pop
cld
negb
sbb
roll
inc
jne
pop
dec
mov
aam
xchg
add
out
loopne
fsubrl
xor
in
fisubl
stc
test
pop
fistpl
dec
cmp
mov
not
xor
daa
dec
mov
push
push
and
xchg
lock
xchg
xlat
push
clc
out
jl
test
push
push
enter
fmull
and
dec
pop
mov
int
lret
stc
or
jmp
cltd
or
pop
sub
lahf
jle
fisttpl
push
adc
inc
push
mov
mov
cmp
dec
faddl
add
cwtl
cmc
in
stos
sbb
cmp
and
xor
pop
cmp
jle
stc
mov
divl
daa
dec
cltd
int3
push
pop
pop
lcall
mov
insl
or
cmpsl
js
mov
jle
xchg
loopne
out
icebp
divl
hlt
adc
sbb
call
dec
cmp
mov
rorb
bound
inc
cmovnp
and
jne
xor
ss
jecxz
enter
jecxz
dec
sub
mov
iret
adc
loopne
jmp
mov
movsb
ret
imul
daa
orb
aad
ljmp
cmpsb
stc
mov
mov
add
cmpsb
jg
out
sub
jl
add
xchg
jbe
ja
in
mov
jg
repz
mov
mov
imul
shll
repnz
pop
int
test
scas
out
loope
xlat
adc
cmpb
aad
push
xchg
in
bound
push
scas
adc
mov
jae
fisttpll
enter
inc
cmpsb
cld
mov
dec
lea
cmpsl
xor
imul
cmc
lds
jp
ljmp
dec
aam
push
jmp
inc
cmp
idivl
rcrb
arpl
aas
dec
cmpsl
push
loope
inc
test
jle
push
adc
adc
mov
and
push
addr16
repz
call
std
push
lahf
outsl
nop
sub
inc
sbb
fimuls
sahf
daa
jecxz
test
xor
mov
dec
out
dec
fidivl
mov
mov
mov
clts
push
jno
jecxz
popf
push
stos
stos
jo
push
out
mov
imul
sarb
cmpsl
test
mov
int3
loop
jmp
test
orl
ret
xor
mov
xor
jnp
sbb
cmp
push
inc
xor
outsb
rcrb
hlt
lret
test
cmp
ret
push
iret
mov
cmpsl
jg
inc
daa
dec
cmp
je
pop
or
aam
xor
pop
adc
dec
dec
stc
inc
ss
movl
arpl
icebp
pop
xchg
adc
push
cltd
lods
pop
mov
jae
jbe
push
sarl
xor
dec
repz
xor
xor
or
shll
xchg
add
sub
xchg
cmp
sbb
inc
cmp
inc
fnsave
sub
and
mov
add
pop
aaa
iret
cltd
jno
cmpsl
in
scas
or
jae
fs
negb
test
dec
hlt
push
fnstsw
lock
and
cmp
ds
lods
mov
jb
xor
sub
lods
outsb
lds
xchg
dec
je
js
fcmovne
pop
call
or
sub
popf
mov
mov
jle
add
data16
inc
inc
push
pop
push
mov
fisttpll
add
dec
pop
dec
adc
data16
add
sub
sub
imul
mov
dec
out
or
mov
clc
add
mov
jmp
dec
inc
xchg
pop
fs
popa
mov
outsb
jmp
dec
decb
lods
testb
out
loope
mov
in
enter
mov
inc
xchg
add
cmp
in
jbe
fs
imul
cmp
xchg
cmpsl
mov
jae
clc
popa
repnz
cli
mov
bound
inc
sub
aad
je
add
mov
ss
jp
push
mov
testb
mov
pop
divl
push
inc
sub
hlt
enter
xchg
inc
inc
lods
cmp
cltd
das
mov
or
xchg
ds
fwait
cmpsl
mov
adc
je
and
leave
stos
nop
arpl
lcall
ja
daa
aad
mov
mov
jne
fs
aas
stc
jg
dec
mov
xor
rcrb
or
xor
xor
gs
je
sti
std
stos
adc
test
sbb
jne
pushf
pop
aas
sub
jmp
jmp
and
fs
and
cmp
sbb
dec
push
push
cmp
xlat
test
pop
cmp
ljmp
mov
imul
jmp
adc
outsl
push
xchg
xor
add
and
test
jp
mov
xchg
pushf
inc
cli
stos
rcl
dec
sahf
adc
mov
cwtl
or
clc
jp
sub
mov
pop
or
adc
shr
or
out
sbb
and
subl
push
inc
mov
jl
lret
mov
clc
xchg
stos
cld
or
add
scas
int
shl
mov
or
or
movsl
mov
pop
lds
in
mov
jmp
out
adc
pop
ficoml
popl
addl
dec
xlat
aas
inc
pop
xchg
mov
loope
pop
stos
aam
sub
fwait
cmp
outsl
cld
sahf
mov
repz
xchg
mov
or
xchg
cmp
hlt
divl
jno
mov
lahf
popl
int3
sub
out
or
movsb
dec
iret
out
popa
movsl
aaa
mov
push
lock
mov
inc
jnp
mov
sub
mov
and
in
out
adc
loopne
lock
adc
int3
mov
inc
jl
mov
mov
ficoms
lret
jmp
jbe
or
pop
ss
sub
xchg
insl
inc
sub
fistl
filds
mov
pop
mov
imul
popl
sub
popf
inc
inc
ret
pusha
aam
add
push
push
pop
in
fstpl
xor
push
test
add
pop
dec
cs
nop
loope
out
mov
push
mov
add
jecxz
gs
dec
je
mov
lahf
cmp
mov
and
mov
inc
cmp
leave
lea
cmpsb
xchg
xchg
orl
xor
sbb
cmc
cmp
push
nop
mov
movsl
adc
dec
mov
clc
mov
shlb
loope
pushf
or
mov
imul
lret
popa
idivl
das
bound
xchg
push
xor
lret
sub
sbb
rcll
outsl
cmp
rorb
cmp
je
adc
mov
hlt
outsb
sti
aam
in
fcomp
pop
mov
mov
scas
pop
imul
lret
lods
dec
and
enter
xchg
jg
mov
cmp
loope
rolb
push
inc
add
loop
pop
pop
or
outsb
or
faddl
mov
lret
aam
adc
mov
inc
push
inc
pop
adc
jo
addb
cmc
sbb
ss
fnsave
mov
je
mov
push
cli
pop
test
jo
mov
leave
add
sbb
shll
cmp
xchg
mov
dec
shrl
loop
or
push
fwait
jns
cwtl
repz
sub
mov
xchg
inc
xchg
dec
mov
sahf
push
and
and
arpl
mov
sahf
je
repnz
push
push
repnz
paddq
or
fwait
arpl
sub
sub
sbbb
mov
rorb
xor
push
sarb
cld
mov
mov
das
dec
mov
loopne
nop
push
call
cmp
scas
mov
push
and
mov
testl
inc
adcl
test
imul
mov
add
adc
data16
pop
sbb
add
pop
dec
lock
sbb
loopne
push
mov
cmp
movsb
mov
mov
cli
sbb
push
adc
stc
push
icebp
nop
sub
jg
xchg
sub
mov
add
inc
mov
pop
sub
adc
xor
and
imul
mov
enter
mov
and
xchg
cli
stos
insb
pop
pop
add
add
das
lahf
sbb
pop
cmp
adc
mov
or
cmp
xchg
in
adc
mov
xchg
lret
popf
inc
dec
lcall
xchg
pop
push
and
movsb
adc
push
inc
cmp
push
jge
sbb
xor
bound
xchg
fldcw
push
lods
repz
std
sub
dec
lods
fs
and
out
cmp
mov
addb
jb
xchg
mov
flds
and
mov
mov
lret
xor
pop
mov
pop
inc
xchg
popf
and
cmp
push
sbbb
pop
push
mov
std
je
xchg
xlat
add
aad
mov
push
incb
or
sbb
aad
into
in
repz
and
fildll
jp
inc
mov
adc
push
subb
out
jae
mov
mov
mov
or
outsl
inc
xchg
and
pop
pop
iret
fdivl
or
sub
popa
pop
lock
mov
mov
cmc
mov
jns
rolb
and
sahf
nop
cltd
pop
ret
bndldx
cmp
aad
outsl
pop
cli
push
arpl
popa
mov
mov
mov
dec
loope
xor
rcll
cmpsb
jae
pop
xor
sarl
push
leave
movsb
pop
repz
repz
sbb
movsl
dec
cmp
ret
outsl
fcomps
lret
into
xor
xchg
cmp
and
icebp
sbb
ss
sub
insb
jae
mov
or
mov
jg
xor
mov
out
xor
or
and
sub
xchg
movsb
cmc
cmp
in
add
aas
xchg
jl
pop
mov
pop
sbbl
mov
pushf
adcl
lods
inc
insl
nop
ss
ret
inc
mov
aaa
sub
cmp
mov
sahf
jl
movsl
sub
ss
cmp
mov
sbb
xor
dec
or
dec
mov
jecxz
fdecstp
in
jne
insl
sub
cmp
mov
in
je
jnp
aad
pop
xor
loopne
mov
push
inc
mov
mov
imul
inc
or
xor
push
mov
or
xor
fists
inc
mov
lret
mov
call
stos
jle
movsl
in
xchg
push
mov
dec
inc
lahf
xor
sbb
test
sbb
inc
nop
mov
lret
mov
xchg
jnp
sbb
jae
aad
es
loopne
rcrl
data16
sub
xor
mov
xchg
cs
andb
mov
sbb
test
js
sbb
outsb
fwait
mov
xor
negl
test
rorl
ljmp
sub
xor
test
into
or
movsb
sbb
mov
nop
in
jae
std
setns
add
mov
jg
xor
scas
mov
mov
das
push
xchg
cs
mov
fstl
rclb
mov
jbe
rorb
lret
mov
push
daa
fdivl
pushf
outsl
push
popf
aad
inc
ljmp
loope
add
pop
xor
mov
insl
jno
or
fstpt
push
cmp
cli
aad
fbld
sub
insl
mov
dec
push
arpl
pop
mov
test
aam
icebp
jo
inc
cmp
pop
push
mov
popa
xchg
adc
mov
and
add
pop
ljmp
inc
out
test
rcrb
xor
lds
mov
into
sbb
out
lret
jp
add
nop
lds
imull
adcl
outsl
push
testb
shl
mov
mov
mov
push
xor
inc
rcrb
cmp
es
pop
pop
pop
cs
popa
xor
orl
mov
aam
cmp
add
jge
push
test
mov
xor
inc
or
mov
fsub
cld
cwtl
repz
xchg
ret
loope
mov
ss
mov
icebp
add
mov
and
push
mov
sub
lret
pop
fstpt
lods
imul
xor
lcall
movb
push
ret
push
inc
and
cmp
add
je
jle
pop
xchg
and
in
adc
pop
mov
pop
xchg
adc
and
dec
fwait
sub
jb
xor
gs
in
pop
and
add
xchg
fisubrs
rcrl
adc
fimull
jae
jg
jge
outsb
push
mov
or
and
add
and
dec
aam
or
push
imul
sub
push
mov
mov
push
faddl
movsl
shlb
push
jmp
loopne
and
push
adc
mov
and
pop
jae
flds
mov
gs
lea
loopne
pop
xor
xor
sbb
lcall
mov
dec
fwait
popa
sarl
mov
inc
push
sub
sub
jae
popa
lods
xchg
xchg
cld
jle
pop
ret
popf
mov
enter
push
cmp
mov
cmp
std
aad
mov
jno
ljmp
cmc
dec
push
add
and
inc
xlat
cmc
and
xor
jnp
data16
inc
mov
leave
inc
xchg
add
mov
or
inc
lcall
xor
sub
xor
mov
hlt
popa
arpl
shlb
out
push
fcmovu
nop
jp
sbb
xlat
push
or
lahf
cmp
test
and
in
mov
mov
ja
xchg
add
fcmovnbe
fcom
sbb
ja
ss
push
bswap
mov
mov
outsb
shlb
or
push
or
nop
or
lock
pop
xor
and
idivb
popf
popf
jne
imul
mov
outsl
push
xchg
push
sbb
pop
xchg
jge
leave
cs
imul
jns
mov
pop
cli
xchg
or
jns
and
xchg
lea
sbb
bound
sbb
cmp
fnstcw
notb
mov
push
fmuls
inc
hlt
xchg
xchg
or
push
adc
lds
xor
aaa
shll
in
push
pop
xchg
popf
mov
ficoml
xor
ja
mov
addr16
mov
shrl
mov
outsl
mov
fs
stc
mov
daa
cltd
ljmp
or
and
cmpl
push
xchg
je
cmpsl
mov
jmp
jns
cld
ret
aad
sbb
sub
lret
aas
and
sbb
cmc
cli
pop
xchg
rolb
fstpl
imul
bound
lock
xchg
mov
pop
scas
js
mul
add
push
aad
or
jns
xchg
mov
es
aam
sbb
mov
pop
mov
je
adc
xchg
sbb
xor
push
cmp
cmp
pop
pusha
ja
shll
sub
ret
fistps
test
or
jbe
mov
popa
add
je
std
pop
mov
into
jbe
or
jns
shrb
shll
mov
lret
popf
ja
xor
push
adc
mov
xchg
popa
popa
lods
repnz
push
es
mov
xchg
cmp
push
std
push
xorb
jo
jg
sub
test
movsb
sub
inc
dec
dec
push
pop
shrl
mov
sahf
pop
jae
or
outsl
adc
lods
push
push
sub
mov
call
cmp
pusha
and
mov
pop
or
inc
push
inc
addr16
gs
pop
daa
lock
stos
mov
out
daa
iret
in
xor
lods
adc
pop
stc
jnp
and
mov
leave
inc
jbe
dec
jmp
ljmp
inc
jp
sub
sub
push
mov
inc
mov
aas
inc
arpl
xchg
pop
dec
fiadds
xchg
std
cmp
xchg
insb
inc
addr16
xor
and
push
mov
ss
in
out
xchg
sbbb
dec
sub
stos
cld
pop
jbe
andl
fdiv
psubb
lahf
cmpsl
addr16
pushl
cmp
mov
fld
push
mov
shl
xlat
cmpsl
xor
pop
inc
rorl
bnd
fldt
or
ds
test
bound
mov
insl
icebp
sarl
sarl
push
es
push
push
mov
into
add
ja
shll
pop
mov
push
ss
xlat
cmc
sbb
jnp
rorb
mov
push
mov
fdivrl
jbe
fisubl
es
rcrb
andb
sbb
iret
jno
bound
shrb
mov
shll
pop
ret
sub
pop
cmp
cld
add
or
dec
shll
dec
notb
sbb
outsl
pop
mov
cwtl
js
push
mov
stc
mov
or
add
pshufw
and
cmp
pop
mov
and
loopne,pt
adc
mov
cmp
jno
sarb
pusha
inc
cltd
subl
fcmovne
and
ret
pop
adc
and
mov
popa
mov
dec
adc
push
shrl
fmulp
jp
sahf
adc
movsb
dec
out
nop
rorl
inc
fistpll
mov
lea
xchg
cmp
jp
cld
mov
dec
xchg
dec
jb
inc
xchg
add
lods
sti
es
pop
repnz
lret
cmp
jge
loope
push
xor
stc
rcrb
xor
repnz
jp
decl
mov
sbb
add
pop
data16
je
inc
sub
ljmp
dec
or
pop
fstps
ss
scas
mov
insb
fsts
xchg
mov
jnp
movsb
xor
sub
cmpsb
outsb
jbe
pop
adc
mov
arpl
adc
mov
cmpsb
pop
jle
and
dec
cmpsb
rol
add
inc
lret
inc
lcall
or
push
test
sub
or
jl,pt
test
loopne
scas
mov
test
pcmpeqw
sub
ret
insb
mov
rcll
outsl
xchg
ret
adc
lock
add
cltd
sbb
or
in
ret
adc
jmp
xor
ja
jb
std
cld
jl
sarb
iret
inc
int
mov
jmp
pop
xchg
sbb
outsl
xchg
sti
std
sbb
ljmp
xor
popf
pushf
andb
andl
jnp
jnp
repnz
jnp
int
mov
xlat
repz
data16
test
push
js
push
sbb
xchg
push
push
daa
fs
push
jns
fcompl
and
pop
mov
cltd
nop
mov
sbb
inc
out
add
pop
mov
lock
jns
rol
cs
mov
scas
dec
sub
push
popl
cs
lahf
dec
xchg
cmp
out
or
dec
add
adc
mov
mov
and
lret
out
inc
scas
lret
pop
adc
lods
dec
sbb
int3
clc
mov
shlb
dec
cmc
test
mov
ljmp
lods
inc
push
movsl
fs
mov
inc
xlat
mov
pop
clc
jl
sbbb
push
mov
pop
or
orl
cmp
rorl
sbb
fs
mov
scas
insl
shlb
mov
test
das
cmp
push
jae
push
adcl
mov
or
or
scas
pushf
cmp
mov
mov
push
xor
fdivr
das
jb
lods
int
aas
stc
inc
pop
aas
or
adc
or
shlb
pop
pop
arpl
mov
dec
push
jle
scas
daa
sahf
mov
lock
addb
fwait
shrb
roll
and
jne
cmpsb
xor
neg
dec
lret
cmpsb
enter
js
xlat
dec
jg
push
cmpsl
aad
rorl
pusha
jecxz
dec
in
mull
sub
push
jnp
adc
inc
fisubs
jp
mov
rolb
repz
push
mov
mov
out
shrb
js
xchg
mov
into
ja
mov
push
and
pop
fdivs
sub
mov
jae,pt
xlat
stos
nop
mov
dec
jne
sub
push
test
sbb
inc
lcall
lret
lcall
xor
pop
fimuls
mov
sub
aad
pop
mov
inc
jecxz
scas
mov
aaa
inc
mov
das
shlb
or
in
movl
xchg
add
mov
loope
jecxz
test
push
punpckhwd
cmpsl
pop
test
adc
add
fwait
lea
adc
scas
and
je
sahf
repz
scas
push
movsb
xchg
lock
enter
pop
and
mov
test
into
push
pop
cli
dec
imul
or
push
daa
mov
out
in
push
das
and
dec
test
stos
cli
in
jg
xchg
loope
add
sahf
loop
cmp
sbb
fwait
add
cs
in
out
jns
jecxz
rcll
mov
ficompl
fisttpl
sbb
push
inc
iret
push
or
repz
stc
fistps
fimull
mov
bound
scas
mov
inc
dec
sub
les
out
fdivrl
pop
sub
lret
jg
pop
subb
rcl
mov
outsl
pop
lock
arpl
sub
and
ret
pop
push
out
mov
dec
add
popa
xchg
in
jecxz
outsl
mov
mov
inc
pop
ret
in
lds
push
sbb
shlb
pop
push
mov
aad
add
mov
xchg
daa
sbb
jne
sbb
mov
sar
push
xchg
hlt
add
dec
gs
dec
inc
dec
out
and
cmpsb
aad
aam
lret
cmp
xor
push
pusha
mov
stc
adc
test
xlat
mov
mov
add
cltd
mov
push
xchg
scas
out
add
sahf
iret
mov
pusha
imul
pop
ficoml
and
inc
mov
dec
das
and
fwait
nop
add
inc
inc
push
stos
imul
lahf
aaa
jb
out
adc
xor
cmp
lcall
and
add
icebp
cwtl
fwait
stos
and
push
je
fidivs
adc
or
daa
mov
jmp
aad
push
out
mov
sbb
mov
fisubrl
fsubr
decl
lcall
sbb
mov
pop
jg
and
inc
inc
pop
dec
dec
mov
aaa
mov
dec
sbb
pop
stos
fstps
icebp
loopne
fbstp
cmp
cld
and
jmp
mov
sti
aad
or
pop
xchg
cli
stos
dec
or
loopne
sub
loop
imul
dec
bound
xchg
mov
cmp
movsl
inc
test
push
jbe
mov
mov
arpl
dec
xchg
mov
or
sbb
clc
out
push
pop
adc
inc
inc
shlb
inc
sub
and
xor
pop
sub
or
add
sub
push
xchg
lret
push
ja
push
dec
inc
mov
mov
aam
sbb
cmp
dec
clc
pop
mov
ret
adc
out
arpl
jg
mov
mov
add
mov
jecxz
aas
jp
lcall
out
loope
mov
cmc
cli
pop
mov
jecxz
ret
mov
subb
jg
popf
shrb
in
out
hlt
dec
mov
ja
sbb
xor
fstpt
push
imul
fucom
lcall
mov
pop
fst
adc
jnp
sub
test
or
jecxz
add
out
add
movsb
pushf
mov
and
out
in
sub
cmp
xchg
bswap
cld
and
push
sbb
lret
scas
push
mov
and
sbb
mov
clc
adc
push
cwtl
jns
xchg
sbb
ljmp
mull
repz
in
adc
aas
mov
lods
sbb
mov
outsb
iret
mov
outsl
pop
xchg
mov
sbb
sbb
gs
ja
movsl
jmp
pop
mov
xor
mov
xchg
jmp
outsl
pop
xorb
cmc
xchg
jo
and
enter
mov
mov
sti
out
and
pop
inc
inc
and
push
mov
cwtl
stos
inc
add
test
dec
cli
mov
mov
mov
mov
and
jne
mov
mov
cmp
aas
sbb
jl
mov
mov
sbb
and
dec
adc
push
dec
cltd
outsb
push
dec
mov
dec
inc
call
mov
sub
dec
fsubs
cmp
pushf
movsb
xchg
test
and
push
push
lock
scas
fiadds
movsl
mov
push
sub
dec
lods
lret
jae
jle
frstor
iret
popf
das
fisttpl
rclb
scas
adc
bound
lods
and
or
rorl
push
jecxz
jp
xchg
and
test
divb
aaa
jb
loopne
sbb
jg
inc
mov
cld
stos
lds
adc
push
mov
scas
jmp
cmpsb
cwtl
pop
sbb
mov
push
xor
inc
shrl
outsl
adc
and
xor
xchg
xchg
loopnew
sbb
shrl
mov
xor
fbld
nop
iret
out
outsb
roll
push
mov
or
addr16
push
adc
inc
repz
or
aad
add
dec
stos
rorb
mov
and
cld
scas
jle
cmp
add
pop
icebp
add
scas
shlb
add
jmp
push
aad
xchg
push
or
dec
or
in
xlat
pop
imul
mov
notb
inc
mov
sub
mov
push
out
int3
test
mov
sbb
dec
or
and
or
xchg
cmpl
mov
int3
out
imul
sbb
adc
int3
andb
rcrb
push
rorl
mov
and
jle
or
add
icebp
fdivrl
lods
aam
pop
adc
sub
jbe,pt
xlat
insl
and
push
int
cmp
or
jle
mov
addr16
movsl
std
iret
mov
sub
out
adc
mov
pusha
mov
setbe
jb
pop
or
sbb
or
fcmovb
mov
jno
repnz
dec
roll
push
xor
ret
das
jne
mov
jns
pop
push
mov
dec
out
hlt
pop
xor
ror
dec
jle
pushf
add
std
outsl
fdivs
jne
loopne
cmp
ror
repnz
adc
addl
test
negb
mov
push
add
frstor
stc
mov
xor
adc
mov
mov
pop
clc
test
stos
stos
fsts
jmp
adc
dec
repnz
xchg
ror
ret
out
and
mov
xchg
scas
jb
sub
cmpsb
daa
lds
je
xor
mov
cmpsb
fistl
sti
xor
fldenv
sub
pop
es
cli
mov
out
dec
or
mov
cld
push
lret
imul
inc
cmp
aad
rorb
cmp
pusha
lcall
mov
pop
add
cmp
es
xchg
dec
or
idivb
mov
or
cmp
lret
adc
adc
pusha
imul
add
inc
inc
popf
cwtl
jae
mov
mov
mov
pop
jg
pop
jg
pop
stos
and
pavgb
pop
inc
cmp
add
dec
sub
sub
mul
in
repnz
mov
repnz
inc
stos
adc
jnp
xor
arpl
cmc
adc
inc
fisubrs
jl
or
dec
in
jg
inc
cmpsl
data16
sbbl
xor
mov
lods
cmpb
les
je
int3
inc
mov
ds
clc
imul
pop
inc
data16
cld
cmp
adc
push
ljmp
mov
test
fnsave
push
nop
stc
inc
into
add
fdivrs
in
inc
mov
cld
xchg
mov
mov
jnp
cld
in
pop
mov
or
popa
adc
stc
in
and
testb
movsb
enter
push
xchg
sub
and
in
aaa
pop
rorl
inc
jle
mov
add
shrb
pop
dec
aaa
mov
icebp
je
mov
je
sahf
dec
cmpsl
movsl
sbb
addb
push
out
dec
popf
or
jne
push
inc
jecxz
cmp
sbb
lods
jns
inc
cmp
push
lock
dec
push
jp
jmp
scas
leave
mov
or
pop
int3
mov
call
mov
inc
out
nop
outsl
test
xor
mov
arpl
aaa
loopne
aaa
xor
adc
loopne
xor
enter
inc
loopne
fldcw
loope
rorb
inc
fdiv
fldl
or
adc
xchg
mov
xchg
mov
mov
aad
enter
xchg
xor
or
xchg
int3
push
mov
out
mov
inc
aaa
or
icebp
and
dec
js
ljmp
popf
push
out
lea
daa
xor
pusha
cltd
sbb
adc
xchg
jge
lcall
loopne
and
sub
int
std
shll
ljmp
sahf
insl
xor
mov
into
ss
popa
sub
leave
adc
adc
ret
inc
and
pusha
fildl
mov
js
pop
cli
xlat
push
sbb
inc
and
mov
sbbb
test
inc
dec
jnp
add
push
add
ret
pop
dec
sub
fsubl
in
dec
or
shll
adc
xor
sbb
in
mov
loopne
cmp
mov
dec
xchg
adc
mov
fwait
jno
add
in
xor
mov
adc
adc
cmp
incl
jge,pt
dec
dec
xchg
xor
jae
lret
mov
pop
addr16
mov
pop
outsl
jae
cs
hlt
jne
pop
and
test
mov
test
out
inc
imull
scas
imul
movsl
or
sbb
ret
jae
imul
insl
cmpb
mov
or
sub
jmp
mov
sbb
pop
fdiv
aaa
mov
out
out
or
bound
mov
jecxz
in
xchg
mov
xchg
push
test
mov
xchg
cmp
dec
push
loopne
mov
jnp
sub
jg
push
push
loope
add
aaa
test
test
mov
movsb
icebp
pop
out
ret
js
push
icebp
mov
mov
not
push
cmc
mov
and
or
in
out
nop
ljmp
std
addr16
and
sbb
xor
push
insl
xchg
pop
xor
push
xor
mov
adc
inc
and
sub
pop
xchg
dec
dec
add
aad
pushf
lods
jge
stos
push
leave
mov
enter
out
mov
pop
mov
xor
pop
sahf
push
mov
add
adc
cld
and
or
mov
xor
rcr
inc
xchg
js
int
inc
xchg
or
jecxz
pop
std
pop
sub
jg
int3
rcrl
leave
push
pop
mov
push
pop
loopne
out
pop
mov
xor
int3
fwait
pop
mov
repnz
sub
pop
cmpb
pop
popa
pop
incl
push
cmp
pop
xor
icebp
insb
sbb
inc
push
ds
mov
push
jb
aas
ficoms
stc
and
pushf
jo
sub
jo
out
std
mov
pop
add
orb
imul
ss
xor
xor
out
aam
idivl
lea
mov
dec
icebp
fldl
xchg
and
loope
xchg
mov
add
pop
sbb
insb
xor
fs
inc
adc
sub
sub
xchg
add
sar
pop
add
pop
lret
cmp
les
daa
or
fsts
adc
cmp
pop
ret
jne
popf
nop
fwait
sbb
pushf
shrl
stos
cmp
xor
hlt
lea
pop
push
out
sub
jns
jne
inc
cld
rorl
sub
or
mov
jo
cmc
inc
nop
in
and
nop
inc
inc
loope
jecxz
loope
call
pop
ja
mov
or
adc
adc
push
dec
lret
loope
xchg
inc
in
mov
out
push
dec
xor
sbb
cmpsl
aaa
int3
dec
adc
cwtl
mov
stos
jo
out
lahf
dec
bound
xchg
subl
aas
xchg
jae
mov
cld
xchg
icebp
mov
xchg
pop
bound
fidivs
aad
mov
jno
insl
sub
out
ss
mov
mov
inc
adc
xchg
mov
orb
dec
adc
cltd
adc
cmp
repnz
shlb
mov
clc
in
add
push
popa
xor
inc
mov
fwait
adc
add
mov
jmp
sti
xchg
mov
repz
push
push
push
test
fs
push
mov
fadds
jg
mov
popa
adc
lea
cwtl
test
iret
xchg
insb
pushf
dec
push
push
imulb
js
imul
dec
cmc
dec
xor
icebp
mov
mov
cltd
pop
js
push
addb
icebp
shrb
mov
jg
cmc
push
adc
aad
jnp
cmp
or
xchg
mov
jl
xor
pop
push
call
dec
fdivs
loope,pn
pop
jo
jbe
rdmsr
push
add
dec
or
or
ss
pop
pop
push
stc
push
insb
loopne
pop
sahf
adc
loopne
cmpsl
out
sub
clc
or
pop
popa
mov
xchg
sub
je
in
movsl
mov
mov
ret
sar
inc
sbb
jnp
push
mov
aad
insb
test
add
jecxz
dec
dec
adc
ret
dec
cmpsl
es
lahf
loopne
jle
sub
into
ffree
lods
mov
fdivrs
test
idivb
xchg
sbb
cmp
out
mov
jmp
pop
or
mov
mov
mov
xor
out
out
sbb
imul
xor
xchg
mov
fsubl
roll
jl
leave
cmpsb
mov
sub
addr16
mov
sub
cmpsb
ja
push
push
or
jne
mov
test
jecxz
xchg
in
es
add
push
push
jb
ret
stos
in
das
ss
sbb
sub
es
mov
sub
test
push
out
gs
inc
out
push
mov
add
ret
pop
adc
leave
jae
incb
imul
dec
scas
add
or
pop
sub
push
fbld
mov
cmpsl
notl
lea
loopne
int
lods
sbb
jmp
pop
inc
mov
lahf
mov
shr
pushf
push
dec
insl
push
inc
ss
add
jae
testb
dec
cmc
pop
loop
mov
jne
ja
aad
lahf
push
pop
fs
and
dec
scas
inc
in
pop
pop
xor
mov
pop
orb
ret
add
in
jle
cmp
out
xchg
inc
jle
movsb
push
int3
cmpsb
xchg
push
push
aaa
or
xchg
outsl
jecxz
push
ljmp
add
fisttps
insb
xor
lods
dec
fcoml
dec
cltd
popf
test
lea
sahf
and
add
pop
or
inc
stos
std
push
iret
imul
sbb
mov
ljmp
loopne
sbb
push
xchg
scas
scas
xor
add
in
rcll
iret
mov
xor
mov
lahf
mov
mov
xchg
dec
fadds
mov
lcall
inc
and
jge
inc
in
and
xor
inc
mov
stc
cmp
fildl
ss
imul
xchg
outsl
aaa
pop
outsl
add
pushf
sbb
leave
mul
jno
mov
movsl
sahf
add
scas
jg
cmc
divl
xchg
jnp
testb
mov
push
cmpl
lock
inc
jecxz
adc
pop
or
ret
or
cs
orl
xor
fbstp
and
add
jne
adc
out
outsl
inc
sub
lret
and
or
cmp
add
sbb
and
push
fcmovnbe
xchg
je
cli
insb
pop
add
push
sbb
in
sub
push
inc
cmpsb
or
dec
cmp
bound
mov
jnp
repnz
stos
addl
test
cmp
outsl
sbb
clc
jno
addb
and
int
lods
int3
inc
lods
in
ffreep
mov
popf
push
in
add
push
repz
fsubr
cmp
sub
inc
push
movsl
stc
xchg
jns
pop
xor
jne
ficomps
or
or
shll
dec
dec
and
aad
add
aas
jle,pn
xor
jecxz
stos
push
push
aam
pop
cmp
xchg
mov
inc
sbb
xchg
mov
inc
out
push
das
adc
mov
dec
xchg
add
into
mov
push
push
xor
xor
xor
mov
sub
sbb
mov
rcrl
or
push
lret
pop
lds
cmpsl
push
adc
push
insb
and
clc
sub
adc
outsb
leave
adc
cwtl
out
xor
mov
xlat
movsb
gs
mov
popa
addr16
gs
mov
orb
in
mov
lods
icebp
icebp
xor
aam
je
push
cmp
jmp
das
cmpsb
fdivr
divb
cmp
dec
sti
cmc
push
stos
dec
loopne
rcrb
call
sbb
push
xchg
mov
icebp
daa
or
push
or
sbb
int3
dec
sahf
test
bound
mov
enter
push
hlt
out
fsts
cmpsl
pop
ss
sbb
sahf
jmp
insb
testb
jecxz
xchg
sahf
shl
cmp
into
pop
or
push
out
bound
inc
jae
lahf
mov
in
cmp
mov
in
jae
loope
and
imul
mov
sbb
int3
imul
enter
or
pop
std
mov
je
test
mov
mov
fdiv
mov
rcrb
std
mov
sahf
pusha
loop
arpl
add
inc
sbb
dec
cmp
adc
repnz
pop
xchg
dec
inc
lea
ljmp
imul
pop
pusha
cmp
pushf
loop
mov
mov
ror
andb
adc
std
xor
push
inc
shll
xchg
or
mov
les
mov
push
or
mov
fldt
adc
mov
cmp
mov
in
movb
dec
lds
adc
fcmovnbe
lahf
push
imul
mov
rorl
cld
wrmsr
xchg
mov
scas
lcall
roll
pushf
adc
cli
out
jmp
loope
dec
call
push
cli
sbb
arpl
jmp
outsb
sub
push
add
ljmp
in
cmp
gs
lea
xchg
bndstx
lea
adc
pushw
push
xchg
mov
stos
in
or
lahf
mov
pushf
jo
mov
cmp
jbe
xchg
pop
leave
xchg
add
xor
shr
jle
xchg
fstps
sbb
loopne
fs
insl
add
popf
int
lock
add
mov
mov
pop
andb
add
mov
mov
jp
add
scas
daa
pop
f2xm1
jnp
ss
fcoml
or
cmp
out
test
cltd
out
fsubrl
sbb
or
cmc
clc
jb
cli
insb
mov
ds
mov
push
shrl
ljmp
sub
pop
ss
pop
jmp
int3
sbb
inc
pop
push
data16
inc
jp
add
jg
sbb
dec
pop
ss
or
nop
vmread
jns
setne
mov
dec
movsb
mov
repnz
jae
xchg
stc
iret
loop
mov
dec
ds
es
mov
sbb
xchg
imul
addl
nop
push
or
xor
and
lahf
loop
mov
repz
pop
cmc
icebp
adc
mov
and
das
push
cmpsl
leave
dec
mov
add
outsb
jbe
stos
adc
sbb
adc
shl
xchg
and
dec
clc
and
adc
or
xchg
jbe
adc
jl
ljmp
enter
and
ja
in
inc
ja
test
inc
xchg
mov
and
inc
clc
imul
and
xchg
lret
inc
sub
jb
dec
sub
or
pop
fwait
mov
fdivs
lds
outsl
mov
sti
fildl
jne
push
inc
jb
in
dec
pusha
std
pop
clc
mov
add
aad
les
stos
fwait
int
push
in
sub
ret
dec
test
or
imul
out
inc
les
xchg
popf
into
adc
mov
fidivrs
jp
push
mov
cmpsl
call
les
lret
fsubrl
pop
sub
push
shl
call
test
mov
in
shrl
cmp
pop
sbbb
and
sub
lret
sub
xchg
test
sbb
out
add
insb
push
push
lock
arpl
into
aas
fidivl
fistpl
adcb
push
xor
enter
xchg
orb
mov
xor
push
and
mov
cmp
fsts
scas
adc
adc
or
pop
adc
add
jo
fs
fcmovnb
sti
push
sti
iret
fwait
fwait
jo
pop
pop
call
jl
mov
xor
push
in
call
cmc
push
push
cmpsl
out
rcll
scas
pop
cmp
push
popa
data16
ja
gs
mov
jle
lret
sub
popf
hlt
dec
push
fisubrs
in
test
dec
cmp
mov
jg
xchg
adc
lcall
mov
lea
mov
cmp
inc
fwait
xlat
icebp
inc
sub
add
and
jb
nopl
and
sub
cmp
aaa
xchg
mov
jnp
mov
stos
sbb
cmp
ja
fildll
inc
xchg
repz
push
mov
pop
pop
stos
pop
jno
test
movsl
in
jno
icebp
subb
xor
xchg
mov
push
inc
and
jns
repz
xchg
popl
in
push
iret
addl
std
data16
pop
fwait
insb
je
jp
rorb
icebp
out
out
dec
mov
movsb
pop
sarb
fstp
push
xchg
jl
fldcw
mov
and
stc
shlb
jns
or
add
mov
mov
mov
xchg
into
pop
ljmp
addr16
fs
xor
inc
jecxz
loope
and
mov
rol
inc
mov
lods
out
lods
jge
repnz
iret
popf
pop
cwtl
mov
fiaddl
addr16
testl
sahf
stc
add
sbb
dec
xchg
and
nop
adc
stos
fidivrs
push
ret
pop
aas
mov
push
ljmp
xchg
mov
mov
imul
inc
into
andl
shll
dec
mov
mov
daa
mov
aam
add
pop
xchg
push
sti
adc
pop
jle
pop
mov
stos
test
cmpsb
test
jl
mov
repnz
jne
dec
mov
push
int
pop
jbe
int3
and
lods
adc
repz
sbb
dec
imul
in
arpl
cmc
enter
jnp
adc
inc
mov
fbld
mov
pusha
std
cmpb
push
xor
test
mov
nop
jecxz
add
rcl
test
jbe
pop
xor
pop
movsl
mov
push
test
stc
adc
add
dec
and
call
int
pop
mov
xor
inc
mov
arpl
rcrb
lods
cmp
fs
and
adcb
mov
cld
aas
js
cmpsb
ret
jle
ja
sub
out
in
repz
mov
xchg
push
sbb
jb
mov
xchg
mov
xchg
mov
shll
mov
stos
outsb
stos
jg
sti
dec
mov
lock
gs
into
xchg
mov
rcrb
xor
xchg
inc
dec
push
aaa
cmp
imul
adc
pop
xlat
push
dec
roll
in
jmp
movsl
sbb
std
jne
cmp
mov
mov
fidivrs
fnstcw
dec
cmc
mov
push
incl
adc
inc
test
push
mov
jb
sbb
xor
in
mov
loop
mov
stos
pop
add
mov
add
fcmovu
jno
jns
fcmove
int3
loopne
nop
mov
rorb
push
in
sbb
mov
xchg
jmp
rcl
add
in
pop
hlt
movsb
lcall
sbb
in
pop
push
cmpl
dec
sbb
nop
ja
fisttps
inc
xchg
mov
dec
gs
gs
test
lock
push
add
int
mov
dec
std
sub
jno
fidivl
xor
cmpsl
outsl
out
sbb
adc
pushf
ret
and
fiaddl
inc
out
jmp
outsl
test
cmpsb
inc
jmp
mov
xchg
sbb
push
mov
mov
dec
jns
gs
clc
shlb
mov
and
sbbb
push
inc
jg
test
dec
push
jno
jmp
mov
daa
movsl
ret
dec
fldcw
adc
mov
push
sub
pop
pop
mov
jae
push
test
or
cmpsl
mov
add
aaa
cltd
cmp
xor
stos
mov
lret
hlt
jo
pop
shlb
mov
cltd
inc
mov
iret
out
je
in
addr16
pop
int
pop
and
jmp
dec
fildl
enter
ret
jae
mov
fisttpl
xchg
sub
out
and
jbe
adc
push
mov
pushf
cmp
mov
mov
xor
enter
mov
pop
nop
and
mov
add
test
pop
mov
ret
lds
addr16
pshufw
scas
xor
subl
xchg
mov
jnp
pop
push
xor
hlt
push
push
jge
sbb
sbb
cmp
push
repz
cmp
js
idivb
ficoml
mov
call
adc
push
mov
inc
dec
fwait
mov
and
and
enter
inc
push
jne
repz
ja
xor
fsubs
push
sub
sarl
data16
cmp
push
test
push
cs
ljmp
fucomip
xchg
imul
jg
test
or
aas
inc
push
inc
jmp
jmp
mov
xlat
dec
xorb
pop
mov
cld
mov
call
adc
in
sub
das
shr
inc
or
adc
mov
mov
jb
and
mov
mov
int3
mov
ror
pop
cmpsb
ficompl
enter
mov
sbb
cwtl
fs
xchg
jae
fs
loop
inc
pushf
mov
cmc
insl
dec
jmp
mov
js
inc
push
xchg
insl
sub
dec
jl
je
or
dec
out
jbe
outsl
aaa
mov
sbb
bound
push
clc
cltd
lea
movsl
outsl
test
aad
dec
inc
stc
or
and
pushf
and
outsb
pop
stos
sbb
dec
mov
mov
push
aaa
dec
and
add
adc
fnsave
dec
enter
fldt
xchg
and
fimull
movsb
cmpsl
jmp
imul
je
fs
adcb
arpl
jnp
xchg
cmp
or
sub
xor
repnz
xlat
data16
aad
sub
xchg
std
xchg
xlat
fwait
test
sub
arpl
fwait
jmp
dec
inc
clc
cmpsl
jg
loop,pt
cmp
pop
rolb
add
cmpsb
in
pop
jge
test
lea
mov
aad
pusha
jno
jne
shl
sahf
and
dec
push
in
jl
movsb
repnz
mov
fbstp
jge
mov
roll
filds
mov
loopne
cmp
ljmp
mov
or
aas
xchg
dec
or
int3
cmp
shrb
and
inc
and
addb
sub
cwtl
adc
in
sahf
jo
out
or
push
mov
ret
pop
ljmp
pshufw
adc
jl
insb
gs
sub
pop
push
lds
shr
lahf
scas
xchg
cwtl
leave
and
jle
fstpl
sbb
push
rcrb
lds
mov
push
adc
test
mov
cmp
imul
mov
jg
xlat
test
shlb
arpl
in
and
leave
dec
sbb
xchg
cmpsl
mov
in
lods
cli
mulb
adc
stos
aad
shll
push
inc
cmp
mov
mov
and
repz
sbb
sbb
xlat
ret
lock
movsb
inc
dec
mov
sti
adc
nop
cltd
and
cmpsl
cltd
clc
cmp
ret
push
inc
mov
xchg
movsl
call
shll
fsubrp
ror
mov
sbb
int
jl
mov
xchg
or
sbb
push
dec
jmp
imul
lcall
inc
add
xor
dec
xor
xchg
test
xchg
and
shll
daa
mov
fcomps
sub
scas
dec
jecxz
adc
adc
nop
adc
in
inc
aad
adc
cmc
idivb
xchg
movsb
cmp
lcall
dec
shlb
sbb
sbbb
in
adc
sbb
jo
jb
jnp
cmp
jne
stos
jmp
decl
loope
lret
jns
push
icebp
pushf
add
pusha
lret
sbb
mov
imul
rcl
mov
xchg
mov
stos
outsl
mov
lret
out
push
lahf
ja
xor
mov
lret
inc
aaa
loope
xor
icebp
pop
or
sub
dec
int
filds
mov
lcall
push
and
arpl
fwait
bound
fmuls
push
mov
int
jecxz
and
rcr
popl
and
xor
xor
cmp
cli
sub
sbb
shll
xchg
rolb
mov
ret
xor
mov
stc
xor
clc
divl
cld
and
cld
sub
movsl
mov
sbb
mov
push
inc
pop
testb
mov
or
mov
or
xchg
dec
mov
dec
inc
andl
cmc
data16
add
pop
stos
jl
aad
xchg
ret
shrb
add
ret
mov
daa
or
arpl
inc
add
es
mov
dec
icebp
adc
xlat
int
out
icebp
int3
dec
xchg
das
pop
push
jbe
repz
push
shrl
or
repnz
lock
in
inc
mov
mov
shlb
dec
sbb
cwtl
aam
ret
ss
pop
mov
dec
mov
jle
or
dec
dec
xor
shlb
cmp
add
js
imul
movsl
or
jmp
fidivrl
rol
enter
cmp
leave
pop
inc
fcmovbe
ds
sbb
xchg
and
stos
add
mov
mov
ret
les
mov
inc
decb
xor
pop
push
adc
test
cltd
clc
das
enter
push
int
inc
leave
cmp
scas
pushf
lahf
mov
cmpb
ljmp
incl
add
mov
pop
call
xchg
mov
jbe
adc
insb
ljmp
mov
mov
out
dec
les
lret
mov
and
outsb
mov
cmp
rolb
cmpsb
jg
mov
inc
sbb
stc
xchg
cmp
sbb
ss
sbb
test
adcl
sahf
sub
xchg
jnp
insl
in
jl
sbb
lahf
or
jnp
pop
orl
adc
cmp
fs
fistpl
push
pop
mov
xchg
sub
inc
repz
outsb
push
xor
mov
push
ss
lcall
pop
hlt
push
dec
aad
out
push
or
inc
pop
fmull
pop
jmp
aad
dec
aaa
push
mov
pusha
shlb
sub
or
pusha
dec
xlat
shlb
inc
lcall
fwait
xchg
pop
adc
mov
adc
push
inc
sbb
dec
jp
rcll
pop
inc
xchg
hlt
pop
dec
add
psubw
xlat
cmp
inc
add
xchg
testb
mov
adc
stos
gs
cmpsb
sbb
call
pop
mov
mov
aad
sub
xchg
lret
add
ret
mov
out
sahf
test
xor
or
arpl
sahf
cmp
sbb
push
inc
inc
stos
stos
push
popa
pop
mov
adc
mov
das
test
cmp
and
cmp
mov
push
sbb
roll
in
fstl
or
stc
cli
popf
fistpl
sbb
push
aaa
push
bound
dec
mov
int
xadd
cmc
int3
xchg
inc
jg
outsl
dec
or
push
leave
pop
lock
aad
lods
mov
lods
out
or
xor
shrl
pop
les
je
xchg
fs
pop
insb
fsubr
pop
dec
int3
lds
stc
mov
clc
mov
sub
insl
sub
arpl
and
pop
mov
pop
std
ja
lods
pop
inc
pushf
pop
xor
xchg
fnsave
roll
push
sub
and
xchg
insb
loope
mov
mov
scas
add
pop
mov
sbb
testb
movsl
mov
jb
cmp
inc
mov
ja
movsl
jle
and
push
in
or
loope
inc
loopne
mov
ds
stos
add
xlat
inc
xor
push
fstpt
sub
test
scas
ret
sbb
out
fnsave
or
mov
mov
hlt
mov
mov
cltd
pop
test
clc
or
pop
data16
loop
mov
sub
push
jmp
fstpt
or
sbb
jmp
xor
test
out
xchg
shr
sub
xchg
in
sbb
gs
subb
out
repnz
pop
mov
sar
mov
jge
sbb
xor
sti
mov
scas
loopne
and
xchg
adc
jmp
pop
and
addr16
adc
rcrb
cmp
mov
and
mulb
aad
pop
sbb
movsl
loop
fcmovnb
into
sbbb
cmp
lret
insb
mov
xor
jg
and
push
push
push
pushf
daa
inc
in
mov
iret
add
addb
cmp
frstor
pop
rcll
adc
push
lret
jecxz
das
shlb
jmp
push
cwtl
adc
aad
jne
clc
movsl
and
jge
rol
dec
in
daa
add
loope
mov
pop
sub
lds
roll
push
sbb
daa
and
or
add
mov
jbe
lock
push
bound
cmp
pushf
ja
loope
and
sub
sub
jle
std
outsl
inc
punpckldq
adc
mov
add
mov
inc
mov
adcl
fs
ss
js
mov
mov
popf
adc
sub
rcrb
cmp
test
ficompl
clc
lods
mov
mov
je
inc
mov
jmp
add
xchg
or
popf
add
push
and
or
mov
xor
rcll
inc
cli
mov
orb
push
int
jo
jae
pop
push
dec
aam
push
insl
fcmovu
mov
mov
lret
cmp
add
mov
push
add
mov
inc
nop
mov
shr
pop
rorl
xlat
xor
xor
or
mov
adc
cld
hlt
repnz
xor
push
jmp
stos
dec
mov
push
xorl
gs
inc
jo
mov
sbb
xchg
stos
or
inc
cmpsb
fneni(8087
mov
add
pop
inc
or
jbe
test
add
or
sahf
pop
fists
sub
mov
push
scas
jno
inc
in
sub
sub
inc
out
xchg
outsb
cli
inc
and
cmp
popl
mov
jmp
jbe
clc
iret
inc
sub
or
xchg
lret
and
sbb
jecxz
fucomp
xor
lcall
dec
aad
add
data16
fsubrs
cmp
add
std
lock
test
mov
pop
push
jg
and
ret
sti
fwait
xchg
cmovne
dec
cmp
addb
notl
sub
cmp
dec
pop
cmp
lcall
mov
movsb
arpl
cmpsb
sub
jo
repnz
adc
outsl
bound
push
stos
push
jne
in
pop
nop
mov
out
mov
sbb
mov
iret
stos
mov
loope
in
xchg
cmp
jo
fwait
lods
js
sub
xchg
orb
sub
test
pop
or
sbb
xor
sub
or
ficompl
notl
in
lret
out
fbstp
ja
cmp
repnz
dec
jne
faddp
les
jno
iret
add
mov
push
xchg
push
lret
ljmp
xor
stos
sub
nop
cld
cmp
out
mov
inc
test
xchg
popa
in
xchg
sub
pop
add
es
fists
insb
cmp
pop
sbb
jle
sbb
js
out
xor
shll
pop
pop
xor
pop
mov
movsb
add
xor
lock
add
nop
loopne
lods
in
jmp
icebp
jg
lods
xchg
gs
mov
jbe
jno
mov
or
jmp
test
or
sbb
adc
pop
add
push
test
js
add
sarl
cwtl
sbb
and
mov
cmp
push
jg
push
xchg
and
push
or
inc
pop
insl
orl
ljmp
cmp
add
out
pop
mov
xchg
ljmp
jb
imull
jl
lock
mov
push
mov
mov
dec
int
std
add
fwait
mov
lods
shl
shll
mov
sub
sbbl
fnsave
lahf
arpl
ds
loope
repz
dec
cmpsl
push
fcomp
cltd
jne
loopne
add
icebp
rclb
dec
popa
xor
icebp
mov
xchg
pop
pop
fwait
mov
pop
pop
lods
mov
enter
out
pop
iret
mov
mov
push
push
dec
dec
mov
rol
jmp
sub
enter
mov
inc
pop
xor
jecxz
jnp
cmp
testb
xor
les
mov
add
lret
cwtl
push
adc
lcall
dec
aam
cmp
jecxz
mov
pop
pop
add
sti
sti
shll
and
mov
in
jb
push
sub
lea
psraw
lods
ret
enter
lea
mov
scas
dec
add
adc
int3
dec
lret
scas
cld
clc
scas
loop
cmp
imul
push
stos
lock
or
rorl
arpl
mov
xlat
call
jl
andl
mov
insb
mov
push
cmc
stc
push
xchg
jns
pop
call
aad
xchg
cmp
xchg
or
mov
inc
ret
mov
push
inc
xchg
outsb
pop
cmc
jl
add
or
cmpsb
push
mov
pop
inc
xchg
inc
jl
inc
pop
jg
imul
cmp
fisttpl
jae
call
rcrl
icebp
mov
pusha
clc
jo
int
pop
cld
addb
mov
test
and
mov
cmp
cmpsl
mov
push
stc
or
das
stos
xor
sbb
arpl
cwtl
mov
shr
and
ds
jecxz
lea
mov
int3
fmuls
in
int3
out
mov
pop
cmp
or
loope
mov
mov
int
fwait
sti
adc
sub
sub
sti
push
or
jmp
data16
pushf
and
stc
loope
faddp
xchg
dec
mov
cli
pop
cmp
icebp
out
int
sti
mov
aam
popf
mov
sbb
aaa
and
addr16
dec
xor
push
cmp
insl
inc
in
fimull
inc
push
addr16
jmp
cli
and
fisubrl
mov
mov
mov
aas
outsb
cmp
push
imul
push
mov
sub
pushf
mov
and
cmp
cmc
aaa
scas
test
mov
loope
repz
sub
mov
cli
xchg
shll
xchg
je
inc
cs
mov
push
xor
notl
cmp
rcl
push
lahf
xor
shlb
iret
out
adc
mov
sub
jl
in
inc
cmp
xor
inc
jp
sub
jb
mov
jb
scas
fildll
push
and
stos
xchg
pusha
mov
ljmp
icebp
jne
scas
adc
aaa
cmp
fsts
xor
mov
jnp
in
cmp
rolb
sbb
inc
mov
test
into
cli
ud0
adc
bound
jb
enter
fidivrs
cmpsb
rcrb
xor
mov
sub
mov
cmp
shrb
or
adc
pop
lcall
mov
testl
gs
pop
jnp
or
iret
jae
add
aas
adc
into
scas
cmc
push
dec
jne
cmp
sub
adc
push
rol
cs
adc
inc
fiaddl
sub
roll
test
testb
cmp
cli
fisubrl
sub
out
xchg
leave
lods
lods
push
ficoms
and
and
mov
mov
adc
fcomps
ds
or
mov
sbb
mov
movsb
jl
mov
repz
add
outsb
fs
stos
aas
cmp
dec
into
cmc
and
adc
js
jg
decl
pop
shlb
icebp
push
aam
in
add
mov
rcrl
iret
out
sbb
decl
ss
fwait
cmp
icebp
ja
jle
dec
lahf
jge
cmp
outsb
lods
inc
filds
into
mov
out
les
xchg
test
cmp
popa
cmp
ret
add
out
scas
and
pop
inc
fstpl
jle
rol
xor
test
xchg
icebp
cmp
in
adc
cs
fdivl
push
mov
or
xchg
lock
fidivrs
ja
inc
dec
mov
mov
leave
lock
jl
sub
dec
sbb
shufps
adc
pop
cmpsb
inc
cmc
and
inc
test
sti
out
push
jge
xor
mov
int
sbb
andl
out
and
jmp
dec
dec
jecxz
sbb
adc
add
mov
js
inc
mov
es
jne
mov
dec
outsl
jno
cmp
mov
sbb
xor
je
repnz
outsl
push
xchg
movsb
cmp
cs
sub
lret
ds
xlat
jne
daa
pop
ds
test
lea
stos
aam
ret
mov
sbb
movsb
jne
pop
pop
jns
cmp
aam
or
imul
cmc
push
pop
scas
aaa
xor
scas
ja
mov
push
xchg
loopne
ss
and
push
xor
rorl
mov
xlat
aas
push
cwtl
xlat
scas
les
mov
sub
movsl
stos
stos
lds
dec
fs
push
dec
dec
and
inc
sub
enter
cmp
cltd
or
xchg
mov
inc
xchg
mov
ss
cmpsb
ja
orl
lahf
push
dec
inc
sbb
test
mov
shl
xlat
arpl
cli
pop
insb
int3
test
in
enter
nop
pop
adc
pop
xlat
nop
jmp
push
dec
jb
pop
inc
pop
ret
xchg
dec
div
mov
cmpl
sub
sbb
fldenv
test
ret
cli
jno
mov
inc
push
jns
cmp
into
addl
cmp
mov
lods
xor
adc
int
popl
rcrl
xor
out
sahf
pop
and
cmp
lcall
negb
xor
call
push
cmp
mov
aas
cmp
sub
je
mov
stos
pop
mov
fdiv
mov
mov
or
mov
ja
in
jae
adc
xlat
add
sub
shrl
aaa
mov
out
push
divb
mov
push
inc
mov
dec
add
jmp
pop
std
cmp
pushf
mov
mov
pop
sub
mov
or
rcrl
dec
out
enter
popf
mov
cmp
arpl
add
or
cmc
lea
fsubs
into
push
dec
mov
fcoml
inc
add
nop
xor
xor
insl
sub
cmpsl
mov
cmp
mov
lds
mov
mov
lds
xchg
cmpb
ja
cmp
push
mov
out
xchg
fcomps
mov
jbe
xor
xchg
pop
mov
rorb
add
mov
adc
fisubrl
xor
xor
mov
negl
leave
ror
fsubr
mov
xchg
scas
imul
or
and
pop
popf
fcmovnbe
loop
sub
pop
pop
jle
jae
dec
mov
aaa
sub
xor
jg
mov
xchg
rcl
clts
mov
cmp
push
push
pop
fbld
push
outsb
or
gs
xchg
dec
sti
sub
adc
lods
lods
push
xchg
or
push
adc
or
fdivrl
or
imul
and
cmpsl
cmpsb
pusha
mov
into
add
insl
andl
sbb
pop
mov
imul
push
pop
dec
xor
sub
xchg
pop
outsl
mov
movsl
sub
hlt
lahf
outsl
jle
test
jg
adc
mov
add
cmp
adc
not
sbb
push
mov
inc
insb
sbb
sub
inc
or
cmp
not
ret
add
adc
int3
out
inc
sub
sbb
sub
xor
jp
insl
lock
pop
test
inc
add
mov
movaps
xchg
fprem
ror
cmp
ficoms
mov
ja
dec
push
cltd
jmp
enter
shlb
aas
fisubs
repz
arpl
pop
cmp
jae
stc
movsb
or
mov
ds
imul
add
cmp
fs
sub
or
insl
hlt
movsb
outsl
ret
xchg
andl
lret
pop
jmp
xchg
mov
mov
decb
cmp
gs
pandn
jns
addl
or
cmp
add
jle
add
stos
add
lock
fisubl
jg
cmpsl
jp
mov
xor
shlb
repnz
inc
or
call
jnp
jb
out
in
xor
adc
cld
ljmp
int
rolb
jmp
fiaddl
push
js
stos
add
cmp
adc
addr16
or
cltd
jecxz
xor
mov
cld
out
pop
jne
dec
mov
xchg
popa
lahf
push
bound
ds
scas
data16
add
jo
mov
xchg
adc
push
cmp
imul
ja
mov
xchg
fisttpl
push
pop
pushf
lret
inc
push
fisubl
outsl
hlt
aaa
or
mov
jns
aaa
faddl
movsb
and
sbb
imul
jnp
add
sbb
dec
pop
insl
sbb
outsb
fs
adc
fistps
and
xchg
pop
rorb
out
icebp
shll
std
sub
data16
lods
add
inc
lcall
sarl
xchg
mov
popf
aaa
adc
hlt
xchg
pop
push
mov
xor
mov
pushl
push
repz
test
jnp
mov
or
push
stos
sbbb
cs
lea
push
sbb
jb
call
aad
sub
popa
xor
jo
fs
jno
repnz
xchg
push
mov
fwait
mov
pop
movsb
push
das
jl
ljmp
xchg
mov
roll
aas
jns
sub
aam
movl
scas
pop
lods
push
hlt
dec
jae
push
lahf
aam
ror
push
hlt
mov
bound
fcomip
jo
xor
jns
shll
pop
rcl
outsb
and
scas
push
std
push
out
jle
mov
jmp
cmp
mov
jl
jmp
jg
fcmovb
rcrl
push
aaa
sbb
add
mov
mov
pop
jmp
jle
jg
add
jle
sub
addr16
int3
cmp
jge
mov
imul
cmc
adc
fsubrs
adc
hlt
or
cmp
push
xor
ss
data16
clc
cld
hlt
test
sub
movsl
or
popa
in
add
push
clc
lcall
xchg
cmp
sbb
adc
pushf
push
push
mov
inc
icebp
mov
pushf
inc
mov
jle
in
jnp
push
sbb
adc
lods
and
sub
push
outsl
adc
cmp
loop
dec
jl
nop
in
add
das
or
sub
push
gs
sub
shlb
xor
scas
inc
xchg
mov
sbb
xlat
leave
xchg
or
popa
dec
push
mov
xchg
rol
in
pop
mov
mov
test
push
mov
xchg
lods
push
jo
ja
mov
hlt
das
push
mov
mov
xor
or
pop
push
cmpsb
jl
sbb
stos
dec
fisubrs
jg
add
fnstcw
sub
sarb
cld
mov
idivl
mov
sbb
push
or
push
rclb
cmpsb
cmp
inc
or
js,pn
fwait
aas
dec
sahf
hlt
test
data16
add
bound
mov
push
and
lret
push
mov
std
adc
xchg
pusha
xor
scas
mov
sahf
sub
cmp
mov
pop
not
jle
repz
push
test
mov
fistpll
lcall
in
pop
push
push
sbb
imul
mov
mov
mov
xor
sub
sub
sub
xlat
pop
xor
mov
jl
in
xchg
imull
lock
icebp
jb
mov
scas
ja
dec
jae
pop
hlt
loope
cmpsl
jl
mov
in
scas
mov
sub
cmp
imul
xchg
jno
je
imul
lods
sahf
pop
xor
ja
inc
cmpb
pop
out
dec
push
sbb
dec
mov
shlb
dec
iret
nop
xchg
mov
jo
in
cmpsb
leave
mov
lret
push
mov
int3
orb
cs
lret
loop
dec
leave
push
sub
cmp
dec
and
mov
pop
sub
mov
stos
or
cld
xlat
arpl
test
xorb
or
jp
mov
loop
stc
into
sub
in
push
ja
mov
pop
inc
imul
adc
sahf
cmpsb
cli
sahf
cmpl
lret
rcrl
mov
adc
push
in
test
insb
cmp
sti
imul
stc
dec
sbb
add
jne
fsubrl
mov
not
ficoml
and
push
mov
cld
loop
jmp
and
mov
or
stos
js
sbb
in
inc
test
test
ficompl
int
mov
sbb
sub
shlb
push
xchg
in
mov
cmp
out
fbld
xor
leave
cmp
xor
cltd
sub
xchg
sbbb
mov
xchg
or
sbb
xor
fmull
insl
push
in
sahf
shll
lock
push
std
test
pop
movsb
adc
mov
dec
xchg
push
mov
push
mov
xchg
sbb
mov
ss
xor
mov
jne
pop
dec
mov
mov
mov
js
fisubs
sub
not
xchg
insl
inc
insb
sub
inc
xor
push
jae
lds
aad
shl
sub
sbb
sbb
jne
dec
cld
pushf
jno
mov
jae
lahf
rorb
lods
adcb
or
pop
mov
mov
and
jnp
fstpt
in
cli
mov
mov
ds
ficoms
and
pop
inc
imul
fisttpll
dec
xor
lret
pop
aaa
and
mov
ficomps
push
jmp
movsl
es
idivl
gs
call
jnp
repnz
mov
dec
fisttpll
cmpsb
std
pop
fbld
aam
push
test
adc
out
and
fcmovnu
movsl
filds
fsub
pop
aam
in
into
xor
imul
fstpl
mov
mov
arpl
repz
cmpsl
popf
cmp
sbb
push
mov
pop
ja
lcall
lret
pop
xor
enter
cmp
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
out
sbb
dec
mov
movsl
dec
pop
pop
clc
aaa
fcmove
push
das
add
roll
mov
mov
cli
xchg
lcall
leave
iret
lods
and
cld
mov
lret
push
es
div
in
adc
les
lods
test
lret
scas
pop
in
cs
ja
sub
or
fidivl
add
pop
xor
in
and
nopl
daa
into
das
lcall
icebp
or
push
add
mov
ljmp
push
pop
adc
int3
lahf
xchg
mov
xor
ret
inc
movsl
les
enter
adc
pop
addr16
aaa
jecxz
into
test
add
ret
xor
sub
mov
arpl
cmpsb
xor
enter
addr16
jle
imul
jnp
push
mov
dec
mov
into
push
push
mov
js
xchg
sbb
stc
or
ret
fcmove
jp
xor
out
add
test
push
lods
sbb
fdivl
jle
repnz
roll
dec
mov
pop
cmp
xchg
in
mov
cltd
ss
mov
mov
adc
mov
push
push
or
cmp
or
xor
add
imul
mov
sarl
sets
repz
call
ficomps
cmc
sub
push
insb
lea
pop
mov
mov
inc
cmc
jg
adc
add
sbb
and
add
xchg
jge
mov
jge
and
pop
aam
xchg
push
insl
and
fsubrs
jno
dec
jle
aas
mov
and
leave
jg
jne
mov
repnz
into
pusha
hlt
mov
jne
fdivp
std
xchg
sbb
les
scas
push
mov
or
enter
add
pop
imul
dec
outsl
mov
sahf
or
cwtl
or
sarb
mov
aad
mov
xlat
stc
lea
rorl
es
lods
sub
call
mov
in
lret
xor
add
jl
test
lods
pop
push
out
repnz
jmp
test
or
pop
and
sahf
jmp
sbb
adc
sub
xor
jo
or
iret
fmulp
xor
pop
movsl
xchg
jns
cmc
jecxz
mov
mov
fisubrl
outsl
mov
ret
jl
call
ljmp
rcl
adc
inc
outsl
cmp
and
gs
add
mov
push
sar
cmp
inc
leave
sub
inc
jecxz
aad
jge
addb
mov
pop
mov
sti
adc
cmp
out
lods
mov
test
test
ss
jb
mov
dec
add
xchg
in
lcall
mov
mov
push
xchg
repnz
jle
xchg
addr16
mov
mov
lds
icebp
aas
aad
or
pushf
fs
out
test
cmpl
bound
shr
ret
xchg
mov
repnz
sub
out
in
cld
enter
xor
jne
xchg
into
dec
push
iret
shll
lahf
push
mov
lock
push
mov
test
sub
cmp
fidivrl
xor
push
add
loope
or
mov
push
dec
push
fucomi
adc
dec
test
fstpt
lcall
add
movsl
lock
pop
ror
aad
loopne
fwait
lret
or
in
cmp
lds
testb
popl
idivb
fs
ret
dec
mov
mov
out
pop
cmp
lret
fisttpl
shrl
push
in
bound
jp
xor
add
std
les
xor
sti
rcl
or
outsb
test
xchg
sbb
aas
gs
adc
fisubs
call
mov
fisttpll
ja
arpl
dec
mov
mov
add
fdiv
xor
or
xor
std
clc
dec
inc
rcl
or
push
or
inc
sbb
xchg
std
ud2
mov
cltd
sbb
dec
cmp
ret
add
or
mov
ja
fwait
mov
inc
lret
rcl
insl
xchg
xchg
aas
pop
aam
shlb
push
jp
test
cmp
incl
addps
popa
jg
rorb
out
lea
popa
xor
dec
and
jne
xchg
ret
in
jne
wbinvd
dec
ficoml
in
in
adc
cs
push
call
xchg
ret
dec
popf
push
or
test
repnz
mov
aam
cmpl
mov
pop
ja
les
adc
es
xchg
leave
aaa
mov
outsl
push
bound
out
es
fisttps
adc
jecxz
sarl
int3
pop
dec
sahf
lock
fsts
sahf
repz
mov
sub
test
and
add
mov
cwtl
rcll
dec
xor
test
xor
imul
out
int
jl
pop
xchg
jb
cli
sbb
lods
lcall
popa
mov
imul
mov
mov
ja
push
cmp
sbbl
out
pop
test
jge
mov
aad
push
sbb
sub
je
aad
xchg
or
mov
inc
jl
push
push
outsb
adcl
pop
adc
test
cmpsb
ss
mov
push
arpl
push
lret
jae
pop
adcl
loope
dec
inc
icebp
cwtl
fsts
mov
enter
mov
ret
jno
jns
pop
adc
or
add
sub
sub
js
lcall
ljmp
je
int
pop
jns
fsub
inc
pop
or
xor
cmpb
stos
cmp
ret
arpl
sub
pusha
push
and
insb
in
pop
or
rol
cmp
adc
add
cmp
mov
sbbb
adc
inc
ss
mov
and
jle
movsb
pop
sub
pop
mov
sahf
das
mov
gs
and
and
ret
outsb
cmc
xchg
scas
or
pusha
mov
sarl
gs
cltd
imul
insl
jp
pop
div
push
lds
add
std
test
jge
rcrl
sbb
inc
shlb
and
test
or
fistl
inc
enter
cmp
jo
out
pop
sbb
daa
jne
lods
enter
xchg
cmp
repz
adc
sbb
sub
ljmp
fldl
scas
mov
mov
lcall
push
in
into
inc
push
idiv
dec
sbb
cmp
inc
mov
jo
mov
gs
pop
ficoml
xchg
jnp
xor
mov
in
in
cmp
ds
in
cmp
jbe
push
push
cld
adc
mov
mov
cs
or
fisttpl
rclb
inc
ret
bswap
cwtl
test
subl
shrb
mov
test
inc
fsubr
adc
es
ja
mov
push
xlat
daa
mov
jo
and
sub
int3
mov
inc
sbb
fisttps
and
hlt
inc
add
sub
pop
xchg
mov
sbb
cmpl
mov
nop
mov
dec
mov
mov
das
in
ficoms
ss
iret
sub
mov
les
dec
nop
pop
mov
xor
daa
adcl
jge
xor
adc
dec
fwait
loopne,pt
adc
adc
push
or
test
mov
faddl
fcmove
lcall
push
push
jle
movsl
pop
inc
pop
repnz
shrb
rcr
test
ss
xor
mov
dec
mov
cld
lds
pop
scas
xor
and
ljmp
mov
xor
or
scas
pop
jg
clc
ds
inc
push
xchg
test
fdivrp
dec
jnp
sti
push
out
rcl
cmp
pop
scas
fwait
dec
ret
repz
icebp
lods
pop
dec
rorb
dec
ret
push
sbb
xor
inc
push
mov
mov
push
pop
ret
outsl
mov
test
fcomps
fs
popa
and
mov
aam
add
mov
push
enter
push
nop
popa
lahf
out
mov
sub
add
push
mov
in
and
nop
push
out
scas
mov
test
insl
xor
adc
pop
sub
cmp
push
pop
pop
add
test
popa
lea
movsl
xor
xor
add
addr16
add
ret
pop
orb
dec
mov
popf
jg
mov
dec
cld
pop
call
inc
pop
inc
mov
mov
addr16
ret
mov
dec
sbb
loope
or
mov
mov
test
push
mov
push
mov
mov
sbb
mov
fsubl
shlb
test
or
mov
cltd
cmp
pop
faddl
repz
dec
sub
mov
xchg
xchg
cmp
loope
sub
mov
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
