push
push
call
push
pop
mov
xor
div
push
mov
xor
mov
pop
push
push
push
push
mov
xor
div
sub
mov
shr
mov
shl
or
pop
and
mov
shl
push
push
pop
push
pop
push
pop
sub
shl
mov
sar
or
push
call
sub
neg
sbb
pop
inc
pop
ret
push
push
call
sub
neg
sbb
inc
ret
push
mov
mov
push
push
mov
xor
sub
mov
and
jns
dec
or
inc
cmp
jne
test
jle
mov
xor
jmp
test
jne
test
jle
mov
sub
mov
roll
inc
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
call
test
je
xor
inc
jmp
xor
pop
ret
push
mov
push
call
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
push
push
push
mov
push
push
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
andl
andl
push
call
movl
jmp
xor
inc
ret
mov
movl
movl
cmpl
je
mov
mov
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
xor
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
xor
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
mov
mov
add
add
mov
mov
mov
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
call
mov
cmpl
jge
push
call
push
push
pushl
push
call
add
pushl
pushl
pushl
call
mov
mov
push
call
push
call
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
sbb
repz
or
push
es
add
mov
add
clts
dec
add
and
add
pop
add
arpl
arpl
add
add
or
sbb
arpl
arpl
add
arpl
arpl
sbb
add
str
add
add
sbb
arpl
or
sbb
add
add
add
sbb
arpl
add
pop
arpl
add
add
arpl
add
add
sbb
add
add
add
add
arpl
add
pop
add
add
add
add
arpl
sbb
or
add
add
pop
add
add
add
add
sbb
add
or
and
ja
mov
mov
add
jo
insl
add
pushl
add
mov
shlb
mov
mov
add
push
pop
addb
or
mov
mov
jl
add
ja
add
mov
ja
add
pop
jg
imul
incl
sbbb
or
add
test
add
lcall
add
jg
adc
and
add
and
jg
arpl
and
jg
and
inc
sbb
adc
add
add
add
jg
add
mov
incl
add
pop
jo
jg
and
or
sbb
mov
testl
mov
addb
add
add
sldt
add
iret
add
add
idivl
mov
pushl
div
ja
adc
add
add
mov
mov
pusha
mov
incl
push
loop
pop
imul
add
and
jbe
test
add
and
data16
jg
push
add
dec
arpl
insl
ljmp
or
dec
imul
push
add
dec
inc
imul
add
hlt
cmp
add
loop
add
incl
pop
cmp
imul
imul
pushl
add
gs
icebp
adc
addr16
nop
inc
pop
xor
jle
imul
outsl
inc
add
bound
add
pop
cmp
stc
test
xor
inc
jg
packuswb
je
mov
enter
jg
mov
inc
pop
jg
jg
add
add
pop
pop
jmp
aas
inc
add
outsl
jmp
arpl
imul
inc
jmp
arpl
adc
lcall
incl
pop
xlat
pushl
pushl
adc
arpl
jo
adc
add
add
pop
pop
jg
pop
add
ja
xor
imul
adc
add
adc
arpl
mov
add
imul
add
add
lcall
add
adc
adc
imul
sbb
call
imul
imul
pop
aas
imul
add
imul
imul
imul
inc
arpl
imul
add
adc
sbb
xchg
imul
ja
pop
sbb
pop
lcall
lcall
call
jg
aas
jg
jg
add
incl
add
ljmp
add
jg
popw
test
push
pop
jg
add
ja
or
add
incl
jg
cmp
add
incl
add
jg
add
add
jg
popa
cmp
popw
jg
scas
jg
dec
dec
jg
and
jg
dec
pop
jnp
push
call
decl
sbb
jg
outsb
or
aas
push
jg
pushf
sbb
flds
pop
mov
add
lcall
pop
imul
aas
incl
incl
imul
add
jg
add
pushl
jg
ja
jg
add
jg
ja
jg
inc
add
jg
jg
outsb
jg
enter
jg
test
pop
pushf
dec
rep
jmp
leave
testl
repnz
call
add
bnd
jb
pushl
loopne
jg
push
add
jg
sub
incl
repnz
or
jo
in
push
movb
inc
repnz
add
add
jg
imul
decl
ljmp
call
lcall
repz
lcall
call
decl
lcall
lcall
pushf
inc
jg
lcall
push
incl
push
push
jmp
push
adc
pushl
pushl
jg
lcall
lcall
inc
pushl
adc
jmp
lcall
lcall
pop
jmp
adc
or
decl
lcall
incl
jmp
inc
call
and
lcall
ljmp
adc
repz
pushl
incl
jg
jg
jg
push
aas
incl
jmp
add
add
adc
cmp
jg
add
jg
add
jg
popf
lea
jg
add
jmp
pop
add
incl
add
add
bound
test
imul
pop
js
jle
add
inc
and
pop
test
icebp
imul
add
jnp
inc
incl
add
adc
xchg
add
ret
mov
or
add
mov
lods
imul
incl
pop
imul
adc
jae
ja
incl
imul
imul
cmp
jae
push
loop
pop
add
jecxz
push
pop
loopne
pop
adc
mov
scas
or
movsl
and
bnd
adc
outsl
inc
push
psubusb
icebp
addr16
xor
bound
in
arpl
cmp
dec
arpl
xor
add
add
nop
jae
jg
jbe
test
push
push
arpl
add
test
imul
popf
test
arpl
add
sub
test
cmp
lods
imul
test
pop
cmp
test
jecxz
jp
bound
sbb
jle
arpl
sbb
pop
jmp
or
add
imul
hlt
imul
jmp
dec
xor
cmp
jp
imul
incl
add
add
lock
imul
add
jmp
add
add
pop
lock
add
imul
pop
jmp
add
add
add
jmp
incl
incl
jg
add
incl
add
add
incl
add
add
add
jg
add
imul
incl
add
add
add
add
add
incl
jg
imul
jg
lock
pop
pop
add
jg
jg
add
pop
pop
add
add
imul
dec
dec
arpl
out
incl
push
or
sub
xchg
sub
incl
pushf
dec
add
addr16
incl
jae
jg
test
aas
ss
sbb
pop
sbb
cmp
push
jg
adc
sbb
sub
add
adc
add
negb
xchg
test
addr16
add
les
pushf
or
and
insb
pop
inc
pop
incl
arpl
add
xor
push
inc
pop
add
imul
imul
xor
add
xor
push
xor
jmp
call
inc
xor
and
xor
adc
pop
pop
inc
dec
pop
pop
imul
xor
imul
inc
inc
cmp
dec
lcall
xor
or
inc
imul
push
add
call
dec
ljmp
imul
dec
imul
imul
data16
inc
pop
pop
pusha
add
imul
pop
dec
xor
xor
xor
and
push
pop
push
push
ljmp
pop
test
or
jecxz
ret
orb
roll
ret
bound
jg
lods
pop
inc
push
add
cmp
imul
xor
cmp
imul
imul
lret
sbb
add
sub
dec
mov
add
or
gs
xor
test
dec
jg
fadd
push
imul
adc
add
jg
test
mov
xchg
pop
push
add
bnd
and
lock
add
lods
or
pop
add
addr16
sub
pop
sar
jg
pop
lds
sbb
sub
imul
jg
sldt
dec
dec
test
pop
dec
jg
arpl
pushl
popl
adc
lods
pop
div
es
mov
cmp
pop
jg
add
addb
add
add
cmp
addb
addb
addb
add
arpl
add
arpl
arpl
aaa
addb
add
add
addb
add
arpl
add
arpl
push
add
addb
cmp
jg
and
add
incl
and
add
add
ficoms
stc
lret
adc
ljmp
add
fstl
adc
test
sub
jo
imul
add
out
add
ljmp
add
jg
dec
xor
add
add
ja
jg
incl
data16
and
test
jg
add
add
pop
or
testl
pop
xor
pop
dec
xor
jmp
add
pop
pushf
pop
add
testl
jae
and
jnp
xor
incl
jg
pop
incl
incl
add
je
jg
jns
jg
add
push
icebp
invd
adc
pop
jae
pop
xchg
pop
hlt
sub
pop
inc
imul
test
inc
adc
push
adc
decl
inc
dec
gs
pop
int3
ja
push
pushf
inc
call
adc
or
pop
pop
in
imul
adc
ja
and
imul
add
or
jo
pushf
pop
add
rdpmc
int3
imul
pop
pop
add
imul
ret
mov
sub
pushl
add
and
pop
imul
ud0
lcall
jg
jg
jg
packssdw
mulps
jg
decl
mulps
imul
pop
decl
imul
pop
movq
pushf
pop
imul
imul
pop
imul
ud0
lcall
mulps
pop
imul
jg
pop
imul
ud0
pop
jg
imul
jg
pop
jg
jg
jae
jg
mulps
jg
pop
decl
packssdw
jg
pushf
pop
lcall
mulps
imul
jmp
pop
pushl
imul
lcall
jg
lcall
setl
jg
pushf
imul
packssdw
packssdw
imul
ud0
mulps
pop
pop
movq
imul
pushl
pop
jg
jg
imul
jg
pop
imul
jg
pop
movq
mulps
jg
ljmp
jg
jg
jg
add
incl
add
add
incl
pop
lock
add
pop
add
incl
add
add
lock
add
jmp
add
jg
add
pop
jg
lock
pop
imul
imul
jg
add
add
incl
add
add
incl
add
ljmp
add
imul
add
jg
adc
imul
call
inc
pop
inc
inc
pop
inc
ljmp
jg
cmovb
imul
ret
lock
lcall
inc
lock
adc
pop
cmovb
jg
adc
ljmp
pop
ret
jg
inc
adc
paddusw
adc
adc
adc
and
or
imul
or
pop
adc
jg
inc
mov
ljmp
inc
inc
jg
inc
adc
decl
add
and
jg
jg
pop
or
decl
and
jg
adc
movups
inc
jg
inc
adc
call
ret
add
inc
and
inc
or
jg
pop
jg
or
jg
ud0
incl
pop
adc
pop
adc
jg
inc
inc
inc
or
jmp
jmp
or
and
sysexit
jmp
jg
inc
adc
lock
adc
jg
decl
and
and
or
adc
inc
jg
adc
incl
jg
or
adc
inc
adc
invd
and
call
adc
jg
jg
jg
outsl
push
mov
or
jmp
rorb
pop
inc
mov
ja
mov
jg
data16
push
pop
ss
mov
xchg
mov
ja
loopne
decl
add
cmp
aas
imul
popa
xchg
rcll
fstpt
add
mov
test
add
shrl
xor
outsl
add
lods
add
xorl
imull
gs
test
test
dec
rcrb
les
data16
and
jg
jmp
mov
cmovb
add
inc
add
add
pop
pop
add
jg
add
inc
add
and
add
sbbb
jg
inc
verr
jmp
or
or
or
pop
add
jg
inc
and
imul
adc
add
pop
mov
push
add
str
adc
add
or
and
and
add
and
push
add
add
pop
adc
pop
inc
lock
incl
add
imul
add
decl
inc
test
imul
imul
pop
add
inc
adc
pop
imul
imul
and
and
or
add
adc
mov
and
ja
imul
ud0
imul
jg
jnp
jg
test
mov
stos
test
mov
mov
add
incl
data16
jg
jnp
mov
sti
add
cwtl
ja
ljmp
aad
jae
jg
das
std
je
imul
lcall
lcall
lcall
incl
ljmp
incl
jg
jmp
jmp
add
inc
adc
inc
or
imul
pop
add
pop
inc
mov
and
inc
add
and
pop
add
jg
add
jo
add
adc
jg
inc
inc
and
add
sldt
jmp
jg
and
add
jg
jg
add
or
add
add
jg
or
and
or
ljmp
adc
inc
inc
inc
imul
or
jg
or
or
adc
pop
imul
inc
and
add
jg
add
call
repz
imull
xor
lret
or
lock
and
mov
cwtl
imul
push
test
or
arpl
jg
pop
pop
adc
incl
mov
and
pop
jg
mov
xor
addb
add
add
add
or
str
add
addb
add
add
inc
add
add
cmovb
adc
inc
adc
add
inc
add
adc
or
inc
inc
inc
and
orb
or
inc
add
add
mov
and
or
add
add
add
add
inc
add
add
and
or
and
or
add
verr
add
str
addb
add
add
adc
add
inc
or
inc
adc
addb
and
adc
add
add
adc
or
inc
addb
adc
add
add
and
add
add
add
adc
add
verr
add
verr
or
adc
add
add
or
inc
add
add
and
and
inc
add
adc
add
inc
and
add
and
inc
add
addb
or
jg
push
add
incl
push
incl
ja
push
jg
std
ja
dec
ja
jg
ja
dec
lcall
add
mov
dec
adc
push
jg
test
sahf
je
incl
adc
incl
pushl
je
dec
jg
bound
add
jg
push
push
add
dec
je
je
dec
mov
je
bound
dec
bound
dec
add
ja
test
filds
pop
sahf
mov
lahf
add
jg
ja
fisttps
incl
jg
dec
jg
mov
dec
jg
test
dec
dec
ja
ljmp
je
jg
jg
ja
pushl
add
call
dec
incl
mov
pop
incl
ja
data16
jg
dec
dec
jg
dec
mov
jg
bound
add
jg
ja
jg
push
add
jg
dec
data16
jg
ja
pushl
popa
out
outsb
jmp
add
jnp
jae
ja
test
jg
addl
je
das
add
mov
push
jg
pop
pop
ljmp
mov
ja
lretw
inc
cld
pop
out
popf
mov
or
cmp
and
add
adc
clc
int3
dec
test
mov
inc
mov
cmp
negl
cmp
push
in
pop
inc
dec
jo
mov
fstpl
insb
sbb
int
xchg
lods
mov
in
mov
xchg
aaa
inc
xchg
loop
push
hlt
push
lods
shrb
jbe
inc
fldl
add
fdivrs
push
cmp
jnp
subl
mov
lock
sbb
test
add
xorl
ds
ror
mov
jge
pop
fstpl
adc
ficoms
imul
or
pushl
cltd
ss
xor
mov
push
jo
jl
mov
jns
outsb
movsl
sarl
and
jecxz
xchg
add
sub
cld
jae
bound
xor
lahf
mov
and
fchs
dec
or
les
push
or
divb
sbb
mov
sub
adcl
stos
clc
cmpsl
cmp
push
push
pop
ret
fmull
lcall
in
pop
mov
fidivs
sub
popa
sbbl
ret
ret
test
lods
pushf
lock
add
dec
cmp
add
add
in
xor
test
mov
gs
pop
jbe
jge
adc
or
adc
pusha
mov
lcall
mov
xchg
and
and
test
bound
andl
ss
mov
jns
add
pop
mov
mov
stos
cltd
loopne
bound
fs
cmp
fidivrl
sbb
inc
outsl
leave
js
inc
mov
notl
xor
bound
out
mov
test
xchg
scas
jns
mov
add
xchg
hlt
stc
movsb
xor
lods
aaa
stos
push
xchg
xor
inc
cmp
xchg
lods
repnz
adc
mov
push
mov
jnp
scas
jno
xchg
pop
aas
sub
xchg
sub
inc
fimuls
mov
cmpsl
imul
mov
mov
jno
pop
xchg
stc
sbb
push
fsubrs
aas
shll
sar
aam
pushf
dec
mov
push
mov
mov
lock
fwait
sub
sub
sub
xor
or
inc
sub
ljmp
sar
push
fsubl
lds
mov
jp
test
inc
xor
cwtl
jae
mov
dec
imull
pop
fistpl
mov
int3
enter
mov
add
ljmp
mov
lods
pop
scas
cmp
popf
decb
sbb
cmc
ret
dec
adc
aad
xor
inc
leave
repnz
jne
mov
ja
and
cmp
pop
push
addr16
and
xchg
sbb
pusha
in
push
loope
xor
mov
fbstp
stos
ljmp
inc
mov
xchg
pop
and
sti
inc
movsl
stos
fcomp
cmc
cs
in
fwait
mov
push
or
add
rorl
dec
xchg
push
sahf
out
cmp
jnp
push
iret
in
movsb
fistpl
sbb
pop
mov
dec
xchg
arpl
sbb
clc
sbb
xor
leave
jno
push
add
in
mov
or
stos
fcompp
das
mov
or
lahf
adc
jb
sub
jg
fdecstp
leave
xchg
cld
pop
xchg
je
mov
jno
jecxz
movsb
jae
adc
aaa
ret
repnz
jg
test
sbb
out
add
ja
push
push
fwait
xor
scas
aas
iret
sti
xchg
outsl
nop
jno
movsb
xor
fucomip
dec
mov
daa
mov
pusha
loop
fcmovnbe
pushf
dec
mov
sarl
jl
daa
or
stos
inc
test
dec
scas
or
mov
fsub
ffree
std
nop
or
int
mov
test
inc
lock
fs
dec
xor
fs
dec
nop
pop
and
pop
aam
mov
loop
sub
mov
punpckhbw
cmpl
pushf
adc
adc
imul
adc
adc
adc
add
xor
mov
sub
and
pop
jge
and
dec
mov
and
xchg
jb
xor
mov
mov
dec
test
pop
mov
xor
into
dec
cmp
je
or
jne
sbb
scas
add
jns
mov
addl
xchg
xor
adc
test
sbbb
jns
jo
and
stos
aad
imul
jae
shlb
mov
cwtl
in
dec
clc
shrl
ljmp
aad
jns
in
adc
and
jmp
push
and
fidivrs
inc
std
loop
xor
jae
jp
jecxz
xor
arpl
push
mov
rolb
push
in
jmp
rcrl
cmp
xor
xor
loopne
daa
push
xchg
jmp
cmp
ljmp
scas
xor
push
xor
xor
cmp
push
xchg
add
mov
pop
jp
pop
dec
inc
lret
ret
cmp
add
ret
jle
je
xchg
mov
and
mov
jno
pop
sti
fcoms
popa
xchg
hlt
jnp
js
and
sbb
ret
inc
inc
ljmp
test
fucomp
incl
xlat
sti
jmp
scas
push
pop
xchg
add
and
jb
fwait
xadd
pusha
outsl
les
cmpl
jno
mov
mov
pop
push
ja
xchg
aaa
jbe
pop
push
repnz
inc
aad
xor
jle
shll
and
mov
jno
inc
loop
data16
ficoms
test
out
sbb
outsb
out
repnz
cmp
sub
shr
les
dec
outsb
shlb
or
push
sub
outsl
repz
adc
es
ss
mov
xchg
das
mov
mov
xor
sub
sbb
jge
cmp
xchg
sbb
adc
popa
test
mov
jae
sub
push
test
nop
cmp
mov
pop
daa
jg
gs
push
aaa
or
add
mov
cmpsl
mov
idivb
sbb
pop
push
aas
stos
int3
lahf
movsl
test
inc
arpl
add
lret
rorb
dec
repnz
enter
hlt
movsb
out
mov
add
enter
sahf
push
push
jmp
or
mov
or
std
add
in
mov
sub
add
jo
pop
dec
lret
mov
jg
popf
jbe
dec
loopne
mov
mov
xchg
leave
or
and
xchg
outsb
mov
fucomi
mov
shrl
test
sbb
orl
subb
adc
xchg
push
stos
mov
outsl
adc
into
fiadds
mov
push
mov
or
add
mov
outsl
out
mov
fcmovbe
dec
jnp
pop
add
fcmovbe
sbb
pop
iret
sub
enter
movsb
fcompl
insb
jmp
jbe
push
push
xchg
ficoms
aaa
inc
or
add
ficompl
or
mov
js
lds
push
inc
jnp
xchg
mov
sbb
and
adc
add
shlb
or
insl
dec
incb
mov
movsb
inc
xor
ret
push
mov
sbb
imul
push
xchg
cmp
xchg
imul
xor
cltd
push
mov
gs
mov
cmp
push
bndstx
lret
xchg
std
mov
popf
lds
mov
mov
xchg
xor
inc
rolb
aaa
sbb
data16
fsubs
sub
lods
jbe
and
sub
insb
rolb
shlb
mov
fs
enter
fdivrl
mov
sub
ret
ss
pop
shl
jmp
pop
es
adc
and
lret
lds
lret
loop
mov
fwait
pop
andl
mov
lahf
xchg
sub
and
mov
mov
int
pop
pop
lret
pop
lret
sbb
add
adcb
insb
pop
icebp
cmp
out
and
popf
add
dec
insb
inc
jmp
outsw
int
aam
fwait
sti
ret
xor
xor
repnz
xchg
ds
sbb
xchg
lret
in
or
lods
adcl
sub
icebp
adc
ja
fdivrs
push
out
es
mov
enter
mov
sbb
jnp
jb
loope
enter
fwait
in
stos
or
cmp
adc
jbe
sbb
aam
dec
movsb
xchg
mov
adc
dec
adc
into
insb
or
xor
mov
adc
add
push
xor
sub
or
or
inc
jmp
jns
jnp
iret
cmp
jl
sub
pop
ds
in
nop
xchg
adc
and
push
arpl
add
mov
popa
push
out
outsb
pop
icebp
int3
jno
or
dec
add
cmpsb
mov
movsb
push
mov
pop
fstps
scas
push
xchg
add
int3
pusha
push
test
cld
mov
sti
pushf
push
sub
cmp
dec
subb
test
icebp
jp
aaa
pushf
jae
xchg
push
jmp
inc
imul
sbb
jp
adc
adc
xchg
dec
xor
xchg
icebp
mov
add
and
stos
add
out
fs
mov
js
in
mov
in
cs
sub
sbb
add
mov
sub
fldenv
stos
ficoml
add
add
clc
xchg
cmpsb
mov
shrb
popf
push
in
popa
dec
push
sub
jmp
sbb
outsl
es
jmp
jmp
in
xor
loop
mov
popf
iret
hlt
scas
aaa
push
sbb
sbb
mov
std
pop
adc
rcr
adc
jmp
fmull
call
pusha
xor
inc
xchg
push
dec
lods
loope
in
lea
mov
cs
in
sbb
xor
inc
mov
fucomi
pop
or
adc
ja
lods
inc
cld
dec
xor
xchg
mov
fwait
out
cmpsb
das
rcll
push
push
or
mov
inc
xor
jae
lds
dec
outsl
adc
adc
test
sub
mov
mov
sbbl
mov
lret
pop
mov
scas
jns
push
xchg
dec
daa
sbb
jne
lcall
or
rolb
push
sti
adc
imul
pop
adc
filds
iret
mov
dec
add
pop
push
xlat
mov
adc
jmp
js
in
jnp
push
leave
xchg
sub
xchg
fdivrs
jp
out
punpckhbw
call
fstps
cld
into
mov
fwait
daa
xor
mov
pop
add
xor
nop
mov
and
push
dec
mov
mov
pop
stos
dec
mov
lcall
in
add
xor
enter
ljmp
push
xchg
xchg
add
outsb
out
shr
clc
divl
stos
cmovge
lahf
jnp
adc
push
subb
cmpsl
inc
arpl
scas
cmpsb
xchg
stos
adc
inc
mov
dec
loop
mov
sbb
test
shll
push
adc
mov
cmpsb
or
xchg
lods
cs
mov
aam
imul
push
loopne
add
fcompl
and
xor
or
cmpsl
sbb
rsqrtps
test
cmpsl
inc
jo
out
cwtl
jo
pop
mov
insl
repz
mov
mov
push
or
inc
int3
dec
xchg
sub
jbe
xchg
sbb
mov
ja
sbb
out
sbb
sub
add
call
mov
rolb
push
adc
cwtl
in
les
push
test
bound
imul
in
pusha
jno
sahf
out
adc
sub
repz
in
in
movsb
notb
fildl
mov
add
fstpt
out
xchg
pop
mov
cltd
push
mov
mov
fisubs
jne
orb
dec
mov
add
mov
sub
cmp
jb
outsl
pop
scas
outsl
icebp
mov
xor
in
pop
push
adc
or
xor
rorb
pop
or
xor
mov
hlt
jle
dec
jb
stc
loope
push
dec
mov
insb
pushf
sub
jo
ljmp
sub
sti
add
addr16
scas
outsl
cmp
idivb
psllw
pop
cmp
aas
sbb
mov
outsb
dec
and
js
push
mov
adcb
mov
or
ja
ljmp
into
jbe
popf
rcl
scas
leave
cld
scas
mov
inc
out
mov
mov
inc
lds
lods
jnp
jb
pushf
mov
dec
mov
mov
push
and
push
cld
movsb
xlat
pop
sbb
lahf
in
fcomip
sti
jae
sbb
mov
or
lcall
pop
mov
outsl
pop
stos
call
outsb
outsl
push
push
cs
push
inc
shll
nop
mov
out
out
add
dec
arpl
cmp
sbb
cmp
push
xchg
test
shrb
in
dec
outsl
add
fcoms
mov
push
jae
mov
out
mov
aam
cmpsl
mov
fwait
sbb
fmul
push
insl
in
push
sbb
cltd
insb
mov
sub
mov
aaa
jno
cli
loopne
cmp
or
rolb
push
mov
testl
loopne
aam
fdivs
in
xor
in
adcb
xchg
fstpt
mov
dec
in
insl
push
lock
fstps
das
dec
dec
sub
inc
shll
daa
mov
mov
mov
aas
mov
push
and
cli
cmpsb
jg
mov
or
xchg
movsl
push
xor
mov
rolb
cmp
lods
mov
cmp
enter
and
data16
mov
mov
dec
pop
rcr
xchg
cmp
cmp
mov
pop
cltd
shrl
out
dec
adc
aam
int
jp
pop
gs
ljmp
fisubl
shlb
push
pop
sbb
arpl
fnsave
imul
addr16
pop
push
inc
xor
adc
cmc
inc
xchg
rcr
pop
sub
ds
cmpsb
push
inc
inc
xchg
adc
jmp
test
loopne
push
inc
dec
mov
sbb
lret
or
pop
rolb
sub
push
subb
jg
sbb
lods
jg
pop
xor
cmp
sbb
adc
sub
jmp
aam
sbb
cli
inc
mov
adc
popa
pop
xchg
outsb
sub
jge
gs
ss
ss
and
and
iret
push
movsl
xchg
or
jge
and
outsb
nop
sub
data16
mov
sbb
mov
jg
mov
push
imul
arpl
movsb
sbb
push
sbb
mov
xchg
pop
hlt
add
aam
fs
adc
xchg
jle
pop
cld
fstpt
clc
dec
das
daa
insl
mov
xor
push
jno
icebp
imull
test
mov
andps
int
loop
ja
xor
rep
aad
or
pop
mull
dec
out
in
fld1
pop
inc
push
enter
pop
xchg
hlt
or
cwtl
push
add
xchg
adc
or
nop
lods
ss
stc
and
push
pop
pop
das
add
adc
lock
daa
adc
lods
dec
imul
xor
jmp
mov
pushf
test
movsl
ret
cltd
push
mov
rorl
cwtl
nop
push
test
out
inc
add
adc
pusha
cmp
dec
in
inc
sub
scas
sbbl
nop
cwtl
inc
not
mov
cmp
mov
and
jb
jnp
test
dec
into
sbb
imul
sbb
es
push
pop
ja
xchg
jmp
fucomp
stc
int
and
stos
das
add
mov
inc
les
cmc
hlt
xchg
or
pop
inc
mov
in
xchg
enter
pop
mov
mov
fisttpll
add
mov
jecxz
ret
jecxz
or
lcall
enter
mov
mov
leave
mov
ja
pushf
sub
cltd
mov
lds
push
in
jmp
adc
inc
cmp
pop
mov
mov
xchg
push
lods
shrl
out
jne
loop
sahf
fcmovnu
nop
lret
push
lahf
add
push
push
sbb
xor
js
jle
add
ljmpw
xor
fisttpll
inc
jge
sbb
mov
add
dec
cld
addb
and
subb
in
cmp
lods
bound
cmpsb
loop
test
lods
inc
mov
shrl
mull
sti
mov
or
xchg
cmp
lret
cmpsl
cli
lret
insl
dec
sub
cmp
xor
xor
inc
ss
js
cmpl
push
mov
rorb
aam
loopne
lock
in
dec
add
dec
sahf
pusha
xchg
imul
xchg
or
push
outsb
or
in
dec
sub
pop
add
fcmovb
or
mov
add
outsb
lea
xor
sti
dec
lock
stos
sbb
mov
jmp
ss
andl
or
xchg
in
lea
icebp
mov
push
add
ja
push
or
call
hlt
xor
and
movsb
loop
add
popl
jp
xchg
aaa
and
cli
shl
icebp
xchg
jne
test
xchg
or
ds
and
mov
orps
popf
push
or
rolb
mov
inc
cmp
jb
and
dec
push
test
repz
add
push
xor
ja
ds
xor
sbbb
leave
scas
mov
leave
sbb
arpl
stc
sub
sbb
mov
je
cld
xchg
sub
inc
loop
icebp
xchg
mov
ret
pop
jl
cli
out
xchg
gs
or
xchg
sub
outsl
sbb
movsb
enter
cpuid
push
jmp
faddp
jl
mov
push
bound
dec
push
mov
push
mov
je
push
pop
add
mov
into
outsl
call
jo
jbe
xlat
jae
andl
divl
mov
add
jl
call
ja
push
repnz
or
out
push
hlt
int3
std
jmp
sbb
mov
in
mov
cld
jb
vandpd
insb
imul
lahf
outsl
cmp
jge
jnp
cwtl
jno
or
mov
aam
rorb
andb
inc
cld
js
push
dec
enter
mov
push
mov
fwait
adc
cli
aas
push
decl
push
add
mov
test
xor
call
pop
hlt
jl
rcl
outsl
test
sbb
jnp
sbb
gs
jl
jnp
lods
jb
sarl
mov
pushf
int
into
ret
cmp
sbb
mov
out
into
fsubs
loope
scas
inc
cmpsl
mov
pop
loope
cmp
imul
push
adc
ret
and
add
pushl
sub
sbb
jns
aaa
push
imul
mov
leave
adc
adc
xchg
xlat
aas
sub
std
sub
push
or
push
mov
mov
dec
cmpl
pop
mov
imul
pop
jnp
in
aad
nop
popa
pop
sub
flds
out
sbb
stos
adc
sub
mov
jno
ss
clc
and
dec
das
pop
or
jp
sarb
cmp
inc
cmpsl
ljmp
call
adc
fcomps
mov
arpl
sbb
push
push
adcl
xor
pop
mov
xchg
fiaddl
push
and
adcb
push
push
adc
addr16
mov
fwait
out
push
repnz
mov
mov
xchg
mov
std
pusha
add
testl
mov
fisubl
loop
imul
jg
cmc
mov
jge
rcrl
dec
loopne
inc
or
adc
push
jbe
sub
pop
and
idivl
xchg
adc
inc
mov
push
or
imul
int
jnp
cmc
xchg
loope
inc
sbb
and
shl
inc
mov
inc
pusha
xor
inc
cmp
mov
and
mov
cmp
inc
cmpsl
sti
sub
and
sbb
mov
pop
jae
movsb
add
test
aas
in
lods
dec
add
inc
and
loopne
int
cmp
and
popa
test
adc
cmp
pop
push
xor
mov
jmp
stos
mov
mov
sub
or
enter
movsb
push
jb
pusha
sub
push
fsubrs
test
lods
dec
push
stos
insl
sub
loopne
mov
jp
jnp
dec
jo
cs
adc
ss
dec
jno
xchg
inc
cld
sub
add
lea
in
mov
mov
adc
fildll
sti
inc
je
jge
outsb
push
cmp
imul
out
add
push
pop
int
sub
mov
add
mov
jge
or
lea
sub
test
lahf
fcompl
xchg
jmp
repz
loopne
pop
xchg
mov
inc
sub
inc
iret
lcall
movzbl
pop
mov
nop
mov
jle
out
lret
cmpsb
sub
mov
add
loop
dec
int3
testb
in
daa
fnstenv
gs
and
xlat
mov
push
push
xchg
leave
or
mov
or
cmp
push
xor
ja
push
xchg
rcl
or
cmpsb
jne
add
pop
and
aad
incl
loop
gs
shlb
adc
mov
aam
test
mov
mov
push
mov
or
inc
outsl
xchg
lret
cltd
sbb
shll
stos
mov
test
cs
mov
sbb
btc
pop
in
gs
orb
loopew
mov
push
mov
jle
and
out
jecxz
jns
iret
xor
lea
repz
std
addl
jecxz
xlat
ja
mov
push
pop
shlb
add
pop
addr16
sub
cmp
movsb
repnz
mov
int
shrb
jecxz
out
push
push
scas
repz
sub
add
add
insb
in
sub
lcall
mov
ljmp
push
sub
rcrl
jl
test
je
mov
fstps
cmpsb
in
outsl
fbld
jge
sahf
mov
aaa
fucomi
mov
mov
mov
mov
push
shll
movsl
push
xor
mov
ret
daa
xchg
mov
and
mov
stc
lret
cmp
test
stos
fstpl
cmp
js
mov
mov
andl
scas
pop
iret
sub
push
mov
adc
pop
or
jne
inc
inc
and
and
sbb
andl
mov
pop
or
lea
loop
xchg
lret
movsl
stos
into
pusha
xlat
add
ret
mov
shlb
or
inc
inc
je
mov
mov
or
and
jmp
jp
loope
pop
sbb
loop
cs
ret
jg
inc
mov
mov
leave
js
mov
scas
mov
testl
ds
xchg
pop
scas
mov
pop
scas
testb
sub
xchg
rcll
leave
xor
out
ss
or
test
inc
inc
out
push
pop
push
mov
shlb
mov
fstpt
and
in
jmp
incb
rcll
mov
and
lods
sahf
or
dec
mov
es
ja
in
pop
sub
cmp
sub
cmp
insl
call
aaa
push
push
aam
push
gs
push
sbb
ljmp
pop
sbb
mov
enter
push
in
pop
push
cwtl
add
sbb
aaa
insb
in
cmp
push
hlt
lods
jg
neg
mov
test
js
les
out
leave
icebp
mov
pop
pop
mov
push
fwait
rolb
jp
or
aaa
js
scas
into
xchg
push
loope
xlat
xor
or
cltd
ret
xchg
jecxz
add
pushf
scas
mov
or
add
pop
adc
xchg
xlat
add
leave
pop
cs
push
or
scas
pop
adc
insb
jo
rorb
cmp
and
aam
push
push
mov
jle
sub
rcrb
clc
jbe
int
in
pop
imulb
sub
cmp
jns
jmp
ds
mov
jne
add
shll
inc
and
sub
dec
inc
insb
cwtl
sbb
ret
adc
inc
in
add
insl
test
popa
pop
ja
mov
ss
adc
cld
inc
imul
ret
outsl
in
pop
mov
test
xor
gs
jecxz
shlb
repnz
adc
aaa
sbb
or
in
das
pop
inc
mov
sarl
ret
mov
ljmp
loopne
jae
inc
cmpsb
test
mov
and
xchg
arpl
cmc
fnsave
xor
jbe
das
jae
jno
fwait
gs
lahf
jno
dec
xor
add
pushf
jnp
and
xor
into
pop
pushf
popa
pop
aad
call
cmp
popa
inc
les
cmp
lcall
mov
cld
adc
std
sti
jo
pop
test
ret
inc
dec
dec
es
cmpsb
ret
pop
or
mov
or
xorl
lret
lods
dec
outsl
add
inc
fadds
dec
mov
mov
arpl
or
jge
repz
cmc
mov
test
stos
mov
out
sub
push
andb
xor
dec
or
mov
int
dec
cmp
jecxz
aad
ffreep
aad
in
pop
int
pop
jmp
mov
pop
sbb
test
pop
int
add
enter
insl
je
push
cld
push
scas
jno
shlb
push
cmp
mov
jne
jne
jmp
faddl
out
mov
out
inc
lret
adc
mov
test
push
fwait
push
push
inc
testb
adc
adc
push
insb
outsl
mov
push
aas
outsb
sbb
and
mov
push
cmp
rcll
repnz
cmp
inc
sahf
pop
pop
clc
xor
mov
add
adc
lods
lods
inc
scas
addl
rorl
jno
dec
mov
shll
and
fistpl
out
jecxz
fsubs
enter
add
jnp
mov
fisttpll
nop
test
dec
js
pop
push
out
movsb
pop
xor
outsb
mov
mov
mov
iret
xlat
shrl
repz
add
push
add
inc
loope
ss
add
out
mov
aad
xor
neg
outsb
lcall
negl
out
dec
mov
pop
movsl
sarb
cmp
inc
jbe
in
ss
hlt
add
xchg
in
mov
cli
xchg
insb
push
fwait
mov
jns
mov
mov
sbb
adc
shll
jp
mov
cld
cmp
adc
sub
or
clc
add
fnstcw
dec
push
fistl
push
cmp
mov
mov
and
jb
push
fistpl
out
js
mov
mov
add
xchg
addr16
imul
scas
popf
add
lret
push
push
push
arpl
rorl
shl
js
fisttpll
mov
movsl
gs
in
adc
mov
in
sbb
fsubrl
mov
pusha
push
pop
push
inc
repz
mov
lcall
add
mov
adc
adc
rcr
push
add
and
fimuls
push
xor
fmull
clc
ret
xchg
push
mov
in
sbb
jns
je
inc
lahf
popa
and
inc
bound
cld
mov
int3
movsb
or
or
sub
aaa
clc
mov
loopne
daa
jge
mov
mov
mov
sahf
adc
xlat
fwait
adc
outsb
push
notl
or
xor
aas
loope
xor
dec
push
add
sub
movsb
test
outsb
js
jl
adc
scas
sub
xor
dec
rorl
in
sbb
adc
fstl
scas
jmp
loopne
je
pop
ret
imul
mov
inc
out
fdivl
shr
sbb
mov
out
and
mov
or
repnz
out
roll
mov
lea
pop
jae
mov
insb
mov
shrl
push
shlb
into
into
jno
xchg
or
lret
lds
mov
ja
push
sub
add
xor
outsl
sbb
fnstcw
nop
pop
lds
add
mov
shrb
mov
out
inc
push
in
aas
jae
mov
sahf
and
push
mov
push
pop
and
mov
in
insb
popf
test
cmp
xchg
xchg
or
mov
mov
cmp
add
jg
mov
out
push
jae
xlat
mov
dec
addl
pop
dec
stos
ss
ss
dec
popa
and
pop
mov
sub
inc
es
xchg
daa
sub
or
pushf
rorb
mov
insl
jmp
movb
je
je
pop
push
push
test
js
rcl
bound
mov
lcall
movsl
pop
gs
mov
inc
adc
adc
insb
sub
ja
mov
psrad
sub
in
xchg
or
pop
xchg
stc
stc
jb
iret
ret
je
xchg
in
fcoms
test
push
aaa
out
roll
mov
jecxz
in
pop
xchg
push
js
cld
es
mov
loopne
fs
movsb
fisubl
xchg
mov
scas
or
popa
and
insl
mov
call
dec
repnz
rorb
pop
xor
fiaddl
xchg
lock
pop
or
outsl
xchg
xor
insl
mov
cmp
dec
add
out
mov
popf
adc
ret
xchg
xchg
pop
mov
inc
shr
mov
jl
cmp
lea
cmpl
ja
cmp
cltd
testl
test
mov
mov
movsl
or
mov
out
xchg
roll
sbb
add
xchg
sarl
cmp
add
mov
lret
fmull
incb
aad
repz
push
pushf
dec
stos
cmp
out
cli
jb
stos
outsl
addr16
cltd
sarl
push
xor
add
xor
xlat
or
sub
test
movsb
popw
jno
fnsave
cwtl
add
bound
xchg
fwait
pushf
mov
subb
push
rcrb
cs
into
ret
xchg
sbb
or
jnp
jo
cmpl
dec
sti
pop
movb
inc
dec
cmpsb
je
jae
insb
insb
in
inc
or
ds
cmp
cltd
aas
add
and
fisubrs
pop
flds
int
and
scas
stc
les
repz
jg
push
in
mov
inc
push
push
lods
rcrl
in
loopne
pushf
roll
inc
fdivp
sbb
jmp
sbb
sbb
div
cs
xor
fsubrl
pop
jne
je
movsb
jno
mov
idivl
mov
jle
popa
jge
jg
and
je
xchg
loopne
outsl
push
popa
sub
call
aad
test
pop
lods
lcall
cs
rcrb
cmpsb
les
inc
cmc
mov
jecxz
enter
mov
xchg
ret
mov
xchg
das
dec
or
push
pop
adc
insl
xchg
cmp
adc
mov
out
out
sub
inc
rcrl
or
lcall
repz
dec
jo
sub
sub
mov
movsl
sub
ret
cmp
adc
add
adc
aad
xchg
add
arpl
and
push
mov
pop
iret
mov
fsts
test
es
add
pop
call
cld
jg
and
stc
hlt
test
lods
sub
cmp
add
and
push
xor
pop
mov
mov
push
push
arpl
es
sub
mov
movsl
mov
ja
sbb
mov
push
stos
ret
lock
pop
mov
mov
int
mov
mov
and
mov
mov
vpunpcklwd
stos
mov
pusha
xchg
test
shld
out
lods
jg
cmp
adc
je
xor
push
loop
xor
test
out
daa
andl
cli
cs
sub
ret
das
sbb
sbb
idivb
bound
mov
scas
xlat
fsubrl
push
pop
roll
test
ret
push
lahf
jbe
stos
push
jle
ljmp
xor
xchg
hlt
lods
mov
movaps
lock
push
push
outsl
sbb
frstor
dec
bound
jg
jbe
aam
dec
xchg
stos
cmpsb
sbb
inc
out
dec
jecxz
popa
cld
lret
pusha
insb
fwait
sub
xchg
xor
mov
xchg
pop
pop
imulb
cs
ja
adc
test
xchg
inc
out
sub
sahf
das
pop
dec
inc
out
sarl
insb
xchg
out
adc
adc
int
xchg
add
bound
out
notl
movsb
es
pop
add
xor
js
jbe
cmc
int
xor
xor
jbe
mov
test
inc
scas
pop
adc
rclb
rorb
aad
inc
adc
std
out
stos
dec
mov
fnstenv
mov
scas
int
lcall
lahf
jmp
push
popf
fsubs
icebp
cmpsl
adc
pop
adc
dec
insb
push
lret
jb
add
mov
les
sub
popf
cmp
xchg
xlat
dec
sub
or
add
jl
or
outsb
fiadds
push
cmp
cmp
xchg
sub
jno
jp
sbb
push
xor
jbe
icebp
test
int
rorb
xchg
pop
jge
adc
fwait
adc
idivb
ljmp
shl
xchg
scas
outsl
cltd
sti
or
shlb
insl
aas
jg
in
sbb
add
xlat
cmp
cmp
addr16
loopne
js
icebp
dec
iret
dec
mov
pop
push
pushf
xchg
enter
mov
movsl
sbbl
popa
jge
sbb
in
insl
insl
mov
aad
jno
lret
push
nop
and
adc
mov
dec
pop
aam
mov
lds
pop
dec
ret
fsub
and
mov
push
mov
pushf
push
test
dec
pop
fisubrl
test
push
or
iret
insl
sub
jp
sbb
imul
sbb
cmp
xchg
mov
in
in
in
jp
lea
pushf
outsb
dec
lock
pop
dec
push
pop
aad
and
mov
push
mov
clc
add
and
into
in
sbb
es
mov
fisttpll
lahf
repz
int
lcall
or
int3
stos
mov
xor
shrb
je
pop
xchg
pop
or
adc
in
bound
in
shlb
xchg
pop
adc
int3
mov
pop
sbb
push
mov
jae
test
daa
jge
daa
mov
sub
cmpsb
cwtl
outsb
cmc
hlt
inc
leave
aam
ja
mov
sbb
xchg
xchg
sbb
and
aam
xchg
test
insl
jmp
sub
sub
pop
mov
mov
repz
lret
add
out
lods
sbb
sub
imul
ja
push
xor
push
lret
test
inc
mov
jmp
push
aas
xchg
pop
xchg
and
icebp
mov
xchg
faddl
fidivs
daa
bound
aad
int
or
ret
pop
push
addl
add
lret
cld
cmp
mov
mov
add
xchg
arpl
xchg
adc
dec
arpl
testb
mov
jne
cltd
scas
push
icebp
testb
jno
mov
or
lods
pop
std
lcall
xchg
out
mov
vmovss
call
and
pop
adc
sbb
pop
dec
outsl
jnp
jbe
xchg
pop
aas
int3
cmpsb
aad
loop
fcompl
jecxz
mov
aaa
mov
les
popf
into
xchg
push
pop
icebp
xchg
xor
inc
cmp
push
stos
mov
rcrl
out
in
push
fldl
jae
testb
xchg
pop
sbb
sbb
pop
lahf
cmp
jmp
ja
loope
xlat
insb
repnz
xor
xorl
and
and
and
inc
outsb
sbb
sbb
or
in
fsubrs
js
push
ret
repz
dec
xchg
xchg
dec
pandn
int
jle
aad
push
into
sub
out
mov
push
inc
pushl
fwait
adc
nop
cltd
cmpsl
ja
repnz
cmp
sbb
and
popa
mov
jbe
xchg
roll
subl
cmpsl
inc
add
mov
push
in
loop
inc
repz
sti
mov
jbe
jecxz
fstl
fistl
cmc
out
outsl
inc
orb
or
ja
xlat
in
jnp
jo
xchg
sub
push
enter
pushf
pop
outsl
push
xchg
add
push
adc
or
hlt
lret
stos
xor
js
cltd
adc
fidivrl
fcoml
and
aam
cld
sub
popa
pop
mov
mov
mov
mov
data16
mov
outsl
jp
and
in
and
mov
hlt
fcmovne
daa
lods
jo
adc
lods
or
ljmp
loop
mov
popa
cmpsb
lret
and
and
adc
inc
and
sub
cmpsb
cmpsl
or
idivb
cmp
mov
adc
movsb
sti
in
rolb
cmc
pop
inc
mov
nop
push
rcll
pop
sub
sbb
cmp
lahf
push
inc
add
sub
in
sbb
data16
adc
stc
int
cli
jne
mov
test
test
and
mov
mov
inc
and
jns
mov
das
lret
leave
lock
ret
add
and
movsl
xor
mov
push
out
fidivs
mov
lea
ja
in
imul
roll
xchg
das
cs
jne
dec
fs
adc
sbbb
lock
lds
cwtl
sbb
cli
and
mov
jge
cld
fmull
pushf
mov
inc
int
and
pop
popa
cmp
popf
dec
fisubrl
lock
insb
les
dec
outsb
dec
inc
fs
add
dec
stc
mov
cli
mov
jne
sbb
adc
popa
xlat
mov
fsubs
addb
mov
sbb
fisttpl
jp
or
popa
sub
cmp
dec
mov
mov
frstor
add
sbb
or
lock
in
xor
jns
add
jecxz
imulb
subb
mov
int3
outsl
push
xchg
in
rcrb
and
mov
adc
loope
xchg
jmp
cltd
sbb
gs
arpl
rep
xor
and
repz
int3
in
xchg
inc
movsb
jo
inc
popf
xor
push
push
aaa
mov
ficomps
pop
lods
into
cli
push
sub
ljmp
or
scas
adc
test
jmp
cmp
cmc
test
pop
mov
mov
xlat
fcomi
push
add
push
xchg
and
call
cmpsl
repz
lods
or
ss
mov
sbb
push
mov
mov
pop
mov
jle
xchg
icebp
sarb
mov
pop
push
out
sbb
cmp
ljmp
xchg
les
pop
cmp
jbe
cwtl
ffreep
cld
pop
int
xchg
lds
popa
mov
lret
jecxz
add
inc
adc
ret
pop
xchg
dec
mov
icebp
out
sub
xchg
dec
std
xor
in
xchg
loop
add
push
jae
pop
push
test
into
cmp
rclb
sub
sbb
aas
iret
ret
in
push
and
xchg
cltd
out
mov
popa
dec
xchg
repz
pop
sbb
out
xchg
and
hlt
lret
sub
inc
es
adc
pop
jo
add
jns
sub
push
faddl
sbb
test
jnp
insl
pop
psrld
xchg
imul
rolb
xchg
xlat
xchg
push
jl
sbb
xor
adc
push
mov
scas
in
xor
pop
inc
pushf
sub
loope
das
orl
movsb
jne
jne
push
xor
dec
addb
pop
loop
loope
scas
js
fdivr
shll
repz
daa
sbb
pop
pop
jecxz
dec
call
rolb
popa
loope
imul
lods
pop
sbb
out
cmp
inc
stc
jno
imul
jl
mov
sub
or
xchg
jne
pop
fcoml
in
xor
loop
popf
mov
push
adc
jb
cmp
adc
and
addb
pusha
imul
sub
das
add
pop
inc
push
dec
ret
pop
and
ret
les
xchg
loope
loope
mov
pop
mov
mov
das
and
test
cmp
jecxz
out
in
repz
cmp
xchg
mov
sub
xchg
xchg
cmpsl
in
popf
pop
adc
dec
jae
dec
in
add
add
add
cld
cmc
shll
int3
fildll
inc
ss
mov
sti
mov
sbb
movsl
push
pop
es
inc
ret
cs
mov
adc
lahf
int
pop
and
sbb
push
ljmp
shlb
inc
sub
test
clc
pop
out
mov
pop
mov
lock
testl
enter
cs
lods
add
test
or
mov
pop
add
push
movsl
adc
or
jle
pop
jbe,pn
xchg
push
mov
add
dec
dec
into
addr16
mov
cmp
mov
inc
dec
add
sub
mov
pop
rcrl
aam
popf
mov
xor
outsl
sbb
push
sbb
dec
bound
inc
mov
scas
mov
pop
xor
sub
dec
ror
in
andb
sahf
dec
je
jae
sbb
pop
mov
pushl
fldenv
lods
mov
dec
loopne
lods
popa
add
out
lock
lods
jp
and
jl
addr16
and
dec
rol
addr16
add
ror
adc
mov
enter
cmp
mov
dec
mov
vmwrite
daa
in
push
cli
or
inc
push
jno
xchg
js
sub
in
mov
imul
ljmp
push
adc
aas
jne
sbb
imul
cltd
xchg
fiadds
dec
and
sbb
xchg
push
je
and
lahf
jo
jns
mov
cmp
inc
dec
pop
sbbl
pop
sbb
sbb
loop
scas
jae
or
xor
fstpt
addr16
or
mov
aad
loop
and
jns
push
inc
add
pop
bswap
fwait
mov
xor
dec
or
fcmovu
push
adc
mov
sbb
mov
aas
jae
and
in
ds
push
mov
notb
imul
rolb
push
scas
insl
cli
and
push
jb
lock
or
loope
arpl
cmp
sub
add
sbb
icebp
clc
inc
iret
das
testl
out
add
lock
jne
xchg
aas
mov
lahf
sbb
cwtl
popa
xchg
jge
jge
mov
fildll
jns
ljmp
mov
push
sub
adc
rcll
out
or
ja
hlt
orl
iret
xor
cmp
mov
dec
mov
gs
mov
xlat
outsb
dec
shl
jnp
add
add
jge
insl
imul
fwait
or
ds
outsl
lods
sub
add
and
push
or
xor
mov
rol
scas
add
sub
add
mov
stos
fcomps
and
fiaddl
fwait
cmpsb
fisubl
in
push
dec
jg
push
push
cmp
adc
xor
xchg
jmp
dec
popf
stc
pop
mov
xor
mov
pxor
rcr
inc
xor
imul
jb
mov
mov
adc
mov
insb
and
jb
mov
adc
icebp
sbb
test
enter
and
push
cli
dec
ss
cmp
aam
jmp
iret
or
fnop
push
and
mov
pop
xor
cltd
jmp
lea
mov
std
xorb
aad
mov
or
mov
dec
and
add
into
or
jp
pop
mov
hlt
xor
int3
aaa
xor
mov
es
xor
test
mov
and
xor
and
aad
cmp
stos
rcll
setge
fimull
and
mov
shlb
jp
imul
aaa
push
out
gs
and
sub
test
das
movsl
enter
xor
pop
dec
mov
jns
sub
outsb
imul
mov
push
cli
cwtl
loopne
mov
in
pop
mov
pop
jmp
dec
jno
ljmp
jecxz
ret
cmc
in
dec
shl
pop
ret
fistpll
jae
shll
sub
cmp
sbb
sub
jne
shrl
xchg
pop
and
mov
cwtl
and
xor
lods
sub
pop
mov
cltd
loopne
jb
cmpsb
pop
mov
fmull
jmp
shr
fsub
lea
rcrb
mov
jecxz
sar
sbb
pop
mov
jns
leave
fwait
aas
cwtl
sub
pop
mov
cltd
sbb
out
mov
shl
or
pop
fld
fcmovbe
addb
push
jbe
lock
jmp
push
sbb
pop
jnp
add
js
or
lcall
xchg
inc
cmp
fdivr
add
dec
shll
xchg
sub
int
out
sti
xorl
dec
xchg
cmpsl
jnp
dec
lahf
xchg
sbb
fidivl
stc
add
or
cli
mov
adc
stc
int
or
icebp
sti
arpl
cmp
imul
rcl
mov
loope
repnz
inc
mov
mov
sahf
in
mov
das
dec
inc
mov
addr16
mov
sbb
imul
mov
scas
call
lods
lahf
cmp
pop
sub
push
js
test
sahf
jo
pop
jmp
push
rorb
adc
jne
fstps
mov
adc
pop
into
pop
pop
in
data16
ficompl
andb
inc
dec
and
sub
or
orb
pop
push
adc
xchg
jg
addr16
icebp
clc
test
outsl
popw
fidivrl
divb
push
test
mov
pop
fsubrs
js
mov
fiaddl
cs
lret
subl
add
gs
sub
pop
enter
cmc
lret
pop
jcxz
xor
out
xchg
scas
mov
dec
pop
push
aaa
dec
sub
out
xchg
sbb
push
std
jp
aas
bswap
ficoml
loope
mov
pop
clc
loopne,pt
jmp
mov
jl
je
push
inc
es
hlt
in
jecxz
mov
int3
push
jo
cmpsl
movsl
xor
jne
fisubl
dec
lods
inc
mov
in
stos
adc
lea
sahf
inc
or
out
mov
push
add
sbb
stos
in
cmp
pop
jns
arpl
mov
and
ljmp
dec
dec
fisubs
adc
das
rcrl
int
cli
repz
mov
push
jno,pn
mov
in
add
dec
mov
js
mov
push
pushf
adc
lret
fstps
lods
sub
jo
daa
mov
jb
sti
sarl
imul
dec
rorl
ja
repnz
jle
fnstcw
lock
pop
stos
sub
xchg
pop
jb
sbb
in
cmc
das
xor
and
inc
addr16
out
mov
ret
or
repnz
xor
mov
xchg
test
lret
aam
movsb
pop
mov
icebp
pop
xchg
xchg
pop
sub
leave
clc
gs
dec
js
cmp
ds
bound
xchg
stos
pusha
int3
jno
pop
inc
aas
int3
push
in
pop
cs
movsl
lods
cld
mov
ljmp
cmp
movsb
jp
sbb
aam
div
push
adc
push
push
stc
orl
inc
mov
repnz
in
cmpsb
inc
ja
adc
mov
testb
or
ss
lock
insb
mov
stos
dec
popf
jae
lcall
int
jns
cmp
loope
fisttps
and
ret
cmp
into
cmp
into
push
sub
push
add
das
idivl
fdivrs
loop
xchg
mov
cmp
vrsqrtps
jp
loop
insb
mov
mov
push
daa
sbb
mov
movsl
jne
je
packsswb
adc
ret
cmp
xchg
push
in
aad
insl
jecxz,pn
jnp
pop
mov
push
lahf
into
loope
push
jmp
mov
xchg
popl
sbb
int3
xchg
mov
xchg
addr16
adc
mov
in
imul
jmp
out
call
lods
idivb
add
dec
mov
cmp
in
push
xor
mov
ret
into
lcall
cmp
dec
in
movsb
rol
repnz
add
loope
pop
sbbb
es
sahf
fimuls
pop
test
mov
aas
and
lds
xor
and
push
lahf
sarl
aam
lods
and
aad
fidivrs
push
push
sub
dec
dec
ret
mov
mov
sbb
lret
repz
in
shlb
aad
push
push
repnz
test
in
ret
inc
lods
cltd
xor
mov
and
xlat
rcr
push
jb
cli
cmc
iret
in
pop
cli
ljmp
jne
popa
mov
inc
jl
mov
xor
or
in
push
ja
pop
cmpsb
dec
js
add
popl
out
outsb
push
js
push
into
sub
pop
dec
jmp
int
xlat
cmp
out
sbb
icebp
and
loop
in
in
lret
stc
fmull
mov
outsl
push
nop
sar
fsubrl
inc
jbe
cmp
sub
scas
xchg
scas
dec
arpl
lret
andb
push
loop
or
push
sbbb
out
dec
ja
dec
in
push
sub
dec
ror
mov
cmp
xchg
dec
mov
pop
adc
out
out
dec
icebp
bound
jle
mov
int
sbb
cmp
inc
push
and
xchg
cmpsb
inc
xchg
push
cmc
mov
mov
sbb
mov
pop
rcll
push
mov
xor
or
jae
jge
mov
lcall
gs
adc
push
mov
dec
jecxz
inc
mov
ljmp
xchg
or
sub
inc
pusha
ss
and
add
inc
imul
mov
das
inc
inc
sahf
test
out
cmp
out
dec
pop
push
cmpsl
jge
xor
cltd
or
xor
repz
aam
push
mov
mov
jb
lret
pop
outsl
subb
inc
mov
push
in
or
xchg
pop
loop
in
push
pop
cmp
or
jg
int3
xchg
mov
dec
push
fwait
mov
sbb
inc
dec
dec
jmp
bound
xchg
and
xchg
fcmovnb
push
push
lret
adc
add
ljmp
and
xchg
pop
and
hlt
jp
pop
rorb
aas
fwait
xor
pop
and
rolb
and
ret
inc
or
gs
jmp
dec
mov
js
mov
cld
mov
lret
mov
hlt
xor
pop
sarl
or
add
mov
cmp
stos
push
and
push
lret
inc
lods
push
lahf
mov
nop
jle
jl
popa
cmovne
xchg
adc
je
push
addr16
cmp
sub
int
xchg
xchg
shl
mov
pop
sub
mov
aad
and
add
jns
and
inc
cmp
shll
adc
add
mov
incl
adc
pop
cltd
mov
xchg
mov
les
jnp
or
add
gs
sub
aas
xor
push
rclb
sub
out
xor
xchg
xchg
inc
cmpl
out
xchg
mov
cmc
test
mov
adc
dec
jp
cmp
fldcw
xchg
mov
and
stos
adc
dec
mov
imul
ficoml
loope
fcmove
fsubs
out
out
into
repz
push
mov
and
bound
outsl
roll
cli
add
pop
dec
dec
popf
push
inc
cmp
mov
mov
arpl
add
jo
rclb
lahf
or
lahf
mov
cltd
push
es
jbe
stos
mov
lsl
lock
iret
fcoms
jle
jo
cmp
pop
lahf
xchg
lret
lahf
push
lock
dec
cmp
adc
aad
cmp
pop
loopne
ljmp
mov
cmp
xchg
int
ss
xchg
loopne
int3
js
into
jecxz
cld
lcall
push
loope
std
mov
rcr
lods
mov
mov
test
outsl
stos
mov
and
loope
push
and
insb
jmp
push
inc
sarb
jge
call
mov
cmp
dec
mov
outsl
hlt
and
jp
rolb
rolb
jae
pop
stos
adc
ret
mov
fimuls
roll
dec
ja
or
push
pop
shlb
mov
push
inc
push
scas
pop
out
xchg
enterw
lock
or
inc
inc
inc
scas
rorb
jno
cltd
mov
cwtl
cmpsb
jmp
sub
daa
aaa
sahf
pop
xor
mov
cld
in
xor
insb
xchg
fdivr
out
rcl
mov
dec
mov
push
ss
testb
sbb
xchg
add
mov
jne
pop
out
fldl
jecxz
fnsave
in
lods
push
xor
mov
adc
pop
into
mov
push
aad
sub
push
inc
xor
push
xor
mov
push
xor
test
or
mov
sahf
push
fwait
sbb
in
out
push
test
lds
stos
mov
mov
jne
pop
popa
sbb
jg
xlat
push
int3
test
movb
mov
mov
lret
icebp
push
sub
lea
push
inc
add
or
out
cmp
cs
jbe
in
lods
call
xor
dec
push
fwait
adc
pop
pop
push
js
adc
dec
mov
sub
xchg
sbb
or
fimull
pop
xchg
dec
cltd
imul
and
addr16
lret
cld
out
fcoms
fisttpl
xchg
icebp
or
fs
and
jbe
scas
inc
fnstsw
jg
es
das
cmp
mov
sub
xor
data16
inc
aam
mov
inc
movsb
sbb
idivb
push
sub
cmp
mov
pop
icebp
and
push
lret
cmp
xor
aaa
xchg
ss
inc
dec
sbb
loope
ret
leave
ficomps
fdivs
adc
or
or
sarb
jmp
adc
and
mov
js
dec
push
pop
jo
cmp
ja
out
js
or
fcom
outsb
xor
stos
lea
xlat
push
xchg
icebp
std
cmp
or
push
lret
dec
out
bound
flds
hlt
lret
inc
push
imul
test
sarb
and
cmpsl
add
xchg
in
jnp
lret
mov
jo
repnz
pop
mov
xor
pusha
adc
jp
mov
add
rcl
inc
mov
adc
dec
les
dec
in
add
ljmp
ja
dec
cli
push
stos
sbb
add
arpl
in
or
pushf
jmp
inc
aas
std
in
adc
pop
jns
xchg
adc
and
cmpsb
pop
cli
mov
jmp
or
sub
mov
stc
outsl
jl
add
push
adc
adc
in
xchg
loop
mov
sahf
mov
adc
add
fs
je
fs
and
mov
xor
shl
in
scas
xchg
aaa
aas
fdivl
push
shlb
jg
jno
mov
adc
out
mov
push
jno
push
jmp
xorl
add
inc
fwait
xchg
pop
dec
jnp
lock
inc
jno
pop
dec
loope
xchg
in
lahf
jge
aas
repnz
xor
push
xchg
pop
push
in
dec
pop
cmc
hlt
scas
fldt
fisubrl
hlt
clc
cmp
mov
cltd
cmp
movsb
sbb
dec
repnz
shrl
ret
sbb
repz
adc
ret
xchg
mov
lods
jg
mov
bound
lds
adc
movsb
adc
mov
mov
pop
int3
test
pop
or
inc
cmc
lods
int3
sbb
inc
pusha
fwait
shll
xor
xor
xor
test
into
cmp
adc
fildl
inc
loop
jmp
mov
rolb
cmp
and
inc
testb
xor
aaa
or
adc
movsl
test
push
push
imul
je
lods
sarb
inc
inc
ret
and
add
mov
adc
out
push
pop
cmp
fsubrs
jo
sub
lods
xchg
mov
push
cmp
lret
xchg
xchg
lret
cmp
jg
push
xor
loop
daa
iret
rcr
div
test
xor
roll
mov
lret
or
jo
pop
adc
jbe
out
xlat
mov
push
adc
repnz
mov
outsl
inc
in
ret
lcall
ror
sahf
push
or
xor
ret
add
inc
movnti
dec
and
xchg
inc
lea
faddl
cmp
test
mov
add
out
loope
xchg
cmc
in
adc
fsubr
xchg
inc
ds
test
mov
dec
sbb
mov
cmc
xor
dec
mov
ret
aaa
inc
cmpsl
stc
push
popa
and
jns
fsub
cmpsl
call
sbb
push
loope
add
xor
aas
xchg
enter
or
xor
mov
loop
jae
mov
mov
mov
jmp
les
jbe
out
pop
pushf
aaa
aaa
mov
xor
enter
test
test
cltd
lret
andl
sub
loope
test
xorl
cmpxchg
or
repnz
inc
lods
pushf
adc
das
add
push
and
loop
push
cmp
cld
mov
mov
xor
jg
adc
adc
lret
rclb
fldt
jno
scas
andl
inc
lcall
pop
inc
lock
adc
out
mov
add
hlt
test
lcall
pop
std
pop
int
lds
notb
inc
sub
jge
inc
and
sbb
test
fists
aas
lock
mov
inc
sbb
push
jmp
sub
ret
daa
dec
test
add
push
call
add
call
jg
mov
mov
movsb
jne
xchg
scas
mov
jne
lea
sub
and
movsb
sbb
sbbl
mov
mov
popa
sub
mov
pop
arpl
mov
sub
push
loope
inc
and
stos
stos
or
cmc
mov
cmp
sub
sub
sbb
in
addl
xchg
stos
aaa
inc
enter
shrl
lds
cmp
push
rorb
fmul
mov
sbb
and
shrl
addr16
addl
dec
es
mov
clc
or
divl
push
push
cmpsb
xchg
inc
or
ljmp
sbb
fidivrl
stos
stos
pop
insb
inc
lahf
pop
pop
xor
jg
mov
call
arpl
mov
inc
dec
dec
rsqrtps
jne
sahf
adc
jb
cmpsl
mov
sub
dec
cmp
lahf
fs
adc
sub
pop
add
mov
sti
mov
jno
and
xchg
mov
mov
and
js
ret
lcall
cltd
pusha
ret
icebp
rclb
xlat
push
lds
aam
and
jo
push
xchg
fsubrl
lock
rcll
xor
dec
mov
ss
xor
inc
push
addl
push
ret
sub
pop
lea
roll
add
in
push
push
jo
dec
fisttpl
adc
insb
or
push
mov
mov
jno
sbb
push
loopne
mov
aaa
pop
stos
xor
pop
test
or
outsb
lock
into
add
popa
fwait
das
mov
imul
or
or
mov
sbb
enter
arpl
dec
push
subl
shll
xchg
stc
or
dec
add
cmpsb
sbb
mov
xchg
push
divl
outsl
cmp
jb
jg
jmp
adcb
fistpll
les
dec
lds
cmpsl
mov
stc
ud0
aas
in
rcrb
mov
xchg
mov
mov
repz
insb
lock
cmp
dec
test
sub
loope
stc
in
out
fs
jle
stos
cmp
ds
cwtl
sub
mov
mov
sbb
add
push
and
lahf
aam
and
loopne
pop
jle
addr16
pop
cmp
or
xlat
and
sub
and
aad
mov
lock
in
push
adc
adcl
inc
mov
xchg
cmp
cmc
or
mul
push
add
call
outsl
test
scas
mov
out
out
dec
adc
xchg
add
push
icebp
and
cmp
into
fcomp
ret
push
push
loop
pop
into
leave
pop
andl
xchg
es
lcall
or
lret
sub
sub
fadds
sub
lret
ljmp
popa
or
into
mov
sbb
imul
cmc
mov
loope
dec
int3
popf
repnz
clc
imul
sti
inc
lret
bound
icebp
and
pop
xchg
fisubl
sbb
in
je
xor
push
jge
xor
and
js
testb
xor
or
and
in
mov
movl
cmpsb
rcl
mul
cs
lods
das
mov
sbb
fstl
cltd
test
dec
xchg
or
jp
adc
jo
cmpb
push
scas
sbbb
inc
jo
mov
sbb
lcall
jecxz
sbb
pop
mov
pushf
fidivrs
aad
jbe
cmc
and
call
xlat
xor
xor
mov
bound
sub
jl
adc
xchg
inc
mov
push
add
test
and
inc
cmpsl
cltd
and
push
ret
into
push
cwtl
jg
xchg
fwait
pop
out
fdivrl
insb
repnz
repz
test
rol
adc
push
icebp
cwtl
call
fnsave
add
fcmovnb
cmp
cs
scas
add
test
js
pop
insb
or
lods
sub
push
sbb
and
inc
xchg
jns
and
push
mov
pop
shrb
enter
ljmp
sub
pop
nop
aam
mov
xchg
lret
sbb
adc
pop
mov
xor
out
sub
aas
subb
cmp
lret
jge
xchg
sbb
jmp
sarl
add
sbb
push
scas
mov
lahf
lds
cmp
and
in
divb
pop
pop
or
pop
pop
and
fbld
or
pshufw
cmp
adc
imul
add
ja
shl
test
pop
mov
mov
mov
fcoms
jg
insb
mov
in
or
cmpsl
rcpps
arpl
or
sahf
lahf
test
xchg
xor
decl
sub
dec
pusha
loope
jb
add
cmp
ds
jl
inc
push
mov
rolb
inc
lcall
sbb
jo
clc
mov
xchg
loop
pop
pop
lods
jbe
push
testl
inc
movsb
or
les
into
mov
mov
mov
lret
leave
ds
add
sub
ss
mov
mov
adc
xchg
stos
inc
das
fisttpll
push
mov
push
icebp
mull
add
xlat
fsts
mov
divb
mov
jp
ret
out
adc
mov
loop
push
mov
cmpsb
dec
jmp
js
or
mov
mov
pop
stc
cli
scas
ja
int
push
leave
jbe
hlt
or
loopnew
push
mov
cmp
leave
and
scas
cs
cwtl
das
pop
mov
mov
pop
fadd
sub
pushf
push
lods
les
pop
pop
cld
loope
inc
add
das
jbe
and
scas
sub
jno
in
add
jae
stos
or
add
mov
adc
inc
mov
cmp
mov
push
adc
ret
push
sub
xor
stos
hlt
lcall
das
sub
sbb
andl
add
scas
in
shrl
call
pushf
sub
and
mov
sti
in
mov
int
cmc
jb
jge
pop
daa
jle
lcall
xchg
sbb
dec
adc
in
cmp
sub
sti
mov
push
add
fidivrs
andb
sbb
adc
jno
xchg
aad
jle
jecxz
push
fldenv
jns
push
imul
mov
sbb
aas
cmpsl
rcrb
push
fsubrp
ljmp
lea
aas
dec
or
xchg
xor
adc
pop
push
mov
ljmp
gs
or
into
popf
ljmp
icebp
push
scas
xchg
mov
nop
mov
cmp
data16
jb
inc
mov
jae
gs
cmp
and
xchg
ret
sbb
imul
fbld
sti
lds
mov
mov
sahf
sbb
cmp
pop
jo
mov
mov
enter
enter
loope
loop
call
jmp
sbbb
xchg
insl
pop
and
loop
mov
sbb
or
fistps
jnp
jb
xchg
xor
cwtl
mov
aam
ret
mov
mov
xchg
rorb
addr16
pop
add
andb
cmp
fcomi
lds
mov
pop
dec
test
stos
mov
mov
inc
mov
dec
pop
ljmp
outsb
icebp
push
or
stos
leave
imul
inc
add
fwait
scas
hlt
mov
aad
fsubr
inc
pop
cwtl
inc
add
jne
inc
mov
jae
push
lock
push
add
jnp
leave
add
dec
sbb
jle
mov
mov
mov
pop
cmp
pop
nop
fnstenv
add
lret
cmp
addr16
xor
cmp
insb
movsl
test
mov
mov
mov
loope
or
lret
xor
ficomps
jp
mov
xor
je
rorb
or
das
lret
aaa
popa
scas
stos
pop
add
and
pushf
sub
mov
data16
lock
je
push
shr
inc
push
sahf
data16
out
cs
addr16
push
inc
pop
jnp
adc
gs
shl
mov
adc
push
enter
mov
test
repnz
pop
ror
dec
or
xchg
or
inc
mov
hlt
aas
ror
cld
movsb
movsl
arpl
rolb
xlat
sub
jp
in
add
pop
xor
insb
jl
and
push
mov
add
cmp
push
fidivrl
and
cmp
xor
dec
sbb
jl
sbb
cmpsb
hlt
dec
ret
or
iret
cli
lahf
push
xor
mov
into
mov
mov
fsubrl
pusha
xor
aad
stos
ror
rol
sbb
xchg
test
incl
out
mov
mov
add
sti
out
sbb
mov
mov
and
sarl
js
inc
test
ljmp
inc
jb
adc
pop
sub
in
xchg
lods
dec
cmpsb
and
dec
rclb
mov
or
sub
jne
and
aas
aam
mov
pop
push
aad
jne
mov
or
in
aam
mov
or
enter
shlb
xchg
out
pop
rcl
mov
loopne
cmp
xor
imul
cmp
inc
mov
xor
xor
add
or
movsl
test
mov
mov
add
dec
sbbl
mov
leave
jg
mov
sub
sbb
or
sbbb
ja
sub
cmp
mov
and
ljmp
cwtl
mov
sarb
aam
test
xor
jo
fdivrs
movsl
gs
mov
push
cmp
nop
inc
cwtl
cmpb
push
out
dec
sbb
pop
aam
lds
ds
adc
or
jecxz
xchg
out
push
and
xchg
adc
mov
jb
cmpsl
pushl
xor
fidivrl
adc
lcall
jne
test
cltd
adc
sbb
mov
cli
inc
movsl
inc
lds
fistpll
mov
adc
xor
push
sbb
xchg
mov
or
daa
imul
outsl
in
mov
arpl
pop
sub
bound
ds
or
mov
jl
inc
inc
xchg
loope
insl
lcall
loop
fadds
testl
roll
or
int3
push
shrl
or
mov
into
nop
add
sbb
inc
mov
ds
mov
lcall
cmp
mov
dec
jo
call
into
mov
pop
cltd
dec
ret
push
push
dec
jmp
loop
test
shr
dec
enter
pusha
mov
cli
push
lods
adc
pop
xchg
mov
je
sub
test
pop
data16
xor
es
aad
jnp
add
dec
jmp
clc
inc
xchg
test
cltd
or
xchg
add
pop
or
adc
mov
mov
mov
sbb
fildll
lods
clc
fucomip
cli
cmp
icebp
sbbl
mov
push
and
sarb
jecxz
sahf
mov
dec
xchg
mov
test
popa
fimull
nop
leave
dec
pop
mov
insl
and
jecxz
sub
xchg
jae
adc
out
jmp
mov
mov
mov
xchg
repnz
pop
pop
jmp
mov
fsub
pop
pop
aam
stos
in
cltd
jne
insb
fwait
add
cwtl
mov
xchg
mov
xor
movsb
fidivl
rcr
jge
mov
or
stos
dec
call
push
repnz
repz
loope
jae
and
or
xor
out
fwait
mov
xchg
std
imul
not
ljmp
loopne
das
cwtl
dec
add
fisttpl
into
xlat
mov
stos
pop
add
inc
push
xchg
push
push
xchg
adc
xor
dec
or
ret
test
hlt
jnp
sbb
cmpsl
cli
xchg
sub
inc
jns
ret
xor
cmpsb
ficoms
mov
lea
ljmp
sub
jmp
xor
je
bound
adc
sbb
add
jb
das
push
jae
xchg
rcll
mov
lcall
mov
in
gs
loop
das
cmp
rol
inc
fisttps
cmp
leave
sbb
xchg
jo
xor
inc
je
data16
in
ljmp
test
inc
and
icebp
push
movsl
les
mov
rcll
fbstp
inc
cmpsl
ss
pushf
xlat
bound
mov
dec
xor
push
jle
push
arpl
arpl
insb
jns
imul
imul
xor
push
int
ficoml
push
int
push
cli
sbb
push
dec
es
push
mov
xchg
push
je
fstpt
adc
enter
out
fsubrp
aad
repz
xchg
mov
push
push
add
lods
pop
mov
adc
mov
movsl
mov
int
les
imul
outsb
in
pop
das
loop
mov
xor
dec
leave
mov
inc
mov
montmul
cmpsb
inc
les
sbb
mov
aas
sub
pop
loopne
or
mov
mov
push
lahf
add
jnp
sbb
sub
out
adc
es
or
lahf
ljmp
push
pop
sub
pop
push
sub
dec
mov
cmpsb
hlt
lahf
jns
or
push
je
daa
into
clc
insb
adc
add
jbe
loop
sub
push
sti
jge
fistpll
pop
and
and
push
testb
mov
into
adc
jg
sarl
out
roll
pop
push
xchg
inc
pop
sub
mov
arpl
out
sbb
inc
add
jp
lahf
jne
pushl
cmp
jo
cltd
lds
cmc
leave
shll
into
test
scas
call
ret
pop
pop
aaa
cmp
cmp
movsb
adc
add
mov
cld
sbb
popa
push
or
call
pop
cmp
aad
mov
std
mov
sbb
icebp
dec
inc
insb
pop
or
ret
jmp
in
lods
xchg
mov
jmp
adc
dec
add
pop
push
bnd
fcmovnu
gs
mov
mov
fs
aad
cmpsb
orl
insb
jb
fildll
sbbb
data16
loope
cmc
mov
cmp
dec
popf
mov
sbb
push
loope
js
lea
insl
aas
jb
jb
int3
shrb
fisubs
adc
push
orb
add
in
jo
jmp
cmpsl
push
inc
aaa
repnz
shl
out
inc
in
test
insb
jle
mov
adc
js
adc
cli
jp
mov
push
push
jge
pushf
inc
stos
gs
sub
fistpll
push
fdivp
into
inc
stos
rorl
add
in
or
cmp
mov
adc
lds
adc
test
cltd
call
call
pop
push
movl
mov
loop
pop
out
cwtl
into
lods
jle
lds
fsubl
mov
imul
bound
jb
pop
push
int3
pop
mov
and
gs
faddl
movsl
scas
aam
repz
mov
clc
mov
jbe
test
ds
enter
fisttpll
mov
imul
lret
fimuls
in
les
pop
sbb
mov
and
testl
cli
popa
test
mov
add
insl
aaa
add
sub
sbb
cli
xchg
rcrl
repz
pop
add
mov
or
mov
sbb
jecxz
xor
xor
loop
jge
mov
lea
jl
push
jle
push
xchg
cmpsl
adc
jg
cwtl
dec
idivb
push
mov
ljmp
xchg
mov
imul
pop
push
sarb
mov
hlt
sbb
jle
stc
or
and
inc
mov
lahf
sbb
fcmovu
inc
mov
cmp
scas
dec
cli
mov
decl
xor
shrl
cmpl
mov
cld
xchg
adc
fimuls
je
pop
ljmp
fisttps
pop
stos
dec
nop
dec
add
cmp
insb
inc
dec
mov
mov
sbb
imul
or
aaa
adc
repz
mov
inc
fxch
xchg
stc
mov
sub
lret
push
inc
lret
adc
pop
adc
cmp
in
fstpt
cmpsl
jmp
jo
shll
popf
jmp
mov
mov
loop
int
push
dec
ss
cli
cld
xchg
shl
adc
cld
lods
mov
int
das
jbe
xchg
lods
std
xchg
cmp
inc
inc
lds
mov
push
rolb
push
push
dec
data16
jmp
xor
push
push
sub
jge
insl
cmp
lahf
cmp
ficomps
push
fstl
sbb
add
inc
cwtl
cmp
fdivs
sbb
cmp
nop
or
jo
shlb
mov
into
mov
cs
ja
pop
les
sub
cltd
fistl
fsubr
push
test
into
jb
aam
cli
inc
push
rcl
jno
lock
lock
jp
xchg
jmp
out
addr16
add
stos
fistpl
cli
dec
pmulhuw
jle
xor
cmp
stos
lds
jg
in
or
fdivp
lret
add
stos
dec
sub
scas
dec
int
cli
in
sub
leave
dec
mov
jno
negl
lea
mov
int
rorb
pop
xor
outsb
lods
xlat
or
add
jle
lret
in
cmpsl
sbb
jp
repz
test
mov
jno
lcall
adc
iret
add
rcrb
outsl
mov
xor
jl
cmp
jnp
pop
xlat
pop
imul
cmp
roll
out
adcl
inc
inc
inc
std
xchg
mov
cmpb
xchg
addr16
fnstsw
fldl
fisttps
sub
sbb
add
xor
out
xor
insl
mov
cmp
std
ss
stc
add
push
inc
mov
or
inc
mov
jne
test
push
movl
sub
sub
cmpsl
fnstsw
jo
inc
mov
mov
mov
sub
cwtl
inc
sub
mov
jo
mov
ljmp
out
mov
mov
xrelease
fisubrl
subb
mov
cmp
jmp
lods
inc
or
jns
mov
xchg
xor
andl
cmp
jo
mov
ret
adc
sub
pop
mov
rclb
out
lahf
pop
adcl
pop
es
cmpl
into
jge
clc
mov
sub
scas
inc
jmp
or
jo
add
pop
push
jne
test
dec
mov
lock
insl
cmp
lret
sub
in
icebp
adc
lds
rolb
test
loop
jmp
adc
push
fnstsw
flds
xchg
jne
or
xor
mov
jle
mov
and
inc
aam
rclb
loope
out
dec
mov
inc
lock
leave
fcomps
cwtl
aaa
movsl
fcom
and
insb
aaa
pop
xchg
shrb
subb
and
shrl
pop
scas
clc
adc
push
int3
inc
push
negl
dec
dec
fwait
xorb
sub
andl
insb
dec
icebp
movsl
aad
add
xchg
or
jl
lods
or
in
adc
test
movsl
xor
inc
sub
cmp
repz
jle
jns
jno
movsl
pop
xor
add
pushf
sub
adc
dec
ret
fs
faddp
fwait
insb
push
adc
pop
and
fdivrs
mov
in
stos
sbb
mov
push
and
jb
xor
int
popa
stos
add
call
push
jge
std
sbb
xchg
sti
dec
jne
mov
hlt
shr
jae
iret
mov
repz
test
dec
cltd
push
nop
push
mov
mov
sbb
pop
xor
jmp
in
jmp
daa
pop
outsb
add
mov
lods
fidivrs
xor
cmp
xchg
xchg
insb
test
pop
adc
fsubr
xchg
repnz
lret
dec
nop
dec
nop
mov
cmp
rol
jecxz
outsl
sarb
cwtl
jne
xchg
aam
test
pop
outsl
fsub
mov
sarb
jp
jp
popa
jl
jg
xor
stc
jmp
mov
test
or
in
test
int
call
push
push
push
mov
add
das
and
xchg
pop
idivb
rorb
popa
push
pop
in
inc
mov
cmpsb
cmpsl
push
call
jp
or
xchg
lods
xor
xchg
movsb
mov
std
push
sti
cmp
ffreep
sbb
fmuls
xor
dec
fiadds
and
sarb
jb
stos
dec
les
jle
ror
stos
aad
jb
sbb
sub
inc
ret
fs
imull
test
jns
das
adc
nop
rcrb
jl
sarb
lahf
jae
pop
outsb
lea
sti
jle,pn
out
cmp
push
dec
mov
pushf
dec
sar
push
test
add
std
fldcw
pop
fidivl
inc
dec
imul
outsl
nop
pop
cld
fldenv
or
es
xor
stc
in
dec
insl
sbb
or
dec
sti
sahf
in
cli
adc
hlt
inc
mov
mov
sahf
test
cwtl
add
mov
pop
and
mov
cmpsl
out
push
or
sbb
push
rorb
fadds
enter
dec
add
push
cwtl
dec
cmpsl
or
mov
xor
pop
xlat
push
shl
jnp
stos
add
cmpl
or
jecxz
jne
xor
cmc
inc
hlt
sbb
xor
mov
dec
sub
nop
test
cmp
mov
bound
xchg
pop
and
cmpsl
mov
mov
fs
es
push
test
mov
data16
cwtl
outsl
cmpxchg
adc
inc
lret
mov
pop
scas
adc
dec
and
js
arpl
popf
push
popa
fwait
mov
data16
xchg
mov
es
out
and
ja
xor
or
jl
jge
push
inc
test
test
push
fs
mov
jne
and
mov
cmp
clc
loop
das
push
in
and
adc
push
dec
in
mov
add
pushf
test
popf
rcr
inc
sbb
jae
adc
jno
ret
and
js
stos
es
js
adc
cmpsb
sbb
std
dec
mov
and
inc
add
push
inc
jbe
cwtl
lock
adc
mov
mov
pop
sbb
lret
pop
jae
repnz
arpl
scas
mov
fwait
ret
inc
stos
jmp
inc
popa
test
fs
adc
rcrl
addb
sbb
gs
mov
inc
xorb
xchg
fistl
cmp
mov
das
jge
bsr
out
js
into
xchg
fistl
das
xor
jle
pushf
movsl
mov
mov
bound
xchg
clc
nop
jns
out
stos
fisttpll
mov
sub
fcoml
or
mov
fnstcw
fdivs
test
sub
movsl
fiadds
psubsb
cs
jne
lock
sub
idivb
xchg
shll
outsl
mov
pushf
or
xchg
sub
sbb
pop
xchg
lret
decl
sub
stos
les
je
push
lods
cltd
xorb
mov
int3
sbb
lods
fiadds
or
popf
xorl
and
mov
loopne
jb
es
fs
imul
cwtl
inc
xor
mov
ja
jmp
call
push
js
add
loopne
pop
jmp
inc
xchg
out
fs
mov
cwtl
jbe
cmp
imul
adc
push
inc
xor
adc
xchg
int3
rcll
addl
int3
inc
xchg
lods
fxch
inc
movsb
dec
xchg
add
jnp
xchg
fcomip
jo
push
xchg
push
stc
je
pop
pop
int
loop
xor
aad
scas
push
sahf
popf
and
shll
imul
jns
cltd
push
sbb
cmp
enter
inc
cs
scas
clc
dec
jge
lds
mov
push
iret
jns
add
or
add
push
sbb
push
lds
ja
adc
test
adc
cmp
pop
mov
test
frstor
mov
dec
and
jo
mov
lahf
xor
mov
cmpsl
inc
sahf
adc
mov
xor
lea
jae
or
push
cmp
inc
xchg
mov
imulb
and
jg
rol
push
rclb
out
xor
fwait
lahf
lea
rclb
jbe
mov
sti
das
shll
stos
mov
out
push
fnsave
aaa
mov
popa
in
lock
add
xchg
scas
xchg
and
dec
fnstsw
in
cs
sarl
mov
cmpsl
sbb
aam
xchg
inc
or
xor
scas
cli
cmp
ret
fs
hlt
enter
push
arpl
push
jge
jmp
insb
sahf
mov
cmp
jbe
lret
ljmp
lcall
mov
in
push
lds
addl
pop
or
push
notb
dec
movsbl
or
pusha
in
cld
add
in
dec
and
inc
push
push
std
add
inc
std
push
dec
and
in
xchg
inc
jmp
fxch
bound
movsl
mov
fcmovnu
push
js
ljmp
out
lds
pop
ss
nop
cli
and
mov
aam
lods
push
dec
fildl
mov
fsubr
push
ret
nop
stc
cmp
fwait
outsb
fsubl
jp
mov
fldcw
pop
loop
sub
pop
aaa
in
in
push
inc
dec
aam
test
lods
push
sar
xlat
xor
pop
xchg
mov
rorl
cli
inc
clc
mov
xchg
cmp
ffree
cmp
lea
test
and
imul
sbb
cs
jg
pop
push
std
test
lahf
pop
mov
test
mov
xor
or
jge
hlt
or
pop
dec
pop
push
ljmp
loopne
xchg
sub
data16
xchg
or
pop
pop
pop
push
push
addl
sahf
inc
xor
scas
jnp
xchg
push
cmc
adc
out
shl
lods
popa
mov
notl
cmp
xchg
push
mov
sub
je
sub
pop
xor
aaa
mov
sbb
cltd
and
jb
hlt
or
mov
or
stc
jle
mov
insb
shll
lahf
in
sti
mov
adc
inc
sahf
push
mov
loopne
add
test
add
mov
push
push
inc
in
adc
push
and
jl
push
leave
or
fcomip
aad
sub
xor
sti
mov
lret
aaa
push
repz
lock
ret
xlat
inc
xor
ficoml
cltd
and
push
xchg
fdivl
test
filds
lods
repnz
jns
sub
mov
and
xor
fidivrl
stos
pop
add
xchg
xor
cmpsl
pusha
adc
dec
or
xor
adc
dec
dec
stc
imul
clc
mov
jmp
cltd
dec
sbb
inc
movsl
inc
inc
cwtl
call
cmp
adc
mov
leave
fistpll
clc
gs
push
leave
stos
rep
gs
notb
out
jge
adc
mov
out
test
xor
imul
or
cltd
cmp
js
das
imul
push
scas
and
cmpsb
pop
sub
data16
imul
ret
iret
inc
lds
addr16
add
add
inc
pop
mul
cli
js
dec
pop
mov
das
inc
ret
xchg
xor
inc
sub
push
nop
xor
xor
pop
mov
movsb
mov
sbb
shll
test
iret
adc
and
xchg
inc
testl
jbe
jge
push
nop
in
push
int
or
mov
push
fidivs
sbb
mov
int
jg
adc
and
cmp
imul
andl
addr16
adc
and
pushaw
mov
je
movsb
push
icebp
or
and
std
aaa
lcall
dec
cwtl
sbb
shrb
in
add
imul
adc
fistpl
stos
rcrb
jmp
cmpsb
dec
loope
lds
aam
andb
jmp
les
leave
push
sub
jno
and
popa
std
fs
iret
jecxz
jbe
gs
xlat
mov
dec
jge
jp
or
adc
fwait
incl
lea
dec
mov
or
sbbl
insb
fwait
jle
out
pop
inc
arpl
inc
dec
adc
fldt
out
pop
xor
repnz
rcrl
aam
cmp
cmp
mov
lods
pop
cmp
in
sar
fidivrs
into
testb
dec
xchg
sub
xor
add
mov
pop
movsb
and
mov
push
shlb
or
pop
adc
aam
in
sbb
sbb
jp
inc
cmp
test
cwtl
jmp
nop
push
adc
bound
stos
inc
mov
shrl
imul
imul
pop
adc
iret
rcrb
sbb
sahf
jne
test
and
mov
sti
inc
push
xchg
or
mov
push
pop
dec
repnz
mov
fstpl
xorl
dec
fucomi
cmc
lret
jnp
out
or
dec
dec
dec
mull
cltd
mov
push
in
fldcw
or
lret
cltd
in
jge
cmpsl
fstps
dec
adc
jp
enter
jns
lret
aad
stc
jge
scas
dec
jne
cli
addr16
adc
sbb
call
cwtl
jmp
sbb
cld
xchg
jne
arpl
pop
and
inc
jge
test
push
mov
lods
push
ret
mov
aad
mov
inc
dec
addr16
outsb
push
lods
cmp
push
or
jg
ss
adc
xor
cmc
mov
mov
mov
bound
js
and
jo
or
push
and
call
das
aaa
or
fmulp
and
or
pop
xor
lods
jl
pop
xor
xchg
push
jo
cmpsl
pop
cmpsl
jae
iret
je
mov
in
lds
jno
cmp
mov
inc
clc
arpl
sub
or
daa
pop
jo
cld
cmp
jecxz
fstpt
xchg
sub
dec
bound
aam
inc
mov
aad
jmp
add
notb
jnp
inc
hlt
and
enter
mov
fmuls
xchg
gs
dec
sbb
test
sub
lahf
pop
jle
int
cmp
daa
adc
dec
repnz
sbb
adc
mov
fldcw
push
dec
insl
test
aaa
rcl
mov
dec
sub
xlat
addr16
sahf
add
cltd
and
push
dec
sub
mov
out
rcll
scas
mov
cmp
test
xchg
cltd
dec
dec
jnp
popa
ret
clc
ds
icebp
test
mov
sub
mov
leave
adc
push
xlat
pop
push
xchg
sahf
pop
ja
add
jg
push
dec
arpl
jl
out
push
cli
movntps
push
push
daa
rolb
cmp
inc
adc
ljmp
mov
or
cli
push
mov
mov
dec
add
movsb
add
xchg
cmpsl
test
add
jae
xor
and
pop
cld
insl
loope
dec
dec
int
sahf
arpl
lret
jge
jae
cmpsl
xchg
adc
sub
enter
add
mov
mov
sbb
out
jmp
mov
loopne
jge
xchg
dec
push
test
cmp
xchg
pop
mov
jecxz
and
xor
dec
icebp
repnz
dec
fwait
insl
arpl
mov
jb
jmp
lahf
xchg
leave
adc
fdiv
ljmp
and
ja
mov
jne
jl
or
add
sub
ja
adc
and
xlat
inc
and
dec
push
mov
roll
test
inc
mov
mov
loop
pusha
xchg
adcl
or
bound
popa
jo
or
out
ljmp
bound
mov
fildl
xchg
in
or
cmp
jle
sti
inc
notb
lods
mov
add
mov
fldenv
adc
out
jb
ss
cmp
test
add
incl
or
stc
stc
add
lock
push
mov
push
fmull
aad
pop
clc
mov
mov
mov
into
xor
jns
add
jle
dec
ds
lods
je
push
xor
addr16
outsl
dec
xchg
fnstcw
inc
lea
shl
mov
in
or
out
push
in
lods
daa
enter
sbb
aad
loop
lock
ja
mov
inc
cmpsl
in
pushf
fld
adc
les
outsb
daa
dec
dec
in
das
in
sbb
mov
lods
sbb
mov
or
cmc
push
push
pop
flds
lock
dec
xchg
mov
mov
scas
fiadds
das
pop
jbe
add
lret
jmp
pop
divl
sub
test
pushf
lcall
aaa
in
outsb
repnz
inc
dec
cmp
cmp
insl
push
push
sub
cmpsb
cmp
pop
ficoml
jmp
pop
je
sbb
orl
stos
test
jne
mov
sbb
arpl
stc
andl
js
pop
stos
sbb
xchg
nop
mov
pop
pop
out
out
stos
mov
call
adc
mov
push
andl
int3
dec
add
push
arpl
mov
xchg
add
xchg
sub
out
push
fistl
sarl
repz
movsb
out
cli
push
in
mov
cmpsb
xchg
icebp
ds
fcompl
pop
and
mov
lahf
pop
cmp
test
outsl
fdiv
jo
test
sar
inc
mov
push
stos
adc
xchg
fldl
repz
ja
out
aaa
cwtl
jmp
popf
push
jg
in
fidivrl
xchg
xor
sub
dec
jae
fst
sahf
jnp
mov
mov
push
nop
mov
cld
jbe
mov
inc
loope
cmc
mov
fwait
dec
leave
incl
out
orb
xchg
test
fisubl
pop
repz
pop
icebp
scas
xchg
lock
movsl
sahf
aam
mov
aam
lret
mov
jecxz
js
fcoms
add
sbb
repz
stos
cmovo
scas
adc
test
push
data16
pushf
loope
xor
mov
into
aam
adc
sbb
or
in
dec
fiaddl
sub
dec
mov
jecxz
lahf
sbb
mov
cmpsl
xchg
sub
out
xchg
sub
fstpt
dec
xchg
test
adc
dec
out
icebp
dec
mov
sub
lret
xchg
aas
outsl
adc
jge
and
jae
sub
pop
push
mov
push
cmpl
mov
inc
add
add
aas
orl
sub
leave
jns
push
or
incb
out
sub
cmp
test
inc
arpl
or
add
push
push
add
decb
mov
lods
pushf
nop
add
shr
sub
clc
ret
fwait
and
xchg
xchg
ret
andb
aad
sbb
cmp
fidivl
push
add
push
xorl
fdiv
shlb
nop
aam
inc
js
or
xchg
cmpl
mov
add
mov
push
fistl
mov
scas
sahf
push
inc
repnz
pop
cmp
dec
jnp
dec
fstpl
push
bt
pop
repz
movsl
mov
das
fs
inc
arpl
loope
icebp
push
add
and
fldt
out
je
testl
add
out
imul
mov
sub
int3
push
fwait
inc
shl
dec
push
cmc
xchg
jb
sub
test
sub
lods
jecxz
or
or
push
call
cmpsl
pusha
aad
cmp
inc
and
sbb
jmp
mov
jle
fwait
xor
pop
dec
mov
data16
dec
shl
lea
dec
push
jg
adc
lret
mov
adc
bound
outsl
xor
pop
and
jp
add
loope
test
pop
cs
sbbb
mov
inc
sbb
and
inc
mov
cmp
ret
mov
pop
inc
lds
cwtl
sbb
movsb
scas
mov
push
mov
test
mulb
adc
sbb
leave
mov
push
inc
push
into
jecxz
pushf
iret
xlat
imul
leave
xchg
cmp
fwait
enter
cmpsl
sti
and
lret
push
int3
sub
ret
ljmp
fs
aas
jb
mov
outsl
dec
jecxz
adc
push
xchg
pop
sub
add
aam
pop
dec
lret
push
pusha
aad
mov
xor
cmp
dec
stos
mov
xchg
adc
popa
mov
and
mov
dec
lods
xor
push
aam
or
into
cmc
pushf
popa
mov
jns
jmp
push
cmpl
aaa
pop
inc
mov
inc
sbb
cmc
jbe
xchg
sub
cwtl
pop
mov
inc
xor
xor
xchg
jle
push
mov
aam
add
dec
mov
inc
xchg
incl
push
jmp
sbb
fwait
stos
lahf
jbe
adc
iret
cmp
fstps
xor
and
pop
and
aas
cld
gs
je
cmp
lock
into
popa
sarb
sti
xor
test
bound
mov
pop
mov
ucomiss
insb
mov
js
jg
cwtl
test
inc
pop
mov
popf
dec
mov
lods
in
or
repz
mov
xchg
testl
sbb
repnz
dec
jp
xchg
add
imul
lock
test
shrl
lods
cmp
xchg
cmpsl
cli
xchg
imul
aas
adc
pop
int3
cmpsb
loop
add
popf
pop
add
sbb
addl
jne
outsb
cmpsb
xchg
pop
sbb
incl
cmp
dec
and
lds
rcrb
arpl
push
rclb
adc
arpl
stos
pusha
popa
lret
xchg
push
out
les
inc
movsb
mov
lea
call
adc
pop
fcomps
arpl
pop
mov
fdivrp
data16
icebp
fsubrs
and
test
sbb
sarl
mov
jo
imul
mov
dec
rclb
adc
push
and
inc
mov
pop
out
inc
mov
pusha
cmp
xor
rcrl
push
movsl
cmp
or
xor
in
js
add
jecxz
or
pop
jmp
popa
mov
jnp
adc
jne
mov
bound
xchg
aam
xchg
out
jmp
push
fdiv
dec
dec
sub
mov
pop
dec
imul
add
xor
stc
cmp
sahf
inc
mov
mov
mov
and
cmp
nop
das
jge
inc
push
or
ret
sub
aam
popf
mov
lea
and
stos
in
test
fstpt
jae
adc
pop
xor
rorb
xor
and
jecxz
jae
add
mov
add
fstpl
and
adc
or
cmpsl
inc
mov
push
inc
pop
pop
mov
stos
push
push
addr16
adcb
cld
or
fadd
dec
xchg
nop
loope
dec
fnstenv
loope
bound
cmpsl
add
pusha
sahf
or
xor
fildl
cli
cmp
jmp
sti
add
out
add
or
insb
sbb
dec
and
mov
adc
dec
into
ffreep
push
dec
in
aad
cmpsb
xor
in
in
xor
daa
lret
mov
push
cmp
sub
addr16
push
cmp
pop
lcall
call
push
imul
out
adc
adc
pop
pop
xor
add
cmp
push
xorl
cmp
pop
sub
mov
jnp
pop
into
dec
cmp
ja
aad
and
or
testb
jno
clc
nop
pop
add
movsb
jno
mov
mov
cs
aas
cli
nop
cwtl
mov
adc
sub
jmp
sub
add
test
call
jae
cmp
xchg
and
cwtl
daa
jnp
pop
inc
and
repnz
push
leave
lds
test
mov
rcl
jp
mov
pop
add
lret
pop
sbb
fbstp
dec
xchg
shrl
push
aam
xchg
inc
popw
inc
fwait
mov
ja
add
dec
aam
jne
mov
fsubrs
mov
xorl
sub
out
jns
push
and
pop
pop
int
pop
test
bound
mov
fs
or
repz
lea
xor
or
lock
mov
invd
jecxz
lret
add
pop
push
cmp
adc
repz
pop
mov
push
cld
cs
or
ljmp
ja
xchg
add
fdivrp
push
mov
mov
xor
shrl
sub
or
shrl
and
in
fistps
sub
ljmp
pop
mov
add
pop
xchg
idiv
adc
cmp
mov
jmp
jmp
loop
stos
lds
sbb
push
cmp
cld
iret
ret
or
cmpsb
dec
fadds
scas
pop
cmpb
jbe
stos
jecxz
ljmp
in
int3
mov
sub
in
mov
mov
and
mov
gs
fwait
sahf
pop
sbb
jb
or
lea
ret
inc
adc
imul
adc
lds
mov
cmp
nop
push
aas
test
mov
mov
mov
sub
push
ret
jbe
ficoms
addr16
xor
push
aam
cmp
lods
dec
push
xchg
or
mov
je
into
mov
dec
adc
pop
loope
mov
insl
decl
ret
sub
mov
je
notb
out
movsb
adcb
jb
jge
and
cmp
rcll
ja
test
adc
push
push
xchg
fcom
inc
and
push
inc
and
lods
inc
add
jmp
sub
adc
mov
insb
out
or
and
das
xchg
int3
pop
cmpb
shll
xchg
dec
lock
push
sub
dec
stc
xchg
pop
aad
adc
ret
cmp
sub
inc
adc
xor
or
mov
jmp
icebp
mov
out
in
enter
push
push
mov
mov
dec
sub
sbb
ror
loopne
or
cmp
adc
out
inc
push
push
mov
fcomps
or
iret
stos
icebp
lds
and
cmc
jo
mov
push
aaa
loope
daa
inc
fld1
scas
stos
lcall
add
lea
or
movsb
sti
stos
sub
and
adc
and
mov
rclb
xor
fs
daa
imul
jnp
cltd
add
sub
and
and
int3
pop
inc
js
mov
lds
push
cmp
ljmp
scas
loopne
pop
popf
xchg
loope
out
or
ret
add
fwait
imul
push
mov
xchg
stos
push
ret
cmp
mov
mov
mov
lret
cmp
rcll
push
out
pop
or
mov
cmp
pop
fdivl
jg
xchg
xor
stos
push
cmp
sub
outsl
or
push
push
movsb
js
arpl
lea
fcmovu
jno
mov
mov
test
mov
pop
imul
fistl
clc
cmp
dec
sar
scas
movsl
shll
adc
nop
fs
mov
in
roll
xchg
lret
cmc
cmpl
xor
adc
notl
sbb
adc
push
out
movsl
push
and
frstor
cmpsl
pop
int3
imul
cmpsb
gs
idivb
mov
and
adc
lahf
cwtl
mov
enter
test
jns
sbb
notb
insl
cmc
in
cli
inc
xchg
pusha
sarl
sbb
add
test
daa
lret
in
fistpl
aas
inc
popa
jns
cmpsb
aaa
fidivrl
bound
mov
mov
ds
cli
inc
out
or
mov
ljmp
xor
hlt
jbe
and
sbb
ficompl
add
test
push
xor
xchg
add
mov
test
push
pushf
inc
adc
cmpsb
movsl
fwait
popf
subb
enter
cli
dec
test
loopne
inc
lcall
pop
js
andl
add
mov
aam
add
dec
addr16
xchg
out
mov
repz
std
subl
test
insl
mov
jae
call
mov
leave
mov
mov
dec
imul
and
cmp
out
adcb
aas
test
xlat
inc
mov
fistpll
xchg
push
cmp
cli
mov
push
or
mov
push
push
or
jno
jg
inc
sub
push
out
ss
push
cmp
add
pusha
pop
jbe
aad
dec
mov
jl
dec
jnp
inc
clc
add
xchg
lock
pop
test
sbb
dec
and
or
cmp
outsl
lcall
and
pop
fucomip
or
pop
jnp
ss
arpl
mov
pop
xor
inc
xchg
stos
sbb
pop
cli
rorl
add
mov
nop
lods
outsb
lcall
pop
pop
pop
xor
pop
roll
orl
in
les
cmp
xchg
mov
lea
adcl
mov
test
outsb
sti
mov
ss
rcr
shlb
addr16
leave
imul
loop
inc
adc
xchg
mov
push
aas
in
add
lea
xchg
int
ret
mov
cmp
adc
fimull
subb
mov
sbb
pop
jo
add
jne
gs
push
jmp
fistl
mov
fs
pusha
jmp
fbstp
test
aad
incb
add
mull
sub
inc
push
jp
jbe
sbb
mov
sbb
cmp
repz
adc
loopne
mov
cmp
mov
sbb
adc
xchg
lea
cs
mov
mov
and
xchg
jno
mov
mov
mov
mov
into
lea
or
xchg
std
cmp
adc
call
dec
arpl
cwtl
fs
mov
add
scas
dec
subb
pop
popf
jne
inc
mov
das
sub
push
repnz
mov
sub
xchg
mov
mov
adc
push
and
dec
pop
pop
mov
xchg
jecxz
mov
fimuls
ds
add
inc
or
xor
ret
insb
mov
sbb
mov
imul
mov
push
inc
addr16
imul
push
mov
push
sub
mov
sub
mov
andb
add
jecxz
jl
in
inc
cmp
arpl
test
cmp
fists
pusha
adc
inc
adc
mov
push
das
jp
mov
testb
test
pop
or
lcall
stc
cmp
cwtl
cltd
and
fisttpll
int
or
and
inc
xor
fidivrs
in
aas
mov
roll
mov
daa
je
imul
push
popa
incl
jmp
jle
ljmp
test
pushf
adc
mov
push
out
imul
mov
ret
push
add
popa
jle
fstpt
xchg
out
sub
lock
repz
jbe
push
add
push
sbb
in
ljmp
mov
pop
inc
adc
fcoms
add
pop
ds
xchg
push
mov
cli
jge
mov
xor
out
out
add
pushf
pop
lock
mov
in
hlt
iret
lods
mov
cmp
popf
push
sbb
mov
lret
xchg
mov
sbb
xorl
sub
popa
sub
pop
mov
shll
jp
inc
and
mov
mov
jae
ret
push
mov
int3
jp
fisttps
shlb
shl
test
iret
xchg
add
loope
push
pop
sbb
jge
cmp
pop
scas
sub
mov
inc
movsb
out
pop
add
add
scas
jg
jle
dec
fsubrl
test
mov
jnp
or
sbb
push
mov
and
push
mov
or
insb
in
inc
cmp
jb
and
icebp
xor
inc
das
std
nop
neg
or
in
loope
lret
packssdw
or
push
mov
movsb
pop
negl
int
or
sbb
leave
and
push
jb
ds
lahf
xchg
xor
xor
and
mov
add
or
lcall
cltd
fdivrl
pop
aas
pusha
push
icebp
hlt
sub
xor
jecxz
cmp
cmpsb
inc
mov
pop
inc
mov
or
mov
test
sub
ljmp
psllq
and
xchg
xor
lahf
iret
xor
push
enter
dec
add
jns
lea
orl
sub
mov
push
dec
lods
test
leave
pop
jbe
xor
mov
mov
jg
arpl
xchg
add
je
dec
xor
sbbl
push
sub
cmpsb
dec
aam
add
test
xlat
out
sbb
aam
clc
inc
and
pop
add
in
repnz
jno
jo
mov
faddl
lret
aam
hlt
lahf
popa
fstpl
or
aaa
mov
js
xchg
addb
push
mov
mov
out
cmp
rol
mov
lea
adc
lods
les
ljmp
repz
xchg
jae
ds
rclb
push
push
xchg
and
mov
adc
lock
mov
or
fwait
inc
int3
dec
xchg
outsl
movsb
das
sub
out
fstpt
imul
stos
pop
cmp
hlt
cmpl
xchg
mov
xchg
push
mov
cmpsb
add
add
mov
lock
push
jne
loopne
dec
icebp
xchg
push
adc
fdivr
xchg
push
out
and
pushf
or
adc
sub
movsl
std
cmp
outsb
addr16
pop
cwtl
xchg
rcrb
lods
loopne
jnp
mov
fsubrs
jle
mov
sarl
sub
dec
aas
leave
loop
dec
add
adc
pushf
ret
cmp
push
or
sbb
jmp
cmp
xlat
cli
mov
xchg
ret
lret
push
jecxz
cmp
in
xor
fnstenv
cmp
cmp
pop
jnp
into
mov
into
push
push
cmpsb
pop
and
ret
in
stos
push
sbb
adc
rcrb
sub
lods
enter
or
jecxz
and
mov
sub
dec
rclb
insb
mov
test
or
sbb
fwait
bound
jae
xlat
stos
aam
xchg
inc
cli
leave
xor
imul
daa
notl
jp
cmp
imul
mov
jle
and
lcall
jmp
mov
sub
ret
sub
popf
and
stc
or
pop
je
idivb
sarl
add
rorb
xor
and
les
inc
mov
dec
mov
jp
pop
mov
icebp
add
add
fwait
jmp
movsl
pusha
ja
imul
sahf
sbb
sub
iret
add
loopne
push
cmpsb
mov
mov
jge
mov
xchg
push
cwtl
int3
mov
icebp
pop
sahf
pop
repz
daa
push
out
push
or
mov
jmp
mov
adc
or
cmc
cli
jbe
stos
faddl
inc
push
decb
push
jno
jl
inc
jbe,pt
mov
and
pop
pop
in
sub
ficoml
adc
inc
mov
push
into
mov
icebp
mov
daa
pop
mov
clc
adc
pop
scas
mov
test
lds
scas
out
pop
lds
les
fcmove
not
shld
fiadds
data16
dec
div
cmp
xor
pop
sti
sub
jno
int
xchg
mov
fdivl
jno
jnp
pop
inc
cli
pop
arpl
jecxz
aas
stos
lcall
or
add
inc
bound
push
dec
addl
dec
jne
xchg
push
mov
add
leave
clc
ret
xchg
mov
and
nop
adc
jmp
ret
jmp
cmp
jmp
adcb
or
inc
ds
mov
clc
or
loopne
repnz
mov
in
sbb
and
mov
in
adc
dec
stc
and
mov
adc
aaa
add
test
pop
push
mov
repnz
cmp
dec
cmp
or
jb
add
push
pop
lods
stos
pop
or
fldenv
lcall
push
adc
push
fimull
cmpsl
xchg
jbe
xor
mov
adcb
lods
sbb
and
or
jae
aas
pusha
and
ds
add
adc
clc
mov
outsb
filds
std
decb
mov
loopne
aam
mov
xchg
dec
sti
call
inc
mov
push
pop
mov
ret
mov
mov
int3
adcb
dec
mov
dec
inc
ret
jb
sti
movsb
mov
push
jne
mov
sbb
imul
ljmp
xor
popf
jne
es
rcll
xchg
dec
test
xchg
lahf
insb
pop
lea
or
call
daa
testb
xor
fmuls
xchg
jns
repz
inc
imul
mov
mov
sbb
imulb
aas
mov
push
das
in
and
pusha
popl
stos
imul
pop
dec
sbb
popa
repnz
nop
les
sub
mov
cmp
push
cmpsl
dec
lret
xlat
add
push
lcall
mov
mov
test
lret
das
out
sti
cmpsl
mov
lds
or
filds
outsl
aam
jmp
jno
push
push
cld
sbb
adc
push
mov
lea
mov
lods
lds
addr16
cmp
xlat
andl
clc
imul
int
in
add
mov
jmp
mov
into
cmp
stc
out
orl
int
sahf
pop
mov
fisttpl
pop
and
inc
add
lods
inc
push
lods
fcom
lret
mov
mov
xchg
add
outsl
outsl
loope
addr16
lahf
stos
adc
lods
jnp
mov
mov
repz
xchg
rol
xchg
rol
push
push
jb
sub
divb
clc
bound
pop
adc
jmp
xchg
lea
inc
mov
sub
cmp
int
hlt
ret
and
xchg
ja
jae
stos
fadds
push
inc
xorb
sti
sub
pushf
or
jnp
push
ret
mov
adc
jo
mov
xchg
mov
and
insb
ret
dec
test
push
cmpsl
out
setbe
push
or
mov
push
sub
lahf
xor
mov
mov
pop
leave
sub
pop
out
arpl
xchg
xchg
cmp
cmp
mov
inc
arpl
mov
orb
pop
call
mov
sbb
dec
sub
xor
fldenv
cmp
mov
xchg
test
sahf
movsb
outsl
aas
imul
add
mov
dec
cmp
loopne
repnz
out
js
inc
lods
mov
outsl
xlat
cwtl
xor
test
xchg
stc
jnp
loopne
cmc
or
sub
rcll
lahf
scas
push
mov
mov
jle
ret
lods
aad
xor
jg
push
int
into
repnz
adc
xchg
xor
cs
add
lock
xor
sub
sub
mov
call
pushf
aam
fcomi
or
inc
lock
ret
es
sbb
add
aam
sub
and
mov
jns
sbb
jg,pt
xchg
adc
sbb
sarb
repnz
ja
add
int
lea
mov
arpl
cli
or
lds
add
or
adc
push
shll
ss
mov
inc
fisubrs
or
ror
mov
push
fidivrs
adc
add
dec
xor
nop
pop
stos
dec
mov
out
push
icebp
sub
fmul
adc
enter
mov
in
inc
xchg
and
cltd
shrl
sarl
pcmpgtd
xchg
jp
gs
sub
jbe
mov
std
or
sub
imul
enter
mov
cmc
push
pop
sub
inc
bound
pop
popa
inc
lock
lcall
in
jae
sub
jl
mov
push
xchg
sub
test
dec
aaa
scas
stos
xor
inc
js
aad
sbb
xchg
inc
push
into
push
cli
inc
repz
nop
cmp
and
xchg
loope
ss
test
xchg
aad
jno
jb
mulb
lret
insb
sub
lods
pusha
lods
pop
aad
xor
adc
movsb
mov
clc
ret
in
in
je
xchg
adc
or
outsb
and
gs
insb
std
and
or
mov
lret
filds
add
cltd
xor
dec
ljmp
push
movsl
inc
push
fxch
addb
pop
and
sub
or
sahf
icebp
ss
pushf
mov
ret
repz
inc
inc
push
sub
push
mov
fs
sahf
and
lmsw
inc
push
dec
lcall
into
lcall
mov
rcll
cmp
add
sbb
lahf
andl
sti
inc
testl
or
repnz
xor
xor
cmc
clc
int3
mov
adc
pop
stos
xor
xor
pop
pop
push
sbb
cmp
pop
outsb
mov
xchg
jp
pusha
js
mov
les
mov
repz
dec
aas
push
inc
pop
xchg
test
dec
add
pop
push
pushf
push
loop
fs
or
ja
pushf
inc
lret
add
sub
sub
repz
sti
push
into
insl
arpl
outsb
pop
sti
jge
into
iret
xchg
add
pop
gs
mov
test
aaa
sbb
lea
jbe
xchg
push
pop
aam
stc
in
popa
mov
adc
xchg
pop
mov
adc
in
shll
inc
nop
dec
imul
sbb
dec
sbb
in
notl
subl
lret
lahf
std
sbb
rolb
mov
gs
loop
popf
and
cmp
cli
xchg
into
jp
es
or
cmpb
push
iret
rcr
je
sbb
jns
sub
clc
test
xor
movsl
enter
inc
inc
cmc
mov
mov
dec
js
mov
adc
xor
pop
mov
xchg
cmp
push
jae
cltd
lcall
int3
push
inc
pop
add
and
arpl
mov
jmp
and
roll
mov
jle
lret
push
sti
popfw
push
hlt
lock
subb
aaa
cwtl
inc
aad
in
shll
movsl
bnd
ret
mov
lock
mov
outsb
mov
lods
ret
fcom
xchg
xchg
int
cmpsl
aam
xchg
in
jge
jg
cli
call
jns
push
cmp
xor
lret
lret
inc
lret
mov
je
push
sbb
test
ljmp
popa
cs
xchg
inc
xor
repnz
out
xor
jp
stos
sub
jmp
scas
lahf
aaa
dec
lcall
cmp
leave
or
leave
and
fs
add
xor
scas
dec
pop
xchg
mov
pop
cs
ss
mov
push
data16
nop
addl
in
jb
int3
je
sbb
fnclex
dec
ljmpw
call
cmp
aam
push
rcrl
lds
gs
pusha
or
repnz
testb
push
pop
psadbw
negl
push
shrb
and
inc
lcall
es
sub
stos
jmp
inc
vmwrite
setne
xlat
xchg
int3
dec
dec
jp
and
lock
or
mov
stos
xchg
data16
sub
push
inc
mov
add
sbb
adcb
das
js
cmp
sub
inc
xchg
cld
loope
into
nop
dec
in
in
mov
sbb
repz
enter
or
jge
sbb
test
roll
fwait
pushf
inc
loope
push
shlb
jne
lock
and
mov
mov
fnstcw
xchg
clc
jle
jecxz
loopne
fists
or
inc
outsl
aas
dec
stc
inc
sub
test
mov
sub
ret
sub
dec
jo
les
and
or
cmp
add
mov
inc
add
aaa
das
mov
or
jmp
push
hlt
xlat
xor
add
std
es
pop
add
fmulp
sbb
clc
arpl
daa
sbb
inc
popa
in
mov
mov
addl
xor
cmp
aad
shlb
or
popa
or
mov
mov
mov
xchg
mov
pushf
fs
subl
repnz
add
push
xchg
sub
jp
test
enter
aam
dec
js
xor
add
adc
push
inc
aas
movsb
fsubs
scas
cwtd
ja
pop
dec
pop
pusha
xchg
out
xchg
jge
inc
or
xchg
and
dec
mov
movsl
call
xor
mov
lods
inc
pusha
push
jmp
pop
adc
test
hlt
dec
mov
adc
xor
jo
xor
dec
cmp
in
dec
ja
std
sub
cltd
cmp
int3
xor
lahf
mov
add
mov
push
inc
cwtl
add
jp
inc
mov
cmc
mov
sub
cli
mov
and
sbb
lock
fs
fidivrs
add
mov
arpl
inc
sar
mov
repz
mov
xor
push
push
cmp
dec
mov
out
lahf
sub
mov
push
inc
insl
cmp
js
xor
pusha
mov
inc
rorb
lret
repz
dec
sub
fildl
cs
repz
sbb
icebp
xchg
push
mov
and
out
xchg
push
testb
push
inc
xchg
pop
pusha
std
mov
jne
add
mov
pop
xchg
in
dec
cmpsl
mov
subl
add
fwait
mov
and
xchg
pop
adc
mov
repnz
or
ficompl
loope
fwait
sub
out
jmp
mov
sub
adc
movsl
adc
aaa
icebp
push
mov
out
ss
das
mov
sub
shr
mov
ficoms
iret
push
sub
cmpsb
sti
shrb
outsl
and
and
sahf
and
out
pop
mov
mov
hlt
cmp
cmp
iret
add
loope
and
mov
cmpl
gs
cmc
leave
dec
dec
iret
jmp
inc
lds
sbb
ret
sub
addps
mov
insl
push
cmp
addb
sbb
jae
sbb
xchg
mov
and
cmp
in
mov
mov
pushf
in
hlt
adcl
insb
ds
scas
jae
stos
icebp
or
lock
pop
shl
mov
jbe
dec
cmpsl
jno
push
test
jne
cmp
cli
push
pusha
movq
push
fistpl
cli
sub
sbb
push
insb
popl
push
mov
loopne
xor
dec
mov
mov
add
sbb
cs
sbb
outsl
das
xchg
sbb
shll
rcl
and
rcl
test
and
gs
loop
add
loope
out
insb
adc
push
xchg
insb
fwait
cmp
jge
aam
adc
shlb
cmp
and
outsb
sub
jle
idivb
mov
jmp
jns
jo
pop
mov
in
in
test
xchg
pop
nop
lahf
pushw
push
in
setae
es
ja
cltd
pusha
mov
dec
or
inc
xchg
sbb
xor
jmp
inc
fistl
pop
ljmp
shlb
jns
push
loope
rol
aad
stc
dec
popa
ret
add
je
mov
add
push
pop
mov
je
sti
mov
testb
inc
xor
mov
idivl
dec
fbld
push
or
imul
dec
ds
cmp
fcomi
daa
xchg
inc
loopne
lds
pop
jg
jne
mov
pop
mov
and
icebp
cmp
mov
jl
pop
lret
jecxz
dec
idivb
xor
sahf
fsubl
aaa
fnstenv
in
xchg
popf
mov
out
in
mov
lods
jne
cmp
pop
test
push
sbb
psubsb
mov
mov
loopne
pop
lods
pop
out
cmp
pushf
movsb
pop
add
test
test
repnz
mov
push
add
push
cmp
fs
gs
mov
mov
sbb
mov
mull
inc
jp
int
dec
xchg
into
neg
cmpsb
jae
loopne
cmp
jnp
aad
stos
pop
cmp
mov
add
and
stos
sbb
mov
push
out
jnp
or
mov
sub
push
and
push
jne
stos
cmpsl
je
ret
xor
fs
sub
sub
cmp
pusha
mov
arpl
repnz
data16
push
inc
inc
sub
mov
decb
lods
cltd
sbb
ror
jne
outsb
es
adc
mov
aas
in
cmpsb
shll
mov
sub
dec
jnp
sbbl
jmp
dec
xchg
jbe
add
test
push
inc
pop
cmp
fiadds
jns
cmc
ret
mov
dec
sahf
mov
mov
in
sub
adc
imull
popf
arpl
cwtl
push
sbb
jmp
imul
out
cmp
loopne
je
lods
mov
lahf
jae
enter
arpl
lock
gs
push
mov
fcoms
pop
lods
fldenv
pavgw
mov
cs
in
ljmp
xchg
adc
mov
fstl
imul
jbe
lods
cli
lret
pop
push
movsb
insb
or
adc
xchg
xor
dec
inc
dec
push
and
lods
and
sub
outsl
add
push
lods
nop
xor
das
jo
push
testb
push
and
adc
movsl
xchg
inc
or
jae
xchg
cmp
addl
lahf
imul
stos
xchg
push
push
pop
out
jb
pop
xchg
adc
or
lock
scas
cmp
sahf
mov
sahf
push
sarl
jl
mov
and
add
outsb
lds
loop
in
popf
ljmp
test
pop
dec
cmp
adcl
dec
addr16
iret
test
shl
sbb
bound
out
andl
lods
mov
gs
xchg
dec
imul
inc
or
xchg
shl
mov
ds
scas
icebp
push
jmp
push
mov
fs
xor
jg
jecxz
aas
pop
stos
ljmp
rcrb
mov
repnz
je
xchg
cmp
and
fmuls
and
pop
adc
lea
push
icebp
inc
enter
pop
js
xor
adc
andb
mov
push
push
push
movsl
push
pushf
lock
rcrb
jge
mov
into
dec
mull
adc
in
push
mov
fnstcw
pop
and
cmp
adc
out
mov
int
and
popa
shll
lock
add
daa
add
mov
adc
push
dec
and
aas
sub
xchg
dec
and
push
flds
jl
insb
cmp
and
fdivl
push
adc
fcmovb
xlat
stc
mov
ja
movsl
xlat
lcall
sub
rcr
jle
inc
call
mov
mov
pop
jo
in
cmp
scas
cmp
xor
outsb
mov
inc
int3
sti
add
mov
jo
mov
or
icebp
out
sahf
jnp
dec
fldl
aad
sub
dec
pop
enter
lahf
inc
fimull
stc
sbb
add
ret
gs
cmp
bound
cmp
mov
inc
inc
negb
sbb
and
sub
adc
lahf
inc
int
lcall
jbe
or
nop
inc
jecxz
push
mov
in
sbb
jg
lret
mov
ljmp
add
fildll
or
gs
test
ds
mull
fnstcw
mov
fcoms
jge
das
aad
not
dec
movsb
adc
pusha
pushf
jg
xchg
fwait
mov
daa
mov
add
lea
in
cmp
std
scas
pop
stos
adc
mov
sub
mov
and
jnp
jl
jmp
movsb
popa
xor
in
shrb
mov
push
mov
cltd
out
xchg
push
cmp
mov
clc
dec
rcrb
aaa
fistl
hlt
push
cmpsl
cmp
clc
xor
push
add
movsb
stc
sbb
cld
rorb
fs
add
mov
or
cmp
scas
jbe
aam
xlat
pop
adc
sub
test
mov
inc
cmp
mov
cmp
fisttps
repnz
inc
push
cs
repz
and
andl
jmp
xchg
mov
repz
push
lret
xchg
push
fsts
adc
cltd
dec
mov
out
fidivs
fiaddl
xor
movsl
bound
ret
stc
adc
pop
outsl
scas
jmp
adc
rcr
mov
pop
fwait
stos
iret
push
into
enter
loop
pusha
cltd
rcll
jb
sub
xorb
mov
lret
cmpsl
sub
and
sbb
clc
mov
daa
xor
cli
dec
dec
jp
fisubs
mov
sbb
push
cmpsl
add
mov
jnp
push
lds
pop
cmp
dec
outsb
stos
iret
ljmp
xor
dec
repnz
movsl
std
imul
mov
adc
lahf
lret
pop
call
mov
add
test
push
jle
out
or
in
push
mov
xorb
pop
lods
mov
jns
sub
aaa
dec
insl
test
aas
mov
push
je
testb
enter
push
aas
mov
outsb
dec
xchg
jbe
js
dec
fiaddl
loopne
pop
int
lds
pop
inc
ret
sub
popl
imul
sbb
aam
cmp
xor
or
cmp
mov
jo
and
movsl
mov
mov
loope
add
mov
incb
cs
mov
js
hlt
rcll
rcrb
xor
popa
mov
mov
xchg
mov
fwait
xchg
roll
ljmp
and
cmpsl
push
jno
nop
dec
xor
fildll
pop
fs
inc
sbb
mov
scas
hlt
adc
sub
xor
pusha
lock
lcall
and
loopne
pop
xchg
test
lahf
add
call
clc
inc
scas
jmp
xchg
cld
or
or
insl
aaa
mov
incl
sbb
loop
insl
inc
mov
mov
enter
jmp
cmp
call
jae
repnz
cmc
xchg
or
xor
lret
out
jnp
jg
mov
add
out
rclb
test
test
mov
adc
mov
mov
pop
cmc
pop
loope
insb
cmp
fcmove
jbe
outsl
push
push
popf
ljmp
cmc
jmp
sub
dec
mov
mov
jae
and
jne
xor
shl
scas
jp
adc
int3
push
xchg
mov
pop
and
jnp
cwtl
daa
insl
loope
jge
or
mov
scas
xor
cli
movsl
push
js
mov
mov
aam
pusha
andl
enter
and
iret
xor
outsb
mov
int
into
ds
pop
xor
les
adcb
rorb
in
and
outsl
dec
mov
shll
test
xchg
push
inc
adc
mov
jecxz
imul
adc
insl
enter
pushl
aam
out
int3
je
add
add
clc
jg
fbld
rcrb
cmpsl
mov
mov
sbb
push
outsl
xchg
iret
xchg
mov
sbb
arpl
jbe
lds
js
imul
adc
or
push
repnz
xchg
or
cmpsb
jmp
sbb
jns
mov
cmp
or
push
xor
mov
push
iret
nop
xorl
aad
push
in
sub
sti
repnz
mov
shr
lea
dec
aas
iret
rorl
inc
movsl
scas
rolb
gs
dec
mov
inc
mov
sub
xor
notb
push
dec
ss
pop
xchg
and
dec
xor
xchg
xor
add
pop
xchg
pop
push
mov
add
scas
xchg
outsb
sarl
scas
pop
aas
or
fst
ret
das
shrl
and
mov
jge
movsb
push
addl
xor
aaa
fldenv
sbb
int
inc
add
push
cmpb
xchg
add
andl
insl
and
xor
add
imul
cmp
in
xchg
mov
cmc
sahf
ss
into
loopne
jl
and
ss
dec
cmp
xchg
jle
in
sub
std
fwait
ja
mov
pop
add
lods
ds
mov
mov
and
ss
pushf
xchg
and
push
clc
pop
cmc
xor
and
fbstp
fwait
aad
mov
mov
or
dec
fsubrs
xor
jg
imull
mov
mov
sub
test
fdiv
push
jp
add
pusha
xchg
sti
sub
fxch
int3
jns
es
ljmp
cmp
push
jmp
pop
mov
mov
movsl
sti
cmpsb
int
sahf
hlt
sub
push
xor
mov
loop
stos
adc
adc
ficompl
fimull
add
pop
mov
lahf
jno
jge
xchg
jae
int3
cmp
sbbb
or
cmc
xlat
cmpsb
dec
mov
int
iret
lret
imul
ret
daa
inc
shll
call
pop
mov
mov
jae
sbb
xchg
xchg
sbb
sahf
int3
in
cmpsb
fistpl
sti
cmp
repnz
jl
testb
push
dec
mov
xorb
lea
adc
sub
adc
push
cs
push
std
sarb
xor
sbb
jbe
cmovo
cmp
push
pushf
jb
popa
sub
into
mov
lret
sbb
xor
rorl
shrb
push
aad
and
cmp
xchg
test
repz
test
push
enter
and
lea
lcall
shrl
cli
stos
les
and
jo
cmc
or
jle
cmp
movsb
imul
out
dec
xorl
ds
adc
roll
rep
mov
xchg
push
cmova
jle
int3
lahf
test
js
test
lret
xor
mov
loopne
movsb
mov
imul
fidivl
sub
aas
push
out
gs
test
pop
int3
sub
sbb
mov
cmpsb
mov
lds
into
enter
popf
pop
mov
mov
mov
jo
mov
sub
ja
xlat
ret
cmp
jg
in
mov
mov
and
ss
stos
jmp
lret
or
aam
or
adc
loope
mov
loop
in
outsb
add
or
sahf
mov
call
rcl
mov
mov
fprem1
popf
aam
xchg
push
out
push
add
add
popf
scas
mov
fldt
lea
sbb
cmc
incb
pop
pop
mov
imul
jle
add
dec
cwtl
dec
dec
inc
enter
shl
adc
stc
arpl
dec
or
add
lock
mov
rcll
adc
in
add
orb
loop
mov
mov
or
push
sub
jle
cmp
out
mov
sti
mov
xor
push
dec
cmc
or
cmp
inc
sub
fcompl
dec
out
mov
imul
mov
sbb
sub
xor
das
imul
call
adc
xor
jle
add
add
fs
pop
cmc
imul
nop
add
out
into
mov
push
mov
mov
sub
push
mov
bound
fbld
loopne
xchg
push
in
aaa
lock
jge
jns
and
lods
xor
lods
dec
cwtl
dec
push
mov
sahf
xor
out
orb
sub
xchg
imul
adc
ret
outsl
cli
xchg
setl
pop
andb
outsb
pop
pop
movsb
inc
xor
movl
loopne
ret
or
mov
sub
dec
push
pop
or
mov
pusha
clc
mov
xchg
les
mov
test
cmpsb
imul
popa
add
arpl
lods
shlb
ss
sahf
in
inc
hlt
xor
push
push
mov
push
addb
cmp
cmp
push
add
and
jnp
repz
imul
jg
add
out
in
add
jnp
push
cld
jecxz
jns
nop
call
es
xor
clc
adc
jecxz
test
out
lret
nop
xchg
add
scas
mov
scas
daa
es
jns
add
inc
daa
inc
push
sbbl
test
mov
xor
mov
push
sbb
mov
inc
lock
jae
in
mov
loopne
punpcklwd
push
dec
xlat
inc
sub
cli
adc
lret
scas
cs
jne
faddl
fldt
rorl
mov
shrl
stos
fcomps
jecxz
rorl
jp
add
andb
loope
pop
fwait
aas
inc
scas
adc
lock
lods
mov
dec
sub
es
outsl
xor
add
xchg
push
mov
xchg
add
and
inc
stos
es
or
inc
in
sub
fcoms
outsb
ss
insb
int
xchg
dec
pop
dec
pop
loopne
dec
push
push
pop
xor
cmp
mov
inc
cwtl
push
je
fistps
xchg
out
test
hlt
cmpsl
dec
or
pop
cmp
stc
das
subl
loop
mov
addr16
mov
in
gs
outsl
loop
ljmp
jmp
pop
lea
xorl
and
and
jne
sbb
in
ss
clc
pop
and
adc
and
test
lret
xchg
in
push
fadd
jl
fisttps
out
out
xor
xor
movsb
xchg
mov
int
xchg
loope
sbb
fstpl
rorb
xchg
inc
das
mov
clc
cmp
stc
in
jp
pop
xchg
icebp
push
mov
lea
aaa
clc
ficoml
out
or
jo
and
sbb
int3
jae
jmp
push
cmp
ds
sub
inc
and
adc
in
cmp
add
push
or
jae
jnp
mov
lods
or
xchg
jae
pop
lock
cmc
pop
ja
add
adc
pop
cmp
sbb
jmpw
push
xchg
rcrl
enter
sbb
dec
pop
sub
push
loopne
ja
mov
fdiv
movsb
cmp
push
cwtl
push
int3
divb
daa
mov
out
ljmp
test
stos
xchg
repz
rcrb
das
xchg
in
push
xor
cmc
mov
or
jae
or
stos
roll
ljmp
push
or
test
les
call
cwtl
jmp
add
jg
or
or
shlb
cmp
dec
int3
inc
outsb
jb
inc
adc
xor
xchg
les
jno
push
jns
movsb
loopne
pusha
fnsave
pextrw
test
fmul
ret
sti
inc
push
jmp
loop
xchg
bound
xor
adc
stos
lcall
movsl
and
dec
test
jmp
jp
push
rcl
inc
fildl
sub
imul
xor
mov
in
mov
pushf
pop
inc
push
sbb
inc
notl
and
sub
sbb
adc
mov
aaa
lods
gs
shlb
pop
fdivrs
sub
repnz
xor
fucom
out
dec
in
mov
out
mov
arpl
pusha
and
fcmovnu
xor
lods
rcrb
mov
lret
pop
cld
fucom
iret
xchg
in
outsb
fwait
lods
out
sbb
or
insb
pop
xor
sahf
cmp
lds
movsl
xchg
push
jge
push
xchg
shll
stc
cwtl
cmp
inc
add
jns
shl
xchg
mov
xchg
dec
and
sub
lret
mov
aam
jmp
inc
mov
inc
mov
adc
push
jp
aaa
cmp
cld
add
imul
push
adc
xor
data16
andl
insl
movsl
out
rorl
pop
iret
push
lret
pop
or
repz
and
push
loop
push
xchg
mov
cwtl
push
icebp
push
and
cmp
or
minps
push
fists
jle
testb
sbb
sub
aad
cmp
mov
xor
pop
mov
push
iret
dec
test
inc
xchg
sbb
cli
inc
loopne
sbb
add
insl
pop
lea
into
lock
sbb
loope
in
daa
sub
in
inc
push
or
push
mov
popa
xor
adc
cmp
fucomip
popa
mov
xor
int
mov
outsb
inc
or
mov
test
jnp
testl
inc
sub
adc
test
cld
push
mov
fcmovu
inc
stos
and
mov
mov
pop
xlat
add
sbb
jecxz
push
out
jg
es
inc
push
cltd
mov
jbe
insl
cmp
push
xchg
fwait
add
sbbl
add
xchg
jo
sub
sub
sub
jae
fisttps
fsub
adc
add
lods
arpl
pop
xchg
cltd
pop
mov
xchg
pop
push
cmp
or
dec
fiaddl
ljmp
xor
inc
and
pop
cwtl
divb
jmp
mov
cwtl
lock
mov
js
hlt
sub
dec
pop
lds
fs
cmpsl
xchg
jb,pn
mov
in
xlat
fldenv
cmp
test
les
pop
scas
xchg
or
cli
stos
lods
xchg
mov
insl
xor
ljmp
mov
imul
pop
ss
sub
cli
inc
and
lods
mov
inc
rolb
arpl
jbe
psrlw
popa
adc
pop
adc
dec
insl
pop
sbbl
repz
sub
nop
mov
push
xchg
sub
mov
icebp
shlb
orl
jmp
xor
lods
jns
adc
outsb
jg
push
mov
imul
daa
push
call
xlat
lods
je
and
push
mov
stos
cmp
icebp
jl
and
sbb
in
inc
mov
sarb
jmp
leave
jo
loopne
sbb
lret
xor
dec
inc
push
fsts
in
jmp
mov
es
cmp
dec
in
rep
mov
or
pop
pop
fisubrs
ds
fstpt
and
cmp
rorb
ljmp
mov
mov
mov
mov
cs
lahf
dec
loop
ret
aaa
gs
shl
je
sub
cmpsb
xchg
imul
int3
push
inc
repnz
divb
mov
dec
stc
dec
pop
clc
sbb
ss
sarb
dec
inc
sub
out
out
add
rorb
test
fcompl
ficoms
enter
and
popf
das
insl
push
push
dec
fs
jb
dec
scas
sbb
and
ret
lret
cmp
xor
adc
aad
shll
stos
scas
cmp
xor
inc
repz
adc
inc
xchg
shll
inc
pop
adc
roll
shlb
es
push
push
mov
and
cmp
xor
xchg
push
push
adc
jmp
or
push
xorl
fwait
inc
jnp
or
add
iret
mov
ret
xchg
push
les
xchg
popf
inc
fsubr
popf
rcrl
loope
dec
in
lahf
and
push
inc
xchg
or
arpl
sarb
sbb
pop
jne
cmpsb
test
leave
xchg
scas
test
lret
repz
popa
out
adc
mov
icebp
or
ds
cli
mov
lock
mov
or
cmc
mov
xchg
ljmp
mov
int
test
mov
ja
xor
cltd
adc
pop
imul
les
sub
pushf
lret
mov
leave
jnp
push
pop
cwtl
lea
ja
ja
js
inc
cmpl
pop
mov
mov
pop
in
in
popf
jne
xor
inc
cmp
or
repz
sub
sub
jmp
xor
add
inc
push
jmp
jnp
sub
out
movl
enter
jp
xchg
std
out
jnp
lods
aam
and
jle
stos
mov
push
xor
push
add
loopne
filds
shll
aaa
aad
pop
into
pop
cmc
mov
cs
jnp
push
ss
lock
xorb
push
fwait
jecxz
stc
mov
mov
insb
lahf
add
add
jecxz
jae
cmp
mov
imul
mov
insl
and
push
mov
push
cmpsb
pop
fnsave
in
data16
xchg
js
inc
mov
jno
ret
jns
ficomps
mov
lods
lods
fs
jle
dec
dec
jle
scas
xchg
rcrb
dec
add
mov
bound
rcll
cld
xchg
add
movsb
xchg
jmp
ror
popa
stos
fucomi
repnz
cmpl
push
fsubrs
nop
xchg
data16
pop
sti
in
mov
js
fsub
sbb
out
dec
jl
mov
pop
add
xor
sub
bound
lret
mov
mov
sti
sub
jns
mov
or
lret
scas
jl
mov
mov
xor
imul
out
jl
in
les
jecxz
sub
loop
mov
add
inc
and
xchg
xor
stc
jge
es
jne
dec
mov
bound
sub
movsb
out
push
jae
mov
popf
xchg
inc
cmpsl
mov
jecxz
notl
push
jo
cmp
or
xlat
dec
xchg
pop
mov
in
lret
xor
xlat
sbb
push
jge
arpl
loope
mov
jecxz
mov
cmc
mov
push
xor
add
dec
mov
fildl
pop
mov
sub
insl
cltd
iret
push
mov
sub
sti
adcl
bound
and
inc
mov
das
mov
adc
pop
xor
popa
add
enter
dec
jne
test
sub
push
mov
lcall
mov
fdivr
stos
dec
push
movsl
cs
scas
out
ret
arpl
rcpps
out
pop
xchg
xchg
and
lcall
xchg
push
lret
test
sub
call
pusha
fs
mov
add
ficoml
push
aaa
inc
fwait
cmpsl
fs
cmp
dec
stos
xor
pushf
jno
add
mov
mov
push
mov
push
pop
adcl
cmp
bound
adc
cmp
cmc
add
movsl
push
and
lret
cmp
leave
jae
out
jge
jnp
fidivrs
out
jnp
das
pop
adc
cmpl
lea
cwtl
mov
test
cmp
loop
inc
push
pop
mov
jo
push
int
out
xchg
popf
adc
lea
insb
rolb
mov
movsb
cmp
xchg
lock
sub
das
add
mov
cmp
fiaddl
leave
cmp
insl
inc
arpl
jp
adc
gs
dec
scas
inc
gs
push
inc
sarl
stc
shll
pop
aad
sarb
shl
jmp
adc
pusha
mov
std
add
push
cmpsb
jns
dec
and
stos
nop
adc
push
mov
sbb
stos
inc
xchg
stc
idiv
mov
jne
pop
push
push
lods
lret
dec
lahf
push
sbb
sti
xor
dec
mov
and
inc
repnz
iret
in
adc
ja
lret
adc
fistpll
dec
nop
cltd
inc
stos
cmp
and
mov
cmpsb
mov
outsb
subl
push
pop
lods
mov
mov
fmull
out
hlt
mov
arpl
or
outsw
adc
jge
xor
sbb
in
cmp
add
sbb
daa
mov
sbb
xchg
imul
and
and
es
cltd
and
pushf
mov
jp
add
in
dec
xlat
sbb
nop
jnp
test
sbb
sub
fsts
mov
or
jp
xor
addl
loop
cmp
push
jae
sbb
inc
mov
fwait
adc
cmp
icebp
pop
scas
es
andnps
iret
ja
enter
inc
popf
aas
xchg
xorl
mov
shll
sub
out
in
dec
or
add
mov
out
notb
ljmp
pop
daa
sub
loopne
xorl
lds
mov
mov
mov
cmp
push
arpl
fs
mov
xor
mov
cmpsl
negb
popa
outsl
or
iret
jecxz
imul
adc
push
xor
and
outsl
jb
mov
roll
cs
jle
jbe
movsl
cltd
cs
inc
addl
leave
push
movsl
mov
in
std
pop
test
add
mov
inc
sub
adc
push
add
sbb
sbb
loop
xlat
test
hlt
or
aad
jno
sub
pop
pushf
test
aad
push
rcrl
popf
push
xor
daa
comiss
pop
jae
nop
mov
nop
mov
test
sti
les
mov
pop
cmpsl
or
leave
test
sub
mov
aaa
push
aaa
jp
cld
std
and
mov
pop
jno
stos
xchg
outsb
mov
cmp
out
mov
popa
add
inc
cli
jns
ljmp
mov
xchg
mov
lods
mov
mov
int
mov
or
jp
inc
cli
sub
cmp
lea
or
push
mov
sar
jge
xchg
pop
sarb
out
cmp
fsubs
push
aad
add
pop
jne
push
or
push
std
lods
loopne
out
xlat
push
inc
add
gs
lods
inc
dec
into
in
or
or
inc
xchg
jns
imul
shl
mov
in
shlb
dec
and
push
bound
push
repnz
lods
addr16
dec
aas
or
mov
xor
jb
jns
and
outsl
pop
outsb
ret
leave
fsubrl
cmpsb
sbb
sbb
xchg
push
insb
mov
dec
jae
pop
xchg
cld
jge
jge
xor
stos
jl
sbb
jg
clc
add
adc
mov
bndstx
adcb
xchg
in
out
pop
repnz
scas
gs
sbb
fnstcw
cmp
outsb
jo
xchg
mov
and
xor
loop
jp
mov
enter
jmp
fwait
push
loop
rcrb
inc
mov
and
pushf
add
add
movsl
cmp
out
push
push
lods
aas
xor
scas
and
mov
in
scas
stos
rorb
dec
jb
add
jecxz
mov
or
mov
push
movsb
shl
pushf
mov
jo
inc
mov
xor
mov
mov
bound
add
aad
negb
cmpsb
xor
cmpsl
daa
mov
sarl
sbb
sub
mov
push
aad
mov
sub
sarl
adc
lods
jg
add
fldt
cmp
push
jg
dec
or
jmp
scas
test
push
mov
fsts
mov
and
fidivrs
shlb
xlat
iret
mov
mov
stc
or
lret
scas
ds
aam
repz
inc
push
mov
pop
mov
sbb
loope
js
xchg
jnp
mov
scas
dec
sbb
cmpsb
mov
adcl
push
inc
jle
jb
loopne
pushf
and
cmp
mov
xlat
cli
and
lcall
xchg
test
insb
stc
or
popf
xor
lret
and
xor
loop,pn
push
loop
and
aam
mov
add
and
stos
out
xor
icebp
pop
nop
jmp
sbb
arpl
popa
scas
inc
mov
push
negb
sub
sub
or
addr16
or
push
cmp
test
sub
or
mov
push
lcall
mov
lods
hlt
add
gs
lcall
cwtl
fldt
push
ss
xchg
lods
aaa
popa
in
stc
and
xor
jge
inc
mov
sti
mov
les
fiaddl
loop
lret
xor
sbb
in
sahf
loop
pop
int3
cmp
cltd
xlat
mov
mov
cmp
lcall
cmp
sahf
fdivl
push
faddl
rcl
cltd
push
mov
std
add
out
data16
ret
les
inc
add
jns
adc
xor
mov
lcall
add
popw
sub
pop
push
cli
mov
jg
sbb
out
push
xor
loope
pop
sub
fimull
add
sbb
int3
sub
xchg
cmp
cmp
pop
clc
pop
push
mov
aam
mov
mov
insb
sub
xchg
or
aaa
cmc
clc
xchg
jmp
scas
aad
push
bound
sub
test
ficoml
xlat
sbb
and
dec
fstpl
inc
mov
sub
adc
lcall
addl
rolb
jl
xor
add
mov
mov
repnz
outsb
mov
cld
mov
xchg
mov
push
jmp
mov
aaa
sbb
test
xor
scas
or
sbbb
stos
dec
aaa
sub
call
and
jno
rolb
xor
add
mov
or
xchg
ljmp
fnsave
sub
xchg
push
in
or
es
add
or
mov
pop
movsl
pop
lea
xorb
pop
mov
fsts
lret
push
clc
mov
std
sbb
scas
mov
and
lret
je
mov
adc
test
fiaddl
rorb
add
lea
or
cmp
xchg
mov
mov
stc
cwtl
into
ss
cli
jb
add
dec
stos
jno
dec
pop
loopne
sub
stc
mov
aad
bound
call
lcall
fwait
adc
adc
and
movsl
movsb
mov
pop
mov
imul
pop
sub
xchg
mov
dec
fucom
addb
and
lahf
inc
insb
push
push
xchg
leave
push
pop
bswap
pop
jne
mov
cmp
lret
mov
les
xor
repz
push
jg
fs
mov
cmpb
call
pushf
jge
jae
sbb
pushf
adc
iret
dec
mov
test
xchg
arpl
sub
icebp
pop
dec
add
xor
in
mov
cmp
insl
xchg
sub
pop
pop
and
aad
push
js
sub
dec
push
add
mov
cmp
push
pusha
imul
or
lret
pop
pop
lahf
sbb
xor
jecxz
cmc
pop
imul
dec
and
fisubrs
stc
mov
add
xchg
aam
std
cmpsb
sbb
mov
int
test
sub
pop
jne
push
stos
test
sahf
jno
adc
popf
xlat
inc
pop
xor
push
xchg
test
mov
adc
mov
jbe
adc
lcall
jg
shlb
mov
adc
cltd
jg
add
clc
pop
jle
addr16
mov
xchg
enter
inc
loope
out
push
or
xchg
cmp
sbb
mov
and
sbb
dec
aaa
push
out
and
and
stc
cs
and
int3
adc
push
or
jne
dec
fistl
xchg
iret
outsb
xlat
push
aam
insl
adc
xchg
out
sti
pusha
loopne
cli
mov
sub
jb
jl
jl
out
push
mov
xchg
pop
jae
pmaxsw
mov
mov
cmp
das
lea
sub
test
xchg
sub
clc
orl
pusha
in
and
fxch
inc
add
dec
push
lods
add
cmp
xor
push
jnp
cmp
dec
fisttpll
add
mov
rolb
inc
sub
lret
lods
std
lret
mov
enter
fidivrs
dec
icebp
and
iret
es
stos
pop
pop
inc
dec
mov
lahf
and
stc
fdivrs
sarl
movsb
lret
stc
arpl
movsl
mov
aam
push
fs
icebp
inc
xchg
inc
xchg
pop
jbe
pop
test
loopne
scas
lcall
push
adc
cmp
loopne
sbbb
out
cmc
jecxz
aaa
fistpll
mov
pushf
cmp
les
out
jnp
mov
js
test
jne
mov
cs
xchg
iret
aaa
add
test
std
push
mov
stos
out
stc
test
sub
dec
sbb
and
push
repnz
adc
test
mov
mov
shrb
je
scas
jo
dec
sub
sahf
jmp
xor
inc
push
sub
imul
dec
in
inc
pop
in
xor
cs
je
jle
je
lret
nop
xor
sbb
cmp
sbb
cmp
mov
cmpsl
rorl
cmp
add
cmpsb
mov
dec
push
shr
pop
push
shlb
insl
and
insb
cmp
test
ret
xchg
jp
xchg
jae
outsl
add
pop
in
pop
out
les
mov
stc
push
orb
cmpsb
mov
push
xor
jmp
xchg
out
sub
and
jge
adc
add
imul
cmpb
and
js
inc
sbb
test
xor
xchg
aas
sbb
dec
or
in
cmp
mov
call
loopne
inc
fdivl
cltd
mov
es
xor
fcomps
pop
pusha
or
insl
xor
push
push
sub
hlt
adc
mov
lock
jae
int3
int
pop
xchg
nop
cmp
cmp
push
cli
call
rcrb
or
fs
sub
mov
xchg
sahf
mov
mov
sbb
mov
addl
and
push
or
cli
jno
pop
sub
xchg
pop
cmp
in
cli
jo
icebp
out
or
shlb
mov
mov
sub
fnstcw
jnp
push
pop
lea
popf
in
lahf
pop
jb
shl
cs
push
push
shlb
add
out
jo
dec
jle
fdivr
jne
xor
inc
mov
lock
mov
mov
out
adc
mov
pusha
and
sbbb
push
cmp
push
mov
lock
aaa
icebp
int
enter
sub
stos
mov
out
scas
sub
dec
fistps
mov
lods
aaa
ljmp
test
add
jnp
inc
adc
push
test
mov
in
xchg
adc
xchg
lock
add
sbb
sub
lret
adc
sarb
or
cmp
dec
insb
mov
cmp
pop
cmpsb
daa
shll
fadds
adc
lock
pop
shrb
push
incb
insl
int
ficoml
pop
adc
idivl
cmp
jns
xor
mov
jl
xor
inc
es
sbb
add
mov
sub
ret
mov
and
add
shll
jg
andl
shlb
loop
insb
mov
mov
shll
std
mov
push
jecxz
loop
rorb
xor
mov
cs
testl
push
stc
imul
pusha
mov
sti
mov
clc
aaa
xor
cwtl
leave
mulb
mov
mov
mov
and
xchg
stos
cmpsl
mov
cmp
xchg
adc
sub
cmp
lahf
or
lcall
xor
pusha
test
push
mov
add
adc
out
outsl
push
stc
and
lods
sbb
pop
adc
xchg
sbb
vaddsubpd
cmpsl
aaa
xchg
fs
leave
xchg
xchg
aad
cwtl
mov
bound
dec
orb
daa
pop
hlt
pop
decb
sub
or
test
test
inc
cmp
inc
sub
push
lods
push
ficompl
roll
add
pop
imull
push
and
or
cld
icebp
out
in
sbb
pop
xchg
repnz
push
clc
mov
sbb
pop
mov
xchg
jo
jne
mov
xorb
pop
cmc
dec
shl
pop
dec
pushf
xchg
inc
aad
cmp
cltd
aad
andb
jg
int3
xor
sti
gs
roll
jl
sub
inc
stc
inc
add
loopne
cs
ss
pop
jno,pt
jle
sbb
sub
hlt
or
out
xchg
mov
test
scas
pop
outsl
sti
xchg
arpl
adc
add
mov
lods
jnp
sub
jo
inc
enter
dec
or
fnstsw
xor
push
push
jmp
fists
jnp
push
scas
xor
sub
loop
lret
mov
cmp
jb
ss
hlt
push
test
add
adc
and
xchg
mov
xchg
jp
jne
into
sbb
push
enter
inc
and
fwait
jecxz
or
push
inc
sti
imul
sub
mov
cmc
pop
int
dec
dec
add
shlb
jmp
lods
lods
jb
test
push
sub
fidivrl
test
loope
je
mov
pushf
mov
or
mov
pop
add
je
jl
inc
adcb
mov
mov
push
push
sub
out
lcall
ret
adc
adc
xchg
jbe
cs
or
nop
mov
jns
push
add
mov
adc
adc
or
or
ds
xor
pusha
jl
and
sub
sbbl
aam
mov
jmp
popa
test
sbb
aaa
pop
xchg
cwtl
in
pushf
cmp
cwtl
pop
dec
insb
daa
xchg
out
xor
test
jl
dec
mov
xchg
adc
jne
jmp
fwait
pop
push
or
jge
push
push
xchg
cwtl
dec
call
out
faddl
out
daa
jns
or
xchg
xchg
dec
lock
mov
seta
shll
mov
andb
lcall
adc
imul
dec
daa
scas
or
notb
pop
arpl
pop
or
mov
xlat
div
jns
or
add
sarb
adc
push
test
xor
xchg
insl
push
insl
mov
nop
push
dec
in
test
loopne
loope
jg
jge
jge
inc
add
test
cld
imul
sahf
mov
cmpsl
mov
and
dec
test
adc
jl
arpl
icebp
aaa
addr16
sub
les
dec
jle
fmuls
hlt
mov
repz
ret
dec
adc
jg
inc
and
ret
jns
int
dec
subl
sahf
adc
jmp
pop
sahf
xchg
or
lret
dec
push
add
cmp
test
push
lock
popa
pop
push
stos
ret
inc
arpl
xor
cli
pop
inc
loopne
cmp
sbb
cld
sbb
jmp
rcl
out
jg
ret
sub
mov
rorl
shll
adc
mov
cmpsl
mov
lods
pop
cli
jge
mov
mov
xor
repz
adc
movsl
mov
aam
adc
push
pop
fs
pop
in
jae
xchg
mov
sahf
cli
aas
xchg
xor
fdivs
test
not
neg
pop
imul
inc
fisubl
test
xchg
enter
push
movsb
scas
sbb
jp
repz
repnz
sbb
lret
mov
adc
pop
enter
aaa
jle
or
pop
enter
xlat
jecxz
mov
sub
mov
add
shll
bound
jo
daa
xchg
and
mov
mov
call
mov
pushf
pop
fsubrl
test
xor
hlt
cmpsl
push
and
test
adc
mov
mov
mov
fcmovb
push
xorl
sub
push
dec
xchg
cmp
cwtl
addr16
push
mov
xchg
test
xchg
dec
sbb
shll
dec
pop
sti
lret
mov
stos
and
inc
mov
cmp
lock
mov
sahf
mov
aad
js
xchg
call
gs
or
pop
sbb
push
add
bound
inc
arpl
jae
sub
and
sbb
jge
xor
push
addr16
add
cmp
cmp
pusha
pop
xor
or
sbb
daa
enter
push
push
outsb
dec
bound
cltd
call
push
test
xchg
hlt
ja
in
or
push
insl
dec
mov
cld
aaa
xor
mov
jnp
imul
sbb
dec
cli
cmp
jle
loopne
pop
dec
into
pop
push
adc
aaa
push
and
xor
out
addr16
xchg
sbb
stc
cmc
insb
pop
and
fistpl
popa
pop
xchg
mov
fadds
push
addr16
punpckhbw
inc
icebp
jmp
adc
mov
mov
inc
popa
imul
call
lods
in
out
lret
mulb
ss
lcall
pop
fadd
add
jmp
push
mov
xchg
mov
ja
xorl
mov
sbb
ficoml
push
popf
arpl
shl
cmc
cmc
lcall
das
push
in
mov
add
ja
or
jb
xchg
fdivr
imul
cwtl
fucom
xor
xchg
mov
xor
dec
fs
cmpsl
and
je
jg
push
dec
add
push
aad
movsb
icebp
movsl
aad
jb
push
mov
mov
inc
add
out
pop
sbb
fldcw
lahf
test
jg
test
pop
and
or
add
push
xchg
xor
mov
xor
iret
negl
xor
mov
push
movsb
xchg
lea
fstpl
mov
setge
dec
or
push
std
mov
test
stos
pop
lea
adc
incb
jp
das
inc
mov
mov
fmuls
push
pop
dec
stos
inc
cltd
xor
mov
addr16
pop
inc
mov
in
mov
cwtl
push
and
int3
outsb
fucomip
or
les
xchg
aad
fisttps
adc
or
icebp
mov
in
outsb
or
rorl
mov
sbb
mov
jle
pusha
jbe
stos
sub
sub
xor
xchg
push
xchg
lret
inc
insl
xor
pushf
lahf
push
ret
cmp
fdivl
imul
sub
dec
lds
dec
scas
fidivrl
rol
sbbb
inc
push
dec
dec
sub
movsl
jg
imul
nop
jno
popa
insb
jle
cmp
nop
push
pop
push
stc
cmpsl
addr16
inc
mov
add
sti
outsl
test
mov
add
aad
or
xchg
mov
pop
stc
push
xlat
mov
dec
clc
aaa
jmp
roll
jp
ret
gs
cmp
dec
dec
and
mov
dec
sub
pop
mov
decb
lock
lods
pop
mov
mov
vsubss
mov
pop
nop
inc
out
mov
les
dec
sub
data16
or
hlt
dec
int
xor
outsb
cld
or
int
lods
ret
sub
stos
test
sar
jge
push
inc
fcmovnbe
cld
fisttpll
mov
jle
aam
push
fisttpl
mov
insb
fs
inc
add
int3
mov
add
shlb
stos
jno
fwait
out
aam
data16
dec
stos
add
pusha
lcall
je
sti
mov
inc
push
inc
cli
pushf
arpl
test
push
cmp
xchg
jle
in
in
lock
or
push
ss
jl
mov
shlb
test
pop
pusha
mov
mov
fsubr
dec
lret
and
dec
mov
cmp
jns
jo
xchg
and
mov
pop
pusha
mov
js
dec
daa
int3
popa
pop
jbe
sbb
andb
mov
jae
push
lods
test
jae
cmp
mov
aas
in
and
test
dec
cs
nop
sbb
mov
mov
mov
sbb
sub
sub
popa
in
out
pop
or
push
testb
cld
insb
pop
add
jae
pop
nop
ret
mov
xchg
mov
outsl
and
jo
jns
adc
xchg
out
shl
cwtl
js,pt
lcall
push
sbb
and
hlt
repz
sbb
repnz
and
or
xchg
out
mov
stos
cmp
fsts
mov
rorl
repnz
push
adc
and
icebp
scas
pop
adc
add
jge
xor
cs
fldt
jecxz
push
and
add
faddl
clc
inc
ret
mulb
rcr
ret
cmp
in
inc
mov
imul
xor
add
addr16
hlt
cs
aam
bound
call
shrl
out
stos
or
fsubp
xor
rorb
sbb
xchg
shl
repnz
inc
or
insl
lret
enter
aaa
mov
add
icebp
inc
sub
orb
cwtl
sahf
mov
aaa
gs
lock
pop
daa
sbb
gs
loop
or
scas
xchg
xor
mov
sub
popa
aaa
sahf
push
mov
add
out
out
dec
or
faddl
inc
insb
xchg
adcl
in
aad
stos
lret
mov
add
mov
das
and
xor
cwtl
enter
cmpl
decb
jae
mov
ror
lahf
stos
lret
bound
jmp
insl
mov
push
dec
sbb
pushf
jb
jl
ds
into
cltd
repz
jnp
nop
sub
cld
xchg
out
push
ret
jne
pop
push
add
xor
fs
fists
test
push
cwtl
out
dec
pop
int3
jle
rcl
pop
dec
jge
and
fs
cmovb
inc
cmc
pushf
sti
jne
mov
push
or
lcall
pop
mov
mov
push
inc
xor
iret
in
push
dec
inc
sbb
addb
inc
and
push
xchg
mov
and
push
popf
push
add
xchg
in
xchg
and
cld
cmp
lcall
loop
push
cli
shll
outsl
std
or
movsb
inc
call
stos
sub
or
cltd
add
xor
xor
fstps
mov
xchg
xlat
xchg
push
jns
stos
mov
fstpt
xor
or
adc
sub
pop
hlt
xchg
dec
xchg
sub
sub
mov
xor
jg
push
in
push
test
push
pop
sub
test
add
rcrl
cmp
jmp
jp
cs
insb
mov
stc
scas
adc
dec
mov
and
cltd
sbb
mov
xor
pusha
inc
dec
mov
cmpsb
jecxz
xor
ds
pop
sub
push
insb
jo
xchg
xchg
pop
dec
push
test
fldt
xchg
jge
and
stos
jmp
xchg
mov
shrb
aaa
mov
mov
xor
icebp
icebp
scas
push
cs
add
sub
adc
cmp
sbb
dec
pop
jle
je
jno
add
sbbl
cwtl
push
jnp
stc
jbe
inc
cmp
mov
mov
or
insl
add
inc
mov
jmp
adc
add
pop
pop
pop
idivl
push
outsb
cmpsb
cmp
in
mov
mov
push
push
and
lahf
add
ljmp
jb
inc
cltd
dec
lock
movsb
arpl
les
push
mov
pop
lods
cmp
fsts
iret
fs
jecxz
repnz
clc
adc
leave
pop
mov
lcall
and
mov
mov
das
jp
and
cmpsl
inc
fiaddl
lret
cmpsb
sub
sbb
xor
jne
popf
mov
lret
ljmp
cmc
dec
xchg
cmpsl
or
int
nop
inc
jb
andb
in
aam
aaa
sbb
mov
int3
and
and
inc
ret
outsb
cmp
dec
jmp
xlat
lcall
gs
cmpsb
ror
out
mov
push
xor
fmull
nop
cltd
or
test
xchg
int
jo
cmp
mov
push
call
call
rorb
pushf
fisubrs
fisttpll
xchg
and
push
adc
jb
jge
jns
imul
imul
dec
ja
dec
pop
mov
lahf
out
xor
adc
std
notb
dec
enter
fisubrs
xchg
ja
fs
es
lcall
pop
pop
add
and
mov
jmp
inc
mov
pop
scas
cmp
inc
bound
in
jnp
aad
outsb
sbb
adc
mov
add
mov
mov
in
and
enter
adc
inc
push
xlat
mov
or
dec
lcall
push
dec
imul
fisubrl
outsb
outsb
inc
inc
and
xor
ja
and
and
inc
clc
adc
jno
mov
ds
cwtl
push
lea
fs
out
lret
mov
mov
jno
loop
push
pop
dec
mov
icebp
and
adc
sub
push
fxch
das
mov
std
subl
pop
nop
cmp
adc
push
and
popa
or
xchg
dec
mov
push
flds
arpl
xor
push
mov
push
bound
sbb
mov
mov
cli
cwtl
dec
outsl
loop
lret
xchg
or
and
js
mulb
js
movsb
pop
mov
stc
and
jno
add
dec
notl
mov
push
lea
stc
mov
mov
lods
cmp
int
in
scas
xchg
ss
stos
inc
pop
jnp
mov
sub
mov
lahf
mov
cmp
or
jp
mov
popf
mov
push
ds
add
movsb
push
mov
jnp
pop
sar
mov
out
dec
jecxz
jmp
shlb
arpl
pop
fldt
push
pop
iret
push
aad
adc
mov
sub
in
hlt
mov
xor
push
cmc
inc
mov
jecxz
add
xchg
pusha
jg
es
pop
add
mov
repz
fidivrs
add
mov
lds
jbe
out
popf
jae
push
cmpsb
ljmp
mov
stos
iret
repz
pop
stc
xchg
cmp
xchg
push
es
inc
insl
fwait
pop
loop
sbb
pop
sbb
scas
lret
loopne
cmpsl
sbb
std
push
xor
cltd
negb
jp
mov
mov
and
and
scas
ljmp
out
scas
out
insl
cmp
loop
dec
lds
or
mov
mov
mov
ss
xor
jmp
mov
or
or
out
sbb
insb
jle
cltd
sahf
lods
movsl
dec
or
cmp
je
ja
addr16
adc
jmp
dec
jae
push
out
ret
cli
xchg
xor
mov
pop
inc
loope
sub
push
cmpsl
sbb
sub
sub
mov
shlb
or
mov
loopne
mov
scas
xor
rclb
mov
out
sbb
push
aas
ret
inc
iret
insb
into
scas
roll
pusha
mov
cmp
nop
test
xor
imul
mov
mov
sub
and
outsb
das
arpl
ret
scas
aad
mov
subl
movsb
and
add
jae
xchg
in
cs
sub
inc
lret
dec
divl
mov
shlb
pop
out
dec
lea
inc
add
mov
fisubrl
jp
cmc
jno
jecxz
fimull
icebp
sbbl
jns
sbb
sub
pop
sub
outsl
das
xchg
rep
in
shl
cmp
or
je
cli
pushf
idivl
pushf
ret
pop
mov
inc
imul
push
addb
add
adc
cmpsb
sub
cmp
xor
mov
adc
adc
in
loopne
xor
in
shr
loopne
fxch
pop
push
xor
add
inc
sub
fmull
nop
sub
lods
outsl
cmp
aas
shll
mov
xor
pushf
cmp
shr
jae
dec
lds
sbb
mov
out
and
rorb
or
push
or
into
test
pop
js
jo
loope
fcompl
orl
xchg
pop
pop
adc
bound
pusha
call
out
push
les
or
mov
xor
pusha
fstps
stos
loopne
inc
dec
mov
mov
loop
cld
jno
dec
jecxz
cltd
je
hlt
inc
sub
mov
dec
repz
int3
xchg
sbb
mov
shl
sbb
xchg
adc
loopne
pusha
mov
ret
int3
daa
outsl
into
jns
js
mov
inc
adcb
jns
mov
outsb
jp
adc
repz
cmp
dec
out
xchg
mov
bndldx
or
insl
mov
or
pop
divb
sahf
mov
dec
imul
ja
inc
lock
fcmove
aad
aaa
and
xchg
pop
les
test
jae
aas
mov
and
add
divl
fisttpl
push
and
ja
mov
idiv
cltd
sbb
mov
lds
mov
mov
and
je
mov
pop
cmp
das
dec
xchg
or
imul
ret
ret
mov
mov
and
mov
and
in
fbstp
sahf
in
adc
mov
pusha
or
outsl
mov
pop
movsb
jbe
adc
jbe
jge
jle
lods
xchg
cmp
ss
pop
pop
add
test
xor
in
xchg
insb
xchg
mov
fucom
xchg
inc
xor
rclb
mov
sub
dec
fucomp
mov
dec
lock
cwtl
cmp
or
jmp
lret
gs
data16
rorb
clc
in
push
mov
pushf
mov
xchg
nop
pop
push
fldt
std
adc
ret
mov
les
sub
roll
jmp
mov
rolb
cmp
out
and
mov
ds
sbb
jo
mov
mov
push
scas
xor
insl
pop
lret
push
pusha
in
fcmovnbe
repz
lahf
iret
jns
pop
out
sub
rol
push
sub
fists
sub
in
xchg
mov
stos
ret
sub
mov
int3
mov
sbb
pop
lahf
movsl
mov
out
fs
push
dec
sbb
decl
pop
dec
xchg
xlat
addr16
pop
push
push
push
xchg
popf
xchg
sbb
lahf
js
xor
flds
dec
shr
scas
push
fdivrs
js
mov
xchg
aad
sarb
mov
std
xor
nop
aas
mov
ja
or
aas
imul
xor
mov
mov
fs
sub
add
stc
shl
das
stc
out
dec
mov
cmp
mov
push
fdivrl
push
pop
addr16
ss
arpl
cmp
stos
jmp
xchg
sub
and
pop
push
push
out
push
fbstp
dec
cmc
in
push
enter
sub
popf
pop
lahf
cwtl
je
inc
xchg
jmp
in
push
push
sub
sbb
dec
lahf
roll
lcall
sub
push
add
dec
int3
js
stos
iret
jmp
repnz
pop
pop
leave
lcall
cmpsl
dec
mov
out
lcall
cmp
movsb
push
push
mov
or
dec
fimuls
subl
pop
jnp
adc
inc
lret
data16
add
xor
or
push
mov
lods
mov
mov
sub
shll
gs
lahf
ret
xchg
sbbl
nop
mov
clc
fimuls
push
int3
iret
dec
imul
ret
and
adc
jno
push
or
or
aas
fiadds
push
enter
idivl
or
cmpl
xor
pop
in
insl
and
or
xor
mov
loopne
insb
in
cmpsb
sub
mov
sbb
popa
push
mov
scas
mov
lcall
bound
dec
enter
hlt
push
inc
in
cmpsb
mov
clc
mov
jge
hlt
in
inc
xor
ds
add
jmp
cmp
lahf
and
and
cmp
jge
push
cmp
int3
leave
pop
xor
push
sub
pusha
push
dec
inc
fldl
xor
mov
das
or
xlat
dec
or
repnz
pop
lcall
cmp
mov
mov
lds
repz
jle
icebp
cmpsl
mov
loope
ds
or
cmpsl
das
jge
cwtl
jae
popf
sub
sbb
sbb
xor
and
sbb
fwait
pop
idivl
popf
addr16
mov
jp
imul
outsb
lea
xor
int3
xchg
jo
xchg
insb
add
movsl
jae
dec
sti
mov
popf
sti
ret
aaa
mov
movsb
popa
push
xor
je
adc
in
jp
sbb
lea
fcomps
sbb
cmp
imul
mov
dec
cmp
mov
mov
in
mov
mov
bndldx
les
inc
mov
jnp
cmp
inc
fmuls
and
stos
fnstcw
das
pop
cs
mov
push
pop
sbb
idivl
xor
lods
movsb
ret
cmp
xchg
mov
cmp
or
jno
dec
cmp
test
sub
ret
mov
fisttpl
out
aad
mov
stc
mov
mov
and
lds
cmpsl
das
ds
in
pusha
add
pop
sbb
sub
mov
xchg
fistpll
and
add
call
je
shlb
dec
mov
into
cmc
cmp
outsl
xor
mov
push
and
arpl
mov
das
sbbl
or
or
or
inc
xchg
les
xor
rcl
sub
pop
push
xor
das
jmp
outsl
mov
repnz
sbb
cmpsb
xor
jle
movsb
jbe
ljmp
repz
or
sub
add
roll
pop
mov
fbld
in
cmc
out
mov
outsb
xchg
jae
mov
ror
push
or
jns
pop
icebp
dec
mov
in
popf
stc
mov
fcmove
jl
loope
es
jge
movsl
push
les
jbe
cmpb
cmp
jbe
sbb
imul
ror
leave
les
in
in
mov
ret
cmpsb
adc
shr
jne
cmp
jns
pusha
in
cwtl
and
mov
cltd
lahf
loop
clc
nop
adc
mov
insb
les
cli
add
repz
cmc
inc
daa
scas
sbb
mov
push
out
inc
and
imul
addb
xor
xchg
popa
in
and
xor
leave
push
sub
pop
push
adc
xor
in
mov
mov
push
inc
pushf
repnz
jl
pop
in
mov
pop
dec
cs
test
fimuls
daa
cmp
loope
push
ss
cmpsb
insb
push
lods
fsubrs
and
add
mov
pop
push
adc
jle
sbb
mov
mov
nop
outsl
fimull
push
and
dec
cmc
inc
mov
jmp
mov
clc
aas
movsl
mov
sub
and
bound
mov
loopne
in
and
push
jns
sub
ja
daa
ss
dec
loope
flds
mov
scas
popa
sbb
xor
cmp
mov
mulps
into
shll
xor
xor
adcb
cli
adc
push
jae
adc
stos
andl
loopne
stc
mov
stos
adc
shlb
rorb
inc
xchg
mov
cli
ret
bnd
jp
mov
mov
ds
imul
jae
sbb
pop
xchg
outsb
jne
push
aad
gs
xchg
iret
xchg
faddl
sub
inc
pop
cld
push
mov
fistpl
in
mov
pop
push
stos
aas
xor
push
add
jns
jns
gs
addr16
icebp
repnz
stos
inc
ret
mov
pushf
push
pop
cmp
mov
fldt
add
xor
xchg
jmp
or
or
clc
adc
subb
lods
mov
mov
idiv
push
rorb
inc
call
pusha
inc
and
in
icebp
and
int
lcall
sub
addr16
sub
pop
mov
add
das
movsl
xchg
or
inc
out
sarb
adc
and
push
shlb
testl
lcall
test
adc
insl
out
call
push
and
jecxz
push
scas
pop
mov
test
jbe
cmpsb
push
fnop
gs
xor
gs
jbe
xchg
jge
out
sub
push
addr16
int
push
jle
pop
jmp
mov
out
mov
add
out
xor
xchg
mov
in
call
adc
std
in
jmp
cmc
jnp
push
call
mov
xlat
mov
xchg
push
inc
std
into
int
mov
or
addr16
cmp
pop
sbb
data16
cmp
lret
cmpsl
incl
icebp
cmp
mov
sub
and
adc
push
sahf
mov
jbe
xchg
push
and
test
test
sub
ret
sub
repnz
or
xlat
jo
pop
rorl
icebp
mov
insl
bound
ljmp
or
xorb
lock
dec
mov
and
jnp
adcb
roll
dec
scas
jecxz
shrl
jle
ja
imul
dec
pop
and
mov
loope
cmp
inc
movsl
push
sbb
push
fsubs
shl
ljmp
mov
movsb
push
xlat
lds
int3
push
mov
fstpt
mov
mov
into
jle
int3
aas
insl
push
int3
sbb
in
mov
mov
stc
sti
cmpsl
sub
push
test
pop
push
fmul
cmc
outsl
cmp
push
cmp
fdivrs
pop
loope
or
mov
mov
xchg
hlt
lret
or
jp
sub
fbld
mov
icebp
addr16
out
divb
xchg
jg
adc
cs
and
xchg
dec
aaa
adc
pop
push
cmp
pop
shll
loope
jae
loop
jge
das
mov
sbb
xlat
push
jmp
sub
and
dec
xchg
lock
movsb
pop
inc
addr16
inc
int
xchg
pusha
push
es
clc
cmp
sbb
fptan
hlt
in
repz
data16
xor
arpl
movsb
pop
jbe
mov
mov
or
out
stc
dec
test
int
push
pop
out
fstpt
mov
sub
mov
jnp
ret
add
scas
jp
inc
jns
push
dec
xchg
xor
int
xchg
cmp
gs
cwtl
add
lock
ret
push
and
int
adcb
lods
stos
cmc
hlt
xchg
loope
sbb
int
pop
or
jecxz
imul
mov
aas
xlat
dec
sbb
mov
cwtl
mov
and
jecxz
aam
cwtl
std
int
leave
cltd
outsb
outsl
aaa
repz
ja
pop
mov
inc
fstpt
rorb
push
icebp
lahf
xchg
add
fs
les
mov
lret
std
rcrl
xchg
adcl
add
rcll
adc
js
jno
xchg
mov
lahf
bound
jge
push
fdiv
sbb
outsl
mov
ss
test
dec
and
dec
xchg
rorl
lods
adc
mov
rclb
ja
cmp
pslld
outsl
lods
and
adc
mov
dec
stos
mov
lods
pop
shlb
into
push
sti
and
mov
cmp
push
mov
push
outsl
lret
jo
jp
jno
bound
incb
lods
jmp
shll
sub
mov
push
ja
jbe
mov
addr16
and
icebp
push
dec
ret
mov
sarl
ss
in
xchg
or
dec
or
jo
leave
int
adc
into
mov
test
enter
hlt
dec
mov
loope
sahf
push
mov
scas
and
inc
int3
mov
xor
clc
scas
js
push
jbe
nop
xor
mov
inc
inc
push
jecxz
scas
into
cmp
imul
jno
lods
loope
fimull
xor
mov
xorb
mov
arpl
jle
iret
lahf
cmp
xor
mov
fistps
jle
jmp
sub
pusha
inc
in
inc
imulb
xlat
inc
push
dec
push
mov
and
mov
pop
push
fs
mov
jp
mov
fdivrs
cmp
adc
mov
pusha
push
stos
cmpb
cli
rcrl
sbb
ficoms
notl
lcall
rcrl
xchg
insb
jbe
jne
iret
insl
xlat
adc
pop
es
add
aaa
aas
stc
gs
lods
cltd
cmp
xor
imul
enter
dec
or
sahf
mov
stos
adc
inc
aaa
jmp
aaa
xor
mov
cmp
es
adc
sbb
xor
leave
xor
aad
xchg
ss
adc
ljmp
sub
rolb
je
push
and
andl
dec
sub
sbb
xchg
aaa
andl
dec
inc
std
stos
loope
fcoms
xlat
fcompl
mov
jno,pn
or
jo
dec
cmp
ds
mov
adc
push
in
call
test
in
ret
sub
jle
pop
daa
mov
or
inc
sbbl
lret
dec
mov
or
xchg
mov
enter
jo
adc
push
and
inc
cltd
aam
in
xchg
stos
pop
iret
mov
ds
mov
jmp
repz
xchg
lret
adc
sbb
mov
mov
dec
mulb
addr16
daa
dec
shll
pop
and
xchg
movsl
daa
popa
stc
xchg
xor
mov
test
jb
mov
out
cmp
pop
cmp
lea
in
push
sub
xor
push
movb
push
test
aaa
pop
test
xlat
jb
bound
loopne
fcmovnu
push
jl
sub
jno
lret
lds
xchg
not
jmp
push
xchg
nop
out
nop
or
pop
add
scas
cli
sbb
movsb
inc
xlat
push
dec
mov
jnp
and
add
sub
int3
sub
es
int3
sbb
js
out
push
push
mov
dec
imul
dec
jle
mov
scas
cmp
cs
mov
mov
loopne
inc
cmp
arpl
or
lods
add
and
cmp
loope
mov
mov
add
inc
add
mov
insl
mov
shl
rcrb
cs
je
inc
mov
pop
jle
fs
cld
jge
jae
mov
pop
jne
ret
lret
das
jns
dec
pop
add
lock
orb
or
xchg
mov
ret
mov
jmp
out
shlb
fcmovbe
sbb
push
filds
pop
sbb
cmc
repz
stos
mov
inc
testb
xor
mov
add
test
lds
es
mov
and
or
xchg
inc
jbe
add
int
data16
ja
loopne
je
inc
sahf
dec
adc
sub
cmp
sti
aas
pop
mov
ljmp
testl
push
mov
cmp
push
push
inc
add
int3
les
lods
addr16
neg
lcall
ss
push
fidivrs
test
sub
test
leave
popa
jb
out
jl
enter
mov
cmp
das
aad
cmpsb
push
lock
jae
xchg
sti
jno
pop
sti
cli
lret
sbb
pop
xor
mov
outsl
clc
push
jae
xchg
jp
and
fs
pop
fs
sbb
mov
jns
pushf
sbb
inc
sbb
test
xchg
test
push
mov
fidivs
repnz
aad
in
adc
pop
mov
jmp
and
pop
jge
cmp
sbb
jbe
sbb
inc
add
inc
xor
daa
ret
cltd
push
push
cld
pop
lock
ds
mov
push
pop
test
mov
imul
or
icebp
pop
in
adc
aad
mov
cmp
sbb
or
cmp
xor
or
pop
xchg
jno
mov
aas
jb
ljmp
sub
xchg
ja
test
lods
aam
xor
or
lret
int3
mov
add
pop
inc
jb
inc
pop
cmp
mov
xchg
pop
jns
call
sbb
out
or
fdiv
popf
sbb
or
push
in
mov
or
lahf
scas
adc
ret
mov
mov
out
sbb
add
out
out
or
xor
add
jo
mov
cltd
cmp
ds
out
pusha
pop
imull
xchg
rcrb
jp
jo
pop
insb
outsl
ret
adc
xchg
incb
sbb
mov
pop
shll
sbb
int
push
mov
inc
sbb
nop
jp
cmp
enter
sti
pop
std
rorl
pop
sbb
into
cmpsb
adc
insl
push
das
int3
mov
nop
into
jnp
mov
add
notl
es
xor
clc
and
dec
mov
in
mov
fildll
mov
fucomp
push
shlb
jp
and
aas
sarb
cld
mov
sbb
sti
xchg
pop
rcl
push
and
pop
mov
inc
movsl
lods
adc
dec
dec
mov
jmp
mov
outsl
mov
adc
popf
push
or
stc
xlat
mov
pushf
mov
cmp
add
jne
nop
out
mov
repz
or
jle
pushl
inc
mov
mov
subb
dec
inc
or
addb
jmp
fldl
mov
mov
stos
push
fsub
xor
mov
ljmp
daa
in
jnp
xor
in
ljmp
dec
jne
addr16
loop
and
lahf
xchg
cltd
xchg
push
push
pop
jns
icebp
add
adc
and
pushf
mov
and
shll
movsl
hlt
test
jmp
je
jle
mov
scas
insb
ret
nop
imul
lock
dec
fucomp
popa
pop
mov
bound
xchg
in
lahf
bt
mov
pop
sets
insb
out
outsb
mov
push
push
mov
movsb
xor
cmc
mov
jmp
and
test
jmp
dec
dec
clc
pop
loop
and
sti
mov
lahf
sti
gs
pslld
fisubl
das
add
jle
packssdw
push
cmp
stc
or
and
sub
xchg
lahf
mov
push
jbe
push
xchg
movsl
pusha
sub
xchg
ds
mov
addb
sub
mov
dec
call
aas
fnstcw
jge
and
inc
in
cmpb
push
icebp
push
mov
es
pop
rcr
movl
cmp
push
rcll
push
inc
pop
mov
fists
or
sbb
cmp
pop
es
stos
ficompl
pop
dec
and
adc
dec
loopne
inc
cmpsl
in
inc
pop
orb
mov
jge
inc
movsl
test
jle
lret
mov
and
or
pop
ss
xchg
out
add
push
xor
jae
add
in
xchg
popf
pusha
out
mov
sbb
mov
pop
fisttps
inc
shl
mov
pushf
leave
xchg
mov
fistps
inc
aad
lret
scas
mov
pop
and
xchg
out
daa
loop
aaa
incb
in
cltd
sub
mov
pop
mov
jle
push
leave
pop
ja
xlat
sub
pop
outsl
ret
out
sbb
insb
pusha
std
les
lret
outsb
ljmp
dec
fisubrl
repnz
lret
incb
jg
scas
jecxz
fsubp
sbb
pushf
nop
icebp
fldl2e
mov
jge
js
dec
inc
das
cmp
pop
mov
fimull
repnz
outsb
mov
xor
in
rcl
mov
xor
sub
test
repz
cmp
cmpsl
xchg
dec
hlt
cmc
push
iret
mov
cmp
xor
and
jg
inc
xlat
mov
lret
sub
insl
in
fldenv
sub
mov
xor
popf
push
arpl
jns
cs
mov
sbbb
fwait
gs
cmp
jb
push
inc
sbb
sbb
mov
addr16
sbb
xchg
xchg
rorb
mov
popa
cmpsb
xor
cmp
ja
inc
shll
xchg
cmp
inc
sbb
mov
jb
je
sbb
loope
inc
mov
push
mulb
mov
insl
sub
and
outsl
lods
mov
in
xchg
mov
call
movsl
call
fwait
lcall
aas
sub
jnp
xchg
xor
test
mov
cmp
pusha
and
stos
pop
out
mov
ror
mov
xor
mov
pop
cld
push
hlt
js
out
stos
jo
adc
xlat
mov
cs
jge
sbbb
inc
test
dec
in
mov
cmpsl
imul
mov
mov
int3
repnz
inc
xor
xor
insl
lahf
out
add
mov
les
dec
pop
pop
cmp
test
jnp
cli
mov
ss
or
and
xchg
sub
cld
pop
lods
add
xchg
dec
inc
jno
sahf
mov
push
xchg
mov
dec
add
xchg
cmp
jne
out
aam
or
mov
int3
ss
jo
das
dec
adc
inc
dec
shll
iret
pop
sbb
adc
repnz
cmp
adc
cwtl
mov
iret
iret
jecxz
push
fs
fcmove
adc
js
mov
out
bound
xor
dec
cli
sbb
sbb
xchg
outsl
cmp
mov
stc
and
out
in
dec
push
add
add
mov
call
push
in
ret
inc
xchg
setnp
imulb
jp
stos
outsb
test
pop
and
aad
lgs
js
sbb
mov
mov
cmp
rcl
mov
sub
cltd
mov
andl
in
and
inc
lea
dec
aam
adc
je
inc
mov
in
in
ja
ja
jmp
lret
iret
in
repnz
jb
cmp
fldt
fsubl
mov
stos
je
inc
stc
and
or
imul
movsl
cmp
mov
pop
out
xor
push
in
and
mov
mov
lods
push
mov
addr16
push
cld
pusha
mov
push
test
nop
in
lcall
ds
aam
sub
stos
mov
int
lcall
ret
stc
ljmp
sub
cwtl
jns
mov
inc
xchg
lods
mov
aad
arpl
adc
outsl
push
xchg
jne
stos
add
movups
hlt
je
jmp
ja
jns
pop
out
mov
pusha
adc
pop
xchg
mov
sub
adc
jbe
rcrb
jno
push
cmp
jmp
dec
insb
jae
xchg
stc
stos
pop
jne
mov
push
push
into
aaa
cmc
nop
and
dec
xchg
add
out
aad
sub
dec
mov
sbb
inc
jae
push
push
mov
or
cmp
sub
movsb
gs
or
sub
xchg
cmp
fidivrl
cmp
xchg
mov
fists
rcl
pop
xchg
cld
stos
or
psadbw
inc
mov
arpl
push
outsb
stos
xchg
add
insl
shrb
mov
mov
lret
dec
insl
mov
mov
lcall
jb
sbb
mov
int3
addb
cli
jb
sbb
call
and
xor
fs
fmuls
sarl
shrl
xchg
scas
int
mov
pop
pushf
or
jecxz
adc
loopne
mov
loop
fsubs
sub
cmp
xlat
in
xor
jne
gs
cmp
inc
fstps
ret
pop
mov
fcmove
aaa
mov
sbb
jb
jo
paddusb
cmp
push
pop
leave
out
filds
mov
ret
adc
mov
cmpsl
dec
test
inc
cmpl
sbb
ret
roll
mov
and
jae
rolb
ljmp
add
popf
inc
fsubrs
inc
cmp
subl
push
mov
out
mov
pop
lds
fimuls
jae
addr16
cmpsl
iret
and
sub
cmp
out
push
push
add
aas
jmp
movsb
dec
push
cld
xchg
and
pop
stc
fstp
and
test
dec
shlb
loopne
jb
xchg
lret
mov
lock
in
mov
repz
jg,pn
mov
xor
add
inc
mov
test
test
push
jp
movsl
call
rcrl
stc
jo
cs
out
jp
push
jno
xor
loopne
jnp
add
rcrb
fldl
fs
or
add
out
mov
mov
cmp
push
mov
push
and
cmpsb
stos
lods
daa
cwtl
pusha
dec
aam
pop
int3
dec
sbb
fucom
pop
inc
lock
xchg
add
leave
divb
cli
std
testb
dec
add
int3
mov
ret
rcll
add
addr16
push
xor
mov
pop
push
jmp
xor
int
xchg
aad
inc
int3
lret
dec
test
dec
pop
ret
fcmovnbe
ret
sti
and
test
jl
xchg
fwait
pusha
add
bound
cmp
push
cmp
es
enter
sub
mov
dec
gs
into
and
mov
test
mov
pop
add
test
rcrl
fadd
push
xor
pusha
mov
push
xchg
stos
push
fstl
insb
cli
dec
loopne
jno
aaa
into
lret
mov
or
lock
pop
xchg
ret
pop
mov
push
cmp
fwait
jo
xor
aas
and
andl
sub
or
jo
aam
lods
popa
jl
std
popf
ret
cmc
pop
adc
push
pusha
pop
mov
add
clc
and
sub
xchg
rcll
arpl
add
and
addl
movsl
cmc
mov
xchg
xchg
xor
lahf
sbb
adcb
ja
loopne
mov
in
cltd
cmp
popf
sub
cltd
add
lcall
out
xor
call
dec
popa
subl
or
iret
lods
cli
sbb
fs
cmp
xor
jo
mov
add
je
dec
je
test
hlt
pop
mov
sub
push
stos
mov
xchg
into
sahf
std
js
jp
test
or
ja
sbb
push
not
aad
movsb
jmp
pop
mov
push
movsl
xchg
jno
cwtl
int
pop
fwait
inc
pop
xchg
aad
into
std
scas
popw
xor
pop
xchg
je
pop
data16
push
mov
aad
lcall
xor
sahf
cmp
push
push
dec
fistpll
sbb
in
mov
jno
and
push
jge
push
cs
dec
adcb
outsl
mov
or
mov
insb
dec
inc
pushf
vpsrad
adcl
cmp
push
ret
adc
nop
jl
or
push
mov
ss
daa
sub
cs
push
fidivrs
lret
mov
inc
push
outsl
inc
sub
mov
pop
jg
fsubrp
push
jp
jge
fbld
and
xor
adc
adcl
hlt
out
ljmp
or
pop
mov
lods
and
sub
test
pop
jg
and
adc
mov
fs
mov
and
mov
addl
ret
ret
and
mov
ret
into
mov
out
sbb
bound
add
insb
push
xor
cmp
sub
leave
jecxz
mov
xchg
sbb
mov
fdiv
hlt
xchg
lock
dec
arpl
pop
xchg
inc
xchg
hlt
jno
stos
std
int3
xorb
xor
push
rolb
pop
jmp
sub
stc
out
aad
mov
iret
inc
push
cmp
push
mov
call
sub
enter
popa
add
aas
jecxz
cltd
jnp
dec
jmp
xchg
mov
jns
inc
and
pop
cwtl
xchg
mov
and
arpl
push
sub
dec
sbb
ss
cmp
cwtl
pop
dec
adc
jo
cbtw
ja
ret
clc
test
ficoms
cs
mov
adc
frstor
lock
sarb
shr
and
inc
push
insl
data16
addl
dec
stos
sub
push
in
add
repnz
and
jne
fnstcw
or
ja
inc
sub
inc
xchg
lods
out
and
aaa
xor
shrb
addl
aaa
jmp
dec
adc
mov
mov
sbb
loope
cmp
and
std
cmc
sub
lea
jp
das
cwtl
in
cld
mov
into
jp
cmp
ret
into
fistpll
cwtl
rcr
insb
and
inc
push
out
aam
push
jnp
and
dec
sbb
pop
ja
leave
push
in
jns
adc
andb
fistpl
repnz
mov
and
pop
pop
insb
pop
mov
mov
aam
es
inc
testl
push
mov
xor
jp
daa
imul
dec
mov
adc
mov
pop
mov
gs
pop
bound
mov
push
lahf
jecxz
cltd
push
mov
cmpsb
push
adc
das
mov
mov
out
insl
add
sub
dec
and
dec
popa
mov
ss
daa
icebp
fidivrs
xchg
mov
cltd
add
cmp
scas
dec
or
fildll
dec
mov
jnp
lret
or
pop
sub
outsl
adc
and
mov
mov
and
sbb
imul
inc
cld
push
sbb
cltd
xlat
imul
mov
and
je
in
pop
addr16
popa
sti
jnp
pop
lods
xchg
pop
jae
jp
fcomps
lock
pop
imull
movsl
ret
jp
in
add
fstps
js
push
jno
arpl
mov
lret
loope
ja
outsl
dec
push
mov
dec
sbb
popa
aad
adc
dec
movsb
imul
pop
pavgw
les
shrb
stos
jb
mov
push
xchg
and
mov
pushf
jo
scas
sub
dec
aaa
xlat
xor
std
sarb
jns
insb
pusha
cs
test
dec
fsubrl
and
cmp
push
mov
rcrl
dec
aaa
ja
sahf
and
dec
sahf
pop
outsb
sbbb
ds
mov
dec
mov
divl
and
sbbb
sahf
fstpt
cmp
sub
cmp
mov
dec
insl
insl
icebp
jne
movsb
pop
je
into
call
rorl
inc
dec
ds
adc
arpl
mov
lea
and
and
push
adcl
jle
jnp
sbb
cmc
push
retw
mov
lds
sbb
scas
addr16
cmp
inc
pop
push
adc
jo
sub
cmpsl
mov
jns
inc
out
rcll
fldenv
pop
and
rcrl
fs
loopne
or
sbb
adc
repnz
fnsave
dec
mov
inc
incl
les
push
subl
jns
out
aas
lods
mov
mov
insl
test
mov
stos
fst
jb
popl
fcmovnu
mov
adc
push
ss
pop
or
jnp
jge
lods
loopne
and
inc
dec
rcr
pusha
add
iret
sub
fwait
sarl
icebp
outsl
fdivr
je
jns
fistps
jmp
xor
xchg
or
movsb
in
sbb
mov
std
or
test
adc
call
sbb
or
push
pop
sbb
cmovno
lods
aas
ret
lds
clc
ja
test
in
lods
jbe
xchg
fbld
in
mov
dec
add
ja
pusha
out
or
and
mov
lea
sahf
bound
sbb
loope
push
cwtl
pop
dec
rcrb
mov
dec
mov
fsubs
jecxz
pop
xchg
in
inc
mov
stos
arpl
inc
addr16
repz
dec
sub
imul
aaa
cld
jmp
inc
and
mov
jmp
das
pop
xor
or
sbb
movsb
xchg
nop
cmpsb
xchg
cmpsb
dec
sub
rcrl
xchg
xor
sbb
clc
mov
mov
mov
cltd
push
ss
dec
leave
addr16
ret
aad
xor
repz
test
lock
push
mov
ja
loopne
push
sbb
xchg
dec
adc
outsl
mov
int
es
lds
xlat
or
mulb
push
mov
inc
xor
shlb
mov
xor
lods
or
xchg
shr
push
and
jmp
xchg
inc
xor
mov
pusha
movb
out
aam
inc
ficomps
std
jge
clc
stos
inc
int
jl
test
in
push
xor
std
rcrl
jnp
mov
test
sarb
test
cmp
test
test
iret
xchg
pusha
es
arpl
sub
sub
xchg
popf
push
test
sahf
ss
pop
jbe
add
mov
fmul
jb
aas
xchg
jle
sub
les
push
outsl
ret
gs
out
ljmp
add
fs
lcall
jo
push
ret
sub
popa
fimuls
decb
cwtl
cmp
xor
testb
lret
push
mov
loope
sbb
jne
adc
jge
xchg
jmp
out
mov
or
mov
dec
jp
cmp
mov
subl
pusha
lods
xchg
ret
jge
xchg
sti
scas
gs
xchg
subb
pop
mov
push
test
or
adc
jmp
jbe
rorl
add
cmp
loop
mov
bound
sahf
insl
xchg
inc
add
lock
cmp
test
call
scas
dec
cltd
sub
add
xchg
test
or
xchg
addr16
sahf
jns
sub
dec
jne
or
cmpsl
fwait
shld
fildll
test
icebp
jb
pop
lahf
es
ret
cmpsb
mov
sti
orb
lods
shl
mov
push
add
fbld
call
cwtl
inc
ret
sti
into
out
xor
xchg
sub
pop
jecxz
aaa
xchg
popf
movsb
arpl
data16
popf
dec
xchg
inc
mov
sub
dec
inc
out
xchg
stos
xchg
adc
daa
test
sub
roll
sbb
stc
push
fucomip
test
mov
push
call
xor
xchg
xor
push
jae
push
test
push
sub
fnstcw
jae
outsl
pop
jecxz
into
cmp
sbb
cmpsb
scas
sbb
xchg
lock
add
jns
movsb
sti
and
adcb
inc
push
ss
repnz
ret
pop
bound
pop
dec
add
xor
add
cs
inc
or
xor
mov
in
lret
add
sbb
xchg
lret
jbe
pop
jae
lods
push
cmc
mov
lods
push
push
cmc
popa
adc
adc
jo
sbb
cmpsl
ret
int3
out
pop
hlt
insb
les
pushf
aad
xchg
imulb
push
je
insb
ljmp
sar
add
xor
mov
cmp
xchg
xlat
dec
aad
lea
jnp
loopnew
test
out
shrl
fstl
stos
lods
movsl
xchg
mov
rcl
xchg
pop
fstpl
mov
fcoms
repnz
inc
lock
xchg
insl
jecxz
icebp
xorb
pop
lret
ljmp
cmp
mov
movsl
xchg
add
jnp
and
jp
std
xor
cmp
gs
push
dec
inc
dec
stos
xor
jp
mov
sub
es
pop
sbb
fsts
andb
inc
sarl
mov
jb
int
xchg
leave
in
mov
pop
mov
xchg
mov
cmp
or
dec
out
out
icebp
outsb
pop
gs
leave
adc
imul
sub
mov
hlt
sub
mull
fwait
dec
dec
xor
mov
hlt
sbb
sti
jge
stos
or
mov
xor
in
int
cwtl
shlb
aad
ror
imul
push
out
outsb
scas
test
pop
push
xchg
add
xchg
push
scas
ja
mov
dec
sbb
pop
into
cmc
add
mov
jp
adc
out
imul
lods
lret
xlat
fwait
std
push
xor
xchg
mov
notb
push
push
mov
inc
cmpsb
bound
scas
or
mov
xchg
in
and
adc
mov
movsl
call
icebp
fsubs
mov
or
pop
xlat
ljmp
xchg
or
popa
mov
and
push
inc
adc
and
test
sbb
add
sub
or
imul
rcll
or
dec
xor
adc
test
scas
mov
test
cmc
dec
andb
dec
lcall
or
movsl
orb
out
add
lret
push
xor
mov
fistpl
push
lock
cmp
movsl
in
add
repnz
fisubrl
ds
inc
pop
fimull
fcomip
mov
mov
hlt
fstl
mov
push
jmp
pop
mov
jmp
push
clc
jg
roll
test
xor
and
movsb
shl
loop
std
xorl
imul
jne
pop
nop
sbb
lcall
or
jp
mov
or
pop
or
mov
lea
add
pop
ds
dec
sbb
nop
cmp
cli
or
jge
inc
dec
push
aad
enter
add
cmp
ss
cmp
sbb
ret
push
add
cwtl
aas
stos
cmc
out
lahf
mov
jnp
adc
fsubl
dec
jp
mov
dec
mov
stc
iret
ficomps
dec
jg
jl
add
sarl
call
pop
mov
or
sbb
xchg
fwait
pop
sbb
xchg
into
xchg
rolb
pop
enter
xor
pop
pushl
and
and
ljmp
add
pop
movsl
and
cmpsl
push
clc
into
rcll
setle
rcrl
sbb
mov
imul
inc
sbb
mov
push
stos
xchg
push
push
xchg
jno
movsl
out
or
adc
add
scas
fcoml
push
lcall
hlt
insl
test
popa
jno
test
mov
sbb
ror
jnp
pusha
mov
dec
xchg
aad
mov
mov
pushf
scas
xchg
jne
mov
jge
adc
or
xor
out
mov
or
js
pop
push
sbb
jnp
push
jne
mov
sbb
sub
pop
repz
mov
push
mov
inc
in
fstps
out
js
xchg
out
xchg
mov
inc
jae
xor
jecxz
jae
es
lcall
xor
fsts
fwait
loopne
xchg
jg
pusha
sbb
addr16
push
push
in
xor
out
hlt
sub
les
mov
or
movsb
xor
sbb
xchg
je
popf
xor
mov
ja
dec
dec
jns
sbb
ja
fcomp
inc
xchg
xchg
sbb
and
int
ss
ret
rorb
imul
sbb
xor
stc
loope
fwait
mov
or
jb
jnp
loop
or
sub
jb
scas
xchg
jp
fists
jnp
orb
icebp
cmp
loopw
in
mov
mov
xor
mov
jg
cmpsl
aaa
pop
push
jecxz
sbb
adc
sbb
fdivrl
pop
sarb
or
jmp
xor
call
cmc
mov
outsb
repnz
push
nop
pop
mov
cwtl
in
test
push
sub
add
ret
enter
daa
insl
inc
dec
xchg
jle
cmp
add
movsb
xor
cmp
out
adc
cld
xchg
push
pop
les
mov
inc
test
or
jge
mov
insl
std
adc
negb
imul
mov
bsf
jne
shrb
dec
sub
ss
sbb
mull
lea
imul
fstpt
mov
shlb
int3
mov
push
pusha
add
inc
cltd
pop
xor
jnp
cmp
inc
sahf
jmp
leave
es
test
pop
cmp
and
dec
jnp
addps
sbb
xor
decl
push
movb
mov
sbb
xor
sbb
repnz
pusha
js
mov
lcall
pop
and
fiadds
stos
iret
push
jo
jp
in
mov
xchg
imul
aas
subb
mov
dec
dec
push
sbb
mov
xor
sub
pushf
inc
push
adc
or
mov
adc
push
and
and
icebp
xchg
out
rcrl
mov
clc
mov
dec
sub
test
and
or
mov
dec
movsl
push
jl
mov
push
cltd
xor
mov
add
jle
lods
subl
js
push
mov
test
ret
int
cmp
add
pop
jae
cmp
hlt
lods
push
fisttpl
ror
lods
or
gs
push
cmp
add
dec
add
sub
adc
xchg
cmp
sti
test
cmc
adc
mov
fisttpll
mov
outsl
and
cli
in
dec
add
test
inc
out
pop
mov
ja
cmc
push
jne
out
xlat
push
push
sahf
mov
push
sub
rorl
cld
shl
dec
pop
mov
push
mov
lods
sub
xchg
notb
or
cs
pushf
jecxz
add
data16
int
in
insl
xchg
pop
or
lock
call
out
fldz
std
add
and
jmp
or
test
add
xor
inc
iret
fisubs
sbb
pop
lea
add
fstpl
sub
mov
or
inc
pop
das
in
cmp
hlt
call
test
sub
push
test
pop
icebp
push
mov
jmp
loopne
cmp
mov
jo
ffreep
cltd
fwait
xchg
push
pop
sub
mov
rcll
add
leave
mov
adc
pop
and
mov
jo
ss
ja
jp
mov
jmp
push
cmpsb
add
clc
pop
sub
cmp
xchg
pop
xchg
mov
mov
add
add
or
or
shlb
test
daa
add
lods
fs
rcrb
sti
lds
cli
pushf
je
pushf
aad
pop
data16
imul
arpl
and
dec
fstpl
out
xchg
push
jb
mov
bound
fwait
adc
push
dec
int3
push
and
mov
jge
and
dec
pop
pushl
jg
lock
js
popf
mov
cwtl
pop
mov
stc
scas
test
mov
add
push
push
das
and
mov
or
inc
inc
dec
mov
inc
inc
pop
push
out
lds
stos
cmp
pop
pushf
push
jne
test
jae
mov
jne
outsl
insl
add
call
sti
movsl
test
inc
test
repz
fadds
adc
movsl
in
cmp
aad
pop
xorl
outsl
add
sub
mov
jo
xor
and
add
pop
cld
adc
xchg
stc
xchg
loop
jecxz
mov
push
aas
out
repnz
xchg
das
push
out
or
ds
xchg
cmc
lods
test
cmp
cmpsb
and
push
ljmp
ja
ja
aad
dec
mov
mov
add
ret
test
pop
js
scas
add
fstps
movsb
ljmp
push
and
pslld
ljmp
js
fs
or
lret
test
dec
cli
test
or
add
pop
fistpl
outsb
lahf
enter
stos
mov
je
inc
push
int3
test
jae
cmpsl
popa
jo
arpl
into
pushf
jle
cli
jb
jno
mov
or
mov
xchg
das
test
fimull
pop
xchg
daa
lds
loop
inc
fsubl
push
ret
in
das
ja
sub
jmp
repz
jge
stos
push
sub
test
in
ret
loop
rorb
je
adc
mov
inc
cli
cld
loope
jno
jne
jmp
cld
sbb
aad
cmp
lret
js
pop
cmpsl
or
movsl
dec
or
js
pop
sbb
and
repnz
clc
adc
xchg
enter
mov
cmp
test
sarl
sub
mov
stc
das
xor
bound
iret
lods
push
cmp
dec
xchg
js
push
jge,pn
sub
popa
mov
aam
add
pop
test
movsl
sbb
std
mov
add
ja
fisubs
stos
jne
js
xchg
dec
push
fucomp
fcompl
sub
push
xchg
lret
repnz
inc
sub
mov
push
lods
add
rclb
cmpsl
jb
fsts
pop
bound
mov
xlat
mov
mov
cli
pusha
mov
test
movmskps
fnstsw
cmp
sub
xchg
out
lds
fdivs
out
jnp
push
or
mov
lcall
in
sahf
lods
and
inc
scas
out
jno
dec
in
pop
and
hlt
hlt
mov
inc
mov
insb
sarb
adc
addb
outsb
aam
pop
push
and
ds
addr16
mov
or
incb
mov
loope,pn
cli
mull
add
cmp
aad
push
stos
aas
inc
in
inc
popa
adc
jecxz
mov
fisttps
pop
pop
pushf
daa
aaa
and
std
xchg
out
gs
mov
sub
xor
aaa
add
xlat
push
xchg
enter
xchg
dec
dec
in
sti
sbbl
lret
jnp
popa
or
repnz
adc
push
sarl
shlb
sbb
ret
mov
insb
mov
in
bound
cmp
mov
cld
mov
fnsaves
mov
int
pop
and
sub
stos
mov
mov
inc
adc
adc
sbb
fistpl
mov
xchg
cmp
inc
ds
jp
push
mov
mov
out
fmull
pop
push
cmp
ret
sbb
sub
das
sub
cmc
cmp
gs
lds
ret
popf
sti
or
adc
aaa
dec
out
pop
inc
xor
test
mov
cmp
dec
lea
cmp
leave
mov
pminub
adc
or
push
fcoml
push
add
mov
pusha
jmp
mov
cmp
lahf
cmp
in
mov
push
mov
fcoms
clc
push
mov
cmpsl
hlt
pop
vpackuswb
nop
enter
jb
jp
out
cmp
xor
and
lods
fcomps
jecxz
push
stos
mov
sub
lret
enter
iret
stos
clc
movsl
sbb
insl
push
mov
xor
dec
sub
shlb
dec
dec
aam
stos
cmp
push
mov
push
cli
adc
push
loopne
xchg
sub
js
cmp
cmc
fs
movsb
test
aaa
mov
loopne
add
xchg
mov
pop
xlat
testl
jnp
aas
push
call
dec
pop
pop
mov
xor
hlt
add
roll
mov
inc
cld
mov
jecxz
mov
add
push
dec
fnstsw
stos
popa
insb
cs
rcrl
push
adc
dec
xchg
dec
push
jno
pop
lods
or
out
fcmovu
mov
arpl
xor
cmp
xor
lahf
mov
pushf
out
shll
pop
fidivs
ficoms
lods
insb
nop
int
fucomi
out
mov
test
bound
popa
mov
jns
xor
jno
pop
aas
fmul
imul
xchg
cmp
pop
dec
pop
scas
pop
xor
push
pop
cld
inc
outsb
rcll
xor
mov
jle
jl
sbb
xchg
add
inc
arpl
sbb
scas
lcall
stc
out
and
add
ret
mov
scas
int3
inc
aad
adcl
sbb
jns,pt
mov
pop
scas
jg
inc
or
js
jno
and
cltd
and
insl
sti
mov
xchg
mov
jmp
sbbb
lret
lock
dec
addb
ss
jnp
xchg
mov
repz
jae
pop
pop
sub
jb
icebp
xchg
sub
cmp
repnz
inc
cs
jo
clc
push
xor
sbb
push
jge
cmc
add
mov
pop
loope
pop
jmp
loop
aad
pop
testb
xor
pop
add
clc
adcb
jae
dec
enter
sbb
in
xor
mov
rcrb
dec
sub
inc
test
mov
xchg
sub
jae
movsb
std
fnsave
jbe
xchg
sbb
cmp
or
pop
std
sbb
jle
dec
mov
mov
sub
or
fnstcw
lock
push
rorl
cmp
inc
mov
mov
dec
fwait
jns
jno
cmpsb
std
add
lahf
push
pop
xchg
xchg
ja
jno
cmp
pop
jae
mov
jl
or
sahf
out
adc
push
jmp
mov
negl
aad
iret
in
and
into
push
addr16
jge
cmp
xor
sub
mov
xchg
jl
iret
rorl
aam
sbb
push
jbe
pmulhuw
dec
jge
outsb
aas
mov
mov
pop
daa
js
xor
nop
xchg
repnz
addb
repnz
or
pop
shrb
repnz
rorl
add
sbbb
cmc
lahf
insb
pop
mov
ljmp
fstl
xor
movsb
popf
sbb
mov
into
pop
or
adc
loop
mov
pushf
and
pop
xchg
inc
add
hlt
cli
sub
insl
adc
int
insb
inc
out
adc
push
in
in
daa
aam
dec
lea
shl
arpl
lret
mov
data16
jmp
xor
sub
pop
jp
cld
clc
imul
mov
ret
pop
js
das
adc
add
dec
and
ds
jge
xchg
dec
nop
mov
jecxz
frstor
iret
cmpsl
xchg
cmp
in
faddp
outsb
cmpsb
jno
adc
push
jle
xor
outsl
roll
rdpmc
repnz
xor
lcall
cmp
xorl
int
cwtl
push
iret
mov
clc
repz
jne
jmp
test
cmp
xlat
sahf
or
aas
sarb
dec
pop
cmpsb
js
pop
outsl
mov
inc
cmp
loope
add
pusha
popa
pop
inc
cmp
push
fbld
lods
testb
daa
mov
xor
jns
ss
xlat
enter
lock
jno
jbe
and
push
mov
movb
mov
push
mov
lea
inc
mov
call
mov
xchg
mov
and
xchg
lret
pop
pop
stc
jl
sbb
add
xor
sar
fcomp
push
into
mov
mov
mov
push
int3
inc
push
mov
fldl2t
mov
mov
outsl
stos
test
stc
nop
mov
inc
jno
add
mov
jns
sub
adc
sahf
shr
cld
or
or
mov
sbb
mov
jno
push
mov
arpl
lock
lcall
jle
mov
push
push
xchg
push
sbb
xor
outsb
inc
lods
std
push
addr16
xlat
lds
call
into
sub
push
fadds
jb
mov
adc
jmp
adc
sbb
add
in
cmp
mov
dec
add
mov
mov
jne
mov
dec
out
mov
loopne
js
fidivrs
xor
sub
and
add
push
icebp
sbb
add
cli
cli
push
mov
mov
jmp
add
inc
and
leave
inc
xchg
push
and
jmp
mov
add
mov
mov
test
jno
out
leave
pop
enter
jg
pop
dec
mov
adc
lahf
jo
ret
sbb
cmpb
scas
push
or
cmp
mov
xchg
jnp
jo
and
rclb
push
or
sbb
clc
mov
into
sahf
xchg
scas
mov
hlt
outsb
pop
pop
inc
pop
xor
stos
fstps
pop
pop
lret
xor
ret
cmpsb
jmp
add
dec
jno
jns
mov
fsubrs
into
cmp
xor
jnp
cld
pop
setae
int3
and
roll
add
mov
sub
mov
jo
test
xchg
add
cli
add
push
nop
push
pushl
xchg
or
rorl
jl
pop
pop
jl
aad
ss
jp
pusha
lahf
pop
lea
dec
testl
shr
inc
divl
scas
sub
xchg
decl
push
lea
ja
js
jo
mov
loope
in
orb
mov
or
nop
aad
xchg
jae
jl
inc
mov
pop
mov
std
add
push
mov
stos
jno
xchg
sub
mov
xchg
xchg
int
adc
clc
push
or
fs
pop
sti
pop
xchg
lret
and
repnz
stos
jbe
mov
add
push
pop
add
mov
and
dec
or
inc
pop
cld
popa
movl
xchg
pop
jge
xor
inc
popa
pop
and
inc
cmp
pop
xor
js
jnp
aaa
jecxz
popw
inc
loop
in
adc
cmp
jb
cmc
mov
daa
in
mov
pusha
aad
add
jge
iret
std
cmp
jns
test
xchg
sbb
adc
cmp
mov
mov
adc
pop
popf
nop
sti
jg
and
cmp
push
xlat
pop
outsl
jp
sbb
out
jge
cmpsb
ficoml
dec
push
shll
push
adc
mov
or
xor
les
mov
inc
nop
cmp
pusha
sbb
or
out
or
xchg
rcrl
xchg
add
sbb
int3
jle
jae
push
mov
xor
jge
roll
mov
jecxz
pop
pop
hlt
sti
and
adc
imul
xchg
outsb
inc
mov
aas
pop
popf
das
out
test
push
jmp
pop
dec
jae
xchg
in
cmpsl
or
push
jge
push
pushf
in
arpl
xor
xchg
fildll
adcl
and
test
stos
mov
lds
inc
add
or
mov
inc
icebp
call
jle
testb
ffreep
mov
dec
pop
ret
adc
adc
lret
adc
xlat
xorb
fwait
lods
mov
adc
sub
adc
ret
and
rorb
test
and
jp
dec
ja
lret
pop
sahf
dec
lret
loope
or
adc
sarl
or
xchg
cli
jae
dec
push
fdivl
sub
push
xchg
ret
repz
xor
mov
cmp
aam
rcrb
lret
push
in
cmp
jg
add
cld
fwait
fs
jg
and
or
psubsw
mov
push
in
jbe
and
and
push
lock
jecxz
js
mov
add
in
mov
lods
xchg
push
out
inc
mull
mov
call
xor
int
inc
inc
add
outsl
shrl
and
mov
cld
and
inc
jge
ret
xor
sbbl
cmpsb
pushf
clc
les
cmc
adc
test
mov
in
pop
mov
and
pushf
push
xchg
cmp
pop
adc
pop
test
outsb
pop
imul
outsb
pop
fcmovne
addr16
lock
loopne
xchg
cmp
dec
sahf
xor
lret
xor
lcall
pusha
movsb
mov
and
push
pop
cmp
jns
addl
fisubrs
in
leave
fwait
jns
xlat
fwait
jmp
mov
in
stos
cltd
or
das
imul
movsb
jb,pt
push
call
inc
imul
nop
pop
mov
js
pop
gs
int3
rcll
mov
adc
mov
fsubs
daa
jne
aaa
bswap
std
pop
lahf
getsec
xor
sub
arpl
imul
hlt
ret
mov
inc
jae
jbe
adc
sbb
rep
dec
xchg
jecxz
cli
sub
mov
push
sbb
mov
rcll
inc
sbb
pop
inc
mov
jg
iret
fcomps
rol
push
add
mov
enter
mov
stc
add
sti
mov
inc
andb
jnp
out
xchg
int3
mov
ret
pop
mov
xchg
mov
jo
or
cmc
or
es
xchg
jl
imul
mov
dec
xchg
push
mov
xor
sbb
inc
sbb
in
jae
clc
pop
xchg
mov
aaa
aam
fs
push
es
xor
mov
das
xchg
imul
cmp
or
jns
inc
movsl
and
fwait
cs
cli
cmp
jo
cmp
sahf
sbb
mov
cld
fstps
add
pop
lods
inc
sbb
jp
divl
fldln2
lcall
mov
out
mov
jnp
mov
jle
or
fnstsw
daa
iret
jb
fsubr
or
cs
inc
push
jnp
test
cmp
jno
or
arpl
repnz
arpl
lock
scas
xchg
mov
xor
mov
repnz
mov
hlt
mov
popf
or
scas
push
ja
ja
shlb
mov
push
scas
sbb
push
jne
push
mov
jns
sbb
adc
aas
pop
and
sub
fs
push
lods
mov
push
imul
das
and
cmp
sbb
jmp
xchg
or
pop
frstor
nop
stc
insl
stos
dec
jns
mov
fstps
and
pushl
add
xchg
pop
xchg
lret
lahf
lret
aaa
lea
jmp
jo
pop
test
push
dec
roll
cltd
cmp
sti
mov
sbb
outsl
jmp
push
adc
icebp
jl
outsb
pop
add
sarb
inc
fadds
js
ds
mov
and
ja
and
cli
je
and
divb
mov
ljmp
sub
lret
push
inc
push
scas
aam
shlb
jns
push
es
jne
lret
and
and
mov
jns
fxch
lret
sbb
inc
mov
jnp
mov
inc
aad
mov
push
arpl
js
leave
test
sbbl
pop
push
adc
insb
gs
decl
mov
insl
or
add
jns
and
push
add
xchg
mov
xchg
out
cmpsl
sub
cmp
es
test
xchg
out
mov
test
cmp
cmp
push
push
in
add
scas
cltd
mov
in
popf
data16
orb
cwtl
xor
xor
or
in
inc
js
imul
push
and
inc
cld
aam
js
dec
vhsubps
and
xchg
xor
rol
sahf
mov
jmp
inc
out
inc
rcll
jns
movsb
rorb
mov
mov
lds
das
cmc
xchg
andl
xor
xor
fisubl
imul
jg
ret
and
cwtl
dec
subb
sub
sbb
mov
lret
and
xchg
idiv
adc
pop
pop
add
leave
xor
cmp
cltd
dec
clc
fwait
mov
pop
cmpsl
pop
sub
push
add
pop
jae
pop
int
jne
jp
inc
xor
idivl
and
mov
cmp
sub
jbe
stos
out
pop
mov
sub
iret
xor
adc
dec
pop
adc
jl
call
call
and
dec
mov
daa
add
jnp,pn
and
lock
xor
sub
inc
pop
or
shrb
cmp
stos
push
subb
outsb
push
arpl
rcr
dec
adc
xchg
jb
jbe
xor
mov
int3
int3
leave
push
xchg
es
sti
pop
push
adc
out
push
push
pop
mov
out
cmp
call
imul
mov
sub
jg
in
inc
mov
clc
jnp
push
cmp
dec
xchg
cli
pop
inc
pop
mov
mov
loop
mov
cmp
xchg
aas
push
jmp
daa
sti
mov
js
jae
jl
aad
sarb
add
std
and
in
mov
loop
xchg
test
jae
clc
pop
dec
mov
pop
push
clc
push
jecxz
push
rorl
in
pop
dec
loopne
xchg
ljmp
jl
iret
xchg
push
cmc
out
adcl
mov
jge
jbe
imul
or
std
and
out
push
in
sub
fistpl
bsf
inc
and
jl
in
sbb
dec
cmp
shlb
bound
adc
sar
mov
and
xor
xor
xor
xchg
pushf
dec
push
lcall
cs
arpl
fildl
xlat
std
xchg
repnz
mov
int
dec
mov
test
es
jb
cmp
fmulp
idivl
inc
fst
and
stos
scas
popa
lock
insb
sbb
outsb
push
fabs
pop
and
and
adc
or
pop
in
insb
lahf
leave
mov
jl
inc
into
int3
sub
dec
inc
pop
pop
push
fcom
cli
adc
mov
xchg
jg
mov
dec
jmp
push
mov
cmc
cld
icebp
lahf
mov
fsubl
jb
je
dec
add
ffree
adc
jae
push
dec
jne
test
test
rolb
aaa
sbb
and
sbb
pop
faddl
outsb
sub
popa
ss
mov
pop
xchg
lcall
stos
lahf
xor
lret
sub
mov
xor
leave
mov
jno
imul
ljmp
stos
test
daa
mov
mov
push
xchg
mov
mov
push
test
xchg
popf
shll
adc
cmpsb
lods
pop
jmp
mov
mov
rorl
jns
inc
pop
push
jno
sub
in
pusha
lods
iret
jns
testl
int3
mov
xlat
add
push
jl
cmpsl
mov
mov
scas
adc
popf
jns
push
insl
inc
lock
push
into
jae
mov
and
movsb
lea
push
aam
sarb
push
xor
and
sbb
pusha
pop
cmp
push
out
imul
mov
jbe
sbb
dec
mov
xchg
sbb
fcmove
js
inc
fnsave
sbb
sbb
fs
or
enter
enter
push
mov
rol
jb
cmp
jno
inc
shll
xchg
int
sbb
mov
xor
stos
adc
scas
push
xor
cmovp
cs
mov
xchg
adc
push
jmp
mov
or
les
js
dec
add
mov
aad
xor
ds
push
mov
fadds
pusha
cmp
pop
icebp
mov
enter
xor
cmp
cmp
in
pop
scas
das
ss
ja
xor
icebp
pushl
jle
sbb
outsl
pop
mov
inc
in
rcrl
nop
out
sub
ss
loope
add
daa
ss
inc
or
adc
mov
add
add
lcall
in
sbb
mov
jns
lods
scas
rcll
push
addb
sbb
mull
in
xchg
mul
xor
or
addr16
stc
and
imul
lea
cs
xor
add
nop
cwtl
mov
psubq
aam
outsl
pop
rol
cmp
dec
outsb
sub
dec
sub
pop
jl
ret
sarb
and
sub
mov
fisubs
mov
iret
cwtl
add
mov
and
lods
in
sbb
sub
dec
fcompl
ljmp
jbe
fs
push
mov
pop
pop
stos
lds
cmp
xchg
cltd
push
add
ss
and
cmpsl
push
mov
jmp
mov
xchg
ds
push
inc
leave
mov
cmpsl
jae
icebp
xor
mov
push
pop
andl
adc
mov
fists
or
and
popa
jne
cmp
aaa
aaa
arpl
add
in
loopne
or
xor
pop
jp
mov
mov
cld
mov
dec
push
shl
insb
sbb
push
xor
loope
xchg
lahf
adc
mov
jo
fucomip
jb
repnz
jge
aad
fucomi
fnstenv
push
sub
cmpb
xchg
mov
sbb
mov
scas
and
cmpsb
cmp
lods
cmp
pop
mov
jge
inc
fldl
add
xor
in
shrl
insl
int3
xor
and
test
in
mulb
xchg
mov
loop
adc
jo
xchg
inc
dec
cld
or
movaps
push
iret
out
add
add
popf
lret
scas
and
add
iret
mov
xlat
sbb
ja
and
lds
fmulp
out
cmpb
stos
xchg
mov
ds
pop
imul
sub
add
push
mov
popa
cld
sub
popa
loopne
adc
mov
mov
shrl
pop
lock
loopne
sbb
ljmp
loope
in
cmp
out
inc
andl
sahf
out
and
pushf
outsb
pop
sub
adcl
xchg
adc
cs
xchg
xor
fwait
push
arpl
fldl
cli
loop
arpl
push
aaa
mov
sub
jns
mov
fldenv
cmp
cwtl
and
push
sub
adc
pop
mov
movsb
sub
aam
pusha
movl
movl
mov
fdivp
xchg
mov
int3
or
xor
sar
lods
pop
cmc
jo
sub
nop
dec
dec
adc
mov
mov
sub
jnp
icebp
push
lds
sbb
push
jg
fwait
push
outsl
fstpl
mulb
add
in
add
ljmp
and
push
repnz
lcall
lods
xchg
lret
mov
enter
xchg
rcll
and
push
lret
push
mov
psubsw
jne
xchg
jle
out
repz
pop
movsb
rclb
adc
and
in
xchg
rclb
fnstenv
mov
jb
mov
mov
dec
xchg
cld
cmpsl
or
out
or
dec
pushf
sbb
inc
ja
push
mov
pop
lods
push
lock
testb
adc
and
sbb
adc
jno
dec
popa
or
sti
sti
or
pop
cmp
pop
xchg
fiadds
dec
or
fdivrl
lcall
popa
dec
out
mov
add
lea
xor
out
repnz
adcb
xor
xchg
and
dec
fwait
sub
testb
cwtl
rep
xlat
xor
add
es
jl
and
les
fisubs
xchg
push
pop
lret
mov
or
cmp
int
mov
push
mov
jo
flds
push
filds
push
mov
dec
movsl
movsb
andl
sbb
add
fldenv
sub
stc
mov
sti
xchg
push
imul
loop
add
ss
int3
ja
icebp
add
in
cmpsb
push
xor
and
test
pusha
es
and
or
jle
movl
push
popf
mov
mov
push
movsl
mov
cmp
push
xor
sbb
test
adc
fldcw
pop
jae
das
or
ja
push
pop
pop
jle
cmp
cmp
pop
sarl
xchg
adc
fdivr
mov
enter
mov
jb
gs
fimull
mov
ja
dec
dec
out
pop
clc
mov
test
lods
addr16
out
mov
inc
pop
sub
loope
or
pop
mov
shrl
jl
lcall
sbb
cmpsl
fs
test
aad
and
mov
mov
mov
push
push
js
pop
sbbb
lea
push
int3
inc
dec
lret
shlb
int3
dec
jge
sbb
xor
fstl
leave
mov
jbe
cltd
sub
mov
and
jle
pushf
inc
cmp
movsl
test
out
sub
mov
lock
and
outsb
arpl
test
shlb
sahf
out
or
jns
mov
in
lahf
adc
sbb
mov
sub
push
add
es
mov
insl
in
shrl
cmpb
out
sarl
sub
pushf
xchg
jge
dec
ret
cmpsl
int3
inc
mov
xchg
cmc
cmc
cmp
rorl
push
insb
popf
lret
mov
fisttpll
and
enter
xor
mov
mov
push
mov
push
xchg
or
and
sub
nop
loope
mov
add
popa
cmp
je
aam
andb
jnp
mov
subb
outsb
inc
sti
pop
jnp
mov
rol
jg
pop
inc
cmp
adc
mov
xchg
cmpsb
inc
lcall
cmc
add
nop
xlat
or
xchg
mov
mov
in
xchg
mull
or
pusha
jl
ss
and
adc
fcom
push
sbb
scas
sbb
jnp
nop
jae
or
push
shl
or
insb
push
mov
dec
adc
loop
or
aam
call
popf
aad
rorl
xchg
insb
push
dec
arpl
dec
pop
push
add
lahf
xchg
mov
insb
inc
cld
or
scas
jg
loopne
pop
sbb
fists
xchg
cmp
mov
inc
sbb
jge
dec
and
gs
mov
sub
pop
push
push
jns,pt
stos
out
mov
xor
fcoms
mov
sub
adc
push
test
mov
stos
dec
adc
lods
cmpsl
cli
ret
jge
mov
test
and
imul
dec
cs
cltd
fcoms
lods
mov
sbb
xchg
scas
scas
jmpw
cmp
addb
test
sub
pop
mov
xchg
xor
mov
sub
jle
mov
cs
lcall
mov
out
push
push
movsl
icebp
mov
and
imul
mov
dec
sbb
imul
add
and
inc
fisubrl
adc
or
sub
stos
in
sti
test
push
xchg
pop
jp
add
sbb
ror
movsb
enter
ret
dec
cwtl
inc
xlat
jg
test
int3
addr16
jmp
cmpsb
mov
and
jb
push
je
mov
push
shll
mov
mov
jl
xchg
mov
inc
loope
xor
stos
or
lret
int
push
adc
or
fbstp
and
lea
or
test
imul
es
ljmp
insb
and
add
scas
jge
cmp
jecxz
jns
sbb
aas
sbb
inc
mov
dec
daa
mov
push
jecxz
or
fmul
clc
ret
xlat
test
out
incb
or
pop
pop
stos
enter
leave
mov
xchg
dec
add
jmp
sbb
mov
iret
mov
in
sub
xchg
lret
pop
fbstp
imulb
cmp
fstps
in
push
cld
and
pushf
dec
std
out
mov
in
mov
popa
pop
fs
sarb
iret
mov
je
push
xchg
cld
in
stos
xor
xchg
jns
jmp
mov
popf
adc
mov
in
inc
sbb
lea
mov
aad
lea
cmp
mov
xchg
mov
dec
dec
daa
ljmp
sbb
lock
xchg
mov
in
push
mov
fisttps
mov
int3
ljmp
shll
mov
and
or
dec
fidivrl
ss
add
fimull
in
in
sar
pop
movsb
pop
sbb
dec
mov
xchg
dec
ret
scas
scas
pop
jno
shll
movsb
push
sub
xor
and
or
mov
inc
lods
adc
adc
cmp
push
xchg
push
shlb
rcrl
lock
js
xchg
fstpt
aam
jo
mov
repnz
xchg
nop
stos
mov
fstp
add
jno
or
pusha
xchg
outsl
repz
jnp
aam
jl
lcall
and
xchg
es
rep
mov
add
rcl
test
aad
dec
scas
outsl
mov
ss
cwtl
jmp
sub
gs
mov
cli
xchg
sub
sti
test
imul
dec
fldl
or
jl
push
popf
sub
ljmp
shrl
scas
xchg
mov
out
sbb
leave
xor
aam
mov
loope
push
mov
sahf
mov
call
or
mov
push
roll
test
xlat
xchg
add
pusha
push
inc
out
xchg
pop
stc
mov
inc
or
mov
mov
xlat
pop
ficomps
mov
push
dec
inc
push
cs
push
fisttpll
test
and
push
imul
fsts
int3
jg
mov
neg
int
mov
inc
pop
aam
mov
hlt
jp
stos
sub
mov
or
orl
and
jo
stc
insb
dec
nop
sti
lcall
lods
out
gs
mov
das
aad
sarb
sarb
lea
cmpsb
cs
mov
in
xchg
and
daa
pmullw
or
sub
out
int3
pushf
fidivs
dec
stos
decb
stos
js
lds
popa
sub
loopne
daa
es
sub
icebp
push
pop
jg
push
dec
mov
stc
mov
dec
or
in
daa
push
shr
dec
sbb
sbb
xor
popa
xor
pop
dec
aas
addr16
sbb
arpl
call
lret
or
push
push
lea
pop
sbb
dec
es
int3
xchg
ss
mov
mov
or
inc
pop
movsb
xor
repnz
mov
inc
jbe
inc
pop
mov
sbb
sbbb
xchg
in
jo
mov
out
sbb
in
loopne
push
popa
inc
fisttpll
xchg
cmp
ret
sub
imul
mov
aam
mov
adc
jg
sahf
adc
pop
mov
dec
dec
mov
sub
cmp
sbb
sarb
sbb
sub
cld
dec
rcrb
enter
push
push
in
dec
inc
ret
ds
movsl
pop
cs
xchg
jmp
or
xchg
mov
push
mov
mov
dec
loopne
mov
xor
mov
addl
or
xchg
cmp
pop
testb
jge
mov
aam
inc
cmp
add
pop
cmc
cmpsl
sbb
lret
mov
mov
in
push
psadbw
mov
mov
mov
shll
add
leave
test
mov
cmp
rorb
fisubrs
pop
cmpsb
lcall
add
pop
dec
dec
adc
mov
addb
inc
in
dec
jecxz
and
xchg
adcl
add
xchg
push
push
les
cmpsl
js
rcll
fs
mov
jg
fcmove
data16
rcll
mov
sub
das
stos
cwtl
test
lods
cmp
or
mov
loopne
stc
cmp
mov
add
lods
sub
pop
lret
add
inc
xchg
or
pop
mov
shll
aas
popa
mov
mov
ret
dec
cmpl
test
hlt
cmpsb
or
mov
outsl
popf
sbb
out
jne
push
dec
punpcklwd
ja
fisttps
sub
fs
insb
push
lret
adc
mov
lahf
push
adc
fdivrl
xor
ror
imul
out
scas
cld
js
movsl
out
cld
sbb
pop
sub
mov
icebp
sub
mov
xchg
push
mov
scas
das
jns
adc
and
insb
dec
scas
cli
sbb
bound
mov
push
ss
or
in
mov
adc
xchg
lret
in
or
inc
call
cmp
fidivs
repz
popf
xor
rorl
adc
xor
cmc
js
mov
add
adc
mov
dec
cmc
addr16
pop
hlt
es
mov
xchg
es
add
mov
mov
aaa
stos
mov
movsb
push
xor
pop
cmp
cmpsb
lods
mov
adc
movsb
negl
sarl
dec
jmp
js
dec
add
jno
and
xchg
int
out
dec
mov
bound
sub
stos
cli
rcrl
stos
dec
negb
sbb
ljmp
jne
xlat
inc
cmp
push
fucomi
cmp
inc
cmp
xchg
leave
inc
pop
cltd
adc
mov
rcl
stos
inc
mov
data16
fneni(8087
fxch
cld
adc
fisubrl
push
dec
test
pushl
out
fcmovbe
mov
popf
adc
push
scas
jmp
aaa
mov
push
inc
aad
cli
push
scas
push
in
push
xor
notl
les
movsb
mov
shll
enter
xor
pop
movsb
xor
shl
lods
inc
xchg
outsl
adc
sahf
xor
xor
mov
popf
cmp
add
inc
call
xchg
inc
lret
addl
inc
je
pusha
nop
sub
call
sbbb
aaa
dec
jo
pop
cmp
movsl
jg
jmp
jnp
in
lods
stos
jp
dec
push
mov
adc
jle
inc
fbstp
sti
push
outsl
mov
or
inc
mov
ficompl
push
cmp
in
mov
lea
dec
sub
xor
addl
add
mov
mov
jae
sarl
sbb
xchg
clc
xchg
aaa
shlb
add
and
int3
out
fists
mov
sub
pop
add
lcall
xchg
inc
or
dec
sbb
and
aas
and
rol
mov
lcall
mov
xchg
aad
sub
out
andb
cmp
and
xchg
fidivl
or
je
jecxz
ficoms
imul
mov
jns
leave
out
mov
icebp
adc
iret
mov
lret
lods
cmc
mov
mov
outsl
mov
xor
and
mov
fistps
insb
sub
xchg
je
movsb
jae
push
xchg
jno
jge
mov
jle
mulb
sub
inc
loop
enter
cmp
inc
add
test
sub
xor
into
and
adc
inc
jl
pop
rcr
outsl
aad
aam
inc
mov
add
cmp
and
jl
in
inc
lods
popa
mov
test
push
leave
leave
sub
pop
cmp
jecxz
jbe
adc
iret
mov
fistpl
sub
add
gs
call
xor
in
inc
and
cmp
sub
mov
or
mov
test
repz
mov
stos
xor
cmp
push
jne
mov
call
jae
ret
fs
and
outsl
mov
pop
push
pop
xchg
insl
maskmovq
imull
fistpll
cli
cmp
in
mov
nop
daa
jb
ljmp
inc
mov
int3
int3
xchg
andb
in
pop
sarb
or
into
testl
test
test
cwtl
lea
fstpl
data16
push
das
inc
push
push
add
andl
add
cmp
push
cmp
mov
pop
mov
testw
mov
andb
mov
push
inc
cmp
mov
lahf
push
cmp
gs
ds
cmpsl
lds
mov
mov
fsts
inc
xchg
aaa
das
stc
add
mov
in
test
xchg
in
loop
lret
cmp
mov
clc
mov
and
lods
sub
pusha
shrl
inc
xchg
mov
cmc
mov
iret
pushf
push
adc
je
mov
jns
cmp
pusha
stc
sub
hlt
pop
addb
icebp
mov
and
sbb
sub
fidivs
xor
cmpsb
cmp
xor
cmp
xchg
jle
in
movsb
mov
or
and
inc
push
loopne
mov
out
dec
mov
into
xlat
sarb
add
lret
cli
lods
adc
ljmp
inc
movsl
and
adc
inc
stc
leave
and
mov
imul
pusha
pop
adc
lret
ds
cmp
dec
test
mul
fxch
sbb
pop
mov
mov
pop
mov
cltd
cmp
jns
jl
popa
xlat
clc
movsl
in
and
cmp
cmp
sub
mov
leave
gs
xchg
and
aaa
sub
jg
in
ds
mov
jp
or
lds
mov
fs
adc
push
xchg
rcrb
mov
dec
add
dec
clc
in
in
idivl
mov
mov
cmp
rolb
cmp
out
popf
mov
add
cwtl
mov
add
add
sub
inc
mov
inc
xor
int3
push
sahf
sub
jle
add
ss
pop
push
and
or
add
cmp
test
fwait
in
bound
popa
outsb
mov
popl
mov
fmuls
mov
mov
pusha
cmp
adc
pop
lret
addr16
mov
cmpsl
popf
jg
mov
push
stos
sub
shrl
mov
pop
inc
call
xlat
adc
lods
push
pop
cli
push
xor
icebp
sbb
js
push
add
fldt
imul
jns
or
adc
push
cmp
cmc
repz
lcall
sti
push
fildll
aad
xchg
dec
sahf
or
pushf
mov
xchg
mov
push
jae
sbb
push
in
movsb
clc
shr
dec
inc
and
adc
or
les
inc
pop
out
js
mov
lret
jb
ss
dec
jge
jg
jmp
mov
push
cmc
ret
cmpsb
dec
int
xchg
imul
or
push
stos
adc
add
lds
add
dec
mov
sbb
cmpsb
pop
andl
test
push
nop
mov
dec
scas
inc
lret
fadd
es
je
mov
pop
push
scas
mov
roll
stos
shrl
je
ret
pop
xor
test
pushf
call
std
addl
xchg
lods
lahf
in
ss
cltd
in
xchg
push
aad
lahf
mov
sahf
stc
test
push
int3
sub
mov
cmpsl
jge
in
push
push
sub
dec
sub
ja
aas
sub
pushf
cld
mov
mov
mov
jno
cltd
pusha
mov
std
dec
sbb
aam
bound
outsl
mov
push
and
and
rorb
stc
cmpsl
out
inc
adc
jbe
add
pop
outsb
ja
and
push
out
ja
mov
imulb
or
cmpsl
out
jae
jp
test
mov
or
stos
rcrl
push
aaa
rclb
push
pop
mov
add
aam
inc
sub
pop
sub
sbb
dec
sbb
jo
stos
ret
sub
lcall
in
stos
arpl
mov
cmpsl
or
pop
lret
xor
cli
mov
jecxz
dec
pop
cmp
hlt
inc
repnz
mov
add
mul
movsb
scas
leave
push
es
inc
lahf
mov
hlt
add
dec
mov
pop
dec
or
movsb
ljmp
pop
xchg
pop
pop
repz
cltd
pop
mov
gs
je
aad
cli
push
xchg
divl
jb
cmp
cmp
mov
push
mov
sub
lahf
pop
loope
loope
dec
std
aad
cmp
push
mov
shlb
std
mov
push
hlt
fsubrl
cwtl
cmpsl
mov
mov
mov
add
mov
test
inc
mov
into
imul
cmp
loop
sbb
loope
jmp
clc
loop
aaa
and
jp
jmp
out
out
or
hlt
jl
int3
in
ds
icebp
mov
mov
lods
iret
je
dec
orl
shl
or
xchg
nop
fildl
xor
imul
out
inc
cmc
xor
cmp
jge
les
jl
mov
bound
lahf
mov
out
mov
mov
inc
or
in
hlt
dec
mov
lods
test
test
test
sbb
shl
jge
lret
cwtl
or
and
test
push
sbb
es
cmp
and
mov
mov
mov
xor
pop
je
in
adc
sub
lock
ret
or
adcl
or
in
scas
fstpl
in
or
loope
add
push
out
cmpsl
loopne
xor
loopne
cld
or
imulb
sub
sub
jmp
push
insb
lret
cmpsb
lock
js
jg
sbb
xchg
mov
testb
jnp
push
shlb
rcl
rol
adc
movsb
fidivrl
xor
imul
dec
leave
mov
dec
ret
mov
cmpsb
xlat
adc
xor
jno
clc
lret
fwait
and
fxch
dec
sub
mov
pop
jecxz
or
jbe
push
pop
cld
lods
and
je
lods
stc
pusha
xchg
adcl
jne
cmp
or
mov
and
inc
and
fsubl
sbb
xorb
sub
shl
movzwl
aaa
push
inc
addr16
movsl
rol
aad
movsl
decl
add
add
adc
call
shl
add
push
push
push
or
inc
xorl
push
sbb
mov
pop
or
push
pop
or
inc
pop
lds
mov
adc
pop
mov
into
sub
int3
in
mov
and
mov
and
push
and
mov
pop
inc
fsts
pop
cmp
stos
dec
mov
ss
adcb
inc
jmp
push
and
cli
mov
adc
sub
iret
jmp
lahf
lret
push
pop
mov
xor
pop
and
stos
dec
in
push
xor
insl
rorl
pop
xchg
leave
ret
fsubl
inc
sbb
outsl
jl
mov
mov
testl
sti
movsb
testl
jb
mov
pop
mov
mov
pop
jns
dec
repnz
pop
and
scas
aaa
lods
fldl
sahf
mov
lods
sub
push
sub
or
test
shrl
repz
cmp
and
sbb
subb
out
repnz
push
jo
ds
xchg
xchg
sub
iret
cmpsl
wbinvd
outsl
or
mov
xchg
imul
cltd
inc
sti
arpl
adc
movsl
sti
pusha
out
push
ja
fnstsw
sbb
push
xor
ret
dec
mov
test
sub
and
sub
ds
repz
hlt
imull
push
dec
sub
sahf
add
xchg
sub
push
xor
test
aam
inc
faddl
movups
add
jne
jmp
pop
gs
jecxz
push
iret
aas
ret
repnz
cmp
shlb
mov
pop
xchg
in
push
or
out
mov
imul
cmp
in
jecxz
mov
incl
inc
and
lahf
lahf
push
xchg
add
fistpll
xchg
imul
outsb
in
adc
push
rorb
push
cmp
cmp
dec
mov
push
and
out
and
mov
and
add
jno
aas
adc
push
aas
xor
rcl
xchg
lds
and
push
rcrb
bound
sbb
xor
xor
inc
sub
je
andl
sub
shll
je
mov
adc
mov
je
push
cmp
hlt
mov
push
adc
lcall
fsubrs
pop
or
push
sbb
clc
cmp
sub
rol
mov
andb
movsb
jno
cmc
out
jle
mov
mov
xchg
das
push
mov
mov
xlat
aam
or
inc
popw
adc
lds
outsl
mov
jbe
lahf
ficoms
mov
lods
pop
pusha
incb
add
jae
je
and
je
hlt
sarb
repz
jns
movsb
jbe
stc
test
pop
push
or
imul
push
xchg
jno
cmp
gs
jno
xchg
adc
lods
add
dec
fnop
ror
out
inc
xor
adc
sbb
and
in
pop
arpl
gs
addr16
lret
mov
ss
or
lret
mov
add
lods
cmp
insl
mov
fwait
add
fidivs
push
sub
push
in
fistpl
jae
pop
and
xor
rcll
out
out
xor
adc
fld
subl
fstpt
xchg
and
xor
testl
mov
jmp
adcl
adc
mov
inc
jns
out
mov
call
je
into
push
in
aas
dec
push
sbb
dec
lcall
mov
stc
test
dec
fld1
stos
mov
mov
test
xchg
and
sbb
jp
outsb
mov
push
ds
sub
sbb
sarb
mov
ffreep
and
sub
mov
mov
insb
sbb
faddl
idivl
push
pop
jg
icebp
pop
push
incl
fsts
or
rcrb
and
adc
das
aam
xchg
test
int
pop
mov
insl
sub
mulb
cltd
incb
stos
les
add
xor
shll
adc
dec
in
dec
and
movsl
push
xchg
dec
inc
lcall
aad
cwtl
mov
ret
loopne
jnp
shlb
pop
ds
jecxz
dec
inc
je
jns
push
cld
out
sub
jg
jmp
data16
mov
xchg
int
sti
loopne
sahf
jno
mov
and
add
aam
out
dec
movsbl
sbb
ja
lods
mov
inc
es
sbb
std
push
ret
mov
scas
loope
jae
lods
movsb
icebp
sbb
push
outsl
xchg
lea
add
das
xchg
mov
xchg
adc
fsubrl
je
pop
or
out
mov
lcall
dec
mov
adc
xchg
lret
xlat
mov
pop
add
decl
cld
clc
cmpsb
sahf
pop
test
fdivrl
dec
call
das
arpl
mov
mov
push
hlt
add
push
stos
inc
js
in
push
cwtl
sub
rcrb
pop
wbinvd
sti
lds
dec
lods
stos
shll
pop
pop
test
xchg
ret
daa
add
jb
ret
into
adc
cmpsl
ret
ret
pushf
inc
js
pop
dec
lods
or
stos
shll
inc
and
adc
inc
push
sti
shll
adc
test
xchg
mov
dec
mov
shr
jae
fidivl
ss
adcb
or
mov
lret
cli
stc
dec
loope
outsl
push
dec
add
pop
jg
ret
push
mov
cmp
lret
nop
pop
sbb
pop
dec
and
out
sarl
pop
dec
push
das
insl
int3
mov
jb
push
push
or
fldenv
xlat
icebp
or
stos
mov
mov
outsl
and
xor
hlt
inc
iret
lea
dec
push
ljmp
mov
fbstp
xorl
or
adc
fimull
test
hlt
fsubs
or
arpl
lea
fs
and
jp
loop
cmc
push
shll
rcrb
mov
pop
lock
xor
cwtl
add
out
hlt
jge
pushf
mov
xor
cmc
loopne
xchg
loopne
aad
fwait
mov
sbb
jl
mov
mov
clc
push
add
push
sub
or
sub
jb
movsl
sahf
lock
ficomps
xchg
fmulp
dec
test
je
je
push
lods
fadds
mov
mov
mov
xchg
dec
lea
in
mov
cmpb
mov
cmpsb
lea
lcall
cmp
cmp
int3
sarb
loope
test
je
repnz
gs
pop
imul
les
int3
jl
mov
leave
insl
or
popfw
inc
repz
mov
loope
das
arpl
push
xchg
push
mov
mov
push
jbe
dec
push
add
ficompl
xor
xchg
aas
sbb
out
xchg
xchg
dec
movsl
mov
xchg
jecxz
push
cs
cmp
cmc
call
lods
xor
and
aas
lret
pop
sbb
jl
mov
jo
ljmp
push
repnz
int3
pop
and
mov
popa
sti
mov
and
iret
xchg
mov
cwtl
xchg
mov
mov
mov
scas
out
out
pop
out
cmp
sbb
pop
sbbl
addl
xor
sub
fiadds
and
pusha
inc
jne
push
or
lcall
mov
mov
ret
rcr
insb
in
jl
lods
lahf
or
jbe
and
sub
add
hlt
xor
test
jnp
inc
sti
gs
ret
xchg
cltd
loopne
mov
cmp
sar
stos
cmp
outsl
fiaddl
pop
mov
fisttpl
ss
cmp
mov
sbb
jge,pn
inc
sub
cmp
lods
cmp
jge
jg
add
jb
xor
xchg
xchg
popa
pop
jp
jae
popf
cmp
xor
test
sub
scas
out
adc
lock
subb
in
add
scas
adc
imul
adc
and
stos
aaa
jmp
or
cs
xor
nop
daa
aam
push
in
xor
ret
push
inc
jmp
icebp
sti
shll
je
mov
fldenv
mov
jne
or
lret
jo
aad
jmp
iret
jmp
lock
or
pop
icebp
lahf
mov
aad
or
in
out
jo
aaa
popf
into
mov
mov
mov
push
dec
fisttpll
mov
pop
in
in
cmp
in
scas
xchg
mov
ret
cmp
mov
movsl
ss
stc
aam
sbbl
or
sbb
call
jae
je
repnz
jmp
or
push
mov
add
ljmp
fisubrs
push
pusha
inc
lcall
test
jb
out
push
loope
xchg
or
or
inc
test
push
fcoml
dec
mov
jge
add
cmpsl
and
mov
ja
enter
jge
adc
push
in
dec
call
jno
arpl
inc
dec
outsl
rorl
fimuls
pop
call
sbb
incb
ds
sbb
insl
sbb
jge
cmpsl
xchg
ljmp
repz
ret
mov
jmp
cmp
dec
leave
add
xchg
xor
xchg
cli
cld
and
inc
cmpsb
scas
push
mov
adc
mov
aas
cmp
pop
insb
jmp
fcoms
dec
mov
inc
push
mov
out
jbe
enter
mov
push
inc
adc
ds
pop
sbb
or
inc
mov
test
sbb
fcmovnu
fildl
sub
mov
xlat
xor
push
das
stos
push
aam
lods
cmp
das
mov
leave
dec
fnstenv
scas
dec
mov
sbb
ret
popa
leave
sti
adc
cld
cmp
fstpl
loope
mov
and
or
or
ja
lock
dec
cmp
mov
stos
jecxz
xor
adc
jno
arpl
inc
mov
lock
add
sub
es
rorl
lock
repnz
jne
dec
or
aas
push
xchg
ret
roll
fsubl
lock
inc
adc
xchg
or
jbe
xchg
jle
in
mov
mov
mov
mov
mov
xchg
cmpsl
imul
or
mov
xor
sti
or
sbb
cmc
fsubl
mov
xchg
push
mov
pusha
aaa
and
xor
xor
int
mov
jmp
insb
jnp
push
sbb
pop
ljmp
mov
jg
insl
mov
scas
sub
iret
arpl
cmp
adc
stos
add
loope
mov
outsl
subl
pusha
fnstenv
lea
gs
enter
pop
xchg
ror
pusha
push
sbb
lret
loop
cmp
inc
icebp
adc
or
out
lcall
popa
iret
outsb
fisubl
cmpsl
insl
jns
lahf
lret
out
jae
loopne
dec
ror
or
and
mov
cli
fnstsw
cmpsb
cmpsb
fstl
scas
and
or
ljmp
mov
sbbb
das
popa
cmp
roll
xor
and
iret
jle
and
in
cmp
inc
or
push
dec
push
inc
sbb
pop
pusha
lret
into
push
sti
mov
icebp
and
and
xor
xor
in
cld
stc
inc
movsb
pop
jp
stc
out
in
or
pushf
push
mov
jg
cld
mov
push
lods
fsub
or
negl
mov
ja
xchg
pusha
andl
into
xor
push
dec
js
pop
pop
push
popl
cmc
mov
cmp
jae
sub
jmp
cmp
sub
xchg
jo
xor
inc
xchg
jl
sbb
jp
push
or
pop
push
loope
out
mov
cld
add
popa
lea
xor
nop
push
cli
int3
adc
cmpsl
xchg
cli
ljmp
mov
and
fistps
push
sub
pop
jnp
lea
sub
pushf
lcall
fsubrp
cmp
xor
push
jle
jbe
mov
or
jne
fistps
jge
jecxz
jb
push
adc
or
gs
add
aad
fmull
dec
push
sbb
pop
adc
xchg
mov
cld
aam
mov
xor
inc
sbb
push
fisttpl
mov
jne
addb
test
or
test
xor
in
mov
sarl
pop
cld
push
ljmp
ret
add
push
outsb
xchg
xchg
lret
adc
into
ja
arpl
cli
imul
push
ja
cmp
test
inc
jno
jo
jle
jne
mov
push
mov
jb
add
arpl
jmp
jecxz
or
add
push
sub
and
fdivl
jmp
pop
mov
jbe
sub
cmpsl
adc
inc
scas
iret
cmp
loopne
push
pop
fsubr
pop
adc
push
ss
sahf
sti
mov
mov
inc
mov
mov
push
mov
push
popa
sub
adc
jo
push
mov
test
out
pop
adc
sbb
cmp
fwait
mov
inc
loop
sbb
and
pop
mov
adc
dec
bound
pushf
subl
lret
leave
icebp
sub
pop
and
xor
das
mov
dec
add
sub
test
sbb
out
mov
es
or
cwtl
clc
xchg
sub
jmp
cmc
fstpl
popa
mov
pop
adc
nop
aaa
cmp
arpl
mov
cmp
movsl
popf
jne
frstor
and
xor
adc
decb
adc
add
mov
sbb
sub
cs
cmp
adc
adc
test
mov
adc
sbb
lret
aaa
xor
neg
lcall
mov
mov
out
sub
lcall
pop
mov
xchg
mov
adc
insb
mov
or
vdivsd
fdiv
jno
leave
inc
cmpsl
mov
mov
pop
cs
repnz
decl
out
pop
lods
mov
xchg
movsl
mov
inc
popl
mov
inc
mov
add
insl
icebp
andl
cmpsl
xchg
mov
ljmp
xor
into
mov
ret
mov
lret
jmp
or
rorb
divb
aaa
fiaddl
and
mov
in
add
int
pop
out
aad
call
call
sbb
add
xor
bound
push
icebp
leave
push
mov
jne
test
xchg
push
inc
adc
aam
sub
xor
adc
dec
loope
daa
mov
sar
out
and
cwtl
xchg
xor
sbb
leave
fwait
sub
add
rcl
outsl
cmp
mov
shlb
fsts
mov
in
xor
jns
sbb
in
mov
mov
loop
ljmp
in
loop
mov
or
xchg
pushf
push
add
adc
lea
fwait
xor
incl
mov
mov
lcall
dec
data16
jmp
xor
inc
pop
push
mov
fsubp
sti
sbb
into
mov
sub
test
mov
test
dec
pop
pop
loope
sbb
fcomps
jecxz
cmc
or
int
stos
pushf
sbb
xchg
rclb
push
out
nop
fistl
xchg
lcall
push
adc
mov
cmp
mov
clc
lea
sbb
addr16
js
inc
sbb
rorl
fnstcw
mov
data16
inc
and
mov
addr16
aaa
icebp
ljmp
jmp
sub
dec
jb
mov
aam
jmp
scas
mov
inc
cltd
lds
push
xorb
mov
push
inc
pop
pop
test
jnp
out
int
dec
mov
and
lret
std
pop
dec
jecxz
test
add
push
push
stc
add
cmpsl
ss
loop
sub
push
sar
inc
in
xor
insl
pop
test
push
jnp
cmp
addr16
ja
mov
dec
xor
inc
mov
mov
mov
test
push
pop
jmp
les
lods
sub
pop
sub
in
clc
mov
push
mov
imul
pop
or
rol
ds
mov
mov
inc
xchg
lret
gs
mov
test
sub
push
movsl
mov
sub
adc
cmp
in
adc
outsb
sarb
push
int3
jne
sub
mov
sbb
push
sbb
push
push
pop
call
jg
jp
imul
mov
add
loopne
aas
xor
cmp
or
mov
xchg
sbb
xchg
clc
mov
orb
and
popl
rclb
mov
mov
fisttpl
daa
sub
movsl
scas
mov
fcoms
xlat
loopne
jl
jno
int3
jno
push
shr
in
clc
adc
cltd
imul
adc
xor
bound
add
jb
mov
aam
xor
lock
movsl
mov
insl
aaa
mov
sahf
mov
add
pop
sbb
push
or
xchg
xchg
push
sub
mov
adc
data16
mov
stos
rorb
jecxz
push
test
rclb
lods
lods
jnp
or
xchg
aaa
enter
rorb
or
lods
dec
push
leave
xor
mov
leave
in
sbb
out
sub
sub
pop
xchg
imul
sub
jns
ja
mov
jne
or
icebp
sti
movsb
or
push
xchg
xor
push
outsl
mov
add
xorb
in
rcrl
outsl
outsb
sub
scas
push
hlt
lahf
mov
fs
ret
mov
xchg
ds
xor
mov
adc
mov
sbb
lret
adcb
jg
xchg
pop
jle
cmp
pop
adc
enter
xor
jmp
out
push
pop
sub
xor
inc
mov
in
mov
dec
das
lahf
in
sub
sub
cmp
fimuls
call
test
mov
mov
adc
inc
push
mov
rcll
inc
sub
push
pop
movsb
shll
imul
cli
pop
movsl
cmp
xor
push
daa
sbb
mov
shrl
ret
js
and
nop
push
out
cmpsb
std
add
lahf
and
sub
or
repnz
mov
and
xlat
inc
mov
std
testb
scas
mov
mov
xor
adc
lcall
and
fld1
in
sbb
xor
pop
add
cmpsl
popa
inc
xor
mov
les
jb
cli
add
sahf
in
jbe
mov
mov
rcrb
lods
addr16
push
rorb
shlb
xor
bound
orl
scas
lds
test
push
in
popa
repz
nop
fcompl
push
cltd
jg
sbb
nop
cmpl
clc
into
rorb
repz
pop
mov
call
jl
push
pop
subl
push
xor
adc
mov
ret
jnp
ja
mov
je
ret
inc
adcb
cmp
out
mov
in
clc
leave
mov
add
or
push
and
clc
xor
sub
cmp
test
adc
pop
insb
mov
jmp
out
repnz
jb
jp
add
mov
fmul
push
movsl
adc
fwait
sub
push
int
xor
mov
xchg
ja
mov
mov
test
mov
pop
cs
pusha
pop
sub
aam
hlt
je
or
pop
addb
xlat
nop
pushf
jo
sbb
pushf
cmp
mov
cmp
scas
mov
repnz
imul
xorb
es
in
jl
cmpsl
movsl
aam
movsb
fs
jecxz
lods
lret
adc
mov
and
in
insl
out
int3
adc
and
sahf
or
arpl
lret
mov
mov
out
mov
negl
call
repnz
xchg
jno
stos
mov
xchg
or
xor
or
repz
ret
rorl
ficoms
dec
pushf
adc
xchg
cmpsb
cwtl
mov
adc
xchg
push
jo
pop
jp
movsbl
stos
aad
inc
aam
push
sti
movsb
orl
jb
jecxz
mov
inc
stos
mov
std
push
out
stc
xchg
jge
jne
nop
add
insb
cmp
lcall
push
xchg
or
xor
xchg
ss
es
push
outsl
adc
add
xor
add
sarb
mov
cmp
or
stos
mov
int3
out
push
je
jbe
scas
cmpsl
mov
cmpl
xchg
cmp
ret
or
inc
pop
leave
pop
mov
and
ja
in
pushf
subb
or
fisubl
inc
fisubrs
lea
aam
mov
or
rclb
in
cmp
mov
or
sbb
or
mov
iret
les
xchg
sahf
test
lahf
cmpsb
xchg
adc
sbb
aad
call
vmovlps
bound
mov
cli
aaa
fdivrs
test
sub
into
les
pop
fnstcw
stc
int3
shl
addr16
lods
dec
cltd
xchg
sbb
xchg
icebp
out
jle
cmp
push
mov
ds
outsb
jmp
push
nop
cmc
adc
mov
mov
pop
or
subl
sub
test
and
sbb
xor
add
cltd
or
popf
scas
lock
je
xor
pop
fxch
add
mov
out
movsb
inc
sbb
jo
mov
mov
xchg
sbb
xchg
push
mov
arpl
push
mov
imul
adc
les
adc
testl
sub
sahf
pop
lods
pop
popf
mov
fcoms
cmp
mov
dec
mov
cmpsb
and
mov
cmp
in
xchg
mov
test
leave
push
inc
mov
cmp
ret
mov
rcrl
dec
pop
ss
int
insl
xchg
pop
fwait
cmc
inc
adc
jge
jae
std
and
movsl
fidivrs
jg
pop
das
pop
or
jb
dec
test
ret
dec
decl
jns
add
ret
pop
and
pop
insl
dec
jecxz
out
dec
pop
sub
inc
and
hlt
mov
insb
adc
mov
mov
adc
icebp
arpl
test
mov
rclb
hlt
xor
in
je
fbld
jl
popa
inc
sub
cmpsl
shll
je
popa
repz
pop
fcomi
add
sbb
push
adc
sub
loopne
fcoml
cmp
lock
sub
xlat
repz
in
jne
inc
lea
push
push
mov
add
xchg
pop
xor
mov
pop
jns
std
sub
pushf
addr16
add
mov
inc
adc
xor
mov
jnp
sub
into
push
push
pop
jbe
mov
lds
popf
sub
add
mov
jecxz
insb
pop
inc
scas
test
push
enter
sub
insl
stc
rcrb
imul
icebp
les
cmpsb
pusha
inc
xor
rolb
aad
cmp
lcall
scas
stos
xlat
adc
clc
and
in
sub
add
repz
ds
in
or
and
call
cld
out
pop
adc
movsl
add
les
dec
and
xchg
sbb
daa
js
clc
fsubrl
cmpsl
cmc
bswap
in
mov
mov
insb
scas
mov
inc
pushl
test
lods
xor
inc
movsl
dec
inc
cwtl
inc
cmc
xchg
sub
paddd
mov
cmc
mov
or
ds
fnsave
jns
mov
mov
movb
sbb
or
arpl
dec
sbb
pop
pop
rorb
xchg
and
fdivs
push
inc
mov
push
inc
lods
lcall
pop
push
inc
sub
dec
aam
clc
fistl
jle
mov
pop
aas
and
dec
cmp
in
pop
sbb
jmp
pop
push
loop
mov
lods
pop
sub
mov
mov
adc
fdivr
jb
or
jnp
dec
subl
jle
sub
jbe
xchg
or
adc
loope
sar
pop
orl
add
jnp
ss
dec
lret
sarl
push
mov
rolb
dec
sbb
rolb
in
imul
lret
ret
outsb
aas
repnz
fs
imul
sub
add
xchg
pushf
out
jb
adc
call
adc
xchg
xchg
andl
adc
pop
pop
adc
lret
mov
in
mov
or
or
cli
int3
daa
push
fs
fstpt
fisubs
mov
xchg
dec
adc
adc
scas
lods
in
decb
jne
mov
outsb
mov
mov
mov
sbb
mov
push
cwtl
js
movsb
sbb
jge
jne
in
xchg
test
mov
push
into
dec
loopne
jnp
movsl
xor
and
push
mov
push
jno
sar
mov
add
add
repz
or
jmp
xor
loope
into
push
cmpb
and
inc
xor
repz
sbb
sub
stos
push
inc
push
std
mov
cmp
add
leave
sub
imul
mov
mov
aas
cld
rcll
xorb
dec
and
xchg
movl
push
rolb
cmc
nop
out
xchg
sub
or
lahf
lahf
repz
insb
mov
mov
xchg
mov
stc
into
push
in
xor
sbb
mov
pop
mov
mov
fwait
pushf
push
sub
repz
test
mov
xrstor
mov
sbb
cmc
js
mov
mov
push
sbb
mov
jae
xchg
cmp
bound
pop
lods
shr
dec
jmp
push
mov
les
xchg
cwtl
mov
lock
mov
daa
or
cld
sbb
jecxz
bound
outsl
xchg
inc
xor
sub
adc
in
adc
cmp
popf
sarb
push
mov
push
lahf
adc
in
dec
dec
es
movsb
cmpsl
outsb
jbe
popf
adc
hlt
mov
push
sbbb
mov
dec
verw
rcr
sbb
push
loop
icebp
mov
dec
cmp
mov
mov
and
ds
mov
xchg
xor
in
aam
inc
or
stc
aaa
lds
dec
movsb
movsb
dec
jg
repnz
cmpsb
mov
in
pusha
cli
cmp
pusha
jb
je
je
leave
pop
adc
jbe
push
pop
mov
dec
movb
push
out
scas
push
ror
cltd
adc
jl
hlt
pop
mov
sub
scas
dec
adc
sbbb
jge
jnp
xchg
cltd
cld
idivl
andl
stc
mov
dec
rcrl
jl
and
mov
popa
dec
out
lret
mov
nop
popf
jg
subb
cmpb
mov
sub
or
inc
or
jne
fwait
fwait
dec
lret
jg,pt
xchg
xor
outsb
jno
outsb
xor
mov
lock
pop
push
roll
test
sub
leave
movsb
mov
outsl
mov
outsl
rol
mov
inc
and
and
inc
jmp
inc
rsm
loopne
cmp
sub
push
fsubl
jmp
xor
mov
lcall
jns
sbb
sbb
and
inc
outsl
ss
fimull
imulb
and
lds
xchg
testb
push
stos
add
cmp
icebp
and
sbb
inc
sub
add
mov
sbb
push
sbb
push
pop
sub
jge
in
pusha
outsl
push
inc
dec
aad
adc
pop
fsubl
pop
cmp
call
lds
pop
push
add
clc
or
dec
xor
or
call
pop
sti
aaa
push
and
mov
mov
mov
xor
adc
bound
lods
sub
sbb
sbb
mov
popa
add
cld
mov
jne
push
test
adc
test
xor
outsl
inc
xchg
stc
mov
pusha
std
dec
leave
fists
jbe
ja
mov
int3
movsl
mov
mov
insl
cwtl
nop
inc
dec
cmp
int
xor
or
jge
or
lods
loopne
push
sub
push
push
push
xchg
jge
sub
sub
jae
adc
sub
outsb
mov
arpl
push
clc
mov
mov
prefetch
stos
es
aaa
sub
aam
leave
les
pop
pop
repz
cli
push
mov
push
xchg
push
scas
mov
in
leave
adc
test
xchg
mov
repnz
mov
pop
rcr
inc
mov
push
out
sub
cmp
sub
or
sub
mov
dec
sub
xchg
push
mov
and
xor
and
adcb
lods
pop
outsb
stos
cmp
xchg
pop
adc
es
outsl
or
inc
xor
jmp
lret
xorb
out
xchg
jb
jb
rcl
into
xchg
insb
insl
sub
shrb
stc
das
lods
mov
clc
jns
fidivl
dec
jle
mov
mov
and
jmp
sub
push
mov
cmpsb
icebp
fstpl
mov
or
mov
or
pusha
cmp
dec
or
jmp
mov
xchg
add
ss
fisttpl
inc
push
cli
daa
pop
sbb
fidivrs
fmuls
dec
das
and
loopne
cmp
popa
fst
jb
popa
push
lods
ljmp
adc
xor
adc
mov
sbb
sahf
mov
out
or
pop
mov
jle
test
stc
pop
cmpsl
pop
xchg
adc
adc
loope
frstor
lret
jnp
sbb
mov
sarb
test
jae
fidivl
mov
fnstenvs
xchg
mov
add
pop
repnz
std
push
mov
xadd
mov
and
fiaddl
movsl
std
inc
insb
sahf
inc
arpl
invd
push
popf
cmp
adc
xor
xor
add
outsb
sbb
pop
insb
loope
shl
in
loop
add
jb,pn
repnz
sbb
mov
sub
add
iret
fnsave
idiv
cli
push
push
push
xchg
dec
and
pop
aam
std
mov
test
popl
xchg
adc
or
xor
daa
push
test
push
pop
imul
aaa
movsl
sub
push
mov
ja
push
mov
jb
xor
add
test
out
pop
int
icebp
sub
cmp
in
orl
fisubrs
je
aaa
ficoms
call
cmp
lea
fildll
mov
scas
cmp
sbb
inc
lods
insl
je
push
add
pop
jle
test
mov
mov
hlt
jbe
mov
lcall
rcl
push
fwait
pop
test
push
mov
or
aam
fldl
daa
pop
es
xor
adc
sbb
test
mov
jg
call
push
push
pop
stos
and
mov
adc
lcall
jns
pop
fcomps
movsl
cmpsl
jne
push
cmp
jnp
pusha
lahf
shrb
dec
out
int
fs
push
test
mov
lods
mov
jp
sbb
jl
in
int3
sbb
ds
sub
sbb
lock
lock
push
jb
adc
sub
pop
push
in
les
push
jp
xchg
je
mov
xchg
stos
cs
sub
cmp
mov
lret
mov
push
loop
cmpsl
mov
push
pop
jmp
rorl
inc
push
stos
fcmovnu
fwait
mov
je
push
xchg
sbb
push
jmp
xchg
or
les
jo
hlt
popa
dec
sbb
dec
add
cli
aam
les
or
sti
cmpsl
loope
add
das
fst
mov
lcall
xchg
fdivl
xchg
mov
mov
fsubl
arpl
adc
dec
je
test
dec
lock
mov
dec
or
fsts
jmp
aam
ror
lds
mov
lret
jg
jne
ret
in
dec
inc
dec
mov
xchg
push
es
xor
mov
mov
mov
jg
and
rcl
out
sbb
xchg
xchg
scas
nop
pop
adc
mov
or
or
push
sbb
cmc
and
or
fisubrs
dec
xchg
lods
das
mov
sub
mov
or
push
and
xchg
xchg
test
loopne
pop
je
rolb
xlat
cmp
mov
cmpsb
in
mov
sub
ljmp
xchg
jne
std
push
pop
cmp
xchg
and
sar
push
outsl
mov
scas
lock
das
pusha
outsl
es
cmp
mov
xor
call
push
xor
push
jecxz
add
sub
fsubp
mov
dec
mov
outsl
sub
jo
cltd
cmp
push
iret
cmp
mov
pusha
test
lea
adc
loop
dec
cmp
in
mov
jae
insb
jp
mov
mov
inc
cmp
mov
mov
sbb
negb
mov
sbb
leave
mov
dec
addr16
addr16
sub
cmp
js
int
pop
rcr
sbb
addr16
push
jmp
jo
lret
mov
lods
sti
dec
addr16
xchg
and
out
std
pop
jns
push
jecxz
dec
cmp
jno
sbb
inc
sbb
push
pop
pop
add
test
mov
mov
or
or
xchg
xchg
dec
and
xchg
adc
std
lds
test
in
and
xchg
cmp
cmpsl
xchg
mov
pop
fistps
push
int
sbb
push
lret
and
pop
and
sbb
in
mov
cli
out
aam
mov
fidivl
push
xchg
aad
int3
mov
sub
xchg
mov
add
bound
adc
daa
je
icebp
movsl
dec
cmp
movsl
mov
jle
jl
roll
mov
mov
xchg
mov
mov
stos
xchg
mov
imul
xorb
jae
lods
push
lret
test
sub
push
ja
cpuid
orl
out
dec
test
jno
cmc
je
pop
sub
popa
and
mov
adc
adc
inc
icebp
dec
int3
movb
xor
out
mov
leave
sbb
test
mov
mov
and
fadds
ja
cmp
xor
not
daa
push
jns
jge
daa
mov
jmp
and
jg
roll
xchg
dec
outsl
popa
or
mov
scas
pop
stos
sbb
cli
add
jae
inc
xor
daa
or
inc
and
or
scas
sub
xchg
test
inc
dec
sbb
adc
and
in
mov
or
push
push
test
cmp
sub
sbb
ror
orb
mov
fmul
ret
mov
cmp
loopne
aam
out
jne
add
dec
dec
sbb
adc
sub
lret
push
inc
fldl
xlat
fldt
adc
sbb
pop
inc
aam
add
inc
iret
mov
dec
add
lods
push
mov
bound
mov
outsb
cmp
and
rclb
scas
enter
jns
push
repz
inc
push
fidivrs
mov
fs
xchg
jnp
push
xor
jo
cli
mov
jle
xchg
jmp
jo
pop
push
push
cmp
push
push
mov
lret
add
xor
jl
leave
sub
pop
insb
addr16
lcall
mov
ds
adc
xchg
mov
sbb
cs
cmp
pop
loopne
out
repnz
aam
and
and
call
jg
jge
sbb
jne
cmpsb
loopne
fs
cli
sub
xchg
adc
je
les
ds
lcall
add
ficompl
adc
test
lcall
pop
popf
jbe
inc
stos
test
mov
cmp
stos
lock
idivl
dec
pop
sub
mov
sub
lcall
lret
pop
popf
sub
std
lds
push
xor
gs
fnstenv
sbb
movsb
subb
je
fadds
jecxz
mov
mov
mov
jbe
or
in
mov
jp
push
in
xchg
or
lods
lods
mov
mov
push
hlt
stos
ret
mov
sahf
inc
sbb
sub
adc
xor
cs
stc
push
add
repnz
xchg
mov
jae
js
lods
enter
jne
jmp
cmp
mov
nop
mov
stos
xor
addr16
lret
push
shll
mov
ss
mov
pop
lds
icebp
in
inc
adc
xorl
push
or
out
shl
adc
push
cmc
shlb
add
rol
aaa
aaa
ljmp
imul
loope
xchg
les
in
mov
mov
fdivrs
push
jns
jg
testl
sub
fidivrs
scas
jno
leave
shl
mov
sub
ss
je
mov
andl
fsub
mov
pushf
xchg
popf
pop
test
sbb
push
imul
std
fstpt
mov
js
mov
jns
cwtl
cmpsl
mov
mov
sub
mov
jmp
aas
sub
shlb
xor
dec
sti
out
sub
lods
push
in
loope
sub
fnstsw
cmp
and
mov
hlt
loopne
mov
lds
adc
scas
nop
stos
gs
fsubs
test
jmp
pop
fcmovne
xchg
add
insb
in
ret
and
test
mov
cmp
cmpsl
mov
add
pop
ljmp
sub
add
add
data16
sahf
in
shr
mov
out
arpl
ror
int3
rcll
int3
sbb
xor
or
jg
pop
cmp
fidivs
mov
mov
pop
push
cmp
mov
mov
push
and
jmp
loope
xchg
sbb
dec
add
imul
jns
out
in
mov
invd
ja
lahf
jle
or
leave
bound
jnp
and
outsb
jae
mov
stos
mov
ret
cmp
pop
fisubs
add
lods
xor
out
or
imul
filds
popf
adc
lods
lret
cli
cmc
and
in
fidivrs
jno
sbb
fcoml
inc
in
leave
mov
mov
cmp
mov
mov
into
das
and
scas
pop
andb
cmp
mov
sub
pop
inc
lods
sbb
fidivl
dec
push
sbb
mov
dec
adc
and
adc
outsl
and
lds
clc
mov
cmp
outsl
gs
jl
movsb
jl
cmpsl
js
shll
mov
or
or
lock
adc
rol
ljmp
push
jae
inc
or
cmp
and
cwtl
mov
pusha
shlb
inc
xchg
adc
xchg
notb
ds
nop
mov
test
or
lds
and
mov
pushf
mov
je
mov
pop
leave
mov
out
pushf
and
mov
scas
pop
mov
mov
les
je
movsl
push
and
pop
pop
sbb
call
sub
in
jge
pop
stc
imul
cmpsl
sbb
inc
pop
andb
pop
cmpl
sarl
mov
loopne
out
jl
pushf
out
aam
aam
les
in
mov
dec
and
add
sbb
hlt
sahf
sbb
xchg
sbb
test
add
or
inc
loope
sbb
push
imul
lds
call
outsb
les
int3
cltd
insl
dec
pop
cld
dec
xchg
std
jno
jbe
adc
iret
mov
cmp
adc
inc
ret
inc
xchg
pop
push
test
arpl
mov
or
mov
pop
dec
scas
add
imulb
ja
add
cmp
gs
adc
hlt
and
xor
shlb
orb
xor
fwait
jecxz
mov
or
or
push
xchg
cmpsl
xor
jae
mov
push
roll
sub
inc
outsb
or
dec
rcl
inc
jecxz
adc
xchg
or
lea
addb
pop
jne
popa
push
add
inc
std
mov
jecxz
hlt
and
ret
pop
pop
jge
push
shl
jp
mov
push
or
imul
or
xor
les
add
jge
es
sbb
mov
xchg
xlat
out
dec
push
mov
notl
cli
dec
nop
sub
add
movsl
mov
into
cwtl
lock
arpl
sub
and
mov
add
jecxz
icebp
push
fisttpll
mov
mov
lods
push
pushf
sbbl
dec
mov
fimuls
mov
fadd
into
inc
dec
push
movsl
or
adc
sub
lahf
jne
out
pop
push
arpl
and
mov
outsb
cmpsb
push
pop
dec
push
adc
out
fisubl
xchg
mov
cs
jge
dec
ret
mov
sbb
pusha
jno
shrl
cmp
push
scas
loope
sub
jl
inc
lods
cld
adc
loope
mov
decb
jg
pop
mov
cs
inc
sbb
mov
cwtl
shll
xchg
mov
jb
addr16
sub
out
divb
xchg
xor
lods
in
scas
sbb
cmpsb
popf
jge
repnz
out
inc
jno
out
and
mov
rcrl
jns
or
dec
out
push
sub
gs
xor
dec
aam
stos
add
xorb
scas
in
or
loop
sbb
and
call
dec
push
xchg
sbb
sbb
add
inc
notb
and
in
or
adc
aas
gs
hlt
adc
dec
push
fcomps
add
mov
jl
in
or
mov
lret
push
shrb
mov
or
xchg
adc
add
and
test
or
push
fsts
mov
or
nop
hlt
stc
xchg
idivb
mov
mov
js
mov
mov
lods
es
enter
push
sub
mov
in
hlt
in
mov
sub
rcrl
jne
ljmp
mov
fwait
cwtl
xrelease
mov
in
or
or
shrl
inc
cltd
dec
jg
sbb
popa
xor
xchg
int
movsl
ret
fdivr
stc
stc
adc
push
mov
pop
es
pusha
mov
mov
add
adc
cmpsl
jl
adcb
mov
mov
push
xor
negb
fcomps
shrb
cmc
call
sbb
mov
add
nop
adc
nop
adc
xchg
fstpl
out
incb
or
jmp
push
icebp
or
lods
ds
loopne
leave
pusha
imul
cli
shrb
push
and
pop
mov
adc
adc
and
xor
mov
out
fmul
mov
lret
rcll
cmp
pop
push
jg
pop
iret
mov
loopne
lahf
sbb
ficoml
mov
push
jbe
lahf
outsl
lahf
mov
pop
xchg
shll
in
insl
fs
xor
sbb
jns
outsb
add
xchg
popf
add
xor
xchg
repnz
jle
cmpl
and
out
out
mov
cmp
sbb
outsl
popa
imul
pop
inc
pop
dec
jmp
mov
test
sub
iret
xor
add
aaa
inc
movsb
mov
pop
aad
mov
mov
mov
ja
stc
inc
out
outsl
mov
jl
xchg
jecxz
imul
add
and
pop
jmp
or
sarl
lods
imul
ljmp
xor
or
dec
and
mov
xchg
imul
cltd
fneni(8087
out
push
in
dec
shlb
mov
nop
stc
jno
jno
test
out
imul
dec
mov
cld
jnp
shlb
mov
mov
in
test
and
xlat
popf
shl
outsl
cltd
imul
mov
xchg
lcall
pop
inc
xchg
pushl
insl
in
sbb
xor
jb
mov
mov
mov
xor
leave
jge
in
jns
lods
mov
fldt
jbe
cmpl
cmpb
movl
sub
lods
add
fstl
and
test
mov
mov
adc
and
fcmovbe
xchg
jle
push
mov
push
leave
outsl
inc
xchg
jae
daa
dec
cld
jno
mov
cmp
faddp
rorb
sub
jp
push
cmp
xor
lods
insl
pop
mov
int
push
mov
lret
cli
enter
mov
cltd
jp
popa
or
xchg
sbb
jmp
push
enter
outsl
adc
inc
jo
sub
push
xchg
jns
mov
mov
pushf
ret
outsl
push
fisubrl
arpl
push
add
out
dec
xor
pop
mov
mov
jno
or
scas
fstpl
jno
push
lahf
xchg
sar
out
cmp
loop
test
ds
scas
ret
add
aaa
inc
cmovo
fildll
out
es
add
out
adc
and
or
xor
sub
fmuls
aam
xchg
inc
push
movsl
pop
call
inc
add
xchg
and
imul
subb
or
sbb
inc
xchg
gs
or
inc
scas
jns
sar
xchg
cmp
sbb
push
lea
cmc
lahf
mov
fmul
fs
mov
inc
jp
jg
mov
repz
fisubrl
push
mov
dec
sti
stos
inc
push
cld
inc
sti
lock
jae
icebp
fs
xchg
add
mov
scas
daa
add
std
xlat
popf
in
sti
mov
jo
and
push
xchg
in
xchg
loopne
pop
popf
push
adc
aaa
and
mov
sub
jl
inc
and
cmp
lret
push
pop
mov
int
push
testb
push
cltd
pop
xor
sbb
test
sub
lcall
int3
pop
inc
outsb
outsl
mov
sbb
xchg
dec
pushf
sub
cmp
fistpll
inc
cmp
bnd
mov
test
add
fidivl
jmp
jp
and
push
mov
xchg
inc
dec
ds
lcall
cmc
icebp
or
add
arpl
push
arpl
mov
iret
sbb
and
fsubrs
jnp
scas
push
js
push
lods
loope
scas
testl
mov
xor
cwtl
and
mov
sub
in
mov
jl
fisttps
pop
push
sbb
push
mov
scas
jne,pt
jno
dec
das
pop
and
xchg
pusha
inc
jo
in
arpl
mov
rclb
mov
mov
aam
bound
xorl
out
movsl
mov
sub
sti
pop
fcmovbe
xlat
mov
imul
or
ret
pop
inc
repz
adc
cli
jl
push
out
xchg
sbb
mov
notb
jg
into
mov
aaa
inc
push
lret
hlt
sub
movsl
push
and
cmp
leave
jmp
and
cmp
xor
lea
jb
stc
inc
mov
ret
adc
test
push
pop
mov
rclb
and
pop
cltd
jae
fcomps
mov
je
dec
lahf
jne
mov
push
dec
notb
pusha
jae
fnstenv
les
push
arpl
mov
dec
inc
xchg
shl
pop
scas
test
ficoms
jle
inc
cmp
dec
pushf
dec
mov
and
pop
mov
xchg
scas
cmp
mov
rclb
ja
push
and
mov
xchg
addr16
daa
add
and
fcoml
mov
pop
sub
nop
push
in
cltd
sbb
fsubr
cmp
bound
pusha
pop
add
or
xchg
sbb
push
inc
mov
loop
push
add
int
push
in
xor
xlat
inc
fildl
iret
or
ror
std
sub
pop
adc
mov
scas
iret
pop
cmp
xchg
cmp
lods
mov
dec
pusha
xchg
inc
sub
outsb
dec
into
das
jno
mov
jo
fnsave
pop
loopne
inc
add
popa
sbb
pop
jnp
xchg
outsl
lcall
sub
dec
ret
xchg
dec
inc
and
jno
lret
xor
mov
das
xchg
arpl
insb
lret
cmp
sub
mov
lahf
ja
mov
xchg
popf
cmpl
fwait
push
jbe
mov
ljmp
lock
or
fisttpl
insb
pop
lahf
mov
add
cmp
fldl
and
pop
push
sbb
xor
push
addr16
xor
je
sbb
mov
es
inc
mov
out
dec
mov
mov
cmpsb
lock
add
dec
adc
jmp
cmp
ret
push
add
or
fildl
fistps
cmp
dec
fsubrl
cmpsb
push
loopne
mov
outsb
cwtl
test
cmp
and
jne
sub
stos
dec
and
inc
inc
mov
mov
in
test
jns
push
out
or
cmp
jne
js
adc
int
out
pop
sbb
sub
and
cmp
jno
adc
push
fsincos
and
flds
push
xor
insb
ds
rcll
jno
rclb
jmp
xor
lret
orl
int
into
mov
orl
bnd
add
mov
cmpsb
dec
jbe
je
and
jb
push
test
jle
push
adc
xor
out
sbb
add
shl
dec
xchg
pop
push
int3
mov
add
xchg
fadds
push
or
sar
shrl
pop
iret
jns
cmp
leave
fadds
cmp
shll
push
or
pop
pop
cmp
fwait
ja
mov
mov
push
xchg
dec
sbb
std
mov
in
leave
pop
or
xchg
jmp
xchg
inc
dec
pop
jmp
jno
ss
ljmp
push
cmp
addl
js
scas
stos
sub
data16
sbb
inc
mov
push
das
or
add
fneni(8087
nop
push
push
addl
ljmp
xor
cld
cmp
push
and
mov
iret
inc
out
fstl
fnstcw
gs
stos
in
jne
bound
sbb
sub
cmp
sub
outsb
add
add
pop
lea
inc
mov
lods
fisttpl
mov
test
js
out
mov
push
push
mov
pop
add
inc
out
sbb
sub
inc
imul
adc
bound
pop
aad
push
int3
std
add
mov
push
in
sub
xlat
dec
sub
push
ret
aam
fld1
jmp
mov
mov
sarb
and
dec
ja
mov
jnp
movsb
clc
xchg
jns
mov
pop
imul
mov
add
test
cmp
mov
jbe
push
sbb
jg
les
push
mov
stos
mov
sti
adc
dec
scas
jno,pt
inc
jns
mov
sub
scas
fcomps
pop
pop
imul
push
fst
ror
dec
aad
mov
je
jecxz
adcl
or
scas
pop
add
clc
push
fs
rcl
push
data16
adc
sbb
sbb
aaa
pop
sub
scas
repz
xchg
inc
push
push
mov
push
sub
push
mov
xor
or
aas
shll
mov
movsl
pop
pop
dec
fdivrp
rcrl
enter
add
clc
cmp
popf
cmp
cmp
mov
out
add
push
ja
ret
xchg
xchg
mov
jmp
and
adc
xor
test
addl
insb
xchg
sub
cltd
adcb
sub
iret
test
outsl
cld
imul
in
add
add
jne
arpl
lock
inc
cld
test
mov
imul
test
cli
adc
ljmp
pop
decb
sub
iret
jnp
mov
cmpsb
push
mov
orl
xor
push
dec
cltd
xchg
icebp
sahf
sahf
adc
in
into
dec
pushf
jb
push
aas
add
jae
xlat
cs
ds
int
test
nop
mov
pusha
inc
and
adc
jo
das
popa
call
inc
xchg
loope
hlt
dec
cmp
sbb
mov
mov
ljmp
dec
movsb
or
stc
xor
dec
xchg
out
mov
stos
jne
push
pop
into
iret
jge
mov
in
jmp
in
fisubl
push
push
or
data16
lahf
daa
inc
in
push
jl
imul
mov
jge
lcall
inc
mov
inc
inc
cli
imul
jbe
mov
sahf
mov
dec
sub
pop
push
shl
das
mov
dec
push
stos
in
inc
lcall
ds
push
sub
movsb
movsl
das
lret
sbb
rep
mov
or
cmp
test
adc
ftst
mov
lret
addb
js
xor
outsb
pop
pop
pop
and
or
ss
les
inc
cmp
sub
adc
push
testl
outsl
inc
jo
pop
ljmp
cmpsb
jmp
arpl
lods
dec
call
mov
hlt
clc
pop
push
cld
xchg
icebp
cmpb
xchg
sbb
scas
cs
xor
mov
fwait
and
hlt
sbb
xchg
dec
adc
xchg
sub
shl
movsb
loope
mov
fwait
insl
jp
lods
test
fs
dec
faddl
in
decb
push
pop
fimuls
xchg
jecxz
cmc
out
sub
xor
sbb
cmovle
jecxz
pop
out
je
stc
out
mov
sbb
test
fcomp
xchg
and
cmp
add
jne
lahf
sub
test
inc
lock
mov
int3
sahf
pop
fldt
repnz
leave
out
and
les
add
cmc
iret
lcall
cld
mov
jmp
out
push
inc
js
xchg
rorb
dec
ljmp
sub
lcall
xor
xabort
rorl
sub
adc
in
or
jne
cmp
scas
sub
and
movsl
inc
push
pop
xchg
push
lcall
scas
cwtl
rcl
cli
xchg
lahf
xchg
cmp
or
dec
cltd
ja
jecxz
leave
jmp
jae
lea
mov
jmp
mov
arpl
push
test
xor
cmp
xchg
pop
sbb
inc
fsubrl
sub
cmp
jge
inc
inc
fdivrs
xchg
repz
outsb
lock
pop
loopne
or
add
cmp
lret
hlt
stos
fs
and
dec
xchg
push
outsl
jns
push
aad
push
sbb
mov
pop
xchg
dec
dec
pop
loopne
push
mov
or
loop
ret
xchg
cmpsb
dec
nop
sbb
lret
insb
insl
popf
sub
sub
pop
test
xor
ja
in
in
notb
outsb
lcall
push
lret
jge
and
shlb
fcmovbe
dec
add
ret
sub
pop
pushf
orl
ss
jbe
sbb
fisubrs
repz
cmp
nop
cmp
pop
js
jmp
xchg
cld
xor
mov
pop
lods
rcr
sub
dec
add
sbb
inc
mov
enter
add
call
mov
and
scas
pop
sub
mov
std
or
xchg
negb
into
and
stos
add
cmpsl
mov
sti
cld
xor
and
mov
or
pop
in
addr16
out
fucomip
cmp
xor
pop
stos
sbb
sub
dec
dec
negl
mov
inc
out
pop
mov
add
repnz
rol
jae
mov
add
nop
mov
loop
addr16
fisttpll
push
loope
push
movsb
lret
jmp
jg
cwtl
rorl
inc
rcl
insl
mov
mov
xor
mov
inc
mov
dec
dec
cmp
pop
mov
lock
cmp
je
movsl
movsl
stos
xchg
cmp
xlat
out
pop
mov
add
xorb
fcmovu
das
push
mov
xor
pop
int3
ror
movsl
or
xchg
rol
jmp
inc
mov
pop
mov
push
scas
jno
dec
add
or
lahf
popa
enter
sbb
icebp
cmp
sbb
sti
call
lcall
es
jle
cwtl
and
dec
pop
aad
sbb
mov
push
aad
loop
or
shll
xchg
fadds
xchg
sub
scas
jns
dec
ds
push
loope
inc
shrb
xchg
cmp
and
mov
add
sub
or
setge
jmp
int3
outsl
jns
in
adc
xchg
mov
push
mov
jno
and
aad
jns
push
mov
pop
push
fmuls
inc
fisubrs
fwait
mov
cmp
push
or
and
clc
movsb
loopne
cmpsb
xor
pusha
pop
hlt
jle
xchg
dec
vmovmskps
pop
lods
mov
cmp
ja
jns
aas
dec
jecxz
bt
std
adc
jg
loop
xchg
out
add
and
add
les
dec
fcmovne
add
and
mov
mov
rorb
daa
or
mov
pushf
push
jbe
dec
sahf
addr16
imul
movsl
loope
imul
mov
dec
inc
and
inc
xor
xchg
mov
xor
pop
mov
adc
lods
xchg
pop
push
mov
sbb
jl
dec
mov
shlb
aad
mov
test
dec
test
out
pop
into
lods
repnz
sarb
inc
pop
stos
mov
test
adcl
sub
mov
sbb
and
ficoml
or
xchg
push
fdivrs
test
lds
pop
jg
xor
mov
out
loop
stos
cmpsl
push
mov
mov
xor
aaa
dec
push
xchg
and
call
fiaddl
dec
stos
std
pop
cwtl
pop
cmpb
push
repz
jmp
mov
aad
add
sub
pop
jb
add
mov
push
and
sub
cmp
xchg
sbb
aam
mov
cs
inc
xchg
js
xor
cli
mov
subl
mov
add
jl
push
in
enter
loopne
scas
mov
aam
mov
dec
mov
aas
jnp
or
clc
xchg
in
sub
shrl
mov
cmpsb
mov
or
negb
add
mov
inc
add
nop
cmp
mov
cli
sbb
mov
add
mov
lock
aaa
pop
aam
mov
cmp
sbb
xlat
test
movsl
jns
fsubs
or
inc
xchg
jge
imul
int
mov
add
fcoms
push
pop
adc
jmp
sub
xchg
xchg
mov
pop
sub
adc
pushf
adc
stos
jl
pop
xor
sub
jge
mov
jno
nop
cld
int
inc
insl
in
shll
addl
cmp
push
int3
pop
cld
nop
sahf
icebp
adc
test
push
xchg
in
enter
dec
test
rcll
mov
rep
ficomps
ja
test
imul
push
xor
inc
fs
test
cmp
fucom
shll
mov
out
fiadds
push
add
sti
xchg
mov
or
outsb
or
js
mov
add
es
cld
xor
mov
sbb
cmpsb
adc
sarl
jl
test
sbb
mov
lret
imul
les
xchg
xor
shrl
pop
scas
sub
stos
xor
sbb
cmp
pop
stc
cld
imul
in
xchg
adc
mov
xchg
imul
push
mov
mov
sub
xchg
inc
div
push
idiv
addb
xor
cmp
insl
and
repz
xor
hlt
mov
xchg
mov
nop
jnp
in
fistpll
inc
in
clc
test
mov
inc
or
cmp
add
pop
loopne
call
jo
push
icebp
xchg
sub
addps
mov
out
inc
aam
and
cmp
jo
mov
icebp
sbb
repnz
fstps
les
push
or
lds
sbb
dec
fistpll
int
mov
dec
cmp
ret
aaa
sbb
shrl
cld
push
imul
sbb
sbb
inc
sarl
inc
jle
and
je
mov
lods
sbb
mov
or
popa
sbb
sbb
into
lret
sub
out
mov
mov
cmp
add
mov
pop
rcl
lods
call
adc
loope
jne
inc
and
and
sub
adc
and
jge
pop
pop
pop
sbb
mov
push
mov
push
jecxz
add
xchg
out
and
leave
sahf
mov
ds
pop
in
stos
push
sar
inc
lcall
ljmp
jle
mov
mov
or
or
mov
cmp
mov
stos
xlat
loop
sti
ret
add
lock
dec
mov
sub
cld
dec
fistl
pop
cmp
adc
cs
into
lock
in
call
test
mov
cmp
stc
mov
mov
adc
dec
sub
adc
xchg
sub
jg
out
mov
inc
xor
push
stos
shl
and
sbb
push
or
xchg
leave
dec
js
std
jecxz
in
cmp
insb
outsb
ljmp
test
jmp
jns
andb
shlb
out
adc
orb
xlat
adc
and
test
test
sbb
sbb
cmc
repz
insl
in
lock
ret
pop
xor
lods
or
mov
and
lods
loope
sbb
repz
stc
push
leave
stos
call
push
arpl
add
push
dec
xchg
xor
jecxz
or
ja
push
lods
movsl
sub
lret
and
loope
cmpsl
stc
lods
leave
push
mov
xchg
xor
mov
mov
xchg
push
lret
mov
outsb
daa
jecxz
mov
jae
inc
push
cmc
pop
test
mov
js
fbstp
es
xor
jo
stos
test
mov
js
push
or
ret
dec
xor
pop
mov
test
mov
xlat
and
jb
push
das
adc
aad
push
push
pop
movsb
inc
adc
outsl
lret
lods
negb
bound
push
ja
lds
cmp
inc
testb
int3
sbb
dec
movsb
mov
xchg
lret
dec
int3
push
fmul
cld
mov
mov
adc
out
cmc
dec
mov
push
mov
cmp
lds
addr16
or
fs
cs
jecxz
push
cmp
sbb
fldl
hlt
sub
sbb
pop
pushf
mov
int
jmp
stc
pop
repnz
data16
fdivr
mov
mov
stos
ss
push
lcall
push
mov
inc
lock
fcmovne
add
or
dec
sbb
lcall
jns
inc
xchg
shll
cli
mull
xchg
sbb
dec
jae
xor
inc
out
mov
psrlq
call
cmp
xchg
xor
dec
das
push
mov
std
test
lcall
outsb
jne
add
sub
and
sbb
jb
test
loop
and
jg
inc
pop
ds
jg
and
pop
fisubl
int3
cmpsl
fisubl
pop
fldcw
sbb
lds
stos
push
nop
or
mov
outsb
lret
mov
sub
movsl
sahf
sbb
dec
or
pushf
push
push
out
adc
inc
adc
inc
sub
push
popf
dec
mov
stos
jno
aaa
insl
dec
divb
or
in
fsubl
cltd
jg
add
adc
adc
pop
dec
xchg
mov
mov
jge
mov
sub
cmpsl
dec
pop
loopne
jmp
aaa
ret
mov
xorl
sub
push
rorl
jne
push
ficomps
fisttpl
xchg
loope
mov
jle
popf
pop
gs
mov
pop
and
insb
mov
jae
sbb
addr16
mov
pushf
xchg
inc
or
mov
push
adc
arpl
jns
xor
sbbb
pop
mov
mov
nop
sbb
dec
sbbl
aad
add
loop
push
sbbb
mov
jne
pop
arpl
mov
inc
insb
jnp
imul
out
push
jns
dec
and
test
cli
jb
and
shll
xor
pop
xchg
ds
js
add
test
lea
jno
stos
xchg
scas
movsl
aad
pop
data16
push
mov
adc
push
movsl
repnz
xchg
mov
mov
cli
shr
lret
ja
jno
lods
or
testl
and
add
enter
sub
or
or
push
scas
push
xor
fldenv
push
pop
or
ljmp
dec
mov
addr16
in
fstp
mov
cmpsb
add
aad
mov
inc
jno
xchg
arpl
notb
sahf
fists
les
cmp
cmpsb
fadds
push
xchg
jge
adc
cwtl
shrl
xchg
addb
cmpsl
push
pop
rcr
aad
dec
inc
mov
in
pop
xchg
mov
les
stc
out
jecxz
mov
test
out
mov
cmp
pusha
scas
sbb
add
test
aam
std
movsb
dec
mov
dec
out
outsl
push
pop
in
and
add
sbb
or
cmp
hlt
push
int
jbe
push
adc
mov
mov
cmp
xchg
lds
lret
xor
sub
sti
xchg
leave
insb
ja
mov
mov
je
sub
fnstenv
jg
and
sub
add
dec
insl
test
and
in
inc
loopne
loopne
cmp
lods
mov
sbb
or
mov
add
adc
mov
jns
dec
or
xchg
or
push
adc
sbb
mov
inc
push
sub
aaa
aad
xor
lcall
daa
push
jp
loope
dec
aaa
mov
mov
sahf
and
jecxz
imul
pop
flds
cli
dec
popa
mov
sbb
pop
js
sbb
inc
mov
sti
ja
je
sub
addr16
popf
mov
adc
addr16
in
add
out
mov
enter
loope
xlat
repnz
lods
add
xor
rolb
add
andb
enter
or
inc
stos
jne
lds
push
loop
cmp
rcl
inc
test
movsl
shlb
xchg
jns
add
xlat
cmp
repz
jnp
sbb
push
dec
xor
pop
into
pop
inc
jno
mov
and
mov
sar
fcompl
inc
scas
pop
mov
lcall
xor
sub
cmpps
mov
inc
lret
and
mov
sarl
ret
daa
loope
mov
aaa
cld
mov
ud2
mov
lds
push
loop
aas
cltd
stos
sub
push
aad
jne
test
imul
pop
xchg
out
mov
xchg
or
push
fcmovnu
add
lods
repz
mov
xlat
lock
or
and
js
ss
push
into
pop
out
fcoms
mov
test
push
jmp
ret
lea
push
push
or
lcall
xchg
icebp
aam
jge
jae
mov
push
pop
mov
xor
xchg
sahf
cld
ss
sti
insl
sbb
inc
pop
mov
inc
mov
jp
cltd
mov
pop
pop
sub
inc
outsw
lods
aaa
and
fs
pusha
xor
fwait
inc
loop
or
dec
jge
and
insb
fwait
jp,pt
shll
mov
or
pop
push
mov
stc
xchg
outsl
pop
pusha
push
repz
ret
mov
mov
hlt
cmpsb
pop
bound
fstpt
les
push
xor
pop
mov
xchg
rorb
cltd
jbe
nop
mov
dec
stc
mov
repnz
fs
dec
and
mov
mov
add
push
adc
sahf
mov
repnz
jp
out
jmp
movntps
into
sbb
in
sbb
jne
sahf
jbe
mov
and
xor
leave
into
repnz
stc
call
leave
test
sbb
push
push
inc
push
ret
inc
jecxz
cli
in
inc
push
adc
je
mov
fbld
daa
jg
xlat
and
or
pushf
jg
sub
clc
loopne
shrb
movsb
loop
inc
xchg
lock
mov
and
scas
cltd
mov
sahf
popf
aad
mov
lods
ljmp
std
lcall
sub
dec
hlt
jle
pop
in
pop
lods
stos
mov
lods
shlb
mov
cmc
add
cmp
ss
push
in
ja
daa
es
fwait
dec
mov
mov
jne
lods
add
mov
and
cli
jae
jb
pop
sub
pop
dec
addb
aas
subl
jg
loopne
sti
add
popa
or
lcall
mov
push
jmp
sub
adc
mov
jnp
jno
lods
aam
inc
xchg
mov
cmc
aam
mov
adc
sbb
jmp
sub
mov
sub
add
cmp
insl
pop
fdivrs
xor
fsubrs
inc
mov
movsb
mov
imul
loop
shr
lods
inc
cs
scas
mov
or
les
xor
int
jne
inc
jl
jb
fdivs
mov
push
xchg
fwait
sub
rcrb
rcrb
sti
call
and
sub
ret
push
cmpsl
test
fsubp
dec
jp
aam
cmp
sbb
pop
mov
push
incb
pushf
rorl
xor
or
iret
inc
push
imull
dec
daa
xor
lock
dec
pushf
mov
shl
jmp
adc
mov
lcall
sahf
dec
jle
add
add
xor
sahf
outsb
mov
adc
fistpl
jmp
fisttpl
mov
push
fisttps
mov
nop
js
adc
xchg
jp
ret
adc
pop
inc
xchg
jno
mov
xor
scas
push
lods
and
cmp
cli
js
mov
rcl
fs
lcall
pop
mov
out
popf
push
add
sub
xlat
aaa
sarl
sub
je
les
dec
jns
pop
addr16
repz
and
sti
cld
cli
add
xchg
jge
and
mov
pop
add
sbb
push
cmpsl
push
add
sbb
push
jns
cltd
cmc
enter
ljmp
fwait
in
cwtl
cmc
dec
out
cmp
repnz
mov
js
push
jb
push
shl
pop
sbb
push
pop
jge
je
sbb
push
jge
lds
mov
push
adc
jnp
push
lahf
out
xchg
xchg
shl
aaa
sub
dec
fs
lds
fdiv
mov
jno
cmp
push
in
loop
lahf
cmp
das
andl
push
enter
cmpsl
xor
fistpl
cmp
xor
sub
pop
out
xor
jmp
fmull
dec
test
lods
adc
push
xchg
xchg
jb
test
addb
xchg
lret
add
mov
mull
sbb
or
lds
movsb
rorb
jmp
jl
lea
mov
adc
mov
fnstcw
fdiv
into
dec
mov
push
int
jbe
dec
mov
cmpsb
and
mov
sar
mov
inc
ljmp
ror
ds
mov
mov
sahf
sbb
shl
nop
subl
cmp
mov
dec
repz
push
imul
adc
push
cmc
jge
pop
add
or
test
cmp
inc
inc
xchg
stc
adc
test
xchg
jmp
fistpll
cmpsb
gs
mov
int3
xchg
jg
in
leave
mov
pop
or
xor
fistpl
adc
data16
jnp
shl
mov
stos
jo
int
fidivrl
repz
stos
pop
imul
cmp
andb
imul
mov
mov
and
or
mov
xchg
mov
cwtl
nop
popf
jp
loopne
insl
xor
jp
jne
jns
stos
aam
dec
lods
xor
adc
mov
outsl
shl
aad
xchg
pop
and
jge
outsb
add
shrl
inc
or
push
mov
dec
loope
inc
rcrl
xor
pop
call
aad
loopne
loopne
or
mov
xor
subb
jmp
jmp
sahf
xchg
gs
enter
mov
jo
jne
mov
xor
pop
sbb
xor
or
rcll
cmp
in
pop
addr16
test
imul
xchg
lcall
movsb
adc
cmp
mov
mov
lods
clc
pop
cltd
popa
lret
push
clc
arpl
shl
cmp
loop
test
push
pop
cwtl
decl
cmpsl
mov
call
aaa
popf
neg
out
or
out
push
call
adc
test
pop
popf
push
dec
push
mov
or
stc
and
mov
xor
dec
lock
scas
in
test
jge
xor
mov
lock
insl
jns
add
xchg
sub
das
aam
shrb
scas
notb
push
lds
push
inc
or
jne
inc
mov
push
inc
mov
hlt
cli
repnz
cmp
pop
js
out
ret
mov
dec
inc
test
clc
cwtl
fcmovnu
stos
ja
push
push
xor
aad
lret
mov
push
pop
sbb
sub
jl
inc
fwait
adc
lret
rol
cmpsb
or
push
rolb
dec
test
jmp
jecxz
sarl
lock
sbbb
shlb
add
jge
stos
popf
lock
dec
bound
nop
ljmp
add
adc
arpl
jp
test
dec
ds
sub
stc
sub
xchg
adc
insl
or
adc
mov
mov
movsb
pop
and
test
dec
int
shlb
sbb
lods
mov
mov
repnz
pop
rorl
nop
sub
popf
insb
pop
and
cli
pop
cmpsb
push
shr
cmpsl
mov
nop
sub
movsl
xchg
add
jl
or
fldt
or
insl
or
push
jns
cmpsl
fadds
sub
or
sahf
xor
repnz
mov
mov
pop
jns
xchg
jbe
xor
imul
adc
mov
jno
jecxz
jae
arpl
push
sarl
mov
push
mov
xor
insl
imull
dec
das
ds
daa
aad
push
popa
into
pusha
loop
push
mov
push
fcmovbe
cmp
push
cmc
subl
add
fnstcw
les
push
add
pop
push
adc
add
xchg
pop
xchg
mov
addr16
les
scas
je
jne
cmp
cmp
xor
out
rcr
jno
ret
hlt
pop
push
mov
pushf
lock
xchg
je
adc
add
cwtl
addb
push
sub
shrl
ss
sub
adc
inc
rorb
idivl
lods
pop
stos
arpl
jo
clc
or
pop
shl
dec
arpl
mov
in
out
mov
daa
test
cmpsb
gs
mov
dec
xor
mov
jmp
cmpsb
mov
and
adc
js
xchg
out
js
pop
sarb
mov
mov
sti
daa
fcmovb
fs
sub
xor
shll
idivb
push
jp
fstl
xor
fcomps
mov
out
mov
in
call
xor
or
aas
shll
jl
outsl
or
lods
jno
or
inc
out
cmpsl
mov
mov
sahf
add
outsl
and
loope
jne
sahf
icebp
jo
sti
and
or
outsb
sub
push
cmp
insl
pop
mov
insl
jnp
into
xor
mov
mov
js
jno
rcl
pop
fwait
xor
cmp
mov
out
jle
addr16
fstpt
fsubs
outsl
inc
int
xchg
nop
lahf
mov
adc
std
inc
xchg
fdivr
lds
test
mov
lock
shlb
mov
xchg
mov
dec
or
push
mov
aam
add
bound
push
xor
pop
mov
cmp
push
dec
out
scas
sbb
push
xchg
adc
cmc
sub
xor
and
in
and
push
lcall
dec
cmp
dec
or
fwait
dec
ret
xor
ja
cli
sbb
enter
mov
pop
stc
dec
dec
js
add
lods
int
xchg
push
pop
or
sbb
sub
xchg
jno
dec
out
das
mov
pop
xchg
push
arpl
inc
les
leave
ret
adc
aas
dec
push
fiaddl
add
add
mov
popf
je
aam
push
mov
cld
push
mov
sub
xor
lcall
or
pop
sub
fimuls
push
imul
pop
pop
data16
bound
cwtl
fs
nop
lcall
in
jo
jge
inc
cmpsl
push
and
cmc
iret
js
in
das
sbb
std
xor
je
xor
out
outsb
push
mov
in
mov
shlb
into
outsl
mov
jo
mov
mov
test
mov
mov
pop
push
pop
or
dec
aaa
stos
arpl
test
ror
xchg
lahf
cmp
popa
or
or
sti
pop
das
inc
in
push
in
sub
mov
pusha
sub
hlt
cld
data16
in
bound
orb
insb
loope
mov
push
pop
and
aam
dec
jns,pt
addr16
jp
div
fcmovu
dec
mov
popw
sbb
push
mov
call
sub
aad
inc
aaa
mov
mov
in
out
mov
out
lahf
or
inc
std
andl
push
in
jmp
or
sbb
dec
shlb
es
into
adc
mov
cmpl
sarb
icebp
xchg
fstpt
rol
cltd
sub
test
mov
lret
dec
sbb
movsl
mov
or
inc
in
fnstenv
int
in
dec
in
dec
push
clc
inc
mov
orb
xchg
mov
push
div
xor
fisubrs
aaa
mov
pop
push
test
xor
fcomi
decl
in
push
mov
and
xor
add
sbb
jo
and
jmp
mov
shll
sahf
pushl
dec
or
fsubp
adc
xor
or
mov
shlb
dec
pop
pop
inc
in
insb
ficoms
sub
jp
rol
xchg
scas
jnp
mov
xchg
sbb
imul
or
adc
dec
jge
in
xchg
or
xor
adcl
jo
xchg
inc
pusha
dec
les
pop
lock
sbb
dec
jecxz
mov
popf
adc
out
dec
sysret
jbe
and
bound
mov
lock
rcrb
dec
push
add
push
xchg
sbb
out
pop
push
pop
test
push
mov
int
movl
lret
in
gs
jg
add
xchg
aam
shrl
testl
les
push
pop
loopne
hlt
fxtract
xor
jnp
mov
jbe
mov
pushf
cmp
sbb
mov
data16
dec
fisttpll
jge
out
rclb
cmp
inc
outsb
sahf
sub
and
sbb
test
in
add
cmp
xchg
mov
push
jnp
dec
and
cltd
sub
push
mov
loopne
stos
pop
dec
inc
jge
jg
fstp
jmp
arpl
into
mov
pop
sub
lret
adc
push
popa
xchg
jg
je
mov
shll
push
mov
scas
push
mov
sbb
pusha
incl
test
sub
push
mov
stc
in
mov
pop
lods
cli
cmp
jb
sub
ficoml
pusha
jle
stc
mov
push
cltd
sub
push
lods
pop
fisubl
mov
jecxz
xor
cmp
cmp
jnp
xchg
dec
sbb
dec
mov
push
sub
stos
imul
pushf
adc
pop
push
mov
sbb
mov
shrd
ja
mov
call
rcrb
pusha
add
mov
pop
and
cli
sub
mov
addl
or
loopne
addr16
adc
sbb
ds
es
push
bound
adc
push
pop
mov
imul
adc
adc
or
mulb
stc
orl
loope
xchg
bound
push
in
movl
iret
lcall
call
lods
jecxz
pop
in
cmp
int3
hlt
inc
jg
jno
and
insb
sbb
sub
xor
xor
pop
xchg
mov
cwtl
jnp
aas
ffree
dec
pop
inc
inc
nop
sub
add
repnz
inc
adc
xchg
push
shrl
fdivrl
ret
outsl
jp
lods
lods
mov
push
add
fiadds
sti
jmp
mov
in
mov
lea
dec
add
mov
cli
fs
xlat
stc
rorl
and
inc
pop
pop
mov
pusha
scas
jp
rorl
cmc
in
data16
cwtl
fwait
sbb
cmpsl
data16
adcb
jo
jecxz
hlt
out
mov
rorl
clc
jb
stos
cmpsb
mov
xor
icebp
ret
aas
test
insl
sti
pop
movsb
testl
jnp
cltd
mov
stos
mov
sbbl
dec
lds
jmp
pop
dec
shlb
movsl
inc
mov
xchg
aas
movsb
jmp
insb
fs
fsubl
outsl
or
and
lock
xor
movsl
inc
xchg
mov
mov
push
sub
punpckhwd
jge
test
filds
push
sahf
push
dec
adc
add
leave
xor
ss
or
pop
int3
icebp
dec
mov
dec
nop
aas
xchg
xor
sbb
cmc
leave
add
xor
call
testb
loop
out
int
fidivrs
inc
pop
aaa
out
js,pn
sub
mov
add
movsb
pop
fmull
fisttpl
push
sysenter
call
cmp
repnz
out
xor
sub
ret
xor
jae
adc
pop
adc
adc
pop
xchg
push
pop
fstpl
push
and
sbb
dec
cmp
lcall
test
lds
idivb
jb
inc
push
aas
inc
jbe
cmp
in
mov
add
jl
lods
and
std
mov
testl
sub
or
push
pop
xor
push
cmpsl
xor
cs
add
pop
push
pop
mov
imul
lahf
imul
or
inc
icebp
inc
and
insb
sbb
xchg
enter
mov
add
adc
sbb
adc
mov
pushf
jae
push
stos
fisubl
xor
xor
inc
push
push
push
push
lods
inc
setle
mov
mov
xchg
pop
mov
xchg
inc
dec
mov
fwait
lcall
sub
fldl
mov
push
dec
push
cmp
adc
fstps
xchg
int
fwait
leave
dec
inc
or
inc
xor
pushf
ljmp
mov
outsb
sti
loope
push
and
loopne
gs
sub
add
fstl
lgs
jns
jne
iret
ret
mov
sbb
push
in
cmp
enter
jmp
cs
push
push
jg
jecxz
dec
imul
leave
mov
cmp
jne
sbb
add
cmp
pop
xchg
dec
cltd
mov
test
adc
cmp
addr16
xor
mov
mov
push
jbe
or
test
and
inc
adc
jno
stos
data16
das
stos
cli
mov
stc
inc
ret
mov
cwtl
pop
push
or
fistl
stos
jnp
popa
popf
loopne
dec
iret
int3
loope
fsubs
arpl
push
fcomip
pop
fsubs
rcr
aad
jl
sub
xor
cmpsb
cmp
xor
mov
inc
dec
xchg
xor
jp
pop
clc
jmp
mov
fwait
or
add
inc
js
loopne
and
xchg
jge
mov
push
ljmp
or
repz
sub
aaa
push
pop
pop
gs
sbb
push
xchg
push
shlb
dec
lcall
sarb
hlt
sarl
shll
inc
mov
dec
and
std
jns
hlt
sbb
inc
inc
icebp
adc
hlt
sub
pop
icebp
fbstp
insb
mov
es
cmp
call
das
ja
jbe
xor
xlat
pop
iret
mov
sbb
mov
push
jle
mov
adc
mov
push
push
pop
aaa
push
sub
cmp
xchg
in
dec
imul
mov
inc
test
push
stc
mov
mov
out
mov
nop
mov
rcrl
icebp
lea
mov
test
roll
push
int
outsb
stos
fnstenv
pop
jbe
xor
aas
or
or
mov
xor
hlt
mov
fmull
leave
cli
scas
fwait
push
ficoms
mov
stos
fwait
hlt
mov
xchg
lahf
ret
xor
xchg
popf
mov
pushf
scas
lods
adc
es
add
mov
std
sub
in
cli
ret
lods
aam
mov
xor
sbb
cmp
fisttpll
mov
repz
jno
mov
adc
rclb
pushf
mov
push
out
daa
mov
daa
xor
lds
or
movsl
xor
xchg
pop
pop
ds
mov
xchg
out
push
je
push
dec
je
mov
fcomp
jbe
or
in
rcrb
lcall
pop
fs
mov
and
xchg
jns
nop
outsb
sub
xchg
outsl
subl
aad
fadds
mov
pop
mov
push
mov
mov
rcl
or
lcall
push
in
dec
push
cltd
pop
push
ja
adc
les
std
mov
or
addr16
sbb
lods
dec
js
xor
test
stos
lods
lret
out
xchg
out
jmp
or
lds
ret
cld
pusha
lods
xchg
sbb
repnz
adc
sub
pop
ret
movsb
inc
push
stc
pop
cli
push
fs
jo
aam
lret
or
xlat
mov
data16
cmp
or
dec
int3
xchg
cmp
add
or
popa
mov
repz
sbbl
cltd
xchg
ret
fadds
stos
adc
cld
aad
jge
imull
dec
ja
mov
int3
stc
shl
pop
fdivrs
movsb
adc
dec
sub
mov
add
or
je
mov
andb
mov
xchg
mov
fsubrl
mov
xchg
xor
add
push
fisttpll
stos
or
adc
pop
add
subl
jp
fildll
sahf
push
push
mov
push
enter
iret
mov
sub
lahf
mov
scas
gs
enter
cmp
cwtl
jmp
outsb
add
hlt
call
add
inc
pop
jmp
daa
test
shl
cmp
sub
popf
sbb
sahf
push
and
jmp
cmp
mov
xchg
push
mov
test
push
xor
push
test
push
test
cmpsl
xor
fsubl
in
add
in
jbe
inc
xor
cli
mov
and
imul
pop
imul
add
out
xchg
shll
adc
aas
pop
push
ret
icebp
mov
outsl
and
adc
sbb
mov
ret
aam
mov
push
inc
jp
jmp
mov
pop
xchg
sbb
sub
fldl
rcrl
pusha
cmp
fdivs
lods
xchg
dec
scas
add
popa
hlt
cmp
xor
das
sbb
add
repnz
mov
and
addr16
xchg
filds
ja
fistpll
jecxz
insb
mov
fwait
push
inc
mov
lock
dec
xor
or
out
aas
in
in
scas
push
mov
cmpl
adc
xchg
sbb
pop
outsl
aaa
clc
sub
xchg
or
jmp
mov
sti
jmp
rorb
add
cmp
pop
xor
push
sbb
sbb
add
inc
nop
fcoms
push
sub
mov
mov
mov
jle
jl
fldenv
jg
xchg
jecxz
inc
pop
shrb
and
notb
add
outsl
sarb
push
pusha
xor
sbb
icebp
xchg
mov
inc
mov
push
mov
lahf
into
into
dec
sub
int3
jecxz
cmp
inc
pop
jo
imull
repnz
sub
mov
jmp
lea
test
mov
test
push
pop
mov
mov
mov
rep
xor
xchg
or
int
mov
mov
and
mov
ret
lret
loope
mov
xchg
xchg
xchg
mov
not
jp
add
inc
push
call
sti
xchg
clc
xor
gs
lods
repnz
lahf
pop
xor
inc
aas
dec
das
movsl
not
dec
mov
xchg
mov
jecxz
out
cltd
incb
pop
aaa
test
or
jmp
inc
popa
jmp
fs
aam
add
mov
mov
adc
enter
por
incl
aam
mov
sbb
pop
int3
dec
jg
xchg
push
mov
inc
je
pop
xor
movsb
sbb
ljmp
mov
jne
scas
mov
mov
mov
sti
aaa
push
cwtl
xchg
cwtl
mov
sbb
pop
ds
pop
jnp
cmp
adc
push
mov
out
addr16
lods
mov
mov
repnz
jo
cmp
pop
sub
pop
loope
icebp
adc
es
hlt
mov
aam
pop
cmp
sbb
leave
js
shrb
xorb
or
orl
xor
lock
data16
cmpsl
xor
mov
xor
mov
loope
ljmp
outsl
push
movl
jne
rclb
cmpsl
adc
or
add
ja
jge
lea
mov
jg
andl
push
push
loop
out
push
dec
testb
data16
icebp
sbbb
sbb
adc
mov
les
jmp
into
push
ljmp
sub
test
fcomps
outsl
outsb
fnsave
cwtl
das
movsb
cmp
jns
fmul
fidivl
out
inc
aas
in
dec
icebp
cwtl
addr16
add
aad
lcall
or
rcll
outsb
mov
aas
and
or
in
jnp
add
in
xlat
std
into
push
dec
mov
and
callw
sahf
pop
cmc
sbb
jno
stc
push
sbb
sbb
add
shl
add
and
jnp
int
xchg
xor
pop
cmc
sti
jp
int
sbbl
ret
inc
push
cmpsb
into
test
mov
mov
xorb
jnp
daa
xchg
cmc
das
int
dec
sbb
xlat
sbb
jmp
popa
rcrl
inc
in
enter
cmp
stos
push
bound
mov
loope
pop
data16
shrl
mov
sbb
push
pop
pop
decl
cmpsl
outsb
outsb
movsl
inc
jecxz
mov
push
nop
rcll
sti
clc
cmc
sbb
cs
insb
stos
cwtl
sub
jge
jecxz
xor
das
hlt
inc
in
xchg
cmp
fcoms
test
xor
xor
jmp
xchg
cmp
or
stos
push
or
and
push
jmp
test
xchg
xchg
fiadds
mov
adc
jo
aas
jle
in
push
movsb
pushf
jno
push
push
pop
insl
dec
mov
lods
out
sti
dec
mov
dec
push
jl
in
lock
dec
push
add
sbb
mov
pop
add
iret
pop
inc
popa
in
in
xchg
mov
aad
js
cwtl
push
rorl
xchg
xchg
mov
mov
mov
dec
jmp
inc
test
xor
jne
aas
sub
leave
jno
imul
cli
stos
fldcw
inc
into
out
out
push
pop
repnz
pop
cmp
sub
pop
dec
in
pushf
lret
sub
sbb
stos
jo
loopne
mov
lock
add
cmp
sbb
out
lret
xchg
sbb
test
in
mov
add
jg
sub
cltd
loopne
inc
repz
jecxz
jns
iret
mov
loopne
push
cmp
mov
add
cld
movsb
jo
jl
add
push
in
bound
jge
rorl
and
lret
pop
fnstsw
pop
ret
leave
insb
std
mov
movsb
and
jbe
adc
pop
fsubrl
mov
jo
orb
repz
lock
test
ret
shr
mov
andb
nop
test
add
cli
and
adc
clc
js
rorl
daa
movsb
pop
icebp
ret
into
mov
mov
jmp
les
arpl
out
xchg
jb
pop
mov
test
arpl
lods
cmc
pop
mov
js
xor
or
lock
mov
fidivrs
sbb
adc
xor
fistps
xor
mov
outsl
sub
or
arpl
mov
push
mov
mov
rolb
popl
hlt
lahf
xchg
or
xchg
mov
add
mov
nop
jne
inc
insb
or
outsb
insb
std
pop
jmp
fldt
jne
xor
push
inc
mov
pop
fwait
inc
add
pop
xchg
roll
sarl
into
loope
jp
pop
add
or
inc
pushf
fs
rorl
fsubrs
pop
popa
hlt
mov
mov
add
ljmp
cwtl
adc
jbe
pop
xchg
mov
pop
jle
mov
lock
inc
pop
jo
mov
pushf
enter
cmpsb
mov
in
aas
into
add
sub
jno
ljmp
pop
pushf
cld
loopne
mov
xchg
jecxz
daa
mov
mov
pop
and
fdivs
mov
nop
sub
cmc
sbb
lahf
mov
sbb
mov
push
mov
mov
out
nop
cmp
xlat
inc
inc
xchg
ja
sbb
pop
sbb
loopne
outsl
shl
push
movsb
das
mov
xor
push
sub
mov
aaa
sub
adc
cmp
lahf
leave
fdivrp
popf
push
test
push
scas
outsl
sbb
test
inc
lcall
cltd
jg
pop
jne
iret
mov
jmp
mov
rcll
mov
outsb
sbb
xor
aad
mov
shr
fadds
or
pop
aam
leave
cli
jb
jnp
int3
push
jle
mov
sbb
xor
daa
push
cli
cmp
inc
mov
push
inc
or
or
fs
push
mov
sti
xchg
sub
ja
add
ret
in
adc
lret
mov
xor
ficoml
sub
push
ret
shl
jns
inc
mov
mov
mov
shll
inc
inc
mov
fs
cs
pop
aad
inc
push
push
mov
jecxz
test
ss
inc
sub
dec
mov
or
lods
mov
es
scas
adc
dec
lea
sbb
adc
ja
nop
mov
lds
lods
addr16
cmpsb
cmp
jmp
popf
push
mov
shlb
sub
cs
das
aaa
ljmp
jmp
push
jg
mov
loopne
fmuls
test
cmc
adc
stos
es
into
or
add
jbe
int3
adc
sub
pop
arpl
shlb
xlat
or
mov
ret
sbb
sbb
sahf
xchg
sbb
mov
je
outsb
daa
and
andb
cmp
int3
xchg
push
incl
pop
add
inc
lods
out
mov
mov
xchg
adc
sbb
add
ja
ljmp
lock
movsl
cmp
sub
adcl
xor
mov
push
rcrl
cltd
flds
loop
fiaddl
rorb
repnz
dec
sbb
mov
add
vpaddusb
arpl
jp
push
jp
xor
aas
inc
daa
adcb
xchg
insb
xor
push
push
inc
rcl
fdivl
push
pop
mov
sti
loope
xor
int3
in
ja
pop
pop
lea
dec
shll
cmpsb
inc
jg
bound
mov
sti
sbb
jp
add
sub
push
mov
sarl
mov
outsl
push
aaa
icebp
imul
cwtl
lahf
xchg
popa
cmp
xlat
xor
mov
pop
mov
and
mov
inc
sub
cltd
int
lret
lcall
aam
jg
std
aas
daa
mov
addr16
cmpsl
mov
mov
jb
testb
mov
int
pop
push
outsb
or
hlt
dec
cltd
into
jecxz
jno
sub
lock
push
out
adc
std
jmp
sub
mov
ja
inc
pop
test
imul
out
loop
adc
hlt
xlat
push
pop
and
add
jnp
pusha
cmc
and
aad
fs
js
pop
cmp
repnz
sbb
cwtl
shrb
xchg
scas
xchg
je
test
mov
pop
insb
icebp
fsubp
pop
add
xor
ljmp
sub
add
and
je
pop
mov
shll
or
adc
inc
mov
push
out
push
bound
or
mov
dec
lods
inc
push
push
and
inc
xchg
jge
jne
bound
adc
jne
xor
mov
fcmovnu
sarl
lods
xchg
inc
push
sub
rclb
aaa
in
shl
shr
in
push
add
int
inc
add
cwtl
arpl
adcb
mov
add
incb
test
roll
faddp
aaa
das
mov
gs
pop
pop
mov
mov
or
xlat
mov
sub
aaa
ja
adc
jmp
sub
stc
pop
inc
fsts
rclb
mov
faddl
adc
pusha
pop
adc
push
les
xchg
sti
pop
fisttpl
or
lret
addr16
addr16
jecxz
jb
cli
test
adc
icebp
hlt
push
add
jno
sbb
mov
jle
mov
add
int
adc
mov
out
aas
jg
and
pop
jl
xorl
rcrl
test
or
inc
sub
add
xor
jecxz
popa
test
stc
xchg
repnz
outsb
push
sbb
sub
jg
xor
add
cmpsb
jmp
je
lahf
sahf
enter
in
push
les
xor
mov
mov
mov
mov
int
xor
jle
xor
fwait
ja
sub
stc
and
xchg
dec
adc
stos
jecxz
and
xor
jae
jecxz
xchg
pushf
imul
mov
lods
and
dec
and
fcmovne
sbb
movsb
and
or
pushf
sub
popf
in
jl
jno
nop
enter
cmp
push
out
mov
mov
mov
idivb
sbb
lock
jl
fbstp
push
arpl
adc
sbbb
dec
mov
popf
jns
in
add
dec
test
cmp
lds
lcall
lods
xchg
icebp
leave
test
pusha
out
sbb
push
push
xor
sub
xchg
ret
lods
dec
test
nop
mov
cwtl
ljmp
clc
inc
fcoms
xchg
pop
jno
pop
mov
jecxz
mov
xor
call
fnstsw
pop
jg
xor
rorb
jecxz
clc
push
cld
sbb
cmpsb
and
mov
sti
aaa
xor
loope
mov
jmp
xchg
jno
aas
or
mov
pusha
dec
stos
jns
into
dec
sub
cmpsl
mov
dec
pop
sbb
cmc
int
sub
add
popl
cmp
stc
mov
add
push
push
sahf
shl
mov
mov
jae
sub
sbb
inc
add
jbe
adc
rcr
push
dec
mov
int3
dec
mov
pop
jg
xor
loope
inc
stos
adc
xchg
ret
adc
aam
call
pushf
xor
cmc
sbbb
lcall
sub
clc
cmp
icebp
sbb
movsb
out
es
mov
insl
test
cmc
mov
ja
lahf
clc
xor
add
test
lea
cmp
xlat
je
or
mov
inc
cwtl
sub
lret
push
mov
imul
fs
dec
test
cld
divl
inc
sbb
pop
cmc
pusha
jns
mov
fidivrl
inc
lds
fists
xor
cwtl
idiv
into
push
adc
dec
push
sti
mov
cmp
pop
daa
or
mov
lock
xchg
lret
fcoml
mov
fs
jl
mov
cmp
cmp
ss
sbb
mov
cld
pusha
adc
daa
inc
shlb
push
andl
xchg
xchg
sti
xchg
sbbl
and
orl
out
pop
pop
mov
movsb
push
pusha
add
int3
adc
daa
cli
je
mov
js
aad
xor
imul
inc
cmp
lods
iret
in
xor
push
add
inc
jne
inc
adc
shl
popf
loop
into
mov
mov
cmpsl
mov
loopne
lds
test
xor
ret
xor
cli
cwtl
movsb
mov
add
scas
addl
xor
addl
cmpsl
push
mov
pop
repnz
cmp
hlt
loope
adc
cld
cwtl
add
in
orl
ss
insb
sbb
cmp
fnstsw
fnstcw
ljmp
aas
testb
mov
mov
and
or
inc
sbb
push
and
rol
xchg
repnz
icebp
popa
test
pop
mov
jno
jecxz,pt
mov
sbb
andb
aad
and
aaa
mov
out
cmp
fs
scas
test
test
movl
mov
xor
sub
shr
and
int
mov
xchg
ret
jo
loope
test
js
sahf
lahf
adc
ljmp
xchg
add
sbb
dec
xor
lods
fiadds
lret
dec
or
call
les
repz
pushf
sbb
add
notb
pop
xor
pop
cmp
test
inc
les
loope
dec
mov
inc
add
jbe
jo
mov
mov
xor
jp
push
movsb
adc
mov
dec
js
scas
rol
and
data16
das
ret
xor
repz
add
pop
je
push
push
stc
adc
out
push
stos
xor
adc
jg
mov
dec
add
imul
cld
repz
cli
mov
push
and
xchg
das
sbb
clc
out
sbb
test
xchg
sub
xchg
xchg
cs
jge
pushf
add
push
jnp
xor
mov
rcl
fcomip
daa
add
outsb
cmp
lock
xchg
rcrb
cli
data16
dec
push
mov
iret
push
sahf
jae
orl
fwait
mov
xchg
push
push
mov
loop
ja
std
pop
pop
inc
scas
fdivp
stos
inc
mov
push
push
sbb
pop
pop
xchg
sbb
xchg
cli
jae
shrb
les
adc
stos
mov
adcl
ljmp
test
int3
jp
stos
or
and
pop
jmp
in
rcrb
xor
and
jb
xchg
repz
iret
and
sbb
xchg
push
cli
rcl
call
outsb
dec
sbb
xor
out
push
jne
stos
fimuls
flds
out
mov
mov
rol
test
xor
call
sub
and
bnd
pop
lods
xchg
aam
mov
jb
ret
jns
push
lret
push
rcll
call
dec
mov
movsl
sbb
lret
inc
push
lcall
movsl
adc
in
adc
xchg
adc
dec
adc
mov
and
adc
mov
xor
mov
dec
stos
fcom
push
in
inc
insl
testl
insb
inc
in
inc
adcb
xorl
xchg
adc
lret
into
inc
out
cwtl
in
enter
and
fdivrs
dec
icebp
mov
xchg
inc
mov
push
mov
pop
inc
push
adc
cmp
xchg
xchg
jnp
dec
rolb
jae
sub
mov
sti
ficoms
mov
and
mov
ljmp
outsb
adc
or
lea
add
ljmp
repnz
mov
push
fs
cltd
sub
add
push
mov
pop
shrb
popl
aad
inc
in
rcrl
clc
adc
cmpsb
in
rclb
sbb
stos
shll
shrl
in
data16
out
mov
arpl
fnstenv
ficompl
and
ja
cmp
pop
lcall
mov
jns
outsb
xchg
sbb
in
icebp
xlat
jb
into
leave
xlat
cmpsl
scas
sub
mov
movsl
xchg
std
add
jbe
sbb
into
lea
pop
dec
hlt
incb
or
mov
jb,pn
cmp
xchg
into
cmp
pop
lahf
inc
popf
mov
repz
es
jmp
push
cmc
sti
or
and
sub
inc
and
adc
push
mov
stos
scas
jb
jmp
rcl
lods
cli
iret
cs
call
pop
sub
pushf
cmp
jge
dec
sbb
pop
aam
jg
aad
push
cmp
and
lods
sbb
test
sub
mov
push
inc
call
push
push
fbstp
mov
mov
pop
sti
or
popf
jns
pop
ds
dec
subb
loop
sub
adcb
test
sahf
aad
mov
idivb
sbb
pop
sub
out
and
into
cmp
repnz
stos
les
inc
ljmp
ret
in
jge
movsl
push
push
xor
stos
jnp
fbld
or
inc
inc
bound
test
pop
sub
into
sub
xchg
jp
dec
mov
jmp
das
dec
out
cli
iret
xchg
xchg
jno
jecxz
dec
ds
pop
dec
xchg
enter
jne
push
sbb
mov
bound
js
lahf
pop
mov
rorb
loop
cmp
adc
lahf
pop
clc
pop
loope
mov
gs
and
out
clc
jns
daa
or
cmc
sbb
push
notl
inc
mov
mov
es
testl
mov
dec
icebp
push
pop
sbb
dec
xlat
pop
cmp
xchg
push
je
andb
movsb
out
xchg
sbb
adc
ret
push
stos
test
fnsave
rorl
lret
mov
int
pushf
add
mov
icebp
push
jns
outsl
or
cli
xor
fs
out
lcall
out
fcmovne
popa
in
stos
pop
sbb
decl
pop
lds
flds
mov
mov
cmpsb
sti
aam
xchg
mov
xor
pop
loopne
stos
add
test
inc
iret
popf
jno
cmp
and
mov
push
dec
jg
fstps
mov
and
xor
in
cmpsl
iret
orb
and
mov
fwait
pop
pushf
icebp
mov
and
popa
hlt
les
xor
pop
mov
sahf
add
iret
test
pop
mov
xchg
mov
sbb
js
lret
dec
cs
fsub
xchg
jae
mov
sbb
and
call
ss
jge
adc
jge
lods
or
xor
xor
jne
ds
jno
jmp
sbb
les
sbb
pop
push
pop
repnz
orb
ret
repnz
jg
mov
sub
lock
cmpb
arpl
ret
pop
in
xor
xor
rol
adcb
xchg
xor
repnz
rcr
mov
sti
or
or
add
push
push
push
mov
mov
xor
daa
fwait
xchg
outsl
movsb
adc
and
add
push
xor
stos
add
out
inc
pop
icebp
mov
and
push
das
pop
adc
xchg
jb
xchg
js
mov
test
sbb
loopne
jp
dec
cmp
push
xchg
fisttps
and
das
pop
lea
xor
dec
cmp
and
dec
aad
data16
cmp
push
mov
mov
mov
add
and
dec
mov
dec
test
pop
out
xchg
mov
out
mov
sub
xor
stos
adc
enter
sub
xor
cld
andl
cmp
cmp
cli
xchg
aam
mov
adc
mov
push
add
sub
out
xchg
and
or
mov
jg
adc
xor
add
shlb
sub
pop
scas
mov
adc
lods
scas
ss
push
test
xlat
icebp
add
inc
pop
cld
jecxz
push
ss
xor
ja
pop
sbbl
fiadds
jmp
cmp
jl
push
add
ret
ljmp
inc
les
shlb
in
mov
sub
dec
ljmp
adc
or
in
sbbb
in
nop
ja
je
scas
mov
inc
mulb
mov
or
addr16
cmp
xor
xchg
in
or
mov
shrl
jne
mov
in
cmp
adc
ret
test
or
hlt
mov
jb
divl
or
into
push
sti
imul
mov
lahf
aad
outsl
cmpsl
jae
test
cld
lahf
test
adc
dec
sbb
add
mov
xchg
js
sub
pop
mov
enter
mov
dec
shl
mov
add
pop
shl
add
inc
inc
mov
jae
jns
ficoml
fndisi(8087
jl
lahf
repnz
popa
mov
out
jnp
xorb
decl
or
outsl
inc
or
jp
fcmovu
mov
outsb
or
adc
mov
jmp
ja
add
pop
cmpl
lock
adc
mov
nop
sbb
ret
inc
inc
and
subb
dec
popf
rcrl
je
stos
shrl
mov
mov
inc
repz
pop
jae
mov
pop
addr16
popa
mov
and
xchg
ds
mov
sub
mov
movsl
adc
stos
into
jb
dec
adc
sbb
and
sbb
push
pop
xor
inc
repz
xchg
loope
stos
adc
cmc
pop
out
xchg
test
mov
cli
mov
lds
pusha
mov
xor
or
jo
mov
repnz
cmp
fldenv
mov
push
add
mov
jns
jmp
frstor
stc
dec
addr16
cmpsl
sahf
jns
mov
arpl
push
mov
add
push
add
sti
mov
scas
cmpsl
lea
xchg
orb
jge
sbb
sub
cmp
adc
or
adc
imul
pop
fs
push
or
movsl
lea
idivl
dec
jp
pop
add
mov
adc
pop
xchg
inc
cmc
sbb
dec
add
es
push
into
push
fcmovbe
gs
xor
adc
mov
sub
icebp
mov
rorb
addb
or
call
pop
mov
in
inc
mov
in
fildll
push
cmp
add
jbe
mov
lods
sub
lods
xchg
adc
jno
sub
leave
cmp
pop
es
mov
pop
fbld
cld
dec
add
lods
sbb
pop
cmpl
pop
mov
jbe
jge
movl
dec
mov
not
push
jno
leave
sbb
sub
cld
and
repnz
or
jmp
push
cmp
mov
or
pop
add
jl
jle
jbe
jl,pn
cmp
ds
inc
imul
cmpsl
ss
or
jecxz
addr16
jnp
dec
hlt
dec
bound
inc
jg
imul
clc
std
lahf
sbb
push
rcr
stos
sbb
mov
cli
into
mov
inc
xchg
cmp
xchg
fucomp
pop
pop
jle
imull
pop
imul
iret
lret
inc
in
ret
mov
lret
js
daa
enter
scas
mov
lcall
adc
jns
sahf
stos
repnz
outsb
sub
iret
lcall
or
xor
es
into
cld
outsb
adc
movsb
mov
ja
clc
imul
pop
leave
add
incb
pop
lea
and
xchg
sar
mov
stos
out
xchg
into
scas
jle
ja
mov
repz
stos
fwait
or
cmpsb
add
adc
xrelease
lods
lods
loop
hlt
push
and
ja
xchg
scas
cmp
flds
push
mov
ja
mov
cmp
sub
mov
je
jne
enter
imul
sbbl
out
cltd
inc
push
mov
push
cmp
adc
add
xor
cwtl
test
mov
jnp
dec
adc
mov
adc
xor
out
or
test
cli
les
mov
clc
out
mov
cwtl
mov
out
test
repnz
adc
mov
mov
mov
mull
push
mov
xchg
jmp
shl
stos
fldcw
mov
sub
or
mov
cmpsl
dec
repz
movsb
dec
and
in
clc
sub
or
xlat
jg
bound
mov
mov
div
out
movsl
and
cs
xchg
loop
iret
jmp
iret
dec
or
cld
xchg
popf
js
push
js
mov
fdivrs
or
das
add
hlt
lods
cmp
dec
cld
repnz
imul
and
push
sub
xchg
mov
mov
inc
insl
ficomps
shrl
mov
fidivl
adc
ds
js
popf
scas
das
jecxz
test
mov
push
lock
cld
outsb
cmp
pop
mov
jns
inc
sbb
cmp
sbb
test
mov
mov
or
rcrb
xchg
fisubrl
or
aam
inc
inc
dec
loop
push
or
sub
inc
and
mov
divb
insl
ljmp
push
jno
cld
out
cld
leave
sahf
mov
outsb
out
mov
stos
lds
stos
imul
lods
xchg
fadds
shrl
rcrb
push
ja
hlt
adc
push
jg
dec
mov
cmp
or
lahf
movsb
push
jb
xor
mov
call
lods
sbb
push
out
inc
repnz
fisubs
dec
je
sub
sub
xchg
insb
inc
push
adc
lcall
add
out
jae
scas
mov
repnz
cmp
sbb
jno
and
pop
add
dec
xchg
xlat
dec
pop
loope
and
mov
push
mov
xor
imul
fdivs
test
js
adc
dec
test
mov
or
icebp
jno
mov
adc
adc
pop
mov
pop
mov
lret
inc
mov
or
mov
xor
xchg
fwait
clc
xchg
inc
sub
popa
test
jp
pop
cmpsb
in
fs
in
jnp
dec
ret
sbb
rclb
inc
pusha
js
lahf
and
mov
pop
fcoms
jbe
enter
daa
and
xchg
jns
push
and
or
adc
inc
lea
mov
cwtl
xchg
cmp
xchg
mov
xor
lret
repz
call
ljmp
inc
enter
clc
sbb
cld
jge
outsb
cwtl
mov
dec
insl
mov
dec
push
fxam
filds
cmp
call
aas
sbb
enter
jae
jbe
mov
mov
jecxz
data16
sbb
push
sarb
mov
aaa
test
xchg
jb
adc
cmp
test
mov
inc
add
sti
imul
or
jge
push
inc
mov
xchg
jne
sbb
cpuid
push
mov
pop
in
movsl
xchg
into
push
add
ss
adcb
pop
cmp
cld
xchg
repz
inc
mov
cmp
in
jl
jg
inc
call
mov
jp
push
movsb
jmp
ror
popl
adc
push
bound
cmpb
loopne
xchg
imull
cmp
ss
inc
pop
addr16
aas
mov
rcr
or
pop
test
inc
jl
fs
xor
adc
rorl
cmpsl
pop
leave
add
in
cwtl
mov
sahf
popf
mov
xor
mov
adc
inc
sub
pop
fcoms
loopne
xor
ljmp
cmp
out
aaa
push
cmp
enter
push
dec
in
xchg
cmp
cmc
pop
or
push
cltd
gs
push
jo
sub
dec
mov
sbb
adc
stos
mov
or
cmp
push
bound
inc
inc
cwtl
imul
fsubrp
sbb
or
inc
lods
les
je
dec
in
clc
push
imul
push
lret
ja
leave
pop
xchg
lds
test
pop
in
arpl
lock
and
adc
outsb
sbb
mov
pop
jmp
shl
push
stos
idivl
cmp
shrl
cs
arpl
roll
dec
sbb
lods
mov
add
jne
pushf
jmp
dec
jge
imul
cmpsl
rep
jg
mov
inc
push
roll
inc
aas
jo
jb
idivb
inc
arpl
lock
jo
pop
sbb
fnstenv
mov
pushl
cs
test
into
ss
jnp
jmp
stos
ja
or
mov
adc
mov
add
cmp
xor
scas
lret
mov
sbb
mov
mov
xchg
mov
pop
add
or
xor
ljmp
push
std
sub
cmp
jmp
lahf
sub
arpl
loopne
push
push
add
loope
adc
test
outsl
fistpl
imul
cmpsl
jl
frstor
mov
notl
dec
test
or
xchg
cltd
lret
dec
mov
or
shrb
fcom
push
out
sahf
cmp
sahf
cmp
das
in
dec
mov
jno
mov
aaa
or
add
out
cld
mov
cmpsb
insl
pop
mov
lret
xor
fmulp
pusha
adc
repz
mov
sub
testb
add
or
inc
inc
pushl
ds
add
test
mov
jl
aas
imul
dec
popf
add
push
xlat
cmpsb
jb
jge
adc
push
inc
andb
adc
je
repz
xor
sarb
push
inc
lret
mov
clc
aam
pop
bound
mov
inc
std
lods
movsb
incb
xchg
add
stos
push
xchg
fcmovbe
adc
push
xor
push
mov
mov
inc
mov
sti
adc
aas
xchg
push
push
push
and
and
scas
pop
arpl
mov
sub
cmpsb
aas
testl
sub
adc
sti
jns
mov
cwtl
les
inc
xor
stos
lods
dec
cwtl
pop
dec
enter
jecxz
adc
pushf
xchg
aas
popf
and
sub
outsb
mov
mov
mov
popf
out
sbb
mov
hlt
xchg
jb
add
fisubs
cli
pop
stos
pushf
fnstcw
dec
jp
mov
push
lcall
mov
dec
pop
in
xchg
sarb
leave
dec
gs
mov
aad
jbe
push
inc
rclb
jle
inc
mov
pop
and
adc
pop
sarb
sub
mov
pop
or
sarb
aad
in
inc
mov
sub
ror
sub
insb
jg
push
xchg
jne
mov
cltd
mov
test
scas
testb
or
mov
aaa
mov
inc
jmp
mov
outsl
sahf
adc
and
xchg
mov
sub
and
pop
cmp
add
sub
in
add
push
jb
add
imul
add
loopne
xlat
adc
push
inc
jmp
sbb
fldl
in
mov
and
lahf
shlb
inc
sub
mov
mov
lahf
lods
adc
cltd
insb
pushf
icebp
mov
sbb
sub
and
adc
test
cltd
sbb
rorb
outsl
or
xchg
sbb
mov
cmpsb
mov
inc
cmp
push
orb
sar
jg
cwtl
sub
in
push
imul
in
pop
fadds
daa
fmuls
aaa
push
aas
outsb
push
xchg
add
rolb
xorl
jle
insb
out
mov
pop
shrl
jle
cld
and
add
or
or
js
leave
movb
mov
pop
adc
or
ljmp
dec
std
pop
insb
fs
lods
sbb
sti
fwait
jo
movsl
sbb
cli
cwtl
push
mov
aaa
xchg
enter
fcom
mov
jge
sbb
sbb
mov
aaa
inc
into
sub
mov
jg
cmc
arpl
inc
adc
bound
and
dec
std
scas
xchg
rorl
enter
inc
lds
fistps
insl
lcall
loopne
pop
push
flds
je
push
rcrl
mov
and
cmpsl
addl
iret
cmp
cmp
and
std
lea
mov
out
and
in
gs
dec
dec
mov
add
fs
out
aad
lock
ljmp
pusha
fistps
pushf
mov
js
ret
mov
mov
push
pop
test
arpl
nop
add
nop
jle
ljmp
sub
jmp
call
push
and
subb
aad
mov
das
rorb
and
mov
jp
stos
inc
movsb
addr16
mov
cmpsb
stos
repz
clc
jbe
dec
cmpl
mov
insl
dec
sbb
and
js
fdivs
pop
add
xchg
mov
in
lahf
jae
push
adc
cmp
mov
dec
test
or
movb
insb
hlt
lods
xchg
mov
push
mov
push
add
sub
push
dec
repnz
cmc
rcrl
dec
xchg
lahf
xchg
mov
dec
dec
xor
lret
cmp
sarl
xchg
inc
in
mov
jbe
jl
into
insb
rcl
xor
jmp
push
pop
or
test
mov
adc
fdiv
pop
jecxz
icebp
icebp
or
lods
mov
ljmp
push
cmpsl
jnp
xchg
push
push
outsl
movsb
sub
dec
inc
divb
push
mov
push
bound
pop
fidivl
rcll
and
out
aas
xchg
stc
xchg
mov
pusha
inc
xchg
or
pop
les
popf
outsl
cmp
or
fsubrs
mov
xchg
push
push
mov
mov
out
hlt
xchg
or
mov
xchg
mov
xor
mov
mov
inc
push
mov
icebp
mov
xchg
ret
rorl
push
push
push
shl
jg
and
je
jge
xchg
mov
divps
into
test
pop
jns
pop
dec
divps
sub
sbb
xor
mov
je
sti
inc
out
sbb
addb
iret
cmp
sbb
push
repnz
fadd
or
loopne
mov
push
xchg
sub
hlt
xchg
stc
repnz
pmullw
in
jg
xor
idivb
sub
add
cmp
pop
cmpsb
mov
clc
adc
push
sub
dec
pop
sbb
pop
scas
mov
test
frstor
or
cmp
mov
or
pop
mov
negl
inc
fxch
ds
push
add
xor
outsl
ret
push
push
and
mov
cmpsl
mov
inc
xchg
push
aaa
jl
lea
fisubs
rorl
cmp
repz
sub
stc
adc
xlat
inc
dec
and
push
push
xchg
jne
jno
lahf
mov
jne
jbe
dec
cmp
sahf
stc
bound
push
push
pop
imul
cmp
mov
jb
xchg
xchg
xlat
sbb
jbe
outsl
jo
mov
imul
xor
nop
cli
xor
sbbb
scas
ljmp
mov
adc
inc
in
leave
xor
and
mov
jl
pop
sbbb
adc
xchg
add
loopne
or
push
dec
iret
inc
in
pop
into
mov
sbb
out
insb
sub
mov
lock
rclb
aas
adcl
dec
pop
push
nop
in
xchg
stc
cmc
push
inc
adc
dec
jge
dec
mov
pop
xor
mov
stc
ds
inc
inc
test
xchg
xchg
jl
cs
pushf
jbe
les
push
fxrstor
stc
ret
lods
cmpsb
dec
shl
jle
sarb
jbe
dec
xchg
mov
gs
outsl
push
fsubrs
fwait
popf
in
les
test
shrb
adc
cwtl
mov
or
inc
add
and
mov
movsl
push
sub
pusha
pop
leave
call
pop
cmp
adc
lock
xlat
xlat
xchg
lea
rorl
xchg
bound
xor
int
rcrl
or
testb
aaa
insb
imul
jecxz
and
or
outsl
mov
pusha
int3
cmp
xchg
aad
out
enter
call
push
jnp
fmull
mov
clc
jmp
movsl
dec
data16
je
or
pushf
ficompl
fdiv
add
scas
imul
mov
orb
mov
cmc
pop
stos
jle
movl
mov
push
mov
adc
rcrl
and
rcrb
test
out
xor
mov
mov
pop
sub
or
mov
data16
in
push
dec
into
sub
pop
mov
into
iret
nop
xor
out
pop
mov
arpl
cld
scas
out
mul
test
hlt
xchg
rcrb
les
std
sbb
jo
mov
pop
xor
out
pop
aaa
outsl
testl
pop
jns
jmp
outsl
outsl
mov
or
out
daa
and
mov
daa
inc
iret
ljmp
das
rolb
mov
ret
xchg
insb
mov
mov
ja
out
aaa
and
pop
sbb
jno
out
loope
push
push
stos
sbb
aam
xchg
sbbb
push
dec
inc
stos
aam
lods
and
scas
inc
cmc
test
nop
sbb
sub
mov
scas
sbb
aas
push
insb
cmp
cmpb
pop
xchg
dec
rorl
jg
xchg
in
stc
mov
jl
or
sbb
push
mov
cmpb
jns
movsb
sub
lret
sub
pop
mov
add
mov
ret
pusha
ret
pop
out
adc
cwtl
mov
mov
in
mov
negb
mov
out
into
aad
fcmovb
das
add
ds
mov
stos
adc
adc
shrb
push
fcomps
loop
icebp
mov
sub
shlb
jecxz
mov
cwtl
cmp
and
jmp
add
add
jnp
mov
mov
bound
fwait
add
mov
or
test
stc
nop
gs
testb
push
out
scas
and
aam
lahf
fstpt
dec
ret
mov
shrb
lea
or
push
jne
mov
addr16
cmp
lret
push
xlat
dec
inc
pop
and
pushf
or
xchg
daa
loope
out
dec
mov
dec
xchg
das
mov
add
mov
jno
jmp
xor
aam
mulb
mov
adc
pop
push
xlat
adc
and
push
and
out
outsb
dec
adc
lock
andl
adcb
cmp
pop
pop
sub
inc
subb
aad
mov
mov
hlt
idivb
jge
out
xor
and
or
sbb
cmpsl
and
jns
mov
js
fisttpll
sub
inc
sub
jns
jge
icebp
and
pop
xchg
jb
loopne
into
lock
adc
data16
sub
subl
das
dec
je
sub
adc
je
cmp
push
pop
cli
inc
fisttps
mov
pop
pop
loopne
cmpsb
push
inc
aad
pushf
push
loopne
mov
insl
mov
push
sarl
jge
lcall
insb
push
push
mov
push
andps
or
arpl
mov
rclb
pop
leave
or
adc
es
mov
xlat
push
adc
sub
jl
out
push
test
rcrb
lret
jmp
cmp
sbb
aaa
xor
sub
fwait
movsl
in
add
mov
mov
rcrb
out
add
cld
and
mov
pop
sub
cmpsb
xchg
mov
loopne
push
add
mov
outsb
clc
sub
in
pop
jle
mov
add
ja
bound
aam
rorl
addb
add
fimull
xor
add
mov
sbb
int3
xchg
scas
or
into
push
testb
cli
pop
addr16
adc
dec
sahf
xchg
fdivp
popfw
jge
aad
cmp
std
or
xor
ljmp
or
xchg
loopne
pop
inc
in
movq
pop
out
mov
push
cli
scas
fildl
aaa
dec
sar
lods
xchg
push
nop
mov
scas
loope
in
adcb
leave
and
lahf
sbb
push
pop
pop
movsb
sti
and
or
bt
sti
inc
ret
inc
int
popa
push
adc
repnz
pop
cmp
outsb
xchg
insl
lods
scas
lods
loope
scas
xor
or
inc
jo
rol
or
push
fdivs
cmp
xor
rcrl
enter
ljmp
sbb
mov
cmc
push
les
mov
sbb
jb
xchg
xor
jecxz
shrl
xor
jle
loop
pop
mov
repz
loope
push
push
movsl
jbe
fs
xchg
pop
or
repz
je
push
xchg
add
add
mov
mov
out
inc
popa
scas
pop
insl
addr16
sbb
adc
push
mov
push
pop
sbb
fcmovnu
push
cmp
mov
hlt
xchg
insl
aas
cli
mov
call
out
out
mov
aam
lods
inc
hlt
shrd
push
jmp
dec
mov
pop
aam
shll
push
push
daa
cmp
sbb
dec
dec
popf
push
mov
in
in
leave
jno
subb
mov
fisubrl
xor
loopne
in
popl
insb
dec
mov
fs
ret
and
decl
and
lcall
or
test
mov
aas
mov
popf
out
pusha
lds
cmp
push
insb
lahf
pop
jl
int
in
ret
out
hlt
and
bound
jnp
dec
ret
dec
addr16
inc
jnp
sub
and
sbb
je
sub
and
mov
xor
mov
test
js
xchg
lock
sbb
loope
enter
add
aam
cld
push
cmpsb
sub
cmc
mov
xchg
add
std
add
je
idivl
jp
mov
add
xchg
movhps
mov
pusha
xchg
cmc
ja
mov
xor
pop
sub
inc
mov
xchg
cmp
xchg
test
aad
add
pushf
xor
pop
fistpll
and
inc
aas
and
mov
xor
mov
pop
jbe
lahf
cli
fidivs
loope
sbb
pusha
cwtl
mov
sbb
mov
mov
es
mov
loope
popa
mov
inc
and
cltd
pushf
lret
mov
outsl
push
pop
push
sub
das
lock
jmp
jg
mov
dec
lcall
mov
mov
ja
sbb
or
cld
aaa
mov
cmp
or
mov
xchg
lcall
sbbb
rcll
sub
pop
xor
mov
das
adc
xor
jnp
test
push
xlat
or
cmp
lcall
and
movsb
shlb
sub
xchg
pop
insb
std
mov
popf
cmp
cld
rol
mov
jb
jno
mov
mov
or
jae
pushf
pop
imull
std
in
lods
xor
iret
mov
adc
dec
pop
movsl
cmp
cmpb
je
push
jne
or
mov
lcall
mov
push
mov
fnstenv
in
scas
mov
out
cmc
ret
xor
rclb
jbe
out
add
mov
sbb
inc
and
lea
pop
sbb
subb
jl
sub
mov
clc
add
shl
inc
xor
sbb
imul
mov
ds
sbbl
bound
mov
popf
outsb
in
jmp
sub
push
sbb
call
lea
test
in
repnz
addr16
pop
repz
mov
iret
lods
xchg
dec
aaa
push
sub
in
es
cmp
sub
pop
ljmp
and
shr
push
add
js
test
mov
mov
sub
ficomps
movsl
push
xchg
sbb
jecxz
sub
dec
mov
push
push
adc
push
xchg
and
push
idivl
fdivrs
sub
test
pop
mulb
push
dec
mov
and
ret
in
bound
pop
cmpsl
and
mov
mov
daa
lret
push
xchg
jl
andb
jp
into
and
ror
movsl
push
roll
pusha
jecxz
incl
stos
xchg
cmp
sub
pop
mov
jbe
sub
subl
in
push
xchg
popf
jmp
popa
cmp
adc
cmp
filds
out
roll
pop
std
bound
push
or
mov
jo
js
and
outsl
call
lods
inc
andb
imul
adc
cmpsb
cwtl
mov
xor
jl
fwait
in
pushf
or
jmp
rcll
repz
mov
mov
subl
roll
or
jg
nop
mov
mov
std
enter
or
nop
and
loope
scas
jg
outsb
mov
pop
cltd
mov
loopne
shl
xchg
cld
jl
cmp
adc
jbe
add
mov
push
mov
and
push
test
imul
aam
jb
push
gs
sbb
mov
ja
icebp
aad
not
lods
push
pop
sub
jnp
adc
sub
jl
pop
jg
mov
test
rorl
aad
add
stos
cmp
std
data16
push
mov
mov
popa
inc
xor
shl
popf
mov
push
repnz
mov
sahf
xor
inc
sub
out
inc
sub
inc
push
pop
sub
stos
int3
outsb
imul
enter
stos
cmp
iret
pop
jg
mov
pop
dec
dec
dec
inc
mov
lock
dec
xchg
cmp
lahf
je
cmp
fsts
cmp
out
push
or
push
imul
push
sbb
out
faddl
insb
and
pop
jl
xchg
ljmp
or
cmp
cmp
pushf
loopne
test
mov
cs
lahf
sub
or
push
mov
cs
mov
push
jns
push
test
test
inc
sbb
jb
sub
test
sub
sbb
jg
ficoml
xor
adc
test
dec
mov
lds
shrb
inc
movsb
sbb
pop
sub
push
stos
inc
ljmp
testb
es
iret
inc
jge
cltd
sti
stos
bound
fistps
jb
imul
ret
or
dec
mov
out
out
aas
push
fnsave
pop
mov
xchg
xchg
cmpsl
lcall
fwait
jnp
mov
sbb
jae
inc
rcrl
imul
inc
xor
int
arpl
cld
rcll
movsb
test
insl
add
mov
adc
sbb
mov
lock
lock
cli
mov
das
shlb
mov
pop
cmpl
in
js
loopne
mov
jns
repnz
lret
pushf
cmp
or
push
or
pop
enter
pushf
icebp
lcall
mov
scas
inc
sahf
rclb
inc
xchg
and
jae
aam
mov
lret
inc
pop
mov
mov
sahf
sub
lcall
aaa
mov
or
jp
test
xchg
aaa
movl
sub
add
cltd
and
ss
and
mov
imul
pop
xor
andl
pop
mov
jle
and
in
cwtl
pop
out
mov
loope
lods
pop
or
add
ficoml
pop
aaa
es
scas
shll
and
jmp
inc
jecxz
xchg
out
loope
test
sbb
movsl
mov
fidivl
test
jns
cmp
xchg
push
inc
inc
xor
or
ds
call
xchg
sarl
jmp
mov
or
pop
iret
in
in
ret
xchg
sub
dec
shr
inc
aam
xchg
xchg
xor
add
sub
outsl
mov
mov
jb
or
mov
jne
cli
cmpsb
repnz
test
daa
fistl
dec
cltd
insl
sbb
lea
fbld
jnp
mov
jne
add
je
out
fimull
add
lods
jbe
and
clc
lret
mov
mov
xchg
xchg
loopne
fildll
sbb
sbb
mov
adc
jno
test
push
or
jle
push
icebp
outsb
out
inc
cmp
aam
dec
aas
jp
or
adc
cs
dec
lret
ret
cli
into
roll
imul
or
fidivs
push
adc
dec
mov
bound
sbb
rorl
cli
sub
inc
xor
jne
aam
sbbl
cmovo
ds
inc
shrl
pop
mov
ja
add
push
mov
dec
mov
daa
push
cmpsb
mov
pushf
inc
mov
mov
sahf
pop
sbb
jle
pop
mov
outsl
les
inc
pop
sub
dec
scas
sub
sbb
cltd
dec
imul
mov
add
lock
cmp
xor
insl
ret
xchg
ds
sbb
mov
adc
test
xor
sub
loope
lret
fsubrl
pop
push
mov
and
sub
subl
adcl
out
data16
and
movsb
stos
mov
xchg
in
cli
jl
rcrl
js
jae
xchg
mov
iret
cmp
push
int3
jns
pop
cli
test
xchg
add
add
sbb
add
lcall
subb
xchg
out
mov
aam
mov
xor
cmc
xor
push
scas
shrb
stos
fildll
push
jae
add
xlat
mov
inc
cmp
popa
mov
scas
imul
lds
sbb
cmp
fisubl
xorb
js
xor
neg
hlt
repz
push
mul
jl
fbld
mov
push
adc
mov
sub
cmp
nop
add
aaa
iret
pop
sub
push
test
popf
dec
loope
xchg
pop
ss
jecxz
xchg
fld
repnz
jg
out
repz
add
int
in
push
mov
scas
xchg
dec
mov
popf
test
dec
adc
add
iret
mov
dec
mov
mov
mov
ja
cmpsl
outsb
std
repz
pop
arpl
adc
mov
mov
jbe
sub
pop
dec
test
sub
fstpl
push
jp
imul
sub
inc
lret
dec
jae
add
lahf
loope
lret
enter
popf
insb
lcall
and
sub
test
push
pop
jbe
lret
in
ret
in
xorl
shlb
inc
inc
shll
dec
iret
in
insl
nop
add
shll
push
mov
out
pop
mov
pusha
fwait
dec
loope
sub
popf
push
js
inc
das
repz
rcrl
jecxz
mov
fwait
xchg
xchg
inc
fnstsw
ficoms
and
ss
xchg
int
fidivl
lds
push
cmp
in
sub
aam
push
in
xchg
xor
inc
insb
sub
jns
inc
xor
lret
lods
fsts
das
pop
push
loopne
pop
mov
sbb
call
test
fcoms
or
enter
mov
add
cmp
and
pop
cli
mov
and
add
dec
imul
cmp
push
loope
fldl
popf
push
lds
and
mov
sub
sbb
mov
cmp
fstpt
push
sbb
sub
add
in
sub
xor
xchg
inc
nop
filds
xchg
pushf
xchg
or
mov
push
cltd
fisttps
fbld
inc
pushf
pop
xchg
mov
mov
insl
jge
inc
insb
les
xlat
push
rcll
jge
xor
jg
enter
repz
cli
fucomp
jae
cmpsl
into
xor
jb
icebp
or
xchg
mov
sbb
pop
cmovae
add
inc
in
imul
insb
subl
cmp
popa
mov
shl
xchg
jp
pop
mov
jno
mov
les
loop
arpl
add
aad
ljmp
sub
aam
push
jns
gs
rorb
sub
inc
adc
mov
js
lea
cwtl
push
pushl
jb
jb
lret
adc
mov
sti
mov
pop
mov
lret
jne
lds
mov
ret
dec
sub
fdivs
pop
in
out
and
es
xchg
dec
or
xchg
or
push
push
xchg
aaa
mov
out
pushf
mov
inc
pop
sbb
push
loopne
fxch
sub
jae
add
fadd
loop
inc
mov
int
shrl
call
mov
push
lcall
insb
call
in
cli
ja
out
addr16
and
or
notb
aas
fisttpl
adc
cmp
jb
js
insl
push
sbb
out
outsl
lahf
sahf
lcall
mov
stos
in
loop
in
movnti
inc
test
or
insl
ret
lcall
pop
dec
add
mov
adc
jmp
in
inc
sahf
mov
je
jmp
mov
mov
adc
ret
fbstp
adc
or
mov
jb
test
sbb
add
dec
andb
cmp
bound
in
adc
xor
pushf
dec
subl
in
push
enter
jns
jmp
mov
nop
pushf
mov
out
mov
lret
std
jge
and
lods
cmpsb
icebp
mov
cmp
fidivrs
imul
test
arpl
mov
fnstcw
cmp
daa
lods
ja
jl
les
fnstcw
shrl
xchg
jp
pop
fucom
icebp
daa
push
in
push
add
dec
stos
adc
out
pusha
repnz
pop
xchg
pushl
xor
mov
push
mov
mov
inc
out
in
es
cmp
jbe
cltd
mov
outsl
xor
outsl
mov
les
clc
out
jnp
aam
cltd
adc
or
incb
jbe
mov
ss
mov
sub
mov
cmp
data16
icebp
mov
and
lcall
push
dec
sub
das
push
sub
inc
jle
adc
cs
shr
mov
fistpll
test
rorb
mov
sub
adc
popf
xchg
cld
inc
sbb
jae
out
call
push
je
les
cmp
aas
jns
cs
mov
xorl
loopne
inc
clc
fstpt
out
scas
add
sub
sub
addl
out
cli
lret
movsb
adc
inc
xor
xchg
jae
mov
js
les
push
xor
pop
cmp
lods
mov
cs
cmp
xchg
pop
add
movsb
test
jno
mov
dec
add
pop
push
pop
mov
ss
fdivrs
pop
shr
pusha
adc
filds
out
lods
inc
repz
xor
in
jne
pop
aas
fsubs
or
and
ret
pusha
es
cmpl
jge
jle
mov
and
mov
jmp
mov
or
xlat
mov
fstpt
jb
lret
call
cmp
push
push
lods
orl
mov
in
icebp
vmovapd
or
sbb
or
lret
inc
cmc
jmp
xchg
mov
push
ja
xlat
adc
ret
fwait
out
fsts
cmp
lcall
hlt
jecxz
testb
mov
mov
push
loop
mov
inc
lea
mov
add
or
mov
shlb
notl
xchg
jnp
fldt
pop
stos
insb
mov
enter
mov
lcall
fucomp
push
rolb
jne
rorb
mov
out
sbb
movsw
sub
int3
hlt
mov
stc
pmulhuw
scas
and
inc
pusha
in
sub
push
sbb
ds
jnp
cld
jns
ljmp
and
mov
sar
push
pop
push
sarb
dec
mov
stos
add
xor
cmp
xor
xchg
je
fidivs
das
xor
xchg
mov
and
or
lods
cmpsl
sbb
ffree
push
push
call
ss
mov
test
xor
adc
sub
rorl
jno
adc
xchg
adc
ret
adc
pop
add
fidivrs
idivb
lahf
xchg
xchg
sbb
ror
mov
loope
mov
add
mov
jmp
sub
mov
cmpsb
lahf
sbb
dec
sbb
scas
inc
es
daa
inc
pop
int3
cmpsb
pop
sbb
inc
lods
pop
fidivrl
push
adc
stos
xchg
mov
inc
dec
loop
jo
xor
inc
stos
loop
sub
sub
add
cs
fcmovne
shr
push
addr16
aam
stos
gs
out
insb
ja
dec
ud1
outsl
pop
sbb
or
sbb
movsl
clc
dec
pop
jge
mov
shlb
rorl
in
and
imul
sub
push
leave
sbb
pop
enter
mov
inc
xchg
pop
mov
dec
lock
cmp
gs
adc
mov
inc
nop
scas
je
loope
add
fs
inc
push
xor
roll
pop
pop
jle
ja
repz
xchg
mov
sub
inc
shlb
xchg
enter
pop
mov
divb
jecxz
imul
push
outsb
faddp
cmp
cmp
iret
cmp
mov
jo
and
inc
stos
mov
test
sarl
pop
mov
add
gs
lods
lods
mov
stc
xchg
jb
popa
into
pop
pushl
in
icebp
mov
dec
sub
push
xor
sub
cmp
jae
jbe
inc
pop
inc
xor
pop
enter
lcall
scas
xor
push
sbb
nop
int3
das
icebp
or
jb
cmp
or
repnz
cmpsl
xlat
or
pop
push
inc
ss
sub
push
cld
adc
push
cld
adcl
jno
and
mov
rclb
imul
and
addr16
inc
cwtl
mov
bound
orl
int3
inc
dec
add
cmp
adc
mov
mov
out
nop
adc
negb
and
loopne
xchg
xor
popf
fcmovbe
lds
in
fistpl
inc
and
sarb
add
or
mov
mov
adc
jge
loop
jb
lahf
stc
xchg
call
ret
loope
mov
fstps
push
or
out
pusha
sbb
mov
hlt
dec
jl
pop
ds
out
mov
adcl
cmp
adc
inc
adc
sub
sbb
fwait
mov
mov
rorb
xor
sub
push
xlat
push
xor
sti
jno
test
xchg
popa
add
nop
cmpsb
es
cmpsb
and
jmp
cmpsl
repnz
or
rolb
sub
push
or
fmuls
or
add
ljmp
sub
pop
lret
dec
test
fisubs
or
sbbb
push
adc
out
lcall
std
lods
out
lret
sahf
shll
xchg
mov
jle
imul
fisubs
pop
inc
fildl
inc
xchg
jae,pt
mov
pop
or
inc
inc
xor
or
dec
inc
push
insb
sub
inc
stos
jbe
ret
into
mov
rolb
roll
int3
insl
sbb
test
lahf
sahf
imul
mov
cmp
lcall
sub
popa
sbb
jle
out
scas
fwait
dec
idiv
mov
inc
testl
sahf
push
dec
pushf
or
adc
mov
out
inc
pop
xor
mov
call
not
js
mov
cmp
sbb
inc
jb
jg
lods
fcomp
sub
add
add
mov
pop
leave
push
mov
mov
test
out
xor
push
pop
or
add
mov
data16
es
shl
fwait
xor
loope
cmp
pop
xchg
insl
pop
test
test
and
testb
lock
mov
push
pop
xor
imulb
dec
mov
sti
pop
imul
add
sbb
mov
loop
popa
int3
daa
mov
adc
movhps
fcoms
sub
adc
outsb
push
shll
scas
scas
je
adc
daa
stos
and
mov
fsubrl
ret
cmp
rol
sub
ds
jp
xchg
mov
sub
lret
sub
nop
jmp
push
pop
pop
jge
rcrl
inc
das
out
sub
mov
pop
pop
aam
ror
out
data16
fnstsw
mov
cmp
cltd
dec
dec
and
push
sbb
cmp
int3
dec
sbb
lock
jo
xchg
mov
jno
push
and
push
fistps
add
call
inc
push
add
lret
repz
sbb
sub
in
mov
int3
xor
mov
sbb
popa
and
repnz
enter
xor
sahf
mov
stc
fstps
adc
je
das
fdivrl
sahf
mov
mov
stc
mov
shl
jmp
adc
pusha
bound
bound
push
jne
and
inc
loopne
lahf
xorl
cmp
pop
adc
inc
jne
leave
xor
lods
sbb
cmp
and
aaa
icebp
jmp
out
push
sub
std
mov
andb
sub
arpl
or
adc
push
jae
rol
dec
or
gs
sbb
call
inc
ja
adc
mov
cmp
jo
repz
cmp
repz
dec
push
es
sub
psllq
sub
or
cltd
ret
mov
push
das
dec
mov
out
clc
stc
ds
fwait
and
sub
mov
sbb
aas
xor
arpl
fnstsw
ficoml
mov
addl
in
mov
push
xor
dec
stos
aas
rorl
push
sbb
gs
stos
mov
popf
mov
jl
insb
mov
cli
ljmp
roll
dec
sbb
pop
sti
pop
fsubl
cmp
mov
sbb
xor
mov
pop
in
xchg
jp
mov
dec
lea
mov
es
jecxz
arpl
ret
xchg
pop
jg
and
lods
repz
sti
mov
movl
insb
cmc
cmp
mov
stc
faddl
subl
add
pop
orb
sub
lock
das
pop
lock
adc
and
pop
repz
out
mov
xchg
push
sbb
sub
std
adc
je
dec
xor
mov
cmpsl
imul
mov
push
fisubrl
xor
mov
adc
aam
sahf
xor
or
enter
outsb
rorb
jno
jmp
movsl
test
rolb
inc
xchg
push
mov
xor
insl
dec
popa
push
popa
andb
adc
hlt
bound
scas
aaa
pop
sbb
or
repz
and
mov
push
mov
add
enter
idivb
andb
fstl
mov
mov
xchg
push
insb
mov
shr
test
test
jl
pop
fs
dec
stos
mov
fiaddl
sbb
add
mov
push
int
lods
mov
inc
dec
cs
inc
mov
xor
pop
cltd
sub
xor
enter
adc
pop
push
lahf
repz
cwtl
pop
inc
jb
fwait
xchg
fsubrs
cmpb
mov
jne
clc
lahf
sub
xor
aas
js
dec
sbb
sub
mov
inc
test
inc
cmpsb
xchg
dec
add
mov
out
and
cwtl
in
add
mov
jb
fidivrs
push
call
xor
into
call
aad
popa
mov
in
pop
push
test
lock
rcr
ret
mov
clc
bound
loope
shrb
dec
ss
dec
js
dec
add
mov
in
jp
icebp
cmp
aam
push
lods
mov
out
gs
repnz
inc
std
shlb
mov
popa
lods
sahf
js
sbb
lds
add
pop
xchg
jae
push
mov
cmpb
adc
mov
imulb
xchg
pop
ja
pop
mov
hlt
lahf
ret
jno
mov
pop
nop
insb
xchg
popf
psubsw
push
aad
add
pop
sub
dec
icebp
mov
push
cli
jl
jne
jnp
jo
mov
inc
pop
mov
dec
leave
jnp
pop
mov
movsl
jns
sub
cmp
cmp
aaa
xor
call
jmp
inc
mov
mov
aaa
in
sar
lods
inc
cli
push
cld
mov
dec
repz
in
cmp
addr16
xchg
ret
movsb
mov
lock
test
push
out
outsl
mov
sub
mov
call
sahf
cmpsl
add
mov
repz
mov
mov
cmp
xchg
cli
out
sub
xor
jmp
in
adc
push
mov
movsb
dec
iret
cmpsl
clc
add
xor
addr16
pop
test
mov
jne
push
insb
dec
sub
pop
iret
imul
push
int
jecxz
and
lret
outsb
dec
add
stos
repnz
jb
sub
pop
testb
shrb
push
les
js
mov
movsb
dec
ficompl
mov
jne
movsl
push
outsb
gs
xor
xchg
add
sbb
addl
push
dec
jo
shrl
jecxz
sbb
cmpsl
std
inc
inc
fwait
por
in
ljmp
iret
mov
cmp
loopne
add
add
ss
daa
in
js
inc
or
add
mov
lahf
xchg
inc
and
pop
push
out
jge
xlat
and
mov
fs
ja
cli
fldcw
push
and
ss
hlt
mov
imul
cmp
loope
outsb
adc
xor
bound
xchg
xlat
xor
sarb
fidivrs
es
and
js
imul
test
mov
adc
sbb
arpl
sti
popf
jmp
xlat
cmp
jne
jle
jle,pn
adc
popa
xor
pop
jb
pop
inc
nop
es
mov
shlb
in
add
add
jmp
jl
clc
ljmp
cltd
sbb
das
pop
loop
loope
mov
mov
jo
dec
sarl
pop
xchg
pop
pushf
clc
jl
xchg
sub
flds
jp
fistpll
stc
mov
imul
aaa
mov
insb
call
inc
cmp
jp
popf
jb
sub
stos
addr16
add
mov
mov
movsl
je
cmc
shlb
aam
sbb
jnp
fisubl
or
mov
mov
and
scas
dec
inc
or
stos
jnp
push
sbb
fadds
pop
push
push
push
jno
jns
or
xor
jnp
sarb
mov
jbe
sub
mov
mov
inc
and
sub
mov
push
mov
and
cmc
leave
sbb
js
add
aaa
frstor
out
rorl
push
stos
aam
mov
popa
mov
outsl
dec
test
scas
push
jo
xor
jle
xchg
push
aam
outsb
pop
mov
imul
enter
add
stc
mov
jge
in
sahf
adc
pop
sbb
pop
add
js
stos
sub
jmp
cmp
ret
push
push
femms
js
fisubrs
sarl
lea
mov
fadd
and
sub
sahf
cmp
test
je
sub
and
cmp
push
and
dec
int
and
lods
repz
jbe
jno
fsubp
mov
fwait
adcl
loopne
adc
mov
dec
mov
loop
mov
push
xorl
imul
fs
cmpsb
mov
add
inc
lods
imul
cld
adc
in
pop
mov
pop
std
xor
dec
lds
ljmp
fnsave
outsb
shll
jl
pop
sbb
popa
in
jae
cwtl
mov
sbb
sti
mov
cs
jge
jbe
ja
ss
ljmp
jns
mov
stos
cmp
xor
add
cmp
aam
mov
mov
js
out
lahf
pop
ja
add
outsl
cwtl
mov
mov
aad
stos
mov
decl
aam
das
pop
pop
js
ljmp
enter
mov
call
jl
addr16
dec
push
inc
cmp
scas
fiaddl
mov
sahf
imul
aad
in
pop
les
sub
enter
fidivrs
mov
cmp
aaa
arpl
push
int3
cmpsl
add
dec
mov
sahf
mov
push
pop
das
test
jl
mov
subl
mov
lret
jb
xchg
mov
aaa
push
or
push
jae
test
cmp
std
push
pop
push
outsb
int
cmp
mov
xchg
aas
xor
mov
push
cmp
sub
sti
or
int3
mov
mov
test
aam
jecxz
xchg
jcxz
push
jmp
addr16
jp
andl
dec
push
push
jns
fadds
cs
xchg
xor
jne
in
imul
pop
sbb
sub
lods
mov
cmp
sbbb
movsb
inc
mov
arpl
pop
jb
stos
pop
adcb
push
mov
push
fmull
add
dec
mov
adc
sbb
dec
in
outsl
mov
add
jg
and
dec
stos
adcl
in
pusha
clc
sbb
insb
push
mov
mov
pushl
pop
or
mov
mov
xchg
aam
bound
scas
into
loopne
push
nop
mov
bound
mov
xchg
js
cwtl
bound
movsl
inc
test
pop
mov
mov
and
inc
cltd
or
test
inc
loope
jae
addr16
mov
rdmsr
jo
cmp
shrb
out
scas
cmc
fiadds
jmp
mov
mov
nop
jmp
mov
data16
mov
mov
aaa
aaa
jmp
inc
mov
push
fldl
adc
sub
test
cmpsl
out
cmc
fs
cmp
pop
testl
pop
es
or
inc
pop
nop
dec
test
push
std
adc
mov
jne
stc
mov
sbb
aas
sbb
sbb
shl
popa
std
and
xchg
cmp
imul
imul
cld
add
and
test
pop
in
cwtl
jno
icebp
mov
outsb
jl
jns
add
mov
ds
outsb
out
xchg
aad
jp
rcll
addr16
dec
jb
inc
lods
in
das
dec
call
fdivrs
mov
dec
lret
sub
je
sti
or
or
pop
jle
insb
xchg
jbe
dec
ret
std
pop
outsb
imul
pop
push
dec
cmp
fbld
out
stos
inc
xchg
cmp
sti
in
pop
popf
nop
mov
icebp
lock
sahf
mov
mov
sti
mov
stc
loop
sub
sub
or
rolb
pop
outsb
fisubs
mov
cmp
mov
and
pop
test
cmpl
inc
jne
mov
les
xchg
mov
lock
and
enter
jb
and
fdivrp
mov
inc
push
or
and
outsl
nop
in
add
mov
adc
int
mov
mov
push
inc
push
jns
out
xchg
mov
out
fsubrp
andl
pop
pop
int3
cmpsl
in
push
lcall
add
in
mov
xchg
add
jo
push
sbbl
push
inc
push
rolb
mov
add
add
test
dec
testl
jecxz
sub
adc
xchg
xchg
xchg
dec
mov
lea
lret
negb
inc
cmp
leave
dec
add
pusha
push
sbb
aam
lahf
adcb
cld
in
pop
xchg
sbbl
aad
push
inc
xor
push
andl
leave
inc
lods
xchg
outsb
ss
jecxz
inc
xchg
js
test
cmp
push
std
mov
xor
mov
push
in
stos
roll
lock
dec
push
rorb
jmp
or
push
jb
in
adc
inc
nop
cmc
aas
or
cmpsl
cmp
mov
adc
lods
sbb
lds
shrl
sub
stos
jne
mov
into
cli
sbb
push
pushf
fistl
sahf
rclb
jae
adc
cltd
xchg
aam
cmpsl
or
rcrl
shl
xorl
out
pop
xchg
lea
jno
xchg
xchg
in
push
les
cmp
xchg
adc
stos
cmc
lds
inc
sbb
scas
outsb
sbb
clc
xchg
xchg
in
js
mov
scas
lock
sbb
comiss
in
js
fcomp
fwait
xchg
lret
pop
cld
scas
call
xchg
xchg
jp
mov
add
push
xchg
ficomps
push
xchg
gs
sbb
cli
cmp
push
test
or
inc
repz
shll
push
loop
sub
aam
mov
or
imul
sub
mov
dec
mov
and
sub
sbb
mov
in
lret
cmp
or
pop
fld
jmp
inc
andl
mov
jbe
mov
xor
push
jecxz
int
in
pop
lods
inc
out
pavgb
fstl
mov
and
test
and
or
and
cmp
orl
xchg
fstp
mov
cmp
movsl
dec
mov
mov
fs
mov
mov
ror
or
pop
mov
sbb
test
mov
inc
gs
int3
pop
ficoms
in
pop
test
push
in
ja
mov
aaa
mov
pop
movsb
lahf
test
cmp
lods
and
mov
loope
sub
pusha
xchg
loopne
xlat
add
lret
sbb
add
dec
cmp
adc
jns
arpl
fs
adc
iret
mov
dec
test
addr16
imul
das
cli
sbb
xchg
xchg
shrb
fidivs
ljmp
ds
stc
call
pop
and
mov
lcall
push
in
imul
sti
in
push
movsl
mov
add
imul
in
xor
xor
inc
out
addr16
mov
jg
enter
or
xchg
imul
add
lret
movsl
dec
rolb
mov
ljmp
mov
fwait
mov
in
pusha
outsl
lock
xchg
pop
push
jg
lods
pop
jge
scas
imul
pop
add
and
sub
pop
outsl
jp
adc
xlat
lods
adc
leave
frstor
inc
icebp
and
xor
dec
iret
movsb
popf
mull
loop
les
sub
pop
gs
das
shrl
insb
pop
shrb
ljmp
fstl
ss
daa
sbb
add
pop
out
cwtl
rolb
mov
xor
call
xor
jno
xchg
xor
add
in
mov
adc
lret
out
pop
or
icebp
dec
popf
mov
leave
dec
mov
sbb
rcl
push
fwait
shll
fimuls
pushf
mov
lds
mov
inc
and
js
test
xchg
iret
imul
sub
imul
inc
xchg
int3
mov
xchg
sub
inc
popf
outsl
bound
out
and
or
pusha
push
roll
dec
xchg
or
shlb
fidivl
lea
dec
dec
clc
pop
fsts
cmp
bound
sbb
lret
adc
add
sub
cltd
inc
xchg
jge
push
dec
pop
mov
lods
stc
dec
pop
js
push
loop
ljmp
pop
imul
aam
lahf
cmp
jp
add
pop
je
bound
pop
sub
sahf
leave
push
test
pop
lea
stos
pop
adc
ds
shr
sbb
shll
sbb
xchg
lret
jne
xchg
xor
inc
lcall
adc
mov
jl
mov
int3
jb
loopne
mov
cwtl
inc
ja
dec
ljmp
cmc
arpl
fcmovnbe
fwait
aaa
xor
fcmovbe
and
inc
fs
mov
inc
jecxz
shl
les
push
fimull
pop
inc
lahf
cwtl
adc
testb
movsl
ja
test
mov
roll
lcall
or
xchg
push
xchg
movsb
aad
orl
incl
cmp
sub
movsl
ret
add
sarl
fldenv
pop
mov
dec
sub
or
xchg
sahf
pushf
daa
mov
loopne
es
pop
mov
sbb
jbe
leave
or
int
xor
pop
cmpsl
or
jecxz
add
inc
sbb
add
clc
scas
pushf
mov
xchg
test
jns
xchg
dec
and
push
xor
xor
jl
sub
test
test
lea
lret
jecxz
enter
cld
ss
testb
movsb
cltd
ss
pop
pushf
inc
inc
sbb
inc
jmp
jecxz
dec
ret
in
xchg
cmp
sub
inc
arpl
xor
ds
jo
sub
nop
arpl
xchg
jo
or
adc
js
cld
imul
and
mov
nop
imul
push
into
hlt
lock
cmp
stos
xor
shll
dec
call
bound
into
aam
lds
push
cs
push
ret
ss
daa
sbb
sahf
ss
mov
insb
orb
mov
fwait
ret
and
dec
jns
mov
mov
and
jno
xchg
les
dec
outsb
aaa
and
std
out
xchg
pop
clc
cmp
dec
sub
or
xchg
jl
and
pop
scas
lahf
mov
inc
ficoml
inc
dec
or
and
js
inc
imul
push
stc
cmp
std
mov
jl
add
mov
xor
call
pop
sub
mov
jne
pop
rcrl
xor
cwtl
fisubrs
xor
push
lods
jne
push
pop
cli
mov
add
sarl
or
push
mov
jne
cwtl
inc
out
adc
cmp
insb
leave
dec
idivb
jmp
push
lods
xchg
and
and
iret
imul
mov
pop
jbe
data16
push
mov
pop
and
mov
in
dec
mov
iret
movsb
ljmp
daa
pop
jno
ja
cltd
dec
xchg
into
hlt
cmp
cmpl
adc
sbb
dec
xchg
stos
in
xchg
and
jl
stos
notl
xor
ss
lcall
or
pop
jns
data16
pusha
xor
addr16
shlb
int3
movsl
sbb
repnz
mov
push
ds
xchg
cltd
ljmp
or
inc
mov
jbe
pop
pop
test
and
movsl
or
aaa
les
jnp
adc
adc
into
ljmp
add
jbe
jae
mov
dec
test
xor
jnp
mov
ret
xor
jge
dec
or
adc
lea
mov
or
shlb
and
rolb
xchg
pusha
mov
sub
std
addr16
fiaddl
subl
push
js
push
and
mov
cmp
fists
add
repnz
adc
cmp
ret
or
imul
inc
xchg
cmp
shlb
aad
jb
dec
xor
stc
or
out
inc
dec
mov
inc
cmp
fiaddl
or
test
or
outsb
mov
mov
js
or
sub
jp
test
add
test
aas
xor
xor
pushf
xchg
rolb
push
jmp
loop
lods
sub
je
bnd
in
pop
sbb
notb
ljmp
dec
call
xchg
xor
push
dec
stc
cmp
sub
scas
push
mov
insl
bound
inc
sub
adc
xchg
lahf
ret
mov
lods
div
pop
cs
sti
test
push
into
cmc
lock
sub
pusha
nop
xor
push
mov
bound
fdivrl
imull
inc
or
sbb
inc
lea
sub
shrb
out
imul
mov
ss
sbb
arpl
stos
fimull
mov
aad
xor
aas
je
mov
add
mov
lods
jne
sbb
sub
cwtl
push
hlt
call
addb
xchg
aas
daa
insb
mov
or
ds
xchg
cmp
ljmp
push
cwtl
jo
dec
imul
jecxz
ror
xchg
out
call
ret
std
call
mov
cmpsb
xchg
adc
mov
and
inc
fidivl
mov
popa
fsub
jp
aad
lods
cli
sub
inc
mov
xor
mov
frstor
aaa
or
adc
testl
sub
shll
xchg
and
mov
cmp
dec
mov
in
push
in
or
mov
push
inc
flds
add
adc
loop
dec
aaa
push
xchg
dec
pop
mov
ret
loope
insb
mov
or
xor
fsubs
in
cmp
pop
cs
mov
xlat
jmp
sub
cmp
adc
shrd
add
sbb
cld
iret
add
and
ja
dec
or
mov
leave
inc
cltd
pop
rcr
dec
rorl
lods
mov
icebp
add
shlb
xchg
rolb
pop
sarl
mov
and
pop
adc
push
stc
push
xor
lock
push
fisubrs
ss
and
movhps
pop
push
sbb
test
popf
in
sarl
inc
xchg
fwait
and
outsb
js
insb
aaa
push
popf
inc
iret
sub
icebp
cmp
outsb
dec
pop
dec
jl
jp
sub
cmp
inc
leave
out
jbe
and
or
fsub
xor
nop
push
mov
shlb
ss
mov
mov
outsl
mov
sti
loope
andl
push
xor
push
pop
cmp
arpl
push
adc
adc
jns
push
add
add
or
mull
adc
push
popa
aas
mov
xlat
mov
inc
inc
sub
cwtl
lds
scas
inc
inc
cli
mov
cwtl
mov
out
dec
lahf
mov
mov
xor
dec
rol
inc
cmc
cmp
mov
loope
xlat
sbb
aas
jmp
rorb
pop
sub
mov
mov
add
jle
push
dec
sbb
faddl
in
fiadds
xchg
sub
push
add
dec
outsl
and
cmp
add
faddl
fnstcw
jo
add
int3
ret
out
scas
ja
xchg
ja
and
andl
xchg
push
scas
ficompl
outsl
pusha
push
in
push
test
push
cltd
lret
cmpsb
lds
hlt
jl
or
scas
sar
in
push
pop
cmp
scas
int
push
mov
icebp
push
sub
mov
dec
lret
add
mov
fs
popf
pop
popa
cmp
int3
xchg
popa
xchg
xor
add
scas
pop
mov
pushf
lret
and
ffreep
js
mov
fmuls
notb
js
pop
mov
jbe
push
scas
stos
ret
in
jns
in
or
and
dec
idivb
ror
rcl
into
inc
fbld
mov
bts
add
fdivrs
or
ja
fisttpl
push
add
or
pop
cmc
fildl
outsb
jnp
stc
jle
dec
add
js
out
mov
loop
pop
fidivs
add
push
adc
into
mov
push
gs
in
sub
fisttpl
cwtl
sub
inc
sub
sub
movsb
inc
mov
rorb
insl
pop
aaa
out
pop
fldenv
andb
scas
lds
or
sbb
mov
mov
fcmovnb
loop
mov
cld
sub
cwtl
push
xchg
lahf
lock
ljmp
cmp
lea
push
mov
pop
jnp
and
aad
in
cltd
mov
cmp
xchg
sarl
les
arpl
jle
iret
mov
cmp
int
or
xlat
lahf
scas
jne
popa
orl
cmp
cwtl
jo
shrb
mov
push
push
push
pusha
out
xor
jae
pop
sbb
and
cld
repnz
mov
xor
fsts
mov
pop
sbb
js
fldz
pop
sub
movsl
push
and
or
insl
mov
ror
cmp
sbb
jle
pop
out
ds
and
dec
or
jecxz
inc
mov
jmp
ja
cmpsl
or
int
in
jnp
imul
push
xchg
sbb
add
test
lea
cmp
into
sub
and
push
adcb
mov
push
cltd
fcomp
add
rcl
ljmp
inc
mov
lret
xchg
sub
jno
popa
push
cmp
insb
hlt
loopne
push
loop
mov
xchg
daa
pop
mov
jo
mov
pop
in
pusha
mov
test
fsubrs
sub
fdivrl
or
inc
pop
pop
test
adc
sbbl
imul
scas
push
adc
roll
pop
cmpb
push
sahf
icebp
stos
xchg
xor
xchg
dec
imul
or
adc
cmp
dec
push
leave
push
dec
pop
gs
jmp
ds
adc
or
rcrl
or
cld
popf
in
jecxz
loop
aam
out
push
xchg
out
test
out
inc
jne
shll
lahf
aam
stos
xorb
fsub
dec
lret
sub
mov
mov
filds
jle
icebp
push
hlt
jnp
stc
or
ja
push
ljmp
lahf
mov
mov
inc
clc
pusha
imul
iret
jbe
cmpb
jmp
dec
jp
jbe
ljmp
jmp
or
scas
push
mov
sbb
mov
push
push
andl
push
fs
std
sbb
ret
push
lret
cmp
fld
pop
ja
inc
lods
push
mov
mov
pop
sbb
sub
andl
stc
es
cmp
mov
das
cld
mov
outsl
fwait
mov
clc
xor
in
lcall
or
push
sbb
push
mov
into
xchg
nop
xchg
xorl
sbb
inc
xchg
jb
sbb
or
stos
xchg
outsb
sub
mov
fcmovnu
inc
push
pop
lret
lock
cmc
mov
pusha
mov
aas
push
push
cli
gs
mov
push
das
lcall
cmp
xlat
out
xchg
cmpsb
cmp
cmpsl
ja
pop
mov
pop
enter
sub
stos
in
rclb
xchg
push
push
xor
pop
lret
mov
fxch
cmp
repnz
cmp
xchg
add
sbb
and
push
sub
and
xchg
sbb
pop
test
dec
ljmp
adc
cmp
push
stos
out
inc
jnp
fcos
test
inc
mov
test
scas
int3
pop
repz
repz
rcrl
dec
sub
fnstsw
jb
test
in
test
fdivrs
xchg
aad
add
push
dec
cltd
jge
lret
orl
sbb
adc
and
pop
xor
fwait
xchg
ret
les
mov
iret
pop
pop
cmpsb
in
into
ljmp
pop
les
mov
sbb
push
test
mov
or
fildll
inc
test
les
ds
rorl
scas
dec
fs
rcrl
inc
loope,pt
into
cwtl
outsl
addl
jne
push
sbb
sarb
adc
jecxz
clc
inc
outsl
outsb
les
ss
xchg
inc
adc
push
loopne
sbb
test
pop
in
in
push
lock
add
mov
repnz
cmp
add
add
mov
mov
mov
pop
scas
inc
xchg
bswap
pop
pop
faddl
jp
icebp
pop
sbb
insb
cwtl
outsl
shlb
dec
subl
or
adc
xlat
popa
sub
pop
mov
aad
mov
out
push
add
sub
xchg
ret
stos
inc
loopne
mov
fstps
cld
or
test
cmp
mov
sub
movb
iret
iret
adc
jge
jns
ret
mov
imul
nop
and
int
icebp
mov
lret
or
inc
jl
jno
mov
inc
lahf
imul
xchg
xchg
sbb
int3
addr16
fsubrp
mov
inc
fidivl
and
mov
pop
sbb
jecxz
sub
cmp
mov
dec
mov
jnp
aas
push
xchg
jb
dec
mov
pop
push
xor
xor
jle
xchg
clc
mov
ja
dec
sub
and
mov
fld
adc
ret
xchg
pushf
cmp
and
lods
mov
inc
rorl
test
push
fidivrs
push
sbb
xor
push
mov
lods
add
xchg
pop
fadds
pop
pop
or
inc
jns
pop
das
out
push
int3
daa
rorl
out
adc
mov
dec
jle
xlat
mov
mov
adc
pushf
test
push
mov
popa
neg
add
les
repnz
fwait
pop
test
push
scas
aad
das
add
rclb
jae
hlt
push
ret
pop
sbb
movsb
cld
cmpb
jmp
lahf
ret
imul
outsb
xchg
fsub
ss
lock
cpuid
xchg
xchg
daa
bnd
nop
sarb
push
js
and
jg
jp
daa
push
mov
sbb
sahf
mov
add
xchg
hlt
test
cli
popf
das
cmpsb
or
mov
pop
push
dec
scas
push
test
loop
mov
jo
cwtl
dec
aas
push
shll
add
adcl
ljmp
push
adc
dec
mov
roll
out
cli
sub
xchg
sahf
gs
sbb
andb
stc
push
pop
adc
mov
dec
sub
fsubs
out
pop
mov
cmc
sbb
inc
and
cmp
dec
fcmovb
ss
or
jl
and
xchg
mov
xor
das
test
lahf
adc
sbbl
push
cmp
push
jnp
ljmp
dec
sbb
loope
in
fiadds
jmp
ss
pushf
push
add
ja
push
shlb
loopne
pop
insb
cli
jp
or
dec
std
inc
adc
aaa
adc
add
in
lahf
and
loopne
int
fidivs
xlat
fwait
jmp
inc
lret
enter
aad
ja
cmp
fisttps
jae
cs
and
and
lods
cli
lods
adc
dec
xchg
stos
cmp
jl
jl
inc
jg
sti
gs
jmp
leave
mov
fsubr
call
push
sbb
xchg
xor
imul
xor
mov
movsl
in
rorb
dec
sub
lcall
inc
jmp
add
ret
mov
xor
jne
lret
jbe
cmpsl
subb
popa
lock
das
dec
mov
and
sahf
xor
jns
pop
or
incb
push
rcr
mov
lods
pop
mov
iret
lret
sbb
mov
and
fwait
xor
push
adc
xchg
js
icebp
fisubl
scas
jg
inc
rclb
add
adc
fistl
hlt
jle
test
xor
add
lea
daa
push
fldenv
sbb
lret
out
push
mov
jg
fimuls
das
pop
inc
cmp
repz
lock
rorl
xchg
out
clc
mov
adc
and
push
lret
insl
mov
sbb
scas
adcb
xchg
and
loope
xor
jmp
add
call
shr
mov
leave
sub
push
jbe
subl
sub
mov
repz
xchg
aam
cmp
repnz
mov
call
or
ja
add
outsl
sub
mov
add
das
and
pop
les
cmp
aad
add
inc
cmpsb
ss
push
enter
je
dec
enter
pop
jnp
mov
sarb
aam
dec
inc
dec
add
dec
cmpsl
add
loop
pushf
mov
scas
mov
cmp
daa
std
push
frstor
xor
add
mov
and
mov
mov
repz
in
jmp
scas
test
enter
sti
cmpsl
dec
les
xchg
mov
call
cmpsb
xlat
adc
aam
xor
stos
leave
fs
dec
sub
or
hlt
dec
jge
stos
xchg
cmpsb
jl
scas
jno
cmpsl
cmp
gs
mov
fwait
in
xchg
mov
pop
mov
leave
sub
mov
cld
dec
test
push
and
adc
mov
ret
jmp
pop
sbb
loope
inc
cs
or
fbld
push
loop
ret
cmp
mov
jle
mov
jne
cmc
cmpsl
push
dec
mov
aas
fnstcw
inc
push
inc
pop
popf
dec
add
addr16
shr
dec
rcll
lds
sti
adc
mov
xchg
pop
mov
dec
out
mov
in
adc
nop
add
xor
nop
xchg
dec
mov
jecxz
call
aam
enter
push
push
fnstsw
testl
sub
gs
add
push
mov
aas
shrb
fs
stc
int
rorl
or
mov
fisttpll
inc
imul
sbb
insl
pop
mov
jg
mov
stc
add
push
dec
xlat
add
xchg
mov
cmp
outsb
arpl
stc
repz
sub
mov
rcr
out
pop
data16
movb
call
jbe
add
dec
nop
test
dec
push
xor
ds
cli
outsl
lea
adc
outsl
mov
push
mov
test
rcrb
lods
fs
mov
pop
mov
mov
imul
mov
cmp
mov
in
xor
cs
int3
xchg
movsl
dec
cmpsb
add
out
jb
outsl
xchg
cli
test
inc
push
jno
inc
lds
mov
sbb
mov
and
out
pop
bound
adc
push
xlat
nop
mov
mov
fsts
add
scas
push
int
int
add
xlat
das
dec
in
or
dec
test
dec
gs
clc
mov
aas
iret
push
mov
xchg
dec
mov
cmc
jne
loop
pop
xor
shr
roll
icebp
cmpsl
push
cli
jo
enter
push
mov
inc
push
xor
cld
push
cld
dec
pop
ljmp
popf
cli
cli
jmp
pop
insb
test
or
dec
jl
and
and
xor
in
sbb
cmp
pop
ret
dec
xor
push
and
jno
inc
push
enter
lahf
cmp
xor
sar
mov
ljmp
in
push
js
mov
cld
rorl
popf
sub
pop
add
add
fidivrl
pop
stos
or
pop
fbstp
popa
out
test
adc
fwait
les
mov
mov
push
inc
call
xchg
add
xchg
xor
in
aas
push
fs
cmpsb
add
and
xchg
cld
cli
hlt
mov
aaa
xchg
lods
add
inc
dec
pop
add
lods
add
push
mov
out
adc
inc
jmp
add
push
add
divb
in
sub
push
pop
repnz
cmpsb
push
popf
aas
dec
xor
in
rolb
xlat
outsl
cld
stos
test
lds
push
insl
xchg
mov
test
xchg
inc
lcall
iret
mov
out
pop
pop
inc
test
add
pop
in
pop
inc
add
fcmovnu
jns
movsl
adc
push
ja
out
cmp
push
adc
cmp
sahf
mov
fsts
xchg
mov
les
push
in
insl
std
cmp
mov
cld
ss
mov
loop
stos
popl
aaa
shlb
dec
mov
bnd
and
xor
sbb
in
ja
lret
fsubl
inc
mov
sub
fst
repz
mov
mov
cmc
jle
std
inc
call
stos
and
push
mov
in
rcrb
or
or
sub
dec
ja
fsubl
mov
ljmp
inc
cmpsl
adc
fcoml
inc
mov
sbb
mov
jl
int
test
push
inc
push
clc
loopne
jb
add
orb
jb
xorb
jp
jo
add
xor
add
outsb
inc
shlb
mov
popa
or
frstor
das
xlat
jmp
cmpsb
in
mov
outsb
ja
adc
mov
mov
or
add
cmp
and
mov
sbb
lds
jo
add
mov
xor
sub
add
fcomps
es
das
insb
rcrb
std
iret
push
xchg
shll
sub
mov
in
sar
jo
dec
loop
fs
mov
div
push
lock
xlat
je
jbe
jno
scas
xchg
in
fcmovu
add
test
ljmp
mov
sbb
addr16
push
scas
xchg
dec
sbb
add
cmp
les
cmp
dec
addr16
or
and
loopne
enter
mov
jae
enter
shlb
loopne
ja
movsl
xor
jg
fmulp
pop
loopne
and
cwtl
aad
mov
insl
paddsw
mov
loopne
push
icebp
loopne
aas
fwait
pop
pmulhuw
adc
icebp
sub
jge
jns
jb
sbb
or
xor
cmpsb
jno
pop
fs
scas
gs
xorb
adc
loop
mov
cmc
cmpsl
mov
lea
mov
lea
push
mov
in
mov
ret
pushf
mov
cwtl
sub
adc
test
push
stc
popa
mov
data16
sub
add
mov
insl
decb
lea
and
jp
int3
sub
fisubs
das
adc
inc
sbb
gs
leave
push
test
inc
stos
push
sbb
imul
xchg
mov
mov
test
lret
add
adc
js
clc
int
js
xchg
ss
xor
imul
add
mov
add
xchg
out
add
fcoms
mov
mov
repz
xorb
push
adc
mov
or
cmp
adc
mov
stos
in
dec
jge
pop
sarl
in
sbb
xor
xor
or
andl
dec
arpl
mov
mov
mov
imul
fwait
adc
pop
push
xor
pop
jecxz
into
xlat
lods
aam
data16
jg
js
aam
repnz
mov
imul
add
sbb
cmp
dec
and
push
icebp
ss
adc
aad
push
jecxz
ret
pop
dec
pushf
jns
test
push
cli
add
lea
ffree
and
sahf
movsb
push
dec
mov
addr16
cwtl
mov
xchg
fiadds
mov
push
jl
sub
jbe,pt
add
lods
loope
mov
mov
cmp
pusha
popf
xchg
jl
test
lret
jae
jnp
or
mov
mov
jge
push
cli
dec
xor
push
leave
lods
push
in
xchg
inc
es
sbb
stos
pop
addb
dec
fs
jae
lds
jl
in
sub
out
or
xor
push
push
add
jge
in
hlt
dec
test
xor
repnz
out
adc
es
add
or
pop
add
push
xorl
popf
clc
test
mov
cwtl
ljmp
jge
jnp
push
lret
jle
sub
jp
add
mov
cmp
std
cmp
adc
aaa
mov
push
ret
lds
cmp
dec
test
rcll
and
push
pop
adc
adc
lds
or
cmpsb
fsubrs
out
lret
inc
mov
pop
jns
dec
mov
into
xchg
mov
add
pop
fdivl
icebp
in
and
jo
scas
sbb
outsb
test
clc
out
idivl
dec
inc
pop
outsl
jbe
sbb
aas
mov
pop
dec
icebp
adc
lea
jnp
add
fnstsw
push
cmp
dec
add
stos
lock
add
jg
sti
add
fdivrs
pop
fidivl
mov
inc
jge
popa
adc
mov
inc
mov
out
cmp
enter
addr16
out
push
push
sbb
lret
test
shrl
rcrl
pop
lock
push
test
mov
jns
or
cmpsb
nop
cmpsb
mov
cmp
adc
jge,pn
push
sbb
push
or
idivl
mov
sahf
in
jo
dec
test
lret
xorl
std
cmpsl
push
imul
pop
imul
scas
dec
lods
aam
movsl
imul
pop
jg
inc
sub
adc
cld
shlb
pop
into
mov
inc
test
es
mov
add
mov
push
bndstx
add
stos
and
roll
inc
mov
test
test
js
mov
xor
call
dec
jno
and
and
shlb
add
pop
push
add
or
hlt
shr
lods
popa
pop
fisubrl
std
into
and
xchg
inc
cmp
enter
das
adc
dec
mov
mov
cld
mov
sub
sbb
xor
mov
pop
adcb
xor
sub
jae
ret
and
pop
jae
in
mov
pusha
xchg
in
push
and
mov
xor
sbb
push
outsb
lods
lcall
pop
sub
push
imul
pop
dec
ss
cmpsb
repz
mov
mov
dec
sub
scas
fmulp
mov
loopne
push
mov
add
mov
pop
add
cmp
sbb
xchg
mov
cwtl
cwtl
inc
mov
mov
jle
sbb
cmp
loop
insb
shll
mov
sbb
xor
adc
jne
push
mov
pop
cld
and
ljmp
sub
push
cmp
jg
mov
jmp
push
adc
lods
out
mulb
test
mov
das
lahf
lret
pop
fcomp
pushf
push
leave
out
int
xor
pop
hlt
movsb
cmp
mov
in
outsb
addl
mov
stos
adc
popa
popa
xchg
shr
test
adc
fimull
inc
out
xchg
mov
pop
pushf
out
cmpb
enter
cmp
addr16
loope
mov
mov
sub
ja,pt
leave
stos
and
and
and
or
rorl
sbb
pop
fidivs
or
scas
test
test
cmpsb
arpl
push
out
mov
sub
data16
sub
push
cmpsb
sub
fwait
adc
add
sbb
cmp
in
arpl
and
fstp
out
push
xlat
int
and
mov
xchg
test
mov
nop
push
and
sti
xchg
movsb
ds
sarl
or
and
je
das
insl
negl
andb
in
popa
repnz
out
out
mov
mov
push
fsts
mov
inc
mov
shl
outsb
fsubl
loopne
jb
js
mov
in
pop
inc
xchg
pop
call
cwtl
pop
movsb
add
jecxz
cmp
ljmp
xchg
pop
data16
pop
xor
xchg
insl
insb
scas
in
mov
dec
mov
sahf
dec
cmp
add
xor
xor
mov
xchg
jge
jno
in
fistl
add
adc
iret
pop
cmp
and
jle
add
and
roll
out
pop
cmpsb
ror
push
fsub
out
imul
push
xchg
into
loopne
pop
xchg
sbb
jbe
push
ljmp
call
rorl
add
pusha
repnz
in
sub
aam
lods
inc
jns
sbb
mov
shlb
push
lds
jbe
fiadds
out
mov
lret
inc
dec
inc
ja
lret
iret
ss
cmp
xchg
add
or
push
mov
nop
push
cmp
cmpsl
stos
mov
arpl
stc
push
dec
push
shll
fcomp
mov
sbb
dec
aam
enter
mov
adc
adc
in
xchg
dec
pop
ljmp
sti
inc
pop
popa
pushf
mov
test
daa
inc
mov
push
or
inc
ja
ret
js
icebp
insl
vmovddup
lods
test
ficoms
inc
sbbl
cmp
jle
mov
jne
inc
jle
cwtl
dec
mov
cmp
ljmp
xchg
xchg
cmpsb
mov
adc
jmp
mov
pop
dec
js
rclb
sub
pop
repnz
xor
rol
aad
in
xor
outsl
bound
cmp
aaa
mov
push
cli
pop
cmpsl
push
mov
push
aad
jno
xchg
adc
popf
xchg
jae
mov
xchg
stc
lds
xchg
cmc
jnp
pop
dec
loopne
push
stos
pop
bound
lods
lcall
mov
sbb
shrb
sub
inc
sub
mov
xchg
sub
adc
pop
xchg
cltd
dec
mov
push
xchg
or
jns
in
cli
out
iret
xor
add
inc
add
ljmp
fidivrl
mov
loopne
arpl
out
std
repnz
iret
fidivl
in
sbb
cmpsb
aaa
xchg
jae
sti
push
ds
mov
shl
mov
cmp
movb
je
lock
shrb
test
jo
in
sub
adc
jbe
push
cmp
push
add
pushl
int
sahf
notl
and
xlat
fnclex
insb
xchg
inc
cmc
inc
std
repnz
cmp
lea
xor
fcmovb
inc
and
int
repz
inc
sub
cmp
xlat
jns
jns
or
dec
pop
sbb
pushf
pop
int3
mov
movsl
fs
inc
sbb
inc
mov
dec
lahf
mov
popf
xchg
ljmp
jae
xchg
scas
addr16
loop
andl
add
ja
mov
push
les
loopne
ss
addb
and
int
faddl
fsubs
inc
jns
cmc
das
shrl
mov
dec
fisttps
mov
les
nop
cltd
dec
outsb
sub
icebp
xor
inc
adc
js
adc
icebp
dec
adc
iret
push
ret
hlt
mov
addr16
xor
and
ja
es
in
cmp
or
xchg
orl
pusha
adc
insl
pop
cmp
out
lret
stos
mov
int3
inc
mov
lret
add
mov
or
cmp
int
pop
pop
cltd
xchg
pushw
mov
jmp
movsl
pop
xlat
jmp
inc
ja
lret
in
ror
fs
movsl
add
dec
xchg
mov
test
rorb
popa
in
sbb
aas
mov
xchg
std
mov
popf
mov
test
fistl
cmpsb
imul
pop
insb
push
test
cmp
dec
add
cmp
jl
or
xchg
shl
and
sub
repz
jne
or
mov
and
push
shlb
mov
lahf
jmp
jge
pop
lret
psllw
mov
loopne
repz
pusha
sub
sarb
jl
mov
adc
jmp
sub
gs
test
cmpsl
jae
mov
ja
jnp
jl
stos
add
push
les
jmp
adc
mov
pop
sub
enter
jge
or
dec
lods
pushf
jae
mov
les
mov
popa
call
sbb
or
xchg
inc
mov
aas
sbb
lahf
sahf
call
push
jne
out
fdivrp
iret
in
addr16
sub
jno
mov
jp
and
lahf
insl
xorb
dec
push
inc
push
mov
daa
ljmp
popa
repnz
les
cmp
call
or
mov
sti
pop
adc
inc
inc
jg
and
test
out
int
je
jb
adc
stos
mov
loope
or
fisttps
pop
jb
imul
stos
testl
add
mov
leave
fsubr
mov
cwtl
out
lds
cmp
add
jmp
inc
fdivr
xchg
ret
lret
adc
popf
outsb
mov
xchg
xchg
mov
mov
pushf
leave
sbb
dec
dec
stc
into
dec
add
cmpsb
hlt
and
jnp
aad
cmp
sbb
push
mov
mov
pop
clc
xchg
mov
mov
nop
ljmp
sahf
jle
and
outsb
or
sbb
stos
push
mov
xchg
movsb
or
test
jle
lcall
popa
mov
cwtl
cmpsl
or
inc
cmpsl
sahf
mov
pop
xor
dec
or
lcall
and
pop
aas
mov
clc
sbb
mov
sbb
fsts
xchg
fnstsw
out
popl
aaa
pop
add
adc
pop
fcmovb
jmp
xor
in
pop
cwtl
adc
roll
daa
out
dec
out
test
xor
mov
pushf
das
and
and
jge
imul
int
sub
xor
fxch
test
popf
dec
xchg
cmpsb
mov
mov
push
pop
mov
lahf
jno
xor
call
outsb
out
lret
dec
out
ror
out
frstor
ret
mov
or
jp
call
mov
xadd
stc
mov
mov
dec
iret
adc
lea
dec
fnstcw
cmc
push
jl
mov
fcmovnu
adc
push
sub
xchg
aam
imul
test
xor
cmp
lock
and
mov
pop
xor
inc
js
imul
sbb
iret
fsubrs
push
clc
or
dec
xchg
push
decl
rorl
aam
stc
xchg
mov
pop
or
imul
stc
out
ja
dec
push
and
std
add
gs
and
jae
icebp
inc
cmp
ja
mov
and
hlt
mov
pop
rcr
popa
mov
mov
sbb
inc
rol
aam
arpl
ja
sub
and
hlt
mov
sarb
dec
add
roll
and
sub
fcmovne
cmpsb
jge
inc
sar
inc
cmp
lds
mov
adc
in
ljmp
mov
adc
sub
xlat
inc
fbstp
dec
xor
out
je
pop
int3
adc
push
cmpsb
mov
lahf
fnstcw
dec
loope
lds
jecxz
dec
mov
push
js
cmp
mov
xor
inc
cwtl
push
push
mov
cmp
xor
push
and
xchg
xchg
or
and
or
inc
sbb
insb
mov
jmp
mov
jns
jl
loopne
push
push
lea
mov
sbb
push
loope
test
lret
push
movsb
int3
lret
rorb
dec
scas
push
jmp
nop
lods
dec
rcll
inc
repz
or
leave
outsb
push
jnp
pop
add
fimuls
fcmovnu
sub
xchg
cmp
lea
test
std
xchg
outsl
int3
cli
add
fwait
bound
mov
add
pavgb
repz
repnz
jmp
aas
pop
lods
rcrb
xor
movaps
xor
ret
lods
out
jmp
mov
xchg
je
dec
pusha
imul
or
cmp
cmpsb
and
xor
and
xor
pop
xchg
push
or
loop
pop
movsl
fists
push
out
out
adc
or
mov
stc
mov
aad
scas
inc
mov
mov
scas
pop
dec
out
add
pop
pop
mov
jns
jbe
push
addl
dec
inc
lods
in
insb
pop
jl
add
mov
xchg
mov
in
pop
aas
jo
cmc
mov
cmp
aaa
jl
loope
push
sub
icebp
test
rcll
scas
xor
loop
or
lods
jmp
out
test
cld
adc
mov
aaa
scas
mov
jb
mov
mov
or
test
push
rcll
jecxz
pusha
mov
in
mov
lret
push
lret
jne
mov
sub
ja
cltd
or
cmp
aad
subl
dec
cmp
cmp
pop
xchg
test
jmp
pop
pop
push
pop
pop
push
pop
int
out
arpl
adc
jge
cmp
bound
mov
sub
ret
inc
sti
xchg
iret
test
aas
fisubrs
inc
sbb
xor
popf
pushf
mov
loop
movsb
xor
enter
mov
sub
dec
pop
out
imul
aas
or
sbb
data16
mov
jp
stos
adcl
loope
fwait
nop
add
rorl
mov
cmpsl
sub
or
push
fwait
popf
fwait
jmp
push
add
dec
in
push
jnp
jno
pushl
arpl
rolb
pushf
lcall
ror
cmp
fidivrl
cmp
scas
mov
sbb
pop
lods
ds
fcompl
cld
out
jae
sub
cltd
push
mov
mov
aaa
icebp
jbe
rcr
icebp
aaa
subl
cmpsl
fdivl
adc
sbb
push
push
mov
inc
xchg
xor
inc
cmp
and
repnz
rorl
and
mov
sub
icebp
jecxz
push
ja
mov
xchg
sbb
aas
rolb
xor
jmp
lret
add
mov
aam
or
xor
sbb
lods
test
or
push
data16
pop
mov
fwait
call
movsb
pop
mov
push
cmp
test
jb
lahf
jb
idivl
sub
jle
mov
stos
adc
xchg
mov
out
aad
sahf
shrb
dec
lock
jo
in
dec
bnd
aad
or
mov
or
jae
pop
outsb
mov
iret
cmpsb
or
mov
test
jne
and
mov
test
std
in
movsl
inc
ror
cli
inc
call
rcrb
and
dec
rcl
push
adc
push
aad
dec
lods
int
inc
icebp
inc
push
mov
outsb
in
and
dec
pop
adc
hlt
outsl
vmovupd
sahf
mov
and
cmp
add
xor
pop
xchg
jp
and
jge
mov
fs
leave
int
out
xorl
sub
adc
pop
mov
push
mov
adc
sbb
and
cmp
push
pop
mov
fsubrs
imul
jo
xchg
fisttpl
mov
cmp
add
lahf
pop
je
xor
icebp
iret
add
push
pop
inc
cli
and
jno
cmp
pop
in
stos
fcomip
cmpb
ljmp
outsl
les
or
fcomps
fisubl
pop
xchg
loope
ret
sahf
or
aaa
maxps
leave
imul
loope
rcrl
mov
mov
cmp
and
lret
xchg
gs
xchg
arpl
test
cli
ret
insb
lcall
inc
imul
cld
outsl
sbb
scas
pushf
mov
pushf
out
or
shlb
pop
outsb
ja
add
mov
inc
dec
pop
push
cmpsl
and
cwtl
lret
dec
cmp
rorb
jg
jno
pusha
jle
lds
hlt
push
call
je
ja
jne
cmp
or
stos
out
ss
inc
loopne
xchg
adc
mov
cmpsl
loopne
and
dec
xchg
pop
mov
insl
nop
xchg
dec
idiv
dec
dec
aaa
mov
cmpsb
or
mov
sub
rcll
mov
pop
filds
cmc
loopne
or
cs
sub
into
push
add
repnz
jl
cwtl
mov
fidivrl
cs
xchg
push
mov
and
aaa
or
dec
mov
imul
mov
test
inc
add
adc
je
mov
stos
adc
mov
fidivl
and
mov
pop
push
push
sbb
cmp
inc
sub
adc
outsb
or
je
lcall
scas
test
pop
mov
fcmovnbe
or
jns
pop
dec
jnp
cmpb
in
cmp
pop
imul
lcall
cwtl
movsl
fs
ror
cmpsl
lods
int
call
test
fwait
arpl
xchg
jmp
test
pop
jne
inc
jno
push
cli
mov
or
lret
in
sub
xor
push
jg
mov
rolb
adc
ss
test
sbb
rorl
push
xchg
mov
push
ss
iret
push
xchg
hlt
iret
mov
dec
add
adc
xor
and
ss
mov
dec
jecxz
push
fwait
test
or
adc
push
sub
cltd
pop
mov
mov
dec
or
cmp
add
push
fidivrs
push
sbb
stc
mov
mov
adc
cmpsl
xchg
nop
push
inc
pushf
stos
icebp
cltd
push
and
jo
pop
or
push
popf
sbb
add
and
cli
add
inc
mov
cltd
cmp
jo
jle
add
fnstcw
mov
incl
repz
dec
aaa
ds
add
sbb
jle
adc
jo
mov
js
jmp
xorb
sub
jmp
mov
ret
es
push
test
sar
in
jl
cmp
jb
xor
js
subb
popf
sub
iret
jmp
adc
xchg
std
mov
sarl
adc
mov
loope
and
cld
dec
fistpl
ret
xor
and
in
andl
rclb
es
lcall
push
movsl
or
inc
mov
popf
dec
dec
sub
xchg
and
jne
mov
mov
gs
pop
xor
pop
dec
fisubs
das
pop
or
fistps
addl
xchg
and
add
cli
sub
loop
inc
adc
arpl
stos
jmp
fs
scas
daa
mov
adc
adc
push
add
xchg
pop
popa
arpl
lock
std
add
popa
aas
pop
sahf
xor
cmp
add
jge
in
mov
mov
ja
cli
pop
xor
xor
push
mov
pop
ret
push
mov
mov
lret
movsb
mov
jno
inc
sbb
sti
mov
sbb
xchg
jnp
adcb
stos
or
shll
or
ret
push
pop
mov
imul
pusha
sarl
lret
pop
pop
movsb
call
pop
jbe
data16
imul
sub
jnp
cmc
cmp
test
push
sub
pop
in
mov
cmc
adc
or
std
adc
xchg
jns
stos
mov
xor
pusha
or
xor
cmp
add
imul
insl
jns
clc
stos
cmp
cmovnp
xor
mov
aad
sbb
push
add
jmp
lods
mov
jno
movsb
pusha
xchg
popl
pop
inc
add
lret
loope
and
xlat
sbb
sub
sub
fcomps
mov
jns
shl
jns
dec
xchg
mov
add
add
dec
pop
mov
rorl
dec
inc
dec
sbb
loope
sarl
inc
fcoml
movsb
sbb
jge
pop
push
test
test
mov
fucomip
mov
mov
gs
faddl
push
sub
mov
mov
mov
fs
jno
jmp
jle
add
jmp
cmp
add
xchg
stos
repz
mov
mov
out
sarb
mov
push
je
stos
jmp
jl
in
flds
pop
adc
lods
push
pusha
mov
jae
js
adc
push
fcoml
jecxz
mov
mov
ret
mov
call
flds
push
inc
pop
xor
cmc
add
or
mov
ljmp
into
add
jmp
das
sbb
stos
popa
out
inc
jbe
pop
daa
sbb
rorb
repnz
lahf
mov
jecxz
roll
pop
dec
cmp
and
cmpsb
pop
mov
push
pop
mov
mov
mov
xor
mov
xchg
dec
xlat
cs
mov
insb
sbb
scas
fdivrs
mov
addr16
xor
pop
ja
out
pop
xor
call
sbb
je
push
add
xchg
cmpsl
push
stos
mov
sub
dec
jnp
dec
add
nop
mov
mov
sbb
push
sbb
pop
inc
flds
add
dec
test
int
adc
cmp
cmp
outsl
imul
ret
nop
pop
test
inc
loopne
gs
cmc
movsl
enter
shll
mov
sub
lock
push
lods
add
xor
xchg
les
aad
out
sbb
jnp
push
and
or
ds
push
mov
jg
std
jmp
pop
jb
sbb
jno
lock
js
jns
sub
lods
push
sub
call
pop
pop
pop
cmp
scas
fwait
jmp
scas
sbb
lock
push
xchg
inc
stc
sub
inc
pop
dec
aam
stos
test
mul
cmc
or
clc
fistpl
pop
rorb
cwtl
orl
scas
repz
jg
mov
push
sbb
das
mov
movsl
add
or
jg
addl
sbb
inc
push
aas
out
ss
pop
cs
addr16
aam
sub
subb
push
pop
sti
push
cli
stos
inc
and
push
rcll
jle
outsl
inc
sti
insb
adc
subb
or
lea
and
insb
lahf
sti
jle
mov
int
je
adc
xchg
pop
cli
cmp
testb
mov
leave
arpl
mov
add
sbb
mov
scas
xchg
cltd
xchg
test
add
adc
out
xchg
push
pop
xchg
cli
mov
cmpsb
lret
leave
daa
push
cld
lahf
sub
sti
js
cmp
outsl
pop
insl
lret
cmp
inc
out
aam
hlt
add
imul
and
fsubs
negl
push
dec
push
xchg
dec
xchg
cmpsl
in
xor
stos
adc
out
inc
jp
add
dec
and
imul
adc
ljmp
in
pop
push
int
adc
gs
aam
mov
ds
or
xchg
pusha
les
les
dec
cwtl
nop
xor
xchg
adc
xor
shrl
mov
fdivl
sar
inc
pop
jl
movsl
fists
lods
scas
push
or
aas
pop
pop
mov
mov
repz
popf
cltd
push
je
lcall
mov
pop
jnp
cmc
mov
mov
adc
repnz
mov
cmp
mov
adc
xor
mov
jge
push
adc
dec
push
sub
mov
ret
push
outsl
and
xchg
jae
mov
sti
nop
dec
jbe
mov
cmp
js
mov
push
push
adc
fiadds
sbb
test
roll
mov
push
adc
clc
js
dec
in
inc
inc
add
iret
push
fsts
sbb
lds
sti
jmp
xchg
iret
fmuls
sbb
pop
mov
inc
or
hlt
jo
inc
mov
imul
test
es
jns
xchg
dec
cld
stos
inc
ja
xchg
push
fcom
jo
dec
fucomi
jo
cmp
std
and
pop
decl
dec
subl
arpl
adc
and
data16
gs
test
movsl
jp
jns
mov
cmp
mov
pop
xchg
cmp
jp
and
or
xchg
enter
scas
movsb
cltd
mov
jae
cmpsb
iret
hlt
adcb
fiaddl
add
cmp
in
popf
pop
push
test
daa
neg
mov
test
push
cmp
cmp
pop
movsl
fistpl
mov
push
gs
sbb
mov
push
sub
pushf
je
mov
xchg
jne
mov
mov
jg
aas
pusha
dec
jae
mov
int
push
and
rorb
imul
frstor
and
jb
push
push
jbe
inc
fs
mov
jmp
adc
sbb
std
adc
push
notl
cmp
cmp
jmp
gs
and
mov
out
push
push
pushf
outsb
xchg
test
hlt
rolb
rcpps
cmp
and
je
testl
into
stos
sbbl
sar
xchg
xchg
pop
cmc
in
mov
jmp
lret
jno
les
or
enter
arpl
push
movsl
fstps
pop
pop
mov
or
cmp
lds
mov
and
cld
jp
aam
mov
xor
cld
mov
xchg
mov
jns
fcomps
adc
int
sub
aas
xorl
in
or
push
xchg
fsubl
fsubrl
pushf
addl
jne,pt
sub
push
push
movsl
pop
or
jp
push
fs
xacquire
movsl
insl
cld
mov
divb
ds
repz
scas
pop
dec
sub
orb
enter
mov
push
cwtl
push
mov
movsl
xor
fstl
insb
mov
sbb
mov
test
push
add
and
jle
adcb
inc
xchg
cmc
divl
xor
fs
xor
push
aad
lds
mov
jbe
jp
popa
xchg
adc
roll
cli
sub
dec
add
outsb
outsl
fld
pop
sahf
clc
sbb
loopne
mov
inc
rcrl
pop
outsl
daa
clc
cmp
xchg
cmp
adc
test
int3
push
in
sub
dec
insb
mov
pop
mov
or
sub
loop
and
add
and
lahf
lds
mov
mov
negb
hlt
jl
iret
pop
mov
aaa
aam
cmp
xchg
xor
lods
or
shlb
xor
rcr
xchg
aas
sahf
sbb
test
mov
in
mov
fs
push
xor
sub
testb
dec
mov
ret
insb
cltd
mov
out
call
sti
jge
pop
pop
and
scas
rorb
bnd
pusha
lret
out
xchg
add
orb
fabs
inc
xor
inc
dec
cmpl
sahf
pop
push
sbb
xor
add
mov
ja
pop
pop
repz
pop
lret
push
lret
aaa
and
repnz
gs
cmp
push
sub
and
xor
mov
pusha
pusha
adc
fsubl
xchg
cmp
popl
movsl
fcomps
xor
test
movsb
repnz
or
cwtl
sbb
adc
insb
mov
sbb
sub
sbb
fdivl
in
mov
mov
add
dec
cmp
enter
and
shlb
or
inc
stos
lea
mov
mov
stos
test
lea
xchg
mov
sahf
cmp
insb
fs
call
scas
lcall
push
movsl
jmp
loopne
icebp
jo
sub
jecxz
xor
jae
jb
loopne
js
xor
push
mov
dec
cltd
icebp
pop
dec
sub
inc
mov
xlat
mov
xchg
cmp
mov
pop
ds
push
stos
fimull
pop
shrl
xchg
inc
xchg
dec
or
mov
sti
jne
aaa
lea
pop
sar
loope
adc
cmp
jl
jno
inc
and
repnz
clc
mov
dec
xchg
xor
imull
stos
adc
push
push
xorl
push
inc
xchg
adc
jmp
mov
stos
sbb
std
scas
test
xlat
in
add
pop
xor
mov
sub
adc
push
mov
in
sub
stos
jge
pop
rclb
insb
sub
orb
ror
add
fwait
jbe
ret
in
lahf
dec
fstpl
ljmp
les
call
mov
cwtl
inc
add
push
sbb
lods
stc
ret
int3
push
and
loopne
xor
ds
call
leave
out
daa
imul
adc
nop
mov
xchg
les
fstps
out
icebp
not
fcmovnu
fldenv
adc
mov
imul
int
dec
dec
or
jp
jns
cmp
aas
mov
lds
cmp
arpl
xchg
lods
dec
insb
mov
insl
jle
sbb
push
imul
dec
aas
mov
sti
cmpsb
cmpb
jmp
jp
jb
jg
adc
jp
sbb
sub
push
inc
nop
adc
negb
and
push
cltd
mov
pop
dec
subl
sbb
push
sahf
rorb
std
jp
adcl
pop
add
pop
mov
aam
call
lods
and
adc
popf
inc
mov
dec
dec
aam
mov
push
std
sbb
push
and
mov
mov
sti
mov
cmp
pop
das
sti
movsl
dec
and
inc
test
pop
scas
sti
out
sub
pop
push
pop
in
cwtl
test
sbb
lret
sbb
fwait
test
xchg
xor
movsl
das
jnp
loop
in
pusha
push
xor
pop
mov
add
in
pop
bound
ljmp
xor
icebp
mov
add
call
jecxz
pusha
jo
sbb
in
into
jl
sub
cli
in
rcl
push
jo
dec
in
popa
pop
outsb
mov
repz
push
or
pusha
mov
jg
jle
into
lret
lcall
cmp
add
xor
fisttpl
lcall
loopne
loopne
mov
add
push
xchg
jnp
adc
icebp
stc
mov
daa
sub
inc
add
mov
jne
loop
push
cmc
sub
call
psubusw
mov
dec
mov
cmp
or
cmpsl
xor
add
dec
repz
pushf
xor
dec
sub
ret
std
data16
jae
sahf
scas
dec
addr16
sub
sbb
in
test
test
enter
pop
inc
sarb
cmpleps
stos
gs
dec
mov
imul
or
fcmovb
sub
bound
ficoml
jle
fidivl
in
inc
fistpl
xchg
sub
push
lea
sub
jb
sahf
loop
push
les
dec
stos
mov
dec
mov
aam
pop
add
mov
dec
out
sbb
dec
push
xor
and
mov
fdivrp
or
lret
jmp
xor
test
jle
lcall
sarl
add
pop
iret
ret
or
mov
into
je
push
fnstcw
js
scas
daa
mov
pop
or
inc
add
push
imul
out
dec
cmp
dec
xor
pop
jmp
into
das
or
test
inc
insb
mov
jecxz
stc
cmp
adc
and
mov
dec
sbb
mov
cmp
mov
adc
add
xor
mov
fsub
dec
rorl
and
lahf
jno
mov
xorb
decb
data16
lret
fistps
jns
and
mov
jp
pop
and
dec
loop
fdivr
sbbb
adc
hlt
ds
push
cmp
fldenv
adcl
mov
add
push
xchg
add
or
nop
inc
pop
lcall
imul
sti
fidivs
ss
add
popf
dec
push
xor
cld
pop
cld
testb
lcall
fs
cld
cmc
enter
ss
lea
push
mov
ds
in
test
mov
adc
mov
mov
repnz
cmp
loopne
fimull
pop
pop
sbb
jbe
mov
lods
fwait
adc
imul
lret
ficoms
test
aad
mov
psubsb
pop
add
icebp
push
imul
xor
adc
mov
jnp
dec
adc
leave
push
adc
fld
sarl
rcll
insl
sub
xlat
dec
mov
sbb
out
lret
flds
aam
lret
stc
mov
stc
call
sti
outsb
and
jno
jecxz
dec
sub
inc
mov
ret
xor
push
jg
xor
sbb
shrb
cmpb
daa
mov
push
es
std
jp
les
testb
jbe
mov
pop
fstps
jnp
push
popa
rcl
pop
add
jle
push
xor
js
lret
jg
sub
sbb
repz
pushf
cmp
xchg
add
mov
add
push
aam
xchg
sub
ret
sbb
scas
hlt
shll
mov
sbb
sub
or
std
fiaddl
adc
or
mov
xlat
mov
xchg
sbbb
lods
pop
adc
add
jnp
and
push
xor
push
mov
call
push
or
jb
fsubl
lods
andl
fcomps
xor
pop
lret
fcom
stc
sub
fsubrl
aam
pop
lods
push
push
pop
jl
mov
mov
sbbb
daa
daa
and
jbe
push
sbb
frstor
mov
pop
cli
adc
rclb
jbe
cli
test
mov
mov
jl
es
out
lret
mov
frstor
push
les
lods
dec
iret
daa
jae
faddl
mov
jae
adc
ss
mov
dec
stos
aad
sbb
inc
lock
or
sub
in
lea
mov
out
and
or
fsubrs
scas
in
jnp
push
lahf
and
movsb
lret
pop
inc
and
clc
push
adc
filds
cld
mov
stos
sbb
pop
jnp
jl
mov
pushf
gs
std
xor
insl
cld
sbb
mov
shl
scas
inc
cmc
push
fistpl
mov
add
dec
test
ljmp
xor
mov
into
in
xor
push
or
cld
mov
out
dec
daa
xor
nop
sbb
aam
pop
lods
nop
sarl
bound
outsl
outsb
mov
adc
mov
into
aaa
mov
add
xlat
imul
shr
adc
enter
mov
jne
test
ja
mov
cmpsl
jmp
aas
sarb
out
out
jge
test
pop
sbb
fcomps
fneni(8087
mov
xor
insl
addr16
inc
aas
cmp
add
push
in
mov
xchg
cs
es
cmp
clc
or
loopne
jmp
insl
jl
enter
mov
cltd
lods
iret
fcoml
mov
jle
cs
sbb
pop
lock
xchg
mov
flds
les
aas
xchg
pop
rcll
jmp
adc
mulb
gs
insl
mov
dec
sbb
jmp
and
cs
mov
xchg
lea
into
pop
xlat
mov
dec
hlt
jb
ds
ret
jmp
loopne
adc
xor
subl
jb
cmp
xchg
lcall
mov
std
mov
pop
sbb
insl
mov
imul
and
stos
mov
incl
pushf
mov
jp
mov
inc
jp
pop
outsl
add
pop
lcall
mov
sub
xchg
mov
mov
cld
jb
jo
popf
lods
ret
dec
mov
aas
popa
inc
aam
je
or
mov
aaa
in
mov
js
xor
push
push
and
lods
jge
push
pop
or
mov
mov
ljmp
pop
add
pop
das
mulb
mov
mov
loop
mov
je
subb
repz
sub
jb
inc
sub
ja
jmp
mov
mov
xchg
sarb
add
mov
adc
xchg
and
pop
fldl
xchg
inc
sbb
add
or
jmp
out
jecxz
hlt
test
hlt
roll
dec
out
mov
test
cmp
movsl
das
jne
sbb
mov
xchg
or
add
mov
divl
cmp
push
jp
pop
jo
sbbl
pop
outsl
enter
pop
jmp
or
test
jae
data16
out
popf
push
jge
xor
sbb
enter
imul
outsb
or
or
dec
ja
dec
push
fnstenv
aad
out
aam
shrb
or
xor
mov
mov
push
dec
stos
push
mov
enter
lods
loope
or
dec
aad
shll
push
adc
popa
out
stc
xor
or
dec
cwtl
dec
jge
sub
push
jge
out
mov
adc
scas
test
dec
xchg
ss
test
push
and
push
jo
jmp
aas
mov
clc
dec
sahf
in
jne
mov
mov
jae
cmp
pop
pop
cli
inc
xchg
adc
mov
hlt
inc
lahf
xor
sbb
pusha
or
je
repz
lock
je
fs
hlt
xchg
aas
pop
iret
outsb
sub
fadd
cmp
sahf
dec
popa
sub
jb
lcall
ret
mov
push
pop
ljmp
xchg
je
jle
jo
mov
xchg
adc
fwait
cmp
lods
imul
inc
cli
mov
gs
inc
lcall
xchg
bnd
in
notw
ds
adc
leave
pop
inc
shlb
jne
xchg
int
pop
int3
sbb
jb
and
lea
pop
clc
ss
ds
push
and
popa
repnz
movsl
fisttpl
sub
fwait
insl
fs
cmp
push
sbb
sub
and
lock
into
sbb
rcrl
add
pop
jbe
push
cmp
sub
scas
sbb
push
pop
jnp
ja
adc
pop
and
mov
pop
push
aas
and
mov
arpl
xor
mov
cwtl
ss
addb
jmp
iret
pop
jmp
adc
add
sbb
ret
sub
jno
jg
jo
xchg
insl
sbb
lcall
into
mov
into
popf
int
into
sbbb
ds
jl
push
das
scas
dec
sahf
cwtl
lds
cmp
add
fbstp
fldenv
int
pop
push
mov
add
mov
dec
or
or
mov
negb
xchg
jmp
xchg
push
dec
shl
or
fcoml
shrl
cmpsl
not
push
xchg
addl
repz
cli
cmc
xchg
cmpb
mov
push
or
int
jnp
aas
das
adc
dec
and
sbb
fidivs
lds
js
das
adc
push
jnp
dec
and
addb
jmp
std
add
or
mov
sbb
aas
enter
xor
mov
dec
cli
stos
pop
pop
into
lds
adc
ret
dec
jo
inc
ljmp
pop
sub
and
idiv
stos
lds
sbb
cmp
jg
imul
dec
imul
dec
xchg
idiv
cltd
dec
adc
stos
pop
rcll
mov
dec
push
pop
xchg
pusha
or
loop
test
cmp
and
lret
jo
adc
in
sbb
ja
aam
mov
push
inc
push
add
std
insb
jnp
shlb
fs
jecxz,pn
fwait
daa
repnz
cmc
fs
fwait
popa
cmp
pop
xor
movsb
jns
roll
je
iret
xor
and
inc
lods
pushl
leave
pop
or
mov
mov
out
orl
inc
xchg
pop
cmp
pushf
push
movsl
inc
mov
sbb
pop
xchg
popa
popa
sub
and
lcall
lods
mov
jb
mov
xchg
jg
push
xor
fmuls
adc
lcall
and
repnz
ret
enter
push
pop
ja
pop
mov
int
inc
sbb
pop
aaa
mov
adc
dec
xchg
adc
mov
js
gs
add
out
or
loope
dec
aad
mov
dec
mov
or
mov
in
nop
in
mov
outsb
loop
adc
inc
jle
je
les
adc
add
std
lret
mov
pop
movl
subb
stos
je
xchg
js
cld
in
pop
fisubl
vdivsd
xor
es
mov
bound
or
mov
xor
nop
jb
and
jmp
jmp
inc
arpl
mov
ret
mov
lcall
fadd
cmp
mov
jmp
ret
mov
test
mov
lods
imul
daa
add
cltd
shrb
xor
push
adc
jnp
add
pop
xchg
sub
inc
loop
cltd
pusha
mov
fidivrl
sbb
test
xor
dec
daa
dec
jnp
fcoms
jbe
into
push
dec
fdivl
stos
cmpsl
sti
inc
es
aad
ret
mov
mov
rcl
mov
pop
jno
frstor
rolb
cmpsb
test
cmp
outsb
jmp
push
lock
sub
jne
in
fildl
fnstsw
xchg
or
movl
ret
fimull
inc
pop
data16
iret
mov
add
xlat
jg
inc
mov
stc
das
and
mov
push
ss
xorb
adc
xor
in
in
push
lea
insl
adc
push
and
movsl
lods
mov
lds
xchg
xorb
dec
sub
jle
xor
push
sbb
adcl
imul
pop
push
pop
mov
testb
mov
ret
jo
imul
push
into
adc
fcoml
bound
mov
enter
fdivp
cmpsl
ds
loopne
xchg
mov
mov
inc
in
out
inc
mov
jae
mov
cmp
imul
in
xor
das
mov
dec
mov
add
addr16
dec
cs
test
icebp
jae
sti
add
lea
add
add
jb
adc
mov
add
lea
mov
push
sub
out
inc
xor
jae
mov
mov
jge
testl
iret
sub
addr16
push
push
popf
dec
xchg
push
mov
inc
notl
mov
add
push
or
mov
and
inc
in
add
xor
lahf
fsts
arpl
jp
xor
sbb
sbb
into
jle
lea
stc
jg
cmp
xor
jl
and
dec
dec
movsb
sahf
ds
shl
nop
mov
cld
mov
bound
call
pop
fwait
mov
cmp
movsl
xchg
rcr
xchg
mov
push
mov
pop
jne
repz
jg
cmpsl
in
outsb
idivw
sbb
out
adc
fistpll
push
daa
adc
xchg
data16
shl
sbb
dec
neg
mov
mov
lea
ficoml
jmp
stos
push
or
mov
jg
jns
pop
mov
jecxz
les
loope
cltd
xchg
inc
xlat
pop
mov
dec
xchg
xchg
mov
cmp
dec
imul
push
pop
lods
jb
movsl
xor
mov
pop
xchg
rorb
pop
cwtl
sbb
lea
xchg
dec
mov
adc
push
push
pop
mov
pop
sub
scas
sub
sbb
fildll
gs
pop
push
dec
je
lcall
orb
mov
repz
adc
and
xor
in
gs
mov
scas
mulb
pusha
cmp
mov
add
sub
sbb
data16
mov
test
mov
ljmp
and
mov
hlt
inc
mov
int
dec
adc
lret
rorb
cs
sub
fstpt
and
cmp
mov
jne
mov
dec
aaa
imul
jl
out
mov
nop
sti
jg
jo
push
mov
ret
xchg
cmp
inc
aad
lock
ror
jp
jge
test
jno
sub
nop
inc
lea
int
jb
jb
rcrl
fwait
xchg
inc
in
inc
inc
das
push
out
les
daa
into
rorl
xor
cwtl
sub
sahf
mov
out
sti
shrl
out
pcmpeqd
add
adc
xchg
bound
in
lods
dec
cmp
lea
jge
out
lock
mov
mov
sub
popa
jne
mov
in
mov
add
loope
jb
mov
sbb
outsl
loopne
ljmp
add
aas
pop
cwtl
pushf
popa
pmaddwd
push
cmp
jecxz
lret
ljmp
xor
sub
mov
mov
pop
push
adc
callw
hlt
push
repz
inc
push
lds
mov
in
pusha
mov
popf
cltd
test
not
push
pusha
stos
xchg
dec
push
pop
xor
pop
out
roll
xor
ja
fcompl
push
and
hlt
mulb
pop
inc
aas
jne
jg
cmc
mov
inc
xor
ficomps
or
lea
push
popa
ret
insl
testb
int3
sbb
fidivl
mov
sub
enter
cmp
aaa
mov
add
dec
jl
jns
scas
ss
stc
lds
inc
mov
mov
fidivrl
xchg
mov
dec
fwait
movsl
inc
fnstcw
dec
jbe
loopne
bnd
das
jne
ja
aad
addb
mov
lret
mov
sub
ret
aam
add
mov
rcrb
cmp
shlb
int
push
pop
push
add
or
xor
or
mov
sub
dec
fwait
mov
mov
xchg
out
jg
aaa
cmpsl
cmp
lea
stos
cmc
sub
push
dec
push
mov
imul
push
inc
and
mov
cmpsl
shll
pop
outsl
gs
enter
push
pop
cld
jp
ljmp
xchg
cld
aaa
loopne
mov
pop
jo
andl
cmc
push
sbb
jnp
sbb
rcrb
loopne
testb
cmpsl
icebp
repz
and
pop
int
iret
call
or
dec
js
int3
stos
rorl
mov
lock
repnz
sub
andl
into
daa
pop
fildll
sub
dec
xor
xor
cmp
in
test
and
test
mov
scas
cmp
mov
xchg
in
jg
jnp
test
inc
dec
inc
push
enter
sbb
add
jle
int3
shr
dec
push
repz
mov
cmp
xor
push
xchg
ja
lock
inc
clc
pop
xchg
cmp
mov
lahf
push
mov
stc
dec
cmp
sbb
mov
xchg
in
mov
sti
xor
aad
jno
push
mov
xor
mov
stc
xchg
outsl
mov
add
xchg
insl
mov
sub
xor
outsb
cmp
das
mov
mull
movsl
clc
in
iret
leave
xchg
addl
jg
push
xchg
and
and
cmp
xor
out
int3
inc
jmp
add
insw
orl
mov
cli
adc
xor
xor
jne
sub
cmp
pop
aas
mov
push
clc
lret
movsl
and
orps
loop
aad
dec
cmp
lret
movsl
mov
jb
fwait
push
pop
and
jo
dec
jns
jg
or
ret
jl
lret
jbe
lods
inc
pop
dec
mov
ret
aam
shlb
pop
xor
cmpsl
repz
mov
shlb
insb
sbb
lods
in
movsl
fistpll
shrb
cmpl
repz
cmp
push
dec
shrl
mov
push
in
pop
outsb
je
das
inc
cli
daa
or
push
jb
jl
pushf
cmp
and
fcoml
in
pop
push
pop
pop
inc
inc
stos
adc
icebp
subl
lods
inc
loopne
sbb
icebp
jns
stc
push
sbb
dec
das
inc
imul
and
arpl
imul
movsb
push
mov
adc
sbb
xchg
out
sub
outsl
mov
pusha
and
aam
and
and
cmp
sub
pop
jp
inc
sbb
into
xor
xor
add
pushf
cmpsl
movsl
jmp
cmp
mov
mov
xor
arpl
push
sbbb
sub
add
pop
mov
add
loopne
shrl
dec
sbb
lods
sub
icebp
add
ljmp
mov
popl
and
lea
inc
pop
fs
aad
jmp
sub
xchg
inc
mov
insl
sub
out
add
andb
mov
cli
xor
popa
push
fnstsw
cmp
outsb
lea
sbb
mov
push
jg
jno
xchg
adc
inc
cwtl
in
stos
adc
mov
or
cmp
pop
cmp
je
fnstcw
jp
mov
das
sub
push
push
test
jnp
aad
xchg
xchg
xlat
jne
adc
clc
dec
mov
out
sbb
rcll
sti
mov
pop
in
mov
xchg
cmp
mov
mov
jnp,pt
inc
test
cmp
inc
popa
mov
xor
js
rorl
add
aam
jl
and
cmpsb
icebp
fwait
into
movsl
pop
and
xor
sub
gs
fstps
push
mov
je
fnstsw
cmp
popf
stc
out
cwtl
stc
rorl
roll
and
testl
mov
lds
mov
push
push
jo
xchg
outsl
imul
jge
repnz
xchg
mov
idivl
cmp
adc
cltd
enter
inc
popl
enter
cmp
adc
xchg
push
fstpl
jbe
bound
dec
fsubrl
pcmpgtw
pop
sbb
jbe
arpl
fnstenv
add
and
or
sbb
push
and
loopne
mov
and
arpl
jo
stc
in
mov
xchg
mov
test
and
insl
outsb
sub
ret
add
daa
ret
clc
jle
imul
notl
daa
lcall
les
adc
and
stos
push
pop
dec
lea
mov
fs
mov
jbe
std
pop
mov
dec
mov
lock
dec
rorl
popf
dec
xchg
push
test
pop
aad
fucomi
sub
loop
lret
and
xorl
or
xchg
pop
jae
mov
ret
pop
dec
mov
xor
popf
xchg
inc
movsb
testl
popa
push
push
push
bound
adc
fistpll
dec
inc
add
push
fistl
mov
hlt
pop
cli
adc
push
aad
push
sub
adc
aam
xchg
inc
dec
or
and
sahf
outsb
pop
pop
leave
andb
cli
sbb
out
jp
lahf
mov
jle
scas
aad
movsl
jecxz
imul
cli
sahf
dec
lds
push
xor
inc
mov
and
adc
xchg
cld
in
jb
cld
dec
imul
ljmp
add
add
mov
and
dec
int3
xor
gs
call
dec
ret
inc
mov
dec
mov
cmp
add
daa
bound
hlt
lods
mov
push
adc
popf
or
mov
mov
xor
sahf
push
inc
pop
pop
ficoms
test
sahf
repz
mov
outsb
test
notl
push
jle
pop
inc
jmp
aam
rolb
out
jmp
popf
xor
mov
inc
std
push
xor
add
adc
and
xor
int3
dec
mov
push
pushf
xchg
xchg
loopne
mov
in
ja
subl
nop
push
rol
fildll
jbe
lods
cvtdq2ps
inc
ret
or
fidivrs
jae
mov
outsb
loopne
or
add
sub
mov
and
ret
dec
xchg
fcmovnu
shrb
aam
pop
cmp
xchg
push
aaa
mov
cmp
addl
pop
ret
xchg
push
test
dec
mov
mov
xor
lahf
arpl
test
popf
negb
add
mov
sbb
js
test
sub
jp
pop
popa
pop
xchg
mov
cmp
mov
push
adcb
xchg
pop
ficompl
enter
fsubrs
in
repz
hlt
dec
add
push
sub
cli
mov
inc
imul
add
sbb
pop
mov
sub
mov
xchg
out
adc
cmp
xor
cmpb
mov
pop
insb
sbb
adc
icebp
jle
or
insb
loop
in
insl
insb
insb
leave
aas
inc
jge
aam
lret
cmp
push
fwait
dec
jg
in
imul
fsubrp
cwtl
imul
into
divl
pop
cmp
mov
call
mov
pop
or
int
cmp
in
inc
sub
and
sbb
aaa
push
push
push
adcb
rolb
and
mov
push
sub
jle
call
ja
sub
jp
mov
fs
roll
push
jne
arpl
mov
hlt
mov
jb
test
ds
xchg
int
xchg
pop
cmc
ja
repz
iret
lcall
les
fsts
gs
icebp
mov
mov
hlt
ljmp
les
inc
pop
jns
sbb
mov
decl
push
xchg
sbb
push
sub
sub
push
jb
insl
in
lahf
lods
or
and
or
cli
incb
scas
push
inc
push
mov
xchg
data16
std
arpl
popf
rcr
mov
pusha
mov
mov
int
cwtl
mov
lahf
loope
lea
or
cmp
xor
ljmp
adc
ljmp
dec
inc
and
lds
je
cmp
sbb
fisubl
add
sub
cmpsb
cmp
inc
jg
ss
push
test
mov
lea
fstps
mov
jecxz
cmp
icebp
or
aas
jbe
jmp
mov
mov
inc
dec
mov
inc
push
fincstp
xchg
mov
mov
sbb
scas
fisubs
dec
cmp
push
and
ret
mov
cmpsb
fistpl
dec
jnp
jb
mov
mov
stos
imul
dec
jp
imul
sbb
leave
lods
lods
pushf
subl
pusha
out
pusha
sub
mov
pop
test
popa
ja
cltd
mov
sbb
jnp
test
cltd
jg
into
cmpsb
sub
mov
imul
adc
jl
scas
shrb
inc
stos
lea
lods
movsl
sbbl
movsl
loop
out
cli
cmp
sti
sbb
add
test
push
push
test
xchg
xor
testl
into
cmpb
xchg
xchg
mov
stos
mov
jns
out
mov
xchg
repnz
stos
inc
stos
cmpsl
adc
sarb
cmp
je
sub
repz
jmp
mov
lret
sbb
jp
jns
pop
or
jg
lret
xchg
inc
mov
shll
cwtl
dec
inc
sbb
pusha
popf
popf
xor
shll
pop
out
sub
sbb
aam
push
push
out
xchg
lods
pop
sbb
outsb
sbb
dec
cmp
adc
or
es
xchg
out
mov
jno
mov
fwait
jo
mov
fistps
js
push
push
and
dec
lret
repz
lret
int3
test
mov
adc
aaa
cwtl
pop
push
jp
cmp
mov
sbb
je
sbb
popf
jge
add
inc
pop
sti
movsb
pop
jp
pop
popa
jge
test
pop
push
add
sub
inc
pop
mov
lods
sarl
dec
inc
dec
out
dec
jbe
xchg
pop
clc
adc
push
adc
mov
ficomps
outsl
xlat
movsl
scas
cmp
fwait
mov
clc
notl
add
negl
xchg
hlt
cmp
mov
mov
mov
cmpsl
mov
xchg
jge
rorb
sub
call
cmp
fcoms
int
outsl
es
mov
xor
stos
sub
jmp
ds
popa
lret
mov
add
arpl
sub
js
dec
fistl
rolb
mov
sbb
push
fisubrs
add
out
push
rorb
xor
xchg
clc
jbe
add
ja
push
mov
sub
clc
scas
pop
gs
mov
jb
cmp
xor
ficompl
adc
cmpb
xor
sbb
repz
sub
adc
add
pop
roll
inc
mov
stos
and
out
pop
xchg
inc
or
xchg
fs
add
call
sahf
dec
xor
ljmp
cli
in
les
int3
xor
sub
push
or
test
jne
clc
cmpsb
popf
ret
icebp
test
and
mov
mov
xor
or
pop
inc
pushf
scas
mov
ror
jle
cmp
aaa
and
test
cmp
call
pusha
xlat
decb
mov
and
arpl
sbb
ret
or
popf
cmpsb
pop
in
jno
sub
xchg
xchg
lahf
inc
fs
cld
fs
jne
in
lret
std
mov
insb
cmpl
mov
sbb
out
sbb
mov
jp
mov
loopne
fwait
into
pop
cmp
ror
in
xchg
mov
fidivs
scas
adcb
stos
mov
inc
inc
sar
pop
mov
pop
cmp
mov
aas
jae
insb
clts
jl
fwait
mov
xchg
xchg
dec
add
stos
adc
xorb
pmulhw
pushf
pop
xor
mov
pop
mov
pop
jp
pop
fcomp
xchg
icebp
inc
mov
clc
sahf
cmp
js
inc
rcll
out
xchg
dec
pop
pop
cmp
pushf
out
gs
enter
cwtl
xchg
loope
add
mov
call
arpl
outsb
movsl
scas
into
in
cmp
daa
mov
push
in
in
sub
mov
inc
adc
push
fstpt
les
xchg
mov
loopne
in
imul
sbb
pop
add
dec
cli
mov
ja
les
push
xchg
and
pop
loopne
test
push
xchg
inc
inc
movsb
pop
mov
mov
imul
xchg
fwait
hlt
iret
sbb
inc
xor
sub
lret
test
lock
popa
lods
test
adc
inc
out
outsb
jmp
cmp
cltd
popa
adc
in
aaa
orb
ja
test
scas
scas
and
jp
mov
mov
testl
in
aaa
adc
mov
mov
aad
loop
and
pop
lock
dec
lret
icebp
sub
xchg
jge
lret
adc
dec
out
lock
cli
lea
mov
sahf
mov
sahf
push
rcll
mov
daa
loope
fcmovnbe
xor
jl
mov
popf
test
adc
xor
xchg
add
dec
or
daa
push
mov
add
dec
xchg
jmp
push
bound
daa
add
xchg
negb
ds
xor
fs
lock
subl
inc
jbe
test
int
adc
mov
lods
cmp
pop
andl
pushf
and
fistpll
mov
lods
mov
inc
lods
mov
lock
rol
into
add
negb
sub
jne
mov
stos
stos
les
pop
inc
cli
test
sub
jle
imul
out
sub
std
das
cmp
cmpsl
push
icebp
and
push
push
divl
pop
cmpsb
outsl
or
mov
sarb
es
cmp
adc
fcmovnbe
and
cmpsb
xchg
xorb
mov
push
stos
iret
movsl
arpl
fmuls
and
in
jl
jnp
pushf
push
xchg
stos
inc
sub
data16
faddp
fstpl
jb
out
ficompl
inc
loope
iret
cmp
iret
sti
loopne
push
mov
xchg
imul
mov
loop
out
fwait
in
mov
inc
ret
pop
fmul
jp
cmp
test
out
cwtl
dec
push
pop
adc
cmpsb
xchg
jae
add
jbe
movsb
cld
push
inc
rep
mov
adc
cmc
jae
xchg
push
mov
adc
add
xchg
imulb
je
dec
cld
xchg
out
xchg
insb
cld
add
cwtl
rorb
dec
lods
mov
cmpsb
sbb
out
orb
dec
add
nop
ljmp
xorl
jns
push
pushf
lods
out
fwait
loopne
aad
xchg
sub
rcpps
loope
mov
mov
repnz
push
xchg
sub
int3
cmp
scas
xchg
add
push
inc
cmpl
mov
add
mov
sub
inc
sbb
ljmp
jb
neg
jbe
popf
cmp
xor
addr16
push
pop
sub
push
cli
ljmp
shr
jmp
dec
lret
stc
ret
and
dec
or
aam
push
adc
fisubrs
orb
inc
into
fdecstp
add
lds
push
pop
movsl
idivb
inc
sub
imul
push
mov
jb
mov
clc
inc
add
xor
leave
and
jp
pushf
xchg
inc
xor
mov
daa
out
enter
nop
sahf
xor
aam
pminsw
aaa
lret
sbb
push
dec
mov
fidivrs
popl
nopl
pop
and
jmp
ljmp
push
mov
imul
jl
xor
or
jne
test
mov
les
mov
push
ret
push
out
pop
push
inc
fcoms
int3
xor
fs
sub
mov
aas
hlt
adc
xchg
jg
jae
dec
lahf
or
fildl
movsl
xor
rcll
ja
sbb
adc
repz
inc
popf
arpl
icebp
mov
xor
shlb
push
mov
dec
xchg
xchg
push
jp
push
movsb
test
sbb
ja
aaa
xor
inc
sbb
and
cmp
js
sbb
shr
mov
divb
mov
mov
cmpsl
inc
shrl
push
sahf
stos
addl
push
add
inc
insb
mov
lock
jmp
movsb
xchg
jb
and
in
dec
mov
mov
imulb
mov
xor
in
xorl
out
adc
mov
inc
or
inc
jmp
xchg
inc
mov
mov
adc
rorb
lea
mov
pop
push
pop
insl
push
iret
jo
dec
in
aaa
ja
xchg
in
sbb
add
es
clc
xchg
das
inc
and
enter
cwtl
fsubrl
loope
add
in
mov
fistl
fsubrs
pop
loopne
lcall
sarb
mov
daa
xchg
mov
dec
hlt
add
mov
aad
adc
cltd
jne
mov
xchg
push
lret
test
fildl
push
pop
pop
cwtl
loopne
jl
xchg
cmpsl
jnp
sbb
dec
mov
mov
xchg
icebp
xchg
sub
xor
pop
push
mov
leavew
leave
xor
pop
das
xor
mov
pusha
xchg
and
lock
sub
stos
inc
mov
call
call
fdivrs
rclb
xor
mov
cli
dec
pop
dec
sbb
sbb
lods
stos
and
push
idivl
cmp
pusha
jne
into
mov
adc
xchg
mov
shl
adc
add
pop
cmp
push
call
mov
push
cmp
sub
mov
or
scas
fwait
adc
mov
test
and
subl
jbe
test
repz
xchg
add
pop
adc
xchg
cmp
xor
mov
lahf
rol
out
enter
mov
push
lock
stc
push
cld
cmp
xchg
push
mov
lock
jns
mov
cmpsb
enter
leave
pop
lods
xor
mov
cmp
push
lahf
dec
mov
mov
test
xchg
push
out
xchg
add
mov
cwtd
fbld
add
dec
insl
inc
add
sbb
fcompl
mov
call
bound
rclb
aam
and
cmp
loope
scas
sbb
sbb
push
stc
push
vmovddup
mov
cmp
insb
in
arpl
pusha
xchg
rorb
ss
xor
xor
xor
fnstenv
push
and
jle
or
test
xor
or
mov
out
cmpsb
inc
sbb
int3
mov
jge
scas
fsubr
icebp
push
enter
mov
cmp
push
xlat
mov
in
cmp
mov
inc
sbbl
aas
mov
mov
push
cmpsl
xchg
neg
push
insl
scas
in
add
bnd
cmp
push
push
push
jne
decb
jae
mov
and
fs
sbb
xchg
enter
push
fcoml
sbb
popa
xchg
bound
in
scas
mov
scas
sahf
mov
sub
jg
out
and
jle
into
insb
nop
mov
mov
popa
mov
mov
adc
in
or
call
shlb
int3
popf
roll
in
jecxz
inc
lret
lods
into
adc
icebp
cmp
in
stc
cmp
or
xchg
insl
push
cmp
decl
jl
xor
fdivrl
pop
xor
inc
fisubrl
popf
cmp
divl
iret
lds
inc
rolb
mov
adc
cmc
movsb
push
ja
xlat
stos
pop
lret
cld
frstor
test
adc
cld
push
in
dec
or
insb
js
loope
clc
or
xchg
out
push
xor
les
stos
pushf
or
lds
xor
es
aad
add
daa
cmp
imul
inc
sbb
rolb
inc
stos
xchg
negb
jl
fcoml
adc
dec
mov
ljmp
insl
out
ja
shl
mov
neg
lret
lock
aam
cmp
inc
add
add
cld
xchg
movsl
lahf
rclb
ljmp
enter
jne
popa
jne
add
cmp
in
hlt
sbb
dec
mov
lahf
hlt
in
sub
inc
cmpsb
imul
inc
clc
addr16
or
adc
and
jnp
arpl
test
xchg
xor
les
rorl
add
mov
add
or
repz
jg
sub
int
test
inc
mov
xchg
in
out
sbb
pop
fnstcw
xchg
cmp
xor
insl
cmp
std
mov
stos
into
dec
push
adc
lea
mov
jbe
jg
push
jle
mov
addl
xchg
std
pop
adc
add
jns
cmpsl
aaa
xchg
aam
stos
pop
or
pop
leave
xchg
or
fsubl
scas
aam
sub
stos
mov
pmulhw
fwait
imul
movsb
cwtl
inc
sub
lcall
gs
pop
cmpl
loope
in
jbe
add
repnz
push
jns
mov
mov
ss
sub
mov
clc
movsl
or
add
xchg
lret
hlt
inc
mov
pushw
daa
dec
mov
popa
xorl
adc
scas
jg
adc
lahf
cmp
push
push
sub
sub
and
add
dec
xchg
inc
mov
and
mov
fistpll
push
pusha
jns
lret
scas
push
testb
std
aaa
jle
cmovs
sti
jo
test
pop
es
fdivs
test
mov
xor
jnp
hlt
xchg
adc
shll
arpl
push
jmp
into
rcr
inc
ds
cmp
aam
xchg
cmp
test
push
fwait
or
jb
mov
notl
mov
mov
into
inc
push
notl
adc
mov
pop
xor
push
lcall
sub
mov
xor
jae
shlb
dec
shlb
or
insb
cmpsb
testb
adc
clc
dec
cmpsb
jb
orb
pop
ss
pop
mov
aaa
ret
mov
dec
daa
xor
rcrb
pop
sti
repz
out
insb
inc
inc
jno
nop
pop
bound
cwtl
cmp
jmp
testl
fisttps
xor
data16
mov
xor
or
sub
adc
mov
jge
adc
lods
std
popf
push
push
addb
and
and
cmp
sbb
sub
or
xor
lods
jg
cltd
push
xchg
rorl
mov
aas
in
loop
jns
cmp
daa
test
jecxz
pop
dec
mov
sti
orl
mov
daa
fsubr
push
mov
pop
xlat
cmc
xchg
sbb
jo
rorl
pop
aad
test
and
or
add
jle
add
dec
jo
push
lea
dec
jl
xor
jmp
mov
int3
lods
inc
jmp
jge
xchg
popf
ss
fdivrs
lods
fimull
dec
and
stos
cmpsb
push
jmp
test
dec
add
sub
push
sbb
sub
push
sbb
daa
repnz
andl
dec
loope
and
jae
mov
inc
mov
and
dec
cli
fbld
int
dec
and
cltd
or
xchg
jne
dec
pop
mov
jns
ficomps
xchg
dec
in
nop
inc
push
add
int3
loopne
int3
cmp
cmp
mov
sub
idivl
outsl
ret
push
es
cwtl
inc
out
aam
pop
test
inc
inc
sti
cmp
enter
lcall
fisttpl
jg
in
out
xchg
and
fnstenv
add
cmp
stos
xlat
lds
daa
std
ret
sbb
ds
in
lods
xlat
xor
idivb
lods
mov
loope
lcall
std
inc
aad
aaa
dec
sbb
popa
mov
mov
das
clc
and
fs
fistps
mov
jns
cmpsb
jns
and
test
and
xchg
push
call
cli
mov
push
ret
mov
in
jge
cmp
jb
stc
and
lods
jmp
cs
mov
xchg
out
hlt
pop
sub
lahf
push
pop
jbe
jl
push
mov
loope
push
cs
sbb
push
test
in
xor
inc
in
mov
cli
inc
push
mov
xor
aam
orb
sbb
shrl
mov
xor
jmp
mov
mov
inc
pushf
sarb
aas
and
arpl
mov
cmc
and
xor
jle
sub
data16
inc
lret
cltd
cmp
pop
jg
jns
mov
out
pop
jo
mov
mov
out
daa
mov
mov
popa
cltd
or
cltd
adc
adcl
daa
imul
mov
imul
pop
push
cmc
insl
xchg
jo
fwait
cmp
push
pop
repz
sahf
imul
push
rolb
fnstsw
stos
out
sub
stc
mov
push
int3
mov
mov
fildl
fbstp
xchg
in
add
dec
adc
insl
xchg
decl
orb
shr
and
lret
add
stc
xchg
xchg
test
jmp
movsb
mov
mov
and
mov
rcll
daa
mov
out
or
sbb
test
insb
daa
insb
jae
jmp
inc
fcom
in
cmp
rorb
or
fs
xchg
mov
dec
hlt
jae
xor
push
ljmp
push
xchg
fsts
mov
push
jmp
daa
and
mov
adc
sub
jnp
push
fs
xchg
push
scas
mov
test
mov
lcall
xchg
jle
adc
fdivrs
fmull
xchg
fists
out
lea
sti
sbb
mov
xchg
repnz
or
popa
or
pop
push
cmp
xchg
cmpsl
sarl
adc
dec
pop
test
repnz
ss
cli
adcl
stos
fisttps
xor
push
mov
add
cwtl
jae
dec
mov
out
or
push
adc
mov
in
lahf
mov
int
jbe
jbe
and
add
sub
mov
test
scas
add
inc
fadd
lock
ja
sbb
sub
mov
inc
mov
jns
sahf
or
pop
pop
jle
hlt
mov
xor
es
mov
fsubp
pop
outsl
movsl
insb
and
int
pop
sbb
cld
repz
sarl
push
adc
push
ret
pop
cld
mov
scas
rcl
sub
sub
shl
pop
repnz
mov
add
es
lock
arpl
pushf
xchg
repz
arpl
add
int
xchg
sti
xchg
test
xchg
add
xchg
xchg
adc
inc
push
add
mov
mov
pop
sbb
add
lret
or
dec
addl
cmpl
inc
mov
xchg
cmp
pop
xor
xor
shr
outsb
outsb
inc
or
sbbl
dec
repz
jmp
cld
sbb
rcr
pop
xchg
lock
pop
xchg
jp
add
lahf
dec
pop
stc
aam
cmpsb
jnp
mov
xchg
jne
pop
sarb
jmp
jnp
and
sti
cmpsl
shr
fisttpl
inc
int
fcmove
test
fldt
pop
push
lea
int3
repnz
cmpsl
orb
icebp
push
in
movsb
test
enter
push
mov
aam
cmpl
xchg
enter
xchg
ja
jg
loope
sub
mov
movsl
ljmp
and
stos
das
pop
call
mov
pop
nop
test
inc
rcrl
push
pushf
aaa
cmpsl
sub
in
add
out
cld
aaa
jb
jnp
push
adc
jecxz
movsl
pop
rclb
nop
inc
rcll
xchg
add
adc
jne
and
ret
sbb
dec
xchg
ljmp
int
scas
mov
lds
adc
mov
cltd
mov
dec
cmp
mov
xchg
cld
adc
mov
xor
into
fwait
xor
or
xor
pop
add
fwait
or
mov
fbld
cmp
repnz
movsb
inc
loopne
loope
repnz
mov
test
mov
xor
push
or
dec
mulb
dec
cmpsl
sbb
fsubs
mov
cs
mov
js
jp
push
xchg
jnp
dec
lcall
ret
popa
loope
pop
scas
enter
in
mov
loopne
pop
adc
insl
icebp
sti
fsubrs
or
in
xor
pop
sbb
xchg
or
out
sbb
mov
mov
adc
scas
mov
dec
pop
jl
xchg
jmp
jns
in
stos
out
dec
pushf
sub
jne
push
mov
lods
dec
xchg
push
insb
insb
push
scas
and
add
loopne
jecxz
imul
push
pop
scas
add
lret
xchg
out
iret
mov
mov
pusha
cmp
shl
mov
imul
cmp
sti
inc
leave
movsb
sbb
lret
xor
call
dec
jmp
pop
ds
iret
out
daa
lret
in
cmp
sub
pop
fisubs
imul
jbe
icebp
push
push
bound
add
ja
hlt
in
mov
push
dec
or
cmc
inc
xchg
or
iret
jmp
inc
fisubrs
lock
bound
xchg
inc
xor
adc
jnp
sbb
cmp
xor
and
stos
pop
hlt
fsts
pop
jne
arpl
mov
jnp
bnd
rorb
je
jno
mov
hlt
lahf
rorl
fstpl
test
cli
cmp
inc
in
int3
cli
jae
aaa
sbb
orl
ret
mov
xchg
fdivl
xor
lods
mov
mov
mov
and
xchg
sahf
lcall
and
xchg
iret
pusha
inc
xchg
adc
jle
and
adc
push
or
mov
popa
stos
mov
xchg
mov
push
push
add
std
in
mov
inc
jle
out
mov
js
jnp
jns
lret
dec
out
sbb
aad
mov
pop
xchg
mov
jb
push
mov
mov
adc
pop
in
mov
cs
cltd
add
xlat
lea
mov
dec
fiadds
ljmp
jne
inc
in
loopne
push
pop
insl
sub
cs
add
pop
xchg
std
repnz
cltd
sbb
dec
cmp
andb
out
and
xchg
xor
cs
inc
sti
addr16
xchg
testl
daa
and
outsb
sub
pop
outsb
mov
lods
add
push
adc
add
inc
inc
inc
repnz
stos
sbb
push
dec
mov
inc
and
adc
pop
div
repnz
les
jns
cmpsl
mov
daa
dec
adcl
pushf
fildl
fnstsw
dec
out
lods
daa
sbb
xchg
fdivrs
and
imul
lret
imul
sbb
mov
data16
jnp
sub
and
pop
jns
fsubrl
add
fdivrs
sub
xor
insl
bound
sub
out
in
cmp
rcr
cmp
rolb
mov
xor
push
sbb
icebp
insb
loop
rclb
mov
push
mov
aas
sub
hlt
cs
data16
dec
rep
loopne
or
xchg
or
or
mov
xchg
cmp
mov
jle
shlb
add
push
mov
movsl
arpl
lcall
in
lret
xchg
insb
jg
ljmp
repz
xchg
sub
nop
push
jle
xor
mov
pop
aad
mov
les
dec
jl
mul
sti
aad
in
daa
fsubl
sbb
pop
pop
xchg
shlb
dec
sbb
push
call
or
cmpsb
cmc
pop
dec
sbb
xchg
xchg
jno
sbb
inc
sbb
pop
orb
and
jmp
cmp
scas
add
xor
shrd
scas
xchg
ss
aas
adc
or
push
pop
cmp
loope
pop
xlat
dec
fstl
mov
mov
adc
and
adc
pop
subb
mov
fs
popa
fbstp
jp
dec
sbb
clc
andb
int
pop
test
cmp
mov
add
dec
push
rcrl
sahf
cwtl
repz
sbbb
cmp
cmp
inc
leave
pop
lods
xor
push
movsl
pop
stc
jge
fcmovbe
xchg
cmp
je
std
mov
loop
xlat
cwtl
pop
add
sbb
add
ret
int
out
dec
bound
insb
icebp
out
pop
cmp
cwtl
add
out
push
push
lahf
pop
stos
lock
addl
push
cmp
cwtl
jne
cmp
mov
mov
fiaddl
cmp
adc
and
scas
sti
mov
xchg
mov
cmpb
scas
test
sub
jb
xor
stc
pop
cs
mov
arpl
movb
mov
pop
sub
and
mov
and
nop
and
push
fld
inc
adcl
push
jge
rorl
out
int
faddl
push
jl
rcrl
ficoms
mov
fsubs
inc
xor
jb
ss
push
jne
and
ret
ds
jno
jle
mov
sbb
add
adc
addr16
mov
add
push
loope
das
sub
repnz
imul
add
mov
lcall
fadd
dec
sbb
inc
jg
scas
je
or
aas
fnstenv
xor
cs
lods
jecxz
mov
rclb
fs
push
repz
jecxz
stos
fcmove
into
jbe
outsl
cwtl
jle
aad
lret
pop
dec
mov
add
cltd
negb
cmc
pop
je
pop
push
cmp
imul
into
xchg
stos
dec
adc
lahf
dec
nop
cmp
cmpsb
sbb
jo
lds
lahf
adc
mov
and
mov
loope
repz
mov
xchg
inc
adc
push
xor
enter
loope
jg
mov
test
rorl
movsl
test
xor
lcall
xor
push
xchg
sbb
sbb
rcr
dec
ds
sti
dec
add
stos
jmp
dec
je
sub
je
mov
push
pop
dec
jno
testb
jae
mov
ja
inc
ret
push
cmp
jnp
je
xor
mov
in
stos
enter
push
mov
cmpl
leave
pusha
inc
jno
scas
mov
mov
int3
mov
pop
xchg
push
mov
std
ficoml
inc
mov
lock
xchg
push
lret
mov
arpl
jno
xchg
andb
xor
xchg
cltd
pop
pop
add
mov
fisttpll
decb
insl
es
lahf
mov
insl
cli
push
test
cmp
sub
pop
fs
pop
movsl
leave
fcompl
push
add
mov
subb
sub
out
orl
mov
loope
andb
leave
subl
pop
pop
fisttps
jecxz
shlb
add
adc
data16
lret
xchg
cltd
outsl
mov
pop
pop
aas
mov
out
test
pop
jp
das
adc
xchg
dec
dec
outsb
leave
aam
scas
les
fs
push
pushf
jge
mov
and
ja
push
outsb
inc
in
xor
or
cld
cmp
test
std
xor
push
sti
cmp
fimull
pushf
outsb
pop
js
orl
mov
pop
stc
data16
loop
sbb
lret
scas
adc
pop
addr16
lcall
jecxz
dec
out
repnz
pop
mov
jb
pop
xchg
cli
sti
push
xor
lret
outsl
sub
jle
add
cwtl
insb
mov
jae
jbe
mov
mov
pop
insl
lret
push
xchg
xlat
test
ret
arpl
xchg
std
rcr
xchg
lret
push
add
in
test
rcl
imul
push
fsubrl
xchg
mov
jmp
out
adcb
insl
push
jbe
cmp
fxch
fcoml
insb
or
mov
in
inc
out
aam
hlt
ja
xor
sbbl
pop
mov
fstp
pop
xchg
outsb
out
mov
dec
mov
and
sub
sbb
mov
rcll
call
adc
inc
in
movsl
cltd
mov
fs
out
ss
movsl
mov
cltd
push
adc
js
sub
jo
or
mov
and
ljmp
enter
out
cmpsb
in
push
push
inc
rorl
inc
mov
xchg
lahf
inc
jbe
jne
add
insb
in
xchg
dec
js
xor
addl
lret
sbb
add
addr16
inc
add
insl
lgs
jge
xchg
ja
mov
dec
push
fsts
pextrw
loop
push
mov
and
pop
cmpsb
push
test
sub
sub
lds
jmp
mov
test
popa
testl
dec
sub
xor
insb
shr
out
sti
ljmp
movsl
jmp
nop
roll
and
setle
test
pusha
add
cltd
xor
xor
arpl
add
aaa
mov
and
mov
push
mov
repz
sbb
pop
push
sub
test
xchg
in
push
cli
dec
popf
loopne
sub
jge
push
xor
pushf
clc
fcoms
fisttpl
push
outsl
add
frstor
insl
cmpsl
out
fwait
mov
xchg
mov
pop
inc
pop
adc
add
push
cs
xlat
push
mov
or
jle
orb
cmp
ret
mov
mov
repz
sub
inc
pop
out
outsb
jmp
fdiv
push
scas
loop
lcall
cmpsl
dec
arpl
mov
and
pusha
inc
insb
rclb
pop
cmp
int
js
xchg
xchg
mov
fisubl
enter
inc
rcrl
iret
lods
jb
pop
cwtl
test
sbb
in
iret
dec
into
push
orb
add
and
andb
pushf
mov
inc
mov
pop
das
and
jae
rolb
push
cmp
das
lock
fsubr
mov
jne
jno
push
fst
scas
mov
xchg
sbb
and
mov
xchg
or
inc
mov
mov
cmp
adc
cmc
nop
mov
stos
mov
add
xchg
mov
arpl
push
movsb
push
shll
leave
and
test
dec
fcmove
bound
sbb
in
cmpsl
test
addr16
add
jecxz
cmp
iret
push
je
scas
xchg
popa
jbe
das
push
xchg
dec
ljmp
push
pop
in
pop
shl
jns
andb
sub
mov
hlt
jge
in
int3
movsl
in
int3
add
fwait
stc
in
stos
fnstcw
xor
fcomps
sbb
movzbl
fcompl
sub
in
arpl
dec
mov
mov
adc
std
cs
add
paddusw
and
inc
pop
mov
pusha
xchg
push
jmp
add
sub
pop
pop
mov
adc
mov
push
pop
clc
mov
xchg
lods
or
movsl
adc
mov
xor
mov
and
pop
xor
sub
and
inc
add
stc
and
mov
fst
mov
add
arpl
out
adc
repz
arpl
insb
sarb
xchg
loop
pop
jle
inc
les
cmp
mov
jmp
fistpll
xor
or
inc
dec
dec
shr
jecxz
xchg
insb
dec
xor
or
mov
inc
push
sbb
clc
aad
addl
lahf
cmp
mov
fs
dec
sbb
out
add
mov
and
pop
scas
roll
sbbl
sbb
leave
sbbl
das
and
scas
aaa
ja,pt
out
imull
pusha
xchg
xchg
dec
inc
add
cmp
pop
outsb
pop
out
ljmp
in
iret
jp
fisubs
add
xor
test
mov
nop
fnstsw
frstpm(287
pop
mov
xlat
jae
mov
aam
pop
inc
adc
je
subps
jbe
pop
cltd
dec
ljmp
mov
imul
cmp
jo
mov
adc
pop
aaa
lcall
repz
js
test
mov
cmc
addr16
mov
jge
lods
out
or
sbb
jb
jne
inc
test
pop
mov
das
dec
inc
shl
arpl
mov
ss
xor
out
push
lret
xchg
repz
xor
hlt
mov
cmp
or
pusha
inc
adc
add
adc
std
or
pop
mov
repz
cmc
jne
addb
xchg
les
xor
outsl
js
in
mov
shlb
sti
in
fwait
push
movsl
ror
pop
and
aad
mov
cmp
ret
divl
xorl
cmp
cmp
add
repnz
imull
insl
fs
inc
dec
pusha
repnz
pop
inc
filds
pushf
mov
fstpt
outsl
insb
xchg
mov
imul
movups
pop
pop
mov
scas
mov
push
int
jnp
sahf
push
jg
push
push
inc
mov
sbb
or
repz
repnz
test
pop
sbb
sbb
mov
std
cmp
repnz
xor
mov
sar
cli
inc
clc
subb
jne
jns
sbb
xchg
icebp
stc
es
cmp
lcall
push
xlat
stos
nop
pop
lret
fcoml
imul
in
pop
shlb
adc
add
cmp
adc
xlat
mov
jne
sbb
xchg
sub
es
sub
nop
insl
mov
pop
sbb
arpl
int3
jbe,pt
xlat
je
loop
dec
mov
xor
mov
pop
and
fnsave
adc
cmpsl
push
xor
mov
in
add
test
testl
int3
test
mov
add
bound
and
shll
sbb
dec
dec
cmp
out
ja
cmp
orb
and
js
lcall
push
insb
fs
mov
rorb
add
push
cltd
mov
inc
push
or
mov
arpl
rcpps
jb
mov
fwait
scas
add
push
adc
mov
inc
insb
and
es
cs
mov
pop
pop
push
or
adc
xacquire
cmp
in
loopne
stos
mov
mov
cmpsl
sub
fwait
and
jo
insl
mov
stos
mov
sub
sub
push
inc
fimuls
aad
ljmp
xchg
add
cmp
mov
adc
mov
xor
lret
xchg
mov
scas
mov
lret
inc
loope
dec
repz
aad
sbb
cmpl
fiaddl
cmp
test
lods
lods
adc
arpl
mov
shrl
mov
lahf
fisubrl
jae
ret
cld
jns
xchg
adc
jge
mov
gs
cs
push
movsl
sub
aad
mov
rorl
gs
lcall
and
jle
mov
repz
inc
xor
add
dec
test
or
ja
jecxz
inc
test
test
cmpb
fstl
and
push
jno
pop
js
and
sub
adc
inc
jle
add
adc
jno
cmp
fcoms
inc
mov
jnp
fsubr
pusha
leave
and
xor
ficompl
lds
mov
mov
icebp
add
aad
jnp
mov
stos
testl
ret
mov
pop
xchg
data16
jno
mov
imul
and
push
mov
stos
add
nop
es
fcoms
sarl
lret
push
push
test
notl
test
test
adc
mov
and
cltd
xchg
aad
fistps
pop
hlt
sti
dec
aam
lahf
sub
cmc
je
lods
repnz
scas
dec
sub
pop
cs
lcall
adc
push
jne
rcrl
popa
fiadds
arpl
fcomp
jnp
test
aaa
ret
xchg
cmp
out
cltd
push
rcrb
ljmp
adc
mov
push
xchg
xchg
mov
jecxz
iret
or
xchg
ds
cmp
add
push
stos
sub
movsl
movb
aam
dec
mov
inc
pop
inc
rcll
das
bound
push
pop
jns
xchg
pop
out
push
dec
subl
insb
or
xor
cmp
and
dec
cmpsl
xlat
ffree
pop
xor
stc
add
insb
and
mov
call
std
pop
pop
xor
sub
notb
loop
xchg
popl
shrl
or
out
test
dec
inc
daa
push
nop
stc
add
mov
fcmove
mov
or
out
inc
xchg
pop
or
mov
cmc
mov
das
xor
push
std
fisttpl
mov
ljmp
rorl
jne
mov
aas
lds
xchg
inc
shl
shlb
mov
imul
lcall
inc
lcall
and
cmp
rolb
jns
push
xor
insl
rclb
xchg
sbb
mov
std
outsl
scas
cmp
cmp
lret
lods
mov
lcall
iret
imulb
jp
or
lret
out
pop
xchg
pusha
out
jbe
mov
sbb
and
jno
cwtl
dec
ror
imul
movsl
out
pop
mov
dec
insl
xor
in
and
lret
les
je
mov
push
and
pusha
es
xor
lret
addr16
xchg
sbb
dec
sub
pop
mov
add
mov
in
insb
push
xchg
adc
or
mov
pop
nop
pop
shll
cmp
rcl
enter
cmp
jle
jecxz,pn
call
add
fcmovne
sbb
call
shl
dec
xor
fstps
lods
or
int3
adc
loope
lahf
cmp
push
bnd
imul
mov
mov
ds
stos
test
insb
cmp
js
jle
sbbl
jmp
cmp
cmp
pushf
jnp
jmp
mov
lahf
sbb
sahf
test
pushf
rcl
sbb
je
sarl
cs
lods
mov
out
outsb
ret
jle
mov
ret
aas
and
jmp
ljmp
mov
cltd
dec
dec
int3
sub
cmc
in
mov
push
shrb
pop
gs
lock
fists
fbld
cmp
insl
sbb
push
lret
push
push
mov
or
adc
jmp
xor
mov
ds
add
xor
clc
jg
mov
pop
mov
out
shlb
jmp
lds
arpl
add
push
lock
inc
jmp
pop
add
push
mov
dec
mov
jno
popl
shl
and
sbbl
bound
vmwrite
shrl
sahf
jge
lret
aaa
stc
rcrb
mov
mov
inc
mov
test
sar
sub
nop
or
dec
rclb
lcall
daa
xchg
dec
cmpsl
scas
outsb
rclb
mov
jb
add
inc
add
mov
add
mov
ja
jae
repz
in
shl
add
loop
aas
mov
xor
in
mov
cmp
sub
cmpsb
push
filds
pop
mov
aam
mov
test
fimuls
xchg
fldt
test
cmp
das
mov
sti
jne
or
jle
inc
pop
daa
scas
cmp
in
jge
push
dec
sub
xlat
lea
xchg
xor
push
cmpsl
je
xor
insl
push
ret
push
and
loopne
and
fwait
ds
xchg
mov
fiaddl
fdivrs
pusha
pop
mov
push
jge
add
mov
pop
je
clc
lcall
xchg
rcrb
gs
scas
xor
gs
mov
loope
jnp
mov
xchg
in
in
out
icebp
fwait
add
adc
fstpl
jecxz
flds
mov
repnz
jmp
add
into
sbb
stos
cli
add
insl
inc
fs
sub
mov
loope
insl
testl
imul
test
and
fs
gs
fstpt
mov
bound
ljmp
in
fwait
sbb
cmp
inc
and
outsl
stos
sahf
dec
push
mov
ljmp
add
push
mov
dec
inc
sahf
loopne
in
iret
sbb
mov
popf
stos
jmp
fwait
gs
in
lods
add
repz
mov
or
aad
pop
add
jo
mov
prefetch
or
cmp
mov
push
adc
cmp
mov
cmp
mov
jo
loope
dec
pop
iret
cmp
or
or
int
dec
inc
in
mov
sarb
or
jg
lahf
push
adc
mov
lahf
add
or
in
mov
cmp
sbb
call
rorb
jb
pop
in
stos
mov
cltd
int
sub
mov
insl
inc
xchg
mov
jg
mov
xchg
idivb
adc
popa
test
aas
frstor
fidivrs
fs
dec
into
sbb
adc
mov
ret
jp
xchg
jp
jno
in
xchg
cmpsb
cmpsl
pop
std
inc
xchg
mov
push
dec
arpl
mov
inc
fidivl
xor
push
imul
sub
xlat
test
faddl
xlat
jmp
sub
outsb
xor
sub
pop
mov
in
aaa
clc
aas
loopne
cmp
pop
enter
stos
mov
sub
jg
test
int3
cmp
test
inc
inc
leave
or
mov
jge
popf
dec
addr16
shlb
popf
mov
or
add
call
mov
push
or
mov
push
imul
cmc
pop
out
add
cli
jecxz
pop
xor
fnsave
mov
mov
mov
out
mov
mov
pop
cmpsl
sub
mov
lcall
and
ljmp
sahf
sbb
fildll
xor
mov
mov
xchg
pop
push
fiaddl
adc
push
popa
fisubs
xor
jl
mov
ja
outsb
pop
aad
pop
and
adc
scas
pop
pop
js
cltd
cs
push
movsl
sbb
push
or
hlt
push
imulb
loopne
pop
add
fists
pop
std
ret
xor
jg
mov
jns
sbb
add
out
ret
lret
inc
pop
cmp
out
stos
sar
sbb
lret
hlt
adc
incl
cld
enter
xchg
aaa
icebp
jmp
stc
inc
sub
jnp
xchg
sub
sar
dec
sub
insl
mov
xchg
sub
sti
adc
fidivl
lcall
inc
inc
fnstsw
insl
out
jecxz
out
repnz
mov
shl
mov
lock
lods
sahf
xchg
loop
push
shll
fildl
mov
xchg
lods
cmp
leave
dec
arpl
jg
jp
fld
lods
fists
ror
and
mov
sub
rcr
gs
rcrl
andb
int3
and
inc
jl
mov
pop
loop
xor
ss
adc
test
loope
mov
sahf
add
sub
cld
push
stc
les
push
movsl
adc
xchg
ss
test
adc
fcom
mov
mov
leave
cld
scas
or
mov
xchg
jne
add
dec
das
adc
mov
add
push
sub
jmp
mov
cmp
xchg
ret
shll
lea
dec
mov
mov
fimuls
dec
scas
sub
jno
mov
adc
or
lret
jns
leave
lods
pop
roll
imul
inc
sub
adc
mov
fimull
outsb
pushf
inc
test
mov
in
cmc
push
push
dec
ss
dec
mov
add
sbb
and
mov
jae
or
je
cmp
lcall
sbb
mov
dec
adc
add
psubw
mov
add
inc
dec
lret
loopne
pop
mov
daa
loop
es
rcrb
xchg
xlat
cld
pop
cltd
dec
xor
pop
es
bnd
jg
push
inc
dec
mov
sub
icebp
je
mov
dec
mov
mov
sbb
lret
repz
xchg
xchg
jae
fmuls
push
mov
xchg
mov
xchg
ljmp
jl
add
dec
push
test
ja
and
push
lahf
cs
pop
test
rorl
leave
inc
xchg
dec
inc
pop
imul
sub
out
mov
aas
sub
cmc
icebp
cmp
fadds
dec
mov
push
cltd
nop
ss
xchg
leave
mov
xor
jl
aas
and
dec
sbb
notb
add
cld
mov
mov
sbb
fbld
stc
and
cmp
mov
sub
mov
repz
mov
add
pop
or
cwtl
aaa
fnsave
pop
nop
push
je
pusha
gs
pop
mov
lods
sahf
jmp
ljmp
or
loopne
lret
sub
cmp
lret
daa
push
xor
sbb
aad
in
ljmp
mov
sbb
mov
or
addl
notl
jo
push
mov
mov
lods
outsb
pop
repz
inc
das
cwtl
xor
pop
lods
and
outsl
test
xor
adc
dec
inc
ljmp
dec
out
out
in
fisubrl
mov
pop
movsb
inc
jnp
jl
dec
cmp
inc
push
unpcklps
inc
fildll
sbb
mov
add
aas
sub
imul
xor
inc
loop
cwtl
lods
gs
xchg
rcrl
pusha
cli
or
jno
mov
iret
dec
adc
push
fcompl
hlt
push
out
dec
test
cmc
add
or
sub
les
add
mov
xchg
and
addb
fs
hlt
adc
ja
addr16
mov
repz
sub
sub
jmp
je
sbb
cmc
jmp
mov
dec
dec
cmp
jle
je
lods
jg
inc
ficoml
xchg
clc
add
jl
loopne
fwait
insb
or
out
repnz
and
lahf
push
les
cmpsl
mov
int
or
rcrl
xchg
subb
mov
sti
push
xor
mov
and
in
orb
inc
jae
jbe
push
test
cmp
mov
icebp
mov
add
shll
int
js
ror
les
insl
je
xor
push
pop
add
out
dec
out
insl
add
out
mov
lcall
sti
dec
lret
jle
add
imul
pop
pop
push
int3
cmp
clc
cmc
rorl
out
test
addb
xor
sub
cmc
sbb
rcrl
push
daa
mov
popl
cmc
pop
add
iret
pusha
in
cmp
andl
cmp
lock
push
mov
arpl
xchg
aad
sub
rolb
jne
sbb
lods
cwtl
outsb
mov
das
test
fucomip
les
stc
rol
xor
fcompl
ljmp
add
inc
in
xor
mov
int3
xor
mov
push
jns
sbb
push
ficompl
or
imul
out
pusha
jae
cmc
adc
loope
lea
test
and
jle
nop
movsb
cld
mov
pusha
repnz
sbb
pop
add
lret
add
pushl
loopne
or
out
inc
and
out
mov
xchg
jne
mov
incb
test
xlat
pop
in
jmp
mov
inc
jmp
scas
ljmp
pop
cmp
sti
sub
pop
mov
sarb
add
pushl
fsub
shl
je
out
lret
adcl
in
xchg
or
and
push
in
sub
pop
fwait
loop
loop
popf
hlt
xchg
ds
cmp
out
inc
push
mov
adc
std
vcvttps2dq
mov
xchg
or
daa
xchg
test
jb
loop
jl
adc
pop
mov
mov
or
xlat
fwait
add
bswap
mov
xor
nop
addr16
les
cltd
cmp
mov
aad
loop
mov
cmp
pop
movsl
and
aam
adc
int3
jl
mov
jle
divb
xchg
roll
je
inc
mov
mov
push
sub
sbb
int
xor
xchg
jle
sub
and
clc
dec
xor
in
push
out
and
loop
ja
addr16
jle
mov
lret
in
inc
loope
or
dec
and
push
push
cltd
xorb
inc
push
mov
pushf
enter
push
jbe
enter
mov
sub
mov
cmp
adc
adc
mov
add
notl
mov
fstpt
cmp
mov
cli
jno
sbb
pop
sbb
sub
loope
mov
out
mov
aas
dec
push
add
xchg
in
dec
imul
data16
mov
cmc
cmpsl
sub
inc
fsubrl
inc
mov
imul
dec
push
cmc
mov
xor
add
xor
es
pop
aam
jae
jp
cs
sub
cmp
mov
sbb
dec
adc
cmpsl
pop
xchg
outsl
imul
notl
in
popa
sub
lcall
lcall
clc
cmp
mov
xchg
push
jecxz
push
scas
pusha
push
imul
cwtl
arpl
or
out
sub
arpl
int3
icebp
pop
shl
jge
jne
jl
lock
mov
fldenv
add
rclb
incl
xchg
call
push
ljmp
testb
inc
test
popf
mov
mov
xlat
adc
mov
decl
cmp
jns
xor
mov
shlb
lret
or
mov
or
push
insl
sub
insl
movsl
testb
mov
pop
cli
push
ljmp
sbb
cltd
sbb
adc
imul
outsb
sub
cmpsb
clc
test
lods
ds
aas
or
pop
mov
and
gs
push
mov
xlat
aaa
dec
jbe
fsubs
jl
shr
mov
cwtl
sbb
push
or
push
lods
dec
cmp
rol
shrl
mov
push
ficoml
in
fldenv
mov
sub
xchg
pop
loope
xor
loope
adc
xchg
jge
xchg
jmp
fnstsw
jbe
jne
xor
jge
or
mov
ds
popl
inc
xchg
shrb
cmp
mov
fs
dec
setl
or
push
rorb
outsb
fwait
insl
push
mov
in
lret
sbb
adc
sbb
sub
hlt
clc
push
std
mov
das
push
push
pop
lock
add
je
pop
sbb
inc
or
decb
loope
aad
iret
mov
lea
decb
lea
xor
push
mov
push
mov
xchg
jne
jb
sti
ja
sbb
jno
leave
mov
cmc
pop
push
push
in
sbb
sub
push
stos
mov
push
lret
enter
flds
int
in
lock
imul
add
stos
outsl
iret
ds
mov
dec
lock
mov
ss
jl
scas
into
test
xor
lea
adc
mov
lods
mov
lds
fnstsw
in
ljmp
sbb
lcall
in
sahf
add
call
je
je
stc
lea
scas
hlt
push
xchg
mov
xor
in
xor
imul
cmpb
push
mov
movsb
cmp
in
dec
pusha
push
invd
into
mov
sub
mov
mov
enter
dec
jecxz
mov
push
js
mov
and
or
cmp
mov
dec
jbe
add
lock
dec
adcb
mov
int3
repz
lds
push
iret
mov
test
out
inc
cmp
sbb
pop
mov
icebp
inc
inc
mov
repnz
mov
or
sub
movsb
pop
repnz
out
scas
outsl
cltd
dec
pop
inc
or
fstpl
sub
into
add
ret
sbb
xchg
mov
lods
aaa
jl
mov
out
outsb
xchg
in
jae
popa
jns
mov
rcrl
iret
stos
push
ret
and
dec
sub
loop
push
stc
out
in
sbb
mov
sub
lea
out
jmp
stos
pop
sub
xchg
adc
and
inc
fisubrl
gs
pusha
lds
xchg
cltd
shrl
jl
adc
or
inc
adc
dec
and
imul
test
loopne
cmpsl
jmp
cs
mov
repnz
es
insb
push
push
sbb
or
insb
inc
scas
jno
pop
dec
mov
imul
fsubrl
mov
in
dec
mov
jb
es
dec
xchg
add
inc
repnz
cmp
dec
shufps
mov
ss
unpckhps
sbb
and
out
xchg
test
fs
les
pop
inc
aaa
mov
or
mov
jne
inc
fbld
mov
push
xorl
adc
add
popf
cwtl
xchg
cmp
adc
jo
lahf
jne
out
mov
test
cmc
aaa
nop
xchg
push
dec
jns
stc
das
jne
or
shlb
into
and
arpl
cmc
scas
mov
sub
push
push
loopne
dec
aaa
pmuludq
or
fstps
faddl
xchg
or
inc
mov
in
xlat
fdivl
lds
mov
out
loop
out
in
repz
jne
out
jnp
add
jge
lahf
popa
popf
jnp
loopne
jae
xorl
test
dec
inc
sbb
mov
and
cmpsl
push
lock
scas
xor
mov
push
lock
mov
pop
iret
int3
sbb
cltd
test
sub
test
ss
cmp
dec
xlat
insl
pop
sti
push
aaa
mov
add
ds
sub
mov
sbb
cmp
subb
arpl
push
ds
mov
adc
jl
dec
in
lods
xchg
xchg
cli
sub
xchg
xchg
dec
lcall
lahf
pop
sub
jp
jmp
pop
in
mov
dec
faddl
pusha
cmp
cld
jnp
out
aas
mov
xor
mov
or
fs
test
pusha
adc
in
imul
mov
jl
push
shrb
repz
mov
jle
dec
adc
sub
andb
jp
dec
adc
sbb
testb
daa
clc
mov
cmp
lahf
dec
int
ficompl
adc
loopne
lds
ret
enter
aam
mov
adc
ljmp
data16
movsb
push
js
fistpll
std
scas
inc
stc
add
pop
cmp
out
xor
fdivs
out
adc
cmp
add
mov
inc
mov
fmul
xchg
data16
inc
or
shr
int3
lcall
inc
enter
cmpsb
insl
repz
push
test
sbb
add
stc
lret
or
imul
push
cmp
or
adc
popa
div
mov
or
lahf
add
mov
imul
adc
xchg
xor
pop
subl
rcrb
dec
xchg
dec
es
enter
imul
pushf
popa
call
push
repnz
shl
inc
cmc
and
mov
mov
cmp
xlat
jae
xor
lods
data16
dec
movq
xchg
mov
dec
add
pop
mov
push
fst
pop
jle
aas
pop
rclb
mov
adc
push
inc
leave
in
lods
push
or
pop
mov
cmp
pop
sbb
test
lret
adc
xchg
int
pop
jne
pushf
add
sbb
stos
pop
jge
cli
or
aaa
scas
adcb
sbb
pop
cli
jno
sub
inc
fdivp
add
stc
xchg
out
add
ds
adc
iret
dec
mov
aam
xlat
pop
rorl
dec
xchg
sub
in
mov
popf
dec
roll
jae
je
fcompl
cli
sub
cltd
inc
sbb
dec
js
inc
sub
sub
sub
clc
push
and
out
jecxz
push
ret
jo
push
push
and
dec
fs
cmp
jp
xor
rorl
and
popf
push
ror
addr16
inc
outsl
out
mov
insb
push
jae
gs
cmp
int
mov
xor
jmp
jnp
xor
gs
fs
xchg
in
dec
lret
inc
xchg
push
pop
inc
mov
cmp
sbb
enter
loope
cmp
add
add
cmp
dec
pop
add
jbe
insl
adc
mov
dec
pop
idiv
push
sub
mov
jp
jmp
loope
sbb
mov
push
xor
arpl
mov
nop
xlat
je
mov
into
dec
mov
and
pop
imul
addr16
adc
out
jge
mov
fisttpl
shl
shll
or
outsb
jno
lret
pop
rolb
xchg
push
mov
and
push
push
mov
lret
test
mov
cmp
and
bound
cld
dec
sti
fwait
or
xchg
lock
mov
popa
sub
and
push
shll
sbb
hlt
or
push
scas
xor
sub
movb
jl
xor
fwait
jbe
loopne
fcomi
fcmovne
adc
mov
ds
inc
mov
mov
pop
mov
add
aad
call
jno
mov
push
aam
mov
cli
and
shl
fmuls
fistps
xor
sbb
add
in
inc
sbb
sub
pop
fldl
inc
jl
cmpsl
dec
lds
fimull
xchg
test
cmp
and
mov
aaa
insl
dec
setno
clc
loop
stc
sahf
in
push
out
inc
orw
pmaddwd
ja
gs
aaa
imul
mov
test
push
jo
xor
inc
jae
jb
frstor
scas
addr16
lods
mov
jo
or
jno
out
jno
pushl
ud2
gs
add
sbb
mov
pop
pop
ret
inc
ja
xchg
repz
fistl
adc
mov
ret
or
movsb
mov
sub
into
add
stc
int3
ret
sbb
cmp
enter
inc
aad
cli
into
call
fcmovb
loopne
fs
lock
lods
lds
mov
pop
leave
jecxz
out
loope
inc
jnp
and
pop
inc
mov
sub
cmp
shll
lcall
xor
aaa
xlat
mov
jmp
inc
pop
jne
scas
inc
int3
push
xor
movsb
mov
inc
push
je
pusha
jge
push
xchg
push
cmp
call
xchg
dec
add
lret
mov
inc
mov
cmp
popf
shrb
inc
cmp
fs
sub
inc
fnstcw
jp
mov
stos
das
cmp
push
out
sub
rcrb
adc
enter
push
add
ror
cltd
add
mov
fwait
xor
rcrl
xor
fidivrl
scas
aam
add
jno
sub
cwtl
enter
pop
pop
push
addr16
aas
pop
add
scas
sti
in
dec
xchg
inc
dec
in
xchg
ljmp
jecxz
jns
mov
jmp
mov
inc
jg
jge
cmpsl
xor
mov
xchg
xchg
mov
xor
xchg
dec
test
imul
cmpsb
push
adc
sub
cmpsl
cwtl
sbb
cmpsl
dec
rcll
cs
shll
roll
push
dec
inc
mov
cwtl
ud2
sahf
pop
and
lds
lock
dec
sarb
or
push
test
out
jmp
cmp
arpl
or
mov
sub
sub
xor
mov
dec
pop
stc
bound
jmp
mov
mov
add
loopne
xchg
sbb
push
das
jbe
loope
and
mov
ja
daa
leave
cmp
push
inc
jg
test
or
fldt
pop
cli
cmpsl
xchg
jno
hlt
std
imul
aam
mov
add
push
lret
shlb
add
shl
sbb
jno
mov
adcl
push
mov
sbb
sub
pop
and
fdivrp
mov
insl
cmp
sub
pusha
arpl
int3
loopne
sbb
dec
cltd
mov
incl
adc
ret
mov
std
cltd
add
outsb
dec
es
xchg
sti
aas
mov
sub
sub
sbb
cmp
out
or
lret
inc
push
adc
out
sub
call
cmp
icebp
mov
or
jge
sbb
fwait
adc
jbe
push
pop
enter
xchg
repnz
repz
jmp
test
xchg
adc
or
rcrb
std
test
movsl
loop
xchg
inc
pop
mov
push
ljmp
mov
imul
imul
mov
sbb
aam
sub
test
mov
test
subb
xchg
insb
cmp
or
rcrb
xchg
pop
fldenv
shlb
sub
imul
sub
loopne
lods
insl
pop
mov
rorb
arpl
sbb
sub
or
loopne
inc
adc
adc
dec
lds
pop
fimuls
mov
sti
movsb
dec
mov
bound
mov
pop
adc
in
fwait
iret
repz
imul
push
lods
daa
stc
mov
fstl
adc
cmc
jge
aas
xorb
and
in
cmpsl
jnp
leave
in
mov
outsl
add
xchg
push
dec
fsubr
sub
aas
int3
mov
inc
xchg
xchg
pop
xlat
int3
push
bound
dec
mov
das
mov
incl
xor
ficomps
cltd
pop
fisttpl
ficompl
mov
xchg
add
cmp
inc
xor
jo
sbb
xchg
inc
sti
push
out
aas
pop
or
loope
loope
sub
fcomps
ds
sarb
jecxz
js
jmp
ret
mov
mov
adc
stos
jmp
or
xchg
push
lret
pop
fmulp
push
jne
cmpsb
in
lcall
incl
jb
jb
mov
outsl
jp
imul
es
push
fdivrs
dec
jns
push
push
inc
dec
lcall
out
xchg
jnp
push
pop
push
popf
push
dec
fcoms
stc
lods
addr16
repz
push
adc
stc
sbb
popf
fadds
jb
and
mov
rol
call
in
clc
xchg
iret
adc
rclb
add
mov
mov
lods
xor
shlb
jg
xchg
pop
push
dec
xor
jno
dec
ret
or
stos
push
enter
push
jg
rcll
jnp
repnz
mov
ret
push
hlt
xor
fnstsw
movsl
mov
daa
sbb
popa
ret
sub
jmp
inc
lock
subb
jno
xor
aaa
jno
out
mov
sbb
pop
fdivl
xor
lret
pop
and
add
sub
fdivs
dec
add
jmp
xchg
sahf
inc
movsl
mov
inc
cmp
cli
and
add
jb
adc
mov
lret
pusha
scas
enter
adc
dec
fstps
stos
scas
cmp
jg
adc
js
iret
sbb
adc
cwtl
jecxz
js
lret
sti
gs
cmpsb
cs
ljmp
mov
add
mov
aas
adc
and
out
aam
add
pushf
xlat
mov
pop
jp
mov
popf
pop
pushf
popl
ss
sti
out
insl
popa
and
and
repz
add
stc
sbb
jp
clc
aam
cmp
decb
jmp
lds
enter
mov
pop
adc
push
xor
adc
aad
inc
mov
ret
bound
cmp
push
inc
mov
xchg
int3
rcll
xor
mov
sub
cld
incb
sbb
jno
inc
imul
sbb
ss
testl
rorb
pushf
insb
jl
lds
aas
rclb
push
add
sbb
loopne
sub
test
xor
inc
mov
dec
lods
js
faddl
pop
dec
pxor
aam
test
cs
jns
jo
add
and
sti
adc
scas
fmuls
jmp
sti
inc
mov
aaa
mov
dec
loop
mov
popa
in
shld
psubusb
inc
mov
lret
sahf
dec
xchg
mov
pushf
inc
int3
pop
cmc
gs
roll
jb
in
cld
cld
out
loopne
push
jg
int3
mov
or
das
xor
mov
test
pop
clc
call
popl
lods
dec
xchg
dec
mov
lret
inc
jmp
or
in
ret
mov
adc
pop
rcl
ja
push
movsl
icebp
and
cmp
repz
pop
inc
pop
cmp
movsb
adc
aaa
pop
int3
push
or
mov
cmpsb
arpl
xchg
pushf
outsl
cmp
dec
xor
shr
xchg
add
sub
test
pop
out
shl
nop
stos
dec
add
mov
rcrl
or
mov
xor
push
or
fidivrl
dec
cmp
daa
dec
sbb
cmp
cmc
sub
lock
mov
inc
insb
std
int
jae
cmc
sbb
mov
imul
mov
push
pop
scas
repz
test
sbb
mov
fisubl
jo
sub
xor
movsb
inc
fnsave
test
dec
cmc
mov
jnp
test
xchg
xor
push
leave
cld
cld
test
add
rcrl
test
pop
stos
sbb
mov
notb
sub
popa
mov
xchg
push
sub
push
loope
repnz
adc
cmp
mov
aaa
fs
inc
xor
or
aam
lds
jl
hlt
repz
cltd
push
push
sub
push
ljmp
adc
pop
and
test
pop
push
push
cli
ljmp
pop
and
push
test
cmp
rcll
ret
mov
or
pop
lock
push
cmp
jmp
inc
push
mov
cmpsl
loope
xchg
fadds
test
pop
out
xor
sub
int
ss
fcmovbe
mov
adc
push
sub
ret
aas
ret
pop
xchg
or
repnz
daa
cmpb
loopne
popf
shrb
adc
pushf
pop
lret
xor
dec
mov
add
shl
sbbl
into
imul
bound
push
add
add
or
rclb
lock
mov
mov
cwtl
roll
stos
inc
xchg
and
xchg
fldt
push
sub
cmp
shl
mov
jb
inc
push
sti
bound
out
sbb
sub
ret
repnz
cmpsb
aam
daa
xor
outsl
sub
popf
ficoms
mov
adc
add
test
icebp
scas
or
push
fs
jmp
add
mov
subb
push
movsl
or
push
mov
mov
in
adc
push
xchg
and
loopne
jns
dec
test
and
push
xor
dec
ret
movsb
shl
into
xchg
add
scas
aaa
sub
push
cmc
cmp
test
sub
or
xchg
push
arpl
adc
in
fists
xchg
les
push
push
sti
push
inc
imul
icebp
pop
push
movsb
cmpl
push
dec
mov
jb
frstor
aam
je,pt
mov
cmp
or
ds
fstps
jns
sbb
subb
insb
adc
xor
adc
inc
pop
dec
push
add
pop
mov
stc
jmp
jmp
aaa
inc
stos
in
adcb
inc
in
out
mov
mov
sub
jge
pop
add
or
adc
in
pop
out
mov
je
jo
sbbb
nop
push
cmp
adc
or
fnsave
sbb
cmp
or
int3
loopne
lea
inc
incl
loope
xchg
repz
jmp
push
out
shlb
and
jno
jns
or
imul
dec
icebp
rcll
ds
pop
adc
lahf
test
inc
pop
lret
test
ret
jg
jg
push
or
test
das
stos
and
mov
sbb
insl
jae
imul
aam
hlt
and
outsl
sub
cmc
dec
ss
rorb
stos
inc
mov
adc
enter
jnp
and
gs
cmp
nop
js
in
test
jne
mov
xor
xor
pop
insb
aaa
sub
push
out
xor
popa
repnz
fbld
xchg
dec
pop
stc
cmpsl
aas
mov
cmp
mov
stc
inc
pop
nop
or
std
sar
aam
lcall
icebp
pop
and
lret
inc
outsb
pop
arpl
xchg
mov
mov
cmp
js
xchg
fadds
inc
dec
pop
scas
xor
loopne
aas
cltd
in
dec
dec
cmp
aaa
or
test
bnd
fstpt
sub
add
ss
inc
je
mov
cmp
pop
pop
push
mov
js
gs
cli
cmpsb
andb
pop
xchg
push
jecxz
jnp
add
or
cmpsl
adcl
sbb
outsl
rorb
add
pushf
mov
mov
push
and
cmp
in
mov
jle
pop
das
lds
or
xchg
pop
cmp
scas
inc
dec
enter
and
lret
pushf
fildl
jne
jge
mov
xchg
xchg
ret
xor
adc
pop
outsb
in
or
cmpsl
xchg
xchg
fidivrs
xchg
lea
in
out
xor
sahf
fadds
fwait
rcrb
jae
or
cmp
arpl
dec
mov
popf
mov
jg
vcvtsi2ssl
cli
cmp
mov
sub
xchg
mov
test
das
xor
imul
je
rcll
and
cli
sub
rclb
inc
sbb
mov
sbb
movsl
sub
cmpsl
das
aaa
jp
add
inc
xchg
ret
arpl
adc
enter
enter
repz
lods
outsl
jb
push
xor
js
mov
jle
mulb
or
mov
push
gs
lea
les
and
sbb
mov
stc
fwait
inc
push
lock
lahf
inc
jle
lods
lds
pop
nop
hlt
rorl
pop
xchg
mov
or
jns
enter
stc
mov
xor
push
in
adc
mov
pop
orb
adc
or
lcall
and
insl
xchg
inc
movsb
out
fs
sbbb
and
roll
sbb
outsb
fxtract
jae
repz
lods
push
adc
xchg
cmpl
cmp
add
loopne
jecxz
adc
shrl
cld
jmp
jb
cs
mov
or
ret
push
je
outsl
aas
dec
xor
sbb
rcr
or
mov
dec
movsl
mov
add
cmp
and
leave
shrb
cmp
lret
cmp
sar
aad
flds
cmp
clc
adc
mov
idivl
int3
add
out
in
ss
dec
pop
jl
xor
xchg
jp
mov
mov
xor
movsb
out
insl
pushw
sarb
in
fld
sub
scas
mov
inc
xchg
pop
cmpsb
adc
push
jae
mov
jle
inc
add
call
sbb
mov
je
pop
pop
or
mov
sbb
jecxz
adc
adc
gs
push
xchg
fildl
pop
add
test
lea
repz
sbb
lcall
loop
xor
push
add
ds
ljmp
out
mov
push
and
test
inc
push
mov
jae
inc
mov
ja
sub
cli
or
xor
pop
add
nop
hlt
adc
push
test
jl
arpl
mov
jg
inc
xor
add
test
xchg
sbbb
scas
pop
mov
inc
dec
gs
push
push
xchg
rcll
jecxz
test
inc
loopne
mov
aas
orb
dec
gs
ss
inc
dec
add
jns
add
lds
add
xor
fldt
lds
mov
push
setns
cmpsl
decl
fidivrs
push
xor
push
mov
into
jb
fcoml
mov
sbb
pop
add
out
movsb
mov
xchg
mov
cmp
std
lods
sbb
inc
es
jmp
test
rcr
inc
sahf
cli
addr16
pop
aaa
lock
mov
xor
cld
iret
cs
adc
xchg
push
push
aaa
or
stos
jp
adc
cli
int3
mov
inc
pop
in
and
ds
outsl
mov
fsubrl
sub
leave
add
mov
cmp
jge
lcall
push
repz
cli
into
push
sbb
mov
inc
add
ret
adc
mov
xor
pop
mov
dec
sub
stos
mov
popf
lock
pop
mov
call
fs
rclb
popf
xchg
pop
inc
xchg
bound
lock
inc
jno
dec
sub
inc
cld
and
and
int3
mov
sbb
into
pop
sub
mov
jbe
ss
scas
adc
push
add
lret
lds
addl
loope
xchg
xor
negb
testl
sbb
mov
xorb
cmc
inc
leave
call
cwtl
cmp
testl
or
xor
jle
lock
or
push
in
xor
movl
xchg
cmp
push
push
in
push
popa
repnz
enter
pusha
mov
inc
jp
push
daa
rcll
test
push
mov
inc
jbe
fdivrp
test
in
pushf
sbb
ja
mov
cmp
add
and
push
loopne
or
fcmovu
shl
push
add
push
outsb
add
scas
jne
test
movsl
mov
adc
push
gs
das
xor
jmp
icebp
or
lea
orb
gs
cltd
jl
adc
lret
inc
fisubl
adc
push
mov
aad
cmp
pop
mov
icebp
cltd
in
insl
jle
popa
mov
mov
out
repnz
test
and
loope
insl
loopne
out
cmp
mov
shlb
testb
cmc
stos
rcr
sub
in
stos
push
mov
gs
mov
loopne
movsl
pop
int3
push
lret
xor
lret
repnz
addl
movl
test
lods
int
daa
adc
dec
jmp
add
and
adcb
push
ret
add
rcrl
imul
arpl
js
or
cmc
rcr
movb
inc
mov
inc
xor
jno
das
and
and
in
sub
xchg
jl
sbbb
and
test
out
repz
mov
xor
fiadds
push
cmp
rorl
pop
mov
cs
dec
jo
mov
mov
add
cwtl
cmpsb
xchg
jecxz
aad
mov
repz
push
popa
pop
in
add
mov
insb
xchg
fisubl
out
bound
mov
insl
fld
mov
mov
mov
les
in
arpl
inc
inc
rcrb
fimuls
inc
xchg
inc
gs
dec
fs
xor
jecxz
cmp
inc
add
int3
pusha
inc
jge
ret
daa
imul
loope
inc
mov
add
mov
js
xchg
jne
cmp
sub
lret
cmpb
mov
and
mov
cmpsl
xor
nop
std
cmpsb
in
add
lret
fists
lret
xchg
push
inc
fwait
cli
cmpsb
push
in
xchg
add
cmp
add
je
loopne
adc
jl
out
hlt
cmp
push
loope
xchg
xchg
pop
dec
xor
cmpsb
adc
in
and
out
gs
pop
xchg
push
or
gs
sahf
sub
incb
movsb
or
ds
fnstsw
jmp
shl
pusha
rclb
jae
movsl
ss
stos
gs
test
jbe
jp
loopne
cmp
arpl
popa
es
in
out
bnd
cmp
adc
xor
push
mov
decl
mov
outsb
push
pushf
divb
lahf
mov
mov
jp
mov
jmp
std
mov
jl
mov
addl
jle
or
nop
insb
jmp
scas
dec
adc
or
pop
push
add
pop
push
movsb
dec
cwtl
fisttpll
push
daa
test
sub
inc
xor
std
cmp
stos
icebp
push
lcall
das
ret
and
inc
xor
sbb
mov
loope
stos
and
cli
movsb
mov
js
xchg
sbb
outsl
stos
add
out
cmp
fs
jbe
push
aam
and
jns
pop
push
xor
scas
in
filds
add
test
pop
push
in
jge
inc
je,pn
xor
lret
dec
jg
adc
iret
test
dec
test
test
out
rcll
pop
pop
pop
stos
hlt
fs
sbbb
ret
adc
add
mov
xor
mov
test
xchg
lods
mov
dec
test
mov
sti
xchg
push
mov
and
cmpsl
mov
mov
push
push
sub
mov
or
fs
adc
cmp
sahf
mov
adc
lods
pop
jp
test
lret
dec
ret
sbb
push
dec
repnz
add
ljmp
pop
ds
data16
sub
push
xchg
or
jnp
aas
pop
insb
daa
arpl
push
dec
mov
jp
out
push
lock
out
mov
sub
sahf
and
jnp
movsb
mov
jecxz
or
push
shrl
pop
or
mov
repnz
push
cmp
out
scas
sahf
out
push
rorb
dec
add
mov
divb
xor
out
stos
xorl
repz
and
pop
or
loopne
push
push
dec
mov
adc
or
sub
cwtl
imul
inc
jp
jno
adc
jmp
inc
fildl
mov
mov
es
inc
push
mov
mov
mov
and
and
sbb
jnp
pop
xor
pusha
test
sbb
syscall
push
pop
mov
pop
ja
xor
mov
inc
pop
pusha
inc
sbb
push
loope
es
cwtl
stos
dec
jae
push
push
pop
test
ret
pop
mov
lods
aad
mov
mov
push
in
dec
add
mov
loope
sbb
rorl
test
sti
fmulp
adc
dec
mov
jb
adc
xchg
dec
pop
movsb
dec
nop
inc
push
mov
pop
push
add
fdivl
mov
pop
mov
stc
idivl
xchg
js
leave
cmc
push
lea
mov
add
pop
pmulhuw
pop
mov
push
sbb
mov
xchg
mov
out
cmc
mov
mov
and
push
clc
je
lock
push
cmpsb
fwait
rclb
hlt
add
xor
in
lods
outsl
cwtl
mov
sti
cmp
push
jg
ljmp
call
lds
fnstcw
clc
in
xor
shll
mov
popa
test
push
into
aaa
jae
push
sbb
sbb
sub
hlt
in
dec
repz
imul
cs
push
fwait
adc
mov
ret
lea
mov
pop
mov
xchg
inc
jmp
add
icebp
repnz
or
adc
jecxz
in
adc
xchg
movsl
movsb
xchg
int3
cmc
or
dec
in
lea
sub
loope
es
les
mov
loope
mov
inc
sbb
in
scas
sti
push
movb
insb
cmp
insl
insb
pop
mov
mov
mov
sbb
in
ret
adc
mov
push
mov
push
fdivrp
jno
je
push
cmp
dec
sar
ds
into
cli
pop
add
stos
push
and
dec
xchg
pop
sbb
or
sub
pop
loopne
icebp
mov
pop
movsb
inc
push
pop
pop
clc
dec
movsb
add
jmp
and
adc
call
and
mov
aaa
add
sub
inc
test
bound
lret
mov
ja
lds
jns
lock
pop
lods
roll
rolb
dec
icebp
popf
addb
adc
fcmovnu
cltd
ds
mov
sbb
pop
movsb
testb
into
xor
stos
push
dec
mov
lahf
sbb
into
xor
pop
push
pop
scas
push
insb
jae
sbb
jp
jae
scas
nop
mov
jb
aad
fiaddl
mov
rcrl
push
clc
rolb
out
hlt
jb
ror
inc
lcall
insb
jg
mov
lret
mov
push
mov
xchg
test
xchg
dec
mov
pop
mov
shrl
inc
les
sub
fs
mov
ds
arpl
jmp
xor
lock
ds
out
dec
js
test
mov
pop
roll
pop
adc
jg
pop
jne
xchg
push
icebp
jl
add
je
or
jmp
jecxz
xor
mov
xor
js
or
xchg
dec
das
loop
mov
jbe
jmp
adc
inc
xor
loopne
jge
test
pop
sahf
mov
sahf
fisttpll
cld
cmp
sub
push
fdivs
mov
cli
sub
lea
imul
int
pop
in
mov
mov
gs
mov
lret
lods
test
dec
jnp
mov
imul
addr16
push
inc
pop
aas
jo
popf
bound
pop
xor
iret
push
in
mulb
stc
sarl
or
jb
mov
test
daa
pop
rcl
in
and
mov
cmp
or
stos
mov
loope
rolb
test
outsb
mov
fisttpl
mov
xchg
rorl
sbb
cmp
dec
psubsb
and
lret
sbb
repnz
fcoml
movsb
push
mov
mov
das
cltd
mov
dec
inc
adc
dec
gs
jb
rcrb
push
movsl
fincstp
inc
popa
mov
xchg
addr16
ret
addr16
jns
fmuls
jecxz
imul
sbbl
push
aaa
in
dec
not
test
fildll
fistpl
adc
ss
loope
rol
pop
push
sbb
daa
roll
testb
pop
jl
jecxz
mov
fwait
sub
push
cli
loopne
push
pop
fmuls
ds
and
jle
xor
jge
or
sbb
mov
out
lods
add
nop
fsubrs
shll
mov
dec
push
push
test
jne
mov
dec
fidivrs
push
jb
std
mov
ret
mov
jno
dec
mov
jl
mov
or
dec
dec
jnp
movsl
push
push
outsb
dec
dec
lods
outsl
jmp
rclb
cmpl
je
sbb
sti
dec
imul
push
insl
cmc
and
das
cmp
jo
insl
adc
add
outsl
loop
jle
sub
jle
push
xchg
fwait
lock
inc
stos
adc
pop
mov
ds
test
mov
in
fdivrs
test
iret
xor
push
xchg
je
sub
jg
mov
cmpb
sub
mov
add
and
out
sub
sub
into
fists
test
jnp
dec
pop
pusha
testl
ss
leave
fcoml
jne
clc
jmp
dec
xchg
adc
icebp
jnp
push
fdivrl
dec
pop
loop
mov
jno
mov
adc
in
sub
and
xorl
adc
aam
sbbl
mov
mov
pop
push
jno
enter
mov
outsb
sbb
add
mov
arpl
aam
jbe
ss
test
xor
mov
jl
push
popf
cli
es
jae
adc
shlb
sbb
pop
repz
push
movsb
mov
cmpsl
shrl
stc
iret
mov
xchg
hlt
fstps
cmp
cli
cmp
xchg
pusha
mov
rolb
pop
idivl
shll
clc
adc
pop
mov
insb
in
in
dec
mov
push
cld
movsl
xchg
cmp
xor
or
sbb
aad
lahf
jno
in
fnsave
push
push
pop
cltd
shlb
mov
mov
jne
inc
or
cs
dec
int
data16
fld
in
popf
and
ljmp
mov
aaa
pop
inc
mov
cmp
push
dec
push
adc
add
out
mov
in
pop
xor
pushf
mov
mov
cmpsb
sub
mov
add
inc
fistl
push
mov
mov
ss
inc
sti
sbb
and
stos
fnsave
idiv
lret
mov
call
jg
pop
mov
fidivs
sbb
and
mov
js
enter
jge
mov
cmp
add
cmp
icebp
movsl
mov
xchg
mov
out
fisubs
test
or
dec
fs
fwait
nop
popa
ds
das
jnp
dec
inc
stos
div
mov
leave
sbb
loopne
and
pusha
adc
jbe
fnsave
std
popa
cmc
fisttps
lock
or
xchg
pushf
add
jle
pop
pop
cmpsb
pop
adc
movsb
sbb
cmc
dec
pusha
das
xor
jae
cmpsb
xchg
test
outsb
aad
into
into
ja
mov
mov
movsl
xorl
jnp
hlt
imull
pop
imul
xor
loopne
lret
add
stos
xchg
xor
xor
mov
xor
mov
out
fdivr
mov
cmc
dec
add
call
dec
sub
lret
les
or
mov
fcos
push
mov
rcl
aam
dec
out
out
push
daa
push
jl
jp
mov
cmpsb
aam
jae
sub
imul
pop
dec
addl
mov
sub
cmp
jl
mov
icebp
push
inc
sti
dec
or
mov
jb
pop
dec
jne
jbe
ret
jle
call
mov
icebp
sbb
xor
sbb
sbb
or
fstpl
jle
inc
ficompl
lods
xor
jle
aas
nop
inc
add
or
pop
imul
push
inc
mov
jbe
xchg
jo
insb
and
popf
xchg
adc
hlt
mov
push
dec
insb
lcall
xlat
dec
jo
or
dec
ror
xchg
cmp
aas
ljmp
cmp
dec
inc
xchg
sbb
lcall
pushf
sbb
mov
adc
pop
dec
jp
hlt
push
addl
cwtl
rorb
or
fsubr
mov
in
cld
imulb
or
faddl
rol
xor
mov
data16
loopne
pusha
or
aam
icebp
pop
and
ljmp
iret
nop
out
mov
stc
add
jge
scas
jp
push
icebp
ja
in
aad
inc
add
enter
imul
sub
dec
cltd
call
nop
movsl
mov
ret
or
bound
pop
push
xchg
lods
lahf
cmp
mov
push
jp
test
in
addr16
push
push
popf
lock
push
fildll
cmpsb
or
or
std
pop
cmp
mov
push
inc
scas
leave
stos
lods
call
or
mov
pushf
sub
pop
daa
pushl
repnz
lods
mov
dec
notb
shll
sub
push
aas
pop
inc
sarb
xor
insb
pop
add
jge
out
insb
enter
ret
add
jmp
sahf
shll
nop
stc
scas
cmp
xor
in
repz
addr16
pop
imul
mov
ja
mov
pop
icebp
in
or
ret
and
xor
lea
mov
mov
and
mov
and
inc
clc
xor
movsb
add
out
push
sbb
lahf
xchg
jne
mov
call
test
into
jne
test
mov
pop
pusha
mov
mov
ret
cmp
cld
add
mov
pop
repnz
sbb
call
adc
pop
jo
xor
shl
fcoml
mov
mov
push
insl
sti
sbb
mov
push
lcall
cld
gs
decb
ficoms
ja
arpl
ds
adc
lods
add
sub
cmp
popa
and
sbb
dec
dec
inc
rolb
sbb
add
adc
js
adc
int
scas
cli
jmp
repz
and
jns
out
scas
mov
clc
cmp
ss
mov
aaa
mov
addr16
mov
xor
mov
mov
iret
mov
test
ja
mov
ret
icebp
push
stc
inc
rcll
push
mov
rcrl
dec
inc
stc
pop
jge
or
notl
outsl
arpl
imul
cwtl
mov
dec
movsb
daa
pop
mov
jo
in
in
bound
call
mov
or
push
imul
les
add
mov
push
in
inc
xchg
or
aas
mov
je
ret
xchg
mov
sub
cmp
push
insb
addb
jge
sbb
nop
sbb
das
fcmovb
data16
das
outsl
aas
adcl
pusha
xchg
rcl
jmp
clc
sub
mov
test
sahf
mov
stos
xor
into
jle
and
pop
or
inc
jbe
inc
or
rcll
mov
lret
jecxz
rcll
es
or
ficompl
inc
mov
lea
cmp
faddl
sbbl
sbb
mov
jge
adc
int3
pop
mov
inc
imul
lea
sti
ret
xchg
iret
xchg
into
repnz
sub
xchg
lea
inc
dec
push
jl
mov
pop
inc
loopne
mov
add
shl
sbb
in
scas
stc
idivl
pop
mov
insb
addl
cltd
fimuls
dec
xchg
adc
adc
cwtl
mov
in
test
mov
addb
stos
aad
mov
dec
sbb
push
cmc
aaa
sbbl
cwtl
out
add
rcr
push
mov
aad
dec
mov
arpl
and
jnp
inc
push
mov
sbb
pop
repnz
decb
popa
jg
mov
jg
mov
pop
xchg
sub
xchg
mov
sub
or
scas
fmuls
xor
pushf
imul
lcall
xor
or
das
sub
add
stos
clc
insb
push
sub
out
pop
bound
dec
sbb
mov
cs
ljmp
iret
jae,pt
jo
sbb
pop
jns
je
jge
cmp
rolb
cmp
xlat
shll
jns
test
adc
sub
lcall
pop
xchg
inc
lea
mov
outsb
in
mov
daa
jns
insl
cmp
mov
or
rol
sub
pandn
shll
inc
xchg
sub
or
mov
pusha
ja
imul
pop
mov
testb
inc
daa
pop
repz
aas
xor
cwtl
xor
xor
inc
jne
fcmovbe
aad
jnp
das
rolb
mov
lds
je
cmp
ficoms
xor
in
insl
jl
out
mov
sbb
movsb
push
and
xchg
pusha
dec
out
mov
fldt
pop
in
pop
movsb
jns
and
cmp
xchg
pushf
test
push
test
repnz
ret
clc
xlat
and
in
adc
pusha
cmpsb
popa
daa
stos
iret
push
int3
lahf
aas
lahf
xor
pop
mov
out
push
test
inc
out
sti
adc
pop
hlt
inc
cmp
scas
ret
adc
lods
andl
inc
test
shrb
jno
popf
rcr
hlt
sub
in
sbb
and
in
sbb
cmpsb
mov
sbb
stos
jmp
movsl
leave
cmp
mov
imul
movsl
inc
push
lock
xchg
adc
pop
push
aas
jecxz
push
insb
pop
mov
imul
xchg
arpl
adc
jecxz
pop
jae
out
cmpsb
sbb
adc
sub
stc
sub
or
fdiv
sti
pop
rol
dec
cmp
repz
push
push
sbb
pop
dec
cmp
jmp
mov
popf
sti
adc
test
and
mov
lods
pusha
scas
sub
pop
adc
jl
add
mov
xchg
inc
imul
stos
test
jg
int3
xchg
jbe
int
movsb
loope
pmaxsw
inc
add
pop
imulb
bound
push
ja
stos
cmpsb
pop
int
pop
std
sbb
mov
jb
fsubrs
xchg
adc
jge
push
pusha
or
shll
adc
adc
or
stos
in
dec
lock
jb
lods
xchg
adc
ss
rclb
add
dec
adc
movsl
dec
fwait
jmp
adc
leave
sub
insl
mov
jecxz
stos
push
mov
and
stos
xchg
lds
cmc
jl
lods
push
sbb
icebp
pop
jmp
add
adc
out
and
dec
or
int
sbb
mov
mov
mov
xchg
adc
mov
or
xor
in
out
shrl
pop
aas
xchg
aam
outsl
or
jbe
pop
inc
loope
dec
adc
sbbb
xorb
lret
ljmp
cld
mov
push
sbb
clc
add
push
xchg
insl
sub
lcall
test
xor
dec
arpl
inc
mov
dec
mov
jo
insb
ret
imul
lcall
js
loopne
xchg
lock
and
dec
push
stos
mov
adc
movsb
push
mov
lods
mov
pop
jbe
jge
les
insb
mov
js
xor
inc
dec
or
mov
bound
add
inc
ljmp
xor
add
out
push
call
insl
or
or
ret
xchg
out
cmp
adc
dec
pop
mov
sub
sbbl
sbb
and
shll
cmp
adc
cmpsl
xchg
xchg
aam
cmc
dec
sub
adc
aad
push
repnz
in
sub
cli
xchg
cmp
bound
ret
vcmpsd
adc
out
xor
scas
add
aam
fidivs
sbb
dec
inc
push
pop
cmp
stc
sbb
xchg
mov
xchg
arpl
adc
pop
rorl
lahf
mov
cli
dec
push
arpl
or
fwait
insb
scas
je
jmp
and
or
mov
pop
lret
daa
jbe
cmp
add
aam
inc
popa
mov
mov
cli
enter
jb
adc
les
push
jne
add
and
lock
or
cmp
stos
mov
push
mov
cmc
mov
lea
test
fimull
inc
js
inc
sub
or
jnp
mov
sub
push
popf
add
mov
push
xchg
jae
pop
out
lods
mov
jbe
scas
call
sti
pop
mov
sub
notb
clc
scas
push
cmc
icebp
aaa
push
push
and
jge
sbb
les
aaa
dec
sbb
cmc
jns
test
dec
adc
popf
cmc
in
gs
mov
adc
sub
or
repz
loopne
jg
xorl
test
outsl
jp
xor
add
data16
addb
inc
inc
sbb
and
jp
xchg
std
pop
and
cli
xor
cwtl
cmp
sub
xchg
cmp
mov
shl
sahf
in
xchg
mov
in
pmaxsw
test
pop
repnz
rcrl
bound
mov
add
stos
sbb
jle
jg
es
push
movsl
cmp
xor
cmp
mov
xor
cli
cmp
jne
mov
outsl
pop
inc
popf
dec
es
sbb
cld
sbb
jo
or
xor
out
popa
lahf
arpl
push
push
das
lcall
int3
shrb
mul
mov
fimuls
dec
add
xchg
inc
out
ja,pn
xorb
negb
and
pop
cltd
xchg
and
ss
mov
popa
pop
cmp
in
mov
fdivr
mov
jae
repz
cmp
push
pop
les
mov
adc
jmp
mov
out
push
outsb
adc
ret
ret
cmp
add
adc
dec
xor
lods
test
insb
adcl
scas
pop
movsb
outsb
xchg
dec
loope
or
sbb
ljmp
shlb
adc
lahf
and
test
xchg
jo
mov
xchg
fld
pusha
outsb
inc
cmp
vfrczss
mov
mov
cltd
jb,pn
cld
xchg
or
mov
jb
ja
insb
imul
lods
imul
mov
cld
mov
or
inc
mov
pop
stc
sub
leave
push
rcr
cmpsb
mov
lds
inc
dec
into
enter
fcoml
and
jl
and
arpl
outsb
jp
jb
or
cmpsl
jbe
sub
add
outsb
rcrb
movsb
inc
bound
mov
pushf
push
out
sbb
orb
imul
fldt
bound
inc
xchg
mov
leave
loopne
mov
add
and
push
push
aas
or
dec
xchg
int
addb
mov
test
mov
orl
add
rorl
xchg
sub
dec
add
and
dec
mov
popa
inc
sbb
adc
fs
adc
popa
add
bound
fcoml
cmpsl
fwait
mov
rcr
mov
jo
pushf
fcomps
stc
xchg
add
jmp
add
jg
psubw
sbb
into
scas
scas
jo
das
jecxz
jbe
out
dec
and
lods
jg
pop
loopne
out
add
push
fisttps
hlt
push
push
arpl
jo
adc
pop
aaa
jl
add
insb
sub
push
xchg
pop
aad
in
inc
adc
jge
and
jb
data16
mov
pop
iret
iret
jae
mov
das
in
cwtl
test
stos
sti
mov
fisttps
cmp
insb
push
fldenv
jae
mov
jo
xchg
aad
xor
jbe
scas
mov
js
cmp
nop
sbb
rol
cltd
push
xor
aas
pop
imul
das
leave
inc
rclb
xor
clc
xlat
pop
testl
stc
icebp
jo
insl
cmp
insl
lahf
mov
mov
jo
mov
repnz
xchg
sbbl
sbb
pop
mov
push
lahf
flds
mov
lea
adc
gs
aas
sbb
hlt
ret
pop
sbb
pop
imul
stc
das
sub
cmpsl
es
cwtl
sub
mov
mov
sti
dec
adc
cmp
push
jb
mov
inc
roll
mov
and
adc
or
fs
aas
lds
repz
mov
notl
jle
movsb
repnz
lret
adc
es
inc
dec
lods
mov
inc
in
cmp
stos
cld
pop
mov
ret
mov
aaa
add
cmpsl
cmc
mov
jecxz
mov
imul
dec
jno
pop
mov
fnsave
jle
les
and
cmp
imulb
or
mov
sub
push
xchg
rcpps
adc
mov
push
or
mov
jp
mov
cmp
dec
sbb
mov
shrb
cwtl
in
insb
inc
fnstsw
pushf
mov
iret
lods
lahf
cltd
sahf
popf
testl
outsl
cmp
sub
pop
jg
adc
push
push
pop
pop
dec
sti
add
adc
pop
sbb
lock
dec
and
cmpb
lea
mov
mov
je
inc
or
in
sbb
cmp
jmp
mov
movsb
pop
out
aam
dec
test
sbb
aaa
out
mov
or
jne
jle
outsb
or
add
jo
add
dec
loope
mov
popa
gs
inc
sub
fs
loop
push
call
cmp
out
sbb
out
cld
test
xchg
sub
or
gs
sti
bndldx
gs
cli
ret
test
pop
imul
cmp
divl
pop
add
push
icebp
push
into
es
int
fs
add
cltd
and
push
add
jmp
les
xor
push
add
outsl
and
jge
dec
scas
push
repz
mov
lcall
sbb
push
sbb
inc
xchg
insb
gs
je
adc
stc
stos
push
push
mov
xor
adc
lods
test
push
sbb
aam
cli
pusha
imul
frndint
pop
or
inc
stc
inc
mov
pusha
mov
jl
add
dec
cltd
mov
xchg
iret
test
outsb
push
mov
lret
popa
nop
rcrl
inc
stc
insl
sub
mov
sbb
sub
sub
das
xor
iret
sbb
xchg
cmpsl
sbb
les
xor
xor
rorl
rcrb
mov
xlat
cmp
loopne
out
test
fwait
insb
cmp
jne
mov
dec
push
lea
xor
pop
rclb
test
rep
jno
push
mov
mov
mov
fs
and
push
lret
ss
dec
shlb
xor
loope
insl
stos
insl
and
in
push
jo
jnp
jp
bnd
xchg
xchg
push
mov
in
leave
and
int
fdivl
pop
call
pop
add
fmul
jg
push
inc
and
pop
jbe
stos
push
mov
dec
shrl
movsl
xchg
into
sahf
pop
scas
orl
test
inc
jnp
andl
jge
mov
mov
xchg
pop
dec
andb
pop
or
in
imul
or
loopne
sub
jbe
mov
mov
lods
movsb
loop
cmpb
xchg
int
xor
cs
sahf
scas
cltd
out
lcall
add
lahf
addr16
outsb
mov
call
add
pusha
rclb
mov
lds
push
call
xchg
and
adc
or
or
outsl
loop
cld
rcrl
jne
push
arpl
sub
enter
aas
push
js
imul
inc
sbb
ds
push
push
sar
xor
lds
in
pop
cld
div
out
mov
push
mov
cmp
js
xchg
cmc
in
xor
repnz
mov
jmp
xor
decb
call
test
inc
aas
push
push
cwtl
xchg
mov
unpckhps
icebp
lahf
gs
popf
in
ror
xchg
xor
aas
xlat
mov
aas
xor
push
lds
pop
push
adc
pop
mov
loope
lock
fistps
mov
rcrl
out
add
mov
mov
jecxz
pop
inc
mov
mov
test
and
mov
mov
mov
aaa
push
cld
call
cwtl
out
movsb
mov
add
sbb
outsb
pop
or
fwait
push
fs
jo
lods
sar
push
test
jnp
fnsave
clc
cmc
or
enter
insb
push
and
repnz
test
hlt
and
xor
add
out
mov
and
test
int
out
add
xchg
xor
sub
jns
mov
ljmp
jg,pt
enter
and
loope
pusha
and
jb
imul
stos
mov
xlat
adc
or
fidivs
fwait
fwait
ljmp
cmp
add
inc
icebp
lock
test
add
or
stos
rcll
sub
mov
mov
pushf
cmpsl
shll
xor
mov
shll
out
pextrw
mov
dec
ret
xchg
stos
xor
and
inc
add
les
push
and
push
mov
lret
push
int3
cmp
mov
fimull
in
stc
cmp
jb
and
ret
scas
leave
nop
jns
jnp
insl
or
dec
in
lret
pusha
or
nop
or
adc
sub
mov
sbb
and
mov
mov
leave
ffreep
mov
mov
iret
sub
stos
mov
xchg
xor
aaa
lret
sub
adc
dec
cmp
sti
mov
sub
jns
test
adc
jmp
sub
adc
rclb
push
arpl
test
and
sbb
mov
add
es
lods
outsl
dec
lahf
out
into
bound
cmp
xchg
xchg
xor
bound
pop
jnp
xorl
xor
sbb
sub
out
mov
or
mov
gs
xchg
inc
repnz
jp
push
dec
xor
xor
inc
outsl
stos
mov
jge
pop
daa
popl
or
sub
into
les
xchg
fiaddl
test
xor
dec
cmpb
in
sbb
pop
cmp
rcr
fmulp
dec
sahf
dec
cli
xor
and
mov
scas
fwait
lods
jbe
push
shlb
rorl
daa
lods
mov
shl
jne
outsl
pop
jge
sbb
movsl
leave
or
or
lods
inc
iret
outsb
pop
inc
dec
sbb
add
mov
into
jae
scas
mov
jo
pop
dec
arpl
loopne
repz
push
mov
inc
in
imul
or
push
mov
out
cmp
jg
xchg
loope
push
mov
inc
test
inc
negb
paddq
ret
sub
push
loop
cmp
sbb
add
adc
and
lret
jg
or
and
and
rolb
mov
test
rcr
push
dec
and
cmp
and
pop
out
add
mov
xchg
jle
fldcw
popa
pop
and
in
fs
int3
or
jmp
mov
rcrl
sbb
mov
inc
mov
add
push
pop
inc
adc
test
xor
insb
inc
xchg
lcall
cmp
std
nop
pop
shlb
imul
stc
jle
jge
inc
inc
and
inc
dec
sub
lahf
jg
mov
aas
addr16
repnz
inc
cld
add
mov
sbb
sbb
add
xchg
inc
pop
imul
push
mov
pusha
fcmovnbe
aas
xchg
inc
adc
enter
cmpsl
jnp
xor
popa
pop
mov
and
push
mov
lock
inc
and
out
rclb
and
xchg
sbb
js
or
push
movsb
push
xor
mov
mov
mov
sbb
fstp
gs
jne
adc
mov
adc
push
lcall
test
push
sahf
and
pop
push
ss
add
mov
or
into
and
inc
aas
imul
jecxz
jb
cs
sahf
ror
jno
push
mov
jmp
insb
cld
fs
pop
mov
sbb
inc
xor
sti
into
test
lret
fidivrs
movb
mov
dec
scas
inc
xor
dec
repz
ljmp
dec
add
jnp
mov
fistps
adc
sahf
data16
pop
repnz
test
fbstp
pop
or
fistl
notb
ss
mov
in
sbb
push
push
lret
xchg
enter
dec
jae
or
mov
jmp
push
and
mov
in
movsb
xchg
mov
int
fnsave
mov
and
sbb
xchg
adc
sub
sti
clc
rorb
out
add
movsb
pop
shrl
lret
out
sbb
pushf
fldl
test
jmp
cmc
loope
jne
movsb
or
cmp
dec
mov
in
lods
int3
ret
inc
std
lret
or
dec
scas
test
and
xor
lahf
xor
mov
out
or
scas
push
xor
mov
jns
xor
mov
bound
jbe
mov
xor
jb
add
push
loop
js
gs
iret
xacquire
or
sub
add
sub
addr16
out
leave
xchg
rcrb
mov
scas
xchg
inc
dec
pop
nop
adc
dec
xor
jecxz
pop
rcll
cmp
in
cmp
push
xchg
ss
mov
and
pop
push
daa
cmp
push
cmc
or
daa
cmp
movswl
fiadds
inc
ret
cli
dec
add
loope
mov
cwtl
add
repz
call
jo
out
mov
movsb
pop
cmpsb
out
icebp
subl
stos
mov
dec
ret
pop
dec
stc
imul
jmp
enter
fs
and
and
mov
movsl
shufps
inc
stos
imul
in
jbe
movsb
pop
movsl
movsb
daa
das
push
add
jnp
jns
je
movsb
div
jno
movlps
in
adc
fsubs
mov
add
aad
add
jp
fadds
out
xchg
fs
push
fisttpl
arpl
push
sub
in
jmp
xor
js
clc
loopne,pt
nop
iret
mov
cltd
dec
mov
mov
push
dec
mov
sub
adc
push
rcrb
jno
sub
aaa
xlat
lock
lret
mov
fidivrs
mov
and
loopne
or
adc
addr16
jnp
xor
or
cwtl
adc
jae
ljmp
lahf
pop
dec
outsb
jmp
push
cmp
push
mov
push
mov
jns
mov
gs
mov
ret
rorb
lahf
inc
push
fmul
sub
mov
sbb
push
cs
pop
cmp
mov
cmp
mov
cmpsl
pop
jae
push
mov
sub
push
add
push
xchg
fildl
add
inc
fildl
push
out
imul
xor
fsubrl
mov
cwtl
pop
adc
js
sahf
push
jae
jmp
cmp
jecxz
or
push
or
cmp
enter
daa
aam
cli
sti
inc
into
fbstp
mov
sub
movsl
pop
add
cmp
into
inc
mov
cs
or
push
loope
gs
mov
sbb
lds
outsb
fwait
dec
cmpsb
xchg
add
pop
fs
bound
dec
xchg
mov
mov
xchg
inc
cmp
daa
loope
cwtl
inc
cmp
cmc
test
sbb
mov
add
push
fbld
enter
pop
sbb
push
xchg
mov
jo
std
in
pop
add
mov
push
in
aam
jo
xchg
inc
int
out
xor
fistpll
adc
xchg
insl
or
sbb
stos
incb
and
inc
pop
out
in
mov
sbbl
push
pop
in
push
outsl
sub
cltd
jmp
fdivs
xor
cmp
shrb
mov
mov
sbb
add
dec
fdivr
pop
aas
les
repz
in
pop
adc
repnz
std
or
outsl
sbb
xor
sub
stos
or
mov
loope
aad
lret
inc
cltd
das
mov
cmc
stos
fcomps
inc
inc
lods
xor
push
nop
aad
pop
js
mov
jmp
jl
dec
mov
mov
jb
lret
clc
or
xchg
call
sub
dec
movsb
or
movsl
lret
rolb
and
repz
in
fnstcw
stc
xlat
arpl
mov
cwtl
xor
push
inc
aad
jnp
pop
loope
xlat
or
cmp
or
imul
iret
scas
xchg
mov
sub
bound
mov
adc
fldl
add
sub
sar
in
mov
dec
jmp
pushf
inc
popa
mov
repnz
lahf
fcomip
sub
xor
and
mov
icebp
xor
repz
int
ret
mov
xchg
add
xor
mov
push
xchg
jbe,pn
out
into
repnz
jae
xchg
xchg
jecxz
jnp
cmc
out
mov
ljmp
xor
cli
stos
mov
mov
jne
sub
xchg
loop
loope
ja
fdivp
push
lret
pop
outsb
xchg
stos
int3
iret
in
lcall
xchg
add
xor
inc
mov
mov
out
mov
leave
repz
ss
movhps
test
inc
xlat
pop
daa
cwtl
sbb
shl
sub
push
movsb
dec
mov
xchg
scas
sahf
mov
mov
shll
jl
cmpsl
inc
testb
mov
push
outsb
push
inc
mov
das
or
js
stos
js
add
inc
and
lretw
sbb
cmp
jge
es
sbb
rcrb
and
loopne
adc
dec
les
out
pop
jg
xlat
mov
stc
shrl
mov
fisubrs
cmp
iret
vandnps
enter
jl
sub
add
jne
sbb
lret
loope
mov
sub
pop
mov
mov
sub
aas
pop
push
in
std
adc
shrb
aad
clc
imul
lret
iret
xchg
mov
sbb
roll
cmp
lret
movsl
ret
aaa
dec
mov
lret
sub
loop
aas
or
adc
cli
pop
and
imul
outsb
inc
gs
mov
stos
icebp
dec
adcl
lahf
aam
fldl
sub
into
fsubrs
inc
negb
out
sub
aas
cmp
add
fnsave
inc
sbb
stos
jo
dec
imul
or
lds
xchg
jle
cli
stos
in
sub
popa
jne
lods
cltd
lods
fs
stos
es
ljmp
inc
sub
jecxz
sbb
and
gs
add
xor
add
inc
hlt
divl
push
aas
add
lock
test
sub
pop
sti
or
add
jo
mul
mov
mov
shlb
jp
or
xchg
add
jp
jae
out
mov
addr16
cmp
shlb
xchg
aaa
dec
sbb
movsb
xor
int
add
xor
push
dec
lret
adc
inc
inc
xchg
cmpsl
test
ret
out
xrelease
cmp
das
push
pop
cwtl
and
aas
movsb
lea
aas
sti
aad
int
minps
push
cmpl
ss
loope
pop
push
outsb
dec
lds
subl
push
fadds
lods
int
pop
mov
jp
in
xor
pop
jecxz
dec
cld
cwtl
aam
push
testl
jecxz
les
mov
ret
gs
enter
clc
aaa
test
push
add
aas
add
xchg
inc
loopne
popa
scas
in
sub
or
rcll
lea
jne
add
pop
adc
pop
fsubrl
adc
or
mov
mov
mov
or
shll
and
inc
xlat
add
ficoms
sbb
int
into
fidivrl
sub
lahf
mov
and
cli
cmp
and
push
mov
add
ss
mov
mov
fldl
sub
ss
neg
test
into
cld
mov
sub
bound
sbb
rolb
pop
jno
in
mov
out
xor
loope
xchg
jp
cwtl
add
push
jecxz
sahf
movsl
sarb
insb
inc
iret
or
cmp
mov
push
sbb
call
rcrb
paddd
idiv
mov
loopne
arpl
xchg
pusha
lods
out
or
dec
in
push
xchg
sub
mov
xchg
sbb
jb
sti
out
push
push
mov
cmpsb
sbb
in
and
add
add
cmp
nop
mulb
add
js
inc
fistps
nop
insb
xor
enter
cli
fisubrl
aad
iret
and
xor
mov
pop
xlat
lock
inc
mov
and
cmpl
popf
or
mov
jle
stc
ret
sbb
jbe
fiaddl
jo
ja
and
test
jg
lret
lahf
out
mov
mull
mov
xchg
and
cmpsb
sbb
in
testb
mov
insb
data16
std
add
shr
je,pn
jmp
cltd
loopne
lods
xchg
jl
popf
xchg
pop
mov
enter
cmpsl
dec
mov
dec
adc
bound
or
gs
imul
xlat
loope
call
xor
add
add
fldl
inc
ret
out
inc
ss
mov
xor
sbb
ffreep
xorb
ss
ret
push
je
or
nop
jne
into
je
push
push
xor
inc
mov
add
fistl
add
ret
neg
mov
jo
pop
adc
inc
les
lods
push
cmpsl
andl
nop
iret
pop
push
xchg
pop
cmp
movsl
or
hlt
icebp
popa
fwait
outsl
arpl
mov
daa
jne
hlt
outsl
xchg
icebp
insb
ror
and
pushf
push
mov
jno
or
lcall
aad
iret
push
out
inc
xlat
in
arpl
outsb
mov
or
in
nop
sbb
stc
pushf
lcall
cs
fpatan
ficoms
sub
inc
cmp
ret
lods
arpl
push
push
pushl
cmc
inc
sbb
cmp
lcall
adc
out
pop
lods
shrl
pop
iret
dec
stc
jnp
lahf
cmp
add
add
outsb
and
push
pop
jl
add
or
push
aam
iret
jg
mov
sub
push
cmp
push
xor
jecxz
fsubrl
imul
cmp
pop
pop
sbb
push
lods
ljmp
dec
stos
cmp
pop
sbb
adc
add
adc
pushf
jo
jnp
movups
pop
fmul
enter
and
ja
loopne
or
into
daa
add
pop
jge
test
inc
orb
data16
jae
repz
popa
jno
xor
mov
push
mov
dec
rcr
sbb
cmpsl
cltd
pusha
mov
jns
mov
jae
pop
fldcw
or
insb
fcoml
orb
filds
mov
adc
sub
inc
fisttpl
pop
shrb
pop
and
mov
das
clc
shld
popa
mov
pop
xor
scas
movsb
xor
xchg
xchg
or
repz
or
lea
fbld
push
cmp
in
je
flds
hlt
test
mov
xchg
scas
xchg
imul
xor
sbb
xchg
adc
push
push
mov
fstpt
mov
sbb
test
sahf
fwait
mov
loope
sbb
inc
push
aad
repnz
fisubrs
fisttpl
cld
rcrb
add
shlb
and
or
fdivrp
inc
or
test
iret
cwtl
sub
fdivr
ljmp
ret
push
cli
mov
andb
dec
or
dec
sbb
or
push
int
jns
sbb
mov
xchg
push
and
cmpsl
adc
clc
in
stos
dec
jge
adc
jp
stos
cmp
imul
daa
push
xchg
addr16
push
cmpl
aas
cmp
out
std
insl
inc
dec
adc
push
add
sbb
leave
outsl
or
inc
adc
imulb
outsl
jp
rcrl
repz
or
addl
mul
inc
push
jp
xor
fstpl
ret
fwait
xor
mov
imul
adc
pop
mov
sbb
iret
cmp
mov
push
pop
push
inc
in
cmc
lock
in
loope
lea
int3
pop
push
stos
push
sbb
ror
outsl
test
adc
sub
jle
notb
pop
pop
ss
sbb
lea
jnp
adc
in
push
cmp
mov
jb
xor
cmp
data16
add
mov
pushf
repz
push
mov
cltd
mov
pop
into
lods
inc
and
je
aas
adc
push
cmpsb
inc
flds
inc
arpl
scas
out
es
xchg
pusha
lahf
pop
hlt
mov
jnp
call
dec
jns
int
pushf
cmpsl
add
stc
cld
mov
outsb
aas
out
mov
pop
loop
jb
test
movsl
or
lcall
fmuls
add
xchg
jnp
jg
pop
imul
xorl
mov
ret
pop
sub
data16
jno
or
out
jge
mov
sbb
and
mov
xor
in
mov
jecxz
call
leave
and
in
jg
mov
cmovo
pop
fstp
inc
arpl
aad
and
data16
lahf
sub
or
mov
or
lret
xor
xor
and
pop
aaa
inc
mov
fistps
rep
pop
or
sarb
push
dec
das
je
jp,pn
pop
lret
cmpsl
out
sbbb
ret
jnp
xchg
xchg
push
stc
dec
add
inc
cli
mov
mov
mov
imul
mov
jg
inc
mov
out
xor
mov
pop
rorb
aam
iret
cmpsw
xchg
jns
xlat
call
data16
inc
xchg
pusha
pop
inc
lock
jo
cltd
ja
les
sbb
fndisi(8087
test
in
rcll
mov
pop
daa
sti
mov
dec
dec
lahf
pop
adcl
fs
mov
xchg
in
pop
and
ret
jmp
les
idivl
dec
add
dec
hlt
and
pop
mov
adc
sub
dec
sbb
jl
inc
in
imul
decb
jb
incl
icebp
and
and
pushf
jmp
pop
loopne
add
les
pop
enter
loopne
lret
sbb
fsubrp
xorl
sub
inc
scas
clc
test
or
repz
push
push
push
sbb
pop
shl
xor
cmp
pop
cmpsb
push
pop
cs
std
push
dec
ss
fdivrl
mov
pcmpeqb
pusha
adc
sbb
mov
xor
and
mov
cmpsb
mov
js
lds
cmpsl
test
rolb
outsb
mov
cs
cmp
jae
movsl
rcl
mov
cmpsl
cld
or
stos
iret
movsb
shll
std
popa
add
xchg
push
shlb
and
mov
rcrl
push
xor
pop
xchg
ret
cmc
xchg
push
stos
xor
ljmp
or
mov
mov
add
stos
jae
add
pop
cld
decl
dec
inc
xchg
shll
sbb
out
loope
mov
jo
or
imul
dec
test
shlb
out
shrl
jg
aad
lock
scas
inc
push
xor
jno
jno
iret
pop
sbb
mov
jae
jg
sub
stos
push
jle
mov
jle
insl
call
fcomi
loope
xchg
mov
mov
xor
add
mov
mov
stc
clc
in
dec
call
loopne
push
jns
data16
xorb
mov
push
adc
into
outsb
sbb
pop
mov
push
mov
jne
call
test
or
jle
jg
xchg
xchg
sbb
ret
mov
push
xor
js
lcall
jne
jnp
mov
test
pop
int
in
rcrl
jecxz
jne
aad
push
sbb
xchg
ror
xchg
inc
add
fistl
adc
sub
sbb
push
in
movsl
data16
sub
mov
jmp
jo
push
or
dec
paddusb
mov
popf
in
mov
cs
mov
leave
add
xchg
lock
sbb
mov
ja
xor
mov
add
cmp
insl
pop
jno
popf
mov
daa
lea
xchg
push
mov
sbb
mov
and
lods
nop
jae
int
xchg
sub
mov
jge
daa
hlt
movsb
add
iret
mov
rcr
sbb
dec
xchg
mov
xchg
mov
mov
cmpb
std
mov
lods
push
add
and
xchg
aas
test
fs
mov
push
add
out
xchg
loopne
push
inc
and
inc
xor
jo
ss
pop
sar
adc
nop
xchg
add
cmp
pop
cmc
fstpt
add
pop
aaa
sbb
pop
lret
fwait
mov
cwtl
and
dec
clc
jnp
pop
dec
inc
divl
lods
test
or
lret
out
je
rcll
sbb
push
mov
dec
pop
imul
cmp
mov
aad
int
sub
shrl
inc
sbb
adc
mov
add
les
ds
into
add
test
stc
icebp
mov
subl
stos
cltd
arpl
ret
sub
mov
push
in
outsb
icebp
xorb
or
neg
jnp
jl
cmc
repnz
xchg
inc
stos
in
or
or
mov
or
cmp
incl
jbe
pop
sarb
pop
dec
shr
rorl
js
mov
sar
daa
fldt
insb
cmp
sti
cmp
jb
stos
mov
daa
push
imul
push
loope
leave
inc
push
push
mov
xlat
lods
mov
lahf
cmp
mov
fcompl
mov
shr
fwait
scas
fcmovnu
cld
test
push
mov
fimuls
add
cli
dec
andl
xchg
or
mov
int
add
fisubrs
mov
loop
idiv
rolb
cmpsb
sti
pop
sub
enter
pop
add
adc
pop
int
pusha
push
mov
push
jge
inc
jecxz
xor
dec
cmp
cmp
xor
push
out
or
rcll
leave
mov
sub
decl
jge
jmp
sub
mov
xchg
andb
movsb
outsl
cmpsl
inc
test
dec
pop
xchg
pop
aaa
sti
cmp
call
out
adc
jle
add
add
mov
sub
cmc
dec
popf
das
adc
push
js
jg
xchg
pop
jmp
lea
lahf
fsubrs
fsubrl
ljmp
sbb
pop
pop
mov
enter
xor
stc
shll
cmpsl
movsb
xor
adc
mov
lea
cmp
dec
xor
popa
xchg
popf
sbb
call
outsl
cmpsl
add
jno
or
push
repnz
ret
push
or
shr
leave
repnz
push
js
pushf
sbb
jo
out
mov
sahf
fldt
loop
or
rcl
andl
or
scas
xchg
jb
jo
stos
lcall
cltd
popa
mov
mov
pmaxsw
dec
adc
xchg
mov
popl
inc
pop
pusha
sub
imul
xchg
dec
insb
xchg
cltd
lea
sbbl
call
inc
adc
mov
test
mov
xchg
lods
stos
je
pusha
cmc
cmp
xor
aad
lods
mov
cmp
pusha
cmp
mov
out
jmp
scas
movsb
das
clc
fbstp
mov
mov
dec
test
popf
fwait
adc
push
mov
scas
mov
fsubl
and
lret
push
mov
pop
mov
hlt
jp
xor
dec
fildl
scas
adc
hlt
inc
mov
adc
rorb
ret
in
repz
jne
sbb
rcrl
cmpsb
push
dec
insb
in
or
out
addr16
pop
jmp
jle
loop
add
adc
and
add
notb
out
xor
sti
mov
push
out
adc
mov
jmp
push
or
xor
fwait
cmpb
or
cmp
popf
jae
xor
sarl
jl
jg
xchg
jb
push
mov
sbb
mov
mov
mov
loop
mov
push
lahf
cmc
inc
lods
fwait
push
dec
cmp
jno
mov
push
xor
sarl
jbe
das
mov
shrl
inc
push
sahf
push
mov
cmp
movsb
inc
aas
sub
jne
in
fs
mov
sbb
decb
das
jmp
sti
ret
out
out
jge
out
dec
cs
jne
jne
mov
inc
push
push
std
ret
push
mov
iret
lods
cld
or
gs
jo
ficompl
call
mov
xor
popa
sbb
ficoms
adc
jge
add
jne
das
int3
and
ja
jno
mov
lret
sbb
das
cmpsb
bound
fst
sub
mov
pop
ljmp
arpl
ret
and
cmpb
adc
xor
mov
call
test
adc
pusha
sbb
cmp
xchg
popa
pop
bound
sti
mov
dec
enter
jbe
mov
aas
jnp
inc
lods
stc
insb
out
adc
in
push
push
mov
mov
imul
sub
leave
inc
push
mov
dec
cmp
mov
mov
dec
adc
push
cmp
cltd
les
mov
pop
in
xchg
lahf
adc
ret
mov
and
or
fstp
sub
inc
xchg
int3
push
mov
sub
mov
mov
or
enter
jne
jmp
mov
outsl
ret
test
lcall
sbb
push
fimuls
xchg
jl
push
cli
sahf
adc
jnp
adc
dec
test
jns
sbb
mov
into
and
fsubp
and
lret
int3
pop
pop
pop
cmp
icebp
adc
out
and
pop
lea
adc
sub
inc
add
mov
jmp
insl
js
xor
jae
das
bound
fcmovnb
mov
add
bound
lret
xchg
testl
test
inc
dec
fldlg2
fdivs
data16
jo
inc
std
dec
mov
and
fstl
pushf
inc
fs
addr16
les
jb
mov
and
lods
in
push
aad
ds
mov
ss
into
lods
call
sbb
adc
jbe
sti
out
je
push
into
pop
lock
in
lahf
mov
push
mov
into
adc
cmp
add
inc
or
int3
mov
js
and
push
push
cld
lret
cltd
pop
jl
daa
cld
cs
xor
mov
dec
subb
out
imul
jne
adc
int3
jns
xor
mov
xchg
jae
addb
out
xchg
aaa
mov
hlt
cli
outsl
cmp
sub
scas
insb
call
or
sbb
push
sub
push
xchg
jge
or
cli
mov
clc
mov
jnp
sub
mov
test
push
outsl
xchg
daa
movsl
push
cs
js
sahf
jle
sbb
movsb
jmp
sbb
xchg
mov
xlat
jae
dec
mov
or
clc
or
mov
push
pop
mov
addb
das
lret
pop
push
add
iret
jge
lret
addl
and
sub
pop
out
pop
lods
xor
cltd
push
jp
adc
sarl
sbb
decl
xchg
xchg
dec
jae
dec
repz
jge
addl
fwait
les
mov
xor
hlt
xchg
xchg
in
enter
jg
inc
out
sub
out
mov
je
loop
std
iret
push
int3
sub
mov
aam
sub
cltd
lcall
stos
jae
cmp
mov
jo
sub
insb
mov
sbb
mov
dec
adc
cmp
addr16
dec
mov
daa
jg
insb
push
loope
into
scas
dec
aam
xor
pop
pop
pusha
sbb
or
mov
popa
lods
pusha
xchg
or
in
sub
incb
sti
or
fisttpl
pop
loopne
lcall
lahf
decb
sahf
mov
jo
in
sbb
fistpl
sub
mov
arpl
or
stc
mov
mov
in
and
mov
sbb
mov
repnz
popl
inc
push
mov
xchg
test
or
mov
dec
xchg
mov
jbe
jecxz
jge
rolb
mov
out
pop
adc
sub
dec
mov
mov
inc
iret
imulb
jp
cwtl
cmp
mov
add
push
aas
std
cs
or
lcall
mov
xchg
gs
cmpsb
fstl
add
pop
cld
rcl
adc
cld
xchg
imulb
xor
xchg
inc
inc
jg
cltd
aam
add
rcr
in
or
data16
cmp
inc
into
test
cwtl
sub
clc
js
pusha
fmuls
cmpsb
js
and
imul
lods
jnp
mov
inc
in
push
push
mov
dec
mov
movsb
xorb
pop
sub
rcrl
push
pop
ljmp
scas
test
or
xor
out
push
fstpl
sahf
mov
pop
outsl
inc
mov
scas
into
dec
sahf
mov
inc
jmp
inc
push
fcmove
and
scas
fisttpl
ret
cmpsb
cli
lea
jge
es
addr16
or
dec
jnp
dec
outsl
and
in
fistl
mov
mov
cmp
mov
dec
pop
xor
cmp
fwait
jge
scas
test
xor
xlat
lret
mov
cltd
sub
lods
mov
in
push
add
orb
mov
pop
xchg
divl
xchg
insb
push
add
xor
xor
repnz
lcall
out
mov
fcoms
mov
mov
fmull
fdivs
and
push
insb
fs
sbb
pop
or
lds
cmp
into
add
inc
sub
daa
and
out
mov
in
je
adc
cltd
mov
out
push
shr
xor
js
mov
xor
sub
adc
or
pop
jae
mov
adc
mov
iret
inc
aas
lods
call
cld
or
ffree
dec
ds
jmp
dec
mov
enter
das
testl
ret
push
aas
insb
sbb
iret
add
add
pop
mov
test
and
sahf
divl
and
push
jno
add
test
cmp
mov
mov
lods
pop
mov
addr16
cltd
ljmp
mov
add
aaa
test
daa
insl
and
inc
rolb
xchg
stc
jge
lea
add
xor
mov
lods
js
stos
js
and
movsb
sub
add
shll
testl
movsl
pop
lods
dec
xor
loopne
pusha
sbb
ret
stc
push
outsl
in
push
mov
or
pushf
sub
inc
adc
add
xchg
loope
xor
shrb
movsb
iret
sbb
jle
inc
test
scas
mov
dec
pop
cmp
xor
pop
dec
sub
je
stos
jb
mov
and
push
out
call
add
leave
repnz
xchg
aas
ljmp
icebp
inc
out
jns
in
movsb
lret
adc
shr
or
mov
call
shll
mov
and
and
popa
push
stc
jg
push
dec
cltd
push
mov
enter
aas
dec
push
test
leave
push
dec
pop
pop
inc
pop
mov
jecxz
push
lcall
mov
aam
pop
cmp
xchg
push
into
xor
or
ljmp
mov
and
xchg
pusha
das
popa
jp
clc
adc
dec
pop
jnp
xbegin
lahf
push
int
sahf
cli
mov
and
pop
xlat
pop
mov
xor
enter
push
pushf
ds
setbe
and
adc
inc
adc
dec
pusha
jns
xor
mov
mov
in
push
pmullw
sub
inc
fmull
dec
push
jns
sbb
pop
inc
add
sub
add
sub
inc
jbe
pop
add
add
jge
ret
loopne
hlt
hlt
nop
decb
pop
jne
xchg
sub
and
xchg
pop
jle
into
pop
iret
cmovae
test
push
pop
inc
cltd
jae
jo
inc
add
jns
mov
imul
push
xor
mov
popf
inc
int3
xor
cmpsb
jo
mov
dec
xchg
cmp
sub
aaa
or
mov
fdivs
inc
rorl
fsts
pop
inc
mov
push
cmc
cli
loope
push
iret
mov
mov
adc
dec
pop
neg
sbb
and
cmpsl
xchg
mov
in
push
fdivrl
enter
pop
cmc
mov
bound
mov
jmp
cs
sbb
xchg
mov
jnp
insl
push
lret
push
stos
inc
mov
xor
jmp
xor
stos
xor
stos
into
repnz
std
add
or
xor
adc
add
push
pop
les
cmpsl
out
xchg
xchg
sub
adc
adc
xor
cld
push
mov
pop
imul
stos
popa
subl
push
mov
int3
cmp
inc
and
dec
pop
pusha
out
clc
stos
sti
icebp
andb
sbb
mov
dec
sar
pop
sub
lds
and
jb,pt
jecxz
pop
aam
addb
je
popf
pushf
out
add
cmp
xchg
outsb
dec
js
xchg
into
mov
xchg
jnp
test
push
leave
fdivrl
pop
icebp
stos
pcmpeqd
jbe
pop
push
adc
fs
in
lock
push
jae
push
iret
dec
loop
xor
test
jle
ret
leave
scas
cmpl
push
jnp
test
sub
movsb
and
data16
aad
adc
jg
stos
pop
add
int
xor
mov
push
daa
fnstcw
fwait
push
sti
ret
test
mov
pop
inc
loope
mov
lret
je
jp
loope
or
mov
cmpsb
movsb
inc
dec
mov
test
adc
dec
std
mov
movntq
pop
lods
jmp
cmpl
jnp
stos
lret
pop
and
add
push
loop
insl
pop
push
push
enter
inc
daa
shll
and
movsl
xchg
sub
cmpl
xchg
pop
and
call
fmul
cmp
and
cwtl
lret
cltd
sbb
pop
pop
jns
lea
mov
lods
imul
out
int
pop
inc
insl
pop
push
mov
aad
mov
sbb
into
ljmp
adc
inc
mov
jns
pop
ret
inc
pop
xchg
pop
test
sahf
loope
or
aam
outsl
pop
incb
add
adc
adc
jp
mov
sbb
out
xor
xchg
mov
jb
int3
xor
xchg
aam
das
sbb
insb
xor
mov
pop
xchg
pop
roll
sbb
pop
xor
lds
loop
daa
je
adc
je
popf
adc
pusha
jl
leave
or
mov
das
lahf
jl
aad
repnz
cmpsb
adc
pop
aad
ljmp
or
mov
mov
div
test
addr16
aad
movsb
lcall
popf
mov
adcl
fnstcw
push
roll
mov
add
in
push
fistpll
lcall
jno
movsb
adc
hlt
std
repnz
aam
mov
sbb
or
push
scas
sarb
push
imul
sub
xor
xor
cs
test
mov
sub
mov
mov
mov
or
lahf
and
push
mov
scas
in
adc
cmp
call
lret
xor
push
push
sbb
jge
mov
sti
cmp
repnz
add
and
and
dec
ss
aas
or
in
cld
pop
int3
lahf
cmc
pop
push
ret
push
jp
dec
add
sbb
fldt
xchg
adc
push
add
jnp
adc
std
inc
repnz
repnz
jmp
leave
movsb
jns
jno
mov
test
inc
negb
popf
inc
sbb
in
xchg
xchg
jbe
and
scas
pop
les
jecxz
mov
and
mov
rcrb
lods
cmp
cld
xchg
es
inc
cmp
xchg
ljmp
dec
xchg
cli
fst
lret
adc
add
jp
mov
or
xor
in
pop
jns
filds
mov
outsl
push
push
dec
int
xchg
pop
xor
cmp
fs
mov
call
into
add
push
mov
jns
push
pop
scas
andl
push
stos
out
dec
dec
je
movsb
jecxz
cs
xor
dec
xor
ss
push
jmp
mov
adcb
sub
loope
mov
cmp
data16
int3
cmc
adc
add
push
fstpl
cmp
rorb
outsb
scas
movsl
stos
sub
test
xchg
pop
imul
mov
pop
sub
rcrl
adc
push
and
sub
and
cld
out
inc
mov
fucom
mov
int
ljmp
mov
cwtl
xchg
enter
loop
adcl
cmpsl
lahf
jle
mov
add
and
dec
lret
das
mov
pop
lret
sbb
adc
movsl
mov
icebp
dec
sbb
outsb
ret
mov
lock
push
cmp
mov
or
dec
ljmp
xchg
and
or
sarl
jecxz
xchg
jmp
or
pushf
xchg
cmp
dec
push
test
mov
hlt
sub
dec
xchg
pusha
mov
loop
in
jnp
outsb
xchg
and
sahf
push
out
notb
pusha
mov
jnp
shrb
bound
lcall
movsb
pop
and
popa
jno
cmp
push
rcll
shrb
adc
into
mov
mov
rolb
jmp
push
xchg
dec
push
imul
cmp
cmpsl
les
std
jmp
insb
xchg
lea
int3
pop
sub
test
sbb
arpl
mov
int3
xchg
sbb
dec
xlat
jnp
lahf
push
int
inc
xor
out
mov
mov
imul
mov
add
jle
fs
mov
cltd
xchg
xchg
fnstsw
test
ljmp
cmp
dec
jge
pop
mov
xchg
in
inc
mov
fistpll
test
xchg
and
inc
enter
xor
jns
mov
jae
dec
sbb
jle
jmp
dec
sbb
cmpsl
out
lret
outsb
cmp
fisttps
nop
pop
loope
dec
outsb
add
adc
call
pop
test
insb
test
fdivrl
in
jecxz
mov
fucomip
jne
addr16
mov
push
push
pop
scas
mov
pushf
jle
enter
push
or
icebp
adc
je
icebp
into
fwait
pop
test
mov
je
aad
mov
mov
sub
rcrb
repz
xor
jmp
pusha
pop
addr16
stos
or
outsb
ds
imul
sahf
fildl
les
mov
and
push
jns
out
orl
dec
ja
sub
stos
jae
pop
cmpsl
repz
andl
out
inc
std
push
outsb
jns
pop
and
xchg
shll
adc
mov
and
cmp
shlb
mov
inc
dec
dec
or
out
aad
cwtl
out
mov
scas
test
movsl
movsb
xchg
js,pt
sarl
repnz
popf
push
cmpl
ds
adc
xchg
sub
or
jmp
mov
fmull
pop
inc
jmp
inc
sbb
fsubl
shrl
or
xor
outsl
or
aaa
mov
cs
int
add
movsb
push
leave
lret
es
dec
mov
adc
aas
mov
in
or
popf
inc
or
icebp
pop
dec
lock
jle
cmp
dec
inc
jbe
lret
adc
fidivs
cltd
or
data16
push
add
jmp
repz
test
cld
fsub
mov
dec
push
push
mov
fstl
data16
aas
mov
push
inc
cmp
pop
movsl
pop
push
ret
sbb
ss
jne
out
enter
mov
ficoms
cmp
inc
push
and
popf
fcmovne
jns
outsb
sub
inc
add
ss
mov
mov
cli
sbb
sbb
test
sarl
and
mov
jecxz
aam
and
add
outsb
jb
jmp
or
ja
cltd
push
adc
jmp
dec
pop
aas
lcall
test
lret
andb
imul
cmpsl
sysenter
push
ret
mov
ror
pop
in
and
movsb
sub
lods
div
mov
add
fdivrs
dec
and
or
sbb
push
fcomps
or
popa
push
cltd
xor
shrb
ljmp
jno
jp
push
push
aas
sti
and
neg
in
dec
mov
negl
sbb
adc
push
sbb
jb
fisubrl
popf
jp
or
or
lret
shr
xchg
ds
shl
stos
dec
push
xchg
jnp
xchg
lret
mov
icebp
iret
repz
push
movsb
push
test
mov
inc
loopne
leave
add
jae
loopne
leave
dec
adc
or
xlat
xor
inc
pop
leave
shlb
ror
test
movb
shlb
add
sahf
jmp
xchg
lock
jb
lods
mov
dec
mov
sub
pusha
xchg
loop
add
and
icebp
aam
xor
add
cmpsb
jle
out
push
lret
fisubrl
add
scas
es
add
cmp
add
xor
mov
jae
in
leave
lods
mov
add
int3
jge
xchg
inc
jnp
pop
pop
add
loope
fists
pop
or
jo
imul
lahf
add
mov
popf
mov
dec
mov
sarl
mov
lret
cmp
scas
stos
cli
adc
cmp
icebp
inc
popf
cmp
lea
je
arpl
push
jecxz
cmp
xchg
mov
jne
cld
sub
or
and
daa
cs
adc
xor
sub
mul
or
movsl
in
adc
loope
sub
popa
jbe
les
xchg
daa
adc
jo
mov
mov
add
mov
jne
and
ficoms
pop
xor
xor
xchg
je
cmp
xchg
dec
outsb
cmp
enter
jns
sub
stos
test
add
jmp
test
sub
lea
ja
add
push
inc
aas
xor
std
rcll
loopne
sub
in
das
mov
xor
sub
inc
sbb
cmpsl
pop
pop
loope
xlat
fisttpl
test
repz
push
fcompl
jae
cmp
inc
jno
loopne
cld
fwait
xor
gs
mov
in
out
loope
push
in
and
addr16
pop
outsl
orb
add
fldenv
jle
mov
dec
inc
cmp
mov
rcr
imul
rorl
mov
popa
lea
cmp
arpl
pop
shl
lret
jo
mov
or
cs
lret
and
rcrb
lret
dec
mov
in
in
cli
mov
sub
test
adc
push
mov
push
hlt
or
je
lods
or
repnz
pusha
adc
popf
int
call
cmp
xlat
icebp
inc
mov
mov
mov
nop
mov
or
divb
dec
stos
sarb
jbe
adc
mov
mov
jae
or
and
outsl
or
rorb
mov
add
ret
jge
test
mov
sub
adc
mov
dec
sbb
jb
aaa
fisubl
or
mov
cld
pop
fisttpll
scas
sbb
test
dec
ffree
jne
mov
mov
mov
inc
fiadds
dec
add
stos
test
clc
les
shlb
sbb
das
clc
pop
int3
cmp
fdivs
mov
inc
and
shlb
incl
add
mov
das
into
adc
inc
push
inc
test
fwait
insl
int3
mov
outsl
daa
or
insl
scas
cmpsl
out
loopne
std
dec
jmp
sub
dec
imul
xor
fsubl
sti
ret
add
movsb
iret
stos
pop
inc
push
rorb
xchg
test
pop
test
mov
sbb
out
and
adc
push
adc
push
std
ja
andb
arpl
hlt
pop
pushl
sub
or
scas
dec
mov
push
jbe
mov
inc
outsb
jmp
jb
push
push
mov
xchg
not
in
ljmp
pushl
cmp
cmp
mov
aad
imul
push
test
dec
mov
clc
xchg
hlt
cmpsl
add
nop
add
imul
and
xor
mov
daa
adc
ret
in
xlat
jmp
out
ljmp
sbb
sbb
xor
in
pop
es
push
sti
mov
clc
jae
repnz
jmp
mov
aam
dec
lret
push
loope
sbb
mov
mov
add
mov
jp
inc
fwait
push
shll
jo
jmp
cmp
mov
outsl
jo
pop
aas
std
xorl
dec
inc
js
outsl
jb
push
cld
sub
push
dec
mov
jbe
add
push
mov
pop
push
mov
repnz
popl
ds
je
mov
pop
mov
daa
jae
scas
shr
inc
cs
dec
in
mov
cmpb
push
adc
movsl
inc
mov
jne
jmp
int
inc
and
pop
push
add
int
xlat
push
aas
cld
andl
mov
jp
push
movl
andb
pop
cmp
mov
les
pop
mov
jb
mov
xorl
clc
or
addr16
shlb
lods
pop
loope
out
sti
and
jmp
jbe
push
es
scas
push
and
mov
pop
mov
or
ret
fsubl
inc
xor
stos
cli
daa
mov
and
in
sub
nop
mov
and
cmp
xor
jl
add
adc
jge
or
sbb
pushf
stos
inc
repnz
mov
xor
sbb
pop
stc
sub
cs
sti
add
add
mov
mov
ja
xchg
daa
jecxz
or
rorb
dec
roll
or
sbb
jp
dec
cli
pop
jl
mov
rcr
popf
sub
in
fs
lret
test
sub
sub
and
pop
jnp
sub
or
nop
outsb
jp
dec
sub
add
cmpsb
lea
pop
addb
popf
push
mov
dec
mov
js
rorb
cmpsl
imulb
push
out
cmp
or
mov
cld
jne
fisubs
into
sub
pop
xlat
dec
cmpsb
loope
rclb
ss
int3
add
arpl
add
adc
stos
cmp
popf
decl
mov
pop
insb
sahf
cmp
xchg
fadds
gs
out
fxam
jnp
sbb
scas
ds
cmp
imul
pop
ds
sub
sub
imul
std
or
ja
adc
push
jp
cmpl
dec
mov
inc
adcl
sbb
dec
adc
jg
mov
fsubr
jnp
cli
mov
in
dec
enter
jne
rcrl
jl
cmpsl
add
outsl
data16
and
cmp
xor
or
fadds
loopne
xchg
addb
and
cltd
lock
sbb
and
cltd
dec
push
jne
nop
mov
jnp
sbb
ret
cltd
push
out
mov
cmp
cmpsl
xlat
push
or
aas
jecxz
stos
icebp
or
scas
sbb
mov
scas
stos
icebp
arpl
insl
push
outsl
in
add
mov
addr16
popf
les
out
dec
fsubrs
pop
pop
adc
xchg
xchg
add
and
adc
fbld
push
jno
push
xchg
loop
dec
xor
lea
jmp
test
loope
jmp
movsb
les
mov
js
in
pushf
insl
pop
dec
fwait
into
and
shll
repnz
push
les
aad
fwait
popl
fcomp
sti
xchg
and
clc
or
cs
rcl
jbe
pop
pusha
inc
push
add
and
fwait
push
add
lahf
push
push
test
push
mov
rdpmc
int
rcll
xchg
or
loopne
fnsave
cmp
inc
mov
aas
out
js
push
push
cmp
bound
call
jecxz
xchg
fcomip
fldt
lods
popf
mov
pop
xor
lret
pop
repz
fimull
and
jg
mov
call
mov
xchg
jg
es
jns
push
and
push
imul
into
push
cmp
enter
out
and
dec
sarb
sub
hlt
inc
addr16
fdivl
leave
jb
jp
mov
mov
push
jbe
mov
ds
and
push
jmp
fbld
sub
jecxz
adc
in
mov
cmp
fistpll
jecxz
push
in
pop
mov
movb
sub
inc
bound
mov
cmpsb
stc
xchg
aaa
jo
ret
call
lea
sti
mov
inc
dec
es
ror
out
std
fnstcw
mov
jecxz
xor
and
ljmp
add
pop
call
mov
fsubs
add
frstor
cmp
rcll
sub
jl
cmpb
jg
cltd
xchg
mov
movsb
cmp
in
movsb
or
dec
pop
nop
pop
divb
inc
test
cmp
and
xchg
cmc
mov
addr16
or
arpl
jmp
and
movsb
dec
fnsave
push
jle
jmp
mov
insl
xchg
jle
pop
pop
jno
movsb
mul
les
xor
neg
aam
ret
scas
js
rcll
mov
je
movb
jns
stc
xchg
inc
sbb
test
jno
cli
aaa
cmp
stc
inc
icebp
sub
xor
dec
mov
dec
mov
roll
xor
jge
out
xchg
xor
mov
lahf
cltd
dec
gs
jns
je
adc
in
jno
cltd
dec
daa
mov
sar
push
shl
outsb
je
out
stc
adc
jecxz
arpl
mov
in
fldl
push
ss
cwtl
push
js
test
icebp
push
or
xor
xchg
push
dec
addr16
adc
insl
xchg
fistps
and
adc
xchg
out
and
mov
or
xlat
cmpsl
aas
jnp
mov
leave
lods
hlt
mov
cmp
clc
lds
sub
mov
cmc
dec
jne
push
xor
cmp
aam
mov
sbb
mov
pop
stos
adc
enter
mov
test
xor
daa
mov
stos
or
dec
ja
fidivrl
pop
cwtl
lods
pop
scas
xor
bound
mov
leave
gs
sarl
and
push
stos
mov
mov
fwait
ja
outsb
mov
loope
hlt
fsubr
mov
cmp
sub
and
xor
sub
add
jp
lods
pop
adc
or
jle
dec
stos
jne
cltd
jmp
fmul
dec
or
xchg
pusha
push
dec
mov
xchg
fwait
jecxz
lidtl
or
inc
addr16
es
mov
cmp
mov
add
sbb
adc
xor
jb
mov
icebp
dec
sub
fwait
ljmp
lods
sbb
pop
sub
mov
rcll
sahf
ds
mov
sbb
cmp
lea
pop
addb
clc
jle
inc
fldenv
xor
pop
or
cltd
mov
insb
xlat
xchg
add
pop
loop
sub
sub
add
into
out
popf
cmovl
add
cmp
adc
and
mov
idivl
flds
mov
mov
sahf
movsb
adc
mov
add
pop
sbb
lahf
pop
out
inc
push
jmp
mov
decl
out
movntps
jg
sti
sbb
sbb
mov
dec
xor
stc
in
sbb
push
cmc
and
push
pop
sub
repnz
divb
cltd
cmp
lret
inc
int
ret
mov
fsubl
into
pop
jge
lret
pop
push
fs
fsubrs
dec
into
dec
imul
stc
out
mov
mov
cmp
ret
inc
sub
sbb
cmpl
cltd
or
xchg
sbb
pop
sbb
add
cs
bound
or
lahf
aad
imul
lret
sub
testb
cmp
loop
push
outsb
dec
inc
ds
or
cwtl
push
jne
movsl
fistps
cmp
insb
dec
aam
lea
cli
nop
frstor
imul
pop
push
fstpl
pop
mov
or
sahf
inc
loop
sbb
mov
add
push
sbb
out
std
xlat
imul
xor
mov
adc
fmuls
pop
adc
int3
and
mov
mov
adc
and
jae
jg
inc
mov
push
mov
adc
mov
ja
mov
mov
jle
rol
pop
inc
in
add
jnp
cmp
cmp
loop
stos
xor
sbb
inc
push
inc
stos
insb
lods
pop
inc
in
out
mov
mov
fs
pop
dec
mov
mov
mov
lds
add
mov
cmp
leave
movd
lret
jge
sub
aam
and
rolb
mov
cld
and
push
add
out
pop
jb
jnp
outsl
movb
push
sub
and
movsl
xchg
sub
push
mov
ret
mov
mov
lret
mov
call
insl
mov
sbb
adcb
cmp
shr
repnz
xchg
cmp
and
mov
in
jl
movsl
insb
dec
add
mov
fnstenv
sbb
mov
mov
jnp
sub
add
call
cmc
mov
insb
out
xchg
xor
jnp
dec
inc
inc
aad
xor
scas
loope
and
or
sub
bound
hlt
pop
or
dec
cmp
aaa
in
pop
mov
imul
out
je
mov
shll
pop
xchg
cmp
test
movsl
ret
mov
jno
test
movsb
mov
dec
orb
sub
fisubrl
lret
jg
push
cwtl
push
movsl
aaa
aad
push
xor
fwait
or
mov
or
mov
loopne
lret
fistpll
pop
cmpsb
fdivrl
jge
pop
mov
add
jo
stos
push
sub
repz
add
add
cltd
push
jle
decl
sub
jmp
rol
xchg
and
add
and
cmp
lock
mov
mov
into
and
popf
icebp
and
xor
movsb
int3
cwtd
test
cwtl
cmpb
out
arpl
xor
jno
cwtl
and
push
jo
lcall
or
lret
fildll
cmp
test
pop
mov
mov
mov
mov
mov
arpl
cltd
sarl
dec
mov
push
or
in
sub
sub
push
aaa
and
lret
stc
xchg
jo
fisubrs
mov
in
pop
imul
push
pop
or
inc
imul
xchg
scas
movsl
mov
mov
neg
jae
cmp
adc
cmp
enter
popa
inc
jecxz
push
aaa
or
jo
xor
data16
popa
les
mov
push
push
test
and
pusha
inc
dec
push
stos
cs
cmp
ljmp
adc
test
xor
xchg
icebp
dec
push
push
mov
add
jle
das
pop
jecxz
out
xor
or
mov
and
jp
xchg
pop
adc
fsub
jp
shrb
xchg
pop
sahf
mov
lret
jne
mov
and
push
push
pop
scas
lock
or
dec
lods
mov
popa
mov
jo
int3
or
cs
fildll
data16
mov
jns
loopne
mov
test
test
xchg
push
andl
ss
adc
arpl
shrb
in
cwtl
fldt
cmp
loop
cmp
lahf
repnz
mov
pop
mov
jg
fwait
cmpsb
orl
ljmp
leave
jecxz
or
mov
sarl
out
test
jns
add
pop
dec
call
and
push
fisubs
add
or
jb
fcoms
jns
add
rclb
cld
ja
into
add
pushf
dec
mov
push
leave
xchg
push
jg
cmp
mov
pop
jle
lock
or
inc
xchg
cmp
outsl
fists
cs
xchg
imul
xchg
push
addr16
out
add
dec
into
movsb
push
lock
mov
add
daa
jb
iret
repnz
and
mov
movsb
adcb
push
imul
xchg
iret
fsubs
cli
push
repnz
cmc
dec
pop
imul
aam
mov
jg
repnz
je
xchg
dec
cmp
leave
in
lods
stos
adc
sbb
dec
int3
xlat
mov
dec
and
pop
jl
mov
mov
push
dec
divb
std
fs
and
add
pop
cmp
xchg
push
roll
leave
addr16
or
jno
push
insl
pop
or
cmpsb
mov
and
int
xchg
cmp
jbe
call
movsl
sub
xor
rorb
jl
ds
cld
push
inc
rcrb
cmpsb
adcb
ss
sub
stos
push
loop
mov
cwtl
cs
mov
jno
jae
jecxz
adc
shll
sbb
push
bswap
inc
push
lahf
cwtl
xchg
arpl
rorb
addl
xchg
xchg
push
jl
and
jns
mov
cwtl
daa
dec
jmp
fists
and
je
notl
out
repnz
fwait
inc
lds
test
cmp
sub
movl
fdivs
xchg
cwtl
xchg
adc
mov
push
xchg
stc
xor
mov
aas
jg
pop
test
loopne
lcall
add
cs
mov
mov
push
add
or
fs
adc
inc
xchg
jmp
inc
mov
push
pop
xor
inc
adc
xor
sbb
jg
pop
pop
les
ljmp
sub
mov
push
add
aam
add
xchg
insl
push
adc
dec
scas
fisubrs
dec
mov
into
mov
xchg
pop
mov
out
push
test
iret
sbb
mov
jbe
mov
stc
scas
jo
cmp
mov
loopne
lret
cmp
dec
and
insb
lock
mov
xchg
or
sbb
inc
filds
cmp
movb
inc
cmpsl
imul
pop
sbb
push
sbb
jle
add
jle
or
add
sub
stc
push
mov
add
bound
mov
stos
clc
sbb
cmp
xchg
cmpsl
mov
cmpsb
jns
mov
push
stos
xchg
xor
fcoms
into
mov
sbb
mov
sub
mov
mov
ljmp
push
cmpsb
xchg
movl
dec
test
pop
mov
add
in
and
js
out
dec
mov
add
jp
outsb
aam
mov
incb
test
lods
xor
lods
fsubrl
xlat
cld
xor
jg
daa
les
mov
fdivrs
into
insb
mov
ss
pop
or
sub
imul
mov
inc
cmp
lea
call
sub
mov
mov
cmpsl
xchg
mov
mov
sbb
mov
int3
adc
insl
fldcw
push
scas
in
mov
insl
inc
fwait
xor
andl
mov
jl
jae
xor
stc
sub
in
cli
mov
lock
dec
aad
xor
jb,pt
mov
xchg
jmp
jo
hlt
loopne
adc
gs
xor
and
adc
xor
jle
data16
pop
jle
loope
adc
jecxz
aaa
jge
or
ja
rorl
xchg
inc
dec
xlat
sahf
das
fcomp
cmpsl
cs
jg
out
scas
mov
mov
mov
cmp
lret
inc
mov
jo
gs
push
or
add
push
fs
sbb
xlat
pop
inc
sub
test
fcomps
sbbl
lods
imul
mov
sub
push
sbb
in
pop
push
push
mov
ret
xor
xor
inc
js
pop
mov
add
jbe
lods
sbb
jecxz
nop
stos
jle
sbb
push
jno
mov
lods
fstpl
xchg
mov
inc
sub
or
pop
sbb
fcompl
lea
adc
xlat
xlat
data16
sub
add
push
mov
xchg
jge
add
data16
outsl
loop
iret
mov
and
sub
cmc
fisttps
idivb
push
jecxz
out
out
fmull
addb
es
jle
xchg
int3
lret
ds
mov
je
pushf
jle
sub
frstor
in
jns
inc
aad
add
xchg
xchg
popa
sbbl
mov
xor
loopne
mov
pop
scas
sbb
xor
mov
pop
xor
pop
pop
dec
pop
iret
dec
pop
mov
loope
jl
cmp
mov
shlw
stc
pop
jb
sbb
inc
loope
cli
in
je
aaa
push
jmp
loopne
leave
rol
in
imul
test
inc
mov
mov
push
leave
mov
sbb
cli
inc
cmp
cmp
pop
in
ds
sbb
jae
or
fdivp
push
test
adc
pop
out
xchg
movsb
fwait
aas
inc
mov
pop
popa
mov
leave
xchg
sti
cmp
dec
clc
and
rcl
test
imul
daa
notl
pop
frstor
push
out
data16
fdivrl
mov
inc
xor
push
cs
mov
xchg
test
repz
mov
jle
into
cld
and
xor
add
and
data16
loop
ret
xor
mov
jmp
hlt
stc
adc
aas
sub
cltd
out
dec
movsl
cmp
pop
sarl
shl
push
scas
add
cmp
daa
stos
jb
and
jmp
adc
xchg
mov
daa
push
jge
xchg
popf
imul
and
jns
pop
or
enter
call
inc
rcll
add
mov
stc
jnp
pop
test
cmp
cmc
fwait
push
jb
gs
sbb
cli
adc
andb
ds
mov
pop
addr16
pop
jnp
push
out
adc
jns
stos
je
aam
and
adc
lret
arpl
out
sub
out
sahf
pop
add
cmc
mov
mov
incb
out
sub
fwait
aaa
aaa
fisubrl
inc
adc
imul
pop
ffreep
out
jp
push
add
cmc
arpl
pop
enter
fildll
mov
fdivr
into
mov
jmp
iret
ds
lcall
or
mov
or
sbb
cli
cld
pop
push
xchg
adc
or
sub
or
add
mov
add
mov
xor
int
lret
fsubs
leavew
cmp
xor
data16
loope
pop
jp
and
das
je
sbb
sbb
xchg
push
sbb
push
cmp
mov
sbb
jg,pt
fstps
andl
or
mov
pusha
mov
mov
mov
imul
mov
sbb
mov
lock
cmp
jp
pop
mov
xor
out
fcomps
dec
iret
mov
les
sarb
in
and
je
mov
popa
jno
push
fistps
xchg
xor
int
pop
dec
jne
push
stos
mov
adc
adc
xor
fiadds
daa
les
stos
pop
xchg
test
scas
sbb
jne
lock
in
insb
push
mov
cld
mov
xor
fsts
sti
cld
enter
subb
and
movaps
pop
jb
aas
jnp
mov
xlat
xchg
push
xchg
lods
inc
pop
mov
pushf
xor
mov
mov
inc
adc
push
not
inc
jmp
scas
scas
pop
inc
in
fsubrs
shlb
insb
lret
push
in
adc
jno
xchg
inc
pop
pushf
out
fildll
cmp
in
fisubrs
add
clc
pop
shr
loop
xchg
movsl
loop
jmp
stos
add
sbb
cld
out
cmp
lea
shl
pop
inc
or
cltd
lods
lret
mov
andb
mul
movlps
or
enter
scas
mov
cmp
adc
insl
jmp
xor
push
dec
add
xchg
inc
shrb
ss
push
lea
cmp
sub
fdivl
add
jbe
jbe
push
std
add
sarl
sub
fwait
scas
dec
cmp
pushf
push
iret
jl
push
add
sti
add
lahf
daa
mov
sbb
push
repz
or
mov
stos
insb
lea
cmp
outsb
rclb
cmpsl
xchg
add
sub
loop
mov
fisttpll
enter
push
cld
sub
in
dec
int
inc
xor
jns
ljmp
adc
les
pop
ret
mov
push
daa
add
cwtl
cmc
adc
sti
lods
jmp
push
or
or
es
int
fsubl
mov
push
icebp
mov
inc
add
fdivrs
les
fnstsw
fcoml
fs
mov
mov
mov
cld
and
fadds
stos
mov
hlt
iret
or
or
mov
lods
andl
sub
or
popf
das
xchg
bound
popf
pusha
fimull
dec
jbe
lahf
outsb
xor
mov
shlb
mov
ja
adcb
push
push
jae
test
xchg
mov
gs
mov
popa
aad
xchg
push
jae
adc
pop
cmp
sti
rol
das
xchg
xchg
fcompp
cli
or
ret
fsubl
sbb
sub
xor
ret
sarb
data16
pop
in
ss
or
sbb
shll
mov
leave
mov
imul
test
shl
jne
mov
mov
imul
xlat
les
xor
push
xchg
mov
dec
mov
dec
ljmp
aas
mov
cwtl
mov
mov
stos
adc
xchg
lea
add
dec
sub
lret
xor
in
rorb
push
outsb
push
xchg
movl
adc
adc
pop
inc
cs
aas
pop
pop
add
mov
sub
je
mov
pop
test
jecxz
jae
out
pushf
xchg
sarl
imul
call
fdivl
sbb
inc
inc
xchg
mov
icebp
xchg
xor
adc
adc
mov
into
jmp
fsubrs
xchg
xor
xchg
xchg
jo
cmp
mov
mov
lds
mov
jg
or
out
out
jp
or
mov
adcl
mov
xchg
hlt
cmc
xor
iret
lcall
cmpsl
ljmp
fimuls
lret
mov
lcall
push
adc
addr16
nop
mov
lods
xor
roll
xchg
xor
out
test
pop
xchg
ret
divl
dec
std
mov
scas
out
add
lret
fndisi(8087
xchg
and
fwait
ret
pop
loopne
ss
sbb
out
xchg
add
or
rcr
mov
repnz
aad
insl
fistpl
loopne
test
inc
inc
xchg
jo
xchg
loop
mov
pop
mov
lods
mov
enter
outsl
or
or
sub
adc
lahf
and
pop
sub
dec
addb
ljmp
ss
icebp
fucomp
push
add
mov
pop
pop
mov
or
jb
test
mov
inc
inc
mov
pop
es
sti
cmp
clc
aaa
lea
fnstsw
cltd
sub
or
pusha
mov
cs
mov
loop
adc
sbb
test
push
pop
cmp
and
fnsetpm(287
mov
ret
daa
sti
xchg
push
mov
test
outsl
sbb
std
idivb
loope
sub
and
cmpsl
cmc
and
sbb
mov
xchg
inc
add
add
icebp
insb
mov
mov
outsl
cmp
or
jle
rclb
scas
jb
adc
add
mov
mov
push
ds
es
mov
aad
test
roll
loope
mov
lods
add
dec
jns
mov
jo
jmp
cmpsl
mov
and
mov
and
aas
adc
pop
dec
pop
outsb
gs
out
cvtpd2pi
jl
adc
jne
enter
xchg
xchg
lods
jae
pushf
shr
enter
and
std
mov
ja
adc
in
subb
mov
jne
test
mov
cmp
fcmovnbe
dec
filds
roll
imul
cwtl
sha256msg1
dec
pop
and
mov
popa
adcl
data16
and
prefetch
sub
xchg
jl
fs
add
std
adc
adc
ret
insb
mov
push
gs
addb
inc
shll
adc
cs
es
js
into
dec
adc
test
rcll
add
dec
int3
mov
and
scas
aad
push
push
movsb
test
xchg
mov
jno
data16
cltd
stc
aam
inc
in
jae
xchg
dec
pop
mov
lock
dec
xor
push
dec
jb
push
pop
addb
cmp
shrl
and
mov
mov
xchg
pop
fwait
xchg
test
mov
add
or
je
xchg
sub
aas
jge
sub
inc
mov
sbb
mov
fstps
mov
ret
int3
fwait
mov
cli
or
dec
in
inc
int3
mov
inc
inc
test
jae
movb
or
push
adc
jo
cmp
add
dec
movsl
pusha
es
inc
stc
xor
js
repnz
mov
cmpsl
and
mov
ret
xor
scas
mov
mov
sub
or
je
lret
inc
dec
mov
incb
mov
cmpsl
xor
stos
repz
movsl
or
out
lods
mov
lcall
imul
add
xor
mov
jno
adc
lock
pushf
jge
mov
lahf
jge
xlat
int
adc
or
mov
movl
lahf
and
int
je
outsl
movsb
bound
mov
mov
out
lret
pop
int3
sbb
ss
popf
popa
sti
insb
scas
sahf
mov
push
lods
jge
rol
in
dec
mov
sub
stos
add
sarb
xor
pop
test
lcall
in
jg
andb
gs
pop
mov
mov
cltd
push
inc
nop
xor
jns
push
jge
xchg
inc
sub
mov
pop
imul
inc
pop
jae
dec
out
adc
insl
test
pop
notl
lea
movb
xchg
xchg
out
sti
add
xchg
pusha
inc
fcoms
test
inc
ljmp
ret
and
scas
fwait
pop
das
bound
scas
push
clc
bound
mov
aaa
jmp
fisttpll
mov
cmpb
push
repnz
mov
mov
cmp
jle
popa
les
daa
xor
xlat
out
push
loopne
fldt
mov
fcmovb
push
pop
or
aam
outsb
pop
sbb
xlat
lret
inc
xor
and
dec
jnp
shrb
negb
pusha
daa
out
adc
push
jnp
adc
in
loopne
call
filds
jecxz
fcomp
push
mov
cmp
and
cmp
push
rolb
insl
mov
lcall
div
push
out
stc
mov
jecxz
pop
pop
mov
fmuls
sub
push
roll
mov
pop
mov
test
popl
ficomps
mov
leave
nop
and
inc
imul
mov
rcrl
stos
inc
rorl
aam
mov
pop
or
out
hlt
or
pop
outsl
dec
insb
xchg
cwtl
fcoms
popf
sbbl
arpl
xchg
iret
movswl
out
cmp
push
incb
pop
outsb
or
xor
push
movsl
insb
subl
icebp
nop
mov
add
cld
jp
nop
out
in
jno
ret
enter
dec
fisubl
hlt
jge
enter
cs
add
ds
cmp
dec
jge
jle
inc
or
cs
cld
sahf
lock
in
mov
clc
cmpsl
addr16
jae
rclb
fimuls
dec
fnstcw
shrl
mov
xchg
push
jg
imul
xchg
dec
test
mov
sbb
nop
add
loop
xchg
inc
xor
sbb
shrb
jns
sbb
pop
mov
addl
in
jns
js
add
sbb
pop
push
xor
dec
mov
sbbl
cmpsl
xchg
icebp
jg
xchg
cmpsb
xchg
xchg
sahf
inc
pop
test
ljmp
jne
push
jb
insl
push
add
adc
outsb
jmp
sub
es
in
int
cmp
xchg
add
inc
cmp
adc
adc
mov
push
cmpsb
popa
cmpsb
movq
pop
jbe
aas
int3
inc
xlat
sbb
jae
sub
push
lret
popa
pop
mov
cmp
inc
cmp
jecxz
movsl
xchg
jl
pmovmskb
add
mov
scas
loope
and
int
sbb
inc
enter
mov
scas
and
test
pop
pop
out
lock
test
popa
sti
stos
int3
out
orl
cwtl
sub
dec
add
imul
push
cmp
sub
mov
clc
push
loope
dec
pop
xchg
adc
mov
add
push
lret
arpl
sbb
fiadds
cmpsb
lods
out
cs
pushf
sbb
mov
imul
fbstp
dec
xor
or
and
sbb
sbb
enter
push
fcmove
add
test
mov
mov
insb
xor
bswap
js
mov
mov
or
xor
fxch
daa
sub
fistpll
out
mov
ret
lds
je
pop
push
sub
repz
mov
jns
aaa
testl
mov
outsb
rclb
xchg
push
dec
add
cltd
decb
add
pop
push
jmp
fsubs
lock
cwtl
inc
inc
pop
sbb
and
stos
pop
mov
out
jmp
xchg
call
lahf
pushf
repnz
mov
icebp
sbb
ss
sbb
leavew
mov
xor
pop
adc
dec
dec
push
cmp
ss
test
call
dec
sub
insl
out
aam
sub
fnstcw
inc
cmpsb
inc
ja
push
jle
aad
or
lret
pusha
loopne
dec
jmp
std
push
icebp
xchg
mov
cmp
xor
and
in
add
loop
lcall
mov
sub
ret
sub
mov
mov
jne
or
aam
repz
pop
sbb
int3
add
lods
lds
mov
mov
mov
jg
insl
jge
jecxz
dec
xor
cmpsb
js
rclb
loopne
shl
testb
scas
fldln2
cmp
mov
popf
ja
xor
and
jno
out
ret
mov
into
dec
and
out
fidivrs
push
cli
mov
movb
pop
mov
dec
lret
dec
insb
ljmp
xchg
add
sub
push
out
push
gs
nop
loop
aad
pushf
outsl
cmp
insl
inc
gs
imulb
dec
mov
test
jo
icebp
hlt
xor
sbb
or
insb
loop
mulb
stos
mov
mov
adc
push
ja
loope
scas
mov
xor
sbb
adc
add
test
shrb
int
stos
inc
mov
test
fldenv
out
push
jle
adc
icebp
jnp
cwtl
and
insl
and
mov
shlb
mov
das
stos
lret
or
push
scas
fsubs
inc
ror
test
or
xchg
fists
loope
enter
int
xor
rol
xchg
mov
jae
adc
pop
lods
es
shl
mov
sub
or
aad
jo
and
or
xchg
dec
add
jb
imul
std
xchg
cmp
loopne
adc
xchg
negl
sub
insb
gs
push
fdivl
stos
jnp
sub
popa
cwtl
dec
add
cs
jbe
cld
xchg
sahf
imul
xor
inc
ljmp
lret
or
push
fsubrl
repz
push
xchg
adc
push
das
std
sbb
add
cmpsb
aaa
pushf
and
ja
or
out
adc
ljmp
idivb
enter
ror
jnp
test
and
add
cmpsb
sti
je
push
cmp
push
or
xchg
mov
jo
mov
and
fmull
pop
sbb
xor
cmp
addb
xchg
loope
lcall
mov
stos
adc
int3
xchg
sbb
sarl
or
xchg
xchg
push
or
cmpl
jo
or
mov
enter
push
mov
or
mov
sbb
leave
cli
inc
mov
insl
nop
cmc
sub
nop
clc
cs
sub
cmp
mov
insl
lock
rolb
lret
int
pop
jns
int
rol
jbe
xchg
aad
inc
iret
cmpb
add
jo
lret
jns
lret
fildll
rcrb
sbb
iret
imul
lcall
add
iret
jnp
sbb
bnd
push
xchg
xchg
js
xchg
dec
mov
dec
or
or
xchg
adcl
decb
test
xchg
adcl
dec
sub
scas
daa
lahf
loope
fwait
daa
cmp
outsb
lcall
xor
dec
shl
mov
push
pop
loope
pop
sbb
repz
jmp
loope
lret
cmp
lock
ja
fdivl
rorb
sbb
cmp
out
jl
cmp
mov
cmp
add
mov
and
leave
xchg
in
test
xchg
pop
push
mov
push
xchg
iret
mov
in
out
std
dec
lds
mov
push
add
pushf
imul
cmpb
addr16
xor
push
ds
pushl
and
mov
sti
inc
out
push
js
lretw
lods
test
ljmp
pop
jp
xchg
lock
xchg
test
mov
xchg
and
mov
mov
cli
mov
dec
or
or
jle
mov
xchg
int
push
outsb
jo
les
gs
aam
push
in
clc
mov
jnp
mov
movl
mov
mov
orb
inc
loopne
jno
stos
add
cmp
or
imul
add
cmp
sbb
fisubrl
mov
inc
xchg
clc
xor
repnz
in
iret
out
popf
cmp
mov
imul
lret
push
sbb
outsl
std
jno
xor
ret
enter
mov
mov
mov
mov
sbb
pop
pop
decl
xchg
bound
and
cli
push
sarl
inc
movsb
inc
das
dec
mov
lock
inc
test
xchg
jo
dec
addr16
xor
fmull
xchg
add
lods
clc
fcmovne
out
mov
xlat
rclb
jo
cmp
lret
jmp
dec
pop
jo
pop
andl
testb
sub
pop
rcll
fs
push
cmpsb
sub
aaa
lea
dec
sbb
in
arpl
mov
sbb
jp
cmpsl
adc
mull
adc
inc
cmp
lret
dec
jne
inc
lcall
and
mov
push
dec
scas
dec
outsb
add
xchg
adc
mov
lahf
pop
imul
scas
pop
pop
xchg
out
inc
jae
cmp
adc
mov
cmp
xor
dec
lods
inc
jmp
std
out
call
push
bound
sub
and
mov
jp,pt
fwait
aad
ljmp
ljmp
retw
mov
lcall
mov
sub
mov
out
add
push
dec
mov
jl
cmpsb
fstps
shrb
je
lock
and
lcall
inc
mov
add
dec
repz
loope
imul
lods
sbb
xlat
cmpsb
aam
dec
lods
cmpsb
leave
out
push
push
xor
or
add
dec
mov
cwtl
stc
mov
sub
pop
fwait
loope
mov
fucomi
adc
sub
mov
cmpb
dec
enter
jmp
inc
inc
add
loopne
rorl
pop
shlb
adc
xchg
xorb
nop
pushf
pusha
xchg
mov
mov
addl
lds
fs
icebp
cmp
mov
jae
call
xor
add
pushf
lock
popl
push
pop
mov
dec
ja
iret
mov
aaa
pop
pusha
add
jne
ja
out
and
and
stc
jecxz
dec
pop
fimuls
das
mov
lahf
test
add
mov
and
pop
xlat
jo
popa
xor
jp
cmp
dec
test
test
sub
lods
sar
insb
push
gs
cmp
mov
add
cs
push
pop
vmread
std
pop
into
dec
pop
mov
jle
jmp
sub
test
outsl
aaa
pop
cs
ret
jb
add
into
iret
dec
xchg
cmp
clc
jmp
and
sahf
xchg
cld
mov
mov
fdivrl
lds
or
add
mov
mov
push
xor
cltd
bt
out
jbe
aad
sub
scas
loopne
sbb
sbb
in
in
mov
stc
dec
outsl
push
xchg
mov
jnp
mov
aas
push
mov
mov
mov
insl
sti
idiv
jp
gs
subl
add
out
inc
jge
xlat
add
lods
clc
ds
std
mov
push
jnp
push
fnstsw
adc
push
pushf
mov
mov
sbb
out
jbe
aas
add
inc
xor
mov
ja
int
cmc
into
sub
test
out
shrb
jns
dec
imul
shl
aas
out
fisubrs
pop
jmp
sub
pop
bound
push
mov
bnd
aam
mov
adc
inc
insl
test
and
and
sub
and
nop
adc
stos
int3
push
addr16
gs
mov
xchg
out
push
dec
jo,pn
add
cli
pop
pop
cmp
xchg
cmp
push
mov
out
or
cli
cmp
dec
mov
pop
stc
inc
inc
iret
js
sbb
jae
inc
gs
fs
fs
sbb
andb
orb
sub
jae
pushl
or
lret
push
inc
mov
mov
push
js
divb
sub
mov
and
pop
icebp
adcb
cmpsb
into
push
sarl
notb
int
adc
rcr
pop
or
in
inc
vdpps
jmp
lea
rcll
and
push
lea
push
mov
out
rorb
out
lock
icebp
sub
fstps
jg
hlt
fwait
xor
repz
int
dec
sub
call
rorl
jo
inc
andl
repnz
adc
pop
fimull
mov
mov
inc
mov
xor
pop
cmp
mov
repz
add
inc
xlat
sub
outsb
xor
aad
push
in
push
inc
leave
jo
in
inc
cmp
fdivl
fs
adcb
jns
nop
std
aaa
stos
mov
sub
push
sahf
push
or
xchg
or
or
adc
sbb
shl
scas
dec
mov
xchg
loop
add
int
pop
stos
movsl
dec
mov
nop
imul
jl
nop
xor
rclb
mov
mov
inc
sub
mov
and
repz
out
xchg
xchg
out
push
lock
sbb
cmp
stos
inc
mov
mov
xchg
and
pop
ret
imul
jmp
sbb
movsl
popa
hlt
xchg
leave
ret
push
xor
dec
sbb
sbb
cltd
stos
lahf
mov
std
in
test
ja
mov
mov
sbb
arpl
outsb
mov
lret
aaa
bound
imul
mov
rcrb
xor
js
dec
movsl
xchg
mov
dec
add
xor
fnstenv
or
or
xor
pushf
or
sbb
popf
xor
xchg
lea
les
dec
movsb
cmp
jl
cmp
jg
icebp
adc
sub
and
xchg
call
lret
jae
fldl
psubb
movsl
sub
shrb
mov
arpl
and
cmp
and
fsubrl
sbb
dec
xchg
fsubs
xchg
mov
aaa
repz
mov
lret
xor
jo
aaa
jbe
xor
sbb
add
mov
rorl
negb
mov
dec
dec
adc
or
fdivp
sbb
jge
mov
into
push
sbb
negb
mov
sub
mov
sahf
pop
aaa
movsb
cmpsb
pop
xchg
add
cmpsb
xor
out
aad
cmp
repz
loop
sub
adc
pop
mov
jno
sbb
ss
jne
enter
adc
divl
and
addr16
js
dec
ficoms
sbb
mov
pop
jo
xor
mov
movsb
lods
mov
enter
iret
and
add
mov
inc
sbb
out
dec
icebp
hlt
pop
push
cmpsl
or
dec
jae
lods
out
fisttps
test
sbb
or
cld
imul
jl
mov
xor
mov
pushf
cltd
fidivs
dec
xchg
cli
sbb
pop
sbb
in
scas
push
ja
fdiv
lret
sbb
gs
add
xor
jbe
xchg
insb
sbb
xchg
lcall
sbb
xchg
inc
lods
adc
push
mov
pop
cmc
jmp
xchg
cli
sub
add
mov
and
cmp
sbb
push
mov
cli
inc
data16
cmp
mov
mov
pop
pop
jne
rolb
xor
jbe
les
adc
lea
out
xchg
push
jns
lret
mov
mov
in
xor
xor
imul
stc
mov
mov
sub
sbb
fucomi
addr16
pop
rol
xchg
push
sub
inc
mov
xchg
lahf
or
test
leave
or
dec
jns
sbb
adc
xorb
pop
inc
jp
pop
mov
leave
jge
repnz
setb
jne
adc
dec
rorl
inc
cmp
lahf
bound
rcl
or
in
pushf
cmpsb
mov
subl
jns
subl
lret
bound
shll
adc
iret
xor
mov
cmpsb
mov
mov
popa
mov
pusha
xchg
mov
movsl
imul
adc
stc
fnstsw
dec
adc
inc
or
inc
xchg
shl
lret
jne
stc
mov
jns
out
js
dec
dec
add
jecxz
add
or
aaa
arpl
pop
cmp
jae
mov
inc
sub
fcompl
loopne
scas
push
xor
clc
ja
xchg
or
dec
mov
add
jnp
inc
popf
mov
and
mov
add
outsb
mov
sub
add
mov
jb
jecxz
popa
jle
mov
dec
mov
lret
inc
mov
mov
les
or
test
sub
and
fmuls
sti
or
sbb
je
mov
mov
xchg
sti
arpl
andl
or
jge
dec
lods
fdivrl
test
loop
mov
cmp
mov
gs
sarl
aad
dec
hlt
mov
in
ret
movsb
repnz
fs
sub
cmp
adc
lret
lcall
xchg
jne
xor
insl
inc
cmpsb
xchg
movsb
mov
sub
push
mov
add
and
jg
lds
cmc
into
clts
inc
mov
leave
sub
xchg
mov
nop
adc
mov
xchg
pop
add
push
dec
mov
add
mulb
adc
xchg
inc
mov
jp
test
movsb
or
insl
or
std
xchg
push
add
aam
pop
movsl
out
mov
mov
xor
popf
ret
inc
adc
mov
mov
fs
and
rcll
adc
or
push
jne
repz
and
fmuls
push
idivl
out
mov
loope
mov
leave
out
lock
sub
mov
sbb
cmp
mov
xchg
repnz
cld
popf
mov
adc
push
pop
adc
jno
jge
dec
xchg
inc
pushf
mov
adc
sbb
das
out
mov
inc
cli
cmp
into
popf
sbb
lahf
shrl
mov
pop
mov
push
xchg
flds
in
dec
cmpsl
cmp
cmc
jno
push
popa
in
mov
cmpsb
cli
xchg
ret
push
mov
jne
shr
fwait
loopne
lret
leave
push
outsb
loope
pop
stos
dec
and
popf
test
push
cltd
mov
popa
sub
insl
cwtl
ds
je
addr16
dec
pop
adc
js
lods
xchg
and
testb
mov
stos
mov
mov
xchg
cmpsb
mov
aas
push
sahf
sbb
adc
pop
cmp
lea
cld
std
xor
jg
ret
xchg
pop
pusha
jne
pop
sarb
in
xchg
pop
cwtl
in
sub
lret
pop
arpl
cmpsb
xadd
xchg
or
add
xor
pop
ret
sbb
xchg
aaa
sbb
cmp
mov
lods
push
pusha
adc
sti
xchg
push
jl
lods
shr
imul
mov
and
sbb
push
into
dec
xor
push
shrb
fxch
pop
xchg
popf
pop
jne
sub
lods
dec
sahf
loop
sub
xor
shlb
leave
pop
orb
inc
jne
and
xchg
aas
xor
mov
out
mov
inc
or
sbbl
fisubrs
jne
dec
ret
xor
loopne
loope
repnz
in
sbb
xor
in
in
sbb
xchg
mov
popa
jbe
add
push
outsl
movsl
add
xor
fistl
lea
lret
loope
lcall
mov
pop
jl
js
inc
jne
repnz
adc
jecxz
shll
divb
sub
clc
cmc
ljmp
sub
pushf
sti
lods
in
adc
mov
rcrl
stos
inc
jns
cmc
das
scas
lahf
ficomps
xchg
inc
inc
cmp
push
and
test
add
add
add
fisttpll
pusha
mov
mov
lock
cli
movsb
ficomps
addl
or
adc
push
cmpsb
mov
xchg
inc
xchg
mov
sub
in
aad
or
fisttpll
mov
mov
sub
out
push
and
pop
faddl
cmp
jmp
rcrb
pop
filds
int3
das
outsb
adc
push
sub
aam
mul
shlb
cmp
out
hlt
outsb
dec
sub
cs
out
sbb
jecxz
add
mov
push
je
dec
repnz
mov
adc
and
or
std
out
adc
mov
lahf
jno
mov
pop
mov
lock
aas
mov
hlt
lahf
das
mov
pop
imul
xchg
dec
push
mov
inc
xor
push
repnz
jns
jnp
jns
and
lret
insl
les
fisubl
je
add
gs
inc
mov
inc
cmpsl
jge
sarb
sbb
hlt
sar
repnz
icebp
sub
cmp
mov
sarb
pop
fdivrp
jg
xchg
cmp
xchg
sub
or
cltd
in
test
cmovbe
sub
cmp
pop
jge
add
xchg
lds
add
push
and
mov
add
xchg
push
mov
jg
push
push
mov
sbb
push
dec
in
jle
cs
in
xor
shrl
aaa
mov
mov
cmp
sbb
outsb
mov
movsb
arpl
push
inc
add
sahf
repz
scas
shlb
pop
cmp
dec
cmc
es
jp
xchg
and
clc
fcoms
mov
cmp
scas
jns
push
popf
or
into
rcrl
adc
pop
cld
xchg
jmp
fdiv
rclb
xlat
jo
hlt
movsb
pop
lods
mov
adc
ret
jecxz
inc
add
dec
sbb
or
clc
out
pop
out
sub
xor
out
jge
and
cmp
inc
js
mov
cmp
adcl
jmp
pop
cmp
adc
push
shl
out
add
push
mov
jl
cmpsl
int3
or
hlt
lea
and
stc
xchg
inc
push
lds
or
pushw
mov
mov
inc
mov
push
jmp
xchg
mov
mov
xor
cmpsl
or
cmpsb
in
pop
dec
cmp
in
push
xchg
mov
jno
xor
rcrb
lret
push
add
lahf
lahf
out
or
xchg
stos
xchg
repnz
cltd
call
or
push
pop
dec
iret
sbb
push
ljmp
add
xor
popf
popa
xor
pop
xchg
jno
stc
fs
addr16
cmpb
jmp
dec
cli
in
in
sub
pushf
inc
into
add
mov
mov
scas
mov
mov
adc
cmpl
int
pop
stos
pop
aaa
sub
je
adc
sub
ret
xor
cmp
xchg
cmpsl
das
int
jmp
sbb
adc
adc
test
lea
test
pop
jo
aas
movsl
dec
in
pop
mov
mov
push
sbb
lea
ja
or
mov
sbb
std
shrl
push
in
jo
xorb
in
and
jbe
aas
mov
or
cld
popf
xchg
mov
xor
xor
arpl
and
xchg
lock
inc
sarb
test
in
movsl
adc
mov
push
test
mov
mov
xor
cmpl
mov
adc
data16
mov
dec
xor
pop
jnp
daa
cmp
sub
loope
and
cmp
xor
cmpsl
and
mov
movsb
sbb
aam
push
push
and
in
jne
pop
cmp
xchg
jl
add
or
mov
pop
incl
hlt
imul
push
inc
push
xor
cmpsb
sub
negb
and
mov
mov
xor
jns
aad
xor
xor
xchg
jp
add
and
orb
test
xor
jl
cltd
mov
ret
mov
xchg
jmp
mov
loope
and
sbb
loope
ss
mov
adc
outsl
ss
mov
test
or
jae
push
popa
push
push
mov
inc
mov
mov
and
xchg
sub
out
or
lea
mov
sbb
stos
aaa
gs
shll
in
adc
xchg
push
ljmp
dec
jecxz,pt
scas
mov
inc
cwtl
fdivrs
out
and
jl
sbb
mov
and
inc
shlb
cld
jne
das
fistpll
mov
in
jno
sahf
sub
jb
test
cmp
cltd
adc
xchg
enter
or
movsl
jle
subl
fisttpll
ret
insl
lods
adc
int3
cmp
push
sub
push
mov
fsub
inc
pop
inc
mov
repnz
jecxz
mov
mov
js
xor
sbb
sub
add
jmp
sbb
in
push
aam
sti
test
sbb
and
dec
idivb
data16
add
sbb
rolb
insl
mov
jns
movsb
jmp
mov
pushf
repz
sbb
pop
repz
jne
pop
mov
pusha
sub
xlat
sbb
mov
mov
push
int3
push
lahf
fcomip
jno
or
int
push
out
int
les
shlb
mov
fdiv
inc
mov
repnz
adc
je
jnp
xchg
daa
scas
sub
sub
repz
addl
in
popf
scas
and
je
mov
xlat
mov
lods
loop
cmp
mov
or
mov
mov
adc
jo
xchg
or
movsl
cmp
sbb
loope
lcall
add
mov
mov
ret
shll
push
jge
push
xchg
je
mov
pop
and
lds
daa
daa
movsl
dec
in
jb
cmp
fmulp
into
sub
pushl
push
fwait
outsl
and
xchg
mov
dec
stos
mov
arpl
xor
pop
test
inc
testb
les
lods
sbb
fcmove
out
movsl
mov
cmpsb
inc
call
hlt
pop
fidivl
dec
mov
push
push
shlb
and
test
mov
fs
mov
mov
dec
cmp
jecxz,pn
insb
mov
jle
push
xlat
sub
imul
cmp
inc
shll
mov
or
insb
rorl
mov
inc
push
mov
xchg
xor
les
cld
inc
xchg
imul
mov
push
cmp
cmc
sbb
or
imulb
rcll
adc
sbb
pop
jno
aad
rcr
sbb
and
in
sub
xchg
enter
fsubrl
sbb
cmp
xor
pop
pop
pop
pop
pop
and
jo
push
pop
pop
inc
jle
test
pop
mov
cli
inc
sbb
enter
ret
push
dec
push
lods
xchg
xor
fdivs
and
out
pop
add
jmp
xor
sub
sub
je
add
add
and
and
aam
loop
push
out
fdivrs
out
and
loope
xor
mov
jae
sarb
insb
xchg
scas
js
xor
and
rcll
jns
mov
aas
addr16
cmpl
or
sub
int
daa
push
pop
push
repnz
and
dec
inc
dec
push
stos
xlat
or
push
sbb
aaa
mov
aam
inc
fadds
lds
sbb
fmul
mov
jle
dec
pop
inc
add
push
mov
or
lret
loope
xchg
repnz
mov
push
or
xchg
pop
push
cmpsb
mov
cmp
jnp
and
adc
cli
pop
jns
insb
lret
xchg
les
sbb
mov
push
out
add
ret
fwait
sub
aam
and
ja
dec
ds
insb
mov
mov
int
mov
inc
test
sbb
xchg
test
adc
push
xchg
push
lcall
xchg
or
arpl
inc
pushf
xchg
pushw
shrb
pop
sub
ret
out
xor
push
cwtl
repnz
test
sbb
repz
xor
mov
mov
loop
scas
jg
jo
xor
lahf
ljmp
insl
dec
sub
in
loop
aaa
out
rol
aad
adc
pop
dec
sbb
mov
arpl
jge
data16
fistpll
arpl
jecxz
mov
or
mov
inc
sti
mov
inc
push
jns
lret
pop
pop
pop
rcrl
mov
in
sub
icebp
inc
mov
mov
repnz
sbb
pop
ljmp
in
fsub
insb
sub
ss
call
incb
xor
ja
mov
mov
in
sarl
pop
lods
jecxz
mov
movb
fisubl
and
mov
cs
sub
movsl
pushl
xor
cli
or
and
cwtl
addr16
jg
or
pop
pop
cmpsb
mov
and
fiadds
iret
cmpsb
sub
mov
test
xrelease
and
fs
xchg
adc
lea
int
js
lods
add
cmp
dec
movsb
mov
jle
test
repnz
jbe
test
stos
xor
mov
fbld
and
divb
mov
dec
mov
sub
add
leave
out
cld
jmp
push
or
ljmp
jnp
decb
cmp
lods
add
lea
out
jae
shrl
cmpsl
lcall
or
pop
test
into
sbb
sub
xchg
sub
hlt
in
adc
jle
inc
dec
addr16
cmp
xchg
xchg
dec
jmp
popa
fs
mov
in
mov
jge
jno
dec
daa
adc
cli
xchg
pop
rcrb
fsubrl
push
cmpsl
mov
sbb
test
fiaddl
jns
xor
xchg
adc
inc
leave
aam
dec
fisttps
lods
aaa
imul
jbe
sbb
or
mov
mov
pusha
lcall
and
adc
pop
clc
sub
cmp
fidivs
cmp
mov
cwtl
xor
jmp
push
lods
mov
mov
or
out
dec
test
inc
or
xchg
dec
cmp
pusha
sti
in
clc
dec
inc
adc
lret
push
push
xcrypt-ecb
cmpsl
mov
out
lock
and
icebp
mov
inc
scas
test
aam
or
loop
lret
xor
sub
ljmp
outsb
sbb
xor
addr16
call
popf
in
sub
jno
add
push
pop
cmp
add
jmp
pop
and
cmc
daa
ljmp
lods
fdivr
jns
movsb
push
mulb
les
into
addr16
rolb
and
add
and
mov
sub
adc
sbb
push
movsb
mov
and
jge
in
addr16
and
jmp
repz
in
inc
cmpsl
lods
lods
push
lods
lea
jmp
nop
add
dec
movd
aas
aas
sbb
lret
addr16
sbb
sbb
sub
fildl
repz
aaa
jae
ja
push
pop
sbb
inc
adc
mov
and
jne
aas
mov
xlat
mov
mov
outsb
fwait
add
js
adc
push
aas
dec
lcall
mov
outsl
loopw
fnstsw
xor
fimuls
jp
adcl
xor
jno
xor
dec
lret
lcall
sub
loopne
mov
out
add
add
xchg
lcall
xchg
mov
push
fdivr
jp
nop
sub
aaa
pop
dec
inc
sbb
push
mov
push
or
push
add
push
fnstsw
enter
stos
ficoml
mov
sub
and
mov
add
ffreep
lahf
mov
jne
imul
jmp
arpl
xor
rorl
cmpsb
stc
pop
lret
out
aad
fisubrl
addb
jo
int
sti
stos
xlat
fucom
outsl
jbe
mov
incl
dec
in
insb
pusha
aad
in
imul
pop
jo
bound
push
adc
test
dec
and
ds
jns
imul
cmpsb
call
sbb
icebp
pop
dec
clc
insl
pop
xor
fldl
rcrl
or
mov
xchg
adc
test
sbb
sub
popa
or
movsb
sbb
inc
jb
and
mov
shl
out
rolb
fsubr
xor
pusha
scas
lea
adc
dec
push
movsb
add
es
gs
bound
insb
lods
int
mov
enter
mov
rorb
sbb
sub
lea
inc
aaa
fs
movsb
fldenv
cmc
mov
mov
pop
cld
loopne
aaa
sub
movsb
xor
inc
stos
inc
sahf
call
imul
lret
fbld
mov
dec
stos
iret
data16
jo
sub
cmpsb
xchg
mov
bound
repnz
out
loope
repz
cmp
add
lods
sbb
xchg
sub
or
cmpl
std
dec
dec
xor
filds
mov
sbb
dec
lods
mov
or
sbb
sub
fs
push
dec
xchg
cmp
add
mov
gs
xchg
imul
cmp
cmc
sti
ljmp
sub
aad
jl
cs
dec
sub
scas
pop
dec
ret
ss
les
data16
test
out
cmpl
jle
hlt
jbe
ret
shll
es
pop
pop
fstpl
call
cs
xchg
dec
hlt
ret
add
ret
inc
dec
cli
mov
cwtl
stos
push
leave
jno
js
sti
mov
sbb
pop
sub
aaa
xchg
sbb
ja
add
inc
dec
pop
or
les
adc
arpl
push
ja
imul
xchg
sub
xchg
lods
out
divl
jne
aaa
loopne
repz
pop
push
mov
pop
cmp
fcmovu
pop
sbb
add
sti
lahf
lcall
adc
adc
fstpt
sub
dec
daa
push
push
pop
sub
daa
adc
jl
outsb
push
inc
mov
aaa
mov
or
or
cmp
pop
inc
mov
stc
lret
lcall
popf
pop
pop
out
dec
mov
es
insb
mov
xor
sbbl
loope
ret
xorb
sub
lahf
mov
push
aaa
jmp
shll
xchg
xor
xchg
xorb
scas
adc
enter
test
pop
bound
adc
es
or
faddl
pop
dec
inc
aaa
fincstp
jo
and
shlb
jo
cmp
mov
scas
sub
xchg
sub
sbb
outsb
leave
fstl
cld
add
cmp
lret
movsl
stc
aaa
gs
cmpsb
push
lahf
into
jmp
popa
stos
sub
mov
scas
addr16
mov
xchg
scas
mov
int3
rcrb
int3
or
popf
enter
aas
adc
and
lds
inc
sub
xlat
or
int3
leave
adc
jne
imul
les
add
pop
or
or
and
daa
pop
mov
fucomi
xchg
lret
fcoms
mov
lahf
mov
mov
ret
and
into
jle
in
pusha
add
notl
adc
mov
xchg
rolb
cmp
push
test
sbb
xchg
fldenv
inc
std
or
subl
testw
push
stos
push
dec
incl
cmpsl
sbb
and
cmc
leave
in
mov
add
in
dec
or
sahf
push
scas
sub
adc
push
xor
xlat
rcl
and
xor
mov
push
sub
adc
cld
jb
cmp
and
movsb
mov
pop
sub
daa
lcall
xor
push
mov
sub
stc
outsb
adc
lods
shrb
ficomps
stos
add
incb
and
jl
call
inc
add
jnp
mov
jle
cmp
xchg
wbinvd
push
xor
and
loope
push
into
cld
sbb
xor
lods
outsb
imul
pusha
rcr
repnz
push
repnz
fincstp
fs
outsb
ja
mov
sub
or
pop
adc
cwtl
data16
popf
xchg
sub
popf
adc
rcrb
pop
leave
sbb
mov
mov
jmp
test
sub
in
sti
insb
aam
jno
push
cli
or
pop
pop
sub
je
add
ret
imul
xchg
dec
mov
int
in
xor
adc
mov
mov
pushf
call
fldl
movsl
jns
aad
cmp
out
or
ss
int3
loop
ja
sub
mov
mov
fs
sub
add
in
cmp
inc
imull
in
jns
adc
imul
test
paddd
ja
ljmp
sub
mov
cmp
cld
scas
jg
ja
mov
push
push
jmp
outsl
sbb
xchg
cmp
jb
sbb
cmc
fstpt
sub
in
out
add
xchg
or
fucomip
push
adc
or
enter
pop
in
es
sub
inc
mov
xchg
shll
sbb
push
pop
roll
mov
test
test
adc
push
add
xorl
fisubl
xor
test
add
fbstp
xor
fsubrl
and
repnz
xchg
vhsubps
ret
xchg
int3
jbe
std
bnd
leave
outsb
ret
in
dec
push
inc
or
or
dec
sahf
jbe
mov
testl
in
aad
inc
jo
lret
bound
push
fsts
stc
adc
xchg
lds
shr
inc
sub
xor
pop
mov
aaa
daa
jmp
shr
xchg
jmp
pop
cmp
push
jmp
jp
mov
in
orb
mov
and
lahf
sbb
and
inc
fs
push
in
daa
jno
sub
fldt
in
jns
xor
xchg
mov
pop
push
andl
mov
mov
aas
sub
sbb
xchg
inc
adc
pushf
add
dec
ds
cmpb
cmpsl
mov
frstor
push
out
sbb
cmp
sbb
push
subl
lock
xor
inc
cmp
adc
mov
xor
fistpl
xchg
popa
jmp
imul
cmp
mov
std
imul
inc
shl
xchg
movsb
lret
mov
mov
int3
xchg
stc
xchg
push
insb
lods
sbb
flds
push
mov
aaa
xchg
aaa
inc
lods
mov
mov
data16
or
mov
mov
and
pusha
inc
outsl
movsl
in
in
pushw
mov
aad
cmpsl
mov
shlb
js
fcmovne
adcl
pop
sub
inc
outsb
xor
sub
stos
scas
add
pop
lea
adcb
mov
mov
int
popf
mov
push
xlat
sub
std
dec
test
dec
mov
pusha
sbb
push
mov
push
imul
in
test
sbb
aas
dec
sbbb
mov
cli
cwtl
inc
fildll
xor
das
repz
clc
or
add
div
stos
mov
push
fsubl
xchg
jecxz
sub
scas
inc
stos
loopne
or
dec
mov
mov
mov
dec
fmul
mov
outsl
scas
sbb
mov
dec
sbb
call
rcl
mov
xor
mov
insl
jmp
cmp
sbb
push
xor
jbe
lds
hlt
sahf
lcall
ja
dec
or
dec
mov
mov
mov
int
mov
pushf
jp
dec
leave
sbb
jno
gs
fadds
sarl
rclb
or
inc
clc
adc
jns
pop
enter
cmp
lcall
and
cmp
rcrl
add
mov
setp
xchg
lahf
jbe
out
push
fildll
jbe
dec
cmp
rclb
bound
sbb
inc
ds
fidivl
xchg
shlb
mov
movsb
cmp
mov
mov
movsl
dec
or
enter
out
cmp
cmp
iret
fmull
or
or
pop
call
jne
fldcw
sar
xor
xlat
sub
jge
rorl
popa
scas
int
inc
mov
mov
xchg
scas
jae
push
inc
daa
xor
nop
cli
mov
add
add
add
sbb
adc
inc
imul
sub
dec
sbb
xchg
scas
lret
mov
in
stos
or
in
mov
and
cmp
mov
sub
stos
rcl
fcoms
mov
icebp
insb
das
or
jnp
jb
sarb
jbe
dec
cs
xor
lahf
loope
jo
fadds
and
xchg
das
repz
xor
mov
mov
lret
jnp
sbb
xchg
pop
dec
xorl
test
clc
mov
xchg
jo
ficoms
cld
int
out
mov
pop
sahf
fdiv
in
jo
add
mov
xchg
pushf
sub
insl
movsl
xor
dec
dec
data16
stos
shr
cmp
xchg
pop
dec
adc
or
bound
sub
daa
flds
mov
jge
fsts
pop
pop
rep
dec
insl
inc
mov
jb
push
jb
sti
shlb
rcr
pop
test
int
iret
mov
movsb
adc
shr
lret
cmp
call
mov
imul
jnp
pop
scas
xchg
xlat
jg
aam
mov
dec
loopne
xchg
gs
push
mov
jb
add
inc
adc
dec
jo
cmp
mov
out
and
cmp
loopne
aaa
adc
mov
mov
rcl
mov
out
ja
iret
in
sub
in
stos
cmp
outsl
dec
outsl
jg
mov
ffreep
test
scas
dec
push
flds
mov
sub
mov
xor
mov
mov
mov
jae
addr16
in
or
ja
rep
stc
mov
mov
jle
dec
fistps
into
add
nop
push
adc
mov
cmp
sub
sbb
gs
adc
out
pop
mov
out
sahf
mov
mov
out
pusha
pop
aaa
push
lock
push
xchg
or
dec
rorl
aam
mov
lds
cmc
add
arpl
cmp
cwtl
push
cmp
aam
test
push
xchg
out
out
mov
pop
and
dec
arpl
stos
fcomip
pusha
push
imul
mov
inc
jecxz
push
push
sbb
pop
push
loop
repz
jl
cli
cmp
inc
push
cmpsb
loope
inc
pop
cmp
mov
cmpsl
aas
push
mov
cmp
imul
ds
sbb
outsb
cltd
adc
rorb
dec
mov
lret
pop
sub
shll
xchg
sbb
mov
and
mov
test
mov
pop
mov
mov
movsl
lret
addr16
inc
popf
mov
mov
jne
and
mov
dec
dec
std
arpl
cld
mov
pop
push
movsb
ja
add
fwait
sub
sub
repnz
jne
adc
jnp
sbb
fnstsw
mov
mov
cmp
adc
mov
push
mov
fwait
and
test
fidivs
adc
push
jmp
std
in
pop
icebp
and
mov
sub
mov
lea
xchg
push
push
jb
pop
mov
hlt
rcll
jge
shlb
xorl
fmul
out
ja
rclb
jp
or
jmp
xor
pop
movsl
jg
in
cmpb
sub
or
div
push
insl
or
ja
lock
xor
inc
loopne
lock
test
idivb
rcrb
mov
and
cmpsb
cld
pop
pop
sbb
mov
sub
stc
aaa
jg
jg
scas
in
into
xchg
mov
or
cmp
aad
into
jecxz
enter
ret
cwtl
lock
mov
rcll
mov
jno
inc
pop
push
mov
sub
and
outsb
arpl
xor
jmp
cmpsb
sbb
hlt
sbb
sub
fistpll
adc
fsubr
jge
lods
std
mov
into
lret
shr
mov
iret
xor
fildll
and
movsl
mov
fmull
popf
mov
jmp
lret
icebp
flds
push
sahf
jnp
into
mov
lea
xor
pop
cli
dec
sbb
add
sub
test
mov
bound
orb
or
xor
inc
sub
or
mov
rclb
sub
fdivrs
lods
mov
stc
ror
cmp
repz
test
mov
push
xor
adc
jno
mov
xor
sbb
fndisi(8087
xchg
push
enter
inc
rol
sarb
push
xchg
addr16
pop
push
pop
jg
mov
es
lods
sub
mov
sub
pop
lods
and
inc
push
xchg
out
in
cmpsb
cld
out
aam
arpl
mov
sarl
sub
jg
std
adc
sbb
sahf
push
in
ficoml
call
loop
mov
pop
and
sub
ljmp
push
mov
push
shrb
lock
fisubl
test
sbb
lret
insb
and
push
xor
lock
fwait
aad
icebp
cmpsb
sub
sub
mov
mov
xchg
cmp
out
xor
sub
pop
in
dec
jno
aas
and
lahf
mov
xchg
das
xor
fidivrs
sar
push
shr
hlt
sahf
daa
xor
jl
xchg
movsb
orl
mov
xchg
pop
or
negb
add
pop
out
sub
cmc
and
inc
aam
mov
popa
cmpsb
fwait
and
cs
mov
mov
out
aam
stc
jnp
aas
or
inc
orb
sub
push
mov
shrb
clc
clc
mov
pop
dec
repz
out
push
sub
sti
hlt
mov
xor
push
std
push
xor
push
cmp
inc
popa
or
outsb
pop
gs
pop
es
jbe
xchg
jge
loop
cmp
ret
out
imul
dec
push
fcompl
dec
sbb
adc
repz
std
inc
mov
adc
sbb
fimuls
push
mov
cltd
xlat
cmp
movsl
mov
adc
push
scas
std
inc
iret
fsubl
lods
cli
push
jne
jg
mov
push
out
adc
mov
dec
push
pop
or
jl
outsl
jmp
push
xchg
in
xchg
cmp
push
dec
add
popa
sbb
sub
rcll
mov
and
ss
pushf
mov
ljmp
nop
xor
pop
js
jae
xchg
shrb
enter
mov
imul
insl
xorb
cld
xor
mov
xor
mov
inc
jne
pop
cmp
shll
sub
fdivs
orb
jnp
mov
jae
arpl
bound
test
adc
mov
jb
add
mov
jo
sub
ss
jg
jnp
xchg
scas
and
cltd
bound
xchg
fimull
hlt
fmuls
push
jbe
xor
test
sarb
stos
pavgb
imul
mov
jbe
stos
scas
ret
mov
ljmp
lea
or
pop
lcall
shll
mov
mov
pop
sbb
lods
cmp
or
fiaddl
dec
data16
daa
add
popa
sbb
frstor
sti
pop
enter
add
jmp
jg
pop
fsubrs
dec
fimull
sub
iret
int3
dec
cmpsb
rcrb
testl
in
and
cmp
cmp
dec
mov
movsb
mov
into
xor
mov
sbb
or
adcl
jp
xlat
dec
adc
das
inc
inc
je
stos
aaa
outsb
mov
xor
sub
pop
sbb
decb
sub
ret
mov
negl
repz
add
inc
pop
jle
pusha
push
cmp
shrl
xor
fs
cmp
sbb
adc
faddl
fcmovne
cmpsw
inc
mov
or
jmp
jne
imul
jb
jg
dec
inc
lods
fdivp
out
dec
inc
adc
popa
fneni(8087
push
sbb
mov
cmp
sub
rcrl
out
mov
cmpb
rcrb
fisubrl
cmp
adc
pushf
inc
mov
bnd
mov
jb
scas
icebp
cmc
gs
clc
loop
test
mov
pop
cmpsb
cmp
nop
lcall
scas
into
cmc
addb
or
cld
cld
mov
ret
inc
inc
jo
xchg
in
sub
mov
xchg
adc
pop
inc
lahf
stos
pop
icebp
dec
push
sbb
adc
movq
jne
icebp
xor
lcall
testb
push
push
movsb
popf
mov
popa
pop
jle
xchg
pop
pop
movsb
mov
icebp
sub
popa
sbb
add
outsb
jnp
fcom
repz
xor
cmp
push
or
pop
jnp
mov
pushf
cmpsl
dec
out
ja
sub
pushf
ret
push
pop
sbb
in
or
std
je
mov
mov
sbb
sbb
cmpsl
bound
orl
xchg
add
add
and
or
sbb
cltd
clc
in
add
or
sbb
sbb
fidivrl
or
and
jb
mov
stos
xchg
into
bnd
std
insb
lret
cmpsb
mov
pop
lret
add
xor
lock
stos
xchg
nop
mov
sbb
test
inc
xchg
cmp
push
and
sbb
js
push
andl
dec
comiss
int
je
test
lods
fidivl
mov
jae
repz
mov
pop
mov
adc
ja
sbb
xchg
cli
xor
inc
mov
clc
ror
imul
mov
pusha
inc
imul
xchg
clc
lret
fstp
into
and
sub
xchg
stos
xor
xchg
add
sbb
adc
add
sbb
push
out
loopne
mov
ffreep
hlt
add
aaa
mov
xor
mov
mov
aas
and
mov
dec
push
repz
lret
xchg
cmc
mov
fwait
int
pop
inc
and
movsl
call
mov
pop
repnz
and
jmp
leave
mov
js
stos
mov
aad
fldcw
icebp
sbb
imull
insl
mov
out
add
xchg
cld
negb
shrb
xchg
dec
dec
not
sbb
xor
enter
imul
xlat
cmp
xchg
shrl
jnp
pusha
push
and
imul
sub
iret
cltd
sbb
cmp
les
popf
cmpsl
pop
dec
push
push
jle
jno
xor
rorl
push
leave
cmp
push
fwait
stc
jg
jge
xchg
in
sub
lcall
fstl
push
mov
xchg
fadd
fs
adc
jmp
dec
iret
insl
push
call
inc
add
mov
les
fwait
inc
adcb
pop
mov
sahf
add
shr
jae
nop
push
daa
pushf
jns
jne
rclb
imul
cltd
or
inc
xor
in
bound
inc
add
sub
lret
test
jle
and
movsb
imul
subb
xchg
pop
in
ss
sbb
mov
dec
hlt
xor
push
nop
push
loope
or
adc
push
into
mov
ja
lret
push
or
test
and
ficoml
push
mov
aaa
lcall
fwait
xchg
icebp
sub
cmpsl
mov
int
or
aaa
mov
xor
test
mov
loope
and
test
out
jmp
outsl
jge
push
inc
cmc
push
fwait
jge
mov
mov
mov
mov
pusha
sbb
sbb
loop
and
sbb
jg
jb
enter
stos
aas
xchg
push
repnz
add
mov
push
in
in
ljmp
vmovsldup
out
dec
int
mov
push
pushf
cmpsl
repnz
mov
adc
popf
aas
push
mov
cmp
add
mov
jmp
mov
cmpl
repnz
or
shr
pop
out
cmc
sub
fwait
push
dec
push
and
fimull
xchg
int
or
loop
jecxz
ret
xchg
cwtl
shll
ljmp
mov
or
test
jb
sub
adc
int3
jbe
dec
xor
fdiv
dec
mov
mov
scas
cwtl
pushl
push
cmp
mov
fcoml
mov
inc
pop
xor
push
and
andb
and
stc
jecxz
push
cmpsb
cmp
fs
idivb
ret
jl
test
jle
xor
andb
jns
xor
cmpsb
or
fnstcw
out
mov
or
rolb
scas
int
movsl
jo
cmp
or
call
scas
xchg
add
lds
dec
inc
cmp
xor
mov
jmp
mov
fcompl
pop
sbb
or
or
rorb
mov
xchg
or
imul
mov
pop
jnp
hlt
jp
fisubrs
mov
push
mov
push
dec
mov
jae
adc
daa
into
adc
into
loopne
in
ss
mov
or
in
cmp
and
jnp
rcl
scas
iret
mov
pop
sbb
dec
sti
inc
outsb
mov
dec
lcall
and
fwait
stos
fs
cmp
lock
jae
cmc
xchg
push
push
inc
pop
add
arpl
cmp
dec
test
pusha
jl
lods
enter
imul
fisubl
cmp
xchg
scas
stc
mov
mov
shll
push
out
aaa
sbb
add
insb
sub
mov
or
mov
add
jne
test
inc
add
xor
cmpb
fsubr
les
push
dec
cmc
sub
scas
mov
push
pop
push
into
out
mov
xchg
adcb
lods
popa
mov
sub
adc
loop
decb
in
lea
mov
mov
xchg
lock
sahf
in
inc
imul
in
mov
pop
or
pusha
int3
sbb
fsubrl
xor
divl
push
mov
cwtl
sti
ja
enter
xchg
pop
enter
xor
dec
inc
and
sub
mov
lock
out
mov
adc
ljmp
aas
jne
test
ror
push
jge
dec
cmp
out
fdivrs
sbb
mov
push
enter
xchg
cmp
cmpsl
push
sbb
and
mov
in
jmp
popf
dec
cwtl
add
cmp
sub
mov
mov
xchg
sub
das
clts
jno
fildll
sarl
jg
mov
xchg
dec
imul
lea
idiv
push
xor
fnstcw
ret
rcrl
clc
jae
jae
mov
sub
add
fwait
or
mov
inc
fstl
and
and
sbb
aad
std
xor
adc
push
mov
in
ret
sbb
or
aas
cld
inc
push
fidivrs
call
xchg
sub
fwait
shrl
adc
sub
inc
pop
cmp
adc
and
push
and
inc
sub
pop
add
mov
cmp
aad
cmp
jge
jbe
mov
sub
lcall
call
adc
mov
mov
filds
push
mov
sub
fstl
punpcklbw
hlt
aaa
add
or
loope
cli
js
ret
jp
pop
cmp
in
inc
mov
lods
cwtl
imul
in
mov
sbb
mov
outsl
rcrb
sti
test
sbb
sub
push
pop
ficompl
fnsave
and
sbbb
iret
dec
sarb
jo
sbb
jmp
loop
inc
pop
idivl
les
sbb
filds
test
scas
dec
imul
push
sbb
mul
jns
aaa
jno
or
je
fs
mov
mov
clc
jecxz
gs
sarl
inc
and
xor
sub
add
andl
mov
fmuls
inc
jno
cmp
fwait
or
push
cli
mov
movb
mov
push
test
bnd
jbe
in
sub
adc
and
push
rolb
xchg
test
iret
cmp
dec
xchg
insl
outsl
jo
cwtl
mov
test
cmp
mov
fwait
stos
jae
push
hlt
pusha
xchg
jge
push
xor
je
inc
loope
fwait
mov
test
test
rcrl
test
cmp
in
lahf
jb
testb
adc
xor
std
rorb
iret
or
bound
iretw
stos
jb
fisttpl
xchg
mov
mov
jnp
cmpsl
cld
xchg
pop
xchg
sti
cmp
xor
cmp
lahf
das
int3
in
lret
cltd
in
in
jle
mov
cmp
and
sub
scas
cmc
sbb
sub
mov
pop
rorl
test
push
pop
stos
fmull
outsb
mov
sbb
pop
mov
and
xor
ss
scas
cltd
les
lahf
or
lea
sub
enter
cmp
add
out
fwait
xchg
mov
jge
hlt
push
js
cltd
mov
call
cmc
pop
mov
mov
insb
ret
out
repnz
xlat
stos
inc
pop
stos
or
dec
pop
inc
popf
scas
clc
dec
pushf
incb
mov
rclb
push
push
sub
test
jo
das
aad
sub
shrb
in
or
add
pop
cli
sbb
fisubrl
cmp
es
gs
xor
lock
std
mov
xchg
sahf
push
js
sbb
inc
ret
std
fldcw
mov
mov
loope
loope
xor
pop
mov
stc
fbld
aaa
fisttpll
shll
out
ja
sbb
scas
jl
in
stos
dec
test
movsb
movsl
cmp
mov
sbb
lret
int
imul
jmp
shlb
jae
sbb
sbb
mov
fiadds
out
pop
cld
push
into
jge
fistps
dec
push
outsl
bound
push
or
addr16
or
jp
ja
nop
nop
jl
mov
insl
inc
dec
pushl
pop
out
addr16
push
dec
jns
cmp
shl
rolb
pop
adc
mov
flds
inc
aam
xor
popf
popf
xchg
ret
lods
pusha
sub
adc
ret
out
mov
roll
ret
xor
jns
inc
jns
mov
add
nop
pusha
lds
out
and
push
insb
mov
fsubp
adc
and
sbb
xchg
or
mov
cmpsb
inc
ret
or
pop
mov
and
inc
sbb
shl
out
daa
leave
ficoml
or
int
and
test
repnz
popa
ret
stos
xchg
xchg
sub
dec
lods
mov
cmp
dec
jp
jg
adc
mov
dec
cld
test
nop
adc
add
push
pop
int
mov
xchg
push
cmpsl
test
test
lret
jne
adc
daa
xor
add
xorb
ret
xchg
or
sub
pop
out
insl
push
inc
movq
mov
cli
jns
and
sub
pop
xchg
xchg
jmp
cmpsl
popa
push
jnp
dec
call
sbb
insl
outsl
push
and
mov
shll
jge
push
cmp
js
aas
outsl
push
mov
shlb
or
cmp
stos
aam
pusha
adc
divb
bound
repz
aad
lods
add
sti
jno
aad
pop
mov
pop
pop
gs
inc
je
lahf
imul
xor
sti
cmp
out
sub
ss
jmp
sub
xchg
sbb
cmp
inc
rclb
in
fcoml
mov
mov
rolb
sahf
pop
mov
repz
lea
push
subb
mov
sarl
sets
stc
rorb
xchg
mov
lcall
push
push
xor
jle
shl
mov
fidivs
jbe
push
loopne
lret
or
pop
push
fsubrs
les
popf
outsl
aad
add
pop
mov
in
inc
xor
leave
jb
test
pop
pop
dec
ja
mov
sub
mov
jbe
xchg
inc
lea
mov
dec
xchg
push
int
cli
cltd
sbb
mov
adc
mov
ljmp
sahf
mov
popf
mov
lahf
or
movsb
arpl
cli
mov
jmp
outsl
push
cmp
andl
push
pop
mov
rcll
lret
cwtl
ret
shlb
adc
push
lahf
fsubl
xchg
in
negl
adc
or
pop
shrb
sbb
nop
mov
rorb
dec
test
inc
pop
inc
inc
push
in
fistl
adc
and
xchg
jle
lds
pop
cwtl
outsl
pop
or
fldl
or
notl
in
cmp
add
mov
cmpsb
aas
cmp
adc
dec
cmp
jne
lea
or
je
jo
loope
mov
add
mov
and
stos
push
movsl
popf
mov
decl
orb
cmpsl
orb
inc
hlt
mov
les
in
jmp
imul
jne
ret
test
pop
cmpsl
fdivrs
or
fcom
sub
ret
in
mov
push
push
jae
jbe
adc
cmp
jmp
int
and
or
imul
mov
push
xchg
inc
pusha
mov
sbb
jae
icebp
loope
sub
out
pop
pop
adc
pusha
stos
jle
sub
sti
cmp
or
pop
dec
xchg
sub
push
fsubrp
xor
add
dec
xchg
outsb
push
adc
stc
adc
paddsb
lret
and
xchg
mov
mov
std
jg
es
push
mov
mov
mov
aad
cmp
outsl
and
cmp
xchg
es
sub
inc
lcall
adc
xchg
dec
in
ret
xlat
int
push
xchg
movl
push
dec
insb
aas
pusha
cmp
testl
add
mov
xor
adc
subl
ds
addr16
add
xchg
es
js
mov
and
inc
stc
cmc
and
adc
sahf
js
dec
js
ret
hlt
es
fisubl
cmp
xor
pushf
pop
pusha
test
bound
daa
jp
dec
adc
stc
sub
dec
sub
mov
cli
sahf
data16
push
and
aaa
jp
jge
icebp
aas
xchg
pop
and
jl
mov
mov
nop
adc
sbb
mov
add
fbstp
mov
popf
fs
test
loop
mov
mov
jl
and
pop
and
imul
xchg
arpl
stc
rol
jmp
and
xchg
pop
lahf
jae
jae
push
xor
pop
push
stc
cmp
adc
arpl
cs
push
cmc
js
add
shll
aaa
or
pop
loop
pop
sbb
data16
ret
xchg
test
cmp
je
lods
fstp
and
jp
or
data16
push
cmp
fnstenv
pop
push
mov
loop
nop
jmp
hlt
push
bsf
xchg
jecxz
aad
jns
mov
sbb
ficoms
xchg
inc
pushw
push
and
add
cmc
mov
mov
loopne
daa
loop
cltd
cmc
pop
push
in
dec
out
push
lock
les
aad
orl
mov
shl
mov
sbb
jge
mov
in
in
and
iret
jp
sub
push
in
gs
addr16
test
mov
stc
jmp
fnstsw
add
xchg
dec
outsb
mov
movsl
testb
nop
add
dec
js
loope
mov
jnp
jle
lods
cmc
aam
hlt
mov
inc
aam
add
mov
hlt
js
jmp
adc
lods
mov
sbb
mov
idiv
insl
cli
mov
fsub
fcompl
addb
pop
stc
dec
lea
mov
stc
ljmp
dec
and
pop
dec
jbe
jecxz
cmp
stos
jle
or
sub
xchg
xchg
and
mov
adc
stos
cwtl
out
in
sbb
mov
les
pop
inc
scas
xchg
lock
xor
jl
push
out
shlb
inc
mov
jp
push
inc
inc
stos
mov
pop
mov
dec
bound
test
mov
gs
pop
add
les
int
test
cmp
push
test
adc
mov
jo
inc
push
mov
mov
movsb
loope
and
pusha
xor
int3
push
pop
test
outsb
mov
adc
xchg
shlb
adc
aam
jae
jg
mov
ret
frstor
and
push
gs
mov
test
cmp
sti
test
xor
shr
test
sbb
es
pusha
mov
aas
cmpsl
icebp
pop
cmpsl
imul
jp
jmp
pop
idiv
push
addb
dec
dec
dec
imul
out
fldenv
in
mov
ljmp
xchg
sbb
jl
jge
cld
cli
aas
cmpl
sbb
cmp
mov
sbb
or
insb
movsl
push
push
faddl
rorl
cmp
loop
inc
pop
xchg
je
fsubl
insl
ret
stos
adc
add
js
ss
cld
test
jo
lret
and
cltd
test
ror
jmp
mov
or
aas
jle
scas
dec
mov
xchg
pop
lea
dec
scas
inc
in
and
and
jno
mov
sbb
sarl
pop
aaa
test
dec
test
lahf
push
das
mov
das
call
jecxz
pop
ss
outsb
enter
in
test
sbb
xchg
andb
je
sbb
add
xchg
ja
subb
lcall
sub
pushf
ret
fwait
fwait
shll
and
push
lock
les
daa
nop
jno
and
mov
js
sbb
or
adc
mov
xor
mov
push
pop
push
out
xchg
repz
add
lods
fmuls
dec
aam
cmpl
orl
insl
or
jo
jno
mov
sti
sub
jmp
stc
or
cmc
outsb
xchg
jo
add
sbb
push
add
cmc
push
sbb
idiv
sub
mov
stc
mov
inc
movsb
mov
in
outsl
push
push
lods
mov
lods
shrb
jmp
and
jmp
sbb
push
cmp
cmp
sub
call
adc
shr
hlt
movlps
jo
cli
pop
rorl
lret
cmp
aas
shll
mov
sbb
mov
pop
pop
xchg
xchg
ret
sub
ficoml
adc
or
iret
movsb
aad
xchg
in
jo
sub
pop
jb
fisubs
jg
fs
mov
jne
mov
bound
mov
mov
imull
je
adc
cmp
add
lret
out
xchg
mov
and
mov
xor
int3
leave
or
pop
sbb
push
pop
notb
jnp
icebp
int3
pop
sahf
testl
aas
push
sub
aam
xchg
mov
pop
inc
add
pop
sub
sti
test
fcomps
stc
popf
pop
adc
push
mov
bound
aas
mov
imull
icebp
mov
xor
jo
xchg
mov
jecxz
push
outsl
lock
ds
sbb
pop
pop
or
lock
pop
sbb
hlt
ret
imul
mov
xor
je
xor
loopne
pop
std
and
pop
loop
push
cmc
inc
movsl
xchg
lods
cmp
pop
lock
mov
add
cltd
jge
or
adc
jmp
sub
dec
mov
push
xor
out
lods
in
sub
inc
jo
jbe
jnp
or
jne
dec
sahf
scas
insb
cltd
sbb
cmp
adc
aam
movsb
arpl
das
mov
test
pop
sarb
jns
lahf
push
push
dec
out
fidivrs
lock
iret
ja
jno
stc
sbb
pusha
cmp
or
fimuls
fs
outsb
sbb
mov
adcl
pop
clc
leave
js
or
paddd
xchg
add
ljmp
xchg
jl
cld
leave
testl
xor
sub
adc
sub
popf
cld
pop
stos
outsb
push
jne
mov
call
jb
aad
cmpsl
idivb
test
test
out
mov
push
mov
in
xor
pusha
inc
push
inc
sti
sbb
xchg
and
loope
ljmp
jae
cld
mov
test
pop
mov
dec
aad
sahf
lret
xor
mov
aas
nop
in
fmulp
push
push
and
dec
add
neg
add
leave
sub
bound
jbe
lahf
inc
push
arpl
inc
mov
mov
jb
outsl
jnp
sbb
hlt
xchg
loopne
mov
imul
es
shrb
sbbb
cmp
mov
sub
sbb
mov
and
add
movsl
mov
push
push
mov
test
pop
push
mov
cli
scas
mov
mov
orl
aam
test
dec
mov
in
cld
gs
pop
sub
div
sbb
dec
pop
mov
pop
dec
daa
cmp
lods
push
inc
aam
in
scas
into
cmp
and
icebp
jne
sarl
es
mov
jb
stc
add
mov
jg
ret
push
dec
mov
inc
cmpsb
or
dec
pop
mov
inc
es
bound
ja
cli
xor
lea
pop
mov
or
xchg
mov
std
cmpsb
pop
jp
and
pop
lret
xchg
fucomp
push
shrl
mov
sbb
fsubs
loope
xchg
subl
loop
call
popa
xchg
sub
aad
mov
add
adc
inc
cmp
shlb
adc
and
insl
lea
popa
test
dec
nop
dec
cmp
lret
jp
and
inc
cmpl
lret
pushf
sub
mov
pop
inc
data16
add
pusha
test
aam
test
rcrl
inc
add
pop
inc
ret
ds
or
test
sub
push
xchg
fwait
mov
mov
xchg
push
and
fisttpll
stos
cltd
mull
mov
cmp
out
cmp
fcoml
loope
mov
ret
add
xchg
and
mov
or
inc
jae
push
mov
jge
lock
es
mov
inc
jae
adc
andb
cmc
gs
fistps
rcll
cmp
jmp
aas
dec
add
aaa
jp
mov
repnz
inc
shll
mov
dec
int3
mov
sub
add
lock
fnstsw
es
cmp
push
xchg
scas
jae
xor
test
cmp
jl
cs
out
inc
push
popa
mov
sarl
fistpl
scas
sbb
in
pop
nop
sti
cs
cmp
push
pop
out
pop
sub
dec
or
jmp
dec
popa
adc
outsb
and
out
movsb
subb
cmp
cmc
adcl
push
js
xor
inc
pop
int3
mov
fildll
lahf
addr16
jae
je
push
in
push
and
movsb
mov
push
bound
loopne
gs
insb
data16
test
xchg
enter
mov
stc
xchg
and
sti
cli
mov
lds
and
push
arpl
cmpsb
in
lret
or
cli
mov
and
jae
int3
pop
push
lcall
ficoms
loopne
inc
pop
push
sub
repz
adc
mov
leave
lret
popa
xor
xchg
add
sbb
adc
mov
out
jmp
pop
jle
ret
jg
loop
scas
pop
repnz
adc
movsb
mov
pushf
xor
or
aaa
pop
lods
shll
lods
and
outsb
mov
dec
xor
out
push
in
adc
inc
mov
mov
fmul
aad
subl
jo
cmpsl
insl
scas
inc
es
pushf
mov
fcomip
fnstsw
adc
mul
ret
push
and
leave
arpl
fdivl
pop
sbb
cmp
stos
add
mov
and
push
andl
jno
cmp
repz
jno
xchg
jmp
sarl
enter
cltd
enter
pop
xchg
and
cs
add
push
sbb
ja
push
jns
pop
xchg
add
dec
and
cmpsb
mov
cmpsl
into
dec
test
fucomip
jl
shlb
add
push
inc
sub
cmovg
stc
jp
popa
inc
xchg
shrb
xchg
fdivrs
andl
cs
jp
push
jle
jmp
push
inc
cmpsl
push
inc
std
mov
js
hlt
xor
push
pop
add
sub
adc
push
adc
mov
add
call
test
mov
ljmp
xor
mov
test
push
and
sub
inc
test
inc
sub
daa
mov
push
mov
aam
mov
xchg
mov
mov
jnp
lods
fstps
pop
jo
xor
js
sbb
repz
sarl
sbb
jbe
popa
mov
sbb
repz
or
cmpsb
add
inc
inc
loop
cmp
jle
movsl
cmp
jbe
sub
movb
dec
adc
mov
lock
call
inc
xor
mov
jg
lods
cmpsl
lret
inc
iret
popa
aad
jnp
pop
test
cmp
push
mov
sub
and
mov
dec
push
push
jle
sbb
or
icebp
cmpsl
cmp
jno
pop
sbb
mov
mov
push
jnp
call
adc
add
xchg
jnp
enter
mulb
jnp
mov
pushf
pop
lret
xchg
adc
je
sbb
movsb
stos
sbb
cmp
dec
std
xchg
movsl
insl
and
stos
fwait
sbb
mov
pusha
and
jbe
out
mov
fs
mov
xor
mov
pop
out
jnp
add
pop
cmp
push
mov
and
or
lods
loopne
mov
jne
mov
leave
out
pop
in
jle
das
mov
imul
pop
out
fs
sbb
cld
fsubrs
repnz
repnz
adc
mov
pop
movsb
push
aaa
jg
pop
push
pop
xchg
push
pushw
aad
aam
adc
mov
cmpsl
sti
inc
call
int
mov
notl
push
xchg
cmpsl
into
lds
bound
mov
in
jns
sar
sub
pop
lret
cmp
push
inc
pop
push
lea
mov
push
cli
xchg
sbb
jmp
adc
cmp
call
xchg
loope
dec
fcomps
movsb
cwtl
pop
fiadds
xor
rolb
sbb
jp
xchg
stc
push
xchg
inc
arpl
lea
jbe
xchg
andl
out
lea
lods
jg
inc
es
ds
in
shrb
lods
xlat
push
lea
jp
adcl
enter
cmp
aas
jmp
xorl
insl
pop
pop
xchg
mov
movsb
mov
push
ljmp
push
jecxz
or
mov
out
xor
popf
sbb
pop
sub
dec
test
das
outsb
dec
mov
and
cmpsb
rcll
xchg
xor
fs
xchg
insl
popa
hlt
out
sub
jle
push
inc
jb
incl
mov
cmpsl
adc
sbb
xchg
pop
mov
stos
fistps
pop
mov
loop
and
dec
in
loope
jo
sbb
cmp
das
sahf
stos
mov
xor
lret
cltd
dec
inc
popa
xchg
incl
mov
popa
insl
and
sbb
sub
mov
out
ret
sbb
push
in
sub
repnz
ljmp
dec
daa
cmp
mov
jne
imul
xor
xchg
mov
push
in
int
insl
fcomip
push
or
xor
mov
fcompl
lret
push
invd
pop
dec
xor
inc
inc
mov
les
mov
sbb
and
mov
test
repz
ljmp
mov
cmpsb
and
sub
ss
mov
js
sub
xchg
jecxz
pop
dec
jae
test
and
mov
push
xchg
mov
loope
kmovd
iret
addl
dec
add
cmp
mov
in
xchg
adc
cwtl
mov
test
sbb
sbbb
cmp
jne
mov
pusha
shrb
push
repz
xchg
loopne
sbb
cmp
inc
out
in
test
jg
scas
fidivrl
or
inc
mov
outsb
mov
jae
xor
jnp
jl
jmp
scas
movsb
adc
mov
add
pop
add
push
mov
fisubl
jbe
xchg
in
fs
lret
in
jmp
and
push
mov
push
aad
sbb
push
mov
mov
repz
iret
push
aam
movsl
mov
add
push
jmp
push
pop
xchg
pop
jge
insb
vminps
movsl
and
adc
pushf
aaa
adc
imul
std
cltd
and
lods
jnp
sahf
es
pop
cmp
add
flds
push
imul
xor
sbb
mov
dec
mov
ja
in
jl
xchg
xlat
push
test
add
xchg
pop
sub
adc
pop
mov
lock
shlb
std
cmp
sbb
mov
in
fiadds
mov
mov
jno
sub
repnz
inc
out
xchg
insl
jne
popa
popf
into
jno
iret
xor
push
jo
xchg
mov
mov
cmp
movsb
push
xchg
ss
fnclex
dec
or
dec
xchg
and
sbbl
mov
mov
adcb
lea
pushf
mov
xchg
ficompl
sub
and
leave
mov
sbb
out
movsl
mov
adc
add
mov
aaa
sub
xchg
mov
enter
mov
daa
test
jg
mov
sbb
scas
roll
test
mov
out
pop
add
add
and
mov
adc
inc
adc
ja
scas
and
test
cld
imull
jno
insl
push
sbb
je
mull
mov
mov
push
lret
adc
and
adc
mov
add
addl
bound
fildl
out
pop
fwait
rcrb
mov
cmc
into
jmp
xchg
lods
stc
insb
ljmp
hlt
or
xor
sti
das
or
mov
dec
cs
sub
mov
into
lahf
sub
or
insl
imul
jl
shlb
or
hlt
push
adc
ljmp
mov
mov
fbstp
sbb
jne
in
imul
int3
jp
xchg
movsb
cmpsb
cld
arpl
inc
aas
ficomps
pop
negb
cltd
adc
rclb
lock
fisttpll
push
lret
mov
test
inc
cli
lret
ljmp
sbb
pop
dec
mov
mov
or
and
xchg
movsl
sbb
push
pop
iret
loop
inc
xchg
xor
in
cmp
cmp
cld
or
into
or
enter
inc
sahf
push
pop
jbe
cmpsb
xor
sahf
inc
push
enter
in
gs
sub
cmp
rcrb
dec
adc
mov
mov
add
add
out
movsb
sub
and
scas
bound
test
loop
mov
mov
adc
shlb
out
std
xor
adc
fcmovne
ret
stos
sub
mov
iret
push
addr16
jb
dec
sub
es
mov
push
pop
or
mov
mull
xchg
aas
inc
inc
testw
lock
and
dec
jae
movsb
push
mov
lea
pop
sub
inc
mov
jns
shll
cmpsl
inc
mov
shlb
movsl
fldt
int3
xor
ja
jl
push
jmp
mov
fidivrs
jge
jnp
mov
xor
mov
imul
sbb
pusha
imul
sahf
out
xchg
ds
out
cmp
mov
dec
aam
outsl
ds
push
ret
adc
mov
push
mov
cmp
fldt
arpl
dec
gs
leave
push
mov
fs
dec
jae
in
jne
mov
cs
call
inc
adc
or
xor
dec
mov
movsb
dec
add
xchg
int3
pusha
and
pushf
popf
ljmp
das
mov
pop
loope
or
sahf
cmp
fwait
mov
jl
pop
aam
call
ss
insb
lock
pop
mov
popf
cmpsl
dec
scas
push
jns
sarl
mov
xor
xrelease
jp
mov
xor
sbb
addr16
je
movsb
dec
mov
jnp
sub
cwtl
inc
cmp
cmp
lea
and
loop
pop
inc
fbld
cmp
sti
push
cmc
pop
jns
lods
xchg
xor
xchg
sub
popf
arpl
lock
ljmp
lods
xchg
jbe
in
rcll
add
test
and
xor
dec
mov
arpl
mov
outsb
je
repnz
fidivl
cmp
hlt
or
test
sbb
mov
inc
stc
ftst
mov
frstor
mov
xor
inc
sti
outsb
fsubrp
push
std
inc
test
or
xchg
leave
push
xor
ja
movsb
insb
ja
sub
push
add
mov
mov
cmp
aaa
lock
ret
dec
bound
sar
mov
add
outsb
pop
out
imul
cmp
call
mov
inc
mov
in
insb
inc
js
dec
and
scas
imulb
lea
pop
cmp
xchg
cmp
or
es
pop
subl
xorb
lea
lahf
int
in
mov
aad
pop
xor
mov
jl
fdivl
add
sbb
test
and
push
mov
sbb
jg
fisubrl
leave
mov
mov
dec
sub
mov
sub
loope
das
cmp
xchg
ljmp
lods
fstpt
test
xchg
popf
je
enter
orl
and
mov
test
mov
cmp
xchg
test
in
repz
lods
repz
lahf
adc
retw
cwtl
mov
aas
jge
loopne
lds
mov
sub
rorb
cmc
push
cs
cmp
push
fwait
xchg
mov
cmpl
inc
or
pop
sarb
nop
test
enter
shlb
cwtl
sbb
mov
xchg
adc
inc
in
push
lahf
mov
btc
dec
insl
movq
mov
xchg
xlat
xor
inc
sub
sbb
xchg
jo
mov
mov
add
in
mov
mov
imul
cmp
icebp
fs
sub
mov
mov
jbe
movsl
sbb
jge
and
xchg
ret
push
cmc
or
lea
xchg
mov
subb
es
xchg
cmp
dec
mov
jecxz
scas
sub
xor
movsl
and
mov
sub
daa
loopne
xor
xor
push
adc
xchg
int3
jno
mov
lock
mov
sbb
sti
pop
addr16
sub
xor
xchg
adc
iret
xchg
pushf
cltd
icebp
int
mov
push
jo
pop
addr16
or
mov
test
scas
mov
lea
fidivl
push
cld
pushf
stos
mov
pop
push
jo
and
mov
xchg
xchg
adc
dec
jl
push
adc
fsts
jo
xor
xchg
cs
scas
mov
fbstp
dec
adc
out
xor
jmp
xchg
es
in
pop
sbb
in
mov
outsl
ss
mov
fadds
sub
dec
jg
dec
mov
sti
sbb
pop
int3
mov
mov
hlt
sbb
sarb
rolb
xor
int
inc
lea
in
pushf
mov
insb
dec
enter
pop
jl
out
inc
sub
dec
jecxz
imul
mov
ret
js
clc
or
mov
lret
loope
inc
out
and
mov
dec
inc
xor
fildl
popa
adc
andl
add
cs
sbb
sub
js
and
outsb
add
repz
or
stos
enter
mov
xchg
adc
push
pop
cltd
pop
cwtl
xchg
sub
loope
cmp
bound
and
cmc
mov
mov
adc
es
mov
imul
jmp
sbb
inc
push
adc
lahf
js
sub
inc
mov
adc
pop
xchg
adc
xor
dec
sub
test
mov
sbb
xor
add
add
dec
xchg
jecxz
inc
push
xchg
mov
push
pushf
rcll
and
push
xchg
addb
jecxz
jg
and
lret
repnz
push
jne
push
sub
adc
filds
and
mov
ss
test
jnp
cmp
movsb
nop
xchg
xor
std
adc
iret
mov
outsl
xchg
push
push
out
psllw
or
daa
idivb
into
pushf
jbe
nopl
lea
roll
pop
xchg
loop
sbb
call
jmp
inc
js
mov
loopne
jle
imul
pop
add
sbbb
fisttpll
dec
jge
jb
sub
loope
repz
scas
pop
dec
ret
add
imul
or
ror
mov
pop
test
cmc
enter
add
mov
test
lahf
or
inc
negb
imul
pop
or
jns
roll
insl
aaa
jae
push
leave
clc
mov
divl
shl
mov
lds
xchg
jo
push
mov
test
adc
push
out
dec
pop
clc
dec
xor
jnp
pop
jae
test
cmp
add
imul
add
pop
fstp
xchg
cmp
insb
mov
cmpsl
fiadds
ret
mov
imul
rcrb
movsb
repz
sub
fwait
scas
fs
shl
pop
sbb
lods
aad
lret
sarb
mov
push
bound
adc
aam
and
jge
push
dec
scas
cmpsb
repz
shll
daa
ret
and
mov
pop
shll
bound
sub
push
inc
sbb
pop
mov
ja
lahf
xor
jle
push
rorb
dec
es
jb
inc
and
xor
repz
cli
add
or
fcompl
into
shrl
call
mov
add
jb
jmp
push
push
dec
add
mov
inc
fiaddl
aad
push
jae
add
push
adc
sti
stc
ret
pop
shrl
ret
imul
test
sbb
inc
or
push
cmp
mov
sahf
shll
mov
xchg
or
pop
dec
test
xor
push
xlat
sahf
pop
hlt
pop
push
std
mov
mov
inc
pop
lea
mov
lret
inc
lret
or
ret
addr16
lahf
inc
add
add
sbb
cld
mov
iret
cmp
aad
adc
mov
and
jl
sub
sbb
mov
and
pop
jno
nop
xchg
sub
push
cmp
adc
scas
das
jmp
mov
mov
inc
inc
out
lock
and
xchg
dec
jl
cmp
and
scas
stc
pop
and
nop
cmp
add
ja
dec
mov
test
push
xorb
imul
or
dec
lods
inc
mov
pop
jle
adc
aam
or
adc
xor
sub
pop
mov
dec
inc
dec
rorb
or
xchg
aaa
and
test
sub
cmp
addr16
mov
xor
stos
hlt
pop
sub
movl
xlat
dec
add
jg
or
mov
inc
fisubrs
negl
loope
and
lock
cmp
mov
xchg
push
dec
inc
adc
and
xchg
cmpsb
scas
mov
les
or
mov
hlt
ja
sub
mov
fistpl
mov
cmc
in
cmp
add
lds
testb
xor
xchg
jns
rclb
icebp
dec
or
mov
pop
fld
clc
in
jbe
adc
mov
jmp
insb
sub
std
bound
jge
or
int
sub
outsl
adc
push
push
cmp
pop
std
rolb
push
das
push
push
xchg
jecxz
or
bound
xchg
pop
scas
adc
outsb
sbb
in
add
dec
es
sub
sahf
loope
sahf
xor
out
dec
mov
add
fwait
lcall
loopne
in
cli
mov
pusha
jb
mov
scas
dec
sarb
ljmp
data16
sub
add
clc
xor
mov
mov
add
mov
rolb
aam
jae
xor
ret
xchg
imul
or
mov
ja
ret
push
mov
pop
lcall
mov
ljmp
repz
adc
pop
test
and
test
pop
xor
mov
into
pop
dec
push
sbb
popf
lret
add
jle
leave
jnp
jmp
ds
pop
mov
jp
push
repz
and
xchg
add
xchg
adc
jmp
stos
mov
fiaddl
jno
jbe
sub
mov
mov
in
push
stc
fidivrl
jp
sub
or
mov
scas
sub
xchg
enter
push
pushf
sub
lods
add
mov
lret
xor
inc
rclb
ss
outsb
pop
jl
mov
mov
test
sub
push
jge
sbb
push
arpl
test
sub
adc
mov
loope
jo
pop
pop
scas
mov
into
test
pop
xchg
and
sbb
imul
cmp
imul
sbb
or
push
jmp
mov
clc
adc
xchg
xlat
adc
jg
sub
inc
pop
lret
je
test
jae
push
jbe
mov
enter
or
ret
loopne
mov
mov
inc
pop
ss
in
push
mov
sahf
xchg
jo
fs
stc
lahf
mov
xchg
jecxz
push
add
pop
add
mov
and
out
out
insl
std
add
mov
adc
adc
loop
xor
xchg
into
dec
mov
fnstsw
out
cmp
jb
add
xor
addb
cmp
mov
push
scas
xchg
adcl
ret
dec
mov
add
push
jmp
ds
push
imul
dec
imul
jmp
pop
and
mov
popf
loope
cltd
nop
xchg
subl
jg
jne
fxch
stc
jmp
jbe,pn
mov
mov
cmp
mov
xor
mov
xor
cmp
pusha
imul
pop
jbe
mov
std
pop
adc
loope
push
cmpsl
addb
cmpsl
pop
and
push
bound
jne
and
in
aaa
inc
dec
filds
xor
std
lcall
mov
lea
jae
dec
mov
cmp
push
lcall
stos
mov
cs
mov
ret
lea
lds
adc
dec
ss
add
xor
nop
notb
dec
cmp
cmp
outsb
lcall
into
xchg
pop
mov
pop
movsb
fimull
in
pop
cltd
loop
adc
call
leave
sub
push
pop
xchg
shlb
mov
mov
sbb
mov
sub
aad
xchg
xchg
jno
sub
stos
inc
cmpsl
sbb
mov
adc
stc
jae
repnz
xchg
cmp
jmp
push
xchg
or
jne
mov
mov
jb
or
xor
insb
mov
xor
jno
xchg
cmc
mov
push
cli
xlat
insb
sbb
mov
fidivl
jle
sbb
mov
inc
xchg
lods
mov
or
mov
lcall
xchg
adc
fldl
je
pop
mov
jg
xchg
loopne
and
sahf
dec
jb
add
or
pop
stc
cwtl
scas
mov
insl
sbb
pop
jno
mov
aaa
les
mov
lods
hlt
dec
push
push
pop
cmpsl
mov
pop
inc
gs
pop
movsl
outsl
cmpsl
fsubrl
std
or
cmpsb
bound
in
add
xchg
jg
inc
mov
mov
push
testb
into
sub
pop
mov
xor
imul
das
xchg
inc
sahf
pusha
sti
outsb
in
add
es
adc
iret
in
inc
push
dec
ret
jo
mov
mov
add
dec
add
test
scas
jg
repnz
cmp
pop
push
aad
outsl
xchg
inc
imul
cmp
lock
iret
lock
inc
mov
jno
mov
insl
adc
sbb
lds
jbe
outsb
pop
js
testb
jge
sbb
in
xchg
jne
outsl
in
hlt
sub
lds
pop
std
jno
pmaxub
js
add
rorl
pushf
lods
inc
xchg
pop
mov
mov
lock
out
push
pop
lods
xchg
insl
out
or
dec
add
mov
test
add
or
xor
sub
jecxz
data16
xor
xor
push
lods
pop
dec
in
and
aad
sbb
pop
inc
add
imul
inc
loopne
or
cmp
sbb
and
add
push
sbb
int
ja
mov
push
mov
sbb
mov
push
or
insb
jecxz
incl
pop
inc
sbb
jmp
jno
xor
add
dec
faddl
in
push
ret
rcl
shl
inc
mov
shrl
push
loope
jmp
mov
addr16
inc
loope
mov
cmp
arpl
or
push
cmpsb
xchg
fs
sbb
add
inc
sarl
mov
clc
xor
data16
sub
xchg
inc
jno
call
xchg
inc
dec
rclb
xor
mov
push
arpl
iret
inc
jne
jne
sub
fbstp
mov
ds
dec
outsl
shrb
test
mov
outsl
mov
xorl
mov
xchg
call
or
stos
sub
xchg
push
push
and
fsubrp
mov
or
inc
stc
jge
mov
push
cmpsl
out
sbb
mov
loopne
mov
vprotw
push
inc
adc
in
push
les
and
add
lods
divl
lock
insb
fwait
imul
add
push
inc
mov
add
addr16
es
push
shlb
add
push
test
push
repnz
inc
ss
or
dec
adc
cmpsb
fidivl
sbb
in
test
lahf
or
repnz
fwait
js
pop
ret
xor
cmpb
jmp
adc
clc
xchg
into
sub
add
pop
nop
rdpmc
dec
movsb
sub
mov
rolb
add
ljmp
loopne
neg
cmp
mov
xchg
fs
add
fneni(8087
jnp
ss
inc
mov
les
repnz
je
fsts
div
xchg
out
inc
pop
push
or
xorb
cmc
mov
fadds
sahf
loopne
popa
faddl
cli
xor
add
sub
push
lret
leave
xchg
sub
les
hlt
test
subl
hlt
mov
adc
sbb
test
movsb
jnp
pop
aam
push
js
inc
dec
sarl
dec
mov
jecxz
sub
push
movsb
std
pop
xchg
pop
mov
arpl
sub
fidivs
add
xchg
mov
sbb
fldl
push
dec
push
cmpsb
in
jmp
mov
insl
stos
sbb
in
sbb
jge
xchg
in
dec
vpmuludq
mov
popa
scas
fs
ss
adc
js
sti
and
cmp
ljmp
xchg
out
add
andb
incl
test
mov
mov
mov
sarb
inc
push
mov
and
sub
mov
inc
shrb
adc
cmp
cmp
addr16
decl
out
or
incl
mov
test
shrl
clc
fisubs
fldt
pop
push
in
into
add
fbld
push
popf
jecxz
jbe
rolb
jbe
fsubrs
mov
and
ss
xchg
or
scas
mov
or
in
ficomps
mov
icebp
in
loop
rol
mov
mov
inc
outsl
stos
pop
aaa
out
std
push
aaa
setnp
fmull
rolb
sub
imul
add
mov
das
stos
lcall
popa
pop
mov
cli
f2xm1
movnti
push
sub
hlt
jecxz
hlt
mov
testb
jbe
mov
sbb
clc
pop
xchg
mov
cmc
insb
jne
mov
lcall
cmp
xor
inc
call
ret
jmp
stc
movsl
xchg
lods
rorl
jl
ret
loop
aas
xchg
enter
hlt
pop
popf
sbb
ss
xor
sub
cmp
xchg
and
ficompl
mov
scas
in
hlt
dec
subb
dec
mov
sub
push
or
mov
lret
mov
adc
mov
xor
push
arpl
mov
xor
mov
xor
cmp
push
movsl
mov
in
mov
cli
fcmovnb
ljmp
jnp
jne
mov
clc
rol
xchg
loopne
ja
leave
aas
addr16
shl
add
adc
mov
adc
movsb
push
dec
nop
cmc
sbbl
pop
xor
in
mov
fucom
or
add
xchg
lea
add
loopne
ljmp
adc
je
es
mov
mov
and
pop
aam
shlb
and
pop
mov
push
daa
mov
fwait
add
fs
mov
jmp
dec
sub
mov
sbb
mov
mov
aad
jl
lods
mov
jns
pop
pop
call
pop
testl
add
shlb
in
push
xor
into
js
or
inc
in
inc
sub
test
fnsave
andb
dec
out
sbb
fcompl
orl
mov
stos
gs
pop
push
pop
push
das
mov
or
xchg
sbbl
dec
push
sbb
dec
cwtl
test
jg
pop
and
in
lods
pop
rolb
insl
mov
xchg
cmc
push
push
fsubrl
es
pop
mov
lahf
jmp
lret
mov
out
mov
popf
cmp
dec
and
push
lcall
xchg
and
cmovno
clc
cmp
sub
out
lock
mov
add
lahf
pushl
ss
mov
jecxz
mov
sub
inc
and
test
sbb
out
pop
add
ret
sbb
mov
stos
in
mov
fdivrs
mov
dec
rcrl
push
add
lock
jne
icebp
pop
push
rdpmc
push
jmp
mov
enter
push
pop
imul
test
cmp
mov
movsl
loopne
mov
and
fidivl
test
das
in
dec
in
sub
xchg
or
sub
pop
pop
push
add
xchg
arpl
xor
dec
sti
sahf
add
or
cltd
adc
shll
daa
in
inc
pop
fstpt
xchg
nop
xor
outsl
push
dec
adc
int3
cmc
add
xchg
inc
xor
cltd
ficoml
jae
shl
lock
push
stos
out
mov
data16
icebp
mov
aad
dec
addr16
repz
iret
pop
loop
add
add
fwait
mov
push
pop
push
add
inc
bnd
in
cmp
push
pop
push
lret
in
cmc
mov
and
int
and
cmp
sub
pop
cld
nop
inc
inc
testl
adc
and
lret
push
fsubl
push
pop
jno
lahf
cmp
mov
add
aaa
fisubs
icebp
lret
dec
inc
or
rclb
ljmp
adc
into
pop
mov
subl
testl
push
lcall
mov
pop
jmp
xchg
shl
jle
xor
shll
jns
aas
push
shrb
or
dec
or
and
jnp
dec
inc
addr16
mov
movsl
push
js
inc
mov
std
nop
jg
mov
cmp
ss
push
test
or
sahf
inc
inc
push
pop
stos
mov
out
incb
mov
xchg
loope
rcrb
test
or
pop
adc
pop
dec
pop
fidivs
sbb
mov
adc
jbe
dec
xrelease
or
add
push
faddl
jecxz
dec
add
xchg
movsb
jge
insb
or
fldl
mov
push
xchg
push
les
mov
pop
inc
es
imul
insl
and
inc
repnz
adc
or
fnsave
pop
addr16
add
sbb
adc
and
loope
jle
and
dec
jl
sar
mov
pop
fwait
loopne
shl
fsubp
sbb
je
fmul
lret
jmp
fldenv
imul
cwtl
mov
sarl
fcoms
adc
cwtl
ds
fldenv
ss
cmpsl
repnz
cs
lods
aam
and
cmp
repz
outsb
xchg
sbb
and
adc
add
insb
pfrsqit1
lock
or
xlat
faddl
sub
push
subb
pop
jnp
or
daa
out
push
cltd
push
add
insb
cltd
push
int3
xor
xchg
pop
arpl
mov
push
cwtl
fxch
loope
loop
into
ss
rcll
jp
xor
mov
lods
cmc
add
inc
add
jl
mov
addr16
shlb
and
sti
ja
or
xsha256
cmpsb
push
push
sbb
or
mov
dec
xor
pop
mov
dec
lahf
dec
cwtl
push
and
pop
mov
fstpl
nop
fs
lods
mov
mov
and
jb
adc
mov
je
add
fmull
add
out
popf
and
inc
sub
mov
mov
sbb
cmc
add
test
movb
mov
sbb
bswap
stc
or
repz
lret
out
jecxz
sbb
lock
add
push
and
mov
inc
mov
mov
xor
loope
mov
mov
or
dec
dec
notl
push
inc
mov
mov
cmpl
mov
shlb
mov
lret
jae
sub
nop
jmp
pushf
mov
arpl
sbb
stos
int3
jno
mov
add
adc
in
push
cmp
out
xor
mov
lea
mov
dec
enter
xchg
add
bound
or
rclb
xchg
out
xlat
sub
std
pop
push
push
mov
add
and
push
dec
fisttpl
les
jp
jp
daa
ja
mov
cmp
repnz
sub
mov
icebp
xchg
sub
or
inc
xor
push
and
cli
push
cmp
lret
mov
mov
jmp
or
imull
pop
imul
or
mov
cmp
mov
jge
jo
and
cmc
jmp
and
push
mov
pop
loopne
je
mov
arpl
and
insb
js
pop
sub
movsb
pop
out
pop
sbb
inc
pop
add
aad
pop
mov
push
mov
inc
push
pop
fcoms
mov
push
mov
jmp
xchg
mov
cld
jg
out
shrb
dec
ja
movsb
ficoms
outsl
pop
scas
pusha
cmpsb
fwait
ss
je
sub
aas
arpl
and
push
push
mov
jmp
ds
popa
aas
mov
loopne
mov
or
lahf
sub
mov
call
stos
jl
sar
in
add
jle
iret
push
dec
cmp
icebp
and
jnp
test
movsb
call
sub
lcall
lock
xor
lret
push
loopne
mov
int3
rcll
mul
sub
inc
mov
lidtl
fisubl
or
mov
aad
stos
cmp
hlt
add
jg
test
rcrb
adc
cmp
xor
inc
xchg
mov
add
cmp
xor
fucomi
ds
push
dec
fcmove
cmp
stc
add
fincstp
xchg
cltd
sbb
gs
pop
stos
js
adc
pop
lods
sub
inc
aam
into
xor
cli
xchg
cmp
pusha
adc
test
scas
aad
mov
adc
jecxz
sub
scas
pop
into
pop
jae
mov
xchg
adc
mov
sbb
mov
testb
mov
sarl
call
dec
mov
lods
loop
loope
cmp
mov
fidivrl
jns
fbld
lret
and
clc
lds
push
sbb
imul
sub
adc
and
icebp
arpl
dec
add
in
jb
add
std
shll
lods
data16
filds
cli
cmp
xchg
mov
enter
xchg
ljmp
jle
test
lds
jns
popf
mov
mov
hlt
cld
mov
jns
inc
xor
call
sub
mov
popf
hlt
pop
pop
cmp
in
lock
mov
xchg
loope
movsl
dec
js
push
fwait
pop
push
rcll
scas
inc
mov
loope
mov
stos
icebp
push
sarb
loopne
shufps
mov
add
mov
jmp
or
pop
cli
sbb
mov
test
dec
xchg
mov
subl
in
push
jl
rcr
push
xor
sub
jo
pushl
aad
or
adcl
mov
push
mov
inc
mov
nop
addr16
in
ss
dec
push
adc
inc
sub
insb
mov
cmpsl
lods
ret
xchg
in
imul
popf
arpl
pusha
pop
cmp
lret
add
mov
push
imul
xlat
adc
push
hlt
sub
jno
mov
and
cmc
mov
push
xchg
jo
or
adc
jl
pop
xorl
scas
out
mov
jno
pop
adc
hlt
or
mov
je
cs
scas
push
fcomps
addr16
jg
xor
hlt
push
mov
fdivrs
inc
add
pop
add
ret
fmuls
xchg
xchg
rclb
icebp
shlb
loopne
outsl
or
fsubr
xchg
or
enter
dec
inc
pop
cltd
mov
dec
inc
in
lret
movsb
xchg
mov
lods
in
faddl
sub
aaa
or
loope
cmp
lahf
pop
jno
xchg
das
out
clc
pop
fimull
inc
mov
jb
jecxz
cli
mov
popa
mov
jmp
mov
or
inc
xor
mov
dec
in
and
xor
fnstsw
jg
fisubl
pop
mov
mov
iret
xchg
dec
shll
fsub
popa
into
std
stos
pop
mov
cmp
xchg
add
xchg
xchg
arpl
push
adc
xlat
lcall
arpl
xor
clc
clc
xchg
fists
mov
mov
mov
cmp
in
jb
loop
mov
icebp
fldenv
lock
sahf
xchg
popf
cmp
clc
stos
sarb
jo
mov
ljmp
fs
inc
push
jmp
xchg
repz
je
jg
js
xchg
daa
xchg
pushf
data16
jl
xor
adc
adc
mov
in
rcrl
mov
jo
mov
lock
add
cmp
xor
es
mov
je
mov
aas
push
scas
pop
sbb
out
fldt
dec
dec
out
mov
test
sub
rorl
adc
pop
fiaddl
mov
mov
stos
xor
lret
push
inc
mov
push
sbb
cmp
mov
dec
pop
jo
push
and
lahf
into
dec
jg
xlat
out
cs
sbb
jg,pt
sahf
xor
ja
push
loope
sub
mov
jecxz
sub
xchg
sbbb
jb
and
xor
push
inc
pop
push
push
in
sub
sub
mov
pusha
enter
aaa
lods
xor
or
les
inc
outsl
jle
mov
incb
inc
sbb
loop
dec
mov
or
lcall
cmp
mov
cltd
into
push
loop
call
mov
les
push
xor
inc
sub
cld
xor
or
pop
sti
jae
sti
pop
out
out
jae
sbb
jl
out
push
test
ret
fcoms
cli
sahf
mov
jo
sarb
lds
push
mov
nop
adc
call
and
jae
jp
pop
and
insl
pop
pop
out
jb
mov
add
push
dec
lock
loop
pop
jp
or
enter
in
test
pop
je
lret
push
and
ret
test
xlat
ret
inc
lods
and
jo
xchg
imul
xchg
mov
imul
and
negb
xchg
daa
mov
movsl
dec
ja
push
arpl
cwtl
in
mov
and
daa
push
sbb
sbb
push
pop
cwtl
lods
mov
inc
pusha
in
inc
cld
les
in
fisttpll
adc
or
xor
cmp
pushf
mov
aaa
movsb
sti
lods
or
jae
mov
inc
mov
sets
mov
xchg
xchg
mov
stos
les
adc
ffreep
push
gs
add
fs
ljmp
fnstenv
shll
fldt
imul
stc
xor
fmull
stc
and
fnstsw
clc
push
data16
lret
outsl
test
pop
and
fwait
imul
hlt
cmp
sarb
ss
adc
jae
mov
addb
insl
lret
lahf
ss
cmc
fists
adc
mov
sbb
dec
lea
dec
push
clc
popa
mov
sti
cmp
imul
jmp
mov
lea
xchg
jle
add
inc
ljmp
frstor
sbb
jge
imul
pusha
scas
jmp
nop
addb
inc
pop
jb
xchg
aaa
fidivl
inc
lret
imul
jae
mov
jle
stos
pusha
adc
push
fstpl
mov
adc
or
test
out
mov
adc
bound
jecxz
lock
pop
test
sbb
gs
ja
xor
inc
lret
and
ljmp
xor
sbb
push
inc
mov
cmpsl
mov
shl
adc
push
ret
sub
ss
mov
aaa
push
insl
imul
adc
lods
cld
pop
fld
aam
fistpll
out
popa
addr16
test
je
mov
jae
and
add
jne
and
sti
in
xchg
fdivrp
test
cmp
pop
out
cmp
lret
aaa
and
or
cwtl
push
push
push
jge
pop
jns
inc
lea
jne
loope
inc
sub
imul
add
cmpsl
mov
jmp
cmp
add
xlat
jae
push
jno
mov
imul
push
adc
dec
lahf
ja
and
in
loop
roll
xchg
mov
cmp
dec
jp
push
inc
test
xorl
cmp
or
outsl
data16
inc
pusha
mov
fmuls
cmp
fdivrl
fwait
mov
mov
shrb
and
jl
roll
mov
xor
shll
adc
mov
adcb
jle
lds
bnd
jns
jnp
sbb
xor
sarl
mov
je
adc
hlt
sbb
push
loope
stos
push
ficompl
int
pop
push
aad
jl
test
fisubs
rcl
stos
test
cltd
mov
xor
xchg
test
pusha
es
movsl
aam
xchg
sbb
scas
push
inc
or
adc
push
mov
pushf
fwait
adc
cwtl
loope
xor
mov
aas
ljmp
lret
fidivs
adc
sbb
fistpl
xlat
mov
cmp
jne
loopne
addr16
mov
xor
mov
or
jge
insl
sbb
or
pop
push
cmp
cmc
rep
inc
cmp
scas
mov
push
pop
mul
out
mov
shr
xchg
sub
fiadds
stc
hlt
add
das
int3
cmp
xor
pop
stos
mov
inc
push
mov
sub
dec
dec
cli
les
mov
addr16
cmp
mov
mov
adc
ljmp
or
xchg
or
jne
push
addr16
faddl
cmpsl
loopne
pop
adc
repz
cmp
call
out
sbb
push
or
dec
incl
or
dec
into
dec
sbb
xchg
lcall
sub
rorb
or
and
cltd
and
es
mov
daa
arpl
leave
mov
dec
sbb
cmp
sahf
insb
sbb
jns
fstps
sbb
movsl
push
pop
dec
pop
rcl
cmp
popa
shl
outsb
loopne
mov
sub
sub
inc
cmc
out
scas
std
enter
lea
sbb
push
xchg
out
roll
es
jle
xor
rcll
sub
cmp
inc
shll
cmpsb
push
test
outsb
jbe
aaa
testb
add
imul
or
repnz
pop
rorl
pop
push
and
repnz
mov
or
sbbl
js
cmp
and
outsb
jg
out
mov
fs
jbe
mov
adc
sub
sahf
cmpsb
ja
incb
jo
loope
loopne
imul
xchg
in
push
enter
jbe
aam
cltd
hlt
xchg
cmp
mov
aad
jo
cltd
cmc
inc
pop
cmp
pop
test
xor
pop
and
jge
mov
push
pop
arpl
call
push
cltd
pop
adc
xor
cmc
into
push
inc
mov
lods
add
cltd
cmpsl
mov
mov
cld
stos
sbb
and
sbb
fimuls
push
in
add
mov
lock
inc
add
pop
or
ljmp
xchg
push
cwtl
lock
fcompl
dec
pop
pop
dec
test
repnz
jae
mov
andl
lret
dec
add
sbb
xchg
push
aad
std
mov
pop
sarb
mov
xor
mov
dec
mov
push
xchg
xlat
and
test
aad
std
add
out
cwtl
rorl
inc
mov
lea
inc
push
sbb
rcr
outsl
xlat
cmp
shrb
in
mov
xor
lea
add
cmpsb
adc
push
ret
clc
jno
pop
pushf
mov
jns
fmulp
int3
out
adc
bound
mov
sub
mov
jo
insl
imul
ds
jae
aam
leave
pop
mov
std
xor
psraw
scas
xor
pop
pop
scas
dec
jl
cmp
adc
push
repz
pop
jmp
cmp
pop
out
insb
fcom
out
repz
negl
push
sbb
mulb
adc
sbb
dec
xor
in
movsb
mov
push
jnp
mov
hlt
mov
push
int3
inc
icebp
shrl
push
and
cmp
inc
repnz
insb
fdivrp
dec
mov
add
repnz
xchg
aam
dec
sbb
jl
xchg
push
cwtl
inc
push
outsb
cli
pop
mov
xchg
pop
sbbl
imul
jmp
ljmp
repnz
sbb
aam
pop
lahf
add
inc
xor
sbb
pop
int3
inc
cmpsb
cmp
mov
out
push
sub
xor
mov
pop
imul
push
mov
icebp
movsl
mov
int
inc
dec
mov
dec
dec
test
movsb
sbb
sub
mov
push
lret
in
jo
nop
mulb
enter
int3
repnz
and
inc
test
clc
mov
jp
sbb
inc
pop
rorb
hlt
ds
or
je
jo
mov
adc
insb
decl
mov
imul
pop
jmp
test
sbb
mov
sarl
sub
inc
and
enter
jo
xchg
mov
xchg
and
and
jge
aad
andl
std
mov
xor
std
sub
xchg
add
mov
mov
cmc
push
movswl
adc
mov
test
adc
aas
add
adc
inc
ret
sub
or
dec
push
jecxz
jo
jne
outsb
neg
jne
movsb
adc
aas
jns
pop
test
scas
movsb
je
mov
mov
repz
xor
cs
push
daa
pop
cmp
add
cld
and
movsl
xchg
repnz
imul
and
pop
pop
add
mov
pushf
mov
xchg
leave
xor
jge
aad
push
icebp
xchg
xor
ret
inc
ljmp
jnp
jae
mov
jns
mov
adc
stos
lret
and
bnd
inc
imul
lods
popf
push
xor
rcrl
sti
enter
and
jo
cwtl
cli
test
add
adc
inc
js
ret
lock
push
fmuls
sbb
pop
sbb
jb
test
xchg
int3
mov
iret
lock
inc
add
cmp
in
sub
xor
jne
inc
sbb
pop
imul
out
or
cmp
mov
sti
xchg
lret
and
sub
pusha
push
sbb
push
xor
add
adc
mov
mov
xor
xor
dec
push
mov
xorl
mov
arpl
xchg
ljmp
sbbl
lret
jae
lock
xchg
les
mov
sar
imul
in
jl
push
or
data16
push
dec
sahf
loop
hlt
jb
nop
jp
jge
and
jb
inc
rclb
es
enter
shl
xchg
push
cli
cmc
sbb
add
out
in
xchg
fsubs
jae
leave
dec
cmp
push
push
sbb
fsubrl
hlt
adc
mov
and
notb
or
add
aas
pop
fnsave
fmulp
rcrb
mov
mov
push
aaa
lods
scas
xor
mov
or
add
loopne
rcl
cmp
in
stos
out
xchg
push
daa
ss
push
or
pop
jl
adc
or
sub
cs
lods
ljmp
jmp
stos
sti
mov
enter
mov
push
mov
inc
dec
push
mov
aam
fisttps
aad
cmc
jg
ds
sub
inc
mov
sbb
subl
or
repnz
int3
cmp
fiaddl
imul
sub
push
loop
jbe
test
and
dec
data16
mov
daa
add
fsubr
xchg
inc
dec
xor
jecxz
push
sbb
fnsave
das
adc
jae
adc
xchg
add
pop
and
pop
push
sahf
add
clc
cld
mov
or
cltd
cmpl
in
push
xchg
icebp
ljmp
add
into
jo
movl
xchg
mov
xor
movb
mov
lahf
stos
xchg
cli
mov
pop
add
fwait
outsl
lods
lds
stc
pop
cmp
cmpsl
lahf
mov
sbb
gs
sub
repnz
mov
idivl
inc
aas
inc
xchg
push
iret
mov
cwtl
sub
loopne
lahf
shlb
repz
push
dec
add
jl
cwtl
fsubs
aam
sbb
loopne
fadds
adc
mov
ljmp
in
mov
sub
cmc
mov
sbb
mov
ficoms
push
sub
xlat
lcall
xchg
sub
lock
and
push
into
fsubrs
xchg
xchg
in
fs
imul
xchg
loope
fnstsw
sbb
xor
xlat
shrl
mov
cmp
fbld
fs
lods
loope
mov
dec
xor
fstl
insl
out
mov
testl
jl
mov
add
hlt
inc
and
loopne
imul
popa
jl
push
mov
mov
rorb
dec
adc
pop
das
fwait
fs
or
aas
lret
xlat
mov
test
out
inc
cmp
mov
inc
scas
inc
sti
adc
out
sahf
adc
pop
or
mov
adc
popf
loopne
ret
add
inc
sub
bound
notl
sbb
cmpsl
add
jno
adc
mov
mov
roll
into
stos
jne,pt
adc
dec
movsl
push
or
out
jp
lods
rorb
push
adcl
sub
push
add
cltd
xor
icebp
sub
push
dec
sub
xor
nop
cmpsl
push
inc
arpl
xlat
push
jne
sahf
pop
cmpsl
imul
jns
push
sbb
enter
dec
pop
scas
popa
push
notl
outsl
or
movsb
adc
add
popa
lcall
cs
jmp
pushl
xchg
loope
dec
xchg
icebp
mov
lahf
sbb
adc
cmp
ret
aas
push
lods
inc
push
cmp
mov
out
xchg
pushl
mov
jle
pop
sbb
lods
pop
jle
pop
sub
imul
and
push
fstl
push
cwtl
xor
sbb
lds
or
lock
xlat
dec
lods
cmp
jae
popf
and
andl
test
insb
je
in
adc
add
daa
unpckhps
jo
cmp
jne
aas
mov
adc
add
enter
inc
cld
test
cmp
pop
out
jno
adc
mov
lea
ja
sahf
clc
es
inc
jne
fisttps
push
ficompl
sbb
xchg
cmp
adc
adc
jb
daa
popf
or
bound
and
subb
and
adc
pop
shr
sbb
mov
mov
pushf
mov
add
jmp
xchg
lret
push
call
mov
adc
addr16
inc
lds
jnp
loop
mov
sbb
xchg
jb
je
mov
popa
push
je
bound
das
lods
cli
jge
dec
xor
push
shrb
inc
cmpl
loop
lcall
fs
mov
xor
inc
sub
xor
cs
sbb
aad
not
imul
add
loopne
or
jne
and
and
dec
movsb
jmp
mov
sbb
repnz
notb
push
mov
fisttps
mov
or
cs
mov
dec
inc
nop
and
mov
icebp
sbb
xor
inc
int3
test
je
js
cs
stos
lahf
jns
jecxz
fstl
popa
arpl
fmull
jmp
sub
xor
sarl
movsb
inc
add
sbb
stc
ret
sbb
pushl
inc
dec
rorl
int3
cmp
flds
or
xchg
inc
lock
insb
fs
cmp
inc
bound
and
mov
scas
cmpsb
pop
jno
or
aam
ja
test
leave
mov
into
insb
mov
ret
sbb
adc
adc
pop
or
pop
cmpl
repnz
sti
mov
addl
mov
mov
cli
ss
ret
sarl
pop
mov
pop
test
pop
or
lea
popa
outsb
fbstp
decl
mov
popf
cli
in
cmp
jbe
stos
push
shl
or
iret
xor
pop
pop
negb
insb
add
push
aad
mov
push
mov
cmp
adc
scas
sub
mov
aam
dec
cld
pushf
pop
addr16
aad
in
pop
dec
xorl
lret
arpl
int3
negl
dec
mov
mov
add
add
cmp
fadd
nop
sbb
cmpsl
pop
pop
jns
addl
aad
xor
xchg
iret
loopne
in
sub
in
xchg
push
sbb
add
xchg
idivb
jle
add
inc
push
mov
xchg
mov
cmc
push
addl
add
push
or
mov
sbbl
push
inc
pop
test
sub
adc
vmovq
and
pop
stos
out
dec
and
xchg
sbb
pcmpeqd
mov
sti
cmc
hlt
shll
sbb
scas
adc
xchg
mov
sbb
arpl
clc
cltd
and
cmp
outsl
faddl
cmpsb
out
fiaddl
lds
popf
or
scas
sbb
pop
insb
adc
pushf
femms
dec
cmp
rcrb
xchg
sbb
jne
inc
shrb
jb
out
enter
jge
out
hlt
cmp
not
inc
xor
jo
cmpsl
cmp
xor
clc
adc
jnp
psubq
jbe
addr16
xchg
enter
dec
loopne
jno
sub
adc
enter
mov
lret
mov
mov
rorb
and
cmpb
xchg
xor
pop
das
shlb
test
in
test
pop
incl
xor
notl
mov
pushf
outsl
push
es
xor
pushl
incb
lds
lret
loopne
and
iret
adc
or
shll
mov
pop
and
loopne
xchg
mov
push
adc
fldcw
mov
movsl
in
sub
dec
data16
imul
mov
sbb
mov
adc
pop
cmp
jb
daa
push
inc
mov
inc
lea
push
test
fnstcw
data16
data16
or
cmc
push
cmpsb
or
pop
sub
sub
or
sub
push
nop
icebp
lods
push
mov
sub
mov
lret
stc
mov
std
sub
sbb
repz
jno
loopne
pop
rcrl
out
jge
dec
add
in
jge
pop
je
cltd
sbb
popa
adc
dec
add
sub
insl
adc
popa
jns
icebp
rcr
fisubs
lcall
inc
and
in
sbb
add
jp
mov
and
xor
inc
pushf
sbb
cmpsb
not
out
mov
xchg
stos
adc
mov
jbe
pop
sub
and
sbb
addr16
ds
pop
add
aaa
rclb
add
dec
push
outsl
push
xor
or
cmp
leave
mov
push
adc
xchg
add
popa
orl
mov
pusha
ffreep
pop
mov
sub
stos
push
mov
mov
mov
inc
jmp
out
pop
in
push
outsl
add
lods
add
jecxz
cmp
push
movsb
pop
and
cmpsb
fnsave
add
js
xchg
push
and
pop
lahf
push
or
out
addr16
pop
jbe
cmpsb
jns
jl
add
daa
outsb
iret
push
fidivrs
push
sbb
jg
jmp
xchg
mov
cmpl
fwait
cwtl
cmp
shrl
lock
cs
xor
aaa
mov
push
fwait
outsl
adc
imul
hlt
inc
ss
test
jmp
aaa
mov
leave
jno
pop
loopne
addl
or
mulb
cmpsl
push
cmp
jle
das
shll
and
mov
sti
cli
nop
in
xchg
shll
lds
inc
mov
sbb
xchg
in
frstpm(287
add
or
mov
or
adc
add
sub
outsb
bound
scas
add
mov
nop
loop
inc
or
gs
jne
leave
push
sub
cld
mov
and
imul
pusha
dec
ret
outsb
cs
and
popa
mov
xchg
std
sti
bound
and
dec
sti
test
pop
push
push
push
addr16
push
jp
jae
ljmp
mov
jmp
cmp
dec
sbb
stos
sbbl
push
pop
add
adc
mulb
inc
insb
push
adc
pop
push
jg
je
cmpl
repnz
cmp
fwait
mov
mov
iret
es
repz
or
das
outsb
inc
test
lock
xchg
pop
lods
xchg
rcr
or
shll
cltd
cli
daa
lods
stc
xchg
pop
sub
xchg
xchg
adc
loopne
leave
add
gs
pusha
xor
inc
cld
pop
ja
push
jns
in
sub
testl
pop
lcall
push
pop
jns
fdivrp
and
push
clc
clc
and
sahf
mov
pop
pop
jnp
sbb
jp
mov
sub
in
faddl
adc
adc
cmp
arpl
inc
adc
lahf
sbb
clc
pop
mov
iret
test
lock
fwait
out
dec
addr16
fwait
mov
xchg
adc
fiaddl
xchg
sub
test
shll
ret
push
jge
inc
cmp
inc
shrb
aas
fbstp
and
sub
xor
xchg
aas
jp
add
push
or
data16
fadd
lods
add
push
cltd
outsb
xor
cltd
enter
adc
xor
inc
or
test
xchg
dec
outsb
jae
lcall
inc
mov
icebp
or
dec
shrl
jnp
clc
inc
icebp
out
daa
sbb
rol
lret
sub
out
daa
mov
sbb
dec
mov
adc
push
inc
pop
mov
sub
test
out
imulb
mov
xchg
repz
aad
mov
cmp
test
xchg
fcmovb
arpl
jmp
or
mov
and
test
lock
push
pop
out
and
inc
jns
mov
lods
fsubs
lcall
inc
push
popa
mov
xchg
aas
mov
or
test
inc
dec
xor
insb
outsb
mov
cwtl
cmp
jp
ja
inc
xor
mov
ret
mov
aas
jge
mov
sahf
jl
mov
cmp
fldcw
jg
mov
cwtl
in
pop
jle
dec
into
sbb
movsl
loopne
iret
sbb
mov
push
out
and
div
and
jbe
xor
js
outsb
popf
add
call
sbb
ljmp
jle
sub
or
roll
mov
dec
into
sub
aas
sub
sbb
imul
sub
or
push
scas
jns
pop
out
sbb
movsb
xchg
cmc
or
jno
pop
insb
mov
adc
cmp
adc
mov
dec
mov
repz
inc
and
mov
mov
int3
lods
andl
test
stc
adc
sbb
dec
icebp
fs
test
push
orl
jbe
ja
jl
sub
pop
in
mov
add
push
adc
xchg
test
jbe
inc
xchg
push
jae
mov
mov
xchg
lret
scas
clc
jae
jb
xchg
inc
or
repz
repz
push
adc
add
inc
js
push
mov
mov
add
mov
add
lods
movsl
cld
imul
iret
inc
jl
add
mov
imul
pop
pop
jns
jne
lea
arpl
test
aas
sbb
mov
cmp
adc
nop
and
mov
push
push
xor
insl
mul
insb
dec
jb
pop
leave
addr16
add
push
mov
ds
icebp
in
mov
mov
pop
add
push
mov
cmp
xor
adc
pushf
sahf
push
gs
popf
add
int
dec
mov
xchg
js
lock
aas
repnz
jge
pusha
jae
iret
iret
and
lret
and
push
das
dec
ja
movsl
call
roll
imul
ljmp
es
lret
ret
adc
xchg
scas
push
aas
dec
mov
dec
pop
sbb
or
pop
push
mov
cmc
fstps
aas
mov
loopne
insb
stc
sbbb
fsubr
push
inc
cmpsl
jge
dec
fdivr
jno
cmp
xchg
pusha
sbb
mov
in
clc
cwtl
adc
sbb
dec
int
jbe
lods
ja
arpl
jg
xor
cmpsl
inc
test
xchg
jge
jb
or
popf
inc
dec
adc
movsl
cwtl
push
or
pop
jmp
cs
jne
ss
test
add
stos
movsl
adc
mov
push
loop
insb
jecxz
add
xchg
and
inc
stc
cmpsl
cmc
stc
mov
inc
movsl
pop
jns
addb
repnz
and
xlat
stc
clc
cmp
mov
aad
pop
aas
adc
test
mov
mov
sub
inc
lds
mov
arpl
pop
sti
dec
hlt
xor
adc
divl
push
xchg
or
inc
push
aas
into
mov
xchg
test
jbe
xchg
ss
leave
out
pop
jle
cmp
sbb
stos
ret
inc
addr16
cmpsl
loop
and
jl
enter
scas
inc
cmp
movsb
hlt
pop
in
adc
sarl
jne
xchg
push
and
repnz
nop
push
xchg
cwtl
les
repz
and
js
sarb
xor
inc
shlb
adc
jo
xor
les
mov
rcrl
xor
push
or
mov
cli
icebp
cmc
xchg
jnp
xchg
repnz
or
movsb
cmp
jmp
mov
rcrl
aas
jns
fnstsw
sub
push
lds
loope
cmp
out
cli
cs
or
or
cmc
mov
sbb
fildll
adc
push
jae
test
xchg
or
cltd
test
into
mov
xor
out
loope
in
pushf
lods
xor
test
data16
lahf
jl
pop
lret
filds
sbb
imul
insl
lds
dec
dec
mov
std
mov
nop
jle
xor
push
jae
aas
stc
aad
punpckhdq
filds
pusha
cli
jbe
sbb
rorl
ja
test
add
addr16
and
dec
scas
fsts
fistl
adc
movsl
adc
adc
push
jbe
and
mov
pop
mov
je
faddl
lea
adc
xchg
jnp
cmc
out
shll
dec
jmp
jnp
push
sub
inc
into
adc
cltd
adc
jne
push
mov
xchg
cmp
mov
jp
daa
xor
add
orb
mov
xlat
stos
jnp
or
sahf
jp
add
cmpsb
or
sbb
jb
ret
pop
sbb
mov
push
enter
xchg
sbb
and
jge
jp
pop
add
jge
test
stc
inc
cmpl
mov
mov
inc
mov
xor
lods
cmp
daa
add
dec
adc
js
pop
movsb
mov
test
and
out
mov
lea
mov
lcall
inc
mov
mov
and
fs
mov
ss
out
mov
push
mov
jl
push
clc
mov
mov
bound
pop
xlat
pop
fistpl
aas
scas
jl
adc
rep
cltd
arpl
add
adc
pop
and
xchg
sbb
hlt
cli
ljmp
push
into
xor
push
shlb
or
lock
cmp
mov
lret
and
sub
data16
ds
rcl
lods
sub
das
lcall
sarb
inc
pop
outsb
imul
cwtl
das
loop
cmpsl
int3
mov
icebp
xchg
add
clc
sbb
in
push
psllq
push
push
in
dec
outsb
popf
push
fldcw
imul
sahf
popa
int3
cmp
mov
add
mov
or
inc
mov
xlat
mov
roll
or
push
adc
jmp
loop
jo
test
cmp
push
addr16
mov
popf
rcll
ficoms
mov
lret
and
scas
fbld
or
add
test
pop
cwtl
xchg
aas
test
xchg
mov
mov
adc
adc
into
arpl
or
inc
cmp
sbb
jnp
je
nop
addr16
lods
jb
ret
test
out
sahf
ja
arpl
fnstsw
push
lcall
cmp
arpl
adc
push
repz
push
mov
fwait
mov
dec
pop
or
bnd
push
rcrb
add
lahf
movsl
cmp
or
jbe
dec
cmp
pop
rcrl
inc
outsb
or
jmp
dec
into
rcl
jp
sbb
cld
leave
ret
inc
dec
ret
jg
xchg
lea
das
arpl
sti
mov
cwtl
sub
out
out
xor
xchg
fwait
add
jae
mov
dec
and
push
add
in
cld
mov
lods
jnp
call
repnz
hlt
mov
adc
push
les
pop
add
cld
int3
loope
xchg
fimull
sahf
and
sbb
lcall
and
pop
push
insl
push
pop
repnz
in
pop
mov
enter
jne
addr16
pop
es
popf
ret
outsl
jl
xchg
jae
push
sub
popa
test
inc
ret
sub
stc
or
das
popa
jg
out
and
dec
scas
fimuls
mov
push
adc
push
and
mov
push
sub
sbb
push
sbb
ret
adc
push
cld
pusha
pop
scas
mov
or
stos
mov
jns
dec
out
adcl
ss
mov
divb
and
pop
stos
jae
xchg
mov
roll
adc
pop
xchg
pusha
push
xor
or
and
inc
fs
int3
cmp
push
lds
push
ljmp
aaa
mov
push
movsb
xchg
and
push
es
xor
dec
adc
dec
xor
icebp
out
add
arpl
pop
fxtract
sub
jecxz
dec
insl
sub
insb
lock
jg
lods
xchg
lock
jno
lret
jl
jle
cmp
sbb
sbb
sub
imul
push
mov
lods
and
scas
mov
lret
popf
std
push
lret
xchg
push
fsts
add
adcl
jbe
je
adc
ficoms
out
std
mov
jmp
scas
sub
fs
rorb
popf
pop
xor
shlb
dec
popa
adc
mov
and
js
cmpsb
test
dec
jo
sbbb
cmp
fcoms
sub
inc
push
push
or
adc
push
fisubrs
rolb
cs
dec
cmp
pop
das
sub
lods
int
cld
enter
adc
mov
pop
inc
es
sub
pop
xor
mov
jmp
ds
inc
mov
aad
mov
add
aas
jecxz
scas
ficompl
rorb
push
xchg
mov
xor
xorl
jns
sub
lods
and
repz
sbb
cltd
push
test
std
and
addr16
xor
sahf
fs
sub
xchg
xchg
sub
enter
lods
div
mov
call
add
sbbw
add
lea
xchg
mov
push
xchg
out
cmp
scas
mov
subl
lock
lahf
test
fcoms
imul
add
push
pusha
jmp
fdivrp
ljmp
xor
push
jle
ret
pop
nop
mov
push
fchs
mov
lods
mov
mov
push
hlt
cld
and
and
xchg
cmpsb
mov
cmc
divb
xchg
ja
int
rorl
fstpl
into
ljmp
ds
push
cli
jl
xchg
adc
mov
dec
sti
imul
mov
push
add
xor
enter
hlt
cmpsl
je
mov
lods
test
sub
insb
popf
mov
sbb
cmc
or
push
push
inc
xchg
in
xorl
xchg
shrb
mov
jl
arpl
dec
dec
aas
orb
push
or
faddl
adc
test
inc
cltd
pop
or
jp
add
pop
clc
addr16
ja
aas
es
push
dec
mov
cltd
pop
mov
push
push
cmpl
xor
adc
imul
push
popf
in
sbb
pusha
rol
test
out
int
mov
dec
movsb
fs
test
hlt
sub
xchg
mov
cmp
jg
mov
cmp
out
xor
addb
sub
pop
xor
dec
xchg
fsubr
insl
xor
ret
dec
cmp
and
add
clc
add
icebp
aam
test
scas
fisubl
es
scas
lock
stos
in
je
add
jle
in
and
jns
adc
xor
dec
cmc
xchg
je
cmc
jecxz
in
lahf
xchg
adc
sti
mov
inc
loope
pushf
xor
or
jge
fs
pop
xchg
ud2
je
and
and
sbb
addl
adcl
pop
sub
and
mov
sahf
push
imul
stos
fists
sbb
leave
movsb
add
gs
sub
ja
mov
out
xchg
xchg
jne
das
imul
sbb
xor
push
mov
and
add
fildl
stos
fmul
rcll
add
bound
xchg
sbbb
ljmp
out
ljmp
cmpsl
adc
or
xor
cld
shrb
jns
shl
xor
mov
inc
inc
movsb
add
sub
mov
and
mov
clc
imul
mov
call
cld
inc
iret
test
movsl
and
pop
pop
add
push
fs
pop
pop
xchg
mov
jne
mov
pop
push
cmp
out
cmpsb
mov
mov
cmp
cwtl
dec
out
mov
adc
lahf
pop
cmp
sbb
cltd
iret
jp
enter
shll
xor
lds
test
call
cmc
fsub
push
sub
add
das
xor
cmp
cwtl
jmp
adc
std
int
aas
xor
test
and
jl
xchg
stos
aaa
stos
fmuls
cmp
ja
xchg
faddp
frstor
mov
dec
cs
pop
enter
cmpsl
adc
dec
jae
loop
fdiv
xor
sar
pusha
das
sbb
jl
cwtl
cmp
push
movb
out
dec
inc
dec
hlt
inc
xor
xchg
vmovaps
xlat
enter
xchg
adc
inc
bound
cmp
and
scas
shll
fildll
call
sti
jecxz
jae
test
push
inc
loope
adc
dec
fmull
movsb
inc
or
int3
das
cli
leave
mov
inc
in
pop
xor
negb
lea
paddsw
or
inc
lock
jecxz
ret
add
daa
js
je
sub
mov
push
inc
dec
mov
sub
repnz
inc
xchg
push
loopne
repz
daa
cmc
cmpsl
leave
and
cmp
inc
aad
and
ja
pop
dec
or
cmp
push
or
lock
xor
jmp
pop
leave
lret
lret
jno
mov
push
test
mov
div
jmp
jp
jbe
cmc
cld
lcall
jb
or
xchg
cmc
cld
sbb
sub
cmc
push
aaa
dec
cli
pop
lret
mov
add
or
loop
xchg
push
mov
mov
std
mov
sbb
test
shr
rcrl
pop
or
stc
gs
push
push
xchg
and
xchg
mov
test
jns
in
ror
xor
stos
or
mov
adc
test
std
loop
inc
push
fld1
dec
jecxz
jl
pop
inc
add
sub
imul
cli
ja
add
inc
leave
cld
inc
add
or
mov
cmc
push
imul
cmp
push
insb
sub
mov
sub
addr16
outsl
add
sub
sbb
add
shl
ficomps
inc
adc
pushf
je
cmp
push
outsl
xchg
fdivl
stos
sahf
or
fldcw
scas
mov
jl
cmpb
in
dec
xor
mov
sbb
pop
or
jmp
push
cwtl
lea
clc
aaa
lcall
dec
or
pop
call
xor
mov
push
pop
xor
inc
shrb
scas
and
and
bound
test
outsl
mul
lahf
ja
mov
and
lds
das
daa
rcrb
mov
jae
mov
sub
or
fs
jno
adc
add
bound
inc
fbld
mov
pop
dec
dec
add
jg
jmp
cld
xchg
xchg
jo
add
mov
lret
push
div
mov
push
mov
inc
int
mov
mov
or
xor
clc
sbb
sub
inc
sub
imul
hlt
sub
ss
xor
mov
sub
jnp
jmp
push
xor
das
push
cmpsb
movb
pop
lret
shrl
in
dec
les
ficomps
lret
inc
dec
pop
repnz
shl
sbb
icebp
cli
mov
xor
mov
test
mov
push
cmp
negb
stos
mov
mov
xor
add
in
add
stc
aaa
aam
xor
inc
ljmp
mov
sub
pop
add
sub
stos
dec
pop
lods
or
stos
mov
out
pop
lahf
and
dec
sbb
xchg
rcrb
and
movsb
push
xchg
push
jmp
and
out
xchg
jne
sub
notb
jg
push
fcmove
cltd
call
dec
out
mov
stos
ficompl
xor
sahf
pop
mov
and
adc
cmp
loop
pusha
xor
icebp
jle
ljmp
rorl
stc
cli
movsb
je
cltd
inc
aad
clc
cmp
lods
push
das
bound
popf
push
push
das
cld
rorl
xchg
aam
pop
loop
dec
popa
push
insl
pop
lods
pop
daa
scas
test
movlhps
stos
repz
mov
sbb
enter
xlat
outsl
mov
dec
sub
sub
dec
pop
and
shlb
sbb
jmp
bound
dec
bound
std
push
shrb
mov
mov
int3
or
cmpsl
lods
shl
hlt
cmp
das
das
fldt
loop
sbb
mov
xor
jno
mov
call
imul
ss
sub
mov
pop
mov
test
loope
in
idivl
inc
mov
jecxz
scas
pop
pop
mov
andb
out
xlat
push
dec
adc
hlt
sbb
jbe
subb
fwait
add
xor
int
sti
popa
dec
loop
adc
cmp
jne
jmp
dec
mov
outsl
test
jae
sbb
mov
mov
into
gs
ja
out
jne
iret
xor
push
dec
gs
hlt
daa
jl
inc
adc
mov
lcall
jge
mov
loop
std
xchg
notb
sbb
loop
jge
mov
iret
ret
cmp
jl
jecxz
mov
jnp
lea
and
dec
pop
std
dec
imul
sub
adc
lock
xchg
ds
mov
mov
push
ja
lret
xor
push
mov
sbb
push
xchg
fstps
aam
xor
mov
test
cmc
lahf
js
out
mov
hlt
dec
push
lds
aaa
cmp
les
mov
add
call
and
xchg
jnp
pop
cmpsb
mov
mov
stc
jmp
stos
daa
pop
mov
push
dec
xchg
xor
ja
adc
rclb
jl
pop
dec
in
mov
adc
les
ljmp
out
add
push
fcoml
push
pop
fdivrp
arpl
lods
sbb
mov
mov
nop
push
cmc
jecxz
lret
jbe
inc
dec
jecxz
shlb
mov
jns
and
mov
mov
pop
std
sarb
fsubl
int
cmp
add
mov
inc
or
xor
pop
rolb
xchg
cmp
jns
jg
imul
insl
iret
enter
daa
cwtl
adc
jb
add
mov
out
push
cmp
test
pop
fdivl
or
sub
sarl
inc
dec
mov
xor
sub
outsb
sbb
ret
negl
js
dec
mov
sub
or
mov
std
scas
jne
into
leave
insb
add
mov
mov
mov
es
mov
scas
out
scas
addr16
mov
icebp
mov
iret
xchg
loope
out
flds
mov
sub
lods
pop
jns
sbb
dec
shl
mov
add
popf
and
pop
bound
pop
adc
mov
ja
and
rcrl
xchg
push
flds
xlat
shll
inc
scas
loope
dec
xlat
sub
inc
mov
jl
or
jge
jle
xchg
mov
outsb
inc
or
xchg
xor
or
inc
into
dec
je
push
test
ljmp
mov
jne
xchg
ljmp
fwait
mov
stc
scas
lds
into
stc
ljmp
jne
push
pusha
in
arpl
lcall
cmpsl
adc
aaa
jae
loop
sub
adc
sbb
mov
lahf
sub
mov
pop
cmpl
inc
jmp
mov
outsb
sbb
mov
push
cmp
xor
and
xor
jbe
cld
out
pop
mov
adc
les
iret
xchg
movsbl
sahf
adc
test
mov
pop
cmc
and
insb
iret
pop
xorl
cmp
jne
and
cld
push
and
nop
imul
sbb
jecxz
ljmp
jg
nop
adcb
fldl
push
inc
push
lahf
in
stc
in
mov
xchg
or
xchg
sub
pop
push
stc
inc
xor
lahf
inc
cs
gs
mov
daa
ds
xor
fdivl
pop
dec
or
ljmp
inc
jns
cmp
cwtl
out
movsb
bound
or
dec
jle
add
mov
jae
push
xor
loop
push
pop
adc
notl
dec
add
mov
test
imul
pop
push
out
mov
std
and
cmp
mov
fidivrs
mov
cmp
outsb
mov
inc
pop
gs
mov
adcb
ret
jns
scas
cmp
stc
arpl
dec
std
into
xchg
add
cmp
test
aad
ljmp
cmpsb
stos
push
jg
mov
lock
inc
lcall
outsb
inc
mov
stc
push
and
aad
adcl
inc
fldl
icebp
stos
out
pcmpeqd
mov
shrb
fisttps
lock
and
cmpsb
mov
xchg
mov
shll
test
add
movsl
js,pn
inc
in
sub
xchg
rcll
mov
cmpsl
push
mov
stos
nop
daa
enter
add
scas
shrl
orb
aaa
add
sar
sahf
adc
shlb
pop
arpl
dec
mov
stc
mov
pop
pop
push
dec
sahf
lahf
rol
test
inc
rolb
dec
cmpsl
push
sti
mov
js
inc
cmpsl
in
jp
lock
ret
or
pushf
scas
insl
adc
cld
shl
mov
xor
jns
mov
mov
out
jle
and
stc
fwait
inc
andl
mov
bound
inc
rolb
or
xor
and
sbbb
jg
jmp
cmc
sbb
add
or
and
movsl
aad
pop
repnz
mov
imul
inc
insl
scas
pop
jne
sbb
push
mov
shrb
lods
push
pop
iret
add
dec
add
sub
inc
xor
and
inc
fisttpll
cs
out
ds
fisubs
push
sahf
popa
es
pinsrw
xchg
lret
jp
mov
loopne
cli
sub
clc
jp
scas
cmp
inc
push
inc
jo
jmp
xchg
shlb
jns
repz
push
cmp
add
xor
out
mov
push
or
daa
lret
std
mov
ja
mov
sub
inc
arpl
mov
xchg
das
lret
jl
add
xchg
inc
cmp
push
aaa
or
mov
mov
xor
int
cmpb
das
add
test
jnp
out
push
dec
mov
xor
xchg
aam
daa
or
sub
mov
in
and
mov
pusha
pop
pop
mov
or
push
inc
inc
mov
inc
dec
jecxz
bound
mov
popl
popf
cmc
push
addb
jge
fdivs
push
sarl
mov
clc
pop
xchg
lss
mov
jp
mov
mov
cmp
ds
mov
mov
shll
push
xchg
mov
int
std
cmp
xchg
jnp
or
add
pop
sub
cmp
int3
mov
dec
sbb
pop
mov
scas
mov
dec
or
pop
or
push
jo
stos
xchg
pop
inc
loopne
rcll
fdivl
push
lahf
adcl
fsubs
pop
mov
ror
or
jbe
push
adc
mov
pop
xor
lret
test
and
cmc
fs
sub
cmpsb
loope
xchg
cmp
imul
pop
imul
jo
push
pop
push
mov
jl
add
popa
xchg
insl
and
mov
mov
cmp
int3
idivl
stos
loop
in
cmp
hlt
das
lods
inc
fsubrs
ja
jle
ret
inc
pop
cmp
xchg
test
mov
insl
dec
mov
push
mov
adc
in
arpl
sarl
arpl
or
lcall
pop
dec
pusha
xlat
cmpsl
sub
outsl
cli
outsb
jbe
das
out
and
ss
fwait
pop
sahf
sub
fbld
aad
xchg
test
jecxz
gs
push
lods
mov
xor
out
aad
in
mulb
mov
loope
int3
into
pop
ret
push
andl
sub
jb
vpsrad
mov
xchg
push
adc
mov
decl
mov
stos
sub
pusha
cltd
or
inc
test
dec
sbb
repz
decb
push
fldl
push
mov
leave
les
cmp
pop
mov
mov
mov
dec
mov
rolb
stos
pop
xor
xchg
lea
xor
add
mov
in
jno
jns
xchg
xor
xlat
testl
fcmovnu
sar
sub
inc
mov
jns
popf
cwtl
jb
push
and
xor
jnp
mov
pop
inc
add
sub
mov
mov
mov
test
fcmovnb
jecxz
jl
scas
mov
adc
xchg
data16
xchg
sub
mov
pushf
push
push
cmp
in
in
cltd
xchg
das
test
jae
mov
mov
andb
dec
loope
pusha
sub
add
push
adc
sbb
loope
inc
jmp
ret
mov
stos
mov
fcoml
xchg
sub
and
data16
pop
jae
or
js
out
sbb
cmp
ss
fxch
mov
or
std
mov
int
pop
fnstcw
stc
test
repnz
ljmp
sbb
mov
mov
xchg
and
shl
jo
stos
outsl
xchg
adc
aas
pushf
insb
ret
repnz
lret
jecxz
ss
outsl
mov
add
mov
mov
loopne
lea
std
addb
mov
adc
popa
xchg
ret
cmp
aad
push
mov
jo
ss
push
lds
sahf
cmp
jo
fwait
testl
mov
aam
aas
shlb
jg
loopne
andl
sub
push
cmp
lcall
jmp
cltd
inc
mov
push
leave
adc
mov
stc
xchg
add
mov
pop
repnz
xor
sub
aam
add
push
repz
stc
xchg
call
dec
lea
outsl
sbb
enter
jbe
fs
fcmovnu
xor
dec
data16
and
xor
cli
aad
mov
test
adc
lods
in
push
pop
aaa
out
mov
inc
js
or
out
int
cmp
mov
sbb
xor
fsts
dec
lods
into
movsb
addr16
add
ds
addr16
in
xchg
or
ljmp
testl
mov
cmpsb
pop
or
sub
mov
cli
dec
mov
xchg
add
jbe
rorb
xchg
divl
push
gs
mov
clc
jno
daa
sbb
clc
add
stos
imul
repz
inc
adc
out
aaa
iret
hlt
call
push
inc
dec
sub
scas
loope
sub
adc
dec
pop
push
loopne
ss
test
popa
mov
or
lds
popa
mov
jno
jne
shll
sub
insb
outsl
jae
and
aam
scas
dec
and
daa
cmp
fisubrs
repnz
and
mov
adc
pop
jle
fadds
repz
pop
ss
sbb
test
test
cmp
stos
sub
xor
jmp
lods
into
out
imul
xor
pop
imul
shlb
jnp
stos
add
fs
stos
iret
aad
or
in
sub
sbb
jnp
push
pop
sub
sub
pop
sub
add
frstor
lods
inc
dec
add
ja
mov
sub
pop
dec
xchg
jne
and
addr16
pop
mov
mov
clc
mov
pop
mov
pushf
jg
push
push
sti
xorl
mul
mov
test
mov
ja
mov
sub
adc
not
pop
pop
dec
imul
popf
lock
out
sbb
cmpsl
push
mov
adc
or
fidivl
ret
sub
dec
out
mov
aaa
xlat
mov
jae
in
sarl
add
mov
ror
fisubs
jge
dec
scas
cmp
jle
loop
inc
dec
jmp
inc
xor
fwait
jp
xchg
je
push
out
fs
xchg
fwait
cmp
mov
sbb
es
mov
and
pop
fimull
out
shl
in
gs
cmpsb
cmpsb
cmpl
mov
repz
sbb
loop
cmp
mov
add
sub
add
aaa
dec
ljmp
dec
mov
cmpsb
leave
mov
xchg
sbb
call
gs
dec
out
inc
push
scas
daa
mov
jmp
sbb
and
dec
dec
jne
stc
mov
cmpsl
test
push
sub
stos
pop
in
mov
push
icebp
cmc
ror
mov
fadd
mov
mov
dec
fisubrs
adcl
dec
adc
jnp
xor
loop
into
lret
test
and
or
mov
cmp
sbb
mov
push
mov
add
pusha
insl
in
stos
fs
mov
and
jge
pusha
in
leave
or
lods
aad
push
leave
or
mov
jg
and
call
pop
push
loop
call
mov
jp
nop
arpl
stc
dec
cmp
movsl
mov
rcrl
xchg
pop
pop
cld
inc
movzbl
sti
inc
stos
repnz
fsub
es
outsl
push
push
xor
xchg
stc
inc
xor
dec
stos
jl
and
dec
or
or
shr
adc
inc
mov
mov
dec
fistl
pushf
add
sub
and
jbe
aad
adcb
mov
adc
scas
cmp
addl
jno
sub
iret
xchg
scas
add
add
icebp
mov
fisttpll
mov
shl
push
out
push
fistl
mov
pop
int
cmpsl
mov
mov
sub
js
lret
xor
mov
or
clc
cmp
stos
and
fistpll
sbb
into
fcoml
ficompl
icebp
mov
push
xor
xchg
dec
xor
scas
push
cs
dec
stc
xchg
xchg
push
lret
jno
dec
les
imul
cmp
add
xor
inc
sbb
adc
xchg
xchg
fstps
daa
jmp
out
or
sbb
test
xchg
stc
push
fdivr
out
mov
xor
add
sbb
cmp
movsb
push
in
jbe
imul
pop
das
inc
mov
stos
dec
jp
call
pop
mov
inc
or
test
insl
sbb
inc
sarl
sub
shll
dec
mov
cmp
insb
insb
loope
pop
scas
mov
jmp
jns
jl
and
test
outsl
inc
dec
out
leave
stc
jae
push
sbb
leave
mov
movsb
int3
in
mov
jg
rcr
xor
test
mov
dec
lret
aaa
les
cmp
lcall
mov
cmp
cmp
or
or
sub
mov
jns
repnz
in
cmp
orl
shll
xorb
std
stos
test
sub
mov
pop
sbb
adc
adc
jnp
xor
xor
add
sbb
push
and
or
push
movsb
and
mov
in
jno
jo
push
sbb
jle
pusha
and
inc
icebp
or
or
xor
repz
repnz
inc
cmp
push
lret
negl
mov
xchg
nop
mov
inc
test
xchg
mov
fdivl
xor
ficomps
sbbl
notb
lahf
mov
sbb
mov
outsl
inc
mov
pop
les
stos
add
pushf
xchg
cmp
sub
push
push
push
sub
xor
mov
adc
dec
push
aas
push
jno
stc
xor
jmp
or
loope
jno
fistpll
jp
xor
cwtl
inc
js
add
loopne
aad
lea
imul
dec
aad
stos
xor
loop
stos
cld
mov
cli
pop
shll
dec
xlat
test
jo
scas
inc
ljmp
divl
cmp
adc
add
mov
adc
ja
decl
ret
cmp
roll
pop
clc
jae
lock
lahf
pop
inc
cmpb
stos
popf
cltd
pop
stos
dec
inc
sub
lods
stos
dec
mov
repnz
aad
pushf
adc
and
sub
xor
ja
push
mov
stos
fdivp
outsl
out
xor
dec
mov
mov
outsb
mov
xchg
pop
fcomip
push
pop
inc
lock
jno
cmp
xchg
cmc
repnz
or
gs
dec
jl
enter
movsl
imul
adc
dec
or
mov
mov
mov
bound
mov
or
sbb
ss
es
xor
in
sahf
sti
pop
divl
inc
aas
xor
inc
fdivl
pop
fisubl
aam
std
xchg
jnp
lods
dec
pop
cli
pop
jb
push
mov
rep
loop
in
clc
iret
ret
icebp
inc
add
add
notl
push
js
push
jl
ret
iret
mov
adc
scas
add
leave
and
dec
and
enter
loopne
add
lods
cmpb
push
jne
and
xlat
iret
inc
mov
shl
mov
addl
mov
cmp
fcompl
stos
jo
out
mov
data16
lahf
mov
push
test
adc
scas
jecxz
nop
sub
pop
jne
adc
cmpsl
push
adc
enter
mov
jbe
cmp
inc
loop
sarl
push
ljmp
loop
pop
jg
xlat
jg
out
filds
push
test
jl
pushf
movsb
call
daa
jae
dec
imul
mov
and
fs
loop
out
scas
daa
cmp
adc
es
fistl
mov
pop
subl
cmp
std
cwtl
cmp
sub
lods
jl
movsb
cmp
sbbl
mov
lret
ljmp
xchg
repz
and
pusha
pushf
call
mov
jb
xlat
bound
jb
add
jno
push
mov
repz
mov
bound
xchg
loope
data16
shl
in
test
ds
push
and
dec
push
xchg
lcall
push
ror
push
and
xchg
enter
adc
mov
cmp
shl
pop
pop
jnp
push
out
loope
push
movsb
in
sbb
jnp
not
pop
xorl
scas
lcall
sub
jp
cwtl
inc
mov
es
and
js
add
movsl
xchg
shll
sahf
inc
sub
sbb
sub
cmp
adc
or
xchg
les
sarb
aas
adc
pop
addb
sub
pop
xchg
movsb
or
push
sub
xchg
les
aaa
lods
dec
lret
ss
int3
or
mov
mov
cmp
sahf
or
sub
loopne
cmp
mov
pusha
fs
fcompl
jmp
fstps
sar
jge
sbb
repnz
stc
jl
jne
push
jle
and
insb
xor
shrb
jbe
adc
loopne
divl
movsb
xlat
int
sub
arpl
ret
jmp
add
adc
bound
push
rorb
pop
int
enter
aaa
jle
sub
push
adc
push
mov
cld
mov
mov
add
cli
leave
inc
outsb
lock
jns
cmp
sti
aam
adc
mov
mov
cltd
add
pushf
lock
mov
pop
repnz
js
or
mov
enter
inc
adc
adc
pop
or
sarb
add
ljmp
push
test
jg
popl
mov
pusha
dec
ja
xor
cmp
jno
lret
xchg
into
adc
stos
scas
pop
push
movsb
push
inc
shrl
add
aam
jae
jne
jno
ffree
jle
sub
rorb
or
bound
lea
lods
mov
mov
lcall
jo
cmp
fldcw
js
add
fld
int3
bound
adc
mov
mov
jmp
ds
mov
subl
mov
not
mov
adc
sarl
mov
icebp
xor
frstor
mov
fcmovb
sub
xchg
inc
pop
adc
fimuls
xor
sub
stos
imul
ljmp
and
xchg
mov
xchg
xor
rorb
dec
pusha
ljmp
popf
shll
outsb
xchg
popf
inc
add
adc
mov
mov
mov
cmpsl
and
sub
push
ficoml
cmp
out
sub
inc
cmp
std
popf
in
xchg
lods
mov
shlb
sbb
mov
add
jb
adc
mov
inc
lods
fwait
mov
cmpsb
aas
mov
int3
mov
shlb
xchg
dec
mov
lds
jb
or
push
mov
and
cmp
cld
inc
out
mov
mov
xorb
push
cmp
loopne
int3
insb
or
adc
sbb
pop
in
fwait
inc
bound
mov
icebp
mov
lods
mov
dec
sub
pushf
fs
pop
into
inc
xchg
aam
out
popa
jbe
push
mov
xor
adc
sub
and
sub
pop
xchg
inc
pop
cmc
mov
stos
ret
pusha
and
or
repz
xor
stos
sbbl
push
mov
in
shrl
int3
push
imul
divl
cmpsl
cmp
enter
xorl
movsl
mov
jl
stos
cmpl
add
inc
and
in
dec
jge
fildl
jo,pn
or
push
and
out
ds
jnp
dec
mov
push
pop
mov
mov
insl
mov
and
out
dec
mov
mov
insb
lock
scas
lock
sub
stos
and
jge
push
jnp
and
pop
outsb
repnz
dec
push
sub
add
xchg
inc
add
jo
clc
mov
mov
ja
fsub
loopne
leave
dec
sbb
pop
popa
or
dec
movsb
je
pop
push
xor
je
stos
pop
iret
cltd
jae
adc
pop
insb
pop
jno
js
mov
push
xor
xor
in
lds
mov
dec
scas
test
std
sbb
jns
push
lods
shlb
movl
pop
lret
ss
xchg
jns
sub
roll
sub
sub
outsb
or
cli
mov
in
into
scas
dec
ss
icebp
scas
cmpsl
int3
fwait
cli
loopne
jmp
jmp
or
and
loop
mov
xchg
mov
lods
dec
cmpsb
jecxz
outsb
test
or
fwait
xchg
movsl
mov
imul
ret
inc
and
int
lcall
out
xor
das
iret
cmc
insb
mov
xor
dec
sbb
adc
jmp
sub
or
jnp
aam
push
add
add
jle
xor
roll
or
jbe
out
icebp
sbb
add
and
sub
testb
jne
in
rcr
inc
or
aaa
inc
pop
movsb
sub
xor
adc
fadds
xor
aas
leave
dec
push
jg
mov
jb
shlb
lea
pop
mov
sub
jno
or
scas
rcrl
mov
inc
sbb
push
xor
pop
sahf
dec
xchg
jbe
pop
xor
ret
fwait
pop
enter
insb
pop
add
enter
repz
xor
mov
dec
jecxz
add
ljmp
jg
int
fsubl
or
dec
xor
adc
inc
pop
stos
push
fdivrl
pop
mov
ret
js
cmp
mov
outsl
fisubrl
sub
lret
push
xchg
in
xchg
insb
or
pop
sub
fsubs
xchg
push
add
jecxz
mov
jp
repnz
clc
cmpsl
ds
incb
notl
test
fsubrp
mov
pop
sub
push
ss
aad
mov
pusha
sub
mov
mov
adc
pop
nop
and
sbb
push
pop
jge
stos
jecxz
dec
lds
mov
or
adc
sub
xchg
xchg
adc
fisttpll
fbld
mov
pop
or
cltd
mov
bound
xor
repz
mov
adc
push
xor
xor
mov
or
mov
add
lods
sbb
sahf
les
jb
dec
mov
int3
inc
jne
ficompl
inc
push
adc
and
sbb
cmc
mov
or
pop
fidivrl
xchg
sbb
cmp
arpl
fstpt
rolb
and
dec
cmc
mov
mov
mov
data16
popf
rorb
mov
jmp
lret
shrb
mov
mov
inc
pop
adc
or
adc
jl
subl
inc
mov
or
leave
dec
call
ss
adcb
inc
mov
inc
fdivrl
test
mov
sub
or
stos
gs
push
lcall
in
push
sysret
or
or
js
mov
xchg
sub
out
out
sti
or
mov
mov
push
pop
sbb
xor
push
inc
fwait
lea
sub
jmp
stos
popf
or
scas
pop
test
fbld
xchg
or
jne
fs
fnstcw
outsb
test
aaa
push
popa
addr16
cmpsl
inc
sbb
loopne
jno
inc
sbb
stos
mov
push
cmc
adc
jp
and
icebp
jge
gs
negb
cli
daa
mov
shl
cmp
jnp
das
sbb
push
pop
mov
clc
insl
outsb
mov
insl
out
repz
dec
stos
lret
frstor
shlw
jmp
scas
cmp
stos
push
call
cmp
lds
mov
mov
orl
pop
push
sti
or
pop
stos
push
xchg
dec
mov
movb
sbb
or
cmpl
and
xchg
pop
outsb
and
cwtl
push
dec
ljmp
pop
mov
adc
sbb
push
jb
andl
in
sbb
jne
jne
sub
sti
insl
cwtl
mov
les
add
jge
in
xchg
lods
sti
xchg
enter
mov
clc
mov
inc
mov
mov
mov
mov
pop
jae
sbb
mov
loopne
addr16
rorb
jmp
or
jl
add
sbb
mov
mov
les
je
adc
inc
fidivs
mov
dec
inc
adc
repz
xor
outsb
and
mov
dec
push
stc
pop
pushf
xchg
jnp
rorb
sbb
out
fs
loope
xchg
adc
fcompl
inc
inc
test
loope
fsubs
cmp
inc
dec
lea
add
cmp
enter
and
xor
mov
inc
iret
sbb
xor
pushf
pop
sbb
adc
fimuls
jb
jecxz
aas
nop
popa
lcall
add
enter
stc
sub
fildl
je
out
arpl
loope
fldenv
xchg
mov
aas
push
add
sarl
jno
js
cmpsl
mov
dec
pop
lret
cwtl
add
dec
or
lock
mov
aam
or
mov
ret
jmp
inc
ss
fyl2x
fucomp
jb
je
push
mov
mov
lret
std
fmul
lret
into
lock
adc
push
cmpsl
pop
pop
mov
cmp
stc
leave
fldl
in
sbb
in
adc
push
lea
cmp
push
inc
sbb
sbb
push
scas
push
cmp
nop
stos
js
xchg
outsl
repz
shlb
popa
sarl
push
aaa
add
mov
cmp
daa
ficomps
aas
mov
xlat
test
mov
mov
into
test
cwtl
xor
flds
leave
jb
test
push
xchg
das
cltd
gs
cmc
pop
loop
mov
inc
push
mov
xchg
icebp
dec
hlt
add
xchg
inc
insl
mov
pop
jo
insb
dec
jo
mov
jl
cmp
int
mov
mov
push
icebp
mov
mov
stc
lcall
lds
xchg
adc
stos
pop
push
outsb
add
into
jbe
loope
xchg
jb
xor
add
sbb
negb
add
and
dec
loope
nop
mov
mov
jp
imul
out
jbe
add
dec
jo
mov
imul
shll
and
sbb
and
dec
ljmp
dec
fisubrl
lahf
lods
sbb
movsl
mov
movsb
mov
push
xchg
das
and
insl
jb
adc
sar
mov
mov
cmp
cmc
mov
jno
mov
xchg
xchg
inc
sub
fwait
inc
dec
cmpsb
les
mov
xchg
push
je
add
stos
adc
sahf
cwtl
sub
fdivrs
add
pop
outsl
push
in
cli
stc
test
popa
add
cmc
out
ret
sti
dec
inc
jns
add
aad
xor
mov
loopne
mov
clc
and
jg
pop
data16
jp
orl
pop
mov
cmc
push
clc
inc
ret
rcl
cmp
out
outsl
in
shl
mov
push
jg
in
sub
push
lock
stos
push
outsb
addr16
mov
sbb
std
enter
cli
out
dec
in
add
pop
jle
shrl
adc
cmp
fiaddl
sub
je
pop
mov
xor
xchg
imul
push
fs
dec
and
jp
inc
or
call
xor
ds
test
inc
ret
insl
mov
jbe
adc
rorl
ret
rorl
and
jle
inc
mov
mov
sbb
mov
adc
das
add
jb
push
arpl
cmp
adc
mov
add
ret
push
mov
mov
es
mov
xchg
lcall
es
andb
sti
push
fidivl
rorb
dec
pop
dec
es
push
call
sahf
cmp
pop
fstpt
in
outsl
xchg
fiadds
or
push
outsb
sub
sbbl
jo
sbb
iret
xchg
shrl
jne
jno
in
or
mov
dec
push
adc
mov
inc
jne
insl
shlb
cmpsl
push
inc
mov
or
dec
imul
jb
mov
loopne
xchg
push
ret
or
and
sub
inc
dec
xor
add
jge
icebp
notb
scas
mov
cmpsl
add
or
adc
pop
pop
loop
inc
xchg
dec
mov
pop
pusha
sbb
mov
lods
fsubr
out
adc
enter
pop
adc
mov
pop
test
popf
mov
addr16
adc
jnp
mov
dec
cmpsb
add
dec
in
mov
mov
in
pop
lahf
fsts
call
ret
and
outsb
cmp
mov
mov
scas
pop
loope
adc
in
push
rclb
add
jl
sbb
push
out
std
fs
mov
and
and
imul
cmp
popa
sbb
pop
js
and
adc
inc
xor
sub
or
mov
mov
cmpb
call
sub
add
mov
and
jbe
jns
dec
add
hlt
cmp
mov
inc
sub
inc
hlt
inc
shrb
inc
xor
minps
mov
movsb
cmp
pop
xchg
pop
hlt
mov
xchg
xchg
mov
and
fisubrl
mov
fnstcw
dec
outsl
dec
arpl
lret
jl
sti
jnp
into
fs
iret
sbb
int3
std
add
sahf
xor
loop
stos
aaa
mov
iret
daa
dec
pop
cmc
fcompl
cld
mov
ds
mull
enter
shrb
or
xchg
push
clc
add
pop
mov
bound
clc
filds
ss
imul
stos
iret
jmp
dec
stos
mov
xor
pop
pop
mov
sbb
stos
xchg
dec
sub
test
std
gs
xlat
stc
sub
add
inc
dec
adc
imul
ds
pop
push
ret
or
inc
push
gs
push
cmp
add
pop
ljmp
pop
add
xchg
push
and
xchg
jnp
xchg
jp
add
sub
cld
outsb
push
jae
sub
dec
jbe
inc
mov
sub
xchg
push
cli
add
insl
stos
adc
adc
cmpsb
icebp
mov
nop
cmpsb
out
mov
dec
mov
mov
push
es
xchg
xor
movsb
call
daa
in
aas
sbb
xchg
adc
pop
mov
outsb
cmp
push
mov
mov
pop
outsb
adcl
shrb
cltd
pop
ss
jl
cld
icebp
cltd
add
jbe
mov
les
cli
jo
fwait
cwtl
lock
dec
mov
lret
jl
das
jns
fwait
jo
push
push
jne
pusha
insb
test
jecxz
fcmovb
inc
dec
lret
sbb
lea
push
mov
sbb
adc
arpl
and
fadd
mov
push
rcll
jnp
aaa
jge
xor
mov
fst
adc
dec
into
fldl2t
jnp
mov
movsb
shlb
push
cmp
scas
out
dec
sbb
loope
jp
cli
out
pop
popa
mov
push
mov
and
sbb
pop
jnp
and
mov
xchg
cmpsl
or
mov
test
fdivp
loop
adc
leave
dec
in
lahf
mov
in
cmp
rclb
dec
js
inc
pop
push
inc
icebp
jo
and
mov
and
push
cmp
repz
imul
or
outsl
xchg
fnstsw
or
dec
fnstcw
inc
adc
push
add
mov
jecxz
add
stos
es
mov
sub
jmp
xor
jae
js
xlat
jb
inc
pop
jnp
jae
fildll
jp
aas
out
in
fisubl
fsts
stos
clc
push
xlat
sub
ret
std
xlat
sub
pop
lcall
pop
fists
stos
aas
call
lock
rcll
mov
pop
shlb
jb
fwait
cltd
sub
push
or
xor
sbb
int
sub
push
inc
scas
repnz
in
sarl
jge
outsl
mov
adc
leave
xchg
or
sub
lcall
in
fdivs
call
dec
lods
inc
jp
mov
in
push
mov
sub
lds
es
adc
adcb
mov
xor
adc
dec
aam
cs
cmp
idiv
jnp
fisubs
jge
js
rcrl
adc
cltd
scas
xchg
aas
push
adc
stos
lahf
imul
mov
insb
imul
mov
gs
add
les
int3
or
xchg
push
inc
sub
in
mov
dec
dec
push
lds
ret
sti
sarb
add
xchg
mov
dec
xchg
mov
add
xchg
xor
mov
push
jnp
mov
lea
sub
add
push
dec
loope
push
int3
xchg
sbb
out
stos
mov
out
imul
add
sbb
add
push
fwait
adc
loop
mov
xor
sub
mov
aas
and
jo
jo
aam
pushf
sub
jecxz
or
ljmp
add
hlt
and
dec
sub
or
or
outsb
and
nop
shll
enter
out
and
in
enter
xchg
imul
repnz
je
or
jnp
pop
mov
mov
enter
dec
fs
pop
aaa
jmp
daa
jmp
jle
jg
mov
sbb
scas
mov
sub
addl
dec
jecxz
mov
mov
jg
jle
jecxz
sub
addr16
inc
pop
enter
into
push
xchg
pusha
and
imulb
dec
and
stos
jmp
test
popf
sar
pop
jmp
sbb
orl
add
ljmp
add
add
in
mov
cmpsb
dec
push
xor
mov
fidivrl
shll
les
into
lds
into
out
into
dec
mov
mov
inc
arpl
lds
sub
test
ret
aaa
nop
sub
sbb
lds
rorl
insl
outsb
push
inc
dec
out
pop
mov
incb
mov
mov
dec
lods
fwait
push
or
adc
ret
fcos
push
jg
repnz
fcomps
mov
sbbb
cmp
addr16
outsl
movsl
adc
fimuls
adc
and
mov
and
cmp
add
sbb
lret
jb
ljmp
mov
faddl
lcall
daa
lods
aam
pusha
mov
dec
fcomps
pop
dec
fistpll
cld
out
fwait
aas
test
sbb
adc
mov
in
xor
push
pusha
rcrb
mov
insb
pop
std
pop
xor
adc
push
push
xor
ja
call
stc
mov
into
subb
xchg
mov
out
add
sahf
lret
stos
pop
pusha
nop
out
mov
pusha
in
lahf
dec
ja
aam
rolb
out
pop
fsts
dec
jne
or
jge
paddsb
mov
stos
push
add
call
sbb
push
lret
inc
xchg
inc
mov
mov
nop
jb
inc
shl
xacquire
pop
jle
push
sbbb
stos
and
popa
and
or
ret
out
xor
popa
iret
and
add
mov
add
push
cli
andl
in
lea
incl
inc
mov
mov
cmp
sarl
xor
movsb
dec
aas
push
dec
shrl
adc
lea
rcll
mov
sub
jo
mov
daa
sbb
jl
cs
mov
xorb
jmp
repz
out
lods
pop
mov
cli
loop
jns
jno
inc
dec
ja
dec
or
inc
add
jle
sbb
xlat
outsb
mov
jae
das
xor
push
fcomip
sub
cmp
dec
out
cmp
push
jecxz
testl
xor
movsb
scas
popf
jno
mov
mov
sbb
xor
dec
add
inc
es
lock
xorl
stc
loopne
jae
imul
pop
cmp
ds
push
das
push
adc
ljmp
fldcw
sub
getsec
push
cmc
mov
push
inc
je
inc
lret
jne
stc
cmp
inc
out
pop
jg
ja
sbbb
mov
fldcw
insb
xchg
dec
xchg
push
cmp
mov
xor
out
push
sbb
pop
mov
cmc
mov
jnp
lcall
pusha
sahf
ds
mov
mov
mov
dec
xchg
stos
lahf
jo
xchg
icebp
push
ficompl
jmp
jp,pt
pop
arpl
lds
jae
push
or
xor
mov
in
dec
insl
sbb
aaa
shll
pop
jnp
inc
sahf
push
jnp
mov
push
xchg
pop
mov
stc
mov
dec
ficoms
push
lret
nop
call
push
stc
sub
cmp
lods
pop
fisttpll
out
loop
mov
js
cmpb
push
mov
dec
sar
addb
inc
cltd
push
jo
push
pop
scas
dec
adc
and
xchg
fdivp
rclb
add
data16
pop
jbe
in
movsb
lods
into
adc
sbb
sub
xchg
inc
cmp
jns
and
jne,pn
push
cmp
xchg
xor
or
pop
mov
xchg
into
out
cmp
inc
loope
mov
addr16
push
sbb
push
jae
jne
movsb
push
dec
divl
ret
xor
imul
jnp
adc
add
pop
dec
add
mov
adc
dec
lahf
dec
lods
mov
call
mov
cmp
out
and
into
pop
mov
jmp
cmc
or
push
xor
jmp
mov
sub
adc
pop
add
lret
leave
fstl
jmp
cmp
add
inc
popf
addr16
pop
push
add
iret
mov
adc
sub
ret
jae
lea
cs
jo
fwait
in
mov
adc
pop
xorb
fs
mov
cltd
mov
leave
jl
inc
mov
cmp
push
cltd
sub
fs
add
sbb
fwait
outsl
call
into
xchg
and
add
movsb
repnz
ja
dec
mov
inc
sti
das
pop
push
sbb
push
cmp
xchg
shlb
imul
notl
mov
insb
mov
sbbb
sahf
mov
jb
sbb
xlat
int3
cmp
in
cwtl
fwait
mov
lock
and
or
mov
les
pop
les
inc
into
lds
lretw
or
clc
fiadds
shll
sbb
cli
lods
loopne
popf
icebp
push
fisubrs
inc
gs
repz
nop
or
sub
lahf
mov
xor
jmp
into
mov
outsl
pop
mov
enter
outsl
nop
mov
rol
xchg
mov
mov
push
rep
pop
sub
lock
mov
test
mov
shlb
stc
aam
int3
cmp
dec
mov
inc
in
in
addb
jl
rcrl
or
cmp
mov
jnp
push
xchg
inc
jbe
push
enter
popl
orb
and
lcall
std
rcrl
shll
cmp
jbe
sbb
adc
fistl
nop
push
jae
jnp
popf
xor
xchg
dec
mov
in
and
loopne
mov
jecxz
lods
jne
shrl
cmp
cmovge
clc
fstps
daa
adc
cmp
pop
add
std
inc
rcrb
je
inc
int3
xchg
lea
aam
bound
clc
sbb
xchg
bound
in
hlt
and
cmc
or
movsl
inc
fnstcw
orb
fidivs
xor
pop
insb
sub
bound
arpl
or
pop
fstps
fnstsw
xor
dec
lret
mov
and
sub
pop
test
fdivrs
insb
cwtl
fbld
mov
xor
sub
in
mov
adc
in
bound
aam
ret
popf
rolb
jp
in
movsb
dec
rorb
fcomip
cmp
mov
push
mov
in
orl
push
leave
jns
fistpll
iret
cwtl
or
fwait
xchg
push
inc
imul
imul
pop
xor
les
into
inc
out
cmp
jge
sahf
ss
cli
enter
mov
mov
sbb
pop
jae
inc
sahf
or
ret
jbe
xor
insb
scas
shll
jecxz
mov
xor
aam
ljmp
cltd
cltd
jbe
in
out
jge
daa
loop
std
ss
or
shlb
cltd
ret
or
add
gs
add
loopne
xor
sub
into
ss
mov
enter
fs
notl
cmp
sbb
test
or
pop
pop
inc
out
gs
js
pop
jnp
cmp
mov
jmp
popa
pop
icebp
das
rclb
mov
adc
dec
repz
mov
in
sarb
sub
cltd
push
jmp
inc
hlt
adc
xchg
inc
testb
sbb
mov
rcrl
xor
fidivs
xor
push
add
jno
add
mov
cwtl
push
dec
nop
aas
incb
and
testl
insb
fwait
push
je,pt
adcb
loopne
rcl
gs
xor
fsub
adc
mov
es
lods
mov
rcrb
jne
pop
pop
push
inc
dec
jb
lcall
mov
jno
add
mov
jmp
lret
inc
je
outsl
mov
cmp
rol
cmpsl
fwait
xchg
add
or
fbstp
int3
enter
sub
in
bound
popf
aad
and
jge
js
insb
jecxz
jl
imul
sub
mov
jbe
cli
out
sbb
ret
sub
mov
dec
or
call
cmpsl
ret
jnp
sub
lods
mov
xchg
insb
mov
hlt
enter
rcr
and
in
out
int3
jbe
sar
mov
sub
sahf
mov
jne
fwait
test
mov
jmp
push
add
xchg
movsw
cli
push
into
push
or
flds
int
xchg
adc
and
push
inc
mov
xchg
sbb
addr16
lods
icebp
insl
pop
fucomp
cmp
sbb
push
ficoms
mov
fsubrp
jmp
xchg
popa
or
test
mov
lods
mov
push
mov
dec
aaa
shrl
fildll
daa
insb
mov
aas
inc
mov
or
inc
pushf
mov
addr16
popf
xchg
sub
in
flds
pop
push
out
icebp
push
sub
xor
pop
pop
rol
xlat
and
outsb
dec
xor
cmp
in
inc
adc
or
rolb
add
sahf
or
lds
dec
andl
out
cmp
adc
popa
xor
mov
pushf
imul
mov
jae
cmp
rol
add
push
xchg
xchg
test
cmp
loopne
xor
jecxz
cmc
cltd
loope
bound
shlb
add
mov
mov
popf
sbb
mov
pushf
adc
lret
popa
insl
lods
test
in
dec
fwait
inc
sarl
jno
das
xor
push
adc
xor
add
fs
enter
mov
or
jmp
loop
push
xor
enter
push
shll
mov
repz
cmp
fdivp
rolb
in
dec
pop
nopl
je
test
mov
pop
pop
lcall
enter
or
sub
pop
lods
daa
xlat
xchg
vmovaps
sti
mov
sbb
mov
cmp
lock
and
sub
cld
fs
jecxz
in
ret
test
xor
jg
cmp
mov
mov
add
pushf
cmp
scas
adc
insb
pop
inc
mov
inc
mov
in
push
nop
fnsave
sbb
outsb
xor
sbb
mov
pop
pop
jmp
es
lea
dec
dec
pop
dec
lahf
pop
xchg
cmp
sub
push
enter
sbb
je
mov
push
or
push
jmp
mov
mov
shll
cmp
jbe
into
push
lods
mov
dec
out
sbb
push
xchg
cmp
lock
mov
adc
data16
sbb
push
sbb
fimull
stos
fsubs
and
sbb
aad
testl
pop
xlat
clc
jecxz
xchg
gs
push
jne
nop
jo,pn
and
lcall
out
mov
mov
add
divl
xchg
cltd
mov
and
sub
sbb
and
stos
pop
lea
mov
jno
stos
enter
ljmp
pusha
dec
out
jmp
in
imul
rorl
mov
lea
add
sahf
cld
jecxz
or
out
sub
add
popf
add
pushf
popa
aam
mov
aas
dec
or
cltd
andb
xor
movb
test
xchg
push
adc
ljmp
mov
push
enter
xchg
inc
cmpsb
sar
sub
mov
cmovns
xor
js
mov
pop
movsl
pop
push
xchg
pop
jecxz
mov
jnp
cmp
insl
xchg
xchg
pop
cld
jp
lds
movsl
call
mov
lock
test
or
mov
xor
push
addl
push
sbb
and
adcb
lds
loop
jb
movsl
push
divl
push
int3
mov
cltd
xor
pop
pop
add
mov
pop
jl
imul
add
pop
jae
xor
xchg
stos
fs
clc
mov
ljmp
jl
ja
lret
hlt
insl
stos
mov
xor
fwait
xor
push
mov
mov
and
inc
pushf
inc
je
pop
dec
hlt
sbb
loope
and
add
mov
and
rcrb
push
fstps
xchg
pop
or
dec
jno
inc
lds
pop
out
mov
mov
pop
jns
arpl
pop
nop
cli
data16
iret
sbb
xor
call
pop
or
mov
rolb
push
fldcw
sbb
mov
adc
push
aam
pop
jnp
nop
adc
sbb
sbb
push
cmp
daa
mov
xor
test
scas
xchg
incl
out
loope
mov
xor
fmuls
pop
xor
adcl
xchg
cwtl
pop
jle
xor
int
or
pop
xchg
in
push
insb
jne
xchg
icebp
mov
lret
into
xchg
sub
ljmp
cmp
inc
pusha
push
pop
aad
dec
fnstsw
jnp
xor
iret
xchg
sbb
popf
inc
mov
push
lret
mov
or
icebp
cltd
aad
mov
xchg
mov
mov
imul
aas
or
xchg
jo
scas
xor
je
push
lds
mov
mov
mov
mov
add
mov
push
gs
daa
fimull
std
inc
lcall
cmp
or
cmp
outsl
cmp
jmp
cltd
iret
jmp
into
mov
and
jno
or
or
xchg
dec
mov
mov
cltd
inc
mov
adc
movsl
push
rep
negl
adc
fcomps
xchg
mov
mov
aaa
das
pop
pop
sbb
scas
rcr
ret
xchg
mov
inc
pop
and
mov
mov
call
mov
in
jbe
mov
mov
pop
outsb
add
loop
cld
or
mov
pop
xor
in
or
cmp
scas
lods
pop
xchg
popf
je
pop
popa
mov
loope
xor
out
iret
lahf
xlat
ds
hlt
mov
cltd
call
push
xor
movsl
test
mov
in
ds
mov
and
test
je
stos
mov
dec
push
std
fimull
imul
jb
enter
inc
pop
dec
jns
je
add
cmp
insb
inc
fbstp
aaa
das
loope
clc
cmpsb
inc
in
add
sub
xchg
mov
fstps
cwtl
int
jbe
shl
jno
jns
jl
insl
mov
mov
pop
mov
mov
mov
ds
les
lock
test
or
pop
ss
push
mov
mov
push
push
sbb
sub
aas
jl
jne
leave
mulb
outsl
fcompl
pop
push
and
sbb
lret
sahf
imul
and
sub
add
mov
or
jle
push
pop
lods
into
sub
pop
es
jne
pushf
insl
mov
scas
sub
xchg
jle
hlt
lods
pop
sub
stos
mov
mov
sti
lods
dec
and
xor
jno
insl
sbb
sub
jge
xchg
jl
pop
nop
and
mov
mov
je
cmp
loopne
mov
pop
mov
daa
cli
stc
mov
sbb
push
aas
inc
rcrb
inc
add
mov
dec
rorl
out
fiadds
dec
or
jmp
ja
xchg
adc
add
ljmp
scas
andl
lods
pop
sub
stos
mov
mov
cld
fwait
fwait
sbb
out
xchg
cltd
push
mov
or
add
jbe
stos
dec
pop
jge
jno
or
sahf
mov
pop
pusha
pop
mov
sbb
scas
mov
call
push
or
sbb
pop
repz
out
lds
jmp
enter
aad
push
out
mov
icebp
jb
inc
mov
pop
add
and
notb
shlb
inc
xchg
stos
dec
lahf
scas
shl
ja
scas
in
mov
push
adc
sbb
es
pop
fnsave
dec
xor
sub
pushf
or
outsb
data16
add
addr16
inc
jbe
adc
mov
movsb
mov
dec
in
scas
pop
in
inc
mov
out
sub
aaa
push
adcl
add
bound
xor
mov
dec
lcall
jne
outsb
shlb
aad
ret
iret
in
outsb
outsl
fildll
andl
loope
adc
mov
in
mov
jecxz
sub
test
vpand
xchg
mov
iret
xchg
add
aas
mov
sub
mov
call
jno
ret
aas
add
mov
xlat
sub
jb
mov
sub
fsubs
xor
loope
mov
add
cli
cmp
shlb
cmp
testl
stos
pushl
ljmp
xchg
lea
mov
xchg
xor
xchg
mov
lods
push
lock
cld
mov
inc
mov
pop
scas
pop
jecxz
sub
mov
jno
adc
jne
jl
mov
dec
ret
xor
jne
jle
mov
mov
iret
pop
insl
insl
pop
jle
and
rcrb
mov
loope
pop
mov
out
sti
and
sbb
sub
mov
nop
into
push
icebp
push
arpl
imul
cmp
fisubrs
sbb
js
ja
fdecstp
cli
pop
icebp
aam
mov
popa
push
fbld
jecxz
cltd
loope
repz
add
movsb
and
push
ss
xor
dec
sbb
std
and
jne
gs
xchg
mov
pop
mov
push
sbb
mov
and
fsub
inc
push
ret
sbb
inc
shr
mov
add
cmp
addb
xor
js
sahf
movsl
adc
stos
adc
rcrb
lods
sbb
fistpl
jb
xor
test
enter
mov
pop
mov
add
jno
mov
xchg
loopne
dec
cld
ja
loope
adc
outsl
push
iret
jl
jg
fnsave
pop
sub
sti
in
inc
mov
rcll
or
jp
nop
and
ret
in
cltd
cld
test
add
movb
jbe
or
mov
pop
and
movsb
cltd
pop
lret
xor
inc
fcoml
js
mov
mov
insl
and
mov
xchg
mov
movsl
jecxz
sub
adc
lock
cmc
jge
dec
hlt
pop
push
ds
cwtl
pusha
aam
lcall
jge
imul
fbstp
adc
inc
mov
dec
loop
jl
rcrl
adc
mov
xchg
test
stos
add
loop
xchg
xor
sbb
out
or
mov
fistl
push
and
scas
aad
scas
es
test
mov
add
xor
mov
push
cmpsb
adc
jp
iret
es
ret
aaa
clc
jle
popa
call
cmpsl
push
fcompl
jg
cmp
jge
sti
addr16
sahf
rorb
or
and
rol
jnp
pop
inc
xor
jno
add
mov
sub
xor
or
stos
je
or
push
inc
std
addl
push
outsl
movsl
lcall
lahf
orb
fsubrs
mov
and
out
movsl
adc
cld
fmull
out
pop
hlt
xchg
sahf
add
cmp
es
gs
lods
mov
movsl
push
jbe
mov
das
xchg
fisubrs
mov
sti
repnz
pop
ficomps
lret
jmp
fwait
xor
icebp
xor
mov
adcl
aad
lcall
sbb
out
ds
push
dec
in
push
sub
nop
mov
or
sub
mov
insb
rcll
and
jmp
xor
dec
adc
and
js
xchg
test
in
xor
icebp
fwait
jno
inc
mov
in
ret
adc
fcompl
xchg
jo
push
cmpsb
clc
cld
push
pop
adc
les
mov
test
xlat
and
das
fisubrs
fiaddl
inc
dec
dec
bound
dec
icebp
cld
xchg
jge
stos
lcall
push
ret
mov
mov
mov
inc
push
mov
fidivl
shlb
dec
push
mov
mov
cmpsl
ret
outsl
loop
xor
dec
test
jg
xor
and
into
int
and
mov
data16
adc
jg
dec
dec
lret
jo
or
andl
out
test
add
jo
xchg
xchg
mov
aad
xchg
mov
push
lcall
pushf
test
and
into
int3
jmp
das
add
sti
in
in
sub
or
fbld
pop
sets
xchg
pop
fs
fcoms
pop
or
inc
dec
rcrb
lods
les
mov
xchg
rcrl
xchg
test
rclb
mov
xchg
nop
jge
mov
pop
test
loopne
ffreep
jae
jb
xchg
in
jp
mov
pop
nop
pop
sbb
lret
adc
push
xchg
data16
push
mov
jl
push
push
vmovdqa
cmp
lock
sti
test
xchg
mov
mov
popf
push
xlat
push
scas
mov
cmc
pop
popf
add
lret
addr16
test
ret
in
mov
pop
fists
test
inc
cltd
mov
jmp
nop
fstl
int3
fidivrs
cmc
data16
test
dec
mov
push
sbb
and
popf
gs
pop
icebp
adc
jge
shrb
push
scas
xor
movsb
sbb
shll
pop
dec
mov
xchg
int3
mov
push
xor
inc
push
fstl
lret
cmp
sub
lds
arpl
sahf
or
add
out
dec
adc
cmp
loop
push
cmp
push
iret
pop
call
jmp
js
sbb
addr16
fstpt
das
dec
or
mov
cmp
add
push
adc
leave
insl
ds
jg
aad
mov
mov
in
add
xchg
ficoms
rcrb
ficoml
and
jae
ret
push
pop
adc
xchg
inc
lods
lods
mov
stos
inc
sbb
push
add
lcall
pop
xchg
sub
push
pop
or
andl
push
inc
cmp
jno
int
hlt
test
dec
cmp
imul
sbb
call
andl
ds
xor
push
inc
add
jne
sbb
sbb
or
jno
xchg
bound
sti
sub
sbb
cli
aad
dec
outsb
stos
inc
movsb
or
in
xor
jg
adc
or
ja
xchg
jp
cmp
out
mov
shll
sub
adc
mov
cmpsl
shrb
clc
mov
lret
test
test
mov
jl
repnz
xor
pop
iret
sti
std
cmpsl
xor
pop
mov
pop
fs
cmpsl
in
xchg
iret
in
insl
loop
mov
dec
push
dec
sbb
shrl
out
adc
testb
jg
outsb
data16
mov
orb
jmp
stos
test
push
sbb
xchg
lods
mov
cmp
fwait
rol
inc
push
dec
rcll
xchg
add
out
pop
int3
inc
lcall
mull
das
xchg
lret
pop
add
sbb
push
xchg
sti
xchg
mov
movsl
push
xor
lret
jp
clc
add
dec
sub
cmc
jbe
and
xor
jge
dec
push
jno
pop
out
or
popf
cmc
push
lret
dec
push
in
pop
mov
jmp
fimull
sbb
es
or
cmc
sbb
pop
and
push
test
paddsw
xor
push
push
outsl
jb
inc
xchg
mov
or
fimuls
lret
test
inc
in
lcall
jb
inc
ljmp
and
and
divb
xchg
dec
jns
sub
xor
out
pop
ret
sti
aas
mov
lcall
imul
pop
in
sbb
rclb
movsl
xor
add
pop
push
pop
inc
push
push
sbb
mov
je
sub
adc
js
jno
nop
stc
dec
and
mov
cmpsb
adc
outsl
pop
push
inc
inc
pop
xlat
fmuls
dec
mov
xor
pop
fnstcw
das
in
mov
jecxz
jnp
mulb
lds
outsl
inc
mov
xor
cwtl
rcll
or
mov
movsb
add
add
lcall
test
lea
or
jnp
add
inc
notl
imul
or
aaa
or
into
sub
mov
sub
iret
xor
pop
jmp
cmp
inc
pop
and
std
pop
imul
imul
cmpsl
cmpsb
lds
fildl
jae
shrl
aad
loope
pop
adc
notl
filds
mov
leave
pop
jbe
pop
add
jo
xor
inc
adc
dec
sub
cmp
ret
cmpsl
cmpsb
dec
or
mov
in
bound
xchg
ffreep
sarb
mov
nop
lea
sub
test
push
mov
cmp
push
adc
subb
cld
cwtl
pop
mov
cs
adc
sti
mov
addr16
outsb
pop
rorl
sub
mov
aad
pusha
test
in
jl
test
mov
stc
jae
jnp
and
out
rol
xchg
sbb
idiv
cmp
add
xor
orb
add
lds
bound
rcrl
add
rcl
ficoml
mov
xchg
and
fs
mov
mov
das
das
mov
std
mov
bound
movsl
sbb
add
push
push
or
stos
popf
popf
jecxz
mov
js
sbb
pop
pop
sbb
push
or
xor
fsubl
andl
pop
xchg
ja
add
test
xchg
jno
sbb
jb
lods
jp
leave
push
xor
mov
jmp
push
fisttpl
jo
add
andb
dec
add
cld
iret
sub
test
add
cmp
dec
imull
inc
jne
push
jns
pop
pusha
push
pop
xlat
in
or
cs
bound
lret
shll
push
push
jmp
pop
lea
xchg
push
test
outsl
cmp
xor
lcall
aaa
adc
inc
xor
jg
in
pop
divb
dec
ljmp
call
sbb
outsb
pop
add
pop
pushl
std
mov
ror
pop
call
mov
bound
pop
pop
adc
and
inc
and
jmp
cmp
lret
sbb
jne
popa
int3
addr16
out
outsl
inc
jmp
push
outsl
fistps
jo
xor
xchg
in
scas
fldcw
in
insl
out
push
rcrl
xor
adc
or
data16
jecxz
dec
fdivp
aam
jo,pn
cmpsl
sarl
dec
ljmp
in
sbb
xchg
fisubrs
out
mov
jo
mov
sti
out
adc
cmp
dec
adc
test
sub
adc
jl
mov
fildl
cmpsl
xchg
cmp
lods
int3
jecxz
imul
sbb
push
and
xor
insb
xchg
add
divl
add
and
mov
pop
sub
enter
jmp
subb
or
mov
and
pusha
cmp
sub
scas
imul
jno
sbb
les
pop
sti
mov
sbbl
popa
roll
mov
jnp
push
ljmp
cmp
lcall
pop
cli
dec
push
pop
aam
loopne
popf
mov
fwait
jae
cwtl
aad
xchg
out
and
in
mov
inc
movsb
add
fidivs
dec
rcrl
push
sub
dec
add
iret
aad
into
lods
sub
aaa
xchg
jnp
adc
and
call
mov
lock
es
pusha
push
or
outsl
or
add
jns
add
out
add
sbb
push
xorb
inc
pushf
test
imul
xchg
loopne
shr
sahf
test
sub
mov
fadds
cmp
xchg
es
add
ds
in
push
int
out
sub
dec
fidivrl
pop
push
sub
imul
xor
js
push
shlb
jecxz
xchg
in
out
jle
adc
mov
pop
and
xlat
ds
cmp
movsb
dec
hlt
push
aaa
mov
arpl
outsb
repz
mov
xor
sbb
xor
jmp
imul
lret
mov
mov
mov
js
adc
xchg
xor
adc
fsubrl
or
or
loope
fsubrl
mov
xchg
lcall
jae
fwait
pop
ret
into
xchg
mov
push
mov
mov
dec
push
cmp
xchg
mov
adc
or
xchg
jno
mov
shrb
mov
insb
imul
push
xorb
adc
mov
pop
xchg
lret
pop
sub
pop
test
icebp
and
jb
aaa
pop
testb
mov
clc
arpl
add
daa
loopne
jp
dec
push
sub
into
push
sarb
jmp
outsl
cmp
push
jl
daa
gs
pop
lcall
push
aas
fsts
xchg
pop
inc
loop
add
sub
cs
dec
dec
jo
jp
sub
jnp
leave
scas
mov
cmp
push
and
xor
mov
jecxz
jmp
mov
or
mov
ss
adc
dec
sbb
adc
push
ret
std
xor
mov
cmp
iret
sub
sbb
in
lock
aam
repz
adc
movsb
ss
dec
adc
scas
sbb
mov
iret
repnz
push
out
rclb
sbb
xorl
sbb
roll
mov
test
xor
fsts
dec
xor
insb
pop
sub
cld
sbb
adc
fstl
daa
out
stos
fcomps
cwtl
mov
stos
cs
cs
cmc
test
push
lret
mov
imul
outsl
aad
push
aas
es
jo
inc
adc
fsub
int3
rcll
clc
xor
and
dec
push
inc
push
rcll
mov
sarb
not
cmpb
aas
mov
aad
push
std
push
or
addb
and
and
push
or
pop
test
dec
test
xor
fbstp
test
adc
push
mov
mov
pop
call
xlat
inc
loopne
loopne
fdivp
sbbl
jnp
icebp
lods
xchg
sub
fisubrs
lret
mov
lret
out
lret
jg
in
loopne
inc
popf
js
push
jne,pn
mov
mov
dec
jp
mov
hlt
or
stos
repnz
fidivl
inc
sbb
xorl
hlt
pop
or
ljmp
push
mov
pcmpgtb
fiaddl
adc
iret
fldcw
or
cmp
fsts
cs
adc
shlb
pop
mov
or
xor
inc
mov
cmpsb
call
mov
lea
mov
pop
rcl
subl
fdivs
inc
leave
jp
jb
xor
mov
out
outsb
adc
sbb
mov
nop
in
add
cmp
adc
add
xlat
lret
dec
sbb
std
int
xor
daa
lods
add
cmp
cmp
mov
in
pushf
mov
and
mov
ljmp
cmp
stos
bound
cmpsl
sub
xor
fnstsw
xor
enter
sub
add
out
ljmp
push
cmp
mov
aaa
mov
lea
das
cwtl
jp
xchg
push
into
and
mov
push
pop
out
fscale
ss
rcrb
mov
int
call
ja
cmp
imul
sub
sub
xchg
add
pop
pop
sbb
clc
cmp
jl
jge
or
push
mov
div
mov
repnz
xor
addb
xlat
jmp
push
int3
jb
xlat
cli
xor
fistpll
adc
addr16
leave
loop
aaa
sbb
push
or
daa
call
lcall
popf
repz
mov
aad
jl
ds
jmp
jns
in
repz
or
push
fstp
mov
stos
mov
sub
push
fnstsw
js
fs
and
int
cli
js
out
fdivs
shlb
sub
nop
lret
shll
push
enter
in
loopne
lret
sub
pop
cmc
dec
pop
jns
inc
js
aam
arpl
cmc
mov
cmp
mov
stos
sahf
or
stos
out
icebp
pop
pop
test
mov
imul
cmc
and
aaa
jmp
mov
mov
jl
nop
push
sbbb
lock
dec
scas
mov
aad
jge
popa
idivb
addr16
pop
sahf
jle
mov
lods
nop
push
xorb
fisttpll
sbb
cmp
cmp
aaa
call
lahf
mov
sub
jb
add
loop
push
mov
daa
repnz
sbb
jmp
sub
mov
arpl
aad
cmp
fistps
bound
ret
sahf
xchg
outsl
sbb
push
out
scas
pop
jecxz
xchg
sub
xor
pop
mov
jne
cmc
ds
xor
daa
mov
push
sbb
jecxz
sbb
add
jecxz
scas
testw
add
and
lret
dec
imul
into
sbb
fimull
ja
imul
mov
roll
add
mov
adc
push
test
sub
jbe
jge
inc
sbb
incb
mov
mov
test
mov
mov
jnp
mov
outsb
xchg
inc
cmpsb
shl
sbb
imul
iret
in
adc
push
int
lret
mov
add
sub
and
adc
call
xchg
push
adc
push
push
jbe
out
mov
or
push
pop
push
addl
bound
pop
or
sub
lret
sbb
cmp
cmc
outsb
pop
repnz
ja
xchg
mov
mov
fs
fdivrl
aam
sbb
outsb
jge
aaa
lods
cmp
out
adc
jecxz
pop
repz
pop
pop
jne
jbe
xor
xor
or
adc
mov
xchg
add
stc
insb
sbb
pushf
outsb
arpl
cmp
cli
sub
mov
add
scas
stos
out
insb
stos
mov
ja
scas
mulb
xor
dec
cltd
das
mov
cli
jg
cmc
orb
outsb
pop
fcomps
xor
movsb
or
stos
mov
dec
inc
cmp
adc
ret
adc
lods
fs
idivb
adc
add
pop
lret
mov
jb
scas
adc
pusha
pushf
stc
or
or
cli
xor
lret
bound
and
scas
mov
arpl
in
lock
ja
or
lret
sub
push
mov
aad
cmc
fstps
inc
and
push
rolb
in
fbld
dec
nop
roll
inc
flds
inc
nop
cmp
xor
es
clc
sbb
mov
movsl
cmpsl
push
push
jecxz
pop
mov
fiaddl
addr16
test
and
sbb
sbb
repz
inc
jbe
ljmp
pop
inc
rorb
and
in
adcl
sbb
aad
inc
dec
push
sub
xchg
ds
and
pop
test
pop
jae
fcompl
inc
sbb
mov
push
shrl
push
ret
fsubr
xor
cmp
mov
or
fsubrp
sub
xor
mov
push
push
cli
cs
jne
or
jmp
loop
shl
mov
pop
push
std
inc
test
ss
and
push
pop
jne
or
or
jno
ss
dec
push
xor
mov
jbe
mov
jl
push
xor
add
test
dec
dec
out
out
iret
pop
add
push
mov
mov
mov
pushf
jle
fsubs
popf
or
test
cltd
cmp
sub
pop
mov
shl
add
cs
enter
rcrb
cmpsb
and
pusha
pop
fmull
cmpsb
sub
test
filds
les
int3
pop
xchg
jge
sti
adc
pop
pop
mov
rcr
stc
xchg
jo
push
and
mov
mov
ffreep
and
inc
jp
mov
push
leave
icebp
addr16
xchg
mov
js
aas
pop
xchg
xor
orl
pop
jmp
and
or
in
hlt
js
icebp
sub
sub
shr
test
ja
int
arpl
nop
mov
mov
fwait
inc
push
push
and
dec
sbb
dec
aad
sub
pop
push
or
push
push
insl
push
aas
out
adc
lods
jle
es
add
cmp
shlb
sarl
in
push
mov
lods
or
xor
add
push
cli
shlb
fwait
lds
dec
push
add
lahf
mov
inc
push
push
gs
mov
movsl
sub
push
aam
arpl
fwait
clc
pop
mov
pop
pop
xchg
out
add
add
inc
add
arpl
stc
stos
arpl
xchg
sub
or
dec
test
hlt
mov
push
bound
cmp
push
test
jp
out
adc
in
add
add
cmp
outsl
mov
lahf
cmpsb
sbb
jp
rclb
cmp
mov
aaa
add
push
sti
fs
pop
lcall
cwtl
repnz
sub
jnp
shl
les
pop
aam
imul
or
fbld
lea
insb
aaa
movsb
dec
dec
pop
cwtl
std
xor
repz
std
inc
push
addr16
or
push
xchg
popf
push
shrb
mov
ss
dec
push
shr
fcmove
cmpsl
ret
pop
aas
out
insl
pop
subl
scas
popa
rcrl
and
lock
cmp
pop
mov
dec
ja
dec
mov
dec
mov
mov
je
push
icebp
sbb
adcb
and
push
cmp
xor
lock
lods
imul
or
xchg
lods
loop
aas
adc
push
lea
pop
mov
inc
int3
cwtl
bound
les
fs
popa
pop
aam
mov
sub
test
lcall
sub
pushf
cmp
sti
icebp
or
inc
out
shlb
xchg
data16
mov
pop
sbb
les
mov
hlt
adc
xor
scas
or
cmpsb
add
or
repz
lcall
push
lret
out
je
ja
xor
nop
imul
cltd
sbb
jne
outsl
dec
cmp
mov
pop
roll
enter
add
repz
and
xchg
mov
das
rorb
xchg
adc
je
mov
sbb
sub
in
enter
movsb
into
pop
repnz
mov
ljmp
popf
pop
fstl
daa
add
es
sbbl
sbb
movsb
mov
and
pop
mov
shlb
and
mov
cmp
cmpl
pop
sarl
fistl
pop
sub
pop
adc
xlat
cld
adc
hlt
bound
scas
inc
fbld
and
in
ljmp
push
pop
sbb
sub
mov
lcall
out
fisttps
mov
cmpsb
and
cmpsl
pop
mov
pop
mov
inc
gs
fsubrs
imul
pop
inc
adc
mov
shlb
xchg
jbe,pn
loop
xchg
mov
leave
jp
daa
fsubrs
sahf
das
into
cltd
rcll
dec
jns
and
call
mov
xchg
adc
std
and
or
mov
or
mov
xor
add
xor
stc
fwait
jae
and
test
xor
ja
push
jno
fs
or
jo
or
jecxz
insl
aad
jecxz
loopne,pt
push
ds
pop
jge
fmull
test
cltd
push
das
gs
add
or
push
cmpsl
sub
fwait
pop
stos
push
mov
sub
and
and
add
in
scas
jecxz
cmp
fprem1
jg
mov
dec
movsb
shrb
or
loopne
fs
sbb
xor
js
push
xchg
test
cmp
cmc
aas
mov
ja
sbb
or
push
push
sbb
outsl
xor
ljmp
jl
call
add
nop
insl
test
pushf
imul
cltd
std
cwtl
dec
mov
sub
jl
aas
repz
pop
mov
outsl
xor
bound
sub
pushf
repnz
xchg
rcll
dec
adc
xor
insl
lock
in
cmpsl
sub
pop
mov
das
scas
pop
jl
out
adc
ljmp
rcrb
insl
mov
add
inc
iret
xchg
ffreep
addr16
mov
pop
pop
pushf
push
xchg
xchg
cmpsl
or
jbe
sti
into
mov
bound
loopne
testb
add
pushf
inc
jb
sub
out
and
cmp
pop
ds
flds
mov
inc
arpl
dec
fwait
mov
icebp
jno
out
out
cmp
mov
mov
inc
pop
cmp
add
and
lods
jae
add
pop
push
xlat
nop
imul
jp
xor
lret
iret
les
fidivrl
push
and
mov
enter
jp
gs
hlt
mov
xchg
jmp
mov
js
adc
clc
lahf
adc
inc
mov
inc
push
out
out
jbe
adc
jmp
xchg
insb
and
test
and
mov
into
mov
rcrb
lret
push
cmpsb
pop
xchg
fidivl
js
int3
ja
push
sbb
pop
out
add
ja
orb
mov
cld
outsb
das
and
jge
jo
inc
in
xor
sub
xchg
xchg
lret
sbb
fmuls
ja
lret
iret
push
fdivrp
xchg
clc
and
shlb
js
ret
mov
dec
leave
adc
xor
lea
cmp
es
xchg
int
xchg
or
outsb
insb
cltd
inc
jg
mov
in
mov
inc
aam
mov
pop
sub
js
test
pop
push
adc
cmp
xchg
cli
push
jbe
jae
enter
enter
ss
jge
dec
test
aad
fisttpl
and
jl
jne
push
jmp
fimuls
xchg
andl
push
je
imul
ret
ljmp
jno
cltd
popa
pusha
xchg
push
pop
f2xm1
lds
mov
repz
lret
add
cwtl
cmp
or
xchg
out
sub
jo
sub
add
ret
mov
popa
jle
in
out
xchg
cmc
shr
or
adc
int
aad
scas
xor
lea
daa
pop
add
cli
jmp
push
pop
pop
pushl
pop
sub
fcmove
mov
fadds
inc
inc
data16
xchg
adc
cmc
sub
mov
sub
xor
ret
cmp
scas
test
movsl
aad
movsb
mov
push
int3
push
adc
inc
dec
sub
decl
out
pusha
mov
pushf
push
xor
pop
ss
enter
or
sbb
stos
leave
adc
int
aam
stc
in
xchg
and
sbb
sbb
das
leave
lahf
xchg
ret
shld
pusha
test
clc
sbb
adc
stos
inc
mov
mov
in
insb
callw
mov
mov
xchg
xor
push
fcos
lods
or
xor
test
add
lcall
xchg
lret
orl
pop
dec
roll
in
bound
mov
mov
xor
sub
cmp
in
cwtl
ljmp
mov
and
movsb
in
and
out
cmp
lods
sbb
out
jle
push
mov
cmpsb
add
hlt
into
cmp
or
gs
ret
leave
add
cmpsl
inc
jbe
xchg
fwait
orl
jne
cmpsl
decb
out
pop
pop
jnp
sbb
stos
cmp
or
jmp
test
sub
mov
cs
clc
enter
inc
daa
adc
push
jl
push
cli
xchg
sbb
fistps
and
rcll
lea
jo
xchg
dec
test
sub
loopne
dec
out
jbe
pop
int
jmp
dec
pushf
adc
cmp
ja
or
scas
jne
push
cmpb
stc
sti
or
xchg
inc
aaa
rclb
xchg
pop
loope
sbb
hlt
jmp
es
sbb
mov
lcall
cmpsl
mov
mov
add
movsb
imul
cs
mov
mov
lret
add
cs
pop
dec
mov
mov
jl
std
sbb
shrl
jns
decl
push
mov
mov
xlat
sub
es
pop
push
les
adc
lret
xchg
cli
mov
pop
xchg
push
dec
setl
mov
xorl
cmp
test
dec
mov
fisubrl
sbb
add
add
arpl
arpl
addr16
xchg
lahf
pusha
mov
sub
pop
sub
or
nop
data16
das
mov
popf
sbbb
cmp
aam
lods
or
je
xor
lock
sbb
adc
sub
xchg
cmpsl
xchg
lahf
arpl
inc
popa
jmp
int
in
icebp
insl
iret
lea
xor
insb
xchg
sbb
imul
shl
lds
push
das
pop
mov
aas
xchg
mov
add
sub
or
aam
call
pop
inc
test
cmpsl
je
ljmp
aas
dec
jmp
lahf
and
mov
fmuls
stos
push
test
test
mov
sub
sahf
cwtl
push
ficompl
sub
mov
or
das
and
out
cmp
popf
mov
loop
push
and
push
add
push
jns
jb
mov
cmpsb
add
bnd
xchg
mov
mov
add
into
cmp
fdiv
adc
jnp
jp
add
jge
imul
xor
mov
push
dec
stos
popa
ret
add
mov
mov
loop
imul
pop
xlat
hlt
test
std
and
icebp
mov
test
jle
hlt
lret
sbb
adc
mov
sub
or
pop
jns
fdivl
ss
rol
iret
imul
aam
pop
push
fwait
lret
inc
push
lods
orb
cmpsb
lods
idiv
outsl
or
push
outsb
add
ss
loopne
aam
pop
mov
daa
fildll
inc
outsl
mov
sbbb
fistl
xchg
mov
jecxz
xor
lret
mov
cmc
imull
das
mov
pop
mov
jmp
dec
mov
aad
js
aas
into
xor
ret
mov
dec
ja
xlat
mull
xchg
fisttpl
es
lds
jo
lods
jge
lea
cmpsl
dec
sbb
cmpsb
push
rolb
add
cmp
lea
pop
nop
mov
sbb
push
popf
lahf
aam
lea
push
jo
mov
enter
aad
mov
pop
dec
cli
cmp
cmpsb
outsl
shl
xchg
aaa
mov
es
popf
outsb
pop
sub
mov
shll
cwtl
push
lret
mov
cwtl
add
xor
inc
mov
sti
sub
mov
inc
cmp
fnstenv
bound
loope
push
push
push
jbe
cmp
test
cltd
mov
in
adc
pop
cwtl
neg
jnp
pop
mov
fcoml
sbb
shlb
pop
into
aas
cli
mov
lahf
outsl
in
filds
pusha
pusha
cltd
mov
fbstp
or
jp
mov
sarb
aam
rorl
or
sbb
push
movsb
jne
adc
cwtl
cli
cld
and
insl
sub
mov
sbb
mov
lret
popa
jle
mov
inc
mov
and
mov
scas
mov
push
sbb
mov
jne
adc
out
sahf
mov
or
repz
sti
add
cmp
in
fidivrl
jp
mov
sarl
cli
shl
jno
negb
js
fistl
push
popa
pop
sbb
push
or
out
or
or
add
insl
test
cld
pop
cmp
adc
aam
cld
inc
aas
sub
mov
mov
jae
and
sbb
lds
jl
jbe
sbbb
cmc
testb
xchg
popa
std
sub
mov
dec
push
imul
cwtl
jg
cmp
aad
sbb
jno
cli
iret
pop
int
cld
cltd
ljmp
mov
leave
sub
pop
movsl
or
xor
sahf
cmp
stos
mov
vpacksswb
cmp
and
fisttpll
xlat
lret
bswap
push
in
jae
dec
mov
pop
pusha
test
mov
sub
ret
xchg
mov
pop
cmp
mov
idiv
cwtl
jb
jns
cmc
jecxz
xchg
cli
jl
add
mov
xchg
dec
mov
daa
jp
ljmp
mov
adc
fnstcw
ss
hlt
decb
fdivr
movsl
pop
push
ret
pushf
push
daa
jne
add
jns
jp
addr16
sti
xchg
negb
pop
adc
mov
mov
push
mov
xor
fnsave
aam
inc
mov
sbb
and
mov
stos
mov
xchg
add
out
mov
push
imul
fisubrl
ds
sub
ret
xchg
loope
icebp
in
jbe
inc
push
push
das
sti
rorb
push
inc
mov
cmp
les
dec
subb
sbbl
jns
and
push
sbb
lret
mov
cwtl
gs
xor
inc
dec
cli
lds
addr16
fiadds
js
mov
inc
push
adc
xchg
imul
imul
jmp
popf
loop
inc
jmp
cs
lock
push
lcall
inc
fildll
or
mov
stos
or
inc
pop
js
sub
loopne
cmp
push
insb
aas
fs
xchg
mov
xchg
adc
lret
push
pop
jae
xchg
xor
insl
cmc
jae
xchg
orl
xor
aam
jp
xor
fdivs
mov
mov
js
sahf
xor
test
lcall
jno
or
inc
filds
lret
push
sbb
movsb
subl
or
andb
fwait
xor
sub
divl
or
hlt
xor
adc
test
in
nop
pop
push
inc
push
jae
pop
test
je
ret
shl
mov
cwtl
insl
pop
mov
mov
sub
push
lds
and
das
mov
add
out
inc
orl
and
xor
pushf
call
lcall
inc
mov
test
in
loop
adcb
cmp
cmpsb
aam
addr16
sub
mov
popa
loope
or
add
daa
inc
push
daa
hlt
jno
std
gs
xor
xor
aaa
or
inc
fisttps
jae
cmp
and
mov
test
or
fimull
cmpsl
sbb
add
mov
test
sbbb
imul
test
fnstcw
pop
push
stos
rcrb
cmpsb
or
sahf
mov
mov
push
rolb
jae
jne
mov
in
ljmp
mov
dec
mov
mov
inc
add
movsb
xchg
repnz
push
pop
dec
push
mov
mov
mov
movsl
ret
jge
push
cmp
jo
push
push
push
daa
jnp
push
mov
loop
decb
or
out
lahf
mov
iret
out
in
mov
and
sub
mov
or
mov
and
push
xor
rorl
add
dec
adc
fwait
jbe
lcall
decb
out
dec
push
xorl
out
pop
xchg
dec
mov
push
and
dec
mov
cmp
movsb
or
shll
imul
xor
nop
add
test
xor
pop
sbb
pushf
adc
sahf
jnp
fldt
jae
jo
pop
sub
jo
mov
clc
mov
xor
mov
push
lods
push
rcrb
in
add
ljmp
jo
mov
imul
gs
daa
adc
out
dec
mov
je
std
imull
mul
cmpb
sbb
lret
out
cmp
sub
dec
inc
sub
push
es
pop
mov
pop
sub
mov
sahf
sub
std
and
pop
fisubrs
decl
add
fiaddl
pop
lcall
cmp
jbe
sub
sub
inc
sub
lods
jns
fdivl
dec
leave
cmp
jg
ljmp
pop
cld
push
pop
gs
scas
sbb
int3
or
pushf
lds
les
movsb
addr16
inc
loop
mov
adc
xchg
ficomps
mov
into
scas
cmp
inc
sub
movsl
mov
push
xlat
out
rorb
int3
cmp
insb
lods
es
inc
in
pop
push
xchg
jg
dec
rcrl
dec
jg
xchg
push
sbb
inc
adcb
inc
call
into
ret
leave
xchg
mov
hlt
xor
mov
cwtl
sbb
cld
xchg
mov
sub
mov
xchg
mov
mov
sub
hlt
or
pop
push
pop
movsl
mov
push
rorl
or
and
push
jno
sub
ror
xchg
ja
es
mov
bound
xor
mov
insb
dec
icebp
stc
xchg
push
pushf
push
jbe
scas
dec
mov
sbb
adc
in
shrb
fistpl
sbb
cld
fidivs
rol
lret
test
mov
inc
dec
sbb
jge
ficomps
sub
out
push
sbb
cli
push
or
push
push
cs
dec
jmp
inc
mov
lcall
loopne
mov
xchg
xchg
mov
and
or
test
jmp
fwait
or
jno
sahf
inc
dec
jnp
inc
mov
call
aad
inc
movsl
repnz
scas
in
shl
lds
push
cmpsb
addl
test
mov
mov
cltd
dec
cld
xchg
lcall
push
or
sbb
sub
dec
add
adc
sbb
aas
lret
add
repnz
sub
cmp
call
or
push
cmpsl
fsubr
inc
ret
fldpi
and
test
call
nop
inc
loopne
pop
addr16
outsl
cltd
imul
jmp
adc
push
add
mov
push
hlt
jns
data16
movsb
adc
add
push
ljmp
xor
push
fwait
mov
cmpsb
sti
lods
insl
dec
cwtl
jo
leave
cmp
mov
das
orl
or
addr16
in
adc
cmp
add
pop
sub
dec
lea
mov
fsts
add
les
xchg
add
adc
fs
fs
sub
jmp
mov
lea
xor
and
cmc
sahf
int
and
sub
aaa
jp
std
cmp
lea
cmp
sub
mov
scas
mov
mov
jo
pop
or
fsts
cmpb
imul
jg
mov
incb
imulb
add
sub
es
aad
scas
mov
adc
mov
xorl
cmc
sbb
cmp
pop
cmpsl
add
in
aas
xchg
inc
in
fstps
fists
gs
imul
inc
loope
adc
sub
addr16
sub
xchg
inc
pop
adc
push
mov
popf
dec
jge
dec
inc
and
xchg
jl
mov
push
movsb
dec
in
mov
xchg
pop
inc
popf
fstps
aas
les
fwait
mov
dec
daa
ja
xor
outsl
push
fdivrl
jg
sar
mov
dec
mov
xchg
addr16
icebp
mov
jno
fildll
lock
push
jne
inc
rcrb
mov
iret
adc
push
jnp
out
fstpl
mov
xor
and
mov
cli
or
ret
sar
push
xchg
fnsave
loop
in
pop
enter
bswap
insl
hlt
mov
fisubs
xor
lret
jge
in
dec
pop
adc
pop
push
repnz
lods
lret
out
mov
scas
arpl
mov
jno
sub
lret
cmp
sahf
xchg
out
and
adc
dec
adc
sbb
fcoml
lret
mov
aad
xchg
test
ljmp
push
jno
insb
and
jno
mov
je
cmc
push
push
call
dec
insb
ret
xor
push
push
mov
cltd
jne
jg
outsb
imul
dec
dec
rcll
pop
divl
push
xor
adc
imul
call
repz
test
sahf
je
and
add
gs
cwtl
call
xchg
jecxz
data16
mov
fnsave
das
not
pop
cmpsl
icebp
xor
xor
lods
leave
mov
pop
mov
inc
cbtw
leave
dec
repnz
in
clc
or
mov
in
sarl
movb
roll
mov
cmpsb
mov
mov
pusha
or
mov
arpl
pop
or
xchg
lds
ret
insb
xor
pop
fidivrl
cmc
cmp
push
jbe
cmp
mov
push
adc
cmpsb
inc
sbb
cmp
in
les
fcompl
adc
fwait
arpl
std
jo
push
movsb
pop
adc
js
cmpl
sbb
jae
aam
adc
addr16
mov
pop
xor
packssdw
insb
lods
imul
stc
arpl
hlt
lds
jae
mov
mov
mov
movsl
gs
and
mov
aad
gs
and
pop
fdivl
add
ficoms
call
or
mov
shll
or
mov
adc
adc
mov
orb
rcll
movsl
lds
adc
and
mov
inc
mov
cltd
xchg
cmp
ret
push
cmp
nop
cltd
rcrb
mov
popf
add
or
fmull
mov
jb
xchg
pop
push
inc
xor
sarb
dec
cmpsl
das
dec
fucomip
xor
int3
std
rorl
imul
ret
mov
or
leave
cmpsb
xor
popf
mov
inc
jge
das
mov
sub
movsb
or
aas
sbb
sti
clc
push
push
sub
mov
sahf
stc
dec
test
jle
lods
mov
jno
sub
nop
fbstp
cli
cmp
add
sbb
sbb
mov
in
ficomps
xor
dec
dec
mov
lea
cmp
adc
arpl
pusha
lcall
icebp
out
fs
cmp
ret
int
inc
mov
push
dec
xchg
movsb
jo
inc
xor
add
mov
fldt
repz
push
jecxz
mov
in
pushl
cld
in
mov
cmp
cld
mov
mov
scas
cmp
test
inc
lock
aad
je
cmpsb
sub
call
or
pop
cmp
xor
xchg
popf
shll
rorl
xor
mov
lods
int
pop
insb
push
or
fiaddl
pop
push
in
adc
lods
cmp
sbb
fxch
test
iret
stc
lods
cmp
add
rol
xchg
jle
mov
push
mov
imul
sbb
andb
xor
ret
lcall
ds
mov
cmp
mov
cs
cs
xlat
xchg
out
sub
fcmovb
aam
inc
sti
scas
fcomip
fcomps
sbb
repnz
insl
add
negb
ljmp
mov
add
fs
mov
xchg
test
ret
fistps
and
dec
sbb
pop
mov
shlb
outsb
outsl
and
sbb
mov
xor
jne
inc
pop
push
mov
sub
sbb
jb
dec
out
jle
jl
inc
aas
shll
mov
jle
lret
jg
nop
xor
addr16
pushf
sbb
pop
cmp
jge
fwait
mov
push
pop
lods
fstl
push
pop
dec
inc
cmp
inc
mov
mov
and
push
ljmp
sbb
imul
loope
aaa
push
mov
cmp
mov
jle
lret
iret
push
sbb
das
out
jo
clc
sbb
xchg
cmp
loope
lcall
sub
mov
mov
and
lods
adc
sbb
pop
inc
sbb
dec
mov
pop
outsb
add
sub
push
push
aad
xchg
sbb
xor
sub
popa
cmpsl
pop
adc
cmp
add
sahf
pop
lret
add
add
jmp
sarb
mov
push
dec
icebp
and
and
mov
cmpsb
xor
or
mov
lock
mov
mov
pop
int3
lahf
mov
inc
cld
push
inc
adc
rcrb
mov
js
insl
insl
dec
mov
mov
mov
imul
ss
out
clc
int3
mov
fdiv
mov
dec
push
pop
sarl
xchg
scas
pop
push
arpl
es
adc
xchg
pop
pop
sbb
sub
mov
push
jp
cmpsl
enter
icebp
mov
js
add
xchg
stc
aam
push
int
and
decl
in
data16
scas
js
inc
sbb
pop
dec
inc
inc
pop
cmp
add
test
ds
mov
dec
packsswb
in
pop
insb
push
bsr
mov
movsl
and
lods
mov
sti
pop
jecxz
in
jnp
out
aad
inc
add
ss
insb
push
aam
xor
fs
gs
mov
mov
ljmp
cmp
push
xor
add
mov
cmpsb
pop
mov
outsl
jmp
lock
jae
pop
aam
jne
popf
sbb
nop
inc
filds
dec
or
test
rcrb
push
push
mov
adc
loopne
mov
lods
cmpsl
add
outsb
popf
shrl
xor
cmpsl
fnstcw
push
cmpsb
mov
dec
or
xor
xchg
and
fxch
lock
out
ljmp
inc
call
add
popa
filds
fs
in
lods
mov
pop
imul
push
fadds
mov
fs
add
sbbl
iret
mov
rdtsc
icebp
bound
in
mov
mov
cltd
mov
hlt
je
xchg
or
push
aam
jb
add
sub
xchg
repnz
and
lret
pop
insl
int3
mov
and
mov
dec
pop
sub
add
push
cltd
test
lods
pop
jle,pn
push
pop
arpl
mov
jae
ret
repnz
mov
mov
jns
mov
xchg
push
mov
xlat
arpl
mov
xor
cmp
or
imul
and
add
cs
xor
shr
mov
pop
jnp
xchg
frstor
jne
and
out
sub
sub
sbb
ficomps
mov
mov
dec
xor
out
fbld
adc
fldl
dec
jnp
add
jno
out
fldl
and
or
repz
popa
lret
push
xor
jge
mov
and
test
daa
or
movsl
xor
bound
clc
rcrl
imul
pushl
jo
lahf
pop
dec
aaa
les
and
idivl
lds
mov
into
je
dec
fcomps
and
fnstenv
loopne
dec
loop
ljmp
cmpsl
xchg
xchg
cs
adc
inc
push
jnp
jp
mov
push
mov
mov
mov
jg
icebp
pushf
dec
out
das
xchg
cld
subb
jle
mov
jns
or
sti
adc
out
or
mov
sti
jmp
mov
dec
inc
lock
and
dec
icebp
xor
dec
adc
in
cmp
xlat
cwtl
adc
std
out
sti
lods
shrb
xor
fsubrs
hlt
pop
data16
sub
lds
dec
hlt
outsb
leave
push
xchg
add
jo,pt
scas
stos
or
rolb
or
mov
fmul
fdiv
cmp
or
in
dec
fstpt
adc
in
loope
fldcw
jne
xor
xchg
sub
sbb
jnp
xlat
dec
jle
mov
lcall
test
push
mov
test
pop
repz
jge
mov
in
enter
lret
mov
lahf
cmpsl
aad
xor
dec
jo
dec
lds
add
dec
jmp
rclb
sbb
pop
loop
jmp
add
cltd
cmpb
pop
sub
xor
addr16
dec
ljmp
popf
scas
jmp
add
sbb
sti
or
je
jl
mov
mov
add
ja
or
aas
arpl
bound
cwtl
sub
fnstenv
fcom
xorl
cmp
jns
sub
cmc
xchg
sbb
mov
jle
es
adc
pop
nop
icebp
sti
jg
xor
add
cmp
or
dec
cli
pusha
mov
lret
jno
xor
lcall
lcall
cmc
push
or
out
movsl
pop
sarl
gs
mul
push
mov
sbb
inc
sub
mov
and
data16
lret
add
out
xchg
inc
push
repz
test
pushf
fbld
inc
mov
dec
ds
pop
fwait
popl
mov
stc
push
sub
xor
jecxz
aas
xor
aad
loope
and
push
aad
dec
mov
ds
leave
lret
shlb
push
nop
arpl
daa
mov
jo
mov
out
outsb
mov
or
jg
jmp
fcomip
xchg
movsl
jbe
shrl
mov
and
stc
dec
mov
sbb
push
adc
push
sbb
std
pop
cmpsb
push
leave
mov
adcl
dec
fcmovnb
aas
fdiv
mov
clc
pushf
pop
cmpsb
xor
gs
jge
sbb
xlat
cli
push
push
hlt
xchg
jp
clc
or
push
fsubl
lods
add
dec
int
jnp
jnp
fstpt
in
dec
sub
push
rcrb
add
jb
mov
inc
js
or
mov
scas
fsubl
loop
mov
dec
js
hlt
imul
stc
pop
in
mov
dec
pushf
sub
sti
mov
hlt
fisubl
lock
mov
js
fimuls
jbe
cld
test
cld
call
xchg
xchg
or
cmp
push
das
push
dec
dec
jne
repz
mov
outsb
mov
ficomps
decb
mov
inc
add
fs
pop
add
xor
mov
ja
in
mov
adc
cmpl
notb
mov
and
fwait
gs
jp
jns
sbb
jb
call
not
je
mov
inc
mov
xor
ljmp
aaa
mov
stos
xlat
scas
jmp
pop
mov
inc
imul
or
ficoml
test
in
pushf
fistps
outsl
stos
pop
dec
push
xlat
aaa
inc
loope
and
mov
push
ficoml
mov
add
cld
and
movntq
push
es
jle,pn
adc
aaa
leave
and
adc
jg
imul
lock
push
jne
jecxz
lret
sbb
mov
insb
leave
shl
push
jmp
imul
pop
cmc
addr16
inc
je
aad
insb
shr
fdiv
inc
aaa
out
pop
in
andl
mov
ret
or
or
lea
aaa
pop
jl
call
push
mov
mov
out
rcl
pop
mov
dec
into
imul
cmc
sbb
ret
testb
ret
mov
push
in
hlt
js
fildll
xchg
in
adc
mov
repz
in
popf
jae
nop
xor
dec
scas
pop
imul
inc
mov
inc
test
push
jl
xor
fwait
lock
jns
shll
addr16
push
orb
fmuls
sbb
ljmp
js
pop
jb
add
movsb
xor
mov
jnp
or
cmc
fwait
xorb
xchg
out
mov
addr16
test
lock
inc
push
int
add
fnstcw
sbb
cmpsl
cmpsl
out
aas
fmul
popf
mov
arpl
or
cmp
cltd
lcall
xor
popf
xor
sub
jmp
xor
fwait
xor
daa
mov
mov
in
adc
or
in
shll
movsl
xlat
push
pop
dec
in
or
lret
divl
pop
scas
xor
push
mov
enter
negl
out
mov
rorb
cwtl
mov
cltd
sbb
insl
addr16
outsb
sbb
jle
shll
xor
int3
lods
mov
cmp
icebp
inc
mov
lahf
mov
add
push
mov
xchg
pushf
sbb
es
hlt
push
sahf
and
int3
je
cmpxchg8b
lret
pushf
and
jbe
add
out
les
jne
adc
scas
ljmp
sbb
cwtl
cld
fwait
push
mov
jecxz
mov
test
je
cwtl
cs
jo,pn
mov
adcl
sbb
in
jmp
inc
or
test
jo
mov
adc
add
scas
mov
inc
xchg
xor
dec
jne
outsl
les
sub
aaa
or
fs
pop
shlb
and
push
jns
jbe
xchg
ret
mov
xor
push
test
xchg
mov
sbb
jle
adc
aam
push
mov
js
adc
add
jle
ret
mov
push
xor
nop
rol
or
std
mov
pop
int3
lods
hlt
repnz
insb
sbb
push
cmpsb
clc
jle
lcall
out
cwtl
lea
mov
adc
push
pushl
push
clc
fldt
fwait
cld
loop
add
xor
jecxz
sub
sbb
test
movsb
and
cltd
xchg
dec
sub
daa
jmp
ret
negb
adc
cmp
pop
adc
dec
adc
dec
pop
sub
jns
fdivrl
sti
shrb
repnz
rcl
fwait
inc
sub
push
cmp
sahf
cli
lret
roll
lods
lea
ss
mov
pop
fistps
sbb
jecxz
lea
popf
sbb
stos
ret
mov
dec
sbbb
sub
jp
lds
rcr
iret
sub
lea
hlt
shll
inc
sub
std
std
or
pop
and
data16
and
mov
push
shlb
loope
popf
dec
jp
jns
cmc
lods
ds
mov
lods
xchg
scas
jne
mov
movsb
jmp
mov
pop
aas
gs
or
in
sbb
inc
js
mov
fs
jecxz
repz
in
inc
cmp
xor
pop
fs
insl
add
test
add
and
mov
push
into
ds
or
jp
mov
pop
cwtl
cmp
inc
popa
xchg
xchg
std
xor
pusha
loopne
aad
les
sub
dec
sahf
or
cmp
jge
in
sbb
inc
lea
lret
sbb
aad
or
aas
cmc
jl
xchg
sbb
add
pushf
jl,pt
cmp
movsb
mov
xlat
push
and
xor
push
sahf
lock
ret
push
out
xchg
jmp
mov
rcr
inc
hlt
mov
and
sti
lods
loopne
out
pop
cmpsl
adc
repz
arpl
jp
or
cmpsb
jle
in
je
inc
ret
pop
ror
popf
mov
aad
fdivl
cmp
add
jle
fwait
cld
ret
iret
jg
pop
ret
faddp
loopne
cltd
cld
xorb
push
test
sub
xor
inc
pop
jecxz
push
sarl
xchg
mov
rclb
sub
aad
jg
xchg
es
bound
cmp
sub
xlat
in
out
jns
cmp
cs
push
cmp
outsl
rcll
add
pop
int
cltd
mov
mov
jo
mov
shlb
pop
cvtdq2ps
jae,pt
stos
out
adc
dec
js
inc
stos
sub
loopne
jo
and
sbb
mov
adc
jge
adc
dec
xchg
inc
xchg
int
push
or
mov
test
sbb
call
ja
xchg
mov
and
mov
push
add
adc
inc
sti
or
fisubrl
mov
jne
mov
jg
lcall
adc
fdivs
mov
pop
push
movsb
push
or
test
lods
fs
sarb
xor
cmp
add
scas
mov
nop
lret
call
in
mov
fsubrs
iret
sub
into
das
push
in
mov
add
sbb
out
sub
into
leave
mov
test
xlat
xchg
jns
aaa
daa
mov
stc
call
fbstp
cli
cltd
cmp
roll
inc
push
pop
fidivs
xchg
shll
in
dec
cmp
ss
adc
lds
dec
adc
jb
jl
pop
cs
popf
ret
mov
add
popf
adc
cmp
push
pop
pop
lock
mov
dec
sub
pop
in
iret
mov
cli
sarl
push
dec
pop
das
ds
mov
mov
repz
sbbb
fs
dec
daa
and
xlat
arpl
gs
aas
int
repz
orb
outsb
insb
imul
mov
cmp
lret
jmp
add
sub
adc
pop
dec
incl
mov
push
jp
sbb
movsb
xchg
sbb
mov
addr16
ds
and
inc
jmp
sbb
insb
stos
adc
jbe
mov
addr16
sbb
das
sbb
es
sahf
cmp
xor
sbb
rcrb
test
es
lea
jle
jnp
sbb
push
inc
pop
and
mov
jb
adc
xor
repz
shrd
mov
sti
fnstenv
adcb
gs
mov
popa
xor
jge
adc
xchg
mov
jecxz
xchg
sahf
mov
mov
jecxz
addr16
or
and
ret
jl
sbb
out
addr16
in
xchg
repz
dec
inc
jle
ja
xor
imul
mov
mov
andl
fistps
and
lahf
mov
xor
mov
imulb
sbb
pop
lods
mov
inc
dec
push
adc
into
cmp
mov
fldl
xor
add
xchg
in
rcr
jb
pop
test
out
sbb
dec
push
inc
nop
pop
sub
int3
ds
pusha
outsl
sahf
orb
jo
pop
and
aaa
inc
ds
aas
or
icebp
outsb
outsb
push
add
and
mov
iret
cmc
pop
aam
cmp
int3
push
jnp
pop
lcall
rorb
sbb
shll
in
push
xchg
ret
inc
xor
jg
adc
ret
bound
xchg
shll
insl
movsl
pcmpgtw
insl
test
repnz
insb
popf
fsts
das
cltd
bound
jg
mov
cmc
mov
cs
xor
add
sub
int
out
jnp
leave
jno
aas
push
aaa
mov
cmp
mov
outsb
aaa
pop
aas
inc
cmpsl
iret
and
jg
dec
pop
stos
in
int3
pop
in
inc
fisubl
mov
inc
and
pop
mov
enter
xchg
xor
stc
and
dec
mov
jmp
dec
dec
and
xchg
cs
int
movsl
enter
mov
pop
and
ja
mov
jg
ja
mov
hlt
loopne
sub
iret
jne
sub
adc
push
adc
call
push
dec
cs
ja
test
cmp
out
mov
mov
nop
jbe
es
pop
pop
movsl
jbe
in
mov
mov
clc
inc
mov
pop
sub
xor
cmpsb
jns
inc
shlb
push
dec
xor
clc
data16
loope
xor
enter
push
in
enter
xchg
or
xor
mov
add
or
mov
lret
lea
xchg
add
in
and
leave
mov
aas
jo
fs
loopne
in
les
dec
hlt
mov
lea
jge
mov
rorb
and
mov
xor
xchg
out
pop
fsubrl
mov
cmp
sbb
xor
stos
test
xchg
icebp
add
cltd
cld
sub
cmpsl
pop
jp
mov
jmp
cld
mov
ret
dec
xchg
fdivl
stc
and
sbb
sbb
sbbl
pop
daa
dec
push
cwtl
icebp
xchg
je
mov
sub
mov
movsl
lds
and
mov
or
adc
and
mov
or
xor
repz
adc
maxps
aaa
arpl
mov
dec
mov
or
das
jns
xchg
cmpsl
sbb
test
cmp
mov
lret
fs
or
xor
sub
inc
gs
mov
gs
xchg
jmp
jge
js
adc
adc
sbb
jne
fcmovnb
aas
push
push
mov
push
cmp
jg
jp
aam
repnz
sub
cli
dec
ljmp
add
xor
pop
or
aam
mov
push
bound
rol
loop
adc
outsb
sbb
lahf
jbe
xor
mul
aad
xor
xor
cwtl
xchg
pushf
stc
push
mov
aas
push
push
ljmp
dec
cmp
pop
daa
jmp
jns
fucomp
inc
ret
popa
and
popf
jle
dec
loop
ds
out
mov
sar
ja
imul
dec
testl
cltd
xchg
imul
dec
vpcmpgtb
pop
cmp
jbe
push
cmpsl
into
addr16
cmp
push
xchg
jl
fwait
xor
cmp
scas
xchg
mov
push
scas
decl
pop
xchg
int3
ficomps
cmp
adcl
lock
fwait
insl
bswap
fcoml
lds
ljmp
xor
pushf
xchg
fmuls
dec
sbb
sub
add
fs
inc
mov
test
pop
pop
in
and
mov
cmp
cmp
mov
mov
inc
fistpll
sti
stc
adc
or
lcall
nop
movsb
divl
daa
aas
dec
mov
add
movsb
hlt
pop
dec
fistpll
jg
mov
sbb
jecxz
mov
movsl
je
aad
int
les
repz
insb
scas
out
lret
or
sub
test
rcr
inc
fisttpll
loope
sbb
adc
shlb
or
out
pop
pop
daa
movb
push
sub
adc
and
imul
std
mov
ret
in
mov
shlb
inc
xchg
daa
and
adc
adc
or
mov
ret
jmp
lahf
lds
lds
movsl
xchg
js
dec
sub
int3
jno
xchg
stos
pop
jbe
jo
and
mov
xchg
sub
repnz
mov
or
mov
fistps
mov
sub
pop
cltd
shll
jmp
push
jecxz
adc
pop
test
push
and
jecxz
ret
lock
jmp
mov
and
cmpsb
pop
mov
gs
insb
push
cmc
lea
adc
jno
jmp
xor
sbb
sub
rclb
call
push
idivl
js
mov
test
sub
fists
add
dec
xorl
aad
or
movsb
jge
xrelease
add
negb
mov
dec
jle
cli
imul
pop
inc
dec
cmp
xor
cmp
mov
push
cmp
movl
sbb
xchg
sub
lcall
ss
js
mov
add
int3
stc
sbb
gs
aaa
xchg
icebp
or
xchg
ljmp
repnz
xchg
and
add
clc
push
cs
dec
in
ss
mov
cmp
ja
inc
xor
xchg
lods
mov
fxch
fcoms
clc
push
rclb
dec
mov
push
and
mull
or
adc
imul
jmp
dec
xchg
ds
cld
jbe
adc
inc
ja
insl
mov
nop
xchg
or
repnz
inc
in
dec
loopne
outsl
inc
lods
push
test
out
or
jo
jne
test
xor
push
lret
call
inc
lea
sbb
nop
cmp
mov
lods
jl
orl
cmpsl
iret
je
and
std
repz
enter
test
into
push
push
sub
clc
add
mov
loope
adc
mov
cmpsl
in
ljmp
push
outsl
std
push
shlb
sbb
pusha
jnp
push
es
outsl
and
add
outsb
xor
pop
dec
aas
scas
inc
sbb
sub
fs
int
insb
fisttps
lock
jp
inc
int3
dec
testb
into
jae
jae
andl
popa
aaa
mov
call
frstor
mov
shlb
pop
clc
sub
dec
mov
push
jae
mov
cld
dec
mov
dec
push
push
pop
popa
push
shrl
add
mov
xchg
aas
adc
cwtl
pop
sbbl
or
push
xchg
jb
in
xchg
out
pop
popl
lods
or
sub
shll
and
aad
imul
imul
and
sub
jo
cmp
movsl
add
test
and
int
stos
pop
lock
cmpsl
adcl
in
out
daa
inc
xor
sub
push
cmpsl
sub
mov
sub
out
stos
xchg
xchg
xchg
dec
out
shll
fneni(8087
lds
fsubr
mov
data16
mov
jno
mov
push
ffreep
jecxz
mov
pop
lods
dec
fildl
xor
aaa
mov
test
dec
data16
jecxz
mov
xor
psrld
cmp
sbb
xchg
dec
inc
cmp
push
xchg
lea
add
sahf
roll
data16
addr16
stos
inc
sub
xor
cmp
lock
aad
test
push
je
pop
nop
jmp
add
cli
pop
xor
fs
xchg
pop
cmp
pop
cltd
dec
adc
push
xlat
cmpsb
and
das
std
mov
mov
std
adc
lods
mov
fsubrs
jle
add
idivb
cli
and
and
sti
adcl
mov
ljmp
push
incb
cmpl
subb
mov
xchg
orl
movsl
lds
adc
xchg
pop
xadd
xor
xlat
pushf
sbb
mov
mov
pop
sub
enter
sub
push
loopne
and
jnp
push
push
stos
adc
cli
ljmp
push
jb
popf
test
dec
push
les
mov
pusha
das
sub
rorb
adc
dec
adc
inc
xorl
out
test
sbb
cmp
cmc
cmc
cmp
dec
push
aas
jnp
lahf
lcall
jle
fisubrs
scas
or
aam
dec
pushf
lods
imul
repz
loop
iret
cmc
xchg
mov
cli
loopne
dec
repnz
cmp
in
fchs
mov
xchg
pop
pop
or
lea
jo
mov
mov
fcomps
outsb
or
mov
rcrl
and
inc
int3
jne
lea
cld
mov
or
sub
mov
adc
fs
loop
fdivrl
mov
lcall
pop
lods
inc
out
cmp
mov
fwait
jns
dec
rcll
pop
outsl
or
cmp
push
cmp
xchg
or
sub
imul
mov
cwtl
pop
stc
mov
dec
into
fisubl
jg
adcl
fst
sbb
or
sbb
xor
test
lret
push
mov
pop
mov
mov
push
xchg
popf
sub
pusha
xor
imul
mov
cmp
icebp
aad
mov
addb
pop
mov
and
adc
sub
add
addb
stc
sbb
clc
mov
rol
adc
cmp
ja
pop
outsl
xrelease
outsb
stos
xor
popf
mov
and
shll
lret
or
push
dec
add
lods
popf
sbb
sub
das
sub
mov
or
in
jmp
aad
mov
clc
push
dec
in
jno
cld
xchg
arpl
test
dec
jae
add
mov
push
insl
xlat
xorl
mov
call
femms
pop
add
mov
mov
mov
pop
xor
pop
arpl
sbb
hlt
rcrb
jno
pusha
mov
mov
test
inc
mov
shr
das
push
imul
out
sub
and
and
dec
int3
out
jecxz
cvtpi2ps
scas
dec
fstps
lahf
xchg
mov
repnz
xchg
cmovae
sub
mov
push
adc
and
movsl
mov
fidivrs
or
lcall
fbstp
or
pop
sbb
lods
insl
daa
repz
push
adc
jmp
aad
mov
cltd
movsl
jg
jmp
clc
sub
cmp
gs
xchg
lret
xchg
xchg
not
jmp
mov
shll
fildl
dec
sub
xlat
leave
and
mov
jge
ljmp
loop
lret
data16
push
in
je
sbb
add
or
lock
js
mov
stos
mov
aas
add
add
pushf
fs
sti
rcr
ficomps
push
scas
test
xor
rcl
repz
stos
jns
or
cmp
popa
inc
cmp
into
aaa
jmp
or
jp
sbbb
sbb
inc
push
sbb
mov
pop
cld
push
stc
movsb
shll
repnz
idivl
pop
aas
ss
stos
jmp
mov
incb
std
inc
cld
xchg
pusha
movl
jmp
mov
and
mov
nop
rclb
push
aad
mov
dec
mov
scas
insb
in
dec
bndstx
stos
loop
dec
ret
push
pop
mov
xcrypt-ofb
mov
push
xchg
sub
pop
repnz
rolb
xor
pop
ljmp
sbb
adc
mov
push
lret
nop
xlat
or
addr16
sti
jmp
fnstsw
jns
push
cmp
das
pop
pop
fldl
mov
sbb
cld
mov
int
fdivr
test
inc
cmp
pop
push
stc
les
inc
incl
xchg
in
pop
imul
mov
xor
iret
stos
cmp
fcomps
inc
sub
xchg
push
sbb
or
fstpl
pop
add
loope
cmp
sahf
mov
mov
std
or
add
lods
pusha
js
repz
jo
ja
out
sub
adc
and
mov
adc
mov
movsb
xor
or
in
sub
push
dec
pushf
cld
arpl
dec
cmp
dec
rcrb
dec
push
jne
xchg
lea
fsubrs
and
dec
jo
icebp
mov
mov
mov
adc
dec
sbb
xor
push
mul
test
aad
int3
pushl
mov
repnz
lds
mov
dec
cmpsl
mov
pop
inc
mov
push
fnstenv
movsl
xchg
mov
ljmp
inc
aam
add
mov
xor
sub
cmp
cli
xlat
fs
push
mov
mov
or
xor
cwtl
mov
mov
das
mov
cs
push
lss
ja
cli
dec
pop
inc
push
and
popa
mov
push
sbb
out
ja
shll
dec
and
imul
aam
xchg
lahf
mov
cmp
jge
mov
test
inc
xor
pushf
push
and
jne
ss
and
or
lods
loope
push
mov
pop
push
or
mov
add
inc
testb
push
jnp
and
sbb
adc
lods
rorb
psubsw
in
push
fwait
repnz
xchg
cmp
jne
test
stos
in
lds
cltd
sub
dec
mov
cmc
jae
ds
and
aad
sub
pop
lea
inc
sub
push
cwtl
mov
roll
ret
xor
in
push
and
outsl
add
mov
jns
mov
mov
pop
cltd
lret
test
xchg
inc
cmpsb
adc
test
xorb
push
mov
or
lahf
pusha
jmp
xor
adc
sbb
mov
dec
insl
mov
je
subl
std
cmpl
icebp
xor
jne
int
sub
ss
incl
inc
adc
ret
xor
mov
mov
and
clc
data16
dec
cli
ret
test
jns
xlat
unpckhps
mov
cli
xor
hlt
jbe
mov
ficompl
in
sahf
push
dec
dec
out
and
cmp
cmp
loope
sbb
jno
jne
cmp
bound
neg
mov
jae
sbb
shlb
ljmp
or
popa
fsubl
jbe
data16
jo
pop
push
int
aad
in
mov
xor
inc
mov
popf
push
in
daa
mov
mov
sub
fwait
rcl
inc
push
jne
loopne
xor
int
mov
filds
push
int3
lds
inc
adc
sub
mov
inc
pop
dec
mov
gs
adc
rcr
in
sub
dec
fcoml
test
cmp
jno
inc
add
inc
stos
push
or
das
xchg
ds
cmp
fiaddl
les
push
pop
mov
pop
push
xor
xchg
call
popf
mov
cwtl
and
push
xlat
xchg
fisubs
sub
repz
popa
outsb
jmp
fcomps
push
sub
out
mov
or
icebp
shrb
sbb
push
mov
fdivp
movsl
loop
arpl
and
cli
mov
jp
cmp
out
es
push
push
test
sub
arpl
scas
jmp
add
add
pop
sahf
or
mov
loope
loope
xor
pop
cmpsl
mov
outsb
imul
push
pop
mov
scas
xorb
mov
mov
inc
inc
mov
js
lock
cmpsb
add
mov
lods
aaa
loope
mov
sahf
xor
jmp
das
decb
shrl
shl
pop
aad
push
cmp
das
jge
mov
pop
fs
in
imul
mov
and
nop
pusha
lds
and
leave
cs
jl
cli
sbb
fdivs
sub
iret
sti
sbb
inc
call
pop
adcb
push
dec
mov
xor
xor
sbb
ds
loop
xorb
mov
cmpb
mov
inc
lahf
xchg
mov
imul
mov
adc
addr16
lcall
in
fdivs
imul
mov
xorb
daa
and
js
adc
cs
arpl
fucompp
int
sbb
inc
ret
iret
lods
pushl
rclb
or
dec
or
push
mov
mov
insb
push
sub
cmp
jnp
xor
push
nop
dec
fs
nop
pop
sbb
push
jmp
aad
jle
add
xor
rclb
rolb
icebp
movb
dec
daa
mov
adc
es
xor
jge
imull
rolb
xor
mov
adc
xchg
dec
sbb
rolb
inc
and
xor
repz
mov
push
add
shll
pop
mov
jmp
or
leave
ljmp
add
push
mov
mov
jmp
jecxz
adc
and
movsl
pop
arpl
ss
and
cld
jle
movsl
jmp
pop
push
jmp
sub
sub
xor
push
xchg
enter
mov
sbb
sahf
inc
and
cmp
es
xor
movsb
dec
mov
lcall
imul
adc
inc
mov
es
push
sbb
mov
push
rcr
xchg
add
ret
test
adc
pop
faddl
mov
add
sbb
lods
dec
test
lock
and
inc
insl
sti
xor
jg
mov
xor
hlt
icebp
mov
pop
or
mov
testb
inc
mov
jl
jmp
hlt
out
shlb
movsl
cmpsl
inc
push
add
addr16
push
push
dec
mov
sub
adc
cmpsb
sbb
push
dec
adc
subl
push
jnp
sub
fs
adc
jno
jno
sub
adc
lcall
mov
repnz
fcoml
fsubrs
pop
fmuls
imul
xchg
movsl
push
jbe
popf
jno
cltd
mov
mov
push
fcoml
ss
test
fs
push
dec
pop
pop
mov
lahf
push
mov
mov
gs
sbb
pusha
mov
push
mov
loop
mov
popa
outsl
mov
sbb
pop
mov
mov
xor
push
xor
sbb
sub
in
jns
sub
jne
bound
dec
push
sbb
push
dec
add
xor
sahf
mov
movsb
rolb
call
pop
xchg
insl
shlb
xchg
mulb
loope
sbb
loop
xor
xor
lods
movsb
sub
xchg
into
xchg
pop
xchg
mov
jns
sbb
aas
stos
adc
push
mov
or
xchg
mov
adc
pop
jns
ss
cld
lods
ret
pusha
fidivrs
jg
iret
das
pop
dec
pop
aam
push
add
daa
iret
stc
mov
hlt
imul
push
mov
hlt
add
jp
lret
dec
xlat
fisttps
jmp
mov
scas
add
dec
fcmove
pop
out
or
insl
jge
imul
mov
sub
ret
mov
mov
and
daa
lahf
jge
adc
sbb
jg
je
and
stos
add
xor
pop
icebp
sbb
push
ds
sub
subb
pop
push
out
out
xorl
mov
sbb
mov
mov
fbld
push
out
rcrl
aas
or
sub
inc
mov
jmp
mov
add
jo
mov
negb
lods
mov
mov
jecxz
mov
dec
inc
loopne
cmp
leave
mov
sub
and
mov
push
pop
leave
leave
mov
jp
insl
pop
cmpsb
mov
push
loop
movsl
test
lret
arpl
not
ss
loop
std
sahf
adc
inc
hlt
loopne
loopne
xchg
movsl
into
in
mov
xor
rorb
sbb
mov
inc
add
and
shrb
and
outsb
addr16
push
lds
pop
lret
lahf
je
dec
cmp
sbb
repz
es
ss
lcall
mov
shll
ja
aam
sub
cmp
sarl
inc
or
cmc
xor
aad
adc
and
or
out
repz
sub
add
popf
xchg
and
fisubl
xlat
stos
push
inc
test
sub
scas
jbe
scas
or
and
sbb
fstl
inc
mov
cmp
pop
int3
bound
popa
push
push
sti
xchg
add
jp
and
int
cmpb
sub
notl
out
cli
or
inc
add
add
aas
scas
in
fistps
lods
inc
mov
cld
xor
jne
movsb
into
ja
inc
pop
gs
lea
xchg
mov
movsl
sub
jmp
mov
sbb
sbb
cld
xor
out
cli
jnp
mov
cmp
pusha
sbb
scas
pop
cmp
pushf
adc
aad
mov
insl
mov
inc
pop
or
dec
mov
dec
mov
mov
cld
or
shrl
aad
adc
and
out
test
cld
es
lahf
andl
es
mov
mov
jo
sub
push
aad
jle
scas
ret
add
fs
lcall
sbb
aam
inc
loope
or
mov
into
ss
loop
cmpsb
into
push
movsb
aam
cmpsl
sbb
cmc
sub
sub
sub
outsl
inc
fstl
and
mov
cmpsb
jno
shlb
arpl
mov
les
push
sub
mov
push
fcmovb
fmuls
mov
sub
loopne
add
adc
lock
pop
or
or
push
sub
in
cli
jmp
stc
jo
rcrl
mov
pushf
lods
icebp
aas
stos
and
lds
fbstp
or
adc
pop
imull
loopne
or
insb
adc
jne
sub
mov
es
mov
movsl
cld
fmulp
jp
pop
mov
popf
mov
popa
out
xor
cmpsl
bound
jns
rcrb
and
inc
adc
gs
movsl
cmp
sub
jecxz
ret
leave
push
fwait
icebp
mov
cmp
mov
scas
repnz
aas
inc
jle
sbb
dec
outsb
ja
fldt
repnz
xchg
sbb
inc
and
in
test
negl
adc
mov
into
in
jns
mov
imul
in
push
sub
cmp
into
imul
popa
lret
insl
cmpsb
fcomps
jo
test
push
jae
push
enter
jmp
iret
dec
shl
jg
or
cmp
jecxz
movsl
clc
sub
adc
fstp
inc
mov
cwtl
mov
outsb
push
shll
ds
dec
mov
and
loope
jge
in
test
push
mov
add
lods
jle
xor
neg
jg
bound
call
cmpsl
dec
push
jno
in
out
jmp
dec
xchg
add
movsl
dec
sbb
or
adc
push
loop
mov
jne
sub
xchg
dec
test
push
ja
dec
sub
inc
mov
bound
xchg
in
pop
cmp
sbb
xchg
pop
push
push
hlt
in
leave
cmp
adc
mov
xor
or
push
fistl
jg
xlat
loopne
repz
icebp
add
jge
jge
ljmp
adc
pop
sub
adc
addb
decl
repnz
push
ss
add
mov
fwait
fs
outsl
mov
pusha
fsubp
sbb
flds
testb
pop
and
or
fisttps
repz
add
jno
iret
divps
jnp
lahf
mov
xlat
js
adc
xchg
lods
lahf
mov
icebp
mov
mov
ret
inc
sbb
lods
xchg
mov
xor
addr16
xor
inc
cs
aaa
ljmp
mov
push
jne
sbb
pop
mov
call
mov
fs
push
clc
stos
xchg
adc
pop
shrb
push
scas
clc
sbb
push
repnz
cmpsb
xor
mov
xchg
fidivl
add
mov
out
xchg
test
repz
insl
les
mov
shr
fisubs
sub
sub
jg
sbb
lods
neg
mov
xor
xlat
scas
xor
lcall
shl
out
jg
outsl
les
xchg
dec
adc
adc
iret
jmp
adc
lds
inc
sbb
jp
loope
mulb
cmp
inc
clc
orb
add
xor
inc
insb
insl
sub
adc
xchg
aas
pop
fadds
jle
sbb
xchg
mov
inc
jg
adc
les
jae
pop
push
mov
push
movsb
adc
popa
int3
sarb
pop
xor
xchg
sub
ret
cmpsl
decl
add
jo
cld
aam
lods
iret
xor
inc
push
cmc
repnz
leave
or
mov
pop
repz
out
fsubl
xor
push
dec
in
sub
and
add
test
dec
jns
jl
cmp
sub
cmpsb
iret
add
in
leave
xor
sbb
lds
divb
or
int3
gs
popa
test
movsb
jl
pop
lcall
xchg
xor
fmull
add
mov
test
pop
push
sahf
mov
sub
mov
test
dec
add
lret
out
or
les
repz
pushf
pop
jbe
bound
pop
loopne
xor
jno
aad
jno
push
jbe
leave
in
mov
dec
call
cld
stc
pop
pop
das
shl
test
lahf
add
adc
mov
jns
fisttpll
sub
fadd
fiadds
jmp
jns
aaa
fdivrp
psubq
lret
mov
repnz
scas
js
scas
pop
cmp
jg
and
loope
pop
pop
sahf
fs
add
jb
or
mov
jle
jmp
popa
sub
mov
fadds
ret
ds
nop
adc
adc
push
je
lods
jge
xchg
sahf
or
push
in
xor
xor
cld
xchg
mov
mov
shll
cs
push
push
scas
fists
fnstenv
xchg
lcall
add
dec
xchg
push
fcoms
cs
jo
pushf
ficompl
ja
mov
insl
or
xchg
inc
lret
sub
adc
bound
aas
add
fisubrs
movsb
or
imul
das
mov
fcmovbe
jp
outsl
push
pushf
xor
out
ret
dec
je
loop
mov
push
icebp
out
cltd
scas
push
rcrb
pushf
cmp
jns
cmc
mov
lea
fbstp
in
andb
xlat
arpl
inc
aas
and
mov
jo
ds
mov
jecxz
pushf
push
bnd
out
cmc
lods
dec
push
mov
mov
adc
aaa
jle
sub
lret
mov
mov
jl
xor
imul
jg
xor
popa
mov
mov
adcl
lcall
xchg
flds
ds
insb
out
add
mov
push
lods
cwtl
jg
notb
sbb
les
add
cli
in
scas
or
adc
or
jl
cmp
sbb
sbb
jbe
fwait
movsl
add
fs
test
cmc
sbb
or
ret
daa
cmpsb
mov
and
mov
jno
dec
cmpsb
add
loope
fldenv
push
ljmp
adc
xchg
adc
insb
pop
jecxz
out
add
adc
xchg
out
popf
jb
and
test
lods
jns
xor
jo
outsl
mov
call
shrb
lcall
xor
stos
cmpsl
xor
loop
mov
in
or
enter
mov
cli
mov
add
xchg
sbb
hlt
sbb
jbe
int
nop
and
mov
jne
dec
and
xor
pop
mov
cmp
in
test
test
je
jnp
dec
xchg
cmp
decb
xchg
sbb
ss
pusha
je
push
or
pop
inc
inc
addr16
lret
jl
imul
dec
scas
mov
xchg
dec
repz
push
stos
outsb
orl
or
lret
add
adc
inc
lock
lods
iret
pop
push
outsl
out
jne
ja
xabort
loop
scas
add
mov
das
std
lock
inc
xchg
mov
sub
sbb
icebp
xchg
cmpsl
stc
push
cli
jnp
js
mov
fnstsw
and
sbb
nop
push
shrl
rorl
jmp
cld
pop
test
fs
test
mov
roll
ret
pop
repnz
jecxz
mov
cli
popf
fcomps
mov
popa
xor
push
push
pop
cli
insb
or
cli
lret
inc
movsl
out
aas
pop
dec
adc
ds
pop
push
push
or
inc
jb
dec
mov
in
bswap
jmp
push
and
and
shrb
repz
cmpsl
push
orl
movsb
insl
inc
popa
push
shl
iret
mov
fstpt
sub
icebp
shl
testb
fistps
outsb
shll
sbb
les
adcb
fwait
mov
sti
push
out
lods
pop
push
cmp
pop
jo
xlat
inc
push
push
mov
sbbl
push
dec
adc
enter
jle
bnd
lcall
add
xchg
xchg
sub
mov
scas
int3
rcl
scas
aas
pop
or
cld
sub
add
add
movsb
dec
push
adc
pop
mov
movsb
por
mov
lods
inc
adc
pop
outsb
mov
cmp
and
ja
pop
cmp
sbb
mov
or
repnz
jg
pop
jno
xchg
rol
aad
iret
js
mov
mov
mov
test
stc
or
pop
and
ja
sbb
or
jnp
aas
les
mov
js
lret
push
pop
lret
lret
adc
push
push
add
dec
mov
outsl
mov
shrl
addr16
pop
insl
sub
xchg
insl
outsb
in
pop
imul
mov
mov
test
hlt
or
bnd
loopne
mov
pusha
push
dec
icebp
in
push
sarb
adc
arpl
mov
lock
mov
icebp
and
xchg
jne
dec
pop
or
es
pop
cmp
ret
inc
inc
jle
int3
rclb
pop
jg
sub
mov
imul
lods
mov
mov
daa
push
fstl
inc
fs
rorl
cli
sbb
jo
cmp
mov
into
xchg
ljmp
sbb
xchg
sbb
jo
or
imul
mov
pop
data16
test
mov
dec
or
pop
loopne
rorb
call
sub
add
orl
push
imul
ret
dec
icebp
insl
xchg
das
jg
pushf
cmp
fsubr
cs
scas
push
lods
add
cli
jmp
sub
ss
bound
pushf
jl
push
and
aad
mov
sbb
lahf
add
repz
dec
xor
xor
pop
lock
sub
les
or
push
or
and
mov
sub
cmp
push
or
dec
pop
int3
add
xchg
loopne
cmp
add
cmp
jl
push
pop
adc
fcoms
lcall
and
mov
mov
les
xchg
cmp
cli
stos
sub
jae
out
sahf
dec
int
movsl
sbb
jg
insl
or
test
pop
cmpsl
xor
mov
sahf
dec
mov
out
outsl
or
ret
push
arpl
sahf
push
mov
cwtl
outsb
mov
push
jae
add
sbb
loopne
jge
bound
bound
cmc
and
pop
jg
jle
loope
adc
xor
das
jns
adc
mov
out
pop
add
mov
mov
out
jp
shll
jae
hlt
mov
mov
mov
sbb
mov
mov
cmp
adc
or
jmp
ja
push
inc
test
hlt
mov
adc
fwait
mov
and
jns
cmc
jno
bound
popl
stos
add
aas
inc
ja
xor
out
xor
adc
dec
hlt
xor
scas
cltd
adc
jns
adc
scas
push
out
sub
into
inc
add
jp
dec
loopne
pop
mov
fsubr
push
filds
mov
inc
ljmp
sub
mov
not
shr
cmp
mov
mov
jo
pusha
sbbl
out
push
jbe
mov
cmp
xchg
mov
fbstp
pushf
fnsave
loope
add
xchg
jns
inc
in
movsb
mov
jno
in
dec
and
adc
cwtl
pop
push
scas
loop
xor
fisttpll
mov
inc
dec
in
cmp
test
jnp
push
clc
divl
mov
mov
cmpsb
int
mov
sbb
aad
or
cld
pop
jl
mov
push
int3
jmp
and
jl
pop
repnz
mov
inc
stos
ret
xor
or
jg
fstpt
test
push
cmp
add
scas
cs
aam
xor
test
pop
cmpb
lahf
dec
test
pop
pcmpgtw
sahf
stos
bound
push
ljmp
enter
mov
dec
mov
xlat
dec
push
scas
sti
sub
fistpl
movsl
xchg
jl
in
pop
aad
rorl
sub
adc
cmp
jge
cmp
or
jb
add
push
and
xchg
repz
pop
mov
fidivl
andb
jg
cmp
push
push
push
inc
mov
inc
fwait
aas
lahf
out
pushf
mov
out
pop
push
ljmp
pop
sub
rolb
imul
shrl
cltd
pop
sub
lcall
add
imul
adc
pusha
ja
jne
pop
inc
sub
dec
out
andl
add
cwtl
and
xlat
dec
sub
jge
and
mul
adc
sbb
adc
jne
push
cmpl
add
xor
xlat
out
jmp
cmpsb
mov
push
fucomi
incl
pusha
or
inc
out
add
mov
add
add
jl
push
inc
jecxz
xchg
out
xchg
pop
or
sarb
dec
or
repz
out
inc
cld
cwtl
cmpsl
mov
jl
adc
sbb
or
mov
cmp
cmp
and
shlb
cwtl
cmp
dec
cmpsl
dec
fisttps
bt
in
std
lods
cmp
sahf
jecxz
sarl
sarl
inc
inc
mov
dec
dec
cmp
sbb
or
sub
ret
mov
sub
lods
aas
enter
push
mov
nop
pop
or
pusha
jo
arpl
orl
adc
jle
mov
sahf
dec
std
push
enter
and
dec
es
push
mov
cltd
das
inc
xchg
jo
xlat
arpl
push
and
sahf
xchg
add
nop
ja
out
sbb
xchg
insb
out
mov
aad
sbb
pushf
cmp
loop
stos
loope
dec
sahf
lods
repz
lods
enter
push
xlat
add
xchg
push
lods
adc
ficompl
cmpsl
sbb
dec
movsl
sbb
popf
xchg
aas
dec
xor
push
fwait
orb
mov
adc
hlt
call
adc
mov
shll
push
push
imul
pushf
sahf
pause
into
mov
xchg
test
dec
loop
sbb
movl
push
cmp
out
shlb
scas
mov
les
ja
test
aad
or
push
pop
in
data16
pop
xlat
fadds
sbb
sbb
fidivl
das
push
lods
inc
jno
mov
into
nop
lcall
ljmp
add
jmp
popa
sub
xor
and
dec
mov
cmp
loop
mov
add
test
in
test
es
xor
adc
cmp
or
and
repz
sbb
push
lret
jecxz
aam
fwait
leave
bound
imul
mov
xlat
xor
in
ss
popa
mov
aad
pushf
push
into
dec
mov
and
jecxz
jl
fcompl
sbb
adc
add
jmp
inc
insl
fadds
mov
and
add
mull
or
jle
outsl
xor
adc
xor
icebp
jns,pt
mov
mov
pop
lods
ja
mov
lret
push
cs
ret
jp
mov
out
pop
or
enter
out
cld
ds
dec
add
push
mov
jae
mov
add
and
inc
popf
push
cwtl
pop
jno
fidivrs
inc
jbe
jbe
aam
loope
je
sub
or
jbe
push
pop
jmp
or
sahf
imul
pop
mov
dec
cmp
nop
out
inc
lods
popf
cmpsl
imul
sarb
mov
adc
inc
imul
xorl
push
dec
adc
imul
rcrl
sbb
sbb
sbb
int
mov
dec
mov
js
adc
dec
and
push
daa
pop
jnp
sbb
pop
add
inc
and
pushf
dec
je
daa
lods
dec
push
push
adc
sahf
jge
insl
jmp
addw
xchg
pop
insb
fidivrl
cmp
imul
xchg
sbb
mov
mov
ret
scas
dec
shll
dec
and
fbld
loopne
mov
xor
subl
rcll
testl
or
or
es
and
pop
jae
cli
fnsave
inc
add
cltd
xchg
inc
mov
xlat
xchg
sub
out
xor
cmp
repz
imul
rorb
shll
jb
mov
jecxz
scas
xchg
push
dec
shlb
inc
adc
xchg
xchg
fldenv
fists
jmp
mov
adc
mov
pop
dec
xchg
xchg
sub
sar
in
out
or
mov
xchg
inc
scas
xchg
mov
std
cld
push
dec
sahf
shlb
or
enter
inc
inc
aas
sbb
fisubrl
and
lods
mov
xchg
insl
sub
ret
aas
inc
xor
popl
aaa
insl
pop
dec
movsb
daa
push
aas
xor
clc
jg
jecxz
aas
lods
loop
inc
cmp
xlat
cmc
add
std
mov
stos
es
lods
int3
popa
jl
in
aaa
push
iret
xor
adc
pop
push
sbb
xchg
test
out
jns
cmp
add
push
mov
push
arpl
js
mov
ja
dec
jp
inc
jp
inc
pop
lcall
sbb
mov
xchg
insl
inc
mov
sub
int3
dec
mov
inc
xchg
stc
jno
lcall
or
dec
in
pop
outsb
mov
pop
lret
sbb
inc
pop
mov
pop
and
test
or
pop
lea
lahf
lods
fists
popf
mov
inc
or
dec
xchg
mov
adc
jp
rclb
lds
loopne
add
fwait
out
lahf
ret
xor
add
jecxz
test
adc
outsb
movsb
mov
fmuls
into
mov
mov
in
mov
pop
notb
xchg
or
inc
call
mov
mov
sarb
inc
mov
dec
outsb
jge
fwait
jae
int3
stos
pop
xchg
loopne
in
push
add
dec
mov
xchg
inc
lea
lcall
jb
pop
jmp
cmp
imul
push
mov
mov
fs
lcall
inc
das
sahf
pusha
leave
pop
push
mov
jns
xchg
push
call
out
fwait
sbb
movsb
cmp
inc
and
cmp
jecxz
push
pop
cmp
fcompl
lcall
mov
inc
sahf
test
fldl
ret
cltd
shll
data16
addl
dec
mov
shll
bound
pop
rorb
popa
addl
push
cmp
mov
aaa
add
test
add
sbb
test
dec
insl
sub
mov
mov
stos
std
and
lahf
adc
dec
imul
adc
lock
test
sbb
dec
jb
jge
mov
lods
loope
std
shlb
jbe
incb
fs
cmc
adc
and
mov
pmuludq
add
cmp
stc
testb
pop
inc
jecxz
aad
push
call
or
call
ss
adc
xor
lcall
jae
out
fidivl
jne
fisubs
test
pop
jae
lcall
cmp
rclb
cmp
shll
sbb
gs
inc
rcrb
jmp
jecxz
pop
arpl
call
les
jno
mov
scas
xchg
aad
out
jge
xor
lret
nop
mov
movsl
add
arpl
test
inc
fsub
mov
sub
add
jl
dec
cmp
mov
cs
pop
jecxz
add
add
pop
loope
ret
dec
xchg
pop
mov
sub
pop
cwtl
sub
ret
mov
rolb
jnp
ljmp
mov
lods
adc
inc
notl
inc
daa
idiv
popa
daa
mov
lret
mov
xchg
cmpsb
cmp
repnz
popl
dec
aam
bound
cmp
fs
jo
js
mov
jp
adc
ja
or
cld
cmp
das
mov
inc
and
sbb
jns
call
les
out
out
aaa
pop
mov
cmc
movsb
mov
repz
sbb
jecxz
roll
xor
das
orl
shll
mov
sub
or
loope
roll
loope
dec
xchg
enter
mov
xchg
out
mov
in
sbb
enter
push
popa
out
dec
mov
push
jo
loop
sub
rcll
adc
sarl
or
test
jbe
or
jl
adc
mov
aad
out
js
aas
enter
test
stc
jns
cmp
and
cli
sbb
mov
std
jg
jecxz
and
dec
or
mov
mov
mov
repnz
loop
cltd
adc
jns
cs
mov
jl
scas
fptan
movsb
fbld
jl
cmpsb
pop
mov
xor
push
in
xchg
mov
push
fistpl
push
pop
cs
mov
push
xor
movsb
mov
mov
dec
addl
inc
sub
int
leave
push
adc
xchg
loopne
inc
mov
mov
push
lcall
pop
mov
inc
dec
pmuludq
test
imul
jg
rorb
cmc
jne
mov
cmp
mov
test
cmp
dec
pushf
xor
and
enter
popf
sbb
sub
adcl
pushf
and
fdivrl
and
sbb
jp
or
rcr
add
shlb
imulb
jp
add
lock
bound
test
loopne
mov
out
cmp
jb
fs
xor
push
bound
sbb
pop
jle
imul
enter
outsl
popa
in
xchg
pusha
mov
mov
icebp
cmp
add
pop
imul
adc
out
cmc
shrb
adc
sarb
and
icebp
aas
nop
dec
push
push
xchg
or
aaa
jns
sub
pusha
into
insl
shrl
popf
xchg
xchg
ss
test
dec
xchg
add
jnp
int
sub
mov
mov
mov
jmp
xor
dec
cmp
mov
mov
clc
mov
xchg
inc
and
or
ror
in
mov
fisubl
and
lds
xor
xor
clc
jnp
aad
testl
xchg
or
sti
out
xor
andb
push
inc
mov
and
cld
mov
add
mov
xchg
fidivs
or
mov
xchg
push
in
cmpsl
xchg
xchg
add
call
das
aad
xor
add
xchg
xchg
fisubs
outsb
jbe
pop
xchg
jecxz
add
jnp
clc
in
jge
cltd
add
nop
or
ret
adc
fadd
js
call
pop
aam
push
lock
xchg
repz
cmp
and
jno
mov
out
add
test
and
cmp
pop
or
shll
cmp
scas
lock
pop
jno
movsb
jge
sub
popf
jne
ds
sbb
arpl
and
xor
scas
jnp
ret
pushf
arpl
fs
ret
xchg
adc
out
arpl
popf
jp
dec
sbb
arpl
jnp
fldl
loop
testl
inc
push
mov
xchg
pop
lea
ret
in
cld
loope
push
out
sbb
mov
dec
sti
pop
insb
or
clc
shll
lds
cmp
mov
arpl
and
rcll
in
popf
sti
fmul
shlb
pusha
adc
push
mov
add
cli
stos
cmp
fidivrl
push
mov
popf
rol
lret
ds
repnz
sbb
arpl
addb
test
xchg
popf
sbb
out
mov
mov
outsb
inc
out
jnp
sub
lods
ss
je
inc
std
std
add
xor
sbb
dec
in
and
sbb
pop
jp
xchg
outsb
std
shlb
pop
sar
mov
inc
insb
fimuls
push
enter
ficomps
sbb
sbb
dec
lods
jmp
mov
inc
and
pop
xor
dec
cwtl
fstpl
mov
sarl
sub
rolb
mov
test
mov
pop
pushl
inc
adc
inc
mov
mov
inc
pushf
sub
outsb
cmp
xchg
push
sub
in
cwtl
mov
test
push
scas
adc
push
rcrl
fiadds
cmp
xchg
hlt
cmpsl
outsb
inc
inc
mov
jbe
push
push
scas
rcrl
jno
mov
sbb
loope
mov
mov
imul
xorb
or
pop
mov
das
mov
mov
das
xor
push
xor
xor
cs
add
or
jne
movsl
icebp
push
cmc
fistpll
pop
cli
arpl
scas
cmp
add
xchg
fildl
insb
sti
out
cmpsl
push
enter
clc
push
stos
sbb
popf
fstpl
push
xlat
adc
int
pop
loop
cmp
xchg
push
mov
enter
lahf
cmp
ficompl
lock
push
sarb
sub
jno
ret
jp
push
shlb
dec
jp
movsb
pop
and
push
enter
add
outsl
lret
pop
popf
cmpsb
shrl
loopne
dec
rcr
or
push
fnstsw
xchg
dec
xorl
js
adcl
sbb
mov
fdivrs
inc
jo
jg
sub
push
mov
jmp
mov
cmp
cmp
imul
push
outsb
sahf
in
out
push
cmpsl
mov
add
aad
fcomip
mov
sbb
pop
dec
cmp
je
loopne
sbb
add
test
sub
cmp
inc
xor
mov
in
jae
lds
xchg
inc
into
sbb
xlat
lods
fs
loop
mov
add
iret
mov
sbb
jb
pop
xor
test
enter
fisttpll
decb
jp
mov
xor
mov
das
dec
push
outsb
xlat
pop
sti
imul
les
ret
sbb
addr16
mov
cmpsb
sbb
xchg
push
pop
push
push
jecxz
mov
popa
sbb
lods
bound
dec
hlt
fisttpl
push
mov
lahf
pop
dec
rclb
dec
push
mov
or
inc
jae
movsl
incb
push
jae
int3
std
sbb
ja
fsubrl
test
and
mov
mov
jmp
sti
sub
pop
cmp
rcll
jmp
pop
inc
pushf
push
cmp
insl
push
loope
popf
hlt
push
popa
push
pop
sub
add
mov
aas
jns
or
adc
jmp
sarb
loopne
es
les
and
scas
cmp
jmp
mov
out
in
fnstcw
nop
jmp
adc
sbb
xor
lock
cmp
pop
inc
xor
pop
rclb
sbb
aaa
push
cltd
dec
mov
add
cmc
xor
int
je
aad
and
fildl
testb
sbb
sbb
ret
jbe
sahf
mov
dec
push
cwtl
and
dec
mov
and
cmp
fistps
aaa
out
repz
mov
mov
xchg
hlt
add
sbb
push
ss
ficomps
into
pop
out
outsb
fisubl
fdivs
and
call
sbb
cltd
inc
clc
roll
out
sub
xchg
idiv
mov
ds
inc
popa
or
push
lahf
mov
adc
mov
int3
and
test
or
mov
sbb
adc
jge
adc
rcr
xchg
sbb
mov
pushf
out
jg
cltd
icebp
lods
pop
mov
jp
adc
dec
out
hlt
jb
das
fucomp
jne
push
dec
fcmovnu
adc
test
push
iret
mov
int
insb
aad
and
or
push
xchg
xlat
inc
shl
pusha
xchg
out
mov
sbb
fwait
jae
testb
stos
sub
add
scas
mov
mov
movsl
xchg
adc
test
jmp
andb
in
jp
push
pushf
or
xchg
push
gs
sti
jg
or
aaa
add
pop
outsl
hlt
sub
push
inc
into
scas
jae
imul
cmp
test
fmull
inc
daa
das
std
sbb
adc
pop
pop
jns
in
add
sti
or
cmp
mov
jle
inc
jmp
inc
in
cld
loope
xchg
call
add
jae
addb
cltd
xchg
cmp
insl
jnp
sbb
ds
repz
mov
rcrl
movsl
out
cmpb
idivb
sbb
push
fisubrl
lods
dec
adc
dec
push
pop
jb
out
ret
dec
and
pop
inc
dec
adc
mov
mov
mov
pop
mov
mov
and
scas
aaa
mov
add
xchg
int3
aaa
aaa
cmpsb
loopne
iret
xchg
vdivsd
dec
mov
addr16
jno
push
fmulp
or
leave
jp
mov
and
pushf
jbe
xchg
push
sub
cld
push
mov
mov
sbb
jae
mov
add
movsb
fiaddl
sbb
pop
shlb
add
adc
out
jne
cmp
hlt
in
shll
sbb
imul
subl
cmp
mov
lds
popf
shll
testb
pop
sub
bound
andl
ss
cltd
outsb
inc
cmp
sbb
shll
xor
cmovno
xor
sbb
jecxz
sub
repz
push
mov
adc
xchg
mov
movsb
shrb
jns
adc
inc
inc
stos
pop
ret
jl
inc
cmp
js
das
in
pop
adc
cmp
or
ret
stos
pop
add
mov
lods
cld
outsb
sub
push
sub
mov
pop
out
xor
sub
sbb
jl
jnp
lods
or
iret
in
scas
scas
mov
fsubrs
mov
xchg
push
cmc
jecxz
dec
cmp
inc
xor
adc
add
or
fmull
in
xchg
adc
jecxz
adc
sbb
mov
xchg
sbb
and
je
sti
bound
xor
rol
nop
jmp
popf
lds
cli
adc
cwtl
xor
inc
cli
imul
fisubl
outsb
je
cmp
push
jl
xchg
xor
add
or
iret
mov
mov
jg
cmp
cmp
sub
movsb
rclb
pop
xacquire
ljmp
mov
in
jo
jbe
mov
nop
loope
lahf
pop
std
in
aad
sub
mov
iret
inc
sbb
mov
lcall
sbb
addr16
xor
jmp
fstl
push
pushf
andb
cmp
test
and
add
xor
adc
ret
in
xchg
xor
sub
pop
call
shll
std
mov
icebp
or
orb
mov
jbe
xor
lahf
jge
push
or
xchg
cli
movsb
jno
in
push
addr16
mov
ret
add
dec
xor
data16
cli
cmp
sbb
xchg
mov
imul
push
into
push
std
loopne
push
outsb
in
mov
mov
and
mov
into
adc
jle
xchg
dec
das
and
incl
and
xor
ds
repz
push
addr16
int
and
rcrb
pop
jecxz
daa
sub
lret
int3
dec
xor
loopne
xchg
call
subb
jg
mov
xchg
or
lcall
rorb
lret
inc
loope
lods
sbb
jb
outsb
andl
cmp
lods
scas
pusha
out
xchg
xchg
cmpsl
icebp
loop
xchg
push
add
jecxz
cmp
xor
arpl
cmp
loopne
or
fdivrs
xor
lods
pop
loop
push
add
sbb
mov
dec
pop
insb
sub
iret
push
jo
mov
popa
rorl
mov
mov
outsb
in
dec
push
ror
into
push
cmpsb
sbb
or
and
movsb
std
dec
add
push
sub
push
jo
xchg
mov
push
dec
xlat
xlat
and
push
mov
loopne
push
xchg
mov
test
dec
inc
pop
iret
mov
outsl
xor
dec
fimull
add
cmp
mov
push
pop
mov
in
mov
out
pop
jmp
mov
mov
dec
add
sub
xor
push
mov
rcrb
sub
in
loop
mov
jns
out
fxch
leave
insb
pusha
push
dec
fsts
pop
pop
lds
jo
xchg
mov
cmp
or
jp
and
jge
rolb
loop
shr
xor
or
jle
mov
icebp
dec
mov
and
xor
stc
pop
jnp
mov
mull
add
icebp
fstl
xchg
icebp
sar
and
mov
jl
jbe
inc
add
add
inc
fists
fimuls
mov
insl
inc
xchg
and
mov
int3
fists
xor
inc
popf
jnp
jno
aas
mov
jmp
cmp
shll
insb
push
cmp
ss
mov
dec
and
test
add
in
shlb
sub
enter
inc
pop
mov
jo
jb
pushf
sti
xchg
ja
sbb
push
addb
test
insl
stc
mov
pop
dec
mov
cltd
iret
pop
stos
stos
cltd
imul
mov
push
mov
mov
jns
rcrl
mov
jecxz
pop
les
xor
sahf
push
call
rcll
mov
cmp
ds
adc
push
repnz
and
fucomp
daa
inc
add
or
inc
xor
shrb
jmp
stc
loopne
stos
push
rclb
and
mov
jg
mov
jecxz
cmp
xchg
loope
cmp
xor
mov
add
clc
in
or
mov
add
fwait
or
loope
sarb
out
repnz
push
cvttps2pi
xor
sti
aad
sbb
aad
push
loope
mov
lgs
fists
jae
or
adc
ljmp
push
fdiv
pop
icebp
add
jge
pop
ret
test
sti
aam
xchg
bound
aas
inc
mov
mov
mov
or
nop
je
mov
pop
cmpsb
call
enter
jno
loop
dec
incb
fistl
pop
ljmp
inc
scas
cld
cmp
dec
dec
ljmp
sbb
imul
sub
push
in
arpl
or
inc
add
clc
stos
cmpsb
movsl
stos
sbb
pop
std
dec
adcb
fld
inc
inc
jmp
xor
xchg
sbb
pop
dec
sar
sbb
call
mov
pop
mov
pop
mov
call
mov
or
sbb
out
loop
xchg
push
mov
add
xor
mov
pop
jp
pop
loope
sbb
add
out
adc
mul
cli
cmp
ljmp
inc
stos
and
jecxz
arpl
loope
aas
in
sbb
lret
pusha
pop
inc
mov
dec
fs
icebp
mov
xor
push
bound
nop
push
dec
ffreep
inc
pop
leave
enter
push
xor
aam
decl
fsubrs
bound
lret
and
outsl
int
sti
cli
lret
cs
and
xchg
icebp
popf
test
mov
out
imul
loopne
xor
sarb
mov
rclb
lret
int3
jg
jb
add
cmpsb
addr16
jae
push
aad
inc
insl
gs
into
add
mov
pop
stos
mov
sbb
xchg
arpl
pushl
rcll
loope
cmp
loope
mov
mov
in
mov
xchg
pop
iret
in
mov
in
jmp
iret
xchg
cli
loopne
insl
das
jg
mov
addr16
loop
inc
aad
jge
push
sub
dec
sub
jo
push
inc
imul
outsl
or
sarb
sub
mov
pushf
test
push
inc
jle
mov
inc
mul
and
and
mov
xor
daa
xchg
imul
lret
inc
cltd
pop
aam
sub
sub
adc
sbb
inc
mov
popf
cmp
pop
movsb
cs
mov
popf
pop
xor
or
roll
jg
xchg
adc
or
and
dec
cmpsl
adc
test
dec
addl
orb
push
fldcw
xchg
gs
mov
int
aas
mov
xorb
pop
jns
mov
xchg
mov
lods
addr16
jo
mov
cltd
rorb
cltd
push
mov
jle
xor
xor
in
xadd
loopne
mov
cmp
lcall
push
cwtl
dec
aas
cmc
or
sbb
adc
xor
sbbb
repnz
fistl
cmp
shrb
mov
das
fdivrs
mov
inc
fs
arpl
and
adc
rorb
xchg
push
jle
dec
and
out
mov
xchg
push
dec
jmp
and
jecxz
insl
std
mov
cmp
mov
dec
call
sub
adc
add
mov
pop
imul
jl
jae
and
mov
mov
sbb
mov
cmp
inc
jmp
mov
out
je
mov
mov
jb
push
pop
pop
outsl
stc
fsubr
push
jmp
mov
xchg
sti
insb
test
push
sbb
out
dec
imul
jmp
inc
xchg
jne
mov
and
or
leave
cmc
push
mov
and
daa
push
adc
dec
mov
push
sub
and
lret
add
push
mov
cmp
dec
lea
ja
fstps
pop
rcrl
int3
cld
cwtl
xchg
adc
ja
sub
mov
imul
fiaddl
daa
mov
xchg
addr16
bound
adc
fisttps
add
das
in
push
call
mov
outsb
mov
mov
mov
lock
pop
lret
jb
hlt
add
mov
or
popf
andl
pop
cmp
rcrl
mov
or
iret
push
movsl
into
pop
out
dec
cld
add
and
xchg
sub
mov
icebp
sub
testb
pop
sbb
popf
in
dec
andl
into
push
das
repnz
pop
movsb
mov
mov
fistl
pop
adc
pusha
and
push
jnp
ljmp
inc
out
xchg
es
xor
arpl
lahf
imul
dec
adc
test
dec
jecxz
daa
mov
lds
leave
js
sub
andb
or
xlat
dec
and
jnp
sub
jnp
cmc
adc
and
sbb
or
cmpsl
xchg
xor
mov
outsl
mov
ja
movsl
mov
inc
mov
or
sbb
pushf
out
out
xor
lock
addl
in
into
cld
sti
lea
xlat
fdivrs
add
dec
add
jns
inc
movsb
adc
xchg
xor
in
test
push
subb
xchg
shll
jno
sub
add
imul
aas
popa
push
sbb
fucom
ss
jbe
mov
dec
jae
cmp
push
inc
mov
sbb
lea
dec
out
adc
cmpsb
pusha
sub
pop
cld
in
adc
cmp
fwait
je
ja
arpl
pop
push
rcll
mov
mov
cmpsl
pop
mov
mov
out
mov
lea
add
cltd
sub
inc
faddl
lods
pushf
mov
ficoml
or
movsl
push
sbb
xor
and
jno
dec
enter
jl
in
test
sub
in
insl
pop
test
int
lods
data16
push
inc
add
or
inc
push
loop
xchg
push
jl
mov
sbb
push
fstp
inc
out
jl
insb
jno
in
enter
fstpl
or
and
mov
call
adc
out
push
xlat
mov
mov
cmp
jb
xchg
loop
mov
pop
lea
lea
data16
mov
repz
pop
test
jmp
or
insb
mov
inc
pop
xchg
jo
repz
clc
sbb
out
enter
or
mov
icebp
pop
call
lret
jle
mov
loop
dec
repz
and
rcrl
push
cmp
mov
mov
pop
popa
jmp
mov
les
push
xchg
out
ret
inc
inc
int3
cmpsl
sbb
adcb
inc
lcall
mov
lods
pop
movsl
jae
or
adc
test
loopne
popf
mov
add
addr16
xchg
cmp
ret
mov
mov
shll
xchg
add
loopne
out
mov
repnz
imul
mov
cld
cmpsb
mov
mov
add
lret
into
mov
push
dec
pop
rol
sahf
xlat
insl
or
test
cmp
sti
jns
cmp
sub
js
movsb
sarb
mov
fwait
inc
js
mov
cmp
sti
push
enter
mov
pop
push
xor
or
mov
xchg
dec
cwtl
mov
insb
or
scas
or
inc
pop
jg
add
subb
test
jae
or
xor
bound
test
loope
mov
sbbl
mov
cs
daa
and
push
push
sbb
jp
jbe
movsl
mov
mov
test
ljmp
addb
test
mov
push
cltd
xor
mov
lret
call
dec
mov
lcall
mov
mov
dec
test
repnz
xchg
int
cmpsl
pushf
inc
mov
and
lds
mov
movsb
pop
pop
dec
out
loop
aaa
lods
daa
and
lret
pop
mov
push
xchg
lods
inc
lds
sbbb
cwtl
js
jns
fistl
or
roll
out
lcall
fbstp
or
mov
shlb
loope
clc
out
test
xor
std
jp
pop
jecxz
fistl
xchg
xchg
fucomip
adc
enter
cld
bound
stos
pop
ss
xchg
shll
mov
push
addr16
jae
ljmp
sbb
ds
aad
mov
add
psubd
adc
pop
add
repz
daa
insl
and
loope
push
cld
or
mov
jp
aas
subl
mov
decb
dec
es
or
xchg
push
mov
sahf
imul
pop
mov
repnz
imul
inc
sbb
jno
inc
sbb
mov
movb
add
xorl
movsb
call
inc
adc
loop
testb
and
pop
sahf
lock
xlat
mov
and
xor
xor
pop
mov
inc
jbe
and
dec
js
add
pop
xlat
dec
mov
stos
cltd
shl
xchg
aas
fildl
mov
mov
adc
sbb
mov
std
repnz
dec
enter
test
mulb
ss
or
push
add
int
xor
jl
outsl
or
sbb
std
cmp
jecxz
hlt
inc
pop
fstl
mov
sbb
lahf
pop
jmp
mov
xor
lcall
sbb
dec
mov
sldt
jo
sub
movsb
loop
sub
ret
in
and
sbb
dec
inc
or
pop
lock
andl
ret
clc
arpl
mov
xchg
mov
jb
mov
xor
frstor
outsb
js
push
mov
push
adc
dec
xchg
pop
and
jmp
mov
jp
out
test
inc
jo
xchg
or
add
addl
jp
ret
test
push
shlb
jmp
xchg
inc
in
xchg
cwtl
xorl
clc
test
mov
int
stc
popf
mov
mov
xor
fstpl
movsl
jp
gs
rcl
stos
loope
addl
bound
data16
lcall
in
push
cli
iret
das
mov
or
jp
or
add
ret
ror
push
push
cli
insb
lea
fwait
sbb
push
adc
test
jl
out
lock
and
loope
jg
jb
mov
es
jg
repz
in
jno
lret
push
in
cmp
jmp
adc
fbld
cmp
add
popf
loop
xor
shr
mov
adc
orl
dec
xchg
scas
mov
pop
fst
xchg
or
sub
outsl
xor
inc
xchg
insb
fdivrs
fwait
mov
xor
js
and
xor
shll
adc
mov
mov
int
rolb
in
pop
and
lods
xor
sub
arpl
js
sbb
xchg
in
xchg
fwait
divl
push
ret
xor
mov
pop
leave
in
movsb
rcrb
in
jle
pop
repnz
movsb
shrb
pop
inc
or
mov
nop
add
xchg
in
imul
push
test
imul
js
inc
insb
mov
rcl
imul
test
cmp
sahf
jge
inc
sbb
jne
cmp
cmpsb
pop
or
push
aas
mov
pop
enter
movsl
cwtl
sub
ret
and
imul
xchg
or
popf
je
dec
sub
call
icebp
test
out
push
adc
daa
frstor
test
inc
nop
mov
fwait
and
das
sbb
adc
mov
xchg
popf
fs
adc
xor
dec
outsl
inc
push
lods
fwait
cli
mov
imul
xchg
push
test
lret
les
lcall
andb
es
ret
stc
xchg
pop
or
cmpsb
xor
mov
daa
lock
flds
test
gs
jl
stc
in
adcb
mov
or
pop
jne
orb
and
adc
push
aad
jg
insl
pop
mov
jecxz
pop
clc
xchg
xor
sub
je
lds
mov
lcall
cld
jno
xor
or
xchg
pop
mov
repnz
add
push
lock
out
in
aaa
mov
jbe
imul
mov
mov
xor
dec
mov
cltd
lock
popa
sarb
pop
lods
lea
lea
out
add
test
ret
or
adc
cli
fiadds
aam
sbb
sarb
movsl
mov
xorl
out
roll
inc
cmp
or
lea
popa
mov
cld
out
lret
out
in
and
pop
int
mov
xchg
cld
cmp
and
lcall
ljmp
mov
dec
or
xor
pop
mov
addr16
mov
in
loop
aas
mov
push
rorb
cltd
cli
add
outsb
out
sbb
pop
pop
iret
add
ret
lods
pop
xchg
int3
lods
xor
cmp
jge
enter
jnp
add
in
adc
mov
inc
rcrb
out
push
arpl
ds
add
fidivrs
or
js
cwtl
sbb
pop
out
js
pop
popl
into
icebp
sbb
popf
outsl
hlt
sbbb
mov
add
outsb
sbb
jp
fmull
push
mov
adc
mov
jns
dec
mov
add
pop
dec
in
inc
fdivr
mov
adc
je
es
add
jno
rolb
sarb
out
or
push
jle
aas
jmp
mov
pop
cmp
dec
or
orl
add
add
xchg
femms
lahf
mov
je
fmull
mov
ret
mov
mov
insb
mov
push
push
loope
clc
icebp
rorl
and
or
out
mov
bound
add
dec
mov
mov
dec
cmp
or
inc
nop
in
and
ss
cmp
pop
ja
pop
orb
sub
or
lock
jg
stc
mov
pop
jb
sbb
adc
push
and
or
in
jmp
add
shlb
add
lea
lock
adc
mov
jle
dec
stos
xorl
mov
xchg
jecxz
mov
fdivl
lret
inc
cmpsb
js
lret
pop
mov
xchg
aaa
call
loopne
sahf
repz
cmp
repnz
lcall
pop
push
in
push
repnz
nop
cmp
fisttpll
dec
mov
sub
mov
jmp
push
and
aad
and
xor
leave
mov
out
rcll
inc
cli
call
adc
mov
pop
mov
lahf
xor
out
popa
lret
inc
out
stos
xchg
arpl
cmc
dec
adc
xor
or
aas
fdivrp
fmull
movsb
mov
aaa
add
inc
lock
push
mov
cmp
ss
jge
or
xchg
fcompl
dec
xchg
jb
mov
push
fstpl
sub
dec
cli
lret
mov
lahf
lcall
mov
ret
sbb
loope
xor
fisttps
outsb
ret
cmpsl
jo
ds
cltd
outsl
les
shrl
insl
icebp
xor
xlat
adc
jg
xor
in
jne
fists
je
mov
add
and
xchg
aad
jns
lret
fwait
dec
ds
mov
sbb
push
scas
dec
push
inc
or
rorb
or
repnz
int3
out
add
cli
inc
add
in
cld
jl
ret
and
xchg
and
enter
mov
mov
or
fsubr
add
dec
xchg
mov
cmp
lods
xchg
and
sar
push
mov
popa
or
pop
xor
jecxz
das
mov
int3
sub
mov
pop
cmpsl
das
cmp
mov
sub
and
add
sbb
shrl
inc
sub
xor
icebp
sbbl
cmp
mov
jp
sbb
xchg
inc
out
fdivrs
lock
cmp
movsb
cmp
fdivp
nop
push
or
cli
or
daa
sub
push
cltd
lret
mov
sub
lahf
pop
mov
inc
dec
mov
dec
outsl
aad
outsl
ret
movsl
push
xchg
sub
lds
cli
jp
fnstsw
fs
lock
jp
in
mov
adc
push
int
sbb
test
push
pop
stc
adc
jns
fsub
test
jo
in
xchg
out
aas
fldl
popf
adc
xchg
fwait
cmpsb
push
lods
pop
repnz
je
cmp
cmc
cli
out
loope
and
push
lret
inc
scas
mov
enter
pushf
jo
xchg
cs
in
lea
js
cmpsb
fs
jmp
dec
mov
movsl
aas
js
dec
bnd
jmp
aas
sub
lret
mov
dec
outsl
xchg
call
ljmp
and
mov
out
testl
xor
mov
mov
push
lods
dec
jae
jge
rorl
test
cmpsb
fdivrl
mov
xor
cmp
lcall
imul
inc
push
sbb
repz
fdivr
mov
pushf
adcb
mov
push
pop
ficoml
pop
mov
inc
and
ds
test
arpl
inc
sbb
mov
sub
cmp
data16
jo
and
test
xchg
inc
xor
mov
sbb
sbb
inc
cmp
dec
in
scas
test
data16
pop
xchg
dec
loope
popf
out
adc
fdivrl
testl
and
cmp
pop
fnstcw
lret
add
lods
mov
mov
dec
arpl
and
mov
imul
push
xchg
cmp
jecxz
jp
mov
testb
movsl
scas
rclb
xor
adcb
pop
faddl
sub
dec
adc
xor
pop
loop
in
push
dec
push
push
and
aas
js
add
ret
mov
mov
dec
imul
adc
movsl
addr16
mov
insb
lcall
lret
and
iret
in
jbe
mov
ret
jae
sbb
insb
inc
dec
dec
orl
sub
lods
mov
xchg
jg
je
mov
cwtl
ror
aaa
or
cmp
sbb
pop
pop
push
mov
adc
mov
inc
mov
mov
jl
nop
stos
fisubrl
adc
pop
int
push
test
sti
or
bound
bound
mov
sub
push
cmp
pmuludq
cwtl
andb
popa
jmp
add
lods
imul
xor
fstps
icebp
hlt
mov
bound
xchg
lock
push
cmp
jae
cmp
and
mov
adc
mov
push
sub
or
lods
cld
xor
nop
xor
adc
xchg
push
orb
in
dec
add
sbb
sbb
dec
lret
and
movsb
stc
rsqrtps
std
movsb
and
mov
fs
jbe
or
push
imul
mov
bound
pop
add
vunpcklps
outsb
mov
js
lods
in
mov
je
or
xchg
and
gs
pop
jns
lea
sub
cmp
test
in
push
push
lahf
insl
xchg
mov
jno
sbb
dec
adc
in
mov
fisubrl
data16
rclb
inc
enter
inc
or
rolb
shl
xor
mov
pop
aaa
les
and
ja
and
cmpsl
pushf
cmp
jle
adc
jle
xchg
and
mov
and
mov
outsl
cltd
gs
inc
lea
push
jo
adc
mov
cmp
nop
add
pop
rcll
inc
outsb
xchg
movsl
and
xor
xchg
xchg
fsqrt
std
stos
and
mov
jge
push
arpl
std
mov
fcmovne
mov
mov
cmp
jns
mov
jmp
cmp
xor
gs
pushf
xchg
ret
add
jl
mov
or
adc
daa
pop
popf
mov
pusha
fs
and
lahf
jecxz
adcb
sbb
fsubl
mov
pop
sarl
fwait
jnp
mov
or
mov
jbe
out
cs
push
add
sti
jns
pop
testb
nop
add
pop
pop
mov
sub
mov
xchg
gs
aad
in
fdivr
jno,pt
hlt
test
dec
jbe
ds
fsubrs
sbb
sub
pop
mov
add
xor
or
sbb
sub
movsb
subb
mov
outsb
sbb
lret
add
call
mov
xchg
fs
pop
pop
popf
andb
cmp
loope
add
fdivrl
ror
inc
pop
in
sub
push
xchg
jns
sub
movsb
ljmp
mov
jmp
fiadds
js
cmpl
or
and
dec
mov
aad
ljmp
test
lods
and
mov
mov
int3
or
pop
cltd
jnp
and
sub
icebp
adc
pop
stos
outsb
sbb
push
cltd
jecxz
fisttpll
push
ds
pop
pop
mov
cmp
loopne
sub
and
mov
outsl
ret
mov
stos
aam
ljmp
movsl
imulb
adc
repnz
lods
sbbl
mov
cmpsl
movsb
outsb
lods
faddl
stos
inc
push
jo
shl
int3
xor
lcall
lret
pop
ja
outsl
in
mov
imul
das
pop
outsl
out
lods
in
jns
mov
inc
push
mov
pop
aam
xchg
cli
mov
test
cmp
cmc
xchg
stos
lret
mov
js
push
xor
jns
jle
addl
push
dec
jb
pop
jns
test
dec
sbb
pop
jmp
jmp
mov
rclb
jmp
bound
aad
xlat
jecxz
scas
lock
or
sub
scas
imul
dec
and
je
adc
int
sbb
shrl
xor
iret
or
mov
cmc
mov
sub
inc
es
pop
lock
adc
stc
out
aas
push
fwait
sub
mov
decb
jg
adc
sub
sar
sub
loope
add
in
inc
dec
roll
mov
mov
sub
out
pop
ja
lahf
lahf
stc
sbb
jbe
fs
andl
shlb
and
xorl
or
outsl
xor
pop
sti
loop
inc
and
fldenv
mov
mov
icebp
jne
jp
insl
jge
subl
pop
shrb
std
dec
aaa
mov
fisubrs
cmp
pop
dec
xor
ss
inc
push
jbe
mov
sub
test
movsl
outsb
mov
sbb
clc
add
scas
aas
popf
dec
mov
inc
adc
popf
dec
or
aas
xchg
push
sbb
and
jb
movsl
insl
movsl
mov
xchg
jge
sti
je
mov
pop
andl
cld
push
adc
dec
sti
call
or
iretw
jnp
call
jle
imul
mov
inc
cmp
xchg
jl
push
cld
adcl
icebp
dec
das
sti
mov
add
out
push
jnp
or
fpatan
out
lods
dec
fwait
call
jecxz
sbb
adc
mov
mov
add
xorl
xlat
mov
pop
push
or
rolb
sbb
sbb
clc
lods
inc
out
ret
addr16
adc
xor
push
mov
mov
into
pushf
sbb
leave
lret
enter
in
xor
imul
imul
jne
mov
lods
add
jne
xor
push
out
in
aaa
and
ja
pop
jnp
repz
xlat
mov
sub
inc
movsl
call
int
push
inc
sahf
movups
fimuls
adc
jns
lods
in
dec
out
and
mov
cwtl
cmp
neg
inc
adc
adc
scas
ljmp
mov
leave
mov
je
rorl
andl
or
stos
rcll
jb
cmpsb
lods
and
andb
lods
mov
fdivs
fwait
inc
xor
xor
mov
push
dec
fdivl
lret
jg
xchg
das
inc
mov
nop
sbb
or
dec
jmp
filds
outsl
aaa
outsb
xchg
jmp
sub
mov
pop
stos
add
xchg
jnp
push
aad
repnz
add
lods
dec
add
mov
mov
push
jmp
mov
xchg
xacquire
mov
call
lods
jne
stc
hlt
or
sbb
mov
out
push
mov
imul
imul
jns
xor
add
inc
sub
push
cwtl
js
fimuls
jb
nop
xchg
jbe
lcall
mov
xlat
dec
dec
sbb
xor
or
fwait
or
dec
pop
loope
lods
loope
mov
arpl
testl
cltd
lea
dec
and
dec
pusha
sbb
es
mov
push
add
cmp
jno
mov
push
adc
stos
jns
dec
mov
popl
sub
stos
push
sub
les
data16
js
mov
sub
jne
ficompl
inc
or
push
shrl
xor
mov
aaa
testb
movsl
es
sub
dec
jo
repnz
test
inc
pop
fwait
dec
or
xor
pop
pop
jmp
test
push
mov
je
mov
ds
jecxz
stos
bound
xor
mov
insb
add
push
jns
dec
iret
arpl
mov
jo,pn
mov
sbb
mov
add
pop
insl
aaa
out
into
cmp
rcr
mov
xchg
repz
mov
in
pusha
inc
adc
xchg
hlt
sub
std
sbb
das
lret
bswap
sub
sbb
ds
test
mov
xchg
stos
ret
lock
sub
iret
jbe
enter
lret
js
inc
mov
or
xchg
stos
pop
jns
jle
xlat
jle
push
scas
scas
xchg
sub
test
dec
sub
adc
cmp
mov
push
aad
clc
mov
xchg
push
mov
sub
arpl
dec
cmp
aam
inc
fwait
pop
outsb
mov
push
mov
mov
mov
mov
pop
jp
and
xchg
test
stos
lcall
clc
sbb
pop
test
bnd
adcb
stos
sub
lret
sahf
mov
stos
mov
push
sbb
jb
leave
mov
mov
scas
scas
popf
outsl
es
mov
test
repz
jbe
push
jmp
jecxz
push
xor
pop
mov
fildl
add
aaa
jno
pop
add
insb
xor
js
popf
stos
jecxz
push
xchg
cmp
call
jae
cltd
mov
icebp
push
enter
pop
add
ljmp
cmp
std
mov
mov
lret
das
movsb
nop
push
mov
std
mov
sbb
mov
xor
aas
scas
stos
test
test
ljmp
or
inc
mov
mov
push
and
test
dec
or
dec
jle
out
mov
push
es
shlb
or
lahf
and
outsb
add
je
mov
sbb
and
fiaddl
pop
adc
mov
jge
sub
add
cmpb
adc
dec
scas
in
pop
ret
outsb
orl
or
lret
in
jnp
and
mov
jecxz
cmp
in
mov
xchg
sbb
pusha
stos
aas
mov
scas
test
mov
cmpsl
inc
int
fisttpl
xchg
push
into
cmp
sti
out
sbb
pop
dec
and
or
inc
adc
pushf
in
cmp
mov
pop
inc
inc
pop
ret
adc
das
xchg
ss
jbe
into
ret
xchg
xchg
mov
jmp
or
mov
arpl
fiaddl
mov
push
jae
inc
outsb
js
push
push
out
pop
scas
inc
mov
and
cmpsl
push
mov
lahf
cld
cmp
mov
int
loope
insb
pop
push
or
int3
stos
lcall
jmp
push
aas
inc
cmp
lea
pop
pop
cld
push
gs
lock
inc
shlb
xchg
cmpsb
xchg
mov
sub
and
mov
mov
sbb
cmc
stos
jmp
daa
lahf
mov
sub
xchg
shrb
jl
into
cli
jno
call
xchg
es
and
lds
mov
movsb
cmpsl
enter
push
rcll
and
sub
or
pop
sub
jno
es
in
fstl
out
xchg
push
ja
out
xor
cmp
sub
repnz
and
scas
lea
mov
xor
inc
cmp
jle
sub
pop
mov
insl
inc
ljmp
fbld
sbb
and
mov
fs
movsl
rol
fucom
repnz
push
adc
dec
mov
push
push
mov
roll
fimull
sub
xchg
stos
cmpsl
sbb
andb
je
push
mov
mov
jge
cmp
xchg
inc
jg
or
aad
add
or
adc
cmc
out
add
xchg
pop
add
cmp
and
and
add
add
mov
mov
dec
push
lret
inc
ljmp
cld
xchg
aad
in
adc
pop
mov
xchg
adc
or
aad
or
mov
movsl
xchg
mov
push
icebp
ds
mov
stc
outsb
rorb
mov
mov
mov
cmp
mov
pop
mov
fbstp
jb
push
push
mov
add
dec
mov
shlb
xchg
imull
pop
scas
andl
mov
arpl
xchg
pop
fmul
inc
jbe
aas
shll
inc
pop
dec
lret
mov
cmc
sub
push
jnp
inc
xor
call
mov
enter
popf
pop
sbb
add
adc
and
cld
add
fisubs
loope
and
outsl
mov
inc
mov
out
xchg
aad
xchg
fwait
insb
mov
loope
aam
jl
pop
mov
shlb
aas
or
adc
loop
inc
sub
out
repnz
test
mov
in
in
into
repnz
cmp
push
faddp
lods
cwtl
je
pop
jnp
inc
push
or
loop
out
and
jecxz
cmp
cmp
mov
and
jl
push
inc
mov
dec
add
cmp
testl
xor
jl
mov
insl
je
loop
lcall
icebp
mov
mov
movsl
mov
arpl
scas
decb
cmp
scas
add
mov
int
push
imul
mov
movsl
xchg
xchg
insl
dec
arpl
push
lods
es
fwait
adc
xor
adc
add
repnz
jb
sub
gs
out
or
loop
xchg
and
cwtl
rclb
filds
push
mov
ja
adc
xchg
cmpl
pop
push
out
fmuls
imul
inc
sub
mov
aad
mov
arpl
sbb
sub
push
cmp
sarl
sarl
ss
push
mov
rolb
pop
fcomi
aas
scas
pop
sbb
cmpsb
daa
jl
inc
jl
pop
mov
push
daa
pop
rcrl
ret
aad
aam
lahf
out
xlat
jg
pop
pusha
lret
dec
aam
push
fsts
push
add
loop
lock
add
push
xor
out
arpl
in
pop
mov
mov
into
mov
push
jle
xor
test
mov
cmp
jno
sarb
das
inc
shrl
or
imull
ss
inc
jo
loope
jge
sbb
ffree
aaa
mov
mov
inc
mov
inc
push
pop
cmpsb
lods
inc
nop
mov
repz
add
nop
xchg
movsb
ss
hlt
sub
jge
jne
rcll
sbb
or
test
dec
outsb
or
jecxz
lret
lock
mov
push
subl
fs
stos
inc
stos
jmp
scas
aam
mov
xor
sub
and
lods
add
dec
sub
popf
inc
mov
xchg
lock
push
mov
loope
or
sti
xchg
dec
xlat
imul
out
ret
popl
push
dec
xor
xor
pop
cltd
xor
xlat
imul
push
mov
adc
cmpsb
sbb
ljmp
fldt
outsb
mov
add
jecxz
sahf
sti
mov
fiaddl
icebp
pop
push
call
push
push
out
imul
push
jnp
cmp
nop
inc
jecxz
jle
mov
lock
imul
inc
divb
in
jae
fldenv
sub
sbb
les
or
push
cmp
sub
mov
inc
xor
mov
imul
out
mov
pop
dec
and
sub
xchg
xchg
push
cs
fildl
jle
mov
aad
aam
lret
je
inc
push
jl
xor
repnz
push
pop
ret
adc
mov
add
add
jecxz
ret
push
shlb
mov
mov
fstpl
dec
jl
repz
imul
push
in
ja
dec
inc
jb
mov
xor
push
out
sub
movnti
push
mov
xchg
out
imull
js
test
push
mov
xlat
lcall
jl
jbe
pop
mov
inc
int3
shrl
push
dec
cs
rolb
xchg
pop
mov
push
mov
jbe
jbe
bound
mov
in
xchg
dec
sbb
cmpsl
roll
loope
mov
xor
fs
add
lcall
adc
test
push
push
scas
inc
push
loopew
call
xlat
xchg
lea
faddp
sti
inc
inc
or
pop
cli
push
xlat
leave
ret
cmp
testl
fs
fisubrl
push
aam
leave
fldenv
sarl
jge
stos
ror
lock
xchg
jne
mov
test
jnp
sub
mov
js
loopne
and
inc
shr
pop
add
push
cmp
jne
add
mov
lcall
in
mov
sti
pop
xchg
outsb
popl
pop
push
add
stos
xor
inc
dec
push
pop
dec
adc
in
mov
or
stos
stos
adc
mov
data16
xchg
ja
inc
inc
dec
adc
sub
xor
adc
mov
in
xor
or
xor
cli
jl
inc
cmc
or
addb
dec
arpl
mov
arpl
stc
or
in
fbstp
lods
lret
nop
sub
xor
out
out
mov
sub
roll
jmp
mov
gs
pop
adc
bound
call
fidivl
out
cmp
fstl
lea
xchg
gs
push
in
inc
sub
shlb
inc
cs
std
push
push
sub
lods
xchg
shr
scas
mov
hlt
ffreep
sub
ljmp
aad
fildll
lods
add
int3
sub
jg
les
jns
mov
and
and
xor
xchg
lsl
cmp
imul
popa
into
scas
loope
sub
mov
inc
movsl
or
inc
int
lcall
lcall
push
mov
aam
loopne
mov
les
inc
incl
pop
xchg
aad
icebp
inc
repz
or
push
enter
mov
inc
xor
pop
out
scas
pop
lds
mov
sahf
stos
jg
js
dec
mov
lahf
data16
iret
xchg
int3
pop
stc
adc
push
mov
dec
add
fldt
lea
pop
xchg
and
data16
adc
xchg
dec
sub
push
ljmp
sahf
lret
addl
mov
lcall
lea
sbb
push
sub
mov
loope
cltd
pop
adc
xchg
sbb
int
scas
stc
imul
into
cwtl
aam
hlt
push
xor
jno
cltd
mov
or
pushf
mov
das
push
ds
inc
and
jno
loop
push
mov
enter
lahf
adc
int
xor
mov
fnsave
add
and
push
dec
mov
xlat
sub
inc
pushf
cmp
ficoms
fstp
inc
imul
jnp
lods
lea
jbe
sub
and
mov
mov
sbb
cwtl
pop
div
mov
sub
pop
jnp
jmp
sbb
nop
div
jne
in
inc
mov
add
jno
hlt
jl
adc
cwtl
icebp
and
in
or
sub
loopne
xor
sub
mov
cli
bound
cmp
mov
test
pop
dec
lret
push
jns
mov
mov
jo
mov
inc
mov
out
shl
pop
xchg
ja
sbb
outsb
mov
adc
pop
cmp
adc
roll
jl
cmp
mov
mov
pusha
add
or
testl
insb
jbe
stos
push
inc
pop
or
xchg
lds
pop
sub
icebp
sub
scas
int
mov
ret
mov
adc
and
inc
leave
repz
imul
cli
jmp
add
jmp
and
mov
jecxz
pop
sub
cltd
mov
push
mov
stos
testl
and
daa
xchg
adc
jbe
test
fiadds
mov
and
data16
inc
int3
cs
ja
mov
pop
arpl
jbe
out
std
dec
inc
sbb
addb
xchg
sbb
clc
je
push
test
jg
sbb
sub
shrb
sbb
add
enter
pop
incb
call
popa
fdivrs
mov
sub
int
bound
dec
mov
cli
or
imul
out
adc
test
push
sarl
fcmove
imul
add
add
jg
pop
inc
jle
mov
out
das
inc
in
leave
mov
mov
outsb
jae
ror
ret
or
arpl
jecxz
xchg
mov
push
fdivl
mov
mov
adc
lret
fcompl
bound
inc
mov
insb
scas
in
movsb
pop
adc
movsl
sub
sub
aad
mov
fstl
xchg
xor
mov
sbb
stos
pop
xchg
sub
je
or
lea
cmpsl
lea
sbb
sbb
fnsave
xor
cltd
daa
sbb
les
inc
jno
shrl
pop
cmp
adc
mov
aaa
jnp
xchg
movsb
sub
stos
push
xor
push
cli
es
push
and
std
notl
std
jmp
jnp
pushw
inc
xchg
sti
pop
or
repz
repz
test
loope
push
xlat
ret
movsb
insl
ss
and
insb
mov
adc
cmpsb
bound
addr16
lcall
fstpl
mov
and
inc
stc
pop
add
inc
jne
fsubrl
xchg
or
out
sub
dec
pushf
scas
outsl
mov
mov
cli
xchg
jnp
cli
sarl
push
lock
addb
sub
lods
jno
sbb
lea
sbb
add
rorl
jg
and
mov
rcrb
cli
jp
gs
cmp
xchg
mov
dec
cmpsb
jb
inc
cmc
mov
dec
mov
mov
mov
es
lcall
aam
ds
cmp
mov
jecxz
adc
pop
mov
sub
mov
mov
sbb
push
jge
jge,pn
enter
je
arpl
xor
dec
std
xlat
inc
xchg
cmc
inc
repnz
sbb
jb
es
pop
xor
mov
mov
into
mov
repz
mov
enter
xchg
mov
sahf
mov
add
pop
jnp
lcall
sbb
push
repz
sti
mov
lcall
xlat
pcmpgtw
mul
mov
jo
or
inc
movsb
addb
fadds
js
xchg
or
imul
or
lret
imul
and
jle
jl
xchg
jge
push
mov
xor
adc
enter
mov
rorb
push
xchg
or
mov
shlb
jns
xchg
mov
xchg
outsb
repz
out
push
test
jge
mov
les
mov
adc
cmp
xchg
mov
xchg
mov
sbb
xchg
test
inc
lret
lock
jp
pop
inc
mov
mulb
dec
xchg
mov
ss
out
lods
dec
sub
lret
fsubrl
aaa
mov
dec
mov
cmp
sbb
or
dec
sahf
sbb
cmpb
scas
or
push
sbb
adc
mov
pop
cltd
pushf
fstpl
push
ret
push
xor
mov
pop
jns
andb
push
dec
pop
mov
insl
cs
std
out
push
mov
add
je
sbb
sub
or
xchg
bound
nop
clc
aaa
dec
fiaddl
lock
clc
imul
and
cmp
dec
imul
cmp
inc
xor
pop
sub
push
mov
fcomip
push
imul
xor
or
test
mov
inc
insb
pop
mov
leave
lret
or
stos
pop
popf
pop
and
inc
mov
and
xor
mov
movsb
xchg
mov
rcr
or
filds
decl
sahf
leave
movsl
mov
mov
jecxz
dec
cmp
stos
loope
mov
and
sub
das
mov
mov
sbb
or
mov
pusha
outsl
hlt
out
inc
imul
push
and
cmp
int3
cmpsl
jg
int3
xlat
mov
lret
sub
loop
jno
pop
xor
cltd
testl
push
sbb
mov
cmp
dec
jge
add
dec
mov
mov
xor
int
imul
mov
sarl
flds
mov
imul
fsub
faddl
adc
mov
sti
mov
es
inc
sub
cs
inc
stos
push
cli
lods
les
xchg
add
lahf
xor
adc
fdivrl
cli
sbb
cld
jge
stos
push
xor
add
popa
das
popf
fwait
pop
cmc
pop
sbb
mov
xor
lock
push
sbbl
or
or
or
and
and
push
mov
addr16
mov
adc
xor
adc
in
inc
jbe
push
xchg
pop
pop
inc
mov
or
stos
adc
out
adc
dec
dec
push
insb
fucomp
iret
into
inc
mov
loop
pushf
sbb
arpl
outsl
dec
mov
jg
xor
filds
cli
in
push
xor
movsl
jne
and
xchg
pop
cmp
add
rolb
sarl
outsl
stc
or
push
repz
in
xor
adc
xor
jl
dec
push
jg
je
int3
hlt
pusha
movsl
sub
push
mov
enter
xchg
lods
xor
sub
xor
or
nop
fnstenv
xor
mov
rcrb
pop
orl
in
and
into
fsts
enter
lods
mov
sbb
mov
xor
pop
repnz
pop
xor
clc
dec
rclb
outsl
or
sbb
xlat
xchg
jmp
mov
or
sbb
mov
jge
lahf
rolb
inc
mov
mov
roll
testb
dec
fs
push
inc
dec
add
pop
xchg
mulb
push
and
sti
jno
insb
jp
cld
movsl
push
in
testb
and
ficompl
aad
mov
popa
cmp
inc
cmpsb
sbb
repz
adcl
insb
and
push
addr16
sub
jg
jns
mov
cli
pop
es
sbb
and
mov
decl
outsl
scas
mov
add
movsl
push
add
cmpsb
pop
xchg
mov
movsl
notb
mov
push
jl
loope
ret
fcomps
mov
jge
and
ret
mov
ds
xchg
test
add
dec
ficoms
test
shl
lds
adc
lods
and
dec
dec
sahf
out
mov
push
clc
shlb
xchg
inc
sub
adc
mov
add
push
jnp
dec
mov
sbb
imul
sti
xor
xchg
fisubl
jns
daa
jg
data16
sti
call
mov
lret
jo
cmpl
adc
inc
pop
jb
inc
fldt
sbb
mov
lret
std
mov
je
xchg
insl
and
sbb
mov
sub
dec
lret
test
iret
data16
mov
mov
pop
imul
imul
sti
adc
lds
pop
jp
pop
sub
test
sbb
and
adc
mov
hlt
repz
outsb
subl
stos
notb
lret
lret
sbb
and
repnz
ret
out
dec
lret
sbb
jl
aad
xchg
cmpl
scas
dec
sbb
cmc
out
imul
mov
push
aas
pop
test
pop
jecxz
jnp
inc
shll
decb
xchg
mov
and
sbb
cmp
jmp
mov
cmp
popf
xchg
sub
out
js
outsb
pop
mov
icebp
add
xor
jg
loope
add
jmp
sbb
lahf
xchg
mov
push
xor
cmpsb
loop
movsb
test
shlb
push
pop
push
mov
rclb
and
adc
mov
add
xchg
cmp
in
sub
cltd
inc
xchg
aas
add
arpl
sub
jnp
fcoml
fwait
jb
push
rol
mov
add
gs
xchg
lods
fists
xor
dec
jne
ficompl
push
xor
adc
sub
xor
ret
add
dec
pop
das
ficoml
lret
fdivs
aaa
daa
sbb
mov
hlt
mov
xor
jb
cmp
lcall
xor
pop
fisubrs
dec
xchg
sub
xor
xor
xchg
pusha
cs
add
inc
sbb
push
lods
push
jg
ret
lret
loope
xchg
and
and
jecxz
mov
adc
stc
out
lcall
push
shll
fmuls
outsb
add
enter
repnz
xor
cmpsl
mov
fs
les
lcall
ret
push
pop
add
lcall
inc
lret
or
lahf
sbb
inc
cmp
sub
inc
negb
or
xor
mov
xor
repz
pop
notl
jns
dec
mov
adc
push
push
fwait
mov
sub
lds
xchg
adc
cli
popf
subl
loopne
popf
jmp
jge
fs
or
sbb
dec
mov
stc
popa
push
daa
add
pop
or
setbe
and
movsb
dec
aaa
xchg
jo
sbbb
jns
sbb
movsb
sub
xor
add
mov
in
inc
imul
lret
jnp
lods
lret
rcrb
fistpl
mov
adc
mov
sub
sbb
cs
aas
adc
jno
jp
cs
cmp
jecxz
pop
xor
pop
sub
les
mov
pop
adc
and
rolb
stc
loopne
imul
pop
pop
push
jl
test
outsb
outsb
aaa
addr16
and
jns
outsl
push
loopne
mov
mov
cmc
loope
xchg
adc
imul
stos
mov
push
js
adc
lahf
mov
shll
fadd
mov
jae
or
in
ret
mov
adc
xor
je
loopne
push
call
mov
cmovp
pushf
cltd
and
xchg
jb
fisttpl
jne
mov
addr16
les
clc
jo
stos
or
cmc
adc
enter
out
shl
shll
pop
push
jmp
jge
fildll
lcall
enter
fcmovnbe
mov
leave
ljmp
dec
mov
icebp
cmovo
jecxz
cmp
inc
sbb
fs
or
jne
rcrl
pop
xor
cltd
ja
cs
mov
push
lock
xchg
mov
mov
sahf
xchg
pop
adc
xchg
pop
out
out
and
out
int3
ss
mov
sbb
jb
imul
xchg
enter
mov
pusha
and
mov
ljmp
stos
and
repnz
xchg
adc
cmpsb
xchg
mov
clc
push
scas
push
stc
xor
xor
push
xchg
cmc
sbb
les
and
jg
or
push
fs
jns
ds
xor
xchg
push
and
inc
pop
push
adc
mov
scas
push
shrb
pop
jg
pop
ret
out
push
inc
jle
adc
pusha
mov
push
lods
scas
daa
fldl
jg
cltd
data16
in
out
and
fisttps
pop
insl
dec
jl
repz
or
movsl
sbb
insb
or
inc
pop
mov
push
in
inc
fsubrl
xor
fdiv
dec
or
repz
sbb
xlat
jmp
int
adc
adc
sub
xchg
cwtl
shll
mov
sub
mov
mov
mov
loopne
jmp
cmp
jo
orl
push
sbb
rcl
jge
pusha
sbb
xchg
cmpsb
sub
push
out
dec
das
out
mov
repz
push
adc
inc
inc
into
xor
mov
xor
mov
imul
iret
cmp
lds
mov
inc
xchg
xor
sub
stos
scas
rcr
adc
cmc
scas
mov
cmp
aam
scas
cmp
data16
and
movsb
xchg
in
or
enter
scas
pop
out
out
cltd
mov
es
into
rcrl
sub
dec
mov
cmp
push
mov
adc
outsb
sbb
imul
mov
jb
lret
movsl
mov
outsl
xchg
inc
gs
scas
inc
mov
or
subl
jae
xor
mov
icebp
cmp
mov
popa
jnp
scas
mov
mov
inc
sub
scas
jmp
mov
lret
xor
xor
sti
roll
subb
xlat
mov
shr
jl
pop
mov
lods
movsb
int
add
cld
cmpl
lock
push
mov
push
mov
mov
adc
jo
scas
push
cmp
push
xchg
fdivl
xor
clc
adc
jne
push
aam
mov
loop
icebp
and
mov
pushf
sub
jae
fcompl
dec
scas
fucom
lcall
jo
adc
push
add
pop
sbb
repz
push
adc
addl
mov
aas
cmp
add
notb
popl
mulb
cmpsb
rep
jp
push
mov
mov
rcll
mov
jno
out
fcomps
popf
sahf
sub
ds
add
filds
push
int3
sbb
inc
pop
scas
aaa
adc
negl
xchg
push
adc
imul
xchg
in
pop
lds
in
fdiv
arpl
jno
cmp
aam
idivb
daa
outsl
inc
fisubrl
cld
mov
mov
mov
xor
loop
and
sub
pop
outsl
xchg
jo
mov
mov
sbb
cld
loopne
std
rcll
test
mov
and
sbb
shll
rcrl
insb
lcall
sub
jl
cmp
push
ret
cmp
mov
sti
ror
aas
push
or
push
out
data16
outsb
mov
es
lea
shr
xchg
push
movsl
add
test
mul
lods
loopne
rorb
daa
and
in
jle
sub
mov
mov
scas
inc
jg
cmp
int3
in
in
rcll
test
fistpll
adc
xor
mov
stos
mov
xorl
outsl
mov
pushf
mov
outsl
bound
or
xchg
rorb
es
int
ljmp
loope
shrb
roll
icebp
adc
fdivs
popf
sub
aas
popa
popa
or
cmp
outsl
mov
or
dec
pop
mov
jle
fwait
sarl
loopw
mov
bndstx
mov
jp
and
adc
inc
fistps
dec
inc
cmovnp
mov
adc
ret
or
mov
fistl
xor
addl
stc
jae
scas
jp
jb
push
ljmp
and
sbb
shll
mov
dec
inc
orl
mov
pushf
xor
jmp
cmp
cld
jno
stos
xor
cld
repnz
pop
jl
sti
xor
xchg
and
and
pusha
jmp
ljmp
nop
ret
or
das
iret
sub
icebp
movsl
lret
cmp
clc
pop
lds
repnz
jo
bound
jnp
mulb
jge
mov
and
es
mov
repnz
aad
mov
and
or
and
test
jle
out
mov
inc
jno
dec
pop
xor
imul
pushf
sub
shrl
lds
ss
ds
or
popf
fsubl
and
mov
inc
rolb
js
or
fcmovb
imul
nop
lods
shll
cmpsb
push
xor
decb
cmp
sbbb
js
adc
cmp
add
pop
es
push
mov
push
sub
mov
sub
adc
xchg
push
test
xchg
ret
xor
xchg
repnz
inc
ja
sbb
call
xor
movl
outsl
dec
mov
sub
ljmp
pop
and
jo
sbb
xchg
sub
sbb
sahf
fisttpl
insl
xchg
cltd
inc
movsb
inc
dec
mov
dec
ret
cmp
and
dec
rclb
stos
testb
mov
mov
adc
lods
sub
or
pop
pusha
jp
xchg
mov
xchg
lea
xor
ljmp
jg
stc
pop
fnsave
gs
mov
pusha
or
stos
pop
popa
jl
gs
sbb
push
xlat
push
out
lods
pop
loop
or
xchg
jbe
sbb
sbb
imul
lret
rorl
and
push
cltd
das
out
jae
push
ret
adc
add
in
andb
divb
daa
shl
xchg
jae
xchg
xor
or
cmp
mov
mov
pop
pop
xchg
scas
mov
sub
push
scas
leave
push
rorb
hlt
jl
pop
xchg
std
pop
cmp
xor
dec
sbb
sbb
mov
push
in
sti
inc
loope
dec
dec
shl
jmp
in
jno
push
dec
mov
mov
push
rclb
loop
sub
cmp
gs
repnz
jbe
enter
push
fsubl
xchg
and
adc
mov
sub
push
addr16
jnp
xchg
push
push
or
in
cmp
test
adc
sbb
mov
wrmsr
add
repnz
dec
outsb
fs
adc
mov
xchg
adc
mov
mov
and
xchg
and
mov
lods
popa
movsb
loope
gs
loop
dec
dec
jns
push
adc
push
mov
or
sub
sub
outsb
imul
enter
or
roll
push
add
popf
jne
popa
jmp
psllq
and
fmulp
xchg
lret
int
incb
jo
cmp
mov
enter
fldenv
lock
inc
sbb
imulb
dec
sbb
jno,pn
pushf
in
in
push
inc
and
scas
mov
and
inc
loop
mov
pop
dec
in
xor
fwait
nop
out
or
and
dec
sbb
lock
push
sti
insl
sub
and
jnp
int
fiaddl
push
mov
int3
dec
mov
cmp
cmp
or
inc
and
jp
filds
mov
sbb
popf
jg
ficoml
aam
or
cmp
test
dec
inc
sahf
dec
fs
xlat
dec
jo
mov
das
xchg
add
jl
inc
mov
outsb
loope
xchg
sub
mov
cmc
clc
insl
mov
stc
mov
fs
fimuls
insl
inc
and
test
jg
mov
sbb
test
aad
dec
sub
imul
test
mov
sarb
outsb
mov
mov
inc
fnstcw
cs
js
test
mov
cld
pop
lock
dec
xor
and
push
push
lods
aad
fiadds
adc
push
dec
out
aas
add
out
and
pop
xor
pushf
inc
int
mov
lods
dec
or
jmp
pop
cmp
popf
shll
cltd
pop
inc
rcrb
add
dec
jo
mov
ds
or
nop
push
or
push
or
movsl
ljmp
dec
jge
iret
jl
jne
dec
repz
cmp
sub
mov
dec
sbb
push
push
lcall
in
and
mov
call
stc
adc
pusha
clc
shlb
sbb
dec
push
repz
mov
sub
sub
adc
cmc
inc
addb
scas
mov
sarl
dec
sti
xchg
lock
addl
cmpsb
je
inc
icebp
or
popa
jb
outsb
inc
popa
push
mov
jge
js
inc
push
ret
mov
aam
outsb
push
cmp
xlat
test
decb
cltd
sbb
cmpsl
int
lods
add
mov
in
jmp
sub
ret
insl
mov
nop
lods
pop
pop
cltd
daa
movzwl
stc
jo
xlat
es
xor
dec
mov
dec
lds
mov
jns
sbb
push
sbb
sub
mov
sub
adc
mov
xor
jl
adc
cli
xchg
gs
xchg
divb
mov
sti
sub
ja
mov
test
wrmsr
xor
sub
cmp
jl
and
fisubl
mov
xor
sahf
mov
mov
mov
jp
mov
fiadds
jg
in
push
mov
mov
leave
sbb
mov
pop
xchg
daa
test
add
aam
adc
cld
mov
loopne
sub
pushf
pop
sub
cltd
mov
repz
sub
enter
sti
in
adc
iret
adc
xchg
xchg
stos
fs
sub
jne
cmpsl
addr16
in
push
in
inc
ret
fcmovnbe
inc
adc
cld
pop
mov
dec
pop
test
lods
dec
addb
les
movsb
mov
cltd
and
aaa
out
into
mov
jnp
push
xchg
addr16
out
fldlg2
mov
jo
xchg
imul
scas
aas
mov
rcl
inc
lods
lods
lcall
stc
fnsave
mov
mov
ret
roll
outsl
ds
inc
test
bound
mov
xchg
leave
add
sbb
dec
jmp
or
mov
pop
pop
lret
cmp
sahf
xchg
cld
dec
xor
lock
test
cmpsl
out
faddl
stc
insb
sub
jbe
push
rorb
jno
mov
add
cld
js
aad
mov
mov
cmp
aam
sub
jmp
sub
jge
nop
insb
outsb
adc
arpl
das
decb
movb
pushf
pop
xor
jnp
or
sbb
aas
outsb
cmp
in
jns
enter
sar
push
xor
push
push
sbb
icebp
out
xlat
gs
ljmp
ffree
dec
lcall
and
cmp
push
fnstsw
movsl
xchg
xchg
push
pop
dec
inc
jl
pop
and
mov
and
or
add
and
jnp
inc
xchg
sbb
hlt
fcomps
iret
shrl
imul
nop
dec
and
add
testb
sub
ret
in
xor
fnstsw
bound
rcll
mov
pushf
mov
jl
mov
adc
mov
lock
mov
mov
push
mov
cmp
xor
pop
inc
sub
push
notl
or
lea
mov
arpl
hlt
xlat
fs
dec
cmp
sub
sub
jg
sub
pop
imul
xor
sarb
adc
push
push
pop
mov
dec
and
sahf
pause
sub
lret
jecxz
in
xchg
jne
jae
gs
nop
add
inc
add
aad
or
pop
dec
dec
pop
mov
test
pop
call
fildll
push
insl
add
test
xchg
jle
test
daa
xchg
shll
pop
lahf
shll
jecxz
popf
jle
xor
adc
xchg
lea
jge
lods
lcall
in
out
out
icebp
mov
mov
cltd
xor
pop
add
fisubs
ss
inc
adc
add
rcrl
push
mov
loope
shr
psrld
cmpsl
and
sbb
shrb
mov
sub
arpl
cmp
inc
jns
sbb
aas
enter
sti
jno
into
lods
icebp
das
daa
inc
shlb
xor
mov
test
ret
imul
xchg
or
dec
jl
adc
fdiv
mov
pop
pop
xchg
xorb
and
push
push
arpl
pop
dec
pop
inc
mov
cli
mov
mov
nop
mov
adc
adc
sbb
ret
es
aam
sub
push
in
fs
popf
into
imul
inc
dec
sbb
pusha
mov
add
lret
and
int
ret
pop
lret
xor
imul
mov
das
mov
push
subl
es
pop
bswap
repnz
ja
scas
aad
mov
sub
xor
xor
push
sbb
lcall
mov
dec
out
mov
test
inc
mov
stos
addr16
in
sbb
cltd
sbb
cmp
fildl
or
movsb
pop
sbb
lahf
cmpsb
xchg
cmp
jnp
mov
imul
loopne
rorb
inc
cmp
mov
adc
movsl
mov
sub
xorb
jb
push
or
sub
in
cmp
xchg
fs
enter
or
lret
inc
mov
pop
push
cli
test
stos
mov
sbb
lret
mov
push
jg
inc
stos
mov
mov
cmp
js
and
mov
outsb
fistps
insb
mov
dec
jmp
jbe
pop
mov
dec
aad
cmp
sub
or
push
popa
mov
insb
popf
push
sbb
cmc
test
jmp
out
int3
pop
mov
pop
sbb
dec
daa
rolb
mov
mov
mov
add
loopne
scas
push
add
or
scas
adc
adc
imul
je
adc
inc
or
ljmp
pusha
inc
cli
into
and
dec
loope
das
push
dec
rolb
add
pop
jbe
inc
aam
jbe
add
icebp
mov
xchg
popa
hlt
jl
and
mov
push
mov
gs
sbb
add
pop
sbb
push
lcall
shlb
push
and
in
adc
gs
out
test
push
pop
arpl
sbb
lcall
fnstenv
fisubrs
jo
sti
inc
movsb
pop
aaa
loop
push
iret
pop
out
jl
sbb
fsts
test
popa
xor
sub
push
jle
imul
imul
adc
inc
mov
inc
testb
xchg
cmc
aas
frstor
sub
xor
pop
cmp
shl
jo
push
mov
push
pop
fadds
jp
inc
jo
data16
and
jecxz
mov
ljmp
shrb
inc
cmp
lea
jl
loopne
dec
popf
lahf
shll
mov
dec
xchg
addr16
mov
push
sbb
cs
popl
mov
push
imul
enter
icebp
lods
sub
imul
ss
jmp
or
mov
sbb
jae
gs
jns
cmc
push
mov
mov
push
sti
mov
adc
push
adc
in
jne
sub
jp
popa
mov
call
shlb
sbb
imul
pop
xor
andl
push
and
inc
dec
dec
ret
pop
xor
mov
les
push
jne
test
stos
mov
leave
in
ja
in
ja
jl
jmp
pop
cmp
notl
xor
mov
push
in
movsb
aad
add
inc
jns
clc
xor
pusha
and
and
negl
lret
cs
adc
dec
sarl
xor
into
jmp
add
pop
ficomps
out
xchg
bound
cmp
sub
push
jno
gs
jecxz
mov
push
aaa
sbb
fwait
push
mov
pop
pop
dec
lret
mov
dec
dec
ds
imul
jo
and
iret
mov
mov
ljmp
lea
mov
mov
and
add
xor
js
push
mov
add
fldenv
sbb
and
mov
sub
punpckldq
ja
cmpsl
sub
hlt
pop
or
xor
arpl
sbb
cs
dec
adc
ljmp
xor
clc
and
inc
out
cld
mov
cmp
addb
std
pop
aad
je
aas
cmpb
lods
out
inc
push
dec
enter
jno
sub
push
push
mov
push
dec
stos
mov
sahf
and
push
testl
jb
mov
test
das
mov
inc
rcl
jo
roll
cmp
cmp
mov
ret
or
aad
cmpl
addr16
clc
xchg
xor
aaa
arpl
scas
mov
xlat
daa
adc
addl
pop
jb
jmp
es
movsb
fmull
or
cs
sbbl
fnstenv
push
shrl
pop
ds
or
pop
lcall
sub
jne
push
js
sarb
inc
inc
roll
xor
push
sahf
add
xlat
push
insb
cmp
cmc
xchg
or
cmp
pushf
imull
add
xchg
lahf
lods
inc
notl
cmp
dec
adc
pop
test
xchg
dec
cmp
pop
movsl
and
roll
push
xor
shll
fs
call
sub
xchg
xchg
out
mov
mov
xchg
ss
adc
xor
inc
sub
iret
iret
push
sub
push
out
lret
jbe
out
jmp
popa
xchg
mov
mov
add
mov
sub
jl
pop
movsb
adc
icebp
fsubp
cwtl
adc
cs
push
mov
fstl
out
sbb
or
mov
movsb
xchg
add
pushf
out
mov
mov
sub
dec
xor
mov
loope
dec
pop
cmp
and
lret
sbb
sbb
int
ret
jmp
xor
dec
mov
hlt
out
aaa
insl
shlb
pusha
aad
or
out
jmp
pusha
scas
push
pop
jmp
and
push
inc
enter
jno
pop
int3
rorl
imul
dec
mov
mov
xor
add
ret
cmpb
in
adc
xor
xchg
mov
ja
push
ficoml
repz
jg
ds
stc
pop
and
lret
jae
shll
leave
repnz
stos
stc
xchg
or
pop
sbbl
frstor
cmp
stos
xor
mov
outsl
xor
fadd
inc
fstp
mov
mov
push
fwait
push
cmc
add
xor
in
add
push
lods
cmp
xor
push
mov
xor
pop
pmaxsw
js
iret
pop
in
mov
jnp
dec
enter
std
jle
mov
insl
xor
pop
and
pop
jecxz
dec
mov
insb
stos
fldt
xlat
ja
aas
aaa
jle
adc
push
add
je
pop
popf
xchg
lcall
sti
add
loopne
inc
insl
movsl
add
inc
dec
adc
and
or
push
fxch
testb
xchg
jns
sub
movl
jecxz
add
int3
or
dec
cltd
into
lea
mov
jp
or
mov
or
jle
dec
cmpsb
mov
jbe
xor
xor
in
mov
ja
fsubs
inc
insl
mulb
mov
mov
sarl
add
xchg
hlt
hlt
movb
loope
push
sarb
aad
into
sarb
fists
push
cmp
push
jl
cmp
or
cwtl
sub
push
pusha
jge
test
cmpsl
jecxz
mov
outsl
insb
addr16
mov
aaa
mov
mov
ret
mov
inc
rolb
jp
sbb
xchg
xor
int
nop
gs
pop
xchg
jb
outsl
mov
ret
out
fisttps
mov
xchg
add
xchg
gs
push
testl
fwait
test
jg
adc
and
add
outsb
xor
mov
popf
and
mov
sub
dec
mov
outsb
sbb
and
pop
mov
aad
pop
inc
or
xchg
das
mov
js
popf
add
add
lods
enter
or
sbb
imul
sub
xlat
mov
scas
aas
dec
mov
push
movsl
cmp
daa
fdivl
pop
jbe
mov
jg
bound
call
movsl
test
stos
movb
sub
fs
xor
stos
rcll
mov
xlat
xchg
rorl
add
shlb
inc
jno
push
jmp
xchg
xor
or
xchg
xor
dec
shll
pop
scas
xchg
cmp
xor
pop
mov
aas
push
mov
push
dec
sub
outsl
ljmp
adc
cmp
ficoml
insb
sbb
mov
fstpt
fildl
pop
outsl
sub
push
je
aam
mov
mov
vminsd
cld
push
popa
pop
negl
lcall
lret
mov
rorl
xchg
es
in
push
into
in
mov
loopne
ret
int3
sbb
in
mov
xchg
test
or
cmpsb
stos
cmp
lcall
out
push
and
pop
fisubs
test
ss
nop
movsb
subl
dec
je
dec
outsl
inc
mov
inc
addr16
mov
xchg
sbbb
movsl
arpl
xlat
mov
out
mov
xchg
pop
pop
cmc
mov
dec
mov
inc
push
movsl
notl
scas
pop
and
inc
sahf
test
ss
ret
sub
adc
xchg
sbb
inc
pop
mov
mov
mov
cmp
lods
sub
mov
ret
mov
add
adc
repnz
lahf
pop
or
popa
outsl
push
jae
subb
ds
xchg
cmp
shlb
pusha
dec
sub
push
xchg
or
mov
mov
pop
or
cs
rclb
dec
es
leave
fimull
dec
jl
mov
js
mov
xlat
mov
mov
popa
mov
lds
pop
xor
popa
pop
lret
ret
dec
into
in
sbb
jno
adc
mov
push
xor
xchg
xor
es
pop
mov
icebp
adc
xchg
sti
pop
test
outsb
int
ret
daa
cmp
fildl
mov
ja
dec
lods
lods
mov
mov
imul
add
negb
and
icebp
jmp
enter
push
outsb
hlt
je
push
cmp
add
dec
enter
inc
sbb
sti
ja
mov
incb
xor
mov
or
cwtl
test
mov
js
movsb
std
aaa
push
outsl
sbb
push
jno
sbb
push
faddl
hlt
push
in
fldl
shlb
dec
pop
ret
lcall
jno
or
jne
lcall
rcrb
jmp
or
mov
popa
xor
adc
inc
dec
popa
xchg
mov
jge
arpl
jae
fs
mov
dec
mov
enter
jo
jmp
xorl
pop
cmp
jmp
push
mov
mov
or
push
dec
clc
jmp
das
adc
test
bound
mov
and
dec
push
dec
mov
cli
sarb
lcall
sub
stos
rolb
push
hlt
mov
cmpsb
and
cs
std
dec
sbbl
sub
rol
dec
mov
test
ficomps
mov
int
rcll
je
and
mov
cmp
or
mov
lcall
js
push
mov
push
xor
and
xchg
pop
mov
lock
arpl
xchg
pop
xchg
push
lret
sub
dec
inc
jne
add
mov
and
mov
push
repnz
mov
cwtl
loopne
jge
xchg
push
gs
test
mov
test
test
fsubrl
cmp
cld
scas
out
jp
in
rolb
stc
mov
add
mov
adc
dec
mov
adc
jmp
enter
sub
popf
dec
mov
testl
mov
or
in
xchg
cmp
insb
xchg
mov
sbb
sub
jecxz
dec
rorw
lcall
in
jne
inc
jge
sti
add
popa
inc
jl
test
and
inc
mov
and
fnstcw
sti
popf
mov
mov
xchg
lods
pushf
daa
mov
add
pusha
cmp
mov
cmp
cmp
fisubrs
loopne
aam
idivl
lock
stc
mov
int
mov
jle
adc
add
mov
icebp
sti
mov
xchg
mov
xchg
mov
sub
sub
or
inc
cmpsb
fs
imul
push
int3
push
jle
sahf
cltd
inc
sbb
cmpsb
in
lds
mov
pop
jmp
jp
mov
jnp
push
pop
cmp
int3
add
mov
adc
jo
imull
mov
push
add
inc
adc
shll
loop
ja
loope
call
pop
aad
adc
xor
ja
mov
pushf
sub
aaa
shrb
mov
add
jmp
dec
clc
push
in
lods
lock
imul
xchg
mov
mov
or
mov
pop
roll
push
inc
inc
jb
daa
loopne
loop
ret
add
cmp
into
popa
dec
xchg
push
cmc
outsb
adc
out
and
xchg
jbe
inc
leave
hlt
inc
test
repz
dec
push
dec
mov
or
sti
cmp
adc
and
xor
mov
push
adc
pop
idiv
sbb
mov
sti
sbb
inc
xor
shll
or
pop
or
std
fwait
dec
and
and
mov
fs
hlt
mov
mov
jg
stc
in
xchg
pop
mov
xchg
xchg
jno
xchg
xchg
mov
sbb
mov
mov
dec
mov
sbb
std
stos
mov
lahf
dec
jge
adc
cmp
sub
mov
pop
xor
or
mov
mov
mov
jecxz
cmc
arpl
or
fists
test
jle
hlt
dec
jp
fmull
jnp
cmc
ret
and
lods
push
andl
and
pop
std
push
call
mull
fnstenv
push
movsb
int3
mov
adc
int3
cmc
stc
pop
sbb
xchg
icebp
mov
test
jp
xchg
xor
pop
lcall
push
aaa
ljmp
add
in
lcall
cld
jns
push
push
rorl
fadds
mov
mov
adc
mov
in
sbb
adcl
xchg
ret
jb
push
popf
add
push
and
push
cmp
xor
ss
and
lds
add
in
fisttps
repnz
mov
mov
or
dec
shl
mov
push
cmp
in
add
jecxz
sub
push
insl
push
cwtl
jle
xchg
ret
mov
mov
xchg
push
pushf
cld
xchg
lret
mov
dec
mov
and
xor
scas
adc
les
imul
add
sub
andl
scas
xor
xchg
fcomip
jmp
pop
test
xchg
jmp
jge
xchg
inc
dec
dec
aad
dec
leave
xchg
clc
lahf
inc
push
fstpl
mov
mov
cwtl
lret
call
xchg
pop
fcmovu
dec
fldcw
push
fdivr
aas
cmp
iret
ror
insb
rcll
lods
dec
out
repnz
mov
mov
sbb
inc
mov
push
ss
push
cmpsl
xor
out
push
les
mov
or
cltd
xchg
mov
inc
cmp
outsl
stos
add
mov
sub
and
movsl
or
fadds
leave
pop
pushl
add
cmp
jecxz
out
jne
or
frstor
cmpsl
or
push
test
outsl
aaa
imul
imul
inc
push
int3
adc
sbb
add
pop
aaa
aad
pop
fcomps
cwtl
push
lret
stc
stos
lret
pop
push
xchg
jecxz
out
iret
lea
mov
imul
mov
out
outsl
loope
aas
ficomps
and
sub
add
in
sahf
fsubs
inc
xchg
popa
scas
out
xchg
mov
xchg
aaa
push
dec
cli
sti
pop
pusha
cld
or
test
cmp
push
ss
fdivp
dec
adc
pop
xor
mov
lahf
dec
inc
lock
mov
cmp
sub
pushf
ds
pop
mov
push
or
adc
nop
jl
cmp
jg
out
push
shrl
adc
in
mov
movsl
inc
pop
sub
orb
inc
push
repnz
dec
xorb
mov
shrb
pop
xchg
sbb
adc
sub
ljmp
cmpsl
rcrb
adc
cmp
push
cmpsb
fsts
pop
and
sub
mov
pusha
sbb
and
cld
pop
mov
pop
mov
imul
push
lods
sahf
fwait
pop
in
aam
fstps
adc
dec
add
popa
adc
pop
and
gs
mov
inc
aam
ljmp
insl
and
outsb
add
in
jge
in
mov
jo
xor
jae
xor
fs
in
push
loop
inc
jnp
les
jno
dec
sbb
adcb
fnstcw
inc
add
insb
adc
sub
repnz
sbb
dec
sub
roll
xor
rcrb
mov
sbb
pop
nop
icebp
push
mov
and
adc
mov
xchg
repnz
sti
and
jmp
dec
jle
repnz
jmp
inc
icebp
push
and
call
ret
mov
sbb
cmpsl
imul
cmp
jo
adc
sbb
mov
cmp
sarb
add
arpl
gs
movsb
es
add
xchg
fwait
cltd
daa
iret
pop
pop
cmpsl
push
adc
or
xchg
inc
push
push
aam
jns
sbb
jmp
jns
aas
inc
push
arpl
fwait
sbb
popf
test
push
cmp
dec
in
adc
mov
fwait
pop
add
xchg
sbb
pop
out
fwait
int3
adc
in
ljmp
in
lret
inc
cmp
push
mov
ficoml
out
imul
add
sbb
aas
push
and
pop
jmp
and
mov
dec
or
xchg
daa
push
fmull
fiaddl
ret
jl
mov
inc
loope
mov
adc
arpl
jae
ret
outsl
lret
and
lds
sub
aaa
and
out
sub
jge
cs
jmp
imul
hlt
cmp
test
fisttps
in
pusha
push
jnp
adc
icebp
jne
es
adc
arpl
adc
adc
mov
cmc
sub
loop
mov
sub
and
lods
mov
jle
dec
mov
pushf
adc
sbbl
xor
jle
push
insl
xorb
sbb
stos
cmp
lods
call
mov
mov
sbb
cmpsl
fiadds
mov
out
out
pushf
sarb
loope
sbb
enter
cwtl
inc
sbb
jle
add
xor
lods
sbb
out
loope
or
cmp
adc
lahf
inc
mov
xor
stc
inc
cmp
push
nop
add
psubb
push
jnp
or
mov
mov
jl
fistl
sbb
sbb
dec
aas
jne
mov
fdivrl
adc
inc
xor
jle
jmp
dec
inc
jo
je
inc
mov
cmpsl
repnz
int
sub
subb
add
mov
add
cmp
and
sub
les
ljmp
pop
lret
xor
popa
popa
xchg
test
mov
lock
cli
pushl
rcr
cmpsb
jne
ja
dec
adc
enter
pop
or
and
ds
pop
lret
lock
adc
iret
mov
out
sbb
sbb
pop
xor
adc
adc
out
cwtl
or
cmp
cli
pop
pop
sbb
push
pop
xor
cmpsb
pop
dec
jne
adc
data16
cli
clc
nop
jne
adc
movsl
mov
add
in
add
xchg
mov
jae
in
xlat
aam
adc
movsl
sbb
rcll
pop
into
and
pop
in
mov
outsl
cmp
cmpsb
in
stc
dec
stos
mov
rcr
adc
daa
cmp
jle
xor
sbb
xor
cmpb
xor
js
jmp
insb
or
into
fldl
jmp
dec
aam
cmp
push
cmp
inc
ss
sbb
push
pop
fdivp
push
cmc
jns
out
leave
or
hlt
mov
leave
mov
xor
lret
fidivl
pushf
stc
test
dec
or
stc
mov
sub
test
mov
outsb
xlat
pop
aaa
gs
aas
jbe
lahf
jle
add
mov
shrl
ficoms
xchg
inc
adc
pop
subl
loopne
add
ss
stc
daa
out
jb
xorl
js
adc
xchg
jne
mov
pop
inc
adc
sahf
mov
lret
xlat
sub
xor
mov
inc
ds
repnz
cmpl
xor
dec
outsl
xor
inc
inc
push
xchg
adc
add
mov
stc
loopne
mov
mov
xchg
pop
jbe
bound
sbb
addr16
adc
icebp
ficoms
dec
adc
pop
enter
or
push
jno
sbb
xchg
loope
inc
aas
dec
lcall
lods
and
stos
popf
lea
outsl
test
sub
or
mov
mov
push
jnp
push
pusha
jb
and
dec
mov
xchg
xchg
lahf
movsb
mov
mov
rolb
rcl
popl
xchg
shl
or
ljmp
xor
call
ret
cld
adc
jns
fisubrs
add
dec
jge
lret
xor
hlt
jne
and
pop
ret
call
cmp
xor
sbb
or
out
mov
mov
add
mov
mov
test
rcll
scas
ret
lds
or
push
cli
jns
fldt
lret
ret
sbb
lea
daa
xchg
mov
jp
jle
jae
xor
icebp
test
rcll
test
pushf
push
dec
ss
pop
mov
into
lods
mov
jae
sub
cli
mov
les
insb
shrb
and
mov
jb
mov
aad
cmp
in
imul
repnz
mov
decl
inc
fmulp
out
mov
and
sbb
and
aad
and
in
xchg
xor
mov
mov
xchg
pop
imul
jns
lret
and
lret
in
cmpsb
test
std
and
ret
fildl
leave
fsubrl
adc
or
outsl
ja
adc
sub
and
inc
or
add
rep
insb
je
cmpl
xchg
dec
push
push
rorl
lahf
xchg
push
insb
cwtl
loope
sub
loopne
and
jecxz
jno
fidivl
or
jne
gs
out
xchg
xlat
mov
orl
mov
mov
adc
adcb
clc
call
jbe
mov
mov
inc
pop
scas
fbld
mov
sbb
dec
jmp
adc
sub
jmp
nop
stos
fiadds
pop
cltd
pushf
pop
sub
adc
int3
and
pop
jae
sub
and
and
test
mov
jecxz
dec
cmp
repz
imul
pop
sub
insb
insb
or
xor
stos
mov
aad
rcll
cmpsl
pop
sub
loope
and
mov
mov
fcoml
subb
sub
pop
xchg
xor
jo
iret
jbe
xor
dec
popf
xchg
aam
aam
add
add
add
sub
jno
or
inc
in
cmp
sbb
stos
in
aam
es
pop
jo
je
adc
and
lret
sub
jbe
mov
xlat
sub
mov
jecxz
pop
out
loopne
ret
ss
fwait
cmpsl
lds
popf
cli
mov
sysexit
adc
push
loope
add
loopne
cmp
xor
xchg
push
mov
fwait
cli
rcll
mov
addr16
lret
pop
pushf
mov
ret
dec
mov
jge
icebp
mov
out
aam
mov
cmp
loope
pop
mov
mov
aas
insl
xchg
fsubrs
dec
test
scas
push
sbb
repnz
pop
popf
xchg
dec
imul
push
sub
hlt
pop
mov
orb
jg
popf
xchg
sub
lret
mov
cwtl
stc
daa
icebp
push
aad
ds
filds
adc
mov
int
rolb
outsl
ret
xchg
int
add
inc
in
ret
inc
cwtl
xchg
jmp
mov
sarb
jo
push
mov
fldt
out
add
stos
sbb
push
testl
dec
push
push
icebp
iret
mov
mov
outsb
loop
aam
daa
testl
dec
into
adcb
repz
pop
leave
call
shlb
pop
xor
pop
cmp
rol
or
inc
jp
stos
repz
in
push
daa
jp
sub
xchg
jg
mov
inc
ljmp
les
rcrl
sub
add
mov
sarb
les
sub
nop
mov
xchg
add
bound
repz
sbbb
out
xchg
into
flds
and
cld
sub
test
loope
bound
cmp
pop
stos
cmp
aam
mov
adc
jmp
insl
je
les
cmpsb
popa
orb
shll
inc
and
xchg
adc
das
or
dec
nop
xor
push
shll
jae
mov
sbb
orb
nop
mov
out
push
adc
or
in
outsl
dec
mov
fldt
mov
pop
enter
mov
jle
xchg
imul
in
ja
xorl
imul
shlb
movsb
jb
xchg
lea
std
jne
push
mov
mov
ss
rcll
stos
mov
push
mov
add
aas
rorb
repz
xchg
adc
xchg
or
fsub
or
loopne
push
xchg
mov
sarl
adc
std
dec
les
fwait
bnd
cmp
push
mov
inc
and
push
cwtl
xchg
jne
xor
and
sarl
mov
loop
pop
mov
int3
jge
sti
mov
popa
mov
lahf
mov
rolb
mov
xchg
xor
sub
push
into
and
movsb
arpl
test
ljmp
fwait
scas
or
xchg
lret
pop
mov
cmpsb
xchg
ss
xchg
and
add
pop
adc
aad
adc
mov
jb
sub
sahf
adc
xchg
outsb
mov
loop
sbb
pop
pop
xor
mov
jecxz
push
insl
mov
mov
or
xchg
ret
sbb
adcl
lret
cmp
test
in
sub
xchg
into
pop
addb
repnz
jbe
jo
push
addr16
xchg
lret
rcr
insl
sahf
push
inc
push
adc
mov
xchg
mov
pusha
out
cmp
mov
sub
bnd
pop
out
out
pop
adc
mov
ret
into
sub
ret
sub
nop
mov
insl
jle
sti
sti
jae
inc
insb
mov
fldt
jmp
pushf
sub
pop
in
xor
push
inc
push
je
in
dec
and
or
jecxz
xchg
mov
ret
adc
fcmovb
add
movsl
call
jne
pop
sbb
lods
pop
xor
sub
or
iret
xor
insl
push
lret
xor
test
pop
fadds
sti
cli
out
sti
pop
std
or
shlb
push
rcrl
test
xor
sbb
subb
dec
popa
cmp
cmpsb
test
in
popf
push
sub
test
outsl
ret
dec
aaa
cmp
mov
or
stc
mov
fidivrl
je
sbb
incl
mov
ds
cltd
sbb
les
ret
mul
sub
js
iret
pop
test
lcall
push
lcall
dec
sahf
mov
es
xor
test
fs
dec
add
jl
outsl
jmp
dec
lock
and
sub
out
sbb
stos
rolb
sub
mov
jp
add
negl
push
ljmp
ss
push
jne
or
xchg
xchg
cmpsl
cmp
in
jno
xor
out
sub
or
jbe
adc
ret
inc
mov
push
adc
mov
add
arpl
dec
fisttpl
jmp
je
mov
push
mov
test
mov
sarl
cmp
cltd
das
xor
fisubl
jmp
mov
or
movzwl
sti
out
cld
push
mov
xchg
jmp
jle
inc
and
out
nop
mov
das
add
jns
cwtl
inc
mov
cmp
inc
jne
rclb
push
pop
into
sub
and
lret
arpl
fwait
cmpsl
sub
leave
lods
add
outsl
inc
push
aas
stc
dec
inc
push
xor
stos
push
outsb
jl
pop
sub
cwtl
add
mov
adcb
jae
mov
adc
js
dec
mov
insl
or
mov
out
and
jb
xor
pop
jbe
out
fisubl
inc
test
fwait
cld
loop
inc
in
aaa
pop
xchg
adc
xchg
mov
jnp
cmp
and
mov
daa
aas
lods
fucomi
push
jg
pop
iret
or
xchg
push
outsb
sbb
enter
fstl
cmp
push
xchg
mov
cmpsb
test
std
dec
mov
je
mov
pop
cltd
out
mov
loop
shrl
hlt
shl
js
std
dec
add
clc
xchg
cmp
mov
bound
lcall
and
stc
pop
shlb
out
dec
dec
xchg
das
adc
cli
dec
or
int
dec
cmpl
mov
gs
out
dec
adc
adc
mov
mov
jbe
xor
jae
rcll
aam
mov
clc
jmp
mov
pop
inc
lods
ret
das
sbb
dec
icebp
xor
xlat
add
mov
inc
xor
jmp
inc
mov
push
push
and
fcmovnu
cmpsl
push
out
leave
jg
sub
or
dec
js
shlb
add
push
cli
lds
sbb
dec
nop
dec
pop
jb
xlat
mov
sahf
lock
outsb
insb
pop
cs
jne
daa
push
lcall
or
lock
inc
mov
or
int3
jne
jae
mov
ds
pop
xchg
sbb
lret
into
inc
push
cmp
daa
test
orb
addr16
sbb
add
js
cmp
scas
xor
inc
iret
mov
cwtl
and
sub
xchg
je
and
aaa
sbb
dec
sub
sub
cmpsb
cmpsl
mov
fs
adc
pop
pop
pop
jae
adc
or
push
sub
loopne
sahf
and
ror
addr16
xor
and
pop
insb
gs
mov
cmp
hlt
cmp
ja
sub
inc
xchg
fs
insl
in
cli
xchg
sbb
aaa
pop
daa
leave
mov
cmp
andb
imul
push
jno
lahf
js
imul
rorl
pop
push
shl
mov
dec
movsl
and
out
lahf
test
ret
cmp
je
pop
mov
rcl
enter
push
addr16
xor
mov
sub
sbb
rol
std
in
xchg
cmp
mov
bound
sbb
sub
lds
add
mov
lea
fmuls
popa
and
aas
shlb
repnz
pop
out
xchg
jp
mov
outsb
mov
jo
fistps
add
sub
sub
adc
add
jns
rorl
mov
shl
loope
cltd
loop
adc
inc
hlt
fmul
faddp
mov
stos
cwtl
mov
and
hlt
cltd
pop
neg
fldenv
flds
popf
and
ja
add
push
std
mov
rorb
jo
in
ficompl
sbb
scas
push
fstps
mov
rcll
pusha
push
xor
test
loopne
idivb
out
test
ljmp
sub
aas
mov
push
jb
movsl
dec
adcb
arpl
ja
mov
and
inc
lahf
mov
in
mov
hlt
xchg
jns
inc
xor
fsubrl
xlat
mov
mov
lock
mov
dec
jp
pop
in
lock
cmp
adc
jl
jmp
xchg
or
sbb
les
mov
jecxz
xchg
or
pop
pop
push
or
out
dec
mov
jecxz
sbb
cmpsl
push
and
or
scas
push
mov
divb
fmul
dec
mov
pop
lret
shlb
in
xor
es
lea
and
pop
outsl
pop
inc
int3
cs
push
shll
xchg
orl
mov
push
and
je
ret
mov
sub
call
lea
mov
mov
fldl
sub
xchg
aam
les
push
in
sbb
mov
add
pop
add
inc
jb
scas
or
je
out
and
movsb
mov
pop
cltd
sbb
push
cmp
adc
adc
rol
cmp
dec
inc
and
mov
loop
notb
outsl
inc
fwait
mov
jnp
leave
cmc
dec
xchg
loopne
xor
cmp
push
xor
lds
mov
mov
jp
xchg
xor
and
ds
es
mov
mov
int
cmp
dec
stos
cmp
push
jp
dec
sbb
movsl
xor
push
fistps
sub
jecxz
scas
jnp
pop
mov
mov
mov
xor
push
repnz
xorl
ds
fwait
xchg
mov
repnz
cmp
cmp
mov
repz
call
or
addr16
or
out
cli
or
jecxz
sahf
jb
xor
fsts
mov
nop
nop
and
or
push
push
cli
call
xor
mov
aas
int3
sbb
cmp
dec
jle
xor
jo
in
mov
jae
sub
sbb
and
push
jb
pop
cmpsb
cwtl
jge
movsb
and
push
and
dec
cmp
sbb
sbbl
push
xchg
daa
xchg
xor
pop
popf
mov
jae
xchg
lret
mov
aad
jb
arpl
push
movsb
mov
popa
mov
rcll
lahf
aaa
sbb
insb
or
and
cmpsl
mov
loope
xchg
scas
cmpsl
out
repz
sbb
push
pushf
sarl
mov
loopne
mov
jns
jmp
jg
sbb
test
popl
cmpsb
jecxz
or
dec
pop
fisttps
not
and
pop
pop
and
sahf
in
aaa
mov
test
dec
mov
adc
inc
mov
xor
or
mov
jmp
cld
push
xor
cmc
xchg
divb
cli
pop
in
mov
jmp
or
sbb
ljmp
pop
inc
pop
add
mov
lods
and
inc
sbb
push
out
and
cwtl
cmp
mov
jge
sub
jo
pop
out
das
cmpb
push
push
cmpsl
pop
xchg
inc
push
imul
sub
in
adc
mov
and
in
jp
aam
cmp
xchg
lret
bound
fstl
in
sbb
dec
sub
in
mov
fidivs
inc
add
das
fdivs
out
sub
insb
in
ret
fldt
cmp
test
jne
adcb
int
jecxz
pop
cmp
adc
and
in
xchg
add
ljmp
mov
mov
pop
pop
das
pop
test
adc
cwtl
ja
push
sub
bound
and
fisubl
lcall
pop
inc
xor
andb
or
ds
and
bound
cmp
loope
and
inc
push
call
call
push
inc
aas
jo
xchg
push
pushf
fcomi
sub
mov
int3
mov
jb
in
mov
dec
ja
divl
adc
repz
push
adc
push
insb
arpl
je
jl
adc
aaa
sub
or
aam
dec
in
das
ja
in
je
fbld
fiaddl
inc
enter
mov
add
ret
lea
nop
pop
and
and
push
or
cltd
pop
jmp
or
scas
push
bound
cmp
pop
scas
xchg
add
aad
insb
xor
pop
out
dec
cmc
mov
or
mov
push
lds
xor
cli
loope
test
mov
jp
adc
js
add
lahf
or
inc
xchg
sub
insl
insb
lds
dec
pop
imul
mov
test
or
jge
pop
outsw
frstor
mov
dec
mov
jno
push
lods
sub
ja
les
push
mov
jle
pop
aam
lret
sub
aam
fadd
arpl
push
mov
inc
xchg
bound
out
popa
cld
ret
bound
inc
out
sbb
outsb
hlt
and
lea
es
dec
sub
lea
rclb
jno
or
jo
mov
jbe
pop
sbb
or
sbb
ss
testl
mov
fisttpll
cs
add
mov
outsl
adc
mov
in
adc
movsb
cmp
jb
inc
out
push
cmpsl
and
int
les
hlt
mov
lret
fnsave
sub
aas
sbb
das
adc
in
or
mov
fisubrl
loopne
les
push
xor
sti
pop
es
pushf
pop
sbb
xchg
in
cli
xor
ss
lret
mov
hlt
cmp
or
xchg
call
push
loopne
pop
ljmp
lds
xchg
and
sbb
dec
adc
inc
pop
mov
cmp
jbe
jecxz
push
imul
nop
push
lds
inc
cli
scas
adc
jl
lret
mov
orb
mov
fiadds
pop
loope
adc
pop
out
pop
mov
shrl
add
dec
mov
mov
sbb
pop
sub
fisttpl
fs
divl
cmp
into
sub
hlt
std
xchg
into
jle
je
aas
jge
pop
stc
add
aas
xchg
gs
dec
out
or
in
mov
sahf
das
daa
mov
mov
insl
push
cmpsb
push
and
sbb
addr16
adc
push
cs
std
repz
cmc
xchg
loopne
jecxz
add
adcl
outsb
daa
imulb
push
int
jno
icebp
cvtpi2ps
out
fmull
add
xchg
inc
xchg
sub
test
xchg
and
xchg
in
xchg
xchg
stc
xchg
sub
push
nop
repz
nop
add
pop
decl
test
ret
or
sti
out
jg
or
cmc
out
cs
das
inc
mov
rclb
mov
xor
or
pop
or
pop
hlt
mov
pop
add
pop
out
ljmp
imul
jb
pop
sti
insb
cld
xor
iret
add
sub
pop
xchg
jnp
sbb
mov
insb
push
outsl
xchg
mov
loop
das
lea
addr16
imul
adc
outsb
call
mov
call
dec
dec
cmpsl
outsb
out
pop
aad
iret
cwtl
sub
cs
lahf
ds
mov
pop
gs
and
or
sti
dec
repnz
xor
pop
imul
in
mov
popa
lret
mov
xorb
pop
jle
pop
xor
cmp
inc
scas
adc
in
dec
cs
ret
mov
and
stc
lcall
sahf
int
call
or
sbbl
mov
outsl
es
inc
push
dec
dec
out
mov
nop
mov
push
sbb
and
negb
inc
or
xor
cmp
iret
or
xchg
cld
push
and
mov
sbb
clc
test
sub
loopne
push
aaa
nop
ret
cmp
mov
mov
or
insb
xchg
cmpsl
cld
sub
mov
and
stos
pop
sbb
lret
int
adc
stos
clc
sbb
pop
cmpsb
push
adc
mov
frndint
imul
jns
dec
out
inc
push
mov
fistl
xor
pushf
mov
jge
lret
jmp
out
in
inc
push
dec
mov
cli
daa
push
imul
cmp
dec
mov
pop
mov
jmp
adc
mov
mov
addr16
xchg
test
ljmp
sbb
mov
sti
jnp
pop
enter
sbb
fidivrl
mov
outsl
lahf
inc
sub
adc
scas
fnstcw
jle
mov
test
inc
dec
aaa
lar
stos
sub
jp
jecxz
adc
dec
push
test
mov
mov
and
fdiv
cmpsl
insl
jbe
cmp
test
movsb
mov
mov
sbb
xor
int
push
sbb
push
push
jb
push
mov
ljmp
addr16
adc
jo
arpl
mov
sub
sbb
inc
or
shr
repnz
pop
in
outsb
and
aad
outsl
sti
pusha
shrb
clc
mov
adc
in
clc
xor
adc
ret
bound
xchg
cwtl
adc
sub
or
out
or
std
pop
add
outsb
repnz
in
jb
insl
imul
fcmovu
lea
repnz
and
mull
pop
popa
test
mov
out
cmp
sbb
out
pop
test
es
shll
sub
dec
mov
fists
or
mov
cmp
shll
cli
decl
add
ss
lcall
jae
mov
pop
pop
leave
pop
in
xor
cmp
in
stos
jae
cli
lods
or
in
xor
hlt
scas
cs
xor
mov
aaa
jnp
outsb
cmp
loope
mov
cmp
mov
outsl
sbb
or
sbb
loop
mov
add
aas
mov
cmp
rclb
jae
cmpsb
loopne
rcl
insb
cmp
popf
cld
dec
pop
xor
aam
jmp
add
inc
ljmp
or
sbb
arpl
shll
cmp
dec
jnp
in
in
repz
cmp
shll
fstl
aad
movsb
sub
insl
sub
outsl
push
adc
cmp
fiaddl
test
pop
lods
data16
sbb
push
in
adcl
jp
jae
loop
mov
mov
jmp
subb
xchg
add
into
cmc
ret
or
das
cwtl
push
mov
pusha
arpl
call
cmp
jb
mov
repnz
inc
cmp
pop
dec
cld
shll
cs
inc
lock
or
ljmp
mov
pop
mov
es
clc
fs
scas
sub
scas
es
ljmp
jnp
sti
mov
mov
add
jb
sub
out
je
data16
push
cwtl
cpuid
ljmp
pop
in
divl
stos
loope
jg
cltd
lahf
xlat
movsl
dec
mov
push
jb
or
cmp
mov
ret
mov
inc
pop
fsubs
cpuid
push
inc
lahf
or
cs
adc
arpl
lods
in
fdivl
mov
ja
dec
outsb
add
dec
cs
mov
enter
out
pushf
ret
lock
cmp
sub
or
orl
test
pop
mov
jne
sti
push
clc
cmpsb
outsl
mov
repnz
jg
adc
call
cmp
testl
add
sub
fisttpl
enter
repnz
movsl
dec
sub
jne
dec
in
fwait
adc
iret
sub
and
fwait
adc
push
adc
nop
jae
aad
fstpt
mov
pop
adc
cmp
imul
in
mov
push
inc
fimull
mov
inc
jo
push
mov
dec
lock
inc
cld
or
les
xor
sbb
jecxz
pop
jb
arpl
daa
push
jbe
movsb
mov
mov
fadds
sbb
ds
repz
in
adc
ljmp
pop
je
xor
and
ljmp
cli
pop
xor
jl
add
int
and
test
mov
add
repz
ja
xchg
xchg
mov
pop
sub
dec
lods
sbb
imul
popa
fwait
inc
and
mov
push
jl
or
subb
mov
sub
sahf
cmpsb
cwtl
sub
dec
icebp
ret
scas
loope
das
mov
mov
mov
cli
xchg
cmpb
jae
pop
daa
jecxz
std
xchg
or
mov
dec
sub
and
push
icebp
push
rcl
in
out
mov
int
fwait
lahf
mov
xchg
data16
sub
out
leave
adc
jmp
sub
outsb
or
jns,pn
or
addr16
and
dec
cwtl
pop
in
mov
dec
jnp
or
inc
mov
call
mov
dec
arpl
ljmp
bound
mov
sbb
jns
jo
add
inc
in
je
fisubs
stos
adc
out
pop
filds
loopne
adc
out
xchg
lahf
adc
mov
xlat
push
sub
popa
jo
imul
jle
pop
adc
std
dec
out
punpckhwd
scas
into
or
mov
push
sub
cltd
movb
fnsave
and
mov
test
jp
movsb
rol
stos
das
adc
pop
cmp
stos
lret
push
jmp
mov
cld
xchg
bound
loop
xorb
adc
mov
cli
adcb
in
addr16
push
nop
pop
mov
lds
imul
push
add
jge
pop
sbb
xor
ret
push
pop
cmp
in
imul
cmp
or
mov
insb
cmp
pop
dec
sub
movsl
movsb
fucomip
dec
lcall
int3
xor
test
and
sbb
mov
cmp
outsl
mov
insb
aas
rorb
fucom
cs
xor
ja
jmp
jne
fbld
in
sbb
es
jne
and
xor
push
test
cmp
ficompl
pushf
std
mov
clc
xchg
daa
lods
jp
mov
xor
mov
inc
dec
ljmp
and
or
push
cmpb
test
pop
outsb
jmp
notl
cli
mov
nop
sahf
jne
jns
inc
stos
pop
mov
mov
sub
dec
jmp
out
das
and
in
pop
mov
hlt
mov
andb
add
sub
jge
cwtl
jl
pop
popf
sub
je
arpl
pop
cmc
xchg
xchg
lret
mov
cmp
pop
bound
sub
in
stos
mov
add
lods
mov
popf
inc
rcr
xchg
adc
mov
scas
inc
sub
sbb
add
int3
loopne
insl
jbe
jge
push
cmp
popf
xchg
add
cmpsl
jnp
enter
dec
enter
and
inc
arpl
lods
leave
dec
dec
test
int3
lea
fisttpll
aad
mov
mov
pop
sbb
or
iret
repnz
mov
xchg
rol
shrl
or
int3
clc
jne
sbb
xor
lahf
add
xchg
insw
jae
xchg
jle
dec
dec
mov
xchg
and
movsl
and
bound
adc
ss
push
lock
and
xlat
adc
arpl
incb
rcr
ret
or
adc
filds
sti
sub
dec
or
jae
add
pusha
rclb
mov
ret
adc
cmpsb
mov
cmpsb
and
push
sub
fxch
adc
fisttpl
push
sbb
into
cmc
shll
jb
pop
inc
pop
adc
sbb
pop
add
push
cmp
push
push
mov
gs
js
jl
ljmp
mov
push
je
call
mov
fstpt
rorl
or
push
mov
xor
inc
mov
arpl
xor
mov
adc
loope
fwait
xchg
ja
sbb
mov
flds
pop
add
loope
cmc
stos
fcoms
jmp
les
mov
cmp
icebp
mov
je
test
xchg
xor
inc
adc
stc
pop
das
sti
xor
adc
fdiv
movsl
iret
fildll
adc
mov
sbb
adc
das
cwtl
mov
out
fstpl
repnz
movsl
adc
aad
add
push
pop
lret
das
pop
das
xor
adc
xlat
mov
cmp
int3
xor
push
add
in
inc
into
cmp
testl
pop
aaa
or
sub
filds
pop
gs
cwtl
inc
sub
adc
push
mov
add
pop
sub
repz
xor
sub
sbb
fadd
cmp
fldl
icebp
rcrb
cmpsb
xor
sbb
jnp
jmp
sub
or
mov
push
mov
jecxz
sub
call
mov
lea
js
lahf
lea
sub
fs
lahf
pop
cmc
inc
pop
out
xchg
adc
and
movsb
mov
adc
pop
and
and
outsl
jecxz
adc
loope
outsl
dec
in
cmp
sbb
daa
dec
inc
sub
cmc
clc
stc
call
mov
mov
pop
test
test
push
stos
xchg
cmc
xchg
adc
lret
cmp
loope
jne
rorb
sbb
xchg
push
or
and
subl
dec
enter
in
inc
xchg
mov
icebp
jecxz
sahf
icebp
push
or
xor
pop
jo
out
fimuls
xor
data16
xchg
xchg
rcrl
xor
shr
lods
fldt
push
xor
push
iret
push
cmp
test
movsb
int3
pop
pop
cli
pop
repnz
lahf
cld
add
cmpsl
mov
inc
stc
mov
in
jns
stos
adc
mov
outsl
xor
jp
xchg
repnz
push
jecxz
pop
pop
loop
jno
bound
cmc
mov
add
inc
mov
cltd
cmp
mov
push
repz
fidivrl
bound
add
xchg
push
imul
dec
jl
stos
pop
lea
jne
pop
roll
pop
and
mov
sub
push
filds
mov
jecxz
jo
push
cmpl
xchg
icebp
sub
int
xor
xor
sub
push
pop
pop
or
sub
or
ja
aam
mov
daa
dec
data16
mov
or
mov
pusha
movsb
or
sub
dec
cmp
test
shll
out
mov
jns
cmpsl
sbbb
sti
es
sti
mov
xchg
and
mov
pop
subps
mov
scas
jnp
cs
sub
cmp
inc
scas
pop
adc
into
stos
int
sub
ljmp
adc
jmp
push
dec
push
xor
sub
shll
in
mov
lds
push
popf
push
mov
push
mov
shrl
adc
fdivs
fwait
xchg
dec
xor
jns
mov
mov
daa
push
push
sbb
cmp
and
incl
test
xchg
mov
xor
shr
adc
pop
fsubs
cmp
ss
enter
cwtl
cltd
sub
adc
test
mov
xor
in
or
insl
imul
fcmove
mov
loopne
xchg
xor
gs
repz
fildl
je
ret
fcoms
add
ja
mov
stos
xchg
fs
inc
xchg
pop
pop
into
mov
mov
push
je
jg
or
insl
ljmp
ret
cmc
push
pop
mov
push
nop
mov
or
inc
jno
fisttpl
add
jge
arpl
xchg
cmpsl
and
mov
fldenv
and
push
outsb
repnz
mov
clc
les
fwait
inc
fmul
pop
add
sub
psubq
je
in
push
int
mov
test
hlt
iret
mov
lods
scas
fsub
push
cltd
scas
and
add
dec
popf
shlb
shrb
sbb
insb
dec
lahf
pop
push
inc
insl
lock
cmpsb
mov
xor
into
push
imul
jns
inc
fwait
jg
pop
jp
imul
mov
mov
test
test
divb
push
sbbb
popa
es
mov
loope
lods
insl
mov
mov
popa
adc
mov
loopne
insl
scas
cmp
pop
mov
out
xchg
add
push
xchg
stos
sub
cmp
adc
adc
mov
push
or
push
outsl
mov
mov
xchg
ljmp
dec
sahf
lock
mov
inc
stos
jg
dec
cld
xor
aad
sti
inc
jle
push
sti
scas
lahf
in
int
jb
cli
sub
cmpsb
sub
fdivrl
mov
cmp
or
hlt
adc
testl
cmp
pop
mov
mov
fsubrl
cmpl
mov
in
decb
dec
loope
cwtl
jl
mov
movsb
fildll
mov
mov
lock
cmpsb
fidivl
mov
push
or
push
data16
inc
int
push
push
fadds
mov
jae
imull
push
xor
mov
xor
push
cli
ret
and
out
add
inc
call
jl
mov
inc
mov
jl
adc
sub
fildl
ficoml
xor
or
xchg
in
int3
xor
arpl
xchg
jo
mov
mov
xchg
mov
int
mov
rolb
icebp
mov
cmp
fbstp
add
insb
sbb
lcall
cmp
jo
fisubs
xor
jge
sarl
lds
sbb
and
dec
mov
pushf
ljmp
aam
mov
pop
je
inc
vmread
and
fldcw
mov
arpl
hlt
movsl
cwtl
iret
fiaddl
in
adc
sub
or
fwait
ret
and
pop
fisttpl
aas
mov
cmpsl
mov
data16
adc
jp
push
inc
jno
inc
xor
pop
jg
or
jmp
imul
sub
js
data16
adc
into
das
cmp
xchg
and
out
je
inc
test
adc
test
jb
lea
xor
pop
adc
dec
mov
jne
repz
icebp
das
cmpb
mov
mov
jb
mov
scas
mov
and
inc
mov
xor
cmp
fmuls
cwtl
jae
fstpl
inc
sbb
add
aam
cmpb
in
in
mov
test
clc
popf
mov
mov
or
arpl
stos
ljmp
jnp
mov
or
sub
adc
jg
movsl
dec
rol
and
cltd
and
pop
cmp
pusha
ss
xchg
inc
sub
dec
sub
adc
fwait
ljmp
mov
xchg
movsb
mov
cmp
or
push
fiaddl
cmpsb
xchg
push
cmp
xchg
mov
jmp
mov
ja
sub
pop
add
out
fwait
in
cwtl
inc
lret
add
clc
pushf
mov
xor
mov
jecxz
fucomi
add
cmpsb
cmp
pop
imul
adc
loop
andb
insl
jns
repz
mov
stc
jmp
add
add
push
shrl
shl
subl
push
mov
into
cwtl
mov
jb
jg
insl
pop
scas
jmp
inc
push
and
lea
loope
jle,pn
adc
sub
or
rorb
sbb
loopne
push
cltd
iret
jae
imul
mov
fisubrs
or
popf
js
movb
sub
fildl
movsb
pop
xor
xorb
or
xchg
jne
incl
enter
daa
ja
aas
and
mov
icebp
dec
fwait
aad
out
dec
jp
repnz
xor
es
mov
call
and
xor
push
mov
push
jne
leave
pop
jge
les
insl
push
xchg
add
sub
mov
add
sbb
fs
mov
cmp
xor
xor
fs
inc
push
shr
insl
dec
mov
pop
ss
movsb
xor
cmp
lret
sbb
jge
xchg
xor
mov
adc
fwait
sbb
mov
pop
das
or
loop
mov
pop
lods
push
lea
rcll
add
pushf
pusha
cwtl
cmp
sub
rcll
inc
mov
sahf
and
ds
lret
or
adc
jecxz
pop
push
sahf
and
fcmovbe
push
frstor
fildl
cwtl
js
stc
mov
xor
xor
mov
bound
push
cltd
adc
xor
inc
arpl
cmp
inc
rorb
sbb
fiadds
rcrl
mov
shll
dec
sar
incl
icebp
dec
lock
shr
jp
mov
mov
or
push
pop
xchg
movsl
cld
test
or
ret
jns
shll
pop
mov
mov
icebp
lods
and
mov
or
jb
push
mov
lock
pop
inc
dec
insb
push
pop
pop
mov
mov
fs
fnsave
dec
lea
shrl
mov
mov
mov
push
mov
int3
shlb
jl
pop
repnz
ss
call
movsl
les
mov
cli
int
fisubrl
lahf
fistpl
cmpsl
sub
push
jmp
pop
iret
lods
shrl
ds
jecxz
adc
inc
sub
fstpl
in
push
aas
cmp
les
mov
aaa
dec
fildll
sahf
adc
fists
mov
jnp
popa
inc
mov
outsb
aaa
icebp
or
call
pop
stos
xchg
movsl
sbb
mov
mov
and
push
mov
cmp
pop
inc
push
stos
popf
leave
mov
or
push
sahf
xchg
inc
mov
cmp
call
insl
js
add
mov
or
fstpl
outsl
cld
push
dec
and
out
pop
dec
pop
mov
and
pop
bound
pop
jecxz
cmpsb
pop
and
and
lret
ja
add
xor
and
xchg
pop
pop
movsl
mov
jae
inc
int3
scas
ret
mov
pop
pushf
inc
mov
movsl
lea
lret
in
xchg
les
or
push
repnz
fimuls
aas
sbb
push
in
push
andl
cmpsb
repnz
pop
jmp
cmpsl
xchg
or
int
out
inc
aaa
inc
inc
fcmovu
test
jae
dec
cmp
push
fwait
add
leave
add
push
mov
dec
icebp
jg
les
sahf
pop
mov
lahf
orb
sbb
std
in
in
dec
xchg
sub
cmp
pop
outsl
in
xchg
aas
lahf
sub
and
adc
pop
mov
loop
pop
rolb
push
and
xlat
movsb
or
fstpt
lods
adc
fidivs
lahf
test
fs
xor
shll
mov
dec
dec
fidivl
lret
push
aas
rol
jb
daa
xchg
sub
ret
xor
pushf
int
add
cmp
or
mov
pop
in
in
pop
cmp
inc
sbb
out
je
sarb
push
aam
pop
test
mov
lock
xchg
fnstcw
or
cmp
out
lret
stos
sub
fnstcw
mov
aas
mov
dec
bound
sbb
pop
pop
jnp
xor
xchg
push
xchg
xchg
jno
leave
xor
in
pop
loop
mov
sub
pusha
mov
mov
mov
addr16
push
ds
lahf
push
daa
push
in
push
and
add
sub
dec
scas
and
test
push
popf
sub
jl
data16
cmp
insl
push
sbb
and
lret
inc
leave
push
cwtl
dec
dec
or
mov
rolb
push
das
xcrypt-cfb
cmpsl
mov
push
mov
pop
inc
cli
xchg
mov
cmpsl
mov
dec
pop
out
leave
dec
daa
xchg
sbb
sbb
xor
xchg
mov
inc
cwtl
pop
or
mov
in
out
mov
rcl
push
sub
ffreep
inc
or
pop
sub
out
cmpsl
lret
add
popf
dec
pop
or
sub
fistpll
mov
lds
jp
push
push
lret
insl
xchg
aaa
ds
mov
mov
mov
insb
jae
cs
jp
cmp
dec
mov
sub
loope
pop
xchg
or
inc
adc
xlat
push
repnz
xchg
add
mov
inc
jl
push
add
or
cwtl
ds
in
adc
rcll
lret
push
fptan
cmp
push
cmp
mov
xchg
jl
jne
pop
dec
push
jbe
and
add
test
clc
push
jns
sbb
les
out
mov
pop
mov
sub
jbe
sbb
fwait
xlat
xor
ljmp
cld
mov
dec
fisubs
jae
sbb
cmpsb
lcall
mov
sub
je
pushf
mov
add
mov
mov
sbb
addb
enter
xchg
aas
sarl
in
insl
das
lret
and
je
dec
cli
cmp
call
aam
add
jecxz
mov
fiadds
lds
cmpsl
jns
mov
cwtl
movsb
mov
jmp
mov
fbld
scas
lahf
cmpsl
hlt
pop
xorl
repnz
xor
cli
inc
sbb
adc
cmpsl
sub
insl
ret
bound
mov
in
dec
xchg
pop
mov
or
mov
push
imul
mov
ja
lds
pusha
mov
sbb
jb
push
inc
adc
sbb
wbinvd
mov
out
aaa
mov
xchg
shrl
pop
clc
outsb
cwtl
imull
fistps
into
movsl
lods
loopne
dec
jp
adc
xchg
jne
xor
out
cmp
jnp
cli
ss
sti
mov
aas
js
xor
cli
shrl
mov
stc
xchg
loope
pop
adc
sbb
mov
frstor
test
in
outsb
inc
add
add
shlb
lds
in
push
sbb
pop
pop
scas
inc
or
aas
cld
es
movsb
lods
jmp
ss
leave
arpl
pop
jne
shll
aam
adc
js
arpl
inc
cld
int3
cwtl
out
and
neg
pop
ja
call
xchg
push
push
and
adc
cmp
pop
push
pop
movsb
enter
pop
push
int3
pushf
outsb
fimuls
sarb
add
xchg
adc
mov
jne
fs
loop
jns
jne
ss
add
sbb
lcall
xchg
lods
leave
jmp
push
lcall
cmp
aaa
xor
sub
and
shlb
out
ret
bound
inc
les
xchg
push
sub
jno
gs
mov
mov
test
in
in
xor
cwtl
cli
push
cmp
push
outsl
mov
jb
mov
push
in
add
repnz
jbe
lock
lock
lods
outsb
push
sbb
fwait
sbb
xor
push
lods
dec
rcll
pop
rdtsc
out
lcall
and
addr16
push
out
xor
or
fnstenv
dec
cmp
jo
out
sub
test
or
dec
movsl
and
rorl
es
mov
aaa
cmp
sbb
rclb
lret
jl
into
roll
or
or
stc
jl
sbb
iret
dec
cmp
pop
sbbb
fwait
cmp
fsubrs
cmp
int3
in
mov
out
out
push
ljmp
mov
inc
out
pop
cli
jnp
cmpsb
and
xchg
xchg
add
add
test
inc
lods
mov
and
jmp
push
push
xlat
mov
imul
jae
loope
push
out
sar
or
cmp
cmp
cli
insb
in
leave
hlt
pop
add
lahf
out
adc
jno
push
dec
mov
lret
sbb
lfs
roll
and
xlat
loopne
xchg
pushf
cmp
scas
int3
pop
mov
lret
outsl
ficomps
dec
push
fimull
pop
cmpb
or
sbb
nop
sub
xchg
mov
imul
or
test
int
arpl
adc
cld
rcll
outsl
or
mov
out
and
sbb
je
sub
arpl
sub
jno
lods
outsb
movsb
adc
jl
divb
jns
ret
sbb
pop
mov
les
loope
stc
xor
xchg
sub
push
inc
lret
jg
outsb
jae
cmp
and
mov
mov
adc
cmp
and
push
adc
std
xchg
and
and
add
pusha
pop
hlt
xchg
mov
mov
xchg
cs
int
es
addr16
lret
scas
pop
and
push
orb
fwait
jo
sbb
sub
push
clc
mov
repnz
pop
addr16
mov
out
adc
aaa
stos
and
bnd
aam
aas
push
push
jb
fistps
out
dec
out
mulb
and
sub
enter
sub
enter
lods
pusha
pop
sub
or
push
and
xor
leave
pushf
jns
fwait
pop
mov
pop
xchg
lcall
pop
pop
lret
cmpsb
push
pushf
mov
in
dec
js
push
lods
lahf
cwtl
loop
push
mov
dec
inc
cmp
lods
xlat
lea
fmulp
fs
jb
adc
adc
xchg
ret
loopne
inc
mov
push
jecxz
ret
je
out
dec
lret
pop
sbb
not
mov
mov
and
aad
inc
push
sub
or
out
jno
fcoml
or
add
jns
shl
aaa
jg
sbb
daa
sbb
ds
test
repz
mov
fisubl
pop
mov
orb
and
or
test
mov
dec
mov
testb
int3
rcll
sbb
dec
jne
sbb
loop
jge
in
xchg
mov
xchg
add
cltd
pop
ljmpw
and
mov
xor
jge
rol
adc
stos
ljmp
test
out
push
cmp
xlat
pop
sar
jecxz
mov
rorl
aad
shr
inc
lcall
pop
and
sbb
jns
sub
jg
cli
cmpsb
mov
dec
jns
into
sbb
ss
fdivrs
mov
sub
push
xchg
test
mov
mov
mov
dec
sub
das
xor
xchg
cld
mov
sbb
xlat
test
add
sbb
icebp
sarb
pop
loopne
jle
leave
jle
mov
mov
sub
dec
dec
subl
mov
cld
aam
lock
inc
dec
sbb
testb
mov
fdivrs
cmp
xchg
pop
mov
addb
sti
adc
and
xchg
into
mov
adc
es
sbb
or
insb
xor
sub
fs
mov
jge
inc
test
dec
mov
mov
leave
sbb
ja
cmp
mov
movsb
aam
lock
or
test
and
jno
into
dec
daa
xchg
jo
loop
jl
dec
jecxz
inc
pop
cmpsl
push
dec
pop
pop
jnp
sub
sbb
inc
divb
jnp
jge
leave
rclb
xchg
mov
testl
shl
mov
mov
pop
jo
std
pusha
and
and
push
add
hlt
push
push
shl
jl
lret
ret
mov
lods
cltd
pop
pop
testb
loop
push
inc
xchg
jbe
out
push
xchg
push
mov
push
sub
movsl
push
cmp
sub
rcrl
pop
repnz
lods
mov
or
out
aaa
lret
in
out
ss
popa
fldenv
xchg
and
mov
outsl
or
shr
int
mov
leave
pop
jnp
lret
xchg
movsl
sbb
and
add
out
clc
aas
xchg
xchg
xchg
jl,pn
out
repz
call
subl
roll
mov
iret
add
push
shlb
scas
mov
pop
adc
and
xor
fisttps
cmp
ljmp
in
or
ds
pop
fbld
mov
xor
sbb
dec
in
mov
lock
push
pushf
sbb
enter
lret
shlb
mov
repz
jecxz
aad
addb
scas
add
cmp
add
mov
sub
xchg
out
or
stos
pop
and
cli
xor
sub
pushf
sbb
lock
fwait
mov
push
ficoml
inc
aad
ja
test
xchg
test
jae
jle
popa
sub
xor
pushf
add
ss
mov
xor
pop
sbb
jmp
cld
xchg
add
sub
shl
andb
in
pop
js
insb
into
fcompp
int
inc
push
lods
sub
out
je
sub
and
mov
je
xchg
push
outsl
mov
xchg
lods
push
inc
pop
cld
push
mov
mov
pop
lret
mov
push
mov
push
pop
loopne
loope
fsincos
popf
dec
call
pop
pusha
out
push
xor
ljmp
sahf
es
into
fnsave
xchg
add
int
xchg
in
je
pop
xchg
test
mov
addr16
test
aaa
xorl
fsubrl
call
lods
test
or
sub
mov
roll
jl
inc
xchg
mov
ss
or
into
jb
jle
adc
hlt
cmc
xchg
pop
pop
shrl
push
jmp
mov
mov
mulb
dec
js
rorb
out
push
add
mov
mov
sbb
jns
mov
rcr
mov
inc
lods
ds
cmp
push
aam
jmp
add
in
repnz
insb
sti
adc
in
je
push
mov
jno
mov
add
pop
lock
movsl
insl
pop
push
adc
icebp
addr16
leave
mov
sar
and
dec
ret
and
out
cli
mov
cld
cmpl
inc
stos
mov
in
mov
mov
loopne
cmp
cli
cmp
inc
push
pop
adc
lcall
sbb
out
popf
jnp
fmull
dec
lock
add
mov
incb
filds
inc
and
dec
pop
out
dec
jo
cmpsb
gs
movsl
jno
fs
stos
push
cld
nop
pop
mov
mov
sbb
std
mov
cmpl
movsl
out
mov
cmpsb
push
adc
sbb
ja
xorl
loop
lock
pop
andb
mov
inc
lock
add
cld
push
sbb
arpl
in
xchg
addr16
loopne
shlb
sarl
stos
rol
cld
aas
sarb
sbb
imul
dec
mov
jae
jg
pop
aad
stc
fucomip
inc
fwait
push
mov
jbe
sub
int3
and
es
dec
xchg
in
pusha
add
xor
sub
sbb
add
sub
or
xor
pop
in
mov
mov
dec
cmc
lods
adc
ret
push
scas
mov
mov
xor
or
adc
out
mov
fwait
xorl
cld
hlt
cvtsi2sdl
sub
mov
lcall
ljmp
cld
xchg
and
add
or
outsl
fistpl
mov
ret
adc
mov
mov
xchg
add
lods
fwait
ret
stos
add
jnp
inc
aam
lds
sahf
pop
adcb
faddl
int
push
mov
and
fisttpl
or
dec
mov
dec
andb
adc
subl
push
mov
adc
loop
into
pop
aas
push
int
loopne
pop
push
loope
stos
cld
xchg
in
inc
jb
lods
mov
push
ficompl
mov
ja
push
xchg
dec
rclb
inc
test
add
xor
jb
sub
and
cmp
in
push
shrb
mov
in
sbb
jne
jge
js
mov
cwtl
fistpl
inc
mov
mov
idiv
jae
dec
xlat
clc
das
push
sti
inc
inc
cmp
xor
pop
cmc
dec
aas
ljmp
stc
mov
xchg
mov
cmp
sub
add
and
pop
shlb
jmp
cmp
addb
add
lods
arpl
jnp
and
into
sbb
sbb
push
xor
jne
and
mov
push
jmp
mov
imul
mov
pop
cmp
sub
test
jb
test
inc
add
push
iret
xlat
stos
jbe
push
les
int3
add
jle
fmull
and
ljmp
jns
fcom
dec
decb
leave
and
cmpsl
cli
and
outsl
or
bnd
ret
mov
insl
mov
rcrb
in
push
jmp
js
push
jmp
xchg
mov
push
push
mov
or
cmp
loop
xor
inc
sbbb
adc
sub
cmp
xchg
std
test
aas
out
pusha
insl
sahf
adc
push
adc
jno
addb
bnd
aam
js
sub
jbe
fdivrs
js
fwait
sub
sbb
mov
push
rcrl
sbb
xchg
jmp
xchg
testl
and
pop
jmp
xchg
jns
es
mov
hlt
mov
adc
or
mov
gs
leave
adc
inc
jne
jle
sub
insl
jo
fsts
enter
adc
add
xor
jp
out
mov
push
idivl
xorb
and
mov
jge
xor
lds
cmpsl
jae
inc
loop
das
mov
ret
mov
imul
adc
imul
pop
and
data16
icebp
pop
call
filds
mov
mov
pushf
out
jg
mov
popf
pusha
push
cmp
shlb
decl
ljmp
out
lret
ret
nop
or
js
imul
mov
hlt
movsb
sahf
test
jg
call
filds
jnp,pn
cmovbe
jae
fdivrs
xchg
sub
dec
and
xor
sub
mov
or
clc
mov
sti
dec
addb
lods
cmpsl
jge
bnd
pop
mov
mov
cmp
adc
jmp
stc
pusha
cmc
pop
cmp
mov
inc
push
push
cmpsl
mov
es
sbbb
dec
push
and
xchg
ja
int3
jg
xor
packssdw
xor
lock
ds
negl
cwtl
dec
shll
pop
aad
fisttps
popa
sub
push
sbb
fs
repnz
movsb
pushf
movd
inc
sbb
dec
xchg
cmpsb
xchg
loopne
loopne
aas
mov
jg
mov
insb
lret
aas
data16
sar
jae
fmuls
test
dec
in
das
xor
adc
inc
lret
fistpll
inc
or
test
mov
pusha
and
add
outsb
ret
sbbb
dec
xchg
add
dec
push
test
je
mov
mov
ret
add
lock
cmp
add
arpl
popf
movsb
dec
shll
mov
lcall
cmp
cs
add
nop
out
inc
outsb
out
dec
shll
sub
cmp
cmpl
cmp
loopne
push
add
faddl
mov
or
xchg
push
sbb
rcr
sub
stos
bound
cmp
int3
push
pop
test
sysret
out
das
push
adc
outsb
add
mov
sub
xlat
jnp
fldt
repz
jns
rorb
dec
je
xchg
into
push
adc
push
fsubrs
pushl
pop
arpl
xchg
xchg
cmpsl
push
jb
stc
sbb
imul
aam
lret
inc
add
and
sub
mov
lret
lds
fwait
jle
lods
dec
adc
and
aam
push
test
jns,pt
lods
jle
sub
push
push
subl
add
daa
aaa
enter
cmp
outsb
pop
jno
fiaddl
mov
cmp
fsub
inc
fisttps
mov
fmuls
and
or
jl
sbb
inc
sbb
mov
push
push
adc
sbb
mov
aas
xor
pop
loope
dec
out
xor
or
in
movsb
jnp
cmc
in
in
rcr
insl
stos
inc
cmpsb
sarl
ret
jmp
push
mov
pop
enter
clc
and
fistps
mov
jb
pop
cmp
div
and
sub
add
iret
pop
arpl
adc
jnp
push
push
add
or
int
gs
cltd
add
pop
in
idiv
into
pop
cmp
push
ljmp
lcall
aaa
xchg
fsubrs
sub
mov
mov
jns
test
or
push
lds
loop
es
inc
ds
inc
andb
mov
rcrb
mov
sub
adc
out
shrb
faddl
xchg
sub
loop
stos
in
aaa
in
mov
dec
cmpb
mov
neg
lahf
mov
mov
test
stos
bound
and
cmp
out
push
call
ja
out
jbe
adc
pop
jle
dec
jae
adc
frstor
andl
sbb
arpl
movsb
inc
pop
daa
cmc
fidivrs
or
testb
outsb
sahf
and
inc
inc
xlat
cmp
cld
push
mov
addr16
jns
fcoms
insb
repz
cmp
lds
cmp
lret
add
insb
mov
loopne
mov
jne
pop
add
fdivs
xchg
leave
out
stos
sbb
xor
movsb
fdivrl
xor
dec
movsl
mov
lret
xor
sbb
pop
iret
jne
push
xchg
mov
push
sub
ss
ret
sub
fnstcw
in
in
es
movsl
movb
pop
dec
jecxz
pusha
daa
lahf
mov
mov
subb
iret
movsb
xlat
cmc
pop
jae
push
bnd
push
jb
xlat
pop
int3
out
es
xor
sbbb
bswap
fidivrs
and
sbb
mov
cwtl
lret
mov
fisubl
bound
jo
push
pop
xchg
xor
cmp
mov
pop
lcall
std
mov
shr
in
bound
jnp
inc
lods
xchg
xchg
xchg
mov
cmp
mov
in
sub
jl
mov
out
mov
inc
imul
xchg
jle
sub
adc
sti
loop
xor
test
sub
cmpl
dec
xchg
and
sbb
enter
pop
repz
lock
fcomi
sbb
bound
test
ds
xchg
popf
jp
fstps
xchg
cmp
lahf
cmp
sbb
cmp
ret
dec
imul
mov
cltd
xor
pop
xchg
cld
mov
sbb
add
mov
jns
dec
and
sbb
and
adc
in
or
mov
mov
lds
pop
mov
sbb
dec
outsb
stc
cmp
imul
and
lcallw
or
out
int3
mov
dec
mov
adc
lock
call
lahf
fimuls
ss
insl
orb
leave
sbb
outsb
aas
add
cs
jne
test
in
popa
inc
mov
add
test
mov
sbb
addr16
std
xchg
inc
lock
popa
push
jl
or
lea
lds
sarb
cld
ftst
add
or
addr16
pop
mov
in
jns
push
jp
aaa
les
dec
enter
cmp
jge
fs
jno
into
jnp
jne
xchg
jmp
cmp
xchg
jne
inc
xor
jno
out
push
das
jae
cmp
push
in
add
cmc
addr16
cmc
lds
ja
cli
dec
ss
aas
pusha
sbb
popa
arpl
shl
mov
pop
jo
outsb
scas
ljmp
in
ds
stos
in
mov
notb
daa
cbtw
sub
rorb
setae
or
mov
and
and
retw
scas
lret
jno
imul
sub
loope
subl
adc
and
in
movsb
pop
and
pop
out
outsl
stc
je
stos
inc
mov
pop
pop
push
xor
xchg
pop
cmc
pop
mov
call
shlb
inc
ss
inc
jne
jl
stos
leave
roll
push
les
les
ret
sbb
aad
pop
sbb
or
and
in
hlt
cltd
cmp
pop
and
ds
jns
bound
scas
sbb
ret
pop
lods
jmp
jle
sbb
cwtl
fildl
jl
push
and
adc
and
out
mov
mov
and
dec
push
mov
dec
jl
cld
into
gs
loopew
stos
mov
and
je
inc
jns
test
jno
jns
xchg
mov
xor
or
popf
pop
sbb
inc
push
adc
fmuls
push
push
sti
faddl
jns
mov
adc
lods
inc
inc
jo
idivb
push
sbb
sub
add
push
in
pop
cmp
push
jns
and
or
std
sub
jb
cld
loope
dec
dec
jmp
jo
pop
sub
sub
dec
and
push
push
neg
pop
adc
mov
sub
int3
mov
push
hlt
cli
sub
arpl
adc
loopne
dec
fmul
fsub
imul
cmp
pop
sbb
int
xor
mov
dec
or
imul
repnz
dec
xchg
pop
mov
sub
inc
aas
add
out
loop
pusha
ljmp
mov
roll
aad
cmp
or
and
and
imul
mov
dec
mov
movsl
mov
loop
jo
xchg
jmp
push
shl
xchg
mov
test
xchg
mov
add
adc
hlt
pop
mov
cmp
lret
cwtl
xchg
clc
inc
pop
xor
jp
idivl
ss
cwtl
jbe
es
out
and
mov
jp
dec
inc
fsubrs
clc
pop
jg
test
or
jmp
pop
sti
mov
jnp
mov
imul
sbb
or
mov
fmuls
int3
inc
sbb
sub
shl
nop
cmp
dec
fwait
aam
xchg
cmp
hlt
add
dec
cmpsb
jmp
and
jb
pop
jne
fldcw
repz
clc
adc
fwait
or
ja
mov
push
mov
dec
pop
push
xchg
es
jae
in
adc
pop
ljmp
mov
cmpsb
cld
leave
nop
jb
lods
xchg
jp
nop
push
xor
jnp
push
inc
xlat
ss
mov
les
jle
cmp
xor
cmp
fwait
pop
inc
aad
movsb
adcl
jbe
xchg
imul
dec
lods
push
lods
pop
leave
shrb
mov
mov
mov
test
rcrb
cmp
push
in
call
jb
lock
cs
ja
mov
mov
mov
imul
push
insl
movsb
inc
jl
je
jp
xchg
aad
xchg
rol
mov
in
leave
fsubr
test
and
insb
dec
pop
xor
mov
lock
mov
fisubl
stos
jge
inc
fwait
pop
loopne
pop
bound
adc
cmpsl
fsubrl
in
scas
dec
jl
xlat
imul
dec
ja
test
mov
add
adc
pop
fdivrs
cmp
cs
enter
int
inc
and
aad
addr16
shrb
mov
pop
sub
ljmp
push
mov
sbb
rcll
adc
mov
sbb
bound
add
inc
push
xchg
push
push
cmpsl
out
pop
lret
in
jb
dec
outsl
jb
or
mov
mov
imul
imul
stos
xchg
add
xchg
and
jge
gs
cltd
sub
and
leave
arpl
ljmp
push
jl
jno
stc
pop
popf
push
ja
xchg
cmp
push
add
movsb
lret
mov
lret
adc
and
popa
xchg
pusha
ret
testl
imul
and
mov
fcmovb
shlb
mov
cwtl
popa
out
add
xchg
nop
sti
inc
sahf
movsb
xchg
in
inc
mov
bound
ja
and
test
jb
in
and
jl
leave
cmpsb
dec
inc
adc
popf
test
pop
hlt
push
icebp
pop
push
pop
sub
out
lds
sahf
and
jle
sbb
inc
pop
aad
pop
fldl
or
dec
push
add
insb
jb
push
adc
and
sbb
dec
adcl
mov
jns
mov
ss
mov
inc
dec
and
jo
inc
jb
mov
lcall
pop
ret
xchg
arpl
in
xchg
or
fs
or
shlb
mov
inc
leave
push
sub
mov
and
addr16
dec
mov
add
nop
sub
aaa
iret
dec
cmpsb
mov
test
scas
dec
adc
das
pop
imul
or
dec
hlt
loop
insb
cmp
ret
andb
xor
sub
mov
addb
int3
shrb
jo
push
cmpsb
adc
dec
mov
jecxz
shrl
jge
je
jmp
sarb
sub
mov
clc
es
xor
mov
leave
pushf
pop
aam
sbb
cwtl
pop
pusha
fidivrs
sti
mov
test
and
stc
aaa
pushf
lcall
jmp
xor
mov
or
bound
jo
test
add
mov
sbb
xchg
mov
jae
in
mov
icebp
popf
cmp
cmpsl
popa
adc
adc
ret
ret
ljmp
sbb
pop
mov
lds
push
pop
shl
adc
fcomip
adc
aas
xchg
mov
push
or
mov
sbb
int
fstpt
inc
sbb
jle
push
mov
sub
jbe
add
or
out
cmp
lcall
test
aam
les
sbb
jae
call
int
cmc
idiv
cmp
mov
xor
jge
cmp
mov
jns
into
or
loopne
jne
dec
mov
mov
ja
into
sub
or
add
nop
xchg
lret
and
ljmp
pusha
mov
xor
movsb
inc
je
pop
mov
add
ds
ds
mov
fs
dec
and
inc
xor
and
push
push
push
std
lods
cmp
adc
shll
push
xchg
addr16
mov
popf
jge
mov
lds
mov
xchg
mov
mov
fs
sbb
mov
test
pop
push
mov
nop
cmpsb
test
add
outsl
jmp
nop
xchg
dec
jge
push
test
scas
fnstsw
mov
shlb
push
shrb
out
fadds
push
add
cmp
mov
sub
rcrb
inc
mov
into
mov
jbe
lcall
stos
aaa
movb
jg
ret
adcb
mov
in
and
adc
outsl
imul
addr16
shl
aaa
push
xchg
cmp
sarb
dec
dec
adc
or
aam
in
imul
arpl
dec
sub
hlt
dec
inc
cmp
rcrl
sub
push
and
les
cmp
lds
int
add
pop
cmc
aam
outsl
add
faddl
lds
loop
rorl
ret
cld
adc
roll
jb
popf
mov
dec
adc
lcall
xchg
sub
movsl
mov
pushf
mov
lock
cmc
cmpsl
add
test
ss
xchg
push
mov
xchg
and
in
subb
sub
ror
sbb
or
or
cmp
mov
arpl
in
add
setp
inc
xchg
xor
clc
pop
test
mov
cmpsb
dec
aad
adc
imul
lods
adc
shl
cwtl
imul
add
pop
into
jb
dec
push
xor
jb
jnp
cmc
fwait
xor
xchg
adc
jns
mov
mov
fsincos
cli
add
mov
mov
inc
adcb
bound
mov
in
test
jge
ds
pop
mov
fistpll
push
mov
int
dec
cmp
stos
sub
xchg
add
and
jae
push
xchg
mov
loop
add
xlat
in
dec
stc
cmp
imul
sbb
sub
add
cs
push
mov
enter
outsl
mov
sbb
adcl
dec
mov
nop
frstor
cmp
jnp
xor
sbbl
std
mov
push
jno
arpl
fdiv
xchg
call
movsb
scas
push
sbb
clc
inc
or
orb
lret
xorl
inc
sbb
dec
into
mov
pop
cwtl
cli
out
inc
xor
pop
jno
popa
decb
cli
aaa
adc
xchg
xchg
mov
inc
in
and
out
xlat
inc
xchg
aad
xor
sti
xchg
cmc
adc
sub
adc
movsb
daa
mov
fidivl
in
xor
ror
xchg
inc
lods
rcrl
shlb
imul
das
and
testl
mov
clc
cld
test
and
clc
out
jmp
movsl
cmp
hlt
jnp
jge
cmp
inc
aaa
jb
inc
mov
xor
add
push
adc
xchg
push
arpl
inc
test
fidivrs
mov
or
add
mov
mov
add
inc
or
call
cs
or
data16
mov
lods
repnz
add
cmc
int3
loopne
mov
stc
rcr
push
subb
mov
dec
inc
mov
es
or
fmull
mov
pop
adc
mov
jp
mov
lret
arpl
loopne
cmpsl
mov
ret
mov
std
mov
and
xchg
push
dec
sbb
add
lock
pusha
xchg
cmp
pop
mov
jge
aad
push
mov
mov
or
lods
je
arpl
xchg
shlb
push
pop
enter
negb
xchg
int3
sub
ret
aaa
movsb
lods
and
inc
mov
testl
push
mov
hlt
mov
pushf
pushf
cmp
scas
mov
sahf
dec
test
push
out
ljmp
or
sub
jg
push
arpl
lret
and
jb
pop
push
call
lods
shrl
test
jp
mov
xor
sub
push
sahf
js
call
aam
stos
pop
fisttpl
fistl
call
add
nop
mov
imulb
push
outsl
push
mov
add
insl
sbb
mov
sub
test
pushf
mov
dec
xchg
shlb
mov
and
stos
mov
sub
inc
daa
sub
sahf
sbb
add
mov
xor
out
push
sub
fiaddl
xchg
shlb
mov
mov
or
ljmp
bound
dec
int
ja
push
std
mov
lea
mov
out
test
lods
xchg
lods
ljmp
dec
nop
pop
push
loope
scas
jbe
fists
out
iret
inc
mov
ret
lock
jnp
dec
jae
xlat
gs
jmp
mov
fbstp
std
pop
and
adc
inc
mov
jp
mov
int3
jl
pushf
inc
or
jo
in
arpl
cmp
cmpsl
push
pop
lcall
and
rcrb
cmpsl
fdivrl
adc
add
pop
adc
mov
inc
sub
push
mov
inc
or
lock
dec
fisttpl
fs
push
jg
jne
cwtl
add
cli
mov
stos
ret
test
mov
inc
inc
shrb
mov
pushf
and
mov
or
test
mov
inc
hlt
jbe
inc
xlat
loop,pn
sbb
or
push
popl
ds
pop
mov
mov
fldcw
mov
jae
xchg
pusha
test
dec
insb
add
icebp
add
int3
adc
outsb
dec
or
push
xorl
xchg
mov
cmp
loop
mov
ret
inc
cmp
push
sub
jl
dec
jo
push
sti
jmp
mov
xchg
jne
cs
mov
movsl
pop
sub
mov
loope
sbb
inc
out
stos
pop
loop
dec
jns
or
test
stos
adc
jne
sub
pop
ret
pop
and
or
cmp
jo
xchg
test
in
fildl
mov
outsb
inc
gs
sbb
jle
lock
xchg
fs
cld
enter
icebp
sbb
inc
mov
rcrb
pop
jmp
xor
mov
arpl
mov
enter
cmp
js
or
and
orl
push
incl
clc
pop
fucom
mov
outsb
xor
mov
lret
es
push
lret
or
jae
push
rclb
je
out
scas
add
cmp
pop
mov
call
repnz
loop
lods
dec
dec
pop
mov
shl
rcrb
xor
sub
push
jo
dec
adc
stos
rcrb
adc
scas
pop
je
outsl
xchg
popf
dec
mov
loop
shll
mov
mov
pop
jb
int
fld
das
fcomps
inc
sti
dec
sub
jmp
mov
xor
push
insb
fsubr
cmp
pop
cmp
mov
into
in
jecxz
jae
push
mov
lret
mov
cmpsl
ficomps
sbb
loope
mov
cmp
xor
lret
or
movl
mov
into
mov
adc
shr
incl
rcl
mov
cmp
int
sbb
out
cltd
push
lret
loope
dec
mov
hlt
test
fisttpll
stos
pop
dec
sbb
out
xchg
jge
inc
lahf
add
push
movsl
jge
sub
adc
std
test
lods
das
fcomps
cld
imul
sbb
and
cltd
insb
daa
pop
loopne
sub
and
xchg
xor
cmc
insl
sahf
lock
loopne,pt
gs
cmc
sbb
xchg
jg
nop
ds
pop
pop
pop
sub
add
mov
psubq
xor
add
jae
rcll
sub
pop
fnop
mov
add
adc
mov
pavgw
cmova
jb
insl
sub
frstor
and
xchg
out
xchg
ljmp
adc
sbb
sarb
clc
cmp
or
fwait
test
push
in
mov
xor
icebp
push
pop
cmp
add
push
cmpsl
imulb
xchg
push
adc
out
ret
sbb
mov
adc
push
dec
pop
lea
mov
xor
repz
call
xchg
cmp
mov
push
pop
push
pop
jle
jb
and
movb
cli
test
mov
xor
sub
sub
adc
jmp
je
lock
add
adc
sbb
popa
jb
mov
add
jne
add
out
jne
xor
dec
pop
das
sbb
mov
aaa
pusha
xchg
sub
sbb
cmp
sbb
dec
fwait
divl
cmpsl
movsl
sbb
scas
xchg
inc
call
sbbl
stos
or
push
mov
or
add
inc
test
daa
lods
sub
or
pop
int3
les
mov
lea
scas
xor
xchg
jbe
psrlw
out
fcoms
mov
enter
jns
adc
jo
mov
fsubp
mov
aad
and
outsl
data16
mov
jg
dec
in
or
and
mov
in
fldcw
mov
sub
dec
mov
sbb
inc
adc
sti
and
push
mov
pop
mov
in
inc
test
in
push
mov
fnsave
adc
add
cmp
pop
cli
jecxz
mov
dec
hlt
add
outsb
bound
push
add
inc
outsb
push
pop
xor
and
sti
mov
outsl
sub
movsb
jg
cmpsb
jl
je
pushf
sbb
cmp
jmp
repnz
in
mov
scas
inc
mov
rorb
mov
repz
cmp
inc
pop
and
lret
inc
jno
dec
inc
push
push
push
leave
mov
and
adc
mov
cmp
adc
mov
dec
push
test
sbb
jne
cwtl
and
xchg
jne
push
arpl
adc
pop
sbb
cli
and
push
addr16
inc
std
xchg
repnz
hlt
jno
pop
adc
movsb
xacquire
std
inc
sbb
inc
fldcw
test
dec
loope
pop
inc
push
fildll
fcmovne
mov
inc
adc
or
push
push
inc
shrb
or
or
xlat
jnp
inc
cmp
cwtl
ja
and
rolb
test
lods
ds
adc
adc
repnz
push
cmp
mov
dec
lret
adc
mov
push
pop
fstpt
mov
int
xor
or
xor
loop
out
filds
shll
mulb
mov
adc
inc
add
daa
push
ficoml
push
movsb
xchg
cs
jg
jecxz
jmp
iret
add
iret
xchg
sub
outsl
or
sbb
repz
ja
lods
xorl
sub
cli
pop
notl
test
ret
test
call
dec
mov
das
add
inc
ss
stos
jmp
xor
in
xor
dec
fwait
iret
jge
adc
pop
cmp
out
push
leave
and
in
bnd
xchg
cmpsl
rclb
outsb
in
push
loopne
jecxz
push
aad
jo
ja
call
cli
fcoml
sbb
xor
imul
sub
fadds
xor
cmp
inc
pop
lock
mov
sbb
sub
loopne
inc
daa
sbb
test
sbb
xor
in
les
add
arpl
add
pop
jns
push
repnz
mul
repz
sub
jne
or
jmp
ljmp
push
mov
cmp
mov
scas
sub
xor
adc
roll
jmp
cmp
addr16
add
ret
test
xor
fsubrl
aas
jl
je
cwtl
pusha
cmp
pop
adc
push
and
shll
insl
clc
pop
call
outsb
or
mov
sbb
aas
dec
jbe
rcll
std
icebp
mov
dec
xchg
and
das
dec
mov
std
cli
xor
mov
pop
add
in
cmp
fbld
sub
jg
loopne
mov
inc
rcrl
add
es
dec
inc
lret
std
xchg
jmp
mov
or
filds
negb
movsl
mov
out
jo
sbb
mull
pop
cmp
mov
push
sub
xchg
loope
out
fsubp
or
mov
imul
es
iret
and
lods
jnp
adc
xchg
add
int3
sbb
fs
mov
jecxz
fildll
mov
push
jmp
dec
shl
adc
cmpsb
out
dec
or
cmp
movsb
mov
in
mov
jle
nop
fnstenv
iret
mov
int
dec
jg
cwtl
mov
and
push
sbb
lods
jns
ja
xor
lea
ljmp
add
jnp
ret
inc
rolb
push
pusha
test
jp
adc
into
mov
cmpsl
mov
xchg
push
movsl
jmp
movsb
and
mov
lret
lds
xor
sbb
iret
and
jecxz
lods
fdivrs
mov
in
cmp
fcmovnbe
jno
out
leave
and
dec
aaa
xchg
mov
sub
mov
orb
iret
dec
mov
add
fidivs
arpl
push
mov
jp
test
xor
sqrtps
jmp
jge
mov
push
sub
cs
jge
rorl
and
ret
adc
imul
xchg
or
and
dec
lcall
mov
cmp
int
jns
pop
addr16
out
icebp
adc
push
pushf
xor
mov
test
sbb
and
ret
enter
mov
cmp
jg
cld
icebp
adc
mov
das
adc
sti
ljmp
push
mov
mov
enter
lods
cmpsb
cli
xor
adc
insb
sub
dec
mov
nop
dec
orl
js
ret
out
shrl
and
fisubl
cmp
adc
in
lods
sbb
clc
sub
loopne
and
mov
stc
xlat
outsl
dec
pop
dec
cmpsb
cld
js
pop
lods
sahf
dec
loope
cmp
adc
decl
jle
inc
fwait
int3
daa
rclb
xorl
mov
dec
xchg
jmp
dec
mov
in
mov
or
pop
imul
out
sbb
dec
insl
jo
xchg
sub
jge
sbb
ljmp
mov
mov
ret
jbe
xor
sub
lea
lahf
jg
cmpsl
addr16
aaa
sbb
ds
mov
out
sub
mov
loop
xchg
mov
add
daa
ljmp
mov
lcall
inc
test
sahf
dec
mov
lret
mov
jb,pn
js
aad
jne
stc
adc
mov
lea
adc
test
jp
push
and
inc
pusha
sbb
sub
fs
fnsave
cmp
mov
xchg
ja
enter
cmp
leave
jae
sub
or
outsb
add
sbb
jae
mov
popa
stos
cmp
aas
mov
cli
cmp
scas
cwtl
arpl
mov
jbe
push
loope
inc
lahf
pop
fs
xchg
shll
pusha
fcompl
movsb
in
adcl
adc
adc
push
xlat
mov
inc
roll
xchg
insb
push
sti
sbb
std
ret
ds
in
push
push
inc
ljmp
xlat
es
adc
gs
mov
or
jg
mov
xchg
sarl
adc
scas
inc
mov
fstpt
daa
xor
dec
inc
mov
push
mov
sub
cld
jle
cli
rcr
addr16
mov
xlat
loop
in
stos
sbb
pop
test
sbb
add
scas
gs
sub
sub
loop
inc
arpl
insl
dec
dec
fdivr
ror
jle
push
pop
pop
int3
jp
lcall
pop
mov
pop
jae
sbb
xor
in
inc
push
leave
jo
or
sbb
lods
lcall
jnp
shrb
fmull
adcl
shlb
mov
fs
fdivrp
ret
cld
and
cmp
bound
mov
mov
cli
push
or
xor
push
dec
fwait
xchg
mov
adc
ds
setl
pusha
cmp
aaa
xchg
inc
xchg
rcrl
xor
repz
sub
stos
divb
stos
icebp
inc
pushf
sti
pushf
daa
xor
cmp
mov
mov
dec
clc
mov
sarb
pop
stos
and
mov
or
dec
jns
clc
inc
mov
ljmp
mov
sub
mov
dec
and
xor
fimull
cmp
mov
cmp
mov
and
push
jle
pop
mov
pop
xchg
add
adcl
push
int
mov
cmp
xorb
push
aaa
outsl
xchg
jne
dec
in
and
xchg
lcall
adc
inc
aad
adc
test
sbb
popf
aad
adc
mov
sub
xchg
and
mov
imul
jmp
decb
push
xchg
pop
push
inc
jne
or
cmpsl
ret
cs
mov
cmp
subl
jae
xchg
sti
or
pushl
loope
out
in
incb
pop
arpl
pop
add
mov
adc
repnz
outsl
adc
inc
jne
cmp
fstpt
or
cmp
bound
push
fimull
or
inc
cwtl
add
cmpsb
cs
int
cli
scas
inc
cmp
inc
repz
push
push
push
xchg
xchg
push
cmp
xchg
mov
inc
cli
xor
arpl
sub
sbb
icebp
jecxz
push
push
imul
sub
xchg
or
mov
outsb
pusha
mov
jo
aas
cmpsb
xor
dec
lret
fwait
cmpsb
adc
ja
adc
adc
jns
dec
jp
cmp
in
xchg
add
jns
faddl
push
jmp
lock
jecxz
lret
and
jle
pop
stos
outsl
jbe
xchg
test
adc
lods
test
insb
mov
mov
mov
cmpsb
or
fcmovnb
mov
mov
pop
cmp
and
inc
andl
outsb
fisttps
pop
outsb
sbb
pop
or
fbld
roll
cmc
lods
pop
xchg
int
push
aam
loop
popf
sub
dec
push
dec
imul
mov
fnstenv
sub
lds
cld
dec
imul
sti
dec
push
dec
cmp
scas
stos
dec
popa
setbe
add
jecxz
cmp
lds
dec
xchg
stc
out
rol
xor
push
jge
or
cld
pop
lcall
imul
pop
ficoms
dec
shrl
mov
out
rol
roll
or
lret
into
shlb
or
adc
sub
insb
mov
sbb
add
int3
das
push
ja
push
clc
mov
jecxz
ret
adc
adc
stc
ja
mov
jecxz
jae
mov
add
mov
aad
test
leave
imulb
and
sbb
xchg
pop
mov
mov
addl
pop
ret
aaa
ss
push
mov
mov
add
xchg
out
shll
mov
arpl
cmp
or
rorl
and
ljmp
and
push
xchg
push
aad
pop
jns
push
xchg
pop
je
dec
out
mov
outsb
fdivs
frstor
sbbl
add
in
push
mov
inc
ss
adc
loope
and
ja
pop
jmp
scas
add
and
xor
mov
iret
adc
hlt
sti
rcrb
jmp
ja
orl
push
mov
subb
sbb
jne
inc
out
leave
or
mov
stos
pusha
mov
out
stos
mov
mov
pop
popf
imul
xchg
xchg
mov
movsb
sub
ljmp
mul
xor
xchg
adc
mov
mov
mov
pop
push
xor
test
fidivrl
adc
sti
loopne
ds
je
sti
js
pop
icebp
jne
push
cmpsb
cmp
xor
jp
mov
cmp
js
subl
int
stos
enter
jnp
stc
call
andl
xchg
xchg
inc
pop
sub
and
cmp
pop
dec
add
lcall
mov
sti
cmp
mov
inc
ljmp
and
mov
ds
shll
jae
sub
sbb
pop
cmp
addr16
scas
jmp
in
xchg
mov
imulb
pop
addl
gs
inc
icebp
push
jmp
loop
mov
repnz
sbb
mov
inc
cmpsb
sub
add
iret
add
mov
mov
shll
jnp
out
insl
roll
inc
jmp
push
mov
pusha
hlt
outsl
test
push
ret
sub
or
cwtl
push
xor
and
jp
mov
pop
notb
or
call
loopne
int
push
adc
inc
movsl
movsl
inc
push
ja
inc
sub
pop
push
mov
mov
in
lock
add
test
sbb
lods
mov
rdpmc
daa
dec
xor
arpl
imul
mov
and
mov
fdivrl
mov
jmp
lods
xchg
push
pushf
jecxz
jno
pop
add
jbe
and
pop
lock
imul
sahf
leave
inc
cmpsl
dec
iret
pop
push
fs
cmp
mov
or
sbb
popa
dec
sbb
dec
rcl
orl
push
nop
cmp
mov
fwait
jecxz
notb
int3
lret
out
ret
cmp
call
dec
les
inc
cld
or
sub
mov
sub
movsb
enter
jno
jl
sbb
js
gs
mov
push
add
inc
sbbl
lret
mov
jp
sbb
inc
in
dec
fisubrl
dec
jns
js
inc
xor
cmp
into
inc
mov
aas
jmp
outsb
or
sbb
out
nop
xor
into
aas
daa
adc
stos
mov
mov
and
adc
int
and
push
stc
outsb
mov
ret
push
loop
jne
shrl
push
loop
xchg
aam
inc
cmp
fstpt
insb
inc
cli
xchg
mov
jmp
dec
mov
insb
mov
dec
dec
pop
mov
sbb
jecxz
ret
adc
xchg
sti
jecxz
in
mov
icebp
dec
and
cmp
or
stc
sbb
inc
aad
adc
jb
aam
or
jo
lock
js
dec
cmp
adc
dec
pop
aam
xlat
popa
xor
pop
subl
pop
fcmovb
dec
rcll
leave
xor
test
or
jl
pop
mov
adc
aaa
je
daa
out
loopne
ss
sub
fdivs
ss
and
out
cmovg
sbb
mov
xor
jnp
pusha
outsl
push
pop
mov
in
and
idiv
mov
sti
dec
add
lea
jle
daa
cs
mov
dec
jmp
addb
push
fwait
mov
xor
sbb
push
popa
leave
insl
add
xchg
mov
movsl
mov
cmp
fwait
lods
mov
ja
adc
mov
inc
es
dec
xor
inc
data16
ficoml
pushf
xchg
push
mov
push
divl
adc
mov
in
arpl
sub
rorb
push
inc
xor
pop
inc
jnp
mov
jno
pop
aas
jl
insl
lea
sti
call
push
in
jecxz
xchg
fsts
xor
pop
fdivrs
mov
ljmp
fistl
sbb
cmc
pop
cmp
jbe
xor
sbb
cltd
mov
cld
test
imul
movsl
dec
cld
stos
in
add
mov
sub
cmpsb
icebp
lret
loope
add
xor
xor
rorb
mov
daa
movsb
pop
cwtl
jae
outsb
sbb
loope
jb
mov
cmp
sahf
jp
daa
push
int
inc
mov
int
add
insl
out
or
or
jmp
pop
out
xor
add
xor
mov
pop
adc
jns
iret
in
cli
out
lods
jbe
pop
push
add
jae
lahf
popf
pushf
stos
lahf
fdivrl
and
sahf
arpl
dec
fdivrl
les
icebp
pop
sti
jbe
enter
je
cmp
cmp
xor
inc
insb
push
rolb
sbb
and
and
pop
nop
call
and
jbe
fmuls
dec
int3
ss
jp
in
adc
data16
lahf
rcrb
jnp
fcoms
mov
mov
add
mov
push
loopne
adc
in
push
mov
mov
pop
jo
mov
jge
push
loope
rolb
imul
pop
push
lds
xlat
xchg
cmp
stc
mov
add
sbbb
mov
sbb
leave
sbb
cmp
scas
arpl
fdivs
pop
into
jbe
dec
xchg
xchg
mov
mov
pop
sbb
adc
mov
addl
nop
lods
pop
pop
xchg
pop
mov
or
test
dec
sub
xchg
out
xor
rcll
xor
mov
push
sbb
adc
movsb
or
cmc
outsl
adc
ret
icebp
mov
lods
xor
fwait
jno
cmp
add
or
adc
or
push
cmc
fs
mov
nop
jmp
push
cmp
jle
fdivrl
std
pop
mov
mov
xor
add
push
and
iret
mov
jge
int
stos
outsl
and
pusha
mov
xchg
gs
repnz
sub
pop
movsl
imul
std
inc
stos
fisttpl
xchg
sbb
sbb
lea
test
cmpsb
imul
xchg
inc
js
hlt
push
lds
inc
xor
dec
dec
orb
xchg
test
cmpsb
cltd
mov
mov
inc
xchg
pop
mulb
or
lahf
leave
pushf
pop
jl
ret
mov
mov
pop
sbb
add
add
jo
dec
cmp
mov
push
subb
sti
lss
add
cmp
lds
push
mov
xchg
filds
dec
push
les
int3
jae
cmp
pop
lods
pop
jg
js
icebp
mov
cmp
mov
aaa
insl
pop
push
or
test
stos
push
das
ds
stc
push
lret
sarb
in
imul
push
outsb
pop
xchg
lahf
xchg
push
test
xchg
push
pushf
cmc
mov
and
and
clc
popf
or
push
shll
push
cld
inc
int
xchg
push
imul
test
lcall
repnz
out
lock
in
shrb
call
scas
mov
dec
add
adc
js
nop
test
dec
icebp
jp
adc
movsb
sar
pop
imul
and
pop
jmp
ret
int3
mov
sub
addr16
push
fwait
mov
loop
mov
cmc
pusha
and
pop
mov
lea
pop
lret
int
xor
xor
xchg
mov
add
repz
loope
repnz
fwait
lret
sub
mov
cli
bound
add
out
out
xor
sub
rclb
test
scas
push
imul
int
rcrl
pop
dec
inc
popa
jo
leave
cli
cmp
cltd
or
out
xchg
daa
ja
and
inc
mov
idivl
mov
and
lds
inc
sbb
jl
imul
add
decl
jnp
adc
jnp
xchg
mov
push
cwtl
pusha
ret
es
push
lock
and
jmp
iret
pop
daa
iret
dec
aad
cmpsb
fdivl
cwtl
sub
jmp
into
popa
mov
xor
dec
push
mov
outsl
lods
and
lahf
pop
gs
mov
repz
push
dec
cmp
decb
mov
imul
mov
push
or
pop
dec
inc
lret
pop
xor
pop
push
stos
jmp
ficoml
mov
and
out
sbb
pop
insb
cmc
cmp
test
sub
out
sub
pop
and
dec
jl
xor
repz
out
or
xor
add
movsl
sub
lahf
gs
shr
add
pop
mov
xchg
xchg
and
inc
xchg
mov
repz
gs
insl
xchg
xchg
stos
mov
nop
data16
mov
jl
mov
jle
divl
xchg
cmp
mov
and
cmp
dec
xchg
add
jne
cmpl
inc
hlt
int3
pop
mov
xlat
cmpsl
test
inc
inc
push
pop
dec
incl
jl
repz
insb
push
dec
cmp
dec
cld
sub
adc
pop
jl
cmp
fldln2
es
pop
cmpsb
cmpb
lea
xchg
out
push
sub
mov
sti
stos
xchg
inc
shrb
je
in
mov
stc
and
and
cmp
int
and
or
bound
outsl
rcll
test
cld
sbb
shrl
clc
mov
mov
or
loopne,pt
aas
push
push
push
and
fmul
scas
adc
adc
sbb
cmpsl
out
loopne
jo
mov
jle
cmpsb
repz
cmpsl
dec
pop
adc
shrl
cmp
pushf
addr16
mov
add
adc
inc
or
movsl
stos
pop
cmp
lods
jb
sti
push
faddl
jno
in
adc
pop
inc
push
lds
sub
push
imulb
add
and
arpl
jg
mov
loopne
or
mov
lahf
pushf
adc
xchg
pop
fbld
shl
fmuls
pop
in
lods
push
cwtl
add
sbb
jmp
pop
mov
dec
leave
scas
mov
dec
cmpsl
xchg
bound
dec
xor
xorl
mov
gs
jnp
ret
pop
clc
orl
scas
notb
lcall
popa
push
scas
ljmp
pop
mov
fists
push
fs
cmc
aas
in
hlt
testl
dec
sahf
mov
jg
scas
or
mov
cmp
dec
ljmp
mov
push
and
xchg
pop
aas
scas
inc
lahf
dec
mov
cmp
or
mov
test
mov
or
sbb
cmc
jl
test
push
outsb
xchg
mov
add
mov
into
cmp
imul
jbe
push
ljmp
call
repnz
mov
pop
sbb
push
inc
adc
cmc
mov
sub
mov
hlt
mov
das
sub
inc
xor
pop
and
mov
cmpsb
sbb
xchg
xor
and
and
lahf
loope
adc
xchg
outsl
sbb
repz
xchg
popf
mov
fcompl
rol
push
out
movl
inc
cmp
fstps
mov
add
aam
pop
into
scas
js
aam
push
pop
or
add
mov
dec
mov
dec
pop
dec
int
imull
aas
and
addb
pop
cmpl
sbb
test
mov
cmp
pop
lock
pop
add
xchg
push
sub
dec
ret
pop
mov
and
cli
mov
lds
test
pop
pop
inc
vpsrlw
mov
mov
mov
popa
mov
popa
mov
push
sti
cld
out
cmp
std
xchg
ret
jg
pop
pop
cli
in
dec
inc
das
stos
mov
testl
jle
arpl
stc
cmp
sbb
push
shll
adc
sub
call
and
fwait
imul
xchg
popa
cmp
xlat
enter
inc
sbb
and
test
dec
sbb
inc
in
sub
popa
mov
lgs
outsb
test
movsb
sbb
rorl
mov
add
call
popa
out
jo
test
pop
adc
lcall
mov
je
rclb
pop
mov
jnp
jbe
or
or
and
push
push
mov
inc
jle
mov
adc
popa
cmp
adc
popa
xchg
adc
lcall
clc
jle
push
je
stos
xorb
aad
stos
mov
out
xor
adc
pop
mov
pop
arpl
call
sbb
aas
ret
ljmp
aaa
jns
dec
repz
sbb
xchg
xor
mov
cwtl
repz
arpl
and
mov
jnp
js
mov
lds
hlt
jb
lret
pushl
mov
add
out
out
shl
js
outsl
pop
push
push
pop
dec
into
push
xor
ret
xchg
rep
cmp
xlat
ss
jmp
outsl
sti
jb
ret
mov
dec
xor
jge
leave
hlt
mov
adc
lds
adc
shrb
mov
sahf
lret
lock
ss
dec
inc
outsl
je
push
call
jmp
inc
push
and
xor
repz
sub
daa
jae
js
jg
sub
mov
mov
jge
add
enter
push
sbb
mov
fldenv
loop
xor
fdivrs
and
jg
adc
jge
mov
fildl
sub
pop
lret
sub
xor
shlb
sar
rcll
pop
lods
xchg
cmp
xchg
xorl
add
loop
in
or
adc
out
out
jb
xchg
cmc
sbb
mov
mov
xchg
es
sbb
jnp
loopne
std
and
pop
mov
and
shrb
jg
movsb
repnz
inc
inc
test
int
arpl
jl
in
ss
ret
mov
sbb
xor
pushf
jge
cmp
and
and
sub
add
roll
ret
lret
adc
mov
addr16
dec
cli
outsb
xchg
int
mov
sub
ret
dec
addr16
add
jae
cmp
or
into
xor
mov
into
bnd
push
mull
cmp
fldl
xchg
ret
aad
jns
ror
arpl
push
fisubl
push
loop
pop
inc
mov
ss
fists
xchg
fs
lret
hlt
sarl
xor
push
int
in
push
mov
cltd
mov
sti
sub
jno
mov
jmp
mov
fcmovbe
rcr
dec
mov
pusha
loope
mov
xor
out
dec
mov
sub
inc
addr16
jne
jge
push
js
cmpsl
dec
push
ret
inc
pop
sahf
and
addr16
xchg
mov
and
rorl
enter
arpl
inc
stos
out
dec
std
mov
cmpsb
xchg
in
xor
or
aam
inc
and
and
mov
andl
jp
jne
aad
sbb
cwtl
mov
or
mov
and
call
hlt
mov
jb
pop
sbb
jns
nop
sub
or
jno
je
jb
xchg
xchg
es
add
mov
sahf
sbb
fisubl
aaa
pop
inc
notl
lret
pusha
mov
cmp
and
sub
xor
push
xor
inc
push
xor
lea
jne
mov
inc
cld
arpl
adc
daa
shl
xchg
scas
stc
dec
in
into
inc
lret
mov
enter
call
and
into
pop
outsl
rclb
movsl
mov
pop
mov
jno
adc
cmp
cmp
aas
mov
adc
pop
jmp
gs
xor
mov
and
repz
sub
inc
cmpb
insb
popa
sbb
mov
stos
bnd
xor
stc
pop
aaa
jle
pop
outsb
or
das
fwait
lcall
ljmp
inc
sarl
js
lcall
call
or
sbb
cmp
mov
push
sbb
or
stc
imul
pusha
mov
or
loop
adc
cmp
es
ret
jp
movsl
pop
ret
out
or
jecxz
outsl
mov
push
fldcw
or
pop
mov
pushl
xor
int
pushf
pop
stc
iret
repnz
xchg
mov
sbb
push
xor
adc
adc
xor
scas
push
leave
dec
inc
mov
pop
or
sub
imul
cmp
mov
lahf
mov
enter
sub
push
subb
jg
incl
scas
cld
into
lea
xchg
cmp
insb
pop
mov
call
aas
jp
ja
mov
adc
sbb
xor
mov
nop
mov
mov
and
cmpb
add
jge
mov
lahf
adc
dec
or
dec
popf
fimull
repz
xchg
push
into
jge
iret
add
arpl
test
mov
sub
lods
push
iret
jge
jne
adc
mov
dec
mov
dec
dec
fdivrs
or
dec
pop
loop
and
jge
aaa
js
add
or
out
pop
into
xchg
cvtpi2ps
dec
mov
loope
aaa
or
fiaddl
inc
add
daa
cld
push
stc
xor
pop
mov
sbb
adc
push
push
pop
stc
xor
pop
push
lahf
inc
scas
add
je
sbb
sbb
xchg
inc
jmp
dec
addr16
orb
mov
add
pop
mov
jae
fldenv
xchg
stc
xor
out
adc
sub
mov
mov
adc
movsl
arpl
sarb
add
mov
xor
or
jnp
in
add
mov
and
aad
dec
or
fcmovbe
enter
call
jl
inc
rorl
push
sbb
xchg
and
and
sbb
test
adc
push
insl
or
and
std
inc
cmp
repnz
jle
pop
mov
mov
aaa
and
icebp
dec
mov
jg
fildll
insl
aaa
mov
aas
jle
pop
jns
imul
sbb
insl
xchg
push
cmc
xchg
rolb
add
sbb
xor
or
inc
shlb
cmp
pop
sub
sbb
int
xor
sbb
daa
nop
jle
mov
and
ds
add
cmp
lds
lret
cmp
adc
fdivs
jae
xor
scas
shufps
mov
sbb
rcll
inc
sti
addr16
ficoml
clc
out
cld
std
cs
mov
aad
stos
inc
cs
scas
sub
cmp
and
inc
mov
mov
cmp
or
mov
xor
and
lds
pop
mov
out
rol
push
mov
rcrb
cltd
mov
roll
mov
or
out
and
sub
aaa
orb
push
and
repz
add
mov
out
inc
pop
pop
int
mov
testb
cmp
lret
sbb
push
arpl
scas
xchg
fs
mov
clc
leave
les
ja
repz
mov
mov
fimull
add
lret
movsb
lods
dec
or
push
lret
jae
test
outsl
cs
push
mov
xchg
sbb
clc
mov
cld
jp
xor
xchg
jmp
fstpt
adc
xor
sbb
clc
sbb
dec
dec
lods
mov
adc
outsb
sbb
aam
in
cmpsl
jb
dec
xchg
mov
jns
out
or
pop
lock
testl
inc
dec
rcrb
lret
or
ljmp
std
test
dec
pop
mov
push
add
xor
push
aaa
cmpsl
or
test
dec
test
add
or
call
xor
fcoml
in
test
adc
mov
and
xor
imul
test
fsub
dec
xchg
dec
jnp
movsl
testl
mov
mov
and
fxch
dec
jb
or
call
js
lret
daa
add
in
je
cld
push
push
lock
push
or
movzbl
or
mov
adc
int3
add
jl
out
mov
cmp
adc
call
xchg
jbe
lret
clc
cmp
pushf
lcall
xchg
mov
mov
jge
jnp
cltd
rcr
fiadds
push
sbb
push
inc
push
pop
mov
sarl
pop
jno
repnz
pop
dec
xchg
fsubrl
xchg
cli
mov
jae
ret
inc
adc
xor
add
pop
jmp
scas
cmp
mov
cmp
das
mov
mov
pop
sbb
sub
mov
sbb
xchg
mov
xchg
inc
sti
inc
mov
inc
or
das
cld
incb
daa
daa
mov
xchg
pushf
adc
adc
addb
clc
daa
fists
rcrl
fbld
xlat
xor
push
pop
rcr
jno
and
bound
flds
cmp
repz
out
dec
das
sub
cmc
mov
lcall
popf
loopne
mov
jge
xchg
sub
lods
call
or
sub
icebp
lods
pop
adc
shll
scas
xchg
lock
sti
cmp
icebp
orb
scas
push
cmp
jbe
fwait
sub
push
lods
inc
push
cmp
loope
daa
call
or
shrl
ror
mov
cmp
aas
push
sahf
fiaddl
xchg
add
fcoms
pusha
xchg
add
fstpl
sahf
push
loop
aaa
in
push
jno
int
in
fcoms
adc
pop
and
sbb
dec
aam
into
mov
movups
shrl
andb
add
mov
nop
mov
dec
sub
pop
sahf
mov
add
add
outsb
mov
jl
push
adc
movsl
pop
fdivs
out
cmp
int
add
sub
daa
add
outsb
cld
lds
cmp
les
cmpsb
pop
test
dec
sbb
loope
mov
dec
mov
jo
cmpsl
outsb
pop
scas
notb
or
movsb
xchg
je
enter
or
mov
sub
add
jo
mov
cmp
cmp
bsf
dec
adcb
and
lahf
cld
jne
cmovns
inc
push
push
out
call
int3
pop
adc
pop
shl
imul
pop
in
je
fs
nop
push
xor
sbb
sbb
aaa
adc
mov
inc
jecxz
fisubrs
push
and
cmpl
fisubl
movsb
ret
loop
xchg
xor
iret
mov
mov
cltd
dec
mov
jmp
into
adc
fildl
hlt
push
or
les
adc
sub
add
imul
xchg
xchg
cltd
jae
std
lds
pop
add
dec
nop
xchg
sarb
cmc
rorl
add
sbb
xor
pop
mov
xchg
or
cmp
or
sub
xor
das
mov
mov
ss
inc
pop
cs
into
mov
clc
dec
inc
mov
lods
push
push
push
mov
rcll
xor
mov
cmp
push
loope
data16
dec
pop
sub
js
inc
test
lret
inc
cmp
sbb
jnp
ret
fisttpl
pop
test
cmp
pusha
push
out
in
flds
mov
stos
aas
ds
in
test
and
fimull
cmp
jno
mov
iret
sub
mov
add
sub
pop
inc
xor
stc
xlat
push
mov
lret
int3
mov
push
xchg
push
lcall
mov
inc
xchg
insb
roll
rclb
mov
dec
mov
add
pop
rorl
rolb
shl
cld
out
or
arpl
mov
es
out
call
mov
outsl
jnp
and
pop
aam
xchg
lcall
push
lods
adc
xor
scas
mov
or
jle
cld
outsl
lret
push
movsl
int3
inc
xchg
push
pop
icebp
and
xchg
outsl
mov
push
lret
adc
cmp
fstpl
cmpsl
lcall
push
mov
cmpsb
dec
xchg
sbb
or
jmp
push
loopne
cs
xor
mov
pop
out
ljmp
dec
pop
int
inc
mov
hlt
pop
dec
or
jnp
inc
call
dec
movsb
int
lds
lcall
inc
addr16
filds
sar
in
idivl
iret
cmpsb
or
js
outsl
jl
int3
sbb
lahf
and
xchg
mov
push
xchg
adc
push
pop
jl
adc
ds
cld
mov
cmp
sahf
cmc
loope
adc
rorb
pop
xchg
cmp
aas
gs
cmc
cmp
xor
out
cmp
icebp
xor
je
in
out
pop
pop
stc
xorb
or
sarl
in
add
xchg
adc
xor
in
or
ja
cmpsl
mov
es
xchg
fldt
rorl
iret
cmp
sti
pop
jmp
lret
fsub
cmp
outsb
push
ficoml
inc
stos
sub
jns
mov
testl
xchg
repnz
pop
andl
lahf
pop
ret
fmul
pusha
or
int
push
clc
idivl
jmp
or
xor
mov
jno
cmp
cltd
or
cld
scas
xchg
xor
lods
inc
mov
xor
and
adc
insb
mov
cmp
repnz
cwtl
cmpsb
cmp
bound
pop
xchg
inc
adc
pop
or
dec
jle
sbb
popf
adc
addb
sbb
adc
shll
ss
shrb
add
mov
cmp
sbb
stc
sub
movsl
push
xchg
fldenv
jb
add
xchg
mov
jp
fidivl
jmp
faddl
das
popf
jg
les
movsl
leave
imul
mov
mov
cmp
xchg
inc
mov
jle
je
out
jne
out
pop
fsubr
push
pop
mov
aam
stc
jns
leave
in
loop
add
and
mov
mov
pop
or
jp
into
jne
jg
imul
dec
or
or
iret
push
push
das
jmp
jg
and
sub
xor
mov
stos
cmpsl
jg
fwait
shl
mov
cltd
mov
call
mov
testl
movsl
cmp
test
mov
aad
jecxz
jo
pop
or
fwait
jne
movsb
mov
and
and
lds
into
insl
mov
cmpsb
fcompl
loope
add
xchg
jne
push
shll
aam
movsb
mov
test
xchg
mov
push
jl
cmp
jo
leave
sub
outsl
jne
inc
mov
mov
lods
cmp
out
mov
and
inc
imul
test
das
movsb
xchg
pushf
leave
jb
dec
pusha
sub
jmp
jb
lret
mov
cmc
mov
aad
sbb
fdiv
or
data16
push
test
aad
ret
xchg
push
js
and
and
mov
jmp
add
std
pop
incl
jns
rol
or
xchg
insl
or
mov
jns
sub
adc
push
cmp
fistpl
movsl
mov
mov
addr16
pop
repz
fwait
jo
sub
pop
mov
loope
adc
push
add
cmpsl
adc
insl
lods
xor
mov
inc
mov
push
lret
push
mov
gs
cld
jae
mov
gs
sbb
das
cwtl
sbb
out
jb
lahf
test
xchg
sbb
insl
dec
adc
fcoml
imul
push
jo
lock
mov
pop
xorl
jae
push
leave
fldl
out
sub
test
xlat
js
ds
decl
sbb
push
loope
jo
rcrb
dec
movsb
lret
pop
in
jb
test
and
aaa
les
jno
and
xchg
xor
add
inc
bound
pop
or
loope
add
aaa
mov
fwait
xchg
inc
cmp
je
dec
mov
loop
sbb
mov
adc
fisttps
adc
sub
push
or
sti
push
push
stos
lea
jl
lea
nop
stos
jne
jmp
push
push
lods
in
xor
sarl
mov
outsb
lcall
pop
enter
gs
jnp
scas
lods
xchg
jbe
push
inc
and
test
repz
stc
mov
lret
or
or
cld
js
xchg
sbb
inc
ss
nop
fmuls
sub
inc
je
push
dec
out
imul
out
adc
add
pusha
adc
fcoms
mov
push
cmpsl
pusha
sbbb
adc
aas
pop
xchg
enter
rcrl
stos
mov
movsb
inc
imul
sbb
test
hlt
pop
and
xlat
jge
mov
je
mov
movsb
loop
int3
mov
and
cwtl
mov
xchg
mov
divb
or
jle
stos
push
xor
lock
outsl
mov
sti
orl
inc
mov
test
adc
mov
jle
push
or
jle
fcos
pop
cwtl
jno
lea
mov
or
cltd
mov
aam
imul
mov
test
and
int
jg
lds
cmp
xchg
test
jbe
lahf
cmpb
push
out
jbe
and
int
shrl
cmc
adc
dec
lea
fidivl
enter
push
mov
insl
pop
adc
xchg
gs
and
mov
xchg
test
pop
ss
jge
mov
out
outsb
xor
andl
xor
aam
mov
dec
jmp
cmpsl
dec
push
push
dec
jne
inc
sbb
repz
cld
dec
inc
addr16
sub
shlb
push
test
and
xchg
out
jg
in
sbb
je
test
sti
scas
mov
fsts
push
xlat
aam
inc
xlat
or
push
mov
push
imul
pop
repz
jae
xchg
xchg
int
testl
mov
jge
pop
in
out
xlat
arpl
pop
cwtl
in
jnp
mov
or
movsl
pushf
add
dec
lret
push
push
and
pop
loope
int
add
inc
xor
les
pushf
sti
arpl
outsb
push
pop
idivl
jo
jle
ljmp
scas
in
dec
ret
ds
dec
fidivl
sahf
testb
and
movsb
outsb
loopne
cmp
adc
or
push
mov
and
imul
mov
pop
sub
pop
subb
fisttpl
or
xchg
loopne
jno
pop
lcall
mov
xlat
nop
sub
sub
filds
cmp
dec
adc
enter
in
fcomps
bound
mov
popf
in
push
mov
dec
stos
inc
mov
mov
sbb
ret
ss
pop
adc
insb
out
aaa
icebp
ss
in
fimull
mov
fdivp
aam
xor
test
loop
mov
es
mov
push
fsubl
adc
fstl
bound
xor
pop
fwait
imul
jecxz
arpl
and
lcall
mov
sbb
fs
in
mov
popa
fs
mov
xor
ljmp
cmp
outsl
lret
or
mov
lahf
add
fnstcw
lahf
mov
mov
and
dec
dec
push
gs
jmp
pushf
inc
push
jp
movsb
or
shll
or
cmp
cld
cs
aas
das
mov
push
das
dec
repnz
stos
jns
adc
ljmp
pop
idivl
sub
cs
jbe
aaa
int3
jl
and
addl
stc
out
loop
enter
push
push
sti
mov
push
rclb
leave
daa
repz
pop
or
push
jo
lea
loopne
shll
sbb
add
data16
push
outsl
dec
es
mov
cs
dec
in
jmp
gs
in
sbb
inc
inc
xchg
dec
sub
mov
pop
jne
jecxz
cltd
outsl
mov
and
push
cs
pusha
stc
jno
les
cltd
pop
mov
xchg
xor
xchg
sti
fstpl
pop
push
ljmp
iret
lret
jg
mov
add
mov
sbb
dec
inc
and
mov
inc
test
insl
mov
jnp
mov
cmc
bound
fdiv
fnstcw
and
shrb
sub
or
imul
test
popf
xchg
pushf
scas
loop
jecxz
push
mov
xor
stos
mov
dec
out
mov
mov
mov
add
cs
fnstenv
out
negb
fisubs
aam
push
cwtl
outsb
add
rorl
push
mov
hlt
sbbb
unpckhps
fdivrl
roll
cmp
mov
mov
inc
pop
lods
sbb
out
xchg
sbb
sub
repz
dec
or
add
push
popa
sarb
pusha
scas
arpl
ja
mov
test
inc
mov
inc
cli
sbb
add
jae
pop
pushf
leave
fildll
in
pop
mov
adc
aaa
pop
jb
add
in
test
sbb
test
or
mov
mov
xor
xchg
in
inc
mov
ror
fidivrl
loopne
mov
movsb
push
mov
mov
sub
in
push
out
sbb
mov
add
sub
mov
imul
sub
inc
add
mov
enter
and
push
pop
lea
adc
fwait
icebp
dec
mov
int3
pop
xlat
cmpsb
cli
adc
cld
loope
xchg
stc
add
lock
jp
je
dec
outsl
push
mov
ljmp
aas
shll
jmp
push
push
xchg
mov
push
cwtl
add
movsb
popa
inc
in
test
push
loopne
or
xchg
iret
or
jg
jno
or
fwait
or
jbe
and
sbb
add
leave
pop
dec
jg
jecxz
mov
add
push
scas
sbb
cwtl
aas
lcall
aaa
mov
insl
jns
pop
jp
popf
in
mov
cmp
add
add
sub
mov
push
adc
push
cmp
imulb
jle
leave
inc
fs
sbb
aas
ss
sbb
dec
cld
aam
clc
sub
stos
jecxz
xchg
les
test
inc
sub
mov
jmp
cmpsb
pop
int
sbb
stc
mov
xor
cmovg
xchg
rorl
sbb
enter
dec
pop
inc
sub
mov
adc
jp
bound
sub
es
mov
sarb
sbb
sbb
lcall
fwait
dec
idivb
in
test
stc
fs
push
and
cmp
out
mov
cmp
mov
inc
nop
out
cld
loopne
pop
jae
pusha
mov
fstpl
inc
nop
fstp
adc
jbe
lods
adc
scas
pop
out
loop
fsubp
pushf
sahf
or
inc
mov
movb
dec
inc
or
mov
aad
sub
cmc
shll
dec
pop
scas
mov
test
push
fidivrs
mov
test
insb
push
fwait
les
fisubs
xorl
mov
mov
testb
fwait
cmp
sbb
add
test
or
sub
and
das
scas
cmp
enter
shll
lods
sbb
push
int
mov
cwtl
insb
out
push
daa
lods
in
or
push
mov
xor
jp
push
cmp
xchg
ja
int
leave
add
jns
ds
ficomps
mov
std
add
sub
or
jb
pushl
push
sbb
std
and
mov
xor
pop
popa
cmp
pop
aaa
lea
pop
rcr
xor
add
pop
cmpsl
fcomp
lods
popa
jecxz
cmp
xchg
adc
adc
arpl
mov
jnp
dec
fwait
stos
les
push
inc
sbb
sub
push
loopne
aaa
int3
mov
sub
into
push
pop
jae
inc
orb
stos
aad
push
sub
pop
dec
pop
imul
jbe
or
push
pop
xchg
call
ret
adc
jecxz
das
sbb
mov
push
adc
pop
cmpsl
movsl
stc
pop
cmp
pop
xchg
rorl
ret
jmp
inc
popf
dec
je
cmpsb
jecxz
pop
dec
and
add
call
xchg
or
ret
cli
mov
cltd
lods
mov
pop
rolb
jecxz
add
mov
xchg
xchg
mov
in
bound
mov
add
cmp
pop
das
or
add
andb
pop
inc
mov
into
jmp
outsl
in
adc
or
mov
in
or
adc
adc
inc
and
adc
in
xchg
jg
test
aad
lods
mov
daa
stos
sbb
loope
dec
imul
mov
test
push
das
stos
lock
sahf
jnp
mov
sbb
imul
mov
xchg
stos
vcmpsd
mov
adc
ret
sbb
in
jge
mov
sarb
sub
push
fsub
push
lahf
jmp
add
push
push
inc
mov
rorl
jno
sub
testl
out
cmp
mov
movsb
cld
or
sahf
lret
jno
js
aaa
and
sahf
mov
cli
ds
jge
push
jo
xchg
pop
inc
loope
cmp
sub
push
sarb
aaa
out
dec
mov
mov
rcr
xor
pop
lahf
jle
push
in
insl
int3
test
scas
dec
mov
mov
and
movsb
add
inc
jno
call
testl
pushf
xlat
add
dec
jo
cmp
pop
jp
lds
sbb
push
push
sbb
or
push
sbb
or
push
lahf
pop
cmc
xchg
xchg
inc
inc
pushf
jnp
inc
out
sub
rorb
fstl
outsl
or
mov
into
fstpl
rcrl
xchg
sti
xor
movsb
fs
lret
inc
xchg
cmp
loop
mov
mov
inc
cli
jbe
lods
sbb
sub
xchg
out
sbbb
sub
lcall
jg,pn
xchg
mov
mov
fdivrl
test
lahf
lods
xor
fs
out
dec
repnz
push
push
mov
sub
dec
js
aad
loop
mov
and
cltd
mov
insb
sahf
ret
cmpsl
fists
fdiv
iret
or
shrl
push
jecxz
pop
fs
xchg
out
call
cmp
or
fildll
xor
jmp
lds
hlt
push
mov
bound
pop
cli
leavew
mov
daa
push
fcoml
mov
push
loopne
jbe
clc
mov
and
lret
lock
inc
inc
xchg
lds
inc
inc
xchg
jp
dec
out
mov
xchg
mov
add
bound
lock
adc
pop
pop
mov
xchg
lahf
test
repz
and
jno
mov
scas
xchg
add
inc
xor
pop
inc
fiaddl
mov
mov
jge
sbb
mov
dec
jns
and
push
daa
data16
jge
sbb
call
push
xchg
jl
add
sahf
jo
sub
lea
enter
movsl
test
lret
insl
mov
xchg
cmpb
xchg
dec
and
adc
pop
ret
mov
dec
dec
int
ficomps
inc
mov
iret
lahf
inc
push
add
xchg
add
repz
dec
pop
sub
or
movsl
cmp
xor
xchg
test
shl
pop
pop
mov
pop
outsb
test
xchg
push
mov
push
fidivl
testb
ja
sbb
ljmp
clc
mov
fwait
inc
adc
fsubs
inc
jmp
leave
rorl
cli
pop
cmp
test
cltd
adc
dec
mov
cmp
inc
mov
mov
negb
mov
xchg
xchg
es
pop
cltd
jno
hlt
js
xchg
cmp
inc
adc
scas
cld
pusha
data16
popf
cmp
out
stc
dec
cmp
cmp
push
popf
loopne
xorb
pushf
or
mov
pop
cwtl
pop
sti
clc
sahf
sahf
fisubl
ss
lds
mov
popf
mov
add
les
call
cmpsb
push
inc
cwtl
cmpl
imul
pop
xor
inc
inc
xchg
gs
xchg
cmc
rcl
jbe
xchg
mov
push
inc
and
test
push
inc
jmp
adc
mov
imul
mov
in
adc
clc
inc
and
lret
dec
outsl
imul
fists
jecxz
aad
push
loop
addr16
inc
inc
mov
jae
add
iret
scas
pop
jae
jl
lds
sbb
mov
pop
mov
sbb
adc
lds
fcompl
inc
pop
test
and
add
call
outsl
fs
int3
xor
or
inc
inc
xchg
stos
sub
sbb
or
popf
pop
rcr
lret
xor
stos
aam
imul
pushf
test
xlat
fwait
mov
movsb
test
and
mov
pushf
push
pop
cmp
lea
int3
push
sub
push
or
sarl
cmpsb
mov
jo
std
add
inc
xchg
sbb
pop
out
test
sub
notl
test
and
jg
inc
and
push
lods
mov
mov
stos
icebp
inc
test
push
les
std
xlat
out
pop
xchg
repnz
lods
adc
xor
mov
popa
push
mov
ss
pop
inc
mov
testb
fists
icebp
pop
ja
out
inc
iret
into
repnz
xor
sub
xor
jae
sbb
and
xor
aam
mov
push
jbe
jmp
lahf
scas
xor
inc
jae
or
shll
dec
gs
cmc
mov
mov
or
or
xchg
mov
mov
ficoml
add
xor
fdivrl
es
jns
xchg
cmp
inc
adc
pop
ret
repz
dec
sub
cmpsl
adc
popf
sbb
sub
jae
cmp
cmpsb
xor
mov
jge
icebp
addr16
ficoml
pop
ret
je
or
jmp
pop
push
mov
or
mov
das
repz
pop
xlat
or
adc
cmpsb
icebp
lock
jle
mov
out
jae
sbb
aaa
inc
clc
call
inc
repz
je
jp
mov
pop
cli
mov
fcompl
mul
cmp
or
dec
into
xchg
xor
pusha
xor
loope
jmp
inc
cmpb
in
in
push
mov
jle
insl
pop
sbb
popa
mov
inc
inc
xchg
pop
add
outsb
mov
in
cld
mov
fptan
adc
ljmp
inc
xor
nop
jae
rcll
add
adc
jae
rcr
pop
inc
xchg
cld
ljmp
fdivl
out
inc
arpl
aaa
dec
xchg
lock
faddp
jne
icebp
scas
into
stc
shrl
movsb
out
popf
inc
and
pusha
mov
jge
lock
ds
ja
movsl
enter
fisubl
fcomps
into
in
ds
insb
dec
add
popf
dec
insb
jnp
sbb
jp
cmp
sbb
push
mov
mov
xchg
dec
pop
cmp
ds
movb
jmp
pop
sbb
pop
xchg
xchg
inc
sub
adc
adcl
dec
ds
jns
jmp
mov
into
or
push
push
fstl
pusha
sbb
lock
out
test
lods
pop
xor
sbb
out
or
movsb
hlt
jbe
inc
outsl
cmp
mov
and
movsl
mov
sub
jl
cmp
sub
ret
enter
outsb
insl
mov
scas
sti
jmp
into
add
adc
outsb
daa
xchg
mov
adcb
cld
outsl
xor
mov
push
sub
mov
sub
adc
sahf
cld
mov
jns
fcmovnbe
adc
mov
adc
mov
ficoml
test
add
cmp
aad
inc
decb
mov
dec
shl
and
lods
add
push
movsb
cmp
pop
cmp
jecxz
and
dec
sub
sub
push
ret
xchg
in
mov
lods
nop
insb
sub
ret
in
and
stos
and
xor
fidivs
and
xor
cld
loope
and
jmp
sbb
incl
xchg
or
shlb
popf
pop
dec
dec
popf
lock
fldcw
sub
push
pop
test
movsl
rorb
mov
das
jae
sahf
mov
rorl
test
int
dec
test
and
cli
dec
bound
bound
es
lahf
fidivrl
das
lds
mov
outsl
ja
inc
jns
clc
xor
adc
fdivrs
mov
xchg
xchg
sbb
mov
and
adc
call
push
seta
add
sti
or
mov
mov
mov
or
xchg
push
lret
adc
rcll
pop
mov
add
jo
xchg
out
call
stc
out
or
lods
pop
pop
ficoml
pop
add
jbe
mul
and
scas
sbb
cmp
mov
adc
leave
pop
pop
push
and
cmp
test
xchg
fldt
inc
lcall
popf
scas
cmpsb
and
pop
push
xchg
cmp
loop
ss
test
mov
xlat
incl
out
adc
leave
inc
jmp
adc
adc
aaa
loop
imul
fsub
cwtl
adc
out
cmpsb
jle
mov
and
push
inc
push
jo
dec
mov
es
inc
dec
push
test
outsb
insl
mov
cmp
jg
js
rcll
lcall
scas
scas
push
sub
mov
sbb
bnd
mov
sub
bnd
mov
shrl
inc
xchg
pop
ficompl
and
popf
clc
sbb
aam
xor
add
xchg
sahf
cmp
sub
loop
xor
push
xor
test
and
add
push
loopne
xor
ret
lea
jns
loope
ljmp
mov
sbb
lds
cmp
rorl
inc
sub
mov
js
mov
iret
outsb
in
daa
mov
or
inc
cmp
or
dec
dec
dec
mov
mov
pop
repz
pop
popa
es
iret
clc
scas
js
xchg
add
ficompl
dec
mov
fidivrl
dec
adc
test
lea
jmp
mov
push
in
bound
xchg
andb
xor
jmp
inc
inc
mov
inc
fcompl
int3
dec
inc
shll
fnstcw
aad
dec
stc
lcall
or
pop
addl
ja
fdiv
sub
fbstp
mov
pop
xchg
dec
lods
inc
push
xor
xchg
adc
in
xchg
sar
pop
pop
add
nop
mov
mov
mov
cmpsb
mov
ljmp
cmp
outsb
push
mov
int3
sub
pusha
leave
mov
ljmp
popa
lods
es
mov
push
mov
loope
mov
mov
dec
shlb
fidivrs
loop
cmp
test
push
or
inc
add
xchg
jno
add
mov
cmpsb
mov
ljmp
add
icebp
gs
mov
pop
sub
xchg
pop
jno
push
shlb
testl
enter
cmc
ret
or
and
inc
add
lea
orl
xchg
cmp
stos
push
xchg
push
out
push
pushf
cmpsl
sarb
add
cmp
ljmp
fs
xor
loop
mov
xchg
sbbb
mov
std
jg
push
mov
aaa
out
mov
xor
enter
inc
jbe,pn
sub
test
dec
mov
les
add
add
push
push
push
pop
dec
roll
add
pusha
xor
mov
test
popa
or
stos
cltd
shll
pop
dec
sub
or
das
int
adc
scas
fisubl
dec
sub
fistpll
push
mov
cmp
pop
lds
xchg
aas
fistps
jns
adc
shll
dec
sahf
sbb
sbb
xchg
inc
fwait
and
mov
dec
outsb
fs
mov
mov
adc
test
fs
pop
aas
and
xchg
inc
sahf
subl
mov
fwait
outsl
inc
das
cmpsl
cwtl
stos
les
shrl
lock
push
xchg
or
push
mov
flds
adc
leave
out
xor
rorb
je
pop
dec
insb
xchg
jecxz
jle
ljmp
movsb
mov
pop
jno
jecxz
nop
pop
orb
decb
pop
sarl
jo
dec
sub
inc
js
fcmovnb
jmp
hlt
in
popa
add
sbb
push
inc
pop
push
or
aam
push
fs
hlt
repnz
out
jp
clc
jp
pop
add
inc
pusha
mov
pop
ljmp
orb
fwait
je
sub
inc
fsubr
pop
push
push
ss
fnstcw
sub
push
jno
movsb
insb
cmp
andl
ja,pt
mov
out
je
test
jmp
int3
pop
jnp
xchg
test
adc
add
add
fidivrs
insb
lock
popf
adc
outsl
xchg
mov
imul
push
mov
xor
mov
adc
jmp
inc
repnz
xor
jmp
pop
xor
push
ja
cs
jmp
inc
or
call
add
pop
insl
fadd
cmp
out
push
loope
xor
clc
xor
pusha
jl
sub
jg
cwtl
xor
or
mov
out
flds
rclb
mov
movsl
push
out
xor
cs
pusha
addl
mov
mov
inc
int
xchg
inc
and
aas
imul
testl
cmp
xor
sub
ret
xor
or
lahf
and
jb
dec
mov
mov
nop
cmpsl
mov
sbb
sbb
and
subl
sub
loope
popf
cmp
or
out
mov
pop
cmp
testl
pop
mov
sbbl
ds
arpl
jno
add
mov
xor
push
test
or
mov
int3
repnz
mov
xchg
call
lahf
mov
push
push
xorl
subl
and
fsub
lock
lds
dec
inc
inc
add
shlb
movsb
sarb
ret
mov
pop
mov
push
std
test
repnz
jp
inc
imul
inc
fidivl
add
gs
mov
gs
test
dec
sar
mov
lret
or
cwtl
and
inc
sub
sahf
mov
loope
cs
xchg
or
push
daa
cmc
jg,pt
popa
jle
cmp
int
jne
or
mov
outsl
xchg
and
call
mov
jno
lods
add
or
and
add
aas
sbbl
xchg
out
fdivl
data16
push
cmp
jnp
incb
in
scas
outsb
mov
inc
shlb
aad
mov
jae
sbb
jl
inc
lret
jge
mov
sbb
shlb
stc
push
loop
sub
add
add
shlb
xchg
pop
rcll
xor
sbb
push
sbb
addl
vpsubsb
xchg
mov
cmpsb
inc
xchg
jg
daa
mov
mov
inc
add
jb
lods
pop
ret
xchg
pop
in
push
lea
loopne
mov
addr16
aam
mov
sub
les
pushl
xor
push
xchg
or
into
addr16
xchg
fisttps
aas
pop
and
outsl
push
jmp
jne
rol
mov
adc
add
cs
jmp
lods
test
fs
shlb
out
adc
dec
mov
jns
in
enter
mov
outsl
xchg
cmp
mov
aad
ja
scas
mov
out
jne
jnp
fldl2e
mov
xchg
dec
mov
or
add
and
pop
xchg
and
mov
and
pop
das
call
sbb
stc
sbbl
inc
inc
fbstp
imul
sub
push
frstor
adc
jecxz
popf
push
push
lods
mov
dec
mov
lahf
push
push
mov
stc
mov
cmc
loope
test
out
mov
push
arpl
shrb
movsb
outsl
icebp
adc
and
hlt
dec
mov
xchg
stos
jl
mov
jno
or
notl
inc
mov
cmp
dec
hlt
ret
add
inc
dec
mov
mov
insb
inc
mov
int
cmpsb
push
mov
call
xor
mov
adc
or
hlt
jge
aam
add
ds
mov
popa
xchg
stos
lds
and
sbb
inc
outsb
lods
dec
imul
push
ds
pop
cmp
into
xor
or
sub
pop
dec
dec
clc
sahf
mov
jmp
sbbb
pop
and
cs
shl
in
push
or
xor
fcompl
add
mov
fstpt
dec
sub
mov
ljmp
mov
int
in
arpl
sub
movsl
faddp
pop
xchg
mov
scas
cs
jne
push
xchg
cmpsw
dec
je
jmp
adcl
xor
out
je
cmp
add
mov
sbb
push
popf
mov
hlt
test
adc
adc
add
pop
mov
cmc
cltd
or
pop
mov
repnz
stos
inc
test
mov
es
jecxz
push
cmp
and
rorb
test
adc
ljmp
dec
test
ljmp
test
xchg
aad
cmp
cmp
mov
pop
std
lret
mov
mov
adc
data16
inc
mov
js
aad
cmp
add
and
mov
enter
std
sub
and
cmc
mov
dec
pop
aam
dec
or
shrb
outsl
cwtl
and
dec
lret
sub
xchg
stc
out
lods
pop
adc
jmp
fstpt
pop
mov
sbb
in
out
fdivrp
pop
fldenv
stos
iret
jb
ja
sbb
test
sub
es
or
mov
ret
push
callw
xor
or
mov
dec
addr16
jge
arpl
cmp
incb
fcmovbe
xchg
es
jge
in
cmp
dec
shrb
or
lret
mov
sbb
rol
mov
xlat
inc
inc
add
mov
adc
xchg
xor
fwait
xchg
sti
jg
loopne
pop
cmp
jle
cli
test
and
ljmp
add
pop
fbstp
pop
cld
lds
mov
stos
adc
dec
pop
mov
movsb
or
inc
sbb
xor
repz
aad
cmp
xchg
sar
inc
jns
xchg
jbe
inc
xchg
ret
jge
fidivs
sub
jg
jo
aaa
or
cs
out
cld
out
imul
out
lret
mov
pushf
fildl
inc
and
ss
jb
loope
scas
lahf
lock
xchg
pop
dec
lock
lcall
inc
xor
push
xor
and
call
cmp
lods
loop
jmp
out
sbb
jbe
imul
rorb
andb
pop
jbe
sub
lahf
flds
mov
int
mov
sub
push
fstpl
sub
push
pop
pop
pop
in
scas
int
cld
mov
mov
mull
fadds
sar
adc
mov
inc
mov
jno
jl
lds
cwtl
adc
xor
sbb
call
jle
push
or
das
sti
mov
mov
aad
out
aaa
inc
pop
loop
xchg
push
pop
jbe
inc
adc
inc
mov
out
repz
mov
mov
push
outsl
mov
fwait
dec
das
and
adc
jmp
inc
leave
sub
inc
sahf
out
cmp
icebp
adc
loopne
jmp
subl
js
aas
mov
sarb
lcall
addr16
adc
iret
imul
mov
or
stos
or
adc
dec
push
sbb
cltd
or
xor
jne
and
out
les
test
cs
into
jl
das
daa
in
or
sbb
outsl
subl
popa
ret
mov
fildl
jns
test
xor
call
or
inc
lret
rclb
cmc
loope
pop
cmpsl
imulb
xchg
sbb
adc
sub
pop
and
adc
adc
jb
in
roll
push
push
out
imul
lods
outsb
push
or
xor
clc
or
jl
mov
adc
outsb
push
stos
mov
out
jl
mov
gs
movsl
dec
push
stos
loopne
or
mov
mov
test
add
push
loop
cs
leave
stos
inc
ljmp
mov
shll
inc
in
into
data16
movsl
mov
nop
das
mov
add
mov
xchg
leave
add
out
cmp
out
sbb
inc
jg
dec
cmpsb
dec
dec
std
ds
enter
popa
jecxz
xor
jle
aas
movsb
andl
jg
mov
dec
inc
mov
xor
cmpsb
cmpsl
iret
lcall
jnp
mov
fwait
sub
inc
aad
mov
adc
subb
fstl
ds
fs
or
adc
dec
mov
add
pop
xchg
popf
addl
stos
dec
jae
daa
in
xor
mov
xchg
test
ss
push
sub
inc
or
movsb
mov
add
sbb
and
in
subl
out
scas
jnp
insb
in
pop
mov
cli
jae
mov
sub
xor
cmpsl
enter
aam
mov
std
dec
push
call
lret
xor
pop
or
adc
mov
leave
xchg
lock
fildll
lret
add
dec
jb
or
pop
add
mov
and
mov
cltd
mov
repnz
inc
test
aas
dec
push
cmpsb
xchg
test
mov
repnz
dec
jnp
movsb
rcrb
dec
sahf
es
fnstenv
popa
push
mov
pop
or
mov
loopne
fistpll
pop
lock
sahf
shll
aad
pop
cmc
nop
jge
xor
bound
inc
sbb
add
xchg
cmp
push
setno
call
fidivs
xchg
stos
push
jb
add
jns
dec
fnstenv
jecxz
cld
imul
and
les
adc
lods
jo
aaa
push
dec
sbb
popa
xor
pop
mov
cmpsl
push
dec
inc
xchg
adcb
cmpl
dec
xchg
hlt
dec
inc
aad
pop
pop
data16
nop
fcomp
mov
sub
in
fwait
insl
clc
loopne
mov
stos
jp
cs
mov
jno
xor
int
mov
add
xchg
stos
aad
add
jge
xchg
cmpsb
and
sbb
ljmp
push
jnp
mov
mov
add
sbb
sbb
and
adc
lcall
cmpsb
push
dec
mov
test
xlat
pop
stc
inc
fiaddl
outsb
ljmp
push
std
imul
mov
jl
in
mov
arpl
loop
push
jmp
sti
fidivl
mov
ret
dec
mov
jg
cmpsl
adc
cli
mov
ds
mov
repz
pop
loope
orb
lret
test
push
insb
js
jne
adc
xor
shlb
mov
mov
mov
sub
mov
jmp
sbb
shlb
into
fidivrs
cwtl
sbbl
dec
push
or
or
in
aad
sbb
jg
popf
test
iret
jge
xchg
mov
mov
add
jecxz
fstl
fstpt
xchg
dec
scas
lods
push
popl
popa
mov
aam
cmc
mov
sub
mov
pop
ljmp
mov
add
dec
push
clc
mov
mov
or
fisubl
mov
shrb
hlt
fs
or
mov
adc
add
ljmp
aad
sarl
fidivrs
cmp
dec
fsubrp
mov
pop
out
dec
call
inc
rorl
out
out
fwait
or
add
mov
sbb
jne
cltd
adc
and
in
add
dec
dec
cltd
pop
sbb
adc
shll
lret
repz
lods
cmp
jae
cmp
add
mov
sbb
pop
xor
movsb
xor
subb
xor
cmp
cmp
lahf
sub
xchg
rclb
out
bound
xchg
cltd
out
je
dec
jg
mov
test
and
fsubs
pop
pusha
in
cmp
test
pop
jmp
mov
out
out
imul
pop
fincstp
xchg
test
into
pop
inc
xchg
mov
inc
xor
aam
js
mov
lds
mov
cmp
lea
into
movsb
lahf
sub
dec
in
int
mov
std
push
pop
add
imul
jge
adc
cmp
xlat
pop
xchg
stos
mov
push
mov
push
or
mov
jmp
add
inc
leave
inc
sahf
adc
aaa
imul
popa
push
cld
dec
mov
add
orb
stc
and
adc
xchg
rcrb
fdivs
and
aaa
insl
add
inc
rolb
push
push
lods
jns
pop
pop
xor
adcb
pop
jecxz
loopne
fdivrp
sub
adc
mov
lods
pop
enter
and
imul
lret
mov
mov
pusha
sbb
ljmp
loop
repnz
std
jne
adc
xchg
jb
ja
push
xor
xchg
sub
in
pop
imul
lods
adc
frstor
mov
in
mov
inc
stc
push
cmc
sub
stos
jecxz
jbe
adc
lods
mov
pop
cli
xlat
jle
fisubl
pop
int3
clc
ficoms
lock
add
notl
arpl
push
lcall
sbb
add
pop
in
xor
test
add
test
lret
ja
pop
mov
mov
jae
adc
arpl
adc
dec
shrb
lret
dec
pop
arpl
pop
cmpsb
ds
ljmp
xchg
ret
jecxz
mov
jl
mov
jbe
ss
inc
xor
jb
repnz
int3
jmp
out
out
fldt
fs
int3
je
mov
lods
int3
mov
movsl
and
mov
sub
add
insb
scas
fists
xor
xor
in
and
xor
xchg
jo
shlb
faddl
test
repz
fcmovnu
cli
adc
bnd
outsb
loop
imul
scas
inc
es
cmp
pop
cmc
mov
push
sahf
mov
fiaddl
mov
push
pop
testl
or
icebp
loop
fsubrl
mov
test
lcall
xor
mov
push
jnp
or
out
push
adc
arpl
jnp
pop
popf
dec
push
mov
ljmp
mov
clc
not
mov
jle
xchg
dec
fstl
sbb
mov
cltd
pop
fst
and
movsl
out
lea
jno
pop
aaa
movsb
push
dec
xchg
xchg
jp
cmc
mov
cmc
sbb
fidivs
leave
pop
lock
add
xlat
jae
arpl
pop
sbbl
mov
cmp
pop
rcrb
mov
jbe
push
shll
and
ljmp
adc
jo
xor
rorb
jns
xor
popf
jge
arpl
add
push
sub
sbb
mov
mov
fucomp
loopne
sub
sbb
xchg
and
cmp
fcoms
mov
mov
bnd
jl
xor
xchg
add
mov
stos
rcll
xlat
pop
sbb
add
mov
loopne
inc
jne
fistpll
push
scas
pop
into
icebp
push
mov
mov
out
lds
out
scas
out
xchg
inc
or
inc
ljmp
outsl
pushf
out
idivl
fmul
xchg
xchg
stos
in
and
fstps
aam
inc
ret
sbb
mov
test
mov
ficompl
scas
loop
and
and
sbb
xchg
imul
orb
test
push
notl
xor
scas
inc
inc
outsb
or
stos
jbe
nop
and
adc
sub
stc
rcll
imul
and
lret
or
xchg
cld
lds
out
popf
push
inc
pop
mov
adc
sbb
frstor
xchg
mov
mov
inc
jmp
inc
fwait
pushf
jp
mov
lret
gs
into
push
jb
outsb
sar
xchg
je
shlb
stos
pop
or
push
mov
mov
lds
in
popf
das
jno
pop
cmp
mov
pushf
adc
xchg
xor
sbb
xor
movsl
xor
inc
jle
mov
into
mov
vxorps
mov
fucom
push
xchg
jnp
imul
xlat
sub
and
cmpsb
sahf
jno
adc
test
adc
mov
cli
loope
jne
fisubrl
jb
push
fstpl
pop
or
cmp
sub
sbb
pop
shlb
sbb
mov
dec
jbe
push
int
mov
adc
cmp
pop
xor
ret
adc
inc
pop
cmp
or
sbb
mov
outsb
cmp
imul
insb
jo
jg
in
je
pop
xchg
aaa
xchg
or
pop
jne
push
mov
jge
dec
mov
push
pop
rdpmc
lods
into
lock
leave
cmp
in
push
mov
mov
test
add
sub
cmc
or
es
outsl
push
loope
and
jo
dec
icebp
rcl
mov
jns
repz
lcall
pop
add
cmc
lds
pop
add
mov
xchg
test
lret
lahf
mov
inc
outsb
mov
jae
rcrl
push
iret
mov
mov
jle
pop
cwtl
jne
pop
into
xchg
dec
and
pop
jns
xor
out
test
xchg
mov
inc
or
cmp
fidivrs
imul
sub
ss
xor
mov
jae
repnz
pop
mov
sbb
rcll
lret
push
and
add
femms
lea
mov
ja
push
aad
mov
jo
and
pop
cmp
cmp
mov
xor
mov
add
and
mov
repz
sbb
jg
insb
adc
test
xchg
daa
int
aad
mov
mov
jb
cltd
fidivrs
jg
push
sub
adcl
xchg
lcall
mov
fsubr
cld
jns
in
mov
mov
dec
sub
push
cli
mov
cmpsb
push
sub
ss
mov
mov
jae
je
sbb
ljmp
in
inc
cmc
jg
fwait
test
in
movsb
dec
lahf
xchg
sub
xor
jno
cmpsb
out
and
add
mov
rcrl
cmpsb
aad
inc
inc
nop
sub
mov
fwait
insl
pop
inc
in
lods
xchg
mov
pop
cvttps2pi
cmpb
fcmovb
sbb
cmpsb
add
sbb
mov
ss
add
xchg
dec
cmpb
push
cs
nop
pop
in
test
ret
mov
icebp
mov
cmp
mov
insl
mov
lret
arpl
push
dec
jge
jmp
mov
idiv
sbb
rorl
push
jle
adc
or
adc
or
out
sbb
mov
mov
lret
adc
loope
mov
adc
lret
mov
push
popf
test
pop
add
jno
aad
dec
inc
and
scas
cmp
jnp
push
cmp
test
dec
inc
fldcw
roll
xchg
mov
inc
cli
leave
pusha
icebp
cmp
data16
leave
icebp
push
cltd
test
push
sarb
cbtw
inc
insb
lcall
pop
sti
or
lock
fadd
mov
stos
mov
test
mov
sbb
cmp
and
into
pop
aas
sbb
push
imul
bound
jmp
pop
pop
dec
pop
hlt
fistl
popf
mov
in
test
movsl
pop
popf
pop
xchg
cmp
cmp
andb
stos
or
cld
and
sbbb
inc
mov
lea
js
dec
jo
or
fidivl
clc
xor
stc
ret
mov
adc
xchg
inc
jo
icebp
imul
cmp
mov
pop
xlat
sbb
fsubrl
cltd
xchg
fistpl
sbb
mov
fimuls
sub
into
add
mov
paddb
stos
std
or
jae
movb
aaa
addl
imul
scas
test
aaa
push
cmpsb
push
loope
inc
push
dec
jno
in
lahf
je
addl
dec
jecxz
mov
das
in
mov
cltd
add
mov
push
repz
mov
fiaddl
push
call
dec
stos
fistps
push
aaa
xlat
inc
push
push
sub
bound
shll
jo
stos
inc
cmc
pop
xor
xchg
scas
mov
clc
add
popf
rcrb
leave
adc
jns
lahf
mov
pop
xchg
icebp
xchg
mov
xor
popa
push
loop
inc
fwait
into
inc
movsl
mov
popl
stos
test
jge
xor
mov
pop
test
test
push
adcb
and
cltd
mov
fiaddl
in
xchg
sbb
xchg
stos
dec
lret
mov
scas
ficoms
cli
sbb
mov
loop
xchg
subl
repz
mov
dec
ss
mov
mov
cld
pop
jb
in
ja
aas
inc
fwait
inc
sbb
xor
xor
cmp
or
dec
inc
cmp
hlt
fcompl
cmpsb
sbb
pop
jnp
jmp
repz
in
cmp
lcall
add
ret
cmp
aaa
xchg
inc
lahf
mov
mov
jle
loope
mov
push
sbb
cmp
gs
sahf
mov
inc
inc
or
push
inc
decl
jle
enter
mov
jno
nop
std
ja
xchg
sbb
add
sbb
gs
sub
incl
stos
add
fisttpl
out
sub
or
jne
ljmp
in
sbb
xchg
push
out
aam
cmp
sbb
jno
fstps
rclb
fiadds
mov
adc
mov
pop
ror
dec
ret
inc
test
fmull
aam
jbe
xor
ja
cwtl
jno
mov
mov
pop
add
xchg
inc
lret
lods
mov
mov
add
mov
mov
push
cmp
popa
xchg
shl
pusha
out
and
push
sbbl
nop
xchg
arpl
hlt
cmpsl
sub
out
and
mov
fstpl
push
lods
jne
loope
aad
jae
xchg
ljmp
add
fs
imul
insl
mov
and
xor
rorl
cwtl
push
mov
xor
mov
or
or
fisubs
aam
xor
mov
mov
ljmp
and
adcb
xchg
xchg
outsl
xchg
and
push
inc
mov
subb
sub
ljmp
xchg
jae
push
mov
push
push
push
sbb
testl
adc
mov
adcl
mov
mov
cmp
pop
fmull
fdiv
sub
pop
mov
xchg
in
repnz
inc
popa
jae
pop
rorl
xlat
andb
mov
xchg
pop
sub
cmp
lods
mov
mov
cmp
mov
cmp
cmp
test
iret
mov
dec
les
decb
test
push
and
andl
push
push
addb
stc
cs
ss
sub
enter
es
aam
movsl
ja
xorb
push
leave
jecxz
mov
cmp
cmpb
out
test
jno
mov
mov
cli
mov
mov
jo
outsb
arpl
notb
es
jns
pop
call
aad
xchg
cmp
jnp
inc
fs
ljmp
inc
adc
sbb
mov
cmc
mov
xor
or
jns
pop
shlb
jne
mov
pop
xchg
sbb
out
jmp
gs
adc
xchg
cmp
jmp
mov
xchg
repz
loope
insb
push
lods
or
mov
incl
data16
fisubrs
movups
sbb
call
xor
stos
je
testb
cmp
iret
xor
xchg
sub
lods
and
and
xorl
lret
dec
mov
lods
jnp
in
pop
add
aaa
inc
divps
jecxz
xchg
mov
addr16
lods
fistps
sbb
cli
js
adc
lods
dec
push
sub
sbb
call
imul
sbb
sbb
stos
mov
lock
fwait
jnp
data16
outsb
jl
sbb
hlt
outsb
sbb
outsb
hlt
loop
lret
sbb
mov
aas
into
xor
fcomps
fucom
mov
jae
in
je
std
daa
xchg
insb
stos
add
in
fistpl
es
lods
into
adc
mov
ret
jo
cmp
lea
push
xor
out
jae
test
and
out
lret
push
cmp
mov
scas
ret
dec
mov
ror
cld
jl
and
daa
orl
leave
or
and
jb
insl
xor
sbbb
call
pop
ficoms
cmp
lods
cmpsl
or
and
jmp
dec
out
cmpsl
push
jg
fmull
fbld
cmc
shlb
mov
xor
pushf
sbb
jecxz
jecxz
and
pop
mov
inc
sbb
xor
fcoml
outsl
notb
xchg
mov
mov
sub
into
sbb
stc
rorb
inc
sbb
jb
pop
inc
loope
adc
jbe
push
or
fdivrp
sbb
xchg
xchg
outsb
in
rcrl
inc
jnp
fisubs
mov
push
push
jge
inc
data16
addb
sbb
fcomps
xchg
sbb
adc
cmp
adc
dec
or
adcl
mov
inc
and
add
mov
nop
enter
repz
bound
daa
xchg
xchg
int
dec
dec
xchg
jmp
addl
mov
xlat
inc
inc
mov
hlt
addr16
mov
push
cltd
push
je
enter
das
outsb
pop
xchg
cmp
push
andl
inc
xor
imull
add
mov
fildl
jge
ret
cwtl
out
push
mov
cmp
lds
dec
sahf
orb
adcl
jo
aas
stos
repz
xchg
sbb
jmp
bound
addr16
fxch
inc
movsb
addr16
test
flds
mov
jo
mov
and
or
movsl
dec
adc
jae
sahf
add
mov
test
lahf
fsubl
ja
int
addr16
inc
cld
insb
jb
mov
mov
fdivs
std
dec
add
add
cltd
scas
push
or
outsb
lret
imul
add
dec
mov
in
cmc
stc
dec
mov
jge
scas
lahf
pop
cmpsb
insl
mul
push
scas
xchg
insl
lds
int3
shlb
mov
bound
int3
aam
out
shlb
aas
pop
mov
orl
imul
fbld
and
xor
fs
cli
loop
xor
or
inc
and
testl
sbb
cltd
cmpsl
push
lcall
mov
xor
andb
aam
mov
inc
mov
arpl
jp
jle
mov
or
fidivrl
or
fmuls
sub
xchg
iret
mov
pop
sbb
push
sbb
mov
mov
shl
bound
bound
jne
punpcklbw
cmpsl
xchg
fcmovnb
dec
nop
sti
sahf
pop
or
outsb
in
jnp
mov
andl
push
iret
add
inc
xor
pop
xchg
and
add
lods
loopne
mov
dec
dec
rcll
mov
ror
popf
dec
push
jnp
push
pop
mov
adc
lock
mov
test
test
filds
jns
shll
cmp
xchg
data16
xor
and
sbb
cmp
lret
shlb
cwtl
mov
jmp
mov
ljmp
das
push
push
or
outsl
fildl
sahf
cmp
add
dec
jecxz
dec
test
test
popf
clc
pusha
mov
inc
fsubp
pop
xchg
rorb
jb
lcall
adc
gs
sbb
movsb
inc
jl
xor
addr16
xchg
pop
jnp
or
mov
fdivs
fsts
cmp
sahf
mov
rcr
or
leave
xchg
pop
jp
add
jg
jecxz
xor
repz
sub
notl
sbb
sub
rcrl
loop
stos
lret
sbb
lcallw
or
in
test
add
in
out
sub
sub
into
mov
inc
xchg
rcll
mov
xorb
sub
pop
pop
aaa
mov
lret
jmp
xchg
inc
test
jns
add
add
cli
outsl
pusha
sarb
mov
int
cmp
pause
xchg
mov
cld
rclb
sub
xor
pop
pop
mov
lret
fimuls
mov
cmp
mov
call
push
ret
ds
xchg
jb
push
fistpll
sub
ja
movsl
ljmp
cmp
test
out
mov
push
lcall
insl
jmp
ficompl
shr
in
push
ret
pop
movsb
pop
xor
mov
movsb
pop
mov
icebp
jge
xor
adc
mov
call
mov
test
cli
icebp
stos
stos
jne
dec
fimuls
xor
ret
sbbl
jae
addb
sbb
lods
xor
mov
dec
call
inc
mov
fcoml
loop
inc
xchg
add
dec
xchg
call
mov
cmp
in
adc
jp
scas
fwait
xor
xchg
push
cmp
fcoms
aam
movsl
pop
fldenv
xor
stos
ja
shrl
lcall
jae
mov
sbb
mov
or
subl
rcll
lods
insl
mov
int3
inc
push
mov
mov
cld
jmp
sahf
push
call
sbb
ret
mov
loopne
sti
mov
repnz
add
mov
add
incb
jmp
mov
pop
std
fsts
xchg
adc
inc
jne
cwtl
subl
pushf
xchg
xchg
xchg
jmp
push
xor
mov
aaa
loop
les
and
jb
dec
repnz
aad
in
lret
add
js
inc
dec
loop
adc
mov
sbb
pop
imul
xchg
jb
xor
out
lea
out
jl
adc
mov
cld
jle
rorl
inc
sub
add
push
loop
popa
xchg
sub
xor
jecxz
push
or
out
jo
mov
jbe
testb
push
out
pop
add
notl
adc
pop
pop
data16
shll
flds
jle
in
add
xchg
stos
mov
lods
in
sub
adc
fisubl
insl
nop
ds
lods
idiv
je
xchg
insb
pusha
push
les
cmp
es
imul
jle
loopne
dec
ljmp
cmp
aad
das
and
gs
cmp
pop
push
test
pop
cmpsb
stc
call
insl
into
movsb
jbe
sbb
dec
push
adc
or
enter
ret
push
popf
pusha
cltd
fwait
mov
into
insl
mov
int
and
mov
dec
lret
mov
add
and
add
jnp
add
sar
push
inc
or
lea
incl
pop
xor
rcr
insl
loop
xchg
and
es
popa
outsl
clc
shlb
lret
pop
adc
adc
test
inc
adc
dec
jge
testl
fwait
fs
jge
mov
mov
mov
aas
xor
cltd
pop
ret
inc
pop
sub
mov
dec
mov
int
mov
cmpb
dec
jg
orl
inc
jp
icebp
loopne
pusha
add
lock
movsb
in
lea
adc
add
push
adc
add
loop
inc
fwait
inc
cmpsb
mov
mov
in
and
outsb
mov
cmp
jp
std
jge
std
addr16
scas
dec
mov
xchg
nop
loopew
ficomps
pop
jp
bswap
sbb
repz
add
inc
jmp
jne
add
dec
addr16
jmp
push
xor
pop
mov
add
mov
int
test
nop
lcall
scas
fwait
mov
mov
push
call
test
call
mov
and
mov
pop
je
pushl
cs
fisubrl
out
pop
jno
dec
pop
mov
hlt
je
xchg
iret
fcompl
dec
aam
add
js
jb
inc
fildl
mov
das
xchg
cltd
mov
outsb
movsb
pop
insl
sbb
mov
aam
lds
xorl
sbb
inc
outsb
jle
js
push
push
aad
cmp
in
mov
pop
mov
int
xchg
ret
ljmp
mov
enter
push
ret
shld
loope
sbb
jge
sub
jno
pop
pop
or
pop
mov
leave
pop
jae
and
xor
ds
scas
dec
sub
lret
aad
lret
lcall
or
out
repnz
adc
aad
mov
mov
sbb
push
dec
lahf
sahf
mov
sbb
adc
mov
movsb
rorb
add
push
sub
stos
das
xchg
aas
pop
pop
jl
icebp
xchg
xchg
sub
mov
adc
fwait
ja
sbb
ficoml
pusha
xchg
mov
or
sub
jp
loopne
out
fisubl
mov
fistl
push
decl
inc
insb
mov
xchg
mov
pushf
out
mov
adc
fsubl
jl
mov
mov
dec
xor
scas
dec
lock
mov
xor
cli
jne
mov
sarl
xchg
pop
outsb
lods
fsubrl
mov
loopne
fcoms
sub
in
push
mov
or
push
inc
lret
sbb
test
sbb
cmpsl
aaa
mov
push
and
loop
sahf
dec
cld
pop
clc
dec
adc
jbe
cmp
jp
popa
push
les
dec
cltd
sub
push
adc
jl
lret
xchg
in
mov
aad
orps
or
xlat
out
lea
sahf
push
mov
imul
or
or
push
aas
test
dec
dec
enter
mov
test
outsb
mov
mov
add
mov
mov
mov
mov
shll
test
mov
cmc
fwait
push
stc
std
xor
scas
leave
mov
inc
pop
scas
lret
out
inc
pop
negl
jecxz
sub
lock
or
js
or
or
pop
shlb
sbb
xchg
jge
loope
inc
movsl
sahf
mov
inc
cwtl
jp
mov
xchg
aas
sbb
mov
xchg
jnp
movsl
add
add
cmpsl
pushl
fisttps
xor
dec
push
adc
or
mov
adc
insl
iret
lret
and
pop
xor
push
pop
icebp
sub
lock
xchg
xchg
push
notb
ret
shrb
ja
in
jmp
jo
lods
js
in
and
mov
int3
push
mov
mov
cwtl
mov
sbb
push
pmuludq
movsb
pushl
mov
push
add
ucomiss
loop
sub
pop
adc
or
lret
jge
adc
call
call
add
adc
jo
int3
into
inc
mov
rolb
stc
test
sub
xor
pop
cmc
les
repnz
pop
daa
imul
adc
fiaddl
and
mov
ret
lds
out
orb
jmp
xchg
lahf
lcall
xchg
pop
push
insb
mov
cmp
cmpsl
push
mov
daa
leave
or
test
push
stc
inc
loopne
push
inc
cmp
add
nop
outsb
cmpsl
loope
xor
xchg
and
sarb
dec
adc
int3
add
push
ds
rcrl
stos
cmp
int
sbb
lea
cmpsl
pop
xorl
mov
cmpsb
flds
xchg
loopne
inc
or
mov
roll
add
mov
push
gs
add
cmp
mov
mov
out
imul
loope
adc
xor
or
mov
rorb
in
mov
xor
rcl
popf
cmc
xorb
loopne
mov
and
xchg
sahf
jecxz
in
cmp
fbstp
fcomp
test
cmpsl
xchg
xchg
popl
dec
jg
or
pop
push
pop
pop
push
dec
sbb
sbb
sbb
push
jl
loop
xor
xor
jns
mov
pop
scas
test
push
and
dec
sbb
fsub
rorl
or
nop
outsb
int
test
icebp
data16
pushf
mov
mov
jecxz
xchg
xor
sub
sarl
adcb
dec
iret
mov
dec
xor
daa
nop
movsb
xchg
xor
xor
bound
mov
sub
scas
repnz
sahf
lods
inc
push
cmp
mov
jb
je
push
cld
movsb
sbb
xor
movsl
ss
shlb
xchg
jle
ret
jno
inc
adc
std
xor
mov
add
popf
sub
mov
popf
pushf
pusha
mov
mov
scas
mov
jl
aas
loope
ret
sbb
pop
ss
loop
dec
mov
mov
add
insl
push
fsubp
add
push
adc
pop
sub
push
pop
jmp
mov
or
je
lahf
pop
and
mov
jo
mov
dec
inc
sahf
es
rcrb
mov
xchg
inc
jecxz
pop
out
psubsb
pop
loopne,pt
jg
push
add
testb
xlat
das
jns
and
into
cmpsb
inc
movsb
std
outsl
je
les
bound
popf
in
jl
cs
sub
fiaddl
mov
and
ds
loope
jge
cmc
movsb
add
inc
push
loopne
mov
cmp
push
push
rclb
inc
sub
outsl
push
mov
fsubr
jecxz
push
jp
push
jmp
jge
addl
jle
push
push
add
lds
add
xchg
jle
lods
movsb
jmp
mov
repz
das
in
addb
adc
stos
repz
mov
add
dec
int3
aad
and
icebp
xlat
cs
fdivrs
hlt
ficoms
nop
int3
mov
roll
enter
push
dec
mov
andl
xchg
fcmovnbe
movsb
test
ja
sub
ja
jg
jno
pop
icebp
mov
mov
inc
and
idiv
test
es
mov
mov
sub
lcall
in
or
std
or
int3
pop
movb
lret
pop
push
jnp
test
jno
loopne
push
popf
jae
inc
push
cltd
cmpsl
fwait
popl
pop
ljmp
inc
mov
lcall
or
jnp
add
mov
xchg
or
sub
mov
imul
jl
test
ret
adcl
add
xchg
popf
sub
jg
or
fwait
sub
popf
leave
dec
fsubrs
mov
adc
push
push
out
pop
jno
sub
jecxz
inc
push
ljmp
jp
jae
pop
mov
cmpb
xchg
push
dec
dec
mov
jo
ljmp
push
scas
cltd
xchg
sub
xchg
push
push
js
sbb
xor
cmp
pushf
push
movsb
mov
shlb
mov
rorl
je
int
jecxz
jo
stc
call
xor
es
fistps
into
lret
jno
sub
mov
in
push
divb
mov
sbb
cmp
mov
imul
pop
rorb
out
mov
dec
dec
mov
mov
dec
gs
dec
pop
imul
jne
jb
push
cmp
push
xchg
insb
inc
sub
cmc
popf
test
lret
xor
sbb
in
add
sub
push
sub
gs
test
mov
cwtl
or
add
sbb
ret
pop
push
out
insb
inc
lahf
data16
ret
mov
fildll
daa
pop
pop
loop
push
clc
fwait
gs
mov
and
scas
cltd
push
rcr
pop
movsb
jge
div
aas
dec
xchg
test
adc
add
inc
clc
roll
inc
leave
pop
js
arpl
scas
or
imul
loopne
sub
int3
stc
sub
lods
or
xchg
scas
push
push
mov
cld
mov
sub
aad
push
sub
mov
xorl
push
mov
push
andb
leave
and
mov
outsl
jae
cmpsl
mov
lock
fcmovnu
pop
loopne
filds
push
repnz
xor
loop
mov
push
aam
pop
cwtl
jle
iret
clc
cmp
cmpsb
sub
pop
jge
enter
sub
popf
dec
into
int3
outsb
mov
mov
mov
cmp
aad
adc
xor
sub
arpl
add
cmp
pop
adc
ja
fdivl
stc
mov
out
push
adc
hlt
ucomiss
repz
imul
scas
fsubrl
mov
imul
addr16
adc
push
sub
jb
add
hlt
daa
mov
aas
bswap
jbe
xchg
in
ret
inc
idiv
xchg
popa
dec
test
add
mov
and
lret
adc
jno
ss
mov
sarl
adc
dec
aam
aam
iret
jp
cmp
push
mov
pop
pop
bnd
fdivrp
sub
mov
mov
jmp
ret
lret
neg
inc
mov
adc
test
mov
test
push
pop
call
roll
xor
ds
xor
fistps
enter
push
rcr
or
xchg
loope
and
setp
jo
or
into
or
mov
sbb
inc
rcr
sti
or
fistpl
add
sbb
ja
hlt
jbe
mov
movsl
movsb
js
lret
jns
aam
and
stc
cmpsl
add
adc
mov
dec
jnp
dec
fnsave
cmp
mov
xor
jno
test
insl
xchg
and
cwtl
cld
sbb
pop
xchg
push
mov
nop
lods
add
movsb
mov
jo
in
jns
jecxz
jmp
incl
sbb
mov
sub
lods
push
cwtl
hlt
int3
mov
dec
pop
fwait
mov
xor
hlt
pop
push
add
pusha
call
xchg
icebp
inc
jle
sub
mov
push
clc
fists
sbb
inc
pop
pop
adc
scas
jo
movsl
fstps
cwtl
cmc
aam
ds
xchg
leave
insl
out
ds
xchg
shll
lods
test
and
loope
add
xor
stos
sub
mov
sub
fnstcw
lods
mov
xchg
fcmove
xchg
adc
jle
and
test
mov
cmp
lods
cmp
pop
mov
xor
nop
int
pop
imul
cs
insl
movsb
lods
xlat
mov
push
mov
repnz
cmp
xchg
pop
scas
int3
mov
jp
cmp
daa
js
addl
pop
dec
dec
call
push
lret
in
stos
dec
jecxz
test
test
adc
push
mov
xchg
xor
mov
clc
ja
mov
out
lahf
call
ficoms
xor
test
das
xor
dec
sub
push
dec
in
push
sbb
mov
int
or
sbb
adcb
int3
adc
sub
push
inc
adc
push
cwtl
mov
mov
jecxz
repz
and
sbb
in
mov
sarl
fwait
jmp
add
test
xchg
sub
pop
out
ficomps
test
insb
xor
outsl
dec
or
stc
push
xchg
adc
push
scas
sbb
dec
xchg
push
lods
sub
ret
xor
in
scas
mov
and
lock
push
dec
jns
pop
jmp
mov
sub
cmp
cmp
mov
cmp
jns
rcr
inc
dec
shrb
push
stc
sub
data16
mov
rcll
cltd
aad
xchg
imull
pop
ret
xor
jg
roll
ja
push
stos
mov
adc
adc
sti
lods
mov
inc
pushf
push
lahf
mov
pmuludq
gs
cmc
dec
sti
and
addl
mov
xchg
outsl
sbb
inc
cli
dec
mov
std
pushf
lock
mov
adc
xchg
jae
sbb
je
fs
and
adc
aaa
fisttpll
loopne
push
adc
loope
inc
xlat
shll
jb
add
add
mov
xchg
gs
mov
movsl
mov
xor
push
dec
adc
fnsave
ret
mov
xlat
jnp
in
push
sbb
dec
sahf
jo
ds
jl
inc
in
ror
mov
addl
jb
pop
jo
add
dec
int
lock
inc
jmp
outsl
mov
mov
add
aad
push
pop
aad
inc
push
scas
iret
arpl
roll
jo
jo
xor
add
dec
jbe
push
inc
sbb
nop
xor
hlt
or
sub
fstps
dec
jg
shll
roll
xchg
gs
aaa
rclb
pop
scas
sbb
xor
mov
outsl
jp
xor
cmp
xlat
jmp
sbb
out
popa
scas
sub
mov
leave
test
push
scas
mov
jns
sub
call
inc
in
std
lods
pop
dec
xor
lahf
pop
push
test
jno
test
and
jnp
and
mulb
mov
fdivp
push
pop
mov
aaa
gs
pop
fcomps
aad
sbb
fisttpl
push
pop
xchg
out
inc
pop
lahf
push
or
jbe
das
test
stos
push
imul
lahf
lods
ret
loopne
mov
cmp
clc
xor
loope
mov
aaa
jo
xchg
ret
insb
call
pop
mov
std
stos
cmp
mov
or
fsub
cmp
ds
popf
outsb
lods
outsl
in
aas
pop
and
stc
xchg
add
push
sahf
jge
jmp
adc
je
lea
js
rcl
add
inc
mov
cli
add
jle
int3
xor
dec
pop
sbb
xchg
pop
jnp
push
mov
test
std
addr16
jns
stc
or
cltd
sbb
or
in
or
adc
data16
xor
stos
pushf
js
fbstp
outsl
sarb
insb
mov
insb
sub
pop
adc
mov
insl
addr16
pop
jle
hlt
jb
addr16
or
lods
popf
popw
push
mov
movsb
leave
cmp
pop
jl
fnstcw
movsl
sti
cmp
aaa
inc
lahf
xor
or
sbb
call
divb
add
orb
pushf
leave
and
test
xor
mov
jle
fldcw
or
std
or
xor
cli
test
sarb
aaa
scas
and
movsl
cmp
and
add
shr
and
xchg
xchg
pop
fistl
push
mov
inc
hlt
and
pop
or
scas
inc
arpl
mov
lret
push
push
mov
and
imul
xchg
loope
lret
ds
sbb
lods
xchg
pop
arpl
mov
dec
and
or
call
sbb
jnp
push
movsl
dec
adc
loop
mov
pop
xchg
test
sbb
in
push
ficomps
inc
or
push
add
add
call
add
mov
out
pushw
xchg
cmp
cmp
mov
jae
xchg
cld
sub
jecxz
lea
mov
cmp
xchg
cltd
sub
rorb
inc
mov
adc
fisttpll
fisubrs
push
aas
push
int3
jo
ja
or
inc
xorb
inc
mov
push
movsb
sub
jnp
mov
cltd
and
incl
imul
or
out
jnp
xor
loope
mov
fdivrs
pop
push
pop
cmp
adc
divl
push
outsb
fildl
adc
and
sbb
add
test
ljmp
icebp
pop
push
in
dec
mov
xchg
or
test
fimuls
push
inc
push
pusha
sbb
addr16
cmp
rcll
bound
lret
xchg
jae
pop
xor
cmp
add
lods
inc
jo
push
push
repnz
and
mov
fs
and
andb
dec
sbb
sub
inc
call
or
das
jo
mov
fst
rolb
aas
cld
mov
out
mov
add
pop
lret
mov
popl
test
out
aad
jnp
push
iret
dec
gs
iret
sub
insb
fisubs
jno
and
lahf
ret
cmp
inc
roll
in
inc
sub
sub
push
mov
or
aad
fwait
rcrl
sbb
xor
daa
mov
fbstp
add
negb
mulb
mov
fsubrs
dec
int3
xchg
bound
adc
jecxz
mov
sub
test
jae
adc
sbb
clc
pushf
and
adc
pop
pop
imul
out
jnp
jg
test
sbb
inc
call
outsl
imul
mov
rcrb
push
sbb
call
mov
aam
pop
les
xlat
loop
das
xchg
xchg
divb
daa
mov
clc
ds
cwtl
mov
adc
loopne
add
mov
clc
or
adc
inc
or
sub
xchg
stos
or
rol
dec
out
push
pop
repnz
es
das
jnp
sti
outsb
jnp
adcl
rclb
pop
cmpsb
add
mov
jmp
mov
add
fdivs
stc
dec
cwtl
dec
mov
cmp
push
or
add
adc
lock
adc
out
out
insl
add
stos
iret
ret
add
mov
push
xchg
imul
sahf
mov
add
adc
cmp
dec
fcmovu
test
mov
cltd
or
mov
arpl
xchg
xchg
arpl
add
or
adc
neg
sub
cltd
fs
es
mov
and
dec
xor
or
notb
pop
fldcw
outsl
les
and
in
lods
rcrb
lods
imul
mov
lcall
out
pop
sar
jmp
shll
out
clc
pop
faddp
ficompl
flds
clc
mov
push
fisubs
outsl
fildll
sar
push
adc
xchg
rolb
jge
mov
add
cmp
cmpb
arpl
fmull
pop
or
and
mov
pop
cmp
mov
fisubl
fstpt
int3
jno
outsb
inc
pop
pusha
shrl
push
mov
sarb
adc
add
call
adcb
sub
jb
sub
lahf
pushf
ret
and
cmp
dec
imul
pusha
lahf
mov
jl
jb
es
gs
stos
push
cmpsl
fs
pop
popf
pop
andb
or
lahf
dec
mov
imul
add
sbb
cmpl
sub
sbb
cwtl
aaa
dec
sub
xor
cmpsb
xchg
mov
test
ret
mov
scas
add
out
mov
dec
test
xor
xchg
insb
mov
mov
test
inc
into
xchg
call
stos
mov
mov
inc
sti
mov
scas
test
push
jle
ja
sub
jl
aam
mov
out
rclb
jae
ljmp
ljmp
push
addr16
call
xchg
addr16
andb
in
or
jmp
es
pop
xchg
dec
test
js
sbb
sub
dec
jae
cwtl
notl
or
xlat
mov
or
xchg
cmpsb
xor
mov
into
or
js
mov
es
in
sbb
fbld
mov
in
adc
mov
jo
push
xchg
dec
jns
insl
lods
fwait
dec
arpl
lods
mov
pop
jg
sahf
and
xchg
leave
jle
sub
and
and
ficoml
ljmp
ja
mov
sbb
push
push
adc
adc
adc
repnz
push
dec
testl
popa
ljmp
cld
push
shl
movb
push
dec
and
mov
adc
adc
xchg
mov
pop
adc
xchg
dec
cmp
xchg
jp
or
cltd
mov
xlat
nop
ljmp
mov
fsubp
pop
push
jnp
push
mov
scas
cmp
cmp
dec
imul
jae
sub
subl
stos
lea
mov
pop
pop
mov
pop
ret
mov
ljmp
out
ljmp
cmc
mov
xchg
fisubl
es
repz
lds
mov
call
add
xor
and
fsubl
in
dec
jp
sbb
add
push
xor
ss
popf
arpl
mov
jae
mov
lods
push
push
loope
scas
pop
icebp
int3
mov
mov
jo
nop
jp
jg
xchg
hlt
pop
pop
pop
imul
add
jecxz
dec
push
ret
push
pusha
push
push
mov
sub
ffree
jmp
repnz
mov
push
mov
std
jbe
test
xor
shll
cs
mov
cli
mov
mov
and
inc
out
and
es
cmp
mov
test
pop
test
lahf
cli
inc
incb
add
mov
ss
mov
xor
in
pop
push
and
jp
inc
pop
or
mov
fcmove
mov
jp
push
cmp
stos
scas
pushl
stos
jnp
ret
xor
nop
rorl
dec
popa
sbb
cwtl
adc
cld
clc
enter
mov
xchg
pop
popa
pushf
and
js
mov
in
mov
push
jmp
stos
dec
loop
std
stc
and
movsl
lcall
mov
and
jp
xor
rclb
dec
and
dec
ret
in
cwtl
int3
outsb
mov
xchg
dec
mov
cmpb
push
sbb
adc
mov
and
or
sub
and
invd
cmp
scas
movsl
cmpl
jg
cmc
test
dec
sub
xor
les
cld
inc
movsl
fiadds
push
aad
call
dec
insb
loopne
lock
stos
ss
fdivr
insb
sub
push
outsb
push
cmc
gs
and
gs
inc
test
hlt
fcomps
xchg
mov
sbb
shrb
mov
cld
repz
call
mov
add
repz
inc
and
jno
jmp
sub
pop
sub
lods
mov
add
fists
call
repz
xchg
add
cmpsl
or
add
mov
ljmp
aaa
aaa
mov
scas
and
adcl
push
pop
jne
repz
cld
pop
fcomps
testl
inc
dec
shr
enter
dec
mov
incl
jae
jg
sbb
gs
leave
sbb
fxch
cmc
and
pushf
pop
stos
xor
clc
mov
pop
cltd
xor
xor
lret
aam
cmp
sti
mov
mov
sbb
scas
dec
jmp
or
cmpsl
in
jb
push
and
mov
push
lods
xchg
jb
adc
adc
notl
mov
jmp
xor
out
data16
mov
or
cmp
add
sbb
jae
shl
pop
adc
mov
sti
lds
leave
rorb
cmc
or
jae
push
clc
imul
cmp
mov
adc
addl
ja
or
aas
fmul
mov
jno
mov
stc
cmpsl
mov
lds
add
or
je
rcr
xor
aaa
stc
dec
sbb
mov
cld
rolb
ret
repnz
rdmsr
frstor
scas
sahf
pushf
sub
imul
fwait
push
xor
ret
push
arpl
addr16
push
fstp
and
mov
pop
enter
arpl
mov
cmpsl
nop
pop
mov
inc
lods
sbb
and
lcall
jg
inc
mov
push
cmp
cmp
xor
inc
fisttpl
les
das
mov
pop
mov
out
nop
mov
inc
jae
xchg
dec
pop
add
std
test
adc
enter
add
enter
popa
js
jge
cmp
push
movb
inc
mov
enter
subb
xchg
ret
add
cmp
dec
push
dec
mov
pop
ds
push
and
mov
fisubrs
gs
mov
pop
pop
cltd
inc
das
sub
cmp
fcomi
lock
in
popa
ljmp
inc
mov
lret
pusha
cmp
xchg
or
sub
loop
pop
and
push
je
jb
arpl
test
adc
jbe
or
push
mov
movsb
pusha
mov
mov
push
mov
or
out
jle
sbb
xchg
out
out
or
pusha
dec
aaa
add
sub
cmpsb
cmpsl
js
add
es
mov
sahf
hlt
mov
stos
movsb
and
sbb
cmp
pop
lods
out
fisttps
out
bound
mov
pop
dec
pop
insb
outsl
loope
daa
lods
stos
cmp
lea
int
jns
andb
loopne
pop
sti
add
sub
js
xchg
push
fistpll
jb
mov
mov
sub
cmp
or
lods
add
dec
inc
adc
repz
inc
push
jecxz
xchg
xchg
cmp
leave
sbb
icebp
push
mov
or
xchg
les
inc
push
adc
jbe
negb
mov
loope
jo
daa
call
inc
call
pushf
mov
fwait
out
lcall
mov
pop
dec
cmpsl
xor
inc
inc
insl
mov
scas
out
xchg
cmp
lret
pop
adc
dec
aas
add
lret
test
mov
xor
mov
xchg
movsl
xchg
dec
xchg
cwtl
insb
xchg
jmp
jnp
push
lret
negl
test
jge
dec
lret
inc
add
in
loop
hlt
sub
les
xor
repnz
pop
inc
arpl
adc
mov
push
push
fs
jne
sbb
in
ljmp
push
xchg
outsb
jno
jns
rorl
mov
push
in
imul
adc
cltd
push
and
mov
mov
fwait
push
mov
gs
jbe
aad
mov
fimuls
xchg
cmpb
jge
mov
add
imul
xchg
or
dec
jo
push
pop
loopne
jo
and
sub
lds
int
pop
and
clc
lods
dec
add
sti
jbe
xor
fmulp
and
mov
in
shll
jle
mov
sub
bound
pushf
inc
add
lcall
mov
dec
xor
xchg
popf
jge
or
xchg
repnz
icebp
adc
mov
sub
decb
stos
sbb
lods
shll
push
jmp
mov
sub
jae
aad
mov
adc
mov
xor
dec
ljmp
stc
xor
imul
xchg
dec
xor
push
aad
movsb
mov
mov
cs
lds
rcrb
adc
push
fwait
adc
dec
lea
test
sub
jo
mov
iret
and
push
clc
shl
cwtl
pop
je
sub
ljmp
sbb
cmp
call
mov
add
cwtl
nop
mov
sbb
test
push
jle
push
lods
rorb
and
rclb
loope
push
sbb
mov
inc
in
jge
sbb
sbb
lods
in
push
repz
jg
mov
gs
xor
out
jne
push
ds
aad
out
mov
je
jns
mov
push
push
sbb
movsb
fldl
test
mov
decb
mov
pop
lea
dec
movsb
outsb
aaa
cmp
in
and
test
mov
and
cmp
xchg
rclb
pop
mov
mov
xchg
in
and
lret
mov
xchg
inc
lret
ss
dec
mov
scas
fisttpl
sub
inc
mov
push
pop
pop
xor
jecxz
insb
cmp
push
push
pop
imul
clc
mov
fisttps
mov
jge
in
aam
loope
hlt
cmpsl
dec
jl
cmc
mov
dec
rol
jg
cmp
mov
call
rep
cmp
pop
fildl
xor
outsb
jge
movsb
jno
push
clc
mov
les
test
pushf
inc
adc
cs
in
inc
lahf
fwait
test
xchg
repnz
nop
fisttps
inc
inc
or
mov
jbe
in
pop
bound
insb
cmp
test
push
inc
push
adc
mov
add
adc
fstpt
mov
fildll
cmp
fisubrl
js
or
cmpsb
in
add
ds
sub
cmp
lcall
add
neg
cmp
pushf
sbb
jbe
mov
rclb
bound
fnsave
jp
sub
fldenv
jmp
mov
mov
cmp
icebp
icebp
cmpsl
cmp
adc
mov
scas
cwtl
lods
push
pop
clc
lret
sub
sbb
push
lea
call
push
loope
or
ret
test
push
xchg
inc
jae
mov
inc
mul
sbb
iret
push
adc
xor
push
xchg
sbbb
sub
jne
add
push
and
xchg
dec
jg
les
cmp
ljmp
jge
sub
out
dec
jne
jnp
mov
mov
leave
dec
and
mov
popf
fucomi
arpl
hlt
xchg
imul
into
mov
stos
adc
add
int
mov
mov
add
shrb
fildll
push
out
mov
pop
sti
xor
rol
cmp
lock
mov
test
shlb
xchg
cmp
icebp
pop
imul
repnz
pop
adc
mov
fcmovu
jle
in
stos
adc
sti
pop
or
mov
inc
adc
xchg
push
out
andb
sbb
insl
mov
out
loop
movsl
mov
jp
pop
ds
pop
cmp
je
shrl
lods
lods
or
mov
scas
sub
dec
cltd
jecxz
push
stc
cltd
js
jle
push
add
or
mov
leave
js
sub
dec
pop
mov
sub
mov
ret
scas
or
rcr
nop
sbb
push
cs
std
insl
ret
push
fcoms
cmpsb
pop
ss
mov
or
mov
push
add
stos
jmp
or
lods
imul
xor
jns
pop
mov
add
xorl
mov
jmp
test
lret
aad
je
push
scas
loope
jmp
add
pop
mov
inc
xor
pushf
ss
mov
int3
mov
mov
adc
scas
sbb
addr16
daa
sbb
mov
outsb
lds
sti
add
adc
lret
xlat
scas
inc
shll
or
insb
add
push
or
rcrl
fwait
inc
sbb
lds
aaa
or
aaa
xchg
outsl
int
pusha
inc
out
push
push
or
mov
call
dec
cmpsl
movsl
insl
rep
sub
imul
sub
jbe
add
imul
or
adc
cltd
jge,pt
jae
mov
xor
fstpt
iret
cmp
mov
repnz
gs
push
outsl
lahf
inc
lret
in
xchg
mov
xlat
mov
push
iret
shll
fsub
fdivs
incl
fs
lea
push
js
mov
or
or
nop
dec
cmp
mov
lret
dec
sbb
xor
xchg
pusha
cmp
mov
xor
cs
pop
and
mov
stos
out
addl
cmc
sbb
dec
xchg
test
inc
cmp
mov
testl
adc
movsb
test
leave
insl
push
dec
cli
loop
xchg
cs
xor
frstor
into
sbb
xor
lods
imul
out
mov
pop
out
add
test
pop
movsb
imul
jmp
fwait
jae
sub
scas
mov
xor
mov
mov
adc
dec
add
xchg
ret
dec
loope
imul
adc
sub
in
and
mov
cmc
aam
out
lcall
in
or
mov
push
dec
jp
mov
hlt
roll
pop
sbb
add
call
ljmp
mov
pop
xchg
mov
sbb
int
pop
rcrl
ffree
ljmp
out
shr
pop
mov
xchg
fidivl
mov
mov
sub
nop
sub
test
and
pop
adcb
dec
shlb
jo
aad
insb
mov
fs
popf
cli
mov
scas
imul
xchg
xlat
xchg
add
insb
or
sahf
jle
je
xlat
jle
jl
add
movsl
mov
xor
call
loope
pop
xorl
movsl
push
jnp
decl
rol
and
or
sub
stos
push
imul
std
dec
and
push
lds
xor
or
int3
or
fcoml
and
dec
and
repnz
fwait
cwtl
jle
and
fsubr
add
insl
inc
xchg
jp
xchg
sub
iret
mov
jne
jbe
jne
nop
sbb
lds
add
inc
imul
scas
fwait
dec
push
aas
test
out
pop
mov
imul
sti
pop
xchg
jnp
lods
xchg
push
mov
push
inc
and
insb
inc
sahf
add
add
out
mov
leave
xchg
out
cltd
push
dec
popa
mov
subl
iret
cmp
rcr
pop
in
xchg
jne
shr
dec
mov
sub
mov
jmp
xor
mov
sub
jne
sbb
out
sahf
arpl
xchg
inc
scas
stos
mov
mov
sbbl
daa
or
cmpsb
into
movsl
pop
dec
jmp
outsl
lods
jge
or
repnz
adc
popf
mov
add
mov
jnp
push
test
divb
push
lret
mov
sbb
sbb
add
mov
popf
pusha
pop
mov
add
xor
add
sub
clc
cld
in
jb
addr16
cltd
pusha
xchg
xchg
push
mov
cmp
mov
es
cld
out
ficoms
xchg
pop
inc
scas
out
scas
fidivrl
cs
inc
inc
jae
ret
cmp
inc
add
sbb
loope
bound
jecxz
aaa
dec
sub
sub
push
repz
jmp
cmpsb
mov
mov
outsl
shlb
xchg
idivb
lret
adc
adc
and
cmp
push
jb
lods
mov
fstl
imul
xorb
shrl
jb
and
in
pushl
pop
mov
adc
lahf
lahf
push
cld
dec
mov
rorl
outsb
into
push
idivl
add
sbb
int3
test
xchg
mov
pusha
ja
mov
loop
or
jne
imul
sbb
sub
xchg
jl
sub
rol
dec
jp
mov
insb
push
push
mov
jge
enter
pop
push
push
jno
adc
ret
cltd
lcall
repz
loope
jge
lds
push
out
mov
sbb
mov
inc
jle
outsb
lods
mov
jl
aad
lret
push
dec
mov
adc
mov
add
fnstcw
jo
loopne
xor
jmp
jge
out
xchg
outsb
sti
xor
sar
inc
xchg
lret
push
inc
fsubl
sub
cmp
add
sbb
xor
dec
shrb
fwait
mov
xor
faddl
adc
dec
cmp
loopne
int3
repnz
xchg
iret
push
sub
mov
sahf
sub
iret
xchg
xor
pop
lret
lods
icebp
xorb
xorl
repz
sbb
xchg
cwtl
hlt
sahf
adc
pop
aad
cld
mov
or
mov
bound
xor
mov
pop
cld
xchg
inc
stc
arpl
cmpsl
pop
sub
out
cmp
rcrb
out
in
popa
mov
bound
or
or
popf
lods
push
mov
imul
idivb
dec
leave
lds
das
push
jo
inc
mov
outsb
xchg
inc
ret
ret
mov
sbb
insl
cs
inc
pop
push
out
adc
cmc
xchg
pushf
test
sub
jbe
ficoms
and
int3
scas
xchg
pop
sbb
and
push
push
cwtl
sbb
add
mov
in
ljmp
push
pop
push
add
les
cld
iret
add
ds
mov
outsb
adc
cmp
add
cmp
sbb
aaa
lds
rolb
das
popa
mov
nop
dec
xchg
scas
push
std
popa
ss
add
fwait
bound
jbe
mov
test
push
mov
jle
aaa
sub
int
inc
or
pop
push
sbb
lahf
push
subb
xor
bnd
and
mov
fsubrl
aaa
mov
cmp
sahf
ljmp
add
sub
shll
inc
push
rcrb
sub
stos
fnsave
rcrl
dec
pusha
dec
inc
lods
test
cmp
or
jge
daa
add
xlat
adc
gs
ficompl
or
loope
cmp
shlb
ja
imul
arpl
mov
jnp
fldt
leave
mov
pusha
mov
fwait
icebp
shll
fwait
jp
fidivs
jecxz
xor
push
mov
sub
adc
aaa
leave
mov
sbb
ss
dec
adc
cmp
pusha
inc
pushf
mov
add
jne
push
or
push
ret
rorb
lds
mov
stc
sub
mov
add
inc
inc
mov
xchg
inc
nop
mov
movsl
lock
sub
sub
sub
imul
xor
xor
jp
sbb
aad
cmpsl
inc
scas
mov
jge
idivl
xchg
aad
test
cmpsb
lret
mov
sub
aas
insl
push
std
shll
outsl
cmp
out
or
or
xor
sbb
sbb
lds
jp
jbe
aas
xchg
rorl
xlat
call
lret
pop
push
movsl
dec
and
repz
lcall
xchg
cmp
jl
xorb
das
int3
movsb
cmp
jge
inc
roll
aam
daa
arpl
clc
add
imul
cltd
out
cmp
jae
adc
pop
mov
lea
inc
xchg
add
xchg
jae
push
xchg
into
add
idivl
mov
add
mov
das
out
out
adc
sbb
insb
nop
push
mov
and
inc
xor
push
fadds
xchg
not
addr16
jo
mov
inc
or
arpl
xchg
mov
jb
pop
cmc
pop
cld
xor
int3
xchg
mov
push
jl
push
cmp
lds
xchg
sarb
and
loop
xchg
fidivl
push
test
cmp
inc
sub
mov
push
dec
fcoms
add
pop
or
mov
ficoml
lock
dec
adc
jns
iret
insb
sbb
xchg
lahf
adc
push
dec
or
fldl
xlat
subb
sahf
and
jns
inc
sbb
shrl
or
mov
inc
mov
stos
mov
enter
mov
aas
xchg
int
push
add
ja
lds
mov
jecxz
lods
xchg
in
lock
es
ror
or
test
and
jcxz
xor
fcompl
std
outsl
and
fcoml
cmp
adc
sbb
movsb
add
insl
jge
ja
aam
arpl
or
lock
dec
sbbl
sbb
sbb
ljmp
mov
adc
dec
iret
insl
pop
xchg
sbb
neg
pop
movsb
xchg
xor
jmp
or
dec
mov
mov
dec
add
push
stc
loope
leave
inc
das
jmp
sbb
test
xor
cmpsb
mov
xchg
cmp
jb
test
fsubrs
lock
movsb
push
fcomi
dec
int3
mov
pop
test
sti
inc
cmc
hlt
sti
mov
jns
mov
jbe
pop
mov
scas
cmp
cmpsb
sub
ret
stos
adc
push
pop
das
sahf
clc
scas
xchg
stos
mov
hlt
test
or
push
sbb
sub
mov
add
push
xor
jo
pushf
ficoml
dec
orb
mov
daa
ret
sub
lcall
cwtl
inc
mov
or
xor
dec
inc
sub
aaa
out
in
push
cmpsl
sub
cmp
inc
push
push
mov
sub
jecxz
pop
xor
test
call
dec
call
sub
data16
lahf
mov
pop
sub
icebp
jmp
call
movb
rcrb
add
in
mov
push
insl
mov
inc
adc
add
pop
sub
jp
mov
aaa
sub
insl
out
ja
cvttps2pi
fs
mov
jb
add
mov
sub
sbb
and
mov
mov
sub
jp
shl
test
pop
xor
adcl
dec
sbb
jg
xchg
cmp
fwait
aam
pusha
cmp
sbbl
push
cmp
in
lcall
shll
jbe
push
scas
cmp
dec
dec
inc
fs
pop
mov
pop
aam
mov
push
cltd
and
or
ljmp
inc
cmp
lods
sbb
in
sbb
inc
les
jne
adc
ja
pop
popa
fstpt
cltd
lcall
int
fcomip
scas
lds
xchg
adc
std
cmp
leave
and
cmpl
jg
stos
inc
call
push
jge
adc
mov
bsr
jmp
mov
subb
sub
int
test
outsl
add
jmp
or
xchg
loope
jo
inc
lret
rcrl
sub
mov
js
inc
xchg
cmpsl
dec
lods
cmc
adc
rorb
test
add
sub
adc
xchg
sbb
pop
mov
cmp
pop
and
int
out
inc
xor
jbe
orb
jns
test
loope
loopne
adcl
jno
fsub
adc
shlb
cld
push
incb
add
or
inc
push
mov
and
out
aas
sbb
push
mov
add
xor
xchg
mov
test
jb
cmpsl
cli
xchg
mov
andl
cmp
and
stc
mov
mov
jne
imul
sub
cs
jne
lcall
cltd
aad
sbb
xor
and
fcompl
int3
xor
jno
xchg
mov
push
add
dec
stc
pop
je
hlt
nop
js
insl
pusha
out
sti
xor
mov
mov
stc
test
pop
push
or
mov
mov
imul
imul
jp
cmpl
adc
mov
gs
xor
pop
push
stos
sub
dec
daa
or
and
mov
add
dec
mov
add
and
iret
dec
lock
ja
into
es
mov
fdivrs
das
jne
inc
inc
xor
ret
sahf
adc
std
sarb
xchg
push
push
dec
ja
cmpsl
pop
cmpsl
outsl
pop
push
pop
pop
jp
xchg
push
xorl
pop
cld
cmc
sub
sti
je
and
aam
sbb
mov
in
jge
fwait
push
mov
int3
push
outsb
bswap
pop
pop
sbb
push
pop
cmp
push
fldenv
icebp
xor
sub
sbb
in
repnz
push
sbb
dec
mov
pushf
jb
frstor
adc
fiadds
cs
ljmp
fdiv
popf
xchg
add
or
xlat
pop
fnstcw
pcmpeqb
or
dec
jle
mov
xorl
dec
jo
xor
movsl
ljmp
fbstp
adc
fwait
sbb
push
shll
sahf
mov
push
lock
je
mov
cmp
lods
push
xchg
cmp
xlat
stos
dec
push
xor
sahf
sub
dec
jne
test
es
popf
jg
movsb
mov
pop
fadds
cmp
fs
inc
stos
add
mov
stos
xchg
jnp
out
adc
inc
inc
xchg
mov
call
imul
lret
dec
jns
mov
fdivl
sbb
ds
out
add
xchg
fwait
cmc
iret
rcll
mov
mov
sbb
stos
cmpsl
data16
dec
shlb
ljmp
mov
inc
imul
mov
lds
sbb
out
cmpl
cld
mov
adc
push
subb
xlat
popf
pusha
mov
rorb
outsb
data16
ret
pop
mov
dec
andl
mov
into
pushf
aaa
stos
jecxz
andl
pop
adc
dec
xlat
mov
inc
add
cmp
fsubr
jmp
xlat
push
shrb
mov
aad
jg
inc
fs
push
pop
in
xchg
and
fidivs
inc
add
out
sahf
jecxz
add
sbb
adc
mov
xchg
sub
mov
xor
push
pop
ljmp
mov
jbe
inc
push
les
ja
and
or
add
out
inc
mov
inc
arpl
loopne
popf
sub
or
xor
aaa
mov
push
jecxz
call
insb
pop
pushf
bound
mov
es
xor
inc
mov
cwtl
out
push
iret
adc
arpl
int
mov
adc
leave
lea
nop
leave
inc
bound
enter
in
repnz
iret
scas
pop
in
inc
mov
loopne
add
ss
cs
insb
sub
jg
clc
cmp
pusha
cmpsl
test
clc
lahf
out
cli
mov
mov
and
pop
imul
sbb
jnp
or
jnp
cmpsb
dec
fldl
jmp
cmp
adc
test
movsl
pop
push
das
mov
pop
aaa
jge
xor
ficoml
xlat
ljmp
add
push
pop
jg
outsb
fsubrl
adc
push
bound
push
popa
ss
js
mov
and
pusha
add
cmp
sub
sar
mov
outsl
imul
out
inc
test
inc
sub
adc
andl
jmp
or
mov
mov
mov
mov
push
imul
cli
add
loop
inc
jle
out
lds
arpl
js
cmp
aaa
xchg
aas
imul
push
sahf
cs
ds
decb
int3
imul
negl
enter
push
xchg
fs
int
mov
lcall
cmp
push
dec
and
lock
dec
cltd
or
jno
es
aas
lret
mov
cmc
fnstsw
or
shrb
or
jae
xchg
push
into
adc
xor
ficoms
mov
xchg
pop
adc
xor
imul
sahf
loope
push
mov
out
lret
push
mov
xchg
fsub
es
or
jg
adc
jg
dec
nop
aas
mov
cmp
inc
inc
sub
push
or
jmp
add
cmpsb
push
jne
addb
clc
scas
movsl
pop
jecxz
in
add
mov
pop
aam
xchg
push
outsl
lret
xchg
fdivrp
cmc
sti
shrl
mov
dec
sbb
bound
sbb
lcall
jnp
jle
dec
out
mov
jle
xor
outsb
shr
movsl
out
pop
cltd
push
xlat
ljmp
es
inc
gs
xchg
sub
popf
mov
ficoml
leave
sbb
stc
push
movsl
mov
je
pop
pop
in
xchg
icebp
div
dec
dec
imul
std
cmp
xchg
stc
mov
enter
dec
cmpsb
mov
adc
and
cli
int3
test
jno
mov
repnz
jne
jo
call
adc
sbb
adc
xlat
or
pop
xor
out
loop
push
mov
ret
mov
xor
lock
jae
test
lahf
cmpsl
fisubs
push
push
in
rcll
add
push
inc
xor
popf
dec
ds
add
jne
cltd
cld
jmp
inc
sbb
xlat
mov
cld
iret
xchg
sti
int3
aad
notl
lahf
cmp
mov
pop
cli
push
int
xor
test
add
lcall
mov
enter
outsl
andl
jg
repz
mov
cltd
out
xchg
push
sub
or
mov
xchg
int3
popf
insl
ja
jne
push
mov
scas
pop
jl
adc
movsl
xor
and
sti
loope
cmc
pushf
jo
ja
sub
pop
outsl
lods
mov
fdivl
mov
mov
and
lock
xchg
add
mov
push
ljmp
jle
aad
push
clc
nop
nop
or
jno
fsubs
imul
cmp
xor
sub
pop
sub
rclb
ljmp
sub
shl
ret
inc
fs
mov
or
loope
lock
cli
imul
call
rolb
xchg
cmp
sbb
jno
mov
and
es
jae
inc
pusha
xchg
mov
cmpsb
int
and
inc
test
aas
inc
sbb
mov
pop
ret
fcomps
cli
ja
push
mov
cli
dec
mov
cmc
mov
inc
dec
cld
cmp
ret
push
mov
push
pop
sarl
mov
jg
mov
inc
int
jnp
mull
outsb
arpl
cmp
subl
int3
shrl
lret
sbb
dec
sahf
pop
inc
mov
rcrl
xchg
pop
mov
mov
pop
pop
push
outsb
incl
pop
adc
aas
or
enter
divb
ss
pop
jge
mov
aas
mov
fidivl
xchg
and
adc
and
sbb
rorb
es
in
stos
and
add
mov
pop
shr
mov
pusha
cmpsl
and
nop
cli
popf
mov
mov
nop
ja
in
lret
sub
mov
inc
sbbl
rorb
fst
test
mov
adc
cmp
inc
jmp
push
push
rolb
dec
fidivs
loope
xor
pop
and
icebp
lahf
cmpsl
mov
adc
and
in
loope
pop
daa
xchg
adc
jmp
add
fimuls
dec
or
pusha
jae
gs
or
js
fcmovu
mov
inc
mov
lcall
ret
adc
out
addr16
shll
stos
inc
pop
punpckhdq
jmp
sub
mov
push
sub
fadd
jb
dec
pop
arpl
popl
lods
out
out
xchg
add
loope
xor
pop
dec
mov
shlb
int
mov
jmp
stos
push
jo
and
mov
push
in
jp
mov
lods
test
int3
call
jae
xchg
jae
sti
stc
lods
cmpsl
push
mov
and
mov
add
xchg
inc
sbb
pusha
cli
xchg
nop
js
pop
inc
cmp
push
lods
mov
test
data16
ror
mov
mov
and
std
mov
fwait
in
pop
testb
cs
mov
xchg
loop
pop
jo
jae
cwtl
clc
xor
rorl
vmulss
jge
push
insb
xor
shll
inc
sarl
xchg
rorb
fsubrs
sbb
lock
push
xchg
dec
adc
shlb
mov
andb
call
mov
lcall
ror
push
pop
into
movsl
movsb
push
cmp
popf
int
xlat
cli
cld
sarb
inc
inc
adc
add
ret
cmpsb
or
aaa
xor
bound
and
ret
push
mov
daa
lcall
sbb
adc
sbb
rcrl
test
fcomps
push
es
xchg
xchg
xchg
adc
push
jmp
jmp
decl
sub
sbb
mov
cmp
xlat
scas
ret
fildll
outsl
movsb
dec
mov
cwtl
or
cmpsl
xlat
jnp
jae
add
cld
jae
notl
mov
pop
jg
xor
adc
inc
dec
add
gs
packsswb
push
rclw
arpl
movsl
in
mov
xchg
xchg
mull
pop
ljmp
jns
inc
mov
mov
sbb
pop
imul
out
fistps
push
sub
shrb
cmp
aas
sub
stos
adc
fisubrl
push
xlat
insl
js
xchg
add
push
ss
clc
arpl
pop
mov
rclb
dec
push
adc
test
rcrb
pop
shl
andb
or
mov
out
mov
push
adc
jg
repnz
repnz
test
repnz
pop
ds
dec
jb
dec
arpl
out
je
sbb
rcrb
ret
add
and
cwtl
inc
inc
push
sub
int3
fisubs
sub
push
imul
cmc
into
mov
sarl
sbb
cli
cmp
or
jae
in
or
jns
lahf
sub
cli
lods
adc
cmp
xor
mov
enter
mov
scas
out
std
fdivl
loope
xlat
jae
or
data16
mov
mov
jle
jb
and
push
mov
sarl
cmp
pop
out
mov
xchg
rep
in
sbb
mov
jb
lods
xor
cld
fsubrs
std
mov
xor
jmp
int3
cmpl
cld
aas
mov
jno
mov
lods
mov
lods
nop
pop
pop
push
int
cmpsb
aad
xchg
mov
inc
mov
sbb
inc
pop
jp
mov
mov
cmp
js
fistps
or
mov
les
sub
jp
mov
mov
std
pop
mov
mov
or
mov
enter
test
xor
push
or
fisubl
mov
rclb
lock
jp
filds
xor
lret
jecxz
inc
out
xor
in
sbb
sub
sbb
inc
mov
sbb
mov
mov
fcoms
mov
nop
mov
cs
inc
xchg
add
subl
mov
imul
dec
mov
push
insl
bound
jmp
or
and
sub
lock
sub
dec
jbe
fneni(8087
xchg
fwait
outsb
inc
mov
sahf
aad
or
xchg
jmp
aam
addl
inc
jecxz
sbb
lds
pusha
push
ja
cwtl
mov
dec
popf
xor
scas
stos
inc
sub
fwait
int3
mov
jecxz
pop
imul
sub
cld
mov
repnz
xchg
pop
es
in
imul
popa
push
movb
pushf
add
stos
jp
rcl
push
pop
or
jne
mov
repz
dec
mov
pop
mov
mov
stc
jno
inc
cmpsb
loop
int
fidivs
push
in
fdiv
loop
repz
xchg
std
and
mov
jns
mov
out
pusha
mov
fimuls
lods
je
out
ret
fiadds
mov
fbld
lret
cmp
inc
sbb
out
adc
inc
jno
mov
add
mov
push
xchg
pop
cmp
fisubrs
das
lock
int
lret
enter
sbb
fcoml
adc
inc
inc
mov
add
jno
dec
jl
testl
sarb
pop
xor
cld
cmp
push
ja
repnz
scas
dec
daa
lret
xchg
ss
xor
lret
push
mov
adc
mov
xor
xor
insl
xorb
out
mov
cmp
adc
test
cmp
mov
pop
orl
xor
or
pop
and
inc
jg
sbb
vpaddsb
sbb
hlt
and
scas
add
in
pop
cli
gs
cmpsb
mov
pop
mov
negb
lret
std
daa
mov
mov
sbb
fildll
movsb
jb
fincstp
sahf
lds
adc
pusha
dec
mov
cmp
test
mov
cltd
adc
les
push
mov
mov
jbe
inc
pusha
mov
repz
sbb
dec
ficompl
cmp
jb
das
xor
movsb
fdiv
jbe
pushf
pushf
loop
xor
xchg
push
inc
adc
pop
inc
pop
dec
popa
dec
pusha
ljmp
daa
aad
sti
push
cld
movsl
sets
out
cmp
scas
mov
mov
out
cmp
sbb
int3
les
daa
aaa
push
dec
loop
pop
pop
ret
ds
and
in
sbb
test
femms
fwait
add
test
xor
or
aaa
inc
and
jne
xchg
or
push
cmp
ret
ret
es
push
cmp
xor
adc
or
jo
repz
leave
sub
add
ret
jno
mov
test
add
loop
xchg
jno
inc
dec
data16
outsb
add
xchg
arpl
mov
ds
movsb
xchg
or
fwait
stos
pusha
push
lock
xchg
xadd
push
mov
imul
or
xchg
ja
jnp
outsb
mov
imul
nop
lods
pushf
mov
adc
cmp
cltd
mov
dec
and
daa
mov
rcr
pop
or
sbb
rolb
push
arpl
pop
int3
inc
jmp
jp
ljmp
std
inc
or
int3
ss
movsb
mov
adc
adc
shrl
push
push
inc
outsb
xchg
lcall
sbb
jl
lds
mov
pop
pop
andb
lock
nop
rol
mov
popa
mov
lds
enter
mov
cmp
out
sbb
mov
xor
dec
aad
push
out
mov
inc
add
out
mov
mov
cs
xchg
shlb
fwait
dec
popa
mov
fsubp
xchg
imull
stos
les
enter
inc
pusha
dec
popf
andl
stos
add
test
or
in
add
push
jae
scas
iret
xchg
cmp
sub
in
lret
and
mov
jb
cmpl
in
call
xchg
xchg
into
mov
add
scas
inc
sub
ja
iret
sub
popl
jo
clc
loop
gs
gs
cmp
mov
sub
cmpsb
or
pop
addl
mov
daa
insl
mov
add
add
ret
jo
cmpsb
jnp
push
cltd
pop
pop
js
pop
enter
pop
push
push
out
fsubl
out
xor
inc
or
add
sbb
je
loope
jns
push
popf
test
mov
sub
and
pop
rorl
mov
outsl
nop
pop
xor
dec
idivl
andb
dec
test
sbb
push
jg
stos
add
pop
pop
fwait
movsb
dec
sarb
cmp
push
inc
stos
outsb
jmp
sub
nop
fs
add
add
fiadds
xchg
das
jle
subb
aas
icebp
cmp
stos
adc
pop
cmp
popl
and
cmpsb
icebp
dec
mov
jb
inc
leave
rcrb
add
or
jl
cmpsb
or
sar
sub
dec
inc
or
jp
rcrl
call
pusha
mov
leave
lcall
sub
push
lahf
in
xchg
aaa
ja
rorb
cs
sarb
push
fs
or
popa
repz
inc
pop
lcall
cmp
pop
sbb
adc
stc
out
jns
mov
enter
mov
sub
not
xchg
aas
add
sbb
std
xchg
xor
sbb
sbb
fmuls
int
popa
scas
or
rol
push
jl
in
call
outsl
mov
mov
mov
fnsave
testb
imul
pop
gs
jo
aaa
push
jmp
push
mov
pmulhuw
jmp
dec
test
or
jae
idivb
sbb
mov
dec
call
dec
xor
int3
adc
mov
and
jecxz
das
cli
push
jl
xor
lods
mov
sbb
sub
addr16
inc
shrb
je
mov
sbb
aad
test
sahf
push
stos
shl
aam
mov
lret
push
cmp
gs
sbb
push
call
inc
arpl
pop
dec
pop
lods
addr16
cmp
aam
xchg
inc
push
push
adc
leave
xor
clc
ja
lock
sbb
add
gs
jmp
dec
loop
out
push
pop
xchg
xchg
mov
in
negl
xchg
cmpsb
pushf
pop
xor
add
lahf
cld
mov
cs
pop
imul
ljmp
jecxz
out
cmpsb
or
sarb
std
jg
jmp
mov
mul
jg
lods
cmp
ret
stc
ds
cmc
xlat
xlat
xor
imul
mov
sbb
addr16
cwtl
fbld
ret
lret
mov
sbb
mov
cmc
push
dec
pop
dec
pop
lret
inc
ret
in
inc
fdivl
add
lret
jno
scas
js
gs
cs
adc
xor
push
testl
std
xchg
sahf
nop
idivl
push
inc
mov
das
xchg
out
add
test
int3
mov
in
or
xlat
imul
lret
mov
loopne
sbb
jo
mov
add
imul
out
jl
push
sti
lret
loop
shr
int
js
dec
mov
jl,pn
decl
and
add
vpshuflw
adc
pushf
ss
aaa
cli
push
jb
push
xchg
mov
sbb
fisttpll
dec
sbb
xlat
add
inc
or
jg
mov
das
out
fsub
jmp
pusha
xor
cmpb
into
sbb
js
repnz
push
mov
mov
pmaddwd
inc
xchg
mov
jg
jo
cmp
rcl
cli
xor
ror
adc
lret
std
gs
xorb
mov
incb
sub
je
add
push
dec
popw
add
push
rclb
jg
xor
xchg
dec
rclb
push
stos
rcrb
lret
sub
cmpsb
pop
xchg
dec
mov
cld
pop
andb
je
or
push
std
out
enter
push
in
mov
inc
inc
cmpl
adc
sahf
movd
movsb
stos
gs
mov
adc
loope
sbb
bound
out
out
mov
xor
cmpsl
ja
cwtl
clc
outsl
enter
hlt
lcall
imul
in
lahf
loop
sbb
insl
js
icebp
je
dec
cwtl
push
dec
cmp
in
push
pop
dec
rcrb
push
inc
mov
pop
pop
jns
js
loop
daa
outsb
std
adc
cld
cld
lahf
into
arpl
gs
jmp
adc
adc
dec
pushf
mov
cmp
cmpsl
movsb
jg
in
loope
icebp
xor
xchg
jmp
push
or
sub
cwtl
sti
or
lods
xchg
in
add
ss
sbb
test
push
fisttpl
es
cmpsb
jle
in
lods
orl
push
lock
cmp
cmp
in
mov
xchg
in
xchg
aad
mov
loop
into
push
add
icebp
jns
in
adc
add
outsl
mov
fildll
sbb
cmpsl
xchg
push
push
add
sarl
add
rolb
sbb
mov
adc
out
cmc
sub
xchg
outsl
cld
sti
mov
pop
jmp
jne
insb
push
imul
or
mov
xchg
shl
aam
sti
shlb
hlt
sbb
dec
inc
sub
jo
enter
xchg
sub
fcmovu
jp
pop
in
cld
nop
cmp
pop
jae
repnz
xchg
nop
xchg
int3
scas
jbe
push
es
jg
mov
xchg
and
and
fstl
gs
push
shr
ja
mov
mov
mov
and
dec
mov
sahf
pop
addb
filds
movsb
xchg
ss
sub
sbbb
test
add
into
mov
test
xchg
test
imul
xor
cmpsb
pop
inc
cmp
or
imul
lea
cmp
cmp
ret
icebp
das
mov
dec
mov
rcrb
mov
insl
popa
adc
leave
loop
in
inc
into
insl
mov
mov
xchg
and
and
lret
popf
fs
xchg
imull
aas
in
xor
mov
xchg
pause
fmul
dec
rol
xchg
push
mov
outsb
rclb
test
dec
push
jle
lods
testb
pop
cwtl
mov
notb
ds
cmc
mov
fidivrs
jmp
push
mov
mov
cli
fistpl
xor
inc
rorb
in
leave
adc
data16
test
mov
jno
insl
mov
mov
pop
sbb
xor
sub
sub
xchg
xor
scas
fwait
cmc
xchg
repnz
adc
add
or
lds
into
ficompl
jle
or
fstpl
jbe
push
out
scas
add
test
dec
ficomps
jmp
mov
xor
pop
mov
adc
insb
scas
test
gs
mov
out
movsb
mov
dec
mov
sahf
repz
jo
subl
or
js
sbb
pop
test
fwait
daa
push
or
push
js
jb
rclb
out
std
fmulp
mov
xorb
xor
shlb
mov
dec
hlt
jp
push
xchg
or
dec
test
xchg
lcall
iret
mov
or
ret
pusha
pop
push
ljmp
mov
mov
stos
cmp
cld
sub
stos
sarb
ljmp
push
std
dec
sbb
pop
test
adc
lcall
xchg
in
js
filds
push
dec
repnz
and
jmp
in
add
lret
xor
sti
rclb
add
mov
mov
sahf
mov
xor
push
lea
cmp
and
adc
pushf
dec
popf
cmp
and
inc
or
inc
insb
aas
mov
dec
adc
dec
arpl
pop
test
es
inc
mov
mov
imul
sbb
pop
mov
jmp
mov
xchg
inc
inc
dec
xor
clc
hlt
ljmp
and
xchg
aaa
pop
push
jl
push
out
popa
add
fmull
push
cmpsl
xchg
jecxz
mov
cmp
add
pop
add
adc
fwait
test
jmp
scas
or
pusha
cli
xchg
mov
cmpsb
mov
sub
adc
push
sbb
adc
adc
cmp
add
pop
inc
xor
cmp
lcall
dec
mov
dec
sub
js
aas
popa
leave
xchg
sub
and
cmp
adc
das
add
fcmovnbe
lock
mov
loop
rolb
mov
gs
push
dec
lods
xchg
inc
in
adc
and
push
mov
mov
test
fiaddl
sbb
cs
int3
cmpsb
insl
mov
mov
imul
mov
nop
push
into
and
push
inc
aas
fwait
in
push
dec
sbb
cwtl
and
imul
dec
fidivs
jno
add
cmp
and
dec
xchg
aas
sub
mov
jle
mov
test
xor
and
pop
gs
in
and
push
int
push
scas
push
pop
out
clc
out
inc
mov
inc
loop
ljmp
test
negl
jb
imul
inc
push
push
dec
incl
lcall
push
das
outsb
inc
or
int3
jl
nop
dec
sbb
movsl
pop
mov
dec
repnz
btr
mov
test
inc
or
adc
popa
subl
fwait
icebp
popf
inc
out
repz
test
mov
movb
ficompl
lods
dec
mov
cltd
xor
mov
mov
sti
jns
addl
adc
jp
inc
sahf
test
int
push
and
push
int
fbld
or
scas
pop
sub
movsb
pop
push
cmp
sbb
xchg
jl
idivl
lods
test
sbb
clc
sbb
aad
cs
mov
sbb
dec
sub
fidivs
adc
jge
jns
lds
shll
paddd
push
lods
das
fisttps
lds
es
imul
push
mov
mov
dec
in
ret
mov
inc
mov
and
out
iret
mov
mov
ror
cmp
scas
popf
std
xchg
fiadds
cli
jl
test
cmp
adc
pushf
sbb
scas
nop
mov
loope
ret
insl
mov
add
int
fwait
je
lds
cmp
jmp
xchg
mov
and
bound
xor
pop
sahf
out
adc
stc
aaa
add
arpl
mov
mov
out
out
sub
xlat
jecxz
popf
pop
xor
and
jb
aad
mov
xor
out
das
or
enter
je
xor
fstl
xchg
pushf
inc
call
or
mov
call
testb
movsl
or
pusha
and
test
jne
dec
ss
jae
inc
mov
leave
pop
gs
mov
dec
push
mov
xlat
pop
iret
cmpsb
pop
dec
adc
ss
fs
loope
inc
divl
insb
scas
add
ja
jb
mov
lods
dec
dec
mov
inc
push
inc
dec
mov
adcl
fiadds
outsb
lret
xchg
test
xor
push
xchg
xchg
push
cmpsl
lds
pop
ret
ret
fidivs
and
cmp
cmpsb
addb
ljmp
outsl
xchg
popf
xlat
cmp
xchg
dec
sub
cmp
adc
or
push
sbb
js
mov
cmp
mov
mov
push
ljmp
repz
and
scas
sahf
das
push
sub
pop
lea
lods
pusha
xor
pushf
inc
daa
test
int3
sbb
jmp
add
pop
outsl
addr16
mov
add
lods
int
mov
or
popf
mov
push
and
mov
adc
cmp
lods
ljmp
or
cwtl
ljmp
sbb
nop
and
pop
jle
mov
hlt
jno
add
ds
mov
mov
nop
dec
dec
lods
jmp
scas
outsb
pop
fsubr
dec
jno
sub
fisubs
adc
ret
repnz
mov
test
nop
cmpsb
jmp
aam
push
aaa
into
add
xor
lods
leave
dec
movsl
xor
and
cmp
sbb
lock
andl
jge
lahf
jns
or
loop
mov
mov
mov
dec
or
xchg
stos
or
jle
cwtl
adc
mov
out
sbb
add
pop
imul
jp
cwtl
inc
pop
pop
pop
fwait
lods
movsl
or
insb
lds
sahf
sbb
xchg
cmp
int3
out
dec
outsb
and
cmp
std
aaa
add
fnsave
out
addb
popf
xchg
es
sbb
sub
test
push
add
cmp
jae
stos
cltd
mov
inc
ret
mov
mov
and
out
das
repz
xor
rorb
jle
adc
test
leave
icebp
repz
addl
or
push
iret
aas
mov
inc
ss
cltd
rcrb
sub
aas
stos
shl
sub
jbe
outsl
push
jl
inc
cmpsb
int3
xor
bound
and
hlt
mov
adc
pop
outsb
sub
out
test
cmp
pusha
das
scas
or
icebp
pop
xlat
pop
sti
inc
push
ret
sub
lcall
fs
sbb
push
xor
imul
pop
js
fldl
jnp
mov
sub
pushf
decl
dec
mov
dec
dec
outsb
lock
jno
daa
loop
add
sub
adc
adc
into
aas
adc
test
inc
mov
xchg
push
xor
sti
xchg
sbb
fs
sbb
dec
lret
pop
inc
addr16
push
adc
out
jg
das
mov
shll
clc
jge
push
mov
pop
mov
jp
inc
test
pop
loope
scas
out
out
push
xor
ds
iret
ficoms
mov
add
cmp
pushf
push
cmc
and
inc
add
adc
push
ret
repz
inc
enter
mov
dec
iret
inc
stc
shrb
inc
inc
sub
arpl
inc
add
filds
fnstenv
repz
pop
fsts
in
sub
punpcklwd
dec
add
call
xor
loopne
sub
fwait
dec
jne
roll
sub
and
scas
or
scas
sbb
dec
push
xchg
dec
push
xchg
mov
cmp
jp
imul
in
mov
push
ds
inc
fisubs
lret
int3
aad
rcll
repz
mov
pop
jae
movsb
inc
adc
fiadds
mul
mov
iret
mov
push
xor
mov
lds
fs
push
call
push
cld
push
ret
out
pop
mov
jo
jle
inc
cmp
repz
imul
lret
xchg
les
sti
add
insb
push
mov
insl
testl
push
das
push
push
xor
push
xchg
int3
mov
pop
das
fcoml
mov
insl
int3
repz
popf
push
mov
stos
gs
enter
xchg
int
or
cmpsb
test
gs
add
push
loop
rcr
xor
das
sbb
adc
bound
adc
lds
push
xchg
mov
and
cli
mov
fsts
and
lret
mov
push
ljmp
push
push
test
add
adc
test
sub
xchg
dec
ljmp
clc
pop
push
jnp
add
test
xchg
ret
inc
test
call
adc
mov
fst
mov
cld
lcall
inc
fcmovnb
jnp
mov
cmp
inc
jae
ret
xor
mov
popf
daa
jmp
iret
mov
sahf
int
testl
pop
jle
aad
xchg
and
repz
ss
imul
stos
test
mov
icebp
jb
enter
cld
sub
sub
test
mov
arpl
cmp
iret
imul
movsl
mov
mov
mov
test
add
mov
mov
xlat
scas
mov
push
adc
push
das
push
inc
imul
add
push
sbb
inc
imul
sub
out
mov
call
inc
xor
nop
test
push
shrb
sub
or
stc
lods
addr16
sbb
and
ret
test
movsb
inc
dec
mov
lret
imul
mov
clc
xchg
pop
push
xor
or
jmp
pop
leave
sbb
add
xchg
ficompl
dec
pop
lods
inc
and
adc
mov
clc
xchg
in
test
xor
dec
leave
daa
xor
ficoml
cmp
bound
inc
lea
cmp
jg
add
xor
cmp
add
ds
mov
aaa
into
ds
pop
jns
rorb
add
jne
adc
mov
mov
scas
push
decl
dec
les
xor
mov
mov
pop
pop
adc
out
push
mov
and
inc
incl
pop
test
jl
div
test
insl
mov
gs
xorl
enter
les
mov
pushl
cmp
xchg
pop
out
out
sub
jp
pop
jns
adc
mov
dec
dec
int3
mov
mov
stos
xchg
dec
shll
out
jge
cwtl
mov
dec
ljmp
add
xor
add
jp
inc
and
pop
jg
cli
xor
daa
outsb
jo
nop
push
testl
movsb
out
xor
pushf
fwait
aaa
js
mov
sbb
pop
cmpsl
shlb
bound
nop
add
ficoms
xor
dec
push
and
or
fcoml
cmp
inc
jno
xchg
mov
cltd
adc
xor
ret
bound
stos
gs
adc
xchg
pop
jb
sbb
test
mov
sbbl
mov
loopne
jg
adc
mov
in
inc
stos
xchg
mov
outsl
and
cmp
stos
fs
imul
ret
test
xor
push
or
daa
jb
cld
sub
insl
imul
movsb
xlat
dec
xchg
sbb
pushf
xchg
and
sub
cmp
mov
rcl
int
lods
sbb
in
mov
stos
xchg
jo
cmp
icebp
sub
fstpt
cld
in
xchg
push
or
lahf
mov
and
je
jge
or
jo
imul
sbb
into
loop
mov
add
sbb
add
jl
mull
jg
loope
sbb
outsb
mov
or
stc
lods
cli
clc
outsb
mov
iret
add
sbb
outsb
add
xchg
jecxz
xchg
sub
jle
add
in
insl
inc
mov
jb
mov
add
fistl
adc
xor
mov
and
lcall
stos
mov
mov
stos
sub
pop
out
in
sub
cmp
mov
out
or
mov
sub
and
out
xchg
movsb
ss
or
in
sti
mov
lret
ds
ret
pop
add
lods
dec
sbb
jecxz
lcall
test
pop
ljmp
hlt
xchg
shlb
jae
dec
adc
jl
push
movsl
fadds
out
mov
mov
push
ss
add
sub
jae
aaa
pop
jg
jno
push
push
and
push
test
sbb
mov
in
fistpl
dec
xorl
dec
adc
in
mov
iret
movsl
stos
xor
pop
xor
jl
lret
push
jl
cmp
mov
imul
cmp
add
or
jns
into
add
movaps
cmc
lods
cli
xchg
scas
sbb
push
jne
xor
pop
bound
cwtl
sahf
jl
jne
and
fxch
mov
fs
fs
mov
cmp
pop
enter
aad
jg
scas
xchg
push
les
popf
push
data16
jnp
jno
fcoms
lds
cmp
out
aam
mov
and
push
sub
add
imul
ficoms
xchg
bound
add
mov
mov
mov
lods
wrmsr
out
pushf
out
sbb
dec
dec
es
mov
cwtl
jp
push
push
inc
inc
push
and
dec
test
pushf
stos
lcall
cmp
cmp
test
and
dec
mov
pop
lret
in
mov
adc
loope
inc
in
es
cld
mov
sub
push
pop
add
xchg
inc
into
cmp
sahf
pop
in
jne
push
adc
fprem
int
lods
ds
aam
push
adc
xchg
mov
mov
cwtl
les
outsl
pop
insl
xor
dec
push
adc
in
lods
subl
dec
in
push
mov
xchg
roll
lock
dec
jne
xchg
cmpsl
mov
out
je
lcall
mov
push
inc
cmp
arpl
jp
push
leave
movsb
pop
push
test
sti
xchg
cmp
in
repz
jl
xor
xor
imul
mov
popf
into
cmp
hlt
cli
sbb
mov
dec
push
rclb
rcrl
dec
cmp
and
subl
adc
cmp
movsl
adc
out
repnz
fsubrp
jae
sbb
lock
sub
adc
lcall
addr16
pop
fsubl
addr16
test
dec
je
loop
or
loop
inc
xchg
stc
mov
sub
cmp
lcall
xchg
xchg
loope
sbb
insb
addr16
insl
scas
aam
stos
pop
cli
leave
popf
mov
xor
enter
outsb
or
lcall
inc
adc
mov
or
or
pop
push
xor
addr16
adc
inc
xchg
xor
loop
xor
add
nop
mov
mov
and
push
aad
inc
xor
cwtl
mov
or
fidivrl
push
mov
lret
dec
mov
sbb
xchg
dec
cmp
jmp
sahf
lods
push
out
and
jo
or
xorl
cmpsl
mov
psllw
imul
xor
lcall
xor
addr16
ret
mov
clc
fdivrs
in
cmp
das
mov
and
mov
insb
pushf
add
xchg
xchg
xor
inc
shrb
adc
add
in
lock
xchg
cmp
jl
ror
loopne
mov
loopne
jge
in
mov
test
cltd
xchg
jb
stos
mov
cmp
pop
xchg
cld
sbb
test
fsubl
mov
sub
adc
imul
add
arpl
ret
jb
mov
orl
ja
dec
jo
sarl
pop
inc
jns
cmpsb
mov
mov
out
cmpsl
inc
sbb
in
mov
cmc
mov
mov
mov
lock
fidivs
xor
jg
xor
cltd
test
fsub
and
repnz
repz
inc
fmul
and
mov
or
ss
xlat
adc
sbb
push
lds
dec
data16
sub
in
add
push
daa
push
popf
push
in
mov
xor
fwait
dec
add
mov
jne
loope
xor
dec
sub
xor
mov
cmp
fistps
andb
loopne
popa
iret
sahf
mov
jmp
mov
inc
lock
movsb
insl
lods
aad
mov
sub
dec
adc
mov
lods
add
adc
repz
cmp
mov
mov
ds
fisubs
mov
insb
mov
inc
hlt
arpl
out
push
xchg
pop
mov
ljmp
add
inc
bound
inc
xor
ftst
cmp
out
xchg
iret
push
mov
enter
outsl
push
pop
xchg
add
scas
lods
and
inc
ret
xchg
push
pop
mov
insl
imul
xchg
jae
xchg
in
inc
mov
cltd
xchg
int
shrb
cmpsb
sbb
jne
mov
lret
addr16
andl
ret
ret
jmp
sbb
int3
in
test
lcall
cmp
push
xchg
shrb
mov
push
rcll
cmpsb
push
or
in
popa
int
inc
dec
push
stos
bound
enter
sub
dec
sub
ljmp
jne
sub
mov
ljmp
mov
dec
lea
or
cmp
push
mov
sbb
test
cwtl
jo
jae
xchg
outsl
or
inc
iret
inc
sbb
mov
in
sbb
cmp
stos
xlat
adc
cs
jns
movsb
jecxz
lret
popa
jbe
push
js
add
fidivs
notb
and
sub
mov
xor
outsl
pop
cmp
or
cmp
xchg
cmp
adc
pop
xchg
cmc
sti
mov
or
dec
movb
adc
cmp
shl
mov
pop
jne
nop
arpl
push
aad
add
fldcw
pusha
es
jne
dec
push
and
jns
aam
iret
stos
loop
les
fnstcw
push
mov
fmuls
daa
sub
jp
xor
out
cwtl
inc
addr16
mov
adc
pop
and
mov
popf
mov
cmp
cmp
cltd
outsb
arpl
pop
pop
das
enter
aad
sub
mov
daa
mov
jbe
sbb
mov
lahf
add
frstor
dec
fwait
xchg
jb
mov
ficompl
or
cmp
cli
fisubs
add
add
arpl
sbb
outsl
dec
aam
test
pop
sahf
push
or
insl
jo
in
jmp
sub
jle
mov
push
jmp
lds
lcall
pop
cmp
inc
sti
cmp
cmpsl
cmp
int3
dec
dec
das
xlat
into
pop
adc
push
inc
daa
add
xchg
cld
pop
and
xor
mov
lahf
lods
lret
clc
iret
lock
jp
hlt
lcall
out
int3
mov
add
mov
cwtl
loop
shl
loope
sti
xchg
mov
loope
cmp
in
mov
or
shlb
into
lods
scas
jl
test
inc
lds
mov
sti
leave
mov
jnp
in
lret
fcompl
add
sub
and
daa
repnz
pop
mov
mov
and
aad
pop
loop
jae
fcmovb
dec
sbb
pop
outsb
mov
push
jl
mov
inc
ret
or
mov
jmp
push
jnp
rcll
repnz
add
add
xor
and
out
movsl
test
sbbl
es
dec
in
inc
mov
lret
mov
fst
js
xor
mov
pop
lcall
imul
push
shr
cmpsb
testb
lahf
inc
pushf
jmp
and
pusha
test
jae
cld
ficomps
mov
or
lods
fldenv
int
mov
movsl
insb
out
int
xchg
dec
in
pop
cli
push
adc
movsl
mov
and
into
push
or
lods
mov
xchg
enter
int3
cltd
test
sub
push
shlb
gs
fcompl
dec
mov
pushf
unpcklps
inc
pop
icebp
das
mov
test
sbb
jmp
and
or
mov
jnp
mov
pop
pop
or
pop
push
fnstsw
jns
push
sub
aas
and
repnz
or
mov
outsb
ret
sub
sbb
and
inc
dec
jo
loope
mov
mov
divb
ljmp
sbb
lcall
pop
jnp
dec
push
repz
adc
push
pop
xor
ss
movb
inc
je
cmp
fmuls
hlt
iret
and
adc
adc
test
cmc
jnp
xchg
imul
inc
test
arpl
mov
stc
and
insl
movsl
mov
lds
and
sub
mov
sbb
ss
out
pop
lock
nop
jecxz
add
mov
push
dec
lods
cmpsb
jp
ss
ds
push
lods
add
fcoml
mov
dec
pop
jno
mov
cmp
sbb
add
arpl
aam
dec
sub
jno
xchg
push
mov
mov
iret
xchg
mov
mov
fucom
data16
sbb
mov
jns
fcomps
lret
movhps
out
sbb
jbe
push
xchg
xchg
or
and
pop
adc
xor
adc
std
shr
xchg
test
mov
dec
inc
lods
rcrb
fsubs
js
outsl
movsl
mov
cs
data16
iret
pusha
enter
ret
insl
sbb
outsb
sbb
ja
mov
cmc
sub
movsb
fcmovb
aas
shrl
mov
xor
pop
icebp
push
into
idiv
cmc
cmp
xor
mov
jg
loop
ljmp
out
pop
movsl
lretw
decb
sahf
pop
or
ljmp
aas
fs
xorb
xchg
jge
ss
cltd
dec
test
out
lds
mov
aas
addr16
sub
std
mov
aaa
test
mov
adc
dec
jno
add
dec
sbb
rcll
dec
fucomi
insb
adc
lods
adc
aad
push
loop
fidivs
lret
jle
fwait
mov
add
push
and
or
aam
cmp
sbb
cmc
bound
fs
movsl
fidivrs
in
sbb
pop
fnstsw
or
inc
mov
cltd
daa
mov
mov
lods
fsubl
cmpl
test
loopne
movsb
aas
daa
testb
or
dec
cs
imul
cltd
adc
rorl
scas
cmp
cmc
jmp
iret
adc
sahf
arpl
inc
dec
ret
stos
sbb
xor
leave
push
insb
jo
and
addl
stos
negb
lret
and
fwait
mov
jo
push
xchg
mov
dec
sbb
sbb
cmpsb
lret
cmc
insb
mov
data16
repnz
cmp
xchg
mov
or
adc
and
push
lds
jecxz
sub
pop
bnd
in
loopne
ret
sbb
cmp
mov
aas
fwait
mov
andl
addr16
mov
mov
jno
rcrl
mov
test
mov
inc
push
inc
in
lds
outsb
dec
icebp
push
xchg
ret
movsb
daa
add
pop
xor
paddusb
mov
andb
daa
add
adc
test
daa
pop
out
pushf
mov
mov
loopne
out
sub
scas
xchg
inc
mov
xchg
int
and
addr16
or
adc
inc
xchg
push
and
sbb
or
inc
stc
lea
push
sub
enter
scas
ret
sbb
mov
dec
repnz
scas
stos
or
fcmovnb
pop
mov
xor
xchg
aad
hlt
dec
je
movsl
repz
mov
push
xor
cwtl
cltd
cmp
inc
cmpsb
jg
cmpsb
fwait
pop
or
in
push
scas
lds
mov
in
xchg
hlt
orb
dec
mov
jge
mov
mov
push
dec
push
dec
loop
mov
out
jbe
jno
mov
jno
int3
or
insl
shll
fisubrs
iret
dec
sbb
aas
lret
test
push
test
out
cmpsb
pop
testl
into
nop
xchg
icebp
sarb
mov
fwait
cwtl
inc
inc
add
mov
xor
jl
xchg
dec
jae
or
xor
movsl
pop
mov
jg
adc
and
sub
ficoms
push
lahf
cmp
mov
into
dec
scas
cmpsl
push
insl
insb
in
xlat
popf
ret
jp
or
push
sbbl
psadbw
mov
imulb
or
cmc
mov
imul
pushf
ficoms
insb
xor
jbe
cmp
sbb
push
mov
int3
insl
in
pop
call
lock
push
push
sahf
divb
stos
xchg
mov
mov
lcall
inc
mov
in
sbb
lcall
sahf
lea
pushf
jmp
sahf
or
ja
sub
adc
jecxz
outsb
repnz
hlt
arpl
lods
clc
mov
movsl
stos
push
and
scas
push
stc
addr16
aad
mov
xlat
gs
inc
dec
fndisi(8087
int
pusha
xchg
or
rcl
shrl
sbb
ja
nop
cld
cs
push
sahf
popa
sub
pop
cmp
mov
pop
icebp
jne
repz
lods
or
and
aad
dec
aaa
push
aad
mov
nop
cmp
pop
andb
mov
add
sahf
scas
fs
inc
jl
ret
imul
jge
pop
push
outsl
cltd
out
cmp
movsl
lods
or
cs
int3
jnp
aas
jne
scas
cmp
push
xchg
lret
aad
pop
push
dec
cmc
dec
push
movsb
mov
pop
out
insl
clc
inc
jmp
insb
sub
shrb
je
push
data16
ss
jl
ret
add
outsl
jnp
in
dec
and
adc
ss
push
mov
or
add
in
push
inc
imul
stos
lods
lods
ret
or
sbb
inc
xor
aad
or
pop
aam
dec
inc
addb
sbb
lret
cltd
cmp
xchg
xchg
xchg
dec
fdivr
adc
inc
cld
dec
xor
fs
loopne
jae
pop
mov
adc
rolb
jo
add
js
jmp
cmpsl
pop
lret
roll
jge
cmp
pop
and
rorl
jo
add
xor
mov
xlat
jnp
adc
pop
dec
gs
or
scas
lcall
ss
fs
jno
orl
std
dec
xchg
lea
jno
and
and
loopne
add
test
aad
and
daa
cmp
jp
cmpsl
adc
movl
int
int
push
enter
sub
cltd
adc
mov
lret
push
adc
sub
faddp
dec
test
testl
fucomp
or
xchg
stos
call
pop
xor
push
cmp
rcrl
add
jg
jl
xor
lods
or
push
pop
mov
rcrb
adc
lret
sub
xlat
fisubs
shl
jae
inc
cmp
pop
xlat
adc
in
cs
mov
add
sbb
pop
rcrb
inc
inc
cmp
jle
arpl
sbb
repz
aaa
adc
push
xlat
out
adc
mov
adc
mov
inc
sbb
jns
cmp
lahf
jbe
lret
mov
sbb
xchg
mov
dec
inc
sahf
imul
pop
jae
jne
mov
adc
and
stc
adcb
pop
push
jle
insl
rolb
mov
pop
stos
jp
insl
fcmovnu
jl
cmp
sbb
leavew
jmp
shll
pop
gs
inc
mov
mov
xchg
cmp
lret
or
movsl
sbb
push
push
arpl
inc
dec
dec
stos
mov
jecxz
sbb
clc
adc
pop
dec
stos
xor
icebp
inc
jg
xchg
push
jle
lock
sahf
jnp
insl
mov
aaa
jmp
jbe
addb
inc
push
and
sahf
adc
xlat
xorl
jecxz
mov
loopne
or
leave
xor
push
ja
mov
sub
mov
sub
icebp
sub
mov
mov
and
add
xor
shr
into
mov
pop
lret
loop
mov
adc
jg
dec
sub
sbb
shlb
mov
mov
xlat
or
out
push
cmp
lods
jp
adc
or
jb
call
neg
and
fs
sbbb
push
fidivrl
test
adc
in
push
movsl
test
xchg
bound
loope
adc
popl
into
xchg
in
arpl
push
sbb
cmc
sub
psubsb
xchg
jge
xchg
mov
sbb
imul
jne
leave
jg
wbinvd
xor
mov
push
mov
xchg
mov
loopne
sbb
adc
test
mov
jl
or
stos
push
ret
cmpb
notl
or
cli
cmp
or
xchg
sbb
scas
enter
pop
ss
out
adc
adc
and
pop
fmulp
sub
mov
mov
mov
jb
test
lea
mov
shlb
dec
cmp
push
xor
add
mov
addb
or
lcall
imul
jmp
out
add
outsl
jae
add
ja
jb
and
cmp
daa
lea
mov
sub
xor
inc
inc
dec
loopne
testb
or
into
jbe
mov
and
lods
cmc
dec
imul
lret
mov
xchg
lods
add
ja
add
scas
mov
outsb
add
push
fstl
gs
ja
lahf
lods
in
cmpsb
insl
pop
pop
or
imulb
mov
adc
sbb
add
push
fstp
cmp
mov
dec
jne
fcmovne
inc
test
packsswb
stos
cmp
mov
cmp
bound
loopne
and
mov
shlb
and
mov
push
in
inc
pusha
stc
pop
loope
cwtl
mov
ds
negb
cwtl
adc
or
or
cwtl
outsl
dec
jbe
and
mov
jg
adc
mov
notb
lcall
js
xchg
scas
xchg
fmuls
iret
cmp
out
inc
daa
rol
int
push
mov
mov
icebp
jecxz
sbb
scas
scas
mov
or
ljmp
movsb
mov
sub
mov
lcall
xchg
add
or
mov
cmp
xchg
aad
and
jle
fs
ficomps
hlt
dec
aam
mov
mov
dec
aam
ret
enter
xchg
cmp
jns
xor
emms
dec
pop
jbe
loopne
repz
idivb
js
icebp
xor
addr16
inc
dec
rcrb
jecxz
push
aas
andb
and
pop
mov
das
test
fsubrs
imul
xchg
repnz
imul
pop
sbb
dec
out
add
leave
sti
call
imul
pop
cmpsb
insb
loope
mov
push
fcomps
scas
xchg
sahf
mov
mov
mov
mov
les
push
sar
mov
inc
int
jae
sub
cld
negb
pop
js
sub
add
lock
jbe
mov
and
sub
shl
sarl
test
push
mov
lods
mov
cmp
loopne
ret
sti
dec
push
cmp
xchg
jo
call
pop
ret
lock
push
jbe
dec
loope
and
cltd
mov
js
dec
cmp
aam
dec
lods
and
adc
add
or
mov
lods
shl
fnstsw
adcl
scas
ret
aad
incl
cltd
xchg
lcall
mov
mov
in
inc
flds
loop
scas
out
adcb
push
cmc
sbb
stos
lcall
or
jg
cmpsl
mov
push
out
push
cltd
mov
inc
nop
dec
aam
mov
xorb
mov
and
push
aas
adc
popf
insl
subb
testl
in
loopne
repnz
fdivrl
jns
bnd
mov
pusha
mov
pusha
mov
fisubl
xor
inc
fstpt
stc
aad
mov
push
xor
mov
outsl
repz
or
subl
mov
mov
sti
pop
cmp
pop
adc
cmpsb
daa
cmp
mov
pop
je
mov
shrb
fs
jae
ljmp
jl
out
adc
sarl
scas
enter
inc
jg
cmovo
dec
mov
mov
dec
in
push
out
jecxz
bound
movsl
mov
or
sub
pop
rorb
cmp
ds
imul
outsb
and
xor
fcoml
inc
pop
jg
mov
imul
out
inc
rol
pop
lock
inc
xor
push
aaa
adc
push
iret
push
aam
inc
xor
xor
dec
fistl
push
push
sub
push
xchg
jle
pop
add
push
add
xchg
push
hlt
lahf
pop
int
push
shr
xchg
loope
imul
sub
rcrb
bound
sbb
out
pushf
rorb
or
je
pop
adc
sbb
lods
dec
or
daa
cli
xchg
aam
jl
pop
sbbb
mov
sbb
outsl
ds
fstps
push
push
mov
mov
add
out
mov
sbb
or
jl
jmp
ds
aaa
daa
dec
dec
imul
push
jmp
iret
add
or
pop
pop
dec
lahf
lods
cltd
imul
or
adc
xor
pop
mov
dec
xchg
cmp
sub
fdivrs
sarb
lahf
fs
push
rclb
ja
in
int
aad
jmp
addb
push
jnp
fwait
lahf
js
push
movsl
in
jl
sbb
xor
and
add
addr16
rcr
mov
xor
xchg
sub
xor
mov
lret
sbb
popl
call
push
arpl
outsl
in
loope
pushl
aas
testb
out
push
xlat
jne
out
push
test
sbb
outsl
fcom
repz
imul
push
je
lods
mov
sahf
imul
lods
push
sub
or
pop
ret
sub
pop
jne
mov
rcrl
in
pop
lock
sub
inc
ljmp
cmc
ret
dec
ss
add
gs
inc
loope
push
jg
xchg
leave
out
and
cmpsb
mov
xor
pop
mov
jb
mov
int3
pop
jl
rol
adc
and
nop
cmpsb
xlat
sbb
cmp
movsb
rol
mov
push
jmp
jno
addr16
mov
pop
inc
stc
push
inc
mov
inc
ret
push
push
xchg
lcall
ss
jnp
adc
mov
stos
imul
mov
fdivrp
xor
pop
fisttps
adc
inc
std
nop
sahf
sub
adc
dec
xor
push
sbbl
ja
jmp
loop
das
mov
sbb
xor
cmp
add
jmp
or
outsb
push
mov
test
cwtl
xchg
pushf
orb
mov
xor
jl
fwait
cmp
sbb
mov
xlat
mov
mov
push
into
test
in
xchg
cmpsb
or
cs
mov
scas
insl
mov
movsl
cmp
imul
data16
or
call
cmp
xchg
outsl
stc
mov
ds
push
mov
mov
fdiv
jmp
push
in
imulb
mov
mov
cli
fisttpll
add
pop
mov
je
scas
sbb
push
inc
lea
les
xchg
loope
fdivrp
xor
pushl
jno
cmpsl
xchg
lea
daa
aam
mov
mov
push
maxps
mov
ja
xor
mov
stos
pushf
stos
and
daa
roll
repnz
into
fwait
inc
adc
jns
xlat
into
push
add
clc
mov
and
or
popa
mov
xor
xchg
sub
inc
jne
cmp
push
mov
mov
test
mov
dec
cmpsl
xor
push
cmc
roll
mov
xor
and
pop
push
xchg
push
lods
lods
xor
lods
cld
sbb
pop
or
mov
xchg
fstp
mov
jnp
or
lds
mov
in
cmp
cs
rorl
out
pop
aam
sbbl
faddp
leave
cmp
fnsave
xchg
push
lcall
fs
outsb
jp
popf
inc
add
adc
pop
sub
stc
and
dec
mov
js
sbb
ja
incb
jnp
movsb
popf
daa
enter
into
sub
nop
or
ljmp
cmpsl
inc
adc
push
mov
sbb
sbbl
push
out
mov
pusha
mov
insl
loopne
inc
nop
adc
xlat
imul
fiaddl
mov
jecxz
mov
and
js
lret
es
addr16
int
push
xor
test
lock
add
and
int3
fnsave
and
push
jecxz
stos
and
out
adc
pop
pusha
cs
push
daa
ret
movsb
testb
mov
cli
sbb
or
ficomps
aam
loope
mov
repz
xchg
xor
stos
xor
and
lcall
xor
sti
add
jmp
lea
pop
lds
je
cmc
or
mov
gs
xlat
fdivrs
adc
ja
xor
in
testl
or
cmp
inc
int3
jmp
stos
xchg
sbb
mov
cmpsl
xchg
adc
jmp
addb
outsl
dec
xor
dec
loop
add
sbb
mov
pop
push
cmp
pushf
repz
cmpsb
ss
adc
call
mov
inc
dec
inc
test
leave
sub
sahf
push
out
repz
xchg
insl
imul
mov
xor
adc
pushf
addr16
jns
aas
jle
pop
out
mov
xor
and
xchg
push
lea
mov
jns
aam
mov
test
sub
negl
ljmp
lods
mov
sbb
repnz
mov
lahf
mov
sub
mov
js
scas
jns
pop
icebp
das
mov
adc
js
jl
stos
adc
cmpsb
xchg
dec
push
ljmp
pop
fs
cmp
loope
inc
mov
in
fs
mov
dec
xor
sbb
dec
sti
fucom
jl
mov
addb
movsb
xorl
inc
jg
inc
fcoml
nop
clc
add
jl
aam
das
test
lock
js
xchg
adc
fcomip
rorl
inc
add
mov
mov
cmpsb
insb
out
sbb
xlat
lcall
stc
xchg
sub
lock
jno
cli
je
mov
mov
lds
xchg
push
out
sub
push
pop
pop
xchg
mov
push
ljmp
jb
jae
sub
xor
fists
pop
mov
popf
or
cwtl
mov
or
sub
mov
xchg
mov
data16
test
in
mov
aam
xchg
imul
sbb
out
xor
aam
jns
cmp
in
dec
mov
mov
rclb
cmp
into
push
div
push
ja
outsb
test
add
xchg
pop
lds
or
test
or
jmp
stos
mov
daa
pop
into
movl
cwtl
add
mov
hlt
ror
repz
or
jmp
mov
pop
icebp
xorl
mov
push
xchg
test
and
jno
lea
cli
jne
jnp
lock
pusha
xor
fidivrl
mov
insb
in
xorl
xor
pushf
mull
fwait
out
sahf
pop
sub
mov
jns
testb
push
pushf
jge,pn
addr16
jno
jne
add
pop
repnz
lock
hlt
add
outsb
mov
addr16
sbb
or
lahf
movb
out
pop
dec
or
leave
insl
lahf
mov
sub
jns
aaa
fs
ret
in
add
push
xor
adc
mov
mov
imul
cmp
jns
je
xchg
and
jae
cmp
or
pop
mov
ja
gs
adc
inc
stos
push
and
movsb
pop
xchg
push
out
jne
xchg
mov
inc
pop
jnp
jns
sub
mov
push
nop
fwait
sub
lds
xchg
leave
jb
shr
pop
or
xor
in
push
shrd
popf
leave
inc
mov
cwtl
mov
xor
and
mov
fisttps
and
fwait
pop
mov
and
testl
shrb
int
mov
and
or
cmpsl
sbb
test
test
mov
ja
iret
movsb
addb
mov
jg
dec
fwait
orl
push
test
jne
jno
aas
inc
xor
rcrl
test
adc
repz
stc
out
rcrb
mul
jg
sbb
xor
popa
inc
cld
or
hlt
adc
adc
mov
push
mov
push
iret
nop
cmp
push
inc
pop
faddl
cltd
push
adc
and
inc
xchg
fwait
aaa
pop
jae
pusha
ja
out
mov
inc
sahf
xchg
pop
repz
aad
jmp
xchg
pop
aam
aad
push
loopne
add
addr16
ljmp
sub
insl
shl
mov
pop
enter
cmp
inc
scas
jmp
sub
std
push
mov
or
mov
add
xchg
stc
out
in
push
cld
cltd
fwait
jmp
xor
stc
xor
xchg
or
and
mov
or
gs
cmova
ljmp
scas
inc
mov
movsl
adc
xlat
popa
lret
out
repz
scas
push
push
leave
and
mov
call
mov
mov
dec
mov
das
sbbl
xchg
xchg
xchg
adc
pushf
inc
fidivrs
mov
mov
dec
js
lock
push
xchg
inc
leave
lds
mov
sbb
dec
xchg
lods
push
lcall
add
add
xchg
fbld
mov
jb
mov
sbb
mov
pop
in
mov
faddl
rcrl
dec
push
loopne
adc
loop
or
push
fdiv
xchg
mov
push
fnstsw
pop
rcl
repz
sbb
dec
scas
mov
pop
fidivrs
mov
data16
test
pop
or
mov
or
and
lea
enter
mov
enter
popf
push
jbe
outsb
cld
pop
jg
adc
dec
adc
jns
mov
fdivrp
ficoml
mov
mov
and
insl
push
inc
mov
cmp
mov
nop
lret
mov
scas
cs
test
mov
add
aas
cwtd
mov
pusha
dec
push
cs
cmp
mov
mov
cmc
pop
mov
xor
ja
fmuls
out
or
xor
inc
and
jp
ret
mov
mov
mov
jl
ret
lret
push
cmp
mov
jo
setle
test
push
sub
out
jae
shlb
std
fmul
movsl
insl
xor
es
mov
push
mov
pushf
in
subb
or
loop
stos
pop
sub
in
test
fst
inc
cli
lcall
lret
loopne
pop
adc
stos
popl
aas
push
int
ret
cmp
das
je
mov
das
add
loop
loopne
mov
xchg
in
adc
movsl
sub
mul
push
mov
mov
pop
data16
jl,pn
sbb
out
xchg
push
xor
dec
sub
lahf
mov
stc
xorl
sbb
and
jne
sub
fldl
adc
incl
jnp
fidivs
scas
xchg
inc
dec
dec
cmp
out
adc
jge
cmp
add
pop
inc
into
das
insl
outsb
scas
scas
sbb
es
sarl
cltd
leave
jle
pop
push
inc
and
and
or
cmp
mov
mov
roll
int3
daa
mov
sub
mov
ss
sub
dec
sbb
ljmp
pop
mov
mov
fistps
into
lea
test
sbb
and
shll
std
les
dec
xchg
scas
lahf
mov
int3
lock
mov
imul
pop
xchg
push
pop
or
and
xchg
lea
das
xlat
dec
jp
mov
jle
mov
cmp
addr16
data16
scas
xor
and
and
in
sbb
mov
lahf
mov
out
lods
lods
xchg
ret
scas
xlat
enter
fistpll
data16
aad
and
bound
cltd
testl
filds
jbe
dec
pop
ret
push
test
cmp
fisubl
sarb
pop
inc
cmpsl
cmpsb
dec
push
jle
fisubrl
out
out
pop
xchg
loope
xchg
popl
loop
loope
cmp
jmp
je
sub
stos
push
adc
sub
adcl
arpl
mov
out
stos
test
and
and
std
inc
mov
in
add
hlt
cmp
jb
push
inc
pop
mov
cld
out
jnp
pop
out
sbb
popa
or
test
mov
sub
xchg
mov
xchg
outsl
call
stos
movsl
pop
cmpsb
add
pop
aaa
clc
fcoms
arpl
and
xorl
cmp
pop
push
out
sarl
mov
packssdw
inc
pop
shll
pop
sub
jae
jbe
pop
push
gs
or
rcrl
int3
pop
lret
test
pop
add
cld
popa
mov
rcrl
aad
sbbl
insl
or
push
hlt
pop
jne
dec
dec
xchg
sbb
ja
push
xor
movsb
ja
stos
popa
pop
aas
cmpsb
ror
stos
mov
and
mov
in
test
addb
pop
sbb
les
jb
jo
or
cmp
xchg
push
iret
icebp
jae
mov
fcomps
cmp
filds
and
mov
insb
in
shrb
sysenter
mov
mov
inc
lods
test
fdivrl
push
jmp
push
sub
sub
rcll
mov
xchg
cmp
mov
loop
das
fst
pop
mov
cmp
push
sbb
dec
cld
sbb
xchg
cs
mov
mov
aam
in
pop
add
add
pushf
xchg
inc
and
mov
xchg
mov
sbb
push
leave
jb
pcmpgtd
push
stos
jmp
pop
clc
test
mov
icebp
pop
xor
scas
lock
inc
dec
mov
lret
push
lea
inc
iret
and
ja
mov
lock
jb
faddp
sahf
xchg
pop
test
xcrypt-ecb
pop
cli
inc
test
pop
or
fnstsw
and
xchg
cmp
mov
negl
stos
idiv
or
cmp
or
aas
aaa
cmp
mov
and
sbb
ret
sbb
xlat
push
xchg
push
fidivrs
or
insl
mov
fstpt
lods
adc
cmp
in
test
ljmp
je
jne
in
inc
mov
push
jmp
lock
cmp
sbb
mov
xor
sbb
sub
cli
jnp
dec
pop
bound
daa
andb
push
pusha
push
push
pop
add
xlat
xor
frstor
adc
sbb
add
sbb
push
push
cltd
ss
sbb
stos
mov
mov
xchg
aas
call
cmpsl
inc
and
jno
ret
frstor
xchg
inc
in
mov
and
lock
jmp
xchg
pop
ja
jb
push
hlt
outsb
adc
xor
data16
dec
dec
cmpsb
xchg
jg
call
add
add
xchg
ret
push
mov
xlat
and
pop
jne
shlb
xchg
shl
push
sub
jle
push
mov
push
fisubs
fwait
add
shlb
jo
or
add
sub
addb
inc
xor
shrb
mov
scas
mov
test
cmp
loop
in
loopne
ds
sub
imul
push
add
lods
push
out
sahf
sbb
dec
popa
fisubl
iret
push
fsubl
jmp
sbb
leave
in
pushf
arpl
xchg
fdivs
xor
imul
out
dec
insl
pushf
push
sbbb
dec
sub
cmp
dec
pop
out
mov
shll
cmp
jg
flds
cmp
clc
or
add
mov
notb
pop
xchg
ret
push
lods
lret
dec
jbe
int
test
popf
sbb
hlt
data16
and
cmpsb
int
mov
cmp
and
addr16
lock
jns
mov
gs
sbb
cmpsl
push
lret
mov
out
mov
mov
add
loope
mov
repz
mov
pmulhw
and
fwait
mov
fidivrl
sbb
sub
lret
bound
rcrb
arpl
les
imul
and
out
cmp
mov
ret
sub
cmp
push
jne
cmp
push
mov
and
cli
jge
movsl
or
jmp
mov
fstpl
in
pusha
mov
pop
call
sarb
mov
loop
lods
mov
cmc
mov
arpl
mov
iret
or
jmp
cmp
cmp
or
pop
lock
aaa
rorb
xor
imul
xlat
dec
dec
mov
rclb
mov
movmskps
lods
repz
movsb
mov
xchg
ret
jmp
dec
andl
add
jmp
gs
es
dec
pusha
or
scas
add
mov
stos
cmpsb
call
aad
pop
jne
cmp
pushf
dec
push
insl
sub
xchg
call
decl
les
mov
adc
outsl
rcll
rcrb
or
rcr
jg
out
xor
dec
sbb
add
sub
es
cmp
pop
or
inc
test
jle
push
iret
pop
stos
insb
nop
mov
xor
insb
dec
rcl
out
fstps
xor
mov
or
pop
inc
cmp
jge
ret
sahf
mov
out
xor
jmp
rcll
imul
push
push
mov
pop
into
mov
sub
xor
xor
les
pop
mov
sti
loopne
or
subb
dec
mov
cmp
adc
cltd
shrl
icebp
insl
insb
nop
push
sbb
imull
and
adc
mov
sub
dec
insl
push
adc
mov
aas
addr16
cmpsb
push
mov
push
mov
inc
cs
ljmp
jecxz
js
out
fmull
xchg
fistpl
jne
jns
or
mov
sub
jns
test
adc
pop
rcrl
ds
pusha
lcall
push
mov
dec
orl
jae
xchg
cld
cld
mov
dec
lods
push
fptan
inc
mov
sub
enter
cmp
pusha
pop
push
add
out
rolb
adc
dec
testl
rorb
jl
xor
cmp
aaa
aaa
stc
cmpl
dec
mov
mov
mov
xchg
lcall
leave
subb
call
push
cmp
daa
cmpsl
add
daa
fdivs
dec
js
scas
adc
xchg
ja
std
mov
rolb
jmp
nop
sub
xchg
fdivs
xchg
mov
jmp
imul
xchg
or
je
scas
leave
cmpsb
and
loop
cmp
and
out
icebp
outsb
mov
push
mov
pop
add
ds
xor
lahf
xlat
push
jbe
adc
mov
inc
rclb
pop
cmp
scas
adc
or
sub
jae
mov
jle
out
xor
cli
out
push
aad
push
xchg
adc
aas
jl
and
enter
lcall
or
sahf
es
test
jo
xchg
jl
out
push
int3
fwait
data16
fstl
cmp
ss
xor
jmp
sti
push
sahf
or
mov
push
push
xor
jp
lcall
repz
pop
pop
test
insl
mov
cli
push
js,pt
loop
mov
es
add
pop
fdivl
add
cmp
lock
and
push
aaa
ds
push
jmp
insl
hlt
mov
push
pushf
pop
aaa
adc
push
and
mov
ds
push
jo
or
in
cltd
fsub
hlt
rcrl
inc
std
cmovne
ss
lock
fs
add
test
outsb
sub
mov
cmc
jae
fcompl
pop
aas
adc
andl
xchg
cmp
lret
pop
push
inc
ja
xor
pop
jbe
call
xchg
mov
xchg
nop
jbe
pop
xchg
mov
jmp
icebp
jo
pop
push
sbb
aam
cmpb
cli
pushf
jle
xchg
ss
dec
cmp
mov
fnsave
fnsave
push
pop
test
sub
mov
daa
sbb
scas
sub
push
in
testb
bound
call
inc
sahf
or
mov
pusha
adc
pop
pop
imul
sbb
clc
repz
jl
adc
data16
fsubrl
inc
jnp
xchg
pop
xchg
sub
inc
pop
or
scas
pushl
pushf
adc
cltd
int
mov
xor
shll
cmp
dec
mov
cmp
fcoml
xor
addb
mov
enter
test
scas
sub
xor
data16
icebp
popf
fwait
xchg
hlt
xchg
ds
add
jp
popa
jmp
xchg
push
push
jns
mov
push
xlat
cmpsb
sti
and
push
jg
sub
loopne
movsb
cmp
ss
ljmp
sbb
enter
insl
xchg
adcb
adc
and
out
xor
adc
fiadds
add
bound
in
xchg
add
daa
cld
sub
pusha
rcll
nop
pop
or
mov
insl
mov
daa
ljmp
jp
inc
sar
cli
in
test
sahf
push
sbb
in
pop
push
inc
stos
mov
xchg
sub
rcrl
dec
jae
fcompl
cmpsl
dec
orl
popf
jbe
fistpll
inc
pop
mov
fstps
scas
into
in
ret
scas
or
subb
inc
pop
je
std
ljmp
mov
jnp
dec
subl
jmp
adc
in
xchg
sub
fs
fisubrs
stos
push
loope
out
sub
and
mov
call
aaa
popa
mov
insb
out
in
xchg
int3
fs
scas
pop
orl
lret
movsl
daa
xchg
mov
mov
movsb
mov
loopne
or
loop
and
pop
ja
push
cmp
mov
ss
dec
push
clc
sbbl
dec
fbstp
cmp
push
xlat
cld
ljmp
lret
inc
lds
leave
xor
adc
icebp
call
jl
mov
or
lcall
pop
cmp
mov
xchg
cwtl
sub
adc
lods
push
sbb
fcmovu
and
xchg
fdivrs
mov
mov
ds
push
adc
sub
test
insb
jmp
or
sti
mov
xorl
lea
dec
and
call
outsb
add
pop
dec
repz
xor
fdivs
in
out
mov
jecxz
pop
stc
jp
inc
pop
les
dec
xor
inc
outsl
mov
aas
mov
flds
call
mov
xchg
lds
add
loop
fisttpl
roll
out
mov
add
sub
lods
sti
or
jle
sbb
test
push
cli
or
cmp
dec
inc
sbb
xchg
inc
jecxz
dec
pop
xor
sbb
aad
sar
test
shr
notb
dec
cmp
addb
dec
loop
and
dec
cs
push
aas
mov
in
andl
cmpsl
jl
adc
sbb
fbstp
aas
sub
lods
and
xchg
sub
ret
lds
inc
add
enter
outsb
es
cld
cmc
jmp
push
or
dec
aam
mov
cli
cmp
jnp
mov
xchg
sti
icebp
sbb
xor
mov
sbb
pop
imul
pop
jne
sbb
stos
cmp
sub
imul
daa
icebp
push
jae
jmp
ud0
adc
hlt
lods
sub
jne
hlt
ss
pop
and
add
xor
loop
pop
insb
std
lea
xchg
sub
ljmp
mov
shr
mov
loop
in
movsl
push
xorl
jmp
pushf
jmp
fcompl
sub
into
out
sbb
inc
jb
mov
or
pop
xchg
pop
xor
pop
push
rcrl
outsb
pop
fldl
test
shr
pop
movsb
sub
jl
xorl
push
jno
pop
outsl
cltd
les
cmp
mov
pop
cmpsl
xchg
shlb
pop
movsl
add
into
cmp
push
lock
mov
addr16
sbb
test
repnz
mov
test
lret
jecxz
loop
adc
js
or
jne
lahf
adc
xchg
fidivrs
movsl
lods
jnp
bound
xchg
xor
jb
push
cli
push
outsb
sub
fistpl
insb
fdivp
mov
std
xor
and
loope
imul
mov
repnz
sbb
shr
mov
daa
jne
push
push
lcall
cmp
rcll
movsl
inc
mov
dec
add
int
cli
insb
nop
movb
cmpsl
insl
push
sbb
push
push
xchg
jns
lret
mov
loope
dec
sbb
push
notl
mov
push
inc
xchg
and
and
and
test
sub
movsb
sub
mov
jnp
rcl
pop
push
cmc
js
push
cmp
sbbb
mov
aas
xchg
and
pop
mov
jmp
and
jno
fwait
mov
imul
aad
jg
dec
mov
jmp
jg
lret
sub
movl
repz
and
cmp
mov
mov
sub
dec
bound
and
lret
sbb
movsl
dec
mov
sti
lcall
sti
loope
subl
xchg
push
jnp
ja
pop
xor
bound
gs
sub
or
and
dec
es
push
mov
adc
cmp
fimull
xchg
loope
xor
cld
in
add
add
dec
mov
xchg
jp
je
pop
jg
pop
mov
test
xlat
xchg
std
int3
out
das
ja
cmp
dec
stos
shrb
scas
xchg
dec
mov
or
ljmp
iret
mov
mov
push
mov
inc
mov
stos
imul
and
dec
mov
jg
icebp
stos
add
btr
jmp
add
push
sub
xchg
fwait
movups
mov
xor
call
push
or
mov
stos
mov
mov
dec
push
and
mov
xchg
mov
sahf
pop
jno
push
dec
add
ljmp
les
arpl
in
out
cli
test
inc
fisttpll
cmp
dec
sub
jns
cs
or
aas
es
pushf
inc
fucomip
jge
rcrl
cli
fnstcw
sub
into
pusha
jmp
rcrb
xchg
daa
or
enter
jecxz
add
repnz
jo
sahf
inc
cmp
cmpsl
inc
pop
popa
sub
ret
jne
mov
sbb
and
cmp
rorl
mov
dec
cli
cmp
sar
cmp
cmp
cltd
cmp
push
jecxz
push
pushf
ljmp
dec
push
leave
aas
cmp
push
out
xchg
fildl
shl
jbe
fucomip
divl
and
pop
adc
and
jmp
jbe
pusha
addr16
mov
sbb
or
push
push
fwait
xlat
add
sti
insb
inc
addb
mov
cmp
adc
gs
loopne
pop
sub
mov
subb
mov
xchg
jge
loope
inc
pop
inc
push
scas
pop
out
test
mov
push
scas
ljmp
addr16
shrb
leave
mov
iret
adc
adc
mov
inc
add
add
mov
loop
dec
je
xchg
shrb
and
js
popf
loop
cmpsb
repz
in
call
bound
aam
dec
mov
mov
dec
stos
cwtl
mov
or
push
sar
bound
in
sbb
movsb
dec
movsb
mov
test
jno
mov
ficoml
add
or
inc
inc
cmp
sub
mov
roll
cltd
shrl
adc
sub
fldcw
add
cmp
mov
pop
xor
inc
jp
fwait
xor
dec
cld
fwait
pop
ja
inc
xchg
push
sarl
and
aaa
dec
push
xchg
daa
test
sbb
push
mov
lods
clc
fisubrs
inc
rcl
cltd
mov
out
arpl
jmp
aaa
pop
xchg
test
imul
and
xor
mov
adc
push
xchg
xchg
into
mov
adcb
arpl
loope
jmp
xor
dec
lea
xor
add
repz
daa
add
out
mov
outsb
adc
sarb
and
std
test
addr16
jp
mov
fnsave
repz
xchg
outsl
fidivrs
shrb
call
pop
ja
mov
ds
lock
sbb
sbb
lea
cli
pusha
add
jg
clc
movsl
mov
sub
dec
fsubl
mov
jg
cmp
mov
nop
aad
push
scas
repnz
jno
mov
jg
dec
das
popa
lcall
adc
dec
aaa
cmpsb
add
or
daa
test
repz
adc
aam
fsubs
aaa
movsl
pop
jbe
test
stos
jge
mov
jp
int
xor
jge
mov
out
xor
push
sahf
pop
cmp
loopne
jne
adc
adc
jnp
int
xchg
push
adc
mov
sti
lods
jp
in
inc
sub
jmp
gs
or
scas
inc
mov
cmp
and
mov
jge
add
sbb
mov
or
xchg
filds
push
push
pop
adc
pop
lahf
cli
dec
outsl
jmp
xor
aaa
lahf
lret
add
shlb
je
lock
pop
js
test
fdivl
cmp
bound
mov
pavgb
push
sbb
push
sub
push
loopne
adcl
xchg
pusha
sbb
leave
jns
xchg
push
cmp
ret
push
mov
daa
repz
insl
decb
sbb
sbb
gs
cmp
add
fwait
scas
push
cmc
jge
inc
cmp
fwait
pop
and
in
xchg
jp
push
lods
mov
adc
push
xchg
sbbb
fldt
sub
repnz
jno
les
sbb
add
arpl
jbe
insb
pop
or
jecxz
xchg
pop
pop
push
mov
push
xor
cltd
pushl
scas
popf
adc
pop
gs
pusha
xchg
sub
fbld
mov
iret
jnp
insl
dec
ljmp
sbb
add
into
push
add
pop
pop
push
xor
das
into
xchg
movsb
stos
sbb
xchg
std
hlt
jg
aad
imul
mov
cwtl
xor
add
popa
mov
xchg
negl
in
jnp
mov
push
add
inc
pop
out
jb
aaa
inc
into
jle
lret
push
sarb
push
inc
xor
cmp
push
or
std
rcr
sbb
xchg
adc
outsl
push
pop
pop
cmp
ret
add
push
fwait
dec
cmp
mov
xor
sub
popw
ljmp
leave
push
or
xchg
inc
ja
divb
pop
dec
shlb
enter
jns
add
push
stos
in
jmp
push
fadd
loop
jge
in
push
mov
out
outsl
clc
das
ja
xchg
in
icebp
dec
pop
adc
sub
or
imul
mov
push
and
pop
cmc
and
pusha
ss
popa
sbb
rorl
push
sbb
lret
mov
mov
add
xlat
js
scas
dec
inc
daa
sbb
inc
dec
add
adc
push
inc
lock
daa
lock
lods
cmp
mov
mov
rcr
mov
gs
jo
push
std
je
sbb
push
lret
mov
dec
call
andb
pop
out
gs
clc
inc
dec
or
push
push
dec
popa
push
xor
ljmp
mov
mov
std
mov
cmp
sub
jns
in
aad
push
adc
icebp
sbb
mov
mov
test
jecxz
ds
or
sub
fidivrs
es
pop
jb
xor
inc
dec
jnp
ds
inc
idivl
loope
sahf
dec
mov
lock
repz
outsb
rcrb
pusha
lret
xorl
push
lea
sbb
pop
leave
dec
add
mov
mov
sbb
pop
subl
int3
out
xchg
inc
inc
dec
es
inc
push
adc
nop
leave
or
icebp
mov
arpl
js
add
in
leave
add
scas
outsl
enter
sti
push
cmc
in
adc
push
in
and
cltd
out
xor
and
lea
dec
jg
adc
cld
les
adc
std
cmc
xor
inc
rsm
inc
xchg
out
mov
mov
out
leave
xor
mov
je
mov
pop
mov
or
jbe
imul
mov
add
pop
out
bound
xor
ljmp
mov
lret
mov
dec
mov
mov
test
lret
fsts
shll
imul
adc
jne
dec
sub
mov
mov
jecxz
and
jp
fs
lods
inc
sbb
dec
fisttpl
fldt
lret
add
or
in
pop
scas
jmp
nop
insb
mov
iret
out
add
out
sbbb
movsb
test
mov
adc
cmp
pop
push
dec
xchg
or
outsb
repnz
testl
outsb
cmp
push
lcall
inc
lcall
scas
scas
stos
fwait
pop
out
icebp
ret
outsb
fists
jmp
cmp
mov
and
leave
popf
mov
sahf
push
inc
in
out
and
jns
pusha
mov
loop,pn
popa
sbb
pushf
or
push
mov
in
sub
inc
lods
sub
adc
dec
xor
mov
xor
adc
dec
mov
mov
lcall
sub
or
fwait
adc
xchg
sub
idiv
dec
or
cmpsl
lea
mov
xor
loopne
js
inc
or
pop
push
fisttpl
out
adc
sarl
push
femms
inc
mov
enter
push
je
pop
incb
mov
and
stc
dec
or
cmpb
adc
addl
ret
lahf
adc
inc
push
aas
mov
mov
sahf
movsl
repz
fisubl
mov
sbb
lods
cltd
pop
insb
ja
push
jg
mov
int3
cmp
dec
sub
repnz
push
insb
and
push
leave
cmp
push
fnsave
je
cmpsl
enter
jb
test
pop
adc
out
xorb
xor
cli
jbe
xor
mov
push
outsb
mov
rcll
ljmp
mov
dec
lock
push
or
push
aaa
and
xchg
js
jge
lahf
add
dec
dec
jl
dec
les
jp
nop
mov
fxam
dec
lock
ds
xor
test
inc
sahf
pop
fisubrs
fdivrl
imul
adc
test
and
xor
inc
pop
jne
popa
adc
shl
or
out
add
int
pop
je
sbb
pop
xor
pop
jp
sahf
out
mov
icebp
push
fcmovnb
iret
adc
add
int
in
jmp
stos
cmp
push
lahf
push
cmp
mov
std
nop
repz
and
sbb
xorl
cmp
cltd
notb
inc
movsb
insl
in
daa
add
inc
xchg
sbb
inc
int3
mov
xchg
lods
push
mov
fisttpll
sub
mov
mov
adc
stc
aam
jb
sub
lock
in
test
adc
int3
push
pusha
push
fidivrs
mov
jb
les
stos
rcll
add
int
add
es
leave
lret
repz
mov
mov
cmc
xor
das
rcrb
cmpsl
add
jge
push
data16
js
mov
xchg
in
mov
sub
sbb
ficoms
int
cmpsb
popa
icebp
or
mov
clc
add
sbb
mov
pop
xchg
cmp
mov
xor
xor
rcll
push
xor
xor
js
sar
in
stos
pop
sbb
movsl
call
pusha
mov
std
jae
jg
ja
in
outsb
dec
fsubrs
or
out
ret
sbb
aad
cmp
imul
xchg
fxch
fwait
out
pop
pop
push
pandn
mov
lds
dec
cmp
ret
jno
stos
xchg
and
fstpt
cmp
repz
daa
fdivr
frstpm(287
leave
lret
sub
into
fdivrl
ficomps
rorl
lock
or
div
cmp
inc
arpl
mov
mov
jg
popf
mov
pop
add
jl
fdivrp
mov
movsl
pop
ret
cmpsl
ljmp
aad
cs
push
adc
lock
mov
xor
and
fisttpl
mov
fdivrs
int
inc
cmp
xor
addr16
lret
jns
jne
sahf
icebp
xchg
add
popf
add
fistpll
test
out
int
pop
mov
add
xor
mov
mov
and
or
sbb
adc
repz
inc
mov
push
jb
mov
mov
push
mov
xchg
ret
rep
clc
and
adc
jge
cmp
fistl
mov
repz
sbb
push
mov
cmp
cmp
pop
push
enter
lret
pop
sbb
test
lcall
enter
and
dec
push
mov
xor
jno
test
in
orb
movsb
scas
sbb
mov
pop
aad
jmp
push
xorb
dec
cmp
inc
mov
jg
jle
popf
lock
ja
scas
jbe
or
jle,pn
ljmp
push
std
mov
rcrb
or
aaa
and
ds
sti
mov
rorb
mov
out
movsl
and
rorl
dec
scas
add
cmp
xchg
aas
add
mov
inc
pop
push
pop
sub
out
adc
mov
mov
mov
xor
push
outsb
popf
fwait
rcll
jnp
xlat
test
movsb
enter
daa
fstpl
roll
hlt
sub
aam
je
xchg
xor
into
mov
push
jne
insl
cmp
dec
push
test
push
ja
pop
jnp
jo
lcall
xchg
sti
xchg
jecxz
pop
mov
test
cmpsl
mov
stos
sub
jb
xchg
pop
cmp
mov
ja
pop
cmpsl
rorb
es
test
add
adc
sub
cmp
pusha
aam
fcompl
jmp
pop
popa
sahf
aad
or
push
mov
pop
adc
hlt
push
inc
push
stc
push
mov
cld
dec
xchg
aas
daa
imul
push
jg
cmc
fbstp
aas
cmp
xchg
inc
popa
lret
cmpsb
scas
sahf
add
xor
scas
test
xor
push
pop
add
sbb
mov
stos
xchg
mov
xchg
lods
testb
or
mov
push
add
fadds
inc
mov
xor
add
inc
idivl
inc
in
jmp
stos
fsub
and
pop
pop
arpl
out
gs
lahf
add
subb
mov
inc
loopne
inc
pop
sub
add
xchg
push
mov
mov
push
sub
push
jp
scas
loope
push
jnp
sub
adc
dec
pop
dec
pop
add
in
mov
mov
xor
mov
push
sub
cmp
dec
in
mov
ret
movsb
rorl
popf
add
pop
cs
jbe
shl
sub
sub
mov
mov
pop
pop
pop
inc
sub
jbe
jnp
pusha
jb
dec
xchg
imul
insl
nop
ss
sub
shlb
mov
jg
ja
push
xor
ret
repz
adc
mov
or
mov
mov
xor
aas
cmp
inc
inc
push
out
test
xor
dec
dec
pushf
enter
cmp
push
xor
cs
sbb
pop
rorb
call
cmp
hlt
mov
repnz
shl
fstp
inc
jmp
or
repnz
dec
xchg
in
jb
stos
pushf
mov
cwtl
fsubs
xor
adc
shlb
sub
inc
adc
xchg
lret
xorl
mov
push
bound
mov
cmp
push
call
cmc
or
arpl
mov
mov
dec
test
mov
adc
mov
clc
and
daa
bound
imul
nop
sti
jl
jae
rcll
sbb
arpl
pop
sbb
out
loopne
or
mov
popa
xor
mov
ljmp
fxtract
rcrl
iret
sbb
pop
adc
mulb
movsb
adc
movzbl
daa
scas
xchg
mov
setne
push
cs
mov
adc
fisttps
pushf
imul
jle
subl
hlt
push
out
jp
mov
mov
push
xchg
push
stos
xor
pop
mov
and
mov
sub
call
sbb
loopne
out
xchg
cltd
dec
stos
stos
xchg
sbbb
xchg
xchg
sbb
xor
inc
sub
xor
iret
mov
shrb
xchg
add
int
sbb
les
push
pop
incb
int3
test
push
jo
pop
and
cmp
fisubl
adc
fistpl
or
push
jns
xchg
dec
leave
imul
je
push
cmc
mov
data16
pop
out
lret
incl
mov
mov
shll
inc
pop
push
adc
aad
push
push
adc
ljmp
pusha
test
xchg
pop
add
popf
jb
icebp
fbld
xor
xchg
bnd
hlt
ret
in
fstl
push
daa
xchg
insl
mov
sbb
or
rcrb
mov
xor
arpl
mov
xchg
in
mov
adc
jle
nop
stos
repz
inc
addr16
lahf
jnp
rolb
jne
mov
mov
xor
jle
cmp
jecxz
iret
cs
mov
jae
pop
insl
lahf
inc
pop
sbb
lock
push
dec
cmp
ret
ficoml
and
jl
fists
pop
pop
inc
cmp
or
std
inc
cs
lods
notb
mov
push
pop
dec
movsb
sub
leave
xor
repnz
lods
mov
cmp
fcompl
imul
jbe
mov
jnp
enter
mov
and
mov
jae
mov
add
jo
sub
mov
push
movl
mov
xchg
out
mov
mov
loop
add
add
mov
mov
adc
jecxz
jmp
int3
je
xchg
aas
rcl
int
icebp
sub
fcos
push
adc
ret
leave
inc
sub
orb
lret
lret
adcb
cmp
xor
popf
mov
out
loope
push
inc
stos
or
das
int3
scas
and
and
pop
roll
fldt
and
cmpsl
aas
ficoms
aas
ret
movsl
loope
call
pusha
xor
cltd
jl
sti
out
or
scas
dec
jmp
fistpll
add
cmp
or
sti
ret
sbb
repz
jnp
int3
lods
pop
out
in
add
mov
test
clc
mov
mov
sub
cmp
insl
and
pop
bound
mov
inc
mov
popf
sub
pop
ss
push
push
dec
lea
jbe
dec
push
dec
cmp
int
xor
imul
and
or
push
pop
pop
das
xchg
stc
mov
push
in
popf
lea
inc
ret
xchg
cmpsb
aas
out
mov
pop
mov
push
in
popa
test
jo
xor
sbb
xchg
je
arpl
and
ss
cld
in
mov
lods
or
outsl
out
xchg
int
fldl2t
and
sti
add
movsl
leave
loopne
andl
loope
xchg
outsl
enter
cmp
adc
stos
xchg
sarb
xlat
pop
leave
add
xchg
ja
cwtl
ficoms
jp
cmpsl
mov
adc
ss
mov
mov
outsb
mov
rol
fs
dec
mov
push
jmp
rcrl
sti
lock
inc
ljmp
fs
int3
adc
pop
push
leave
xlat
push
jnp
dec
fwait
ds
cmp
gs
adc
inc
jecxz
xlat
nop
pushf
lods
push
lret
int
adc
and
sub
or
icebp
pop
dec
mov
movsb
fsub
push
lods
fsts
fadds
fcmovnbe
cld
inc
outsl
shl
roll
outsb
pop
push
pop
dec
pushf
xchg
jns
mov
cmp
sub
jl
mov
add
mov
sbb
ret
jne
add
or
dec
cmpsb
sub
dec
in
jb
cmp
addl
sbb
sbb
mov
adc
or
dec
push
popa
insb
jno
jo
or
jp
and
pop
idivb
jl
or
pushf
push
out
pusha
mov
xor
xchg
cmp
cmpsl
loop
xchg
push
icebp
or
add
jnp
adc
cmp
xchg
adc
int3
mov
and
pop
adc
xchg
cwtl
in
add
lea
icebp
jnp
cmp
xchg
in
pop
mov
pop
inc
call
push
cltd
cmp
in
repnz
add
xchg
jbe
movsl
push
test
pop
push
out
or
lock
push
out
popa
sub
int
add
cltd
xorb
jg
cs
ljmp
cmpsb
imull
andb
idivb
popf
ljmp
xchg
out
nop
sahf
push
jbe
inc
sub
cmp
sub
mov
push
jle
cmovns
pop
mov
add
add
sti
bound
add
rcrl
push
mov
inc
insl
jmp
fldl
mov
sbb
inc
jne
cmc
cmp
and
les
subb
sub
mov
js
inc
out
repz
add
fidivrs
lds
pop
ficomps
pop
aaa
repnz
loope
test
cltd
dec
push
cmp
cs
sti
icebp
push
ret
arpl
and
pop
andl
dec
mov
fldl
sbb
outsl
repnz
xchg
push
sub
idivl
xchg
jnp
roll
into
pop
jbe
sub
dec
fsubl
jno
push
sub
fcmovb
es
push
inc
mov
popf
lret
xorl
cwtl
cmp
inc
mov
xchg
xor
outsb
cmp
add
je
mov
mov
mov
inc
cmpsb
lahf
repnz
lock
jo
mov
xor
and
jmp
mov
pop
pushf
repz
pop
outsl
mov
jmp
dec
mov
lds
out
xor
cmp
popa
mov
or
xlat
pop
sbb
xlat
or
xchg
mov
and
mov
iret
sbb
pop
int3
sbb
jl
lgs
adc
mov
je
inc
je
xchg
shr
sub
cmp
jae
xor
dec
subl
sbb
jns
subl
mov
call
imul
push
or
sub
xlat
outsb
mov
mov
loopne
mov
sbb
push
notl
sub
into
pop
adc
mov
mov
lods
and
int
insb
pushf
rorl
arpl
not
ret
les
pop
cltd
adc
pop
sub
jmp
mov
cmpsl
bound
inc
add
mov
jnp
inc
jg
push
cmpsb
jg
outsb
jnp
jp
repnz
roll
loopne
popa
jnp,pn
jnp
add
xor
xor
cmpsl
inc
mov
out
fstpl
jmp
cmp
mov
add
sarb
movsl
aad
cmp
xchg
mulb
ret
xor
data16
add
inc
les
out
cli
pop
cwtl
mov
xor
push
rdtsc
cmp
jmp
jne
popa
test
xlat
imul
mov
add
inc
scas
mov
lods
xchg
pop
adc
movsl
xor
mov
mov
rorb
push
dec
mov
imul
stos
nop
js
fwait
adcb
xchg
stos
mov
je
repz
rcll
inc
lds
loop
sarl
test
shll
test
icebp
push
lcall
jbe,pt
arpl
xor
jge
xchg
pop
mov
adc
push
lcall
sub
mov
lods
test
xor
loop
mov
pop
push
add
test
rclb
rcr
leave
test
aad
rcll
xor
jmp
jl
mov
mov
addb
push
and
in
cmp
push
scas
lock
in
mov
inc
sub
ret
cld
jecxz
xor
stc
leave
addb
cltd
jne
mov
in
jg
adc
pop
push
or
out
jecxz
mov
das
fwait
xchg
xchg
fsubrp
sbb
add
push
int
bound
mov
jp
mov
push
loope
xor
push
pop
ja
pushf
sbb
jg
repnz
aaa
lock
inc
loope
push
sarl
cs
imul
pop
inc
pop
pop
test
loope
pop
xor
data16
jno
lret
add
imul
push
outsl
cmp
les
fdivs
inc
and
adc
xchg
sbb
aas
pop
or
dec
push
repz
jnp
dec
std
lods
imul
bnd
into
aaa
aam
sub
imul
aaa
cmp
lods
mov
jb
andl
push
ja
pop
out
inc
add
ljmp
mov
pop
nop
sbb
fldenv
push
cmpsb
adc
sub
subb
mov
add
or
das
xchg
jnp
je
dec
stos
push
mov
pop
jg
imul
push
adc
insl
lock
dec
mov
or
inc
pop
repz
and
or
push
lea
pusha
adcl
gs
lock
mov
add
adc
mov
mov
and
push
and
into
out
addr16
xchg
jae
xchg
lods
int3
lea
jno
ljmp
imul
sbb
mov
dec
and
imul
pop
inc
shrl
shrb
pushf
pop
lahf
adc
je
cltd
push
sarb
add
add
or
adc
push
or
out
push
jmp
sbb
dec
and
out
fildll
sti
pop
push
mov
jge
push
test
push
add
das
loopne
jb
std
cld
adc
jg
add
cmp
fbstp
xchg
dec
jge
js
jb
arpl
add
sti
dec
xchg
sub
sub
xchg
mov
add
and
mov
sbb
in
cmp
cmp
int3
mov
outsb
push
das
sbb
adc
pusha
je
aaa
mov
or
and
sarb
ret
add
add
xor
popa
ret
and
loop
push
sbbl
dec
mov
movsb
in
mov
sbb
cmp
add
ss
rol
dec
push
lock
xchg
push
mov
mov
dec
adc
lods
pop
loope
mov
subl
mov
jle
mov
inc
jno
pop
shlb
pop
arpl
sti
pop
add
fs
add
stos
int3
adc
mov
jns
xor
test
push
sub
outsb
or
or
fcoml
push
dec
pop
popf
leave
mov
or
cld
sahf
ljmp
push
testb
cwtl
mov
dec
cmp
push
add
and
fcompl
lods
fdivs
std
lcall
xacquire
out
pop
pop
push
mov
xchg
dec
repz
int
loope
inc
or
test
pop
ja
pop
push
mov
out
jmp
movsl
xchg
loop
and
xlat
xor
test
push
pop
push
cmp
dec
int3
inc
jle
clc
lock
insl
mov
sarb
mov
stos
mov
mov
sbb
lahf
popa
loopne
pop
dec
movd
xchg
jp
jae
sbb
das
dec
xor
push
cmp
or
jo
push
lcall
inc
mov
sub
and
out
pop
sub
sub
cld
aas
mov
add
xchg
jb
sub
pop
cmp
mov
push
arpl
pop
shll
dec
mov
adc
dec
in
xchg
and
movsb
dec
jg
mov
subb
repz
int3
dec
pop
fs
es
lds
std
movsl
pop
in
xchg
sub
pop
mov
popa
fadd
cltd
out
es
jb
xchg
cmpsb
lods
ret
mov
and
mov
pop
sarl
pop
lods
pop
pop
rcll
jg
push
add
sbb
sub
jne
adc
lret
movl
fimull
in
fwait
out
pop
lds
ds
jbe
xchg
or
add
and
inc
mov
push
xor
loopne
loopne
push
inc
sub
std
sub
sub
push
sub
mov
leave
xchg
and
lea
out
and
jne
out
stc
push
add
fs
inc
imul
fbld
mov
stos
dec
dec
and
dec
sub
in
scas
mov
mov
pusha
jg
fisubrs
sarl
repnz
scas
inc
and
ret
stos
leave
lods
sub
das
scas
and
adc
jmp
loope
dec
scas
push
aad
inc
add
shll
push
push
inc
jae
mov
and
addr16
scas
jae
mov
xchg
movsl
lods
and
mov
test
cld
xchg
stc
cmp
stos
stos
or
icebp
push
loopne
xor
std
jae
imul
pop
out
nop
pushf
test
lods
sub
fistpl
xor
clc
les
push
and
dec
push
data16
or
push
test
aad
fcmovnb
xchg
push
stc
pop
xchg
cltd
lahf
out
jg
sbb
sub
push
mov
sub
add
nop
xlat
mov
sbb
hlt
lods
push
lods
out
lahf
fmul
lcall
sahf
xlat
es
enter
pop
inc
sahf
mov
mov
dec
daa
lea
fisubrs
daa
dec
faddl
add
mov
flds
push
xchg
push
xor
mov
movsb
push
jo
jnp
daa
popf
dec
movsb
pop
mov
cmp
mov
jae
and
test
sbb
cld
repnz
pop
bound
test
scas
out
sbb
sbb
xchg
dec
push
or
call
xor
push
loope
xor
in
mov
cmp
sub
pop
pop
ret
jg
lret
stos
cmc
push
arpl
push
jne
jnp
fnsave
inc
cmpsb
xchg
pop
jl
jo
jp
push
xor
pop
jmp
or
adc
loop
dec
push
cmp
fisubl
js
and
mov
xor
bound
inc
adc
xchg
adc
jl
jecxz
loopne
sub
jmp
movsl
aaa
lret
in
das
or
fcomps
outsl
cmc
negb
pop
popf
addr16
mov
mov
movsl
out
dec
jecxz
std
cmp
aam
rol
aam
sbb
push
pop
add
ret
lea
pusha
push
les
xchg
add
std
jecxz
fildl
jecxz
mov
add
lods
inc
shll
jns
les
icebp
mov
mov
push
std
je
lret
jnp
pop
ficoms
jnp
out
inc
mov
sbb
mov
xchg
outsl
sub
mov
testb
adc
test
sbb
pushf
aad
test
fidivl
sub
in
aas
cmpsb
jp
jnp
jle
xchg
jg
sub
lahf
push
cmp
cld
push
cli
ret
cmp
push
pop
and
insb
sbbl
dec
out
dec
xchg
add
and
jp
or
add
cmpsb
adc
push
mov
pop
lock
ret
pop
jno
pushf
imul
lock
mov
insb
jae
xor
pop
in
push
xor
jp
lahf
cmpsl
xor
popa
mov
cmc
push
mov
mov
jns
fwait
pop
hlt
mov
lret
push
mov
in
arpl
push
clc
popa
cmpsl
add
lds
les
or
inc
adc
mov
mov
decb
inc
jecxz
int
mov
xchg
adc
pop
sub
dec
jbe
xchg
aad
loopne
pop
push
xchg
sahf
repnz
and
mov
xchg
test
and
call
adc
fldenv
and
pop
add
push
aam
cmpsl
js
or
add
xlat
push
push
push
sub
insl
cmp
sub
push
loopne
jl
daa
pop
mov
lret
adc
ss
mov
dec
jbe
cmp
les
iret
dec
xor
pop
push
addr16
dec
dec
push
out
fwait
and
testl
icebp
mov
xchg
scas
out
insb
or
jno
into
xchg
pop
mov
dec
loope
addr16
repnz
aam
or
hlt
sbb
sub
xlat
in
ss
sahf
int
andb
lcall
mov
lret
and
jbe
hlt
add
iret
mov
loop
fsts
sarl
mov
xor
out
daa
and
xchg
pushf
pop
mov
das
add
std
montmul
cmpsb
inc
mov
testb
pop
push
xor
push
push
int
mov
mov
icebp
fnstenv
orl
dec
inc
push
cmp
popf
insl
movsl
jmp
shll
in
sahf
push
add
cli
pop
in
or
loope
adc
mov
or
pop
ret
ss
fcmove
ficompl
mov
movsb
cmp
jbe
jp
mov
push
jo
fs
mov
dec
iret
and
imul
pushf
mov
idiv
repz
inc
jmp
and
xor
mov
std
mov
iret
imul
mov
fstps
int3
cmp
sub
mov
pop
pop
aad
jo
out
mov
in
stos
and
xchg
pop
inc
cmc
push
in
add
push
jmp
loopne
mov
scas
loop
xchg
lock
mov
popa
inc
sub
or
into
add
xorb
out
leave
sbb
inc
pop
mov
mov
pop
rorl
pop
std
jge
test
pop
pop
sbb
dec
or
push
insb
mov
ret
jle
jbe
and
jl
or
ja
int
xor
cld
in
xor
std
sbb
ljmp
jno
test
test
popf
sub
clc
xor
xor
ret
bound
lods
movsb
cmp
inc
outsl
mov
cld
mov
imul
es
xchg
daa
cld
mov
cli
mov
xor
test
push
mov
cmp
mov
lret
mov
dec
and
sti
push
mov
movsb
outsb
and
out
je
jb
test
mov
inc
mov
in
pusha
ret
cmpsl
mov
int3
push
adc
xor
sbb
data16
xor
insb
imul
cmpsl
loop
ja
mov
es
test
stos
mov
ret
lret
rclb
lret
jae
stos
lds
test
pushf
cmpsl
cmp
lods
testb
scas
nop
xchg
mov
fs
dec
insb
jmp
popf
in
js
les
or
push
pop
jbe
roll
dec
mov
scas
jp
cmp
jne
fiaddl
aad
fdivl
incb
and
cmpsl
lret
rcr
dec
add
sbb
jae
or
insb
adc
addb
xchg
sbb
test
fwait
push
inc
ret
fisubs
and
pushf
jae
ret
jg
inc
std
push
push
pop
xor
xchg
xchg
cmc
xor
cmpsb
lods
daa
outsl
sub
xchg
ds
mov
ud2
inc
lds
frstor
int
jae
sub
add
xor
ret
imul
insl
mov
stc
inc
jp
jbe
push
out
shl
out
xchg
femms
xor
xchg
cmp
add
out
xchg
mov
jo
push
ret
into
pop
or
jl
jns
data16
mov
inc
mov
push
and
aas
cmpsl
cli
mov
sti
xchg
loopne
jae
xor
mov
lret
add
dec
or
arpl
mov
mov
clc
filds
mov
cmp
or
mov
jle
outsb
rcll
fcoms
mov
icebp
fldt
mov
inc
mov
xor
push
pop
jne
aad
mov
ljmp
addl
int3
jmp
sub
add
divb
pop
outsl
pop
xor
pushf
ljmp
mov
mov
fldt
push
cmp
jecxz
mov
mov
not
xor
test
das
scas
into
lret
mov
dec
mov
dec
rorl
and
pushl
das
ret
lds
mov
pop
xchg
pop
test
mov
or
std
jge
xchg
int
mov
subb
pop
int
sbb
push
sbb
mov
es
ficompl
pop
mov
rcrl
cld
jg
fwait
dec
call
and
cs
adc
dec
cli
scas
in
cmp
int3
nop
jne
mov
mov
pop
adc
lods
fwait
out
fidivs
out
aam
mov
aam
jg
sar
sub
and
sbb
push
pop
ud1
jecxz
mov
loop
rcr
mov
fwait
xlat
mov
das
das
and
sub
mov
sbb
fstl
stos
push
push
sub
lods
in
adcl
daa
adc
cmp
jns
out
mov
pop
dec
inc
outsl
mov
adc
ficoms
and
fstenv
adc
inc
push
cmpsb
loop
push
push
push
dec
mov
into
stos
fistpl
and
or
outsl
enter
lods
lods
mov
adc
xchg
mov
mov
cltd
jo
aad
add
xchg
test
cmpsb
mov
sahf
xchg
or
jecxz
les
pop
js
std
mov
xor
mov
and
dec
sub
cmp
sub
jnp
mov
movsb
fwait
int3
sbb
sahf
xchg
jle
jbe
das
daa
cmpsb
dec
mov
dec
cmp
je
mov
test
xchg
mov
jns
rcrl
jbe,pn
and
xor
inc
pushf
mov
scas
mov
mov
mov
and
and
pop
mov
aaa
jbe
adc
rolb
or
pushf
hlt
jno
jge
inc
inc
aas
pop
xchg
test
cli
stos
mov
in
std
add
jmp
inc
andl
or
fucomi
test
negb
leave
cmc
mov
push
sub
sub
mov
fwait
jg
pusha
or
rolb
mov
and
or
insl
cmpb
std
push
jbe
cmp
aaa
ret
sbb
insb
xchg
outsb
push
repz
or
repnz
and
mov
js
push
cmc
mov
js
jbe
out
lret
fidivl
imul
push
jnp
push
loop
push
xor
je
cli
adc
pop
cld
aad
es
inc
mov
and
cmpsb
sub
mov
es
push
mov
adc
imulb
xor
leave
dec
mov
rclb
imul
push
or
daa
fs
and
cmpsl
xchg
iret
push
gs
sbb
cmpsl
ja
push
or
in
in
pop
data16
push
mov
and
loop
fs
imul
sub
rorb
cmpb
mov
jae
cwtl
or
mov
adc
add
testb
mov
sub
push
sbb
dec
push
xor
xor
sbb
cld
add
sub
je
jge
xor
fpatan
popa
inc
imul
and
daa
cmc
jle
push
mov
mov
push
outsb
push
and
repnz
xchg
sub
repz
push
into
pop
dec
xchg
loopne
clc
push
mov
jae
mov
inc
or
or
int
cltd
mov
xor
test
push
mov
mov
dec
fucom
pushl
xchg
rclb
ficompl
and
addb
jecxz
jp
cmpsb
pop
cmp
imulb
ret
ret
push
add
inc
xchg
mov
and
inc
xchg
sahf
jno
jae
pop
push
push
test
outsl
loopne
fstpl
xchg
loope
or
jnp
out
sub
ljmp
mov
push
xchg
and
mov
sbb
loopne
test
pop
mov
nop
test
or
orb
scas
xor
aam
jmp
fsts
xor
adc
shll
cmpsl
es
jne
add
push
imul
popa
dec
mov
in
mov
iret
inc
sub
stos
pushf
sbb
lds
fsubl
mov
pop
adc
push
mov
mov
movsb
push
xchg
lret
sti
inc
push
testl
cmp
push
cs
shll
cwtl
push
outsl
je
or
inc
mov
rcll
mov
sub
dec
test
dec
xchg
adc
jne
aas
inc
push
mov
hlt
aaa
pop
ds
adc
sub
sub
add
xorl
aaa
xor
pop
shlb
outsb
js
fcmovnu
xchg
hlt
les
lret
mov
or
jae
data16
addb
out
int3
negl
adc
cmp
outsb
or
adc
orl
sub
std
fsts
notb
cmc
sbb
pop
push
sbb
xor
sbb
data16
xchg
fcomip
xor
adc
gs
xor
cmpsl
mov
fwait
in
mov
sub
and
sbb
loop
mov
mov
mov
fwait
cmpl
push
inc
dec
xlat
ficompl
pop
pop
push
mov
sub
in
xchg
push
push
jl
jb
push
das
repz
pushf
cmc
xchg
stos
inc
gs
js
sbb
ret
inc
jbe
subl
jns
cld
lahf
hlt
pushf
test
loopne
push
push
dec
out
sub
arpl
xchg
xchg
add
push
addb
dec
or
sub
dec
push
sahf
hlt
cmc
and
inc
sub
add
mov
outsl
stos
push
xor
loop
inc
dec
sbb
mov
gs
stos
mov
loope
sbb
sub
aaa
push
psadbw
adc
xor
dec
jne
pusha
mov
mov
mov
mov
xor
add
jno
pusha
lods
mov
pop
cmc
fs
or
or
mov
inc
and
inc
inc
cs
xchg
fiadds
addr16
movsl
fstpt
stos
xchg
clc
scas
xchg
fstpt
jns
sub
add
xchg
mov
mov
lea
cmpsl
ret
dec
mov
cmp
mov
sub
mov
dec
or
jmp
xor
jge
lahf
pop
and
enter
xor
xlat
cmp
jle
mov
aaa
rcl
js
hlt
or
jnp
aaa
aaa
dec
leave
cli
ds
mov
xchg
mov
xchg
mov
adc
repz
js
enter
loope
insb
xchg
sub
movsb
subb
pop
mov
push
pop
xchg
xchg
stos
lcall
push
inc
movsb
and
or
xor
inc
outsl
jne
sub
ret
int3
lods
xchg
repnz
push
cmpsb
jle
scas
sub
loope
loopne
mov
jle
ret
sub
into
dec
jb
inc
and
xchg
mov
mov
xor
cwtl
stos
or
push
negl
lods
es
jb
dec
cmp
sbb
mov
mov
jno
ljmp
shrb
dec
negl
pushf
call
popf
fnstenv
or
adc
adc
fldenv
dec
loop
mov
inc
or
and
movsl
adcb
add
scas
aas
movsl
inc
in
shlb
xchg
jge
jg
mov
insb
nop
imul
shl
xchg
sub
push
push
xor
push
mov
in
out
xchg
dec
push
dec
mov
mov
push
push
lods
sub
mov
rcll
cmp
jnp
pop
repz
and
in
nop
and
fistps
iret
jp
pop
arpl
dec
pusha
mov
int
fs
mov
xor
fwait
loopne
dec
sbbb
mov
jge
mov
bound
subl
mov
xchg
std
add
xlat
movsb
arpl
pop
jnp
pop
rolb
icebp
jbe
inc
mov
insl
ds
cmpb
jmp
pusha
sbb
xor
cmc
push
shlb
into
jle
shlb
or
xor
xchg
or
lret
and
int3
xor
jge
or
in
clc
lret
pushf
or
clc
test
cwtl
gs
aaa
sub
in
lea
add
adc
jae
mov
inc
push
fwait
or
imul
fwait
pop
xchg
cmp
mov
inc
lcall
mov
lock
lret
out
mov
push
loope
mov
jno
test
test
lret
push
ret
sub
aas
imul
std
movsl
out
or
stos
jmp
sar
dec
cltd
cwtl
mov
dec
test
and
mov
pusha
xchg
jp
inc
ljmp
movsb
mov
popa
jae
or
es
xor
cmp
xor
push
and
hlt
test
js
ret
fwait
inc
xchg
es
push
inc
push
pop
xchg
add
sbb
js
add
add
mov
rorl
clc
inc
fnstcw
stos
rcrl
pop
pop
pop
pop
sub
pop
mov
lret
mov
sub
popf
lcall
jb
jnp
jns
cmp
fwait
jne
xor
and
lds
cli
outsb
jmp
gs
cwtl
mov
pop
push
xchg
das
ror
out
cmc
ret
out
dec
fs
inc
xor
cmp
loop
mov
xor
jns
inc
ljmp
movsl
jb
insl
add
mov
lods
mov
pop
ja
mov
pushf
or
scas
jge
cltd
js
dec
outsb
arpl
dec
std
sbbb
xchg
add
fyl2x
add
movsl
cmovb
fisubs
xchg
xor
push
xchg
repz
add
enter
xlat
out
inc
ja
mov
jl
call
cs
mov
sub
je
movsb
rcrb
xor
mov
aas
mov
arpl
pop
inc
insl
mov
pop
xchg
xchg
into
jp
scas
ret
dec
fsubs
in
add
inc
ret
push
sub
cmp
fisubrs
int3
mull
mov
lcall
add
scas
testb
aad
enter
pusha
stos
add
add
fs
sti
lock
call
int
test
cmpsl
leave
outsb
outsl
mov
fisubs
aad
dec
out
cmp
shlb
sar
xchg
add
push
lods
pop
mov
sbbb
pop
dec
imul
dec
fimuls
push
xchg
push
push
test
jle
adc
xor
test
mov
sbb
testb
adc
fldpi
pusha
mov
push
scas
adc
pop
mov
leave
or
pop
add
cwtl
insl
push
xorb
pop
mov
les
scas
mov
xor
mov
fcompl
add
mov
dec
adc
add
xor
sub
and
push
xor
pop
fildl
cli
sub
test
pop
jno
sbb
mov
sarl
fbld
jo
sahf
mov
les
sarl
fidivl
stos
xor
les
adcb
jnp
and
imul
mov
imul
mov
mov
es
xor
iret
xlat
popf
cs
dec
addl
lock
in
js
dec
sbb
xor
outsl
cmp
fs
inc
and
jge
add
adc
adc
les
out
sbb
pop
ret
add
inc
xchg
mov
ffree
cmpb
mov
std
inc
or
iret
test
inc
jo
xchg
dec
mov
xor
inc
insl
xchg
call
fwait
and
adc
cmpl
loope
xchg
push
inc
xor
shll
ret
ret
loop
nop
popa
inc
or
add
cld
insb
or
inc
xor
cld
test
add
inc
adc
pop
mov
adc
scas
and
hlt
sub
cmp
es
pusha
repnz
mov
dec
dec
dec
test
and
inc
loop
ret
push
mov
mov
dec
scas
stc
fwait
xchg
call
adc
push
push
xchg
xor
fistl
adcb
stos
in
test
xchg
pop
mov
adc
mov
std
aas
add
sub
pop
inc
dec
lds
pop
push
pop
mov
cmp
inc
pop
repz
cmp
mov
adcl
mov
mov
lds
xor
mov
inc
jno
mov
cmp
shr
xchg
scas
shll
iret
out
jg
jb
mov
inc
dec
lds
jp
and
xchg
icebp
in
insb
push
shlb
cmp
imul
jno
loop
pop
xor
sbb
int3
inc
pop
inc
dec
mov
pusha
inc
pop
mov
movsb
jmp
or
stos
aad
fdivrs
imul
mov
shr
mov
stos
inc
scas
into
push
cmp
xor
pop
inc
lds
das
ds
push
mov
test
gs
pop
xor
xchg
adc
jo
pop
cmc
lea
mov
ret
sbb
xchg
cmpsl
les
pushl
lahf
sahf
fcmovne
xor
inc
jmp
xorb
push
add
jo
add
in
je
adc
sub
mov
out
sarb
test
mov
sub
aas
pop
loope
mov
xor
insb
push
cmp
jno
push
adc
sub
mov
ljmp
dec
jb
dec
or
movsb
stc
fdivrl
push
jne
ret
dec
ljmp
sbb
mov
mov
shl
popf
popf
dec
mov
icebp
repnz
mov
jae
pop
lock
pop
test
mov
and
in
mov
subl
mov
sbb
jb
jno
mov
inc
das
repnz
xchg
sbb
fstps
push
dec
dec
shll
cli
faddp
add
cmp
clc
sti
and
icebp
js
adc
mov
arpl
jmp
mov
or
ja
fistl
dec
push
cltd
push
dec
arpl
mov
push
enter
mov
dec
add
push
pop
in
incb
mov
jne
sub
pop
aas
frstor
pop
sarl
iret
fwait
out
sbb
jge
pop
push
cli
jge
sub
out
mov
int3
je,pn
in
pop
into
cmp
dec
and
pop
inc
shr
or
pop
inc
mov
sarl
pop
sub
fcmovne
xchg
fstpl
fwait
sbb
jecxz
stos
leave
test
data16
daa
and
cmpl
out
cmc
scas
movsl
sub
lea
mov
bound
push
lcall
cwtl
lcall
jmp
data16
add
dec
inc
test
movsb
xor
adc
dec
push
loope
mov
cld
mov
and
xchg
inc
js
mov
aas
outsb
fsubrl
jp
pop
and
mov
mov
out
sub
lahf
or
fisttps
cmp
jg
sarb
pop
ljmp
rcrb
dec
cmp
dec
hlt
pop
push
fidivrl
inc
mov
or
xor
xchg
aaa
lods
inc
xor
add
xchg
sub
std
lret
into
cmpsl
sti
shrl
fisubrs
scas
sub
dec
push
mov
pop
inc
mov
adc
cmp
dec
roll
jecxz
stos
arpl
test
movmskps
pop
enter
and
iret
mov
cli
mov
jno
or
dec
test
je
cmp
fstl
leave
test
je
ja
mov
jae
pop
mov
xchg
sbb
jno
mov
xor
dec
xor
rcll
ss
push
inc
add
stos
cmp
pop
in
aaa
mov
ret
inc
mov
frstor
sbb
lock
daa
dec
insb
std
ja
iret
aaa
jne
mov
daa
cmpl
add
push
test
insb
test
jb
pop
jge
std
xchg
in
lcall
leave
test
sbb
or
xor
push
inc
cli
aaa
shll
mov
cmp
aas
test
adc
movsl
loope
je
ja
fwait
xor
mov
stos
fistps
into
movsl
sub
aad
stc
pushf
lock
sbb
lods
outsl
rol
dec
jae
hlt
lock
cwtl
mov
test
in
push
cmp
dec
or
iret
dec
inc
fxam
pop
and
das
cs
or
sbb
stos
and
adc
adc
and
bnd
idiv
mov
xor
mov
add
nop
in
cmpsl
stc
sbb
dec
mov
sbb
and
iret
aaa
xchg
addr16
or
out
pop
mov
in
sub
mov
dec
iret
and
mov
call
lds
mov
xor
sbb
sbb
std
dec
pusha
mov
in
loop
add
mov
loope
test
inc
mov
pop
arpl
aad
fs
inc
test
js
xchg
cmc
and
push
add
outsl
lret
sti
sub
inc
xor
lret
imul
pop
enter
movsb
out
pusha
xchg
in
loop
pop
arpl
add
call
pop
stos
pop
mov
sbb
fst
jo
es
rorl
cmpsb
enter
or
pop
dec
dec
cmpsl
and
shlb
or
test
push
xchg
jg
xor
or
arpl
dec
test
mov
push
negl
mov
push
mov
cs
idiv
and
sbb
cmp
xchg
xchg
loop
mov
cli
cmpsb
push
leave
push
iret
jmp
mov
push
arpl
mov
sub
push
adc
ret
mov
cs
cltd
stc
mov
fmuls
mov
mov
ds
inc
mov
cli
xchg
sbbb
cli
div
cmc
addr16
sbb
shl
fwait
mov
testb
dec
push
push
repz
inc
push
ja
cli
xor
loope
jno
ret
repnz
sbb
jl
xor
fstpl
xor
adc
adc
leave
mov
ret
inc
adc
div
dec
fimuls
xchg
jge
lret
jns
roll
out
dec
into
jnp
pusha
or
sub
call
lods
enter
lds
push
pop
xor
in
adcb
adc
scas
mov
testb
sbb
push
into
xorb
and
xchg
pop
fwait
pop
add
mov
loopne
cmpb
mov
dec
mov
mov
cmp
sbb
add
and
repz
jg
dec
imul
mov
mov
clc
mov
jns
ja
adcb
add
pushf
jae
and
mov
pop
dec
nop
push
movl
scas
push
sar
jnp
push
sub
push
or
jne
out
and
mulb
loopne
fwait
jle
mov
mov
pushf
or
sahf
or
repz
xor
insb
xor
in
xchg
test
aaa
daa
mov
fcompl
xlat
xchg
pop
loope
clc
orl
push
or
inc
mov
daa
inc
adc
sahf
lods
mov
cld
int
repz
pop
cld
push
lods
ljmp
addr16
and
test
cmp
nop
xor
arpl
inc
fsubrl
out
lock
loop
mov
xor
adc
lds
repnz
insb
ljmp
nop
xchg
out
in
pop
sbb
sub
and
and
mov
mov
cmp
negl
ffreep
sub
jnp
loop
sbb
push
daa
xchg
push
rorb
fldl
clc
lea
adcb
rcll
in
pop
or
mov
fcmovu
xchg
packsswb
add
push
push
pop
push
pop
push
xor
into
sub
sbb
loopne
jge
mov
sti
cmp
dec
xchg
add
repnz
xor
loopne
and
dec
or
pusha
in
mov
xor
sbb
pop
insl
pop
aad
std
iret
sub
hlt
xor
xor
jl
xor
out
outsb
mov
int
insl
add
mov
psadbw
lock
xlat
pop
mov
mov
outsb
inc
inc
xor
nop
cli
mov
push
int
push
lock
pushf
loop
test
jle
enter
or
out
subl
jbe
xorb
xchg
pop
outsb
shlb
add
pop
cmp
push
xchg
jecxz
jb
ret
pop
loop
pop
mov
popf
fidivl
push
cmp
or
cmpsb
scas
inc
sti
mov
xor
jno
inc
addr16
mov
pop
lahf
pop
mov
pushf
dec
or
jae
xor
imul
push
and
push
ljmp
stos
pop
lock
mov
mov
repz
sbb
push
rolb
lret
add
movb
pop
aam
mov
sahf
and
xor
push
xchg
jg
dec
mov
sub
cmp
sahf
roll
cmp
aaa
insb
sahf
push
insl
inc
push
add
bnd
ret
sub
into
js
push
and
cmp
pop
jl
in
test
decb
lds
popf
jl
fdivl
dec
dec
jno
jne
mov
outsb
jmp
gs
test
xor
les
mov
sti
enter
jae
sbb
into
adc
or
das
aas
mov
xchg
inc
or
in
nop
or
in
lcall
sbb
pop
stos
addr16
push
cmp
mov
mov
add
push
aad
mov
cmpsb
cmpsb
push
cltd
std
rcrb
jne
iret
xor
adc
add
adc
ret
inc
push
jecxz
scas
sub
jl
sub
dec
jle
jg
add
js
int3
cmp
sub
ret
iret
add
test
test
mov
jo
pop
rcrl
sub
cmp
dec
das
adc
lret
mov
lahf
es
test
add
xor
and
lea
dec
imul
cmp
add
cmp
xchg
cwtl
cltd
enter
dec
cmpsl
sbb
js
jne
movsl
pushaw
jge
mov
es
movsl
mov
mov
xchg
mov
mov
pusha
shl
mov
push
cmpl
and
cltd
pusha
not
dec
push
jo
adc
fmull
das
fstp
inc
adc
or
sarb
pop
inc
and
and
ds
xchg
in
xor
push
repnz
fsubr
dec
mov
adcl
out
adc
inc
cld
inc
xchg
inc
rcrl
lock
jecxz
int
shll
sahf
imul
push
push
mov
mov
fisubl
pop
sub
mov
cmp
sbb
cmp
mov
pop
mov
sbb
mov
cmpsb
loop
mov
stos
sbb
test
leave
mov
mov
jecxz
sbb
repz
lret
pushl
fbld
sbb
cli
mov
sbb
cwtl
sbb
inc
insl
mov
arpl
pushl
je
ret
pop
mov
ret
shll
pop
outsl
stos
aas
adc
test
sti
js
push
addb
mov
js
pop
dec
clc
xor
int3
cld
ret
inc
and
clc
cmpsl
sbb
inc
sub
and
es
xchg
sbb
sub
push
idivl
mov
or
test
popf
je
pop
sub
ror
add
lds
movb
or
fs
shrl
mov
mov
js
test
xchg
jae
xchg
gs
std
pop
pop
bound
roll
cmc
imul
jmp
subl
xor
cmpsb
cmp
rcr
xchg
es
push
mov
mov
mov
adc
loope
ja
add
cld
pop
pop
test
call
loop
cmpsl
dec
fwait
stos
idivb
mov
pusha
push
out
jecxz
pop
mov
fstpt
cmp
dec
push
cmc
iret
jecxz
adc
sub
mov
int
fs
cmpsb
xchg
cmpb
pusha
mov
shr
mov
jns
mov
dec
movsb
int
or
lea
xor
jl
jne
stos
in
mov
shrb
push
mov
enter
pop
lds
clc
and
sub
mulb
lret
in
ja
outsb
dec
cmp
fcomps
das
push
cmp
fs
ss
sub
jecxz
int3
aas
das
inc
xor
jo
dec
jle
xchg
gs
test
lea
inc
push
mov
xchg
xchg
call
hlt
or
inc
mov
and
rcr
aas
xchg
lret
xor
push
jl
mov
add
orb
stos
mov
andl
xchg
jle
xchg
icebp
push
stc
mov
scas
ret
shl
sti
jnp
xchg
in
jns
sbb
xchg
fisttps
aad
inc
dec
add
adc
jns
or
cmp
das
lahf
aas
addb
popf
pop
mov
pop
mov
outsb
xor
mov
jne
mov
daa
jg
icebp
xchg
pop
les
inc
inc
lret
mulb
int
xor
mov
inc
jo
ror
ja
out
lret
inc
into
bound
mov
test
pop
je
or
sbb
out
lret
jg
outsl
cmp
das
push
and
xchg
cmpl
xor
mov
adc
jbe
add
mov
dec
ss
in
decb
jmp
add
jg
jns
jle
cmc
nop
cmpb
add
xchg
ss
mov
into
mov
test
xchg
pop
dec
mov
fbld
sbb
shll
pop
std
cmpsl
shlb
inc
pop
insb
mov
fisubl
add
dec
call
lcall
test
dec
mov
rol
cmp
sub
lcall
sbb
test
xchg
xorl
fisubrl
sbb
aas
and
pop
and
pop
sub
mov
mov
cmp
dec
arpl
movsl
aas
dec
adc
and
mov
ret
add
jnp
jo
outsb
xor
push
dec
mov
testb
mov
xor
cmp
insl
mov
pop
mov
push
pop
push
test
in
cmpsl
aam
fisubl
or
aas
ret
mov
dec
mov
mov
cwtl
gs
hlt
push
test
shr
mov
loope
fcompl
test
push
popf
frstor
adc
dec
lcall
cwtl
shl
pop
jno
xchg
dec
test
or
sub
inc
insl
or
push
sbb
andb
xorb
inc
mov
xor
repz
test
in
and
mov
inc
data16
mov
stos
sbb
lahf
mov
test
and
mov
push
cwtl
ficompl
shlb
mov
les
mov
xor
cmp
cmp
js
or
insb
dec
jo
inc
fwait
pop
aaa
mov
mov
dec
mov
ss
adc
push
cmc
dec
mov
ja
insb
xlat
or
aam
sbb
mov
push
jne
mov
push
mov
movb
in
mov
mov
lods
push
push
cwtl
stc
lods
scas
fsubs
in
daa
cmpl
stos
adc
daa
push
inc
mov
lcall
push
sarb
mov
in
pop
jb
xchg
sbb
repnz
sbb
testl
ret
das
scas
dec
jmp
decl
lret
stos
addr16
xchg
int3
lea
js
loop
jo
adc
rcrl
ss
sub
push
cmpsl
push
jns
inc
arpl
adc
jg
fcoml
xchg
or
es
sti
jae
mov
pushf
int3
repnz
les
add
push
xchg
and
fiadds
push
push
xor
cmp
jbe
stc
cmp
and
xchg
mov
popa
insl
mov
jb
jo
loop
mov
cwtl
dec
pop
dec
sub
stos
clc
dec
jp
pop
daa
jg
xlat
jnp
jb
cmp
insl
mov
mov
pop
test
push
xchg
fsubrs
mov
or
push
jnp
cwtl
ss
add
push
inc
std
and
dec
aad
setp
add
and
pushf
or
mov
jno
xor
jp
adc
xchg
movsl
mov
push
dec
stos
outsb
cmp
mov
out
lret
mov
xchg
cmpsl
pop
xor
mov
sbb
out
xchg
jb
adc
negl
ss
iret
hlt
aad
jmp
mov
bound
leave
sahf
adc
sbb
xor
dec
fildll
inc
xlat
cmp
movsl
pop
xchg
sahf
mov
sub
sbb
lret
outsl
sub
sahf
ds
lds
and
pop
andl
cld
inc
popf
xlat
lods
inc
arpl
or
cmpsl
mov
mov
and
xchg
scas
loopne
fsubrl
inc
dec
lret
pop
xchg
aaa
xlat
dec
out
inc
ds
lret
aam
mov
enter
faddl
clc
jno
scas
push
dec
lds
call
inc
jp
aam
mov
mov
jecxz
arpl
lret
das
jne
pop
lds
test
popa
cmp
in
and
hlt
mov
xchg
xor
add
test
and
mov
aas
mov
dec
mov
loopne
in
fiaddl
inc
push
in
stc
pop
push
repz
inc
cmp
push
mov
push
loop
decl
dec
in
fists
xor
in
xor
aas
xlat
pop
push
xorb
fcompl
xlat
xchg
mov
jae
jle
cmp
adc
jle
movl
out
xchg
sti
dec
sub
fisubrl
xchg
sub
gs
nop
popf
or
pop
jle
lods
push
pushf
push
push
push
sub
lods
or
fs
push
pop
out
fs
add
fimull
inc
ror
in
add
stc
pusha
imul
dec
ret
sub
icebp
xchg
data16
dec
inc
or
pop
out
inc
fildll
mov
xor
hlt
lds
xlat
xchg
cmpsl
popa
dec
int3
ret
sub
sub
adc
jecxz
xchg
in
pop
inc
mov
aad
in
cmp
repnz
sub
cmp
psadbw
sbb
into
or
aam
sbb
stc
stos
add
pop
pop
movsb
sub
call
and
or
push
movsl
out
lea
and
sub
lret
jne
lcall
fcoms
test
arpl
and
je
imul
adc
mov
out
cmp
repz
lcall
in
lret
test
xchg
data16
and
out
cmc
lods
mov
jnp
inc
lea
lea
cmp
fmuls
cmpsl
jo
add
xor
dec
push
jo
in
into
pusha
dec
add
or
test
push
fistl
leave
aaa
lret
fs
js
or
inc
movsl
sub
ret
and
int3
daa
pop
and
dec
or
es
call
in
jno
lods
sub
sahf
jnp
xchg
addr16
incb
adc
mov
lods
jl
pop
shrb
mov
cmp
add
stos
sti
sbb
pop
rolb
andl
hlt
negl
ret
xchg
or
xchg
out
lea
jo
jle
and
push
arpl
dec
or
ljmp
popa
loop
pushf
mov
xchg
data16
ljmp
mov
daa
imul
hlt
fimull
push
in
and
push
push
icebp
mov
pop
je
fdivl
aaa
or
jns
aas
nop
xor
mov
ret
xchg
pushf
loop
scas
int3
dec
mov
and
out
mov
insb
dec
bound
pusha
andb
mov
and
add
test
add
fwait
mov
xchg
insb
xor
outsb
arpl
xchg
test
push
scas
out
loope
loope
cwtl
jb
pop
aad
xchg
enter
pop
xor
fcoml
add
addr16
add
loope
mov
mov
movsb
jo
mov
lahf
les
shlb
repz
sbb
aam
into
adc
adc
hlt
xlat
xchg
push
je
fmull
push
pop
mov
pusha
jne
ret
fs
or
add
xor
mov
lret
shlb
jne
sbb
dec
loopne
aas
ror
lea
shrl
mov
cwtl
push
mov
or
roll
jecxz
scas
mov
loope
int
jne
test
sti
mov
stos
lret
jge
lcall
push
mov
xlat
and
and
test
popf
cmp
adc
mov
xor
or
dec
mov
and
sbb
imul
mov
dec
cwtl
add
pusha
popa
xor
mov
cmc
mov
stos
jae
stos
dec
ficompl
sahf
popf
out
pop
outsl
mov
inc
iret
lods
mov
mov
fstps
inc
lds
cmpsb
xor
ret
outsb
cltd
add
fsubr
mov
sahf
lahf
push
cmp
cli
pop
mov
cmp
cltd
fldcw
inc
pushf
push
mov
sbb
mov
cs
ljmp
loope
scas
out
rclb
mov
fidivl
pop
ret
cmp
mov
inc
shl
add
icebp
popa
mov
aad
into
stc
xlat
jecxz
xor
lret
ds
cmp
lret
icebp
pop
cltd
fldt
add
adc
cmp
jg
shll
xchg
dec
sbb
repz
fsubrl
in
stos
cmp
adc
sahf
scas
push
or
sub
sbb
stc
pop
mov
rorl
mov
xor
leave
mov
cmc
mov
popl
int
fxtract
add
mov
aam
testl
jle
xor
sti
test
or
test
pop
call
adcb
or
jp
mov
shll
mov
cmp
imul
xchg
dec
xchg
jo
adc
mov
clc
ret
je
movsl
inc
pushf
add
sub
xor
push
in
mov
xchg
ficoml
xor
aaa
lods
aaa
mov
aaa
lds
push
les
sbb
dec
in
scas
nop
es
dec
repnz
sbb
or
pop
add
mov
dec
std
mov
cmp
push
in
faddl
std
bound
js
rolb
push
sbb
mov
lret
jo
and
jmp
shlb
imul
mov
dec
mov
stos
sub
lea
dec
push
sbb
ret
hlt
sti
jbe
ret
xchg
sub
dec
sub
js
sub
jbe
aad
sub
adc
repz
sbb
fs
lock
scas
in
mov
in
sub
fiadds
outsb
ret
mov
xor
shll
push
andb
cli
push
mov
pop
jmp
lahf
movsl
jnp
dec
lods
das
outsb
pop
mov
out
sbb
insl
xor
cmpsb
repnz
adc
xor
sub
adc
ds
xchg
sbbl
lods
cld
lret
pop
std
add
movsl
lods
add
and
push
ds
xchg
mov
and
ret
or
and
dec
call
cmp
arpl
int
ret
xor
loope
ds
xor
mov
in
mov
movsl
out
sub
out
data16
es
ljmp
mov
xchg
and
push
lods
mov
sub
mov
xor
jle
mov
dec
and
sbb
lds
mov
xor
mov
push
or
add
and
xchg
jns
lea
hlt
out
lahf
push
push
pop
jg
adc
leave
das
jle
cmp
pop
in
fnstsw
push
cmp
sbb
mov
jns
clc
jns
jns
cmp
subb
dec
cmp
loop
add
ss
in
cli
mov
and
or
movsb
sub
ljmp
ret
inc
add
jle
fdivr
inc
inc
aaa
dec
mov
xor
lret
in
cmp
popf
insb
movsl
dec
adc
mov
imul
jno
addr16
insl
mov
icebp
je
repz
mov
jo
mov
cmp
out
xchg
mov
jmp
pop
shll
sbb
fs
out
jns
add
push
repnz
daa
xchg
sub
jnp
outsb
lock
enter
fdivrp
mov
sahf
add
pop
pop
inc
and
lods
jbe
into
jmp
fs
push
adc
sti
andb
pushf
fisubs
and
inc
inc
aaa
out
movsb
rcrb
lods
int3
sbb
push
outsl
sbb
in
mov
adc
mov
mov
aaa
adc
call
and
lret
dec
rorb
cld
adc
cli
repnz
cmpsb
aam
scas
aas
cmp
sub
aad
aad
push
or
xchg
mov
insb
pushf
push
inc
push
add
pop
dec
and
popf
lea
fidivl
daa
int
jae
adc
xchg
mov
pop
fnsave
cltd
ret
inc
orb
add
popa
mov
addr16
sub
sub
test
andb
jle
ret
jb
xchg
pop
and
pop
cmp
aas
jmp
jbe
jp
mov
push
jnp
or
cmp
addr16
in
rcll
and
mov
scas
jmp
sub
fisubs
add
fs
xchg
mov
stos
adcb
rorb
cmp
ret
mov
repz
jo
je
fwait
out
stos
jno
or
and
pusha
push
or
lock
add
sub
cmp
data16
int3
mov
arpl
orb
dec
dec
int3
in
das
test
push
push
call
lods
mov
inc
lahf
icebp
xchg
pop
adc
and
mov
or
sbb
sbb
jne
int3
sti
mov
stc
ja
mov
mov
mov
js
or
addr16
add
shrb
pop
divb
repnz
cmp
ret
jp
aad
mov
push
mov
subl
in
cwtl
mov
or
mov
repnz
aad
sbb
jns
mov
test
xor
in
cltd
xchg
cs
cmpsb
add
test
outsb
sub
jmp
mov
sub
in
or
xor
and
out
mov
xchg
shrb
cmpsb
ljmp
mov
jo
cmp
stc
and
rol
int3
mov
mov
fisttpll
aam
xchg
fstl
xchg
imul
pop
insl
fsubs
loopne
mov
arpl
call
bnd
mov
ret
test
xchg
mov
mov
dec
cmp
cmp
and
mov
xor
sub
clc
ud2
mov
es
cmpl
or
sbb
lock
sub
cmp
add
hlt
push
push
inc
jne
pusha
je
jnp
xor
cmpsl
neg
mov
out
xchg
jp
imul
int
xor
pop
mov
jno
leave
xlat
data16
mov
push
rorl
jg
in
xchg
popf
cmpsl
test
or
or
pop
je
inc
cmp
xchg
dec
adc
mov
inc
jmp
test
imulb
popf
rcll
in
imul
loopne
in
adc
mov
fstpt
out
dec
frstor
xor
gs
mov
fidivrs
push
enter
bswap
cmp
les
mov
mov
jae
dec
ds
loope
cs
insl
add
stc
pop
scas
shll
sbb
stc
and
jmp
lds
imul
and
dec
mov
or
insl
lea
add
push
pop
or
sbb
clc
fs
lock
mov
mov
mov
xor
add
or
xor
dec
mov
or
pushf
std
cmc
test
mov
xor
mov
das
jo
xor
orb
stos
jg
mov
adc
cld
xchg
testb
loop
nop
push
pop
sub
shl
divb
call
mov
daa
inc
je
mov
xor
sbb
repnz
lock
out
movsl
and
push
test
mov
pop
push
js
mov
outsb
int3
mov
fisttpl
psllw
sbb
sbb
xchg
push
lcall
cli
push
flds
aas
stos
imul
in
push
add
pop
insb
push
mov
add
aad
lea
dec
mov
mov
fldcw
xchg
mov
nop
shrl
add
movsb
sbb
xor
sub
inc
or
scas
jo
xchg
mov
stos
mov
fcom
xor
fcmovne
leave
out
imul
out
adc
into
rorl
jne
xor
cmc
lods
ret
fimull
push
int
popf
mov
mov
out
insb
rcrl
xchg
fnstcw
shl
icebp
cmpsb
adc
xchg
daa
outsl
outsl
sub
cld
out
jl
xchg
lret
clc
aas
push
dec
or
and
loop
dec
jp
mov
mov
pushw
add
mov
cmp
es
pop
xchg
imul
in
adc
xchg
push
jns
ljmp
mov
pop
push
imul
cmc
mov
fistl
dec
cs
aaa
cs
mov
shl
fsubs
add
fnstsw
dec
out
push
mov
test
add
in
pushf
fcmovbe
pop
xchg
inc
scas
cmp
jp
fdivr
adcl
ja
push
push
stc
ficoml
cltd
mov
in
enter
aas
shl
inc
ficompl
sub
mov
inc
out
loop
ret
adc
xor
or
cmp
cli
cmp
push
outsl
or
push
popf
mov
fistpl
mov
mov
xchg
cs
cmp
imul
dec
repnz
mov
stc
xchg
into
hlt
add
iret
ds
push
and
jbe
repnz
ljmp
add
inc
movsl
ret
mov
orb
orl
aas
jg
je
nop
flds
mov
mulb
test
in
repz
sub
xor
inc
gs
daa
clc
add
push
xor
and
push
xchg
out
insb
icebp
xchg
lock
and
bound
js
out
pop
pop
js
cmp
push
inc
imul
mov
in
idiv
iret
daa
mov
add
stc
dec
pop
fstps
vfrczps
shll
mov
ret
push
cltd
and
and
popf
test
push
mov
decb
fsubrs
rcrb
lcall
mov
adc
vpmovzxbw
dec
mov
movsl
fmull
je
fs
or
mov
inc
inc
push
push
push
andl
cmovne
or
push
scas
into
faddl
dec
arpl
out
lret
daa
mov
mov
inc
bnd
sbb
cmp
in
dec
push
dec
jl
stos
xchg
fsubrp
adc
std
push
adc
popa
lahf
mov
cmp
lods
je
push
movsb
sub
and
inc
loope
adc
mov
lods
das
bound
ja
push
push
aaa
std
jmp
dec
in
xchg
push
add
jae
xor
imul
movsl
add
adc
stos
stos
inc
or
loope,pn
mov
ljmp
shl
std
sub
xor
inc
cmp
lret
xchg
movsl
mov
fprem
arpl
into
shll
in
sbb
push
xchg
stos
fdivrs
hlt
dec
xchg
push
daa
daa
jge
pop
imull
jecxz
imul
imul
out
pop
pop
dec
out
fs
mov
lock
imul
jo
test
mov
je
cmp
repnz
inc
dec
sbb
and
push
inc
add
gs
mov
int3
fwait
adc
mov
mov
movb
xchg
idivb
dec
popa
testb
cmpsb
aaa
inc
and
mov
test
mov
out
jo
fnstsw
loop
fs
adc
mov
gs
lods
imul
in
inc
mov
js
int
rcr
xor
test
sahf
push
jmp
or
inc
popa
jne
and
in
ret
mov
jo
jmp
adcb
out
dec
mov
fcmovne
js
stos
out
sub
out
add
push
call
pop
adc
push
sub
push
rcrl
mov
push
or
in
arpl
and
xchg
sti
cltd
rcl
sarb
gs
scas
jp,pn
mov
jg
mov
adc
aam
cmp
ficoml
addr16
mov
push
adc
xchg
push
mov
jb
loopne
push
mov
dec
fsts
repz
mov
dec
rcrl
sar
push
jmp
xlat
rcll
aam
push
std
fnstsw
repz
jmp
stos
xchg
pop
outsb
inc
icebp
push
fcmovne
jecxz
mov
xor
jmp
stos
mov
dec
stos
and
mov
sbbb
dec
inc
insb
cmp
xchg
call
xchg
stos
popa
jne
add
sbb
ja
aam
lret
push
les
outsb
jl
adcl
xlat
stos
lcall
jmp
fsubl
or
push
push
test
sub
cmp
xor
in
addl
mov
clc
into
out
push
sbb
in
fldcw
push
mov
mov
jne
mov
add
fimuls
pop
data16
sub
movl
cmp
cmp
push
aad
add
pop
sbb
ret
mov
icebp
cmp
mov
bound
inc
shll
inc
cwtl
sub
or
jecxz
gs
cwtl
imul
jge
out
or
jns
std
std
sbb
xor
xor
pop
inc
jnp
push
sti
or
xor
xor
xor
xor
push
enter
loop
dec
sbb
dec
push
gs
fstpl
int
push
ret
inc
lcall
xchg
cld
jb
fisttpl
lea
orb
lret
mov
ja
pop
push
stos
cmp
outsb
push
mov
sbb
pop
jmp
out
lret
sahf
inc
and
push
nop
sub
push
lahf
rol
rolb
fisubl
rcl
lock
xor
fistpll
xchg
and
pop
xchg
sub
ds
mov
sbb
mov
adc
mov
inc
or
lds
xchg
popa
pop
mov
adc
rolb
sbb
add
push
jecxz
in
clc
aad
mov
mov
cmp
mov
in
xchg
xor
dec
ffree
in
in
or
mov
jg
jmp
dec
mov
je
mov
ror
ret
and
inc
and
add
gs
fldl
jp
jb
and
inc
adc
sub
add
cmp
or
icebp
test
cmp
pop
dec
jge
mov
shlb
add
repz
sbb
shll
aad
push
mov
stos
lret
ficomps
fwait
or
xor
push
insb
pop
push
addb
js
mov
in
popa
sahf
movsb
cld
mov
int
mov
cmpsl
and
sbb
outsl
jmp
push
jbe
dec
shrl
push
mov
dec
repnz
and
in
inc
or
rorb
dec
mov
jg
xor
sub
roll
adc
lods
jb
hlt
ja
sub
ret
call
pop
scas
xchg
cmpsl
out
icebp
loope
lods
movsb
xor
mov
stos
pop
test
push
fsubr
testl
sbb
js
mov
jg
inc
std
pusha
jle
push
mov
in
add
sbb
xlat
popa
lods
jle
sub
dec
incl
jl
mov
add
dec
and
sti
cmpsb
movsl
in
fsubrs
mov
lods
outsl
cmc
xchg
adc
mov
stos
dec
test
inc
pop
push
sub
jmp
loopne
fmuls
mov
adc
pop
push
js
outsl
dec
or
cmp
mov
cs
andb
bound
mov
push
cltd
scas
inc
ret
xchg
repz
and
inc
jno
sahf
sbb
fstpt
cmc
cmpsl
fmul
fsubp
jp
out
push
and
mull
iret
pushf
aas
adc
mov
mov
hlt
push
jge
jge
pop
hlt
cmpsl
dec
mov
adc
fstps
pop
sub
test
in
dec
loop
adc
test
scas
push
jbe
int3
xchg
and
jo
rorl
dec
sbb
aas
jl
ss
push
inc
or
fldl
mov
lcall
jp
movsl
mov
loop
aad
frstor
push
pop
pop
push
fucomi
mov
iret
sbb
call
push
rcll
xchg
push
jno
mov
pop
or
xchg
loopne
mov
fwait
lea
repz
stos
dec
pop
pushf
xchg
testl
xchg
mov
aaa
popa
ret
dec
das
dec
insl
ljmp
jle
shr
push
addl
dec
ds
sbb
adc
sub
sub
sub
test
mov
das
and
roll
mov
inc
or
or
js
aam
scas
mov
cmp
inc
movnti
negl
adc
stos
or
jle
fisubrs
jae
shll
xchg
or
mov
add
jmp
ret
inc
lret
cli
lret
sub
sbb
outsb
pop
push
ret
aam
sub
cltd
fsubp
cltd
jae
xchg
stos
loopne
je
sbb
xchg
inc
sahf
mov
dec
int
andb
fdivrl
popf
cmpsl
outsl
inc
sub
mov
push
in
mov
sbbl
dec
roll
push
adc
aam
gs
pop
cs
push
sub
jae
fistps
aas
ljmp
aaa
jbe
or
adc
cmp
push
pop
push
add
pop
sahf
aaa
sub
bound
sbb
lahf
or
or
jno
cmpsl
loope
rclb
xor
rorl
pop
clc
xchg
daa
adc
in
jae
mov
pusha
ret
adc
testb
dec
inc
push
mov
fiadds
gs
lret
or
push
movsb
or
lret
int3
mov
mov
in
cmpsb
dec
test
std
xor
test
mov
int3
push
mov
push
cmp
leave
dec
loope
int3
aad
in
pop
scas
ljmp
scas
cmpsb
sbb
mov
mov
ja
jnp
loop
adcb
aas
ror
std
mov
cmp
cld
cmpl
repz
inc
sbb
or
push
sbb
push
adc
mov
rorb
xor
in
fisubs
repz
lea
mov
lcall
dec
mov
inc
cmpsl
popf
pop
cmp
push
js
jg
mov
out
lods
mov
in
icebp
call
xor
sub
or
add
cs
aas
jmp
call
xchg
ss
aam
mov
int3
mov
lods
les
dec
dec
notl
pop
push
aad
es
enter
insb
or
pop
mulb
push
in
lods
sbb
cld
adc
xchg
mov
sbb
sbb
push
cwtl
xchg
out
pusha
int3
jae
jle
xchg
hlt
sahf
jae
in
or
loopne
push
sbb
cmp
pop
fnstenv
ficoms
arpl
sub
add
mul
into
inc
jecxz
cmpsb
mov
xlat
stc
nop
adc
loope
mov
insb
lahf
idivl
xchg
inc
cmp
mov
sbb
hlt
adc
inc
adc
mov
mov
arpl
loopne
xchg
xor
repz
inc
lock
test
dec
push
in
sbb
int3
inc
out
outsl
int
or
inc
dec
inc
mov
sub
cmc
pop
pushf
inc
outsl
xchg
test
mov
js
mov
sbb
mov
mov
loop
cmp
and
cmp
and
aad
and
add
xor
out
inc
jge
rol
push
mov
pop
pushf
es
mov
cmp
jmp
sbb
add
inc
sub
mov
in
dec
jbe
pop
lcall
scas
stos
sbb
push
shlb
out
cmpsl
or
in
fst
decb
pop
cmp
cmp
add
push
cmpsb
xor
push
das
dec
xchg
lods
js
gs
adc
jg
jmp
xor
mulb
icebp
cmp
adc
in
inc
cmp
fisubrs
popf
insb
lcall
scas
pop
dec
pop
scas
jo
es
pop
mov
into
sbb
adc
and
dec
jae
sbb
sub
xchg
xor
pushf
es
push
sti
popa
ss
repnz
pop
jbe
jge
push
jne
stos
je
and
fwait
push
aad
lcall
mov
sub
mov
mov
mov
pop
imul
mov
je
mov
test
in
pop
test
push
leave
ds
inc
cmp
add
aad
clc
jp
push
push
mov
xchg
cmp
lahf
mov
pop
sub
pusha
add
in
addr16
lods
adc
and
add
mov
adc
xchg
lods
movsl
mov
fwait
loope
ds
mov
aam
aas
cld
loop
xorb
inc
cltd
mov
mov
popa
dec
iret
push
pop
pushf
fnstenv
sub
jne
cmpsl
jmp
scas
jg
int3
adc
pop
sbb
test
mov
arpl
ds
int3
add
mov
pop
iret
enter
sub
addb
mov
mov
loop
gs
jp
ja
or
fwait
not
sahf
inc
mov
push
cmpl
sub
test
adc
test
test
xchg
loop
repnz
je
push
mov
ja
xchg
mov
loop
mov
inc
icebp
lds
xchg
pop
scas
mov
cmpb
in
pop
aaa
les
mov
out
xor
out
pop
pop
xor
cmp
adcl
fnstenv
lret
daa
inc
jp
imul
fldcw
ja,pn
jae
not
rcrb
out
pop
and
jno
fstl
sbb
sub
xchg
cmp
aas
inc
mov
add
lcall
adc
pop
fnstcw
inc
cwtl
outsl
adc
mov
gs
mov
and
ret
mov
dec
insb
add
out
andl
xchg
shlb
dec
ret
dec
lods
mov
dec
mov
orb
je
mov
data16
lret
and
xor
sbb
cmp
and
xor
xorb
icebp
and
cmp
or
pop
jecxz
mov
ds
test
mov
cmp
cs
pop
lods
std
mov
shlb
jo
rcrl
ljmp
out
cld
lahf
cmpsb
test
adcl
out
ds
lret
stos
test
adc
mov
mov
in
sub
inc
or
es
leave
inc
lret
mov
insl
add
adcl
push
popf
pusha
popf
scas
dec
sub
aam
xor
fdivl
negl
jnp
fildl
add
lods
sbb
cs
add
cmpxchg
add
lcall
jbe
bound
addr16
pop
cmpsl
dec
popf
bound
pop
lret
lret
pop
fcomp
jo
cltd
stos
ror
cltd
push
negb
outsl
add
xchg
dec
mov
inc
sbb
xor
iret
sbb
je
xchg
add
inc
aas
push
loopne
xchg
and
pop
and
out
jae
lret
xchg
fdivp
inc
push
and
rol
dec
inc
mov
imul
mov
pop
push
movsl
out
push
adc
cmpsl
add
popa
out
call
and
jp
xor
inc
aad
cwtl
adc
addr16
xchg
cmp
sub
jno
sub
mov
xor
ja
cmp
sbb
enter
pop
sar
mov
repz
arpl
mov
data16
insb
xor
stos
jmp
xor
push
dec
or
sbb
sahf
mov
lahf
push
repnz
or
dec
hlt
sbb
jnp
cmp
adc
test
ds
mov
sbb
xlat
pop
sahf
inc
adc
out
gs
arpl
bound
cld
cld
out
cmp
ss
rcrl
or
fiaddl
sahf
mov
imul
test
js
insl
xchg
stos
mov
mov
insb
jno
mov
adc
jl
jp
pop
inc
int
jmp
inc
aad
jmp
or
lea
and
out
push
lea
xchg
es
into
push
xor
movsb
popa
push
sbb
mov
mov
inc
mov
mov
les
jnp
mov
push
pop
cltd
int3
inc
and
and
out
int
inc
movsb
add
fldln2
lock
inc
aam
aam
in
xlat
and
sub
xchg
sbb
pusha
mov
in
mov
testb
pop
test
xlat
das
xchg
cmpsl
jne
sbb
and
aas
ret
jecxz
aam
push
roll
cmpsl
mov
fwait
push
pop
push
aad
jo
mov
mov
xor
gs
leave
mov
xlat
cmpb
xchg
popa
cmp
add
jae
out
push
data16
mov
add
cltd
push
dec
not
or
mov
xchg
push
pop
xor
rcr
or
imul
sbb
inc
enter
les
test
or
imul
or
mov
fdivr
insl
adc
xlat
stos
push
lcall
xor
inc
ds
dec
add
sub
adc
push
insl
je
rcrl
mov
dec
xchg
mov
rclb
fmuls
inc
push
insl
inc
in
add
xchg
pushf
stc
mov
rol
sbb
mov
dec
les
cmp
adc
popa
pop
call
bound
cmp
xchg
add
add
or
fsts
xorb
mov
jmp
cld
push
mov
sub
xor
decb
ret
jno
test
jae
xor
bound
stos
hlt
xor
xchg
scas
outsb
in
inc
xchg
repz
and
push
jp
iret
lds
push
test
insl
aaa
lods
mov
mov
iret
lea
add
adc
cmpsl
in
cmpsb
dec
lods
dec
stos
adc
mov
pushf
es
xchg
loope
jl
push
mov
cwtl
sti
pop
pusha
push
adc
aas
movsl
mov
lock
cmp
mov
clc
dec
dec
hlt
clc
cmpsb
lds
pop
imul
push
or
sub
xlat
test
stc
scas
popf
add
xchg
pop
xor
cltd
in
inc
mov
or
negl
ss
fcoms
adcl
mov
std
divl
enter
cli
push
pop
fcom
ja
dec
jno
daa
xchg
lods
arpl
mov
pop
xchg
dec
push
mov
and
mov
mov
sbbb
and
mov
xor
gs
cmpsl
or
adc
fdivs
mov
adc
jno
sub
push
xchg
popf
insb
iret
js
cs
jne
push
lea
cwtl
jl
adc
adc
or
popf
push
jns
xor
pop
daa
pop
xchg
sub
sarb
jge
mov
pop
pop
das
mov
xchg
rcrb
mov
dec
xchg
cmp
pushl
mov
popa
jnp
scas
add
in
je
jb
inc
or
test
test
xor
int3
loope
cmp
sahf
add
and
jnp
pop
adc
popf
jo
shlb
sub
js
mov
shll
push
xchg
out
mov
mov
loope
out
mov
cwtl
push
subb
dec
stos
frstor
mov
lahf
ret
imulb
lahf
loope
xchg
cld
and
cli
lahf
arpl
push
or
movsb
movsb
adc
shlb
fwait
addl
shll
fmul
xor
mov
pop
mov
mov
nop
jnp
mov
sti
sub
mov
shl
jg
or
repz
xor
loopne
cld
adc
push
sti
in
push
test
inc
pop
pop
repnz
mov
std
cmp
add
mov
and
scas
mov
inc
hlt
cmp
jnp
imul
inc
lret
xor
lret
neg
xor
sbb
andl
cmp
push
rcrb
pop
sahf
adc
pop
shlb
pop
mov
mov
clc
and
jno
sbb
inc
jns
cmp
jl
xor
and
lods
and
push
pop
jns
xor
cmp
cmp
enter
mov
ja
pop
push
fwait
orl
xor
jle
dec
mov
xor
xor
cltd
xchg
cmp
enter
mov
lods
xchg
cmp
aaa
or
xor
jno
xchg
xor
mov
lds
inc
sub
cmp
bound
add
aaa
sbb
test
aam
insl
dec
cmp
sbb
push
add
data16
push
xchg
xchg
repnz
jecxz
loopne
testl
mov
out
std
mov
adc
cmp
fidivs
sbb
lods
inc
and
pop
out
jbe
and
shll
mov
arpl
ds
jae
xor
out
inc
pop
stos
jnp
pop
dec
sub
add
ljmp
jl
andl
addr16
mov
cmc
mov
addb
stc
pop
negl
shlb
dec
xchg
mull
xchg
adc
pop
ljmp
inc
popf
loop
jnp
mov
xlat
out
cmpsb
push
adc
and
inc
xchg
mov
add
ds
icebp
scas
stos
xchg
imul
cli
test
xchg
repz
rcr
ja
in
push
add
fbstp
pop
popa
in
mov
sub
scas
add
arpl
lea
lret
addr16
and
push
add
push
pop
or
inc
push
lea
fnstcw
push
data16
add
gs
mov
fcoms
sbb
out
adc
faddl
addr16
sbbb
mov
dec
dec
or
out
jmp
and
add
popf
push
adc
inc
jb
and
mov
xchg
aad
dec
and
pop
mov
out
pop
inc
or
outsb
stos
shll
or
push
sti
in
mov
call
movsb
addb
std
lret
mov
cmp
shrl
sbb
cmpsl
ret
loop
adc
repz
mov
add
add
ss
fisubrs
jecxz
mov
stc
or
pop
bswap
jb
adc
adc
daa
mov
pop
dec
mov
or
addr16
ret
jns
les
push
xchg
dec
jo
push
pop
fcoms
imul
cmp
arpl
jae
in
jmp
fidivl
mov
pop
repnz
xchg
daa
mov
add
jo
adc
sbb
insb
jbe
pop
fwait
movsb
mov
push
in
cmp
inc
adc
mov
push
cwtl
das
mov
mov
sub
sub
xchg
push
and
xchg
or
pop
ret
push
cmp
mov
insl
and
add
lods
sub
stos
and
and
pusha
or
sbb
outsl
nop
jno
outsb
mov
jg
outsb
aad
cmp
add
scas
inc
scas
xor
les
and
in
or
pushf
mov
inc
xchg
mov
sbb
push
jno
inc
cli
xchg
cmp
mov
pop
fcmovne
adc
xor
loopne
movsl
or
aas
or
dec
pop
aaa
leave
mov
es
fiadds
xchg
add
ljmp
roll
lods
and
sub
call
lcall
jge
sub
dec
fbstp
pop
and
xor
ss
cmp
cld
adc
pop
xchg
aam
fmull
shl
and
mov
fistl
fdivs
jb
clc
fstpl
xchg
pop
mov
mov
sbb
call
mov
nop
pop
pop
pop
loope
movsb
scas
pop
cmp
dec
mov
mov
cmp
pop
push
xor
adc
or
aad
or
cltd
pushf
xor
imul
leave
push
arpl
xchg
sbb
lea
outsl
in
fstl
and
insl
loope
adc
leave
jge
stc
stos
push
and
push
fmulp
loope
push
aad
push
xor
jns
scas
sub
in
pop
test
xchg
sbb
cld
mov
je
sub
lahf
sbbl
push
inc
and
aam
idiv
or
inc
lret
stos
jmp
mov
or
test
jmp
cmp
imul
iret
lods
les
movsl
inc
jae
pusha
cmp
jno
int3
add
xor
stc
lret
mov
jae
push
push
lea
out
imul
loop
aam
test
pop
lods
or
push
pop
lcall
fwait
out
adc
and
faddl
out
push
movsl
sbb
mov
das
dec
shll
push
std
pop
push
inc
push
and
sbb
sti
outsl
adc
mov
dec
xchg
enter
jle
inc
xor
adc
out
leave
mov
loop
mov
sub
jle
cmp
cmp
inc
and
cmpb
je
in
mov
fcomp
clc
test
push
push
add
andnps
fwait
xor
mov
into
mov
jg
test
xlat
arpl
divb
pop
sbb
jae
mov
and
nop
lret
sub
dec
sbb
inc
add
cltd
into
inc
pop
mov
int3
int
xchg
stos
shll
mov
gs
sar
pop
push
lea
mov
daa
jmp
dec
adc
insl
mov
jge
cli
pop
cmp
out
repnz
mov
and
ss
pop
mov
and
decb
xchg
dec
mov
pop
sbb
add
insl
in
push
xlat
xchg
mov
pop
jnp
negl
mov
inc
imul
mov
and
adc
inc
mov
sbb
push
add
popf
arpl
and
mov
cmp
ret
pop
shrl
pop
dec
ret
jecxz
or
and
std
insb
cmp
pop
pop
xor
sbb
orb
outsb
jb
test
push
andl
lock
add
mov
dec
mov
sub
fidivrl
or
addl
cmp
mov
mov
les
sub
sbb
xor
das
xchg
dec
fidivl
leave
aaa
pop
dec
outsl
add
nop
fs
push
xorb
fsubrs
fstpl
xor
test
in
jo
pop
dec
mov
pop
dec
pop
dec
outsl
or
mov
sub
or
ja
fistpll
test
xchg
test
ljmp
mov
add
jo
pusha
xchg
arpl
adc
xchg
iret
flds
lret
xor
imulb
adc
cmp
xlat
pusha
inc
mov
mov
cmpsl
add
or
mov
int
scas
dec
xchg
mov
sub
mov
mov
push
mov
fxam
bound
push
into
outsl
les
xchg
cmove
ret
lret
push
lss
ret
mov
adc
cltd
cwtl
imul
incb
insb
add
xor
ficompl
cmc
pop
push
and
je
adc
icebp
push
fcomps
or
push
mov
movsl
sar
fisubl
cs
outsb
ja
ret
icebp
push
into
je
pusha
clc
fs
xchg
ret
insl
add
cld
adc
xchg
mov
jmp
lahf
dec
sti
gs
aaa
adc
dec
dec
mov
dec
cmpsb
fprem1
jg
and
adc
xor
pop
mov
rclb
sbbl
outsb
xchg
andb
sbb
aaa
push
mov
pop
xchg
pop
xchg
inc
in
scas
xchg
addr16
inc
push
mov
lock
inc
xchg
mov
shr
jmp
sub
pop
test
jle
pusha
cmpsl
movsl
ficomps
fsts
mov
lcall
xor
and
nop
aam
fldt
push
pushf
jle
mov
pop
jp
ret
and
jle
adcb
cmpl
out
mov
cwtl
out
int
rorb
sbbb
and
outsl
adc
je
sti
es
pop
ret
ret
in
sub
cmp
pop
lods
test
sbb
insb
icebp
out
lret
and
jb
xchg
push
jmp
jmp
shll
pusha
fidivrl
and
std
or
sub
inc
iret
lahf
dec
inc
xor
mov
adc
pop
nop
sub
jp
fcomip
ja
inc
cmp
push
adc
push
popa
hlt
rclb
test
mov
rol
sub
xchg
cmpsl
mov
sub
adc
add
into
outsl
in
sub
mov
cmc
lods
imul
lea
fs
test
shl
mov
dec
xor
pop
cmp
mov
lcall
sub
das
fdivl
test
push
adc
fldt
lret
pop
pop
pop
popa
jnp
divl
xchg
add
stc
aas
sbb
pop
mov
add
dec
pop
xchg
inc
movsb
andb
xor
jge
or
cmp
lods
mov
lods
mov
data16
mov
test
sub
ror
add
jne
add
sbb
mov
outsb
mov
iret
cmc
or
mov
ficomps
testl
cmp
or
movsb
mov
jp
xor
mov
adc
sbb
lahf
inc
cs
out
call
aaa
mov
mov
pop
mov
and
xor
daa
inc
shrb
and
inc
ljmp
pop
mov
inc
arpl
inc
add
mov
and
cld
pop
mov
lods
movsb
mov
inc
enter
sub
fnsave
mov
and
lods
scas
addr16
test
stc
lock
ljmp
cltd
add
test
push
jge
inc
aam
mov
pop
xlat
add
cmp
mov
test
out
inc
mov
and
in
nop
cmp
pusha
testl
ret
mov
fwait
pop
xchg
loope
insb
cmp
or
ljmp
in
xchg
addb
repnz
sar
fmull
pop
mov
dec
dec
mov
rorl
aad
shll
pop
jge
lahf
xchg
xor
ret
inc
pop
fbld
mov
aaa
data16
repnz
cs
adc
mov
sub
jmp
in
xor
jmp
mov
int
cld
adc
sti
add
scas
setne
adc
inc
and
loopnew
inc
test
clc
adc
fidivrl
or
outsb
scas
pop
test
sahf
cmpsb
xchg
xchg
mov
outsl
cmp
mov
popa
movsl
test
and
sub
sti
in
scas
mov
add
add
test
push
cmp
stos
cmp
dec
in
cmp
jno
adc
loop
jne
ret
idiv
push
mov
add
dec
test
shl
sub
iret
inc
ljmp
ret
inc
negb
sarb
gs
push
lcall
ds
and
addr16
sbb
add
and
repz
pop
in
lods
dec
mov
into
ja
lods
jl
outsl
js
rolb
arpl
out
pop
jl
mov
fwait
divb
mov
pop
sbb
std
push
dec
orb
push
es
or
mov
xchg
shlb
pop
mov
push
mov
scas
adc
mov
pop
daa
je
or
mov
out
mov
repz
shll
test
test
test
jo
jmp
sbb
xchg
pop
mull
sub
sub
fidivrs
testb
aas
pushf
lcall
call
cmpsb
movsl
cli
imul
xchg
jecxz
and
int
imul
hlt
mov
jnp
inc
lret
add
pop
jnp
mov
aam
lret
inc
inc
pop
lock
jp
push
adc
test
or
pop
pop
xchg
mov
in
jae
xlat
rcll
add
jl
scas
loopne
js
inc
sti
cmpsl
mov
lock
scas
jecxz
cmp
dec
inc
shl
or
repnz
push
js
loopne
push
fwait
or
pop
lcall
in
sbb
mov
cmp
in
div
ret
lahf
jbe
cmp
xor
sub
popa
push
sub
out
pushf
lahf
adc
lds
push
inc
cmp
xchg
clc
xor
dec
cs
pop
pop
jle
jge
fwait
out
repnz
test
stos
stos
scas
mov
iret
and
xchg
or
inc
outsb
fsubrl
cmp
xor
mov
ret
push
rcrb
rorl
jmp
cltd
stos
fsubrs
arpl
mov
nop
clc
mov
mov
cmp
cmpsb
pop
and
and
les
ja
fdivs
gs
loop
loopne
xor
inc
pop
sub
xchg
xchg
jmp
pop
push
pop
cmp
int
sbb
repz
push
pop
or
add
fcmovbe
jl
in
pop
xchg
cmc
xor
sub
push
lret
mov
cmp
jb
imul
and
jmp
or
mov
je
hlt
shrb
and
xor
mov
or
test
push
mov
lods
mov
pop
aaa
outsb
lret
and
jge
pop
leave
jge
pop
cltd
sbb
jb
add
pop
sub
jmp
test
test
sub
inc
mov
pop
test
loopne
iret
aaa
inc
mov
sbb
scas
push
mov
mov
jo
sbb
fidivs
lods
lret
cmpsl
leave
adc
ror
pop
xchg
dec
push
js
adc
mov
das
jo
push
rorb
test
mov
jns
in
xorl
jecxz
inc
mov
arpl
out
inc
insl
push
jmp
mov
lods
sub
jnp
scas
pop
pop
inc
mov
xchg
loop
add
mov
setae
movsw
sbb
nop
dec
pushl
mov
test
cmp
adc
les
jmp
dec
inc
out
dec
ss
dec
mov
icebp
fdivs
cmp
std
mov
inc
ret
rol
roll
sbb
push
out
xor
jle
pop
inc
sbb
sub
or
movsb
inc
mov
roll
imul
int3
cmp
aas
cld
movzwl
xchg
adc
mov
int
jno
lret
mov
mov
clc
or
sub
gs
pop
lods
notl
stos
inc
xchg
and
enter
cs
mov
fstpl
jns
out
in
jmp
cmpsb
jp
pop
lea
cmp
pusha
push
ljmp
jo
outsb
dec
mov
and
data16
adc
pop
daa
mov
adc
popf
in
push
leave
fstps
clc
cs
andl
lret
ja
vpmacsswd
int
adc
and
adc
notl
dec
mov
mov
dec
subl
pop
cmp
inc
stos
add
jecxz
fstl
arpl
pop
ror
cmp
push
inc
adc
add
mov
dec
mov
pushl
pop
adc
cmc
sbb
cmp
sbb
sub
jb
mov
out
or
push
out
mov
xor
das
and
dec
movsl
dec
push
cmp
pop
hlt
loope
sub
push
push
inc
cmc
pop
pop
inc
outsb
adc
test
pop
mov
pop
cmp
ss
aas
cli
mov
jne
rclb
xchg
cs
pop
push
pop
add
cmp
dec
xlat
push
int3
pop
sti
xchg
mov
dec
fstl
scas
mov
ret
insl
pusha
cmc
inc
mov
pop
insl
aam
mov
dec
mov
add
mov
add
popa
ja
arpl
and
cmp
mov
jns
push
push
adc
jmp
int
ja
inc
dec
es
xchg
in
mov
testl
mov
testl
pop
stc
shll
xlat
inc
push
shll
or
cwtl
dec
ret
lcall
incb
sti
cld
lret
icebp
mov
adc
or
jle
insl
mov
sub
mov
add
pop
lods
xor
mov
mov
sub
aam
ljmp
cwtl
push
popa
stos
dec
add
cmc
pop
push
std
es
push
js
or
imul
jnp
xchg
pusha
push
xor
jge
add
bound
sbb
xchg
in
sub
andb
movsl
mov
push
and
push
sbb
popa
jmp
cmp
mov
int3
mov
repnz
sahf
xorl
push
fwait
mov
jmp
or
cmc
xor
cwtl
aam
mov
inc
scas
out
pop
or
or
arpl
cmp
sub
inc
movsl
sbb
cmc
or
aas
mov
divb
lds
mov
insb
or
arpl
jecxz
movsb
pop
add
push
mov
or
push
push
cmc
inc
push
fisubrl
sub
mov
test
push
aad
clc
mov
cmp
jmp
push
pop
rcrl
mov
xchg
mov
adc
sarb
movsl
insb
lods
cld
sti
imul
xor
sub
pop
aad
test
inc
adc
mov
mov
aaa
enter
fsubs
mov
pop
test
xchg
jmp
cmp
dec
int3
enter
dec
and
sbb
mov
pop
je
aaa
cs
jg
fcomi
lahf
mov
cwtl
pop
aam
out
xlat
aaa
mov
imul
fdivrs
cmp
aam
dec
scas
in
sahf
xor
sbb
jecxz
mov
jl
mov
movsb
xor
lret
pop
addb
jb
mov
xchg
pushf
pop
es
jb
aam
xor
andl
sbb
cld
sbb
lahf
shl
jns
lds
addb
mov
sbb
ds
sbb
ds
jmp
pop
mov
push
lret
out
jae
test
and
mov
lret
inc
jne
dec
adc
mov
mov
or
je
shl
push
jmp
cmc
or
lock
outsb
add
adc
xor
jmp
sbb
sbb
jb
fcmove
xor
mov
js
mov
and
push
outsb
shrb
xlat
and
and
dec
arpl
or
mov
ret
xchg
pop
pop
nop
add
out
shl
and
adc
fldenv
xchg
and
rolb
mov
rorb
xchg
add
sbb
mov
stos
mov
adc
aas
adc
cmc
jns
enter
adc
cmp
cwtl
xchg
adc
lea
inc
mov
popa
negb
mov
or
and
push
call
fidivs
cmp
rcrb
faddl
lods
aam
das
jno
dec
popf
inc
mov
jno
scas
dec
pop
mov
mov
push
push
mov
pop
pop
arpl
jno
jbe
pop
scas
xchg
clc
lods
jge
sarb
pushf
mov
jl
cli
jge
popf
notl
out
push
or
sahf
push
jle
das
xchg
xchg
ret
pop
pop
push
pop
sbb
inc
jb
or
push
xchg
ret
pop
mov
mov
pop
or
rcll
insb
mov
inc
rcrb
xor
test
call
xchg
bound
pop
pop
push
mov
jb
or
mov
hlt
xor
lret
lcall
xor
rolb
xor
scas
int3
test
jmp
cmp
inc
sub
cld
daa
inc
mov
gs
cmc
mov
sub
sbb
or
add
divb
mov
jge
cmp
sub
sti
push
cmp
pop
add
jnp
les
jmp
in
test
test
aad
add
data16
cmp
inc
lock
fistpll
ret
adc
je
mov
je
std
movsb
or
fstps
push
sub
mov
push
pop
int
inc
aad
and
jae
repz
sub
xor
inc
mov
and
push
lret
imul
jns
jge
xchg
adc
das
inc
insb
xchg
adcb
pop
sbb
in
mov
insb
in
adc
sbb
mov
repnz
dec
ss
mov
adc
shl
xchg
loop
and
or
test
jge
xchg
lret
and
xchg
adc
push
mov
ss
add
popl
shlb
pusha
xchg
lock
mov
dec
ffreep
jle
xor
dec
sahf
insl
mov
xchg
jle
inc
add
nop
pop
mov
xchg
dec
cwtl
add
jmp
pop
push
adc
sti
dec
loop
push
push
pop
add
or
dec
sub
cs
jns
xchg
pop
cmp
int3
std
pop
das
xchg
sub
out
pop
xor
sbb
popf
inc
add
imul
cli
lcall
cltd
xor
shlb
cvtdq2ps
xchg
ljmp
sbb
adc
adc
loopne
push
hlt
lahf
mov
js
aad
sub
cmpb
pop
jns
mov
test
xchg
sahf
dec
fiaddl
imul
call
cmp
push
jge
jp
inc
mov
mov
cmp
arpl
push
repnz
xor
push
push
adc
ja
testb
fs
jnp
push
push
inc
hlt
mov
popa
repnz
jnp
cmp
call
jl
and
js
int3
leave
jae
jl
rol
jle
push
inc
dec
xchg
xchg
pop
call
in
pop
adc
add
mov
mov
popa
cmp
jg
mov
pop
adc
inc
mov
leave
or
addr16
dec
mov
fsubrl
add
lods
aaa
cltd
insl
mov
pop
xor
stc
sti
bound
inc
imul
iret
sub
or
outsl
enter
mov
jmp
dec
out
dec
insl
loope
and
sub
mov
out
sub
pop
insb
push
sub
adc
test
loopne
sbbb
enter
or
push
shrl
adc
scas
bound
adc
inc
xchg
mov
mov
lcall
dec
jns
daa
push
cmp
cmpsl
shrl
add
jl
mov
xchg
ficoml
cld
in
push
sub
xor
imul
jge
mov
push
push
xchg
mov
std
cmp
fstpt
xor
shlb
xor
arpl
jmp
push
adc
xchg
imul
mul
xor
jnp
stc
ret
xor
aad
push
out
inc
insl
neg
mov
mov
add
mov
leave
arpl
push
int
repnz
into
je
pop
push
sub
mov
cli
pop
xchg
test
jb
inc
push
fbstp
add
loope
scas
fisubl
popa
mov
data16
ss
mov
adc
hlt
mov
fsubrl
stc
mov
in
icebp
cmp
stc
popf
aam
fists
dec
jbe
or
pop
mov
push
mov
cltd
sub
nop
sbb
jl
nop
in
inc
mov
loope
add
jno
clc
xchg
aaa
repz
cmp
sahf
insl
scas
movsl
jmp
mov
idiv
dec
jmp
mov
mov
mov
popf
jmp
push
fwait
mov
mov
adcb
fldl
add
pop
or
bsr
adc
xchg
data16
jnp
test
and
sbb
and
hlt
sub
pop
dec
jmp
dec
aaa
cmc
jnp
cmp
fwait
sbb
fcmovnbe
ja
xor
aam
xor
dec
fidivs
push
outsl
in
fwait
push
pop
mov
push
gs
sahf
lods
insb
dec
cmpsb
mov
dec
add
add
fnsave
sub
ror
stos
in
push
push
ret
js
pop
iret
dec
mov
cmpsb
push
lods
les
ret
mov
and
mov
das
add
pop
cmp
sub
xlat
test
imul
and
mov
dec
lret
pop
or
add
loope
mov
add
scas
sahf
mov
popa
jb
mov
inc
hlt
imul
enter
fwait
push
inc
repz
sti
mov
outsl
xchg
out
sbb
adc
add
gs
pop
jae
loope
jne
pop
adc
fisttpll
adc
push
lcall
sbb
push
rcrl
mov
int
cld
adc
pop
push
in
fisubrl
loope
adc
loopne
sub
cld
xchg
cld
mov
cvtps2pi
adc
cmpsb
bound
lcall
or
sub
jmp
add
stos
push
mov
jg
icebp
fs
cmp
sarl
jns
cmp
inc
mov
pop
jmp
mov
push
fadds
mov
dec
mov
jp
cmp
daa
adc
jle
adc
mov
rorl
pop
aaa
push
cmpsl
sub
mov
outsb
cmp
pop
inc
cmp
push
xchg
xchg
jmp
dec
lds
sti
into
stos
test
gs
test
leave
add
test
xchg
fidivs
add
loope
imul
cmp
fs
lods
mov
xchg
push
inc
or
in
sub
push
jbe
lods
js
cwtl
in
mov
hlt
mov
inc
stos
out
push
out
mov
scas
push
mov
xchg
push
inc
mov
pusha
cs
jnp
jecxz
push
movsbl
add
pop
sbb
cmp
inc
mov
fcomip
insl
mov
xchg
and
lahf
mov
stc
cmpxchg
ret
nop
out
mov
add
popa
jmp
add
push
cmp
icebp
sbb
sub
push
cmp
dec
dec
aam
in
aad
rol
xor
das
imul
jg
test
dec
movsl
imul
icebp
xchg
arpl
cld
cmpsl
push
out
pop
mov
dec
mov
dec
pop
or
out
adc
xchg
int3
loop
sub
stos
mov
or
nop
lods
xor
pop
sbb
in
fsubrs
inc
std
cmp
scas
sub
adc
sti
daa
push
mov
cmp
xchg
push
mov
int
test
pushf
jo
inc
mov
mov
mov
stos
dec
insb
je
cmpsl
out
ret
repnz
xor
stos
movsl
into
xchg
scas
jnp
cwtl
jg
in
cld
mov
mov
adc
sbb
xchg
cs
xchg
cmp
mov
sub
add
sub
ss
das
jae
cli
lahf
push
add
adc
and
lea
add
sbbl
mov
mov
push
or
fsubrl
imul
loop
sbb
fdivrl
push
movsb
inc
fistpll
add
pop
insb
inc
or
insl
add
dec
push
add
flds
sar
xor
mov
fs
mov
loope
pop
prefetchwt1
sbb
push
sbb
xchg
cwtl
xchg
rolb
stc
sub
mov
sbb
jecxz
sbb
sub
xor
popa
fs
jae
xchg
cs
dec
mov
aaa
ss
jl
insl
mov
fmull
mov
loop
cmp
cmpsl
std
dec
sbb
jge
cmpsb
jmp
dec
dec
push
leave
push
or
int
jle
pop
and
push
jmp
fnstsw
stc
sarb
push
fldcw
mov
sbb
cmp
or
sub
xor
and
faddl
add
stos
or
add
pusha
lahf
jbe
mov
addl
jle
addr16
sub
ficomps
adc
cwtl
and
std
xlat
stc
daa
mov
push
lds
or
jo
pop
rcr
pop
gs
ret
jae
add
mov
push
mov
pusha
arpl
cmp
pusha
inc
push
mov
xor
mov
cmpsb
jg
push
mov
pop
xor
xchg
inc
xlat
pop
xchg
xor
xor
dec
setne
jg
dec
sub
lcall
or
or
cwtl
dec
sub
dec
inc
pop
xor
or
jp
aaa
imul
add
jns
xchg
inc
mov
sbb
push
dec
inc
std
stos
xor
sbb
sub
mov
dec
mov
stos
inc
dec
mov
stos
jno
mov
sub
mov
pop
adc
int
inc
stos
pop
ficompl
int
in
and
mov
xchg
mov
xor
cli
aaa
inc
jns
xchg
test
pop
hlt
je
mov
iret
pop
mov
mov
shlb
inc
mov
mov
fldt
repnz
inc
insb
jae
pop
pop
adc
mov
pop
lret
ret
outsb
inc
add
jb
mov
movsb
iret
imul
cmc
lds
inc
xchg
cltd
insb
divb
xlat
adc
dec
inc
xchg
lret
sbb
push
mov
das
jmp
into
test
xor
lcall
popf
ficomps
sbb
mov
pop
or
sahf
andb
aam
decb
jl
dec
fstpt
jns
data16
leave
add
mov
das
cmpsb
mov
mov
ret
lret
mov
xchg
out
fwait
xchg
mov
mov
icebp
adc
pop
lods
dec
mov
test
or
xchg
mov
loopne
lock
sti
movsl
xchg
mov
push
xor
cmpsl
stos
xor
lahf
sbbb
jnp
jl
ror
adcl
enter
dec
cmpb
add
inc
flds
or
stos
or
movsl
pop
rclb
mov
lret
dec
pop
xchg
mov
into
cmp
pop
int3
pop
jmp
dec
mov
inc
cmp
outsb
movsb
adc
rcrb
cld
outsb
pop
mov
mov
loop
and
mov
icebp
pushf
mov
pop
popf
int
dec
pop
pop
jmp
jb
shlb
xor
pop
inc
mov
loopne
es
xor
fisttps
imul
pushf
out
and
mov
aaa
cli
loope
mov
andb
mov
push
add
jp
dec
and
xor
dec
stos
inc
adc
inc
lahf
imul
mov
mov
mov
jl
adc
jno
imul
scas
ror
pop
fldt
jg
add
or
mov
outsl
repz
or
scas
lods
sub
lret
repz
ret
pop
pop
inc
mov
cmp
out
int3
rorl
xor
pop
sahf
std
jne
ret
pop
test
into
out
mov
inc
mov
sub
jns
cmp
push
ret
and
push
mov
xor
mov
sub
mov
mov
je
orl
das
jo
and
or
xchg
pop
add
add
lcall
outsl
jg
push
or
insb
adc
test
sub
movsl
insb
xchg
adc
mov
orb
je
xchg
xchg
dec
pop
push
mov
cmp
das
bound
xchg
cltd
out
lcall
dec
jbe
es
xchg
out
popf
jecxz
fisubs
clc
dec
std
je
pop
ds
sar
inc
xchg
ficompl
xchg
jno
aas
das
pop
mov
dec
pop
mov
jb
mov
out
ret
xor
repnz
scas
xor
xchg
push
and
mov
jns
xor
adc
mov
inc
leave
mov
push
push
push
jle
testb
pop
je
mov
pop
lods
pop
or
jmp
lret
in
xchg
call
ljmp
popa
loopw,pn
pop
lahf
mov
dec
lahf
gs
add
xchg
xor
xor
push
bound
adc
jle
and
xchg
xchg
xchg
mov
xchg
mov
add
cmp
cmp
daa
les
test
xlat
add
daa
shrl
scas
or
leave
cmp
sub
inc
sarb
jecxz
pushf
pop
push
mov
cmp
leave
cmp
adc
sub
pop
mov
inc
cmc
add
mov
cli
pusha
jecxz
fsts
dec
dec
lock
dec
sub
lret
mov
sbb
dec
push
rep
xchg
dec
loope
mov
sbb
mov
push
loopne
fwait
adc
cmpsl
test
push
mov
push
add
jmp
push
sbb
xchg
out
mov
cli
mov
xchg
hlt
xchg
clc
sub
stc
cmp
pop
bnd
dec
dec
xor
rolb
cmp
or
je
not
rcl
mov
outsb
xlat
inc
push
sub
xchg
ret
xchg
xor
aad
add
mov
cmp
add
int
out
cltd
mov
mov
jl
mov
fsubs
adcb
mov
nop
pop
add
sbb
and
dec
cmpsl
bound
xor
bound
fwait
mov
sbb
lret
clc
and
adc
mov
pop
dec
mov
nop
jne
xchg
aam
cmp
pop
mov
fldl
sbb
jg
das
xor
or
jns
shlb
lret
cltd
dec
xchg
sbb
ret
mov
mov
or
sub
xchg
or
jle
adc
cmp
pop
lds
int
jle
es
jmp
stc
add
pop
cltd
lret
xor
adc
insl
dec
shrb
sub
sbb
adc
das
test
fldl
pop
nop
push
je
cmpsb
push
xor
jmp
popf
dec
cwtl
or
test
push
fs
cmpb
push
stos
rorb
mov
xchg
mov
inc
mov
popa
int3
stos
stc
push
stos
mov
cmp
lret
cltd
xchg
fnstcw
adc
out
pop
push
xor
fimull
and
xor
movsl
test
mov
fidivs
pop
int3
inc
movsb
movsb
inc
push
add
pop
jnp
insl
adc
aas
pop
outsb
cmpl
xchg
fwait
push
xchg
ficoml
enter
pop
mov
std
jne
sbb
or
les
add
dec
xor
adc
push
lods
dec
call
imul
sarl
mov
cmp
sbb
mov
shlb
push
loopne
push
mov
fbstp
loopne
jo
sbb
cltd
mov
seta
in
or
or
inc
xchg
cld
xor
filds
xor
fwait
hlt
adc
outsl
scas
ds
in
pop
pop
std
sub
psrlq
icebp
xorb
dec
leave
std
clc
cmp
xor
lret
movsb
adc
inc
add
jnp
filds
mov
mov
mov
lret
jnp
insb
test
shll
enter
pop
fisttpl
cmp
adc
jae
adc
cmp
xchg
imul
push
lds
adc
adc
into
cltd
ficoml
push
daa
arpl
xor
enter
xchg
in
xor
out
out
xchg
cs
xchg
inc
pop
mov
mov
mov
cli
xor
xor
pop
movsb
test
aaa
int3
ljmp
sti
leave
in
sarl
push
in
adc
mov
xor
and
into
rcl
push
dec
pop
sarb
cwtl
int3
pop
popf
push
inc
jmp
jo
lods
aam
fcoml
dec
fistps
sar
jns
push
imul
lcall
xor
inc
jne
cmp
jno
lock
lahf
mov
stos
test
xchg
mov
insb
and
sub
jl
cmp
xor
mov
movsl
es
mov
push
loope
insb
inc
jge
rclb
jge
cmp
mov
stc
aam
add
cltd
stc
sbb
ljmp
ss
pop
pop
jne
xchg
pushf
jp
and
pop
cmp
test
clc
xor
sub
pop
mov
add
sub
mov
xchg
add
cmpsl
jbe
cwtl
dec
xchg
push
lahf
xchg
pop
arpl
aam
loop
js
xor
xor
js
mov
adc
js
mov
xchg
test
std
js
popa
inc
add
jb
inc
fdivs
sub
mov
incl
jg
shlb
fstps
jo
fwait
and
adc
dec
xchg
std
data16
xchg
hlt
xor
test
lret
rolb
mov
pusha
data16
pop
out
add
pushf
pushf
fdivr
out
sbb
sbb
nop
jmp
jecxz
in
lcall
or
xor
mov
pop
inc
xchg
jl
xlat
cmp
mov
into
mov
mov
jne
sub
movsb
jle
xlat
xor
mov
xlat
fldenv
inc
mov
mov
or
add
inc
cwtl
lock
shlb
mov
jmp
push
inc
dec
out
stos
jns
divl
std
fistpll
mov
adcl
es
aaa
idivl
jo
and
mov
xchg
mov
orl
inc
test
push
das
mov
decb
cmp
aaa
xchg
orb
push
add
bound
fsts
mov
push
test
lock
fisttpl
lods
push
out
and
pop
test
notb
loop
sub
or
push
cmp
mov
pop
pop
jmp
mov
xor
mov
aas
push
ljmp
dec
lcall
sub
inc
in
mov
andl
inc
lock
fsubrp
xchg
pop
push
and
push
xchg
mov
imul
mov
rcrb
xchg
mov
push
jp
mov
pusha
lret
enter
hlt
sbb
pop
in
fld
orl
das
aad
sub
aam
cwtl
inc
mov
cld
dec
sti
lea
cli
insl
sub
stos
sbb
inc
push
sbb
adc
and
aad
lcall
loope
stos
pop
sbb
das
push
and
popa
push
push
cmp
clc
cmp
adc
daa
adcb
inc
ret
fldcw
idivb
push
fwait
pop
ja
test
push
add
in
les
push
mov
dec
in
xchg
adc
cmpsb
pushf
inc
pushf
push
mov
lods
xor
jae
sub
insb
mov
aas
popf
les
jmp
das
jne
push
xor
pop
sub
or
pop
mov
dec
fcompl
mov
push
outsb
sarb
clc
test
stos
add
or
cli
adc
adc
leave
dec
inc
sub
sub
imul
or
adc
xorl
dec
dec
jo
cs
insl
push
sarl
ds
stos
filds
mov
aaa
push
xor
xor
rolb
push
mov
push
sub
mov
popf
and
int3
xor
fimuls
rorl
fnsave
dec
sbb
mov
test
adc
bound
mov
jg
sbb
and
invd
mov
add
fucomp
popf
add
mov
push
lods
movsl
icebp
cmp
xlat
in
cmp
movsl
mov
outsb
mov
dec
test
pop
shl
mov
mov
dec
addl
push
aad
subb
mov
cmp
mov
clc
cli
fstl
mov
xchg
fistpl
inc
movsb
into
and
jne
popf
ljmp
push
gs
pop
inc
mov
xchg
out
fs
jp
push
mov
in
mov
repnz
jae
rep
int3
rol
int3
mov
mov
mov
cmpl
xchg
pop
cmp
mov
xchg
add
or
imul
sbb
ret
rorl
cmp
js
or
decb
icebp
add
pusha
scas
in
test
insb
cmp
push
xchg
mov
int3
ret
fs
push
mov
fcoml
push
test
jns
sub
cltd
and
daa
and
pop
pop
cwtl
push
imul
inc
andps
bnd
mov
in
leave
shrl
popa
test
insl
dec
pop
xchg
int3
push
and
dec
mov
out
inc
int
mov
pop
sub
mov
push
ljmp
leave
cmpsl
mov
and
and
jge
mov
leave
push
aad
mov
xchg
fmuls
andb
mov
fs
shll
cmpb
xor
in
push
or
cmpsb
sbb
pop
movsl
pminub
push
sub
outsb
movsb
and
push
sbb
xchg
out
bound
insl
cmp
clc
sub
outsl
fdivs
cs
xchg
cwtl
ljmp
cmc
xor
cmp
int
daa
cmp
sub
fwait
clc
add
inc
jge
mov
mov
xor
inc
push
push
es
movsl
add
xor
les
jno
mov
mov
icebp
fsubp
flds
xlat
sbb
dec
sbb
adc
sbbb
loope
cmp
xchg
add
mov
cwtl
in
jmp
mov
xchg
jns
lret
lods
xor
mov
mov
out
cmp
add
mov
lods
sbbb
xlat
into
popa
inc
lret
inc
out
xchg
leave
or
mov
sub
ss
test
xchg
int
xchg
pop
or
adc
stc
test
ja
mov
xchg
testb
or
fdivrl
jg
test
rclb
xchg
nop
xchg
jle
or
inc
mov
sbb
pushf
icebp
mov
adc
nop
leave
xchg
lahf
test
mov
xchg
sbb
xor
pop
sub
in
orl
mov
jb
ljmp
andl
adc
sbb
js
js
ret
mov
fdiv
aaa
mov
jg
faddl
ret
mov
mov
xor
test
or
std
inc
jl
jl
xchg
lcall
mov
flds
jge
dec
jnp
jmp
cmp
push
push
mov
mov
sub
pop
adc
dec
jmp
mov
xchg
push
push
xor
mov
xchg
ss
pop
js
push
jne
sbb
mov
mov
add
ja
outsl
icebp
ds
inc
sub
in
repnz
inc
dec
cmp
stc
xchg
mov
mov
cmpsb
les
or
incl
sbb
ljmp
mov
outsl
shl
lock
push
cmpsb
scas
cmpsl
outsb
push
mov
leave
or
test
ljmp
test
fsubs
sub
pavgb
xor
sub
bnd
test
inc
data16
popf
pop
add
or
call
xor
or
mov
je
es
inc
cmp
and
inc
int3
mov
test
dec
sbb
frstor
xlat
inc
adc
mov
sbb
addr16
push
lock
fnstenv
or
inc
sbb
inc
hlt
enter
push
or
add
sbb
jns
xor
hlt
push
fcmovnb
imul
mov
sub
popf
add
and
sahf
mov
mov
iret
ds
sbb
test
decl
in
cld
movsl
pop
and
out
jecxz
xor
cmp
xorl
sahf
loop
jle
dec
mov
loope
fcomp
lahf
fsubrl
movsb
adc
or
add
pushl
inc
cmpsl
add
scas
sub
lcall
std
dec
push
test
sub
out
jp
jge
fstl
loopne
shrl
stos
pop
in
push
out
daa
dec
lea
ljmp
js
lock
mov
xor
loopne
add
mov
clc
pop
jg
mov
xchg
sbb
adc
mov
ljmp
push
adc
je
and
movsl
out
lcall
mov
adc
fldl
mov
and
pop
mov
push
xor
push
icebp
loope
pop
mov
adc
testl
pusha
and
pop
ljmp
orl
push
adc
rorl
push
jmp
rol
push
xor
mov
idivl
rclb
xchg
ret
and
lcall
out
push
add
pop
in
mov
mov
add
aam
inc
lcall
stos
popa
je
xlat
and
cmp
xchg
int
xlat
clc
iret
daa
add
dec
dec
movaps
test
in
mov
and
subl
sub
bswap
pop
arpl
insb
stos
sbb
cwtl
aam
jg
inc
mov
xchg
imul
int3
add
jns
inc
imul
mov
xchg
mov
push
popa
adc
in
clc
fmuls
inc
sbb
mov
xchg
mov
fcomps
flds
popf
lret
dec
lds
shrl
mov
movsb
es
mov
dec
xchg
inc
pop
mov
mov
sub
add
pusha
push
cli
enter
shrl
sub
movsb
jae
pushaw
notb
outsb
mov
insl
repnz
sub
push
dec
and
mov
push
jo
or
dec
and
test
sub
fs
xor
xchg
stos
jne
push
add
jmp
in
jmp
les
out
mov
insl
ret
and
out
inc
xchg
mov
mov
cmp
mov
addr16
pop
sbb
aad
popa
xchg
jle
in
and
mov
pop
mov
ja
push
fxch
and
pop
out
aas
dec
cmpsb
xchg
pushf
or
icebp
cmp
inc
mov
aas
ret
jecxz
sub
jb
into
push
adc
jp
aad
mov
out
test
jns
loop
bound
gs
mov
mov
xchg
jp
lret
jecxz
inc
daa
cld
mov
jmp
mov
insl
pop
jmp
push
push
movsl
out
mov
and
jge
test
jecxz
or
add
pop
mov
inc
push
cmpsb
xchg
aaa
push
add
mov
mov
jbe
test
je
fs
stc
pop
js
dec
sti
push
pop
cld
push
adc
push
sbb
cwtl
pop
pop
lea
lds
ret
sub
jns
lea
loop
movsb
mov
scas
mov
pusha
fs
sbb
cmp
movsl
std
and
inc
nop
das
pop
sub
xor
ja
lret
xor
adc
add
jmp
mov
xchg
lock
pop
movsl
lds
inc
out
lret
sub
cmp
inc
out
mov
push
cld
inc
dec
clc
fwait
cmpl
je
into
ja
xor
lods
popa
lret
scas
jecxz
pop
lds
adc
lcall
jno
cmp
dec
inc
adc
popf
inc
sbb
mov
repnz
shrl
test
inc
jns
es
cli
xchg
and
stos
xor
cltd
cmp
mov
jnp,pn
push
mov
sub
mov
xor
fsubr
cmpsl
clc
push
and
lcall
ds
data16
rorb
mov
cli
sub
daa
mov
testl
sub
lds
test
das
loope
repnz
mov
lock
sahf
sbb
push
pop
xlat
pop
pop
out
adc
cmp
xlat
sbb
in
jp
jne
jecxz
mov
stos
pop
hlt
mov
jno
fldlg2
sbb
cwtl
call
loop
dec
mov
jae
inc
xchg
outsl
ss
sahf
jae
pushl
repnz
in
outsl
in
lds
and
je
mov
sub
shr
pop
je
pop
outsl
call
pop
fidivrl
rep
and
lods
mov
and
xchg
push
stos
sbbb
test
and
push
adcb
outsl
aad
test
lret
out
sti
out
in
cwtl
lahf
out
sub
dec
jl
negl
mov
mov
movsl
pop
add
jecxz
mov
or
mov
push
mov
push
fsubr
loope
inc
adc
push
ret
jmp
lods
cmp
shrl
int
je
pop
icebp
repz
ror
sub
xchg
mov
push
fmuls
mov
or
subb
inc
pop
push
jmp
mov
inc
push
enter
or
idivb
pop
ret
dec
cs
les
int
ficomps
sub
cmp
insl
scas
sbb
loop
adc
mov
inc
sti
jo
inc
shll
push
mov
sti
xchg
rcrl
dec
fistpl
popa
mov
rclb
cltd
hlt
push
jg
or
mov
test
imul
inc
jns
std
add
call
pop
mov
cmp
sbb
push
sub
push
mov
arpl
cmp
or
pop
xchg
mov
push
add
rcrl
ret
jge
sbb
mov
aad
pushf
loopne
xchg
jle
mov
xor
inc
cmp
xlat
and
scas
outsb
and
sbb
icebp
vaddsubpd
repnz
rcll
pushl
sub
mov
mov
mov
mov
mull
xchg
into
jmp
repz
aad
leave
cmp
addr16
pop
out
and
xchg
imul
push
xchg
mov
dec
sub
jl
lret
push
stos
fnstcw
out
inc
fdivl
push
shlb
xchg
add
mov
dec
lock
stos
ss
lods
xchg
aad
es
inc
cmp
jg
and
data16
leave
lods
dec
jge
dec
push
mov
xchg
insl
lock
movsb
xchg
inc
sub
in
aad
iret
bndstx
xor
pusha
addl
jns
dec
adc
pop
or
mov
adc
sub
dec
call
imul
aad
fdiv
lds
fdivrs
jge
or
shl
lcall
imul
stos
cwtl
int3
rorb
mov
jge
xchg
dec
int3
jnp,pt
sbb
xor
or
jl
or
pop
addb
ror
dec
dec
pop
pop
mov
cltd
or
cs
hlt
pop
ljmp
imul
inc
xchg
cmp
fisttpll
xchg
and
inc
sbb
push
mov
ror
aas
cwtl
je
outsb
dec
and
add
mov
test
pop
mov
fisttpll
cmpsl
mov
mov
pop
cmpsb
repz
add
mov
adc
ds
pop
mov
dec
cmp
dec
push
adcb
or
dec
pop
adc
sbb
mov
mov
push
aas
sti
ljmp
adc
cmp
sub
add
adc
cmc
add
or
sbbb
jo
imul
aad
add
push
clc
nop
in
mov
adc
lret
mov
mov
out
or
shr
inc
out
cmc
pop
lock
inc
xchg
ss
add
dec
cmc
push
fst
fadds
das
rol
arpl
cmp
dec
sub
add
sub
movsl
pop
ds
inc
mov
fcmovne
and
stos
mov
mov
fwait
notb
pop
jmp
mov
push
or
fwait
bound
cmp
xchg
pop
push
rcrl
jge
movsl
repnz
out
enter
mov
xor
or
push
into
xchg
out
sub
sti
jae
leave
cltd
les
push
xchg
sbb
xor
mov
test
inc
adc
into
mov
mov
cmpsb
idiv
outsb
imul
mov
cmp
add
das
sbb
and
cld
jnp
mov
xchg
jge
mov
fst
xchg
ja
insb
div
xor
pop
pop
mov
jmp
repz
incb
iret
sub
sub
gs
popf
pushf
cmp
pop
leave
mov
jo
into
cmpsb
inc
loop
mov
je
ret
mov
jbe
push
pop
in
dec
out
or
rol
push
loopne
xchg
mov
dec
rorl
mov
jecxz
movsl
or
xor
stos
ja
xor
les
mov
adc
aas
mov
out
cmp
push
mov
leave
enter
cltd
sub
cmp
popf
in
test
xchg
ja
xlat
vmread
pop
ja
sub
lea
push
xchg
out
mov
fiadds
jmp
cmp
das
mov
and
and
adc
call
stos
adcb
into
sbb
jne
pop
fisttpl
outsb
cmpsb
insb
or
rorw
insl
dec
pop
js
pop
sbb
dec
xchg
data16
mov
push
xlat
or
imul
push
data16
lahf
mov
adc
sahf
imul
loopne
jge
insl
movsb
cmp
inc
insb
outsb
inc
mov
outsb
mov
add
bnd
mov
pop
push
cld
outsb
pop
xchg
push
cld
incb
pushf
xor
pop
dec
and
jp
pop
push
data16
ret
or
jle
inc
cmpsb
xchg
jne
jae
jb
mov
lock
ljmp
xlat
call
enter
cmc
jnp
movb
insl
lds
sahf
xchg
mov
in
inc
into
ljmp
or
cmp
lods
sti
or
mov
inc
push
or
hlt
mov
jmp
cmp
inc
sub
imul
divb
scas
je
inc
bnd
ja
pusha
fldenv
xchg
jns
inc
cmp
mov
nop
sbb
ret
je
add
out
mov
push
pushf
lret
xor
repz
cmc
sbb
out
ret
in
imul
pop
adc
loope
jno
inc
clc
rcl
sub
divl
jmp
push
js
sbb
hlt
pushf
dec
lcall
mov
jo
or
aam
sbb
insl
addr16
fmuls
lret
cmp
push
adc
stc
cmp
dec
hlt
jns
fwait
sbb
jmp
add
pusha
xchg
xchg
bnd
stos
inc
mov
imull
cmpsl
pop
jmp
mov
cld
push
mov
pcmpgtd
cmp
xchg
dec
call
mov
mov
stos
addb
jo
jbe
cltd
push
pop
sbb
in
cs
outsl
push
lret
mov
jae
inc
fdivrp
jmp
fidivrl
daa
push
out
ret
xor
insl
push
push
in
push
test
push
test
inc
cmp
cli
and
in
sub
adc
fdivl
aas
cmp
dec
dec
fidivrl
aam
std
aam
das
prefetcht1
xchg
pop
jns
cli
enter
cli
adc
adc
mov
mov
mov
push
sahf
sub
adc
push
push
cmpsb
in
xor
mov
pop
jmp
sub
mov
inc
addr16
inc
mulb
or
jecxz
cwtl
mov
addr16
sub
les
lret
mov
xor
rorb
sub
pop
push
sbb
loopne
in
outsb
cmp
add
sub
xor
mov
es
and
cmp
inc
adc
pop
jge
popf
lods
adc
add
dec
mov
inc
aaa
das
addr16
sarb
pop
iret
inc
cmp
sbb
test
or
jge
adc
stc
add
jecxz
aad
imul
call
pop
ds
mov
inc
sub
outsl
pop
push
and
pop
fistpl
cmpsl
mov
sbb
pop
push
int3
adc
xchg
inc
cltd
mov
sub
test
mov
in
cwtl
cmp
dec
cmc
mov
or
mov
pushf
and
add
adc
in
fistl
xchg
aaa
clc
adc
cmp
test
arpl
mov
mov
fsubrl
push
add
mov
scas
or
das
add
add
test
sub
add
mov
xchg
lahf
jno
iret
into
jbe
aaa
jnp
or
sbb
xor
xchg
fwait
sbb
mov
push
int
and
pop
sti
adc
cld
adc
out
mov
xchg
pop
mov
mov
call
jne
in
scas
je
arpl
xor
sbb
out
inc
lock
fstl
sub
sub
mov
sbb
frstor
and
pop
out
xchg
xor
insl
push
ret
andl
sub
negl
mov
out
loopne
scas
je
or
adc
fldt
ret
mov
cltd
push
xchg
filds
dec
jle
out
lods
dec
mov
mov
or
nop
mov
out
fists
mov
add
cwtl
addr16
jmp
ret
xlat
mov
cmp
inc
inc
cmp
inc
push
popf
insl
pop
and
xor
mov
pop
outsb
int3
enter
inc
sub
std
ljmp
into
scas
or
mov
push
xchg
jb
jecxz
sbbb
inc
ss
pushf
mov
push
pop
pop
int3
sti
sbb
inc
mov
inc
adc
xor
xchg
bound
sub
gs
push
pop
pop
dec
stos
cmpsb
push
or
xor
clc
sti
adc
negl
jl
pop
cmovo
aas
mov
push
into
movsl
inc
fwait
inc
int3
xchg
add
xlat
mov
push
push
ret
and
and
jl
fisubl
out
dec
mov
inc
ficompl
cmp
ss
push
or
dec
and
imul
pop
orl
ja
fstpt
int3
sbb
inc
jl
testl
push
lods
push
sbb
jecxz
scas
out
ljmp
mov
sub
aad
jmp
ret
xor
and
add
and
ud2
int3
jae
scas
mov
faddl
push
jnp
pop
stc
push
mov
dec
jno
daa
mov
ds
jnp
push
in
lret
or
or
fwait
add
add
sbb
sbb
xchg
mov
rclb
enter
js
cmp
cli
pop
mov
iret
push
push
adc
xchg
dec
leave
inc
lods
mov
shlb
fadd
inc
add
push
push
int3
fwait
mov
xor
into
cmpsb
shrb
mov
movsl
pop
fcomp
mov
dec
addl
pushf
xchg
adc
inc
mov
hlt
push
data16
mov
roll
xchg
lods
add
adc
cmpsl
or
or
jbe
ja
pop
scas
and
je
jecxz
pop
jb
jg
stc
sbb
xor
jle
push
or
testl
aam
decl
rcr
mov
in
leave
data16
pusha
sub
sti
xor
aaa
enter
orb
add
mov
cmp
je
jg
xchg
mov
test
add
push
push
jp
daa
adc
and
lret
sbb
clc
popf
ret
addr16
loop
test
cltd
mov
repnz
push
ja
add
stos
jns
ret
pop
sarb
hlt
xlat
pusha
sahf
xor
cmp
xchg
inc
movsl
mov
dec
cmp
xor
leave
icebp
lret
out
pop
xor
sti
lods
aam
xchg
aad
or
mov
or
jne
cmc
or
nop
xor
push
cmpsb
inc
mov
fs
lds
push
in
pop
pop
test
xchg
mulb
jl
jmp
fcoms
push
insl
xor
mov
xlat
cmp
arpl
popf
cmc
int3
lds
mov
mov
jne
pop
pop
sub
movhps
adc
cmp
leave
in
cmpsl
pop
lds
pop
cwtl
mov
lret
leave
fcomip
pop
popl
test
inc
pop
xchg
aas
mov
pop
int
out
sahf
sbb
fcmovnu
jns
dec
jae
inc
fadd
mull
js
in
jg
xor
out
adc
ret
inc
and
scas
mov
mov
inc
ret
cmp
cmpb
data16
xor
sub
cmp
mov
push
dec
popa
lods
mov
sbb
xchg
pop
test
mov
test
mov
call
xchg
std
ret
mov
ss
pop
roll
in
fnstenv
mov
mov
pop
pop
aam
fmul
or
adc
in
xchg
or
or
and
jns
shlb
std
and
sbbb
dec
hlt
jecxz
in
xchg
cli
mov
sub
dec
jne
shl
xchg
in
push
jp
pop
mov
xorb
sbb
mov
sbb
or
inc
sbb
leave
insb
adc
fst
cmp
ret
and
jo
cmp
rorb
ss
push
mov
push
and
mov
int
aad
insl
call
in
jo
push
roll
mov
pop
adc
mov
xchg
mov
in
lret
push
add
out
movsb
sub
mov
aas
mov
stos
mov
xor
mov
xchg
sub
and
and
mov
sub
out
jbe
mov
and
roll
pop
mov
dec
push
add
rcrb
push
insl
xchg
cmc
mov
sbb
mov
test
pusha
lock
pop
add
fiaddl
dec
inc
aas
sbb
les
loop
jl
and
sahf
out
adc
mov
lcall
and
cld
push
dec
jae
and
and
push
mov
fadd
or
and
bound
mov
push
repz
rcrb
ja
and
or
std
in
test
cli
mov
popa
adc
cmp
ss
pusha
mov
test
adc
pusha
jno
fstpt
ja
dec
inc
add
cltd
jmp
adc
pop
lahf
inc
loop
mov
mov
insb
fcoms
dec
cmp
out
sar
mov
jne
xchg
movsl
add
adc
popf
test
adc
int
pop
cmp
cli
jmp
dec
sahf
jb
mov
in
les
xchg
daa
fimuls
shl
outsb
xor
fisubs
int
ss
jp
add
test
mov
push
clc
jns
je
xchg
dec
ljmp
cld
pop
aas
dec
out
xor
in
insl
mov
add
dec
pop
pop
inc
and
jbe
jnp
gs
call
je
push
out
and
jbe
dec
jle
neg
add
fisttpl
mov
xor
jmp
inc
lods
std
sarl
stos
or
sarl
test
or
in
adc
lods
push
xchg
lods
xor
xchg
aas
or
fildl
ss
jge
adc
mov
mov
imul
mov
arpl
mov
fisttps
xchg
pusha
push
adc
repz
and
subb
test
loopne
jg
mov
or
sti
aaa
push
mov
pushf
data16
sbb
jo
inc
xchg
iret
icebp
push
or
or
jle
mov
cmp
in
xchg
popa
mov
pop
scas
push
movb
mov
cltd
pushf
inc
stos
outsb
call
negl
sub
dec
ret
stc
in
rorl
out
xchg
mov
jp
sbb
aad
dec
add
and
movsl
icebp
mov
out
mov
icebp
subb
decb
push
into
sub
es
hlt
ja
jno
pop
aas
in
repz
aas
dec
push
sub
and
shr
data16
jno
out
iret
jl
push
rcr
xor
jmp
fabs
andnps
in
mov
add
xlat
outsb
adcb
mov
cld
out
sub
shrb
int3
cmp
repnz
pop
movsl
xor
daa
call
mov
cmpsb
repnz
mov
shr
xor
stos
cmpsb
adc
lea
test
lods
mov
fwait
cld
idivb
pop
loopne
xor
pushf
add
and
add
pop
rcrl
push
xchg
inc
and
stos
push
mov
mov
popf
loop
clc
into
fldt
stos
rorl
clc
popa
shrb
xchg
je
sub
and
xchg
pop
orl
xchg
in
in
jecxz
xchg
addl
fcompl
xchg
stos
xchg
notb
je
cmp
mov
sub
cld
cmpb
cltd
push
push
icebp
es
cmc
pop
gs
push
insl
or
stc
dec
das
out
loope,pn
or
lds
sbb
out
push
inc
sbb
mov
jmp
xchg
pop
jle
jno
mov
adc
mov
call
nop
in
jmp
idivb
sbb
jle
jae
sub
xchg
mov
xor
out
out
inc
fadds
mov
xor
out
xor
sub
dec
lret
stos
xor
jmp
stc
fistpll
shl
cmp
jp
popf
lret
mov
faddl
cmp
dec
dec
or
add
and
and
rcll
jbe
shl
outsl
cmp
push
or
add
ljmp
inc
xor
add
adc
mov
and
mov
pop
clc
xor
test
xor
gs
adc
jecxz
cwtl
shl
dec
push
and
sub
add
push
loope,pn
mov
push
pop
mov
jb
out
pushf
pop
outsl
pop
test
inc
mov
mov
syscall
mov
stos
jg
push
data16
sub
movsl
sbb
ja
fisttps
dec
bound
fcmovbe
adc
outsl
mov
push
adc
push
xchg
xor
pop
test
adc
xchg
out
sub
mov
push
add
insl
dec
lcall
into
lods
inc
and
mov
xor
clc
dec
loopne
sar
adcb
dec
daa
mov
fnstcw
sbb
sub
cs
popf
mov
clc
jo
fsubl
sbb
cld
push
cmp
jnp
scas
dec
in
movl
ret
fldl
mov
xor
sub
pop
test
cmpsl
in
xchg
jo
fisubrs
std
add
pop
dec
test
or
push
aaa
sbb
das
dec
fbld
sbb
es
inc
imul
cmp
into
das
orb
add
add
leave
sbb
mov
add
cmp
add
mov
adc
lea
mov
fisubs
jae
insl
pop
rclb
pop
mov
ds
shll
loope
and
das
and
mov
mov
jmp
cmpsl
push
dec
arpl
fcmovu
ret
inc
popf
imul
jns
out
dec
gs
and
jl
xlat
dec
mov
repnz
ja
imul
pop
in
ljmp
mov
popf
mov
adc
hlt
jns
shrb
lea
nop
ja
das
or
and
lcall
dec
cmc
xor
cmp
jl
es
ficompl
lock
dec
imul
jnp
lods
rolb
adc
mov
push
sub
adc
mov
es
dec
mov
jb
fdiv
in
dec
ss
xor
cmp
jmp
pop
mov
gs
ja
ret
add
cmp
pop
iret
jb
xor
int
in
xchg
data16
pushf
ljmp
add
adc
test
mov
out
mov
push
lahf
aad
in
fdivr
adc
mov
cmp
sub
pop
js
inc
scas
fbstp
xor
mov
mov
fmull
cwtl
inc
out
repz
cli
rcrb
jb
cltd
cmc
lcall
data16
mov
cmp
lods
cmpsl
fidivrs
and
cmp
dec
fstpt
jns
push
insl
repz
outsl
xor
adc
push
dec
inc
jb
or
or
jbe
nop
test
iret
inc
ljmp
xor
cmp
mov
or
test
clc
cmp
lea
mov
es
pushf
fmuls
push
das
pop
rep
jp
push
mov
mov
jns
mov
insl
inc
push
aam
gs
ja
fsubrs
aad
ret
test
nop
push
lahf
sub
das
into
in
push
mov
pop
and
cmp
es
sub
dec
icebp
xor
out
daa
orb
ljmp
bound
xchg
pop
mov
das
add
push
stc
dec
sub
sub
dec
push
mov
inc
jae
das
shlb
mov
std
dec
nop
mov
jae
add
or
and
add
outsb
andb
jl
sub
cmp
dec
mov
lock
dec
xor
jne
test
pop
imul
lcall
pop
rclb
mov
sub
out
xchg
adcb
adc
or
adc
ss
xchg
shl
push
sub
inc
fisubrs
int3
cltd
pop
push
cmp
push
push
mov
out
cmc
sbb
xchg
and
roll
nop
pop
add
sbb
sub
xor
fbld
xor
jg
adc
out
add
or
mov
add
mov
mov
ret
outsb
jle
jae
aaa
outsl
ss
or
jns
cmp
std
xor
sub
xchg
cltd
jle
fildll
sahf
mov
cmp
adc
sub
stc
xor
jae
or
xchg
mov
adc
add
nop
adc
fsubrs
xor
pop
and
add
jl
je
and
sti
sbb
inc
nop
shlb
in
fdivrl
enter
mov
jb
fxch
and
repz
add
test
ds
push
cmpsl
lock
lods
pop
xchg
xor
pop
je
jnp
aam
les
push
sub
aaa
test
push
repnz
xor
fwait
jl
mov
fimull
push
cli
mov
test
add
jge
mov
das
dec
jne
idiv
cmp
fcompl
jle
sti
sub
jl
add
mov
inc
subb
sbb
nop
fmul
jno
ds
adc
or
mov
dec
outsb
sbb
mov
gs
cmp
shrb
jmp
aaa
ss
xchg
xlat
mov
xchg
add
repnz
sbb
in
jae
mov
gs
sub
cmpsl
mov
stos
pop
fildl
mov
lods
leave
add
scas
int3
addr16
shr
mov
adc
inc
and
imul
and
insl
test
pop
scas
stos
lret
sbb
into
sbb
sbb
sub
mov
xchg
loope
inc
xchg
add
adc
sbb
sbb
xchg
adc
fidivrs
clc
push
loope
les
pop
fnstenv
and
data16
xchg
stos
adc
js
fs
nop
cmp
add
and
adcb
out
mov
inc
or
xchg
mov
mov
pop
jne
std
push
sbb
mov
mov
ljmp
jge
mov
out
push
neg
cmp
loope
ret
pusha
dec
push
xlat
xchg
mov
push
sysexit
pop
stc
pop
pop
out
cmpl
mov
mov
sub
xchg
arpl
and
mov
or
mov
sbb
add
rcrl
das
sbb
sbb
popf
inc
stc
ficomps
jae
and
add
jge
pop
out
ret
insl
lret
outsl
test
push
or
jge
push
sbb
loope
push
inc
popa
lret
cli
insb
out
andb
movsl
mov
mov
mov
fidivrl
add
xor
movsl
fwait
icebp
scas
lahf
arpl
adc
xorb
mov
cmp
dec
lock
add
jp
int
jmp
orb
fcomps
sarb
cmp
xchg
or
out
fldln2
fisttpl
inc
adcl
rolb
xchg
arpl
lods
or
in
add
xor
mov
ss
adc
int
je
rcrb
push
out
sahf
movsb
lcall
or
insl
or
je
push
subl
mov
pop
mov
icebp
xchg
push
mov
lock
cmp
jecxz
push
xor
in
lahf
js
repnz
sub
xchg
shl
cltd
xor
push
cmp
ja
ss
mov
imul
jecxz
fistl
push
test
aas
pop
inc
idiv
cmpsb
addb
pop
cwtl
mov
xchg
jbe
gs
clc
cld
jbe
xchg
in
cmpsl
adc
ja
or
push
addr16
icebp
cmp
cmp
lret
add
or
and
dec
cld
int3
fcoml
bound
repnz
in
ja
ds
sub
lds
pop
jbe
in
dec
sub
fwait
xchg
mov
lret
or
lock
xchg
nop
stos
cmp
lods
jmp
or
daa
les
lds
mov
std
adc
mov
mov
pusha
dec
enter
mov
lret
adc
imul
add
mov
mov
bound
dec
mov
xchg
jno
std
or
fildll
fwait
pop
xchg
inc
mov
cwtl
fsubl
mov
dec
and
add
push
sbb
push
cmp
mov
xchg
enter
mov
into
cs
pop
inc
jp
ds
mov
test
fisttpll
sbb
push
and
add
std
sahf
movsb
es
or
adc
jle
ret
out
xchg
xchg
ret
pop
or
outsb
jb
push
mov
cmpl
adc
je
es
mov
scas
sub
mov
inc
jns
fldcw
movsb
idiv
and
mov
jge
daa
cmp
pop
mov
clc
sub
or
mov
jecxz
lods
cmp
repz
cmp
push
mov
ret
mov
jne
push
fcomps
cmc
push
add
scas
lds
stos
les
xor
fimull
xchg
cmpsl
mov
test
js
mov
add
popl
dec
shrb
icebp
jecxz
imul
loop
loope
adc
push
jno
push
push
mov
mov
jns
outsl
inc
mov
enter
pop
sub
and
repnz
adc
jae
pusha
cwtl
aad
mov
jl
mov
jo
scas
je
jp
stos
das
dec
cmpsb
inc
dec
mov
push
fbstp
mov
stos
sbb
in
daa
ljmp
clc
into
outsl
subb
pop
pop
dec
cmp
pop
sub
jae
mov
pop
fldenv
and
push
push
sub
imull
adc
ret
inc
mov
adc
iret
adc
jle
push
gs
lea
sub
popf
dec
jmp
pop
lret
mov
xorl
in
pcmpeqb
std
xchg
or
cwtl
mov
or
pop
jbe
or
fadd
fwait
inc
jns
jmp
lcall
fidivrl
adc
adc
pop
push
inc
es
mov
inc
lcall
mov
stos
mov
mov
or
std
sub
and
xor
lcall
adc
cwtl
out
push
clc
xor
sbb
int
and
mov
add
xchg
or
repnz
gs
sbb
int
arpl
xor
dec
in
rcr
or
in
clc
aam
jns
out
les
fmulp
ficompl
ror
inc
jb
test
stc
push
inc
frstor
aas
orb
fsubrl
fsub
sub
adcl
mov
sub
push
adc
mov
sub
mov
mov
mov
jmp
or
les
push
or
jg
jns
leave
jo
xor
xlat
and
inc
mov
in
imul
or
addr16
xor
mov
add
pop
xor
mov
cmp
sbb
jb
ds
rclb
pop
cmpsb
es
fcmovne
mov
fwait
jge
mov
mov
sti
push
sahf
mov
addl
sub
add
fnstsw
scas
fstpl
push
clc
movsb
ljmp
mov
loop
cli
sub
cmp
sub
push
mov
das
scas
xor
test
popa
dec
xchg
insl
inc
and
and
jmp
inc
push
push
in
mov
sbb
ds
movsl
xchg
sub
idivl
sti
into
push
pop
aad
cmc
das
sbb
cmp
pop
faddl
sahf
cmc
scas
inc
jecxz
ss
fsubs
pop
inc
mov
out
add
mov
imul
xchg
inc
sbbb
mov
or
test
repnz
adc
daa
lahf
das
sahf
cmp
test
out
push
jecxz
into
xor
movsl
ret
pop
cwtl
ret
cs
lods
cld
cs
fmull
push
xor
pop
imul
sub
lods
mov
and
cmp
fistps
incb
xchg
loopne
lea
pop
jbe
sub
ret
adc
sahf
xlat
test
sub
cwtl
inc
leave
pop
and
fstp
test
mov
pop
xchg
fnstsw
push
stc
adc
pop
cld
adc
adcb
jnp
dec
jne
icebp
push
and
xchg
sahf
xchg
pop
loop
jg
int3
out
push
sbb
roll
enter
in
repz
movb
inc
mov
adc
jg
cmp
adc
movsb
xor
movsl
ret
int3
jge
popf
mov
fiaddl
insb
pushf
outsl
mov
repz
xor
cld
mov
jmp
pusha
and
adc
popa
call
fidivl
sub
nop
dec
mov
push
pop
push
stos
jo
lea
shl
fs
sbb
fwait
add
pop
hlt
in
and
inc
clc
jne
stc
push
sbb
adc
dec
push
aas
ljmp
adc
push
subl
and
dec
ja
adc
cld
adc
sbb
stc
frstor
gs
test
inc
fstpl
push
jns
adc
pop
mov
cmpsb
aaa
mov
ud0
icebp
roll
into
mov
aam
test
jle
fistpl
jecxz
add
inc
sbb
out
mov
xor
popf
cs
mov
insb
lcall
xor
pusha
aam
mov
and
push
repz
adc
mov
scas
or
jno
mov
test
lret
and
nop
les
add
adc
sbb
xchg
fimull
arpl
frstor
or
in
dec
xchg
mov
sub
mov
jae
push
sysret
stos
xor
je
pop
lcall
push
shll
stos
sti
aas
fsubrl
mov
cmc
adc
in
aad
pop
and
mov
call
dec
inc
and
pop
pop
dec
andb
pop
scas
hlt
fcmovnu
push
cmp
pop
jb
dec
addr16
daa
mov
push
mov
pop
sbb
xor
imul
lcall
pop
popa
sbb
or
and
and
cltd
sbb
into
fs
sahf
fmull
add
sahf
jnp
xlat
out
jp
push
call
dec
add
repnz
lret
dec
cmp
addr16
fstps
jo
mov
sbb
call
imul
and
sub
push
jg
adc
sub
lea
sbb
and
add
inc
cli
adc
adc
in
ror
pusha
jno
xor
push
fcmovbe
mov
ss
and
in
dec
xor
dec
jne
push
sub
lds
mov
jae
mov
sub
xchg
xchg
stos
sub
adc
sti
xor
lods
sbb
and
xchg
jle
inc
ljmp
inc
fadd
mov
in
sbb
mov
dec
mov
xchg
xor
pop
jmp
test
cltd
js
xchg
cltd
outsb
mov
xchg
push
decb
dec
pop
insl
mov
fisubl
inc
dec
inc
inc
dec
addl
sbb
enter
jnp
cmpsb
push
movsl
shl
adc
dec
int3
je
call
mov
mov
pop
dec
jb
das
push
push
push
push
lods
sbb
sbb
cmc
jbe
push
or
mov
scas
fistpll
jmp
push
lods
pop
mov
mov
pop
xor
adc
fcompl
push
fsts
and
gs
mov
and
and
shl
mov
nop
inc
pop
clc
testl
je
mov
test
sub
cmovge
cmp
mov
pop
js
in
jecxz
jecxz
enter
mov
xchg
std
cmp
roll
inc
pop
fwait
pop
inc
jecxz
jle
sbb
or
dec
adc
fldenv
sbb
sub
cmp
in
push
mov
dec
mov
and
push
pushf
aaa
aas
jno
out
cwtl
cltd
pusha
or
xor
or
push
jecxz
cld
dec
stos
into
push
loope
test
pop
inc
iret
sarl
push
imul
pop
or
idivb
jns
adc
jnp
xchg
push
sbb
movsb
jb
push
repnz
or
pop
push
in
adc
je
fists
in
xorb
pusha
aas
es
imul
dec
push
ret
inc
imul
shr
xchg
daa
repz
loop
stc
loopne
adc
fildll
sub
xchg
int3
arpl
and
shlb
insl
loop
inc
repz
stos
mov
or
scas
sbbb
lahf
insl
xchg
xchg
lds
nop
xchg
call
pop
inc
call
rclb
jmp
movsb
xchg
leave
cmc
repnz
sbb
das
in
mov
outsb
pop
imul
cmp
dec
add
pop
rorb
jecxz
inc
aam
sbb
mulb
out
cmp
pop
mov
dec
call
dec
stc
rorb
aad
fsts
cmp
jecxz
push
push
mov
xor
or
lret
inc
adc
xchg
jne
inc
ret
adc
pop
lock
mov
das
loopne
sbb
sub
and
xor
xchg
lock
cli
aam
ret
jnp
hlt
lods
pop
test
negl
pop
push
ret
leave
test
leave
dec
out
fwait
cmp
mov
or
imul
cmp
gs
xchg
sbb
mov
fistps
pop
outsl
in
xchg
jnp
xchg
stos
mov
push
es
gs
sbb
and
pop
add
xchg
push
cmp
adc
jmp
test
mov
jmp
repz
shlb
push
and
mov
cltd
les
scas
ficomps
add
cmp
negb
mov
sub
lock
mov
fistpl
dec
dec
roll
inc
xchg
xchg
data16
jae
mov
scas
in
mov
sbb
mov
mov
ja
xchg
xor
repnz
mov
sub
imul
imul
jle
pop
testl
daa
add
fisubl
dec
popa
pop
fists
outsb
dec
and
outsl
shll
jb
pushf
xor
push
outsb
mov
je
lcall
lret
jg
cmp
mull
mov
sahf
dec
insb
jb
leave
imul
int3
pop
and
sbb
enter
mov
test
int3
xchg
fadds
mov
leave
out
push
dec
push
data16
outsl
jl
push
cmp
sub
inc
fwait
sbb
or
pop
fists
in
push
loope
lret
pop
rcrb
mov
cs
push
movswl
xchg
or
mov
ss
add
inc
jmp
lea
popf
push
neg
mov
mov
mov
fstenv
push
push
and
jnp
pop
jle
xchg
adc
outsb
shrb
jne
lcall
adc
sub
push
dec
add
andl
mov
xor
xchg
test
or
movsl
ret
mov
out
mov
ja
mov
adc
leave
aad
notb
jle
ss
sbbb
rcll
pop
jge
lods
fwait
pop
jns
mov
in
mov
outsl
dec
in
mov
push
mov
fldt
add
and
sub
and
mov
mov
xchg
popf
cld
lahf
int3
or
outsl
sub
test
cmc
and
mov
mov
cltd
xor
pop
push
ss
loopne
repz
sub
imul
adc
adc
aam
xchg
lods
jmp
cltd
sub
shl
fists
cmpsb
scas
out
jb
and
and
cmpsl
gs
sbb
test
int
data16
mov
and
lods
div
enter
lock
out
rcl
xor
ret
inc
cmp
ret
movsb
push
rcrl
pop
aam
lret
movsl
mov
sti
add
xor
cmp
scas
outsl
rol
or
and
rorb
mov
xchg
call
and
roll
mov
loope
inc
dec
and
cld
cmc
lea
popf
test
sub
pop
in
int
btl
fcoms
les
jae
jl
je
sbb
fdivrs
push
adc
mov
leave
pushf
push
cmc
push
inc
push
xor
decl
outsb
sub
cmp
daa
faddl
ret
jecxz
rcrb
pop
inc
mov
fst
adc
rolb
push
jmp
inc
fcmovne
icebp
pop
mov
repnz
mov
je
and
insb
nop
mov
dec
or
arpl
out
push
ret
lods
sub
push
out
and
imul
lods
or
jo
mov
mov
cli
out
sbb
mov
test
lret
jo
imul
mov
xchg
xlat
call
mov
dec
pop
int
add
ja
push
xchg
test
fs
pop
xchg
mov
jge
cmpsb
jnp
stos
push
dec
push
fwait
in
hlt
inc
out
or
or
jns
mov
ss
mov
add
dec
test
inc
dec
push
outsb
adc
aam
in
ret
mov
mov
inc
add
sub
repnz
enter
add
test
shr
lods
je
stc
and
arpl
scas
add
test
inc
imul
leave
pop
inc
dec
and
jno
cltd
loop
jecxz
cmp
movsl
notb
jle
sbb
pop
push
xchg
fidivl
sbbl
sahf
mov
leave
pop
adc
xor
clc
xor
jg
in
fistl
sahf
jbe
pop
inc
fildll
add
jp
std
fbld
out
push
daa
mov
and
repnz
add
xchg
sub
iret
ss
xchg
adc
ja
xor
das
lahf
cmp
push
enter
sub
outsb
out
stc
and
and
scas
in
lahf
xchg
ret
adc
add
shl
mov
pop
gs
inc
sub
insb
inc
cmp
pop
adc
test
subl
js
and
mov
out
cli
xor
mov
push
icebp
add
fstl
push
and
jbe
adc
mov
movsl
rep
mov
pop
call
jmp
xchg
scas
scas
cmpb
push
mul
nop
jns
jae
lret
xchg
out
sbb
jb
jle
out
je
xchg
gs
inc
cli
ja
sahf
icebp
add
push
dec
push
or
inc
mov
or
imul
fwait
push
mov
ja
xchg
xchg
add
into
lcall
insl
mov
push
xchg
test
jmp
dec
mov
pushf
in
ss
sub
cmpsb
adc
and
adc
out
cmpsl
push
inc
out
call
xchg
popf
mov
icebp
xchg
in
mov
jp
mov
push
mov
negl
into
inc
mov
daa
push
xor
fnstcw
rorl
shll
loop
aas
cs
sbb
mov
xchg
int
xchg
scas
bound
inc
lcall
lds
imul
jl
fldenv
pop
push
les
fsubl
fmul
ds
clc
cmpsl
jmp
dec
xor
cmp
orps
inc
xor
push
mov
in
sbb
adc
shlb
lahf
es
sub
fisubrl
xor
xchg
popf
lods
mov
sbb
add
xor
mov
fiaddl
mov
lock
cmp
xchg
push
nop
add
pop
mov
cmp
mov
sub
out
mov
iret
jae
adc
sub
lock
inc
dec
xor
loopne
inc
loope
jmp
ret
jecxz
add
test
lds
add
sub
jno
adc
hlt
push
inc
inc
xchg
inc
xor
inc
out
cmp
cmc
cmc
stos
sbb
add
adc
popa
and
dec
imull
aaa
pushf
out
movsb
push
mov
mov
mov
stos
fmuls
int
popa
jb
cmp
addr16
mov
dec
pop
mov
enter
repz
add
add
call
das
mov
adc
sub
dec
test
cmp
adc
lds
arpl
scas
lods
les
ss
lds
out
mov
outsb
dec
shl
sbb
adc
dec
inc
rcrl
and
add
add
push
push
lea
out
mov
cmp
clc
xor
fs
sbb
mov
incl
or
adc
inc
push
repz
les
in
addr16
aad
push
lods
sub
ja
lock
xchg
cmp
inc
jno
insb
add
stos
inc
ljmp
jg
insl
insl
cmp
xlat
outsl
mov
push
jae
adc
negl
adc
lock
add
lods
add
nop
dec
out
push
push
xlat
sub
nopl
mov
xor
adc
addr16
cmp
lahf
push
inc
test
pushf
out
and
repnz
mov
leave
jl
jnp
jl
mov
movsl
inc
pop
dec
xor
subb
adc
popf
dec
pop
ljmp
rorl
fnstenv
jmp
sbb
insl
cld
mov
fmuls
jl
pusha
pop
pop
mov
out
add
mov
jbe
fidivrl
rcl
mov
and
mov
jb
out
lahf
inc
sbb
jae
dec
mov
add
rolb
repnz
mov
cmp
dec
cmp
sbb
jp
out
push
cmpl
push
lea
arpl
iret
call
pop
cli
mov
stc
imul
les
xchg
je
lret
adc
fdivr
xor
dec
push
sub
shr
ja
sub
cmp
movsl
ja
stc
inc
push
test
popf
sub
and
push
stos
mov
std
cmpsb
cmpsl
scas
fisttpl
sub
pop
fdivrl
fnstsw
loopne
aam
sbb
pushf
mov
popa
or
fadds
xchg
pop
mov
bound
cmc
dec
icebp
mov
add
and
push
shll
and
push
into
movsb
data16
fiadds
cmp
xchg
cmp
sbb
sbb
mov
movsl
jp
xchg
imul
cli
push
cld
cmp
cmp
lcall
xor
cmc
fstpl
cmpsb
and
add
fstpl
jg
enter
pop
mov
adc
popa
jp
and
test
out
pop
cs
pslld
add
mov
adc
push
mov
jne
jle
movsb
iret
or
jne
test
push
cmc
imul
and
aad
pop
push
xchg
mov
lea
sbb
and
mov
sarl
les
enter
lret
adc
or
and
adc
lcall
mov
sahf
and
lahf
mov
sub
fxam
adc
add
or
mov
shlb
roll
scas
aad
lods
mov
push
ficoms
xor
push
out
aam
mov
sar
xor
mov
imul
js
insl
cli
sbb
xor
sahf
inc
lods
hlt
decl
sbb
rorb
add
cmp
xchg
sbb
pop
pop
cmp
jmp
les
cmp
leave
jae
sub
mov
xchg
mov
int
inc
ds
xchg
addr16
jo
aas
push
mov
rcrb
enter
shrb
jmp
and
jae
int3
notl
sbb
sar
cmp
mov
cmp
stc
inc
cmp
cld
out
popa
out
xchg
and
cld
sub
inc
inc
and
add
popf
scas
test
xchg
push
pushf
loope
jmp
loope
push
pop
bound
movsb
fnop
cld
pop
jae
out
mov
enter
int3
ss
shr
mov
jbe
sbb
adc
cmp
stos
outsl
mov
mov
movups
cmp
dec
mulb
or
push
push
mov
dec
cli
adc
enter
pushf
das
popa
inc
mov
mov
jns
mov
cmpsb
push
fstps
divl
hlt
inc
jbe
loopne
xchg
dec
inc
imul
out
dec
arpl
cmp
jmp
and
adc
shrl
in
push
pop
xchg
mov
je
aad
movsb
seta
mov
xchg
cld
test
push
lcall
out
or
mov
sub
xor
adc
arpl
push
and
lea
cmpsl
shlb
aam
sti
cmpsl
mov
mov
pop
mov
lahf
inc
or
adc
jo
les
movsl
push
xlat
push
mov
push
in
mov
push
xchg
les
jnp
loopne
mov
pop
mov
sub
pop
loope
jae
xchg
cmp
mov
sbb
icebp
jp
repnz
pop
push
cwtl
pop
xchg
or
inc
prefetcht0
das
sbb
cmp
or
cmp
mov
push
scas
cmp
jnp
ljmp
xor
fdivs
int
cmp
adc
sub
jns
push
mov
hlt
aas
out
mov
ret
out
xor
push
jb
ss
xchg
cmpsb
sbb
mov
push
fcoml
jo
les
jno
add
mov
loopne,pt
adc
mov
mov
je
or
dec
scas
jl
push
repnz
mov
mov
pop
pop
out
xchg
popa
add
mov
fstpl
outsb
pop
xchg
push
xor
mov
cmp
icebp
mov
jle
outsb
mov
int
adc
inc
mov
scas
mov
xchg
jmp
mov
inc
mov
mov
dec
sbb
sub
mov
mov
daa
ret
xchg
cmp
nop
jae
mov
and
setg
xchg
adcb
dec
addr16
xchg
jmp
sub
add
into
dec
xchg
int
ficompl
sbb
aam
insl
lahf
or
ds
sub
cmp
insb
or
repz
push
hlt
aaa
lea
adc
mov
inc
push
call
push
sub
inc
cmpsb
cmpl
test
xor
mov
je
add
push
arpl
stos
test
clc
addb
mov
lea
dec
pop
call
xchg
dec
shlb
js
fidivl
xor
xchg
mov
mov
push
imul
in
jecxz
aad
or
mov
iret
repnz
xchg
rcl
lahf
daa
outsb
sbb
in
mov
xor
inc
xor
xchg
pop
aas
repnz
or
int
int
mov
jae
fldl
xchg
iret
je
pushf
stos
adc
call
cmp
rcll
bound
inc
push
sub
jno
and
xor
xor
and
repz
enter
addr16
xor
jbe
add
xchg
mov
add
xor
mov
sub
rcll
mov
scas
divb
pusha
jo
dec
pop
shll
lret
js
je
sahf
cmp
cmp
mov
push
mov
or
pause
loop
ret
push
adc
sbb
fwait
pushf
pop
xor
out
out
or
or
jl
rolb
sub
dec
sub
cmp
insb
mov
mov
repnz
xor
cs
dec
or
cmpsb
cld
inc
pop
insb
push
jae
push
dec
je
xor
cmp
adc
sahf
and
jl
mov
lahf
cmp
inc
ds
bound
ljmp
scas
fnstenv
std
xor
stc
leave
pusha
fsubrs
adc
jl
cmpsl
nop
mov
dec
aaa
repnz
or
fistpl
sbb
xchg
xchg
xchg
jecxz
fs
sbb
int3
add
sub
mov
sub
in
imul
add
ss
xlat
outsb
pop
xor
add
push
lods
add
or
out
mov
sub
jle
dec
fwait
scas
add
xchg
mov
inc
mov
cli
leave
gs
icebp
mov
push
je
pop
pop
push
aas
lock
adc
sarb
adc
int
movsl
adc
hlt
and
stc
mov
sbb
mov
lods
movlps
xor
pop
pop
cmpsl
dec
sbb
rclb
pop
sub
mov
sahf
test
jbe
in
das
test
pop
adc
mov
lret
inc
loopne
lock
push
add
cmp
adc
jmp
bound
fists
iret
xor
jmp
and
ja
cmp
sub
xchg
rcl
adc
mov
inc
lock
or
test
push
xor
pop
clc
jb
jle
in
fisttpll
sbb
jg
dec
cltd
inc
in
add
adc
push
adc
xor
mov
test
adc
lahf
or
mov
xor
mov
adc
pop
xchg
addr16
lods
outsb
and
pop
fadd
dec
cwtl
push
xchg
jb
fistl
add
mov
xor
mov
insb
or
mov
mov
add
mov
jns
mov
push
xor
pop
fnstenv
push
inc
je
and
bound
shll
jnp
shrb
in
sbb
or
jb
xchg
xor
dec
lret
daa
sub
mov
arpl
jb
ljmp
out
mov
sbb
mov
jle
aaa
inc
out
adc
outsl
aas
into
add
ret
jns
cmp
test
xchg
movsl
adc
loop
mov
add
add
push
lds
rorl
xchg
lock
mov
xor
and
cs
add
decl
xchg
aad
sbb
pop
push
jae
ljmp
push
and
lcall
ljmp
push
sub
mov
push
sub
neg
cmpsb
fcom
out
sub
es
sbbl
inc
rorb
dec
inc
inc
aaa
mov
xsaveopt
les
mov
lock
fs
and
insl
push
adc
mov
imul
dec
cmp
popf
push
jle
insb
or
test
dec
jg
jecxz
mov
sbb
push
hlt
mov
mov
shlb
ret
lahf
ljmp
pop
mov
cmc
pop
daa
add
dec
add
stc
cmp
imul
xor
xchg
repz
xor
push
or
cmp
and
dec
fisttpll
push
jae
mov
jmp
jp
xsha1
cmpsb
dec
push
js
dec
scas
or
adc
jo
jmp
dec
mov
leave
push
pop
xchg
mov
arpl
data16
or
xor
xchg
jne
xchg
outsb
cmp
mov
iret
jae
js
dec
icebp
push
loop
fnstenv
in
and
xor
loop
pop
mov
xor
xor
jge
mov
cmc
or
mov
jge
mov
mov
inc
mov
xchg
xchg
add
outsb
out
imul
dec
fbld
push
lahf
jae
mov
push
test
out
pop
dec
testb
nopl
xchg
push
mov
outsb
ljmp
mov
adc
outsb
lea
pop
xor
shlb
fsubl
dec
xchg
cmp
mov
push
push
mov
dec
aas
test
xchg
scas
mov
cmc
sbb
jg
mov
orl
xchg
xor
and
adc
sbb
mov
je
push
push
shlb
jo
xchg
add
cmpsb
lcall
xchg
xchg
jmp
loope
push
xchg
scas
insl
in
sbb
or
push
orb
cld
loopne
loope
push
sahf
rcrl
and
adc
cmc
pop
pusha
fwait
xchg
andl
sbb
out
jno
sub
lahf
or
inc
lock
mov
jl
and
xchg
cmp
jge
in
dec
and
fs
sti
push
cmp
jo
push
pop
fxch
pop
ret
xchg
cld
dec
aaa
xor
out
cmpb
adc
sbb
add
fcmovnbe
movsb
in
les
out
movups
bound
cmp
pop
xor
push
pop
push
push
sbb
jnp
cmp
mov
pop
test
add
sarb
add
sbb
sbb
mov
push
dec
add
push
add
lret
movsl
cvtdq2ps
or
pushl
and
mov
xchg
je
xor
in
sub
xchg
andb
adc
ljmp
cmp
lahf
movsb
movsb
pop
pop
ljmp
cmp
sub
int
stos
loop
push
pop
pop
outsl
and
cmpsl
sbb
push
xchg
bound
mov
mov
sub
fs
sahf
push
pop
cmpsb
hlt
adc
fmuls
mov
pushf
int
mov
test
cltd
sbb
je
fldcw
mov
jb
mov
pop
sbb
add
repz
jle
or
xor
ret
rolb
add
out
inc
xchg
aas
outsb
mov
cmp
mov
dec
sbb
and
ja
lcall
fsubrp
data16
sbb
xchg
call
adc
repnz
shll
jnp
pop
aam
dec
cmpsb
aaa
inc
xor
lock
testl
and
outsl
or
sbb
fsubs
je
push
js
mov
add
loopne
pop
mov
mov
or
and
rorl
push
test
pop
clc
xlat
sqrtps
ljmp
sub
pop
jns
lds
shl
mov
push
dec
arpl
xchg
mov
dec
push
pusha
jle
dec
cmp
int3
inc
mov
ret
shrb
ljmp
sub
mov
outsb
div
mov
imul
inc
pop
dec
pop
dec
popa
stos
add
ljmp
mov
xor
push
scas
xchg
xchg
pop
arpl
repnz
cmpsb
mov
inc
je
clc
les
icebp
out
pop
sbb
mov
rol
clc
bound
clc
adc
cmp
adc
xchg
les
mov
int3
pop
popf
sbb
lea
add
sub
dec
js
movsb
mov
and
jmp
out
fdiv
or
shll
push
jb
fincstp
inc
pop
imul
fwait
shrb
int
mov
loope
adc
inc
xchg
ret
nop
ds
lods
enter
lahf
xlat
adc
adc
dec
cmp
xchg
mov
hlt
in
adc
xchg
or
jnp
pusha
push
inc
lds
outsb
or
mov
aas
arpl
mov
xor
aam
cmp
fldcw
inc
dec
or
test
adc
cmc
gs
out
xchg
xor
int
jnp
dec
push
aas
sub
sbb
push
adc
xchg
cmp
jns
das
dec
shlb
cmp
adc
push
mov
sbb
js
repz
out
daa
mov
push
jo
scas
jmp
mov
mov
or
sub
mov
mov
in
or
pop
rcr
lock
sbb
or
mov
pop
push
inc
add
fs
ss
pop
clc
cwtl
mov
mov
inc
loopne
je
sub
pop
repnz
notl
or
leave
pop
xchg
int3
jnp
jecxz
jb
adc
jle
pop
rolb
andl
cmp
mov
fldt
lea
or
dec
mov
push
xor
jno
add
imul
jno
sbb
enter
sub
iret
sti
out
sub
je
cmp
lcall
jae
add
outsl
xchg
push
lcall
push
add
xlat
repz
add
fsub
int
fmulp
movsb
or
pop
push
pop
lea
inc
dec
and
imul
mov
cmp
cmpsb
mov
loopne
and
or
dec
xchg
orb
sbb
fld
mov
inc
dec
push
fstl
aad
test
mov
xchg
test
fistl
mov
add
loopne
mov
lock
push
mov
mov
xor
outsl
xchg
mov
pop
or
pushf
sahf
fwait
out
mov
jmp
dec
sahf
cmpl
in
ljmp
mov
out
pushf
cmp
push
enter
fcomps
mov
out
jo
inc
pop
xchg
nop
frstor
and
data16
jbe
pop
or
out
test
cwtl
pop
iret
xchg
pop
fisubl
dec
xchg
pop
dec
popf
fcoms
jo
jmp
andl
popa
out
das
lds
ret
test
and
std
mov
xor
js
inc
and
shlb
sbb
cld
push
push
loopne
sarl
cld
inc
xchg
stos
jp
adc
idivl
andb
outsl
in
daa
insb
test
stos
pop
add
sbb
fisubrs
test
arpl
pop
inc
dec
nop
push
dec
rol
inc
fld
dec
xchg
lods
add
xorl
mov
aaa
cli
les
daa
pop
adc
or
call
dec
scas
mov
jb
test
jns,pt
lods
aas
sahf
xor
and
lock
aas
in
pop
and
adc
insb
cmp
pop
pushf
sbb
outsb
xchg
cmp
cld
iret
sti
lahf
fsincos
push
inc
subl
aad
push
arpl
popa
jl
bound
imul
call
adc
outsb
jl
cmpsl
out
insb
xchg
out
sarb
ficomps
dec
mov
cwtl
aas
xor
jbe
dec
loop
mov
sbb
pop
inc
outsb
sbb
imul
and
lea
cvtps2pd
loop
shrb
arpl
lock
jg
and
mov
stos
or
add
mov
outsl
sub
lods
arpl
imul
out
jbe
iret
jl
cmc
jge
pushf
jns
lock
sbb
or
sub
jl
jbe
mov
xorb
ret
sbb
mov
imul
dec
pop
shr
mov
das
js
es
pop
inc
jl
shll
lret
or
jb
xchg
data16
sbb
adc
jp
mov
sbb
and
push
sub
pop
xchg
inc
test
pop
test
stc
mov
pop
int3
jo
in
fsubrs
in
loopne
cltd
pop
mov
cmpsb
or
int
nop
lcall
push
xchg
and
sahf
push
cmpsb
sti
inc
aam
pop
jb
xchg
push
imul
jmp
mov
mov
add
js
out
xorl
in
inc
pushf
xchg
sbb
dec
dec
pop
cmpsl
or
loopne
sbb
sar
pop
imul
adc
and
sti
popf
aas
pop
scas
das
out
push
std
cmp
outsl
mov
pop
idiv
mov
mov
dec
mov
lret
lcall
cwtl
mov
sahf
mov
mov
cmp
jl
in
in
test
stc
pop
mov
xor
push
add
and
fiaddl
xor
sti
jle
push
mov
pop
pop
lcall
jne
mov
and
add
mov
lcall
add
sub
jmp
mov
loop
push
sarl
jae
mov
lea
add
jo
and
add
mov
in
mov
arpl
fimull
add
xchg
add
popa
andl
mov
test
adc
jecxz
gs
iret
xor
ljmpw
hlt
push
fistpll
mov
int
pop
pop
lea
std
fidivrs
mov
lods
out
das
sarb
pushf
lcall
mov
lret
xchg
push
add
cmp
adc
cmp
hlt
gs
pop
pop
dec
push
add
in
adc
cmp
les
add
lret
pusha
loop
xchg
iret
dec
clc
mov
mov
aas
mov
imul
cld
push
out
xchg
mov
fistps
cmpb
xchg
out
jns
cmp
pop
rorb
in
or
ja
or
mov
outsl
in
fiaddl
daa
sbb
icebp
sbb
push
push
and
mov
xchg
enter
bswap
and
mov
dec
fimuls
scas
fadds
fisubl
sbb
sahf
dec
pop
mov
out
mov
jns
test
inc
outsb
sub
and
sarl
mov
or
sbb
rcrl
dec
loope
cmpsl
sub
sub
sub
or
push
icebp
inc
adc
mov
loop
inc
out
mov
mull
mov
cmp
mov
lock
xlat
sbb
mov
ret
in
jb
mov
add
jp
cmp
es
sub
sti
xchg
cli
mov
adc
push
mov
scas
sbb
inc
stos
cmp
cld
jmp
dec
pop
lock
mov
adc
or
popa
push
into
mov
dec
sub
imul
adc
insl
xchg
fildll
mov
push
cs
xor
cmp
xchg
dec
sbb
movsb
out
stos
jp
inc
sti
dec
daa
icebp
pop
adc
mov
cs
jne
and
pop
aam
subb
jne
jnp
cwtl
jmp
xchg
sub
test
mov
cmp
jmp
sub
sub
add
es
xlat
outsb
lods
mov
mov
insl
mov
aas
xor
add
lcall
jmp
scas
out
je
pop
inc
mov
and
mov
cmc
jnp
ds
inc
jb
jg
push
xchg
or
stos
scas
xchg
and
aas
sbb
ficomps
movsl
mov
mov
adc
or
repnz
cs
inc
jge
cli
lret
and
test
insb
outsl
sub
lcall
insb
push
sbb
xor
mov
sub
orl
dec
xor
fsin
cmpsb
pop
or
xchg
fsubrs
out
call
jb
cli
push
in
std
jae
addb
lcall
cltd
pop
xchg
mov
negl
sti
sub
das
jp
mov
push
inc
sbb
jno
jp
subl
stos
and
mov
and
cmp
mov
das
ret
and
jae
jo
les
inc
or
mov
pop
xor
gs
mov
pusha
pop
push
lods
cmp
xor
cmp
xchg
push
push
roll
jnp
add
push
sbb
mov
xchg
adc
mov
mov
pop
cwtl
pop
lcall
lret
imul
mov
inc
rolb
lods
push
lods
jecxz
iret
addl
and
xchg
mov
sub
pop
xor
dec
cmp
pop
jmp
popf
and
or
xlat
pop
out
sahf
sahf
insl
aad
aas
mov
mov
sbb
rorl
test
sbb
jo
dec
dec
out
js
xor
inc
sbb
or
xor
xor
daa
leave
dec
mov
test
ds
xchg
addr16
xor
fcmovnu
push
xor
cs
pop
mov
or
or
addr16
shr
sahf
mov
test
lret
gs
sbb
dec
es
lods
sbb
mov
test
dec
mov
jg
and
pop
nop
push
outsl
cmp
outsb
or
cli
mov
add
std
pop
adc
cmp
mov
adc
out
or
mov
outsl
cmpsb
in
ret
pusha
test
scas
push
mov
pop
xchg
xchg
je
mov
stos
adc
xchg
mov
ret
push
leave
mov
into
ljmp
sbb
out
testb
adc
mov
les
pusha
gs
mov
inc
dec
popa
adc
mov
cltd
dec
sahf
sub
rol
rorl
ldmxcsr
ljmp
and
pusha
cltd
rcrl
fistpll
test
pushf
jecxz
fs
lret
push
mov
ds
adc
fnstcw
push
addl
outsl
leave
sub
dec
xor
ficoms
orb
icebp
loope
cld
pop
nop
lock
je
or
les
and
mov
mov
adc
cltd
jb
pop
xchg
xchg
nop
aam
push
sbb
inc
aam
mov
dec
fidivs
lcall
push
outsl
clc
mov
dec
xor
mov
sub
mov
xor
shlb
jmp
xor
lcall
adc
mov
jmp
addl
push
mulb
divb
push
push
adc
cmc
aas
inc
int3
pop
cmpsl
sbb
rorb
mull
pop
js
outsb
imul
clc
mov
fsubl
movsl
cmpsl
out
inc
inc
aad
push
ja
test
push
pop
fadds
mov
frstor
push
inc
aad
dec
sar
out
jmp
pop
push
xor
sarb
xor
lret
cmp
std
cmpsl
xchg
xor
jb
leave
and
or
mov
fadd
aam
mov
mov
std
hlt
and
dec
and
ds
cs
xchg
popf
add
outsb
mov
mov
sbb
sub
in
mov
cmp
hlt
xor
push
daa
stos
shlb
pop
cli
out
pop
std
or
nop
fcoms
jnp
fs
or
insb
ja
sub
mov
fcmovu
adc
sti
mov
push
xor
lret
sahf
xchg
push
sbb
int
add
movsb
mov
cli
jae
sub
push
mov
mov
mov
mov
add
push
clc
xor
inc
mov
rolb
idivl
mov
adc
aam
mov
mov
fs
ja
pop
fistps
inc
std
sub
or
xchg
jo
mov
roll
xor
lret
and
jo
test
sub
mov
jecxz
add
mov
adc
fcmovnu
lahf
jne
push
xor
into
shlb
push
lahf
mov
stos
xchg
ss
mov
sub
pop
faddl
and
and
lcall
ret
loopne
inc
testl
lcall
adc
or
mov
and
fdivs
icebp
xorb
push
mov
fmull
andb
cli
dec
fs
pop
sub
bound
lahf
lret
mov
loop
mov
pop
test
jb
stc
and
xchg
loop
lret
pop
lods
push
repz
push
pop
pop
lods
and
jg
fidivs
xchg
dec
pop
sub
out
sub
xchg
dec
jns
inc
fstpt
repnz
inc
jg
fmul
xor
sti
cld
inc
xor
popl
push
dec
out
out
repnz
or
jl
jno
sbb
adc
scas
into
dec
add
lret
xor
mov
gs
cmp
push
or
loopne
test
pop
lcall
ja
pusha
cmpl
rclb
filds
int3
mov
jecxz
inc
xchg
xlat
fistpll
jo
shlb
sub
cmpsb
dec
dec
cmpsl
xchg
stos
xchg
dec
mov
xlat
iret
daa
sub
ficoml
xlat
and
sbb
ret
inc
sar
push
push
pop
fimuls
push
aad
xchg
popa
adc
xchg
dec
mov
out
or
sub
sbbb
mov
cmp
jp
out
adc
out
rclb
repnz
and
rcr
cmpsb
inc
inc
nop
jge
sahf
push
sahf
es
fdivr
loop
bound
ss
jae
dec
inc
dec
in
les
mov
add
in
adc
rep
loop
dec
mov
ds
pop
adc
insb
sub
jge
cmp
jb
es
fimull
add
sub
pop
xlat
test
and
push
mov
xchg
inc
loop
fistps
mov
ss
lds
addr16
fisubl
jl
cmp
xor
jnp
jne
ficoms
pop
xchg
mov
mov
add
pop
repz
scas
adc
sarl
scas
jge
icebp
out
inc
sbb
push
pop
sti
xor
cmp
test
mov
and
dec
sub
xor
mov
xor
jae
jo
leave
xchg
pop
push
insb
decb
jne
test
test
add
push
sbb
pop
jno
jl
pop
out
insl
sbb
xchg
popf
push
or
jae
test
hlt
and
fxrstor
and
adc
loopne
mov
or
in
push
sahf
scas
push
stc
and
repnz
mov
scas
jg
repnz
jge
push
call
mov
add
pop
arpl
out
push
or
pop
xchg
clc
fistpll
repnz
cmp
test
aas
andb
std
out
push
pop
mov
mov
dec
daa
lods
push
dec
bnd
popf
xor
mov
mov
adc
outsl
in
rcll
mov
into
lahf
pop
jl
mov
dec
dec
cld
xor
daa
sub
xlat
int
add
cltd
push
mov
inc
ss
je
adc
call
mov
jge
mov
or
sbb
outsl
fdivrp
lcall
mov
mov
loopne
jmp
push
insb
dec
aad
cmp
sahf
in
out
jle
xchg
and
xchg
sbb
ret
loop
je
push
sahf
ficoml
aam
scas
lds
fnsave
xchg
xor
test
mov
je
repnz
iret
add
inc
jns
jmp
rcrl
pop
in
sub
mov
stos
movsl
mov
sbb
out
in
int
dec
sbb
lret
or
lods
pop
pushf
int
add
sub
stos
ds
push
mov
jns
mov
movsl
in
dec
jns
pop
in
iret
fdiv
sahf
push
and
add
jae
jbe
sub
xchg
mov
mov
loope
jno
mov
and
ret
mov
addr16
sbb
inc
insb
and
ret
or
jp
lods
aas
or
jmp
cmp
add
jns
add
mov
inc
jg
pop
call
aad
xchg
iret
lcall
push
xlat
xor
in
adc
sub
jl
incl
fcoms
sub
mov
push
ljmp
pusha
mov
decl
jl
xchg
inc
out
outsl
pop
mov
push
inc
and
arpl
repnz
repz
cmpsl
push
stc
sub
jno
or
dec
pop
and
add
stos
clc
idivl
cmp
push
add
lods
cltd
sub
sub
push
idivl
shll
mov
pop
nop
jnp
jl
rorl
shll
xorl
and
test
mov
or
dec
add
repz
sub
cwtl
mov
inc
sub
dec
clc
sti
push
popf
adc
iret
inc
xchg
fisttpll
idivb
add
outsl
outsb
inc
dec
adc
pop
dec
xlat
leave
in
stos
jge
dec
pusha
xor
sahf
xlat
into
sub
icebp
push
aas
inc
sbb
mov
push
leave
popa
mov
lds
dec
mov
out
idivl
add
pop
mov
int
xchg
movsl
aam
adc
xchg
push
cltd
pop
jb
ret
adc
jge
notl
pop
addps
test
out
pop
push
jl
mov
les
aaa
lea
jne
dec
xlat
loope
xorl
mov
add
jl
add
jle
mov
add
ret
pop
sub
in
or
cmpsb
inc
jle
sub
repnz
pusha
aaa
lds
sahf
sub
pop
ljmp
mov
push
jne
push
xor
clc
ljmp
adc
icebp
adc
xor
xor
inc
mov
loopne
sub
mov
in
dec
mov
xor
mov
arpl
mov
addr16
repz
out
outsb
xor
sbb
incb
stos
mov
hlt
mov
sub
adc
mov
jnp
add
jno
mov
ret
test
push
sub
jb
out
aad
lods
mov
xchg
pop
mov
pop
mov
mov
and
cmc
scas
or
aaa
push
cmp
pop
fwait
daa
inc
xchg
jne
ficomps
pop
or
jp
xor
add
push
mov
mov
mov
gs
push
loopne
test
in
xchg
sarb
divl
aam
sahf
xchg
cmpsl
xor
mov
dec
add
loope
aad
dec
push
push
arpl
xor
fisubrs
es
mov
sqrtps
dec
cmp
and
pop
dec
sub
cli
repz
mov
cmp
jle
mov
lret
push
outsb
inc
mov
and
lahf
imul
jmp
sub
jmp
nop
std
mov
cli
xor
push
jg
insb
sbb
push
xchg
push
fldenv
repz
jo
movsb
sub
ss
pusha
pop
sub
mov
mov
roll
sbb
push
pop
daa
lret
cmp
mov
or
out
dec
ds
mov
dec
mov
jmp
cli
test
scas
in
daa
arpl
mov
fwait
inc
movsb
sbb
std
dec
xchg
fs
jnp
or
adc
cmpsb
aam
repz
jbe
add
inc
mov
cmpsb
cmpsl
pop
mov
jge
pop
stc
cmp
stos
mov
cmpsb
inc
sub
or
adc
les
les
fwait
jecxz
dec
xchg
mov
addr16
mov
test
lret
int3
xchg
jge
outsl
pop
and
popa
cmp
dec
or
test
ror
pop
ljmp
repz
ret
mov
lret
jp
push
or
mov
mov
mov
pop
jnp
loop
lods
in
nop/reserved
and
addr16
gs
push
rorb
mov
mov
sub
sub
dec
xchg
in
mov
push
jae
loop
icebp
push
ja
mov
inc
push
push
jg
fbstp
pop
jno
es
xor
jle
nop
mov
inc
lret
pusha
add
imul
rcr
test
add
mov
rorl
aad
push
jmp
mov
cmp
out
scas
mov
in
repnz
push
repnz
push
and
int
jecxz
mov
add
call
movsl
dec
cld
mov
inc
xor
ljmp
push
adc
adc
jo
shll
sub
je
push
clc
subb
das
ret
out
mov
pop
les
mov
adc
inc
shrb
ja
xchg
mov
mov
imul
int3
adc
sub
lret
in
dec
xor
ja
and
cld
jnp
inc
and
jbe
int
jmp
sub
faddp
hlt
and
imul
enter
adc
jnp
shl
jne
xchg
sub
iret
aam
arpl
int3
aaa
icebp
jmp
cmp
lds
adc
sbb
xchg
into
aad
sub
fwait
cwtl
mov
ljmp
rcl
xor
scas
mov
and
jmp
lds
mov
int3
mov
pop
xchg
xchg
mov
movsl
lcall
mov
inc
fxtract
mov
insb
sbb
sti
push
mov
or
push
orb
jbe
mov
or
xchg
cltd
int
outsl
fwait
xchg
mov
xchg
loope
add
xor
daa
cmp
dec
sub
mov
jmp
add
mov
sub
adc
ficoms
sahf
ret
lea
sbb
cmpl
sbb
es
cmp
loope
out
or
jbe
ss
out
fdiv
fldenv
inc
add
ds
xchg
add
mov
pusha
hlt
cmp
xchg
test
push
mov
and
incl
add
cmp
rcrb
dec
push
in
enter
rcr
loopne
lret
rclb
gs
xor
add
fidivrs
addr16
pmulhuw
mov
in
outsb
pusha
insb
ss
rcrl
je
fs
jns
sbb
jl
sub
dec
nop
and
lods
in
mov
sub
dec
fcoml
xchg
outsb
mov
xor
fsubl
add
pusha
hlt
sbb
mov
sbb
aaa
adc
adc
or
aad
movsb
lret
lea
cs
cmp
out
push
inc
shrb
xor
mov
or
scas
dec
aam
ljmp
jns
imul
xchg
mov
hlt
imul
pop
push
mov
out
cld
sbb
aas
movsl
push
fwait
pop
adc
mov
pushf
mov
pop
pop
xor
insb
and
mov
inc
push
pop
mov
fiaddl
pop
jns
popa
test
sbb
mov
addr16
aaa
push
push
movsb
loope
popf
add
inc
out
push
andb
push
mov
adc
inc
mov
clc
push
xor
pop
cmc
or
xor
adcl
lea
out
mov
rcll
cmc
add
aas
xor
aad
addr16
push
sbb
fiadds
pop
jne
loopne
inc
or
cmp
cs
push
aad
sub
pop
xor
jle
sti
mov
mov
jnp,pn
dec
cwtl
imul
adc
filds
out
and
inc
cli
add
dec
jb
data16
loope
push
mov
dec
mov
adc
push
or
aad
or
jmp
loop
mov
aam
fcomp
sbb
adc
incl
int3
and
add
lret
loopne
adcb
sub
sub
add
out
movsb
je
pop
mov
mov
mov
or
mov
aam
out
pop
add
sti
mov
xchg
aaa
movb
lahf
call
jp
xchg
rolb
mov
jo
add
scas
jno
pop
adc
das
lret
cwtl
ficompl
cmpb
fwait
pop
out
and
push
mov
lods
sub
jl
or
divl
ds
and
mov
jbe
push
jge
pushf
call
cmpsb
cmp
fwait
sbb
iret
stos
xchg
fs
mov
sub
dec
cs
ljmp
push
div
inc
jecxz
cmp
mov
pop
xchg
pop
cmpl
shrb
push
pusha
sub
mov
mov
cmp
mov
adc
cmp
mov
ret
add
add
or
fwait
sub
shr
mov
jp
xorb
pop
shr
add
cmpsl
cmp
jecxz
sub
lods
adc
sub
ret
push
sarb
pushf
mov
add
lods
ds
sysret
test
leave
cmp
dec
xor
and
adc
loopne
inc
stos
fimuls
and
lcall
mov
ret
cmp
push
into
mov
shr
xchg
jae
fldcw
mov
sbb
pushf
adc
rcrl
xchg
ja
insb
lahf
xchg
pop
cmpsb
mov
adcb
sbb
or
xchg
popf
adc
sbbl
dec
shlb
jb
xchg
in
test
ja
insb
stc
aaa
cmp
xchg
dec
jl
into
orb
in
pop
out
push
ret
adc
and
push
movsl
push
call
jno
btc
mov
fs
ret
fsts
stos
push
fwait
out
clc
mov
shrl
push
push
jns
jae
push
sbb
pop
insl
jmp
mov
push
pusha
cld
cmp
popf
push
leave
es
mov
repnz
dec
data16
int
ret
into
xor
mov
cmp
add
jnp
cmc
je
aam
pop
dec
inc
hlt
lret
stc
push
push
sub
inc
ret
ret
outsl
popf
mov
insl
es
pop
xchg
cmp
adc
decl
xchg
push
stc
push
jge
cld
nop
test
xor
ficompl
js
push
test
jecxz
das
dec
xchg
xor
fbstp
ret
in
in
gs
aam
aaa
addb
mov
jno
cli
scas
roll
es
bound
xchg
ficomps
push
repz
xsaves
push
cmp
sbb
mov
sub
bound
test
les
out
jns
lcall
jg
popf
dec
mov
sbb
cmp
scas
loope
push
inc
and
mov
not
lods
loop
leave
dec
mov
cltd
sahf
clc
fwait
and
cmp
fsts
pop
jne
aad
mov
out
jns
add
ret
sbb
mov
inc
ljmp
lods
cmp
jbe
scas
mov
cs
lods
adcl
cwtl
jo
cmpsl
fcoml
adc
in
fdivr
dec
xchg
lcall
out
leave
jl
or
insl
fiaddl
fmul
pop
stos
test
inc
adc
aam
movsb
clc
mov
dec
in
lret
mov
fdivrs
inc
fldcw
ss
lret
and
iret
lods
pushf
mov
jno
xor
mov
daa
jmp
lods
and
sub
or
xchg
in
test
pusha
and
movsl
xor
cmp
dec
ret
jnp
lcall
stc
add
stos
mov
scas
data16
fsubs
mov
ret
pop
mov
aam
divb
push
sbb
cmp
sub
out
andl
sbb
push
inc
mov
mov
cmpsb
pusha
jmp
xchg
xor
xsha256
cmpsb
aad
in
pop
test
xlat
xchg
fdivp
push
sbb
scas
stc
mov
insb
icebp
test
push
mov
in
push
sub
pop
sub
fcmovu
sub
sti
mov
and
mov
and
or
aas
aad
int
pop
dec
jbe
adc
mov
fldenv
mov
bound
xor
mov
inc
rcrl
push
scas
in
neg
into
stc
outsl
or
xor
arpl
mov
jns
je
add
jae
adc
xchg
xor
inc
fcmovnb
inc
and
les
fwait
push
imul
mov
push
jo
jae
addl
push
mov
or
mov
pop
repnz
push
xchg
ret
scas
js
pop
shufps
aam
mov
fsts
xor
mov
arpl
xor
sbb
jnp
fs
mov
out
dec
dec
sbb
and
push
call
push
jg
dec
sar
cwtl
dec
loop
adc
add
fstpt
outsb
and
pop
out
fldl
add
jb
sub
ficomps
adc
jbe
cwtl
push
adc
pop
xor
outsb
xchg
xchg
push
mov
fcoml
into
addr16
add
mov
ret
jne
push
test
icebp
imul
sub
xchg
xchg
scas
leave
push
sub
mov
push
pop
inc
jle
jae
hlt
cld
push
xor
pop
pop
cld
test
scas
sarb
jge
xorb
adc
idivb
insl
adc
aam
cltd
push
push
popa
mov
mov
mov
push
mov
dec
xchg
cmp
adc
or
nop
mov
jmp
outsb
add
ljmp
or
ret
sub
cmp
xor
inc
faddl
or
mov
into
mov
test
jo
xchg
loope
and
cmp
shll
ret
sbb
sbb
rclb
faddl
and
push
adc
adc
ja
and
fs
test
mov
push
jge
cltd
arpl
push
inc
mov
aas
outsb
les
xchg
push
iret
xor
pop
dec
daa
sbb
inc
decb
fsubr
scas
gs
cmpsb
scas
and
mov
mov
loop
insl
pop
fdiv
xchg
inc
cltd
daa
jbe
mov
inc
cwtl
jbe
adc
cmpl
pusha
xor
in
ret
pop
in
rol
mov
dec
or
mov
cltd
jo
dec
pusha
inc
punpcklwd
mov
cld
mov
in
stos
mov
clc
sbb
mov
outsl
push
fists
loop
andl
jmp
jl
ds
inc
xor
mov
lahf
pop
adc
add
loop
cmpsl
ret
adc
nop
subb
lret
cmp
jbe
lock
inc
sub
dec
adc
pushf
ljmp
sub
push
icebp
fwait
int
shlb
xchg
push
test
adcl
jne
aam
xchg
mov
cmp
pop
pop
daa
add
pop
lods
fbstp
fbstp
and
mov
mov
or
xor
fisubrl
dec
dec
repz
mov
sub
sbb
add
js
xchg
dec
push
push
stc
and
add
dec
fisubl
and
cmpsl
jae
and
cwtl
cmpsl
jl
mov
mov
and
mov
push
insb
js
sbb
push
cwtl
das
jg
jno
jns
popf
es
or
popa
adc
jmp
dec
aas
push
jno
pop
not
cltd
addr16
cltd
jl,pt
cmp
test
in
mov
lock
mov
push
lds
in
js
jne
push
mov
inc
ss
jp
cmc
cwtl
fnstenv
insl
mov
fnstenv
iret
imul
dec
data16
jns
jg
sub
int
addb
scas
lret
iret
aad
add
int
pop
shrb
dec
inc
mov
fsubl
mov
cmpsb
pushf
test
data16
test
fs
aas
inc
jb
cmp
std
sub
pop
ljmp
sbb
push
push
jnp
adc
out
rcrl
or
cmc
inc
xor
sbb
mov
dec
loope
and
jns
filds
cltd
daa
xchg
sub
movsb
xor
outsb
push
scas
dec
xor
cli
es
mov
insl
cmp
in
pop
lea
or
dec
push
and
mov
mov
xlat
fisttpll
pushf
mov
adc
mov
pop
push
mov
sbb
stc
cld
dec
fcmovnb
push
mov
adc
and
or
bound
stos
xchg
out
imul
outsl
xor
dec
mov
jle
stos
fisttps
pop
jns
mov
lret
mov
jno,pn
hlt
cli
adc
sbb
pop
pop
sarb
lahf
sub
enter
cmp
in
sub
pop
es
stos
int
or
mov
cmpsl
add
xchg
mov
cmp
xor
repz
cwtl
mov
xlat
gs
or
xor
movsl
int3
mov
inc
push
xchg
dec
dec
pop
int
adc
jno
lods
cmp
andl
leave
nop
and
sub
test
data16
enter
xchg
fdivrl
cmp
in
out
inc
mov
xor
adc
push
popa
sub
movsb
iret
ret
mov
adc
shll
xor
sarb
and
push
fnstenv
jo
cmpsl
and
mov
out
inc
outsb
clc
jae
or
fisttpll
xor
leave
add
dec
loope
cmp
lahf
adcl
jno
and
iret
hlt
and
movsb
adc
or
add
dec
in
xchg
gs
add
push
mov
mov
movsb
int
add
lcall
fistpl
push
cmpsl
xchg
cmp
mov
push
or
das
pop
sub
pop
pop
cmovp
andl
testb
insl
imul
pop
pop
dec
aas
testb
hlt
add
or
scas
pop
test
in
lds
fs
out
xchg
outsb
mov
ret
inc
fcmovu
inc
xchg
add
testb
sbb
cmpsb
push
iret
ror
lahf
jb
add
mov
push
xchg
mov
fsubrp
or
jmp
adc
inc
push
cmp
cmp
and
inc
xchg
jnp
out
mov
aas
aaa
in
mov
mov
or
je
cmc
ds
sbb
sbb
rcl
jo
xchg
dec
insl
into
xchg
test
pop
ret
xor
jo
jbe
lock
fimull
adcl
rorl
sbb
push
nop
jecxz
fmulp
mov
sub
pop
push
sarb
ss
jp
cmpsb
xchg
aad
mov
aad
cmp
imul
fldl
cmp
les
arpl
xchg
add
xchg
and
inc
ret
lahf
mov
stc
stos
shlb
lret
jecxz
adc
adcb
dec
fwait
xchg
pushf
pop
call
fnsave
test
xor
fs
push
pop
cmp
cs
mov
movsl
fwait
outsb
lock
jne
inc
jns
mov
leave
in
xor
pop
mov
mov
jo
into
iret
sbb
adc
loopne
ret
push
fcmovnu
gs
adc
sub
imul
cmp
sbb
in
fs
add
shll
sarb
xchg
mov
cli
inc
mov
mov
insb
sbbl
loopne
push
sbbb
shll
std
sti
insl
out
sahf
add
aas
sarb
ss
sbb
inc
rcpps
iret
mov
inc
pushf
testl
add
mov
stc
pop
xchg
mov
jecxz
adc
sti
sbb
cli
add
or
dec
dec
mov
push
push
in
test
addb
cld
lea
call
or
leave
xorb
jp
push
xchg
fs
sbb
rclb
adc
add
rcll
mov
xor
mov
das
rcrl
loop
push
in
aaa
flds
adc
pop
xchg
xor
outsl
ror
mov
ret
into
into
fcomps
xchg
inc
loope
mov
jb
jle
sbb
cmp
push
push
jno
push
push
xor
fs
gs
icebp
cmp
enter
mov
add
pop
mov
sub
add
sbb
sbb
enter
into
mov
xchg
mov
dec
dec
xchg
imul
mov
mov
and
cli
cmp
rorb
test
sub
jg
pop
xor
pusha
xchg
out
and
add
fadd
push
mov
jns
imul
jmp
xchg
lcall
jb
lcall
adc
jl
ljmp
sub
lret
adc
stos
push
adc
push
jo
adc
jne
fs
ret
js
sbb
adc
je
xchg
cmp
xor
fsubs
pop
outsb
add
aas
aas
mov
inc
fcmovnbe
andb
push
insl
test
adc
lret
cli
ja
xchg
adc
mov
leave
push
push
jo
xor
ja
nop
fcoml
cmpsb
fcoms
cmp
cmp
clc
cmpsb
sub
push
sti
push
and
adc
mov
test
add
xchg
and
push
jne
push
mov
or
mov
sub
cmp
pop
mov
and
inc
stos
rclb
sbb
mov
push
mov
and
outsl
cs
push
adc
scas
in
adc
js
adc
sti
ret
xchg
xlat
test
sbb
or
sbb
lret
and
inc
inc
and
inc
out
test
pop
ficoml
cmpb
in
adc
repz
mov
ds
fs
mov
or
mov
sbb
mov
push
divl
push
xchg
add
in
mov
dec
sbb
xchg
jne
sbb
insb
ficoms
sbbb
or
push
lret
pop
push
nop
jb
popa
test
push
xchg
subl
mov
insl
aam
enter
enter
imul
in
add
pushl
or
jmp
fucomp
mov
mov
sahf
leave
sbb
push
outsb
mov
xor
roll
ja
inc
dec
aam
xchg
frstor
popfw
mov
insb
xor
ss
adc
inc
imul
lsl
test
out
popf
imul
xchg
mov
aaa
cwtl
dec
mov
mov
cli
ss
or
cmpsb
lret
and
repnz
ficompl
mov
jo
lods
push
xchg
cmp
sbb
test
test
int
and
in
lahf
xlat
cmp
adc
iret
inc
pop
add
inc
jp
adc
enter
fisttps
cltd
xor
xor
aaa
or
nopl
xor
add
pop
shl
ja
dec
dec
mov
aad
notb
mov
lret
aas
mov
and
aad
test
shrl
cmp
js
fcmovnb
cld
mov
jge
mov
and
pop
inc
imul
jns
sbb
jge
jnp
test
ljmp
or
push
xchg
jae
iret
mov
addb
rcrb
mov
in
bound
pop
aam
sbb
aam
add
jno
jmp
incb
mov
xchg
jo
or
lret
dec
sbb
push
cmp
xchg
je
dec
add
mov
leave
cmp
jae
xor
xor
stos
push
shll
movsb
pop
sbb
cmpsl
inc
bound
addr16
push
pop
push
xor
movsl
pop
xchg
cli
adc
push
cmpl
mov
push
mov
and
cli
out
jne
fsubrs
push
mov
dec
flds
dec
xchg
incl
loope
bound
push
test
cld
xchg
movsb
rcl
fstpl
cmpsb
in
loop
enter
jb
repz
xchg
lahf
inc
cmp
daa
jge
mov
cwtl
jmp
xchg
and
mov
fadds
or
or
cmpb
adc
add
mov
fwait
dec
addl
outsl
and
addr16
push
cmc
leave
jmp
addl
scas
jno
hlt
es
mov
xchg
or
mov
mov
icebp
ljmp
call
shll
cld
dec
js
push
pop
shrb
cmp
shr
or
in
rclb
sub
and
leave
stos
cmpsl
and
xlat
aam
cwtl
mov
jne
jecxz
cvtdq2ps
roll
fisubrs
cltd
cmpb
sub
sarb
out
mov
jmp
sub
and
std
cmpsl
call
ja
mov
ljmp
cmp
loop
xor
ficompl
dec
fidivs
movsl
inc
lret
xor
stos
sbb
les
mov
aam
fnstsw
sbb
dec
int3
sahf
std
out
or
into
xchg
mov
aam
scas
lock
xor
lods
gs
ficomps
pop
sbbl
pop
lret
xchg
push
inc
sbb
mov
xchg
or
pop
adcl
scas
inc
push
decl
pop
nop
xchg
mov
stos
and
ret
adc
push
add
test
fs
inc
mov
jle
push
call
paddq
push
xchg
dec
test
outsl
dec
pop
pop
xchg
mov
mov
sahf
xlat
pop
xor
xchg
fdivl
rorl
enter
insl
xchg
icebp
xchg
arpl
push
clc
xlat
std
mov
jmp
push
imul
sbb
int
orl
ret
lahf
dec
push
cmovge
jo
pusha
jge
lods
dec
insl
mov
cmp
jmp
push
push
loopne
xor
sbbb
loop
mov
xchg
add
dec
and
mul
mov
sti
into
sbb
stos
jo
fsubl
shrb
xchg
icebp
mov
insb
cmp
lods
out
cmc
ljmp
ret
enter
add
mov
pop
jle
cmpl
outsl
jns
insb
test
push
fnstcw
shrb
lret
or
iret
loope
cmpsb
or
insl
jno,pt
test
stc
or
pop
xor
pusha
sbb
xchg
adc
sahf
leave
mov
inc
sbb
jns
or
lcall
rcrb
sub
les
lret
sbb
push
xor
mov
jmp
sahf
pop
and
movsb
and
cmp
movsb
mov
push
and
call
and
popa
sbb
lret
pop
mov
das
push
es
arpl
idiv
ficompl
jge
fnsetpm(287
jl
test
rcl
sub
jl
arpl
jne
add
pop
add
fwait
mov
fdivs
ds
pop
xchg
mov
hlt
inc
dec
cmp
mov
es
pop
in
inc
xchg
mov
jnp
and
out
or
scas
std
sbb
inc
sbb
jg
mov
jmp
pop
test
push
cmp
mov
andl
sub
adc
mov
cld
pop
push
nop
mov
fsubs
fstp
push
outsl
aad
loopne
imul
dec
jmp
inc
ficomps
and
jecxz
daa
fimuls
mov
shll
ja
mov
ret
push
mov
rcrb
lret
push
sub
aaa
loope
mov
pusha
push
inc
sbb
jae
sbb
imul
js
cmp
push
and
mov
mov
mov
cmp
jecxz
ja
add
push
push
sbb
mov
pop
mov
add
rorb
cmp
pop
push
lahf
pop
sbb
or
mov
das
mov
cmp
loop
cmc
push
sbb
sbb
in
inc
cmpsl
add
pop
push
leave
mov
push
imulb
cmp
iret
fbld
das
add
pop
cmp
push
ret
popf
ja
into
psubsw
mov
mov
push
out
test
lock
and
adc
xor
sbb
cwtl
pop
cmp
popa
addl
sub
cmp
push
sbb
jg
cmp
mov
jb
push
shrl
cli
jmp
lds
cltd
dec
cmp
outsl
and
ret
in
dec
sub
xor
outsb
pusha
dec
cs
dec
pusha
sbb
shlb
mov
or
movsl
push
ljmp
mov
stos
sbb
lahf
add
es
icebp
add
movsl
push
xchg
notl
popa
add
push
mov
rcrb
fiadds
ds
insl
loop
sti
jne
cmp
mov
iret
fsubs
fcoml
jo
inc
xor
lock
jno,pt
sub
mov
mov
inc
jnp
jg
icebp
pop
pop
aad
adc
leave
rorl
pushf
stc
push
jbe
mov
sub
adcb
mov
cld
add
xchg
add
pop
bound
push
in
inc
idiv
mov
mov
test
sti
cld
divl
out
call
and
jns
push
add
add
jl
out
or
ficompl
loop
add
xchg
pop
icebp
mov
sub
lds
sub
push
inc
stos
addr16
fdivrs
dec
fwait
cmp
pop
or
jo
or
jmp
loop
pop
add
push
cli
aad
inc
inc
jl
xchg
pop
popf
adc
xchg
sub
mov
inc
rdtsc
in
inc
mov
mov
lea
cmpsl
or
mov
add
out
mov
xchg
or
dec
mov
inc
sub
hlt
jnp
jns
popa
out
sbb
leave
arpl
clc
sbb
adc
orb
xchg
lcall
inc
mov
add
push
je
leave
pop
dec
call
cmp
mov
repz
shr
repz
jo
inc
in
xchg
cwtl
and
aam
scas
movsl
jns
imul
lahf
adc
adc
mov
movsb
jmp
je
pop
pushf
out
inc
mov
push
mov
pop
xchg
cmp
fnstsw
adc
sub
popf
cmp
into
cmp
jne
mov
int
pop
cli
rcrl
test
fdivrl
cmpsb
push
pop
cmp
clc
sar
dec
push
mov
popf
repnz
insb
sti
cmp
sbb
jecxz
je
shl
push
in
xchg
orb
dec
sub
inc
out
push
xor
and
test
fmulp
mov
dec
and
stc
jge
xor
adc
fs
xchg
loop
xchg
stos
ror
out
mov
inc
add
into
into
test
pop
lahf
je
cmp
pusha
jb
mov
dec
and
imull
push
aas
push
sub
jecxz
mov
out
or
xchg
inc
loopne
add
lea
push
mov
out
repnz
es
movsl
pop
mov
sub
mov
aam
stos
jno
add
lret
dec
xchg
and
idivb
pop
add
add
data16
test
shlb
rclb
test
xorl
sbb
pusha
sub
sbb
sub
or
xchg
clc
or
mov
je
popa
mov
movsl
and
je
insb
pop
arpl
xor
xchg
cmp
mov
jp
fdivs
mov
push
sbb
push
inc
jnp
cmpsb
cmp
push
dec
lea
rolb
or
dec
lea
and
imul
lret
xor
pop
pushf
adc
jb
mov
xchg
adc
pop
push
addr16
arpl
or
pushl
xor
pusha
xor
sub
cs
xor
sub
or
jno
icebp
cs
jmp
or
sub
in
notb
mov
sbb
cld
xchg
mov
push
mull
push
iret
push
fstps
into
dec
or
in
xor
jle
or
lods
inc
js
insb
adc
sub
pop
push
xor
lds
cmp
xor
pop
fwait
pop
imul
or
cli
aas
cld
dec
sbb
jns
cmp
dec
add
loop
into
push
lret
loopne
lock
mov
jmp
inc
push
xchg
mov
xchg
mov
std
mov
mov
movsb
push
xchg
repz
lods
inc
inc
outsl
jbe
adc
int
cltd
shrb
clc
ljmp
cmp
roll
lds
std
sub
shlb
jecxz
pop
add
lahf
jbe
mov
test
inc
pusha
cmp
inc
mov
jae
arpl
cwtl
rol
scas
or
lahf
cmp
sahf
jp
stc
mov
cmp
loopne
stos
fwait
add
jle
fdiv
mov
enter
jg
mov
dec
pop
imul
loop
sbb
and
inc
adcb
lods
pushf
adc
jl
inc
cmp
sbb
pop
ja
jg
mov
movsl
mov
xchg
int
pop
sbb
shrl
out
push
xor
pop
pop
mov
push
aas
inc
pop
xor
lahf
mov
xchg
and
lea
lret
add
pop
pop
ljmp
in
xchg
jge
jmp
sbb
lock
xchg
in
push
pop
cmp
clc
xchg
cmp
mov
movsb
hlt
rcll
test
mov
popa
loope
and
or
xor
push
lock
inc
push
inc
inc
stos
pop
and
hlt
fcoml
faddp
jle
dec
mov
push
sti
call
mov
fcmovu
cli
enter
popa
stos
inc
jl
inc
test
sahf
ja
cmp
fstl
cli
push
inc
sbb
cli
lock
aas
loopne
rorb
sahf
cwtl
and
jns
stc
dec
inc
push
movsl
dec
aaa
cmp
mov
xchg
rcl
shrb
mov
aas
jecxz
jne
popf
pop
imul
in
sbb
pop
xchg
loope
jg
aas
pop
fs
mov
ss
dec
inc
iret
cmp
cmpsb
call
dec
sub
clc
imul
sub
sarb
xchg
cmpsb
sub
addr16
pop
addl
and
inc
std
ja
lret
imul
cmpb
aaa
cmp
sub
lcall
pop
push
pusha
ret
sarl
cmp
push
lods
xchg
stos
ret
mov
xchg
xor
cmp
or
loopne
sbb
lock
cmp
add
nop
fstpl
icebp
pop
and
xor
sbb
insl
or
dec
xor
cmp
mov
enter
lret
jle
aad
enter
ret
mov
xchg
sbb
jns
push
xlat
mov
divl
clc
mov
add
test
rclb
cltd
inc
or
mov
stc
data16
mov
sahf
xchg
jle
mov
push
lock
inc
mull
push
js
mov
inc
ljmp
xchg
mov
jge
call
xorl
cvtps2pd
pop
dec
pop
fisubrs
enter
rolb
loopne
fdivp
filds
jns
and
add
pop
lahf
push
sti
mov
add
mov
or
in
arpl
adc
test
insb
rol
xchg
jae
imul
nop
push
in
cmovp
sahf
inc
loop
enter
je
inc
arpl
sbb
scas
in
add
testl
call
jne
out
insb
mov
ja
inc
push
daa
cmc
adc
pop
cs
push
enter
mov
sti
mov
cmp
or
insl
jne
cmp
stc
inc
pop
cmp
mov
fldcw
mov
fwait
pop
int
dec
adc
aam
test
pop
fwait
shll
jmp
pop
jbe
push
cmp
mov
std
mov
test
and
dec
filds
pushf
or
inc
jb
sbb
inc
and
lahf
cltd
clc
push
or
daa
les
call
scas
test
ljmp
outsw
adc
push
jp
aaa
lock
mov
inc
mov
sbb
xchg
jg
add
cs
out
dec
mov
pop
mov
jns
les
jns
fists
mov
fidivl
dec
test
jno
cld
rcll
inc
stc
push
stos
mov
les
mov
lods
jle
repnz
mov
lea
out
add
sub
mov
xor
aas
imul
cmp
std
pop
in
leave
pop
xchg
jle
dec
xchg
shll
aas
sahf
jg
inc
pop
stos
orb
mov
imul
subl
jge
push
popf
cld
inc
and
lods
std
xchg
mov
sub
mov
inc
xchg
lds
insl
add
pusha
xchg
aaa
imul
jecxz
out
dec
or
xor
mov
xor
cmpsb
xor
sar
dec
inc
add
addl
imul
pop
test
mov
sti
xor
shll
cmp
mov
xchg
mov
gs
inc
les
xchg
shlb
outsl
mov
dec
push
fstpl
jp
sub
rorb
push
push
xor
sti
decl
and
fdivs
lods
notb
add
pop
pop
mov
mov
xor
pop
dec
nop
fucomip
adc
movsl
cmp
push
loope
divl
jmp
out
jns
fistps
inc
idivb
test
pop
or
jl
stc
inc
dec
in
mov
or
and
sbb
dec
sub
mov
mov
or
addl
lret
and
sbb
pop
pop
stc
icebp
or
dec
aad
stos
xchg
pop
in
in
hlt
jb
inc
clc
jmp
loope
push
rcrb
and
add
pop
ljmp
and
inc
je
push
xchg
xchg
adc
sarb
fnstsw
fstps
lds
xchg
aas
daa
push
push
push
jns
dec
push
leave
push
lahf
and
mov
icebp
push
fwait
sbb
and
sahf
pop
outsb
cmp
mov
insl
push
and
jp
pop
icebp
mov
mov
inc
clc
mov
jb
sub
jns
inc
or
or
mov
addr16
clc
insl
sub
insb
fs
cs
movsl
pop
and
mov
icebp
jl
fcoms
sti
arpl
and
or
mov
xchg
ja
jb
mov
ja
fsubl
mov
add
xchg
fidivrl
xchg
aad
inc
add
push
fcmovbe
pop
inc
xorl
cmpb
adc
repnz
aad
push
sbbb
daa
mov
aad
cwtl
or
mov
jbe
jb
dec
cld
pop
jae
jno
decb
mov
push
xorl
mov
out
hlt
mov
sub
xor
repz
loop
imul
mov
or
sub
testl
lret
bound
aas
mov
add
rcr
in
lods
mov
pop
jns
call
mov
push
cmpsb
jp
push
xchg
or
call
pop
lea
push
aam
iret
jo
cmp
sbb
outsb
and
mov
adc
js
add
test
adc
std
stc
mov
dec
jne
adc
lcall
scas
jne
test
add
pop
pop
push
mov
or
jns
test
mov
xor
int3
push
pop
and
fisttpll
cli
nop
mov
jl
cmp
ret
pop
inc
icebp
sub
sbb
out
out
push
test
divl
push
pushf
in
cmpsl
and
orl
lock
push
or
jne
mov
mov
arpl
and
pop
mov
sub
push
and
ja
add
sbb
cld
mov
sub
push
lds
sub
lock
scas
dec
test
pop
imul
xchg
push
dec
sbb
xchg
jle
fs
xchg
push
jecxz
outsb
push
push
loop
lahf
dec
and
popf
iret
mov
test
adc
addb
mov
jp
mov
notb
jno
mov
shlb
add
cmp
push
movsb
orl
pop
cmc
fdecstp
pop
dec
dec
jg
inc
dec
fnsave
aam
lea
mov
jo
cmp
fisubrs
enter
std
movsb
sub
inc
mov
daa
inc
mov
out
xchg
push
xchg
pop
mov
push
mov
dec
cmpsl
push
dec
fst
rcl
xchg
lcall
and
rolb
dec
ja
sub
ja
lcall
mov
in
pop
sti
cmovo
add
xchg
pushf
mov
jg
add
xchg
mov
movsb
mov
call
sbb
xchg
mov
popa
aas
push
jmp
std
sbb
imul
fdivrl
out
pop
sti
call
nop
and
push
lea
mov
mov
jecxz
mov
dec
mov
fisubl
push
cmpb
lds
adc
and
lods
cmpsb
inc
add
pop
add
push
sbb
pushf
in
pop
lahf
mov
mov
adc
out
add
out
repz
xor
lret
adc
fwait
or
inc
bound
pop
mov
sarl
xchg
movsl
sub
xor
push
cltd
mov
lahf
fldt
and
xchg
and
cmp
pop
mov
addr16
js
mov
pop
xor
mov
add
sub
jne
xchg
loopne
decb
imul
mov
inc
push
nop
jo
out
das
cmp
mov
aam
dec
or
dec
mov
jae
sub
movsb
cltd
lods
es
jge
movsb
mov
nop
nop
mov
xchg
and
pop
or
dec
cltd
in
push
pop
xchg
loopne
pop
sub
xor
xchg
movl
inc
mov
mov
fucomi
push
and
sahf
imull
out
fstpl
sub
stc
xchg
cld
jle
jae
sbb
test
shlb
stc
mov
push
lods
jns,pn
data16
in
or
adc
addr16
add
inc
push
and
aad
sub
fs
pop
fsubrl
xchg
jbe
push
jmp
loopne
sub
fidivrl
jo
test
scas
sbb
psubq
stos
leave
push
or
push
sub
out
hlt
in
xor
inc
push
lret
mov
dec
pop
les
lds
and
leave
dec
or
mov
add
push
loope
lcall
push
movsl
mov
stos
inc
pop
or
repz
sub
sub
inc
adc
dec
xor
inc
lea
leave
ja
sbb
cmp
mov
in
lahf
mov
movsl
out
sbb
sub
xchg
xor
add
hlt
dec
xor
jmp
xchg
lock
sar
ret
pop
pop
stos
rolb
pop
and
inc
stos
mov
push
scas
mov
pop
repz
gs
add
push
daa
cmp
jecxz
mov
mov
ret
sub
cld
lcall
mov
std
popa
outsl
add
push
mov
in
adc
out
sbb
data16
xor
jb
repnz
xor
ss
add
mov
mov
fiadds
lret
rolb
inc
mov
sti
popa
push
in
test
push
inc
mov
push
adc
mov
aaa
mov
test
cmp
mov
lret
fldl
mov
jp
dec
or
mov
cmpsl
xchg
mov
or
cmp
mov
test
pop
or
xchg
mov
inc
in
in
ret
shrb
mov
insl
mov
dec
leave
xchg
cmp
adc
sbb
push
push
cmp
ljmp
iret
je
jb
lods
push
add
je
ret
ja
xchg
push
adc
sub
jno
ljmp
xchg
inc
sub
aad
xchg
jb
scas
cmp
cmp
or
xor
pusha
jl
push
aaa
ret
and
dec
dec
xor
push
imul
pushf
sahf
jb
xchg
dec
sbb
dec
jbe
in
test
or
or
mov
out
rol
or
mov
fdivr
gs
push
adc
pop
stos
gs
sub
push
lahf
mov
imul
sar
sbb
jge
push
pop
jns
mov
movq
mov
xchg
out
jmp
adc
icebp
xlat
nop
jnp
sbb
lret
add
mov
dec
add
mov
movsb
lahf
dec
dec
stc
lods
addr16
or
inc
xchg
scas
jae
jbe,pt
or
inc
adc
lods
mov
leave
xor
jmp
pusha
jecxz
mov
inc
es
xor
xorb
jmp
stos
stos
fcmovu
or
fs
ficompl
movsb
push
sbb
rclb
jge
pop
jns
mov
jbe
test
lcall
nop
pop
rcrl
xchg
jns
mov
pushl
mov
xor
mov
mov
iret
mov
les
or
or
add
jmp
loopne
sar
pop
mov
in
mov
mov
mov
mov
addr16
scas
mov
aaa
sub
adc
xchg
fcomi
and
cmp
aaa
mov
es
outsb
popf
std
adc
mov
xchg
lret
sub
repnz
mov
inc
mov
out
xchg
push
enter
imul
in
xchg
dec
pop
test
movsb
and
cmp
test
jmp
sub
sub
push
jnp
fbstp
adc
loope
jecxz
add
adc
gs
insl
xor
inc
mov
insl
in
shlb
adc
std
xor
cmpsb
mov
mov
cmp
into
adc
pop
jb
and
xchg
std
xor
inc
inc
mov
test
xchg
mov
int
les
xchg
fisubs
pop
call
out
or
inc
ljmp
cmp
mov
lock
xorb
rol
sub
clc
pushf
pop
adc
mull
cmp
mov
mov
inc
das
sbb
push
jo
outsl
cmp
push
adc
pop
out
mov
add
mov
mov
hlt
fisttpll
in
fcmove
mov
push
sbb
sarl
dec
sub
sarl
mov
jl
jbe
mov
pop
pusha
adc
cmpsb
cmpsb
push
push
daa
pop
sti
mov
scas
and
lret
in
cmp
call
mov
adc
divl
mov
push
mov
inc
sbb
scas
sub
xchg
xchg
icebp
movsb
lea
pop
jp
xchg
loop
or
jmp
inc
aam
pop
sahf
insl
insb
popw
sub
adc
jmp
loop
cs
push
jo
and
jo
xchg
mov
jmp
xlat
xor
rcrb
out
inc
fimull
xchg
cld
faddl
jg
fstpt
arpl
in
cmp
add
push
pop
mov
imul
xchg
lret
ret
cmpsl
pop
push
cmp
test
xchg
mov
push
lock
adc
or
mov
jo
mov
xorl
xchg
inc
icebp
xlat
sub
fisubrs
rolb
imul
sbb
bound
stos
cmp
fnstenv
loopne
sbbl
inc
sbb
cmp
jb
cmpsl
push
adc
out
dec
lcall
sub
mov
movsb
sarl
xchg
xchg
sub
adc
ret
pop
sbb
jl
lret
sbb
fsubl
jle
cmp
leave
sub
mov
xchg
fisttpll
cmpsb
inc
dec
lea
daa
insl
pop
push
lret
add
gs
sbb
inc
stc
imul
push
stc
mov
inc
pusha
imul
sub
sbb
and
or
cltd
add
rcrb
ja
jnp
addr16
or
pop
dec
dec
jmpw
pop
sarb
cmp
icebp
jbe
aaa
popf
push
cmp
push
in
call
mov
ja
jle
rep
test
dec
scas
mov
ljmp
cs
mov
jp
dec
dec
mov
inc
movsl
xor
std
or
sbbl
sbb
out
cmp
cmpsl
dec
nop
cmp
ss
sbb
pop
push
aaa
jno
popa
insb
cld
jmp
jle
jbe
jg
imul
adc
and
xor
scas
out
fmuls
popa
ja
jg
aaa
mov
xchg
mov
or
mov
daa
sub
fstl
pop
out
push
stc
stc
push
jge
push
outsl
pop
jmp
jg
jae
inc
xchg
clc
imul
jmp
mov
or
test
lret
pusha
stc
dec
icebp
pop
repnz
shl
jo
push
mov
and
fnsave
cltd
aaa
mov
sarb
sub
aaa
xchg
test
ret
lds
dec
addr16
or
add
incl
xor
inc
loopne
push
mov
xor
dec
inc
dec
fisubs
mov
cmp
js
dec
sbb
rol
mov
cwtl
shr
pop
and
jmp
push
or
xor
push
arpl
fs
pop
cmpsb
adc
xchg
ret
repz
popa
push
int
ljmp
lcall
or
movsl
insb
xchg
mov
sbb
mov
pop
xchg
in
xor
insb
sub
arpl
inc
cli
inc
inc
test
mov
aaa
or
out
xorb
ror
arpl
jg
xchg
cmpsl
cmc
repnz
and
mov
push
mov
push
cmpsb
push
jns
ret
or
and
mov
lret
fidivl
dec
pop
pop
stc
loopne
jb
add
xchg
mov
push
lea
mov
push
cmc
inc
or
mov
sbb
ret
jo
add
jnp
std
lods
and
gs
sbb
icebp
xchg
aas
sti
pop
and
int
push
add
push
cmp
pop
rcll
push
iret
clc
mov
adc
orl
loopne
loop
adc
pop
mov
mov
rcll
aas
in
int
pop
loop
mov
lcall
sbb
shl
dec
dec
mov
movsb
add
jnp
pop
lock
popa
lods
dec
out
and
lods
jle
mov
add
sahf
negb
aam
imul
in
inc
or
dec
cwtl
mov
cmp
sbb
outsl
inc
or
cld
test
arpl
imul
minps
shlb
xchg
lods
and
shlb
xor
or
rclb
insb
in
les
dec
popa
sbb
testl
outsl
int3
xor
and
inc
cmpsl
push
pop
lahf
xor
dec
out
stc
jge
sbb
dec
fwait
dec
pop
sub
jmp
cmpsb
movsl
fcmovu
add
aas
add
test
pushl
push
inc
mov
push
cltd
mov
cvttps2pi
mov
xchg
out
stos
pop
fstpl
sub
repnz
add
sbb
cmpsl
sbb
xor
mov
cmp
jle
dec
test
jmp
mov
fs
inc
mov
mov
cmpsl
sub
mov
fs
fldcw
fucomip
outsb
add
mov
adc
shll
dec
clc
or
cld
and
jno
sarb
mov
cmc
adc
dec
or
mov
push
cmp
into
push
icebp
and
les
stos
int3
movsl
ret
out
hlt
xchg
popl
es
or
mov
test
mov
push
das
sbb
inc
lret
shll
iret
rcr
pop
and
xor
popa
insb
pusha
aaa
cmpsl
sbb
scas
bound
add
aaa
sbb
fwait
outsl
test
imul
push
push
mov
adc
cmpsl
mov
sbb
jb
roll
push
mov
adc
insb
into
clc
or
sub
sub
cmp
ja
jg
push
mov
mov
jns
dec
shlb
popa
sbb
xchg
lds
pop
push
jg
xor
inc
aam
push
call
cwtl
or
aam
sbb
outsb
jnp
les
fs
mov
out
add
gs
stc
test
mov
dec
push
xor
loop
xor
outsb
lret
decl
mov
sub
jae
and
roll
int3
data16
sub
mov
dec
movsb
insb
dec
adc
jb
cmc
lock
pop
inc
push
mov
adc
sub
xchg
inc
out
ja
dec
adc
cmovae
xor
movsb
lods
inc
icebp
gs
sub
aaa
scas
cmc
jno
push
sub
mov
mov
scas
loope
pop
push
inc
pop
inc
or
aaa
incb
mov
sar
popf
mov
xchg
jae
lahf
test
adc
push
mov
sbb
imul
loopne
mov
mov
adcl
xor
jbe
lods
sbb
mov
loope
pop
in
div
fadds
inc
idiv
add
mov
mov
xchg
rcr
cmp
addr16
fsubr
push
xchg
movsw
inc
push
dec
jge
dec
cmp
sbb
push
push
clc
pop
repz
dec
test
scas
pop
dec
push
push
icebp
and
jge
mov
inc
xchg
push
out
lock
push
lods
lods
mov
dec
faddl
push
mov
inc
pop
addr16
mov
sbb
rclb
in
inc
outsb
mov
hlt
clc
gs
ret
cmp
or
or
pop
cmc
push
mov
fldt
loope
jg
cmp
sub
cmpsb
mov
xor
xlat
rorb
dec
xchg
jl
inc
xchg
test
jg
jo
xchg
push
xor
jb
repz
xor
repz
cmp
mov
ficoml
outsb
jnp
aas
sub
jae
adc
mov
leave
lods
notl
mov
and
and
sbb
rcrl
jns
out
scas
cmp
pop
iret
jae
fsts
mov
ss
lret
lds
lcall
rcl
mov
fldcw
repz
shlb
test
adc
jo
pop
daa
cmp
and
rorb
into
fisubl
insb
xor
in
jbe
cltd
and
jae
std
add
iret
fwait
push
nop
stos
inc
fidivl
daa
lods
loope
jle
in
mov
rcpps
sbb
push
xlat
mov
and
lahf
sbb
jle
fidivs
add
je
sub
adc
inc
jecxz
jne
cmp
xchg
sbb
cltd
mov
mov
in
mov
push
addr16
pop
sbb
dec
dec
pop
ret
movsb
inc
inc
jo
test
or
pop
inc
loope
adc
mov
and
jne
sbb
dec
addr16
cmpsl
add
or
outsl
or
repnz
pop
loop
dec
jl
xlat
pop
xor
cltd
jo
add
dec
cs
out
pop
std
mov
sbb
mov
stos
mov
push
jb
sbb
cli
mov
out
xchg
cmpsb
les
ds
jp
mov
out
loop
mov
mov
mov
and
andb
inc
fdiv
or
bnd
aaa
push
out
aaa
inc
icebp
rcrl
pop
xor
dec
adc
stos
inc
or
cmp
ja
push
lock
mov
xchg
push
mov
push
sbbb
jne
inc
rcrb
push
cmpsl
pop
mov
add
mov
enter
xchg
dec
nop
loop
sbb
jno
roll
add
cmpsl
shrb
sub
lret
pop
add
flds
dec
add
and
adc
jge
adc
fldenv
sub
or
jns
rolb
xchg
lds
xor
int
jno
cmp
dec
xchg
dec
outsb
outsl
adc
nop
in
mov
sbb
repnz
xchg
js
sbb
icebp
insb
frstor
loop
sub
sub
out
shrb
jne
or
cmp
or
loopne
insl
add
add
daa
call
je
stos
scas
pushf
rcrl
cmpb
aas
sub
cmpsl
sbb
push
mov
mov
out
add
test
in
xchg
cld
adc
xchg
pop
cld
and
xor
inc
shrl
out
fstpl
jge
ljmp
out
jne
push
insb
add
pop
into
jmp
add
mov
jle
push
ss
inc
negb
test
in
mov
sbb
or
stos
es
dec
dec
mov
adc
xchg
clc
mov
pop
and
xchg
rorb
leave
repz
inc
stos
jecxz
into
stos
test
inc
inc
sahf
jno
popa
push
dec
pop
addr16
dec
push
movsb
scas
rcll
pop
stos
dec
out
jmp
out
cmp
fbld
xchg
lds
mov
loopne
lock
dec
xchg
cmp
arpl
imulb
outsb
loop
int3
popa
fs
sti
pusha
mov
xor
dec
push
ljmp
ss
push
nop
cli
dec
mov
dec
les
outsb
cmp
loopne
out
mov
imul
lds
iret
push
clc
push
add
xchg
nopl
jbe
enter
jns
and
fwait
loope
dec
outsb
sbb
push
test
shlb
pusha
out
xor
sub
out
rorb
addb
sti
fdivr
mov
push
das
jp
je
add
loopne
push
pop
xchg
out
inc
in
or
inc
hlt
das
adc
cmp
dec
faddl
cltd
bound
popf
push
xor
and
mov
ds
jge
iret
add
aas
testb
sub
mov
jbe
shll
inc
js
xchg
test
cmp
jge
popa
push
dec
aaa
cmc
inc
or
adc
fs
xchg
cmpl
rolb
xor
imul
sti
sahf
push
mov
xor
aaa
insl
pop
add
cli
mov
pop
push
cld
ljmp
adc
xchg
dec
jno
mov
roll
mov
inc
fstpl
ss
es
rcrl
add
xor
sub
pop
iret
push
mov
ret
lods
push
jecxz
inc
cltd
pmaddwd
pop
loopne
movsl
int3
cmp
cmc
mov
es
outsl
jnp
shlb
mov
push
sub
repz
xor
int3
lret
outsb
lret
test
mov
lret
mov
lret
sbb
mov
or
out
xlat
or
or
out
ret
cmp
loope
mulb
sub
ljmp
dec
cmp
pop
jno
aad
stc
xor
aas
xchg
imul
push
pop
loop
les
imul
or
xchg
jmp
cs
ljmp
sub
pusha
sarb
in
leave
xchg
push
in
addr16
shll
in
dec
jle
aam
into
mov
das
cmpsb
leave
push
mov
push
shll
std
test
xor
stos
loopne
inc
test
and
inc
test
out
jg
xor
call
sahf
jg
lret
iret
aas
aaa
out
push
std
mov
inc
pop
in
sarb
js
adc
inc
mov
mov
push
imul
sub
in
stos
sub
ljmp
iret
popa
add
aaa
imul
sti
faddp
sub
cli
push
scas
jp
jl
dec
loopne
mov
cmp
push
cmp
pop
fstl
and
xor
test
adc
sbb
xor
lcall
sbb
sbb
test
xchg
push
or
xor
pop
jle
pop
push
jb
pop
sub
inc
insb
xchg
push
mov
adc
subb
das
cmpsl
push
mov
leave
mov
mov
mov
inc
aam
pusha
arpl
and
mov
pop
pop
stos
or
or
scas
pusha
mov
shrb
ljmp
xchg
inc
in
frstor
dec
mov
jne
mov
or
insb
cwtl
xchg
in
mov
mov
push
fisttps
inc
ja
xor
cs
cmp
ja
ret
jmp
dec
cmp
sarb
divb
or
push
lods
sub
xchg
in
mov
jae
mov
cmp
pop
shl
mov
xchg
sbb
xor
adc
lcall
imul
xchg
sub
shll
xlat
mov
and
adcb
mov
sbbl
hlt
rcll
lcall
loopne
sahf
negb
mov
out
pop
pop
mov
sahf
adc
dec
pushf
xchg
and
sub
popl
popf
sbb
lods
movsb
mov
dec
arpl
or
pusha
ss
test
xlat
pop
xor
sub
aam
fidivl
insb
xor
push
add
sbb
out
or
cmp
in
fwait
xchg
es
loopne
xchg
xchg
in
jg
mov
repz
bound
xor
in
push
and
sar
daa
ret
inc
shll
test
push
jmp
sbb
mov
cmp
into
fucomip
jp
cmp
pop
jnp
fnstenv
js
xor
and
addb
test
ficoml
adc
mov
dec
stc
iret
aam
mov
push
test
xchg
aad
cmp
iret
cmp
xor
cmp
test
mov
jbe
xchg
iret
sbb
xor
or
jae
shlb
push
ljmp
aas
xchg
pop
mov
fwait
stos
orl
rcll
rcrl
cmp
xchg
cld
and
and
mov
adc
sarl
nop
int
je
sbb
inc
lea
cmpsl
in
push
jbe
pop
faddl
jne
pop
loope
iret
stos
imul
jl
jno
addr16
cwtl
mov
push
and
lret
or
push
sub
mov
push
jae
adc
adc
lahf
xor
pop
sub
orb
jnp
add
pop
fildl
or
into
pusha
push
fstpt
xor
add
mov
dec
rolb
xchg
pop
leave
cs
popl
dec
gs
mov
dec
push
icebp
mov
das
paddusb
mov
ss
ljmp
inc
and
mov
rcrl
or
xor
mov
pusha
cmp
and
xchg
push
cld
lahf
xchg
outsb
repnz
mov
pop
lret
popa
xor
jg
outsb
aas
sub
mov
xchg
push
in
lods
fidivrl
mov
jmp
inc
sub
cmp
pop
pop
fidivl
stc
jle
xchg
mov
adc
mov
xchg
roll
stc
mov
mov
mov
inc
inc
push
lcall
stc
mov
pop
nop
pop
mov
cmpsb
sub
out
jl
inc
adc
movsl
mov
shlb
inc
sbb
rclb
popa
inc
cmp
xchg
push
xchg
xorb
stc
fiaddl
out
mov
and
jle
mov
sub
xor
fldt
sbb
and
push
stos
dec
cmp
repz
arpl
jg
xchg
push
adc
mov
stos
sahf
bound
aam
ss
jecxz
clc
ret
push
and
idiv
divb
daa
mov
jnp
flds
cmp
stc
mov
push
bnd
push
cmpb
push
push
xchg
mov
rorl
test
aas
add
inc
lcall
jp
push
add
test
adc
hlt
stos
imul
popa
jg
or
add
shlb
cmp
jo
push
xchg
dec
je
adc
ljmp
sub
sub
push
sahf
gs
lret
scas
push
push
jb
push
lcall
negb
lcall
inc
int
insl
mov
pop
ret
xchg
lcall
in
sub
loopne
dec
stos
fwait
int3
sub
mov
pop
daa
xchg
cmp
shl
or
test
inc
in
ljmp
and
jne
test
dec
pop
les
setne
stos
outsl
loopne
mov
xor
int3
loop
mov
xor
in
add
sub
test
rorb
inc
mov
inc
and
outsl
mov
inc
jbe
loope
mov
mov
ds
aas
sahf
mov
push
repz
mov
jmp
mov
jb
insb
mov
loop
mov
fiaddl
pop
adc
leave
in
xchg
mov
iret
lcall
push
push
add
xchg
sub
mov
and
jmp
sbb
push
ret
popa
nop
xor
jnp
lea
xchg
cmp
fimull
push
popf
dec
mov
repz
or
sbb
gs
jle
push
cs
cmp
jmp
iret
dec
movsb
popa
fiaddl
sbb
imul
pop
test
insb
cmp
loop
pop
cmp
test
inc
adc
int3
xchg
cld
cwtl
loopne
push
pop
imul
sub
or
movsb
xor
dec
popf
mov
add
dec
push
clc
fdivs
loop
or
test
adc
lea
adc
xor
repz
lods
xor
pop
out
sbb
xchg
outsb
lods
ja
subl
add
lods
int
adc
loop
movsb
outsb
stos
rcl
lahf
sub
call
clc
nop
je
int3
ss
pop
imul
mov
rorl
mov
loope
cli
movsl
mov
rclb
and
in
sub
std
dec
daa
sub
or
mov
ret
ds
stc
iret
mov
push
fstl
shlb
inc
sti
f2xm1
mov
sub
mov
out
and
jne
cltd
addr16
cmc
lock
and
mov
fwait
pop
inc
or
jmp
or
dec
xor
or
pop
xchg
shll
mov
add
adc
and
sbb
jb
xor
and
test
iret
xchg
mov
pop
cmp
sub
icebp
jp
fimull
mov
jbe
xor
push
lock
pop
mov
dec
testb
adc
adc
insb
inc
daa
jmp
cmp
sbb
pusha
pop
popf
cmp
xchg
sbb
bound
jnp
jmp
mov
jmp
mov
mov
stc
rcrb
xchg
cs
jg
in
push
mov
insb
sarb
adc
lods
je
sbb
adc
ret
push
psubusb
xor
daa
fcmovnbe
mov
or
ja
mov
out
ret
mov
enter
idivl
shlb
adc
sub
adc
pusha
sbb
mov
inc
mov
imull
push
into
loope
daa
sub
inc
or
test
xor
test
xchg
jb
jns
cwtl
daa
cmp
sbb
sbb
jbe
mov
dec
ret
mov
xchg
mov
outsl
mov
dec
sbb
jne
bound
jmp
pop
scas
adc
add
das
dec
push
and
sbb
xchg
mov
dec
and
jle
fiadds
in
jmp
addps
mov
icebp
push
nop
mov
dec
std
pop
xchg
movsl
inc
in
adc
cli
fcmovne
out
lcall
ja
fsubs
cmp
inc
xchg
pop
add
mov
mov
adc
gs
xor
pusha
xchg
mov
xor
ljmp
push
scas
mov
jecxz
push
fsubp
int3
mov
loopne
mov
pop
cwtl
xlat
and
push
cmp
leave
mov
push
pop
mov
clc
jmp
testl
mov
fimull
inc
inc
iret
jp
outsl
add
and
cmp
bound
cmp
je
cwtl
loop
sahf
add
cmp
add
xlat
jle
lea
repnz
add
dec
in
ret
pop
mov
dec
xchg
test
jne
jb
add
xchg
cmp
inc
xor
inc
mov
rolb
out
sbb
test
sbb
pop
jle
dec
pop
rclb
bound
in
das
jns
leave
lcall
mov
pushf
push
int
jnp
sarl
mov
cmp
fildll
mov
add
jnp
pusha
and
scas
addb
jne
jno
mov
insb
mov
inc
imul
sub
in
flds
xchg
test
add
call
arpl
cmp
pop
push
out
xchg
mov
insl
sbb
bnd
into
cmpl
shrb
data16
push
push
jl
clc
jmp
pop
push
incl
fnstsw
rol
xchg
scas
imul
scas
cld
test
mov
inc
ret
vaddsd
fucom
stos
pop
mov
jl
imul
xchg
fildll
mov
mov
out
adc
and
mov
stc
outsb
dec
mov
cmpsb
inc
xchg
adc
mov
fbstp
in
jb
jp
xor
test
xchg
xor
in
sbb
dec
fs
bound
dec
xor
je
lods
dec
dec
or
cli
jp
sbb
mov
pop
dec
in
jae
jnp
pop
inc
test
and
ret
mov
sub
xchg
scas
ljmp
xchg
push
les
pop
mov
iret
cmp
lret
xor
or
mov
cmpl
rcrl
sbb
aaa
sub
push
andl
and
sbb
or
add
lods
mov
cld
repnz
testl
cmp
fldt
lsl
dec
or
aad
adc
and
loopne
push
je
cmpsb
lcall
sbb
cmp
push
and
icebp
in
xchg
sbb
mov
jg
cltd
sub
xor
sbb
orl
popa
call
pop
add
add
lea
sbb
sub
fdivrs
pop
sbb
pop
popa
jo
push
and
pop
fsubr
inc
mov
insl
xor
fcmovbe
enter
repnz
ljmp
inc
sbb
push
cs
lock
fildll
negb
pushf
pop
fadds
in
ficomps
sbb
cmp
lock
and
int
jmp
xchg
je
mov
xor
mov
idivl
fnstcw
sub
push
dec
std
lock
loope
sar
add
data16
pop
dec
sub
dec
outsl
mov
push
ficoml
push
push
sub
cmp
cmpsb
hlt
aam
mov
je
ret
and
enter
repnz
cmp
int3
sub
out
decl
dec
inc
stos
cmpsb
mov
iret
loop
add
pop
xor
sbb
stc
pop
jbe,pt
scas
stos
push
ljmp
fxtract
xchg
out
add
lret
mov
jo
dec
mov
sbb
popa
fbld
cmp
add
jne
xor
pop
add
add
in
movsb
mov
aam
push
repnz
xlat
insb
insb
push
cmp
arpl
scas
mov
add
daa
dec
repz
xchg
nop
cwtl
xor
mov
add
lock
rcl
fdivrl
arpl
or
cmp
clc
pop
loopne
adc
mov
addr16
ljmp
push
push
pop
jne
cmp
xchg
enter
push
pusha
subb
jmp
andl
jae
orb
add
mov
push
movsl
pop
pop
lahf
inc
xor
ret
add
int3
fldcw
rorl
xchg
dec
in
pushf
dec
icebp
test
jbe
push
arpl
add
ljmp
xlat
mov
and
test
fs
loop
push
call
mov
out
add
ljmp
xor
jbe
test
and
sti
jmp
xor
dec
push
jo
or
out
inc
mov
out
push
mov
int3
mov
cmpsl
inc
enter
lods
cmp
shlb
xchg
lret
mov
push
pop
bound
inc
movsl
cmp
xor
sbb
mov
and
cmp
mov
xor
mov
xor
mov
mov
addb
test
cmpsl
faddp
das
xchg
xor
xlat
cld
or
adc
popl
dec
mov
cltd
sti
ds
push
lock
fbstp
lds
int3
and
stc
mov
ret
nop
sub
mov
or
xchg
outsl
dec
int
xor
mov
cmp
lea
mov
jbe
nop
xorb
add
ljmp
fwait
fwait
lods
add
pop
dec
and
adc
push
sbb
inc
adc
fmull
ljmp
in
mov
ret
dec
icebp
dec
lret
sbb
lea
sub
sbb
pusha
mov
loope
inc
bound
jbe
ss
iret
xorl
xchg
mov
xor
jl
pop
inc
xor
cmp
sbb
adc
xor
pop
mov
int3
sub
or
lret
pusha
loope
addr16
call
mov
cwtl
repz
repnz
xor
cmpsb
sahf
fxtract
inc
xchg
push
cmp
sbb
pop
xchg
pop
int
fsubrs
add
pop
mov
pop
notb
push
push
or
test
add
sbb
xor
xchg
xchg
ljmp
sub
add
xor
sub
xor
xchg
outsl
je
xchg
addb
test
pop
add
cs
fimull
loopne
xor
mov
out
jb
dec
xchg
mov
fisubl
inc
or
repnz
sub
jecxz
push
popf
pop
pop
add
negb
pop
jle,pt
and
ds
aaa
fstps
adc
sub
xchg
imul
stos
add
hlt
ss
push
push
mov
mov
cmp
fs
insl
mov
inc
es
add
cmc
fwait
rcl
lcall
call
roll
sub
add
mov
xchg
sarb
mov
inc
pop
jp
out
call
ljmp
dec
stc
imul
call
mov
idivb
repz
mov
out
imul
lahf
inc
ss
adc
mov
mov
sub
dec
adc
pop
jp
shll
inc
int3
fldt
icebp
out
mov
repz
and
aas
jae
leave
pop
cld
int
pop
outsb
mov
xchg
sbb
inc
xchg
jnp
pushf
mov
test
inc
mov
out
adc
adc
adc
je
mov
jge
hlt
pop
pop
jns
sbb
enter
pop
adcb
push
insb
sub
arpl
pusha
and
sub
push
inc
pop
mov
dec
loope
out
or
and
add
jmp
xor
je
sbb
push
fisubrs
xorl
add
rorb
xor
mov
js
sbb
dec
inc
fs
pop
jbe
gs
mov
mov
inc
xchg
pop
lds
addr16
in
jnp
loopne
mov
adc
sti
jb
cmp
sub
xor
aas
or
imul
fidivrl
push
shlb
mov
xchg
stc
jl
add
scas
leave
cmp
sub
test
or
loop
add
lds
stos
pop
dec
das
sub
cmp
loope
rorl
push
into
jmp
sbb
dec
std
iret
dec
in
xchg
pop
rcrb
stos
ja
out
lret
jg
xor
lret
ljmp
and
mov
bound
into
jg
sbb
add
cmpsb
mulb
das
inc
sahf
inc
lcall
or
rol
arpl
stc
sbb
loop
pop
push
push
test
adc
dec
adc
xor
dec
jns
xor
push
and
push
inc
mov
mov
and
xchg
shrl
mov
fldcw
sub
jo
adc
dec
xchg
test
push
arpl
push
pop
pmullw
fcmovbe
dec
xlat
jp
pop
sbb
xor
sub
pop
sub
sbb
pop
dec
add
scas
in
repnz
fucomp
lods
fcoml
xchg
sub
adc
enter
test
xlat
push
xchg
enter
shlb
leave
bound
or
pop
insl
mov
icebp
dec
loopne
or
fs
sub
jecxz
push
fisubrs
std
jbe
test
idivb
outsb
repz
sub
cmp
call
je
dec
push
or
jae
stos
popf
mov
and
cmpsl
jle
stos
cmp
sub
leave
mov
testb
mov
imul
mov
add
addr16
aaa
in
loop
adcb
or
xchg
xor
rorb
rcrb
mov
jnp
sub
loopne
das
fwait
ja
mov
out
push
or
daa
xchg
les
ret
repz
dec
imul
icebp
cmp
xchg
xchg
or
lcall
adc
fistps
cs
lods
data16
fiaddl
lcall
mov
xchg
out
in
mov
and
mov
fs
in
int3
push
push
addb
xor
xchg
inc
ja
cmp
push
mov
mov
enter
mov
sub
add
add
into
cmp
jo
xchg
and
cmp
jbe
xchg
mov
sub
mov
loopne
and
dec
pusha
mov
imul
pop
mov
jl
and
fdivrs
xchg
xchg
lock
pop
cmc
mov
sub
repnz
gs
das
push
je
sub
into
mov
outsl
sarb
movsb
cmp
jmp
cmp
call
jno
shr
pop
repz
in
loope
xor
and
jp
out
or
push
shll
ljmp
mov
pop
std
or
je
shl
cld
adc
or
in
cmp
mov
lods
mov
loopne
xchg
arpl
pop
pop
in
dec
xchg
nop
jle
mov
sub
call
cmovns
ror
lods
fsubs
and
push
and
dec
lcall
ss
out
and
arpl
lret
imul
xchg
xchg
cs
mov
inc
bound
cltd
test
inc
sub
stos
and
popf
xchg
shr
rorb
adc
adc
loopne
mov
lods
dec
inc
sbb
jae
jbe
test
fdivl
aas
loopne
fnstcw
add
push
int
sbb
xchg
dec
push
dec
imul
or
lret
xor
mov
or
xchg
adc
jb
mov
stos
xchg
jnp
mov
out
ja
sti
loope
test
adc
adc
mov
enter
sbb
dec
out
xor
xor
icebp
js
clc
sbb
inc
push
out
mov
mov
sarb
in
mov
and
rcll
jne
stos
inc
mov
push
xchg
stos
fsts
aas
ret
cld
cmp
jmp
lcall
sbb
sbb
mov
and
les
loop
ret
jl
cmp
mov
add
jg
andb
dec
outsl
or
repnz
xor
fwait
mov
nop
mov
les
outsl
cwtl
pop
lods
pusha
xchg
test
sub
and
nop
adc
daa
sub
dec
rorb
cwtl
inc
arpl
test
in
mov
fs
push
iret
je
cmp
mov
movsl
rcrb
imul
ja
xor
sub
pop
pop
cmc
sbb
xchg
mov
push
dec
push
pusha
pop
test
ss
mov
xchg
arpl
and
cmp
add
add
cwtl
jnp
std
out
insl
adc
add
mov
testb
pop
pop
repz
pusha
jo
dec
neg
mov
pusha
sub
jnp
mov
add
xchg
add
xchg
mov
aam
stos
orl
rcr
or
ja
sahf
pop
mov
mov
je
mov
mov
bound
push
jns
outsb
addr16
inc
add
jl
mov
add
out
test
gs
stc
sbbb
fstps
xor
hlt
pop
and
out
push
adc
icebp
fdivrl
cwtl
adc
loope
scas
xor
mov
sub
xchg
push
dec
fildl
aaa
sbb
mov
inc
or
mov
divb
pop
xchg
lret
sbb
mov
mov
es
hlt
and
ljmp
mov
xchg
cli
fldt
add
mov
call
call
xor
cmc
enter
cltd
cmpb
push
bound
gs
fs
out
mov
cmp
hlt
xchg
jmp
adc
xor
outsl
test
lods
subb
sub
pushl
jbe
or
out
mov
lock
out
pop
pop
sahf
sub
leave
pop
mov
xchg
adc
xor
cmpsb
in
push
sbb
push
fldt
out
nop
fiaddl
dec
mov
int3
lds
in
ret
xchg
adc
lea
and
push
or
cmp
xor
dec
shll
inc
cltd
dec
repnz
ficoml
xor
add
fwait
adc
in
movsl
or
outsb
push
cmp
repz
mov
into
ficompl
inc
movl
mov
scas
cmpsl
mov
test
es
cli
push
js
sbb
inc
imul
mov
fs
push
push
and
jne
in
pusha
lea
es
mov
add
xor
out
in
pop
ds
cmp
xchg
xor
dec
xor
jb
push
push
ret
mov
mov
inc
test
mov
add
sahf
insb
addr16
shrb
jle
cmp
jae
mov
lahf
push
cmp
insb
jne
insb
nop
xchg
add
cs
dec
ret
les
xor
movsb
mov
int3
mov
mov
stos
inc
sti
movsl
mov
ss
push
lcall
mov
int
jecxz
cmpsl
adc
and
inc
xor
rol
push
push
aam
pop
das
inc
out
cmp
jl
sub
in
mov
lods
sbb
out
mov
mov
fcmovbe
fcmovu
add
adc
sub
or
jge
dec
jle
popa
cmc
mov
shlb
repz
pop
mov
fucomi
rolb
iret
xchg
dec
movsl
loop
and
cs
std
xchg
aaa
push
sar
outsl
aad
fildll
lcall
in
jne
ret
jnp
sti
sbb
fildl
adc
jnp
pusha
addl
rclb
ds
jbe
mov
mov
fcmovne
adc
insl
stc
sub
sbb
cmpsl
jle
pop
ret
cmpsb
mov
mov
test
add
mov
jbe
pop
mov
mov
mov
out
push
test
aad
and
repnz
add
pop
fxch
int3
das
and
and
xchg
xchg
fcompp
ficoml
mov
nop
fs
in
test
in
jbe
sub
xor
cmp
movsl
adc
pop
jns
cwtl
fstps
push
inc
dec
and
enter
pop
adc
push
in
and
mov
cmpsb
push
int3
push
hlt
mov
xorb
ljmp
clc
push
ret
scas
push
xchg
or
clc
repz
sub
icebp
mov
push
bound
test
jnp
and
inc
lret
fs
pop
mov
xor
xchg
sbb
push
add
test
fisubrs
lea
pop
and
pop
fcomps
dec
adc
cltd
mov
andl
outsl
repnz
stos
push
xor
jns
outsl
jno
loopne
in
movl
pop
push
cmc
arpl
sub
cld
in
sahf
in
into
popf
cmp
push
into
and
mov
jo
fmull
pop
js
sbb
out
lret
inc
ds
inc
jns
imul
insb
mov
cmp
shl
sbb
xor
jl
call
sbb
jno
into
pop
mov
aad
cmp
ss
call
push
ja
fdivrl
ds
loop
mov
out
les
fstpt
adc
inc
adc
jmp
ss
dec
cmp
xlat
sub
or
or
jle
lret
dec
mov
fdivrl
push
pop
idivb
test
mov
xchg
sub
pushf
loopne
pop
addr16
xchg
outsb
negb
rcl
jecxz
and
dec
fs
pusha
dec
sbb
insl
test
loopne
mov
les
fwait
mov
shrb
pop
lods
xchg
add
push
movsb
xchg
jne
movsl
lcall
and
and
adc
jne
ja
mov
and
gs
mov
loopne
inc
in
insb
inc
mov
gs
rol
and
jle
and
jmp
cmp
lcall
push
fmulp
xor
xor
fstpt
mov
enter
and
stc
call
sbbb
push
arpl
push
out
test
inc
or
cld
jle
jae
mov
addr16
lods
bound
adc
mov
jmp
mov
std
cmpsb
es
sbb
shrd
inc
imul
add
scas
in
mov
cmp
jge
jg
cld
idivb
mov
imul
jecxz
adc
jno
mov
push
cltd
addr16
shl
fimuls
jae
les
mov
test
out
xchg
enter
fwait
sbb
out
or
adc
in
or
aaa
das
jae
jo
jmp
push
les
aam
inc
das
sub
ja
mov
xchg
jns
fisttps
mov
sub
rcll
sub
or
pop
jmp
out
xlat
add
sub
cmp
push
pop
mov
in
push
cltd
sub
addr16
imul
call
jae
cs
sub
push
jg
cmp
int3
sbb
cmpl
fs
in
jo
xchg
cltd
mov
ds
call
in
loope
out
decb
push
xchg
ss
jae
xor
ret
pop
popf
leave
aaa
out
dec
jns
mov
jno
xchg
and
add
imul
xchg
lret
lods
and
xchg
jge
pusha
test
push
mov
dec
ja
push
int3
cmc
dec
jns
mov
cmp
test
adc
pop
mov
xor
and
lods
ret
mov
mov
push
mov
and
punpcklbw
aam
sarl
cmp
sub
icebp
jnp
jno
aaa
dec
stos
pop
cmp
adc
and
aam
cmp
loopne
aam
mov
shll
clc
cmp
shll
stos
outsb
mov
and
xor
mov
cli
enter
xchg
push
mov
iret
movsb
cwtl
dec
dec
iret
stc
jmp
outsb
push
cmp
xor
pop
push
or
je
or
aas
pop
out
adc
push
je
enter
pop
cmp
jae
inc
lods
aaa
inc
jmp
mov
pop
and
in
mov
cmc
ljmp
das
mov
lea
mov
dec
sbb
roll
add
mov
insl
mov
outsb
xor
xchg
jae
mov
lods
cmp
and
xor
in
xor
xchg
in
pop
repz
push
in
call
or
test
cmp
pop
loope
repz
sbb
pop
jg
jo
inc
jae
mov
cmp
push
push
mov
mov
jg
lret
inc
and
fisubs
stos
pop
jo
cmp
stc
jns
cmp
push
std
pop
adc
cmpl
xlat
pop
in
clc
lahf
add
and
xchg
test
mov
test
sbb
imul
jae
cld
stc
shlw
mov
fwait
icebp
inc
insl
or
cmp
mov
fwait
push
xchg
mov
icebp
xchg
xlat
popa
push
cs
cmpsl
jg
push
mov
or
jl
push
xchg
ss
or
lods
push
add
sub
sub
in
cmp
pop
mov
cmp
and
loope
dec
pop
or
and
sbb
push
pop
mov
out
popf
and
mov
popa
jecxz
das
mov
into
sbb
cmpsb
outsl
push
sub
mov
xchg
mov
outsb
add
aaa
out
or
dec
inc
les
lret
imul
mov
and
pop
ret
ds
xchg
arpl
outsl
xchg
ja
inc
mov
mov
pop
dec
aas
push
scas
test
push
fdivrl
std
add
mov
rolb
jg
js
aam
mov
jns
add
pop
mov
pop
mov
cmp
sbb
test
mov
and
int
jge
loopne
pop
and
out
loope
out
out
inc
jl
jo
fmull
cs
outsb
shr
mov
leave
push
popa
mov
data16
out
add
jns
inc
push
or
mov
adc
and
push
sub
stc
cmp
and
jnp
nop
push
or
outsb
loopne
mov
pop
out
int3
push
add
mov
movsl
pop
sbb
lods
add
cmp
lea
and
mov
scas
repz
pop
into
inc
or
mov
jmp
inc
stos
stos
jo
dec
xor
push
bound
out
xchg
jl
and
mov
mov
in
cmp
pop
pushf
cmc
jb
jmp
arpl
clc
mov
repnz
idivb
dec
xchg
das
das
inc
out
push
fildl
push
repnz
lods
pop
imul
loope
and
cli
fisubl
xchg
movsl
mov
enter
push
xchg
ret
and
loope
sub
or
cmp
out
fildl
mov
mov
mov
and
or
jae
fdiv
cli
cmpsl
std
dec
adc
rcll
aad
add
insl
dec
insl
mov
repnz
xchg
jge
jge
pop
xor
pop
cmp
push
icebp
js
mov
in
lret
fwait
out
cmpsb
push
outsb
mov
xchg
cwtl
jp
cmpsb
divl
mov
mov
addr16
lods
mov
xor
and
jge
ret
nop
pop
in
outsl
add
iret
mov
cmp
cmp
mov
sbb
lahf
and
rorb
or
or
je
notl
pushf
inc
and
cmp
inc
loop
int
xchg
add
pop
pushf
loop
push
daa
xchg
in
cmp
mov
jmp
aaa
xchg
jecxz
je
shlb
adc
xor
xor
jp
pop
xchg
movl
lcall
inc
iret
push
or
imul
sbb
insl
mov
aas
mov
adc
pop
and
pop
xor
cmp
daa
cmp
in
sbb
dec
out
in
movb
call
adc
sbb
add
jns
or
sub
sub
rcrl
dec
scas
test
push
enter
sub
pushf
jno
xlat
pusha
sub
mov
and
imul
call
punpckhdq
and
xchg
sbb
and
daa
ja
mov
rcrb
ds
push
nop
cmpsb
in
ss
and
dec
mov
roll
jb
shll
popl
push
sbb
jg
adc
cmpsb
pop
jae
popf
jmp
and
dec
pop
je
in
jne
add
loope
cld
imul
or
jns
mov
stc
jle
cmp
ret
addr16
loop
xlat
mov
add
add
outsb
sub
xor
popf
mov
pop
loopne
and
xchg
xchg
mov
and
ja
out
loopne
xchg
xchg
cld
daa
inc
adc
in
shlb
or
pusha
fcompl
dec
ss
push
jg
arpl
inc
or
adc
jle
ret
icebp
push
loopne
adc
stos
stos
icebp
pop
sti
mov
mov
fdivrp
jle
lods
push
mov
xlat
dec
or
fbld
and
out
mov
jl
jae
fisubs
xor
outsb
sbb
movsl
sbb
mov
xchg
aaa
sbb
mov
xor
and
rcr
jg
leave
leave
sub
movsb
loopne
fwait
pop
dec
aad
dec
lahf
mov
imul
xchg
loopne
cmp
mov
xlat
jnp
pop
jae
sub
add
xchg
push
add
mov
mov
cmp
and
add
or
xchg
xor
mov
jo
fwait
or
sub
fistpll
mov
jbe
pop
push
xchg
or
nop
or
push
lahf
or
jmp
inc
mov
xchg
mov
sub
shrb
stc
mov
fstpl
push
aas
push
xor
mov
lea
into
out
ds
dec
call
bound
ret
lock
mov
sbb
lahf
inc
mov
and
add
test
je
and
pushf
mov
mov
fidivrs
xchg
loope
rclb
loop
xchg
mov
and
cld
dec
mov
in
cmpsb
inc
dec
ds
jmp
xchg
mov
dec
in
cwtl
push
bound
jecxz
cmp
aas
in
rcll
popa
sbb
jl
andb
inc
fwait
addr16
pop
lea
mov
sbbl
or
in
add
adc
jnp
rorl
movsl
jecxz
pop
jne
hlt
push
push
loop
mov
leave
push
out
dec
cvtdq2ps
xchg
jmp
cmp
bound
sbb
pop
mov
mov
in
xlat
cmp
mov
je
cld
inc
std
and
call
cmp
mov
xor
jmp
in
dec
jge
dec
aad
out
lcall
repnz
daa
xchg
stc
flds
je
mov
mov
pop
dec
xor
in
jb
cltd
stos
iret
xor
xrelease
jb
mov
lods
adc
pop
cli
pop
popf
test
dec
repz
mov
ljmp
xor
pushl
rcl
jns
push
fdivrp
fisttps
pop
dec
adc
xor
xchg
mov
mov
inc
shrb
sub
jo
fwait
or
jl
ss
or
mov
lds
lods
push
aas
insb
sub
push
sub
jp
aaa
mov
stc
xor
aam
inc
dec
movsb
icebp
xor
mov
loopne
add
cmovp
cmp
mov
jns
and
xor
sub
cmc
fisubrl
idivl
cmp
dec
push
loopne
test
mov
insb
inc
or
scas
in
xor
outsb
dec
xchg
ja
inc
xchg
or
inc
mov
pop
adc
inc
imul
decl
into
jmp
pop
or
push
in
lcall
paddusb
adc
jbe
cmp
push
dec
jne
or
nop
xor
or
mov
xchg
xor
inc
and
lods
inc
cld
dec
sbb
cmpl
lret
mov
mov
notb
or
mov
test
xlat
push
mov
mov
ljmp
repnz
mov
fnstenv
bound
int3
mov
xchg
ljmp
adc
daa
mov
out
pusha
sahf
and
cs
push
xor
jge
cld
mov
imul
or
cmp
icebp
and
mull
repz
pop
aad
pop
mov
fucomi
addr16
pop
xchg
mov
xchg
ficoml
cmpsl
mov
inc
fucomp
cli
scas
or
jns
push
mov
jg
and
ret
stos
jo
enter
push
push
jo
push
inc
sub
je
lret
fimuls
push
loopne
mov
adc
sub
fbstp
lods
lahf
mov
mov
pop
push
xor
xchg
dec
fldcw
xlat
push
cwtl
bound
jns
popf
iret
ss
subw
dec
ret
inc
aad
pop
cmp
cmc
push
xchg
scas
push
push
jg
je
out
js
push
stos
push
sub
call
stos
popf
cmpsb
out
test
sub
push
or
and
out
push
jns
xor
jbe
arpl
mov
and
push
sub
mov
leave
or
flds
loopne
mov
mov
pop
add
test
sub
add
jns
or
int
inc
sub
and
iret
xchg
sahf
push
mov
les
int
or
or
aad
test
sub
mov
fisubs
jne
pushf
repz
dec
mov
fs
cwtl
lock
xchg
dec
test
stos
and
push
in
mov
adc
mov
out
pop
enter
push
in
adc
cmpsl
sbb
dec
mov
adc
pop
loop
out
mov
add
or
cltd
adc
add
lds
incb
stos
gs
dec
push
in
in
testb
cwtl
cmpsb
dec
frstor
sti
notl
mov
in
aad
out
mov
xor
icebp
roll
jns
notb
mov
imul
andl
or
xor
and
mov
cltd
add
mov
enter
mov
popa
sbb
cs
mov
cmp
xor
jnp
push
pop
sbb
push
xchg
jge
push
je
mov
icebp
xchg
aaa
dec
ffreep
xchg
xor
cli
rol
aad
or
cld
in
mov
jmp
jns
and
adc
adc
adc
imul
cli
jecxz
mov
sbb
and
lcall
pusha
orb
pop
sbb
pop
int3
rcl
xor
mov
sbb
add
inc
ds
cmp
add
pop
sbb
lcall
mov
cld
jns
mov
mov
mov
cli
cltd
rcrb
pushf
mov
pop
jl
ljmp
je
mov
cmpl
mov
mov
add
fmull
push
movsb
xchg
or
sahf
ret
aad
or
mov
and
adc
mov
lahf
jge
xor
ljmp
xorl
rorl
bound
ret
insl
mov
rcrb
cs
insb
inc
sbb
sub
orb
sub
xorl
jmp
push
negb
and
fs
push
inc
add
pop
neg
lret
lret
push
and
fnstsw
cmp
dec
fisubs
fwait
dec
sbb
lcall
add
aad
in
rcrb
mov
add
ljmp
test
out
movb
aaa
and
pushf
dec
jp
lods
insb
mov
ss
hlt
mov
test
xchg
lahf
mov
pop
xchg
mov
pop
mov
and
xchg
sub
xchg
sahf
and
imul
dec
jle
in
cmpsb
lods
scas
adc
sbb
xchg
in
frstor
sbb
sub
jbe
pop
imul
aam
pop
test
loope
and
lcall
push
cmp
or
cmp
push
data16
lahf
movsb
xor
mov
fidivrs
int
shr
add
sub
push
push
imul
xchg
daa
aaa
in
dec
lds
lods
mov
cld
cmp
imul
cmc
dec
popf
cmp
cwtl
pop
in
or
data16
cmp
bound
xchg
mov
jl
xchg
jmp
sub
and
nop
push
add
and
xchg
and
pop
mov
adc
scas
nop
adc
test
test
mov
or
data16
or
mov
mov
idiv
repnz
pop
sub
lods
xlat
cmp
aad
test
imul
pusha
pop
sub
es
lock
push
cmp
rorb
in
mov
cmp
mov
xchg
inc
fsubrl
cwtl
push
out
icebp
lret
mov
and
sbb
mov
or
mov
repnz
lds
or
pushf
pop
out
mov
sbb
inc
subb
inc
inc
jge
rolb
push
cltd
mov
push
and
clc
adc
lods
pop
inc
lea
mov
push
iret
sub
xor
stos
addl
lret
lret
and
mov
cli
mov
lock
divl
pop
rdtsc
int3
mov
xchg
into
je
jmp
or
jmp
sub
dec
pushl
inc
add
inc
add
push
xchg
cmp
sbb
mov
or
pop
adc
mov
cli
iret
mov
clc
xchg
imulb
shll
int
inc
fidivrl
arpl
je
lahf
xor
jnp
mov
mov
cmpl
int3
push
testb
call
mov
fdivrs
mov
lods
repz
dec
jg
mov
adc
ret
btr
mov
sarb
aas
js
in
popa
jmp
inc
fsubrs
add
daa
push
sbb
cmp
ds
mov
pop
jne,pn
repnz
sbb
sbb
repz
sbb
cli
insl
ljmp
lock
jge
gs
mov
pop
ljmp
lret
pop
adc
mov
xchg
shll
dec
arpl
dec
popf
mov
aad
mov
shll
ret
sbb
mov
shlb
popa
xchg
jge
js
lods
sbb
push
faddl
xchg
fwait
xchg
ret
push
adc
inc
cmc
pop
cmp
adc
lods
mov
inc
sub
mov
in
mov
xchg
mov
or
sub
mov
imul
leave
mov
adc
mov
ror
mov
jb
sarb
mov
jecxz
fists
clc
jge
sub
out
add
imul
cmp
pop
adc
addr16
out
add
stc
lods
daa
or
test
push
jg
push
and
ror
adc
movsl
popa
jne
and
push
mov
cli
mov
adc
xlat
or
jno
stc
clc
add
mov
out
lret
icebp
or
outsb
out
xchg
inc
lods
pop
sub
inc
popf
lret
mov
lea
or
inc
mov
fstpl
jne
adc
cld
xchg
xchg
add
pop
push
enter
mov
in
adc
insl
data16
fcomip
or
push
xchg
xor
popa
mov
push
add
sarb
push
adc
loop
mov
jo
push
push
pop
in
dec
mov
xchg
mov
outsl
mov
and
leave
xchg
dec
filds
pop
fildll
jb,pn
sahf
cwtl
lahf
and
xchg
popf
mov
adc
sbb
out
repz
cmp
test
frstpm(287
mov
inc
xchg
int
and
negl
lahf
pushf
in
and
mov
lea
in
in
fbld
push
subb
stos
jbe
jmp
pop
cltd
out
push
mov
inc
cmc
test
push
jecxz
icebp
inc
push
add
test
jl
dec
rcr
and
push
mov
mov
in
lods
clc
add
test
add
mov
add
std
cmpsb
aad
mov
hlt
mov
in
mov
push
and
js
jbe
arpl
addb
sub
clc
cmp
lods
push
pop
sbb
sti
mov
add
mov
push
cld
aas
fnstenv
or
clc
and
mov
pop
sti
scas
fcomps
sub
xchg
cli
loop
int
inc
cmp
ret
inc
cmp
notb
push
push
jle
mov
cmp
aaa
or
lret
xor
outsb
mov
rclb
fisttpll
cmc
neg
loope
pop
ret
jge
xchg
imul
mov
into
pop
or
pop
adc
test
push
lret
rcrl
mov
arpl
inc
call
loope
jae
sub
aas
pop
out
inc
inc
in
jp
loope
pop
mov
mov
mov
mov
imull
jo
sarl
inc
cmp
xchg
gs
rolb
or
lock
insb
push
roll
jg
insb
ds
and
sbb
data16
jge
fbstp
dec
pop
data16
outsl
test
dec
adc
ss
mov
inc
add
lahf
fnsave
testl
mov
xor
push
int3
je
dec
inc
jnp
icebp
movsb
cmp
add
inc
sub
sti
inc
and
push
xchg
xchg
cmp
xor
mov
push
es
and
and
add
fistpl
call
jbe
or
sbb
dec
add
xchg
dec
xchg
cwtl
push
arpl
jmp
lds
mov
add
fmull
outsb
add
lock
sbb
jne
mov
out
pop
inc
xor
dec
jno
cmc
add
repz
mov
add
lock
or
adc
rcll
fdivr
div
call
xchg
test
mov
mov
insl
xchg
pop
icebp
jbe
inc
pop
mov
sti
out
push
fsubrl
sbb
inc
test
roll
dec
outsb
mov
clc
int3
sarl
movsl
enter
mov
test
ror
mov
pop
lods
lret
push
inc
repnz
je
jno
pop
int3
inc
dec
js
jle
cmp
mov
mov
fnstenv
aas
and
daa
and
in
and
jo
dec
push
fcom
jecxz
adc
icebp
mov
iret
out
and
pop
insl
and
test
and
dec
push
negl
and
or
push
jb
adc
fists
mov
test
and
fwait
jb
aaa
lret
test
dec
insb
ds
xchg
xchg
fcom
es
inc
sub
mov
dec
int
loop
dec
mov
mov
lcall
popa
xchg
push
cmp
pop
rcrl
jno
test
sub
mov
xchg
pop
inc
xchg
push
sub
jb
leave
sahf
test
jge
jl
scas
inc
pop
sbb
loope
fstps
cmp
loop
push
inc
mov
rol
mov
cmc
ret
and
ror
xlat
and
fwait
pop
pop
addr16
mov
jmp
and
mov
add
or
or
dec
int3
nop
add
sbb
mov
mov
test
jae
dec
push
scas
mov
outsl
sbb
or
fistpl
lret
sbb
xchg
sahf
jne
pop
cmc
outsl
inc
pop
sbb
repnz
and
orl
jp
cmp
movsb
scas
push
sbb
test
push
pop
loopne
push
fidivrs
pusha
scas
mov
and
lret
pop
lock
pop
and
mov
sahf
fs
push
pop
sub
xor
aam
cmp
and
fst
cmp
inc
add
fnstsw
inc
xor
pushf
mov
out
dec
inc
js
mov
cwtl
outsl
and
jne
out
test
push
sbb
dec
enter
inc
adcl
out
pop
ja
sbb
shlb
fmull
mov
mov
jg
cwtl
or
ss
pushf
and
stos
lods
jmp
std
gs
or
push
aas
mov
fabs
cmp
ljmp
ja
shll
jb
sbb
jae
out
xchg
sarl
xchg
jnp
hlt
xchg
call
fs
mov
pop
and
bound
jmp
sbb
fldenv
dec
mov
push
and
push
lock
push
mov
aas
push
mov
or
mov
fstl
test
add
xchg
mov
mov
jmp
or
push
shlb
and
sar
push
sub
sub
cmp
jmp
fmul
sbb
in
lods
cltd
cmp
inc
mov
into
mov
popf
pop
adcl
mov
sub
adcb
xor
cmpsl
hlt
popa
cmpsl
adc
and
movsb
sar
loope
add
mov
and
fdivrp
cmpsb
jno
sub
cmp
incb
movsl
lret
mov
push
xor
mov
cmpl
pop
test
sub
pusha
ffree
adc
cmp
push
and
pop
mov
sbb
clc
xor
mov
mov
repz
mov
int3
cmp
and
cmp
add
xchg
xor
sbb
testl
scas
push
es
inc
dec
push
and
aam
sbb
inc
push
out
inc
add
or
mov
jns
inc
out
test
adc
aaa
aaa
adc
xchg
in
popa
push
cmp
xor
xchg
test
inc
xchg
jp
hlt
mov
pushf
mov
fwait
es
push
dec
scas
mov
push
adc
inc
sbbb
int
sahf
fildll
out
xchg
dec
jbe
test
add
inc
repz
rorl
cs
pusha
dec
pop
adc
cmp
fmul
rclb
sbb
fwait
mov
mov
or
std
push
jne
fcomps
scas
stos
movsl
sbb
pop
ja
clc
jmp
popa
mov
pop
sti
aaa
mov
ja
mov
push
sub
push
jmp
mov
mov
sarl
movsl
cmp
in
aaa
in
shl
push
sti
repz
inc
push
pushf
inc
pusha
in
push
jl
cmp
outsl
clc
cmp
daa
mov
adc
push
stos
pop
push
cmpsb
call
in
je
insl
push
sbb
cmovl
repnz
xchg
ds
inc
cmpsl
pop
rcll
ljmp
test
stc
lods
movsb
das
cli
xor
int3
sbb
mov
sbb
movsl
sbb
mov
sub
inc
test
xchg
sub
cmpsb
or
lret
data16
xchg
imul
lahf
les
or
sub
fwait
pop
enter
add
std
imul
cmp
jmp
xchg
push
push
dec
aad
jns
pop
cmp
les
jbe
sub
cwtl
ja
popl
inc
mov
mov
fnstcw
inc
outsl
fdivr
adc
arpl
ret
push
fisttpl
cmp
divb
xlat
and
fildl
xlat
xor
jl
jge
dec
cmpl
subl
sbb
push
jp
mov
adc
jae
jns
cmp
stos
xchg
fdivs
mov
movsb
mov
cmpl
imul
out
fcomip
movsl
add
add
mov
dec
clc
adc
dec
test
xchg
fs
ja
negb
adc
int3
xchg
or
xor
testb
push
sbb
sub
dec
sub
or
pop
scas
jp
sbb
xlat
xor
shll
cwtl
mov
mov
mov
shl
pop
xchg
jmp
loopne
stos
mov
pop
pop
or
and
stc
in
sub
pushf
adc
jge
dec
sbb
scas
je
sbb
scas
sub
pop
push
mov
or
hlt
test
and
jae
jmp
fisubs
pop
lods
mov
jns
add
lretw
out
jmp
sahf
imul
xor
and
or
pushf
loope
mov
add
mov
inc
pushw
ret
ret
clc
xchg
pop
pusha
popa
jae
cmc
jmp
pop
mov
cmpsb
cld
repnz
xchg
sub
lret
mov
push
scas
sbb
out
sbb
or
sub
mov
mov
lock
pop
jmp
dec
sub
mov
testb
mov
out
or
gs
inc
fcompl
and
rcl
add
mov
in
clc
add
mov
mov
sub
bound
iret
pop
sbb
mov
lcall
test
xchg
and
out
arpl
jno
dec
push
lods
ja
xor
add
pop
in
rorl
bound
mov
rcr
shlb
push
cmpsb
addl
inc
sub
xlat
pop
rcr
mov
sbb
sbb
xchg
scas
xor
es
xchg
xchg
rclb
dec
fimuls
lcall
scas
insb
dec
jecxz
mov
sub
dec
pop
push
cli
cmpsl
and
xor
cmpsb
lcall
cld
mov
mov
cmpsb
sub
sbb
addl
dec
fcmovu
mov
push
sub
pop
cmp
ret
cmpsb
pop
stc
in
xchg
mov
cmp
dec
xor
dec
pop
or
outsb
imul
xor
sub
push
adcl
xchg
lret
jg
in
mov
pop
push
fwait
sbb
ljmp
or
or
scas
dec
mov
test
ret
mov
je
inc
test
nop
mov
adc
imul
roll
mov
ss
add
stc
fstpt
imul
jb
or
nop
dec
xor
or
cld
ds
adc
rcll
lret
xchg
pop
out
das
xor
add
jb
fildll
test
xchg
pop
stos
bound
test
cmp
xor
ds
enter
and
xchg
aaa
xchg
lahf
inc
leave
or
push
sbb
cmc
aaa
adc
cmp
shl
adc
xor
pslld
sub
mov
jge
cmp
addl
mov
icebp
sahf
insl
dec
jge
cmp
inc
xchg
mov
shll
mov
dec
xchg
push
dec
test
popa
jmp
jo
iret
add
pushf
mov
loopne
out
xchg
pop
inc
pop
arpl
push
js
cmp
stos
outsb
pop
lcall
repz
and
sbb
cmp
push
loopne
xorb
xchg
mov
mov
sub
adc
mov
out
out
sub
xor
movsl
xchg
popa
sbb
sbb
push
sbb
add
mov
dec
das
inc
stos
inc
aas
mov
outsb
add
js
or
sti
or
sbb
sub
xor
out
sub
pop
loope
cmp
bound
cmp
cltd
out
in
aaa
jbe
cs
xchg
xor
pushf
sbb
scas
pushf
mov
enter
push
xchg
gs
xchg
mov
dec
fadds
icebp
xor
and
out
inc
push
mov
xchg
dec
mov
xchg
js
ret
cwtl
sbbl
lcall
fld
imul
push
mov
jmp
adc
in
fdivs
cmp
push
mov
mov
mov
pusha
cmpsb
pop
loop
fwait
mov
mov
loop
sbb
ljmp
xchg
fadds
mov
stos
adc
lret
leave
lock
jne
aam
push
test
fsubs
mov
cwtl
lcall
jle
jp
dec
and
mov
jl
adc
cmp
mov
cmpsl
mov
push
adc
rcl
cmp
mov
aas
add
cmpsl
pop
adc
scas
inc
cmp
pushf
popl
int3
adc
fdiv
mov
int3
jno
sbb
movsl
sbb
out
jnp
adc
addb
sbb
fisubl
ljmp
aaa
inc
mov
inc
mov
pop
add
mov
jl
out
mov
add
inc
mov
bound
ret
das
mov
sbb
and
daa
mov
data16
lods
ret
shrb
adc
cli
lods
outsb
cmp
out
fisttps
push
cmp
mov
add
out
or
mov
xor
and
out
push
jmp
add
cli
jle
xlat
inc
jo
mov
cmp
test
fs
lahf
push
pop
inc
call
repz
std
pop
addr16
stos
test
sahf
insb
fxch
mov
xchg
daa
cld
std
jne
fs
and
jnp
ss
and
aas
es
adc
les
and
enter
out
in
in
xchg
fs
fs
push
popf
push
leave
cld
and
repz
adc
pop
je
jno
sbb
mov
pop
aad
fdivrl
lahf
test
sub
nop
inc
mov
rcrl
mov
mov
adc
in
or
push
or
mov
dec
es
in
push
aaa
loop
sbb
nop
xor
cltd
cmc
pop
pop
rol
mov
cmp
jmp
xchg
sbb
arpl
sub
and
dec
jne
dec
out
sbb
call
std
out
xchg
jl
pop
jo
hlt
sbb
mov
shlb
or
es
aam
cli
xor
lret
xchg
or
lret
test
jmp
adc
add
arpl
cld
orb
out
mov
xor
enter
jge
cmp
in
jle
add
jl
pop
xor
pop
popf
add
pop
xor
shlb
fidivrl
jae
mov
adc
mov
inc
adc
ret
inc
repz
cld
sub
hlt
js
ficompl
add
jmp
add
adc
and
mov
idivl
sarb
mov
pop
lcall
fcmovu
enter
mov
mov
lcall
inc
fimuls
lret
and
loopne
or
out
xchg
fs
popa
shlb
push
mov
mov
adc
sub
sbb
inc
and
cmp
inc
sbb
push
and
cmc
cld
dec
cmc
cmpsl
out
xorl
lock
mov
jmp
cld
sub
cmp
sub
inc
rorb
or
cld
inc
xor
inc
pop
stos
bnd
adc
stc
sbb
les
scas
pop
pop
mov
fldt
popa
inc
or
mov
adc
repnz
mov
cmp
sbb
addr16
add
lret
arpl
xchg
xor
bound
pop
mov
push
aas
dec
jmp
subl
enter
dec
repz
cmc
cmp
popa
insb
nop
mov
cmc
push
scas
or
mov
or
sub
data16
adc
popf
dec
cmp
jo
iret
leave
xchg
mov
fdivrs
cltd
inc
mov
mov
enter
dec
subb
pop
int
ficompl
mov
or
cltd
mov
push
ret
add
xchg
scas
repnz
test
data16
shrl
cmp
mov
dec
push
aad
inc
int3
lea
pop
sub
adc
out
xor
add
lret
iret
mov
out
pop
shrl
mov
mov
xchg
xchg
push
xchg
xchg
mov
rorl
test
adc
xor
inc
cmp
sti
bnd
iret
jns
dec
xor
add
push
nop
and
jl
push
sub
push
sub
aad
lahf
jecxz
clc
lcall
push
dec
pop
mov
cmpb
test
fmuls
clc
shlb
cli
in
or
jg
cld
pop
movsb
bound
jnp
push
in
mov
pop
imul
dec
pop
dec
pop
dec
or
pop
f2xm1
sub
bound
pop
cmp
sbb
cmp
pop
test
aas
test
add
nop
inc
mov
mov
add
lcall
jecxz
mul
iret
pop
inc
jnp
rcrl
xor
insb
stc
mov
lcall
and
cwtl
iret
cmc
mov
mov
repz
xor
fs
int
sbb
xor
fdiv
test
out
xchg
faddl
and
adc
rcl
cmp
mov
mov
dec
lcall
pop
cmpsb
jge
bound
das
mov
in
lret
stos
xor
or
pop
push
in
sub
ficoml
enter
adc
and
test
mov
inc
ja
aad
mov
cmp
cmp
push
cmpsb
adc
or
cmp
call
sbb
mov
pop
or
mov
and
shll
push
push
mov
in
sahf
outsl
and
mov
lods
or
pop
mov
or
es
insl
out
in
call
sbb
mov
test
push
cwtl
dec
js
stos
mov
jle
inc
push
mov
fwait
lcall
jbe
jno
lcall
cs
add
lock
clc
stos
cmp
sarl
lcall
out
call
jp
hlt
dec
sbb
cld
stos
int
xor
iret
adcb
lds
mov
mov
dec
lea
push
in
sub
lods
in
aas
sub
rcrl
mov
xor
mov
movb
cmpsl
xor
inc
sub
ret
dec
fnstsw
repnz
push
jb
push
pushf
in
add
and
and
pop
or
cmpb
dec
clc
cmpl
les
rcl
dec
mov
scas
cmp
lahf
push
push
sub
push
gs
dec
pop
xchg
test
aam
xchg
cmp
nop
mov
das
loopne
add
adc
or
in
ret
pop
mov
test
sbbl
sbb
ja
test
pop
enter
pop
jg
lods
fwait
xor
and
mov
add
in
push
cmp
ljmp
pop
std
pusha
jge
test
lcall
andb
jbe
dec
lods
push
add
adc
mov
dec
sub
loop
fmul
leave
pop
dec
insb
cmp
sbbl
or
cmp
sub
stc
xor
push
push
xor
ret
inc
out
ret
clc
neg
jle
call
lret
xor
out
push
stos
or
xor
dec
cmp
push
push
push
dec
pop
inc
mov
iret
ss
mov
pushf
and
adc
xchg
decb
push
jmp
int3
sti
inc
movsl
roll
xor
shll
adc
push
sub
test
fidivs
fstps
das
fisttps
push
push
fcomi
fadds
lock
rclb
mov
mov
scas
mov
inc
mov
add
inc
sbb
mov
es
test
dec
push
loop
xchg
lcall
adc
fstpt
add
cmp
pop
loope
into
lods
lods
mov
rcll
les
mov
fdivrl
inc
aas
movsl
mov
lds
push
pop
lea
jnp
int
movhps
push
push
lahf
inc
inc
inc
out
lret
arpl
lret
roll
dec
je
pusha
popl
je
push
jl
pop
mov
mov
mov
cmc
xchg
mov
mov
lcall
mov
mov
aad
outsb
aad
mov
mov
sti
jnp
adc
js
add
hlt
jmp
sub
mov
jmp
mov
sbb
scas
push
pop
push
pop
je
add
and
test
test
loope
es
xchg
add
xor
aas
or
push
cmp
gs
insl
jb
sub
inc
xchg
xor
jmp
aad
lret
mov
lret
loop
mov
stos
repz
sbb
fmuls
push
fisttpll
or
aas
cmp
dec
daa
mov
mov
cmp
adc
idivl
push
jmp
jne
adc
pop
xlat
fbstp
or
test
lret
jne
inc
outsl
pop
add
add
arpl
pushf
popa
xchg
hlt
xchg
into
fsubrs
bndstx
xchg
jp
pop
inc
jbe
cmp
mov
sub
add
jb
jns
jp
mov
mov
pop
adc
xor
push
adc
push
fsubp
mov
push
data16
subl
ja
aaa
out
rcl
cmpsl
lcall
repz
popa
inc
cmp
mov
mov
jns
aam
inc
xchg
mov
mov
in
sahf
pop
push
mov
push
dec
call
out
jne
insl
cmpsb
xchg
out
add
mov
mov
jae
out
sbb
cmp
sub
lods
mov
pop
lods
aas
ds
test
clc
xchg
or
xchg
jne
xchg
ficoms
lea
xor
pop
ror
push
data16
jns
adc
fidivl
std
jge
sub
push
and
fisttps
and
sarl
adc
xchg
xor
or
jecxz
outsl
add
stos
mov
stos
dec
and
aam
mov
clc
xchg
lds
dec
and
aam
repnz
test
mov
and
mov
f2xm1
inc
cmpsb
pop
stos
ret
les
inc
pop
pop
mov
fsubs
sbb
push
or
loop
inc
inc
imul
fdivrl
loop
fstpl
pop
pop
insb
mov
call
scas
imul
xor
lods
out
cltd
inc
mov
or
xchg
pop
adc
fs
pop
xchg
inc
pusha
lea
in
add
xchg
popf
jns
lods
push
dec
fcoms
inc
push
into
outsl
jbe
lock
in
inc
iret
pop
mov
stc
aas
jecxz
notb
nop
ds
mov
mov
xchg
hlt
test
push
mov
pop
in
clc
jp
addb
lcall
loop
cli
or
insb
stc
shrb
mov
add
orb
and
into
lea
fs
loop
insl
sbb
arpl
adc
add
adc
imul
orl
stc
jp
add
push
rcrl
addl
mov
inc
dec
outsb
xchg
adc
and
sbb
cmp
lock
mov
fwait
push
mov
mov
mov
repz
pop
mov
push
jp
cmp
push
or
inc
xor
dec
call
push
and
adc
sbb
xchg
xor
sub
cwtl
pop
mov
mov
fldl
sbb
rcl
dec
adc
lea
push
jno
pop
icebp
mov
pop
jb
cmp
jne
jnp
cld
xor
lea
orl
jae
adc
cld
into
xchg
test
cmpsb
into
fsubl
sub
shlb
jnp
mov
xor
arpl
xlat
mov
dec
sub
mull
ret
pop
out
push
or
andl
fwait
pop
xor
idivl
jl
fnstcw
fnstcw
xchg
adc
xchg
aas
push
and
xchg
inc
dec
cmp
xchg
push
vcmppd
sub
push
imul
out
stos
cmp
imul
lods
fildll
cmp
pcmpgtb
xor
cs
inc
push
jge
jne
or
sub
cmp
cmp
cmc
in
movups
mov
ss
xchg
mov
jns
or
cmp
in
push
dec
add
and
aaa
in
pop
xor
es
ljmp
mov
push
cmp
popf
xchg
mov
add
xchg
cmp
dec
mov
lcall
cmp
dec
xchg
mov
out
sti
dec
inc
push
mul
in
or
outsl
push
mov
es
mov
ss
mov
cld
mov
inc
arpl
jb
or
inc
mov
push
and
sub
jnp
and
push
stos
mov
test
sbb
xor
test
cmp
outsb
sub
jae
aam
insl
subb
dec
inc
xor
es
pushf
popa
aaa
les
dec
sahf
test
pushf
lods
dec
push
ds
mov
inc
rcrl
sahf
xlat
lock
mov
loopne
pop
sbb
pop
xlat
xchg
test
inc
movsb
fsubp
dec
es
add
dec
pop
cmpsb
test
pop
popa
movsl
inc
sub
add
add
fbld
sysenter
shl
data16
leave
push
dec
scas
test
xchg
inc
cmpsb
xchg
add
popf
push
pushl
push
testb
sub
addr16
lods
xor
pop
jne
rcrb
and
fimull
dec
lret
jb
cmp
mov
pop
xchg
fsub
or
insb
fldenv
add
xlat
xlat
outsb
loope
addr16
and
subl
push
in
out
enter
cli
or
adc
pop
dec
pusha
xor
sbb
aas
inc
xchg
sub
cmp
int3
push
lcall
aas
xor
xor
loopne
sbbb
xlat
mov
adc
xor
adc
sub
add
mul
sbb
lds
ret
mov
test
bound
xchg
loopne
loop
rol
lock
mov
mov
sbb
sbb
hlt
cmpsb
je
in
sti
mov
pusha
mov
sub
push
jmp
mov
and
sub
or
and
fsubrl
xor
or
and
lea
push
push
fs
mov
out
cltd
cld
or
push
aaa
xchg
cmc
xor
lods
adc
out
mov
cmp
in
lahf
add
mov
mov
out
xchg
mov
fdiv
jecxz
mov
imul
loopne
shll
test
aas
push
mov
out
imul
lea
sbb
pop
popf
lds
xor
leave
leave
icebp
nop
jne
pop
fstpt
inc
sbb
mov
stos
dec
push
in
cmpsb
iret
faddl
pop
in
mov
pop
pushf
aad
jne
stc
lods
inc
dec
push
sbb
ja
pop
pop
inc
jno
mov
pop
push
cmc
dec
cmp
dec
xchg
iret
pop
xchg
repnz
add
insb
loope
pop
test
add
enter
or
fmul
loop
je
in
xchg
jns
pop
pop
test
ja
loop
and
mov
negb
repz
leave
sbb
add
jae
push
xor
aas
sbbl
sbb
xor
inc
mov
ljmp
cwtl
imull
dec
cmp
dec
inc
sub
lock
xchg
pop
mov
push
mov
shlb
xlat
xchg
sub
jmp
cmp
movl
sbb
nop
repz
push
rorb
into
mov
enter
or
xchg
icebp
ss
data16
fmull
cli
push
xchg
push
sahf
mov
xor
int
addr16
mov
cmp
jae
cmp
lahf
test
xchg
add
clc
hlt
add
mov
test
sbb
dec
push
popf
outsb
mov
incl
into
mov
ds
push
pop
and
stos
sti
out
enter
lds
adc
mov
dec
sbb
outsb
xchg
sbb
insl
out
loop
ljmp
add
lds
dec
lods
ficomps
mov
int
leave
xchg
mov
push
scas
cmp
push
xlat
stos
enter
pop
fidivrs
pushf
iret
adc
pop
mov
adcb
jecxz
xor
lea
pop
std
jge
in
sbb
pop
or
xlat
in
loope
mov
test
sub
nop
int3
jne
mov
fldl
push
ficoms
notl
decb
dec
ljmp
jle
mov
pusha
dec
xor
insb
rorb
jne
mov
shrl
cmp
ja
or
outsl
pop
sbb
inc
pop
rdpmc
mov
add
mov
xchg
negb
lret
jecxz
cld
xchg
cmp
out
pop
jo
sub
ret
fiaddl
and
mov
jg
jbe
mov
rcrl
out
mov
jecxz
popf
std
arpl
lret
fisubrl
mov
push
cmp
mov
test
mov
test
rorl
fsubs
daa
bound
adcl
or
cmc
rorb
repz
and
mov
rcr
jno
inc
in
sbb
in
insb
xchg
push
inc
dec
add
jo
push
fldcw
pushl
test
sub
push
rcll
insl
insb
xor
cmpsb
sub
popa
aad
out
into
neg
test
lcall
int3
cmpsb
repnz
in
dec
inc
cmp
psllw
pop
xchg
pop
sbb
sub
inc
xor
pop
std
sub
pop
xor
jmp
in
push
lods
pop
mov
cld
mov
lods
mov
out
inc
in
push
mov
push
dec
xor
mov
cltd
call
popf
stos
scas
and
push
lea
cmp
jg
aam
push
je
adc
ja
add
mov
xchg
sbb
xor
dec
xor
dec
outsl
lods
jecxz
inc
push
scas
mov
int
xor
inc
mov
cli
sub
jns
rolb
sub
subl
push
xor
xchg
mov
cltd
dec
push
or
repnz
pop
arpl
repnz
jg
mov
fdivr
sbb
clc
rorl
addb
xchg
inc
in
and
lahf
cld
xor
mov
add
shr
fdivrl
mov
dec
lds
stc
adc
stc
fwait
insb
mov
or
stos
inc
scas
shll
mov
scas
pop
jnp
lret
xor
mov
test
mov
xor
mov
xor
popf
stc
nop
pop
ficompl
hlt
sbb
mov
insb
pop
mov
movsb
ss
sar
mov
insl
push
jnp
ljmp
nop
call
dec
daa
jae
mov
mov
pop
add
and
mov
ficompl
cmovns
add
mov
aad
dec
jle
push
pop
inc
iret
mov
call
xor
nop
stc
mov
pushf
or
xchg
movsl
mov
and
ret
lods
push
testl
fwait
cmpsl
sbb
imul
fwait
or
jns
inc
dec
xchg
sarb
sub
adc
je
sub
test
xor
xchg
or
fldpi
pop
jbe
fwait
icebp
mov
fsubrs
or
dec
lahf
loope
inc
mov
decl
loop
ljmp
out
jne
mov
sub
daa
push
aam
scas
stos
aam
lea
inc
xor
push
adc
andb
xchg
leave
int3
sub
jp
repz
dec
mov
inc
and
fiadds
ss
rcrl
mov
mov
or
xor
hlt
mov
cmp
cli
fwait
pop
adc
sbb
mov
mov
into
scas
nop
pop
mov
dec
adc
ja
repnz
ret
xor
jnp
int3
mov
stos
xchg
pmaxub
jns
in
popl
cmp
outsb
imul
xchg
inc
pop
lret
lods
repnz
jle
adc
xor
mov
cs
enter
xor
xchg
cmp
and
das
xchg
or
sbb
jle
xchg
fcmovbe
fisubs
xchg
mov
jge
lods
push
outsl
jecxz
or
pop
pop
sbb
sbb
and
cmc
jmp
lods
xchg
scas
dec
pop
rcll
and
cmp
and
leave
cwtl
jl
or
xchg
mov
popf
jo
ds
aas
sub
cltd
popf
dec
or
add
aaa
sbb
add
into
dec
ret
mov
lcall
push
int
outsl
or
pop
roll
add
or
ss
xchg
call
lahf
bound
xchg
les
loope
fistl
mov
adc
mov
cli
mov
xor
jne
push
sub
fdivrl
jle
shlb
dec
mov
sbb
pusha
loope
mov
jecxz
int
add
jle
and
dec
iret
mov
callw
insb
sub
in
mov
or
inc
filds
jge
sbb
cmp
shl
orb
test
jmp
sub
dec
jbe
mov
or
pop
mov
jo
jo
add
ds
jo
roll
mov
push
sbb
pop
sub
inc
lret
test
and
addl
jp
xor
fwait
in
sub
cs
mov
dec
jnp
jecxz
enter
jae
cmp
or
insb
stos
pop
inc
int3
iret
dec
pop
and
push
sbb
cwtl
repnz
int3
pop
push
icebp
std
hlt
adc
movsl
inc
adc
sub
push
test
dec
test
add
cmpsl
dec
sbb
xchg
sub
push
fsubs
testb
ds
dec
out
outsb
pop
test
mov
add
lahf
xor
aad
jl
push
ret
int3
inc
lock
mov
pop
xchg
pop
jecxz
push
orl
cmp
push
je
dec
inc
xor
arpl
imul
adc
imul
loop
lods
and
dec
push
sbb
sub
cmp
adc
adc
decl
mov
cmpsl
dec
or
push
scas
jns
cli
clc
icebp
cmp
sbb
loopne
fidivrl
sub
scas
add
fiadds
pop
scas
out
and
mov
jb
sub
mov
or
xchg
jns
nop
dec
pusha
add
nop
std
cmc
test
xchg
std
pop
std
gs
cltd
or
aam
push
sbb
outsl
lahf
xchg
loop
cli
sub
insl
into
std
cmc
push
outsl
push
jl
add
push
xor
inc
jl
push
xor
cmc
push
or
jo
push
insl
add
mov
imul
add
xchg
data16
imul
xor
aam
mov
dec
call
dec
mov
sbb
repz
add
stos
jmp
push
xor
hlt
push
lret
xchg
loop
pop
add
mov
in
out
das
mov
mov
aas
pop
push
sbb
cmpsb
dec
popa
outsl
insl
pop
push
pop
push
and
sbb
jae
aam
cld
adc
dec
nop
sbb
cmp
or
xchg
mov
rcr
jg
ret
imul
stc
out
sbb
addr16
push
mov
mov
scas
pushl
cmp
mov
loope
push
cmpsb
mov
popa
inc
andl
ss
pop
push
xor
mov
mov
mov
push
cmp
repz
aaa
fdivs
ja
in
jg
mov
or
sti
cmp
icebp
popa
jno
inc
ja
lea
add
stc
mov
repz
out
incb
outsb
sub
aas
inc
dec
jae
lods
jb
dec
daa
jne
bound
push
int
shll
iret
adc
pop
push
sbb
and
enter
enter
or
aad
jnp
aas
subl
je
push
ds
ja
sbb
imul
add
inc
out
adc
cmp
aaa
ror
out
aas
stos
ljmp
xchg
cwtl
iret
cmc
sub
pushl
scas
add
xor
pop
adc
cmp
and
xor
jp
fnstcw
lret
jg
lea
push
dec
loopne
ds
outsb
inc
sub
mov
into
add
mov
mov
idiv
or
test
lahf
arpl
mov
rorl
test
xchg
aaa
dec
pop
int
jb
shr
bound
scas
push
and
jno
mov
jbe
sbb
or
lret
movsb
push
mov
hlt
fimuls
mov
rorl
jg
cltd
jnp
imul
es
stos
dec
and
inc
jge
mov
int3
aad
push
int
lret
aad
jecxz
adc
pop
xor
mov
dec
pop
cli
xchg
adc
scas
pop
cld
dec
loope
pause
lret
jne
xor
insl
jb
pop
xchg
dec
icebp
push
mov
fcomp
sarl
pop
push
lods
lret
jbe
sbb
push
push
pop
xor
scas
out
adc
sbb
jnp
add
xchg
pop
inc
arpl
aad
mov
pop
cltd
int
inc
cs
cmp
fwait
cld
jmp
movsl
rol
shrb
scas
cmp
mov
xchg
cwtl
imul
mov
es
mov
inc
pop
dec
mov
pop
push
pop
aad
sbb
lret
iret
data16
call
push
or
out
push
lds
clc
cli
call
mov
adc
pop
subb
sbb
sbbl
ret
add
out
loop
lea
sub
mov
rol
dec
sbb
icebp
mov
jmp
loopne
xor
fldl2t
loop
insl
mov
xchg
adc
lret
mov
and
push
jmp
inc
scas
push
mov
bswap
push
mov
add
mov
mov
cmp
stos
mov
stos
push
pushf
mov
mov
xchg
movsl
xchg
out
cld
xorl
insb
or
sub
jg
ret
cmp
cwtl
call
cmpsb
popa
in
iret
popf
jnp
push
cltd
ja
mov
xchg
pusha
jno
scas
jecxz
je
div
mov
add
cs
bound
dec
fildl
daa
mov
jb
pop
lret
cmp
inc
xchg
out
push
pop
mov
int3
mov
dec
mov
jne
xchg
jno
mov
lcall
rolb
xor
insl
or
dec
sbb
sbb
jle
cmp
stos
adc
xor
and
sbb
sti
jnp
ja
and
cltd
les
js
mov
jnp
mov
pop
sbb
cmpl
and
addb
push
xor
adc
xchg
outsb
cs
orb
lret
out
jbe
sbb
shll
test
mov
push
rcll
cmc
mov
scas
adc
or
fcompl
push
cmpsb
xor
aas
or
mov
sbb
mov
rolb
jle
testb
mov
in
dec
aaa
or
lds
fwait
clc
shll
xchg
inc
lods
push
push
push
pop
jb
pop
pusha
xchg
std
mov
mull
sbb
clc
jmp
push
and
dec
nop
or
ret
adc
and
cmc
cmp
xchg
arpl
jl
dec
aam
xchg
mov
fistpll
adc
lock
pop
sub
xchg
mov
dec
mov
mov
jnp
popf
sbb
mov
xchg
or
dec
pop
mov
push
repnz
fidivs
fdiv
divl
jge
loopne
mov
dec
mov
push
out
sbb
xchg
xor
out
mov
and
call
insl
sub
lret
jmp
rcrl
xchg
dec
roll
inc
mov
lret
inc
loopne
jne
es
inc
xor
in
shrb
mov
pop
testl
es
cmpl
jle
andb
and
jb
adc
stc
rcrb
add
bound
bound
arpl
popa
scas
pop
add
mov
int3
and
and
nop
jecxz
jne
sub
rclb
fnstenv
lret
and
out
test
arpl
cmp
mov
iret
fsubr
xor
cmp
dec
mov
bound
or
cs
or
or
mov
andb
mov
popa
ss
lods
add
notb
dec
sub
mov
mov
dec
addl
xchg
mov
dec
add
ljmp
and
mov
repnz
rorl
fisubs
inc
xor
sahf
mov
fwait
test
add
jne
mov
sub
cltd
in
adc
mov
and
imul
call
mov
cld
lahf
or
std
pop
or
push
addr16
mov
or
lods
dec
stos
jecxz
mov
into
mov
xchg
insl
and
mov
mov
xor
insb
jmp
add
adc
xor
sub
jne
xor
jnp
xchg
xchg
inc
cwtl
fisttpll
inc
sbb
cli
jb
push
lods
mov
mov
outsl
push
test
or
jge
adc
adc
adc
dec
popf
pop
jmp
shll
xchg
mov
dec
push
and
adc
push
stos
aad
repz
xchg
cmp
inc
in
mov
ja
mov
scas
xchg
add
std
ret
xchg
xchg
lods
push
mov
scas
outsl
inc
xor
mov
xchg
stos
mov
loopw
xor
test
popf
mov
shlb
and
sub
movsb
sbb
call
mov
dec
add
imul
dec
frstpm(287
arpl
rolb
push
add
push
dec
xchg
ds
xacquire
inc
xchg
mov
pop
cmp
cmp
mov
test
mov
les
lods
fsubrs
daa
data16
out
repnz
mov
mov
dec
cs
mov
cmp
and
pop
cli
repz
jecxz
jbe
sti
in
fadd
and
cmp
jl
push
test
and
or
lcall
mov
mov
lcall
jecxz
ja
xchg
sub
sub
jae
jb
aaa
vmaxps
xor
pop
lds
insl
fidivs
inc
mov
movsb
xchg
fsubrl
shufps
cmp
push
pop
dec
pop
aam
xor
jmp
mov
push
mov
xor
stc
loope
pop
popf
sub
cwtl
xchg
jl
aas
cwtl
adc
test
add
pop
hlt
mov
push
mov
mov
xchg
push
lods
inc
std
inc
push
lods
cmpsb
or
mov
jbe
sbb
jae
imul
test
inc
push
xchg
lret
insb
sbb
nop
cmpsl
sbb
cmp
sub
mov
pop
fsub
fcmovne
sbb
and
repz
fiadds
mov
dec
mov
aad
xor
scas
ljmp
fstpl
or
cld
mov
pop
mov
fnstenv
clc
push
jb
dec
sbb
lock
in
jle
popf
mov
jp
or
incl
clc
je
fldcw
ret
mov
arpl
sbb
mov
outsb
sahf
addr16
cwtl
test
cs
inc
pusha
mov
les
mov
dec
aas
subl
pushfw
push
int3
cmpsb
push
ljmp
sub
sbb
int3
jl
xor
add
ja
lret
dec
test
sub
mov
mov
inc
loope
push
and
cmp
jl
cmpsb
jns
mov
out
mov
faddl
pushf
fadds
pop
adc
jmp
gs
fsubrl
loope
jne
daa
aam
sub
adc
lods
ror
shlb
aam
xor
rep
out
lret
clc
inc
les
imul
popa
mov
pop
cmpsb
xor
sbb
sti
adc
dec
popl
or
shll
fs
inc
psadbw
mov
lcall
xchg
xchg
rorl
data16
icebp
mov
pushf
mov
pop
gs
aaa
cmpb
or
cltd
or
rolb
sbbb
mov
add
shr
aad
idivb
mov
sub
jle
out
mov
sub
std
add
out
aas
push
and
stc
fucomp
es
shl
cmp
jnp
mov
xor
add
push
xchg
xor
pop
fisubs
pop
jp
testb
in
rorb
sbb
adc
ds
insl
es
mov
insb
repz
mov
aas
push
mov
mov
jmp
adc
bound
push
int
rcll
stos
mov
iret
loop
jmp
xchg
out
stos
cmp
mov
psubw
ljmp
xor
mov
call
cmp
inc
dec
sbb
ss
outsb
pop
push
imul
jmp
fidivs
pop
inc
jmp
les
jae
jbe
adc
dec
sbbl
push
les
test
pushf
nop
je
fnstcw
fstpt
leave
icebp
mov
dec
cmp
fdivs
mov
lods
push
xor
into
clc
scas
pusha
sub
nop
push
mov
data16
jno
mov
lret
cltd
xor
inc
jl
das
in
pop
in
mov
pop
add
dec
inc
scas
ficompl
pop
mov
mov
xchg
push
test
aaa
imul
or
mov
fwait
and
mov
add
inc
jmp
sbb
sub
jge
mov
scas
mov
inc
shlb
push
ds
lahf
les
inc
sub
sahf
push
add
ss
or
xchg
movsl
std
mov
pop
test
push
ss
dec
push
in
mov
scas
mov
and
push
sbb
cmp
bound
flds
push
mov
mov
lods
in
push
hlt
ret
pushf
lods
aad
js
sub
jb
sub
mov
push
mov
xor
cmp
lret
iret
mov
xor
jmp
pop
addb
int
cmc
shr
inc
sub
cmpsb
mov
xchg
push
xchg
push
lods
inc
sti
xor
int3
push
add
imul
in
mov
and
scas
loopne
pop
hlt
ret
shr
sbb
and
sbb
push
push
sarb
ret
test
pushl
mov
xor
mov
sub
mov
mov
in
push
stc
cli
mov
insb
lret
dec
pop
mov
push
or
lds
adc
xchg
pop
nop
movsb
inc
xor
test
adc
je
sub
push
jg
mov
dec
sbb
aaa
lds
cmpsb
mov
fstp
dec
jg
es
subb
xchg
pop
roll
lods
lret
ss
sub
pushf
and
mul
decb
call
mov
or
ror
push
dec
dec
out
ret
test
out
inc
xor
inc
sahf
imul
out
lds
cmp
or
cmpsb
add
sbb
push
xchg
out
test
int3
hlt
pop
bound
stos
push
cmp
movsl
pushf
inc
testl
aaa
sbb
dec
fwait
or
daa
addr16
je
icebp
insb
sub
add
cltd
lcall
fldlg2
test
fwait
jle,pt
in
fadd
mov
sbb
loope
xlat
imul
clc
scas
adc
movsl
lods
pop
sarl
fnstsw
popa
orb
cmp
lods
out
repnz
jg
mov
pop
sbb
aaa
push
mov
fcomps
jae
test
push
dec
sub
or
outsb
mov
sub
xchg
arpl
outsb
mov
mov
aad
iret
cmp
sbb
fucomp
xchg
inc
dec
sub
jmp
pop
add
add
mov
verr
shlb
pop
enter
xlat
test
aad
stos
mov
aas
ljmp
lret
subl
stc
or
ss
outsb
cli
mov
sbb
jle
push
aaa
xor
pop
cmpsl
divb
notl
pop
movsl
mov
dec
fldl2e
bound
jmp
xor
addb
cmp
lods
push
aad
lods
or
repnz
bswap
sub
ja
gs
push
dec
dec
nop
and
xchg
test
or
pop
out
pop
lods
and
icebp
fidivs
mov
bound
rolb
lahf
sbb
mov
mov
lods
mov
dec
pop
jbe
daa
xor
jnp
xlat
pop
or
aad
xchg
popa
lea
mov
mov
int
jno
fstl
lcall
mov
lods
mov
inc
add
cwtl
into
push
mov
out
arpl
mov
sbb
insb
jb
push
adc
js
test
adc
scas
mov
jae
ja
pop
ret
xor
pop
pop
and
cmp
sti
daa
in
loop
sbb
jb
fldt
cli
inc
sahf
movsb
and
sbb
sahf
sti
cs
gs
pop
lcall
cmp
xor
in
pop
repz
scas
fcmovnu
inc
mov
pop
inc
mov
mov
sahf
sub
out
imul
mov
xor
jecxz
stos
sbb
ror
and
rclb
leave
jmp
push
leave
mov
xor
cmp
fmull
out
sub
push
lods
loopne
mov
mov
jno
aaa
ret
jno
fdivr
popf
xor
into
notb
jp
aam
lods
jnp
mov
pop
mov
adc
bound
es
mov
fnsave
ja
fdivs
sbbb
daa
stos
mov
scas
imul
in
pop
add
sahf
stos
pop
or
repz
push
mov
sarl
adc
scas
popa
mov
in
push
enter
adc
mov
lds
stos
loope
add
cmp
cs
inc
cmpsb
lcall
push
out
inc
lock
fs
add
jne
test
cmp
out
test
or
insb
test
dec
nop
addr16
aaa
xorl
mul
xchg
pop
data16
fidivrl
sbb
sbb
orb
stos
mov
add
not
adc
or
fisubl
dec
les
lds
stos
mov
xchg
bound
sahf
jg
in
inc
not
imul
and
xchg
test
shll
sbb
jno
xchg
int
sbb
stos
shll
imul
fistpl
push
jno
stos
or
data16
xor
pusha
dec
lcall
lcall
fs
mov
cmp
xchg
leave
mov
xchg
sahf
inc
cmpsb
mov
outsl
movsb
xchg
ret
call
xchg
test
lret
decl
in
nop
cli
mov
hlt
fucomi
xchg
lds
out
mov
xlat
add
mov
sbb
inc
repz
int
cmp
or
xchg
pusha
xor
jg
xor
xor
add
mov
push
pusha
jmp
lea
mov
lcall
fldt
imul
hlt
rclb
lods
or
out
cmp
std
pop
push
jl
in
movsl
sub
pop
add
adc
jg
pop
pushf
jp
cmp
cmp
push
hlt
call
rorb
or
fidivrl
and
push
dec
stos
mov
lret
adc
add
and
add
inc
jns
pop
repnz
lret
cs
leave
or
inc
stc
lds
xor
cld
shrb
dec
inc
jbe
stos
fisttps
pop
stos
out
dec
mov
inc
test
mov
imul
jne
stos
clc
repnz
out
sti
mov
fisttpl
in
fldcw
and
jns
mov
popf
in
inc
push
fistps
movsb
cmpsb
loopne
insb
push
out
inc
fwait
xlat
push
cmp
inc
xor
mov
add
jno
push
lret
dec
or
ret
and
cld
lods
dec
and
sub
adc
xchg
popa
insb
pop
inc
push
cld
ficoms
mov
ss
roll
xchg
or
and
xchg
out
lods
dec
sbb
and
cmp
popf
addb
xchg
nop
and
mov
xchg
cltd
fisttpll
lds
lea
ret
fimuls
lds
into
movsl
dec
jge
inc
add
aas
mov
jg
fucomi
cmpsb
mov
enter
iret
xchg
adc
pop
stc
fsubs
ljmp
sbb
arpl
jne
sbb
jp
outsb
mov
or
je
adc
sbb
int3
cmpsb
mov
mov
mov
gs
cld
das
jne,pn
mul
nop
jno,pt
xor
ffree
ljmp
addr16
imul
test
push
jae
xorb
out
pop
enter
add
xchg
int3
mov
xchg
jecxz
mov
arpl
repz
lea
shlb
stc
push
dec
cs
jg
es
jp
jmp
mov
mov
mov
shll
fisubrl
nop
jae
and
push
add
xor
push
outsb
aas
mov
or
or
mov
pop
jb
into
faddp
jg
push
out
lret
bound
and
int
mov
cmp
insb
pop
and
aad
es
pop
inc
lret
sbb
orl
or
inc
stos
pusha
mov
jns
pop
aaa
jne
push
loopne
push
jg
js
xchg
mov
pop
cwtl
inc
mov
dec
inc
imull
xchg
nop
mov
js
int3
xlat
dec
ret
inc
icebp
dec
fldenv
push
jp
in
cmp
imul
xchg
cli
mov
push
pop
xchg
mov
add
add
aad
int3
icebp
hlt
je
sub
int3
jp
cmp
sub
pop
adc
xor
jno
pop
movsb
or
das
sti
pushf
test
pop
sub
int
jno
xlat
imul
inc
jae
inc
lret
dec
scas
lea
mov
in
jbe
lret
add
loope
popa
mov
bound
shrb
mov
lock
lods
xor
ljmp
sahf
mov
in
inc
mov
ds
in
cwtl
mull
push
adc
fwait
sub
xor
xchg
enter
sbb
stos
arpl
sarl
test
pop
and
fsubs
sub
ret
lahf
jb
test
aad
xchg
cmp
imul
push
mov
out
xchg
mov
add
mov
add
ljmp
sbb
cmp
add
cwtl
mov
rorb
sbb
mov
lret
ficoml
jae
mov
xchg
incl
out
adc
aad
sbb
js
adc
in
mov
leave
mull
cwtl
jb
mov
add
scas
sub
addb
int
and
bound
test
fadds
out
mov
fs
push
mov
out
jb
sbb
sub
adc
mov
or
sti
outsl
lock
call
dec
test
ret
or
add
shll
shll
les
adc
or
and
mov
loop
cs
jnp
pop
and
add
jbe
adc
aam
test
lcall
aaa
cmp
das
ret
xchg
clc
or
or
cmp
cmp
es
cmp
add
fwait
sti
pop
movsb
movsb
mov
adc
adc
jbe
cmpsb
cli
xrelease
sub
inc
or
add
stos
adc
push
testb
iret
movsb
popf
enter
xor
cwtl
aam
into
or
adc
ds
inc
push
and
jmp
dec
xchg
add
movsl
fwait
and
dec
je
push
iret
inc
data16
dec
jne
adc
adc
inc
shrl
adc
dec
push
jle
insl
jl
shr
inc
mov
call
adc
sbb
mov
imul
testb
shrb
enter
arpl
xlat
aaa
and
jl
je
cwtl
out
fdivrl
pop
arpl
out
pop
jmp
popa
leave
inc
lods
pusha
test
xchg
mov
dec
lds
lahf
icebp
mov
add
ss
cmp
mov
bound
divl
lds
stc
mov
pushf
mov
xor
fisttpl
lock
sub
jbe
incl
insl
dec
fs
bound
in
jecxz
push
fcoml
jl
jno
mov
xchg
loopne
xor
mov
in
in
mov
outsl
push
add
push
jo
out
or
in
pushf
sbb
mov
loop
xchg
out
lods
adc
xchg
inc
out
lods
mov
add
stos
ja
movsl
repz
lods
push
cmp
icebp
xor
pushw
xchg
jl
int3
mov
adc
sbb
mov
mov
int3
mov
movsl
push
jno
inc
dec
dec
mov
test
out
mov
insb
stc
jg
sbb
shlb
mov
imul
out
loopne
or
rclb
ds
fisttpll
scas
ss
sbb
aam
clc
or
dec
out
aad
scas
stos
pop
fmull
mov
cltd
jb
sbb
stos
aaa
cltd
pop
scas
pop
push
int3
or
dec
testb
xchg
mov
test
cmp
mov
xchg
jecxz
das
mov
rcll
push
ret
add
xlat
lcall
cmpsl
mov
int3
adc
add
aam
mov
out
out
enter
xchg
xchg
add
std
mov
jle
mov
xor
ror
nop
and
mov
fidivl
push
inc
gs
mov
or
fcmovb
xlat
fcomp
push
jns
jle
sti
mov
cltd
ljmp
pop
nop
stos
icebp
inc
lcall
into
sahf
fstps
fcomip
popf
outsb
hlt
xchg
loop
test
push
add
and
daa
cmp
cmp
popf
iret
sbb
pop
repz
push
lock
pop
into
mov
mov
pushf
mov
imul
mov
nop
push
imul
test
fstps
daa
test
sbb
ss
in
xchg
shr
imul
or
fldenv
dec
mov
sbb
push
push
xchg
or
xor
dec
scas
std
xchg
pusha
arpl
or
jnp
mul
jp
cmpb
repnz
mov
push
inc
jp
in
sub
xchg
push
adc
jne
push
xchg
sbb
sbb
mov
enter
in
jmp
sbb
cmpl
jns
sbb
stc
mov
mov
imul
popa
mov
mov
mov
sbbb
push
adc
cmp
repnz
dec
loopew
and
xchg
pop
stos
mov
orl
dec
xchg
jge
xor
and
adcb
mov
push
cld
xor
adc
movsb
cmp
scas
mul
outsl
outsl
or
ds
rclb
adc
daa
sbb
xor
movsl
push
push
pushf
fnstenv
sbb
jmp
lcall
mov
push
lcall
push
jmp
inc
sub
in
sbbb
mov
adc
stos
scas
in
mov
push
mov
mov
push
fwait
cmpsl
pop
xchg
push
lret
loope
shl
dec
cmpsl
movsl
js
sub
mov
lods
int3
mov
icebp
push
pop
shrl
dec
in
pop
stos
ss
addr16
addr16
jno
push
ret
stos
imull
repnz
ret
mov
lcall
sub
jae
stos
int3
xchg
mov
mov
mov
xor
sub
push
or
addr16
icebp
push
mov
shrw
and
push
das
sbb
fcoml
loope
sub
rcrb
fidivl
sub
cmc
adc
dec
jmp
xchg
xchg
daa
mov
cmp
or
imul
mov
in
fidivl
mov
pop
xor
mov
int
test
lea
sahf
jno
fwait
inc
shll
jmp
sahf
in
jns
in
testb
les
pushf
addl
fnstsw
pushf
les
or
fucomi
test
inc
push
shll
fdivr
jno
jle
imul
test
mov
shll
mov
aam
mov
mov
jge
sub
lahf
jle
mov
dec
das
rcl
xor
jl
test
stos
nop
xor
jecxz
iret
pop
cmpsl
rep
push
push
mov
dec
mov
xchg
pop
push
les
adc
cmp
jb
and
popa
out
daa
loope
dec
iret
jb
xchg
das
pop
movsl
jg
jae
popf
rcr
cmp
xchg
lcall
pushf
sub
push
int3
push
push
jp
mov
dec
pop
jb
push
les
aad
loop
pop
rcll
cmp
add
cmp
xor
out
xchg
iret
lahf
fisubrs
pop
mov
or
sarb
jl
stos
insl
popf
es
cmp
nop
push
ret
jae
loopne
rcrb
rclb
cli
enter
repz
push
sub
push
fcmovb
sbb
or
xchg
mov
fwait
adc
fcmovb
mov
cltd
test
data16
repz
inc
mov
push
mov
cmp
pop
lea
rol
mov
pop
pop
int3
gs
divb
add
cmpsb
test
fld
test
je
lea
iret
adc
mov
subl
cmp
jne
or
or
mov
pop
jnp
shrl
sti
dec
rolb
insb
push
jecxz
fbstp
pop
pop
jge
sbb
addl
pop
pop
bt
aas
push
push
cmpsb
xchg
notb
fsubl
aam
test
adc
and
cmp
lods
add
in
cmpsb
pusha
fnstsw
sub
test
adc
push
mov
mov
cltd
add
jge
mov
xchg
call
incl
test
jle
jle
push
orb
and
out
xorb
outsl
jnp
mov
lock
int3
push
add
cwtl
push
stos
mov
pop
add
repnz
popa
std
cwtl
cmp
xor
mov
jb
dec
add
sub
into
xchg
or
pop
add
gs
push
push
lea
pop
adc
jns
lret
mov
add
movsl
jae
les
cmp
sub
mov
pop
arpl
push
jne
push
fstpt
xor
daa
mov
sahf
or
test
xchg
and
fcompl
push
xchg
sbb
ret
cmp
pushf
dec
push
xchg
jbe
xchg
cld
pop
iret
lea
xor
xchg
cs
into
push
aad
pinsrw
out
inc
pusha
out
push
icebp
pop
or
sub
sub
jno
xorl
mov
jmp
mov
dec
mov
lea
andl
adc
cmpsl
jno
add
mov
jl
bound
pop
int3
stos
xor
sub
cld
outsl
test
cli
mov
dec
mov
cltd
lea
shll
fnstcw
dec
mov
sbb
sbb
jge
cmp
pop
cmp
add
cmp
fwait
mov
xor
js
sub
jmp
fsubr
jb
js
xchg
std
push
mov
pop
xor
lods
cmpsb
pushf
gs
mov
imul
cmp
fists
and
cmp
sahf
cltd
gs
mov
leave
sarl
push
and
pop
aas
ret
test
nop
pop
loopne
dec
sub
or
sbb
ret
jecxz
out
outsl
mov
push
xchg
push
in
popf
dec
push
jns
fisubrs
jp
pusha
mov
xchg
pop
repnz
cmp
bound
dec
test
jnp
cli
movsb
lock
imul
jne
jle
pop
xor
add
sub
dec
ret
lret
push
mov
mov
xchg
inc
xor
cmpsl
or
push
cmp
ret
call
jns
mov
inc
mov
inc
push
ja
enter
cli
sbb
cwtl
scas
mov
mov
ja
repnz
stos
sub
mov
aad
aaa
int
mov
popf
roll
jle
add
lock
or
pop
inc
negb
xchg
aas
mov
pop
add
inc
inc
push
sarb
xchg
dec
jne
or
push
and
xor
es
push
daa
lret
mov
subb
sbb
push
sahf
dec
push
or
cmpsb
repnz
inc
out
push
sub
sub
or
jmp
orl
ljmp
mov
sbb
je
pop
push
cmp
push
mov
pushf
mov
pop
jno
and
mov
and
jle
cmp
pushf
sub
mov
out
aam
cmp
push
clc
sti
cltd
inc
mov
jns
mov
jecxz
push
dec
lock
jno
das
in
lock
xchg
orb
xor
dec
inc
bound
popf
inc
jo
add
add
mov
fs
mov
mov
xchg
sbb
lret
mov
sbb
in
lahf
rcrb
push
movsb
rol
dec
pop
xchg
psrad
xor
aaa
inc
pushf
mov
icebp
addr16
into
push
and
js
adc
stos
jne
in
push
pop
pop
sub
outsb
mull
push
mov
xchg
test
add
sub
addr16
aad
pop
push
pop
adc
inc
jp
inc
dec
adc
mov
push
jecxz
jge
mov
sub
mov
les
adc
xchg
xchg
fs
lret
in
or
xchg
sub
cmp
inc
std
or
xor
dec
jg
xlat
hlt
in
push
lret
xlat
jno
sbb
int
sbb
mov
mov
jl
mov
insl
lods
insl
outsl
int
stos
pop
cmpsb
subl
mov
lcall
or
and
and
xchg
or
cmp
loope
dec
xchg
cld
push
xchg
fdivrs
aad
fwait
test
pop
lret
push
pop
adc
cmpsl
aas
ret
inc
int3
leave
outsb
insb
dec
jp
jnp
push
xor
add
lahf
xchg
cltd
fucom
add
xor
mov
xor
fs
sbb
cmp
fwait
sbb
and
cmp
int
inc
inc
pop
out
cmp
pop
or
inc
add
and
rcl
mov
push
push
insl
inc
shrb
xor
jb
fwait
popf
push
pop
lock
pushf
mov
fidivl
clc
lret
out
lock
push
movl
or
movsb
cli
pusha
cmp
mov
mov
in
mov
pop
stos
popa
and
idivl
adc
adc
xor
mov
imul
js
sti
stos
imul
mov
and
jge
sub
mov
jge
pop
insb
loopne
pop
inc
mov
outsb
lods
in
data16
leave
enter
mov
dec
je
mov
imul
movsl
and
cmp
dec
sti
in
test
sahf
mov
mov
lea
imul
mov
test
sti
xchg
fdivr
cli
jp
push
cmpsb
shlb
loopne
in
icebp
dec
cmp
mov
mov
mov
js
adc
ljmp
or
dec
test
in
rcrb
cmp
pop
movsl
scas
and
out
adc
and
pop
rorb
dec
mov
push
dec
xchg
loopne
inc
loop
mov
fidivl
shrb
pop
pusha
sub
in
fcompl
test
fwait
mov
adc
xor
fwait
ja
push
inc
int3
jnp
pushl
ss
lret
lahf
pop
clc
test
push
or
mov
mov
out
scas
xchg
int
loopne
push
push
loope
mov
sbb
and
jmp
notl
decb
xor
negl
cmp
mov
icebp
ja
sub
je
outsb
and
lods
push
pusha
jecxz
add
mov
stos
cmp
jo
add
lods
cmc
popf
dec
icebp
sarl
mov
stos
adc
jae
ljmp
mov
jge
stc
mov
lock
ror
nop
mov
sti
jae
in
adc
cli
ljmp
test
cmp
pop
cmc
mov
std
mov
jg
cli
xchg
add
mov
lcall
inc
or
push
jle
mov
xchg
mov
or
mov
flds
and
pop
add
clc
ja
daa
jb
addr16
mov
and
add
push
inc
mov
fs
mov
out
jmp
inc
and
fstpt
xor
mov
fisubs
jge
movsb
aas
ret
ret
xor
dec
cltd
cmp
dec
test
arpl
imul
mov
or
and
jno
sub
cmpb
out
fdivs
mov
dec
push
push
scas
pop
pop
lcall
push
test
fsubs
mov
loopne
clc
scas
dec
lods
jmp
mov
lcall
mov
push
xchg
pushl
and
mov
mov
out
sub
xchg
cwtl
mov
push
lret
mov
rorb
fsubrs
or
pop
sub
aam
ljmp
pop
hlt
into
mov
or
pop
and
fnstcw
rolb
loopne
loop
lea
xor
nop
loop
imul
clc
in
mov
push
and
lcall
adc
fimuls
xchg
nop
test
pop
sbb
push
jae
jae
setne
outsl
mov
inc
repz
idivl
xlat
js
fs
popa
cmp
mov
in
subl
xchg
inc
rclb
sub
xor
jnp
push
scas
jbe
rolb
and
add
inc
cmc
mov
enter
popa
xchg
idivb
push
xchg
mov
bound
pop
cmp
dec
sub
mov
fisubl
add
pop
mov
ret
int3
push
mov
mul
and
sub
push
jne
xorl
adc
lds
je
jmp
gs
movsb
jmp
push
ret
div
cltd
aas
loop
int3
or
mov
xchg
sub
js
lret
lds
aaa
and
cmpsb
sub
stc
pusha
sub
cmp
js
ret
push
sub
bound
pop
mov
or
or
shll
fsub
shlb
outsl
gs
push
out
in
ljmp
xchg
mov
inc
fcom
xlat
mov
cmp
icebp
testb
xor
pop
out
pop
stos
dec
popf
mov
adc
test
push
in
or
or
lcall
fists
pop
adc
and
fdivp
iret
push
jns
pop
out
xchg
out
add
inc
xchg
in
xchg
pop
ret
inc
mov
in
mov
mov
xor
xlat
cli
xor
and
push
aas
pop
int3
dec
mov
loope
ss
inc
mov
jb
dec
fcoml
pop
inc
jle
and
cmp
inc
insb
inc
aam
mov
jnp
mov
int
sbb
repz
jb,pt
fcoml
imul
pop
movsb
xchg
icebp
sbb
or
add
aad
negb
ficoml
cli
add
jp
and
imul
jp
inc
stc
test
mull
cs
icebp
loope
sbb
mov
lret
and
jne
sti
cltd
dec
dec
stos
pop
lahf
aad
aaa
pop
shr
cmp
movsl
dec
mov
leave
mov
pop
and
sbb
shlb
or
dec
fildll
xchg
ret
jl
lahf
mov
add
or
and
jae
in
mov
pop
pop
dec
mov
aad
add
rol
adc
cmpsl
test
orl
and
pop
fisttpll
out
push
ljmp
push
jl
mov
xor
add
mov
adc
jbe
push
inc
cmc
int
movsb
jecxz
pop
cmp
in
inc
and
mov
popf
dec
das
jle
jb
jl
cmp
push
inc
sub
sbb
insb
je
and
mov
int3
enter
dec
ljmp
mov
shlb
pushf
xchg
data16
aas
push
push
cli
cmp
sti
fs
lock
xchg
repz
lret
test
jb
sbb
inc
in
cld
repz
in
mov
lret
inc
xchg
das
cmc
scas
jnp
mov
out
add
imul
vpunpcklwd
lds
outsb
idivb
sarl
xchg
ljmp
hlt
in
and
loope
push
std
add
jl
mov
lret
or
xchg
jl
or
xchg
xor
jbe
scas
sbb
xor
popa
frstor
test
mov
cld
xchg
mov
sahf
cwtl
fsubs
incb
insb
xor
ret
call
dec
inc
mov
sub
sarb
out
mov
or
add
or
mov
or
fimull
test
add
push
shll
frstor
jl
lahf
test
sub
nop
pmaxsw
add
pop
inc
test
imul
rolb
in
mov
add
fimull
or
js
leave
pop
mov
lock
sbb
sub
push
idivb
cmp
mov
cmp
arpl
idivb
subb
movsl
or
xchg
call
mov
or
mov
imul
divl
shll
cmp
loope
jb
mov
jne
sbb
incb
shlb
sbb
inc
popf
cmp
adc
outsb
and
and
sub
dec
or
mov
test
jp
enter
cwtl
pop
imul
fcompl
xchg
nop
and
dec
ja
sub
jns
out
in
stc
test
mov
sbb
dec
int3
pop
xchg
cld
enter
mov
dec
les
in
inc
xor
cmp
mov
push
dec
and
adc
ret
enter
ss
push
fiadds
xchg
stos
xor
add
clc
cmp
dec
mov
mov
sti
les
pop
inc
cmp
sbb
outsl
shl
bound
shrb
sbb
mov
jno
xor
stc
inc
push
rclb
lods
cmp
imul
sahf
jg
sub
dec
jo
mov
fldenv
imul
jb
inc
sub
into
cmp
addr16
in
mov
sub
or
add
push
mov
shr
mov
push
inc
hlt
and
pop
jle
cmp
rol
in
jmp
cmp
jnp
loop
adc
sbb
int3
push
mov
repz
mov
inc
push
xchg
xor
daa
addl
fimuls
or
and
xor
scas
mov
mov
out
mov
xor
int
jbe
int3
inc
lret
mov
xor
scas
daa
pop
pop
mov
fcomp
in
push
add
leave
cmp
mov
mov
out
sbb
pop
xchg
cmpsl
inc
mov
sub
jo
or
xor
in
sbb
aam
inc
cmp
jecxz
push
rorl
cmp
and
data16
push
ror
add
and
and
pop
adc
mov
xor
gs
negb
push
dec
mov
in
jae
jb
je
sbb
aam
test
push
jge
out
push
addb
pushf
insb
ljmp
jo
lea
ret
push
and
add
inc
daa
out
mov
jmp
test
cmp
jmp
fldl
mov
enter
popa
mov
ja
mov
inc
jbe,pt
lods
sub
les
fisubl
fnstenv
xchg
sub
dec
pop
cli
or
jb
jmp
sbb
lea
xchg
lcall
test
adc
mov
rclb
cld
lock
roll
jmp
jp
adc
jle
cmpsb
xchg
stos
xchg
cmp
pop
repz
adc
subb
rcrl
push
jae
mov
shrb
pop
dec
pop
jb
imul
inc
pop
dec
jb
adc
insl
movsl
scas
jae
cmp
dec
lret
psubusb
sti
test
lret
fwait
cmp
test
mov
mov
shlb
test
lret
fnstcw
int3
data16
cmp
push
aam
test
jmp
adc
sub
outsb
jmp
dec
jecxz
push
xchg
or
mov
xchg
lahf
iret
cltd
lds
and
sahf
je
inc
in
loopne
push
adc
and
and
adc
bnd
or
or
sti
divl
in
mov
leave
mov
sbb
and
ljmp
mov
outsb
lahf
imul
xchg
push
and
push
imul
in
sti
xor
jae
aas
sahf
out
scas
xchg
testb
or
movsb
testb
or
cwtl
cld
leave
sub
dec
scas
fdivrl
cmp
xchg
popaw
fs
ret
inc
pminub
mov
jmp
fcmovne
mov
lods
jne
pop
mov
mov
push
int3
sub
mov
rcrb
test
mov
ss
into
sbbb
mov
movsb
xor
mov
jecxz
pop
xchg
sti
mov
sub
pusha
dec
aaa
pop
push
pushf
cli
movsl
lret
cmp
das
loope
sub
out
mov
out
inc
addr16
mov
mov
bound
int
jbe
dec
ljmp
inc
fnstsw
lods
sahf
lret
add
or
scas
xchg
or
inc
lds
mov
push
dec
pop
cmc
repnz
sti
sarl
rcrb
mov
out
mov
cmpsl
sub
addr16
sar
ret
jo
inc
inc
imul
inc
lcall
fs
nop
test
dec
sbb
imul
dec
lret
and
fists
adc
stos
leave
fimull
push
stc
lcall
push
xor
outsb
adc
enter
xor
cmpb
test
pop
pushf
cmp
sub
jle
ds
popf
xchg
or
cwtl
sub
push
push
cld
ror
pop
mov
mov
sub
xchg
test
insl
in
cli
xchg
or
mov
negl
jp
and
inc
mov
and
mov
mov
add
sub
cld
pop
jmp
fdivl
es
jno
mov
shll
mov
imul
push
in
into
cmc
cli
sbbl
pop
jne
std
insl
hlt
or
arpl
jp
sbb
mov
or
jle
mov
mov
shll
aad
add
sub
sub
mov
mov
ljmpw
pop
cmpsb
jecxz
push
push
pop
loopne
add
loope
sub
or
std
icebp
test
dec
imul
inc
mov
daa
loope
pop
jmp
sub
mov
sahf
loopne
xchg
pusha
xchg
dec
jne
scas
popf
add
adc
in
aam
cltd
rorb
lea
xor
jg
repz
xchg
jmp
xchg
pop
divb
testl
adc
cmp
std
cmp
xor
mov
inc
dec
mov
xchg
dec
sub
popf
sub
lcall
dec
inc
mov
stos
jge
mov
adc
lods
lret
rclb
subb
cmp
out
ret
outsb
fadds
mov
ljmp
mov
sub
push
or
cmpsb
lret
aaa
std
flds
rorl
or
outsl
mov
sbb
outsb
push
ficoms
test
ds
pusha
sti
out
lods
jg
mov
add
push
ss
shlb
daa
js
call
sbbb
adc
inc
cmp
mov
fisubl
dec
lods
shlb
test
push
mov
popf
fistpll
movsb
aad
in
shrb
in
test
pushf
xchg
loopne
cli
popf
mov
lock
repnz
and
or
push
mov
aad
popf
push
lea
dec
data16
pop
cwtl
mov
fst
out
pop
inc
and
pop
lcall
inc
dec
xchg
cli
dec
popf
fs
xchg
mov
stc
sbb
fcmovnb
and
int
bound
push
xorl
mov
sub
and
or
and
push
mov
int
lds
icebp
pop
popf
push
mov
rcrl
mov
dec
dec
xor
xor
pop
popl
push
mov
movsb
repnz
jnp
pop
ret
jns
inc
outsl
bound
adc
out
pop
jge
int3
xchg
outsb
xchg
dec
cmp
js
inc
cmp
loopne
jns
lahf
adc
ljmp
jecxz
push
dec
mov
add
test
push
pushf
lahf
rorl
je
cmpsl
pop
mov
and
push
nop
mov
sub
push
test
out
fisubs
iret
xor
arpl
insb
dec
add
insl
imul
lods
test
or
and
lret
xor
out
loop
leave
xor
ljmp
dec
cld
jmp
or
data16
cwtl
lcall
sbb
dec
mov
repz
mov
fisubl
or
sub
sub
push
jge
mov
push
sbb
iret
rcrb
cmpsb
mov
dec
iret
mov
insb
call
jo
and
lret
cmp
push
lds
js
xor
lds
xchg
and
mov
inc
jo
cmp
outsl
push
dec
pop
or
into
out
shr
iret
mov
test
wbinvd
jg
mov
xchg
aad
mov
mov
inc
jns
xchg
xor
add
mov
xchg
mov
fldenv
movsl
xchg
popl
and
into
rcrl
push
lret
jp
shll
cltd
xchg
or
cltd
xchg
in
ljmp
sub
xchg
aad
mov
aad
add
rorb
mov
jae
sbb
in
jno
mov
les
stc
orl
outsb
mov
addr16
rol
adc
test
and
xchg
push
sub
test
mov
pop
addr16
lock
aam
mov
push
fcoms
daa
adc
xor
test
sbb
adc
push
inc
dec
xorb
fiaddl
and
jl
ret
or
inc
pop
lods
movsb
and
xchg
xchg
and
mov
add
std
pop
mov
sahf
rcr
data16
inc
icebp
dec
int
iret
iret
push
adc
dec
pop
outsb
gs
shl
and
outsb
cmp
mov
pop
les
lcall
xchg
in
xlat
aam
std
fsubrp
loope
pop
sbb
movsl
mov
nop
or
add
in
test
sub
push
jno
testb
aas
and
leave
adcb
dec
out
push
jb
jb
mov
leave
aad
stos
loope
lcall
xchg
inc
jl
repnz
popa
outsl
push
sti
in
sub
test
sbb
insb
aad
jl
mov
call
and
push
out
out
push
loope
lret
and
arpl
pop
mov
ret
jp
sub
add
mov
pop
inc
test
inc
testb
push
cwtl
push
mov
stos
mov
sahf
out
dec
mov
xor
lods
jo
in
xlat
push
es
andb
add
mov
xchg
mov
repnz
leave
out
add
stc
adc
lcall
scas
sub
and
add
or
jbe
mov
shll
int
mov
dec
push
and
mov
inc
or
inc
jb
std
das
mov
popl
cmp
clc
repz
sarl
pop
adc
gs
and
cmp
xchg
mulb
adc
or
orl
loope
fisttpl
icebp
push
ja
mov
lock
jmp
sbb
pop
xchg
daa
push
mov
jl
and
or
pushl
out
lahf
jns
and
dec
xchg
in
mov
rolb
push
ds
mov
and
aad
enter
sbb
lea
das
mov
es
outsb
adc
mov
mov
and
push
in
cli
out
arpl
fcmovu
push
cbtw
outsb
mov
cltd
sbb
addr16
pop
popa
cmp
push
jns
arpl
and
xor
and
sbb
push
mov
fwait
or
mov
xchg
jmp
rorb
ss
mov
sbb
lret
cld
lods
cli
leave
mov
add
push
jnp
push
push
in
in
les
pop
jl
mov
jecxz
sbb
adc
mov
mov
rcll
cld
or
push
push
enter
popa
push
mov
int
dec
ljmp
sbb
add
adc
movsb
movsl
ret
fldl
xor
push
sbb
adc
es
in
int
push
fs
fldenv
cmp
mov
test
punpckldq
rclb
jo
fdivs
xchg
fwait
xorb
mov
sarl
mov
imul
xor
sarl
dec
sbb
addr16
pusha
xchg
jne
shll
scas
out
adc
or
loope
push
fnsave
pop
int
adcl
xchg
add
orl
stos
int
push
aad
rclb
jecxz
or
push
stos
daa
out
sbb
into
test
xorl
fistpl
xor
jg
mov
mov
mov
jb
mov
and
mov
sub
pop
mov
adcb
sbb
xchg
xor
pop
lods
inc
cmp
arpl
sub
and
fwait
mov
outsl
sub
and
adc
fistpl
pop
arpl
push
add
shrl
cmp
addr16
shrb
add
pop
pushf
push
mov
pop
insl
and
stc
jns
lods
fdivs
bound
rol
pop
repnz
ret
mov
daa
mov
in
jp
js
or
sahf
rcrl
mov
fcomps
enter
mov
dec
je
outsb
cli
inc
test
push
addr16
cmc
jns
xor
mov
psrlq
cmp
test
imull
inc
pop
add
shrb
and
mov
test
jbe
pushf
adc
sub
mov
jno
mov
or
push
jbe
dec
or
xchg
push
testl
cmpsl
hlt
mov
jmp
cltd
jne
fsubr
aad
imul
jae
data16
inc
xor
push
lods
in
fadd
lock
rcr
jle
mov
outsb
add
cmp
pop
add
cli
adc
pusha
xlat
ja
inc
sahf
pop
mov
jg
stos
inc
mov
aam
out
sarl
pop
jne
icebp
push
lret
lds
push
mov
pop
pop
repz
cmp
icebp
hlt
and
rclb
xor
dec
insl
insl
cmc
je
testl
ds
cld
sbb
cmp
aam
adc
xchg
int
adc
in
imul
add
dec
pop
sub
fildl
sub
in
cli
call
std
les
je
loopne
cmp
xchg
in
mov
inc
xchg
inc
sub
add
aad
shlb
sahf
inc
popa
mulb
in
pushf
xor
mov
jbe
cmpsb
cwtl
xchg
hlt
jp
mov
sub
sbb
out
push
repz
lret
pop
mov
push
test
add
jp
cmp
lahf
pop
aaa
xchg
sbb
mov
popa
stc
in
or
or
cmpsl
xchg
jg
pop
leave
mov
adc
mov
xchg
ret
stos
sarl
fldl
rcrb
jns
lahf
xlat
lcall
jmp
je
ficompl
dec
xor
pop
xchg
dec
testl
dec
jecxz
sbb
cmp
mov
int
in
adc
pop
out
inc
popf
xor
add
lds
fisubl
pop
mov
dec
and
xchg
ja
mov
lret
orb
push
xchg
or
shl
adc
jecxz
popf
dec
dec
ficoms
lods
pop
inc
push
int
sbb
enter
pop
das
nop
inc
pop
cmp
cmp
add
fistl
sub
out
jle
sbb
dec
sbb
mov
and
test
inc
xchg
ret
push
xchg
pop
inc
lods
lock
xchg
into
push
mov
lret
cmp
cld
push
hlt
aad
int
add
in
mov
test
cmp
out
cmc
add
std
push
insb
dec
mov
xchg
clc
cmpsl
pop
add
ficoms
cmp
mov
adc
mov
arpl
and
repz
mov
test
rorl
jae
or
outsl
popf
dec
adc
pop
sbb
and
daa
jne
pusha
jne
push
pop
in
into
xchg
adc
jle
in
nop
sbb
cwtl
stos
mov
pop
adc
jp
add
ret
mov
fnstenv
std
arpl
into
daa
or
loop
ja
sub
data16
push
sub
aad
push
adcb
mov
ret
and
imul
mov
clc
pushf
jbe
pop
pop
ljmp
jnp
fbld
xor
jns
cltd
imul
je
cmp
lods
movsl
div
xchg
xor
sahf
and
or
arpl
pop
mov
jmp
mov
xor
outsl
mov
push
add
dec
hlt
or
fmul
xor
int
and
lahf
shrb
popf
pusha
jne
aaa
outsb
leave
iret
pushf
movsb
dec
xor
pop
ljmp
xchg
lret
or
push
xacquire
lahf
les
inc
aas
imul
mov
mov
xlat
mov
jp
leave
fs
aad
xlat
dec
enter
jg
addb
ds
fidivrs
push
jle
mov
test
xchg
fisttpll
and
pusha
sub
mov
rolb
ret
ret
movsl
mov
cmp
xor
cli
sahf
out
mov
sahf
in
rol
fs
sti
notb
sub
enter
push
mov
jge
cmpsb
xchg
xchg
pop
lock
mov
add
xor
lds
sti
pop
loop
lret
test
cmpl
jb
pop
mov
xchg
outsb
add
cmp
pop
mov
in
push
loope
mov
cwtl
stos
add
xchg
inc
enter
or
lods
xchg
jg
dec
add
jp
jae
call
loopne
jb
push
pop
and
lea
roll
jbe
inc
mov
test
mov
push
xchg
iret
push
jb
mov
dec
xchg
scas
insb
adc
fsubl
pop
stc
jne
ja
inc
jae
divl
inc
scas
push
shll
dec
ja
add
mov
mov
aam
and
lret
push
mov
sti
je
cmp
imul
add
bound
lods
insl
iret
inc
pop
or
jmp
xor
or
ss
or
ficoms
pushf
push
mov
in
movsl
out
cwtl
icebp
and
fisubl
out
out
inc
sbb
add
orb
or
xchg
inc
cmp
pusha
jo
loope
add
inc
in
sbb
pop
bound
cld
or
pop
dec
stos
sarl
lcall
push
push
push
xchg
and
jmp
inc
sub
adc
or
daa
xchg
rorb
aad
imul
add
xchg
popa
insb
cmp
xlat
outsb
jno
cmp
adc
add
xor
std
out
fcmovnu
or
fisttpl
mov
push
popf
int
and
cmpsl
iret
stos
sahf
push
inc
rcr
sub
dec
push
adc
pop
daa
adc
incl
int
addb
shlb
fstpl
sti
sbb
xchg
jl
mov
inc
cmp
mov
xchg
gs
and
jmp
fidivs
and
add
and
test
xlat
das
or
xchg
je
fsubl
mov
cmp
fdivl
cli
jecxz
stos
addr16
imul
std
stc
in
push
addr16
xchg
std
data16
and
fiaddl
aam
and
rcll
adc
push
cmp
and
dec
mov
mov
adc
sar
inc
arpl
out
fs
xchg
xor
pop
test
push
pop
add
adc
sub
icebp
mov
fldcw
pop
movsb
inc
xchg
inc
out
jecxz
sbb
mov
mov
sbb
insb
and
popl
les
inc
add
fwait
stc
adc
inc
mov
inc
mov
sub
push
in
sbb
stc
mov
jle
fcmovbe
gs
xor
pushf
or
cmc
gs
sub
insb
or
arpl
sub
stc
push
scas
sbb
sub
in
lods
sub
mov
or
or
jbe
aad
stos
je
pop
ljmp
xor
pop
adc
cld
repnz
mov
out
cmpl
sbb
sub
dec
cltd
lahf
gs
imul
lods
mov
fnstsw
cwtl
cmp
out
fs
sbbb
jbe
fs
add
sbb
popa
stos
lcall
mov
xor
sub
push
lock
cmc
cld
aas
nop
sti
mov
and
int
lock
movsb
js
sarb
in
shll
frstor
pop
pop
sahf
scas
ds
arpl
daa
js
jo
inc
xor
iret
and
add
int
mov
add
dec
into
jg
adc
adc
outsl
test
cld
jbe
das
sbbl
dec
push
mov
mov
inc
stc
pop
lahf
mov
pop
mov
push
out
mov
jl
pop
xlat
mov
outsb
pop
lds
loope
jge
loope
icebp
xchg
sbb
bswap
or
test
mov
ja
jp
nop
mov
push
adcl
cmp
mov
fstl
and
sbbb
adc
xor
mov
mov
push
aaa
bound
cmp
mov
decl
js
dec
inc
ljmp
lods
add
int
lds
xor
popa
pop
ds
and
push
sub
jge
testb
push
outsb
inc
sub
pusha
clc
aas
xor
xor
and
out
push
sbb
aad
fisttpl
mov
mov
xchg
lods
adcl
testl
in
or
push
shll
pop
dec
dec
or
jg
or
pop
add
out
and
in
inc
and
ficoml
cld
cld
lds
jp
aas
lcall
jmp
int3
jl
sub
out
je
mov
mov
jecxz
and
stc
mov
cmp
pop
mov
aam
test
mov
inc
mov
pop
aad
loopne
xchg
dec
mov
in
pop
sbb
mov
jle
loope
cltd
push
jmp
pop
mov
jno
push
insl
in
mov
ret
mov
xor
test
insb
inc
cwtl
push
jnp
xchg
inc
jo
jle
sub
push
push
decl
iret
mov
test
pop
jg
fbstp
ss
test
cltd
ret
sub
and
xchg
mov
sarl
xchg
je
aam
jle
rcrb
mov
loopne
cltd
mov
dec
int
repnz
adc
movsb
pop
outsb
mov
xchg
lsl
sub
mov
sbb
push
js
push
push
mov
sbb
sbb
lods
add
xchg
xchg
pop
in
jo
stc
sub
mov
das
and
bound
lods
pop
inc
cmp
cmp
das
mov
fs
aas
push
and
jle
outsb
mov
and
xor
jne
insb
test
sti
add
jns
mov
cmpsb
out
loop
stos
add
push
ret
jne
jno
pop
sub
lcall
push
and
and
adc
insl
adc
mov
cmp
inc
test
mov
pop
lea
ljmp
outsl
fisubl
inc
sub
adc
mov
jno
jae
ret
jge
add
incl
cmp
mov
mov
clc
push
movsb
mov
gs
lods
pusha
rcrl
in
add
push
outsl
pop
jmp
push
aad
repnz
dec
rclb
daa
cwtl
lcall
mov
jmp
mov
mov
mov
inc
into
xchg
adc
inc
jp
dec
imul
in
shrb
add
push
jge
cs
mov
pop
repnz
orl
push
inc
or
push
mov
lret
cmpsl
js
in
pop
push
sbb
xor
outsl
jecxz
hlt
jb
data16
cmp
popf
icebp
pop
fdiv
rcrl
adc
sub
cli
int3
mov
mov
mov
xor
sbb
call
fiadds
adc
add
and
js
dec
pop
add
fsts
add
dec
add
jo
lret
mov
test
adc
scas
and
nop
mov
lahf
mov
jecxz
dec
sub
dec
add
push
fstps
mov
pop
fcmovb
cmp
adc
and
pusha
sub
jle
insb
or
out
and
push
flds
mov
xchg
clc
scas
stos
push
test
mov
push
dec
ljmp
inc
call
jb
je
cmp
push
pop
pop
pop
add
aam
cmp
cld
icebp
pop
sbb
xor
mov
aas
js
inc
or
je,pt
mov
jns
mov
mov
and
pop
push
push
xchg
ds
push
jns
test
cmp
aam
mov
std
dec
sub
pushf
cmp
push
iret
call
lret
out
mov
and
jl
mov
jge
movsl
jbe
jns
sbb
fwait
fs
add
xchg
and
mov
mov
setp
nop
pop
cmp
sbb
pop
xor
inc
sub
mov
idivb
std
insl
popa
ljmp
fcmovu
cmp
mov
xchg
inc
xchg
ljmp
inc
fwait
test
mov
and
or
jae
inc
pop
ds
outsl
aad
xchg
pop
pop
pop
mov
pop
lea
aam
lods
sub
xchg
push
sbb
loope
cs
push
lea
int
adc
and
jns
das
mov
xor
mov
mov
mov
cmc
adc
fucomip
popa
sbb
push
mov
adc
mov
jg
jne
jne
insb
sti
sub
xchg
mov
add
lods
enter
sarl
addr16
outsb
int
fdivrs
jmp
dec
sti
adc
mov
jne
jg
dec
push
jmp
or
pop
and
sbb
add
rcll
pop
pop
in
shr
lods
mov
sahf
sti
cmc
pop
scas
or
insl
xor
repz
mov
out
sbb
mov
das
insb
pusha
in
repz
xchg
push
incl
jp
cwtl
jo
pushf
data16
dec
mov
and
sbb
xorb
push
clc
sahf
js
sbb
pop
jae
aas
pop
icebp
scas
dec
fwait
pop
out
dec
and
jne
cmp
jno
pop
movsl
fcmovb
jns
lds
gs
or
and
or
xor
addb
adc
jnp
popa
mov
fadds
xlat
jne
push
std
jnp
shll
stos
in
cmp
mov
lea
out
aas
adc
mov
inc
pushf
xor
loopne
insb
lahf
into
icebp
fdivr
call
fldt
js
repnz
popf
cmp
sub
les
out
push
fwait
dec
aas
stos
jecxz
sbb
mov
jecxz
add
jo
popa
lret
jle
cli
stc
std
sbb
aad
and
arpl
mov
ret
push
sbb
push
dec
fucompp
inc
stos
aam
fimuls
mov
add
mov
orl
lretw
push
push
inc
xor
clc
sub
sbb
jae
inc
sub
pop
in
mov
cltd
mov
mov
sbb
loopne
and
fs
packsswb
cmp
jmp
test
dec
xchg
mov
js
adc
lea
pop
mov
inc
adc
lcall
dec
iret
jecxz
aad
push
imulb
dec
roll
add
test
popf
pushf
rolb
jge
xor
push
lods
adc
or
and
jns
cli
popf
inc
mov
cmp
pop
sahf
jne
xor
cmpsb
and
push
cltd
cwtl
mov
into
aad
jp
insl
popl
ss
jle
sbb
addl
and
and
mov
pop
cmc
sahf
pop
pushf
pop
imul
mov
mov
int
jb
addr16
fadds
in
mov
lds
push
icebp
inc
vmovd
dec
xorb
mov
inc
rolb
push
xorb
inc
rorl
cmp
in
stc
mov
cmpsb
mov
xor
mov
pop
push
cld
int3
aas
ret
insb
and
mov
daa
xor
inc
xor
pop
push
nop
cs
pop
mov
sbb
sub
and
sahf
insb
cmp
jmp
xlat
xchg
sbb
inc
mov
add
scas
test
lret
xlat
xor
and
lret
rcr
xchg
xor
cwtl
add
jp
fs
jp
pop
cld
jle
call
mov
xchg
mov
ja
mov
andb
pop
xchg
addr16
pop
sti
mov
test
fnsave
and
xor
lcall
nop
and
add
cmp
jg
aaa
imul
xchg
testl
and
pop
xor
or
xchg
dec
pop
stc
aam
out
aam
aas
repz
adc
or
fldcw
stos
cmp
loop
lret
jg
leave
stos
and
pop
lods
shr
mov
sub
sbb
mov
xchg
add
xchg
out
mov
in
js
mov
arpl
sahf
repnz
pop
in
je
adc
out
jl
inc
fstpl
and
outsb
je
inc
rclb
xor
push
int3
mov
shll
xchg
jmp
imul
jnp
pop
fs
in
ljmp
adc
addr16
stos
mov
loop
add
and
xchg
in
or
xchg
or
fstpt
adc
add
subl
cmc
fcomp
inc
aad
mov
mov
mov
xor
sbb
xchg
call
loop
jmp
lods
dec
mov
xorl
jae
sbb
outsb
adc
jmp
jecxz
ljmp
inc
int3
dec
inc
push
dec
jg
pop
xchg
xchg
cli
and
lds
mov
jno
fcmovnu
jg
leave
push
pusha
pop
aam
stc
flds
jle
hlt
push
faddp
jge
movsb
enter
scas
outsb
adc
adc
std
pop
icebp
imul
fidivl
push
int3
or
stos
les
mov
lds
dec
inc
or
xchg
mov
sbb
in
push
adc
outsb
pop
fisubs
jl
sub
mov
mov
or
pop
imul
aas
jne
mov
pop
xchg
lds
lods
jle
adcl
imul
or
mov
push
movsl
loopne
and
mov
inc
pop
outsl
mov
sub
mov
jns
andl
cmp
into
out
mov
loope
inc
or
sti
sbb
pushl
xchg
inc
jecxz
dec
sub
loop
test
outsb
popa
xor
adc
sti
xor
pop
aas
iret
xor
push
std
out
scas
pop
fsts
bound
rol
rorl
sbb
js
cmc
popf
jb
xor
xor
js
pop
sbb
lea
mov
loope
arpl
xchg
mov
cmp
adc
or
stc
and
add
sbb
xchg
insb
push
xchg
add
jb
pop
push
adc
push
jl
aaa
jb
jle
popa
xor
jmp
fwait
cs
xchg
fwait
jbe
pop
xor
cmp
pushl
mov
movsl
dec
pop
lods
shlb
test
mov
lret
imul
filds
mov
movsl
test
xor
lods
popa
mov
pop
test
adc
rol
xchg
inc
insb
rol
in
enter
orl
add
inc
push
pop
mov
in
sahf
xchg
outsl
jae
addb
icebp
pop
add
pop
pop
mov
ret
call
sub
out
and
subl
repz
aaa
push
push
xchg
cmpsb
inc
sbb
js
inc
popf
test
ret
push
push
test
stos
and
cmc
addb
sahf
outsb
sbb
das
jle
pusha
xchg
int
cmp
mov
add
mov
mov
lret
mov
add
test
das
loop
in
jo
movsb
add
sbb
aam
test
cmp
ret
imul
test
fbstp
iret
mov
sbb
mov
mov
mul
lahf
sti
mov
lret
sub
fst
loopne
inc
xchg
mov
pop
ja
ss
mov
imul
xchg
scas
and
mov
and
add
movsl
xor
push
and
xchg
jo
xchg
pop
pop
ds
adc
mov
xchg
mov
cmpsl
enter
scas
xor
xchg
jo
jb
xchg
into
mov
add
xchg
aaa
pushf
mov
pop
mov
dec
lods
scas
rcr
outsb
mov
repz
arpl
arpl
pop
sbb
gs
sbb
inc
sbb
in
fisubs
push
sub
into
sti
aam
or
add
and
push
into
loop
sbb
lret
mov
rorb
outsl
pcmpeqd
sbb
jmp
or
out
pop
inc
shr
loopne
syscall
std
scas
jmp
aaa
mul
push
lock
aad
jl
adc
sbb
jno
subl
mov
mov
mov
fcomp
scas
xor
gs
push
imul
cltd
mov
insl
enter
jle
nop
pop
aam
cld
inc
repz
ss
mov
mov
or
testl
or
xor
pop
pop
inc
xchg
stos
inc
sbb
jns
sar
push
call
sbb
push
cmpb
into
inc
inc
xchg
int3
mov
sub
loope
int
and
imul
lahf
add
mov
xchg
pcmpgtw
sbbb
or
mov
ljmp
dec
jmp
loopne
fimuls
and
jp
inc
aas
jnp
fildll
mov
mov
add
pushf
stc
int3
int
call
outsl
or
test
sub
dec
sbbb
add
shrb
pop
shlb
xchg
inc
enter
jns
push
negl
mov
cmp
cmp
test
push
dec
mov
add
loopne
fucomi
jo
jl
sbb
int3
lea
mov
adc
mov
xchg
ret
pop
pop
add
pop
push
cmp
fchs
sbbl
add
cmp
std
jmp
testl
and
xor
sbb
mov
jg
push
xor
test
cmp
fs
cmc
adc
and
test
addr16
std
ds
inc
xchg
scas
icebp
xchg
in
stos
xacquire
aam
sub
in
sub
push
aaa
dec
push
aam
adcl
outsb
lock
or
jg
and
and
mov
mov
sbb
imulb
mov
in
hlt
cmpsl
dec
sarb
filds
orl
lea
dec
rclb
or
mov
push
cld
popa
test
mov
hlt
stc
rorb
sub
bound
push
add
push
inc
ffree
push
out
mov
cli
sbb
cmp
ret
or
popa
ss
mov
pop
in
push
xchg
and
ljmp
push
lcall
adc
in
insb
lods
mov
fisubs
aaa
push
in
int
push
mov
cmp
cmp
clc
imul
rclb
sbb
stc
xor
inc
fwait
push
test
push
xor
insl
jb
pop
notl
xchg
xor
push
mov
pop
shll
rorb
lcall
aam
sbb
in
and
pusha
in
or
jae
subl
add
and
shlb
mov
lock
pushl
int
daa
and
clc
fs
xor
push
cltd
pop
addr16
ret
or
enter
sbb
dec
jb
addr16
jle
or
xor
call
or
push
sbb
sbb
dec
push
jg
jnp
mov
adc
jae
jmp
cmpsl
aas
stc
pop
inc
pop
mov
movsl
xchg
loop
xchg
cmove
and
xchg
idiv
mov
pop
out
pop
mov
or
loope
mov
sub
cmp
xchg
cmp
xchg
adc
push
sbb
pop
scas
ret
fs
aaa
pop
daa
mov
roll
lock
icebp
add
jo
cmp
add
add
xchg
pop
movsb
or
pop
daa
jo
dec
pop
or
stc
je
mov
rorb
push
xchg
xlat
out
test
add
test
pop
aad
rclb
xchg
mov
jecxz
scas
push
cmp
cmp
ret
cmp
ds
mov
jb
aas
xorl
xchg
cmp
enter
and
mov
sub
movsb
inc
sub
imul
mov
lcall
test
ret
mov
ljmp
and
sub
es
dec
sbbl
inc
stos
pop
sbbb
pop
sbb
cld
inc
testl
out
xchg
shlb
mov
iret
fsubrl
out
xchg
add
mov
mov
movsb
mov
or
jb
fsubp
mov
sbb
jo
popa
stos
adc
frstor
call
push
arpl
jae
ret
popf
cmp
and
dec
adc
outsb
sahf
stos
sbb
mov
xchg
into
gs
shll
loop
pop
inc
repnz
je
sti
mov
fisubl
cmp
push
retw
mov
call
add
imul
aas
sbb
fadd
aaa
sbbl
cmpb
jbe
dec
fs
sbb
mov
aaa
push
pop
or
mov
cld
xchg
jge
and
and
pushf
dec
jp
scas
ss
sub
xlat
jo
out
fisubs
mov
enter
xchg
mov
inc
cli
jl
xchg
or
jno
push
pop
icebp
stc
sub
jae
xchg
daa
out
shrl
cld
and
or
mov
mov
fmul
mov
adc
and
pop
xchg
jle,pt
andb
gs
mov
stos
fwait
fwait
push
mov
shll
nop
shl
loopne
jl
imul
or
push
ds
dec
or
mov
mov
or
ret
fs
cmp
mov
add
cltd
fcmovu
push
inc
aad
in
imul
mov
leave
inc
rorl
push
mov
xlat
inc
push
sub
jle
xor
inc
jl
call
jl
adc
lods
sub
mov
rclb
mov
jp
iret
gs
inc
testb
js
and
pop
jo
addr16
xchg
sbb
lods
repnz
xchg
jbe
sbb
sbb
pushf
aad
mov
imul
dec
sub
cltd
repz
and
loopne
xchg
xor
in
sub
pop
mov
ror
stc
punpcklwd
andb
sbb
jmp
fstpl
sub
ljmp
cmpsl
aam
mov
stc
cmp
outsb
les
jne
or
inc
adc
and
bound
jp
xchg
fcoml
out
mov
lds
lcall
rorl
sbb
and
data16
lret
mov
mov
mov
or
mov
cmp
cmp
flds
insl
imul
add
dec
and
aaa
jge
fdivr
call
ret
dec
xor
jmp
int
inc
or
or
add
int
cmp
jle
out
push
pop
add
nop
test
cmp
add
or
hlt
sub
cmp
pop
push
xor
jb
sbb
pop
into
mov
adc
fsubrl
mov
jnp
sbb
cmp
or
xchg
out
fsubr
add
pop
lahf
sub
pop
js
and
pop
pop
in
push
cmc
or
enter
xor
xorl
nop
ss
and
rcr
ret
xchg
fcoml
adc
cmp
xchg
cmp
les
sub
ret
mull
gs
push
das
pop
push
mov
sti
or
cmp
jmp
xor
add
sbb
dec
jns
ss
in
orb
pop
adc
ret
fxch
or
xor
mov
fs
into
adc
dec
test
lret
push
jge
das
fs
and
jecxz
dec
sub
mov
rcr
mov
dec
cmp
push
xor
cmc
adc
loopne
mov
data16
xor
icebp
mov
mov
mov
movsl
dec
mov
jae
outsb
dec
push
mov
jb
sub
sbb
arpl
fildll
outsl
sbb
mov
or
movsb
outsl
or
ret
int3
repz
inc
pop
jbe
popa
into
jge
dec
mov
ds
push
aam
xor
test
dec
fst
jge
sbb
lds
xchg
mov
test
sbb
pushf
dec
push
inc
lock
xchg
mov
aad
mov
sbb
jmp
fildl
pop
xor
sarb
sub
mov
xchg
dec
mov
jmp
mov
ret
je
imul
ja
pop
loop
rcrb
loop
loopne
popa
ss
or
fcomps
aad
sbb
arpl
je
in
data16
ss
lods
mov
test
fstpl
sbb
jle
bound
inc
sahf
aad
and
pop
inc
sub
push
dec
aam
xchg
sahf
mov
mov
fcmovnu
xor
jmp
sub
pop
test
mov
loop
dec
mov
enter
outsl
sbb
push
dec
mov
sub
jp
fwait
pop
mov
pop
push
add
call
lahf
push
push
mov
in
inc
add
and
cmp
dec
xor
pop
jne
in
shll
or
scas
outsl
movsb
repnz
pushf
mov
das
add
push
mov
push
sbbl
in
sbb
leave
fisttps
or
dec
xor
mov
inc
or
xor
dec
mov
repz
push
call
loope
sub
fcmovnu
shll
shl
fistpll
adc
add
les
xlat
mov
mov
xor
pop
lods
cmp
fcomip
jno
cmp
mov
push
popa
sub
test
cmp
mov
lods
data16
jg
cmp
lds
ret
jle
insb
out
xor
add
test
xchg
imul
pop
addb
jno
add
xchg
add
sub
pop
cwtl
dec
jns
mov
cmc
pushf
ret
pop
repnz
jp
mov
jne
incl
dec
andl
mov
jle
gs
push
dec
aam
gs
out
push
es
add
inc
inc
mov
push
xchg
loop
mov
imull
dec
push
adc
dec
cld
push
fwait
cli
dec
mov
fdivrs
adc
mov
inc
std
add
bound
xchg
ud2
sbb
mov
ss
xor
testb
sbb
jo
daa
add
lods
push
push
fdivs
xor
xor
test
outsb
sarl
pop
push
adc
sbb
xlat
je
aas
movsl
jno
add
inc
imul
lcall
repnz
sub
xchg
add
clc
inc
pop
mov
in
dec
movsl
mov
inc
fnsave
mov
jbe
outsl
cmp
outsl
repz
push
sub
dec
xchg
test
jmp
aaa
into
cmp
add
dec
xor
cwtl
adc
inc
mov
inc
dec
lret
sbb
dec
pop
push
mov
sub
xor
sbb
insb
adc
gs
mov
pop
adcb
in
pop
and
adc
inc
add
shrb
daa
fnsave
mov
fiaddl
cmp
push
xchg
dec
aad
leave
bound
mov
scas
mov
cli
push
into
test
test
mov
ror
add
add
stos
pop
xchg
ret
mov
and
ds
sbb
insb
dec
repnz
insl
sbb
or
pop
ficoms
sub
dec
in
or
pop
mov
mov
sub
inc
inc
orb
je
arpl
js
pop
movsb
mov
pop
psubsb
test
jge
push
std
sub
in
ret
xchg
lds
lods
subl
and
sub
mov
leave
pop
flds
or
sbb
push
ljmp
mov
sub
addr16
dec
iret
adc
pop
test
insb
in
or
jg
and
sbb
dec
fwait
mov
lds
testb
push
fstl
push
xor
xor
aas
sub
xchg
lods
int3
add
mov
fucomi
dec
stos
aad
sbb
sbb
cld
sub
and
dec
incl
outsb
ret
ljmp
fsubrl
nop
ds
cmp
mov
loope
sbb
sbb
sub
xor
ret
inc
pop
mov
inc
and
mov
or
cmc
imul
push
movl
push
mov
loop
aaa
mov
jne
std
pop
fldcw
fwait
sbb
mov
sti
mov
jmp
xor
jne
mov
mov
call
sbb
jmp
and
ret
jbe
rcl
sbb
mov
es
inc
lret
push
ja
sub
pop
fsubs
fdivs
sub
les
repnz
cs
aas
addr16
push
pop
and
imul
mov
outsb
in
lret
push
js
shll
lcall
loop
addr16
mov
push
pop
and
inc
popa
mov
pminsw
xchg
jle
dec
lods
fucomp
mov
push
out
push
mov
and
dec
sbb
adc
lret
lret
shl
xchg
mov
fstl
incl
jl
mov
ja
mov
cmp
mov
into
imul
test
and
int3
inc
icebp
test
cmpsb
in
cmp
test
or
stos
jl
xchg
xchg
push
jg
sub
in
and
rcrl
mov
jae
and
lret
ja
pushf
cmp
lcall
fwait
rcll
and
cmp
pop
incb
pop
imul
dec
jp
and
dec
js
xor
or
dec
mov
ror
or
loop
ja
rorb
xchg
or
dec
lea
mov
stos
pop
js
mov
sbb
pop
call
mov
jmp
cmp
daa
sub
pop
clc
je
loop
sbbb
faddl
sarb
and
int3
sub
movsb
xor
push
jge
enter
add
jp
pop
jge
xor
cmp
shr
xor
xorl
shll
stos
and
ss
jp
pop
es
add
pop
sub
adc
cwtl
je
mov
outsl
repz
cltd
xor
pop
sbb
pop
and
jno
push
test
mov
jecxz
mov
inc
lds
push
fwait
jmp
cmc
adc
mov
push
jne
jecxz
stos
push
addl
xchg
mov
aam
xchg
jo
loop
push
xchg
xchg
mov
dec
jecxz
sub
std
loop
adc
mov
je
fldl2t
xlat
dec
cmp
mov
add
mov
daa
adcl
mov
scas
movl
dec
mov
push
mov
enter
pushf
push
imul
lcall
mov
loopne
nop
ss
fsubrl
loope
sbb
test
es
pop
cs
inc
pusha
adc
subl
mov
ss
int
inc
sbb
out
dec
or
hlt
fucomp
pop
stc
jb
popa
xchg
fistpl
pop
push
xor
and
xor
int3
xchg
int
js
push
loopne
push
add
mov
push
push
popa
inc
bound
xor
icebp
and
pop
insl
push
fdivs
or
mov
cmp
mov
mov
sbb
pop
loopne
push
in
add
mov
stc
or
pop
or
lods
xor
push
fildll
cs
arpl
repz
jle
or
ss
aas
mov
xor
dec
mov
shl
imul
aas
iret
clc
push
ss
inc
xchg
cli
dec
adc
rcrl
das
int
in
jmp
stc
pop
arpl
movsb
das
sub
jnp
mov
mov
mov
or
inc
lds
imul
mov
sub
stos
add
xor
adc
inc
add
lods
scas
adc
mov
inc
fistpll
dec
mov
sahf
call
pusha
cmp
fwait
jmp
or
add
inc
insb
test
pusha
mov
xlat
and
add
push
and
fs
lea
inc
sbb
in
sub
cmc
jle
imul
fcmovnb
outsb
push
pop
lds
fstps
andb
daa
xchg
mov
mov
cmp
imul
add
sbb
mov
andl
in
loope
out
jl
cltd
outsb
in
stos
mov
pop
test
test
mov
xchg
mov
xor
xor
jmp
rolb
sbb
and
dec
stos
xlat
loopne
and
sub
pop
mov
inc
jecxz
jg
fwait
xchg
sbb
push
adc
inc
pushf
orl
arpl
mov
daa
xor
lods
and
and
pop
adc
sbb
pop
push
stos
adc
inc
push
repz
and
add
das
sub
in
sahf
mov
movsb
int3
sub
orl
jp
xor
dec
movsb
addb
daa
xchg
sub
cmpsb
rep
sub
mov
jle
sub
decl
push
mov
adc
jb
lds
enter
cmpxchg
sti
lods
mov
pop
jbe
mov
xchg
imul
leave
int
hlt
cli
test
mov
xchg
lcall
cmpsb
sbb
xchg
mov
push
adc
scas
out
push
rolb
arpl
cmp
xchg
jo
push
jo
jp
sub
into
push
pop
mov
push
ljmp
push
or
fiaddl
fadd
pop
push
sahf
das
pop
ja
dec
mov
punpckhdq
mov
in
mov
lods
and
push
dec
pop
mov
adc
lds
adc
scas
imul
mov
add
xchg
mov
mov
or
imul
sbb
fistps
mov
nop
pop
cmpl
pusha
cld
call
xor
xor
lret
lcall
jp
in
dec
xchg
jmp
push
pop
xor
fsubp
adc
and
shlb
xchg
cltd
mov
jb
adc
dec
xor
sub
lret
sbb
mov
and
sbb
xchg
cmp
mov
xor
jg
or
sub
outsb
push
xor
mov
loope
mov
push
or
lcall
ds
add
add
rcpps
jmp
mov
sti
and
gs
push
pop
je
addl
lea
jno
ljmp
dec
mov
lret
xchg
repz
sbb
xchg
out
shufps
dec
inc
jb
adc
ds
pop
and
dec
js
jg
lret
jb
xor
mov
out
cmp
dec
pop
sub
fwait
and
cmp
dec
sbb
sbb
enter
imul
je
xor
clc
movsl
lret
push
aad
ficomps
mov
jb
cmpsl
loop
dec
or
sbb
push
jnp
and
stos
enter
sti
jecxz
aad
shll
cmp
fidivrl
sub
xor
dec
outsl
jno
es
mov
mov
push
jl
jg
mov
add
fmulp
jmp
push
cmpsl
adc
imul
pop
inc
cmp
rcl
call
sbb
adc
cmp
dec
imul
repnz
xor
push
or
or
pop
push
and
and
out
in
jae
pop
dec
stos
xchg
sahf
lcall
leave
orl
cmpsl
dec
inc
mov
movsb
out
lahf
sar
imul
fildl
push
fsts
mov
je
andb
jp
inc
outsb
or
pop
loop
cmp
mov
push
mov
ds
loope
push
or
andl
aad
sbb
jg
outsb
fs
jl
fcmovnbe
stos
jae
cmpsl
and
pop
sub
mov
inc
filds
or
xlat
jae
xchg
out
pop
jg
add
into
daa
mov
sti
out
mov
sub
fsubrl
ss
enter
push
sub
mov
les
push
loope
xor
out
jg
sub
insb
mov
data16
test
inc
lds
cs
push
add
movsl
jl
adc
sahf
mov
xor
icebp
enter
ja
cltd
int
mov
dec
out
aaa
xchg
push
rorb
mov
lahf
jge
arpl
clc
xor
mov
and
lds
push
inc
rcrb
divl
mov
stos
leave
mov
xchg
jp
and
push
or
mov
mov
push
outsb
mov
ja
fs
add
xor
das
or
pop
adc
xchg
jae
mov
inc
stos
jmp
add
fildl
fdivr
std
mov
or
cmp
push
cmp
in
dec
cmpsb
jae
addr16
rclb
xor
dec
mov
inc
sbb
sahf
lahf
dec
cmovb
clc
test
or
add
aas
out
xchg
sub
adc
loopne
mov
stos
push
sbb
sarb
and
sti
icebp
inc
stos
jmp
pop
pop
pop
sbbl
mov
fs
jnp
sbb
mov
jecxz
pop
push
inc
ficomps
in
test
lcall
mov
jp
mov
mov
fdivrs
adc
repz
or
mov
mov
divb
mov
sub
sbb
inc
fxam
outsb
dec
jns
push
mov
lret
hlt
sub
int
adc
pop
jle
loopne
pop
cmc
cmp
sub
adc
stc
fildl
push
and
test
into
filds
xor
push
sahf
cmc
push
push
std
je
or
jnp
mov
inc
mov
jo
outsb
adc
leave
je
out
jo
xor
test
mov
dec
mov
jo
orb
xor
mov
add
call
mov
push
lods
nop
xbegin
cmpsl
fisubrl
sbb
int3
loopne
mov
jle
das
fstpt
dec
sbb
dec
lds
add
movsl
int3
repz
add
popf
mov
std
push
dec
jecxz
and
stos
xchg
push
imul
loope
adc
xlat
cmp
lcall
fstps
jo
out
and
std
xlat
sbb
aad
push
iret
xor
mov
and
or
lock
or
aam
mov
mov
outsl
addb
jmp
mov
jns
sub
in
arpl
hlt
xchg
add
test
jns
stos
out
or
jecxz
popf
andb
aas
cltd
jmp
idivb
inc
jbe
mov
ja
and
iret
mov
xchg
mov
push
dec
lock
std
lcall
rcll
mov
insl
cmp
clc
lea
pop
dec
enter
mov
insl
pop
test
loopne
daa
push
and
insb
rcrl
mov
pop
sub
lock
call
lret
pxor
nop
mov
cmp
inc
inc
test
push
xchg
add
inc
dec
rolb
dec
rcll
dec
mov
add
test
mov
out
xchg
sbb
cmp
jmp
data16
stc
and
xor
xor
adc
cld
lods
imul
xchg
sahf
pop
fwait
fs
stos
mov
mov
mov
into
mov
lods
ret
es
jb
shlb
shl
popa
push
xor
dec
add
jmp
mov
sbb
cmp
dec
pusha
push
dec
test
push
sbb
mov
and
jb
loope
pop
adc
loop
fcmovnu
pushf
std
and
cli
pop
insb
xchg
dec
push
pusha
dec
cmpb
xchg
incl
mov
imul
loope
repz
mov
mov
push
dec
jb
push
call
jmp
inc
jge
pop
dec
fs
add
cld
popf
mov
pop
test
shlb
xchg
xor
in
add
cmp
or
es
pop
jmp
daa
lret
sub
xchg
ret
out
popa
das
dec
sbb
jg
jmp
mov
pushf
cli
hlt
cli
hlt
pop
stos
incl
jecxz
push
mov
dec
push
test
jb
scas
jae
mov
push
and
insl
inc
loope
lret
out
enter
stos
imul
ds
or
jne
sub
dec
xacquire
jnp
mov
pop
cmp
xchg
sbb
add
sub
sub
cwtl
mov
jo
ljmp
repnz
fldcw
pop
mov
jp
fld
mov
in
xlat
pop
xor
inc
ljmp
loope
popa
ja
sbb
cmp
and
in
push
imul
sti
push
jg
gs
adc
sbb
add
xchg
or
mov
es
push
popa
cmc
xchg
test
and
arpl
cltd
mov
loope
push
cld
mov
hlt
push
mov
add
popa
rcll
lret
pop
fldcw
or
xchg
sbb
stc
pop
mov
sub
pop
fmull
clc
and
int
js
lcall
pop
pop
adc
fcmovu
test
push
push
js
ret
xchg
fdivl
fs
sub
imul
in
cld
add
dec
sub
in
mov
mov
jl
decl
ja
adc
inc
loope
ss
aaa
jnp
or
loopne
mov
negl
push
add
mov
nop
stos
fsub
js
movsb
lds
sub
add
push
mov
push
inc
pop
and
popa
cmp
push
pop
add
lods
push
push
ret
xlat
add
xor
arpl
mov
sub
in
adc
loopne
dec
jle
in
fwait
gs
adc
ja
test
or
mov
call
insb
es
ret
push
gs
or
mov
popa
lea
pop
popf
mov
jbe
notl
pop
xor
cmp
ret
mov
hlt
push
outsb
fnstcw
dec
sarb
les
sub
cmp
jb
jle
push
adc
mov
jge
cmp
xlat
dec
sub
sub
push
test
pop
gs
push
push
mov
pop
les
cmp
lods
jb
call
popf
aaa
dec
js
push
push
lock
pop
jbe
stos
das
dec
xor
out
mov
xor
lds
xchg
adc
scas
pop
or
adc
jne
sti
adc
jg
xor
inc
arpl
sub
mov
adc
cmpsb
adc
inc
push
or
add
add
or
jecxz
mov
dec
fisubrl
push
xchg
test
inc
add
jge
pop
pop
out
imull
pop
dec
in
fisubs
in
push
cmp
jge
xchg
ljmp
notb
pop
push
gs
add
inc
push
lea
scas
sub
or
and
push
into
mov
and
testl
je
sub
dec
dec
xchg
cwtl
mov
jg
push
aas
rolb
xchg
xor
push
rcrl
scas
mov
or
leave
dec
clc
xor
pop
jne
filds
arpl
mov
pop
mov
lret
pusha
xchg
cs
dec
shlb
pop
lret
jecxz
stc
lret
xchg
xor
mov
xor
cwtl
add
adc
fdivs
cmp
int3
scas
lret
sbb
mov
sti
enter
in
xchg
movsb
push
aaa
orb
mov
jmp
cmpl
flds
inc
out
fsts
shr
push
ja
mov
dec
and
leave
cmp
jae
and
push
push
sbb
pop
movsb
repz
call
xchg
mov
xor
lods
ret
sbb
test
ljmp
lahf
in
aad
cld
cwtl
ret
fcoms
inc
xchg
ret
sub
or
fs
and
adcl
loope
cs
pop
test
push
imul
adc
mov
jbe
push
adc
xor
fwait
stos
sub
add
xchg
sbb
dec
push
popf
adc
das
lods
call
push
push
sbb
fsubr
js
gs
push
int3
cs
jo
mov
xchg
mov
sub
lret
pusha
push
mov
pushf
rclb
iret
gs
add
shrb
gs
jo
sahf
push
mov
pusha
je
outsl
hlt
rclb
and
out
not
call
clc
roll
jge
cwtl
cmp
pop
enter
xor
test
dec
mov
mov
sub
fs
ret
in
cmc
fsts
les
or
push
push
test
cwtl
mov
lret
or
inc
je
out
and
dec
mov
dec
fstpt
xorb
scas
cs
inc
pop
data16
jle
cmp
int3
dec
adc
cmc
jns
repz
mov
and
aad
add
pop
in
insl
xor
mov
repnz
ja
jl
jg
fcompl
dec
mov
mov
adc
push
inc
push
addr16
mov
adc
mov
push
mov
sub
sub
frstor
aad
fcmovnb
imul
xor
jg
xchg
notl
sub
jns
test
clc
popf
inc
popl
ja
mov
sbb
out
xorb
xor
adc
inc
cmpsl
js
jbe
ja
jp
in
hlt
mov
sbb
out
hlt
inc
je
pushf
push
mov
xor
or
pop
dec
movb
arpl
pop
mov
movsb
call
ret
adc
imulb
add
inc
or
mov
movsl
inc
cmp
mov
adc
add
push
loope
sub
mov
and
cmpsb
adc
adc
mov
xlat
cmp
mull
test
mov
mov
xchg
xchg
int
add
in
aas
adc
pop
or
mov
ds
mov
je
cmp
loopne
mov
jno
add
in
shrl
cs
sbb
in
stos
xchg
addr16
sahf
inc
jge
cwtl
sbbl
dec
ds
aam
jl
jbe
enter
xor
or
cwtl
or
push
xchg
sti
mov
inc
and
lods
cmpsb
or
into
jge
mov
inc
mov
imul
mov
xlat
stc
sbb
push
sub
sbb
add
addr16
push
mov
or
sbb
xor
ja
andb
sub
pop
mov
mov
jo
dec
mov
test
arpl
and
mov
js
gs
ret
incl
dec
rorl
sbb
movsl
push
inc
sbb
adc
add
lock
loopne
adc
inc
push
enter
jmp
inc
out
xor
add
ds
scas
pop
pop
jae
idivl
pop
jg
dec
iret
ret
insb
dec
mov
out
aam
pop
add
xchg
mov
sub
cs
cmp
cmpsl
dec
ret
cld
cli
push
jo
jb
dec
push
aas
pushf
rol
pop
js
loop
jae
xchg
mov
xor
dec
scas
mov
das
mov
mov
adc
sub
fnstsw
cmpsb
jnp
loop
jae
loopne
mov
outsl
xchg
rorl
testb
dec
or
leave
aaa
imul
cmp
or
ret
nop
lods
cmp
xor
loopne
dec
out
fs
jmp
test
ss
mov
or
out
icebp
cmp
jmp
mov
imul
mov
lahf
jmp
scas
aam
mov
cs
iret
xchg
add
daa
jns
bound
cmpsb
lret
pop
in
inc
mov
clc
xor
outsb
fidivrl
stos
or
inc
jecxz
aam
outsb
xor
ss
test
xchg
addr16
outsb
rorl
out
repnz
xor
sbb
pop
loop
leave
cmp
ret
bound
jg
mov
out
dec
cmpb
adcl
cmp
gs
mov
cmc
mov
cltd
mov
mov
pop
jns
xor
loop
imul
xlat
add
push
or
pop
mov
insl
pusha
inc
xor
leave
xor
dec
xchg
xchg
addr16
lret
movsb
icebp
mov
lods
leave
push
or
gs
jl
mov
fbstp
imul
push
data16
inc
adc
nop
clc
fsubrl
inc
xchg
mov
cmpsl
mov
aaa
sub
loope
xchg
mov
outsl
add
sbb
ret
out
or
daa
pop
push
cmpsl
fdivrs
lock
sub
ret
push
sbb
mov
push
or
xchg
insb
bound
sbb
push
jnp
rcrl
cli
es
xchg
cmpsl
mov
xchg
imul
sbb
mov
dec
jns
push
dec
dec
icebp
dec
inc
and
popa
xchg
jns
imul
mov
loop
add
xlat
or
xchg
push
and
mov
fistps
test
test
pop
test
or
jmp
adc
push
mov
push
popf
push
rorl
xor
test
popf
cmp
incl
fdiv
das
pop
inc
popf
sbb
fmuls
addr16
scas
cmpsb
adc
test
adc
mov
pop
sub
movsb
lds
mov
rorl
fistpl
daa
loopne
dec
arpl
out
lcall
arpl
jo
popf
daa
mov
cmp
test
negb
inc
movsb
or
cmp
clc
xor
or
adc
shl
and
sahf
test
ljmp
or
sub
insb
ljmp
sti
cs
push
out
adc
or
jle
in
dec
pop
repz
add
sub
cmpsl
inc
sub
stos
xchg
pop
movsb
icebp
mov
add
mov
dec
cmpsl
cmp
sub
jecxz
iret
rol
adc
cmp
jae
subb
daa
add
lahf
sbb
push
mov
jecxz
popf
iret
call
pop
sbb
das
pop
mov
xchg
subb
imul
ret
mov
out
push
dec
sbb
sti
cli
dec
mov
test
xchg
out
cmp
in
ret
lock
vphadduwd
push
pop
mov
sbb
pop
enter
inc
mov
fdivs
ja
sbb
mov
pop
andb
cltd
push
roll
push
add
jecxz
inc
insl
mov
sti
mov
popf
mov
fs
or
pop
inc
fldl
in
adc
dec
sahf
aas
jno
decl
or
inc
imul
stos
xchg
call
fcomps
out
loope
lahf
popa
bound
jle
xor
pusha
mov
aas
hlt
repnz
xor
sahf
insb
lcall
sbb
daa
pop
sub
sahf
pop
bnd
mov
dec
mov
mov
cmp
sub
sbb
cmpsl
shlb
gs
push
push
js
add
and
or
dec
xchg
jno
movsb
pop
aaa
out
scas
xor
xor
sar
pop
xor
scas
inc
lds
add
int
jl
mov
inc
xchg
xor
mov
cltd
mov
cltd
imul
shl
stos
sahf
ss
cmp
icebp
ret
outsb
shl
jp
mov
fstl
loope
sahf
mov
ljmp
adcl
int3
test
and
dec
jb
jg
mov
lds
bound
stos
cmp
push
jl
dec
shll
cltd
pop
es
mov
in
mov
add
inc
mov
call
mov
dec
mov
mov
cmp
arpl
dec
adc
call
fdivp
inc
or
ret
pusha
andl
jb
fiadds
add
jp
fs
loop
cmp
mov
out
movsl
stc
push
add
ret
jne
mov
insb
andl
mov
arpl
mov
push
test
xchg
pop
xchg
sub
cwtl
fwait
icebp
dec
cmovno
lahf
test
in
das
jl
push
iret
mov
jnp
mov
pop
ffreep
mov
sahf
mov
jmp
shll
sub
jns
mov
pop
adc
std
mov
movsb
bnd
nop
iret
inc
fistpll
xchg
int
jmp
inc
dec
fs
ret
cwtl
shrd
addr16
inc
cs
xlat
mov
mov
jp
xor
pop
cltd
fwait
lahf
pushf
call
lret
clc
aas
mov
pusha
cmp
xchg
dec
dec
adc
push
xchg
mov
push
arpl
scas
stc
lcall
jmp
mov
xchg
add
and
mov
xor
dec
mov
push
fistpl
adc
pop
jae
mov
mov
scas
xchg
or
repnz
cmp
mov
pusha
cmp
and
lea
push
pop
repz
iret
sbb
lret
xor
and
lds
adc
mov
andb
and
jle
inc
xlat
out
mov
data16
test
or
cmpl
lods
jae
cwtl
shr
push
inc
sbb
push
test
or
arpl
into
jb
ja
mov
dec
in
je
inc
dec
mov
std
fisubs
adc
inc
fisttpl
mov
push
sahf
fs
jecxz
hlt
fbstp
inc
dec
jle
jae
and
mov
jo
pop
mov
sbb
scas
aas
cmpsl
insb
push
push
adc
jmp
pop
pop
arpl
jno
cmp
stos
push
call
cli
fs
push
ds
pusha
imull
and
hlt
movb
aas
sbb
pop
cmp
nop
sbb
sahf
in
pop
int3
and
xor
cmpsl
and
push
cli
pop
inc
cmpsb
pop
add
stos
xchg
lods
push
jno
cli
sub
lret
dec
in
xchg
xchg
ret
gs
leave
fldcw
ds
dec
addl
add
movsb
test
jnp
mov
dec
and
mov
adc
add
push
cltd
sbb
dec
pop
jbe
lret
lock
pop
sub
call
jp
ja
into
popa
or
push
pop
rorl
push
int
pop
shll
dec
dec
push
insb
push
aaa
inc
lock
mov
and
inc
push
fwait
jmp
repnz
aaa
ja
daa
dec
dec
xchg
jnp
inc
repnz
andl
jae
andb
or
test
mov
or
xchg
dec
xor
mov
mov
push
ror
loope
and
repnz
aas
or
pop
imul
add
rorl
cltd
sub
stc
insl
mov
lret
aaa
add
or
push
shlb
dec
lcall
push
fsts
sub
out
ss
das
in
divl
sub
mov
jle
adc
and
js
ret
push
jg
inc
mov
adc
inc
jle
dec
jne
lret
push
xchg
push
xchg
push
pop
data16
sbbl
mov
in
sub
mov
jmp
cmc
sahf
aam
aam
rcrb
fimull
jb
cwtl
mov
push
push
rcrl
cmp
and
hlt
mov
jo
idivb
adc
rolb
popf
mov
dec
xchg
std
je
mov
mov
cltd
imul
xchg
ret
cmpsb
pop
les
push
aam
aaa
adc
jo
pop
pop
test
push
or
shrb
dec
lea
or
divb
jbe,pt
cmp
cmpsl
add
push
push
arpl
sub
popf
fadds
add
pop
xlat
xchg
sbb
mov
mov
inc
imul
xchg
ret
aas
xor
out
pop
loopne
pushf
inc
add
xchg
clc
arpl
push
mov
xchg
idiv
iret
repz
mov
sbb
sub
or
jbe
pop
bound
dec
jbe
loope
dec
pop
mov
cmp
in
mov
loop
test
arpl
mov
outsl
cli
fwait
push
push
pop
dec
aaa
aaa
mov
xchg
adc
inc
test
pop
frstor
inc
movsl
dec
movsl
inc
xor
pusha
mov
es
repnz
add
jg
xor
outsb
in
push
mov
ror
scas
push
inc
mov
out
add
jbe
leave
dec
or
jne
lods
lahf
xor
insl
push
cmpxchg
cmp
jns
cmc
fs
imul
clc
pop
xchg
push
cmovge
sbb
movsl
sub
loop
dec
shlb
inc
jmp
or
sti
dec
cltd
mov
mov
or
repz
adc
pop
psllq
cwtl
dec
pop
pushf
push
dec
cmp
mov
rolb
inc
dec
es
loop
mov
das
test
xchg
cmpsl
jmp
mov
mov
mov
stos
pop
xchg
das
fisttpll
xchg
jns
sbb
ljmp
popa
adc
mov
rolb
jmp
add
add
xchg
mov
pop
pushl
test
andb
mov
jmp
imul
cld
daa
pusha
fists
adc
push
mov
std
sub
mov
inc
cli
scas
pop
icebp
subl
nop
inc
sbb
fcoml
aas
or
pop
sbb
in
push
sbb
mov
sti
cli
sahf
mov
push
jle
in
leave
sub
ljmp
lods
cli
sahf
lods
call
cmp
push
jecxz
xor
pop
incb
int
jno
push
outsb
mov
mov
and
out
dec
mov
scas
dec
xor
arpl
js
lods
dec
pop
das
loop
or
in
pop
leave
jle
fcmovne
addb
testl
mov
addl
mov
or
rolb
jmp
jnp
jg
sub
mov
ljmp
mov
std
mov
mov
enter
das
mov
sarl
mov
adc
fucomip
or
jmp
pop
sub
dec
insl
add
sub
repz
in
xor
sub
mov
or
push
sub
inc
pop
lds
out
mulb
outsb
das
or
pop
mov
call
std
and
mov
push
or
and
jbe
imul
xchg
lods
enter
pusha
adc
inc
loope
les
into
sbb
inc
push
sti
loopne
xchg
mov
xchg
bnd
leave
lds
loop
in
daa
insb
add
test
movb
scas
dec
scas
loopne
mov
dec
mov
jecxz
mov
ja
xchg
cmpsl
xor
andb
xor
insb
inc
test
mov
sub
push
lock
stos
or
or
cmp
fwait
and
push
lods
jp
imul
xchg
rorl
scas
je
and
pop
outsb
mov
pop
fldt
repnz
mov
lods
add
popf
addr16
shrl
pop
push
lock
roll
sahf
pop
movsb
aas
iret
mov
mov
add
mov
adc
xchg
xchg
add
popa
repnz
loopne
aad
cs
andl
shrb
mov
fnsave
adc
xor
mov
test
mov
rep
xor
cmpsb
xchg
push
dec
bound
push
xchg
test
mov
dec
cmpsb
sub
push
ljmp
xor
sbb
sub
test
fistpll
mov
xchg
cmp
jb
sbb
cwtl
cld
sbb
mov
incb
mov
icebp
mov
movsb
popf
imul
pushf
lds
adc
dec
add
inc
sahf
int
inc
daa
js
or
lea
outsl
add
cmp
mov
inc
cltd
enter
dec
mov
inc
ds
stc
push
addb
add
adc
sarl
mov
lahf
sti
repz
mov
icebp
and
jecxz
pop
sbb
roll
jae
or
sub
cmc
outsb
dec
jbe
mov
sub
hlt
les
lods
cld
mov
xchg
cmpl
dec
aam
stc
mov
pop
imul
mov
aad
aad
xor
clc
xor
jmp
js
xchg
int
and
enter
jmp
adc
test
xlat
rorb
push
daa
adc
push
inc
jg
mov
bound
xor
mov
daa
pop
lea
mov
xchg
pop
data16
fwait
in
imul
test
imul
aas
div
xchg
inc
and
sbb
pop
or
mov
icebp
jle
int3
fs
iret
add
adc
fimull
daa
push
icebp
outsl
inc
cmpsb
xor
jne
lahf
push
mov
mov
mov
lea
fwait
lahf
shll
mov
nop
popa
or
mov
cmpsl
inc
ficompl
outsb
xchg
stc
adc
lahf
add
add
and
xor
fildl
mov
or
jl
call
rolb
adc
add
gs
cmc
xor
inc
inc
dec
imull
sub
fs
push
and
cmp
inc
loope
xor
jns
add
outsl
xor
sbb
and
xor
es
hlt
roll
fsts
xlat
adc
repz
xor
insb
jmp
cmp
fwait
bound
xor
icebp
mov
in
mov
sbb
sub
insb
pushw
rol
jecxz
add
ficoms
xlat
pop
sbb
lds
pop
lret
sub
loop
or
lret
cmp
cmp
mov
out
je
scas
lahf
push
dec
xchg
inc
inc
mov
push
mov
xchg
add
mov
lds
lds
push
pop
negl
scas
xchg
jns
fimuls
frstor
mov
sarb
insl
out
out
ja
outsl
lret
mov
lock
xor
adc
out
inc
cmc
push
clc
ffree
in
push
hlt
mov
das
dec
inc
mov
enter
leave
sbb
fsin
dec
xchg
dec
adcb
cmc
mov
and
inc
dec
ret
movsb
mov
movsb
and
xchg
filds
mov
or
push
out
push
add
sbb
fisubl
popa
sbb
loop
dec
mov
jbe
jmp
add
xor
call
fsubl
add
fdivs
push
mov
xor
mulps
pop
aaa
pmaxsw
mov
mov
test
testb
push
es
mov
push
les
jo
test
or
dec
cmp
lods
arpl
sbb
mov
fwait
lods
iret
xor
int
xchg
sbb
xchg
aaa
jns
cltd
mov
aad
jl
daa
fidivl
test
jg
and
xchg
aaa
or
push
mov
int
cmpsb
test
nop
push
lcall
in
push
test
mov
pop
lret
int3
pop
mov
jecxz
hlt
loopne
ljmp
sbb
aad
add
inc
lods
adc
lcall
andb
adc
or
and
dec
aas
jo
dec
ret
repnz
cld
adc
sbb
in
pusha
pop
outsb
cmp
jp
dec
call
nop
out
in
out
sbb
xor
mov
stos
xor
jecxz
icebp
ret
mov
mov
dec
pushf
out
jbe
orb
fs
or
mov
pop
movsl
push
mov
ret
shrb
cld
cmpsb
sarl
aam
enter
mov
cmp
lds
mov
mov
inc
xor
sbb
push
jg
popf
mov
sub
xor
lock
add
xlat
inc
push
mov
sti
cld
out
test
aaa
xor
lret
cltd
jbe
hlt
mov
ja
in
mov
in
lock
hlt
jne
out
mov
add
aas
mov
sbb
or
test
jo
fcmovnb
cltd
out
cmp
dec
push
xchg
sbb
or
jb
pop
decl
pop
in
sub
jl
xchg
lock
xchg
test
bswap
and
inc
fld
cmp
or
sbb
and
xchg
sub
inc
cmpsl
bound
push
inc
pusha
add
ret
or
jne
mov
js
xor
lcall
mov
jp
rcl
rorl
outsb
xchg
push
mov
or
inc
mov
shrb
mov
xlat
sub
xchg
loopne
adc
mov
sbb
pop
decb
lods
aaa
adc
cmc
dec
mov
xchg
sahf
add
mov
mov
xchg
mov
sbbw
inc
push
fsubrs
adc
pop
fildl
and
popf
fcompl
xor
out
and
cld
xor
ss
mov
mov
cmp
mov
fcomp
xchg
dec
mov
xchg
into
sti
mov
or
lret
and
repz
or
push
push
enter
pop
rcrb
add
pop
xchg
addl
sub
iret
ret
adc
fs
and
lock
cld
filds
in
ret
scas
mov
pusha
add
pop
jbe
add
sti
dec
sub
mov
cmp
xlat
add
pushl
in
push
in
xor
adc
rcrl
or
add
das
fmull
fisubrl
das
push
fadd
mov
push
mov
decb
pop
and
or
and
shrb
or
out
push
lret
add
mov
jl
mov
cmp
lea
imul
cmp
pushf
lods
push
dec
out
push
jp
test
cmp
rorb
icebp
dec
and
aaa
xor
insb
jns
insl
inc
test
in
cmp
adc
inc
cmpsb
les
fmull
data16
out
movsb
and
adc
xlat
js
leave
sub
sub
ror
pop
iret
lcall
std
bswap
cs
and
mov
iret
and
push
lahf
push
int3
imul
sub
xchg
push
jmp
fwait
imul
push
xchg
and
pusha
mov
add
lahf
out
lret
adc
push
cmp
pop
xchg
push
icebp
sub
mov
jg
loopne
test
sbb
cmp
arpl
fimuls
mov
fwait
add
movsl
or
pop
push
stos
and
mov
int
or
mov
pop
pop
mov
mov
aad
pop
jbe
push
pushf
call
add
cmpb
stos
andb
mov
add
sub
je
sbb
cmc
and
push
cmpsl
or
pushf
jae
push
jg
insl
in
jns
pushf
stos
insl
loop
sbb
div
sub
ret
inc
push
push
movsb
repnz
ror
adc
das
loopne
lret
arpl
ret
scas
jecxz
fwait
scas
mov
loopne
dec
invd
or
push
adc
lcall
sbb
xlat
out
in
mov
idivb
loope
add
test
rolb
jmp
mov
aas
mov
push
xchg
jno
fisubs
out
dec
xchg
jecxz
jbe
push
push
pop
mov
addl
mov
or
push
add
ss
cmpsb
lret
sub
mov
sub
jmp
cmpsl
mov
and
fdivp
push
dec
outsb
mov
test
mov
out
and
mov
out
loop
xchg
inc
mov
mov
xchg
movsl
jne
call
xchg
pop
push
repnz
inc
push
push
xchg
add
jp
jae
or
seto
loopne
sbb
jp
mov
fbstp
faddp
add
xchg
sti
inc
xor
mov
mov
xor
test
cmpsb
mov
push
adc
mov
pop
mov
xor
dec
lret
leave
pop
in
mov
test
cli
dec
ret
pop
and
in
stc
fnstcw
cltd
rolb
ss
gs
cli
out
je
imul
sbb
mov
cli
adc
jbe
adc
xor
jecxz
aaa
sahf
pop
addr16
cld
sbb
movsb
mov
repnz
and
xchg
icebp
jo
je
mov
mov
mov
xor
shrl
gs
js
mov
mov
out
xor
dec
out
cpuid
push
shll
jle
dec
jecxz
mov
aaa
sarl
jo
pop
push
fs
inc
sub
addb
xor
dec
pushf
js
or
pop
in
ret
mov
test
mov
mov
push
jbe
pop
mov
add
movsb
cmp
jnp
clc
pushf
mov
mov
adc
cld
out
inc
adc
bswap
in
inc
stc
in
add
in
inc
push
les
mov
cld
cmpsl
pop
jl
pop
mov
jmp
int
inc
push
in
arpl
sub
inc
mov
ss
sbb
xchg
fstpl
pop
in
jb
mov
dec
jnp
xchg
and
test
aas
dec
dec
imul
jb
mov
fidivrs
mov
jecxz
pop
fstpl
movsl
mov
ss
ja
movsl
call
les
and
xor
in
xor
addl
push
mov
adc
sbb
add
aad
inc
mov
test
test
jecxz
inc
call
inc
test
push
add
cmp
lods
sbb
mov
shl
and
imul
sbb
adc
addl
ret
ret
mov
push
sbb
divb
lds
es
fcmove
jae
xor
out
push
jns
dec
mov
dec
iret
cmp
ret
sbb
cld
sbb
adc
adcl
fldl
mov
jmp
arpl
xor
pop
clc
add
cmp
cmpsl
push
rorb
mov
pushf
xchg
out
in
xchg
xor
inc
xchg
outsl
aas
cmc
mov
pop
push
jno
jns
or
mov
sbb
dec
jbe
xor
cli
pushf
cmp
push
hlt
and
jecxz
inc
jb
inc
cmp
stos
and
and
push
add
ja
adc
cmpsl
lods
mov
dec
mov
stos
shr
sbb
fs
lret
cli
cmp
adcb
dec
data16
aad
sti
insb
mov
popf
inc
js
cli
sub
insl
sbb
adc
ljmp
and
add
test
shll
mov
outsl
ljmp
ret
rorb
mov
inc
sti
movsl
push
push
cmp
out
icebp
push
roll
mov
lahf
flds
sub
jl
jge
out
stc
movsb
addr16
jmp
xor
cmp
add
repnz
push
jl
loope
jns
stos
sub
test
sbb
leave
cwtl
in
pop
pop
js
jno
insl
xchg
repnz
pop
aad
outsl
ljmp
jp
push
push
lock
imul
imul
cld
sub
mov
or
js
mov
pop
adc
pop
adc
int3
stos
cwtl
xor
dec
addl
pushf
data16
rol
cmp
xor
and
and
push
mov
sub
sti
or
and
or
imul
fmuls
cmp
add
rclb
and
hlt
mov
mov
push
pop
jns
xchg
mov
stos
loop
xor
pop
and
dec
mov
ljmp
shl
lock
sbb
jne
mov
xor
and
cmp
or
mov
fnstcw
push
gs
dec
adc
dec
ss
sub
mov
jae
ja
push
ja
cmp
sub
inc
pop
mov
imul
outsb
out
pop
rcrb
clc
ret
dec
mov
loop
add
lea
fiadds
xlat
std
mov
mov
gs
lods
mov
mov
shl
movsl
adc
lret
add
fwait
lea
mov
scas
jle
hlt
scas
cmp
sbb
pop
adc
call
movb
mov
cld
je
sub
mov
push
inc
dec
push
fimull
or
inc
rorl
shll
test
mov
lcall
andb
push
leave
dec
xor
ficomps
adc
loopne
jb
or
lea
mov
lods
lret
add
sti
clc
push
push
jmp
add
jnp
pop
or
loop
sub
sarb
aam
out
pop
sub
pop
push
jl
cwtl
jne
fs
jg
adc
test
hlt
push
mov
add
or
sti
lods
ficompl
and
push
push
or
mov
cli
repz
outsb
mov
and
cmpsb
gs
sub
push
pop
aad
test
lcall
inc
jae
pop
sbb
lahf
in
push
jge
cmpsb
sbb
test
xchg
mov
pop
sbb
mov
addb
insb
mov
xor
decl
mov
cs
shrl
jno
and
mov
xchg
test
pop
push
cli
sbb
pop
fisttps
push
cmpsb
pop
dec
stos
ja
sub
push
pushf
inc
in
jg
xchg
lret
jmp
fdivr
lahf
repnz
mov
fiaddl
inc
pop
add
sub
scas
push
les
and
insb
ret
mov
add
xchg
pushl
lahf
ds
hlt
je
push
mov
and
int3
js
add
negl
call
imul
sbb
push
fiaddl
jne
cmpsl
lods
xchg
outsb
jae
ss
stos
inc
dec
je
lret
lahf
movsl
ret
xchg
repnz
sahf
in
jl
insl
sbb
inc
pop
loopne
mov
lea
aas
mov
loopne
test
imul
add
jg
cmpsb
xlat
arpl
xor
pushl
xchg
sbb
leavew
sti
imul
out
les
in
int3
loopne
repnz
lds
imulb
mov
ljmp
cltd
adc
inc
aaa
aad
pop
lcall
rorb
sub
jmp
fldenv
cmp
pop
dec
pop
and
imul
mov
cmp
inc
arpl
shll
js
in
lret
and
jo
inc
lock
jmp
cmpsl
enter
ss
sub
dec
data16
push
adc
xchg
and
movsl
pop
adc
lods
sbb
and
daa
out
jne
sub
sbb
cmp
cmpl
inc
inc
mov
fildl
pop
pop
in
dec
jno
sar
dec
mov
cmp
xchg
int
ss
rclb
mov
or
xchg
hlt
mov
sbb
shrb
sbb
sub
push
mov
sarl
push
aas
xor
add
xchg
pushf
je
daa
cmpsl
mov
sub
adc
mov
lods
adc
jg
cmc
addr16
fsubrp
pop
cmp
xchg
shll
nop/reserved
dec
ret
cs
dec
cmp
sub
icebp
ljmp
sbb
es
jne
loop
add
sbb
mov
pushf
icebp
nop
mov
xor
cmpsl
or
xlat
lea
dec
xor
pop
sti
and
loop
adc
add
add
xchg
or
js
jecxz
ds
in
jb
jp
lds
shll
outsb
mov
bts
rcll
or
aad
cmpsl
jne
adc
ss
adc
sbb
sub
dec
mov
cmc
or
xorb
mov
loope
scas
cmp
mov
insl
sti
and
sbb
mov
lret
mov
mov
sub
mov
and
push
pop
stc
xchg
add
or
push
iret
sbbb
test
cld
push
dec
cs
mov
jno
xchg
adc
flds
jae
das
nop
cmp
xchg
mov
test
mov
aad
pusha
movsb
pushf
lods
push
inc
xchg
xchg
enter
cwtl
and
or
sub
fistpll
cmpsb
cmovns
arpl
insl
movswl
push
sbb
rclb
sub
nop
into
rcrl
sub
pusha
xchg
and
jb
fldt
jl
ficompl
ja
bound
pop
and
imul
fadds
mov
mov
xchg
push
jmp
mov
out
sbb
push
fimull
aas
mov
push
loope
lret
cld
dec
lods
out
mov
repz
mov
push
ljmp
test
inc
sbb
dec
mov
and
mov
sub
test
xchg
push
mov
or
push
xchg
cld
adc
iret
shrb
push
cld
mov
mov
das
pushf
add
or
out
insl
xor
cmp
mov
rcr
es
scas
mov
jmp
mov
sbb
out
jle,pt
cmp
cmp
dec
and
out
sub
ret
xor
lods
push
add
xor
jl
pushf
repnz
enter
mov
mov
add
sbb
rorl
dec
add
pop
lret
cli
in
int3
pusha
adc
sub
in
inc
jl
pop
adc
cmpsl
push
inc
add
push
cmp
mov
addr16
jo
pushl
cmpsb
dec
sti
mov
loopne
sti
jo
inc
and
lods
mov
insb
negl
or
js
popa
fsts
cld
mov
movsl
pop
in
dec
or
fstl
lahf
dec
xor
mov
lods
mov
push
push
in
dec
lds
cwtl
mov
dec
mov
sub
push
andl
dec
and
mov
inc
mov
mov
cwtl
mov
lea
loopne
mov
jl
jb
aaa
dec
lret
imul
mov
scas
cmpsb
daa
pop
jae
jmp
push
xchg
adc
or
pushf
xor
jge
mov
mov
xchg
mov
inc
push
fs
call
test
outsb
jg
add
lret
sbb
lds
dec
cli
fcmovb
into
les
xor
test
ror
pop
mov
dec
xchg
adcb
jmp
stc
daa
pop
push
mov
lds
lret
into
mov
jb
shl
out
jge
ds
cmpsl
ss
jle
and
lods
mov
arpl
into
cmpl
jns
dec
dec
mov
jp
jecxz
mov
sub
je
js
pop
hlt
es
sti
test
btc
jno
dec
jle
fidivs
out
dec
sbb
cmpsb
sub
adc
shll
data16
mov
add
sti
sbb
xlat
push
aas
outsb
xchg
and
aaa
add
sbb
adc
inc
aad
loop
in
xchg
jbe
outsl
inc
cwtl
inc
fdivrl
mov
imul
xchg
cs
hlt
repnz
call
call
jb
enter
ds
movsl
outsb
push
cli
push
jecxz
or
xchg
xchg
mov
dec
push
daa
sbb
lods
outsb
popf
push
fisttpl
cmp
pop
mov
sub
push
stos
lock
dec
subl
or
xor
mov
adc
dec
add
popf
stos
push
inc
outsb
jle
jmp
movsb
cmpl
sub
add
xchg
add
je
and
loope
mov
std
dec
dec
mov
mov
data16
sbb
popf
mov
cmpsl
rcrb
inc
je
pop
jle
pushf
mov
popf
jecxz
sbb
sbb
sub
cmpsb
call
jb
addr16
clc
gs
mov
xchg
xor
rcr
lret
fxch
mov
cltd
mov
out
stos
dec
js
pop
out
stos
sub
push
and
add
fsts
pop
push
aad
xorl
cmc
ljmp
jb
add
loop
xlat
pop
jns
jae
addb
inc
sbb
movsb
in
jne
jmp
fsubr
inc
dec
aad
push
or
lahf
int
sahf
jno
jns
jne
loop
jb
or
das
xchg
iret
adc
sarl
mov
cmc
aas
cmp
sub
or
dec
push
call
cmp
fs
lahf
xchg
fadds
cmc
lret
mov
sub
mov
xchg
add
shlb
jno
jbe
sti
shl
rorb
push
jae
jbe
and
fs
cwtl
or
divb
out
add
sbb
cmp
pop
int3
mov
inc
test
and
mov
xchg
cmp
fstps
fistps
sti
push
outsb
mov
mov
cmp
cmpb
sahf
test
jmp
cld
sahf
sbb
and
or
cld
push
out
scas
stc
jo
shl
test
iret
mov
push
movsl
sub
addr16
int
xchg
cwtl
xor
inc
sbb
les
and
aaa
xabort
jg
out
shrl
scas
pop
pop
and
jmp
mov
lods
dec
imul
xor
ds
inc
mov
pop
orl
inc
inc
fstpt
shll
mov
adc
pop
jnp
leave
repnz
nop
daa
adc
adc
push
xchg
les
lcall
js
lcall
add
mov
mov
pop
les
and
push
and
dec
mov
scas
adc
cmp
shrl
lcall
dec
out
dec
inc
es
adc
movsb
cmp
inc
and
jae
push
inc
in
stos
leave
push
mov
scas
ret
lods
mov
cmp
es
stc
divl
sti
aad
arpl
xchg
mov
outsl
out
adc
cmp
shll
xor
mov
test
mov
out
int
xchg
rcll
cltd
outsb
xchg
xlat
lods
add
ss
rorb
cmp
jae
dec
inc
outsl
jnp
mov
mov
and
xor
inc
mov
jmp
mov
rcr
sbb
pushf
pop
mov
je
pop
push
les
sub
pop
cmp
and
jno
js
xor
pop
jge
cmp
push
pop
cmpsb
xor
iret
decb
adc
andb
push
jp
mov
sti
ljmp
frstor
inc
hlt
lds
dec
lret
les
cld
jmp
jge
push
stc
stos
xlat
xlat
xor
add
icebp
dec
or
cmpsb
test
jmp
xorb
movsl
int
leave
push
mull
jl
jle
jle
out
mov
xor
les
pusha
pop
jnp
jmp
call
movsb
int3
sbb
maskmovq
idivl
jg
hlt
scas
dec
ja
xor
int
into
fisttpl
scas
dec
xchg
cmp
push
sbb
call
loopne
shrl
ret
pop
inc
mov
fsubrp
xor
xorl
xor
inc
cwtl
es
pusha
push
pop
fs
iret
call
pop
inc
push
add
stos
add
pop
or
mov
jbe
gs
push
movsl
iret
cs
cmpsb
sbb
cltd
lods
jg
dec
push
pusha
xor
ret
mov
jmp
insl
sub
nop
lret
cwtl
mov
mov
into
mov
cltd
pushf
adc
pop
adc
cs
fistpll
xchg
hlt
or
into
and
adc
push
jge
xor
and
fisubs
pop
pop
fistl
push
xchg
pop
lods
jmp
es
fldcw
int3
jle
cmpsl
mov
sub
call
cmp
jno
adc
lret
sub
fidivrs
ja
adc
push
dec
xchg
adc
hlt
fstcw
add
fistl
ror
or
push
cmpsb
orb
in
adc
and
mov
repz
scas
xchg
enter
arpl
fcomi
subl
lcall
fldenv
cmp
out
add
pop
inc
dec
add
ret
mov
aas
sbb
std
cmp
lahf
dec
lods
cltd
lods
out
es
cmpsl
movsl
imul
insb
enter
xchg
in
adc
ljmp
mov
inc
jae
xchg
cld
xchg
xchg
fdivs
daa
out
repnz
cwtl
mov
fcomip
sub
outsl
test
adcl
push
sub
pushl
jecxz
inc
cld
or
fildll
push
ds
inc
vsubpd
mov
sub
dec
jmp
dec
xchg
ds
inc
mov
or
add
in
lock
cmp
pop
sub
hlt
lods
insl
jmp
stos
pushf
pop
outsb
ret
lahf
sub
mov
sbb
and
pop
stos
leave
daa
xchg
sbb
xor
sbb
in
mov
push
arpl
jl
xchg
jne
add
adc
iret
push
jge
cli
inc
push
les
sbb
popa
in
push
inc
cmc
clc
stos
andl
jle
shrb
push
push
icebp
pusha
pushf
xchg
ljmp
jmp
xor
pushf
imul
xor
shrb
sbb
pop
pop
or
push
jbe
int
loopne
push
sub
jae
and
int
sbb
mov
pop
xor
sub
into
insl
lret
dec
cmpsl
and
rorb
or
push
jge
ret
aam
out
add
in
out
adc
cltd
fcomps
sbb
leave
insb
into
cmp
inc
sti
mov
add
sub
xchg
push
rcrb
jno
into
inc
out
or
cmp
aam
or
mov
sub
bound
jnp
dec
adc
inc
sbb
or
dec
mov
jae
mov
je
rolb
jg
dec
lea
mov
shll
cmpb
dec
ret
lock
dec
or
aas
icebp
sti
pop
adc
mov
into
mov
ds
fldcw
add
repz
xchg
adc
mov
rorb
vmread
cmp
mov
call
mov
andl
mov
add
cs
data16
push
push
mov
nopl
mov
jmp
mov
test
js
mov
or
lea
aaa
mov
les
mov
pop
fisubs
add
pop
mov
inc
cmpsl
xchg
pop
xchg
inc
inc
jp
cmpsb
insb
lret
or
pop
and
lret
repz
xchg
mov
sbb
cmpb
lods
sarl
movsb
xchg
fs
cmpsb
ss
repnz
cli
lcall
shrl
inc
add
ljmp
pop
mov
inc
or
pop
cmp
inc
repnz
test
xlat
cli
mov
movsb
ret
add
xlat
dec
js
jl
push
loopne
add
lods
loop
xchg
xchg
hlt
test
cmp
ret
or
sbb
cmpsl
pushf
add
mov
xchg
std
daa
sub
call
or
scas
cmp
adc
and
push
adcl
ret
popa
add
out
ljmp
mov
shl
sbb
in
xchg
dec
push
xchg
gs
cld
cmp
jmp
fisttps
pop
or
nop
pop
fneni(8087
rolb
mov
cmc
imul
dec
jb
aam
add
mov
xor
or
jg
dec
or
out
lret
les
and
sbb
jb
dec
jp
into
insl
fwait
mul
into
ss
push
aaa
ret
bound
mov
xchg
and
icebp
xor
lret
mov
call
rolb
or
aam
sub
ret
mov
iret
mov
and
or
sbb
mov
in
cmpsl
leave
jmp
inc
mov
popa
push
mov
adc
stc
bound
subb
xor
or
bt
imul
cmp
rcll
loop
sbb
cld
lods
adc
into
mov
pushl
mov
int
mov
xor
adc
ja
in
lods
push
imul
xchg
gs
sub
lret
adc
adc
pop
sub
or
loop
push
xchg
ficoml
enter
jae
xchg
sub
sbb
pop
aas
scas
lds
cmp
aaa
mov
adcl
dec
and
mov
mov
jmp
dec
push
fmull
arpl
push
decl
xor
jae
test
jno
xor
sbb
inc
adc
mov
mov
ret
add
mov
pop
mov
cmp
jle
mov
das
xor
lret
neg
dec
mov
repnz
aaa
mov
test
xchg
imul
in
xor
adc
jg
outsb
xlat
adc
inc
push
sbb
inc
addr16
xor
pushf
pop
jmp
cmp
cld
cltd
js
nop
push
ja
jae,pt
lret
out
push
jmp
sbb
aam
js
daa
daa
mov
jge
jne
in
xchg
sub
aas
gs
xorl
rorl
sub
es
push
aas
dec
scas
orl
stc
sti
add
lds
add
and
nop
je
outsb
int
loop
into
loop
fstps
leave
js
sub
arpl
icebp
xlat
in
fdivr
dec
xor
adc
fildll
stc
adc
clc
cmp
ljmp
aas
add
and
xor
jl
lock
push
into
inc
test
bnd
xchg
into
lods
jmp
mov
dec
mov
inc
mov
idiv
mov
jns
andl
push
in
fisttpl
mov
xor
pop
sub
movsl
jne
adc
push
sti
pop
adc
add
add
jmp
in
loope
mov
aaa
inc
adc
fwait
sqrtps
adc
pushw
mov
in
cmpsb
or
cmp
sbb
aam
fistpl
jno
xchg
mov
stos
loop
fdivr
xchg
lods
ja
add
fcoml
in
xchg
jb
sti
pop
inc
clc
lcall
pusha
and
inc
mov
xor
fstps
decl
pusha
push
test
scas
pushf
push
inc
cmpsb
mov
inc
and
out
sbb
setg
sub
clc
add
lahf
add
lahf
das
mov
pushf
and
sub
dec
xor
or
dec
loop
pushf
lds
jnp
push
out
inc
xor
pop
push
mov
lcall
sarl
push
sbbl
inc
sbb
and
mov
mov
mov
xor
add
push
popf
xchg
dec
sbb
add
sub
sub
push
inc
xchg
push
adc
dec
out
or
cwtl
rcr
dec
adc
lret
mov
repz
xchg
das
and
popa
call
pop
outsb
ret
aaa
dec
mov
and
mov
push
sbb
aaa
mov
sbb
sbb
sub
iret
sbb
adc
xor
and
mov
jl
cmp
mov
push
scas
out
or
loopne
into
pop
cmc
out
sub
push
mov
or
add
fsubr
call
stos
mov
inc
mov
lock
repz
push
xchg
xlat
xchg
jae
inc
ret
add
inc
enter
xor
lret
sbb
cli
push
fisttpll
sub
mov
dec
inc
pop
mov
xchg
and
gs
pop
or
and
push
lret
shr
or
icebp
inc
test
pop
adc
test
mov
lcall
mov
ret
mov
cmp
mov
adcb
inc
xor
sbb
push
lods
jae
pop
in
stos
inc
scas
mov
inc
and
jb
mov
jp
pop
daa
mov
ss
mov
iret
loope
lret
dec
dec
je
pop
and
popf
adc
jg
mov
fcmovnb
out
ja
jmp
jg
push
mov
mov
cmp
sbb
adc
lds
nop
pop
mov
xor
insb
sahf
clc
test
sbb
jg
xchg
mov
mov
pop
dec
repz
data16
fstl
into
push
and
mov
dec
and
into
add
popf
fdivrl
out
sbb
and
lret
cwtl
mov
ficompl
fisttps
les
pop
jl
mov
inc
out
fisttps
adc
mov
test
mov
fwait
outsb
ss
fs
inc
mov
movsb
and
pop
add
mov
fcmovnu
imul
and
xchg
mov
mov
fucomip
ret
out
cld
mov
mov
inc
mov
dec
pop
sbb
inc
in
cmc
lock
pop
js
and
jbe
sbb
jl
xchg
imul
mov
aaa
mov
pop
idivl
jo
pop
add
sti
sahf
push
mov
xchg
out
mov
loop
mov
xchg
cmpsb
hlt
aas
outsb
xor
loop
sub
mov
jmp
dec
lds
cmpsl
mov
mov
leave
push
mov
cs
and
and
sbb
notl
xchg
ss
add
pusha
jmp
imul
push
sarl
fsub
out
dec
xchg
sar
scas
imul
push
dec
xchg
mov
cli
xchg
hlt
inc
jae
ljmp
add
roll
lahf
jbe
jo
mov
add
cmp
or
aad
jne
push
decl
idivl
in
cwtl
ret
ds
xlat
lds
push
daa
in
mov
inc
cli
imul
and
cli
mov
push
inc
jb
mov
sbb
cmp
in
mov
shlb
sarl
int3
out
add
sahf
push
xor
int
pop
mov
lret
sub
mov
inc
add
mov
push
sti
sub
push
pusha
inc
out
push
sahf
out
and
sbb
xchg
sub
nop
js
xor
sub
pop
mov
fldenv
ljmp
repnz
mov
stos
rolb
ss
pop
test
pop
cmpsb
negl
test
mov
repz
and
arpl
inc
and
cltd
push
dec
or
mov
std
or
repz
lods
int
ffree
into
shll
arpl
pop
insb
or
enter
fstl
lods
movd
stos
repnz
jg
sahf
push
pop
jle
mov
int
adc
repnz
mov
mov
inc
pop
pushf
jp
movsl
add
and
inc
not
stos
xor
mov
mov
mov
mov
jnp
ret
popa
addb
jb
adc
add
sbb
xchg
lahf
mov
stc
dec
sub
loopne
xor
pop
rclb
sub
inc
mov
adc
mov
jb
and
mov
lret
jb
aas
aam
sti
and
and
stc
and
and
sbbb
aad
lods
pop
test
jge
mov
sub
cmp
inc
sahf
lds
pop
push
adc
ret
popa
int
je
ret
data16
popa
jle
pop
inc
shlb
mov
adc
lcall
or
jno
fnstcw
and
lods
ret
xchg
jae
jl
sbb
cmc
and
sbb
fimuls
test
inc
jle
subb
push
das
cltd
aaa
push
sbb
xor
jo
cmp
outsl
mov
aam
cwtl
xor
hlt
test
xor
dec
scas
mov
dec
stos
test
mov
sbb
fdivrs
inc
leave
idivb
out
cmp
inc
mov
mov
jnp
cmpsb
adc
scas
data16
or
jl
cmp
inc
mov
push
cld
jne
adc
add
and
and
cli
add
add
lock
sub
cli
jae
add
mov
cli
arpl
and
push
adc
mov
xlat
fsubrs
call
mov
adc
rorl
pusha
mov
mov
in
ja
push
and
dec
cmpl
test
inc
outsb
mov
lea
mov
outsb
sub
not
test
movsb
inc
sbb
or
sub
pop
rcll
andb
sbb
xor
test
loop
add
dec
loope
lock
adc
shr
mov
mov
cmpsl
lock
xchg
and
test
loop
ret
jmp
xor
push
loopne
cmp
mov
mov
popf
sub
xor
jl
scas
pop
inc
cmpl
jl
in
jae
add
testb
into
dec
in
notb
dec
lret
fisttps
push
ret
gs
sarb
or
dec
push
mov
mulb
cmc
fs
jg
mov
dec
mov
mov
loope
adc
push
std
adc
sbb
pop
sub
ss
mov
movsb
or
jmp
test
mov
subl
in
and
fldenv
out
rcl
adc
cltd
fwait
call
or
xchg
sub
addl
shlb
psubusw
sub
movsb
test
dec
subl
xor
lret
call
or
jne
inc
push
cmpsl
xchg
sahf
loop
push
xchg
jb
aad
movsb
mov
push
jg
lds
movl
mov
mov
mov
outsl
rcr
jae
cmp
sbb
push
cmpsb
cltd
filds
imul
nop
icebp
test
js
jb
movsb
mov
mov
dec
jne
and
in
fists
cmp
mov
nop
cltd
xchg
out
mov
mov
sbb
dec
push
mov
and
test
mov
adc
out
mov
inc
aam
jns
sbb
push
daa
pop
cmp
xor
cmpsl
test
aaa
mov
xchg
xlat
or
push
ss
cmpsb
dec
loopne
sti
aam
rcrl
dec
js
mov
movsl
inc
push
cmp
xchg
je
ret
lret
mov
sbb
pop
outsl
mov
and
insb
std
mov
jno
xlat
leave
out
mov
clc
sub
mov
mov
and
popf
adc
insl
jae
push
xor
push
push
jo
out
cli
hlt
stos
test
out
push
lcall
sub
adcl
xlat
jecxz
cld
sub
scas
jmp
icebp
ds
xor
mov
xlat
in
xor
in
mov
lret
lret
outsl
jbe
jno
test
sub
cmpsb
mov
sahf
adc
inc
in
cld
jge
das
into
mov
push
jb
ja
add
sbb
sub
in
stos
das
imul
pusha
jl
jno
outsl
mov
adc
test
roll
out
push
cld
psrlw
flds
gs
dec
mov
add
add
mov
dec
jbe
imul
xor
out
jecxz
cmpxchg
leave
adcl
iret
mov
lock
and
xchg
mov
pop
and
xchg
sub
sub
sub
mov
addr16
insb
sbb
pop
push
insb
add
aaa
subl
lahf
sub
lcall
daa
xchg
out
int
repnz
into
xor
in
test
cld
test
in
test
sti
out
mov
dec
inc
sbb
mov
inc
dec
push
and
in
les
icebp
ret
fidivrs
xchg
ret
push
pop
sub
jno
xchg
mov
orb
push
cli
daa
mov
cmp
mov
cmp
sarl
mov
add
in
dec
cmpsl
jle
cli
mov
pop
and
add
mov
xchg
stos
aam
lods
popa
mov
ljmp
add
mov
ljmp
imul
out
movsl
jge
shrb
lock
push
pushf
sub
lret
fcoml
out
loopne
xlat
mov
cmpsb
imul
loop
adc
and
xchg
aad
xchg
inc
adc
lret
push
dec
mov
push
dec
pop
lret
push
push
and
out
pop
mov
bnd
imul
shlb
dec
add
or
mov
out
push
mov
loope
cmp
out
fistl
xchg
scas
jnp
xor
push
jmp
push
pop
lret
mov
pop
xor
mov
arpl
push
xlat
stos
mov
imul
lods
test
mov
xchg
mov
orl
push
xor
data16
add
and
inc
outsl
iret
aam
repnz
cmovl
pop
out
repnz
das
xchg
mov
cmp
cmpsl
mov
cmpsb
push
adc
jg
xchg
int
push
ja
cmpsl
and
dec
nop
das
test
out
ror
xor
lcall
dec
add
mov
cmc
fsubrs
ljmp
fdivs
js
ret
push
pop
test
cmp
repz
sarl
lret
lds
mov
loope
loop
inc
inc
mov
or
nop
mov
lahf
sbb
xchg
js
loope
mov
ret
inc
in
mov
push
lds
xor
repnz
xlat
imul
and
jge
lret
repz
stos
les
dec
inc
or
es
dec
dec
sub
rolb
in
or
outsb
add
pusha
or
adc
add
std
add
fstpl
add
push
sub
push
fisubrl
fs
in
sub
sub
popf
and
in
lret
add
call
sub
in
frstor
inc
xor
loop
xchg
scas
outsb
adc
lahf
leave
icebp
mov
test
movl
add
out
lock
sbb
jge
mov
outsl
add
pop
sbb
xlat
pop
loope
cmp
cmpsl
icebp
mov
imul
je
addr16
das
icebp
jbe
cld
xchg
pop
and
call
insl
ss
fs
jnp
adc
xchg
outsl
ret
stos
xor
or
stc
xchg
mov
test
leave
sub
mov
daa
stos
sub
inc
inc
negb
mov
cwtl
aas
mov
cmc
and
add
dec
test
push
xchg
add
popf
cmpsb
stos
push
mov
add
adc
jns
pop
incb
clc
jae
ja
xor
out
and
call
pop
xchg
jns
inc
outsb
push
fcomps
mov
test
jbe
arpl
pop
xchg
sbb
fistl
nop
jno
lret
xchg
adc
hlt
inc
xchg
test
add
jp
push
mov
dec
fisubrs
fs
cmp
sub
mov
leave
xor
bound
pop
fidivl
jo
push
bound
mov
fldenv
in
mov
lock
and
dec
xor
inc
inc
gs
mov
mov
in
cmp
push
jl
mov
mov
cmp
int
jnp
dec
xor
test
jmp
jae
imul
cmp
xor
mov
imull
out
pop
mov
pop
xchg
lahf
scas
or
icebp
repnz
jmp
inc
cs
pop
testl
adc
mov
lods
aad
je
mov
mov
fisttpll
out
test
and
loopne
lahf
push
sub
insl
cmp
cld
ja
xor
pop
jl
and
add
jg
jge
cltd
imul
test
mov
ficoms
jmp
ja
push
xor
inc
sub
lcall
push
adc
push
test
gs
mov
pop
or
in
sbb
push
dec
sub
and
repz
mov
xchg
shll
mov
mov
pop
pop
imul
stos
sub
pushf
je
lret
test
test
aad
fdiv
movsb
inc
test
ficoml
add
mov
xor
sbb
inc
lods
cwtl
xchg
xchg
jns
add
push
mov
push
popf
in
rcrl
out
aas
xchg
mov
xchg
in
cmp
fstps
jnp
rcrb
jnp
movl
push
adc
daa
push
dec
add
sub
test
sbb
pop
sbb
and
adc
clc
scas
or
jle
mov
mov
jge
notl
es
xchg
adc
xor
sbbl
pop
in
sub
sub
loopne
call
mov
mov
adc
daa
dec
sti
mov
push
popf
test
pop
imul
addl
xchg
scas
xchg
daa
fst
inc
mov
dec
popa
jp
or
jbe,pt
test
add
test
fcmovnu
cwtl
je
rorb
negl
call
rcrl
adc
mov
rcrl
adc
xchg
shrd
inc
cmpsl
xchg
sbb
inc
xchg
dec
lods
fucomp
sub
fbstp
mov
mov
cmp
mov
data16
xchg
xchg
jae
push
mov
ja
cmc
and
mov
ja
xchg
sbb
fcmovne
or
dec
jns
mov
xlat
fisttpl
inc
push
xchg
sub
stos
dec
sub
xchg
pop
ret
add
mov
test
call
mov
lret
sahf
or
jl
ljmp
fcompl
jb
cmp
pop
inc
stc
aad
inc
ljmp
movsl
push
jle
adc
push
les
lahf
pop
sbb
mov
stos
add
fmuls
inc
xchg
jbe
fdivs
shl
out
stos
je
mov
aad
pop
imul
mov
aaa
insl
dec
in
out
mov
fdivrl
subb
decb
iret
jge
inc
fcoms
mov
inc
test
fnsave
inc
add
pop
fisubl
nop
dec
fwait
sbb
fsubrl
pop
or
rcll
out
test
movsl
and
cs
xor
push
ret
mov
lahf
xchg
in
cli
jmp
push
dec
and
pop
and
dec
fcoml
lcall
fidivl
cltd
xchg
rolb
cmc
sbb
lcall
mov
jl
jb
bound
addl
shll
lret
in
sbb
fisubrl
xchg
xchg
outsw
xchg
dec
pop
mov
repz
mov
stos
ss
inc
test
jbe
test
clc
scas
adc
lods
and
popa
push
pusha
lods
mov
gs
out
xchg
add
mov
xor
xor
pop
outsl
dec
mov
mov
sub
cwtl
cmpsb
je
std
jp
mov
leave
inc
mov
inc
push
cmp
mov
inc
inc
test
leave
mov
mov
bound
jo
add
lahf
dec
call
sarl
test
insb
addr16
cmc
clc
roll
aaa
cmpsb
xor
mov
ret
pop
popl
sbb
loope
jae
fidivrl
out
stos
adc
cmp
mov
xor
xor
dec
aam
in
mov
testb
outsb
pop
cld
sbb
mov
lock
out
push
push
push
cmp
ljmp
or
pop
inc
cmpsl
mov
sub
call
mov
pop
inc
nop
orl
ss
and
ljmp
adc
cmp
jbe
and
call
xchg
cmpsb
push
push
fcoml
add
test
adc
idivb
jg
pop
mov
cmpsl
sahf
imul
sarl
popf
push
dec
or
jae
mov
xor
xchg
adc
or
das
fcmovnu
jne
les
inc
es
dec
cmp
pushf
xchg
push
int
ret
je
or
in
int
lahf
add
je
cwtl
fwait
push
dec
fcom
scas
jne
fisubrs
std
repnz
xchg
addb
inc
iret
add
ss
sub
rcll
fildl
push
cmp
sub
jecxz
sbb
push
jge
loop
sub
pop
pop
and
add
sti
clc
fidivrl
add
lock
cmp
cli
pop
or
aaa
std
fwait
scas
push
jnp
xchg
inc
rclb
shl
test
or
popa
ret
inc
psubq
cmp
jmp
out
xchg
sbb
stc
lret
add
fiaddl
mov
inc
dec
andb
sbb
jbe
std
jle
pop
pusha
push
push
mov
imul
in
mov
mov
lods
mov
pop
and
adc
dec
test
dec
idivb
test
xchg
or
incl
mov
and
and
aam
out
out
pop
outsl
mov
ror
inc
pop
mov
test
in
jg
jno
sarb
cmpsl
add
add
fsub
adc
mov
jb
sahf
ss
jo
movsl
adc
sub
or
mov
pusha
inc
mov
jno
lds
ss
test
shl
mov
cmp
push
inc
sbb
jae
sub
lods
popa
ja
inc
or
sti
sub
mov
inc
mov
sbb
imul
insb
add
cmp
popf
and
xor
pop
lods
or
and
faddp
jne
cmpl
sbbb
adc
dec
mov
lret
cs
fs
jne
pop
mov
add
push
sbb
cmp
inc
cmpsb
mov
xor
imul
cmpsl
dec
imul
and
push
lret
mov
pop
adc
aaa
fsubr
pushl
pop
enter
decl
pop
mov
mov
fnstenv
sub
sti
cmp
clc
stc
mov
dec
pop
negl
imul
xor
mov
adc
icebp
test
loop
pop
jb
mov
mov
pop
xor
fisubrs
add
imul
popa
fcmove
push
and
or
shlb
cmp
mov
mov
add
std
out
jae
out
jg
out
addr16
adc
outsl
add
pusha
cs
enter
push
adc
in
lret
jmp
jns
mov
test
cmp
mov
jno
or
movsb
and
nop
imul
cmp
cltd
mov
ret
jg
xlat
cs
and
mov
popf
shl
sbb
push
in
test
js
ljmp
cmpsl
out
dec
jae
sub
lret
adc
daa
xor
les
out
data16
fistl
movsl
fisubrs
and
daa
ja
pop
xchg
call
jmp
cmp
ret
mov
loopne
pop
inc
cmp
nop
lods
mov
fimuls
add
ffree
rcrb
cmc
jno
xor
test
cmp
jle
call
pushf
lret
or
cmp
iret
mov
adc
stos
jmp
inc
or
repnz
mov
jne
fwait
cs
stos
jmp
jecxz
sti
jmp
adc
hlt
scas
fsubl
mov
push
push
mov
jae,pt
aas
dec
inc
sbb
add
je
sbb
aaa
fwait
pop
mov
cmp
iret
dec
outsl
cmpsb
and
inc
push
xor
xchg
jg
push
cmp
scas
scas
mov
je
add
dec
sub
shlb
mov
push
fsubs
dec
aad
movsb
das
leave
mov
cmpsl
loop
popf
ret
aam
leave
in
xor
std
push
dec
xor
insl
outsl
jb
or
mov
dec
push
divl
icebp
iret
aam
enter
dec
cmpb
cmp
sbb
adc
xor
or
inc
loopne
mov
inc
lahf
pop
mov
rorb
jg
jle
pop
add
sbb
out
jno
aaa
loop
jo
cmc
adc
cmp
shlb
lahf
and
fcoms
dec
cmpsb
fs
add
popf
cmp
mov
cli
rcrb
jo
adc
in
mov
inc
je
push
leave
inc
push
lods
jge
push
xchg
or
popa
add
adc
out
out
xlat
pusha
xchg
ja
dec
imul
fisubrl
dec
inc
lods
inc
add
jae
int3
jns
es
rclb
cmpb
xchg
enter
lcall
aam
cld
cld
mov
mov
mov
dec
outsb
or
cmp
dec
sahf
mov
fstpl
addl
dec
push
dec
ret
xchg
pusha
jg
icebp
adc
test
push
icebp
rcll
mov
xchg
adc
adc
mov
and
je
xchg
pop
or
movsb
jbe
inc
adc
mov
cli
mov
fdivs
dec
sbb
ja
int3
mov
imul
data16
push
mov
cmpsb
sbb
add
and
cmp
xor
cmpb
aam
and
push
inc
popf
xlat
stc
mov
lcall
in
mov
mov
mov
push
dec
std
stc
fmull
and
jle
test
and
push
pop
xor
int
mov
mov
cmpsb
xor
cmp
or
imul
and
scas
push
lcall
mov
sbb
inc
jle
mov
outsl
js
jl
std
pop
dec
outsl
cmpsb
imull
pop
daa
mov
and
lea
into
in
lods
sub
xor
insb
aaa
fs
outsl
xchg
enter
and
divb
jl
and
adc
orl
adc
mov
iret
int3
jno
pop
popf
add
cli
dec
xor
test
rclb
in
cwtl
pop
cmpsl
cltd
push
sub
pop
pop
xchg
shll
test
clc
cmp
jae
pop
ds
push
sub
out
pop
sbb
inc
and
mov
push
or
test
jb
inc
jl
popf
add
loope
insb
sub
sarl
outsl
xchg
les
lods
out
test
int
dec
mov
icebp
rcll
mov
jge
mov
insb
testl
mov
inc
and
xchg
and
cmpsb
cmp
scas
cmp
loop
mov
sbb
ss
and
pusha
ror
push
dec
adc
mov
or
cmp
aad
xchg
cmpl
test
adc
inc
mov
push
pop
dec
adc
out
fyl2xp1
inc
jl
sub
inc
adc
iret
sarl
inc
cmp
test
xor
addr16
cmpsb
scas
push
mov
mov
jmp
adc
jl
mov
add
stc
cmpsb
dec
sar
pop
inc
push
or
add
dec
and
filds
clc
hlt
jmp
outsb
test
sub
xchg
roll
sub
or
lds
leave
ror
fldcw
mov
inc
leave
das
ja
call
fldl2t
jo
repz
jmp
cbtw
xchg
or
mov
outsb
xorl
jmp
add
sub
and
mov
ret
mov
sbb
dec
es
data16
movsb
test
jl
adc
addb
xchg
outsb
push
mov
mov
ljmp
and
ds
inc
xor
mov
sub
or
mov
inc
stos
sahf
and
movsb
pop
and
test
not
test
dec
cmpsl
popf
scas
out
xor
add
popf
cmpl
jae
push
push
xor
inc
mov
test
mov
sahf
pushf
or
scas
dec
or
jno
jmp
leave
cli
fisubrs
aaa
aad
pop
add
cmp
mov
addr16
xchg
movsl
xorb
test
mov
inc
xor
lods
pop
js
dec
or
inc
jbe
pop
sarb
pop
aas
add
dec
mov
jmp
add
cmpsl
das
pushf
jns
stc
xor
movsl
sub
inc
movsl
push
mov
sub
aam
loopne
lods
jo
sbb
push
pop
js
out
pop
lea
pop
popa
je
mov
in
outsb
shlb
cmp
fs
inc
ret
pushf
aas
mov
fwait
hlt
icebp
stos
mov
nop
dec
imul
xor
xor
fmull
adc
mov
mov
mov
mov
lock
mov
in
or
shrl
scas
into
and
pop
movb
mov
mov
jno
pop
mov
sarb
hlt
bound
or
mov
sub
mov
aam
leave
xorb
outsb
sub
cmp
cli
iret
xchg
xor
pusha
ror
ds
loope
js
inc
xor
cmp
std
jne
or
cmpsl
sbb
ljmp
aad
and
adc
in
inc
jg
test
xadd
leave
pop
lea
popa
and
or
in
jge
mov
mov
jns
mov
mov
fwait
adc
addr16
xchg
ret
jle
and
loope
push
pop
sbb
push
cmp
shr
jp
mov
xchg
ss
sub
pusha
xorl
ret
jns
mov
sbb
or
or
or
sbb
insb
mov
add
xchg
jmp
sbb
xor
cmp
incb
addb
fwait
out
mov
clc
jns
xchg
cmpl
cmp
inc
dec
dec
idivb
mov
aaa
or
mov
fiadds
fdivrl
and
inc
xor
cmp
inc
popf
ds
xorb
push
cmp
xor
xchg
mov
inc
pop
cs
test
mov
out
jbe
mov
mov
fistpl
xchg
pop
out
or
pop
ljmp
cmpsb
sbb
insl
lods
dec
sbb
and
sbb
insb
pop
in
fwait
adc
xor
cmc
cmp
dec
cmpsl
cmpsl
js
aam
push
inc
jl
cs
popa
call
xchg
loope
repz
pop
sahf
lds
shll
add
outsl
xchg
add
cmp
xor
sbb
jns
and
and
cmc
jg
cmp
dec
xor
inc
and
jg
add
or
stc
scas
dec
in
in
push
jne
das
or
out
data16
out
mov
sbbb
cmc
lret
mov
outsb
nop
divb
pop
sbb
in
fs
and
sbb
out
repz
xchg
stos
ja
pop
imul
int
inc
inc
and
aad
push
hlt
lds
jp
push
stos
xchg
idiv
mov
sti
jecxz
jg
lods
int3
loopne
cmp
pop
add
lds
lods
repz
aas
fs
add
cmp
pop
xchg
insl
mov
cmp
pop
sbb
cmp
out
loopne
outsb
fiadds
jmp
outsb
adc
int
in
popl
cmpsl
push
lret
pop
jmp
mov
movsl
xor
mov
sarb
cmp
sti
lret
movhps
or
inc
push
mov
test
pop
test
fidivs
mov
cmp
in
jp
cmp
sbb
inc
xor
enter
mov
lret
repnz
dec
pop
jmp
jmp
jbe
cwtl
xchg
jo
push
mov
sbb
mov
push
mov
pop
xchg
dec
dec
fnsave
sbb
sub
pop
push
inc
mov
push
adc
cli
xor
mov
popl
rclb
cmc
and
add
shlb
push
stos
sub
icebp
adc
shrl
imul
xchg
loope
dec
les
dec
pop
mov
mov
xor
xor
mov
mov
cmp
pop
movsb
mov
subb
lods
jo
mov
push
inc
aam
inc
scas
push
jecxz
les
adc
mov
clc
sbb
mov
pop
pop
mov
les
sbb
push
inc
in
xor
pop
aam
sbb
enter
sub
sub
mov
mov
testl
add
push
fimull
stos
test
jnp
sub
and
cltd
sbb
push
cmp
scas
mov
mov
xlat
pop
cmp
fnstcw
inc
je
sti
bound
jg
pop
lods
mov
repz
stos
and
mov
mov
sub
sbb
rclb
int
pop
add
inc
mov
inc
sub
xchg
adc
jle
aad
dec
mov
dec
test
jmp
shlb
sbb
lods
gs
je
push
jle
xor
pop
aaa
mov
sbb
mov
add
xor
mov
lds
ret
aam
aas
inc
scas
insb
pop
movntq
aam
inc
lods
adcl
pop
pop
jle
or
movsb
jmp
dec
cmp
sub
dec
jmp
scas
ret
test
sti
ja
sahf
mov
mov
ret
adc
call
push
shll
cmp
inc
pop
sub
outsl
mov
fcoms
sbb
ret
bound
mov
jmp
or
cmpsb
cmpsl
jno
rorb
mov
mov
push
out
push
push
inc
insl
jmp
mov
mulb
imul
push
lahf
push
push
pusha
jo
sbb
pop
mov
xchg
pushf
jecxz
loope
insl
in
add
lcall
push
daa
fisttpll
xor
arpl
lret
cmp
frstor
mov
jge
ljmp
lds
mov
imul
inc
dec
mov
cld
and
nopl
icebp
lock
mov
lcall
lcall
push
fcmovnb
pusha
push
fidivs
in
and
das
popf
mov
aam
orb
mov
pop
loope
pop
outsl
pop
lret
or
jg
cmp
lcall
leave
sub
ds
leave
pop
push
imul
adc
fcomp
cld
push
pop
inc
mov
dec
clc
inc
dec
and
jmp
shlb
sbb
push
inc
jle
mov
shll
dec
hlt
xor
adc
and
iret
lcall
setne
test
pop
shlb
mov
mov
dec
inc
or
pop
loopne
mov
into
xchg
jo
adc
jle
pop
sti
xor
xchg
test
popf
cmpsl
mov
int3
sub
fs
aaa
test
xor
and
mov
sbb
xchg
stc
cmp
push
inc
ljmp
push
xor
adc
mov
xor
dec
jecxz
mov
push
icebp
add
roll
xchg
xorl
fwait
mov
orb
scas
ror
lahf
ds
jno
inc
fmuls
xchg
cmpsl
hlt
adc
sub
and
xchg
sbb
inc
dec
je
push
ret
int3
es
push
lcall
int3
ret
xor
mov
cmp
in
xlat
xor
out
into
les
push
mov
cmp
enter
mov
jae
jp
inc
and
mov
pop
outsb
xchg
out
popf
add
testb
in
repnz
movups
nop
leave
lret
or
es
pcmpgtb
mov
xchg
lds
cmp
mov
jp
je
addl
in
mov
xchg
aad
pop
mov
pop
fprem1
rolb
push
dec
pop
xchg
jo
adc
jecxz
cmp
dec
dec
out
push
int3
ficoml
mov
bound
out
xchg
rorl
aad
xor
mov
jmp
out
cmpsl
in
mov
loop
add
test
ficompl
mov
push
or
mov
cmp
movsb
js
aas
sub
pop
sbb
jno
and
sub
js
int3
mov
push
mov
xchg
fs
out
jle
push
movsl
fildll
xlat
loopne
cmp
xor
xor
xlat
subl
mov
xor
dec
mov
sbb
xchg
mov
or
jb
cs
jle
cmp
test
push
jg
ficompl
mov
fcmovb
orl
or
inc
sub
stos
push
insl
addr16
cli
sbb
test
aad
dec
xor
imul
decl
in
in
and
xor
cli
cmp
test
xchg
and
lods
leave
bound
das
add
insl
mov
incl
cs
push
popf
cmp
mov
adc
fabs
push
mov
pop
sbb
add
fdivl
jg
push
lea
push
imul
iret
cltd
and
sub
mov
jg
mov
cmp
inc
cmp
add
add
rcrl
xor
sbb
xchg
repnz
test
mov
fistpll
mov
mov
sub
stos
stc
sub
mov
jae
ficoms
stos
dec
push
and
aas
ret
dec
inc
or
inc
sbb
pop
ret
outsl
inc
sub
adc
mov
sbb
sub
fdivrs
js
mov
lods
test
loop
repnz
ret
aam
js
and
dec
outsb
arpl
mov
mov
adc
repnz
cmp
ror
and
inc
fcmovu
sbb
push
pop
ret
pop
adc
cmpsl
and
mov
hlt
push
add
int
jo
jp
sub
sbb
sub
outsb
push
and
xchg
push
mov
cmp
lret
ficoms
xchg
cmp
cli
mov
fidivs
les
inc
sti
pop
and
cmc
pop
jl
sbb
jbe
xchg
mov
jb
mov
push
in
pop
dec
scas
std
sti
aaa
outsl
popa
jnp
fisttpl
dec
fs
arpl
popf
sub
les
std
mov
mov
ret
jmp
cs
cmp
sbb
xchg
out
mov
les
lods
gs
lods
dec
in
mov
adc
lock
jge
push
mov
in
cmp
ja
sub
popa
mov
inc
mov
incl
push
sub
cmpsl
push
jl
adc
in
mov
or
into
jmp
test
jno
mov
jl
leave
jmp
inc
stc
mov
sub
or
jle
inc
mov
pop
arpl
lds
ljmp
out
fdivrs
cwtl
mov
pop
rclb
fstpl
cmp
xor
movsl
das
mov
add
mov
les
scas
mov
mov
test
aam
xchg
sarb
or
dec
imul
movsb
or
xor
dec
in
pop
inc
add
adc
inc
inc
cmpsl
das
ficoml
jmp
mov
jg
pop
repz
in
xchg
bound
int
rcrl
dec
movsb
dec
test
add
cmp
inc
repz
lret
sti
xor
add
les
lcall
icebp
inc
sub
gs
pop
push
lock
jno
lcall
push
xorl
popa
ret
sbb
lds
fimull
cmp
push
addr16
push
stos
pop
dec
cmp
addl
xchg
mov
jno
pop
out
mov
jp
mov
shll
xchg
arpl
cmp
sbb
je
pop
mov
dec
aaa
cmp
xor
cmpsb
scas
repz
std
pop
inc
mov
xchg
xchg
xchg
push
mov
cmp
and
mov
mov
lcall
mov
insb
out
pop
push
jg
cmp
mov
pop
jle
push
or
stos
ficoms
iret
xor
stc
pop
cmpsb
xchg
btc
xchg
xor
mov
stc
add
lret
enter
xchg
data16
test
mov
pop
pop
push
fldl
lods
mov
cmp
jmp
out
xor
jnp
cmp
aaa
out
push
gs
aas
cmc
pop
fiaddl
inc
dec
lret
adc
or
lds
loop
or
icebp
ss
jmp
pusha
cmp
mov
xchg
fwait
mov
lahf
divb
rcll
ficoml
pop
pop
loope
dec
and
bound
movsb
fwait
mov
lret
sbb
in
mov
mov
push
imul
iret
nop
or
add
in
mov
je
push
out
mov
loopne
and
jl
pop
mov
mov
dec
mov
dec
cmp
add
cld
or
out
mov
pop
aam
mov
dec
sub
jmp
ja
and
sbb
lret
push
or
jecxz
dec
jno
les
mov
rcll
xor
cmpsb
cwtl
aam
add
jae
sub
js
fiadds
push
mov
shr
es
push
push
mov
test
iret
in
dec
xor
ret
jecxz
inc
xor
jbe
stc
push
addb
cmp
fstl
mov
xlat
test
inc
jle
fucomi
cld
das
mov
ret
pop
rorl
mulb
aaa
dec
jmp
add
jno
and
mov
loop
loopne
fs
push
push
sbb
fdivrs
repz
xchg
das
out
roll
jl
mov
rolb
cmp
xor
cmpsl
mov
mov
push
es
pop
pop
aaa
xchg
mov
fdivl
inc
or
xchg
dec
cltd
mov
das
mov
ja
jnp
ret
je
gs
cld
inc
mov
cmp
bound
and
xor
notb
push
out
pop
push
in
pop
fdivrs
scas
jne
inc
inc
ja
adc
imul
aas
popf
nop
fsubp
cmpsb
adc
cli
in
and
pushf
fs
pop
aaa
inc
mov
call
mov
out
sbb
nopl
out
movsb
orl
inc
sbb
ret
push
jbe
sub
jl
cmp
fldl
imul
mov
or
mov
in
call
out
adcl
ja
push
push
lods
cmp
out
push
dec
mov
pop
add
mov
jnp
push
xchg
out
or
cmp
imul
aas
add
test
cmpsl
daa
adc
sub
clc
sbb
rorb
mov
jge
ret
sbb
mov
add
xchg
shrl
lcall
movsl
mov
add
cmp
in
in
pop
mov
push
adc
push
pop
repnz
mov
adc
xor
xchg
cmovno
sti
push
movsb
mov
sub
mov
adc
fisttps
inc
mov
or
and
pop
fdiv
xor
out
arpl
je
dec
dec
jne
mov
cmpl
mov
or
xor
fidivrs
out
sbb
ljmp
dec
stos
iret
addr16
or
lods
cld
jbe
dec
xor
fwait
pop
lret
inc
cmc
push
leave
lcall
fidivs
lea
test
push
pop
cli
loop
daa
xor
xor
jmp
popf
and
mov
jns
je
daa
mov
mov
sbb
push
sub
cmpsb
fdivrs
xchg
imul
jo
mul
xor
mov
lret
adc
sbb
divb
ja
mov
das
jns
jnp
mov
fs
inc
imul
ret
jbe
mov
dec
xor
mov
ds
daa
lahf
xchg
xchg
andb
fistps
jo
filds
in
rcrl
popf
lahf
mov
in
mov
dec
js
lea
xor
lret
scas
cmp
jg
and
sub
stos
inc
or
das
mulb
xchg
sub
mov
cs
movb
inc
push
xor
jns
push
push
and
and
in
in
das
jae
jmp
ret
call
outsl
cmp
in
andl
fcmovu
aas
push
mov
and
mov
popf
xchg
jge
lahf
lret
pop
scas
mov
jae
int
in
iret
dec
sub
adcb
mov
clc
lret
dec
loop
int3
and
mov
xor
and
cmp
jo
jno
in
mov
mov
flds
inc
stos
sahf
jae
and
movups
jecxz
jae
into
andl
das
mov
sahf
push
in
jo
push
pop
loope
xchg
jge
loope
stos
lds
loope
and
sub
fstpt
dec
xchg
aam
imul
cs
cmc
mov
inc
lods
lock
lods
adc
pop
rorb
fbstp
cmp
test
data16
sub
orl
mov
adc
cli
mov
xor
outsl
test
add
aam
fidivl
mov
mov
adc
push
xor
sbb
in
aas
fsubl
inc
shrl
cltd
int
mov
push
inc
inc
jo
lds
push
jle
cld
xchg
xlat
popa
inc
add
out
mov
pop
xor
cmp
cmp
xor
mov
push
fwait
sahf
das
loopne
xchg
mov
enter
mov
xor
jmp
movsl
inc
lahf
pusha
add
pusha
pushf
mov
sbb
scas
int3
mull
push
fisubrl
mov
jae
aas
mov
mov
and
outsl
xchg
mov
mov
iret
outsb
fcomi
jmp
and
fdivr
add
add
popf
outsl
fisubrl
aam
xor
inc
sbb
fucom
or
outsb
pusha
sub
leave
in
lds
movsl
ss
or
push
mov
lods
adc
das
and
adc
jmp
mov
mov
scas
daa
movsl
cmc
push
push
pusha
repz
pop
xor
aam
fisttpl
es
or
adc
and
pop
popa
adc
mov
aas
fwait
jno
notl
bound
mov
sbb
xchg
pop
push
clc
xchg
dec
test
sbb
and
mov
movsb
stc
adc
sub
xchg
dec
in
ja
movsl
cmpsb
cs
call
std
jp
filds
outsl
cltd
nop
push
rcrb
xor
daa
mov
adc
sub
fsubl
jb
in
or
test
out
aas
mov
mov
pop
je
enter
mov
dec
mov
pop
inc
je
pop
lea
out
sbb
ret
xchg
aas
jecxz
mov
or
data16
mov
xchg
push
ss
sbb
pop
mov
cli
cmp
jbe
aam
lods
dec
push
jne
mov
shl
cmpsb
jnp
add
mov
lock
xor
test
push
adc
mov
call
jmp
cmp
outsl
mov
pop
pop
add
aas
adc
mov
scas
cli
add
enter
enter
rcl
mov
out
push
sbb
jo
push
enter
ss
test
in
mov
in
cmp
mov
scas
int
lock
aam
aas
stos
bnd
rolb
dec
loope
subb
jp
push
adc
scas
dec
push
adc
popf
lret
lock
xchg
fmull
aam
fdivrl
inc
outsb
and
fst
jno
lods
out
neg
push
leave
fwait
xor
popa
push
lcall
aaa
mov
mov
aas
pop
lods
or
adc
jbe
inc
aam
cmp
mov
sub
sbb
adc
icebp
sbb
in
push
jbe
xchg
dec
xchg
xchg
add
fsubrs
jne
mov
xchg
push
fdivl
ljmp
pop
mov
jnp
test
std
sub
loop
pop
push
ds
stos
in
mov
shr
mov
loop
adc
adc
jecxz
sbb
or
mov
pop
sbb
mov
sbb
orl
into
adc
cltd
std
aad
mov
inc
add
out
xor
xor
ds
or
mov
ljmp
sbb
vshufps
pop
jp
cmp
insl
push
sti
push
xchg
or
insb
mov
add
sbb
hlt
xchg
ss
jp
mov
movsb
mov
rcrl
cltd
sbb
xor
imul
jge
push
imul
mov
adc
push
xchg
adc
into
sbb
mov
mov
dec
xchg
add
pop
sbb
mov
stc
loop
in
aas
lea
mov
push
test
cmp
stc
xchg
fmuls
xor
mov
inc
mov
fnsave
mov
pop
or
or
pop
cmp
push
mov
lods
aad
pusha
add
arpl
out
lods
sti
xlat
inc
je
jo
popa
cmp
cmp
es
jmp
adcl
movsb
pop
fsubrs
cmp
lds
hlt
sbb
leave
add
pop
adc
pusha
sub
sahf
pushf
gs
in
or
mov
or
cmp
pop
repnz
mov
jne
lock
mov
arpl
mov
and
arpl
in
call
xchg
scas
pusha
dec
sbb
xor
mov
sarl
pop
inc
jb
sbb
hlt
sbb
int3
add
sbb
push
mov
scas
pop
jl
sbb
xchg
add
adc
cs
sub
cld
inc
cmp
and
repz
bound
arpl
add
pop
fstpl
pop
aam
mov
xlat
ffreep
pop
jb
scas
cwtl
push
fidivrl
jecxz
push
jmp
call
xlat
xor
inc
xchg
popf
jbe
push
lods
leave
test
jecxz
out
leave
cmp
popa
aaa
iret
or
std
or
ret
js
cmp
test
movsb
ljmp
fisubrl
add
fwait
sub
push
and
push
insb
mov
lods
lods
add
pop
popf
out
pop
mov
mov
mov
xchg
les
loope
repz
sahf
in
aaa
cmp
mov
jmp
mov
xchg
mov
dec
mov
icebp
inc
jl
mov
jecxz
lcall
pop
or
pop
mov
repz
in
cmp
mov
lock
rcl
dec
and
out
and
add
insl
cmpsb
sarb
push
fdivrs
enter
mul
mov
call
clc
mov
mov
or
inc
das
xor
ret
and
loope
arpl
addr16
jmp
jns
push
decl
xor
xchg
les
test
push
dec
push
pop
xor
mov
lods
ds
cmp
in
cwtl
mov
mov
jg
mov
cmp
sub
mov
addl
push
jge
mov
jo
xchg
mov
loope
data16
jbe
jge
dec
adc
loopne
into
pop
lret
inc
xor
pop
jmp
ret
test
xor
ret
push
cmp
adc
adcl
dec
push
cmpsb
bound
xchg
and
mov
adc
jge
jo
inc
cwtl
or
pop
bound
roll
jmp
cld
or
adc
sbb
cmpsb
or
jno
imul
push
xchg
sub
sub
add
ret
mov
fwait
mov
mov
mov
clc
inc
leave
rolb
and
mov
cmc
loopne
xchg
test
std
cmp
mov
fdivp
xchg
xchg
and
cmp
loop
lcall
push
cmp
pop
out
sbbb
pop
add
fildl
mov
jno
jbe
out
xchg
out
mov
ds
jp
and
dec
inc
addb
pop
ljmp
jg
mov
mov
incb
test
and
les
lods
jl
jmp
repnz
movsl
das
dec
inc
jge
adc
add
adc
mov
sub
pop
add
mov
lock
nop
jg
pop
mov
xchg
sub
bound
icebp
std
jge,pn
mov
dec
daa
jp
push
or
sbb
inc
xor
jge
jnp
loop
test
jge
bound
jg
xchg
nop
push
ret
pop
sub
lods
mov
xchg
jo
xchg
inc
fimuls
push
inc
movsb
dec
cmc
push
jb
bound
sub
popa
cmp
pop
call
mov
mov
push
dec
popa
mov
push
mov
rorb
and
lret
cmp
jns
int3
ss
and
pop
shl
aam
and
sti
push
and
sti
mov
adc
push
adc
in
push
movsb
or
cs
pop
fnstenv
push
aaa
mov
adc
adc
mov
aam
in
cmp
out
movb
add
aas
jle
imul
and
dec
xor
test
mov
leave
push
cld
add
xchg
stc
inc
sub
mov
movsl
mov
fwait
mov
pushf
dec
mov
loop
inc
xchg
adc
pop
cltd
push
xchg
add
rcrl
cmpb
ljmp
pop
mov
std
notb
sub
and
mov
je
dec
lret
addr16
jb
fldenv
in
add
ss
std
inc
lret
scas
sub
jge
stos
sub
addr16
call
jnp
lds
sub
mov
xchg
pop
js
push
mov
lcall
adc
fnsave
fidivs
test
outsb
cld
in
or
addr16
mov
lret
loopne
in
jl
scas
shl
andl
dec
int
xorl
fnstsw
scas
sbb
sub
dec
mov
int
push
jb
pop
nop
out
aaa
jmp
fcom
add
sbb
cwtl
xor
call
mov
push
sbb
add
into
sbb
pop
inc
fsubp
xchg
cmp
int
mov
fldenv
mov
insl
adcb
and
mov
dec
push
push
enter
adc
aaa
mov
nop
jg
sbb
mov
imul
ret
mov
sti
jg
mov
lods
ret
dec
mov
pop
popl
stos
jp
xchg
imul
fimuls
push
int3
mov
lret
pop
popw
sub
mov
sbb
jg
xor
ss
jb
fisttpll
lea
lcall
sbb
and
pop
iret
pop
lds
sub
imul
push
imul
cmpsb
addl
and
xchg
push
fiaddl
movsb
cmp
jg
lcall
pop
fucomp
sub
stos
out
cmp
pop
iret
insb
jecxz
mov
cld
xorl
or
pcmpeqb
adc
into
sbb
popf
stos
cld
insb
and
lret
gs
insl
jp
fists
imul
cli
jl
adc
adc
jl
iret
cltd
add
repz
cmp
add
or
inc
or
dec
int
lds
lea
inc
sbb
sbb
js
shlb
adc
rorl
insb
and
imul
push
jns
push
mov
or
fwait
lods
out
jo
inc
aaa
movl
add
xchg
arpl
jns
sbb
mov
cmc
push
mov
inc
shrl
loopne
rcll
out
out
lock
std
mov
in
inc
sub
jle
movsl
aad
test
push
sbb
inc
sub
mov
or
xchg
insb
pop
movsb
mov
into
pop
add
sbb
jno
aad
xor
stc
imul
adc
cmpsb
xchg
jle
js
inc
push
adc
rcl
push
rcrl
inc
cmp
popa
mov
pop
out
pop
cltd
call
mov
fstpl
sti
pop
push
mov
fs
jmp
inc
mov
in
xor
lahf
lret
je
jae
insb
ret
adcl
fists
xchg
movl
xchg
dec
cs
inc
mov
add
fcmovu
clc
push
imul
xor
mov
inc
sbbl
popf
fsubs
mov
push
cmpsb
fmuls
repz
inc
xchg
jle
ds
gs
dec
cmc
mov
xchg
and
sbb
push
imul
mov
inc
dec
inc
mov
in
leave
mov
sbb
pop
lock
sbb
fwait
xor
scas
jmp
sub
stos
mov
push
mov
pop
sub
xor
orb
outsb
pop
jge
rol
dec
mov
push
clc
shll
jecxz
imul
nop
fcoms
jecxz
mov
adc
aam
xor
mov
dec
addr16
pop
mov
clc
add
test
lahf
fisubrs
push
or
xor
or
fcoml
nop
sbb
sub
jae
sahf
dec
xchg
loopne
jns
jl
out
ret
movsl
ljmp
fs
loope
dec
jle
cmpsb
sub
addb
pushf
lcall
add
call
int
jg
sbb
mov
push
mov
leave
stos
xlat
mov
dec
popa
push
and
inc
dec
pop
jge
add
mov
mov
sub
div
insl
xchg
inc
bound
xchg
dec
push
push
insb
rcl
sbb
push
inc
mov
or
cmp
mov
fucom
ss
pcmpgtw
xor
add
xor
xchg
jne
add
cmp
mov
push
jnp
cmp
push
cmpsb
push
hlt
pushw
subl
lcall
stos
push
add
pop
push
into
sarb
jbe
test
aam
push
adcb
pop
icebp
mov
sub
adc
outsb
sub
ljmp
shll
pop
sbb
in
pop
push
in
jno
addr16
in
adc
sbb
or
xchg
push
aad
push
sbb
out
test
out
lds
aam
inc
cmp
jne
movsb
mov
or
push
jge
in
jp
int
dec
xchg
and
mov
enter
pushf
ljmp
push
mov
sti
or
xorb
cmp
scas
sub
aam
adc
cli
add
cmpsb
lcall
xchg
arpl
sti
stos
xchg
je
cmp
adc
jne
mov
jle
aam
daa
jno
and
test
lea
lds
test
lahf
fmulp
lcall
sbb
xchg
jns
in
fildl
mov
pop
dec
inc
and
je
add
mov
cld
hlt
jno
jne
pop
mov
and
aad
inc
shll
pop
xchg
icebp
fdivl
clc
xchg
pop
loope
es
fs
sub
mov
dec
fistpll
aas
out
sbb
sarb
push
sub
jp
jo
jb
adcl
je
hlt
ljmp
ud1
les
and
popa
pop
cmp
stc
fdivs
pusha
movsl
imul
fisubl
mov
and
pop
xor
or
mov
out
adc
movsl
or
add
cli
int3
push
mov
inc
inc
cld
loopne
lods
sbb
aaa
jne
push
or
cwtd
stc
aad
jmp
or
je
push
dec
mov
clc
notb
xor
addr16
pop
mov
push
aaa
xchg
or
sub
stos
dec
jle
sbb
pop
xlat
xor
xor
ret
jb
push
movsb
cld
jns
ds
and
lahf
adc
jp
pop
gs
mov
nop
mov
int
or
cltd
lahf
aaa
cmp
jge
ljmp
mov
aam
jmp
push
sub
or
sahf
sbb
inc
adc
jle
jo
ficoms
daa
xchg
daa
lahf
mov
loop
movsl
mov
test
cs
aad
cli
cmp
cwtl
das
scas
ret
scas
pushf
xchg
pop
jbe
jg
pop
aas
jmp
dec
jns
pop
mov
cld
outsb
out
mov
dec
cs
icebp
ficoms
inc
mov
pop
inc
xchg
or
rcr
mov
loopne
mov
icebp
cmp
aas
mov
or
dec
pop
imul
lahf
js
outsl
mov
lock
pop
and
or
inc
movsl
xor
and
imul
data16
xor
or
pop
fidivrl
mov
pop
mov
jne
sbb
out
adc
jle
mov
cmpsl
jbe
nop
lock
add
sub
add
sub
cmpsl
mov
xchg
out
rcl
or
out
and
out
pop
out
and
aad
pop
stos
xor
mov
out
mov
xchg
cmp
loop
mov
es
mov
ficoms
cmovno
outsl
adc
stc
stc
xchg
aaa
nop
jg
fucomp
jb
out
lret
inc
mov
sub
and
dec
mov
ror
dec
or
add
sub
jo
cmp
push
ret
pop
mov
cmc
pop
rol
fs
adcl
adcl
push
test
cmp
xor
adc
mov
shll
add
pop
xor
or
test
push
insb
idivb
sete
mov
fldl
popf
pop
add
out
sbb
ret
lahf
rol
lret
shll
insl
lds
out
push
in
dec
mov
ja
pop
mov
pop
lea
mov
jl
lods
lahf
std
and
mov
mov
mov
mov
outsb
add
popf
jl,pt
inc
aaa
sbb
jp
out
fists
sub
mov
lds
xchg
cmp
mov
jmp
add
pop
int3
xor
xchg
roll
rorl
rorl
bnd
int3
jmp
dec
mov
lahf
mov
and
mov
test
adc
movsb
dec
movsb
aas
inc
lods
inc
inc
std
mov
mov
inc
int
cmp
push
jns
test
push
fnsave
mov
scas
mov
xchg
lret
jo
mov
mov
cs
push
mov
test
loop
adc
test
mov
js
mov
mov
jno
out
pop
cli
push
ljmp
and
pop
xchg
iret
rclb
cwtl
jne
cwtl
add
xor
stos
cmp
cltd
sub
into
and
in
ss
inc
pop
cmp
into
push
dec
mov
and
inc
into
sbbb
jbe
test
mov
std
rolb
adc
negl
sbb
aas
sbb
es
jp
test
shl
and
mov
or
lcall
mov
xchg
or
fucomi
leave
pop
insl
fwait
pop
pop
jmp
fldl
pop
xor
sbb
jge
xchg
push
inc
popf
in
push
imul
addr16
push
jl
jmp
lret
aad
xchg
xchg
xor
in
mov
fcompl
test
jo
dec
int3
adc
or
aas
mov
xchg
popa
into
lret
jne
ror
mov
fs
sbb
aaa
fcmovnu
adcl
xor
out
xchg
test
jnp
aad
xor
rorb
cmp
dec
xchg
push
orl
shrb
lret
add
xlat
outsl
bound
push
icebp
ds
lods
mov
xorb
cmpsb
jno
inc
dec
je
movsb
mov
fnstenv
jnp
ds
adc
adc
cmp
cs
loope
ljmp
js
stos
push
or
aaa
nop
sub
cmp
jne
mov
cmp
push
cmpl
inc
push
push
call
mov
mov
and
in
in
pushf
mov
cmpsb
stc
mov
rolb
xchg
dec
add
and
mov
pushf
aam
clc
aad
inc
mov
nop
icebp
dec
push
adc
divb
mov
dec
cmp
push
adc
in
into
push
xor
mov
push
adc
push
mov
dec
jg
enter
mov
pop
add
fs
jae
aad
adc
adc
push
mov
jb
cmp
pop
push
add
rcrl
push
cmp
jp
cmp
int3
stc
sub
mov
add
fldcw
dec
mov
cld
sbb
shl
dec
test
cwtl
adc
ds
clc
push
and
and
xor
loopne
arpl
pop
int3
mov
pop
in
ljmp
pop
and
cwtl
and
cltd
les
ja
out
ljmp
mov
mov
insb
mov
sbb
clc
mov
repz
shl
xchg
add
jnp
add
inc
stos
insl
inc
or
out
and
loop
mov
jle
dec
and
nop
add
icebp
or
sti
pop
fdivrl
pop
xor
repz
inc
in
add
push
stos
rep
mov
or
fucomip
dec
repz
sahf
in
mov
or
inc
ret
shl
and
inc
xchg
inc
js
push
xchg
cmp
xchg
mov
repnz
xor
stos
inc
or
mov
add
fwait
xlat
inc
dec
cmp
adc
inc
ret
aam
sbb
xchg
ja
cld
push
push
in
mov
bound
jo
ss
mov
cmpsl
push
enter
sub
daa
lds
pop
dec
mov
sbb
adc
bnd
jb
cltd
test
sub
jecxz
fwait
and
pusha
ljmp
xchg
mov
jno
mov
xchg
lock
mov
jb
in
in
js
stos
sahf
call
subl
sub
mov
inc
flds
mov
out
lock
shl
push
outsb
loopne
pop
push
push
pop
scas
rcrb
jnp
and
jnp
icebp
mov
fwait
adc
mov
hlt
push
pushf
push
je
push
xchg
pop
push
mov
dec
mov
fwait
cmpsl
mov
outsl
shrl
adc
les
and
xchg
dec
xchg
push
mov
dec
lcall
movl
stos
repz
mov
imul
jnp
jmp
outsl
mov
push
lcall
xchg
out
cmp
in
sti
mov
gs
out
lea
xorl
xor
aaa
dec
sbb
sbb
sub
out
aad
jge
scas
mov
push
int
insl
cmp
lods
imulb
mov
mov
jb
inc
std
cmp
std
icebp
sbb
xor
pop
in
jge
cmp
push
dec
adc
pop
divps
mov
int3
mov
dec
fcmovu
repz
mov
dec
mov
outsb
sbb
push
sbb
cmp
test
add
mov
call
fcoml
sub
cmpb
inc
inc
pop
inc
pop
imul
rclb
add
jle
adc
jp
leave
jecxz
shlb
pop
mov
inc
testl
adc
inc
stos
cmpb
xchg
lret
dec
mov
cld
sahf
js
mov
cltd
fldcw
add
or
inc
lcall
mov
dec
aad
aaa
outsb
push
cmpsb
push
push
out
jmp
dec
femms
jo
ss
push
xor
mov
stos
fidivrs
add
jns
out
ret
jne
pop
cld
sub
sub
scas
movsl
mov
mov
ss
xor
sbb
out
loop
mov
mov
movsl
xor
fs
fcompl
mov
leave
notb
in
xor
mov
test
and
loope
mov
jmp
pop
mov
jne
pop
fisubrs
fmull
aam
jge
dec
dec
pop
inc
sub
xor
push
mov
jge
or
adc
shll
push
push
xchg
and
enter
mov
cmp
mov
or
xor
aas
inc
repz
test
insb
scas
fldt
mov
or
jle
push
mov
iret
ror
mov
pop
push
xchg
ret
mov
pop
pop
test
cmp
mov
clc
mov
jne
xor
push
push
fs
jnp
pop
fldt
xchg
xchg
daa
inc
test
movsl
lock
shll
dec
pusha
push
cmovae
jmp
push
test
jge
and
roll
jns
loope
mov
out
xchg
icebp
or
pusha
sub
aas
sbb
repnz
lock
jnp
adc
icebp
cmp
std
out
inc
mov
daa
pop
addr16
xlat
push
in
mov
jp
inc
adc
push
arpl
lret
cmpsl
cmp
aad
sub
push
xchg
inc
iret
cmpl
pop
push
in
or
idiv
xlat
cwtl
cld
mov
mov
aad
in
aas
test
out
sahf
lds
xchg
test
lock
lea
xchg
inc
xchg
add
mov
jecxz
dec
bound
jnp
in
cmc
pop
mov
xor
sbb
pop
dec
cli
jge
add
stos
and
lahf
je
jb
mov
pop
pop
sub
ret
sub
fmulp
add
bound
cli
dec
pop
mov
aaa
aad
movsl
rorb
imul
push
outsb
aaa
xchg
dec
rcrl
insl
sbb
sbb
mov
div
cmp
cltd
aas
sub
mov
inc
jp
arpl
adcl
lock
cltd
mov
lret
pop
and
test
mov
test
je
ss
inc
test
mov
sub
sbb
das
pop
sti
xchg
leave
sbb
es
stos
sbb
ljmp
mov
in
mov
and
int3
jl
and
filds
xor
out
or
xor
shll
push
sbb
push
daa
xchg
int3
mov
jmp
xor
and
cmpsl
nop
call
pushf
sbb
sbb
inc
popa
inc
rorb
inc
sbb
lods
and
popf
mov
pop
and
dec
in
or
mov
and
loope
stos
stc
jno
jnp
stc
xchg
pop
das
out
adc
xlat
js
notb
mov
mov
pop
lahf
pusha
inc
sub
mov
lret
push
jbe
sub
or
into
ret
or
sub
fildl
dec
pop
jmp
lock
int3
mulb
stos
or
inc
imul
dec
mov
ss
or
pop
fistps
add
ja
js
fs
mov
movsb
inc
dec
movsb
movsl
adc
faddl
jne
xchg
repz
sbb
aaa
call
jno
rolb
pop
xchg
mov
inc
call
dec
cmp
loopne
shl
xlat
lret
and
pop
inc
leave
scas
dec
push
dec
push
rorl
js
inc
movl
xor
gs
out
shrl
mov
pop
mov
pop
outsb
dec
push
xchg
mov
adc
outsl
inc
les
sar
test
push
push
pushf
lahf
cmovbe
ljmp
dec
fs
pusha
addr16
fdivs
push
cmp
icebp
inc
and
xchg
xchg
xchg
ficomps
cmova
sahf
dec
cs
stos
nop
adc
jmp
cmp
dec
push
jbe
aad
scas
popa
add
lods
mov
dec
mov
decb
ljmp
inc
pop
shr
push
addb
cmpsl
adcb
pop
inc
inc
fidivl
test
mov
lds
aam
ret
push
xor
ret
mov
mov
adc
das
inc
test
dec
pusha
pop
notb
mov
xchg
test
inc
jo
frstor
nop
adc
outsl
dec
jp
stos
jae
sub
dec
les
push
push
pop
bound
mov
cmpsb
mov
out
sti
es
stc
aas
js
notl
mov
lahf
adc
std
pop
sub
leave
xor
jo
in
test
mov
rcr
arpl
xchg
fcompl
fbstp
loop
imul
push
pop
daa
xor
cmpb
xor
pushf
addr16
xchg
imul
sti
sub
mov
bnd
cmp
jl
cwtl
lea
cmp
adc
andb
cmpsl
mov
out
dec
sbb
push
ljmp
lret
cltd
js
sbb
insl
lret
mov
es
lods
pusha
in
mov
push
add
ss
dec
out
dec
or
orl
jmp
cmpsl
gs
test
sbb
popa
mov
mov
xchg
mov
mov
push
pop
js
push
notl
lahf
out
xor
pop
cmp
mov
scas
aam
popf
lret
fisttpll
enter
push
inc
repnz
pop
mov
test
or
xchg
pop
rorl
in
mov
mov
jle
cmp
aaa
fscale
cli
repnz
adc
cs
mov
test
inc
cltd
ret
xchg
or
mov
mov
mov
lahf
sbb
xor
jl
test
inc
dec
ljmp
xchg
std
or
fstps
add
cmpsb
test
cltd
fiadds
inc
and
mov
daa
pop
xor
jmp
jbe
dec
jns
pop
pop
sarl
outsb
popf
or
cmp
outsl
hlt
pop
cmp
xor
adc
movsl
cwtl
push
mov
mov
sub
js
popa
das
adc
jle
inc
test
shl
mov
aas
lods
mov
lret
xchg
into
fs
sbb
ljmp
leave
cli
mov
fwait
pop
jbe
sub
inc
or
das
cmp
pop
popf
sbbl
push
xor
pop
inc
pop
fs
scas
push
inc
pop
in
xchg
lock
in
sbb
repnz
adc
cmpsb
mov
imul
or
jl
out
fnstenv
popf
adc
lock
mov
dec
mov
leave
xlat
test
movsl
cmp
xlat
movsl
sbb
jl
das
jmp
cld
dec
adc
and
call
fdivl
aas
lock
adc
outsl
jns
adc
in
lret
pushf
scas
mov
xchg
push
push
fistps
imul
jmp
add
jmp
mov
ss
enter
cwtl
in
stos
mov
mov
sbb
pop
lods
insl
or
enter
jne
jo
xchg
cmp
iret
and
mov
shrl
rolb
ss
sbb
xchg
mov
jbe
cli
push
test
cwtl
sbb
in
bts
dec
dec
inc
cmp
cmpl
xchg
xor
mov
dec
mov
and
ljmp
fwait
push
or
xor
xchg
inc
les
add
stos
in
std
push
xchg
dec
test
aaa
int3
add
mov
cmp
xor
or
adc
cmc
mov
xchg
xchg
std
mov
ret
push
repz
fsubs
or
jmp
add
jp
stos
fwait
push
cmp
out
and
ret
and
enter
scas
inc
stos
sahf
mov
xchg
cmp
inc
mov
add
enter
in
jl
dec
add
adc
mov
push
leave
test
mul
je
loope
int
push
push
push
sbb
cld
jle
inc
inc
xchg
dec
push
jp
pop
ds
pop
aam
in
pop
call
and
jnp
push
add
fiaddl
cmp
loope
adc
loop
arpl
lret
pop
popa
pop
push
fildll
push
sub
inc
inc
in
adc
jnp
rcrb
xor
loop
jae
push
lds
mov
hlt
jns
mov
xchg
and
scas
test
sub
out
repz
or
xchg
dec
cld
mov
pop
das
cmp
mov
xlat
mov
in
sbb
fisubrs
fnstenv
push
js
inc
pop
xor
xchg
xchg
repz
xchg
test
jns
jl
mov
xchg
sub
push
pop
aaa
addr16
mov
dec
adc
push
push
adc
sub
and
gs
in
sbb
push
pop
cltd
cmpsb
adc
adc
push
rorb
xchg
and
mov
fcoms
int3
popf
in
jnp
xchg
les
nop
xor
inc
rorl
movsb
aam
ret
jne
and
icebp
cmpsb
dec
dec
leave
pop
jae
fisubl
dec
lock
fwait
adc
mov
mov
or
stc
lahf
addl
lret
cmp
cli
push
fsub
push
inc
fsub
outsb
pop
nop
xchg
mov
sti
jno
jmp
inc
je
leave
mov
inc
adc
cmp
mov
adc
adc
sub
into
sub
pop
jae
ret
sub
xor
fidivs
cmp
or
inc
pop
mov
sbb
in
in
insl
gs
cs
lahf
add
fstl
rcl
push
and
xor
movsb
not
mov
mov
or
ret
inc
ror
roll
das
int
dec
mov
or
push
es
rol
into
add
nop
jae
add
out
push
xchg
ljmp
ss
xor
mov
ss
and
in
jo
clc
inc
je
mov
insl
lahf
arpl
xchg
ret
cli
int3
nop
dec
inc
fistpll
cmp
rcl
clc
stos
fimull
jns
cli
mov
cmp
cmp
insb
fwait
pop
adc
pop
pop
ja
call
pop
cmp
push
sbb
push
fucomip
dec
mov
hlt
adc
cli
push
mov
movsl
xchg
xchg
fadds
stc
push
scas
sarl
popa
jl
in
loopne
sub
int3
sub
and
and
lds
pop
or
jge
je
add
sbb
clc
sub
mov
jae
mov
cli
subps
ret
test
pop
cmp
lock
mov
mov
gs
test
jbe
push
and
push
test
je
push
and
pop
les
sbb
dec
cmp
xchg
xor
and
call
gs
add
mov
shl
add
lcall
mov
mov
rolb
rcrl
mov
pop
mov
jge
fisttps
dec
test
test
xchg
mov
pushf
sahf
and
std
cs
rcr
scas
pop
movsl
mov
sub
les
mov
shll
lock
mov
dec
mov
adc
gs
add
inc
xchg
mov
lods
mull
sti
imul
sub
or
cmpsl
mov
in
mov
xor
jp
pop
lea
cltd
test
dec
pushf
ret
daa
cmpsb
rcr
or
or
ja
xchg
lods
lcall
dec
int3
shlb
adc
sarb
fcoml
sbbb
dec
xchg
lret
jp
loopne
lock
fildll
dec
add
aaa
and
xchg
inc
mov
or
daa
test
sbb
cs
jno
inc
lods
dec
ss
dec
sbb
int3
xor
scas
dec
pop
pop
xchg
ret
test
mov
mov
cmpsl
imul
stos
mov
outsb
and
dec
insb
jg
iret
arpl
movl
insl
xchg
cmp
stos
push
xor
movsb
add
mov
mov
jecxz
popf
xor
push
sbb
pushf
cmp
test
stos
popa
or
dec
dec
subl
add
push
and
pop
fmull
push
inc
jmp
mov
xchg
dec
sub
loope
xor
lret
rcl
xchg
cmp
mov
mov
mov
arpl
dec
mov
inc
nop
andb
xchg
xlat
pop
fildl
add
rorb
arpl
in
and
pop
cmpsl
dec
mov
mov
daa
in
or
subb
pop
add
loop
pop
outsl
hlt
pop
push
inc
fiadds
mov
xchg
dec
cmp
xor
mov
fbstp
cld
xchg
cmpsb
or
xchg
repz
mov
push
fcomi
clc
xchg
hlt
aaa
sub
pop
mov
xor
cmpsl
mov
shrb
movsl
neg
aad
sbb
lea
cltd
mov
pop
mov
arpl
lcall
fadds
jge
dec
shlb
mov
push
ljmp
mov
fldt
and
lods
xlat
xor
mov
mov
aaa
mov
mov
cmpsb
cmp
jl
and
lahf
xorl
dec
add
push
das
add
xor
push
ret
imulb
fcoml
cmp
inc
xchg
icebp
mov
cmp
ret
or
pusha
call
mov
lock
push
lret
cmp
dec
add
xchg
sbb
xor
xchg
dec
mov
sbb
les
jae
data16
xchg
mov
inc
mov
pop
adc
jne
jno
pop
mov
pop
mov
push
pop
les
aaa
fsin
sub
xchg
sub
or
push
jno
sub
out
ret
or
es
imul
inc
adc
flds
pop
in
cmc
and
add
xor
sbb
fwait
aad
adc
pop
mov
dec
lods
jnp
sbb
dec
add
pop
cmova
js
lret
xchg
shl
ds
push
sub
lds
xchg
ficompl
mov
xor
cwtl
jecxz
push
adc
sti
je
adc
adc
sahf
call
add
subb
pop
add
cmp
ljmp
in
scas
stc
push
pop
cmpsl
pop
aam
outsb
fadds
lahf
inc
mov
push
ret
inc
mov
rcrl
rolb
jp
sub
add
xchg
imul
cmp
cld
clc
aaa
adc
inc
mov
into
inc
out
arpl
stc
ss
dec
hlt
ror
ret
adc
outsb
xor
cmp
jno
out
lret
pop
mov
stc
pop
or
aas
sti
pop
je
xchg
mov
mov
xor
adc
cmpsb
iret
jns
mov
sub
dec
mov
test
subl
test
sbb
cmp
jp
push
lcall
cltd
mov
cmp
add
jne
push
inc
test
pushl
xor
mov
add
enter
sub
cld
fldt
out
xchg
mov
stos
stos
mov
mov
cmc
dec
icebp
inc
sbb
or
arpl
and
xchg
jae
out
loopne
jb
add
xchg
ljmp
add
xor
daa
adc
mov
shll
xor
pop
testl
adc
imul
js
cmp
ds
adc
mulb
xchg
movl
xchg
iret
addr16
fcmovu
ds
xchg
inc
je
movsl
or
and
adc
js
mov
adc
mov
xchg
aad
popa
mov
je
jl
push
lods
rolb
rcll
in
mov
rolb
repz
ret
loopne
stos
or
pop
repnz
mov
add
or
js
aas
sub
ljmp
inc
ja
xor
mov
in
lods
adc
jp
rcll
lds
jns
inc
or
lods
cli
mov
sbb
fmul
xor
or
ret
mov
pop
out
xor
aad
bound
or
in
jo
out
movsb
sub
repnz
nop
mov
lahf
xchg
fdivrp
repnz
fcomps
mov
inc
mov
dec
not
mov
sub
and
cmp
push
or
adc
xor
lret
push
rcr
dec
mov
lret
adc
xor
mov
iret
insb
call
push
push
lods
push
leave
lcall
cmc
movb
sub
jnp
sub
daa
movsl
sub
stc
xchg
into
aaa
insb
dec
hlt
and
push
adc
ss
aam
add
movsb
shrl
cmp
inc
add
outsl
sbbl
add
xor
sub
cwtl
and
addr16
lahf
sub
iret
mov
pop
test
repz
stc
mov
sti
jecxz
xchg
rorb
adc
xlat
cli
cmp
or
or
cltd
xor
call
insw
andl
add
arpl
test
xor
hlt
popa
xor
adc
mov
leave
roll
hlt
xor
imul
bound
sti
sbb
sbbl
mov
mov
sbb
pusha
push
jnp
sbb
mov
rol
ss
jb
mov
xchg
fld
js
mov
mov
hlt
mov
jp
push
pop
cwtl
add
mov
xchg
jo
or
mov
mov
ljmp
in
ja
rcrl
and
push
cmpsb
push
fsubl
cmp
lock
dec
gs
pushf
cs
subl
add
pop
jns
push
ret
sti
add
push
mov
cmp
cmp
push
xchg
jg
gs
lea
fisttps
insl
pop
or
push
or
addr16
stos
fwait
cmpsl
xor
bound
mov
sarb
mov
pop
xlat
je
inc
push
or
in
shl
js
stos
fisubl
jo
add
add
xor
cs
push
cmp
mov
cwtl
or
jecxz
int3
rcrl
sub
xchg
inc
xor
jo
xor
cmpsb
out
push
and
dec
mov
incb
leave
mov
push
pop
mov
or
sbb
dec
rol
mov
adc
pop
repz
test
lods
push
insb
and
dec
mov
insb
data16
stc
sbb
dec
jecxz
das
push
insb
inc
sub
inc
mov
in
cmp
mov
mov
or
scas
sbb
cmpsb
push
add
ljmp
js
cmp
mov
fnsave
or
mov
pop
mov
xchg
push
in
push
and
insb
mov
pop
jg
out
inc
xor
xor
inc
and
push
cmp
pop
sti
push
sub
orl
lods
stc
insb
and
aad
pushl
mov
aam
pop
xchg
dec
push
dec
push
lret
gs
xor
pop
mov
push
inc
cmp
push
mov
scas
sub
jmp
dec
aas
adc
xlat
inc
lods
outsl
or
push
add
rorb
sbb
fwait
xchg
mov
xchg
frstor
nop
lods
insb
adc
icebp
adc
dec
pop
mov
in
mov
or
jbe
imul
daa
adc
movb
sbb
sbb
push
repnz
mov
inc
in
out
push
ja
test
icebp
mov
jg
or
sub
fwait
jnp
ss
adc
and
mov
cwtl
mov
rcrb
lds
and
xchg
xchg
push
and
test
frstpm(287
out
ret
out
je
jmp
cmp
mov
sbb
mov
mov
jne
push
cltd
lret
ffree
push
xchg
sub
push
imul
lcall
enter
subps
xchg
cli
shll
dec
addb
cmpsb
mov
push
sbb
adcb
dec
sbb
cmc
stos
push
mov
iret
mov
cld
cmp
xlat
scas
loope
xchg
sbb
sub
sahf
sbb
aaa
imul
loope
sti
lods
sub
out
out
dec
xchg
inc
stos
dec
dec
jbe
lcall
negb
das
cmc
push
cltd
xchg
push
xchg
outsl
or
mul
shll
jle
push
mov
aad
dec
cmp
xchg
xchg
fnstsw
adc
sti
mov
xor
lods
mov
jo
repz
dec
push
out
js
add
rcr
dec
lret
xor
aas
mov
cmpsl
add
rcll
sub
jge
in
mov
aaa
pop
push
jmp
xchg
test
lds
and
mov
stos
and
sub
lods
or
cmpl
sbbb
stc
scas
pop
inc
out
inc
bound
into
mov
fwait
ja
push
sub
out
xchg
lods
call
iret
pop
and
mov
das
dec
mov
or
or
mov
fmulp
add
or
movsb
mov
out
inc
mov
mov
pop
cli
js
icebp
mov
test
fisubrs
push
ret
cmp
test
mov
std
imul
jmp
cltd
jb
in
int
jge
loope
mov
mov
push
and
push
sbb
orb
sbb
aam
hlt
pop
xchg
push
mov
jle,pt
fimull
push
add
shlb
and
pop
sub
inc
gs
icebp
popa
lcall
add
xchg
mov
push
outsl
cmpl
mov
stos
call
decl
push
push
add
push
sbb
mov
xlat
fwait
sub
or
cmpsb
sbb
orl
adc
popf
shl
mov
lock
push
push
aam
loop
xor
add
cmp
je
sbb
into
div
mov
and
lock
jge
jle
push
js
sbb
sbb
in
add
mov
inc
jle
mov
sbb
cmp
fists
addr16
addr16
out
dec
jno
xor
daa
stos
cmp
push
daa
out
xchg
scas
cwtl
dec
nop
jae
in
fisttpl
movsl
pop
push
arpl
pop
das
clc
sarb
test
push
into
clc
sbb
pushf
outsb
cmpsb
daa
sbb
push
sub
repz
aam
bound
add
or
mov
adc
mov
mov
lods
scas
dec
and
lret
inc
jge
shrb
call
fs
clc
out
sbb
jl
cld
and
lcall
stos
and
icebp
or
out
sar
fdivl
adc
mov
in
push
jp
jl
aas
push
std
lock
repz
jg
add
je
les
hlt
in
out
mov
xchg
insb
or
lcall
mov
and
in
das
call
cmp
xchg
lcall
out
out
int
fld
cmp
aaa
stos
rorb
xchg
xchg
bound
pop
mov
cmp
fsubp
inc
in
sahf
xchg
lock
pop
jmp
jecxz
adc
xor
stos
mov
mov
jo
mov
repz
mov
fstl
test
mov
push
ud0
lock
cmc
adc
xchg
cmp
xor
aad
punpckhwd
fidivs
inc
frstor
push
gs
mov
cmpsb
mov
lock
dec
mov
inc
mov
stc
dec
xchg
mov
sub
mov
call
push
add
xchg
jle
xchg
jge
pop
movsb
xchg
into
cmp
movl
mov
push
inc
sbb
xchg
lods
test
jbe
js
cmp
lret
push
cmp
loope
xchg
sub
loope
adc
mov
fmulp
mov
jle
xor
cld
adc
add
fnstcw
popf
pop
adc
mov
sbbl
jmp
stc
xchg
sti
sbb
mov
mov
jnp
call
jno
xor
and
test
adc
mov
jb
sbb
mov
fs
push
inc
sahf
div
mov
call
cmp
jp
je
lods
shl
push
dec
aaa
sub
and
push
mov
sub
popf
ret
xor
jns
sbb
sbb
mov
insl
xchg
add
dec
mov
std
cmc
repnz
idivb
fsubrs
push
pop
push
mov
cmp
pop
or
imul
cmpsl
jmp
sub
movsl
dec
inc
rclb
sbb
sar
sub
push
jb
ds
ficompl
or
jl
dec
push
inc
push
sbb
ja
leave
clc
cmp
test
inc
movsb
in
xor
lret
jl
pop
clc
xchg
das
into
add
jnp
shl
push
fs
leave
pop
nop
pushw
ljmp
ja
orb
bound
fldenv
xor
push
sub
aas
cs
aad
cltd
mov
das
add
sbb
sahf
sub
mov
fdiv
outsl
fstpl
in
stos
shl
xor
push
aaa
sbb
jecxz
pop
push
mov
lahf
outsb
pop
add
add
jge
xchg
enter
addb
loopne
inc
test
out
sub
addl
jmp
and
call
sub
fs
adc
push
xor
rol
xchg
lret
lcall
or
imul
int
dec
push
roll
test
lcall
pusha
clc
lds
loop
jecxz
lock
mov
sbb
cltd
ret
mov
pop
arpl
cmp
dec
cmp
mov
imul
dec
xchg
stos
shrl
cmp
inc
xlat
jnp
aas
mov
inc
xchg
inc
xchg
mov
mov
das
mov
mov
data16
mov
sti
insl
repnz
xor
mov
shll
cmp
cmp
js
jmp
xor
pop
mov
test
mov
mov
push
aas
sub
adc
and
dec
ss
sub
xchg
and
sub
push
std
xchg
fcomp
or
stc
lahf
inc
jnp
cmp
rolb
add
adc
mov
push
insl
mov
jmp
insb
ret
movsl
idivl
fisubs
inc
scas
lock
mov
sub
into
pop
fsubs
xchg
shlb
and
sub
test
aam
fisttpl
cld
movsb
xor
sbb
add
push
inc
mov
or
pop
jl
sub
repz
jno
es
lret
fwait
das
jo
jle
cs
push
repnz
mov
sbb
loopne
cmp
jmp
add
adc
add
jno
xchg
mov
mov
xor
sub
movsl
jo
jae
and
mov
es
pop
xchg
mov
mov
pop
xor
out
imul
or
scas
std
aad
movsl
cmc
data16
cmpsl
xor
mov
out
je
jns
mull
push
data16
mov
dec
test
lcall
test
inc
fs
or
scas
hlt
or
cwtl
ret
and
out
movsb
inc
push
cli
dec
add
mov
movsb
mov
mov
cmp
xchg
cs
call
jecxz
sbb
push
push
test
call
ret
lods
popa
dec
sub
pop
push
pop
pushl
jnp
xor
shlb
push
xchg
push
xor
mov
loopne
ja
add
out
fisubrl
outsb
mov
dec
not
outsl
gs
and
das
inc
dec
or
sarb
jmp
mov
mov
insl
sub
adc
inc
fadd
xchg
sub
int3
shlb
sbb
pop
adc
lret
ficompl
mov
ja
testl
mov
mov
mov
mov
mov
xchg
pop
call
mov
jmp
sbb
mov
fidivl
sbb
and
inc
jg
aam
rorl
leave
rclb
imul
ret
mov
sbb
in
std
je
and
pop
outsb
push
xor
adc
adc
cs
jecxz
cmp
push
jnp
push
and
in
movsb
scas
jo
sbb
inc
pop
call
jae
adc
push
mov
pop
lahf
jnp
sub
lods
lock
cltd
cwtl
jnp
pop
sbb
addr16
adc
sub
jnp
dec
mov
mov
or
push
cmp
lea
test
mov
test
mov
popa
je
popf
inc
dec
push
push
push
in
out
std
mov
cmp
push
aas
jmp
sub
insb
push
xor
jns
xchg
imul
mov
push
fisttpll
sbb
push
push
addl
loop
clc
sub
sbb
fxch
push
mov
xchg
push
push
mov
lock
sbb
ds
shlb
mov
cmpsb
cmpsl
loope
push
mov
mov
cmp
fldenv
push
adc
jecxz
fiaddl
or
sbbb
push
ret
shll
negb
hlt
xor
mov
pop
addr16
push
and
das
adc
cmpsb
movsb
rolb
xchg
push
out
mov
pop
aad
add
hlt
icebp
jg
in
mov
or
mov
pop
lea
mov
icebp
popa
dec
xlat
ljmp
cmpl
movsb
or
stc
pop
lret
sbb
push
cli
lds
or
test
rolb
adc
push
add
mov
push
movsb
mov
inc
fimuls
mov
inc
mov
sbb
clc
dec
mov
and
cmpsb
add
pushf
es
dec
ds
pop
xchg
xor
rclb
imul
push
pop
aas
pop
in
add
sbb
mov
push
orl
loop
nop
xchg
cmc
addr16
out
fucom
fistl
jbe
xor
lea
stos
mov
gs
cmp
sub
push
test
sbb
roll
push
out
jmp
out
and
je
in
lods
mov
rcrl
sbb
int
addr16
and
fdivrs
inc
push
dec
out
push
inc
jecxz
jge
repnz
xrelease
shl
mov
mov
pop
in
xor
jmp
pop
xchg
adc
in
jl
dec
sub
mov
cli
pushf
lods
xchg
add
lock
dec
test
xchg
test
fcomps
inc
jge
int
fucomip
cmpsb
shl
push
lea
pop
xor
pop
int
and
push
rolb
divb
cs
mov
pop
shlb
cmp
push
mov
ret
inc
int3
inc
xor
mov
fisttps
pop
sub
lods
inc
movsl
xchg
and
add
mov
es
xchg
jmp
mov
pop
mov
jmp
lret
dec
push
pop
push
inc
cmpsb
add
lcall
mov
lahf
out
ret
jl
in
push
cmpl
inc
sub
mov
jecxz
arpl
sub
ret
in
out
and
jb
mov
and
add
nop
mov
pusha
inc
mov
lods
movsl
mov
push
mov
in
mov
add
add
dec
jle
jmp
fnsave
movsl
mov
into
stc
inc
mov
sbb
push
dec
push
pop
lds
out
sub
inc
xchg
outsl
pop
jmp
fists
cmc
decb
push
sub
incl
mov
icebp
outsb
jbe
pop
xchg
pop
sbb
and
xor
mov
jns
mov
mov
adc
insb
dec
lret
outsb
mov
aaa
jmp
pusha
xchg
cmp
mov
mov
loope
pop
mov
add
jl
data16
inc
jmp
movsb
test
cli
cmp
aam
mov
xor
idivl
int3
cmp
dec
dec
fisubs
arpl
push
push
lcall
mov
push
scas
pop
xchg
mov
xchg
mov
fstpl
cmp
into
sub
dec
popa
adc
jbe
rcll
int3
inc
jecxz
fisubrs
push
cmp
sbb
bnd
push
js
mov
sub
xorb
and
mov
sub
adc
scas
in
jg
xor
pushf
lret
test
inc
dec
mov
negl
mov
mov
inc
call
push
jnp
testb
cwtl
inc
cmpsl
out
mov
ret
add
xchg
and
cmp
loop
test
or
insl
pop
scas
xor
pop
sub
insb
mov
push
orl
and
mov
lods
push
cmp
or
shll
dec
jbe
out
pop
pushf
dec
add
xor
or
xor
movaps
loope
xadd
pushf
nop
mov
mov
mov
jb
sbb
inc
and
imul
int3
jo
pusha
cli
stos
add
nop
push
int
xlat
cmp
jl
pop
pop
movsl
decl
mov
push
push
fcoml
loopne
cmp
lea
lret
sub
xor
lods
das
cmp
ss
push
and
lods
stc
jle
mov
adc
push
inc
call
cli
test
imul
and
fwait
mov
in
testl
lcall
les
roll
sahf
mov
test
je
add
push
popl
xchg
pop
pusha
jmp
aas
mov
mov
push
sbb
sub
fisubrl
push
fs
dec
xchg
fisubrs
insl
sub
arpl
arpl
xlat
mov
loope
sub
jb
jo
fstpl
push
nop
ds
and
add
add
pop
push
dec
pop
mov
aas
cwtl
xchg
jecxz
fdivrl
pop
leave
ljmp
and
stc
ja
or
out
jecxz
pop
cmp
mov
mov
out
mov
aaa
ret
pop
insb
fldenv
call
shl
and
mov
js
sahf
ret
int3
cmp
pop
mov
call
xor
adcl
pop
jbe
out
stos
add
pop
outsb
jb
je
cmp
jo
movsb
dec
mov
cltd
cwtl
fstps
lret
rcrb
mov
insl
sub
sub
mov
inc
mov
xor
mov
sbb
andb
push
rorb
les
mov
out
push
leave
mov
inc
iret
mulb
mov
mov
pop
daa
adc
lret
mov
adc
sub
pop
out
outsb
add
mov
icebp
sbb
les
xchg
enter
cpuid
mov
cmc
pop
ja
into
cmc
pop
or
daa
mov
rcrl
scas
into
cmp
imul
dec
addr16
or
leave
pop
scas
sbb
shl
push
jecxz
sub
rol
repnz
call
cmp
fnsave
mov
out
pop
xor
xor
mov
aam
cmp
pop
ret
shrl
arpl
movsl
mov
jns
dec
inc
loopne
jmp
pop
jo
popf
call
lret
dec
cmpsl
stos
stc
sub
fmul
or
bound
lods
xlat
mov
out
test
sbb
nop
pop
icebp
pop
pusha
add
insb
arpl
jp
cmpsl
arpl
pop
bound
sub
aam
xor
in
repnz
test
adc
sbb
mov
or
push
mov
cmp
pop
cmp
lea
movsl
pop
and
mov
xor
iret
enter
dec
add
mov
lea
pop
xor
cwtl
jle
in
insb
push
int3
xchg
jne
push
bound
shlb
push
mov
shl
inc
addr16
daa
mov
pusha
or
and
mov
cmp
inc
mov
testb
pop
ja
outsb
xor
es
sbb
pop
ja
adc
out
imul
jl
pop
dec
in
loop
mov
mov
xchg
outsb
sub
cli
inc
gs
mov
pop
fstpl
xchg
fdivl
cmpsb
lahf
sub
scas
loopne
ss
shr
pop
add
ja
mov
xchg
adc
scas
push
insb
cld
outsl
dec
pop
adc
jl
jne
inc
and
add
sbb
mov
jb
pop
pop
adc
inc
enter
imul
sti
pop
pop
add
aad
ficoms
cmp
imul
test
jmp
repnz
mov
mov
imul
mov
fdivs
or
pop
repnz
fisttpl
sub
imul
or
fwait
mov
vmovddup
scas
ja
std
aad
adc
jge
divb
inc
cwtl
out
scas
call
in
push
mov
movsb
loopne
insb
jns
lret
cmp
mov
fs
adc
incl
nop
xchg
pop
arpl
test
cmpsl
jle
arpl
insb
js
mov
scas
aam
dec
fiaddl
pop
iret
hlt
cs
fistl
clc
mov
inc
out
jg
rorb
xchg
jl
adc
or
dec
enter
movsb
adc
cmp
fdivs
add
jbe
cli
je
sub
lea
fcom
sub
push
cmp
fimuls
adc
jp
xchg
fsts
pop
jo
jnp
sub
jne
out
and
popa
lcall
repz
cld
loop
xor
lahf
loop
js
add
cld
cmc
mov
seto
mov
lock
test
jb
sub
stos
cld
or
shll
sbb
sub
sub
jecxz
ljmp
pop
fcoml
add
cmp
addr16
adc
mov
ss
sbb
rcl
rolb
lret
popa
notl
push
ljmp
add
lock
inc
insl
dec
and
popf
cmp
xlat
adc
or
into
jmp
adc
inc
jmp
in
xor
mov
jecxz
cwtl
sbb
fs
jle
leave
add
sbb
hlt
mov
pusha
dec
outsl
loopne
pop
xor
sbb
leave
pop
xchg
stos
out
shl
negb
push
sub
cmpb
movsb
out
lcall
push
insl
and
xchg
repnz
xchg
lret
outsb
bound
lods
mov
nop
pop
aam
out
jmp
loope
xlat
mov
add
filds
les
add
scas
sahf
scas
int
aam
insl
insl
xchg
lss
push
xchg
in
leave
lds
push
out
mov
xchg
daa
daa
jg
imul
dec
lahf
pop
adc
cmp
jae
sti
lds
mov
adc
jge
add
and
dec
push
add
sbb
arpl
dec
ss
ret
dec
dec
sub
mov
movsb
mov
push
mov
scas
inc
or
mov
les
fs
xlat
mulb
in
cvtdq2ps
sub
test
add
inc
iret
dec
dec
daa
fistl
int3
jg
and
sahf
cld
nop
das
adc
add
fsubrp
or
cmovge
inc
daa
fwait
sub
mov
into
mov
in
mov
push
xchg
sub
rolb
sub
inc
lea
xchg
dec
movsl
popa
pushf
rcr
pop
out
push
lahf
sar
dec
js
es
mov
bound
lods
jle
or
xchg
out
adc
in
or
add
push
inc
fsts
jno
dec
and
mov
test
outsb
lods
lret
stos
mov
adc
sub
es
dec
xchg
and
fstps
int3
insb
stos
in
xor
movl
cmp
sub
cltd
jbe
dec
ret
ja
push
lcall
jo
xchg
ds
mov
jmp
xor
pop
adc
push
sub
add
sub
stos
push
jb
imul
imul
or
and
pop
mov
cmp
xchg
jbe
cmp
iret
lods
in
lcall
sbb
rclb
jle
mov
jae
aad
adc
inc
int
test
outsl
push
movsb
outsb
pusha
rcrl
popa
sub
sahf
jl,pn
mov
sbb
mov
jp
sbb
nop
lds
inc
sti
cmpb
xchg
pop
jmp
imul
lea
jle
stos
sub
adc
daa
mov
xchg
push
lcall
push
fldt
ljmp
test
pop
push
adc
and
inc
inc
lods
xor
das
in
pop
adc
sbb
in
dec
out
cmc
mov
out
out
sub
inc
fildl
xchg
jbe
and
cmp
push
xchg
jns
pop
xor
push
cli
movl
adc
mov
in
mov
into
or
int
dec
insl
std
push
push
xorl
out
sar
dec
aas
stc
jl
push
ss
adc
dec
jmp
arpl
xor
stc
lock
int
hlt
xor
in
mov
xchg
lcall
es
mov
xor
jl
fmul
mov
testl
push
push
sub
sbb
test
lret
xchg
lea
inc
incl
and
in
jno
lds
mov
arpl
popa
dec
push
xchg
orl
sbb
les
xchg
push
mov
add
sbb
sub
je
das
clc
xchg
jp
pop
adc
push
mov
int
popf
movsl
ss
in
jge
mov
insl
jne
data16
mov
xchg
fwait
cmpsb
popf
shlb
push
popf
imul
leave
xlat
aad
shr
adc
mov
pop
or
ret
dec
test
mov
popf
push
in
mov
stos
adc
fisubrs
and
imul
cmp
jb
aad
xlat
popf
pop
xchg
dec
fadd
flds
icebp
insl
cmc
lea
bound
cmpsb
pop
movswl
dec
xchg
mov
mov
jp
rcr
cld
adc
and
xchg
arpl
frstor
adc
repnz
jnp
fdivs
or
xchg
je
ds
mulps
nop
out
bound
mov
or
or
loopne
or
jmp
mov
aam
pop
sbb
xlat
out
adc
or
addr16
mov
xchg
push
pop
std
push
mov
push
pushl
loope
sbb
in
scas
fnsave
imul
mov
into
xchg
iret
addr16
pop
and
sub
jb
add
fs
push
add
and
ficoms
xor
lds
scas
les
cmc
xchg
mov
inc
mov
or
xlat
in
mov
sbb
sub
mov
inc
pop
jnp
push
fcomip
addr16
loopne
out
cli
sub
gs
add
sbb
add
leave
sbb
push
mov
dec
or
test
imul
jo
inc
and
inc
movsb
repz
mov
pop
inc
add
gs
test
xor
pcmpeqd
adc
mov
test
out
xchg
xabort
test
psllw
clc
dec
pop
mov
test
push
xor
outsl
mov
mov
cmpsl
aas
xor
rolb
lock
jo
decb
sahf
xchg
ja
aam
mov
jl
fbstp
and
mov
mov
mov
daa
push
bound
sub
push
jp
in
adc
or
cs
test
dec
movsb
insl
inc
sub
adc
cs
loop
dec
je
movsb
mov
enter
test
cmp
scas
mov
dec
and
sub
iret
and
ja
mov
mov
mov
pop
mov
mov
push
sbb
pop
pushf
sti
sbb
lahf
in
push
xor
loopne
int
push
ret
push
push
addr16
call
xchg
adc
xchg
or
out
out
mov
and
jb
xchg
out
adc
sarl
lods
nop
jnp
cli
lods
js
push
rorb
or
xchg
or
in
shrl
test
icebp
icebp
cld
jmp
std
jp
cmc
out
push
clc
push
ror
inc
pop
pop
ja
push
es
xchg
sub
jg
enter
insb
imul
cmpsb
mov
sub
and
inc
dec
mov
es
rcrb
pop
lods
xor
sub
sti
mov
mov
ljmp
jb
push
xor
movb
ss
jge
aas
mov
and
inc
pop
dec
fmuls
mov
sub
sub
shrl
pop
idiv
roll
add
push
and
lea
jl
movsb
adc
cmp
mov
ss
mov
ret
sub
sahf
sbb
shrl
lea
cmp
fbld
leave
aaa
push
aad
and
or
in
sbb
push
xor
bound
push
mov
cmp
div
or
jb
cmp
daa
sub
inc
cli
sbb
lret
lcall
cmpsl
dec
leave
xor
lea
mov
mov
mov
pop
xor
push
adcl
xchg
adc
scas
sub
pop
outsl
xchg
test
sub
jae
push
add
jae
mov
lret
ljmp
inc
gs
jp
pop
cmpsb
mov
xlat
pop
cmp
sbb
shll
cli
arpl
cld
and
push
out
cmp
div
daa
shl
and
subb
ss
pusha
fdivrs
imul
push
dec
vphadduwd
mov
pop
inc
into
add
jl
xchg
in
jp
inc
add
xchg
dec
push
es
adc
in
jo
push
rolb
je
mov
aad
lea
mov
stos
or
cmp
xor
aad
lds
dec
push
mov
mov
sbb
cmc
mov
leave
pop
mov
sbb
cmp
test
fisubrs
cmpsb
clc
jae
dec
call
dec
sbb
dec
and
mov
cmpsl
ret
jl
mov
jl
daa
cmpsb
push
filds
cmpb
sub
push
sbb
push
or
push
cmovo
les
xor
lods
test
pop
jb
mov
jns
aas
insb
dec
fwait
test
int3
sub
inc
dec
jecxz
gs
rcrl
sub
push
cmp
test
mov
sbb
add
and
mov
add
mov
hlt
stc
push
push
mov
pop
xchg
xchg
cs
sbb
fiaddl
sbb
mov
add
pop
add
in
imul
xor
in
inc
pop
ja
adc
fstpt
sbb
das
xchg
adc
pop
leave
mov
insl
out
push
cmpb
mov
test
jl
ljmp
mov
inc
cltd
lret
xor
adc
add
dec
and
shrl
xor
jne
imul
loop
inc
fildl
lds
dec
sub
xchg
mov
nop
jge
shr
aas
dec
test
lods
push
xchg
mov
xchg
lcall
sub
ja
fldl
push
cld
push
xchg
ljmp
xor
xchg
fs
test
adc
outsl
insb
inc
movsl
push
decl
ret
adc
or
icebp
mov
pop
ss
in
xor
test
adc
lcall
lds
or
inc
hlt
push
add
cmpsb
pusha
sub
mov
jecxz
or
aaa
pcmpgtd
daa
popa
pop
mov
pop
xor
hlt
cmpsl
sub
cmp
push
jns
add
mov
in
call
cli
push
sub
adc
pop
xor
pop
insl
mov
pusha
je
add
inc
xor
add
adc
xor
mov
xlat
cmp
jmp
adc
scas
mov
xor
push
cwtl
mov
arpl
add
inc
xchg
cmp
inc
cltd
adc
jb
mov
sub
in
xchg
push
mov
aam
add
test
loopne
cmpsl
movb
jg
mov
push
fistps
mov
aam
jmp
data16
mov
add
jmp
loope
outsl
xchg
adc
inc
ficompl
jae
and
nop
or
mov
cmp
stos
js
jns
sub
in
pop
bound
lahf
xor
dec
scas
add
sub
or
jb
sbb
mov
mulb
nop
jp
xor
insb
jle
stos
je
insl
dec
test
in
push
int
mov
mov
push
mov
stos
ret
inc
sbb
jg
add
repz
aam
xor
jle
cli
jb
aas
xchg
ljmp
dec
sbb
mov
stos
or
jmp
ljmp
test
add
mov
imul
and
addr16
or
cwtl
cmc
fcomps
pop
jne
cmp
mov
adc
jmp
sbb
jle
fldt
faddl
or
and
xchg
or
nop
stos
int
xor
fadd
pop
hlt
push
push
cmp
dec
mov
les
je
js
test
loop
push
pushf
mov
pusha
jg
or
mov
lods
xor
pop
das
test
sbb
cmp
call
add
loope
cs
loopne
cmp
sbb
jmp
jne
lret
cmp
test
adc
in
cltd
cmp
mov
mov
lods
mov
pushf
into
lods
popl
mov
rcrb
mov
dec
rorb
fxch
sub
daa
ror
test
sarl
sbbl
pop
mov
sbb
inc
ret
pop
sahf
sbb
outsb
in
lock
lods
xchg
mov
mov
xlat
jo
stos
insb
js
add
in
sbb
mov
pop
push
pop
lds
jns
mov
adc
cwtl
fcomp
lods
cmp
movsb
int
arpl
ret
pushf
test
cltd
sub
sbbl
dec
add
stos
push
cmp
shlb
out
in
icebp
adc
pop
pushf
pop
mov
jb
jnp
inc
lds
sub
sbb
out
dec
enter
dec
push
add
mov
xor
mov
popf
hlt
and
adc
fwait
stos
iret
lret
daa
pop
xchg
jmp
shlb
out
incl
pushl
je
test
adc
subb
mov
out
mov
incl
sub
adc
inc
ret
mov
push
add
lds
push
out
push
xor
aad
mov
nop
inc
mov
popa
lods
stos
inc
fs
mov
or
mov
enter
lods
ljmp
ret
push
fldcw
dec
enter
pop
mov
cmc
popa
sti
add
test
sub
inc
or
or
mov
je
nop
jno
addr16
pushf
mov
cmp
sbb
outsb
nop
into
inc
sbb
mov
outsb
ds
imul
scas
sbb
mov
push
mov
aaa
dec
ja
inc
xchg
sbb
push
sub
movsl
push
fwait
cmovo
repnz
cmp
mov
push
and
pop
fistps
dec
sub
jae
mov
or
adc
xor
adc
mov
xor
rol
cmp
inc
pop
cmc
push
les
jle
je
fwait
lahf
aas
xor
cs
in
call
push
fcmovnb
push
pop
adc
xor
movsl
adc
fcmovnb
out
aaa
mov
enter
mov
cs
arpl
aam
fmulp
or
sub
test
adc
and
hlt
add
xchg
add
in
aas
push
xorl
adc
leave
add
decl
hlt
jb
ret
cld
cmpsl
in
and
sub
mov
inc
xchg
or
cmp
repz
push
out
lock
jmp
popa
insb
stc
rcrb
dec
mov
sub
mov
mov
jp
push
xchg
addr16
jno
inc
jns
ja
adc
push
inc
aaa
sahf
sbb
ret
sub
je
out
insl
test
cmc
lds
xchg
inc
das
jl
ja
ret
xlat
cmp
jo
es
inc
popf
push
or
pushf
sbb
in
sub
xchg
iret
cmp
or
fiadds
push
cmp
xchg
jnp
in
ljmp
mov
push
sub
loope
cmp
jns
shl
sub
pop
fwait
stc
cmpsl
inc
ret
dec
xchg
mov
jnp
add
mov
aad
inc
movsb
sbb
add
loope
lds
in
scas
push
mov
mov
fidivrl
jae
cmpsl
les
mov
inc
sarl
xorb
dec
pop
div
mov
xor
inc
mov
mov
cmp
xchg
mov
cmpsl
push
adc
pop
jae
imull
add
addb
push
imul
inc
push
add
mov
sahf
hlt
imul
xchg
rolb
jnp
mov
jmp
imul
cmp
mov
popf
scas
and
mov
pushf
out
stc
inc
sbb
mov
mov
cmc
sub
add
or
or
push
loop
mov
lcall
jnp
and
scas
jge
xor
aam
mov
fcmovb
out
xor
sub
mov
dec
sub
dec
xchg
and
cwtl
int
lahf
rcrb
mov
orb
sti
dec
cmp
stos
hlt
ljmp
into
pop
mov
mov
out
xor
into
sbb
adc
sub
inc
or
data16
pop
leave
cwtl
cld
outsb
lahf
sti
lret
jae
or
adc
or
negb
loope
sbb
sub
and
sarl
ja
push
fistpll
cli
movsl
lea
and
in
bound
jbe
and
fildll
and
mov
movsl
dec
pop
divb
popf
pop
mov
adc
into
mov
hlt
sbb
mov
mov
sarl
les
into
mov
out
das
clc
jmp
loopne
push
inc
sub
mov
push
jb
decl
mov
add
pushf
dec
xchg
in
xchg
mov
dec
push
dec
adc
pop
loopne
lret
jb
scas
xor
mov
pushf
bound
je
mov
loope
xchg
push
push
jp
sbbb
sub
fisttpl
push
int
mov
push
arpl
adc
add
clc
popf
sub
push
sbb
sbb
mov
push
pop
add
or
add
sbb
mov
arpl
xchg
or
inc
mov
cmpsb
sub
xlat
and
leave
xchg
jg
sub
mov
cli
loope
xchg
inc
enter
push
mov
xchg
add
sti
shl
repnz
mov
jbe
loopne
das
adc
cld
subb
nop
out
inc
lcall
pop
repz
les
ja
and
cmpsb
arpl
xor
jl
adc
pop
clc
sti
dec
test
inc
movb
mulb
mov
dec
mov
pop
and
test
bound
fwait
adc
sbb
js
pop
pop
and
ret
add
jp
jbe
stos
sub
aas
push
je
sbb
fistl
adc
dec
ds
push
push
xchg
cmp
pusha
adc
pop
pop
sarl
add
add
outsl
xlat
add
insb
xchg
cmp
push
pop
cld
enter
sbb
jb
and
add
inc
push
ljmp
ret
mov
aaa
pop
ret
cmp
shrb
cmc
lcall
in
inc
xchg
sbbb
jmp
push
test
std
aas
mov
in
faddl
pushf
les
push
andb
mov
mov
cmp
or
or
dec
jge
movsl
mov
push
push
mov
jp
push
cmp
cmp
es
mov
sub
add
xchg
push
loope
stc
mov
inc
pushf
stos
aam
inc
add
in
testl
inc
cld
jl
inc
pop
js
shrl
inc
push
xchg
jb
or
sub
inc
mov
cmp
dec
pop
insl
xchg
sub
and
pop
lods
in
pushf
jl
cmp
pop
xchg
in
sti
sub
loopne
mov
push
mov
into
fwait
cwtl
fidivrs
dec
mov
jbe
sarl
aas
dec
rcl
jmp
xchg
mov
lods
xor
es
sbbb
inc
add
push
les
nop
and
dec
leave
imul
mov
and
adc
jg
mov
aas
imul
pop
into
movsb
sti
xor
fistpll
add
mov
push
lods
sub
cltd
enter
or
add
adc
sbb
cltd
in
idiv
jmp
xchg
adc
ret
inc
mov
add
add
add
movl
ret
fnstcw
hlt
inc
stc
jg
mov
call
aas
mov
dec
cwtl
nop
fwait
xlat
test
and
arpl
ds
out
push
xor
lcall
inc
frstor
pop
and
dec
scas
pop
loopne
mov
inc
mov
push
sahf
push
mov
push
adc
sub
jo
jbe
push
pop
loope
sar
mov
scas
sbb
adc
sti
sbb
xchg
push
mov
jp
pop
dec
jp
jl
and
or
ss
pop
stos
ljmp
jbe
sahf
pop
fists
xorl
clc
push
add
icebp
les
lock
mov
fmull
mov
scas
lods
dec
sbb
dec
xor
insl
pop
pop
or
aas
gs
pop
adc
dec
sbb
and
loop
lds
cmpl
arpl
pop
push
in
pop
nop
add
sbb
mov
loop
clc
pop
add
inc
jp
clc
adc
arpl
sbb
mov
lret
cmp
pusha
push
imul
sbb
dec
hlt
pop
stos
lock
lcall
sub
jg
out
lret
lea
dec
arpl
xor
mov
imul
adc
fsub
xchg
mov
imul
push
mov
xchg
jl
push
jnp
mov
icebp
push
and
push
jge
inc
adcb
jo
mov
cmp
lahf
and
jo
xchg
fisubrl
push
sbb
inc
cmp
lods
es
sarl
stc
ljmp
insb
xorl
aaa
movsb
cmp
mov
popa
sbb
mov
outsb
fldt
xor
push
push
cmp
outsl
outsb
int
addb
movsb
xchg
ds
mov
cmp
cmpsb
pop
sbb
les
rcll
xchg
cmp
sarl
mov
and
push
sbb
cmpsl
shlb
mov
lock
in
insl
and
lcall
mov
sbbb
and
mov
sub
dec
dec
in
push
incb
xor
vmread
jecxz
cli
adc
add
fwait
js
stos
and
push
mov
mov
dec
pop
sbb
mov
shll
insl
out
add
mov
push
stc
xchg
mov
cmpsl
pushw
xor
pop
xor
xor
and
or
adc
xor
inc
call
jge
loopne
push
popf
je
mov
sahf
dec
add
mov
int3
shll
jmp
je
jecxz
xorb
mov
jnp
mov
inc
test
je
or
imul
movl
outsb
and
pop
inc
popa
imull
adc
mov
sti
imul
fmuls
and
inc
shlb
divl
in
xchg
cmp
stos
dec
shl
aad
adc
aad
movsb
dec
xchg
xchg
mov
cmpsl
or
repnz
rcrb
out
xchg
iret
stos
adc
pop
imul
mov
je
xchg
mov
lahf
push
decb
jo
sub
adc
adc
fwait
and
mov
test
lret
jb
mov
mov
arpl
cmpsb
or
lcall
cmp
or
fwait
std
jb
sub
cmp
sub
xchg
call
sub
pop
sub
bndldx
mov
sbb
cltd
inc
mov
cmp
xchg
cmpsb
sub
shrb
push
nop
push
repnz
jnp
ror
insb
pop
jmp
adc
dec
out
pusha
push
pop
pop
popf
pop
shlb
lret
lods
outsb
fldcw
repnz
hlt
or
cmc
cmp
mov
xchg
cwtl
movsl
sbb
jno
or
mov
pop
in
mov
push
mov
lods
aas
mov
cli
in
sbb
mov
and
xor
dec
cltd
add
jno
xorl
addr16
xchg
sbb
mov
or
fwait
dec
jle
iret
loope
sbb
and
mov
cs
lea
inc
mov
lret
fistpl
xor
mov
xor
dec
jo
outsl
mov
add
leave
js
mov
jl
ret
dec
arpl
shlb
test
xchg
loopne
pop
adc
xlat
and
sbb
xchg
sbb
stos
push
icebp
dec
push
lcall
add
aad
lret
aaa
add
xor
imul
lcall
xor
or
out
xchg
cmp
sti
cmp
xchg
mov
in
inc
and
pushf
cmpsb
or
fisttps
loop
xchg
mov
movsb
jne
mov
std
in
out
jb
inc
and
mov
mov
sbb
mov
in
pusha
sbb
lods
mov
adc
sub
popf
xchg
inc
xor
xchg
outsb
xchg
sub
jecxz
inc
rcrl
jae
scas
test
pushf
sub
lock
ret
mov
inc
js
mov
or
fwait
inc
lods
jecxz
ja
mov
mov
mov
loopne
stos
jecxz
insl
jno
mov
addr16
or
imul
mov
test
sub
rol
pop
iret
int
dec
jo
scas
inc
jle
mov
aad
push
loop
mov
mov
pop
iret
les
and
xchg
cmpsb
sti
sarb
mov
lds
sbb
mov
or
mov
inc
ret
pop
jg
xor
ror
data16
and
sbb
or
xchg
test
pop
push
sbb
add
shll
sti
adc
xchg
pushf
xor
pop
arpl
pop
push
cmp
dec
push
sbb
jo,pn
in
not
push
pusha
ljmp
cmp
or
dec
shrl
and
cmc
sahf
cmp
mov
mov
jle
mov
ss
jo
mov
call
jmp
fs
mov
cmp
push
add
shl
test
push
loope
int
das
cmp
outsb
mov
sbb
xor
sub
lret
jnp
adc
or
out
pop
add
rorl
cmp
popa
mov
jge
cmp
iret
test
loop
push
inc
and
cmp
fs
repnz
xchg
inc
xchg
jecxz
fs
int
push
int
ret
outsb
fs
pop
push
mov
or
cmp
scas
push
pop
cld
sub
out
mov
fwait
int3
outsl
pop
dec
push
subl
sti
ret
ljmp
sub
shlb
lods
push
stos
mov
pop
sub
mov
cmp
hlt
push
out
sbb
fisttpll
fsubs
daa
or
jg
popa
insb
sbb
insb
pop
sbb
mov
cmc
int
sahf
and
lock
xlat
nop
lret
leave
or
add
outsb
mov
pop
add
inc
mov
loop
xchg
jle
mov
dec
mov
push
je
je
out
mov
movsl
call
jmp
out
push
mov
mov
xlat
stos
jle
xchg
stos
pop
adc
sbbb
repz
daa
jmp
or
out
std
mov
xor
add
ret
rol
rcrb
push
add
cmp
inc
jnp
aaa
inc
pop
inc
fsts
stc
rcrb
dec
mov
dec
subb
mov
popf
cmpl
jnp
adc
fstps
xor
imul
cmpsb
sub
push
adc
enter
inc
pop
mov
mov
jge
mov
sbb
lret
cmp
not
sahf
pop
pop
push
sub
sarb
shrl
fcoml
das
lea
lahf
insb
loope
pusha
loopne
stos
fidivs
imul
or
or
sub
or
pusha
push
lea
push
adc
andb
adc
sub
push
loope
xchg
xor
xchg
cmpsb
mov
je
ret
in
pop
fistpll
sahf
push
lahf
xor
incl
cmpsl
sub
sti
mov
lcall
mov
jg
or
repz
cmpsb
dec
stos
push
lcall
imull
jge
mov
or
jg
push
repnz
pop
jbe
mov
mov
push
and
cmp
and
xchg
rol
inc
mov
into
xchg
movsl
lret
cli
or
in
add
test
push
rclb
mov
sti
cmpb
jne
ljmp
cmpsl
pop
dec
cltd
jnp
dec
dec
bound
cmp
outsl
ljmp
mov
ja
cli
pop
jae
xchg
cmp
cli
sbb
test
mov
push
lea
sub
jecxz
sub
shll
or
pop
into
mov
cmp
pop
and
in
xchg
mov
cmp
mov
test
fwait
inc
adc
roll
fidivrs
inc
repnz
xor
cmc
push
rcl
jnp
sub
test
push
ret
lret
jmp
scas
dec
ret
cmp
inc
sbb
test
insl
xor
clc
or
testl
mov
test
push
sub
inc
fwait
loop
push
sbb
std
hlt
fs
sti
mov
jb
lods
ss
pop
lods
ffree
add
and
rcrl
pop
mov
es
pop
cmp
mov
add
pop
push
inc
das
inc
arpl
icebp
fiaddl
js
dec
sub
mov
jmp
stc
cmp
jecxz
push
in
xor
jle
out
cs
mov
push
dec
adc
push
lock
xlat
pop
in
inc
sbb
xor
mov
and
rol
movsl
push
andb
mov
arpl
cwtl
push
filds
ret
or
pop
add
jp
adc
pop
xor
pop
pop
jne
mov
cltd
cmp
mov
outsl
pop
out
andb
sti
out
inc
fstpl
sub
pushf
sub
push
ds
mov
loopne
cs
jno
sbb
push
mov
inc
fisubrs
fimull
imul
lods
jnp
add
mov
cmpsb
nop
dec
sub
mov
es
aaa
icebp
cmp
in
add
fildl
fs
push
popa
push
sti
push
adc
rol
jbe
xor
push
dec
xchg
pop
sub
lahf
add
mov
pushf
pop
icebp
dec
shlb
inc
cmp
inc
scas
sar
and
add
xchg
mov
or
jecxz
fldenv
fnstsw
out
in
loopne
jne
test
sub
out
enter
popf
lods
cmp
addb
cltd
dec
clc
sub
sbb
jno
inc
and
add
and
cmpsl
lock
fcomps
pushf
adc
push
subl
push
adc
sahf
movsl
call
fadd
xchg
loop
add
cmp
lea
mov
scas
sti
dec
xchg
mov
inc
jg
addr16
and
pop
in
out
jecxz
pop
out
dec
pop
pop
enter
fmull
jno
dec
punpckhdq
insb
aas
mov
mov
fucomi
ja
mov
push
xor
pop
inc
dec
dec
dec
mov
ret
push
adc
aas
cwtl
cmpsl
sub
xor
out
sub
out
mov
ds
jns
add
adc
mov
jnp
adc
es
repz
sti
jno
cmp
es
scas
gs
pop
sub
adc
fbld
dec
mov
xchg
inc
stos
into
roll
lcall
push
mov
test
jae
in
push
add
cmp
adc
xchg
xchg
iret
xor
hlt
adcb
cmp
dec
and
clc
mov
and
js
lds
sbbb
ss
testb
shrl
sbb
into
push
cld
pusha
cmp
shll
idivb
lret
and
jns
roll
add
xchg
mov
push
movsb
mov
fcompl
ficomps
test
nop
call
cld
xor
gs
mov
out
push
dec
cmp
imul
push
jns
aam
add
lock
add
sbb
jge
in
cli
xchg
sbb
outsl
and
fucom
lock
jo
sub
pop
fwait
pop
jl
and
imul
fwait
add
mov
shlb
dec
xor
and
pop
mov
dec
push
sub
xchg
jmp
adc
in
push
shll
scas
into
push
decb
rclb
ja
clc
call
xchg
mov
popf
jne
sbbl
addr16
add
push
out
add
adc
lock
cs
push
arpl
or
mov
cmp
xor
add
xor
mov
inc
cmp
and
mov
out
mov
dec
shlb
leave
lahf
scas
bound
pop
outsb
out
int3
add
sti
rol
cli
and
xor
cmc
popf
ja
dec
scas
pop
stos
mov
enter
jo
out
out
dec
add
movsl
dec
mov
int3
jecxz
adc
ds
gs
xchg
jnp
sbb
jno,pt
mov
xorl
shll
adc
in
push
icebp
sub
test
mov
popf
mov
jecxz
int
and
fimuls
or
popf
push
pop
repz
repnz
and
ss
jge
mov
pushf
test
icebp
cmp
pop
sbb
icebp
adc
xor
xor
push
mov
insb
jnp
xor
mov
dec
mov
mov
enter
les
mov
sub
xchg
bnd
add
loopne
and
push
xor
mov
popl
dec
jle
sbb
addr16
in
dec
jp
scas
adc
int
mov
aas
and
add
pop
mov
add
mov
or
addr16
xchg
push
fidivl
je
sub
adc
jecxz
mov
int3
jae
mov
stos
mov
or
jne
ret
fcmovbe
incb
dec
cmp
imul
push
push
xchg
xchg
dec
or
jbe
int3
mov
and
fs
xchg
imull
push
fs
cwtl
leave
mov
inc
arpl
sub
mov
dec
pop
imul
dec
push
stos
rorl
fwait
xor
lock
xchg
xchg
push
scas
or
bound
mov
mov
push
push
dec
push
or
jnp
test
int
dec
ja
push
inc
inc
mov
stos
push
jb
pop
jnp
fisubrs
in
divl
add
in
insl
in
adc
sub
test
sbb
and
jne
in
int
test
testb
scas
imul
cmp
in
jns
in
and
clc
insb
push
pusha
fs
ret
fisubl
mov
out
mov
cmpl
inc
arpl
pop
clc
mov
icebp
pop
orl
inc
pop
adc
iret
aaa
sbb
movb
sbb
add
mov
outsl
mov
sahf
stos
js
repz
add
or
rorl
sarb
cmpsb
jl
popf
stos
jbe
nop
xchg
fs
pop
stos
adc
pop
sub
popa
cwtl
sahf
data16
sub
in
xchg
imul
add
mov
outsb
push
test
das
pop
sub
sbb
cli
cs
pop
in
shl
push
std
inc
jno
repnz
call
jnp
out
test
loop
pop
jg
sbb
and
jno
mov
jg
in
pop
leave
cmc
loope
cmp
xor
xor
or
jmp
out
cltd
aad
jnp
sbb
std
lcall
dec
imul
or
xor
aaa
lcall
lock
adc
dec
stos
pushf
mov
mov
nop
mov
addr16
cmpsb
and
push
out
push
jae
sti
dec
mov
dec
dec
jg
hlt
js
adc
xchg
mov
sti
xchg
movsb
mov
mov
fsts
aas
jg
lcall
mov
mov
dec
pop
ljmp
out
mov
es
cld
insb
sbb
and
mov
jmp
ret
fstps
mov
lret
aam
push
pop
aas
cmp
into
pop
aam
cmpsb
push
push
ds
test
enterw
jae,pt
pop
dec
jp
inc
lds
lcall
add
or
jb
iret
jne
dec
push
shlb
dec
pop
sarb
adc
lds
pop
sbb
enter
jg
movsb
lcall
and
sahf
adc
dec
stos
xor
push
fsts
ds
dec
out
push
mov
mov
test
iret
pop
push
aad
pop
setbe
dec
mov
pop
add
dec
mov
xchg
pop
xor
popa
mov
aad
stos
loope
sub
mov
add
out
inc
add
cld
enter
push
push
rcrl
stos
fidivrl
dec
clc
ror
fs
enter
xchg
cmp
sbb
push
mov
loop
rorb
adc
outsb
mov
add
mov
je
aaa
aad
add
pop
rclb
out
mov
enter
xlat
dec
jae
inc
ret
mov
pop
daa
jge
sub
push
sbb
ljmp
xchg
testb
fcompl
sti
xchg
gs
ret
bound
jl
fsub
adc
sbb
xchg
and
jge
and
inc
sti
sbb
or
sarl
outsb
or
clc
mov
sub
xor
lock
movsl
sbb
mov
mov
sbb
jne
adc
fsubr
jne
leave
rclb
clc
in
cld
rclb
jmp
ja
in
data16
cmp
inc
nop
lret
jae
dec
dec
stc
test
out
pushf
iret
jp
sbb
stc
inc
mov
mov
scas
mov
sahf
lods
mov
and
xchg
mov
sbb
rorb
adc
xor
xchg
js
outsl
aam
sbb
out
cmpl
les
or
lahf
pop
adc
test
and
cwtl
ljmp
flds
call
xor
mov
xchg
and
negl
sbb
bound
add
std
hlt
icebp
loope
add
sub
inc
andb
test
ret
jl
fwait
cmp
sub
cmp
and
cmp
pop
sub
and
repnz
fisttps
xchg
inc
xchg
or
aam
fninit
fcmovne
jno
shll
lcall
clc
daa
fwait
dec
lods
jnp
inc
loop
mov
jns
mov
movsb
cmpb
adc
fs
jne
xchg
jecxz
shrb
xchg
sbb
push
insl
lret
fadds
xor
mov
pop
sahf
enter
jno
pop
push
fwait
jo
push
out
jl
xor
mov
mov
hlt
mov
dec
xor
jge
clc
cmpsb
mov
push
out
addr16
fstp
les
push
adc
jmp
into
cmp
or
imul
pushf
and
out
sbb
call
outsl
lahf
sub
xlat
xchg
ret
outsl
mov
mov
mov
sahf
in
xlat
je
pop
adcl
cmp
incl
fsub
enter
test
lods
inc
aad
stos
fimull
fsubp
inc
jne
lock
js
rsqrtps
xchg
push
jb
sub
xchg
scas
jecxz
cmpsb
cmp
aam
arpl
aaa
or
jnp
ficomps
lods
arpl
mov
enter
fadd
mov
stos
mov
loope
int3
sarb
adc
xor
cmp
outsb
mov
mov
cmp
pop
pop
iret
ret
mov
mov
stc
lea
add
hlt
or
or
and
jae
insl
int3
pop
dec
xchg
inc
loopne
sbb
sbb
pop
pop
scas
add
jmp
int3
test
adc
ja
or
sbb
xor
or
arpl
mov
les
call
rorl
xor
gs
sub
test
cld
lret
shll
inc
inc
inc
sub
cwtl
shl
in
cmpsb
pop
push
push
xor
cmpsb
adc
push
sti
mov
xor
xor
sbb
fs
das
mov
adc
add
dec
jl
cmp
je
pop
jmp
cmp
inc
push
mov
xor
in
idiv
arpl
std
push
test
mov
mov
cs
cmpb
jg
in
mov
push
lret
repnz
lret
pusha
mov
jmp
jb
imul
fadds
mov
dec
sub
cmp
std
xor
cmp
shll
rcrb
push
pop
pop
repnz
push
into
inc
out
dec
and
inc
loop
sub
lea
push
sbb
mov
push
sub
xchg
hlt
mov
and
jb
cmp
movsl
mov
push
scas
fists
dec
inc
mov
jae
or
cmpsb
pushf
test
jbe
mov
pop
mov
inc
mov
shlb
adc
je
and
jnp
inc
jnp
sbb
clc
cmpsl
cmpsl
adc
adc
sub
or
xchg
xor
call
jns
cmp
push
inc
xchg
and
jge
daa
adc
push
jne
imul
mov
repz
sbb
idivb
jmp
inc
push
mov
jmp
leave
jae
pop
std
fwait
cmp
add
pop
out
ret
pop
xchg
inc
mov
movsb
pop
orb
loop
dec
pop
pop
inc
pop
ret
mov
xchg
repz
xorb
pushf
ja
dec
out
or
aaa
mov
mov
xchg
jge
in
xchg
lret
cmp
and
call
rorl
inc
addl
fisttpll
adcl
adc
jmp
sbb
aad
int
sbb
fxch
sub
sub
xorb
cmp
mov
dec
cltd
jmp
inc
stos
in
subb
and
or
or
decl
mov
dec
xchg
aad
int3
xchg
das
push
xchg
inc
cmpsb
fdiv
cld
push
xchg
xchg
mov
loope
repz
add
jl
inc
in
dec
addr16
data16
fs
mov
and
in
inc
push
repz
xchg
popa
lods
ret
dec
daa
sbb
jecxz
fldpi
nop
movsl
stos
add
push
inc
orb
bound
push
adc
ljmp
dec
ljmp
inc
shll
outsl
testb
add
cld
inc
adc
mov
ja
mov
imull
pop
lds
in
push
test
jno
and
leave
jl
inc
rcrl
repz
push
stos
mov
arpl
dec
or
repz
sub
mov
test
fucomi
and
ja
push
divl
mov
xor
sarl
loop
cld
mov
negl
fisubrl
pop
xchg
lahf
test
cltd
stos
and
xor
sahf
mov
dec
les
lret
int
mov
pop
cli
adc
lcall
lret
shlb
sub
sbb
pop
sub
xchg
outsb
jnp
loopne
call
jns
fiadds
pop
pop
xchg
fdivr
ret
xchg
pop
lret
fistpll
mov
inc
mov
xor
lock
jo
pop
into
xor
js
loop
aas
clc
xchg
push
out
mov
cmp
sbb
test
aaa
ror
cwtl
in
mov
mov
stos
jne
roll
rclb
push
xchg
mov
sahf
inc
aad
cmp
int
sbb
into
mov
es
lret
or
xchg
in
jg
and
or
and
movsl
das
xor
dec
and
addb
mov
fildll
aas
xor
jne
jmp
outsl
jns
mov
mov
pop
in
ud0
aam
sbb
enter
xchg
inc
xchg
push
mov
int3
mov
mov
pop
aam
adc
out
mov
cmp
pop
lods
or
cmp
inc
scas
mov
push
out
sub
fisubrs
and
push
pop
adc
orl
jp
inc
aad
mov
or
push
fwait
sbb
pop
add
std
addl
xor
lock
mov
repz
orb
cmpsb
mov
ss
fiadds
jbe
dec
xor
mov
ljmp
aad
pop
shll
jle
cwtl
push
call
into
mov
jl
adc
xlat
dec
out
push
cmpsl
imul
fistpll
test
push
bound
aaa
out
test
imul
jbe
enter
and
sbb
adc
dec
add
xchg
fwait
data16
pop
ja
mov
out
stos
and
sub
inc
stc
mov
inc
dec
adc
shlb
xor
cwtl
lods
pop
xchg
scas
pop
sub
jg
mov
lea
and
jb
movsb
scas
pop
mov
xor
incb
fwait
and
mov
daa
push
inc
mov
xchg
lahf
xlat
dec
mov
rorl
xchg
cmp
and
mov
inc
shll
decb
imull
cs
add
out
cld
adc
js
jb
pop
push
mov
inc
iret
jne
pop
mov
dec
cwtl
jmp
repnz
outsl
cli
out
xchg
sub
xchg
outsl
aaa
xchg
push
sub
loope
fnstenv
pop
xor
ret
add
sbb
mov
or
arpl
xchg
fcompl
xor
inc
dec
movl
cmpsb
stos
ret
popf
cmpsl
add
adc
daa
cmp
push
xor
sar
xor
mov
adc
repz
jae
jnp
dec
lods
lods
repnz
pop
push
sahf
and
push
ds
xchg
add
rclb
andb
cli
lods
jb
cmpsb
mov
shr
jge
cmp
jp
cmc
push
lret
xchg
jge
or
test
xchg
mov
pop
fidivrl
int
dec
jno
and
add
insl
mov
xchg
out
call
cmp
push
in
cmp
enter
xchg
xor
mov
test
push
vpavgw
xchg
sbb
xor
and
or
pop
push
push
xchg
push
test
jp
in
sti
mov
ds
outsb
inc
rdtsc
add
incb
movsb
pop
jno
jl
push
cld
mov
cmpsb
test
scas
mov
adc
push
inc
push
incb
pop
xchg
nop
xchg
push
in
and
mov
push
jge
dec
mov
in
pop
jns
dec
push
jle
jae
mov
out
pop
ds
daa
push
insb
fldl
les
repz
int3
insb
icebp
ret
popf
test
lods
out
sbb
mov
xor
nop
add
sub
push
mov
mov
sbb
mov
mov
ficoms
mov
xchg
sti
inc
mov
in
xor
lret
inc
fimull
sub
cmpsb
adc
movsb
push
fcomps
in
push
in
adc
bound
cmp
xor
ret
inc
push
fwait
insl
cmp
pop
shl
sahf
mov
inc
enter
xor
mov
cmc
pop
xchg
adc
call
ds
cmp
and
jmp
sbb
jae
icebp
fsubl
xlat
xor
push
mov
pushf
cld
lret
stos
xchg
pop
xchg
jbe
pop
jge
movsb
es
cmc
insb
dec
jecxz
mov
addb
imul
in
lods
leave
flds
xchg
xchg
add
xor
and
in
adc
in
cld
movsb
into
jl
sbb
lcall
push
cmc
mov
jmp
cltd
push
test
or
in
adc
cmp
adc
dec
cmc
sub
dec
rcrb
push
lret
push
or
add
lods
jne
xchg
dec
cwtl
mov
fisttpll
cli
inc
mov
sahf
aam
add
push
and
je
and
addr16
decl
add
sub
addr16
add
jmp
lock
jmp
jmp
imul
or
pop
mulps
adc
mov
pop
enter
push
jl
clc
xchg
stos
out
std
std
dec
add
out
xor
mov
dec
jb
sub
in
js
jecxz
mov
add
pop
mov
out
xlat
scas
push
lds
xor
mov
clc
loope
and
mov
mov
cmp
add
mov
mov
adc
test
js
and
fildll
jnp
mov
sub
or
dec
cmp
aad
mov
xor
or
lret
mov
jb
sbb
clc
inc
repnz
mov
sbb
sti
cmp
shl
fsubs
pop
cmp
inc
aad
jp
pandn
pop
sbb
xchg
insl
fildll
cltd
scas
pop
nop
inc
mov
repz
aam
sub
jbe
jecxz
add
add
xor
or
rolb
repz
inc
dec
insb
mov
mov
xchg
add
mov
loopne
enter
aad
adc
lds
loope
pop
fdivl
jecxz
stos
inc
add
scas
cmc
clc
push
pop
ret
fcom
stos
ud0
jnp
or
fsts
and
inc
dec
add
sub
and
cmp
push
cmovp
xor
xchg
xor
jne
sub
and
fsubrp
mov
push
push
xchg
and
cmpsl
pusha
cmc
out
int
mov
mov
ss
mov
jecxz
arpl
enter
aas
xlat
adc
cwtl
call
cmp
pop
push
or
retw
mov
cmp
pop
xchg
add
cld
leave
xchg
xor
mov
mov
std
pop
pop
jge
clc
cmp
and
jne
test
hlt
and
fildll
test
cmp
xchg
dec
sarl
push
lcall
inc
pop
push
cs
popa
js
pop
or
jg
sbb
bound
nop
push
cli
arpl
or
mov
sub
pshufw
xor
dec
adc
jge
push
lcall
popf
hlt
lods
movsl
addb
push
icebp
mov
lcall
xchg
bound
aad
pop
or
add
pop
xor
fistpll
and
mov
clc
sbb
ret
adc
mov
stc
fwait
cmp
adc
mov
jae
fistps
mov
cmp
jecxz
cwtl
iret
inc
push
enter
repnz
xor
and
pusha
mov
popa
mov
mov
es
mov
dec
je
jp
cmp
and
sbb
cwtl
jns
mov
fldenv
or
pushl
cwtl
jle
add
pop
nop
movsb
xlat
lock
bnd
sbb
loop
inc
dec
cmp
pop
pusha
xchg
hlt
mov
jne
inc
cmc
push
xchg
add
mov
in
fdivrs
daa
lret
mov
in
rol
jnp
fildl
sub
and
mov
cmp
dec
push
pop
mov
sub
or
and
push
add
cltd
int3
icebp
aaa
jns
lds
and
pop
xor
sub
std
imul
mov
daa
aad
pop
dec
pop
mov
ret
roll
dec
cmp
ja
push
push
fnsave
in
leave
inc
jb
or
es
jno
movsl
out
mov
mov
push
xor
loop
outsl
add
stc
lock
cltd
sub
push
lds
aam
pusha
push
xor
push
test
lods
fnstsw
lea
shl
in
icebp
aas
xchg
or
xchg
xor
in
stos
lock
adc
add
push
and
push
loop
ja
ret
mov
mov
xor
push
fimuls
jmp
sub
push
xchg
mov
jno
sub
jb
add
sbb
lods
out
xor
mov
aam
mov
fidivl
sbb
ljmp
adc
xor
sbb
int3
test
ljmp
into
fcmovnu
cs
pop
xchg
and
cld
pushf
mov
add
adc
js
jae
dec
clc
sub
jl
sbb
fdivs
flds
mov
adc
mov
xorl
mov
test
xor
jbe
repnz
push
pop
push
out
les
cmp
add
add
dec
mov
sti
add
cld
fmull
testl
aam
lea
xor
int
scas
test
adc
cwtl
lea
jecxz
lret
outsb
insb
push
shl
xor
cmp
cwtl
mov
mov
mov
mov
mov
jle
mov
cmp
insb
push
sub
sbb
das
xchg
push
cmpsl
repz
out
je
mov
aad
add
je
add
out
xchg
mov
mov
dec
lcall
inc
cmpsl
add
mov
inc
xor
cmp
loopne
sub
push
pop
xor
sahf
ja
inc
faddl
orl
inc
xor
fs
pusha
out
adc
stc
or
dec
cmp
inc
into
fwait
mov
inc
popf
pop
jge
bound
inc
jge
xchg
pop
jno
sbb
outsl
stos
xor
push
xlat
lea
divb
fsubrl
fmull
pop
sbb
push
dec
pop
xchg
je
mov
scas
int
pop
std
hlt
sub
add
push
fwait
sti
jo
ret
out
mov
push
cs
xchg
cmp
cmp
fwait
mov
rcrl
xchg
mov
cmp
mov
cli
sub
enter
xor
pop
adc
cmp
mov
bound
lea
gs
mov
dec
mov
popa
inc
orl
sbb
sbb
push
mov
cs
pusha
pop
js
jmp
jle
iret
movsl
bound
sub
scas
aaa
adc
mov
xlat
mov
xchg
addl
jbe
dec
or
or
xor
inc
arpl
pushf
add
bound
or
mov
add
sahf
movsb
outsl
xchg
lret
ret
xor
or
xor
mov
sbb
xchg
and
xor
sbb
out
dec
xchg
mov
das
insl
xchg
sbb
mov
jp
fists
inc
xor
icebp
testl
ret
and
or
lahf
arpl
out
jbe
mov
hlt
add
out
pop
or
incl
fstpt
or
inc
pop
sub
repz
xchg
mov
aam
jae
push
arpl
fs
cltd
mov
add
in
mov
in
add
adc
xchg
ficompl
insb
jns
movsb
add
cmpsl
inc
inc
and
ja
int
rcll
mov
push
adc
cmp
cmovno
imul
or
data16
lods
movsl
aaa
insl
push
adc
popf
rorb
addb
movsl
mov
adc
cmpsb
addb
out
nop
xorl
jmp
xchg
aam
jne
ljmp
inc
mov
mov
jl
lock
pop
ficoms
aaa
mov
mov
test
andb
int
dec
push
int
cmp
cmp
cltd
or
hlt
sub
inc
cmp
shlb
dec
sbb
fsubs
mov
arpl
jmp
dec
mov
cltd
xchg
jmp
ror
and
jnp
sub
ljmp
or
push
push
outsl
std
enter
push
sbb
dec
sbb
xor
inc
adc
lret
pop
adc
and
ja
das
shlb
ftst
pop
dec
ret
pop
dec
jbe
inc
incl
imul
enter
xchg
ret
or
mov
fsubr
repz
je
icebp
sbb
adc
cld
gs
pop
jne
jp
ljmp
push
xchg
jns
shlb
sbb
push
pop
ds
pop
and
je
pop
out
fisubrs
adc
xchg
mov
mov
aas
mov
and
loope
adc
adcl
mov
add
xchg
in
adc
sbb
aam
movsl
in
sub
jg
add
movsb
ret
cltd
aas
out
pop
mov
ds
mov
aam
ficomps
lds
sub
mov
mov
cmp
inc
sbb
sti
pop
sub
pop
mov
xchg
inc
inc
sbb
je
cwtl
pop
cld
adc
pop
xlat
mov
fmuls
sahf
push
or
xor
sub
mov
add
cmc
mov
jo
adc
mov
pop
push
mov
stc
shll
fsubl
insl
in
xlat
mov
stos
xor
push
add
mov
popa
arpl
imul
cmpsl
xchg
mov
pop
imul
stc
stc
into
imul
add
xor
lods
repz
out
addr16
pop
xchg
sbb
rol
insl
inc
aad
data16
mov
sbbb
sarl
pop
lds
pop
rcrl
xchg
add
cmpsb
mov
les
hlt
shlb
lea
sub
cld
and
mov
test
fadd
aam
sti
or
adc
jae
jns
inc
xorb
cmp
stos
pushf
sub
loop
push
push
lods
mov
int3
movsb
jecxz
xor
arpl
add
rcl
popf
sub
imul
loopne
jg
pop
cmpl
jmp
pop
loope
or
insb
btcl
mov
and
dec
xchg
addl
pop
push
scas
gs
and
cltd
adcl
jnp
sub
lods
xor
lock
mov
xor
sahf
push
jge
cs
and
pop
pop
pop
int3
fwait
in
jge
sub
cmp
sti
out
sub
fprem
popa
pop
mov
sahf
or
dec
jae
and
lods
and
add
fsub
add
mov
int3
lahf
movsb
xchg
and
pusha
jnp
lods
dec
fisttps
jecxz
and
mov
cmpsb
xor
dec
ljmp
mov
in
aas
mov
xchg
pop
aad
in
iret
add
dec
cwtl
xbegin
push
pop
dec
push
addb
pop
xor
loop
sbb
mov
aaa
mov
lds
xchg
aas
icebp
inc
xchg
daa
out
dec
shrb
pop
sbb
inc
push
aaa
insl
subb
mov
cmc
ja
jl
sbb
and
add
xor
sbb
dec
shl
sub
lea
dec
mov
mov
sbb
jo
data16
mov
fwait
daa
mov
mov
mov
and
adc
test
or
fwait
jl
xlat
fdivrs
xor
addr16
cmp
enter
jno
add
jl
loopne
out
cs
push
push
sub
jo
jbe
rolb
add
repz
xor
inc
dec
addr16
adc
xor
adc
adc
adc
cmp
and
mov
sbb
repnz
mov
ret
rolb
stos
out
lahf
test
sbb
sbb
push
int3
loopne
push
leave
push
pop
pop
cwtl
add
and
cwtl
push
xor
hlt
dec
ss
cmp
daa
or
addr16
iret
pop
dec
ja
pop
out
nop
xchg
push
xlat
mov
inc
fisubrl
icebp
cwtl
dec
lcall
insb
jae
xor
stc
jb
lret
mull
inc
mov
out
in
int
xchg
lds
cmc
sub
mov
and
aas
rcrb
add
sti
pop
mov
popw
popf
lret
mov
sbbb
jmp
stos
xchg
push
xchg
js
mov
adcb
push
mov
pop
mov
and
ds
jle
outsl
test
pop
push
xchg
repz
pop
inc
rcr
add
jle
ja
cmp
pop
sar
cli
push
jp
add
adc
push
mov
xchg
mov
imul
push
lcall
das
jmp
push
cmp
inc
fldl
dec
xchg
dec
fs
cmp
int3
sbb
xor
inc
ficomps
mov
cmp
loopne
pop
js
fs
fdivr
mov
xor
jb
call
dec
cmpxchg
fpatan
sbb
push
mov
cld
mov
fcoms
test
pop
cwtl
pop
or
mov
jo
leave
dec
mov
sub
sbb
std
stos
push
add
les
gs
mov
xchg
test
pop
sti
ret
or
adc
mov
inc
xor
adcl
sbb
jb
pop
andb
xor
mov
and
fisubrs
or
add
mov
ds
pusha
mov
or
test
sbb
outsb
lret
mov
cli
pop
sbb
lret
rcll
fisubs
lock
sbb
sub
lods
mov
jns
jns
cwtl
sbb
in
push
mov
sbb
mov
mov
adc
pop
call
sbb
push
xchg
cmp
cmc
push
inc
dec
pop
mov
test
pop
pop
bswap
ret
enter
pop
test
data16
loopne
stc
mov
fs
jno
jb
gs
mov
push
pop
xchg
lcall
rorb
push
shr
test
cmp
lods
popf
sbbl
out
and
xlat
cmp
iret
xchg
daa
imul
jmp
lahf
data16
or
aas
and
add
movl
fsubrs
xchg
xchg
outsb
aad
xorl
jnp
jns
push
xchg
dec
jle
fsubs
fucomp
mov
jmp
add
out
rcr
mov
sbb
and
pop
sbb
jno
fnstsw
push
inc
dec
xor
imul
adc
and
andb
mov
xchg
sub
sub
adc
decl
xor
ja
pop
sbb
fstpt
jl
in
movsb
jo
jnp
push
jg
mov
or
fwait
pusha
push
lds
lret
dec
ds
filds
cmp
cmp
pop
leave
int3
push
pop
cli
mov
adcl
cmp
mov
jne
inc
test
and
pushf
sarl
push
push
mov
and
dec
lea
push
pop
sub
les
and
into
inc
ficoml
enter
ret
scas
xchg
aad
pushf
mov
cmpsl
mov
mov
adc
mov
lret
cmp
fists
ret
mov
xchg
rcrb
dec
fdivrp
mov
sbb
push
mov
imul
fisubrl
jno
push
push
adc
pop
clc
int3
insl
repnz
jne
sar
scas
or
out
test
in
pushf
ficompl
jnp
push
adc
out
cmp
aas
sub
sti
lea
push
mov
mov
xchg
pusha
aam
pop
out
cmp
stos
in
jle
call
xchg
icebp
xor
into
push
shlb
sbb
jmp
fsubs
inc
mov
or
je
push
xor
out
pcmpeqb
cmp
fdivrl
shrb
jb
add
andb
int
sbb
sub
lret
push
fadd
pop
mov
ja
mov
jo
jb
dec
in
dec
roll
in
lret
out
xor
pop
sub
lds
xchg
idivl
jnp
add
test
loope
add
mov
sbb
mov
bound
jns
aas
sub
out
cmp
jns
fsub
test
rolb
push
mov
cmp
call
imul
mov
cmpsl
inc
dec
jne
cwtl
arpl
push
push
dec
inc
outsl
cs
sub
daa
jp
dec
test
gs
jmp
les
clc
mov
aaa
jnp
je
arpl
and
mov
nop
and
lock
addr16
aam
je
xor
stos
dec
jg
loop
stos
mov
sub
je
nop
mov
mov
lret
fldl
xor
dec
jns
cmc
jg
sub
dec
inc
jno
cmpsl
add
xor
sub
popa
loop
lock
mov
sbb
xor
or
add
out
icebp
stos
cli
into
sub
mov
fadd
lods
mov
add
xlat
test
ret
pop
shll
fldl
sub
sub
sbb
hlt
imul
jbe
ljmp
cltd
jno
fisubrs
testl
adc
jns
in
jecxz
lods
xchg
cmpsb
jl
add
mov
sbb
mov
or
xor
andps
addb
sbb
and
xchg
dec
stos
cli
xchg
pop
daa
cmpsl
cld
test
pop
movsb
dec
cs
idiv
xchg
test
or
movb
rcrl
add
add
outsl
inc
data16
and
xor
fbstp
mov
pushf
lret
mov
icebp
or
adc
cmp
inc
dec
cltd
rolb
mov
pop
mov
push
bnd
cltd
aas
pusha
add
cmp
pop
push
dec
mov
mov
jecxz
lahf
movsl
sbbl
or
mov
inc
add
sub
rorl
rolb
sbb
mov
aad
mov
add
and
sbb
ljmp
cmp
jae
out
xchg
jmp
xor
cmp
xlat
xchg
cld
or
pop
mov
les
push
std
mov
aam
add
xchg
cmp
test
les
mov
ret
sub
outsb
in
fidivrs
dec
cmp
dec
jmp
enter
sub
bound
es
add
in
pop
cmpsl
enter
out
push
mov
and
pop
sub
jns
movsl
jle
mov
cmp
das
inc
xchg
mov
lahf
aas
and
dec
or
xor
ss
into
stos
sahf
xlat
insb
ljmp
fisubs
lods
leave
jb
push
inc
jl
add
jae
test
mov
lahf
lea
into
mov
shrl
lret
pop
scas
xchg
mov
pop
fistpl
pop
push
imul
loop
stos
or
stos
push
or
or
ret
int3
pop
pop
xlat
pusha
jne
inc
jmp
mov
in
dec
cld
movsb
cmp
sarl
cmpsb
jno
sti
bound
push
add
push
or
push
push
dec
mov
adc
push
lahf
iret
test
push
xor
xor
stos
push
inc
int3
pop
mov
mov
xor
mov
out
pop
pop
add
xchg
or
push
test
dec
push
add
mov
push
out
cld
jmp
sub
sub
imul
cld
cmpsl
mov
mov
cmp
fsubl
mov
jmp
ret
jno
ficomps
imul
pop
jns
das
gs
imul
or
rcrb
sub
es
gs
insl
icebp
jge
cltd
jg
leave
and
cmp
out
test
and
shl
push
lods
bound
aas
nop
popf
aam
or
lret
adcl
push
cmp
movsl
inc
arpl
in
int
jo
test
dec
das
stos
inc
xchg
ds
std
inc
scas
in
mov
movsl
cmc
je
mov
loop
shlb
nop
aad
add
ljmp
data16
dec
xchg
xchg
repnz
lock
cmp
xor
ret
adc
jp
lahf
sub
mov
or
lock
mov
xor
std
ds
imul
lds
jo
push
dec
adc
or
pop
mov
mov
mov
insl
push
lock
imulb
push
add
arpl
mov
xchg
push
loope
dec
arpl
and
notb
adc
jae
push
mov
sub
aaa
mov
push
jmp
cmpsl
push
movsl
shlb
push
outsl
xor
pusha
add
push
pusha
and
push
addb
sbb
jp
push
bound
adc
jae
xor
jmp
lock
add
jae
stc
lea
stos
push
sbb
and
mov
dec
push
pop
je
notb
popa
lret
jno
inc
pop
test
scas
lret
fstps
pop
cltd
cmp
xchg
fiaddl
xor
sbb
mov
sbb
mov
out
add
lahf
pop
xchg
sbb
inc
mov
test
movsb
pop
into
ljmp
sub
out
es
lret
iret
xor
icebp
cmpsl
imul
mov
pushf
dec
mov
jle
push
xor
inc
pop
and
into
das
pop
ja
jp,pn
cmpsl
xchg
movsb
dec
icebp
fsubs
adc
cmp
add
dec
xor
insl
aaa
xor
shll
pop
out
sub
lahf
popf
in
push
pop
rorb
adc
cld
roll
mov
addr16
dec
sub
sahf
test
xor
bound
into
mov
pop
ret
psubq
sub
sbb
adc
mov
mov
mov
cli
jp
pusha
sbb
xchg
into
jecxz
insb
scas
test
cmp
sub
cmp
test
outsl
lods
test
imull
mov
in
lret
push
sub
dec
mov
or
inc
jnp
lcall
mov
subb
sti
arpl
popa
lods
jo
mov
aad
jne
shrl
mov
adc
insb
fdivr
nop
ret
into
xchg
js
inc
hlt
xor
jge
dec
and
loope
int3
pop
xchg
pop
into
aaa
std
out
fcmovb
out
out
out
and
cld
into
inc
push
mov
push
mov
pop
push
aaa
daa
mov
push
sbb
daa
jle
sbb
jno
out
adc
jp
cmpsl
shll
stos
push
or
les
outsb
push
test
or
fcomp
xchg
add
jbe
pop
int3
pusha
xchg
out
inc
jge
sub
leave
jecxz
shrl
xchg
hlt
mov
mov
sub
mov
push
popa
movsb
or
cltd
pop
jae
loopne
call
into
test
in
pop
xlat
push
xor
pop
jns
jne
xchg
fnstsw
out
subl
xchg
enter
push
adc
mov
lcall
adc
inc
sahf
mov
insb
pop
dec
js
pop
iret
sbb
sub
aad
mov
fs
xlat
sbb
cli
push
mov
cltd
jbe
jae
add
repnz
addb
movsl
pop
pop
xchg
add
daa
and
xchg
xor
add
int
xor
movsb
shrl
jle
lock
movsl
push
pop
jo
cltd
push
cmp
jmp
jne
cmp
adc
xor
popf
mov
lea
aas
xchg
push
and
vmwrite
out
sub
sub
stos
enter
add
sar
daa
loop
jp
inc
fists
xor
jge
sbb
ljmp
outsl
mov
ret
repz
or
leave
inc
sub
std
nop
movsb
jle
fwait
jge
push
data16
mov
mov
jb
rcrb
in
stos
lods
mov
jg
jae
fbstp
rcrl
scas
adc
arpl
add
cltd
mov
add
lea
daa
movsl
add
or
inc
xor
mov
inc
in
popa
push
cmp
les
loope
notl
dec
ret
xor
inc
sbb
and
movsl
lcall
cld
push
add
mov
into
sub
stos
test
insl
loope
push
stos
pusha
mov
repz
nop
out
pop
cmp
sbb
fwait
nop
xchg
std
mov
clc
xor
cli
ja
xchg
xchg
mov
adc
jmp
cmp
inc
add
xchg
jae
xlat
add
les
lcall
in
xor
cmpsb
pusha
insb
sbb
xor
mov
xchg
add
mov
std
pop
fdivs
sbb
mov
iret
mov
xchg
fsub
inc
cmp
sbb
inc
cltd
mov
mov
adc
cmp
cld
addr16
jg
inc
cmp
jo
popf
loope
aaa
movsl
mov
adc
ljmp
sbbl
jns
out
imul
fadd
push
or
lret
aad
xor
mov
mov
mov
testl
les
dec
inc
stos
das
adc
xor
jmp
pusha
xchg
lret
imul
mov
inc
ss
push
fistpll
ds
or
lods
popf
mov
daa
pop
push
in
pop
and
jbe
mov
and
repz
and
push
into
mov
jle
pushf
mov
insb
and
mov
test
jmp
and
push
rolb
lret
jne
dec
lds
out
fbstp
dec
sub
jle
js
ficoms
mov
sub
in
data16
sbb
add
sbb
out
fstpt
push
aad
call
mov
mov
out
into
pop
push
mov
lods
adc
mov
out
mov
sub
aas
fldt
fmulp
movsb
or
or
movsl
pop
movsl
cmpb
push
mov
jp
jecxz
dec
inc
cmc
cltd
lret
filds
out
push
shll
repnz
xchg
push
add
mov
rolb
cwtl
into
pop
jmp
jmp
add
repnz
test
dec
scas
loopne
cwtl
pop
out
jno
sub
ljmp
sbb
dec
push
xchg
mov
xchg
sbb
inc
and
push
mov
pusha
add
call
add
jle
loop
cmp
das
inc
sahf
test
and
inc
jecxz
ficoms
es
lods
xchg
pop
gs
xchg
clc
mov
lahf
outsb
stos
mov
pop
jl
imul
mov
dec
lock
mov
sbb
mov
stc
jae
adc
or
loop
adc
sub
std
adc
das
loop
fistl
ret
in
cmp
inc
and
aad
push
nop
ffree
mov
xor
out
nop
or
push
repnz
stos
test
pop
jbe
sub
mov
mov
mov
push
xor
sahf
mov
mov
lock
out
or
lcall
shlb
sub
lods
jnp
scas
jae
stc
sbb
ss
sahf
fnclex
stc
push
lds
push
add
push
test
xor
sbb
or
push
test
mov
roll
cli
xchg
mov
daa
and
adc
int
and
mov
lds
int3
ret
xchg
sbbl
sar
or
decb
push
xlat
imul
mov
in
je
test
es
or
inc
pusha
xchg
inc
stc
cmpsb
dec
xchg
test
shll
cmp
popf
pop
jp
out
daa
ljmp
stos
xor
out
subl
jge
fidivrl
testl
add
mov
mov
lret
int3
dec
loop
adc
xchg
gs
sbb
aaa
mov
mov
cmp
mov
mov
jnp
sub
jg
sbb
outsb
add
lea
cmp
cmp
sub
jb
cmp
mov
leave
aam
inc
hlt
pop
sbb
jp
cmp
pop
inc
dec
jns
xchg
test
mov
std
or
cmp
jns
mov
push
shll
pop
fsubrs
push
popl
pop
xor
fbstp
in
bswap
fisttps
std
rolb
arpl
in
push
punpckhbw
inc
imul
sub
xorl
inc
sub
or
ss
jmp
add
and
sbb
in
adcl
data16
movsb
ljmp
mov
ja
ret
in
jmp
nop
aaa
cli
inc
push
shl
stos
test
negl
ficoml
stos
dec
dec
adc
mov
push
lock
pop
inc
inc
outsb
frstor
mov
out
insl
adcl
in
frstor
cltd
or
enter
mov
sbb
das
push
push
jnp
jmp
in
sbb
xor
rclb
sarl
adcb
std
jo
adc
in
adc
in
push
sub
test
fcompl
andb
nop
dec
in
mov
std
insb
in
outsl
dec
jl
mov
jo
repz
sarl
cmpsb
enter
repz
push
mov
in
test
adc
inc
out
nop
sbb
and
xchg
xor
mov
xor
cmp
clc
mov
pop
mov
push
aaa
in
jge
push
adc
mov
adc
cli
push
jmp
insl
jno
dec
xorb
mov
test
dec
imul
daa
in
repz
stc
inc
into
gs
into
pop
inc
adc
jnp
pop
xor
dec
xorb
mov
push
aad
sbb
xchg
pop
pushl
js
mov
pop
stc
cltd
pop
jne
idivl
in
lret
mov
inc
push
fists
aaa
rcl
push
out
lcall
jns
mov
cmp
inc
jns
inc
into
iret
clc
inc
je
jne
inc
loopne
mov
dec
sbb
sti
cmpsl
repz
lret
lret
inc
pop
cli
arpl
and
push
fprem1
testb
popf
outsb
popa
rcll
mov
aad
dec
inc
cli
iret
and
scas
clc
cltd
mov
mov
push
cmc
push
xchg
cmc
mov
std
movb
sub
fbstp
xchg
test
cwtl
shl
push
xorb
sbb
push
pop
subb
pop
mov
cwtl
inc
das
xchg
mov
into
or
mov
fwait
jmp
lock
xchg
xor
sti
stc
sub
pop
pop
movsl
push
movsb
add
push
xchg
test
sub
lock
add
or
sbb
loopne
hlt
or
jnp
stc
fsts
pop
mov
inc
in
inc
sbb
push
jp
js
mov
test
testl
pop
cld
js
mov
sarb
outsl
pop
enter
jmp
cwtl
dec
pop
in
xchg
jg
mov
inc
and
enter
fstpl
cmp
fistpll
or
mov
xchg
pop
inc
inc
jge
pop
out
push
inc
mov
pop
shl
and
test
test
pop
adc
sarl
sub
add
arpl
ret
mov
xchg
jne
fsubrp
jns
pop
in
bound
adcl
out
push
xor
arpl
addr16
jae
lahf
test
int3
das
data16
insl
adc
add
movsb
imul
jnp
or
jecxz
mov
mov
mov
out
jmp
add
inc
adc
sub
push
adc
add
jb
and
jne
jne
out
sub
mov
movb
sbb
inc
push
arpl
push
dec
jnp
inc
cmpl
call
repnz
xchg
mov
push
jmp
xchg
fstpt
lret
jne
mov
mov
and
inc
call
cwtl
lods
mov
mov
xchg
xchg
dec
mov
dec
insl
in
mov
or
out
or
dec
ds
sub
and
jge
sub
je,pt
jnp
unpcklps
push
and
xor
inc
inc
cld
mov
test
pusha
mov
out
divl
pop
push
outsl
in
jo
push
jae
hlt
adc
sti
or
xor
bound
testb
leave
test
push
push
jg
mov
dec
lds
cmp
cmp
aam
xchg
loope
mov
dec
iretw
add
mov
pop
hlt
movsb
enter
stc
scas
das
lcall
xlat
xor
sub
push
sub
addb
ljmp
sbb
xor
lods
in
pop
mov
stc
std
icebp
adc
inc
int3
cmp
fwait
idivl
mov
pop
dec
bsr
notl
shlb
lret
lds
repnz
fwait
pushf
hlt
lret
and
movsl
mov
lahf
stos
enter
aas
mov
mov
mov
xor
jne
shll
test
insb
leave
into
xchg
or
ds
mov
xchg
adc
into
hlt
mov
outsl
std
insb
mov
dec
aas
call
jecxz
stc
xchg
xchg
scas
dec
push
xor
mov
xchg
sbb
out
xor
or
jbe
out
add
pop
std
ss
roll
or
sbb
cld
inc
mov
aas
insb
daa
lds
cmc
jo
xor
and
jnp
xchg
es
daa
cld
rcrb
add
repz
push
repnz
dec
xchg
mov
jp
ss
loope
add
mov
add
popf
xchg
lods
movsb
xor
mov
popf
or
cli
jno
gs
stc
mov
mov
jnp
test
push
fwait
out
fistpl
mov
pop
filds
in
add
movsl
sub
outsb
pop
loope
cwtl
mov
push
push
xlat
call
icebp
mov
pop
xor
inc
mov
push
push
cli
mov
push
test
adc
aam
pop
lea
inc
rolb
add
popa
sbb
mov
clc
shrl
ss
adc
shl
into
ret
sub
inc
xchg
rclb
lret
shrl
fcmovu
mov
cli
invd
pop
mov
ret
mov
xor
fbstp
cmp
fnsave
imulb
enter
in
jmp
and
dec
roll
add
fdivl
jmp
xchg
int
das
mov
cld
sbb
xor
xor
ss
jnp
addr16
jns
out
push
movsb
push
cmpl
xorl
or
mov
jge
mov
xchg
lahf
dec
cmc
dec
call
leave
bnd
or
cmp
pop
mov
pop
stc
pop
adc
mov
mov
cmp
inc
inc
out
ret
add
pop
repz
pop
loope
sahf
jge
cmp
shll
xor
repnz
into
mov
push
test
push
push
je
mov
xor
sub
mov
out
mov
cmpsb
pop
jne
push
sub
sub
adc
repnz
popf
ss
jbe
cmp
jns
mov
cmp
xor
test
in
int
incl
aam
in
xor
or
xchg
push
adc
mov
lods
lret
rclb
push
inc
jno
adc
add
mov
cmp
ret
jecxz
cmc
xchg
mov
test
xor
shll
lds
xor
xor
jle
ljmp
in
lret
add
ficomps
loope
inc
or
sbb
in
mov
shlb
cmpsb
movsb
or
cli
jg
xor
sub
pusha
add
sarb
sub
scas
dec
testl
lods
xor
stos
test
or
hlt
mov
stos
icebp
sbb
test
jae
lcall
jmp
push
adc
xadd
ret
xor
sbb
cmp
mov
scas
mov
stos
out
xchg
aas
and
push
sub
pop
mov
aaa
push
xchg
inc
jle
jnp
add
push
scas
shr
iret
icebp
sbb
sbb
bound
lret
mov
cmp
faddl
xor
cmp
push
xchg
sbb
adc
lock
mov
mov
xor
mov
jnp
imull
xchg
ja
add
lods
ljmp
in
and
sti
test
clc
out
in
cmpsl
xor
lahf
loope
mov
ret
push
in
loope
pop
dec
dec
mov
mov
push
mov
shr
jo
push
mov
or
pop
int
outsl
ret
pop
test
or
jg
and
mov
sub
jo
pop
push
sub
pop
dec
lahf
mov
gs
pop
mov
cmp
sarl
jecxz
cmpl
and
mov
lcall
add
rcrb
mov
sti
lahf
push
inc
mov
cmp
ja
inc
xchg
sub
rclb
out
mov
aam
adc
push
push
cmp
daa
icebp
insl
pop
sbb
sub
out
fsubl
jo
sub
push
fsubrs
lods
rorl
xchg
xorb
sti
xchg
pushf
push
jp
pushf
push
cltd
jo
jg
pop
push
xchg
dec
pushf
stc
push
inc
out
xchg
test
sub
or
jg
pop
mov
inc
sbb
mov
test
add
fistps
or
push
movsb
sarl
jb
adc
push
sub
mov
hlt
leave
fs
xor
iret
pushf
dec
cltd
subb
and
call
aam
mov
sbb
inc
push
lahf
cmpsl
sbbl
insb
cmpsb
cmpb
and
mov
dec
xchg
fs
pop
adc
mov
test
popf
fidivrs
inc
out
call
sub
push
icebp
jo
jmp
dec
xchg
dec
xor
mov
dec
and
outsl
xchg
lds
pop
ret
or
sbb
ja
xchg
test
mov
lret
pop
imul
outsl
enter
jp
and
mov
add
push
lcall
andl
ljmp
or
mov
and
pushf
or
cs
xchg
outsl
inc
mov
jl
frstor
clc
mov
xchg
cmp
imul
push
adc
mov
das
push
negb
jns
mov
adc
or
movsb
pop
jle
jecxz
lods
xchg
insb
stc
xor
cmpsl
data16
lock
imul
popa
pop
je
loop
dec
std
pop
jnp
mov
dec
scas
clc
loope,pn
addl
mov
inc
idivb
xor
ljmp
ret
mov
or
imulb
push
xchg
sbb
clc
and
cmp
pushf
push
ljmp
loop
push
cmc
loop
ss
sub
fistl
stc
inc
jne
adc
mov
and
fs
sti
dec
scas
lcall
adc
jge
push
test
iret
jp
adc
cs
jns
es
mov
out
fwait
push
pop
cld
jmp
in
add
xchg
mov
outsb
fbld
inc
mov
pop
push
pop
add
cmp
rcll
addr16
cmc
xor
mull
cli
sub
mov
iret
lahf
das
jbe
mov
popa
jae
stos
shlb
push
stc
loop
xchg
dec
leave
fcmovnbe
fdivrl
mov
sbb
xchg
lahf
dec
sbb
int3
push
mov
push
xchg
and
mov
jecxz
add
or
pop
or
imul
in
dec
das
xchg
std
lock
and
pop
sub
mov
or
rep
lret
sti
repnz
and
mov
mov
movsl
dec
in
jnp
sbb
div
sub
addr16
mov
xchg
cli
adc
fs
cmp
ror
push
mov
jns
mov
jb
fsubl
inc
inc
test
addr16
insl
loope
push
pop
dec
jae
gs
lea
add
cmpsb
sbb
stos
or
jae
pushf
leave
lret
xchg
ljmp
popa
lretw
xchg
mov
mov
xor
in
cmp
lret
int
test
fiadds
and
jle
pop
push
xchg
push
fnsave
sub
rcl
sub
ret
dec
cli
imul
push
add
pop
loope
cmp
cmp
push
push
lock
mov
push
xlat
lcall
pop
xor
mov
mov
mov
js
outsb
out
ja
incb
inc
jl
inc
lods
test
jge
aam
roll
sub
lcall
fildll
lcall
mov
pop
lahf
xchg
jae
xchg
sahf
movsl
std
cmp
and
movsl
sahf
mov
push
mulb
mov
negb
daa
mov
fimuls
adc
inc
adcb
pop
sub
out
lods
pop
lcall
xchg
or
shlb
repnz
pushf
xchg
xchg
rcr
mov
imul
xchg
jmp
sbb
lods
in
cltd
inc
and
cmp
aaa
push
pop
or
mov
imul
push
xchg
rclw
lret
add
push
lods
addr16
aad
lcall
xor
add
mov
push
pop
ret
ds
popl
div
sahf
or
xchg
push
sub
cld
or
popf
mov
mov
ret
push
shr
mov
xor
cmc
out
sbb
jbe
pop
je
mov
pop
out
lock
inc
jl
mov
jnp
pop
xor
icebp
cltd
bound
insb
xlat
into
std
mov
mov
jns
repz
and
mov
ljmp
push
js
mov
aas
or
or
jno
shll
cli
push
xchg
adc
jae
fsubrs
sbb
rcrl
sub
icebp
pusha
mov
insl
mov
mov
icebp
pop
stos
add
pop
das
shrb
bound
jb
or
or
jbe
sub
cld
add
sub
adc
push
in
leave
xchg
lret
dec
inc
je
xor
dec
dec
cli
addr16
mull
je
fstpt
sub
scas
insb
js
add
std
cld
xchg
cmp
fstpl
jbe
pop
lret
xlat
or
sbb
cmp
js
pushf
push
fidivrl
jns
jo
js
mov
fimull
add
push
adc
lea
dec
pop
in
sub
shl
popf
pop
hlt
mov
std
test
call
or
dec
popf
and
mov
cmpsb
adc
mov
ret
add
push
pop
ret
sti
dec
sub
add
sbb
mov
cltd
pop
adc
scas
pop
dec
iret
push
xor
lds
cmp
xor
sarl
ljmp
inc
inc
jb
pop
sbb
dec
push
jmp
sahf
imul
inc
pop
sbb
bound
js
jg
jb
mov
jge,pt
cmp
pusha
mov
int
test
decb
jbe
bound
cld
int
push
push
enter
adc
sbb
adc
push
mov
in
dec
add
sub
sarl
imul
add
pop
jno
jle
mov
sarl
mov
scas
nop
xchg
xor
mov
xor
loop
ds
jecxz
rorb
mov
repz
movsb
pop
es
andl
mov
push
fsubp
or
jbe
xor
shrl
pop
loope
inc
in
mov
testb
mov
cltd
sbb
aad
lods
pushf
or
jmp
aaa
jle
fstp
dec
mov
mov
in
sahf
out
or
add
ss
sbb
add
into
xorl
cmp
lret
add
dec
jb
mov
movsb
sbb
mov
mov
jno
adc
push
insl
ss
and
dec
stos
scas
jbe
fwait
and
pop
cmpsb
mov
mov
insl
roll
cli
inc
push
and
pushf
bound
pop
lahf
aad
jnp
ret
into
call
fstps
insb
iret
or
or
cmpsb
stos
push
cs
mov
out
data16
ja
or
xor
mov
inc
addr16
lea
mull
addr16
mov
pop
int
iret
stos
and
out
jnp
push
push
xchg
inc
in
outsl
xchg
cmp
mov
xchg
push
aas
es
in
cmp
pop
inc
mov
fbstp
rorb
add
lahf
sub
mov
mov
imul
push
fbstp
cmp
jns
xchg
add
fcompl
or
dec
push
imul
js
in
arpl
mov
mov
cmp
pop
fsub
dec
jg
and
movhps
mov
fwait
mov
ror
sub
jmp
inc
and
pop
push
pop
xchg
shrl
mov
inc
mov
add
out
pop
jecxz
and
lahf
xor
imul
test
popaw
movsb
pushf
dec
jp
push
cmpl
or
jecxz
xchg
add
into
in
insl
std
mov
out
mov
add
xor
push
arpl
cwtl
cmp
sbb
dec
in
xchg
fdivrp
xchg
or
xor
lahf
lock
repnz
in
mov
std
xchg
into
pop
aad
xchg
into
jns
adc
inc
sarb
jle
xchg
insb
mov
lds
jnp
mov
cmc
mov
adc
bound
aaa
inc
jge
pop
jno
es
ljmp
inc
iret
jp
dec
ja
sbb
cmp
testb
mov
sub
inc
in
xchg
add
icebp
mov
arpl
jg
in
dec
xor
mov
ret
add
aas
inc
mov
lods
insl
aam
sub
cmpsb
test
adc
cmp
dec
sbb
fidivrl
inc
shll
repz
loope
aaa
mov
mov
cmp
lret
rolb
idiv
and
idivb
sub
pop
lock
cmc
das
in
arpl
pusha
and
data16
jns
inc
and
test
imul
add
cmp
and
enter
loop
icebp
xor
stc
mov
pusha
xchg
lret
cmp
in
mov
xchg
cli
push
pop
push
or
xor
mov
lods
jnp
jne
into
xlat
inc
mov
jp
lahf
inc
and
insb
test
push
and
sbb
push
dec
cmp
mov
fucomi
jmp
lahf
inc
mov
dec
ljmp
pop
or
flds
push
arpl
lods
loope
nop
rcrl
dec
rcl
push
xor
mov
mov
loop
cmp
xor
pop
rorl
loopne
imul
call
lret
out
repz
shrl
cmpsl
mov
pop
xchg
sub
or
sub
jbe
pusha
push
lret
adc
pop
jae
mov
out
mov
add
mul
divl
xchg
in
xchg
inc
and
ss
jns
std
repz
sub
push
aam
xchg
jecxz
dec
push
mov
and
fwait
and
jae
icebp
mov
inc
ror
inc
sbb
or
or
mov
add
or
cmp
fld
dec
in
sub
inc
xchg
lcall
fimull
push
add
add
inc
lret
jae
cltd
das
mov
insl
mov
inc
scas
adc
sbbb
call
hlt
addb
loopne
cs
lock
lods
xor
js
mov
xorb
fidivs
dec
jle
ds
fistpll
push
shrb
jg
cmp
xchg
mov
jmp
out
outsl
lcall
push
mov
xlat
rcr
notb
or
and
xlat
mov
dec
push
mov
sub
popa
push
fwait
rorb
jg
push
and
sbbb
fs
mov
lret
jle
sbb
fs
mov
shlb
mov
negb
xchg
repnz
imul
cmp
lret
lods
cmp
movsb
pop
dec
jge
icebp
cmp
shll
out
sbb
sbb
lcall
add
adc
iret
push
loope
cmp
adcb
fisubrs
insl
test
cmpsl
roll
int3
push
mov
and
in
xchg
mov
dec
sub
or
ss
outsb
mov
popf
sub
rorb
stos
mov
lock
pop
leave
push
cmp
lret
pop
xchg
test
aas
push
xchg
test
ret
push
mov
popa
hlt
push
lods
dec
repz
insb
cmp
jo
dec
std
mul
dec
imul
mov
inc
push
fnstcw
adc
pop
jmp
je
cmpsb
sbb
pop
mov
dec
dec
jns
push
out
imul
mov
jp
lea
and
sahf
inc
dec
aam
xchg
dec
xchg
lods
add
mov
dec
xchg
out
pop
add
rol
push
adc
mov
rcl
sub
fisubrs
out
or
sahf
mov
inc
dec
cmp
fisubs
inc
mov
mov
divl
jg
stos
push
sub
xchg
es
sti
cmp
sub
in
jmp
push
hlt
push
pop
lret
ja
jge
pop
dec
push
dec
xchg
scas
aas
xchg
inc
aas
xchg
add
push
or
pop
jmp
adc
arpl
sbb
movsb
xchg
and
test
cmp
sbb
or
imul
in
stc
test
arpl
dec
enter
lods
xchg
inc
cwtl
cltd
test
adcl
inc
nop
in
mov
jp
inc
pop
out
repz
loopne
fidivs
outsl
mov
fisubrl
lea
jbe
add
pop
xor
mov
fdivs
sarl
push
ret
test
leave
inc
or
sub
imul
push
sub
lret
dec
and
fcmovbe
call
hlt
outsl
stos
mov
movsl
xor
andl
push
add
sub
test
mov
fidivs
sar
or
mov
rcrb
mov
lret
adc
jns
daa
mov
cmp
outsb
je
inc
push
cld
je
enter
adc
inc
adc
popa
aam
mov
jmp
dec
pop
jecxz
mov
or
enter
sub
xchg
mov
and
lcall
in
pop
daa
inc
and
pop
inc
out
fisttpl
rcrb
pop
add
push
mov
pop
add
xchg
jge
xchg
xchg
mov
addr16
push
mov
das
mov
in
xor
mov
ljmp
das
fists
jne
stos
pushf
jge
lock
in
adc
mov
push
xchg
iret
imul
orl
sub
cld
jo
jns
and
shlb
mov
pop
rclb
or
je
add
pushf
leave
jle
loop
adc
mov
inc
int3
outsb
imul
sbb
cmpsb
cmc
rolw
jne
je
cwtl
shll
das
iret
sbb
dec
ja
loope
or
jge
jge
scas
jge
pusha
jmp
dec
dec
cltd
arpl
jl
call
push
loopne
sub
cmp
xor
sbb
dec
in
orl
pop
cmc
repz
mov
xchg
xchg
loope
aaa
int
mov
push
scas
sbb
xor
mov
and
movsb
popf
cmp
cmpl
mov
test
lods
das
push
add
add
sbb
jae
cltd
gs
mov
cmpsb
pop
scas
out
std
jbe
pop
fsubrl
xchg
test
sub
add
xchg
lea
sbb
pop
fsts
sub
add
mov
xchg
ja
jnp
pop
lock
jecxz
pushf
mov
push
mov
sub
pop
es
push
lds
iret
inc
mov
rorl
add
xchg
add
idivl
mov
ss
or
sbb
ret
xchg
hlt
mov
in
mov
jno
push
incl
xorb
inc
dec
xchg
mov
data16
adc
push
jne
mov
jmp
test
or
jle
jns
adc
push
je
xor
xor
nop
jne
mov
xorb
sub
int3
jle
iret
int
comiss
dec
and
adcb
fst
loope
mov
lods
stos
stc
inc
in
pop
lds
pop
sub
aas
jne
in
cli
and
nop
or
lea
inc
fstpt
sete
jmp
fcoml
sbb
sub
xchg
pushf
in
cmpsb
std
dec
int
in
inc
loope
loope
test
sub
adc
pusha
push
and
push
or
clc
loop
out
mov
xchg
or
sub
pop
inc
hlt
jae
out
add
sub
xchg
mov
sub
mov
rol
shl
testb
sbb
in
hlt
adc
sbb
out
mov
and
imul
rorl
ss
mov
es
dec
in
push
inc
dec
push
mov
sbb
nop
ja
mov
ja
out
jo
jo
cmp
shll
loopne
sbb
mov
stc
cs
call
fbstp
push
fiaddl
fsubl
adc
pop
xchg
addr16
stos
add
test
loope
xchg
sbb
mov
push
and
mov
shlb
jmp
pushf
in
int
stos
pop
outsb
js
es
push
inc
jo
mov
sbb
and
mov
insl
lods
xbegin
xchg
lods
cmpsb
xor
pop
fimuls
lds
repz
daa
inc
jo
mov
aaa
push
out
or
or
dec
or
leave
loopne
iret
or
mov
imul
mov
jmp
imul
mov
divb
or
add
outsb
add
inc
sub
out
mulb
adc
adc
aas
cmpsl
jmp
mov
inc
push
sub
jge
stos
dec
fdivrs
add
add
fcoms
sbb
mov
pop
push
dec
pop
mov
cmp
hlt
add
xor
gs
cwtl
stos
adc
pusha
pop
out
pop
xchg
ds
pop
inc
mov
ljmp
insl
jle
jno
fs
pop
add
das
jmp
sub
shll
mov
mov
aaa
das
pusha
push
imul
mov
or
dec
subl
faddl
imul
cli
cwtl
mov
xor
repz
shrb
adc
pop
cmpsb
lods
mov
aaa
fildll
pushf
iret
push
clc
outsl
mov
lock
dec
sub
jg
inc
xor
scas
loopne
pop
inc
dec
mov
fldt
ja
mov
stc
test
adc
clc
clc
dec
jnp
mov
std
or
jo
sarb
movsb
cmp
mov
lods
jae
inc
fldcw
sbb
repz
inc
or
sub
sarb
jecxz
jbe
or
data16
push
daa
cmp
sub
jne
sub
imul
push
mov
push
jmp
testb
xchg
imul
popf
cmp
add
int
cmp
jo
push
push
cmp
mov
add
sub
inc
je
push
flds
hlt
xor
popa
dec
mov
jecxz
arpl
mov
xchg
mov
es
dec
or
mov
sti
lock
jo
push
inc
cld
ljmp
lret
insb
shlb
adc
out
dec
add
aam
jp
dec
jnp
iret
push
fwait
cli
movsl
stos
in
mov
push
or
popa
pushf
inc
mov
or
rclb
shrl
xchg
mov
inc
jbe
jecxz
into
or
fnsetpm(287
lds
stos
pop
sub
xchg
rorb
cmc
pop
inc
aam
in
stc
inc
pop
imul
push
sbb
roll
xor
inc
mov
add
cmp
aad
out
roll
cltd
dec
dec
mov
fstps
ret
cld
xor
movsl
mov
dec
lods
cmp
imul
jns
cs
lods
lods
cmp
sbbl
negl
mov
dec
adc
fwait
push
insl
mov
mov
mov
pop
stc
and
lret
or
mov
or
add
push
adc
aas
in
pop
in
je
roll
mov
shll
test
push
insb
sti
ret
stos
and
jae
fisubs
sub
sub
and
jno
mov
stos
push
mov
lea
std
shll
jbe
popa
mov
push
jle
jne
mov
fiaddl
popf
mov
lods
stos
cmp
cld
hlt
outsb
push
add
pop
sub
mov
add
or
enter
jle
aas
rorb
push
sbb
push
cmc
aam
gs
scas
sub
sbb
fistps
mov
xchg
std
ja
mov
sti
insl
and
and
enter
mov
cmp
mov
popf
jb
dec
stc
mov
pop
imul
addr16
or
mov
mov
popl
movsl
sub
cmpsb
je
xchg
cmpsl
test
lods
inc
pop
lods
cmpsb
jns
or
iret
jno
pop
sub
sbb
outsb
and
inc
xor
into
jbe
movaps
in
pop
mov
mov
and
inc
insl
or
mov
cmpsl
and
jb
dec
movsb
pop
adc
mov
ljmp
leave
lea
or
jge
xor
fidivl
fwait
in
mov
movsl
xor
xchg
inc
cmp
push
mov
cmp
mov
movsl
jge
lret
stos
or
and
add
iret
iret
ljmp
arpl
rol
pop
out
stos
mov
and
pop
sbb
inc
sub
and
mulb
mov
pop
inc
push
ds
fsubrl
cmp
inc
in
and
push
aad
outsl
or
mov
rclb
mov
nop
dec
out
xchg
mov
leave
dec
jge
pop
lahf
ja
mov
ret
in
andb
mov
movsb
mov
lret
push
jno
inc
push
or
push
jns
sub
pop
jno
imul
imul
out
push
add
mov
lahf
iret
adcl
jns
cwtl
sub
ret
pop
js
clc
ret
mov
daa
jle
out
xor
inc
mov
sarb
lcall
test
add
sbb
or
lcall
pop
sub
arpl
incl
add
int
popa
cltd
mov
insb
roll
and
popf
idivl
sub
rclb
or
js
inc
mov
jecxz
jb
bound
es
xchg
pop
lahf
adc
fs
jae
inc
mov
jecxz
test
push
sbb
fcomps
jp
adc
int
es
jbe
fstpt
xor
jns
pop
dec
sub
add
out
pop
sub
stos
jb
xorl
add
pop
cmp
mov
dec
lea
mov
sub
dec
or
lods
hlt
add
mov
inc
mov
mov
jns
mov
mov
cmp
lcall
subl
stc
fnstcw
pushf
nop
stos
fidivrl
lods
aam
inc
jg
cld
call
mov
xor
aad
cmp
lcall
stos
and
inc
rol
fisttpll
cwtl
movsl
sub
xlat
iret
pop
notb
into
sti
in
mov
add
stc
fucom
push
fdivs
out
jb
dec
xchg
lret
xor
add
cmpb
popf
cmp
and
nop
sti
stc
push
or
mov
or
pop
ror
cld
or
sahf
push
test
iret
and
adc
std
dec
xor
addl
pop
add
cmp
pop
cs
pop
sub
mov
xchg
pop
inc
fwait
mov
and
add
xchg
aas
insb
cmp
fisubs
jp
and
int3
in
sbb
jne
out
push
sub
orl
jl
pop
adc
je
jnp
pop
mov
inc
xchg
sbb
xchg
dec
sub
mov
lret
or
mov
es
push
ret
out
andl
and
rcrb
xchg
xchg
js
dec
push
inc
and
dec
jno
jecxz
mov
sbb
cld
mov
scas
adc
jne
call
mov
cmpsl
pop
mov
rcrb
dec
movsb
nop
push
jmp
lea
cli
mov
and
jb
popf
cmp
jno
xchg
mov
ja
outsb
test
or
gs
push
adc
adc
ss
decl
push
mov
rorb
sbb
mov
inc
incb
mov
push
loopne
movsl
in
dec
jo
pop
das
js
scas
aad
lcall
mov
push
orl
imul
jmp
add
sarb
outsl
inc
sub
and
rorb
jbe
ret
lahf
out
dec
test
scas
shll
inc
outsb
inc
inc
push
inc
xchg
loopne
lea
pop
push
or
xor
pop
push
gs
sti
or
or
leave
nop
dec
aas
ret
dec
and
cmp
jmp
cmc
stos
push
push
adc
lret
andl
fisubs
aas
sub
and
ss
cmp
lahf
xor
sbb
icebp
in
dec
fisttpl
cmp
sahf
cltd
lods
mov
jge
sbb
sub
std
fimull
cmp
jmp
adc
mov
repz
jno
sub
es
sub
mov
das
subl
push
pop
adc
jns
jp
or
cmpsl
je
ljmp
ds
lcall
scas
pop
xchg
sbb
xor
loope
or
filds
push
in
mov
jnp
xchg
mov
add
jbe
loope
xchg
mov
in
clc
sub
mov
jmp
adc
sub
push
fdivrs
jo
pop
icebp
jae
nop
add
ret
addr16
pop
add
pop
fisubs
jb
dec
mov
idivl
xchg
mov
xor
pop
scas
mov
insb
push
pop
movsl
testb
ret
aad
xchg
push
sub
fstpt
jmp
pop
push
jnp
jmp
add
push
cmc
cwtl
and
sub
mov
dec
pop
pop
ss
cmpsb
bnd
xchg
mov
mov
push
aad
pop
pop
aad
push
dec
stc
mov
dec
mov
jno
ret
push
sarl
or
mov
in
lahf
das
xor
xorl
sbb
dec
adc
cmp
je
add
push
cltd
out
daa
mov
lds
mov
sbbl
dec
push
xor
or
dec
or
inc
mov
in
outsb
push
dec
cmp
and
jle
sub
push
jns
fisubrs
lret
fbld
test
jae
fiadds
xor
xchg
cltd
or
xor
and
pop
xchg
stos
sub
jns
dec
mov
xchg
bound
or
rcll
insb
imul
pop
nop
mov
rclb
or
cmc
xchg
mov
adc
adc
add
enter
icebp
cld
sub
mov
jecxz
adc
popa
cmp
in
nop
xchg
mov
ret
mov
adc
int
mov
cli
cli
push
adc
mov
jge
gs
mov
fistps
jge
mov
or
daa
push
pusha
and
push
xchg
mov
fwait
rcrl
imul
push
adc
inc
addr16
or
add
clc
mov
cmc
mov
mov
pop
lds
outsl
mull
xor
das
xchg
leave
lcall
sbb
ja
jno
dec
add
sbb
mov
insl
fiadds
inc
push
xchg
sbb
mov
push
test
pusha
mov
adc
ret
imul
push
aaa
dec
lds
xorb
clc
and
bswap
sti
imul
adc
lods
mov
mov
xor
arpl
mov
loop
xchg
mov
ja
sbb
inc
mov
repz
sbb
negb
pushf
int3
arpl
fstpl
mov
ja
rclb
push
scas
add
sub
xchg
shll
push
inc
in
cltd
xchg
pop
sub
dec
mov
faddl
inc
or
sub
sub
xchg
lret
test
cltd
jp
inc
movsl
and
jno
push
repz
cmp
add
pop
addl
fdivr
adc
sub
sub
popf
xor
je
sub
dec
xchg
js
movsl
jge
scas
and
arpl
jmp
cmpsb
outsb
addr16
pop
lods
xchg
movsb
inc
sub
cli
cs
in
inc
out
inc
out
mov
lea
scas
sub
sub
dec
pop
out
loopne
faddl
sbb
xchg
jecxz
fwait
rcrl
outsl
insb
xor
lods
and
sub
pop
aas
jg
xor
lds
mov
sbb
inc
push
sbb
jns
addb
mov
cmp
call
jo
scas
pop
cltd
repnz
lods
pop
cmp
cltd
pusha
push
inc
jp
jnp
pop
xchg
or
les
pop
mov
or
xchg
push
push
jns
lret
rcl
mov
sub
popa
adc
hlt
push
inc
out
inc
jne
sti
push
dec
xchg
insl
adc
lock
mov
fldenv
push
fsts
and
jle
add
and
pop
repnz
rcrl
xor
xor
loopne
pusha
mov
shlb
and
cwtl
icebp
cmp
loopne
inc
out
xor
call
out
push
pop
and
dec
shlb
in
pop
xor
das
mov
mov
lods
dec
daa
fldcw
cmp
repnz
dec
ds
mov
pop
lcall
jbe
test
sub
dec
mov
outsl
testl
sbb
je
fcomip
sbb
daa
and
in
ljmp
push
fadds
out
xor
rcrl
ja
adc
js
pop
add
ret
push
in
push
lahf
mov
je
fidivrs
jns
dec
xchg
lret
dec
int3
push
cmp
repnz
push
adc
jbe
es
ds
ss
jecxz
iret
inc
aad
sbb
stos
dec
sub
cmp
adc
pop
adc
rorl
outsl
xor
mov
sub
test
and
nop
cmpsl
jecxz
jae
dec
jne
lock
fildl
test
aas
je
xor
push
jb
pop
js
mov
jno
push
and
addr16
xor
cld
mov
and
dec
pop
pop
js
enter
mov
sbb
dec
dec
test
pop
ret
and
xchg
sbb
xor
mov
sbb
xlat
dec
idivb
insl
iret
arpl
mov
xor
int3
divl
push
test
sub
and
in
inc
sbb
repnz
adc
push
imulb
in
mov
sahf
lea
xchg
adc
xchg
xor
jge
int
daa
pushf
js
and
adc
rol
repnz
stos
or
mov
es
inc
mov
sbb
imul
test
xor
notl
movl
mov
pop
mul
inc
fcoml
movsl
push
into
mov
repnz
xchg
sbb
push
sbb
leave
test
sub
jns
pushf
inc
in
and
push
inc
push
add
push
scas
push
push
divb
out
add
sub
pop
clc
sbb
sbb
repnz
xor
adc
xor
adc
loopne
pop
adc
add
arpl
sbb
cmpsb
jg
sbb
testl
inc
gs
dec
fisttps
jecxz
and
add
imul
pop
inc
lods
popf
movsb
or
inc
cmp
cld
dec
push
ret
push
les
dec
loopne
cwtl
sti
pop
dec
rclb
mov
mov
lcall
mov
mov
dec
or
fmuls
sbb
shrb
ss
or
mov
nop
sub
and
sbb
scas
repz
addr16
dec
mov
insl
idivb
popf
push
stc
icebp
cld
pushl
dec
sahf
imul
push
les
int
call
cmpsb
aaa
idivl
enter
aaa
cmpsl
dec
out
xchg
scas
sub
mov
pop
insl
cmp
or
cmp
lahf
mov
mov
pop
out
dec
push
mov
add
jae
out
dec
dec
add
xchg
fimull
negl
insb
repnz
cmc
xchg
push
daa
jbe
out
xor
pop
das
jo
rorb
xor
bound
sub
or
jmp
lret
call
je
or
cmp
sbb
popa
sbb
cmovle
and
pop
dec
in
jnp
pop
cmp
inc
xchg
pop
sbb
ror
bound
push
xorl
cmp
xlat
and
jmp
dec
jb
mov
pop
xchg
mov
mov
je
inc
popa
test
dec
jge
sahf
push
lcall
das
sbb
lret
add
icebp
imul
pusha
mov
data16
and
mov
sub
outsl
push
pop
rclb
mov
push
mov
or
filds
hlt
inc
cmp
les
mov
adc
mov
cmp
call
es
lock
mov
xchg
mov
test
sti
fisubs
mov
movsl
mov
add
and
movsb
xchg
jg
jo
sub
cld
jb
xchg
andps
sbb
inc
repnz
ja
push
inc
lcall
push
movsl
jb
vcvtsi2ssl
das
repnz
xlat
into
in
fildll
mov
cltd
jno
faddl
adc
outsb
xor
adc
rcrb
adc
or
mov
inc
lret
pop
sub
push
cmpsb
jae
rclb
sub
mov
add
jmp
fidivl
jle
pop
mov
cmp
jns
jg
mov
fnsave
scas
or
test
into
icebp
xchg
pop
pop
test
sub
mov
popa
rclb
add
js
int
sbb
or
arpl
mov
loope
adc
mov
mov
sbb
jno
in
fsubl
inc
movsl
xchg
mov
mov
lock
mov
xor
int
push
test
fsub
xchg
cmp
movups
or
repz
loop
sahf
ljmp
xchg
cmp
cld
imul
lahf
push
in
test
or
cmp
jbe
and
xchg
or
test
jg
sbb
cmpsl
jl
or
jmp
insb
out
sti
push
or
popa
inc
call
es
mov
popa
push
xchg
jl
push
or
or
addps
movsl
mov
push
xchg
or
sbb
or
push
pop
or
jo
add
mov
mov
stc
clc
dec
fcomip
and
inc
add
lcall
xor
shll
les
or
lea
imulb
mov
mov
dec
xchg
pop
rcl
pop
sbb
sub
xor
arpl
xchg
xor
jns
dec
jl
inc
cmp
xor
and
pop
jl
in
mov
xlat
push
pop
xor
mov
push
mov
stc
jbe
adc
jno
add
cmp
add
cmp
rolb
sahf
gs
stos
push
adc
adc
fldenv
cmp
pop
mov
mov
dec
mov
dec
cmc
mov
jp
test
sbb
pop
xor
popw
sbb
sub
sub
and
xor
out
xor
jae
mov
jbe
roll
icebp
pop
sarb
mov
cli
add
fnstcw
and
fisubrl
mov
out
sbbb
jbe
std
outsl
call
mov
push
ror
dec
addr16
adc
mov
dec
mov
aam
test
sbb
lea
pop
xor
pushf
aaa
in
lods
xchg
push
sti
pop
sahf
sbb
push
inc
call
sahf
addb
cmp
or
pop
sbb
out
pop
hlt
push
mov
scas
cld
xor
mov
and
data16
mov
ss
fs
out
fs
inc
pop
jne
push
shrl
ret
cmp
jl
pop
push
insb
mov
pop
adc
lcall
add
xchg
sbb
scas
xchg
lods
jne
pop
or
push
add
add
fs
cmp
lahf
sbb
or
repz
ret
adc
repnz
add
mov
jnp
jecxz,pt
dec
jo
fistl
movsl
lahf
ljmp
sti
pop
pusha
cmpsl
add
mov
inc
inc
call
sbb
pop
mov
cs
xor
add
iret
xchg
sub
adc
mov
jle
sbb
ret
aas
inc
fcmovbe
hlt
and
inc
dec
cmpsl
nop
mov
cld
and
mov
dec
mov
test
add
icebp
seta
dec
fs
lock
daa
push
sbb
out
fidivl
xor
popf
xchg
fdivrs
sbb
push
xor
out
sbb
sarb
mov
add
stc
aaa
neg
mov
add
bound
loopne
fbld
out
pop
mov
ljmp
scas
inc
cmpsb
stc
out
out
jmp
aad
xchg
or
cmp
sub
and
je
mov
test
and
pusha
out
into
or
xchg
repz
xlat
sub
aam
int
push
sub
jae
fimull
lret
fisttps
push
jecxz
out
jb
fcompl
push
pusha
sbb
mov
xchg
mov
mov
dec
xor
mov
jp
out
add
in
iret
inc
pop
js
lock
pop
sbb
mov
push
sbb
or
sbb
subl
xchg
cmpsl
jne
mov
test
mov
xchg
jg
sahf
xor
pop
mov
cltd
cli
mov
mov
daa
mov
mov
pop
push
testl
ss
lods
sub
clc
lahf
pushf
xlat
sbb
test
test
or
fnstenv
insb
inc
mov
in
fistpll
in
test
sub
repz
xchg
jo
into
repz
jo
cli
out
stos
xchg
fsub
mov
cmp
mov
shl
mov
cmp
xchg
movsl
cwtl
testb
lea
mov
pop
mov
repnz
cli
and
mov
loop
mov
int3
mov
xor
cmp
fdivl
lret
data16
mov
imulb
mov
aad
dec
subl
pop
push
add
rep
sbbb
and
push
std
ss
xchg
sar
dec
orb
jmp
adc
out
in
pushf
les
add
cmp
cmp
rorl
test
shlb
jecxz
jg
push
mov
inc
ret
pop
or
xor
repnz
scas
loop
fiadds
fisttpll
mov
mov
jmp
rcrl
hlt
mov
sarl
mov
out
sahf
pusha
in
dec
enter
jo
cwtl
aas
sub
mov
movsb
out
in
jb
hlt
lret
aas
jge
cmp
sahf
ss
stc
cmp
or
hlt
sqrtps
sub
xchg
xchg
xor
cmp
mov
call
fsubs
jo
scas
xchg
leave
pusha
or
roll
fmul
and
jmp
es
mov
lahf
daa
mov
dec
or
adc
ret
outsl
adc
pushf
mov
mov
mov
jnp
push
mov
mov
jo
hlt
mov
pop
and
sub
sahf
in
scas
and
push
mov
xchg
mov
rcrl
loop
adc
cmp
adc
push
xlat
mov
or
loopne
scas
jmp
shrb
mov
sbb
xor
mull
stos
fnstenv
ljmp
cmc
add
xorl
inc
jp
clc
cmpsl
xlat
mov
stos
call
out
mov
test
loope
add
stos
aad
je
pop
mov
add
outsl
xor
sub
fs
aam
pop
cmpsl
icebp
lret
xchg
xchg
out
sarl
pop
movsl
jg
cmp
mov
and
fsubs
pusha
add
xchg
mov
icebp
gs
push
mov
add
in
sbb
aas
mov
clc
std
mov
adc
aam
dec
shl
xchg
mov
cmp
cmp
cli
push
repnz
jmp
loope
dec
mov
xor
sbb
movsb
sub
jge
out
adc
inc
push
adc
sbb
imul
lods
mov
mov
xor
push
clc
dec
push
push
push
push
adc
xchg
enter
add
popa
dec
bound
mov
sbb
push
test
mov
or
adc
shll
inc
dec
sub
fnop
jle
or
mov
int
outsl
sbb
inc
jmp
xor
int
aam
aaa
xor
addr16
jae
mov
aam
pop
mov
xchg
mov
push
adc
loop
insb
aad
stos
adc
in
pop
or
cs
out
icebp
or
scas
or
rcll
scas
inc
pushf
jl
mov
push
xchg
fdivrl
push
pusha
idivl
or
std
in
jp
mov
lea
xchg
fwait
rcrl
cmp
sbb
cmp
loope
in
and
and
pop
aaa
jns
out
and
xchg
lods
pop
push
fisttps
test
and
imul
xchg
lods
js
mov
cmpl
mov
jle
mov
data16
imul
sbb
pop
dec
jo
cmpsb
jne
inc
sbb
inc
mov
in
mov
mov
addl
js
gs
dec
mov
insl
cmovge
jg
loope
pusha
mov
ljmp
mov
jmp
ljmp
clc
xchg
movsl
test
xor
daa
rorb
mov
xchg
repnz
push
dec
mov
xorb
push
and
adc
and
jecxz
or
xor
fwait
or
jecxz
xchg
mov
test
cmc
xor
imul
mov
fidivl
cmp
xchg
bound
cltd
cmpxchg
sub
jecxz
xor
and
loop
outsb
mov
jg
xorb
mov
loopne
lea
mov
nop
or
rorl
ja
jae
pop
cmp
sub
fs
mov
jmp
mov
cltd
popf
mov
cli
testb
dec
mov
imul
loop
cmpsl
dec
ljmp
push
pushl
rcr
int3
les
dec
or
cmpsl
xchg
inc
lahf
jns
loope
inc
clc
xchg
xor
lds
fcoms
pop
and
jge
pusha
and
and
sbb
xlat
out
jne
push
cmpsl
jns
shll
pop
sub
stos
insl
xchg
fisubrl
mov
jg
or
jae
jl
adc
out
daa
in
das
aas
inc
jbe
cli
movsl
xor
xchg
mov
xchg
adc
push
clc
imul
cmp
mov
andl
popf
jno
and
imulb
or
jns
loopne
mov
decb
pop
stos
decb
fbld
jns
fstpt
add
rorb
dec
mov
jecxz
mov
call
xchg
pusha
mov
sbb
lock
scas
lds
push
rcrb
mov
push
mov
stos
cmp
push
jg
adc
push
out
mov
lods
cs
cmp
enter
or
sysexit
adc
jp
sbb
fistps
sbb
mov
xchg
ret
mov
int
add
add
scas
pop
jg
lret
sbb
dec
cmpsb
arpl
stc
sti
sub
clc
out
mov
mov
xchg
adc
add
mov
mov
xor
pop
int
xchg
mov
ja
xchg
mov
add
adc
imul
xchg
jmp
out
fistps
xor
jecxz
push
sbb
insl
pop
pop
and
addr16
xor
fisubl
rol
push
cmp
xchg
das
int3
lds
je
push
push
imul
mov
in
sbb
arpl
push
lret
push
fwait
int3
mov
cmp
push
movsl
and
xchg
mov
js
cmp
mov
lea
push
cmp
idiv
inc
mov
stc
push
push
pop
incl
js
hlt
xchg
xchg
xchg
test
jmp
or
cmp
or
int
xchg
lahf
add
pop
rol
push
mov
stc
mov
xor
mov
sbb
cmp
dec
mov
push
adc
and
xchg
outsb
inc
mov
insb
stc
fwait
mov
fisubs
jp
sub
cli
je
mov
sbbb
inc
or
cmp
inc
lahf
lods
icebp
shl
mov
loope
jno
fcomi
sbb
dec
sbb
outsl
int
in
icebp
out
cltd
and
sbb
mov
xor
jge
outsb
pop
cmpsb
js
xor
subl
xchg
mov
xor
or
fdivl
mov
mov
cmp
fs
stos
cmc
rclb
test
lcall
mov
inc
cmp
js
sbb
fildl
in
aam
repz
adc
fs
sbb
mov
out
mov
jmp
cmp
mov
or
cmp
fstpt
jmp
add
ljmp
je
jbe
test
sbb
sbb
sub
loopne
pop
fdivrp
mov
xchg
pop
fnstsw
sbb
xchg
push
inc
negb
repnz
movsb
pop
add
adc
sbbl
or
inc
cltd
ss
bound
mov
bswap
mov
jnp
cmp
test
mov
lret
jl
ror
leave
pop
pop
cmp
xchg
daa
std
inc
or
imul
loopne
ja
daa
jnp
icebp
je
xchg
mov
cmp
push
adc
fidivrs
jl
mov
dec
clc
shr
repz
cmc
mov
fwait
mov
pop
aas
decb
mov
sti
add
jg
mov
inc
or
ja
jecxz
orl
ret
push
mov
mov
or
fadd
aaa
ret
jae
push
lret
push
cwtl
mov
xor
aaa
pop
cwtl
pop
lock
xor
mov
arpl
out
testb
pop
test
lods
jae
adc
jne
fcmovne
sbb
push
sti
mov
shll
stos
cmp
add
movsb
pop
fdivrs
scas
or
xchg
cltd
into
mov
xchg
xchg
mov
xor
out
sbb
ss
jle
test
push
das
xor
mov
popf
clc
lock
scas
cmp
add
fptan
and
and
loopne
fmul
push
sbb
push
pop
fisubrl
push
mov
add
idivb
and
xchg
rcrb
repz
mov
fs
ja
xchg
push
pop
cmp
mov
adc
pushf
cmpsb
mov
pop
jno
cmp
add
xchg
outsl
mov
push
loope
xchg
pusha
nop
add
in
mov
fidivl
jnp
mov
enter
cld
adc
fnstenv
js
or
repz
clc
stos
push
dec
mov
jmp
jns
mov
and
mov
or
and
loop
mov
xor
stos
es
shl
and
mov
pop
dec
inc
aas
loop
sahf
or
sti
bnd
ret
sbb
fcoms
dec
or
fidivrs
rolb
xchg
add
jb
mov
pop
roll
mov
shr
cmpsl
mov
stos
imul
fs
shl
xor
inc
fsubs
iret
xor
adc
and
mov
cmpsb
and
push
ret
inc
inc
mov
in
cmp
out
ljmp
jl
pop
cmp
es
cld
test
sahf
or
pusha
mov
pop
jo
sbb
jae
popa
mov
call
mov
aad
clc
mov
iret
mov
cmp
nop
fs
rcrl
movsb
mov
xlat
jbe
mov
inc
xchg
jne
lret
push
jo
fcoms
jb
bound
add
imul
sbb
jb
xchg
fdivl
or
pop
xor
push
cmovg
outsl
rcr
stos
test
xchg
and
repz
cmp
cmpsb
ret
outsb
push
pop
hlt
jae
sbb
push
sbb
data16
imul
es
or
dec
je
cmc
lar
adc
rolb
xor
andb
in
push
xchg
rorl
mov
jno
rcrl
cmp
mov
mov
popa
mov
jo
scas
push
fisttpl
insb
mov
and
cmp
and
lret
mov
jmp
or
dec
add
int
fwait
xchg
mov
xchg
mov
cmpsl
lea
mov
test
cmp
cmpsl
xchg
push
mov
push
mov
push
push
lret
mov
and
inc
daa
out
push
push
mov
jne
and
dec
inc
das
js
mov
add
stc
or
lock
mov
enter
invd
shll
cmpsl
shrb
scas
imul
lock
lods
aaa
sub
stc
or
pop
inc
fnstenv
ja
dec
pop
in
cmp
push
negb
enter
loop
jmp
insb
sbb
stc
xor
mov
icebp
adc
orl
inc
dec
out
add
lods
cmp
test
loope
lcall
mov
mov
cmpsl
sub
and
lods
pop
movsl
in
inc
aam
int3
subb
sbb
imul
add
movsb
mov
inc
call
fidivrs
mov
stos
cld
or
add
cs
jnp
xchg
out
inc
fildll
pop
or
and
push
ret
sti
sarl
lods
pop
popf
aam
inc
xor
popf
adc
mov
lcall
gs
sub
mov
xchg
inc
iret
fldenv
jo
push
or
jbe
add
insl
out
ljmp
sub
mov
dec
pop
mov
int3
sbb
or
and
outsb
cmp
js
test
push
xor
add
mov
add
push
mov
sub
daa
mov
jbe
cwtl
popa
imul
inc
adc
mov
and
divl
xchg
mov
and
in
repz
aam
jno
add
rclb
pusha
nop
mov
push
add
daa
mov
jne
mov
cmp
push
or
mov
or
push
mov
ret
cli
imulb
jo
mov
jmp
sbb
daa
js
add
mov
inc
insb
mov
scas
insl
enter
push
jmp
mov
cmpb
notb
lea
mov
test
ror
push
mov
xlat
rol
lds
ja
jmp
sub
adc
sbb
shlb
or
xchg
sub
push
sbb
mov
test
loop
add
xchg
xchg
into
ret
popf
sbb
leave
sbb
mov
js
pop
xchg
cmp
movsl
adc
adc
mov
jb
bound
sbb
add
mov
enter
loop
cmpl
sub
and
xchg
es
xor
rorb
cmpsb
ficoml
stc
push
inc
test
imul
jmp
mov
and
xor
cmpsb
ror
imul
sti
test
insl
mov
cmp
cmp
add
mov
push
fst
pop
pop
sub
scas
adc
cltd
int
in
push
addr16
xchg
or
addl
or
xor
cmc
cmpl
dec
gs
dec
mov
or
stc
aad
add
enter
testb
sbb
movsl
repnz
xchg
scas
shrd
mov
adc
out
test
or
push
mov
lds
push
xlat
mov
outsl
cmp
push
cmp
test
dec
or
test
mov
add
mov
call
push
popa
test
sbb
pop
test
negb
pop
call
add
adc
insl
shlb
xchg
aas
cwtl
test
inc
and
inc
push
repz
xor
hlt
js
test
fnsetpm(287
cld
outsb
into
lds
aam
mov
fildll
hlt
push
cmc
shlb
and
mov
stc
push
fistpl
inc
insb
mov
jge
inc
mov
xchg
pop
lret
sub
and
mov
sbb
or
aam
insl
adcl
hlt
popa
add
mov
adc
fwait
inc
pop
stos
xor
xor
pop
mov
loope
mov
mov
and
sti
fimuls
pop
add
cmp
and
adc
pusha
fstl
frndint
into
aam
sub
sub
lret
daa
daa
in
sbb
mov
mov
ror
jg
ret
jns
dec
jmp
insl
rcrb
jae
test
je
cs
dec
pop
dec
add
push
test
loopne
outsl
test
pop
aaa
xchg
arpl
xor
aas
addr16
push
inc
cmc
and
add
or
inc
jae
ret
mov
push
jae,pt
sbb
xchg
fdivs
shrl
ljmp
sub
sti
into
push
sbb
or
dec
and
cmp
ror
push
bound
lcall
test
stos
push
in
mov
insl
aad
aaa
loop
sbb
cwtl
cmp
xchg
pop
xlat
lcall
bnd
push
mov
jne
rcrb
stc
xchg
aas
test
testl
cmp
popa
in
push
sub
fwait
adc
fmull
rcll
repz
jne
icebp
sub
push
jae
rcrb
or
incb
and
and
pop
push
sahf
and
jg
test
repnz
hlt
cmpsl
fwait
leave
lret
adc
mov
sar
xor
js
filds
xor
je
and
inc
mov
push
test
iret
lds
push
por
mov
pop
aas
jg
cs
dec
mov
mov
iret
mov
fnsave
shlb
data16
fstpt
enter
mov
loope
push
fsubrp
add
out
add
stos
bndldx
incl
stc
xor
mov
ret
outsb
aas
mov
jnp
xchg
mov
lea
dec
or
fstl
das
sub
imul
xlat
mov
jle
cwtl
adc
add
fucomi
fwait
mov
shlb
adc
lret
pushf
xor
jno
je,pn
mov
jle
jmp
mov
das
mov
or
push
ret
inc
out
out
inc
pushf
dec
ds
adc
cmp
fwait
ljmp
mov
add
or
popa
mov
fwait
lahf
daa
cmp
add
add
outsb
pop
mov
or
mov
mov
test
sti
xchg
xor
push
loop
lret
mov
and
jmp
mov
roll
push
or
adc
push
add
inc
rorl
sub
jmp
push
roll
shlb
xor
aas
insl
add
xor
movsb
bound
rcrl
cmp
scas
cmp
into
mov
cmp
popf
pop
fcomi
scas
mov
dec
push
xchg
add
hlt
call
mov
adc
test
loop
xor
movsl
clc
in
mov
rcr
adc
lds
sbbb
xor
jb
sub
dec
sbb
add
and
xor
ret
dec
daa
fs
nop
iret
inc
movb
pop
inc
enter
pop
sbb
repnz
pop
out
es
movsl
aam
les
xchg
lods
movsb
mov
data16
push
sarl
xchg
clc
flds
push
mov
aam
idivb
push
pop
cmp
decl
aam
andb
sbb
and
iret
movl
ljmp
shlb
jle
and
movsl
pop
or
mov
xchg
or
imul
jg
movsb
xchg
lods
add
fsubr
cld
mov
push
repnz
cmc
dec
inc
jbe
push
int
icebp
xor
or
ss
shll
push
test
stc
sub
test
loop
je
jns
fldcw
jp
mov
sbb
mov
dec
or
pop
idivl
in
adc
call
pushf
insl
idivb
xchg
cmp
mov
jb
mov
jae
clc
test
aas
mov
xor
xlat
sbb
cmpsl
mov
aas
mov
adc
call
sbb
enter
insl
push
stos
loope
lahf
cmpsb
out
pusha
sbb
or
push
mov
cmp
imul
je
and
cmp
test
push
push
shl
fcmovb
add
sbb
fmull
mov
popa
xchg
hlt
ficoms
adc
ret
ljmp
jo
add
dec
mov
jmp
mov
lea
dec
mov
iret
stos
ja
or
xor
mov
mov
ret
sbb
cmp
push
aaa
out
es
xchg
loopne
and
jmp
sub
push
sbb
and
out
push
bnd
into
push
xor
and
cwtl
jl
popa
mov
mov
daa
outsl
imul
enter
push
adc
xor
repnz
dec
and
xchg
ficoml
xor
bound
jbe
aaa
rcll
in
insb
or
mov
cmp
xchg
fsubl
popa
fadd
xchg
add
lods
cwtl
add
mov
lods
cmp
bound
mov
inc
pop
test
add
loope
les
bound
mov
cmp
orb
xlat
stos
fisttps
lahf
aam
rcrb
ret
cld
push
pop
xor
in
out
fwait
test
stos
repz
nop
fimuls
push
cs
sub
push
xchg
fildll
cmp
cmp
enter
adc
xor
mov
movsl
xor
fcomps
lds
dec
stos
insl
fstps
mov
ljmp
push
jecxz
mov
test
jb
fnstcw
lret
mov
lods
mov
jbe
cmp
mov
lcall
mov
daa
sub
lods
lret
inc
add
mov
mov
pxor
in
lret
mov
xchg
xor
jo
pop
pusha
movsb
sub
xchg
xchg
mov
data16
cmp
pushf
rdmsr
push
popf
je
sti
or
fiadds
sub
repz
xlat
and
cwtl
mov
mov
adc
lods
lret
rcl
leave
das
mov
rcrl
dec
adc
mov
sub
and
xchg
andl
rclb
push
lods
jae
mulps
jnp
js
je
int3
sbb
fidivrs
xlat
cmp
push
ret
jno
push
je
pop
ss
stc
jb
sub
shrb
sahf
out
add
sub
scas
in
lock
mov
rcrl
xor
jne
sahf
leave
pushf
add
inc
adc
test
addb
gs
push
pop
xor
imul
add
cmp
and
das
movl
inc
push
sub
fsub
rcrl
pop
call
mov
data16
inc
out
std
scas
jae
imul
jl
push
jae
negb
nop
jns
jo
sti
cmp
pop
jle
inc
xchg
mov
mov
inc
xchg
fisubrs
xchg
push
jb
je
mov
add
gs
repnz
mov
sbb
aas
in
mov
push
push
mov
xor
or
cwtl
mov
pop
stos
jno
hlt
dec
pop
pop
sbb
cmc
sub
aad
testb
jge
push
xlat
mov
jecxz
int
aad
push
frstor
dec
jnp
sub
fnsave
in
cli
mov
lds
xor
enter
enter
inc
mov
pop
and
mov
dec
and
aaa
cmp
xorb
in
scas
jno
movsl
test
and
mov
ss
jp
div
in
data16
inc
sbb
lds
dec
xchg
hlt
mov
adc
cwtl
adc
mov
stc
sbb
pop
add
mov
arpl
sbb
fldenv
adc
jl
xchg
nop
pushf
mov
imulb
imul
dec
rolb
mov
dec
xor
out
xor
fidivs
fxam
inc
add
inc
push
iret
movsl
cmpsb
in
mov
mov
fdiv
push
add
and
xchg
lret
into
lea
add
inc
cli
mov
push
fwait
int
mov
mov
jmp
arpl
stos
inc
rclb
int
xchg
out
ret
aam
jecxz
sar
loopne
dec
movsl
sarl
ja
mov
fldlg2
xor
or
imul
ret
xorl
fmulp
or
cmp
fidivl
adc
sub
or
inc
out
mov
xor
and
in
loopne
xor
mov
sbb
pop
fsubr
outsl
lea
sbb
nop
inc
or
pop
int
push
arpl
jno
fnstsw
jo
or
add
and
imul
add
lea
jo
adc
out
ss
movsl
imul
pop
ds
les
push
mov
mov
lods
xchg
jmp
int3
add
jge
ljmp
into
xor
aas
mov
adc
popa
push
cmp
repnz
daa
and
xor
push
xor
and
js
mov
cmpb
out
adc
jecxz
adc
adc
and
or
js
popf
sbb
mov
xchg
mov
dec
imulb
inc
mov
and
cmp
push
cmp
lock
xchg
cmpsl
xorb
sbb
adc
psubb
jl
jae
xor
jge
pop
and
push
pop
add
gs
mov
ficompl
mov
xor
cmp
inc
mov
mov
mov
cltd
fsts
xor
adc
testb
add
push
rep
xor
dec
inc
jge
push
icebp
cmp
cmp
jge
inc
out
cmp
icebp
popa
outsl
push
adc
stc
xchg
cmpsl
xchg
jo
rorl
js
aad
add
mov
std
dec
mov
inc
mov
data16
cmp
lds
jbe
mov
repnz
push
call
sbbb
mov
insl
imul
add
je
arpl
loop
lds
sbb
outsl
cmpl
adc
cmpsb
xchg
pop
movsl
cwtl
notb
dec
adc
add
orl
into
xchg
sbb
jns
mov
mov
fwait
cmp
cli
insl
mov
mov
pop
popl
xor
out
sub
adc
adc
push
in
add
cmc
xchg
test
cs
jp
fmuls
dec
aaa
cmp
movsl
fisubs
sub
negl
push
push
lds
test
imul
clc
enter
jne
add
xchg
insl
pop
pop
icebp
xor
jb
cltd
sub
sbb
pushf
push
xlat
mov
and
mov
xchg
mov
outsb
and
jbe
bound
icebp
mov
mov
addb
stc
jp
movsl
sarl
sahf
and
insl
sbb
je
mov
fbld
leave
sub
sbb
cltd
pop
js
mov
mov
les
push
rcr
lret
push
data16
xor
dec
nopl
in
sub
pop
pop
out
lret
jmp
add
cld
add
cltd
xor
out
sti
int
push
cmpsb
sarl
fidivrs
test
sub
and
xor
cmp
ja
mov
fisubrs
xchg
and
xchg
pushf
pop
lea
xchg
orl
push
dec
insb
hlt
in
and
in
rorl
pop
bound
fcomp
adc
mov
int
les
jbe
pop
aas
gs
add
xor
loop
xorl
cmp
test
mov
out
sub
sbb
rorb
adc
call
scas
mov
fs
loop
mov
xlat
std
icebp
outsb
test
mov
cmp
pop
outsl
mov
fisttpll
ljmp
or
cmp
jmp
xchg
lods
lock
ss
mov
and
jns
push
cmp
iret
mov
mov
xor
jns
psadbw
in
add
pushf
ss
sti
add
adc
sub
jmp
push
pop
push
sub
ss
mov
xor
or
mov
sbb
scas
mov
push
dec
dec
aaa
ljmp
loop
jl
mov
cltd
ja
mov
loop
xchg
jl
xor
rcll
imul
aas
seto
push
popa
xchg
data16
das
dec
jo
loope
and
push
mov
cmp
sub
arpl
xor
xchg
jl
stos
js
mull
push
pop
dec
pop
and
xor
xchg
adc
sbb
dec
inc
add
movsb
aas
out
inc
imul
sbb
lods
aam
mov
inc
fists
lea
lret
cmp
cs
in
dec
repz
jo
adc
mov
fwait
sub
sub
adc
outsl
lock
inc
fs
lods
aam
scas
call
jno
push
fucom
dec
outsb
cwtl
loope
push
loop
jl
es
push
ja
sub
cmp
in
test
mov
add
add
jo
arpl
les
popf
jns
ror
xor
dec
jnp
pop
stos
cmp
add
stos
pop
ss
inc
movb
lods
pop
inc
insl
sbb
insl
std
lock
jecxz
jne
lcall
push
xor
mov
fcmovnb
repz
pop
sahf
push
aaa
ss
mov
xlat
pop
add
jle
in
cmp
jnp
inc
call
add
mov
scas
out
lret
sahf
push
sbb
xchg
cmp
jecxz
dec
out
mov
lcall
mov
jne
lea
lea
push
cwtl
data16
sbb
sbb
pop
lcall
psubusb
fidivs
xor
push
add
shl
mov
mov
popa
jnp
mov
in
aad
ja
pushf
popa
nop
test
jp
dec
sub
or
inc
sbb
cmp
hlt
outsb
jo
add
pop
rolb
stos
jg
mov
sub
pop
cld
mov
addb
mov
cmpsl
sub
inc
inc
rolb
loopne
jo
adc
mov
or
add
int3
in
imul
lock
mov
data16
add
je
loopne
lock
lcall
inc
out
push
sub
xor
ret
and
mov
dec
hlt
sub
xchg
inc
mov
mov
repz
xchg
mov
xlat
outsb
lahf
dec
jns
bound
ljmp
push
inc
repz
cs
xor
jbe
shrl
ljmp
in
das
cmpsb
sbb
sbb
ds
dec
test
adc
jae
pop
lea
jns
movl
push
push
dec
lods
notb
cmp
lcall
inc
xchg
inc
out
shl
ret
orb
lds
leave
xchg
inc
xchg
pop
pop
inc
jno
push
pop
data16
pusha
mov
mov
or
es
pushf
test
jns
pop
dec
out
adcb
xchg
repnz
fcom
mov
dec
and
loopne
lock
sbb
shll
ja
sub
mov
xchg
loop
inc
js
push
es
int
fldcw
sub
les
pop
mov
ja
test
push
dec
jno
jmp
mov
pop
pop
inc
jp
mov
xor
mov
fdiv
in
xor
xchg
fcomip
xchg
mov
aam
sbb
movsl
or
xor
insb
mov
stc
fsubrl
mov
pop
xor
rep
pop
pop
stos
sbb
cmpsl
fcomps
pop
loop
pop
jb
add
andb
pop
lods
mov
push
push
aam
xor
popf
fidivrl
xchg
mov
insl
loopne
dec
test
ljmp
mov
push
insb
mov
or
cld
xor
ret
lods
jmp
fwait
sti
pop
nop
fadds
mov
adc
add
sub
js
negw
test
scas
aas
push
aaa
mov
cs
iret
or
pop
test
sti
push
call
mov
scas
fldl
fsubrs
mov
jmp
shll
sub
inc
stc
cltd
add
test
dec
inc
cmpsl
adc
sub
scas
jp
cmp
dec
lds
pop
add
bound
sub
cmp
push
adc
in
cmp
mov
xchg
xchg
lock
movsl
stc
dec
fisubs
imul
push
xchg
inc
aaa
jne
gs
push
jne
aad
das
iret
cwtl
add
xor
jg
inc
dec
mov
push
scas
pop
cmpsb
scas
ss
orl
lods
xor
arpl
pop
push
jl
and
xor
xchg
pop
and
inc
rcrb
call
test
and
cmp
pusha
loop
inc
clc
out
mov
stos
lret
mov
lock
adc
jmp
cmp
inc
fbstp
int3
xchg
addr16
mov
arpl
xchg
test
add
enter
xchg
es
adc
mov
jno
adc
aas
in
push
pop
icebp
mov
test
sub
push
decl
insb
hlt
adc
fmull
addr16
dec
test
xor
pop
xchg
ffreep
test
jnp
in
std
sbb
mov
stos
lcall
int3
xrelease
in
and
adc
cld
enter
movsb
or
dec
or
ret
jp
je
adc
cwtl
sarl
test
mov
popa
je
stc
icebp
jbe
mov
std
add
add
mov
xor
mov
adc
or
or
or
push
lods
mov
mov
jmp
add
ret
lret
cmp
movl
sbb
jnp
push
popl
sbb
sub
inc
cmpsl
mov
sbb
cltd
jno
sbb
leave
loopne
test
mov
imul
inc
aam
sbb
xchg
sbb
nop/reserved
mov
jecxz
mov
aam
out
shlb
in
rcrl
testb
mov
or
cld
pop
pop
xchg
jo
lds
cmpsb
inc
bound
in
cmp
scas
out
repnz
imul
lret
addr16
fildl
jb
icebp
lcall
insb
jns
mov
sub
popf
je
sbb
lahf
mov
jle
and
sar
enter
xor
test
cmp
lret
jmpw
popf
fxch
jnp
and
mov
int
xchg
icebp
lods
in
fsubrl
add
lar
scas
leave
jp
jnp
adc
in
je
or
scas
addr16
mov
daa
mov
call
xchg
push
pop
repnz
xchg
add
sub
inc
sti
mov
or
xchg
inc
mov
inc
jnp
out
mov
cmpsb
jb
cmp
mov
mov
mov
jmp
ja
inc
or
push
sub
out
orb
dec
not
mov
push
jbe
xor
enter
xor
aaa
push
lcall
or
jle
fcompl
in
mov
pop
icebp
aaa
fisttpl
repz
stos
adc
add
sbb
insb
mov
movsb
mov
test
cmp
in
mov
and
pop
gs
jno
cmp
lret
dec
and
cltd
pop
mov
jp
outsl
xor
jb
les
xchg
inc
shlb
addr16
les
lret
mov
and
aaa
icebp
fcoml
mov
inc
xchg
movsl
icebp
xor
mov
push
xchg
jmp
push
loop
mov
or
mov
xor
mov
pop
aam
mov
ja
fsubl
andl
pop
mov
inc
xchg
inc
shlb
mov
int3
pop
and
stos
fs
pop
ds
xchg
xchg
in
xchg
sub
xchg
enter
loop
hlt
rcll
xor
inc
ss
pushf
incb
add
into
xchg
test
out
je
mov
aaa
cmc
jge
outsl
and
cld
add
cltd
fldcw
mov
jnp
shr
ja
insl
and
out
call
add
ljmp
andb
nop
dec
xor
adc
xchg
xchg
and
cmp
or
mov
test
ss
xlat
sbb
jmp
insl
dec
sbb
ljmp
jle
inc
or
pop
das
push
ja
stos
rorb
movsb
or
and
negb
jbe
pop
rorl
adc
inc
cli
sub
fcompl
gs
in
clc
sub
aas
adc
lret
sar
fidivrs
push
dec
popf
es
rcll
cmp
jo
push
popa
mov
pop
leave
fsubrl
repnz
cmp
push
pop
sbb
fidivl
and
lret
dec
sbb
pop
add
arpl
aad
pushf
add
and
lret
jmp
mov
inc
shrl
popf
pop
mov
mov
cmp
call
sbb
jp
jae
sbb
push
loope
dec
dec
lock
scas
lret
aad
xor
or
lcall
push
inc
xchg
and
test
push
inc
and
xor
insb
ljmp
loop
dec
imul
xor
fneni(8087
or
fisubrl
xchg
enter
int
inc
push
rorb
out
test
inc
xor
mov
scas
cmp
dec
xchg
adc
sub
hlt
jbe
inc
mov
xor
mov
aaa
adc
pop
ljmp
dec
pop
rcrl
btr
sarb
push
inc
dec
jnp
xchg
push
add
add
repz
cmpsb
neg
add
fwait
cld
stos
inc
imul
ss
xor
sub
dec
scas
inc
aas
cmp
stc
jl
or
lock
stos
pop
movsb
imul
sbb
cmp
ret
scas
push
cmp
xchg
push
test
pushf
js
les
fists
jbe
xchg
rorb
inc
jp
je
sarb
int3
mull
aad
adc
cli
or
push
outsb
enter
repnz
inc
jp
xor
loop
shrb
mov
loope
and
xor
test
test
add
xor
adc
repz
cltd
mov
jle
pop
and
jae
int3
or
mov
mov
leave
and
adc
jmp
dec
pop
fcomip
xlat
dec
adc
or
in
push
or
testb
inc
js
pop
shll
roll
clc
xchg
cwtl
fstpl
out
add
pop
sahf
test
xchg
test
inc
pop
mov
xchg
push
ror
fwait
mov
dec
leave
xlat
movsb
jg
cmp
inc
pop
popa
adc
stc
adc
xchg
loopne
in
popa
std
iret
jo
loopne
shlb
sub
jo
ret
xorl
scas
repz
sub
mov
xchg
nop
jno
int
and
ficoml
aas
mov
jbe
jg
mov
dec
stc
in
push
cmpl
insl
or
enter
push
or
mov
push
dec
je
insl
sbb
pop
pop
fmul
cmp
mov
push
adc
mov
test
movsl
adc
lea
fbld
rcl
dec
inc
inc
and
icebp
outsb
stos
push
fdivrs
movl
pusha
scas
add
mov
mov
inc
xor
sbb
fstps
addb
not
jo
and
movsl
cmp
jae
mov
pop
jae
sub
pop
fs
mov
adc
push
xchg
mov
aad
in
pop
xor
fwait
mov
inc
xchg
xlat
enter
or
or
sub
repz
fistl
repnz
and
hlt
popf
pop
out
lea
das
sub
shl
test
lods
jno
sub
dec
xlat
push
push
insb
data16
movsb
jg
push
and
add
or
xchg
push
pushl
icebp
mov
test
inc
add
dec
xor
mov
sub
mov
ss
pop
popa
xchg
xor
push
fisttpll
lock
mov
add
inc
out
aam
arpl
fidivl
leave
pop
insl
inc
jp
std
mov
push
mov
xor
jg
jne
neg
lcall
xor
rcl
jnp
xchg
inc
jne
pop
and
xchg
iret
mov
cmp
mov
repnz
add
sub
and
or
or
cmc
add
sbb
out
insl
jg
add
pop
sbb
add
ds
stos
stos
xor
jmp
push
lock
cmp
es
sbb
dec
mov
xor
mov
push
mov
aam
and
bound
ja
add
imul
into
in
fldt
in
mov
sub
sti
sub
cltd
movsl
push
cwtl
push
cmp
add
ret
adc
sbb
push
pop
xor
lds
push
jg
dec
stc
cmpsl
movsl
lods
sbb
js
dec
in
rcr
sbb
gs
dec
push
add
aad
cmp
arpl
cmp
fadds
sub
cs
bnd
xchg
fnstsw
subl
push
push
lahf
push
test
and
push
mov
lahf
popf
ret
push
adc
xchg
mov
mov
test
shlb
out
aaa
movsl
scas
sub
test
xchg
into
mov
andnps
pop
and
mov
cmp
leave
ss
adc
dec
fisttpl
je
ficomps
xor
xchg
sub
push
mov
xor
pop
add
jae
adc
dec
les
arpl
ret
pop
mov
xchg
xchg
adc
loopne
cmpsb
push
leave
jecxz
testl
ret
in
lds
or
mov
aam
jge
movl
pop
adc
mov
or
cli
mov
sub
xor
fimuls
sbb
movsl
inc
inc
loopne
faddp
mov
inc
lods
fwait
mov
icebp
fprem
jo
or
lea
push
jmp
pminsw
xor
nop
loope
xchg
pop
inc
arpl
xorw
in
lret
xchg
ljmp
enter
sbb
jno
inc
add
repz
add
loopne
fcomp
or
iret
sbb
jae
push
mov
gs
push
test
lock
cltd
jb
push
test
les
or
mov
inc
arpl
lods
jmp
mov
fcoml
shr
and
das
ret
addb
mov
repz
adc
mov
add
lahf
xchg
xchg
in
and
jae
ficomps
add
gs
xor
int
int
sar
mov
pop
sar
sbb
push
in
clc
lea
or
into
in
stc
sbb
in
int
mov
aam
push
jle
cmpsl
push
insb
sbb
call
fistpl
sarl
lahf
nop
out
mov
pop
cli
push
inc
ret
mov
adcl
xchg
orl
btr
push
xchg
sbbl
sbbl
mov
test
inc
or
jbe
dec
xchg
inc
or
jnp
std
out
or
shll
mov
das
lock
call
add
inc
popf
pusha
mov
xor
sub
arpl
imul
cmp
and
push
pusha
inc
push
jbe
adc
test
in
fwait
push
aad
fnstsw
xor
mov
popa
xor
testl
cmp
fisubrl
ss
or
cmp
movsb
and
pop
loopne
pusha
jg
aam
rcll
cltd
nop
movsb
bound
jge
or
pop
inc
push
adc
cmpsb
jne
cmp
filds
and
or
jl
cmp
pop
xchg
dec
sbb
inc
testl
cltd
rcr
fldl
scas
mov
dec
scas
cmp
insl
and
fisubl
test
mov
mov
inc
dec
in
sbb
add
and
outsb
jecxz
add
call
jo
add
insb
dec
mov
stos
cwtl
stos
sbb
aam
pop
ficompl
dec
inc
ret
rorb
ss
pop
pop
push
inc
inc
sub
push
add
mov
cmp
xchg
call
add
ss
imul
push
xchg
jge
sti
xor
test
cltd
out
jbe
les
dec
ljmp
ds
push
sub
cmp
rol
mov
mov
cmp
sbb
js
es
mov
jge
sub
fnsave
cmc
imul
popa
movsb
xchg
dec
mov
stos
repnz
dec
sbb
jle
in
scas
js
adcb
cmpsl
jmp
xchg
sti
fcoml
jge
adc
pop
arpl
lods
addr16
pop
xchg
push
test
pop
push
leave
hlt
aad
add
call
cmpsb
mov
fdivs
leave
push
push
dec
aam
sahf
fwait
in
xlat
xchg
andb
stos
adc
lret
aas
jnp
fisttpl
dec
int
or
je
movsl
xor
cmpsl
test
pop
in
pop
lods
popa
stc
sub
mov
add
xchg
adc
push
xor
or
pop
outsb
mov
jmp
dec
and
je
add
rcrl
cmp
push
add
cmp
mov
jmp
and
dec
xchg
xlat
add
out
outsb
sbb
xor
repnz
hlt
sbb
ljmp
ret
mov
data16
mov
gs
inc
scas
mov
lds
and
pop
mov
jle
pop
mov
mov
push
add
bound
jae
adc
mov
out
mov
xchg
jecxz
inc
push
mov
dec
insb
cmpsl
jae
inc
ljmp
out
or
pop
add
pop
or
add
mov
push
dec
pop
btc
add
mov
adcl
pop
inc
loopne
add
stos
sbb
cmp
sahf
aas
and
adc
hlt
mov
sahf
xchg
or
in
movsl
call
cmp
jmp
dec
adc
addl
xor
cli
outsb
lret
stos
mov
cmpl
arpl
out
jmp
sub
lods
dec
mov
pop
jge
in
adcl
xchg
ljmp
mov
sarb
and
jge
xchg
jle
add
mov
pop
xor
xchg
insb
push
popa
xlat
bound
pushf
sub
inc
mov
and
out
mov
dec
sub
pop
or
int3
outsl
mov
jg
sarb
jb
sbb
inc
out
ss
mov
popl
dec
xchg
out
sbb
jbe
xor
gs
mov
jae
inc
outsb
shr
inc
pop
repz
mov
jae
out
lock
sti
pusha
dec
mov
pop
inc
loope
inc
push
jmp
push
sbbl
and
lods
lock
loop
xchg
sbb
sub
add
dec
inc
sarl
jle
push
jb
dec
lds
mov
shr
push
jbe
xor
js
mov
and
pop
popf
jae
idivl
add
mov
push
inc
aaa
pop
aas
scas
adc
jnp
sub
jecxz
pop
sbb
movsb
cmp
aad
inc
fcmovnb
addb
adc
push
push
ds
pop
or
adc
insl
dec
dec
in
lret
movl
sub
mov
test
lcall
dec
mov
clc
mov
aas
mov
clc
mov
inc
es
in
or
out
std
xchg
inc
pop
cmc
js
push
enter
xchg
xlat
mov
test
sub
push
mov
push
sbb
fcom
popa
inc
xchg
idivb
es
outsb
inc
shrb
sbb
lcall
pop
addr16
outsl
pop
test
std
mov
xchg
sti
push
addl
xchg
xlat
repz
les
xor
or
pop
rolb
fcom
rorl
sub
mov
ficompl
les
enter
ss
mov
or
in
dec
xlat
aaa
daa
out
in
sbb
add
jge
aad
imull
push
mov
inc
push
insl
mov
addr16
push
jns
shrl
fisubs
aas
sbb
sti
or
pop
mov
inc
jle
sub
xchg
lret
sbb
mov
cli
xor
push
add
mov
or
cmpsb
inc
in
aam
shrb
jae
mull
int
lock
addr16
outsb
add
jb
f2xm1
pop
fildll
pop
cmpb
in
adc
xchg
and
es
aam
ljmp
mov
sbbb
call
stc
add
cmc
push
enter
xchg
push
fstpt
push
inc
xor
out
mov
in
adc
or
lret
movsb
fwait
jmp
pop
popa
idiv
les
std
movsb
lcall
cmp
pop
ret
out
and
ds
out
jno
test
dec
dec
insl
sub
jmp
push
sahf
rorb
mov
aas
sbb
bswap
push
xor
fstpt
jbe
stos
jae
mov
std
push
mov
negb
jp
leave
andb
mov
sbb
and
leave
add
inc
shlb
fstl
push
shl
scas
mov
stc
jle
popa
imul
out
lods
dec
out
mov
or
jg
test
scas
repz
push
mov
xchg
stc
std
sub
jbe
lret
push
shlb
movsl
pop
std
cmp
enter
and
adc
outsb
dec
leave
add
or
shlb
add
mov
dec
mov
sbbl
sub
or
xchg
adc
jb
inc
aam
jbe
pop
add
out
and
fmull
lock
aas
fmul
lods
xchg
scas
mov
lcall
test
loopne
mov
dec
sbb
cli
sbb
stos
out
pusha
pop
dec
xchg
inc
or
or
movsl
mov
xor
mov
loopne
and
adc
sub
or
and
out
xchg
lcall
ss
cmp
ficompl
lret
cpuid
pop
push
in
addr16
xchg
mov
cli
sar
movsb
inc
int3
and
xor
lahf
lods
mov
mov
lds
sbb
lret
addb
loope
test
in
out
xchg
jo
cli
and
cmpb
and
orl
out
push
mov
mov
push
or
or
sub
iret
popf
shlb
inc
icebp
cmpsb
mov
cmp
ss
leave
sbb
mov
mov
jns
cmpl
aad
cmp
subl
add
inc
cmp
movsb
aad
xchg
inc
int3
and
loop
xchg
sub
jle
movb
sbb
arpl
pop
push
pop
xchg
fs
loop
cmpsb
fwait
xchg
mov
mov
outsl
ss
aam
xor
pop
test
mov
mov
stc
jl
scas
rol
cmp
add
data16
mov
xchg
lock
fwait
add
add
mov
jle
stos
pusha
push
sbb
arpl
push
in
xor
xor
cmp
sbb
js
pop
movsb
pushw
ds
mov
pop
pop
setnp
add
outsb
add
popa
adc
mov
and
out
or
in
pop
dec
aas
cmp
icebp
sub
cmp
sub
or
inc
jns
fidivs
icebp
std
push
sbb
mov
add
inc
enter
pop
pop
xor
sub
mov
sbbl
sbbl
xchg
insl
rol
sbbb
gs
lret
and
aas
adc
adc
cmp
push
sbb
jnp
insl
cmc
add
jne
jle
push
ret
lret
push
sbb
cmpsl
repnz
xchg
sti
ja
push
push
iret
movl
leave
push
ljmp
cmp
xor
jns
rolb
in
sbb
jb
data16
adc
lock
mov
or
into
in
cmp
sbb
jg
push
std
fildl
fisttpll
movsb
mov
jns
fildll
fisubrl
out
xor
jo
sub
stc
cld
out
nop
jae
jl
dec
mov
or
enter
or
int
jbe
and
test
jge
pop
mov
or
pushf
insl
popa
repz
jp
sbb
nop
jbe
pop
push
ds
cmp
fadds
add
adc
and
test
dec
dec
xchg
xchg
push
call
fldenv
xor
cmp
sbb
mov
repz
mov
pop
sbb
add
and
aam
outsb
lret
js
repz
xor
jne
fwait
jecxz
test
repz
xchg
inc
dec
jb
outsl
mov
mov
dec
push
test
imul
ja
jo
js
cmp
or
adc
lcall
jb
es
iret
ds
jl
push
insb
mov
icebp
sarb
data16
movsb
xor
sti
mov
outsl
dec
xlat
and
xor
push
cld
pushf
or
and
mov
dec
pop
push
dec
lahf
lea
aaa
and
jno
sbb
pop
dec
scas
jne
push
clc
movsl
fmul
daa
push
mov
push
xchg
xor
mov
call
mov
rorl
call
add
push
xchg
pop
inc
mov
sbb
pop
adc
xor
adc
movsb
popa
xor
xchg
mov
test
or
fs
fisttpll
add
lahf
jmp
add
sbb
pop
dec
mov
adc
cli
leave
cmp
lahf
rcrb
int3
push
cmovl
pop
sub
stos
mov
cmp
aad
repz
cli
test
popf
in
add
add
pop
pop
enter
push
and
mov
sub
xor
sub
andl
imul
out
sbb
xor
pop
aad
and
movsb
lds
xchg
push
insb
ds
pop
or
xor
dec
popf
aaa
cmpsb
negl
loopne
or
into
int
dec
in
mov
scas
cmp
and
js
rolb
dec
fwait
jne
out
jbe
pop
xchg
repz
adc
jle
rorb
scas
mov
fcomi
push
add
add
cmp
pop
xchg
ds
mov
pushf
insb
xor
pop
movsl
in
xor
cmp
ss
inc
push
add
je
mov
data16
leave
cmp
jae
mov
and
ja
jnp
add
or
push
inc
xchg
or
mov
insb
xor
cmpsl
stos
out
gs
push
loopne
aam
add
out
add
adc
and
aas
mov
push
ss
fs
jl
mov
push
jb
pusha
jbe
iret
pusha
pop
pop
test
lret
adc
stos
mov
js
out
outsl
sahf
jmp
ret
aam
imul
popf
jl
xchg
out
inc
adc
xlat
nop
das
xchg
xchg
add
cmp
inc
mov
push
xchg
mov
inc
scas
add
push
cpuid
cli
pandn
jno
adc
lea
xchg
push
jg
fiadds
cwtl
sub
push
jne
popa
jnp
jnp
mov
mull
cmp
xchg
mov
das
or
ss
lock
outsb
inc
je
mov
mov
test
lahf
imul
mov
mov
lds
das
sbb
add
add
cmpl
pop
push
int
inc
jg
push
scas
or
data16
pop
or
test
aas
and
jne
dec
dec
outsb
adc
cmpsb
cmpsb
jb
addr16
lock
outsl
jg
push
and
push
add
mov
cmp
jns
mov
daa
fdivrl
mov
push
jge
xchg
insl
mov
mov
mov
fistpl
pop
add
dec
jge
cmpl
ja
add
fisttps
sub
sub
loopne
dec
dec
test
stc
mov
imul
mov
and
sub
fistpl
stos
call
add
hlt
dec
jg
inc
cmpl
into
pop
add
xor
cmp
inc
mov
mov
or
add
js
or
test
testl
add
ja
sbb
sahf
ficompl
sbb
repnz
add
aas
and
sbb
scas
adc
sbb
cvttps2pi
mov
xchg
je
and
repnz
clc
sbb
shlb
mov
lea
orl
stos
pop
ss
jg
add
add
lret
mov
jns
sub
fwait
idivl
sbb
or
das
faddl
adc
outsl
xchg
aaa
mov
push
scas
add
xor
outsb
add
dec
addr16
and
cmpsl
ret
in
adc
sub
std
inc
rclb
lock
jp
lret
adc
jle
divb
inc
outsb
sahf
clc
pop
push
add
adc
in
dec
mov
lcall
push
push
stc
out
cmp
es
dec
fs
jecxz
ret
sbb
fcomps
push
lds
jge
pop
mov
shlb
jmp
pop
stos
loop
mov
mov
shrl
adcb
js
data16
push
inc
inc
fs
jg
jo
mov
aaa
iret
mov
aaa
cmp
ljmp
fmull
mov
add
int3
sbb
ljmp
loop
out
jle
out
add
mov
cwtl
mov
mov
scas
cmc
jb
cwtl
push
jle
sub
mov
popf
sub
sbb
mov
cld
and
cmp
cmp
and
cmp
or
les
movsl
sub
lahf
enter
sub
insb
add
test
pushf
repnz
enter
mov
movb
je
mov
dec
ljmp
sub
into
stos
lahf
inc
mov
push
cmp
sbb
xlat
fsubp
dec
add
insb
stc
jge
sbb
xor
sahf
or
cs
negl
cmp
lea
pop
sbb
pop
cltd
out
pop
xchg
mov
jmp
mov
pop
lock
insb
pusha
mov
mov
jl
xor
iret
std
sbb
into
push
fwait
xchg
pop
mov
push
mov
out
imul
mov
mov
nop
imul
je
sbb
push
repnz
inc
hlt
jns
cmp
push
stos
rolb
pop
pop
outsb
cmp
jo
into
xchg
dec
imul
ss
inc
iret
in
in
adc
push
pop
adc
nop
pop
inc
ret
lret
outsb
dec
roll
mov
arpl
pop
jno
adc
xchg
out
mov
out
pop
dec
mov
mov
insb
mov
add
xor
mov
jge
or
jb
mov
bound
or
sbb
movsl
das
fcmovne
xchg
xchg
mov
pusha
mov
cld
test
lcall
jp
or
adcl
lret
sbb
push
nop
leave
subl
movsb
in
adc
inc
xor
sbb
cmp
shrl
cmp
int
cli
aad
loopne
push
or
jbe
fcmovnbe
jl
test
dec
scas
push
cld
jnp
imul
mov
stc
aam
or
aam
arpl
shlb
loopne
aam
inc
es
fwait
ss
or
jle
sbb
int
enter
ja
loope
add
int
sub
adc
hlt
iret
sahf
mul
add
pop
orb
lea
push
nop
loop
insb
cmpsb
or
repnz
insb
cmp
call
jmp
out
call
insl
add
imull
xchg
cwtl
lods
mov
adc
xor
jnp
cmp
sub
stos
mov
cmp
testl
sub
ljmp
mov
aam
pop
fisubs
aas
fadds
sti
mov
mov
div
inc
out
fstpl
test
sbb
les
jl
add
hlt
das
cld
repz
or
jbe
push
in
jns
cmc
inc
adc
jb
inc
stc
push
and
popa
dec
sti
mov
jge
sbbl
pop
inc
in
insb
lods
mov
into
lea
mov
ja
mov
mov
mov
out
mov
pusha
popa
adc
daa
xor
fs
mov
pop
jae
pop
mov
bnd
enter
mov
test
mov
pop
lods
sbb
pop
or
jecxz
inc
movsb
xor
mov
dec
cmp
jbe
fisttps
insl
jo
cld
mov
cmp
clc
inc
cmp
loopne
mov
repz
popa
lods
insl
in
fucom
sbb
jmp
loopne
pop
sub
ss
add
scas
rolb
push
push
inc
or
pop
xchg
jo
pop
add
scas
jb
lret
aaa
jns
cmpb
adc
aad
aad
fists
lcall
jle
mov
ss
sub
clc
sub
mov
push
sub
xchg
jle
add
pop
xor
push
adc
popf
test
pop
adc
repnz
push
mov
rclb
hlt
mul
repz
enter
test
jl
pop
jle
rorb
fmuls
aas
clc
add
outsl
outsl
lea
cmp
mov
adc
pushf
pop
outsb
jecxz
incl
inc
lods
or
cmp
xchg
mov
sbb
adc
sub
mov
sbb
push
and
xchg
push
inc
dec
test
jmp
orl
negl
push
xor
and
jge
xchg
jle
mov
jge
jp
jno
lret
sbb
xchg
inc
push
jp
lods
sub
push
sbb
mov
ret
xchg
movsb
cmpsl
sub
sbb
fldt
cmp
pop
push
pop
jae
xchg
nop
mov
xchg
xor
and
mov
dec
xor
test
inc
and
mov
fisttpl
inc
push
mov
pop
inc
testb
mov
mov
pop
mov
push
stos
adc
sbb
dec
mov
sbb
lret
cld
mov
imul
test
push
xchg
insb
sti
add
mov
imulb
push
gs
inc
xor
je
xchg
dec
das
sbb
movsl
data16
pop
sub
in
icebp
pusha
ret
or
dec
flds
mov
cmp
pop
mov
fisttpll
or
push
jge
enter
or
inc
cltd
xor
pop
cmc
sahf
push
fwait
sub
mov
clc
mov
cmp
mov
xor
out
fwait
cs
push
pop
mov
cltd
sti
mov
js
call
shrl
lahf
sarb
sahf
aad
add
je
inc
icebp
push
push
pop
filds
fdiv
aad
mov
cmp
fidivrs
mov
jg
dec
roll
or
in
bound
inc
nop
js
and
les
xchg
dec
sub
pop
jno
lahf
inc
or
in
mov
cmpxchg
imul
push
push
inc
pop
leave
and
sbb
in
imull
int
addr16
mov
mov
mov
xchg
sbb
cmc
lret
repnz
int3
xchg
mov
pop
push
xchg
cmpsb
movsb
into
mov
fnsave
inc
repnz
add
out
faddl
jo
pushf
adc
in
in
inc
arpl
mov
sbb
scas
xorb
inc
xlat
fiaddl
inc
sti
int
jns
cli
test
add
in
cmp
xchg
out
sahf
lahf
mov
mov
das
lret
and
pop
push
bound
inc
push
mov
leave
push
jns
shrl
inc
js
inc
aad
lods
out
roll
inc
inc
hlt
lock
xchg
out
cli
ret
jb
mov
mov
push
jmp
mov
inc
incl
fldt
out
sub
pop
enter
mov
sar
mov
shll
inc
fidivrs
bound
test
dec
cmc
out
rcll
lods
mov
ror
jge
pusha
and
bound
push
imul
aad
xor
add
aas
or
cmp
loop
inc
ljmp
mov
and
outsb
mov
mov
and
lods
aad
nop
mov
ljmp
mov
jbe
pusha
test
lds
insb
xchg
cmp
push
repnz
or
lahf
dec
icebp
rcrb
sub
jae
shlb
jl
les
xor
popf
icebp
fs
daa
add
loop
into
push
mov
dec
inc
adc
fs
inc
push
mov
in
pop
in
ljmp
clc
mov
push
inc
pop
js
xor
adcl
mov
push
lcall
push
bound
or
mov
pop
mov
sbb
out
int3
outsb
repz
ds
out
mov
inc
inc
stc
lret
push
jno
pop
adc
or
mov
les
ret
cmpsl
popf
xchg
stc
sti
cmp
dec
aam
mov
fwait
jb
xchg
xlat
adc
aaa
pop
cmp
jmp
loope
mul
xchg
std
xlat
sub
ljmp
mov
adcb
mov
adc
lea
xchg
jle
mov
ja
ret
push
mov
push
clc
mov
mov
push
or
cltd
xchg
mov
in
mov
pop
pop
jae
push
xchg
iret
or
pop
xchg
in
mov
push
or
popf
adc
xor
mov
push
test
mov
frstor
adc
fistpll
mov
outsl
mov
adc
imul
mov
dec
jno
and
sbb
jmp
insb
repz
inc
dec
adc
out
xor
imul
sarb
repnz
scas
mov
cmpsb
adc
ja
test
mov
sarl
int3
pusha
xchg
sahf
je
mov
and
les
push
mov
sub
iret
add
outsl
dec
cli
pop
or
enter
mov
mov
dec
push
fisubs
mov
and
inc
and
pusha
cmp
and
pop
xchg
sbb
add
xor
clc
pop
push
cli
test
jecxz
and
mov
mov
xchg
and
xlat
sbb
lcall
cmp
scas
in
mov
sti
jbe
lret
pop
push
ja
cli
fwait
adc
cld
mov
push
in
and
insl
out
xchg
add
das
iret
lock
xchg
daa
pop
push
fnstenv
ljmp
jmp
mov
call
xchg
xor
mov
push
or
pop
cmp
jb
fld
scas
stc
popa
in
lcall
sahf
or
jno
inc
pop
popf
sub
push
repnz
mov
rcr
or
cltd
ret
repnz
add
orb
mov
push
icebp
idiv
hlt
mov
sbb
or
roll
out
add
or
incl
pusha
icebp
dec
dec
rclb
jb,pn
fstps
sub
pop
dec
lret
jle
push
cmpsl
clc
jge
ds
sub
xor
fldl2e
scas
pushw
xlat
jne
frstor
dec
iret
popa
mov
mov
cs
ficoms
int
les
aas
call
and
daa
mov
das
dec
inc
stos
lods
shll
sub
fmull
nop
xlat
mov
and
mov
cwtl
ret
ret
test
mov
cmpsb
xchg
xchg
test
jp
inc
push
sub
pop
adc
dec
xorl
add
jbe
and
adc
rcl
loope
in
bound
jp
sub
or
or
push
add
dec
in
mov
dec
add
les
rsqrtps
xor
xchg
push
test
lods
push
leave
sbb
das
test
pusha
rcll
xchg
loopne
adc
cmp
loope
dec
jge
jl
dec
mov
adc
out
in
lret
insb
lods
data16
add
mov
out
repz
divl
mov
sub
xchg
repz
data16
mov
mov
loopne
subb
pusha
xchg
mov
or
fistl
mov
xchg
and
jge
je
pushf
xor
xor
in
cltd
or
pop
test
subl
les
mov
mov
sbb
push
push
scas
mov
cmp
leave
xor
inc
jge
rcrb
scas
push
fwait
push
popf
lret
pop
stos
pop
push
mov
adc
adc
out
push
dec
mov
push
scas
insl
lret
xor
push
sub
add
repnz
sbb
add
pop
movsb
and
cmc
es
sbb
jecxz
pop
out
inc
cmp
addb
dec
stos
jnp
decb
fcmovnu
lods
test
repz
sub
imul
stos
test
pop
ret
data16
mov
in
sub
outsb
or
lahf
xchg
xor
cltd
out
mov
and
adc
xchg
push
sub
notl
in
fsubs
stos
or
cmpsb
in
ror
in
xchg
gs
sbb
imul
divb
dec
dec
xchg
aas
in
cld
mov
mov
push
push
adc
repz
mov
scas
xor
sub
jg
mov
sub
mov
mov
rcrl
and
mov
and
cmp
fldcw
xchg
fpatan
mov
outsl
adc
arpl
fstp
fadds
mov
addb
test
outsl
insb
sahf
mov
pop
ljmp
std
push
push
daa
adc
int3
ja
push
dec
add
pushf
sbb
mov
dec
mov
nop
dec
lahf
cmpb
cmc
test
inc
lahf
mov
scas
seto
add
mov
push
call
mov
sbb
leave
int3
stos
rcr
mov
mov
loopne
xchg
lods
gs
fidivs
cmp
std
mov
mov
out
scas
mov
mov
movsb
mov
ds
aad
lret
into
pop
imul
rol
fsubrs
adc
jae
dec
loope
jnp
dec
lods
int3
call
sub
ret
testb
inc
add
nop
rcll
mov
or
pop
pop
mov
lret
enter
push
insl
dec
insl
fs
pop
mov
shll
mov
pop
xchg
jge
ss
inc
pop
lahf
test
jnp,pn
lcall
hlt
pop
aas
push
pop
or
shl
fildll
push
or
mov
cmp
pop
cli
dec
cltd
into
push
jmp
aam
repnz
aas
aas
aam
xor
jl
movsl
icebp
mov
cwtl
ds
loopne
cmp
and
lds
fisttps
xchg
inc
and
out
repz
imul
jbe
insb
sub
or
inc
xchg
out
pop
out
imul
jns
push
data16
cmpsb
loop
stos
pop
cmpsb
in
jp
or
icebp
push
mov
pop
push
inc
push
adc
cwtl
jmp
add
xchg
popf
push
data16
cltd
cs
cmpsb
popa
insl
mov
add
fs
xlat
mov
fildl
sub
push
mov
test
xchg
rcrl
mov
inc
sbb
or
pop
fistps
jl
dec
ret
mov
addl
and
test
dec
mov
leave
xchg
and
ret
bound
loope
lds
lock
push
in
xchg
js
stos
push
adc
adc
dec
negb
scas
stos
outsb
sbb
pushf
aad
cltd
mov
mov
pop
xor
sub
repz
mov
sub
aas
fs
cmp
add
cmpsl
les
push
cmc
add
lods
xchg
jge
dec
xchg
add
push
sub
sbb
in
jg
std
imul
push
push
icebp
lea
int
popf
andb
push
jg
rolb
pop
inc
sti
loopne
fidivrs
inc
sub
mov
pop
lods
stc
cmp
ret
adc
shr
mov
lret
sub
push
pushf
enter
inc
shlb
jo
push
inc
dec
mov
cwtl
jno,pn
xor
cmp
out
adc
jmp
lahf
rep
shrb
lods
das
test
xchg
mov
movsl
jge
out
in
fs
push
idiv
pop
jmp
and
test
mov
push
stos
push
mov
mov
or
sub
cmp
aad
mov
daa
fisubrs
adc
icebp
ret
fistps
or
push
or
std
fdivp
push
push
jne
pop
inc
inc
lahf
aam
xor
xor
xchg
dec
sbb
pop
sarb
scas
push
aaa
cltd
outsb
fsubr
repz
push
xchg
mov
mov
sub
mov
dec
arpl
stos
jle
add
stos
stos
idivl
popf
mov
lods
lods
cmp
cltd
mov
jns
xlat
mov
cmc
aam
cltd
divl
push
gs
inc
popa
add
cmpsb
insb
pop
sbb
clc
and
scas
or
movsl
divb
int3
and
repnz
repz
clc
pop
mov
lods
aam
mov
aam
sbb
jl
push
mov
mov
add
adc
add
adc
mov
add
cli
dec
or
cmp
cmpsl
mov
jbe
icebp
fildl
imul
std
std
adc
out
mov
cmp
data16
pushf
mov
mov
push
pushf
xor
cmpsb
mov
mov
out
inc
iret
aas
cmp
xor
adc
test
je
repnz
fwait
rcrb
int
mov
pop
shl
cmc
arpl
rcrl
outsb
movsb
xchg
jge
shll
pop
test
ja
sahf
push
cmpsl
loope
test
mov
ror
push
xchg
repnz
dec
sbb
xchg
andb
or
insb
cmp
adc
sub
and
clc
and
std
imulb
jmp
jl
divb
jnp
xchg
outsb
cld
insl
pop
test
mov
cli
test
xor
mov
push
test
xchg
jo
inc
daa
nop
out
bound
xor
cmpsb
and
dec
or
movsl
cs
add
xchg
nop
pop
xor
mov
dec
cmp
fwait
daa
jne
mov
es
sub
hlt
mov
mov
sti
rep
xchg
sar
push
mov
push
add
movsl
movsl
mov
iret
lret
js
ret
ds
iret
and
push
mov
pusha
add
pop
cmp
jbe
movsl
adcb
mov
leave
push
or
movsl
imul
jno
cmc
addr16
inc
ret
sbb
mov
sub
and
movsb
in
sti
add
adc
xchg
push
repnz
add
in
ss
jae
fucomp
in
jle
dec
hlt
lock
dec
scas
mulb
cmpsl
icebp
add
sub
or
dec
xor
adc
mov
ret
enter
mov
imul
insb
pop
lahf
xor
aam
mov
lea
pop
popa
mov
xorl
fisttpl
decb
xchg
xorb
mov
out
in
cmp
xchg
outsb
adc
mov
mov
ds
andl
mov
pop
lods
lods
movsl
popa
lret
xchg
xor
test
es
repz
push
outsl
mov
call
pop
dec
in
movsl
cmp
nop
cmp
and
fnstenv
enter
push
scas
fwait
adc
lods
sbb
dec
fisubl
push
int
inc
sub
jmp
mov
adc
ds
xchg
mov
loope
adc
dec
push
jl
aas
std
cmp
das
or
xor
sub
call
scas
loope
je
rclb
fisubl
popf
js
ficoml
outsl
loop
out
int3
sub
loopne
mov
ret
bound
cmc
inc
aaa
stos
sub
pop
or
rcr
int3
xchg
mov
ljmp
push
lret
add
lods
and
pop
mov
or
popa
int3
out
data16
xor
mov
mov
mov
push
jge
out
mov
add
jbe
fsubrl
add
cmp
inc
dec
inc
popf
imul
outsl
cmp
fisttps
inc
pop
aam
in
mov
inc
ret
and
mov
loopne
push
cmc
repz
int
ret
nop
out
add
out
add
push
pop
inc
in
sbb
jmp
call
sti
out
mov
jge
lcall
mov
imul
hlt
xor
fimull
cmp
js
aam
xor
xor
dec
lea
pop
jbe
xor
lds
into
inc
scas
testb
lods
push
add
in
lea
lret
addr16
xchg
sarl
clc
mov
mov
mov
sub
push
jns
mov
and
sub
inc
xlat
and
push
sub
or
sbb
loope
xchg
add
pop
adc
mov
inc
into
xchg
in
stc
rolb
xchg
cli
fcoms
verw
mov
dec
cmpsl
cmp
insl
fists
push
jl
mov
mov
popf
sub
in
mov
cmp
inc
mov
xor
es
inc
push
std
xor
sub
ret
xor
add
pop
xlat
or
outsb
popf
in
mov
adc
jp
orb
lods
addb
scas
and
mov
adc
add
jae
fsubs
jg
insl
sub
inc
scas
and
sbb
mov
push
mov
aam
cmp
mov
add
scas
adc
vpinsrb
push
dec
es
mov
fsubs
pop
rolb
cmp
xchg
sub
xchg
mov
pop
jp
xor
add
cli
idivb
mov
inc
sbb
aas
loope
popa
out
std
push
dec
sbb
inc
outsb
cmp
repnz
aad
stos
inc
jns
xor
out
adc
mov
fstps
inc
lock
inc
mov
or
inc
shll
push
pop
loopne
push
ljmp
sahf
pusha
add
loope
mov
ja
and
dec
das
pop
je
xor
hlt
mov
xchg
lcall
aad
mov
adc
push
or
hlt
out
inc
dec
shll
xor
add
dec
rcll
mov
imul
xchg
jb
xchg
add
fcomps
fsubl
subl
ret
dec
lock
xchg
jp
gs
stc
xchg
push
out
sub
enter
rorl
mov
lea
insl
pop
daa
push
lahf
xor
jmp
xchg
sub
cmp
xlat
les
andps
xor
xor
pop
sub
add
dec
outsl
addr16
clc
jb
mov
jge
and
xor
cmpb
sahf
je
push
jne
es
inc
sbb
sub
sbb
xchg
add
fstpt
push
mov
call
cltd
fwait
pop
movsb
or
jns
movsl
ficoml
add
mov
movsl
mov
fwait
add
push
mov
divl
andb
insb
pop
jno
adc
mov
xchg
and
jmp
jecxz
sbb
mov
lcall
xor
pop
rcrb
push
jg
mov
mov
sub
gs
jle
addl
mov
ss
jecxz
outsl
out
pop
pop
fadd
push
or
jns
add
mov
cs
aad
dec
add
cmp
ds
test
xlat
gs
pushf
nop
addr16
outsl
fstpt
addb
add
lret
js
jge
mov
arpl
lock
inc
lds
les
jmp
std
add
repz
insb
cmp
imul
adc
in
inc
push
sub
addl
sbb
bound
and
pop
dec
fpatan
mov
ret
pop
addr16
dec
addr16
and
or
push
aad
hlt
or
int
mov
pop
inc
into
and
out
push
lret
sub
dec
outsb
cmp
and
add
mov
jge
sti
dec
cmp
adc
loope
loope
adc
xchg
andps
fdivs
push
push
jb
mov
ds
call
jge
sub
inc
mov
inc
cmpsb
xor
mul
or
clc
test
negl
mov
adc
xchg
ret
mov
cmc
cmc
aam
sub
mov
xchg
jmp
nop
and
idiv
jle
inc
addr16
add
or
into
dec
stos
int
loopne
ja
stos
lret
and
mov
adc
add
mov
ficompl
mov
dec
sub
cmp
pop
pop
adc
dec
aas
imul
or
pop
cltd
into
dec
xlat
aam
mov
sti
iret
jle
adc
movl
out
ret
testl
outsb
xor
out
inc
mov
insl
sbb
xchg
mov
divl
cmp
bound
imul
ficomps
xchg
mov
sub
dec
inc
inc
pusha
ret
mov
pop
cmpb
int3
adc
mov
nop
jbe
sbb
ret
aam
aas
fisubl
sbbb
push
lcall
inc
sub
hlt
dec
mov
jle
int
mov
jg
pop
stos
rcr
std
insb
cmc
xlat
out
sub
jp
pop
dec
mov
sub
cmp
xchg
lret
int
and
pop
jecxz
sbb
lcall
test
sti
movsl
or
push
and
adc
ret
insl
xor
in
sarl
out
cwtl
cmpl
add
mov
jmp
push
push
je
add
sbbl
rorl
add
jo
push
and
mov
and
mov
jle
xor
mov
push
add
stos
cwtl
dec
icebp
push
lods
jmp
pop
lds
loopne
mov
xchg
xor
add
mov
outsb
sub
mov
movsl
fcoms
jnp
addr16
sub
or
je
dec
enter
and
dec
rcl
lea
pop
cmp
je
ret
gs
push
push
lock
push
push
int3
mov
add
push
aam
stos
xchg
pop
mov
xchg
sbb
int
and
xchg
ud2
sbbb
or
out
js
movsl
hlt
popl
lret
loopne
xor
mov
aam
jle
cs
and
jl
add
inc
data16
inc
sbb
mov
cmp
insb
mov
and
inc
pusha
adc
jae
outsl
adc
fisttpll
andb
nop
pushl
or
lcall
cmc
mov
pop
pop
in
mov
arpl
repnz
les
loope
push
or
mov
out
xor
cmp
inc
sub
mov
xlat
mov
mov
stos
testb
cmp
sub
xchg
mov
push
iret
mov
fistpl
popfw
cltd
repz
mov
jae
imul
xor
mov
push
pop
add
scas
or
test
sub
popa
push
add
xchg
pushf
jo
loopne
mov
cs
ds
rorb
movsl
mov
cmp
dec
jp
jno
adcl
imull
adc
jae
jae
xchg
dec
js
aaa
push
push
dec
mov
pop
popa
sbbb
and
in
push
cld
filds
enter
add
cmpsl
mov
push
clc
push
sub
imulb
fadds
xchg
not
fisubs
pop
cli
inc
test
xchg
xchg
test
jl
push
mov
pop
int
or
ja
sarl
lock
xchg
ret
add
xor
int
mov
or
mov
jo
lret
daa
lds
ret
insl
jbe
addr16
jns
imul
push
sub
xchg
pop
fwait
mov
push
cmpsb
dec
xchg
or
sbb
xor
push
jecxz
ret
cvtps2pi
cmp
jge
jmp
jecxz
ja
mov
push
dec
mov
fstpt
lods
fdivs
or
and
mov
fisttpll
icebp
lret
mov
call
ret
ja
or
rcl
inc
pop
cmc
or
sub
push
and
shrb
in
shl
test
dec
adc
cmpsl
mov
push
stos
fnstcw
ret
outsl
ljmp
rcl
or
inc
cmp
mov
push
add
xor
mov
mov
lea
repz
repz
ret
and
jmp
out
mov
pop
push
xchg
and
xchg
enter
lock
push
loopne
or
fistl
inc
jle
push
push
repz
xchg
leave
orl
in
out
sarl
pusha
xchg
aam
insb
mov
call
test
stos
pop
pop
mov
jecxz
nop
or
mov
cwtl
lds
sub
stos
cwtl
and
fs
mov
inc
out
sbb
push
pop
jp
enter
repz
dec
adc
clc
mov
stos
cs
push
stos
lret
cmpsl
inc
adc
imul
xchg
jno
xor
pop
push
mov
dec
cli
and
outsl
mov
shr
pusha
xor
fs
mov
enter
outsl
push
out
call
cmpsb
and
inc
pmaxub
add
int
out
cmp
out
hlt
mov
stos
ret
gs
mov
pop
cmp
adcb
into
xor
or
or
in
cmp
das
mov
sub
cwtl
rcrl
mov
rorb
out
adc
leave
xchg
cmp
dec
bound
cmpl
push
hlt
imul
cmpsl
jl
jge
push
imul
add
pop
out
jb
rorb
inc
mov
stos
pushf
mov
cmp
cmp
push
pop
gs
js
mov
addr16
xor
xchg
ret
xor
push
cmp
stos
push
aaa
dec
sub
fmuls
out
mov
repnz
scas
scas
push
stc
pop
or
sub
fsubrs
adc
cltd
push
push
sarb
test
js
ds
cs
out
or
inc
iret
pop
lcall
ret
push
sti
add
cmp
dec
jge
add
popf
bound
xor
outsb
jno
pop
in
lods
mov
sub
xor
int
xchg
sub
jle
or
cmc
imul
inc
cmp
mov
jo
add
shll
xchg
add
divl
or
or
out
jae
testl
xor
test
sub
xor
dec
js
ljmp
iret
lods
repz
lret
xchg
jecxz
fs
mov
mov
aas
movsl
xor
pop
cmc
jl
xlat
lock
loopne
fs
out
push
add
repz
cmp
mov
outsl
lahf
loopne
xor
sub
mov
xor
out
adc
in
jmp
daa
in
rolb
lcall
cs
jae
in
jecxz
mov
fnsetpm(287
cmp
mov
fisttps
dec
repnz
andl
es
or
loop
and
jp
loop
and
dec
in
das
fidivrs
sbb
mov
and
mov
lods
mov
xor
inc
pop
add
adc
int
jp
inc
or
out
sbb
scas
and
aaa
sub
or
outsl
inc
shrd
mov
cmp
push
add
mov
sahf
cmp
xchg
negl
std
in
push
add
in
sbb
data16
mov
xlat
sbb
lret
dec
sbb
fs
inc
aaa
scas
mov
stc
aad
push
mov
int3
jmp
clc
test
push
adc
sahf
inc
xchg
mov
scas
stos
push
sti
or
xlat
jp
jo
jns
push
mov
add
cmp
aam
mov
mov
outsl
mov
aaa
push
arpl
mov
pop
leave
jle
mov
std
cmpsb
cmp
push
xlat
mov
ret
sub
and
inc
pop
pop
scas
subl
nop
adc
cmp
push
insb
cmpsl
stc
js
adc
sub
pop
push
sbb
lret
cmp
cmpl
sub
int3
addr16
mov
popa
es
mov
pop
mov
jl
fnsetpm(287
dec
mov
fcoms
jo
ljmp
call
add
cmp
enter
clc
inc
scas
xor
lahf
and
mov
mov
stos
fucomi
pop
ret
lds
and
adc
popl
jp
xor
imul
in
outsl
xchg
add
mov
inc
jmp
xor
pop
mov
int3
addb
push
enter
jo
lods
and
pop
dec
sub
fiaddl
in
pop
push
mov
mov
cmpl
xor
xor
fwait
repz
fsubp
and
xchg
cli
inc
loop
filds
xchg
bound
xor
mov
pusha
out
aaa
xchg
insl
adc
mov
mov
push
xchg
xlat
imul
ret
mov
scas
aam
sbb
jmp
in
adc
imull
pusha
insl
push
sub
in
add
fisttpll
adc
test
lea
aad
call
jne
shlb
push
outsl
js
dec
outsb
mov
aaa
sarb
mov
fstl
mov
test
dec
fdiv
or
push
data16
jne
add
sbb
in
dec
push
je
in
stc
mov
add
in
pushf
rcrl
mov
push
sbb
addb
sbbb
dec
mov
lret
inc
cmp
dec
push
dec
dec
mov
fsubrs
or
cmp
notl
cmp
dec
inc
xor
xchg
mov
outsb
shlb
and
mov
jmp
xchg
and
pop
insb
mov
bound
out
cmp
bound
ds
push
add
pop
fsub
xchg
dec
movsb
push
in
push
sbb
dec
dec
out
sbb
dec
stos
fcomps
pop
inc
sub
popa
mov
lock
gs
sahf
dec
push
rorb
jl
imul
out
or
aam
loop
add
lds
incb
add
mov
daa
push
out
jne
push
fcomps
ss
in
arpl
inc
mov
inc
add
cmpsl
scas
pop
incl
lcall
sets
push
shrl
pop
loop
cmp
push
in
adc
mov
jno
dec
xchg
shll
xchg
sahf
call
sti
ficomps
ror
mov
cmc
pop
cli
jmp
ret
or
or
movsb
into
dec
aam
push
xchg
addr16
xor
sub
gs
xchg
add
mov
dec
xchg
cmp
nop
dec
pusha
jmp
sbb
jge
sub
xchg
aad
mov
xlat
enter
lahf
pop
jno
pop
test
bound
cltd
divb
xor
mov
mov
mov
xchg
xchg
aaa
mov
xor
xchg
les
cmc
and
pop
pop
sub
sbb
int3
incb
inc
sub
fistps
lock
mov
xlat
mov
lret
push
pop
push
push
mov
jg
stc
inc
and
or
nop
je
dec
loopne
cmp
jmp
jae
xor
and
pop
aas
loop
push
dec
add
push
xor
cmc
imul
bound
xor
lods
pop
daa
cmpsb
pop
dec
in
dec
xor
cli
push
xor
arpl
push
push
dec
popa
mov
ds
movsb
fimull
or
lret
push
scas
sub
call
loope
in
leave
lcall
ret
jno
mov
xchg
inc
test
out
repnz
or
sbb
sbb
repz
pop
aad
cmp
jns
push
sbb
xchg
mov
icebp
mov
pop
push
pop
aas
mov
int
fsub
into
xchg
andl
cmp
and
pop
adc
test
or
mov
nop
test
mov
and
shrl
inc
gs
loop
gs
jbe
push
shlb
cmovl
call
enter
xchg
xchg
mov
movsb
jae
mov
in
in
fisttpll
sbb
adc
push
xor
adc
scas
cmp
dec
test
mov
arpl
pop
push
pop
into
adc
rcrb
fcoms
aam
leave
xchg
fcoms
divl
dec
insl
pop
stos
insl
and
mov
out
fisttpll
mov
push
lods
test
in
add
or
mov
lret
and
js
es
mov
ja
stos
lcall
stos
daa
and
iret
jge
xor
xor
daa
jo
lahf
ret
outsl
pop
inc
jle
fs
xor
andl
dec
jno
mov
cli
shrl
out
subl
popf
dec
sahf
push
aam
iret
lret
xlat
jl
pop
lret
movsl
leave
push
test
sub
clc
sbbb
cmp
std
mov
fcoms
xlat
clc
push
pop
enter
jle
and
push
cmp
inc
adc
cmp
inc
pop
add
sub
std
xlat
cmp
fadds
mov
cmc
lea
mov
mov
popf
jg
pop
xchg
pop
xchg
fs
pause
rorl
nop
and
push
cmp
jmp
push
sbb
insb
paddusb
nop
and
xchg
mov
and
adc
int3
inc
sbbl
popf
mov
cld
pop
sahf
push
add
test
cmpsl
fchs
out
add
mov
repz
icebp
jne
lock
sbb
enter
mov
icebp
or
pop
orl
enter
pushf
shr
and
cmpsb
mov
popf
icebp
add
xchg
mov
rorb
push
mov
daa
popf
and
loope
lret
mov
pop
in
pop
lahf
or
pop
imul
xchg
rcll
icebp
fwait
test
out
loopne
lret
push
fdivrs
imul
fidivs
arpl
xor
and
mov
in
jo
pop
mov
xchg
std
jl
dec
gs
fidivrs
mov
mov
mov
movsl
xchg
sahf
mov
test
or
fucomip
fwait
lret
xor
jmp
jne
lcall
sbb
stos
dec
repz
mov
imul
outsl
xchg
push
xchg
jl
push
sarl
mov
cld
jne
andb
push
adc
cs
sti
jmp
xor
sti
test
pushf
jnp
outsl
bound
fcmovb
repz
jae
mov
sub
lods
and
hlt
mov
lahf
ja
stc
out
jge
scas
jns
xor
xor
and
add
in
sub
jp
cmp
or
sub
mov
fdiv
cmpsb
pop
ljmp
sbb
sub
dec
in
mov
aam
aas
mov
clc
fwait
jle
push
jmp
or
lret
ret
movsl
lea
xor
mov
xchg
sti
jp
shl
push
daa
ficompl
xchg
cmp
push
mov
adc
mov
imul
adc
adc
mov
mov
loop
pop
push
and
jb
jg
cmpsl
pinsrw
fsubrs
scas
push
sti
outsb
or
decl
inc
cld
repnz
xlat
pushf
daa
loop
fsubr
out
enter
loope
or
jnp
sbb
adc
adc
mov
sub
xchg
or
sbb
jnp
call
les
lock
fisttps
or
inc
push
dec
or
xchg
std
ficoms
jmp
and
test
inc
adc
push
addr16
ret
aam
mov
repz
push
mov
mov
in
and
mov
adc
pop
fmull
dec
sub
addl
sar
mov
pop
pop
jbe
mov
scas
popf
inc
xchg
sub
xchg
adcb
or
add
cmp
cmpl
jge
or
add
xchg
cs
sub
icebp
sbb
mov
mov
xchg
test
stc
mov
adc
mov
cmp
add
or
mov
mov
xchg
jae
outsb
lods
adc
push
aaa
ss
mov
mov
ljmp
jae
movsl
mov
imulb
pop
pusha
push
fadd
xchg
dec
xor
into
mul
testb
push
loop
loope
and
fwait
push
ret
jp
test
inc
test
inc
mov
cld
in
mov
lcall
mov
stos
inc
cltd
lcall
mov
push
jo
mov
mov
cmp
stc
pop
push
sti
push
mov
push
insb
pusha
pop
icebp
sub
adc
insb
mov
call
inc
xchg
sbb
mov
xchg
xor
frstor
xlat
mov
sarb
or
cmp
iret
mov
add
fnstenv
sub
cmpsl
adc
mov
aad
sbb
dec
daa
in
popf
inc
aaa
je
jae
mov
adc
and
jne
push
sub
lods
push
aam
jnp
stos
push
mov
jmp
fistl
adc
cmp
shrl
sbb
pusha
popw
mul
or
pop
fs
add
sahf
mov
lods
scas
popa
mov
rcll
or
sub
lods
call
and
xchg
repz
iret
popa
jp
jmp
adc
mov
push
and
stc
fsubl
mov
je
xchg
cli
inc
add
and
push
sbb
push
jo
fwait
sarb
movsl
adc
or
xor
ja
dec
nop
lret
ja
and
std
dec
pop
fdivrs
dec
stos
cmp
pop
push
mov
pop
subl
gs
add
imul
repz
cli
int3
stos
call
inc
enter
fldt
push
fisubrs
lods
divb
xlat
sbb
cs
cmp
inc
cmp
cld
adcl
push
xchg
inc
or
je
gs
sub
cmpsb
push
insb
xchg
sti
dec
ret
dec
imul
inc
sti
scas
and
fdivl
clc
fdivrs
mov
hlt
sti
cmp
js
add
cmpsb
push
fists
outsb
dec
outsl
sbb
out
or
jge
cmp
cmp
dec
pusha
jae
pop
xchg
lods
jae
fistpl
icebp
imul
loopne
leave
movsb
pop
adc
dec
adc
xor
test
out
sbb
scas
lods
jl
inc
fstps
aas
xor
and
inc
push
repz
das
inc
pop
bound
xlat
cli
add
lea
lods
fucomp
je
popa
jb
fistpl
or
mov
sbbl
xor
adc
fsub
xor
loope
in
jecxz
xchg
xlat
test
xlat
push
push
std
sub
dec
imul
bound
cltd
gs
mov
xor
mov
ja
push
xchg
fcmovnu
jle
jae
lods
sbb
push
pop
out
lods
in
repnz
test
jg
sbb
or
cmp
add
pop
rcrl
shrb
lods
repz
xor
cs
sub
mov
lcall
in
adc
or
stc
sbb
in
inc
sbb
and
lea
int
adc
add
or
inc
cwtl
imul
xor
jg
test
lret
test
xchg
rcr
je
cmpsb
lahf
dec
mov
jmp
out
push
stc
in
andl
sbb
lea
cmpl
das
stos
js
pop
xchg
adc
lods
or
mov
sub
or
sbb
cmp
out
sbb
call
add
mov
adc
push
jecxz
lea
inc
aad
dec
in
fs
xchg
out
shll
xchg
pop
dec
lock
ss
movsl
imul
gs
mov
jns
lds
enter
sahf
push
mov
pop
cmp
cmp
inc
shrb
sub
outsb
push
test
pop
ficomps
dec
cs
imul
repz
sub
sbb
fisubrs
jne
pushf
sub
sbb
bound
fcmovne
inc
out
xchg
sbb
jb
xchg
in
mov
je
or
pop
push
lods
pop
leave
iret
aaa
hlt
mov
fildl
pop
flds
jno
out
jmp
push
jbe
sbb
jg
or
fldt
cmp
mov
xor
add
cmc
aad
clc
aad
movsb
add
push
mov
and
stos
into
jae
insb
sbb
mov
or
jmp
xor
sbb
pop
jl
cltd
cmc
int3
dec
jl
sbb
push
inc
ds
adc
lock
arpl
dec
dec
inc
imul
sub
inc
xchg
xor
and
sbb
loope
insl
call
sbb
or
jge
nop
sub
js
jge
pusha
xchg
inc
fldenv
push
pop
and
sub
call
sub
cmp
jl
xchg
gs
sub
or
mov
pop
inc
movsl
call
hlt
jnp
stos
fs
test
cmp
rorl
sub
and
adc
pop
dec
lret
loopne
imul
dec
cld
add
xchg
xchg
push
push
xor
sbb
fmull
in
sbb
adc
pop
outsb
cwtl
out
sub
jmp
je
testl
or
mov
test
inc
scas
cmp
sbbl
jecxz
cmp
mov
jg
leave
or
pusha
leave
aas
cmpsl
test
xchg
push
popa
pop
cmp
jae
jne
adc
add
jg
lea
test
scas
mov
sub
cld
xor
in
xchg
inc
mov
xchg
adc
sbb
push
hlt
mov
mov
dec
mov
push
shlb
cmp
repz
cmp
sbb
lcall
push
jno
pop
fdivrs
mov
mov
pop
and
sbb
stos
gs
cmpsl
popf
mov
mov
test
mov
jnp
jnp
pop
xchg
rclb
xchg
cwtl
jae
jbe
sahf
sbb
xchg
sbb
push
or
dec
test
jp
dec
pop
fcomp
popf
and
pop
repnz
cwtl
insb
pop
dec
cli
xor
xor
mov
sub
pusha
and
int
frstor
push
add
xor
mov
and
push
iret
inc
jmp
add
hlt
add
or
pop
jo
aam
inc
inc
xor
int
pop
push
mov
add
xchg
call
fisubl
add
or
in
jle
xchg
arpl
adc
add
test
inc
jno
aam
jae
test
bound
out
fcmovnb
push
push
xor
je
test
inc
adc
sbb
xchg
adc
adc
std
inc
sub
mov
inc
add
enter
js
or
loopne
mov
addb
sbb
or
les
sbbl
mov
shll
inc
popl
insl
dec
lahf
push
fsubrl
adcl
adc
push
add
push
push
push
cmpsb
cli
or
rcr
stos
jle
nop
add
jp
jecxz
repnz
adc
jmp
stc
outsb
inc
push
popf
mov
fcomp
popf
stos
je
inc
outsl
xor
xor
scas
fistps
imulb
xor
dec
popa
cmp
call
xchg
dec
cmp
adc
cltd
lret
ja
jle
and
pop
out
repnz
sub
inc
cmc
sbbb
pop
push
das
cltd
lea
mov
xchg
push
push
iret
cmp
shlb
mov
or
xchg
fdivl
clc
jecxz
dec
outsl
inc
push
ret
movb
ljmp
repnz
iret
insb
inc
in
fidivrl
add
xchg
lret
int
nop
sti
mov
pop
call
cmp
cltd
dec
pop
inc
inc
cld
inc
add
jl
xchg
xchg
rorl
dec
push
adcb
insl
lods
test
out
mov
push
pop
js
jl
bound
mov
add
cli
fistpl
xor
insl
aad
jns
ds
sbb
addr16
lret
out
repnz
sbb
mov
dec
push
push
cmc
dec
aaa
lock
mov
es
jne
mov
or
adcb
into
jbe
sbb
or
xorb
int3
leave
rolb
inc
pop
mov
into
pop
jmp
xor
fcmovnbe
pop
addr16
faddl
shrb
cli
sahf
push
dec
inc
sbb
insl
adc
fisttps
mov
sbb
out
sahf
sub
fs
lahf
fsts
lea
leave
in
loope
hlt
es
notb
hlt
mov
mov
or
sarl
mov
repz
push
jae
jle
sub
sub
mov
out
ret
add
enter
mov
ret
lahf
loop
loop
mov
sub
mov
xor
cmp
sub
mov
mov
xchg
jns
movsb
je
push
ds
xor
mov
int3
xchg
push
ss
mov
cmp
sti
arpl
jo
xor
pop
mov
rclb
or
pop
incb
inc
call
inc
daa
or
jecxz
mov
add
lret
imul
jecxz
inc
mov
lods
mov
hlt
fadds
push
jge
std
mov
push
addr16
rorb
fwait
xorb
mov
jp
scas
cwtl
popa
roll
lea
mov
mov
push
imul
inc
sub
add
lret
xor
stos
push
push
les
xchg
or
inc
adc
jae
mov
xor
cmp
xchg
and
sub
pop
xchg
pop
negb
lcall
push
movb
stos
pushf
mov
sub
lret
mov
mov
fmul
lcall
dec
stos
push
add
std
lock
stos
notb
les
push
clc
dec
sub
mov
dec
in
inc
sbb
dec
pushf
adc
dec
cmp
ljmp
outsb
push
xchg
repnz
mov
out
pop
pop
jl
and
push
sbb
stc
mov
mov
mov
xchg
imul
or
das
pop
je
cmp
pop
jb
shrb
sbb
popa
mov
mov
push
sbb
mov
sti
add
sbb
mov
inc
or
outsl
push
pop
scas
pop
sub
mov
cmp
adc
fwait
or
in
lods
add
test
jmp
mov
xor
push
inc
mov
dec
out
mov
xor
ret
rorl
out
sub
pop
ljmp
aaa
imul
and
xlat
fldenv
mov
push
push
ja
and
dec
jns
js
movsb
test
mov
sarl
xor
xchg
cmp
int
iret
in
loop
shlb
js
aaa
into
and
and
push
dec
push
jnp
lret
pushf
rcl
cmp
gs
adc
je
arpl
arpl
and
xchg
repnz
fidivl
add
scas
orl
push
insb
mov
add
scas
and
add
loope
pop
cmp
xchg
iret
pushf
fs
arpl
push
push
aaa
add
pop
jg
clc
cld
cltd
dec
pop
adc
jno
repnz
fidivl
addr16
sti
icebp
dec
xchg
push
jo
inc
repz
jmp
mov
jmp
adc
data16
xor
cwtl
addps
repnz
and
cmp
inc
lods
repnz
dec
aam
inc
xchg
mov
or
int
int
in
in
test
fsubrl
cmp
jae
cmp
push
stos
mov
inc
or
subb
shrl
mov
mov
insb
mov
inc
mov
clc
fisubrs
adc
mov
bound
mov
in
into
divb
dec
mov
jl
dec
xlat
inc
std
push
imul
sbb
fnstenv
data16
dec
stc
add
sbb
or
mov
jl
dec
dec
mov
inc
adc
lds
sti
pop
fwait
dec
add
ljmp
jae,pn
adc
jno
jo
xor
popa
adc
adc
jp
mov
pop
cwtl
push
or
lods
in
dec
mov
sbb
test
cmc
push
dec
push
decl
cmp
mov
mov
mov
cmp
sahf
mov
inc
or
xchg
cmp
mov
mov
xchg
jecxz
inc
ja
sbb
jmp
dec
lcall
lea
aas
mov
int
mov
aas
xchg
jno
xchg
arpl
xor
movsl
or
xchg
hlt
push
dec
or
mov
fcoml
pop
xchg
test
sub
xor
or
mulb
jmp
jl
or
int3
ror
out
dec
sarb
sub
mov
inc
sbb
icebp
test
sti
pop
mov
mov
add
mov
mov
adc
ljmp
ret
repnz
movsb
push
adc
cmp
fcoms
iret
loope
add
mov
gs
pop
mov
test
xchg
out
andb
lret
testb
icebp
shl
and
mov
pop
fistps
lock
or
jp
loop
clc
out
and
lret
in
jl
cmp
mov
dec
fwait
rclb
push
fistpll
pop
xor
sbb
je
loopne
mov
decl
push
dec
test
into
sbb
cwtl
stc
add
jg
push
mov
ficomps
aas
inc
mov
insl
adc
jbe
dec
xlat
mov
push
pusha
jns
dec
iret
fiaddl
fnsave
jb
movswl
push
test
sbb
repnz
xor
mov
pop
add
adc
and
jae
mov
in
int
ret
xchg
pop
mov
sahf
fsubs
add
mov
jbe
sub
add
cmp
push
in
xorb
call
mov
xchg
pop
adc
push
dec
push
insl
std
mov
mov
les
arpl
xchg
in
imul
mulb
jmp
notl
call
fmul
es
sbb
test
cmp
mov
popa
add
cwtl
and
sub
and
jo
scas
testl
or
sbb
inc
pusha
mov
push
mov
test
data16
xor
push
push
mov
and
pop
sub
dec
xchg
push
mov
jns
jns
shrb
jecxz,pt
fldl
pop
sub
mov
lods
das
sub
aam
stos
xor
dec
jnp
sahf
in
shrb
adc
insb
pop
fmull
lret
fwait
shll
fcmovnu
rol
inc
sahf
and
fwait
mov
je
add
mov
sub
sub
ss
mov
cmc
jg
dec
pop
dec
xchg
or
adc
or
shrb
hlt
mov
popf
sar
xlat
notb
test
xchg
pop
or
sbb
jp
and
add
xchg
stc
dec
cmp
dec
repnz
lds
vhsubpd
les
and
add
lds
add
xor
bound
shr
mov
aad
sbb
inc
lret
and
cmp
add
add
in
mov
jmp
bound
movsb
mov
mov
xchg
test
test
pop
ss
inc
xor
mov
sub
cmpb
sub
cmc
xor
sbb
xchg
xchg
repz
lds
or
mov
push
mov
cmp
push
in
lahf
imul
ds
jp
or
jbe
push
xorb
jb
add
jnp
stos
dec
jo
sbb
mov
xor
push
pushf
mov
ljmp
jno
push
sbb
mov
ds
jbe
adcb
pop
adc
inc
add
jle
icebp
push
mov
or
or
clc
lds
pop
insl
xchg
push
or
cmp
scas
ret
jns
leave
sti
pushl
fisubrs
push
or
sub
jg
or
lea
in
adc
mov
xchg
incl
xor
fs
out
test
jmp
push
xor
xor
sub
not
out
xchg
xchg
mov
pop
sahf
push
inc
ss
loop
fsubs
iret
jno
xor
and
xchg
mov
mov
sub
fnstsw
les
jb
cmp
dec
pop
mov
push
xchg
xor
nop
jmp
popa
cmp
ja
in
in
mov
ret
and
sbb
bnd
pop
sub
mov
hlt
jle
fwait
cmc
xor
lods
jae
and
adc
mov
and
aas
cmp
out
out
addr16
xchg
aad
aad
fldt
fbstp
nop
lea
or
int
pop
shlb
test
dec
mov
adc
loope
cmp
lods
fldl
xchg
or
sub
ficoms
and
push
mov
dec
xchg
rcrl
adc
insb
sar
pop
sub
ror
jns
aas
popl
out
pop
xchg
and
mov
jo
pop
data16
sub
incl
fsubrl
adc
leave
ret
out
outsl
int
aam
cmp
or
jae
frstor
insb
mov
gs
add
mov
popa
ja
dec
sbb
and
rol
mov
leave
or
dec
inc
mov
aam
xlat
xchg
into
fstp
mov
div
sarl
xchg
dec
in
fadds
inc
xchg
aas
push
lods
cmp
bound
les
mov
xchg
pop
xchg
push
push
add
sub
hlt
cld
inc
sub
test
jb
insb
mov
pushf
cmp
fwait
in
pop
popa
or
pop
mov
xchg
sub
xlat
scas
movsb
mov
adc
out
ret
into
hlt
push
inc
jle
add
jle
test
ja
dec
pushf
adc
pop
hlt
call
add
mov
dec
mov
mov
jne
pop
or
push
hlt
sbb
adc
sarl
shl
sub
sub
jno
movsl
or
mov
mov
jnp
xor
lcall
out
imul
pushf
cwtl
je
jp
imull
fimuls
inc
pusha
stos
or
or
sbb
icebp
fmuls
iret
push
call
and
lret
jns
jne
add
add
sbb
xchg
jns
aaa
imul
jl
sub
js
lret
push
sub
lock
jno
xchg
sub
negl
jecxz
push
ret
mov
fldcw
push
out
cmpxchg
sbb
ds
pushf
call
pop
sbb
mov
loopne
jmp
test
test
adc
inc
sti
dec
cmpsl
jmp
xchg
aad
sbb
sub
sbb
cwtl
mov
or
mov
pop
bound
jmp
mov
or
in
cli
repz
push
data16
cmpsb
jnp
fcmovnu
push
push
out
mov
sar
repnz
xchg
out
jl
mov
es
or
test
push
repz
pusha
mov
lret
test
aam
lods
rol
push
inc
stc
pop
or
popa
and
rorb
lcall
ficompl
mov
pop
mov
rcrb
loop
xchg
out
jl
mov
ds
cli
push
sub
xlat
cmp
sub
sbb
xchg
xchg
cmpsl
ret
loop
push
out
and
add
mov
cs
adc
sbb
pusha
jge
sbb
test
adc
sub
mov
pusha
leave
rcl
shl
pop
mov
fdivs
dec
testl
pop
push
jl
xchg
stos
mov
js
fbld
enter
loopne
xor
xor
pop
mov
mov
adc
mov
imulb
repnz
push
out
ja
inc
or
sbb
out
cmp
adc
in
cmp
and
xchg
ja
mov
pop
or
icebp
adc
cmpsb
cmpl
and
sarb
sbb
inc
negl
or
push
jmp
jae
push
shl
xchg
inc
push
mov
outsb
icebp
test
daa
outsl
push
push
inc
jecxz
mov
xchg
jge
inc
jo
nop
fsubl
sti
adc
or
xor
popa
xchg
ret
stos
lahf
mov
xchg
or
je
pop
cld
test
outsb
sbb
insb
adc
adc
or
popf
rolb
test
pop
dec
rcl
or
xchg
shll
pushf
mov
lret
lea
std
ja
pusha
rcrb
cmpsb
mov
or
jns
ret
push
adc
lea
add
rcr
lret
dec
mov
imul
sbb
jp
aas
mov
fists
jmp
cmp
jne
lods
mov
das
leave
mov
in
adc
push
sahf
jg
movsb
les
repnz
addr16
push
cmc
add
mov
add
fldl
bnd
cmp
mov
jbe
aam
mov
xor
dec
mov
inc
repnz
xorb
sbb
xor
sub
xchg
sub
lods
pop
xor
mov
insl
lods
cli
cmp
cmc
add
adc
xchg
push
xchg
rcr
push
imul
mov
push
ret
cmp
in
add
dec
mov
jne
test
pop
lahf
stos
cmp
and
in
jl
sub
xchg
outsb
adc
stos
cmp
ja
cmp
and
sahf
insb
in
push
mov
sbb
xchg
mov
out
out
lret
test
jecxz
std
push
mov
dec
jl
lahf
es
xchg
push
rcll
add
lea
in
ss
pop
adc
jbe
cmp
sbb
out
in
cwtl
jne
sbb
pop
mov
jnp
adcb
aas
adc
comiss
cmp
jle
pop
std
icebp
cmc
or
mov
fimull
jecxz
call
xlat
ss
fldl
call
bsr
or
jle
mov
gs
dec
js
or
adcl
mov
in
xchg
cltd
cld
movsb
mov
mov
sbb
dec
js
mov
xor
jg
or
out
push
cli
popf
and
jne
xchg
lods
or
cmp
mov
cwtl
lret
sti
inc
jl
shrb
lea
push
push
loopne
sub
ret
ss
in
lahf
xor
ds
hlt
xlat
mov
or
jnp
jns
pop
js
cld
mov
and
cmc
and
lcall
mov
ret
pop
push
fstl
mov
popf
adc
sub
xchg
addr16
test
mov
xor
jnp
fs
in
xor
test
lods
push
hlt
insb
mov
pop
hlt
testb
adc
aaa
sub
lods
gs
ficoms
pop
jns
sahf
cs
sub
loope
data16
jle
pop
xchg
xchg
jp
mov
stos
cli
aaa
push
pop
mov
loope
es
xchg
sbb
dec
inc
in
cli
push
test
cmp
push
push
dec
idivb
mov
aas
call
mov
js
push
xchg
aaa
iret
lret
mov
rcl
sub
fsub
add
clc
and
xchg
or
sbb
into
pop
pushf
cmp
add
imul
add
repz
adc
mov
hlt
mov
jl
jg
insb
inc
testl
mull
jle
push
jge
dec
add
dec
lahf
sar
jp
mov
in
add
push
jle
sbb
fstps
stos
mov
adc
insl
mov
movsl
xor
stos
pop
mov
ljmp
mov
mov
pop
and
mov
xchg
cwtl
aas
xchg
out
xchg
jo
pop
popa
dec
jl
mov
loopne
xchg
lcall
mov
mov
pop
dec
or
xchg
shll
jnp
adc
or
sarb
cwtl
adc
adc
add
loopne
cmp
into
jne
or
test
cmpsl
cmp
pop
loop
out
xchg
imulb
push
lea
dec
pop
mov
stos
add
arpl
mov
xchg
fcomi
cmp
add
aad
imul
push
sti
fwait
sbb
fsubrl
js
cli
xor
mov
pop
dec
enter
sub
push
cmpl
xchg
repnz
dec
pop
test
fdivr
icebp
jp
jp
aas
cmp
adc
ds
mov
jg
in
or
cmp
dec
incb
pop
push
mov
enter
sub
ficoml
leave
cmc
push
ret
out
pop
dec
mov
fcomi
mov
mov
xchg
and
sbb
mov
xchg
icebp
shrl
sahf
enter
sub
aaa
pop
jne
cmp
rolb
outsb
cmpl
mov
ljmp
inc
ss
xchg
mov
cmpsb
sub
dec
fbstp
xorl
sub
pop
sbb
lea
and
xchg
mov
mov
lods
lcall
pop
data16
incb
cmp
mov
add
xchg
ret
inc
lret
cmp
fs
sbb
or
or
loope
pusha
adc
into
hlt
xor
adc
xor
movsb
je,pn
ljmp
mov
mov
pop
test
fdivp
jp
sarb
cmp
jns
push
and
loop
sub
fninit
cs
xor
xor
push
in
sbb
mov
push
ret
push
mov
jle
add
stos
repz
pop
cmc
push
arpl
sbb
stos
aaa
adc
js
pop
mov
and
fcompl
jecxz
insb
insb
cmp
aad
cld
dec
or
aaa
sar
cwtl
mov
pop
mov
inc
cmp
mov
mov
jg
pop
pop
xchg
pop
xorb
cld
mov
jge
mov
pop
and
pop
stos
call
stos
pop
mov
xchg
adcl
xlat
test
and
pop
mov
or
sbb
into
or
dec
mov
inc
jle
test
jmp
rclb
hlt
lahf
in
jns
fdivrl
push
cmp
imul
lea
xlat
insb
movl
dec
ret
jae
nop
lret
xchg
inc
ljmp
int
mov
or
in
pop
mov
mov
pusha
and
dec
xchg
fwait
test
add
sub
pop
je
push
sbb
pop
dec
mov
nop
inc
int3
popf
and
das
shll
ja
aam
int3
fldcw
jg
jmp
xchg
and
pop
int
std
mov
mov
adc
adc
mul
std
out
mov
push
inc
cmpsb
repnz
and
mov
and
pusha
std
cs
mov
sbb
rorl
in
test
push
add
cmpl
fwait
inc
jbe
cwtl
mov
repz
xor
and
decb
sahf
sub
sub
shrb
sub
or
inc
jo
cltd
std
fwait
mov
outsb
dec
add
iret
cmpsl
jg
xchg
fwait
xor
ror
mov
pop
push
pop
mov
dec
mov
pop
popa
or
pop
pop
inc
push
dec
inc
sub
loop
mov
insb
inc
lock
fildll
mov
in
ret
add
in
mov
cmpsb
sbb
sub
push
insl
out
mov
es
lret
cwtl
addr16
mov
push
test
popa
scas
sbb
push
jae
ret
lret
pop
cmpsl
fdivrs
inc
in
mov
loopne
mov
orb
add
jmp
mov
inc
xor
cmp
cmp
push
mov
push
insl
es
fadd
push
and
lret
mov
outsl
and
enter
mov
add
incb
cmpsb
dec
mov
xchg
push
adc
push
pop
cmp
pop
enter
shl
inc
xor
push
sarl
add
ja,pn
adc
fsts
ljmp
and
inc
add
add
cmp
jb
and
push
push
xchg
cli
sbb
out
div
push
movsl
loope
fsubl
and
lret
adc
dec
mov
push
nop
mov
ret
out
or
xor
in
in
jmp
add
push
std
out
cmp
sub
inc
hlt
mov
jmp
cltd
arpl
pop
stc
testl
push
das
jle
and
into
sbb
xchg
imul
mov
xor
push
insl
dec
pop
xor
mov
push
and
aam
or
add
inc
in
inc
lds
ss
sbb
popa
aaa
lret
inc
mov
fs
leave
dec
addr16
cmp
fisubs
cmp
sbb
stc
jg
mov
xchg
mov
add
fdivr
into
nop
adc
fsubrl
incb
imul
cmp
xchg
adc
xor
mov
fnstcw
xchg
cmp
xchg
mov
pusha
outsl
mov
lea
sub
mov
add
pop
lods
adc
sbb
push
cmp
cmp
and
fldl
add
dec
add
sub
cmpsl
insb
sbb
dec
ds
pop
rcrb
mov
clc
aas
dec
js
jb
pushf
cmp
ss
mov
xor
cmp
push
insl
xor
pop
aam
leave
jae
out
sub
sti
andl
scas
mov
sbb
fcomi
sbb
outsl
inc
lcall
add
ret
xchg
outsl
shll
inc
adc
in
mov
in
inc
or
movq
repz
jne
inc
pusha
mov
mov
lock
xor
sbb
leave
sub
outsb
mov
inc
das
mov
and
lahf
cmp
call
pushf
inc
cmc
cmpsb
push
int3
outsl
popf
ds
js
inc
and
dec
add
out
push
push
in
pop
xor
out
jae
in
cli
jl
outsb
or
rorl
fucomip
in
idivl
cmp
lds
aam
adc
mov
in
cmp
xchg
mov
cmp
pop
mov
cmpsl
sbb
out
lock
xorb
cmp
xchg
arpl
incb
scas
add
pusha
xchg
inc
lret
pop
adc
icebp
andl
pushf
mov
pop
popa
sub
outsl
xchg
stos
arpl
call
nop
pop
movsb
pushf
cmp
insl
fidivl
cltd
add
dec
jl
cmc
push
fcompl
adc
pop
xor
test
cltd
xor
int
test
cld
fimull
or
add
push
jns
inc
out
ss
jns
out
push
xor
adc
adc
jle
push
adc
rorl
in
jmp
mov
rorl
pop
xchg
jns
add
das
rorl
jl
xor
out
fidivl
inc
mov
ljmp
aas
insl
jmp
pop
sbb
mov
mov
mov
jno
or
cs
push
es
xchg
fistpl
pop
into
xchg
movsl
lea
arpl
outsl
pop
jl
movb
xchg
icebp
push
pop
add
sub
ret
loop
lds
movsb
add
mov
lcall
std
aad
mov
outsb
ds
fstl
cld
sbb
jbe
or
sti
ret
gs
stc
dec
sbb
jb
jecxz
mov
sub
and
aad
je
lock
cmpsb
inc
and
cmp
xchg
loopne
fsts
cmp
dec
sub
pop
push
xchg
mov
lods
daa
clc
test
mov
mov
adc
movsb
cmp
outsl
in
mov
cmp
pushl
scas
mov
xchg
out
loop
sbb
imul
cmpsb
js
mov
mulb
clc
mov
das
inc
arpl
int
or
mov
or
and
pop
ja
fdiv
sub
lret
dec
loop
sub
dec
cmp
aas
dec
enter
lods
mov
arpl
cmpsl
adc
insl
xor
rclb
aas
scas
mov
xlat
sbb
dec
or
fldenv
dec
loopne
cmp
daa
cld
and
loope
cmp
xor
loope
inc
loope
ficomps
cmp
loope
leave
cmp
mov
fstl
cs
in
push
pushf
jg
inc
mov
pop
sbb
lcall
pop
addb
aaa
adc
cmp
pop
iret
push
cwtl
jae
mov
inc
xchg
imul
jno
les
fsubl
mov
sbb
cmp
pop
dec
aad
pop
mov
negl
xor
dec
out
leave
lock
loop
mov
inc
rcrb
pushw
arpl
clc
or
xchg
addl
rcll
pop
adc
ret
test
lods
push
out
xlat
lret
or
sub
stos
in
mov
mov
sbb
sub
xchg
outsl
adc
mov
jg
into
sbb
shrb
cmp
xchg
mov
xchg
push
ss
out
insb
rcrb
jno
jne
add
js
or
and
js
push
mov
test
gs
scas
idiv
or
test
js
dec
addr16
mov
ljmp
jb
insl
adc
pmaxsw
andl
and
fdivr
sub
or
fs
sti
shll
sbb
and
lods
dec
dec
push
lret
rorb
das
repz
jg
inc
inc
ss
cmp
fistpll
mov
mov
xor
test
pop
outsb
xchg
inc
hlt
xchg
lret
daa
pusha
mov
jo
fstpl
jae
sbb
scas
mov
lods
xchg
push
cmpsl
pusha
cwtl
push
cmp
lods
pop
lods
dec
addr16
dec
cmc
sbb
sub
push
rcll
into
add
jns
cmp
mov
mov
lea
push
cwtl
inc
inc
mov
pop
and
or
movsl
dec
test
dec
fsub
or
adc
sub
dec
xor
adc
not
or
xor
mov
shlb
ja
sahf
insb
pop
pop
xchg
jge
pop
mov
xchg
fcomp
loopne
or
jne
push
cli
add
mov
out
sbb
out
xchg
out
or
mov
clc
cmpsl
leave
lea
mov
xchg
mov
lods
lock
mov
dec
add
insl
ficoms
aas
push
jle
add
xor
cmp
mov
mov
or
test
dec
loopne
push
cmpsl
or
sub
and
and
into
leave
adc
sbb
movsb
cmp
mov
mov
fidivl
xchg
lcall
shlb
cwtl
pop
leave
pop
jg
pop
dec
stos
js
mov
pop
fdivl
hlt
sbb
dec
xor
pushf
inc
push
dec
push
add
mov
mov
mov
lcall
sbb
cmpsl
fisubrs
or
outsl
adc
pop
adc
jmp
mov
in
mov
mov
adc
shrb
add
rcll
pop
or
movsl
and
inc
mov
jle
inc
lods
mov
loope
or
aas
divps
mov
cmc
in
sbb
ret
cld
insb
ja
into
std
sub
negl
fsubs
or
movsb
dec
enter
xchg
popf
adc
jmp
cmp
popa
neg
inc
or
adc
fldcw
bound
stos
jno
cmp
jne
jnp
fwait
inc
popa
dec
jnp
and
in
and
xchg
jo
jae
gs
push
cmp
aas
es
mov
fwait
push
shr
jmp
out
and
adc
jmp
mov
mov
cmp
gs
dec
js
lods
sub
push
mov
or
mov
out
and
sub
fcompl
into
sbb
inc
xchg
ret
add
subl
mov
add
les
push
add
popa
js
pop
hlt
rcr
ja
dec
jg
mov
mull
scas
test
cmp
movsb
xlat
inc
push
sbb
bound
mov
arpl
add
inc
andb
fbld
jae
cmp
lahf
xor
or
mov
xchg
sbb
iret
mov
pop
sub
pushf
add
ret
adc
dec
lds
add
andb
xor
inc
inc
push
call
sbb
ret
pop
adc
add
jno
jnp
cld
fldenv
in
mov
push
jmp
xchg
pusha
daa
mov
pop
insl
fnsave
ljmp
fisubrs
mov
jg
inc
sbb
in
inc
les
and
mov
xchg
inc
add
clc
aas
loope
xchg
pop
push
push
movaps
push
mov
mov
pusha
les
test
add
in
fsubrs
dec
inc
push
sbb
mov
inc
inc
add
dec
inc
leave
data16
and
movsb
jne
push
ret
add
cmp
jg
sbb
pop
lahf
xor
cli
and
dec
leave
sub
mov
push
fwait
rcrb
dec
mov
mov
xchg
insb
mov
sub
ja
or
ret
and
sbb
push
aam
or
sbb
mov
mov
shll
dec
int3
adc
in
xchg
fcoms
seta
pop
pop
ja
into
mov
decb
ret
sub
push
or
repz
push
add
dec
clc
dec
and
push
dec
loope
dec
xchg
pop
adc
push
or
xchg
inc
inc
lods
push
cmpsb
mov
mov
sub
xor
nop
aas
rolb
repz
les
adc
mov
push
inc
sbb
sbb
jge
jle
mov
cmp
call
cmp
adc
leave
ss
jmp
daa
ret
xchg
in
inc
fcmovbe
in
xchg
mov
jp
mov
cmp
xor
cmp
dec
fisubs
and
ljmp
xchg
sbb
loop
mull
fwait
add
pushf
xor
loop
jnp
adc
jl
sahf
dec
dec
in
push
jns
arpl
sbb
fidivrs
sub
sub
sar
fldl
adc
loope
fs
ret
dec
dec
iret
out
stos
mov
sbb
cltd
lahf
sbb
jbe
xlat
jns
mov
iret
cwtl
insb
pop
push
adc
dec
and
rorb
mov
or
jmp
inc
leave
repz
sbb
push
sbb
cmp
push
lock
inc
sub
pop
les
cmp
pop
les
mov
aam
cwtl
sbb
clc
xchg
loope
cld
xchg
mov
movups
xor
sarb
xor
mov
fists
dec
jg
ja
pop
cld
inc
flds
repz
push
inc
push
jns
nop
neg
and
and
cmp
psadbw
adc
test
or
adc
push
dec
fisttpl
cmc
and
xchg
cmc
and
or
jge
cltd
fisttps
rolb
cltd
mov
scas
and
mov
mov
mov
lcall
in
cli
sbb
dec
jne
push
scas
pop
fdivs
and
test
loopne
mov
or
aas
orb
stos
scas
imul
jae
outsb
dec
mov
push
orl
addl
cli
rcl
sti
xor
lock
in
xchg
repz
arpl
arpl
out
fisttps
push
js
not
dec
xchg
out
repz
ss
jbe
repnz
add
pop
lahf
outsb
sbb
jge
mov
das
loopne
jb
xor
movsl
out
jge
lahf
mov
cwtl
adc
xor
arpl
ficomps
ds
rcrl
jne
stc
jbe
pop
mov
or
mov
rcr
loope
or
fnstenv
bound
enter
popl
inc
dec
orl
dec
out
pop
sub
ja
pop
sbb
cmp
add
mov
test
scas
mov
aad
adc
mov
mov
push
push
xor
add
gs
sub
push
fwait
mov
pop
or
or
fisubs
int3
leave
push
push
pop
rcl
ret
dec
fnsave
popf
adc
stos
lock
push
aaa
add
mov
faddl
adc
cmc
adc
mov
mov
stos
pop
sbb
in
cmp
mov
dec
icebp
pop
jl
fistps
pop
adc
gs
push
mov
sar
aam
dec
add
mov
scas
pop
push
enter
idivb
push
pusha
jbe
ljmp
je
jns
int3
add
fldt
sahf
xchg
add
mov
push
aas
arpl
scas
pop
mov
leave
push
fcoml
sti
std
dec
xlat
ss
cmpsb
sbb
cmp
add
add
and
leave
mov
sub
push
into
jnp
jo
fsubl
inc
dec
push
std
leave
sub
cmpsb
fcmovnu
cs
cmp
mov
cltd
or
ljmp
sbb
dec
scas
and
inc
stos
stos
xor
pop
sub
and
push
jo
mov
push
sub
mov
jge
xchg
jo
jns
rorb
xor
int
mov
mov
into
out
cmp
sbb
mov
loopne
enter
pop
cmpsb
jmp
mov
loopne
cwtl
xlat
incl
jno
data16
mov
cld
fstpl
cmpsb
cli
mov
bnd
fdivrl
adc
je
loop
notb
iret
mov
test
sub
dec
scas
dec
and
mov
movsl
into
and
std
dec
jno
mov
fwait
cmpsb
and
jp
jg
mov
aad
scas
jp
adc
mov
frndint
mov
jne
ljmp
pop
inc
jb
add
in
test
pop
push
arpl
dec
cmp
adc
test
mov
call
cmpsb
push
fidivrl
out
hlt
and
outsl
mov
cmpsb
mov
push
andl
dec
insb
and
dec
orb
mov
call
pop
pop
push
sbb
es
pop
jge
sub
or
and
sahf
mov
or
add
xor
push
pop
lahf
mov
xchg
inc
sbb
push
test
clts
adc
push
cmpsb
push
incl
inc
mov
aaa
cltd
push
rorb
cmp
sub
orl
jg
dec
fisttpl
cmpsb
repz
xlat
ss
jle
testl
mov
pop
call
xor
sbb
sbb
and
xchg
es
test
xchg
ds
sbb
stos
shlb
cwtl
jae
adc
scas
push
sbb
sarb
mov
pop
cmc
pop
push
je
and
aad
popa
lret
jno
push
lods
lcall
mov
inc
xchg
out
clc
mov
hlt
xchg
inc
aad
jno
xchg
lcall
xchg
or
lahf
lds
shll
dec
mov
je
xlat
inc
sarb
xchg
adc
movsl
dec
je
mov
inc
xchg
orl
adc
addr16
mov
and
cwtl
dec
popa
sbb
and
mov
xchg
xchg
int3
stc
ret
jg
pop
dec
sub
sbb
sub
out
test
mov
repnz
into
je
inc
jle
les
dec
sbb
pop
and
and
pushf
jg
outsl
pop
sbb
fbstp
scas
mov
lds
push
sub
or
je
xchg
or
or
test
xchg
rcrl
mov
fcomp
jg
loop
sub
mov
out
jg
std
push
into
jnp
lret
stos
push
mov
push
adc
iret
cmpsb
or
hlt
jno
nop
xor
jae
ss
outsb
mov
decb
or
cmp
notl
imul
dec
mov
and
add
sub
enter
mov
lods
mov
loop
frstor
cli
hlt
mov
outsl
jne
pop
sub
shl
out
and
outsb
xchg
mov
mov
jb
mov
lea
add
lds
push
not
pop
xor
pop
cmp
jmp
inc
adc
pop
jl
sahf
cmp
xor
xchg
mov
lret
inc
bound
sub
fbstp
inc
xchg
mov
xor
shll
cmpsb
mov
cld
rcl
out
push
dec
mov
sbb
pop
in
test
ret
pop
nop
jne
int3
movsb
cld
movsl
in
mov
sbb
hlt
repnz
and
les
xchg
xor
fxch
in
mov
clc
loope
pop
je
and
inc
or
dec
idiv
scas
rcrb
fwait
js
es
lcall
sub
xor
and
mov
frstor
mov
pop
fsubl
and
js
pop
cmp
int
inc
fsts
outsl
push
lret
pop
int
outsb
mov
add
stos
add
xchg
mov
es
decb
jno
xor
mov
and
jb
push
adc
cmp
dec
ja
pushf
rcrl
adc
sub
out
inc
in
or
or
sbb
rcll
stc
pop
add
enter
sbb
cmp
jno
sub
popa
adc
sti
mov
pop
fwait
setae
adc
pop
jle
or
cmp
cmp
shlb
aas
add
adc
mov
mov
or
adc
pop
cmc
je
jp
mov
jne
jns
or
sub
les
xlat
clc
mov
push
mov
jg
stc
sub
int3
xor
enter
jp
mov
rolb
sbb
and
and
rcr
fdivrs
shr
adc
nop
push
into
pop
int3
lret
imul
sub
jg
adc
add
dec
fcomps
fsubrs
js
subl
mov
arpl
ljmp
pop
push
xchg
aam
jno
pop
sub
jno
mov
xorb
xchg
lret
in
lods
adc
rcll
adc
inc
mov
xchg
inc
cmp
jne
sbb
xchg
dec
xor
xor
fisubrs
shr
jo
js
imul
mov
das
lods
cmp
sub
sbb
pop
loope
jl
pushf
out
adc
add
pop
shl
push
pop
std
xchg
je
scas
lock
xor
push
enter
push
lret
in
sti
or
xchg
push
inc
lahf
push
cld
jmp
xchg
roll
and
pop
and
popa
pop
xchg
jl
insb
pop
int
mov
mull
adc
xchg
inc
xor
es
scas
and
inc
jns
imul
inc
cmc
mov
mov
lahf
adc
mov
inc
xor
mov
dec
leave
sub
pushf
fcompl
out
mov
int
repnz
int
test
orb
shrb
lods
pusha
mov
sub
mov
xor
cmp
xchg
insl
add
hlt
das
add
jne
fwait
dec
into
filds
fldt
xchg
mov
je
xorl
sub
push
test
add
adc
pop
cli
cwtl
inc
jae
in
iret
ss
mov
and
pushf
insb
mov
jnp
mov
xor
xchg
icebp
fcompl
pop
mov
xor
ror
sbb
orb
popa
jne
dec
sbb
lock
les
and
lock
mov
lds
sub
je
movsb
pop
cltd
add
clc
push
or
popf
push
sbb
pop
cmpl
xor
imul
xchg
mov
lea
jg
add
jge
rcll
mov
leave
xor
pop
fists
sbb
cli
xlat
insb
in
xorl
jg
mov
push
add
lahf
lods
insl
pop
int3
scas
jne
out
scas
bound
ljmp
jo
clc
mov
mov
mov
push
jns
das
addr16
inc
insb
fs
lock
jle
js
dec
repnz
mov
cwtl
adc
mov
adc
xchg
stos
fidivrl
pop
pushf
sub
aam
mov
fs
js
sti
mov
leave
push
hlt
mov
insl
mov
cmp
add
aas
dec
imul
or
jo
xchg
sbb
mov
mov
jo
scas
mov
push
data16
movsl
sbb
cli
push
cmp
or
jnp
and
push
lret
in
out
cmp
xor
xchg
out
rcr
lods
shll
jg
dec
out
jb
mov
pop
sahf
cmp
mov
loopne
test
mov
loop
aaa
fldt
sbb
test
push
sub
jnp
ds
pop
xor
gs
push
les
inc
ror
out
xchg
xchg
jl
lods
incb
insl
push
jle
movsb
jle
push
dec
push
lds
xor
scas
pop
loopne
jae
loopne
cmpsb
fimuls
popf
push
out
inc
outsb
push
sub
or
or
adc
pop
jle
sub
out
add
negl
mulb
repnz
jp
outsl
push
pop
int
inc
xchg
or
pop
repz
jns
mov
jge,pn
shr
ja
and
sbb
outsl
lods
ljmp
cs
popa
test
xor
mov
pop
stos
fs
adc
pop
stos
fsubl
xor
insl
xchg
cmpsl
mov
insb
outsl
sub
add
cmc
pop
sub
clc
arpl
js
imul
or
lods
pushf
adc
cltd
push
and
adcb
jecxz
mov
xor
pop
add
je
push
mov
or
xor
iret
mov
xor
push
lock
faddl
mov
sti
push
cmp
icebp
lods
clc
loope
test
outsb
sti
push
iret
addr16
inc
sbb
xchg
icebp
leave
xor
xor
xchg
icebp
fildll
adc
jmp
pop
out
daa
out
into
jmp
xchg
mov
sbb
aas
add
jnp
aam
jae
xchg
dec
mov
test
xlat
inc
ljmp
test
in
add
nop
xchg
or
sub
push
dec
mov
nop
lret
inc
lods
in
pusha
mov
or
add
add
inc
sbb
js
jg
scas
or
sbb
fidivl
sbb
test
lret
pop
rcr
add
fsubr
adc
add
cmp
fimull
dec
mov
or
dec
mov
insb
cs
adc
adc
mov
mov
ja
lds
mov
idivb
lret
loop
push
cmpsb
adc
call
and
jno
shlb
mov
or
not
jmp
lret
xor
fimull
dec
xlat
fs
repnz
and
rcll
jle
ds
mov
jmp
mov
fwait
xor
rcll
pop
dec
jl
xorb
push
gs
lret
dec
inc
sbb
xor
ret
inc
arpl
ljmp
lods
jge
or
jb
nop
pop
mov
dec
push
data16
jp
rolb
outsb
mov
sub
sub
push
sbb
in
in
cmc
stc
jmp
add
std
xchg
hlt
test
jl
pop
cmpsb
inc
out
repnz
das
leave
cmp
inc
push
jne
fistl
push
jns
cli
mov
loop
adc
inc
jno
sbb
subb
fwait
repz
out
mov
jnp
loop
insl
jp
or
adc
int3
in
out
mov
jge
xchg
xchg
test
adc
dec
call
outsl
subl
cmp
sbb
sbb
je
and
push
adc
out
cmp
and
arpl
lahf
iret
pop
sbb
mov
out
mov
loop
shl
lahf
jnp
scas
comiss
and
inc
fxch
mov
cwtl
je
stos
push
ret
inc
add
sub
imul
leave
test
scas
test
clc
loopne
cmpsl
jl
movsb
dec
mov
sub
push
enter
or
test
xchg
pop
push
outsl
loope
nop
sarl
out
jl
mov
sbb
mov
fstpl
xor
jnp
adc
jl
mov
cmp
jno
std
insb
push
cmc
fwait
push
lds
inc
mov
sbb
mov
or
lds
pop
inc
mov
movsl
jbe
icebp
jp
jae
jne
es
and
adc
ss
jmp
mov
inc
adc
pop
mov
mov
shlb
lds
fldt
xor
fisttps
cmp
shrl
add
mov
sub
fisttpll
jnp
adc
adc
jmp
push
imul
sbb
shll
mov
push
pop
rcrl
mov
pop
inc
les
test
je
shlb
and
pop
rolb
mov
in
xchg
cmp
cmpl
xchg
jp
xchg
ret
or
insb
js
jnp
jae
inc
pop
or
adc
in
aaa
shlb
insl
mov
pop
fcomip
sbb
sbb
add
cmp
sbb
sub
out
sahf
xor
adc
jbe
or
push
jno
iret
hlt
xchg
xchg
aas
lahf
mov
lods
fwait
jae
movb
and
fnstcw
mov
cli
fsubl
pushl
and
jbe
xor
je
les
xchg
and
in
mov
ret
into
hlt
call
jbe
testl
shlb
loopne
cli
mov
xchg
cmpsb
add
loopne
stos
mov
int3
shll
lahf
mov
xchg
iret
dec
daa
xor
mov
scas
push
repz
inc
jmp
mov
dec
int3
mov
jno
push
mov
lea
jno
push
or
fsubrp
or
sbb
push
mov
push
arpl
xlat
push
cli
jmp
mov
fwait
ds
pop
adc
cmp
es
jmp
adc
icebp
sub
push
pop
ja
or
inc
fidivl
mov
xchg
fidivs
xchg
mov
inc
loope,pt
mov
lcall
call
adc
in
mov
mov
or
dec
xchg
mov
jge
and
enter
inc
dec
sub
dec
leave
mov
jmp
mov
bound
xorb
inc
xor
cmp
sti
lods
ljmp
in
popa
ljmp
fisttpl
mov
ret
gs
push
push
xchg
aas
shlb
lret
into
hlt
mov
sub
imull
decb
lods
mov
clc
imul
fisubl
push
jb
mov
dec
adc
adc
jno
loop
test
pop
outsl
add
mov
xor
outsl
shll
push
push
sti
mov
sub
jbe
xchg
push
lret
mov
aaa
mov
sub
int
testl
fnstsw
dec
lea
ljmp
inc
sub
nop
std
dec
pushf
and
pop
inc
aam
sub
pop
scas
insb
dec
daa
lret
daa
sub
andl
or
popf
cwtl
mov
xlat
jbe
sbb
jp
lahf
push
or
or
add
subl
sbb
adc
cmc
je
mov
sub
and
sahf
hlt
call
ret
mov
xchg
xchg
push
add
pop
js
std
push
xchg
and
jae
adc
xchg
clc
mov
ds
add
xchg
mov
punpckldq
push
pop
das
xor
clc
push
lds
outsl
stos
jo
adc
cmc
cmp
sub
or
push
dec
inc
pusha
iret
nop
scas
fisttpll
test
or
or
and
mov
push
into
push
lods
sub
movsl
out
lock
int3
jns
js
std
pop
stc
cwtl
sbb
jl
ds
sti
or
cmc
mov
test
or
loope
push
fwait
dec
dec
cmpsb
dec
out
jb
sub
jno
mov
jge
xchg
andl
icebp
scas
test
js
inc
clc
mov
in
sbb
xchg
xchg
cmpsb
cmp
cmp
test
mov
or
mov
adc
sbb
andb
js
xchg
mov
jbe
xchg
out
push
outsl
sbb
push
out
or
mov
arpl
pop
jbe
insl
xor
pusha
and
push
cld
xor
stos
jb
pop
add
stos
lret
and
shrl
or
sbb
xlat
into
fs
add
into
lahf
lods
sub
xchg
xor
fildll
adc
dec
jge
and
fistl
nop
arpl
xchg
jmp
icebp
or
cmpsl
sub
popl
inc
inc
lcall
mov
push
sbbb
aad
push
imul
jmp
popl
mov
in
push
jns
dec
scas
mov
push
push
jmp
cmpsb
out
addb
cmp
inc
inc
adc
xchg
lret
scas
xlat
ds
jo
mov
push
or
adc
out
xchg
subl
sbb
xchg
scas
xchg
iret
mov
inc
arpl
jo
mov
movsb
mov
rorb
sti
cs
push
sbb
mov
mov
aaa
add
push
cvtps2pd
xor
inc
insl
and
mov
and
cmp
rorl
inc
push
or
xchg
push
mov
adc
icebp
ss
popa
cmp
movsl
lods
jae
push
std
dec
mov
xor
shl
sub
mov
jl
aad
mov
jg
cmp
and
mov
xchg
es
pop
dec
dec
enter
fidivrs
inc
mov
pop
cmp
and
lcall
xor
or
notl
das
jmp
pop
fimull
adc
push
cld
mov
sbb
lds
pop
or
dec
ret
sub
mov
inc
cmc
inc
in
into
je
or
jno
mov
dec
popa
insb
jno
or
jae
hlt
mov
mov
call
bound
mov
jge
es
or
inc
adc
mov
xchg
mov
pop
mov
into
mov
lret
inc
push
mov
or
jge
shlb
adcb
push
sbbb
out
cltd
mov
mov
sub
in
push
xor
test
and
jnp
inc
lcall
das
pop
dec
faddp
mov
scas
jns
aam
and
test
cmp
fcomi
push
mov
lret
ffree
roll
stos
mov
xor
inc
and
jb
push
aaa
lret
imul
pop
pop
pop
movsl
pop
sub
pop
dec
ss
in
mov
insl
or
sbb
and
mov
mov
rolb
sbb
mov
inc
cli
icebp
outsl
cmpsb
pushf
push
push
ljmp
inc
add
jno,pn
icebp
and
dec
push
ss
cmpsb
mov
nop
cmp
mov
pop
fcmovnbe
lods
xchg
arpl
pop
test
xchg
imul
popf
and
cmp
scas
loope
sbb
jnp
cmp
pusha
and
int3
loope
push
popa
mov
filds
fidivrl
adc
push
mov
leave
test
and
cmp
insl
loop
popl
mov
shl
enter
push
call
outsl
jo
flds
lods
out
outsb
mov
lods
adc
int
pop
cmp
dec
loopne
push
mov
jmp
popa
pusha
push
dec
push
shrb
pusha
orb
mov
fcoml
shlb
adc
jg
mov
push
rolb
repz
sarb
sbb
cld
mov
xor
inc
and
jb
mov
pop
dec
mov
stos
jg
pop
xchg
out
mov
add
ret
jbe
outsb
lock
cli
repnz
sub
xchg
popf
mov
insb
and
xchg
mov
mov
jl
ja
mov
lret
ja
loop
mov
ret
jne,pn
jo
aam
pop
jle
outsb
fbstp
leave
ss
xchg
cs
add
and
xchg
fldt
popf
andl
adc
nop
cmp
inc
mov
push
pop
ss
mov
bound
jns
sub
or
rep
std
mov
imul
pushf
push
mov
xchg
jno
fildl
loopne
negl
lea
adc
jp
inc
and
xchg
jbe
idivb
arpl
scas
push
lcall
mov
mov
or
mov
call
mov
dec
jno
in
aaa
sub
pop
enter
xchg
or
daa
data16
xor
sbb
xor
mov
imul
sbb
test
sahf
and
mov
movb
sbb
xchg
fildl
out
insb
xchg
scas
das
rcrb
repz
lret
fbld
rcl
or
or
ss
xor
sbb
loopne
lcall
test
movsl
out
push
bound
outsb
xchg
xchg
fcoml
lea
test
insl
mov
pop
jl
imul
in
dec
cli
shll
in
adc
add
inc
addr16
loopne
adc
fmuls
xor
test
mov
or
loop
andl
xor
stc
dec
dec
xor
out
arpl
xchg
cmc
dec
mov
pop
mov
push
cwtl
cmp
sti
cli
cmp
cltd
jle
push
mov
call
sbbb
lret
imul
cmp
stc
pop
out
cltd
sahf
mov
loopne
xor
push
jne
add
push
fidivl
mov
pop
dec
or
lea
sti
pop
insl
insb
mov
insl
or
faddl
push
xor
int3
popl
xor
out
mov
xchg
fildll
les
call
mov
sbb
ret
movsl
shr
not
xchg
cmp
int3
int3
movsl
stos
ja
in
push
jae
sbb
push
cmc
nop
arpl
bound
or
pop
add
outsb
mov
out
movsl
rcrl
sub
push
loop
jg
mov
inc
sub
dec
pop
int3
sub
aas
jp
shr
jle
xor
sbb
in
mov
and
or
lret
sti
xchg
xchg
mov
aad
inc
sub
sub
es
shlb
adc
stos
cmc
iret
dec
inc
jmp
lds
lret
sub
cwtl
push
push
jmp
mov
dec
push
add
pop
pop
call
inc
imul
sahf
pop
push
mov
jle
pop
addr16
mov
out
negb
leave
mov
dec
inc
insb
pop
fisttpll
enter
mov
mov
add
pop
test
sbb
andb
mov
sahf
adc
sahf
je
stos
nop
mov
leave
fadds
dec
inc
pop
insl
fiadds
jl
je
nop
push
sub
sahf
pop
imul
push
xchg
jmp
dec
fildl
mov
inc
pop
inc
scas
imul
push
mov
jne
stos
add
xchg
inc
jle
pop
fdivl
shlb
fs
pop
or
sub
mov
push
daa
push
adc
adc
and
loop
sbb
adc
lock
insl
push
sub
fildll
enter
insl
jle
xor
mov
mov
pop
dec
popa
xor
jp
out
dec
testl
das
sbb
test
call
push
mov
jnp
adc
lods
add
sbb
xor
mov
sub
jo
jns
jge
pop
addr16
movsb
mov
es
sbb
popa
adc
pushf
in
stos
inc
int3
push
cmc
mov
xchg
call
adc
sbb
push
mov
sti
add
imul
xchg
dec
gs
pop
ret
lods
sbb
jecxz
xlat
fsubs
je
jecxz
ficoml
adc
xor
popf
xor
mov
add
fdivs
mov
push
push
out
dec
cmp
cmp
fsts
scas
mov
clc
ret
pop
pop
xchg
add
in
lea
dec
jb
ljmp
add
aas
add
ja
jnp
stos
mov
jg
pop
mov
pop
dec
pop
xor
rclb
outsl
xor
inc
and
adc
sbb
cmp
rolb
sbb
and
int
inc
xchg
ds
enter
mov
rcll
cmc
jbe
mov
jp
xchg
xchg
dec
cmc
insb
sbb
test
pop
inc
aad
jg
jle
pop
sahf
mov
lcall
or
mov
rolb
mov
sub
jo
in
inc
ds
adc
fbld
fisubrl
inc
xchg
jmp
xchg
fprem1
inc
inc
cmp
int3
jbe
xor
mov
lods
nop
nop
pushf
hlt
xchg
and
mov
cmc
rorl
push
adc
shl
call
adc
fisubl
push
mov
fisttpl
out
inc
cmp
fbstp
xor
pop
add
sbb
pop
xlat
scas
jp
pop
icebp
inc
test
fists
xor
mov
adc
inc
xchg
sti
mov
adc
repnz
push
cmpsb
into
push
pop
push
and
stos
int
das
dec
mov
and
xor
sbb
pop
int3
loop
fwait
les
cmp
adcb
xchg
add
jle
adc
aam
cs
mov
lret
add
xchg
mov
mov
addr16
cmpsb
mul
xchg
add
jl
ficoml
mov
pushf
mov
arpl
xchg
sbb
test
lds
popf
fs
aam
mov
ret
insl
push
lock
fwait
jo
push
xor
inc
xchg
pop
repz
out
push
bound
xor
push
stos
sti
gs
mov
or
sub
pop
lahf
leave
xor
mov
mov
sar
das
popf
jnp
sub
xchg
and
dec
inc
pop
sbb
mov
cmp
xchg
out
jnp
cli
movsl
fidivrs
push
pop
dec
sbb
add
add
dec
jp
xchg
or
movsb
add
nop
dec
popa
mov
sub
xchg
ret
xor
int3
sub
jnp
mov
jmp
pop
leave
push
aam
cmp
push
sbb
fidivl
mov
push
mov
jnp
cltd
xchg
cmp
mov
out
test
movsl
stos
icebp
pushf
orb
sbb
pop
or
push
sub
cmpsb
add
stc
push
loope
adc
mov
fdivr
xchg
loopne
add
mov
jge
pop
mov
jl
out
aam
xchg
lret
cld
or
aad
mov
popa
add
or
fcoms
mov
mov
pop
xor
lea
dec
push
pop
das
mov
jge
roll
pop
mov
mov
rcr
and
mov
pop
in
inc
mov
js
fidivl
cld
lea
das
icebp
dec
aad
sahf
push
jns
jle
jl
mov
adc
pop
add
xchg
cmpsb
test
mov
fdivrs
mul
aaa
mov
loop
insl
test
xor
sub
loope
lahf
sbb
fadds
inc
aad
imul
push
cmp
sarb
push
mov
cmp
enter
pop
test
jnp
lret
mov
and
pop
lea
shll
dec
aam
and
negl
loop
lret
add
dec
scas
push
cmp
push
push
push
sbb
test
int3
mov
mov
and
adc
ds
out
fsubs
dec
daa
cwtl
inc
jecxz
mov
xchg
repz
icebp
xchg
push
push
lock
mov
sahf
jge
xchg
aam
xor
out
in
pop
xchg
into
lcall
clc
fnstenv
stos
vdivsd
adc
arpl
mov
cmp
push
sbbl
aam
rorl
mov
adc
stos
dec
or
mov
daa
or
in
inc
mov
fsubrl
mov
push
call
divl
fwait
ss
imul
push
cmpsb
pop
jp
jp
mov
mov
mov
fcomps
cmp
xor
mov
rcrl
aas
stos
mov
cmovae
dec
mov
jno
pop
int3
sub
rcl
in
inc
sbb
imul
xor
clc
push
push
jae
cmp
outsb
push
push
nop
idiv
testb
repnz
lahf
loope
push
call
jo
push
and
sub
cltd
out
sub
mov
push
dec
xchg
cmpsb
inc
shll
rorb
push
or
imul
xchg
fsubr
cmp
mov
jp
xchg
or
dec
cmp
daa
push
add
push
cmp
movsl
aas
cmpsb
and
push
add
iret
inc
push
pop
mov
popf
lret
js
sbb
lock
sub
es
mov
in
int
mov
mov
ljmp
add
inc
mov
js
push
les
and
ja
repnz
out
jns
hlt
gs
jbe
sti
test
or
push
pop
idiv
sub
and
and
movsl
push
in
add
adc
dec
dec
rcr
and
push
push
iret
push
mov
fwait
add
arpl
fildll
out
xor
fadd
into
cmpsl
daa
rorb
ret
mov
aam
add
out
xchg
out
jl
add
xor
mov
inc
dec
or
jnp
push
rcrl
loopne
loope
dec
lret
pop
popa
and
sub
cltd
inc
in
ds
mov
lcall
pop
pop
popf
ljmp
push
mov
jp
add
pop
inc
out
sub
mov
and
loopne
xor
xor
cld
cmpsl
out
in
cwtl
mov
push
iret
pop
mov
call
cmp
fsubr
pop
sub
dec
mov
pusha
js
add
subl
lds
aas
sbb
dec
inc
mov
push
pushf
aas
sbb
cwtl
push
out
sbb
ljmp
jbe
in
xchg
mov
subb
popa
out
jge
mov
test
adc
push
lods
cmp
orl
fwait
add
iret
and
and
mov
push
popa
adc
clc
push
sbb
sbb
cs
out
cmpsb
xor
push
gs
popf
xchg
test
push
movsl
outsb
fldcw
add
pop
cmp
fdivrl
cld
lahf
push
or
push
into
inc
xchg
mov
les
icebp
push
test
mov
int3
or
cmc
loopne
xchg
cmp
mull
mov
rolb
inc
inc
sysenter
cld
lods
pop
cmp
clc
shll
adc
flds
aam
test
sbb
aaa
ret
ret
outsl
lcall
jl
fidivrl
divl
test
or
adc
shl
and
out
aaa
mov
in
les
cmp
idiv
into
push
mov
lea
jae
and
cmp
test
in
cmpsb
sbb
mov
jo
inc
cmpsb
leave
mov
adc
fdiv
cwtl
repz
cmpsl
mov
pop
mov
insb
push
cmp
xchg
pop
mov
jg
mov
cmc
add
cwtl
lods
movsb
out
inc
fcmove
icebp
aad
inc
lock
fcmovu
nop
mov
sti
inc
add
dec
imul
in
mov
cmp
dec
daa
gs
jl
xchg
jnp
push
add
xchg
addr16
jmp
orl
cmc
inc
pop
add
jbe
rol
nop
or
cmpsb
and
inc
mov
subl
or
int
movsl
arpl
xchg
int3
inc
cs
mov
mov
call
lods
fstpl
cli
inc
stc
out
push
xchg
gs
nop
lea
lds
push
lods
into
clc
loope
call
mov
into
shlb
loopne
push
jg
pop
dec
push
jae
jge
or
add
xchg
xchg
or
enter
adc
inc
stos
mov
cltd
rcrb
dec
pop
push
inc
xchg
sti
jmp
icebp
clc
and
ds
jns
les
inc
daa
leave
ficomps
and
push
mov
push
arpl
out
aad
pop
and
adc
fs
aaa
xchg
mov
es
insl
int3
pop
sbb
out
cltd
aam
cli
push
test
mov
inc
or
push
js
fidivs
sbb
and
repnz
scas
out
ds
sbb
fsubl
jmp
mov
mov
das
sbb
mov
mov
xchg
dec
add
lcall
imul
insl
adc
aaa
lret
jle
mov
jmp
rorl
daa
cwtl
and
movsl
sarl
popa
fisttpl
cmp
dec
into
adc
stc
or
fs
pop
or
dec
ja
push
ficomps
mov
outsl
push
outsl
int3
mov
inc
dec
inc
fs
cmpsb
imul
lock
cmpb
shl
dec
pop
push
dec
jne
loope
jo
cli
rorb
psrlq
pushf
leave
test
and
out
lods
cmp
or
cmp
xor
jl
mov
sub
mov
jb
xchg
inc
popf
les
cmp
icebp
ljmp
sub
pop
out
xchg
ljmp
jbe
cmpsb
sbb
xchg
sub
mov
out
lret
cmpsb
popa
sub
in
add
lock
cmp
mov
orb
cwtl
inc
lret
cltd
adc
cmp
fistpl
loope
scas
outsb
dec
push
jle
cmp
cmp
stos
dec
imul
add
mov
mov
lea
repnz
cmc
or
mov
mov
push
push
lcall
sti
fstpt
add
roll
insb
jp
sbb
out
lret
fnsave
mov
xchg
rcrl
sbb
sbb
ja
pop
in
mov
loopne
in
cmp
or
bound
mov
repz
leave
pop
sbb
xor
mov
mov
dec
dec
dec
dec
dec
daa
add
mov
shlb
test
xchg
push
scas
and
aam
mov
or
jno
fwait
push
mov
hlt
inc
jg
sarb
mov
decb
jecxz
mov
fcmovu
or
inc
mov
push
bound
imul
dec
xchg
sti
jno
push
sbb
cmc
mov
nop
jmp
dec
sbb
pop
jl
arpl
loopne
inc
and
pop
lea
push
ds
fisttpll
add
xchg
leave
cwtl
test
into
sbb
xor
je
addr16
mov
mov
jecxz
int
or
aaa
push
into
data16
add
add
xchg
or
pop
aaa
sbb
mov
mov
fisubl
mov
subb
inc
lds
addr16
idivl
loopne
das
push
cmpsl
rorl
adc
push
jo
dec
push
or
daa
adc
jl
jbe
mov
pop
lret
divl
ljmp
add
stos
imul
xchg
jo
mov
xor
pop
jns
repz
icebp
mov
ss
fsubrs
addr16
mov
lcall
cld
popa
or
mov
movsb
lahf
ss
xor
popa
imul
fsub
iret
xor
cmpsl
gs
imul
xchg
pusha
add
mov
filds
int3
mov
jae
cli
xor
mov
inc
pusha
pusha
add
pop
enter
repz
insb
inc
dec
aaa
sub
pop
xchg
fildl
fwait
insl
aad
jo
push
push
mov
lods
sub
sub
or
sbbb
sti
jb
xchg
dec
cwtl
dec
jmp
mov
dec
dec
shrl
mov
cli
ret
or
std
xor
fwait
rcl
xchg
and
shl
ja
cmc
pop
mov
or
pop
xchg
mov
jmp
jle
fldl
xchg
mov
add
ret
add
popa
addr16
es
push
movsl
mov
mov
out
jp
xchg
cs
ljmp
add
or
mov
sub
pop
cli
xsha1
cmpsb
dec
into
in
and
call
test
popf
daa
xchg
es
ss
pop
bound
xchg
cltd
push
xchg
push
push
jl
pusha
xchg
mov
xor
cmp
dec
repz
shl
push
icebp
sbb
lods
xor
sub
js
scas
mov
push
fstl
inc
es
fdivs
out
ja
lret
fistpl
ret
negb
inc
pop
push
add
xor
popf
add
jo
xchg
adc
pop
pusha
rol
inc
inc
sbb
adc
scas
lock
jns
mov
inc
sbb
test
stc
jl
inc
bound
testb
push
xchg
arpl
stc
stos
enter
push
aaa
in
fsubrs
bound
mov
into
repnz
clc
push
adc
cmc
rcl
and
or
add
push
mov
jne
scas
nop
mov
setl
test
ljmp
inc
push
mov
push
andb
sahf
add
addr16
add
sbb
dec
fisttpll
xchg
mov
sub
jg
pop
mov
fldcw
or
mov
adc
jge
call
aas
ds
lret
leave
cmp
repnz
jns
popa
jb
aam
jge
int3
adc
mov
enter
inc
clc
cmpsl
pushf
std
sbb
cmp
outsl
xor
imul
dec
dec
push
popf
and
xor
inc
sbb
mov
jg
in
pushf
mov
xrelease
in
cmp
leave
mov
push
or
cmpsb
ret
repnz
lods
shlb
sarb
inc
aaa
outsl
in
dec
fsubl
and
sub
mov
mov
sub
mov
incb
push
mov
rcll
xchg
or
lcall
ret
and
addl
std
icebp
mov
sbb
ljmp
mov
gs
outsl
xor
bnd
jbe
cld
cmp
test
test
int
mov
sub
addl
fidivl
mov
rcr
jno
adc
ds
pusha
nop
notl
lea
and
jle
lret
push
imul
pushf
addr16
bound
lret
xchg
mov
lahf
sub
xchg
adc
ret
in
imul
push
sub
jecxz
lcall
in
imul
dec
pop
push
jae
push
add
push
fwait
dec
dec
data16
push
cmp
mov
into
sbb
ror
mov
js
lea
fildl
pop
pop
pop
xchg
jnp
leave
xchg
sub
push
xchg
pop
jg
jp
fldt
pop
pop
scas
popf
outsb
cli
or
cmp
adc
and
iret
jecxz
fisttps
in
dec
dec
int3
ret
xor
mov
nop
stos
ret
out
lahf
ret
hlt
sbb
aas
fs
mov
lea
outsl
adc
orl
cltd
jge
jne
loope
cmpsb
roll
lcall
and
pop
push
xchg
in
mov
pop
mov
cli
xchg
lahf
mov
pusha
dec
daa
xor
mov
scas
add
lahf
jo
mov
xor
out
fwait
mov
inc
dec
sub
dec
lret
pop
in
push
ds
or
paddw
fcoml
xchg
dec
movsl
xor
adc
mov
dec
mov
lods
imul
add
jb
and
dec
pop
mov
add
rcrl
mov
movsl
inc
lock
popf
testl
cmp
ret
lock
sahf
testl
jb
scas
and
cmc
inc
cmp
mov
data16
lret
lret
cmpsb
mov
loopne
mov
sahf
loop
stos
sub
data16
sahf
movsb
pop
leave
push
or
sbb
xchg
in
and
or
dec
jne
cwtl
imul
jle
and
cmp
stc
xchg
sbb
sub
xchg
dec
sbb
lcall
lea
int
aaa
push
ds
loop
mov
push
mov
sub
dec
test
inc
adc
aad
push
dec
sbb
pop
movsl
sub
shll
add
leave
fwait
cmc
xor
xchg
mov
push
mov
test
cmp
sbb
arpl
jmp
mov
mov
popa
inc
adc
iret
jbe
push
insb
mov
inc
lods
repnz
aas
test
push
loope
ror
gs
fstps
adc
jnp
test
jo
cwtl
pop
mov
lcall
inc
lods
in
cmp
push
pop
fstl
aas
pop
hlt
mov
pop
clc
jmp
mov
daa
inc
pop
pop
sbb
push
mov
shrb
mov
dec
xchg
ds
cwtl
out
fists
loope
std
xor
add
xlat
popf
call
and
lret
gs
push
xchg
lea
mov
mov
test
aas
cmp
jl
add
ret
jmp
ja
in
fnclex
aas
pop
cmp
add
jecxz
and
mov
stos
push
pop
pop
and
cmp
and
in
pop
xchg
cmp
jge
fnstcw
gs
inc
out
cmp
andb
enter
gs
push
iret
imul
aad
dec
jle
cmc
ror
nop
gs
out
mov
popa
pop
ja
sbb
xchg
mov
fldt
and
push
or
pop
daa
or
cmp
xchg
pop
and
mov
or
scas
imul
cmp
xor
sbb
in
push
stos
js
xchg
jo
iret
jmp
mov
faddl
cltd
and
scas
mov
or
int3
test
lods
cld
adc
xor
mov
out
and
sub
sub
sti
cli
cmc
sahf
sub
js
pop
adc
addr16
push
adc
jp
cmp
add
inc
inc
or
mov
es
sti
dec
lock
test
arpl
push
mov
push
cmc
out
jmp
nop
push
mov
mov
xchg
sbb
mov
in
stos
je
fidivs
iret
lret
sti
mov
xchg
in
in
call
rorb
ds
adc
sbb
les
xorw
ljmp
loopne
mov
push
pop
pop
jmp
movsb
stos
add
jno
stos
lret
out
jnp
outsb
fisttpl
icebp
shlb
lcall
push
sbb
repz
dec
or
ret
fsubs
mov
mov
out
js
push
dec
dec
jmp
mov
sbb
xchg
test
pop
lods
cli
jnp
sbb
cmc
cltd
push
call
ss
push
and
push
add
xor
rol
fldt
shlb
or
adc
scas
movsb
mov
std
cld
fildl
lret
fsubl
je
shrl
lods
aad
mov
inc
xchg
test
and
sbb
fnstenv
enter
cmp
push
xchg
sti
ss
xor
push
jg
mov
loop
pop
mov
daa
aam
cmp
push
iret
mov
cmp
jmp
mov
pop
scas
mov
andl
int
arpl
js
inc
pop
dec
sbb
cmpsb
add
leave
gs
popf
in
rcl
lret
xor
sbb
lock
sub
int
adc
pop
mov
adc
jnp
xchg
inc
and
je
pop
add
and
fidivrs
insl
xchg
xchg
scas
pop
add
dec
mov
std
adc
cmp
test
shl
aaa
push
insl
ja
xor
xorb
xor
popf
sbb
insb
or
or
gs
scas
and
mov
mov
xchg
mov
ret
add
ljmp
lahf
fists
in
stc
xchg
or
lea
lods
inc
test
stos
cmc
pop
stos
ss
repnz
add
sub
dec
lcall
dec
in
leave
imul
mov
cltd
jae
sbb
dec
data16
in
call
cmp
jb
stos
outsb
push
add
inc
push
mov
icebp
testl
cmp
bound
in
push
inc
xorb
sub
xor
mov
outsb
sbb
mov
mov
add
enter
aas
push
orl
rorl
xlat
sub
jnp
adc
push
push
jmp
inc
and
pop
jb
jbe
cld
cmp
jns
pop
add
pop
inc
sbb
dec
dec
mov
sub
dec
call
lret
je
jmp
sub
xchg
pop
cwtl
and
or
mov
jnp
jbe
ds
add
xor
dec
sbb
enter
cli
mov
push
adc
dec
cmc
sbb
lock
loope
cmp
leave
pop
fsubs
clc
cmp
icebp
jbe
or
fwait
test
sbb
sbb
mov
xor
mov
xchg
xor
test
xorl
jmp
mov
out
inc
dec
xlat
inc
int
popa
jb
xchg
ss
iret
xor
adc
mov
push
mov
or
scas
mov
add
loopne,pt
jnp
and
mov
and
xor
dec
cld
jecxz
push
sbb
sbb
push
jnp
cli
cmc
int
push
mov
aam
xlat
stos
nop
iret
push
adc
sub
icebp
xor
dec
dec
xchg
movsl
dec
jmp
adc
orl
jge
xor
movsb
shl
jp
fs
mov
leave
fstpl
adc
icebp
gs
mov
mov
imul
lock
inc
sarb
pop
int
and
jl
arpl
push
jns
cmpsl
push
enter
out
jg
outsb
mov
sbb
lcall
mov
movsl
insl
and
out
xor
xchg
mov
sub
pop
aas
bound
mov
push
xchg
ret
imul
mov
cwtl
fs
mov
mov
insl
insb
xor
inc
mov
push
stos
sbb
sbb
cltd
sbb
inc
lret
add
fadds
mov
or
daa
sbb
push
out
sub
incl
fistl
cs
xchg
jbe
enter
aaa
leave
lods
repz
les
pop
adc
xchg
inc
mov
js
cmp
mov
cmc
aam
repz
in
out
arpl
je
xchg
pop
push
dec
lds
scas
push
sbb
mov
xor
aad
mov
decl
push
xor
sbb
stos
lea
mov
cmp
int3
in
mov
aas
es
je
pop
shlb
inc
loop
lods
adcl
xchg
mov
xchg
test
loope
icebp
push
rorl
mov
xchg
in
popf
adc
repz
mov
rcll
inc
mov
xchg
cli
cmp
stos
or
dec
adc
xor
jae
js
push
les
enter
sarb
or
push
insl
lgs
scas
cmp
sub
cmp
dec
mov
test
xor
hlt
mov
fs
jle
sbb
mov
in
jmp
xor
lahf
dec
mov
imul
scas
outsb
ret
in
jns
inc
arpl
aad
js
data16
jo
push
sahf
xchg
mov
cmc
mov
jecxz
in
push
shll
jns
les
sbbb
add
sbbl
and
aam
xchg
fs
sub
mov
call
inc
cmpsb
arpl
mov
inc
pop
bound
xchg
push
cmpsl
inc
jmp
dec
ss
outsl
js
mov
lea
outsb
insl
mov
cmp
mov
mov
in
mov
daa
dec
mov
inc
push
loop
fs
cmp
jnp
movsl
daa
test
and
aas
pop
cmpsb
lcall
mov
xlat
xor
mov
mov
sub
push
inc
xchg
inc
es
jl
cmpsl
and
nop
out
fiadds
addr16
or
std
outsl
and
mulb
mov
jne
into
pushf
sbb
sbb
mov
call
jnp
jns
rcll
scas
push
lods
ss
in
mov
out
add
clc
mov
mov
push
mov
adc
cmp
sbb
fldl
cs
cmpsl
test
fnsave
lea
outsb
jbe
mov
push
pop
dec
jbe
add
or
stc
das
or
rorb
xor
cmpl
inc
and
dec
push
adc
jns
jmp
mov
lcall
cltd
push
push
daa
or
jg
fcoml
or
bound
icebp
pop
add
push
into
xchg
and
adc
hlt
mov
inc
xchg
cmp
sub
rolb
bound
lds
js
xor
mov
cmp
call
addr16
pop
add
roll
jnp
dec
mov
outsl
gs
mov
imul
jecxz
sub
insl
push
or
add
adc
or
jne
ja
mov
lret
or
fcoms
lock
sbb
pminsw
rcr
adc
inc
mov
psubw
das
push
push
and
lods
mov
sbb
mov
mov
adc
cli
jge
pop
pop
mov
mov
enter
cs
sub
jns
adc
nop
mov
into
xchg
inc
cmpsb
sub
jmp
add
lea
push
cli
pusha
pop
les
filds
mov
inc
cmp
call
in
repnz
int3
add
lds
cltd
pusha
fdivrl
and
push
bndldx
mov
arpl
addb
es
jnp
cmp
inc
jo
sub
ja
enter
mov
outsb
hlt
pop
xchg
mov
mov
outsb
cmp
stos
scas
loopne
sarb
fsubs
sahf
adc
sbb
dec
rclb
add
fdivp
cwtl
mov
xchg
jb
mov
int
inc
pop
lods
mov
fists
mov
jo
push
mov
or
cmp
lea
or
imul
jmp
cld
mov
stos
sub
cmp
aas
jno
bound
or
mov
clc
aad
or
imul
xchg
pop
or
xor
ss
stos
inc
jl
fsubs
gs
xchg
add
std
aad
adc
adc
mov
mov
call
cwtl
movsb
sbb
mov
and
sbb
sarb
and
or
out
cmp
push
aad
movsl
in
jb
mov
pop
pop
adc
mov
popf
std
sub
pushl
lahf
mov
mov
mov
outsl
popa
das
xchg
call
scas
push
test
subb
mov
pop
ja
test
cmp
outsb
mov
sbb
mov
shl
add
push
ljmp
sub
pop
or
rcl
mov
xchg
mov
mov
push
mov
xchg
jmp
insb
or
push
pop
jno
icebp
outsl
mov
push
pop
bound
push
shrl
pushf
arpl
stos
cmp
xlat
push
push
insb
jno
push
mov
cmc
inc
inc
pop
outsl
mov
rolb
mov
mov
mov
dec
js
inc
pop
sti
loope,pt
in
fiaddl
cli
push
lods
popa
popf
inc
and
pop
sar
adc
fwait
push
clc
jmp
and
js
fs
lea
cli
cmp
imul
mov
sbb
sub
cld
jg
jb
mov
sub
pusha
mov
subl
data16
cs
shrl
add
adc
push
push
jmp
mov
jae
jge
repnz
dec
data16
lcall
data16
or
inc
cmpsl
stc
dec
out
inc
mov
xorl
xchg
stc
pushf
inc
xchg
in
mov
sbb
cmp
fldenv
xor
stos
add
sub
bound
cli
mov
push
pop
inc
or
cmc
sub
and
sub
mov
push
arpl
daa
sub
outsb
dec
inc
jno
lods
adc
adc
adc
gs
jnp
cltd
ja
cmc
inc
shlb
mov
testl
jo
ss
jmp
adc
pop
and
rcrb
ret
scas
or
stos
out
mov
sub
call
mov
adc
cmpl
sub
dec
test
mov
lcall
dec
fwait
push
aas
xor
mov
pusha
jle
icebp
or
push
in
sti
cmp
push
sub
pop
jp
jmp
jne
add
and
cli
movsl
pop
stos
mov
mov
xchg
inc
cmpsl
xor
aad
sbb
in
jbe
sub
int
test
inc
ds
imul
insl
add
pop
push
push
loopne
arpl
sbb
ds
inc
sbb
jno
in
jo
les
ja
inc
mov
jno
fstpl
pop
add
and
sbbl
into
in
push
cmp
and
dec
inc
inc
pusha
mov
fiadds
imul
or
add
add
jbe
rclb
lcall
ljmp
into
sarl
in
fstpl
or
lahf
sbb
xlat
cltd
cmp
jge
jp
dec
inc
icebp
imull
pop
dec
popf
jmp
out
xor
fcmove
xchg
and
jmp
and
test
jge
shl
and
insb
inc
xor
mov
outsb
push
jmp
xchg
sub
outsl
vmread
sub
in
pop
cmp
xchg
inc
xchg
mov
or
in
fists
jge
sbb
test
aad
adc
int
mov
cmp
inc
xchg
xor
paddq
fnstsw
daa
sub
roll
ljmp
cmp
mov
sub
or
rol
jbe
lcall
cmp
aaa
sbb
cmp
cs
pop
jno
adc
test
and
shll
xchg
jge
xor
push
pop
enter
dec
clc
sub
sbbl
or
mov
adc
pop
sub
push
jge
testl
xchg
mov
stos
test
rcll
pop
add
cltd
or
mov
sbb
ss
jb
iret
jg,pn
sahf
cmp
clc
repnz
shll
cmp
jns
add
daa
jge
mov
inc
rorl
lret
mov
xchg
div
and
push
lret
or
push
jbe
test
jb
inc
pop
mov
adc
cwtl
and
or
mov
dec
jo
jae
jb
pushf
mov
xlat
insl
pushf
leave
and
mov
sub
adc
nop
pop
outsl
xchg
inc
clc
pushf
lds
mov
lea
and
adc
xchg
int3
clc
rclb
in
dec
mov
test
jp
dec
mov
mov
je
enter
dec
movsl
outsl
fwait
aad
ja
sub
xchg
and
movsl
or
xor
aaa
stos
lahf
mov
adc
jmp
cmpsl
inc
xor
adc
mov
in
es
pushf
loop
enter
mov
js
push
jmp
stos
cmovg
jae
scas
imull
enter
imul
xor
push
xchg
stos
cs
jmp
jno
xor
cmpsl
inc
dec
xor
fcompl
imul
jno
je
jnp
pushf
add
xchg
aam
cmp
add
daa
ja
jge
es
inc
ret
cmp
lahf
push
stos
pop
sub
dec
xor
sub
adc
sub
cmpsl
add
test
add
repz
in
mov
or
push
push
call
repnz
aas
push
adc
test
ja
push
shl
ja
sub
flds
mov
dec
leave
mov
push
mov
sub
fcmovnu
or
xor
push
xchg
clc
mov
add
pop
ss
or
push
mov
cmp
sahf
and
pop
insl
sti
pop
andb
idivb
mov
dec
test
xchg
bound
mov
sti
mov
and
daa
sub
mov
call
mov
les
pop
ljmp
mov
and
dec
stc
jbe
xor
int
dec
fidivrl
push
loope
cmpsb
xor
shl
in
pop
jne
jno
insb
mov
in
shrb
std
push
es
xchg
js
lock
test
push
mov
lcall
pop
aam
outsb
cltd
lret
jl
mov
cmp
lret
lds
and
dec
jp,pt
xchg
scas
stos
push
xor
add
xor
lods
cmp
lods
loopne
sbb
cmpsb
mov
shlb
aaa
jb
inc
jo
lcall
pop
adc
cmpsl
inc
and
push
mov
mov
mov
fdivs
test
inc
push
mov
hlt
out
push
sub
outsb
xchg
jnp
push
fsts
loope
out
dec
mov
mov
test
addb
mov
adc
dec
pop
push
insl
push
pop
pop
js
and
push
jbe
dec
sub
cmp
scas
call
push
loop
gs
bound
call
in
loopne
mov
dec
cmp
lods
cli
mov
mov
push
sbb
lret
xor
jns
and
sbb
icebp
adc
int
mov
pop
and
rcl
movsb
mov
sbb
adc
jl
or
fsts
loopne
testl
xchg
push
mov
lea
dec
cld
icebp
add
pop
into
mov
mov
lret
call
mov
lds
mov
inc
stos
xchg
xchg
or
scas
aas
pop
xchg
orb
negl
mov
int3
push
mov
inc
xor
js
adc
push
and
imul
cld
mov
mov
lods
jne
and
or
stos
xchg
mov
pop
fstps
daa
leave
arpl
fs
in
cmp
aaa
flds
iret
mov
scas
push
xor
sbb
stos
in
jl
xchg
jl
out
lahf
pop
daa
sub
or
xchg
push
push
jmp
adc
sar
stos
shll
inc
lods
into
arpl
insl
adc
xchg
push
insl
lahf
call
popl
dec
pop
or
add
dec
cmp
sub
xor
mov
loope
push
shrl
es
xchg
out
add
sub
sub
sub
jmp
jp
dec
mov
and
jo
divb
xor
add
scas
push
pop
lcall
aaa
loop
cmp
adc
cmp
negb
adc
sub
inc
inc
push
jge
dec
dec
jns
cltd
ja
iret
lret
rolb
mulb
out
sarb
cmp
das
xor
push
mov
mov
pop
test
push
dec
or
push
js
jbe
lods
adcl
push
pop
imul
hlt
cltd
adc
pop
adc
adc
xlat
cmp
daa
push
sub
inc
jmp
les
fs
mov
outsl
add
add
dec
outsl
sub
iret
imul
lds
jmp
jno
mov
loope
and
lods
stos
adc
cs
inc
in
ret
test
pop
jp
movsb
arpl
sbb
jp
xchg
ss
mov
dec
jl
loope
out
add
xchg
icebp
dec
popl
fcmovnu
sbb
dec
inc
cmp
mov
jmp
imul
sub
mov
roll
jecxz
cmc
cltd
and
mov
call
push
les
adc
les
in
and
cli
adc
arpl
ljmp
aam
jb
cld
adc
sti
push
or
push
std
mov
lret
sbbb
dec
adc
lods
adc
push
dec
mov
outsl
xchg
cmp
mov
xor
xorb
cld
sbb
sahf
cmp
movsl
sub
sub
jle
arpl
aaa
aad
addb
jge
jb
inc
pop
push
pop
lea
fwait
add
addr16
sub
jl
cmp
out
sub
ficoms
daa
add
jp
jmp
cld
push
in
nop
inc
lea
inc
rcrb
ds
test
daa
pop
sbb
loopne
psubsw
mov
dec
pushf
lds
pop
push
sti
jne
xchg
cmp
loope
inc
clc
je
cmp
stc
repz
aad
cmp
repnz
mov
add
into
xchg
aas
mov
cmpl
lret
add
shlb
scas
mov
inc
hlt
cmpsb
sbb
pushf
mov
mov
xchg
adc
pop
lds
aam
jp
insb
insb
ja
mov
sbb
faddp
inc
mov
xlat
mov
push
neg
pop
stos
mov
rcll
cmpsl
sub
xchg
adc
stc
and
xor
das
es
inc
pop
lahf
jle
add
movsl
xor
jle
and
ficoml
cmpsb
cwtl
mov
ret
inc
xchg
mov
js
lahf
inc
jge
orl
add
movsl
lcall
std
jne
and
adc
aas
sub
dec
mov
cwtl
cmp
or
cld
pop
push
and
je
mov
mov
xor
add
loope
push
cmp
mov
bound
jge
jle
mov
lret
stos
push
lret
lods
push
push
subl
xor
in
xchg
inc
pushf
hlt
fbstp
jp
jne
je
faddl
mov
mov
push
xchg
pop
call
arpl
mov
xor
arpl
jmp
fisttpll
jns
lds
out
xchg
mov
sub
insb
or
push
mov
or
and
mov
insl
pop
cltd
popf
imul
cmp
xchg
or
fwait
mull
mov
adc
lea
jb
jbe
cmp
in
sahf
add
pop
int
xchg
mov
out
imul
mov
mov
ret
rclb
adc
mov
mov
cltd
adc
stos
int
add
icebp
sub
xchg
cltd
push
stc
lea
sbb
ret
lcall
icebp
sub
inc
gs
xchg
ss
ror
sub
xchg
push
jecxz
mov
repz
fisttpl
rorb
push
xor
lahf
xchg
inc
mov
sbb
roll
adc
xor
push
pop
inc
je
jmp
insb
cmpsb
out
cmp
imul
pushf
out
lock
sbb
dec
and
leave
push
xor
aad
inc
mov
or
adc
pop
and
test
mov
jno
shr
ret
scas
add
in
mov
adc
adc
fdivrs
imul
xor
aad
test
jl
fwait
pop
push
lock
clc
orb
xor
sbb
mov
insb
hlt
pop
nop
push
push
dec
sbb
mov
cmp
fsubr
cmp
cmp
push
mov
test
and
out
cmp
imull
sub
or
rsm
mov
out
xchg
test
push
inc
pop
in
cld
pop
imul
jnp
inc
div
sbb
xchg
lods
das
cwtl
jge
mov
call
shlb
mov
ja
xchg
in
jb
lret
mov
adc
or
sub
pop
push
insl
mov
and
in
rorl
pop
pop
sub
jae
cli
imul
unpckhps
mov
cmpsl
fxch
pop
test
sub
cmp
jae
fcmovbe
adc
or
or
test
testl
sbb
imul
shll
outsb
in
or
sahf
movsl
xchg
rcll
push
add
adc
call
cmp
fadd
sub
push
jns
and
ss
lds
mov
xchg
cmp
and
and
loop
dec
adc
mov
fidivrs
cwtl
outsl
dec
sub
cmp
sbb
cmovs
add
mov
dec
xlat
and
mov
fidivrs
xchg
cwtl
bound
mov
in
sahf
fs
popf
movsb
outsb
jmp
xchg
add
testl
enter
lcall
cmp
or
mov
jne
or
lret
out
das
movsb
lods
ds
pusha
arpl
sbb
shll
xchg
andb
imul
imul
lock
mov
inc
dec
orl
jle
jo
stos
outsl
es
cmp
mov
test
push
sub
adc
xchg
sbb
aad
test
fidivrl
cmpsl
push
aam
insl
mov
sub
xchg
inc
andb
out
arpl
dec
fsubrp
jg
and
mov
xor
mov
xchg
pop
lret
loope
dec
sub
das
in
cmpsl
adc
arpl
mov
sbb
inc
bound
pusha
packsswb
push
js
xor
mov
aam
pop
pop
cmpsl
dec
xor
jae
sbb
pop
mov
andl
rclb
fcomps
test
dec
mov
jo
shrb
ret
push
sbb
pop
sti
sarl
add
xchg
xorb
stc
je
push
dec
jne
inc
pop
cwtl
iret
js
push
inc
movsb
push
xor
in
sbb
stos
inc
adc
jl
mov
test
adc
mov
in
xchg
mov
sub
dec
dec
cmc
int
push
dec
inc
out
or
mov
and
mov
cmpsb
or
sub
cmpsb
fldcw
std
lds
xchg
sub
push
dec
xor
movsl
sbb
cmp
clc
in
imul
aas
add
imul
adc
insb
mov
ret
mov
cmp
xchg
pop
scas
xchg
xor
icebp
xor
loopne
push
movsl
rorl
aas
jecxz
mov
fsubrs
leave
pushl
adc
jnp
inc
xchg
popf
or
ljmp
mov
add
sub
in
bound
ret
dec
mov
inc
push
fwait
sti
repnz
addr16
push
ss
pop
out
mov
sbb
inc
adc
dec
dec
aas
jne
inc
dec
lret
or
xlat
rcl
sahf
jns
mov
stos
lds
inc
arpl
xor
pop
in
inc
fdivs
les
in
add
mov
mov
dec
sti
out
mov
push
xlat
pushf
mov
sti
inc
testb
pop
hlt
xchg
mov
mov
test
dec
loopne
pop
movsl
insl
dec
repnz
bound
lods
insl
xor
lods
xor
xor
in
or
mov
decl
ja
lcall
and
cmpsl
fmull
pop
aam
xchg
pop
add
pop
dec
jno
roll
mov
mov
push
jle
or
ljmp
std
inc
add
jl
jp
test
mov
jl
mov
or
repnz
pop
ljmp
enter
mov
pop
mov
rorl
adc
cmc
in
je
leave
pop
hlt
pop
fs
ds
adc
cwtl
inc
mov
stc
test
in
clc
in
sbb
sbb
dec
push
out
out
mov
shl
jne
push
push
xorl
in
divb
mov
add
dec
pop
cltd
movsl
addr16
and
ljmp
pop
rorb
rcr
notb
jb
popa
loopne
or
out
cmp
sub
shll
sbb
sub
and
and
mov
sub
outsb
fsubs
push
test
dec
dec
lahf
cmpsl
insb
pop
xor
mov
jmp
cmp
mov
and
imull
mov
sub
into
ss
ds
sub
iret
in
fnstenv
xor
jo
movsb
xchg
cmp
ds
mov
std
or
pop
jo
xor
jb
sub
mov
sbb
sub
mov
scas
lcall
adc
xor
cmp
leave
mov
inc
xor
in
fidivrl
lock
pop
jb
ljmp
inc
lea
sbb
scas
or
loope
mov
bound
cmpsb
mov
hlt
jp
arpl
jns
aas
pop
lds
and
xchg
push
inc
mov
sub
test
arpl
jmp
shrb
push
mov
mov
jno
pop
mov
in
je
pushf
and
jmp
inc
pop
jg
je
sub
xor
jbe
arpl
iret
clc
js
xor
mov
inc
pushf
add
mov
dec
in
mov
sub
jge
xchg
push
lret
enter
inc
mov
mov
dec
pop
outsl
rol
mov
cwtl
push
xorl
ret
loope
lods
jne
push
inc
aam
dec
shll
mov
pop
cmpsl
jae
adc
jo
jle
add
or
clc
out
jg
pusha
js
gs
jo
pop
add
fsts
imulb
call
jno
or
mov
mov
inc
inc
shll
cmpsb
sub
aas
and
xlat
pop
clc
into
sub
ss
sub
jmp
dec
lcall
ficoml
rcll
jge
pop
mov
scas
mov
rol
into
loope
jb
inc
pop
sbb
sub
and
fnsave
mov
sub
dec
jbe
aad
dec
jl
cmp
push
xchg
and
movsb
sbb
jp
push
scas
jae
dec
sbb
ja
cmpsb
cmpsl
js
mul
scas
pop
cmp
mov
popl
out
int
mov
mov
not
fistpl
stos
sbb
aad
dec
in
xchg
movsl
inc
imul
xlat
movsl
imul
dec
icebp
jbe
xor
mov
popf
jo
and
xchg
inc
pusha
test
rorb
in
ror
inc
or
sbb
daa
xchg
in
jmp
lods
push
dec
out
jg
mov
cli
mov
mov
adc
or
bound
lds
jg
lahf
out
in
fnsave
jmp
sbb
repz
pop
iret
loope
sbb
lahf
iret
test
xor
mov
iret
pop
xchg
adc
repz
inc
add
test
jno
xor
and
pop
xor
out
imul
inc
popf
dec
push
out
adc
out
lods
pop
sub
cwtl
xor
es
xchg
repz
or
mov
push
sti
fidivrl
fildl
icebp
jne
jb
test
mov
xor
inc
loope
int
loop
dec
adc
push
xchg
sbb
lock
lea
flds
fistps
pop
push
lcall
mov
and
xchg
jecxz
fucom
jno
and
imul
out
call
add
jne
in
sub
pop
mov
jns
mov
into
enter
dec
cltd
lea
test
andb
mov
pop
push
jae
add
sti
pop
mov
sbb
fbld
out
popa
dec
test
pop
in
fwait
cmp
movsl
jno
inc
movsb
push
sbb
add
add
cmp
xor
and
daa
pop
or
jae
xchg
inc
nop
fwait
push
pop
xchg
fisubrs
or
int3
clc
cmpsl
inc
pop
mov
call
inc
lahf
lods
xchg
pop
dec
fwait
aaa
and
mov
cmp
fmuls
cmp
sahf
lods
jb
lods
imul
adc
imul
mov
jmp
jns
inc
mov
fldcw
push
out
xchg
mov
out
add
dec
stc
jmp
push
add
cli
imul
ret
jecxz
jno
mov
sbb
int
mov
icebp
jnp
imul
subb
dec
test
xchg
push
adc
add
jb
and
mov
es
int
add
dec
int3
iret
mov
and
pop
cmp
cmovne
dec
nop
mov
add
insl
ret
dec
out
ret
xchg
scas
fstps
cli
imull
lahf
int
mov
movsl
mov
lods
arpl
leave
frstor
or
cmpsl
or
fistps
adc
dec
dec
mov
jbe
hlt
pop
out
push
sub
or
notl
mov
cmp
ljmp
pop
pop
sbb
add
das
mov
inc
filds
push
in
nop
push
jno
mov
psubusw
ljmp
fldl
push
outsl
ss
add
imull
and
test
subb
vmwrite
mov
insb
inc
mov
test
lret
dec
inc
rcl
loope
inc
mov
ficoms
lret
sahf
and
mov
add
sub
movups
movsb
xor
sub
je
jo
and
js
jle
mov
xchg
cmp
fwait
pop
mov
aad
add
add
pop
mov
xor
adc
sbb
dec
scas
mov
sub
and
stc
lahf
movb
cmp
sub
outsb
push
mov
dec
repz
imul
add
xchg
ds
add
leave
addl
out
mov
xor
pop
jb
ljmp
daa
mov
jle
or
sub
js
or
xor
jae
xchg
push
daa
repnz
leave
push
mov
pop
mov
dec
mov
xchg
mov
xchg
dec
loopne
js
cmpsb
add
xor
cli
pop
jl
inc
push
dec
mov
inc
pop
inc
push
xchg
cmpsl
inc
pop
test
sti
jmp
lds
mov
pushf
pop
or
ret
xor
push
xchg
xor
and
loope
in
xchg
cltd
fstp
data16
loop
pop
fadd
cmp
push
sub
xorb
cmc
sbb
daa
cmp
mov
mov
push
arpl
xor
js
pushf
cmp
sbb
ja
xor
push
mov
push
pop
into
xor
call
mov
sti
andb
jnp
into
pop
xchg
pop
bound
outsl
xor
cmp
js
int
mov
outsl
out
ret
iret
push
daa
or
fdivrl
pop
cltd
ret
fimuls
call
mov
call
lcall
sbb
push
fisubl
jno
pushf
bswap
and
rolb
sarb
subl
cmpsb
pop
push
leave
cmp
jle
das
mov
testl
dec
push
mov
shll
rorl
cwtl
push
sarl
add
mov
pop
shlb
mov
pop
jne
adc
sbb
gs
sbb
jo
or
lock
xlat
test
adc
bound
push
negl
les
mov
cmc
popf
in
jp
fwait
arpl
mov
jp
hlt
and
ds
das
cmp
push
xor
pop
add
adc
mov
push
nop
adc
call
shr
mov
movsl
cmp
dec
push
and
xchg
dec
push
mov
sub
sti
mov
sbb
bound
pop
mov
mov
pop
push
aam
rolb
movsl
mov
aad
clc
push
sbb
sub
dec
and
and
cwtl
mov
add
jp
test
inc
in
cmpsb
push
movsb
xchg
cmp
bound
mov
xchg
sahf
stos
jg
add
cld
stos
jno
push
cmc
inc
ljmp
and
nop
cli
add
inc
jae
push
add
and
fwait
aad
ja
fsts
pminsw
hlt
mov
mov
jmp
adc
rclb
nop
pop
pop
icebp
mov
jno
lods
aas
jne
dec
mov
sbbb
lods
adc
push
jl
pop
pop
pop
stc
cltd
subl
mov
das
lds
fldl
ficoms
sti
mov
sbb
int
pop
jecxz
cmpl
aas
mov
out
inc
jmp
mov
inc
mov
inc
es
push
pusha
fwait
data16
add
in
add
or
cmp
fisubs
xchg
cmpsl
movsb
add
add
sbb
jb
jp
dec
inc
pop
xor
cld
test
aad
push
add
and
push
out
rorb
mov
sub
fs
and
mov
lods
ret
xor
inc
rorb
mov
xor
or
dec
push
or
add
cmp
lret
jno
pop
add
sub
jl
mov
mov
xor
aam
arpl
cmp
hlt
add
xchg
pop
adc
callw
outsl
xchg
xor
in
mov
xchg
ret
xor
jae
out
decl
fimull
sbb
out
mov
hlt
call
in
adc
imul
rolb
mov
mov
or
xor
pop
inc
fdivl
push
jne
mov
xorl
mov
push
enter
inc
sbb
cmp
mov
lods
xchg
mov
mov
out
jmp
into
outsl
cmp
inc
push
addb
insb
ret
dec
dec
data16
hlt
sub
popf
cmp
movl
loopne
addr16
fcoml
int
push
pop
cli
push
gs
daa
int3
jecxz
xor
out
sahf
add
mov
or
nop
jno
adc
xchg
or
aas
notl
inc
cld
frstor
pop
lds
cmc
xchg
xchg
pop
jbe
pushf
mov
push
popf
cs
stos
add
mov
lcall
xchg
je
clc
loopne
xchg
cmpsl
pusha
arpl
data16
dec
arpl
aam
xchg
rclb
notl
shrl
ret
jne
sub
pop
adc
leave
inc
xchg
pop
inc
pop
cmp
add
stos
lea
dec
push
lahf
aam
xor
jb
pop
cld
dec
xchg
jbe
rcrl
xorl
mov
je
mov
cs
int
lret
add
sub
popa
mov
xchg
fnstsw
or
inc
ss
rolb
and
scas
inc
fcoms
js
ja
sbb
loopne
sub
mov
push
pop
popf
xor
jecxz
fisubrl
shl
fstpl
sub
xor
js
repz
xchg
push
fnstcw
fdivr
push
sahf
adc
cmp
outsl
xor
std
push
xchg
mov
out
pop
cmp
adc
call
mov
ss
or
test
mov
jnp
lcall
dec
insb
test
aam
fsts
mov
in
sub
pop
xchg
push
mov
ror
mov
add
imul
ficompl
cld
lret
stos
mov
leave
adc
js
test
loop
xchg
mov
pop
test
adc
and
dec
mov
jp
addb
jae
js
inc
pop
in
mov
sarl
cmp
pop
test
mov
nop
jge
les
mov
push
fidivrs
mov
sub
or
mov
in
jg
and
psrlw
dec
aas
mov
loopne
cmp
mov
push
mov
adc
bound
addr16
add
outsb
mov
rolb
inc
out
loopne
sarb
shrl
push
mov
push
inc
out
lret
mov
jge
or
or
xchg
xlat
pop
movb
add
add
push
out
and
sub
addr16
inc
jmp
xchg
xor
mov
push
shlb
mov
jl
add
hlt
push
xchg
xchg
ficoms
sbb
jmp
out
dec
pop
dec
push
push
enter
outsl
adc
sbb
or
orb
inc
rcll
mov
aaa
or
and
lods
pop
iret
int3
xlat
int3
mov
fstps
push
push
sub
jae
test
lods
aad
adc
shrl
and
and
sarb
dec
cs
mov
jno
icebp
push
daa
jmp
jg
or
push
loop
and
jecxz
fistl
mov
and
cmc
mov
jp
and
pop
dec
and
inc
jecxz
push
mov
lea
aas
scas
ret
add
xor
mov
outsl
and
popf
push
popa
sub
push
adc
mov
or
xlat
int
mov
fisubrl
mov
aaa
jmp
data16
cli
or
mov
imul
push
imul
push
adc
sub
mov
jp
pop
or
adc
ret
les
mov
mov
add
mov
inc
cmpb
aaa
dec
shll
dec
mov
lock
fucomi
cmpsb
pop
lret
adc
push
daa
test
xor
lret
xlat
data16
cli
out
dec
in
in
inc
stos
jl
in
inc
imul
mov
and
sub
and
cmpsl
mov
or
je
mov
add
mov
lea
cmp
testb
inc
fnstcw
add
add
mov
call
out
int3
out
jbe
mov
icebp
adc
xor
add
pop
or
add
mov
jno
outsl
hlt
inc
mov
popf
bound
mov
sbb
popf
jmp
scas
rol
sahf
arpl
jl
aaa
cmpb
push
mov
mov
lahf
pushl
and
ljmp
loopne
mov
stos
pop
cmp
cmp
rorl
insl
fdivs
xor
in
cmp
pop
add
sbb
cmpsl
ss
cmpsl
xchg
pop
cmp
mov
test
movntps
loope
jg
cli
nop
leave
xchg
and
mov
or
adc
cmp
or
xor
aam
mov
sahf
cmp
fdivrl
int3
repnz
pop
mov
mov
jp
sub
add
add
lret
movsl
sbb
add
cmp
mov
adc
cltd
cltd
jnp
push
sahf
stc
mov
insl
dec
jb
xor
icebp
test
sbb
rolb
fildll
mov
jae
rorl
dec
adc
pop
out
xchg
cmp
mov
insb
fmull
cld
mov
jmp
add
scas
cmpsl
lcall
aas
insl
icebp
and
pop
test
test
xor
lcall
lret
push
lds
dec
dec
mov
out
lock
les
les
jmp
mov
lcall
dec
lahf
inc
push
jns
mov
mov
push
ds
xchg
adc
inc
or
cmpl
mov
jecxz
jmp
jmp
int
adc
insl
ficompl
das
aas
dec
mov
lds
xor
mov
out
push
outsb
addb
in
and
dec
pop
pop
shlb
dec
cmp
pop
inc
xor
pop
prefetch
xchg
mov
mov
and
cmp
push
and
sarl
aam
test
outsb
int
repz
lock
jmp
xchg
call
aad
cmp
adc
push
xchg
in
and
pop
out
mov
adc
int
mov
rclb
cmp
lret
or
negb
xchg
mov
out
dec
lret
lahf
xor
shl
and
outsl
cmc
add
out
pop
inc
ja
ljmp
lods
je
arpl
xorb
adc
in
lea
xchg
pop
cmc
sbb
jbe
xor
and
add
or
nop
adcb
sub
push
in
outsb
fildl
mov
push
clc
aas
fwait
mov
cltd
xlat
rorl
jle
popa
mov
or
outsb
cwtl
dec
pop
ret
leave
push
hlt
mov
push
out
sub
lea
pusha
sahf
sub
pushf
lods
jp
adc
bound
push
jns
and
mov
xor
pop
pop
lods
pop
and
adc
mov
nop
inc
cmp
repz
xlat
push
fs
mov
ja
popf
xchg
das
xchg
ret
cmpl
outsl
movsl
mov
out
add
mov
mov
and
cmp
in
insb
jg
sub
cmp
aam
inc
enter
xor
jne
fadds
mov
or
pop
int
mov
or
jl
loopne
push
loopne
sbb
hlt
xchg
xor
dec
dec
sarl
iret
arpl
mov
hlt
sub
jb
in
outsb
mov
fdivrs
jle
mov
cwtl
fiadds
mov
pop
sbb
pop
push
dec
push
fdivrs
xor
sub
fimull
dec
mov
or
dec
stos
sub
imul
mov
cltd
mov
scas
push
fwait
dec
cld
movsl
sub
sbb
push
sub
or
dec
in
dec
sbbb
sbb
inc
mov
xchg
push
int3
xor
sub
or
pop
and
inc
sub
aad
mov
xor
outsl
adc
je
mov
jge
insl
aaa
scas
lahf
jle
in
mov
sbb
test
cmp
pop
dec
cmp
mov
xorb
mov
icebp
pop
jl
ret
push
lds
and
add
sub
adc
imul
jae
rcrb
dec
jno
loope
imul
mov
dec
add
add
movsl
or
cmc
jns
and
xor
push
ret
aaa
xchg
xor
dec
cs
enter
jl
divps
dec
jg
dec
out
lods
cmp
sarb
lods
pop
cmc
dec
pop
mov
aad
imul
mov
daa
leave
out
jmp
cmpb
pop
ljmp
aad
data16
or
fisubl
jle
dec
movsb
mov
xchg
out
sub
ljmp
mov
mov
aaa
xchg
xor
cmp
sti
rorl
rcrl
out
lods
nop
and
add
lds
je
sbb
sub
addr16
mov
fstpt
sahf
rorl
leave
scas
shl
jnp
xor
jmp
xchg
mov
es
cmc
mov
mov
sub
jo
xor
sbb
inc
inc
cmpsl
cld
xlat
jae
sub
and
outsb
es
mov
cmc
gs
test
xchg
or
cli
stos
adc
aad
push
xor
sahf
jnp
jno
hlt
gs
adc
aaa
jne
cs
imulb
fmull
fcomps
mov
adc
cmp
mov
push
enter
das
inc
call
and
xor
xor
pop
pop
xchg
ljmp
jecxz
or
flds
push
cmp
add
add
movb
pop
inc
imul
or
xor
jg
stc
int
repz
add
fisubl
push
xlat
bound
divb
bound
add
xchg
sub
mov
xor
jne
loope
xor
into
push
imul
inc
pusha
outsl
pop
pop
push
dec
lret
add
pusha
fcompl
and
imul
inc
repz
bound
jge
cmp
sub
not
cld
outsl
mov
push
insb
dec
test
dec
and
push
or
mov
fnstcw
inc
mov
pushf
test
mov
sar
cmp
jge
mulb
aaa
xchg
aad
and
andl
clc
arpl
mov
mov
inc
ja
dec
push
stos
data16
or
adc
repnz
sub
outsl
mov
pop
xchg
das
push
cli
xchg
mov
fsubs
mov
mov
dec
jnp
xchg
mov
loop
int
sti
add
dec
jne
xchg
xchg
jl
cli
jle
lahf
movsl
orl
lahf
inc
insb
cli
mov
cmpsb
lock
push
enter
insl
pop
push
jmp
pusha
ret
adc
dec
mov
inc
push
loope
jg
ror
jge
daa
push
adc
jecxz
mov
movsbl
es
sbb
xor
ret
pop
out
jo
clc
pop
sahf
icebp
or
test
pop
push
aam
adc
jmp
loop
insb
ds
xor
mov
add
push
je
add
fmuls
mov
xchg
dec
and
adcl
filds
sub
popf
inc
xchg
mov
jmp
push
into
inc
cmp
adc
push
in
mov
add
cmp
jecxz
mov
mov
cmp
sbb
gs
shll
aaa
movsl
push
mov
push
mov
dec
lret
add
pusha
and
or
inc
sbb
or
add
and
repnz
mov
mov
ficompl
fdivr
jle
fldl
xor
lcall
insb
lret
lahf
dec
into
clc
add
sub
jae
push
pop
outsb
sar
pushf
and
xor
mov
iret
out
lcall
in
pop
addl
jl
push
inc
jl
mov
jno
xchg
mov
jbe
stc
js
jbe
sahf
dec
ja
jns
jb
add
loop
nop
into
xchg
xchg
cmc
fidivrl
pop
inc
push
ss
mov
pop
xor
or
insb
testb
loop
sbb
jmp
mov
and
pop
cld
clc
aad
mov
jns
push
insl
and
dec
sub
fldenv
cmpl
and
mov
xor
push
fstpl
fistpll
mov
in
stos
add
ret
ficoml
insl
ret
xor
add
mov
movsl
leave
sub
ds
test
mov
lods
sub
daa
mov
dec
sbb
xchg
mov
out
push
jp
push
or
cmp
cmpsb
jl
stc
jmp
test
inc
test
mov
imul
sub
jmp
mov
roll
and
xlat
in
mov
stc
les
lret
popf
hlt
sbb
movsb
cmp
mov
inc
inc
sahf
jp
clc
push
jp
xor
inc
mov
pushf
inc
xchg
xchg
mov
shlb
orb
repnz
xor
pusha
jae
rclb
cmc
inc
loope
test
mov
adc
add
push
dec
movsl
jae
sbbb
iret
test
push
push
pop
in
sub
pop
mov
hlt
hlt
jecxz
inc
xor
push
std
movsl
push
add
psrlq
mov
adc
mov
jnp
push
sbb
insl
inc
fsubrl
das
lcall
or
aad
jp
jle
inc
mov
movsl
inc
or
pop
jg
mov
stos
cmp
fisubl
cmpsl
punpckhwd
cmc
frstor
jns
fiaddl
out
icebp
lret
jge
push
add
sbb
sub
dec
popf
sbb
adc
aas
nop
outsb
aam
pop
xchg
cmp
sbb
mov
or
cli
push
iret
push
mov
es
sub
scas
push
and
sbb
popf
jo
cmpsl
push
popf
and
or
xchg
push
fidivl
and
das
pop
add
sbb
or
repnz
xchg
imul
sub
in
vmwrite
leave
and
add
dec
mov
cld
jmp
and
lcall
add
xchg
in
cmp
mov
push
imul
add
scas
xor
int
cmp
push
xor
push
pop
mov
cmc
sbb
adc
decl
or
push
xor
and
dec
mov
pusha
pop
add
in
clc
dec
jb
bound
xchg
les
into
push
adc
xchg
cmpb
dec
adc
lds
fistps
mov
nop
mov
inc
jno
push
sahf
jo
inc
icebp
aaa
sbb
sbb
sub
mov
sbb
push
xchg
inc
mov
and
xor
loopne
mov
or
cld
movsl
stc
repz
xchg
ljmp
add
sbb
fwait
dec
aaa
jecxz
mov
add
xchg
xor
outsl
adc
int3
push
out
imul
and
mov
sbb
mov
into
nop
mov
bound
cmpsl
xchg
outsl
mov
adc
cmp
rolb
loope
cmc
icebp
hlt
jl
mov
sahf
push
dec
int3
xchg
lods
jmp
call
loopne
mov
pop
int3
pop
mov
ret
je
ret
xor
xchg
mov
negl
incb
mov
fisttpl
jne
nop
sub
scas
test
sahf
sub
test
mov
cmp
sub
aam
inc
jns
stos
movsb
mov
cmc
xlat
sub
fldt
and
out
sarl
jno
mov
cmp
data16
movsl
fbstp
fsub
mov
pop
iret
inc
int3
imul
xor
pop
cmp
shlb
shll
orl
sbbb
adc
test
rorb
sub
ret
sub
icebp
in
fcmovnbe
pop
push
pop
movsb
inc
sbb
loop
leave
mov
xchg
pop
std
pop
sub
or
in
iret
cli
arpl
mov
into
shll
cli
push
adc
incl
movsl
sub
push
xorl
xchg
lret
out
lcall
inc
push
das
push
fwait
int
test
scas
fcomps
lock
daa
notb
jp
fisubs
scas
mov
in
push
icebp
shll
push
out
neg
add
lods
or
adc
dec
or
or
cmpsl
cld
xchg
mov
shlb
popa
lahf
call
xchg
push
jmp
fists
jb
push
je
mov
test
aaa
dec
inc
mov
scas
jmp
fs
jae
pop
push
or
mov
mov
jbe
nop
lods
insb
sarb
daa
sub
insb
fstpt
cmp
shrb
or
outsb
push
ret
inc
sbb
xor
fs
mov
leave
std
push
loop
pop
sub
xchg
pop
xor
and
mov
daa
lds
outsb
mov
pop
daa
cmpsl
pusha
fidivl
xchg
rcll
icebp
mov
fs
xor
push
sub
fadd
sbb
gs
mov
int
mov
iret
mov
mov
daa
add
dec
xor
and
mov
pop
pop
or
fbstp
and
add
nop
or
xor
testb
jno
jne
ficoml
jecxz
sbb
pop
mov
sbb
mov
pop
inc
pop
fucompp
jnp
pop
mov
xchg
nop
mov
cmp
add
mov
fsubrs
loopne
out
loop
je
sbb
shl
jns
lods
movsb
cmp
pop
imul
push
mov
frstor
mov
pop
mov
xchg
xchg
lretw
xchg
cmpb
test
sahf
sub
out
stos
inc
lret
into
sub
inc
and
mov
leave
ds
sub
daa
cs
push
cmp
bound
sub
xchg
pop
and
adc
or
inc
sub
bound
inc
rcl
shl
push
imull
cld
jge
lcall
jp
sub
pop
rclb
lret
je
xchg
jmp
sub
aad
insb
xor
loope
xchg
out
adc
inc
mov
rclb
mov
clc
pop
pop
pop
pop
sbb
sbb
dec
jno
sub
stos
or
fcom
cmp
orb
xchg
lea
mov
push
mov
in
jnp
mov
lods
sti
lods
push
sub
mov
jnp
mov
mov
jle
aad
imul
dec
addb
mov
adc
roll
pushf
push
icebp
adc
ret
mov
push
sbb
pop
lea
aad
add
inc
out
jp
push
cmp
leave
sbb
jno
lds
fptan
sub
inc
int
push
adc
mov
push
rorb
push
ja
test
jp
ficoms
or
inc
xchg
mov
shll
lea
imul
xor
lcall
stc
repnz
jno
inc
xchg
rcrl
cmp
xchg
mov
xchg
xchg
iret
adc
andl
lret
call
fcmovne
mov
push
push
lcall
dec
push
movsb
cmp
hlt
cli
dec
sub
ret
fcompl
sahf
out
cli
lods
comiss
loop
pop
nop
pop
lret
adc
pop
sarl
push
cmc
pop
mov
mov
cmp
int
sbb
shrl
inc
imul
mov
sbb
xchg
push
rep
inc
adc
ret
push
push
test
sbb
cld
addr16
mov
xchg
push
xor
or
mov
mov
stos
jae
mov
jge
cli
dec
pop
addb
insl
dec
gs
ds
inc
cmp
add
ss
movsb
mov
insb
or
ffree
cli
cmc
jbe
push
scas
adc
icebp
push
push
addr16
sti
jne
xlat
mov
mov
out
cmp
xor
mov
sub
push
data16
negl
imul
rclb
push
dec
ficomps
movb
cmp
xchg
scas
adc
adc
xchg
call
sarl
add
stos
mov
mov
call
xchg
hlt
mov
sub
mov
hlt
mov
and
mov
pop
and
inc
lds
sub
pop
ret
sarb
adc
mov
jle
out
mov
in
inc
test
mov
jp
jmp
mov
mov
loop
in
cmp
data16
sub
add
pop
mov
dec
pop
xchg
mov
cs
cli
xor
adc
push
sbb
xor
pushf
sub
cmp
cmpsb
inc
jecxz
es
test
sub
mov
jmp
ret
pop
mov
scas
arpl
int
das
mov
add
icebp
mov
push
sub
lock
hlt
hlt
mov
ret
or
fcoms
push
sbb
sub
psubsb
add
in
jle
inc
adc
int3
in
rclb
test
mov
std
and
pusha
mov
ret
loop
xrelease
fimull
pop
in
insl
lret
sub
push
cwtl
hlt
ja
push
daa
imul
jnp
in
aas
inc
out
add
insl
push
jp
cmc
push
outsb
data16
inc
mov
or
and
repnz
mov
or
out
and
cmp
adcl
flds
and
sbb
and
iret
and
popf
dec
pop
push
lret
movsb
ficoms
sti
cwtl
mov
call
test
jb
mov
ds
ror
iret
sub
add
dec
inc
mov
cmp
jae
and
inc
mov
cmp
ja
xlat
dec
movsl
sub
cmpsl
adc
repnz
sbb
out
ret
in
push
cli
aas
jmp
mov
push
mov
repnz
mov
mov
sbb
lahf
out
add
aad
dec
push
ffreep
mov
pop
sub
sbb
js
inc
mov
pop
xchg
mov
mov
xor
scas
add
adc
pop
xor
add
es
push
jmp
push
push
lock
mov
jbe
cli
aad
push
in
outsb
ret
cld
data16
movsb
out
add
sbb
mov
sub
cmpl
aaa
push
cmpsl
js
dec
sbb
jns
jmp
mov
jne
xor
popf
imul
push
ds
xchg
sbb
testb
pop
sub
mov
dec
sbb
popf
push
aam
ljmp
pop
dec
test
ljmp
jnp
sub
loope
inc
lahf
sub
mov
aam
mov
stos
jb
mov
push
mov
out
mov
lret
sub
jno
mov
push
popa
adc
xor
pusha
dec
adc
xchg
adc
mov
pop
cmp
push
movsb
inc
add
in
and
popf
dec
stos
add
or
xor
jecxz
xchg
xor
sub
cld
add
sbb
dec
push
mov
pop
mov
mov
mov
or
mov
jge
inc
sbb
outsl
movsl
mov
shr
sbb
cmpsl
cmp
adc
cli
out
push
xor
mov
in
rorb
push
aad
shlb
inc
orb
dec
pop
jbe
inc
mov
out
daa
xchg
outsl
test
jmp
fbld
inc
mov
ja
push
negb
fs
mov
push
clc
hlt
add
sbb
out
jecxz
rcll
pop
inc
pusha
test
loop
mov
adc
and
xorb
mov
rolb
jbe
lds
pop
mov
and
mov
or
lahf
push
jbe
ja
js
xor
or
adc
fucomp
mov
jno
pusha
dec
jns
out
mov
jmp
add
popf
add
ja
stos
lret
adc
jb
lret
dec
inc
adc
push
icebp
sbb
and
dec
dec
mov
jns
lret
pop
pop
jo
sbb
sub
lods
cmp
jle
push
dec
mov
add
out
pop
or
jecxz
sbb
ljmp
mov
mov
or
cs
std
cmpsl
call
pop
icebp
mov
and
cmp
adc
adc
and
xor
inc
or
popf
mov
mov
aas
xor
test
aaa
scas
imul
jnp
adc
adc
int3
xchg
lcall
or
push
cmpsb
lahf
or
cmc
xor
and
cmc
pop
push
loop
cld
pop
loopne
add
sub
push
or
or
add
sub
shll
or
outsl
nop
sti
fwait
mov
add
and
inc
call
add
xor
cltd
in
stos
pop
sti
push
aam
mov
stos
outsb
fldt
arpl
and
xchg
adc
and
outsb
cmp
es
jg
inc
pop
decl
fisubs
mov
pop
popl
inc
scas
jge
cmp
fmuls
rolb
dec
cmpsb
lcall
or
into
fdivrl
dec
and
mov
arpl
pushf
fs
and
push
mov
out
test
subb
dec
dec
subl
arpl
lea
xor
mov
sarl
test
pop
in
and
std
fbstp
ja
sbb
enter
xchg
fidivs
mov
movsb
insb
ds
jg
lahf
cwtl
in
aas
mov
xlat
sub
mov
push
pop
sbb
les
fisttps
rolb
xor
add
je
jno
xlat
sarl
mov
dec
xor
xor
adc
loope
dec
xor
push
pop
push
mov
cld
mov
pushf
dec
mov
scas
adc
jl
mov
sub
mov
sar
fists
push
jl
sub
pop
fstl
popf
mov
mov
test
sub
es
and
out
xchg
pop
mov
mov
mov
pop
cmp
arpl
sub
insb
es
xor
push
inc
into
leave
jge
shll
inc
in
arpl
aam
xacquire
add
stos
lds
call
lods
fnstcw
or
outsb
aaa
std
and
adc
cmp
xchg
sar
sarb
inc
and
nop
mov
test
arpl
jle
push
loopne
cltd
dec
test
xor
fimuls
cmp
jno
push
loop
jns
and
pop
xor
out
shlb
and
add
popf
loop
cmp
mov
mov
mov
ljmp
pop
lds
xorb
sub
outsl
dec
aaa
adc
sbb
in
dec
push
sub
repnz
pop
mov
aas
aad
jecxz
insl
xlat
bound
pushf
mov
rcrl
inc
pop
cmp
adc
loopne
aad
sub
adc
enter
mov
xchg
out
sub
jns
popa
arpl
popa
dec
fnstcw
push
jmp
or
mov
mov
sbb
ds
pop
push
add
push
sbb
test
sbb
test
lock
jge
xchg
add
xchg
dec
and
dec
jb
rcll
leave
fists
ret
mov
dec
add
adc
sahf
inc
ljmp
xlat
ucomiss
ret
xor
ja
fwait
addb
sahf
xchg
insb
stc
add
les
loopne
into
test
outsl
inc
adc
push
test
clc
loopne
lahf
push
daa
js
cmc
ficompl
popa
stos
addl
adc
xchg
lret
mov
repz
mov
mov
xchg
xchg
bt
mov
jp
cs
je
outsl
push
outsb
in
add
stos
nop
dec
mov
xor
xor
mov
ljmp
pop
insb
push
mov
mov
sbbl
add
sbb
add
adc
jge
push
imul
loopne
sub
push
imul
int
or
daa
pop
mov
cmpsl
sarl
dec
hlt
adc
pop
lods
cwtl
push
outsb
xorl
fdivs
int3
fstps
jo
out
push
test
lret
loope
cmp
mov
mov
fcmovne
test
jno
xor
push
mov
dec
mov
decl
xor
ljmp
in
mov
lret
xchg
jnp
pop
xchg
fwait
cld
iret
jmp
sub
adc
inc
mov
push
xor
push
sub
cltd
dec
ss
movsl
mov
out
stc
xor
jle
xchg
mov
test
dec
xlat
nop
xchg
dec
gs
cmp
mov
movsb
enter
aam
xor
daa
cmpsb
iret
xchg
lock
movsb
out
stos
pop
cli
mov
and
lock
sub
or
pusha
dec
sbbl
sahf
cmp
lods
hlt
add
divl
aad
push
jnp
gs
test
push
ficoms
outsb
fld
xchg
mov
aaa
fwait
aad
bound
sarl
insl
pop
into
xchg
xchg
jle
push
loop
inc
lret
mov
movsb
push
in
cmpsl
cmp
jb
lods
adc
xchg
repnz
ret
insl
sub
adc
or
pop
leave
jne
shl
and
xchg
push
sub
pop
orb
mov
movsb
imul
xor
inc
push
subl
fs
jp
xchg
lock
dec
jp
pop
cmp
movb
or
dec
push
insb
pop
das
jae
adc
fidivs
rcll
ja
incb
or
rolb
divb
ja
pop
mov
push
lods
xchg
mov
mov
pop
call
repnz
mov
jge
inc
pop
popf
sub
sub
pop
dec
in
or
ljmp
sub
jecxz
enter
push
cld
mov
repnz
iret
cmpsl
jnp
inc
aam
loop
cs
in
cmp
jmp
push
popf
std
inc
xchg
add
sbb
push
jne
inc
jge
mov
int
movb
and
mov
fs
cli
sub
int
notl
adc
and
in
andb
cmp
sarb
mov
cmpl
iret
sub
stos
push
or
leave
xchg
dec
lcall
pop
cmp
cmp
popf
dec
mov
and
mov
fpatan
jmp
mov
push
mov
repnz
push
fldenv
ja
outsl
sbb
jb
in
push
cmp
daa
adc
jg
xor
loop
xchg
pop
fwait
sbb
mov
xlat
or
out
and
das
pop
outsb
aam
subb
cltd
or
xchg
adc
mov
cs
jne
std
jnp
cmpsb
fwait
dec
aam
icebp
loopne
mov
movl
mov
andb
mov
push
pop
push
js
nop
push
cmpsb
les
pop
lods
or
jne
mov
cltd
mov
cmc
jnp
pusha
cmp
or
mov
mov
outsb
mov
mov
push
sub
jne
push
jbe
stos
sub
dec
sbb
aas
sbb
push
test
cli
and
add
adc
es
std
nop
hlt
xchg
xorl
sbb
repnz
mov
mov
mov
popw
push
mov
and
aas
inc
jecxz
repz
aad
andl
lock
cltd
pop
jo
ret
outsl
test
xor
add
mov
icebp
icebp
hlt
pop
adc
mov
pop
movsl
mov
outsl
dec
xor
loope
jle
ret
xchg
jae
movsl
js
in
loopne
dec
or
je
and
mov
dec
fiadds
ret
out
push
cmp
jg
aas
ljmp
rolb
pop
scas
add
lahf
in
jbe
inc
ret
sbbb
fiadds
lods
and
test
dec
shlb
ret
jmp
mov
dec
push
push
pop
inc
pop
cmc
movsb
ljmp
mov
dec
std
cmp
rcrl
mov
insl
aaa
mov
test
sub
sbb
cltd
jg
fcmovbe
fs
jg
dec
fsubl
aas
pop
and
sub
loop
pop
sti
inc
or
ljmp
dec
sti
ljmp
or
bound
repz
jg
loop
dec
dec
psubsb
adc
addr16
inc
scas
dec
mov
cmpsl
dec
xor
nop
out
jns
push
push
lret
imul
loopne
fldt
insb
aam
in
push
sub
daa
imul
ds
aaa
pop
fsubrp
sub
js
jno,pn
xor
mov
jb
pop
ficomps
negl
dec
clc
or
sti
xchg
mulb
jmp
loopne
popf
scas
ss
shr
add
addl
xchg
xor
mov
mov
out
imul
and
jg
fidivs
inc
ret
dec
jns
add
cmpsb
frstor
mov
aam
or
lea
clc
scas
std
mov
popf
mov
jb
fists
es
stos
sub
dec
or
xor
xor
in
insl
movsl
cwtl
test
mov
push
repz
mov
jl
xor
mov
jnp
xor
jb
es
mov
mov
cmp
bound
and
gs
fsts
and
movsb
adcb
test
pop
lods
es
inc
lds
out
dec
out
sahf
test
pop
sahf
push
in
mov
in
and
daa
lret
xchg
ljmp
cli
hlt
dec
aas
mov
mov
dec
cltd
cmp
cmp
xchg
pusha
add
push
out
ds
xchg
ja
push
add
js
sub
adc
popf
sbb
lea
jle
mov
fmull
cmp
mov
mov
ss
or
cmp
aaa
fnstenv
xlat
lahf
lock
sub
jae
pop
addl
mov
cmp
push
xchg
add
xor
fadds
push
hlt
adc
add
push
mov
leave
mov
fildl
or
lods
subb
int3
xchg
ret
pushf
xor
lds
adcl
xor
scas
push
fs
or
jg
xor
mov
mov
adc
mov
xor
mov
mov
and
cmp
jecxz
and
testl
std
icebp
cmp
dec
mov
dec
adc
movsb
xchg
pop
add
out
mov
jl
stc
mov
xchg
push
jge
popw
pop
xchg
jecxz
pop
sub
addr16
sbb
xor
jl
jnp
stos
pop
test
sbb
lcall
movsb
cmp
std
das
mov
mov
fiaddl
add
shll
xchg
mov
insb
lds
push
xchg
subb
inc
sub
xchg
sub
addr16
add
pop
sarb
shrl
xor
fstpl
outsb
sub
cmp
std
pop
pop
push
lods
xchg
je
sahf
jp
pop
or
mov
mov
jge
es
mov
push
sahf
sub
sbb
cmp
in
mov
aad
sub
and
test
jmp
inc
arpl
out
test
inc
out
test
add
mov
jle
rorl
xor
rcrl
inc
leave
xchg
push
xor
pop
std
popf
mov
icebp
mov
popa
mov
or
cmpsb
mov
into
xor
fnstcw
xor
push
stc
imul
fldl
in
pop
push
dec
jnp
rdmsr
pop
popa
add
push
ret
dec
daa
xor
cmp
es
inc
add
pushf
jl
divb
loopne
jns
mov
mov
mov
mov
mov
xchg
mov
jns
push
lcall
test
popa
mov
roll
mov
jns
icebp
add
push
out
sub
rol
sti
insl
jo
sbb
cmp
sbbb
sub
ss
je
imul
inc
dec
sbb
andb
pop
and
mov
andl
sbb
decb
out
dec
and
cltd
push
push
cmp
jle
mov
insb
sub
or
stos
mov
mov
call
enter
in
cmpsb
inc
cmp
jno
and
inc
push
jge
outsb
lods
repz
pop
rolb
stos
jle
loopne
clc
test
lods
decl
adc
aam
mov
dec
push
leave
add
push
pop
dec
loopne
jmp
mov
push
fstpl
aam
push
and
cltd
fists
add
aad
fdiv
pop
gs
adc
ljmp
out
mov
jecxz
jp
xchg
jle
in
mov
mov
xorb
fnstenv
stos
dec
pusha
jo
mov
aaa
xchg
dec
es
inc
repnz
xchg
ds
mov
fwait
push
lret
nop
sbb
mov
and
jne
xchg
pop
add
in
jp
dec
jecxz
idivl
pop
mov
je
out
movb
jg
mov
xor
cmpsl
jne
aas
pop
sarw
adc
rcr
sub
cmc
push
ja
or
lret
lea
adcb
sub
push
enter
es
int
out
add
stc
fwait
cmc
or
and
movsl
sbb
mov
and
lds
rcl
insl
inc
dec
neg
xlat
mov
out
jmp
mov
outsl
ljmp
in
sti
test
jae
in
icebp
xchg
lods
out
fistpl
rorl
xchg
jb
xchg
cmp
mov
sub
xchg
or
out
xor
data16
adc
mov
cmp
lret
jnp
mov
add
or
imul
sahf
adc
in
popa
jb
push
call
fsubp
icebp
hlt
mov
es
in
pop
int3
cli
inc
fsubl
in
fistps
subb
sbb
sub
lea
sub
jmp
icebp
xor
cs
mov
or
out
ljmp
pop
shll
popa
xchg
cmc
cmp
push
inc
mov
mov
mov
dec
xor
mov
test
cli
into
or
add
adc
clc
xchg
adc
inc
iret
repnz
pop
nop
data16
inc
pop
mov
push
dec
aas
imul
ljmp
add
mov
sub
pop
xchg
mov
test
jns
in
lret
push
cwtl
or
pop
jnp
dec
and
fnstenv
xchg
sarl
iret
pusha
es
call
inc
es
aam
add
test
insl
fdivl
jmp
add
and
jl
pop
ljmp
jo
lret
xchg
mov
adc
mov
dec
aad
add
xor
cmp
xchg
and
dec
movsl
bound
and
xchg
push
popf
shufps
xchg
and
push
cmp
fdiv
popa
dec
lods
pop
sbb
push
lahf
addr16
fwait
pshufw
outsl
out
xlat
daa
dec
mov
mov
dec
out
push
push
mov
repz
sbb
pop
in
arpl
push
in
sub
mov
idivb
sbb
push
roll
push
inc
fidivrl
in
adc
jne
sbb
mov
mov
cmpsl
cld
or
mov
mov
call
lret
int
adc
or
lock
fxch
cs
out
orl
dec
loopne
pop
mov
sbb
and
xor
les
cwtl
jl
mov
xchg
jns
mov
repz
lea
lahf
out
dec
sbb
sub
push
in
push
test
push
push
movsl
pop
mov
jnp
jmp
test
pop
mov
adc
out
std
push
repz
call
sbb
push
jl
jp
in
jg
mov
pop
repnz
ss
push
call
stos
push
push
bound
pop
dec
divb
xchg
inc
inc
in
int
shlb
decl
clc
sbb
mov
lods
mov
mov
dec
pop
hlt
cmp
lret
push
cmp
mov
aad
add
xor
add
in
and
out
stos
outsb
fimull
add
fs
pop
rcll
or
sbb
push
jecxz
nop
fs
lds
or
daa
movsb
sahf
in
jne
out
jl
fnstcw
push
subl
push
and
setle
fcmove
aas
les
je
push
pop
mov
cld
sbb
adc
jbe
pop
jp
xchg
psrlq
inc
xor
inc
xor
push
add
cltd
cmp
outsl
mov
out
dec
push
xchg
inc
mov
cmp
mov
fwait
lcall
jnp
mov
sub
dec
push
inc
in
jbe
loopne
aaa
test
jb
shl
in
es
cmp
sub
xor
cltd
cmpb
xlat
mov
std
orl
ret
lock
fucomi
rclb
sub
xchg
loope
or
xlat
push
xor
into
push
mov
dec
push
cmp
cwtl
mov
subl
std
pop
sbb
idiv
sub
mov
and
enter
pop
inc
idivl
ret
sar
repnz
cmp
mov
cs
lahf
inc
xchg
stos
test
pushf
notl
fadd
inc
pop
mov
sbb
pop
scas
add
iret
stc
test
dec
mov
cld
sete
adc
in
push
movsl
mov
xor
and
fidivs
pushf
sbbl
lahf
xor
inc
pop
cmpsb
das
std
repz
test
mov
dec
or
xchg
pushf
repnz
arpl
xor
or
cmp
fisubs
sub
or
clc
or
in
lock
or
jle
push
lahf
xchg
xor
js
imul
mov
pop
push
xchg
out
push
out
pusha
pop
cld
mov
xchg
cmp
cmp
cmpsl
ss
testl
std
rorb
cmc
insl
jns
mov
sub
pop
pop
inc
cmpsl
rorl
push
scas
xchg
fists
call
in
je
and
test
es
sub
ljmp
mov
addr16
stos
adc
sub
scas
insl
cltd
call
sbbl
xchg
rorb
mov
icebp
mov
sub
or
dec
add
repz
gs
fadd
cmc
dec
xor
roll
clc
scas
mov
pop
ljmp
pusha
dec
sbb
mov
in
pop
sti
pop
or
ret
loopne
mov
outsl
inc
pop
cmp
ret
ja
cmp
pushf
mov
mov
push
push
jle
pop
out
test
cmp
push
fsub
or
push
add
xchg
sub
push
xor
jg
enter
inc
fcoml
sub
inc
aas
arpl
test
dec
push
adc
ljmp
and
inc
lods
out
pushl
mov
push
es
ds
daa
stc
ds
xchg
imul
clc
jle
adc
ret
adc
jbe
xchg
pop
dec
inc
pop
dec
add
adc
push
insl
jle
mov
jnp
enter
outsb
ret
stos
mov
int3
or
add
jp
and
aad
mov
cmp
mov
popf
fnstenv
fadds
ds
dec
push
mov
into
adc
movsl
push
xchg
xor
cmpsl
out
push
mov
mov
add
push
mov
cmp
je
adc
popa
pop
sbb
sarl
push
dec
outsb
mov
out
xchg
dec
push
pop
dec
mov
icebp
mov
or
les
kxnorw
push
sarb
mov
or
lret
sub
dec
jno
add
out
rolb
cs
dec
dec
arpl
icebp
sbb
out
loopne
jne
gs
adc
hlt
xor
in
int3
aaa
loope
mov
fcmovnb
lds
mov
out
cmp
ja
mov
aas
fbld
dec
movsb
sbb
in
lcall
out
jbe
push
cwtl
dec
enter
clc
mov
xchg
pop
xchg
gs
daa
sbb
addb
cmpsb
js
xor
shrl
add
mov
pop
ficompl
leave
movsl
sbb
repz
idivl
enter
aas
arpl
xchg
inc
ss
dec
rcrb
inc
test
daa
je
inc
repz
mov
inc
sbb
jb
or
push
mov
xor
subb
push
pushf
or
fwait
loop
scas
insb
imul
xlat
xlat
jl
cltd
iret
mov
pushf
stc
test
adc
dec
dec
add
and
xchg
xchg
mov
repz
dec
sbbl
pop
fdiv
rorl
cs
jecxz
jns,pn
pop
nop
dec
or
cmp
pop
into
adc
sti
jns
cmc
jmp
push
pop
divl
pop
jl
pushf
mov
jp
mov
pop
xlat
jno
cmp
mov
dec
xor
pop
xor
outsb
fidivrs
cli
xchg
sbb
push
es
inc
stos
insb
pop
scas
dec
scas
push
pop
repz
test
mov
repz
dec
mov
ja
bound
add
ret
push
jo
xor
pusha
fimuls
aam
pushf
call
adc
add
dec
cld
sub
add
mov
insb
addr16
cmp
adc
cmpsb
fbstp
jo
addr16
push
mov
xchg
js
sahf
pop
mov
ret
jo
into
sbb
and
xchg
adc
push
in
shl
aas
xchg
mov
sbb
aam
adc
in
xor
add
mov
shr
jnp
cmp
fiadds
js
pop
pushf
into
push
sbb
push
adcl
cmovg
lock
dec
xchg
idiv
rol
push
mov
sub
sub
and
bound
and
stc
mov
pop
mov
and
pop
xor
sbb
jno
mov
cwtl
aam
pop
sub
divl
bound
add
mov
xchg
jne
scas
scas
popa
aas
push
data16
adc
or
neg
sbb
paddsb
jge
add
pop
xchg
push
push
push
insl
xor
lock
push
ret
mov
rorl
inc
jl
inc
mov
aas
xchg
push
pop
aad
mov
mov
mov
xchg
imul
add
rol
adc
push
fwait
sbb
cld
negb
mov
and
rcl
sbb
sbb
or
sub
push
das
and
dec
movsb
adc
pusha
pop
std
sub
xor
xor
pop
sahf
cwtl
xchg
sbb
hlt
ljmp
fidivs
jae
xor
jmp
pop
rclb
jle
sub
sbb
mov
scas
cmp
and
stos
dec
stos
mov
mov
and
cmc
jbe
cmpsl
adc
mov
test
rol
lods
adc
inc
pop
mov
fstps
into
outsl
pop
shl
fwait
leave
mov
push
addl
pop
lock
addr16
das
push
jl
inc
mov
cmp
es
and
xchg
enter
es
adc
scas
or
jns
cmp
mov
insb
pop
js
cld
mov
leave
and
notl
or
xor
bound
addr16
add
dec
hlt
cwtl
sub
xchg
aaa
stos
and
adcb
cmp
movsl
sbb
cmp
data16
push
fs
sbb
scas
mov
pop
js
jmp
adc
dec
jecxz
push
sbb
jb
adc
fmuls
pop
cltd
stos
pop
push
cmp
clc
push
in
push
xorb
jnp
sahf
push
cmp
or
sub
std
xor
fidivrl
bnd
shr
fisttpl
out
stc
or
cltd
mov
push
test
pop
jecxz
rcll
mov
xchg
push
sbb
cld
out
pop
je
aaa
mov
dec
std
mov
leave
pop
push
jno
in
or
sub
shrl
mov
mov
mov
fisubrl
cli
xchg
outsb
lods
jno
aaa
rorl
roll
or
mov
imul
pop
push
outsb
arpl
insl
add
jno
mov
int
pop
sbb
sub
mov
sub
enter
add
ret
out
xchg
jl
sbb
sbb
aas
inc
arpl
push
mov
je
data16
and
lcall
dec
fs
loop
mov
shr
inc
add
jo
fstpl
call
jb
add
sub
jl
sbb
rep
bound
push
mov
lret
iret
pop
sub
mov
or
jg
add
mov
aaa
aas
push
movsb
inc
xor
xor
cmp
sub
inc
test
push
int
push
lods
aaa
and
mov
cwtl
call
xchg
cmp
mov
mov
stc
jnp
pusha
je
mov
dec
es
fwait
lahf
push
dec
ds
jnp
mov
or
dec
adc
rol
sbb
mov
loope
int3
adc
loope
jle
and
outsl
jp
ss
jno
xor
xor
jmp
fcmovnb
repnz
cpuid
sub
aaa
mov
inc
ss
es
jp
aaa
cmp
push
dec
sub
pop
push
pop
xor
dec
mov
stos
outsl
mov
push
pop
jnp
hlt
xor
add
je
mov
inc
rorb
adc
fdivrl
mov
sub
pop
xchg
xchg
jns
out
mov
jno
mov
jae
test
mov
cltd
mov
out
cmp
sbb
cmp
and
xchg
cli
dec
push
jle
mov
add
cmp
call
add
mov
fstl
push
lcall
pop
mov
stc
cs
in
mov
test
cmp
sti
hlt
aad
sbb
or
cmpl
sub
cmp
sbb
pop
mov
cs
loop
cwtl
or
and
out
cmp
mov
ret
push
dec
mov
test
sti
out
jnp
icebp
push
mov
push
add
lds
popa
decl
pop
stos
push
xlat
cmp
mov
gs
jne
jmp
dec
flds
decl
jb
adc
xchg
pushf
sub
or
inc
adc
scas
jl
js
xor
leave
jp
xchg
or
mov
cli
xor
incl
sahf
xlat
or
inc
stos
ljmp
cmc
icebp
movsb
in
ja
out
jmp
fwait
lods
std
ficoms
mov
ss
adc
push
repz
movb
jp
das
scas
sahf
aaa
test
clc
aam
inc
and
sub
cmc
jmp
les
sub
and
pop
inc
and
idivb
jmp
jg
popa
sub
push
xor
mov
dec
sbb
jae
jmp
push
rcl
xor
lret
or
andl
xor
sbb
xchg
clc
jbe
add
adc
dec
jecxz
cltd
leave
loopne
es
das
sub
fstpt
cwtl
push
cwtl
dec
pop
and
xor
dec
in
int
es
inc
or
mov
dec
fcomi
sub
pop
inc
adc
insb
pop
xchg
mov
cmp
or
xlat
test
xchg
shr
frstor
jns
adc
push
insl
add
pop
aaa
mov
test
dec
icebp
sahf
cmp
xchg
aam
mov
push
aad
insb
adc
mov
or
in
or
jmp
push
lock
jne
fmull
ljmp
imul
inc
inc
jns
xchg
rep
gs
mov
dec
cwtl
push
pusha
cmp
jge
inc
mov
popa
pop
ret
push
xor
xchg
scas
data16
sbb
xchg
mov
loopne
test
out
out
inc
dec
mov
jp
jmp
dec
cs
mov
lods
loope
fmul
mov
push
xor
lea
jno
or
fsubrp
xor
clc
sub
pop
push
xor
add
cmp
xchg
fs
sbb
cmc
pop
dec
mov
lea
add
lods
mov
mov
movl
enter
cltd
je
mov
mov
jg
dec
mov
jnp
mov
push
or
int3
xchg
sbbb
adc
mov
mov
inc
push
std
loope
push
scas
in
lret
sti
mov
jae
cwtl
pusha
sub
outsb
xchg
cwtl
fldl
jo
pop
sbb
and
add
cmpsl
imul
stc
cs
add
out
insl
ret
loopne
loope
pusha
and
inc
pop
cltd
notb
scas
repz
mov
pop
jge
orl
lahf
push
adc
insb
fiaddl
xchg
jge
adc
sbb
add
pusha
cld
popf
lcall
jecxz
jmp
stc
hlt
jb
add
loop
push
clc
imul
arpl
dec
push
fs
inc
sub
xor
jnp
add
nop
add
adc
in
dec
fdivs
and
ja
inc
cmc
mov
cmc
or
ljmp
ds
jnp
ja
sbb
into
rcl
outsl
cmc
dec
in
or
inc
add
mov
add
cld
arpl
pop
sbb
daa
dec
jmp
xor
loopne
jo
fmuls
xchg
repz
jge
cmp
stc
negl
cltd
fldl
cmp
mov
cmp
or
imul
xchg
cld
push
rcrl
mov
sarb
frstor
pop
mov
lods
daa
sub
sub
outsb
dec
mov
rorb
cmc
sub
lcall
scas
push
int
and
jecxz
gs
push
ret
in
push
pop
sti
jg
movsl
xchg
adc
add
add
lcall
out
dec
jl
sahf
xor
pop
xchg
out
out
ficoml
rol
pop
add
xchg
arpl
movsb
lret
cmpsb
xor
fisubs
repz
push
sub
cmp
xchg
cmpsb
stos
cmp
mov
mov
mov
push
rcrb
sub
out
xchg
addr16
lret
push
fstpl
xor
add
dec
out
mov
inc
mov
ficomps
lret
xchg
scas
daa
aam
push
fxch
int3
xor
inc
orl
movsl
inc
pop
mov
nop
sbb
pushf
lea
push
inc
sbb
shlb
scas
lcall
cmp
xchg
xchg
dec
mov
movsb
and
push
incl
push
xchg
loopne
mov
xor
push
sub
xchg
out
jp
lods
fwait
je
fsubrs
movsl
clc
jae
xchg
push
lods
push
cmp
push
lds
inc
push
adc
jae
fsqrt
xchg
ds
pusha
lahf
mov
cmp
xchg
stos
cmp
sarb
addl
adc
test
insl
cmp
in
mov
xchg
pop
lret
cs
and
vhaddpd
sahf
loop
pop
pop
mov
movsb
cmp
sbb
or
dec
xchg
arpl
adc
sbb
imul
pop
push
adc
pop
aad
or
loop
pop
call
sub
jle
loop
sbb
adc
out
les
cs
sbb
cmp
fsubl
add
dec
lock
ds
inc
ljmp
cmp
movaps
pop
fstpt
cwtl
rcr
cmp
push
inc
pop
mov
lret
pop
arpl
dec
in
pop
fwait
sub
dec
nop
insl
hlt
push
movsb
dec
cmpsl
push
adc
jp
mov
fincstp
push
mov
lods
cld
movsl
bound
icebp
adc
fisubrs
push
pop
mov
sbb
test
pop
mov
test
or
stos
mov
fsubr
std
pop
xchg
cwtl
insb
sbb
out
sbb
out
hlt
mov
adc
ljmp
xor
jl
ds
jg
push
int3
pushf
cli
stc
pop
xor
test
push
enter
pop
shrb
push
jecxz
popa
push
adc
pop
mov
ja
fwait
or
pop
arpl
and
mov
cmpsb
lret
clc
add
add
in
push
popa
mov
dec
or
movsl
jo
fstpt
jg
test
mov
insl
sbb
cmp
js
add
fstp
in
xchg
jb
mov
xor
xchg
jg
and
jecxz
mov
lods
pop
or
fldz
xchg
enter
cmp
mov
jle
mov
pop
popf
add
ficompl
aas
xchg
adc
cmc
cmp
xchg
cmpsl
rcl
cli
lret
stos
jecxz
out
xor
aas
das
xchg
lcall
out
lock
sbb
xor
imul
sbb
jne
mov
pop
mov
push
inc
movsl
out
xchg
cmp
and
cmovno
fmull
test
mov
inc
jmp
jb
pop
cmp
mov
out
mov
push
inc
and
ss
mov
mov
mov
cmp
stos
and
mov
mov
addr16
add
jne
sbb
inc
sbb
xchg
dec
outsb
add
jns
out
ljmp
push
cmp
and
cmpsb
add
inc
jecxz
shll
xchg
ds
adc
nop
or
mov
inc
inc
cltd
mov
or
jne
in
shl
sarb
jb
push
push
loope
sub
in
lcall
jle
sub
xchg
jae
sub
sbb
mov
call
data16
icebp
mov
rolb
popa
iret
xorb
mov
sub
aam
adc
loopne
scas
adc
inc
jl
xor
addl
pop
inc
add
les
imul
mov
lods
mov
test
push
adc
push
out
cmp
aam
or
ret
and
push
mov
sub
xchg
dec
push
fnclex
in
sub
imul
ror
mov
les
adc
push
ret
lea
mov
jb
arpl
out
xchg
sub
movsb
fdivs
mov
adcb
xor
das
lret
sub
pop
aas
lcall
pop
xchg
out
xchg
lods
xor
add
cmpxchg
int3
aam
xchg
imul
mov
cli
xlat
sub
sbbl
push
or
cmp
mov
shll
mov
jo
out
ljmp
sbb
loopne
add
rolb
push
cmp
dec
sub
fcomps
mov
ss
popf
mov
cwtl
dec
aaa
std
pop
mov
outsl
cmpsl
aam
or
cmp
xor
daa
pop
cmpsl
enter
imul
inc
xchg
clc
out
jno
cmp
in
sub
push
mov
out
inc
push
mov
cmc
mov
enter
jns
jae
lods
movaps
push
add
ss
mov
cmp
scas
push
push
dec
cmp
in
int
jb
push
sbb
dec
adcb
outsl
push
push
sbb
push
lcall
std
mov
and
jmp
sub
add
adc
inc
bound
mov
push
stos
inc
cmc
cld
adc
pusha
xorl
into
mov
jl
out
fistps
les
inc
jl
icebp
inc
add
arpl
nop
lret
aad
das
xchg
divb
inc
lods
inc
scas
lods
mov
int3
aaa
mov
ljmp
mov
mov
pop
cmpsb
add
std
inc
out
js
pop
inc
hlt
les
mov
clc
int
mov
mov
add
sbb
cs
jg
adc
jae
les
inc
out
les
pop
add
inc
sbb
dec
push
jae
push
mov
iret
addr16
and
and
fnsave
nop
add
fnop
aas
popa
mov
and
mov
es
les
add
mov
sbb
pop
and
sub
ror
movsb
out
popa
nop
loopne
outsb
ja
cmp
test
outsl
xchg
out
mov
js
or
sub
jp
popf
fidivs
out
pusha
pop
addr16
mov
out
call
or
cmp
mov
aad
insb
insb
jmp
mov
popf
gs
adcl
cld
or
cmp
out
xor
or
mov
rcrb
pop
insb
cmpsb
inc
lods
imul
sbb
sbb
cmp
adc
mov
stos
ss
mov
lds
das
and
aas
scas
ss
xchg
xchg
iret
dec
jae
inc
adc
mov
adc
pop
rclb
ljmp
pop
outsl
sbb
inc
pop
inc
or
sub
cmc
pop
repz
adc
fcmovnbe
in
decl
inc
es
jbe
pop
xchg
decb
cmpsl
push
bound
mull
inc
xorb
fistl
xchg
push
add
xor
cmp
out
inc
or
in
jno
dec
je
sub
dec
inc
xchg
sub
mov
push
sbb
repnz
dec
idivl
push
mov
add
mov
cs
push
test
je
mov
mov
sbb
cmpb
imulb
mov
jo
insb
mov
es
test
rorl
stos
or
inc
lea
xchg
cmp
sahf
inc
scas
add
jge
out
fcoms
xlat
pusha
and
test
into
xor
hlt
add
stc
stc
and
adc
and
jmp
pop
aaa
adc
mov
jo
leave
cmpsl
cld
inc
jp,pn
enter
or
pop
ret
or
mov
arpl
repnz
add
cmp
xor
ljmp
or
dec
stos
shll
pop
test
mov
jnp
iret
mov
nop
mov
stos
inc
cmc
and
push
bound
pop
inc
mov
scas
or
mov
and
push
in
jl
mov
loope,pn
mov
or
add
mov
sub
or
push
aaa
cmpsl
push
popa
inc
enter
stc
sbb
xchg
xlat
pop
or
adc
fildl
xor
and
jecxz
loop
aam
cmp
std
mov
jnp
clc
sbb
arpl
or
inc
es
xchg
movsl
fcoms
sahf
mov
std
jmp
pop
mov
push
stc
repnz
mov
jmp
pop
out
icebp
rorb
and
sub
test
les
dec
aas
lods
adc
xor
test
ficoms
int3
xchg
adc
push
test
sahf
add
pop
xor
sbb
cs
xchg
cmp
sbb
xchg
iret
push
fisubrl
pop
xchg
cmp
mov
mov
into
fisttpll
mov
sub
jg
jae
and
xchg
iret
adc
adc
test
mov
sub
adc
push
fwait
jg
mov
fistpl
mov
push
lahf
fldenv
dec
jmp
push
out
xchg
pushf
jge
jnp
out
test
pop
shll
shl
pop
sbb
ja
jo
testb
push
sub
inc
pop
mov
sbb
in
jg
rcrl
mov
repz
push
je
push
pushf
test
js
mov
imul
xor
mov
dec
pop
and
inc
cmp
cmp
les
adc
arpl
pop
vunpckhps
sub
rol
dec
sahf
add
pop
xlat
gs
pop
lods
imul
sub
das
fldenv
bound
mov
and
cmp
dec
pop
push
pop
pop
push
bound
iret
test
push
pop
xchg
cmp
add
movsl
push
les
xchg
cmp
cs
sbb
add
data16
cmpl
push
or
adc
or
adc
jne
ljmp
mov
mov
adc
inc
mov
mov
mov
in
jmp
adc
sarl
sbb
xchg
mov
mov
push
outsb
dec
push
iret
jbe
xchg
inc
push
push
pop
xchg
add
mov
xor
adc
das
or
mov
adc
pop
cli
data16
add
mov
lock
rol
arpl
shll
movsb
scas
sbb
imul
and
cmp
fs
lods
out
xchg
dec
xchg
and
lea
mov
push
les
out
daa
js
mul
loope
mov
adc
pop
jge
mov
xchg
cmpsl
add
add
or
pop
fnstsw
and
in
leave
fs
xchg
imul
xor
adc
sbb
fnstcw
es
das
xchg
jne
add
daa
test
inc
sbb
add
cltd
dec
xchg
int3
sbb
int
dec
dec
daa
pop
ds
shl
add
jg
insl
push
cmp
leave
subb
cli
and
sbb
mov
sarb
mov
leave
push
pop
adc
pop
cmp
add
push
arpl
push
mov
fwait
stc
sbb
or
mov
push
sub
gs
fdivs
lret
jge
xor
jecxz
shlb
sbb
adc
rcrl
cmp
in
idiv
dec
push
jge
imul
shr
mov
cwtl
popa
push
pushf
or
icebp
shrb
gs
cmp
outsl
movsb
cmpsl
icebp
cmp
dec
sbb
and
dec
cmp
ss
dec
jmp
or
push
lock
sbb
mov
pop
sub
push
xor
inc
bnd
pop
mov
jg
test
xor
mov
shrb
aam
xlat
in
xchg
mov
xchg
shr
lahf
mov
fdivrp
mov
cmp
mov
lahf
xchg
dec
test
fldcw
das
loope
sub
mov
stos
adcl
inc
and
data16
in
mov
pop
add
es
xchg
adc
pop
push
int3
lret
and
sbb
test
and
aaa
rcl
sub
pop
xlat
push
xchg
testb
inc
lock
inc
lret
lret
jecxz
mov
and
inc
stc
or
jo
bound
dec
nop
or
das
enter
xchg
jmp
xor
mov
in
cmp
lcall
mov
popa
idivb
add
add
sbb
jno
dec
in
dec
pop
shll
lahf
jecxz
rcrl
push
mov
sub
out
mov
xor
or
imul
xchg
dec
inc
out
pop
aas
leave
je
xchg
ss
lahf
cmpsb
sub
lods
mov
leave
and
xchg
jo
das
pop
ljmp
stos
arpl
outsl
neg
mov
cmp
add
shrb
mov
lret
sbb
insl
ljmp
inc
lcall
xor
pop
add
inc
push
fisttpll
pop
stos
sbb
divl
mov
cltd
mov
pop
mov
enter
inc
clc
movsl
sub
in
cmp
cmp
sti
adc
sub
jmp
cmp
jle
or
lods
jmp
lods
lahf
or
bound
popa
add
pop
fnstsw
xchg
in
aaa
cs
sbb
mov
or
imul
test
sub
mov
hlt
and
dec
imul
add
cmp
test
loop
std
add
loope
lahf
mov
out
pusha
movsl
fiaddl
sub
pop
das
les
cmp
insb
lock
cmc
pop
fimuls
out
addr16
adcb
mov
push
stos
imul
or
icebp
mov
gs
imul
sub
inc
mov
rorb
lret
jmp
and
jl
test
mov
mov
xor
aaa
insb
sbbb
sti
push
leave
es
dec
loope
ret
call
test
sti
mov
adc
jle
push
pop
sbb
xlat
pop
testb
mov
xlat
sub
jae
xor
in
in
lea
js
mov
je
dec
enter
push
add
xor
xchg
xchg
inc
pop
movsl
sahf
pop
mov
and
divl
pop
dec
push
fs
push
jno
cmpsl
aas
or
xor
scas
ret
in
insl
shll
out
sbb
mov
imulb
sub
push
loop
out
cmp
cwtl
pop
lahf
lock
aas
jl
in
sahf
iret
add
cmp
insb
out
cmp
lds
or
cmp
scas
cmp
adc
or
addl
int
push
jmp
lahf
or
mov
lret
fisubrl
add
add
mov
cmp
push
mov
lea
or
cmpsb
ss
add
pop
movsb
xchg
lds
stc
aam
test
mov
fstl
pop
in
loope
lods
cmp
cld
lcall
movsl
mov
fisttps
adc
jno
decb
fs
jno
cmpsl
jp
leave
xor
cmpsl
mov
sbb
les
popa
mov
lods
faddl
in
sbb
sbb
add
imull
jl
xor
cld
aad
addr16
push
xor
test
out
or
leave
mov
scas
mov
mov
sahf
jl
in
xchg
inc
imul
pushf
xor
add
mov
mov
push
jmp
popa
loopne
cmpsb
inc
and
pop
jp
lahf
xor
jne
xchg
cmp
xor
xchg
push
hlt
dec
out
fwait
hlt
stos
dec
dec
sbb
aad
push
or
stos
and
iret
dec
je
sbb
cmc
inc
pop
xchg
sti
int
aaa
pop
and
pop
sub
out
cli
push
jge
rorb
test
cmc
sbb
cmp
int3
repnz
xchg
mov
mov
push
add
sar
cld
inc
loop
mov
das
sbb
orb
ljmp
inc
aaa
mov
xchg
inc
xor
leave
dec
fs
jno
cld
inc
lods
ret
cmpsb
jmp
and
in
sub
rcll
add
xchg
dec
mov
int
dec
test
cmp
sbb
mov
xchg
je
sarl
push
les
stc
lahf
add
xor
iret
les
les
icebp
mov
cmp
jne
sahf
push
cmp
and
push
aaa
cmpsb
pop
sub
sbb
cwtl
or
stos
in
inc
mov
hlt
mov
je
cmp
fwait
and
sahf
and
inc
popf
nop
out
adc
movsl
cli
imul
jae
mov
into
arpl
in
push
mov
mov
lods
adc
cmpl
mov
lods
dec
xchg
hlt
fwait
jnp
dec
cmp
ljmp
int3
shll
scas
inc
cmp
out
adc
jae
and
dec
sub
aas
ficoms
sub
cs
nop
sub
sbb
scas
lea
and
mov
dec
fisubrl
cs
mov
or
jle
daa
or
cli
ljmp
fisttpll
out
pop
mov
push
cli
mov
pop
xchg
iret
loop
inc
mov
daa
cltd
pop
bnd
stos
push
int
push
int3
aam
scas
repz
adc
insb
fwait
xchg
sbb
sbb
pop
mov
shll
adc
dec
inc
mov
mov
in
mov
add
fldl2t
push
outsb
push
repnz
sub
daa
inc
push
rcrb
xchg
or
push
adc
in
aad
idivl
cmove
popf
and
pop
outsb
fildl
push
jno
sbb
dec
xchg
icebp
int
jno
cmpsl
push
ja
das
jb
mov
mov
sub
sbb
jno
and
xorl
pop
nop
insb
cmp
mov
jnp
dec
adcl
clc
movsb
sbb
cld
fs
pop
sahf
mov
jmp
je
and
push
int
xchg
sub
push
xchg
jp
ret
xchg
inc
stos
push
movsl
les
cmp
sbb
scas
mov
cmpsl
pop
in
add
dec
cmp
ljmp
dec
inc
enter
scas
mov
sbb
data16
and
jg
lds
adc
ret
repz
mov
bound
xor
push
adc
mov
lahf
into
pop
cli
or
repz
push
inc
sub
outsl
ret
lods
cmp
adc
js
mov
mov
outsl
stos
cli
jbe
fwait
test
and
insb
std
inc
jnp
mov
cmp
cmp
pop
ds
lret
jae
sub
push
lods
xchg
dec
xchg
lahf
pop
int3
xchg
dec
mov
xchg
in
cmc
inc
add
cmp
cwtl
mov
nop
icebp
dec
mov
xlat
sarb
mul
jecxz
aam
and
mov
inc
pop
stos
les
dec
inc
adc
scas
mov
push
shr
fsub
shr
and
movsl
sbb
cmp
lahf
add
adc
mov
lcall
movsl
jne
cltd
mov
aas
jae
jb
imul
ret
pop
sub
pop
insl
dec
mov
push
stc
call
push
xchg
pop
lret
loope
add
sub
gs
and
fbld
and
jo
rcll
lods
mov
mov
inc
fs
scas
mov
adc
int
mov
ljmp
push
adc
and
cmp
fildll
add
int
push
xor
pop
sbb
cmpsb
bound
or
in
jmp
cmp
sub
out
enter
jae
mov
popf
or
aam
mov
lock
fstpt
dec
adc
add
mov
aas
mov
into
fcoms
mov
call
stc
call
daa
xchg
pop
lcall
adcl
xor
repz
xor
dec
nop
shl
lock
mov
aam
jge
daa
push
hlt
out
outsb
inc
in
imul
pop
mov
jbe
push
pop
in
cmpsb
ret
mov
xchg
sbbb
imul
adc
icebp
js
mov
xchg
push
sti
dec
dec
inc
inc
pop
pop
xor
jno
fdivrs
jmp
lods
int3
leave
xchg
cmp
xor
fucom
xchg
push
nop
mov
mov
je
mov
ror
xor
push
call
dec
mov
js
add
stos
into
pop
inc
in
jg
cmp
scas
mov
lret
xchg
int
pusha
dec
jmp
xchg
mov
fdiv
mov
cld
mov
popa
es
mov
fbstp
push
lret
aad
adc
sub
mov
insb
mov
jo
xchg
and
out
push
pop
push
dec
xchg
pop
shrl
mov
sub
sbb
bound
add
mov
inc
movsl
lcall
mov
testb
test
fistpl
and
std
jmp
mov
lods
mov
out
sbb
and
jno
push
inc
jno
push
mov
mov
lret
and
dec
add
fisubl
out
jmp
aas
dec
jge
or
add
cmp
mov
sbb
and
and
andl
dec
mov
adc
incl
adc
and
mov
mov
sbb
and
push
shrb
push
rcrb
xlat
and
adc
jp
dec
inc
pop
jno
xchg
ljmp
mov
outsb
pop
mov
in
repz
outsb
xor
pop
sub
adcb
out
and
dec
ljmp
jns
inc
andl
cli
lock
repz
cwtl
hlt
movsb
addb
aas
lods
ljmp
push
ss
sub
mov
pop
or
roll
ret
lret
sub
iret
pop
xchg
sbb
out
nop
or
lods
sahf
mov
xchg
testb
sub
stos
mov
popa
test
push
cltd
iret
retw
js
ret
fiaddl
test
jmp
mov
sbb
fnstcw
push
or
mov
mov
inc
add
pop
xor
cmp
pop
cmc
jne
test
lods
add
xchg
pushf
pop
jle
cli
ret
dec
jecxz
xchg
adc
jle
insb
cltd
mov
mov
mov
or
adcl
mov
mov
daa
lret
sbb
loop
mov
leave
push
cld
test
stos
rcrl
pop
dec
jo
mov
xchg
inc
jnp
jne
mov
pinsrw
xchg
imul
or
dec
push
in
jo
adc
lods
rclb
sbb
or
scas
mov
out
mov
in
or
dec
ja
aad
test
lcall
cmp
into
push
add
sbb
test
out
dec
repz
pushf
imul
out
xabort
sub
dec
push
rcr
or
cli
inc
icebp
mov
sbb
pop
aas
xor
xchg
push
lea
mov
push
mov
outsb
inc
mov
mov
jno
pusha
leave
cli
or
gs
jp
repnz
push
pop
add
xchg
xchg
mov
sahf
push
and
jle
jmp
inc
mov
nop
or
add
push
pop
xchg
inc
sar
das
pusha
insl
xor
aam
inc
test
push
xor
leave
repnz
or
dec
lea
xorb
xor
test
lcall
push
les
fadd
mov
push
add
and
mov
leave
mov
mov
jge
fbld
daa
in
and
or
out
pop
add
pushf
sarl
dec
mov
int3
jge
arpl
or
aam
xchg
jne
or
dec
out
fcomi
mov
mov
inc
xchg
lahf
nop
push
mov
gs
and
fs
test
in
adc
iret
sbb
adc
cmp
cmp
mov
stos
in
jae
movsb
stc
pop
aam
cld
jg
repnz
aam
in
and
popa
add
fwait
mov
and
stos
inc
or
addr16
or
inc
dec
jne
std
xchg
sahf
hlt
inc
dec
mov
inc
sub
into
cmp
jecxz
mov
lds
or
in
xchg
in
aad
sub
add
xchg
adc
iret
outsl
shrb
or
mov
sbb
sub
adc
mov
lret
loop
jbe
mov
dec
jbe
ja
ucomiss
dec
test
sbb
xchg
popf
cmc
inc
cmpsl
test
cmpsl
mov
sbb
or
pop
xor
mov
or
test
mov
jp
ss
cmp
mov
mov
mov
sub
push
or
cmp
mov
sti
jle
inc
dec
inc
mov
xor
and
push
or
push
xchg
std
insb
sbb
call
mov
cmp
cwtl
ret
std
jne
xchg
hlt
mov
sub
clc
sbb
pop
sbb
imul
iret
fistpll
int
or
pop
and
adc
addb
fnstenv
imul
imul
outsl
lock
mov
lret
mov
xor
aam
sbb
ljmp
into
and
inc
jae
add
jo
or
lock
or
mov
or
jns
mov
pushf
rcr
jns
daa
mov
adc
enter
and
daa
fs
cld
das
outsl
scas
and
lods
je
mov
into
pop
inc
testl
mov
into
or
dec
or
mov
mov
int
mov
subl
aad
dec
sbb
outsl
mov
loope
pop
fdivrl
mov
ljmp
fs
sub
imul
mov
sti
lret
mov
adc
shlb
mov
cmp
mov
subb
fisttps
dec
xor
mov
xchg
andl
mov
ja
mov
push
xchg
insl
mov
aam
and
sbb
fidivs
inc
out
sbbb
cwtl
add
pop
inc
sub
ficomps
xor
adc
sub
xchg
xorl
mov
repz
or
mov
inc
mov
or
cs
mov
mov
and
in
jo
adc
dec
scas
push
add
push
or
rcl
fbld
out
pop
popa
into
in
fcmovnu
jb
jno
in
in
fucomi
push
mov
or
push
pop
jge
sub
sub
addb
jnp
pop
cmpsl
arpl
or
pop
aam
and
call
sub
mov
mov
jns
inc
movsl
out
fisttps
or
divl
or
cmp
jo
mov
jb
jle
xor
adc
lahf
fisubl
adcl
jne
cmp
xchg
xor
mov
dec
mov
sbb
movsl
mov
aad
in
xchg
lahf
mov
aam
shr
addb
push
pop
in
je
insl
add
xor
mov
gs
mov
sbb
out
xchg
mov
test
sbb
adc
sub
xchg
fsts
mov
sbb
shrl
insl
push
add
xor
stos
jo
adc
lahf
movsb
lds
adc
jno
sbb
push
insb
in
addb
stos
jg
mov
fdivrs
fmull
ljmp
or
cmpsl
or
and
xchg
pop
out
pusha
push
inc
dec
ja
pop
pushf
lds
fcom
mov
rep
test
pop
or
mov
popf
push
cmp
add
lahf
mov
insl
pop
xor
test
or
loope
dec
test
mov
jg
pop
xchg
pop
inc
rcll
xor
add
adc
shll
sub
sbb
or
mov
in
ret
pop
or
lock
repnz
outsl
push
pop
lcall
pop
loope
lret
sbb
les
cmp
das
and
pop
std
pop
shrb
mov
xchg
pushf
test
hlt
inc
add
cmp
notb
aaa
sarl
pop
mov
sbb
in
push
jg
add
inc
adc
xchg
xor
cmpsl
mov
fcmovnu
and
pop
sub
hlt
pop
scas
loopne
mov
fdivrs
data16
das
stos
pop
dec
jp
cld
sub
fisubrl
xor
xor
cltd
push
pop
in
push
xchg
clc
mov
hlt
pop
out
insl
test
out
lock
shlb
out
pop
mov
cmovb
jp
xor
and
inc
mov
pop
push
aam
ljmp
sub
inc
sbb
dec
jae
fwait
sbb
dec
push
xchg
aas
cmpsb
xchg
or
mov
mov
jns
es
xchg
push
and
jle
dec
scas
pop
jbe
sub
sahf
mov
add
or
bound
repz
sbb
mov
mov
pushf
pusha
mov
adc
inc
aad
jmp
push
mov
xchg
push
fnstenv
sbb
inc
aaa
in
mov
mov
in
pop
arpl
mov
push
fistl
paddw
and
push
fs
mov
add
push
push
scas
movsl
sahf
sbb
outsb
push
into
int3
inc
inc
sub
sub
cwtl
shrl
mov
in
addr16
inc
dec
popf
sub
dec
add
push
pop
lcall
ljmp
fwait
rcll
xchg
adcb
mov
lcall
dec
shll
push
dec
inc
jnp
outsl
shlb
add
sub
dec
pusha
and
dec
mov
stos
cmpb
bound
cmp
mov
lds
repz
cmp
cmc
jns
stc
fisubrl
cmp
sti
fidivrs
add
nopl
enter
notl
in
inc
fsubr
in
fists
mov
lret
mov
sub
dec
or
cmp
or
mov
pop
xor
movsb
cmpsb
flds
jnp
jae
jbe
test
rcrb
loope
mov
out
and
mov
andl
mov
mov
popa
aad
xor
adc
lret
inc
es
push
push
daa
mov
in
ret
orb
mov
xor
cmp
or
pop
and
sbb
pop
js
sbb
and
fisubs
push
data16
das
out
mov
and
dec
mov
shlb
jo
or
movsl
sbb
dec
inc
or
and
cld
mov
in
ret
call
push
xchg
jg
repz
or
cmp
in
xchg
ljmp
adc
std
sar
adc
dec
loop
out
inc
xor
push
mov
xor
add
cwtl
xor
int
mov
fistpll
js
adc
cmc
dec
lea
jmp
sbb
insb
mov
and
xor
aad
fs
sbb
nop
popa
insb
add
addr16
fs
test
push
fstpt
jl
cwtl
cltd
fstpl
mov
jbe
pop
mov
fstpl
fmuls
fs
xchg
pop
jmp
or
pop
inc
loop
nop
mov
fwait
subl
std
mov
adc
mov
fcoml
ja
ss
pop
mov
les
push
jmp
int
out
fldenv
movb
xchg
jne
mov
xchg
stc
sub
jp
gs
xor
ret
and
mov
and
jl
cwtl
inc
mull
enter
push
jecxz
stos
in
movsl
sub
test
stos
add
andb
pop
out
jp
imul
aas
lcall
mov
xchg
inc
in
or
orb
arpl
fs
mov
cmp
pop
les
push
dec
icebp
jecxz
mov
cmc
sbb
adc
sub
aam
movsb
out
addl
and
pop
imul
jno
ror
inc
push
test
sub
jecxz
call
pop
jae
and
push
pop
into
dec
mov
dec
dec
into
in
mov
test
cmp
push
add
outsl
test
inc
lret
js
mov
inc
or
popa
dec
and
hlt
outsb
rol
and
adc
out
and
scas
mov
andl
pushf
in
scas
loope
in
mov
addr16
xlat
jp
jbe
test
mov
repz
cmp
pop
mov
pop
xlat
and
cmpsl
jno
add
ljmp
dec
or
or
add
out
test
ss
lar
pop
jb
pop
les
push
outsl
gs
inc
adc
pop
int
adc
leave
dec
ficomps
pushf
lahf
int3
push
cmp
mov
jle
ret
inc
sbb
xchg
dec
lcall
loop
rep
and
sti
xor
adc
adc
jp
loope
jecxz
pop
imul
inc
shr
vandnpd
pop
in
dec
mov
dec
jecxz
inc
add
push
insb
or
stos
sub
push
cmp
jb
nop
xlat
movsl
repnz
cmp
inc
mov
sbb
inc
pop
ret
xchg
lods
nop
xchg
inc
daa
out
dec
cmpsb
inc
xchg
cwtl
sti
pop
lods
aas
je
pop
inc
jbe
jne
xor
mov
sub
or
int3
rcll
insl
dec
dec
aam
rcrl
cmpsl
xchg
sub
add
sub
pop
adcb
and
cmp
clc
pop
stc
jne
mov
test
ds
sub
in
call
pop
divl
mov
dec
fdiv
xlat
hlt
ret
dec
xchg
xor
adc
add
xor
sbb
sarl
ret
jbe
test
sbb
pushl
xchg
aad
xchg
aas
sub
into
imul
dec
insl
sti
xchg
repnz
in
scas
out
cwtl
push
pop
push
aam
cmpsl
adc
xchg
inc
inc
gs
pop
sbb
pop
lds
out
pop
xor
pop
sti
lods
pop
mov
pop
outsl
pop
mov
lret
aaa
mov
or
mov
jge
popa
ljmp
mov
scas
rcrb
xchg
insb
loop
shrb
dec
stc
pop
mov
add
jle
ljmp
jno
xchg
push
and
jbe
aas
repz
pop
jbe
push
mov
insb
sbbl
add
hlt
sar
mov
xor
sbb
aam
mov
push
cmpsl
aaa
sub
cmp
mov
fdivrs
jle
shlb
test
enter
sbb
and
cmp
je
cli
aad
fisttpl
fs
in
sbb
xor
add
out
sub
bnd
imul
hlt
rcrl
push
cmpsb
push
cmp
xor
dec
in
ja
inc
dec
mov
push
in
push
lods
add
popf
lock
nop
xlat
notl
mov
loop
jnp
inc
test
mov
adc
and
sbb
pop
push
mov
out
popf
ja
cmp
inc
lods
fisubl
pop
jg
push
cmp
inc
aas
stos
fistps
ds
outsl
pop
lea
and
mov
mov
or
movsl
fadds
inc
in
add
push
sbb
or
push
xor
arpl
and
cld
push
xchg
pop
inc
cmp
mov
xor
imul
cmp
mov
nop
xor
fimull
pop
push
lahf
mov
jno
push
push
je
inc
incl
pop
inc
lds
sbb
fldl
rolb
outsb
jno
enter
ror
xchg
cltd
fcmovu
jge
inc
push
jo
push
push
test
in
push
aam
pop
daa
into
addl
dec
cmp
adc
or
sbbl
jne
shll
sbb
cmp
or
pop
enter
scas
ja
mov
or
mov
xchg
lret
repz
fmuls
daa
cmpb
mov
and
pop
sub
imul
sub
lods
jno
mov
lds
repnz
cs
popf
rorb
out
xchg
mov
mov
sub
pop
imul
jecxz
faddp
jnp
rcrl
mov
xchg
jno
inc
cmp
xchg
in
pop
mov
dec
test
clc
jae
and
add
mov
push
lock
pop
testl
cwtl
nop
mov
pop
je
cs
jno
mov
cltd
movsl
cmp
adc
arpl
sbb
gs
ret
push
std
into
push
mov
fdivl
sub
xchg
fisubrl
out
roll
push
ret
in
shlb
jnp
fsubrl
mov
imul
fidivs
sbb
rcrb
mov
aas
mov
repnz
add
ret
js
enter
jge
xacquire
jne
xchg
or
outsl
and
sbb
jnp
pop
je
push
jmp
push
out
sbb
sub
add
pusha
dec
lea
push
aas
shll
loope
xor
mov
pop
sbb
lock
movsb
int3
sbb
cld
outsl
pop
repnz
and
enter
fwait
andb
xor
hlt
sbb
cmpsb
les
clc
mov
pop
lcall
cmp
cmpsl
cltd
jecxz
mov
or
repz
xor
push
movlps
xor
sub
mov
daa
push
xchg
sub
push
and
dec
js
inc
or
sbb
dec
cmpb
aad
data16
mov
cmpl
push
fdivrp
xor
mov
cmpl
decl
paddsw
icebp
sub
cmp
mov
aad
ret
loopne
incb
xchg
fisttpl
std
es
mov
sbb
jl
mov
test
add
inc
mov
ljmp
in
popf
pop
adc
or
outsl
stos
and
xor
popa
stos
mov
add
xor
push
js
out
shrb
jge
scas
xor
pop
sarl
mov
jle
imul
mov
out
nop
xor
pop
jnp
jno
stos
mov
mov
push
idivb
mov
xorb
das
mov
or
pop
cmp
pop
ja
pushf
mov
fwait
cltd
cltd
add
jl
in
sub
pop
fdivrs
mov
cmp
sub
imul
cmpsl
inc
cmpsb
xlat
mov
es
ret
repnz
push
lcall
add
push
lahf
adc
ljmp
sub
dec
pop
fnsave
outsl
roll
stos
shlb
outsb
int3
xlat
and
ret
sub
das
mov
outsb
add
testb
push
aas
sti
mov
push
lods
es
sti
lahf
out
dec
repz
xlat
and
outsl
fistpl
and
inc
mov
aad
out
test
xchg
xchg
int3
push
insb
outsl
fwait
ss
mov
out
sbb
das
int
andb
dec
cmp
pop
push
ret
pop
push
rcrb
insl
test
test
sahf
repnz
or
movsl
mov
or
mov
mov
jbe
jno
cmp
xchg
test
push
mov
cmpl
out
and
stos
aad
lds
fldenv
jne
addr16
cmp
inc
fistpl
imul
loopne
mov
fs
test
jns
and
pop
ret
xor
xor
aam
sub
and
cld
imul
imul
cmp
cmp
roll
fs
jle
inc
sub
inc
aas
outsb
sub
lea
stos
inc
mov
mov
movsl
out
dec
mov
ds
mov
fnsave
mov
mov
push
inc
jmp
mov
ljmp
add
ret
cs
cltd
jl
mov
mov
xor
add
out
dec
push
xchg
in
mov
and
jo
or
adc
ss
mov
roll
scas
aad
sub
inc
xchg
inc
sbb
pop
pop
mov
test
push
sbb
adc
mov
lock
or
leave
insl
pop
cli
xor
movsl
and
mov
inc
or
fwait
jnp
push
pop
adc
stos
out
aaa
test
fiadds
inc
and
or
aad
mov
or
or
inc
push
daa
jl
jecxz
push
jg
cmc
or
andb
push
pop
fsubrp
cmp
lcall
push
dec
sbb
enter
fwait
aaa
xchg
data16
inc
push
adc
mov
dec
xchg
mov
or
jle
aad
rcll
notb
mov
sub
push
shll
jnp
xor
mov
je
mov
lcall
pop
add
outsl
cmp
outsl
mov
aad
push
clc
out
xor
loop
pcmpgtb
shll
and
mov
sub
repz
push
inc
add
mov
inc
movl
cmp
push
adc
xchg
xor
rclb
cmc
lods
add
sub
outsb
fdivrs
std
xor
scas
pop
pop
or
adc
add
ljmp
int3
xchg
adc
je
pop
jb
xchg
dec
mov
push
loop
mov
ret
mov
cwtl
pop
les
es
aas
lods
jle
icebp
jge
xchg
scas
mov
add
mov
pushf
fsubp
dec
mov
dec
hlt
xor
pop
sbb
cmp
sub
sbb
or
fldcw
mov
clc
jl
mov
mov
sub
push
dec
call
cmpsb
lds
pusha
push
dec
shll
dec
xor
rol
into
mov
popa
or
lret
dec
int
jle
xor
ja
dec
jecxz
enter
loope
sti
pop
add
gs
push
add
dec
lcall
jb
mov
push
in
je
dec
or
dec
nop
mov
test
jecxz
ss
fcmovb
nop
mov
or
or
test
movsl
push
pop
insl
push
jmp
test
iret
add
xchg
daa
xor
out
inc
dec
inc
inc
pop
pop
ds
inc
cli
imul
and
mov
jbe
addr16
push
test
jecxz
mov
icebp
dec
pop
pop
int3
xchg
int3
notb
or
mov
ret
addr16
sub
mov
xchg
add
repz
add
jno
pop
adc
test
xchg
add
jo
out
mov
pop
arpl
fidivs
filds
push
xlat
mov
sarl
mov
cmp
push
jo
sub
mov
jmp
leave
xchg
fcomps
cmpsb
dec
outsb
stos
mov
sub
sarb
pop
ror
sub
movsb
hlt
mov
xchg
and
adc
lds
xor
aas
push
mov
cmc
fs
hlt
ja
add
shll
add
loop
sbb
dec
out
shll
push
jl
lods
mov
push
aas
xor
repz
mov
adc
aam
stos
push
jge
push
fiaddl
mov
jle
mov
out
mov
mov
or
stc
popa
xchg
fwait
out
jge
movsl
in
test
or
inc
enter
sbb
xchg
inc
xchg
push
mov
pushf
sbb
lds
fnstsw
fcmovb
movsb
cmc
mov
test
pusha
jp
jle
xor
jmp
mov
aas
fisttpll
cmp
addl
cmp
inc
das
fists
mov
sbb
int3
and
and
sbb
mov
xchg
icebp
jno
pop
inc
mov
sub
sbb
mov
push
sub
pop
lcall
cmp
cmp
in
jns
pop
add
sub
in
mov
mov
dec
inc
loope
pop
adc
lret
push
sbb
push
cld
pop
mov
jbe
sahf
imul
in
popf
dec
lret
mov
aad
dec
mov
mov
nop
push
sbb
lahf
cmp
ljmp
sbb
jnp
cmp
rcl
and
jg
ss
pusha
daa
push
dec
sbb
loop
test
and
jle
ret
loop
ror
mov
data16
cmp
cmp
aam
jnp
add
pop
ljmp
add
in
enter
or
cmc
sti
lods
jne
jl
test
mov
adc
lods
dec
lds
shrb
and
addr16
inc
cmpsb
dec
xor
sbb
dec
xchg
repnz
leave
insb
lret
int3
lret
jnp
cwtl
or
inc
psadbw
dec
ret
out
mov
jg
adcb
jecxz
xchg
pop
cwtl
cli
mov
xchg
jg
aas
in
testb
xchg
xor
pop
and
xor
rcrl
pop
add
pop
call
dec
push
scas
mov
incl
sti
gs
jmp
imul
cmp
loop
push
pop
inc
add
xlat
incb
arpl
mov
cmpsl
push
dec
mov
xor
push
arpl
mov
jg
out
pop
scas
pop
addr16
mov
insl
inc
sub
cmc
mov
push
fisubs
adc
cmp
pop
inc
inc
jno
dec
sbb
fcmovne
mov
insb
lock
xchg
pop
hlt
xchg
add
lods
adc
cmp
fwait
test
rcrb
ret
or
xor
sub
xchg
xorl
adc
xchg
mov
jb
or
test
lods
jecxz
sbb
repnz
jecxz
std
adc
call
in
cmpsb
sbb
scas
and
cli
inc
fnstenv
rcl
mov
shlb
add
sahf
sbb
push
clc
push
fmul
pop
rorb
dec
xlat
inc
pop
out
sbb
sarl
push
loop
cltd
or
int
jmp
xchg
fs
fdivs
add
cmp
cmp
mov
jle
test
out
dec
pop
cmc
cmc
lahf
inc
pop
or
inc
push
push
lds
sti
lret
xchg
sub
xor
repz
cmp
inc
push
pop
push
ljmp
push
call
ljmp
mulb
xor
aaa
mov
fstps
addr16
jb
out
pop
pop
mov
fwait
lret
xor
or
push
testl
pop
aas
decb
nop
insl
sarb
dec
js
cwtl
pushf
mov
sbb
pop
popa
sub
add
sahf
sub
icebp
rorb
dec
ds
aam
daa
mov
push
dec
mov
rolb
insl
push
aam
shlb
jb
lea
cwtl
pop
jle
or
aas
adc
push
lea
pusha
cltd
fcomi
xchg
jge
sub
add
lret
fidivrl
ret
push
dec
out
rorb
loop
leave
bound
stos
cmp
and
adc
push
jle
sub
pop
push
mov
in
outsl
and
sbb
mov
sbb
sahf
and
jp
out
loope
adc
lds
sub
fxch
mov
test
icebp
adc
test
imull
popa
loopne
ror
mov
mov
out
loope
jae
iret
inc
pop
pop
pop
jb
push
ds
inc
popf
xchg
rolb
push
pop
lds
pop
insb
mov
push
pushf
stos
andb
mov
fwait
mov
sbb
cmp
cmp
sbb
jmpw
or
test
sarl
pushf
push
mov
loope
imul
adc
sub
jmp
imul
xchg
testl
out
in
lock
jg
inc
pop
lods
mov
icebp
mov
mov
push
xor
shlb
scas
mov
and
mov
enter
cli
mov
ret
sahf
mov
pushf
mov
xchg
xor
prefetch
loopne
data16
add
cmp
aas
jl
shrb
int3
mov
cmp
inc
add
push
rorb
cmp
rcrb
adc
mov
dec
push
xchg
pushl
cli
pop
push
cmpsl
rcrl
jle
fimull
cmp
and
inc
jns
and
sbb
dec
outsl
cltd
sub
rorl
sub
lahf
push
filds
push
or
cli
in
and
mov
lea
add
insb
and
cmp
adc
aam
movsb
pop
push
enter
add
out
or
pop
xor
jge
hlt
mov
pop
pop
es
pop
push
jecxz
ja
sub
aad
mov
rcll
xor
sahf
dec
je
push
stos
movsb
and
pop
add
sub
shrb
jmp
lret
out
je
pop
lret
add
icebp
mov
ss
inc
jmp
fdivrs
mov
adc
test
ficoml
mov
cmp
xchg
or
xor
add
push
or
cmc
cmp
je
lods
lcall
imul
pop
cli
sub
add
icebp
dec
xor
loop
sub
fldenv
jl
imul
in
rorb
and
mov
insl
lcall
loop
aas
dec
inc
sub
ret
stc
sbb
sub
push
sbb
inc
xor
jp
in
test
jle
xor
pop
cmp
stc
mov
dec
jnp
rorb
rcll
rcr
push
dec
lods
sahf
cltd
xchg
dec
test
scas
sbb
adc
push
dec
cmpsl
lock
adc
xor
pushf
or
sti
adc
jbe
jb
adcb
fiaddl
testb
lahf
sub
sbb
xor
mov
or
adcl
mov
xchg
sbb
gs
xchg
jle
xchg
mov
mov
add
mov
push
mov
int
int3
mov
addr16
popa
mov
aad
loop
data16
daa
test
dec
movsb
repz
iret
lcall
movl
lcall
jle
es
repnz
inc
fiaddl
sub
test
int
mov
sub
sub
mov
add
repz
mov
jno
nop
data16
and
inc
shl
in
inc
xchg
mov
mov
push
pop
jl
pop
mov
lds
cltd
enter
ja
mov
and
in
jb
add
pop
fcmovbe
negl
fnstcw
jno
incb
inc
mov
pop
push
test
push
sbbb
sbb
pop
and
sbb
and
pop
mov
cmp
cs
pop
dec
and
jl
inc
jmp
mov
sbb
je
jae
or
in
loop
inc
and
lea
jae
push
mov
jo
sub
loop
add
fucomp
bound
fstps
pop
out
adc
shlb
jl
fidivl
in
lock
fwait
pop
xchg
daa
loopne
and
out
fisttps
lods
pop
inc
sbb
inc
jno
outsl
cwtl
push
mov
and
mov
sarl
pop
loopne
push
sub
flds
test
rorl
jns
and
ljmp
out
aad
loopne
test
add
pop
shrb
repz
adc
cltd
jge
or
fwait
add
arpl
rclb
enter
faddp
mov
xor
loop
xchg
or
bound
mov
mov
enter
adc
adc
nop
dec
popa
shll
shlb
add
popf
push
stc
cmp
repnz
test
add
sbb
jns
adc
xchg
lret
movsb
shrb
jne
imull
jnp
cmpsb
mov
imul
jmp
lds
xchg
notl
jecxz
loope
into
das
xor
cmp
mov
inc
inc
cmp
pushl
add
xchg
std
mov
add
insl
xchg
and
jg
cmpb
sbb
cwtl
imul
sahf
cmpsb
jbe
mov
cld
sbb
addb
push
push
daa
jnp
lahf
dec
fcompl
push
lahf
adc
sub
mov
pusha
mov
mov
aam
testb
loop
in
push
mov
insb
xor
orb
lcall
sti
cmc
fucomi
jno
imul
outsl
jb
int
jle
dec
pop
sbb
arpl
ja
mov
jbe
add
cmpsl
jp
mov
pop
movsb
les
cmp
push
lret
fs
out
or
cmpsl
dec
mov
add
mov
fldenv
adc
xor
bound
and
out
movsb
jecxz
cltd
push
sbb
mov
negb
loopne
outsl
aad
scas
clc
cmpl
outsl
loop
lcall
scas
pop
test
add
add
mov
mov
sti
fiadds
xchg
mov
sbb
in
out
aas
sbb
loop
xor
fstpt
dec
mov
xchg
scas
enter
push
mov
inc
push
pop
mov
lret
add
dec
dec
jmp
int
mov
mov
push
fwait
dec
push
jmp
push
inc
pop
mov
xor
outsb
enter
out
mov
or
sub
inc
in
pop
insl
adc
jmp
mov
mov
or
mov
cs
push
aad
in
stos
jl
jns
sahf
fwait
lea
xchg
repnz
jmp
mov
xchg
mov
sub
divl
and
adc
mov
outsl
movsl
aam
pop
sbb
stos
mov
push
mov
adc
jae
sub
pop
lret
sub
sub
mov
fwait
sub
loopne
dec
movsb
test
lcall
mov
incb
mov
test
dec
inc
cmp
and
hlt
mov
and
xchg
ror
or
gs
lret
xor
cmc
mov
mov
pusha
mov
fwait
orb
sbb
js
ror
enter
nop
jne
mov
movsl
daa
and
cs
test
cmp
fwait
dec
and
inc
data16
jbe
mov
int3
adcl
mov
cmc
sub
int3
push
push
fists
push
pop
cmpsl
shll
inc
or
mov
fldcw
sbb
jl
lods
ret
pusha
adc
sub
les
pop
dec
loop
daa
sahf
test
or
in
outsl
dec
pop
inc
xchg
adc
lcallw
adc
ret
in
sahf
mov
js
cmpsl
repz
adc
mov
xchg
xchg
jl
adc
cmp
push
mov
and
out
dec
loope
inc
ret
cltd
dec
mov
pop
das
and
dec
aas
pop
sbb
and
test
sub
push
cld
adc
sub
push
add
push
xchg
xor
inc
mov
adc
push
fs
sbb
mov
jb
call
out
sbb
dec
in
or
pop
sub
lcall
add
xor
sbb
enter
mov
inc
cmc
fists
aaa
lahf
cmp
pop
xchg
cld
movsb
aas
add
insl
cwtl
adcb
or
lods
fs
push
mov
mov
xchg
leave
cmp
pop
add
push
add
jmp
stos
jmp
sti
scas
xlat
inc
jl
mov
lret
sbb
push
adc
lcall
xchg
lods
add
std
pop
das
fidivrs
or
dec
std
stos
fstpl
mov
xor
fadd
cltd
add
dec
test
sub
push
cmp
cwtl
jmp
xchg
dec
mov
nop
xchg
shlb
jae
sub
adc
nop
xorb
inc
xchg
push
pop
jae
dec
jae
xor
loop
out
in
popa
mov
jb
fcomip
out
jnp
out
xor
cld
cmp
mov
insb
cmp
mov
movsb
or
pusha
jnp
je
mov
incl
push
dec
bound
pop
and
xor
mov
inc
shlb
shrl
push
call
mov
cwtl
xchg
adc
ficomps
loopne
pop
xor
stos
mov
cwtl
dec
aaa
divb
mov
js
mov
pop
cmc
inc
or
inc
pop
mov
sub
push
or
cmp
push
inc
sbb
adc
int
insl
daa
add
add
xchg
in
mov
cltd
add
pop
ss
and
les
ja
in
pushf
test
int3
pop
dec
mov
pop
jno
cli
cmp
push
aaa
add
cltd
daa
out
or
test
cmp
dec
mov
lods
dec
mov
dec
imul
in
and
cwtl
inc
test
lret
aas
out
push
adc
fbstp
sti
sbb
mov
sub
cmp
ret
repnz
lds
push
mov
dec
push
das
inc
push
xchg
cmpsb
shlb
cmpsl
scas
roll
rolb
sbb
je
repz
mov
inc
sub
sub
ljmp
stc
or
clc
icebp
cmp
sbb
mov
enter
pop
das
insb
push
lea
mov
es
jb
jle
push
popf
lahf
inc
stos
jb
xor
in
inc
mov
hlt
cmp
mov
cmpsl
fistpl
push
pop
inc
pop
jne
movsl
cmc
insb
sub
fs
sub
rorb
ret
in
sbb
xchg
loop
xchg
faddp
xor
push
mov
xor
add
repnz
dec
inc
jnp
out
sti
inc
lret
mov
push
inc
xor
push
mov
or
lock
lods
dec
int3
enter
inc
aam
mov
mov
add
and
in
push
cmp
or
xchg
stc
into
mov
lcall
test
adc
inc
xchg
fnsave
push
nop
out
int
cmp
ljmp
cld
xor
stos
mov
lret
xchg
fbld
addr16
cmp
mov
out
jno
jnp
lods
das
mov
std
test
jo
push
test
test
add
idivl
js
call
cmc
adc
fmuls
insb
lret
mov
daa
fsts
adc
jns
mov
adc
int3
jne
xchg
or
sbbl
dec
push
test
es
lods
lret
mov
push
subb
xchg
repz
xchg
imul
lret
xchg
sahf
outsb
mov
lcall
pop
frstor
add
adc
or
pop
mov
int3
pop
cmp
aaa
mov
xlat
lods
in
or
call
dec
aaa
lods
cmpsb
mov
shr
lods
jne
mov
cwtl
shll
sbb
cmpsl
jge
pop
mov
xchg
mov
iret
xor
xchg
insl
cli
popf
adc
jbe
in
mov
mov
in
out
loop
mov
lahf
jl
jle
test
mov
imul
jl
inc
inc
faddl
inc
enter
jge
mov
popw
stc
clc
push
mov
lret
xorb
dec
xor
jp
sbb
mov
pop
dec
mov
and
jbe
adc
adc
nop
ret
popf
mov
adc
adc
push
das
lahf
je
outsl
ret
inc
and
je
inc
cwtl
xchg
xchg
mov
dec
jp
sti
mov
insb
sub
sbb
lret
lcall
jl
fwait
and
adc
in
repz
sub
in
mov
repz
test
int
mov
inc
xchg
dec
loopne
lods
loopne
mov
fbld
out
js
mov
cmp
addr16
push
lahf
gs
je
pop
mov
dec
xorb
xor
or
ds
sahf
lods
mov
xchg
std
mov
cmc
and
mov
inc
pop
xor
push
fnsave
aam
out
cmpsb
orl
push
dec
xor
dec
leave
push
aas
add
cmp
lret
sbb
mov
inc
fcmovnbe
inc
mov
adcl
mov
ja
jnp
stc
pop
cli
dec
lods
fs
mov
repz
mov
xchg
cmp
xchg
pop
out
push
test
clc
repnz
and
negl
in
idivb
outsb
push
imul
ja
lcall
ds
xchg
dec
or
inc
and
mov
adc
test
mov
dec
or
mov
mov
mov
adc
or
cmpsb
in
jp
dec
pop
jmp
jmp
mov
jl
cmc
std
fcompl
xchg
ljmp
out
mov
out
jae
and
repnz
jl
mov
and
dec
aad
push
hlt
push
add
ret
cmp
leave
scas
add
mov
sahf
das
cld
jmp
lret
inc
mov
xorb
fs
mov
pusha
sbb
push
mov
add
sahf
xchg
push
roll
adc
roll
dec
clc
jecxz
imul
add
add
scas
cmp
ret
imul
shlb
in
mov
stos
scas
scas
mov
add
andnps
push
mov
adc
movsb
lods
xchg
and
js
xchg
bound
xchg
loopne
imul
clc
lret
insl
push
pop
xor
mov
add
push
inc
popf
jp
lods
aaa
push
mov
jl
dec
hlt
sarb
adc
cmp
call
out
addl
popf
push
push
mov
push
adc
push
adcb
arpl
ror
sub
and
jp
add
imul
punpckhbw
and
in
push
and
inc
icebp
addl
mov
fxch
xlat
nop
ret
push
stc
and
xchg
aad
add
repnz
mov
pop
xchg
inc
ljmp
sahf
jl
nop
add
dec
jl
sbb
clc
xor
testb
inc
pop
out
mov
pop
and
pop
jno
dec
int3
xchg
fists
jge
mov
cmp
add
and
mov
dec
pop
jg
inc
repnz
outsb
add
adc
loope
out
sub
aaa
sbb
pusha
add
add
jg
repnz
out
inc
icebp
jp
dec
call
and
subb
insl
fsubrs
out
mov
xor
push
imul
or
fdivp
xchg
sub
add
insb
cwtl
xor
push
mov
mov
mov
push
dec
dec
jb
fcompl
popf
in
mov
shlb
repz
push
das
fs
insl
ljmp
add
inc
scas
jge
xchg
repnz
nop
mov
fmul
inc
popf
pop
mov
repnz
xor
lahf
dec
pushf
repz
dec
addr16
push
insl
and
sbb
fcos
pop
inc
xchg
pop
jnp
sub
lods
ss
inc
or
outsl
xchg
pop
or
xchg
jnp
icebp
jl
xchg
aaa
divb
fs
pop
xlat
movl
in
ja
jae
xor
inc
dec
dec
adc
outsb
or
dec
pop
xchg
inc
test
aas
cwtl
pop
or
in
shlb
loope
test
push
stos
pop
sahf
cmp
xchg
ret
fsin
jo
sbb
mov
mov
enter
xor
lcall
jmp
fwait
mov
or
pusha
aaa
lds
cs
dec
mov
sub
stos
fsubrl
mov
jbe
jmp
stos
out
jo
xchg
imul
xor
fidivrl
repnz
jne
add
pop
push
daa
std
sub
stc
push
mov
test
mov
add
inc
push
push
adc
imul
sbb
sbb
data16
pop
hlt
xor
mov
mov
mov
adc
ficompl
xor
jge
stos
cmp
stos
mov
sbb
repz
stc
xchg
xchg
mov
ds
pop
mov
push
jle
push
mov
push
aam
int
xchg
xchg
sub
sbb
cld
into
outsb
fildl
pop
call
sub
in
mov
sbb
test
fwait
lds
pop
xchg
int3
xor
dec
shlb
sbb
int
dec
int3
or
dec
adc
stc
cli
shl
xchg
adc
ret
adc
sbbl
aam
jecxz
fists
in
xor
push
cs
push
in
or
fwait
xor
dec
movsl
test
outsb
nop/reserved
push
andl
inc
repnz
mov
iret
add
mov
shlb
pop
fildl
out
int
xchg
mov
inc
mov
sbb
mov
loop
mov
sub
idivl
sub
xchg
and
in
jbe
pop
jne
dec
out
push
push
fisttpl
push
and
pop
xor
sbb
mov
cmp
in
or
mov
insl
idivb
movsl
or
ja
ljmp
xor
mov
addl
pop
xlat
pmaxsw
add
mov
dec
and
in
xchg
xchg
xor
push
aaa
pop
ficoms
mov
imul
mov
dec
xchg
ficoms
test
mov
sbb
mov
es
test
enter
mov
xorl
rorl
xor
and
xor
mov
bound
insb
jno
repz
int
jp
out
mov
insl
and
stos
popf
or
aam
mov
jne
int3
or
xor
rcrl
jns
bound
ficompl
movsl
test
mov
jnp
test
lea
xor
pop
jbe
dec
out
jl
xchg
adc
xchg
sbb
repz
mov
or
addb
into
cmc
jnp
push
cmpl
and
pushl
call
imul
iret
mov
inc
xor
pop
jbe
hlt
repnz
enter
cld
mov
lods
mov
out
push
enter
fcomi
cmp
shr
lods
shlb
in
sub
push
popa
sub
out
test
cmpsl
and
das
mov
lock
mov
sub
mov
popa
ficoms
sub
int
or
fsubl
push
rcl
rcrl
andl
dec
fwait
cmp
sub
ljmp
xor
jo
sub
mov
sub
sbb
ja
leave
loop
mov
imul
jns
mov
sub
cld
jae
xor
or
inc
int3
popf
and
push
mov
repz
aam
mov
test
stos
das
sub
cmp
imul
ficoml
mov
movb
push
xor
into
push
inc
cmpsb
xchg
test
push
and
loop
inc
mov
imul
ss
test
push
mov
or
add
fistpll
jb
es
sub
or
dec
mov
popa
mov
pop
xor
mov
enter
mov
in
sub
add
in
jno
push
and
jmp
xor
inc
cli
in
insl
jmp
push
mov
dec
movsb
and
adc
add
mov
xchg
cmpl
mov
jne
paddw
js
mov
fcoml
xor
pusha
cmp
xchg
sbb
xorb
ficompl
lret
in
hlt
fidivrs
scas
out
fldcw
and
xchg
es
xor
lds
push
mov
scas
aam
ficompl
outsl
sub
out
imul
adc
or
inc
cmpsl
movsb
jmp
jecxz
cwtl
test
xchg
mov
jae
and
sahf
ljmp
xor
jecxz
cwtl
add
jo
mov
test
iret
das
daa
pop
adc
pop
pusha
iret
test
lea
sti
cli
loope
stos
imul
pushf
sbb
cmpb
lds
leave
cld
lcall
dec
jb
xor
xchg
mov
adc
shlb
ds
int
adc
mov
inc
pusha
test
incb
incb
push
insb
cmovno
mov
fcoms
out
mov
xchg
pusha
mov
and
adcb
xchg
jns
jns
sbb
leave
decb
cld
mulb
movsb
shr
cmpsb
mov
fwait
vmwrite
ds
sub
xchg
stos
mov
hlt
loope
push
filds
test
sbb
mov
push
sbb
mov
ljmp
jno
sahf
xchg
faddl
loope
scas
daa
cld
xor
mov
cmp
inc
aas
jo
mov
shll
shrl
bound
fisttpll
testl
push
cmp
pop
pop
xchg
repnz
push
inc
fs
cmp
push
loope
mov
or
adc
jmp
jns
mov
pop
jb
ja
cmp
push
sbb
cmp
and
and
jbe
push
test
hlt
les
cwtl
jl
inc
shrl
ja
xlat
dec
int3
rcrl
pop
repnz
pop
inc
pop
xchg
popf
insl
ret
inc
dec
lret
dec
dec
jmp
fdivs
stc
loope
jp
sub
pop
cmp
lea
cmp
fs
test
outsl
ljmp
pop
xchg
xchg
out
mov
stc
inc
cmpl
dec
cmp
mov
push
and
sbb
outsb
adc
mov
pop
into
xchg
mov
sub
jecxz
cmpsb
pop
mov
jle
cmp
das
mov
mov
cmp
jmp
in
daa
aam
dec
imul
je
add
mov
loope
in
cmp
movsl
loope
cmp
pop
jb
loop
push
out
push
mov
and
mov
data16
xchg
or
jns
cmpl
sbb
out
jnp
mov
push
lret
add
lcall
enter
es
lods
dec
int
adc
pop
mov
fstpt
push
nop
popa
lret
sub
inc
add
out
and
mov
sbb
and
hlt
pop
shr
push
js
ss
xor
sbb
fsubrl
nop
or
mov
mov
stos
or
sbb
xchg
aad
adc
xchg
mov
push
ljmp
xor
inc
jb
sbb
adc
push
and
outsb
stc
std
mov
test
mov
mov
dec
xchg
test
mov
lcall
out
xchg
sbb
adc
mov
pop
ja
jns
ja
imul
push
cmp
out
jno
mov
jl
cmp
cmp
call
xchg
xchg
es
mov
aaa
cwtl
mov
push
push
stc
outsb
xchg
pop
pop
push
add
push
lcall
psubb
push
sub
ljmp
jbe
popf
in
call
cmp
stos
pop
cmp
movsb
fs
lock
inc
rcrl
jo
popf
add
jns
push
add
sub
jp
faddp
lock
sbb
xchg
adc
and
adc
in
xlat
cmpxchg
dec
cmp
jne
fptan
in
stos
in
mov
add
pop
pop
cmp
lret
cs
fstl
shrb
std
or
ret
sti
outsb
dec
ss
inc
sbb
mov
fists
adc
xchg
mov
and
pop
dec
sub
cmpsb
pop
xor
dec
out
test
xchg
aam
shr
mov
lods
adc
aas
stos
dec
fs
hlt
sbb
push
mov
push
add
sbb
xchg
repz
loope
mov
mov
enter
ds
inc
fiadds
call
pop
repnz
clc
inc
daa
pusha
cmpsl
cwtl
mov
insl
xchg
dec
int
int3
subb
nop
mov
mov
loope
add
pop
mov
jecxz
pop
inc
xor
sub
iret
insl
inc
in
push
fisubrs
push
mov
jp
es
nop
adc
outsb
inc
sub
add
and
ret
dec
mov
sub
add
leave
dec
pop
push
sbb
pop
in
shr
gs
cld
inc
lea
add
and
in
movsl
in
mov
push
pop
adc
and
test
das
jo
inc
cmovs
jge
hlt
push
jecxz
xor
cmp
insl
or
and
push
inc
sbb
push
lahf
sub
sbb
lea
sbb
movsb
aad
or
and
out
mulb
cmc
pusha
insl
das
daa
scas
pop
push
fcoml
fisttpl
scas
inc
or
pop
xor
push
sub
xor
js
fwait
in
push
cwtl
xchg
xor
push
inc
mov
int3
xchg
jmp
and
xchg
fs
mov
mov
mov
ret
jb
pushf
stc
cwtl
cmp
pop
cmp
sbb
or
enter
shlb
ja
cmp
xchg
shlb
rcrb
out
mov
mov
and
fbld
xor
sub
pusha
inc
sub
and
dec
add
and
cmp
nop
cmp
or
or
sub
stc
popa
stc
fmull
stos
movsb
dec
sbb
jge
aas
aam
lret
mov
cmpsb
cmp
sbb
jecxz
mov
ficomps
or
out
jo
sbb
int
cmp
out
int
dec
out
mov
enter
mov
dec
xchg
loopne
jl
mov
ds
push
dec
insl
adc
mov
ret
pushl
adc
fisubrl
aaa
lock
xor
adc
in
jmp
in
ss
lahf
ss
pop
or
cmpsb
gs
aaa
out
push
jmp
cmpsl
sbbl
pop
jl
shlb
fisttpl
scas
or
mov
cmp
sbb
fcomps
test
mov
popf
pop
sub
nop
sub
sbb
aas
aad
shll
in
cmc
testb
insb
mov
icebp
leave
in
pop
adc
rcrb
and
rcl
jb
shrl
cmp
jg
pop
mov
rcl
mov
insb
cmp
jl
flds
jg
stos
pusha
sub
cmc
dec
fwait
mov
xor
mov
lret
and
stc
dec
cld
adc
dec
cwtl
testl
sub
pop
mov
push
call
sbb
fstps
mov
add
xlat
cmp
cmp
lods
jns
add
sub
sub
fcompl
mov
loop
sub
xchg
sub
and
mov
inc
sub
je
lret
mov
xor
add
ficomps
push
bnd
stos
add
ret
cmp
and
push
cmp
mov
sbb
call
scas
aaa
arpl
les
mov
add
in
out
push
mov
insb
xor
jp
aas
or
lock
sbb
sub
insb
fstl
xor
pop
in
dec
div
xorb
mov
and
mov
push
pop
pusha
pop
sub
enter
pop
addl
and
jp
aas
int
daa
push
pop
pop
pop
and
nop
aas
lea
scas
mov
outsb
xor
aam
jle
mov
stos
addr16
cmc
mov
and
int
cli
into
in
daa
ja
adc
xchg
pop
test
sbb
int
and
cld
cmp
aas
push
cltd
adc
mov
adc
inc
stos
push
and
mov
les
mov
call
test
mov
lods
xchg
repz
push
ret
xlat
dec
dec
cltd
push
add
and
clc
mov
int
pusha
pop
jne
add
adc
xchg
out
into
outsb
push
sarl
and
mov
or
shlb
xchg
mov
sti
loop
rclb
push
mov
lret
dec
sbb
pop
xchg
and
gs
push
fcmovnbe
mov
add
add
fildl
sub
push
out
enter
jmp
push
aad
lds
fcompl
adcb
ss
stc
or
jl
imul
pop
rcrl
or
inc
and
stos
cmp
arpl
pop
lods
add
add
jb
xchg
mov
cmp
mov
shl
add
cmpb
jl
pop
stos
inc
movsb
push
xor
arpl
into
mov
fisubl
jne
sbb
ljmp
int
aad
and
xor
add
mov
aas
xor
lret
imul
cmp
stos
push
rolb
xchg
gs
mov
mov
pop
out
andb
add
ret
jo
cmp
sbb
jp
lea
cwtl
lret
push
out
shlb
aad
insb
call
jge
cmp
pusha
cs
lea
aam
and
or
popa
inc
pushf
gs
das
test
test
xor
decb
push
jl
in
and
jg
pop
and
outsl
fwait
cmp
mov
xor
push
inc
iret
mov
clc
ret
mov
in
out
or
jl
sub
aas
ds
rclb
mov
pushf
mov
ret
fs
jge
add
pop
out
adc
leave
inc
daa
inc
dec
mov
popa
or
push
movsb
out
pop
adc
or
add
shll
imul
push
and
mov
int
xchg
out
pop
inc
ficoms
xchg
adc
inc
dec
repnz
add
dec
shlb
xor
add
pop
sbb
and
stos
dec
sub
inc
rorl
mov
xchg
sbb
out
dec
mov
fstpl
push
push
dec
in
adc
test
into
jge
xchg
loopne
adc
xchg
cli
pop
mov
movsb
call
mov
pop
in
cmpb
imul
outsl
mov
add
push
loope
cld
jbe
pop
mov
sub
add
mov
and
lods
or
sbb
jg
dec
lea
or
and
bound
dec
jnp
icebp
adc
mulb
pop
mov
fstl
cmp
adc
test
fwait
mov
push
repz
mov
sbb
stos
repz
cmp
xlat
roll
add
mov
mov
rcll
clc
aaa
push
lds
shll
xor
push
movsb
jnp
jne
push
adc
imul
xchg
or
out
std
lret
mov
dec
cmp
and
pop
out
call
lret
cmp
dec
dec
or
mov
repnz
daa
and
test
in
mov
xchg
push
xor
into
popa
mov
ljmp
aas
push
dec
push
mov
outsl
mov
jmp
lods
gs
es
lods
mov
data16
xchg
mov
pusha
mov
and
fcompl
add
add
frstor
dec
cmp
mov
loop
or
push
pushf
mov
ja
mov
lds
lods
jmp
mov
pop
scas
lock
movsb
movsl
and
lock
sahf
cwtl
cwtl
adc
push
cmp
jbe
popl
out
xchg
jbe
and
lahf
push
repnz
jo
inc
dec
mov
mov
cli
mov
in
cld
jmp
out
jge
sarb
out
aaa
lahf
int
push
ret
jbe
mov
int
jg
mov
in
jbe
jb
leave
mov
aam
push
lock
mov
push
xchg
iret
add
repnz
and
fmull
lcall
inc
and
inc
xchg
adc
and
push
xor
and
popf
xor
jecxz
pop
push
fstl
xor
jg
es
xor
push
xorl
mov
arpl
add
adc
idiv
push
cs
dec
lcall
rolb
adc
adc
popf
cmp
fistps
cmp
nop
pop
insb
dec
push
pop
sahf
rorl
and
dec
ds
hlt
jnp
insl
push
sbb
xorb
scas
in
cld
push
add
adc
fs
idivl
or
jmp
cs
mov
mov
je
ss
jno
cmp
xchg
jo
lahf
sqrtps
inc
sahf
cwtl
jl
clc
rorb
or
daa
lret
aaa
fneni(8087
ljmp
movsb
inc
stos
leave
popa
or
enter
sub
test
cmp
xchg
inc
notl
scas
jp
xchg
fnstsw
jnp
xor
mov
push
mov
stc
test
or
out
pop
popa
neg
aas
std
sub
xor
xor
stos
or
aas
ds
sbb
fistpl
xchg
mov
cmp
xor
mov
out
sub
mov
sahf
iret
push
push
icebp
popa
fucomp
push
jno
mov
loop
test
pop
cli
cld
sti
cwtl
jae
rorl
xchg
bound
sbb
jnp
adc
rcrl
ljmp
sbb
pushf
or
mov
lock
test
out
pop
insb
jmp
bnd
pop
rcll
aas
and
cmc
mov
xor
pop
add
xor
sbb
popa
test
icebp
lret
mov
repz
xor
jg
cmpsl
cli
les
gs
cmc
insb
or
inc
stos
les
inc
clc
and
dec
xlat
popa
mov
mov
xor
subl
xchg
jo
sbb
mov
lods
andb
xchg
inc
lahf
stos
inc
mov
mov
jns
inc
fsubp
rorb
add
xchg
js
mov
mov
cltd
jl
pushf
js
jg
clc
das
mov
daa
cltd
sti
xchg
fmull
pop
pushf
mov
in
leave
and
dec
pop
mov
insl
cmp
xchg
pop
int
ret
xchg
aaa
dec
jge
or
dec
and
sub
daa
scas
push
xlat
xchg
cld
pop
popf
and
shll
fsubrl
and
or
xchg
ret
mov
aaa
jns
repz
sti
dec
push
sub
jmp
imul
int
jg
orb
sbb
push
bound
je
mov
push
stos
xorb
stos
cmp
fsubrl
sub
lret
aas
repz
adc
add
push
sub
gs
out
adc
pushf
and
fwait
ret
cld
push
jno
aad
or
add
movsb
in
in
in
rolb
pop
loope
mov
imul
sub
fstps
in
sbb
repz
jne
add
pop
out
cli
jnp
and
test
inc
push
clc
test
mov
inc
xchg
sub
xor
mov
sti
jns
ljmp
pop
clc
pushf
decl
cld
xor
repnz
or
pusha
jno
shll
fcoms
jle
mov
push
les
or
dec
shr
cmp
stos
xor
je
ret
dec
pop
jmp
loopne
adc
xchg
pop
bound
cmp
movsl
les
cmp
arpl
stos
xlat
sub
push
mov
jo
sub
ret
fiadds
loop
ja
mov
rcrb
and
in
inc
push
loop
cmp
jne
xorl
lods
lds
jnp
mov
add
adc
adc
mov
lea
ret
out
bound
push
sub
xlat
fcomps
stc
sbb
das
mov
jge
mov
jecxz
test
dec
jb
pop
lods
pop
lret
pop
mov
fs
sahf
push
stos
adc
ret
dec
mov
cmp
loope
inc
lds
lods
lret
pop
fisttpll
sub
lea
dec
test
mov
or
rclb
inc
cmp
aam
sub
jo
sub
dec
adc
inc
lret
pop
vmwrite
aam
std
shll
sbb
push
mov
xor
add
fsub
ljmp
call
adc
push
sahf
ja
lcall
pop
fldenv
xchg
push
dec
popa
lods
movsl
mov
fiaddl
loopne
add
xchg
data16
mov
dec
in
ljmp
lahf
out
rcrl
imul
and
rolb
sbb
dec
jne
inc
ss
mov
cmp
mov
push
mov
jmp
dec
mov
popf
out
decl
push
adcb
fdivp
add
sbb
mov
sti
jle
aam
arpl
sbb
push
int3
out
adcb
loope
or
arpl
vpacksswb
mov
add
clc
inc
jge
and
or
loop
imul
push
pop
xchg
or
sti
mov
subl
sbb
add
cli
and
mov
pop
arpl
mov
fisubrl
xlat
adc
popf
mov
ja
cld
push
sti
mov
jnp
dec
ja
jecxz
popf
shll
sbb
mov
mov
adc
pop
inc
dec
inc
cmp
fmulp
ret
mov
loop
xchg
fisttps
imul
cld
mov
mov
inc
and
xchg
sbb
xor
sbb
sbbb
jp
or
addr16
stc
insl
xor
std
out
aaa
pop
ljmp
mov
mov
shrb
mov
sbb
ja
add
aad
pop
sub
mov
push
push
cltd
ficompl
in
aad
mov
pop
xor
jns
fistl
ja
in
out
lock
ret
out
adc
xchg
popa
push
or
xor
mov
aaa
cwtl
cmp
mov
inc
add
jecxz
adc
mov
fadds
push
lret
jne
sbb
xchg
mov
jle
cmp
mov
pop
mul
or
in
rcr
rclb
sbb
les
popa
inc
ss
pop
lcall
ret
sbb
push
inc
pop
mov
fidivrs
dec
notl
push
push
push
pop
sub
repz
mov
cs
imul
or
lds
mov
and
sar
jecxz
fsubrl
xchg
lret
pop
jp
inc
jle
shlb
cmp
inc
and
dec
out
pop
add
rolb
rcll
push
mov
push
xor
jb
imul
lret
push
mov
mov
push
lods
jl
insb
jecxz
nop
mov
mov
xor
aad
xor
cmp
xchg
or
out
xor
sahf
out
jmp
or
mov
insb
sti
pushf
cs
pop
je
sub
push
push
loopne
push
push
inc
stos
call
pop
jmp
roll
sbb
push
pop
xchg
leave
pop
ljmp
and
and
in
cmp
jmp
mov
dec
dec
mov
sarl
repz
add
insb
fcomps
pop
orb
andb
jp
rclb
cli
lret
ret
jns
in
repz
leave
pop
sbb
incb
jo
mov
jbe
call
pop
lock
jne
inc
push
arpl
divb
mov
popf
mov
andb
mov
xchg
dec
in
fcomp
decb
test
pop
mov
adc
cmp
xor
adc
dec
stos
xor
adc
dec
fs
in
mov
or
enter
fmull
repz
in
cmp
lret
fmuls
daa
das
cmpsl
lret
jno
jmp
stc
dec
movsl
lds
jle
xchg
sub
mov
jmp
push
mov
push
cmpsl
loope
lcall
xor
ja
or
pusha
and
movsl
inc
xorb
test
cmp
test
mov
jnp
movsb
pop
xor
mov
and
xor
ret
repnz
in
dec
xorb
xor
mov
mov
clc
fucomip
xchg
xchg
push
cmp
mov
sbb
inc
rcrb
enter
scas
adc
pop
fisubs
scas
loopne
jmp
sub
out
in
xchg
pop
jnp
loop
mov
popa
mov
jno
mov
jp
jge
fstps
aam
andl
and
cs
imul
and
scas
ds
sub
mov
pop
xor
out
mov
ljmp
bound
push
xchg
scas
pop
inc
nop
negb
imul
rcll
pop
gs
test
jne
nop
leave
and
lods
adc
inc
ljmp
jmp
cli
outsl
adc
jge
imul
mov
cmpsl
jae
loopne
movsb
push
stos
and
xchg
push
pop
xchg
mov
inc
mov
pop
int3
movsl
int3
jo
sub
xor
loopne
pop
push
pop
cmp
mov
movsl
in
lahf
mov
xor
jl
cmp
scas
dec
pop
jno
mov
cmpsl
adcl
xor
jns
cmpsl
jge
sti
push
movsl
pop
sarb
xchg
sub
das
lods
insb
sbb
call
dec
imul
and
push
in
push
icebp
jno
lds
incb
cmovbe
andb
sti
dec
push
dec
sub
sub
xchg
je
ljmp
cmpsl
sub
ror
aas
mov
sbb
adc
ja
lret
push
popl
scas
jnp,pn
and
cld
filds
movsb
and
mov
insl
in
in
lods
add
cmp
je
out
stos
cmc
aam
and
pop
and
mov
jne
xchg
add
and
cmpsb
xor
mov
fimull
xchg
imul
inc
xor
mov
loop
mov
mov
xor
mov
cmp
aas
xchg
imul
pop
rcr
mov
xlat
xchg
xchg
ficoml
call
xchg
orl
scas
cltd
sti
xor
xchg
inc
fsts
icebp
mov
aas
les
mov
or
pop
mov
cmc
inc
sub
imul
and
dec
mov
shr
sbb
rcll
push
cmp
jle
sbb
int
jecxz
mov
addb
gs
and
iret
out
cmp
aaa
sbb
jl
dec
std
mov
jle
xor
mov
or
push
sub
ds
hlt
sub
fsubr
jmp
jp
mov
int
and
out
cwtl
or
xorb
xor
andb
dec
sbb
aaa
sbb
in
dec
shll
sbb
les
in
pop
push
jp
movsl
mov
mov
daa
lea
je
pop
jmp
or
jae
rcrb
sbb
pop
jbe
pop
or
xor
or
pop
adc
popf
mov
fsubl
xchg
jle
jnp
pop
jg
jae
bound
mov
adc
pop
mov
icebp
mov
pop
ss
out
cltd
nop
fcmovnb
cli
test
dec
roll
pop
sub
daa
fiaddl
adc
cmp
dec
leave
test
insb
imul
insl
cmpl
and
jle
pushf
adc
test
inc
adc
xor
inc
push
mov
lods
out
push
pop
fcoml
sbb
add
xorl
pop
test
hlt
addl
mov
cmpsl
aas
mov
mov
fxch
sub
js
mov
mov
push
incl
into
clc
rcrl
or
sarl
das
sbb
and
xor
cltd
lcall
das
add
mov
dec
xor
test
mov
rcrl
or
sub
loope
movsl
or
push
std
ds
jno
cwtl
das
pushw
add
cmpsb
jle
aaa
sub
jbe
sub
dec
xor
inc
cli
or
add
mov
jne
push
loopne
pop
cs
loope
outsb
rcrb
pop
cwtl
xchg
lret
lods
cmp
mov
loope
nop
push
cmp
data16
mov
cld
dec
pop
ret
das
adc
push
insb
or
inc
xchg
xchg
cmp
jns
pop
call
fcmovnu
fdivrs
and
aam
and
push
sub
mov
xor
push
enter
rcll
ret
cmc
xor
leave
sub
subb
xchg
cmp
mov
jb
in
mov
inc
mov
add
in
jbe
fdivl
fucom
push
loop
push
fbstp
adc
mov
cmpsb
push
into
pop
xor
enter
loope
sbb
add
jbe
shr
neg
mov
and
int3
sub
dec
loop
rorl
xor
jge
bound
jb
pusha
jg
xor
sub
and
roll
xor
dec
dec
jbe
dec
imul
js
mov
inc
xchg
es
test
loope
popl
push
gs
cmc
ja
xchg
mov
in
inc
out
and
fwait
mov
jne
ret
mov
fidivrl
sbb
cli
adc
ret
cmp
push
push
je
imul
ss
pop
cs
cmc
outsl
jb
inc
mov
lods
push
les
sbb
mov
mov
jge
mov
repz
jle
adc
push
jg
jle
inc
ficoms
pop
shll
push
cmp
cmpl
out
daa
adc
or
xchg
xchg
jns
lahf
decb
insb
mov
jl
add
pop
fldl
mov
xchg
xchg
stos
in
xor
popa
pop
adc
outsb
cmp
les
lret
ret
fsubr
addr16
inc
out
popf
lcall
jecxz
cltd
sbb
push
xlat
add
push
bound
shrd
sub
push
xor
je
into
cmp
adc
movsb
ret
xor
stos
and
ljmp
lea
sub
or
lcall
lcall
dec
adc
mov
cmp
and
inc
jmp
scas
pusha
scas
lahf
mov
sbbb
jg
lcall
pop
outsb
iret
cmp
loopne
out
leave
mov
sub
nop
fmull
out
in
enter
clc
add
fwait
lret
rclb
adc
dec
and
inc
pop
lea
into
push
mov
fistl
push
movsl
xor
jne
mov
cmc
push
push
xchg
pushf
pop
sub
cmp
push
movsb
add
mov
jp
xchg
test
lods
jo
sub
xor
cmp
jg
push
cmp
sbb
std
or
stos
mov
mov
in
es
pushf
mov
dec
mov
ret
popa
hlt
test
xchg
sbb
mov
or
lds
inc
xor
std
inc
mov
iret
cmp
int
inc
int3
stos
cwtl
mov
pop
add
xlat
in
fcompl
pusha
je
mov
in
js
in
stc
dec
inc
negl
stos
loop
sbb
ds
fsubrs
and
out
adc
mov
iret
sub
pop
dec
call
inc
rcrl
sti
cmp
into
jnp
adcl
inc
test
cmp
mov
imul
rorl
je
push
dec
cld
dec
lock
jmp
push
pop
imul
mov
inc
xor
push
and
adc
cmpsl
pop
addr16
xchg
cmpsl
jbe
inc
jl
pop
lods
ljmp
xchg
sub
dec
add
clc
cmp
jmp
insl
mov
jno
jp
call
arpl
cmp
or
adc
int
add
mov
add
pop
push
pop
add
inc
daa
repz
adc
and
and
dec
mov
loope
add
inc
push
push
das
int
ret
jl
xchg
jae
adc
ja
mov
ret
mov
aam
cmp
jb
aaa
pop
dec
jmp
mov
jmp
jbe
push
inc
movsb
cmp
or
inc
mov
sbb
fiadds
out
xchg
jne
inc
outsb
mov
icebp
pop
mov
mov
addr16
pop
aas
data16
mov
aas
shr
adc
push
pop
in
test
movsl
outsb
loop
xchg
insl
pop
jmp
movsb
mov
shrl
es
daa
mov
pop
mov
add
jl
filds
movsb
cmp
sub
ja
pop
frstor
pop
sbb
aas
aad
lock
dec
mov
cmpsl
shlb
push
inc
insb
pop
aaa
fxch
push
xchg
xchg
insb
jg
dec
gs
mov
mov
add
lcall
add
mov
jno
lods
inc
cmp
leave
xchg
jmp
andb
inc
daa
mov
cmp
jg
pushf
pop
pop
loopne
gs
call
insb
sbb
sbb
xchg
test
push
sub
mov
mov
jb
rcrl
or
repz
call
lret
mov
xor
pushf
xchg
cmc
or
sbb
push
dec
lahf
cwtl
cli
push
add
cmp
call
push
mov
pop
scas
mov
and
repnz
aaa
insb
jmp
sbb
aas
addl
pop
xor
daa
std
fucom
cwtl
adc
out
loop
lea
out
test
and
push
inc
pop
push
mov
loopne
add
sbb
movsl
loope
inc
int3
cs
mov
sbb
insb
mul
cwtl
push
fwait
sahf
mov
leave
test
adc
lret
inc
pop
mov
mov
dec
mov
stos
xchg
std
cmpsl
aad
rol
ret
fistps
cmp
ficompl
inc
inc
imul
mov
lock
pop
mov
jae
sbb
cmc
or
pop
jmp
cmpsb
dec
in
movsl
stos
cmp
inc
dec
inc
fnsave
pop
mov
jae
add
xor
enter
lcall
lahf
out
lods
cld
pop
out
jnp
jns
xor
mov
sbb
adc
push
sbb
mov
xor
dec
jae
inc
insb
dec
mov
xchg
jge
mov
push
lahf
in
adc
leave
mov
negb
loope
int3
sar
and
pop
push
add
shlb
shlb
xchg
jge
lahf
loopne
mov
cld
pop
mov
int
jp
out
jle,pn
sub
loopne
or
rcrl
cmp
pop
lods
sub
negb
iret
and
dec
stc
scas
pop
jne
daa
inc
in
cmpb
xor
mov
mov
dec
push
sbb
and
mov
push
aas
dec
mov
sarl
xor
xor
roll
mov
mov
sbb
fwait
ret
mov
stos
dec
dec
subl
or
pushf
pop
repnz
sbb
seto
jecxz
jae
cld
mov
jno
inc
popf
out
push
add
xlat
cmp
inc
jb
outsb
dec
enter
jp
hlt
mov
mov
xchg
push
gs
adc
icebp
std
adc
sbb
fldenv
cmp
and
insb
push
in
and
das
jns
xor
xchg
fwait
std
lock
inc
xor
inc
mov
ja
xchg
xchg
lcall
jmp
ret
sub
enter
cmp
or
mov
test
fwait
sbb
lret
sub
fsubrs
ds
sarl
clc
cld
cld
icebp
shlb
jno
mov
test
out
push
inc
pop
out
or
aam
je
jge
mov
scas
or
or
mov
jne
xorb
int
iret
mov
dec
out
cmc
ljmp
decl
jmp
lods
cmp
inc
mov
push
or
popa
outsb
pop
aad
mov
xor
jle
mov
add
sbb
les
pop
jle
out
fidivl
loop
jne
pop
mov
mov
lea
cmc
pop
rclb
ja
aas
lock
add
bound
lcall
in
rcll
mov
leave
scas
cmpsb
dec
sbb
roll
xchg
ficoms
insb
incl
sbb
lds
xorl
add
push
repz
and
xchg
push
fmull
or
add
mov
sbb
test
and
push
je
aas
mov
nop
or
or
sbb
cmp
cltd
ret
rorl
aaa
pop
leave
mull
lock
push
jnp
jle
enter
out
adc
mov
sarl
cld
sub
inc
inc
cmp
and
popa
test
dec
jnp
fmul
adc
adc
call
fcmove
push
jg
push
pop
adc
xchg
jl
hlt
sbbb
test
xchg
imul
jns
inc
xlat
cltd
jnp
divl
xor
pusha
hlt
xchg
mov
and
repz
scas
in
sbb
cwtl
jnp
jne
inc
mov
nop
ds
and
fisubl
jo
adc
push
ret
adc
dec
pop
jno
xor
or
movl
or
insb
xor
cltd
movsb
cmp
fcomp
aad
test
cltd
mov
lock
push
mov
icebp
xor
jmp
iret
cmp
insl
fwait
jae
and
cmp
cmpsl
jno
jecxz
cmp
imul
popf
cmp
and
and
shr
enter
inc
cltd
mov
lahf
scas
adc
stos
sbb
or
xor
pushl
dec
cmpsb
cmp
mov
or
pop
push
adc
gs
mov
add
cmp
mov
mov
mov
clc
pop
movsb
dec
imul
cltd
mov
cmp
lahf
jo
std
xchg
iret
rcll
clc
mov
mov
dec
notl
popa
clc
pushf
inc
xchg
incb
and
mov
push
pop
imul
and
and
add
mov
jge
rorb
xor
jge
sub
daa
cmp
xlat
sbb
mov
cli
sub
adc
imul
and
jno
add
notb
stos
pop
cli
fisubrs
outsb
mov
js
lds
add
cmp
inc
mov
lock
jne
mov
add
sub
jmp
into
cmp
test
xor
aam
clc
xor
jns
sbb
cltd
mov
xor
inc
jmp
shl
push
push
and
sbb
mov
adc
xchg
and
push
neg
mov
test
dec
arpl
std
ret
gs
xchg
nop
fiadds
mov
push
mov
lret
sub
js
and
jnp
stc
mov
inc
sti
imul
mov
jno
mov
cwtl
xchg
data16
push
and
lret
dec
mov
inc
in
dec
mov
aas
xor
mov
es
aam
idivl
pop
stc
fst
sub
adc
ds
xchg
pop
aaa
xchg
mov
xchg
loop
gs
or
add
les
dec
push
mov
lock
add
sbb
mov
push
inc
in
or
mov
jnp
leave
or
aad
mov
lahf
aad
sub
mov
cmp
dec
fldenv
sbb
xchg
leave
cmpb
xchg
enter
mov
mov
and
outsb
aas
push
mov
xchg
rep
in
push
push
mov
jge
and
cmpsb
iret
fstps
jo
ljmp
es
inc
push
fsubs
push
outsl
or
add
data16
imul
and
xchg
mov
movhps
loope
dec
mov
mov
lea
test
adc
cmp
and
dec
shlb
or
repnz
xor
mov
das
or
add
ljmp
outsb
sbbl
inc
scas
jge
dec
mov
and
pop
xchg
loope
push
lods
push
subb
int
or
push
pop
and
push
sbb
or
dec
sub
pop
pop
inc
sahf
or
ret
fwait
je
int
pop
lret
push
add
dec
mov
imul
mov
lock
enter
lock
sbbl
mov
addr16
mov
lock
lahf
lcall
stc
cmp
call
mov
inc
sahf
dec
xchg
sub
repnz
or
push
sbb
sub
xchg
jbe
fidivrl
cwtl
in
sbb
xchg
adc
lods
jbe
or
decl
push
fstps
or
sarl
out
inc
inc
int3
or
mov
inc
cmp
dec
arpl
subb
add
push
lea
aaa
cmp
mov
xchg
dec
add
divb
push
push
lret
jge
cld
inc
sbb
cli
sbb
adc
mov
sbb
lahf
lcall
hlt
pop
movsl
xchg
and
pop
or
outsb
add
cmc
cli
aad
int
xchg
lahf
pop
nop
push
rolb
cmp
mov
and
mov
push
imul
enter
mov
fsubl
das
pop
fnsave
and
mov
in
shrb
pop
xor
xchg
movsl
in
sar
pop
cli
hlt
mov
in
add
hlt
dec
jno
int3
xchg
subl
xor
outsl
xchg
gs
decb
cmp
xchg
xchg
push
je
sub
movsb
stos
jmp
arpl
push
mov
pop
pop
xchg
push
sub
sbb
and
or
mov
xor
ds
hlt
imul
stc
lods
mov
mov
ret
add
mov
inc
stos
mov
nop
xchg
mov
data16
aaa
adc
or
pop
cmc
pop
and
daa
pusha
jp
movsb
in
in
out
test
movsl
ret
idivl
pop
test
add
aam
ficompl
add
add
aad
sbbb
sub
and
xor
daa
imul
fadds
repz
lret
mov
mov
daa
cmp
adc
cmp
cmpsb
push
jb
das
movsb
sbb
and
rorl
cmp
pop
rcrl
dec
mov
cmc
pop
addr16
jecxz
fstpl
test
hlt
or
add
data16
clc
addr16
lods
insl
add
test
sbb
lea
pushf
lods
imul
pop
sbb
xorl
inc
fcomps
xchg
xor
inc
pop
mov
fidivs
ficoms
lret
xchg
jmp
dec
mov
je
insb
mov
das
out
mov
and
bound
add
dec
jle
mov
sub
mov
xchg
ret
xor
cmp
cld
push
push
insb
aas
stos
repnz
and
sar
fstps
mov
insl
mov
and
mov
fdivrl
jae
imulb
faddl
dec
add
add
or
or
push
fiaddl
jo
cld
jle
lods
pop
cmp
add
movsb
hlt
movsl
imull
add
mov
cmp
imul
push
fsub
in
lods
in
shlb
adc
pusha
xchg
iret
pop
jo
xchg
jns
jmp
mov
sub
or
push
mov
aam
and
decl
out
adc
mov
aas
outsb
jns
add
out
stos
lea
hlt
scas
adc
imul
add
imul
loopne
in
xchg
sbb
mov
cli
mov
push
sbb
pusha
mov
inc
sbb
push
jecxz
rcrb
jb
ja
mov
inc
and
adc
cmp
sbb
xor
fdivrs
into
inc
rclb
or
mov
push
fnstsw
shlb
sarb
mov
out
fsubrl
dec
clc
in
dec
pop
scas
fs
jno
pop
hlt
arpl
rcrl
sbb
adc
cmc
fs
mov
mov
ficoms
sub
dec
dec
and
push
mov
dec
into
adc
std
xchg
dec
fidivrl
sbb
in
dec
cmp
push
sbb
and
cmpsl
lock
mov
cmc
mov
icebp
xchg
ljmp
fcompl
jp
and
test
loope
sbb
cwtl
cmp
jmp
call
pop
insl
jae
aad
push
mov
mov
pop
ret
mov
sbb
pop
add
push
xor
cmp
rolb
cmpsl
jno
mov
ret
push
imul
and
push
fisttps
mov
xor
stc
fisttpl
xor
aam
pop
bnd
sub
cltd
stos
mov
call
ret
dec
mov
inc
ss
packsswb
test
cltd
xor
inc
mov
arpl
aam
pop
xchg
out
neg
xor
or
imul
jb
lahf
stos
aad
add
mov
xchg
scas
je
sti
and
ret
mov
or
out
fiaddl
loope
sbb
imul
bound
dec
insl
inc
insl
cmpsb
mov
push
repnz
xor
add
jmp
addr16
adc
lret
sub
mov
jecxz
movsl
and
mov
and
mov
std
int
push
pusha
cmpsl
fists
push
sbb
cmp
fildll
jge
sbb
jo
cmp
pop
sub
enter
addl
push
xchg
jae
pop
outsb
test
aam
dec
lods
xlat
das
dec
jnp
mov
test
subl
xor
xor
dec
mov
dec
mov
cmp
and
shlb
ja
aas
sub
cmp
test
or
push
or
hlt
adc
or
movsb
or
dec
and
cmpsl
mov
in
sub
adc
mov
fldenv
mov
iret
rclb
pop
ficoms
push
aaa
pop
fldenv
and
jg
js
call
adc
xlat
cmp
push
dec
popa
sub
sbb
mov
xchg
mov
dec
lahf
test
mov
ja
lret
push
lahf
inc
sbb
icebp
mov
adc
sbb
movsl
in
lods
cmp
jbe
pop
adc
out
scas
and
out
addb
out
adc
pop
xor
cmovge
jmp
dec
jo
and
mov
dec
mov
jno
mov
movsb
mov
inc
int
call
xchg
lahf
pop
inc
pop
adcb
loop
inc
aas
push
and
cli
and
dec
cmp
or
sub
lahf
or
and
mov
mov
or
dec
ljmp
testl
push
jae
ficompl
mov
mov
dec
outsl
lahf
imull
pop
jns
xchg
cmp
inc
dec
pop
xor
lods
fwait
insl
loop
aaa
rorb
sub
sti
pop
js
sarl
sbb
pushf
addr16
jo
pop
or
dec
mov
data16
popf
jmp
add
adc
jne
stc
outsl
cmp
sbb
pop
sub
icebp
cmpsb
xchg
scas
inc
in
popa
xchg
adc
mov
and
popa
cmp
and
lret
and
push
js
sub
aad
or
or
cltd
cmp
imul
and
in
mov
loopne
adc
xor
stc
pusha
add
push
push
sub
out
test
mov
pushf
lods
iret
gs
icebp
xor
and
jae
mov
or
mov
xchg
mov
xchg
fistpl
sbb
bswap
cmp
xor
adcb
and
pop
cmp
mov
notl
ja
int3
mov
push
mov
fwait
add
push
jmp
pusha
in
cmpsb
popl
dec
push
pop
jg
popa
testb
ret
add
adc
test
dec
adc
clc
ror
inc
lcall
dec
int3
test
xchg
cmpsl
sbb
fwait
xchg
aad
lds
adc
or
outsl
les
jno
mov
in
cmp
lret
xchg
aas
pushf
out
push
into
scas
mov
lea
subb
pop
or
mov
push
fcmovnb
pop
push
and
mov
test
jns
fstps
jge
push
jnp
mov
mov
data16
insl
push
cmpb
jmp
sub
jmp
jns
mov
and
jae
fcomi
mull
addr16
scas
mov
inc
inc
pop
xor
loop
out
ret
mov
mov
dec
cmp
xor
stc
movb
xchg
mov
add
data16
and
adc
lea
or
mov
xorl
lea
jno
mov
mov
push
popa
fists
lcall
mov
cmp
jg
cmc
pop
nop
sbb
sub
push
test
test
insb
stos
shl
call
inc
rclb
mov
repnz
stos
sbb
subl
pop
ds
and
mov
push
data16
test
mov
add
jno
xor
push
adc
fcoml
dec
hlt
or
sti
pop
call
adc
mov
xchg
fwait
cmpsl
xor
loop
sbb
stc
sub
cwtl
inc
subb
sbb
push
lret
shlb
jnp
jecxz
add
lret
outsl
pop
mov
xor
iret
sti
xchg
and
je
adc
aas
dec
aaa
popa
or
push
jae
mov
inc
sarb
xor
addl
sbb
mov
xchg
aas
imul
push
arpl
or
lahf
pop
mov
push
push
in
add
sbb
jp
das
jg
stc
jecxz
fcoml
loope
nop
in
pop
inc
outsl
xlat
sub
ss
enter
sbb
hlt
js
mov
cmp
nop
pop
add
stos
mov
mov
pusha
iret
jo
aaa
stos
fcmovnb
jbe
iret
out
mov
dec
jb
out
fldcw
fists
lods
test
pop
fnsave
inc
add
jnp
std
mov
fisubrl
jnp
mov
into
xor
icebp
pop
cmpl
add
jo
push
imul
out
cmpsb
jl,pt
and
pop
jle
aam
dec
fwait
jle
xchg
inc
lret
or
pop
nop
es
cld
xor
push
jnp
adc
jle
dec
xchg
inc
cmp
dec
mov
jmp
cmp
jp
jne
jbe
dec
fbld
in
mov
mov
fbld
jle
sti
les
imul
stc
imul
in
jbe
jo
aas
sub
inc
into
bswap
xor
enter
cmpsb
dec
sub
in
xor
out
or
mov
pop
out
movsb
push
fwait
xchg
mov
in
out
xchg
gs
fsubl
daa
sub
pop
inc
orb
fildll
adc
mov
or
das
arpl
xchg
and
and
repnz
pop
daa
xor
pop
and
mov
in
rolb
dec
xor
pushf
int3
pinsrw
xor
xchg
push
cld
frstor
std
in
movsb
cli
mov
jmp
rorl
mov
outsl
ret
cmpsb
sbb
jmp
add
xchg
sbb
pop
and
mov
loope
popf
aad
add
movsb
add
es
lret
outsl
add
ss
fdivl
cmc
push
xor
hlt
xor
sbb
xor
xorl
mov
addr16
jp
and
fildll
jae
frstor
pop
pop
decb
mov
push
aaa
xchg
bound
cmp
mov
xor
outsl
dec
jbe
jecxz
cli
push
stc
push
sarb
jb
outsb
mov
jae
mov
mov
push
ret
imul
cmp
sti
xchg
adc
dec
jno
lret
jns
push
push
xchg
add
shll
sahf
mov
add
cmpsl
mov
cltd
mov
xor
push
sbb
std
dec
and
jmp
or
int
inc
hlt
pop
inc
int3
sbb
call
cmpsb
or
lds
pusha
clc
push
fistpl
mov
aad
and
aas
xchg
scas
adc
sbb
ret
cmp
into
lock
in
pop
fstps
push
inc
and
loopne
loop
stc
mov
icebp
scas
popa
xchg
lock
cmp
adc
outsb
dec
scas
mov
mov
sbb
outsb
pusha
lea
cmp
push
hlt
mov
addl
std
mov
mov
or
enter
mov
ret
adc
or
cmp
in
and
stos
mov
aas
stc
movsb
stos
out
addl
les
ss
div
insb
sbb
add
mov
jnp
lea
cmp
pop
mov
sbb
out
adc
mov
xchg
repz
lods
idivl
pop
mov
ret
add
arpl
xchg
add
cmp
push
ja
sub
push
dec
jmp
cmp
popf
xorb
in
in
pop
icebp
cmp
ret
fimull
fdivrs
iret
mov
bound
je
mov
ret
or
addb
dec
repz
mov
sbbl
int3
ja
push
inc
mov
test
ret
pop
fstpl
cmpsb
out
inc
bound
outsl
cmp
inc
rcrb
addr16
jns
popf
int
mov
jbe
adc
iret
push
sub
jae
jbe
inc
out
xlat
adc
shlb
xor
xchg
sub
sbb
pop
cmpsl
ror
aam
dec
xchg
in
fldl
in
jge
lea
fildl
or
je
dec
pop
xchg
pop
pop
cwtl
add
push
cmpsb
pop
and
jmp
jle
stos
and
outsb
fwait
xchg
push
gs
xorl
cmpsb
mov
lret
rep
sahf
mov
push
cmpsl
push
cmp
inc
pop
mov
xor
je
arpl
mov
idivb
or
cmp
mov
test
movhps
fwait
xchg
add
incl
mov
dec
pop
push
fnstenv
sbb
sarl
cmc
lods
data16
fstpl
ljmp
sbb
mov
cmp
sbb
inc
inc
sub
test
out
sbb
out
movsb
and
rorb
icebp
pop
sbbb
mov
fsubs
jp
rclb
insb
aam
loope
jge
adc
shlb
mov
stc
out
push
mov
stos
push
mulb
inc
aad
push
xor
push
jge
popf
inc
test
outsl
ss
push
rcr
test
sub
and
arpl
push
loope
or
int3
jecxz
in
sti
fistps
jge
lahf
adcl
and
jl
lahf
pop
pop
xor
sub
leave
das
cmp
jle
adc
adc
inc
jg
fstpt
mov
adc
cltd
loope
loopne
mov
add
iret
or
push
jns
mov
jge
in
sub
sub
out
adc
pop
xlat
jmp
adc
adc
xorl
push
rcrb
mov
imull
dec
adc
cmpsl
nop
inc
mov
jp
xor
ja
das
cli
dec
push
adc
mov
push
add
je
dec
mov
js
das
jecxz
dec
dec
cmp
js
mov
or
xchg
xchg
cwtl
push
or
cmp
mov
scas
roll
and
in
push
mov
push
stc
or
dec
cs
sub
and
test
jmp
mov
jl
add
sti
mov
shlb
adcb
xchg
popf
mov
fisttps
insb
xor
insb
gs
ficomps
inc
push
sarb
xchg
fs
jmp
pop
jg
mov
ja
adc
mov
xchg
jo
mov
xchg
cmpsb
push
xor
jae
repnz
iret
mov
adc
cmp
std
dec
mov
dec
push
push
lock
iret
imul
fsts
pop
lea
movsl
test
jns
subb
mov
xor
jns
ljmp
imul
jp
cmpsb
sbb
xor
shlb
out
sbb
mov
fistpl
or
mov
mov
lea
jno
stc
jge
imul
dec
or
mov
ljmp
jns
mov
fimuls
xchg
call
shll
and
rcrl
addr16
fadds
add
pop
ror
or
inc
js
xchg
cmc
jno
fsubrs
es
mov
mov
mov
xor
lods
add
shlb
das
jno
stos
sbb
test
mov
mov
pop
push
mov
xchg
and
in
fcoms
test
add
pop
mov
imul
sub
cwtl
xor
rcrl
bound
movsb
ret
in
xor
xchg
pop
movsb
daa
mov
arpl
nop
push
sbb
imul
sub
inc
dec
insb
push
cmp
lcall
jbe
ljmp
dec
jmp
mov
gs
mov
add
cli
and
aam
aad
mov
les
lock
lea
mov
jne
push
jmp
push
push
out
sbb
repz
orl
xor
mov
sub
sub
or
mov
push
push
inc
mov
sub
in
sub
call
addr16
pop
ja
xor
fsubr
ljmp
cld
xor
les
cmp
fwait
adc
jo
add
sub
ret
inc
xchg
out
sahf
mov
cmpsl
sub
or
mov
lret
inc
cmpsb
adc
pop
loope
out
std
lock
jne
cmpsb
test
push
dec
movsb
jmp
lahf
out
adc
test
daa
adc
stos
jmp
cs
jp
sbb
testl
jmp
fildll
sub
dec
push
cmp
test
jle
ds
xor
dec
dec
and
and
loop
fmul
push
in
xchg
cmp
or
lods
or
xor
or
nop
repnz
push
jge
test
in
arpl
in
cs
fimull
std
fwait
jl
out
cmpsb
clc
lcall
lret
dec
bound
dec
rcrl
stc
mov
gs
aam
dec
xchg
xchg
sbb
stc
imul
das
insl
cmp
jno
push
xor
adc
add
ficompl
sbb
push
jge
repz
push
pop
add
daa
pop
jl
mov
xchg
test
insb
jle
loop
lret
lahf
inc
leave
push
data16
push
xor
mov
dec
adc
mov
inc
ret
xorl
xor
dec
adc
mov
mov
add
inc
sub
xchg
xor
jne
fdivrl
inc
push
add
mov
xor
pushf
pop
ror
or
and
xlat
pop
mov
ljmp
add
jbe
mov
je
push
adc
test
in
jp
mov
cmp
mov
movsb
aam
cld
fistpl
and
notb
js
pop
popa
out
jecxz
sbb
sti
push
jno
adc
pop
mov
xor
jg
mov
xor
dec
data16
jae
out
gs
push
out
loope
mov
add
sbb
dec
rorb
ds
pop
or
test
xchg
xchg
insl
mov
leave
addr16
xor
stos
outsl
das
jle
adc
ja,pt
repnz
mov
mov
jp
lcall
fs
xor
ret
inc
cmp
in
daa
pop
jle
pop
negb
dec
mov
aam
and
mov
inc
hlt
pop
lea
mov
push
inc
adc
cmp
daa
jae
mov
xchg
or
jae
push
sub
or
xor
ds
popa
jle
pushf
in
std
enter
les
dec
add
xor
fidivrs
push
pop
cmp
rcll
sub
xor
cwtl
sbb
mov
ja
in
mov
lock
adc
icebp
sar
ret
jle
in
xor
push
mov
pmulhuw
cmp
lahf
out
jne
and
jle
sahf
mov
add
and
pushf
add
int
cmp
mov
and
sbb
mov
jl
cmp
loopne
loopne
inc
adc
arpl
test
jnp
push
pop
iret
pop
mov
loopne
shlb
enter
sbb
es
pushf
mov
adc
cmp
xchg
ljmp
pop
insl
cmp
stos
mov
push
js
jle
dec
jb
fwait
cmc
mov
daa
sti
in
adc
push
inc
pop
jbe
xor
sbb
push
insb
out
jb
stos
mov
inc
fsubrl
xchg
sub
dec
jnp
mov
ss
lds
flds
mov
jne
cmp
cs
pushf
repnz
pop
mov
ljmp
popa
inc
outsb
and
lret
inc
int
dec
leave
mov
sti
jbe
sbb
adc
rolb
pop
cs
cmp
jl
mov
cmp
add
push
inc
dec
xchg
test
mov
mov
repnz
inc
shrb
ds
pusha
ret
inc
dec
jmp
add
into
shll
ljmp
sub
xor
pop
aam
sub
leave
and
rcrl
adc
pushf
shll
imul
mov
mov
xchg
bound
pxor
rcrl
out
jle
push
popa
pusha
pop
test
ds
sub
dec
mov
cmp
cs
imul
mov
mov
inc
lret
jae
cld
xchg
das
push
call
dec
lods
aas
jmp
out
sahf
das
lret
jae
pop
push
mov
ret
mov
mov
adc
inc
jbe
ja
mov
arpl
pop
ret
mov
movsb
jno
fldcw
jno
sbb
push
popf
jns
shlb
fwait
rcll
push
xchg
add
iret
inc
data16
scas
mov
xor
mov
inc
mull
test
bound
in
mov
inc
test
cmp
pop
jecxz
fs
nop
stos
rcll
cmp
mov
out
xor
push
lock
dec
cmpsb
pop
iret
jns
cmp
push
pop
rcr
push
sahf
imul
hlt
sub
add
sub
cltd
cwtl
mov
push
pop
or
mov
cs
mov
cmp
enter
jp
pop
imulb
xchg
mov
shlb
jecxz
sub
mov
jge
sub
fs
cmp
fmull
inc
imulb
pusha
scas
mov
jb
pop
sahf
aas
or
cs
cmp
pushf
xchg
fcomps
mov
ja
and
aad
cmpsl
add
pop
subl
ljmp
sbb
test
add
xchg
mov
xchg
outsl
sbb
lds
xchg
out
test
or
xchg
jb
mov
pop
inc
sbb
dec
mov
inc
pop
out
or
das
rorb
mov
repnz
stos
add
sbb
sete
gs
test
pop
rcr
jnp
pop
push
mov
hlt
fbstp
push
in
or
inc
int
scas
mov
fcoml
xchg
sbb
and
add
pop
jns
cs
fbld
push
sub
in
push
mov
shl
jne
add
cmc
rorl
adc
push
jns
lods
sbb
push
or
in
incb
mov
std
sbb
dec
stos
inc
cld
adc
push
mov
ret
adc
mov
push
jmp
adc
cli
xor
xchg
mov
stos
sub
lock
fs
stos
fstl
mov
sbb
lock
fcomps
mov
dec
insl
xchg
push
adc
xor
push
sub
ss
jmp
in
dec
pop
pop
aam
mov
inc
xor
arpl
push
push
icebp
cmpsb
cmp
test
or
fwait
xchg
or
push
in
out
loope
repz
xor
call
loopne
arpl
pusha
and
repz
aad
mov
jb
fadd
mov
mov
movsb
inc
test
stos
jmp
aam
ret
or
sbbb
inc
rcl
push
mov
sbb
aas
into
adc
rcrl
repz
ret
rorl
cmp
lcall
or
ret
mov
jle
into
pusha
push
dec
adc
es
fdivs
xchg
cmp
mov
and
mov
mov
sti
mov
pop
mov
push
sbb
out
stc
fs
ret
add
xor
mov
mov
fcoml
sbb
je
test
sub
fdivrl
loope
push
dec
lock
into
enter
mov
xchg
mov
pop
lock
sarl
insb
out
sbb
jns
sub
adc
lret
loopne
fldenv
dec
lret
and
stos
xor
cwtl
xor
cmpsl
in
and
frstor
and
mov
cmp
outsl
mov
jg
cmp
jo
push
mov
aaa
sub
fwait
xchg
mov
outsl
cltd
mov
push
sti
or
jae
or
or
ret
add
ljmp
add
adc
push
xchg
push
pop
rcll
aaa
cld
fcomps
clc
mov
scas
or
jne
sbb
loopne
loop
les
push
xor
scas
xchg
mov
cmc
or
xchg
lods
cld
sbb
lds
dec
fs
push
ficoml
stc
testl
aas
pop
xchg
adc
mov
ret
mov
fs
lods
xchg
stos
sbb
sti
fistps
xchg
pusha
ds
lret
add
scas
enter
jnp
jmp
shlb
pop
rcrl
jne
adc
pop
fists
test
cltd
mov
push
add
cwtl
xor
sub
jg
pop
push
scas
pop
push
mov
stos
movsb
out
hlt
fmuls
roll
sub
add
je
sub
jae
fldl
pop
push
pop
cmp
out
push
cmp
push
mov
in
ljmp
xchg
pop
pop
ds
mov
xchg
dec
cmp
sarb
loopnew
in
mov
push
in
pushf
pop
ljmp
lods
pop
push
fidivs
daa
cmp
paddw
or
or
loopne
jnp
cmp
ss
hlt
fucomi
add
rclb
xchg
testl
out
shll
fildll
mov
dec
mov
xchg
ja
add
lret
in
int
pushf
xchg
add
out
arpl
mov
cmp
jl
scas
pop
fsubrs
jno
pusha
mov
jmp
in
push
or
loope
jecxz
aam
pop
outsl
pop
mov
and
pop
out
cmc
loopne
xor
lock
xor
jecxz
pop
sub
mov
lock
arpl
imul
and
fistl
mov
push
dec
jmp
fcomps
daa
lcall
aas
dec
enter
push
fistpll
pop
adc
jp
or
pop
fistps
outsl
pop
pop
cli
pop
mov
mov
shll
mov
dec
jle
cmpsl
and
pop
fisttps
popa
jo
and
sti
sahf
jne
aas
fld
mov
pop
mov
jp
mov
fnsave
sbb
insl
push
enter
cmpsb
enter
xor
test
push
cmp
pushf
pop
jmp
fsubrl
cmp
imul
xchg
xchg
fbstp
sub
jnp
je
stos
repz
inc
rolb
mov
mov
mov
dec
mov
cld
out
adc
mov
stc
pop
aam
ror
ljmp
mov
pop
sti
iret
dec
out
mov
enter
fnstenv
shl
pop
xlat
mov
lods
mov
sbb
xchg
enter
mov
mov
jmp
into
push
inc
lahf
xchg
add
push
xchg
addb
lret
cli
sub
mov
adc
adcl
push
jmp
scas
and
and
push
sti
pop
and
sti
and
test
cmp
cwtl
sbb
add
lcall
sbb
outsb
or
call
adc
popa
mull
andb
push
pusha
pop
and
aas
pushf
test
neg
mov
pop
aad
bound
insb
hlt
or
cmp
movsb
push
sub
mov
mov
lret
insl
jl
inc
lahf
lret
mov
push
jg
pop
mov
adc
xlat
gs
das
scas
pop
mov
mov
push
stos
scas
icebp
out
sub
mul
mov
xor
inc
nop
fdivrs
xor
sahf
cmp
mov
in
mov
aaa
xor
into
xor
or
and
addr16
in
mov
addr16
xchg
pusha
scas
push
jmp
add
and
lods
lock
mov
jno
add
ljmp
mov
mov
pop
mov
loopne
test
add
outsb
xor
jp
dec
inc
inc
out
cmpsb
dec
stos
es
cmpsb
mov
mov
lret
adc
test
dec
inc
add
xlat
lock
cmp
or
int3
daa
mov
ss
outsl
adc
inc
sbbl
xchg
pop
jg
sbb
and
data16
adc
out
stos
in
hlt
shl
popf
sbb
frstor
cwtl
ss
cs
stos
mov
cmp
or
push
mov
xor
dec
stc
jp
jae
pop
cmpl
push
adc
xchg
xor
inc
mov
in
orb
ja
mov
jmp
or
add
jo
pop
lret
adc
xchg
ficompl
xchg
cwtl
push
dec
ja
adcl
push
clc
into
dec
sbb
int3
aam
inc
mov
cmp
xor
cmp
push
mov
int3
sbb
xor
pop
lods
hlt
lock
cs
aad
lcall
lret
repnz
mov
les
outsl
in
sbbl
jno
mov
dec
xchg
jge
dec
jmp
adc
mov
imul
rolb
lahf
scas
sbb
mov
shll
je
dec
and
inc
pop
xor
dec
std
enter
inc
jbe
sbb
sbb
add
test
mov
adc
cmp
inc
mov
jno
or
push
xchg
jp
stc
xchg
or
jne
arpl
mov
loop
fists
lret
lcall
cmp
icebp
mov
bound
xchg
aam
fs
mov
pusha
push
test
adc
cmp
in
out
xor
je
scas
js
fnstsw
sbb
sub
add
mov
lcall
movl
jmp
mov
and
sub
cmp
jb
cs
pop
jp
mov
ljmp
sub
fcompl
les
outsl
dec
and
or
mov
push
cmp
mov
sbb
ljmp
cld
sub
scas
je
sub
cmpsl
out
sbb
or
test
outsl
cmpsb
dec
mov
sar
movsl
jmp
out
lods
or
sub
push
data16
pop
popa
xlat
aam
push
xchg
push
lock
pop
sbb
mov
push
sbb
shll
and
push
adc
pop
mov
lret
cli
test
ss
cmp
sbb
testl
sub
adc
xchg
stos
add
xor
out
push
lahf
cmp
cmp
test
rorb
ja
mov
jmp
cs
cli
sbb
movsl
popf
lea
shrb
scas
int
inc
or
fnstcw
pop
mov
imul
mov
ds
stos
cmpb
movsb
sti
cmp
xchg
jbe
aad
notb
stos
and
mov
lcall
xorl
jae
push
fistps
and
mov
push
lcall
push
clc
adc
mov
push
jno
test
scas
ljmp
push
or
mov
scas
ljmp
mov
call
pop
shrb
dec
sub
cmp
faddl
scas
test
or
sti
and
sbb
jg
fldcw
loop
xor
xchg
inc
pusha
inc
cmp
cmp
xor
out
jle
iret
fs
int
mov
fistpl
xor
xor
and
fdivs
out
xchg
adcl
cmp
jle
lahf
and
ret
outsb
sub
jmp
pop
jle
xchg
xor
adc
out
lds
cmp
adcb
daa
dec
cmpsl
cmp
rol
or
mov
out
sbb
scas
sub
sahf
jno
mov
jg
inc
dec
mov
scas
sub
test
pop
xor
or
add
lret
stos
fisubl
lcall
mov
insb
int3
push
lahf
pop
fimuls
mov
outsl
das
sub
and
xchg
dec
xor
adc
shlb
stos
inc
or
sbb
push
push
push
xchg
xchg
xor
pop
lcall
in
fcomps
mov
insl
fsub
xchg
fs
lods
lcall
add
push
add
xchg
sbb
push
xchg
cmp
jl
test
repnz
movsb
push
jns
sbb
lahf
fldcw
xchg
pop
dec
fsubl
aas
mov
and
cmp
cmc
push
fnstsw
mull
les
mov
or
addl
jae
push
adc
div
jbe
jg
fcoml
inc
sub
cs
jb
pushf
cmp
inc
mov
jle
mov
out
in
js
or
jg
jns
jb
test
fidivs
mulb
insb
into
aaa
addr16
insb
aas
vcvtss2si
or
mov
and
inc
cs
jle
fdivs
jae
scas
sahf
jb
cli
pop
lods
dec
icebp
repz
imul
movsl
aaa
lret
movsl
mov
cli
call
pop
fiaddl
out
push
out
test
addl
cmp
dec
add
and
mov
push
in
mov
loopne
popf
loope
adc
pop
jmp
mov
cs
in
stos
faddl
pop
or
sub
add
maxps
rcrb
imul
cwtl
mov
adc
or
xchg
mov
call
into
mov
cmp
cmp
fiaddl
data16
inc
pusha
push
subb
or
out
pop
movsb
js
clc
arpl
pop
cmpsl
add
fldl
sbb
inc
mov
dec
mov
cld
xchg
push
sbb
mov
ss
fldcw
pop
jp
insl
cmp
push
push
jg
mov
addr16
cmpsb
adc
js
stos
enter
int3
lea
pop
clc
lcall
test
lock
dec
xor
mov
mov
js
insb
xor
js
dec
pop
popf
inc
pop
enter
mov
lcall
cmp
or
imul
push
cmp
rcrl
sub
jmp
cmp
pusha
sub
mov
fidivrl
xor
aam
call
mov
jno
adc
lds
xlat
or
mov
dec
insb
push
iret
cmp
jmp
cwtl
sbb
or
loop
test
mov
mov
aam
scas
xchg
adc
in
mov
je
cwtl
mov
out
sub
test
aas
lods
es
push
adc
add
jno
or
aas
mov
popf
and
xchg
lret
mov
xor
mov
and
add
mov
pop
pop
addb
xor
repnz
push
leave
lahf
jne
ret
jb
aas
stos
les
into
call
dec
xor
mov
sti
xor
mov
fimuls
out
mov
sar
sbb
lret
mov
ficoms
sub
hlt
pop
inc
mov
shrb
sub
fstpt
stos
loop
clc
fdivrl
xchg
int
inc
or
test
mov
and
ss
int3
arpl
aam
mov
iret
pop
sub
fmuls
into
sahf
cmpsb
add
xchg
sub
mov
aas
adc
clc
in
das
int
cli
dec
in
hlt
adcl
and
xor
mov
sub
mov
fists
ljmp
and
rorb
out
out
aas
repz
and
sub
leave
jle
or
xchg
les
jns
fisttpll
or
scas
xlat
cmp
mov
inc
jo
adc
scas
xchg
pop
out
mov
sbb
jnp
jecxz
orb
movsl
xor
adc
pop
xchg
adc
and
push
aam
xchg
jmp
mov
testl
scas
cmp
es
jmp
call
jbe
enter
mov
int
call
or
cmpsl
push
push
jmp
xor
arpl
test
rcll
add
push
push
xchg
push
aas
pop
pop
dec
outsl
push
mov
mov
xchg
les
and
addr16
sub
test
dec
insl
leave
mov
ret
int
xchg
ss
icebp
loop
and
in
repz
and
pop
paddd
clc
pop
sbb
bound
js
dec
fwait
dec
pop
in
and
sub
ret
dec
mov
xchg
jg
pop
int3
les
cmp
mov
pop
testb
dec
fldcw
adc
loope
sub
sbb
add
in
lcall
stc
xchg
sti
out
popa
lar
bound
sub
roll
cmp
cld
insl
inc
mov
add
pop
cs
jae
xchg
scas
cs
xchg
aaa
mulb
lea
movsl
pop
lcall
test
mov
xchg
dec
adc
jg
sarb
add
stos
sbb
or
dec
and
push
test
iret
test
dec
jo
in
xor
pop
inc
fstpl
xchg
xchg
sbb
out
pop
add
or
adc
aam
inc
inc
xchg
push
xchg
sarb
add
test
dec
pusha
xchg
jns
or
cli
inc
xchg
jns
mov
cmp
add
outsl
addl
adc
stos
test
aaa
insl
aam
cmp
cltd
inc
ret
popf
in
push
lea
mov
dec
data16
out
hlt
pop
loop
scas
push
inc
jne
inc
test
aad
addr16
xor
adc
out
insl
int
jle
xchg
rorb
test
inc
push
sub
adc
sub
in
cli
scas
clc
daa
pop
pop
aam
imul
xchg
call
into
test
pop
cmp
fucomp
je
inc
std
fcmove
pop
call
daa
pop
in
in
or
out
bound
pop
idivb
pop
lret
add
or
xchg
push
push
cmp
sarb
cmp
arpl
jnp
lods
mov
xchg
jecxz
jmp
mov
andb
fucomi
aaa
sbb
mov
fsubs
and
nop
std
icebp
cli
cltd
rorl
pop
jne
xchg
std
insl
sbb
dec
sbbb
cmp
xor
jb
cmp
mov
stos
div
jmp
std
xlat
out
dec
pop
adc
pusha
push
lock
cmp
lret
or
mov
shrl
sbb
ja
es
mov
cmp
pop
daa
jg
xchg
mov
push
pop
std
dec
sub
mov
call
add
sub
pushf
lods
addr16
inc
outsl
inc
xorl
lret
lret
cmc
mov
push
lahf
jns
push
mov
inc
push
sbb
jmp
inc
xor
xor
fistpll
mov
pusha
ret
movsb
mov
push
notb
fcomps
jo
mov
pop
nop
push
orb
pop
mov
pop
jns
int
or
movsb
mov
mov
inc
mov
stos
les
or
stos
jne
xchg
push
pop
js
inc
rcrb
bound
mov
dec
imul
mov
std
dec
ret
sbb
and
push
pop
aam
lret
push
add
push
iret
shrl
pop
scas
mov
dec
mov
or
shr
cmp
inc
fidivs
push
ss
adc
cmp
inc
jg
aas
pushf
inc
decb
sbb
push
xlat
push
dec
int3
mov
leave
or
jmp
or
in
ss
pop
data16
leave
adc
pop
mov
cmp
loop
dec
arpl
adc
pop
test
or
lods
push
sub
xor
fsts
xchg
pushf
mov
bound
sti
stc
and
pop
add
push
bound
lret
ret
pop
inc
xor
cmpsl
mov
outsb
inc
movsl
rorb
in
pop
leave
dec
mov
ss
nop
xchg
adc
sbb
add
out
cld
and
dec
jb
xor
cmovge
imul
mov
insb
lahf
xchg
adc
pusha
negl
enter
out
daa
and
ret
push
xor
daa
cmp
es
xor
sub
cmp
sahf
cmp
mov
mov
rep
mov
sbb
push
mov
push
das
lcall
cwtl
push
xor
mov
fldl
ss
jae
test
xchg
mov
jge
aas
outsl
jno
pop
sub
scas
outsb
xor
inc
roll
sbb
call
mov
ret
mov
mov
movsb
cmp
sarb
fstpt
mov
fimuls
shrl
inc
test
out
cmpsb
jb
mov
stc
mov
in
dec
shl
push
inc
pop
xorps
sbb
pop
les
pop
adc
aam
js
addb
pop
les
int3
add
mov
repz
daa
adc
daa
sti
jo
adc
pop
int3
add
dec
call
mov
jg
popa
jmp
fadd
sti
hlt
dec
dec
outsl
fcomip
xlat
xor
xchg
cli
outsb
inc
jmp
call
jl
cmc
mov
jns
shrb
dec
cltd
push
jne
mov
test
rorl
jo
dec
lods
push
jmp
test
repz
js
mov
jo
loopne
cmp
pop
cmpsb
push
std
idivl
pop
lods
test
pop
and
cmp
scas
ja
push
lret
jbe
test
mov
stos
in
or
ja
mov
div
sahf
pop
jg
xor
dec
inc
repnz
and
pop
add
cmp
mov
sbb
repz
add
incb
xor
movsb
jne
adc
out
dec
ss
xor
gs
xchg
push
or
lret
sbb
dec
dec
push
push
cmpsb
push
adc
jl
hlt
or
js
xor
sbb
dec
mov
andb
dec
movsb
push
sbb
push
flds
in
and
nop
sti
int
out
inc
sub
clc
leave
cmpsl
cmp
xor
mov
outsl
xchg
push
les
rorb
add
ror
or
inc
push
mov
lcall
mov
or
jne
ja
push
mov
cltd
hlt
out
mov
push
inc
xor
dec
mov
out
jno
dec
imul
leave
xchg
loope
mov
lret
xchg
jecxz
sahf
dec
lods
xchg
cltd
or
imul
out
mov
pop
test
dec
mov
out
jnp
jnp
adc
dec
testl
fistl
sbb
sub
stos
mov
fistpll
inc
sahf
lret
mov
or
pop
mov
mov
cmp
je
jge
adc
rcl
ret
xchg
or
xchg
bound
lods
ja
jg
add
stos
movsl
mov
mov
mov
dec
out
adc
cmc
sbb
mov
movsl
cmp
lods
int
push
jmp
lea
adc
xor
pop
jmp
scas
lods
in
fldenv
sub
mov
inc
cmp
fistl
xlat
fadds
rcll
iret
jg
jge
testl
outsl
jecxz
cmc
cmc
mov
or
int3
imul
add
mov
insl
xchg
push
or
jle
lods
push
pop
movl
push
loope
xor
insb
push
aam
sub
xor
das
xor
or
aaa
movsl
out
popa
jp
push
jbe
push
out
cli
add
lcall
clc
cmp
add
xchg
xchg
dec
outsb
mov
and
jmp
outsb
and
lret
xchg
imul
dec
and
pop
mov
fsubrs
mov
jns
or
mov
in
cmpsb
cmpsl
xor
in
movsb
and
jg
sbb
cmp
dec
mov
push
fcoml
mov
mov
pop
sbb
sub
xor
adcl
adc
stos
jle
popa
lret
shrl
mov
popf
adc
js
sub
mov
jo
jbe
push
or
push
inc
mov
adc
dec
inc
sub
and
jb
fmul
in
lahf
loope
lahf
jp
push
jb
and
mov
in
shr
aas
iret
out
inc
xchg
sub
mov
dec
outsb
roll
jle
rolb
ja
insl
imul
clc
jecxz
ret
sbb
mov
inc
je
stos
cmc
push
xchg
xchg
inc
aam
outsb
jo
or
jae
pop
jne
mov
mov
adc
cmp
jle
cs
clc
jg
aaa
out
int
cmp
mov
jb
popf
adc
ds
jp
mov
jl
std
test
sbb
into
add
mov
and
sbb
xor
fwait
lods
fwait
mov
mov
call
lds
dec
scas
add
and
xor
xchg
test
pop
push
repz
mov
sahf
rcll
cmp
popa
pushf
inc
lcall
jnp
rcl
mov
std
das
ffreep
pop
push
cs
xchg
dec
and
lret
jns
subb
es
fcomps
sbb
loope
add
cmp
test
or
aam
fstpl
sbb
sub
sahf
in
sti
mov
xchg
cmp
les
dec
xorb
mov
jp
adc
sub
add
dec
add
xchg
pop
sub
out
jecxz
cmp
fndisi(8087
dec
mov
pop
test
ljmp
xor
and
out
xchg
lea
dec
inc
adc
movsl
and
scas
sbb
or
dec
push
mov
pop
mov
xchg
mov
mov
dec
ss
inc
in
iret
mov
arpl
mov
push
insb
int
and
xchg
xlat
loop
or
mov
out
dec
inc
movsl
and
enter
push
rcl
jl
divl
jecxz
sbb
ds
cmp
mov
imul
ret
pusha
fnstsw
stos
mov
pop
je
push
sub
jne
xchg
imul
mov
inc
jno
xchg
lret
stc
xor
xchg
ja
movsb
in
ss
sub
pop
cmp
scas
and
xchg
test
mov
xchg
test
pop
dec
mov
mov
and
rolb
lret
add
push
or
or
int
or
mov
pusha
popa
test
jns
xchg
mov
jnp
sbb
in
test
ljmp
sbb
bound
sbb
adc
or
or
jle
ret
pop
addb
movsl
xchg
pop
push
xchg
xchg
and
hlt
mov
jb
lahf
arpl
sub
rcrb
outsb
jmp
xchg
ljmp
mov
les
sub
mov
cs
xchg
adc
pop
add
je
ficomps
int3
mov
jmp
xor
mov
jg
aaa
dec
ljmp
inc
cmp
cmp
xor
xchg
push
ss
mov
pop
addl
dec
xorb
xor
scas
jmp
popf
ret
adc
xchg
ja
das
hlt
xchg
xor
cmp
push
clc
inc
pop
fwait
stc
pop
scas
mov
repnz
mov
xchg
ror
adc
and
shl
xlat
sub
add
addr16
jno
subb
and
inc
aas
dec
jecxz
jnp
cli
xlat
add
data16
cmp
add
add
jg
jmp
popf
loop
pushf
mov
xor
pop
repnz
add
or
cwtl
popf
fsubs
aaa
push
scas
xor
xchg
push
adc
mov
and
push
jo
lret
mov
and
roll
jno
test
inc
scas
fdivs
std
sbb
mov
xchg
insl
popf
and
xor
jae
loopne
cs
jl
adc
les
in
xchg
aad
ja
or
out
sub
push
fcoms
and
mov
and
ljmp
mov
add
aas
iret
sub
sub
xlat
fiaddl
and
jnp
cli
xor
jl
dec
adc
enter
ret
movsl
fwait
inc
cld
mov
jnp
int3
iret
cld
and
and
mov
push
out
imul
pop
or
cmp
nop
into
ret
ds
pusha
lods
xchg
shlb
xor
stos
mov
adc
mov
push
ror
mov
stos
mov
loope
inc
inc
daa
rorl
outsb
dec
mov
xchg
mov
test
and
fnop
shlb
inc
sub
mov
xchg
xor
loop
imul
movsl
add
or
adc
adc
mov
push
dec
popf
pop
pop
aad
ret
in
and
jge
mov
scas
mov
cmc
cmc
daa
push
cmc
popf
stos
mov
xchg
arpl
pop
lods
mov
repz
mov
adc
cmp
test
addr16
bound
pop
sub
je
jge
push
int
jbe
popf
sahf
inc
mov
adc
mov
outsb
adc
xor
mov
and
dec
les
stos
pop
inc
dec
pushf
and
sub
pop
cmp
inc
dec
cmp
outsl
call
and
loopne
add
inc
add
ja
das
sub
xchg
jmp
fistl
mov
mov
mov
cwtl
adc
sahf
lret
and
xchg
adc
cmp
cvtps2pd
loope
fnstsw
adc
push
loop
test
movsb
add
push
xor
in
mov
or
sub
ds
pop
cmp
or
sbb
jns
mov
popf
mov
out
or
mov
movsl
pop
sbb
imul
add
or
ror
mov
out
out
test
fcomip
mov
and
loopne
or
xchg
sbb
fildll
mov
repz
inc
mov
pop
daa
js
test
xlat
movsb
loopne
js
outsb
and
mov
shlb
mov
push
stos
test
popf
adc
data16
lea
out
test
shr
dec
subl
aam
push
inc
sub
push
in
cltd
mov
sti
add
icebp
or
adc
xor
push
mov
scas
sbb
movb
jae
jns
pop
xorl
das
xor
jno
sar
pop
push
or
lods
rolb
mov
inc
jno
out
out
inc
cld
inc
xor
pop
push
lahf
gs
sbb
ljmp
xchg
dec
sub
popa
orl
xchg
sbb
sub
call
inc
sbb
sti
cmp
insl
loopne
mov
mov
add
loopne
std
dec
xor
fldl
mov
dec
fsubrs
leave
mov
in
cltd
xor
dec
mov
insb
in
ss
ljmp
add
cmpsl
and
push
cld
les
adc
mov
fistps
test
cs
out
xchg
scas
shrl
stc
mov
aas
rorb
xorb
mov
xchg
movsl
xchg
xor
push
sbb
insb
push
inc
inc
out
mov
add
aaa
mov
arpl
pushf
jne
pop
or
xchg
divb
movsl
mov
dec
std
sbb
mov
cwtl
fcoml
mov
out
dec
loope
fucomi
ljmp
sbb
mov
push
out
cli
xlat
mov
xchg
pushf
repz
ss
push
fidivl
lea
shl
dec
mov
iret
or
std
mov
aad
and
mov
mov
loopne
xchg
adc
xor
sarb
mov
lahf
xor
fdivrl
paddb
xor
sbb
mov
fbstp
ja
fcoms
mov
or
mov
sub
sbb
outsb
mov
xchg
popa
pop
das
push
push
push
aad
dec
daa
mov
rcrb
sahf
cs
mov
fs
dec
sbb
cmc
out
in
jecxz
xchg
cs
scas
inc
test
loopne
push
int3
mov
pop
dec
cmp
cwtl
jg
ret
aaa
ret
test
sub
sub
test
xor
jo
and
jnp
mov
leave
into
test
inc
addr16
das
aas
sub
subb
jg
push
gs
nop
inc
test
pop
adc
sub
out
stos
lds
jecxz
jns
adc
mov
cmp
shrl
dec
xchg
mov
mov
aas
cli
xchg
data16
xor
ljmp
ss
cmp
clc
js
popa
dec
subb
repz
jnp
sbb
cmp
jmp
lahf
cwtl
xor
xchg
mov
push
popa
xchg
pop
subb
sub
mov
cltd
test
sbb
mov
enter
gs
inc
call
popf
sti
inc
leave
es
or
adc
cmp
cmc
mov
jmp
sub
jne
stc
mov
leave
cld
jno
das
lret
jo
insl
das
sub
pop
jbe
repnz
mov
add
jnp
mov
mov
subl
insb
and
jbe
mov
xchg
sbb
sbb
jl
fs
ljmp
bound
sahf
adc
mov
xor
test
and
push
in
out
dec
and
sub
pushf
xchg
jae
adcl
popa
add
mov
or
xor
in
ret
xchg
mov
xor
push
decl
adc
scas
cli
clc
aas
repnz
inc
add
pusha
xor
and
xor
fcoms
mov
les
into
shrl
mov
pushf
int3
jae
fcompl
dec
loopne
aad
jle
xor
jnp
jecxz
pop
add
aaa
bound
dec
cmc
cli
imul
test
or
lds
jno
enter
jge
addb
test
jg
or
xchg
cmpsb
popa
and
fisttps
sbb
movsl
das
xchg
xchg
je
sbb
scas
out
clc
xchg
xchg
mov
fistl
add
cs
pop
mov
lret
mov
add
dec
dec
adc
mov
enter
xchg
jl
dec
rorl
jbe
ret
std
cmpsl
mov
sub
mov
pop
pop
in
aam
mov
or
xor
mov
add
fucomip
push
outsl
stos
and
std
pop
mov
cs
cwtl
outsb
bound
in
adc
xor
xchg
popf
jb
ficoms
sub
add
dec
lret
mov
iret
mov
cmp
loopne
lea
or
adc
push
xor
or
sub
arpl
mov
imulb
call
jl
mov
jmp
stc
fbld
and
mov
add
mov
aad
jae
loop
push
js
movsl
mov
lock
xchg
mov
cmpsl
mov
pop
sub
data16
popa
loopne
ljmp
mov
rcrb
mov
sub
cmc
bound
lahf
les
mov
pop
scas
addb
insl
pop
xchg
stos
push
notb
mov
dec
jne
jne
lea
decb
jmp
int3
xchg
mov
add
int
adc
loope
in
pop
xor
mov
outsl
or
out
pop
popf
mov
jp
pop
sub
pop
push
jg
fimull
daa
mov
out
daa
push
das
outsb
orb
clc
fwait
ror
loope
leave
adc
ljmp
jp,pn
jno
xchg
mov
or
in
or
lock
add
xor
lods
jecxz
xchg
aaa
fisttps
sahf
jle
push
lcall
mov
outsl
add
mov
push
add
pop
rorb
fs
fcmovnbe
adc
or
inc
inc
xchg
repnz
cmp
mov
or
mov
insb
sub
add
or
clc
sbb
fnstcw
es
je
pop
add
cmovno
aas
and
mov
inc
mov
push
push
pop
fisubrs
cmp
jns
xlat
lea
mov
mov
call
mov
movsb
sbbl
xlat
cmp
inc
out
dec
or
js
pop
mov
cmc
or
ja
mov
inc
mov
mov
movsl
gs
ja
mov
xchg
dec
inc
push
add
push
mov
push
mov
pop
xchg
ljmp
dec
sbb
xor
std
mov
xchg
jno
insl
push
leave
adc
rorl
sahf
mov
mov
mov
cwtl
dec
jns
inc
movsl
stc
sub
sti
outsb
arpl
pusha
dec
mov
push
dec
mov
inc
inc
call
fisubs
aas
scas
ljmp
adc
subb
xor
arpl
imul
pop
nop
mov
xchg
cmp
adc
je
jl
and
mov
inc
aas
jmp
mov
cmpsl
test
and
imul
out
push
jae
xchg
test
inc
add
and
push
std
std
and
add
ja
xor
loopne
cli
cmp
xlat
shl
inc
dec
push
xchg
adc
xor
jle
adc
testl
dec
je
dec
lret
mov
xor
out
out
mov
pop
sbb
aam
js,pt
xor
pushf
sbb
sbb
cs
inc
xor
test
adc
push
cmp
pop
xor
sbb
push
xor
js
jp
enter
inc
aaa
mov
pusha
ljmp
std
stc
fnsave
xchg
pop
adc
popa
xor
push
mov
pushf
xor
xor
movsb
mov
jb
outsl
fidivl
dec
cmc
mov
push
xchg
push
daa
cmp
sbb
inc
mov
cld
jo
sub
or
push
cmp
cltd
and
sub
mov
js
pop
int3
mov
mov
sub
pop
mov
sbb
adc
sbb
idiv
push
repnz
stos
push
sub
or
add
cli
mov
xor
push
mov
sbb
rcll
jbe
dec
mov
jl
call
push
pop
inc
jae
inc
jnp
movsl
decb
dec
decb
jo
sbb
xor
jl
aaa
cld
icebp
and
cmp
loopne
add
leave
mov
lods
sub
arpl
fwait
and
mov
loope
aad
stos
pop
sbb
jno
add
popa
adc
xchg
pusha
pop
fldcw
xchg
into
out
mov
jl
out
jo
imul
push
outsb
mov
or
aaa
les
je
shrb
into
testb
mov
outsl
pop
loope
jl
add
push
and
movsl
leave
out
fisubrs
cmp
data16
inc
add
lea
and
fnstenv
sbb
dec
or
sti
je
gs
test
fs
bound
sbb
jno
xor
fistl
iret
inc
xchg
dec
jns
call
push
ds
and
inc
add
cmp
divb
jp
cmp
dec
lods
adc
pop
or
add
aas
push
xor
cmp
lcall
pop
sub
out
popf
in
sub
lcall
mov
cmc
dec
pop
pop
fmull
and
jecxz
jmp
xlat
mov
adc
js
in
pop
cmp
mov
add
sub
pop
xor
xchg
jns
loope
push
adc
xor
aam
xchg
xchg
test
and
pop
pop
lret
sub
dec
mov
dec
mov
sbb
fsubs
data16
nop
insl
lods
xchg
inc
das
mov
in
xor
push
cmp
in
dec
or
js
adc
test
aaa
pop
push
aam
add
sahf
push
jmp
jo
sub
repz
ljmp
outsb
or
outsl
aas
xchg
repz
call
fldcw
jl
shl
push
lret
or
push
pop
xchg
js
std
int
pop
cs
sarl
ret
jg
into
jl
repz
mov
mov
mov
sbb
outsb
test
add
sub
mov
cmp
sbb
push
or
out
stc
ret
add
xor
sbb
aaa
sub
gs
xchg
lock
mov
push
mov
rcl
cmpsb
enter
ljmp
add
stos
jns
loopne
lret
xchg
mov
movsl
pusha
sbb
ficompl
pop
cs
pop
mov
in
cpuid
cld
cmp
cmp
out
jno
pop
ret
push
aam
and
add
pop
imul
xchg
dec
cltd
xor
jl
sti
jmp
or
fcompl
and
jns
sub
adc
inc
ds
mov
push
lahf
dec
sub
xchg
push
xor
xchg
fnsave
dec
xchg
and
xor
add
cmpsl
jg
mov
sbb
int3
adc
or
test
xchg
int3
les
das
enter
cmp
outsl
or
push
push
rcr
enter
pusha
cltd
jnp
lods
in
out
movsl
sbb
push
arpl
and
je
mov
inc
outsl
ja
ret
test
mov
outsb
lret
push
pop
mov
sub
cmp
popa
loopne
ss
mov
jb
jne
clc
sub
icebp
out
inc
push
add
pop
push
call
faddl
xor
mov
insl
xchg
dec
out
aad
pop
movsb
hlt
mov
xor
push
and
rcrl
or
xlat
call
mov
or
jp
int
std
xchg
xchg
leave
pop
loope
out
cltd
aad
mov
enter
shll
test
mulb
addr16
pop
mov
jg
shlb
popa
movsl
ret
mov
and
lds
sbb
xor
xchg
xor
subb
jno
mov
in
mov
xchg
aam
rorb
mov
cld
add
xchg
mov
jbe
and
insb
jl
xchg
arpl
dec
sbb
xor
and
decl
jmp
jae
adc
cmp
xor
sub
inc
pop
pushf
clc
les
in
adc
push
test
icebp
outsb
xor
out
and
adc
popl
jecxz
movaps
jecxz
daa
pushf
les
adc
inc
xchg
clc
sahf
add
sub
pushl
lods
mov
inc
test
mulb
pusha
sbb
pop
aas
pop
lret
pop
int3
divb
mov
loopne
aam
mov
jbe
ret
xchg
adc
aaa
cld
addb
push
mov
lret
push
jecxz
stc
test
cmp
pop
mov
call
outsb
cmpsb
daa
mov
call
enter
rclb
mov
pop
or
jle
push
outsb
nop
xor
xor
mov
xchg
and
xchg
pop
mov
lret
or
test
in
pop
fdivs
ret
mov
jmp
iret
push
jb
mov
in
sub
jns
lcall
or
mov
ret
cmpsb
add
sbb
fs
inc
sub
push
jl
in
cmpsl
cs
sbb
test
cmp
rcrl
push
mov
loop
pusha
mov
mov
push
adc
sbbb
cmp
popf
pop
inc
adc
push
lcall
push
fmuls
xchg
and
mov
push
push
lret
sub
xchg
es
jl
and
dec
out
lcall
adc
adc
add
pop
cmp
add
pusha
out
xchg
lea
mov
add
sub
aam
sub
sub
std
and
sbb
mov
loopne
stos
out
test
mov
fiadds
inc
in
inc
fldenv
pop
push
out
cmp
fcmovnb
xor
call
les
push
jbe
loopnew
aad
stc
cmp
call
fs
rcll
shlb
cmc
js
inc
fimull
pusha
sti
mov
pop
or
hlt
mov
shl
aad
sbb
cmp
mov
sub
fidivrl
movsb
je
lock
sub
std
aad
xchg
packsswb
inc
xor
sub
dec
aas
sbb
pushf
cs
and
xor
bnd
and
insl
repnz
xlat
shll
lahf
loope
pop
jne
cmp
cmpsb
jmp
cmp
xchg
cmp
inc
mov
vcvttpd2dqy
es
or
xor
scas
out
xchg
pop
scas
cmp
lahf
mov
pop
and
or
mov
mov
pop
mov
jmp
aas
roll
stos
lcall
mov
lds
mov
std
loopne
cld
cltd
mov
and
jno
sbb
jp
jp
xchg
gs
cmp
jno
mov
gs
and
xor
push
ret
jb
push
jne,pt
outsl
pop
mov
cs
scas
xchg
xchg
mull
inc
jg
scas
dec
jns
add
lahf
lea
push
mov
and
push
pushf
mov
imul
ret
push
mov
sti
xorb
dec
sbb
rcrb
jp
pop
repnz
lock
xor
or
aad
lods
lea
cmp
jnp
call
aam
out
clc
mov
mov
movsb
jo
out
stc
fisttpll
xchg
or
cs
push
in
je
test
sub
mov
js
test
hlt
loopne
ret
add
or
aaa
cwtl
xor
fwait
inc
enter
xchg
pop
scas
cmp
rcrl
cmp
loop
cmp
add
and
sbb
dec
and
rolb
ljmp
cli
push
inc
lods
xchg
fdivs
pop
sarb
movsl
shlb
test
xor
sub
inc
jmp
adc
cmp
mov
jp
sbb
fldcw
mov
repnz
xchg
sub
rol
jbe
clc
xchg
ret
lds
ss
xchg
mov
push
and
inc
xchg
dec
lcall
mov
les
pop
push
enter
push
or
fs
push
mov
lea
and
push
cmp
aas
lds
cmp
lahf
or
mov
ja
stos
mov
xor
leave
pop
xlat
inc
jle
push
xchg
jle
mov
and
shr
je
xor
xlat
xchg
inc
xchg
js
mov
push
push
dec
scas
aas
decl
rcrl
andl
cwtl
adc
mov
xchg
das
pop
sub
test
pop
pushf
cld
pop
fnstenv
pop
mov
out
int
xchg
out
mov
repnz
cmp
jmp
dec
mov
mov
xchg
or
ja
stc
call
pop
pop
in
sbb
loopne
mov
pop
push
mov
mov
loop
cwtl
dec
mov
inc
out
xchg
loop
push
dec
sbb
fsubrp
sbb
sahf
cmpsb
daa
sub
cmp
inc
scas
lock
and
push
sbb
mov
aam
ss
add
rclb
dec
iret
data16
hlt
arpl
jmp
mov
sub
stos
dec
mov
int3
mov
pop
dec
pop
xchg
inc
xor
call
stos
fsubrs
out
in
mov
mov
pop
mov
and
jecxz
xor
pop
arpl
mov
fnsave
inc
cmp
ja
jle
pop
lret
mov
cs
fldt
in
mov
or
or
xchg
leave
pusha
sub
cltd
enter
shll
cmc
shl
lcall
cmp
in
adc
mov
pop
mov
cmpsb
and
cli
jmp
or
cmc
xor
lods
jmp
jecxz
fists
sbb
js
imulb
push
repz
xchg
nop
cmp
xchg
cmp
frstor
push
insl
and
cltd
outsl
push
cli
rorb
int3
rolb
jp
test
or
aam
int
ja
xchg
jmp
loope
fldl
loopne
test
cld
icebp
inc
dec
ret
jle
jmp
addr16
pop
enter
sub
jle
in
frstor
fiaddl
mov
lods
aas
iret
push
pushf
cmpsb
mov
sbb
test
int
aas
rorb
push
out
rcll
adc
cmp
adc
mov
and
sbb
in
adc
pop
jge
mov
mov
xchg
test
fdiv
cmpsb
push
or
pusha
mov
aaa
test
mov
xor
popa
shlb
fmull
sbb
jne
or
mov
mov
or
movsl
sbb
pop
push
sub
ds
sbb
add
aas
shrb
ret
xchg
or
mov
js
stos
aas
mov
sub
mov
negl
inc
inc
mov
lahf
dec
nop
aaa
pusha
mov
lea
sub
vmread
imul
cs
popa
jno
arpl
jo
sbb
cmp
xchg
or
imul
pop
push
loop
sub
mov
fstps
xor
jnp
cltd
mov
mov
pop
stc
inc
push
push
add
inc
dec
and
or
stc
pop
and
mov
mov
sti
jecxz
call
push
push
aam
mov
push
mov
lret
and
test
cmp
fwait
int
ret
push
scas
inc
inc
in
jno
mov
xchg
jnp
xor
je
sub
clc
movsb
add
sub
fldcw
pop
and
cs
inc
dec
gs
push
ss
shl
xorl
out
repz
and
jnp
test
add
rclb
lock
xchg
adcb
imul
mov
mov
das
adc
adcb
out
inc
cwtl
fs
shl
ljmp
hlt
cld
xchg
cmp
xchg
jp
push
icebp
cmp
insb
push
and
lret
cld
push
xor
add
or
push
outsl
test
shl
repz
jne
xchg
les
popf
mov
mov
ljmp
push
ss
in
pop
mov
lret
outsb
xchg
jmp
test
jae
push
jl
stc
sarb
lcall
test
add
loopne
aad
insb
push
cmp
jae
shrl
jmp
clc
adc
addb
mov
es
push
into
push
xchg
mov
xor
dec
inc
lea
enter
mov
inc
xchg
cmp
lahf
sbb
rcr
push
inc
push
jbe
mov
mov
sub
mov
aaa
lcall
xchg
dec
aaa
jl,pn
mov
mov
jno
pop
or
mov
ja
push
push
mov
mov
loope
or
ss
and
in
pop
mov
adc
and
es
push
cmpsl
in
jge,pn
insb
ret
dec
mov
ljmp
outsl
mov
ja
and
or
js
dec
and
mov
neg
nop
mov
xchg
negl
loope
push
or
in
xor
mov
sub
shll
add
stos
or
outsb
cli
rolb
ret
fidivrl
push
mov
fwait
rolb
imul
insl
push
icebp
fiaddl
pop
popa
push
fucom
mov
rcr
or
in
pushf
inc
and
loopne
add
lea
and
stos
add
fs
pop
cli
pop
dec
sbb
in
insl
fs
inc
cmp
cli
stc
adc
dec
pop
pop
int3
xchg
call
sbb
aam
jle
sub
in
sbb
ss
pusha
jp
dec
or
movsl
arpl
aaa
orb
sbb
push
xor
inc
sub
sbb
add
cmp
or
fcmovb
mov
cmpsl
fwait
das
xor
push
out
pop
andb
flds
xor
push
out
sahf
lock
nop
and
add
push
popf
cwtl
cmc
lret
mov
add
mov
mov
jge
stos
mov
mov
les
scas
in
adcb
sub
aam
mov
notl
mov
mov
hlt
sarb
pop
jg
adcb
fwait
out
pushf
xchg
jo
mov
xor
mov
retw
mov
repz
inc
cmp
cmp
pop
mov
mov
push
mov
shlb
loope
push
test
push
hlt
vmwrite
xchg
int3
sbb
jbe
scas
insb
fidivrl
fidivrl
push
xor
inc
mov
sub
mov
lds
les
adcl
les
jge
xchg
int
les
xorb
aaa
insb
sbb
aad
js
insl
xchg
inc
fistpl
lods
int3
sub
pop
roll
mov
daa
pusha
dec
mov
push
dec
hlt
pop
pop
inc
add
test
sub
stos
aad
jnp
lret
push
fldt
mov
jp
fidivl
mov
jmp
jge
mov
cli
in
data16
xchg
fistpl
pop
aad
insl
xlat
xchg
sub
pop
cmpsl
stos
and
sub
mov
xor
and
mov
or
scas
test
lods
and
push
push
inc
ljmp
push
add
jne
xchg
lock
loopne
pusha
mov
or
shlb
repz
jae
jp
cmpsb
fidivl
mov
ret
jmp
popa
cmpsb
pop
les
push
das
adcl
imul
jg
sbb
stc
adc
push
fcoms
les
mov
sbb
dec
push
test
inc
mov
fcmovb
jo
aaa
jge
sub
femms
cmp
adc
ret
lret
fabs
xor
jp
xchg
xor
or
lock
push
and
lret
xchg
imul
daa
xorb
ja
xchg
or
fnstcw
into
testl
iret
gs
daa
loopne
or
fldenv
xor
mov
push
call
cmp
mov
ja
test
sahf
push
jno
and
shll
jo
test
std
mov
gs
pop
add
jl
imul
mov
movsl
mov
cltd
inc
icebp
movsb
mov
int3
lcall
idivb
add
ret
ret
lea
cmp
dec
jmp
popa
insb
dec
xchg
das
jge
adcl
ljmp
push
cmp
stc
inc
pop
adc
jl
xor
xor
xchg
insl
sbb
test
mov
cmp
outsl
and
jno
sar
cmp
aaa
inc
cmpsb
jnp
in
inc
lret
mov
sub
or
rcrl
xchg
xor
mov
push
ja
sbb
dec
mov
je
mov
mov
push
popa
adc
inc
pusha
popl
xor
sub
xor
fsubl
jl
clc
mov
push
mov
push
and
inc
and
sub
in
into
push
flds
outsl
lcall
adc
aas
lret
int
dec
mov
mov
mov
mov
xor
les
ds
mov
movsl
shl
push
jne
push
out
cmp
mov
inc
mov
lock
test
lods
mov
mov
mov
cs
mov
repnz
pusha
mov
lds
mov
ret
jmp
test
or
sub
xchg
dec
mov
push
sti
inc
ret
into
cltd
inc
or
jnp
cmp
fcoml
cli
sub
je
xor
ljmp
mov
adc
cmp
imul
mov
dec
lods
fs
jge
jae
notb
outsl
out
add
nop
cmp
inc
adc
arpl
mov
gs
jbe
and
fnsave
mov
sub
dec
jle
daa
clc
rcl
test
sarb
push
jo
cs
or
pop
aaa
les
jb
pop
add
inc
out
cmpsl
jno
std
je
enter
push
fmull
mov
divb
test
add
ficoml
or
lret
mov
mov
lock
in
lret
pop
mov
sub
das
push
xchg
out
inc
adc
fisubrl
arpl
addr16
ficoml
push
and
jne
fisttpll
int3
hlt
popf
stc
and
adc
mov
mov
jle
aam
sbb
cmp
or
fnstenv
push
add
rcrl
mov
cwtl
dec
cmp
clc
sbb
cmp
out
or
sbb
movl
dec
sub
ret
xchg
and
sbb
push
sub
xor
rep
lock
mov
dec
nop
in
xor
xor
ret
fbstp
ss
mov
push
sbb
xor
popf
lahf
test
xor
cmp
mov
movsb
xchg
sub
inc
pop
and
mov
in
int
jne
lock
pop
jns
sub
xchg
pop
mov
jmp
rclb
das
push
hlt
pop
jnp
movsl
mov
call
add
xor
mov
xchg
pop
daa
into
inc
mov
jge
cmp
adc
and
and
mov
xchg
jae
cmp
cmc
std
inc
mov
jnp
daa
std
mul
or
mov
push
or
dec
xlat
arpl
dec
ja
sbbb
lcall
xchg
sub
jge
inc
jne
sub
ss
add
inc
div
push
add
incl
add
lock
xchg
cmpsb
xchg
fistps
call
push
scas
push
divb
dec
cmp
repz
enter
dec
push
jg
arpl
jg
cmp
inc
push
insl
addr16
mov
scas
je
popaw
mov
std
pop
mov
jmp
mov
pop
xor
lret
push
pop
push
stos
icebp
in
add
mov
mov
jle
mov
xchg
push
adc
fists
shll
jns
testb
mov
mov
ss
shll
xchg
inc
outsb
scas
push
das
test
xor
xor
mov
arpl
cmp
pusha
insl
ret
enter
repz
lods
xchg
mov
es
jns
lret
fistps
addr16
mov
push
das
and
push
adc
xchg
iret
push
ficomps
and
xor
xor
cmpsb
clc
stos
out
test
add
xchg
inc
add
xor
mov
js
mov
lods
inc
cli
idivb
sbb
add
add
inc
insl
push
cmp
xchg
and
cmp
aas
call
incl
fnstenv
pop
mov
xchg
cmc
imul
lods
loope
xchg
and
daa
mov
inc
dec
clc
jb
xchg
imul
idivb
in
aam
mov
inc
dec
subl
loop
dec
and
adc
mov
add
xor
pop
and
bound
inc
pop
inc
fcoml
aaa
cmp
hlt
aam
xchg
andb
lds
xchg
je
mov
and
mov
or
cmp
pop
ljmp
sub
es
add
push
sbb
fildll
int
xchg
je
and
int3
mov
push
sub
mov
out
aad
sub
test
xchg
jns
xchg
arpl
loop
insb
clc
lods
sbb
in
fidivs
jp
rolb
arpl
pop
adc
fwait
or
pop
pushf
xlat
inc
imul
in
dec
mov
in
lret
mov
adc
and
mov
pop
inc
test
fwait
or
dec
mov
or
iret
xchg
bound
out
pop
push
loopne
pop
cmp
xchg
repz
add
in
xchg
sub
aaa
xchg
sbb
dec
or
das
jns
push
cmp
lret
inc
repz
and
inc
inc
jg
mov
adc
jae
lea
sbb
setg
push
sub
test
sar
jo
pop
repz
cmp
sbb
insl
callw
mov
mov
test
sub
lds
or
in
dec
add
je
nop
sti
pushf
fs
add
pop
cmp
sahf
pop
xor
loopne
out
jne
mov
inc
aam
push
addr16
push
inc
or
xlat
adc
in
stc
je
dec
inc
sahf
loop
stc
lret
fcmovne
adc
xor
lahf
sbb
das
mov
test
repnz
push
push
push
cld
push
xchg
adc
sbb
aad
jb
pop
out
pop
add
pushf
in
pop
adc
inc
inc
leave
mov
jmp
sti
outsl
leave
outsl
mov
cmc
pop
dec
cmp
jb
mov
jno
outsb
xchg
mov
mov
mov
ret
inc
int
dec
insl
imul
popf
fwait
iret
cmp
leave
inc
cwtl
mov
in
mov
add
scas
fcompl
cli
rcl
dec
fs
lahf
and
scas
cmp
xor
and
test
mov
loope
or
pushf
leave
out
pop
cmp
sub
dec
lea
pop
ja
addr16
dec
call
mov
sub
cli
jae
mov
pop
xor
cmp
jg
pop
ljmp
pop
andl
sub
jne
enter
cld
sbb
cs
lahf
sub
lock
or
adc
popa
inc
bswap
jp
jno
pop
jb
jo
cmp
xchg
lret
hlt
sti
shrb
xchg
sub
dec
adc
mov
adc
cltd
icebp
jae
pop
test
bswap
xchg
jno
adc
outsb
es
mov
in
jo
mov
mov
ret
jle
pop
movsl
sub
sub
lods
sti
jle
lods
xor
test
xchg
or
adc
dec
sbbb
inc
adc
mov
cltd
jb
inc
lods
aas
rclb
mov
faddl
dec
push
push
mov
mov
mov
iret
adc
inc
mov
pop
out
lods
push
sbb
dec
fcomp
jbe
xchg
inc
and
cmpsb
dec
lahf
dec
jne
xchg
lods
lods
andl
int3
cmp
sbb
test
xchg
dec
mov
mov
ret
lods
sti
mov
xchg
mov
bnd
and
jg
jbe
or
cli
ds
jae
in
mov
mov
dec
jp
push
ljmp
inc
mov
or
sti
out
adc
add
push
adc
sbb
mov
jmp
mov
pop
imul
mov
cmp
negl
dec
inc
lahf
pop
into
pminsw
stos
dec
cs
add
sub
rcrl
inc
fs
rcl
jmp
pop
fstps
rclb
and
or
sbb
push
jg
rcrb
adc
cmc
movb
data16
cmp
xor
pop
adcl
mov
push
aad
mov
outsl
test
xor
mov
or
sbb
sub
pop
addr16
mov
std
divb
fstp
incb
mov
cmpsb
mov
lahf
mov
and
cld
sbb
jnp
icebp
repz
xor
mov
stos
daa
sbb
dec
mov
imul
lods
cmp
or
mov
push
test
pop
cwtl
fsts
dec
inc
and
xor
mov
daa
mov
cld
mov
stc
dec
pop
divps
sub
lahf
in
pop
xor
imul
cmp
sub
lret
cli
inc
popa
outsl
lret
mov
lahf
jl
enter
adc
jbe
xchg
xor
dec
xchg
cld
insl
sub
cmp
popf
lcall
inc
or
je
mov
mov
mov
ss
out
pop
cmp
loope
orb
popf
inc
mov
gs
add
lcall
addr16
mov
test
nop
cmp
adc
adc
pop
jae
pop
test
sub
jle
aaa
fcoms
repz
inc
jnp
mov
xor
mov
cs
push
repz
hlt
jo
sbb
icebp
fs
loope
adcb
push
xchg
push
dec
fs
xchg
adc
cmpsb
ds
cvtdq2ps
imul
fs
test
sub
or
jmp
mov
mov
jo
imul
out
mov
mov
mov
dec
xor
mov
mov
jno
idivl
mov
xchg
sti
jg
and
shlb
fistpll
jp
xchg
jns
or
mov
fldenv
mov
ja
movsb
lea
sbb
adc
cmp
es
and
mov
xor
lret
mov
insb
add
mov
ds
xchg
inc
lods
jge
lock
inc
imul
cli
aad
sbb
xorl
mov
fs
fdivs
push
bnd
sbb
sbb
stc
sub
imul
pop
pop
push
xchg
jmp
data16
ljmp
pop
adc
std
inc
fcom
insl
imull
mov
jl
sbb
icebp
es
pmuludq
mov
cmp
sub
dec
xchg
pop
ficoms
push
mov
sub
enter
and
mov
out
pop
repnz
dec
mov
mov
push
hlt
jns
jle
dec
loop
xor
xor
lret
aad
ljmp
inc
sbb
dec
pop
sub
sub
movsb
inc
add
movsl
jns
add
dec
cmp
and
shlb
stos
repz
push
out
add
lods
dec
xor
mov
pop
mov
jp
sbb
mov
mov
mov
xchg
in
push
int
add
or
out
addr16
mov
mov
mov
or
push
enter
popf
sbb
cmp
out
xlat
jmp
fisubrs
mov
inc
scas
pop
arpl
ja
push
fdivrs
outsb
es
adc
sbb
scas
push
and
stos
pusha
daa
fisttpll
adc
inc
xchg
or
pop
dec
shlb
ja
and
mov
inc
cmpsb
push
push
pop
scas
inc
mov
xchg
outsl
xchg
push
arpl
mov
sbb
fnstenv
mul
cmp
xorl
add
jle
imul
adc
stos
js
and
xchg
mov
dec
lea
pop
loopne
aas
inc
xchg
clc
sbb
movsb
and
ja
dec
sub
cltd
mov
fucomi
xor
rcrb
mov
insl
fldl
push
popa
lods
or
lret
pop
cmp
icebp
loop
das
xor
fstpl
pop
cltd
mov
mov
push
xor
push
mov
call
push
pop
repnz
fisubl
inc
scas
fildll
pop
fs
cwtl
pushf
jno
jg
add
sarb
shrb
push
imul
pop
aad
mov
jae
enter
movsl
xor
mov
mov
pop
add
pop
test
jae
mov
pop
ret
cli
dec
mov
pop
mov
push
sahf
jnp
mov
aam
ja
mov
ficoml
or
and
push
in
ror
ret
cmp
ret
mov
sti
rorb
flds
fldcw
push
push
test
jns
out
and
mov
sbb
mov
jbe
shl
sbb
sbb
xor
out
xchg
ret
fidivs
add
inc
or
cmp
insl
adc
ljmp
pushf
mov
call
dec
cwtl
lods
mov
xorb
cmpsl
fs
push
xchg
mov
jns
push
sbb
orb
arpl
pop
add
lds
add
cmp
adc
mov
rcr
push
pusha
mov
add
sub
stos
dec
dec
xchg
mov
mov
push
adc
dec
sub
pop
or
icebp
inc
adc
lea
cwtl
nop
jecxz
dec
mov
les
popf
lahf
push
aas
xchg
in
fidivs
push
lds
cmp
cmp
xchg
mov
imul
sub
sbb
rclb
lds
ja
in
jp
mov
pop
dec
inc
test
aam
mov
aad
and
dec
mov
inc
ss
dec
daa
mov
pop
or
dec
push
out
push
push
test
cmpsb
dec
or
js
bound
adc
nop
sub
pop
int3
jle
adc
and
xor
jmp
rcr
jmp
sbb
ret
xor
jb
les
add
imul
pop
sbb
rep
das
mov
movsl
int
mov
ficomps
ja
mov
rcrl
xchg
add
cmp
cmp
sub
mov
xchg
insb
jmp
xor
stos
and
push
imul
or
push
mov
add
mov
dec
jb
mov
fsubl
ds
imul
dec
push
pop
stos
sbb
xchg
push
mov
fisttpll
int
or
and
add
push
mov
outsl
mov
mov
sub
push
jge
rcr
mov
rdmsr
orl
mov
or
inc
jmp
push
adc
jno
in
inc
push
push
icebp
cwtl
mov
cmp
pop
fcmovbe
repnz
int
or
lret
paddusb
enter
lods
dec
jnp
rolb
jmp
cmp
dec
add
cli
pop
popf
pop
pop
ds
add
lods
mov
arpl
cld
mov
lret
jl
mov
or
fcoml
dec
push
jle
out
push
dec
jns
arpl
cmpb
stc
mov
push
jno
rorl
sbb
pop
sbb
pop
mov
popa
stos
cmp
addl
xor
jg
inc
jl
pop
mov
jg
sbbl
cmp
roll
push
add
cmpsl
and
and
mov
test
mov
into
cli
mov
ss
xchg
aaa
aaa
adc
clc
ss
xchg
ror
sbb
repnz
imul
jb
mov
jle
bswap
jb
stos
push
lds
jbe
add
push
cmpsl
and
pop
or
sbb
adc
jle
xchg
pop
das
imul
cld
clc
dec
outsl
popa
xor
push
push
pop
pop
mov
pop
sbb
xchg
push
inc
stos
jo
pop
xchg
sahf
insl
lods
pop
push
cmpsl
cmc
lret
in
jns
and
inc
shrb
addr16
cmpsb
addl
inc
test
dec
cwtl
cmp
fwait
fwait
sbb
lcall
jmp
xlat
sbb
xchg
popa
test
pushl
fsubrl
mov
in
jp
jecxz
add
and
pop
pushf
add
outsb
adc
cltd
scas
lcall
jmp
sub
insb
pop
xor
sbb
mov
xor
int3
cmp
cli
adc
ror
mov
add
jmp
xchg
mov
pop
mov
inc
mov
insb
ljmp
pop
or
jge
fstpl
popf
inc
std
cmp
shl
jns
xchg
lods
shll
add
mov
leave
test
mov
adc
mov
or
imul
dec
mov
jp
inc
xorb
add
pop
cld
mov
push
dec
cli
xchg
les
jecxz
icebp
mov
adc
pusha
push
es
mov
jae
xor
pop
push
push
push
inc
jmp
dec
rorl
insl
aas
lods
addb
mov
mov
lret
in
xchg
jbe
cld
inc
mov
hlt
xrelease
cld
in
mov
stos
lahf
jg
cld
or
jns
cwtl
ljmp
pop
pop
pop
add
dec
push
push
daa
aaa
jge
cmp
fwait
outsl
adc
leave
imul
pop
and
push
adc
in
je
xchg
or
and
inc
mov
call
fsub
xor
sub
adc
sub
movsl
mov
dec
sbb
jnp
jae
sbb
add
aad
or
mov
add
shrb
inc
shll
mov
jge
fsubrs
movsb
scas
add
cmp
sub
pop
cmp
pop
fimull
inc
mov
jge
and
jno
adc
les
mov
ja
add
in
inc
ljmp
adcl
push
dec
cmp
and
jb
int
test
jns
cmpb
xchg
push
hlt
push
sub
pop
mov
mov
and
mov
xchg
sub
call
pop
jle
mov
pop
sbb
gs
icebp
and
ljmp
cltd
mov
mov
mov
push
xchg
pop
imul
sub
xorb
in
daa
es
movsl
ja
mov
call
popa
push
sbb
imul
jg
mov
add
es
or
lcall
push
mov
div
mov
lock
cmc
mov
xchg
mov
xchg
ret
jo
in
jg
and
inc
inc
fisttpl
andb
mov
mov
sbbl
movsl
enter
add
or
xchg
inc
popf
or
mov
into
cmp
or
sti
fimuls
or
stos
in
loop
addr16
sub
push
je
cwtl
mov
push
xor
sub
jecxz
data16
inc
shlb
adc
jle
jmp
lahf
addr16
test
movsl
arpl
cmp
push
imul
add
pushf
adc
sbb
into
in
lret
add
add
aas
push
lods
mov
rolb
aad
inc
sbb
repz
push
mov
cmp
add
jbe
mov
out
xchg
mov
mov
fnstcw
add
push
and
mov
ret
std
push
mov
pop
push
imul
movsl
fwait
in
rorb
je
mov
test
int3
outsb
sbb
sbb
xchg
in
repz
push
xchg
and
adc
pop
nop
mov
imul
loopne
push
popl
sub
call
and
cs
xor
push
adc
clc
sub
andb
pop
gs
cmpsl
sub
sar
cmc
sarb
loop
push
mov
daa
ss
dec
aad
cwtl
mov
xchg
jg,pn
adc
dec
leave
add
inc
test
pop
pop
sbb
mov
jle
es
popf
jg
fcoml
and
cld
cmpb
dec
sub
les
cld
test
test
gs
push
jns
movsl
lret
in
lret
out
push
cltd
mov
ret
sbb
outsb
and
pop
hlt
aad
or
aad
jo
mov
popf
mov
push
lcall
movsl
shlb
push
jl
add
push
xchg
xchg
ds
jg
mov
sbb
aam
int3
dec
or
xchg
mov
adcb
cltd
or
sbb
add
repnz
sub
ja
xchg
sub
into
into
xchg
aad
jp
dec
dec
ficoml
test
das
push
scas
les
mov
xor
adc
fmuls
les
int3
call
cltd
iret
enter
in
adc
shlb
stc
adc
and
imul
sti
xchg
cmp
shll
pop
imul
mov
gs
call
repz
mov
sbb
ret
sub
movsb
push
and
mov
cld
fimull
add
iret
pop
test
repnz
and
and
add
adc
add
popf
cmp
int3
pop
mov
mov
iret
or
xor
push
pop
mov
pop
mov
ja
lea
xorb
cmpsl
mov
sub
and
mov
add
jecxz
add
lods
sbb
sub
addr16
ret
push
ja
fwait
test
pop
sub
inc
lret
lock
std
lcall
mov
sub
xor
lcall
add
pop
pop
sbb
movsl
ror
int3
ret
jbe
inc
cmp
test
jmp
popf
or
repz
and
mov
xchg
jb
dec
push
pop
imul
enter
imul
popf
and
pop
jbe
movsl
sahf
or
push
jbe
les
fmull
lea
inc
popf
pop
dec
mov
js
cmp
push
mov
rol
mov
ret
jno
lcall
mov
and
daa
es
inc
std
inc
sbbl
stos
mov
jb
dec
mov
push
aaa
into
sbb
cwtl
fimuls
sub
shlb
mov
lahf
cmp
jmp
in
cmp
loopne
daa
int3
test
mov
xchg
inc
icebp
sti
push
test
push
into
lcall
adc
pop
mov
adc
sbb
sbb
mov
mov
mov
lret
inc
push
test
or
ds
repz
imul
push
xchg
pop
or
inc
aad
dec
sub
pop
add
shl
in
push
popa
in
push
ret
inc
leave
push
call
clc
test
daa
loope
jle
xchg
mov
pop
and
shlb
pop
mov
fs
inc
cmpsl
call
cmp
stc
cvtpi2ps
cmp
mov
mov
rcrl
jo
pop
pop
lret
repz
clc
dec
xchg
gs
rcrb
push
mov
in
test
sti
xchg
stos
out
pop
insb
and
inc
mov
aad
hlt
sarl
aad
cwtl
mov
lret
out
adc
les
fmuls
mov
es
mov
sbb
jge
iret
or
cmp
mov
xchg
sub
ret
cmp
jne
loop
cmpsl
ljmp
push
mov
adc
fsubs
pop
sbb
sub
ret
add
popf
cmp
cmp
push
add
dec
xchg
out
sbb
mov
jo
xchg
mov
pop
ja
daa
hlt
int3
push
dec
jbe
pop
sti
clc
test
cld
sarl
sbb
idiv
rorb
mov
aad
and
fwait
int3
mov
jnp
xor
vcvtsd2ss
push
in
scas
mov
stos
and
adc
jge
cs
fs
cmp
test
mov
cmp
fwait
aaa
jns
pop
xchg
jmp
jnp,pt
push
mov
sarb
in
mov
fmull
jp
call
arpl
les
aas
sub
jle
enter
push
sbbb
pop
roll
sbb
mov
mull
sbb
inc
notb
or
loop
int
mov
xor
lea
out
cld
mov
fiadds
mov
ret
mov
adc
lock
fisttps
insl
sbbl
enter
mov
out
jmp
out
aam
sub
add
cmpsb
negl
cmp
xor
dec
push
fucomi
pop
inc
sbb
mov
pushf
jne
cmc
jl
repnz
push
lcall
stc
add
enter
push
aas
inc
adcb
rcrl
xchg
sbb
mov
pop
nop
pop
loopne
pop
aaa
insb
in
xchg
loop
push
lds
mov
or
mov
roll
add
stc
ret
bound
in
xchg
mov
add
mov
outsl
xor
mov
dec
mov
lahf
sarl
mov
mov
imul
popf
jnp
add
cmpsb
fisubs
xor
bound
arpl
jo
rol
sbb
push
pop
or
daa
mov
cmp
pop
cmp
jae
xlat
hlt
out
loope
loop
ret
pop
ret
xlat
push
popf
loopne
mov
xlat
nop
pop
jg
xor
outsl
test
dec
cmp
aas
jmp
add
pop
inc
xchg
into
sbb
sub
mov
sti
mov
pusha
pop
pop
iret
push
mov
aas
ds
push
fimull
jle
mov
lock
dec
add
add
into
mov
mov
outsb
mov
push
xlat
out
xchg
fcoml
cmp
push
fwait
xor
orl
sub
inc
sarl
leave
jae
or
aad
inc
call
loop
nop
inc
adc
repz
test
aam
pop
aaa
push
pop
inc
hlt
pop
add
add
or
lcall
sbb
jmp
and
or
push
pop
push
adc
xchg
xchg
add
in
loop
push
xchg
jnp
insl
inc
xor
repz
push
sbb
jge
call
mov
xchg
loope
push
mov
nop
mov
push
test
mov
jl
int
mov
fsts
xchg
sub
insl
and
ja
jmp
aad
pushf
mov
jge
mov
movsb
xchg
shll
cli
cwtl
scas
jmp
dec
cmpsl
sub
leave
push
iret
mov
leave
dec
xor
test
push
jmp
stos
mov
add
iret
test
push
ss
mov
or
push
sub
sub
mov
and
sti
fists
hlt
movsb
fstl
xchg
pop
sub
lret
sub
sub
movsl
dec
or
sbb
pusha
push
pusha
sbb
leave
idivl
cld
pop
rcl
mov
cwtl
inc
cmpl
pop
add
mov
cmc
xchg
push
mov
push
out
jle
add
mov
je
dec
jl
loopne
imul
and
insb
and
in
jnp
adc
lret
xchg
mov
and
xor
add
daa
fisubrl
js
js
cmp
fnstenv
cmp
pusha
shrd
and
mov
outsl
and
push
aas
pop
xor
insl
lds
mov
repz
pop
xchg
or
ja
jb
mov
xchg
sarl
sub
sbb
les
int3
cltd
push
cwtl
sbb
cs
fucom
fisubrs
xlat
xchg
test
addr16
mov
in
sbb
and
cld
xor
lret
cli
mov
cs
lods
int
into
lods
pop
loop
dec
orl
push
xchg
rclb
call
psubq
xor
pop
adc
sti
insb
insl
into
mov
mov
pop
dec
or
sahf
push
clc
mov
lds
out
iret
dec
nop
ljmp
lea
shll
scas
inc
movsl
into
sahf
add
cmpsb
rclb
cwtl
fistps
sbb
xor
mov
lods
and
clc
test
xor
shr
sarb
pop
inc
dec
int
ds
jp
mov
cmp
gs
add
mov
sub
inc
cli
push
fistpl
jl
mov
call
pop
pushf
push
aas
cmpl
and
imul
jo
xchg
pusha
sbb
fnsave
push
sub
push
inc
sub
and
mov
mov
popf
adc
cmp
dec
jno
and
xchg
or
mov
push
test
outsb
dec
shll
xor
les
lahf
jbe
scas
mov
jp
test
scas
js
es
inc
ret
cld
sti
pop
addr16
sub
ficoms
jne
popf
in
movsb
pop
mov
jmp
lahf
cmp
mov
rorl
jb
out
fnstsw
dec
push
mov
push
int3
sub
aad
sub
in
pop
jl
pop
test
dec
pushf
pop
scas
test
repz
test
cmpb
sbb
sbb
jnp
cmc
cmc
cmpsl
ret
cmp
stc
ljmp
or
sahf
xor
jno
movsl
sub
cmp
adc
rcrb
dec
and
ja
scas
js
ret
and
fstl
ret
jmp
pusha
popf
pop
mov
push
iret
fidivs
mov
mov
bnd
push
mov
insb
aas
push
adc
fisubrl
push
sub
iret
jno
lods
sbb
test
push
repz
xor
outsl
and
cli
rclb
fsubrl
dec
push
sub
lret
push
pop
std
int
dec
mov
mov
mov
dec
fs
iret
scas
ss
dec
dec
xlat
mov
test
out
clc
jno
cmpsl
sub
push
ja
mov
dec
pop
fldcw
mov
adc
dec
outsb
jae
jle
ret
adcl
mov
push
jbe
pop
cwtl
cmp
sub
js
sbb
cmc
and
std
sub
and
stos
sub
lea
xchg
loopne
cld
push
sbb
lret
shl
jmp
js
fimuls
and
cli
lds
xor
jnp
mov
andb
xchg
jecxz
mov
aaa
dec
sbb
jns
shll
push
xor
fcmovnu
inc
xchg
cmp
mov
pop
lods
jl
cmpb
mov
xlat
pop
cmp
lods
out
sub
or
in
loope
adc
xchg
add
adc
lock
pop
in
pusha
and
jno
es
mov
xchg
iret
mov
pop
mov
mov
inc
in
sbb
cli
rorl
mov
dec
dec
addr16
push
in
add
dec
pop
shll
jecxz
inc
aaa
dec
out
or
sbb
mov
retw
test
sub
fistl
das
cmpsb
dec
aas
dec
mov
repnz
or
xor
lock
dec
arpl
lods
aas
jbe
pop
rolb
popf
xchg
sbb
std
mov
andl
sub
and
mov
stc
xor
xor
cmp
lret
or
push
outsl
mov
sub
out
mov
ljmp
movsb
mov
cmc
std
outsl
repz
ret
cmpsl
cwtl
shrb
repz
sarb
out
jo
cmp
mov
push
push
insl
inc
cmp
push
xor
loope
xor
lods
cmp
and
outsl
xchg
or
stc
rcr
aaa
pop
test
mov
pop
scas
adc
push
pop
push
mov
imul
mov
inc
sub
or
pop
pop
and
shll
cmp
sub
ss
pop
ret
jbe
pop
mov
pop
test
lahf
iret
rol
cmp
fdivl
push
jp
faddl
push
pop
ss
jmp
std
xorl
and
xchg
mov
fs
sbb
cmpsl
std
popf
pop
nop
addr16
ja
ja
mov
sbb
mov
sbb
popa
mov
pushf
mov
mov
mov
add
xchg
orl
popa
stc
push
xor
xchg
lahf
or
stc
movsl
jl
pushf
bound
pushl
push
ja
aaa
fs
inc
jnp
mov
mov
sbb
js
mov
movsb
fldcw
out
mov
out
cmp
xorl
iret
xor
int3
mov
mov
pop
mov
mov
xchg
push
fldl
into
add
xor
lret
push
push
aam
bound
jnp
ds
mov
dec
je
iret
mov
push
pop
test
jmp
jo
jl
aas
mov
adc
nop
add
cli
or
stc
cmpsl
cmp
sbb
push
mov
mov
es
shll
pusha
jno
mov
lret
mov
mov
xlat
jns
add
scas
push
leave
stos
outsb
dec
lock
out
dec
fdivr
or
mov
cmp
adc
and
fldl
cltd
inc
insl
push
cwtl
test
jmp
cmp
nop
add
insb
sar
and
popa
aad
ljmp
mov
adc
shrl
gs
out
push
push
add
bt
stos
inc
out
sub
or
inc
leave
cmc
fcomip
fmul
mov
xorb
inc
das
out
dec
xchg
je
lahf
out
scas
insb
shr
sarb
and
mov
lea
adc
adc
stos
add
int
mov
xchg
pop
adc
and
sub
adc
rcr
and
pop
orb
pop
xor
lds
push
call
dec
hlt
xor
jmp
les
sbb
pop
dec
mov
pop
icebp
je
aaa
repz
pop
cmp
in
enter
inc
imulb
inc
sbb
jmp
sbb
aaa
push
in
mov
mov
sbb
es
xor
sub
ret
dec
sub
insl
mov
pop
and
jmp
push
pop
fwait
push
addr16
popf
xchg
xor
shlb
jae
shll
hlt
addl
sbb
sbb
loopne
pushf
imul
fwait
jne
int3
rorl
dec
outsb
ret
cmc
stc
mov
jg
sbb
aas
dec
sahf
xchg
mov
aam
inc
loopne
and
fisttpl
jno
xchg
out
mov
lds
aad
ds
outsb
mov
xchg
pop
lea
inc
out
mov
daa
sbb
lods
das
bnd
idivb
push
imul
dec
in
ds
sub
cltd
aad
push
jmp
mov
xchg
pop
push
pop
pop
mov
lds
pusha
push
lods
cmc
iret
inc
enter
outsl
cwtl
pop
jno
popf
lock
mov
test
jp
fsubp
push
push
mov
xchg
je
sub
push
mov
aad
cmp
push
dec
hlt
mov
mov
mov
adc
xchg
sbb
fcomi
inc
cwtl
sbb
cld
orl
rorl
or
int3
pop
xor
lds
adcl
mov
inc
add
mov
pop
add
arpl
pop
jmp
xor
or
rorl
lds
and
push
jmp
addr16
aaa
enter
cmp
and
mov
into
test
jle
xor
push
hlt
and
leave
pushf
pushf
out
es
push
aam
push
xor
sarl
mov
push
jg
test
dec
jg,pn
ret
into
in
mov
aam
gs
or
aas
inc
repz
in
popf
push
scas
jl
movsl
lahf
clc
xchg
lret
or
jnp
xchg
lcall
push
mov
aam
push
lahf
mov
imul
mov
lcall
xor
jno
cwtl
rol
pop
jb
sbb
pop
int
shrl
pop
mov
inc
call
scas
and
xor
insb
arpl
mov
stos
mov
mov
and
subb
add
inc
sarb
sbb
lds
inc
xchg
rolb
gs
popf
sbb
push
jge
mov
in
std
push
lods
pop
loopne
jge
and
cs
and
pop
cmpsl
mov
push
fstps
insb
cmp
add
push
mov
notl
adc
sbb
stos
ret
add
xchg
fs
int
inc
inc
dec
les
pusha
add
dec
sbb
dec
shll
fldt
xchg
rclb
aaa
cltd
jecxz
iret
cmp
xchg
pop
cmp
sti
mov
enter
mov
or
loopne
xchg
and
sbb
inc
stc
cmpsb
test
fistpl
xor
xchg
push
mov
mov
test
nop
scas
ss
pop
inc
out
or
cmp
scas
xor
push
ja,pt
sahf
icebp
dec
mov
shll
mov
push
outsb
cmc
cmpb
push
sub
sti
ljmp
pop
aas
aam
mov
sahf
mov
inc
shl
dec
sub
stos
popf
test
jp
movsl
arpl
clc
je
push
clc
xlat
cld
pop
insb
mov
dec
leave
inc
int3
pop
dec
aad
call
dec
dec
dec
xchg
push
stos
cmp
dec
jae
or
in
xor
add
outsl
add
xlat
mov
stos
cmp
outsl
jl
push
jbe
enter
dec
sub
movsb
inc
dec
cli
movd
sarl
leave
inc
and
ljmp
outsl
repz
mov
addr16
jnp
mov
movl
dec
in
call
mov
push
sub
xchg
xchg
pop
sbb
sbb
and
in
pmaddwd
fidivl
or
out
cs
sbb
xchg
or
pop
pushf
cld
push
stc
rcrb
sbb
in
cmp
or
adc
cld
adcb
jge
aad
insb
and
rorl
push
adc
push
je
outsb
cmp
pop
orb
inc
popf
sub
xchg
jg
push
or
pop
insb
xchg
repz
push
lods
xlat
xor
shlb
push
bound
sbb
shll
dec
popf
add
jl
fwait
inc
in
inc
jb
xor
add
movsl
test
pop
bound
or
stos
insl
and
std
das
sub
inc
mov
loopne
xchg
dec
jmp
stos
out
fildll
sahf
mov
aad
and
push
jo
jne
mov
fs
dec
adc
filds
xchg
lcall
aaa
int
xor
rcrb
sbb
push
aas
or
push
sub
lcall
out
and
xchg
arpl
mov
jnp
orl
mov
dec
xchg
sub
mov
inc
xor
jb
scas
pop
mov
in
inc
pop
xor
cwtl
jae
adc
scas
xchg
add
dec
add
das
jnp
insb
sub
data16
ja
imul
imul
jg
jge
add
add
fidivl
and
inc
sbb
imul
push
imul
sarl
call
push
push
mov
mov
xchg
leave
out
test
pop
fisttps
push
adc
decb
sub
xor
aad
clc
jbe
pop
aas
mov
lret
aaa
mov
dec
cmpsl
nop
pusha
in
aaa
mov
ficompl
pop
in
popa
out
ss
shrl
out
sub
ficoms
jmp
or
jl
inc
xor
int
lods
ss
clc
test
ss
add
dec
jmp
addl
aam
mov
jns
mov
xchg
lret
dec
ret
cld
das
mov
sbb
fdiv
jnp
push
sbb
xor
es
out
dec
inc
mov
inc
negl
push
mov
or
cmp
sbb
or
pop
inc
hlt
cmpsb
sub
add
sub
mov
push
loopne
cli
inc
adc
addb
in
aas
adc
stos
mov
jae
sbb
loop
sbb
lcall
jae
js
mov
jecxz
jmp
push
jns
or
ss
pop
xlat
cmp
push
inc
push
lock
ret
inc
jmp
jns
popf
addr16
cmpsl
icebp
jns
stc
and
nop
ljmp
aaa
cli
and
mov
pop
mov
dec
imul
push
mov
inc
adc
cld
test
inc
out
mov
mov
ficomps
mov
xchg
pop
adc
add
in
mov
shlb
popf
pop
sub
jae
ljmp
sbb
test
push
sbb
mov
xor
dec
mulb
pop
pop
and
imul
push
mov
call
jp
mov
jecxz
idivb
pop
loopne
xor
repz
pop
push
push
push
icebp
jg
mov
add
sub
add
adc
int3
mov
dec
imul
aaa
neg
orl
jle
movsb
pop
js
outsl
adc
push
inc
imul
dec
rolb
jnp
jmp
popa
in
pop
adc
lds
push
push
sarb
pushl
ds
mov
or
jb
pop
rep
int
fsubr
mov
jle
mov
xchg
dec
sbb
inc
fwait
pop
pop
xchg
fs
out
adc
imull
inc
cmpl
popa
add
addr16
shll
xchg
dec
dec
sub
sahf
mov
inc
loopne
subl
dec
mov
lock
and
dec
icebp
dec
cmp
mov
ret
sbb
xchg
test
ja
pop
ret
xor
inc
xor
or
mov
bts
dec
cmp
jmp
fstpl
lea
xchg
xchg
iret
and
and
sti
jp
int
outsl
jno
sub
add
mov
jmp
pushl
sbb
lcall
cwtl
sub
call
adc
sti
test
jne
dec
push
mov
icebp
fidivs
cltd
mov
out
fs
mov
cltd
inc
xchg
imul
scas
cltd
mov
dec
mov
aad
pop
ret
into
cmp
aad
xlat
test
dec
mov
sub
jb
pop
or
jae
pop
cmpsl
mov
repz
das
lahf
inc
arpl
daa
imul
adc
cltd
in
nop
shll
add
stc
repnz
es
mov
or
and
shlb
and
pop
pop
lcall
cmp
lcall
gs
jae
shl
mov
adc
inc
pop
es
jecxz
adc
lods
pop
xchg
loope
add
add
cmp
xlat
jne
cmpsb
out
dec
negl
nop
inc
and
mov
cli
test
adc
bnd
bts
sbb
es
jecxz
cmpsl
aas
int3
mov
sub
rcr
iret
scas
or
or
clc
mov
or
mov
cs
and
cmpsb
shrb
pop
pop
ret
test
stos
les
dec
ljmp
addr16
pusha
pusha
inc
mov
faddl
jg
pop
xchg
hlt
nop
ja
aam
mov
repnz
mov
mov
mov
flds
sbb
dec
mov
fisttpll
or
and
inc
sbb
int
xchg
or
pop
inc
js
mov
push
sub
lods
fidivl
sub
test
jns
fnsave
in
gs
push
jnp
add
icebp
push
mov
jbe
sbb
add
mov
popf
sbb
subl
mov
pop
and
cmpsb
push
orb
jno
lds
outsb
addr16
fs
mov
or
mov
jg
xor
dec
push
pop
repnz
ret
xorb
lret
mov
jp
arpl
or
mov
lret
inc
fcmovne
int3
lret
cmpsb
xor
pop
mov
pop
pop
dec
fsts
or
in
pop
aas
and
or
pop
pop
push
ds
jb
xchg
mov
cmp
cld
pop
insb
stos
mov
or
mov
inc
inc
pop
sbb
adc
adc
push
sub
xlat
mov
repnz
fidivl
mov
mov
lock
dec
rol
and
xchg
fistpll
pop
outsb
jno
add
ficomps
cmp
sbb
jbe
xlat
data16
les
das
or
aam
fisubl
rolb
nop
pop
in
js
mov
push
lret
or
sub
push
mov
adc
pushf
xchg
into
dec
mov
mov
data16
add
in
lock
mov
test
xor
aad
mov
or
jmp
xor
lahf
sub
lods
dec
jg
dec
arpl
in
das
inc
in
out
leave
clc
icebp
add
aad
rorb
sarb
fildl
lock
pop
fadd
repz
popf
add
arpl
jne
sbb
pop
call
lret
enter
fisttps
push
push
and
test
call
jo
adc
sarb
aaa
daa
pusha
cmp
mov
aam
and
push
add
xor
cli
gs
addr16
mov
jmp
jle
or
add
and
inc
push
pop
adc
mov
or
loopne
adc
and
enter
inc
scas
jecxz
inc
xor
mov
or
jle
int3
out
cmp
push
sbb
adc
or
jg
test
out
xor
es
adc
cmp
insb
je
xchg
inc
icebp
sbb
dec
in
jnp
out
pusha
cmpsl
jg
jo
jg
adc
cmp
adc
inc
dec
imul
jnp
fs
es
popf
stos
xor
int
enter
jo
pop
es
jle
ret
ror
mov
sbb
jne
mov
mov
mov
inc
add
jbe
inc
dec
jmp
adc
rcrb
lea
jo
sbbl
outsl
ljmp
fcoms
or
jg
jb
sbb
push
cltd
and
stos
adc
fucompp
xchg
push
xchg
jnp
pop
repz
push
push
jne
imul
xor
pop
arpl
push
add
fsubr
pop
jns
cld
xchg
in
cmp
inc
daa
repnz
push
xor
push
ja
sub
shll
lea
jne
into
pop
dec
mov
shrb
xor
mov
or
pop
stos
adc
movsb
cltd
push
cmp
mov
adc
adc
xchg
mov
and
pop
push
fidivrs
inc
inc
test
mov
ret
out
add
or
movsl
cmpl
dec
dec
push
pop
daa
rolb
push
lods
fsubrs
fdivrs
cmp
jne
stos
repnz
fstp
popa
lods
add
rolb
cmc
inc
cmc
mov
ret
adc
dec
mov
dec
lods
js
fildll
pushf
mov
es
mov
mov
or
int
pop
push
adc
out
sbb
xchg
ret
data16
ss
mov
xor
lods
push
add
aad
in
shlb
xchg
xor
dec
fidivrs
pusha
ja
xor
aam
jl
push
pop
out
push
pop
jno
roll
sub
inc
cmp
push
movsl
sahf
dec
pop
add
and
inc
ficoms
sbb
movsl
popa
cli
into
pop
pop
sti
fsubrl
jle
push
dec
add
xorb
xor
cmp
mov
test
ret
mov
shr
sbb
inc
pop
dec
cwtl
push
sar
push
cmpsl
insb
xchg
jl
add
jle
mov
xor
jae
inc
es
aas
sub
or
mov
pusha
into
dec
mov
add
mov
icebp
into
push
jno
repz
pop
lcall
lahf
in
je
into
das
or
mov
sub
jmp
sbb
sub
shll
and
push
int
aad
mov
jnp
lret
in
mov
push
pop
jo
and
aaa
fisubl
xor
pop
out
mov
in
popf
insl
cmp
in
sti
inc
sbb
imul
ficoml
adc
fisttpll
cli
std
test
add
sahf
pop
and
sbb
dec
jmp
ret
sbb
jmp
loope
test
pop
push
pop
ds
cmpsb
xchg
rcrl
push
push
ja
in
sarb
fildll
mov
push
cmp
jmp
loopne
push
pop
cmpsl
addr16
stos
ficoms
dec
rorl
orl
or
mov
mov
push
out
pop
add
in
popf
cmp
xor
sbb
fsubr
adcb
pop
sub
mov
pop
stc
into
cmp
mov
dec
lock
mov
aad
mov
push
xchg
fwait
xchg
jecxz
sbb
lahf
shr
cmpsb
push
dec
negb
int
xchg
cltd
push
cmp
sub
or
push
adc
and
sub
sbb
adc
mov
std
rcrb
pop
xor
jbe
push
aas
mov
nop
xchg
sahf
fistl
push
ja
popa
and
add
cmp
cmovl
es
jbe,pn
push
mov
cmp
dec
out
icebp
jg
sti
mov
hlt
jge
stc
push
jmp
frstor
fcmovne
jle
daa
sbb
stos
test
sarl
and
rorb
adc
sbb
push
daa
jne
xor
and
aad
popf
es
mov
cld
cmpsb
mov
adc
adc
sub
sahf
cmp
out
stos
mov
rcll
add
cmpsb
dec
add
jecxz
ja
out
and
sti
cld
repz
xchg
sahf
in
xchg
ja
ljmp
orb
insl
loopne
sbb
cmpsb
jns
ds
jne
cmpl
mov
jecxz
inc
mov
icebp
push
jmp
enter
xor
xchg
sti
sub
andb
lea
scas
add
sbb
xchg
mov
adc
filds
mov
xchg
addr16
nop
cmp
outsb
sub
mov
adc
pop
jbe
sub
ffree
rolb
fldcw
inc
or
fisttps
lret
mov
mov
mov
pusha
fstps
sbb
mov
in
movb
pop
test
fs
fldt
mov
cmp
xor
mov
jge
imul
test
sub
mov
push
into
cmp
repnz
outsb
into
jle
push
cmp
dec
sbb
dec
mov
bound
pop
xchg
xor
dec
lea
lods
pop
cltd
mov
es
xor
push
cmp
js
cmc
sar
and
out
push
ss
sub
inc
outsb
divl
adc
mov
xchg
mov
gs
adc
fs
push
sub
scas
repz
fistl
push
call
out
push
imul
mov
test
imul
push
jo
sti
nop
sbb
rorl
sti
out
icebp
xor
decl
and
imull
shrl
stos
push
jg
sti
test
addr16
and
loopne
das
fistpll
js
xor
rolb
or
lahf
sub
stc
dec
popa
xor
in
sbb
andb
in
leave
adc
jmp
sbb
xor
xchg
loop
sub
adc
inc
sbb
push
ss
fidivrl
inc
loop
xlat
adc
call
aad
and
xchg
push
xor
xor
jp
mov
daa
adc
pushf
dec
int
mov
push
aaa
pop
mov
lahf
adc
pusha
mov
jg
jmp
adc
imul
call
in
in
out
hlt
int3
sub
jp
add
pop
push
xor
fnstcw
xchg
add
xor
sub
loope
push
jo
pop
mov
push
mulb
outsb
lret
mov
jns
mov
fs
inc
pop
push
jmp
sbb
es
jp
mov
sub
sbb
mov
xor
cmc
mov
and
lods
imul
mov
je
add
jnp
icebp
sbb
push
insl
repnz
cli
add
mov
xor
test
cld
cld
outsb
fmuls
pop
mov
outsl
mov
loope
shlb
cmp
mov
or
cmpb
shlb
stos
push
test
out
adc
xor
loope
adc
js
subb
pusha
rorb
jp
lods
aaa
pop
pop
das
mov
rorl
mov
lret
fisttpl
xchg
jae
negl
lcall
push
insl
notl
mov
jbe
sbb
shlb
mov
gs
pop
shrl
xchg
pushf
jp
jg
xor
shll
rolb
pop
pop
sbb
cmpsl
int
jns
mov
mov
test
cmp
dec
and
inc
pop
dec
sbb
adc
scas
movsl
dec
leave
lds
push
adc
popa
lods
jge
insl
mov
push
divb
inc
xchg
repz
adc
sub
jle
mov
cmp
sub
add
fidivs
sbb
std
lret
add
ds
pop
cltd
sub
rcrb
mov
fcom
adc
cmp
lods
scas
imul
pop
inc
movsl
mov
ficoms
or
inc
roll
in
sbb
push
jns
push
jecxz
jmp
in
inc
jmp
mov
push
lret
sti
sub
jbe
and
add
in
pop
leave
xchg
cld
cltd
test
idiv
out
pushf
or
sbb
cmp
jnp
mov
xchg
fidivl
mov
mov
inc
inc
mov
out
inc
mov
jp
jecxz
dec
mov
in
in
out
dec
cltd
or
les
xchg
ss
jo
addr16
daa
and
negb
or
loop
sbb
mov
mov
lea
mov
cmp
xchg
ss
nop
dec
js
pop
les
mov
in
mov
dec
jb
mov
insl
or
mov
pop
mov
bnd
push
inc
sub
jl
dec
adcl
gs
pop
push
add
scas
fildl
aas
fistpll
dec
ret
out
mov
fwait
mov
xchg
mov
in
adc
addb
sub
div
ja
lret
das
js
stc
les
fs
insb
negl
cmp
or
arpl
pop
mov
mov
dec
scas
mov
cmpsl
pop
dec
repnz
mov
push
sarb
call
lock
mov
orb
stos
in
inc
mov
rorl
jne
or
gs
mov
and
setg
mov
add
cmp
xchg
negl
cmp
dec
push
ss
mov
mov
mov
faddp
add
rclb
cmpsl
mov
leave
mov
mov
notb
cs
insl
mov
inc
jno
mov
nop
fs
jae
add
or
jmp
sarl
out
lcall
mov
popa
idivb
mov
push
sbb
add
rcrb
shll
test
int3
or
out
sbb
or
pop
xchg
in
jl
adc
xor
xchg
scas
mov
outsb
cmovle
inc
jge
ret
sub
popa
ds
push
sub
adc
and
xor
mov
ror
jp
fistps
lret
addb
out
jns
jo
mov
jno
mov
fdivl
leave
push
dec
subl
into
ja
mov
pop
cs
jmp
add
inc
mov
add
mov
imul
jmp
insl
fcompl
in
adcl
mov
shl
mov
cmpxchg
mov
psubb
pop
cmp
jp
icebp
push
in
inc
es
in
and
lock
sarl
mov
int
je
pop
xchg
xor
pusha
xchg
mov
mov
jns
imul
or
int3
iret
cmpsl
lret
shl
cltd
enter
or
sbb
cmc
enter
cmp
and
clc
sbb
daa
stos
pop
repz
shlb
iret
inc
pop
out
stos
xchg
in
mov
cld
add
js
pushf
movsb
inc
cmpsl
mov
jecxz
movsb
orb
mov
shlb
push
sbb
dec
or
ss
mov
push
fistl
jecxz
movsb
jg
jbe
add
js
push
jae
movsb
cmp
sbb
fwait
push
data16
sbb
repz
pop
jns
pusha
daa
mov
xor
test
push
dec
adc
pop
dec
outsb
and
cmc
fsubrl
and
pop
aad
push
mov
fdiv
inc
cli
mov
lds
push
lahf
mov
xchg
sbb
das
or
xchg
data16
dec
adc
mov
and
push
imul
cmpsb
mov
add
das
and
call
mov
test
add
or
imul
jnp
out
mov
inc
push
inc
adc
mov
inc
ds
inc
mov
outsb
push
out
je
lods
pop
mov
in
ret
xchg
loopne
xchg
pusha
and
loope
imul
into
je
rcrl
movsl
test
sub
pop
lret
pop
lcall
and
jne
jae
outsl
loop
ds
bound
xlat
jl
imul
sub
out
inc
gs
movsl
fisttpl
or
mov
pop
mov
testb
icebp
ds
jecxz
xchg
pushf
lds
in
fs
adc
lods
scas
sub
pop
mov
data16
lret
and
stos
aad
mov
and
clc
pop
mov
add
in
je
sub
roll
sahf
test
outsb
ds
movsl
cwtl
clc
adc
inc
add
aaa
enter
loop
cmp
bound
sub
js
jl
push
jns
inc
in
jle
mov
push
lret
dec
xchg
popf
pop
jnp
inc
push
aad
xor
sub
push
hlt
out
in
enter
jecxz
imul
imul
dec
add
dec
xchg
shl
outsb
jecxz
xchg
jge
popf
roll
sete
mov
mov
xor
pop
fadds
fistpl
xor
mov
xchg
dec
xchg
mov
or
cs
mov
or
test
jb
xchg
arpl
adc
cwtl
and
lret
jns
or
mov
outsb
std
imul
or
jns
jge
xchg
mov
or
shl
std
pop
test
jne
mov
sub
adc
test
lods
pushf
aaa
cmpsb
sub
rolb
mov
xchg
pop
mov
pushf
push
cli
xor
mov
push
fucomp
lock
push
adc
cmp
inc
adc
in
aam
push
out
inc
in
xlat
add
sbb
add
add
sub
orb
cmp
popa
xor
add
out
sbb
rcrl
push
add
cmp
jl
je
jmp
sub
imulb
hlt
daa
ret
ljmp
mov
bswap
xchg
ds
gs
call
sbb
inc
loope
movsb
and
mov
mov
lret
sbb
orl
test
jno
and
scas
dec
pop
enter
icebp
mov
pushf
aad
mov
xorb
jl
pop
std
xor
pushf
inc
pushl
adc
sub
sub
shll
push
hlt
dec
scas
cs
mov
or
sbb
cmp
push
pop
subl
mov
test
sbb
loopne
or
iret
sub
cmpl
test
inc
lea
mov
cmp
xor
mov
sti
insb
mov
jp
fisttps
repz
adc
inc
mov
into
rorb
xor
xchg
ja
jns
jne
push
shll
or
loope
jb
xchg
daa
dec
rclb
loopne
ja
fnsave
in
add
xor
out
adc
rclb
pop
push
outsb
fisubrs
cmp
adc
push
jo
sarl
adc
xor
loop
test
enter
or
ja,pt
iret
sbb
cli
inc
out
lret
sbb
nop
add
pop
lahf
in
mov
mov
std
inc
je
sbb
push
add
mov
sbb
jne
test
jne
sbb
lock
mov
sahf
daa
test
mov
adc
push
out
ficoml
stos
jp
jl
cmp
sarb
sbb
dec
scas
jge
adc
or
add
cmpsl
jmp
mov
insb
stos
icebp
dec
mov
and
jg
movsb
jmp
add
mov
cmp
sub
aas
hlt
in
rcrl
mov
aas
add
sarl
mov
lds
push
imul
fstl
cwtl
mov
add
inc
jb
mov
mov
sahf
mov
pop
inc
xchg
cmpsl
ss
pop
in
test
sub
pop
in
adc
dec
clc
sub
scas
jae
xchg
loop
mov
loop
cmovbe
testl
fbstp
xchg
xchg
orb
in
shlb
fisubrl
in
cmp
ljmp
sub
test
push
xor
cmpsl
mov
dec
xor
andl
cltd
in
gs
adc
addr16
push
fistps
out
mov
pop
imul
pop
sbb
sub
push
gs
sub
push
mov
mov
push
lods
scas
scas
aas
fisubrs
aad
xchg
pushf
cltd
mov
test
loope
out
add
fistpll
addr16
cmp
mov
jmp
call
and
xchg
aaa
pushf
lods
movsl
push
push
test
out
cmp
dec
xchg
fdiv
das
mov
nop
jg
mov
fs
lods
jle
shlb
xchg
push
mov
subb
into
push
lock
or
imul
into
push
shlb
hlt
push
rorb
jge
arpl
in
sbb
push
add
js
int3
addl
ss
fistps
in
mov
or
stc
jne
sbb
push
xchg
ljmp
faddl
dec
jge
inc
lds
mov
lds
into
jge
repnz
mov
jecxz
and
jne
stc
add
cwtl
imull
pop
cmp
push
add
daa
gs
mov
sub
mov
sub
movl
loop
les
pushl
push
scas
jne
pop
dec
aas
aad
test
adc
dec
scas
inc
cld
jnp
bound
cmp
sbb
pop
fldln2
ljmp
jns
jns
push
push
and
sub
inc
push
imul
or
cmpb
jp
sahf
test
pop
xchg
jecxz
push
lods
mov
pop
fidivs
fwait
pop
xchg
cltd
xor
loopne
popf
sub
xlat
inc
and
push
imul
lods
and
cs
in
and
inc
add
aam
cltd
xor
lods
ss
int
sbb
insl
sub
lahf
mov
adc
lcall
add
gs
dec
mov
out
movsb
adc
cmp
loopne
push
push
mov
fmul
jecxz
push
test
mov
dec
leave
fldl
int
bound
jecxz
pop
lea
jns
xor
cmp
pop
mov
xor
pop
and
mov
dec
shl
push
mov
pushf
scas
movsl
ficoms
call
cmc
ret
sar
xlat
repnz
sbb
push
mov
rcll
mov
sub
pop
lods
and
add
pop
mov
out
enter
in
dec
bound
push
pop
pop
jae
icebp
cmp
pop
sub
into
ds
cltd
pop
jp
sub
inc
insb
cmp
fstps
cmp
push
insb
je
popa
repnz
cwtl
sbb
int3
mov
pop
rcrl
popa
pushl
adc
inc
rolb
addl
sbb
adc
pop
fcmovnbe
addps
aad
dec
mov
cmp
cld
add
clc
add
dec
add
sti
stc
int3
pop
xchg
and
movsl
cltd
imul
xor
cmp
fistpll
sub
outsb
jl
push
lock
xor
inc
jge
mov
xlat
xor
hlt
bndstx
push
stos
push
scas
outsl
movsl
push
ss
push
add
xchg
add
fstpt
repnz
mov
stc
hlt
dec
fmul
insb
dec
lock
dec
jp
pop
jb
sahf
push
inc
mov
inc
jecxz
paddusw
aam
movsb
stos
or
xchg
inc
test
inc
dec
test
loop
std
decl
imul
insb
std
mov
imul
mov
es
jne
aaa
cmpsb
cli
mov
les
retw
xchg
int
xor
add
or
pop
cs
push
fcoml
and
or
stc
sub
add
loope
clc
das
push
stc
lcall
or
xchg
test
xlat
mov
cli
cmp
ja
sahf
mov
test
jae,pt
movsb
mov
mov
mov
lods
xor
das
push
mov
loope
in
inc
popa
add
push
pop
mov
mov
jae
dec
jmp
push
inc
sbb
andl
int
sbb
popa
xchg
inc
ljmp
cmovb
jo
inc
cmpsl
xor
ss
sti
lods
leave
push
or
mov
pop
add
cli
call
jo
arpl
jge
push
mov
sub
fidivrl
mov
mov
inc
pop
or
mov
pop
cmp
pop
mov
clc
cmp
jge
pushl
subb
or
add
pop
push
shlb
scas
sarb
aas
test
insl
ds
das
cmp
sti
lret
iret
or
shrl
inc
call
sub
bound
aaa
dec
das
push
xor
mov
lods
xchg
cs
and
push
cmc
mov
dec
push
pop
sahf
pop
jns
cld
test
push
loopne
jbe
les
dec
out
ds
pop
mov
daa
jecxz
subl
enter
mov
push
hlt
pop
enter
hlt
jp
add
inc
ret
xor
std
xor
xchg
jmp
data16
pop
dec
cmpsb
pop
cmp
mov
and
ds
js
pop
push
mov
mov
sti
push
in
dec
xchg
mov
xlat
ss
in
fcmovu
push
mov
jno
push
shrl
or
ret
cmp
bound
push
repz
fs
dec
hlt
mov
sbbl
clc
sbb
add
cltd
jbe
or
sti
pushl
jns
cmp
rcrb
add
jmp
fcmovu
pop
and
lods
jno
into
jbe
rclb
xor
push
leave
sbb
inc
add
insl
add
push
outsb
cmp
aam
pushf
bnd
xor
sbb
pop
roll
xor
test
repz
in
in
stc
xchg
lds
pusha
mov
int3
inc
ficomps
ret
fnstcw
xchg
hlt
aam
mov
and
adc
mov
jo
in
xchg
push
mov
arpl
cmp
dec
setbe
pop
dec
sahf
out
imul
pushf
outsb
xor
subl
mov
scas
hlt
mov
sbb
mov
hlt
inc
add
and
cmpsl
sahf
fistpll
jmp
fisubrs
rclb
mov
dec
push
push
inc
mov
out
dec
mov
pusha
cltd
mov
call
inc
vpcomd
cmp
out
push
lahf
stc
cmpsb
dec
pop
cmp
scas
cmp
in
sbb
pop
in
or
push
jae
scas
arpl
lcall
icebp
cmp
and
sbb
add
mov
inc
sbb
mov
and
mov
rcrb
shrl
gs
je
cmp
and
imul
push
test
cmp
test
lcall
cltd
fcompp
test
ja
es
pop
sahf
and
std
imul
ficoms
jecxz
mov
sbb
sahf
and
inc
add
sahf
cltd
mov
lock
mov
cmpsb
sarb
inc
lret
sbb
popf
inc
pop
out
insb
cltd
pop
pop
and
sbb
imull
push
pop
sar
sub
sbbl
jge
sbb
aas
xchg
jae
mov
mov
insl
pop
mov
stc
jge
std
mov
inc
cmpsb
xchg
sub
or
mov
test
enter
stos
push
adc
push
pop
stos
jg
cs
movb
and
jne
push
mov
add
push
push
cltd
add
dec
inc
inc
xchg
xchg
fiaddl
adc
loop
notb
fcmovb
iret
adc
adc
sbb
int3
sbb
pushl
and
jmp
sbb
inc
and
ret
mov
mov
popa
repz
mov
xchg
cmp
adc
pop
mov
pop
pop
insl
fwait
pop
fisttpll
stos
popa
cmp
jnp
icebp
lods
fildll
cwtl
shl
ss
and
gs
mov
in
mov
xchg
adc
dec
dec
adc
cmpb
sub
sub
xor
push
mov
das
push
dec
and
push
mov
test
js
push
idivl
outsb
mov
ja
push
adc
xor
add
test
jae
mov
test
and
mov
mov
in
in
sub
and
les
or
sub
pop
insl
pop
xlat
or
sub
pop
inc
out
add
repnz
rorb
fldcw
sti
mov
movsb
jge
add
xor
jmp
or
scas
and
fldt
mov
push
adc
mov
lret
jle
fdivp
mov
test
into
scas
int
lds
inc
mov
push
ret
addr16
jg
in
mov
xchg
sarl
mov
dec
jp
mov
dec
mov
cwtl
insb
pop
mov
insl
in
xchg
scas
test
mov
insl
dec
mov
daa
adc
and
xchg
popa
sbb
xor
popf
cli
jp
mov
xchg
mov
movsb
jb
outsb
movsl
and
sub
mov
outsl
or
push
pop
sbb
js
mov
push
out
jmp
addb
adc
fidivl
out
imul
mov
cmp
aad
fdivrl
inc
cld
pushf
mov
and
test
mov
int
xlat
xchg
cmp
add
push
shlb
cmp
lock
ja
orl
fdivl
lods
iret
imulb
popf
sbb
mov
lcall
rcrb
mov
repnz
lret
sti
xor
or
aad
xor
jl
scas
flds
dec
cli
mov
pmullw
je
xchg
sahf
mov
jp
lods
repz
repnz
loop
enter
lret
stc
xchg
mov
dec
lea
les
pop
shlb
loope
mov
jo
cmc
inc
xchg
mov
mov
out
push
pop
shrl
sub
adc
add
and
aas
popa
sub
cmp
mov
pushl
pop
dec
or
push
sub
xor
jno
cmp
imul
or
pop
in
sbb
mov
out
loop
mov
cltd
repnz
adc
pop
sub
jne
sub
sub
mov
xor
and
cmc
std
xchg
push
add
xchg
sub
lret
dec
andb
arpl
push
pop
mov
jo
std
icebp
and
loope
pop
sub
xor
jmp
mov
fwait
push
lahf
gs
push
fidivrl
xchg
mov
pop
sub
dec
sub
aaa
cmp
push
push
mov
orl
push
pushf
sbb
push
push
push
xchg
sub
int3
stos
xchg
xchg
shr
xor
xor
es
and
in
xor
push
lods
jp
test
jnp
mov
add
aas
pop
and
fwait
and
imul
inc
sti
stos
mov
jnp
in
push
aam
es
cmc
addr16
adc
mov
cmpsb
sbb
mov
sbb
sub
adc
les
das
pushf
in
pop
xor
lret
ret
mov
jnp
imul
hlt
cli
or
jo
xchg
lds
jle
jns
pop
iret
in
and
fsubrl
ljmp
cmp
pop
mov
fdivr
fstl
mov
xchg
leave
test
mov
push
lcall
enter
mov
jne
enter
push
xor
mov
mov
es
jecxz
and
sub
ja
add
pusha
aas
aaa
int
repz
ja
stc
adc
pop
pop
addr16
push
push
jecxz
mov
shrl
xchg
in
ret
dec
xchg
int
sub
push
cli
push
inc
xor
mov
xchg
ds
adc
push
mov
jae
pop
add
loop
xor
gs
jnp
jnp
ficoms
push
mov
daa
je
dec
pop
out
adc
cmp
je
mov
mov
pop
mov
xor
mov
sub
cmp
shrb
mov
sub
jp
jge
cmp
scas
stc
push
loope
xchg
aaa
outsl
inc
and
sub
mov
inc
push
jle
add
mov
inc
enter
mov
out
das
push
negl
pop
jne
push
dec
sbb
lahf
out
nop
int3
xchg
addb
ljmp
rcrb
mov
dec
sbb
imull
lds
fwait
dec
repz
pop
jb
orl
fdivrs
test
mov
jmp
lcall
aas
stc
push
stc
and
xchg
sub
mov
cli
je
ljmp
cmpsb
sub
scas
daa
xor
clc
mov
inc
adc
lret
push
pop
adc
in
pop
or
aaa
sbb
jge
add
xchg
lret
jp
adcl
xor
nop
insl
repz
mov
pop
jmp
sub
xchg
stos
xchg
xchg
mov
jne
imul
mov
stos
push
add
fcoml
in
cli
sarl
lcall
mov
cmp
mov
xchg
scas
xor
sbb
test
jae
inc
push
jae
addl
mov
adc
pop
ss
jmp
mov
sti
sub
push
dec
daa
loop
js
jg
outsb
mov
icebp
mov
pop
push
push
mov
mov
inc
aaa
jbe
lea
jg
mov
jne
into
sbb
adc
imul
fdivrs
pushf
fsubs
mov
sbb
arpl
sbb
shr
sahf
fcomps
pusha
pop
mov
in
std
push
hlt
cld
cmp
adc
jg
jecxz
mov
mov
ljmp
jo
dec
push
mov
rclb
jl
push
aam
push
std
out
cmp
outsl
sub
cmc
jae
and
ja
mov
mov
addr16
sub
mov
mov
outsl
into
xchg
out
add
sub
fcoml
sub
pminsw
rorb
dec
add
loopne
fs
enter
mov
loope
inc
mov
mov
lds
in
xacquire
nop
fucom
or
clc
in
and
jne
cwtl
int3
into
and
or
ds
loop
into
iret
xchg
dec
push
sbb
and
shrb
mov
fldenv
pop
outsl
xchg
pop
addb
enter
pop
inc
rol
inc
pop
inc
sti
mov
imul
psrlq
inc
push
xor
addr16
std
inc
das
or
shrb
ret
mov
lret
outsb
out
inc
cmp
mov
andb
flds
mov
out
jle
aad
cmp
xor
pop
cmp
dec
inc
call
push
addb
cmp
or
or
lret
mov
dec
enter
cmp
lea
xchg
inc
movsb
jg
xor
lods
cmc
add
sub
repnz
ret
and
shlb
addr16
neg
mov
out
push
es
jne
xchg
fiaddl
inc
jecxz
dec
sbb
in
push
cmc
loop
rol
lock
cli
ja
lods
mov
jae
jmp
lods
imul
jae
mov
cmp
xchg
aaa
mov
sub
xchg
pop
data16
imul
imulb
add
lcall
mov
mov
clc
jae
dec
imul
jmp
out
bound
cli
adc
jge
xlat
lds
nop
gs
ljmp
fbld
xchg
fcmovnbe
adc
sbb
mov
jl
jno
outsb
rcrl
add
es
fdivrl
adc
ds
inc
std
leave
lret
push
and
mov
cmp
xor
adc
outsl
push
mov
aam
test
fdiv
push
dec
lods
jo
cmp
bound
out
cltd
js
mov
mul
subl
pop
shlb
outsb
sub
inc
cltd
and
leave
xchg
mov
je
mov
jnp
into
fcmovne
sbb
push
outsl
dec
fwait
loope
hlt
push
das
test
movsl
and
mov
loopne
rcrb
mov
and
test
mov
imul
jae
mov
aas
imulb
lahf
dec
or
loope
lds
mov
adc
xchg
sub
pop
mov
mov
lds
ja
cwtl
in
test
adc
ret
outsb
mov
or
or
and
cmp
test
inc
cmpsl
inc
xor
sub
decl
jae
je
cmp
and
lea
sbb
pop
insb
jno
push
aam
mov
xor
sbb
out
cmp
mov
call
cmp
cmp
push
nop
jae
popf
mov
cwtl
push
adc
mov
mov
lock
int
stos
and
dec
and
insb
lods
insb
xchg
sbb
repz
mov
in
sbb
pop
mov
lods
lea
fdiv
jecxz
cli
xlat
bound
xchg
inc
and
sbb
es
insl
pop
andb
imul
pushf
ret
or
pop
popf
mov
lret
scas
leave
sbb
sbbl
pop
scas
and
in
jbe
negb
outsb
dec
xor
rorl
cmpsl
out
dec
in
or
loopne
adc
and
mov
sahf
push
inc
nop
lahf
shlb
xchg
aad
pop
jo
cmp
and
aam
or
test
repz
adc
repz
adc
movl
or
test
outsl
test
sti
mov
out
dec
loopne
out
sbb
and
jno
bound
or
out
push
and
add
push
ja
je
and
mov
sbb
cmp
jnp
and
fildll
xor
xor
loop
mov
scas
ficomps
bound
mov
outsl
cld
jmp
data16
add
fadd
mov
loop
xchg
pop
rcr
adc
pop
sbb
sbb
xor
call
and
mov
cwtl
lret
xor
push
xchg
lds
mov
mov
fbstp
cltd
or
jle
ds
add
pop
dec
lds
pop
hlt
inc
mov
push
and
push
xlat
fdivrl
adc
jno
cmp
fldl
push
call
call
je
sub
xlat
fcompl
xor
cs
cmp
mov
cmp
inc
xor
push
push
stos
cmp
dec
fdivrl
cli
mov
mov
adcb
stc
aam
mov
popf
imull
jmp
pop
test
ret
mov
jo
out
loope
and
movsb
loope
pop
sub
pop
inc
mov
mov
fbstp
je
test
mov
sbb
pop
test
mov
jb
mov
push
mulb
lods
inc
jecxz
and
inc
in
adc
pop
sbb
out
fisubl
lods
and
push
mov
mov
jb
aad
mov
and
adc
inc
cmpsb
pushf
adc
fidivrs
mov
cmp
rcll
rorb
pop
stos
cmp
sub
jo
add
dec
pop
lret
mov
push
jo
mov
sub
int3
xchg
mov
fwait
dec
scas
or
insb
fadds
shrb
adc
cmc
scas
leave
push
sahf
xchg
adc
inc
adc
stc
sbb
xchg
pop
out
push
mov
add
ret
xor
push
jb
sub
sub
aam
pop
or
aam
xor
cld
add
mov
orl
sub
adc
addr16
lods
xor
in
push
test
icebp
fdiv
aas
movl
push
mov
aas
cltd
sub
sub
xchg
pusha
andl
arpl
stc
leave
or
mov
mov
cmp
dec
jo
incl
cwtl
sbb
inc
ja
fbld
repz
and
jns
pop
shll
jecxz
add
lods
sbb
enter
mov
adc
jnp
jle
or
jno
add
cmp
ret
mov
xchg
mov
mov
mov
push
loop
fbld
fistps
test
movsl
cmp
addr16
cmp
xchg
cmp
movsl
rolb
lcall
inc
xlat
stos
push
sub
aad
imul
call
outsb
hlt
es
pop
adc
adc
pop
mov
mov
pop
dec
cmp
inc
xchg
cmpsb
xchg
or
dec
xchg
xor
ja
mov
sub
add
pop
sub
mov
into
jp
ljmp
sub
push
mull
xchg
add
mov
and
in
stos
lock
imul
mov
ret
mov
scas
add
sete
icebp
popf
fbld
sub
andl
icebp
inc
cltd
inc
dec
je
sbb
in
ss
mov
sub
incl
sahf
push
push
lods
aad
jb
roll
mov
jg
pop
cmpsl
test
push
icebp
movsl
sub
sbb
xchg
gs
xlat
loope
aaa
sub
jge
mov
popf
fs
jne
jmp
stos
mov
xchg
out
mov
das
jno
xchg
or
xchg
xchg
daa
imul
or
in
pop
push
mov
and
mov
enter
and
fcmove
sbb
fcmovnu
jmp
sub
inc
loopne
push
sub
stos
cld
arpl
mov
dec
mull
cmp
lods
cs
ret
loop
cmpsl
mov
jae
dec
dec
je
pop
push
pop
xchg
lds
jmp
sbb
or
mov
pop
out
add
mov
pop
lcall
fisttpll
jmp
sub
push
mov
push
rcrl
lahf
xchg
sbb
lret
lock
in
xor
pop
mov
mov
or
or
idivl
push
ret
jo
lret
jns
sahf
fwait
and
xchg
sub
inc
push
insl
in
sub
adc
jo
mov
sub
and
add
aam
jae
clc
in
sbb
xor
aas
pop
push
repz
mov
sti
sbbl
cmp
push
sbb
shll
outsb
jp
clc
mov
inc
jo
cmp
cmp
lock
inc
js
es
dec
fwait
inc
lds
pop
stc
push
scas
adc
inc
pop
mov
push
jg
dec
in
jne
jl
push
push
and
jle
clc
fbstp
ret
dec
ffreep
push
test
mov
orb
push
or
mov
mov
inc
adc
out
jae
inc
mov
xor
cmpsl
mov
pop
jle
aam
fstps
and
out
popf
mov
sbb
push
xchg
xchg
pop
pop
dec
fmuls
mov
or
xchg
pusha
insl
bound
ret
mov
das
inc
push
imul
add
ret
pusha
mov
pop
add
cmp
lods
mov
mov
mov
out
das
and
lcall
xchg
pop
add
and
iret
jnp
movb
mov
pop
or
adc
pop
mov
jb
and
pop
je
rcr
mov
fisubs
and
cltd
pop
hlt
add
pop
mov
in
jge
ja
in
jo
fmul
xor
mov
xor
dec
xchg
dec
ja
fimull
jnp
add
adc
jne
pop
imul
rorb
popa
test
and
jmp
in
inc
xor
ja
out
push
data16
fidivrs
lcall
push
adc
add
subb
dec
cltd
fs
add
fnstenv
xor
lds
cmpsb
or
sbb
ror
xchg
push
loopne
adc
inc
jmp
sub
out
repnz
cmpsl
aas
aam
stc
pop
sbb
xor
push
test
and
stos
repnz
sbb
cmp
in
jge
jnp
dec
pushf
lock
dec
in
or
and
mov
adc
orl
dec
mov
dec
jo
out
xchg
das
xor
jl
mov
out
and
mov
or
sbb
jmp
je
fucomip
pop
add
mov
mov
imulb
negl
call
sub
bound
bound
cmpl
aam
fldt
dec
lods
push
adcb
jp
mov
test
cmp
js
add
mov
push
dec
add
hlt
rol
inc
mov
cmp
aam
cs
and
and
cwtl
adc
mov
mov
insl
sub
loope
das
xchg
ja
cmpsb
rorb
repnz
jns
stos
sub
roll
sarl
test
in
jb
jp
lods
nop
sub
xor
xor
or
jl
push
aad
or
adc
out
xor
cmp
jle
sub
pop
gs
xchg
mov
xlat
xor
fists
outsl
std
xchg
loopne
lcall
ret
sub
and
pop
das
and
inc
and
aad
movsb
jmp
push
sbb
jne
ret
jg
mov
repnz
call
out
push
push
stos
mov
xchg
int3
into
fsubrl
dec
movsb
rol
fs
in
pop
adc
orb
mov
dec
rcrl
lret
jle
xchg
insb
mov
push
enter
hlt
inc
fists
jno
repz
inc
fiadds
lret
inc
dec
mov
sub
dec
sahf
mov
insb
into
loopne
dec
jo
push
lock
stos
sti
jecxz
aam
inc
cs
jg
xor
rcrl
mov
subl
jecxz
jns
psadbw
test
mov
jbe
mov
outsb
add
and
cmpb
jge
aam
leave
cltd
jle
mov
dec
xor
popf
std
test
clc
dec
stc
dec
loop
hlt
jle
mov
pushl
fwait
sub
fidivrl
sbb
scas
lea
aam
andb
push
sbb
or
jmp
sbb
loop
sub
setns
cld
sub
int
lahf
xor
test
mov
outsb
push
mov
rol
es
rolb
bound
lods
in
sahf
jno
repz
jno
xor
jnp
cs
out
dec
cmpb
bound
lods
jl
in
xchg
scas
jecxz
shlb
icebp
cmp
test
mov
out
imul
insl
int3
sub
adc
fsubrl
adc
in
dec
in
and
clc
leavew
jns
int3
mov
loope
clc
jbe
bound
movsl
pop
out
push
std
nop
mov
jbe
cmp
ffreep
jle
push
out
in
fsubrs
lods
sub
pop
jp
cs
mov
inc
push
xor
nop
mov
scas
ret
out
fsubs
int3
mov
rcll
cmpl
mov
lods
add
popl
jg
sbb
push
movsb
inc
and
mov
add
in
fdivrs
sbb
sub
aaa
pop
mov
in
xchg
pop
inc
lahf
scas
sub
or
aaa
ja
cmp
loop
and
addr16
push
xor
test
dec
xchg
test
add
cmpsl
iret
cmp
jnp
das
inc
fcmovnb
jbe
dec
and
cmc
mov
stos
divl
pushf
mov
xchg
push
mov
mov
or
out
js
jl
arpl
mov
and
or
lret
pop
cmp
movsb
fiaddl
jnp
jne
test
rorl
orb
addr16
adc
push
dec
mov
and
inc
pop
int3
cmp
negl
mov
outsb
dec
jge
js
inc
adc
push
xor
jmp
cs
ret
and
int3
std
jle
mov
shlb
js
outsl
iret
pusha
das
mov
mov
pop
xchg
ret
cmpsb
pop
mov
mov
cmc
sub
out
icebp
repz
mov
fisubl
push
adc
call
fadds
xchg
push
pop
lods
sub
lret
and
push
fwait
outsb
out
and
jae
in
inc
pop
rcrb
fistl
int3
pop
cmpsl
xor
xchg
xchg
xchg
adc
mov
cmc
jecxz
jns
imul
xor
leave
sahf
mov
ljmp
inc
add
push
and
mov
push
dec
push
xchg
jp
es
mov
in
mov
pop
leave
cmc
sub
and
mov
push
and
sbb
shr
ss
pop
lock
lahf
pop
mov
dec
add
mov
dec
cmpsb
pusha
xchg
ja
xor
mov
sub
cli
jno
mov
inc
mov
mov
stc
pop
xchg
or
movsb
je
pop
dec
mov
shll
faddl
or
int
xor
mov
push
mov
inc
arpl
sub
push
out
dec
lahf
call
shlb
shrl
push
push
std
ret
imul
cwtl
pop
into
test
imul
mov
bound
cltd
mov
mov
push
push
fistpll
fistl
fidivrs
adc
jecxz
sub
testb
xor
mov
test
aad
mov
pushf
mov
test
mov
lret
dec
cltd
rclb
xor
in
scas
jge
dec
adc
in
out
cld
sbbl
pop
push
push
lds
fwait
cltd
daa
mov
xchg
adc
cmp
aaa
lea
push
push
mov
imul
xchg
inc
pushf
es
inc
out
lock
jecxz
push
pop
sub
pop
add
mov
adc
jns
cmp
or
jo
gs
insl
fdivp
push
push
inc
or
jle
addr16
shr
stos
int
mov
std
les
inc
push
pop
xchg
jmp
imul
sti
mov
insb
sub
mov
add
cli
mov
xchg
ja
pop
iret
mov
pop
and
push
jnp
je
xchg
push
mov
test
sarb
dec
shlb
sahf
out
test
add
inc
mov
and
add
sbb
xchg
or
adc
flds
das
aam
inc
rcrb
xor
shrl
icebp
sarb
push
push
jge
dec
das
add
scas
stc
or
mov
gs
xor
stos
jbe
sbb
out
push
sahf
fistps
insl
xor
mov
aas
jge
mov
and
mov
cld
sub
inc
jnp
sbb
fidivs
cli
mov
repz
jbe
fnsave
mov
faddl
jb
xchg
bound
imul
jae
gs
xchg
ss
pop
xor
push
mov
pop
lret
adc
sub
push
inc
scas
mov
adc
add
ja
pusha
push
int
rcll
cltd
cmp
out
mov
in
mov
sahf
jle
aas
dec
pop
ret
and
les
std
push
push
sub
push
repnz
repz
stos
rcl
sbb
aad
adc
out
dec
inc
cwtl
push
or
lcall
test
call
aad
jns
jle
subb
test
imul
xchg
mov
adc
xchg
pop
cmpsl
arpl
lea
les
push
mov
xlat
xchg
stc
and
jg
js
outsb
lock
out
sub
test
pusha
push
fildl
iret
inc
lcall
add
movsl
insb
out
xor
sub
mov
ss
sbb
int
lret
pop
jne
cmp
mov
add
loope
sub
dec
cmp
and
mulb
mov
add
ret
jp
pop
outsl
adc
dec
test
int
dec
xor
pop
pop
fisttps
test
lods
push
add
shll
or
jecxz
sbb
fisubrl
stos
xchg
movsl
jne
pop
push
fiaddl
cmp
pushf
xchg
pushl
sbb
dec
mov
mov
or
stos
mov
xor
pop
mov
dec
mov
ss
cmp
inc
jle
loop
negl
push
push
lahf
pushf
sarb
in
std
outsl
pop
jle
xchg
inc
inc
das
mov
ss
aam
icebp
stc
xchg
in
lea
in
push
lea
inc
mov
es
mov
add
or
jo
in
jmp
add
dec
fsubl
movsl
xchg
fs
sbb
daa
out
adc
lds
scas
sub
int
scas
add
iret
roll
mov
and
xor
sub
bound
mov
stos
fld
or
or
lret
mov
sbb
sbb
and
test
rcrb
loope
add
ret
scas
xor
sbb
pop
add
and
stos
pop
pop
mov
or
out
xchg
ja
inc
dec
sbb
orl
loopne
push
das
lock
jae
adc
fisttpl
jmp
addb
sbb
scas
outsl
xlat
jle
je
mov
inc
iret
mov
and
mov
push
insl
or
xchg
xor
mov
jmp
or
xor
cmp
pushf
and
jno
push
mov
add
js
aam
mov
inc
adc
mov
insb
pop
mov
bound
scas
jmp
lds
pop
aaa
jnp
roll
xor
bound
lcall
lret
test
ja
fisubrs
mov
les
jmp
fbstp
pop
lret
insb
dec
imul
aad
stos
xor
xor
das
addr16
ret
in
mov
or
xor
cmp
ret
gs
movl
and
xchg
loopne
outsb
lret
mov
xor
or
ljmp
mov
push
nop
sub
jecxz
xor
outsb
mov
dec
mov
mov
ja
mov
mov
push
ss
mov
jmp
sub
pop
hlt
test
mov
mov
test
mov
mov
pop
adc
clc
insb
ja
call
and
jg
mov
pop
jbe
call
dec
in
scas
aaa
out
movsl
cs
xor
cmpb
xchg
jns
rcrl
pop
jbe
push
in
scas
cmp
fidivrl
aas
xlat
jns
xchg
fnstsw
data16
loopne
pop
adc
ja
or
je
imul
push
mov
pop
out
mov
rclb
jg
xlat
adc
xchg
add
ffree
xchg
aaa
inc
fwait
add
aad
sub
push
test
movsb
mov
dec
pop
aad
out
adc
lock
js
pop
inc
adc
sahf
cmp
mov
jns
leave
push
dec
pop
jmp
into
dec
cli
add
cs
fidivrl
insl
fwait
push
cmp
cmp
jo
test
js
pop
pop
mov
orb
inc
in
pop
sbb
notl
mov
es
push
push
into
and
jno
inc
mov
jecxz
jp
and
push
cmc
or
scas
sbb
outsl
jg
add
push
push
inc
or
in
jp
fndisi(8087
lahf
mov
push
js
fldln2
xchg
test
cld
xchg
dec
dec
pextrw
sbb
push
xor
test
push
pop
cmp
mov
aam
sbb
fs
mov
lcall
mov
dec
mov
popf
aad
xor
adc
adc
lcall
cmp
mov
sbb
xchg
in
rolb
pushf
cmpsb
jmp
test
jns
sbb
cmpl
mov
xchg
ss
push
and
xor
ret
shlb
cmp
xchg
decb
imul
jns
cmp
dec
scas
scas
pop
xchg
adc
jb
outsl
sbb
ja
divl
mov
mov
dec
push
cmp
movsw
jle
scas
or
pop
test
out
gs
movups
cmp
cli
xor
add
xchg
jp
imull
mov
fidivrl
or
or
mov
cld
stos
lds
ss
jne
mov
out
sti
ja
orl
inc
iret
inc
xchg
shll
stos
stc
push
dec
sbb
rol
repz
jno
jg
fxsave
je
imul
loope
adc
jb
mov
mov
sub
test
add
dec
pop
in
sub
idivb
xor
cmp
mov
shll
call
loopne
icebp
ficompl
or
mov
mov
xor
cmc
push
cmp
add
mov
sub
rorl
mov
shll
jb
adc
push
fidivrl
push
std
jno
test
xor
mov
sti
loope
mov
insl
push
push
mov
ja
inc
lods
inc
andb
push
fwait
add
jge
dec
lds
mov
movsl
push
jb
sub
stos
pop
push
add
and
ljmp
cmp
aas
and
popa
cmp
fiadds
int
hlt
push
xor
arpl
sbb
jae
in
and
push
aam
pusha
aad
cli
scas
rcrb
push
insl
iret
sbbl
nop
loopne
repnz
enter
mov
repz
aam
dec
adc
push
and
daa
mov
mov
rcl
pusha
lret
dec
cmp
ftst
push
fwait
out
mov
fimuls
sbb
mov
aaa
popf
clc
xchg
dec
inc
mov
sbb
fmuls
cmpl
mov
inc
in
sub
clc
in
repnz
jp
sahf
sbb
push
mov
xlat
dec
out
gs
inc
push
data16
mov
cmp
adc
inc
mov
or
push
rol
cmp
dec
out
bound
adc
sbb
jns
sub
lods
fimuls
outsb
inc
jg
cli
xchg
idivb
leave
lfs
lcall
pop
xor
incb
popf
mov
xor
out
push
test
mov
add
ss
gs
movsb
cltd
shlb
and
xchg
jge
lods
mov
rcrl
fstpl
sub
mov
xor
idivl
push
gs
out
lods
cvtps2pi
add
cltd
add
mov
adc
dec
inc
addr16
push
fld
in
jne
insb
ljmp
jge
push
xorl
sahf
mov
in
idivl
mov
jno
mov
rorl
fs
inc
scas
inc
in
mov
sbb
cmp
jg
adcl
jb
push
mov
out
add
mov
dec
outsl
lret
mov
loop
popf
jnp
bound
add
pop
mov
jecxz
lcall
push
cmp
mov
inc
loop
xchg
scas
cltd
jle
jp
mov
loop
repnz
int
lock
dec
lods
rorl
mov
ds
pop
repnz
push
mov
xchg
mov
ja
rcll
cmp
mov
rcrl
push
jb
int
dec
repz
fisttpl
push
lds
jl
lds
and
daa
lock
movsl
data16
push
inc
addr16
push
push
pop
decl
and
sbb
iret
xchg
jge
fdivrs
mov
out
fidivrl
jae
imul
push
test
cmp
div
dec
vpmulhuw
popf
sbb
clc
outsl
mov
call
outsl
sbbb
mov
aad
mov
pop
cmp
jne
mov
sbb
arpl
xor
addr16
sbb
gs
sub
mov
movsl
sbb
jle
sahf
push
mov
xchg
xor
pop
mov
in
mov
or
je,pn
xchg
pop
gs
jl
sbb
sub
ret
sbb
gs
cmp
jg
lret
push
xor
jmp
scas
cltd
shr
mov
sbb
inc
and
xor
jecxz
in
rorl
push
dec
in
sub
lods
mov
test
jg
jmp
in
mov
inc
mov
je
push
loopne
test
stos
lock
ret
pop
lcall
int
hlt
cld
out
dec
hlt
push
rorl
inc
mov
ds
or
je
jg
fistpll
adc
cltd
lds
inc
mov
add
inc
add
mov
inc
dec
ja
aaa
ss
mov
add
sub
out
aam
xchg
mov
or
cmp
sbb
cmc
mov
xor
out
bound
cld
popf
pop
add
cmpsl
rol
ljmp
add
cmp
cmp
imul
jecxz
dec
mov
pop
data16
cmc
es
sub
fbstp
jmp
jo
inc
xor
adc
and
push
flds
call
dec
mov
adc
inc
outsl
jo
mov
inc
xchg
cmp
jns
rol
push
mov
pusha
lret
lock
jns
sti
cmp
fdivr
adc
and
fisubrl
lods
pushf
mov
inc
or
sbb
iret
fs
lea
leave
jmp
es
imul
loop
mov
arpl
xor
nop
cld
xor
clc
adc
int
fadds
inc
and
push
hlt
enter
sbb
cmp
cld
push
repz
mov
jb
push
out
inc
xor
lcall
pop
pop
movsl
in
inc
mov
neg
xor
cmpsl
clc
in
mov
pop
sub
lods
in
jmp
cli
stos
jge
gs
dec
jle
lds
ds
shll
dec
out
mov
pop
or
sbb
mov
pop
pusha
fs
das
pop
lret
daa
mov
cmp
repnz
fwait
into
sub
ror
clc
aam
ss
jmp
scas
jmp
pusha
enter
cld
std
enter
sub
call
shlb
in
xor
fwait
into
cli
pop
sbb
aas
sti
sbb
lds
mov
add
pop
je
insb
xor
imul
int
and
add
ficoml
mov
scas
sti
ja
paddb
stos
cli
ljmp
pop
xchg
hlt
dec
icebp
cmc
imul
or
push
xchg
pop
mov
lods
mov
js
dec
pop
pop
rcll
inc
jnp
cmpsl
jmp
sbb
xor
mov
ret
fmuls
xchg
mov
sub
push
in
outsl
ljmp
push
stos
add
aaa
out
mov
dec
and
inc
mov
icebp
sbb
rcrb
jmp
mov
and
and
fs
pushf
int
mov
xlat
pop
xor
js
sti
and
push
mov
xchg
rcrl
stos
iret
or
mov
and
or
scas
add
dec
mov
aas
outsb
es
fistpl
nop
mov
lret
es
cmp
mov
int
gs
mov
rcl
xchg
fidivrl
xchg
test
ret
testb
mov
pusha
push
aaa
and
inc
inc
jb
int
aad
sub
sbb
orl
add
pop
pop
jae
inc
lret
inc
inc
xor
lds
out
xor
or
and
push
fwait
jae
jge
movl
int
pop
faddl
mov
jo
sbb
imul
int3
fsubrs
inc
test
mov
pop
xchg
nop
cwtl
push
jb
in
in
daa
xchg
sbb
sbb
cmpl
sti
cmp
cmpsl
movsb
mov
sub
cmpsb
sub
add
in
adc
pop
cmpsb
pop
inc
lcall
fcomps
add
lcall
popa
cwtl
push
and
sbb
cli
adc
test
daa
and
mov
notl
popf
sti
pusha
enter
jo
jmp
movsl
sub
lret
xchg
test
cmp
adc
repz
lahf
test
cwtl
mov
les
sbb
inc
not
out
push
and
das
inc
mov
call
mov
scas
sbb
cmp
adc
pushf
shlb
cmp
fstps
out
add
jns
lret
mov
imul
fdivs
mov
adc
inc
sti
filds
jmp
mov
imul
enter
lods
cli
push
rclb
inc
int
pop
mov
aam
data16
outsl
es
rol
pop
pop
cmp
daa
daa
cld
push
aad
mov
enter
pop
sub
mov
cmp
mov
imul
dec
and
xor
loope
mov
xchg
mov
insl
bound
push
outsl
test
cwtl
pop
push
push
pop
mov
jns
popa
inc
dec
aas
push
bound
mov
and
stc
pop
xor
jmp
cmpsb
call
fwait
cs
mov
mov
pop
rcrl
xchg
dec
sbb
outsl
daa
repz
mov
aam
test
and
jge
push
pop
mov
cmp
sub
mov
fisttpll
test
jmp
mov
rcrb
add
mov
and
xor
jnp
lahf
rorb
pop
inc
adc
push
cmp
and
hlt
mov
nop
pushf
dec
push
push
jb
cwtl
lds
js
data16
mov
mov
push
inc
sbb
imul
xor
dec
xchg
test
dec
js
lds
cli
push
fwait
mov
xchg
aas
inc
ret
lahf
nop
into
cs
out
or
notb
jnp
test
loopne
addl
clc
push
das
cltd
or
xchg
or
repnz
lahf
andb
jns
scas
lds
int3
mov
mov
xor
roll
enter
mov
jno
jmp
add
cmp
sarl
out
sbb
mov
das
in
push
xchg
jle
insb
lods
mov
fs
call
inc
fbstp
fsubr
and
out
mov
aaa
mov
jmp
adc
or
outsb
pop
push
and
xchg
xchg
sub
dec
sbb
cmp
push
aaa
dec
push
cli
pushf
mov
and
popf
or
movsl
stc
push
andl
xor
aaa
xor
cmp
sysexit
lock
mov
faddl
or
shll
sbb
push
jl
sbb
sub
inc
adc
testl
jb
xorl
mov
sbb
xor
push
lahf
fsts
mov
icebp
or
push
rclb
mov
push
mov
icebp
ret
call
jge
int3
mov
mov
jecxz
dec
add
dec
push
fs
cmpsb
and
shrb
in
lock
es
outsl
clc
test
in
cmp
sarl
jmp
roll
lret
dec
xchg
cmp
fldenv
ficoms
jns
push
dec
cmp
pop
aam
cmpsl
outsb
ficomps
pop
pop
sbb
loop
clc
xchg
dec
pop
call
adc
or
iret
out
adc
aad
icebp
inc
jp
xor
fdivl
fmuls
addr16
mov
cmpsl
into
bound
push
scas
pop
mov
sahf
scas
sbb
scas
or
shrl
cmp
xor
iret
add
scas
std
adc
in
ja
inc
ss
jge
mov
fxch
xor
add
daa
adc
rorb
cmpps
fucomip
lahf
pextrw
pop
xor
clc
movsb
jl
adc
mov
aaa
mov
nop
rcl
mov
xorb
lahf
stc
sbbl
std
and
sbb
inc
in
sub
nop
cmc
into
sbb
or
lret
jae
cmp
lock
idivl
cmc
imul
sbb
cld
testb
dec
mov
fwait
fwait
int3
cli
cmp
insb
sbb
in
inc
adc
and
pusha
leave
test
insl
xchg
cmpsb
outsl
push
xchg
push
gs
mov
cmp
cwtl
rcrb
jl
dec
loope
jne
fsubl
push
in
sbb
pop
scas
add
adc
scas
repz
cli
and
leave
add
insl
inc
sub
lds
add
jae
fildl
rolb
mov
notl
dec
or
pop
fsin
clc
adc
jg
sub
fs
rcr
orb
xor
inc
lods
inc
sub
std
repnz
inc
push
cmp
add
in
test
out
adc
lock
mov
sub
sbb
mov
inc
and
jl
std
scas
leave
or
lock
inc
inc
repnz
xchg
and
ja
ds
mov
adc
pop
and
scas
and
cmpsb
cs
jmp
mov
jmp
and
mov
push
jne
lods
xchg
cmp
mov
rcrb
rol
out
jg
rorb
xchg
lahf
lret
mov
sbb
push
pushf
outsl
xchg
repz
in
pop
dec
xchg
cmpsl
inc
jp
dec
lcall
adc
hlt
jns
mov
push
leave
add
cmp
fisubs
mov
mov
and
adc
loop
xchg
pushf
mov
test
and
fmuls
jno
roll
insl
scas
push
xchg
jmp
mov
mov
ret
int
xor
orl
push
jns
loopne
cmc
imul
push
push
rolb
sbb
loope
sub
test
xchg
mov
imul
xchg
fisttpll
icebp
cmpl
cli
repz
push
test
xor
out
or
mov
adc
nop
aam
fisubrs
outsl
jp
ror
insb
je
mov
leave
push
add
add
jle
hlt
imul
and
xchg
clc
mov
jb
cmp
scas
dec
cmp
and
add
cmpsl
addr16
nop
js
xchg
aam
cmc
dec
push
inc
push
aaa
and
scas
les
add
mov
mov
faddp
es
cmp
jg
inc
in
ret
fcos
popf
jecxz
lock
inc
cltd
pop
notb
hlt
and
xor
xchg
xor
add
movsb
lret
in
sbb
mov
pop
mov
pop
test
in
jne
push
aad
movsl
lods
loopne
call
jg
add
js
inc
sbb
cmp
ret
pop
in
mov
rclb
inc
sub
mov
push
jno
movsb
pushf
nop
cmp
mov
inc
stos
add
lods
jo
dec
adc
fmuls
movsl
test
mov
adc
movsl
xchg
mov
loopne
push
popf
dec
loopne
cmp
sub
mov
add
xchg
mov
addr16
lock
sahf
sbb
loop
int
jle
insl
inc
lods
andl
clc
fisubrl
sub
xchg
and
aas
pop
add
sbb
shrl
mov
fxch
dec
addr16
pusha
push
push
dec
out
je
daa
jno
mov
jns
mov
jbe
out
loop
data16
mov
xchg
fs
adc
cmp
mov
cmp
sbb
idivb
or
or
enter
pop
mov
popf
repz
test
or
enter
lea
lea
ffree
push
push
adc
xlat
jge
xor
sub
add
test
je
mov
jmp
and
add
fimull
jae
jae
xor
pop
iret
push
mov
adc
inc
sahf
dec
test
jge
jns
push
inc
mov
mov
std
jb
aas
mov
mov
das
push
mov
arpl
sbb
into
pop
popf
xor
aas
xchg
pop
cmp
cmp
pop
shl
xor
dec
cmp
fldenv
or
imul
xchg
popf
xor
clc
inc
mov
and
pushf
push
cmovo
insl
or
leave
pop
int3
lods
imul
push
mov
loope
push
out
imul
inc
sub
dec
movl
rcll
push
in
xchg
dec
sub
push
repz
dec
jge,pt
mov
add
cli
mov
xor
mov
adc
adc
xchg
add
xchg
in
jp
jecxz
sub
pop
push
push
cli
es
xchg
and
cmp
lds
mov
mov
push
and
daa
notb
inc
push
push
call
sub
inc
adc
imul
int3
pop
inc
mov
and
jle
sbb
in
imul
sbb
test
and
aas
add
xchg
xchg
inc
inc
push
mov
add
std
imull
xor
jg
dec
lods
xchg
jae
fcomps
push
rcll
jmp
aas
cmp
jg
fsubr
pop
mov
mov
or
push
xchg
outsl
cmpsl
adc
push
pop
or
dec
jb
push
jns
in
cmc
fdivr
icebp
add
shld
push
movsl
repnz
mov
mov
out
add
in
dec
cwtl
jb
adc
adc
test
inc
fnstenv
mov
fistl
enter
xchg
scas
xor
dec
xor
xor
pop
mov
dec
add
push
dec
push
fldt
and
mov
and
cli
addr16
pop
dec
and
dec
push
in
cs
imul
lcall
adc
lahf
and
pop
andl
xor
pop
xorl
push
and
lahf
aad
sub
hlt
insl
rclw
jne
dec
out
dec
mov
mov
xchg
xchg
aas
dec
leave
push
lock
ds
push
pop
inc
rolb
test
das
shrb
cmc
mov
sbb
ret
xchg
ret
and
or
push
mov
aas
subl
xchg
inc
int3
mov
loopne
sbb
xlat
ljmp
enter
jno
dec
and
cwtl
and
fistpll
flds
xlat
mov
xlat
adc
fstpt
insl
insl
xlat
stc
xchg
adc
lcall
outsb
and
out
call
repz
mov
xor
testl
lods
sub
nop
xchg
xor
push
mov
dec
pusha
test
cltd
lock
fisttpll
xlat
and
imul
and
jae
cmp
push
gs
addr16
clc
or
jecxz
mov
and
arpl
mov
xchg
and
sbb
push
inc
inc
and
add
add
jl
lcall
lret
or
jp
pop
ror
add
je
cmp
andb
mov
loopne
dec
adc
adc
pop
pcmpgtb
mov
or
add
inc
aad
subl
insb
sub
sbb
aaa
jp
push
std
movsb
out
push
pop
and
add
jne
sbb
popa
jg
adc
ds
lods
stos
mov
scas
xchg
pop
mov
or
sti
and
imul
repnz
push
clc
pop
cmp
inc
add
idivl
shll
jmp
push
add
cmpsb
cmp
in
sub
fdivl
cwtl
roll
arpl
cwtl
mov
mov
aam
push
call
jp
std
jg
ret
push
lahf
pop
xchg
cmp
lret
rcr
daa
xor
call
nop
lret
and
mov
cmp
xchg
stos
mov
mov
imul
mov
push
pop
sti
dec
movsb
add
es
xchg
cmp
adc
pop
pop
dec
sarl
jb
adc
dec
adc
lcall
scas
dec
sti
push
cmpl
mov
xor
out
ljmp
cmpsl
imul
push
mul
ds
dec
cli
std
movsb
pop
inc
cmp
mov
inc
adcl
mov
ljmp
leave
xchg
ljmp
fstps
repnz
roll
add
daa
cmp
cmpsb
jecxz
sub
jle
xor
inc
adc
icebp
mov
or
mov
int3
sahf
jp
sbb
cmp
aaa
je
shlb
sbb
jne
sbb
popf
rorb
ss
inc
jae
add
data16
jl
dec
cli
mov
cld
out
pop
mov
jle
je
addr16
testl
adc
jl
adc
xor
loopne
push
or
in
rol
mov
xchg
mov
loop
fdivrl
shrd
lds
mov
or
das
in
sub
das
js
mov
imul
cwtl
push
enter
fs
call
movsl
pop
pop
dec
mov
arpl
dec
pop
arpl
scas
iret
loope
and
inc
std
stos
xor
add
push
sar
es
push
or
mov
and
pop
test
ret
adc
hlt
cmpsl
lcall
shll
inc
insb
and
jle
fcompl
pop
outsl
sub
ds
inc
jne
push
bound
lea
outsb
mov
scas
push
dec
movsl
push
jnp
jle
pop
inc
jnp
add
jl
jle
jne
dec
push
push
dec
mov
icebp
iret
or
push
gs
dec
xchg
out
push
sbb
je
dec
jp
jmp
dec
out
ja
mov
icebp
ss
inc
sub
dec
cmp
xor
jnp
lret
mov
mov
cld
es
or
or
sbb
add
sbb
cmc
xchg
fimull
sahf
adc
mov
cwtl
and
xchg
inc
pop
leave
aad
insb
xor
add
loope
jl
lahf
jbe
fwait
mov
lock
repnz
xor
push
inc
data16
fildll
lea
fbld
sub
xchg
add
lods
mov
arpl
ret
adc
mov
xchg
test
inc
and
pop
mov
push
mov
mov
jns
jg
test
adc
push
jge
add
mov
push
or
xchg
ficomps
and
pop
mov
dec
stos
jae
mov
sub
pop
std
cmp
mov
push
adc
mov
loop
sub
jbe
push
lret
icebp
sub
xor
ss
push
sbb
push
cmpsb
in
inc
clc
rorb
dec
shl
push
lret
push
lds
lods
or
fs
push
loop
and
xchg
aad
rcr
xor
nop
daa
into
cmp
pop
sub
sbb
in
es
jnp
inc
roll
shll
lds
stos
lcall
jbe
icebp
adc
add
aad
add
mov
dec
cwtl
push
ret
aad
movsb
enter
lret
pop
mov
outsl
sub
popa
pop
sbb
push
sahf
idivb
popf
in
sub
lds
mov
int
xchg
ljmp
xor
shrl
inc
push
pop
xor
sti
int3
iret
and
dec
push
aas
pop
mov
xor
scas
sub
jb
push
or
push
mov
add
ret
sahf
mov
and
jae
in
ret
out
fwait
or
sbb
movsl
inc
fisttpl
add
cmpsl
out
loopne
imul
adc
xchg
out
xchg
push
test
cli
add
and
rolb
xchg
bound
movl
mov
pop
or
xor
je
out
bound
dec
xchg
mov
dec
add
fildl
xchg
dec
lods
lea
call
push
inc
xchg
repnz
das
subl
scas
movsl
sbb
add
dec
push
repnz
inc
add
or
jbe
sub
cltd
add
rorb
push
pop
int
imul
sbb
imul
pop
jo
xor
ja
adcb
sbb
lret
adc
enter
int3
pop
mov
leave
shlb
jecxz
loopne
out
roll
out
int3
ljmp
mov
mov
pop
fnstsw
cmpsb
mov
movb
sbb
mov
sbb
pop
js
xchg
loop
arpl
mov
pop
fldenv
ror
sbb
jnp
push
push
or
sbbl
or
leave
jns
cmpsl
mov
jecxz
pop
mulb
xor
adc
out
mov
adc
rol
and
inc
push
loopne
push
pop
pushf
sbb
out
dec
dec
jecxz
sub
roll
mov
xchg
decl
repz
pop
and
jae
pop
dec
xor
add
sub
fildll
mov
js
mov
pop
adcl
stos
mov
mov
fdivr
and
mov
add
into
lret
inc
adc
ret
pushf
out
loope
mov
jmp
xor
xor
das
inc
shrb
insl
jns
jmp
pop
pop
adc
mov
adc
out
and
adc
fstps
icebp
ror
xor
out
repz
stos
lock
testb
dec
ret
push
xor
fs
out
push
pop
icebp
or
cs
insb
xor
insb
xchg
fisubrl
xlat
stc
adc
dec
ljmp
jb
xlat
pop
sub
sahf
lods
pushf
lds
adc
pop
les
inc
gs
xchg
jo
sbb
inc
inc
mov
les
fnsave
movsl
fstps
mov
jmp
jp
mov
repnz
cmp
insl
scas
push
testl
outsb
test
mov
pop
lock
or
sarb
push
je
insl
or
cli
add
cs
js
pop
mov
mov
cwtl
xchg
jmp
push
mov
mov
rcrb
or
outsl
inc
lods
add
jp
xchg
cmova
in
jg
bound
mov
gs
decl
repnz
loopne
add
sbb
add
in
mov
shlb
xor
fs
xchg
stos
dec
cmp
iret
jae
mov
js
addl
js
mov
push
or
jns
arpl
cli
jne
or
leave
dec
punpckldq
xchg
nop
test
push
std
psubsw
xor
xchg
aas
lret
jno
jae
lds
jb
push
decb
fistl
stc
test
jecxz
xor
jns
daa
inc
pop
lret
mov
jne
jns
aaa
dec
sarb
cmp
rcll
cmp
fldl
mov
addr16
sbb
pop
mov
pop
shll
or
jbe
ficomps
loope
lcall
add
rcl
add
mov
test
add
or
shrl
ljmp
gs
mov
dec
ss
jno
imul
movsb
mov
imul
das
test
ja
cbtw
je
or
xchg
jmp
pop
mov
jns
movsl
add
mov
or
daa
xor
sbb
out
mov
push
aaa
sbb
pop
lods
jmp
test
sti
addr16
js
fldt
pop
jnp
add
xchg
stos
fucomi
cmp
cmp
mov
rclb
rol
mov
arpl
aad
pop
into
mov
ret
cld
fimull
int3
mov
rolb
xlat
movsl
imul
fs
mov
dec
arpl
inc
sbb
mov
in
es
aaa
aam
xlat
test
adc
cmpb
push
add
push
jne
stc
call
dec
fcmovu
cmp
pop
out
cmp
js
aaa
inc
and
jmp
cs
bound
sub
sub
inc
fdivs
push
mov
imul
bound
and
inc
add
jecxz
sub
inc
jno
pop
loop
dec
fcomp
pop
push
mov
cli
push
jne
lock
testb
add
dec
lcall
sub
pop
cwtl
mov
mov
inc
lret
inc
movsl
sub
in
push
mov
repnz
jo
pop
aas
mov
rorl
mov
sub
popf
mov
push
in
mov
push
cmp
icebp
dec
pop
jge
loope
xchg
out
jo
inc
aaa
cmp
jl
or
and
pop
gs
add
mov
mov
xchg
lcall
mov
aaa
cltd
pushf
mov
jbe
mov
and
pop
push
xchg
fmul
mov
push
in
cmpl
jo
loope
mov
daa
inc
push
mov
test
push
iret
push
addb
addb
mov
loope
int
add
mov
jmp
sub
mov
in
jb
mov
ffreep
ss
push
addl
inc
mov
lods
jae
sti
mov
add
jg
mov
mov
dec
aas
jg
sub
xlat
orb
dec
sti
inc
cmpsb
push
xor
sub
fs
movsl
data16
adc
xchg
dec
dec
lds
inc
mov
std
fcompl
jae
int3
xchg
dec
int
cmp
aas
and
cmp
pusha
movsb
sahf
repnz
fdivrs
mov
push
imul
sbb
push
jg
jne
pop
daa
outsw
sub
pop
push
jge
mov
ja
push
cmp
dec
jbe
or
lret
sarb
push
jmp
inc
add
shll
or
imul
jmp
inc
mov
jp
inc
jle
mov
das
dec
or
hlt
imul
jns
mov
cmp
scas
mov
dec
xor
push
orb
leave
sub
adc
clc
add
pop
jbe
jmp
xor
and
test
arpl
in
pop
inc
cmp
xchg
jne
out
xor
cmp
add
pop
or
xor
cld
ds
xor
aas
js
stos
jl
xor
push
sbb
pop
jbe
mov
jp
or
sbbl
mov
xor
or
push
imul
or
cmc
iret
or
jmp
dec
xchg
xchg
test
fwait
mov
adc
or
pop
mov
aam
xor
jne
fidivrs
mov
fcom
add
sub
stc
loopne
dec
push
inc
push
push
les
mov
push
repnz
mov
enter
jp
bound
push
cmp
shll
inc
lahf
call
xor
lods
inc
imulb
xchg
rorl
mov
mov
pop
stc
inc
push
xor
mov
int3
push
pop
or
out
xor
mov
loope
mov
loope
lods
shll
hlt
test
mov
clc
jge
insb
out
push
mov
jae
sub
out
sbb
mov
aaa
imul
xchg
scas
mov
jnp
lret
cwtl
sub
sub
rclb
pop
or
das
inc
and
xchg
sub
push
jbe
sub
add
push
jno
mov
cs
pop
lods
push
inc
mov
jnp
jne
mov
mov
push
mov
and
stc
mov
lret
mov
sub
daa
pop
enter
push
out
imul
inc
dec
lret
cmp
pop
cmp
add
testb
cwtl
mov
add
cmp
jl
adc
jl
cmpb
sub
push
in
and
cmpsb
and
lock
fcmovnb
xor
and
in
in
jne
mov
in
dec
xchg
ljmp
lahf
mov
inc
out
test
mov
fldt
push
into
mov
in
call
lret
push
hlt
adc
and
sub
sub
sbb
and
in
enter
jl
pop
pusha
xor
sub
fbld
sbb
loope
shrb
xchg
dec
sahf
mov
fwait
push
je
clc
fistpl
mov
add
fldcw
push
inc
jo
out
adc
and
mov
lock
xor
std
dec
mov
sub
call
and
out
push
into
aam
pushf
lea
mov
mov
scas
xchg
fstl
test
loopne
out
sbb
out
jmp
enter
es
mov
xchg
mov
mov
fbld
lret
dec
fidivrl
icebp
sub
pop
daa
push
rcll
mov
sbb
pop
and
out
mul
movsb
jg
lds
sub
lcall
xchg
lock
sub
fistpl
test
push
shll
cmp
test
fistpll
or
roll
adc
mov
mov
sub
lret
dec
imul
add
xchg
mov
adcb
fnsave
jmp
cmp
mov
popf
xor
push
testb
pop
jne
idivl
push
aad
mov
mov
mov
loope
dec
fsts
in
and
insl
jle
das
adc
jg
data16
cmpsl
or
out
cmp
out
or
and
mov
xor
in
adc
rcrl
sub
dec
popf
loopne
or
push
ljmp
movl
rol
arpl
xchg
pusha
mov
adc
mov
xor
sbb
pop
sbb
add
sub
loopne
out
pop
mov
or
xchg
arpl
ficomps
pop
mov
mov
aas
daa
int
mov
and
xchg
sbb
outsb
sub
ds
fnstcw
push
push
movntps
mov
sar
xchg
test
sbb
jns
adc
pusha
cmpsb
pop
lret
cld
in
pop
xchg
je
push
mov
mov
mov
xchg
pusha
mov
adc
push
arpl
mov
rorb
mov
int3
xchg
pop
sub
in
add
xlat
test
in
jecxz
push
pop
mov
mov
inc
ja
popa
ljmp
scas
add
jbe
mov
mov
adc
andb
hlt
es
jmp
int
int3
shll
loope
je
lahf
dec
or
imul
call
clc
cmp
fmulp
out
cmc
mov
inc
fiadds
xchg
iret
mov
jae
shl
jno
dec
xor
mov
add
mov
fwait
data16
ds
in
push
mov
sub
js
mov
jg
iret
dec
in
ja
clc
pop
sbb
iret
movsl
mov
inc
inc
xchg
lea
imul
pop
test
xchg
mov
les
cmc
push
mov
mov
mov
cwtl
inc
enter
in
cmc
push
xchg
mov
jg
lea
lock
sub
imul
mov
sub
rcrl
mov
adc
pop
jg
sbb
push
cmp
push
push
cmpsb
cmpsl
js,pt
mov
cmp
adc
pop
fldt
push
mov
subb
arpl
and
icebp
or
mov
sub
imul
push
mov
and
inc
xchg
jno
cmp
xor
cwtl
mov
nop
or
jl
push
jl
mov
or
arpl
mov
jle
xlat
mov
push
fs
aas
sub
jae
mov
inc
in
push
pminsw
inc
adc
loopne
dec
mov
inc
and
add
enter
dec
js
loope
outsl
ret
sbb
dec
adc
add
push
mov
mov
jbe
int
sarb
ficoms
ret
sbb
jp
out
lods
adc
mov
aas
js
and
mov
jne
sbb
jne
mov
imulb
push
insl
mov
test
or
frstor
dec
subb
fisubrl
push
pop
xor
sbb
push
hlt
out
loope
jp
movsb
fisubl
xchg
cmp
xchg
jecxz
fcmove
das
cmp
insl
adc
fiaddl
imul
jnp
push
jbe
cmp
inc
jmp
test
aad
sub
movsb
mov
insb
or
inc
adc
repnz
and
pop
jmp
sbb
push
movsb
ficomps
andb
out
mov
xor
and
cmovnp
push
jmp
sub
jb
mov
pop
jae
cmp
cmpsl
pop
insl
jg
xlat
adc
pop
xor
fnstsw
or
mov
ss
pushf
push
scas
push
and
push
imul
cmp
mov
push
cwtl
push
shl
jge
jmp
adc
rorb
aaa
cmp
sahf
loopne
xor
sbb
out
adc
jno
fdiv
pusha
jp
push
adc
loop
addr16
mov
mov
mov
test
pop
mov
mov
outsl
int
pop
out
xchg
loop
in
mov
nop
loopne
in
pop
std
adc
jo
pusha
jg
enter
pop
adc
loope
mov
ss
add
imul
lret
dec
xchg
cmpsl
mov
mov
shrl
testl
or
rorb
pop
adc
adc
std
lahf
loopne
mov
and
mov
jo
sub
int
sub
out
xor
xchg
xchg
inc
add
ficoms
dec
imul
mov
sub
and
testl
push
nop
std
dec
jle
mov
adc
nop
add
jb
push
arpl
mov
fidivrs
gs
das
mov
jl
popa
movsb
sbb
leave
or
sub
adc
je
xchg
lcall
loope
push
sbb
out
push
sbb
pop
jns
push
out
movsl
push
add
lds
scas
lock
mov
iret
lcall
movsb
ret
inc
fildll
sbbl
push
fcmovnb
sub
and
or
sbb
dec
sti
das
int
push
mov
adc
bound
iret
test
in
push
mov
sbb
mov
mov
jns
xchg
inc
popf
sbb
push
pop
int3
lretw
cmp
leave
ficomps
hlt
lret
jecxz
shr
bnd
push
xlat
repz
sub
xchg
mov
pop
data16
mov
lods
cmpsl
push
fcmovnu
or
cmpsb
sbb
les
addb
test
push
popf
inc
push
adc
fnstenv
pushw
cs
cli
pop
out
dec
pop
ljmp
cli
data16
jp
cli
jp
gs
xlat
sahf
lds
fstps
dec
stos
repz
add
mov
push
add
inc
int3
xchg
incl
add
jmp
sub
dec
aam
add
xor
xlat
xor
fbld
or
add
mov
add
repz
sub
push
push
lods
push
daa
xor
jb
inc
ss
cli
sbb
inc
mov
jno,pt
ljmp
scas
push
int
scas
xchg
pop
cmpsl
test
cmp
lahf
gs
fcmovnu
pop
mov
ja
mov
push
add
in
jns
jge
fisubs
inc
push
test
fldl2e
or
inc
imull
sbb
das
cmp
loop
or
movl
lds
pop
int
push
xor
shrl
in
mov
les
ds
cmp
insl
pusha
inc
sbb
in
xor
xorl
test
xchg
rorl
dec
loopne
jmp
adc
cmpsb
xchg
add
lods
lret
push
repz
imul
xchg
sbbb
vpsubb
adc
push
pop
ja
insb
xor
jmp
pop
or
pop
mov
std
push
pop
jne
out
mov
imul
loope
into
out
js
cmp
je
sbb
push
sbb
and
lock
les
addr16
enter
push
cmp
xor
xor
pop
shrl
pop
mov
mov
sbb
inc
ret
incl
pop
outsl
xor
scas
js
xchg
iret
cmpsl
sbb
cmc
cmp
xlat
in
push
stc
dec
sbb
mov
cld
fistps
rclb
cli
adc
push
leave
dec
mov
scas
push
add
or
mov
push
jae
mov
pop
pop
jne
cwtl
jge
lds
sbb
es
pop
mov
jns
mov
lea
hlt
ret
xor
add
outsb
cmp
enter
push
xchg
mov
fadd
push
xchg
into
fld
insb
adc
loop
cmp
into
adc
dec
bound
pop
mov
xchg
push
xorl
arpl
int
mov
cs
or
inc
cld
mov
add
in
mov
xor
mov
adc
sbb
lret
outsb
mov
fdivrl
or
push
dec
jnp
in
fistps
sbb
add
cmp
adc
pop
add
sarb
in
add
ret
rcrb
cld
stos
out
loope
sub
cmp
scas
cli
popf
dec
mov
add
ficomps
pusha
mov
xchg
add
and
xchg
je
rdtsc
insb
mov
out
inc
push
in
mov
in
mov
push
lds
pop
lods
mov
mov
sbb
cld
sbb
das
aaa
xor
adc
int3
inc
call
lahf
ss
or
arpl
pushf
imul
arpl
ds
dec
mov
nop
ja
and
hlt
scas
push
loop
push
lock
sbb
cmp
sahf
mov
or
mov
nop
dec
push
inc
clc
add
ss
std
push
mov
adc
aaa
stos
fcomip
pop
pushf
add
cmp
fcompl
fsts
push
adc
inc
test
push
mov
inc
mov
ret
push
inc
in
inc
mov
movsl
or
fdivs
mov
push
xor
jl
in
outsb
int
jns
jno
insl
xchg
adc
popf
in
adc
or
push
ror
mov
divb
push
jge
insb
subb
mov
pop
add
lahf
imul
mov
jmp
test
fcmovne
shl
and
std
notl
rcrb
out
mov
cmc
in
shr
or
add
clc
hlt
jb
je
aas
fwait
mov
mov
dec
in
ds
sub
jne
xor
imul
cmpsb
outsb
sub
test
jb
shlb
icebp
xchg
rcr
pop
inc
adc
in
cs
push
data16
test
js
add
xchg
inc
enter
push
xor
mov
mov
add
or
mov
pop
inc
ljmp
sub
dec
or
xor
inc
aad
dec
in
or
pop
mov
push
sub
stos
lods
fdivrl
ds
scas
test
and
or
in
jno
ljmp
arpl
mov
or
nop
xchg
mov
xchg
adc
sub
orb
hlt
nop
or
pop
push
repz
mov
int3
xor
mov
js
mov
xchg
jns
aam
cmp
decb
mov
ret
into
cmp
packuswb
test
jle
push
adc
jge
ret
xchg
ret
test
mov
mov
incb
dec
push
xlat
add
stc
inc
ffree
out
inc
lahf
inc
inc
and
mov
les
sbb
mov
mov
mov
in
mov
and
and
jl
fsts
add
out
dec
mov
cmpsb
repz
push
dec
lret
out
xchg
leave
cs
in
fldenv
popf
jo
cmp
adc
ljmp
mov
mov
test
and
jge
pop
mov
stc
testl
sbb
xor
sti
dec
lods
inc
popf
jo
push
or
test
fisubrs
fucomi
insl
repz
push
mov
inc
cld
dec
cmpsl
arpl
xchg
push
adc
sbb
add
jne
and
adc
dec
sti
ret
mov
or
icebp
or
jae
push
or
cmpb
vpunpckhdq
xor
inc
movups
aas
mov
fiaddl
sahf
imul
sbb
stos
mov
gs
fidivrs
ja
pusha
jle
enter
fisubrl
insl
mov
mov
movb
and
cmp
xor
out
sub
shrl
cmp
mov
and
hlt
movsl
xor
mov
push
hlt
mov
mov
xor
fsubl
xchg
loopne
lea
pop
rolb
push
std
add
xchg
sbb
lret
jecxz
pop
xor
jge
and
xor
ja
inc
decb
sub
andb
xorl
xchg
push
js
lea
mov
mov
mov
and
fs
mov
adcb
xor
imulb
dec
sbb
cwtl
cmp
jecxz
test
in
jne
and
mov
adc
adc
sbb
mull
test
insl
or
inc
xor
jl
xor
fstp
xor
xchg
std
imul
ljmp
cmp
jmp
dec
repnz
stc
cmp
mov
and
jle
popa
dec
mov
push
fistpll
xrelease
je
iret
dec
mov
mov
in
enter
mov
inc
je
cmc
js
push
pushf
push
fcoms
sbb
or
stos
aas
test
popf
mov
jo
mov
push
push
dec
iret
aaa
or
test
adc
rorl
lahf
stc
push
sarl
into
or
sub
inc
in
imul
xlat
nop
add
inc
scas
outsl
push
or
mov
mov
js
mov
xchg
inc
cmp
push
lcall
and
gs
clc
jp
dec
ret
ret
rcl
mov
cmp
pop
mov
mov
mov
mov
das
aam
cmc
je
clc
lock
ret
add
fsts
mov
pop
dec
out
mov
cmc
inc
gs
and
xchg
cld
xchg
adc
movsb
out
push
pop
xchg
int
gs
sbbl
adc
xlat
aaa
std
fldenv
adc
pop
dec
cmp
sub
scas
incl
aad
lea
xor
mov
dec
rcr
out
add
sbb
pop
test
bound
aad
jae
add
shll
sbb
sub
mov
dec
mov
aam
adc
mov
mov
std
cmpsb
push
into
fisubrl
mov
ljmp
andl
pop
out
mov
je
jg
shrb
xor
ret
movsb
or
cld
mov
cmc
sbb
cmc
sti
cmp
sub
sub
xchg
out
pop
cli
das
scas
addl
orl
cmp
icebp
adc
in
std
sti
sbb
pop
aas
cmpsb
adc
inc
je
and
gs
ror
sub
mov
ljmp
and
xchg
aas
jo
mov
into
mov
mov
imul
jmp
mov
rep
jecxz
add
or
xor
add
push
adc
pop
lds
and
push
mov
push
adc
mov
fcompp
jmp
mov
or
imul
xor
fiadds
sbb
mov
lock
xor
cmp
xor
loop
test
fwait
xchg
mov
stc
lods
push
clc
pop
mov
push
or
inc
jae
leave
push
enter
or
orb
insl
cwtl
xchg
cs
push
sub
dec
fisttps
cmpl
jg
jmp
sbb
lea
in
pop
lods
pushf
dec
cmp
add
add
add
mov
sbb
cmp
cli
pop
loope
push
xchg
mov
into
call
std
je
sbb
jmp
push
hlt
inc
mov
fucomp
testl
push
inc
mov
les
out
xor
je
mov
rclb
fdiv
das
les
in
push
ret
sbb
mov
mov
push
lds
mov
lods
inc
es
lret
mov
mov
mov
dec
cmp
push
push
mov
fcomps
pop
and
jno
std
push
and
fldenv
fnsave
xchg
and
xlat
cli
lcall
dec
dec
fistpl
dec
aaa
pop
inc
cmpb
rcrl
push
movsb
adc
adc
repz
mov
xchg
pop
add
test
fucomip
push
fwait
inc
in
mov
popf
into
xchg
push
enter
jb
negl
dec
fwait
ljmp
repnz
mov
movl
enter
movsl
test
aam
in
cmp
std
repz
cs
jp
jae
inc
cwtl
int
cmp
dec
push
test
mov
push
inc
sbb
data16
jb
popf
cmp
loope
pusha
or
sub
dec
pop
mov
and
xchg
adcb
or
inc
rolb
dec
push
or
pop
fldenv
fisttpl
pushf
ds
xchg
mov
sbb
adc
mov
xchg
push
sbb
clc
movsb
cmc
pop
jbe
test
aam
jno
lcall
xor
loop
and
and
pop
and
mov
jg
jg
and
sub
fimull
das
adc
sbb
and
bnd
mov
xchg
push
lods
add
inc
out
movsb
daa
cmp
das
sar
adc
inc
ss
sub
fwait
inc
mov
int
addr16
cld
into
mov
cmp
xor
lcall
adc
xchg
cmp
or
push
adc
inc
xor
out
dec
inc
je
cmovp
in
ss
or
nop
adc
das
or
insl
pushf
pop
adc
jmp
or
scas
addr16
test
xchg
push
fcomp
pop
mov
cwtl
or
dec
pushf
xlat
push
shrl
rorl
call
cmpsb
test
div
shlb
scas
push
mov
mov
sti
in
inc
adc
cmp
dec
xchg
or
cmp
sub
sbb
pop
xchg
sub
clc
adc
inc
mov
mov
add
je
cmp
mov
dec
outsl
jns
or
and
dec
scas
xor
or
lret
and
hlt
fdivrl
ds
dec
jge
pop
mov
mov
inc
sbb
stos
loope
adc
jo
aaa
leave
lds
popf
and
adc
inc
fs
jp
mov
inc
shl
int
inc
scas
cmp
hlt
imul
outsb
es
pop
sub
dec
in
jne
jo
mov
dec
hlt
movsb
loope
stc
or
xor
imul
add
scas
pushf
imul
mov
adc
les
pop
xor
sub
insb
or
ret
cmc
and
mov
or
cltd
cmp
sub
add
outsl
cmp
pop
mov
add
xor
pop
cmpl
inc
adcb
aas
aam
fsts
add
xchg
cs
sub
xor
lea
cltd
es
sbb
lods
sbb
jb
cld
and
outsl
outsb
test
enter
fistpll
lahf
push
daa
xlat
jbe
pusha
shr
mov
inc
sub
mov
xchg
mov
cmpsb
xchg
mov
cmpb
jb
cmpsl
data16
push
loopne
push
test
push
ret
cmpsl
rclb
loopne
sbb
mov
fists
xor
test
hlt
outsl
cmp
sub
adc
in
icebp
mov
add
jne
cmp
sti
mov
test
adc
jmp
into
test
mov
or
xlat
sbb
or
ficoml
in
rorb
into
retw
leave
mov
pushl
aam
in
jbe
sbb
pop
mov
and
jl
lods
test
mov
push
xor
jl
push
adc
orb
sub
add
or
xorb
adc
xor
jno
sub
cwtl
fbstp
xchg
add
pop
enter
mov
inc
xor
nop
inc
shl
inc
cld
out
dec
mov
xlat
lret
les
cwtl
vpcmpeqb
ds
jnp
insb
push
sbb
mov
cmpsl
les
adc
jne
mov
imul
xchg
sarb
adc
in
loopne
aas
mov
sbb
out
arpl
bound
inc
or
push
jge
jo
dec
adc
pop
int
add
sbb
mov
data16
cltd
fidivs
inc
dec
dec
jns
dec
outsb
roll
or
sahf
pop
int
mov
les
xchg
fidivs
mov
cli
mov
xor
cmp
aaa
arpl
test
lds
adc
data16
add
es
inc
push
repz
push
mov
and
cmp
les
sub
enter
stos
fmulp
test
xchg
sahf
daa
ja
lret
jns
movsb
lret
cmp
ljmp
jne
outsb
dec
scas
push
mov
jge
ds
std
push
push
fwait
pop
fadds
xor
clc
mov
imul
cmp
bound
loope
mov
cmc
out
lock
lea
push
scas
push
jge
ja
xchg
outsb
shl
pop
in
add
rcrb
stos
mov
cmpsb
push
inc
jae
xlat
push
out
pop
sbb
push
and
aad
and
stos
mov
lds
cmp
sti
adc
inc
fwait
dec
lcall
stos
adc
fsubrs
loopne
pop
or
je
lock
adc
ret
leave
repz
jecxz
sub
cwtl
out
jo
lea
mov
sub
cmp
fnstenv
dec
dec
cmp
iret
adc
cmpsl
mov
aaa
into
xorl
mov
mov
shll
ja
adc
mov
stos
fcmovu
push
out
sbbb
push
cmp
cs
or
xchg
in
pop
dec
xchg
jmp
test
mov
mov
in
add
add
aaa
push
orl
push
and
or
dec
push
push
mov
and
cmp
aas
cmp
lcall
push
clc
or
mov
xor
jnp
nop
gs
push
xchg
pop
or
or
mov
inc
jne
notl
outsl
insl
cmp
jns
push
cmp
dec
fidivs
ffree
and
mov
les
loope
pop
sub
daa
mov
adcb
pop
dec
aam
loopne
add
jge
into
and
push
in
outsl
push
mov
jns
and
and
jne
out
jne
push
das
xor
push
jne
dec
pop
imul
insl
sub
jecxz
loopne
mov
cmp
pop
mov
ret
mov
shrb
js
ljmp
fwait
inc
xchg
pop
adc
aaa
cld
sti
xchg
cmc
adc
inc
dec
inc
loope
decb
aaa
or
mov
int3
in
pop
mov
stos
imul
mov
pusha
insb
mov
xchg
push
mov
mov
add
xchg
sbb
add
mov
pop
cs
adc
mov
outsb
sub
aad
sub
dec
push
fwait
or
lea
adc
daa
fucomip
sub
ja
and
enter
and
push
inc
lock
adc
xchg
add
test
cmovge
nop
pop
fisttpll
inc
and
icebp
outsl
jmp
jae
scas
fcmovnb
xor
aas
jno
lock
sbb
mov
xor
int3
add
push
sbb
inc
xchg
imul
adc
ret
rclb
cmp
cmp
lret
inc
mov
sbb
mov
pop
sbb
pop
mov
in
lods
imul
iret
sub
out
andl
inc
xor
insl
cmp
scas
es
in
adc
sub
fidivl
iret
ds
jl
rol
les
out
mov
dec
xor
sarl
lods
sbb
pop
ja
push
sysret
mov
test
outsl
dec
pop
dec
rcrb
xorb
pop
push
mov
test
pop
pop
icebp
imul
ss
jne
loop
or
data16
outsl
mov
stos
adc
shlb
pavgw
and
call
cmp
jp
fcomip
lods
dec
xor
adc
outsl
jbe
cs
lret
mov
xchg
mov
ja
mov
and
push
xchg
mov
mov
inc
js
rcrl
adc
cltd
jle
out
inc
adc
movsb
sub
push
jne
daa
nop
mov
imul
pushf
inc
dec
in
sahf
cmpsb
xor
sub
not
sarb
into
je
adc
push
inc
add
cmpsl
stos
jae
and
movl
sbbl
out
testl
je
lret
dec
in
outsl
jge
test
add
xor
or
sub
add
mov
mov
jb
mulb
fcmovbe
orb
insb
mov
lea
addb
cltd
mulb
aam
inc
jnp
inc
fadd
data16
add
scas
xchg
and
orl
or
arpl
dec
adc
in
xor
shll
adc
add
outsl
and
and
test
in
aaa
fwait
in
pop
andl
xchg
adc
xchg
and
cmp
jno
push
clc
jle
inc
jbe
jne
mov
and
out
aam
sahf
inc
xlat
push
xchg
jl
pop
jno
mov
mov
mov
and
jmp
pop
xchg
loopne
mov
mov
xor
adc
mov
filds
mov
test
out
and
push
jle
ret
inc
mov
insb
add
sbbl
push
outsb
cwtl
fwait
icebp
movsb
gs
leave
xor
setge
add
test
ret
dec
adc
pop
or
jo
dec
pop
mov
mov
gs
jecxz
aad
ljmp
mov
fbld
stos
sub
nop
mov
push
negl
xchg
mov
cmc
sar
xchg
lret
xchg
sbb
cmp
xchg
subps
push
cmp
lea
repnz
loope
jge
pushf
mov
out
dec
in
mov
in
psubb
fildl
push
jbe
outsb
dec
add
pushf
jnp
ror
jmp
subl
xor
adc
mov
sub
dec
outsb
mov
pop
xchg
push
ja
xchg
aas
push
adc
jb
jmp
cmpsl
mov
mov
ret
lods
sub
hlt
or
mov
and
or
xchg
icebp
fdiv
std
loop
outsl
add
xchg
test
fstl
std
fcomi
jl
jp
pop
stos
gs
imul
dec
in
and
das
and
call
call
or
xor
outsl
aad
in
out
or
icebp
jl
mov
decb
fcmovnb
pop
or
sub
cmp
mov
icebp
inc
inc
add
movsb
or
pushf
and
nop
in
outsl
mov
cltd
addr16
mov
in
jl
leave
xchg
aaa
xor
push
in
std
sbb
icebp
pop
stc
mov
push
icebp
fidivrs
in
sarb
jp
aam
jbe
or
loope
std
add
push
shrb
sub
mov
jmp
pop
and
cmpsl
pushw
sbb
cmp
cwtl
sarb
sub
push
mov
sub
outsl
adc
jae
lock
out
mov
mov
inc
jno
ja
xor
xchg
or
cmp
test
je
pusha
popa
mov
add
lahf
mov
push
loopne
hlt
dec
pop
sub
xor
inc
jbe
jb
aas
sub
out
arpl
repz
pop
or
ret
push
js
sub
lds
iret
dec
sub
fisubrs
or
ret
popf
sahf
jbe
insb
bswap
leave
jecxz
mov
fidivl
dec
cmp
ss
imul
gs
inc
sub
divl
sbb
xchg
daa
cmp
mov
mov
dec
sub
xchg
and
mov
xchg
push
jno
mov
pop
ja
and
xor
pop
lret
test
push
scas
jge
scas
adc
jmp
mov
sbb
mov
rolb
test
pop
ss
test
pushaw
jae
dec
repz
inc
movsl
xor
push
lods
or
insl
cli
dec
nop
outsl
test
sub
ja
sub
ljmp
push
push
mov
cmp
mov
dec
cmpb
notb
cmc
xchg
cmp
iret
addl
scas
xchg
mov
pop
jge
mov
shlb
pop
movsb
sub
cmc
insl
stos
cs
js
mov
cmp
pop
push
ljmp
pushf
lock
or
adc
es
popf
imul
rorb
faddl
mov
test
sahf
mov
loopne
ffree
pop
fs
push
xor
fs
cmp
cmpsb
scas
xor
push
mov
repz
aaa
jp
and
mov
mov
sbb
push
mov
xor
dec
mov
movsl
lahf
loope
add
popf
mov
and
pop
lods
push
test
mov
std
jg
add
shll
lock
sbb
std
pusha
push
inc
insl
mov
and
xchg
cmp
pushf
cmpsb
jb
xchg
push
inc
hlt
mov
fdivr
sbb
push
mov
pop
mov
lods
inc
mov
jnp
fcmovbe
mov
push
push
pop
sub
xchg
stos
or
pop
mov
and
aad
adc
jl
pop
xlat
push
jl
sbb
xchg
push
dec
push
mov
test
push
pusha
ljmp
xorl
sbb
mov
inc
lea
imul
pop
lcall
cmp
push
in
les
dec
pop
add
jae
xorl
js
inc
xchg
or
or
mov
shlb
cmp
sub
cmp
add
mov
xor
sub
ja
push
and
loopne
pop
sti
xchg
mov
clc
pop
inc
popf
xchg
sub
xor
add
cmpsl
add
je
cmpsb
or
stc
adcl
xlat
mov
mov
dec
mov
mov
mov
data16
mov
in
or
push
lods
cmp
sub
shr
std
lods
jp
or
adc
mov
xchg
testl
jg
xchg
push
mov
int3
ficompl
add
and
ljmp
lock
test
jle
movsl
mov
stos
xor
add
dec
adcb
mov
sbb
jl
pop
lret
popa
push
lds
xchg
ret
mov
ds
mov
pop
shrl
dec
ds
inc
mov
push
push
sub
sub
fsubp
jne
lahf
xchg
dec
push
jp
cwtl
js
inc
jg
dec
cli
lahf
fs
imul
pandn
push
cmp
cmp
movsb
mov
loope
ss
pop
test
jecxz
gs
pop
adc
xchg
lods
add
or
adc
lods
icebp
xchg
adc
and
or
arpl
jmp
ss
aad
pop
mov
fucomi
push
xchg
push
dec
pop
or
xchg
mov
mov
jne
call
test
mov
test
rcl
mov
iret
das
loop
add
clc
add
mov
dec
fsts
inc
mov
pusha
rcll
sbb
xor
mov
insl
outsb
fs
aaa
push
outsl
pop
out
imul
sbb
dec
pop
sbb
add
mov
inc
fnstenv
outsl
loop
jmp
pop
adc
push
cmp
decl
addr16
cli
mov
cmp
imul
mov
add
jmp
shrb
sub
gs
cwtl
scas
sub
sbb
jbe
aam
push
dec
daa
lcall
out
adc
aam
fisubs
fisubl
inc
mov
out
add
mov
sbb
lds
ud1
inc
push
repnz
inc
cmp
mov
insl
pop
pop
push
xchg
in
outsb
rol
dec
xchg
addb
shlb
mov
adc
push
and
dec
in
jnp
stos
and
pop
and
cmpsb
shrb
jge
jo
roll
dec
in
loop
inc
sarl
jnp
inc
je
add
shrl
dec
loope
and
loope
mov
xor
mov
imul
sbbl
hlt
or
and
inc
bound
xor
or
push
rcrl
dec
in
push
xlat
adc
add
xchg
add
jo
cmc
push
repnz
lea
sbb
cmpb
add
xchg
sbbl
inc
cwtl
aaa
pop
or
mov
loop
push
repz
xchg
jb
repz
pop
add
push
mov
das
sbb
xchg
rolb
int
mov
das
jle
popf
imul
loope
lcall
ljmp
add
roll
jae
in
std
gs
jb
dec
inc
inc
ss
push
icebp
es
jg
leave
loope
in
mov
mov
mov
pop
pop
sub
jl
jae
cmpl
lret
mov
into
push
xchg
decb
pop
sub
test
cwtl
pop
addr16
aas
add
cmc
cs
pop
adc
jns
imul
leave
and
fimull
or
jp
and
jne
mov
and
push
fisubrl
bnd
xchg
stc
xchg
mov
test
lret
mov
add
popa
daa
fsubs
cli
jl
dec
xchg
dec
jp
into
add
pop
bswap
pop
jg
xor
pop
push
test
adc
sub
and
mov
je
ljmp
sbb
or
or
push
mov
leave
xchg
in
cmp
cwtl
fstpt
insb
mov
xchg
push
add
outsb
cli
int3
addr16
out
test
pop
std
xchg
cs
xor
mov
aas
sub
cmpl
inc
test
xchg
test
jle
xchg
jbe
mov
icebp
imul
das
mov
arpl
mov
roll
adc
xor
inc
testl
aas
mov
and
sbb
pusha
add
jmp
add
mov
movsb
testl
xor
jae
push
sbb
mov
sub
push
test
or
mov
inc
inc
jnp
shlb
mov
loopne
dec
shll
xchg
rclb
movaps
addr16
out
cmpb
test
loop
ret
pop
xlat
popa
jl
scas
mov
pop
fcomps
out
add
xor
mov
or
add
sbb
arpl
cmp
leave
xchg
mov
mov
or
iret
rclb
add
jge
push
dec
and
xor
loop
fiadds
loopne
ret
xor
test
scas
sub
fnstcw
lods
mov
xor
push
pop
inc
iret
mov
pop
ret
fstpl
test
rcrb
xor
ficomps
mov
daa
add
insb
mov
out
add
into
push
adc
cmp
sub
add
cmpsl
pop
pop
test
sbb
dec
lods
add
and
push
mov
andb
jae
outsb
loopne
jle
sub
mov
xor
mov
mov
fwait
xor
daa
xchg
xchg
fcompl
into
cltd
in
aas
or
jb
out
cli
jne
cmpsb
cmp
pop
lret
adc
aad
mov
dec
xor
jo
add
jbe
xchg
repz
outsb
nop
xor
sbb
leave
testl
xor
mov
test
dec
jge
sub
adc
mov
sub
or
adc
mov
sub
jge
int
ds
mov
adc
je
cmp
mov
arpl
push
scas
rcl
sahf
fistps
jmp
and
scas
jo
inc
das
sub
daa
add
push
sub
cwtl
popl
mov
cmpsl
sbb
adc
adc
cmp
nop
xchg
adc
push
andb
push
mov
mov
sub
rcr
loope
inc
bound
fsubrl
inc
pop
ljmp
aam
int
pop
adc
bound
dec
enter
iret
push
pop
mov
mov
popf
inc
andb
enter
mov
mov
dec
fildll
lea
in
popa
adc
imul
in
int
fwait
loop
xor
jmp
push
xor
sbb
add
pop
repnz
xor
adc
rcrl
ja
or
dec
lea
lods
mov
fsubs
push
pop
lods
xor
repz
xor
subb
stos
jg
sbb
out
cltd
mov
mov
xor
gs
fs
jg
scas
pop
leave
mov
out
sbb
hlt
mov
mov
or
repz
mov
leave
jmp
lret
or
imul
aad
mov
out
lahf
add
sbb
gs
push
fucom
mov
fbld
in
icebp
adc
call
mov
pushl
mov
aam
mov
xlat
xchg
pop
les
inc
push
cli
cmp
int
adc
mov
sub
outsb
shlb
out
add
sbb
loopne
arpl
inc
pop
inc
fucomp
push
ljmp
fldenv
push
or
sbb
push
lock
icebp
inc
scas
cmpsb
outsl
movsl
pop
inc
inc
fsts
pop
es
mov
push
imul
mov
test
rcrl
mov
daa
sbb
out
mov
daa
push
sbb
mov
lret
pop
mov
add
cltd
stc
pop
shrl
ds
mov
push
cli
adc
mov
push
sub
sbb
jbe
and
push
mov
xchg
dec
ja
into
add
les
mov
imul
push
mov
fdivrl
je
dec
test
xchg
dec
pop
cmp
mov
popa
adcl
aaa
lock
cli
sbb
out
pusha
mov
cmp
into
add
stos
pushf
mov
or
xor
out
setg
jbe
ret
fdiv
aam
sbb
cmp
andl
mov
insb
negl
jge
sub
pop
push
shlb
xchg
je
sub
xor
in
and
mov
sub
fdivr
fmuls
les
mov
je
cmpsl
aad
jmp
cmpsb
or
sti
dec
mov
cmpsl
mov
xchg
mov
ljmp
sub
cmpsb
or
stos
out
stos
xlat
mov
jge
sbb
shrb
and
loop
mov
mov
insl
stos
insb
cmpsl
mov
fwait
cmpl
icebp
jl
sbb
xor
cmp
push
test
popa
sbb
repnz
out
jb
cmp
mov
mov
xchg
out
inc
in
dec
xchg
pop
adc
shll
pusha
adc
pop
dec
fdivl
add
nop
cmpsb
adc
jmp
or
loop
cmp
into
scas
or
cmp
pop
sub
mov
add
inc
out
inc
push
cmpsl
pop
xchg
xchg
push
loop
test
movsl
jmp
jg
push
orl
jmp
jno
aad
and
test
rol
mov
data16
aaa
jle
ljmp
jb
push
sbb
mov
mov
sub
mov
mov
dec
jge
lods
outsl
mov
pop
test
pop
jl
imul
xchg
cmp
imul
mov
in
pop
pop
adc
ljmp
dec
test
leave
add
inc
pushf
add
iret
push
sarb
mov
or
test
adc
xlat
mov
jp
adc
push
dec
ficoms
cwtl
pushf
dec
jne
mov
inc
jle
mov
mov
xchg
sub
movsl
sbbb
fst
adc
pop
fbld
and
outsl
xchg
leave
ja
mov
cli
gs
push
mov
ds
mov
div
xchg
popa
add
movsl
mov
movb
or
pcmpgtw
jbe
loop
jle
mov
xlat
sbb
sar
mov
lret
xchg
push
mov
and
mov
int3
xor
dec
add
lea
cmp
les
outsb
push
dec
out
mov
jns
cmpsb
adc
push
aas
cmp
cmp
insb
mov
or
xchg
xchg
jbe
adc
push
jb
add
xor
out
sahf
das
jecxz
sub
mov
cli
inc
push
push
cmp
jns
mov
sub
ds
xor
pop
pushf
mov
lahf
adc
call
or
mov
lds
orb
pop
cwtl
jl
scas
jb
push
mov
push
jl
pop
sub
inc
sti
loop
jmp
test
mov
adc
xchg
dec
lret
sub
push
flds
sub
jae
push
cmp
mov
ret
movsb
pop
sbb
push
aam
xchg
leave
cmpsl
sbb
in
pop
xor
into
mov
movsl
cwtl
jno
jmp
ficompl
mov
enter
push
test
loopne
push
mov
rorb
jle
leave
jbe
into
mov
fs
out
jo
fists
xchg
fsubrs
mov
mov
sbb
pop
mov
loop
loopne
inc
push
int3
rclb
pop
mov
xor
sti
xor
cmp
popf
dec
mov
dec
cmpl
ficompl
push
cs
xor
mov
outsb
xchg
pop
mov
in
bound
push
or
mov
in
lcall
test
sub
shll
lods
sbb
or
xor
es
fimuls
inc
xchg
xor
leave
cli
je
mov
testb
add
push
pop
jmp
cltd
fwait
jae
aaa
mov
jb
mov
mov
in
xor
dec
pushf
dec
xchg
and
sti
mov
mov
lock
in
sahf
fwait
or
subb
pusha
sbb
cld
dec
into
inc
xchg
out
xor
jl
mov
leave
je
xchg
mov
jno,pn
decl
xor
aam
xchg
push
cmpsb
scas
xchg
mov
data16
rcrb
push
cmc
sub
mov
jbe
push
xor
repz
imul
cmc
dec
mov
out
and
adc
mov
clc
iret
aas
dec
add
testb
cmp
sub
cmc
sbb
mov
xchg
pop
cmp
cmpsb
and
shl
mov
dec
out
xchg
adc
mov
jmp
xchg
jg
shlb
xchg
push
add
int3
mov
mov
mov
cmpsl
xor
loope
cltd
dec
std
icebp
or
dec
divb
out
cltd
inc
in
mov
out
stc
ret
xor
jmp
lea
dec
add
inc
gs
scas
lea
gs
dec
add
ja
add
sbb
mov
cmpl
cmp
push
scas
arpl
int3
outsl
sbb
inc
test
daa
out
pop
cmc
imul
loopne
test
cmp
mov
pop
mov
movl
scas
into
adc
mov
add
outsl
add
insl
movsb
sbb
test
add
jmp
sub
xorb
push
data16
movb
lea
adc
stos
cld
lret
lret
cmpsb
mov
cltd
push
enter
imul
sbb
sahf
pop
jp
inc
push
mov
imul
xchg
shufps
mov
subps
mov
mov
mov
aaa
movsl
jmp
mov
pusha
or
popf
sbb
xor
add
cld
xor
mov
sbb
xlat
adc
xchg
hlt
leave
mov
test
mov
int
and
jmp
xchg
xchg
pushf
xrelease
sub
mov
push
jl
inc
stos
xlat
stos
cmc
out
aam
mov
ds
xor
and
mov
push
jmp
jmp
cld
inc
in
mov
mov
out
fimull
insl
sub
xchg
pusha
pop
div
cmpsb
inc
pop
push
mov
cmp
les
mov
js
inc
adc
rorb
add
xor
or
mov
add
xor
pop
dec
roll
mov
adc
push
inc
mov
inc
pop
popf
xchg
out
push
cwtl
xchg
fcomps
cmpsb
jo
rolb
std
or
dec
sbb
popa
jo
iret
les
push
mov
cmpsb
neg
add
sub
push
mov
jmp
inc
adc
xchg
push
sahf
jg
mov
lcall
outsb
pop
cld
pop
js
add
xor
pop
jle
test
sbb
test
pop
cmp
mov
out
mov
mov
sub
xorl
pop
fcomi
sbb
int
jns
pop
jns
push
cltd
xor
or
imul
clc
repz
xor
insb
lea
rol
xchg
lahf
push
int3
jo
adc
test
popf
push
popa
rclb
les
fidivl
inc
rclb
jecxz
cmp
out
loope
mov
ja
sbb
pop
pop
add
inc
push
push
mov
mov
add
mov
inc
mov
pop
fdivp
mov
adc
jp
mov
fdivrl
and
mov
cmc
ret
jge
lret
jno
ret
add
inc
inc
dec
or
jg
in
jp
hlt
adc
icebp
popa
arpl
mov
out
call
popa
out
pop
fs
ret
fidivl
push
pusha
lods
pop
mov
and
xchg
outsb
sub
dec
push
inc
mov
bound
outsb
ds
jecxz
pop
push
or
call
scas
inc
mov
sbb
and
jno
fwait
arpl
add
pop
insb
sub
das
imul
hlt
adc
dec
popf
xchg
ja
shlb
mov
decl
movhps
flds
pop
daa
adc
push
mov
arpl
mov
test
jp
mov
add
dec
divl
jecxz
fmull
es
push
and
outsb
shll
daa
dec
add
insl
mov
mov
imul
orl
fsubr
cmpl
jecxz
enter
cmpsb
jmp
or
pop
dec
fdivl
lods
data16
aaa
inc
cmp
or
lcall
pushl
movsl
insb
popf
cmpsb
mov
imul
cltd
imul
shll
jbe
sub
xorl
cmc
mov
jnp
fsts
loop
mov
aam
outsb
mov
fmull
or
push
call
pop
sbb
jge
nop
jge
xor
lret
push
lret
dec
or
stos
dec
jno
xchg
push
lock
orl
pop
scas
bound
inc
jge
push
mov
dec
sbbb
subb
xor
lcall
imul
inc
xchg
xor
add
push
cmp
fld
movsl
or
loop
test
push
lods
mov
mov
stc
push
push
fmull
enter
stos
imul
int3
rol
cmpsb
dec
lock
sub
inc
iret
cmc
or
cmpsb
push
xchg
mov
push
cmpb
test
inc
pop
out
push
ljmp
in
push
or
lock
mov
sub
push
jo
stc
or
inc
push
push
inc
int
and
sarl
popa
jne
add
addr16
addr16
or
xor
pop
xor
push
pop
mull
and
xorl
data16
rcr
xorl
mov
push
sub
mov
lea
cltd
cmp
cmp
rcl
enter
push
mov
sbb
cs
adc
sbb
push
out
or
jno
xchg
cmp
sub
mov
add
xchg
dec
dec
and
inc
fsubl
loop
cmp
xor
arpl
clc
ljmp
jg
pop
fdivrl
lock
sbbl
js
int
mov
pushf
mov
notl
mov
enter
out
xchg
mov
andl
fmull
movsl
sub
lods
movsl
inc
mov
stos
jnp
lret
hlt
shlb
shrb
lock
scas
xchg
add
pop
dec
xchg
and
mov
fwait
sbb
pop
pop
jle
lds
cs
mov
imul
ds
mov
mov
jae
insb
movsl
sub
ret
push
jns
cwtl
ja
movsb
jbe
mov
aaa
rol
or
loopne
insb
mov
push
stos
push
into
xchg
xchg
sti
cmpsl
push
loopne
push
ss
into
dec
test
insl
daa
fdiv
add
aad
pop
adcb
clc
cs
pop
mov
inc
mov
adc
inc
js
cmp
aad
pop
out
int
movzwl
lea
xchg
das
fisubrl
aaa
adc
inc
es
push
movsl
icebp
jnp
mov
jne
jae
xor
xchg
and
fadd
mov
and
data16
in
imul
inc
call
mov
leave
cwtl
xchg
xor
enter
shrb
cmpsb
add
fsts
aam
mov
adc
xor
xchg
data16
sub
pushf
mov
sti
pop
shlb
and
jns
daa
xchg
into
out
cld
dec
sbb
sbbb
fst
mov
out
dec
in
push
xor
roll
mov
lret
lock
rcll
flds
mov
push
xor
ja
fildll
fisubrs
add
dec
decl
out
cmp
adc
mov
movb
lahf
outsl
aam
sbb
in
sbb
fmull
or
test
jle
add
cmpsl
cltd
mov
scas
stc
or
mov
out
xchg
das
out
pop
push
xchg
lods
dec
mov
pop
test
jb
xchg
fnstsw
inc
jno
jbe
pop
fbld
lods
cmpsl
testl
adc
or
jbe
nop
jle
leave
pop
dec
jge
sbb
out
insl
lock
rcr
enter
les
into
pop
push
dec
lret
sahf
ljmp
pop
jb
pop
mov
adc
aaa
pop
adc
shll
adc
push
jl
push
mov
mov
out
xchg
xchg
divl
popf
mov
cmpsl
mov
sbb
mov
mov
xorl
sbb
lds
add
push
shlb
cmp
dec
cmp
add
dec
leave
test
dec
xor
sub
call
adc
cmp
mov
inc
in
les
xchg
addr16
sbb
lret
push
push
out
sti
push
add
push
addr16
mov
sub
add
in
jle
jp
iret
mov
aad
add
sub
pop
insb
push
aam
sub
insb
and
pushl
pushf
sub
dec
insb
sbbb
mov
or
or
icebp
adc
adc
ret
adc
adc
mov
aas
dec
insl
pop
mov
movl
pop
pushf
inc
aas
fwait
push
pushf
xor
dec
xchg
bound
push
js
pop
xchg
and
movsb
arpl
or
int3
aas
pop
mov
mov
push
mov
pop
push
sub
adc
cltd
pop
push
in
cmp
push
icebp
or
and
sub
adc
xchg
xchg
or
loop
mov
andb
ljmp
push
xor
jmp
mov
sub
jns
mov
mov
jle
jo
mov
inc
popa
rorb
ret
dec
outsb
lret
xor
jbe
iret
mov
stc
dec
das
push
movsl
or
sbb
mov
mov
cmp
sub
repnz
sub
and
hlt
ret
adc
push
arpl
movsb
pop
aam
add
int
ds
scas
add
arpl
cmp
lret
test
aas
out
fsubs
pusha
insl
sub
xor
psubsb
cmp
call
or
mov
sub
fyl2xp1
pop
arpl
xchg
push
cmp
ds
mov
movsb
nop
gs
frstor
add
fmull
mov
lods
loop
jg
and
mov
push
repnz
sub
in
mov
sbb
push
movsb
mov
fldcw
enter
pushf
loopne
fsts
fists
sub
inc
rcrb
clc
dec
and
xchg
push
push
cmp
insb
adc
or
mov
mov
sti
xchg
enter
orl
lcall
rclb
or
pop
xchg
aam
imul
icebp
adc
ret
cmp
jae
lret
sub
xchg
pop
jo
into
repnz
push
xchg
test
ja
mov
faddp
sti
mov
into
pop
inc
xchg
idivl
adc
test
insb
cmpsb
out
mov
int
xor
call
lret
push
dec
jmp
test
push
pop
ja
inc
xlat
in
icebp
adc
pop
mov
pop
sub
xchg
shlb
mov
mov
or
jl
sub
out
jo
pop
pop
insl
and
and
sub
mov
movsl
stos
xchg
stos
sbb
sub
cmp
mov
mov
fucomp
push
mov
shrl
mov
xchg
fidivrs
enter
mov
jmp
test
inc
or
mov
sub
jg
sahf
push
jns
mov
fwait
mov
in
adc
mov
jmp
xchg
movb
push
aas
adc
add
xor
sti
fnsetpm(287
cwtl
aad
push
test
mov
arpl
test
lock
mov
fucomip
jae
inc
hlt
cmp
cmpsb
es
dec
add
je
movsl
shll
push
inc
fsts
lret
inc
inc
and
lds
cld
inc
sbb
call
loopne
adc
mov
mov
mov
mov
jnp
mov
test
xor
dec
dec
ret
xchg
es
icebp
mov
aam
mov
inc
scas
and
add
jl
sub
add
outsl
jbe
sbb
adc
mov
cmpsb
pop
sub
cmp
inc
xchg
and
sbb
or
or
jg
lds
sahf
xor
hlt
xchg
push
es
lret
cmp
xor
mov
addb
ret
ja
push
int
xor
ret
movsb
dec
push
pop
xlat
jae,pn
pop
cli
mov
rorl
ds
dec
maskmovq
aad
push
push
or
out
fs
and
inc
jae
dec
ljmp
mov
jb
jns
shlb
or
loopne
scas
mov
push
add
imul
daa
aas
cmp
adc
aas
adc
js
sub
movb
push
and
test
mov
sbb
cltd
sub
decl
insl
pop
mov
pop
jl
ficomps
push
out
lds
or
xchg
xchg
mov
pop
xchg
fs
pop
jmp
and
pop
sbb
dec
sbb
jnp
dec
fs
sbb
mov
inc
out
sbbl
jp
int3
mov
imul
out
adcb
sti
test
lahf
roll
dec
mov
sub
inc
lea
stos
sbb
sarl
or
ja
xchg
das
fistpll
cld
mov
ret
push
js
pop
mov
and
mov
shlb
or
xor
movsb
xchg
loop
xlat
add
dec
imul
inc
mov
in
lret
cmp
std
aas
mov
icebp
lea
leave
pop
sbb
mov
imul
dec
movsl
fptan
xchg
push
mov
mov
mov
adc
add
idivl
push
fstps
push
or
insl
lret
popf
sti
ds
gs
jmp
mov
xor
push
test
rol
je
in
int3
and
or
pop
mov
mov
dec
dec
adc
cld
popa
pop
outsb
push
mov
xor
pop
imul
push
dec
and
add
ljmp
movsb
inc
cmp
sub
test
mov
cmpsl
and
xor
xchg
int3
lds
pop
pop
push
test
adc
jb
mov
cwtl
inc
mov
out
lret
cs
out
fadd
aas
sub
jmp
jb
std
jecxz
mov
cmpsl
stos
leave
mov
xchg
dec
insl
je
cmp
mov
pop
div
jb
mov
pop
dec
push
rclb
adc
mov
push
sbb
out
cmpsl
mov
xchg
dec
mov
ficoms
or
mov
in
cwtl
in
rol
jo
aaa
scas
mov
cmp
hlt
mov
adc
pop
sub
push
pop
add
pop
add
aam
data16
inc
push
test
pop
inc
popl
or
into
mov
xchg
jo
sub
xchg
dec
mov
movsb
shll
mov
cmp
cld
mov
out
xorl
xchg
cmp
cmpsb
test
lahf
dec
sub
push
jae
xchg
push
loopne
dec
xchg
in
inc
js
and
mov
cld
dec
aad
mov
jmp
or
xor
xor
cwtl
into
sub
or
push
shrl
pop
out
pop
in
call
insb
dec
dec
imul
xor
sahf
sub
xor
shll
iret
lock
aaa
decl
rcrb
andb
xor
shll
js
push
jg
sarb
cmpsl
cld
xchg
push
cmp
mov
pop
lock
cwtl
hlt
pop
fnstenv
dec
fnsave
cmpb
jl
mov
in
sbb
imul
dec
test
ja
push
pop
loop
rdtsc
iret
pushf
and
xchg
and
fisttps
inc
fisubrl
mov
cli
es
pop
add
aas
mov
pop
daa
iret
inc
movsb
inc
insb
cmp
pop
fidivrs
xor
scas
in
cmp
and
cmp
xchg
and
jo
aas
cmc
and
fcoml
icebp
test
push
or
mov
sbb
or
push
icebp
sub
notl
dec
push
push
aas
push
mov
mov
testb
xchg
and
pop
inc
mov
ja
cmp
cmp
lods
push
jmp
sbbb
sbb
std
stos
sbb
sub
in
shlb
popf
add
test
sti
les
sbbl
cmp
add
mov
and
lods
mov
push
pop
sbb
lock
cmpsb
cmpsl
push
push
jmp
std
mov
jae
pop
rcrb
fnstenv
lods
xchg
sarl
lret
jo
out
and
pop
push
shrb
and
les
jg
clc
es
cld
xchg
inc
fwait
mov
push
hlt
icebp
xor
jge
orb
xor
push
addr16
into
cmp
mov
sub
popf
xor
pop
jg
mov
es
pop
dec
sbb
mov
cmp
jno
xchg
dec
aad
dec
mov
dec
test
cmp
push
enter
xchg
ret
mov
imul
outsl
mov
or
shrb
sub
stc
icebp
cmp
out
sub
mov
pushf
lret
add
fs
jbe
mov
dec
stc
mov
fisttpl
jg
das
pop
add
xchg
in
pop
pop
adc
sti
dec
sbb
jne
arpl
mov
inc
jg
movsb
aaa
xor
mov
dec
mov
nop
jge
mov
out
cmp
adc
or
pop
inc
jo
pop
pop
lds
test
xchg
inc
jb
lea
mov
jp
std
aam
pusha
fimull
cmp
stos
push
mov
xchg
or
loop
lods
in
add
in
sub
fisttpl
fwait
cmp
test
add
inc
inc
fsubrl
bound
mov
push
fistpll
sub
fldenv
gs
out
jg
mov
mov
lcall
lods
inc
ret
ret
xor
push
ss
push
adc
sarb
dec
insb
adc
push
xchg
aam
inc
popf
jb
fwait
ss
xchg
cltd
or
push
out
dec
rclb
dec
in
lock
fstpl
imul
pop
and
mov
mov
hlt
jg
mov
inc
inc
sub
clc
cmp
jns
jecxz
call
jg
nop
shr
fmuls
pop
push
rolb
push
mov
sbb
jb
xor
in
fiadds
sbb
dec
sbb
push
es
or
notb
cmove
push
paddw
adc
mov
repz
mov
aam
xchg
ror
and
inc
jb
push
xor
cmpsb
addr16
jge
int
lds
jle
adc
adc
xor
inc
imul
mov
movsb
inc
xchg
xor
mov
and
xlat
lcall
scas
sub
fcmovu
jl
ret
ljmp
inc
aam
into
or
jne
ret
inc
fistps
inc
mov
mov
xchg
push
enter
repz
inc
lock
adc
sub
in
xchg
ret
jp
imul
mov
movsl
push
xlat
inc
add
repz
insl
jo
lahf
adc
add
mov
movl
adc
jle
xchg
loop
fs
mov
mov
cwtl
pushf
loopne
xchg
mov
in
mov
sbb
imul
fmulp
jmp
aas
dec
call
jb
jo
pop
sub
or
icebp
je
jae
add
jnp
jnp
xchg
or
cmp
in
mov
mov
push
push
rorl
in
sub
dec
mov
into
sub
mov
or
loope
cld
sub
aad
scas
and
push
inc
pusha
fcompl
jae
or
mov
xchg
repz
inc
leave
out
data16
ljmp
repz
mov
mov
pop
mov
mov
adcb
or
je
cmp
lea
dec
out
sbb
and
fisttpll
incl
sti
inc
jb
fcom
pusha
scas
or
fwait
jmp
sarl
test
dec
mov
into
cmp
xchg
sub
push
push
inc
xor
push
push
mov
sbb
sahf
pushf
cld
std
sub
xlat
cltd
mov
daa
inc
stos
or
inc
cld
call
data16
dec
mov
ret
pop
sbb
arpl
dec
lret
fidivs
jg
pop
add
jae
push
movsl
jp
push
insb
fwait
sub
mov
fwait
ja
int3
mov
call
icebp
xchg
cli
adc
push
pop
cwtl
xlat
jp
and
inc
cmc
or
fs
pop
cmpsl
hlt
aas
add
xchg
and
pop
push
push
rol
cmp
std
xchg
dec
lret
mov
test
cmp
inc
jnp
inc
ret
aas
cmp
insl
xor
mov
icebp
mov
movb
test
push
xorb
sub
sbb
jns
dec
pop
das
repz
jl
lds
int3
outsl
pop
popa
sbb
xor
scas
emms
icebp
inc
xor
inc
lea
std
icebp
inc
popa
xchg
and
mov
jge
call
jge
cmpsl
bnd
xchg
mov
ss
ds
imul
push
pop
jmp
repz
aad
fbstp
insl
repnz
dec
mov
rcl
popf
mov
test
mov
sahf
sbb
cmpsl
push
or
push
cli
sbb
lods
mov
cs
stos
in
pop
mov
push
aas
jge
fs
sti
test
mov
testb
into
mov
sub
sbbl
fsubs
addr16
call
pusha
fs
jmp
xchg
jb
lcall
dec
fidivs
add
cmp
inc
outsb
xchg
ss
ja
orl
push
and
mov
scas
sub
pop
out
mov
int3
sbb
mov
mov
push
or
out
push
call
das
sti
lret
xorb
push
add
test
cwtl
xchg
cmp
xchg
or
push
or
push
in
lcall
bound
mov
fildll
xor
lea
rol
sub
mov
fwait
inc
insb
mov
xchg
mov
or
scas
or
adc
jns
data16
xlat
test
into
orl
movsl
sub
dec
xor
xchg
sub
cld
sub
out
jg
sbb
enter
addl
cwtl
out
cmpsb
pop
out
sar
in
ds
adc
mov
out
test
lds
lods
iret
ret
in
sarl
sbb
sub
add
loope
mov
andl
out
test
in
mov
cltd
repz
in
xlat
cmp
sbb
pop
in
and
mov
pop
orl
and
mov
adc
dec
clc
lds
jo,pn
lods
and
cmpsl
std
pmaxub
dec
dec
lds
fildll
inc
lahf
pavgw
movsl
xor
inc
movsb
cli
negb
ljmp
push
xchg
dec
loopne
fsubrs
cmp
out
cmp
jne
ret
lcall
enter
icebp
stos
call
or
nop
cmpsb
call
jge
add
inc
fdiv
jnp
jmp
aad
int3
cmp
mov
lock
jge
xchg
inc
out
add
or
cli
int
js
shr
xor
mov
dec
test
not
lds
lock
jle
nop
ret
xor
movsl
daa
inc
loop
iret
call
add
sti
nop
addb
pmovmskb
dec
lahf
cwtl
xchg
out
and
mov
fimull
stc
sub
es
daa
add
addb
call
xchg
aaa
pop
hlt
fimull
pop
mov
je
movsl
loopne
data16
lods
les
push
insl
xor
cmp
stos
sbb
out
pop
pop
or
dec
icebp
in
sahf
mov
lret
jl
jne
popa
sahf
cmp
insl
sarb
mov
pmulhw
or
jbe
subl
sbbb
outsl
xor
push
cmp
xor
mov
xchg
mov
jge
adc
dec
push
loop
mov
test
add
mov
stc
rclb
lcall
sbbl
ret
and
in
add
jle
aam
ret
mov
sub
cli
test
scas
sarl
push
pushf
pop
xor
mov
test
xchg
pushf
push
mov
mov
inc
out
ret
sub
dec
mov
add
mov
inc
mov
arpl
shlb
cmpsl
jb
xorl
sub
fcoms
sbb
mov
ret
cld
pop
inc
imul
and
dec
loope
xchg
push
and
xchg
inc
sbb
insb
and
pop
xchg
ret
add
loope
popf
out
xchg
cltd
test
movsl
int3
add
repnz
cwtl
repnz
aas
pop
enter
mov
repz
cmp
out
out
jo
inc
loopne
or
mov
push
mov
add
rcll
icebp
mov
xchg
lret
sbb
pop
je
int3
cmp
pop
ret
out
imull
insl
shl
call
sub
subl
push
test
ficoml
lock
sbb
dec
imul
mov
sahf
std
mov
push
sbb
mov
cmp
mov
cmp
call
mov
ds
push
or
sbbb
insb
test
ss
push
sahf
jge
push
cmpl
fistpll
mov
or
iret
pop
icebp
or
outsl
pop
test
sub
arpl
gs
in
outsb
daa
push
xor
push
out
sbb
dec
ja
jae
stos
das
pop
je
pop
xchg
sub
cmp
xchg
std
xor
aas
orl
rcrl
mul
pushl
test
cmp
cmp
leave
or
inc
shrl
jg
lahf
lret
xor
push
outsl
aaa
mov
loope
repz
cli
das
fprem1
push
jbe
mov
popf
dec
pop
out
push
pop
xchg
rcr
movsb
inc
stc
jne
aaa
pop
sti
movsb
jnp
hlt
sbb
jns
pop
int3
cmpsl
xor
sarl
pop
adc
rcr
mov
add
push
add
dec
add
xchg
subl
sub
int
dec
sbb
cmp
push
or
jmp
out
insb
or
xchg
and
test
int3
push
or
dec
int
sub
iret
enter
sarb
imul
nop
nop
cmp
dec
bound
bound
or
stos
incb
enter
xchg
imul
cwtl
mov
cwtl
ja
in
sub
fwait
mov
mov
out
dec
sti
aas
push
shll
sub
stc
xorl
sbb
pushf
xor
rorl
dec
in
test
rorl
jno
or
jne
les
or
cmp
je
pop
lret
adc
mov
clc
sbb
scas
insb
stc
addl
and
mov
jo
lahf
clc
sahf
dec
cli
inc
cltd
sbb
jo
xor
gs
jmp
xchg
rcrl
test
in
in
lret
cmp
jecxz
or
mov
inc
sub
and
inc
xchg
cs
push
sahf
lret
adc
inc
xor
jne
jne
ss
lcall
rolb
pop
jne
pushf
icebp
cmpsl
iret
lds
dec
stos
mov
pusha
lds
mov
test
or
pop
fcoms
or
in
loop
lret
pop
push
cmc
cmpsl
and
cld
icebp
xchg
and
fcompp
xchg
jnp
or
xchg
jne
cmp
mov
mov
rol
enter
xchg
xor
out
pop
pop
test
sub
mov
pop
mov
cmpsb
loopne
cmpsb
imul
ljmp
pop
fsts
pop
add
push
int3
push
mov
icebp
jl
popf
sar
sbb
pop
jl
xchg
mov
into
inc
jo
mov
add
popa
mov
out
push
popa
mov
push
jnp
mov
add
arpl
enter
rcl
std
sub
loopne
js
mov
cmp
sbb
in
dec
stos
mov
xchg
int3
cs
and
inc
add
mulb
dec
jecxz
pop
pop
mov
mov
mov
or
push
sbb
add
dec
lahf
sbb
cmp
inc
xchg
outsl
xor
add
test
mov
lds
dec
call
inc
mov
int
ljmp
repz
iret
incl
add
out
imull
fs
cld
fidivrl
inc
pop
fstpl
bound
push
mov
shl
mov
cmp
out
mov
hlt
mov
xor
push
pop
lret
or
dec
in
fdivrp
xchg
xor
dec
adc
rorl
dec
mov
mov
lret
dec
mov
popa
leave
cmp
fldenv
scas
xor
mov
pusha
mov
sbb
fmulp
xchg
das
mov
dec
ja
cmp
loopne
pop
mov
push
scas
pushaw
aad
mov
gs
adc
mov
fs
and
and
loopne
add
popa
into
push
mov
sub
leave
mov
and
cmp
out
push
push
icebp
mov
nop
inc
js
add
frstor
jns
mov
ss
add
stos
mov
xor
mov
in
inc
fldenv
jecxz
jae
imul
jp
adc
push
imul
mov
imul
cmp
mov
adc
add
inc
dec
add
and
and
movsl
mov
cltd
add
mov
mov
lods
pop
stos
outsl
adc
aad
incb
push
or
mov
push
cmp
fsub
jae
xor
push
repz
mov
sub
and
rorb
int
call
iret
frstor
cmpsb
adc
xchg
or
inc
xchg
pop
jo
sub
ss
inc
sub
xor
fistl
cmc
or
data16
jne
and
bsf
adcl
cmpsb
push
lahf
dec
daa
scas
or
sub
sub
push
or
jne
add
lret
call
mov
xchg
icebp
clc
popl
push
adcb
rclb
jno
inc
in
fwait
mov
test
push
fidivs
int
fisttpl
rclb
clc
inc
push
jb
scas
jmp
cmpl
push
mov
repz
int
pop
sub
cli
sub
mov
fs
daa
das
mov
mov
movb
mov
push
push
or
xor
cld
inc
test
adc
pop
mov
rorl
mov
enter
xor
adc
mov
scas
data16
push
test
mov
les
std
and
inc
jmp
shld
add
jmp
in
add
jge
nop
dec
lahf
ljmp
in
push
fwait
movsl
sub
fcomps
aaa
stc
push
dec
in
stos
lds
movsl
jns
test
ljmp
std
sar
iret
testl
loop
lldt
popf
inc
jmp
and
fnsave
dec
jp
inc
xchg
mov
cmp
xlat
rorl
mov
out
push
push
lea
das
pop
sub
clc
loopne
inc
fisttpl
adc
nop
pop
std
jmp
pusha
fsts
popa
rcrb
or
mov
stos
fs
scas
add
mov
movsl
cwtl
js
aam
out
mov
out
sti
lahf
subl
xor
push
push
pop
js
push
and
test
mov
ret
ds
push
adc
lret
mov
jmp
mov
xchg
fimuls
mov
scas
je
adc
inc
and
xor
repz
pop
sbb
in
clc
inc
jo
int
hlt
push
cltd
data16
cmpl
jge
divl
sbb
mov
and
pushf
ret
cmpsb
adc
mov
sub
testb
pop
mov
lret
lods
jne
xchg
ljmp
push
addr16
sti
in
push
jo
jnp
idivb
leave
push
aas
mov
aad
and
or
jnp
and
clc
ljmp
adc
idivb
cmp
push
in
adc
mov
cmp
cmp
fisubrl
fsubs
xchg
adcb
sbb
and
andl
test
inc
and
dec
pop
popf
xchg
add
cmc
sbb
lret
sti
sub
xor
inc
in
mov
xor
push
and
das
push
lods
repnz
dec
mov
out
popf
jnp
jle
hlt
lret
mov
mov
pop
pop
cmp
dec
lret
imul
movsb
mov
lods
inc
pop
mov
mov
xor
sub
mov
xchg
jl
inc
and
push
ret
imul
lods
mov
sbb
icebp
jp
sub
rcrb
aad
clc
out
dec
ds
into
and
inc
fwait
lahf
lcall
pop
fdivs
xchg
adc
inc
sub
test
xchg
and
stc
enter
shll
push
dec
inc
pop
push
test
pushf
into
or
cmp
push
repz
insb
std
or
mov
inc
mov
aam
mov
stos
sbb
pop
push
inc
int
or
cmp
cltd
pop
mov
xlat
dec
sarb
fisubl
repnz
push
push
and
push
arpl
lret
scas
cmp
sub
mov
adc
jle
jg
ds
sahf
mov
out
aaa
inc
mov
or
jnp
dec
aas
mov
dec
lock
add
cmove
xchg
repz
lcall
mov
or
mov
ret
jae
mov
xchg
mov
fwait
inc
rcrl
sbb
aad
lahf
pop
inc
loope
movsl
mov
pop
leave
imul
fsubrl
jmp
hlt
xor
cmpl
sbb
or
dec
mov
jmp
xchg
add
xchg
pop
arpl
push
addr16
mov
xchg
dec
cwtl
ja
jle
roll
adc
dec
int3
cwtl
inc
inc
mov
lcall
dec
adc
adc
daa
fwait
stos
ds
fstpt
mov
cmpsb
repz
inc
loop
push
jl
pop
mov
inc
fimull
lret
adc
jno
in
insl
out
sti
insl
dec
int
fmuls
fstpl
imul
fwait
and
pop
jo
stos
and
gs
sub
pop
fnstsw
adc
mov
xchg
js
sbb
pusha
push
adc
icebp
add
and
inc
mov
mov
mov
loopne
push
scas
andl
sbb
pop
mov
fidivrs
fcoms
rcll
lahf
xchg
add
mov
out
stc
pop
sub
mov
xor
jl
bound
shll
jae
enter
lods
cmp
roll
dec
inc
adc
jbe
es
jno
rorb
xchg
fisubl
jb,pn
in
mov
and
push
cmp
xchg
dec
xchg
and
adc
std
mov
loopne
sbb
xlat
mov
mov
cmpsl
cmc
ja
inc
jbe
cmp
movsl
ljmp
xor
hlt
out
stos
mov
cmp
or
hlt
pop
mov
jg
scas
adc
scas
jbe
adc
outsb
xchg
push
pop
dec
cmp
orb
xor
mov
insb
or
clc
and
jb
mov
lods
filds
sbb
pop
imul
sub
jg
aaa
mov
or
inc
pop
inc
inc
fs
out
mov
stc
mov
stos
cmp
iret
or
lcall
scas
ret
mov
dec
cmp
cmpl
mov
add
jge
rorl
pushf
sbb
dec
pop
push
pop
xor
sahf
mov
xor
cmpsb
dec
in
sub
cwtl
mov
nop
cs
adc
sbb
push
or
popa
mov
mov
dec
int
fisttpl
jae
scas
shll
inc
dec
and
popf
and
push
clc
push
or
ds
das
mov
lods
loopne
push
pop
sbb
jge
jns
dec
rorb
faddl
enter
pop
out
sub
fwait
popf
or
lock
movsb
sub
or
ret
push
fildll
stos
fcmovnu
mov
xchg
push
mov
jno
xchg
sbb
xchg
scas
test
sahf
push
fsubrs
lds
test
testb
cli
cmp
push
lock
mov
mov
add
xor
repz
bound
fcoml
icebp
adc
cli
mov
mov
jle
xor
popa
movsb
cmp
and
mov
jno
fld
jo
xchg
sahf
xor
mov
imul
fidivl
shl
stos
mov
pushf
mov
in
int3
fs
xchg
sarl
cmp
daa
and
push
enter
xchg
int3
test
aas
adc
inc
movsl
push
adc
cmp
aam
mov
out
mov
out
adc
or
and
clc
mov
sub
pmuludq
cltd
sbb
mov
bswap
cmp
out
inc
int
cs
dec
sbb
scas
mov
or
call
fdivp
xor
enter
aas
fnstsw
stos
cmp
cmp
xor
icebp
mov
mov
cmp
in
ret
push
add
int
ss
dec
cld
in
call
adc
mov
movsb
pushf
push
pop
lret
ret
jp
mov
sub
les
sub
mov
dec
cs
and
js
pop
arpl
and
xchg
jg
mov
mov
inc
mov
in
int3
int3
pushf
push
icebp
cltd
mov
jo
scas
outsl
bound
inc
and
mov
cmp
jbe
mov
mov
dec
sti
xor
sbb
lea
dec
dec
pushf
sub
cltd
cmp
pop
jle
sbb
out
cmc
dec
sbb
add
sarb
mov
fisttps
sbb
push
and
je
sub
jge
inc
out
jle
scas
stos
cmp
int3
addr16
iret
push
fmul
outsb
and
mov
mov
sti
pushf
mov
push
std
test
xlat
sbbl
ror
lahf
out
aad
xchg
dec
sbb
push
or
cmp
sub
mov
or
loopne
daa
mov
pop
das
pop
sbb
ljmp
xchg
negb
push
mov
in
cltd
xchg
mov
and
or
das
mov
pop
lea
and
xchg
pop
push
adcl
testl
xchg
les
pop
and
xchg
pop
jae
mov
int
gs
push
xor
or
mov
mov
cld
sbb
shrb
cli
popa
adc
nop
jle
lcall
mov
add
mov
push
hlt
or
jg
movsl
xchg
into
mov
ret
in
adc
and
std
dec
jne
fstpt
ja
fs
fists
stos
xlat
sbb
dec
adc
aas
mov
insb
scas
rcrb
out
repnz
ds
jp
stos
jle
jmp
and
js
clc
or
xchg
add
inc
mov
push
jl
outsl
sub
or
pusha
jne
dec
hlt
or
loop
test
inc
and
js
mov
dec
lea
or
push
outsl
pop
cmp
popa
add
lcall
xchg
hlt
jno
mov
mov
dec
pop
popf
push
or
cs
xchg
mov
imul
lret
and
repz
xor
movsb
pop
in
repnz
gs
inc
mulb
or
mov
xor
adc
push
mov
cmp
adc
es
fmul
jl
fcmovnb
fsubr
fbld
jmp
popf
pop
mov
pop
and
cltd
pusha
cmc
add
imull
mov
out
in
push
and
mov
mov
jg
mov
ja
popf
pop
dec
cmp
sub
std
sbbb
ds
jne
out
mov
push
lods
lret
ret
mov
dec
xchg
adc
aam
push
lods
add
pop
push
jno
sahf
int
push
jl
scas
hlt
stos
in
test
std
in
mov
hlt
lcall
outsl
mov
jne
inc
mov
into
mov
mov
mov
loope
lods
jge
pop
cmp
push
fistps
in
push
stos
mov
andl
in
sbb
mov
or
sbb
pop
inc
add
cltd
adc
repz
and
stc
xchg
addr16
lea
out
loopne
mov
icebp
call
outsl
cs
sbb
int
enter
lret
push
ret
imul
movsb
mov
nop
jbe
andl
dec
pop
pop
inc
sub
iret
push
mov
test
or
addb
mov
outsl
negl
notl
cmp
pushf
idivl
pop
mov
mov
mov
or
loopne
gs
mov
mov
mov
fs
ds
pop
fcompl
cld
cmp
jl
fwait
inc
ret
pop
shl
cmp
xchg
leave
adc
cmp
xchg
fisttps
add
jp
data16
rcll
call
popa
in
nop
push
test
push
and
call
mov
iret
lret
and
dec
add
inc
pop
sbb
in
pushf
lahf
cmp
cmpl
into
out
icebp
xchg
mov
stos
mov
xchg
fwait
cld
sub
push
and
mov
dec
add
fisttpl
mov
aaa
jmp
cwtl
dec
pop
or
pop
outsl
jb
jno
inc
out
popf
xchg
imul
rolb
stos
fmul
insb
mov
int
test
cli
aaa
das
ficompl
call
pop
mov
jl
int
ds
xchg
rcrl
orb
mov
stc
pushf
push
scas
inc
jge
jno
dec
sub
popa
aas
jle
add
popf
cmp
jo
loope
push
daa
mov
adc
data16
jl
mov
out
mov
add
lods
pop
or
jbe
ds
pop
out
add
sti
ret
aam
in
insl
stos
mov
mov
inc
loope
cmp
imull
inc
hlt
scas
or
lret
mov
arpl
dec
cmpsb
loop
push
fsubrs
push
leave
dec
adc
or
lea
cmp
lods
pop
mov
xor
adc
or
push
lock
fisubl
xor
mov
mov
imul
xor
jmp
insl
cmpb
fmulp
dec
jo
loopne
aam
into
scas
mov
adc
fcomip
les
jg
call
test
mov
cmc
jb
mov
bswap
aaa
pop
mov
pop
push
mulb
push
pop
das
cmp
popf
push
lock
mov
sarb
out
xlat
ret
movsb
in
into
in
sub
ss
mov
adc
test
or
imul
das
ret
lcall
cmp
movsl
aaa
push
and
ror
stc
jge
mov
add
cld
pop
mov
dec
aas
sub
adc
pop
ror
sub
fcmovne
inc
cmp
or
sbb
shrb
fs
mov
cltd
and
push
std
es
rclb
test
loop
cmpsb
ret
xlat
ljmp
mov
pushf
inc
out
es
cmp
and
clc
into
dec
loopne
push
push
and
mov
aas
push
lea
push
mov
mul
les
cmc
les
jo
dec
push
sbb
lcall
xor
data16
repz
and
bound
andb
int
enter
mov
xor
sub
pop
add
scas
mov
jl
mov
ss
sbb
icebp
cmp
das
xchg
jb
andb
sbbb
pop
xor
pop
jne
sbb
adc
cli
xor
add
dec
mov
out
inc
adc
cmpsb
pop
push
imul
lods
outsl
add
stos
stos
imul
repz
jb
xor
sbb
jae
js
aam
and
push
sub
jmp
pop
push
stc
sti
mov
rclb
loop
insb
lcall
fbstp
pushf
leave
mov
mov
and
cs
inc
inc
jns
out
mov
add
faddl
push
int
xchg
jge
sbb
pushf
xchg
jnp
ret
loopne
dec
fists
fcomip
outsb
mov
dec
test
je
aaa
mov
cmp
iret
adc
jnp
sub
ja
adc
int3
cmp
mul
jmp
pop
mov
adc
jb
cltd
adc
pop
xor
sbb
add
loop
push
movsb
and
repz
add
mov
cmpl
add
xlat
mov
lret
adc
push
mov
and
sbb
mov
lea
mov
sub
pop
mov
add
scas
fwait
and
jge
xchg
cli
jmp
sti
or
mov
cltd
jo
test
rclb
xlat
xchg
aaa
mov
cmp
gs
push
lret
mov
jno
xchg
mov
dec
addb
mov
cwtl
mov
mov
addl
std
pop
loop
add
mov
fcmovne
sub
pop
xor
popa
mov
iret
or
inc
nop
out
fimuls
out
dec
dec
scas
or
xor
push
jno
enter
frstor
ror
sbb
or
pop
xchg
and
mov
jecxz
mov
inc
stos
shlb
sbb
roll
gs
xor
cmp
test
divb
cmc
push
inc
fildl
push
movsb
addb
shl
mov
inc
jl
push
into
pop
jae
push
xchg
jo
or
das
mov
scas
pop
pop
jmp
jmp
iret
push
fcmovne
mov
ss
pop
cmp
out
jle
lret
mov
scas
sbb
push
in
mov
lret
xor
es
cs
test
into
pop
mov
into
and
std
sbb
sbb
in
mov
test
sub
inc
sub
addb
ds
lret
pushf
dec
pushf
xlat
add
clc
mov
mov
out
data16
and
sbb
fdiv
push
scas
mov
cs
inc
sbb
insb
add
repnz
fcmove
fucomp
dec
loop
mov
adc
pop
inc
lret
daa
jbe
mov
out
js
or
xor
pop
test
imul
add
pop
inc
xchg
dec
addr16
test
xchg
cli
add
aas
adc
sbbb
popf
pop
jge
aam
mov
inc
sti
js
js
lods
cmpsl
pop
add
jp
ja
inc
icebp
ljmp
test
cmp
popa
push
mov
cld
mov
loope
xlat
push
in
or
insl
add
mov
cwtl
ds
adc
imulb
clc
or
pop
xchg
scas
popl
fsubrl
adc
data16
fnstcw
and
jp
jmp
jg
scas
cmpsl
mov
cwtl
xchg
and
out
call
mov
roll
aad
das
pop
jge
sub
dec
and
mov
rorl
and
sub
pop
cmp
dec
stos
mov
pop
push
in
test
addl
push
sbb
lret
xor
xchg
pop
bound
roll
jno
jnp
fildl
sbb
lret
mov
adc
pop
lahf
sub
pop
mov
aaa
mov
aad
aas
mov
adc
adc
xor
ljmp
cli
jbe
dec
pop
mov
cmp
pop
jmp
adc
inc
jge
imul
jmp
icebp
dec
aaa
in
and
fldcw
jge
stos
rorb
cmp
fidivl
scas
testb
ss
push
sbb
scas
sbb
lret
sbb
rcl
xor
jae
into
scas
inc
pop
es
shlb
shlb
jmp
fstps
out
das
fidivs
and
je
dec
xlat
cmp
sub
ljmp
sahf
dec
dec
xchg
xchg
mov
test
jne
lock
lock
xor
pop
pop
or
ja
test
imul
shll
clc
std
sbb
sbb
xchg
push
out
and
icebp
pop
sti
into
ficoms
in
fs
push
fsubs
mov
ss
cmpsl
dec
lock
push
push
xchg
xlat
jbe
pop
ja
incb
or
adc
repnz
fs
shl
and
pop
dec
mov
addr16
std
adc
imul
data16
fcomps
mov
push
sbb
iret
sbb
cld
orb
adc
adc
daa
mov
pop
and
popf
sub
adc
ret
xchg
jmp
scas
int3
inc
xor
ret
inc
sub
lock
cmp
cmp
in
cmpsl
pop
int3
mov
cmp
jae
test
incl
push
cmc
pop
out
pop
repz
test
mov
enter
sbb
fcmovu
inc
mov
pop
sbb
inc
xchg
xlat
mov
mov
adc
xchg
ljmp
scas
mov
adc
add
rcl
cmc
mov
in
fadds
gs
stos
out
shll
gs
sub
xchg
and
nop
mov
in
es
mov
adc
pusha
sub
push
ds
sti
shl
int3
jge
scas
or
outsb
dec
or
or
sub
add
add
insl
sbb
mov
outsl
lret
test
pop
outsb
fisubrl
repnz
jg
inc
adc
and
cmp
dec
std
push
aas
stos
xor
cltd
shll
dec
fnsave
pop
push
shlb
push
loopne
test
jo
in
mov
lock
dec
sbb
add
mov
mov
shll
out
aas
cs
repnz
push
popa
negl
ja
xchg
cmp
jbe
xchg
lahf
mov
outsl
lea
inc
pop
xor
and
jg
sarl
and
fwait
dec
adc
push
lock
in
push
sti
xlat
popf
rcrb
jle
imul
cmc
popa
pop
fcomps
push
cli
push
or
icebp
push
pop
add
repnz
test
insl
bnd
mov
sub
add
xlat
cli
fs
pop
ja
fs
icebp
sbb
int3
fisttpll
inc
adc
xchg
mov
lahf
lahf
add
vmwrite
lcall
xor
dec
fldenv
into
xchg
bound
push
ljmp
jb
push
popl
sub
fisubs
push
scas
lods
iret
add
leave
pop
daa
in
push
xlat
and
dec
dec
xchg
enter
lret
pop
pop
mov
sahf
loopne
adc
adc
enter
ret
cmpsl
push
lea
in
or
in
rorl
xor
jae
cmc
rcl
dec
add
ds
addr16
mov
inc
adc
pop
repnz
movsb
xor
loopne
push
jecxz
adcl
inc
sar
jbe
lea
inc
test
adc
xor
add
add
fidivrs
push
fadds
aad
adc
cmp
aam
push
jp
pop
lea
pop
jp
push
inc
sub
cli
xorl
outsb
testl
xor
rclb
xor
mov
cmp
push
int3
int
mov
push
mov
add
sbb
adc
inc
pop
pop
dec
inc
subl
lds
lds
inc
dec
push
bound
clc
subb
fsubrl
add
and
pop
shrl
pop
xchg
adc
cmp
mov
ja
shll
jp
jecxz
out
dec
jecxz
cmpsl
sub
test
mov
jg
lahf
jno
call
test
imulb
scas
adc
in
or
push
fistpl
sahf
movsl
and
cmp
mov
pusha
nop
jle
inc
ss
cwtl
lods
push
pop
add
cmp
mov
in
sub
add
hlt
pushf
adc
add
adc
test
sti
mov
jp
cli
and
add
lea
or
push
xor
sahf
jno
xor
sub
les
nop
mov
xchg
push
xor
enter
dec
mov
sbb
dec
mov
fwait
inc
mov
scas
insb
popf
icebp
iret
add
pushl
xor
hlt
std
pushf
or
adc
test
sbbb
jmp
sbb
in
jno
fsub
fldenv
cwtl
stc
push
je
sbb
imul
jmp
dec
mov
mov
jl
std
and
gs
dec
lahf
xor
orl
fwait
out
repz
andl
or
aad
push
in
jo
adc
loope
mov
sbb
add
fildll
fucomi
mov
testl
int3
les
inc
pushf
mov
or
and
jbe
nopl
push
dec
xor
sahf
adcb
add
inc
inc
push
gs
lods
xchg
shrb
or
dec
or
mov
jbe
or
cltd
cmp
jne
inc
leave
dec
adc
loopne
jle
scas
aam
fdivrs
scas
push
xor
push
inc
stc
cltd
sbb
movsb
or
in
xchg
sbbl
push
add
push
dec
mov
repz
push
mov
xorb
loopne
mov
pop
cmpb
jge
bound
mov
jle
inc
cmp
icebp
push
adc
jns
and
sbb
cmp
iret
mov
cli
popa
inc
out
outsb
mov
mov
and
idiv
xchg
sbb
je
dec
push
add
add
or
mov
push
push
jnp
fcmovne
xor
add
dec
loope
add
mov
leave
and
fsts
cmp
add
xchg
js
js
shll
nop
sbb
in
roll
add
lahf
mov
pop
sbb
popa
iret
arpl
sub
xor
mov
rcr
and
nop
lock
imul
mov
jmp
imull
insl
add
fsub
in
and
jbe
or
rcl
fs
pop
int3
cmp
enter
jge
xlat
xorb
aas
das
sti
es
inc
add
movsb
int3
cli
bound
mov
adc
adc
xchg
in
cmpsl
dec
push
test
mov
fimull
aam
sahf
cwtl
cmpsb
stc
jmp
shrl
cmp
inc
cmp
jmp
and
insl
lcall
mov
sub
insl
lods
and
xchg
mov
jb
inc
ret
or
cs
cltd
mov
cwtl
loope
jns
ret
and
insb
sub
push
in
clc
fistpl
ret
sub
mov
cld
sub
dec
in
or
inc
das
movsb
ret
popa
adc
leave
loopne
push
aas
mov
sub
fcoms
pcmpgtd
lret
adcb
addr16
rolb
mov
pop
shl
push
or
xlat
pop
fs
scas
nop
or
push
int3
xchg
test
mov
pop
jl
mov
out
xor
pop
nop
dec
sub
cmc
xlat
jecxz
test
sahf
leave
xor
push
scas
dec
pmaddwd
jbe
scas
test
cmp
add
test
test
repnz
mov
push
ret
sub
add
mov
mov
sub
add
out
dec
lods
lret
pop
lcall
aas
mov
sbb
pop
and
aaa
clc
lahf
mov
and
dec
dec
xchg
movsb
push
ds
xchg
add
xlat
push
les
scas
loopne
in
jg
lret
cwtl
jg
push
jl
cmp
xchg
xor
pop
out
mov
push
xchg
lods
pop
push
lds
pop
popf
xor
pop
roll
aaa
add
cltd
inc
daa
mov
insl
je
jecxz
mov
or
jno
push
rolb
daa
jae
adc
call
dec
add
mov
int
negb
loop
pop
imulb
push
neg
jge
loop
fs
les
sbb
ljmp
mov
or
lret
and
cmpb
fwait
dec
leave
jo
repz
push
sbb
iret
xor
push
insl
jp
cmp
xor
or
xchg
pop
aaa
in
cmp
test
pop
inc
arpl
in
addr16
lock
fsubl
lds
ds
xor
ljmp
push
bound
pop
mov
mov
jae
popa
aaa
insb
cmc
dec
js
orl
sbb
inc
cs
repnz
mov
outsl
lcall
loop
lea
mov
dec
fwait
mov
sub
out
in
stos
pop
lds
shlb
cmp
jp
xchg
mov
mov
into
sahf
inc
pop
clc
test
push
inc
pop
test
inc
cld
aad
sahf
lods
pop
pop
jg
jg
add
pop
out
xlat
push
adc
not
or
orb
inc
and
add
ljmp
test
pop
inc
les
cmp
inc
dec
mulb
nop
int3
xchg
fwait
lahf
outsl
pushf
fldt
pop
or
into
cmp
sub
out
lret
aas
ljmp
rorb
or
sbb
outsb
fstpl
inc
xchg
mov
enter
lret
xchg
shr
shll
mov
repnz
mov
mov
push
enter
int3
andb
xor
push
mov
sbb
and
out
jecxz
das
sub
and
push
jno
loopne
pop
cmp
aam
add
or
sbb
pushf
sbb
and
xor
stc
and
sbb
flds
lods
insl
mov
inc
xchg
icebp
mov
dec
add
out
cmpsb
fistl
scas
adc
mov
dec
adc
aas
jae
ret
mov
int3
arpl
push
and
pop
jmp
mov
jbe
fwait
add
rol
lahf
sbb
les
push
mov
mov
inc
mov
mov
pop
xchg
adc
push
pop
es
ffreep
jns
es
aaa
lock
mov
movsb
pop
dec
shll
mov
imul
mov
mov
mov
sub
ficompl
sub
push
add
inc
mov
outsl
pushf
add
inc
pop
adc
push
sbb
int3
aam
sbb
mov
pop
daa
adc
mov
cmpsb
subl
std
add
or
int3
dec
push
or
stos
in
push
push
pop
dec
mov
dec
adc
push
push
mov
lahf
pmaxub
aas
cltd
cmpsl
call
push
pushf
movsl
push
fsts
xchg
inc
pop
jbe
scas
addl
pushf
jae
pusha
and
in
push
or
aad
vmwrite
daa
fdivrl
pop
mov
jle
xchg
jne
shr
cmp
dec
add
data16
rcl
fxch
xchg
cmp
in
push
out
push
mov
push
cmp
jns
or
ljmp
add
adc
push
or
jns
pop
push
es
adc
gs
dec
cmp
jae
sbb
xchg
lods
add
jbe
das
and
jns
in
fs
div
loopne
pop
xchg
aaa
add
jnp
loopne
jl
xchg
and
sbb
iret
and
mov
popa
add
push
fisttpl
cld
xlat
pop
enter
aaa
sti
aad
dec
inc
sub
icebp
mov
je
add
pop
adc
dec
push
sub
movsb
sub
mul
imul
jb
pusha
jl
xchg
int
jae
shlb
mov
cwtl
or
mov
in
cltd
jbe
jmp
mov
pushf
cmp
jge
ret
repz
mov
cltd
mov
jl
sahf
mov
xor
cmc
into
sti
scas
test
xchg
mov
ss
repz
mov
lock
dec
repnz
mov
aas
push
xchg
mov
lcall
stc
ljmp
rcll
adc
lcall
add
adc
testl
lcall
jns
push
push
lcall
ret
fs
ja
cmpsl
imul
cmc
inc
push
xchg
adc
shrl
jecxz
inc
insb
test
mov
dec
cmp
into
jge
test
cmpsb
aaa
ret
ljmp
test
gs
leave
push
inc
xchg
fadds
rclb
xchg
mov
xor
add
push
leave
imul
dec
ja
popf
mov
daa
sbb
pop
and
xchg
add
in
shrb
mov
test
enter
scas
inc
xor
clc
loopne
loope
lcall
lret
push
sti
loop
jecxz
testl
gs
sub
shlb
lret
add
movsb
rcll
sbb
test
add
push
insb
push
xchg
mov
arpl
push
push
hlt
daa
mov
push
dec
imulb
dec
jbe
jp
push
ficoms
stos
jb
cmc
sub
pop
je
xorb
das
mov
mov
adc
mov
sub
sub
notl
stc
dec
adc
or
cld
fbld
shll
mov
and
dec
lods
and
mov
jmp
outsb
ss
cmc
ret
ds
aam
mov
ljmp
jno
push
imul
adc
mov
inc
scas
loope
jge
rcll
inc
xchg
stos
aas
das
sbb
sbb
adc
loope
cmpb
and
jnp
sub
mov
push
jo
inc
xor
fwait
cmp
add
les
cmp
jne
pop
push
dec
stos
mov
cmp
mov
aam
fsubr
pushf
sbb
gs
ficomps
out
push
fisttps
out
dec
xor
cld
inc
or
adc
out
or
mov
pop
adc
shlb
bound
sub
or
add
mov
leave
loop
mov
shlb
dec
lea
xchg
add
or
mov
sub
data16
std
cmpsb
addr16
mov
cld
lock
pop
outsl
icebp
cmp
inc
mov
je
jge
lds
testl
dec
xchg
sub
push
mov
and
mov
inc
sahf
adc
sub
rcl
out
icebp
or
jl
or
lock
andl
xor
rcrb
ss
addb
or
ljmp
pop
test
and
ficomps
orb
adc
xor
inc
jg
shlb
push
cltd
adc
je
lea
mov
add
xor
jbe
call
enter
cltd
inc
and
jg
stc
cmc
std
scas
movsl
cmp
fucomi
jmp
imul
mov
or
and
cli
repnz
aas
lods
loopne
clc
aas
sub
lahf
jb
jecxz
ficoms
and
push
and
push
insl
and
out
xor
loopne
cmp
jle
movsb
adc
add
mov
mov
daa
pop
push
fidivs
push
push
popa
leave
mov
adc
inc
rcrl
test
pop
rcll
adc
cli
add
xchg
sub
loopne
out
pop
out
pop
sti
mov
int3
and
out
aas
je
lret
bound
mov
sub
out
nop
stos
dec
mov
jl
and
pop
les
imul
sti
call
lret
outsl
out
mov
inc
mov
test
lds
push
outsl
sbb
jne
aad
sub
insl
lea
cmp
daa
pop
inc
inc
fwait
cmp
or
cmpsb
stc
jle
jg
scas
push
pop
jp
jp
xlat
nop
cmp
je
ljmp
adc
or
pop
ret
and
stos
outsl
add
outsb
pop
jl
cmp
jge
outsl
cmc
arpl
mov
push
cmp
movd
inc
jg
adc
push
mov
jo
lcall
out
lahf
jo
push
or
mov
sub
lcall
push
cmp
push
and
fistpll
jle
mov
insl
or
pop
xor
nop
testl
xchg
add
jae
jo
stos
shlb
mov
add
out
mov
addl
mov
sbb
and
shr
fstl
cs
push
int3
out
aad
cmp
jmp
sub
sbbb
ja
mov
les
dec
pop
shr
mov
scas
imul
repnz
push
push
jg
mov
cmpsl
daa
test
push
or
enter
add
mov
shll
mov
iret
movsb
adc
cmp
lds
mov
shrb
fsubrl
cmpsl
xor
in
jmp
xor
pusha
jnp
mov
inc
push
adc
inc
popf
jbe
dec
lock
fildl
cmp
lret
loop
jno
mov
cmp
push
aas
pop
mov
ret
sti
cmp
pop
ds
adcl
int3
push
test
decl
aas
es
xchg
sbb
dec
sub
push
loope
mov
mov
xor
into
push
push
cmp
push
add
outsb
add
mov
adc
hlt
push
mov
push
inc
and
lahf
lcall
or
inc
push
jns
dec
mov
and
aas
sub
mov
pusha
xor
icebp
or
out
ret
mov
fwait
and
jnp
gs
icebp
cmp
jl
aad
sbb
subb
xor
or
cmpsb
adc
ss
mov
sbb
add
ret
call
lahf
ficoms
inc
repnz
jg
add
lods
out
fdivl
sub
sbb
out
cmp
das
pop
jno
mov
mov
test
dec
add
xorl
and
test
dec
jnp
shll
dec
mov
sub
idivb
addb
xchg
mov
push
jnp
ljmp
jmp
test
test
out
cltd
bound
ss
lods
test
mov
arpl
movsl
add
test
cmpsb
add
arpl
sub
aam
pop
fstps
sbb
push
pop
mov
jns
mov
push
push
lret
xor
test
cmp
fwait
inc
xchg
jbe
jbe
xor
and
sub
mov
adc
jae
adc
outsl
push
pop
popf
sub
call
shll
in
lock
enter
lea
and
in
inc
decl
cwtl
sahf
div
pop
rcll
jbe
push
arpl
push
jecxz
hlt
outsl
loopne
jno
jl
mov
jae
les
aas
xor
es
ror
mov
push
fwait
subl
sub
mov
sbbl
or
or
inc
and
push
in
mov
fdivl
mov
cmp
js
fsts
icebp
mov
cmpsb
addr16
mov
lea
and
cli
dec
dec
pop
pop
add
stc
lret
add
leave
cs
inc
lods
add
and
push
add
pusha
sub
mov
and
stos
arpl
xchg
mov
jmp
push
js
les
adc
mov
xor
dec
pop
pusha
cmp
xor
inc
push
adc
mov
push
and
sti
pop
into
xor
mulb
sbbb
js
ret
or
cmc
jb
lret
std
mov
stc
mov
and
pop
add
test
pop
mov
xor
std
dec
add
mov
pop
incb
cmp
mov
hlt
mov
sbb
xchg
cli
mov
repz
inc
add
xor
xor
movsb
sub
cmc
lds
xor
sbb
inc
movsl
mov
mov
aas
sub
les
daa
lods
mov
mov
jb
sbb
sbb
lock
mov
mov
add
movsl
mov
cmp
fidivl
ljmp
sbb
cld
inc
adc
inc
jno
xchg
mov
xchg
stos
pusha
cmpsl
mov
or
mov
fildll
xlat
hlt
push
mov
jmp
pop
or
cli
rcrb
jno
xchg
mov
sbb
cltd
pop
mov
aam
mov
mov
or
jmp
xchg
leave
dec
push
iret
aas
jp
xor
gs
and
adc
xchg
in
cmp
xchg
mov
jns
mov
stos
test
jo
pop
sbb
aam
add
inc
aad
push
in
cmc
in
inc
jns
iret
sub
push
mov
cmpsw
call
fcomps
int
xchg
orb
mov
pop
std
sahf
push
mov
xor
push
mov
or
rcll
xchg
fwait
adc
loope
test
popa
clc
enter
ja
xchg
xlat
fwait
dec
cmp
pop
push
sub
dec
add
inc
imul
cmp
xchg
mov
and
inc
je
sub
push
test
sub
xchg
xorb
data16
or
dec
adc
lods
flds
sub
or
popa
lock
sbb
fnsave
shlb
mov
mov
fdivrl
jp
imul
push
sub
sub
out
pusha
mov
inc
ljmp
enter
xlat
aam
sub
gs
or
fs
test
sbb
call
clc
push
pop
and
mov
stos
mov
idivl
xor
sti
xchg
xchg
test
rcll
cmp
pop
ja
stc
scas
into
mov
pusha
cltd
enter
sbb
lcall
mov
mov
mov
into
push
rep
jmp
jns
icebp
pop
std
jle
pop
outsb
push
jge
inc
xchg
sub
enter
fisttpl
mov
pusha
xlat
cmp
dec
jns
repnz
dec
sbb
and
insl
in
aas
pop
mov
scas
inc
inc
jecxz
sbb
ret
pop
sub
gs
data16
push
insb
inc
stc
sbb
stc
repz
bound
and
dec
xor
hlt
fidivl
xor
and
pop
rep
rorl
xor
push
aam
push
and
clc
test
adc
ds
bound
arpl
pusha
jmp
sbb
jno
inc
fiaddl
lods
xchg
ja
lea
jg
adc
clc
out
imul
pop
xchg
mov
fwait
sub
xchg
call
xchg
add
rorl
movsl
push
mov
inc
stos
mov
xor
ja
jecxz
mov
dec
dec
shr
incb
and
inc
xchg
ss
clc
pop
leave
jmp
jge
cld
test
mov
nop
enter
mov
add
mov
cmp
enter
dec
aad
rcll
inc
sub
sbb
shll
fiaddl
add
adc
mov
mov
adc
jbe
sub
mov
bnd
test
loope
mov
inc
mov
lret
sti
jmp
std
insl
pop
and
pushf
loop
fsubs
and
lret
push
test
jl
imul
mov
outsb
jmp
mov
ja
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
rclb
mov
add
add
lea
add
out
inc
popf
int
add
call
stc
jae
mov
hlt
pop
pop
mov
ljmp
daa
mov
push
fsubl
loop
dec
push
push
jecxz
lods
mov
dec
push
pop
jle
add
adc
mov
pop
movsb
inc
mov
mov
scas
and
or
mov
popf
scas
jmp
cltd
pop
ljmp
push
cwtl
imul
lods
push
mov
insb
mov
jecxz
rcll
add
fs
enter
js
mov
push
or
inc
sub
push
lahf
out
pop
pop
and
icebp
popa
xchg
xchg
pusha
mov
shlb
clc
mov
insl
loopne
jbe
cmp
cmpsb
popf
push
adc
loopne
pop
sbb
inc
push
or
and
sbb
decl
xchg
and
mov
dec
cwtl
mov
subb
orl
mov
and
mov
push
ficoms
or
pop
add
mov
sarb
mov
imul
mov
cmp
stc
xchg
mov
lcall
ret
cmp
rcrb
sbb
sbb
and
sarb
insl
adc
dec
and
fnstenv
pop
ss
out
push
jmp
cmp
shlb
jg
mov
jle
jmp
sbb
sub
in
arpl
lret
jl
push
mov
in
xchg
mov
xor
repnz
and
iret
xchg
inc
or
fcomip
sahf
lods
out
cmp
stos
xchg
mov
mov
into
sub
xor
or
mov
inc
or
repnz
mov
push
push
inc
daa
dec
xor
pop
out
jmp
and
and
stos
mov
repnz
pop
sub
push
cmp
push
xchg
pop
inc
xchg
mov
or
pop
ret
mov
enter
jge
push
mov
enter
and
sub
and
aas
bound
sbb
out
enter
ficoms
daa
movsb
imulb
push
jne
aaa
lea
lcall
orl
push
or
add
xor
bnd
xor
push
test
je
mov
in
jnp
sbb
adc
jmp
stos
or
cmp
fsubl
jl
xchg
dec
aas
push
pop
or
adc
push
mov
lret
adc
ja
inc
and
sahf
push
loopne
ss
push
dec
aam
shrl
pop
and
adc
dec
ficompl
cwtl
push
das
sub
pop
into
mov
fsubs
sub
leave
aad
les
setle
int3
mul
xchg
jge
inc
into
jmp
xor
pop
sub
test
adc
pop
mov
andb
sub
loopne
aaa
jle
mov
fcoms
and
jle
lods
push
pop
or
in
std
inc
inc
jbe
aad
mov
fsubs
cmp
sar
out
out
idivl
add
shll
cmp
insl
hlt
push
xchg
adc
xchg
mov
push
ljmp
fimuls
pop
push
jg
xchg
add
or
imul
lcall
out
adc
fists
in
mov
lret
je
fstpl
or
and
inc
xor
add
std
dec
mov
xchg
xorb
jmp
cmc
push
ret
call
or
sbb
pop
push
loop
mov
xchg
jle
jl
push
test
xchg
pop
testl
mov
leave
add
call
cltd
data16
mov
mov
sbb
ljmp
loope
cld
cmp
xor
inc
adc
pop
cmpsb
push
xor
xchg
cld
inc
cmp
add
outsb
cmp
gs
sbb
movsb
fists
mov
lods
mov
mov
popa
popa
lea
mov
cmc
into
push
scas
jecxz
test
pusha
test
fisttps
lret
jne
push
jp
ficompl
jnp
movsb
jb
fwait
mov
lods
stos
lds
insb
sub
outsl
sbb
adc
xchg
sbb
lods
daa
cli
int3
lds
jp
mov
xlat
mov
mov
dec
fbld
sub
loopne
pushf
aas
dec
int3
jg
mov
pop
repnz
sarl
adc
lcall
and
jb
push
rolb
cmpsl
and
and
rcrb
xchg
jmp
std
jmp
push
adc
jecxz
hlt
push
inc
outsl
out
pop
pop
fdivr
aas
fadds
in
sbbl
push
mov
push
sbb
sbb
inc
fcoms
aas
movsb
into
in
scas
mov
cmp
cmp
fldenv
sbb
orb
xor
xchg
enter
addr16
inc
xchg
jno
leave
ret
dec
dec
mov
lcall
mov
cs
das
in
mov
pop
js
mov
std
sbb
sbb
fbstp
xchg
inc
xlat
insb
divb
fstl
shr
sub
inc
hlt
cmp
mov
push
xor
or
cmpsb
and
mov
mov
leave
xchg
cwtl
loope
xchg
push
pop
rcll
cwtl
dec
loope
pop
jecxz
add
mov
mov
xchg
add
aad
cmpsl
xlat
dec
pop
cmpsb
mov
jp
and
mov
or
loope
and
dec
dec
cmc
sbb
inc
insl
mov
mov
cmpsl
jl
ljmp
add
push
push
rorl
scas
mov
sub
popf
std
mov
mov
into
data16
pop
pop
stc
xor
lds
js
sbb
imul
test
lods
push
data16
lret
jbe
outsb
push
or
jmp
shll
mov
outsl
data16
pushf
mov
mov
shlb
cmp
out
repnz
ds
into
pop
pop
shr
jp
mov
jns
mov
pop
mov
mov
push
push
sbb
and
sub
mov
push
or
test
xchg
addb
adc
jmp
sub
pop
aad
lret
loope,pn
sbb
shll
fists
testl
imul
lret
maxps
es
loope
lods
in
ds
mov
gs
add
test
fistpll
inc
dec
fmuls
jbe
inc
lds
rcll
cmpsb
jg
push
movb
aam
cmp
fldl
push
pop
call
fcmovb
or
sub
add
in
loope
jo
ret
sub
popf
dec
test
push
pop
das
das
mov
dec
sub
mov
push
ja
push
fst
jo
rclb
sub
or
pop
pop
aaa
aam
scas
addl
roll
add
push
cmp
sarb
adc
dec
daa
pop
jp
add
sbb
nop
imul
jle
mov
cltd
fildll
rcrl
es
mov
arpl
rcr
lds
repnz
push
inc
aam
pop
xchg
lcall
jge
mov
xor
mov
sahf
sub
std
cmp
or
mov
stos
xchg
leave
mull
cwtl
pop
jbe
outsb
ret
mov
cmpb
adc
stos
mov
sbb
add
pop
jb
into
xchg
scas
pop
mov
push
sub
jns
cmp
adc
jmp
sbb
enter
leave
mov
mov
les
dec
push
in
inc
vpsubw
mov
cli
jp
dec
mov
ret
stos
jge
adc
dec
xchg
mov
roll
in
lret
sub
movntq
dec
mov
lods
lret
movsb
add
aas
xchg
xor
adc
int3
xlat
push
xchg
inc
push
mov
lods
dec
xchg
inc
adcb
mov
sub
adc
mov
stos
inc
imul
pushl
inc
ret
xor
sbb
jne
add
and
pop
fists
fwait
movsl
adc
and
and
movsl
jge
in
mov
cmp
inc
mov
in
mov
cmp
xchg
out
cmp
cmp
mov
in
jnp
fsubp
cmp
cmp
ss
movsl
ljmp
jbe
out
push
jno
push
aam
dec
fsubrs
clc
add
mov
sbb
adc
aam
insl
scas
cmp
mov
mov
pop
sub
leave
jp
movzbl
or
add
les
mov
xchg
movsl
fiaddl
outsb
inc
cli
lret
mov
adcb
popf
xchg
in
int
cld
push
dec
aaa
mov
jo
lods
fidivl
fiaddl
iret
adc
hlt
imul
xor
imul
pop
decl
jecxz
or
sub
cmp
insl
jl
adc
mov
xchg
cmp
mov
and
repnz
pop
orb
aaa
dec
or
lret
ret
inc
hlt
subl
mov
xor
sub
or
gs
call
test
pop
push
ja
hlt
cmpsb
and
jb
mov
cmpl
cmp
pop
xor
jb
push
or
pop
inc
pop
ror
in
stc
outsb
fwait
cmpsb
cmp
mov
jmp
jge
outsb
add
lcall
gs
ret
andb
sbb
es
pop
or
cli
mov
push
mov
iret
add
add
stos
jge
shrb
pop
pushf
lcall
outsb
arpl
hlt
loope
outsl
xchg
mov
xor
bound
fistps
pushl
sbbl
jo
ljmp
pop
sbbb
in
push
pop
mov
adc
leave
imul
test
lods
dec
sbbl
ds
cs
mov
dec
fwait
push
cmc
adc
xor
ret
dec
je
xchg
fcmovb
mov
push
cmp
cmc
loop
push
and
rcr
ficoml
sbb
nop
cmc
xor
rep
mov
jnp
fisubs
mov
std
sub
adc
or
sbb
hlt
ljmp
and
lods
add
test
mov
fdivs
add
or
repz
xor
ds
xor
xchg
sub
outsb
jbe
pop
cmp
cmp
stos
not
xchg
lcall
ffreep
ret
push
push
repz
sti
jle
xchg
dec
lahf
lea
sub
jne
lods
shll
jl
test
shr
bound
call
addr16
add
cs
sahf
mov
fsubrs
dec
pop
lret
in
sbb
fs
stc
mov
scas
out
std
adc
test
inc
in
iret
scas
pop
push
jp
sub
stos
add
or
fisubrs
fwait
jo
jl
lods
push
jnp
ret
pop
imulb
dec
into
jb
scas
lock
aas
cmp
fsubrl
push
or
shlb
lds
mov
adc
mov
dec
cmp
cmp
les
xor
mov
adc
sarl
mov
add
popf
ret
fdivs
pop
cmp
push
inc
pop
pop
xchg
popf
jg
push
or
xor
movsb
cmpsl
test
jb
cmc
fidivrl
or
mov
rcrl
arpl
sub
insl
pop
xor
sbb
addr16
cld
pop
xor
subb
mov
sbb
leave
mov
push
fwait
inc
and
or
aas
jge
pop
out
push
cmp
jg
sbb
outsl
push
pop
outsl
outsb
in
pop
mov
cmp
scas
repnz
inc
nop
inc
imul
les
fbstp
sub
enter
cmpsb
dec
pop
push
pop
out
loop
add
ss
or
sub
xor
pop
cli
push
push
push
and
sbb
stos
mulb
sbb
stos
aad
sarl
mov
xor
jl
mov
jmp
dec
or
xor
inc
add
rol
sti
lea
aam
sbb
inc
push
push
andb
xchg
aaa
data16
std
jns
and
xchg
popa
fs
movsl
popf
or
stos
mov
adcb
ljmp
xor
add
fdivrl
cmp
pop
fmull
cmp
bound
ret
popf
mov
pop
outsl
mov
mulb
int3
push
int
jae
mov
fdivrl
mov
or
add
loopne
sub
jne
les
xor
out
shrl
in
lods
mov
pop
dec
dec
inc
outsb
lret
fucom
sahf
dec
je
jns
loop
rcrl
mov
imul
adc
fwait
inc
aas
mov
xor
shll
cmp
jmp
or
dec
fldenv
add
lock
sub
adc
xor
mov
nop
out
push
mov
dec
in
mulps
jb
cmp
cmpl
add
shrb
outsb
jae
ljmp
call
movsl
and
mov
cmc
insb
loop
pop
iret
out
aaa
cmp
jae
xor
xor
inc
push
xchg
enterw
sub
add
sub
iret
inc
sub
jle
test
pop
iret
pusha
test
cltd
push
in
movsb
jle
hlt
pop
idivl
dec
cmp
lods
je
pop
leave
push
repz
iret
mov
sbb
add
imul
rcll
mov
jecxz
cmc
jae
sub
dec
jo
jne
xchg
lock
test
cmpsl
mov
xor
jmp
and
xchg
adc
push
adc
fmuls
mov
movsl
js
mov
leave
and
fidivs
nop
pusha
push
fidivl
fstps
scas
inc
xorl
push
adcb
ja
daa
fdiv
sbb
sbb
sub
filds
lcall
data16
rcll
into
in
lds
and
int
outsl
cmc
out
xor
jnp
int3
jnp
insb
mov
cli
xor
adc
aam
add
ret
test
push
iret
mov
movsb
sbb
cmpsl
mov
pop
aam
jge
scas
es
jmp
cmp
or
xor
fdivrs
fiaddl
mov
pop
mov
mov
mov
jmp
push
push
lods
mov
and
andb
stos
xor
repz
sbb
push
dec
movsb
mov
push
je
push
dec
xchg
mov
xor
adc
ss
out
fisubrl
clc
jbe
dec
repnz
fucom
mov
aam
mov
push
mov
lret
stos
cltd
jno
sahf
shl
js
push
pop
inc
cmp
mov
mov
sub
xchg
push
push
lds
stc
ja
std
adc
jns
fdivrp
lahf
adc
dec
stc
and
sbb
int3
cmpb
scas
push
sbbl
mov
or
int3
fdivs
dec
in
mov
or
mov
jle
jbe
andb
ror
ja
repnz
mov
dec
data16
jle
lahf
pop
fsub
mov
loop
mov
les
int
push
sub
jecxz
xchg
and
xor
fs
adc
add
ss
addr16
xor
mov
je
push
sub
sarb
cmp
dec
aad
add
xorl
mov
xchg
push
je
pop
jns
leave
jg
or
mov
loope
jge
xchg
or
and
pop
fdivs
and
jp
outsl
mov
jmp
xlat
test
das
leave
scas
add
stos
or
push
aam
popa
mov
popf
cmp
lds
aaa
ss
xor
cmp
es
xchg
mov
icebp
sti
xchg
pop
add
sub
lret
sub
add
lds
lahf
mov
or
imul
xchg
dec
inc
dec
jae
sub
sbb
mov
push
pop
mov
inc
andb
adc
aas
dec
jae
stc
outsb
mov
pop
loopne
dec
mov
sub
test
mov
add
imul
test
jo
mov
push
jno
iret
shlb
mov
fcoms
mov
dec
test
dec
mov
stos
test
inc
cmpsl
cmp
xchg
mov
sbb
imull
sti
adc
movsl
jae
mov
adc
in
and
cwtl
jecxz
sub
jle
in
icebp
cmpsb
sub
push
ja
pop
push
mov
dec
xchg
ret
cmp
sti
es
jmp
or
in
test
sub
cmp
pop
push
loopne
scas
sbb
sub
dec
jge
push
push
int
mov
xor
inc
or
fs
mov
inc
jmp
loopne
mov
lahf
adc
ss
pop
and
shrb
mov
push
data16
adc
test
jae
clc
cmp
jl
mov
adc
ja
and
sbb
lea
mov
jl
add
push
out
call
jnp
f2xm1
xchg
jg
push
mov
imul
test
cmp
xor
maskmovq
sub
xchg
or
cmp
test
mov
pop
jecxz
jns
test
sub
mov
xor
pop
jp
add
jg
inc
loopne
jno
mov
imul
cmp
fadds
mov
shll
sahf
pusha
pop
cmp
xor
loopne
int
stos
bound
repnz
fnstcw
add
mov
pop
or
imul
out
adc
test
ds
filds
adc
mov
cli
fisttps
mov
pop
fwait
jmp
mov
loop
ja
and
adc
ficomps
push
mov
cmp
aam
addr16
and
add
xchg
xor
push
xor
arpl
adc
push
dec
jno
add
dec
xchg
inc
stc
popf
jmp
iret
xor
dec
leave
gs
xor
mov
scas
icebp
aam
pop
shll
cmpsb
mov
pop
fs
subb
cmp
out
sub
inc
pusha
mov
xchg
sarb
lock
xchg
sar
dec
inc
cli
imul
arpl
movnti
cld
pop
mov
adc
rclb
add
and
push
test
jle
jle
sarb
push
pop
pop
aad
push
mov
mov
arpl
sti
cmc
push
je
stos
arpl
pushf
ret
mov
hlt
sub
inc
in
dec
jne
push
call
xor
push
lret
xchg
jae
out
xor
adc
xlat
adc
lods
adcb
into
inc
xor
lock
jp
test
jno
repnz
dec
cmc
ds
outsl
pop
sbb
sbb
test
dec
test
jno
and
ss
fcmovnbe
and
stc
add
loop
mov
fildll
and
push
and
outsl
cmp
pushf
test
arpl
mov
adc
jmp
sub
jnp
loop
fiadds
push
sub
aad
lds
lret
pop
jg
jmp
xlat
dec
mov
add
pushf
jge
mov
push
dec
inc
and
cli
roll
lcall
mov
inc
and
idivl
addr16
stc
cmp
push
ds
insl
jnp
xor
stos
or
out
ret
movsl
sub
xor
sub
adc
inc
pop
aaa
and
xchg
pop
mov
or
cmp
add
jae
ljmp
mov
and
pop
call
mov
cmp
and
jecxz
imul
mov
mov
repnz
mull
xor
cmpsl
cmp
fsubl
mov
in
ss
pop
mov
aas
mov
mov
notl
iret
dec
je
xchg
mov
cmp
dec
cmpl
cli
je
dec
ja
cmp
mov
lock
pop
scas
aaa
ss
jmp
sti
out
sbb
pop
fcom
mov
in
jne
push
jle
adc
or
lods
mov
mov
cld
hlt
sub
pop
jmp
add
adc
cmpsb
xor
es
arpl
push
push
aaa
sub
imul
adc
inc
push
addr16
push
jnp
call
rdpmc
cmpsb
push
mov
mov
mov
fsubl
scas
xor
push
test
mov
xor
or
xchg
inc
lcall
adc
testb
push
pop
dec
shr
movsb
int3
shlb
inc
lea
js
or
loopne
repz
inc
decb
sbb
lea
inc
dec
cs
jge
pop
add
lahf
push
push
mov
in
xchg
call
stc
dec
pop
ret
sbb
aas
ss
dec
shrl
adc
ret
les
mov
notl
lods
popf
sar
inc
xchg
fsubs
test
je
pusha
popw
xor
clc
and
jl
adc
xchg
inc
cltd
vandnpd
jmp
sub
push
outsb
shlb
push
jo
enter
scas
test
in
jmp
bound
push
inc
push
and
cmpsl
push
push
mov
push
mov
ficoms
ds
mul
dec
xlat
xor
mov
ftst
adc
flds
cmp
sbb
loope
jl
dec
pop
inc
mov
stos
inc
idiv
call
push
out
pop
cmpsl
call
and
shll
shll
inc
mov
das
imul
repz
xlat
xor
das
aaa
and
iret
sbb
popf
out
add
sub
sub
inc
aad
fdiv
pop
pop
pop
xchg
inc
imul
sar
push
inc
fsubrl
test
fcomi
and
add
pop
pop
fnsave
jg
pop
inc
lock
inc
pop
pop
je
fnstcw
loope
mov
lahf
andb
mov
faddl
cmp
mov
adc
test
adc
sub
push
pop
push
sahf
inc
sub
jno
shrb
adc
cld
cltd
dec
add
loopne
divl
cli
aaa
xor
aad
imul
lds
sbb
loope
mov
cmp
sbb
jne
xor
mov
shll
orb
data16
push
mov
outsl
jg
adc
fmuls
inc
cmp
mov
xor
pop
hlt
jne
sub
jno
cmp
mov
mov
push
repnz
jp
xchg
mov
jnp
inc
stc
in
popa
jge
test
mov
fidivrl
shrb
add
or
and
icebp
jmp
mov
xchg
rolb
push
mov
push
ds
cld
xor
sbb
dec
cmpsl
mov
mov
xchg
js
mov
lret
add
xchg
xor
jge,pn
out
dec
movsl
xor
ljmp
pop
sti
fstps
xorb
adc
popa
lods
sub
dec
popf
hlt
or
es
add
movsb
mov
pusha
lock
nop
clc
std
outsb
inc
test
add
cwtl
mov
cmp
lods
cmp
dec
bound
aaa
xor
gs
dec
jne
push
pop
popa
push
andb
aad
mov
adc
mov
xchg
dec
jle
jmp
push
mov
cld
push
dec
xchg
cs
push
xchg
ja
pop
xor
jb
xchg
pop
jmp
pop
jle
iret
mov
in
test
lret
in
stc
cmp
rcrl
xchg
dec
jnp
and
outsb
pop
out
ja
jmp
xor
in
aad
push
pusha
pop
in
jb
jecxz
push
adcl
out
ja
mov
add
test
daa
popf
sbb
jmp
ds
adc
sti
frstor
push
aad
mov
test
mov
pop
movsl
mov
lods
leave
mov
inc
bound
xchg
ja
cld
pop
mov
adc
mov
adc
dec
jge
cmp
lcall
mov
ss
js
cmp
lret
push
adc
jo
inc
insb
mov
incl
aam
mov
push
mov
mov
les
jbe
add
fildll
or
add
lods
cli
cmp
push
and
push
aad
pop
cs
loope
cld
lock
fcmove
inc
push
xor
pop
bound
xchg
js
aam
orb
adcl
fwait
mov
pop
sub
ret
fidivl
mov
adc
stc
pop
sbb
cs
ret
xor
cmp
jecxz
jecxz
xchg
dec
sub
test
jmp
in
outsb
je
dec
call
call
cld
lea
push
mov
imul
pop
adc
inc
js
mov
sub
mov
xor
ljmp
jae
imul
pop
ret
scas
pop
sbb
stc
mov
xor
int
xchg
push
xor
shll
pop
xor
mov
lea
xchg
andl
mov
adc
pop
add
push
push
fisttpl
ljmp
lods
das
gs
in
xchg
cld
pop
mov
aad
fidivrl
cmp
lods
or
divb
cmp
clc
sub
sub
push
mov
shlb
inc
inc
rolb
add
fsubrs
cmpsb
xor
cmc
pushf
data16
push
loop
inc
inc
or
out
mov
add
dec
pop
cmpsb
pop
loop
fs
xchg
xchg
ret
sub
cmpsb
lret
sbb
stos
inc
cltd
sbb
pop
push
xor
addl
pop
push
add
lods
lret
inc
add
add
test
fwait
lods
xor
imul
das
xor
outsl
push
out
or
mov
enter
inc
stc
jmp
dec
shll
push
jg
mov
fimull
sub
sti
pop
lods
jbe
jge
and
jbe
jmp
xor
push
jl
or
cmp
or
mov
sub
sbb
push
pop
jmp
inc
mov
lcall
mov
sbb
mov
push
jle
test
sbb
aaa
add
cmp
addr16
adc
and
jnp
pop
push
ret
mov
pushf
scas
push
fistps
loope
in
lock
scas
inc
test
into
das
cmp
out
out
lcall
mov
push
xor
lret
int3
sub
nop
stos
loope
push
mov
push
jle
xchg
int
mov
sub
mov
in
xor
cmp
push
cltd
dec
or
adc
cmp
icebp
inc
mov
fsub
sub
mov
sbb
push
cmp
fdivrs
push
or
adc
loope
mov
rcrl
push
outsb
push
fstpl
xor
subl
xchg
sbb
push
pop
ror
call
mov
adc
mov
sbb
test
xchg
and
jmp
xlat
and
jne
sbb
sub
and
pop
mov
movsl
lock
into
divl
lods
sub
jb
push
andl
fcomps
sbb
fisubl
mov
das
mov
pushf
mov
pop
lret
inc
into
push
sub
or
push
jge
push
adc
cmp
repnz
push
mov
mov
out
adc
imul
cli
adc
std
test
and
and
stc
mov
push
cmp
stc
jge
stos
and
inc
xchg
mov
jae
or
cwtl
add
lret
push
scas
fisubl
shlb
nop
push
xchg
sub
mov
arpl
mov
mov
sahf
cmpsb
inc
lods
call
cmc
xchg
xchg
push
ss
or
pusha
xchg
add
and
shlb
lea
pop
icebp
jp
sub
fucomp
mov
pushf
stos
and
mov
jae
das
jo
insl
test
push
test
mov
jo
jecxz
pop
lea
outsl
jg
stc
dec
cmp
cwtl
adc
push
aad
cmp
and
cmp
arpl
xor
jo
lret
xchg
loop
mov
repnz
jns
sub
dec
clc
ret
mov
aam
test
mov
inc
xchg
push
jle
cmp
adc
ret
sbb
notl
push
xchg
sub
and
pop
je
fsqrt
or
mov
cmp
lods
sub
pop
add
inc
add
xor
xor
xor
or
xor
or
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
