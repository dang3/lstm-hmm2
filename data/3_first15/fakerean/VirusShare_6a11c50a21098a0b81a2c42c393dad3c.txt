sbb
add
mov
out
sbb
movb
lea
daa
call
rcrb
aaa
int3
pop
xor
call
sbb
stos
xchg
mov
aas
movsl
or
inc
mov
clc
fbld
mov
lock
fstl
pop
cmp
lods
jmp
mov
int3
mov
data16
sbb
xor
stc
imul
popf
push
imul
je
push
jns
pop
cmp
push
insb
les
pusha
jle
scas
cwtl
aad
dec
jg
or
push
subl
sub
std
jecxz
aas
add
loop
mov
mov
mov
and
adc
adc
dec
dec
pop
std
aam
imul
rcll
mov
cmp
call
inc
es
out
imul
cmp
jecxz
jae
and
aas
mov
ds
outsb
jne
out
push
dec
jmp
sub
loopne
jp
inc
push
inc
int
in
pop
inc
inc
jo
aaa
fisubs
in
lods
jmp
mov
lock
pop
cmp
addr16
shlb
test
mov
loopne
mov
pop
or
xor
lds
inc
dec
lahf
mov
ss
es
loope
sub
jne
insl
cld
mov
cmpsl
in
mov
dec
cmpsb
xchg
and
add
data16
mov
pop
cs
js
push
cmp
lds
out
lahf
mov
dec
mov
jmp
jle
cmpsl
lock
ds
jno
int3
push
mov
mov
mov
add
inc
sbb
ljmp
pop
or
mov
jecxz
call
dec
dec
popf
jge
push
addr16
push
push
mov
pop
ja
rcrl
xor
repz
mov
pushf
xchg
add
push
out
icebp
ds
xor
jmp
subl
out
pop
add
pop
das
xor
pushaw
xchg
or
mov
fsubs
add
pusha
or
sub
mov
mov
lret
jo
clts
sbb
mov
insb
aam
push
stos
xchg
mov
xchg
mov
das
xor
xorl
pop
in
mov
imul
test
jmp
cli
movsl
out
outsb
mov
negl
in
aaa
jge
mov
adc
enter
adc
fldt
push
push
cltd
in
jmp
push
sbb
xchg
jo
outsl
int
sbb
sbb
loop
mov
aas
mov
imul
pop
xor
mov
iret
jl
fsubl
jbe
andb
sub
sub
je
arpl
push
or
div
push
and
mov
jo
xchg
xor
adc
cltd
popf
lea
jg
bound
shll
or
mov
mov
sbb
das
cwtl
andb
in
pushf
mov
sbb
or
or
mov
push
jns
adc
mov
inc
pop
sbb
push
popf
shrl
call
jbe
inc
inc
jge
pushf
xor
sub
daa
sar
aaa
xor
cmpb
ss
xor
fldl
inc
out
out
out
mov
push
jecxz
fdivrl
inc
jg
scas
xlat
fdivr
inc
ljmp
ja
push
lahf
fdivrl
mov
push
fisubs
cmpsl
in
dec
cmc
bound
enter
mov
dec
mov
mov
jl
pusha
adc
mov
mov
into
sub
jmp
push
push
stc
test
sub
sub
push
faddl
xchg
insl
popa
cmp
sbb
outsl
or
pop
call
xorb
mov
das
sub
lock
outsb
test
adcb
inc
jle
shrb
lahf
add
sti
insl
jo
dec
js
push
dec
pop
xchg
mov
jnp
mov
insl
movzwl
jge
sub
insb
and
dec
xchg
xor
bound
outsl
fdivs
sub
je
ret
dec
sbb
push
mov
cmc
or
mov
lock
bound
test
dec
pushf
or
out
enter
push
mov
xor
mov
mov
push
cltd
in
add
mov
mov
packssdw
push
push
add
lds
loopne
sahf
inc
test
in
jp
cmc
pusha
dec
cmpsb
adc
cmp
repz
jb
or
ds
adc
cwtl
ret
in
pop
ja
or
xchg
fisubrs
das
mov
mov
add
loopne
arpl
stc
cmp
jnp
mov
rcll
sub
in
loopne
pop
mov
iret
ss
jle
aaa
ret
sbb
cmpb
ret
cld
fldcw
inc
xor
iret
hlt
popf
std
ja
jne
jne
push
dec
in
sub
sub
icebp
mov
xor
cmp
dec
adc
mov
mov
xchg
or
in
push
insl
mov
ret
addr16
adc
dec
inc
fidivl
push
xor
sbb
mov
pop
jmp
aad
xchg
push
loop
sub
ret
sti
fistpll
xchg
xchg
mov
mov
or
sub
adc
mov
xchg
popa
fs
call
adc
xor
adc
mov
push
fcomps
aas
sub
pop
insl
mov
cwtl
hlt
shll
js
pop
dec
sub
cmp
fstpt
scas
xor
test
or
pop
mov
imul
jg
or
pop
mov
xchg
gs
mov
aam
xchg
xchg
mov
jg
sbb
scas
cmp
cmp
fsub
sbb
add
mov
mov
jmp
into
outsb
xor
fcompl
pushf
or
mov
mov
inc
push
fs
cmp
mov
or
mov
jns
hlt
movsb
shl
sub
das
push
mov
out
jp
mov
push
call
iret
iret
jbe
mov
or
pop
fwait
loope
push
lock
dec
daa
jae
nop
fcmovb
xor
lahf
pop
add
mov
popa
jle
repz
popa
jl
add
jl
sahf
fistpl
inc
cmp
fdivl
pop
ljmp
xlat
jp
mov
push
cmp
lods
mov
adcb
ret
insl
out
jmp
inc
xor
gs
dec
ds
pop
fdivr
out
jne
lcall
test
stos
mov
out
scas
pop
xchg
and
addr16
pusha
dec
sahf
mov
cli
orb
cmp
lds
lds
movsb
xchg
out
cmp
sub
pop
mov
xchg
xor
in
mov
mov
aas
dec
out
pop
movb
mulb
in
push
push
xlat
jl
je
js
jb
sbb
push
jge
scas
leavew
insw
dec
out
lods
popf
xor
imul
mov
insb
je
aaa
stos
cmpsl
movsb
repz
mov
cmp
decl
inc
cltd
mov
shll
mov
test
sahf
daa
xchg
cmpsb
mov
in
cmpsl
aam
lret
lock
sbb
or
jp
jns
and
sbb
loop
int3
xchg
adc
stos
cli
mov
sub
sbb
into
or
adc
pop
fistpl
mov
push
clc
rcrl
lods
push
xor
pop
dec
xchg
out
lods
inc
cmp
fs
pop
cmpsb
inc
data16
ret
xorl
fiaddl
add
and
push
shrb
arpl
sbb
into
and
pop
std
aad
mov
jmp
mov
popf
cwtl
bound
or
pop
cs
cwtl
jge
xor
fimull
sbb
xchg
loope
xorb
cmp
fidivs
or
into
cmp
movsl
outsl
stos
and
sti
xchg
and
out
fdiv
sub
inc
mov
fcom
mov
and
xor
dec
pop
mov
sub
std
in
mov
push
popf
hlt
mov
xchg
jne
shlb
pop
mov
inc
fbstp
ds
test
push
rcrl
cmc
jge
pushl
ds
add
outsb
scas
cmp
inc
cltd
xchg
ss
std
jge
cmp
daa
mov
call
push
xor
dec
scas
test
dec
fisubl
add
mov
pop
xor
and
dec
adc
inc
movsb
fldl
jne
out
mov
lcall
jle
icebp
not
dec
dec
je
inc
movsb
test
insl
mov
push
or
mov
andl
pop
cmpb
dec
icebp
pop
aam
add
lret
nop
mov
sub
dec
pusha
ss
clc
ffreep
mov
sub
movsb
mov
mov
repz
dec
mov
js
xor
cmp
and
xor
stc
popf
cmc
cwtl
orb
sarl
add
daa
adc
jno
or
jo
movsb
in
iret
pop
or
adc
fdivrs
inc
pop
mov
insb
hlt
into
or
adc
or
loopne
mov
out
add
cmpsl
aas
lods
dec
js
mov
pop
push
mov
inc
sub
hlt
fs
push
inc
or
iret
cmp
fimuls
inc
mov
sub
adc
icebp
arpl
inc
in
shlb
incl
jae
adc
mov
pop
and
cld
in
std
xchg
pop
mov
xchg
push
push
loop
add
lds
push
jecxz
xor
fists
and
stos
push
push
jl
insl
push
in
das
mov
jne
mov
loop
mov
fsubrl
sub
nop
adc
fisubrl
cmp
xor
adc
popf
mov
test
pop
out
fnstenv
stos
nop
fnstsw
cmp
bound
adc
sbb
cwtl
fiaddl
call
and
add
in
cmpsb
enter
cmp
sub
adc
cmpsl
add
fisubrs
ret
mov
ret
xchg
sti
xchg
adc
rol
or
mov
lock
mov
cmp
jns
scas
outsb
add
jmp
jno
loopne
cmpsl
pop
lds
mov
pop
mov
mov
mov
imul
sub
rcrb
jmp
dec
jns
xchg
push
jg
pop
popa
cmp
popa
dec
jmp
dec
dec
je
mov
bound
daa
lret
ds
pop
cld
ds
xor
std
fbld
push
add
or
inc
js
sbb
push
ret
arpl
inc
lret
mov
sbb
leave
gs
jnp
push
or
sbb
clc
pushf
cmpsb
sub
dec
xorb
out
lea
ds
cld
xchg
adc
inc
pop
fnstsw
call
out
popf
subb
clc
xchg
pop
pop
adc
sbb
or
out
dec
ds
test
xchg
and
sbb
adc
cmp
sarl
push
das
hlt
mov
xchg
stc
hlt
mov
cmp
setnp
imul
shlb
ds
jne
fdivr
outsb
or
inc
shlb
stc
leave
jge
insl
test
sbb
pusha
jg
mov
push
or
adc
xchg
cmpsb
mov
fisttpl
mov
cmc
cmp
sub
popa
leave
jae
icebp
adc
js
sub
push
or
outsb
scas
aad
inc
daa
jle
scas
loop
push
lock
push
mov
outsb
fs
push
test
sub
jle
xor
or
jno
sub
aam
dec
mov
outsl
and
fldt
pop
or
adc
mov
lods
pop
mov
mov
int
mov
mov
mov
fucomip
out
xchg
add
jmp
mov
pop
jle
xchg
and
fdivl
sub
cmp
leave
xor
jnp
sbb
repz
jo
lret
std
push
repnz
in
test
stc
dec
lret
sbb
mov
sti
jmp
repz
jmp
xchg
cmp
outsl
sbb
sub
cmc
xor
insb
out
out
repz
xchg
insb
sti
inc
in
icebp
lcall
ror
arpl
nop
push
mov
jnp
or
insl
outsb
cmpsl
mov
xor
jp
cmpsl
jge
icebp
fists
aaa
pop
movsl
push
xor
mov
iret
hlt
cs
and
int
pop
mov
jb
or
sahf
fnstenv
pop
aas
int3
repnz
xorl
push
mov
cltd
popf
add
test
inc
and
dec
xchg
imul
or
cltd
sbb
dec
dec
daa
push
rorb
fsubrs
dec
mov
out
pop
push
popa
add
cld
pushf
cmpsb
sub
add
idiv
cmc
jg
or
lea
mov
jnp
loope
stos
mov
mov
xchg
std
fcoms
mov
dec
call
adc
cmp
or
adc
fstl
adc
or
sub
cmp
ljmp
sbb
mov
inc
js
add
xor
xchg
cmc
ja
shll
sbb
dec
das
loopne
xor
jge
clc
scas
out
dec
jno
mov
int
int
mov
dec
sbb
mov
shrl
jb
pop
xor
pop
flds
lcall
lret
mov
inc
dec
xlat
mov
nop
pop
in
call
jbe
andb
mov
mov
dec
push
lds
fcmovnbe
cmc
sub
aaa
testl
rcr
adc
jb
and
push
inc
hlt
out
call
sbb
push
and
jecxz
fisttpll
lret
icebp
adc
iret
sbb
loop
test
xor
mov
mov
sahf
sahf
call
dec
jge
and
jo
and
mov
loope
xlat
scas
adc
stos
mov
insb
mov
jne
jp
xchg
and
addb
repnz
jb
cmp
popa
xchg
jae
push
or
jno
push
jns
fnstenv
or
leave
add
and
mov
cmpl
shrl
sub
out
and
enter
ficoml
inc
pop
lods
mov
fisubrl
ds
pop
pop
fsubl
inc
test
ror
stos
xchg
mov
mov
popa
lcall
lret
add
jno
jmp
mov
xchg
notl
ret
daa
or
or
jbe
shl
daa
jbe
jmp
je
icebp
pop
mov
dec
test
mov
xchg
xchg
mov
dec
clc
inc
aam
popf
and
mov
mov
lcall
mov
sub
sub
fstps
popf
lahf
rcrl
cli
xor
sub
fwait
jno
repnz
dec
cmp
mov
xor
jg
push
int
dec
jb
lods
mov
adcb
mov
ret
pusha
out
in
fdivr
add
in
imul
pop
inc
xor
out
or
fisttpl
in
jne
jl
hlt
push
in
or
mov
arpl
subl
rclb
popf
insb
mov
add
xchg
mov
push
adc
and
push
test
mov
cmp
push
sbb
mov
cmc
sahf
ds
and
decl
adc
imul
repnz
mov
aad
in
lds
pop
inc
inc
xor
sbb
dec
cmp
sbb
enter
jp
ljmp
mov
in
out
inc
push
mov
or
jo
fldl
repnz
push
mov
lds
and
mov
fs
cmp
fsubrs
inc
test
lods
xor
and
xchg
xor
lods
into
jecxz
xchg
lods
clc
push
sub
loope
push
ds
notb
xchg
push
mov
popa
sti
test
dec
rolb
inc
stc
rcrl
mov
or
out
pop
xchg
xor
and
lcall
cmp
push
push
push
xchg
dec
pusha
sarb
cmp
push
push
pop
mulb
stc
clc
mov
cmpsl
jl
sub
subb
push
xchg
cmp
adc
push
loope
test
jmp
ret
shrl
mov
sarb
test
mov
pop
inc
xor
ret
lret
xlat
mov
sub
pop
sahf
xchg
mov
jge
mov
outsl
xor
or
cmp
subb
push
push
cld
xchg
jecxz
pop
hlt
test
popf
popa
cmp
int
mov
mov
mov
add
test
sbb
mov
sahf
xchg
and
sub
push
iret
dec
sar
fiadds
push
je
test
roll
adc
push
xchg
mov
mov
outsl
stc
pop
idivl
sbb
in
dec
das
sbb
mov
xor
mov
lahf
jmp
out
popa
cmp
mov
rolb
sub
sub
outsl
push
inc
jno
faddl
or
inc
test
pop
fnstenv
dec
push
ret
imul
jo
jmp
mov
adc
or
fdivl
fisttpll
jbe
inc
mov
fcmovu
mov
inc
fadd
sti
in
inc
cmp
or
push
stos
imul
clc
xor
cmpsb
int3
cmpsb
cmpsl
push
loopne
pop
mov
scas
jae
mull
imul
ffree
mov
inc
je
mov
xor
mov
mov
idivb
adc
jno
fmuls
cmp
test
push
mov
push
cmc
xchg
aad
jo
and
inc
repnz
dec
jmp
sub
inc
scas
aam
fwait
scas
fwait
aas
mov
and
fildll
mov
mov
pusha
jle
dec
jbe
sbb
adc
cmpl
pop
mov
mov
xchg
xor
rol
dec
lock
adc
lcall
ret
push
lea
insb
scas
addr16
and
out
inc
sti
mov
mov
test
or
insb
and
addr16
rorb
jae
ljmp
cltd
pop
mov
std
mov
ds
mov
add
push
orb
cmpsb
iret
dec
xor
mov
and
loope
icebp
sarl
lds
and
sbb
fcmovne
js
rcr
inc
bound
leave
push
aas
fdivs
mov
leave
dec
cmpsl
ja
lret
jg
nop
lret
cs
leave
adc
pushf
in
adc
lds
repnz
cmpsb
mov
dec
in
mov
ficomps
add
push
data16
sub
les
push
fwait
sub
push
mov
std
jecxz
jae
cmp
or
cmp
and
xor
xchg
mov
cmpsb
repnz
mov
stos
push
mov
cmp
lret
les
cli
aas
mov
mov
icebp
xchg
mov
and
sub
movsl
sarl
pop
lods
push
or
call
pop
jo
push
or
mov
clc
arpl
jmp
xor
adc
test
and
ret
or
cmpb
aad
add
scas
xchg
jp
dec
add
cmp
movsb
or
inc
out
imul
mov
adc
repnz
notb
nop
and
and
icebp
stc
mov
iret
mov
movsb
test
cmp
jecxz
je
pop
push
jo
push
roll
nop
mov
push
dec
add
sub
aam
pop
pop
add
add
je
cmp
les
push
notb
int
dec
add
sbb
jmp
jp
sbb
adc
addl
push
xlat
fcmovnb
cmpsb
and
cmpsb
mov
scas
xor
sub
imul
enter
ja
in
loope
out
pop
pop
cwtl
sbb
daa
cmp
test
push
add
jne
cmp
js
cmpsb
int
add
test
clc
lret
pop
push
mov
loop
jle
xor
fstl
outsl
or
idivb
imul
sub
pop
mov
lahf
push
cli
push
mov
push
inc
add
jmp
fwait
clc
jmp
add
in
insb
aas
int
pop
mov
inc
or
jecxz
lret
addr16
jae
xlat
inc
jno
bound
cltd
imul
fidivrs
pop
cld
inc
jge
jo
xchg
fisttpll
test
inc
jle
scas
or
movsl
subl
rdtsc
in
jno
mov
mov
repz
or
jle
cmp
test
or
clc
std
xchg
addr16
int
enter
pusha
loope
je
test
in
inc
mov
fnstsw
add
xor
sbb
dec
scas
pop
aam
mov
mov
pop
pop
jne
mov
nop
or
dec
hlt
sti
add
sub
cvtps2pd
fmulp
and
sahf
adcb
cs
cmc
mov
xchg
imul
cmp
es
push
mov
jecxz
dec
rorb
cmp
inc
js
mov
enter
or
fadds
ljmp
scas
call
inc
push
add
dec
lret
mov
mov
xchg
ja
int3
dec
push
mov
dec
push
ficoms
sub
inc
fcoms
push
cmp
push
in
adc
cs
sbb
sub
lods
icebp
pop
movsb
mov
jge
je
loop
or
lret
in
or
mov
mov
mov
xchg
stos
cmp
call
fisubs
enter
ljmp
adc
jmp
out
lods
test
insl
sahf
pop
repz
repz
mov
inc
xchg
in
push
sub
scas
sbb
outsl
cld
cs
mov
push
and
int
sub
nop
cmp
icebp
rolb
jmp
scas
call
xor
sub
dec
sti
xchg
push
sbb
aas
mov
push
and
pop
jmp
dec
pusha
clc
out
imul
mov
push
fistpl
sbb
in
loop
mov
jp
and
sti
fldt
xor
mov
loopne
sahf
pop
jl
fs
pusha
mov
pop
jmp
dec
ret
enter
mov
mov
fimull
or
daa
int
dec
lods
mov
or
mov
test
ljmp
pmulhuw
cmpsb
mov
xchg
dec
add
jecxz
andl
fs
jp
xor
test
clc
xchg
fs
lret
cld
dec
sub
imul
lcall
inc
decl
out
out
and
jno
cmpsb
pop
dec
aaa
push
push
out
xchg
sarb
jg
dec
dec
xlat
fnstsw
jmp
or
pop
mov
movsb
xlat
and
and
aas
mov
mov
jbe
mov
sub
pop
fwait
dec
cmpxchg
xchg
fs
popf
add
mov
xor
cld
dec
mov
movsb
test
insl
jbe
loop
cmp
and
arpl
inc
mov
jne
jae
stos
lods
and
imul
cld
mov
lahf
dec
xchg
cmp
fs
das
mov
inc
xor
push
cmp
or
jo
frstor
loopne
mov
dec
mov
adc
mov
push
jmp
pushf
xor
cs
and
shll
outsb
xchg
es
dec
xchg
imul
dec
cltd
inc
test
ljmp
insl
dec
test
movsb
xor
out
enter
mov
imul
jecxz
mov
add
ds
dec
xchg
xchg
pop
incl
dec
je
in
mov
cmp
mov
xorb
out
xor
loop
stos
not
inc
jle
cli
loop
push
mov
arpl
sbb
rcll
inc
dec
mov
ja
and
sub
push
xchg
dec
mov
adc
add
mov
add
or
lods
xchg
jnp
fldl
outsb
mov
movsb
into
fnsave
test
pop
adcb
lea
mov
push
pop
cmp
inc
lods
out
aaa
adc
fldcw
fwait
inc
pop
movsb
jg
xchg
mov
in
and
daa
lea
jbe
push
ds
push
sbb
out
mov
push
rorb
pop
insl
jl
popa
add
dec
fcmovnbe
dec
inc
scas
cmp
jo
int
into
dec
cmp
ja
lea
mov
leave
mov
icebp
std
loope
dec
jmp
xchg
popa
cmpsb
dec
les
jo
repnz
fstps
shll
mov
pushf
cmp
xor
mov
inc
sbb
sub
ljmp
mov
or
repz
ds
xor
jmp
test
mov
jp
daa
add
xor
add
mov
icebp
fwait
mov
stc
repnz
sarl
cltd
mov
enter
mov
das
inc
jns
testl
pop
in
jns
and
fsubrl
in
outsl
fdivrp
mov
stos
sahf
push
imul
mov
dec
imul
pop
mov
push
enter
mull
jne
sahf
pop
repnz
scas
stc
arpl
inc
and
and
sub
ret
sbb
dec
add
mov
cmp
inc
adc
rolb
insl
xorb
ja
pop
mov
adc
mov
add
cmpsb
dec
pop
test
xchg
mov
ss
jecxz
mov
out
lea
loope,pn
add
or
rcll
imul
in
js
pop
pop
rcrl
into
iret
inc
out
dec
adc
mov
push
mov
loopne
out
fcomip
clc
inc
aad
movsb
nop
out
imul
cmc
arpl
xchg
jl
cmp
sbb
jbe
insl
orb
pop
dec
jge
jecxz
repnz
stos
inc
cmpsb
lock
rep
stc
pop
mov
jnp
and
lods
sarl
orl
lahf
dec
push
lea
idivb
push
xchg
xchg
imul
add
xchg
inc
push
pop
cmc
fimuls
mov
ljmp
mov
mov
adc
icebp
xchg
pop
dec
dec
scas
or
or
or
push
outsl
push
dec
out
mov
rorb
outsl
lret
push
inc
push
or
mov
lret
lret
mov
push
sbb
shll
or
sahf
aaa
loopne
xchg
imul
in
cmp
pop
and
cmp
out
lret
inc
sbb
jo
in
outsb
pop
jg
cwtl
ja
xchg
aaa
test
and
mov
ja
out
add
cmp
jl
dec
cmpsb
dec
mov
int
pop
stos
in
fistps
mov
sbb
adc
jae
clc
into
lds
jp
mov
mov
and
sahf
sbbl
aad
cmp
shlb
mov
fistpll
mov
addr16
lds
cwtl
mov
cmp
sbb
xchg
xor
mov
stc
aaa
jg
enter
pop
ret
jno
cmp
mov
xchg
shlb
mov
xchg
andl
adc
jmp
add
adcb
mov
jns
stc
iret
mov
xor
out
fisttpll
stc
xchg
lea
ret
xchg
xor
jno
push
or
mov
jb
dec
xchg
inc
enter
sahf
dec
popl
dec
lods
pop
add
mov
out
adc
mov
and
enter
cmp
fidivs
inc
xor
sub
adc
cwtl
rcrl
inc
cmp
push
dec
cmp
pop
cmpsl
xor
cmp
hlt
leave
nop
fsubl
xchg
fsubp
mov
daa
cmp
push
lods
cltd
idivl
push
sbb
loope
adc
adc
sbb
and
fiaddl
aad
dec
mov
insl
sbb
sub
pop
mov
hlt
dec
sbb
cmp
hlt
jnp
subl
cmp
cli
addr16
idivl
mov
or
jne
mov
testl
push
jecxz
adc
cmp
pop
cmp
sbb
lods
fs
js
push
pop
and
loopne
sub
repnz
out
icebp
jne
dec
js
jb
dec
in
mov
mov
sbb
in
mov
push
movl
je
xchg
and
insl
mov
sbbl
sbb
lcall
lock
cmp
xorl
inc
adc
testl
pop
jb
call
sti
lods
add
xchg
fcmovnu
xchg
pop
out
push
or
push
out
je
adc
inc
sbb
dec
or
data16
icebp
inc
pop
xchg
cmp
cmpsb
je
xchg
movsb
sbb
idivl
sub
iret
jle
js
push
xchg
lcall
mov
xchg
pushf
push
jmp
sti
inc
mov
push
pop
jmp
or
xchg
arpl
push
lahf
mov
push
lock
cmc
xchg
and
pop
imul
pop
fldt
push
sahf
aaa
xchg
and
mov
fildll
and
clc
inc
lock
cs
push
addr16
adc
sub
mov
inc
mov
xor
stc
lcall
lods
pusha
movsl
sbb
add
repnz
sub
mov
pop
cli
in
dec
xor
pop
clc
jno
and
stos
shr
sbb
mov
xchg
sbb
jb
jb
aad
call
mov
mov
xlat
mov
push
add
add
dec
addl
push
pop
mov
enter
imul
pop
cld
loop
jno
sti
pusha
sub
xor
xchg
pushf
cs
dec
in
repnz
adc
pop
mov
push
mov
cmp
pop
pop
push
movsb
add
xchg
and
and
jae
jnp
out
push
scas
in
inc
movsb
push
pop
mov
mov
mov
cmpsl
popf
cs
inc
lods
mov
hlt
test
and
inc
adc
add
cmc
fsts
mov
insl
loopne
clc
jne
leave
enter
or
cmpsl
push
fdivrs
sub
enter
and
push
lods
pop
loop
scas
icebp
mov
icebp
into
dec
nop
mov
ds
repnz
jmp
ret
adc
sub
subb
loope
fs
push
outsb
pop
jmp
adc
jmp
rolb
cmpb
mov
jmp
xchg
outsb
in
and
cltd
in
and
jno
in
loopne
mov
mov
out
pop
sbb
fstp
inc
hlt
out
cmp
pop
push
add
push
arpl
inc
iret
push
mov
mov
lods
mov
ss
push
push
out
shll
sbb
adc
data16
fs
sbb
pop
mov
fwait
dec
lret
ja
inc
mov
or
mov
aas
cmp
pop
jb
in
adc
lds
roll
iret
clc
dec
test
rcll
push
stos
movaps
cwtl
push
les
popf
rcll
push
pop
jno
scas
xchg
inc
cwtl
cmpsl
daa
cmpsl
sub
add
sbb
adc
stc
and
mov
imul
shrl
nop
xchg
xchg
aaa
inc
mov
mov
cld
jge
jno
call
loopne
lods
mov
sahf
imul
dec
aas
popa
cwtl
mov
aaa
xchg
cmp
fcoms
mov
or
les
orl
movsl
xchg
dec
rorl
stos
inc
shl
insl
lods
pop
sub
enter
dec
test
cmp
imul
xor
das
pusha
hlt
in
out
fcompl
call
mov
ret
subb
jbe
lods
les
es
mov
outsb
in
jb
data16
js
mov
cmp
ja
negb
xchg
lret
lods
pop
adc
dec
dec
sarl
sahf
cmpxchg
sub
mov
xchg
mov
pop
cmp
push
push
mov
ret
inc
int3
les
pop
loop
jmp
ljmp
sub
fucomp
cld
popf
out
push
push
or
aaa
inc
mov
mov
adc
push
push
lea
jg
mov
sub
add
cltd
imul
addr16
imul
xor
or
cmpsl
fcompp
fistps
jge
fdivrs
repz
in
mov
mov
push
sub
hlt
mov
mov
dec
jae
and
push
push
pop
mov
dec
dec
sub
movsl
mov
sbb
jp
ret
push
sub
jl
or
pop
in
insl
gs
push
outsl
loope,pn
xchg
xchg
push
adc
xchg
imul
dec
jb
jmp
sahf
inc
ret
jge
iret
sahf
fisubl
xchg
pop
mov
stos
mov
pop
pop
cs
in
or
lea
rcl
aad
cmp
iret
pusha
cmpsl
adc
movsb
fidivrs
pop
xlat
mov
cmp
xchg
jbe
repnz
pusha
sub
mov
cmp
pop
pop
pop
and
sbb
sbb
dec
or
js
idivl
jno
sub
popa
sahf
rolb
push
sub
xchg
pop
push
adc
cltd
sub
lret
xchg
ljmp
ja
sbb
dec
mov
mov
ja
cmp
movsb
dec
pushf
add
adc
in
outsb
cmp
daa
pop
cmp
adc
cmp
cmpsl
testl
add
lea
imul
gs
xchg
cmc
mov
or
cli
pop
shlb
scas
jnp
and
mov
adc
cmp
incb
pop
jns
pop
nop
lahf
push
stos
adc
bound
xchg
std
int
jne
pop
add
sbb
mov
clc
scas
sbb
in
andl
sub
push
hlt
mov
or
mov
mov
cmpsl
inc
outsb
rcll
in
popa
and
mov
push
jno
sahf
cmp
and
push
jp
jg
bound
lcall
std
fwait
mov
add
mov
loop
pop
sbb
sahf
mov
dec
fists
lcall
aam
mov
pushf
mov
popa
pop
rcrb
ficomps
dec
cli
xchg
aad
pop
aas
fiadds
mov
outsl
bound
pop
sbb
jne
jmp
fcomps
adc
and
pop
enter
insl
xchg
popf
ljmp
sbb
outsb
dec
sbb
repz
test
in
add
orl
sti
lea
dec
repz
outsl
adc
add
pop
xchg
aam
xchg
sub
xchg
jns
add
push
dec
xchg
mov
fnstenv
ss
and
sub
cmp
add
imul
dec
mov
mov
or
lea
inc
frstor
jmp
roll
mov
jne
loop
icebp
pop
push
cmp
les
pop
adcb
ja
arpl
loopne
xchg
jg
dec
repz
arpl
or
push
push
rclb
xchg
push
ds
sub
mov
xchg
lods
xor
rclb
scas
cmpsb
leave
sub
inc
out
add
mov
int3
pop
cmp
and
and
loop
push
adc
sbb
and
jl
mov
xor
cs
repnz
leave
adc
jl
inc
arpl
sbb
lods
push
mov
and
jecxz
insl
pusha
lret
jbe
aam
call
pop
iret
adc
jmp
in
fistl
je
sti
pop
in
adc
xor
jecxz
pop
push
push
push
ret
enter
sub
lods
jle
nop
or
popa
adc
dec
xchg
sub
addr16
das
adc
or
push
pusha
adc
nop
jno
pop
addb
and
in
push
and
ret
xor
add
jge
stos
out
ficoms
out
jecxz
shlb
xchg
mov
outsl
adc
fdivl
adcb
and
xor
dec
add
enter
or
inc
sub
out
in
xor
hlt
dec
loopne
aam
or
bt
loope
nop
ss
or
mov
es
aad
pop
out
jns
lds
incb
jg
dec
jecxz
cli
mov
cmc
neg
lret
fs
stos
xchg
xchg
mov
jle
jns
call
sti
faddl
mulb
mov
pop
jnp
add
loop
gs
xor
nop
pop
stc
cmp
shr
int
inc
cmp
std
popa
add
jecxz
mov
cwtl
jg
jae
and
cmp
rolb
movsb
inc
mov
inc
add
sbb
scas
lds
nop
mov
in
mov
jae
cli
mov
mov
loope
or
scas
or
pop
nop
adc
imul
andl
mov
mov
inc
daa
push
leave
xor
jne
punpckhdq
dec
mov
fdivr
imul
lret
and
aaa
int
out
dec
inc
cmpsb
mov
mov
cmc
jo
xor
arpl
adc
ret
mov
mov
inc
pop
imul
out
mov
hlt
sub
lahf
cmp
mov
inc
pop
xchg
bound
sub
shrl
mov
ja
pop
mov
xor
ss
arpl
pop
sahf
pushf
inc
out
aaa
mov
xchg
mov
adc
adc
inc
pop
mov
rclb
cmpsl
pop
mov
shr
add
sbb
inc
jecxz
xor
mov
mov
or
mov
leave
cmp
jbe
mov
js
sub
xchg
jle,pt
fcomps
xor
inc
jno
decl
ficoml
outsl
lret
clc
mov
fstpl
lahf
stos
insb
push
ss
sub
push
push
sbb
lea
loopne
icebp
jbe
xor
mov
sub
pop
shrb
cmc
pop
push
xor
cwtl
psubd
lret
push
cld
mov
mov
push
roll
je,pt
outsl
adc
push
add
lcall
ja
jns
jge
lret
test
push
mov
add
inc
fsubs
repnz
jns
push
or
dec
cmpsl
filds
inc
mov
inc
insl
mov
scas
das
xor
add
fcmovnbe
xchg
mov
imulb
test
flds
out
cmp
in
clc
hlt
dec
add
lock
daa
push
imul
call
or
out
in
pop
adc
sbb
call
rcll
mov
test
sub
std
jecxz
fmull
pop
out
pop
pop
mov
into
aad
cmovb
push
ret
xor
sti
cs
xchg
add
push
loop
pop
loop
xor
int3
xor
cmp
imul
enter
xlat
push
jno
out
add
jg
xchg
push
dec
dec
cld
sbb
and
push
xchg
cmp
fsubp
out
sbb
pop
xchg
add
xor
add
xor
adc
test
in
ss
add
xor
xor
xlat
les
repz
mov
ret
movsb
mov
adc
clc
inc
xchg
push
pop
dec
dec
mov
or
ljmp
dec
stos
das
pop
pop
inc
or
add
fldt
mov
hlt
dec
xchg
or
sbbl
ret
push
lea
cltd
test
mov
and
cwtl
pop
xchg
xchg
fstps
pop
dec
dec
aaa
pop
ficompl
clc
mov
sub
jbe
test
leave
les
xchg
inc
int3
sub
out
xor
lcall
mov
movsb
jne
in
xor
aaa
sbb
gs
cmc
xchg
dec
mov
enter
scas
lock
and
dec
xorl
or
dec
std
out
xchg
insb
inc
sub
test
loopne
jo
and
sarl
mov
out
pop
jl
and
push
add
std
cmp
mov
out
dec
movsl
roll
lods
or
cmp
jo
ljmp
push
cmp
lods
loopne
pop
lcall
xlat
gs
mov
push
lods
fdivp
add
ljmp
jle
leave
pop
es
mov
cmpsl
in
out
sbb
shr
popf
int3
cmp
daa
lcall
mov
scas
or
cld
sub
pop
push
jge
cwtl
and
pushl
fidivl
in
cmp
or
in
scas
and
or
popa
clc
or
mov
mov
xchg
sbb
mov
inc
sbb
sbb
pop
jl
sub
inc
jbe
and
xchg
jns
pop
popa
icebp
aad
push
in
ja
iret
pop
iret
pop
push
ret
out
jno
jb
mov
jle
sbb
sbbb
cltd
orl
lock
push
cltd
rorb
jg
add
mov
adc
subb
sub
inc
in
pop
imul
leave
sub
inc
dec
inc
and
flds
ja
cmp
pop
dec
insl
les
and
icebp
aaa
inc
call
aaa
sbb
cmp
inc
fidivrl
and
insb
push
sahf
or
in
aaa
sbb
fidivrs
xlat
push
iret
dec
mov
adc
icebp
dec
xor
xchg
dec
daa
dec
and
mov
or
jge
int
ffree
cld
mov
scas
xchg
push
push
call
push
add
mov
inc
jge
fimull
jns
fiaddl
outsl
stos
sub
and
pop
push
inc
fistps
mov
daa
fdivr
adc
pop
mov
rolb
into
cltd
jmp
outsl
jnp
out
or
movsb
xchg
mov
cli
cmp
xchg
shl
or
mov
shlb
dec
xorl
sti
cmp
or
mov
cmp
out
sbb
inc
cld
lcall
jns
mov
out
or
sbb
dec
sub
mov
int3
into
cmp
adc
test
in
mov
stos
iret
or
lods
or
cmp
lcall
ljmp
call
xor
les
and
dec
jb
push
mov
cmp
hlt
pop
aas
lods
xchg
outsb
cltd
xchg
mov
cmp
lds
rorl
mov
or
sbb
dec
jo
adcb
push
mov
xor
jne
leave
ljmp
stos
sub
divb
inc
jge
push
nop
psubd
jo
sbb
cs
test
rcrl
sub
and
push
sbb
inc
fs
mov
movl
ret
xor
stos
cmpsb
xor
pop
repnz
mov
jns
jnp
sub
push
lcall
pop
and
or
cmc
lcall
mov
jg
loope
adc
dec
and
stos
ret
cltd
mov
cmp
or
push
cltd
dec
adc
push
jb
mov
stos
cltd
mov
fiadds
pop
add
push
mov
cli
into
mov
int
int
cmpsl
inc
dec
out
pop
sub
fnstcw
es
arpl
push
insl
jle
subb
jl
addr16
inc
decb
data16
xor
jecxz
pop
push
sbb
scas
xor
xchg
push
cmp
je
add
mov
fiaddl
mov
rcrb
or
ret
out
je
les
cmp
andl
pop
pop
sub
mov
repnz
jns
mov
push
push
xchg
mov
pop
mov
xor
add
fstps
rep
push
push
mov
jno
xor
nop
pop
dec
sbb
push
jmp
roll
mov
rolb
pop
mov
cld
divl
shll
nop
pop
or
pop
fistps
jnp
xor
cmp
push
xrelease
pushl
push
orl
das
mov
adc
jnp
xchg
xor
enter
fmull
cmp
jecxz
dec
add
push
loopne
dec
push
cld
lret
mov
nop
mov
push
xchg
dec
out
and
add
fwait
mov
cmc
mov
jo
popa
or
fidivrs
add
in
outsl
mov
xor
cmp
stos
xchg
xchg
adc
call
test
pop
das
and
rolb
and
in
xchg
inc
pop
pop
gs
mov
cmpsl
xchg
sub
and
lods
icebp
lods
pop
fbld
mov
inc
inc
mov
push
out
mov
push
unpcklps
in
popa
fisttpll
insb
xchg
sbb
fucomi
dec
pop
add
sub
fbstp
dec
and
loop
add
cmpsb
leave
jne
cmpsl
mov
aas
dec
lods
mov
push
cmc
push
cmpl
ljmp
leave
lahf
out
and
addr16
lods
aaa
inc
test
and
in
leave
arpl
aaa
hlt
jne
rcr
or
bndstx
shl
outsl
mov
xor
add
mov
xchg
push
fistpl
push
inc
jne
pusha
jne
sbb
cwtl
mov
movsb
jg
inc
aaa
imull
inc
js
sbb
push
xor
cmpsl
les
push
mov
in
push
xor
arpl
cs
pop
lds
push
mov
adc
adc
mov
inc
sahf
add
mov
andl
xor
cmc
pop
cs
iret
pop
mov
xchg
xlat
movsb
jbe
push
xchg
mov
lcall
jge
sub
and
xchg
sub
out
sbb
mov
add
adc
pop
mov
je
test
rolb
add
or
pop
int
jl
xor
ljmp
sbb
test
dec
hlt
flds
fimull
xlat
in
cmp
cmpl
fisubs
cmpsl
add
xchg
loop
or
ret
mov
adc
mov
sub
test
push
sbb
and
and
into
stos
imul
mov
stos
mov
adc
sbb
imul
insl
adc
or
pop
out
add
inc
xchg
mov
cmpsl
pop
repz
xor
out
mov
jg
test
lock
mov
sub
mov
fldl
inc
cmp
xor
pop
sbb
cltd
call
lret
rcrl
jb
test
push
jo
jle
pop
push
sbb
ja
arpl
cmpsb
dec
into
adc
scas
adc
push
aad
into
sbb
out
stos
test
add
icebp
mov
cmpsb
leave
pusha
inc
sbb
pop
fldl
test
and
mov
in
add
xor
jnp
leave
hlt
hlt
jle
push
loope
cld
mov
cmp
xchg
out
aam
lcall
pop
mov
dec
addl
xchg
into
aas
leave
adc
xchg
loop
pop
inc
jbe
push
add
push
ljmp
push
int
push
push
jbe
and
sbb
sub
jo
cmc
lcall
out
pop
or
cmp
in
sti
les
call
jne
repz
hlt
pop
sti
jbe
clc
jnp
adc
mov
out
mov
lret
shrl
in
jbe
jg
stc
or
jecxz
fsubl
mov
loopne
mov
adc
jp
mov
rcr
mov
jnp
sbb
dec
mov
dec
xor
enter
andb
cmp
scas
xchg
add
cmpsl
test
mov
lret
mov
xor
or
pop
pop
mov
roll
shlb
xor
xor
call
ret
shrb
fisubs
mov
push
int3
cmp
dec
mov
popl
mov
das
sub
push
imul
out
adc
jmp
std
shlb
shl
add
ficoml
outsb
inc
xchg
cmp
into
pop
xchg
lock
sbb
mov
push
out
and
mov
xchg
pusha
jae
xor
not
pop
mov
pop
fsubrl
ja
lods
dec
fists
rolb
push
mov
and
dec
and
pop
out
fidivl
jge
ljmp
leave
add
iret
insb
xchg
stos
out
mov
fadds
leave
ds
adc
pushf
clc
fwait
cmp
xlat
and
popf
outsl
cltd
mov
mov
enter
nop
push
pop
add
adc
cmp
in
dec
mov
add
testl
dec
pusha
and
xor
iret
xchg
ror
jg
mov
adc
out
ds
push
lods
jbe
add
cmp
out
lret
mov
adc
jl
fucom
enter
fmull
scas
inc
lcall
mov
shll
ds
sbb
into
outsl
sub
dec
pop
add
dec
in
fcompl
pop
js
add
push
sub
leave
fwait
fs
das
adc
into
jo
mov
inc
pop
jmp
push
leave
out
imul
fsubrs
hlt
test
movl
pop
adc
xchg
pop
adc
mov
test
jo
mov
sub
div
movsl
outsl
popf
inc
adc
sbb
inc
mov
loopne
sbb
fiaddl
mov
fists
movsl
cltd
pop
repnz
test
pop
inc
mov
mov
sub
pop
dec
inc
mov
lret
pop
sub
mov
in
in
out
ret
xchg
pop
mov
or
sbb
pop
mov
xchg
dec
push
mov
and
movsl
stos
out
scas
fsubl
pushf
pop
push
sub
xor
and
jbe
in
arpl
ficomps
inc
jle
in
pop
push
test
shr
mov
mov
rol
cmp
cmp
dec
lock
xchg
pop
gs
sbb
fs
push
js
add
or
or
cmpsl
mov
mov
es
dec
cmp
mov
xchg
adc
mov
out
fucomp
xchg
cmc
mov
fisubrl
and
jae
mov
jne
lock
mov
lret
stc
mov
data16
and
xchg
lret
mov
cmc
jne
enter
cwtl
add
shlb
xor
out
insb
push
pop
lds
push
xchg
clc
adc
pop
add
and
popf
and
loop
sarl
mov
mov
cld
push
or
adc
inc
push
xlat
pop
pop
dec
loope
jle
mov
mov
imul
out
inc
cld
aaa
push
loop
mov
js
or
add
fiaddl
ret
push
shl
push
push
sar
pop
add
faddp
jo
jo
inc
div
jg
dec
movb
ss
dec
cmp
movl
xchg
jp
out
mov
cltd
cmp
add
mov
and
jnp
add
sbb
push
mov
cmp
pop
sbb
hlt
mov
insb
call
test
pop
inc
add
mov
test
lret
add
js
mov
mov
xchg
pop
lock
add
sub
push
sub
mov
fsubrs
inc
sub
pop
cmp
jmp
aaa
movsb
pop
lods
dec
stos
rsqrtps
mov
add
mov
cmp
and
aaa
rorl
pop
orl
sbb
fildl
cmpsb
stc
sub
push
cmp
ss
call
mov
insb
stos
mov
ret
mov
and
dec
fmull
bound
pop
stc
out
add
mov
lcall
in
les
pop
add
jp
notb
sub
sbbl
xchg
mov
push
gs
lcall
popa
hlt
test
movsl
xchg
insl
add
bound
and
repz
or
mov
lea
sbb
adc
cmp
cltd
pop
xorb
movsl
sub
xchg
in
dec
pop
sahf
hlt
test
push
sbb
rcrl
xlat
fwait
dec
jl
mov
and
adc
jno
shrb
in
lea
adc
test
mov
jo
lahf
les
xchg
cs
push
dec
push
mov
adc
push
xlat
insb
rcrb
stos
fnstenv
push
js
in
cmc
test
rorl
es
mov
jl
mov
dec
out
mov
xchg
pop
sarb
pop
lret
and
mov
cmp
push
xchg
push
dec
add
mov
out
stc
mov
xor
testb
imul
int3
into
aas
jae
jne
out
mov
fmull
xor
leave
aaa
mov
scas
fidivs
dec
out
xor
ret
push
out
fistpll
add
mov
ss
movsw
das
xor
out
dec
jbe
push
and
xor
cli
lods
repnz
mov
inc
inc
decl
fxtract
out
or
jl
and
xor
xchg
and
push
mov
inc
cmp
aaa
orl
js
mov
mov
mov
push
stos
sub
push
in
mov
test
in
xchg
movsl
or
add
jne
lods
sbb
push
push
and
xor
push
dec
push
cmp
cmp
pop
dec
and
loope
mov
push
adc
xlat
or
icebp
popf
movsl
test
xor
fdivrl
xchg
jmp
std
add
adc
xor
sbb
int
jg
xchg
mov
cmp
xor
leave
scas
fnstsw
jbe
xchg
call
lock
rolb
inc
mov
push
fisubrs
xor
scas
jne
and
mov
sub
stos
jo
mov
les
xchg
sub
mov
call
outsb
incl
fsubrs
and
jae
ljmp
adc
xor
xchg
addr16
mov
mov
push
int
call
inc
outsl
fs
pushf
dec
jbe
adc
mov
and
adc
popa
inc
dec
pop
mov
fistl
cwtl
xchg
pop
mov
jns
xor
lret
jp
pusha
fidivs
pop
adc
hlt
fidivl
xchg
addb
cld
push
pop
add
dec
xlat
mov
in
xor
imul
inc
aaa
adc
cmp
arpl
test
std
sar
repnz
in
adc
lea
cmpsb
xlat
mov
jae
and
jo
cmpsl
jmp
xorl
cmpsb
push
cmp
dec
mov
hlt
cli
adc
roll
ljmp
inc
jl
inc
jmp
popf
out
or
jmp
jbe
pusha
sub
sbb
negb
or
lret
inc
mull
adc
bound
sbbl
pop
mov
out
mov
and
sarl
cmpsl
in
adc
fs
out
addr16
ljmp
push
enter
jns
popf
in
ss
arpl
xor
in
frstor
sub
inc
adc
cmp
orb
repz
push
jns
je
xchg
loop
orl
dec
mov
xchg
jo
loopne
inc
jne
and
rcr
cmp
xchg
ss
cmp
and
or
repnz
or
pop
out
sub
mov
fistl
sti
popf
loop
mov
jno
pop
lea
mov
adc
xchg
cmpsb
mov
push
js
sub
inc
test
adcb
xchg
stc
and
xor
bound
inc
mul
sub
repnz
in
imull
sub
and
je
stos
sti
aam
nop
movsb
push
lahf
push
int
pop
call
outsb
mov
call
jle
or
mov
lock
ret
push
movsb
mov
and
sti
dec
mov
or
mov
push
cld
dec
mov
sub
shll
or
int
mov
lahf
inc
out
jmp
or
andb
shr
inc
fimull
add
cmp
loopne
out
push
mov
cld
sti
push
adc
add
clc
scas
clc
cmp
scas
inc
jg
jns
ud1
and
call
jae
mov
fcmovnbe
cmp
mov
pop
out
inc
cmp
rolw
out
out
stc
insl
nop
fidivrs
cmp
sub
lea
mov
pop
ds
pop
clc
push
push
sarl
push
fmull
cmp
decl
lret
mov
rcll
out
mov
orb
out
and
pop
fstpl
lea
stos
xchg
stc
repz
call
mov
mov
movsb
or
push
sbb
fstps
in
aas
fdivl
pop
sbb
or
and
inc
xchg
add
rcl
out
push
aaa
call
fldcw
call
insl
test
les
aam
mov
subl
stos
divb
adcb
leave
stos
push
fs
mov
dec
mov
ds
mov
and
mov
xchg
dec
inc
ss
add
ljmp
std
or
xor
es
dec
fnstcw
or
xchg
sbb
mov
int3
push
push
jno
adcb
ret
xchg
es
dec
xor
leave
lds
enter
mov
dec
inc
aad
popf
cmp
movsl
fbstp
mov
adc
arpl
jo
pop
into
mov
push
sbb
test
xchg
push
cmp
push
mov
pushf
movsb
nop
fists
cwtl
xchg
sbb
add
imul
ud0
pop
stos
ret
jae
ljmp
shlb
sub
daa
fildll
mov
push
push
shr
mov
repnz
dec
inc
sbb
cmp
or
into
xchg
add
int3
test
dec
and
aaa
cmp
mov
mov
repnz
jecxz
movsw
jae
popa
mov
nopl
mov
pop
mov
or
cmpsl
fbld
into
jg
lcall
mov
sahf
mov
mov
arpl
out
arpl
mov
fwait
xor
mov
div
lret
mov
or
fs
leave
mov
push
mov
cld
cltd
ret
hlt
in
addb
adc
lcall
push
insl
push
mov
gs
mov
push
popa
xchg
js
stos
paddsb
rcll
push
aas
pusha
cmpsl
notb
stos
inc
sub
movsl
lcall
mov
sti
push
xchg
inc
cltd
and
js
scas
shrb
je
sub
mov
in
sarb
mov
adc
sbb
lock
hlt
int3
cltd
mov
sbbb
dec
flds
or
mov
bound
es
inc
add
sub
outsb
push
push
addr16
sbb
leave
xor
jnp
mov
mov
addr16
cld
push
mov
shl
jmp
cmp
add
cld
inc
mov
pop
cltd
xor
pop
cmp
leave
stc
movl
fnstsw
stc
push
stc
les
push
sub
enter
add
cmp
mov
mov
jae
orl
push
add
push
adc
or
inc
xor
jne
addr16
push
xlat
pop
cmp
sbb
clc
adc
leave
jbe
jmp
sbb
rcrl
out
jno
jge
daa
out
and
ds
jbe
cmp
outsl
mov
adc
jmp
push
sub
adc
pextrw
push
and
rolb
sti
test
dec
dec
push
mov
mov
das
push
mov
lldt
adc
or
test
push
into
fimull
or
stos
es
sahf
add
test
inc
or
scas
fs
push
in
jno
call
push
leave
dec
cmp
fdivl
cmp
loope,pt
inc
dec
xor
scas
sub
sbb
test
sbb
adc
scas
int3
jae
push
aad
mov
mov
mov
test
xor
aam
xchg
aad
adc
jp
push
ss
push
inc
ret
mov
inc
push
sbb
mov
inc
fistpl
andl
pop
stos
mov
inc
mov
and
sub
lock
pop
cmp
pop
or
mov
or
mov
fnstcw
mov
push
std
aam
cmp
repnz
mov
aad
adc
pusha
pop
inc
stos
jl
cmpsb
inc
inc
xchg
jb
inc
cs
inc
cltd
arpl
xchg
sub
mov
ljmp
popa
daa
std
rorl
jmp
add
jg
insl
outsl
fsts
lcall
cmp
jno
testb
xor
mov
repnz
movsb
loopne
mov
test
enter
into
data16
pop
subl
cltd
jmp
xchg
mov
inc
sub
xchg
popa
loope
sbb
pop
sbb
leave
pushf
cmp
fcomps
push
add
jbe
insl
inc
arpl
lds
in
pavgw
jle
mov
xchg
jbe
sbb
lcall
inc
add
add
mov
sub
pop
cmc
xchg
ret
arpl
xchg
cmp
mov
fidivs
or
movsl
dec
jno
dec
addb
sbb
xchg
icebp
xchg
xchg
dec
and
sarl
inc
jl
addr16
and
or
sub
lret
adc
sub
xor
pop
dec
insl
mov
test
sub
inc
sub
lock
inc
adc
test
je
jecxz
xchg
ret
xor
in
jb
testl
jmp
or
mov
ret
jmp
pop
pop
mov
hlt
dec
jnp
out
sti
dec
cmp
add
leave
xor
sub
mov
in
int3
xchg
add
push
sbb
shlb
sub
push
sahf
shlb
int3
scas
mov
aaa
pop
push
popa
or
lea
test
testl
or
scas
shl
mov
add
lock
push
ss
mov
xorb
push
out
add
inc
subl
lock
inc
cltd
cmp
outsb
fdivl
dec
rep
cmpsb
pop
mov
loop
cmpsl
movsb
mov
dec
mov
arpl
mov
gs
push
pop
test
enter
and
cs
push
sti
fadd
iret
dec
or
add
cmpsb
sahf
in
gs
insl
jno
ja
jnp
push
jle
xor
xor
mov
xor
sbb
lock
pop
mov
int3
push
sub
mov
and
pop
cmp
mov
xorl
es
stos
push
sti
adc
xchg
dec
jmpw
js
in
adc
outsb
cmp
mov
add
test
mov
push
xor
push
fstpt
xchg
and
push
repz
out
pop
push
dec
cmp
inc
pop
dec
loopne
scas
sub
and
push
mov
mov
push
mov
test
fdivrl
out
pop
mov
and
dec
add
xor
adc
pop
mov
aas
pop
and
mov
bound
addr16
dec
sahf
cmpsl
xor
pop
inc
inc
push
movsl
das
not
xchg
add
jp
pop
incl
sbb
mov
dec
xchg
std
push
push
cli
jmp
inc
inc
sar
adc
xor
inc
xchg
lods
adc
cmp
and
aaa
sbb
or
mov
mov
movsl
scas
pop
push
mov
addb
mov
rolb
mov
add
and
xor
sbb
mov
push
repnz
push
pop
scas
mov
xchg
je
cmp
sbb
fwait
and
fstps
inc
data16
sbb
cwtl
sub
pop
or
push
pop
es
aad
fsubl
pop
aaa
aad
scas
iret
shlb
orb
jne
sub
arpl
mov
lcall
or
fprem
and
in
imul
vprotq
xchg
push
fisttpll
stos
mov
mov
xorl
filds
into
jp
dec
mov
pop
mov
clc
push
lock
xchg
jbe
sbb
xor
pop
xor
cmp
das
lret
ja
sub
lcall
test
ds
scas
sbb
mov
call
mov
cwtl
xchg
sub
mov
insl
inc
adc
push
leave
or
sbb
imull
fbld
push
cmc
mov
out
mov
cmp
xlat
xchg
cmc
jns
fwait
or
dec
adcl
and
mov
add
dec
jmp
push
aas
inc
fwait
nop
jno
stos
inc
notb
add
out
mov
aam
jle
add
cmpsl
shll
es
sub
cmpsl
jp
test
xchg
addr16
cmpb
mov
jbe
fistpll
cwtl
jbe
or
fs
sub
jg
insb
movsl
sub
aad
sub
jbe
imul
jb
mov
inc
stos
test
mov
ss
out
shr
movhps
dec
mov
ljmp
cmp
mov
xor
jns
dec
jmp
je
insb
ja
das
lods
add
xlat
and
sub
xor
inc
outsb
jae
out
inc
mov
or
push
test
jmp
adc
js
insl
addb
movsl
scas
mov
mov
sbb
push
cmp
mov
push
std
cmp
inc
pop
repz
aad
aaa
rol
pop
and
xor
push
cmp
notl
pop
xchg
and
stos
cmpb
repnz
mov
mov
mov
jns
mov
mov
mov
sti
xchg
push
jne
cli
inc
lock
hlt
push
clc
test
clc
inc
dec
mov
stc
sbb
mov
sub
inc
mov
dec
mov
sub
inc
or
cmp
clc
jbe
inc
lods
xlat
pop
push
pop
inc
or
push
stc
aam
push
jns
lock
xchg
mov
jne
xor
into
xchg
cmc
add
sbb
jne
jp
jbe
adc
jmp
fisttps
into
clc
lock
test
cmp
push
inc
push
cmp
out
in
fiadds
sti
cmp
cs
rolb
cmc
daa
in
pop
into
clc
jecxz
cwtl
lahf
aas
cltd
mov
repz
xor
daa
div
cmp
adc
std
push
popa
dec
push
cmp
mov
iret
dec
push
pop
add
and
sub
jno
mov
inc
or
int
lds
adc
mov
insl
mov
movsl
lods
lock
subb
mov
push
push
xchg
pushl
adc
xchg
inc
push
mov
and
cmc
incb
aas
and
xchg
sub
xchg
cmp
mov
repz
les
sbb
mov
rorb
jle
fistps
mov
and
lds
js
pop
lods
mov
popa
in
fistl
mov
push
and
in
pop
mov
xor
ret
arpl
or
mov
mov
sahf
je
or
xchg
push
int
or
inc
mov
push
jg
out
mov
call
cmp
lea
adc
mov
shrb
pushf
cs
shrb
outsb
icebp
fnstsw
mov
arpl
mov
jne
pop
fidivl
ja
pop
or
inc
mov
out
xchg
inc
inc
imul
lret
aad
adc
fidivs
loop
andl
fdiv
xor
scas
mov
push
repnz
arpl
test
and
add
cmp
sbb
mov
xchg
cmp
lods
mov
add
push
jle
ja
cmp
into
mov
jae
sbb
jno
sahf
data16
mov
pop
cmp
mov
and
iret
push
in
rorb
jge
cwtl
adc
jmp
das
out
lock
repz
lcall
out
add
shrl
and
sarl
int
ror
outsb
mov
push
xchg
icebp
aad
cmp
jbe
add
ja
lods
mov
call
leave
int
and
loope
ss
adc
mov
fwait
js
int
into
leave
test
cwtl
stos
out
leave
out
pop
into
jge
and
pop
repnz
pusha
cmpsb
lods
sbb
pusha
cs
or
jnp
cmpsl
es
pop
arpl
leave
mov
es
fimull
cwtl
add
push
mov
repnz
divl
stos
in
and
cmp
sbb
jns
push
mov
dec
mov
pop
inc
fs
fisubrs
sub
imul
adc
int
mull
cld
adc
ficoml
in
sarb
add
cmp
and
dec
cli
ljmp
or
push
mov
pop
outsl
xchg
or
ficompl
ficompl
push
insb
lds
mov
cmp
pop
je
sti
jnp
push
mov
push
xchg
and
dec
inc
sub
mov
or
or
xlat
js
add
xchg
mov
out
pop
adc
in
mov
mov
lret
push
mull
cmp
outsl
fwait
inc
dec
cmp
adc
sbb
jbe
mov
mov
in
sbb
xchg
test
bound
shlb
mov
xchg
push
int
pop
aaa
adc
mov
push
shll
xlat
rcrb
insb
push
cmc
adc
add
mov
cmp
mov
dec
dec
push
pop
lods
imul
push
xchg
push
lret
adc
addr16
sub
sub
outsb
mov
and
test
push
ss
mov
in
fs
test
push
into
mov
cmp
fadd
push
shlb
cmp
iret
daa
mov
mov
or
pop
enter
mov
mov
cmc
lods
sbb
sbb
mov
mov
mov
leave
inc
movsl
xor
sbb
imull
jp
cmc
stc
pop
and
cmpsb
stos
je
in
movl
jns
js
xchg
shll
mov
sub
push
ss
out
jle
xchg
mov
into
jge
xor
cmpsb
add
arpl
push
ffreep
outsb
cmp
adc
xchg
xchg
jbe
xchg
ret
xchg
xchg
sbb
sbbl
das
shll
lcall
sub
mov
sbb
jae
and
aad
sahf
adc
sbb
lea
in
insb
ret
mov
lods
and
repz
jl
cmp
and
aas
int3
push
dec
imul
mov
out
es
add
out
pop
daa
subl
aaa
arpl
jmp
shll
cmp
mov
stc
shld
mov
ljmp
add
adc
xor
cmp
fwait
jge
test
out
popf
jg
out
lock
out
jmp
shll
push
push
cmp
je
stos
fstl
leave
fsubrl
add
push
shll
sbb
inc
ljmp
inc
ss
cld
popa
mov
stos
xor
push
nop
jg
jl
sub
dec
xor
jns
pusha
call
movsb
jmp
dec
xor
sbb
pop
sbb
mov
dec
movsl
sahf
pushf
inc
je
mov
cmpsl
ja
inc
xor
mov
imul
cld
and
mov
sahf
mov
test
xor
lcall
mov
out
addl
ret
push
hlt
loopne
mov
xchg
mov
scas
sub
fisubs
mov
xchg
pusha
shlb
out
jg
or
mov
add
rclb
ficoml
fstps
lcall
out
mov
fldl
and
out
xchg
enter
int
xchg
push
push
fwait
dec
loopne
mov
adc
xchg
pop
les
stos
aas
sbb
cmp
dec
sarl
scas
out
lods
fsubl
push
into
lock
lret
push
repz
inc
mov
pop
test
fdivrp
inc
inc
inc
cmc
sub
mov
xor
test
and
sub
orl
test
and
fs
pop
test
cmpsb
ja
insb
int3
mov
xchg
test
xlat
xchg
xchg
add
add
push
sbb
and
js
andl
pop
xchg
jne
adc
sti
mov
dec
xor
mov
or
mov
dec
push
or
divl
xchg
add
jg
dec
lret
movsl
xor
mov
push
add
dec
mov
aad
or
decb
enter
dec
ret
mov
pop
ja
xchg
mov
xchg
addb
dec
xchg
es
dec
daa
je
mov
es
dec
and
jecxz
push
inc
sbb
mov
out
mov
in
mov
inc
cmc
fnstsw
fcomps
push
rorb
mov
shlb
dec
mov
jb
lods
nop
out
imul
jp
fmul
mov
pop
negb
daa
cwtl
dec
loopne
pusha
jne
subl
lods
sbb
insl
das
adc
mov
push
movsl
mov
mov
mov
mov
loop
sti
and
pop
int3
jle
in
rcrl
adc
dec
sub
cmp
js
xor
adc
fstpl
xlat
dec
sbb
mov
outsl
sub
imul
jo
jae
sbb
push
cmp
mov
call
je
scas
adc
jg
iret
lahf
xor
pop
or
mov
add
imul
sub
aam
nop
pop
push
mov
xor
rol
lods
or
outsl
mov
sub
insb
add
lcall
xchg
pop
jmp
xchg
xorl
imul
dec
push
scas
mov
idivl
inc
mov
sbb
insb
mov
sbb
fmuls
popa
stc
mov
mov
pop
inc
imul
pop
repnz
out
cmpsb
call
stos
mov
pop
ret
xchg
push
cmp
fldenv
mov
push
out
sub
add
movb
sub
ret
xchg
sub
aas
sub
shrl
insb
xor
adc
aaa
sub
xor
bound
ds
rclb
dec
inc
daa
inc
cli
notl
dec
xor
mov
cwtl
jl
xchg
push
in
mov
mov
lods
dec
imul
adc
push
cmp
jle
inc
shlb
pop
adc
push
dec
hlt
pop
cmpsb
xchg
fdivr
mov
sbb
dec
jne
push
in
cld
push
sahf
pop
sbb
pop
mov
lock
or
sub
fdiv
mov
inc
add
push
add
notl
imulb
pop
dec
jle
sub
imul
push
mov
adc
data16
cli
mov
insl
in
xor
jae
sub
out
mov
fsubl
pop
dec
pop
inc
je
mov
mov
push
dec
mov
cltd
rol
jmp
mov
sub
mov
fcomps
in
mov
or
scas
sbb
loop
mov
lahf
sub
mov
and
pop
adc
jg
repnz
pop
cs
jmp
fbld
outsb
cmp
test
jns
sub
cmp
stos
icebp
xor
clc
push
popa
arpl
cmp
in
adc
mov
dec
pop
jmp
dec
or
jae
cs
out
mov
inc
inc
mov
pop
mov
mov
add
inc
rorl
mov
gs
pop
mov
jle
cli
jmp
ror
cmp
out
pop
fwait
mov
imul
dec
xor
xlat
xor
cwtl
mov
dec
repz
icebp
sahf
mov
cmp
or
pop
cmp
imul
sub
sbb
std
rcrb
and
ret
hlt
cmp
pop
push
imul
shll
and
rorl
and
fcomp
xchg
ljmp
cld
or
xor
jnp
sbb
lret
push
fdiv
mov
insl
sub
cmc
mov
xchg
pusha
and
sub
push
sbb
jecxz
mov
pop
push
aas
rolb
push
mov
pop
mov
add
rcrb
insl
test
cmp
test
mov
mov
daa
ret
in
out
popf
push
test
out
push
push
invd
js
fsubrl
or
xor
stos
ja
jne
xor
push
xchg
mov
sub
push
pop
ja
push
and
inc
hlt
cmp
imul
mov
or
mov
ret
xlat
test
adc
xchg
out
add
daa
fcmovnbe
pushf
dec
inc
ret
fisttpl
fwait
rclb
sarb
mov
fcoms
ret
shll
addr16
out
ja
scas
mov
lret
mov
cmpl
jnp
ret
mov
scas
fucomi
mov
sbb
push
jbe
ror
dec
sbb
pop
hlt
jl
push
sub
out
push
data16
and
sahf
arpl
dec
cmp
inc
sub
xor
clc
or
int
pop
jp
mov
jnp
xchg
sub
sub
dec
pop
lea
stos
mov
aaa
jno
fiaddl
outsb
nop
popf
jns
xor
fcmovne
push
adc
jle
pause
insb
xchg
dec
ret
dec
lds
pop
sub
dec
sub
rclb
jbe
nop
outsb
dec
jbe
rorb
dec
push
or
xchg
inc
pusha
push
sarl
ret
mov
arpl
push
data16
add
xor
push
dec
fcompl
lret
xchg
loopne
xchg
addr16
rcl
sti
cwtl
xchg
dec
cltd
mov
ss
out
jno
decl
jae
fstps
sub
push
xchg
ss
pop
push
xor
outsb
push
adc
cmp
push
cmp
iret
pusha
loop
cmp
adc
sub
mov
ret
mov
push
lods
add
stos
loopne
sbb
mov
xchg
adc
fwait
mov
cwtl
pop
scas
add
imul
sbb
dec
xor
loope
js
gs
push
sbb
dec
pop
arpl
lcall
testb
mov
addl
stc
sti
lea
lret
xchg
cltd
bound
ss
sub
sbb
xlat
aad
dec
in
fiaddl
ljmp
test
imul
xchg
enter
ss
fiaddl
cmp
dec
aam
les
sahf
cwtl
pop
stc
pop
add
jmp
mov
jmp
fdivs
xor
sbb
jmp
outsb
lahf
inc
fnstsw
xchg
mov
add
cld
inc
pop
cmp
in
add
sub
jmp
or
outsb
loopne
or
das
lret
in
dec
fisubl
dec
push
out
add
imul
dec
cld
mov
mov
inc
or
leave
iret
mov
mov
aaa
xor
inc
mov
inc
je
adc
adc
sub
pop
sub
cli
cmp
push
repz
lret
leave
scas
pop
and
add
push
cltd
or
rcrb
xchg
add
pop
or
outsl
sub
pop
inc
rcll
cmpsl
jp
add
lcall
shr
and
cmpl
iret
mov
cmp
decl
movsb
in
sbbb
rcll
ljmp
dec
les
outsb
shlb
dec
add
es
pop
dec
fstps
mov
les
pushf
pop
xlat
jl
scas
push
mov
fnsave
sub
xor
ret
cltd
test
jmp
xchg
mov
loope
adc
stos
xor
cmp
lret
sbb
movsb
hlt
sbb
lds
jecxz
out
aam
cwtl
ljmp
clc
negb
pop
dec
and
fldl
xchg
imul
loopne
test
mov
test
push
dec
insb
push
popf
cmp
cmc
dec
and
cld
jl
cmp
into
push
mov
movsb
pop
push
rcl
mov
sub
pop
aad
mov
scas
orb
push
scas
lods
xor
push
sub
dec
sub
xor
adc
iret
insl
jmp
add
xchg
rorl
popa
xchg
mov
sbb
mov
dec
push
not
adc
inc
and
loop
pop
pop
add
cmp
fwait
push
addr16
jl
inc
add
mov
movsb
lods
leave
mov
icebp
push
pop
insl
and
scas
push
mov
ret
pusha
stos
aam
out
ss
and
or
adc
in
sub
jle
jbe
xchg
xor
test
fildll
js
mov
fsts
addb
lret
out
pop
jg
mov
leave
push
xor
push
xor
mov
mov
rol
pop
add
mov
outsl
mov
push
jl
loopne
cmpxchg
pop
addr16
nopl
stc
das
pslld
adc
and
cmovg
sti
ljmp
test
mov
ds
mov
xor
xchg
sub
dec
sarl
out
or
push
mov
dec
lahf
inc
and
and
xor
sti
xchg
mov
pop
fimuls
xchg
sbb
xchg
mov
ljmp
or
mov
xor
mov
mov
out
pusha
into
pusha
ror
mov
pop
push
repnz
icebp
mov
add
int
fsubrs
and
in
pop
das
jno
mov
inc
in
xor
add
outsl
popf
mov
cwtl
sub
xchg
ds
ret
dec
cmpsb
mov
fists
or
or
xchg
int
inc
fdivs
pusha
inc
stc
sub
and
xchg
lahf
loopne
imul
subl
roll
ljmp
sub
or
repnz
jmp
push
mov
das
js
dec
xchg
jp
mov
ljmp
ret
sub
fiaddl
jl
icebp
dec
dec
or
mov
pop
dec
push
sub
hlt
mov
push
movsl
pop
inc
push
push
xchg
enter
mov
in
xchg
mov
inc
clc
testl
ja
dec
xchg
aaa
inc
push
cmc
cmpsb
cmp
aaa
fbstp
and
ss
push
shrb
cmpsl
into
jae
and
cwtl
cld
jno
in
mov
xchg
pop
outsb
lcall
cmp
cmp
add
mov
jecxz
pop
outsb
in
movd
lcall
cmpsb
inc
push
aaa
outsl
xor
dec
push
mov
addr16
xchg
pop
sub
jge,pn
test
pushf
mov
aad
dec
jo
push
testb
and
popf
cwtl
or
xchg
xchg
pusha
push
dec
cwtl
out
stos
lret
cmp
mov
test
faddl
repnz
cli
insb
outsb
xchg
jb
mov
test
xchg
push
jp
mov
push
nop
insl
mov
sarl
fcompp
xor
xor
xbegin
fsubr
adc
mov
or
aaa
mov
enter
adc
outsb
enter
lret
sbb
inc
dec
jge
mov
ret
add
cs
push
and
cmp
ret
inc
shrb
sbb
std
pop
aaa
cwtl
dec
sub
clc
std
cmc
xor
jmp
ret
inc
nop
in
sub
push
mov
sbb
in
lock
fldl
inc
scas
stc
enter
sbb
arpl
mov
into
movsl
add
push
cwtl
lahf
jmp
call
jg
cld
test
cmpl
in
lea
or
test
stos
xchg
push
add
jo
cmp
mov
push
jnp
cld
fs
jg
hlt
or
sub
leave
and
cwtl
xor
jae
aaa
loop
incb
js
pop
popa
enter
shl
cmp
fs
std
fwait
dec
notl
and
inc
int
and
mov
pop
mov
lods
in
lods
mov
test
jmp
cmp
lret
out
sar
movsb
dec
ljmp
ret
dec
popf
add
adc
push
subl
movsb
aad
add
dec
shrb
ret
jo
push
and
push
jp
mov
inc
pop
and
jecxz
test
pop
cmp
pop
stc
add
cld
add
aas
lret
push
xchg
mov
mov
jns
scas
faddl
popa
xchg
rolb
and
inc
sarl
inc
inc
test
mov
and
test
loop
inc
sub
addl
cwtl
xchg
push
cmpsb
adc
mov
dec
pop
divl
adc
jns
xor
fwait
mov
dec
push
out
das
sti
jno
jb
xchg
adc
cs
repnz
int3
push
int
cwtl
out
call
loop
sar
sub
rcr
push
fists
mov
add
pop
std
lock
or
sbb
sub
and
repz
xor
pop
jae
xor
push
daa
rolb
hlt
sub
jo
ljmp
xchg
xor
insl
test
fdivl
add
fsubr
imul
aam
fldenv
xor
out
in
adc
mov
cs
dec
movsl
jae
sbb
jge
aad
cmp
lods
repz
fidivs
cmc
sti
or
ret
xchg
adc
pop
mov
mov
jecxz
clc
pop
and
or
imul
ds
sbb
dec
cwtl
add
sub
ret
mov
sar
mov
sbb
sbb
mov
cmp
int
loopne
and
sub
stc
sub
push
sarl
sbb
xor
inc
cmp
sub
adc
stos
pop
lcall
sub
mov
jle
lea
add
mov
sub
cli
jns
mov
mov
xor
mov
cmp
inc
in
cwtl
frstor
dec
add
lret
jno
fsub
test
pop
shll
int
scas
xchg
inc
jnp
mov
xchg
mov
std
mov
adc
je
into
push
add
sub
sbb
xchg
call
xchg
ror
push
cli
loop
in
sbb
arpl
dec
xor
push
xchg
in
or
jg
inc
inc
stos
and
enter
push
or
leave
mov
es
or
dec
popa
xor
mov
int
sti
das
xor
push
les
inc
clc
in
cmpsb
inc
pushf
push
fiadds
pop
fcomip
mov
sbb
mov
mov
add
insl
xchg
sarl
shrb
test
jo
xchg
pop
jp
gs
jecxz
sub
imul
push
xor
or
addr16
dec
in
pop
addl
xorl
popf
xchg
bound
xchg
mov
in
mov
fnstcw
xlat
cmp
ss
pop
imul
addl
mov
cwtl
cld
cmp
icebp
jo
lret
cmp
inc
nop
fdivrs
dec
xchg
aad
push
inc
inc
lea
sub
cmc
les
pusha
idivb
mov
sub
add
mov
jle
aam
push
and
push
loopne
mov
shlb
sbb
out
je
mov
push
push
pop
xor
es
pop
add
push
or
xchg
xor
test
ret
lcall
xor
test
sub
mov
xchg
push
ss
add
jno
mov
fs
cltd
rorl
daa
xor
or
adc
lret
lahf
jb
in
push
lock
ja
ss
jmp
cmp
hlt
jp
adc
test
dec
or
mov
or
in
enter
inc
loop
enter
xor
shrb
cld
add
inc
and
bt
out
mov
push
push
push
or
mov
sbb
pop
inc
arpl
xchg
mov
loopne
xchg
xchg
imul
mov
jle
std
inc
mov
sahf
push
mov
test
adc
sbb
sub
jno
mov
xlat
add
xor
sub
fwait
testl
adc
fwait
xor
lock
sbb
addl
dec
cmp
and
je
mov
adc
jae
cmp
xchg
inc
adcb
lea
inc
pop
lret
xchg
adc
adc
icebp
xor
add
sbb
shll
pop
ret
test
adc
inc
mov
pop
sub
xchg
out
leave
hlt
fstl
mov
xchg
ljmp
test
rcr
hlt
lods
mov
iret
jecxz
or
sub
cmp
add
sub
scas
fldt
mov
sbb
shlb
lods
cmp
sub
sub
movsb
fisubl
lret
in
fsubrs
mov
mov
loopne
push
or
rclb
jmp
mov
sti
pop
popf
jl
movsb
cmp
int3
mov
sub
xchg
mov
xchg
and
push
push
imul
dec
pop
out
lret
mov
sbb
adc
mov
adc
loopne
adc
lods
and
or
mov
adc
adc
sub
stc
pop
lock
hlt
adc
addr16
ss
scas
notb
cmpsb
loopne
add
ficomps
stc
add
int3
int3
fisubrl
iret
xor
inc
cmp
les
movsl
mov
ret
jg
pop
test
pop
rorl
xor
add
shrb
pop
aas
jo
imul
into
sub
pop
push
out
repz
stc
rolb
insl
push
lcall
and
out
mov
adc
shrb
xor
mov
mov
mov
rorl
mov
cmpsl
lcall
xor
adc
pop
movsb
or
sbb
push
jbe
pop
setb
iret
imul
xchg
xchg
or
or
enter
cli
je
in
sti
pop
rcrl
mov
fildll
sbb
mov
jns
xor
cmp
push
sub
sub
pop
scas
fwait
mov
cmp
mov
aam
mov
pop
popf
fidivl
push
loop
push
pop
xchg
lret
jb
lods
dec
cmpl
testb
xlat
or
in
imul
dec
lods
aaa
outsl
or
cmp
lods
pop
lret
inc
out
loopne
inc
rep
cmc
push
test
int3
xor
mov
xchg
cwtl
adc
sub
arpl
push
scas
das
pop
push
stos
or
ja
ret
into
roll
jnp
lock
lahf
inc
xchg
cmc
bound
cmp
int
mov
dec
loop
dec
ss
popa
xchg
cmp
and
cmpsb
shlb
cltd
bound
lods
out
insl
out
push
cwtl
mov
inc
dec
dec
push
or
jbe
cs
sbb
push
and
mov
test
adc
add
fwait
and
sub
xchg
cli
mov
jle
movsb
add
sbb
add
cmp
mov
into
fcomi
les
inc
or
orl
sub
int
add
rorl
inc
mov
and
dec
ljmp
sub
mov
push
cmp
out
lods
jg
test
out
stos
testb
xor
stos
inc
sub
inc
cmpsb
popf
test
out
mov
enter
cmp
in
fbld
cmpsb
loop
jmp
addl
ss
sub
xor
rcll
sub
fwait
pop
xor
ljmp
mov
bound
cmp
sbb
xor
push
aas
push
clc
das
popa
xor
dec
iret
pop
pushf
pxor
add
cltd
aas
ds
into
shl
out
mov
sbb
outsb
lret
in
xor
cmpsb
pop
ret
movsb
sub
shrb
mov
imul
inc
inc
movb
clc
lods
addr16
xchg
jmp
dec
xchg
sti
xchg
xchg
std
repnz
jp
outsb
iret
iret
mov
mov
imul
add
fcomi
frstor
popl
mov
sbb
jle
es
gs
mov
fdivp
iret
addr16
jo
xchg
dec
cltd
adc
outsl
sahf
fucomp
jb
cmp
repnz
jecxz
sbb
movsl
into
cwtl
aas
cmp
mov
test
pop
jmp
pop
loope
cmc
mov
xor
stos
sbb
stc
xchg
jnp
mov
outsb
sbb
stos
mov
xchg
push
shl
hlt
fists
roll
jge
cmp
pushl
push
sbbl
sbbl
loope
or
daa
les
daa
pusha
stos
pop
push
xchg
jecxz
add
ja
std
xor
shlb
add
gs
jg
dec
jmp
lret
xchg
arpl
inc
and
shrl
sbb
lods
rorl
pop
pop
movsb
pop
leave
mov
shlb
out
jecxz
fst
ret
pop
push
cmp
mov
and
insb
adc
fistps
pop
xchg
mov
jo
fisubrl
shrl
cmpsl
and
push
rclb
clc
daa
jnp
cltd
lock
mov
xor
adc
cmp
jbe
add
fcomps
xchg
pop
nop
pop
sbb
sbbl
leave
scas
jns
imul
shll
xor
lret
hlt
inc
loope
inc
shl
iret
femms
addb
and
inc
or
cmpsl
add
jmp
xor
test
xchg
mov
add
lea
insl
xor
and
xchg
mov
push
arpl
fwait
negl
pop
andps
xchg
stc
sbb
ja
test
sti
rcrb
add
hlt
ljmp
fcoml
xchg
loop
cmp
stos
mov
or
enter
popf
fsubp
jmp
sub
pop
fcoms
and
out
cwtl
push
test
in
mov
add
lret
xor
fwait
adc
jge
ljmp
push
cwtl
bound
add
mov
or
cwtl
adc
out
clc
push
xchg
sarl
mov
hlt
test
add
adc
jae
rcrb
les
mov
mov
loope
nop
adc
sub
fistl
jmp
inc
jnp
les
ja
mov
push
cmp
jne
adc
adc
call
shlb
test
mov
adc
xlat
ret
ja
movsl
or
outsb
ljmp
mov
out
repnz
movsl
outsb
fst
gs
je
sti
push
push
sarb
push
mov
and
outsb
mov
mov
sahf
mov
xor
dec
jge
jne
jb
clc
bound
js
cld
sbb
xchg
xchg
shll
aaa
ss
xlat
or
jo
cli
pushf
fcos
dec
and
push
popa
inc
rcrl
lret
fwait
arpl
mov
ret
stc
inc
push
in
sbb
sahf
outsb
inc
std
imul
mov
out
jp
popf
ds
xchg
jbe
push
cmp
icebp
xchg
jle
in
lods
loop
scas
cmpsb
mov
sti
aad
mov
aad
xchg
scas
js
lahf
ja
stc
or
ljmp
inc
dec
test
lods
adc
push
lods
inc
rcl
pop
mov
cmp
test
inc
jmp
and
jb
dec
test
push
adc
xor
ficomps
lock
ret
xor
ds
iretw
push
stos
fs
mov
or
mov
add
or
loopne
or
fdivs
mov
dec
test
cld
jno
add
add
adc
inc
lahf
mov
data16
ljmp
xor
leave
int3
out
pop
adc
jg
adc
cmp
xchg
mov
cmp
ret
jge
dec
mov
jnp
xor
dec
pop
adc
imull
nop
inc
mov
mov
adc
bound
hlt
and
add
inc
dec
clc
lock
jg
dec
mov
xchg
in
push
fnstenv
push
cltd
fcmove
divb
bound
int
mov
sbb
mov
aaa
xchg
sub
les
rorl
std
ja
cmpsb
addr16
dec
and
lds
mov
adc
lds
sub
mov
and
add
jle
lds
jg
insl
das
push
mov
dec
fdivl
imull
mov
add
mov
fnstsw
rcll
es
pop
fdivrs
shlb
ret
and
mov
sahf
enter
iret
dec
fiadds
ss
js
lds
mov
mov
arpl
shrb
pop
popa
sarb
movsb
lods
lods
adc
jge
xchg
notl
es
ret
punpcklbw
les
gs
mov
jp
pop
fcomi
cmp
jno
jecxz
andl
aam
mov
mov
sbb
jo
lret
bound
repnz
test
leave
jecxz
xchg
mov
mov
cmpsl
sbb
pop
xchg
add
cmc
and
mov
push
adc
and
push
adc
insb
cs
aam
lds
xchg
movsb
adc
inc
lods
push
ss
add
scas
pop
xlat
cmp
sbb
pop
pop
mov
cmc
fimull
insb
out
inc
rolb
ficoms
rolb
push
cmp
jns
hlt
push
adc
pop
ljmp
call
add
adc
mov
popa
ja
dec
add
xor
cmp
jne
imul
push
in
scas
inc
mulb
adcl
stos
ja
stos
cmp
mov
pop
mov
push
pop
mov
xchg
xchg
in
sahf
mov
mov
test
sub
push
mov
scas
xor
rorl
cld
les
dec
xchg
mov
pusha
mov
mov
ds
push
sbbl
lret
cmc
jno
adc
xor
dec
xor
inc
into
mov
mov
mov
insl
or
mov
mov
pusha
sbb
push
ret
push
push
dec
mov
dec
sarb
lret
fldl
outsb
push
movsb
xor
popa
sub
mov
dec
dec
add
gs
jmp
push
pop
mov
cmp
movsl
jge
cltd
sub
push
out
cmp
push
not
iret
push
cmpb
mov
pusha
in
mov
dec
mov
out
cmp
push
rclb
jo
retw
ss
jne
mov
add
xchg
sbb
cmp
pop
mov
xlat
fwait
xchg
out
sub
fdivrs
and
cltd
rcl
adc
es
jge
xchg
xor
in
leave
xchg
je
sysret
lock
hlt
orb
sbb
cmpl
icebp
test
in
fdivrp
xor
pushf
lods
inc
enter
hlt
out
xchg
pop
testb
ja
es
mov
push
mov
jp
mov
cli
mov
or
mov
pop
in
vfmadd213ss
repnz
xor
cmpsb
push
xor
and
out
mov
inc
or
or
adc
push
lds
ss
mov
push
shl
mov
mov
cmpsl
call
inc
loope
lret
pop
fisubl
addr16
cmp
call
pop
ljmp
and
mov
data16
sbb
and
popf
notb
mov
push
dec
cmp
inc
jo
dec
adc
nop
adc
movsb
add
call
and
sbbb
clc
daa
cmp
dec
mov
mov
test
and
xchg
xor
hlt
pop
icebp
daa
xor
jmp
mov
jge
pop
xlat
sbb
addl
dec
jae
pushf
enter
xlat
aaa
add
lret
out
stos
adc
mov
dec
push
pop
mov
out
call
jl
cmp
push
mov
adc
add
iret
jbe
xchg
sbb
dec
jp
lret
lcall
dec
adc
xchg
fnstenv
fisubrl
mov
cmp
stos
mov
fwait
fwait
lock
adc
cltd
pop
mov
lret
adc
pop
adc
lret
repz
jmp
shrb
aas
stc
das
movsl
jne
adcb
adc
test
mov
sti
push
push
arpl
dec
pop
ljmp
mov
mov
ret
push
popf
push
and
dec
filds
enter
int3
dec
inc
pop
in
fdiv
fdivrp
or
pop
sbb
jmp
inc
out
push
xchg
stc
cltd
xor
je
iret
sbb
and
push
jle
sbb
sahf
pop
mov
or
imul
mov
cmp
and
and
cmpsb
gs
aam
dec
dec
push
or
jg
pop
loop
loope
div
jge
sar
mov
mov
scas
and
mov
aad
pop
and
mov
scas
xlat
scas
gs
iret
shlb
sbb
push
sub
push
fs
popa
mov
push
adc
jnp
sub
push
fsubrl
ja
or
or
dec
cmp
cmp
addl
das
adc
jmp
repnz
sub
mov
movsb
mov
dec
iret
call
xchg
or
rolb
call
jge
adc
mov
bound
pop
or
mov
jb
fs
jb
sbbb
lret
por
inc
lcall
push
pop
movsb
inc
push
fcoms
rcrb
sbb
aad
fldcw
push
pop
loopne
pop
and
xlat
std
pop
es
in
and
mov
or
push
lret
aaa
xchg
dec
rorl
dec
sbb
insb
or
sub
xor
lock
and
lcall
aad
cmp
push
pushl
pop
out
or
xor
fsts
or
fcompp
dec
repz
sub
push
inc
das
sub
xchg
outsb
mov
out
or
stos
sub
insb
in
out
add
push
inc
pop
out
or
pop
mov
dec
cmovb
pop
pop
xchg
push
xchg
adc
jb
mov
mov
cmp
dec
add
or
es
stos
cs
and
add
int3
movsb
test
mov
cli
pop
adc
inc
stc
add
testb
jns
dec
movsl
mov
loopne
xor
cmp
aad
adcl
gs
sub
stos
or
adc
test
cmp
inc
out
shll
shll
jmp
shll
rcll
dec
xchg
push
insb
push
jle
pop
test
mov
scas
jo
imul
pop
mov
push
lret
pop
rcrl
rclb
mov
lods
dec
stc
or
xchg
mov
aam
dec
arpl
cmp
sbb
push
stos
mov
rorl
pop
cltd
inc
in
scas
pop
js
insb
mov
shlb
add
aad
lret
nop
sbbl
scas
pop
push
dec
sub
fsubs
sbb
mov
push
inc
ficompl
inc
imulb
lods
icebp
in
add
sbb
mov
popa
xor
or
adc
mov
lea
and
lahf
push
adc
movsb
mov
inc
jg
jmp
xchg
mov
or
mov
rdmsr
jns
jp
inc
dec
mov
jecxz
loop
xor
and
jne
repz
mov
bnd
adc
ss
cmp
mov
inc
std
cmp
clc
mov
cmp
dec
mov
push
jb
cwtl
outsb
xor
lea
adc
test
lahf
jb
add
in
fwait
mov
sbb
sbbl
mov
lcall
sti
adc
mov
lahf
arpl
dec
scas
cmp
adc
nop
ret
jp
or
arpl
popf
cmc
push
ljmp
fcompl
enter
jge
fisubrl
lret
xchg
sbb
mov
adc
popf
mov
out
inc
xor
xor
push
lea
int
and
push
jp
add
xchg
and
es
push
xor
fistpl
hlt
fistl
mov
cmp
sbb
push
daa
out
jg
addr16
sahf
imul
call
fiadds
jl
aas
lcall
cmpsl
pushf
push
pop
add
gs
cltd
xchg
mov
adc
scas
inc
rcrl
xchg
add
into
fimull
xchg
fwait
inc
mov
in
add
jge
out
cli
fcoms
xchg
and
mov
dec
jne
mov
or
fbstp
xchg
int
adc
inc
data16
sbb
jns
mov
les
sub
jp
fwait
mov
repz
or
mov
and
and
dec
push
xor
or
inc
mov
and
pop
sbb
cli
pop
inc
push
testb
fldt
mov
jno
dec
and
pop
sub
mov
test
cmp
outsb
test
movsl
sub
inc
sbb
xchg
fidivs
mov
popa
fbld
or
adcl
inc
repz
pop
pop
aas
xor
mov
lock
leave
dec
rcrl
or
sbb
punpckhdq
call
inc
negb
jmp
mov
leave
mov
sbb
loop
mov
cwtl
sbb
sahf
xor
idivl
repz
out
out
addb
push
iret
fidivrl
add
mov
into
pop
pop
cwtl
xor
bsr
or
movsl
repz
fxch
or
dec
adc
loopne
popa
ss
fldenv
add
mov
xchg
mov
rdpmc
xchg
xlat
imul
ror
mov
jnp
lods
push
lock
mov
jo
xor
pop
push
inc
adcl
jp
mov
in
sti
cmp
push
sbb
mov
test
jnp
jae
and
int3
or
pushl
mov
and
sbb
in
ss
fs
loope
addr16
jge
mov
push
test
test
mov
dec
cmp
popa
add
stc
mov
mov
xchg
mov
into
ss
loopne
mov
xor
sub
lret
dec
push
gs
shrb
jle
mov
inc
mov
icebp
movsb
mov
mov
and
pop
push
hlt
insb
jmp
mov
sub
dec
icebp
addr16
inc
xor
jge
xchg
inc
cmp
push
and
stos
faddl
mov
stos
sbb
cmpsb
aam
inc
or
add
lea
mov
lods
lock
outsl
dec
sub
aam
mov
cmp
mov
loop
mov
fimuls
cmp
add
lds
cwtl
jmp
push
pop
mov
mov
inc
sbb
mov
cmpsl
mov
fwait
out
jae
push
xor
nop
test
sub
fistpl
mov
jne
jp
and
adcl
mov
das
push
mov
cmpl
xchg
dec
lcall
mov
push
int
into
movsb
mull
stos
sbb
ljmp
adc
add
dec
imul
mov
push
loopne
sub
inc
bound
push
or
sbb
rolb
cmp
daa
xor
fstpl
sbb
pop
divb
xor
mov
xor
lahf
sub
sub
cltd
push
ficoml
lret
inc
inc
in
sub
int
inc
out
dec
xchg
aad
cmp
mov
mov
movsl
adc
mov
jbe
sub
xor
adc
pusha
jle
sub
lock
loopne
mov
sub
mov
incl
or
addb
insl
cmp
xlat
lcall
sub
pop
shlb
shl
push
into
jge
test
add
clc
push
scas
mov
sahf
push
sbb
pop
push
scas
lock
dec
sbb
mov
pusha
or
push
cmp
int3
mov
cld
sub
sbb
jecxz
in
jg
nop
sub
jle
push
pusha
data16
push
mov
lahf
jne,pn
aam
loop
pushf
or
shlb
lock
adc
dec
mov
mov
mov
leave
push
and
inc
lock
sub
cwtl
xor
lcall
inc
add
fdivl
lcall
adc
jg
mov
lcall
addr16
sbb
mov
push
out
push
les
dec
sti
mov
ds
leave
jnp
mov
addl
scas
and
mov
aaa
push
add
sbb
xchg
xchg
push
pop
pusha
xchg
and
xor
mov
rol
pop
cwtl
call
sub
mov
mul
dec
es
addl
pop
add
sub
xor
out
call
sbb
inc
jno
stos
test
jae
cwtl
enter
out
add
fistps
fisubl
movb
rclb
lret
repz
mov
in
out
inc
jle
int3
pop
icebp
add
pushf
cmc
fdivrl
mov
orb
push
sbb
dec
sub
dec
cmp
add
sub
fbstp
mov
jbe
out
les
scas
inc
fninit
jp
cmp
jp
push
cmp
pushf
inc
push
add
mov
movsb
shll
pop
adc
movb
je
xchg
js
ficoml
adc
pusha
inc
mov
jnp
pushf
sub
pop
pop
push
popf
push
xor
cli
arpl
mov
loopne
lahf
mov
movsb
adc
neg
scas
cwtl
aaa
dec
gs
stc
iret
inc
repnz
xor
out
fiadds
and
rorb
xor
and
inc
push
ret
pusha
scas
ja
call
dec
sbb
test
clc
mov
or
adc
xchg
cwtl
sbb
lea
hlt
push
mov
js
mov
sub
pop
scas
and
clc
jge
stos
stc
daa
fnsave
jbe
mov
push
adc
into
aas
getsec
or
mov
dec
arpl
push
les
test
pop
jecxz
mov
daa
mov
jecxz
pop
fmuls
lock
push
xor
mov
shrb
incl
aam
fidivrl
fstps
xor
add
out
pop
in
repnz
lock
jg
jp
mov
and
xchg
cmp
fidivrl
xchg
std
cmp
cmp
fwait
pop
cmp
xchg
fimull
inc
or
dec
cltd
or
cmc
leave
push
repnz
insb
jae
pusha
adc
je
test
loope
add
pop
rorl
repnz
mov
inc
sub
icebp
adc
mov
mov
cld
cmp
lret
and
or
cmpsb
lods
in
adc
cmc
aam
xchg
or
je
lea
popf
push
addr16
xlat
outsb
arpl
xchg
nop
ret
dec
mov
xor
push
notb
adc
and
adc
flds
xchg
insl
inc
inc
clc
push
add
and
jnp
cli
fwait
cmp
ss
and
test
or
xchg
cmp
imul
vpsubusw
into
xchg
lret
movb
out
mov
lds
bound
fldl
sbb
mov
sbb
fwait
sarb
aam
sbb
adc
sbb
out
cltd
push
cmp
push
bound
jns
lahf
xchg
in
xchg
pcmpeqw
aaa
ret
mov
mov
push
rclb
and
mov
push
out
aad
fnstsw
mov
cmpsb
imul
push
mov
xor
iret
jle
add
lret
mov
jbe
mov
cmpsb
fwait
cmp
pextrw
stos
ja
xchg
mov
jae
fistps
shrl
push
xchg
out
popa
push
sub
add
sbb
idivb
adc
mov
std
xchg
inc
movsl
xlat
pop
pop
pop
fwait
or
cwtl
inc
pop
das
or
or
mov
inc
ljmp
call
xchg
xchg
pop
sbb
inc
std
ret
bound
cld
dec
stos
mov
out
and
fsubl
or
push
sub
lock
add
loope
aam
sbb
orb
xor
sub
push
idivb
jge
jne
cltd
or
xor
loope
lret
add
adc
xchg
push
sub
outsb
call
lea
repz
jne
mov
fisubrs
jnp
out
shll
scas
push
mov
jg
loope
sub
and
out
or
cmp
sti
mov
orb
fld
push
jbe
into
repz
pop
outsb
push
sbb
sub
mov
xor
cli
lods
loope
mov
out
call
push
scas
scas
mov
shlb
sub
arpl
add
add
popa
gs
or
lret
pop
aas
sti
jnp
repz
mov
ret
push
and
mov
or
pop
test
loop
mov
inc
in
mov
push
int
fwait
add
push
add
out
fidivl
test
pop
ret
int3
out
jp
ss
ret
syscall
add
fimuls
jns
negb
mov
add
jecxz
pop
ja
push
enter
add
cltd
push
lret
push
cmp
imul
dec
mov
int
jns
xorl
das
or
mov
sub
test
or
xchg
xorb
js
ret
loopne
mov
pop
cld
add
daa
sub
xchg
pop
iret
clc
and
cmpsb
xor
jecxz
in
mov
shl
sti
jl
mov
in
mov
inc
iret
scas
or
ds
enter
xor
xor
std
int
nop
mov
movsb
jle
into
ror
outsb
add
shlb
andl
adc
addl
das
xor
add
enter
and
jl
pop
cmp
jg
es
cmp
cmp
out
add
mov
push
aaa
add
mov
shrl
out
imull
xor
jnp
push
push
das
push
mov
insb
ja
mov
not
cmp
add
ljmp
xchg
inc
lcall
in
pop
push
mov
mov
pop
mov
lcall
cli
std
mov
pop
add
push
push
lods
mov
mov
test
shl
mov
cmp
or
inc
imull
inc
loopne
jmp
orl
dec
pusha
fs
mov
loop
dec
or
jo
nop
cmp
pop
jmp
dec
gs
add
inc
add
mov
sbb
sarb
mov
mov
clc
arpl
and
xor
addb
sti
movsb
pop
xchg
iret
sahf
mov
test
mov
xchg
iret
inc
fsubl
movsb
pop
cmp
xchg
stc
in
sbb
sbb
mov
push
or
xor
jb
cmpsb
sub
lcall
jb
pop
mov
push
dec
jb
add
mov
and
or
inc
dec
xchg
test
jle
pop
add
bound
and
jno
pop
pusha
jnp
xor
push
jbe
lret
test
jbe
jle
aas
jmp
xchg
rcrl
cmp
stos
fcoml
mov
out
sbb
push
sbb
int
cmp
xchg
mov
sub
scas
fcmovnu
mov
or
xchg
jp
sub
jne
das
add
loop
jnp
xchg
dec
sub
mov
in
add
sbb
and
xlat
mov
int3
add
jmp
and
xor
icebp
test
jnp
pop
stos
adc
mov
aaa
repnz
sbb
add
jbe
xchg
mov
inc
push
iret
sub
scas
xor
movsb
or
ret
sub
bound
cmp
and
int
push
sbb
std
xor
cld
sub
push
mov
xchg
fidivs
mov
lcall
ljmp
pop
pop
sub
xchg
or
les
pusha
repnz
lock
aam
cld
adc
scas
ds
sahf
xchg
fisubs
dec
rol
and
add
pop
ja
pop
and
sub
stc
scas
jb
dec
test
fs
add
fiaddl
je
divb
xchg
and
pop
mov
insl
in
add
pop
jns
mov
icebp
sub
sub
jbe
outsl
leave
push
cs
shl
lret
adc
lea
cwtl
ret
sub
gs
notb
lret
cmp
into
jmp
add
xor
mov
xchg
rcrl
cwtl
sub
pop
dec
add
stc
jne
jno
inc
xchg
mov
dec
das
adc
scas
mov
sub
adc
out
xchg
mov
lahf
fdivr
adc
and
or
das
dec
add
pop
popf
imul
xor
inc
adc
subb
lods
lea
pop
call
aad
shll
sbb
scas
sbb
test
inc
nop
clc
orl
out
xchg
testb
ja
cmp
jae
dec
push
add
fisubrs
js
les
imul
sbbl
dec
mov
ja
push
and
dec
fldcw
fidivrl
rorb
push
lret
insb
xchg
addr16
ljmp
fidivl
cmpsb
pop
repz
cli
xor
mov
jo
sbb
clc
leave
push
add
mov
pop
pop
xlat
sbb
les
into
xor
mov
imul
mov
mov
dec
ljmp
jmp
and
xchg
addr16
lods
aam
dec
enter
and
add
jge
aad
inc
nop
icebp
call
lcall
std
xor
stc
jae
sub
mov
mov
cld
mov
test
cmpsb
adc
stc
aaa
mov
imul
test
push
clc
xor
pusha
or
dec
rcll
xchg
xchg
in
insl
or
inc
cmp
sub
and
and
add
fcmovne
add
and
add
or
or
jmp
pop
loopne
enter
jnp
jns
repnz
adc
push
clc
aaa
mov
cmp
addr16
dec
adc
xorb
sub
fidivs
xchg
ja
clc
popa
cli
mov
lret
mov
loopne
call
lcall
jnp
mov
xor
adc
sub
push
mov
inc
pop
cmp
test
ret
pop
aas
into
xor
mov
je
aaa
lock
fwait
daa
sbb
mov
push
and
adc
sub
cmp
jb
push
mul
fisubs
lods
mov
cmp
es
inc
dec
push
inc
imul
xchg
dec
notb
out
cltd
xor
jns
pop
and
mov
xchg
inc
mov
ficoml
test
into
or
mov
add
out
int3
cmp
cltd
arpl
pop
pavgw
in
ljmp
cmp
mov
and
inc
in
inc
mov
inc
mov
mov
adc
pop
xor
jo
out
adc
loope
loop
rolb
lret
roll
rorb
mov
add
mov
notb
add
loopne
jl
shll
iret
fdivrs
push
sbb
and
xchg
lcall
repnz
sub
lcall
sbb
cs
pop
iret
pop
leave
fistl
ror
xor
stos
or
out
and
sar
enter
cld
xlat
pextrw
add
push
aas
ja
mov
cmp
add
popa
push
jo
jmp
push
stos
pop
pushf
mov
or
xchg
out
sub
imul
into
test
sub
test
leave
push
push
cli
cmp
pop
cltd
mov
sub
add
xor
sti
dec
xchg
sub
dec
loope
sbbl
mov
or
jecxz
or
pushf
cwtl
fwait
out
xlat
inc
push
icebp
dec
add
cmp
nop
das
das
sarl
pop
movsl
imul
imul
pop
lock
sub
or
mov
xchg
hlt
mov
das
dec
xchg
sub
cmp
jns
inc
hlt
inc
cld
push
clc
add
push
aad
or
mov
and
jle
cmp
movsl
mov
rcrl
insb
sub
mov
and
lea
scas
xchg
or
jno
dec
repnz
sarb
mov
dec
add
pop
frstor
cwtl
xor
aad
and
icebp
ja
fwait
ret
lea
cmp
in
sbb
mov
movsb
mov
loop
addl
lret
xchg
mov
sbb
test
and
mov
lret
andb
jb
jno
sbb
sub
mov
test
test
or
leave
jae
xor
outsb
insb
add
jg
add
filds
sbb
rcll
sarl
add
add
shll
sti
shll
inc
pop
lods
lods
test
movsl
cmp
push
dec
sysret
or
icebp
int
dec
aam
push
outsb
idiv
sub
hlt
xor
fstpt
add
daa
ret
inc
mov
idivb
push
jg
frstor
mov
mov
push
lock
leave
xchg
jb
cwtl
cmp
or
pushf
out
test
sbb
sub
lods
pop
loope
sbb
cmpsb
es
fsubs
and
push
jp
xchg
xchg
data16
cmp
inc
lcall
enter
cltd
sarb
jecxz
out
mov
lock
adc
adc
insb
mov
and
jmp
frstor
mov
cltd
pop
dec
jns
xchg
scas
and
movsb
rcll
aad
jo
and
and
jnp
movsb
push
sbb
int
xor
mov
cmp
jne
rcl
data16
jns
xchg
add
fldcw
jge
inc
sub
popa
popf
int
mov
daa
push
pop
out
add
pop
sarb
ja
stc
add
pop
repnz
inc
ss
fmul
aad
aad
pop
out
sub
popa
fdivrl
xor
cli
dec
xchg
mov
sub
mov
push
push
icebp
mov
adc
pop
jns
loope
movsb
and
out
pusha
dec
pushf
inc
shrd
into
xorl
jno
jl
aaa
mov
add
lds
dec
inc
inc
inc
jge
pusha
stc
movsb
in
inc
gs
pusha
inc
xor
test
rcll
push
or
imul
mov
inc
std
jno
loope
orb
leave
xchg
jne
lret
out
xchg
pop
dec
and
rclb
out
subl
js
and
pop
movsl
mov
cltd
arpl
sahf
in
lcall
stc
cmc
xchg
and
mov
cmp
or
pop
stos
hlt
jns
mov
outsl
stc
into
nop
and
xor
mov
bound
jg
cld
push
dec
mov
rolb
jae
lcall
lcall
sbbl
fs
das
mov
int
fdiv
pop
in
pop
lcall
sub
push
mov
ret
bound
sub
jp
imulb
push
push
imul
int
jb
sbb
xchg
insb
adc
loop
inc
dec
add
js
out
lock
xchg
ds
add
ljmp
popa
jb
or
xchg
or
lret
test
fldt
repz
scas
adc
out
test
test
push
xchg
mov
outsb
pop
jo
shl
jl
ds
pop
lds
mov
lret
sub
xchg
xlat
mov
lret
inc
cli
lock
dec
jmp
xchg
and
shl
mov
xor
add
adc
cmp
xchg
xor
inc
aad
into
xchg
sbb
mov
lds
add
aad
inc
inc
ss
addr16
int
push
loope
aaa
adc
and
in
xchg
jmp
nop
xor
fnstenv
cmc
addr16
pop
in
pop
add
stc
add
adc
sbb
cli
outsl
sbb
sti
or
repnz
mov
fdivl
mov
xor
jb
and
loope
or
enter
pop
popf
int3
pop
rorl
dec
xchg
test
mov
pop
lea
xor
mov
sbb
adc
mov
cmp
shl
xchg
and
mov
adc
data16
lods
push
mov
xchg
mov
test
xor
or
ljmp
or
mov
arpl
getsec
inc
enter
outsl
mov
cmc
add
cmp
pop
xchg
mov
inc
and
mov
pop
jne
fildl
push
pop
dec
adc
shrl
and
pop
aaa
jmp
fildll
lea
dec
push
lahf
ja
fmull
dec
push
stc
loopne
xor
push
test
sahf
xchg
sub
push
jle
jne
scas
aad
cwtl
mov
mov
fistps
shl
jbe
stc
jae,pt
jne
aad
cmp
and
test
test
outsl
int3
daa
sub
popa
das
jo
pop
inc
or
or
add
pop
lret
push
and
fcmovnb
shll
out
test
mov
mov
rolb
jnp
or
icebp
pop
cld
pop
dec
lret
inc
pop
push
pushf
cld
cld
dec
dec
or
sbb
ficoml
mov
push
gs
pop
or
inc
std
push
sti
hlt
push
add
js
shr
and
jl
jl
or
mov
scas
mov
xchg
add
js
les
cli
push
mov
xchg
xor
mov
aam
shlb
negb
add
mov
dec
xchg
push
xor
cmp
sbb
out
sub
mov
in
mov
adc
leave
pop
addl
cmp
int
and
pop
int3
mov
add
icebp
push
test
inc
dec
aam
in
popa
aas
dec
inc
jge
lea
cltd
call
lods
push
out
cli
sbb
out
and
or
fidivrs
mov
inc
test
cmp
pop
aaa
lahf
xchg
cmp
or
adc
jp
cmc
add
movsl
adc
cltd
jp
sbb
mov
jg
dec
xor
in
jge
xchg
push
cmp
jne
fs
sub
shlb
sub
notb
cmp
iret
lods
mov
lret
mov
cli
cmpsl
jo
icebp
mov
adc
fwait
sub
add
in
pusha
mov
icebp
xor
addb
push
adc
test
test
pop
sub
mov
jmp
in
xor
ret
fs
cltd
cmp
jnp
dec
mov
mov
fdivrl
inc
cmp
jmp
das
xor
cld
pop
jl
mov
jb
stc
rcr
aaa
mov
inc
lods
nop
daa
mov
inc
shlb
sbb
fldenv
add
popf
xor
xchg
jbe
adc
xor
xor
push
lret
call
mov
inc
movsb
in
xor
jae
mov
rcl
sahf
cmpb
lock
aad
sbb
fadd
mov
mov
cld
cmp
movsl
xchg
mov
mov
or
imul
mov
or
and
dec
xor
sbb
lds
mov
mov
mov
ljmp
fistps
js
add
in
cmpsl
in
cmp
lret
inc
nop
mov
cmp
sbb
ficoms
clc
cltd
dec
or
sub
arpl
aas
ds
xchg
xor
xchg
ret
jbe
adc
dec
add
inc
cmp
aam
mov
insb
icebp
mov
mov
pusha
mov
cld
imul
inc
cmp
jns
sbb
in
daa
pushf
cmp
fisttps
cmp
push
call
inc
enter
jge
push
es
xor
inc
sub
jno
lcall
pop
ret
mov
sbb
fiadds
subl
jecxz
and
mov
out
mov
clc
jle
add
inc
xor
push
ficomps
aad
dec
fsts
inc
inc
jl
add
adc
lahf
setno
cmpsl
mov
mov
push
add
fstl
hlt
jo
scas
dec
xchg
jmp
or
test
mov
jmp
daa
pop
jno
cmpsb
addr16
data16
les
or
fwait
std
and
jecxz
sti
adc
adc
call
cmp
jge
push
xor
adcl
dec
mov
adc
lret
ds
in
mov
movsl
jno
dec
into
adc
pusha
movl
js
int3
loop
push
int
sahf
mov
pop
mov
clc
jo
insl
out
and
jae
jo
out
shll
pusha
jno
cmp
shlb
dec
gs
xor
xchg
nop
push
xorl
enter
jmp
push
xor
or
jb
inc
mov
mov
add
test
arpl
cmc
fnsave
aam
xor
jbe
std
inc
inc
xlat
jno
jbe
loope
orb
into
stos
jecxz
inc
clc
push
mov
or
fidivrl
arpl
mov
outsb
in
fcmovnu
in
push
sahf
cmpsl
in
jnp
mov
add
cs
dec
jnp
mov
in
test
data16
ss
push
jg
add
cmp
jns
pop
repz
mov
lods
jnp
das
mov
imul
pop
das
lods
into
lahf
adc
mov
popa
subl
push
cmpsl
mul
push
lods
jb
in
js
in
stos
mov
and
popf
test
aad
lods
mov
push
pushf
sbb
inc
scas
mov
jmp
cmpsl
sub
in
mov
outsb
xor
aaa
or
jle
andb
jnp
arpl
push
inc
rcll
mov
sub
dec
cmc
cmpsb
in
lahf
cmpb
sbb
xor
mov
inc
lahf
insl
dec
stos
mov
mov
jmp
inc
push
mov
xchg
mov
lret
dec
ljmp
shlb
push
pop
adc
adc
push
out
imul
adc
test
ljmp
int3
cltd
add
mov
and
fistpll
inc
add
iret
mov
cmp
mov
mov
add
mov
int
cmp
fs
sbbb
push
fcoml
ds
push
xchg
or
orl
pop
std
into
stos
nop
cmc
cmpsb
cwtl
xchg
repz
mov
mov
ja
sarl
pop
push
push
push
and
sub
pop
push
in
sbb
xor
cmpsb
jbe
xchg
mov
xor
or
mov
mov
aaa
cwtl
rclb
or
sbb
jne
in
push
mov
jmp
movb
js
out
loop
lret
push
jmp
andb
cli
mov
mov
push
jno
popf
in
mov
dec
imul
fadds
inc
cmc
and
test
push
and
or
sbbb
add
sbb
cmpsb
lea
jle
or
mov
jle
test
adc
mov
sub
outsb
push
fdivrp
mov
inc
fnstcw
mov
adc
rclb
sbb
movsl
in
std
out
movsb
push
jl
adc
imul
jne
jb
and
dec
and
mov
xchg
imul
push
xor
test
mov
jecxz
jne
leave
ljmp
movsl
xor
fwait
int
dec
arpl
push
mov
sub
jno
lret
fldl
add
out
pusha
mov
mov
sbb
daa
mov
sub
insb
fst
mov
ss
inc
lret
test
lcall
add
push
or
mov
jb
push
lods
outsl
dec
or
mov
adc
scas
loope
lods
sub
adc
adc
jle
fwait
sbb
imul
ja
js
jne
cmp
xchg
push
fcomi
mov
lds
jp
es
xchg
das
ss
xor
iret
xlat
sbb
mov
and
cmp
mov
add
add
hlt
jge
jge
in
lret
movsl
adc
pop
iret
popa
je
or
shrl
sbb
aas
cmpsl
lods
out
test
in
ret
vmwrite
dec
or
and
orb
push
lods
adc
or
or
mov
stc
cs
sub
sbb
add
mov
cmp
jns
mov
nop
push
insb
cmp
in
out
hlt
sbb
in
mov
sbb
push
es
stos
notl
fisubrs
mov
mov
sarb
push
mov
das
seto
data16
push
add
mov
out
push
dec
push
mov
popf
pop
jg
shll
jmp
ljmp
jmp
mov
xchg
pop
pop
sbb
call
add
pop
or
xchg
out
mov
iret
inc
popf
mov
adc
cmc
movsb
adc
lcall
xor
adc
pop
dec
pop
mov
adc
inc
test
int3
shll
xor
cmc
sub
pop
sub
adc
mov
xor
fwait
scas
dec
pop
dec
xchg
push
or
je
push
nop
pop
or
fldl
sub
sbb
cmp
mov
lods
mov
out
pushf
sar
sbb
aas
dec
xchg
cmp
mov
mov
jecxz
sarl
clc
mov
push
gs
cmp
ljmp
inc
mov
adcl
iret
aam
daa
int3
cmp
stc
out
and
imul
dec
jmp
daa
addr16
rorl
add
pop
out
pop
inc
push
inc
and
and
jmp
movsl
int
jb
ss
sub
or
pop
inc
mov
add
daa
int3
jbe
insb
clc
ds
jne
cmpsl
das
xor
scas
push
or
lock
ja
or
icebp
je
rcl
faddl
xor
add
push
and
daa
in
jge
push
gs
mov
popa
mov
dec
lret
jo
arpl
adcl
and
sbb
orb
mov
inc
lea
int
orb
adc
in
fimuls
fildl
fldenv
pop
outsl
sub
stos
push
or
fs
outsb
out
stos
sti
inc
in
sbbl
mov
push
ja
pop
arpl
repnz
push
mov
lods
jecxz
imul
lods
and
inc
jle
sbbb
inc
jmp
sub
test
rcrl
test
popa
outsb
imul
jo
mov
xor
xchg
aas
dec
cmp
test
pop
xor
mov
dec
cmp
ss
xchg
pop
ds
lcall
insl
pushf
aam
rcll
dec
repnz
cld
scas
repz
and
push
sbb
pop
jg
or
sbb
push
bound
int3
pop
iret
and
inc
fmuls
fnsave
push
and
ret
mov
shrl
mov
jns
jnp
dec
jo
mov
push
xchg
mov
shr
cmp
mov
xchg
push
mov
bnd
inc
dec
adc
or
mov
das
push
xchg
push
mov
inc
xchg
adc
sbb
push
mov
xorb
test
scas
mov
pusha
push
dec
push
cmp
les
inc
sbb
lods
imull
lcall
jp
imul
push
inc
add
mov
das
cmp
sub
cmpsl
push
jae
lahf
cs
insb
lds
outsb
mov
xchg
mov
sti
rcrb
mov
push
mov
popf
push
lret
movswl
xlat
in
or
mov
les
repz
xchg
cmp
cmpb
inc
pop
push
aad
mov
add
jle
fcom
push
and
pop
jl
stos
adc
adc
mov
pusha
lea
movsl
test
dec
sub
push
sbb
fnstcw
adc
and
mov
push
add
cld
inc
mov
movsl
stc
xchg
sub
addb
xchg
lds
jne
pop
pop
pop
std
inc
pop
push
push
fdivrl
adc
xor
loope
and
insb
nop
rcll
push
mov
xor
or
stos
test
inc
push
out
cmp
ds
and
ret
push
int
fsts
mov
xor
lahf
cmpl
add
mov
add
adc
push
cli
add
xchg
fcompl
sub
add
mov
loope
aas
sahf
push
sbb
testb
or
adc
push
subb
pop
mov
int
push
and
xor
cltd
xor
xchg
sub
dec
iret
jo
pop
lahf
jns
and
dec
nop
xchg
mov
ja
cs
ja
stos
add
xor
divl
sub
sub
imulb
hlt
scas
fwait
outsb
push
mov
add
std
xchg
movsb
clc
popa
cs
lods
and
pop
stos
add
jmp
pusha
jp
dec
mov
mov
mov
aad
sbb
addr16
fucomp
dec
adc
jmp
or
mov
aaa
pop
mov
fwait
jno
push
cmp
mov
sbb
mov
mov
push
xor
lds
subb
jp
lea
shrb
pusha
mov
xor
sbb
sti
cmp
faddp
imul
jp
or
sbbb
jle
je
inc
adc
int
dec
cmc
test
or
push
push
aam
xorb
shrb
push
or
adc
out
cwtl
lea
push
mov
rorl
inc
mov
jnp
je
adc
jne
pop
testl
dec
rcll
mov
mov
into
jbe
arpl
ljmp
aad
subb
fwait
fs
inc
pop
mov
and
roll
fildl
aaa
and
in
sbb
lock
mov
fs
stos
lret
xor
out
inc
std
nop
test
adc
inc
adcb
call
mov
ds
or
sbb
leave
lds
mov
clc
loope
dec
cli
shlb
jge
push
and
cwtl
cmp
lods
test
out
jnp
push
cmc
jbe
test
push
lods
loop
arpl
out
push
cs
repnz
sbb
std
test
call
repz
jnp
ds
xchg
dec
repnz
aas
dec
pop
xor
mov
mov
inc
pop
imul
and
cmpsl
push
das
and
add
mov
ret
pushf
jb
xchg
and
push
jg
movsl
push
fnsave
pop
push
stos
and
hlt
orb
pushf
mov
pop
jp
sub
jge
sbb
stc
push
insb
jo
sbb
adc
or
insl
mov
test
or
bound
jle
mulb
sbb
mov
sub
out
fs
and
bound
scas
mov
shrb
sbb
movsb
popa
xchg
dec
test
jp
mov
jo
push
cmp
aaa
shrb
lcall
add
fmull
or
bound
flds
popf
jne
and
ret
push
mov
es
jne
or
fistpll
je
cmpsl
out
xor
out
or
xchg
gs
sbb
push
inc
loop
pop
jo
sub
ret
or
jge
int
pop
clc
push
jg
clc
mov
add
cmpsl
cs
push
inc
lods
or
mov
xchg
inc
rorl
mov
pop
and
jnp
push
mov
les
pop
pop
xorl
cwtl
lock
movsl
ja
or
cltd
sbb
adc
test
jnp
out
mov
mov
push
clc
cmp
fimull
cmp
mov
notb
dec
adc
sahf
movsb
dec
loope
dec
mulb
mov
repnz
stos
rolb
inc
mov
adc
in
test
xchg
or
pop
fsts
mov
and
call
push
inc
jno
mov
push
push
inc
mov
pop
cmpl
popf
add
arpl
inc
ss
dec
int3
clc
mov
pop
hlt
xor
pop
jns
sub
or
pop
cld
gs
mov
mov
jmp
repnz
lea
das
les
inc
dec
sub
pusha
out
test
dec
push
fistl
push
push
jno
nop
and
les
loopne
cmp
fstl
rcr
fsts
mov
inc
jge
mov
pusha
in
adc
in
push
and
xchg
xchg
lods
xchg
and
and
inc
cmp
mov
test
lds
cmpsb
mov
inc
adc
fs
ljmp
mov
pop
pop
mov
mov
shll
jl
add
adc
in
fdivs
mov
xor
mov
roll
or
xchg
insl
jne
xchg
push
into
adc
cmp
mov
ja
or
or
fstps
fwait
movl
xchg
cmp
jo
mov
mov
ljmp
or
inc
xchg
xchg
add
in
mov
xchg
shrb
icebp
cmpsb
mov
sub
fisubl
xchg
push
inc
sbb
insl
insb
bound
dec
add
push
mulps
sbb
pop
or
cwtl
dec
xlat
lds
push
or
cmp
mov
push
adc
dec
push
adc
dec
sub
dec
mov
pushf
leave
lea
and
out
inc
jne
dec
dec
mov
pop
mov
pushf
push
in
fstp
push
add
cmpsb
mov
inc
ljmp
mov
xor
push
and
sahf
sbb
shlb
jns
xor
push
fcomp
add
xchg
xchg
rclb
mov
xor
cmpsl
loope
inc
dec
shrl
mov
stos
popa
push
notl
xchg
divl
sub
xor
xchg
xchg
dec
mov
shrl
stc
clc
in
data16
push
jecxz
push
jle
scas
out
ret
div
cltd
and
sub
scas
int
cmove
insb
cmpl
mov
out
pop
aas
or
ds
jecxz
out
inc
jns
mov
roll
test
fidivrl
fadd
or
dec
add
pop
or
insl
and
imul
rorb
sbb
pusha
push
cld
ss
jbe
adc
rolb
xchg
mov
xor
imul
sar
mov
scas
sub
push
push
jecxz
mov
cs
push
xchg
test
pop
movsb
out
sbb
mov
inc
inc
adc
andl
inc
add
in
fxtract
xchg
in
call
xor
add
add
std
mov
sbb
add
xchg
xchg
adc
shlb
outsl
mov
les
setp
iret
aas
stos
shlb
mov
ja
xlat
psubsb
shl
in
sub
enter
adc
inc
push
hlt
adcb
push
push
mov
push
xor
daa
ss
lahf
add
adc
cmp
push
call
jecxz
icebp
int3
cmp
gs
inc
xchg
cwtl
shrl
into
rclb
cmp
push
les
jno
pop
mov
push
repz
and
fistpll
in
ja
push
test
inc
push
xor
in
and
fdivs
xor
into
adc
sub
popf
push
push
clc
push
jge
packsswb
movsb
push
nop
mov
leave
mov
jecxz
fcom
test
and
mov
or
imul
jnp
andl
shlb
loop
pop
push
and
adc
xor
negb
inc
add
lods
and
cmpsb
es
push
cmp
lahf
jne
jb
js
sahf
out
jmp
dec
jo
insl
or
dec
test
jmp
mov
cmp
arpl
pop
movsl
pop
cmp
rcrb
or
aad
scas
adc
cld
jnp
mov
mov
lock
push
fdivrs
aaa
sub
ret
fisubrs
clc
mov
xlat
lahf
pushf
jns
adc
hlt
aad
pop
rorl
lret
call
sbb
push
or
sti
lods
loop
leave
jb
pop
dec
pushf
clc
dec
mov
xor
ja
mov
add
test
xor
xchg
jl
add
cmpsb
cmp
cmp
mov
dec
push
pop
adc
andb
sub
jne
inc
into
out
ljmp
pop
and
mov
add
or
das
es
ret
out
push
jnp
sarb
sbb
pop
dec
inc
and
dec
mov
loopne
sarl
xchg
add
mov
inc
xchg
mov
movsb
cs
xor
out
push
mov
sti
xchg
nop
push
lcall
in
enter
aaa
sub
sti
in
push
cmp
ret
mov
orps
push
jne
add
aaa
pop
push
mov
mov
mov
sub
cwtl
dec
loope
sbb
pop
and
jae
fbstp
lret
mov
pop
mov
pop
push
adc
fwait
adc
lds
leave
lret
or
mov
jecxz
sbb
or
iret
push
in
push
push
ss
int
mov
div
mov
iret
fildll
ficoms
add
xor
aaa
pop
les
in
lods
lret
lods
test
or
sub
arpl
mov
inc
mov
jae
dec
mov
sub
inc
jb
xchg
js
cltd
cmp
out
mov
or
aas
out
int
mov
inc
add
jb
jbe
xor
jle
xor
sub
adc
xor
adc
jg
mov
cmp
ljmp
push
cltd
fwait
andl
push
mov
push
cmp
testb
mov
bound
inc
inc
mov
scas
pop
mov
pop
ret
testl
jecxz
cld
aaa
pushf
icebp
jle
addr16
cmpsb
loopne
push
and
sbb
lahf
outsb
test
add
sar
adc
mov
jmp
mov
lret
xchg
and
shrl
loop
decl
js
inc
pop
pop
fcoml
repz
test
out
rcl
aam
jge
xor
dec
dec
ss
popa
mov
xor
mov
lods
pushl
cli
xchg
and
int3
stos
add
incb
notl
inc
push
xchg
sub
cwtl
mov
sbb
push
adc
push
test
mov
jns
mov
outsl
mov
mov
icebp
lahf
and
mov
imul
bnd
jo
lahf
dec
inc
jmp
fimuls
add
imul
clc
lds
add
stos
xor
mov
jo
lock
cmp
mov
insb
stos
into
dec
and
inc
fdivrl
movnti
fnstsw
pop
push
test
cmp
dec
pop
or
add
push
mov
imul
in
movsb
pop
and
jg
hlt
stos
push
mov
les
jbe
mov
mov
aad
mov
loopne
movsb
sarl
fcomps
xor
adc
inc
push
and
insb
xor
mov
stos
push
mov
mov
inc
lds
imul
push
lds
push
fsin
test
push
mov
mov
in
aad
and
lds
mov
negl
fdivl
ds
shrb
mov
ljmp
mov
xor
cmp
lret
leave
xor
inc
cltd
jl
mov
mov
mov
data16
fadd
push
and
fisttpl
test
xor
pop
addb
enter
nop
xchg
cwtl
lods
daa
cmp
sbb
dec
sub
popf
dec
stos
pusha
mov
outsb
psrad
sbb
stc
fiadds
mov
xchg
out
les
pop
cmp
xor
out
lds
cmpb
cmp
pop
hlt
ficompl
cs
das
mov
test
loop
add
mov
sti
cmc
mov
or
negb
insb
shll
adc
cwtl
in
daa
jp
filds
loop
out
mov
mov
jl
jge
sub
jmp
inc
and
xor
shrl
ds
cmpsb
xor
out
add
inc
mov
push
clc
jle
push
mov
sti
das
xor
cmp
xchg
cmp
add
xchg
mov
stc
dec
xor
mov
ret
popa
pop
adc
rcr
rcr
or
daa
sbb
sbb
inc
jl
pop
pop
push
mov
pop
mov
jo
or
repnz
lea
popf
push
mov
repz
int
in
and
les
adc
bound
sbb
dec
dec
push
and
pop
push
cmp
xchg
or
inc
cli
aas
dec
arpl
data16
lret
scas
inc
dec
xchg
push
insb
sbb
bound
xor
or
jg
stos
out
jmp
in
mov
outsl
ss
ret
mov
push
jb
sahf
pop
stc
stos
cmp
or
or
mov
stos
aad
jno
roll
inc
stos
push
mov
push
mov
sbb
pop
bound
add
int
fst
int
cmp
push
pop
cmpb
lcall
fidivs
and
sahf
mov
dec
bound
adc
scas
es
lea
xor
loopne
jbe
iret
daa
mov
cmpb
adc
jno
pop
add
mov
mov
insl
push
lods
dec
das
bnd
out
push
imulb
cmc
mov
int
push
pop
jmp
js
lock
xor
add
jns
movsl
or
mov
sti
inc
into
mov
pop
or
mov
inc
jg
mov
dec
sti
mov
insl
push
loopne
loopne
push
xor
out
lahf
sarb
mov
mov
or
test
scas
mov
push
adc
fcomps
push
out
push
push
aam
mov
cmpsl
push
mov
loope
or
popa
incl
jmp
inc
sbbl
test
imul
inc
sub
xchg
cmp
sub
jb
xor
jl
jb
cmp
dec
lret
jae
dec
and
lcall
aam
mov
dec
cmp
test
test
ds
cld
nop
repnz
aad
imul
das
ja
inc
ret
add
add
out
enter
lahf
test
mov
in
xchg
push
add
inc
jmp
dec
and
shl
psadbw
call
in
xchg
cmpsb
call
imul
repnz
in
js
lret
repnz
insl
xor
mov
icebp
inc
mov
in
in
mov
je
ret
out
mov
and
rorl
mov
xchg
shll
dec
or
lea
cs
xchg
jmp
fs
mov
inc
lock
aad
pop
stos
sub
pop
cmp
fwait
add
mov
mov
cmpsl
sbb
rorb
call
cmp
push
mov
fucom
test
adcl
sub
inc
mov
sbb
adc
mov
pop
in
pop
dec
sbb
adc
cwtl
push
cmc
xchg
jecxz
cld
stc
sub
push
pop
pop
mov
add
mov
addb
push
mov
and
jbe
std
mov
dec
lcall
outsb
jne
leave
or
lcall
rorb
mov
stc
inc
ja
add
push
add
jle
xchg
sbb
xor
push
divb
dec
mov
cmp
ret
pop
sbb
push
sbb
dec
test
pop
dec
push
ror
hlt
mov
and
fwait
push
mov
cld
or
cmp
jo
push
enter
cmc
push
xorl
sub
lods
sub
jmp
pop
dec
std
mov
pop
lock
push
test
mov
and
xchg
mov
insl
mov
pushf
stos
enter
addr16
dec
mov
push
in
cli
jae
mov
add
stc
clc
xchg
arpl
out
out
in
and
pop
cli
rcrl
lods
mov
mov
jns
test
mov
mov
gs
or
testl
jo
loopne
sub
mov
xor
mov
mov
adc
and
push
arpl
adc
cmp
pmaxsw
mov
dec
stos
in
fs
xchg
and
jg
sahf
je
insb
jb
cld
mov
sub
lock
mov
cld
or
loope,pt
sub
stos
lods
icebp
test
mov
fcomi
xchg
sbb
mov
sub
xchg
cmp
daa
repnz
jge
xor
sub
fdivrs
scas
imul
ds
cwtl
sbb
inc
lahf
inc
push
push
cmp
lods
icebp
aam
xchg
aaa
cmp
sub
adc
cmp
int
in
out
jnp
mov
jno
adc
hlt
inc
xor
shll
push
ds
push
mov
pop
sub
cld
pop
jne
mov
stc
pop
mov
xchg
sbb
test
fmull
movb
fcomps
repnz
jl
cwtl
loopne
out
lahf
fisubrs
out
filds
notb
xchg
int3
pushf
hlt
loope
das
loope
mov
jnp
loope
cwtl
dec
enter
lea
popa
pushf
ja
dec
mov
pop
clc
cmp
sub
mov
sbb
pushf
gs
sbb
js
fnstenv
js
int
jnp
inc
scas
stc
mov
test
les
push
and
leave
jns
ljmp
jge
jmp
mov
sahf
loope
je
pusha
mov
add
jne
inc
sbb
fists
xor
jmp
lods
js
mov
add
xchg
lock
and
or
cmpsb
pop
outsb
xchg
negl
xchg
cmp
adc
cld
push
mov
jp
notl
xchg
jge
mov
adc
mov
push
inc
and
jl
test
adc
js
jne
sub
in
scas
fstl
jmp
fnstsw
mov
sub
mov
adc
loope
adc
out
sbb
adc
sub
orb
out
pop
mov
fildl
jle
lcall
or
mov
jo
arpl
mov
das
xor
adc
stos
mov
lcall
lods
dec
movsl
mov
cmc
and
mov
add
add
mov
lcall
sub
jno
lahf
test
aam
hlt
addr16
das
sub
stos
and
adc
mov
repnz
adc
outsl
das
or
mov
xchg
lret
adc
fistpl
cmpl
lock
aaa
jb
mov
push
shl
sbb
inc
insl
dec
mov
pushf
inc
cmpsl
pop
imul
aas
in
int3
adc
test
int
lcall
out
mov
xor
mov
aad
xor
in
cmp
adc
int
dec
ret
xor
pop
and
in
loope
cmp
jecxz
cld
mov
pop
cmp
test
push
push
cld
inc
xchg
sbbl
test
outsl
fs
sub
bound
daa
xlat
xchg
xchg
sarl
cmpsb
mov
cld
popa
add
jnp
dec
xchg
cmp
leave
pop
nop
das
jle
push
xor
lahf
mov
roll
dec
cli
repnz
scas
pop
jecxz
pop
and
fbstp
mov
dec
ljmp
enter
ja
inc
sub
jb
cmp
sbb
aas
add
push
adc
adc
sub
and
stos
leave
and
inc
aaa
sbbl
jge
jbe
insl
jb
push
test
add
dec
mov
jnp
push
add
out
mov
idivb
sub
pmulhw
mov
pusha
jns
pop
mov
sub
jo
addr16
mov
cli
jp
push
mov
xchg
inc
iret
stos
cwtl
hlt
and
in
add
jle
mov
pop
pop
and
dec
jne
mov
sub
mov
out
adc
push
sbb
cmp
pop
sarb
movsb
mov
shl
xchg
mov
daa
mov
outsl
ror
mov
pop
mov
repnz
pop
in
add
lcall
je
mov
xchg
jno
popf
adcb
bound
outsb
inc
cmpsl
into
adc
or
int3
push
push
push
mov
mov
bound
sub
fmuls
sbb
fsubl
lret
pop
adc
shl
adc
inc
aam
call
mov
je
aam
push
xor
shlb
out
inc
stc
std
insl
mov
mov
addb
sbb
and
mov
les
pop
icebp
mov
xchg
imulb
int
jne
mov
push
xlat
add
mov
push
inc
mov
inc
pop
cs
cmp
lahf
ds
cmp
add
fdivrl
jno
pop
sbb
cmp
in
cmc
ds
fnclex
sub
test
cmpl
sub
cmp
test
ret
push
ds
sub
push
mov
test
cmp
mov
adc
xorl
stos
mov
icebp
jnp
pop
or
stc
add
mov
lcall
les
mov
jne
decb
adc
shlb
scas
and
clc
hlt
sti
ret
cmp
dec
sub
sahf
mov
repnz
inc
aad
and
sbb
clc
cmp
mov
loop
je
leave
call
inc
dec
stc
fsubs
push
jmp
pop
out
jle
jnp
loopne
inc
fadd
movsb
pusha
xorl
fcmovnu
add
repnz
cmp
jmp
pop
cmpsl
mov
sub
je
jge
outsb
xor
clc
cld
stos
jne
movsl
fwait
xor
js
cs
pop
inc
or
jns
mov
aaa
nop
dec
repz
bound
aam
mov
sahf
into
pop
stos
inc
lods
jle
push
or
arpl
push
lcall
ret
das
xchg
pop
je,pn
sbbb
insl
cli
jae
push
jno
in
jae
pop
and
jbe
jp
add
lds
mov
data16
mov
nop
jmp
outsl
xchg
and
adc
in
sbb
xor
mov
cmp
xor
gs
ja
inc
xlat
loop
icebp
xlat
cmp
inc
xchg
pushf
dec
popa
and
cmpsb
lock
pop
dec
dec
or
sub
or
pop
and
inc
and
daa
in
lods
xchg
push
pop
neg
and
les
int3
fisttpll
cmp
loop
call
lret
inc
add
push
and
or
into
sub
or
insb
sbb
out
or
xchg
shrl
push
add
push
sbb
xchg
sti
xor
insb
xchg
fsub
iret
add
jbe
sub
js
cmpsl
xlat
adc
add
xor
inc
and
xor
cwtl
dec
pop
test
mov
pop
and
cmp
aas
cmpb
bound
pop
movsl
stos
jecxz
push
movsb
jb
js
int
add
push
hlt
inc
inc
push
frndint
inc
or
enter
cmp
popa
cmpsl
sarl
xor
pop
adc
adc
inc
and
mov
mov
adc
outsl
std
aad
cltd
roll
bound
mov
and
movsl
in
xor
daa
and
lret
mov
xor
xchg
mov
fistpll
dec
add
repz
pop
mov
repz
push
sbb
movl
cmp
add
dec
lock
sub
test
mov
hlt
dec
and
sub
in
scas
stc
mov
aas
scas
insb
add
mov
sti
rcll
or
adc
out
shlb
add
lds
call
mov
xor
gs
inc
fstpt
lods
adc
push
jb
out
lock
icebp
mov
xor
and
sbb
call
out
xchg
push
add
enter
adc
pusha
lcall
inc
rcrl
shll
and
lock
jno
aaa
fmul
pop
or
ret
outsl
loop
xor
mov
mov
in
out
adc
dec
cmp
pop
sub
call
nop
aaa
sbb
insl
out
mov
imul
xor
mov
sub
icebp
cltd
popa
push
xchg
lds
rorl
pushl
adc
dec
jae
pop
jb
sahf
xor
xlat
test
lds
sbb
pop
insl
push
cltd
adc
dec
jp
pop
bound
pop
nop
cmpsl
test
arpl
movsb
jbe
sub
scas
dec
and
mov
mov
mov
shl
insl
arpl
xchg
and
aam
sub
pusha
push
int3
or
jg
aas
test
inc
nop
xor
addr16
icebp
jnp
mov
mov
adc
push
mov
mov
adc
mov
je
aam
cltd
mov
into
inc
pop
add
stos
or
push
pop
pop
int
mov
pop
xchg
xchg
stos
cld
mov
xchg
cmp
xchg
adc
xchg
js
xor
pop
jmp
out
arpl
jle
xor
inc
or
fstpt
inc
cmpb
addb
jp
sub
inc
adc
sub
outsl
or
pop
mov
popa
push
pop
adc
cmp
mov
pushf
mov
in
jge
cmc
in
aam
and
mov
lret
lods
out
orl
cmp
xor
pop
rcrb
cmp
and
lahf
inc
ret
mov
into
xor
sub
mov
dec
sub
stos
cmp
inc
inc
xchg
push
pop
fsubrl
jle
and
dec
mov
or
arpl
in
hlt
lods
adc
testb
movsl
arpl
inc
xor
into
jns
and
mov
cmp
rorl
mov
fs
cmpsl
add
out
pop
pop
aad
std
or
daa
out
jno
movsb
sti
lahf
aaa
mov
imull
xor
jg
fs
js
test
pop
ja
fldcw
mov
dec
push
in
test
and
cmc
inc
cmc
jl
clc
push
push
xchg
lock
pop
xchg
sbb
inc
daa
xchg
mov
ss
rolb
cmp
mov
sub
sub
cmpsb
push
clc
xor
leave
inc
loopne
fistpll
imul
push
das
pop
int3
addl
push
push
movsb
ss
mov
iret
out
xchg
mov
jp
cmpsl
and
stos
lret
sub
dec
scas
call
test
gs
dec
mov
scas
mov
fildll
pop
mov
jle
xchg
in
mov
rolb
inc
aaa
add
sarb
adc
into
into
inc
jl
in
push
mov
mov
adc
aas
pop
xor
imul
inc
ret
add
out
in
daa
xlat
stos
stos
mov
scas
mov
ret
repz
and
fcompl
in
add
sbb
push
push
test
inc
push
dec
fucompp
sub
scas
fcompl
mov
mov
pushaw
push
orb
test
jmp
sbb
ss
and
cmp
aas
test
dec
adcb
jecxz
fcmovne
in
mov
push
stos
lcall
enter
push
jnp
cmp
adc
mov
nop
inc
sub
ds
repnz
sub
arpl
outsl
aad
lds
adc
call
rcl
ret
sbb
cmp
sub
mov
bound
and
int3
and
pop
orb
pop
aas
dec
addb
jne
xchg
and
xchg
push
adc
test
mov
jno
push
test
addr16
ret
scas
test
dec
cmp
test
push
jbe
pop
into
cmp
adc
stos
sarl
js
repz
inc
into
gs
and
fwait
xor
mov
xchg
add
mov
xchg
inc
cmp
imulb
cli
fisubl
addb
iret
push
loopne
mov
push
jecxz
shll
pop
sbb
test
cli
lds
fnsave
adc
cltd
shlb
fcomip
jns
aas
jle
mov
rolb
outsl
loopne
jnp
aad
or
jne
pop
pusha
inc
fcoml
jmp
shrl
les
adc
pmulhuw
cmp
mov
sub
dec
xor
mov
mov
aad
jle
popf
sub
inc
test
js
fdiv
cmpsb
fcoms
cmc
push
daa
cmp
out
pop
sub
scas
sahf
mov
fldt
mov
pop
lret
push
mov
mov
sub
pop
or
in
aas
aad
fiaddl
mov
popl
jbe
out
and
push
test
and
jns
hlt
xchg
movsl
data16
lds
rcll
shl
roll
test
rcll
jbe
xchg
fdivs
mov
movsb
or
pop
add
loope
je
inc
xchg
into
dec
sub
mov
dec
inc
push
test
test
mov
pop
loopne
rolb
shrl
in
and
jae
and
movsb
arpl
or
mov
push
outsl
mov
movsb
jmp
lds
dec
jno
fs
lods
cmp
roll
adc
ficompl
xchg
fimuls
dec
popf
movsb
mov
fstps
xor
loope
inc
sbb
test
mov
fistpl
movsl
mov
push
push
mov
adc
jno
push
mov
fsts
xor
and
popa
leave
mov
mov
nop
into
filds
iret
inc
jns
pop
insl
add
mov
or
push
insl
dec
aas
push
sti
outsl
mov
mov
pop
movsb
push
lahf
or
adc
sbb
mov
jp
mov
xor
aaa
mov
ljmp
pop
mov
sbb
test
jp
push
out
jg
sbb
roll
jb
cmp
outsl
jbe
mov
sbb
xor
push
mov
push
dec
cltd
jle
mov
jp
ret
mov
mov
addb
into
es
out
xor
sub
fs
pop
push
jb
leave
repnz
cmp
lods
mov
int
jb
inc
out
mov
mov
and
popf
jo
push
gs
lret
or
cmpsl
test
ret
popa
into
bswap
hlt
hlt
scas
test
jno
es
inc
into
iret
jbe
adc
cmp
jbe
push
popa
xor
jecxz
test
add
pusha
fistps
cwtl
dec
push
shrl
ss
mov
jecxz
mov
mov
xchg
enter
mov
rolb
insb
popa
inc
adc
movsb
pop
cmp
mov
or
outsb
sbb
mov
mov
addl
ret
pushf
aaa
add
js
adc
push
push
enter
sarl
mov
bound
lods
movb
cli
push
mov
adc
out
add
je
mov
test
mov
pop
mov
fstpt
leave
dec
sbb
cmp
idivl
out
push
out
inc
push
mov
add
gs
push
nop
rolb
je
out
fdivrl
je
nop
inc
sbb
stos
nop
dec
push
sarb
stos
dec
icebp
cli
xchg
adc
or
pop
cmp
sbb
in
std
or
in
xchg
cli
out
xchg
push
movsl
adc
and
fldcw
aam
or
xchg
sub
out
pushl
je
testl
jns
mov
out
mov
inc
shl
adc
mov
add
movsl
sub
and
adc
xor
adc
jecxz
pop
inc
lea
imul
mov
stc
outsb
dec
jg
in
gs
mov
mov
ss
stos
rorl
test
xchg
sbb
ja
fidivrs
xor
mov
dec
xor
xor
aad
imul
lea
or
call
leave
and
clc
or
jb
fcompl
pop
inc
dec
call
int
out
cmpsb
push
lret
xchg
outsl
imul
adc
add
stos
int
mov
mov
mov
pcmpeqw
das
mov
pop
pop
imul
cmpsl
lods
mov
ja
shlw
hlt
clc
cmpb
lea
fstpt
popf
mov
xchg
bound
js
dec
or
out
scas
pushf
push
push
nop
jmp
shlb
mov
add
insb
bound
push
sub
xor
gs
xor
push
sbb
sub
js
or
sar
xchg
enter
push
test
arpl
jns,pn
xchg
sub
sbb
pop
mul
xorb
push
popf
xchg
mov
inc
rcr
mov
fisubrl
push
inc
xchg
adc
push
dec
add
ds
xor
dec
dec
sbb
inc
sbb
mov
or
push
add
sti
and
cltd
mov
scas
sub
aas
in
lea
push
mov
gs
scas
sbb
lds
sbb
in
shlb
test
call
inc
adc
jle
mov
es
es
pop
ret
outsl
jp
adc
cmp
dec
jecxz
fsts
call
adc
mov
xlat
mov
push
inc
cmp
jne
inc
add
cmc
inc
and
jl
pop
pop
mov
in
movsb
jbe
test
fwait
push
pop
cmc
fnclex
lock
mov
imul
call
lcall
mov
rcrl
cmp
push
sub
mov
add
fisttps
push
jb
mov
mov
mov
aaa
inc
pusha
aam
lods
sub
movsl
ja,pn
arpl
cmp
inc
or
sub
idivb
inc
pusha
mov
jo
subl
lods
inc
dec
or
inc
jmp
adc
mov
dec
jo
pop
popa
add
jecxz
nop
mov
jle
pop
inc
mov
mov
mov
cld
je
fisubrl
xchg
scas
dec
lods
rcrl
push
dec
ljmp
cmp
push
xorb
push
in
mov
cmp
add
outsb
push
cmp
xchg
fbstp
sub
mov
aas
repz
sub
xlat
sub
sub
data16
ret
pop
adc
pushw
mov
lahf
popf
test
push
outsl
outsl
iret
cmp
ss
jno
cmc
sub
fcoms
repz
je
loope
or
xor
mov
in
xor
imulb
scas
addl
ja
or
cmc
cmc
and
mov
inc
mov
inc
sbb
sbb
icebp
pop
push
or
dec
outsb
sbb
decl
adc
push
xchg
mov
cmpsb
cmpsl
aas
xchg
dec
xchg
cwtl
mov
icebp
sbb
data16
movsl
cmpsl
sub
mov
out
test
inc
xchg
fwait
aaa
popf
mov
xchg
les
sbb
orl
cmc
push
movd
sarb
lahf
push
xchg
pop
orl
push
mov
stos
sbb
mov
lods
adc
test
mov
cs
pop
cmp
lods
cmp
or
sbb
cmp
enter
mov
mov
mov
mov
jmp
loopne
pop
lret
pop
add
dec
insl
inc
sub
sub
adc
iret
cwtl
sti
fisubs
stos
mov
in
imul
ret
es
pop
stos
dec
sub
push
mov
rcll
pop
mov
cld
decl
fiadds
and
push
inc
or
xchg
adc
jp
pop
push
mov
add
pop
outsb
nop
pushl
fisttpl
inc
pop
sbb
push
and
mov
dec
sahf
push
js
push
push
pushf
xlat
fldl
fisttpl
push
xor
loop
dec
sbb
pop
adc
mov
inc
mov
dec
das
xchg
xchg
loope
adc
hlt
scas
jle
fbld
je
ljmp
sub
dec
rcr
sbb
pop
scas
mov
ljmp
sub
std
pop
mov
pusha
and
mov
leave
popf
mov
sbb
fsubr
cs
mov
cmc
in
es
stos
xchg
pop
mov
mov
pop
shl
jg
push
jns
movsl
inc
outsb
or
lods
loope
ret
adc
enter
mov
lock
aam
testl
fldenv
imul
lds
jne
mov
mov
mov
mov
xchg
xchg
jge
enter
push
sub
mov
ss
cld
push
decl
push
adc
pop
in
xor
dec
push
cmp
clc
mov
cmp
insl
mov
mov
dec
fwait
ljmp
adc
loope
xor
xlat
es
lock
sahf
incb
push
out
xchg
pop
mov
out
adcb
int
adc
sbbl
xchg
xor
push
repnz
addl
pop
pop
push
mov
xlat
test
in
sbb
mov
pop
mov
cmpl
and
mov
jno
xor
clc
das
dec
les
outsl
mov
xor
int
lret
inc
jmp
xor
js
xchg
outsb
ss
and
lods
outsl
test
dec
ret
andl
jl
or
inc
jb
push
in
js
inc
ja
dec
or
loopne
pop
sub
stos
outsb
mov
inc
out
push
mov
ret
mov
insb
sub
nop
add
push
clc
mov
enter
subb
pop
add
xor
pop
arpl
das
pop
fmull
not
fcomp
loopne
cmpb
dec
stos
mov
sbb
cmpsl
addr16
xor
adc
sahf
jle
ljmp
in
and
lahf
nop
jmp
ret
dec
add
push
jno
pushf
inc
lahf
lds
call
mov
mov
and
dec
mov
push
cli
xor
fnstsw
insl
jecxz
pop
pop
and
push
aad
push
insl
mov
mov
sbb
xor
add
mov
pop
and
adc
lods
mov
push
lods
shr
in
cwtl
lds
xchg
push
jmp
out
adc
add
inc
aaa
aad
mov
xchg
cli
mov
jb
pusha
movsl
cmp
or
inc
jns
adcl
insb
sub
xor
leave
xchg
pop
mov
repnz
jo
fistpl
aaa
cmp
cmp
inc
push
mov
out
inc
jl
addl
ds
or
dec
mov
cmpsb
push
gs
xor
pop
pop
jl
and
sbb
int3
add
sbb
outsl
push
inc
add
jg
adc
cmp
scas
inc
jecxz
lahf
rclb
jg
mov
inc
inc
inc
cmpb
fwait
and
sbb
and
mov
lock
inc
in
mov
popa
mov
push
sarb
xchg
shlb
enter
cld
rorl
pop
leave
cld
jecxz
pop
pushf
iret
ficompl
fstps
push
fs
adc
push
dec
int3
mov
push
insb
test
insl
das
add
mov
mov
lret
fidivs
rcrl
imul
sub
shrl
scas
add
int
pop
lret
jnp
dec
add
inc
add
push
lea
pop
lods
xor
dec
cwtl
push
add
jge
sub
out
cli
mov
pop
js
pop
sub
sbbb
andl
cmpsl
cmp
inc
fmulp
outsb
inc
or
stos
cltd
ja
add
and
push
in
sbb
or
inc
repz
push
cmpsb
jle
or
add
rorb
loopne
cld
mov
dec
jne
cmp
fldl
pop
sbb
push
add
inc
cmp
hlt
pop
iret
in
test
cmp
jle
sub
aas
test
stos
dec
sub
pushf
aad
je
xlat
aaa
mov
sbb
cmpsl
pushf
out
inc
leave
stc
loope
xchg
loope
and
mov
jecxz
inc
aad
fdivrs
pop
xor
icebp
out
ljmp
push
lock
push
lret
jo
dec
mov
mov
nop
xchg
dec
and
xor
push
jae
hlt
adc
mov
xchg
je
mov
cmp
fisttpll
daa
outsb
jp
sub
std
push
mov
sahf
adc
call
jmp
inc
stc
dec
xchg
sbb
enter
call
inc
and
movsb
sub
arpl
sahf
lds
sbb
xor
pop
data16
pop
hlt
loope
mov
jmp
mov
adc
pop
adc
in
xchg
inc
adc
or
adc
in
out
dec
popf
adc
or
aas
and
add
lret
dec
inc
xchg
push
xor
and
cmp
add
icebp
in
lret
mov
aad
stos
test
out
loope
mov
pop
mov
rorl
fcompl
fists
movsl
popa
mov
dec
adc
adc
jnp
xor
popa
je
cmc
adc
out
and
lcall
sbbl
pusha
dec
shlb
ja
test
sbb
aam
or
fdivl
xchg
divb
je
and
sbbl
movsb
cmc
sbb
and
jp
xchg
push
cmp
or
push
shll
stos
mov
pusha
mov
or
xor
daa
in
xor
sub
shll
cltd
mov
imul
sub
movsl
sbb
mov
insb
jmp
pop
test
jnp
jae
enter
mov
push
cmp
and
lret
ret
ja
xor
maskmovq
out
mulb
sbb
dec
push
lods
ret
jnp
mov
insb
cmp
jp
push
sahf
lock
jns
lahf
jge
sahf
imul
daa
imul
dec
addb
cmp
test
dec
adc
sar
ss
into
std
mov
or
cmpsl
mov
rcrb
xchg
mov
jmp
pop
pushf
jl
mov
jecxz
sub
shl
rclb
lock
jmp
cmp
push
or
mov
popf
mov
loope
cltd
sarl
and
leave
sbb
push
add
popa
das
fs
sub
in
lahf
push
ss
mov
shrl
hlt
scas
dec
ds
in
mov
jno
in
lds
imul
dec
pop
repnz
inc
xchg
fists
inc
clc
cmp
xchg
adc
insb
sub
imul
mov
jae
fcoml
xchg
cmp
stos
pop
aaa
dec
int
push
cmp
lods
pushf
push
mov
repz
repnz
push
sti
adc
jbe
fsubr
sub
out
lahf
pop
or
inc
inc
mov
push
sahf
or
call
fisubl
mov
push
shlb
call
nop
inc
ret
xor
std
out
jge
mov
lock
xor
sbb
dec
xor
add
adc
rorl
pusha
in
enter
orl
gs
cmp
push
insb
daa
mov
xchg
movsl
sbb
push
mov
nop
cld
je
shr
jno
fsubp
movsb
pop
or
lret
adc
mov
test
shll
cltd
ss
jno
cmp
mov
hlt
clc
fstps
and
inc
in
jbe
mov
enter
das
adc
sti
out
cs
sahf
inc
adc
mov
cs
ljmp
pop
outsb
gs
lea
inc
sbb
loope
sub
fbstp
push
xchg
addl
subb
jnp
arpl
xchg
nop
addr16
jns
xor
test
sbb
push
push
or
ss
mov
cmp
popa
add
outsb
cld
setg
cmp
or
push
sqrtps
cwtl
jae
cmp
loope
cmp
push
jae
push
subb
inc
mov
pop
pop
sbb
pop
xor
mov
sti
popf
gs
push
push
lret
dec
or
inc
inc
nop
or
pop
out
add
fucomi
xor
lret
ja
dec
mov
std
fldt
xor
in
adc
sub
test
jne
add
lods
sbb
mov
sbbb
stos
int3
push
sub
add
jb
mov
inc
test
mov
xlat
inc
out
or
mov
push
icebp
insb
sbbb
jmp
subps
cltd
sarb
mov
adc
sbb
pop
inc
ja
jns
mov
test
aad
or
mov
rep
pop
pop
adc
inc
push
sahf
dec
je
push
xchg
and
sub
push
aam
rorl
sbb
mov
mov
sbb
sbb
mov
movsb
pop
sahf
ret
sub
iret
int
adc
lock
out
sub
es
popf
aaa
cmp
mov
add
sbb
insl
sbb
cs
push
sahf
pop
xchg
insb
pushf
cld
inc
jp
shll
test
xchg
fmull
pop
movsl
leave
stos
xor
icebp
movsb
imul
pop
cmpl
and
add
or
fwait
pop
xor
ficompl
push
jge
fstl
jmp
test
pop
inc
jno
shll
jg
popf
shlb
in
das
dec
add
pop
and
aas
test
movsb
pop
lcall
sub
rcr
adc
xchg
inc
dec
mov
in
mov
xchg
adc
les
aas
xor
sbb
mov
lods
out
outsl
int
stc
mov
xor
xchg
sbb
push
xchg
shll
push
fcomp
and
in
ja
mov
push
mov
adc
dec
ficompl
cmpsl
lret
pop
hlt
mov
mov
adc
push
add
xchg
cmp
scas
xchg
cmp
add
mov
into
xor
and
sub
push
movsl
scas
sub
pop
pop
mov
les
cmp
cmc
inc
aas
aam
das
repnz
xor
dec
mov
fcompl
cmp
popa
fnstenv
cmp
lods
push
inc
sub
adc
cmpsl
sbb
jns
ret
mov
int3
out
pop
dec
xchg
xor
mov
cmp
test
jmp
xchg
cld
push
dec
add
imul
xchg
cmc
adc
pop
jne
push
sub
pop
in
lcall
js
and
pop
mov
scas
ret
jmp
insl
jnp
mov
sbb
and
jg,pn
pop
lret
out
fcomps
jecxz
adc
outsl
inc
mov
dec
sub
push
test
iret
sbb
test
pop
pop
sbb
je
cmp
and
mov
push
push
movsb
pop
icebp
imul
outsb
xor
fadd
inc
push
in
inc
mov
fsts
push
pop
xor
data16
leave
not
mov
push
hlt
mov
cmp
out
shll
insb
jmp
adc
adc
xor
dec
rep
into
out
mov
mov
enter
xor
insb
cld
inc
leave
xchg
sbb
pop
popa
cli
push
bound
cmp
fldenv
push
cmp
sub
scas
push
enter
gs
sub
stos
lret
add
out
sub
lods
fst
rorb
pop
sbb
push
adc
xchg
cs
cli
in
cld
ror
xor
dec
lahf
xor
jb
repz
std
pop
cmpb
int3
cmp
cmp
push
ss
movsl
pop
fstpt
sub
outsb
mov
lock
mov
rol
or
adc
mov
outsb
inc
lret
dec
mov
icebp
lcall
jg
scas
and
cmpsl
fs
out
add
add
xlat
lods
bswap
jg
inc
stc
or
sti
fwait
or
xchg
outsb
lcall
ret
and
hlt
call
nop
lcall
add
aad
xchg
mov
mov
scas
xlat
xchg
insl
test
and
adc
inc
loopne
sub
loopne
test
mov
shll
int
ret
pop
clc
jmp
notb
and
inc
fmul
mov
mov
pop
and
sti
xchg
add
and
jl
mov
cmp
jge
out
xchg
cltd
mov
in
mov
pop
mov
xchg
push
call
out
test
dec
adc
jp
pop
in
add
inc
mov
sti
ret
inc
push
xor
or
lahf
pop
dec
lods
ficompl
push
jg
add
adc
sbb
imul
ja
call
stos
jg
push
daa
out
adc
xor
loope
jle
ja
js
mov
rcl
out
lock
inc
mov
sub
lcall
pushf
jbe
iret
inc
rcr
mov
and
shr
push
mov
and
aas
in
sbb
fidivs
std
fldl
loope
or
movsb
mov
jl
inc
push
jns
je
mov
cli
inc
mov
jno
in
lahf
sbb
sub
lret
lods
pop
mov
sbb
xor
outsl
cmp
push
push
add
or
push
pop
enter
push
sbb
cmp
jns
mov
btr
insl
or
mov
push
pop
shl
inc
dec
jo
cmpsb
xchg
out
repz
ljmp
jb
nop
aaa
test
add
jne
and
and
and
test
and
mov
pop
clc
cli
and
pop
mov
jbe
push
fadd
or
ficompl
sbb
sub
dec
adc
in
es
pushf
dec
xchg
test
pop
jae
ret
mov
add
push
mov
fidivs
jmp
push
adc
pop
jno
gs
stc
leave
arpl
lcall
cmp
xchg
test
xchg
and
lods
push
jge
jle
push
xchg
xor
lea
jb
rorb
add
add
sbb
jl
pushf
dec
cwtl
mov
cmp
ja
mulb
lcall
stos
iret
inc
test
xchg
iret
and
test
and
xchg
sub
cmp
pop
jecxz
xlat
inc
cmp
and
scas
lahf
bound
lret
addl
stos
jns
push
ljmp
aaa
add
mov
sub
in
pop
mov
outsl
xor
pop
cli
fwait
insl
xor
mov
push
xchg
and
out
lods
mov
mov
sub
mov
in
xor
mov
mov
jo
jp
add
mov
les
jl
imull
push
iret
aad
mov
out
aas
insl
mov
fsubs
rolb
cltd
pop
scas
pop
push
subb
fwait
imul
push
sbb
and
push
dec
jbe
cmp
ret
nop
iret
gs
inc
in
cli
mov
or
cmove
ja
xchg
adc
stos
or
pop
sub
xchg
jg
lahf
test
and
insb
gs
pop
arpl
ret
mov
rorb
into
leave
fs
cwtl
and
mov
pop
fistpl
roll
in
cmp
loopne
aam
clc
or
sbb
into
sbb
stos
adc
arpl
mov
add
lods
push
mov
iret
add
inc
and
cwtl
or
adc
inc
into
mov
xchg
add
and
sub
xlat
or
mov
ret
leave
mov
cmpsb
push
shrb
aam
inc
mov
dec
scas
test
in
sbb
inc
mov
and
xor
ss
dec
jns
mov
inc
sahf
sbb
in
sub
clc
lods
jo
mov
pop
arpl
enter
movsb
out
and
jno
gs
fwait
xchg
fisubl
fsubrl
jnp
lds
test
leave
int
add
mov
pop
rorl
int
ljmp
addr16
xchg
jo
push
insl
lock
cmpsl
out
jge
sbb
cmpl
lahf
push
repz
or
or
lock
shl
call
xor
xchg
fbstp
xor
or
ja
movsb
nop
mov
daa
aaa
add
inc
cmpl
das
mov
jle
pop
xchg
mov
mov
and
out
lahf
lcall
mov
pop
pop
pop
cs
mov
ficoms
arpl
sahf
stc
cs
sbb
sarl
and
push
sbb
jmp
das
hlt
es
cmp
sarb
sub
adc
sahf
pop
mov
fwait
mov
mov
and
xlat
cmp
popf
test
in
bound
outsb
adc
xchg
mov
in
aam
in
or
popf
stc
out
or
sub
fs
mov
xchg
jne
or
jg
pushf
mov
pop
dec
std
ljmp
into
pop
sbb
incl
stos
jg
mov
lods
fs
test
ljmp
mov
cmpsl
xor
stos
inc
subb
es
cmpsb
rol
pusha
or
pushf
aaa
inc
es
in
dec
jnp
mov
lods
or
clc
cmp
shll
add
mov
pop
aad
loopne
testb
mov
movsl
mov
ffree
arpl
mov
insb
aam
mov
sub
fadd
outsl
imul
outsb
rcll
dec
and
rcr
mov
xor
jnp
cmpsb
stos
aaa
sarb
test
fninit
sbb
mov
pop
xchg
sbbb
jg
rorb
in
pusha
dec
clc
add
sub
mov
mov
movsl
faddl
daa
cmc
or
lods
shll
xchg
pop
into
sub
push
mov
pop
in
sarl
and
xor
and
out
dec
push
adcb
inc
mov
sbb
cmpsl
ret
sub
push
stos
popf
mov
xchg
inc
adc
scas
mov
inc
sub
sbb
sub
sbb
test
dec
sahf
pop
jbe
int
jo
cmpb
cwtl
xlat
int
mov
addb
xchg
test
inc
pop
repnz
add
cmc
xchg
mov
push
loop
ret
mov
aam
push
xchg
pop
cmpsl
xchg
ss
and
jne
add
sbb
out
mov
mov
inc
mov
jbe
and
fnsave
scas
dec
inc
popa
mov
rcll
adc
aas
inc
sbb
ret
pop
dec
inc
fwait
into
incl
cmpsb
or
std
lods
mov
mov
sbb
pop
negl
push
lea
mov
push
scas
pop
cmc
push
add
cmp
call
adc
mov
or
cmpsb
rcr
push
inc
xchg
sbb
mov
imulb
out
adc
test
mov
fcmovu
ljmp
rcpps
int
and
xchg
cld
call
add
sti
mov
pusha
sarb
movsb
xchg
lret
sub
or
aaa
movsl
jle
dec
xor
mov
jle
mov
cmp
sti
dec
dec
loopne
sub
test
and
push
push
add
and
mov
aaa
jae
test
dec
xchg
pop
outsl
dec
push
pop
dec
xchg
jmp
adc
add
pusha
test
ss
pop
jns
pop
scas
insb
and
repnz
std
jg
jno
nop
cmpsl
push
jecxz
pop
inc
lret
sub
clc
adc
jb
lea
xor
stos
daa
call
fs
and
sbb
cli
add
int3
xchg
outsb
inc
movsb
inc
fsubl
cmpsb
cmp
testl
cmp
inc
jnp
lcall
mov
lcall
mov
mov
push
adc
in
scas
and
sub
repnz
dec
and
sbb
inc
movsb
jae
xchg
adc
xchg
or
aam
int3
pop
test
in
fisubrs
das
ds
mov
add
in
sub
shll
cli
mov
pop
mov
inc
inc
data16
mov
es
fcmovnb
sub
mov
imul
cmp
imulb
out
mov
into
pop
mov
mov
cltd
out
pop
cld
shlb
cmp
and
das
dec
ljmp
push
dec
incb
mov
lds
pusha
mov
xchg
mov
test
sub
jp
mov
pop
out
and
enter
jnp
in
jle
sub
lods
rcrl
ljmp
inc
xchg
ss
cli
sbb
cmpsb
arpl
push
mov
mov
push
mov
insb
cmp
push
ret
popa
jle
push
sbbb
in
or
inc
and
inc
jae
repz
jo
sbb
xchg
pusha
add
and
popl
or
mov
push
cmp
pop
push
icebp
push
pusha
or
or
adc
pextrw
adc
aas
sbb
dec
push
jae
stos
nop
adc
mov
xchg
lods
push
cwtl
add
pop
shll
jae
and
mov
imul
inc
adc
jmp
ret
mov
ljmp
cld
addl
loop
or
push
mov
xchg
fdivl
pushl
add
mov
fstps
incb
shrl
xor
scas
push
int
outsl
aaa
test
stos
out
int
cmp
js
cli
dec
pop
ret
mov
jo
jge
sub
xlat
rorl
mov
push
cmp
fmuls
cmpl
ljmp
inc
daa
and
push
cmp
mov
stos
repz
ficoml
mov
mov
jbe
fcom
add
or
bound
nop
fists
enter
lods
daa
sub
push
inc
test
xchg
cmp
dec
cmp
sbb
xchg
sub
loopne
test
or
imul
shrb
add
pop
aas
insl
movsb
push
mov
das
shll
in
and
sahf
xchg
bound
add
jo
in
scas
lods
mov
xchg
ss
mov
test
sbb
rolb
dec
shl
sbb
or
jae
xchg
pop
xchg
cmp
lds
call
sbb
out
je
stos
xor
addr16
add
lods
jnp
nop
and
pop
fcoml
mulb
popf
mov
lahf
cmpsb
out
or
sbb
pop
dec
rol
xchg
mov
and
cwtl
test
xlat
jno
lock
mov
movsl
test
js
repz
repnz
cli
cld
rol
iret
xchg
inc
mov
cmpsb
std
daa
add
cmp
push
push
nop
sbb
xchg
nop
xchg
aam
out
lods
add
aad
sub
sbb
nop
xor
mov
jge
ds
adc
arpl
xchg
das
push
cmpsb
jl
sub
loop
leave
fcomps
xorb
xor
push
movsl
sar
mov
add
je
cmp
int3
push
rclb
jmp
jle
pop
jno
xor
sub
cmp
insl
xorl
xlat
pop
push
jmp
mov
lret
nop
lods
xchg
and
fs
or
movsl
ja
mov
test
xchg
cltd
cmc
lahf
adc
mov
dec
mov
lods
cli
les
xor
push
lret
add
inc
popa
leave
ss
mov
sbb
adc
inc
push
and
mov
es
sbb
push
mov
mov
ret
data16
pushf
andl
js
fsubs
adc
aaa
sbb
movlps
or
pop
test
enter
pop
sbb
int3
imull
out
sbb
pusha
dec
fs
add
mulb
adc
mov
cmc
xor
in
jns
push
imul
ljmp
mov
dec
adc
xchg
or
insl
mov
mov
insb
push
jmp
push
dec
sub
movb
js
ret
xlat
adcl
mov
push
fsts
push
popf
int3
inc
sub
sbb
mov
mov
movsb
loope
cmc
test
mov
push
cs
xchg
in
sbb
faddp
mov
mov
icebp
cltd
mov
jecxz
fwait
sub
repnz
cmp
cltd
lsl
jl
mov
xor
rorl
xchg
cmc
sub
xlat
and
pushf
scas
stos
iret
push
inc
insb
inc
pop
mov
sub
ljmp
cmc
leave
addr16
add
daa
add
sbb
imul
inc
fistpll
adc
xchg
cmp
xchg
xchg
loop
xchg
call
sub
repnz
sbb
cmc
shlb
cltd
outsl
std
xchg
in
inc
int3
aas
in
mov
fsubrs
mov
fwait
push
enter
mov
clc
bound
cltd
lret
and
and
mov
cmp
adc
cwtl
lock
cmp
jne
cmp
ret
divl
adc
inc
mov
push
mov
jbe
sbb
inc
push
repz
and
ds
incb
aas
out
pop
sbb
inc
pop
mov
pop
lcall
iret
jge
fdiv
mov
push
sbb
cmp
pop
incb
mov
fiadds
inc
cmc
stos
loopne
jmp
sbb
inc
bound
mov
dec
std
fidivl
enter
mov
sub
subb
addr16
les
rcl
push
cmp
sub
out
xor
cmp
js
fucomi
sahf
nop
cmpsl
loop
imul
sub
jb
sbb
push
pop
stc
lret
fldcw
aas
fiaddl
pop
mov
jae
scas
dec
xor
push
jg
inc
add
jb
call
jecxz
sbb
or
scas
push
rep
inc
dec
xlat
scas
pop
int
add
je
inc
mov
sbb
mov
push
sub
and
lds
inc
enter
mov
ja
out
loopne
add
jle
sub
sub
cwtl
fildll
mov
and
add
add
decl
sub
ret
lods
cld
jecxz
out
shl
fistpll
jmp
or
push
subl
mov
movsl
jp
fmuls
sti
stos
sti
ljmp
pop
int3
cmc
push
fcom
pusha
mov
mov
pop
push
pop
ljmp
iret
outsb
pop
mov
aad
mov
enter
into
mov
aam
aad
rolb
cmp
shrb
or
mov
outsb
iret
leave
adc
mov
cmpsb
aam
push
xor
mov
xor
inc
jmp
cwtl
lock
int3
orb
pop
push
sbbl
popa
sbb
fistl
icebp
popl
xor
cmpb
mov
add
lods
mov
hlt
loop
jne
scas
inc
mov
sub
adc
mov
js
les
sub
pcmpeqw
fidivrl
adc
pop
mov
in
add
dec
or
or
aam
pop
inc
jp
in
cli
sub
pop
dec
push
mov
in
scas
xchg
mov
mov
repz
and
pop
push
xchg
cmp
mov
xchg
jp
push
loope
repz
xor
push
in
clc
jns
inc
push
pmulhw
jnp
cmp
and
sbb
pusha
js
pop
xlat
fisttps
add
test
hlt
jecxz
ror
pop
call
push
sarb
pusha
jo
cmp
es
ret
out
jnp
pop
mov
and
stos
repnz
pop
sarb
adc
cmpsl
aam
inc
bound
jo
sub
and
cmp
scas
test
push
mov
pusha
insl
dec
movl
insl
mov
xor
dec
pop
movsb
dec
adc
or
jns
call
jg
int3
push
aad
or
push
xchg
or
cmp
xor
fstps
sbb
mov
dec
jns
popf
jmp
dec
mov
stos
fdivrs
dec
mov
mov
inc
imul
push
adc
xlat
push
jg
repz
leave
sbb
add
je
add
add
mov
js
xor
dec
lods
xchg
imul
das
out
imul
sar
fsubrl
cs
lret
pop
aas
mov
mov
push
inc
xchg
imul
jp
pop
jae
xchg
sti
enter
inc
xchg
rcrb
inc
roll
inc
push
pop
push
sbb
lods
jle
testl
ljmp
popf
rclb
xchg
sub
aam
fs
cmc
ret
sbb
cmp
fstpl
pop
push
cmp
jno
es
aas
add
lcall
jl
fldenv
and
std
pop
loope
pop
mov
xchg
ds
jmp
mov
xor
loope
inc
mov
dec
xchg
adc
xor
loop
rcl
dec
in
in
rcrl
mov
lahf
cmp
cmp
std
adcb
or
mov
sub
pusha
jo
and
bndldx
pusha
jb
xchg
test
jecxz
stos
dec
js
pop
jmp
mov
rorb
shrb
mov
pusha
clts
lahf
and
jb
lods
sarl
fsubl
dec
push
bt
fldenv
cmpsl
mov
jecxz
imul
lea
lcall
in
cmp
cld
out
mov
or
xchg
pop
xor
cmp
sub
fidivl
dec
sub
inc
xor
mov
or
xchg
adc
xor
sbb
stc
inc
scas
cmpsl
mov
adc
push
js
clc
cmpsl
lods
mov
cmpsl
ja
fisttpl
or
jmp
sub
add
or
or
mov
jmp
fstpt
icebp
pop
movsl
xchg
sbb
fnsave
imul
loop
mov
lods
xchg
pop
int3
orb
das
push
and
inc
mov
loopne
pusha
xchg
aas
push
cmp
test
jecxz
fisubrs
fwait
inc
add
or
mov
aad
pop
sbb
inc
lcall
pop
xor
sub
inc
or
sub
repnz
mov
aam
hlt
test
insl
movsb
jmp
add
aas
xchg
arpl
fmull
das
arpl
xchg
fistpl
test
loopne
mov
cmc
es
pushf
dec
js
xchg
pop
mov
stos
mov
xor
xchg
adc
and
repz
clc
hlt
xchg
arpl
sbb
lds
mov
cmp
mov
cmp
adc
jns
imul
cltd
xchg
std
out
jg
nopl
mov
stc
mov
imul
xor
add
ret
iret
add
ljmp
rcl
test
rorb
scas
ret
popf
sbb
pushf
das
push
mov
test
out
mov
mov
loopne
sbb
mov
inc
fst
adc
or
sub
inc
mov
hlt
andb
ss
adc
and
dec
cmp
pop
movsb
cmc
inc
fbstp
jge
mov
clc
cs
adc
test
add
jns
lahf
divb
clc
cmp
rcll
add
mov
cmp
addb
mov
inc
pop
in
ja
xor
dec
arpl
popf
jns
inc
push
rcrl
sub
fisubs
sti
pop
pop
adc
lods
lret
notb
jge
ja
sub
cmp
fidivrl
pop
dec
xorl
mov
adc
popf
lcall
popa
les
adc
xor
daa
shlb
outsb
test
lret
das
and
ss
mov
ds
dec
pop
jns
fcom
lods
dec
arpl
xor
and
xor
cmp
push
xorl
xchg
push
lds
sbb
inc
sbb
mov
jg
aam
lret
pop
fsubr
arpl
add
dec
dec
andl
lods
dec
rsqrtps
sahf
daa
push
mov
pop
or
adc
aam
mov
cld
push
js
repz
push
pop
sbb
jnp
pop
xchg
arpl
mov
push
popf
sbb
push
mov
pop
or
sar
mov
mov
sti
push
insb
out
ss
fucomp
xchg
ljmp
lock
pop
jae
cs
addr16
das
add
stos
sub
pop
nop
adcl
or
mov
sub
xchg
popa
outsb
imul
xchg
stos
call
pop
ret
in
popa
arpl
data16
sub
sub
out
inc
push
push
or
in
pop
adc
mov
and
mov
xchg
jp
outsb
popf
xchg
jmp
push
ja
shl
fadds
mov
nop
orb
dec
lcall
push
je
xorb
sti
mov
sbb
sbb
jmp
imul
pop
fisubrl
jp
dec
sahf
cltd
lods
cmc
mov
pop
or
rolb
pop
adc
sbb
adc
cmpsb
ret
inc
repnz
dec
xchg
cmp
add
add
pop
dec
jne
sbb
jle
popa
xchg
push
xchg
das
daa
xor
in
hlt
popf
call
and
push
pusha
adc
pop
and
call
jbe
mov
or
mov
pop
int
sahf
inc
rcll
cli
scas
data16
lcall
xchg
mov
push
mov
mov
sbb
jb
ja
lods
fwait
mov
mov
mov
cmp
cmpsl
imul
mov
imul
sbb
enter
stos
add
rolb
pushf
push
adc
jne
mov
fldcw
or
xor
push
adc
cs
push
pop
sub
ja
aas
add
or
leave
jns
seta
lret
xorb
inc
insl
cmp
add
imul
jns
jge
into
lods
add
dec
cmp
adc
add
gs
pop
inc
test
or
and
testl
push
inc
cmp
bound
dec
popf
subl
loop
loopne
xchg
or
cmpsl
pop
fs
push
fidivrs
imul
sub
clc
icebp
jae
fsub
add
xor
or
into
lret
mov
es
dec
andl
in
stos
pop
add
mov
test
pop
jmp
rolb
add
out
in
cmp
dec
pop
cli
mov
ret
mov
movsl
call
jns
sti
cmp
jp
movsl
or
mov
cmp
mov
add
mov
sahf
mov
shrb
out
in
leave
jns
inc
or
or
adc
and
lock
out
aas
jl
jl
sti
dec
ljmp
nop
js
iret
movaps
add
jecxz
lods
or
dec
and
fdivr
scas
mov
jg
xlat
fistps
into
testb
cli
lock
out
aaa
add
inc
daa
push
test
jne
xchg
add
inc
rcrl
test
movsl
or
inc
xor
pop
sbbb
sbb
aad
push
mov
push
mov
stos
push
cmpsb
inc
outsb
add
lea
jmp
adc
sub
inc
pop
xchg
call
jae
mov
or
xchg
popa
shr
test
leave
lret
ret
stos
clc
adc
xchg
xchg
inc
cmpsb
fisttpll
adc
dec
jne
loope
mov
ds
cmpsb
leave
sbb
addr16
ja
jno
inc
repnz
in
mov
mov
dec
add
or
xorl
mov
outsb
icebp
mov
jae
mov
subb
sbb
test
mov
sbb
lret
arpl
pop
arpl
fwait
call
pop
stos
mov
sub
mov
repz
fsubl
cli
mov
xor
mov
aaa
arpl
push
push
push
inc
lds
inc
inc
rorb
aad
cltd
ja
filds
xchg
xor
je
push
insl
sbb
shrl
add
dec
or
cmp
ret
sub
icebp
mov
xchg
mov
sahf
je
cmp
mov
inc
outsl
lret
jle
lret
aam
subl
sub
sub
aad
pushf
add
jle
lcall
out
xchg
dec
and
fistl
cs
shrl
mov
rcrl
leave
cmp
mov
mov
xchg
cs
or
sub
cmpsb
and
mov
call
stos
push
outsl
mov
lea
addl
movsb
nop
cmp
lods
inc
and
jmp
stos
jle
cmp
aas
inc
gs
fisubs
add
xchg
xchg
ror
cmp
lret
pushf
sub
nop
daa
mov
inc
sub
stc
push
es
rcrb
mov
push
arpl
xlat
cmp
aaa
ret
cwtl
and
cmp
sahf
pop
or
mov
ss
mov
xchg
pavgb
mov
mov
lret
lahf
dec
lret
lret
cltd
enter
gs
scas
lret
pushf
inc
in
jmp
push
sar
pusha
cmp
je
lds
xchg
cli
out
mov
mov
iret
fnstenv
jo
pop
loopne
les
es
push
lea
pop
mov
mov
push
outsl
cmp
cmp
inc
fbld
daa
arpl
cmp
int
or
xchg
cmpsl
roll
aaa
add
mov
mov
adc
repz
mov
xchg
push
lea
ja
hlt
rolb
xchg
pop
pop
inc
add
popf
and
or
in
jl
leave
push
aas
xor
cld
jbe
popf
imul
bound
aaa
add
pop
fsubrs
mov
fidivs
mov
xchg
repz
rorb
sbb
movsb
mov
jb
and
mov
leave
adc
sbb
shl
push
cli
push
xchg
sbb
jbe
gs
dec
cmpsb
scas
xchg
lods
not
and
loope
jnp
in
adc
jle
ret
js
scas
pushf
adc
jae
clc
jnp
in
daa
imul
xchg
lcall
dec
shl
and
in
mov
inc
cli
xor
xor
out
fs
mov
nop
add
and
push
cmp
push
add
rsqrtps
popf
dec
mov
push
jb
xchg
sahf
jmp
and
xchg
jl
pop
xchg
lds
push
js
nop
cwtl
push
dec
pop
popf
adc
cmp
adc
std
fucomp
js
rorl
sbb
stc
jb
out
push
inc
xchg
lahf
lods
dec
sbb
xor
xchg
cmp
sbb
jo
mov
lock
jno
pop
enter
dec
lret
push
dec
sub
int
xchg
fbstp
repz
xchg
jl
jmp
cwtl
add
adc
sbb
into
mov
mov
stos
and
push
jne
faddp
xchg
xor
push
scas
jo,pn
mov
test
int
in
test
mov
lcall
daa
lret
dec
or
mov
sub
cld
push
aaa
add
sub
dec
or
rorb
cmpsb
test
or
sbb
ljmp
mov
jns
push
pop
adc
jbe
xor
jnp
sarb
popf
pop
jns
mov
mov
push
sti
nop
mov
data16
fmuls
test
lret
jmp
mov
add
jae
imulb
imul
loope
jo
in
and
imul
pusha
push
loopne
push
mov
inc
out
pusha
mov
mov
in
jae
pop
adc
cmp
fisttpl
pop
fsubr
pop
lret
rcll
out
push
inc
push
or
xchg
mov
test
cmp
fldcw
jmp
mov
xor
inc
jno
fsin
popf
sbb
mov
push
or
mov
pushl
aas
pop
cmc
mov
add
mov
in
jno
mov
rcll
arpl
jo
cwtl
cmp
xchg
xchg
xchg
pop
sti
pop
mov
sbb
cmp
jns
sahf
out
mov
sbb
aas
adc
out
or
sti
xchg
popa
cli
ror
cli
pop
cs
jmp
rcrb
sarl
std
xchg
add
daa
mov
pop
and
fiaddl
pushf
leave
pop
jmp
mov
ja
pop
in
in
cmp
pop
test
clc
inc
pop
xchg
shlb
and
sub
mov
and
enter
repz
lea
sub
fcmovne
xchg
dec
pop
dec
jmp
cs
adc
dec
dec
cmc
pusha
xor
call
in
inc
add
lcall
and
inc
and
xchg
mov
xchg
sub
jp
pusha
pop
in
adc
push
push
mov
adc
xor
test
cmc
insl
pop
out
inc
lea
push
imul
and
loope
dec
xor
daa
sti
push
icebp
dec
cmpsl
and
imul
insl
inc
sbb
into
push
call
mov
push
inc
ljmp
lods
cltd
popa
cli
push
add
push
es
push
jecxz
movsb
sbb
or
dec
or
jmp
repz
xor
dec
das
adc
add
mov
fwait
inc
nop
xchg
shlb
jo
mov
xor
cmovl
test
or
pop
cmp
std
push
stos
std
inc
pop
jno
adc
scas
sub
icebp
push
fnclex
mov
fdivl
inc
stos
ljmp
inc
add
ja
fwait
outsl
fs
mov
add
sub
in
jae
loop
mov
rcl
push
cmp
xchg
mov
sti
es
sub
jb
cltd
pop
mov
or
mov
les
in
mov
mov
outsl
subl
loop
inc
dec
xchg
and
dec
sbb
imul
mov
xchg
cmp
or
lock
jno
inc
adc
idiv
sub
push
aam
fisubl
daa
aam
popa
das
push
lods
mov
mov
pop
pop
mov
cmpsb
leave
push
and
and
cmpsb
je
repnz
sbb
lret
jp
arpl
mov
movsb
push
cmpsb
mov
arpl
not
mov
ljmp
out
loopne
js
mov
mov
sub
aam
lahf
sarb
out
inc
bound
sub
jmp
sub
scas
jge
imul
movsl
in
pushf
adc
stc
cmpsl
leave
push
mov
push
testl
repnz
pop
push
or
cmp
adc
addr16
adc
adc
mul
mov
cmc
lret
jne
aad
pop
jns
mov
loop
cli
pop
xlat
dec
out
outsb
adc
adc
cmp
push
jmp
push
lods
sbb
lcall
push
loopne
outsl
mov
test
cmp
dec
and
outsb
sahf
mov
lret
xchg
xor
movsb
or
jl
sti
cmpsb
dec
mov
adc
mov
xor
mov
ja
inc
sbb
decb
pop
push
fxch
inc
jmp
pop
je
lock
mov
mov
stos
or
lret
xchg
imul
xchg
sub
sbb
out
adc
mov
sub
cli
and
and
push
mov
dec
pop
stos
scas
jle,pt
loope
popa
xchg
outsl
xor
and
sub
inc
add
and
xor
mov
popa
outsl
mov
scas
mov
popf
clc
das
fistpl
std
pop
push
sub
cmp
adc
pusha
addl
or
out
and
into
stos
add
aaa
stos
fmuls
mov
mov
sbb
lea
and
popa
inc
xchg
fbstp
push
push
inc
push
mov
cmp
nop
aam
ds
pop
xlat
adc
faddl
and
icebp
fstpl
out
rclb
enter
cmc
fcmovnb
icebp
sti
jnp
ss
pop
pop
adc
xchg
lock
xchg
stc
mov
or
shrb
mov
pop
ja
mov
jl
jl
nop
and
cltd
ds
sbb
cmp
jle
cmpsl
ss
mov
or
xchg
mov
cmp
jle
xchg
xchg
mov
cwtl
bnd
jb
sub
scas
inc
xchg
mov
ret
popa
push
xchg
mov
jns
lcall
aas
cmp
xchg
and
or
jno
xor
sbb
pop
addl
nop
pop
adc
pop
in
sub
dec
mov
out
or
jno
pusha
xchg
repz
hlt
rclb
repnz
mov
cmp
dec
lahf
push
hlt
lock
ss
pusha
lods
inc
aas
test
jne
inc
xor
outsb
enter
push
mov
mov
jmp
lahf
cmp
or
adc
adc
es
out
adc
jae
sub
xor
xor
jae
out
out
dec
mov
jle
add
jnp
fisttps
sahf
cmp
and
out
loope
pushf
push
iret
pop
cli
pop
adcl
test
bound
out
jmp
leave
cmp
xchg
mov
adc
pusha
adc
popa
in
inc
jl
fistl
rcrl
int
xlat
das
les
add
mov
out
xorl
mov
test
in
xchg
inc
scas
xlat
nop
jge
adc
sti
aad
add
adc
mov
das
insb
adc
jnp
pop
sahf
js
negl
pop
les
insb
lea
imul
sar
out
cmp
dec
cmp
bound
pop
mov
repnz
cmpsl
insb
mov
ret
dec
into
fbld
es
shlb
mov
leave
adc
xor
jnp
or
jno
fstps
and
mov
mov
cmc
jbe
hlt
and
inc
dec
in
jmp
xchg
mov
cmp
push
daa
int
test
mov
sub
outsb
aaa
cltd
dec
sub
jmp
rcll
dec
jge
and
cmp
pop
das
cs
dec
push
lds
cli
xor
push
add
mov
mov
xor
int3
adc
inc
cld
lahf
rorb
movsl
dec
out
add
repz
adc
lret
cs
rcrb
pop
add
mov
scas
xchg
les
dec
sub
push
dec
pop
xor
enter
addl
in
enter
pop
inc
pop
jb
dec
call
mov
dec
xor
lods
fcompl
fstl
pop
dec
pop
push
add
mul
pop
or
mov
jp
jmp
mov
dec
divb
sub
repnz
rcr
adc
pusha
subb
jecxz
hlt
push
pop
inc
lret
cmp
int
pop
lods
sub
ljmp
jmp
or
mov
add
push
push
loopne
mov
xor
push
dec
daa
js
rcll
scas
xlat
sub
in
aas
jne
adcl
cmp
xchg
negl
scas
sti
jp
pop
pop
push
inc
mov
mov
and
out
jne
stos
mov
jp
call
or
lea
jecxz
push
out
inc
add
das
add
add
cmpsl
sbb
push
jns
ja
add
xchg
ss
xor
inc
lock
pop
fstpl
mov
add
xchg
sbb
or
pop
cmp
scas
pusha
inc
or
or
rorb
dec
xchg
shll
mov
cwtl
ja
mov
xchg
adc
mov
fdivrl
inc
mov
adcl
mov
sub
popf
enter
ljmp
lods
mov
jl
lds
imul
mov
pop
ljmp
sbb
cmpsl
push
jnp
adc
test
cmp
dec
push
loope
add
cmp
inc
js
outsb
iret
movsb
and
jns
adc
mov
mov
xor
sbb
popa
stc
int3
loopne
push
sarl
lahf
leave
es
fcos
loope
std
xchg
repnz
mov
or
pop
jo
inc
std
in
xchg
scas
in
jo
in
popa
xor
add
fnstenv
mov
sub
inc
jmp
pop
sahf
push
in
adc
std
jae
js
pusha
aam
xor
fnsave
xchg
or
push
mov
or
pop
stos
loopne
mov
ss
pop
jp
mov
mov
stos
mov
push
push
and
xor
loopne
mov
int
sbb
aam
cmc
mov
stc
sti
xchg
cmp
or
icebp
add
and
hlt
cmp
scas
pop
pop
push
rorl
setp
sbbl
addb
shl
in
dec
arpl
adc
jns
jnp
pop
push
cwtl
and
dec
inc
movsb
cmp
repnz
pop
les
and
lcall
push
sbb
lret
inc
imul
aaa
std
xchg
or
push
js
inc
mov
mov
xor
mov
push
es
dec
sbb
fnstenv
xchg
es
mov
xchg
dec
xchg
cmc
inc
push
sbb
xchg
xorl
or
mov
ret
cmpsl
pop
imul
popf
in
xchg
add
jnp
mov
xor
cmp
mov
insl
add
iret
fmull
dec
pop
out
jecxz
jle
lret
cmp
pop
pop
cmc
fidivs
sahf
and
imul
lret
push
mov
jbe
stos
test
dec
adc
xor
repz
leave
add
mov
cmc
fsubp
sahf
idiv
inc
mov
or
mov
dec
mov
mov
pop
lods
mov
fbld
arpl
lock
in
sahf
push
xchg
jle
pushf
dec
jle
daa
lds
mov
cmp
xor
es
add
add
sbb
sbb
push
insb
lret
rcrb
pop
shll
push
dec
loopne
jl
data16
outsl
sbb
push
push
leave
or
shrl
sbb
push
shrl
inc
pop
adc
sub
jmp
ljmp
bound
adc
and
das
insb
adc
daa
pop
jmp
fwait
scas
jns
lret
inc
dec
push
jne
shlb
fisubl
pop
lock
xorb
ret
pushf
insl
sbb
ja
xchg
xchg
push
mov
cltd
and
mov
inc
adc
pop
adc
push
add
adc
and
xchg
xor
add
mov
movsl
fcompl
add
rorb
add
test
sarl
fisttps
dec
js,pt
push
cmp
inc
lahf
mov
inc
mov
ret
cli
push
fcomip
add
test
pop
pushf
lret
divl
inc
aam
cld
outsl
jge
mov
lret
pop
roll
push
and
flds
dec
sbb
push
or
das
leave
repnz
pushf
jge
stos
in
shll
cmc
add
inc
or
jmp
sbb
shrb
push
mov
or
orl
jo
decl
scas
stos
sahf
mov
bound
int3
icebp
shll
inc
or
push
xor
sub
outsb
test
mov
push
or
mov
xchg
es
mov
push
mov
mov
lods
push
xor
xlat
xlat
sub
ljmp
mov
cwtl
mov
shlb
and
or
leave
lahf
aaa
jmp
adc
xor
repnz
push
dec
cld
pop
mov
imul
test
lcall
nop
adc
into
push
inc
xor
adc
pop
cs
jecxz
inc
sub
in
dec
fdivrs
and
inc
es
sub
pop
das
pop
sbb
mov
rclb
or
xor
add
gs
lret
ficomps
push
mov
inc
insl
out
xorl
sbb
and
push
shl
dec
jno
jno
or
sub
xor
pop
xor
mov
push
clc
pop
push
int3
in
cli
and
lods
imul
dec
inc
aad
scas
enter
sarl
mov
push
add
adc
or
bound
jae
inc
and
sbb
shll
jne
rcr
cmp
mull
push
fs
dec
mov
inc
jg
and
fsub
cld
bound
inc
rclb
mov
shr
test
and
cmp
pop
subb
std
and
mov
mov
cmp
cmp
mov
pop
or
int
stos
jge
mov
fidivl
shlb
scas
fisubrl
outsb
sbb
lock
inc
cmp
push
mov
inc
js
xchg
pop
testl
mov
sarl
out
aaa
dec
movsl
inc
dec
mov
loopne
mov
inc
push
jle
push
data16
test
jmp
sti
xchg
adc
in
add
mov
and
jle
call
xor
clc
mov
aas
or
jo
je
push
cs
jne
test
dec
pushf
mov
stos
mov
mov
scas
das
cltd
mov
mov
rclb
sub
xchg
xcrypt-cfb
cmpsl
mov
pop
lret
out
xor
or
dec
xchg
pop
cmpsb
dec
rolb
sub
push
mov
push
mov
sbb
mov
incb
xor
je
sahf
sbb
fisubrl
sbb
aaa
repnz
xor
dec
jae
sub
fimull
popf
insb
ds
je
xchg
pop
rolb
inc
jge
pop
dec
pop
aas
scas
into
enter
mov
dec
fcomps
andl
outsb
adc
push
cmp
into
add
movsb
icebp
xchg
push
cmp
mov
xorb
push
sbb
clc
add
xlat
cld
std
jno
fnstcw
fcompl
rcrb
cltd
lret
push
mov
cmp
cmp
nop
push
aaa
or
inc
fdivr
call
mov
jmp
sub
mov
pusha
push
outsl
mov
inc
das
jl
pop
sar
test
mov
dec
mov
mov
js
push
sbb
int3
push
loopne
aas
push
shll
sti
xor
xchg
jecxz
fiaddl
add
xor
ja
xor
std
mov
shll
push
push
mov
cmp
mov
aam
mov
imul
sub
subl
pop
adc
inc
lods
fsub
repz
xor
out
sub
inc
jnp
out
cmp
add
inc
xor
insl
add
dec
cmp
dec
jmp
movsb
adc
rclb
shll
mov
scas
xchg
xchg
out
pusha
hlt
cwtl
cltd
lea
push
les
cmp
pop
inc
pusha
xor
or
pop
dec
cld
fwait
and
jne
cmc
test
push
sub
sti
lahf
mov
push
push
and
sar
xlat
mov
pushl
cwtl
push
push
push
push
or
cmp
xor
adc
add
insl
xchg
out
es
out
push
xor
call
adc
sub
cmc
push
arpl
cmp
test
daa
adc
push
inc
push
hlt
adc
cmp
xor
dec
cmp
pop
mov
int3
bound
dec
shlb
cmc
imul
dec
cmp
and
lea
ss
iret
call
int
pushf
mov
outsl
cmp
outsb
dec
push
bound
cli
inc
xor
jno
xchg
movsl
jb
insl
dec
imul
je
cld
mov
std
lret
stos
aam
mov
or
rcrb
inc
data16
int3
out
xor
xor
bound
pop
mov
xchg
jo
inc
popf
mov
mov
inc
mov
xor
sbb
ret
leave
mov
push
pop
int3
adc
in
jge
fucomp
pop
cwtl
xchg
pop
mov
xchg
and
inc
out
or
jnp
mov
xlat
sbb
enter
xor
adc
test
jp
mov
mov
mov
scas
es
rcll
pop
lahf
push
scas
sbbb
lahf
ja
jl
test
pop
scas
in
insl
int3
aam
aas
pop
popf
js
and
xor
shrl
hlt
sub
push
sbb
add
push
mov
enter
lods
dec
push
scas
filds
sub
clc
and
out
movsl
mov
dec
pop
shrb
andl
xorl
int
cmp
mov
cld
adc
popa
mov
mov
add
fldt
jge
scas
andl
ret
dec
arpl
dec
or
ja
cwtl
jns
stos
xor
add
dec
fisubs
and
in
adc
jo
push
add
es
scas
xor
push
xor
jmp
mov
cmp
sub
daa
cwtl
cmp
xchg
push
or
bound
mov
pop
ret
cmp
push
sbb
cmp
mov
sub
fmul
dec
stc
cltd
mov
pop
jne
je
in
or
mov
sbb
sbb
jp
jge
jl
popa
or
shl
push
mov
or
fbld
add
dec
jg
jl
fists
fwait
and
pop
adc
push
movsb
sub
lods
add
sbb
dec
shl
pop
incl
fs
xlat
cld
mov
aaa
and
mov
scas
jne
cmp
inc
lcall
divb
popf
roll
mov
mov
daa
lods
test
fscale
dec
push
mov
pop
jnp
pop
push
pop
fsub
addb
and
jmp
int
es
cmpsb
rolb
ds
pop
gs
les
imul
jg
loop
lds
fnstenv
dec
clc
xchg
lea
xchg
xlat
mov
lret
and
rorb
jnp,pt
mov
or
rcrl
dec
and
scas
pushw
jnp
xor
add
loop,pn
stc
jp
push
lods
xchg
pop
sar
push
movsb
and
cmp
ljmp
dec
out
cmp
sbb
in
in
xchg
jecxz
rorb
xorl
push
push
shll
xor
das
pop
fsts
and
fwait
push
ljmp
mov
and
lock
pushf
pusha
jo,pt
shl
jg
leave
mov
lods
dec
push
or
sub
movsl
dec
int3
xchg
rep
in
inc
xchg
push
jge
les
push
jne
cmp
dec
pop
cli
cmp
or
testb
adc
out
push
push
sub
cld
sub
decl
mov
dec
in
ficoml
lret
inc
mov
xchg
mov
sub
push
fldt
orl
and
adc
imul
js
xor
dec
imul
mov
push
adc
loope
adc
jmp
call
mov
inc
mov
mov
das
lret
add
jecxz
add
add
dec
int
jae
push
inc
js
xchg
xchg
lcall
jle
in
negb
and
popf
xrelease
jecxz
mov
dec
jae
flds
outsl
pop
mov
hlt
push
sbb
idiv
lea
loopne
xor
sbb
mov
sbb
cmp
ja
in
push
jmp
xor
inc
test
test
jp
dec
mov
incl
js
scas
jbe
ret
and
xor
mov
test
ret
outsb
adc
inc
leave
push
dec
mov
scas
adc
ss
fdivrp
pop
ljmp
jne
pusha
std
out
call
ret
das
xchg
sub
sub
cmc
insb
inc
inc
mov
rorw
jle
xchg
mov
out
daa
adc
mov
int
mov
and
jl
mov
out
pop
xor
aaa
mov
mov
popf
mov
push
aas
movsb
lret
xor
loope
imul
sbb
lahf
test
and
inc
cld
aaa
testl
imull
mov
int
call
daa
push
out
enter
or
adc
mov
sub
cli
lods
icebp
cltd
xor
scas
inc
fwait
mov
in
xchg
xor
jmp
mov
xor
mov
add
adc
shlb
push
push
cmp
sbb
jae
cwtl
std
or
dec
mov
mov
mov
xchg
sahf
mov
push
daa
and
cli
jae
add
dec
int
push
inc
xchg
adc
pusha
scas
dec
decb
sbb
bound
popf
pop
xor
scas
or
std
hlt
mov
mov
aam
es
orl
jb
mov
scas
ficompl
xor
add
fidivrs
jecxz
cltd
sub
outsb
lods
xor
push
lret
jno
in
push
scas
outsl
mov
in
add
stos
repnz
adc
add
fldl
decl
je
push
inc
lds
nop
and
jmp
lds
push
int
bound
adc
outsb
adc
jnp
pop
or
stos
mov
gs
mov
pop
sub
xchg
inc
inc
sub
sbb
or
int3
fiadds
dec
js
cld
xchg
pop
push
popf
ljmp
adc
xchg
mov
mov
xchg
jne
xchg
push
dec
mov
adc
mov
jne
sbbb
jmp
es
pop
ss
lea
cmp
ljmp
jae
xor
and
and
daa
adc
jo
test
cmp
fs
inc
fstp
xlat
nop
ret
dec
jle
imul
sub
xor
aaa
sub
dec
int
jg
push
shrb
mov
jecxz
fdivl
dec
cmc
jecxz
jbe
or
ljmp
and
enter
icebp
in
or
cmp
std
pop
xor
cltd
mov
mov
pop
ficoms
in
jl
mov
orl
sti
jg
inc
push
in
push
cli
mov
pop
mov
cmp
mov
cmp
fdiv
add
jno
push
repz
fmull
jae
test
xor
sub
jecxz
and
pop
jg
aad
clc
popa
sbb
pushf
ja
mov
insl
mov
int3
js
orl
sbb
inc
add
xor
xor
ja
push
sahf
cs
in
push
int3
jnp
cmpsb
add
cmp
sbb
dec
nop
stos
mov
sbb
xchg
dec
or
lea
rolb
sub
add
out
dec
sbb
push
or
ret
scas
mov
imull
mov
shrb
lock
jb
mov
xor
int3
js
sbb
adc
jle
imul
rcrl
lahf
fnsave
fldl
xorb
aad
adc
out
shlb
subl
loopne
xchg
inc
pop
cmp
mov
mov
cwtl
xor
fst
std
aas
xlat
push
or
daa
out
lahf
int
add
and
rcr
jle
mov
roll
mov
adc
jge
inc
cmp
sti
fwait
sub
push
fcmovbe
push
sbb
cwtl
mov
push
sub
mov
jmp
loope
mov
sub
mov
jne
aas
rolb
loopne
jp
add
and
lock
out
lahf
in
fwait
add
addr16
stos
and
fwait
insb
out
imul
mov
xor
mov
std
inc
jns
hlt
mov
sarb
jge
cmc
inc
adc
cmp
mov
stos
loope
mull
pop
mov
lret
or
addr16
imul
and
adc
lcall
sti
rolb
call
movsl
imulb
sbbl
out
ds
pop
cmpsl
decb
das
sbb
xchg
and
mov
cwtl
cltd
ja
gs
test
decb
xchg
pop
scas
cmp
imul
lret
xchg
mov
sbb
cmp
xchg
fcmovbe
loop
enter
hlt
call
sbb
pop
popa
xor
sub
sbb
add
xchg
mov
add
jbe
jo
int
push
mov
sbbl
test
enter
call
sbb
icebp
call
jmp
sub
or
jnp
inc
aad
cmpsb
or
xchg
sub
or
mov
ljmp
testl
iret
leave
sahf
inc
sbb
push
push
inc
mov
push
nop
or
mov
sub
ja
shlb
es
push
lret
push
aad
js
ljmp
jecxz
mov
push
or
mov
fwait
dec
lret
out
push
xchg
insl
fmuls
cwtl
roll
pop
es
cli
out
sahf
add
mov
addr16
mov
xor
xor
lods
shl
and
cmpsb
mov
mov
sub
mov
add
out
pop
cmp
add
int
mov
mov
mov
iret
mov
dec
fnstcw
jne
xor
js
cwtl
and
xchg
mov
sahf
repz
into
aad
out
inc
mov
sbb
test
cmpsb
jne
int3
cmp
js
sti
push
sbb
jae
bound
jns
adc
jae
mov
mov
loope
leave
add
clc
inc
push
repnz
push
fstps
mov
jne
call
std
dec
nop
and
mov
cltd
mov
incb
mov
aaa
sbb
repnz
out
ljmp
shl
mov
xchg
test
pusha
cs
std
sbb
es
jae
js
or
in
adc
and
adc
imul
outsb
mov
and
xchg
push
mov
or
mov
mov
add
sbb
pop
cmp
xchg
mov
inc
jb
adc
pop
mov
sbb
in
pop
repz
bound
sub
lods
jmp
and
test
pop
and
mov
hlt
test
sbb
std
or
cwtl
adc
mov
dec
mov
pop
xlat
subl
loop
or
xchg
roll
sub
pusha
dec
fsubrl
pop
or
cmp
push
jb
movsbl
mov
lret
scas
lds
sbb
sbb
jnp
push
xchg
jl
mov
fidivrs
lea
sub
push
lock
xchg
dec
xchg
xchg
cmpsl
call
inc
mov
xchg
into
andl
push
or
pop
test
hlt
vpmacsdd
push
enter
shr
jmp
jmp
je
ficoml
xor
add
rorl
add
aad
jnp
jnp
mov
adc
xchg
xor
sub
rcll
jno
jnp
dec
fists
lcall
mov
sti
popa
mov
lcall
xchg
sbb
shr
popa
inc
dec
fwait
sar
dec
jnp
lods
or
std
lcall
call
xor
or
call
adc
insl
cmp
mov
fcoms
or
adc
xchg
mov
enter
adc
sti
stos
jb
sbb
jno
mov
mov
dec
dec
jbe
mov
lret
ss
cmp
in
fucomip
jp
shlb
add
pusha
adc
fwait
and
sbb
pushf
ud1
aaa
lret
xorps
jnp
jmp
inc
jg
and
dec
mov
pop
in
jnp
in
stos
xchg
jns
stos
push
mov
aam
mov
iret
jae
pop
adc
mov
jl
adcb
icebp
lcall
popa
mov
or
imul
call
xor
icebp
pop
adc
icebp
int3
push
mov
xor
sbb
inc
movl
lcall
pushw
push
stc
jg
rcrb
adc
out
shll
pop
fdivl
jmp
lret
add
sbb
les
or
je
nop
pop
lock
outsb
pop
add
ljmp
push
lods
mov
sub
lock
lods
inc
pop
shr
hlt
push
shll
aad
fcomi
call
xor
push
cli
jne
cmp
cmp
loop
mov
fnstsw
mov
jge
jne
pop
scas
aas
ret
stc
cmpsl
in
jl
adc
cltd
adc
pmuludq
and
outsl
aaa
jnp
lock
popa
sbb
sbb
jne
lods
mov
sub
aam
pop
cli
push
add
mov
out
movsl
dec
sub
pop
imull
push
inc
data16
adc
int
popf
pop
cmp
mov
dec
push
mov
mov
xchg
loope
cmp
cltd
loop
lahf
dec
pop
inc
xchg
jle
mov
mov
push
adc
jae
pusha
inc
clc
adc
jbe
repnz
pop
into
ret
mov
inc
mov
dec
pusha
aas
push
adc
mov
jecxz
aas
adc
scas
xchg
pop
dec
sbb
lock
cmpsb
enter
fwait
lock
pop
mov
push
insb
push
sbb
or
into
imull
je
push
jge
cwtl
jle
xor
shrb
jle
mov
test
push
dec
dec
jmp
bound
jno
adc
fimull
pushf
je
add
sub
ljmp
push
mov
or
mov
das
sub
pop
xchg
insb
mov
jo
push
sbb
iret
orl
pop
mov
push
arpl
mov
cmp
mov
cs
fimull
mov
aad
fidivl
xchg
push
sbb
loopne
sub
cmp
aam
shlb
call
pop
xchg
xor
cmp
xchg
jae
sti
pop
movsb
jecxz
mov
pushf
fldcw
inc
out
or
pop
pop
jge
xchg
push
cmp
leave
mov
adc
push
frstpm(287
jmp
sub
push
or
fucom
push
inc
enter
and
int
jnp
daa
sub
mov
icebp
imul
mov
cmpsb
lcall
aas
mov
hlt
subl
mov
jns
add
sbb
and
xor
test
les
imul
jl
pop
das
loope
cltd
imul
push
sub
pop
cwtl
je
add
sbb
pop
adc
aaa
pop
adc
pop
sub
mov
pop
jmp
xchg
xor
pop
insl
les
test
pop
jmp
mov
mov
jae
jle
nop
push
mov
mov
lahf
lret
dec
mov
andb
mov
inc
mov
cmpsl
das
sub
inc
or
mov
cltd
pop
inc
jnp
fstp
mov
fimuls
sbb
in
bound
aaa
movsl
lods
mov
out
dec
pusha
xor
es
inc
jno
mov
or
inc
xorb
int3
sbb
push
call
mov
fildll
popa
mov
mov
xor
pop
jle
add
lret
in
inc
imul
scas
fsubr
add
push
ret
adc
daa
pop
cmc
mov
fs
setns
dec
xor
cltd
popf
lds
out
inc
fsubrl
jno
jp
jp
inc
iret
sbb
in
orb
and
inc
sub
imul
dec
add
iret
cmc
push
push
cmp
in
sub
lds
popa
ljmp
call
cltd
push
cmp
lods
test
gs
pop
jg
in
xchg
lahf
mov
adc
push
xchg
mov
int
add
in
cwtl
sbb
fidivrl
xchg
sbb
loopne
push
mov
in
xor
enter
mov
push
inc
imul
data16
cld
jg
stos
mov
xor
icebp
movl
cmpl
mov
mov
pop
fisubl
adc
add
jl
sbb
mov
test
sub
pusha
and
xor
dec
lods
inc
sub
and
mov
ds
sub
ja
dec
adc
push
insb
idivb
push
push
ljmpw
and
sub
jp
pop
or
sub
inc
aas
add
lods
aam
lea
insb
sti
sub
cwtl
rcrl
lahf
addr16
cmc
mov
or
xor
fidivrs
rcrl
and
mov
and
out
cwtl
lods
out
fimull
push
leave
pushf
jns
dec
sub
imul
add
mov
aam
sahf
jp
jmp
xor
icebp
lods
insl
insl
sarb
adc
pop
adc
sub
pop
add
inc
rorb
mov
sub
popa
bnd
pushf
js
mov
push
add
imul
inc
xor
jle
aaa
ffreep
or
mov
jg
cwtl
mov
xchg
jne
sub
mov
int
enter
or
in
mov
add
cmp
sahf
imul
cmc
mov
inc
hlt
mov
paddd
fistl
stc
ljmp
divb
lea
rcl
xchg
mov
xor
lds
cmp
xor
jp
bound
inc
test
cmpsl
insb
jno
inc
in
loopne
test
pop
cmpb
pop
shl
push
mov
enter
loop
in
ret
repnz
out
movsl
filds
xor
jp
inc
fidivs
xor
lea
jmp
push
das
ret
test
int
and
xor
ja
pop
int
mov
xlat
xchg
cmc
jp
push
jg
fwait
cmpsl
fwait
jle
test
enter
xor
mov
inc
or
scas
lods
jne
jp
mov
imulb
lea
shr
inc
loopne
loopne
rolb
xor
adcb
shrb
iret
nop
rorl
leave
xchg
call
lods
mov
test
jo
sarl
mov
imul
mov
roll
mov
mov
inc
adc
dec
push
xor
rcl
mov
pop
xchg
cmove
or
pop
push
pop
and
cmpsl
adc
fsts
loop
aam
xchg
popa
mov
aaa
mov
test
out
shl
sbb
ret
cmpsl
push
jb
fstps
mov
xchg
mov
mov
sub
lds
test
in
testb
cmpsl
push
aam
pusha
sar
xchg
arpl
test
cmp
push
loope
sub
sub
pop
and
dec
call
adcl
mov
sub
jns
cli
adc
push
iret
mov
jne
push
jp
adc
sub
pop
adc
xor
jmp
mov
jg
imul
pop
add
scas
sbb
mov
push
movsb
push
cmc
leave
test
mov
xchg
in
jae,pt
sahf
dec
sbb
xchg
insb
cmp
les
cld
xchg
sbb
xchg
les
fldenv
and
sub
xlat
adc
lret
mov
shrl
or
pop
mov
or
in
stc
popa
add
xchg
push
pop
mov
pushf
inc
out
pop
in
and
and
in
fwait
push
rcr
dec
sbb
push
call
test
xor
lock
push
jns
loop
sbb
int
inc
xchg
sbbl
xlat
xor
jle
repnz
xor
movsl
out
in
xchg
rcll
dec
push
imul
push
inc
inc
pop
decb
xchg
popf
es
in
orb
push
pushf
mov
adc
xor
xchg
xor
add
adc
outsb
dec
daa
mov
or
push
or
aas
or
lcall
or
int
adc
outsl
stos
int
fsubl
arpl
mov
pop
jns
nop
cmp
addl
push
mov
insl
mov
bound
aas
icebp
lock
ret
inc
lock
iret
adc
nop
cmpsb
jmp
ret
loope
imul
out
cmc
aas
adc
loop
cmpsl
mov
int3
jmp
push
je
and
dec
imul
jecxz
mov
hlt
and
daa
fwait
xchg
insl
add
out
or
cwtl
push
pop
fisubrl
xchg
mov
rcrl
push
adc
popa
xchg
ret
mov
imul
fisubs
xchg
nop
scas
xchg
push
pop
testl
add
insl
cmpsb
sub
leave
cmp
or
xor
inc
jge
fists
sub
adc
or
in
fwait
inc
test
mov
adc
push
rcrl
frstor
clc
int
loop
neg
lods
dec
aam
das
ljmp
cmp
insb
or
dec
xchg
jbe
gs
jg
jg
stos
lahf
jns
or
and
sbb
sti
inc
push
insb
or
ljmp
test
ljmp
lcall
daa
push
mov
lods
add
out
insl
xchg
cmc
jge
daa
pop
xchg
icebp
lcall
add
mov
cmp
cmpsb
dec
push
add
cmp
movsl
xchg
dec
pop
jns
inc
jne
mov
ljmp
sbb
in
test
test
xchg
xchg
xchg
xorb
call
push
inc
lds
mov
pop
nop
lret
es
les
ja
add
or
push
pushf
xchg
in
mov
xor
js
ret
push
cmp
mov
and
dec
out
add
sub
in
pop
iret
mov
insb
cmp
push
outsb
xchg
scas
dec
mov
jne
flds
into
sahf
xor
insl
outsl
rcll
lds
leave
je
push
mov
loop
xor
push
and
inc
adc
jle
add
xor
push
mov
sbb
stc
inc
push
sub
test
das
fstp
mov
repnz
sbb
out
lods
mov
insl
inc
and
adc
sbb
jbe
mov
repz
add
out
inc
frstor
cmp
push
or
outsb
mov
dec
js
inc
jne
or
ljmp
sti
xor
adc
ljmp
xorb
mov
shlb
xchg
lods
or
out
insb
call
or
dec
inc
mov
lock
test
ljmp
mov
rorb
or
sub
xchg
lgs
cwtl
ss
xchg
inc
outsl
in
shll
or
jp
gs
or
or
push
jno
or
pop
cmpb
mov
scas
dec
gs
mov
sbb
adc
jg
push
mov
fiadds
js
sbb
lcall
hlt
push
movsl
dec
mov
mov
fmull
hlt
movsl
das
xor
in
fidivrs
sbb
push
je,pn
push
repnz
or
repnz
lahf
fistpl
xor
sub
cwtl
cld
mov
mov
sbb
mov
mov
imul
dec
repnz
std
mov
push
sub
repz
push
and
scas
xor
add
adc
fcomp
das
stc
in
and
sbb
cmc
dec
in
ja
cmp
aas
incl
insb
mov
cmp
adc
int3
jnp
pop
rorb
pushl
jae
movsl
add
jl
cmp
lods
mov
jbe
loope
pop
fildl
shrl
lcall
rcll
lock
icebp
dec
into
xor
pop
add
fwait
repnz
add
movzwl
jne
test
cld
jns
xchg
fcomi
iret
xchg
inc
sbb
push
add
outsb
xor
mov
out
dec
mov
pop
mov
fnstsw
cltd
cmp
div
aad
orl
jge
lods
je
or
fnstcw
hlt
jle
cmpsl
mov
hlt
lods
mov
loope
lret
mov
sub
lock
in
pop
and
repz
lods
out
dec
xor
sbb
fimuls
pusha
test
xorb
cmp
ja
xor
xor
arpl
sub
mov
jb
cmp
mov
jecxz
enter
lcall
push
and
test
mov
and
out
xor
mov
sub
test
int
call
repz
in
add
jnp
adc
flds
mov
mov
repz
stc
loop
or
inc
dec
popl
adc
sbb
gs
insb
inc
jbe
xor
in
cli
mov
call
jecxz
stos
add
in
and
xlat
ss
enter
push
test
lds
xchg
pop
lock
fnstcw
arpl
lea
mov
sub
gs
xor
mov
jae
or
push
jg
arpl
cld
mov
and
mov
lods
mov
dec
mov
and
push
add
xchg
mov
mov
sbb
xor
mov
loop
and
in
xchg
mov
out
mov
dec
jno
in
sbb
gs
fiadds
das
push
inc
ds
pop
pop
es
fs
push
inc
popf
insb
and
dec
shr
or
jne
mov
cmpsl
xchg
stc
hlt
out
imul
inc
or
mov
dec
in
fwait
cmpsb
loope
pop
xchg
xor
jp
fistps
call
mov
ja
rorl
insl
mov
daa
or
sub
pop
loope
cmpsl
pop
jns
dec
and
add
jmp
inc
xchg
and
std
aaa
xor
out
icebp
push
aaa
jmp
lcall
mov
add
or
xor
ja
jo
push
lds
mov
pop
add
sbb
loope
popf
inc
jge
testl
addr16
jecxz
decl
xor
cmc
dec
push
cs
pop
adc
mulb
mov
dec
xor
stos
sub
lret
fwait
dec
adc
jb
outsb
cmp
jno
test
inc
addr16
or
mov
and
inc
lods
inc
pop
ljmp
fstpt
cmp
sub
xor
inc
mov
sahf
dec
insb
fidivl
or
mov
fldenv
mov
ss
sar
pushf
lret
push
sbb
xor
add
shl
add
xchg
aaa
wbinvd
fabs
jl
fnstenv
enter
test
fistps
jbe
sbb
test
xchg
lea
mov
stc
mov
dec
adc
xchg
mov
push
and
std
cltd
rclb
xchg
or
pusha
xchg
int
push
test
outsb
icebp
mov
xchg
push
xor
les
pusha
popa
icebp
les
cli
jae
mov
mov
xor
idivl
sbb
mov
cltd
push
push
insb
jge
mulb
mov
aaa
inc
mov
scas
mov
cwtl
adc
dec
pop
sbb
fnsave
mov
pop
adc
push
adc
arpl
cld
popa
bound
mov
cwtl
xchg
jnp
xchg
fidivrs
mov
dec
jmp
int3
mov
out
mov
lods
pusha
imul
mov
shl
sbb
adc
jo
mov
mov
push
adc
insb
push
add
sarb
in
jb
iret
and
inc
adc
out
mov
cs
shlb
pop
adc
jb
enter
roll
mov
nop
js
jae
pop
test
cmpsl
add
dec
mov
fimuls
xchg
xor
sub
sbb
out
fcoms
mov
test
in
push
pop
insl
loopne
es
jmp
inc
fists
sub
lret
xorb
jmp
adc
adc
je
aas
or
mov
repz
mul
out
inc
enter
mov
loopne
lea
mov
push
sbb
mov
leave
mov
xor
mov
mov
lea
aaa
xor
mov
mov
stos
inc
das
jnp
daa
dec
push
mov
mov
jo
je
aas
mov
mov
mov
iret
and
in
repnz
or
sbb
inc
push
loopne
sub
jne
or
xchg
mov
in
dec
or
add
sbbb
jno
mov
mov
subl
pop
call
and
lcall
es
arpl
stos
xchg
inc
inc
cmp
mov
fcoml
mov
negb
adc
push
popa
jae
adc
fidivs
adc
lods
nop
sti
repnz
aad
cmpsl
jns
into
imul
pushf
mov
fmulp
add
mov
aas
fcmovnbe
dec
shll
jne
dec
push
lahf
rcrb
xchg
mov
cmpsb
sub
mov
pop
mov
ret
xor
push
pop
mov
cmp
in
and
jns
cmp
movsl
cmpsl
mov
cmc
sbb
arpl
xchg
outsl
mov
pop
lret
out
mov
ds
push
pop
xchg
dec
push
iret
jle
outsl
jbe
jle
andl
nop
and
fmull
pusha
movl
aaa
xor
aas
scas
nop
jle
or
ror
int3
push
xchg
cs
daa
pop
cmpsl
add
sub
dec
scas
stc
mov
lods
pop
adc
test
xchg
les
hlt
jo
into
add
sub
lret
outsl
xchg
sub
dec
call
push
lods
cmp
lret
mov
or
xchg
and
xor
shrl
mov
inc
mov
fwait
or
jl
cmc
stos
pop
addr16
in
faddl
or
aad
fcmovnb
ffreep
jl
lock
inc
ds
inc
iret
sti
dec
mov
xor
mov
in
in
mov
or
stos
pop
sub
mov
jle
fwait
nop
pop
ds
sbb
pmulhw
xor
sub
das
das
sbb
aad
push
inc
rcr
in
and
pusha
stos
sti
push
arpl
xchg
mov
fdivrs
ss
scas
xchg
mov
mov
cmpsl
mov
icebp
jb
mov
dec
mov
mov
push
mov
repz
pop
arpl
push
in
lret
cld
mov
dec
leave
icebp
rcll
sarb
cltd
ds
adc
cltd
pop
adc
outsl
mov
outsb
jge
int3
inc
sahf
ds
sub
dec
pop
or
adc
inc
xchg
xor
ja
add
cltd
scas
inc
adc
fs
jecxz
lods
daa
xlat
adc
mov
aas
or
pop
and
or
mov
and
mov
sti
sub
or
negb
out
cmp
push
jg
mov
scas
mov
sub
scas
in
fwait
push
jne
test
add
xor
icebp
inc
into
sub
mov
outsl
imulb
std
into
jle
jmp
dec
inc
loopne
xor
stc
jb
or
xchg
stos
mulb
adc
in
add
and
mov
mov
jne
and
or
mov
sub
mov
cld
jo
inc
test
mull
push
sub
rorb
add
cmpsl
scas
xlat
test
lahf
imulb
mov
divb
mov
adc
push
sbb
cli
test
lods
pop
lret
jle
lahf
cmpsl
stos
or
scas
push
jae
shl
xor
mov
stos
jbe
ret
lret
out
stos
adc
pop
mov
sub
sub
sti
mov
movsl
inc
add
push
imul
imul
jge
cli
mov
sbb
pop
ss
scas
outsb
push
mov
xchg
lods
jmp
push
cmp
jno
xor
jae
push
jo
xor
push
or
rclb
mov
dec
mov
in
lret
dec
adc
push
xchg
movsb
enter
popf
movsb
or
cmp
loop
mov
mov
inc
jo
xor
iret
outsl
incb
in
xchg
fldl
add
inc
outsl
leave
ror
or
jmp
push
mov
cmp
sub
fisubs
mov
test
test
rcrl
push
xor
cltd
inc
push
push
mov
loop
add
hlt
jmp
aad
xor
xor
adc
jl
or
pop
test
push
pop
and
test
repz
mov
mov
mov
jle
mov
bound
xorl
xchg
push
stos
jle
nop
addr16
fs
cmp
fcmovbe
ja
adc
test
test
inc
xchg
addb
pushf
aas
les
imul
icebp
adc
rorl
push
jae
pushf
jb
mov
sti
dec
push
mov
rcl
mov
jno
mov
ret
or
adc
icebp
into
mov
push
sub
pusha
xchg
addb
sbb
nop
mov
push
or
jmp
data16
ret
gs
xchg
mov
xchg
mov
pusha
out
jecxz
out
xchg
sahf
xor
into
mov
icebp
mov
test
sahf
int3
mov
add
push
fistl
adcl
cmpsb
mov
sbb
dec
fnsave
insb
sbb
jnp
test
into
lcall
test
aaa
adc
arpl
orb
mov
and
mov
outsl
lods
pop
jge
sahf
in
and
add
lret
ljmp
fists
sub
jns
je
sub
movsl
loop
lods
jecxz
mov
lahf
loope
mov
js
ljmp
ret
arpl
out
mov
popa
out
mov
mov
pushf
sbb
mov
xchg
stos
cli
push
in
incl
sbb
sub
fiadds
fstpt
mov
loope
cmp
call
in
test
test
sbb
ds
xchg
cwtl
jl
and
push
dec
cld
dec
sbb
jl
ss
pop
mov
lret
js
lods
dec
fildl
js
pushf
pop
mov
inc
fistl
pop
cmc
jmp
push
jo
pop
fs
or
ja
out
xor
roll
xchg
leave
mov
xchg
aas
cli
scas
cld
ds
and
pushf
dec
popl
stos
jp
jmp
mov
ds
inc
push
in
inc
pop
negb
mov
jp
cmp
sub
faddl
xchg
test
pop
mov
mov
or
mov
daa
das
loopne
data16
fadd
xchg
jp
mov
psubd
pushf
jge
mov
dec
out
mov
ds
pushf
mov
sub
sbb
and
dec
and
add
add
adc
std
mov
mov
mov
add
jno
jnp
jae
sahf
nop
add
loop
lods
sti
xor
mov
adc
xchg
inc
push
std
pop
cmp
push
pusha
aaa
mov
dec
xchg
sub
add
stos
sub
xchg
int
sub
sbbl
fs
imul
cmp
pop
pop
add
add
std
std
push
dec
push
adc
dec
jno
fsub
adc
cmp
pop
scas
inc
pushf
add
inc
add
clc
jp
sbb
add
sbb
lahf
mov
movsb
into
aam
int
pop
ror
jnp
mov
jecxz
push
mov
cs
xor
les
fsubrs
insl
mov
shll
aam
sbb
sbb
popa
lret
xchg
mov
mov
leave
pop
es
test
call
push
mov
leave
xor
push
ret
jge
jmp
xlat
outsl
dec
pusha
out
mov
fnstsw
mov
mov
movsl
dec
mov
js
adc
xchg
cmp
add
out
scas
mov
int3
push
dec
adc
push
pop
loope
push
mov
cltd
lock
pop
push
or
jb
jns
stos
jl
in
sub
dec
inc
sbb
dec
dec
insl
mov
mov
adc
fildll
push
aaa
jle
icebp
sub
fs
ficomps
les
jp
lea
popf
or
and
aam
je
insl
lea
int
cmp
sub
cmp
jle
jg
jecxz
lds
and
or
pushf
mov
insl
mull
fwait
insb
xchg
loopne
add
mov
adc
pop
divb
sub
rol
test
cwtl
inc
fprem
ss
bound
mov
cmp
pushf
push
push
aam
stos
nop
add
adc
and
pop
loope
push
dec
subb
xchg
stos
daa
mov
arpl
nop
xchg
dec
les
enter
push
jnp
icebp
movsb
jne
and
push
inc
adc
leave
gs
fld
dec
inc
sbb
jl
pop
and
dec
int
mov
mov
inc
inc
mov
mov
adcb
sbbb
sahf
test
xchg
cmp
add
enter
mov
sbb
inc
sarl
xchg
push
inc
sub
xchg
icebp
add
cmpsl
jmp
jnp
cmp
std
ljmp
mov
loopne
xchg
pop
insl
inc
mov
mov
mov
rcrl
bound
or
lahf
xor
mov
mov
and
stos
popf
ljmp
mov
inc
or
pop
mov
pop
loope
mov
jge
ret
and
cmp
bound
sbb
clc
popf
add
push
push
dec
mov
push
xor
or
inc
gs
xchg
rcrb
fstps
addr16
hlt
and
xchg
mov
cmpsl
hlt
ficomps
sbb
or
popf
jns
xchg
mov
sub
xor
adc
aad
daa
adc
dec
cmp
pop
pop
jb
xlat
rol
cmp
push
sahf
push
add
push
push
lcall
push
mov
inc
hlt
test
cltd
test
fstp
xchg
mov
cli
or
loope
into
or
in
insb
dec
in
xchg
mov
cmpsl
ja
xorb
jle
push
insl
bound
movb
inc
dec
daa
popa
dec
jle
out
call
cmpsl
leave
subl
outsl
insb
js
sub
jb
popa
pop
jnp
inc
push
arpl
push
sub
push
je
pop
in
xorl
inc
bound
jae
stc
mov
rclb
pop
mov
repnz
adc
dec
pop
inc
adc
jecxz
cwtl
and
adc
pop
xor
das
sub
xchg
pop
sahf
push
sub
fsubs
enter
mov
hlt
outsb
or
daa
outsl
dec
std
repz
pop
sub
lret
cmp
daa
sahf
and
or
ret
dec
lds
jl
sbb
push
lock
sti
out
fstp
sub
les
dec
jae
lea
stc
sbb
add
pop
sbb
jne
pop
jge
mov
scas
jmp
hlt
sub
dec
adc
lea
inc
loope
add
and
jnp
sbb
inc
stos
cltd
cmpsb
gs
popa
add
push
inc
popf
arpl
xchg
sub
pop
pop
fiadds
ffree
or
aam
mov
dec
sbb
cmp
hlt
sbb
push
mov
add
fdivrl
pop
imul
js
xchg
lea
ds
jbe
sbb
mov
xorl
test
pop
xchg
jge
or
jmp
sarl
push
outsl
das
mov
pusha
iret
out
mov
scas
insb
xlat
test
arpl
mov
dec
adc
mov
test
mov
ret
fisubrl
shll
sbb
in
pop
rcrl
inc
xor
das
addr16
rcl
cmp
jbe
mov
add
cmp
sub
outsl
icebp
loop
je
dec
sub
nop
shrb
dec
lahf
sub
and
push
cmc
fidivrs
push
add
orb
push
mov
cmpsb
or
mov
mov
pop
incl
insl
stc
mov
xor
sub
cli
jge
js
out
dec
xchg
mov
cwtl
pusha
scas
inc
cmp
sbb
push
shl
aas
sbb
push
das
jg
add
or
xor
mov
leave
add
ds
aas
std
shr
ds
fxch
movsb
dec
mov
inc
and
or
push
sahf
jecxz
xlat
in
repnz
xchg
stos
mov
scas
inc
fldenv
loopne
call
shrb
mov
jg
repnz
je
dec
dec
mov
ljmp
scas
jbe
push
push
inc
ret
pop
cmp
in
pushw
ja
int3
xor
das
mov
divb
inc
cli
push
push
pop
lahf
jp
mov
inc
xchg
mov
out
cli
mov
jecxz
mov
leave
mov
or
lret
cs
cld
ljmp
popf
add
push
int
pop
push
mov
shlb
sbbb
pop
loope
mov
add
add
lahf
add
cmp
iret
mov
xchg
lods
xor
mov
lret
ret
dec
push
addr16
sahf
lret
xchg
repnz
cs
add
es
dec
and
cli
nop
inc
faddp
stc
add
fwait
hlt
pcmpeqd
adc
jo
sbb
cmp
neg
mov
ffreep
stos
leave
je
push
dec
add
mov
and
push
mov
push
cmp
scas
sarl
jne
in
add
dec
push
fsubrl
test
mov
jnp
in
sub
mov
stc
subl
mov
pop
cltd
clc
lea
sub
jb
outsb
stc
inc
cmp
cltd
movsb
mov
jns
pop
in
cmp
int
test
test
mov
pop
lds
or
stos
inc
into
mov
jecxz
jne
dec
sbb
cmpsb
xor
stos
xor
jo
addr16
aad
cli
lahf
pop
popf
sbb
cmp
adc
dec
sbb
and
iret
repnz
aaa
aas
mov
je
sub
js
and
adc
xor
aas
sbb
mov
loopne
mov
xor
dec
push
dec
sbbb
shll
sub
sbb
push
les
pop
pop
repnz
inc
jnp
inc
push
xchg
xor
lods
sahf
mov
es
scas
push
pushf
inc
imul
mov
gs
and
jne
mov
mov
jl
push
mov
mov
lock
int
jbe
iret
or
test
xor
lds
aaa
rcll
int3
or
sbb
cmp
jp
xchg
push
stos
stos
out
mov
fisubs
aaa
adc
repz
stos
fnstcw
jge
xor
mov
mov
js
ret
inc
cld
and
jmp
sub
mov
inc
int3
inc
cmpsb
mov
int
jle
and
and
mov
cmpsb
sbb
ror
mov
push
loope
xorl
push
lahf
popf
xchg
lcall
jne
out
in
mov
fdivr
mov
int
pop
xlat
mov
sub
xlat
dec
sub
test
punpcklwd
fcoms
lret
je
hlt
movsb
popf
inc
and
push
lret
push
jle
adc
or
scas
lea
pop
enter
call
sbb
push
adc
daa
test
and
jne
js
push
xor
arpl
repz
cmpsl
scas
insb
jl
out
paddb
mov
addr16
mov
sub
lods
push
or
pusha
ljmp
ljmp
push
and
adc
push
cwtl
bound
rorb
xchg
lock
test
data16
fwait
cmp
sub
ds
loop
out
or
mov
xlat
pop
and
sbb
sahf
add
mov
test
add
mov
xor
dec
push
in
je
push
sub
inc
out
pop
fsubs
adc
add
mov
mov
inc
imul
outsb
fdivl
dec
mov
xor
call
ret
or
fcoms
push
mov
xchg
mov
jle
incb
stos
cmc
push
push
fs
jmp
hlt
mov
bnd
mov
pop
repz
pop
call
inc
and
je
push
popf
push
cli
dec
daa
mov
xchg
test
lahf
xchg
fmulp
xchg
jg
in
push
sbb
sub
aas
neg
push
and
push
in
adc
xchg
cmp
inc
xor
xor
lahf
cs
cmc
inc
into
lods
lds
es
shlb
aad
cltd
jp
add
jecxz
aad
ret
adcb
xor
movsb
idivb
loope
mov
loopne
fdivs
add
push
fcompl
scas
add
jae
sarl
nop
jge
mov
jmp
imull
pop
stos
insl
or
jecxz
sbb
decl
pop
sbb
adc
add
cmp
cltd
jnp
dec
add
dec
xlat
pop
dec
dec
pop
fwait
in
sti
out
in
xchg
jge
lahf
ffreep
cli
mov
sbbb
xchg
push
hlt
mov
mov
cs
sahf
out
mov
or
inc
dec
call
pop
sub
ret
pop
jne
ret
sahf
push
adc
dec
mov
dec
pop
aad
jo
mov
cwtl
aaa
mov
sti
leave
aam
les
adc
dec
sbb
rcrl
stos
push
adc
and
add
adc
add
jno
sbb
outsb
rolb
xchg
cli
shlb
lcall
popa
inc
jle
jb
pop
push
ss
mov
jge
mov
push
arpl
sti
sti
aas
leave
jns
xor
loop
mov
je
addr16
jge
jle
shlb
cmp
xor
or
stc
xor
cmp
in
sbb
dec
xor
out
stos
aad
icebp
sub
test
jne
mov
gs
cmp
and
push
mov
push
je
ja
in
mov
adc
jl
adc
enter
sbb
mov
mov
outsl
push
sahf
jecxz
or
stc
push
pop
sub
ret
fcoms
mov
push
repnz
sub
sbb
in
js
inc
xor
inc
test
movsl
es
cmpsl
push
sbb
out
pushl
sahf
gs
dec
xor
imul
push
push
stos
andl
pop
jnp
pop
fmuls
subb
imul
ja
mov
dec
sub
and
jp
push
pop
lahf
push
outsb
sbb
dec
and
fiaddl
inc
and
dec
dec
or
js
or
xor
sti
rcrb
mov
jns
loop
jp
mov
faddl
fstpl
loop
in
jb
dec
sub
inc
scas
psraw
push
cmp
mov
jle
xor
sbb
pop
jno
jae
push
sub
data16
ret
popa
mov
pop
xor
mov
cltd
sub
repnz
add
je
rorb
add
popa
adc
jno
ficoml
or
push
pop
cmp
icebp
mov
xor
shr
sbb
mov
cmp
adcl
std
hlt
enter
fsubl
pusha
sub
xlat
leave
jmp
fs
pop
inc
test
cmp
leave
popf
scas
or
enter
mov
sahf
lahf
dec
xchg
pop
inc
jmp
cld
jl
les
lods
loope
jb
inc
lret
iret
rcrb
aaa
cmpsb
dec
bound
in
jne
push
inc
ret
adc
out
xchg
rol
in
shr
pop
cmp
repz
or
fildll
xor
pop
sbb
test
pop
into
mov
jmp
add
jmp
adc
jge
jne
push
cs
test
shll
jbe
rclb
repnz
test
fbstp
loop
sub
inc
idivb
stos
rorl
adc
stos
push
cmpsl
mov
rorb
es
mov
and
dec
xchg
ljmp
bound
mov
add
mov
xchg
sub
inc
dec
ror
pop
mov
ret
dec
mov
pop
negb
je
or
fcomip
call
mov
incb
insb
ret
mov
test
push
add
add
mov
test
add
ret
movsb
sbb
add
sbb
inc
ficoms
movsl
inc
ja
xchg
in
mov
insb
in
xor
enter
mov
xchg
arpl
dec
enter
jno
xchg
add
lds
dec
cmp
data16
cmp
sub
insb
pop
cmp
pop
aam
out
fwait
cs
mov
or
std
fiadds
cmc
in
stos
das
jb
cmpsl
xor
stos
fnstcw
pop
icebp
fst
jb
mov
test
call
ljmp
das
and
xchg
sbb
xor
dec
push
add
cs
push
xchg
adc
cli
clc
xlat
inc
push
outsl
fld
sub
cld
arpl
push
mov
sbb
xchg
mov
sbb
xor
pop
xor
rcr
mov
push
jmp
fs
mov
js
lret
cmpsl
mov
nop
les
sbb
mov
cmpsl
or
enter
pop
lret
xor
pop
cmp
mov
les
aad
fdivrl
shrl
mov
and
sub
hlt
in
pop
inc
mov
fwait
xchg
mov
add
fdivs
push
gs
dec
hlt
dec
ds
cwtl
rcr
movsl
ds
cmp
lock
mov
mov
icebp
push
sub
push
mov
cltd
icebp
mov
and
cmp
rorb
xor
cmc
std
lods
pop
jmp
jnp
sahf
icebp
mov
and
stos
and
sub
ja
sub
scas
divps
dec
add
jbe
mov
fcoms
sub
rcl
mov
aad
add
dec
sub
leave
lcall
test
jb
pop
jae
mov
js
test
outsl
or
xor
hlt
add
jp
add
inc
jp
push
adc
fimull
fists
in
or
or
and
repnz
in
decl
subl
insb
sub
jne
cmpsb
dec
dec
xor
sub
mov
dec
stc
mov
push
ds
int3
xchg
nop
cmp
test
add
mov
xchg
jno
jae
jmp
push
jne
add
pop
ficompl
add
lea
std
aad
pop
shrb
add
push
jp
mov
sahf
stc
adc
loop
adc
add
cwtl
jecxz
imul
mov
jp
cmp
add
cli
adc
push
arpl
mov
mov
or
jo,pn
ljmp
out
mov
fadds
add
xchg
int3
or
cmp
xchg
push
pop
test
pop
pop
inc
add
mov
ds
int3
cmc
inc
mov
lea
jecxz
mov
dec
add
dec
push
ret
inc
xchg
xchg
inc
cwtl
leave
xlat
cwtl
int
mov
repz
lock
mov
loopne
and
insb
in
xlat
outsb
ljmp
push
loopne
in
dec
bound
jl
mov
inc
xor
sbb
call
mov
in
push
cmp
mov
xchg
loope
adc
sbb
push
mov
test
and
push
cmc
cmp
sbb
sbb
sub
fisttpl
dec
cmp
pcmpeqd
sarb
arpl
loope
mov
cmp
out
std
fcomi
jmp
movsl
popf
lahf
sarl
ret
in
stos
lods
lds
aad
sub
pop
outsl
or
mov
lds
lret
lods
sbb
push
hlt
sbb
mov
out
inc
push
loop
or
ret
js,pn
sahf
pop
mov
or
out
icebp
push
add
push
pop
ficompl
repz
push
xor
mov
sbb
xchg
pop
adcl
roll
andl
in
sub
enter
lret
add
repnz
jp
rclb
mov
sbb
or
pop
xadd
stc
je
insb
jmp
sahf
push
fldl
or
fisubrs
pause
adc
fnsave
mov
mov
imul
test
adc
loopne
sbb
ds
ss
scas
adc
int
shll
mov
pop
jb
push
lret
arpl
sub
ffreep
jbe
add
mov
push
sbbb
xor
scas
mov
dec
cld
insl
xorb
jnp
and
dec
cmp
mov
dec
loop
jge
dec
and
cmpsl
adc
movsb
adc
int
push
sarb
push
fwait
cmp
xchg
sbb
adc
aaa
out
inc
mov
adc
push
loope
or
mov
mov
daa
fsts
jno
pop
cmpsl
cmc
sti
push
mov
pop
adc
push
sbb
shr
push
or
sbb
sub
inc
or
lock
out
jo
jge
in
stc
dec
push
es
mov
pop
mov
lock
sbb
inc
leave
outsl
in
jb
inc
loope
aas
push
push
inc
xchg
mov
pop
in
out
jo
inc
stos
mov
in
xor
jne
rcrb
ds
scas
ret
mov
xor
idivb
pusha
adc
dec
sbb
inc
push
adc
ss
dec
jg
fimuls
loopne
aad
leave
lods
pop
sbb
mov
push
xor
sbbl
loopne
pop
lods
jle
adc
pop
dec
std
pop
xchg
les
call
jo
dec
sub
cld
sbb
xchg
xor
out
push
adc
sarl
push
lahf
xor
xchg
lret
mov
pcmpgtw
adcb
or
cmp
push
adc
aas
test
sbb
xor
xchg
and
jno
ss
or
mov
jnp
test
adc
sub
xor
cmpl
push
sub
xchg
out
mov
scas
ja
mov
mov
je
out
test
cmp
push
das
ror
pop
dec
dec
jecxz
mov
pusha
jbe
sub
jp
stos
jbe
mov
add
divps
xor
mov
jmp
xor
push
cmp
cmpsl
fstpt
and
pusha
scas
mov
push
fdivrs
addr16
push
xchg
mov
pusha
or
pop
pushf
jmp
xor
mov
xor
and
pushf
cltd
mov
add
bound
add
jae
add
pop
mov
xchg
cmc
gs
divl
insl
subl
jl
cmp
scas
sbb
call
int
cmp
outsb
fildll
sbb
cmp
sub
stos
test
fdiv
cmp
pop
sub
xchg
sub
shl
ss
adc
dec
add
and
je
xor
mov
daa
mov
cmp
leave
cmp
test
jge
hlt
je
add
pusha
rcl
stos
out
jecxz
pop
ja
push
cmp
xchg
lods
or
outsl
das
in
arpl
mov
lret
jg
fdivp
cmp
adc
push
test
cld
stos
lret
and
mov
push
push
or
fsubrl
ret
bound
dec
jbe
or
test
pop
pusha
fwait
pop
into
fucomp
pop
repnz
fldcw
xchg
cld
pop
add
jo
sub
repnz
fidivs
test
rolb
fisubs
push
scas
aad
xor
xlat
pop
in
loop
dec
xor
arpl
and
push
lods
add
pop
cmp
mov
fs
test
push
push
push
xchg
mov
jge
out
mov
pusha
jp
inc
popa
sti
xchg
add
ret
ret
int
bound
movsl
xchg
bound
outsl
enter
je
movsl
lcall
sbb
lret
or
cmp
loopne
inc
popa
cli
arpl
ret
jp
aaa
sbbb
hlt
cmp
pop
cltd
rcr
mov
mov
mov
or
ret
push
mov
leave
pop
test
popa
cwtl
popa
jae
and
jl
and
imul
mov
xchg
ror
in
push
scas
sub
into
js
push
lret
or
and
lds
popf
xor
cmp
into
sbb
aam
inc
mov
inc
cmp
into
xor
leave
push
and
jno
adc
pop
fldt
mov
imul
popf
in
pop
push
cmp
cmp
leave
int
inc
jecxz
xchg
mov
lret
call
jmp
pushf
push
cs
std
out
lea
jae
shrb
iret
jbe
adc
adc
negl
pusha
and
mov
add
insb
arpl
daa
mul
add
mov
adc
js
add
aas
mov
mov
ljmp
jb
inc
mov
mov
popf
jne
jge
pop
fldl
and
test
sbb
pusha
mov
cltd
popf
mov
cmp
int
xchg
mov
inc
mov
mov
sahf
mov
out
push
jecxz
les
dec
lret
cld
push
rorl
jecxz
lret
pusha
hlt
xchg
adc
cmp
sahf
in
cmpsl
adc
pop
cmp
test
sbb
push
inc
add
dec
scas
ret
popa
adc
xor
lar
sub
jns
leave
adc
ds
cld
jo
mov
xchg
or
pop
mov
rol
mov
lcall
cs
icebp
in
std
cli
add
mov
enter
std
pop
mov
inc
cmpl
sarb
dec
jg
xchg
popf
push
roll
jmp
faddl
lahf
clc
mov
push
in
out
test
mov
inc
push
jecxz
sub
inc
fwait
cld
insb
or
mov
mov
and
cmp
sub
or
fsubl
in
cltd
mov
inc
jbe
ds
sbb
sbb
mov
dec
shll
roll
movsl
pushf
dec
mov
ficomps
ja
sub
jmp
jne
xor
lods
jns
sahf
or
arpl
xchg
pop
add
dec
pop
shrb
cmp
add
cmc
popa
imull
std
testl
enter
je
jae
stc
ja
sub
ficoml
cli
aas
sbb
dec
adc
movsl
mov
fstpl
sub
mulb
jge
add
int3
insb
stos
divb
aaa
mov
jp
lds
xor
lds
cmp
push
jle
mov
inc
cwtl
cmp
sbb
and
dec
xor
pop
add
in
inc
cmc
xor
loope
fcomps
ljmp
into
out
inc
stos
mov
out
add
adc
add
adc
enter
aam
outsb
pop
push
push
cld
cmpsl
jecxz
outsl
into
push
das
mov
or
cmpsb
mov
push
std
sub
push
cltd
adcl
lahf
jmp
in
call
imul
rolb
sbb
pop
stc
scas
push
add
shl
or
jmp
int3
daa
shll
push
fisubrs
xorl
cmc
hlt
cs
frstor
fmull
cs
mov
jmp
icebp
dec
dec
mov
inc
lea
xchg
fsubr
std
dec
xor
xchg
stos
inc
mov
cld
adc
jb
arpl
int
popf
cwtl
ss
sub
nop
mov
sub
xlat
lods
faddl
imul
and
fwait
xor
pusha
mov
jmp
fcmovnb
or
sar
call
outsb
jge
ljmp
mov
xchg
cwtl
mov
sub
out
jae
outsb
push
mov
sbb
nop
orb
scas
aas
push
xlat
mov
call
mov
dec
icebp
jno
cmc
cmpsl
ret
cwtl
jns,pt
mov
lds
adc
hlt
pop
xor
insl
push
cmp
xor
adc
mov
sbb
aaa
cld
xchg
xchg
xchg
fwait
push
cltd
push
push
lods
ficomps
xor
aaa
jg
dec
and
cmp
cmp
cmp
add
cmp
inc
cmp
enter
fdivrl
sbb
out
clc
fnstenv
sbb
int
adc
jbe
or
movsb
push
scas
sbb
scas
jl
lea
mov
pop
repz
pop
sbb
pop
pop
mov
fnstenv
cmpsb
mov
jle
lods
movsb
movsb
and
popf
push
inc
pop
mov
xor
push
mov
dec
mov
insl
xor
pop
es
shll
mov
cld
insb
ror
xchg
mov
imul
xchg
in
ret
dec
out
popf
xor
xchg
ret
mov
enter
jno
xor
fcmovbe
sbb
stos
div
pop
aam
mov
rolb
mov
mov
cmp
add
nop
bound
orl
sbb
xchg
and
fsub
or
sbb
cmp
or
push
repz
mov
mov
pop
cmc
dec
dec
jecxz
sub
xchg
scas
inc
sub
add
test
sbb
int
adc
jl
int
xchg
lahf
loopne
and
push
mov
pusha
notb
int3
mov
nop
dec
cmp
xlat
out
imull
adc
in
sbb
mov
mov
data16
outsb
pop
mov
push
cmp
jne
or
insb
int3
mov
cmp
cmp
mov
scas
stos
jne
sub
sub
call
mov
or
cmp
jo
enter
mov
push
inc
repz
mov
mov
xor
les
xchg
or
pop
subl
ret
pop
sub
in
fstpl
push
aas
stos
testb
push
mov
and
pop
cltd
push
or
jecxz
and
cmp
mov
add
orl
inc
loop
insb
in
adc
ljmp
fdivl
lea
cmp
pusha
sti
stos
lock
inc
inc
lds
fs
inc
jo
je
xchg
push
ffreep
pop
movsl
jmp
stos
mov
adc
push
je
xor
imul
loop
fisttpl
or
lcall
pop
xorb
clc
inc
or
xchg
les
jmp
out
mov
inc
jg
bound
fadd
fcoms
scas
fcompl
adc
repnz
loopne
inc
pop
addr16
and
iret
subl
xchg
gs
mov
scas
dec
out
mov
xor
jbe
imul
ret
ret
icebp
dec
mov
popf
in
jp
add
inc
xor
outsb
call
outsb
cwtl
adc
test
mov
push
mov
cltd
add
insl
dec
xor
push
xchg
inc
ss
or
push
xor
enter
js
cmp
mov
mov
stos
dec
mov
push
push
mov
sti
adc
pop
or
cmp
stos
push
mov
mov
xor
hlt
cmpsb
mov
roll
or
daa
cwtl
xor
cwtl
jne
mov
add
data16
jle
imul
outsb
movsb
call
mov
nop
sub
adc
stos
and
jnp
int
decl
push
lret
add
push
or
insl
aam
and
or
int
cmp
dec
iret
push
test
mov
and
jp
cs
inc
mov
jmp
xchg
mov
int3
adc
xor
cli
scas
inc
xor
out
inc
stos
dec
arpl
jb
out
jno
pop
mov
pop
jns
xlat
pop
outsl
fcmovne
fdivrp
mov
stos
lcall
das
pop
jne
fnsave
xchg
sbb
sbb
sbbl
in
or
or
sub
sbb
int
cmp
testl
in
pop
in
pop
lret
or
neg
jle
lret
pop
hlt
popa
inc
add
xchg
pop
xchg
subb
jg
push
cmc
dec
dec
or
loopne
and
adc
jp
fwait
lods
popa
repnz
mov
mov
mov
lret
and
push
lret
push
fiadds
push
ds
sbb
lret
lea
lret
mov
pop
aas
sbb
and
shrb
insl
shlb
pop
test
mov
insb
cmp
jle
adc
frstor
jg
imul
fwait
insb
inc
mov
in
xor
and
adcl
fcmovnbe
std
or
movsb
push
fs
movsb
ljmp
jae
and
mov
ja
out
fcmovu
push
sti
pop
decl
cmpsl
stos
fdivrs
mov
xchg
imul
push
call
lret
gs
inc
iret
cmc
sub
adc
test
mov
out
fiaddl
iret
jnp
push
sbb
cwtl
movsl
scas
shl
sar
aas
nop
fnsave
sti
icebp
rcrl
jnp
imul
adc
adc
shrb
mov
adc
push
sahf
mov
mov
push
pop
out
sbb
out
mov
jmp
jo
aad
mov
sbb
hlt
mov
sbb
data16
mul
dec
lahf
ljmp
es
insl
xlat
imul
mov
mov
shld
sub
loop
mov
scas
loope
fdivrs
jp
sti
adc
jecxz
test
aad
jge
jb
repz
jmp
in
inc
or
mov
or
jo
sub
cs
loop
lock
imul
xlat
push
mov
test
les
cmc
loopne
mov
dec
iret
test
xor
mov
add
or
mov
add
push
stos
sbb
inc
fcmovnb
inc
sub
sahf
mov
or
and
xchg
xor
xchg
gs
sbb
icebp
popa
cmp
push
movsb
in
adc
inc
push
and
or
ret
jp
es
fwait
clc
iret
into
add
stc
ficoms
test
pop
mov
comiss
insb
xchg
ss
adc
imul
or
jp
jo
mov
cmp
inc
mov
ljmp
movsb
inc
setnp
cmpsl
mov
andl
add
hlt
inc
adc
jbe
mov
adc
or
call
pop
pop
inc
or
std
outsb
sbb
fisubrs
jg
in
adcb
mov
shrl
pop
mov
mov
mov
xchg
add
jecxz
daa
scas
sbb
jno
or
xchg
lds
pop
out
xor
dec
data16
sbb
lret
arpl
sbb
lock
stos
lret
inc
loope
rclb
arpl
outsl
outsl
loope
xor
orl
jbe
rcrb
addl
push
daa
inc
out
pop
cld
aad
xchg
cld
push
lret
push
push
mov
in
jne
add
sub
dec
shrb
and
xchg
fwait
pop
push
and
xor
lds
jne
push
push
dec
adc
jg
popa
push
adc
mov
mov
mov
jle
call
xchg
pop
cs
lret
xor
or
dec
loop
mov
mov
repz
dec
stc
pop
call
jmp
mov
clc
adc
hlt
jge
stc
cmp
fistpll
cltd
inc
ss
adc
inc
aam
xchg
fmuls
jnp
es
ljmp
fistps
das
xchg
test
out
add
std
cmp
inc
mov
jge
or
cmp
scas
aaa
inc
stc
fsts
lret
movsb
push
rclb
mov
xchg
dec
daa
pop
nop
cltd
mov
adc
pop
jge
test
xchg
fldenv
push
mov
negb
ficoml
out
test
adcb
add
lcall
push
push
jl
adc
fimuls
loopne
pop
loop
sub
sub
pop
jle
roll
sub
fs
js
cmp
pop
mov
xor
ret
xor
out
dec
xor
insl
jmp
icebp
fs
pop
gs
and
call
jmp
xchg
cmp
inc
gs
mov
jns
stc
addr16
sbb
adc
out
ja
mov
push
cli
or
mov
inc
or
xchg
in
mov
sbb
test
xchg
cmp
dec
ds
outsl
mov
jecxz
push
imul
cmpsl
xchg
bound
dec
pop
push
movsb
scas
jb
loopne
daa
sti
aas
repz
repnz
sti
sbb
mov
xchg
and
repz
pop
iret
mov
and
push
int3
and
push
repz
aad
insb
sub
add
in
mov
pop
adc
mov
insl
cmpsb
les
mov
test
jecxz
sarl
pop
icebp
jb
int3
imul
lret
add
testl
adc
cmp
sub
dec
adc
xlat
dec
rorb
lock
and
adc
addr16
rolb
imul
add
inc
xchg
pavgb
push
js
je
std
data16
jae
dec
mov
pop
je
dec
pop
fs
loop
in
adc
adc
rcll
push
lret
in
jo
inc
jecxz
mov
pop
mov
outsb
cmpsl
push
out
inc
lea
jmp
push
out
out
cwtl
ficoms
lock
or
scas
scas
mov
xchg
mov
cmpb
jb
aad
pop
dec
push
repz
sbb
sbb
jo
xor
mov
jp
cmova
mov
add
sbb
jbe
jmp
inc
sbb
mov
mov
inc
subb
and
jae
mov
xchg
xor
mov
adc
stc
outsb
or
adc
repz
faddl
test
or
cmp
fcoms
xor
int3
inc
xchg
jge
es
aas
cld
mov
aad
lret
fs
and
addb
sbb
out
mov
sti
test
cmp
mov
mov
sbb
xchg
dec
out
cmp
sarl
lea
stos
mov
cmp
lock
add
mulb
aad
int
mov
lret
sti
xchg
jne
pop
cmp
out
xchg
adc
std
mov
test
sbb
iret
leave
adc
lock
push
scas
push
push
outsb
iret
pop
mov
lds
sub
loopne
add
sbb
sbb
stos
aad
jmp
sub
xchg
cmp
and
lods
adc
inc
test
mul
leave
loope
push
inc
push
in
mov
out
dec
add
pop
sub
aam
mov
jnp
push
cmp
and
push
jmp
mov
lret
pop
push
add
pop
adcb
out
adc
add
mov
xchg
jp
cld
sti
push
xchg
dec
call
mov
xchg
dec
pop
scas
add
fisttps
mov
adc
testb
inc
sub
pop
pop
inc
cs
fisubrl
pop
jecxz
popa
mov
pop
jno
std
jle
scas
int3
dec
pop
jns
fldcw
fstpl
call
and
test
dec
pop
cmp
bound
jno
pop
test
xchg
aas
fnsave
push
cmp
cmpsl
lods
sbb
push
lea
push
pop
inc
sub
dec
loop
stos
and
fcoml
jle
fnstcw
addr16
popf
data16
inc
mov
cmp
mov
pop
imull
jo
loope
xchg
sbb
pop
sahf
fildl
insl
arpl
rcr
insl
push
sub
jg
stc
js
xchg
or
jmp
push
push
fs
push
dec
dec
add
fwait
inc
jmp
pop
and
mov
pusha
sti
mov
insb
in
ret
jge
sbb
aad
inc
push
fdivrs
cwtl
push
cmp
and
inc
sbb
cmp
sub
pop
sub
xchg
enter
ds
aam
cmp
aad
xchg
imul
or
mov
jae
add
scas
xor
frstor
gs
jno
push
lods
mov
xchg
adc
adc
mov
mov
scas
push
int
ds
lahf
lcall
jmp
imul
dec
jmp
mov
jl
int3
pop
pop
cld
xchg
lret
sarl
test
xor
into
cmp
insl
jmp
adc
dec
aas
mov
mov
popa
fnsave
ret
outsb
lods
pop
je
sbb
test
aas
pusha
bound
sarb
add
mov
mov
movsb
ror
cmpsb
push
and
fsubs
fidivl
push
repz
mov
inc
sub
mov
dec
fistpl
in
add
lea
fisubrs
dec
movsl
int
ficompl
push
stc
xchg
inc
sahf
loope
cmp
div
mov
sub
cmp
out
loopne
arpl
mov
iret
leave
mov
js
adc
add
dec
repnz
hlt
adc
push
add
xor
insl
data16
rolb
out
ficompl
jmp
loopne
call
movsb
stos
mov
xor
sbb
out
cld
push
dec
pop
iret
daa
stc
popf
mov
xchg
mov
mov
rorl
pop
mov
clc
dec
xchg
clc
faddl
das
stc
enter
aaa
cmp
mov
enter
outsl
sub
dec
fisubs
sub
test
xchg
fwait
or
fwait
aad
fadd
daa
and
or
jge
outsb
mov
adc
mov
cmpsl
sub
xlat
inc
lods
xor
adc
mov
mov
jle
fnstsw
pop
pop
rcll
sbb
cmpsb
jl
data16
mov
inc
stc
xor
rcrl
jl
js
xchg
addr16
adc
sub
or
inc
mull
popa
cmpsb
cmp
xchg
sbb
xor
and
jb
imul
mov
or
inc
push
cmpsl
ss
aas
mov
aam
add
popa
cmp
or
xchg
mov
stc
push
xor
movsb
lds
push
in
mov
pop
adc
mov
xchg
scas
adcl
sarl
out
and
testb
outsl
cmp
mov
das
inc
lret
cmp
cld
js
fwait
xor
dec
xchg
inc
jge
repnz
push
sub
clc
pop
mov
mov
enter
fisttpll
pop
sub
adc
add
add
fbld
into
lock
int
inc
fs
fmuls
ds
push
in
cld
call
mov
sbb
adc
jno
dec
fnsave
mov
mov
outsb
lods
xchg
sbb
insl
sub
mov
mov
fistpl
jle
xchg
loope
jno
insb
lret
lock
out
mov
adc
nop
dec
jbe
pushf
aas
dec
sbb
insb
cli
pop
ror
add
nop
xchg
int3
dec
je
jo
fcompl
or
xchg
dec
adc
xchg
sbb
adc
push
mov
pop
fstl
or
getsec
xchg
pop
mov
in
sbb
ss
cmp
mov
inc
adc
fldenv
leave
notl
cli
cmc
jns
xor
inc
pushf
div
cmp
lods
dec
pop
xor
imul
fwait
outsb
stos
adc
mov
cli
nop
iret
cmpsb
sub
inc
cltd
mov
or
fisttpll
xchg
stos
cmp
aaa
xchg
or
sbb
ficoms
and
rcrb
aaa
inc
scas
sub
es
negl
or
add
xor
mov
ficomps
std
out
and
gs
arpl
xchg
gs
into
push
jb
lods
sbb
nop
xor
pop
inc
mov
xchg
mov
dec
adc
lock
adc
pop
js
push
jno
add
popf
add
mov
or
clc
inc
jb
outsl
fcomi
adc
jl
sarb
lcall
lds
clc
add
and
and
pop
lcall
mov
cmpsb
pop
adc
insl
and
mov
jbe
jae
inc
imul
xchg
add
add
cmp
iret
cmp
jg
push
out
push
mov
lods
xchg
add
dec
mov
nop
inc
subb
or
imul
test
cmc
jns
fmul
xor
pop
leave
jnp
shl
and
scas
mov
daa
pop
cmp
push
outsl
xor
and
lods
jg
mov
xor
fwait
arpl
pop
outsl
mov
inc
jge
insl
or
rcr
stos
add
add
fidivs
mov
insl
out
push
loop
xchg
sahf
add
fisttps
mov
loope
fisubrl
pushf
call
int3
arpl
popf
lcall
sbb
mov
cmpsl
das
pop
leave
sti
mov
fists
sbb
xchg
cmp
push
shlb
push
dec
or
pop
xbegin
adcl
adc
cwtl
fwait
jle
pop
or
inc
inc
push
cmp
ljmp
mov
pop
fdiv
std
inc
and
pop
sbbl
pop
adc
fdivrp
pop
mov
lods
daa
jmp
mov
xor
pop
adc
out
jnp
cmp
out
addr16
inc
pop
repnz
fsubrl
jl
movsl
mov
push
xchg
sub
ret
jbe
xchg
sbb
jno
adcb
bound
or
mov
outsl
js
lret
jge
pushf
xor
test
add
mov
aaa
test
mov
scas
stos
dec
mov
mov
test
mov
imul
dec
ffree
rcrb
rcr
mov
pop
lds
adc
jge
mov
lea
out
mov
push
aas
mov
fucom
shl
xor
add
sub
std
cmp
xchg
clc
iret
stos
adc
mov
insl
sbb
sub
imul
sbb
jle
pop
mov
ret
clc
lock
adc
movsb
cltd
pop
sub
fimull
xchg
std
dec
sbb
fwait
lods
iret
mov
stc
outsb
dec
mov
out
mov
push
pop
repnz
dec
test
or
aas
out
int
add
popa
jle
pusha
adc
cmp
jmp
mov
push
inc
cld
and
aas
lea
push
out
sub
leave
jmp
adc
addr16
jmp
jp
out
push
scas
jl
in
dec
xchg
mov
jo
and
mov
lock
pop
jae
leave
test
or
rcr
dec
pusha
lahf
pop
ljmp
and
pushf
neg
adc
cmp
xorl
lds
jbe
in
lahf
jp
push
in
aam
mov
dec
dec
fisttpl
div
ja
cs
sbb
xchg
pop
adc
icebp
testb
lea
lods
adc
out
cs
mov
fnstsw
and
enter
in
std
stc
dec
jnp
out
movsl
mov
addr16
jb
pop
and
add
dec
and
xor
jp
mov
dec
jle
cmc
jb
dec
rorb
icebp
movsb
push
in
inc
insb
out
cmc
mov
or
in
push
cltd
in
out
xchg
mov
mov
dec
fimull
dec
bound
jno
mov
mov
int
push
and
in
into
rclb
lods
cmpl
sbb
push
popf
sbb
icebp
fldcw
std
mov
in
cmc
xchg
loopne
pop
outsb
jmp
mov
xlat
xchg
push
std
stos
nop
cmp
movsb
xor
outsb
push
xchg
popa
add
inc
xor
imul
test
mov
andl
aam
sbb
mov
mov
xchg
test
enter
jl
dec
pop
jbe
inc
es
inc
sbb
sbb
lret
dec
scas
in
loope
jne
jb
data16
fsubp
fimull
add
jnp
icebp
sub
std
sbb
lods
stos
cmp
incb
lods
imul
xchg
cmp
mov
fs
pop
rcl
call
outsb
rcrb
repz
daa
fisttpl
ror
mov
inc
xorb
mov
fs
fwait
cmp
pop
test
and
in
pop
cld
mov
pop
pop
aaa
pop
idivl
inc
gs
sub
aaa
cmpsl
out
lds
aaa
sub
movsb
rorl
std
pop
fs
cmpsb
xchg
push
fs
pop
fldcw
pusha
std
movsb
fimuls
dec
inc
sub
jmp
dec
ret
xor
xchg
xchg
pop
xchg
or
or
sbb
mov
daa
leave
push
jge
test
nop
sub
mov
and
sbb
std
insl
mov
lret
ficoms
jo
hlt
jp
hlt
jb
mov
icebp
scas
pop
stos
mov
pop
mov
int3
mov
movsb
adc
jp
es
mov
push
inc
enter
loop
sbb
or
or
call
and
je
gs
dec
pop
cmp
dec
addr16
mov
ret
adc
xchg
ss
jo
repnz
sbb
into
sbb
push
push
fmuls
imul
jbe
andb
cmp
push
sub
sbb
lret
or
int
call
aam
mov
mov
adc
or
adc
leave
icebp
leave
push
push
nop
clc
push
jnp
mov
and
test
adc
xchg
jp
xor
sub
dec
adc
xchg
call
xor
push
loopne
movsb
lret
into
insl
lcall
out
pop
lods
lea
shl
xchg
xchg
lcall
pop
mov
in
in
or
xchg
aad
in
fucomip
or
xchg
dec
andl
mov
ss
loop
sub
loop
cltd
sub
adc
cmp
stos
dec
sub
lock
lods
inc
lods
pushf
xor
test
xchg
cli
in
jno
repz
dec
mov
stos
out
pop
cmp
lahf
sbb
mov
popf
test
iret
and
mul
push
jne
ljmp
add
data16
xchg
jae
lea
push
gs
cmp
bound
dec
scas
and
in
push
rorl
push
fisubrs
xchg
inc
adc
sahf
pushf
add
sbb
xor
lods
mov
ss
sub
inc
push
adc
jnp
sub
push
sahf
mov
shr
pop
mov
and
mov
xchg
mov
mov
scas
mov
push
pop
push
adc
ret
cltd
pop
sub
repz
lds
out
js
xor
xchg
add
sbb
fdivrs
cltd
lock
sub
out
sbb
push
pop
jp
dec
std
lret
mov
daa
test
dec
pop
pop
pop
cmp
jno
xor
clc
stc
push
test
int
jo
xor
or
in
jge
xchg
xor
in
daa
insb
dec
ud0
dec
sbb
lret
xchg
cmp
popf
mov
jge
lret
pop
popa
out
xchg
jno
into
arpl
xchg
loopne
clc
fists
test
daa
cmpsb
fpatan
sti
clc
loopne
sbb
sbb
ret
xchg
dec
cli
jge
and
cltd
mov
mov
cmp
pop
popf
mov
fists
daa
pusha
dec
mov
mov
cmpsb
cmpb
add
test
popf
mov
inc
scas
sbb
mul
popf
and
gs
and
pop
or
xor
je
xchg
pop
adc
rcl
mov
mov
popf
inc
repnz
dec
jnp
sub
fimuls
sarb
inc
popa
add
lret
mov
fmull
fwait
jp
mulb
mov
dec
and
mov
cs
bound
jo
aaa
mov
xchg
and
cwtl
xor
jnp,pt
adc
les
fisttps
xchg
ds
mov
mov
cltd
inc
cmpsl
pop
and
mov
stc
aaa
test
add
and
cmc
ja
fidivl
lcall
cmpsl
mov
mov
xor
cmp
xchg
jns
or
mov
and
sbb
jno
repnz
cmp
and
cmpsb
ficoms
xchg
push
int3
adc
adc
pop
je
pmaxub
sbb
lods
sub
pop
cwtl
fcmovne
int3
rorl
fldcw
out
cmc
adc
cmpb
push
mov
fcompl
out
xchg
push
pop
push
xor
nop
jbe
inc
stc
mov
mov
mov
add
stos
iret
mov
pushf
xlat
adc
nop
nop
add
call
out
add
aaa
bound
test
int3
xchg
movsl
test
pop
jb
cli
cli
or
scas
dec
je
mov
push
dec
rol
ss
nop
inc
xor
std
xchg
in
adc
stc
sbb
sbb
inc
mov
jmp
dec
mov
loopne
in
orl
popf
xchg
outsl
test
pop
jnp
aad
pop
sti
lahf
rcrb
cltd
and
xor
and
aas
loop
sti
lods
out
rorb
pop
mov
enter
push
pop
push
into
shll
out
inc
hlt
mov
pop
inc
or
jb
scas
mov
adc
movsl
loope
mov
lcall
inc
cmp
push
pop
movsl
jb
dec
negl
addb
in
and
push
cwtl
fstl
enter
gs
ss
pop
jle
add
jns
sub
jle
jno
mov
xlat
aad
mov
test
jbe
pop
mov
push
jo
movlps
cmp
push
hlt
sub
std
dec
dec
repz
loope
ss
sbbb
fs
cs
cmp
xor
aam
aas
int
dec
faddl
mov
sbb
jge
mov
adc
mov
insl
lcall
fsubl
jne
fnsave
hlt
pushf
mov
incb
jns
dec
jne
xchg
sti
lods
dec
daa
stos
or
sub
and
pop
sub
cli
cmp
and
jp
inc
les
test
sarb
inc
rorl
mov
xchg
jno
out
addr16
cmpsb
pop
push
fidivrs
iret
lods
sbb
mov
leave
hlt
fisubrs
movsl
insb
dec
push
stos
std
jns
test
dec
in
jo
outsb
leave
or
mov
lcall
add
loop
fs
cmp
inc
stc
or
sub
into
mov
dec
xchg
pusha
mov
xlat
imul
xchg
mov
push
sbb
pop
mov
stos
add
insb
fmuls
out
movsl
insb
cli
cmp
add
out
xchg
lahf
add
mov
pop
test
hlt
xor
xchg
pop
add
mov
fstpl
xor
pop
xor
rorb
aam
es
lret
jg
test
and
push
adc
inc
stos
mov
test
pop
hlt
xchg
aaa
mov
andl
ret
iret
lret
push
lahf
notb
in
add
pop
pop
push
arpl
push
loope
add
fdivs
jno
fimull
cld
mov
cli
or
dec
mov
lret
call
imul
push
fisubrs
push
test
cs
insb
inc
sub
ftst
dec
push
push
push
ficompl
gs
mov
addr16
ret
ljmp
mov
sbb
xchg
roll
jb
scas
stc
xchg
mov
push
jl
int
and
in
sub
or
push
xor
jno
inc
jge
cld
out
fstps
daa
ljmp
mov
insl
out
lds
in
dec
cwtl
imul
mov
stos
out
or
flds
jecxz
push
mov
inc
xor
or
shll
xor
cmc
hlt
test
les
std
nopl
dec
shrl
adc
push
aas
adc
push
mov
lds
mov
and
lods
or
sub
dec
ljmp
adc
mov
jno
fisttpl
jae
pushf
movsb
push
push
mov
adc
mov
mov
in
mov
jnp
shl
or
movaps
lods
iret
add
imul
xchg
sbb
sbb
pop
pushf
pusha
insl
orb
sbb
je
ret
xchg
dec
or
sbb
jl
xchg
repz
andb
arpl
jno
dec
xchg
das
fmull
jp
push
insb
adc
cmpsb
mov
xor
add
out
in
jg
imul
push
inc
std
imul
jbe
dec
push
iret
add
dec
out
pushf
je
xor
pop
repnz
scas
push
arpl
cmp
xchg
pushl
inc
std
mov
in
mov
ja
jg
repz
outsb
push
inc
shll
mov
scas
loopne
clc
in
xchg
add
push
jnp
dec
pop
aad
fbld
sub
jns
xor
outsl
lds
push
or
inc
mov
js
jecxz
xor
popf
les
hlt
cli
xor
mov
lret
sub
idivb
push
lcall
adcb
jge
xchg
jae
aad
pop
pop
repnz
call
pop
aad
orl
xchg
clc
sahf
mov
aad
jmp
clc
rcrl
dec
pushf
decb
std
data16
cli
pop
jb
and
add
mov
mov
push
jge
xchg
nop
push
mov
lea
dec
sbb
fs
dec
cmpsb
add
dec
xor
pop
push
popf
mov
jp
jne
sbb
lcall
sbb
jl
xor
cli
sbb
stos
sub
xchg
or
lcall
loop
in
jl
fcom
leave
xor
dec
push
or
out
push
cwtl
xchg
push
scas
dec
mov
aaa
ljmp
dec
jg
stos
lods
inc
sub
sbb
pop
or
inc
push
dec
adc
xor
mov
js
xchg
pop
adc
mov
scas
out
and
fsubs
test
ss
xor
or
mov
mov
aas
pop
arpl
push
inc
mov
push
btc
imul
and
aas
mov
scas
sbbl
inc
test
int
rcr
mov
cwtl
sub
xchg
js
lods
inc
sub
xchg
mov
stos
or
movsb
sbb
rcrl
sbb
dec
popa
xchg
addr16
xlat
and
mov
cld
mov
jecxz
sbb
inc
jae
xor
movsb
sarb
cli
cmp
rorb
mov
xor
dec
adc
bound
icebp
cli
idiv
dec
fnsave
lods
dec
imul
in
jmp
mov
and
xchg
scas
fcom
mov
jo
shrl
inc
pop
lret
dec
sbb
bound
lock
aas
jo
call
mov
xor
fwait
cmp
push
cmp
sub
push
imul
dec
movsl
jae
in
sub
lcall
cmpsl
ss
sub
adc
inc
push
mov
cli
arpl
pop
fs
cmp
or
fcomps
adc
or
xchg
mov
es
mov
aam
das
cltd
les
ss
arpl
fadds
nop
inc
add
lea
scas
and
and
push
and
les
pusha
xor
pop
in
sbb
add
push
push
subl
sub
popf
icebp
shlb
int3
inc
jae
mov
loop
adc
fiadds
mov
addb
inc
and
cmpl
sti
jae
add
stc
test
repnz
pop
sar
cli
and
popf
xchg
dec
inc
adc
ret
cli
nop
aam
xorb
sub
dec
lea
das
lret
test
out
adc
subb
cmp
in
cld
sub
sub
jl
mov
mov
sbb
sub
dec
dec
or
xchg
repnz
push
int
lds
adc
out
int
xchg
push
xchg
mov
pop
scas
cld
sub
sub
pop
cld
arpl
pop
mov
push
adc
cwtl
cmp
test
punpckhdq
out
dec
fdiv
inc
mov
iret
lds
and
cli
das
jl
cmp
js
ret
loopne
pop
mov
jae
xor
mov
inc
pop
push
sbb
cmp
sbb
les
daa
arpl
in
and
inc
out
rcrb
arpl
addr16
push
imul
mov
popf
and
or
xor
xor
insl
in
sbb
push
dec
mull
pop
ja
bnd
js
mov
mov
adc
fstl
xchg
shll
and
jns
xchg
in
je
lods
sbb
rolb
in
sub
outsb
sub
lret
push
adc
es
dec
mov
cwtl
rclb
cmp
mov
dec
fnstsw
stc
push
leave
adcl
pop
sahf
xor
xchg
mov
dec
loope
bound
pop
out
pop
mov
lods
lea
test
popa
xor
arpl
mov
push
shrb
cmp
push
dec
out
inc
jno
pop
fdivrs
inc
dec
push
mov
outsb
cmpsb
mov
xlat
scas
ret
sbb
fld1
lods
shll
cmp
xchg
cmpsb
xchg
xchg
jl
push
push
jmp
cmp
dec
jns
mov
popa
jmp
dec
mov
pop
mov
push
cmp
jge
cmpsb
sbb
pop
in
mov
mov
jmp
push
cmpsb
cltd
insb
imul
outsb
push
fisttps
and
out
rolb
loop
xchg
ss
mov
xor
test
xor
mov
testb
arpl
jne
cmc
out
cmp
cwtl
dec
lods
pop
inc
dec
xchg
fcoms
stos
mov
xor
shrl
sbbl
push
and
push
sbb
sti
loop
dec
out
out
jbe
movsb
cli
jp
jmp
lock
les
jg
repnz
adcl
mov
sahf
daa
jb
sarl
push
pop
pop
cs
stos
fidivs
test
shll
xchg
in
inc
pop
jb
ret
int3
js
xor
xor
das
mov
mov
fs
xchg
loope
pop
sub
xor
pop
push
bnd
push
xor
adc
jne
imul
int3
xchg
inc
jbe
in
mov
push
gs
cltd
repnz
jb
gs
xchg
dec
movsb
fcmovnb
in
jb
enter
addb
dec
loopne
jbe
pop
mov
inc
stos
stos
int3
arpl
testb
cld
sbb
lret
call
or
lods
push
adc
add
pop
fistpl
or
or
cmpsl
xor
sbb
popf
jo
mov
jo
jbe
cmpsb
dec
mov
inc
pop
fwait
jo
in
in
mov
in
jl
add
repz
xor
cs
gs
daa
xchg
pop
int
mov
sub
pop
out
in
stos
insb
sarb
fisubs
mull
xchg
lock
xchg
test
adcb
xor
call
mov
ds
jecxz
dec
leave
out
daa
mov
push
ret
test
jl
mov
sbb
jmp
dec
ficomps
rorb
push
push
aaa
cs
xor
push
test
icebp
fidivrs
jne
adc
xor
jo
fistl
cmp
in
rcr
addb
dec
add
pop
cld
jmp
jg
xchg
mov
cwtl
sub
cs
ljmp
sti
push
cld
push
jno
and
imul
roll
xchg
pop
lret
add
ja
mov
jp
cmp
pop
shl
pop
test
adcb
jnp
stos
or
lods
lds
add
fnsave
imul
or
add
out
sarb
mov
test
divl
inc
pop
inc
xor
jns
jae
js
bound
or
fcmovnbe
pop
dec
dec
sbb
mov
nop
mov
cmp
mov
loopne
mov
add
fsubrl
xchg
push
imull
mov
mov
cltd
adc
mov
inc
dec
adcl
jmp
add
out
adc
push
repz
jge
in
sub
fwait
lock
jo
out
sbb
stos
mov
push
repz
mov
jecxz
pop
and
cbtw
into
xor
add
cmpsb
jecxz
ret
or
push
dec
push
xchg
push
sub
mov
or
adc
lea
xor
or
je
fimuls
mov
mov
repnz
mov
pusha
adc
adc
enter
cli
in
sub
out
jno
imul
mov
push
aam
and
mov
fstl
clc
mov
dec
in
inc
adc
shll
cmp
paddsw
pop
sbb
ficomps
test
adc
mov
pop
adc
xor
sub
xorl
in
and
xchg
push
inc
outsb
filds
mov
out
adc
je
imul
push
xor
sub
mov
aad
insl
aad
jmp
mov
pop
iret
mov
xchg
mov
lods
add
outsb
cmovns
ret
mov
and
stos
sar
xor
idivl
gs
test
sbb
mov
loope
mov
repnz
mov
dec
fmul
or
out
add
mov
lret
xchg
lock
arpl
pop
pop
adc
dec
adc
std
mov
iret
or
jle
dec
adc
sub
xor
xor
xchg
sub
setbe
jb
mov
xor
rolb
imul
mov
mov
sbb
je
cli
pop
cmp
mov
add
xchg
jg
lret
push
aas
fimuls
cmp
rcl
cmp
xchg
push
jne
fsubs
ror
lock
push
dec
in
pop
lret
or
leave
in
push
xor
lcall
xchg
sbb
aaa
pushf
cli
in
fbld
decl
pop
push
mov
nop
push
jp
popf
xor
inc
arpl
stc
in
or
push
clc
shlb
out
clc
dec
int3
fistl
xchg
jp
loopne
mov
sbb
mov
dec
cmpsl
mov
or
enter
push
aaa
test
jge
jo
xor
js
lods
inc
and
and
sbb
adc
sub
adc
mov
or
ljmp
add
fwait
test
xor
or
jae
cmp
pushf
jp
add
cwtl
xchg
loope
sahf
in
or
push
in
clc
and
pop
xor
jp
insb
mov
stc
loopne
mov
mov
mov
and
pushf
out
aaa
bound
stos
cmp
gs
in
repz
outsb
popf
shll
scas
add
push
sbb
std
push
cmp
cmp
add
out
mov
mov
cmp
cmp
sbb
flds
inc
rorl
jnp
fistps
ss
aad
dec
cwtl
loope
cli
or
inc
adc
xchg
enter
cmpsl
jo
xchg
in
stc
cmpsb
push
fwait
rclb
stos
mov
bnd
ds
dec
mov
and
pop
lods
or
mov
jmp
aas
cmpsb
sub
xor
mov
imul
daa
lahf
jb
mov
aaa
xchg
cwtl
and
mov
pop
mov
push
outsl
das
dec
fidivrs
subb
ds
inc
and
pop
iret
mov
dec
adc
xchg
pusha
dec
mov
ljmp
imul
mov
dec
das
test
cld
pop
sub
lcall
jns
push
js
inc
xchg
mov
push
pop
xchg
repz
cmc
and
scas
mov
mov
add
pop
hlt
mov
fistpll
popf
xchg
in
push
and
inc
adc
lret
mov
iret
les
mov
inc
dec
ret
inc
orb
andl
jno
popa
fsts
int
push
icebp
repz
dec
dec
pop
and
ss
add
mov
lret
sahf
xchg
ret
dec
or
push
jmp
jo
fnstcw
test
lea
rcrb
in
dec
fmul
or
shlb
mov
repnz
or
pop
and
mov
int
push
mov
cmpsb
ret
mov
arpl
fiaddl
and
dec
xor
adc
pushf
outsl
xor
daa
pop
out
fldenv
pop
lret
fisubs
fsubs
dec
shlb
mov
jae
mov
xchg
or
push
mov
ret
push
mov
mov
clc
xchg
bound
data16
lods
adc
leave
scas
pop
sub
cmp
mov
cmp
mov
outsb
mov
jmp
out
mov
out
or
xor
pop
cmpsb
into
aas
cli
push
or
aas
shll
inc
and
mov
iret
lock
scas
insb
adc
mov
int
xchg
in
add
jnp
testl
decb
push
dec
jne
pop
clc
leave
mov
loopne
pop
dec
movsb
jno
push
push
xor
pop
popf
std
add
ds
mov
pop
aaa
repz
xchg
fistpll
mov
and
inc
sbb
pop
inc
jmp
aad
push
je
lahf
lret
xor
rclb
lods
jg
test
insl
sub
pop
xor
lock
xchg
xchg
lods
xchg
cmpl
add
mov
and
xchg
pop
insb
lret
daa
clc
in
ljmp
stc
test
push
pop
push
pop
jp
push
push
aaa
pusha
jl
std
add
lcall
ljmp
lcall
mov
sub
cmpsl
jmp
or
and
mov
add
xor
sbb
dec
test
jae
jo
mov
js
dec
insl
ud0
jle
bound
adc
mov
add
cmpsl
mov
add
sub
jle
sub
ret
fstpl
xchg
adc
and
rolb
add
sub
jns
ljmp
fnstcw
rclb
jmp
cli
mov
jae
adc
jp
lea
loopne
ds
push
mov
mov
push
pop
pop
imulb
cmp
test
std
push
cs
sbb
mov
in
scas
je
stc
ja
cmp
lea
test
xor
js
fs
jp
add
inc
or
mov
add
mov
jecxz
mov
pop
jp
jmp
ret
loopne
xchg
jecxz
jns
enter
popf
loop
and
adc
int3
sub
or
jge
cld
outsb
add
cmp
loopne
je
pop
jnp
fnstcw
test
clc
ljmp
xor
xchg
aad
add
adc
mov
fcmovnu
pushf
bound
pop
cmc
inc
test
mov
daa
gs
pushl
das
and
out
lea
and
bound
pop
or
js
ret
insb
jge
popf
movsb
cmp
inc
push
test
jo
andl
mov
shrb
loope
pushf
fwait
pop
in
pop
cmp
push
adc
movsb
xor
insb
jne
jecxz
les
stc
jg
mov
iret
xor
dec
dec
xor
and
mov
out
pop
scas
out
sarb
push
addr16
mov
testb
xchg
mul
aam
cmpsl
fs
push
addr16
lods
pop
mov
and
ljmp
js
movsb
loop
inc
and
mov
or
loopne
sbb
pop
sbb
cmpsl
mov
push
daa
adc
jne
or
or
ds
ds
in
push
lret
pop
dec
xor
xor
notl
push
nop
ljmp
mov
mov
cmp
sbb
xor
js
popa
data16
push
inc
and
inc
cs
inc
sub
mov
fstl
fs
ljmp
ljmp
lods
inc
push
lods
jle
lret
mov
data16
mov
mov
sarb
clc
stos
sbb
jl
int3
lea
jns
jp
movsb
mov
push
shufps
aad
stos
or
inc
pop
shrb
and
push
pop
push
xchg
popf
ja
fisubs
push
dec
shlb
pop
iret
dec
add
addb
mov
dec
cwtl
cmp
hlt
mov
pop
and
xchg
push
inc
or
or
and
inc
ret
imul
lret
pop
rorl
insl
xor
ffreep
jmp
push
sbb
fcomps
mov
and
int3
push
mov
shrb
inc
inc
neg
shll
pop
sbb
or
sub
fidivrs
cmp
cmp
inc
shlb
out
mov
or
xor
testl
or
sbb
repz
das
mov
in
push
popa
and
cmp
jge
rclb
jp
sbb
outsb
mov
scas
xchg
addr16
jbe,pn
aas
faddp
mov
inc
xchg
hlt
sti
repnz
mov
das
xor
lcall
sbb
sub
inc
movnti
imul
das
lret
je
push
sti
mov
or
and
add
inc
cmpsl
aad
xor
lods
int3
scas
pushf
mov
or
lea
cmp
mov
dec
pushf
mov
adc
add
push
sahf
insb
cmp
inc
mov
les
hlt
jnp
sub
scas
push
fwait
cmp
ds
xor
popf
lahf
repz
flds
xchg
jo
leave
lods
imulb
sbb
gs
mov
push
arpl
pop
call
sub
aaa
aas
mov
xchg
push
sbb
lret
push
insb
cmp
int
cmpsl
add
hlt
push
mov
adc
stos
ficoml
push
stos
ss
jae
dec
dec
mov
stc
ja
jl
push
adc
inc
push
rcrb
cmpsb
mov
stc
sbb
mov
adc
or
or
mov
sbb
cmpsl
mov
cmp
and
aad
lock
pop
out
and
cmp
pop
scas
mov
xchg
aaa
push
cld
cli
or
dec
loope
scas
xor
sub
inc
mov
jo
das
sub
inc
fnstenv
mov
movsb
xor
nop
and
mov
and
push
jnp
in
jo
cs
push
gs
xchg
pop
xchg
test
add
call
or
filds
sbb
movsb
and
xorb
lret
push
mov
inc
gs
sbb
add
fisttpll
dec
orb
andl
jbe
adc
xchg
rcrb
jge
aas
xchg
cmp
sbb
jmp
cli
gs
sbb
jns
sub
mov
rol
push
aas
daa
jne
aam
push
xor
pop
xchg
xchg
aaa
push
push
sub
dec
and
in
mov
das
es
int
out
jp
inc
sub
cmpsb
inc
icebp
testb
sbb
std
cltd
or
fisttpll
jmp
push
test
jle
rorb
adc
pop
jne
inc
pop
xor
pop
repz
loopne
out
xor
in
sub
and
and
sbb
add
movsl
cmp
fsts
imul
aad
dec
cmp
mov
dec
int
sbb
js
mov
mov
lds
mov
mov
xor
jmp
lret
inc
jmp
mov
add
cli
rolb
xchg
ja
sub
jns
xchg
adc
fistl
pop
pop
mov
ret
cmpl
hlt
add
mov
mov
negb
call
cltd
nop
pop
sub
das
adc
movb
lods
push
fbstp
ja
dec
push
jb
dec
imul
cmc
inc
pop
pop
aaa
stos
aaa
shl
sbb
mov
clc
or
shrb
push
lahf
xchg
ficomps
pop
push
pop
jns
pop
pushf
mov
inc
jge
push
insb
and
push
loope
in
push
mov
or
and
lret
pop
and
cltd
test
xor
push
cwtl
jne
pop
xchg
gs
jp
jnp
cmp
adc
test
lock
aam
flds
sbb
mov
fcoml
adc
push
cmp
jg
xor
sahf
test
and
add
push
mov
outsb
push
mov
mov
ja
push
inc
jp
shll
enter
add
dec
insb
imul
jo
loop
lock
cmc
cmp
mov
ds
xor
pop
stos
adc
xchg
movb
mov
or
cmp
or
jns
or
mov
sahf
or
test
mov
pop
in
jmp
mov
pop
into
mov
push
cmc
jecxz
pop
rclb
mov
aas
fsubs
push
adc
cmc
cltd
enter
jmp
mov
or
mov
jge
icebp
jl
jmp
fistpll
jo
nop
leave
pop
faddp
gs
into
inc
inc
sub
sarb
push
mov
cld
mov
xor
divl
outsb
je
mov
aad
or
dec
data16
cs
pop
movb
ss
fwait
data16
lcall
cmpsl
insb
pop
repz
or
or
mull
inc
popl
data16
out
out
xchg
or
jns
push
scas
sbb
pop
mov
outsl
test
rclb
jle
mov
jge
cmp
sbb
sti
in
adc
push
fmul
add
in
fsubrl
inc
out
xchg
dec
push
loopne
cli
fcompl
in
ffree
lea
xchg
dec
dec
push
test
inc
mov
fldcw
lock
mov
es
fstps
insl
out
ret
cmp
jb
jp
fiadds
inc
int
in
xchg
imul
enter
es
push
scas
jbe
test
shl
sub
out
out
lret
or
adc
in
outsl
push
test
sub
mov
lock
inc
push
mov
mov
int
ljmp
repnz
sbb
lahf
jb
pushf
test
lret
lock
arpl
rcrl
adc
jl
push
int
push
mov
ret
sub
xor
cmp
js
jl
cmpsb
inc
les
je
adc
inc
push
adc
scas
or
test
and
fs
lods
outsl
push
divl
inc
leave
dec
xchg
outsb
jmp
loope
jmp
xchg
push
jmp
cld
mov
mov
bound
fcomp
movsl
movsl
cmpl
loope
mov
mov
push
mov
icebp
iret
repz
scas
insl
aam
sbb
ret
mov
xor
fistpll
pop
sbb
test
in
push
in
and
leave
lcall
cmpb
xchg
aas
cli
sbb
ja
lods
cmp
jno
xchg
jp
ljmp
movsl
sbb
mov
rolb
test
or
rorb
and
in
in
xchg
add
fcompl
adc
addr16
leave
sub
out
fcmovnu
ja
dec
lret
movsl
rclb
test
les
insl
shll
jmp
rorb
pop
lcall
inc
popa
pop
xor
jmp
inc
add
cmpsl
adc
inc
imul
mov
pop
and
das
movups
repnz
sbb
call
mov
pop
pop
into
dec
xlat
sub
mov
push
pusha
outsb
jbe
es
fcmovbe
fldt
jg
or
dec
sbb
sarl
into
cltd
fs
xor
repnz
pushf
pop
pusha
add
divl
adc
push
flds
push
adc
cmpsl
adc
pushf
das
ficomps
repz
fdivl
in
dec
out
xchg
insl
test
sub
cs
fucomp
mov
mov
sub
push
imul
lret
xchg
cmp
clc
aad
das
mul
lock
nop
dec
xchg
insl
jle
cmc
cld
sbb
cmp
adc
or
push
pop
and
pop
ror
mov
int3
in
dec
lea
cltd
adc
fstps
fs
ljmp
aaa
dec
adc
push
popa
or
cmp
mov
pop
je
cltd
xchg
hlt
sbbb
jmp
fstpt
stc
push
adc
stc
or
aad
push
js
mov
icebp
inc
or
and
mov
es
lods
jb
cltd
adc
std
cmc
scas
mov
fwait
xchg
js
fs
sub
push
pop
push
nop
sbb
fdivl
dec
dec
je
ss
cmp
cld
fadds
jmp
push
xchg
fdivr
jecxz
sbb
hlt
pop
inc
mov
adc
xor
jae
aaa
xor
mov
data16
ljmp
mov
add
loope
cmp
jp
and
rcl
rorb
idivb
and
mov
and
pop
fmul
addr16
out
push
mov
lds
push
dec
popf
cmp
daa
fisttpll
mov
call
cmpsl
mov
or
dec
bound
scas
mov
pop
dec
cltd
ljmp
dec
mov
push
mov
push
popa
mov
mov
mov
lock
dec
or
cltd
mov
jg
or
mov
add
pushf
push
adc
mov
shlb
push
xchg
aaa
pop
jno
xchg
push
clc
mov
jbe
inc
jns
movsl
imul
cwtl
pop
fsubs
and
sub
sub
inc
shll
add
test
pop
mov
mov
push
jno
sarl
ficompl
xlat
sbb
sub
shlb
jle
out
rcrl
subl
mov
add
jno
ljmp
or
cmp
lods
addr16
adc
inc
fiaddl
into
jo
leave
inc
out
sub
add
jecxz
dec
lds
pop
inc
imul
push
aas
mov
xchg
push
jb
aas
rcl
cmp
pusha
lods
and
and
sbb
rcl
daa
xor
push
jg
pusha
outsb
xchg
xchg
push
popf
pop
pop
push
pusha
ror
out
subb
imul
int3
add
mov
add
mov
add
adc
test
cmc
mov
addb
xor
xchg
xor
jge
pop
fimull
and
xor
mov
or
cmp
movsb
mov
sahf
in
push
fcomp
dec
in
sbb
mov
movsl
js
cltd
hlt
loopne
push
pop
push
cld
leave
xchg
sti
adc
xchg
popa
int3
cwtl
fidivs
push
sub
roll
lcall
dec
fbld
fdivrs
imul
es
xlat
xchg
dec
push
sbb
cs
add
pop
into
mov
mov
mov
jo
fnstcw
stc
adc
pushf
movsl
test
add
cmp
out
jb
mov
outsb
int
sbb
out
add
int
sub
jp
scas
jns
fsub
xorb
mov
rclb
lds
andl
imul
inc
clc
dec
hlt
jge
mov
and
mov
popl
fisttps
xchg
dec
mov
sahf
je
int3
sbb
lahf
pop
or
mov
dec
sub
mul
jg
aam
ljmp
popf
xor
or
pop
outsl
lds
movsb
cmp
xor
mov
das
add
xor
push
pop
pushf
cld
adc
andb
mov
mov
imul
or
dec
push
xlat
xchg
sti
mov
rolb
movsb
lds
mov
mov
or
scas
mov
push
sub
pop
xor
xchg
cmp
shlb
dec
cmp
ds
lcall
and
iret
outsb
test
popa
mov
xchg
repz
aas
push
imul
es
in
lods
out
loop
fisubrs
in
and
sbb
sbb
jbe
mov
add
jle
sub
cmp
gs
jl
ficomps
xor
mov
add
sub
imul
mov
insb
dec
bound
lods
or
jge
jae
stos
sub
inc
or
lahf
outsl
xchg
int
addl
clc
pop
call
scas
push
call
mov
push
out
mov
cltd
mov
ffree
pop
mov
sahf
jns
mov
cmc
jae
scas
sahf
cmp
scas
mov
nop
adc
push
movsl
movsb
daa
fsubr
or
stos
mov
es
sub
daa
sub
mov
loop
call
mov
mov
cmp
jo
mov
jecxz
adc
pusha
mov
mov
test
cmpsb
sub
or
outsb
add
push
mov
lds
imul
ds
in
call
push
int
push
and
pop
cmp
sub
push
and
sub
xor
lock
ljmp
mov
pop
fildl
popl
je
cmc
insb
inc
scas
mov
repz
inc
sbb
adc
andl
imul
nop
test
sub
mov
jg
icebp
addr16
ja
xor
mov
add
cmp
loop
pop
mov
ret
cmp
add
push
cld
sahf
or
inc
add
ja
in
inc
dec
and
pop
push
add
dec
cmp
inc
out
gs
addr16
mov
nop
dec
push
imul
pop
mov
sub
cmp
outsl
into
dec
js
into
jno
scas
mov
stos
and
xchg
or
mov
pushw
push
imul
mov
fstpl
xchg
push
test
repz
adc
cmpb
insb
jmp
outsb
repnz
cwtl
int3
adc
sub
push
mov
ja
in
or
test
leave
dec
mov
cs
sbb
dec
xchg
xor
and
repnz
xchg
and
lcall
fwait
orl
mov
adc
loope
cmpsb
push
cs
mov
sbb
or
jp
sti
subl
cmp
dec
leave
jge
inc
cs
shlb
mov
cwtl
insb
xchg
jge
pushf
mov
push
lods
bound
pop
iret
jne
mov
sub
add
insb
push
adc
icebp
xor
addr16
nop
mov
imul
mov
repz
outsl
cli
xchg
inc
pop
push
push
into
dec
negb
dec
outsl
test
xchg
push
adc
mov
rclb
sar
mov
repnz
add
cmpsb
repz
out
inc
dec
mov
int3
test
pop
inc
dec
mov
or
pop
jb
imul
fstpt
in
stos
inc
cmp
mov
gs
std
shll
cmp
rorb
inc
js
es
xchg
xchg
inc
push
clc
jecxz
mov
cmp
push
in
loop
enter
push
pushf
mov
jbe
sbb
add
lds
repz
xchg
jne
add
cltd
sub
movsb
xlat
sub
xchg
push
dec
add
les
arpl
xor
int3
pop
mov
add
leave
mov
test
cli
sarb
daa
jp
xor
cwtl
xchg
jl
inc
fwait
inc
dec
inc
out
sahf
cmpsl
add
mov
add
mov
les
or
and
cltd
push
aam
mov
ljmp
ja
pushf
lods
mov
je
pop
pop
bound
xchg
dec
mov
push
sti
inc
loopne
repz
cmpsl
mov
fwait
data16
adc
aad
ss
adc
sbb
mov
imul
and
lcall
add
cmovbe
xchg
cmp
and
mov
mov
fidivrs
hlt
dec
out
mov
pushl
dec
dec
packssdw
cwtl
jbe
fldcw
mov
es
cmp
xchg
mov
pop
cmpsl
scas
out
and
mov
lods
inc
jae
dec
mov
and
xchg
push
xlat
or
inc
pop
lock
add
xlat
mov
ds
mov
xchg
mov
pop
adc
dec
enter
cld
insl
fadds
or
hlt
lret
mov
test
sbb
xor
cmpsb
cld
and
push
xchg
hlt
ljmp
sbb
scas
subl
dec
add
push
aaa
enter
mov
mov
push
shlb
mov
xor
pop
les
or
xchg
inc
mov
pop
mov
push
mov
cmp
dec
push
scas
sub
test
cmpsl
add
mov
test
or
js
add
pop
inc
je
lds
or
stos
xor
inc
jecxz
adc
lret
push
test
dec
push
or
test
xor
push
xorb
lock
clc
incl
inc
cltd
adc
pop
and
scas
xor
jp
testl
fdivl
jge
push
sbb
push
nop
fadd
orl
mov
addr16
dec
push
lods
test
push
xor
scas
push
dec
inc
sbb
pop
jo
insl
hlt
ret
jo
ss
repnz
sub
or
cmp
pop
pop
inc
mov
das
dec
out
dec
mov
push
test
nop
insl
inc
sbb
loop
out
mov
mov
fidivs
mov
lret
lods
cmp
pop
leave
outsb
xchg
add
mov
popf
test
sub
fdivl
mov
sub
add
inc
cmp
cmpsl
xchg
jnp
stc
leave
mov
and
data16
add
mov
sti
iret
sbb
pop
shl
xchg
cld
mov
xor
mov
imul
iret
pop
sbb
sub
addr16
ret
in
mov
and
jne
subb
dec
fs
xchg
ljmp
xchg
cmp
xchg
pop
mov
mov
pusha
xchg
sahf
and
xchg
gs
sub
addb
cmp
add
repnz
sbb
pushf
scas
les
in
push
xchg
mov
clc
imul
ss
in
inc
mov
imul
cmp
repz
xchg
jmp
cltd
push
outsb
adcl
adc
pop
xchg
fisttps
cli
mov
mov
stos
fiaddl
inc
jbe
dec
jle
or
mov
fwait
mov
cmp
fwait
mov
orl
mov
iret
pop
lock
imull
imulb
xor
ds
mov
fstpl
mov
push
xor
jbe
sti
cmpsb
jne
cmp
inc
scas
sbb
mov
jle
test
mov
add
popa
test
mov
orl
out
icebp
jne
adc
jmp
aam
mov
and
mov
mov
jo
ftst
sub
lods
mov
scas
fists
xor
lcall
cmpsl
dec
rol
test
mov
lret
arpl
es
cmp
stc
or
fnstenv
sub
ficompl
or
fiaddl
adcb
ss
sbb
lea
stos
stos
xor
int
das
ficomps
sti
in
cmp
stc
mov
add
lea
rclb
les
add
xchg
loope
mov
or
rcll
sub
stos
shrb
adc
cli
mov
leave
mov
adc
cmp
mov
pop
xchg
jl
xlat
movsl
mov
xor
insb
mov
pop
dec
inc
jno
call
mov
jecxz
sahf
sahf
pop
iret
cvttps2pi
cmpsl
sar
or
aaa
or
pop
fincstp
pop
fs
push
mov
mov
xchg
pop
mov
dec
dec
in
out
out
movsl
aam
ds
in
clc
sub
fs
xor
mov
arpl
leave
cmpb
stos
test
das
stos
pop
divb
addr16
adc
ljmp
enter
sbb
out
dec
clc
push
ljmp
loope
ja
mov
push
push
das
sub
pop
mov
mov
jg
mov
dec
jmp
mov
decl
mov
cmp
mov
or
pop
mov
out
or
and
fmulp
xor
xor
mov
js
shl
dec
push
pop
xchg
rolb
repz
rorl
mov
test
add
mov
test
cmpsb
in
mov
dec
sbb
push
ror
orb
test
pop
add
xlat
push
sahf
pop
in
aam
testl
pop
stos
jle
ss
aaa
adc
add
fists
je
sbb
or
daa
add
xchg
jle
add
addr16
xor
jb
es
jle
jb
cmp
mov
cli
div
pop
cmc
push
shll
andb
mov
ds
outsl
cwtl
inc
mov
and
pop
sub
test
imul
add
xor
cmp
sti
push
and
fists
xor
iret
add
rcll
ret
outsb
sbb
dec
mov
adc
repz
sti
xlat
popf
push
jg
scas
add
addr16
lods
outsb
dec
test
dec
or
adc
stos
adc
mov
jae
decl
push
xchg
faddl
add
push
mov
cmp
xlat
into
xlat
cmp
push
pop
neg
push
pop
out
insl
push
mov
sarl
sub
jne
fnsave
out
jne
aam
cmp
and
fcomps
int
ret
scas
jnp
jns
jbe
shrb
push
loope
xor
xchg
xchg
cs
jo
sub
add
pop
cltd
jae
jl
jae
mov
inc
cs
inc
sub
arpl
mov
lock
lock
inc
xor
out
jg
push
sub
sbb
or
pop
xchg
pop
sub
or
xor
lret
and
push
cwtl
stos
inc
push
inc
inc
dec
mov
xor
les
fldl
fadd
dec
and
outsb
and
push
mov
es
sbb
mov
lds
test
testl
in
lds
mov
ficoms
testl
xchg
cmc
xchg
cmpsl
inc
or
add
sbb
sahf
aaa
and
fisubrs
adc
xchg
out
repz
das
pusha
sbb
ret
sbb
push
cli
mov
jge
filds
mov
das
pop
in
push
imul
fs
lods
mov
test
dec
mov
jnp
push
daa
shll
push
sahf
ret
out
adc
movsl
out
jecxz
in
addr16
cmp
push
fwait
sub
sbb
xor
loop
mov
stc
ret
cmp
push
aaa
sub
aad
lcall
add
adc
std
flds
mov
cmp
data16
cli
pushf
push
inc
data16
cmpsl
lods
jmp
sbb
add
loopne
sbb
jmp
int
ret
pop
sarl
xor
push
je
adc
mov
mov
loop
adc
stos
or
push
xchg
std
in
mov
mov
out
xorb
stos
decb
add
mov
jg
or
xchg
xor
out
aad
xchg
add
clc
scas
notl
jmp
pop
sub
enter
mov
push
movsl
ret
lcall
mov
pop
and
movsb
rclb
pop
dec
mov
mov
cmp
idivb
movsl
pop
lds
sbb
cmp
es
inc
or
jmp
pop
std
lds
jle
lcall
into
cli
xlat
jns
dec
iret
jmp
cmp
aaa
mov
shrd
iret
aad
ss
fdivrl
pop
aaa
int3
mov
cmp
xor
daa
mov
cmp
aaa
stos
and
fildll
cmp
xchg
ss
push
cmpsl
filds
sbb
mov
or
or
mov
mov
push
out
pop
in
cli
add
and
in
jno
sbb
lcall
mov
xor
push
mov
add
repnz
xchg
insl
mov
pop
lea
lahf
cmp
dec
rcll
loopne
adc
mov
push
mov
jb
pop
std
xor
das
fsubrs
stos
lods
push
insl
sbb
jno
leave
and
push
xchg
inc
adc
hlt
popf
aam
fwait
xchg
jae
shrb
xchg
jnp
push
icebp
bound
idivb
inc
sarb
fstp
fucomp
sbb
lret
xor
lock
stos
mov
pop
inc
shlb
rclb
pushf
ss
cmp
push
clc
lds
negl
in
adc
outsb
ret
add
push
mov
in
shll
jge
mov
inc
adc
insl
call
or
cwtl
bound
and
ss
imul
add
jae
fmuls
sbb
push
aaa
mov
pop
cmc
mov
das
adc
jns
out
andb
xor
out
lds
aas
sub
jl
mov
test
int3
shll
mov
in
or
add
add
xor
jo
js
push
and
pop
adc
out
inc
cwtl
mov
mov
in
call
lods
je
nop
xlat
orl
xchg
xlat
sub
cmpsl
dec
js
sbb
inc
movsb
pop
jle
push
mov
jmp
es
push
ds
scas
mov
iret
imul
mov
daa
aaa
insl
mov
and
loopne
push
mov
lahf
mov
and
cmp
divb
data16
data16
jbe
insb
add
shll
insl
call
fstpt
adc
outsl
add
enter
push
jp
mov
mov
mov
dec
popf
adc
xor
insl
shll
aad
or
xchg
pusha
jl
xchg
xchg
jns
ret
push
sub
jae
rorl
arpl
mov
pop
and
xor
xorb
add
repnz
add
jp
icebp
scas
jp
shlb
cltd
mov
xchg
out
test
jns
sbb
dec
sbb
mov
call
xor
jnp
xor
call
jle
test
ret
dec
or
je
cmp
repnz
sbb
cmpsl
mov
cmp
int3
out
sbbb
xor
xchg
ja
push
push
jb
lea
adc
test
xchg
movsl
shlb
lcall
push
in
mov
jp
test
adc
pop
xlat
adc
test
lret
push
int
arpl
push
add
scas
jp
pop
pop
shll
test
fstpt
fwait
outsb
push
lret
cmc
div
sub
jae
stos
jecxz
in
in
insl
xor
cmp
out
loop
mov
jns
loop
rcll
imul
push
jne
xchg
loopne
call
mov
jb
inc
cwtl
push
js
repnz
aam
adc
mov
add
imul
dec
std
ret
pusha
les
mov
push
cld
sbb
push
inc
out
jge
add
jae
lea
test
cli
mov
adc
push
stos
loop
ficoml
and
and
addr16
jle
cld
inc
test
in
pop
mov
mov
jge
add
or
adc
jbe
or
mov
jl
mov
das
jo
icebp
jbe
pop
jo
xor
sarw
pop
and
xor
leave
inc
mov
mov
dec
data16
dec
cwtl
fidivrl
sbb
push
lods
cmp
fidivl
not
daa
mov
xchg
outsl
shrb
ljmp
adc
mov
ljmp
test
insl
push
loopne
add
fisubs
psrad
test
repnz
scas
adc
jg
push
test
jmp
sahf
mov
xchg
xchg
icebp
iret
mov
jg
sarb
add
xchg
pop
fdivs
dec
out
mov
mov
jnp
xchg
mov
push
xor
and
push
xor
xor
add
pushf
pop
dec
testl
hlt
ss
leave
lea
cld
iret
std
sbb
fcmovu
nop
mov
pop
rcr
push
mov
lods
sbb
bound
sbb
das
loope
pushl
dec
jbe
ret
mov
pop
push
mov
add
sub
xchg
cmovl
sub
xor
push
dec
mov
mov
cmp
shlb
inc
lcall
push
push
xchg
insb
xor
xchg
fmuls
mov
out
out
cmc
push
enter
adc
lods
imul
or
push
xchg
mov
in
jg
inc
cwtl
les
fisttpl
into
or
sub
fsts
and
jns
jp
cmp
xor
mov
push
les
sahf
dec
cmp
pop
cmp
add
dec
sub
add
jecxz
and
stos
outsb
ds
add
xchg
call
fs
add
mov
stc
clc
out
mov
sahf
jp
jbe
insb
or
testb
mov
dec
xchg
rorb
jmp
lahf
popa
or
testl
mov
cmp
jo
jmp
das
cmp
inc
dec
shrb
sbb
sub
mov
jns
cmp
stos
push
ja
fs
bound
inc
cmp
xor
mov
les
adc
fstpt
insb
xor
add
cmpsb
adc
repz
add
push
sbb
imul
test
stos
stos
ja
out
xchg
outsl
jnp
push
test
xor
push
out
inc
push
xlat
sbb
cltd
cmp
fisubs
xchg
fidivs
das
sbb
push
xor
test
lcall
decb
test
rcll
xlat
and
lret
lret
sti
or
fiaddl
ds
not
add
pop
fst
enter
lods
mov
push
xchg
jo
fmulp
adc
inc
fimuls
daa
call
xor
push
testb
mov
sub
test
mov
dec
mov
mov
adc
pusha
loop
jmp
adc
mov
popa
std
mov
stos
andb
fucom
mov
ss
sub
pushf
mov
ds
arpl
pop
sbb
push
push
shll
cmp
inc
mov
dec
add
mov
and
mov
jle
cmpsl
adc
mov
movsb
orl
xchg
adc
xor
pop
pop
mov
ds
mov
insb
dec
cmp
push
xchg
loop
mov
jnp
insl
mov
or
xchg
in
test
xchg
dec
in
pop
adc
fdivrs
ret
andl
insl
dec
jo
in
scas
aam
jg
cmp
jle
push
inc
dec
std
push
cmp
vpshab
sub
xchg
call
sub
shrl
arpl
inc
jae
or
out
stos
push
jb
xchg
sti
xchg
dec
into
shr
push
je
xor
sbb
insb
inc
lods
inc
or
and
lods
push
leave
rcrl
mov
out
push
fs
sbb
sbb
sub
filds
addb
daa
cmp
jge
mov
lods
mov
cmp
add
es
sbbl
jp
jle
inc
adc
lret
mov
test
sbbl
sbb
popf
and
les
jbe
mov
fwait
leave
cld
and
mov
cltd
xchg
fisttpl
fwait
adc
inc
mov
add
or
ss
or
cmp
sahf
and
pop
outsb
xchg
jmp
inc
mov
clc
lret
push
mov
aam
data16
fs
outsb
inc
cwtl
mov
adc
popf
sahf
scas
insl
xor
les
jg
cmp
pop
jp
mov
add
orb
dec
xchg
addr16
aam
xor
sub
mov
testb
test
sbb
rorl
mov
pop
xor
lods
and
add
stos
hlt
dec
push
jbe
sbbb
add
lret
xor
in
cld
xor
xchg
sub
pushf
fcmovnb
lock
stos
push
mov
outsl
scas
mov
mov
lea
push
nop
xor
or
inc
or
mov
mov
ds
xchg
in
fists
and
push
lret
mov
stos
gs
and
outsb
sbb
xchg
shlb
icebp
xor
mov
sub
push
pop
sbb
adc
addl
cmpsl
or
xor
out
shl
ljmp
or
shrb
rcrb
data16
pop
add
xor
cmc
or
inc
cltd
fs
inc
push
and
mov
repnz
es
jmp
mov
or
outsb
mov
mov
fwait
pushf
mov
mov
std
fisubrs
rol
dec
jns,pn
aam
mov
sbb
push
icebp
adc
enter
clc
aad
loopne
mov
add
xor
mov
lock
xchg
mov
std
cld
dec
jno
push
andb
mov
jbe
sti
test
in
jnp
and
xchg
push
and
scas
scas
sbb
sahf
cs
fnsave
mov
sahf
mov
cmp
mov
outsb
adc
jno
mov
fwait
movsb
mov
xchg
out
shr
cmp
push
std
mov
lds
dec
jne
out
iret
in
sbb
sub
and
cmp
push
pop
dec
ret
shlb
jno
dec
mov
gs
xchg
xchg
mov
shr
cmp
js
pop
mov
mov
push
mov
mov
test
loop
aam
xchg
cwtl
gs
movsb
arpl
pop
sti
mov
hlt
jmp
mov
icebp
imul
fmull
lret
ret
loope
ret
jecxz
mov
cwtl
or
mov
iret
andl
jle
mov
dec
push
lcall
aas
movl
fs
dec
pop
je
and
aaa
xchg
stos
xor
xchg
adc
mov
pop
mov
ljmp
push
negb
call
cmpsb
pop
sbb
xchg
rolb
fisttps
in
sub
addr16
cmpsb
jmp
out
cmp
in
push
mov
inc
in
aaa
or
mov
mov
mov
int
and
pop
std
insl
daa
jno
and
xchg
mov
arpl
sahf
mov
ja
xor
ss
pop
dec
dec
loop
mov
ret
add
shlb
mov
notb
cs
adc
ds
pusha
adcb
cmpsb
mov
inc
dec
cli
pop
jle
mov
dec
jne
sub
fs
popa
int3
push
cmp
popf
mov
mov
or
pop
sbb
and
shlb
les
cmp
xchg
pop
fcompl
add
testl
je
cmp
mulb
loopne
mov
cmc
enter
mov
loope
arpl
stos
mov
rcrb
in
lret
mov
pop
imul
in
mov
insb
sbb
clc
lcall
fstpt
rcrb
mov
sbb
popf
shr
stos
call
mov
jns
push
das
sbb
hlt
mov
sahf
add
pop
andb
and
jecxz
pop
dec
fstpt
mov
rcrl
popa
fistps
stos
cmp
mov
sbb
arpl
xchg
adc
test
fidivrl
and
shll
aad
and
bound
repnz
cmp
mov
test
mov
movb
out
jecxz
je
pop
sub
cli
outsl
loop
jg
in
push
and
mov
enter
jae
push
call
inc
rol
xchg
push
pusha
mov
push
sub
or
cmpsb
mov
test
aaa
lcall
push
push
fidivrs
mov
aas
orb
ficompl
cmpl
jle
and
xchg
push
fsubl
call
in
cmp
outsl
pop
das
and
es
icebp
cltd
test
add
inc
pop
xor
adc
test
fmul
jns
push
mov
subb
pop
jge
xchg
inc
lods
or
call
mov
lcall
lret
mov
pop
and
cltd
shrl
mov
movsl
sub
pusha
icebp
popa
cmp
scas
sahf
mov
aas
sub
xchg
ret
mov
and
add
jl
or
xor
xor
mov
inc
sti
pop
rorb
lods
mov
jp
lea
jmp
inc
sub
pop
hlt
stc
aaa
out
test
xor
jecxz
pop
push
cmpsb
dec
int
shll
push
pop
pushf
fsubl
jge
cmpsl
fldenv
ljmp
call
jnp
lea
xchg
in
pop
adc
repz
divl
leave
cmp
push
push
fmull
movsb
imul
xchg
loopne
inc
and
fadds
mov
test
inc
sti
popa
mov
push
jne
divb
pop
ror
filds
jl
je
push
scas
and
and
lea
fwait
cmc
nop
gs
and
mov
fstpt
vpsubsb
inc
adc
push
cwtl
test
sub
jecxz
addl
xor
fsubrl
test
mov
fldcw
xor
jle
gs
mov
and
sub
xor
add
add
popf
scas
add
pop
rolb
adc
push
flds
jg
xchg
adcb
pop
or
jns
mov
or
cmp
dec
insl
cli
cmp
or
cmp
push
das
adc
out
cmp
in
cmp
loopne
jl
and
mov
jb
imul
and
xor
iret
sbb
imul
and
jne
repz
out
hlt
pop
dec
and
jb
jo
cltd
xchg
stos
cmp
ret
lahf
ss
dec
fwait
movsb
or
outsl
mov
sbb
gs
call
lock
cmp
pop
mov
imul
push
and
or
push
pushf
ja
dec
lea
mov
jmp
aas
add
mov
xor
rcrb
jae
je
jmp
faddl
add
int3
pop
mov
mov
ret
or
fcompl
pop
fnsave
or
jns
jo
arpl
mov
int
and
out
xchg
cld
and
scas
fcomps
mov
jp
cmp
dec
loopne
mov
cmpsb
and
push
mov
xor
in
cmpsb
adc
movsl
push
test
push
xchg
cltd
mov
adc
mov
repz
and
dec
aaa
jp,pt
mov
pop
lret
push
jb
mov
mov
mov
icebp
subl
shll
rcrb
fwait
cwtl
inc
stos
xchg
int
jbe
mov
sbb
sbb
pushf
pop
pop
pusha
cs
mov
sbb
xlat
cmpl
inc
mov
sub
das
push
stc
pop
sub
add
leave
mov
andb
or
minps
add
pop
cmpsb
sahf
sub
jge
push
lea
pop
lds
adc
sbb
setns
insl
out
out
cmp
pop
ljmp
xor
pop
xor
jo
inc
roll
cld
adc
out
in
adc
mov
xchg
jp
sub
imul
out
and
push
inc
fmull
testb
pop
into
adc
inc
xchg
pop
idivl
cmp
scas
out
imul
out
dec
xadd
mov
in
out
cmp
add
jmp
push
xchg
mov
inc
xor
jae
push
pop
inc
xor
or
xchg
adc
or
pop
mov
aaa
xchg
out
into
pop
test
movsb
rolb
rcll
insb
push
mov
fcompl
sub
pop
xor
and
jmp
sti
lods
ja
stos
add
xor
aam
jae
jg
mov
xor
jmp
movsl
jno
scas
push
pusha
xchg
arpl
ja
sbb
maskmovq
idivl
mov
cld
mov
jle
or
jno
div
xchg
mov
pop
jmp
in
sub
in
out
fisubrl
cmp
icebp
mov
push
ljmp
push
or
inc
and
add
sub
jo
sbb
or
fstl
dec
push
sub
sbb
ja
enter
in
xchg
aad
mov
mov
jns
shll
cmp
and
mov
mov
inc
and
enter
incb
push
pushf
mov
fldl
out
enter
fistpl
adc
sbb
imul
addb
push
dec
shl
js
cs
mov
xchg
jo
lret
dec
les
xchg
push
cld
aad
pop
add
xlat
outsb
mov
add
and
arpl
push
addr16
mov
mov
cli
cmpsl
cld
ret
mov
mov
loop
pushw
jmp
xchg
push
fwait
xchg
xchg
pop
maskmovq
idivl
adc
cmp
and
dec
dec
test
notl
mov
fsubr
add
mov
fs
cwtl
cwtl
sub
jb
inc
inc
xor
xor
jmp
pusha
fwait
dec
adc
sbb
xor
lods
bound
jae
mul
inc
loope
in
test
ret
jo
add
imul
mov
into
and
adc
mov
inc
xchg
lds
std
call
pop
push
mov
fdivrl
shll
add
adc
int
std
fisttpll
mov
push
insl
or
xchg
test
push
mov
aas
mov
xor
or
add
cmpsb
pushf
jne
mov
out
sub
ljmp
rcrl
leave
dec
mov
pop
rcl
cmp
cmp
pop
xor
sbb
mov
lods
pop
push
jmp
outsb
jg
test
jbe
mov
xor
fsubs
fstpt
jno
adc
out
and
and
jle,pn
leave
inc
push
cvtdq2ps
dec
push
dec
loopne
scas
sub
leave
mov
insl
xor
jl
fwait
addl
gs
outsb
hlt
in
xor
sbb
push
xor
movsl
jmp
xchg
jmp
jne
dec
mov
sub
jns
dec
xor
inc
jnp
lret
inc
mov
push
cli
push
adc
xchg
and
ret
int3
dec
push
mov
sbb
fwait
xor
mov
push
arpl
push
das
pop
insl
push
or
adc
pop
push
pop
and
inc
mov
cmp
pop
adc
push
add
jns
pop
rorl
call
jns
push
or
dec
jle,pt
insb
mov
sub
pop
sarb
insl
lahf
sbb
xchg
sbb
add
push
aam
movsl
ljmp
addr16
cmp
data16
pusha
mov
shrl
adc
mov
imul
ja,pt
rcll
mov
lret
dec
clc
cmp
jmp
lcall
jl
jb
loopne
fwait
mov
cli
stc
ss
das
push
test
cld
push
outsl
pop
adc
mov
lret
pop
or
dec
dec
mov
icebp
sub
inc
xor
dec
sub
sahf
mov
sti
mov
push
push
mov
mov
sti
andl
push
mov
jl
inc
xor
inc
push
mov
arpl
push
int3
xor
int3
push
ficompl
push
lods
push
loopne
int
roll
shlb
mov
pop
mov
xchg
mov
sub
ds
jns
dec
cmpsl
div
lahf
cwtl
dec
mov
test
fdivrs
mov
lods
adc
jnp
mov
mov
or
nop
push
jecxz
dec
jns
popf
out
fisubrs
shll
mov
aaa
or
jnp
xchg
into
ret
mov
iret
jmp
lods
gs
dec
fistpl
add
lret
fimull
decl
mov
xor
pop
jo
gs
push
mov
aaa
sahf
cmpsl
dec
pop
std
rol
daa
popf
pusha
mov
sti
popf
fidivrs
fwait
push
sti
mov
mov
sbb
xor
js
cmpsb
adc
arpl
aam
push
loopne
outsl
fisubs
ret
stc
imul
sub
add
mov
or
sar
xor
sub
push
cmp
pop
imull
lea
popa
mov
stc
js
pop
std
dec
dec
sub
inc
xorl
out
or
mov
pop
xor
orb
cmp
dec
mov
je
and
shlb
imul
mov
stc
test
and
jle
xchg
mov
jbe
push
cmpsl
or
into
fmull
cmp
push
mov
movsl
cwtl
adc
jae
popa
nop
out
out
cmp
mov
inc
sub
call
pop
or
inc
push
xor
pop
scas
or
iret
pop
mov
negl
lods
or
ja
roll
push
imul
pop
mov
shll
sub
sbb
pushf
jg
rorb
stc
insb
scas
addb
aaa
frstor
or
mov
ss
nop
pop
and
push
cmc
inc
sub
mov
sahf
pop
imul
ret
out
ss
and
mov
xchg
adcb
and
and
mov
test
clc
mov
scas
cmp
sub
mov
outsb
dec
sub
ljmp
or
gs
xchg
push
imul
int
js
jecxz
mov
in
sbb
sub
movsl
cli
cmc
pusha
decl
out
sbbb
inc
das
cmc
sbb
sbb
add
and
pop
adc
hlt
jno
rcl
jp
repnz
pop
cmc
negl
or
je
sub
cmp
dec
xor
es
decl
aam
adc
mov
cmp
or
xor
adc
inc
sub
arpl
xor
movb
dec
pushf
andl
out
out
sub
movsb
jo
mov
nop
loop
xchg
sbb
movsb
hlt
lcall
out
inc
mov
rcrb
jge
pop
xchg
jbe
sbb
xchg
cld
push
fistpl
mov
repnz
stc
xor
xchg
mov
repnz
shlb
mov
or
add
bound
and
inc
int
add
mov
test
outsb
fimuls
cmpsb
pop
lcall
dec
mov
nop
xor
cmp
inc
dec
fs
out
das
sahf
add
push
push
dec
xchg
mov
repz
xchg
jmp
pop
fldcw
fcmovu
dec
test
cltd
and
loope
icebp
xchg
jge
lods
icebp
incl
xor
xor
xchg
pop
sub
inc
xchg
lods
adc
and
cwtl
and
push
pop
pusha
fnstsw
xchg
cmp
in
lret
mov
lock
or
in
dec
pop
inc
jle
iret
adc
pop
into
pop
xor
inc
divb
mov
sub
sub
stos
xor
stos
in
lods
mov
pop
mov
jbe
fmuls
aaa
xlat
mov
push
imul
movb
inc
cwtl
mov
or
mov
leave
fs
dec
daa
out
out
xchg
inc
add
and
clc
ret
enter
add
enter
je
push
or
ljmp
jg
sub
or
push
sub
inc
dec
arpl
imul
jb
addl
aas
sbb
bound
mov
mov
out
cmc
mov
mov
jp
shlb
in
div
shll
out
rorl
or
mov
add
movsb
jae
cmpl
out
js
mov
jne
loope
ret
push
paddsw
push
push
lods
shl
add
jno
pop
pusha
repnz
jb
int
push
pop
fnsave
mov
icebp
fmuls
hlt
mov
xor
lods
mov
test
sbbb
jb
and
call
out
lret
sub
sbb
movsb
mov
mov
mov
or
adc
or
inc
inc
push
in
ljmp
xchg
es
repnz
ss
adc
stos
push
pop
std
inc
xchg
lods
pusha
sbb
cmp
push
sub
adc
insb
lods
insl
loope
sti
dec
adc
ljmp
pop
lret
push
xor
xorb
push
fimuls
mov
outsb
xor
xor
jle
std
imul
adc
sbbl
inc
ljmp
call
inc
lea
adc
push
dec
test
jmp
xor
or
xor
insb
jmp
xor
js
inc
lods
inc
pop
insb
subb
xchg
test
pop
jmp
push
jecxz
pusha
fsubl
jb
add
sub
mov
shrb
leave
jecxz
sub
divb
cmp
sub
out
jle
xchg
cmp
xorl
push
adc
add
xchg
jmp
mov
xchg
scas
inc
lock
adc
data16
pop
repz
ret
repz
fstp
jmp
scas
xchg
inc
adc
enter
push
pop
das
mov
sbb
add
mov
jo
push
push
inc
and
mov
push
ss
lods
mov
ss
mov
call
dec
adc
subl
test
out
lds
ds
jae
pop
scas
shlb
test
inc
sbb
vpmacsdd
dec
cmp
pop
fistl
insl
scas
cs
in
es
mov
pop
push
hlt
cmpsb
dec
jo
notl
rcll
outsl
outsl
mov
in
inc
lcall
idivl
lea
pop
adc
add
loop
lcall
out
add
fidivl
in
lcall
icebp
add
lret
xchg
xchg
jb
cmp
push
or
lock
fiadds
addr16
faddl
shrb
xor
xchg
push
push
mov
jae
mov
adcb
mov
jnp
jge
pop
sbb
push
jno
dec
lahf
jecxz
pop
rcrb
push
movsl
lahf
dec
inc
add
mov
cmp
or
mov
stos
movsl
cli
add
pop
test
sbbl
dec
mov
and
std
mov
lds
add
fwait
lret
ret
shl
inc
call
bound
mov
or
mov
aas
ror
movsb
xchg
hlt
out
sbb
push
sbb
insb
jle
ja
jl
jbe
adc
and
jne
test
shll
mov
mov
cmpsl
mov
lahf
mov
inc
dec
mov
push
mov
int3
jecxz
in
sub
stos
scas
xor
rcrb
add
movsb
xchg
mov
push
fs
shlb
push
jae
daa
push
lea
shlb
mov
push
lret
mov
push
xor
jecxz
cmp
pop
pusha
xlat
xor
out
xor
sub
pop
mov
adc
cpuid
test
out
pop
or
cmp
lcall
loopne
ljmp
xchg
and
push
imul
lahf
push
call
xor
test
stos
leave
cmp
and
and
repz
out
dec
pop
inc
pop
out
orb
push
mov
xor
pop
xor
xor
mov
stc
int3
std
mov
fldl
addr16
mov
xchg
mov
pop
pop
sbb
loope
in
jmp
scas
sbb
sbb
xchg
je
mov
and
cmp
push
ds
add
fprem1
pop
dec
lods
sbb
jmp
in
subl
into
or
and
fidivs
cltd
insb
mov
mov
xchg
lea
or
dec
inc
je
sub
or
cmp
lds
inc
sahf
adc
dec
mov
dec
call
jle
xchg
stc
jl
mov
shll
in
addb
ret
and
push
cmp
dec
inc
adc
push
fiadds
jp
aas
pop
or
mov
mul
jge
adc
rolb
mov
jnp
cmpsb
cmp
into
jmp
or
sub
test
stos
cld
jmp
data16
xor
sub
fnsave
push
mov
out
adc
sbb
out
aad
adc
dec
repnz
in
daa
inc
ret
jae
mov
lret
sub
insl
int3
pop
sbb
push
cmpsb
repz
adc
ret
add
cwtl
loopne
pusha
xchg
lock
rolb
pushf
shlb
into
jae
dec
pop
inc
sbb
inc
xchg
xor
cwtl
lret
dec
out
adc
fdivp
sub
into
jecxz
fsubl
into
jg
lods
insb
and
nop
mov
xchg
insl
or
daa
dec
mov
adc
xor
mov
dec
add
sub
mov
push
mov
cs
and
repz
shl
mov
xchg
repnz
loope
in
scas
fdivl
pop
mov
xchg
cmp
xlat
js
xor
arpl
iret
arpl
xchg
imul
xchg
movsb
mov
orl
shrl
xor
cmp
loopne
cmp
jmp
cmc
mulb
es
daa
xor
movsb
insl
cmpsl
std
inc
cwtl
nop
rorl
sahf
je
add
mov
and
and
adc
ljmp
pop
sahf
loope
popf
inc
jle
clc
nop
push
bswap
push
pop
rolb
fmull
cwtl
lds
dec
mov
pop
mov
in
frstor
pop
push
jecxz
xchg
arpl
add
or
xchg
fcoms
mov
sbb
das
sahf
mov
movl
push
push
push
out
push
or
insb
arpl
xor
nop
inc
xchg
pop
sub
mov
or
mov
cwtl
test
sarb
out
loop
pop
mov
push
jns
int
shll
inc
inc
roll
jne
jp
mov
mov
js
and
xchg
es
mov
cmp
dec
jb
cmp
and
pop
stos
xchg
repz
dec
or
jnp
clc
clc
dec
sub
cs
adc
dec
adc
pusha
fstl
popa
add
jl
cmp
aam
cmc
jle
lods
push
cmp
pop
arpl
push
mov
jo
dec
jns
push
sbb
leave
insb
mov
loope
sbb
mov
imul
les
pop
stos
subb
xchg
cltd
mov
or
jns
aad
les
sbb
jl
pop
xchg
ficoml
mov
cmp
ds
or
inc
cltd
fsubrl
sbb
inc
xor
sub
fistps
into
cld
push
or
flds
arpl
or
daa
setae
inc
insl
call
insl
xor
into
jp
add
pop
sarb
mov
mov
sar
call
inc
lods
jecxz
push
add
push
insl
jl
xor
ret
in
dec
xchg
loope
icebp
dec
imul
cmc
sbb
dec
sbb
xchg
sub
xor
adc
aam
cmpsb
sbb
mov
push
hlt
jno
push
ljmp
ja
cs
pop
out
jnp
mov
aad
adc
inc
mov
mov
adc
arpl
addb
jns
dec
dec
pushf
lret
jg
das
xor
pop
mov
dec
sbb
jecxz
mov
rdpmc
and
ss
clc
out
cs
aas
xchg
mov
adc
or
iret
out
adc
adc
inc
test
pushf
sub
jle
in
cli
mov
inc
pop
mov
call
call
ds
mov
rolb
cwtl
mov
jbe
sub
xchg
push
stos
addr16
adc
pop
and
pop
test
sub
pop
mov
add
scas
push
rorl
mov
sbb
cld
sub
mov
call
adc
mov
lods
and
hlt
cmpsl
call
sbb
int3
sahf
or
dec
setae
cmp
fisubrl
add
sbb
mov
test
push
mov
inc
cmp
lods
outsb
mov
jae
jmp
cmpsl
out
out
mov
outsb
mov
cmp
insb
popf
out
mov
ss
ljmp
mov
js
jl
test
rolb
pop
mul
rorb
das
pop
pop
into
stos
jo
clc
mov
enter
loopne
xor
out
mov
jge
fcompl
mov
or
cmpsb
inc
cmpsb
addl
mov
iret
push
and
arpl
and
jle
sbb
inc
pusha
push
xor
mov
jb
or
and
js
lcall
xchg
push
fisttpl
into
ds
jecxz
outsl
rcrb
sbb
mov
dec
jl
lods
out
xlat
jns
cld
or
jb
jmp
jno
push
jo
fidivrl
fstpl
out
mov
and
shll
cmp
mov
icebp
mov
idivb
pop
shll
mov
push
dec
xor
and
negb
jns
int3
fsubrl
cs
inc
sub
xchg
xchg
push
lret
mov
aad
arpl
push
lds
cli
popf
cmp
add
push
mov
mov
stos
mov
aam
stc
mov
test
sti
sub
imul
jae
dec
mov
push
scas
dec
cmp
xorl
sub
inc
bound
push
jle
sub
mov
or
jl
or
jb
popa
mov
jg
int3
mov
outsb
pop
dec
push
inc
stos
mov
scas
sbb
fnstenv
sbb
aaa
xor
pop
cmp
mov
pop
aas
cwtl
or
xorb
mov
and
shld
pop
insl
adc
mov
insb
mov
inc
subb
sub
cmpsb
and
adc
or
sub
sti
sub
cmp
arpl
jnp
shll
test
aaa
push
in
in
xchg
push
sahf
pop
adc
and
divb
jg
and
sbb
icebp
bound
dec
lcall
mov
adc
insl
hlt
mov
mov
sbb
cmovle
je
jb
mov
adc
push
cmp
fdivrs
ja
sbbl
add
iret
lret
adc
mov
push
pop
loop
cltd
adc
leave
stc
scas
push
sub
daa
subb
clc
lds
stc
xor
push
mov
xchg
cmp
loope
sahf
and
call
movsb
and
loop
lock
sub
mov
push
cmpsl
fidivrl
dec
pop
pop
mov
adc
addr16
dec
jmp
insb
adc
pop
add
out
loopne
int
cmc
mov
xchg
mov
subb
bound
js
lods
pop
mov
jb
mov
fldt
std
lcall
aaa
insb
mov
rcr
adc
lea
sti
cltd
or
shl
cmpb
mov
into
test
js
testb
repnz
xchg
or
mov
cmpsb
jmp
outsl
mov
jns
adc
in
lret
mov
in
daa
enter
xor
ja
pusha
out
js
lret
mov
jb
mov
sub
jecxz
mov
mov
mov
fisubrs
daa
push
popf
lahf
xor
push
xor
or
cmp
int3
arpl
push
xor
mov
fcoms
stos
icebp
pop
daa
aaa
sub
mov
xchg
adc
mov
test
sbb
into
mov
xor
xor
mov
aad
xor
pushf
loope
xchg
sub
cmpsl
rol
dec
mov
out
inc
dec
push
push
push
insb
xor
in
jmp
cmp
add
popf
mov
int3
out
pushf
jmp
push
mov
lds
pop
jp
movsl
push
cli
sbb
add
sbb
mov
imul
jmp
jae
and
push
loop
test
scas
repz
arpl
imul
dec
inc
stc
test
cmpsb
punpckhbw
mov
mov
pop
adc
sbb
adc
lret
adc
sub
iret
push
push
pop
enter
cmp
repz
push
fwait
add
pop
sbb
aad
inc
add
and
cld
leave
aaa
sub
es
jl
mov
jmp
dec
addr16
mov
sub
mov
data16
or
imul
xor
sbb
mov
jmp
inc
push
cmpsl
and
mov
cmp
add
mov
clc
mov
das
sbb
rol
std
sbb
idiv
ljmp
lds
outsb
xchg
ffreep
bound
push
and
popf
and
xor
stos
jne
scas
push
lahf
shlb
sti
fdivl
pop
addr16
in
inc
insl
cmp
leave
dec
out
jp
insl
push
sbb
rcll
xorb
jb
pushf
cwtl
jbe
xor
in
sbb
bound
in
adc
jge
lods
mov
push
and
jl
pusha
push
adcb
sbb
inc
add
xor
jne
call
fnstcw
pop
and
sub
ljmp
jo
inc
clc
mov
xchg
cmp
lea
aam
xor
adc
cld
gs
or
lods
xor
scas
test
add
mov
sti
inc
lds
xor
repnz
ret
xor
in
mov
mov
add
pop
mov
gs
push
stos
adc
mov
faddl
cmpsb
or
mov
push
inc
loop
mov
cmp
or
and
out
mov
mov
adc
sbb
loop
into
pop
stc
mov
mov
mov
mov
push
mov
test
in
shll
mov
adc
fsubr
and
cmp
mov
add
js
mov
pop
js
scas
jbe
popa
dec
fnstsw
loop
out
mov
vpaddusb
xchg
xor
sbb
cmp
dec
jb
and
lcall
out
rorl
cltd
pop
ja
nop
ds
push
pop
sbb
lea
inc
xor
mov
lds
mov
gs
jb
inc
mov
fcmovbe
fidivl
loopne
cmp
vpaddd
addl
and
push
popa
sub
mov
inc
stos
addr16
adc
xor
mov
loopne
inc
in
loope
adc
xorb
test
cmp
or
dec
sbb
sub
inc
ret
jne
sbb
pop
roll
test
andb
pop
pop
ljmp
xchg
movsl
clc
loopne
jle
insb
dec
cs
jecxz
call
xor
jns
jbe
imul
add
out
mov
sub
scas
cmp
xchg
xor
icebp
cmp
aam
daa
xchg
pop
inc
scas
mov
cmp
cltd
add
rcrb
out
mov
adc
mov
in
inc
jns
daa
test
aam
sbb
out
into
ljmp
pop
out
mov
sti
fs
or
sub
jno
daa
arpl
iret
mov
data16
daa
pop
pop
imul
mov
pop
xchg
inc
insb
adc
mov
pop
push
cmp
fs
and
inc
sub
push
mov
rcl
int
rclb
insb
in
adc
cld
cltd
push
sub
or
mov
dec
cmp
ss
sub
push
daa
daa
or
hlt
jno
dec
pop
jae
sbb
fsubr
xor
pop
pop
fisubl
sub
repnz
mov
xchg
push
int3
dec
pop
je
shrb
add
xor
sbb
mov
int3
loopne
icebp
adc
das
rcrl
sahf
out
and
rclb
clc
cs
push
jne
push
push
in
gs
mov
sbb
fld
cmp
xorl
add
jne
push
mov
add
rol
std
jge
push
cmp
mov
jmp
icebp
sub
imul
iret
bound
dec
shrl
pop
sbb
adc
testb
add
cmp
push
dec
in
insb
mov
cmp
push
pop
mov
fnsave
lret
and
dec
and
xor
xor
jo
ljmp
das
das
pop
jge
hlt
out
mov
push
insl
andl
add
adc
negb
push
ret
sub
cmp
adc
push
imul
jnp
mov
out
stc
adc
or
cli
negl
ljmp
arpl
pusha
hlt
fcompl
data16
mov
inc
add
mov
outsb
mov
in
pushf
not
cmp
push
push
pop
jle
xor
arpl
shl
or
in
divl
rclb
xchg
idivl
icebp
sarb
adc
pop
xchg
sub
out
adc
mov
push
push
insl
xor
cmc
gs
xchg
sub
push
mov
jmp
rol
xor
push
insb
pop
loop
stos
and
pushf
iret
dec
mov
stos
pop
add
mov
cmp
mov
shll
insb
fstpl
ret
mov
mov
sbb
mov
jnp
or
mov
mov
dec
rclb
jle
fbld
hlt
gs
mov
inc
push
in
or
mov
inc
das
xor
xor
leave
cwtl
out
jbe
rorl
inc
push
shll
lahf
and
imul
inc
dec
dec
sub
pop
add
aas
aas
das
push
jne
js
pushf
das
cmp
pop
es
outsl
xchg
and
scas
ret
insl
add
jl
mov
pop
enter
sti
inc
xor
mov
mov
xchg
ds
inc
push
xchg
sbb
push
jge
jbe
rol
mov
pop
sahf
push
jle
mov
mov
mov
mov
movsl
incl
or
jmp
inc
pop
jae
lock
mov
into
cmp
and
mov
ret
lods
inc
xchg
mov
xchg
or
or
aaa
pusha
cld
inc
pushf
push
cs
test
xor
xchg
and
sar
xlat
xor
jno
sbb
mov
dec
shlb
out
lret
sub
add
and
fstl
call
xchg
mov
movsl
scas
inc
loop
mov
pushf
out
sbb
loope
rcrb
rcrl
in
nop
ljmp
pop
jbe
inc
pop
sar
movsb
loopne
jb
mov
aam
and
out
test
mov
sub
leave
int3
call
aad
cld
jae
repnz
jl
xchg
fcoms
jmp
cmp
jae
jl
test
cmpsb
mov
les
push
repnz
iret
rcr
mov
mov
fdivs
iret
fsubl
add
aam
or
dec
or
push
xchg
aas
scas
pop
push
clc
movsb
add
clc
fbstp
inc
jg
xor
fmull
add
sbb
push
lea
inc
push
xor
mov
sub
dec
notl
es
or
pop
mov
mov
xchg
add
call
xchg
cmp
xchg
xlat
cld
cmp
jp
jno
add
out
js
and
out
ret
push
mov
testb
sbb
in
lods
mov
sbb
push
add
cmp
je
xorl
shrl
mov
test
fsub
and
movsb
fsubr
jb,pt
xlat
fcoml
loope
add
jecxz
clc
ljmp
mov
gs
add
pop
jl
cmpsb
sbbb
push
les
shrl
sub
ficoml
push
fcmovnbe
and
mov
and
add
in
pop
lret
inc
sub
aas
xor
sbbb
adc
out
pop
popf
dec
cltd
cli
jb
test
lret
les
sub
pop
add
int
out
test
mov
push
les
cli
sbb
mov
rolb
ror
mov
jmp
lods
mov
push
push
stos
dec
jmp
or
inc
cld
push
cwtl
lea
lahf
shrb
lret
call
fucomi
in
mov
push
rorb
mov
xchg
and
andl
out
mov
cmp
xor
enter
ror
out
in
clc
sub
loop
jo
dec
imul
jno
sbbl
inc
rdmsr
mov
mov
mov
ljmp
or
outsb
cld
rcrl
pop
push
xor
cltd
sub
jge
mov
sbb
dec
rolb
fwait
ljmp
clc
int
and
and
cmc
pop
fistpl
aas
sub
orl
popf
push
in
lds
xor
mov
mov
inc
cmc
add
ret
sbb
lock
mov
filds
sub
loopne
out
jns
and
lahf
jl
add
icebp
mov
ja
pusha
pop
shrb
add
mov
sub
mov
fcmovbe
adc
aam
repz
push
jno
push
push
xchg
leave
lcall
lcall
in
mov
mov
add
xor
adc
loope
lods
inc
lods
movsl
xor
and
xchg
in
outsl
push
and
sub
xchg
sbb
rol
lods
push
xchg
and
pop
inc
mov
int3
pop
cmp
shrb
std
out
lds
cmp
adcb
add
lock
xor
loope
jns
in
aam
pop
cwtl
mov
pop
xchg
or
loopne
and
repz
push
cmp
popa
push
pop
xchg
adc
xchg
imul
es
sub
pop
pop
push
xchg
add
cmc
movsb
mov
fs
idiv
cld
xchg
xchg
or
mov
dec
fucom
mov
lcall
pop
insb
or
lahf
pop
test
int
pop
jl
dec
mov
loop
in
push
mov
jns
pop
dec
test
pop
or
out
aam
push
xchg
popa
fsubrs
andb
imul
inc
xor
cld
test
rorb
jb
pushf
aad
fnstcw
insl
aad
mov
cmp
fidivrs
inc
std
jl
adcl
insb
cltd
lock
add
mov
scas
mov
lret
fwait
mov
sbb
lods
jbe
or
pusha
jb
addl
aad
ja
ror
jp
fidivrs
jne
mov
jecxz
pop
ret
sbb
aaa
add
arpl
inc
sub
push
fisubrl
cmpsl
push
loope
jge
fldt
std
jecxz
aam
insb
xchg
inc
enter
imul
mov
mov
out
mov
mov
pop
jbe
incb
xchg
mov
jp
int
cltd
mov
xchg
xlat
sub
arpl
adc
adc
ds
xchg
lcall
aad
mov
jns
jmp
ja
cltd
jae
in
cltd
lcall
aad
and
repnz
fsubrp
xchg
sub
lock
pop
jae
int3
xorl
sub
call
in
lahf
adc
mov
inc
mov
xchg
popa
xor
neg
push
in
lods
andb
dec
out
rcrb
jmp
push
push
dec
mov
inc
xlat
out
mov
add
cld
push
pop
loopne
mov
push
arpl
mov
insl
xor
out
mov
adc
pop
rcr
jno
int
push
cmp
mov
jno
mov
jae
adc
scas
xchg
pop
lods
das
cli
xchg
insl
rol
and
daa
lods
xchg
dec
cmovns
jg
repnz
arpl
es
testb
pop
cmovns
pop
xchg
pusha
adc
adc
cltd
or
or
bound
xor
in
shll
aam
cmp
sub
mov
mov
ret
rcll
ljmp
cmp
ja
or
loope
mov
pop
add
movsb
inc
ds
jnp
pop
ljmp
lahf
xchg
lods
in
adcl
fiadds
sbbb
pop
inc
and
jp
les
fprem
sti
xchg
mov
daa
push
seto
pusha
stc
mov
sbb
cmp
mov
inc
cmp
fdivrl
loope
loop
popf
sub
pop
mov
out
hlt
dec
push
outsl
pop
sub
inc
or
xchg
in
or
cli
xchg
inc
je
dec
lock
jb
cmp
sub
pop
dec
sub
hlt
xchg
cli
push
push
pushf
fisttps
adc
stos
call
lcall
lods
jb
pop
imul
xchg
add
push
and
jae
hlt
insb
pop
lods
je
mov
arpl
mov
test
cmp
adc
pop
push
jae
mov
jge
loope
mov
cmp
dec
jb
push
stc
push
push
inc
cmc
jb
call
ds
sbb
fcompl
mov
testb
stos
mov
mov
repnz
shll
dec
inc
add
xchg
popf
cmpsl
imul
pop
cmp
add
or
push
cmp
fstp
jbe
jp
cmp
jo
add
sar
xchg
cmp
add
sub
xchg
jl
push
js
rorb
aaa
mov
push
add
add
dec
add
inc
into
mov
test
fnstcw
aaa
cmpsb
sahf
push
cltd
push
dec
mov
xchg
sbb
insb
jge
shl
or
inc
ret
pop
out
pop
pop
fs
mov
repz
insl
sbb
jne
xchg
shrl
mov
jmp
sbb
xchg
mov
into
lock
dec
int3
mov
mov
push
and
mov
in
aam
hlt
mov
inc
jne
jne
sti
js
push
push
cmp
mov
lret
scas
daa
lods
mov
inc
xor
popa
es
cli
rorl
ss
xchg
inc
mov
scas
ljmp
andb
sbb
enter
xchg
lods
popf
ret
lock
push
jp
fmuls
cmc
mov
mov
mov
ds
mov
stos
gs
lahf
loop
mov
mov
out
dec
loopne
pop
jg
pop
out
ror
mov
jp
push
adc
or
mov
lret
mov
inc
cmp
jmp
jmp
cmpsb
scas
push
ret
gs
mov
ss
ja
add
push
mov
std
out
mov
lahf
pop
xor
mov
mov
sbb
sti
paddd
mov
mov
push
out
adc
lret
xor
sahf
dec
mov
out
and
push
xchg
and
flds
aas
shlb
jnp
testb
loop
adc
jae
insb
adc
fs
das
and
sbb
shr
ds
mov
nop
pop
nop
cmp
aas
shr
lds
inc
xor
aad
bound
push
sidtl
into
xor
repz
inc
add
int3
xchg
cmpsl
xchg
or
sub
fstl
out
xchg
incl
jne
mov
test
dec
push
lret
mov
sbbl
scas
xor
test
sbb
jle
lret
fildl
mov
mov
xchg
jo
insb
aaa
pop
sbb
mov
jmp
mov
adc
jns
mov
dec
mov
sub
cs
ljmp
mov
in
pop
pop
movsl
imul
push
sub
add
std
aam
popf
addb
adc
les
out
daa
sar
fldcw
shlb
out
adc
call
xchg
mov
xchg
test
mov
cmpsb
scas
xchg
cld
fisubs
addb
push
arpl
mov
adc
xor
lret
int
int
loope
xchg
sbbl
repnz
mov
fcmovnu
push
xor
aam
jp
or
fldenv
das
in
mov
mov
or
ficompl
subb
imul
mov
pusha
arpl
push
into
sbb
cld
imul
and
xchg
inc
jae
mov
push
orb
or
xor
and
jae
push
adc
loope
xchg
jnp
test
loope
xchg
not
add
cmp
cmp
sbb
sbb
mov
inc
sub
dec
xchg
pop
jp
jge
push
aaa
mov
xor
scas
scas
sbb
in
fcompl
xchg
push
jne
mov
and
dec
mov
xor
xor
test
out
jl
lcall
imul
sbb
test
adc
sarb
add
sbb
sub
es
lock
push
cmp
ret
jmp
or
add
cmp
and
xor
scas
adc
jbe
sbb
decb
mov
inc
nop
insb
inc
lods
xor
lods
pop
loopne
add
sahf
fcmovnu
mov
xchg
xchg
xor
leave
rol
or
fwait
out
mov
leave
or
rorb
nop
xor
data16
jp
or
lds
fxtract
mov
mov
jns
sub
adc
jne
mov
jl
sti
jbe
pop
negl
fwait
lret
or
cmp
sbb
bnd
movsb
in
popa
dec
push
jne
mov
lcall
and
sub
int
aad
or
add
inc
lods
fs
cmp
mov
mov
mov
xorl
idivb
sub
in
in
out
jno
pop
xchg
cmp
addl
pop
sbb
lahf
xchg
jo
fists
sti
fwait
cmpsb
inc
or
jbe
rcrl
cmp
loope
imul
xor
popa
ljmp
clc
mov
jecxz
ljmp
sbb
repz
std
stos
in
and
adc
push
sbbb
xchg
mov
test
sbb
xchg
outsl
sub
cltd
sbb
mov
mov
pop
cs
mov
jl
je
mov
mov
push
adc
in
std
lock
pop
push
sti
xchg
push
sub
stc
jge
jae
lret
loopne
out
pop
xchg
shll
mov
xlat
mov
cmp
out
and
inc
pop
aad
popa
and
cmp
mov
fdivs
or
inc
xchg
in
movsb
dec
cli
cmp
mov
cmp
je
addr16
inc
call
cmp
push
cli
push
notb
stos
mov
insb
push
test
nop
sub
test
cld
or
adc
das
int
stos
add
inc
cwtl
mov
std
repnz
adc
idivl
sub
xchg
insb
xchg
hlt
or
jmp
addb
dec
jae
daa
dec
aam
sub
push
pusha
adc
testl
add
rclb
cmp
pop
push
out
outsl
pop
pop
repz
mov
scas
lds
or
fcompp
jl
std
jecxz
and
data16
and
arpl
out
mov
sti
xor
or
leave
xlat
push
jmp
cmp
cs
push
jmp
dec
outsl
xor
dec
mov
jge
xor
or
cmpsl
ficompl
je
hlt
rcrb
cmp
pop
jmp
sahf
xchg
scas
repnz
mov
jb
stc
sbb
clc
jno
test
cmp
add
cltd
cmc
pop
dec
pop
mov
addb
add
scas
push
sub
outsl
xchg
sbb
pop
pop
jbe
or
or
xchg
jne
and
mov
xchg
bnd
pushf
push
xlat
jg
or
cmp
cwtl
movsl
je
jecxz
mov
aas
cmc
loope
ret
push
push
sahf
and
sub
jno
mov
push
scas
pop
call
lea
mov
jbe
adc
fdivp
mov
and
cwtl
ret
sbb
and
sbb
hlt
xlat
fwait
shl
adc
popa
mov
stc
sub
dec
adcb
jne
test
adc
mov
out
lahf
test
divl
subl
ss
lcall
int
cmc
mov
push
push
out
loop
jnp
pop
inc
cs
jl
mov
nop
cs
mov
xchg
push
xchg
mov
notb
dec
jmp
sbb
mov
jmp
or
push
cwtl
cmc
xchg
mov
movsl
or
xchg
push
movsl
insb
inc
aad
jl
dec
inc
or
mov
and
hlt
or
sub
xlat
inc
cmp
or
mov
mov
xchg
call
lds
inc
jae
mov
mov
repz
movb
xor
lret
out
stc
adc
sbb
add
test
ja
xchg
cli
lods
and
pop
mov
test
add
clc
jns
push
mov
in
xor
jns
test
addl
imul
add
xor
enter
test
cmp
ret
movsb
mov
jbe
sahf
hlt
dec
cmpsl
dec
sbb
les
jle
push
loopne
fnsave
daa
paddw
imul
xchg
cmp
js
mov
xchg
inc
stos
pop
push
xchg
mov
sbb
out
lret
adc
sti
cltd
daa
or
push
mov
negb
xchg
cmp
jmp
out
aaa
push
xchg
mov
xor
jecxz
add
or
lret
pop
adc
loopne
push
xor
insl
jne
pop
es
outsl
cltd
cmpsb
pop
pop
mov
xchg
icebp
sar
filds
mov
ljmp
jle
pop
cmpb
jp
inc
adc
sbb
insb
xor
xor
lods
xor
pop
inc
popa
incb
adc
and
sbb
add
add
ret
push
cmp
daa
xchg
push
push
insb
popf
push
mov
push
popa
sahf
cmc
sub
bswap
ds
sbb
sub
xchg
and
sti
sub
sub
out
mov
leave
xchg
out
mov
xor
out
inc
sub
lods
mov
mov
into
cwtl
popf
dec
fmull
in
cmc
jl
sub
dec
out
test
dec
cmp
push
xchg
xlat
sub
fstenv
add
out
lods
jle
mov
sti
push
cmp
jg
sub
pop
xchg
cmp
icebp
or
lahf
je
and
cwtl
sbb
cmpsb
insl
mov
push
or
jns
push
pop
push
mov
and
add
and
push
push
cli
scas
dec
sbb
and
leave
pusha
jns
inc
out
stc
dec
ljmp
add
out
mov
pop
mov
int3
jae
lock
add
xchg
jmp
lds
jno
sbb
cmp
pop
fiaddl
adc
sahf
dec
ret
xor
mov
in
dec
neg
cmp
and
sub
les
xchg
lret
cli
mov
sub
out
or
xlat
pop
xchg
ds
ror
xchg
inc
test
mov
lods
jle
inc
ljmp
stc
add
sub
popa
adc
adc
sub
imul
jns
xchg
data16
lods
xchg
dec
sub
fstpt
xor
cs
ss
jo
mov
rcrl
vpmovsxbd
mov
daa
jmp
les
lret
aam
jl
sub
push
mov
pop
out
push
adc
clc
rorb
fsubr
out
cmc
mov
leave
addr16
bnd
lods
jl
cmp
xor
xor
add
repz
push
jb
cld
movsl
data16
mov
and
push
jnp
pop
inc
ss
pop
insl
fisttpl
cmpsb
jp
in
sub
into
jg
dec
adc
lahf
or
xchg
shl
xor
mov
pop
sbb
fimull
fs
sbb
sbb
mov
mov
jae
jle
or
add
inc
adc
inc
shll
push
pushf
dec
cmc
push
je
ret
mov
repz
fisttpll
inc
cmpsb
test
popa
xchg
xchg
lock
mov
add
or
aas
adc
sbb
outsl
dec
les
packssdw
jb
fwait
pop
outsb
fmull
inc
nop
or
idivb
jbe
call
sub
mov
jmp
cli
jl
scas
mov
mov
popf
mov
fdivs
test
repz
popa
loop
and
push
out
xor
ret
jl
dec
push
mov
or
fdivl
sbb
loope
add
jmp
dec
sbb
push
push
jns
mov
xor
mov
adc
mov
and
jns
cwtl
jmp
loope
sbb
gs
adc
cmpsb
sarb
jp
les
sub
jo
into
or
pop
aam
loope
imul
aad
or
scas
cwtl
addr16
and
ljmp
vandnps
es
adc
pop
mov
cld
rcl
ret
add
icebp
bound
mov
clc
movsl
ds
push
lods
sub
cld
jno
pop
inc
lahf
mov
pop
and
int
jge
xor
in
xor
xchg
jg
cwtl
aas
sbb
into
and
mov
xchg
pop
mov
idiv
in
xor
lds
add
arpl
inc
inc
nop
push
in
hlt
int
mov
xor
mov
sub
pop
mov
xor
dec
push
pop
jnp
bound
out
xor
into
adc
mov
or
dec
cmp
call
or
pop
fwait
ret
loope
add
fcmovbe
mov
in
jp
jl
push
push
repz
or
fldl
insb
jns
arpl
push
arpl
sbb
fnstenv
shll
push
repz
pop
pop
out
xlat
jmp
sbb
out
mov
ret
rcrb
mov
shr
mov
xchg
add
iret
pushf
insb
xor
jge
jmp
jl
jmp
inc
aam
cld
leave
es
sub
push
and
xor
lret
sbb
arpl
or
pop
xchg
out
xchg
stos
ja
hlt
dec
add
pop
lds
pop
std
pushf
sub
js
mov
adc
mov
imul
cmc
push
jno
or
xor
and
adc
pop
in
out
lret
pop
xchg
cmp
jae,pt
add
addr16
je
sub
ja
ret
xor
in
adc
xorl
mov
test
roll
pop
xchg
lock
ret
mov
sbb
push
sarb
add
xor
jo
testb
or
rclb
add
dec
mov
int3
fwait
jno
and
call
fbld
push
sbb
xchg
les
add
mov
xchg
mov
push
push
cmp
push
enter
push
popf
je
or
rcrl
and
arpl
je
dec
dec
sbb
or
mov
xor
lods
inc
shlb
jmp
movsb
jp
mov
dec
cmp
fwait
or
pop
outsb
mov
add
cmp
shll
lea
pushf
push
jb
push
xlat
or
bound
jle
mov
add
sub
popa
push
or
fbstp
lahf
add
sub
or
jecxz
mov
add
mov
fdivs
sub
mov
repz
fxch
mov
adc
in
sbb
sub
dec
jmp
clc
or
mov
fcmove
mov
cmp
xor
out
out
inc
dec
scas
jb
lds
xor
inc
push
jg
inc
cmpsb
stc
or
sub
loopne
enter
das
mov
data16
and
fdiv
cmp
add
outsb
adc
cmpb
clc
adc
pop
pop
mov
shll
add
xor
aam
sub
scas
cmove
inc
xor
jg
mov
scas
push
mov
inc
adc
fiaddl
fldl
fs
push
xchg
rcrl
mov
fnstenv
ja
rcr
ret
mov
popa
xor
mov
jmp
lock
sub
dec
mov
pmaxub
out
lods
pop
pop
aam
pop
mov
adc
mov
iret
jno
outsl
movl
pushf
adc
xchg
add
mov
orl
dec
cmp
gs
repz
inc
xchg
mov
scas
es
jno
xchg
inc
fwait
push
daa
mov
fistl
lods
mov
fs
pushf
xchg
decb
or
ffreep
daa
pop
jbe
movl
xchg
imul
dec
mov
inc
ss
out
pop
or
push
push
push
adc
stos
jbe
jnp
sti
and
out
lahf
jge
outsb
xchg
pop
push
hlt
mov
call
mov
xchg
push
outsl
inc
scas
xchg
lret
push
int
phsubw
xchg
add
loop
stos
pushf
jmp
push
jg
loop
mov
popa
pop
repnz
sets
jb
sbb
push
test
cmp
in
fdivrl
fildll
xchg
lds
ds
iret
push
dec
jae
sar
sarl
outsl
add
stos
ljmp
sbb
aas
sub
add
xchg
hlt
mov
xchg
xor
jo
adc
lods
pop
mov
and
iret
inc
ljmp
lret
fbstp
push
test
fidivl
xchg
cs
out
out
out
sbb
call
out
fwait
out
cmp
push
xor
pop
fstps
cli
sub
gs
xchg
in
icebp
and
xchg
xchg
pop
and
cltd
cmp
cld
xor
xor
mov
pop
push
mov
inc
push
ficoms
cltd
cmp
mov
pop
mov
xor
inc
xchg
and
or
add
roll
add
jnp
push
icebp
pop
loop
mov
sti
cld
xchg
xor
rclb
push
hlt
iret
xchg
and
or
maskmovq
and
or
rolb
mov
inc
or
in
cmp
sarb
loopne
loop
jmp
popa
mov
es
stc
push
into
pop
lock
mov
outsl
cmp
and
test
sahf
dec
push
xor
lea
pusha
add
int
dec
in
imul
pop
pop
mov
test
fstl
lods
dec
push
imull
rcrl
xor
lahf
or
sbb
dec
inc
movb
arpl
js
jecxz
mov
mov
push
mov
jno
aam
dec
sub
pop
int
int3
aas
push
mov
ret
pop
sub
data16
aam
push
mov
cs
push
aad
ja
mov
in
repz
fnstenv
imul
mov
test
sbb
es
jae
jo
mov
imul
repnz
jmp
mov
xchg
fwait
sub
mov
shl
test
out
push
cmp
push
lods
popa
dec
xchg
mov
bound
lock
stc
and
arpl
push
sub
pop
xor
int
std
xor
stc
xor
mov
lcall
jno
or
daa
sub
ja
cmpsl
push
subl
xchg
inc
sbb
jp
add
mov
lock
push
xchg
ja
mov
test
in
cs
cli
sub
repnz
inc
inc
addr16
sbb
icebp
pop
jne
mov
les
push
jo
out
inc
out
inc
arpl
adc
sub
mov
or
inc
out
pop
cwtl
std
jmp
xchg
xchg
insl
stos
sbb
icebp
lock
pop
mov
pop
mov
pop
scas
jp
dec
xchg
scas
xchg
mov
dec
addr16
fiaddl
lock
jns
mov
test
xchg
fdivl
in
arpl
dec
jne
mov
sub
adc
in
popf
pop
push
mov
lret
cmp
jmp
inc
cmp
lret
aaa
sub
fmuls
rcr
mov
xor
xorl
scas
push
popa
js
pushf
cmpsb
leave
out
or
stos
enter
push
hlt
and
pop
xor
cltd
mov
inc
test
popf
push
mov
xor
jmp
push
lahf
addr16
sub
repnz
ret
ds
jmp
int
movsl
add
popf
cltd
aaa
dec
inc
mov
inc
jb
xor
add
xchg
xor
dec
jb
xor
dec
fwait
jg
dec
cmp
add
fildl
mov
mov
test
add
je
repnz
mov
xor
dec
mov
loop
in
divb
int
dec
enter
sbb
add
cmp
add
cmp
mov
mov
xlat
sub
hlt
inc
cmp
sub
dec
in
pop
xor
cmp
cmpsl
int
sbb
sub
mov
dec
pusha
and
stos
sub
nop
xor
or
mov
test
imul
into
data16
loop
jmp
rcll
bound
call
std
mov
shrb
cwtl
lock
outsl
stos
cwtl
jge
jbe
adc
mov
and
into
cmc
dec
fnstenv
and
test
and
insl
sahf
aam
mov
dec
stos
sub
sahf
cmpl
sub
sub
or
pop
add
push
pushf
scas
repz
and
cmp
data16
mov
mov
and
push
fisubrs
mov
xor
mov
cmp
arpl
pop
pop
imul
jge
sub
jno
jne
inc
pop
sbb
test
cmpsl
icebp
movsb
sbb
int
lea
jecxz
aad
push
setp
roll
scas
or
or
mov
sbb
popa
shr
push
repnz
and
jp
or
negl
mov
divl
pop
mov
fucom
clc
sbb
stos
sbb
mov
rcll
pushf
adcb
sub
stos
ret
aaa
jmp
adc
xchg
aas
icebp
jb
dec
jge
sbb
adc
add
stc
mov
jbe
ss
inc
out
lcall
in
and
jnp
cmp
test
xchg
enter
cmp
dec
mov
ret
lahf
gs
dec
sbb
jmp
orl
sbb
je
bound
dec
leave
push
adc
dec
imulb
call
ret
sbb
imul
cmp
out
pop
daa
insb
stos
in
sbb
push
in
lahf
out
outsl
sbb
push
cmpsb
int
cmpsl
sub
pop
push
inc
sahf
cmp
fadd
sub
mov
pop
xchg
xchg
leave
adc
movsl
jae
or
imul
rcr
mov
cld
mov
or
add
clc
lods
loope
or
mov
mov
inc
mov
stc
xchg
push
cmp
js
mov
push
sbb
jp
rcrl
mov
popl
pop
mov
inc
jbe
test
stos
popa
das
xor
inc
enter
aad
mov
jb
stc
popf
fsts
pop
adc
mov
xchg
test
or
scas
xchg
ljmp
sbbl
jmp
aas
gs
dec
xor
lahf
jp
add
and
mov
mov
ret
sbb
xchg
inc
scas
adc
fsubs
imul
add
in
add
dec
mov
lods
sbb
cmp
ja
popf
mov
jbe
je
test
push
dec
jle
xor
sub
fisttps
cmpsl
xor
xlat
jo
out
inc
pop
adc
cwtl
scas
ror
ljmp
dec
mov
int
cwtl
lods
call
add
fdivs
mov
cmp
insb
push
fnstsw
pop
dec
mov
ss
cmp
pop
jns
test
pop
les
pop
sbb
jp
inc
inc
js
mov
add
adc
out
cmp
mov
inc
call
dec
cmp
je
scas
pop
cmp
inc
stc
mov
arpl
mov
les
stc
in
sbb
mov
stos
out
xor
sub
aaa
cs
cmp
movsl
test
inc
inc
push
aad
cmp
cmpsl
pop
into
ret
test
hlt
sub
xchg
lods
aaa
pop
adc
dec
pushf
clc
dec
sbb
cmp
fsubrs
pop
pop
and
in
icebp
cmp
sbb
or
adc
jo
cmp
sub
mov
fisubrl
outsl
pushf
jge
stos
lgs
fs
pop
clc
mov
aaa
les
adc
stc
popa
push
andl
out
push
and
stc
push
pop
outsl
or
outsl
into
test
cmp
push
fmul
adc
add
push
sbb
cmp
mov
fimull
push
pop
dec
ret
movsb
cltd
loope
out
cltd
cmp
dec
lret
jo
cld
xor
push
push
stos
imul
xchg
aas
enter
outsb
data16
dec
push
imul
push
add
es
fdivp
cmpl
sub
imul
inc
cmc
push
adcl
xchg
pop
pop
pop
ss
dec
sub
pusha
inc
rcll
lret
shll
popa
inc
push
mov
ja
into
dec
sbb
ja
lret
lret
sbb
sbb
jle
push
lahf
push
inc
idivb
pushf
push
push
add
push
je
adc
mov
addb
adc
cmc
jle
aam
js
pop
daa
outsl
xchg
fistl
mov
loop
cmp
add
dec
cmp
or
xor
pushf
xor
jae
iret
clc
inc
fiadds
push
pop
sub
and
cltd
icebp
or
sub
push
xor
aaa
sti
pop
jbe
push
pop
mov
lcall
in
fs
sbb
outsb
ja
xchg
pop
inc
test
jle
cld
adc
push
iret
mov
inc
lock
push
inc
mov
in
sub
stc
scas
dec
inc
or
arpl
sub
cmp
adc
orb
out
sbb
push
pop
daa
cmp
and
dec
lret
inc
add
cli
imul
mov
sbb
enter
cmp
test
xchg
repnz
das
out
int
cmp
ja
insl
fstl
mov
jl
and
push
insl
gs
jmp
cmc
stos
or
rcrl
movsb
sbbb
lcall
and
rolb
and
fistpl
jnp
lods
add
xor
lret
movsb
in
outsl
dec
test
mov
fs
xchg
xlat
and
insb
imul
dec
pop
addr16
cmpsb
outsl
out
lods
mov
fiadds
dec
fdivs
cmp
aas
mull
xchg
cmp
mov
add
cmpsl
sub
pop
loope
mov
cmp
lods
leave
lea
mov
clc
jbe
outsb
xchg
loop
push
xchg
pop
mov
inc
lahf
jbe
pop
ret
lea
push
pop
bound
push
fmull
fcoms
xor
xchg
mov
test
iret
mov
clc
fldpi
push
pop
les
ss
pcmpeqd
xchg
jp
sub
sar
inc
cvtps2pi
mov
insb
mov
imul
shrl
cltd
pop
inc
dec
xor
push
roll
stos
pusha
pop
dec
sub
adc
jmp
push
imul
stc
scas
sub
movsb
xchg
or
mov
mov
jge
mov
inc
loopne
cld
je
or
lock
and
jmp
xchg
loop
aam
sahf
cld
mov
data16
mov
lea
loope
fistl
sahf
and
mov
jmp
mov
jge
push
push
ss
fs
ljmp
fnstsw
sbb
mov
add
pop
jecxz
push
inc
add
rolb
ja
add
push
inc
stos
shrl
gs
mov
lock
pop
mov
lret
outsl
std
cmp
pop
and
jl
cmp
andb
cmc
sbb
sti
cmc
fisubrs
sub
add
test
cmp
mov
or
jle
sahf
xchg
ret
xchg
das
aas
cmp
dec
mov
xchg
jmp
inc
push
mov
cmpsl
div
pop
jge
notb
fcoms
leave
adc
imul
pop
lds
add
out
lahf
pop
push
sahf
fs
dec
inc
popa
imul
cltd
nop
and
stc
sub
cmp
aad
cmc
loop
outsl
cmpsb
jp
in
pop
pop
in
mov
mov
mov
call
xchg
ret
int3
inc
adc
mov
fisubrl
andb
sub
sbb
add
in
in
pop
cmp
leave
mov
cld
push
enter
aas
push
dec
repz
mov
arpl
sub
and
mov
mov
push
rolb
int
xchg
mov
push
xor
hlt
mov
dec
call
test
fs
lret
imul
mov
mov
add
cli
sarb
adc
xlat
repz
or
inc
or
xadd
popf
lret
push
mov
inc
rcrl
push
test
xchg
push
sub
addr16
out
xchg
pop
add
xchg
scas
in
adc
add
push
dec
push
add
lret
xchg
add
dec
subl
mov
or
lock
outsl
pusha
inc
rorl
xchg
dec
jne
lahf
push
in
dec
fwait
add
lret
lods
imul
lahf
sarb
mov
xlat
test
out
jae
or
lahf
mov
add
mov
outsl
scas
push
or
mov
shll
dec
mov
dec
mov
mov
daa
gs
push
test
loop
aaa
sbb
cld
push
in
gs
jge
repnz
push
loopne
lcall
dec
and
cld
es
cld
pop
popa
push
sub
lods
ljmp
inc
movsb
imul
pop
inc
inc
lret
inc
and
and
stos
xchg
aam
sti
repz
jmp
mov
int
xchg
insb
insb
jl
push
repz
add
shlb
push
adc
xchg
dec
stos
mov
jmp
insl
jl
outsl
in
and
je
leave
aad
jbe
clc
faddp
shrb
mov
scas
mov
and
cwtl
lea
inc
xor
jmp
nop
xchg
mov
cmp
cli
xchg
and
aam
sbb
cld
insb
mov
cmp
push
fisubrs
lock
das
jg
inc
aam
dec
sub
outsb
or
addb
pop
cwtl
sbb
lret
inc
jmp
andb
jae
stos
or
xchg
xor
inc
dec
mov
lods
add
dec
mov
cbtw
push
cmp
mulb
push
mov
ret
aad
jmp
aas
xchg
out
cmp
outsl
les
ror
in
cltd
xor
dec
jnp
cmpsl
xchg
mov
mul
mov
inc
mov
sub
sub
ljmp
movsb
iret
pop
fildll
adc
inc
icebp
shll
cmp
xchg
mov
call
inc
lods
sbb
adc
cmpsl
imul
push
and
push
ficomps
cmc
or
adc
aad
push
imul
std
data16
mov
lea
inc
mov
outsl
adc
int
xor
cmp
xchg
pop
cmp
adc
lret
cmc
test
cs
js
add
lods
gs
nop
popf
std
imul
mov
add
pop
loope
out
loop
xor
adc
cmp
lahf
cmpb
push
push
jp
mov
dec
test
add
fbld
clc
shlb
dec
sub
pop
adc
cmpl
icebp
jmp
adc
les
jmp
and
sahf
incl
mov
outsl
lret
sbb
popa
sub
and
std
mov
and
leave
inc
add
maskmovq
notl
loope
fists
push
cmc
cmp
lret
repnz
cld
pop
mov
test
imul
jo
xchg
sub
cli
pop
xchg
xor
pop
cmp
lds
adc
cmc
add
shr
sbb
mov
xor
fs
mov
jmp
xchg
stc
or
out
scas
jge
cmpsl
adc
sbb
push
mov
orb
xor
inc
pusha
gs
cld
das
subl
dec
sub
shrb
out
jne
mov
xchg
lea
ret
mov
pop
movsl
xor
pop
cmp
pop
push
mov
and
add
es
sub
push
mov
push
pop
or
rolb
pop
ret
sub
xchg
cmc
cld
movl
test
jbe
enter
popf
mov
push
push
imul
jne
sub
mov
jnp
jmp
add
jle
arpl
jge
cmp
pop
jo
int
mov
fs
lds
dec
cmpsb
mov
std
sti
and
mov
std
repnz
lret
sub
pop
fisttpl
mov
cmp
push
int
inc
leave
ds
push
xchg
out
mov
xor
fidivl
loopne
cli
aad
cmp
fstpt
fdivrs
cmpl
rcll
sub
pop
lods
imul
jno
cmpsb
inc
inc
in
push
arpl
cmp
mov
in
orl
ljmp
jp
mov
imul
repz
and
mov
jecxz
hlt
mov
dec
push
xchg
cwtl
popa
int
add
push
mov
jbe
push
or
cmp
dec
push
leave
test
fucomi
stos
cs
adc
cmp
xor
xchg
out
arpl
dec
stc
mov
into
pop
xor
adc
orb
sub
xchg
shlb
icebp
ja
sub
repnz
mov
mov
lret
sbb
xchg
popf
mov
lret
test
je
jp
push
sbb
sti
push
lsl
push
repz
stos
arpl
pusha
pop
repnz
nop
nop
cmp
cltd
sub
jns
fdivrl
mov
fildl
pop
push
sub
ds
inc
mov
add
clc
stos
cmpsb
cmpsl
or
pop
aas
ss
pop
xlat
mov
inc
adc
rcrb
fs
aaa
pop
lea
xchg
fmul
pop
sbb
inc
cmp
mov
inc
cmpsl
in
in
sbb
test
xor
int
sti
mov
jge
loop
push
push
and
lds
outsb
imulb
mov
mov
xchg
fs
in
addl
cmp
out
jno
mov
jl
or
cmp
pop
add
pop
aas
cli
int
jno
lds
rep
xchg
xchg
jo
add
pop
lds
test
fildl
neg
shlb
fmull
lcall
mov
mov
imul
adc
sti
mov
sub
addr16
push
pop
cmp
dec
fldl
and
bound
sub
jae
daa
xchg
fs
push
lods
lret
mov
adc
sti
inc
jl
enter
js
popa
inc
rcrl
dec
mov
add
fsubr
lahf
pop
ficompl
cmp
xor
jae
pop
inc
shrb
inc
push
ljmp
orl
cmp
cmp
icebp
lcall
das
and
pop
cltd
iret
adc
repz
rorb
insl
out
or
ds
inc
push
sti
jbe
mov
mov
jae
lea
mov
mov
cmpl
jg
cld
shll
pop
testl
adc
aam
imul
xchg
popf
idivb
adc
arpl
push
shlb
xchg
or
insb
sub
orl
sti
sbb
cmpsb
xor
ret
or
sub
stos
inc
test
ror
rorl
std
scas
mov
jns
ljmp
or
or
or
int3
or
jle
xor
pop
add
push
jbe
cs
pop
cltd
push
jno
lret
mov
mov
sub
xor
les
and
bound
cltd
icebp
cmp
mov
cld
insl
sarl
push
fistpl
call
scas
add
dec
shlb
or
out
sbb
sub
daa
cmpsl
jge
es
push
pop
fadds
stos
movsb
or
mov
push
dec
push
cmpsl
adc
xlat
sub
in
push
jae
dec
js
xchg
hlt
adc
dec
mov
outsb
inc
jl
dec
mov
sbb
mov
jae
jbe
and
xchg
shrl
das
push
adc
cmp
das
xchg
addr16
ljmp
mov
stos
pusha
push
mov
andl
inc
std
add
jl
fs
sub
andb
minps
mov
pop
test
cld
push
sarb
mov
add
mov
enter
nop
dec
push
js
loope
dec
add
pop
mov
mov
inc
xchg
adc
je
mov
adc
xchg
xchg
in
sub
in
adc
inc
sub
fisttpll
xchg
cmpsl
inc
sub
daa
jb
mov
enter
arpl
adc
or
scas
ja
inc
pop
fcmove
mov
cmp
mov
out
fcoml
ja
xor
pop
push
sbb
xchg
scas
ret
insl
insl
or
cmpsb
pop
rcll
mov
ja
push
xchg
jl
jl
lcall
imul
mov
xor
push
or
mov
into
add
lret
das
dec
icebp
rorb
ljmp
in
add
cmp
sbb
jno
and
pushf
mov
cmp
insb
push
dec
mov
dec
sbb
loop
sarb
push
lret
add
sbbl
pop
pop
xlat
fsubrl
adc
loopne
shrb
iret
or
mov
cmp
mov
cmp
mov
sub
pop
scas
fimuls
sub
dec
adc
jnp
aas
push
pushf
cmp
adc
jno
iret
roll
leave
ret
sbb
icebp
fiadds
mov
out
popa
sbb
into
or
movsl
push
hlt
outsl
in
movsl
ficompl
cli
loopne
sbb
or
sbbb
test
push
mov
leave
add
pop
jne
iret
and
dec
jmp
scas
and
pop
insl
ret
mov
orl
flds
jno
mov
mov
lds
push
jb
xchg
cmpsb
shll
ret
jecxz,pt
sub
lahf
aaa
fcom
repz
push
sti
mov
xor
xchg
push
shrl
adc
xlat
repz
inc
inc
and
push
push
aad
daa
bound
fisubrl
mov
inc
xchg
data16
out
repnz
sahf
rorl
lods
iret
stos
pushl
push
test
push
adc
test
ljmp
adcl
mov
js
xchg
jnp
adc
or
mov
les
mov
mov
mov
jns
cmpsb
aad
pop
js
iret
push
push
or
hlt
test
jb
movsl
out
jns
mov
mov
loop
shr
sarb
stos
mov
push
mov
scas
add
sub
add
cmp
jge
lds
leave
jb
sub
mov
stos
cmp
adc
pop
cmp
xchg
orb
nop
push
fidivrl
popa
mov
lods
inc
leave
roll
jecxz
and
jmp
inc
cmp
scas
fisubl
xor
add
or
das
arpl
in
adc
adc
adc
mov
clc
xor
pop
stos
paddb
xor
nop
adc
les
cmpsl
fs
les
js
pop
mov
mov
shrl
or
inc
popf
mov
push
js
in
mov
pop
movsl
out
inc
int3
call
pop
dec
adc
popf
lahf
lcall
sarb
cmpb
or
push
into
cmp
add
lret
loop
jle
add
int
notl
gs
in
xor
mov
lock
mov
in
and
mov
push
mov
in
les
les
add
xchg
pop
and
sbb
divb
xlat
es
cltd
mov
sub
xchg
mov
jno
adc
dec
ljmp
and
xchg
data16
call
mov
int3
xchg
imul
pop
ret
movsl
mov
insb
test
ds
jp
inc
sbb
aad
pop
adc
inc
lock
std
nop
add
push
push
and
mov
dec
inc
xchg
push
fstpt
les
shll
mov
enter
icebp
iret
pop
shll
cmpsl
cmp
mov
insl
inc
mov
fildll
nop
mov
leave
popa
mov
sti
inc
add
or
mov
mov
cmp
xchg
addr16
xchg
pop
xor
lods
xchg
test
ret
out
and
int3
lds
jne
int
daa
mov
push
pop
jecxz
sbb
inc
inc
adc
fistps
and
inc
bound
jle
cmp
sub
mov
or
mov
adc
je
or
lcall
and
pop
xchg
je
dec
outsb
out
lahf
leave
fsubrl
lret
lret
inc
icebp
push
or
jle
pop
inc
lock
add
scas
or
cwtl
add
jl
or
andb
push
mov
pushf
mov
mov
test
ret
aas
and
sbb
shlb
fmuls
xor
stos
cmp
xor
sub
mov
and
rorb
cmp
loop
repz
imul
xlat
mov
push
clc
cmp
push
jne
sti
inc
ret
je
mov
test
pop
cmp
mov
mov
push
pushf
int
and
jne
or
aaa
stos
jbe
mov
xchg
pop
imul
sbb
adc
mov
xor
call
loope
ss
iret
sub
mov
inc
mov
mov
push
xchg
mov
mov
push
lret
add
imul
xchg
pop
xchg
ficoms
dec
cmpsb
push
jg
pop
outsl
ret
cmp
add
pushf
fldl
lods
movsl
cmp
adc
dec
jge
push
fstl
pushf
fwait
shld
jmp
sbb
lea
inc
push
incl
popf
dec
mov
xlat
in
jge
xchg
rcl
aaa
lcall
ds
push
cwtl
hlt
push
cld
or
jle
leave
push
out
xlat
add
lret
xor
mov
xchg
add
lods
xchg
ss
adc
popf
sahf
inc
jl
cli
sti
jno
cmpsb
adc
and
loop
push
inc
inc
dec
lods
mov
xor
jns
daa
shll
enter
jmp
mov
fucom
pop
scas
imul
jecxz
nop
ds
mov
test
insl
mov
push
addr16
lret
aam
outsl
lds
inc
cwtl
sbb
js
adc
pop
decl
mov
aad
xchg
popa
fldcw
dec
mov
mov
faddp
popf
xor
fcompl
je
cmp
sbb
xor
push
nop
mov
xor
adc
cmc
je
jnp
cmp
mov
jns
adc
add
int
sbb
insl
dec
shl
std
int3
sbb
fistpl
rolb
gs
sub
mov
das
mov
jno
inc
fcmovu
push
sbb
aas
loopne
loop
mov
jno
xor
or
sub
clc
aaa
sbb
adc
ss
push
lret
cmc
jne
push
inc
stos
pop
pop
outsl
pop
test
and
addb
xchg
adc
mov
vmaxss
ss
jp
mov
es
xor
mov
inc
lea
push
cmp
pop
jmp
and
mov
or
decb
mov
pusha
lret
jmp
ret
push
scas
adc
lods
fldl
in
std
mov
decl
sub
mov
test
sbbb
or
pop
or
pop
inc
ljmp
gs
jle
pop
sahf
dec
je
cmp
pop
ds
pop
jb
lret
add
lret
or
sbb
mov
xlat
adc
mov
in
mov
int3
cmp
sarb
and
test
push
push
xchg
lahf
mov
sbb
push
jl
push
add
or
add
lcall
push
aas
sub
mov
sub
adc
loop
pop
mov
xor
push
pop
or
inc
push
mov
adc
mov
pop
mov
push
gs
inc
jo
outsb
mov
std
jmp
sub
pusha
push
int
mov
adc
mov
mov
xor
or
orb
int3
pushf
adc
cmp
cmp
stos
sub
in
xor
or
sbb
xchg
jnp
push
pusha
lcall
ljmp
adc
popf
adc
xchg
imul
in
mov
mov
popf
cmp
insl
cwtl
pop
jb
ss
sahf
out
and
in
xor
lea
pop
fisubrs
lcall
mov
sbb
or
lcall
push
adc
jg
repz
or
sbb
orb
pop
push
or
je
aad
mov
flds
adc
stos
jnp
inc
incb
sbb
aaa
dec
dec
outsl
test
or
cmp
sub
hlt
xchg
int3
dec
jle
and
hlt
out
xorl
push
mov
pop
outsb
sub
sbb
mov
fimull
push
sbb
enter
xchg
push
bound
and
jg
stc
push
mov
add
test
inc
add
outsb
xchg
fdivrs
mov
jge
cmpxchg
lea
mov
idivl
out
jbe
adc
cmpl
jge
sbb
sub
scas
cmp
jle
xchg
test
imul
cmpsb
cmp
xchg
cmpsb
adc
fsubs
adc
mov
push
arpl
mov
ficoms
sbb
inc
cmpsb
cmp
inc
xor
js
xor
or
ror
orb
sbb
cmp
cmp
stos
je
ljmp
inc
jo
sbbl
xor
mov
inc
daa
in
jge
mov
ret
imul
mov
fldt
inc
rcrl
insb
lret
sub
inc
gs
outsb
pop
leave
loope
adc
jb
push
popf
jl
xchg
gs
repnz
inc
xchg
scas
stc
or
ss
jecxz
loop
out
daa
dec
mov
jg
lods
mov
and
imul
fstl
aaa
lds
in
dec
addr16
cmp
dec
xor
xor
jne
outsl
imul
pop
decl
mov
mov
pusha
jp
pop
sahf
fs
and
jno
cmp
insb
adc
sub
jo
ja
mov
jecxz
pusha
push
into
inc
cmpsl
pop
push
ljmp
shr
ss
sbb
imul
adc
xlat
in
dec
or
int3
cmp
ss
fwait
xchg
dec
aad
stc
loopne
cltd
scas
jb
pop
xorb
fildl
jne
sub
iret
sub
call
jge
mov
out
jecxz
ret
hlt
stos
lea
xchg
sub
and
loope
pop
stos
mov
inc
call
mov
push
mov
int
push
fbstp
or
in
mov
cmp
test
lock
cmpsl
jp
int3
add
out
js
imul
pop
movsl
insb
fwait
xchg
cmpsl
pushw
pop
mov
cs
enter
jns
movsb
or
daa
xor
cli
xchg
popa
inc
dec
std
lds
mov
xlat
jp
or
and
lea
and
addb
enter
pushf
mov
stos
in
addr16
cwtl
sbb
sahf
fldl
mov
es
push
jo
loope
pop
sbb
cmp
inc
add
pop
sbbb
and
mov
mov
inc
mov
pop
mov
sti
push
ficompl
jle
fs
adc
leave
xor
push
cmp
es
mov
jno,pn
addr16
add
in
ljmp
adc
jnp
sahf
movsb
mov
or
sbb
or
jae
pop
shll
pop
pop
add
lock
dec
data16
cmpsw
xchg
jb
in
lds
push
std
lods
dec
mov
je
mov
aad
or
jle
push
mov
ljmp
sarb
mov
lret
mov
movsb
mov
and
mov
sbb
adc
xor
repz
mov
gs
mov
cmpsl
sbb
cmp
mov
fwait
mov
movl
clc
rcl
dec
inc
ss
outsb
ss
cmpb
xchg
cli
popf
sub
sub
mov
into
dec
inc
fadds
xor
push
or
xchg
arpl
xchg
out
pop
aam
pop
cmp
xor
stc
inc
dec
je
or
mov
sub
out
pop
lods
xchg
sub
push
push
jno
mov
test
sub
lods
add
and
imul
xchg
outsl
adc
mov
pop
push
sbb
mov
cmpsl
js
mov
stc
pop
sub
lds
ljmp
clc
push
aam
shrl
mov
sahf
mov
add
mov
and
lcall
les
jo
inc
pop
mov
jge
jge
push
repnz
xor
cmc
fisttps
aas
shll
jle
sub
pop
shr
iret
mov
leave
cmp
adc
mov
or
addl
and
daa
mov
sar
pushf
subl
outsb
xorb
or
push
popf
test
or
inc
mov
jg
inc
cmp
mov
int
cmp
and
push
jnp
in
sbb
jnp
fisubs
xlat
inc
test
push
jg
mov
ljmp
xchg
add
mov
outsb
adc
dec
inc
sti
or
adc
dec
adc
addr16
dec
arpl
mov
arpl
cmpsl
push
lds
push
mov
stos
push
add
xlat
dec
and
xchg
arpl
fistl
mov
adc
jg
jnp
mov
das
adc
xchg
jne
push
movl
or
xor
jmp
sti
jmp
addr16
lea
cmp
sub
push
icebp
daa
enter
fldl
cmp
cli
jnp
clc
stos
lock
mov
add
adcb
mov
xor
subb
xchg
hlt
addl
fstps
push
xchg
jbe
xchg
mov
test
sti
out
xchg
mov
ltr
xchg
imul
xchg
cmpl
pushf
adc
ret
scas
pop
or
insb
jns
mov
inc
jbe
aad
and
add
xor
fbld
loopne
and
push
and
loope
inc
or
xor
scas
mov
xor
testl
jmp
repz
adcb
mov
add
adc
sbb
movsl
xchg
jo
das
shl
xchg
aad
sub
push
inc
jecxz
mov
imul
fmull
sub
mov
inc
add
enter
sarb
mov
xor
jae
lcall
fists
xchg
sahf
pop
mov
inc
lock
iret
cmp
mov
sbbl
lcall
pop
mov
adc
ja
jne
sub
inc
mov
clc
dec
lock
shll
mov
int3
sti
or
repnz
mov
add
loope
les
roll
in
ret
mov
fildll
repz
ret
jo
nop
hlt
testb
scas
push
loop
in
push
ja
out
ljmp
dec
sub
inc
xorl
xchg
movsb
adc
mov
dec
imul
dec
mov
pop
mov
mov
cmp
lods
xchg
fld1
out
xlat
and
cmp
sbb
push
mov
sub
aam
inc
std
sarb
xchg
lcall
sti
icebp
sub
enter
cmc
add
call
pop
push
sbbl
pop
mov
ficompl
xorl
aam
pusha
packsswb
std
adc
mov
repnz
rolb
test
sbb
bound
aaa
add
jmp
jecxz
dec
xchg
dec
dec
add
movsl
adc
faddp
dec
popa
push
cmpsb
test
into
fisubs
xor
xor
or
pop
pop
pushf
call
push
mov
mov
mov
jne
fisttps
xor
notb
test
sbb
xorl
mov
xchg
std
inc
stc
jecxz
or
adc
or
xchg
push
adc
mov
sub
sub
jl
mov
push
mov
iret
mov
data16
sub
shr
jne,pt
mov
mov
mov
loopne
sbb
cld
and
or
aas
cwtl
lret
ss
sub
aad
dec
loopne
sub
add
loopne
xchg
sub
and
or
aam
xor
jae
dec
mov
pop
lods
jno
fcmovne
push
dec
mov
movsb
xor
push
or
sub
es
xor
jl
cmpsl
push
sub
repz
nop
pop
inc
pushf
adc
imul
mov
insl
int3
test
mov
push
mov
xchg
rorb
mov
loopne
mov
xor
out
stos
icebp
lcall
push
adc
outsb
repnz
sbbl
repnz
leave
loopne
mov
jp
add
repnz
movsl
dec
hlt
popf
push
decl
mov
sub
push
xchg
push
pop
pop
adc
cs
pop
shl
mov
xchg
in
movsb
pop
bound
dec
sub
sub
xor
loop
jmp
adc
pop
push
arpl
decl
adc
xor
in
dec
xorb
sbb
movsl
cwtl
inc
outsl
adc
push
rcrb
rorl
jle
sbb
cmp
out
mov
and
cmp
adc
outsb
mov
sub
repnz
in
sbbb
sub
lods
push
movsl
jnp
adc
icebp
adc
add
fs
jp
ss
jmp
jmp
mov
pop
xlat
lea
and
hlt
movups
js
cwtl
ds
sbb
jnp
xchg
jge
xor
flds
pop
jns
jnp
jecxz
mov
ret
std
mov
insl
fistpl
cmp
sub
mov
dec
stc
or
adc
or
xor
repnz
fwait
sar
lret
addr16
pop
add
in
mov
out
loop
subb
stc
daa
js
and
ljmp
mov
nop
dec
testb
push
xchg
sub
scas
xlat
xchg
daa
test
pushf
gs
xor
mul
orl
bound
jg
xchg
cmp
js
lods
enter
lret
int3
xchg
fwait
mov
out
xchg
iret
insb
push
scas
fwait
movsb
and
int
fmuls
aad
pop
fnstenv
and
push
in
outsl
stos
movsb
xchg
adc
sbb
jo
lds
rcrl
lret
enter
add
jno
js
cld
cmp
xchg
cs
push
repnz
xchg
xchg
xor
cmp
add
sub
in
mov
fldl
cmp
cs
inc
mov
mov
mov
rolb
sar
repnz
dec
ficompl
cmpsb
pop
cmc
cmp
xchg
add
arpl
dec
add
insb
rclb
and
fdivr
sahf
lahf
add
sub
inc
push
out
or
fistpl
or
cmpsb
mov
and
rcrb
test
and
int3
cld
xor
hlt
mov
inc
adc
cmpsl
pop
mov
adc
cli
ds
rorb
sub
repz
movl
pusha
inc
cmc
hlt
sub
in
cmp
pushl
aad
std
sbb
or
jp
rcrl
pushf
jecxz
repnz
sahf
or
insl
sbb
mov
add
out
cmp
push
das
call
in
push
lds
fsubrs
pop
inc
pop
jp
push
mov
xchg
xor
inc
cmp
clc
adc
lret
inc
out
mov
fidivl
test
dec
testb
sbb
cmp
out
xchg
inc
test
dec
ret
movsl
mov
es
and
movsl
pop
add
dec
dec
mov
das
pop
xlat
mov
or
adc
lcall
dec
or
mov
cmp
push
divl
repnz
xchg
mov
lret
ja
push
cltd
pop
sbb
xchg
add
gs
cltd
or
sahf
into
inc
in
sahf
insl
adc
dec
or
cmp
aaa
aam
mov
mov
push
mov
jae
push
inc
es
pop
neg
loopne
frstor
ret
insb
test
dec
sbb
aam
dec
xchg
cmp
sbb
rcrb
cwtl
xchg
mov
jns
test
add
aaa
sbb
ret
js
xor
inc
and
shll
xchg
lcall
aas
inc
loopne
sahf
in
shll
js
pop
loope
jmp
cmp
iret
shl
pop
aas
ljmp
sub
cs
pop
and
das
movsl
or
rol
pusha
cmp
cmpsl
push
mov
pusha
repz
ljmp
or
in
cmp
inc
sub
cmp
adc
push
data16
pop
sbb
add
adc
sbb
lods
addr16
lahf
sub
test
cmpsl
mov
push
add
sub
or
outsb
cmc
jno
ljmp
or
imul
add
outsl
or
adc
sub
clc
loopne
ficoml
mov
or
fdivrs
mov
std
adc
lods
jno
inc
lahf
mov
lods
add
mov
sbb
jbe
movsb
shll
inc
lds
aas
fidivrs
sarb
adc
xor
mov
mov
int3
clc
mov
ret
fisubrl
addl
mov
cmp
mov
lret
popf
inc
aad
outsl
movsl
push
mov
lcall
ret
mov
cld
jmp
xor
jmp
ja
sub
and
sbb
imul
icebp
add
aam
in
xchg
push
mov
daa
pop
sub
sahf
mov
add
popf
sbb
lcall
lcall
push
jbe
cmp
dec
xchg
and
lcall
xor
cld
sar
add
add
fwait
shll
cmpb
clc
adc
in
adc
push
sahf
stos
mov
pop
fprem1
or
repnz
leave
icebp
mov
in
xchg
pop
xchg
jle
mov
adc
ret
call
adc
jbe
jp
rorl
pop
mov
cmp
test
mov
mov
xchg
out
stos
out
mov
ljmp
repnz
cmp
adc
jmp
jecxz
sbb
push
fstp
push
lods
mov
loopne
pop
mov
lods
stc
and
jmp
xor
inc
loop
and
or
bound
shrb
out
inc
xlat
xlat
pop
aas
sbb
int
inc
sub
sbb
jae
xlat
std
scas
fwait
and
inc
js
cmpl
out
cs
mov
fcomps
dec
mov
into
dec
and
push
jp
pop
push
popf
jg
out
jl
xchg
sbb
and
ret
jg
push
repz
fwait
push
xor
push
stos
leave
loop
fsubs
incl
add
inc
jecxz
sbb
dec
andb
mov
or
jns
lods
xchg
xor
cmp
xor
xor
imul
scas
push
mov
cmpsb
mov
imul
lret
pop
pop
jle
xchg
sub
adc
mov
inc
mov
add
imul
repz
or
iret
add
mov
sbbl
scas
cmp
in
divb
movsl
mov
popa
scas
xorl
xchg
adc
scas
frstor
loope
lock
orl
and
roll
dec
je
lods
sarb
in
scas
jb
push
and
xlat
cmp
std
stos
xor
daa
and
repnz
xchg
pop
jecxz
outsl
inc
mov
icebp
sub
fcmovnu
dec
ret
cmp
into
clc
sbb
shll
xor
xorl
roll
in
pop
lret
mov
rol
in
jb
data16
pushf
fs
xchg
fidivl
and
outsb
lret
aaa
cmpsb
je
fsub
sti
fldt
daa
ret
adc
popa
xchg
out
outsb
push
xchg
lods
mov
clc
cli
stos
push
fmuls
dec
and
cld
aad
and
mov
mov
test
pushf
movsl
push
hlt
clc
pextrw
fwait
loope
jnp
jne
mov
fiadds
fst
add
xchg
rorl
jmp
mov
icebp
mov
adc
cmp
in
jecxz
rcll
aad
int
and
dec
mov
ds
ja
or
push
push
shrl
or
cmp
fisubrl
sahf
out
loopne
add
ss
xor
notl
outsb
out
popa
fs
or
rol
lcall
xor
mov
bound
out
adc
xor
sbb
cmpsb
dec
jmp
adc
std
pop
stc
jg
mov
jmp
aad
fcoms
push
jno
xor
xchg
xlat
ja
push
push
pop
mov
adc
sbbl
daa
add
fwait
icebp
pusha
lods
sub
cmc
dec
cwtl
jp
ret
adc
hlt
fmull
popa
int3
test
dec
lcall
mov
cmp
pop
es
mov
jne
mov
mov
pop
insb
stc
cmc
data16
sahf
jno
popa
mov
adcb
test
repz
sbb
mov
rorb
mov
fldt
sbb
dec
push
inc
pop
inc
xchg
sbb
fisttpl
xor
push
enter
push
cwtl
sti
add
icebp
cmp
shl
adc
nop
out
pop
jno
jno
mov
mov
clc
sbb
ficoml
repz
dec
jbe
push
xor
and
loopne
xchg
push
cmc
out
mov
sub
lock
fwait
mov
fdivrs
xor
inc
stos
pop
push
or
hlt
xchg
aad
add
in
aad
xchg
mov
ret
cmp
xchg
pusha
xchg
lock
js
les
push
xor
dec
pop
scas
jmp
and
and
and
inc
int
fxch
pop
mov
and
inc
in
negb
and
pop
sub
mov
or
imul
add
inc
adc
cmpsb
jae
pusha
hlt
adc
mov
and
loop
lods
rcr
inc
imul
push
xchg
outsb
mov
cmc
push
push
cmp
out
lahf
inc
cmp
pop
or
lds
loop
into
xchg
push
aas
xchg
inc
test
sbb
xor
sub
addr16
jle
mov
es
scas
sti
mov
stc
sub
and
add
lret
testl
movb
mov
pop
mov
inc
lea
dec
mov
arpl
cld
repnz
daa
mulb
xchg
inc
jnp
sbb
fsubl
nop
mov
popa
out
mov
mov
xchg
scas
lcall
jne
mov
insl
imul
insl
cld
sub
out
int
jge
push
stos
ret
das
inc
sbb
mov
icebp
and
gs
gs
cmp
andl
es
pusha
fdivl
sub
cmc
pusha
loope
repnz
mov
push
mov
aam
pop
ret
aaa
dec
sti
into
push
add
lock
xor
insb
or
inc
pop
pop
fistps
xor
lods
sahf
lcall
into
inc
jae
pop
jne
shlb
sub
push
scas
mov
adc
pushf
jge
adc
jae
jnp
mov
lea
bound
and
call
push
dec
xchg
imul
insb
out
clc
adc
push
xchg
sbb
push
sbbl
and
ljmp
inc
pop
jmp
int
jns
sbb
jmp
prefetchwt1
outsb
mov
movsb
fs
psubusw
and
dec
xor
cmpl
rcl
adc
xchg
lret
push
nop
outsl
push
test
test
inc
mov
rcr
mov
jbe
or
test
mov
ds
scas
int
mov
sbb
idivb
out
lock
test
rolb
xchg
mov
cmp
xchg
enter
loop
lds
outsl
lods
pop
add
mov
sbb
sub
push
fcmovnb
enter
jno
movsl
xor
push
mov
cmc
xchg
push
in
jbe
inc
inc
add
lret
sub
psrlq
daa
xchg
cmp
and
out
cmpsb
add
sub
jb
add
mov
std
std
pop
push
add
movsl
mov
push
xor
mov
das
jmp
or
jle
jb
jns
stos
out
and
xor
xchg
cwtl
adc
mov
ss
in
sbb
xchg
in
xchg
leave
fnstenv
loope
jb
movsl
sub
cld
push
paddsw
fimuls
jge
hlt
cli
xchg
lcall
jo
sbb
bound
push
mov
and
push
adc
negl
jne
scas
sbb
xchg
or
cs
ss
shrl
add
fwait
popa
xchg
iret
sysret
insb
js
aad
arpl
inc
push
xchg
dec
outsl
jl
inc
and
cmc
dec
lcall
gs
pusha
insl
rolb
add
jbe
dec
jl
imul
negb
jg
dec
lods
in
popf
arpl
stos
fidivs
bound
cli
std
mov
cmpsl
xchg
daa
pushf
and
jo
xchg
enter
ficoml
imul
push
cmp
movsb
scas
mov
add
test
adc
jae
dec
push
imul
jmp
mov
add
mov
arpl
xchg
pop
and
pop
aam
stc
push
lods
cmp
dec
cwtl
mov
cmp
adc
mov
mov
jns
mov
adc
xchg
scas
pop
ljmp
movsb
sahf
jns
dec
aam
loop
sub
dec
sbb
xchg
aam
call
pop
dec
pop
sub
mov
add
lods
add
or
dec
mov
mov
mov
jle
call
xchg
imul
lret
insl
cwtl
and
adc
sbb
cli
aam
sub
and
jle
aam
rcrl
cwtl
rorl
hlt
jmp
pop
pop
pop
inc
ss
clc
xor
stos
iret
xchg
adc
call
stos
imul
mov
pop
push
jb
add
das
push
rorl
shl
dec
cltd
call
cs
fmull
mov
push
pop
xor
lret
mov
movd
add
cmc
xchg
xor
mov
pusha
repnz
mov
cltd
fucomp
pop
and
stos
int
int
adc
sub
pop
cltd
sub
pop
out
mov
in
and
popf
mov
addr16
lret
dec
loop
shlb
sbb
je
and
cmp
fldl
ljmp
nop
push
in
jp
cmp
inc
movsl
fmul
stos
lea
or
dec
push
test
mov
cs
mov
scas
lret
js
add
bnd
and
sbbb
pop
cmp
cmp
idiv
dec
add
push
xlat
add
push
xor
mov
in
pop
jle
mov
cltd
das
stos
outsl
add
daa
repnz
adc
dec
inc
repz
and
out
jae
jno
jb
fucomip
add
lret
bound
pusha
ja
xor
adc
mov
pop
xchg
sbb
inc
movsb
iret
test
push
out
cmp
cmp
outsb
mov
aad
stos
pop
ret
movb
es
inc
sub
jecxz
push
xchg
or
xchg
add
pusha
js
xchg
repnz
rorb
addr16
cli
inc
jns
cmpsb
cmp
dec
addl
cmp
mov
inc
test
pop
dec
mov
in
mov
enter
or
movsb
shrl
push
testb
nop
add
inc
imul
daa
in
mov
test
nop
push
add
fsubrs
ret
lahf
fildll
inc
push
mov
test
pop
gs
in
iret
inc
mov
pop
outsb
imul
xchg
mov
loope
nop
ja
in
mov
in
sbb
mov
rolb
pusha
mov
or
dec
cltd
mov
nop
mov
fsubrp
mov
mov
mov
rcl
test
cmpsb
pop
push
pop
fld
pop
cmp
mov
loopne
hlt
pop
dec
xchg
es
outsb
or
sbb
mov
inc
and
addr16
pop
cmp
add
mov
shl
int3
aad
seto
push
mov
push
xlat
loope
pop
in
push
xlat
push
gs
test
out
imul
push
fcmove
in
ret
mov
mov
aam
and
mov
pop
cmp
inc
clc
pop
into
pop
pop
pop
or
imul
add
lahf
and
add
sub
jo
mov
insl
aad
aad
xchg
xchg
std
add
aad
scas
mov
mov
cld
dec
cmp
test
push
mov
add
cmp
or
sar
test
test
push
int
xor
nop
mov
push
xchg
iret
and
in
movsb
inc
push
lods
pop
push
push
repnz
repnz
fnstenv
add
mov
push
lcallw
ja
sub
stc
mov
adc
cs
aaa
fldenv
push
and
or
ret
mov
xlat
add
fs
push
out
sub
inc
rclb
pop
and
xchg
movsl
xor
leave
lods
mov
loop
pop
shr
jmp
fnstcw
lock
mov
stc
or
fs
mov
mov
cmpsb
adc
aaa
jmp
mov
jno
and
mov
leave
ret
mov
shr
shll
mov
popl
mov
xor
xchg
repz
xchg
jle
and
pusha
and
push
inc
insb
insl
sbb
mov
push
mov
dec
xor
push
pop
movsl
stos
rcrb
cmp
add
lret
mov
outsl
dec
in
sahf
inc
sub
aam
or
out
push
or
scas
in
cmp
sarl
push
fidivs
ffree
cmp
xor
loop
int
pop
fcmovnb
cmc
mov
insl
dec
push
sti
lahf
pop
and
jbe
jne
rorb
mov
jne
push
insl
lret
push
xchg
int3
or
ljmp
lock
fcomps
call
pop
in
aaa
xor
cmp
mov
mov
cmp
or
loopne
daa
jmp
sbb
das
fiaddl
out
mov
sbb
cmp
pop
pop
shl
jg
mov
test
pop
out
ljmp
lods
inc
push
xor
lret
testb
jae
mov
push
rcrb
addr16
call
mov
pop
pop
cmp
and
test
or
mov
mov
xlat
rorl
mov
cmp
fsts
jp
cmp
and
data16
dec
shl
jns
popa
andb
or
scas
aaa
xor
inc
cltd
add
leave
sti
push
add
add
mov
cmp
inc
xor
mov
dec
push
ja
sub
push
jecxz
jo
and
inc
les
shll
or
mov
add
psllq
test
ret
mov
int3
inc
cmp
int3
add
ss
in
sbb
int3
sub
xlat
lcall
sbb
push
insl
iret
xchg
fs
jg
enter
jno
stos
sarl
and
clc
push
inc
and
pop
leave
fidivrs
mov
popf
repz
sbb
insl
add
mov
test
mov
fwait
insl
and
push
cmp
add
push
sbb
push
lret
pop
jns
add
movsb
shrb
pop
cmp
stos
mov
adc
and
in
icebp
adcb
sbb
and
inc
push
xlat
mov
scas
outsb
push
mov
out
mov
outsl
loope
stos
lcall
push
or
loop
xor
pushf
pop
sbb
xchg
pop
test
xchg
jae
sub
xchg
and
sub
inc
sub
and
jle
imul
mov
nop
push
adc
jp
inc
sti
push
sbb
xor
lcall
rorb
inc
push
insl
mov
cltd
lret
cmpl
pop
insb
jbe
in
jge
push
add
test
sbb
sbb
repz
das
and
cmp
sub
lds
or
pop
xchg
and
iret
or
xchg
rorb
xchg
sub
push
scas
cmp
stos
out
lea
ficoml
xor
dec
into
test
xchg
loopne
rcll
addr16
int3
sti
imul
ret
mov
mov
gs
inc
inc
bound
jnp
pop
and
xchg
mov
sub
sub
lods
add
inc
ret
push
mov
sub
fwait
sub
repz
jae
jo
shlb
call
mov
insl
inc
je
add
dec
and
imul
into
sub
mov
inc
jnp
dec
cmp
xchg
lock
insl
mov
adc
into
adc
inc
std
cmp
mul
lret
xor
pop
pushf
movsb
pop
xchg
cld
or
xchg
jne
ret
xor
push
sub
into
mov
mov
lret
jno
and
inc
test
pushf
and
popf
mov
inc
sub
mov
sub
iret
orl
mov
mov
mov
inc
in
cmp
test
mov
or
or
mov
mov
js
repz
mov
movsl
adc
cld
xchg
pop
jb
mov
mov
iret
nop
jge
xchg
nop
or
cld
cmp
jbe
out
lcall
xchg
scas
ja
dec
in
inc
mov
pop
jae
mov
movsl
mov
push
scas
nop
das
rolb
fsubrs
mov
add
xchg
into
push
push
call
push
cmpsb
pop
inc
fisubs
divl
mov
imul
daa
sub
adc
cmpsb
add
pop
lret
ret
std
pop
sbbl
inc
ss
mov
adc
mov
cmpsl
fcoms
dec
mov
in
xchg
xchg
call
add
hlt
xor
jb
popa
cld
out
cmp
mov
jmp
jnp
call
shll
fiaddl
push
cmp
and
aas
cmp
scas
push
mov
inc
in
pushf
mov
cld
cs
xor
or
jmp
loope
cltd
sarl
fmuls
inc
pop
pop
cs
xbegin
or
subl
sub
xchg
lods
dec
mov
mov
lds
loopne
mov
inc
inc
lret
xor
or
or
and
sti
sahf
xchg
push
xchg
fadds
imul
imul
dec
jnp
aam
fstl
scas
out
subl
shl
imul
cld
push
mov
jae
ja
pop
mov
div
stos
adc
add
mov
daa
sbb
dec
ficoms
xor
adc
les
cmp
stos
pop
xor
cs
filds
leave
lcall
arpl
scas
or
mov
lock
movsl
loope
lods
xchg
ja
loope
cld
in
dec
orl
jmp
test
xchg
int
in
sbbl
test
sub
fisubrl
mov
dec
jmp
jg
leave
sub
lcall
nop
fcompl
inc
or
imul
or
pop
mov
mov
mov
pop
repz
mov
mov
mov
jns
movsl
jge
xor
or
inc
test
or
test
xor
cltd
mov
push
adc
loopne
jle
pop
ret
adc
mov
add
jge
dec
mov
mulb
ret
push
lds
and
inc
jns
ret
cmp
dec
push
insb
cld
mov
cmc
jne
in
cmpsb
int3
jns
jns
pop
dec
add
enter
pop
lea
cmp
adc
sbbb
fwait
mov
mov
clc
insl
pop
jbe
push
andl
dec
test
ret
push
lret
mov
inc
enter
jo
add
out
ret
mov
jne
fsubr
aaa
inc
jp
sbb
xchg
dec
mov
xchg
repnz
nop
mov
mov
test
cltd
fmuls
mov
adc
dec
imulb
mov
ret
daa
shlb
out
fbstp
xchg
rol
daa
cmp
push
cld
js
mov
add
or
ret
aad
out
or
ss
cmpl
cmp
inc
jl
push
in
ljmp
mov
out
aaa
test
ror
test
test
addr16
fnsave
jp
es
bound
cmp
xor
andb
in
jecxz
jnp
inc
aad
or
not
lods
lods
insb
daa
aaa
call
lret
jp
insl
jb
add
aam
push
mov
jl
lock
stc
insl
fbstp
lret
mov
push
lock
ss
inc
data16
in
hlt
mov
pop
aas
mov
xchg
aas
dec
mov
ret
xchg
dec
cmpb
icebp
data16
repz
dec
cs
jge
jb
jg
mov
lods
xchg
cmp
mov
jnp
mov
in
mov
xchg
jle
inc
and
mov
fldenv
jno
stos
shll
imul
dec
lret
insb
mov
adc
push
and
push
arpl
and
popa
xlat
add
pusha
dec
addr16
push
xor
lock
inc
in
movsl
sahf
ds
cwtl
xchg
mov
call
jne
inc
call
lret
pop
mov
cld
inc
mov
jg
push
adc
je
loopne
xlat
bound
cli
lret
cld
pop
addr16
mov
jns
cwtl
sbb
xchg
shl
xor
mov
das
mov
mov
xchg
pop
les
xchg
or
hlt
jae
jo
sub
lahf
push
jnp
rolb
pusha
xor
pop
cli
arpl
cmp
mov
aas
pusha
in
arpl
dec
jmp
outsb
ror
jo
inc
leave
into
sbb
pushf
adc
stos
pop
mov
test
and
adc
into
cmp
dec
mov
in
inc
mov
fistl
cld
andl
lahf
out
call
std
cmc
push
out
xor
add
cld
shrb
mov
push
fdivrs
out
sti
iret
ret
mov
jl
push
idivl
jno
lods
and
ret
int3
aaa
test
xchg
pop
lods
cmp
push
jmp
mov
jp
inc
test
or
add
pusha
sarb
hlt
jb
push
push
decl
xchg
inc
scas
test
cli
scas
ds
fiaddl
pop
int3
mov
push
sub
and
js
jb
add
movsb
mov
enter
iret
add
les
mov
xor
sbb
sbb
ja
clc
mov
jnp
pop
pop
jecxz
imul
ret
pop
jle
xchg
test
filds
pop
test
mov
mov
dec
dec
popa
int
jp
jmp
sbb
cmp
jecxz
sub
imul
pop
jns
mov
xchg
mov
or
inc
aas
mov
sti
test
mov
jl
push
or
jle
xor
rcrl
out
gs
imul
lahf
xchg
data16
inc
hlt
pop
scas
xchg
xchg
hlt
test
outsl
and
xchg
mov
aam
mov
andl
cmp
jmp
fnstsw
or
mov
sub
pop
arpl
xor
push
mov
pop
push
or
sbb
popf
mov
cld
xchg
sbb
pop
pop
pop
push
jecxz
fwait
sub
or
sti
pushf
sub
dec
fildl
int3
int3
and
sti
mov
and
int
mov
xor
push
cmp
imul
cmp
int
mov
andl
xchg
inc
sbb
adc
roll
in
push
jge
gs
std
hlt
and
loopne
std
loope
xchg
push
ds
mov
pop
or
jae
and
jl
push
xchg
call
sub
js
arpl
xchg
xchg
lea
cmpsl
adc
fwait
in
ss
mov
cwtl
and
inc
mov
add
xor
or
and
xor
dec
xor
lods
mov
jae
jmp
dec
sarb
loopne
shlb
sbb
xchg
mov
int
push
xchg
arpl
mov
mov
dec
addr16
mov
push
pop
add
add
les
nop
sub
xor
cmpb
pushf
inc
and
jle
lcall
mov
enter
pop
sub
jle
or
jns
mov
js
push
mov
pop
insb
push
mov
das
push
loopne
push
ret
add
cmp
sbb
mov
or
cmp
fs
jp
scas
sbb
insl
je
inc
mov
adc
aas
or
and
sbb
fstps
pop
ret
mov
add
scas
jne
int3
divb
stos
arpl
cmp
repnz
jns
adc
add
shl
mov
xor
push
pavgb
push
and
sbb
jle
repnz
and
xor
inc
js
mov
inc
and
pop
mov
hlt
and
xor
nop
icebp
insb
sub
jp
pop
shrl
sub
mov
sub
ja
subb
pop
or
mov
lret
dec
push
push
hlt
icebp
jae
andb
jle
je
and
pop
lahf
pop
mov
mov
cmp
mov
xchg
idivb
and
mov
clc
push
movsb
and
mov
inc
mov
call
je
sbb
popl
or
repnz
pop
mov
lds
int3
jne
dec
jmp
push
mov
into
lahf
jb
out
cld
or
xchg
and
bound
fstl
in
leave
pop
imul
js
fldenv
cmp
xchg
lea
push
mov
and
jns
push
or
xor
add
cmpl
dec
cmpl
mov
push
push
sub
cltd
popw
jle
xor
test
mov
mov
cwtl
test
les
xchg
lahf
pop
ret
imul
and
push
shrb
lcall
and
fldenv
pop
pop
xor
push
cld
inc
sti
je
cmp
adc
xchg
sbb
mov
test
xchg
rcrl
out
and
ss
pop
outsb
js
lds
scas
inc
dec
movsl
jecxz
daa
aad
lahf
aaa
and
fcmovnb
push
push
adc
push
ret
repnz
or
sub
cmpb
cmpsb
cmp
sarl
mov
negl
lahf
push
popf
jo
pop
mov
gs
mov
xchg
jg
movsb
mov
ja
mov
ficoml
sbb
iret
mov
jb
ret
or
ret
xchg
add
mov
enter
push
movsb
xor
sub
stos
xchg
pop
add
rorl
adc
outsb
pushl
jg
dec
hlt
lods
inc
das
adc
push
mov
mov
and
adc
cmp
in
and
inc
mov
sub
fsubp
subb
or
cmp
clc
xchg
shl
adc
push
jp
mov
and
shr
in
cmp
adc
pusha
inc
and
and
dec
pop
jp,pn
xlat
outsl
xor
loope
addr16
lods
stos
pop
out
std
gs
xor
dec
repz
ficoms
cmp
push
or
inc
rorb
mov
add
xor
xor
jo
lods
je
inc
pushf
adc
loope
rcll
mov
int
jne
push
cmp
loop
jo
and
xor
dec
int
rclb
aam
addb
fucomi
ret
out
ljmp
push
cmc
push
fwait
jmp
bound
lcall
dec
lret
mov
sub
cwtl
cmpsb
movsb
movsb
lock
mov
test
adc
fmull
push
clc
nop
jbe
pop
lds
imul
jl
push
inc
add
rcrl
xchg
inc
decb
sub
dec
add
enter
mov
loopne
sbb
jp
adc
sbb
xor
adcl
xchg
push
lea
data16
mov
dec
pop
mov
into
jno
stos
imul
mov
mov
fnstcw
cwtl
popf
mov
cmp
add
jmp
push
lret
cmpl
cmpsb
pop
andl
mov
push
xchg
dec
or
cli
adc
lcall
lock
inc
fistpl
jnp
cli
fnstsw
jecxz
stos
lcall
sbb
xlat
fsubl
shrb
call
repnz
xor
sarb
jge
dec
adc
rcr
lret
loopne
mov
mov
pop
aam
jg
jb
bndstx
nop
jbe
fcoml
adc
test
jg
jg
jmp
sub
cmp
mov
push
fiaddl
mov
movsl
sbbl
inc
pop
popf
xchg
sub
je
and
push
sbb
push
stc
lds
fdivl
loope
sbb
jns
out
movsl
aad
add
fstl
pushf
rcpps
push
mov
cmp
xchg
inc
add
dec
cs
je
fsubrl
cwtl
push
inc
or
and
mov
cmp
loop
into
push
mov
xchg
dec
sti
mov
push
fs
pinsrw
lret
jnp
inc
scas
jns
sahf
notl
cwtl
inc
sbb
mov
adc
xchg
shl
loopne
mov
mov
fwait
stos
xchg
adc
jmp
adc
in
enter
aad
xchg
ficomps
dec
fadds
lret
loope
insl
divb
icebp
lods
cmp
mov
adc
iret
movsb
mov
arpl
aad
pop
adc
popa
test
iret
out
fcoml
fidivrs
push
dec
mov
loope
ss
popa
jae
ret
push
xchg
lods
sahf
pop
packssdw
mov
cmp
push
add
inc
fistpll
es
hlt
jno
sbb
int
xor
push
pop
push
add
out
scas
push
out
sbb
mov
pop
repz
add
sbb
aad
jmp
lods
std
mov
xor
scas
stc
push
xchg
roll
adc
nop
xor
cltd
clc
jo
loopne
into
lds
stc
sbb
sbb
adc
lods
and
shll
xchg
in
cmp
aaa
mov
xor
popf
cmp
or
stc
ret
pop
mov
out
sbb
jmp
xlat
sub
in
loopne
xorl
mov
xchg
xchg
mov
dec
in
sbb
pop
into
fcompl
mov
fistps
pop
mov
jmp
fsubrl
push
popa
arpl
imulb
add
and
in
out
popf
sub
inc
rorl
inc
es
pop
and
jo
andps
pusha
scas
leave
mov
adc
add
subb
and
lds
mov
add
mov
gs
add
fwait
add
outsb
inc
test
mov
add
stos
xchg
push
and
adc
fadds
adc
in
add
movsl
add
pop
shrl
stos
sub
fwait
pop
pop
or
in
mov
roll
or
mov
cli
push
mov
aas
mov
sub
add
mov
int3
mov
mull
sub
gs
sbb
outsb
int
adc
repz
xchg
inc
das
lret
xchg
cli
addr16
mov
and
push
xor
mov
pop
scas
fcmovu
rcr
push
xlat
adc
fisubs
push
push
xor
vlddqu
push
push
mov
int3
pop
cmp
das
inc
fsub
inc
int
push
sub
repz
faddl
mov
in
lds
mov
mov
out
das
rcll
divl
xchg
jle
clc
mov
std
xor
lock
push
std
test
fidivrl
loope
sbb
mov
push
aad
xor
cltd
addr16
sbb
xor
jmp
mov
cmp
jmp
push
xchg
mov
xor
lahf
testl
mov
subl
add
fwait
int
jecxz
adc
xor
push
mov
inc
dec
xor
inc
jge
lods
enter
or
popf
dec
add
iret
mov
loopne
jmp
inc
xor
fstps
mov
add
aad
fbstp
xor
repnz
pop
roll
cmp
adc
or
std
jne
call
mov
or
sbb
loop
sbb
cmp
push
shrl
push
scas
adc
mov
loop
jnp
pop
leave
aaa
push
in
sub
stos
movsl
stc
mov
loopne
arpl
sub
and
sbb
repz
mov
jle
fisubrs
mov
pop
mov
jno
sbb
scas
and
outsb
lods
pop
ljmp
cli
test
cltd
adc
fcmove
cmp
gs
sbb
shll
js
mov
leave
sub
je
ljmp
lock
es
test
call
shrl
aaa
stc
stc
add
sahf
lds
adc
xchg
xchg
mov
inc
cli
push
pop
xchg
out
sub
inc
xor
add
out
gs
push
das
push
pop
mov
lcall
aad
cmp
divb
js
sub
lock
in
dec
pop
push
or
fcompl
mov
jno
icebp
in
and
jb
push
and
push
ds
stos
xlat
std
xchg
ss
gs
inc
add
and
jl
das
unpckhps
in
push
adc
stos
or
sbb
sbb
xor
clc
adc
jno
into
jne
adc
loop
repz
add
loopne
inc
pop
lahf
sarb
loopne
outsb
sbb
ljmp
cwtl
pop
ret
or
xchg
sbb
adc
and
and
push
push
xchg
xchg
enter
inc
bswap
jno
add
cmp
out
adc
lods
test
pop
ss
dec
inc
add
push
xchg
jg
xchg
outsb
ja
loopne
jae
imul
mov
adc
in
jp
out
imul
sbb
mov
mov
jg
ljmp
adc
sbb
in
call
out
dec
push
out
je
cltd
out
push
jo
repz
pushf
add
push
je
or
rdtsc
insl
rolb
dec
cwtl
mov
pop
daa
or
mov
outsl
ds
je
or
push
pop
mov
andb
xlat
and
ja
jp
jmp
lea
movsl
testb
and
gs
push
xchg
sub
sub
lret
mov
enterw
fisubrl
lret
add
std
push
xchg
rorl
mov
xchg
xor
xor
dec
incl
jge
or
cmp
mov
stc
mov
jecxz
xor
adc
fwait
xlat
mov
sub
jno
mov
outsb
mov
xor
fiaddl
cmp
shrb
dec
jne
inc
sub
sub
adc
aaa
xor
shr
dec
mov
mov
aad
mov
pop
xchg
xchg
jnp
jmp
imull
test
add
or
xchg
push
cmpsl
jmp
or
int
cmp
stc
cld
sub
out
gs
xchg
loope
scas
movsb
mov
xchg
sbb
shlb
push
adc
add
pushf
or
mov
sub
movsl
sbb
lods
jp
in
mov
nop
addr16
pop
lods
push
pop
cli
pop
jl
test
push
shll
test
pop
or
shrl
add
pusha
clc
adc
dec
and
xchg
xor
pop
cmpsl
in
stc
mov
inc
jae
fmuls
mov
jno
loopne
stc
xchg
sub
mov
imul
dec
mov
pop
mov
jns
ret
jle
shl
pop
mov
stos
fisubrs
aas
mov
pusha
sub
scas
fimuls
nop
xor
fs
nop
int
fstp
cmpb
cmp
js
add
sub
xchg
or
and
cld
leave
mov
jb
sbb
mov
adc
cmp
xchg
inc
inc
ret
ss
lods
std
mov
mov
add
je
fsubrs
aad
mov
ds
push
mov
xor
pusha
movsl
push
or
sub
sbb
hlt
fcomp
mov
or
outsl
popa
ds
out
jo
mov
adc
mov
lahf
cmp
mov
xchg
lahf
arpl
gs
aas
jae
lcall
mov
jecxz
sub
xadd
jmp
add
cwtl
insl
push
lds
jl
and
mov
adc
loope
fldenv
int
cli
xchg
adc
cli
rcr
mov
jmp
in
lea
push
lret
adc
jmp
mov
mov
mov
add
mov
inc
lret
mov
jno
ret
das
dec
pop
jbe
leave
and
nop
push
jge
es
mov
lock
or
fwait
xlat
dec
fsts
ja
xchg
inc
cld
mov
jnp
int3
addl
jg
xchg
cmpsl
mov
movsl
daa
movl
into
in
fisttps
push
mov
repz
inc
pop
sbb
frstor
in
jno
mov
fbstp
sbb
sub
rcrl
shlb
lcall
lcall
inc
rcr
fisubrl
dec
dec
add
fmuls
addr16
aaa
bound
sub
and
mov
dec
movsl
add
or
fistpll
nop
sbb
imul
or
dec
pop
je
xchg
xlat
sub
pop
mov
push
cli
mov
repz
inc
icebp
scas
lret
ficoml
popf
shll
cmp
dec
lds
in
icebp
pop
mov
mov
inc
fwait
xchg
daa
sbb
fcompl
shll
fisubrs
test
movsl
fwait
push
call
mov
and
xor
jg
lods
and
xchg
mov
arpl
push
movsl
stos
xor
div
lods
aad
aam
lea
aad
pop
jp
into
pusha
xchg
sbb
sbb
mov
push
pop
sub
in
pop
cmp
cld
inc
divb
add
sbb
jecxz
sub
lret
fimuls
mov
fiaddl
cmp
shl
iret
sub
outsb
ffree
into
sub
aam
sti
xchg
sub
es
xor
and
loopne
pop
stc
loope
movsl
xlat
pusha
pop
fildl
into
popa
dec
adc
adc
inc
stos
sbb
pop
push
es
jno
mov
and
sub
adc
inc
cmc
sbb
insl
cmp
jmp
mov
fmuls
or
pushf
jne
loopne
call
lcall
lock
pushf
icebp
test
xor
pushf
lcall
cmp
iret
pop
movsb
mov
cltd
ljmp
and
cmp
mov
xchg
cmpsl
push
je
movsl
into
test
xchg
jnp
nop
mov
jbe
in
rorl
imul
pop
xor
jb
xchg
push
xor
dec
test
lret
lret
repz
lcall
stc
adc
gs
fists
fidivs
jl
out
test
cltd
xlat
cwtl
aas
inc
xchg
pop
mov
stos
sti
push
fcoms
ret
lret
xor
lea
arpl
xor
inc
and
repnz
fsubp
push
scas
test
adc
lret
push
xchg
outsl
insl
test
and
test
mov
inc
repz
mov
and
pop
xchg
icebp
cmp
sti
dec
pop
sbb
mov
mov
dec
iret
pusha
pop
out
outsl
xchg
incl
dec
std
mov
dec
push
xchg
jae
sarl
pop
push
aad
out
outsl
mov
fadd
cs
lahf
insb
jmp
in
jns
stos
sbb
pop
loopne
inc
cmp
cwtl
mov
pop
bound
ss
bound
mov
hlt
stos
xorl
lds
xor
xor
adc
cmp
add
int
add
inc
in
fs
push
push
test
int3
xor
ret
shr
insl
addr16
mov
cmp
xlat
and
mov
push
clc
aas
pusha
and
hlt
sbb
les
dec
adc
in
test
in
cmp
mov
lcall
xor
adc
clc
in
ja
ss
sbb
inc
xchg
loopne
movsl
dec
xlat
in
icebp
leave
adc
ljmp
xchg
mov
push
icebp
mov
cmp
push
stos
cltd
test
test
adc
lods
repnz
sub
mov
sub
fwait
xchg
ret
outsl
push
cmpsb
sbb
pop
mov
sbb
outsb
pop
inc
lock
outsb
or
fcoml
test
inc
loopne
cwtl
call
fnstcw
adc
fldt
repnz
xor
pop
pop
mov
xor
adc
movsl
fisttps
in
outsl
push
inc
rcr
mov
in
ret
jae
mov
mov
and
jb
inc
jp
je
inc
add
add
aad
and
mov
xlat
fbstp
xor
inc
mov
sub
pusha
cmp
push
shll
push
push
push
push
xor
stc
jns
push
mov
imul
xor
xchg
mov
jl
cs
push
test
cmp
ret
add
loop
sub
in
jge
scas
mov
sbb
loop
imul
and
or
dec
bound
subl
inc
repnz
sti
mov
adc
leave
rcrb
rclb
stos
sti
fisubrs
mov
mov
ja
pop
shrl
and
jg
adc
out
inc
mov
or
or
push
push
cli
arpl
mov
jmp
dec
test
sub
lret
xor
and
fdivrl
mov
fidivl
std
mov
pusha
nop
mov
cli
mov
mov
lea
les
xchg
cmpsb
xchg
sub
in
push
ret
mov
ja
xchg
cmpsb
loop
lret
daa
fistpl
aam
push
xlat
mov
cmpsl
icebp
rorl
xor
aam
pop
int3
scas
fcoml
daa
mov
mov
xchg
xchg
cmpsl
stos
repnz
push
loope
les
add
shrl
ror
popa
loopne
in
lods
fcom
or
mov
xorl
mov
fistps
adc
sti
mov
mov
push
jmp
scas
std
mulb
xor
adc
pop
pushf
or
aad
or
jbe
cmc
or
sub
sbb
mov
cmp
outsl
aam
and
sub
xor
xchg
mov
leave
cmc
loope
jbe
rclb
inc
outsl
xchg
and
cld
orl
loop
fwait
lret
and
popf
clc
aas
loop
scas
cmp
test
sti
adc
popf
ja
sub
jp
sbb
cmp
mov
pop
mov
dec
dec
leave
ja
add
rclb
je
in
push
mov
xchg
dec
loopne
hlt
xlat
jno
mov
movsb
xor
mov
pop
dec
cmpsb
call
inc
adc
xor
je
out
fldl
or
int3
rolb
lods
add
pop
in
mov
fbstp
mov
lahf
and
ds
adc
mov
ss
xor
push
sub
fcompl
pop
mov
inc
mov
lea
mov
aam
mov
std
push
and
jg
aam
and
mov
ss
ret
shlb
or
cld
into
roll
ret
and
enter
cli
mov
popf
xor
mov
or
stos
sub
mov
lret
das
sub
sub
imul
call
mov
add
xor
xchg
sbb
mov
xchg
frstor
adc
sbb
mov
push
in
mov
mov
loopne
aad
js
popa
sbb
xchg
iret
jo
xlat
pop
mov
adc
in
pop
dec
mov
stos
ret
fmuls
lods
icebp
loop
sbb
sbbb
imul
jno
test
mov
es
mov
lahf
pop
xchg
pop
mov
insl
sub
sub
mov
xchg
mov
lock
inc
pusha
in
mov
lcall
cmp
mov
in
add
push
jb
iret
sub
shl
fdivr
fisttps
ret
push
movsb
outsb
outsl
stos
std
mov
sbb
jmp
cmp
mov
mov
mov
shll
lods
xor
flds
fisubrs
ret
inc
mov
dec
xorb
xor
shl
test
lret
andl
sahf
jne
mov
mov
test
cmp
int
insl
xchg
ja
test
sahf
movsb
lods
push
mov
push
pop
pshufw
jno
cltd
adc
xor
mov
push
xchg
jle
push
mov
gs
or
jno
sub
jnp
xor
icebp
xorb
jecxz
jnp
fcoms
mov
ja
cltd
sti
mov
out
mov
add
pop
and
jp
dec
mov
fwait
pop
leave
test
and
scas
mov
nop
fsubrl
mov
lea
or
lret
iret
sub
mov
popf
xor
adc
sbb
mov
xor
adc
xchg
mov
xor
jae
ss
or
cmc
jnp
es
cmc
fcmovb
push
fsubr
test
cli
ds
xchg
test
pop
jnp
push
js
ficomps
pop
pop
jl
push
push
xchg
jp
lret
sbb
push
xchg
or
dec
and
icebp
pop
cmp
dec
mov
shlb
xchg
mov
outsb
mov
push
mov
insl
mov
in
inc
push
sub
dec
push
lods
ss
jb
cmp
inc
cmp
dec
mov
ficompl
mov
ficoml
daa
cmp
xor
jns
xchg
es
xor
pop
push
or
fisttpl
cmp
divl
dec
loope
dec
es
fs
or
adc
xor
in
mov
inc
fsub
mov
mov
dec
pop
hlt
cmp
sahf
mov
cwtl
inc
dec
pop
mov
fcmovnu
sti
call
in
out
mov
roll
jle
and
mov
xchg
sbb
fstl
sbb
out
and
inc
jecxz
cmpsl
jns
mov
pop
inc
or
out
inc
adc
stc
gs
rcl
pop
jmp
jnp
enter
mov
and
aam
dec
out
mov
sub
push
lods
in
out
or
mov
bound
xchg
cmp
fnstcw
dec
das
mov
xchg
icebp
out
in
jg
mov
cs
aad
or
sub
cltd
hlt
test
shl
cmp
cmp
test
out
jbe
jp
cmp
inc
mov
jmp
lret
fidivs
rolb
dec
xor
fs
cmpsl
hlt
loopne
aam
jne
outsb
or
push
sub
xchg
jg,pt
subb
call
ss
xchg
pushf
push
sub
push
loope
gs
cmc
aas
lahf
das
shrb
js
sarl
pushf
rcll
push
mov
imul
inc
push
ss
sub
ret
fwait
rclb
xor
sub
and
bound
pusha
mov
inc
lahf
push
std
aam
jne
push
pushf
icebp
cli
sti
fs
bnd
ret
repz
imul
test
or
imul
cmp
cmp
bound
pushf
jl
movsl
cmp
xchg
jbe
imul
fdivr
jge
inc
push
iret
jb
roll
dec
lds
inc
dec
jo
adc
es
nop
or
inc
adc
xor
in
jnp
icebp
sbb
xorb
push
sub
ret
mov
jl
fcoml
lods
lret
mov
cmp
xorb
mov
add
idiv
ja
cltd
sahf
mov
pop
ret
incl
jnp
cwtl
pop
cld
push
dec
nop
out
js
sbbb
and
or
sbb
int
push
add
ljmp
cli
dec
or
xchg
test
mov
imul
lds
cmpsl
fdivs
push
or
loopne
mov
inc
adc
mov
or
test
dec
mov
inc
shl
mov
ss
outsb
sbb
xorb
lcall
sbb
repz
xchg
negl
or
test
stos
and
mul
dec
jg
test
mov
cmc
inc
sar
inc
adc
rclb
push
arpl
xor
cmpsb
pop
jae
fldcw
or
or
lahf
pop
aaa
popa
cld
cmpb
mov
lcall
xor
pop
and
inc
sahf
jp
mov
adc
xchg
lret
cmc
lods
mov
cmpsb
and
cmp
mov
lahf
mov
push
sbb
insl
lds
jmp
or
xor
ret
pop
in
insl
xor
addr16
mov
push
pop
out
in
jns
fstpl
xchg
fisubl
push
xchg
inc
jp
shrb
dec
push
mov
test
dec
or
ficoms
int
or
into
mov
sub
pop
and
idivl
cmp
xchg
sbb
xor
in
push
inc
out
out
mov
cli
movl
inc
repz
sub
xchg
hlt
dec
xchg
jb
xchg
rcll
shl
cmp
cwtl
sub
push
push
mov
test
mov
pop
cs
jp
sahf
xlat
mov
dec
iret
mov
lds
adc
rcl
mov
mov
inc
add
mov
jl
xor
and
aam
lcall
mov
mov
data16
test
push
adc
jp
lods
push
mov
mov
xor
xchg
or
pop
sub
loopne
xchg
hlt
mov
xchg
out
adc
fsubr
int
mov
mov
jne
xor
mov
xchg
xor
ret
dec
fsubl
jae
mov
mov
sub
and
sub
dec
lods
ljmp
and
inc
mov
xchg
daa
cmp
jno
mov
sahf
mov
mov
mov
out
xor
dec
stc
insl
lcall
aas
int3
or
cmpsb
fwait
repz
hlt
jb
sub
and
xchg
das
ret
cmp
pushf
push
cltd
sub
stc
cwtl
cmpb
dec
jns
addr16
cmc
or
pop
stos
pop
jnp
pop
xor
scas
jns
push
cld
mov
rclb
loope
test
cmp
lods
xchg
mov
lods
and
into
sub
or
scas
jg
pop
inc
sbb
loope
sbb
cmp
xor
insl
lcall
xor
pushf
cld
aad
call
jecxz
push
aam
xor
add
sub
jo
xchg
inc
pop
adc
dec
rolb
incl
rorl
hlt
lock
loop
add
shll
dec
imul
jmp
shl
xor
cmp
and
lds
or
pop
sbb
scas
xlat
lock
jle
jmp
ds
push
push
lods
aad
mov
push
iret
sbb
rcr
lcall
in
mov
push
popf
outsb
popf
lahf
push
inc
shlb
in
sub
push
pop
push
sbb
icebp
mov
stc
gs
push
dec
jmp
and
ret
out
jb
sahf
jb
xor
cwtl
inc
cli
divl
imul
lgs
std
sbb
pushf
gs
aas
xor
jecxz
fstpl
repnz
xchg
mov
xor
xlat
inc
mov
adc
ficompl
jne
sbb
popl
dec
fscale
arpl
jb
repz
loopne
push
or
movsl
cs
and
cmp
orb
push
sbb
jnp
cmp
sti
mov
arpl
js
in
lret
hlt
mov
lods
cmpsb
fidivs
movsl
mov
out
xor
movsb
clc
ret
repz
cltd
ja
les
xchg
push
int
mov
andl
add
cltd
push
mov
dec
sub
loopne
dec
sub
inc
mov
fdiv
into
push
inc
stos
xor
ja
mov
pop
pop
adc
popa
orb
stos
clc
pop
cmpsl
xchg
lret
and
or
rcll
movsb
sub
cld
pop
gs
stos
aad
rorb
popf
or
mov
lock
ljmp
sub
sub
adc
xor
inc
jb
sbbb
pop
bnd
iret
mov
xor
ljmp
xchg
lahf
push
sbb
movl
js
lcall
and
and
xchg
pop
repnz
cwtl
mov
and
add
jmp
out
push
in
andl
enter
sub
dec
in
mov
mov
icebp
jne
mov
test
pop
jl
xlat
movsb
jns
shrl
xchg
fistl
outsl
fisttps
arpl
in
stc
mov
loop
dec
and
ds
test
outsb
cmp
push
rorl
pop
xchg
int
dec
std
mov
loope
inc
sbb
push
sbb
and
sbb
mov
arpl
rcrl
shll
lods
mov
push
test
call
push
repz
in
add
in
in
ret
fidivs
negb
sbb
lcall
fcmovnbe
pop
and
int3
jns
ljmp
fdivrl
pop
sub
icebp
sbb
loopne
sub
adc
ficomps
mov
inc
in
and
push
lods
aad
add
adc
xor
bound
mov
add
cmp
xchg
filds
inc
in
stos
stos
adc
adc
mov
or
outsl
jnp,pt
fldl
clc
pop
mov
stc
jae
push
mov
mov
ds
pop
cmp
push
jl
lahf
pop
nop
outsb
les
pop
sub
xchg
and
mov
pop
jecxz
adc
jns
imul
mov
fisubrl
pop
sbb
jbe
and
test
jmp
mov
add
sub
leave
inc
into
mov
mov
sbb
aam
push
or
cmpb
pop
test
pop
sbb
mov
push
cmp
adc
or
nop
inc
mov
insb
into
ret
mov
hlt
pop
dec
andb
push
out
push
lods
mov
test
ja
in
cmc
push
je
daa
js
in
adc
xchg
popa
dec
insb
lods
andb
fmuls
incl
loope
gs
imul
jl
loop
mov
aas
and
das
nop
outsb
cmp
bound
cmp
lahf
jno
negl
xor
fnstenv
iret
push
loop
xor
inc
xchg
xor
stos
and
pop
pop
fbld
or
mov
fs
or
push
mov
cs
dec
call
nop
lahf
movb
push
sarb
inc
ret
mov
mov
sbb
push
test
inc
sub
bound
push
mov
or
gs
xchg
and
mov
js
rcll
dec
sub
imul
xchg
xor
stc
int
in
and
xor
in
arpl
xchg
dec
jge
sbbl
xchg
lcall
sub
lret
push
push
xchg
mov
fnsave
push
sti
and
or
pushf
dec
mov
int
push
add
xor
negb
xor
int3
lods
xchg
jg
mov
aam
add
xchg
adc
dec
jne
adc
test
stc
mov
mov
add
add
fdivl
divl
mov
stos
cmp
es
xchg
cmp
push
push
and
outsb
inc
and
mov
fisubl
jp
adc
mov
movsl
pusha
jp
mov
or
mov
push
lods
or
jae
pop
fsubrl
xchg
inc
jnp
arpl
fnstcw
push
or
sbb
cmpsb
jns
jae
stos
orl
cmp
addr16
into
outsb
or
sarb
add
repz
sub
adc
or
xor
aaa
mov
pusha
xchg
lcall
cmpsl
cmpsb
loopnew
lret
sub
sub
int
dec
fisubrl
cmpsl
cmp
int3
movsl
sahf
aaa
push
inc
rcl
call
in
push
movq
jge
lea
fwait
lods
xchg
mov
aad
sbb
mov
test
leave
fs
ds
into
cmp
das
dec
testl
push
pop
mov
cwtl
les
sbb
aad
repz
push
cmpsb
imul
mov
add
or
test
and
mov
push
stos
mov
xchg
push
jb
std
and
and
outsl
stc
mov
mov
push
or
test
pop
mov
bound
stos
and
lods
push
repnz
jl
sarb
into
rcll
cmp
adc
inc
cld
or
cld
push
adc
dec
pop
pushf
push
dec
jbe
or
iret
jae
dec
mov
in
lods
mov
sahf
pop
test
dec
fnstenv
incl
cmpsb
jl
xchg
push
jecxz
dec
sub
jbe
xchg
lds
push
or
rcrl
call
jnp
adc
jecxz
and
xor
xchg
lret
addr16
xchg
bound
repz
dec
movsl
es
inc
push
inc
lahf
subb
mov
cmc
sub
inc
xchg
dec
xchg
or
addb
push
lds
push
mov
xlat
and
ret
mov
adc
mov
movsl
gs
jg
aad
js
add
mov
lds
repz
push
pushf
jge
and
push
dec
je
ljmp
xchg
test
dec
inc
pop
ljmp
mov
sub
outsl
lret
and
imul
test
ja
loop
push
cwtl
imul
icebp
fwait
or
loopne
test
sbb
sbb
push
mov
outsl
rcrb
xchg
xchg
and
mov
push
lea
cmp
decl
push
ficoml
ret
inc
out
xor
sahf
dec
jns
js
test
push
add
xor
xor
dec
and
xchg
lret
movsl
leave
aam
add
cmpsb
mov
lods
xor
lds
and
mov
nop
push
addr16
fwait
sub
add
mov
mov
cmp
jecxz
pop
lcall
sub
xchg
je
clc
add
adc
jecxz
xchg
enter
mov
repnz
je
stos
mov
mov
je
mov
jecxz
sub
mov
cmp
xchg
xchg
ljmp
test
pop
push
pop
push
push
cmp
and
adc
movsb
ret
mov
mov
bound
mov
ror
fimull
fdivrs
dec
popa
dec
inc
adc
dec
or
push
adc
repnz
stos
xorb
and
in
jl
shl
cmc
stc
mov
mov
cmp
mov
mov
std
sbb
xchg
pop
push
xchg
adc
xor
es
out
gs
loope
sub
inc
lock
adc
mov
imul
adc
gs
adc
adc
ror
cmp
stos
int3
mov
ret
push
test
stos
push
push
mov
maskmovq
testl
lret
stos
gs
mov
dec
and
movsl
mov
xor
js
addr16
pusha
mov
test
push
shl
push
adc
push
sbb
jbe
adc
add
fcoml
out
add
in
dec
adc
add
and
push
sub
adc
hlt
and
jne
xor
push
pop
mov
sub
movl
pop
adc
out
inc
xor
xchg
push
test
js
aas
mov
test
lods
xchg
stos
mov
push
sti
xchg
ret
test
out
bound
xor
scas
mov
inc
scas
test
inc
and
in
ret
inc
push
add
rcl
push
adc
pop
adc
jge
in
outsb
jle
dec
imul
popa
dec
cmp
and
push
sbb
xchg
xchg
je
jne
shlb
clc
and
sbbb
js
jl
pop
or
add
out
push
jge
ror
int3
fistps
jge
and
mov
fistps
adc
mov
sbbb
cmpsl
pop
nop
push
xchg
lods
pop
dec
sbb
in
jmp
xor
and
push
popf
aam
out
jle
mov
in
arpl
cmc
incb
nop
push
mov
xor
xchg
xchg
jbe
mov
push
jne
int3
cmp
pop
ffree
mov
shr
sub
leave
push
push
push
mov
stos
jo
cmc
sahf
push
jae
xlat
pop
in
dec
stos
sub
jb
cld
mov
jmp
ficoms
xor
ud0
mov
fistl
push
xchg
sbb
data16
sub
fdivs
mov
push
or
je
icebp
dec
stos
mov
mov
ficoml
lret
jns
xlat
das
ret
xchg
lods
popa
pop
lcall
arpl
arpl
sbb
mov
pop
cmpsb
imul
call
mov
pop
jle
out
mov
cmp
jae,pt
jo
les
popa
int3
jb
pushf
jge
inc
std
cmp
repz
push
sbb
and
rcl
mov
add
cs
cmc
push
and
test
dec
inc
ja
pushl
jns
or
push
mov
outsl
adc
fwait
pop
js
sub
xchg
gs
adc
add
pop
adc
lcall
aad
jecxz
lock
sti
iret
popa
int
pop
lea
sbb
call
inc
into
enter
mov
mov
mov
mov
or
leave
xlat
scas
daa
fwait
push
in
pop
cli
mov
movsl
icebp
imul
inc
pop
mov
and
inc
repz
mov
cmp
or
mov
outsl
das
mov
test
popf
pop
js
test
test
push
fisttpl
out
inc
and
pop
and
dec
in
or
imul
push
mov
push
test
cwtl
jmp
les
cwtl
in
cld
mov
pop
cli
test
xor
mov
stos
jo
cmp
outsl
je
bound
in
fdivl
nop
pop
movsl
pop
cld
mov
push
aad
xor
ljmp
insb
ss
test
sbb
dec
jl
add
sarl
cmp
add
mov
mov
in
xchg
shr
lea
inc
je
pop
fstpt
stc
rolb
repnz
pop
and
sub
sbb
or
mov
leave
jnp
in
mov
sub
lcall
popf
or
scas
mov
xchg
cmp
jne
ljmp
pop
cltd
cmp
ret
mov
xlat
popf
fcmove
inc
pushf
sti
loope
stos
mov
xchg
xchg
add
fidivs
jbe
xor
lods
stos
sti
mov
inc
dec
xor
sbb
pop
imul
lock
ret
hlt
mov
stc
andl
sbb
gs
cltd
push
lcall
xchg
pop
std
clc
push
negl
push
add
cmpl
xchg
lds
push
jmp
and
cs
in
int3
sub
and
xchg
mov
popf
push
loopne
push
mov
or
sub
lods
or
lea
fsubrp
in
adc
lahf
sahf
ljmp
cmpsb
pop
jo,pt
mov
sub
fst
push
loop
pusha
inc
sbbl
mov
int3
or
mov
add
popa
jno
rcl
jae
mov
dec
adc
sbb
mov
mov
dec
icebp
sahf
mov
roll
or
sbb
in
push
call
cmp
mov
add
repnz
sub
xor
sub
out
xor
xchg
jb
adc
lret
jle
lock
shrl
add
scas
cmp
jae
and
push
aad
xchg
test
jns
call
sbb
enter
test
lock
xchg
imul
arpl
add
sub
mov
mov
mov
int
arpl
jb
mov
lods
les
in
push
bound
push
fisubrs
sbb
imul
pushl
scas
mov
fcoml
fld
push
xchg
je
fstpl
adc
rcr
jae
xor
aaa
jno
fstl
clc
push
lret
sub
sub
jp
ja
daa
addr16
and
notl
pushf
lods
cmp
pop
adc
lea
pop
adc
fisubl
mov
sbb
add
test
cmpsb
les
cmpsl
inc
and
rcrl
ret
idivl
rolb
cmc
movsl
cmc
xor
inc
jbe
mul
push
push
shll
mov
mov
popf
jnp
enter
push
loop
cld
cltd
xchg
cmp
in
lds
xor
loop
test
fs
dec
push
call
cmp
daa
cmp
cld
mov
jmp
mov
roll
xor
jle
and
mov
and
jnp
sub
std
xor
jge
ja
push
out
sbb
xor
movsl
xor
mov
scas
jo
cmp
pop
outsl
cltd
xor
out
sub
lret
or
add
pusha
push
cmpsl
repnz
adcb
jl
push
adc
and
outsb
and
mov
call
rorb
call
lret
das
int
push
fnsave
scas
popa
lods
push
xchg
shlw
pop
and
cmc
add
test
mov
mov
or
outsl
orl
shll
jb
dec
lret
xchg
add
xor
data16
js
mov
adc
nop
inc
inc
jb
rolb
mov
fs
dec
mov
mov
mov
adc
fmull
pop
xor
ud1
out
mov
aaa
push
std
jnp
or
add
fistl
ja
std
ret
add
inc
inc
dec
inc
mov
dec
popa
xor
jg
dec
loope
test
and
bnd
ljmp
add
and
enter
aas
sub
inc
ficompl
pop
lret
ret
add
pusha
lods
push
imul
fnstsw
push
iret
lds
xchg
lea
out
and
jae
clc
call
jno
xchg
lods
pop
call
push
xchg
xchg
test
out
pop
cmp
sbb
pop
sub
out
ljmp
add
fimuls
les
mov
cmp
pop
push
xchg
aaa
gs
mov
push
adc
test
add
std
sahf
mov
out
sbb
mov
ds
fstpt
stos
mov
xor
popf
xchg
ljmp
test
or
aad
xorl
fistl
sbb
xchg
jns
pushf
daa
sub
xchg
pusha
mov
les
mov
xchg
sub
popa
icebp
cmp
xchg
xchg
cmp
clc
push
push
xor
inc
mov
pop
rolb
mov
add
cli
inc
xor
arpl
enter
stos
fdivs
and
push
jp
mov
adc
adc
push
cmp
andl
out
das
adc
pop
aaa
jp
cmc
outsl
jecxz
adc
es
jne
clc
jmp
iret
push
cmp
arpl
mov
loop
enter
imul
dec
jle
mov
in
and
and
movsb
adc
cmp
xchg
ret
push
push
pop
jg
insb
push
jecxz
mov
mov
xor
push
clc
push
add
xchg
jns
inc
test
loope
imull
adc
and
pop
into
jmp
clc
push
cld
hlt
sub
stc
lret
lret
or
mov
cmp
push
out
pushf
push
push
mov
loope
jo
adc
mov
jno
pop
ret
cmp
int
notl
out
stos
cltd
arpl
mov
shr
mov
cmp
sub
es
in
in
sahf
ret
sub
imul
inc
and
repnz
shrb
push
mov
sub
lds
fldl
js
jg
xlat
lcall
inc
into
cmp
sbb
xor
sarl
pop
lods
inc
xor
push
dec
flds
jbe
xchg
int
and
and
lds
jb
std
movsb
popf
adc
cmp
sbb
icebp
sub
sub
in
ja
jae
fisubrl
shlb
es
iret
out
xchg
adc
icebp
sub
loop
adc
addr16
enter
shrb
cmp
lret
jmp
add
loopne
loop
ss
xchg
iret
sbb
imul
xchg
mov
or
sbb
movsb
push
jmp
fistl
and
sbb
xchg
mov
or
in
xchg
into
add
ret
push
shlb
popa
xchg
rol
loop
lods
cli
das
neg
jbe
add
je
pop
ret
arpl
jge
fidivrs
mov
rcrl
sub
mov
inc
push
fldt
imul
mov
xchg
jbe
test
pop
adc
jno
inc
inc
int3
test
cmpsl
icebp
inc
or
sahf
arpl
add
notb
mov
mov
jge
and
add
inc
or
cld
adc
jmp
jle
imull
xor
out
fimull
outsl
fldl
and
adc
shrb
pop
lea
lret
pop
loope
cli
pushf
jns
jns
mov
xchg
sub
jp
cmpsb
int3
dec
jne
in
std
int3
mov
outsl
ljmp
jle
pop
cmp
mov
sbb
sti
fsubl
aaa
add
mov
test
out
rclb
or
pop
int3
data16
sbb
mov
or
add
lods
pop
imul
mov
sub
fs
mov
and
push
out
hlt
sarb
pop
aas
andb
ret
jp
dec
push
mov
pop
iret
mov
cld
std
or
mov
jl
mov
mov
mov
adc
inc
cmp
dec
iret
nop
mov
icebp
lret
scas
fsubl
popa
xchg
cmp
ljmp
mov
dec
dec
push
into
or
hlt
inc
pushf
push
fcmovnb
sub
scas
imulb
jg
call
sahf
lea
mov
mov
sub
test
orl
and
fdivl
xor
dec
in
cli
iret
rclb
scas
or
cmp
std
or
andl
cs
ljmp
pop
pushl
mov
or
pop
add
les
pop
xor
cmc
sub
sub
mov
addl
jb
mov
insb
mov
mov
jecxz
push
sbb
jmp
lds
lahf
xchg
add
std
push
adc
iret
sbb
rcrb
pushf
sub
data16
lods
push
les
stos
out
stos
inc
mov
int3
sysenter
ljmp
jmp
xor
out
test
lahf
shlb
dec
sub
inc
clc
sub
xor
add
or
lea
repz
mov
or
fildll
push
mov
xor
aam
pop
mov
or
cli
cmp
cmp
or
dec
jecxz
push
imul
fdivl
jl
js
insl
dec
pusha
inc
gs
xchg
push
dec
mov
cs
dec
pop
lret
in
pop
icebp
mov
mov
mov
push
pop
jg
cmpsl
or
mov
or
add
jg
or
push
fnsave
jo
lea
ret
rcr
mov
sub
sti
enter
push
add
cmp
mov
cmp
pop
cmp
pop
lret
xchg
iret
inc
fdivrl
shl
imul
or
popf
mov
dec
jg
scas
cld
nop
cmpsl
cmpsl
aad
pop
adc
lret
add
into
jne
and
stos
pop
loopne
dec
and
into
lret
insb
iret
and
jge
sub
mov
je
mov
push
jbe
test
or
add
jecxz
and
mov
sbbb
or
lret
int
mov
daa
loope
dec
inc
das
outsb
push
test
ljmp
fisubs
mov
insl
test
dec
sbb
out
add
jns
inc
cmpsb
jb
rcrl
loope
ljmp
push
stc
lahf
sub
hlt
sub
push
mov
in
loop
imul
dec
cmp
mov
fistpll
pop
xchg
sbb
fstpt
mov
add
shlb
or
jp
daa
pop
inc
je
push
mov
stc
mov
test
push
icebp
sbb
xchg
mov
xchg
and
lcall
jle
mov
mov
icebp
outsl
clc
push
push
jo
jo
dec
push
movsl
pop
outsb
out
sbb
sbb
jmp
pushf
pop
sbb
push
lods
adc
or
add
das
mov
or
jmp
pop
sub
lods
dec
xor
mov
push
push
push
ret
std
sti
lret
inc
jle
xchg
insl
or
orl
shll
mov
nop
shll
push
push
xchg
out
xor
daa
ret
or
cltd
jb
adc
xchg
dec
or
push
add
add
fsubs
jnp
scas
add
gs
jns
or
mov
push
ds
negb
inc
push
loop
out
cmp
ret
fs
lods
ss
or
xchg
lea
mov
xor
and
call
mov
pop
xlat
xchg
xchg
scas
pushf
mov
add
sarb
cltd
xchg
push
fdivr
shlb
nop
jne
scas
push
cmpsl
insl
xchg
clc
jo
push
add
lcall
sti
inc
cmp
cmp
mov
sbb
outsl
lods
push
mov
sbb
jae
cltd
jne
sbb
test
incl
movsl
push
xor
cmp
jne
pusha
inc
bswap
scas
cltd
push
xor
hlt
in
dec
adc
fincstp
out
movsl
lahf
outsl
mov
lahf
pop
cmpsb
add
push
push
ret
shrb
mov
pusha
int3
mov
out
popa
inc
mov
xchg
movsb
push
cmp
frstor
loop
mov
loopne
cmp
nop
loope
shlb
sub
cmpsl
stos
in
inc
leave
sti
push
clc
jbe
or
add
insb
dec
xor
or
lcall
add
out
movsl
xchg
ljmp
int
lea
jb
mov
or
cmpsl
insl
jae
std
xchg
mov
aas
mov
jae
inc
test
out
lods
adc
cld
inc
aas
shr
jl
mov
inc
ljmp
sbb
dec
jno
repz
in
push
fmuls
xchg
sbb
ss
sbbl
outsl
add
cmp
hlt
pop
shrl
out
das
iret
xchg
push
sahf
jmp
dec
push
sub
add
inc
mov
cmp
out
push
adc
iret
lock
push
int
dec
call
js
das
ss
mov
jmp
push
icebp
int3
push
sbb
jae
int3
cmpsl
fs
pop
fs
sahf
cmp
xchg
int
xchg
mov
setns
jmp
inc
bound
rcll
inc
add
sub
jne
pusha
shl
movsb
push
cltd
lea
cmp
out
pop
lahf
lds
popf
notb
jp
pop
lods
mov
cmp
cld
lcall
dec
xchg
add
jb
mov
pusha
repnz
xor
sub
insb
dec
sub
lods
std
and
popf
mov
icebp
xchg
xlat
out
lock
outsl
dec
pop
xchg
aas
xor
fldcw
out
enter
inc
lahf
fucom
stos
adcb
mov
add
sbb
add
adc
jle
and
bnd
sub
jne
loop
es
inc
lods
xchg
mov
and
in
xchg
inc
insb
mov
mov
hlt
mulb
jno
popf
xchg
scas
stos
mov
xchg
out
push
insb
call
adc
movsb
dec
dec
cli
jg
stos
cs
in
repz
sub
pop
adc
push
sub
lds
pop
sbb
and
adc
inc
and
cs
inc
pop
mov
sub
dec
insb
into
pop
rcr
sbb
sub
add
xchg
jle
pop
std
push
sub
insb
mov
jb
int
outsl
scas
cltd
dec
js
adc
mov
ret
out
dec
or
jg
aad
inc
fincstp
inc
cmpsl
mov
xchg
movntq
lea
ffreep
and
cmc
push
push
add
mov
outsb
dec
fildll
mov
adc
fsubp
pushf
add
scas
mov
lcall
mov
sbb
mov
push
push
mov
int
sub
xchg
jns
xor
push
scas
push
mov
cmp
sarl
je
cmpsb
adc
cmp
sbb
sbb
stos
sub
dec
xlat
jbe
pushf
in
fnstenv
out
loop
addb
popf
push
inc
mov
pop
sub
lcall
mov
push
mov
inc
jmp
xor
daa
ljmp
push
push
ljmp
loope
xor
imul
jmp
inc
pop
out
inc
and
ret
jmp
ret
mov
stos
push
mov
xor
inc
stos
or
fcomi
sbb
pop
adc
shlb
inc
cmpsl
loop
inc
ror
mov
scas
mov
pop
mov
dec
and
andl
js
icebp
pop
xor
sbb
xor
inc
rorl
leave
mov
test
rcr
jg
push
cmpsb
fs
ja
outsl
mov
mov
cld
pop
jbe,pt
inc
andb
pop
cmpsl
mov
push
mov
mov
inc
out
or
enter
cltd
mov
sbb
or
sbb
jl
sbb
inc
fcmovbe
mov
jle
cmc
push
inc
add
mov
mov
lock
sbb
add
cmc
add
int3
mov
push
in
into
mov
int
xchg
divb
inc
jp
idivb
mov
dec
outsl
shrb
dec
and
cmp
add
mov
sub
jge
int3
enter
xor
mov
ds
repz
in
jo
pop
nop
pop
fmull
int
adc
cwtl
lret
sub
aam
into
fwait
mov
mov
inc
sub
xchg
je
call
jae
and
aad
icebp
and
add
mov
imul
or
dec
mov
psrlq
out
imul
daa
jg
rorl
shlb
ja
dec
hlt
les
adc
push
lahf
push
xor
dec
std
rcl
scas
imul
hlt
xchg
fidivrl
jns
push
add
cmp
pop
inc
sbb
cmc
xor
mov
mov
xchg
dec
loop
or
sub
pop
movsl
cmp
nop
mov
cltd
pushf
lahf
nop
movsl
and
push
mov
add
es
clc
xlat
xor
sub
and
cvtdq2ps
xor
icebp
mov
lret
fucompp
jge
xchg
rcll
dec
lahf
js
das
mov
mov
mov
sbb
push
sbb
xor
aad
insb
xchg
mov
mov
mov
xlat
jmp
daa
mull
xchg
adc
rcrl
shlb
inc
pop
mov
or
out
xor
loopne
pop
adc
jge
std
dec
xchg
mov
cmp
sti
mov
insb
lcall
sbb
mov
test
push
pop
jno
mov
or
mov
inc
inc
sub
push
adcb
rolb
std
cwtl
test
fwait
add
cmp
js
in
cwtl
inc
lock
movsb
xor
cmc
clc
sti
aas
ss
or
mov
gs
dec
gs
popa
arpl
insl
mov
cmpsl
xor
cmc
icebp
add
in
lds
cli
xlat
inc
leave
or
nop
mov
add
iret
push
scas
repnz
stos
mov
cwtl
push
stc
or
nop
fwait
aaa
fistps
shrb
cld
sbb
scas
and
or
jl
cmp
mov
mov
pop
jbe
mov
je
xchg
lods
cmc
mov
loop
ret
push
sbb
inc
cli
int
imul
xchg
push
ds
jno
inc
ss
mov
addr16
mov
dec
into
dec
test
ljmp
neg
pop
fcoms
fistpll
mov
jle
test
pop
add
into
xchg
mov
sbb
xor
dec
clc
ja
mov
fcmovu
hlt
xor
flds
mov
inc
test
ds
repz
pop
mov
fsubrs
add
pop
outsl
cli
lock
ss
in
or
call
pushfw
repnz
fildll
ljmp
add
outsb
loopne
jo
stos
push
rcll
pop
frstor
outsl
sbb
sbb
cmp
add
call
aas
adc
icebp
repz
cld
xchg
jmp
es
test
in
mov
jg
inc
out
add
cmpsl
push
fisttpll
push
mulb
das
or
scas
jmp
gs
adc
js
movsl
sbb
movsl
push
push
xchg
ds
pop
jnp
xchg
sbb
rcl
mov
cmpsb
mov
fildl
jmp
inc
pop
pop
inc
test
inc
mov
pop
jle
mov
rcrl
arpl
sub
rcll
ja
xchg
jecxz
stos
mov
lcall
or
aas
mov
jle
stc
sub
push
sahf
dec
leave
es
andb
push
inc
dec
sbb
arpl
outsl
in
pop
movl
sbb
out
mov
fstpl
or
adc
fwait
xchg
lods
cmp
out
insl
lods
rcr
stos
push
popa
in
sbb
stos
pop
stos
lret
mov
push
arpl
xchg
loope
sub
xor
or
outsb
sarb
mov
mov
inc
movsb
aam
push
enter
inc
in
icebp
cmp
mov
jmp
xchg
mov
stos
repz
add
mov
ljmp
sbb
pop
addr16
jne
or
push
jg
fsubl
cld
cmp
lods
cmp
or
bound
loop
cmpsl
cwtl
push
push
xlat
fucomip
adc
lret
outsl
mov
adc
loop
jle
imul
test
aaa
aas
mov
insb
in
jnp
and
xchg
xor
pop
adc
lret
lret
mov
mov
rcl
and
cwtl
int
enter
int
lahf
sbbb
sub
dec
add
xor
add
pushf
adc
sbb
enter
stc
scas
jmp
popl
add
adc
add
test
jg
pop
imul
aas
rorl
cmp
outsb
outsl
test
cltd
test
and
fwait
je
aas
rorl
rorb
lahf
lret
push
lds
popf
xchg
lahf
icebp
lea
lret
hlt
cmp
pop
dec
daa
and
popa
out
cmp
sahf
lods
push
or
and
ret
aaa
jl
enter
lock
push
mov
dec
inc
mov
add
data16
stc
cmp
scas
xor
in
rclb
pop
mov
sub
aas
push
xor
push
mov
push
repnz
xchg
add
hlt
stos
stos
mov
or
adc
fcoms
push
aaa
movsl
out
sbb
cs
fs
push
pop
adc
cmp
addr16
std
dec
pop
xchg
repz
out
adc
data16
add
nop
mov
cmc
pusha
push
rcrb
xchg
dec
cmpsl
fimuls
xchg
jns
nop
dec
dec
mov
xor
or
js
xchg
movsl
fsubr
mov
je
adcb
pop
cltd
repz
pushf
mov
test
pop
cwtl
lds
imulb
adc
sti
mov
inc
mov
aas
mov
fnstenv
in
xor
out
and
nop
jne
inc
push
and
fwait
push
pop
iret
jae
aas
mov
sbb
pop
fdivr
cmp
rolb
rorb
stos
inc
scas
xchg
or
jge
shll
push
lcall
jmp
mov
fisttpll
dec
jb
insl
fsubrl
jo
mov
mov
xor
dec
and
mov
jno
sti
loopne
adc
das
jne
insb
jg
mov
inc
and
je
xor
fs
lods
cmpsb
into
inc
jp
jecxz
push
add
cmpsb
pop
sbb
inc
sbb
lea
inc
aas
aaa
cmp
jbe
and
sub
fsts
jge
xor
or
mov
js
add
imull
mov
mov
in
jns
stos
pusha
popf
push
push
dec
pop
jno
lret
pop
and
push
lea
es
push
push
iret
cmp
sti
imul
push
mov
faddl
incl
cld
call
movsl
xorl
out
dec
xor
icebp
loop
jl
inc
mov
xchg
or
or
outsl
or
stos
fstps
adc
mov
add
and
out
push
or
sub
mov
push
enterw
out
jb
xor
mov
add
and
mov
jge
fidivrs
sbb
pop
lock
gs
shlb
push
jecxz
cltd
inc
rcl
push
sub
mov
push
int3
pop
negb
lods
mov
int
mov
or
shl
pop
in
fsubl
daa
imul
arpl
fldt
inc
xchg
arpl
orl
ds
scas
pusha
add
inc
sti
aaa
mov
lret
dec
push
movl
dec
enter
pop
dec
mov
xchg
push
mov
cwtl
adc
pushf
dec
jle
or
xlat
rorl
mov
mov
and
dec
mov
call
xor
cmpsb
adc
dec
std
sbb
cld
repz
push
or
mov
cmc
out
mov
lret
sub
test
enter
sbb
cwtl
xchg
negl
pop
mov
sbb
int
nop
int
imull
and
test
rorb
fcoml
jb
stos
push
into
xor
aam
mov
push
mov
addb
pop
xchg
inc
mov
sub
mov
arpl
call
push
aad
fsubs
rorb
xchg
nop
and
ret
les
jg
push
adc
xchg
jg
in
lahf
sbb
les
sub
lods
mov
add
scas
lods
jl,pn
roll
inc
ret
ret
dec
push
js
sub
rcr
jge
pop
aas
cmpsb
push
movsb
mov
pcmpgtb
jo
mov
fisttpll
lret
lea
sub
rolb
add
in
or
cmpl
loopne
lods
mov
mov
mov
cmpsb
mov
jno
pop
dec
push
lods
into
or
xlat
sbb
pop
jo
mov
add
mov
testl
jnp
cli
ja
lock
imulb
pop
inc
jno
mov
in
adc
daa
lahf
push
jle
cwtl
add
cli
push
movsl
adc
mov
ss
cmp
pusha
repnz
add
sub
or
push
add
in
sbb
push
ret
movb
xlat
lock
or
popa
push
push
fsubrl
or
mov
mov
push
mov
jnp
xor
sbb
push
test
fidivrs
sti
dec
scas
jge
cmpsb
sbb
mov
out
cld
and
dec
push
imul
adc
jecxz
dec
rcr
mov
add
cmpsb
stos
xchg
sti
pop
jg
sub
mov
xor
cmp
dec
fmuls
adc
dec
loopne
loope
outsb
mov
pop
lods
mov
or
pop
aam
arpl
mov
xlat
mov
scas
orl
cmp
je
pop
cmc
outsb
cli
xor
rolb
stos
or
stos
daa
sbb
jnp
adc
movsb
pop
xor
fwait
mov
mov
loopne
cmp
xor
adc
hlt
leave
inc
adc
jo
roll
insl
popf
and
and
jne
mov
mov
adc
inc
test
dec
sbbb
xor
inc
mov
daa
pop
or
dec
not
popa
push
xchg
xor
add
pop
inc
mov
test
stos
jecxz
sbb
xchg
sbb
and
inc
sbb
pop
cmpb
ja
loop
sbb
xchg
repz
push
jmp
push
mov
stos
cmovb
jmp
popa
jge
xor
sub
shrb
jae
or
fsubr
dec
inc
and
mov
xor
push
jbe
insb
jns
int
or
adc
pop
dec
rcrb
lea
cmc
cmp
cmp
lret
jne
pop
je
dec
ja
jecxz
add
in
xor
call
test
sub
jge
mov
outsl
push
jmp
mov
or
orl
loopne
mov
sahf
and
or
mov
cmp
or
adc
jg
xor
lcall
cltd
idivb
xor
pop
insb
sub
jp
push
dec
outsb
nop
push
sub
push
mov
loopne
les
cwtl
jmp
inc
fildl
add
pop
mov
xchg
jnp
inc
sbb
add
ds
lret
dec
mov
jae
mov
pop
push
scas
data16
bound
pop
arpl
add
inc
es
pop
mov
sub
sub
lret
or
stos
cmp
mov
in
in
jae
addb
inc
clc
dec
dec
jge
adcb
in
clc
ret
loop
insb
icebp
lods
movsb
pop
ret
rcrb
out
mov
mov
mov
jle
mov
js
enter
out
pop
lods
inc
sbb
mov
pop
add
pop
jae
testb
jmp
leave
subl
dec
rcrb
or
mov
cmpsl
cwtl
scas
jae
push
jl
sub
jg
jne
repz
lahf
and
ficoml
and
outsb
sar
xchg
test
movsb
dec
leave
sti
xlat
xchg
lcall
sbb
inc
xchg
cmpsb
icebp
fistpl
lods
or
dec
mov
pop
cltd
movb
add
dec
push
mov
enter
icebp
repnz
xchg
sub
ljmp
jp
sub
xchg
or
cmp
xchg
sbb
loop
jbe
mov
loope
pop
mov
push
repnz
loop
jmp
inc
subl
fmul
mov
stos
imul
xor
mov
movsl
call
data16
shrb
xor
jp
in
test
cmc
imul
pop
mov
push
test
mulb
mov
rcrb
lahf
cs
and
lret
dec
sub
call
xor
adc
int
cmp
test
mov
push
or
inc
leave
and
enter
dec
inc
cmp
shl
fmul
dec
mov
out
ds
ret
add
sbb
hlt
sahf
popa
mov
or
xor
sbb
push
mov
sbbb
daa
mov
aad
rcrb
negb
adc
cwtl
push
popa
jg
out
loope
push
cmp
fimull
jmp
fnstsw
sbb
test
push
cli
out
and
inc
inc
mov
mov
pop
dec
sub
sbb
hlt
movsb
ficoml
push
mov
push
sub
addr16
sti
pushf
out
lock
mov
sub
mov
jbe
repnz
in
dec
je
clc
pop
dec
mov
jnp
mov
xor
or
clc
pop
sbbb
pop
loopne
insl
xor
xchg
jp
push
push
xor
fcoml
mov
pop
dec
inc
inc
sub
push
std
std
add
mov
repnz
push
fnstenv
ret
jno
and
in
push
test
enter
lock
mov
enter
mov
das
pushf
mov
pop
jp
ror
push
adc
push
sbb
mov
jg
aaa
pop
cmp
lcall
push
xlat
test
fsubs
inc
cltd
in
mov
mov
and
inc
mov
jb
subl
pop
addr16
push
add
cmc
mov
cmc
in
cli
mov
addr16
mov
ds
mov
pop
popf
mov
pusha
aad
fdivrl
or
adc
arpl
int
push
cmpsb
push
lock
mov
xor
mov
popa
outsb
call
stos
cmpl
and
lret
mov
pushf
xor
imul
lret
std
or
mov
into
add
out
add
lods
push
in
insb
jle
ds
out
adc
mov
sbb
mov
enter
inc
idivb
dec
jae
rcll
xchg
cmp
mov
mov
daa
mov
push
dec
pop
stc
hlt
and
in
mov
aaa
cmp
cli
inc
cld
ljmp
lcall
in
and
stos
mov
pop
ret
add
push
sbb
stc
mov
enter
mov
mov
jecxz
jbe
xor
mov
idivl
mov
repnz
daa
push
cmpsb
in
mov
jmp
mov
push
shll
and
xchg
xchg
cmpsl
xchg
fucomi
gs
out
xor
jle
mov
or
outsb
lcall
daa
add
int3
in
sbb
jns
jno
dec
les
test
orb
mov
xor
xchg
fstps
or
mov
gs
adc
jle
pop
and
and
jle
enter
cmpsl
test
test
jae
mov
add
in
inc
into
jno
mov
das
in
or
imul
mov
jb
mov
mov
loopne
stos
xor
pop
mov
jl
and
and
psubsw
lcall
sub
ja
cmp
sbb
in
cmp
clc
sub
xchg
xchg
aas
xor
xor
sbb
test
mov
outsl
or
push
negb
mov
sbb
shll
test
imul
mov
fnstsw
ss
mov
pop
jne
sarb
mov
xor
mov
add
inc
adc
iret
mov
iret
xchg
jns
call
pcmpgtd
mov
rolb
into
jns
insb
pop
push
mov
jns
jge
sbb
inc
out
in
sbb
ret
adc
movsb
cmpsb
subl
repnz
shr
fldl
jnp
scas
stos
jp
sub
imul
mov
insl
enter
push
cltd
daa
push
test
sub
pop
jg
sub
pop
in
jns
push
add
ucomiss
movsl
loope
and
fwait
mov
xor
xor
or
inc
loop
insl
sbb
cwtl
inc
rcll
imul
in
iret
pavgw
pushf
clc
jb
arpl
fldl
push
cmp
lcall
xchg
pop
mov
fwait
jb
jp
cld
mov
sub
or
rolb
jg
sbb
cltd
and
cld
cmp
mov
mov
rol
cmp
in
mov
stos
das
mov
lea
cmp
xor
jo
jbe
cmp
xchg
mov
aam
ficompl
adc
add
cmp
insl
inc
xor
xlat
xchg
scas
stos
je
stos
inc
xor
mov
movsl
ds
ret
arpl
imul
orl
sub
shlb
outsb
and
push
xchg
lea
cmp
or
or
add
enter
aaa
sub
in
aas
jne
std
add
sbb
cmp
fwait
scas
mov
sahf
dec
cmpsb
jbe
push
cmpb
pop
mov
jns
test
loope
mov
movsl
mov
data16
out
or
pop
lret
add
add
lret
or
pop
pusha
sub
or
out
repz
pop
movsb
icebp
mov
loop
jbe
jl
int3
inc
aad
push
aas
sbb
out
in
mov
add
xor
rclb
call
cli
adc
xor
pop
xchg
loope
inc
hlt
mov
dec
cmpsl
and
test
xchg
mov
push
xchg
xchg
cmp
jnp
imul
add
movb
push
fistpl
push
push
inc
cmpsb
loop
sub
cld
loop
adc
jmp
inc
dec
ss
stos
dec
js
stos
push
xchg
leave
aas
les
fmuls
dec
cwtl
mov
jle
jbe
or
out
sub
je
mov
pop
mov
sbb
dec
cmp
jbe
popa
pop
push
cltd
lods
xchg
int
cwtl
and
mov
insb
in
fdivl
xor
pusha
leave
inc
insl
xor
pop
jb
mov
add
jns
fwait
push
fcoml
pushf
sbb
in
icebp
xchg
ret
and
cmc
xchg
dec
xchg
inc
lock
push
push
mov
mov
and
xor
aaa
add
xor
dec
xor
inc
imul
mov
test
sti
push
mov
mov
inc
adc
pop
int
or
and
pop
or
pop
jns
mov
fs
push
dec
and
cltd
scas
sbb
lahf
inc
mov
add
fstpt
push
ret
dec
movb
mov
mov
je
test
xlat
mov
mov
adc
xor
sbb
loop
fld
movsb
sahf
pop
inc
xlat
lret
mov
dec
sub
test
adc
clc
negb
popf
jno
add
out
loop
cmp
push
sbb
push
push
pop
mov
fdivrl
push
lret
pushf
call
mov
les
xor
std
std
test
fcompl
fstpt
repnz
mov
mov
das
pop
cmp
add
xchg
aam
aam
mov
aad
add
cs
ljmp
in
cmp
lods
sbb
pusha
mov
icebp
pop
mov
and
leave
and
test
leave
mov
inc
loop
fsubrl
push
adc
pop
jle
lahf
xlat
arpl
mov
push
test
xchg
mov
mov
into
out
int
xchg
fcoml
fcmovne
pop
lds
push
loope
mov
pushf
insl
shlb
push
rol
and
clc
es
scas
fisttps
fists
das
data16
xchg
cmc
lods
xchg
or
mov
cmp
jae
aaa
dec
mov
fabs
dec
and
clc
popf
mov
stos
add
xchg
ret
ds
es
pop
and
aad
icebp
lret
adc
sbb
add
push
add
mov
push
xor
and
inc
push
clc
call
jne
stos
stc
cmp
pop
dec
movb
add
sub
bound
ud0
jl
repz
mov
psllq
push
subb
push
pop
cwtl
sbbb
sbb
pop
int3
cmp
xlat
jnp
pop
adc
fistps
nop
shlb
lods
sbb
filds
mov
mov
imul
jle
xchg
cwtl
or
cmc
fsts
xchg
cmp
sub
and
jns
arpl
lea
jp
jp
cmpsl
add
pusha
jns
cmc
mov
push
aaa
and
sbb
xchg
lcall
insl
clc
int3
in
mov
push
pop
in
addr16
lods
sahf
out
inc
add
aad
enter
scas
aaa
int
or
int3
mov
imul
or
and
sbb
bound
sahf
or
mov
ja
repz
mov
jl
push
fsubrp
aas
jecxz
adc
scas
jmp
adc
aas
pop
adc
test
lock
sbb
cli
imull
outsl
add
push
loop
xor
xchg
pop
jmp
xor
lret
scas
sti
repz
jo
xchg
mov
mov
dec
test
rcr
stc
jg
inc
jge
in
mov
sub
adc
outsl
jb
inc
in
es
xor
in
mov
lret
or
mov
imul
pop
mov
push
xor
adc
push
pop
ljmp
rorl
add
mov
mov
mov
test
negl
arpl
jae
pop
pushf
inc
js
movsb
xchg
mov
lods
or
fistpll
scas
jns
sub
mov
mov
fcoms
mov
lcall
sbb
jp
pop
insb
cmp
push
popf
push
add
hlt
jnp
jmp
aas
and
outsb
jo
dec
push
mov
sarb
ja
fwait
xor
sub
mov
ret
jb
adc
mov
imul
sbb
xchg
in
add
int3
and
xor
int3
fistpl
outsl
inc
fcomi
ret
insb
push
in
lret
mov
dec
add
jmp
pop
mov
dec
loope
mull
daa
and
fcompl
mov
mov
mov
sub
add
jbe
add
dec
fisubrl
out
lea
cltd
iret
jo
or
cltd
pop
mov
cld
inc
sbb
subl
je
call
ret
add
inc
sbb
aas
sub
cltd
js
xor
xchg
popf
sbb
mov
mov
jmp
lods
xchg
push
sub
jecxz
imul
adc
enter
xor
out
cld
insl
je
rclb
lods
test
push
jecxz
sbbl
leave
out
aaa
inc
rol
cmp
or
or
repnz
pusha
rcrl
sub
shlb
stc
aas
js
jecxz
cli
das
int3
jbe
cmp
pop
mov
jg
jle
xor
hlt
inc
jle
ljmp
aaa
sti
xchg
aad
or
cmp
js
fisttpl
test
adc
arpl
test
mov
cmpb
rolb
ljmp
movsb
xchg
dec
push
rol
js
inc
mov
mov
push
xchg
mov
mov
mov
inc
ljmp
pushf
popf
push
push
pushfw
adc
jo
sarl
pop
jecxz
xchg
fstp
fistl
gs
mov
cs
mov
sbb
or
ljmp
nop
xchg
mov
inc
dec
sbb
xor
or
aas
pop
xchg
lahf
add
lret
std
in
jecxz
and
lret
cmp
xor
imul
mov
and
stos
mov
in
sti
fcomip
xchg
mov
cwtl
push
cmpsb
repnz
fcomp
add
xchg
add
cmp
jae
adc
and
lods
in
push
dec
cmc
push
ds
arpl
mov
es
sbb
jbe
xchg
inc
fnstenv
dec
cld
mov
sbb
mov
sub
iret
aaa
js
xchg
out
out
jle
pop
jle
insl
pop
subl
push
jle
sbb
xchg
fcoms
ds
or
mov
jl
add
mov
inc
sub
pop
insl
mov
stos
inc
push
clc
test
and
nop
cmp
dec
adc
dec
push
les
or
lret
pushw
jne
inc
ds
jge
inc
inc
cmp
andb
push
ficompl
xlat
stos
dec
mov
lret
mov
xchg
lahf
sub
xchg
js
jp
jnp
fildl
jbe
rolb
mov
les
or
xor
mov
mov
mov
add
loop
sub
mov
test
aaa
shlb
inc
aaa
clc
cmp
add
dec
stos
adc
scas
xor
inc
insb
out
xlat
roll
cmc
jo
arpl
dec
sbb
orb
sub
pop
outsb
or
arpl
into
mov
mov
je
pop
mov
xor
xchg
xor
xchg
adc
fmull
faddl
pop
inc
cmpl
test
adc
add
jg
fwait
xor
repz
gs
jbe
ja
or
or
dec
movsb
pop
mov
or
jae
adc
add
ja
out
inc
cmp
push
push
and
adc
and
xor
push
test
ret
sahf
xchg
mov
aad
ss
or
xor
adc
pop
idivl
lahf
out
mov
hlt
pop
adc
inc
add
ss
xchg
iret
jae
sahf
mov
test
pop
mov
test
aad
mov
cmc
out
xchg
adc
adc
and
into
fidivs
xor
lock
inc
xchg
fiaddl
lods
imul
mov
pop
stos
roll
cltd
out
adc
not
inc
int
push
lock
or
ret
movsl
cmp
orl
sbb
out
ds
shlb
xchg
out
daa
ror
fs
jne
xchg
jo
push
push
xchg
mov
adc
lock
push
test
clc
jne
imul
xor
or
mov
mov
push
lret
cs
movsl
sub
push
jbe
mov
add
lds
sbb
jg
and
pop
mov
imul
jp
les
dec
xchg
mov
lds
movl
lret
ret
and
in
add
cltd
cmpsb
mov
insl
outsl
stos
decb
sub
add
repz
enter
inc
cwtl
lea
cld
mov
cmp
jbe
pop
sbb
add
mov
cli
pop
test
jb
sbb
sub
sti
lret
out
mov
cmpsl
xchg
or
cmp
xchg
imul
imul
xor
jae
in
pop
movsb
adc
dec
mov
xchg
xchg
ljmp
loop
popa
adc
push
or
jo
mov
xor
jno
push
mov
pop
push
das
add
cmp
add
and
xchg
and
je
mov
nop
stos
fwait
lea
add
xchg
xchg
adc
xor
add
push
push
and
jns
shrb
orb
jnp
gs
pop
or
mov
pusha
mov
mov
shl
fdiv
arpl
dec
outsl
sbb
icebp
pushf
mov
hlt
orl
xor
adc
popf
stc
or
inc
imul
cmp
mov
pop
push
jo
jne
cmpsl
sub
loopne
cmp
sub
jg
scas
mov
push
lods
push
das
adc
lods
fcmovb
int
xor
pushf
aam
sub
out
into
push
dec
mov
sub
stos
fwait
stc
pushf
xor
leave
clc
mov
inc
cld
push
sub
lahf
ljmp
mov
cltd
add
push
jp
clc
je
xchg
js
pop
fmulp
popa
addr16
mov
fidivrs
mov
popf
imul
sbb
jecxz
inc
mov
cmp
jp
lea
ss
inc
jne
push
gs
cmp
add
jle
inc
cmpsb
cmpb
push
fisttpll
adc
mov
dec
mov
cmp
movsl
xor
ret
hlt
adc
pop
lahf
inc
icebp
cmpsl
jmp
xchg
daa
and
call
loope
fwait
loop
xchg
inc
cwtl
scas
lock
push
pop
rorb
test
loopne
or
dec
and
xor
decl
test
inc
inc
xlat
inc
jno
ret
rcrb
mov
movsb
xchg
pop
xchg
fsubl
outsl
mov
lods
out
fwait
jnp
mov
out
push
movsb
push
xchg
sbb
cld
test
lods
insl
jp
push
push
loope
xrelease
jmp
push
mov
sub
bound
jl
xchg
mov
popf
or
in
push
mov
js
movsl
and
jb
sahf
repnz
adc
test
punpckhwd
outsl
inc
lock
mov
ffreep
js
xchg
push
cmp
mov
mov
repz
out
fs
push
dec
xor
iret
mov
out
mov
out
xchg
sbb
adc
ljmp
push
add
out
cmp
mov
repnz
idivb
ja
ror
mov
cmp
inc
sub
add
pop
pop
push
add
xor
inc
enter
imul
or
fadds
in
inc
mov
das
rol
xchg
mov
dec
aaa
xor
mov
aaa
roll
arpl
dec
xor
sub
add
imul
rol
or
jmp
movsl
aas
pop
stc
jl
jle
mov
fcmovnu
mov
outsl
cwtl
fcoms
mov
adc
jmp
push
jns
jecxz
clc
xchg
scas
pop
xchg
jmp
aas
and
xor
dec
adc
aaa
clc
push
inc
lahf
cmpsl
lods
cld
aas
cld
cmpsl
mov
sbb
push
xor
jns
orb
bound
aam
mov
add
inc
adc
add
in
popl
bnd
popa
hlt
mov
inc
sahf
push
popa
dec
cmpsl
and
popa
nop
jl
imul
add
mov
test
loopne
imul
int3
out
test
sbb
cmp
arpl
mov
xchg
testl
lods
cmp
out
mov
sub
sub
fdivs
xor
mov
stc
add
stos
inc
sbb
adc
test
repz
adc
pop
cmp
stc
insl
ljmp
es
ret
out
adc
ljmp
das
jl
sbb
in
divl
rcl
push
push
shll
pop
out
cmova
push
fistl
repnz
or
jbe
lea
xchg
lret
dec
cmp
lahf
out
cwtl
pushf
and
mov
xor
iret
lret
or
fistpll
aaa
out
mov
xchg
inc
mov
addr16
mov
pushf
loopne
sbb
cwtl
and
or
inc
pop
sub
mov
repz
test
jmp
shrb
push
lret
out
pop
mov
adc
aas
data16
dec
call
lret
mov
lock
js
ret
test
push
push
pushf
pop
push
pushf
sar
jb
mov
lds
push
insl
add
inc
stos
mov
add
pop
stos
jle
mov
inc
ficoms
shrb
lret
adc
pop
pop
out
mov
int
pop
or
scas
and
andb
add
ret
xchg
ficomps
in
iret
dec
movsb
sub
pop
out
mov
int3
mov
iret
iret
mov
xchg
hlt
push
sub
movb
shr
add
add
and
inc
add
ljmp
lahf
jno
fistpl
and
sub
mov
xor
cmp
pop
jmp
aam
jns
cmp
dec
aaa
xor
test
movl
in
cltd
addr16
out
dec
andb
cltd
cmp
mov
pop
neg
push
or
add
xchg
add
rorl
jnp
inc
pop
addr16
rcrb
fs
push
imul
pop
stos
data16
movsl
cli
cs
mov
rorl
xor
xchg
and
cld
pusha
xor
sub
lcall
cmpsb
or
jl
pop
jnp
xor
jmp
je
mov
xlat
sub
add
mov
scas
insb
push
xorb
imul
pop
cwtl
jne
jb
mov
xchg
dec
je
sbb
dec
lret
add
mov
dec
xlat
push
xlat
into
fsubs
sarb
xchg
push
fstp
push
ljmp
aad
out
mov
movsb
hlt
les
stos
mov
loopne
dec
xor
jg
jb
stc
mov
adc
dec
inc
xchg
xorl
pusha
lods
cmp
aad
movsl
pop
stos
stos
cli
sbb
mov
inc
fimuls
test
xor
insb
decl
adc
bnd
jle
shrb
sbb
push
and
push
ljmp
dec
adc
jg
sub
mov
add
mov
dec
and
add
inc
pop
inc
sub
leave
push
data16
add
leave
xchg
punpcklwd
push
xor
fists
mov
or
push
xchg
cmp
push
xchg
jnp
mov
out
insl
out
xlat
cli
hlt
dec
cmpsl
aas
in
push
or
test
and
fcomps
or
and
jns
or
scas
out
movsl
jmp
mov
movsb
adc
cmpsl
cwtl
arpl
es
fisubrl
imul
fimull
mov
sti
lret
mov
add
mov
popf
mov
adc
out
jnp
xor
fidivrs
lods
and
scas
fprem
cltd
xor
add
rol
pusha
pusha
and
add
mov
out
mov
push
push
fldl
sbb
xlat
push
jb
pop
xor
xchg
stos
fsubl
hlt
mov
int3
shlb
xor
jle
push
push
add
and
mov
adcb
mov
pop
outsl
pop
repnz
mov
pop
or
syscall
inc
sbb
push
call
sbb
adc
cmpsl
scas
push
adc
sub
add
pop
lds
cmp
sbb
popa
and
clc
push
leave
clc
mov
sub
std
mov
pop
or
jg,pn
iret
stc
push
add
or
cmpsl
jmp
lret
loopne
mov
cmp
cmp
and
lods
add
rorb
es
mov
adc
enter
pop
sbb
xor
cs
aam
outsl
out
daa
cmp
in
adc
mov
mov
movsl
hlt
insl
movb
inc
ds
push
je
sub
xchg
xor
fsts
jp,pn
in
out
pop
push
in
cmpsl
inc
ljmp
int3
repnz
dec
mov
sahf
shlb
jp,pn
add
fnstsw
shrb
scas
push
xchg
mov
enter
aas
cltd
adcb
sub
pop
xor
popa
dec
sub
hlt
or
dec
xor
mov
pushf
xlat
push
adc
adc
jmp
push
or
sbb
mov
imul
mov
cmp
inc
cmp
dec
subl
dec
and
jle
xor
fiadds
and
jecxz
or
and
sti
hlt
movsl
shrl
ss
faddp
add
stos
hlt
leave
mov
sbb
testl
into
cs
pop
idiv
adc
pop
mov
mov
daa
cmp
sbb
xchg
pop
ja
ljmp
mov
inc
pop
pop
mov
fiaddl
cmpsl
jbe
rcl
ret
jg
sbb
pop
shl
sbb
add
insl
sub
fildl
lods
xchg
xorb
decb
push
popf
mov
mov
popa
mov
ret
sub
mov
cs
das
cwtl
add
out
sahf
sbb
andl
dec
cltd
and
pop
or
fs
mov
sub
lods
fisubrl
dec
sti
mov
inc
pop
pop
cwtl
or
scas
pop
xor
mov
cmp
mov
pop
pop
icebp
mov
push
adc
dec
jne
clc
jle
mov
fs
imul
jb
pop
xor
mov
jns
and
or
xchg
cmp
lcall
xor
repz
jmp
xor
popa
inc
adc
mov
gs
push
loope
lcall
xor
dec
movsb
add
xchg
cmp
mov
cmp
pop
mov
add
adc
inc
outsl
cmpsb
mov
nop
lret
test
xor
add
stc
addr16
pushf
add
mov
xor
push
mov
test
sub
popf
xor
lret
push
pop
sahf
idivl
stos
push
pushf
popf
pushf
xchg
sbb
jno
dec
cmpsl
xchg
loop
sub
int
lock
out
repz
int
inc
lret
adc
push
popf
inc
mov
xor
mov
cmp
jmp
mov
imull
scas
movsb
sub
test
lea
push
shll
icebp
xchg
push
mov
xor
data16
pushf
bound
cwtl
adc
mov
sub
jp
jb
push
cmp
sbb
dec
in
inc
stos
lret
or
loopne
inc
cwtl
mov
int3
lret
out
sub
xor
outsl
cwtl
call
xor
loop
daa
cwtl
test
or
adc
jae
lahf
aas
and
iret
enter
rcrl
scas
xchg
xchg
addl
das
fisttpl
xchg
mov
in
xor
fsts
loopne
sbb
loope
inc
loopne
ret
or
and
mov
fs
das
cmp
mov
sbb
idivl
rcrl
pop
adcl
or
inc
xchg
fcoms
dec
and
inc
adc
icebp
int3
jmp
test
mov
arpl
pop
aad
xchg
push
inc
aam
fmul
andb
icebp
repnz
imul
testl
sti
out
aad
mov
leave
popa
jns
push
jge
add
mov
pop
push
cwtl
stos
xchg
inc
in
sub
rclb
lods
das
ror
mov
mov
stc
add
daa
xchg
and
sbb
mov
daa
pop
xlat
fcmovnu
inc
aaa
imul
pop
push
inc
lcall
xchg
test
push
sbb
idivb
xchg
stc
inc
movsl
ret
das
add
cmp
cmp
out
push
adc
lea
pop
xchg
mov
jle
add
hlt
lahf
mov
arpl
or
cld
add
stos
xchg
adc
xchg
daa
lcall
loop
in
dec
pushf
fs
into
push
pop
icebp
mov
out
push
push
xchg
clc
jnp
pop
addr16
mov
in
pop
inc
mov
cmp
mov
sbb
fiaddl
cs
je
movsl
cmpsl
loopne,pt
jno
mov
addr16
sbb
push
mov
in
jge
fisttpll
push
add
mov
cltd
mov
fcmovnu
std
aas
fisubrs
call
fs
inc
mov
push
ss
iret
or
mov
pop
and
and
insl
mov
pop
data16
xor
arpl
cmpsl
mov
fmulp
imul
add
pop
cmp
mov
sbb
jmp
rcr
lea
pop
dec
mov
out
cmp
fwait
cmpsb
fstpt
roll
jmp
mov
fwait
inc
lret
rcrb
push
sbb
mov
cmpsb
sahf
test
sbb
pop
mov
lret
dec
lea
mov
sbb
lods
jle
cs
pop
mov
jbe
paddsb
push
aaa
xchg
and
es
iret
fdivp
mov
dec
inc
xor
repz
sub
std
mov
insl
pop
xchg
or
inc
outsl
idivl
outsb
xchg
pop
sbb
push
xchg
mov
push
outsb
fdivrs
test
in
or
stos
imul
pop
roll
repz
fwait
mov
jp
sbb
and
cmp
cld
xor
loope
dec
cli
jp
in
jl
mov
and
xchg
je
aad
popf
in
push
jno
and
dec
cmp
lcall
sbb
and
add
int
rorb
dec
outsb
dec
push
bound
inc
std
pushf
jo
push
shll
pop
push
pop
jecxz
divb
lahf
inc
adc
xchg
cmc
gs
xchg
hlt
leave
shl
stos
jno
lcall
in
mov
ret
mov
sahf
add
dec
push
inc
int3
sbb
mov
dec
fs
mov
pop
adc
mov
test
inc
sub
loop
jp
icebp
or
fdivl
sbb
cmp
push
test
clc
pop
lcall
xor
pop
cli
jl
cmp
xlat
cld
imulb
movsb
mov
call
mov
mov
cli
dec
nop
insb
push
xchg
pop
lahf
addl
jg
insb
dec
xor
loope
ret
dec
or
out
rcl
fstpt
mov
popf
addr16
or
cmpsl
push
scas
mov
test
mulb
sahf
test
mov
popa
jmp
ffreep
loop
push
sbbl
xor
pop
in
add
adc
fs
hlt
push
mov
int3
xchg
mov
mov
or
imulb
push
add
jb
clc
fs
and
cld
push
mov
sub
insb
les
test
xchg
nop
pushf
jne
and
push
mov
fs
nop
pop
shll
lcall
repz
add
cmp
inc
dec
pusha
cmp
insl
loope
xchg
test
add
out
push
mov
push
es
out
xchg
jns
inc
sahf
cmpsl
fwait
mov
std
pop
push
addr16
fwait
out
xchg
sbb
push
push
jnp
xor
rcrl
mov
aad
sbb
pop
shll
add
mov
inc
aam
movsl
test
add
ljmp
lret
jle
dec
or
test
xchg
sbb
ret
sbb
jl
fadd
stos
outsl
push
shrb
lods
sub
movsl
pop
sarb
loope
push
or
push
adc
jl
and
cmp
jno
or
hlt
in
adc
mov
xor
lcall
sbb
daa
mulb
repz
dec
pop
mov
jne
popa
aaa
xlat
xor
adc
jmp
shrl
pop
pusha
push
adc
sub
xchg
ljmp
ljmp
and
js
sbb
push
pop
mov
sub
dec
in
fidivrs
xor
pusha
pop
std
je
push
cmp
fwait
pop
mov
cs
cmp
iret
divb
mov
dec
mov
movsb
push
dec
xor
fstpt
mov
lret
daa
sahf
fstl
mov
stc
std
jge
dec
xchg
mov
mov
mov
xor
mov
cmp
add
adc
mov
inc
jle
clc
rorb
ds
scas
mov
sub
popa
ret
add
test
int
sub
or
or
int3
push
jo
test
inc
mov
fstpt
scas
add
mov
stos
push
iret
cmpb
cmp
inc
xchg
sbb
loopne
lock
sub
sar
popa
mulb
inc
sub
nop
pop
ret
ja
push
scas
xchg
jmp
add
or
popf
xor
insl
inc
ret
jg
mov
mov
mov
sbb
and
addr16
fwait
inc
decl
das
cmpsl
xchg
xor
mov
mov
or
mov
dec
in
mov
sbb
ret
mov
push
shll
mov
in
mov
fidivrs
stc
repz
pop
shrb
mov
cltd
ja
imul
xchg
sub
out
dec
xchg
cwtl
imul
dec
arpl
adc
xchg
dec
scas
cld
mov
push
mov
jle
add
and
pop
xchg
jno
jae
push
and
lods
xchg
or
not
fsub
js
mov
iret
push
fadds
push
mov
jg
and
jmp
sub
rcrb
and
sub
and
mov
ror
aad
ds
pop
in
dec
sbb
mov
jo
in
leave
out
movsb
loop
stos
lock
mov
stc
dec
pop
mov
lret
push
sub
mov
idivb
inc
lock
add
mov
adc
inc
jne
add
cmpsl
js
sti
dec
mov
nop
addr16
xor
in
imulb
dec
daa
dec
inc
sub
cmc
or
or
addb
into
pop
fisubs
sti
inc
shlb
fisubl
jb
adc
push
pop
xchg
push
add
lret
pushf
stos
push
jle
sbb
movsl
lds
into
and
std
in
sub
fisttpll
movsb
add
fldt
pop
in
jo
movsb
hlt
push
xor
ja
mov
xorb
fbld
cmc
daa
imul
outsl
cmp
popf
push
std
inc
jae
push
lock
fnstcw
and
sub
mov
dec
pop
lock
fmull
push
incl
pop
out
mov
pop
jbe
pcmpgtw
jo
addr16
jns
mov
sub
mov
inc
fcmovnbe
pop
dec
pop
jno
cli
test
jne
fs
leave
movsl
mull
in
outsb
in
sub
xchg
mov
pop
or
data16
push
xchg
add
adcb
mov
cmp
nop
inc
daa
and
and
arpl
es
push
or
xchg
imul
out
push
jno
data16
mov
cmp
jecxz
dec
xor
xchg
sub
xchg
pop
lock
gs
xchg
lret
push
pusha
mov
popf
orl
sahf
stc
sub
dec
push
pop
daa
fistpl
adc
lock
insb
push
inc
mov
cmp
or
adc
enter
cmp
ror
loop
adc
daa
xchg
mov
enter
inc
insb
mov
adc
das
push
das
sub
ljmp
sahf
aas
outsb
out
sarb
aad
xor
call
pop
sti
inc
loope
adc
adc
mov
push
mov
sahf
fimull
mov
fwait
clc
pop
insl
out
pop
imul
roll
stc
pop
ret
vmread
mov
in
jecxz
xchg
or
mov
lds
sarb
aas
scas
mov
test
sub
shlb
or
es
add
add
pop
cmc
int3
add
sub
dec
xor
dec
jns
push
pop
cmp
mov
scas
xorl
pop
in
and
push
pop
or
aas
xor
pop
fmuls
pop
xchg
mov
out
js
dec
insb
sub
pop
xor
sub
push
hlt
das
decb
leave
adc
out
mov
jmp
sbb
push
gs
mov
adcb
jb
sub
in
inc
cld
stos
jl
inc
jmp
rcrb
outsl
sbb
cmp
pop
inc
lcall
fucomip
or
loopne
clts
xchg
sbb
mov
or
xchg
jbe
mov
xchg
jmp
pop
aas
pop
push
mov
adc
std
divb
add
test
mov
and
test
or
leave
inc
xchg
testb
dec
mov
push
and
jae
in
in
mov
sbb
xlat
push
imull
lret
or
sub
cmpsl
loopne
popa
inc
cwtl
inc
pop
sub
mov
pop
or
mov
test
ss
and
mov
lahf
jmp
xchg
lods
sti
adc
jb
jge
lcall
mov
or
jg
pop
stc
mov
in
pusha
cmp
jno
inc
pop
stos
push
and
es
repnz
mov
mov
mov
sbb
loope
pop
or
cmp
mov
xchg
imull
dec
push
daa
bound
adcb
xor
fldl
jg
sti
sub
loope
jp
dec
icebp
je
jb
scas
mov
cltd
cmpsb
ret
push
mov
loope
or
stos
pop
jp
pop
xor
and
inc
push
cwtl
add
movb
jae
ficoml
mov
sti
repz
mov
push
loopne
jg
jnp
and
mov
daa
xchg
inc
and
cmpsl
loopne
test
insl
pop
and
scas
aas
insl
fcomps
roll
nop
cmp
test
push
mov
mov
gs
dec
insb
mov
clc
out
xchg
jno
ljmp
mov
int3
jmp
mov
mov
imul
xor
adc
pushf
jmp
cld
push
inc
lcall
mov
and
lds
aaa
jge
sbb
sbb
daa
push
int3
fdivrs
pushf
mov
adc
loope
fwait
pop
xchg
cli
addr16
and
cld
or
pop
lcall
cmpsb
xchg
rorl
add
dec
inc
mov
imul
push
xchg
add
adc
jle
pop
cmpsl
out
data16
insl
sbb
jg
dec
mov
movsb
jge
mov
or
call
mov
mov
popl
jl
sub
jno
mov
cmp
popf
out
jp
popa
and
ret
lock
icebp
cs
push
lea
sbb
imul
adc
mov
aam
ja
ljmp
xchg
lds
adc
cmpsb
into
mov
add
hlt
stc
cmp
leave
mov
and
sub
lods
push
and
outsb
cmc
repz
or
fwait
and
loopne
or
push
dec
adc
cmpsb
sti
aaa
lods
mov
adc
repz
flds
clc
not
push
xor
jo
inc
sbb
fdivl
mov
jecxz
cmp
mov
ret
out
test
call
pop
dec
xchg
ret
addr16
into
push
stos
jl
push
dec
push
or
daa
pop
rclb
mov
clc
out
pop
fadd
and
loopne
sub
adc
pop
out
pushf
push
lock
call
je
push
sub
nop
fdivrs
mov
mov
test
sbb
xchg
mov
mov
xlat
pop
in
cmp
push
mov
ss
mov
push
sub
dec
fstpl
pop
add
mov
call
scas
cmpsb
sub
sub
pop
mov
fsts
xchg
iret
fcomi
mov
sub
aam
popf
cmp
dec
sub
xchg
jb
fmuls
xor
mov
iret
pop
cmpsb
push
ljmp
inc
and
jge
cli
cmpsl
out
lcall
mov
mov
nop
mov
mov
faddp
ret
fidivrs
sub
xchg
call
icebp
adc
adc
out
mov
mov
or
loop
lea
xor
sub
adc
and
mov
shll
xchg
mov
cld
sub
jecxz
ss
lcall
or
dec
out
addb
out
shll
dec
jp
outsl
xchg
mov
fisubrl
jl
mov
mov
mov
xor
and
jae
lcall
sub
jg
sbb
jle
dec
inc
inc
jno
mov
mov
inc
scas
inc
pop
jecxz
xchg
inc
popf
mov
sub
mov
push
xchg
insb
push
lods
cmp
sti
scas
add
aam
je
jmp
push
jle
aad
xor
inc
jnp
mov
and
repnz
int3
lods
dec
sbb
mov
xlat
push
push
loope
mov
mov
dec
lret
sbb
gs
dec
mov
lcall
xchg
cli
jp
xchg
pop
orb
clc
add
add
in
subb
sub
push
adc
xor
jmp
mov
inc
arpl
mov
sub
pop
or
dec
scas
cltd
pop
pop
pop
add
sahf
repz
andl
stc
hlt
xor
cmp
loope
mov
orb
popf
xor
adc
push
xchg
ret
sbb
scas
adc
mov
std
rcrl
outsb
sti
dec
cmp
inc
pop
mov
dec
imull
xor
or
in
pop
gs
pop
cmp
loopne
sub
out
js
dec
inc
cltd
or
xchg
dec
pop
nop
cmp
mov
neg
test
xor
mov
sbb
orl
ret
push
insb
in
incb
gs
jecxz
and
and
sub
cmp
push
fsubrl
aaa
dec
test
xor
pusha
dec
mov
ret
js
pushf
pop
dec
test
cmp
jle
xchg
push
pop
imul
repnz
cmp
cmp
sbb
jns
or
pop
mov
idivl
cmpsl
insl
cmp
push
cmp
push
dec
loop
push
cmpsb
jp
andb
call
sahf
in
mov
dec
rolb
and
data16
xchg
loopne
sti
stos
lods
jbe
push
cmpsb
jns
mov
sub
jle
das
gs
dec
mov
mov
push
mov
add
xorb
pcmpgtb
adc
les
fstpl
jle
lcall
dec
jg
jns
into
je
xchg
repz
cmp
adc
pop
adc
pop
outsl
mov
cmp
js
jns
jg
cmp
xor
xchg
mov
ljmp
and
filds
daa
arpl
mov
push
out
xchg
fsub
cmp
and
adc
fimull
test
mov
data16
cmp
and
leave
xor
and
popa
adc
comiss
popa
mov
mov
fsubrs
icebp
jbe
xchg
pop
ss
ljmp
popf
cmp
mov
popa
imul
cltd
jl
jae
sbb
mov
sbb
mov
push
cmpsb
add
pop
loopne
inc
xor
sub
fs
call
xor
test
mov
fildll
cld
pop
sub
lea
orl
jl
mov
xchg
cmpsb
ret
call
leave
fimull
cmp
out
push
mov
adc
pop
sub
data16
sahf
fsts
fwait
cld
nop
or
xchg
shll
in
mov
in
mov
jb
push
xchg
stc
clc
push
dec
mov
mov
sarb
xchg
pop
scas
xor
adc
loope
and
mov
cltd
mov
fimuls
xor
ja
jb
in
mov
and
dec
imull
dec
cmc
push
jb
aam
and
in
fwait
inc
lods
rolb
add
insb
sbb
lahf
xchg
xchg
stos
mov
sub
sar
leave
repnz
iret
sub
lods
pop
hlt
sub
mov
mov
adc
je
xchg
cwtl
dec
shll
lods
je
popf
inc
xor
jp
rcr
fcompl
or
maskmovq
add
dec
dec
pop
sbb
mov
hlt
sbb
dec
fisttps
mov
jo
mov
stc
pop
jle
std
inc
jb
ret
rorl
mov
mov
js
mov
in
adc
jnp
push
pop
push
jae
mov
sti
xor
mov
outsb
adc
xor
jmp
lcall
pop
mov
push
addb
push
pop
mov
dec
rorb
sti
sbb
pop
outsl
cmpsb
stos
sbb
sub
hlt
pop
mov
ficoml
out
loope
adc
sub
add
test
jecxz
icebp
sub
pop
lock
in
and
lods
cld
or
adc
inc
orl
adc
mov
jno
adc
push
cmpsb
lret
pop
shlb
cltd
push
adc
push
lea
dec
adc
jno
mov
sbb
enter
cmp
add
loope
cmpsl
cmc
test
cmp
das
cltd
mov
jl
jl
and
ss
outsb
pop
mov
dec
shrb
xorb
cs
inc
hlt
xor
jae
push
dec
dec
mov
pop
pop
mov
jl
xor
cwtl
int
add
cmc
jle
nop
test
fsubs
sub
imul
cwtl
sbb
pop
lock
sbb
inc
or
pop
mov
jecxz
mov
stc
int
inc
push
fdivrl
imul
push
push
test
or
jge
mov
mov
insb
std
test
je
test
dec
outsb
pop
out
add
in
push
and
addl
rcl
mov
jle
xor
add
push
xchg
sbb
xchg
xor
std
mov
dec
mov
daa
mov
or
inc
xor
in
aas
inc
mov
jnp
mov
addr16
add
and
xor
insl
lret
xor
push
adc
xchg
lahf
dec
and
inc
sub
xchg
iret
sub
cmp
xor
xor
xchg
int3
cmp
repz
cltd
idiv
negl
aaa
dec
test
ret
popa
shrl
ret
lods
inc
adc
lret
cld
push
add
lcall
dec
and
adc
mov
cmp
clc
ret
aad
xchg
xor
popf
mov
jl
mov
inc
test
jg
mov
cld
int
ljmp
cmp
fidivrl
mov
xor
xor
das
stos
adcb
daa
test
rorb
dec
inc
imul
loop
sbb
mov
inc
icebp
or
adc
es
add
sub
lret
mov
bnd
aad
and
jl
xchg
fdivrl
push
fisubs
mov
scas
push
pop
repnz
mov
pop
loope
fcmovu
jl
xchg
xor
sbb
mov
je
dec
dec
xchg
rorb
lea
ret
cmc
and
mov
dec
and
mov
inc
add
push
or
jg
repz
adc
xor
mov
jmp
and
inc
icebp
ljmp
scas
jl
dec
add
and
in
push
or
imull
sub
imull
pop
int3
and
jl
xor
add
nop
mov
ljmp
pop
sbb
outsb
add
movsb
or
jns
jnp
fdivl
add
xchg
jl
sbb
sahf
lret
je
pop
int3
add
jns
bound
dec
jmp
and
adc
sub
inc
addr16
insb
and
mov
and
dec
jo
mov
jae
fimuls
ficoms
cmp
xchg
dec
jg
push
int
outsb
jo
push
cmp
out
enter
cmc
daa
inc
in
adc
lea
pusha
sub
cmpb
add
sub
orl
scas
or
xor
jne
dec
in
dec
cmp
enter
dec
daa
rcrb
or
jno
test
lahf
sub
and
js
xor
lret
mov
mov
jecxz
jge
ljmp
mov
mov
inc
mov
dec
mov
adc
cmpsb
icebp
add
add
cmp
xlat
jp
xchg
negb
fisubrs
int3
xchg
fcompl
addr16
sbb
mov
call
neg
addr16
rol
aaa
and
jno
mov
sarl
inc
shll
lods
stos
loope
lret
xor
aad
jg
push
push
outsl
pop
mov
addr16
push
mov
fidivrl
add
adc
fdivrp
mov
adc
das
jns
addr16
adc
mov
sarl
mov
mov
lret
imul
mov
and
xchg
cmpsl
test
ret
cwtl
dec
or
mov
cmp
sti
cld
hlt
aas
int
subb
pusha
or
and
sub
inc
mov
fisubrl
xor
jo
sbb
movsb
and
outsl
xor
pusha
aam
rcrb
xor
test
push
rcrb
in
mov
pop
cmpsb
push
repnz
jle
and
cmc
jecxz
in
mov
enter
arpl
imulb
divl
mulb
add
shl
cmpsl
out
fistpll
sbb
sub
aam
xchg
ret
andb
push
fucomi
inc
popa
fwait
inc
insb
fldt
sub
ja
or
jl
adc
shll
add
cltd
xchg
fisttps
push
adc
jge
mov
into
xor
or
repz
xor
mov
jl
sub
dec
cmpsl
dec
pop
cwtl
subb
cmp
fnstsw
add
and
mov
aam
fistpll
add
cwtl
add
dec
adc
or
push
test
mov
bound
inc
popa
das
xor
mov
test
pop
fst
ret
popa
mov
ret
sub
mov
push
lret
mov
cli
sub
sti
xchg
sub
test
sbb
popl
cmp
movsl
cmp
test
dec
mov
jb
and
push
or
imul
mov
jl
xchg
pusha
inc
popf
dec
data16
int
shrl
and
jmp
sbb
jae
mov
hlt
mov
cmp
mov
jb
cmp
jmp
sbb
push
mov
adc
daa
aas
and
outsb
hlt
add
ret
movl
add
mov
jecxz
sbb
cli
and
fdivr
int3
cld
lret
shrl
fildll
xchg
mov
xchg
xchg
lret
in
sub
popa
rcrb
or
cs
and
divl
jl
or
popa
scas
jecxz
mov
push
lret
movsl
lret
mov
pop
cmpsl
dec
icebp
outsb
sbb
add
shrl
movl
leave
movntps
mov
sti
jge
cld
sub
sbb
pop
int
ds
xchg
or
out
lea
arpl
cmp
xchg
xchg
jg
fstpt
dec
popa
fcmovnbe
and
pop
jmp
jnp
and
insb
mov
cmp
dec
mov
mov
push
roll
pop
ss
dec
ds
stos
and
cltd
jmp
popf
out
mov
sbb
into
adc
cmpsb
pop
or
adc
sub
jno
aaa
imul
lcall
divl
icebp
mov
xchg
inc
sbb
loopne
sbb
mov
or
mov
jnp
test
fmull
fcmovnu
jo
shrb
imul
lock
xor
xor
lock
lret
mov
repz
mov
mull
xchg
adc
jae
sub
and
adc
loop
dec
mov
gs
fisubl
pop
inc
mov
jae
lods
cmc
orb
fdivl
jae
xchg
add
lcall
adc
lcall
xchg
xchg
ret
fisttpll
jo
mov
movsb
dec
insl
sbb
stc
ret
fwait
es
xor
cli
xor
add
mov
sub
repz
pushf
fs
lret
movsl
push
xor
pop
push
jne
and
add
leave
mov
lcall
mov
ftst
insb
imul
push
dec
xchg
test
lods
mov
lock
cmc
pop
mov
repnz
hlt
fwait
jecxz
adc
inc
and
add
inc
mov
pop
idivb
inc
pushf
das
mov
sbb
iret
adc
flds
mov
lds
pop
push
push
add
mov
push
loope
test
add
mov
stos
adcl
mov
inc
int
test
xchg
mov
sub
arpl
sbb
ret
arpl
xor
sti
sti
add
loop
int
clc
fdivs
mov
mov
outsb
cmp
sbb
add
cwtl
cmp
mov
inc
or
ss
in
push
imul
or
add
jecxz
lods
xchg
and
xchg
add
iret
or
aaa
gs
add
loopne
std
mov
adcb
icebp
addl
mov
mov
push
xor
xchg
insb
out
xor
push
shll
and
roll
push
es
and
pop
cmp
sub
xlat
repz
adc
clc
mov
outsl
cmc
xor
jb
push
int
mov
sub
aad
cmc
xchg
aaa
pusha
clc
lods
ds
cwtl
and
ss
and
mov
xchg
xor
popf
inc
inc
pop
cmp
jne
xchg
add
add
dec
sahf
xor
mov
out
in
and
adc
mov
pushf
jnp
jo
movsb
pop
and
adc
xor
push
lods
sbbl
mov
aaa
outsl
ja
iret
fs
test
pop
ret
or
subl
addr16
and
mov
lds
sub
xor
clc
lea
aas
or
pop
sub
in
leave
push
xlat
sbb
push
cmpsb
sqrtps
outsb
sbb
int3
insl
sbb
inc
stc
sub
in
stc
push
push
push
sbb
push
rorb
pop
mov
jno
inc
repz
sub
or
lods
jle
mov
das
out
jge
add
ljmp
cmp
fwait
add
fs
dec
subb
insb
push
add
cmc
adc
js
add
negl
adc
xchg
xchg
hlt
std
cwtl
ret
cli
mov
jmp
pop
jge
std
jmp
ss
or
and
cli
jne
inc
push
mov
mov
or
div
mov
js
and
xor
jne
add
adc
in
xlat
sbb
and
xchg
push
and
arpl
outsb
mov
adc
sub
mov
and
adc
xor
jg
and
jae
mov
loopne
outsb
repnz
call
call
inc
push
icebp
pop
jo
nop
mov
jg
jecxz
pop
and
aas
arpl
ffree
inc
pushf
or
inc
rorb
enter
mov
cmp
test
mov
cld
jmp
adc
stos
scas
out
sub
loope
and
cld
test
insb
cmc
sbb
test
push
mov
jns
xchg
dec
cmp
dec
xor
jbe
xchg
scas
xchg
push
inc
js
insb
enter
mov
call
inc
testl
inc
cmp
xchg
xor
adc
out
leave
sbb
pop
push
push
ss
mov
test
push
xchg
or
sahf
into
out
xchg
mov
and
out
mov
mov
push
xrelease
jne
scas
int
inc
sti
sbb
xchg
pop
ds
in
in
mov
stc
cmp
in
jns
push
je
or
xchg
add
or
pop
cmp
or
mov
sbb
cwtl
std
rol
mov
xlat
mov
imul
or
decb
fdivs
dec
inc
jno
pop
push
jnp
push
mov
pop
cmpsl
mov
jp
mov
fwait
and
dec
mov
imul
mov
sbb
scas
jmp
mov
sub
mov
movsl
int
xchg
fwait
aas
push
inc
sbb
fs
push
xchg
lods
push
inc
or
mov
rclb
mov
data16
xchg
je
hlt
push
faddl
xor
std
xor
or
sub
inc
pop
pop
scas
sub
out
or
and
test
pop
jp
pop
test
pop
icebp
xor
fcmovnbe
in
jle
in
in
sti
pop
sbb
dec
adc
mov
popf
push
and
push
lret
nop
hlt
xchg
rolb
mov
push
pusha
into
mov
pop
sub
ds
mov
test
pop
clc
adc
adc
mov
adc
test
push
inc
pop
in
push
xlat
movsb
sbb
jno
fwait
pop
rorl
push
fs
test
fs
mov
insb
or
dec
fdivs
sbb
shll
test
sbb
idiv
test
add
test
icebp
lea
in
jmp
test
hlt
scas
mov
std
lcall
jnp
sar
sbb
lahf
data16
mov
and
shll
lahf
cwtl
out
xchg
xor
pushf
int3
lcall
testl
jns
fidivl
dec
movsl
pop
jecxz
imul
stos
or
push
mov
fistpll
into
dec
ja
xchg
add
xchg
out
pop
dec
cltd
popf
and
dec
mov
inc
dec
es
jecxz
pushf
stos
sbb
inc
xor
push
and
cmp
adc
dec
insb
sti
sub
sbb
pop
enter
inc
cmp
sti
data16
jmp
and
fsubs
jecxz
outsb
das
or
repz
les
and
loopne
lock
aaa
jne
clc
arpl
adc
lds
popa
lcall
shlb
pop
mov
inc
push
adc
adc
ljmp
jl
mov
jl
fstps
cs
stos
inc
popa
mov
xchg
add
jno
loopne
cmp
xchg
sbb
adc
in
out
ds
inc
lret
stos
in
gs
xchg
push
xor
push
push
mov
cltd
mov
inc
sub
hlt
sbb
push
push
or
mov
sub
cmp
sbb
data16
inc
xchg
and
lcall
out
xchg
shr
popa
fisttpl
jnp
push
sub
add
or
pop
test
xor
jecxz
hlt
test
les
sub
out
push
bswap
inc
hlt
xchg
ror
inc
gs
in
f2xm1
cmp
mov
in
push
pop
pushf
adc
xchg
add
mov
dec
sub
xor
outsl
jo
jle
rcrb
push
imul
mov
popa
cs
push
jle
sbb
mov
pop
mov
jle
jae
imulb
mov
test
pop
mov
stc
jne
adc
adc
and
jge
push
xor
push
pop
mov
test
imul
cmc
cli
sub
push
mov
mov
xchg
imul
inc
add
or
mov
sub
aas
sub
push
int
xchg
cmp
or
clc
subb
enter
dec
rclb
jbe
or
cmp
and
hlt
sbb
pushf
jg
cld
or
dec
repz
arpl
xor
leave
repnz
fcmovnb
lret
dec
cmc
ret
adc
cld
lcall
rcrb
xchg
push
pop
inc
pop
scas
xor
movsb
jecxz,pt
and
gs
out
imul
inc
out
xchg
add
inc
mov
add
pop
pop
cmp
and
or
in
icebp
scas
roll
sbb
rcll
aaa
bound
or
int3
test
outsl
mov
inc
lret
insl
or
inc
xlat
jp
jl
fwait
mov
pop
inc
inc
aam
jno
adc
adc
bound
pslld
clc
aam
sbb
jnp
pop
lret
cmpsb
push
stc
dec
nop
and
lret
pop
movsb
or
xor
rcl
mov
push
add
mov
adc
idivl
sahf
icebp
addb
addr16
test
scas
add
cmp
popf
inc
inc
sub
cmpl
ljmp
test
repz
insl
repz
sahf
xor
addr16
or
pop
jmp
pop
mov
inc
leave
outsl
repnz
push
sub
jl
out
mov
mov
xor
inc
adc
and
iret
jp
xchg
push
insl
scas
mov
or
push
mov
mov
cwtl
incl
mov
cmpsl
insl
mov
daa
popf
sbb
inc
pop
clc
xchg
jb
subb
adc
inc
adc
lret
pop
out
fstl
sub
mov
or
xor
sbb
jns
push
iret
in
bound
and
icebp
repz
dec
out
push
jne
lock
or
jmp
xchg
add
xlat
outsb
adc
mov
popf
mov
pushf
incl
insb
pop
shrl
jo
mov
or
jmp
or
bound
lock
sub
fdivrs
loop
scas
push
aam
and
adc
or
fs
add
pop
in
scas
sbb
lret
mov
mov
jo
dec
mov
rcrl
nop
out
xor
sub
incl
adc
jmp
cmp
adc
pop
lret
mov
sbb
xchg
out
and
data16
loopne
sub
xchg
push
or
mov
xchg
scas
data16
cmp
sub
pop
and
arpl
int3
dec
fbld
sub
sub
mov
sbb
dec
out
jne
movhps
std
stc
mov
sub
inc
stc
xchg
test
fiadds
sub
out
aam
popa
les
jo
cmp
and
aam
outsl
cmc
sub
jle
and
jne
sbb
push
cmpsl
inc
cltd
adc
cmp
outsl
fs
scas
cli
int3
bound
jne
add
fldl
lret
nop
std
sbb
and
stos
cmp
sti
incl
sub
ljmp
fcmovbe
movzbl
movsl
lahf
mov
mov
dec
nop
fwait
inc
mov
lcall
fiadds
mov
in
cmpsl
xor
and
popa
add
inc
lea
ja
lock
test
dec
enter
mov
rolb
pop
jg
test
sbb
aam
out
inc
mov
sub
sbb
inc
jbe
addb
test
mov
aad
scas
jg
dec
fwait
shll
aas
lea
inc
lock
jmp
pop
pop
push
dec
test
mov
lods
rcr
repnz
mov
outsb
movsb
test
ret
adc
inc
cmp
fs
and
testb
fdivrs
cwtl
mov
lahf
notb
push
xor
sbb
aad
mov
or
rolb
mov
jae
leave
lea
xor
xor
clc
sbb
mov
mov
cmp
pop
push
int3
js
out
xor
hlt
push
sub
cmp
adc
xchg
or
and
and
mov
addb
loopne
inc
mov
call
mov
test
divl
ds
out
in
mov
cmpl
shrl
dec
mov
mov
loopne
add
scas
jmp
sbb
mov
int
insb
test
or
sbb
or
jne
cmpsl
xor
inc
inc
and
push
mov
js
lret
mov
enter
cmp
push
pop
xchg
pushl
cmpsb
imul
sbb
testl
xchg
fwait
bound
push
lea
mov
test
mov
in
in
mov
shlb
pusha
int3
sahf
jb
mov
dec
es
sbb
sbb
sub
es
stos
push
jb
or
adc
pop
cmpsb
les
jb
shll
out
push
movsl
cs
jmp
popa
test
fcomps
lahf
adc
fiadds
shlb
cmp
jne,pn
mov
inc
dec
jp
sub
dec
dec
pusha
imul
jmp
sti
cmp
mov
dec
xchg
sbb
nop
inc
lret
mov
pop
mov
and
xor
lods
jmp
ds
cmpsb
loopne,pn
inc
int3
xchg
inc
xor
adc
rorl
and
mov
dec
push
leave
pop
sahf
or
ret
xor
fdivrs
test
shll
xor
jl
insb
repnz
xchg
xchg
mov
in
pop
imul
das
inc
addb
cmp
call
pop
jge
jnp
vprotq
pop
ret
js
sub
stos
je
push
shrb
inc
rclb
mov
and
jnp
vmptrld
jbe
enter
adc
pop
push
bound
xor
shr
into
sub
shrl
loopne
and
cmpsl
jp
push
cmp
mov
fdivrp
mov
shl
not
mov
pop
sub
xor
test
je
and
call
cld
imulb
imul
sub
jecxz
lret
dec
cmp
xor
cmp
fisubl
call
scas
sub
xor
shlb
ficoml
lret
rcrl
int3
arpl
int
or
pavgb
mov
mov
push
push
adc
xchg
xchg
inc
xor
adc
sbb
pop
std
mov
aam
int3
fmull
pop
mov
xor
xchg
adc
xchg
stc
add
or
inc
mov
push
xor
pop
mov
push
adc
adc
push
rcrl
fidivs
insl
xor
sub
setns
scas
cmc
cmp
xchg
lcall
dec
xchg
scas
add
data16
cmpb
pop
gs
lea
sub
xchg
push
cmpsb
lcall
and
inc
push
sub
sub
xchg
loope
popa
jb
push
xchg
push
pop
and
int3
push
sbb
jp
insl
dec
cld
shll
push
sub
loopne
pop
mov
mov
mov
mov
mov
imul
sbb
mov
data16
xor
pop
mov
add
mov
sub
mov
lds
mov
sub
jnp
jb
sbb
loope
cmpsb
int3
push
push
kmovw
add
adc
out
sub
popa
in
imul
push
xor
scas
fdivl
cwtl
or
pop
std
pop
dec
sti
push
xchg
cmpsl
js
sbb
fs
rcl
xor
cld
mov
mov
jp
pop
pop
out
cmp
clc
sub
inc
in
add
fidivs
push
cmpsl
fprem
dec
add
mov
daa
popf
gs
sub
nop
cmc
clc
add
push
cmp
pop
stos
sbb
sub
push
shlb
adc
pushf
cmpsl
jb
dec
stos
dec
jne
imul
in
mov
fs
leave
scas
aam
outsb
and
scas
dec
ret
jb
aaa
mov
jne
mov
movsb
cwtl
pop
insb
push
push
mov
dec
xchg
ret
lods
mov
outsl
je
jp
lods
int3
pop
jo
addr16
into
cmpsb
mov
push
cmp
or
lahf
fwait
or
lods
int
pop
test
add
mov
mov
push
or
sub
rorb
cmp
jmp
sub
adc
clc
test
pusha
rclb
mov
jmp
sti
xor
push
push
lret
adc
mov
or
cld
push
dec
lods
mov
xor
ss
lea
inc
inc
and
enter
inc
mov
outsb
fmull
adc
or
push
jnp
cmpsb
pop
and
xchg
out
cmp
mov
pop
fiaddl
jg
daa
xchg
cmp
aaa
insl
mov
xchg
xor
pusha
inc
data16
insb
xchg
jecxz
test
sub
add
ss
andb
sub
ja,pt
pop
add
xchg
cltd
int
outsl
js
xor
stc
xor
fwait
mov
mov
bound
mov
push
gs
jle
rorb
jne
gs
in
in
or
jecxz
outsl
xchg
out
pop
push
das
push
out
bnd
pop
cld
inc
sbb
add
stc
cmp
nop
hlt
pop
pop
pop
push
sub
xchg
andb
push
mov
flds
in
add
push
sbb
pop
push
loope
in
mov
sarl
das
leave
mov
xor
xchg
push
test
push
mov
daa
jmp
lock
clc
popf
sub
sti
leave
test
add
and
test
les
lret
stos
add
jecxz
sub
push
in
clc
cli
pop
push
push
or
mov
shrl
pusha
jnp
push
rorb
fwait
mov
jmp
mov
pusha
dec
adcl
outsb
pushf
addr16
out
clc
lret
sar
xchg
dec
fmull
in
mov
cmp
shr
cmp
rcr
loopne
in
or
imul
push
cmp
or
aad
pushf
rcrl
mov
in
ja
jbe
jl
repnz
inc
stos
lret
arpl
inc
or
lods
fiaddl
std
ret
inc
and
fiaddl
aam
out
imul
ret
pusha
pop
sub
xchg
sbb
adc
pop
loop
or
outsl
add
in
sahf
mov
jno
dec
mov
mov
jmp
jle
lock
sahf
outsl
inc
cwtl
xor
push
inc
pop
inc
out
in
int
adc
in
stos
hlt
push
aaa
mov
rorb
cmc
cmp
divl
mov
dec
pop
fs
sub
lret
inc
sbb
or
or
add
outsb
cmp
in
dec
mov
enter
or
or
data16
mov
or
and
sti
je
sbb
lcall
pop
pusha
insl
xlat
jno
xor
sbb
mov
push
dec
mov
mov
adc
outsb
test
div
push
jmp
inc
testl
xor
jnp
and
xchg
es
add
faddp
fsubrs
retw
push
int
enter
mov
jbe
cmpsl
add
push
ficoms
push
xchg
jg
cmpsl
outsl
mov
inc
sub
rcrl
mov
push
std
jns
cli
lret
pop
or
sub
in
insb
jecxz
xchg
int3
outsb
hlt
std
add
inc
or
fcmovbe
ret
out
and
dec
jns
lcall
in
dec
adc
push
pop
mov
pop
sbb
in
sti
inc
sbb
mov
nop
mov
scas
arpl
inc
test
outsb
mov
xchg
jne
sub
xchg
sbb
dec
add
sbb
cmp
mov
sbb
push
add
mov
mov
mov
mov
jnp
loopne
xchg
or
push
inc
int
mov
sti
inc
mov
cmp
nop
insb
mov
cwtl
mov
push
jmp
fistpll
rclb
movsl
loop
pop
jo
dec
adc
cmp
ljmp
sbb
jmp
adc
sti
cmc
lea
mov
push
inc
xlat
lret
cmp
sbb
and
out
or
mov
adcl
fs
pop
sbb
xchg
adc
pushf
mov
addr16
fcompl
fst
test
mov
out
into
add
sti
ficoms
mov
shr
bound
xor
rolb
lock
mov
dec
and
repnz
pop
fisttps
into
pop
push
sbb
dec
xor
ret
jno,pn
xchg
xchg
fsincos
lea
or
mov
cld
mov
fwait
popf
xor
out
xchg
cwtl
or
cmc
sti
push
aas
or
mov
mov
sbb
popa
lret
pop
cmp
ret
and
xlat
mov
xor
mov
xor
test
mov
movsb
sahf
lcall
fisttps
xchg
mov
lret
or
loop
push
jno
xchg
adc
cld
jnp
pop
ja
sub
mov
mov
pop
dec
and
cmpsb
sbb
push
push
sub
mov
hlt
cli
or
inc
jmp
push
xchg
mov
out
fists
pusha
popf
xchg
mov
mov
inc
fisubs
push
not
or
ds
sti
dec
sti
clc
xchg
lods
mov
inc
mov
aad
enter
mov
jp
shrl
mov
loopne
dec
mov
jb
jl
add
pop
jns
jecxz
cmpsb
pop
xchg
jge
test
leave
cli
adc
inc
sbb
pop
repnz
adc
mov
pop
cld
jb
pop
sbb
into
fistps
fisttpl
loopne
fistpll
xchg
cmc
cld
lock
mulb
out
or
stos
xor
aad
ds
adc
loop
data16
pop
andl
int3
aad
fldenv
ror
je
jae
pop
addb
pop
pop
sub
adc
mov
pop
jecxz
addb
sub
fsubrl
cli
or
pushf
adc
cli
push
fidivrl
ss
push
rcll
insb
cmp
popf
pop
aam
mov
cmp
jno
mov
dec
ret
jb
push
mov
clc
shl
adc
pop
xchg
jl
cmp
stos
leave
dec
cmp
adc
fstps
inc
xchg
arpl
adc
sbbb
or
pop
mov
iret
or
das
pop
insb
jmp
jne
mov
scas
rclb
test
jb
or
pop
mov
mov
xchg
cmp
sbb
or
sub
ljmp
test
std
push
push
leave
mov
outsl
out
dec
push
add
adc
or
clc
icebp
mov
rcrl
sarl
push
popf
inc
lods
sbb
add
dec
cltd
loope
adcb
pmaxsw
fcmovne
out
or
push
rol
out
dec
mov
xor
xchg
std
popf
or
ret
or
cwtl
xor
mov
and
jns
imul
or
jnp
push
sbb
pop
pop
mov
pop
push
adc
adc
sti
scas
imul
sub
sbb
ljmp
sbb
mov
in
iret
dec
out
inc
xchg
stos
popa
fisttpll
fucomi
dec
jmp
pop
shlb
std
pushf
xchg
add
mov
enter
dec
jp
ret
dec
sarb
cmp
push
fistps
aas
popf
lea
hlt
movsb
bound
cmp
jecxz
mov
lds
fs
lds
mov
pop
out
mov
nop
mov
inc
lahf
mov
fisttpl
ss
dec
inc
popa
xor
sahf
repnz
lea
adc
ret
clc
lock
pop
jg
lcall
mov
inc
in
loope
and
loope
pop
xor
jg
push
jno
sbb
arpl
fisttps
scas
inc
jno
fcmovnbe
test
xchg
push
into
cmpsl
mov
or
jg
cmc
jno
cmpsl
lea
cmpsl
cmp
test
xchg
hlt
jo
aad
add
jmp
mov
cmovns
mov
pusha
call
jl
push
cld
push
push
add
xorl
filds
and
sub
outsb
in
pop
rol
fwait
iret
sub
jae
xchg
sbb
cmpsb
daa
push
out
ss
or
jae
mov
adc
sub
xorl
pusha
sub
add
dec
ds
cwtl
cmp
js
mov
xor
inc
jge
xchg
scas
lahf
inc
adc
rclb
in
mov
xchg
mov
sbb
xchg
cmc
in
fimuls
movsb
je
mov
call
xor
pop
pop
push
pop
xor
or
push
dec
dec
loopne
cmp
or
inc
xor
notl
test
push
jmp
inc
jg
fstps
iret
rol
dec
nop
add
cmp
mov
push
inc
out
or
mov
out
rorb
stc
sbb
mov
push
xchg
inc
jnp
and
sbb
addb
push
xchg
pop
cmp
jno
fdivs
gs
ret
into
mov
inc
test
mov
or
push
lahf
mov
jmp
loope,pt
out
adc
cmp
fists
lock
jl
pop
pop
ja
adc
jmp
nop
mov
cmc
repz
aaa
jne
cmc
and
lock
or
jl
sub
mov
mov
cli
mov
cltd
jo
jg
rolb
mov
outsl
xor
push
adc
test
adc
cli
movsb
shrb
adc
jecxz
lret
dec
fidivl
push
sbb
shlb
mov
leave
repnz
xor
lcall
pop
out
das
fimuls
clc
sahf
fstps
jge
test
ds
sti
int3
jle
popf
push
test
test
mov
sub
mov
imul
fldcw
cmpsl
setnp
sub
mov
lahf
iret
enter
inc
xchg
imul
cltd
xor
xor
adc
xchg
pop
sti
sbb
fwait
mov
adc
xchg
fldenv
add
inc
je
mov
shr
movsl
mov
clc
in
mov
mov
mov
lret
out
push
mov
dec
and
sahf
pop
rclb
or
jmp
es
movb
imul
dec
sarb
and
inc
in
push
shl
insl
mov
or
shrl
sub
jbe
mov
scas
mov
cmpb
xlat
imul
adc
movsl
adc
push
fwait
sti
cmp
lret
stos
push
or
cmpl
pusha
shl
fadds
mov
jp
mov
cmp
and
and
sub
pop
jl
push
mov
sub
cmp
dec
nop
dec
cmpsb
push
xchg
fsts
mov
pop
rcrl
popf
jmp
mov
stos
xorb
rcrb
pusha
int
mov
test
cmp
pop
jp
or
ret
lock
mov
aaa
stc
movsl
mov
dec
cmp
mov
repnz
push
jae
or
lods
inc
push
insl
fnstsw
call
cs
xlat
or
jmp
mov
cli
push
dec
or
push
sub
push
xchg
mov
xchg
add
js
loop
pop
icebp
icebp
add
push
cs
loopne
push
pop
scas
in
jo
jg
lods
push
out
testl
mov
dec
mov
add
cmpl
push
sti
test
ja
sbb
jge
dec
add
sahf
int
jle
xor
jne
stos
adc
cwtl
fcmovnu
xor
test
xchg
xchg
into
lods
cmp
lods
dec
pop
lahf
outsl
ret
push
add
lret
sub
sbb
dec
bound
cmpsl
pop
sbb
popf
in
mov
arpl
mov
aaa
mov
pusha
stos
and
push
pop
andl
inc
xchg
mov
dec
mov
icebp
mov
or
or
imul
adc
or
push
out
sub
mov
enter
ficoms
dec
mov
inc
fxch
int3
into
add
mov
mov
sub
jae
sbb
scas
xchg
in
ror
mov
adc
add
xchg
push
jle
fcmovne
xchg
mov
push
cmp
imul
add
dec
mov
dec
into
rcl
jmp
xor
push
add
movsl
jge
scas
fimull
cs
dec
shr
call
cmpsb
xchg
push
arpl
mov
push
xor
and
adc
in
sub
iret
cmp
out
rcr
push
sub
gs
es
jns
lds
fisttpl
incb
dec
ret
mov
stos
ja
add
xchg
dec
jnp
inc
jmp
in
es
das
mov
cmp
jp
xor
int
ljmp
push
divps
ds
adc
cmp
in
push
out
cmp
lret
inc
dec
cs
jg
test
fadds
xorb
sbb
adc
loop
ficompl
enter
stos
xor
mov
xchg
jns
data16
ljmp
das
in
lods
bound
daa
push
lahf
mov
jns
ljmp
aas
xchg
jnp
pop
pop
mov
lods
and
adc
cmp
movsb
sarl
out
and
dec
pop
push
xor
xchg
or
or
stc
stos
mov
pop
fwait
jno
bound
pop
push
icebp
int3
aaa
cli
jmp
inc
xlat
test
add
addr16
mov
push
cmpb
dec
mov
sub
cmp
jg
js
std
jnp
jae
and
leave
xor
pop
lcall
or
fdivr
dec
or
loopne
pushf
jo
pushl
adc
es
imul
ret
leave
lret
mov
ret
pop
je
sub
push
shlb
das
addr16
popf
cmpsw
popa
stos
shlb
call
lahf
imul
sbb
fcomps
xorl
add
and
arpl
xchg
adc
fwait
inc
fldcw
pop
sub
jge
int
sti
jbe
lahf
fsubs
mov
jbe
sbb
adc
rcl
xchg
cld
ja
jl
insb
sub
jmp
cmp
xchg
rcrl
mov
xchg
push
fsubrl
push
sub
xchg
test
inc
cvttps2pi
test
clc
jns
int
test
sbb
mov
dec
addr16
xor
jnp
mov
dec
lret
add
sbb
jbe
mov
pop
pop
notl
mov
adc
lods
xchg
dec
dec
imul
arpl
arpl
mov
sbb
push
jnp
es
xchg
movsb
lock
add
adc
jb
jmp
sbb
mov
cli
pusha
scas
test
fistl
into
ror
jo
cmp
enter
pop
outsl
inc
popf
add
pusha
loopne
mov
mov
sbb
sbb
insb
adc
pop
cwtl
or
push
adc
inc
dec
bound
scas
dec
sub
xchg
or
mov
jle,pn
xor
sub
shlb
dec
fs
imul
dec
icebp
js
scas
mov
lahf
addr16
mov
movsl
sbb
pop
test
fsub
lods
repz
pushf
pop
xchg
inc
jp
pop
test
ja
pop
dec
insb
mov
mov
mov
jo
or
jns
pop
mov
xorl
lret
daa
in
fldcw
push
sub
push
push
or
fwait
ret
lahf
mov
xchg
cmpsb
test
add
xor
sbb
out
jg
adc
and
push
mov
sub
enter
shll
or
repz
rcl
ljmp
adc
loop
std
jg
mov
test
xor
in
cld
rcrl
xchg
cltd
push
lds
repz
fs
stc
mov
aas
fcompl
lret
dec
jae
movsb
xlat
bound
insl
popf
loopne
popa
dec
or
fsubl
xchg
adc
fimuls
test
insb
subl
lret
push
inc
ror
out
cmp
ss
inc
mov
mov
mov
pop
and
pop
adc
cmp
sub
inc
and
in
movsl
push
and
addl
cwtl
js
inc
in
sti
and
bound
mov
push
xor
add
outsb
add
mov
xor
in
push
popa
out
andl
jo
mov
movsb
sti
int
xchg
inc
inc
imul
mov
push
mov
gs
stos
xor
rcr
add
pop
aam
xchg
aas
stos
dec
or
sbb
mul
aaa
movsb
xchg
jle
pushf
mov
ficoms
push
pop
aaa
loop
es
lds
add
xchg
jp
dec
xlat
pop
inc
lock
xchg
or
add
add
cmp
xor
and
cmp
mov
ljmp
dec
jae
add
jmp
movsl
shll
inc
jno
mov
lods
sub
insb
repnz
imul
lea
leave
jae
xchg
and
clc
or
jle
stc
add
xchg
sub
mov
push
pop
sbb
sbb
fistpl
scas
movsb
ror
int
icebp
outsl
or
in
lods
sub
loop
xchg
fwait
lods
movsb
and
fs
pop
or
repnz
mov
or
lret
test
test
mov
cmp
sub
adc
ljmp
jb
cmp
mov
xchg
sahf
test
outsl
dec
adc
mov
push
or
inc
xchg
cmpsb
jns
jno
pop
jmp
mov
push
test
outsb
cmp
mov
ficoml
and
jns
and
out
adc
xlat
shrl
js
push
int
push
mov
push
dec
cmp
scas
test
sub
xchg
scas
sbb
in
ds
outsb
pop
mov
xor
es
nop
int
loope,pn
test
pushf
xorl
sbb
pop
sahf
ja
aas
cld
es
and
dec
enter
int3
movsl
add
gs
movsb
or
pop
int
outsb
cmc
xchg
testb
inc
cmp
cmp
ret
sub
cs
outsb
lods
and
sub
decb
in
push
je
mov
mov
inc
stos
pavgw
sbb
cmp
ret
mov
int3
mov
fstpt
sti
xor
xchg
mov
das
insb
xor
sub
push
repnz
sar
ja
jle
bound
cwtl
jp
rorb
xchg
movl
cltd
sub
test
mov
test
pop
xchg
push
mov
test
mov
repnz
fstpl
fwait
dec
movsl
mov
jno
lret
aas
and
push
mov
lods
inc
cmp
sub
test
mov
and
push
fsubl
ds
jl
pop
rorb
xor
stos
ret
jecxz
sub
cmpsb
xchg
and
pop
or
test
add
imul
pop
daa
mov
dec
adc
inc
fs
push
jno
sti
out
jae
mov
mov
xor
iret
mov
push
adc
or
ficomps
cltd
in
jl
and
lea
cmp
ds
test
fsubl
enter
mov
xor
cmp
std
add
outsb
lret
xlat
cmovg
jne
push
xchg
mov
xchg
nop
orb
je
notl
xchg
outsb
mov
or
stc
icebp
dec
push
hlt
xchg
dec
xchg
sbb
ds
xchg
jecxz
sahf
insl
dec
loop
iret
sub
fsts
jecxz
mov
cmc
dec
jp
pop
test
mov
mov
scas
les
daa
fs
ret
aaa
btr
xor
mov
push
aad
rolb
mov
sub
test
jns
mov
xor
aam
mov
shr
dec
xor
mov
rcll
push
mov
repz
leave
sub
out
jne
frstor
addr16
xor
insl
inc
cld
cld
js
pop
rcl
out
push
cmp
fcmovnu
jmp
in
mov
shll
dec
lcall
ficomps
fbld
insl
insb
add
mov
test
aad
ss
cltd
movsb
daa
push
lea
sbb
loope
movsb
push
dec
das
mov
inc
icebp
scas
jge
dec
orb
vfmadd213ps
sbb
mov
fiaddl
aad
jne
pop
jmp
pushf
jl
cld
or
mov
add
cmp
jns
inc
in
mov
push
mov
ljmp
add
xchg
add
or
ja
adc
in
dec
ficoml
mov
pop
lahf
pushf
ret
mov
enter
sbb
xchg
hlt
jnp
add
xchg
mov
inc
mov
sbb
in
in
mov
cmc
ds
or
outsl
in
jns
jne
shlb
fs
shlb
stc
mov
cld
or
test
push
mov
pop
sbb
or
fxch
or
fs
xchg
mov
xchg
scas
mov
test
fwait
mov
and
lds
pop
mov
dec
repz
insl
js
cmp
js
jecxz
jne
daa
jl
pop
sub
lods
ret
xlat
hlt
dec
repnz
jno
inc
jl
jmp
push
daa
imul
pop
mov
sarb
imul
sbb
add
pop
jmp
sbb
stos
sahf
je
or
pop
xor
cmp
js
data16
sti
mov
add
add
shll
adc
jbe
inc
cs
mov
enter
push
adc
fmul
dec
and
fisubs
pop
cmpsl
andb
popa
xchg
and
pop
cmpsb
sub
popf
scas
jbe
pop
mov
and
add
aam
lods
sub
pop
lcall
mov
dec
pusha
sub
push
movsl
jmp
hlt
fmul
mov
pop
bound
fbld
add
out
lock
mov
sub
sub
dec
adc
mov
movsl
scas
cmpsb
mov
or
jnp
mov
stos
or
rep
out
xorl
dec
outsb
mov
jb
jbe
mov
xor
pop
dec
fmuls
test
xchg
imul
sub
cmc
jne
jmp
jle
mov
ret
sub
scas
and
inc
jecxz
enter
loopne
addr16
mov
xlat
push
dec
cmc
in
dec
popa
mov
mov
pop
pop
jne
mov
call
adc
inc
ds
in
sub
xchg
lcall
xchg
es
push
jne
outsl
cmp
pop
add
insl
stc
ret
xchg
sar
push
mov
push
mov
cld
sbb
jnp
fwait
jae
mov
sub
jo
call
mov
ror
scas
nop
xor
shlb
dec
ds
das
sbb
sbb
pop
nop
sub
mov
icebp
je
repz
ss
adc
and
or
es
xchg
jg
cltd
jmp
pop
shl
or
push
lods
scas
xchg
loop
push
pop
or
pop
or
popf
inc
cmp
jo
loopne
js
or
jg
push
jg
iret
aam
int3
jno
popa
out
out
inc
mov
jp
push
mov
pop
iret
out
jb
mov
ds
push
fidivs
imul
mov
dec
outsl
mov
leave
jecxz
stc
ret
into
jno
mov
sbb
mov
xchg
mov
lcall
enter
push
lods
in
xchg
cmpsl
inc
in
jae
xchg
js
xchg
fmulp
jecxz
xor
jge
and
sub
in
jo
push
stos
jb
ja
insl
add
out
dec
mov
push
jmp
sarl
cmc
sbb
pop
hlt
arpl
mov
scas
jnp
push
sbb
movsl
lea
pop
mov
outsl
inc
aam
adc
shll
mov
roll
inc
test
push
or
adc
add
jbe
sahf
sbb
fisttpl
xchg
xlat
jnp
add
adc
pop
sahf
xchg
push
or
sub
push
mov
sbb
or
cli
das
dec
clc
jmp
popf
cmpsb
scas
mov
mov
mov
arpl
jle
call
ss
sbb
or
iret
jns
lock
icebp
arpl
push
movsl
or
inc
fucomp
adc
fdivrs
ja
sbb
test
out
jnp
imul
clc
pusha
mov
lds
imul
adc
adcl
mov
push
insb
lods
cmp
pushf
jnp
jecxz
push
mov
and
xlat
loope
pop
or
jnp
call
cmp
push
cmpsl
mov
clc
xor
cmpsl
mov
inc
xor
bnd
push
lock
mov
mull
dec
test
and
and
repz
je
popa
in
ret
out
cld
scas
lea
push
dec
outsb
std
push
jge
xor
out
cmp
int
push
mov
not
mov
shlb
add
fisubl
sub
fnclex
xlat
imul
jo
in
rorl
dec
and
adc
int
add
mov
movsb
cs
icebp
call
dec
mov
lahf
test
jnp
cmp
lahf
insl
frstor
stc
xor
in
push
fs
xchg
scas
mov
mov
and
repnz
stos
jns
cmp
cmpsb
inc
dec
in
inc
mov
rcrl
push
shll
sti
aam
int
push
or
fsin
dec
shl
sbb
flds
ret
pop
insl
sub
test
fisttps
int3
lods
push
daa
mov
sbb
fdivrl
divb
jecxz
or
sahf
ds
mov
pop
ror
leave
adc
jbe
xor
stos
out
cltd
lock
cwtl
mov
test
loope
int
dec
jmp
lcall
das
test
push
inc
and
fwait
insl
dec
lods
shlb
pop
rcrb
cld
icebp
jecxz
mov
scas
xchg
and
adc
cmp
test
ljmp
jg
out
pop
dec
loop
xchg
pop
fwait
das
mov
push
movb
push
dec
fldenv
pop
dec
and
vsqrtps
xlat
aad
int
jecxz
mov
cmp
inc
test
lahf
cmc
call
in
xchg
xchg
inc
cwtl
cli
push
xchg
iret
les
inc
ss
je
loopne
je
inc
fists
fnstenv
mov
or
pop
dec
mov
leave
xchg
enter
jecxz
add
cs
xor
jmp
mov
scas
dec
or
push
icebp
pop
mov
int
rcpps
fsts
jnp
repnz
mov
lcall
stc
int
in
cmc
inc
xchg
outsb
test
insb
aaa
jecxz
jle
push
jmp
test
ret
sub
xchg
outsb
inc
mov
push
movsl
in
or
test
dec
sbb
jne
movsb
dec
ds
sarl
andl
cli
jbe
jb
jle
cld
mov
push
out
rorl
ss
cmp
sti
in
movb
clc
push
call
xchg
sbb
js
sub
insb
pop
loopne
lods
andl
pop
cmp
dec
repnz
test
mov
out
sbb
adc
out
cmp
cmpsb
lea
in
or
inc
ljmp
and
lahf
xlat
lds
push
dec
mov
jge
mov
push
inc
mov
dec
ret
addl
or
repz
jbe
icebp
fstps
pop
repz
pushf
sbb
xchg
adc
mov
dec
ret
idivl
add
cmp
test
sti
int3
lret
sub
fists
cmp
xlat
addr16
imul
aas
sub
cmpsl
sub
cmpsb
xor
and
cmc
insl
loope
dec
sbb
mov
push
xor
dec
or
jge
mov
fisttpll
push
clc
jns
adc
sub
jbe
push
and
inc
stos
dec
fsts
mul
jbe
cmp
dec
push
push
arpl
xchg
cli
sbb
xchg
data16
push
inc
mov
insb
and
test
add
push
rorb
dec
xor
cmpsb
fistpll
idivb
out
jle
fimuls
call
aas
ror
inc
es
leave
and
adc
rorb
ds
cmp
inc
sbb
loope
lahf
cwtl
gs
nop
inc
test
mov
aam
and
sbb
xor
ficompl
testl
nop
add
add
pushf
push
inc
mov
bound
xchg
fdivs
push
jp
adc
and
or
jo
sub
jecxz
fwait
sub
xchg
lcall
into
jecxz
add
in
inc
jp
rcr
mov
fnsave
mov
adc
add
dec
ja
movsl
lcall
mov
mov
and
in
xlat
stos
ja
aaa
adc
xchg
adc
pop
mov
int3
les
add
call
xchg
fcoms
aam
jg
in
or
bound
xor
cmp
inc
sbb
or
repnz
sbb
mov
insb
jns
lcall
test
arpl
xchg
lret
mov
jo
or
pop
dec
sbb
jns
dec
test
add
insl
lret
shll
in
push
dec
ss
adc
xor
sahf
push
or
push
sbb
aad
sub
inc
push
das
jl
in
jo
movsl
dec
jl
cmp
icebp
sbb
hlt
or
mov
or
addb
cwtl
fcompl
sub
jns
ss
mov
sub
or
cmp
and
pop
cmp
push
add
jnp
out
out
jbe
ljmp
xchg
movzwl
jecxz
dec
ds
xlat
mov
iret
lcall
mov
xchg
dec
adc
fwait
sbb
bound
pop
dec
cwtl
inc
sub
dec
fwait
movsb
das
in
aad
jno
add
xor
jp
imul
mov
clc
insl
push
mov
pop
dec
jb
inc
sti
icebp
loop
lret
cmpsb
cmp
lds
sbb
mov
out
or
iret
into
loop
js,pt
les
ret
dec
adc
call
xlat
pop
mov
sub
movsb
xchg
rcrb
icebp
jg
xchg
imul
lods
xchg
aad
pop
push
in
pop
mov
jnp
inc
push
jp
and
mov
iret
xor
mov
cmp
dec
or
sbb
pop
sbb
mov
or
mov
orb
in
pop
rcl
push
jo
lods
add
pop
push
pop
and
xchg
pushf
scas
inc
jecxz
and
call
nop
mov
inc
adc
jle
mov
add
addr16
pop
xor
adc
in
outsb
cmp
test
es
dec
aad
jg
mov
std
sub
adc
fistps
test
lret
push
pop
loop
pop
dec
fcoml
mov
je
fistps
cmp
daa
sbb
sahf
and
jo
jl
inc
and
rcrl
repz
rcrl
inc
int3
shll
popf
dec
pushf
and
or
mov
pop
mov
lods
jp
or
push
sbb
pop
and
sbb
rcrb
jb
pop
ja
sbb
inc
fs
pop
addb
dec
pop
es
je
sub
not
mov
inc
push
outsl
lods
push
mov
mov
cli
add
leave
adc
fldz
or
or
xchg
ret
mov
jp
jg
out
jne
add
test
sbb
int3
cltd
test
jl
sub
xor
mov
ret
jp
lret
push
push
jmp
call
and
test
divb
cld
lahf
or
mov
pop
cs
or
mov
fwait
rorb
rorl
mov
sbb
fdivrl
into
xlat
push
push
mov
mov
es
inc
fisubrs
adc
lock
aam
push
aam
mov
mov
xchg
fwait
sahf
shl
cmp
jecxz
pop
test
xchg
imul
add
scas
ficomps
lret
fmul
out
mov
jo
jmp
push
and
adc
ljmp
lcall
dec
xchg
mov
js
pop
push
xchg
ljmp
mov
jecxz
adc
and
loope
aam
stc
xlat
push
andl
dec
lcall
inc
xchg
ret
jp
dec
add
jbe
jo,pt
cmpsb
roll
xlat
xor
call
fwait
out
adc
xchg
mov
shl
or
cmpsb
or
cmp
jnp
pop
inc
or
out
fisttpll
stos
cwtl
push
jno
aas
push
pop
and
shlb
int3
inc
outsl
repz
push
and
or
mov
js
scas
mov
sbb
mov
call
sete
outsb
jae
nop
add
ja
scas
in
inc
cmpsl
dec
stos
fildl
dec
loop
xorl
test
jb
pushf
xchg
or
cs
les
mov
mov
sub
xchg
add
call
std
dec
dec
outsl
or
pop
stos
pusha
mov
xchg
and
inc
scas
xlat
or
sub
jmp
mov
push
push
aas
jl
rorb
or
imul
icebp
pop
loopne
pop
mov
movsl
loop
inc
sub
or
sub
lods
lea
pop
sub
jae
dec
sarb
aaa
into
xor
movsl
jne
mov
sub
mov
loope
out
addr16
ret
pop
test
pop
xchg
push
xlat
ficoml
xchg
int3
sub
xchg
push
fistpl
outsl
popa
push
out
scas
dec
dec
push
stos
cmp
xchg
aaa
pop
sbbl
or
add
mov
mov
lea
les
loopne
stc
mov
mov
xor
cmp
mov
push
mov
mov
and
mov
xor
aam
popf
in
out
cli
lahf
mov
cmp
jle
mov
stc
push
repz
and
dec
xchg
adc
aaa
in
jns
jp
mov
fildll
xchg
and
push
lods
hlt
push
ret
icebp
je
cmp
mov
movsb
fsubl
dec
mov
jge
out
pop
push
xchg
ja
andl
es
mov
test
xor
dec
test
scas
mull
lea
xor
dec
cmp
mov
div
or
dec
lock
out
mov
mov
insb
gs
dec
mov
push
jne
lret
mov
dec
lock
push
pop
mov
out
lcall
lock
out
imul
mov
sub
aad
adc
sbb
sub
jo
mov
jl
fsubrs
inc
loop
sbb
loop
rcll
jne
fwait
popf
add
jge
xor
jo
jnp
xchg
dec
dec
pop
aam
shrd
sbb
add
test
fnsave
stc
les
mov
fisttpll
sbb
sbb
in
lods
pushf
push
jns
add
and
push
pop
int3
adc
aad
sbb
jmp
pop
xor
mov
insl
jge
stc
out
lds
lock
sbb
lods
xchg
jg
mov
dec
xchg
leave
mov
cmpsl
cmp
cs
lea
cwtl
divb
test
aaa
cmp
mov
cli
push
scas
push
imul
cmp
pop
pop
jo
mov
pop
in
xor
loopne
fisttpll
jb
xor
sbb
popa
push
outsl
adc
adc
outsl
adc
scas
cmpsl
inc
and
pop
mov
push
xor
mov
iret
in
aaa
adcl
jmp
repnz
push
outsb
pop
mov
pop
sub
mov
pop
lds
push
rorb
int
sbb
or
mov
push
sbb
and
adc
sbb
xchg
insl
fbld
lods
lods
sbb
mov
lcall
sbb
jmp
push
loop
pusha
push
mov
mov
movsl
stc
shl
sahf
or
lcall
inc
jp
adc
sub
add
jns
sti
imul
fcompl
shlb
pop
mov
cmpsl
jmp
mov
pop
inc
imul
mul
adc
subb
jno
test
adc
gs
fldcw
ljmp
add
mov
xchg
mov
insl
mov
sbb
mov
push
xor
mov
jecxz
mov
adc
cmpsl
dec
push
pusha
mov
jecxz
js
jno
out
push
sahf
repz
aam
outsb
cmp
add
rcrl
mov
int
hlt
push
jo
dec
lods
jle
jns
aam
sbbl
sub
jo
pusha
in
lock
je
jne
out
aad
inc
xorl
mov
test
jl
out
mov
leave
mov
push
pusha
ds
sbb
jmp
pop
xchg
jno
pop
sbb
inc
imul
dec
aaa
outsb
push
fstl
or
fsubrs
xor
call
mov
adc
stc
xchg
push
jg
imul
insl
lds
xchg
add
ret
das
gs
pop
mov
fnstcw
leave
push
ss
jmp
lods
stos
and
mov
sub
test
lea
int3
pushf
push
jl
sub
push
rclb
push
insl
enter
cld
fldcw
mov
mov
mov
cmp
add
int
movsl
mov
nop
or
mov
mov
mov
pop
jge
movb
out
les
in
clc
add
outsb
jp
mov
in
fldenv
dec
scas
mulb
arpl
mov
inc
inc
insl
mov
dec
sbb
lret
sub
mov
nop
push
lret
push
push
addr16
jl
fcompl
shl
mov
push
pusha
out
inc
out
mov
imul
xchg
testl
jge
loopne
or
fidivrs
add
addr16
les
out
pop
mov
inc
push
cmpl
mov
movsl
bound
enter
adc
es
dec
jno
xlat
icebp
inc
cltd
stc
xchg
mov
lcall
loope
jge
lea
out
xchg
dec
insl
popa
mov
push
push
sbbl
pop
xor
movsb
xchg
fcmovnbe
xlat
mov
std
clc
arpl
add
dec
gs
imul
pop
stos
arpl
bound
pop
cmp
sub
aad
dec
pop
je
into
aas
fiaddl
sbb
fsts
dec
sti
pop
jge
mov
je
jnp
fchs
call
cmp
das
repz
xor
dec
int
dec
and
insb
arpl
xchg
mov
rcrb
mov
inc
insl
rcrb
stos
rorl
adc
mov
das
mov
out
pop
ret
mov
sbb
gs
mov
add
inc
stos
sbb
jp
inc
xlat
mov
jle
cmp
and
jno
pop
jne
fisttpll
xchg
insb
addps
push
sub
xchg
adc
or
xchg
cmc
into
arpl
xchg
mov
lcall
movsl
push
jle
mov
sarb
fwait
popa
pop
or
xchg
std
fcompl
fsubrs
sbb
sarl
jge
mov
push
int3
sbb
outsb
or
xchg
sub
rorb
imul
push
cmp
lret
rorl
ret
sti
mov
push
fistps
jnp
push
gs
sahf
int
das
pop
shlb
xchg
fidivrs
push
hlt
stc
ret
lahf
fimull
xor
data16
jcxz
int
mov
enter
cmp
out
mov
decb
add
aaa
cmp
adc
xchg
outsl
out
or
add
ret
adc
pop
loopne
mov
pop
pop
repnz
adc
adc
bound
inc
pop
scas
mov
mov
add
and
loopne
or
jle
pop
insl
lods
mov
dec
inc
or
lahf
xlat
js
jp
mov
pop
jns
add
jecxz
pushf
lret
bound
mov
cmc
popa
mov
aaa
cmp
and
lea
push
gs
dec
sub
je
int
push
or
fists
je
popa
test
enter
jmp
xchg
or
jo
cmp
es
out
lock
fs
fiaddl
dec
push
cmp
xlat
xchg
jno
out
aas
shll
xchg
pop
popl
leave
add
mov
leave
lahf
fisubrs
push
add
imul
and
mov
mov
test
mov
xor
cmp
cld
inc
subb
dec
addr16
in
adc
or
dec
mov
pop
xchg
bnd
mov
push
fucomp
jl
ja
push
lret
lcall
xchg
fwait
xchg
in
mov
pop
jg
inc
mov
jmp
mov
sbb
cmp
or
xchg
xor
cmpsb
aas
sbb
aam
sbb
cmc
adc
cmp
or
mov
std
repz
push
mov
rclb
shrb
mov
mov
ja
push
fiadds
inc
fists
mov
or
adc
movsb
lret
jecxz
inc
in
cwtl
inc
lds
inc
icebp
jecxz
shrb
test
cmp
adc
mov
pop
jle
mov
sbb
loopne
mov
jno
sbb
sahf
dec
jle
jecxz
adc
jecxz,pn
push
ja
enter
push
pusha
jmp
flds
inc
iret
adc
add
stc
cmp
outsl
mov
add
flds
cmc
das
test
and
mov
fsubl
push
xchg
jbe
cwtl
mov
mov
dec
add
lcall
inc
test
push
fdivr
idiv
subb
loope
sbb
pop
fldenv
aad
mov
xor
jecxz
push
pop
mov
mov
fmuls
cwtl
xchg
fs
mov
scas
push
push
adc
jmp
and
in
cmp
nop
stos
xchg
lds
mov
leave
nop
out
jae
dec
push
std
inc
mov
cmpl
mov
xor
mov
call
ds
mov
jg
add
jbe
adc
push
jle
mov
andb
push
fiaddl
loop
cmpsb
test
fxam
sub
lcall
std
add
jmp
mov
icebp
push
sahf
insl
lds
sub
into
jmp
mov
test
out
rcl
mov
xchg
shrb
int3
and
sbb
sub
push
ss
add
stos
lcall
inc
cmpsb
scas
cmc
mov
jecxz
rcl
mov
push
repnz
sub
add
dec
sbb
push
div
insl
enter
jmp
fisttpll
fucomip
outsb
fimuls
lock
or
push
jge
ds
fcomp
out
inc
scas
cmpsl
xor
xchg
outsb
push
mov
stos
sub
xlat
cwtl
mov
adc
push
in
sbb
out
insb
aad
btr
test
stos
xchg
mov
xchg
sbb
fisttpll
mov
stos
and
popf
pop
call
sbb
in
gs
xor
xchg
cmpsb
pop
xchg
xor
test
push
dec
sbb
lock
lods
jl
imul
or
pusha
push
mov
xchg
aam
and
dec
mov
pop
popa
cmp
hlt
pop
mov
imul
fcomp
loop
lret
popa
repnz
sbb
call
mov
sar
jg
leave
mov
sbb
mov
mov
adc
loop
add
je
sub
push
ljmp
movb
pop
or
enter
xchg
daa
add
int
ljmp
testl
pop
aam
dec
mov
xor
fsubr
iret
int
sarb
mov
pusha
mov
dec
inc
cs
rorb
and
jge
dec
add
adc
hlt
jnp
push
push
mov
icebp
mov
dec
out
xchg
cmp
mov
cwtl
xchg
out
and
mov
shlb
daa
call
lret
cmp
mov
push
shlb
lahf
xorb
jmp
cltd
sbb
out
fwait
repz
cli
and
push
cmpl
pop
xchg
xlat
jo
and
sti
sub
adc
mov
xchg
xchg
in
pop
jmp
mov
sbb
shrl
mov
fdivl
xchg
sub
jnp
xchg
psraw
fwait
test
or
push
popf
sbb
ret
add
adc
icebp
shrb
ss
adc
jl
pop
adc
mov
pop
fs
ret
out
push
movsb
out
sbb
ja
sub
push
adc
sub
pop
divl
push
mov
ja
nop
aaa
test
dec
insb
mov
subb
popa
test
fisubrs
sti
adc
pop
mov
aam
xor
inc
insl
test
lcall
fisttpll
std
push
mov
fidivrs
and
mov
data16
pop
fucomp
popf
inc
xlat
jno
cwtl
xor
inc
xchg
sbb
mov
shlb
stos
mov
adcl
call
sub
loope
cmp
jmp
or
and
lahf
sti
das
or
mov
mov
mov
cmp
sarl
fdivs
adc
int
cmp
cmp
aam
xor
cli
sbb
stos
push
cmpsl
xchg
add
test
inc
mov
xchg
add
pop
aam
je
jp
add
lea
fmuls
and
lret
fs
jnp
xor
repnz
mov
subl
dec
sub
pop
jg
clc
int
adc
dec
cltd
mov
ja
popa
cltd
push
or
or
sbb
mov
add
cwtl
inc
gs
jo
mov
sub
shlb
shrl
scas
push
sahf
push
inc
adc
and
sbb
sub
xor
icebp
and
sbb
enter
out
cld
sbb
sub
mov
push
mov
call
and
fdiv
mov
pop
mov
mov
pop
jns
and
arpl
arpl
cltd
scas
jo
or
imul
and
dec
inc
xor
out
dec
pop
pop
mov
jae
ret
xchg
adc
orb
pop
push
insl
sub
sbb
scas
dec
arpl
mov
lahf
xchg
mov
xchg
mov
jnp
enter
inc
xor
movsl
test
imul
mov
scas
push
cmpsl
movsb
pop
js
push
data16
cmpsb
dec
mov
les
adc
jnp
leave
mov
mov
mov
sarl
pop
jmp
call
repz
xchg
mov
mov
and
jle
push
push
adc
mov
jmp
clc
and
xchg
and
mov
mov
ficompl
adc
stos
pusha
cmp
outsl
out
call
stos
test
sbb
inc
add
mov
add
mov
rclb
or
xchg
pop
jmp
mov
bnd
scas
push
add
push
mov
jne
add
jmp
mov
pop
imul
mov
xchg
or
cmp
push
adc
push
jne
mov
xlat
xorl
sub
xor
add
sbb
mov
cld
sahf
aaa
sub
js
xor
into
and
or
dec
and
sti
xlat
shl
lods
pushw
test
mov
loop
jns
add
es
push
inc
xor
cmp
mov
pusha
pop
and
adc
loope
jge
fstpt
lods
ret
jge
out
xchg
test
fists
and
mulb
add
lcall
ss
xchg
dec
enter
adc
push
popf
insl
dec
fs
outsl
rorb
or
push
dec
dec
add
push
sub
out
out
jp
mov
jecxz
pop
mov
fs
clc
je
and
xchg
pop
cmp
adc
movsb
popl
fucom
cltd
fmul
push
negb
xchg
les
addl
push
das
stc
jmp
pop
cmpsb
xchg
and
mov
lea
sub
add
lock
in
dec
ret
mov
mov
sbb
or
pushf
adc
cmp
sbb
and
pop
or
fcmovnbe
faddl
mov
mov
push
push
addr16
scas
out
les
outsl
les
notl
dec
push
scas
or
xor
mov
dec
mov
fstl
sub
and
sbb
clc
loope
loope
ret
call
cmp
and
cmp
cmp
push
dec
mov
jae
stos
pop
or
hlt
mov
inc
hlt
xchg
sub
xchg
and
cmc
mov
psllq
ret
dec
cmp
jne
pop
mov
mov
jae
mov
pushl
mov
inc
pop
clc
pop
xlat
or
dec
pop
inc
je
je
xor
cmp
inc
mov
out
pop
negl
sbb
seta
mov
push
movsl
stos
push
push
mov
je
xor
rcl
jo
repnz
or
mov
sub
push
loope
gs
or
dec
jb
or
imul
not
mov
das
rcr
cmp
add
mov
lock
sbb
adc
sub
mov
and
mov
out
cwtl
shll
repz
sub
imul
sarl
and
lods
jl
push
xorb
ss
lea
push
push
sbb
inc
jg
insb
adc
jne
push
fs
pusha
jo
mov
outsb
hlt
and
repz
pushf
and
jbe
popf
out
inc
cmpsb
shlb
xchg
ds
hlt
out
adc
mov
push
push
mov
mov
inc
gs
xchg
lret
in
mov
pusha
jno
fs
fstl
mov
pop
leave
dec
adc
lcall
cmp
fbstp
jmp
mov
dec
fldenv
popf
mov
push
mov
cmc
rorb
aaa
adc
inc
and
bound
push
add
xor
cmp
in
jbe
pusha
fadds
cwtl
enter
rcrl
out
push
mov
cmpsb
adc
sbb
mov
pop
incl
stc
jae
lea
mov
jb
jl
test
xchg
mov
lea
push
xchg
cmpsb
cs
push
pop
xorl
jmp
dec
sbb
outsl
xor
add
out
out
int3
nop
xor
or
mov
lods
dec
or
mov
in
int
scas
cmp
mov
and
mov
das
loopne
ja
clc
mov
dec
pop
cmpsw
xchg
adc
inc
pop
icebp
and
lret
pop
cmp
add
push
stc
cmp
or
sbb
push
xor
jnp
cmp
negl
rcrb
sub
mov
lods
int
in
loope
dec
push
push
jne
lds
xchg
mov
sti
mov
movsb
fldt
ds
fwait
add
mul
xor
dec
push
xor
jae
xor
cwtl
mov
xchg
xchg
mov
cmc
mov
jmp
cmpsb
lock
mov
cltd
mov
mov
add
popf
mov
pop
mov
mov
stc
pop
xchg
gs
or
xchg
lcall
xchg
fistl
adc
inc
sub
jp
bound
inc
cld
scas
sti
lea
push
icebp
in
rorb
cmpsb
pop
mov
roll
push
jecxz
mov
cmp
xor
pop
push
mov
in
or
sbb
and
roll
lods
jge
pop
ret
inc
and
xor
bound
dec
cmpsl
shlb
out
adc
mov
test
stos
cmp
in
mov
pop
or
out
addb
push
inc
mov
push
add
addl
lret
bound
cmp
out
cli
test
add
cmc
cltd
fidivrs
clc
push
pop
jo
rolb
addr16
sbb
jb
dec
jnp
cld
fdivs
pop
out
jg
scas
mov
dec
push
test
jmp
push
cmp
ss
bound
cli
jnp
mov
fsubrl
je
mov
lahf
inc
mov
scas
and
mov
fcmovne
jns
dec
divl
loop
std
ja
mov
movsb
jo
inc
add
adc
xchg
inc
mov
movsl
jge
xchg
sti
or
dec
ss
jne
and
xchg
adc
js
repz
pop
pop
push
ret
add
lods
xchg
lods
jns
xor
icebp
push
cmc
xor
mov
xlat
js,pt
jae
in
sbb
ss
push
pushf
lcall
fwait
cmp
lock
scas
add
xchg
mov
jno
lret
lret
in
sti
int
sub
and
loopne
enter
dec
or
mov
jnp
mov
jo
pop
sbb
cmp
mov
ljmp
inc
aad
add
sbb
stos
add
sub
ret
cmp
cmp
mov
lcall
jl
adc
repz
cmpsl
pop
jno
cmpsb
xchg
xorl
xor
xor
sub
pop
xor
dec
inc
jg
jg
dec
sarl
or
scas
ja
rorb
ja
notb
inc
mov
mov
dec
sbbb
lods
scas
outsb
mov
or
inc
stos
sahf
cltd
mov
test
shll
bound
data16
mov
out
xchg
cwtl
ljmp
ds
mov
xlat
sub
jmp
gs
cmp
cltd
and
jp
mov
dec
aam
cli
jmp
movsl
test
lock
adcl
jb
hlt
cmp
pop
xor
xor
call
or
mov
repnz
mov
mov
fwait
dec
pushf
cs
int3
lahf
inc
mov
bound
loopne
push
and
push
es
std
jg
nop
sbb
ljmp
je
pop
jl
test
rol
xor
dec
cwtl
les
fwait
or
popa
inc
pop
push
rol
adc
dec
out
cltd
jg
jo
cld
or
cmp
cltd
xor
sti
call
cmp
or
add
push
dec
in
loope
or
jnp
mov
adc
pop
jmp
jecxz
arpl
out
js
push
xchg
cmc
in
xchg
mov
cwtl
mov
stc
jb
mov
std
in
xor
incl
scas
je
push
and
cmc
sub
cwtl
ror
shrb
adc
fisubrs
jle
gs
mov
in
adc
dec
lods
mov
in
sarb
aas
xor
scas
daa
adc
push
stc
and
outsl
cmpsb
data16
jecxz
stos
xchg
push
mov
aam
movsb
push
adc
push
aas
mov
sub
sbb
inc
xor
mov
test
and
sub
enter
outsl
in
pop
sub
xor
jmp
pushf
inc
pop
dec
ret
xor
dec
mov
and
pop
mov
lret
push
sbb
sub
jle
jnp
daa
dec
aaa
pusha
and
bswap
mov
fimull
test
es
arpl
fwait
out
ds
sub
add
cmovnp
cmp
pop
rol
arpl
pop
nop
sti
mov
loope
or
or
push
daa
es
je
imul
jl
outsb
inc
jne
xchg
mov
mov
dec
mov
mov
popf
orb
sti
imulb
jb
les
pop
mov
xor
scas
push
sbb
mov
adc
or
jns
jne
jne
repnz
mov
gs
outsb
push
icebp
or
dec
cmp
jge
sti
and
mov
cmpsb
lahf
jno
mov
dec
bound
jp
data16
in
pushf
xorb
add
mov
les
mov
xchg
psubusw
loop
imul
mov
pop
adc
fistpll
into
cli
stos
dec
movsb
mov
insl
scas
mov
rorl
add
scas
inc
je
xchg
int3
dec
mov
and
xor
loope
flds
dec
mov
adc
and
xor
flds
and
lret
push
mov
fstl
xchg
mov
aaa
scas
or
mov
repnz
sahf
les
pop
fdivrl
and
jge
or
testl
or
clc
aam
enter
sar
leave
or
adc
cmp
or
and
xchg
lods
stc
imul
xchg
xchg
xchg
xchg
push
lock
outsl
inc
outsb
dec
pop
lods
out
cmp
jno
aam
ret
fnstenv
fwait
test
test
push
cmp
or
lret
xchg
pop
fldcw
aas
rolb
fdivr
scas
fnsave
test
or
ljmp
mov
xor
add
sub
cmpsb
pop
lock
xchg
inc
inc
loop
test
push
cmc
jns
cmp
adc
call
fildl
in
aam
pop
mov
xor
dec
imul
cmp
xchg
pushf
fidivrl
and
sahf
pop
nop
stc
pop
popa
stos
fs
les
push
cmp
iret
xchg
stc
mov
into
mov
ds
fisubrl
insb
clc
fimull
std
pop
jge
pop
push
jle
insl
adc
sbb
xor
faddp
jge
cltd
mov
push
sbb
jo
inc
stos
cli
push
jmp
pushl
movsl
sarl
int
cld
pop
xor
int
cmp
clc
sti
test
jmp
out
mov
and
push
adc
lret
mov
hlt
hlt
cmp
xchg
push
xor
jge
int3
or
or
ljmp
imull
push
push
pop
lock
mov
push
pop
aam
sub
mov
mov
push
add
jae
jp
pop
addr16
pop
sbbb
jne
fadds
nop
jmpw
or
and
ret
xor
movsl
and
mov
cwtl
jne
lods
jnp
dec
push
xor
out
push
jbe
mov
es
push
repz
insb
cs
sub
add
mov
and
fucomi
or
sbb
pushf
arpl
pop
inc
enter
mov
add
mov
pop
ja
pop
mov
cltd
jl
adc
and
xchg
xor
jp
dec
sub
int3
adc
mov
iret
add
mov
xchg
cmp
ror
dec
rcr
sbb
cltd
sbb
adc
jae
mov
mov
push
adc
xor
lret
test
imul
js,pn
test
stos
pop
mov
outsb
push
sbb
pusha
sub
imul
aad
jge
sub
xchg
aad
and
mov
xorb
xchg
pop
imul
jg
lds
sub
lret
mov
dec
loopne
pop
fiaddl
or
out
mov
and
push
lret
inc
jns
iret
out
js
add
cmp
adc
push
fcomps
stos
xchg
sbb
out
int3
cli
cli
xchg
cmp
lods
jnp
cmp
das
jmp
mov
adc
std
cmp
hlt
out
mov
rcrl
xchg
xchg
cs
fisttps
ja
pop
test
fnsave
in
cld
adc
xchg
popf
fnstsw
mov
add
cmpsl
inc
push
adc
ljmp
xchg
and
aaa
data16
icebp
sub
movsl
mov
loope
sbb
mov
dec
nop
lock
sti
es
sahf
mov
nop
mov
sahf
shlb
push
dec
adc
cli
lea
and
loop
mov
add
ljmp
or
push
xchg
inc
push
mov
dec
dec
cmpsb
sub
outsb
cmp
inc
stos
push
nop
sbb
lds
xchg
lea
sub
filds
insb
push
mov
andl
cmp
test
jbe
mov
cwtl
lcall
mov
in
and
adc
jle
dec
aaa
add
fbstp
cmp
mov
dec
lods
out
imul
push
test
jmp
xchg
test
dec
mov
pop
pusha
dec
dec
pop
push
sbb
sti
sub
sbb
cmp
inc
in
mov
cld
and
negl
popf
lods
xor
xchg
cmc
insl
cmpsl
cmp
mov
dec
pop
movsb
jmp
and
push
mov
pop
inc
jecxz
xchg
hlt
dec
cmpb
data16
xchg
dec
add
lret
and
fistl
clc
aam
and
push
mov
sbb
scas
push
or
jmp
push
fs
jnp
sbb
xlat
cmpsl
dec
pushf
mov
out
mov
mov
movsb
call
push
cmp
pop
and
pop
push
cld
loop
insl
inc
pop
xchg
pop
test
pop
mov
es
push
jp
ja
call
loope
into
pop
push
jnp
cwtl
stos
scas
inc
or
jge
bnd
mov
out
or
lods
negl
sti
scas
out
adc
dec
push
stos
jno
mov
loope,pn
cmp
pop
decb
shlb
call
in
imulb
jle
sbb
pop
adc
push
xor
jne
cwtl
das
shlb
aam
mov
inc
inc
push
add
cmp
fwait
pop
fldt
and
popf
sub
mov
sbb
dec
mov
mov
mov
les
mov
subl
jne
xor
xlat
xor
dec
mov
mull
int3
mov
inc
mov
shll
int3
test
repnz
dec
lods
and
mov
out
mov
ds
stos
mov
and
cmc
jmp
mov
out
out
je
push
cmc
negb
pop
ljmp
insb
pop
lock
ret
aas
adc
mov
inc
movsb
aam
and
nop
pop
cmpsb
cmp
mulb
rcll
in
std
in
mov
nop
lcall
inc
pop
scas
icebp
dec
xor
leave
push
dec
xchg
rclb
rcll
enter
stc
lahf
push
fucomip
outsb
and
inc
gs
pushf
cwtl
bnd
cmp
bound
pop
add
sub
mov
notl
es
sub
lods
xor
es
sbb
movsb
pop
das
scas
pushf
lock
fidivl
or
add
popf
inc
pop
xchg
or
test
adc
mov
pop
fnsave
dec
sbbb
add
repnz
leave
cwtl
jb
mov
cmp
mov
pop
xchg
cs
mov
mov
fcoms
push
adc
iret
mov
fsubl
cmp
sbb
jae
sub
faddp
sub
dec
das
push
push
cltd
adc
xor
fidivrl
pop
push
leave
jecxz
pop
pop
mov
push
imul
sti
cmpsl
cmpsl
add
dec
cmp
xchg
test
fadd
cmp
xchg
pop
mov
repz
lds
lods
mov
dec
enter
and
add
iret
clc
push
and
lods
fmul
adc
pusha
into
mov
mov
fsubl
cmp
ret
pop
or
in
pop
outsl
push
sbb
pop
xchg
inc
inc
loop
mov
mov
scas
dec
jecxz
hlt
fildll
or
test
inc
mov
hlt
jo
jp
push
add
sub
inc
sarl
pop
cmp
fstpl
add
cmp
jbe
fbstp
adc
loope
add
push
jge
mov
test
addb
test
fldl
jle
or
pushf
sub
popl
xchg
jne
push
std
mov
dec
test
add
xchg
cmp
seta
fsts
xchg
gs
test
mov
testl
pop
xlat
push
inc
icebp
sbb
js
sub
shr
imul
insb
outsb
std
xor
int3
or
inc
xlat
add
sbb
dec
pop
popa
in
outsl
lods
adc
gs
or
adc
xchg
mov
and
xorl
mov
or
mov
shll
sub
jecxz
loope
and
lretw
inc
push
dec
ljmp
outsb
mov
insb
test
cmp
jns
enter
fcomi
pop
mov
loope
mov
hlt
outsb
stos
aam
mov
mov
nop
add
cltd
cmp
ljmp
arpl
push
xor
lock
cmp
dec
push
sbb
jg
lret
xchg
shll
jno
lcall
mov
mov
cmp
addb
mov
mov
out
cmp
repz
xlat
shl
popf
cmp
test
inc
and
xchg
das
add
arpl
testl
add
pop
cmp
repnz
push
jns
fnstenv
lret
mov
dec
inc
incl
sub
pop
scas
push
dec
cmc
sbb
xchg
dec
pop
fiaddl
cmp
test
push
fcoms
pusha
mov
lods
jle
mov
test
add
arpl
inc
in
pop
push
inc
repnz
fcmovnu
frstor
dec
inc
xchg
add
mov
mov
sbb
mov
pop
add
pop
or
call
xor
daa
add
mov
testb
lahf
arpl
ds
pop
jae
push
mov
or
sbb
add
lods
loopne
inc
adc
pop
lcall
mov
push
or
outsb
lods
loopne
cmp
inc
outsl
stc
dec
adc
test
xlat
gs
sti
sub
scas
mov
add
xchg
pop
push
divb
pop
jg
pop
leave
test
adc
push
or
test
iret
in
mov
lea
dec
mov
adc
xchg
lea
orb
sti
mov
int
pop
mov
xor
dec
cld
jb
subl
imul
mov
fistpl
pushf
add
sub
clc
movsb
je
mov
push
xchg
mov
rcll
pop
jmp
ficompl
mov
pushf
dec
sti
or
aam
inc
out
pop
mov
pop
mov
data16
mov
inc
into
addr16
call
out
sbbl
push
or
jno
cs
sub
and
dec
add
fsub
call
mov
addr16
push
cmp
jo
in
xchg
pusha
sub
xchg
inc
and
or
lret
mov
xlat
or
adc
loop
in
jmp
sub
lea
popf
mov
dec
es
test
lahf
mov
icebp
je
testl
adc
or
lret
sub
cmpsb
push
int3
test
lds
push
xchg
sub
sarb
pop
in
jnp
pop
dec
sar
mov
dec
ja
out
push
in
push
mov
lcall
cli
cmp
scas
jmp
fsts
loopne
jecxz
fs
incb
xchg
inc
int
xchg
adc
add
or
inc
subb
push
xorb
sbb
pop
lods
sbb
fstl
cs
cmp
cwtl
push
xchg
in
push
mov
mov
mov
fnstsw
mov
sub
loopne
cmp
ljmp
cmpsl
pop
inc
sub
jno
iret
jge
bound
test
mov
sti
or
jno
std
sti
bound
addr16
push
adc
sub
mov
jg
cwtl
and
mov
cmp
adcb
mov
sub
sbb
hlt
xchg
mov
fiaddl
xor
aaa
pop
stos
or
stos
xorb
xchg
add
jmp
xor
movsb
pop
popf
and
pop
and
je
icebp
push
sub
xor
mov
lods
sahf
repnz
iret
mov
int
cmp
push
add
jecxz
push
lods
xchg
insb
adc
and
loope
push
movsb
mov
sub
repnz
pushf
mov
decb
mov
mov
pop
add
test
ss
ret
sub
adc
lock
xchg
in
sti
in
mov
fisttpll
sahf
ljmp
lds
scas
ret
sub
ret
mov
inc
out
push
lret
cld
int3
leave
int
sbb
subl
pop
adc
loop
int3
or
f2xm1
nop
int
pop
bound
movsb
jp
mov
psadbw
sub
push
mov
cwtl
mov
mov
fwait
or
or
sub
inc
jne
xor
ss
cmp
pop
push
fmuls
lahf
inc
fldcw
cmp
mov
add
clc
inc
fidivs
sbb
lcall
xor
aam
outsb
xor
xor
test
add
cmp
xchg
in
ja
pop
push
xor
cmpsb
aas
loop
xor
jb
pop
movsl
testl
adc
ret
or
and
out
jns
mov
or
push
adc
mov
cmp
test
sbb
std
xor
mov
insl
enter
jb
push
xchg
insl
and
cwtl
adc
mov
cltd
stos
call
cmpsb
cmpsb
xchg
cmp
mov
pushf
shlb
mov
std
lret
xor
jecxz
cmc
and
popl
add
jo
adc
mov
xchg
in
in
xor
and
loope
xorb
adc
or
out
mov
lods
cs
subb
hlt
cmpsb
stos
fdivs
add
icebp
aam
subb
mov
xchg
mov
addb
mov
movsb
jg
enter
pop
mov
cmp
lret
lcall
pop
xor
ret
pop
and
imul
push
mov
adc
mov
jnp
lods
mov
mov
popa
in
aaa
mov
iret
or
sub
mov
call
xchg
iret
jp
xor
test
jns
ret
xor
jmp
pop
adc
iret
lahf
iret
sbb
sbb
iret
sub
pop
arpl
push
das
stc
inc
out
cmp
pmaddwd
js
ffreep
or
andl
mov
dec
cmp
fisubl
cmpl
pop
ffreep
adc
pop
xchg
in
popf
adc
jmp
sti
dec
stos
and
je
jne
mov
push
ds
es
mov
cmpsb
adc
popa
sarb
lds
xchg
stc
push
sbb
and
mov
sub
cwtl
dec
cmp
imul
in
jbe
mov
pop
arpl
js
pop
xor
les
xor
add
lea
xor
xor
jl
call
out
jb
jae
iret
cmpsb
xor
ret
mov
fcmovnu
enter
jb
pop
lretw
add
nop
xchg
popa
mov
shrl
ret
lahf
mov
imul
or
outsl
mov
enter
lcall
mov
movsb
mov
sbb
adc
aam
test
stos
and
ds
aas
test
test
xchg
xor
ret
flds
inc
mul
iret
sub
or
pop
gs
mov
gs
mov
call
leave
and
inc
sbb
xchg
xor
and
fsubrs
in
mov
xor
mov
xlat
dec
scas
aas
pusha
fdivs
push
mov
jbe
inc
add
xchg
mov
scas
popa
leave
fldenv
shll
ret
add
and
and
inc
cld
movsb
movsb
repz
aaa
push
flds
pop
lods
sbb
shrl
fwait
stos
mov
add
adc
dec
divl
push
mov
repz
in
add
fdivr
add
rcrl
jnp
lea
mov
add
sub
mov
push
orb
fsubrl
sub
jmp
jp
pop
and
data16
mov
cmp
fsts
sbb
mov
lahf
sub
pushf
and
mov
hlt
lahf
icebp
adc
out
mov
lahf
inc
mov
in
mov
xor
or
ljmp
mov
jne
mov
mov
adc
or
pop
sahf
xor
xchg
xor
mov
add
dec
push
jmp
cmpsb
cmpsb
mov
cmp
adc
xor
fisubrs
sahf
sahf
cmp
ss
mov
imulb
jbe
loope
mov
popf
push
test
lahf
sbb
stc
jmp
add
xchg
lds
fisttpll
lds
xchg
push
push
into
popf
je
les
cmp
je
sbb
test
les
nop
and
hlt
xchg
jnp
sbb
push
push
add
dec
sbb
pop
lret
pop
cmc
mov
addl
aas
lret
ja
pop
xchg
repnz
test
xor
sahf
lret
insb
sbb
in
sub
lret
mov
fs
imull
aad
outsb
xor
mov
lea
into
push
xchg
bound
jl
sub
shl
jecxz
enter
les
mov
sahf
jb
out
jle
jmp
cmc
cmc
push
or
pop
mov
jp
in
hlt
roll
lea
stc
xchg
sub
mov
fs
scas
sbb
inc
pushf
jp
push
out
xchg
push
test
adc
adc
mov
ja
sbb
sbb
jle
mov
and
lods
loope
ljmp
mov
jge
pop
or
in
in
in
or
xchg
outsl
scas
fnsave
sbb
lret
inc
cmp
push
cli
test
jbe
les
dec
test
push
int3
mov
and
fisubrs
push
lahf
cmp
push
lcall
xchg
push
fisubrl
out
lods
xor
stos
shl
loop
cmp
repz
adc
mov
push
mov
inc
aas
sbb
xchg
mov
add
adcb
cmp
in
aas
in
jno
add
xchg
mov
lods
mov
cmp
lahf
mov
jb
sub
mov
cmp
xchg
ret
insb
fmull
testl
imull
pop
jbe
push
sarb
sub
cmp
jo
dec
rcl
call
aad
int
push
and
repnz
add
fcoms
pusha
stos
mov
rcl
xchg
test
adc
in
pop
mov
xorl
jns
or
jg
mov
rcl
imul
mov
jmp
mov
js
decl
xchg
cmp
adc
mov
push
sbb
aam
pop
push
pushf
sbb
fisubrs
js
mov
sub
jb
imul
pop
push
xchg
xchg
cmpsl
or
push
and
push
imul
sub
sub
sbb
push
test
jnp
jnp
jge
cs
adc
or
sub
out
sbb
lahf
push
stos
pop
mov
jmp
aad
xor
xor
jecxz
cmpsb
cmpsb
push
mov
idivl
or
and
stos
and
sub
dec
addb
popf
mov
adc
stos
into
cli
xor
das
sub
xor
lock
cltd
cmp
cmpsl
subb
pushf
mov
push
and
pop
leave
push
cs
and
icebp
inc
mov
mov
sbb
jnp
rcll
cmp
mull
sub
cltd
fisttps
out
leave
ss
adc
icebp
xchg
div
aas
and
inc
sub
push
lock
adc
jne
insb
xor
gs
inc
test
mov
cmp
mov
cmpsb
push
icebp
jne
rclb
mov
stc
and
aaa
xor
rclb
cwtl
cli
push
jl
pusha
stos
pop
imul
mov
xchg
in
imul
ret
mov
insl
xchg
sbb
add
aam
xchg
sbb
xchg
xor
out
sbb
int
js
add
mov
stos
and
adc
push
in
into
dec
mov
gs
movsb
incb
shll
push
fsqrt
sbb
call
push
pcmpeqw
movsl
xchg
xchg
sahf
sub
je
pop
pop
lret
rcrb
mov
jae
cmp
push
push
cmp
stos
rcrb
jl
lds
iret
in
xor
xchg
scas
xor
sbb
aaa
and
mov
mov
inc
fdivp
and
data16
stc
xorb
movsl
xchg
lock
push
xlat
push
jge
lcall
out
les
mov
cmpl
ficoms
xor
out
mov
ret
sub
push
jne
nop
mov
loope
cmp
xor
gs
sbb
or
icebp
push
pop
xchg
mov
add
into
nop
inc
xchg
lea
divb
or
aam
sarl
sub
aad
jle
ja
movsb
fdivl
push
pop
add
push
mov
mov
mov
push
mov
push
fwait
popf
js
xor
mov
shl
mov
mov
fwait
inc
push
add
inc
lcall
insb
inc
inc
mov
inc
fistl
incl
pop
out
out
adc
push
dec
jle
dec
out
cmp
and
cmp
cmp
inc
lret
xlat
out
inc
or
xor
fdivs
mov
push
int
xchg
clc
lcall
mov
fldl
mov
or
es
sbb
and
add
pop
sub
sub
fildll
inc
ja
testl
mov
jg
mov
add
mov
adc
mov
lods
xor
and
xchg
xchg
cmp
dec
jg
push
and
or
in
and
mov
pop
add
cwtl
lds
add
xor
out
ficoms
sahf
ljmp
cli
in
insb
movsl
push
lcall
nop
sub
bound
jae
or
add
adc
mov
mov
push
psrlw
and
xchg
in
rcrb
fdivrp
inc
or
pop
inc
lds
mov
subl
loope
dec
or
sbb
mov
jno
push
push
jnp
xor
into
cmpsl
sbb
mov
inc
jae
pop
sub
repz
mov
sub
mov
pop
shll
adc
lret
or
mov
scas
hlt
cli
gs
push
or
jnp
add
xor
mov
xchg
mov
fmul
pop
jmp
into
mov
data16
adc
in
mov
xchg
popa
dec
xor
aaa
imul
mov
mov
add
push
mov
mov
negl
add
xchg
lods
push
imul
in
out
pop
jmp
push
jl
or
adc
or
pop
mov
push
xchg
into
aas
sbb
xchg
mov
inc
inc
test
sti
cld
insl
fcomps
xchg
lahf
loope
js
xchg
jle
loope
mov
sbb
jns
push
jg
lock
sahf
aad
fimuls
popf
fists
cmp
jae
sbb
jae
xor
push
pop
xchg
pop
sbb
add
push
bnd
jecxz
xchg
dec
adc
leave
aaa
mov
dec
cmp
cli
mov
sub
fsubrs
or
dec
lods
mov
cltd
sbb
inc
cmp
cmp
cli
fiadds
cld
sahf
pop
xchg
push
ss
roll
cmp
or
loop
rorb
jg
jl
inc
sbb
outsl
or
mov
sbb
sbb
fisubrs
or
sbb
cltd
and
lods
fcoml
dec
aam
mov
push
and
push
xchg
jns
inc
in
enter
inc
ret
dec
jne
cmpsl
scas
push
fwait
jno
pop
mov
lahf
dec
leave
sarl
mov
mov
mov
iret
lds
lret
cmp
push
pop
fbld
movl
insb
sbb
int
jp
xchg
adc
xchg
adc
scas
lcall
push
inc
xchg
sub
subl
sbb
mov
lods
mov
xchg
inc
repnz
ja
sbb
out
mov
sub
addb
into
pop
jno
mov
add
push
ret
addb
cmpsb
les
mov
inc
mov
pop
incb
cmpb
inc
pusha
in
mov
dec
jle
out
mov
inc
pop
rcrb
loopne
imul
nop
xor
push
or
or
add
out
jge
loop
rorb
add
fdivp
mov
les
pop
es
lret
jmp
daa
dec
pop
adc
mov
out
push
push
xlat
push
mov
aad
repnz
jg
shrb
push
jg
jo
mov
cmp
mov
mov
and
jmp
push
dec
adc
lea
push
stc
inc
addl
and
pushf
pushf
mov
mov
es
mov
das
xchg
les
mov
cmc
inc
mov
andb
ljmp
adc
mov
fdivs
out
push
push
fcomps
sub
mov
push
dec
adc
in
or
daa
jae
das
or
push
dec
sub
fcmovu
and
inc
mov
jb
int3
or
xchg
mov
movsb
sbb
mov
xor
das
test
and
lock
push
inc
jmp
xor
sbb
jecxz
ljmp
cwtl
push
jge
add
or
jns
cli
cmp
gs
fstl
mov
lret
sbb
pop
lods
call
int3
inc
jne
or
mov
mov
mov
pop
sub
sbb
pop
and
pushl
xchg
addr16
push
push
jmp
test
in
xlat
call
test
clc
xchg
mov
bound
dec
bound
push
clc
loope
push
lcall
fdivp
pop
sub
movb
cmp
pop
ret
hlt
pushf
scas
adcb
sub
add
pop
mov
jns
add
insb
jg
fnstenv
jo
and
roll
mov
nop
xchg
mov
scas
push
xor
mov
jl
jle
rorb
push
mov
mov
fisubrs
jns
pop
sub
add
imul
test
or
out
mov
cmp
jle
mov
hlt
mov
aas
sbb
cmpsb
add
out
movsl
sub
mov
dec
lret
ljmp
sub
pushw
push
mov
cmp
push
mov
ret
xor
lods
lcall
test
clc
cwtl
mov
inc
int
dec
dec
cwtl
lret
fldenv
dec
sub
lods
sahf
mov
xor
idivb
jp
hlt
sbb
scas
cmp
mov
mov
sub
push
mov
call
in
sub
scas
out
in
out
inc
insl
dec
shlb
mov
jo
insb
push
mov
adc
adc
in
hlt
xor
lods
jb
repnz
push
cs
pop
pop
test
mov
lods
pop
and
inc
xchg
xchg
pop
aas
fdivr
mov
leave
les
loopne
rcr
in
push
cmpsb
jmp
pushf
sbb
clc
std
cmpsb
icebp
xchg
sub
and
jl
and
or
inc
loop
ss
xor
push
movsl
dec
jne
jecxz
xchg
pop
pop
lahf
inc
loope
push
or
test
out
lret
mov
and
fwait
rclb
dec
jno
lods
enter
push
or
or
rcrl
lods
loopne
inc
cs
cli
pop
mov
stos
das
cltd
inc
repz
test
and
pop
xor
push
lods
sub
pop
popf
push
dec
fcmovne
adc
dec
dec
dec
addb
rcll
out
jbe
mov
leave
in
popf
test
adc
pop
lods
pop
sub
jg
out
jo
lea
movsl
push
mov
mov
jne
and
sub
mov
addb
sbb
add
or
xchg
and
rcll
arpl
jb
inc
ja
sti
add
in
scas
movsb
imul
mov
arpl
and
fbld
daa
or
lret
test
adc
fiadds
nop
jmp
and
push
xor
mov
cld
mov
into
popa
and
std
jnp
sti
and
aad
jp
lret
fsubrs
sti
cmpsl
add
idiv
pop
xor
pusha
sbb
call
lcall
dec
xor
add
and
loop
and
dec
xchg
xor
mov
adc
xchg
outsl
test
pop
sbb
mov
dec
inc
adc
push
lock
test
repz
mov
mov
add
clc
mov
ss
and
xchg
and
roll
mov
xchg
dec
sub
inc
and
xchg
jmp
jl
inc
popf
mov
pop
cli
hlt
sbb
sbb
enter
dec
sbb
in
fsubl
mov
sub
repnz
lcall
inc
or
stc
jl
push
sub
pop
outsl
lods
pop
andl
int3
test
xchg
mov
lret
or
insl
fcomip
mov
sbb
mov
cmp
adc
or
sbb
jg
test
dec
cmp
xor
pop
jo
xchg
push
out
fwait
rorl
loopne
xchg
cs
ss
rol
xchg
fldl
add
incl
xor
push
imul
call
mov
xor
addr16
inc
xlat
addr16
jno
xchg
in
jnp
xchg
or
jl
cmpsb
mov
adc
aam
das
xor
cmp
stos
xor
push
iret
hlt
jg
mov
cmp
or
mov
cltd
rorl
xlat
push
and
push
mov
mov
icebp
in
mov
xor
mov
inc
mov
int3
push
shlb
sub
das
mov
inc
aam
rcl
fisubrs
inc
mov
lds
cmp
les
lret
sahf
push
ret
add
sbb
cmc
outsl
fadds
stos
and
icebp
icebp
test
cmpsb
cld
mov
lods
out
cs
sbb
out
lret
loop
xchg
pop
sbb
dec
test
mov
dec
sbb
pop
xchg
lods
add
push
ss
xchg
pop
mov
je
mov
fld
jp
push
lcall
loopne
mov
cmp
cs
jno
jmp
mov
popa
jnp
add
and
enter
mov
out
dec
in
push
xor
rcr
lods
cmc
dec
xor
addl
stc
test
add
imul
xor
jge
lea
mov
out
fldcw
loope
out
call
call
fwait
jno
inc
outsb
fcmovnb
push
fwait
adc
adc
cmpsb
outsl
lods
sub
mov
xchg
inc
fistpll
xchg
aas
mov
xchg
sbb
imul
inc
scas
lds
or
xorl
scas
xchg
sub
or
xchg
ss
icebp
cmc
and
adc
cmp
ljmp
loope
lret
mov
cwtl
jle
rorl
das
dec
jne
js
xchg
scas
into
jge
push
xchg
dec
ljmp
hlt
dec
sub
jbe
daa
push
fs
pop
outsb
fistl
adc
adc
in
mov
sub
test
arpl
sub
mov
dec
mov
test
mov
insl
mov
mov
int3
inc
popa
push
or
out
push
int
dec
mov
outsl
mov
adc
ljmp
hlt
xchg
ljmp
pop
cmpsl
dec
push
dec
xlat
or
addl
xchg
xor
add
hlt
cmp
fistps
mov
je
push
jnp
push
or
mov
mov
leave
inc
hlt
fnstenv
les
dec
rcr
gs
dec
das
push
cltd
ror
xchg
outsl
xchg
insb
sarl
loop
mov
repz
and
lods
xchg
dec
mov
data16
and
jge
dec
movsb
ljmp
adc
cli
jbe
mov
jge
in
int
xor
adc
xor
dec
inc
jmp
imul
and
mov
mov
out
pop
test
cmp
adc
inc
call
adc
push
outsb
jae
sbb
subb
mov
add
incb
pop
test
sbb
and
push
pushf
lds
call
push
dec
leave
stos
xor
cmc
mov
loopne
or
sub
lcall
mov
inc
jg
imul
lods
int3
lods
jmp
xchg
sbb
cmpsl
mov
dec
push
jnp
ss
stos
mov
lret
fildl
sbb
leave
sub
lret
cmp
in
or
add
cmp
sbb
rcrl
mov
cmpsb
nop
xor
mov
in
jg
cmpsb
pop
pop
cmp
sub
andb
sub
add
in
test
xchg
cmpsb
add
inc
bound
mov
sub
mov
push
stos
pop
daa
mov
pop
mov
es
ret
dec
aam
hlt
xchg
dec
bound
and
movsl
push
int3
jp
xlat
cld
jo
testl
adc
mov
in
xchg
inc
cmp
sub
inc
and
push
outsl
add
mov
pop
sbb
xchg
inc
sub
sbb
leave
mov
ret
jmp
xor
jne
lods
ret
orb
adc
mov
int
lret
enter
push
movsb
cmp
sub
jp
movsl
dec
pop
mov
inc
push
scas
inc
ds
fdivs
jno
push
cmp
lea
sbb
movsl
jo
adc
sub
mov
mov
loopne
cmp
rolb
mov
test
mov
xchg
addr16
cmp
push
scas
mov
jg
xchg
fucomp
mov
cmp
xor
shl
loop
out
sahf
dec
push
mov
in
push
insl
mov
shrb
fidivrs
pop
xor
cmp
cs
ficoml
stos
jmp
loope
mov
repnz
roll
loop
pop
jl
mull
fisubl
or
cmpsb
or
test
adc
imul
jecxz
mov
insl
popf
aaa
roll
out
pop
xor
dec
push
std
sub
js
into
xchg
out
cltd
hlt
fcoml
mov
pop
call
cmpsb
pop
repnz
inc
ds
lret
test
cli
lret
jno
outsl
adc
ret
fwait
mov
iret
je
les
add
pushf
mov
movsl
cltd
mov
push
repz
icebp
ljmp
pop
in
out
cmpsl
movl
mov
and
cmpl
int3
sti
add
cmp
push
xor
mov
mov
jl
sbb
repz
xor
inc
pop
mov
insl
stos
int3
mov
dec
fnstsw
fsubrp
dec
aas
int3
sub
jne
mov
xchg
into
movsb
mov
mov
rorb
fiaddl
out
mov
or
xor
jmp
leave
mov
stos
push
add
lds
xor
xor
out
popf
out
daa
mov
repz
aam
mov
arpl
inc
popa
loop
mov
arpl
lea
sahf
push
xchg
cltd
dec
es
and
int
das
pop
aas
push
mov
test
pop
jno
add
bound
mov
imul
dec
in
jl
insb
inc
add
xchg
test
lahf
outsb
outsl
jae
push
sbb
xor
lods
push
inc
push
jnp
and
inc
or
lods
xor
loop
data16
adc
lret
add
mov
sub
ret
jecxz
pop
aam
or
loopne
sarl
dec
aaa
pop
shufps
imul
in
push
fs
adc
ret
pop
cmp
in
push
cwtl
cmc
test
fbld
xchg
scas
scas
rorb
adc
mov
ss
push
stc
out
jns
pop
mov
fdivrs
adc
mov
dec
es
mov
repnz
mov
mov
ret
in
out
jp
push
adc
enter
inc
mov
cld
sub
inc
adc
lods
inc
or
repnz
test
mov
add
push
lea
lods
mov
negb
dec
jle
out
stos
or
fld
subl
data16
sub
push
or
mov
sub
fcomps
stos
xor
imul
add
rolb
loope
sbb
aam
stc
scas
xor
jns
cmp
lret
inc
lods
push
dec
fwait
dec
ss
popa
jo
adc
aam
jns
cmp
xlat
and
xlat
sbb
dec
ss
dec
fidivrl
lret
jnp
insb
test
sbb
das
mov
or
jl
iret
sbbb
adc
lock
mov
add
lret
push
repz
mov
or
aam
pop
xchg
fbld
pusha
cmp
jbe
daa
add
ss
fs
adc
jb
pusha
cld
leave
jnp
test
icebp
scas
jnp
hlt
popf
stos
nop
pop
xchg
add
andl
fsts
xor
pusha
inc
dec
mov
cmp
std
inc
popa
ret
shrl
mov
cmp
aad
loope
arpl
inc
push
mov
in
in
add
add
movsl
bswap
aaa
xchg
jecxz
lcall
adc
jae
fstl
repz
mov
lds
addr16
adc
mov
mov
xchg
mov
lret
test
fsubrp
inc
xlat
sahf
mov
in
data16
mov
das
add
loope
aaa
gs
pop
cltd
mov
xsave
inc
cmp
sub
imul
push
push
pop
xchg
out
fld1
xor
cmpsb
cmp
mov
std
insl
xor
push
fadds
popf
jle
std
mov
dec
aas
jl
mov
fs
mov
push
adc
mov
aaa
add
sbb
jmp
mov
shrb
lea
popa
repz
mov
or
lea
stos
jge
clc
adc
xchg
cmpsl
adc
dec
jl
into
xor
inc
dec
lret
rcrl
pop
pushf
imul
xchg
cld
daa
xor
xchg
add
mov
pop
sub
lds
cli
daa
mov
push
into
jle
ror
js
add
mov
mov
mov
jle
mov
xchg
addb
mov
aas
jne
pop
cld
loope
loop
push
jo
pop
dec
lds
xchg
mov
addr16
mov
push
fs
addl
cmpsb
mov
cmp
adc
sbb
pop
sub
jge
or
jg
or
imul
inc
test
shll
pop
inc
push
dec
dec
outsb
xchg
mov
frstor
dec
in
cmc
cmp
jmp
pop
fwait
mov
mov
jge
fisttpl
dec
jle
inc
cmp
rcl
inc
icebp
xchg
cltd
push
fistl
push
inc
mov
shlb
adc
pop
mov
jb
pushf
jmp
sub
imul
test
fcmovnbe
cld
loope
pop
pusha
outsl
in
data16
idivb
rclb
fstpt
mov
adc
add
pop
lahf
pop
jg
and
imul
aas
jmp
repnz
or
popa
xchg
loop
pushf
adc
cmp
mov
fdivs
dec
insl
repnz
jne
pop
mov
out
psrad
aad
pop
adc
cmp
mov
sub
add
sub
xchg
or
push
fcompl
cmp
xor
or
mov
jbe
sbb
inc
gs
sbb
xchg
xchg
add
push
xchg
cmp
cmpsl
push
cmp
ret
cmp
pop
mov
adc
add
sbb
pop
jecxz
pushf
ljmp
adc
mov
sti
dec
test
ret
jns
cld
jg
clc
popl
scas
push
into
push
mov
fisttpl
push
dec
ret
jo
xor
adc
out
cmp
ja
mov
xorb
pushf
jp
sti
cmpsl
pop
ret
int3
out
rorl
aaa
cltd
fldt
insl
xchg
sbb
mov
movsl
sbb
sbb
mov
popf
popl
xchg
test
test
lret
pop
xchg
int3
add
mov
pop
aad
int
cmp
pop
hlt
and
dec
add
loope
push
inc
imul
sbb
push
lock
adc
xchg
cs
scas
fsts
cli
mov
jae
push
adc
inc
pushf
test
roll
popf
lret
cltd
dec
jecxz
dec
jnp
repz
push
cmpsb
cwtl
sbb
jno
sbb
push
es
js
jb
jae
sbb
adc
rol
jmp
sbb
decl
mov
hlt
mov
dec
int3
aaa
cltd
cmp
mov
push
int
push
xor
into
sbb
mov
insl
fnstsw
xchg
bound
aas
jge
outsb
pop
stos
mov
inc
fmul
cmp
jo
xchg
dec
mov
jle
pop
aam
dec
nop
xlat
push
lcall
mov
jb
cs
outsl
negb
push
push
or
add
icebp
and
sub
jo
cmp
adc
insl
inc
mov
movsb
inc
push
xchg
shl
cmp
out
fs
pop
ss
imul
mov
enter
dec
and
mov
pop
sbb
rcl
fdivl
dec
gs
sbb
xchg
xchg
jo
sub
and
push
jne
sbb
cmp
jge
push
sub
hlt
xchg
or
lcall
lea
into
sbb
pop
or
inc
rol
pop
mov
push
sub
movb
xchg
inc
adc
out
int3
sub
jno
inc
dec
lahf
pop
xor
cld
scas
gs
in
push
lods
movsb
fnsave
roll
pop
cli
dec
cmpsb
dec
inc
pop
cmp
adc
mov
and
lea
mov
pop
test
add
push
or
pop
jns
sbb
pushf
dec
clc
pop
mov
cmp
pop
cltd
pop
xchg
jl
in
sbb
aad
mov
fucomp
sbb
dec
mov
and
aaa
sbb
pushf
dec
push
sahf
lock
push
add
mov
sub
fadds
shr
out
pop
pushf
lret
in
insb
jne
and
lods
xchg
dec
mov
loop
inc
negb
xchg
out
jo
add
pop
insl
sbb
lret
frstor
lds
pminub
pop
mov
leave
and
push
jg
sbb
pop
out
call
insb
dec
enter
cltd
test
fists
xchg
xchg
mov
cs
sbb
adcl
push
dec
push
or
fnstsw
js
insb
mov
pushf
mov
outsl
jne
test
lcall
and
push
fistpl
test
pop
cmpsb
mov
cli
mov
insl
lret
lds
rcll
pop
sbbl
fbstp
dec
push
and
push
or
and
das
xor
dec
mov
fs
leave
loope
or
movsl
xlat
sub
cltd
jbe
xchg
inc
and
cmpsl
mov
inc
cs
add
and
out
cmp
dec
pop
sub
repnz
clc
test
je
mov
jno
dec
clc
fcom
es
out
mov
fcoms
xor
fwait
mov
std
dec
inc
loop
push
cli
fcoml
push
out
dec
sub
inc
cmc
dec
mov
jno
push
inc
int
in
add
mov
es
fldcw
mov
or
fsubs
movsb
xchg
stc
movsb
shlb
add
sub
xchg
pop
adc
add
mov
lods
test
into
pop
push
xor
out
shll
and
mov
loopne
mov
mov
adc
icebp
inc
pop
xchg
xchg
push
mov
jnp
push
lds
mov
dec
dec
fldcw
loop
pop
mov
popa
out
dec
and
adcb
jb
rcrb
pusha
xchg
and
clc
mov
aam
cltd
xchg
mov
in
cltd
jle
jge
or
popf
pop
movsl
mov
xor
push
inc
sub
mov
int3
jge
sub
sar
xor
lret
cld
jle
inc
sbb
mov
in
fdivrs
movsl
add
sbb
add
mov
add
mov
imul
hlt
adcl
sahf
into
mov
out
inc
sub
leave
jge
xor
sahf
adc
inc
push
cmp
lcall
mov
dec
inc
loopne
push
jnp
pusha
pop
cmp
imul
cmpsb
pushf
out
popa
out
out
mov
push
mov
push
pop
adc
lock
mov
pop
push
int
in
rcrl
stos
and
ret
rorl
inc
cmpsl
and
movsb
xchg
dec
sbb
fstpt
jmp
pop
push
pop
jg
push
fiadds
das
rorb
int3
shrl
lret
xor
mov
insl
lds
loop
js
jg
lcall
xor
shrl
in
sbb
ss
dec
mov
sahf
dec
sarb
je
cmp
lods
loopne
mov
daa
xor
aam
rol
and
scas
push
cmp
mov
out
stos
push
aas
aam
mov
mov
add
sbb
movsl
xor
pop
in
pop
mov
pop
scas
sbb
loope
or
aas
jle
insb
sub
cmp
sub
xor
imul
push
not
test
dec
loope
dec
ja
and
xchg
addl
mov
je,pn
sbb
mov
cltd
lret
jg
xchg
xchg
enter
sub
shlb
dec
mov
mov
pushf
mov
fsubrp
ficompl
jle
inc
sub
inc
sti
dec
adc
testl
fcoms
fs
test
test
aas
sbb
fsts
lods
adc
pushf
outsl
xor
jnp
mov
cmpsl
stos
roll
lods
pop
push
jno
cmp
aas
mov
mov
xchg
xor
int3
in
cltd
incb
jmp
ds
lcall
and
adc
pop
cmp
xchg
and
xchg
pop
mov
cld
mov
inc
dec
xor
push
ss
sti
push
jno
stos
xchg
push
mov
mov
push
es
mov
push
dec
outsb
mov
push
stos
adc
ss
out
shr
movsb
cld
call
push
and
inc
call
sub
pop
xlat
mov
ds
xchg
mov
repnz
les
int
add
sub
iret
sbb
fmul
aas
cmp
cmpsb
sbb
test
jmp
mov
rcl
loopne
xor
mov
loope
or
arpl
lret
mov
xchg
push
jb
test
pushf
enter
outsb
int3
mov
cmp
mov
inc
jge
gs
jae
enter
out
push
pop
das
loopne
or
jge
jns
mov
adc
jg
xor
mov
and
sub
push
stos
outsb
mov
shl
jmp
leave
adcb
fistpl
cld
cli
add
repnz
rcr
lea
sbb
pusha
xchg
sbb
and
jg,pn
pop
adc
dec
cmp
fcmovnbe
gs
mov
inc
test
dec
aaa
insl
mov
sub
inc
in
sub
sub
sub
jmp
xor
idivb
mov
loopne
rorl
dec
fdiv
pop
inc
pop
loopne
imul
push
ffree
enter
cmp
xchg
fidivl
cwtl
mov
cmpsl
lea
inc
sbb
xlat
and
loope
lcall
mov
mov
test
sbb
inc
jno
mov
call
lret
mov
out
fidivs
xchg
push
add
loop
es
mov
sbb
pop
jbe
ret
inc
jnp
out
pop
in
lea
jne
cltd
sbb
inc
in
cmp
mov
aam
jae
cmp
xchg
or
orb
adc
add
push
mov
filds
scas
int3
mov
jae
xchg
sub
int
pop
mov
mov
js
cltd
out
sub
bound
xchg
test
jp
mov
popa
adc
xlat
xlat
clc
cld
sub
out
lea
dec
ja
mov
mov
mov
jno
push
dec
in
pop
ja
push
stc
divb
adc
enter
mov
in
mov
sub
test
inc
out
adc
mov
xor
sub
out
xchg
mov
sub
add
repnz
sub
or
imul
xchg
outsl
and
cmp
push
jle
jl
push
inc
inc
or
inc
hlt
dec
mov
jbe
lea
mov
jno
cmpsb
adc
push
cmpsb
mov
test
ljmp
dec
sysexit
xchg
push
pushl
bound
sbb
xor
sbb
pop
fdivrs
mov
repz
pop
inc
xor
loope
ret
xchg
lret
pop
lods
insb
shll
xchg
push
outsl
jl
imul
mov
aad
cmp
jo
movsb
clc
mov
xor
outsb
dec
movsb
xchg
inc
cmp
out
xchg
cmc
sub
xchg
mov
sahf
cld
xchg
lret
jge
imul
mov
and
dec
and
mov
dec
rolb
inc
inc
jne
jne
mov
mov
jno
push
xchg
mov
and
cmpsl
or
dec
sbb
mov
fs
movsb
cmpsb
mov
pop
mov
push
loopne
sub
or
jbe
sub
sahf
int3
inc
pop
movsl
js
pop
sub
in
insb
jbe
loop
pop
jae
xchg
imul
mov
push
outsb
daa
imul
adc
jo
mov
mov
mov
adc
out
xchg
outsb
lret
loop
xor
pop
mov
scas
sub
fwait
pop
jge
inc
mov
mov
in
mov
inc
jb
or
test
mov
mov
addl
and
sti
in
out
test
stc
or
sub
cmp
add
mov
pop
ss
les
push
xor
imul
push
lods
ss
mov
push
rcrl
xor
dec
sbb
mov
and
lahf
inc
adc
mov
mov
out
into
mov
mov
mull
jecxz
shrl
into
fistpl
or
ror
fs
or
dec
adc
fildl
stos
inc
mov
stos
adc
xor
adc
loopne
lcall
cmp
pop
call
push
movhps
lock
cmp
sub
mov
leave
imul
lods
mov
adc
frstor
push
pop
je
jp
push
outsl
stos
pop
xor
sub
jle
xchg
inc
sbb
cld
sarl
out
pop
xchg
cli
pop
push
out
fisubs
test
mov
mov
fstl
ret
cmp
repnz
sbb
xchg
sub
jns
leave
mov
int3
cmp
lods
inc
incl
rclb
push
xor
sbb
push
add
mov
in
or
push
cmp
mov
mov
js
dec
clc
adcl
outsl
or
push
cmp
movsl
ja
into
sar
bound
sub
push
jl
push
xor
push
adc
mov
mov
mov
xchg
movsl
das
sub
int
mov
stos
and
cmpsl
pop
and
xor
sahf
inc
mov
xor
fisubrs
xor
clc
test
pop
fidivrl
fwait
inc
adc
loope
jge
sub
loope
data16
fwait
clc
push
lock
mov
inc
in
andl
icebp
cmpl
jmp
dec
aaa
mov
pushf
ds
mov
and
push
push
int
add
jle
add
cmp
xchg
jmp
mov
pusha
sbb
jno
shlb
repnz
xchg
dec
lods
xchg
movsb
orb
div
push
ljmp
mov
adc
pusha
pop
xchg
in
test
shll
mov
push
inc
jo
stos
xchg
sub
cmc
cwtl
js
dec
cld
ret
pop
pop
add
xor
movsb
dec
movl
add
stos
fwait
sbb
ficoms
jge
or
or
sub
into
jmp
loop
nop
rcr
scas
js
mov
mov
out
shrl
in
mov
or
mov
jp
clc
mov
mov
es
nop
xchg
mov
decb
sbbb
jno
inc
pop
test
adc
sub
pop
mov
add
and
int
stc
test
int3
mov
inc
push
rcll
adc
xor
jb
popf
hlt
out
enter
in
mov
xchg
inc
mov
xlat
imul
and
sub
leave
shlb
jp
jge
mov
cmp
scas
adc
je
lahf
xlat
repz
xchg
pop
arpl
push
movsl
lods
dec
adc
adcl
pop
or
push
popa
push
fwait
ja
sbb
or
mov
lret
lods
cmpsb
add
mov
inc
popf
or
subl
or
adc
fstpt
clc
mov
dec
jg
imul
sub
sar
rclb
outsb
lea
cltd
inc
inc
dec
cmpsb
mov
int3
mov
or
lcall
dec
inc
mov
adc
mov
int3
movsb
mov
jbe
xchg
std
movsb
jge
jmp
jb
test
and
popf
xor
xor
out
dec
inc
sub
jge
inc
sbbl
xchg
loop
jae
push
inc
sbb
xorl
mov
out
movq
jno
test
lahf
xlat
cltd
mov
in
in
cltd
ljmp
pop
adc
cmp
mov
jecxz
vcvtsd2ss
clc
and
or
sub
mov
and
mov
add
and
sbb
out
shrl
adc
mov
nop
insb
in
sarb
hlt
pop
fsubrs
cmpsl
pop
jecxz
jno
and
lods
mov
pop
iret
ja
aad
mov
add
xor
imul
enter
xchg
adcb
xchg
ljmp
shrb
and
lcall
mov
cld
and
xor
sbb
out
lds
dec
mov
les
adc
xlat
pop
iret
rcll
cwtl
mov
sub
xchg
sarl
adc
sub
cmp
mov
and
dec
cmp
cmp
jmp
push
pop
lock
adc
stos
lret
dec
dec
repz
mov
jb
add
inc
fisubl
scas
jmp
sub
pop
jge
and
ffreep
cmp
or
adc
adc
or
mov
adc
testb
push
ret
sbb
push
inc
mov
jns
sbb
mov
cmp
adc
pop
mov
xor
movsl
mov
out
mov
xor
movb
sahf
outsl
pusha
js
xchg
test
cs
fnstsw
push
in
cmp
mov
xlat
imul
xor
popf
hlt
or
leave
hlt
add
mov
lret
popf
fldcw
cmc
pop
inc
dec
sub
and
test
es
or
popf
push
ja
js
push
jp
jns
jp
dec
inc
cltd
mov
int
xchg
int
sub
loope
mov
xchg
jb
das
shll
xchg
mov
mov
ret
pushf
fstpl
out
mov
imul
movsl
aas
cmpsb
mov
mov
inc
mov
inc
pusha
jl
movsb
out
push
lods
aaa
xchg
jne
fidivrl
adc
pop
cmp
jmp
mov
outsb
dec
and
fimuls
faddl
xchg
jnp
pop
adc
jne
adc
jno
and
mov
bound
lods
leave
iret
inc
dec
jnp
rcr
sub
mov
ficompl
test
jp
and
or
mov
xor
adc
mov
js
mov
stos
push
mov
loopne
dec
add
mov
mov
inc
jmp
adc
aaa
rorl
sbb
push
out
dec
js
loopne
sub
jae
sub
xor
iret
push
data16
icebp
popl
mov
cld
sbb
inc
icebp
in
insl
ljmp
faddl
cmp
push
je
lret
sub
adc
hlt
xchg
cmpsb
out
leave
int
inc
out
inc
sarl
call
xor
inc
mov
sbb
xlat
sti
imul
and
icebp
insl
fidivl
or
mov
jnp
and
xchg
mov
jne
call
jbe
fwait
xchg
aaa
orl
jge
sbb
fnsave
adcl
push
shll
lret
add
bound
sarl
mov
outsl
push
mov
stos
pop
test
orl
push
nop
cmpsb
jno
cwtl
mov
inc
adc
mov
fwait
mov
mov
xlat
mov
icebp
mov
mov
push
addl
add
daa
xchg
andb
xor
aas
dec
xor
push
or
cmp
dec
mov
scas
cld
stos
negb
leave
jle
jo
jle
cmc
cmp
sahf
pop
ss
mov
lret
sub
insb
push
adc
and
adc
fdivrs
or
js
xor
fdivrl
mov
add
push
pushf
subb
fcoml
add
movsb
movsb
into
lea
mov
clc
not
stos
mov
mov
mov
pop
jecxz
fcompl
imul
or
mov
jb
sub
jmp
rorb
push
js
mov
cmpl
repnz
pop
xor
stc
movsb
fs
aad
addr16
in
mov
pop
test
xor
add
xlat
inc
xchg
mov
mov
adc
loopne
gs
loop
sub
sahf
jbe
ds
bound
mov
sbb
ret
cld
mov
jl
out
insb
or
imul
dec
mov
fildl
cmp
fninit
pop
cwtl
or
add
ret
jmp
mov
or
sub
ljmp
cld
mov
call
jns
call
fiaddl
mov
cli
jp
inc
or
pop
pop
iret
lret
lahf
dec
sub
pop
xlat
add
cmp
mov
lods
pop
jae,pt
jae
pusha
fisubrs
adc
or
mov
mov
lods
je
pop
mov
fwait
pushf
and
test
loop
pop
clc
outsb
add
mov
adc
fcom
jge
pop
bsr
insb
mov
xchg
stos
push
iret
adc
push
movsl
in
inc
sub
aas
pop
sub
test
pop
stc
das
cmp
les
dec
in
fwait
mov
cmp
nop
dec
insl
sub
cs
cmpl
lods
out
mov
outsb
sbb
mov
mov
leave
mov
loopne
dec
mov
enter
dec
es
cwtl
std
xor
std
incb
add
mov
aas
jmp
mov
fcoml
sahf
cmpb
or
mov
pop
lods
xchg
inc
je
enter
std
lods
and
xor
rcl
mov
stos
test
xchg
dec
pop
mov
fsubrs
or
aad
xor
adcb
mov
fwait
and
jmp
ret
xchg
jl
add
insl
mov
cli
mov
sbb
cmp
int
das
aad
addb
mov
sbb
nop
arpl
adc
int
xor
dec
sbb
push
jg
cmp
mov
outsl
cmp
adc
repnz
push
sbb
jmp
loop
jg
mov
dec
jecxz
mov
or
xor
std
push
mov
into
xor
and
lahf
in
ret
loop
ret
jno
out
sar
dec
xor
inc
imul
movsl
testb
sbb
imul
rol
std
jp
dec
lcall
xchg
pop
out
add
mov
sbb
mov
pusha
push
dec
xlat
in
sub
push
gs
sbb
xor
pmuludq
and
imul
sar
loopne
hlt
xchg
cmpsb
mov
pop
xchg
or
test
jae
adc
das
adc
mov
jle
and
mov
negl
cwtl
xor
out
leave
mov
dec
bound
sub
dec
add
mov
mov
xor
shlb
fimull
ftst
jge
sahf
mov
sar
mov
lret
or
and
adc
aam
jp
inc
jecxz
inc
xor
pop
dec
cmp
push
mov
xor
cmp
fbld
ret
or
stos
mov
ljmp
dec
push
fidivrs
iret
movsb
mov
and
or
gs
pop
imul
mov
call
andb
add
cmp
push
js
lods
sub
jns
add
mov
lea
fs
mov
lret
cmp
call
shll
subl
push
add
mov
aam
fildl
mov
jae
dec
and
cmpsl
jbe
out
xorl
mov
cld
jp
dec
sbb
movsl
xchg
aam
cmpsb
inc
dec
dec
sub
jno
inc
pop
dec
scas
popf
pop
shr
cmc
enter
push
insb
cmp
mov
fwait
pop
fwait
shlb
ss
mov
hlt
into
dec
mov
or
xor
jl
mov
push
mov
stc
or
push
test
in
pushf
andnps
lcall
test
jo
jns
mov
cmp
lea
xor
dec
jb
cmp
mov
js
shlb
adc
aas
les
inc
add
xchg
lahf
and
add
in
pop
daa
lods
pop
jnp
ds
xchg
inc
jno
mov
jp
imulb
push
negl
test
mov
cmpsl
insl
cmp
andl
xchg
ss
or
jae
mov
xor
xchg
loopne
xchg
les
mov
add
stc
pop
into
stos
add
mov
stos
popa
jg
cmp
mov
icebp
out
imul
jg
xchg
incl
out
pop
hlt
mov
fsubp
iret
loop
cmp
sub
imul
inc
inc
xlat
imulb
mov
mov
int
jp
dec
push
popa
mov
loop
out
add
cmc
xchg
fisubrs
inc
cmova
sbb
jge
add
sbb
mov
inc
or
arpl
pop
xor
push
inc
addb
push
iret
mov
xor
leave
pop
push
sub
cmpsl
mov
dec
jl
nop
mov
xchg
out
fwait
push
jge
cs
push
stos
xchg
mov
cmpsb
in
mov
pop
call
pop
xor
sarb
push
or
int
cwtl
mov
add
xchg
fwait
mov
scas
fldpi
add
push
cmp
inc
loop
in
xchg
xchg
dec
aaa
jnp
repz
jecxz
mov
sbb
fldcw
jnp
fs
xchg
aam
jo
negb
ficoml
leave
cmpsl
pop
add
jl
js
push
dec
sbb
or
adc
pop
xchg
dec
sbb
or
stos
stos
inc
out
xor
out
mov
test
jl
mov
sub
add
pusha
mov
pop
xor
sbb
push
loope
dec
jmp
dec
cmp
xchg
ljmp
testl
test
gs
pushf
daa
cmp
mov
cmp
adc
out
sahf
call
cs
es
insb
inc
and
pop
icebp
repnz
push
sbb
ljmp
inc
and
stc
js
xchg
jns
cld
cmc
mov
divb
push
je
push
adc
mov
inc
lcall
dec
mov
jns
mov
jne
sbb
sbb
add
es
add
sti
or
jo
cmpsb
push
jecxz
bound
pop
int
mov
jnp
aad
stos
adc
fmulp
or
jae
mov
push
out
ds
repnz
fldt
orb
add
inc
lret
dec
loope
shl
push
fidivrs
pop
xchg
sti
movsb
call
pop
cld
in
and
hlt
xlat
cmc
lret
or
mov
jge
push
sbb
push
in
setae
cwtl
stc
addr16
call
or
mov
outsb
mov
fcomps
scas
aaa
leave
adcl
imul
movb
xor
test
pop
xor
iret
push
mov
xor
jp
les
push
das
pop
sub
rcrl
xchg
mov
movb
pop
scas
lahf
rorb
enter
pop
and
push
or
inc
outsb
mov
clc
mov
fstpt
dec
fidivrl
bnd
push
lods
jne
pop
repz
jp
add
cmp
andl
xchg
and
sub
xor
xlat
clc
nop
repnz
lds
enter
repz
or
test
mov
ret
std
add
aas
and
push
xchg
xor
push
in
js
sahf
dec
cltd
mov
mov
jmp
add
cs
dec
mov
mov
sub
sub
push
pop
dec
pop
pop
sub
adc
push
stos
pusha
push
cs
mov
sbb
repz
xchg
xchg
ljmp
cmp
fdivs
jp
or
xor
scas
jns
outsb
dec
cmp
popa
lea
daa
dec
cmp
dec
dec
and
cmp
rcll
xor
mov
dec
pop
dec
iret
pop
add
out
mov
xchg
test
xchg
inc
nop
add
mov
push
in
arpl
cld
push
pop
adc
movb
xchg
lock
nop
andl
out
cmp
xchg
push
psrad
inc
test
sahf
inc
iret
cmpb
fdivrl
hlt
scas
xchg
jecxz
lahf
push
stos
ljmp
jb
mov
dec
pop
in
sbbb
adc
outsb
xor
pop
xchg
into
jnp
mov
in
cwtl
xchg
into
rcrl
pop
fisttpl
idiv
xchg
adc
mov
cli
mov
jge
pop
mov
push
cmpsl
jb
cmp
test
mov
push
jo
mov
nop
jg
xor
dec
aas
movb
movl
cs
mov
xor
jl
adc
mov
xchg
ret
push
adc
gs
lahf
aas
movsb
or
lds
stos
out
pop
rcrb
inc
add
aam
xchg
mov
rcrl
sub
imulb
cmpsb
fnsave
xlat
push
in
insl
fsincos
in
mov
pop
jne
out
adc
or
mov
jge
adc
fs
ficoml
mov
fdivl
pop
xchg
push
rolb
sub
inc
xchg
cmp
inc
lock
dec
in
mov
cmpsl
pop
xor
mov
mov
js
push
mov
in
pop
and
icebp
cli
jge
outsb
rcll
ljmp
push
sub
inc
imul
inc
icebp
sub
pusha
scas
pop
inc
and
mov
jp
inc
mov
sahf
stos
mov
mov
mov
mov
inc
arpl
fisttpll
mov
add
mov
fsts
lds
adc
movsl
dec
cmp
xchg
inc
dec
xor
xchg
add
je
mov
icebp
scas
dec
bound
push
adc
xor
int3
cltd
inc
out
shll
imul
loop
andl
dec
test
mov
cmp
lods
xchg
imul
xchg
jne
in
mov
xchg
xchg
sbb
mov
mov
fsub
mov
sbb
test
nop
ljmp
xor
sub
xor
aad
xchg
push
sbb
rcrb
out
and
mov
pop
xorb
mov
int3
test
testl
aas
jo
movsl
sti
pop
jns
dec
lcall
jo
adc
pop
ja
daa
idivl
add
push
int3
sub
out
ja
sub
mov
outsl
dec
aad
popa
pop
xlat
ds
push
insl
into
pop
xor
mov
shrb
in
and
ret
add
add
mov
iret
sbb
jne
cmp
sbb
ja
mov
outsl
popa
sarl
jns
push
mov
pop
mov
ret
leave
addl
mov
adc
int3
pop
pusha
mov
mov
dec
ficoml
mov
out
iret
dec
push
addr16
cmp
jmp
es
repz
adc
movlps
and
in
xrelease
out
pop
xchg
inc
push
lret
loope
clc
xchg
mov
push
sbb
ja
push
mov
cmp
lcall
push
jg
inc
in
lret
cmp
shll
cmp
dec
icebp
addb
cmp
mov
xchg
xor
in
add
mov
lea
pop
jle
jle
bound
xchg
lods
adc
loopne
ret
dec
aam
mov
inc
or
cmp
xchg
sbb
xchg
jmp
sub
jne
push
stos
hlt
xchg
cli
sbb
nop
bound
lcall
subb
decb
jg
test
jne
xor
pop
hlt
cld
add
pop
negl
xchg
xchg
sbb
jno
in
fdiv
xchg
jno
outsb
mov
push
dec
inc
inc
xor
nop
out
aad
sbb
lea
pop
lods
je
test
mov
out
enter
sub
movsb
pop
mov
ljmp
add
arpl
out
and
jbe
outsl
sub
dec
ss
jp
ljmp
push
sti
scas
jmp
lock
jb
push
je
cmp
mov
into
cli
cs
shll
cmp
sarb
xor
or
repz
lods
mov
fistpl
push
test
fidivl
jge
aas
andl
int
iret
dec
mov
mov
mov
imul
rorb
inc
mov
insb
insb
jl
fdivrs
orb
add
adc
xor
and
jg
movsb
push
inc
adc
ja
js
sub
inc
pop
pop
in
or
test
pop
ss
dec
rorl
or
repz
push
cmp
mov
xchg
mov
xor
das
jae
jnp
cltd
or
add
mov
dec
loope
or
lods
adc
iret
dec
leave
jbe
scas
popf
sub
shl
fstpl
stc
xchg
ret
push
add
ret
or
dec
mov
add
dec
mov
push
je
jmp
fsubrl
adcl
jnp
ljmp
sbb
push
dec
mov
add
popa
insl
shlb
sub
data16
mov
ret
stos
scas
dec
in
cmp
fisttps
xor
or
out
into
jne
pop
rclb
xlat
xor
push
add
lret
cld
jb
inc
pop
inc
push
adc
mov
imul
jne
sbb
push
lods
push
xor
cmpsb
in
adc
add
popa
cltd
push
adc
jo
loop
dec
xor
lret
sub
xlat
aaa
stos
test
dec
insl
addr16
shll
mov
shl
popa
inc
jl
ds
mov
push
inc
ds
lods
fists
xchg
mov
shl
jnp
or
or
pop
pop
dec
mov
jb
lea
sbb
lea
xchg
xor
dec
in
push
or
jecxz
adc
push
sub
lods
out
mov
push
sub
add
pop
enter
push
sbb
repz
enter
ljmp
ja
fsubr
push
push
push
jp
jno
xchg
inc
xchg
sarb
in
add
jne
fldt
pop
outsw
pusha
pusha
mov
mov
jge
fadd
jne
rclb
jae
lret
icebp
inc
sbb
jmp
cmp
add
add
jnp
jbe
pop
sub
test
xor
lods
and
lds
inc
popf
int3
push
mov
sbb
in
mov
cli
aad
mov
xchg
sub
jl,pn
movsb
movsl
pop
stos
jecxz
inc
xchg
jnp
out
inc
in
rcr
in
dec
pop
ja
mov
mov
inc
sbb
mov
insl
sbb
inc
xor
jne
sbb
and
pop
sbb
xchg
jl
jecxz
fstps
imul
addr16
and
inc
nop
add
push
data16
xlat
pop
cmpl
lcall
fwait
lock
xor
pop
xor
idivb
into
arpl
loopne
mov
xchg
je
add
add
rorb
dec
jl
sub
sub
fisttpl
std
test
mov
cmpsl
pushf
lds
mov
fistpl
sti
mov
cltd
jp
call
scas
xor
repnz
sahf
dec
push
xchg
mov
sbb
push
sub
stos
jg
je
lds
inc
jbe
pop
and
dec
add
std
dec
xor
test
xor
in
mov
js
aaa
cmpl
daa
ficompl
aam
out
and
pop
fisttps
mov
pop
pop
add
mov
mov
or
push
test
lahf
in
leave
and
dec
add
iret
push
mov
scas
js
xchg
mov
call
add
jo
push
out
push
popf
lret
ret
dec
inc
mov
and
mov
iret
mov
fwait
std
pop
push
push
in
cltd
mov
xlat
jp
pushf
mov
cs
jle
inc
inc
lret
aam
in
andb
xor
int
xchg
pop
pop
xchg
cmc
xchg
loopne
hlt
ret
bound
xor
cmpl
orl
das
push
mov
dec
int
xchg
jb
push
aaa
dec
pop
jg
lahf
dec
insl
push
pop
nop
scas
decb
sub
aam
pop
and
sti
fldl
int
inc
dec
shl
movsl
and
dec
mov
push
mov
sarl
pop
mov
or
sbb
cmp
icebp
aas
pop
cs
add
and
stos
mov
mov
movsb
imul
sbb
je
sub
pop
and
mov
fldl2e
es
push
das
movsb
ljmp
pop
dec
jecxz
xchg
sub
inc
jp
mov
jb
lods
and
push
xchg
push
and
push
lcall
iret
sbb
dec
sar
xor
mov
cmp
cwtl
xchg
outsl
mov
mov
cmc
cld
mov
xor
repz
fldcw
sub
mov
icebp
push
xchg
or
popa
xchg
repnz
add
stos
movb
xchg
stos
pop
std
fwait
loopne
outsb
sbb
rcl
loopne
insl
inc
dec
les
dec
adcl
test
push
ret
xchg
hlt
xchg
pop
jecxz
loop
loop
int
lock
aaa
inc
push
xchg
lret
int3
icebp
or
mov
movsb
in
mov
in
dec
fs
xchg
pop
inc
orb
jnp
pop
into
fcmovnu
dec
jo
push
divb
push
push
aad
fisubrl
int3
adc
push
ret
xchg
mov
cmpsl
add
dec
dec
mov
scas
lcall
test
add
nop
lret
pop
pop
jge
pop
pop
sbb
mov
jae
add
inc
and
pop
push
pop
hlt
inc
test
bnd
add
fisttpl
loope
jmp
shrd
sti
adc
pop
adc
cs
repnz
add
sahf
xchg
in
jp
fiaddl
inc
addl
cmpsl
sub
movsl
rep
gs
repz
adc
push
jmp
stos
addl
repnz
xor
jg
pop
test
loope
and
push
jnp
or
mov
hlt
pop
xchg
fnstenv
sbb
lods
and
mov
cmpsb
dec
icebp
pop
loop
dec
cmpsl
testl
sbb
ljmp
cmp
gs
xchg
dec
dec
push
iret
sahf
push
jno
repnz
cmp
test
xchg
mov
xor
jne
fnstcw
jp
inc
pop
outsb
fs
in
out
or
cmp
loopne
push
test
mov
orl
out
xchg
cmp
or
je
shr
inc
pusha
bnd
ss
test
push
popa
jle
imul
ljmp
push
xor
call
pop
mov
dec
sti
and
setae
cmc
cld
inc
sub
and
inc
pop
or
mov
jnp
roll
pop
cmp
cmpsb
mov
jecxz
ret
sub
add
sbb
mov
mov
cltd
and
rcrb
in
add
ljmp
or
mov
mov
sbb
add
nop
daa
xchg
icebp
sti
cmp
mov
in
mov
popa
pop
push
lea
sbb
fs
or
push
sub
or
xchg
sti
aad
xchg
mov
cmpsl
or
mov
ret
push
pop
loop
test
mov
add
pop
fmull
sarl
sbb
andl
incl
cmovae
add
mov
xchg
shlb
daa
jecxz
push
mov
xor
decb
mov
sub
xor
jmp
test
sub
mov
imul
dec
mov
push
xchg
pop
out
push
orb
cli
addr16
leave
push
mov
adc
pop
shrb
repz
mov
icebp
repz
sbb
movl
mov
push
mov
jmp
mov
ss
add
cmpsl
mov
mov
add
sarb
testl
fstps
mov
add
push
xchg
push
mov
xor
cmp
pop
jg
mov
mov
aam
outsb
fs
mov
test
xor
cs
cmp
addr16
and
inc
adc
mov
insl
in
dec
xchg
loope
enter
mov
inc
fldt
xchg
stos
mov
and
cmpsb
shrl
cmc
lcall
jg
inc
push
adc
in
stc
pop
sbb
jnp
push
and
dec
adc
and
cli
jle
inc
or
imul
or
out
xchg
or
test
lds
subl
or
push
xchg
aas
inc
loop
xchg
lahf
int
or
insl
dec
cli
push
dec
outsl
mov
mov
xor
mov
jne
pop
jae
cmp
hlt
mov
fmull
and
dec
and
cmp
sub
cmp
cwtl
ret
mov
xor
test
jno
lock
daa
aam
cmp
push
xchg
sub
repz
clc
imul
mov
mulb
sbb
fisubrl
mov
int3
pop
insb
test
dec
jbe
scas
ljmp
mov
repz
jle
test
cmp
fs
outsl
add
cmpsb
jg
imul
push
dec
rorb
imul
roll
pop
dec
popa
pusha
enter
sub
sahf
loope
aam
adc
pop
ds
mov
inc
push
cltd
mov
mov
dec
mov
sbb
in
pop
out
pop
outsb
fildl
and
lock
mov
inc
lcall
or
lea
faddl
orb
sub
sub
adc
and
xor
or
in
mov
fisubl
in
jb
fptan
repnz
in
mov
inc
cmp
fistpll
sub
cmpsl
divb
jle
call
pop
inc
dec
mov
in
bnd
aas
dec
icebp
xchg
mov
ds
dec
stos
sub
jo
les
cwtl
xor
les
daa
adc
mov
mov
scas
jecxz
fstl
stos
and
or
xor
in
out
mov
pop
sub
dec
dec
out
aad
inc
xchg
fisttps
mov
add
rolb
int
mov
mov
orb
out
lcall
mov
int3
ds
arpl
jo
mov
repnz
mov
xchg
cmp
jl
push
mov
xor
pop
inc
cmc
out
inc
sub
imul
push
leave
mov
aad
add
jo
xchg
and
fdivrp
pop
test
loopne
lcall
out
js
cmp
mov
bound
add
sarb
mov
xorb
mov
leave
and
cmpsl
js
lcall
sub
repnz
or
sti
insb
mov
iret
pop
aas
dec
pusha
mulb
inc
push
jl
aas
stos
xchg
fcomps
loop
cwtl
xor
js
sub
in
push
sub
mov
pop
mov
les
or
fwait
inc
dec
repz
sub
stos
pop
aam
inc
mov
cmp
ljmp
mov
or
repz
pop
iret
adc
push
imul
adc
aaa
js
mov
jp
sti
mov
gs
movsb
repnz
scas
dec
mov
fildll
xorb
cs
push
inc
mov
mov
cmpl
fisubrl
pop
rcrl
mov
xchg
adc
pop
sbb
fmuls
outsl
fsts
iret
outsb
enter
mov
test
xchg
out
or
loopne
out
nop
jnp,pt
cmp
das
mov
cmp
pop
sti
adc
movsb
insl
cmpsl
loop
or
add
sbb
mov
idivl
adc
fisttps
xchg
push
sbb
lock
mov
sbb
ss
or
je
fwait
rolb
dec
lock
popf
xlat
dec
fstps
xchg
mov
pop
xchg
sbb
mov
and
jno
fs
xor
mov
adcl
cmpsl
clc
adc
cld
std
mov
arpl
inc
out
or
push
jle
adc
jnp
pop
push
inc
jmp
pushf
gs
or
xor
dec
addr16
pop
lea
pop
adc
shlb
xor
mov
sub
mov
aam
mov
jno
xchg
dec
cli
popf
inc
pop
in
mov
sbb
mov
scas
cltd
inc
ljmp
imul
sti
adc
inc
into
loopne,pt
jecxz
and
insl
shrl
test
divl
pop
negb
xor
dec
inc
add
aad
inc
stos
insl
and
aad
mov
rorb
aaa
cmpsl
xor
leave
movsb
dec
add
or
pop
cmp
sbb
cmp
pop
sub
movsl
xor
jecxz
outsl
dec
hlt
outsl
adc
ss
and
mov
es
out
fdivl
dec
sbb
inc
or
jp
mov
mov
adc
je
cli
scas
lret
dec
xchg
inc
fiadds
sahf
mov
xor
in
insb
sub
pop
or
ja
cmp
xor
mov
pop
inc
jbe
das
mov
dec
mov
jmp
sub
je
das
dec
imul
pop
sbb
mov
mov
cwtl
rcr
mov
inc
dec
xchg
imull
push
pushf
ret
stos
cmpl
inc
jno
adc
and
xor
inc
jecxz
cmp
mul
inc
adc
xlat
fdivrp
inc
movsb
popa
inc
pop
fucomi
dec
iret
or
sti
pop
pop
jge
in
xor
pop
mov
sub
inc
cmpsb
cmp
add
das
dec
push
adc
aam
imul
push
movsb
push
mov
into
popl
and
test
movsb
mov
ret
cmp
scas
loopne
adc
pop
cmp
pop
xor
mov
add
hlt
mov
jg
jae
pop
mov
loopne
loope
movsl
push
sub
xchg
push
lock
mov
mov
sub
push
mov
std
test
rol
ss
loopne
jl
sub
xor
jno
xchg
push
popa
hlt
lcall
cmp
inc
xor
popa
and
adc
data16
xlat
popa
pusha
mov
pop
ret
iret
stc
or
mov
sub
sub
jno,pn
jne
imul
test
sbb
movsb
cmp
dec
adc
fldcw
sbb
xlat
cmpsl
out
ja
mov
pop
inc
pop
xchg
xor
stc
inc
add
ret
cs
sbbl
mov
outsb
aam
es
xor
ss
mov
or
xor
cmpsl
ja
xlat
outsl
adc
imulb
fnstcw
pop
dec
add
in
fs
dec
xor
xor
shll
mov
jbe
cmc
test
jl
rolb
popf
sahf
ja
mov
jl
inc
ljmp
xchg
cmc
cmpsl
aas
mov
test
mov
xchg
xchg
add
sbb
cld
adc
fsubrs
pop
sbb
push
mov
addr16
inc
das
xor
leave
xor
fldenv
pop
decl
inc
inc
into
loopne
mov
stos
es
pop
outsb
adc
neg
cmp
jne
push
cmp
in
cmp
rcrl
into
clc
push
xchg
rcrb
jecxz
fdiv
mov
jp
aaa
test
nop
mov
pop
insl
add
leave
jecxz
lea
add
xchg
and
out
lock
imul
loop
cmp
gs
inc
dec
mov
aaa
sub
insl
adc
adc
push
mov
clc
jl
lret
and
dec
lret
cli
mov
sub
in
pop
addr16
shlb
outsb
je
inc
test
shr
mov
mov
cmp
xlat
mov
pop
test
cmc
cmp
pop
addr16
outsl
and
outsb
mov
outsb
sahf
sahf
bound
ret
add
inc
mov
shl
lods
pop
jge
clc
mov
fisttpll
fimuls
daa
push
int3
aad
mov
push
sbb
xor
push
movsl
fiaddl
xor
push
mov
ret
push
mov
add
fisubrl
xor
or
imul
negb
push
cltd
inc
jnp
fmuls
rcll
mov
sub
sub
pop
inc
jae
and
fidivrs
ret
fidivrs
mov
inc
lea
mov
xchg
ret
mov
sub
loope
divl
mov
xchg
dec
sub
jge
sbb
notb
jg
add
mov
mov
out
lahf
mov
rorb
xor
in
cwtl
insb
jl
mov
loopne
adc
adc
mov
inc
sti
dec
cmc
enter
outsl
add
dec
adc
scas
rcl
loopne
in
jbe
out
mov
mov
cmp
dec
ds
mov
inc
jbe
shll
jmp
flds
jns
fdivr
mov
out
loope
xor
iret
ret
js
jbe
negb
mov
dec
inc
pushf
mov
mov
jb
jle
fsubs
mov
daa
pusha
xchg
adc
daa
xchg
push
insl
andb
repnz
mov
std
in
nop
jb
or
xchg
movsb
or
dec
or
dec
adc
mov
ret
clc
pushf
das
in
sbb
pop
jnp
dec
daa
jnp
imul
mov
test
into
sub
inc
mov
fmull
in
imul
cmpl
ljmp
jbe
jb
dec
xlat
mov
jb
jge
push
inc
add
sub
mov
cwtl
push
or
mov
xor
bound
lea
roll
imul
adc
xchg
sub
sti
cli
pusha
push
stos
ret
test
xchg
addb
cmp
hlt
push
mov
xor
dec
lea
mov
cmp
jle
xchg
sbb
sbb
xchg
xchg
je
add
or
jecxz
gs
dec
xor
sbb
jo
daa
jl
adc
ljmp
dec
jle
adc
push
imul
ljmp
roll
imul
fisttps
in
mov
insb
arpl
out
mov
and
gs
dec
mov
es
in
negb
jp
dec
fdivrl
xchg
mov
jo
and
jp
lods
rorl
cmp
gs
xor
inc
setns
xchg
sbb
xchg
bound
jae
pop
and
sbb
pop
repnz
xor
out
jbe
xchg
mov
stos
mov
and
call
pop
add
repnz
push
pop
inc
scas
daa
add
mov
sbb
push
stos
ficompl
ss
testl
rcrb
sbb
adc
jae
mov
mov
or
popf
arpl
data16
addb
xor
or
jmp
pop
incb
dec
sti
scas
ret
test
repnz
fstps
xadd
mov
xchg
lods
mov
mov
outsb
push
fs
sbb
inc
sbb
and
mov
inc
into
mov
dec
jno
enter
cmp
jp
pop
inc
outsb
insl
int
and
and
rcrb
cmp
fwait
or
ud0
xchg
dec
sbb
jb
repz
xchg
mov
faddp
or
fldcw
out
xchg
in
les
add
imul
inc
jo
cltd
sarl
repz
dec
pusha
roll
sbb
xchg
fwait
and
mov
push
adc
out
sti
lods
lcall
jecxz
test
mov
popf
orl
mov
std
imul
dec
inc
inc
test
and
div
push
xor
cwtl
mov
dec
xchg
int
push
adc
in
sbb
pop
mov
xor
sub
sub
inc
scas
rorl
movsl
test
ds
outsb
lods
and
imulb
add
scas
ss
adc
push
andb
cli
js
pushf
lahf
nop
int
inc
inc
lahf
xchg
mov
daa
imul
mov
mov
iret
xor
ljmp
adc
mov
mov
xchg
add
adc
xor
cmpsb
int
add
cmc
in
sub
aad
insb
andb
cmc
and
ficoms
lea
ljmp
inc
movsb
es
ret
xor
lcall
adc
imul
mov
enter
repnz
push
lods
insl
cltd
arpl
sti
xchg
inc
mov
nop
mov
xor
jno
cmp
mov
pop
inc
loop
xchg
xor
aas
call
sahf
sub
lods
in
push
mov
cmp
gs
imul
cmp
cmp
add
sbb
mov
jg
sub
mov
xor
dec
xlat
ja
push
daa
es
jmp
aam
inc
adc
notl
fsubl
loopne
mov
daa
mov
mov
pop
adc
loop
sub
repnz
push
iret
adc
sub
mov
jne
test
popa
insl
lock
aas
xchg
subl
jl,pn
aaa
dec
test
bound
sbb
mov
push
loope
pop
cmp
sahf
cltd
sub
popf
imul
insb
mov
pop
loope
mov
or
fcmovnbe
cs
mov
shlb
popa
mov
push
hlt
pusha
cmp
into
es
adc
test
fnstenv
sub
imul
pop
nop
insl
lret
out
jne
mov
aas
stos
movsl
test
jg
or
mov
sbb
outsl
test
mov
inc
pop
xchg
push
or
leave
adc
cmp
fs
adc
clc
sub
cs
push
fbstp
and
push
fcoms
mov
mov
insb
pop
push
mov
aas
xchg
add
jb
add
add
jmp
pop
cmpsl
jb
leave
loopne
das
jmp
mov
test
es
jge
push
mov
out
pop
add
enter
and
int3
lahf
popf
jb
and
push
and
pusha
xor
iret
filds
or
movsl
add
push
hlt
ss
or
xchg
inc
or
adc
sbb
push
aad
andl
enter
std
dec
repnz
pop
mov
aad
cmpsb
sahf
sti
movsl
ret
inc
xor
ja
mov
jmp
lds
cltd
test
mov
pushf
mov
pop
fiaddl
daa
scas
andb
loop
ljmp
xor
lds
adc
mov
sarb
repz
xlat
out
inc
insl
clc
inc
mov
sbb
jno,pn
cmpl
js
sub
or
ret
jbe
cs
xlat
icebp
aad
ljmp
gs
lret
fistl
dec
sub
push
dec
sti
xchg
mov
xchg
inc
int
add
out
adc
popf
aam
lret
jge
inc
mov
jmp
ja
insl
pop
xchg
insl
imul
fldenv
fmull
mov
inc
lods
xchg
ficoms
fidivrs
fistpll
iret
rclb
into
adc
adc
mov
punpcklwd
cli
aad
addr16
xchg
fidivrs
xchg
cmc
fldenv
dec
popf
mov
test
rol
lahf
dec
mov
lods
push
je
sub
ja
ljmp
ficomps
xor
outsb
fs
dec
imul
jbe
lret
or
and
fcmovnu
and
add
add
imul
mov
pusha
cmc
stos
mov
leavew
lret
dec
cltd
mov
dec
mov
and
repnz
xchg
mov
rorb
xor
sbb
inc
fwait
push
aad
lret
push
inc
js
jne
std
mov
shrl
cmp
cld
loope
sti
xor
movsl
cmp
dec
rorl
clc
roll
ss
xor
pop
movsl
mov
mov
sbb
and
imul
pop
out
push
outsb
lock
and
int3
cmp
mov
cwtl
mov
xchg
jg
dec
sub
in
aas
outsl
pop
jne
test
fidivs
add
push
xlat
lret
loopne
xor
xor
loopne
dec
ljmp
fnsetpm(287
scas
add
dec
icebp
hlt
fisttps
jns
lds
mov
jno
jb
jl
lods
stc
dec
sbb
xor
dec
sub
das
mov
rol
jecxz
add
daa
pop
mov
ficoms
push
aam
fnstenv
adc
popa
outsl
push
in
inc
pop
sbb
jnp
mov
jo
mov
cltd
jne
sbb
sahf
fistl
mov
fcoms
clc
lea
rcl
outsl
dec
cmc
sub
sub
sar
cld
jmp
and
mov
lret
sub
mov
push
sub
and
repnz
xchg
push
lcall
push
jo
inc
sbb
cli
mov
jno
mov
int
sbb
and
in
pop
inc
jbe
xor
loopne
adc
stc
jne
xlat
and
dec
stos
cmp
sar
sub
lock
fldl
mov
in
daa
pop
pop
pusha
mov
pop
fistpl
in
cld
xchg
and
and
mov
cmpsb
inc
add
insb
ret
test
stos
and
mov
sub
pop
or
filds
data16
cmc
in
dec
mov
jg
cs
shll
aad
sbb
sbbl
lret
mov
mov
int3
out
adc
lcall
jo
lods
or
fs
in
adc
iret
or
add
je
inc
pop
cwtl
iret
sbb
loop
push
scas
into
data16
xor
popa
push
imul
push
mov
notl
xchg
mov
pop
add
lret
jae
dec
sub
daa
xlat
and
pop
mov
adc
add
push
iret
fidivrl
sub
aam
dec
sbb
enter
or
dec
arpl
pop
popa
sbb
int
pop
stos
rorl
addb
inc
icebp
pop
jecxz
ljmp
adc
lret
gs
pop
push
ja
add
scas
ret
scas
xor
cltd
fcomp
js
xor
add
mov
dec
mov
mov
lret
dec
movsl
mov
mov
mov
adc
pop
ss
dec
cmp
out
stc
rcll
sub
xchg
call
lods
jecxz
jge
call
out
shrl
mov
dec
fwait
lods
cmp
mov
bound
je
pop
outsb
push
sbb
jb
dec
test
loop
xor
mov
sti
lods
xchg
iret
and
push
dec
lahf
fisttpll
enter
fdivrs
enter
sbb
cmp
js
mov
jbe
inc
mov
inc
or
das
jbe
lret
ret
cmp
roll
mov
add
into
ficoml
or
insl
addr16
inc
mov
lea
adc
adc
push
insl
popf
dec
inc
in
pushf
jg
dec
jbe
faddl
ds
sub
inc
mov
pop
inc
mov
fldenv
test
xorl
pop
fdivl
cltd
add
insl
incb
pop
leave
sbb
sbb
mov
mov
pop
aaa
jge
ret
jmp
and
cmp
sbb
jmp
ja
insl
cmp
xor
mov
dec
and
xchg
movsl
mov
cmp
cmp
dec
mov
or
sbb
jle
shl
mov
push
sub
adc
imul
movsl
cmp
pop
inc
pop
movsb
and
subps
lret
fists
movsl
aas
std
mov
iret
out
mov
std
sub
aaa
sbb
lods
xlat
pop
ljmp
xor
movsl
int3
cmp
decb
stos
test
or
in
sbb
ljmp
std
repz
popf
mov
sub
pop
and
aam
xchg
mov
and
rcll
mov
into
cmp
push
jbe
or
sub
or
lahf
jne
sub
hlt
lea
pop
jg
in
mov
inc
lret
xchg
jg
dec
push
enter
cltd
mov
inc
lcall
mov
aaa
test
inc
ffree
aaa
insl
lock
dec
sbb
add
add
and
mov
jb
fcmovnb
inc
push
mov
add
lret
and
loopne
fidivrs
fs
sti
lea
orl
mov
test
test
inc
adc
fs
dec
adc
mov
mov
fwait
or
cs
pop
not
xchg
cmp
jl
fldt
sbb
in
mov
imul
adc
dec
mov
dec
mov
movsl
sbb
mov
fucom
mov
aas
rcrb
pop
mov
jmp
lea
push
xchg
outsb
lods
out
iret
loope
xchg
inc
dec
fistpll
leave
push
pusha
cmp
mov
push
in
rorb
cwtl
fcomps
pop
push
loopne
ja
aad
jno
or
or
mov
incl
and
sti
xor
es
jecxz
push
sarb
cwtl
jle
xor
aam
cld
cmp
and
sub
and
arpl
and
pop
into
js
out
dec
aam
repnz
xchg
testb
or
push
fs
dec
pop
out
push
jp
dec
ret
dec
sbb
lea
bswap
add
in
or
inc
inc
and
mov
pop
push
pushf
mov
sub
aas
adc
out
mov
lret
scas
sarl
lods
mov
mov
and
movsb
push
jno
inc
push
or
imul
imul
test
adc
shrd
call
xor
and
jb
in
jle
xor
sbb
mov
mov
jnp
add
ficoml
lret
and
jnp
add
out
repnz
popa
dec
jb
ja
fadds
adc
dec
outsl
push
test
pop
add
ljmp
lcall
arpl
test
nop
sub
pushf
pushf
add
pop
cmp
xor
mov
dec
imulb
cltd
mov
icebp
and
ret
das
sub
in
mov
jns
lcall
mov
lret
int
jo
adc
in
in
xor
dec
fwait
ret
cmp
adc
sbb
popf
sbb
mov
fisubrl
mov
mov
test
aas
lcall
push
cltd
and
mov
pop
mov
movsl
or
jns
sub
lds
in
notl
jge
jnp
mov
shl
gs
pop
cmp
mov
test
iret
xchg
xchg
sub
ja
mov
lcall
xorl
sbb
repz
bound
xchg
mov
sbb
pop
pop
cmp
imul
sub
aas
pop
adc
xchg
outsl
sahf
jno
jnp
mov
inc
dec
enter
in
xchg
jb
pop
adc
mov
mulb
cmp
pop
pop
inc
repz
sbb
iret
push
pop
lods
loop
insb
dec
out
push
mov
aas
push
or
mov
sub
xchg
fsub
xchg
mov
cmp
pusha
sbb
cld
cltd
pop
movsb
xchg
rcpps
pop
out
scas
popa
jno
sub
fcompl
mov
or
cmc
mov
or
inc
iret
pop
in
fcom
fs
inc
call
outsl
into
dec
inc
mull
dec
sub
mov
movsb
lahf
jl
and
jae
add
ss
out
aad
lret
pop
andl
popf
popf
push
mov
inc
test
mov
loop
lea
dec
jle
pop
jnp
xor
sub
sbb
ljmp
andl
sbb
icebp
cmp
pop
fisttps
in
xlat
les
xchg
cmp
mov
pop
inc
xor
xchg
sbb
sbb
test
or
jl
push
loop
push
fcoml
inc
jbe
and
or
cmpsb
ret
addr16
data16
enter
inc
mov
push
push
xor
jp
imul
jmp
bsf
imul
popf
inc
std
in
sub
dec
sbb
rorb
hlt
cli
mov
xchg
pop
stc
adc
mov
jae
xor
mov
mov
jae
xor
jne
stos
es
fstl
stos
cmpsl
inc
add
mov
pop
fdivrs
out
lcall
xlat
icebp
sbb
push
push
push
mov
in
xchg
adc
iret
pop
leave
fdivrl
stos
xorb
mov
mov
cmp
out
mov
jp
fistl
mov
test
push
inc
mov
sbb
daa
fsin
and
dec
jb
movsb
js
and
into
outsl
out
xor
aaa
iret
adc
iret
cwtl
sub
call
and
inc
and
insl
pop
xor
out
addr16
jp
sbbb
inc
loop
push
sub
iret
fsubrp
test
or
repz
hlt
jge
mov
sub
jle
orl
movsb
pop
jnp
ljmp
js
xchg
inc
lret
xor
xchg
inc
ror
or
inc
cmp
rol
cmpsl
cmpsb
adc
inc
pop
nop
in
out
imul
gs
ds
mov
out
or
cld
pop
pop
pushf
xchg
fsin
inc
dec
add
jle
addr16
mov
std
fs
jmp
xlat
mov
push
jae
orl
push
sbb
jns
mov
push
inc
adc
push
mov
lss
mov
fisttpll
and
xchg
leave
movsl
andb
sub
jmp
adc
addr16
inc
dec
jle
mov
rorb
add
cvtdq2ps
pop
xor
sbb
out
mov
popf
push
pop
cmpsl
and
mov
mov
paddb
add
ja
insl
jg
jnp
inc
push
in
push
pop
xchg
out
repz
mov
dec
pop
arpl
fnstcw
or
pop
sub
fnstenv
fsubl
cmp
jl
ja
neg
je
loopne
in
push
data16
aam
adc
jo
add
cli
push
dec
out
sahf
cmp
ljmp
das
jmp
sub
sub
rcll
clc
jg
popf
jne
jmp
push
cmp
xchg
movsl
call
jo
mov
cmp
and
in
mov
dec
out
cmp
pop
push
mov
fdivrl
mov
cwtl
mov
out
fidivs
mov
lahf
mov
and
mov
dec
test
cmpsl
or
fwait
add
cltd
addl
push
outsw
xchg
adc
cmp
xchg
cmc
cli
rcll
ljmp
mov
mov
pop
fcmovnb
sub
je
cmp
sti
ljmp
repz
jo
push
push
cmp
jnp
xchg
add
movsb
adc
dec
lret
xchg
loope
rolb
sub
mov
popf
pop
xchg
cmp
ficoms
iret
shl
adc
pop
mov
ds
pop
scas
out
fsubrl
sub
and
out
adc
mov
xchg
in
mulb
cmp
cmpsb
xor
test
and
cli
repz
mov
pop
les
dec
rolb
daa
pop
sti
in
repnz
fcomi
jne
lods
iret
lods
add
je,pt
mov
jl
xor
repz
mov
mov
cmp
bound
add
or
mov
adc
mov
aam
ret
xor
pop
sbb
fwait
cmp
popf
add
xor
fwait
movb
push
inc
xor
stc
popf
iret
dec
aam
cmp
es
mov
push
xchg
aaa
or
sub
xor
clc
push
and
fcom
mov
sub
jecxz
scas
add
mov
scas
inc
push
and
add
add
clc
push
out
mov
addl
xchg
jo
xor
xchg
and
push
outsb
jns,pn
jne
pushf
push
pusha
and
or
add
xor
or
and
stos
arpl
xlat
loop
mov
arpl
in
into
fsubrs
stos
loope
mov
sub
mov
stos
push
in
push
adc
cmp
cmpsl
pop
and
jns
test
jl
jmp
sub
iret
fmull
int
icebp
push
lahf
test
data16
fdivs
jge
cltd
cli
bound
sub
push
rcl
pop
outsb
into
mov
loop
add
mov
mov
xchg
xchg
mov
es
test
cmp
int3
sub
push
mov
jns
mov
enter
mov
xchg
mov
imul
loop
sbb
out
fdivrs
mov
mov
sar
ficomps
sbb
xchg
insb
or
add
push
cmp
jg
jne
shrb
and
mov
fidivrl
sbb
jbe
shlb
addr16
jo
add
movsb
push
in
inc
les
adc
fimull
pop
lret
xchg
adc
js
cs
pop
pop
sbb
pop
cmp
cmpsl
ret
jecxz
roll
sahf
mov
icebp
xor
adc
push
incb
dec
mov
fcomp
push
add
out
stos
mov
out
cwtd
stos
out
sbb
xchg
add
mov
add
dec
mov
add
jmp
add
popa
scas
addr16
lret
fs
push
in
ljmp
xchg
sbb
subl
rorl
pop
jne
lcall
lcall
das
cmp
je
mov
lret
pop
aaa
or
ljmp
jno
aaa
into
push
jp
fsubrl
inc
cmp
repnz
fnsetpm(287
jno
push
fimull
jle
sub
test
mov
mov
xchg
stos
pushf
jb
inc
jb
into
imul
inc
jae
xlat
fmull
xchg
insb
pop
fnstenv
adcl
inc
and
test
and
jl
inc
xchg
adcb
pop
sub
adc
movsb
sti
imul
fsubrs
jle
mov
mov
test
cmp
inc
jecxz
xchg
mov
pop
nop
xchg
pop
adc
and
repz
lret
and
and
jp
in
fimuls
mov
filds
xor
dec
jge
je
cmp
or
test
or
sbb
dec
jns
mov
es
std
sbb
rcll
or
dec
andl
out
add
add
mov
incl
pop
mov
lcall
mov
pushf
push
jle
push
addr16
pop
sub
sarw
mov
jl
dec
dec
stos
aam
dec
cmc
xor
fdivrs
movb
mov
cmp
das
pop
push
adc
sbb
xchg
xor
mov
cld
test
mov
lahf
sbb
out
cli
rcrl
add
add
dec
shll
or
sti
loope
aad
xor
cmp
negb
daa
into
mov
pop
xor
aas
test
test
scas
mov
push
repnz
negl
jns
fwait
mov
je
outsl
movsl
into
jb
pop
inc
adc
adcl
and
xor
xchg
les
mov
sarb
jns
aad
mov
out
cwtl
les
mov
push
and
dec
inc
xchg
xchg
adc
and
and
push
xchg
sub
movsb
notl
mov
sarl
mov
popf
jle
add
les
xchg
je
inc
in
cwtl
divl
cltd
rcl
imull
loop
lods
iret
jnp
shl
mov
fimuls
test
adc
retw
mov
mov
inc
scas
pop
xor
lahf
jno
sub
test
fcmovnu
sub
fmuls
push
cmp
or
or
es
push
aaa
mov
int
pop
push
adc
sbb
lock
mov
push
bound
push
xchg
pop
in
sar
dec
inc
fstl
aas
nop
loope
inc
sahf
lea
aaa
repz
rclb
adcb
jp
jmp
add
mov
pop
inc
xchg
pushf
pop
fs
pop
ret
fsubrs
cmp
shl
out
stc
shlb
push
xor
ja
dec
jnp
and
stc
sti
xchg
gs
adc
cmc
ud2
dec
and
test
addl
in
shrb
int
cmpsl
mov
pop
dec
cmp
hlt
fs
aas
hlt
and
pop
pop
arpl
aaa
or
orb
adc
pop
fs
pushf
sub
xchg
jo
roll
jg
adc
mov
push
jb,pn
or
int
xor
lret
add
and
add
mov
out
movsb
and
out
cmp
dec
and
pop
lds
enter
dec
sub
fimull
mov
add
lods
jecxz
fiadds
pop
xor
mov
movl
cwtl
int
mov
mov
fs
cmp
inc
out
jbe
mov
xchg
cmc
sarl
fdivrs
pextrw
orb
je
push
pushf
add
pop
sbbb
loope
ss
pop
add
in
aas
pushf
add
mov
push
inc
xlat
loop
fwait
pop
in
xor
inc
pusha
lods
test
pusha
add
lret
add
dec
sub
and
and
and
fcmovb
faddp
fmuls
stc
icebp
insl
or
jp
in
mov
pop
xchg
bound
les
cmp
aas
es
mov
cmpsl
xlat
enter
repz
icebp
int
xor
outsb
scas
add
sub
icebp
scas
or
dec
aas
push
xor
mov
fyl2x
mov
mov
sub
mov
jg
gs
imul
call
in
cmpl
mov
mov
ds
arpl
test
and
dec
es
lea
pop
mov
xor
fsubrl
nop
cli
dec
xchg
ret
popf
scas
cltd
jnp
mov
mov
test
outsl
cmp
cmpsb
sub
adc
adc
mov
repz
xchg
or
and
sbb
lock
movsl
sti
inc
mov
ret
mov
sti
repnz
pop
fstpl
or
add
inc
lcall
sub
ljmp
aas
cmp
data16
mov
aam
xrelease
mov
mov
xchg
loope
mov
adc
imull
mov
test
pop
cmp
xchg
jo
ret
push
out
push
sahf
std
das
adc
into
call
fldenv
lret
xchg
pop
repz
or
or
inc
push
and
cld
sahf
mov
push
rol
push
xor
fmull
ror
inc
dec
jp
mov
in
test
dec
vpmacsdql
shl
cmp
xor
dec
mov
movsb
outsb
loope
jns
dec
mov
mov
loop
mov
sub
mov
or
jl
lea
outsl
pop
push
jno
mov
xor
ljmp
lds
push
jecxz
pushl
pop
add
xor
xor
imul
adc
push
sarl
push
dec
hlt
test
js
mov
inc
es
loopne
or
xchg
and
dec
mov
jns
jmp
movsl
cmpsb
test
adc
test
aas
cmp
mov
pop
jmp
add
faddl
pop
xchg
data16
fcoml
jge
loop
cmpsb
in
add
pushf
jecxz
ja
pushf
xchg
pop
out
data16
scas
jl
lods
xor
inc
adc
and
movsl
stos
lahf
fdivrl
and
sub
inc
test
jmp
push
add
xchg
popf
push
adc
sbb
lods
sbb
ret
hlt
hlt
iret
pop
imul
scas
dec
pop
or
scas
ljmp
icebp
pop
arpl
rcrb
scas
icebp
lcall
stc
cmp
bts
orb
daa
aas
push
sbb
popa
scas
pushf
mov
cwtl
mov
xchg
arpl
gs
addr16
inc
mov
xlat
sbb
paddw
mov
in
inc
imul
push
inc
sti
jo
jl
int
gs
popl
pop
xor
loop
cs
push
popl
sub
aam
mov
dec
adc
xor
cmp
lds
scas
incl
mov
movsb
sti
into
cltd
ja
cmp
or
pop
or
xor
pop
imul
mov
pop
jbe
testl
pop
inc
aas
and
cmp
dec
cmp
stos
jmp
int3
sbb
repz
mov
testb
out
imul
enter
cwtl
bts
jmp
sub
adc
fucomi
lods
pop
sbb
jbe
sbb
sbb
repz
mov
mov
fwait
repz
andl
lret
pop
mov
sub
popf
pop
lret
stos
int
mov
dec
adc
lahf
pop
test
ljmp
jecxz
lcall
cld
xchg
ficompl
sbb
int3
not
mov
dec
dec
add
xchg
testb
out
adc
nop
clc
clc
add
sub
push
mov
dec
ficoml
scas
pop
insl
pop
xchg
jle
pop
xor
xchg
mov
out
lock
mov
imul
stos
sbbb
cmp
loopne
cmp
push
add
out
js
aaa
jo
mov
adcl
inc
add
push
adc
xchg
jae
jne
mov
and
mov
cli
mov
aaa
mov
out
xchg
rorl
pushf
mov
adc
ss
lret
or
incl
xlat
pushf
xor
inc
sarl
cmpsl
mov
test
dec
adc
cltd
push
cmp
inc
mov
fdivr
outsb
pop
dec
push
leave
int3
mov
dec
inc
cld
addr16
jl
cmp
pushf
rcrl
push
inc
stos
push
lret
jns
jl
pop
insl
in
mov
enter
pop
movl
pop
je
addr16
rcrl
scas
jmp
rcll
in
test
data16
add
or
jg
mov
loopne
sbb
pop
add
div
add
jg
in
adcb
popa
aad
daa
call
jmp
popa
push
push
imul
pop
sbb
enter
mov
push
adc
repnz
and
fnstcw
inc
andl
mov
iret
call
rcrl
dec
add
out
ja
inc
mov
leave
inc
ret
sbb
dec
in
movb
push
mov
sahf
fadd
pop
xlat
insw
out
fidivl
fcmovbe
clc
and
or
sub
pop
cmp
sub
arpl
imul
jg
xor
push
jp
test
jns
lea
scas
ret
test
aas
int3
jns
mov
xchg
xlat
loop
test
sub
cmp
push
rorb
nop
add
xor
sahf
xchg
out
mov
mov
cltd
inc
mov
js
es
out
movsb
mov
cmp
xor
pop
add
xchg
push
xchg
cmpsb
mov
xchg
in
shll
in
popa
mov
adc
aad
ljmp
lcall
sub
cmp
mov
loopne
cmpsl
out
sbb
fwait
sbb
testb
ret
pop
xlat
sbb
fisubrl
ljmp
shrl
cmp
sub
or
lds
iret
push
sub
push
aaa
aas
sub
imul
loope
es
repnz
jb
push
and
stc
dec
loopne
ss
mov
xor
sub
sbb
ret
add
add
sbb
test
imul
int
xchg
dec
das
hlt
and
ss
jl
repz
push
or
cmp
iret
std
and
ret
in
je
mov
push
test
pop
enter
jo
lahf
lahf
dec
inc
mov
icebp
test
fcmovnb
dec
cmp
out
adc
insl
xor
imul
mov
sbb
push
iret
je
dec
xor
icebp
xor
xchg
or
inc
frstpm(287
jo
sub
push
mov
or
into
ret
push
push
out
push
pop
out
mov
jmp
mov
add
subl
fiaddl
loop
and
repnz
shr
das
hlt
add
sub
movsb
push
sub
xchg
cmp
inc
add
jecxz
int
mov
mov
outsb
in
add
xchg
cmpsl
ja
clc
cmc
aam
sub
inc
or
jecxz
aad
in
je
adc
and
and
sub
cmp
orb
ret
jmp
into
push
js
mov
or
gs
js
sub
xor
push
and
or
repnz
call
fwait
imul
jbe
repz
call
mov
pop
jecxz
in
aam
and
lds
lahf
insl
mov
stc
add
push
and
out
mov
mov
xchg
repnz
jno
fs
xchg
jmp
mov
push
fsubrl
pop
sub
inc
setp
ret
addr16
mov
cmovno
fildl
inc
xchg
lods
int3
cmp
sub
dec
repnz
cwtl
subb
stos
ja
nop
push
cmp
call
dec
in
cmpl
push
sbb
scas
jg
stos
aas
es
inc
xchg
mov
push
fs
int3
mov
pop
xchg
cmp
es
or
jecxz
mov
pop
cli
mov
pop
xchg
xchg
xchg
sbb
scas
push
and
nop
pop
insb
mov
cld
jg
mov
or
lcall
sub
std
popa
popa
xchg
jl
movsl
ret
and
stos
loop
mov
cld
ja
mov
andb
rclb
cmpsb
sbb
gs
icebp
icebp
fcompl
push
dec
xor
leave
fistpll
jbe
mov
mov
or
out
clc
icebp
in
mov
dec
adc
xchg
fnstsw
stc
aam
inc
adc
dec
cmp
mov
out
loope
mov
add
out
in
push
std
aas
jp
and
dec
xchg
sub
add
push
sahf
push
jb
rorb
push
stos
daa
stos
dec
imul
mov
pop
jle
lods
jl
xor
jl
ljmp
ljmp
out
mov
and
sbb
data16
dec
cmp
dec
decl
adc
call
xchg
ss
push
push
add
and
movsl
fisttpll
cld
in
dec
inc
fmul
pushf
divb
add
in
cmp
jo
fwait
arpl
jb
test
push
movsb
add
ret
loope
outsl
xchg
popf
push
out
adc
push
mov
sbb
lea
mov
jecxz
xor
sbb
mov
sub
fwait
insl
sahf
or
cld
mov
sbb
mov
jle
ljmp
lret
aas
mov
or
and
icebp
cmp
mov
cwtl
or
cmp
and
xchg
inc
leave
nop
inc
in
pop
adc
xchg
dec
jmp
dec
mov
cmpsl
jecxz
add
jecxz
xor
aad
lock
push
dec
sub
insl
leave
in
repnz
cmpsb
lret
mov
mov
xor
xchg
test
xor
and
xor
mov
mov
movsl
notl
in
in
jne
mov
outsl
mov
and
cmpb
mov
rcll
sbb
lea
xlat
lds
fiadds
imul
lea
aam
add
test
es
clc
jle
pop
pop
and
pop
cmp
xchg
jb
inc
inc
pusha
pop
imul
mov
mov
or
mov
mov
pop
fdivl
inc
add
cli
iret
fistpll
dec
xor
mov
rcl
push
adc
sub
mov
add
and
popf
and
mov
adc
pop
popf
jae
add
mov
mov
mov
inc
in
ss
into
loope
dec
push
push
inc
int
loopne
sub
fnsave
insb
lcall
adc
xor
push
sbb
mov
sbb
add
jo
jmp
push
adc
add
lds
fiadds
addl
jle
jb
xor
xchg
push
call
cltd
push
lcall
fstl
int
dec
push
inc
rol
add
das
pop
jo
outsl
mov
push
mov
jae
cmp
scas
xlat
mov
jg
dec
pop
lret
xor
gs
ss
mov
lods
jge
lods
scas
cmp
sbb
int
addb
leave
xor
cmpsl
das
dec
lahf
out
outsl
stos
das
es
push
pop
pop
gs
cmp
out
inc
jne
mov
cld
leave
or
and
fstp
fisubs
pop
cld
sbb
fiaddl
outsb
mov
cmp
mov
and
adc
mov
addl
scas
cmp
enter
mov
int
push
xchg
and
in
mov
inc
pop
hlt
movsb
lret
ret
dec
xchg
jmp
int
pop
and
xchg
and
out
mov
mov
insl
cwtl
mov
inc
ret
stc
mov
jmp
lock
mov
jge
rorl
mov
sub
stos
jne
mov
dec
aaa
lds
jne
jno
mov
pop
pop
popf
push
add
xor
add
dec
in
sub
shl
fisubl
add
mov
mov
add
xchg
or
sbb
cli
lds
insl
fists
mov
xchg
xlat
jp
fstps
sub
gs
inc
fisubrs
lret
or
add
dec
mov
fimuls
mov
fimuls
jno
xor
imul
or
or
push
fs
mov
adc
push
rcll
repnz
sbbb
stos
outsb
pop
push
nop
icebp
push
jp
push
gs
rcl
xor
mov
jae
mov
imul
sub
jbe
xor
xor
stc
incb
cmp
sub
sub
dec
mov
mov
adc
xor
and
mov
jle
fmuls
sbb
testl
lods
jno
iret
repz
das
dec
xor
pop
pop
sub
xlat
pop
xor
das
mov
mov
pusha
out
xchg
test
inc
fwait
xchg
ret
pop
test
in
add
push
inc
sub
insb
mov
clc
mov
add
sub
cmpsb
push
inc
sbbl
insb
sub
popa
add
test
in
add
test
sbbl
push
inc
jae
sub
out
cmp
push
cmp
dec
sbb
dec
pop
xchg
lret
imul
cld
push
mov
push
sarb
mov
dec
icebp
jnp
shrl
loope
cmpsb
ss
sub
testb
jnp
shl
inc
or
scas
imul
insl
xchg
sbb
jns
push
cld
aam
pop
mov
ret
std
loopne
and
mov
or
and
push
or
dec
movsl
test
adc
xchg
rorl
mov
mov
movsl
outsl
pusha
mov
xchg
insb
sub
dec
ret
lahf
dec
dec
cltd
shlb
mov
daa
jo
add
scas
gs
lret
mov
jbe
cld
test
inc
test
cmp
mov
jmp
lods
or
hlt
pusha
stos
xor
add
jno
lea
jecxz
and
push
dec
cld
lret
sarl
je
pop
adc
inc
adc
mov
sbb
fildll
repnz
clc
sti
mov
adc
pop
mov
loop
dec
ss
inc
repnz
adc
sub
stos
call
call
cli
fldenv
lcall
mov
outsb
adc
push
cmp
jl
lret
inc
movsl
xchg
in
cmpl
mov
daa
in
hlt
or
fimull
cmc
popf
pop
aad
pop
rcll
insl
out
sub
pusha
stos
pop
mov
sarb
add
int3
mov
and
ret
or
mov
xlat
jns
mov
or
jl
mov
notb
stos
or
pop
mov
pop
push
out
jno
mov
mov
push
xchg
jae
outsb
cmp
out
repz
mov
idiv
pushf
insl
xchg
shl
add
mov
mov
movl
add
sahf
loopne
ja
sub
lret
sbb
add
mov
dec
insb
jg
adc
xchg
jg
mov
scas
mul
fs
ja
loopne
lds
push
push
pop
and
mov
testl
sahf
pop
cmp
jmp
fidivs
sub
push
pop
mov
insb
std
mov
xchg
jecxz
popa
xchg
cmp
ret
das
xchg
popa
add
incb
int
sub
stos
je
jne
pop
inc
gs
xchg
dec
cmpsl
inc
loop
std
pop
cld
fs
mov
lea
inc
inc
cmp
pop
rorl
push
orb
aas
shrl
sarl
pusha
mov
loope
and
rep
xchg
les
cmp
inc
and
dec
test
movsb
fnstenv
popf
lock
and
pop
jle
repz
push
js
imul
dec
xchg
mov
pop
arpl
sub
jmp
sarb
xchg
daa
leave
std
notl
pusha
cli
add
add
inc
addr16
pop
shrl
mov
ja
fiadds
cmp
ja
loop
fs
std
sbb
xor
mov
pop
scas
and
je
jg
xchg
loop
nop
lock
movsl
in
movsl
xorb
stos
test
mov
pop
inc
mov
shl
in
xchg
add
js
xchg
adc
push
cs
in
push
dec
lods
movsl
sti
ja
rcrl
cmp
pushf
push
ret
pusha
pusha
adc
cmp
mov
pop
fisttps
loopne
movsl
xchg
mov
push
ds
lods
ffree
mov
inc
rol
sbb
cltd
adc
ret
xchg
xchg
fsubr
cli
mov
jnp
or
frstor
mov
dec
jno
mov
test
fwait
and
mov
dec
fdivl
cmp
jo
fiadds
or
inc
xlat
movsb
sub
sub
mov
push
push
out
imul
insb
xor
dec
add
add
inc
and
xchg
out
imul
push
les
imul
test
xor
scas
es
cmpsb
into
add
or
je
sbb
fadds
xor
int
sub
sbb
in
cmp
js
jae
inc
adc
in
ljmp
mov
pop
push
inc
mov
dec
fdivl
push
int
bound
mov
cmp
aad
lcall
push
or
in
sbb
out
cmpsb
xor
fdivr
sbb
mov
lcall
aad
cmp
in
fldl
je
jle
les
int
pusha
pop
xor
movsl
movsb
push
out
movsl
jge
cs
pop
mov
in
jecxz
lcall
cld
mov
fisttpl
jo
popf
nop
ja
jg
mov
mov
addr16
add
jbe
stc
mov
push
and
ficoml
push
ret
movl
cmp
in
arpl
pusha
or
scas
leave
daa
fadds
pop
call
cwtl
pushf
push
fldt
push
push
es
push
data16
leave
cmpsl
add
push
dec
cmp
push
dec
sbb
mov
fadds
test
lea
adc
dec
mov
jmp
hlt
movsl
xor
add
mov
cmpsl
adc
int3
sub
fbstp
add
xlat
loope
push
test
jbe
fdivrs
test
or
xor
xor
mov
stos
loope
repnz
arpl
push
in
adc
add
sub
push
xor
hlt
sub
pop
ffreep
mov
pop
test
and
cmp
adc
and
sub
adcl
insb
and
pop
in
mov
pop
lods
cmc
inc
xchg
mov
sub
push
cmp
adc
xor
insb
ja
mov
mov
shr
jno
orl
mov
mov
mov
sti
cmc
cmp
dec
pop
pop
mov
enter
add
dec
xchg
push
popf
aaa
insl
ds
mov
mov
jne
iret
jb
add
movhps
adc
loope
jno
fistl
out
ret
xor
mov
clc
cmp
das
jne
pop
jae
and
lcall
loope
cmp
inc
pop
mov
subl
mov
js
popf
mov
pop
enter
enter
fdiv
add
mov
or
push
ficoms
sub
fdivs
repz
cmp
xchg
dec
and
pop
push
sbb
out
pop
sub
mov
shl
fdivl
push
cmp
fldt
std
dec
pop
or
cld
adc
call
mov
adc
aaa
mov
in
rcl
fnstcw
stc
les
jl
ret
insl
outsl
sbb
in
cmc
sub
int
inc
pop
dec
aad
test
outsb
xchg
lcall
sub
mov
or
ret
jb
sub
in
cltd
adcb
mov
push
mov
push
cmp
stos
xchg
es
push
add
sti
sbb
jge
sub
iret
fcoml
or
add
mov
jno
ja
lds
outsb
nop
jbe
cmp
jno
rorl
ret
pop
jne
add
mov
cld
mov
test
push
movzbl
jmp
mov
adc
pop
and
push
cmpsl
movsb
mov
imul
subb
inc
dec
cmpsl
test
push
mov
cld
in
cli
movsb
aaa
rolb
add
mov
call
test
mov
add
lret
and
adc
xchg
mov
adc
xchg
pop
cmp
mov
int3
das
popa
inc
das
scas
xor
into
and
ret
idiv
dec
mov
in
xor
sub
aaa
inc
inc
stos
adc
push
adc
fdivr
adc
aaa
mov
aad
nop
push
lret
xchg
push
mov
xchg
or
sahf
das
int
inc
jb
mov
push
xchg
mov
push
fbstp
cmp
adc
push
and
shlb
lcall
fsubrp
pop
push
fistps
lds
clc
ljmp
jae
lods
inc
mov
inc
push
mov
xlat
testb
data16
pop
test
jno
fisubrl
mov
or
fmuls
movq
xchg
sbb
dec
sbb
addr16
lret
lea
and
loope
imul
mov
stos
aad
push
xor
call
aad
in
jbe
mov
lds
cmp
dec
aaa
or
les
outsl
insb
das
shll
xchg
rclb
pop
psrld
fdivl
or
fbstp
out
mov
sub
inc
lea
loope
fcomp
inc
dec
in
in
scas
mov
pusha
pop
lcall
insl
dec
mov
add
and
jae
mov
sbb
push
lock
dec
adc
jb
call
call
insb
stos
jne
cltd
outsl
inc
or
mov
in
repz
sbb
sbb
je
fmul
mov
outsb
das
test
mov
jns
push
sbb
out
into
out
loop
pusha
fnstcw
bound
cwtl
inc
call
pop
jmp
dec
sbb
jae
or
push
lcall
mov
mov
add
lret
lds
jmp
addr16
mov
lahf
or
sbb
fimull
sar
adc
jle
or
pop
pusha
test
repz
in
stc
jae
dec
sbb
idivl
push
pop
mov
adc
aaa
sub
xlat
sbb
pop
jo
dec
jg
push
int
rorl
inc
sbb
jo
or
and
push
ss
incb
dec
scas
pop
sub
ficomps
mov
pushf
pop
and
mov
movl
jae
push
dec
jge
push
dec
and
fdivrp
sbb
out
push
mov
add
addr16
jl
ror
mov
mov
dec
sti
fwait
push
lods
or
mov
cmp
mov
adc
push
pop
or
push
call
cld
add
cmpb
cwtl
sub
outsb
aam
dec
out
sub
mov
mov
adcb
in
repnz
fistpl
xor
mov
rcll
push
dec
call
xor
lods
aam
je
cmp
imul
lahf
pop
dec
and
out
inc
movsb
adc
daa
adc
sbb
jbe
jae
sub
xchg
sti
repnz
sub
cmp
mov
mov
shll
cmpsb
jl
aad
mov
jmp
lds
inc
shlb
daa
jnp
cmp
scas
mov
mov
ss
mov
sbb
inc
pop
addr16
minps
mov
aas
add
add
push
xchg
jmp
es
sbb
jae
pop
mov
ret
sti
cmpl
mov
push
and
sbb
pusha
and
pop
ret
sub
movsb
in
and
jmp
call
test
in
adc
jg
int3
add
push
jmp
lock
cmc
je
mov
dec
jns
in
pusha
movsb
dec
stc
ja
mov
movsl
rcrb
dec
sbb
adc
push
dec
jb
jmp
xchg
jno
popa
sub
jecxz
outsb
jle
mov
push
sbb
dec
and
dec
fmuls
xchg
push
dec
push
cmp
inc
dec
leave
xor
push
jb
lea
sub
cmpsb
mov
mov
cmp
add
pop
mov
stc
jnp
sub
pop
xlat
sti
mov
xor
pop
sub
cli
xchg
mov
xchg
sbb
fldl
pop
jecxz
add
jae
lret
push
loope
push
lods
nop
out
arpl
hlt
pop
add
adc
fildl
addr16
add
popa
xchg
fsubr
and
lcall
aas
fdivs
mov
push
lock
shlb
push
ljmp
or
xchg
cmpsb
in
iret
in
std
xlat
sbb
sbb
pop
incl
xlat
cmp
je
pop
div
lea
ret
and
stos
daa
shl
or
aaa
cs
popf
adc
jmp
loopne
loop
inc
dec
xchg
or
repz
mov
fstl
rolb
popa
push
or
fsts
add
cld
mov
dec
jecxz
adc
sub
leave
pop
shlb
dec
sbb
stos
dec
pushf
lahf
pop
adc
fbld
daa
sub
in
inc
pop
xlat
and
sub
fadds
jb
mov
ljmp
pop
adc
dec
add
cltd
or
mov
cmp
sbb
faddl
dec
sbbb
std
ret
pop
fcompl
add
adcl
jg
xchg
pop
stos
loope
xchg
dec
xchg
and
aaa
jb
insl
je
mov
nop
rcrb
arpl
fcmovnb
xchg
idivl
sbb
or
or
cmpsl
pop
fidivrs
gs
cmp
test
dec
mov
sbb
and
mov
cmp
mov
xor
dec
lds
mov
daa
push
jns
pusha
data16
inc
pop
sub
aam
push
add
test
popa
or
cmpb
cs
xchg
pop
jg
jae
or
jns
out
leave
push
outsl
add
jo
pop
cmp
imul
push
popf
cmpsb
xlat
and
scas
or
push
movsl
push
cltd
adc
xchg
leave
mov
dec
inc
insl
add
movsb
inc
mov
pop
mov
mov
orl
test
mov
mov
fadds
mov
in
imul
mov
xchg
les
xlat
in
xor
clc
in
and
scas
dec
sub
or
push
adc
inc
jne
iret
xor
push
jp
mov
jbe
xchg
icebp
xchg
leave
push
pop
sbb
stos
xorl
fstpl
das
int3
sub
push
cmp
mov
add
test
ljmp
mov
cmp
mov
inc
popf
leave
xchg
fbstp
stos
adc
dec
insl
test
aaa
mov
or
inc
cmp
xchg
ss
mov
xlat
lock
push
lret
loope
pop
xchg
mov
dec
movsw
jecxz
push
ds
mov
fucomip
sub
xchg
and
mov
subb
cmp
inc
lods
fisubl
mov
dec
test
xchg
push
ss
adc
das
sbb
mov
ret
pop
lods
out
xor
adc
jne
dec
xchg
or
cmc
push
inc
insb
mov
jae
add
mov
jle
sbb
jb
and
jl
sahf
test
xchg
lods
sti
fstl
shl
test
mov
fmul
fwait
into
popf
dec
sub
xchg
adc
jae
lcall
jge
mov
fcomi
mov
dec
or
push
mulb
mov
scas
and
adc
pop
das
xchg
insb
mov
aad
jl
cmpsb
test
mov
bnd
mov
xchg
pusha
stc
add
roll
sub
jno
sub
sub
xlat
loope
shr
in
sbb
sahf
sbb
ret
enter
movsl
mov
push
cmp
js
mov
lret
add
lods
bndldx
push
mov
dec
jp
push
addr16
movsl
repnz
adcl
mov
cmp
push
xlat
adc
test
sbb
add
sti
call
rorl
dec
loop
mov
push
xor
stos
mov
ds
jnp
gs
dec
xchg
dec
out
inc
shll
pop
ljmp
in
outsb
test
or
movsb
aam
or
mov
xchg
mov
adc
inc
pop
xchg
adc
repnz
mov
mov
movzwl
pop
jge
pop
push
je
adc
outsb
gs
dec
adc
fs
cmpsl
push
imul
ret
add
inc
loopne
sbb
shll
push
pop
lds
sub
fisttps
aaa
cmp
xchg
or
fiaddl
jns
fcmove
insb
cmp
push
fs
pop
mov
and
lcall
pop
das
push
push
iret
icebp
iret
pop
jge
pop
jns
or
dec
ja
and
mov
test
jp
pop
push
push
inc
les
mov
xlat
ljmp
movsb
pop
mov
adc
rclb
mov
imul
push
pop
inc
pop
cld
pop
imul
cmc
cmp
arpl
add
jl
mov
movsb
ja
in
mov
repnz
mov
insb
and
fwait
daa
xor
sub
repz
sbb
and
mov
inc
sbb
mov
fmulp
adc
add
jg
enter
cmpsb
mov
insl
shrb
leave
xchg
mov
pushf
add
push
lret
cmp
xor
shlb
cs
xor
inc
xchg
movb
push
arpl
xchg
lea
cmp
sbb
sub
mov
push
xchg
pop
testb
pushfw
lods
sub
mov
cmp
cmp
sub
loope
out
pop
xor
test
lods
popf
sub
lods
pop
mov
jne
rcll
dec
imulb
insl
mov
mov
sbb
xchg
and
and
sub
sbb
adc
dec
push
and
push
push
xchg
mov
loop
cmc
mov
cld
cmp
enter
scas
xor
jl
rorl
lock
xor
adc
shll
je
push
sub
and
fldt
pop
sbb
dec
dec
pop
das
dec
addr16
std
dec
push
test
movsl
lret
sbb
gs
rclb
or
jno
and
xchg
ss
mov
fs
sbb
cmp
js
fs
lds
dec
adc
pop
add
scas
adc
enter
imul
inc
xchg
fdiv
je
and
and
imul
fstpt
aas
sbb
int
xchg
cwtl
repnz
xor
mov
adc
imul
jae
lods
nop
or
pop
movsb
loopne
cmc
dec
sbb
and
lods
or
clc
dec
mov
imul
in
rorl
ficoml
lods
in
lret
mov
jmp
cmc
lock
adc
push
lcall
or
cmc
jnp
es
and
leave
mov
cltd
fisubs
jo
aad
subl
push
mov
enter
flds
xchg
repnz
lock
testb
stos
pop
and
push
std
adc
cs
push
adc
sti
in
push
mov
mov
repz
lcall
test
dec
addr16
inc
ljmp
push
or
test
sbbl
mov
add
cmpsl
xor
xchg
jle
xchg
scas
sub
jl
or
mov
and
andb
add
out
test
adc
leave
rol
es
cld
loopne
pop
dec
jo
or
or
in
in
ret
and
mov
sub
into
ljmp
mov
mov
or
jae
xchg
loopne
outsb
gs
sub
dec
sbb
fwait
cmp
xchg
out
sub
test
addr16
mov
pop
and
xchg
lock
inc
mov
sbbl
test
and
adc
out
dec
std
mov
ljmp
andl
mov
or
fstps
nop
push
out
rcll
or
pusha
jne
insb
stos
xor
mov
jnp
lock
lret
cli
xor
cmpsl
pop
enter
and
push
jne
test
fdivrs
aas
test
xchg
lods
lret
mov
lret
xor
test
aam
inc
mov
iret
dec
adc
pop
lret
push
das
sub
push
test
test
aad
and
js
stos
or
out
cmpb
ret
ss
sbb
dec
or
and
mov
sub
push
sbb
sahf
pop
or
stos
icebp
dec
lods
loopne
ret
imul
ret
sub
mov
cmp
sahf
clc
iret
fwait
into
ror
cs
aaa
sub
xchg
cmp
sbb
movsl
xor
mov
dec
andb
icebp
cmpsl
mov
in
xor
jns
inc
and
jge
dec
xchg
push
rorb
aam
clc
jno
xor
lret
idivl
movl
cmp
leave
lahf
les
repz
jb
pop
xor
adc
or
testb
test
jecxz,pt
jbe
ljmp
mov
cmpsb
movsl
cmp
xchg
mov
mov
enter
fstpt
jne
push
dec
gs
xor
xor
movsb
or
jb
mov
inc
in
cli
into
add
inc
jnp
pop
clc
cwtl
lcall
rcrb
fildl
in
test
popf
and
js
push
inc
aad
jecxz
mov
lea
xor
test
leave
mov
or
pop
hlt
and
movsb
jbe
pushf
cmpsl
outsb
pop
inc
pop
inc
call
test
mov
stos
or
ja
inc
idiv
mov
and
out
in
fnstsw
dec
rorb
movsl
gs
and
lods
add
xchg
in
lods
outsb
test
rcrl
mov
sahf
push
add
cmc
outsl
lods
cli
std
test
or
shl
sbb
repz
mov
in
ret
xor
pop
out
jbe
pop
fs
mov
test
fdivrl
gs
mov
ror
in
aam
cltd
push
popf
test
out
mov
mov
mov
mov
sbb
and
fstpt
mov
mov
pusha
mov
cwtl
call
les
scas
mov
addl
jbe
mov
push
pop
jmp
mov
sbb
je
repnz
inc
insl
cmp
stos
stos
push
jno
shrb
arpl
test
cmp
xor
push
mov
cmpsl
shrl
xchg
outsb
jmp
sub
ja
inc
jno
enter
ljmp
xchg
cwtl
test
cld
icebp
lret
aam
lret
jp
enter
fsts
xchg
inc
gs
xchg
inc
fmulp
adc
and
enter
or
adc
xchg
xlat
push
adc
cmpsl
lret
adc
ljmp
dec
jecxz
push
dec
sub
push
adc
and
aam
add
and
jle
adc
addl
or
int
fwait
mov
cmp
add
mov
out
pop
lret
xor
sbb
nop
cmp
cmc
add
cmpb
outsb
jo
or
sbb
ds
mov
mov
fstps
jmp
jmp
push
sub
popa
dec
and
fisttpll
inc
or
xchg
shll
pop
int3
arpl
lret
pop
clc
cmpsb
jmp
jns
subl
adc
andl
shl
adc
jl
scas
pop
icebp
mov
sub
push
stos
mov
icebp
inc
repnz
inc
inc
es
div
test
sbbl
lods
sti
inc
out
fwait
inc
pop
insb
insl
pushf
add
jo
shr
pop
rolb
mov
popa
pushw
jne
jp
add
inc
push
jns
pop
fdivp
or
jo
bound
movsl
lock
xor
iret
sub
and
insl
mov
js
mov
aas
adc
pop
test
mov
int3
dec
mov
out
push
jne
xchg
lret
leave
arpl
mov
mov
jmp
fs
ds
inc
inc
lret
adc
ljmp
and
xchg
imul
loopne
jle
aas
sbb
adc
or
gs
pop
bound
imul
popa
je
push
pop
movsb
in
mov
mov
pop
stos
and
pop
std
pop
mov
xchg
rol
ss
pop
cmpsb
dec
jns
loopne
inc
mov
mov
loopne
test
xor
pop
fcmove
mov
mov
in
mov
cwtl
fadds
int
movsl
pop
das
call
xchg
xchg
push
jmp
inc
cmpsl
adc
fidivs
les
cmc
loopne
cmp
dec
int3
fs
add
cli
movb
cmp
push
inc
add
lahf
lahf
mov
pop
out
mov
shr
loopnew
das
push
fsubp
popa
cli
pop
mull
and
jne
dec
and
cmp
inc
and
xchg
rorb
mov
outsl
push
fisttpl
adc
faddl
call
mov
cmpsl
sbb
movsl
jl
ret
sbb
cmc
jns
sub
movsb
iret
inc
fwait
sbb
cli
into
je
cwtl
fcoml
mov
scas
xor
scas
test
leave
inc
push
sub
or
xorl
add
scas
inc
mov
xchg
mov
sub
dec
mov
push
in
scas
xchg
xchg
pop
adc
andl
inc
pop
xorl
mov
mov
out
xlat
dec
mov
repnz
ja
shrb
ds
lcall
adc
out
iret
fstl
lods
xor
in
pop
inc
push
loopne
cld
in
sub
adc
push
push
out
cmpsb
xor
mov
icebp
adc
add
cmpsl
iret
or
jecxz
inc
sahf
lahf
pop
je
mov
shlb
rcrl
inc
xchg
insb
enter
cmp
jmp
dec
ljmp
ror
jmp
cmp
mov
lcall
loopne
xchg
push
lock
lods
mov
inc
pop
push
mov
mov
pop
insl
sub
lcall
mov
push
pop
jecxz
add
pop
fcoms
sbb
xor
push
inc
mov
scas
or
mov
inc
xor
pop
or
sbb
cmpb
cmp
jp
je
clc
shrl
push
and
push
xchg
andb
dec
and
mov
rclb
std
and
xlat
cmp
enter
cmp
leave
cmp
mov
or
icebp
and
int3
aam
sahf
test
sub
mov
jp
or
xchg
xor
mov
nop
repnz
pop
pop
sub
dec
lock
push
lea
and
dec
push
mov
xchg
push
lahf
scas
mov
jns
stc
mov
sbb
in
ss
movsl
jae
pop
js
and
mov
js
ret
push
mov
xor
sub
xchg
cmc
add
push
fsubl
int
adc
or
adc
leave
cld
add
into
rolb
dec
add
add
pop
mov
inc
jp
dec
sbb
stos
in
inc
push
sub
aam
pop
rcr
mov
xor
mov
clc
sbb
sbb
mov
push
hlt
js
or
jl
sbb
xchg
push
scas
icebp
pop
mov
adc
sbb
loop
cmp
stos
lcall
js
cmc
pop
push
jmp
sbb
mov
mov
and
sbb
std
push
mov
icebp
dec
push
std
arpl
xor
push
push
lahf
mov
call
or
sub
stos
in
or
cmpsb
and
jl
mov
xor
dec
sub
adc
jnp
stos
sub
int3
push
mov
or
pop
mov
jge
lret
jns
xchg
sub
or
aaa
dec
mov
jp
xchg
loopne
add
imul
gs
jb
repnz
add
es
out
pop
out
sub
andl
aas
pop
push
out
xchg
adc
inc
mov
in
or
test
push
stos
dec
and
xchg
test
popf
movsb
ja
mov
mov
loope
xchg
push
test
roll
and
lahf
dec
imul
adc
xchg
inc
ss
dec
sti
add
cmp
jmp
dec
cltd
add
scas
sbb
jae
test
pop
pop
jl
loope
mov
pop
mov
jl
sbb
or
sbb
iret
and
sub
cwtl
lods
push
inc
sbb
data16
xor
js
pop
fisubrs
fildll
lea
adcb
adc
in
mov
outsl
jl
sbb
cmp
js
or
hlt
mov
cmp
in
mov
adc
push
aam
andl
lods
sbb
lods
fildll
aaa
dec
pop
stos
jns
mov
mov
rclb
leave
xchg
sbb
jnp
and
in
mov
ret
cltd
sbb
icebp
cli
out
sub
mov
adc
pop
pop
xor
mov
add
pop
fadds
movl
mov
sti
push
inc
xor
fwait
gs
out
mov
and
jnp
mov
mov
mov
jbe
push
dec
or
push
fadd
jle
stos
fdivrp
cltd
lret
lock
sbb
push
nop
mov
add
inc
stos
pop
inc
push
dec
and
xor
in
sbb
inc
dec
repnz
dec
test
popf
mov
lret
jno
dec
xchg
jg
dec
stos
negl
imul
and
or
cmpsb
lea
inc
out
mov
or
sbb
ds
mov
xchg
dec
call
rol
mov
testl
call
mov
pushf
inc
lret
jp
adc
in
cmp
pop
xor
pop
mov
fwait
fwait
cmp
adc
test
les
sbb
mov
pop
or
mov
or
lock
adc
jg
sahf
test
cmp
icebp
jbe
mov
adc
mov
aaa
sub
inc
les
pusha
call
xor
adc
xor
je
orb
pop
pop
scas
sub
in
scas
jmp
xchg
mov
test
adc
enter
mov
scas
loope
cmpsb
js
mov
arpl
lcall
inc
call
cmp
outsb
mov
mov
loope
loope
mov
addr16
adc
adc
out
or
and
mov
data16
dec
pop
and
jl
sti
insb
loop
sub
mov
dec
push
add
pop
negb
dec
and
lods
or
lahf
dec
push
movsl
mov
or
inc
stos
push
jp
mov
lahf
push
hlt
pop
mov
mov
jo
xor
or
stos
outsl
sbb
fadd
push
aaa
push
lods
aaa
inc
dec
mov
adc
sub
adc
xor
jae
mov
add
cmp
mov
sub
lock
fildl
repz
push
out
pop
clc
cmpsl
das
dec
jecxz
jo
push
fcompl
push
xor
sub
es
into
out
hlt
dec
sbb
mov
xor
adc
xlat
cmc
xchg
jecxz
call
ds
daa
enter
stos
test
and
jle
mov
aaa
jo
push
cmp
popf
out
mov
jecxz
test
push
jo
sbb
stos
das
inc
sbb
cmpsb
pop
pop
jo
int
mov
test
mov
mov
pop
mov
cmpsb
mov
imul
xchg
dec
jle
xchg
push
rorl
imul
aas
sbb
mov
test
movsb
movsl
cmp
mov
dec
ja
into
out
int3
inc
test
mov
mov
and
pop
push
mov
fcomip
out
xor
pop
repnz
mov
xor
push
imul
add
mov
mov
out
dec
negl
mov
dec
xor
jne
push
insb
push
in
xchg
cmpl
xor
push
cmpsl
mov
xchg
push
jge
xor
out
js
out
call
ss
jge
and
push
cmpsl
push
aam
ss
sub
pop
lret
sbb
pushf
aas
push
movsb
sbb
sbb
inc
out
xchg
rolb
mov
insl
call
pop
repnz
jecxz
sub
pop
and
es
mov
jge
adc
pop
sbb
add
sbb
inc
incb
jle
dec
add
jns
test
call
cmpsl
adcb
loope
xchg
xor
clc
jno
add
sbb
jmp
xchg
pop
or
xorb
pop
iret
stc
sahf
movsl
lock
fimuls
pop
addps
and
cmpl
pop
je
push
xchg
dec
pop
test
xchg
add
andl
dec
add
fucomp
xorl
or
lock
inc
lods
cmc
test
cltd
stos
mov
push
loop
mov
sbb
mov
jno
aad
jns
pop
dec
sub
cli
and
stc
lret
cmp
movsb
mov
jne
or
xchg
ret
sub
pop
push
cmp
rorb
push
pop
mov
jns
push
shrb
lods
mov
int
test
xor
fs
je
lret
sub
and
leave
cmp
lea
fsubl
lds
ds
dec
pop
cmp
cmp
mov
outsb
lods
cmp
fcoml
jo
push
sti
xchg
xchg
jg
inc
add
pusha
inc
pop
or
and
js
and
incl
sub
cmc
ss
out
in
add
push
in
xor
hlt
sbb
or
and
push
addr16
add
int3
imul
xlat
rcr
adc
xor
mov
mov
push
jp
adc
xchg
sti
loop
scas
divl
mov
cld
cltd
cmpsl
out
pusha
cltd
adc
lods
lahf
mov
int
dec
popf
and
adc
jp
ja
adc
cmp
dec
scas
or
sub
cmp
mov
jns
cmp
cmp
adc
push
pop
sub
das
jmp
int3
bound
cmc
xchg
sti
into
pop
jl
jge
cmp
lret
ljmp
add
mov
and
movsb
mov
aam
pop
lret
pop
jmp
fistpll
out
push
sub
popf
mov
std
out
nop
outsl
imul
int
or
leave
fdivrs
xor
fsubl
aaa
nop
inc
jne
jno
xor
fcomps
movsl
repz
push
addr16
popa
hlt
cmpsl
push
insl
xor
xor
cltd
and
sbb
lcall
add
fcmovbe
repnz
mov
and
adc
mov
or
xchg
push
mov
repz
push
shll
mov
xlat
pop
sbb
fld
lds
jp
adc
movl
jl
xor
in
or
dec
push
jmp
or
out
shll
lahf
xchg
cmp
cmpsb
mov
test
pop
jne
adc
cld
and
push
rcrl
jmp
pop
testb
jno
mov
mov
xchg
lock
push
push
sbb
divl
jne
jae
repnz
and
and
in
mov
outsl
iret
sub
jl
add
jg
jge
and
enter
inc
into
add
xchg
scas
loope
push
mov
lcall
push
cwtl
pop
and
loop
int
mov
aad
leave
clc
lcall
and
aaa
neg
mov
add
adc
loop
xchg
inc
fs
mov
inc
fs
mov
xchg
rcrl
sub
negb
pushf
lea
call
jbe
jno
add
inc
inc
inc
testb
lret
dec
in
enter
ficoml
pushl
cmp
xor
lea
xor
shll
clc
repnz
inc
xchg
adc
sub
adc
std
repz
push
add
repnz
leave
jecxz
stc
shrl
mov
or
push
jb
xor
std
mov
jle
ja
enter
loopne
xchg
jl
rcrb
xchg
mov
pusha
test
inc
mov
imul
sbb
js
fs
mov
pop
xor
mov
ja
ret
popa
mov
xchg
jae
push
or
cmp
cmp
or
adc
aad
push
adc
fsubl
mov
insb
loope
in
cmp
pop
shlb
iret
pop
int
and
cmp
sub
sbb
mov
mov
bnd
rclb
test
loopne
into
js
repnz
test
or
xchg
pop
jle
fistpll
mov
push
out
mov
push
xchg
ljmp
mov
pop
int3
mov
lahf
pop
nop
lea
or
or
into
sub
push
js
dec
xchg
xchg
out
or
sbbl
fiaddl
outsl
push
in
insl
push
inc
in
and
decl
scas
mov
imul
fcom
lds
and
push
fsubr
hlt
dec
scas
test
mov
mov
testb
inc
and
stos
cmpsl
cmc
dec
sbb
pop
cltd
fcmovb
dec
js
push
mov
out
cmc
ds
iret
sbb
cmp
mov
mov
fstpt
cltd
xchg
lock
push
rolb
fucomip
push
in
or
outsl
jl
sti
gs
xchg
cli
dec
cmp
stos
roll
insb
andb
lods
ret
in
or
add
aam
sub
adc
pop
and
xchg
arpl
push
jecxz
sub
add
fidivl
mov
jne
jmp
mov
push
pop
out
and
out
lret
testb
lock
push
pop
or
or
out
mov
imul
ja
sbbb
dec
in
div
dec
pop
icebp
adc
mov
call
test
addb
repnz
je
mov
cmpl
cmp
mov
xor
cmp
les
dec
mov
sub
mov
hlt
lock
push
mov
dec
push
iret
loopne
int3
pusha
mov
adc
dec
or
sub
stos
adc
aaa
hlt
pop
imul
in
imull
aas
repnz
lods
shlb
fwait
dec
dec
adc
lcall
loope
testl
stc
mov
mov
dec
cmc
in
cmp
and
movsb
es
rolb
xchg
pop
jnp
cmp
sub
int3
out
aaa
ret
sbbb
ljmp
or
jmp
cltd
dec
push
ss
ds
or
mov
sub
mov
mov
pop
jmp
jne
pop
mov
or
movsl
movsl
jnp
and
sub
jp
xchg
lcall
jns
add
cltd
push
jmp
dec
cld
mov
xchg
push
outsb
or
outsb
xor
cs
mov
gs
fiadds
add
fldl
scas
movsb
nop
repz
psubsb
cmc
pause
xchg
mov
mov
mov
pop
pop
push
dec
xorb
movsl
arpl
jbe
mov
sbb
inc
mov
xchg
mov
pop
loope
jno
push
fwait
clc
xor
adc
stos
inc
sbb
daa
xor
gs
add
fwait
cmp
lds
enter
addb
test
xchg
mov
rcll
cltd
cmp
sbb
out
repnz
repnz
xorb
sahf
pop
mov
into
xlat
mov
dec
fmull
loope
jo
jmp
ja
or
xchg
or
insb
outsb
and
mov
xor
adc
mov
enter
mov
jnp
das
lods
std
fldcw
sbb
out
pop
movsl
mov
mov
mov
jnp
aas
fiadds
dec
mov
xor
push
inc
mov
mov
jge
scas
loop
push
add
xchg
adc
rorb
add
pop
popa
mov
out
pop
pushl
ret
pop
jle
inc
mov
shl
test
out
cmc
std
mov
hlt
aad
jbe
outsb
aaa
xor
fadd
rcll
popf
outsb
dec
jp
test
dec
push
int
lret
adc
ficoms
popf
inc
icebp
push
dec
xchg
mov
pop
pop
pop
xlat
test
insb
cwtl
adc
push
adc
xchg
hlt
jecxz
pop
push
scas
push
sub
adc
cli
push
push
lcallw
out
ljmp
and
test
inc
cs
jnp
mov
sbb
test
mov
shrb
les
add
fbstp
mov
psubsb
push
incb
cmp
shlb
icebp
repz
mov
add
jb
inc
outsl
cmc
insb
sub
jns
jo
cmpsb
div
xchg
push
add
inc
sbb
in
subb
adc
das
cmp
pop
in
xlat
adc
add
ret
fndisi(8087
mov
js
jo
aam
mov
mov
jmp
js
sarl
jno
sbb
in
pushf
xchg
into
bound
ret
cltd
mov
je
mov
sub
into
mov
jp
fistpll
fsubl
inc
push
mov
pop
dec
jecxz
in
push
inc
push
cmpsb
std
adc
std
cmp
mov
mov
mov
xchg
xlat
mov
push
jnp
mov
rorl
in
pop
aam
pop
dec
subl
bound
orl
pop
pop
popa
mov
mov
stos
cmp
push
or
mov
cltd
lds
repnz
mov
adc
stos
addl
adc
jmp
shlb
pop
out
mov
sub
test
stos
rep
dec
movsb
jge
into
aad
into
inc
fmull
inc
inc
xchg
leave
adc
mov
pop
out
bound
stc
jbe
adc
cli
dec
pop
lods
sub
mov
cmp
sbbl
mov
mov
pushf
push
loop
lds
and
sbbl
pop
jae
movsb
lahf
cs
adc
std
mov
decl
lds
sbb
out
xor
push
pop
sub
mov
test
bound
sub
cs
lods
sbb
sbb
enter
jecxz
les
jg
negb
sub
js
pop
mov
out
daa
insb
cmp
pop
stos
cmp
mov
mov
mov
or
cmp
xchg
fwait
in
mov
pop
mov
mov
leave
stc
fiaddl
or
cmc
push
test
jbe
sbbb
pop
cs
pop
mov
or
ss
shlb
sub
pusha
scas
push
aaa
addr16
test
xlat
test
shlb
jnp
clc
gs
cmpsl
cltd
xchg
orb
inc
mov
push
pop
cwtd
mov
shr
xchg
cmp
adc
out
mov
fstpt
mov
dec
test
jp
stos
mov
sub
lea
arpl
and
cmp
jnp
and
mov
subb
stos
pop
int
mov
rorl
jl
mov
jp
xlat
mov
mov
inc
inc
int3
add
in
enter
rcll
jle
push
cmp
cmp
xchg
shlb
pusha
sub
jnp
mov
xchg
sbb
mov
imul
xor
jns
loopne
daa
push
xchg
test
inc
cmpsl
cmp
ljmp
cmp
jnp
xor
fidivrs
pop
push
dec
icebp
arpl
fdivs
std
enter
int3
lret
pop
mov
stos
add
jbe,pn
test
jmp
jns
inc
inc
or
mov
cmp
subb
inc
lcall
add
ret
sbb
daa
lret
inc
icebp
test
mov
adcb
sbb
mov
sub
lds
xlat
push
add
rclb
les
sbb
jge
sarl
out
add
lret
aaa
imul
jnp
pusha
xchg
inc
repz
repz
ljmp
mov
cli
pop
insb
fildl
adc
std
ret
je,pn
es
mull
ss
xchg
jp
fldcw
inc
adc
stc
dec
pop
dec
cmpsl
scas
or
cli
jp
repnz
jle
adc
in
adc
inc
je
jecxz
cmc
xchg
jle
gs
mov
cmp
xchg
shlb
push
ss
sbb
icebp
faddl
lret
mov
out
xchg
pop
mov
xor
cmp
insb
repz
popf
test
cmp
rcrl
push
add
out
sar
and
inc
and
mov
push
loope
cmpsl
mov
addl
xlat
ja
mov
mov
fdivrs
and
and
mov
add
push
fmuls
dec
cltd
rcrl
lahf
xor
clc
test
mov
xchg
int3
pushf
xchg
cmp
stos
xchg
cmpb
sahf
dec
mov
sbb
and
push
ret
mov
mov
jns
outsb
jmp
test
arpl
mov
mov
repnz
ror
test
outsl
daa
add
pop
cmp
aas
rorl
mov
push
in
scas
sbb
jbe
cmp
push
add
js
inc
clc
add
cs
inc
sub
je
fnstsw
inc
sub
ljmp
jecxz
sub
jecxz
jae
push
out
jle
push
mov
add
or
dec
xor
popf
cmp
cli
xchg
stos
and
ror
rolb
adc
mov
dec
xor
inc
fwait
enter
fsin
inc
fldenv
sub
dec
mov
movsb
std
or
insl
dec
and
outsb
addr16
loopne
out
and
icebp
out
ja
dec
dec
nop
pop
push
mov
test
cmc
movsb
enter
dec
mov
jno
mov
or
mov
into
dec
in
mov
cmpl
jns
or
aaa
sub
cltd
into
adc
push
cmp
sbb
test
sbb
xchg
in
mov
iret
fs
jno
adc
jnp
or
and
jb
add
mov
gs
xchg
sbb
cmp
mov
mov
add
xor
sub
insb
stc
subl
mov
xlat
sbb
stos
ss
fidivl
insb
test
pop
and
xchg
scas
inc
hlt
stos
mov
xor
in
xlat
xor
add
insl
dec
cmp
pushl
and
jle
movsb
fildll
loopne
clc
mov
movb
mov
inc
and
xchg
imul
int3
xchg
in
xor
cwtl
mov
lahf
in
jmp
xchg
pand
clc
push
lret
aad
xor
xorl
jmp
pop
xor
in
pop
out
push
call
push
dec
xlat
lods
movsb
in
adc
lcall
sbb
push
jne
jl
xchg
inc
imull
lret
shrb
decb
add
or
cltd
cwtl
lret
cld
icebp
cltd
inc
mov
xor
orl
insb
sbb
es
hlt
inc
xlat
pusha
in
addl
inc
shlb
jo
in
clc
fxch
lea
sbb
xchg
or
or
loope
pop
pop
adc
imul
pop
addr16
inc
jns
inc
or
rcl
sbb
jne
add
pop
push
sub
dec
outsb
or
xor
jecxz
fldenv
cwtl
inc
push
jmp
xchg
jne
stc
sub
sbb
ss
sbb
addr16
je
mov
add
lods
pop
mov
andl
mov
lret
ret
aas
scas
or
jecxz
adc
xchg
enter
and
push
movsl
dec
repz
inc
fimull
fisubl
sbb
and
aaa
dec
mov
aaa
push
jb
adcl
cmp
xchg
sahf
inc
ret
or
imul
and
arpl
sbb
push
sti
jbe
push
mov
aas
push
data16
rolb
xor
dec
inc
repz
ja
out
xor
mov
inc
push
dec
jne
fwait
lcall
jae
xchg
xchg
mov
pop
push
pop
lea
popf
adc
push
sbb
lock
sub
subb
mov
push
pop
mov
mov
rolb
icebp
xor
flds
les
add
xchg
popa
iret
push
icebp
out
sub
jl
push
push
fsubrl
jb
jne
subb
es
sub
xor
cwtl
cmp
jg
stos
push
push
icebp
cli
add
outsb
dec
xchg
adc
mov
push
lock
sub
xchg
adc
dec
xor
rorl
mov
dec
inc
xorl
and
lds
aad
mov
std
xchg
sarb
mov
orb
incl
inc
jge
sbb
lahf
mov
in
push
lods
or
cltd
pop
cld
xchg
xor
mov
xor
mov
jge
nop
xor
mov
shll
js
leave
test
outsl
into
adc
lret
sti
iret
pop
mov
insl
mov
sbb
mov
test
std
mov
arpl
ja
movsl
push
loope
jl
test
imul
mov
jle
xor
sbb
xor
insl
mov
jg
loope
out
jecxz
mov
aaa
sub
faddl
jl
not
insl
sbb
int3
cmp
xchg
inc
jp
lret
mov
sbb
lcall
rcrb
xchg
bound
mov
adc
addl
add
cmpsl
arpl
sub
jnp
sub
lcall
push
inc
shlb
fadds
adc
mov
push
mov
je
jl
dec
mov
leave
or
stos
stos
cs
mov
rcl
push
add
sbb
and
in
mov
push
xchg
sbb
add
xor
imul
push
aaa
hlt
or
in
aam
jno
mov
and
leave
rclb
into
push
adc
ret
mov
mov
cmpsl
cltd
sub
mov
push
or
add
popa
pop
mov
sbb
add
incl
fisttpl
stos
push
cmp
mov
dec
or
out
add
test
or
mov
and
aam
les
mov
and
mov
aas
push
inc
sub
aas
xor
xor
fmull
xor
jae
ficompl
xchg
repnz
stos
cmpsl
jp
pusha
stc
xchg
or
sub
xchg
movsl
push
out
daa
mov
xchg
push
movsb
punpckldq
push
sbb
addr16
xchg
repz
cld
inc
jbe
mov
xchg
subl
push
xchg
adc
xchg
inc
cmp
out
mov
test
stos
cld
push
stc
shl
dec
stos
stos
cmc
xchg
adc
dec
out
call
mov
mov
lahf
xor
pushf
xor
or
adc
sbb
out
pop
inc
sbbl
cwtl
shr
mov
movsw
outsl
pushf
bound
mov
add
jmp
inc
call
in
pop
mov
jbe
xchg
icebp
pop
dec
xchg
sub
dec
je
fmul
and
jmp
sbb
jle
push
aaa
or
xchg
xchg
sub
and
testb
sbb
mov
subl
xchg
sbb
gs
fimull
leave
dec
xor
xchg
shlb
shrb
inc
aas
and
add
inc
in
repz
inc
mov
mov
into
mov
cmp
arpl
push
adcl
notl
arpl
adc
push
call
mov
scas
jno
and
pop
mov
mov
xchg
adc
xor
outsb
stos
mov
iret
pop
mov
jne
icebp
fbld
adc
das
inc
push
pushf
cmp
dec
xor
sbb
xchg
add
sbb
in
jp
data16
xchg
lods
mov
and
notb
adc
lcall
popf
push
aad
sub
sub
xchg
loopne
sbb
shl
sub
add
ret
xchg
outsb
jg
or
mov
mov
insl
mov
jge
std
sar
popa
adc
xchg
cltd
rolb
test
clc
xchg
int3
xchg
test
sbb
cmp
dec
test
pop
jae
and
cmp
mov
icebp
jo
adc
xor
notb
mov
icebp
pop
mov
ret
lods
add
int
sbb
scas
pushf
int
adc
dec
inc
je
cmp
fdivrs
jb
pushf
xchg
out
clc
out
mov
bound
pushf
xor
out
cvtpi2ps
addr16
in
js
loopne,pt
xor
inc
cltd
mov
lcall
lea
mov
sub
inc
addr16
mov
roll
push
dec
ss
xor
stos
in
lcall
mov
sar
inc
xchg
or
notb
mov
xor
jg
gs
movsb
pop
xor
iret
leave
bound
ja
inc
push
out
mov
inc
cltd
loope
repnz
lea
xchg
sub
and
jbe
rcr
pop
loop
xchg
or
and
xlat
sub
fsubl
xchg
pop
cmpl
xchg
js
or
imul
jmp
xchg
dec
push
mov
test
sub
leave
decl
clc
jp
bswap
pushf
mov
adc
lcall
lahf
sbb
push
lods
pusha
jns
inc
pushf
lret
les
cli
data16
aaa
pushf
imull
je
cmp
int3
jg
push
lret
cwtl
cmp
dec
shll
mov
repnz
adc
xchg
sub
cltd
fistpl
add
dec
mov
les
push
add
cmp
cmp
xchg
out
idivl
cwtl
testl
into
and
push
or
aaa
subb
pusha
mov
jl
jge
mov
movsb
mov
inc
call
ljmp
hlt
inc
sbb
push
in
push
sar
cmp
repnz
jmp
jo
sbb
mov
dec
push
insb
test
push
test
pop
js
movsb
adc
daa
and
insb
insl
cmp
xchg
mov
push
inc
into
cmpb
ljmp
inc
xchg
inc
cli
test
lea
lock
push
inc
xor
and
xchg
out
sub
stos
and
xchg
and
inc
jno
pop
stos
jno
pop
xor
loopne
inc
into
int
test
mov
inc
arpl
pushf
shlb
out
cwtl
insl
repnz
pusha
xor
mov
pop
dec
in
enter
push
rcrl
xchg
jecxz
mov
add
inc
dec
mov
dec
sbb
sahf
sub
icebp
rorl
or
test
test
sbb
out
dec
mov
int3
xor
sbb
rorb
ds
fwait
push
je
imul
push
enter
out
addr16
sub
lcall
mov
lahf
xchg
cli
push
pop
fwait
loope
sub
lahf
push
lcall
mov
mov
xorb
cmc
xchg
addl
inc
sub
outsl
adc
mov
mov
movsl
inc
int3
inc
aad
lea
push
mov
loope
push
mov
sbb
cld
daa
mov
stos
addb
jns
xchg
mov
jns
aad
and
loopne
adc
mov
loopne
in
lahf
movsl
in
sbb
jne
mov
or
sub
aas
adc
fwait
jge
mov
enter
mov
gs
fucomip
test
js
fisubs
aaa
adcl
test
push
in
jge
add
cmp
rcll
sub
pop
fisttps
cli
std
or
inc
push
xor
nop
mov
stos
jnp
push
lcall
pop
xor
imul
adc
mov
nop
xchg
push
push
mov
inc
mov
pop
icebp
fimuls
xchg
dec
push
jae
cld
or
icebp
adc
mov
sbbl
cmp
push
into
xchg
pop
and
push
lock
cwtl
xor
lret
jge
jp
mov
sub
or
imul
cmp
int3
xor
iret
scas
cmovbe
jo
pusha
mov
movsl
sub
pop
pop
sbb
inc
pop
cmc
or
loope
repnz
mov
daa
sub
ljmp
test
cltd
jne
test
insl
push
cs
inc
or
stos
mov
inc
jns
ljmp
dec
movsb
mov
push
je
flds
jno
mov
adc
and
loopne
addl
cmp
rcr
pop
stos
cwtl
adc
stc
mov
mov
pop
clc
mov
sub
xor
repz
cmp
out
jno
imul
xchg
inc
jne
sub
pop
pop
inc
cld
jmp
dec
cmp
mov
std
cmpl
scas
xchg
mov
addl
push
test
sbb
faddp
fs
mov
sahf
cs
loop
mov
cmp
shrl
mov
push
gs
es
xlat
fsubl
pop
push
mov
je
leave
jno
pop
dec
push
rcr
push
and
jmp
hlt
mov
inc
aam
mov
loope
cmp
insl
and
push
aam
mov
mov
mov
fadd
lods
sbb
enter
ja
lea
loopne
add
daa
enter
xor
mov
movsb
out
jecxz
mov
sub
rcr
in
mov
addr16
xor
mov
mov
mov
pop
test
ja
sbb
call
xchg
shrb
fdivrl
ja
mov
shlb
add
mov
mov
cld
popf
add
popa
int3
cmp
sbb
aas
mov
bound
jge
adc
mov
jp
orb
push
lock
xlat
jns
in
out
outsb
call
or
cwtl
insl
or
jns
inc
inc
lods
test
sti
stos
cmp
shrl
test
or
daa
add
aad
lahf
mov
outsl
arpl
in
fcmove
into
push
inc
sub
dec
pop
rorb
dec
adc
jg
int3
cmpsb
repz
and
cmp
mov
stos
fstl
cmpsb
insb
mov
pop
idivl
lret
sub
xchg
dec
js
inc
sarb
arpl
xchg
je
xchg
dec
popf
ljmp
mov
sahf
push
add
inc
add
add
paddusw
push
mov
mov
negb
jns
cmp
inc
pop
push
or
and
and
dec
mov
leave
fidivrs
add
sub
push
adc
pop
push
mov
push
aaa
mov
test
clc
inc
cmp
or
cltd
push
dec
push
inc
aam
adc
adc
adc
fimull
mov
in
clc
int
int3
std
inc
les
pop
inc
jmp
cmpsb
aaa
inc
gs
xor
sub
int3
jo
test
jl
xor
imulb
outsb
add
xor
pop
outsl
rcl
add
loope
fdivl
jnp
pop
adc
in
je
mov
mov
add
dec
aad
xchg
in
mov
cmp
xor
gs
pop
adc
mov
fisubs
mov
ret
movb
sub
mov
outsl
ret
jno
inc
cmpsb
stc
and
xor
out
lds
and
sysexit
imulb
movsb
pushf
movsl
pop
pop
repz
inc
mov
push
imul
test
mov
xor
out
pop
imul
add
idivl
ret
stc
out
pop
mov
dec
xor
shrl
dec
subl
jo
leave
jmp
or
out
int
addr16
insb
je
mov
jbe
sahf
fstpt
sbb
sbb
cs
aam
fimuls
xor
mov
enter
pop
ret
cmpsb
ss
mov
mov
jb
add
es
mov
or
pop
repnz
rcll
arpl
int
lret
ds
orb
mov
xlat
and
mov
jae
pop
pop
sub
push
jno
nop
repz
stos
test
fisttpl
shl
xchg
out
push
push
pop
lret
xchg
inc
adc
jnp
call
iret
dec
in
cmp
mov
mov
stos
mov
cmp
xchg
sbb
cmp
mov
jne
lret
pop
add
sarb
lret
xor
cmpsl
xor
cltd
mov
xor
movsl
jg
jge
std
or
shll
add
pop
out
and
xor
lahf
push
xchg
xchg
sbb
stc
test
out
cld
stos
syscall
faddp
cmpsl
push
fs
push
cmp
mov
mov
subb
loop
sar
lcall
jmp
mov
outsl
cmpsb
and
adc
lods
push
lahf
iret
iret
mov
dec
mov
nop
leave
mov
shlb
push
and
inc
cmc
fdivs
cwtl
imul
mov
rol
pop
ss
leave
xchg
rcll
adc
out
push
in
pushf
test
adc
jne
imul
inc
roll
or
test
xor
jg
shll
inc
sbb
inc
mov
test
mov
lcall
and
xchg
fcomps
js
sbb
outsb
data16
daa
mov
fistps
inc
pop
into
xor
enter
lcall
jl
ljmp
mov
push
in
shld
test
ljmp
push
je
dec
jo
cmp
or
adc
jge
mov
cmp
imul
pushf
das
xchg
mov
data16
loop
xor
in
mov
add
movsb
data16
lods
iret
mov
loopne
pop
jnp
cmpsl
lods
test
jbe
out
sub
mov
jp
push
cmc
les
test
bnd
xchg
mov
adc
mov
jp
add
cmp
rcll
sub
and
clc
xor
sbb
sarl
sub
adc
lea
push
nop
mov
jecxz
push
inc
lds
mov
xor
iret
xchg
imul
mov
cmc
call
out
jb
dec
sub
and
push
xor
sti
add
fwait
add
add
adc
shl
adc
dec
ljmp
sub
call
ss
or
fs
sti
ljmp
lret
xchg
xor
push
in
inc
lock
mov
gs
sub
push
and
cmp
les
mov
lcall
and
movsl
mov
push
mov
lcall
int
jnp
xchg
dec
xor
adc
jge
xor
bound
xor
aad
dec
das
jo
test
mov
and
sbb
mov
jns
cltd
pop
test
xchg
and
push
push
push
das
pop
negl
jb
mov
pop
or
arpl
inc
fistpll
add
mulb
popf
js
adc
cmp
ljmp
cltd
neg
add
mov
clc
cwtl
ret
lret
test
mov
add
jmp
sub
or
sub
and
sub
out
enter
xchg
popa
shll
dec
fwait
inc
aam
mov
rcrb
cli
enter
jno
ret
cld
into
dec
lret
bndldx
rorl
push
shl
pop
sub
jnp
lods
sbb
dec
lret
lock
test
sbb
jl
jp
outsb
push
nop
test
lods
push
shll
mov
rcrl
mov
in
div
pushf
mov
adc
sbb
fstp
lahf
xchg
jp
add
data16
iret
gs
outsb
jo
add
ljmp
daa
cmp
sub
out
sbb
hlt
xchg
nop
mov
ljmp
xor
adc
pop
cmc
sbb
lcall
mov
jge
xchg
int3
mov
sbb
or
adc
push
inc
or
fiaddl
fsubrl
and
cmp
ljmp
inc
data16
mov
adc
mov
push
out
out
mov
adc
xchg
ljmp
push
mov
leave
cmp
notl
lret
or
fwait
stos
loope
dec
sbb
push
ret
xchg
dec
aad
push
jecxz
mov
dec
shrl
clc
sbb
mov
sbb
xchg
mov
insb
incb
clc
popa
adc
jg
sbb
xlat
shlb
roll
sub
dec
mov
add
pop
fstpt
inc
out
call
mov
push
and
sbb
rcrl
pop
jno
shr
add
test
fpatan
lods
les
into
call
add
dec
jge
ret
pop
sub
cmp
fucomi
out
insb
insl
inc
mov
aaa
add
push
dec
xchg
stc
mov
mov
jno
rcrb
outsb
ss
inc
ret
sbb
push
loop
adcl
cmp
jmp
negl
fs
mov
pushf
fdivrs
or
jmp
inc
cmpsl
dec
shlb
mov
sub
inc
adc
andl
stos
push
jl
mov
jmp
xchg
pushf
mov
int3
jb,pn
insl
jae
sbb
lds
fisubrs
bound
adc
ss
sub
sbb
pop
and
movswl
rcr
dec
pop
cs
mov
jmp
movsl
addr16
ss
dec
stos
lock
mov
std
sub
sti
cmp
lret
enter
sub
and
subb
or
icebp
or
adc
jnp
pop
push
les
mov
loop
call
dec
add
cmp
push
or
cmpsl
mov
not
pop
xchg
clc
sbb
rorb
jae
shr
add
ljmp
mov
add
and
out
in
sbb
push
cmp
mov
imul
popf
dec
sbb
test
adc
mov
jl
inc
cmc
bound
add
iret
jo
popf
inc
mov
xor
mov
fildl
test
or
pop
jecxz
insl
lcall
push
sbb
jns,pn
xchg
add
push
cmp
aaa
addr16
add
ds
mov
xor
mov
loopne
out
cmpsb
std
punpckhbw
outsl
sub
jne
xor
dec
jl
sub
cmc
xor
xchg
and
iret
add
sub
movsb
hlt
pop
cmpsl
jnp
repnz
fiaddl
mov
xor
pop
lret
popa
in
fwait
int3
femms
aaa
pusha
aam
lods
stos
inc
jecxz
sti
popf
rcrl
cmc
inc
js
xor
fwait
mov
jbe
stos
mov
test
int3
cwtl
int3
ret
jns
ja
ror
jnp
dec
jg
mov
outsb
out
outsb
shr
lods
push
jns
ja
push
in
push
data16
or
mov
mov
xor
mov
test
sbb
inc
cmpsl
mov
xor
cmp
jns
pushf
and
jns
lods
pop
sbb
fneni(8087
cmpsl
lods
movaps
mov
push
dec
dec
aam
je
mov
jge
mov
das
inc
je
test
das
sub
xchg
jne
pop
cmp
xor
jmp
xor
cmp
xchg
dec
mov
mov
add
stos
js
jns
cwtl
pop
sbb
in
aaa
cmpsl
dec
dec
jge
shlb
pop
jns
add
enter
dec
pop
outsb
add
mov
jle
xchg
scas
xor
cwtl
sub
adc
in
xor
push
add
std
nop
in
jo
not
mov
cmp
pop
add
push
outsl
sub
ljmp
scas
aad
cmpsb
negl
arpl
out
add
sub
dec
push
adc
lret
loope
lahf
sbb
pusha
shrb
jp
sbb
pop
push
rcll
pop
test
lret
movsb
add
pop
aam
adc
jb
jg
xchg
stc
std
imul
adc
push
je
add
pop
pop
sbb
shrl
sbb
xchg
outsl
add
cltd
mov
adc
sbb
arpl
cmp
xor
loop
ret
js
jle
in
in
push
enter
addb
gs
adc
pop
sub
pushf
movsl
adc
repnz
jnp
mov
repnz
push
cmpl
push
lea
add
dec
stos
out
pop
push
cmpsl
xchg
or
mov
lret
rcrl
nop
pop
jl
or
cmp
loopne
je
sub
xor
test
cwtl
pop
push
sbb
xchg
jns
daa
pop
push
jno
jmp
jle
xor
and
lds
or
mov
and
jo
lcall
rorb
ficoml
cmp
xor
sbb
sahf
adc
sub
leave
adc
jmp
dec
mov
popa
cmp
outsb
bound
cmp
or
into
cmp
rcrb
cmp
dec
sahf
pop
stos
pop
movsb
dec
fimull
loop
pop
or
mov
cmpsb
pop
mov
out
inc
mov
iret
xchg
hlt
pop
pushf
aaa
pop
jmp
xor
ja
in
ss
mov
lea
rol
mov
or
fildll
jnp
loopne
jmp
mov
jne
fisttps
loopne
leave
adc
insl
or
sbb
les
lods
ret
adc
adc
dec
fdivs
andb
xor
and
and
mov
dec
cmp
aam
test
xor
jg
sbb
xchg
add
in
and
outsb
lahf
or
inc
pop
out
cs
and
fld
repnz
les
decl
ss
cmpsb
ret
push
jge
adc
pop
mov
lea
fwait
sbb
xchg
pusha
and
pop
scas
xchg
or
ja
das
or
ficoms
xor
jb
ja
jge
popf
inc
out
lahf
pop
pop
push
inc
in
vmovdqa
push
fildl
mov
xorb
mov
mov
es
jg
cmpsb
lods
jnp
in
mov
rcrl
rcll
dec
jb
adcb
negb
push
aas
aam
cltd
jae
dec
rolb
test
in
popa
in
sti
inc
mov
jb
in
xor
mov
imul
jb
dec
stc
mov
or
lock
dec
aaa
xchg
cmpsb
hlt
sub
rorl
pop
stos
sbb
pushf
enter
aam
inc
cmpsl
push
sub
cmp
addps
inc
cmpl
mov
out
notb
push
add
mov
and
mov
pop
jle
ret
fwait
test
jmp
mov
lahf
jl
call
add
popa
es
bnd
rorb
sub
filds
xchg
in
in
inc
xlat
mov
xorl
and
or
mov
test
lock
repnz
and
pop
xchg
ret
cmp
add
bound
pop
nop
mov
or
test
mov
and
mov
lods
cmp
mov
adc
test
push
pop
je
inc
xchg
stc
jge
pop
imul
cmp
fwait
ja
xchg
xor
ret
mov
js
js
add
pop
movsl
inc
push
shr
shl
mov
sub
xlat
jg
es
mov
and
fists
mov
loope
mov
pop
pushl
xor
mov
and
call
lds
lahf
mov
jno
es
adc
les
sbbb
or
lea
aad
push
mov
inc
pop
out
decb
pop
pushf
and
dec
jo
mov
push
cmpsb
out
mov
in
aam
pop
fstpl
out
daa
in
cmp
add
mov
movsl
mov
and
cmc
ficompl
cmpsl
shl
pop
fistpll
sub
ss
ja
xchg
mov
sub
hlt
cmp
je
push
icebp
cmp
nop
or
adc
push
dec
imul
xchg
adc
fcmovu
lea
ficompl
lock
sarb
dec
pop
pop
out
daa
pop
or
xchg
enter
shll
xchg
push
sti
cmp
pop
jno
enter
cmpb
sbb
push
cmp
scas
ret
push
push
mov
push
dec
jge
add
mov
call
mov
out
sbb
pop
fbstp
out
sti
inc
cli
mov
inc
imul
mov
pop
std
in
sub
cs
pop
nop
rcrb
sti
jne
jae
push
ret
sbb
std
cmp
sub
shlb
gs
inc
aam
xor
mov
or
pushf
call
fimull
test
jb
jne
dec
inc
pop
popl
adc
pop
in
sbb
aaa
into
shll
in
jae
fists
sub
and
daa
cmp
aaa
imul
inc
sbb
mov
push
and
pop
jno
and
dec
leave
adc
dec
inc
push
pop
add
dec
sub
xchg
push
or
std
xchg
bound
mov
arpl
out
xchg
mov
xchg
js
je
push
mov
xlat
ja
call
push
movsb
aam
and
movsb
jge
sahf
into
jae
jecxz
sbb
jle
cltd
push
div
lods
mov
cmp
lds
aam
jecxz
mov
pop
xor
lock
mov
sbb
int
pusha
and
or
and
adc
sahf
dec
repz
and
fstps
jb
cwtl
pop
aad
and
cmc
idivl
imul
adc
in
push
loopne
jge
or
push
jns
sahf
stos
cmpsb
popf
in
loop
push
outsl
dec
ds
pop
fsubs
xchg
addr16
icebp
imul
fs
xor
cmpsl
add
in
lods
shrl
addr16
mov
cmp
mov
mov
scas
imul
dec
data16
add
sub
sti
or
and
mov
stos
loopne
adc
mov
lahf
push
int
inc
repz
lahf
inc
pop
jae
sub
and
mov
out
cld
scas
pop
ja
rcrb
fwait
pop
push
xor
or
into
shrb
add
mov
jecxz
fidivl
out
jb
icebp
and
pop
loop
jb
lea
repz
mov
push
add
cmp
xor
in
stc
mov
imul
or
or
inc
es
adc
in
mov
or
arpl
rcrl
fwait
pop
rcrb
or
nop
mov
jnp
and
mov
push
add
leave
sti
pop
mov
hlt
div
lds
sub
lods
daa
dec
push
pop
pop
pop
inc
inc
stc
shll
xchg
lcall
je
movsb
dec
sub
pop
gs
stos
roll
xchg
gs
out
popf
xor
pop
jnp
aam
dec
push
adc
mov
pusha
stos
arpl
pop
and
insl
jbe
decl
jle
pop
icebp
aam
sub
cmpsb
sub
stc
pop
cmp
out
imul
xor
fdivs
fisubrl
ds
fmuls
lods
enter
into
jge
cmpsb
adc
xchg
push
cwtl
cltd
adc
arpl
or
adc
aad
mov
pop
add
dec
movl
clc
pop
lods
mov
dec
mov
sbb
push
loopne
xor
mov
leave
pop
dec
test
roll
adc
xchg
iret
lods
cltd
lods
mov
pop
sti
loop
push
push
bnd
fdivr
and
or
test
mov
jge
pop
fistl
in
enter
cwtl
fwait
stos
lcall
ljmp
iret
jl
lods
ds
and
ja
loop
fldl
movsb
cli
das
and
pop
xchg
cmp
mov
outsb
add
fbstp
jne
cld
inc
add
mov
mov
mov
mov
mov
mov
push
cmp
jge
out
dec
jmp
and
mov
jp
divb
and
sub
mov
push
fdivl
push
jnp
orb
stos
ss
aas
and
add
sub
adc
ljmp
lock
stos
sbb
jns
cmpsl
jge
cmp
sbbb
test
popf
dec
inc
ljmp
subl
jle
lods
popf
inc
push
shrl
dec
dec
sbb
xchg
jp
nop
push
push
dec
xor
jge
enter
ss
cmp
push
je
and
into
sbb
psadbw
sub
cmc
xchg
sbb
or
and
sti
rclb
sbb
icebp
sbb
ret
les
mov
mov
cmp
xchg
jb
popa
ret
xchg
sub
and
movsb
gs
psrld
aaa
cmc
int
and
ret
pop
arpl
imul
jg
jl
les
adc
gs
push
js
dec
cmp
ss
lods
mov
cs
sbb
outsl
pop
es
fisubl
cmpsb
ret
lods
push
pop
xor
shrl
fists
mov
loope
jno
ror
or
push
push
mov
fnsave
ret
pop
ss
in
cmp
cltd
nop
enter
push
scas
push
push
imul
mov
arpl
adc
xchg
ret
fiaddl
test
fidivl
into
jno
pop
out
mov
lock
xor
dec
sbb
mov
aad
mov
xchg
dec
je
cmp
push
or
pop
movsl
loope
mov
movsb
sbb
cmc
outsl
adc
into
dec
test
pop
das
mov
inc
lret
mov
and
cmp
in
cmp
add
pop
sub
pushf
lcall
mov
test
jns
out
cmp
stc
mov
pop
ja
mov
sbb
jp
stc
int3
or
xor
outsl
sti
insl
out
and
in
push
mov
cmp
ret
ljmp
ffree
mov
cmp
mov
dec
daa
fs
mov
fldz
mov
sub
cmp
pop
jle
stos
gs
lods
sbb
cmp
mov
in
imul
mov
sub
cmp
in
add
in
mov
hlt
fwait
lahf
imul
add
dec
inc
movsb
mov
sub
inc
call
mov
jp
cs
and
mov
lcall
cli
jle
out
fisubrs
movsl
ret
stc
lahf
xor
les
mov
loopne
mov
arpl
test
andl
jns
pop
rcll
ds
leave
xor
ss
rolb
dec
test
mov
cmpb
xor
arpl
shll
fisubl
push
lods
jmp
scas
loopne
xlat
pop
dec
comiss
pop
aas
lods
dec
dec
xchg
pop
std
mov
icebp
mov
dec
xor
dec
stc
adc
mov
xchg
pop
mov
push
xorb
decb
sub
out
inc
inc
mov
mov
sahf
mov
sbb
stos
loope
xchg
pop
shll
add
or
pop
stos
cltd
jge
movsl
xor
dec
std
xlat
add
in
push
ds
andl
hlt
adc
sti
into
mov
sbb
cltd
dec
sub
pop
push
mov
mov
fucom
mov
nop
ljmp
push
enter
cmp
aam
push
in
out
push
xchg
jge
subb
cmpsb
int
rcrb
add
stos
sahf
fistps
xchg
int3
divl
aam
cmp
imull
pop
xor
out
xchg
addb
xchg
and
out
pusha
inc
dec
es
add
mov
xchg
out
xchg
pop
pop
aaa
and
sub
sub
push
fldl
js
lds
js
add
pop
cld
xchg
insl
jl
or
cmpsl
rcr
imul
adc
shrl
bound
mov
pop
sti
hlt
lods
sub
dec
mov
sub
je
xchg
js
or
sub
mov
adc
popf
mov
push
cwtl
inc
clc
mov
xchg
stc
sti
mov
inc
js
push
jge
inc
cltd
mov
jecxz
pop
push
mov
ljmp
lret
rol
fnsave
repz
in
jecxz
notl
sub
leave
dec
mov
out
mov
mov
popf
xor
add
lods
or
outsl
mov
ss
std
stos
dec
pop
sti
mov
or
imul
mov
cmp
lcall
mov
inc
mov
fstpt
sub
das
dec
jnp
fdivs
jnp
fadds
inc
pop
xor
pop
mov
adc
mov
nop
adc
dec
jge
mov
pop
push
addr16
cmp
mov
mov
fnstcw
outsb
sbb
mov
lods
in
call
xchg
arpl
outsl
inc
in
ds
xchg
fidivs
push
aas
add
ds
insb
inc
or
pushf
or
rcrb
or
pop
lds
loopne
into
add
cltd
dec
jne
jnp
gs
mov
cltd
jle
inc
mov
mov
dec
xor
mov
adc
jp
test
sub
inc
mov
mov
inc
mov
and
adc
sub
xor
aas
or
in
fwait
icebp
cmpl
sbb
cwtl
adc
jl
inc
xchg
scas
xchg
add
fists
push
ret
push
test
addr16
aam
push
repnz
dec
jmp
cmp
insl
push
in
in
pop
addr16
aad
rcll
sbb
out
ljmp
cmp
mov
mov
test
mov
adcb
pop
in
repz
inc
popa
fmulp
push
sbb
ss
test
inc
add
lea
jmp
mov
xor
jle
cmpsl
mov
and
push
ja
mov
sub
mov
js
sbb
mov
les
cmp
clc
xchg
mov
push
push
dec
int
outsb
xor
inc
das
push
mov
and
mov
pushf
dec
popl
sub
lods
adc
cs
les
mov
shl
jle
mov
lods
aad
add
xlat
arpl
test
jns
stos
repnz
movsb
test
and
sbbb
xor
bound
aaa
sbb
movsb
imul
mov
pop
lcall
sbb
cli
pop
fs
xor
add
cmp
sbb
or
jmp
jp
aaa
cwtl
mov
aam
sbb
jno
repnz
adc
push
or
pop
mov
or
dec
cmpsl
imul
jne
or
jl
mov
jmp
or
test
cmp
inc
lds
insb
mov
adc
flds
mov
cwtl
add
enter
scas
mov
mov
das
mov
pop
clc
dec
roll
scas
into
dec
xchg
pslld
pop
clc
nop
pop
jbe
cli
cmp
jo
les
sbb
ja
add
mov
or
add
cmp
mov
add
fisubl
fists
arpl
dec
stos
sub
lcall
cmp
arpl
cmc
pop
bound
dec
in
insb
loope
sub
subb
shll
andb
aas
dec
test
and
clc
xchg
add
lret
mov
xor
push
and
pop
and
jnp
jg
push
dec
push
mov
int
sub
outsl
shld
xchg
dec
mov
push
jecxz
daa
scas
ret
repz
sub
xchg
and
filds
jns
aas
test
jge
push
jp
mov
mov
fdivs
xchg
std
jmp
data16
imul
inc
push
cli
and
bound
dec
adc
pop
lea
sbb
cmp
push
push
sbb
ljmp
cltd
enter
ficoms
dec
test
jno
dec
sub
xlat
dec
addr16
clc
mov
gs
hlt
sbb
jmp
xchg
out
fistpll
mov
fldl
orl
orb
std
mov
sbb
sub
sbb
xor
mov
std
ret
les
aaa
insb
cli
xchg
mov
adc
xor
loopne
xor
xlat
das
lahf
cmp
ljmp
add
mov
popl
inc
outsb
in
repnz
lretw
int3
mov
pop
inc
adc
fwait
repz
xchg
or
cmpsb
arpl
or
fsubrs
jg
adc
mov
lods
inc
jne
mov
xchg
test
inc
in
pop
cmpb
sbb
loop
shrl
icebp
add
clc
mov
dec
fsubs
inc
push
movsl
jnp
cmp
scas
sbb
jbe
sbb
shlb
lcall
push
xor
mov
insl
jg
pop
lret
xchg
xchg
mov
loopne
xchg
sub
mov
sbb
cmp
xchg
dec
in
jb
pop
jl
insl
mov
loopne
call
cmp
cli
and
and
test
lock
cli
dec
aaa
cwtl
sub
dec
ljmp
and
jle
ja
push
cmc
out
insl
ljmp
xchg
jnp
mov
inc
imul
gs
gs
and
xorb
sub
jne
sub
push
leave
ret
ljmp
mov
and
sub
xchg
jne
add
es
int3
insb
or
movsl
dec
popf
xchg
cli
or
push
pop
xchg
outsl
into
and
outsb
push
add
call
adc
fisubs
les
hlt
pop
int3
loop
in
adc
push
pushf
imul
add
lret
arpl
xchg
cwtl
cmp
int3
movsl
test
mov
ret
rcll
adc
jmp
cli
xchg
mov
cmc
mov
and
rclb
mov
sub
call
jl
push
or
addr16
inc
test
jbe
test
sarb
jno
outsb
jb
arpl
lret
adc
or
shl
fwait
or
insl
jge
xorl
xor
fs
cld
outsb
jl
arpl
jbe
sbb
aad
cmp
pop
xchg
jb
fcoml
jmp
shlb
fildl
adc
test
mov
pop
sub
push
filds
cmc
insb
adc
into
push
or
aad
push
imul
dec
or
cmpsl
sbb
in
ja
rcrb
cs
push
outsl
mov
jae
and
dec
lret
popf
sbb
sahf
daa
addl
lods
adc
ror
pusha
outsl
dec
inc
pop
in
jnp
inc
pusha
dec
push
rorb
pop
and
daa
or
out
dec
xchg
in
hlt
and
jne
addl
jo
add
sbb
icebp
lods
cmp
sub
lahf
sbb
fildll
imul
and
das
ds
mov
maxps
push
aam
test
les
cld
movsb
shr
xor
mov
add
jbe
sar
adc
ret
rcll
jle
push
xchg
fcmove
cmp
fidivl
mov
xchg
testb
or
xchg
lds
dec
cmp
dec
push
fcomps
xor
pop
xchg
sbb
iret
pop
sarb
adc
fwait
cmp
sbb
cmp
mov
push
jno
jnp
push
mov
test
pop
adc
pusha
aam
ds
ds
arpl
pop
sbb
hlt
nop
call
mov
cmpsb
pop
push
out
and
cli
cltd
sbb
ror
ja
ret
dec
out
lods
add
imul
xor
push
xor
les
fcompl
stos
notb
jbe
subb
es
jb
sub
stos
add
in
dec
add
into
adc
push
push
cli
sub
push
fs
ret
iret
add
xchg
lcall
xor
jbe
fsubrl
outsb
nop
iret
jnp
mov
dec
mov
adcl
xchg
cmp
in
push
jmp
sbb
cmpsl
sbbb
add
adc
icebp
subb
lods
push
lret
popa
movsb
mov
ljmp
inc
sbb
cmpsb
testl
fmuls
inc
dec
xor
pop
and
mov
scas
jecxz
cld
insb
shrl
es
fsts
cmpsl
mov
iret
int3
add
ljmp
test
push
mov
jg
ja
int
fistl
sbb
lcall
lds
jge
adc
cmp
lock
pop
popa
sub
sub
in
mov
mov
mov
pop
jl
lock
mov
pop
imul
xchg
testl
jmp
bound
gs
adc
mov
call
sub
lret
fwait
pop
sbb
lcall
sti
leave
add
nop
pop
popa
arpl
push
mov
test
jns
lret
push
mov
adc
push
insb
nop
lcall
into
cmp
or
aaa
push
push
lea
and
cmc
and
pop
dec
or
jg
push
in
mov
sub
ret
xchg
mov
push
xchg
mov
pop
xor
and
push
jno
shrl
loope
push
rcll
test
decl
icebp
inc
sub
pop
std
das
call
add
jl
push
mov
cmp
stos
jo
fists
repnz
mov
mov
data16
push
xor
ret
xchg
sub
jbe
inc
cwtl
cwtl
loope
push
adc
pusha
and
cmp
pop
jnp
adcl
lret
xor
push
mov
adc
pop
call
outsb
sahf
das
rcrl
push
mov
jle
subb
shll
sbb
xor
xchg
add
xchg
cmc
mov
scas
sub
popa
cmp
inc
jg
jl
jge
xchg
push
pop
call
mov
mov
xor
cltd
add
lret
cmp
inc
pop
je
test
sbb
fwait
xchg
movsl
pop
sbb
int3
jnp
packssdw
mov
pop
je
inc
incb
jge
xor
dec
and
rcll
inc
not
rcrb
dec
iret
lcall
movsb
je
rcll
inc
popf
push
enter
sbb
test
aaa
jecxz
push
mov
fwait
inc
lea
pusha
ret
xor
movsl
mov
jae
mov
adc
addr16
ja
out
xor
shrl
mov
popf
mov
mov
dec
in
aad
stc
je
loopne
das
das
daa
fwait
clc
aam
inc
cmp
pusha
mov
scas
pop
lods
mov
hlt
dec
cmc
mov
sahf
subl
add
dec
xchg
sbb
leave
pushf
push
sbb
cwtl
data16
mov
mov
mov
push
push
jge
rorl
mov
push
or
jp
shr
mov
shlb
push
rorl
jp
outsl
add
pop
dec
cmc
mov
mov
in
inc
inc
mov
jae
and
push
in
shll
or
push
stc
xor
mov
sub
xchg
pop
adc
gs
adc
dec
cmpsl
int
mov
sub
and
xor
ret
mov
mov
and
push
xor
mov
cmp
cli
mov
inc
jecxz
add
test
outsb
js
inc
in
sbb
jecxz
xor
ss
cmp
leave
pop
mov
orl
out
push
mov
lods
stc
sbb
lcall
lods
mov
fists
ret
xorb
outsb
adc
insl
imul
push
mov
fistps
mov
add
cmp
fbld
or
dec
and
aaa
and
xchg
mov
icebp
or
add
out
xchg
fdivrl
mov
loope
adc
and
mov
fimuls
test
lock
je
adc
xlat
and
pop
sbb
gs
xchg
mov
add
scas
jnp
loope
mov
and
sbb
jge
mov
adc
mov
add
sti
push
and
mov
xor
and
jl
std
sbb
jl
xlat
jge
fldcw
xchg
push
jl
rclb
adc
cltd
xchg
add
rcll
insl
sahf
mov
es
mov
ret
add
lods
ljmp
mov
mov
lahf
sub
inc
lods
cmp
mov
mov
jecxz
mov
test
fwait
and
add
dec
into
testl
adc
sbb
and
mov
scas
cli
test
xor
call
mov
adc
int3
sbb
test
mov
div
repnz
aas
xor
and
aaa
es
or
je
lcall
adc
rolb
mov
cmc
xchg
push
xor
cmpsb
push
cmp
xchg
stc
shl
mov
into
inc
lods
cltd
ss
push
stos
add
xlat
lock
filds
add
out
push
pusha
fldln2
jne
stos
int
push
pop
lea
loope
sti
and
cld
loope
push
aaa
or
lret
rcl
add
mov
fidivrs
sub
stos
and
test
jbe
fnstenv
inc
mov
adc
inc
in
sub
ret
pushf
roll
and
lea
bound
test
push
enter
je
push
xor
xchg
inc
pop
loope
fisubrs
dec
inc
mov
inc
jno
push
testl
push
mov
ret
fimull
xorb
arpl
inc
cmp
sarl
adc
jmp
push
fldenv
mov
ja
add
add
mov
add
mov
call
sub
adc
add
lahf
jnp
jnp
fincstp
pusha
sub
js
cmpsb
vpshuflw
js
lods
mov
out
xor
mov
inc
imul
inc
adc
adc
adc
aad
push
subl
adc
add
std
insl
inc
cmp
sbb
aad
aaa
std
adc
push
mov
into
pop
or
cmp
subb
jle
sbb
sub
es
pop
adc
sti
dec
aam
out
das
xor
ret
inc
mov
xchg
ret
cmp
fcoml
cmp
adc
fcomp
or
scas
fsubrl
subl
les
mov
icebp
xchg
inc
popf
js
xchg
xchg
xor
jmp
and
and
lock
imul
mov
pop
fwait
movhlps
push
test
cmpb
or
js
cmpsb
out
lcall
pop
add
js
fiaddl
mov
subb
push
insl
mov
cli
mov
shlb
mov
jp
or
outsb
cmpsl
cld
aas
mov
cmp
out
pop
mov
mov
test
loope
mov
add
jg
cmp
addb
rcl
and
push
add
cs
push
inc
add
push
test
mov
xor
pop
dec
imul
push
or
xor
xchg
ret
stos
or
popa
pop
shll
cmp
ficomps
add
cmpsl
rcrb
repz
add
adcl
cmpsb
cmp
push
push
xchg
icebp
and
pop
lahf
or
xor
aas
mov
adc
fisttpl
addl
xchg
xchg
pop
rorb
cmp
xchg
mov
push
jns
and
sub
jl
shrl
sub
push
mov
imul
sbb
jle
sahf
repz
inc
les
mov
jmp
jg
inc
lret
notl
les
mov
or
pop
push
pushf
repnz
dec
or
or
push
adc
in
enter
and
mov
adc
mov
gs
sub
inc
imul
lret
sub
jo
fidivs
sti
loope
cmp
sbb
pop
clc
test
push
js
sub
dec
lret
movsb
aad
dec
jge
pop
orb
and
sarb
dec
imul
xchg
adc
cmp
xor
push
xchg
aaa
add
pop
fnsave
setno
jae
aad
mov
adc
jae
add
stc
lcall
ret
xchg
mov
mov
sahf
loope
sti
cltd
out
xchg
sbb
mov
cltd
mov
dec
lea
outsl
es
not
mov
fildl
aas
das
sarb
and
arpl
or
int
cmovp
mov
cmp
test
xor
andl
sti
lahf
add
loop
cmp
and
sub
fld
mov
inc
inc
or
outsl
and
jns
or
mov
fsubrs
ficomps
and
xor
inc
or
pop
jae
aaa
cmp
xchg
jmp
cld
xor
imul
xchg
clc
xchg
jnp
inc
and
sub
xor
xchg
dec
push
mov
out
pop
mov
push
cmc
pop
dec
pop
and
push
jmp
out
js
test
inc
lcall
pop
stc
cmp
sub
add
sbb
mov
mov
dec
cmc
dec
gs
jbe
jmp
add
xor
pop
dec
sti
or
xchg
jne
mov
lods
xchg
add
mov
xor
shrl
and
inc
mov
dec
push
cs
xchg
imul
cmp
dec
scas
cmpsb
not
mov
loop
fnstsw
xchg
aaa
or
mov
rcrl
popf
mov
ja
fsubl
int
rcrb
xorb
aas
dec
jae
xor
imul
mov
insb
add
cmp
xchg
cmpb
xor
sarb
jnp
mov
push
sub
push
cmp
jne
xor
sbb
js
push
and
cmp
sti
dec
mov
adc
mov
cmp
xor
stos
fdivr
loop
ret
vmwrite
lahf
fwait
jl
mov
lods
sahf
xor
xchg
lea
add
cmp
push
sbb
in
nop
daa
movsb
mov
mov
outsl
push
add
test
les
mov
inc
cmp
cmp
jmp
sbb
jmp
jg
sub
and
scas
dec
idivl
fidivs
data16
faddl
incl
jae
sub
mov
lret
dec
or
sti
sbb
pushl
loope
mov
pop
pop
xor
dec
fcmovb
mov
push
xchg
dec
ds
scas
mov
add
add
lahf
jmp
adc
stos
sub
mulb
mov
mov
imul
je
mov
shrl
dec
and
in
sbb
and
mov
lock
lea
push
aas
ss
in
je
aaa
sub
movsb
jl
xor
mov
jge
lahf
xor
jno
push
adc
jg
cmp
in
sbb
leave
in
loope
les
cs
pop
dec
mov
mov
mov
xchg
dec
ljmp
pop
movsl
add
pop
jne
and
data16
enter
sbb
movsl
mov
int
jne
jp
cmpl
push
gs
pop
mov
fmuls
outsb
add
fstpt
inc
cmpb
lret
lahf
in
xchg
dec
xchg
mov
sbb
and
jp
lcall
outsb
xchg
fisubl
imul
pop
outsb
int
nop
mov
xor
pop
aas
cmpsl
data16
aad
scas
fs
mov
push
sub
mov
mov
mov
mov
xlat
andl
jmp
mov
scas
fwait
sub
bound
pinsrw
scas
popa
cltd
aad
popa
ljmp
cmp
jecxz
scas
popf
mov
out
sub
or
arpl
inc
insl
scas
sahf
and
inc
es
push
fsubl
xchg
jmp
push
or
sub
pushf
jb
nop
ret
inc
cwtl
jne
jp
mov
xlat
push
sub
out
jo
andb
sarb
bound
push
icebp
push
out
shrl
popa
cltd
imul
cmp
out
bound
stos
ja
pop
pop
aam
xchg
mov
mov
fsubrp
in
mov
adc
ret
sub
decl
and
dec
movsl
jp
or
dec
in
mov
jae
aas
add
test
xor
cld
push
nop
xor
and
mov
sbb
adc
inc
hlt
cmpsb
dec
sarl
icebp
mov
pop
ret
sbb
cmp
pop
imul
cld
mov
ret
pop
mov
out
pop
dec
leave
sahf
mov
xchg
out
mov
decl
cmp
xchg
andl
and
das
inc
and
pop
rcll
imul
sbb
mov
adc
push
repz
ljmp
iret
mov
dec
push
cmp
jns
es
sarl
inc
popl
push
in
je
mov
mov
cwtl
imul
jns
add
mov
xchg
add
xchg
lcall
add
sub
mov
lret
imul
or
dec
jmp
xchg
and
jns
sbb
repnz
cmovno
clc
and
adc
nop
js
mov
imul
mov
jne
iret
xor
rol
mov
out
inc
orb
dec
insb
into
jnp
clc
mov
jo
adc
xorb
inc
movb
cmp
add
loope
push
in
aaa
jle
mov
mov
xor
out
scas
ljmp
pusha
loope
sbb
jmp
pop
jmp
cmp
ret
jmp
int3
in
xchg
ds
xlat
and
lret
mov
cs
pop
or
dec
jae
mov
jo
adc
stos
jl
cwtl
dec
in
mov
je
xchg
cmpsl
in
pop
jp
in
pop
rol
pop
clc
sub
cld
push
pop
dec
mov
insl
dec
mov
mov
cld
mov
in
imul
clc
subb
xchg
pop
sub
int
or
jp
xchg
dec
hlt
arpl
pushf
fistpll
je
pop
int3
dec
loopne
aaa
mov
int3
mov
les
jo
out
mov
push
cmp
inc
std
xor
xchg
jo
xor
addr16
das
mov
ret
dec
xchg
add
mov
sub
daa
inc
pop
jns
lods
pop
fndisi(8087
jle
cmpsl
dec
fdivs
and
sub
adc
popa
rol
in
mov
xor
xchg
mov
jp
lahf
xorl
adc
sub
sar
mov
add
push
pop
cld
dec
outsb
xchg
jecxz
add
xor
cmp
mov
mov
mov
push
and
xchg
lahf
or
cmp
add
add
fucom
imul
fimuls
in
repz
loope
lea
mov
iret
lods
ds
insl
popa
sbb
xor
sub
cmpsb
mov
xchg
rcl
push
popa
aad
addr16
je
lcall
pushf
pusha
add
icebp
movb
fld
or
sarl
stos
mov
cmp
mov
or
std
stos
mov
mov
imul
inc
push
pop
mov
mov
add
dec
gs
and
imul
xor
cwtl
mov
ja
sar
dec
loope
clc
test
cmp
daa
or
add
mov
aad
outsb
loope
ja
sbb
and
and
inc
dec
mov
arpl
ja
inc
push
es
inc
pop
stos
in
cmc
sub
lods
lods
jae
xlat
jbe
mov
cmp
outsl
nop
push
push
xor
js
mov
sbb
push
push
pop
mov
lret
sub
mov
xchg
stos
cmp
push
fwait
pushf
xor
mov
repz
shl
mov
mov
data16
add
dec
pop
push
inc
pop
adc
adc
daa
sub
fcmove
je
lahf
xchg
cmpsb
fstpl
mov
iret
jno
movsb
je
adcb
fstps
mov
lods
popa
cltd
rcrb
mov
movsl
xor
int
inc
xorl
and
cmovs
xor
flds
shll
xor
daa
pushf
lcall
gs
insb
in
in
shr
xor
sbb
dec
cmp
or
aas
out
jge
fnsave
mov
mov
aas
jge
xor
andb
bound
and
fsubr
sub
cmp
sub
fstps
repnz
or
jnp
dec
mov
dec
js
and
roll
fsubs
jnp
sub
dec
outsb
leave
cltd
mov
add
and
fwait
mov
sub
push
pop
add
push
mov
xchg
add
jge
push
out
mov
cmpsb
sub
jecxz
cld
into
dec
scas
lcall
loopne
mov
stos
push
or
outsb
jno
push
repnz
mov
mov
lcall
xor
add
sub
xor
mov
cmp
xchg
push
sbb
add
aaa
add
imul
idiv
orl
xor
lds
ja
inc
or
adc
rcrb
dec
mov
mov
in
cli
adc
rclb
mov
sbb
push
mov
xor
pop
or
mov
inc
pop
leave
or
fdivr
ss
mov
lcall
push
inc
scas
xor
adc
sub
insb
outsb
stos
adc
adc
int3
cmp
fmul
jp
xor
pop
push
pop
push
mov
pop
xor
stc
test
jge
arpl
out
movsl
add
lahf
stos
jmp
xchg
adc
add
push
inc
scas
lods
fisttps
out
xchg
adc
test
pop
sbb
jo
mov
out
push
testl
fdiv
imul
xor
ja
xor
sbb
popa
xor
sbb
mov
sarl
xchg
jecxz
mov
sbb
mov
mov
cmp
xchg
lret
mov
sbb
xor
adcl
inc
mov
mov
xchg
test
mov
roll
decl
push
mov
mov
adc
add
hlt
gs
sbb
mov
jne
mov
stc
sub
jo
lods
outsl
rorl
cmc
pop
and
pop
div
inc
ljmp
mov
xchg
out
scas
fs
xchg
stc
in
and
shrl
push
and
sbb
fstl
add
arpl
sbb
or
or
dec
mov
cmp
jp
out
mov
jne
pushf
cmp
ljmp
fldl
sub
mov
iret
xor
movsb
pop
cmp
rcl
test
int
push
in
cmp
and
orb
push
insl
bndldx
inc
std
dec
adc
shrl
leave
xchg
insl
pop
movl
push
lds
xor
push
mov
sarl
inc
hlt
push
push
fcomps
insb
dec
faddl
pop
fbstp
sbbl
out
adc
jne
xchg
mov
jo
jge
repz
add
xor
xchg
cmp
inc
notb
es
sub
mov
pop
fs
bndstx
and
mov
movsb
and
loop
sbb
daa
xchg
sub
mov
icebp
insl
ss
add
dec
sbb
sub
and
and
imul
out
mov
inc
inc
cmp
inc
mov
cmp
lret
ret
shlb
enter
loope
or
dec
das
and
stos
in
xor
or
ret
scas
pop
fmulp
xchg
xchg
and
and
ret
pop
adc
sub
cmp
mov
outsl
insb
loop
insl
mov
push
cmpsb
sbb
icebp
das
xchg
adc
inc
xchg
cmp
cld
xchg
add
mov
int3
pusha
add
es
lahf
mov
fbld
test
or
in
or
in
insl
mov
sub
sbb
sub
lea
je
test
mov
dec
sub
into
pop
sbb
pop
inc
inc
roll
cmc
xor
out
mov
aad
bound
mov
cmpsb
mov
scas
adc
out
add
sbb
pop
dec
or
enter
adcl
sub
insb
leave
jmp
xor
loope
sub
movsb
popl
jg
pushl
and
dec
das
fwait
push
lcall
pop
jg
dec
push
lods
xor
cli
push
fs
add
push
bound
push
xchg
or
rcr
loopne
dec
push
cltd
std
sub
loop
lock
jp
test
sub
sub
xlat
and
inc
pushf
mov
mov
fwait
or
jp
fldt
sti
or
imul
int3
cs
mov
adc
and
add
lods
js
fdivrs
test
int3
adc
call
enter
insb
lock
daa
xchg
aaa
rolb
pop
fs
cmp
subl
xchg
cmp
sub
jl
pop
add
mov
sbb
mov
insl
mov
cmpsl
jnp
fwait
add
sbb
loopne
out
stos
inc
enter
lahf
shrb
xchg
cmp
scas
add
xor
pop
jns
cmc
or
imul
in
sbb
testl
mov
daa
test
cmp
pop
cmc
scas
ret
xor
jbe
hlt
movsb
outsl
js
cmp
cmc
movsb
pushf
inc
insb
shl
cmp
mov
test
out
and
shlb
push
and
fcmovbe
mov
imul
add
test
or
add
ljmp
jo
movsl
orb
test
xchg
popa
push
or
sub
jp
push
fldt
push
mov
ret
or
sub
xchg
sbb
movsl
clc
sub
mov
jmp
dec
mov
cld
rclb
push
dec
cwtl
fnsetpm(287
js
sub
fwait
push
adc
sarl
mov
pop
lods
js
mov
or
dec
repz
pop
movsl
cmp
push
push
sub
addl
data16
arpl
stos
fdivl
xor
sbb
mov
xor
add
dec
cmp
rcrl
cwtl
adc
add
xchg
sbb
and
pop
sub
loop
aas
lock
pusha
inc
pop
cmp
jp
je
cmc
pop
pop
mov
stc
js
repnz
lds
xor
and
jmp
je
pop
jnp
lock
mov
cs
mov
and
cmp
adc
mov
mov
cmpsl
jge,pt
sbb
xor
xchg
xchg
dec
nop
and
cmp
mov
sarb
cmp
enter
outsl
add
xor
pop
mov
out
mov
addr16
leave
xchg
and
sbb
dec
push
sbb
adc
ficomps
cmc
lods
dec
sysexit
pop
cs
inc
jg
shlb
sbb
into
data16
jp
jns
push
cmp
mov
fmulp
outsl
test
dec
cmpsl
fwait
sub
aam
add
hlt
push
push
xor
dec
test
xlat
insb
pop
push
fdivrp
sub
insl
xor
inc
shll
sbb
dec
mov
into
jnp
imull
and
add
enter
inc
jmp
repnz
loope
mov
popf
dec
imul
idiv
or
lret
inc
pusha
popf
fmull
pop
lea
clc
pop
je
mov
test
jbe
cmpl
mov
cmp
lcall
shll
popf
inc
scas
sbb
add
dec
mov
xor
mov
mov
icebp
cs
inc
pop
jmp
xchg
pop
outsl
clc
mov
xchg
dec
sbb
loop
mov
or
inc
pop
xor
jecxz
aaa
jns
push
dec
lods
jo
mov
mov
mov
xchg
insl
xchg
mov
in
fadds
mov
xor
shlb
lahf
lods
in
fdivrl
adc
push
xchg
jge
imul
inc
pop
push
xchg
decl
dec
cmp
jle
inc
mov
jl
or
test
cmp
cmc
arpl
dec
das
or
stos
cmpsl
sarb
test
adc
lock
lahf
pop
imul
call
cwtl
jbe
popa
add
adc
dec
out
pop
push
dec
jp
xchg
mov
popa
xor
push
push
pop
pop
jecxz
fsubrs
and
lcall
xchg
stc
js
mov
clc
and
outsl
cld
jecxz
pop
out
inc
dec
les
clc
inc
test
dec
mov
inc
adc
cs
lods
xchg
mov
cwtl
inc
jne
loope
jb
adc
or
lret
mov
push
xchg
paddusb
clc
stos
pop
fdivrs
mov
mov
ja
lret
sub
rol
push
in
jge
iret
push
dec
aas
inc
xchg
xchg
fistps
sbbl
mov
jae
or
push
xor
test
lock
movsb
inc
mov
add
mov
cs
mov
jo
cmp
jne
jge
pop
cld
inc
cli
lahf
cmp
inc
stos
push
loop
dec
int
dec
cmp
inc
ficoml
cmp
xor
cld
adc
mov
loope
mov
nop
sahf
or
cmp
out
ljmp
enter
pop
outsb
xchg
inc
out
aam
jb
out
sub
push
cwtl
fcomip
sbb
fstsw
push
stc
cmp
lret
adc
cmpl
sub
sti
ret
dec
pop
or
lret
mov
stos
mov
int
pop
jns
cmp
movsb
sub
cmp
movsb
mov
idiv
into
repz
cmp
push
jbe
cmp
push
push
dec
and
push
insb
cs
mov
loop
sub
movsl
loope
inc
rcrl
les
lods
shrl
mov
in
lods
sbb
lret
ret
sahf
stc
push
jns
jmp
lahf
or
xor
lret
cmp
mov
loop
test
cmp
xor
pop
jno
xchg
jl
dec
or
mov
nop
or
push
jmp
mov
sub
xor
push
aad
mov
add
hlt
mov
cmp
fadds
iret
inc
pop
sbb
xlat
daa
fwait
cmp
cmp
jmp
cmc
movsw
cltd
mov
std
pop
adc
adc
dec
in
xchg
adc
mov
or
pop
dec
dec
push
incl
sub
pop
sub
xchg
xchg
dec
pop
pop
pop
int
cmp
fcom
ja
in
movl
xchg
inc
pop
pop
add
push
iret
lret
dec
aas
ret
divl
outsb
cmp
movsb
dec
cmp
mov
in
add
mov
inc
xor
mov
sbb
ret
mov
movsl
rol
push
dec
sbb
pop
cli
lcall
nop
and
lock
adc
push
mov
fdivrl
lcall
xor
cmp
aas
pop
jae
into
das
mov
inc
dec
jle
test
sub
sahf
stc
lea
out
push
out
push
add
out
jl
in
std
xor
arpl
pop
jle
fdivs
cmp
or
inc
push
sarb
outsb
fldl
outsb
cli
call
popf
popa
out
add
and
sub
sbb
xchg
std
icebp
mov
mov
xchg
push
cmp
imul
and
inc
adc
cmp
es
push
leave
sub
stos
pop
int
roll
mov
imul
mov
and
inc
ret
or
cmp
pop
outsb
arpl
insl
mov
or
outsb
data16
mov
sbb
xlat
xchg
fdiv
and
test
sub
and
test
pop
outsl
cmp
aas
mov
stos
mov
inc
xor
cli
loopne
sbb
jle
push
daa
les
jle
mov
inc
iret
cmp
nop
or
lds
data16
mov
pop
clc
outsb
ret
inc
jg
aas
mov
ja
lods
xlat
hlt
xchg
div
jb
jg
mov
movsl
js
leave
ljmp
mov
fisubrl
repnz
mov
insl
rclb
sti
flds
push
lahf
ret
leave
lahf
int3
pushf
test
dec
daa
lcall
pop
fs
jecxz
jnp
pushf
or
in
daa
add
out
fistpl
dec
imul
loope
insl
mov
test
pcmpeqd
das
or
or
loop
or
je
jecxz
add
out
and
or
sbb
cmp
sub
je
xlat
out
scas
iret
movsl
ret
cld
jne
or
mov
imul
jmp
or
jae
mov
or
mov
mov
ja
and
adc
jae
sub
adc
das
lds
inc
stc
xchg
push
xor
push
outsl
mov
out
xchg
repnz
mov
add
nop
mov
jbe
jmp
or
jno
subl
in
push
mull
and
mov
cmp
xlat
xor
mov
push
push
test
cmpsl
lea
inc
push
fidivs
test
imul
ds
loopne
sub
and
dec
popf
into
jmp
pop
aad
cmp
xor
add
adc
out
insb
rorb
int
xchg
lret
fs
shr
out
inc
bound
xor
or
mov
or
loope
mov
pop
popf
mov
jne
inc
bound
lahf
inc
sbb
and
xchg
sub
xchg
dec
fiadds
xchg
push
std
mov
jbe
jg
mov
arpl
dec
jmp
jg
adc
hlt
rolb
leave
lods
repz
push
jmp
push
mov
andl
pop
jno
xchg
xor
fdivs
pop
cmp
inc
pop
xor
mov
movsb
sahf
inc
into
inc
and
pop
xchg
sarl
mov
push
jg
ljmp
sahf
jbe
mov
testb
mov
es
inc
out
lcall
ffreep
mov
out
sbb
xlat
mov
xchg
aaa
cld
faddl
aam
in
pop
inc
xchg
enter
loop
fistpl
xor
mov
lcall
out
pushf
xor
mov
fldl
bound
jl
fisubl
jbe
cmc
scas
sub
fildl
sbb
pop
sahf
stos
jmp
sarl
add
push
mov
incb
ret
hlt
imul
lret
into
mov
nop
cmp
sub
setge
clc
sbb
mov
mov
fs
mov
inc
mov
adc
cmpsl
lods
mov
lock
stos
stos
roll
sbb
movsb
ficoms
push
or
and
xor
hlt
je
daa
inc
in
xor
mov
ds
mov
orb
mov
mov
or
in
push
in
in
dec
test
xchg
and
add
push
xor
pusha
int3
sub
divl
repz
rcrl
shrb
mov
iret
imul
xchg
pop
sub
das
cli
sub
xchg
add
fs
jnp
push
jno
xor
mov
cs
add
rorb
push
or
test
lahf
xchg
adc
push
add
dec
mov
xchg
aam
cli
fiaddl
adc
in
scas
push
filds
inc
repz
outsl
loope
test
cmpsl
insb
movsl
sub
mov
mov
sbb
popf
jl
aam
shrl
push
mov
push
pop
shlb
adc
sbb
scas
jge
adcl
xor
ljmp
lock
lds
shrl
ficompl
test
testb
imul
adc
mov
push
xchg
shlb
cmpl
shll
and
clc
pop
nop
xchg
bound
cmp
cmc
add
xchg
int3
stos
inc
dec
insb
cmp
stos
leave
enter
stos
xlat
push
dec
sbb
sbb
push
inc
icebp
cs
mov
in
test
push
jo
pop
mov
ljmp
xchg
loop
jb
push
pop
cmpsl
pop
mov
mov
fsubl
dec
jns
inc
pop
out
add
and
pop
rcrb
rorl
movsb
cmp
push
push
icebp
test
or
out
leave
popf
in
sbb
aad
cmp
lock
aaa
mov
aad
out
in
xchg
jp
push
sub
xchg
iret
fbld
fsubrl
arpl
scas
jl
add
mov
push
cmp
nop
subb
outsb
stc
push
pop
xor
call
dec
into
je
jmp
xor
mov
dec
jp
sahf
out
aas
mov
or
add
push
xchg
pushf
adc
in
lcall
xchg
leave
inc
fs
movsb
int3
mov
xor
mov
and
dec
jmp
sbb
pop
xchg
jbe
mov
xor
insl
sbb
push
sbb
dec
dec
out
daa
lret
sahf
pop
rcrl
dec
xor
fs
jns
sub
aam
cmp
cmc
add
push
pop
out
xchg
cmp
pusha
test
dec
push
dec
adc
ss
sti
jmp
inc
and
dec
scas
sbb
ds
xchg
repz
imul
pop
add
add
add
cwtl
lods
in
mov
sbb
mov
fstps
sbbb
xchg
repz
jno
mov
cmp
and
mov
popl
add
leave
in
xchg
mov
and
pushf
ds
outsb
loope
gs
xchg
pop
cmp
xchg
add
or
loope
ljmp
lahf
sahf
arpl
testb
pop
nop
pop
in
or
sub
faddl
outsb
dec
incl
fcompl
jo
inc
mov
lock
pusha
stc
addl
and
mov
int3
mov
mov
mov
mov
ljmp
ss
push
ja
imul
and
xor
dec
push
sbb
lea
clc
insl
dec
push
call
ja
add
daa
das
jg
jns
lea
fwait
les
pop
fcmovnu
into
jns
js
mov
aas
jnp
cmp
neg
pop
xor
add
cmpsl
mov
mov
test
sub
lds
mov
adc
inc
int
push
pop
cmpsb
pop
call
jnp
rclb
stos
pop
cs
aaa
add
movsl
in
push
outsb
pop
jmp
push
push
dec
sub
leave
mov
insl
inc
mul
cmp
jo
add
insl
test
into
into
xor
sti
xchg
dec
testl
fmuls
int3
push
adc
push
mov
movsl
insl
cs
rolb
cmp
iret
push
pushf
add
insl
mov
cli
aam
sub
dec
lret
xchg
out
cmp
fidivl
repz
pushf
adc
push
xor
xchg
xor
enter
xor
mov
mov
adc
mov
inc
js
sbb
fidivrl
aad
mov
cli
mov
movsl
dec
inc
outsb
push
inc
inc
sub
roll
cli
shll
lock
cld
jno
les
cmpsb
mov
lret
fnstenv
cmp
xor
repnz
mov
cmpsb
shlb
pop
push
cmp
mov
cmpsl
nop
ljmp
jb
je
mov
addr16
xchg
pop
push
ret
jnp
mov
jge
fimuls
sbb
loop,pt
ss
xor
imul
cwtl
mov
lcall
sbb
jno
adc
xor
dec
fnstsw
movsb
insl
pop
jns
pop
jg
movsl
xchg
cmpsl
cld
push
rdpmc
je
sbb
sbb
dec
push
pop
xchg
xor
sbb
push
cmp
add
sub
push
mov
popf
xchg
es
push
mov
pusha
dec
or
jecxz
ret
cmpb
mov
fildl
int
jg
jle
push
jae
mov
pop
or
mov
xchg
scas
outsl
insb
xor
push
mov
fsubl
xorb
mov
xor
hlt
lret
stos
out
test
popf
int
jb
mov
adc
or
sub
into
pop
inc
dec
or
and
mov
or
in
pop
and
cwtl
mov
jnp
lock
lods
adc
ljmp
popf
adc
orb
pushf
sub
imul
ror
inc
mov
fwait
incb
xchg
aas
stc
stos
in
sbb
mov
ror
cli
sub
pop
dec
out
sarl
adc
icebp
xor
fcomps
pop
outsl
xchg
idivl
pop
jmp
mov
int3
mov
imul
lea
push
add
cmp
jp
out
jne
cwtl
xchg
jge
aas
xchg
subb
test
cmp
jle
aad
dec
xchg
mov
popl
push
xor
mov
mov
mov
or
xor
sub
ret
ljmp
jecxz
shlb
dec
sahf
jmp
hlt
jb
mov
dec
sub
xchg
pop
ret
popa
stos
pop
out
insb
xchg
rclb
mov
sbb
mov
aaa
inc
insb
fsubrs
mov
mov
mov
addr16
mov
jl
adcb
sti
adc
jmp
adc
jne
es
arpl
ds
xrelease
ja
je
in
mov
leave
pop
je
jns
enter
dec
sub
mov
push
je
mov
xchg
hlt
push
and
ja
es
icebp
stos
pop
fisubrs
nop
mov
je
ja
in
push
lds
jb
mov
fwait
fwait
pop
cmp
cmpsl
ljmp
xor
cmp
mov
stos
in
aas
loop
mov
add
mov
or
stc
sti
cwtl
in
lock
xchg
test
mov
repnz
and
mov
js
out
dec
push
cmp
xchg
and
mov
sahf
inc
das
test
sub
into
loope
mov
xchg
cmpsl
mov
shlb
mov
xchg
in
enter
mov
mov
popf
daa
cmp
push
adc
pop
and
in
inc
fiadds
leave
fsubrl
into
xor
mov
xor
adcb
add
sahf
pop
cmp
fiadds
fwait
jo
aaa
pop
cmpsl
clc
out
xchg
mov
push
data16
cwtl
adc
push
mov
mov
mov
adc
mov
jae
mov
mov
or
push
in
fisubs
sbb
sub
cmpsl
inc
jae
ljmp
or
aas
xchg
or
mov
ret
lods
adc
std
stos
ja
stc
dec
repnz
and
out
sub
stc
push
mov
adc
jns
sub
mov
out
leave
push
pop
leave
out
push
sub
scas
jo
fwait
out
push
jb
subl
ds
imul
icebp
sbb
fistpl
fbld
mov
call
push
mov
dec
sub
jle
roll
out
push
or
push
jle
inc
jns
mov
sub
jp
jp
lods
inc
push
repz
arpl
aaa
loopne
sbb
cmc
mov
pop
xor
pop
out
inc
aaa
adcl
cmc
ja
mov
cmp
imul
jmp
sbb
sbb
test
cmp
push
les
jecxz
and
ret
sarb
inc
in
fs
in
outsl
push
mov
fwait
push
popa
or
sbb
mov
stos
fstpt
das
fdivl
cmpsl
outsb
pusha
div
out
jecxz
das
ret
into
jge
and
pop
ljmp
lcall
shll
rcl
test
adc
cmpb
popa
scas
adc
xchg
xor
xor
xor
leave
fidivrl
jle
jp
mov
add
adc
cwtl
push
mov
or
sbb
pop
xchg
xchg
xchg
rcrb
ljmp
lock
xor
movsb
xor
jg
nop
bound
inc
mov
inc
mov
mov
push
adc
movsl
dec
add
sub
or
inc
xchg
cmp
pop
pop
lds
jnp
mov
dec
jl
or
lret
or
out
or
push
mov
out
xor
lea
lds
cmp
pop
bound
out
mov
int
or
addr16
gs
fistl
or
outsl
in
jae
jmp
xor
es
dec
jg
std
movb
mov
jae
add
mov
jp
pop
lret
sub
mov
and
lahf
cmp
mov
es
mov
pop
decl
pop
push
pop
inc
dec
aad
jp
test
xchg
int3
imulb
popf
and
in
jle
push
inc
xor
jne
adc
mov
sub
pushf
out
sbb
sahf
jge
test
loopne
cmp
fwait
inc
int3
sti
pop
push
jecxz,pn
xchg
aad
sbb
lods
jae
andl
sbb
jae
inc
mov
xchg
push
xor
inc
add
lods
repnz
inc
outsb
mov
add
lds
push
aas
scas
inc
cmpsb
std
js
mov
jns
loope
fbld
pop
ljmp
xchg
xchg
jbe
inc
dec
lret
lcall
sbb
rcr
mov
shll
xchg
adc
pop
jecxz
mull
loopne
repz
mov
fstpt
sbb
pop
xchg
xchg
jecxz
jmp
jo
pop
jmp
mov
push
inc
or
adc
call
xlat
cmp
dec
adc
cmpsl
dec
push
bound
xchg
rcll
pop
mov
xor
notb
arpl
pop
ja
dec
xchg
sub
addb
mov
cmp
pop
jns
inc
out
xchg
mov
xchg
dec
mov
sbb
cwtl
shll
jno
pop
adc
in
inc
aas
iret
xor
mov
pop
mov
aad
leave
jo
in
sub
inc
adc
inc
popf
pop
mov
mov
je
dec
xchg
cli
mov
test
int3
jmp
loopne
or
repnz
xor
shlb
data16
add
lods
fistl
nop
dec
rcrb
sub
jl
push
lahf
call
mov
sub
pop
adcl
cmp
push
leave
or
imul
or
adc
andb
sbb
lcall
pop
cmp
ret
dec
incb
inc
mov
int3
and
cmp
mov
jns
mov
scas
sarb
fwait
inc
inc
mov
jne
mov
cmp
push
or
movsl
imul
dec
add
push
das
ret
jmp
dec
dec
popf
sub
xchg
mov
js
cmpsb
xorb
adc
fstl
in
pushf
sub
cltd
push
in
mov
or
adc
push
imul
lea
out
mov
ds
xor
fmuls
cmp
add
ror
icebp
pusha
add
movsb
adc
ret
sbb
add
sarl
bound
cmpsb
mov
mov
rorl
lahf
stc
lea
cwtl
repnz
pop
leave
xchg
add
call
cwtl
ds
cmpb
int
stc
daa
orl
xchg
cmp
xchg
fmul
inc
pop
jmp
out
pop
clc
cli
cmpl
xchg
jae
mov
xor
pop
ret
cmpsl
pop
fldl
stos
fwait
jl
ljmp
pop
xchg
std
mov
rclb
add
push
in
jmp
jmp
adc
push
lock
loop
dec
das
stos
xlat
lds
push
int3
test
fisubs
rorl
mov
ljmp
rol
push
sub
jo
inc
and
popa
xchg
pop
jne
movsl
test
sub
popf
jl
out
jg,pt
stos
test
pop
mov
dec
ficompl
divb
push
sbb
mov
test
or
mov
jmp
cmp
sub
scas
sahf
mov
cmp
xor
dec
stos
adc
mov
call
icebp
mov
stos
pop
dec
and
pop
mov
fldl2e
mov
clc
cld
pop
mov
jo
mov
rcl
pop
decb
jmp
clc
stc
jae
mov
add
int3
leave
jne
add
mov
fwait
and
mov
dec
in
push
std
push
xchg
out
popa
lret
in
lods
adc
popa
fldl
xchg
or
and
addr16
pop
or
lods
loopne
movsl
andl
xchg
mov
mov
test
dec
mov
out
imull
ret
ret
push
mov
popa
jb
and
add
inc
inc
cld
mov
insb
leave
pop
jg
xor
add
sub
mov
inc
movsb
mov
hlt
adc
add
fs
in
in
pop
xchg
jg
cwtl
lds
pop
or
in
or
sub
and
sub
mov
out
lea
mov
std
inc
adc
js
add
and
xchg
je
je
xchg
fists
dec
arpl
or
fwait
iret
sbb
cmp
lock
jg
mov
inc
mov
jno
xchg
push
js
aam
popf
mov
es
fs
adc
mov
out
dec
insl
xchg
mov
dec
sahf
mov
sub
add
rclb
mov
fs
sub
adc
rclb
or
sbb
lcall
out
sub
out
inc
mov
sbb
or
xchg
ret
dec
fildl
outsb
dec
adc
inc
cs
pop
fwait
xor
jle
mov
mov
andb
jle
xchg
pop
movsl
and
or
pushf
insl
xor
inc
cltd
addr16
aas
sbb
leave
and
mov
and
daa
test
les
adc
pop
xchg
pop
cmp
adc
and
call
fnstsw
mov
lock
fstps
or
lret
cmp
lea
mov
vmovq
in
add
sub
xor
push
clc
add
ds
arpl
std
sub
popf
fdiv
inc
jmp
hlt
cmc
and
jns
sarb
jnp
scas
inc
loope
inc
mov
je
xchg
xor
dec
and
test
movsb
push
or
pop
mov
xor
inc
ret
mov
mov
testl
lea
xchg
nop
movsl
sbb
dec
inc
add
and
dec
add
mov
pop
jmp
mov
or
int
daa
or
fcompl
adc
pop
mov
adc
adcb
out
in
jnp
dec
aas
ret
mov
pop
decb
cli
jle
push
out
mov
dec
pop
cmp
in
lods
add
cltd
clc
repnz
sti
sub
pop
shr
sbb
jne
leave
dec
xchg
push
or
ja
in
mov
test
mov
movsb
xchg
icebp
sbb
jae
aam
and
das
push
sahf
pusha
pushf
xor
aam
ja
sbbl
ds
enter
and
in
in
sbb
mov
jl
inc
cltd
sub
outsb
arpl
fidivrs
sbb
xlat
andnps
mov
repz
lret
xor
mul
dec
lcall
data16
and
fstpl
cmp
clc
outsl
insl
sbb
clc
pop
cmp
lret
fwait
ja
js
xor
mov
push
fsubrl
mov
je
je
and
inc
gs
lcall
dec
or
pop
jno
in
mov
mov
add
adc
outsl
subl
cmp
mov
andb
xchg
mov
leave
cmp
and
jb
call
addr16
icebp
lret
sahf
imul
je
push
push
ljmp
arpl
stos
or
and
jb
sbb
fs
add
scas
push
sub
xor
repnz
inc
inc
jg
cmp
lock
loope
pop
push
lret
out
filds
jae
loope
sbb
std
gs
ror
frstor
push
sub
pop
dec
data16
cltd
and
push
cltd
cmp
lahf
sbb
xchg
inc
ja
aad
mov
pop
ds
in
je
push
xlat
clc
imul
or
push
in
inc
push
mov
ds
add
sbb
je
mov
xor
jmp
repnz
push
call
jge
in
sbb
sti
xchg
or
iret
int
sti
xor
gs
adc
pop
scas
in
movsl
stos
adc
rol
jp
xchg
mov
daa
cmp
cmpsb
lods
and
and
jnp
pusha
out
jp
xor
mov
fwait
cmp
inc
sub
in
xchg
lret
pop
and
fstpt
push
sub
dec
inc
ja
push
sbbl
aad
dec
sbb
lret
inc
add
mov
scas
rcrb
pop
and
mov
cmpsb
outsb
lahf
outsl
mov
popf
or
enter
cli
cmpsb
loopne
scas
pusha
jae
stc
lret
cmpl
scas
inc
hlt
push
in
jne,pn
leave
dec
and
jmp
roll
test
inc
or
xchg
or
cwtl
push
push
mov
sub
inc
out
dec
mov
sub
bound
cmp
jle
negb
int3
add
dec
or
dec
mov
popf
mov
imulb
ja
scas
mov
mov
inc
push
xchg
sbb
insl
in
mov
xor
movsb
movsb
int3
mov
lcall
lret
insb
mov
adc
idivb
movsb
lcall
mov
dec
push
jae
mov
pop
add
sbb
out
lret
pop
push
pop
lock
xor
add
inc
arpl
or
repnz
pop
cmpsb
es
cmpsl
mov
inc
or
adc
cld
fsubr
mov
lock
pusha
jl
testl
xchg
adc
cmpsl
xchg
mov
xor
xchg
and
aaa
sub
insb
popf
add
pushf
mov
aaa
add
adc
and
push
rolb
dec
fstl
sub
or
cmp
aaa
cmc
jge
sub
test
adc
fadds
sbb
xchg
aaa
in
rorl
out
jns
mull
adc
push
loopne
jmp
sub
hlt
pop
clc
adc
xor
lods
dec
fs
arpl
call
imul
and
jmp
jmp
or
xor
je
rcll
adc
pusha
outsl
movsb
pusha
push
xchg
inc
cld
repz
mov
pop
mov
sub
addr16
filds
push
sahf
inc
cmpsl
jge
pop
mov
andl
lods
inc
pop
lcall
xor
and
mov
pop
dec
xchg
lock
jmp
and
pop
rcrl
push
xchg
addr16
repnz
outsl
ja
xchg
cmp
or
movsl
insl
push
fldcw
ffree
pop
lret
aam
into
dec
sbb
gs
add
iret
push
dec
ja
loopne
jb
lds
dec
fisubl
pop
mov
fisubs
iret
sub
cmp
imull
fisubrl
addr16
mov
sar
inc
jnp
jl
push
iret
aad
xchg
pop
mov
testb
ss
pop
push
lcall
frstor
adc
repnz
arpl
mov
aas
fcompl
add
mov
xchg
in
shlb
mov
sub
jnp
sbb
repz
cmp
femms
daa
sbb
push
jne
xchg
inc
jns
cwtl
mov
push
mov
add
and
jl
push
xchg
das
dec
push
jnp
repnz
js
scas
out
and
sbb
xbegin
das
mov
mov
mov
add
cmp
lcall
sbb
rorl
cld
outsl
xchg
outsl
outsb
jbe
mov
jecxz
mov
jecxz
pop
sbb
dec
outsl
and
mov
jmp
push
in
mov
push
sbb
cltd
clc
popa
loope
inc
out
icebp
cmp
int3
inc
add
inc
mov
lret
jmp
add
sti
fists
leave
hlt
cmp
movsl
xchg
aaa
rol
out
into
push
or
mov
jae
lahf
dec
dec
xchg
fdivl
xchg
adc
out
sub
cs
sbb
mov
inc
mov
jle
or
out
xor
dec
adc
jae
jle
mov
and
adc
mov
fildll
sti
ss
pop
inc
jmp
data16
mov
sub
jo
mov
rcll
idivb
and
jp
xor
cmp
into
add
dec
mov
xchg
imul
mov
push
das
testl
test
xchg
xor
cmp
or
jmp
sbb
mov
repz
pop
add
and
mov
sbb
aad
lcall
mov
stc
adcb
mov
call
xor
out
into
out
cltd
jb
or
test
mov
jg
subb
cs
dec
adc
push
jne
and
sbb
pop
test
adc
pop
lret
repnz
call
out
and
out
jns
mov
es
inc
enter
fxtract
push
lock
inc
cmp
outsb
jb
xchg
int3
int3
jb
in
int
sahf
adc
sbb
addl
inc
jmp
push
hlt
xchg
jmp
dec
icebp
push
outsl
or
mov
dec
mov
push
cmp
inc
adcl
adc
mov
pop
cltd
bound
sub
dec
mov
ds
imul
test
ljmp
push
outsb
adc
cmpsl
test
push
push
aad
addr16
and
xorl
jmp
sahf
xchg
xchg
iret
mov
pop
jl
jle
inc
out
jle
jb
sarl
xor
xor
mov
test
mov
jmp
mov
cmp
pushf
push
mov
lock
adcl
pop
scas
mov
mov
mov
inc
test
or
js
rorl
lds
pop
addr16
push
stc
jmp
in
ja
push
fstl
push
or
adc
lret
add
mov
sti
or
add
xchg
and
xchg
clc
push
jo
fldt
pop
mov
aad
cmp
mov
fmull
mov
pop
movsb
ds
mov
fisttpl
lods
mov
cld
mov
xor
mov
out
sub
add
mov
mov
ret
xchg
das
fwait
lods
xchg
ja
cmp
jne
push
sub
sbb
loope
emms
dec
bound
sbb
cmp
sub
flds
sahf
lods
iret
pop
cltd
sub
gs
lds
pop
xchg
xor
cmpsl
fldenv
lcall
add
xchg
je
xor
push
mov
lods
jmp
faddl
sahf
stc
add
jae
movsb
dec
mov
in
std
popf
mov
mov
inc
in
xchg
xchg
sub
das
bound
gs
shlb
xor
gs
adc
push
pop
lds
sahf
mov
in
sbb
pop
movsl
pop
push
hlt
sbb
in
sbb
popa
jb
mov
stos
jmp
and
mov
repnz
out
test
int
adc
sbb
sahf
push
dec
jae
loop
aad
lds
call
lods
lds
jecxz
jns
inc
jno
inc
int3
pop
mov
adc
sahf
xchg
lock
orb
pop
cmp
out
sub
nop
fcomi
cltd
popa
bnd
jmp
mov
cmp
sbb
jno
ja
and
imul
jp
daa
add
out
mov
push
leave
mov
js
jne
mov
jmp
mov
leave
out
clc
ret
jp
shrl
pusha
xchg
inc
cmp
int3
ja
pop
in
bnd
loop
fnsave
cld
imul
ret
fs
popa
sarb
adc
mov
adc
incl
shl
or
ficoml
jnp
cmc
lock
xchg
mov
push
int
mov
das
pop
xchg
jecxz
pop
gs
mov
ja
adc
inc
push
out
xor
or
cwtl
push
xchg
loope
add
cmpsl
cwtl
xchg
pop
cs
out
xor
imul
xchg
jbe
pusha
inc
insl
sahf
ja
sub
rolb
fcmovu
inc
inc
popf
vpaddq
xchg
clc
adc
outsb
xchg
loopne
mov
cmp
loop
mov
gs
and
std
rcrl
daa
js
jbe
into
sti
sub
outsl
rclb
adc
xor
mov
sub
iret
inc
loop
stc
inc
invd
push
jo
cmp
call
and
jp
dec
jmp
rclb
sbb
fldl
ja
mov
ja
or
or
aam
push
mov
daa
into
push
mov
leave
jae
ja
cmp
adc
mov
out
add
repz
adc
pop
data16
ljmp
push
dec
ja
sbb
pushf
je
fimuls
js
rcll
out
jl
sub
ds
pop
adc
xchg
pop
jae
cmp
stos
jb
clc
std
pop
negl
into
dec
fmull
jno
ret
insl
jle
jp
sbb
mov
xchg
test
mov
and
and
jl
inc
jp
repnz
adc
dec
fwait
insl
lcall
jns
fsubrl
test
push
dec
stc
pop
neg
push
icebp
rcl
mov
xor
pushf
lret
xchg
or
in
push
ret
out
pop
in
sub
xchg
mov
cs
lret
and
fimuls
rorb
mov
inc
daa
sub
ret
std
insb
movsl
sub
stc
xor
push
pushf
xchg
and
adc
push
xchg
mov
or
xor
loop
inc
gs
jnp
mov
insb
enter
aas
or
int3
adc
sub
push
mov
enter
mov
enter
or
in
mov
stc
xlat
pop
out
popa
inc
jp
push
popf
lods
dec
pop
in
xchg
or
sub
dec
ds
sbb
jns
xchg
mov
xchg
mov
imul
sub
push
rcrl
dec
jae
sahf
iret
orb
lods
ficompl
aas
mov
cltd
dec
lahf
jle
iret
sbb
inc
ret
insl
stc
jg
fimull
pop
adcb
jnp
repnz
lcall
inc
mov
aas
xchg
lea
mov
adcl
jg
xchg
fidivrs
push
pop
mov
test
outsl
fs
repnz
mov
ds
ljmp
or
push
or
push
lcall
test
pop
outsl
data16
jl
ljmp
pop
push
pop
or
int3
sbb
gs
mov
push
mov
adc
rclb
sub
sti
imull
inc
ljmp
mov
jge
or
mov
add
xchg
je
gs
popf
and
mov
mov
push
outsl
in
xor
stc
aad
inc
ror
and
jo
cmp
inc
sarl
mov
mov
pop
adc
sarb
cwtl
daa
int
mov
or
add
psubq
and
insl
cltd
pop
pop
rorb
jge
push
lods
push
aad
js
mov
fisttpl
cmp
xchg
pop
pop
xchg
jg
sub
lods
nop
insl
fistl
push
imul
sbb
out
mov
data16
mov
repnz
mov
and
pop
and
inc
popa
or
sbb
and
clc
push
or
add
mov
call
lods
fisubs
mov
xlat
xchg
xor
xor
jg
mov
and
xor
dec
sbb
js
push
xchg
mov
fiaddl
popf
jmp
jge,pt
xchg
mov
mov
sbb
cmp
push
xor
imul
sti
ljmp
arpl
lods
adc
add
popl
outsl
push
inc
fs
pop
testl
sbb
push
bound
xor
cmpsb
mulb
ja
push
cmp
loop
xor
xor
pop
cmpsb
adc
addr16
ret
push
packssdw
jmp
leave
movsb
mov
cmp
add
add
jns,pn
push
push
aam
and
xor
shl
mov
fimuls
cmp
sub
subl
aaa
or
daa
cli
xor
sbb
pop
jbe
cmc
inc
clc
out
aad
mov
cmpsl
inc
or
cmp
jp
out
xchg
jo
xchg
inc
test
outsb
test
sbb
mov
and
xchg
ror
in
mov
sbb
aas
jl
cld
mov
scas
jg
sub
adc
pop
dec
popa
pop
or
push
lea
pop
mov
mov
mov
push
sub
fnstsw
lods
lcall
fcomps
xchg
jae
push
data16
addr16
std
mov
fisttpll
daa
popa
mov
into
repnz
sbb
fs
cmpsb
xchg
and
xor
and
aas
loop
movsb
loop
fcmovb
push
les
pop
popf
or
fldcw
fildl
cltd
movsl
mov
mov
mov
lret
cli
adcb
jns
mov
or
pop
sbb
mov
sub
fadd
pop
adc
push
mov
in
push
inc
data16
testb
lret
mov
fwait
popl
in
call
mov
and
sub
add
gs
push
xorb
stos
sahf
jnp
lcall
iret
push
loopne
cmp
imul
and
movsl
inc
cmp
jmp
nop
dec
xchg
mov
fisubl
fldt
sbb
andb
inc
mov
scas
inc
pop
fldt
or
shrw
ja
mov
mov
frstpm(287
sub
rolb
xor
sti
sti
shl
dec
fdiv
rolb
mov
add
xchg
pop
mov
adc
inc
in
bound
push
sub
pop
cltd
jbe
cmp
loope
pop
push
data16
jl
or
test
mov
std
xchg
xchg
enter
push
repnz
sarb
cmp
pushf
push
nop
aam
cmp
dec
cmp
pop
flds
lds
aam
cmpsl
fnsave
jb
cmp
and
mov
and
jle
popa
mov
push
imul
int
pop
mov
ja
test
cs
mov
divl
stos
rorl
inc
inc
push
movsb
sbb
inc
fs
pop
xor
out
and
xchg
lods
das
push
sbb
push
add
fadds
dec
adc
daa
jb
xorb
xchg
outsb
sub
popa
lods
jns
xor
in
cltd
inc
push
mov
insl
mov
jle
in
idivl
pop
and
mov
sbb
faddl
pop
popf
sbb
ficoml
cmp
rcl
push
pop
scas
sahf
mov
inc
cmpsb
jecxz
out
arpl
push
sti
loop
jnp
adc
loopne
xchg
jo
or
xor
repnz
cmp
mov
mov
inc
pop
push
mov
aam
mov
adc
test
sti
lds
subb
enter
rolb
mov
imul
push
mov
dec
xor
popf
or
mov
or
enter
xchg
mov
daa
add
pushf
pop
enter
loop
push
pop
mov
pop
sbb
negl
mov
in
mov
push
mov
jbe
daa
mov
rclb
and
mov
or
mov
out
lret
fisttpll
lahf
arpl
inc
loop
adc
jle
mov
and
mov
xor
pextrw
push
clc
sbb
fs
push
or
mov
add
dec
out
xor
cmp
movsl
push
test
fs
fwait
call
int
or
call
add
scas
pop
loop
dec
pop
or
cmp
pop
dec
cwtl
vmovlpd
xchg
shlb
psadbw
mov
mov
call
or
add
lods
mov
sub
fwait
pushf
movsl
dec
imul
shrb
popl
add
lock
lahf
pop
cmc
jg
pop
jg
int3
mul
xchg
mov
cli
test
xchg
cmp
mov
add
cmpsl
dec
xchg
jg
mov
push
add
ret
mov
pushf
ss
in
mov
ja
push
mov
inc
testl
sub
jle
sub
sub
dec
sahf
loop
mov
add
ljmp
and
jb
imul
aad
fsubs
movsb
or
mov
test
adc
sbb
das
jecxz
movsb
fadd
push
jbe
add
jle
fnstenv
push
or
clc
add
mov
xchg
push
movsb
outsl
push
cmpl
gs
push
fucomip
hlt
xor
mov
insb
dec
xchg
sub
mov
test
xchg
aam
adc
sub
xor
lock
jmp
sti
pop
aad
xor
cmp
or
popa
cmp
adc
mov
push
adc
mov
cmp
call
push
into
fimuls
sbb
dec
jbe
fcoms
rcl
inc
out
mov
mov
adc
ret
sbb
aam
fiaddl
add
cmp
pop
sbb
or
push
cmp
sub
jbe
xor
cmp
sbb
cmpsb
test
jle
jmp
loopne
stc
imul
dec
insb
mov
je
enter
cmp
push
mov
jp
push
push
jl
imul
pop
fisttpl
mov
pop
push
insl
scas
cmp
aam
fcoml
jmp
sbb
rcl
mov
iret
cmp
out
stos
push
and
aas
xlat
push
stc
xchg
notl
xor
insl
mov
fdivrl
mov
push
sbb
out
sbb
mov
jns
in
aaa
ret
push
mov
xor
test
mov
jb
push
cmpb
cmp
push
cmp
push
fs
mov
or
in
jae
orb
add
stos
xor
pop
popa
adc
repnz
arpl
ljmp
inc
icebp
mov
xchg
test
and
in
shll
sti
xchg
dec
out
jb
imul
add
fsubrs
xchg
js
push
add
and
hlt
addr16
cwtl
mov
adc
cmpl
jmp
xor
pop
push
ror
scas
jo
fstpt
or
test
ss
xchg
inc
les
popa
mov
lahf
sub
pop
mov
outsb
fadd
jae
mov
push
xor
mov
sarb
push
aaa
ja
jnp
jo
sahf
ret
and
mov
mov
or
cmpsl
lahf
jb
ja
stos
pop
in
mov
fidivs
sbb
out
dec
sub
inc
mov
xor
je
aam
imul
nop
sahf
pop
mov
sbb
adc
pop
or
lods
rorb
ja
lea
and
aad
mov
rclb
dec
scas
lcall
fs
pop
hlt
xchg
adc
popf
inc
pop
pop
mov
jl
loope
push
add
push
cmp
ret
into
orb
pop
jne
pop
mov
xor
jge
dec
aaa
retw
sub
sub
loopne
cltd
jb
push
cli
lods
int3
test
pop
andl
mov
pop
imul
inc
mov
mov
jnp
cld
push
sbb
push
repnz
sub
movsb
pop
push
cmp
in
enter
arpl
pushf
or
push
mov
cltd
fs
and
pop
pop
xor
pop
insb
mov
inc
stos
push
hlt
movsb
and
movsb
mov
xchg
push
push
ljmp
push
push
std
ss
jmp
fstps
and
test
addr16
jae
jge
dec
jecxz
adc
das
mov
cmp
jp
jno
es
dec
jmp
or
sub
cmp
rorb
inc
es
and
lods
adc
scas
cmp
xor
dec
stos
xor
in
dec
clc
imul
pushf
add
add
lahf
dec
sbb
adc
adc
dec
fdivl
ds
add
negb
fdiv
outsl
push
addr16
mov
sub
in
and
imul
mov
test
pop
pop
ljmp
pusha
inc
ret
cltd
movsb
xchg
ljmp
es
and
mov
mov
movsb
adc
lcall
sbb
imul
outsl
xchg
cmp
mov
ret
int3
jo
pop
lds
lahf
jmp
ficompl
or
pop
adcl
stos
lcall
movsb
sub
jae
es
jl
mov
mov
sbb
add
cmpl
mov
outsl
jp
and
xor
cmp
pusha
push
mov
iret
mov
clc
push
xchg
and
or
popf
add
mov
div
sub
shlb
movsl
mov
loop
call
cmp
addl
mov
sub
js
add
sub
xor
sub
jmp
mov
loope
sbb
add
dec
test
leave
out
shll
fsubl
inc
mov
imul
cmp
mov
xor
icebp
xchg
inc
and
sti
sbb
mov
pop
xor
mov
inc
dec
push
outsl
dec
push
lds
mov
cmpsl
test
ret
lds
imul
fisubrs
pop
mul
nop
push
mov
lcall
mov
les
fsubrs
pop
sbb
jecxz
inc
mov
aam
fwait
jbe
mov
cwtl
enter
jmp
les
pop
xchg
js
ret
pop
lahf
pop
pushf
and
or
mov
mov
aaa
out
add
add
dec
sarl
iret
mov
out
add
lds
push
test
sbb
lret
fsubrs
xchg
loopne
fs
dec
add
jnp
subb
fdivs
cmp
mov
pop
out
or
lods
das
cld
mov
lods
imul
addr16
scas
adc
sub
xor
imul
push
mov
sub
cmp
mov
mov
cmp
cltd
adc
add
sbb
sbb
or
mov
in
rcrl
mov
lret
jmp
loope
out
pop
lods
aaa
shll
xchg
je
mov
hlt
xchg
pop
pop
js
push
mov
mov
xchg
in
insb
adcb
movsl
loopne
inc
andl
sbb
push
fdiv
in
imull
lods
jge
jne
test
jmp
xchg
fisttps
mov
dec
push
insl
push
sub
mov
xchg
ljmp
mov
arpl
insl
in
aas
jg
and
mov
inc
loopne
push
ds
dec
clc
pop
adc
sub
pop
decl
sarb
sbb
rorl
push
add
fs
call
inc
aam
inc
xchg
sub
and
lock
int3
sbbl
cmpsb
rclb
scas
std
or
ljmp
jb
stos
shll
js
lret
xchg
loopw
jne
mov
in
cld
push
add
in
sub
dec
jae
mov
pop
cmpsb
xor
enter
adc
clc
jg
into
lods
mov
test
out
xchg
push
clc
dec
adc
or
or
mov
and
mov
cmpb
insl
cmpb
aad
inc
push
inc
int3
pop
or
arpl
mull
incb
add
test
pop
xor
jno
ret
pop
ja
loope
pop
in
lods
std
outsb
shlb
mov
flds
pop
push
sbb
movsl
inc
jmp
into
sbb
int3
push
push
sub
int
out
aaa
xor
dec
pop
mov
push
push
arpl
test
mov
jnp
fwait
stc
xchg
sbb
daa
mov
mov
inc
jb
xor
mov
xor
outsb
lret
in
mov
out
push
jp
inc
sub
xchg
xchg
shrl
sti
popf
dec
outsb
mov
cmp
mov
jno
out
stc
cltd
fs
sbb
adc
xlat
push
xchg
daa
pop
push
inc
out
xchg
pop
stos
sbb
adc
sbb
add
lahf
xor
sbbl
imul
ret
cmp
pop
xchg
xchg
and
fucomip
mov
sbb
imul
fisubrs
jbe
xor
outsb
xorl
les
mov
dec
and
clc
adc
sub
xchg
das
fdivrp
idivb
out
dec
imul
jge
dec
pop
in
mov
add
cmpsl
scas
lods
sahf
hlt
daa
outsl
mov
adc
lahf
lods
aad
mov
lock
in
dec
xor
mov
cmp
add
inc
mov
hlt
or
cmp
out
test
movsb
or
mov
arpl
outsl
repnz
imul
push
xchg
cmpsl
sub
testb
jge
sub
outsb
das
cmp
mov
sbb
hlt
mov
xor
add
mov
test
fildl
inc
mov
shlb
repz
das
fwait
cmp
mov
fsts
popf
add
xchg
add
negl
mov
int3
mov
dec
insb
cmp
push
testl
mov
fs
adc
cmp
rcll
repnz
push
jecxz
movsb
sbb
andl
xchg
push
mov
push
es
push
inc
add
sub
loopne
mov
mov
mov
and
sub
ja
fwait
xor
dec
sahf
cmp
cli
mov
or
mov
sub
lock
cwtl
jp
fmuls
pop
out
imulb
fwait
call
sub
ljmp
cmc
mov
scas
repz
mov
out
or
cmp
mov
test
push
lock
sbb
jnp
inc
jge
xchg
and
mov
sub
xchg
loop
add
sbb
jbe
sbb
jae
jle
adc
sbb
pop
cmpsb
push
dec
shrl
loope
mov
ret
dec
aam
pop
push
mov
enter
sbb
xor
jne
mov
add
stos
xchg
imull
sbbl
les
sti
mov
mov
xor
mov
mov
sbb
inc
mov
mov
outsl
ja
mov
ret
subb
fs
xchg
imul
mov
mov
fdivs
shrl
pop
js
or
pop
inc
lcallw
jg
or
xchg
dec
pop
xchg
test
cwtl
jge
daa
addr16
outsl
add
shl
pushf
movb
jae
add
mov
insb
fs
rcll
mov
xchg
xchg
flds
and
addb
mov
int3
int3
inc
xor
cs
rolb
add
jmp
data16
xchg
es
les
mov
and
shl
ret
gs
mov
sbb
lds
lahf
adc
cmc
lret
call
sbb
cltd
imul
incb
push
sbb
mov
cmp
dec
mov
push
xchg
pop
mov
xchg
or
stc
jns
pop
cmp
sbb
out
pop
jae
repz
test
adc
scas
fscale
sbb
hlt
push
sarl
jge
lock
cld
inc
ljmp
mov
cmpsl
and
sub
in
dec
loop
loopne
sbb
pushf
ljmp
in
sti
aad
jo
xor
mov
call
test
cli
call
std
or
dec
into
shlb
stos
repnz
fdivs
outsb
xlat
mov
dec
fwait
mov
pop
in
cli
lock
pop
icebp
imul
xchg
sbb
in
dec
ret
xor
xchg
fdivs
popf
or
outsb
jb
repnz
loop
mov
sub
out
fnstsw
aas
dec
inc
push
fstpl
repz
call
pushf
add
pop
mov
movl
cmp
out
lock
lods
xor
mov
mov
mov
and
sbb
inc
inc
je
clc
int3
xchg
pusha
pop
leave
jae
cmp
sub
in
and
aas
out
jle
xchg
mov
push
mov
mov
lcall
repz
lcall
sbb
xor
cmc
pushf
daa
stc
cmp
sarl
adc
cmp
dec
scas
fs
sub
xor
cmp
jnp
mov
scas
mov
bswap
and
rclb
adc
ret
stos
pop
pop
std
repz
insb
lret
inc
insb
cmc
in
aaa
mov
push
mov
or
sbb
dec
push
lret
jmp
dec
mov
out
add
int3
stc
mov
out
dec
cmpsb
adcb
pop
int3
int3
lcall
or
mov
hlt
add
push
xchg
jno
fs
dec
repnz
sub
and
jp
push
cwtl
inc
mov
pop
mov
lret
ja
or
or
push
xchg
push
cmc
inc
das
fs
xor
pusha
lahf
movsb
adc
and
shrb
jge
mov
inc
and
jae
inc
lods
pop
jg
and
mov
adc
dec
imull
aaa
push
and
ret
cld
mov
clc
les
fistpl
xor
fsubr
xchg
mov
ljmp
repnz
lret
dec
or
in
icebp
mov
es
or
push
les
in
aad
or
jmp
push
cmp
add
mov
or
mov
cmpb
mov
cmpsl
mov
and
imul
mov
test
mov
daa
mov
cmp
aam
sub
cmp
test
movsb
pop
lods
ja
mov
ds
aad
cmp
mov
sbb
fsts
push
inc
imul
cwtl
mov
and
xor
and
call
imul
jl
jbe
in
cmpsb
sti
and
out
or
and
sbbl
and
scas
out
test
fs
cmovs
mov
pop
jl
adc
and
mov
jl
pusha
inc
jb
lods
and
cmpsl
push
adc
int3
mov
add
into
pop
loope
clc
or
push
and
nop
jle
pop
fistl
shlb
jmp
cmpsb
push
add
loopne
push
cmp
mov
mov
mov
ja
and
adc
mov
inc
fcoml
aam
mov
pop
push
subb
push
es
xchg
cmpsb
gs
and
add
add
cmc
jb
mov
dec
stc
std
push
mov
and
adc
sbb
mov
dec
ret
andl
cmp
xor
lea
lahf
push
dec
add
pop
popa
jo
add
iret
pop
add
nop
les
xchg
lret
sti
push
pop
xchg
mov
sbb
push
rcrl
out
lahf
shll
add
fstps
ja
lret
int
dec
nop
jecxz
out
inc
repz
pop
loopne
inc
mov
rcl
daa
xor
or
dec
push
sub
into
mov
pop
fcoms
sub
cld
xchg
lret
test
cltd
in
sahf
movsl
je
loop
mull
pop
lcall
xchg
rorb
int
adc
mulb
sbb
jmp
loop
adc
scas
sti
mov
mov
and
fistpll
rorl
in
cmp
mov
or
cwtl
fmuls
jns
daa
dec
inc
mov
repz
aas
lods
jne
or
cmp
mov
lods
mulb
jae
push
push
mov
mov
dec
fnstcw
lock
stos
punpckhwd
adc
jnp
dec
int
dec
call
fldenv
inc
adc
test
aaa
in
add
fcmovne
xchg
pop
pop
addr16
mov
inc
jno
add
movsb
fistl
les
mov
xlat
sbb
mov
push
sbb
in
pushl
mov
repnz
and
pop
cli
pop
cmp
dec
lock
aaa
rcrl
add
mov
mov
sub
xorb
das
inc
pop
mov
and
mov
jno
add
cmpsb
imul
mov
test
outsb
or
dec
dec
xorl
mov
in
sub
dec
ljmp
imul
outsl
push
mov
adc
xchg
dec
call
or
sub
and
inc
xchg
sub
mov
adc
or
ljmp
fmuls
push
fstpt
cmp
xor
test
loope
out
xor
out
mov
push
rol
push
cltd
ds
sub
push
jbe
or
in
lcall
or
adc
fiaddl
mov
mov
pop
xchg
jp
jl
in
test
fsubrl
scas
arpl
sbb
push
xor
mov
clc
lcall
jmp
enter
fisttpll
mov
pushf
jmp
rolb
ret
loopne
pop
mov
data16
rcr
out
cmp
je
shll
notl
push
mov
or
loop
jge
add
sarl
dec
mov
pop
pop
mov
movsl
std
sarl
or
and
in
cli
test
cmp
add
orb
xchg
popa
into
mov
dec
and
loope
jnp
dec
jl
popa
mov
xor
dec
mov
sarb
xor
xchg
stc
xchg
pop
and
shll
mov
push
cmp
sahf
add
mov
aas
cmp
or
push
mov
les
lahf
fs
in
ret
cs
jno
mov
or
pop
add
push
pusha
popf
xchg
sbb
add
loope
add
xchg
sub
mov
decl
mov
inc
push
jl
andl
add
or
pushf
add
jne
xor
enter
push
cmp
sbb
add
cmp
rclb
ljmp
xor
dec
xor
lods
xor
pop
mov
and
out
test
jno
mov
pop
xchg
fiaddl
insl
aas
daa
xor
mov
add
xchg
sbb
lods
xchg
stc
and
les
shll
cmpsl
xchg
es
and
je
std
mov
loope
sbb
mov
adc
insb
test
xchg
xor
inc
push
pop
cmp
add
cmp
test
push
mov
loope
pop
cmp
es
rep
xchg
push
cmp
pushf
sub
lods
mov
jg
js
mov
ja
push
sub
mov
dec
mov
xor
in
pop
mov
mov
das
mov
xor
loope
shrl
aad
cmc
xor
jae
jnp
inc
mov
js
mov
mov
mov
cld
cmp
andb
cs
loop
dec
sub
lock
imul
cmpsl
std
test
pop
icebp
pop
pop
sbb
inc
mov
test
sarb
addr16
dec
add
add
and
add
pop
stos
shrl
mov
jg
test
mov
rcll
cmp
and
stc
imul
aam
fs
cmp
sbb
mov
fmulp
xlat
mov
imul
pop
inc
push
arpl
sti
jno
or
nop
xor
dec
test
jge
sahf
jle
imul
or
aas
sub
insl
fisubrs
sbbl
push
jp
rorb
int3
pusha
add
xchg
int
mov
enter
popf
jbe
sarb
aas
jns
inc
ds
cmpsl
test
mov
inc
adc
inc
mov
push
jge
mov
ja
into
xchg
dec
xor
icebp
dec
arpl
mov
out
cmp
enter
inc
std
fadds
aas
mov
fisubs
dec
loop
push
or
call
mov
mov
out
pop
shlb
pop
jns
dec
imul
int
addr16
stos
add
sysenter
mov
push
xchg
jae
sub
push
inc
js
or
rcll
ljmp
mov
test
cmp
sub
hlt
stos
les
sbb
cmp
inc
inc
std
inc
jb
std
cld
cld
ja
xor
test
jle
push
jnp
sbb
gs
int
xor
inc
push
mov
or
adc
fcmove
add
sarb
jle
aaa
out
xlat
mov
adc
scas
insb
push
xor
pop
add
pop
shl
xor
lcall
loopne
xchg
dec
fwait
xor
addl
push
jbe
push
sub
xor
pop
mov
mov
jg
pop
push
loop
jle
aas
mov
jmp
sbb
inc
mov
xchg
mov
dec
jb
adc
in
adc
insl
mov
mov
and
or
popa
aad
add
fldenv
fwait
mov
inc
negl
fdivrs
dec
push
or
fcoms
push
mov
cmp
out
push
push
add
incb
lea
jns
out
pop
push
ret
jno
test
add
and
jp
inc
aaa
mov
adcb
mov
jge
push
les
push
sbb
inc
xchg
jnp
push
mov
jl
lcall
jle
insb
pop
test
xchg
push
leave
js
movsb
mov
aam
pop
adc
fdivs
je
push
sbb
adc
mov
call
sub
adc
in
pop
pop
shr
push
cmp
mov
lods
lcall
adcb
and
lea
xlat
and
iret
clc
in
ficomps
jecxz
inc
shrb
mov
dec
mov
inc
cltd
dec
xchg
fisubrs
inc
and
mov
test
jg
lock
sub
sbb
ljmp
push
cmp
xor
inc
shr
das
stos
cli
xchg
and
push
xchg
pop
push
jecxz
add
push
int3
lods
addr16
jmp
aaa
cmp
test
mov
aas
pusha
lret
rcr
inc
aas
mov
imul
mov
adc
xor
mov
xor
imul
cltd
sub
in
xor
inc
cltd
dec
cmp
outsb
sarl
sti
or
mov
pop
notb
jo
rorl
ss
cmp
ret
jp
les
jnp
lret
test
pushf
inc
push
sub
xchg
inc
lcall
aaa
std
mov
push
xchg
insl
push
dec
cwtl
imul
sub
je
inc
scas
loope
cmp
bnd
das
inc
repnz
cmp
repnz
lock
mov
nop
mov
pop
mov
subl
push
test
mov
cli
push
jae
pushf
jno
lods
mov
ja
xor
addr16
adc
inc
jae
xchg
mov
adc
mov
and
push
mov
cmp
ret
and
adc
out
scas
push
clc
add
insl
shl
mov
mov
or
adc
rorl
xlat
imul
pop
clc
fs
je
aas
rclb
xchg
aam
adc
rclb
daa
xor
outsb
push
xor
insb
lods
rcll
loopne
out
push
je
push
xchg
sti
and
pop
add
inc
mov
pop
or
aaa
or
call
inc
dec
mov
xchg
sbbl
imulb
pop
es
insb
lahf
dec
add
dec
cmp
push
or
sbb
bound
shll
mov
cwtl
out
mov
movsb
ljmp
ljmp
iret
addr16
cmpsl
outsl
enter
add
mov
mov
inc
sub
fbld
sbb
xlat
push
jae
and
lcall
mov
cmp
shrl
aaa
cmp
icebp
out
xor
sbb
mov
push
inc
xlat
push
sub
dec
inc
in
adc
repz
shrl
test
dec
js
and
push
and
lods
and
lahf
out
out
mov
xchg
mov
gs
jge
xchg
pop
testb
dec
enter
dec
stc
int3
inc
outsb
cmpsb
fs
jmp
test
leave
loope
and
dec
dec
faddl
adc
fldcw
fcmovnu
xchg
xchg
clc
out
aam
sub
mov
and
cmp
rcrl
xor
mov
into
das
push
outsl
adcb
int
mov
sarl
lret
mov
xchg
fildl
int
jmp
and
inc
mov
orl
imul
adc
cltd
loope
push
and
stos
mov
inc
jecxz
insb
mov
lahf
test
daa
out
push
sbb
pop
lods
mov
xchg
dec
sti
out
and
and
or
adc
push
jle
shl
addr16
imul
jnp
rclb
xlat
mov
into
cs
xorb
xor
daa
scas
pop
jns
sbb
xor
js
fcoml
sbb
push
sbb
test
push
xchg
mov
js
adc
add
sti
mov
dec
xor
pop
xchg
xor
loopne
adc
popa
pop
cltd
cmp
dec
sub
pushw
inc
cld
icebp
add
mov
movsb
mov
sub
mull
sbb
ret
cmp
or
aas
push
aam
arpl
stos
sub
inc
cld
shrb
scas
stos
mov
inc
es
mov
xor
repnz
in
shll
sub
je
mov
mov
jg
cmp
fstpt
mov
add
adc
in
adc
cli
sbb
test
jmp
andl
xchg
stos
imul
adc
ror
jmp
inc
das
outsl
int3
loop
sub
pusha
arpl
add
lods
sub
dec
mov
fsubl
jo
mov
xor
ffreep
adcb
jb
sub
xor
xchg
xchg
ficoml
or
hlt
hlt
xchg
outsl
testb
mov
sahf
sub
push
adc
and
or
fstp
clc
movsb
imul
cmpsl
pushf
push
cmp
imul
push
rolb
clc
mov
and
cltd
mov
mov
sbb
pop
xor
bound
dec
mov
cmc
mov
repz
cmp
pop
sub
rolb
inc
sbb
pop
and
jmp
ja
in
out
lods
jle
dec
std
cmc
cs
or
and
sbb
and
push
iret
dec
mov
das
mov
lea
ret
sub
dec
and
dec
cmp
or
cs
jle
sub
xchg
sbb
dec
add
add
cli
add
sbb
mov
out
repnz
cmp
push
mov
rcrl
out
lds
xor
enter
pop
jo
mov
stc
test
adc
in
adc
jg
jne
pop
cmp
scas
push
mov
xchg
pop
mov
js
cltd
inc
mov
dec
ja
cmp
in
sbb
xchg
fisubs
pusha
fldcw
add
dec
outsl
adc
gs
or
sbb
sbb
xor
fists
jge
add
and
mov
lods
and
xchg
clc
ds
mov
andb
pushf
dec
cmp
fsubrp
and
push
mov
les
xor
nop
inc
push
push
pop
dec
dec
sub
mov
push
lret
and
mov
xchg
aad
sahf
out
lods
mov
xor
cmp
arpl
push
sbbl
xor
jo
sbb
jae
cmp
cmpsb
scas
cs
add
popl
lret
fucomp
sbb
cmpsb
out
xchg
loop
addr16
fwait
jno
iret
pop
scas
scas
sahf
mov
loope
adc
inc
pop
inc
push
jno
mov
sub
mov
mov
aam
xchg
sub
pop
push
push
push
jmp
cmc
iret
ret
les
or
cli
roll
fistps
dec
jnp
sbb
mov
adc
pop
sbb
xchg
mov
pop
mov
pop
jbe
adc
cmp
insb
test
stos
into
dec
test
test
jmp
dec
jns
xchg
test
add
cld
dec
fcomi
add
mov
lahf
sbb
scas
addl
rorb
xchg
sub
sbb
jmp
icebp
push
shll
dec
adc
xchg
jecxz
mov
xchg
jle
adc
push
hlt
imul
xchg
mov
push
shlb
out
xor
cmp
lret
inc
addb
jb
cmc
pop
or
lds
lods
xlat
add
mov
shll
mov
mov
xor
push
inc
pop
push
loope
rcrb
hlt
mov
jb
inc
sbb
int3
dec
mov
add
xchg
jge
adc
mov
mov
arpl
cwtl
out
mov
adc
ficoms
ret
xor
jg
dec
rcrl
cmp
hlt
jnp
push
sbb
test
and
push
add
cli
cmpsl
test
dec
and
and
mov
pop
xor
sub
sbb
in
fsubs
imul
sbb
mov
sub
jmp
or
jne
mov
inc
dec
inc
inc
inc
push
lcall
jmp
push
jge
ja
or
dec
lret
dec
add
mov
mov
dec
lock
mov
testb
push
mov
je
aam
fwait
xorl
ss
subl
cmp
lods
hlt
lock
mov
push
cmp
in
popf
ja
adc
jno
fdivs
gs
loope
cli
ss
fcmove
insb
scas
gs
jo
xor
gs
jge
mov
loop
mov
jmp
add
mov
stc
insl
hlt
xor
cli
repnz
lds
sbb
pop
ja
cltd
push
mov
in
mov
insl
enter
lds
jne
sbb
xchg
hlt
pop
or
sub
xlat
cmp
jmp
repz
fists
imull
dec
adc
jns
jmp
lcall
cmc
or
insb
cmpsl
mov
loope
jmp
jl
and
and
pop
mov
jo
push
out
std
std
mov
sub
xchg
imul
jp
out
sub
sbb
push
push
jp
ret
stc
ljmp
cmp
enter
adcl
jg
int3
mov
scas
popf
ljmp
mov
ja
xor
repz
imul
sbb
mov
and
movsl
lods
imull
das
inc
inc
andl
adc
inc
pushl
int
icebp
sahf
andb
fnclex
jge
mov
fstl
scas
fwait
bound
jge
daa
cmp
inc
aas
dec
int3
outsb
in
sete
sub
imul
jp
outsb
fcompl
push
cmp
push
or
adc
in
rcrb
aam
mov
xchg
aaa
cwtl
outsl
lods
arpl
push
into
nop
jbe
sbb
lock
push
movsl
mov
or
movsl
insl
shlb
fmuls
pop
mov
push
cwtl
or
fcmovb
scas
loope
sub
or
push
popa
call
xchg
insb
pop
aad
ja
pop
adc
insb
gs
loopne
leave
or
push
cmp
sbb
pop
icebp
fnstsw
or
jno
insb
in
int3
jne
test
lods
icebp
je
xor
fimull
push
bound
test
push
jp
jb
mov
ror
lods
jmp
xchg
ljmp
pop
mov
dec
movsl
lcall
jne
mov
sub
daa
jge
jle
sarl
mov
sbb
push
sub
jb
jbe
xor
and
daa
xor
gs
fidivs
mov
fcmovne
in
sti
mov
ljmp
dec
insl
movsb
mov
loop
adc
cmp
inc
mov
std
pop
iret
sub
xchg
daa
add
pop
mull
dec
xchg
stos
inc
xor
data16
push
mov
pushf
and
subl
xchg
dec
scas
aam
mov
les
imul
jne
xor
das
addb
mov
lahf
test
xor
or
nop
ja
adc
dec
xor
sub
cmp
adc
stos
jae
ja
xor
sub
adc
inc
daa
push
pop
xor
push
insl
mull
dec
and
mov
xchg
mov
mov
add
out
ja
cmp
loopne
lds
in
mov
popf
xor
mov
imul
insb
inc
inc
arpl
xor
cmp
cmpsl
jb
adc
push
nop
test
cmp
and
outsb
push
xchg
add
mov
gs
test
sub
mov
ret
popa
iret
adc
mov
popf
fsts
push
mov
outsl
add
pop
orl
push
adc
jmp
or
enter
testl
ret
mov
sbb
pop
dec
cmp
mov
pop
mov
and
xchg
push
nop
cmpsb
loope
ja
fisttps
jne
movsl
adc
and
dec
frstor
and
call
or
out
sub
aaa
push
pushf
je
pop
movl
lds
roll
mov
js
or
adc
cmp
fisubl
fsts
test
adc
sbb
adc
loope
ja
je
mov
jnp
xchg
subl
adcl
fstp
jae
mov
xor
iret
xchg
xor
aad
imul
dec
dec
repz
rclb
iret
dec
andl
js
loope
mov
add
sub
fldl
push
lock
pop
stos
inc
pop
sbb
adc
cwtl
pop
aas
mov
scas
jne
and
push
dec
jecxz
pop
lods
gs
xchg
test
jmp
jle
data16
sti
imul
cmp
hlt
mov
das
jae
jne
icebp
pop
daa
lds
imul
inc
sbb
sub
test
mov
test
push
les
add
ss
and
push
fcomps
cli
adc
icebp
shll
cmp
in
sbb
adc
sub
pop
in
push
or
mov
call
stos
js
ja
or
dec
mov
jne
int
push
repnz
xor
sub
pop
fstpl
out
sbb
mov
xor
mov
cmp
pop
testb
sbb
inc
adc
pop
add
repnz
insl
in
mov
sub
icebp
pop
jmp
cmp
pop
cmpsl
push
enter
mov
pop
hlt
push
subl
gs
push
leave
fbld
xchg
test
pusha
jno
addl
jbe
outsb
xchg
cld
sub
adc
lar
cmpsb
cmp
inc
and
or
mov
scas
fldcw
outsl
fs
pop
incb
out
inc
add
addr16
addl
mov
pop
push
pop
jp
xchg
rolb
xlat
xor
aam
cmp
mov
xor
fs
int3
mov
fbstp
push
hlt
lea
scas
sub
roll
push
add
adc
push
cs
sbb
ljmp
xor
mov
pop
cld
xor
xchg
mov
sub
into
gs
push
orl
or
pop
fs
push
mov
mov
lods
sbb
and
xchg
inc
mov
sbb
rorl
mov
mov
mov
mov
add
stc
mov
sbb
int3
sbb
and
xor
dec
loope
cmp
jae
aam
mov
andl
lock
pop
sbbl
sbb
lea
jmp
rcl
jge
rorl
pop
cs
pop
pop
mov
jae
dec
and
inc
inc
pop
movsb
mov
aas
and
sahf
mov
cli
cmp
gs
inc
mov
shr
and
in
mov
std
push
xor
jo
enter
lahf
mov
in
mov
lcall
mov
out
or
xchg
andb
imul
add
fwait
pop
cwtl
inc
int3
xchg
pop
sub
mov
hlt
je
mov
add
lcall
and
insl
dec
inc
shrl
or
push
and
add
jp
pop
fbld
dec
push
movsl
arpl
or
sbb
out
enter
push
pop
inc
inc
loopne
jno
mov
mov
fisubl
fimull
in
imul
jmp
inc
stos
inc
inc
jne
movsl
xchg
mov
xchg
push
mov
cs
insl
pop
faddp
push
push
out
jns
mov
lds
or
sub
sbb
roll
and
xchg
pop
cmp
fwait
or
sbb
xlat
inc
mov
and
xor
and
sub
dec
sub
mov
cli
das
inc
jmp
loopne
xor
dec
jo
dec
dec
jo
nop
into
inc
aas
xor
jg
into
js
in
mov
ror
adc
cld
fs
inc
jecxz
bound
je
mov
imul
xor
scas
jbe
frstor
mov
stc
ljmp
sbb
movsl
mov
mov
push
mov
fldt
rcrb
jb
outsl
xor
and
add
imul
loope
pop
inc
fxch
jae
jne
jmp
insl
xchg
fstl
push
roll
rcr
push
fdivl
shlb
shl
pop
std
dec
adc
test
and
shlb
push
cmp
call
xchg
or
jae
mov
clc
inc
cld
dec
lcall
jae
roll
data16
inc
add
mov
jge
mov
mov
lock
cmp
fimull
pop
daa
pop
sbb
or
jmp
inc
lret
push
scas
data16
cmpsl
flds
inc
ljmp
sbb
pop
push
cmpsb
or
cs
dec
sub
or
aas
lods
fwait
cmp
insl
inc
push
bnd
loopne
mov
insb
or
pop
cli
pop
aad
divl
lcall
popf
mov
stos
test
cmp
sbb
mov
or
ljmp
sahf
mov
mov
lahf
icebp
xchg
adc
mov
mov
iret
cmp
adc
in
rcrb
or
push
push
jne
sub
cvtdq2ps
paddusw
mov
in
repz
and
mov
sub
sub
cltd
push
mov
data16
cld
mov
lods
pop
or
mov
jle
mov
dec
cmp
dec
adc
or
leave
aad
mov
into
mov
jnp
or
movsb
fsubl
adc
shll
or
movsb
push
into
fs
sarb
push
cmp
and
rcll
jae
lods
inc
add
mov
cmp
and
stos
xor
les
scas
dec
cmc
das
sub
jge
jp
popf
daa
push
lret
pop
mov
xchg
pop
adc
test
push
out
dec
mov
cmp
insl
bound
ss
adc
in
lahf
push
out
adc
ficomps
dec
es
bound
push
add
sub
outsl
ret
jb
test
adc
jnp
imul
in
sub
fcomps
das
push
int3
or
popf
add
lea
sbb
adc
fwait
push
sbb
add
and
xor
leave
xor
mov
insl
mov
dec
call
fildll
or
scas
aaa
sti
lret
xchg
lret
js
out
xor
cld
adc
cmp
insb
push
sbb
int
insb
es
lods
loope
mov
and
lea
pop
cwtl
mov
fstpl
push
sub
jl
daa
xchg
popf
push
jecxz
ret
ret
mov
stos
sub
sbb
mov
inc
sub
hlt
in
and
pushf
sahf
imul
dec
cwtl
cmp
cmpsl
inc
cwtl
cmp
cmpsl
jo
sub
ja
int
outsl
notb
jmp
cmc
clc
mov
mov
inc
jnp
loop
mov
jg
xchg
rolb
lea
jge
sbb
out
sbb
scas
stos
fwait
ljmp
jno
mov
call
push
cmp
xor
addl
push
cltd
scas
rol
shl
ret
addl
leave
insb
jmp
insl
cmpps
pop
test
and
add
jl
push
imul
mov
int3
inc
ret
push
pushf
inc
add
cli
inc
or
jo
inc
adc
or
sbb
popa
jp
add
push
pop
sub
lods
and
adc
aam
ljmp
mov
imul
adc
leave
ds
or
insl
inc
adc
adc
dec
and
call
cmp
inc
scas
push
pop
fwait
mov
mov
xor
pop
test
lea
cmp
adc
out
mov
loope
add
aam
push
inc
xchg
xor
pop
test
pop
or
stos
push
rcl
cmp
and
hlt
push
jle
jle
xor
loope
daa
das
mov
fnsave
mov
mov
sbb
jge
stos
aam
pop
clc
je
jp
cmp
xor
xor
or
jno
pop
cmc
cld
addr16
jl
jne
je
mov
sub
mov
inc
repnz
clc
rcr
jae
adc
ficomps
or
push
pop
call
je
inc
pop
loopne
cltd
pop
mov
mov
into
add
xlat
xchg
ljmp
nop
sub
js
cmc
jbe
stos
repz
bound
imul
and
push
and
cmpsl
xor
scas
cwtl
xor
scas
adc
shrb
add
insb
push
ret
ljmp
mov
or
popf
popa
icebp
or
adc
pop
dec
cmp
test
aas
sub
sub
lock
add
jae
xor
pop
repnz
cmpsb
clc
test
test
inc
and
cmp
add
push
or
pop
xchg
mov
in
mov
frstpm(287
lcall
ljmp
ret
stc
add
xlat
sub
pushf
jle
nop
repnz
cwtl
mov
insb
jns
xchg
push
aam
jg
shll
push
xchg
subl
mov
and
or
es
cs
jnp
mov
jo
push
arpl
cltd
adc
pop
mov
fisttpl
nop
pop
shll
inc
rcr
mov
add
and
ljmp
fcmovnu
fldcw
push
lods
cmp
lds
lods
xor
xchg
mov
add
shrb
jmp
dec
mov
push
ds
push
loop
bound
and
xchg
lcall
pop
adc
xchg
bound
repnz
inc
mov
cmp
push
adc
sbb
add
stc
jle
in
dec
pop
or
and
push
inc
xor
inc
pop
imul
and
or
hlt
inc
xor
push
addr16
mov
fnsave
xchg
mov
pop
test
mov
in
dec
add
in
jae
and
cmp
dec
mov
dec
sahf
jg
loope
adc
fadds
fs
popf
inc
push
mov
xor
sbb
or
lret
aas
jg
pop
xchg
dec
adc
imul
pop
push
mov
shll
and
cli
cld
mov
jecxz
mov
rcll
loopne
sub
cmpsl
fsts
movsb
xchg
cmc
sti
mov
sub
icebp
call
mov
addr16
clc
mov
cmpsb
jae
mov
leave
cmp
dec
ror
stos
sub
pop
or
adc
jns
mov
push
or
rcrl
idivl
lret
xchg
push
inc
mov
imul
cmp
mov
xor
xor
jo
mov
shrb
fdivs
out
push
xchg
lods
je
shl
mov
in
push
xor
mov
icebp
or
cmp
xor
jle
inc
adc
je
pop
fcompl
jmp
addr16
aaa
fsts
into
cli
mull
lahf
iret
jle
push
in
pushf
arpl
ds
cmp
aad
cmp
mov
jnp
add
mov
imull
std
imul
cwtl
jle
pop
xchg
xlat
or
inc
adc
stos
cltd
iret
dec
sbb
lahf
mov
pop
add
dec
dec
frstor
mov
push
add
mov
subl
mov
and
pop
mov
mov
test
adc
lret
xor
shr
leave
daa
mov
outsb
cltd
cwtl
rcll
xchg
lahf
mov
sbb
out
js
add
ror
or
movsb
icebp
xor
and
xchg
jl
push
shlb
lds
into
cmp
outsl
stos
mov
sbb
hlt
aaa
ret
hlt
je
in
cli
cmp
ljmp
or
dec
sarl
xchg
mov
push
xchg
xor
dec
shrl
inc
sbb
jmp
lea
jns
cmc
fdivrp
repnz
shlb
inc
inc
nop
out
hlt
cltd
mov
pop
xor
jp
and
std
xchg
jne
pop
dec
enter
pop
je
jl
dec
ds
out
inc
xlat
or
jo
xchg
push
lret
mov
add
xchg
push
pop
mov
add
call
mov
push
mov
lods
sti
mov
cmp
pop
dec
xchg
call
add
xlat
sahf
pop
cld
jnp
push
loopne
mov
xor
sub
inc
adc
test
jmp
and
pop
xor
xlat
xchg
cltd
fmull
and
out
data16
sub
popf
dec
push
andb
repnz
sbbl
xchg
mov
push
push
rol
stos
ret
mov
jae
stos
inc
push
xchg
push
xor
sub
sub
sti
xchg
in
out
aam
jb
push
xorl
lahf
xlat
lret
cmp
or
inc
add
add
or
mov
in
fistpll
xchg
pop
xchg
push
jp
int3
sahf
mov
popf
sbb
mov
or
lds
sub
ja
dec
cltd
add
arpl
outsb
push
in
jb
pop
push
aad
adc
xchg
dec
sbb
push
addl
push
fwait
sbb
cmp
ret
roll
push
jl
fadds
addr16
dec
and
xchg
iret
aam
leave
popf
shl
mov
dec
and
stos
repnz
popa
rorb
or
push
rcrl
cmp
xor
add
out
mov
int3
lea
sub
inc
int
leave
aaa
repnz
dec
jmp
mov
sti
pop
je
push
push
sub
lahf
mov
out
ja
jg
cld
stos
imul
testl
out
pop
sti
jmp
mov
cmp
xchg
inc
jae
pop
or
dec
sbb
sbb
and
lds
addr16
jne
addr16
loope
and
jp
xchg
lcall
lcall
std
call
rorl
in
push
mov
std
pop
mov
lds
pusha
dec
mov
mov
ljmp
inc
movl
push
cwtl
adc
jg
add
es
jno
je
addl
insl
jl
sbb
sbb
lret
xchg
push
sbbb
sbb
sub
xchg
pop
gs
in
jg
fcoml
movsl
pop
inc
sbb
addb
nop
cltd
adc
loopne
jo
jg
mov
lcall
andl
mov
fdiv
stos
cmp
push
sbb
add
jge
mov
in
xor
or
sbb
sub
or
or
and
add
cmpsb
lock
addr16
mov
arpl
jl
jge
add
pop
push
add
dec
push
lcall
or
std
jmp
int3
add
mov
inc
mov
mov
adc
in
xchg
mov
xor
das
mov
ds
push
test
fistpl
addl
sub
pusha
rcl
loope,pt
and
jmp
pushf
jne
jecxz
int
mov
cli
aas
cmp
mov
or
jp
xchg
notb
push
sar
mov
loop
mov
insb
ficompl
lcall
jno
sub
in
and
popf
pusha
sub
fwait
mov
int3
loopne
mov
aam
mov
or
daa
fisubrl
add
insl
scas
pop
xor
cs
mov
xor
sbb
lret
fcomi
and
aad
hlt
push
icebp
push
push
movsl
add
mov
aad
addr16
mov
sarb
in
mov
rorl
xlat
les
in
jb
mov
jo
push
fucomp
jecxz
pop
inc
pop
addb
and
sarb
out
into
mov
fadds
pop
xorb
scas
push
sti
mov
out
and
mov
sti
sub
out
ja
mov
insl
fstl
pop
cwtl
nop
or
decl
clc
jl
mov
daa
imul
orb
jmp
mov
idiv
xor
in
stc
out
ret
pop
gs
pop
adcb
iret
dec
inc
inc
mov
cmp
clc
pop
aad
das
in
mov
cpuid
pop
jmp
loop
or
hlt
adc
gs
clc
cld
in
pop
mov
inc
inc
loope
scas
xchg
push
shlb
sbbl
mov
or
sbb
sub
rcll
push
fstp
repnz
sub
xlat
mov
cli
sub
lcall
in
add
sahf
cmp
sbb
lret
fimuls
sub
mov
lahf
loopne
and
enter
in
cmc
lods
fildl
or
cmc
jo
push
divl
adc
sbb
aas
cmpsl
test
data16
es
out
sub
adc
jle
fistps
mov
daa
adc
push
pop
sbb
lods
imul
jb
das
int3
ljmp
repz
outsb
adc
push
nop
ss
fwait
std
jbe
jne
push
inc
mov
imul
lods
jbe
add
push
call
jge
push
sbb
int
cmp
test
andl
sub
subl
aaa
mov
aad
xchg
jmp
ja
mov
les
pop
cwtl
mov
mov
mov
in
test
stos
dec
dec
icebp
iret
lea
sbb
fidivl
lods
sbb
mov
mov
cmp
fwait
push
sub
mov
mov
gs
daa
inc
or
loopne
clc
bound
es
dec
push
loope
mov
add
je
stos
pushf
ror
in
and
out
xchg
pop
icebp
cli
xlat
cmp
pushf
insl
hlt
dec
sub
cmp
in
andb
rcrl
setne
sbb
cld
ljmp
cmpsl
stos
add
lahf
pop
push
and
rorl
add
stos
jae
sahf
sbb
jb
scas
test
and
add
shr
imul
fidivs
sub
shlb
repz
daa
adc
mov
mov
sub
adc
mov
cmp
pusha
lods
jnp
jp
add
movsl
jg
repz
pop
adc
test
mov
outsb
in
xor
sbb
mov
cmpsb
outsb
jmp
push
jns
jecxz
mov
and
inc
push
idivb
insb
push
add
sbb
jae
lods
loopne
icebp
loopne
lea
daa
ljmp
pop
fs
ret
push
add
jo
mov
xor
ds
pop
xchg
mov
xlat
addr16
flds
lret
mov
sbb
lods
xor
sub
or
xchg
je
add
js
xchg
std
and
rcr
xor
jl
or
and
sbb
mov
rcrl
stos
mov
aaa
add
test
sbb
fcompl
sbb
cmpl
or
push
dec
test
ja
pop
ja
mov
jge
xchg
shl
pusha
fwait
adc
sarl
js
clc
pop
rcrb
jl
dec
dec
adc
call
mov
test
lret
negl
xchg
push
sti
inc
lret
mov
jmp
mov
or
ja
mov
push
sbb
sbb
das
mov
icebp
test
ficomps
cwtl
cmp
jge
filds
aam
fcomps
icebp
xchg
inc
sub
ds
repz
xchg
ret
inc
inc
push
fisttpl
in
lods
mov
xchg
outsl
jecxz
mov
pop
rolb
movsb
outsl
xchg
jge
adc
into
pop
push
xlat
push
pop
dec
inc
test
mov
lock
mov
push
hlt
movsb
cmc
or
imul
arpl
loope
iret
ja
lret
fldenv
gs
aas
jne
inc
iret
lret
jns
out
pop
iret
xor
je
adc
ja
push
inc
mov
xchg
add
pop
jp
adc
out
lahf
mov
dec
mov
rorb
in
xchg
dec
cmp
jg
jae
pop
xor
xor
sub
cmp
add
fsubrl
mov
lock
push
cltd
setns
insl
psubusb
clc
add
es
cmp
insl
arpl
aas
shll
add
incl
xor
jae
cmpb
mov
mov
icebp
push
mov
xchg
sbb
imul
fdivl
xchg
push
push
fwait
xchg
call
pop
shl
pop
sbb
cmp
mov
cmc
test
pop
pushf
mov
int3
push
mov
fdivrs
add
dec
mov
lock
lods
push
pop
lcall
xchg
dec
xor
aad
add
adc
jmp
test
and
ljmp
rcrl
cmc
sub
xchg
push
roll
dec
pusha
xchg
rcrl
sub
stc
jae
jmp
mov
mov
movsb
jns
stos
je
push
icebp
xor
push
lret
lds
add
add
std
jno
icebp
add
pop
inc
mov
jno
in
jnp
xor
xchg
shlb
test
jbe
xchg
cltd
popa
scas
sbb
test
push
ss
clc
inc
ja
jmp
movsb
pop
push
or
daa
sub
ret
jmp
lcall
pop
inc
int
pop
fnstsw
mov
push
inc
js
ret
inc
lahf
shlb
sub
xchg
pop
jmp
jnp
xor
mov
pop
mov
insb
sbbl
mov
ljmp
inc
add
mov
mov
popf
in
insb
insl
jbe
mov
xchg
shrl
dec
jno
sub
bound
inc
cmc
mov
xor
in
cwtl
cmp
add
inc
test
rcrl
jbe
adc
cmp
xchg
push
inc
aad
pop
pop
add
in
fwait
inc
mov
scas
cwtl
jle
js
idivl
push
les
imul
loope
dec
lds
fstl
jb
sbb
or
repz
stos
sbb
jae
xchg
outsl
fs
pop
sub
movsb
cmc
das
dec
dec
call
jle
data16
add
or
in
push
jnp
aaa
std
adc
adc
xchg
pop
jge
popa
xchg
ret
mov
adc
lods
std
test
daa
inc
lret
nop
shr
int
adc
cld
clc
mov
and
sahf
mov
push
mov
es
ret
push
inc
mov
out
into
mov
sbb
icebp
jb
sub
cltd
sub
dec
sub
sub
add
push
sbb
cmp
cmp
int3
or
stos
sbb
fidivrs
loope
push
insl
jmp
mov
add
movsl
fisubs
push
lcall
repnz
das
adc
test
jmp
jle
movsb
les
movsl
sub
aam
add
into
call
sbb
and
lea
icebp
lea
aad
or
lahf
lret
sub
jnp
add
shlb
cmp
sti
and
faddp
jnp
xor
js
lds
pushf
cmpsl
mov
and
inc
aas
in
mov
pop
and
in
pop
out
insb
inc
cwtl
sbb
ret
cmp
cmp
adcb
aam
sbb
fisttpll
xchg
jae
or
rolb
pop
js
xor
or
jmp
push
add
enter
xchg
cwtl
push
sti
dec
test
cmp
jge
call
jbe
cmpsb
daa
xchg
or
arpl
stc
xchg
and
adc
fldt
add
jg
pop
out
inc
pop
gs
or
inc
push
lret
mov
pop
popf
jns
mov
xchg
pusha
xlat
add
mov
mov
frstor
mov
rcll
adc
mov
dec
arpl
negb
mov
mov
test
mov
dec
ss
mov
sbb
mov
scas
ds
inc
sbb
scas
repnz
push
jp
sub
lods
pushl
aaa
or
scas
push
daa
push
scas
gs
pop
adc
fldenv
dec
mov
into
notb
incb
fwait
lcall
jmp
add
cmp
loop
lock
jmp
aam
aad
cmp
push
or
xchg
mov
xlat
mull
jl
and
fiaddl
enter
push
loop
mov
fs
ds
mov
jnp
push
pop
lock
mov
sbb
add
pop
sbb
mov
xchg
jl
mov
pop
popa
pop
jb
mov
and
std
dec
cs
or
loop
inc
and
stos
sub
or
or
inc
leave
xchg
shrl
aam
push
lcall
adc
and
ja
jle
adc
movsb
enter
or
arpl
dec
scas
repz
push
or
je
pop
jmp
fsts
rcrb
enter
cmp
xchg
jecxz
adc
aad
out
sti
or
push
mov
inc
and
xor
mov
daa
and
pop
lods
mov
out
or
jmp
mov
scas
mov
les
push
hlt
jae
pop
mov
xor
mov
leave
hlt
cld
test
std
sbb
add
jae
cmp
enter
cli
jb
addl
fs
push
lahf
inc
fwait
and
js
mov
inc
lret
pop
popf
jnp
scas
xor
xorb
in
ljmp
jl
sub
std
adc
dec
sub
pop
imul
push
dec
mov
and
int3
inc
pop
das
or
repnz
and
fwait
push
lcall
cmc
js
sbb
lea
stc
jae
loop
fidivrs
cld
cmp
sbbl
fcoms
std
pop
jbe
loop
push
inc
test
sbb
inc
sub
adc
dec
sahf
rcl
ds
sti
adc
jnp
mov
in
insl
in
daa
in
or
dec
cli
hlt
std
mov
daa
cli
mov
test
xchg
out
mov
xchg
xchg
and
jne
pop
aam
rol
dec
ret
sub
mov
adc
rcll
lret
mov
sarl
ds
sub
mov
lods
rorl
push
inc
mov
and
cli
xchg
mov
in
and
lods
fs
ret
mov
or
mov
stos
cld
addl
repnz
outsl
mov
stos
int
cmpsl
add
jmp
roll
lahf
jge
xor
pop
xchg
jmp
adc
mov
cmpsb
push
jne
inc
stc
dec
add
and
fld
bound
or
mov
mov
push
in
or
xchg
push
push
sti
sub
fisttps
inc
loop
stos
popf
leave
sbb
mov
push
ss
pop
add
xchg
daa
add
xor
xchg
insb
xchg
cmp
or
xor
ja
sahf
out
insl
inc
psubb
add
pop
adc
push
dec
xchg
iret
or
push
sbbl
add
hlt
fimull
add
mov
hlt
nop
out
add
mov
inc
sbb
lds
jg
cmp
xchg
xor
scas
inc
push
jmp
int
add
arpl
repnz
out
sbbl
pop
adc
imul
and
mov
mov
sbb
je
pop
push
arpl
pop
jnp
mov
push
mov
xchg
testb
xchg
inc
xlat
or
sti
or
in
sahf
fs
add
cmp
sbb
das
shll
sbb
inc
lcall
test
stos
xor
jp
jg
xor
pop
pop
lods
scas
in
bound
push
xlat
imul
loopne
cmp
js
pop
out
cmpb
rol
fnsave
sbb
xchg
pop
int3
daa
cli
xor
push
mov
inc
jge
mov
sub
adc
fiadds
mov
das
dec
data16
dec
stos
lock
pop
pushf
or
push
cmp
add
insl
test
cmovne
addb
jno
lods
xchg
xor
mov
add
cmp
test
mov
mov
sub
mov
daa
sub
in
mov
pop
add
arpl
sub
jp
out
int
loop
repz
lcall
test
aas
xchg
adc
dec
xchg
dec
mov
inc
cmpsl
insl
sbbb
sarb
pop
dec
push
dec
sbb
lret
and
xchg
pop
ret
es
jl
add
xchg
and
loop
dec
lods
sbb
mov
scas
jecxz
push
pop
jp
aam
mov
lcall
in
inc
mov
loop
bound
or
fs
push
push
es
add
mov
ret
dec
pop
notb
ficoml
test
sbb
lret
or
out
dec
mov
cmpsb
adcb
lock
loopne
aam
mov
fnstenv
jl
outsw
out
mov
xchg
and
rcll
or
xchg
stos
enter
sub
int3
adc
xchg
jbe
test
mul
es
add
jne
or
dec
pop
out
ja
ss
enter
or
cmpsl
pop
adc
mov
imul
cwtl
push
mov
push
rol
bound
orl
cmc
sbb
aaa
adc
dec
push
rclb
into
dec
mov
sbb
lcall
push
inc
push
std
jnp
cmp
sub
sarl
and
xchg
xchg
jnp
cmp
incl
ja
inc
inc
xchg
push
scas
aas
fstpl
push
xchg
movsb
mov
iret
cmp
iret
clc
fs
scas
test
fidivrs
sbb
cltd
outsb
push
in
lahf
inc
lods
pop
mov
mov
adc
pop
loopne
rorb
orl
dec
or
cli
scas
jo
sbb
je
pusha
loopne
pop
fidivl
jmp
out
pop
mov
aam
lods
add
les
fdivs
inc
cmp
mov
mov
xchg
dec
pop
mov
mov
mov
paddw
enter
mov
or
lea
ret
xor
stos
mov
shlb
mov
inc
adc
fucomp
stos
shrl
jge
jae
hlt
push
push
mov
pop
mov
mov
pop
pop
push
mov
add
mov
mov
sub
jp
jg
fadds
push
lock
js
cmpsl
jnp
or
cmp
int
mov
jmp
ret
cmp
xor
enter
cs
mov
andl
sti
ficomps
add
js
cmp
out
inc
mov
jle
jbe
sbb
aaa
jg
xchg
push
in
insb
insb
pop
xor
adc
out
movsl
xor
dec
jno
jecxz
ljmp
push
negb
aas
mov
fwait
xor
and
inc
push
xchg
pop
cld
sbb
std
sbb
mov
push
insl
xor
iret
scas
cmpsb
xchg
in
push
xor
xor
lahf
pop
mov
shlb
mov
negl
or
dec
push
loopne
jg
xchg
js
fs
cmc
dec
or
inc
pop
cmpb
rep
sbb
mov
adc
sbb
mov
push
mov
test
lcall
fnstcw
lcall
add
out
mov
out
xchg
xor
scas
push
sub
adc
cs
xchg
in
sub
cmp
add
jmp
shlb
fdivr
inc
inc
mov
xchg
jnp
pop
ret
out
dec
jo
insl
dec
sbb
add
add
fwait
sub
mov
cli
jg
ss
push
mov
call
out
loop
push
cmpb
shrl
loope
pop
or
adc
imull
dec
scas
rol
into
insb
je
pushf
and
shlb
fcompl
xor
out
sbb
xchg
mov
pop
add
rcl
cmp
fimuls
js
mov
hlt
ret
and
stc
dec
jo
int3
loopne
lods
inc
sahf
push
das
loope
ss
jle
mov
outsb
mov
adc
int3
scas
ret
pop
pop
dec
and
mov
sub
cmpsb
mov
pop
jae
mov
or
fistpll
rorb
mov
dec
pop
and
imul
dec
test
addr16
inc
mov
push
jb
xchg
test
cli
push
andb
xor
fildll
sub
fists
adc
sub
sbb
movsl
push
pop
hlt
mov
cmp
test
cli
xchg
shrl
out
push
xor
adc
cmp
mov
adc
cmpsb
out
sub
rclb
lcall
push
mov
push
loopne
jp
push
dec
mov
xchg
xor
xchg
xchg
mov
push
loop
sub
mov
mov
addr16
mov
mov
sbb
int3
sbb
icebp
mov
cmpsl
dec
bound
addb
dec
push
cli
lahf
sbb
inc
movl
arpl
xchg
lcall
shlb
mov
dec
sbb
xor
icebp
int
mov
sbb
outsl
inc
out
mov
mov
addr16
into
mov
cmp
sub
push
les
mov
test
xchg
jle
adc
flds
mov
cmpsl
inc
andl
pop
out
dec
in
push
pop
sahf
fsubp
lods
inc
inc
mov
xor
pop
shlb
cld
add
rolb
int
ljmp
lods
mov
in
out
xor
jns
stos
sahf
sti
in
xchg
cs
xor
push
scas
jl
psrlw
push
push
insl
pop
sub
sbb
fisttpll
popa
data16
sbb
jnp
push
mov
outsb
cmp
movsl
test
int
das
iret
mov
push
cld
push
bound
in
out
push
fdivrs
inc
xchg
scas
repnz
lds
xor
mov
clc
cltd
cs
dec
and
mov
enter
test
je
pop
int
pop
xor
sub
out
out
test
sbbb
xchg
push
lea
sub
ljmp
xchg
push
mov
lret
jbe
ja
jno
adc
push
cmp
mov
jmp
pop
mov
mov
and
cmpsb
push
repz
pusha
sti
xchg
mov
fmul
in
pop
mov
sbbl
cmpsl
mov
jl
mov
add
scas
sub
cmc
lds
or
cli
cli
lret
xor
aaa
mov
xchg
fs
nop
xchg
repnz
sbb
cmpb
cmp
add
into
or
shrl
xor
mov
mov
xchg
aam
add
gs
test
lock
sub
fsubs
xchg
dec
adc
out
dec
sbb
inc
insl
sbb
das
dec
sbb
std
in
add
cmp
and
aad
imul
sub
or
test
mov
les
bound
fwait
adc
inc
test
sti
mov
in
test
clc
sti
stos
xchg
sub
gs
push
xchg
je
jg
fiadds
outsl
fadd
imul
popa
add
or
imul
enter
jbe
pop
pusha
into
xchg
adc
add
lret
xchg
cmp
pop
das
gs
fwait
xor
into
cmpsl
pop
lcall
add
mov
push
ss
mov
or
gs
stos
aad
imul
push
ljmp
rolb
fdivr
mov
and
pusha
mov
mov
adc
mov
int3
sub
sahf
push
jbe
ljmp
popf
je
dec
mov
ficoms
pop
xor
ret
mov
insb
jnp
cltd
jmp
and
pop
xlat
bound
std
push
cmpsb
iret
mulb
xor
cmc
orb
sbb
lcall
inc
addr16
dec
push
xor
fbld
cmp
and
ret
outsb
orl
callw
cmp
pop
ret
daa
xchg
addb
lret
sbb
jae
enter
in
xchg
mov
sar
test
mov
or
push
jle
pop
adc
mov
pop
fcmovne
inc
lahf
repnz
fildll
pop
cwtl
jns
test
pushf
gs
fs
inc
jmp
sarl
or
adc
movsl
aaa
mov
shlb
jle
jl
mov
aam
out
iret
cli
inc
pushf
jl
into
and
add
xchg
hlt
adc
nop
pusha
rcrl
adc
icebp
leave
sub
sub
data16
xor
xor
out
sar
movsb
push
out
dec
out
ret
jl
jge
jno
mov
xchg
or
add
mov
ss
lds
fcomps
mov
aaa
stos
adc
test
push
cwtl
cld
jle
mov
jo
hlt
inc
dec
test
pusha
aad
jmp
inc
sbb
pop
loop
mov
enter
jmp
in
addr16
xor
cmp
jecxz
cmpsb
dec
roll
inc
mov
mov
int
sub
and
xor
or
and
push
imul
sarb
inc
pop
lret
inc
int3
add
int3
ss
mov
lods
add
mov
xor
test
push
jae
xor
or
lods
pushf
fs
adc
mov
jnp
test
cli
imul
scas
jmp
jbe
xor
adc
add
insl
pop
movsb
insb
xchg
fnstsw
mov
das
push
adc
sbb
stos
xlat
xchg
stos
iret
push
mov
mov
push
popf
in
dec
or
xchg
mov
mov
ljmp
lds
push
stc
mov
shlb
xor
lcall
inc
xor
lea
jle
cmp
out
sub
daa
or
mov
mov
push
xchg
in
push
popf
sub
jl
sbb
fwait
mov
loope
mov
js
push
mov
jae
aaa
enter
push
push
mov
leave
add
jle
mov
pop
lret
lods
pop
and
sbb
pop
add
test
pop
jge
fsubr
cld
addr16
pop
js
jb
adc
and
xchg
xchg
ss
mov
pop
lock
inc
and
jmp
inc
sub
dec
mov
sbb
push
nopl
mov
pop
std
or
out
xchg
outsb
lods
sub
out
cmpsl
popf
cmp
push
stos
lods
je
das
cwtl
xorl
cmp
and
lahf
push
sub
fsts
outsl
or
push
cmp
rcrb
loopne
out
xor
shrl
in
dec
imul
pusha
mov
jle
into
hlt
sbb
mov
pop
adc
call
jbe
xchg
hlt
rcrb
inc
push
cmp
jae
arpl
lods
cltd
ss
fbld
pop
xlat
adc
adc
loopne
dec
adc
out
and
cld
pushf
push
sub
jl
int3
push
test
fcomp
ret
mov
in
mov
mov
push
cli
mov
movsb
pusha
sbb
jno
mov
add
mov
sub
sbb
jge
dec
sbb
sbbb
mov
aas
or
adc
fstps
sub
inc
inc
insb
rorl
cmp
push
fbld
aad
pop
sub
push
cmc
es
into
jg
sbb
pop
shr
loop
xor
notb
sub
dec
mov
mov
add
sbb
jno
js
push
cwtl
push
mov
int3
mov
fidivrs
repz
mov
testl
daa
jl
adc
pop
add
fld1
cmc
xchg
mull
fists
mov
je
or
arpl
test
mov
mov
jecxz
arpl
sbb
iret
ret
gs
mov
dec
das
ja
xchg
and
imul
push
out
pushl
push
jb
push
cs
repz
stos
aam
cmp
ss
das
or
leave
dec
jbe
mov
loope
jge
mov
clc
cmp
push
cmp
jecxz
xchg
and
cld
pop
and
iret
stc
mov
pop
fnstsw
repnz
popa
add
repnz
mov
mov
jnp
sub
ret
inc
adc
lahf
mov
pop
aam
xor
xchg
inc
jmp
cltd
mov
mov
nop
pop
mov
jmp
jg
xor
daa
mov
jp
mov
in
jo
test
iret
push
ja
adc
notb
ffree
mov
jg
jge
pop
lods
cmp
movsb
push
sbb
pop
lret
xor
dec
lret
sub
jbe
outsb
popf
testl
mov
adc
sbb
jae
mov
icebp
fidivl
adc
inc
cmp
adc
mov
out
dec
sub
les
iret
fwait
cli
cmpsb
fistpll
inc
enter
pop
inc
push
push
mov
aaa
mov
cmc
dec
in
outsb
hlt
loop
setp
lods
sub
pop
pushl
in
sub
xlat
dec
movl
ror
leave
insl
push
jge
add
mov
add
mov
inc
push
lret
adc
in
mov
lahf
inc
dec
jae
cwtl
lahf
fxch
out
xchg
aaa
in
pop
inc
push
mov
jecxz
ffreep
stos
jl
and
stos
pop
or
vmovaps
push
imul
dec
and
fmuls
or
pop
jae
cmp
lea
mov
in
jp
je
fwait
mov
fimull
push
sub
sarb
je
mov
rorb
les
mov
or
cmc
push
fs
add
or
adc
push
xchg
ret
pop
loopne
js
lret
cli
scas
fstpl
add
fadds
mov
jo
imul
inc
aas
outsl
loop
jge
bnd
jno
cmc
mov
push
js
ffree
mov
lds
jne
out
mov
sub
xchg
jne
divl
cmp
rcl
pop
jb
mov
xchg
bound
neg
sbb
mov
cli
mov
jmp
cmp
repz
loop
sbb
loopne
push
popa
pop
scas
or
jo
stos
mov
and
pop
sbb
ror
addr16
icebp
shrb
mov
testl
lret
out
pop
inc
or
push
pop
stos
cmp
push
imul
mov
xchg
pop
hlt
std
cmp
jae
mov
lcall
sub
fldcw
push
cmp
push
test
fsts
insl
stc
adc
loope
and
adc
jno
movsb
jecxz
mov
jle
or
out
xchg
leave
xor
les
and
mul
nop
cli
test
rorb
push
push
dec
adc
in
cmp
aam
inc
pop
out
mov
lods
outsl
dec
adc
jbe
jb
icebp
or
xchg
xor
cmovle
adc
or
cs
jo
mov
jo
clc
cmp
sub
push
mov
fbld
jno
scas
or
xlat
xchg
or
mov
ret
loope
out
cmp
mov
jg
andb
adc
jmp
jae
jmp
es
test
aas
pop
mov
mov
aaa
repnz
add
xchg
push
shlb
jecxz
mov
pop
xchg
inc
sub
addr16
xchg
sar
nop
test
popf
dec
pop
adc
adc
insl
adc
stos
xchg
push
cli
fstps
cmp
fs
sbb
cli
pop
or
pop
fiadds
out
inc
scas
arpl
test
or
mov
imul
xchg
mov
bound
jne
popf
xchg
call
enter
mov
mov
pop
add
inc
daa
mov
sub
mov
or
and
notl
rol
pop
jecxz
and
les
jp
loop,pt
xor
lret
das
inc
test
cld
cmp
cmp
lods
add
pop
sub
push
cmp
pop
ds
and
dec
stc
and
push
sub
sbb
jnp
xchg
mov
jmp
movsl
iret
xchg
repnz
sti
inc
scas
int
pop
or
mov
cmp
adc
ret
imul
adc
sub
mov
mov
insl
cltd
fimull
sub
nop
or
in
loop
decl
and
fimuls
test
imulb
push
test
xchg
mov
cmp
loop
or
mov
sub
aas
std
call
mov
in
pop
xor
xor
jbe
xchg
cwtl
cmp
mov
dec
mov
xor
mov
fdivl
xor
mov
fsubs
popf
lods
pop
push
push
bound
imulb
inc
inc
adc
in
or
je
movsb
orl
shll
je
mov
jl
mov
lods
pop
cmp
fnstsw
mov
test
cmp
push
mov
out
sub
arpl
ja
outsb
in
xor
movsb
stos
xchg
and
fidivrs
sbb
add
dec
call
divl
jno
ret
mov
xchg
xor
adc
ljmp
push
mov
mov
insb
mov
pop
mov
sar
shll
mov
and
aas
repz
xchg
inc
adc
add
outsl
das
fisttpll
or
dec
inc
dec
lret
add
inc
inc
sbb
dec
adc
cmp
mov
stos
popf
stos
sbbb
jge
jns
in
xor
jns
inc
or
stos
pop
jecxz
test
mov
loop
inc
xchg
pop
mov
and
pop
lcall
cmp
jne
jns
repz
jo
xor
outsb
mov
dec
fcoms
jns
rcll
add
mov
mov
mov
cltd
movsl
out
add
js
sbb
movsb
out
jle
std
xor
sub
jmp
dec
in
jb
pop
add
fsubr
mov
inc
test
mov
scas
sti
mov
add
divb
mov
inc
push
cmpsl
shlb
dec
mov
xchg
cs
jae
dec
stos
xchg
rorb
leave
ljmp
es
cmp
out
scas
cmp
popa
push
and
in
aam
rorb
out
imul
fwait
mov
scas
mov
dec
mov
pop
repz
sbb
sarb
push
or
out
jmp
dec
dec
push
call
or
dec
int3
jecxz
int3
inc
lods
mov
sbb
and
sbb
sahf
outsb
xor
jnp
dec
mov
inc
ja
and
mov
push
push
out
ja
outsl
aaa
and
cwtl
pop
fstpt
cmpsb
imul
push
aad
jge
add
fists
mov
ja
mov
or
mov
or
loop
les
xor
fwait
daa
pop
int3
aad
pop
fstpt
and
push
add
jmp
sub
mov
xor
addb
mov
cwtl
mov
mov
test
sbb
fwait
mov
sbb
scas
or
pop
movsl
rcrl
fucomip
in
adc
mov
mov
and
dec
sbb
push
xor
aam
sti
daa
mov
stos
dec
push
lea
clc
pop
and
cmp
lds
push
je
jle
pop
pop
mov
jle
insl
push
and
out
out
mov
jp,pt
sbb
inc
jns
loopne
bound
repnz
pusha
or
and
ljmp
aas
xor
inc
and
inc
dec
shlb
das
push
leave
inc
mov
pop
out
mov
loopne
cld
adc
jno
and
or
imul
vmaskmovdqu
loope
imull
movsl
cmp
popf
mov
ljmp
pop
clc
inc
rolb
sub
ret
adc
mov
mov
inc
aam
in
jbe
in
jae
pushf
dec
lock
popf
out
jne
jbe
popa
fcompl
adc
daa
mov
push
mov
divl
add
cltd
and
or
bound
push
sub
push
inc
adc
mov
mov
aad
push
lea
sar
ja
push
mov
movsb
popa
aad
enter
adc
cmp
bound
ficoml
aam
in
data16
sub
mov
sahf
pop
out
mov
inc
inc
sub
or
test
jbe
rcll
div
adc
mov
mov
xlat
adc
xor
pop
push
xchg
ljmp
out
int
rcll
sub
sub
push
xorb
stos
outsl
ss
mov
add
pop
inc
pop
and
jo
jne
scas
and
dec
push
and
adc
sbb
mov
aad
cmp
lret
sub
and
out
sbb
out
xchg
clc
fsubrs
sbb
cmc
sub
iret
lods
cmp
stc
inc
sub
dec
bound
pop
jecxz
popa
mov
xor
subl
adc
cmp
mov
sbb
fistl
inc
mov
sarl
repnz
loop
pop
shrl
adc
cld
jp
roll
fadd
fistl
and
cmp
xor
mov
cmp
out
ljmp
push
cwtl
into
nop
add
rcrb
sbb
inc
rclb
in
stos
mov
aad
aas
jb
push
fistps
push
mov
scas
cmc
adc
lcall
shl
xchg
push
cmp
pop
fisubrl
dec
or
pop
push
rcrb
cmc
aas
push
xlat
mov
mov
mov
rolb
rclb
test
cmp
scas
packssdw
inc
dec
jge
inc
js
pop
and
mov
push
pop
add
cmp
out
xchg
adc
repnz
jae
adc
pop
outsl
cltd
iret
repz
test
add
nop
sbb
std
rcrb
cld
jmp
mov
or
lock
pop
pop
nop
call
inc
icebp
out
or
cld
insl
jae
or
fmulp
adc
sbb
lea
xchg
xchg
pop
test
push
out
sbb
in
lock
iret
xor
xor
mov
scas
scas
xor
orl
iret
stos
rcll
mov
xchg
sbb
icebp
ficoml
dec
arpl
mov
mov
mov
scas
fs
in
pusha
out
pushf
inc
jae
push
repnz
jnp
popa
cld
hlt
xchg
mov
jae
out
pop
scas
xchg
fcmovu
pop
add
sbb
inc
fs
push
in
mov
sbb
jp
push
inc
jmp
cmpl
sahf
in
mov
xchg
inc
andb
das
mov
xor
pop
add
inc
cmpl
mov
sbb
push
or
cmp
loope
xchg
add
push
out
dec
xchg
push
cltd
jg
or
push
sub
fdivs
sub
xor
data16
jb
jg
inc
or
mov
fimuls
sarl
ljmp
add
dec
or
add
jmp
xchg
inc
xor
add
ds
mov
loopne
cmc
dec
adc
adc
adc
lods
out
mov
or
sbb
mov
andb
imul
push
cmc
xchg
mov
imul
fs
aad
imul
mov
cwtl
sub
cmp
dec
pop
insl
popf
pop
insl
add
lea
pop
jbe
inc
sbb
cld
sbb
add
pop
ja
in
test
out
clc
sbb
xchg
xor
lea
and
adc
test
adc
and
gs
adcl
or
add
iret
mov
inc
push
andl
inc
cli
adc
dec
in
test
pusha
mov
repnz
repz
mov
xchg
in
dec
cmp
jae,pn
into
imul
ficoml
pusha
or
push
jle
scas
jbe
fidivrl
push
and
sbb
rol
fs
fsts
cld
ror
scas
and
jae
pop
xchg
pop
imul
scas
xchg
fdivrs
xchg
mov
sbb
lret
add
jp
pop
dec
cmpsb
ss
and
or
addb
xchg
xchg
clc
pop
push
sbb
adc
sub
inc
pop
lahf
mov
jecxz
jmp
mov
pop
mov
test
stc
pop
imul
pop
mov
sarl
shlb
sbb
and
mov
lret
popa
xchg
or
xchg
add
fistpll
je
in
fdivrs
mov
scas
xchg
leave
add
ss
mov
bound
aam
push
jae
cmp
jmp
jns
mov
outsb
test
andl
fs
jne
in
ljmp
cmp
cvtps2pi
push
cmpsb
adc
jmp
sbb
fimuls
icebp
sbb
lea
or
fnstcw
inc
inc
int
cmp
mov
or
add
outsb
xchg
gs
sbb
pushf
add
aaa
insb
cwtl
sub
js
pusha
test
push
jbe
js
pusha
and
in
aam
mov
fwait
sbb
bound
xchg
ljmp
push
inc
loope
push
clc
enter
push
xchg
jns
addb
mov
or
xor
xor
mov
adc
adc
std
aas
js
push
cmp
cmp
push
mov
andb
push
or
push
pop
xchg
rolb
lock
or
pop
xor
arpl
dec
insb
loopne
cmp
daa
sti
nop
out
das
insb
push
jl
pop
xor
insl
mov
adcb
push
mov
hlt
jmp
push
pop
ds
adc
inc
loopne
cwtl
push
and
les
aad
jno
jp
add
mov
js
outsb
mov
mov
mov
push
jecxz
into
adc
jnp
push
dec
mov
jmp
out
xor
cmp
fisttps
fs
ucomiss
imul
pop
xor
jbe
imulb
stc
xchg
outsb
inc
and
orb
push
je
dec
data16
dec
cmp
aas
inc
iret
push
ss
loop
data16
mov
imul
lods
inc
pop
inc
xlat
mov
lods
into
stos
cmp
loopne
xor
push
pusha
les
loopne
xorb
mov
xchg
dec
adc
in
nop
js
push
jne
call
dec
sti
push
imul
mov
aaa
pop
xor
jbe
push
fstpl
lahf
xor
lea
pushf
xchg
mov
pop
mov
stos
mov
inc
rcl
pop
popa
xchg
and
jmp
outsl
jae
ficoms
add
xor
out
adc
lret
mov
popf
ret
mov
mov
iret
ds
inc
mov
movsb
out
sub
sub
lds
mov
dec
test
stos
dec
std
mov
mov
nop
mov
testl
fnstenv
dec
jle
add
dec
xchg
add
fwait
push
mov
fmull
mov
sti
hlt
push
loopne
loope
pop
pop
mov
dec
cld
repnz
pop
ret
mov
xor
pop
aas
insl
mov
mov
loopne
xchg
push
mov
pop
inc
pop
outsb
fs
outsb
add
push
dec
xchg
inc
sub
icebp
inc
pop
aad
js
cmp
pop
gs
push
shrb
gs
into
push
mul
jo
xchg
mov
xchg
sbb
insb
lock
xchg
add
frstor
into
outsl
int
repz
push
push
js
fidivl
cmp
ljmp
xlat
sbb
sbb
mov
jb
nop
xor
ret
imul
and
jae
int
sbb
repnz
inc
cmp
xchg
and
jg
movsb
pop
cld
xchg
or
jnp
cwtl
sti
mov
subb
xor
insl
push
push
cmpsl
or
jg
xor
scas
into
pushf
les
adc
jecxz
gs
outsl
inc
je
dec
pop
andl
pushf
fmulp
repz
aad
bound
sub
mov
movsb
ds
fwait
or
inc
loopne
test
ret
movsl
mov
adc
push
sub
cmpb
xchg
cmp
sbb
cmp
cmpsb
ss
rcrb
inc
jecxz
mov
dec
fwait
inc
push
fisubrl
xchg
add
add
les
in
subb
mov
sar
or
out
adc
in
ja
test
jae
imul
xchg
dec
cld
rolb
xchg
pop
cmp
lds
dec
pop
push
mov
xchg
cltd
cmp
lods
cmp
cmp
andb
iret
inc
dec
xor
inc
daa
mov
push
push
aaa
jecxz
pushf
sbb
xor
cltd
shrb
lds
pop
or
dec
test
push
xchg
aad
imul
or
mov
lock
std
scas
sub
adc
gs
movsb
add
push
xchg
jbe
outsl
insb
cwtl
jo
xchg
inc
cmpsl
adc
jg
adcb
dec
fcmovnb
lret
mov
wrmsr
mov
aam
dec
repnz
repz
sbb
mov
pop
stos
insl
mov
lds
jle
aam
sarl
pusha
sub
aas
mov
dec
push
push
popf
div
and
jne
push
xlat
lds
dec
gs
mov
pop
sbb
xchg
push
or
xor
icebp
cli
into
shrb
jl
mov
lret
cs
in
aam
ret
ud1
mov
mov
push
dec
xor
pop
ret
jbe
in
xchg
jo
jl
in
inc
hlt
cmp
les
gs
xor
das
imul
dec
sbb
adc
fbstp
jb
pop
js
std
cmp
sub
push
cmp
jno
pop
loop
out
or
js
ss
enter
mov
push
aas
dec
sbb
sbb
jg
ja
stc
cmp
add
xchg
xchg
xchg
mov
das
imul
add
add
sbb
lret
sub
or
sub
and
and
aad
mov
leave
mov
sub
xchg
push
ret
fldenv
adc
push
or
sbb
dec
add
sbb
sub
out
jmp
repz
push
xchg
sbb
cmp
pop
arpl
test
gs
mov
outsb
rcll
outsb
cltd
test
and
mov
mulb
mov
push
bound
cs
cmp
pop
adc
push
xchg
lea
xor
stc
imul
lcall
test
cmc
test
and
stc
aas
clc
inc
xor
fcomip
sbb
and
fstpt
and
sub
push
cmpsb
je
cli
sub
shrb
or
lret
inc
popa
rcl
shll
cld
sbb
into
rclb
movsl
test
push
scas
push
mov
sbb
push
fstpt
loope
mov
cwtl
enter
and
loopne
xchg
push
ret
inc
sub
cwtl
jae
fbld
jle
mov
xchg
pop
je
and
mov
or
xor
jns
cli
popf
fucom
and
xlat
pop
push
push
inc
lods
adc
bound
xlat
loopne
subb
mov
pop
or
lret
sbb
mov
fsubrl
testb
adc
shll
scas
lock
mov
ficoms
popf
outsl
lcall
dec
leave
ja
pop
inc
cwtl
inc
or
fisubl
mov
inc
mov
sub
into
mov
pop
inc
mov
mov
and
xchg
jb
scas
sub
leave
sahf
lds
cmp
push
lods
call
xchg
bound
inc
cwtl
mov
in
insb
mov
insb
stc
adc
daa
cmp
xor
insl
jno
pop
mov
daa
sbb
lods
imul
clc
xchg
cltd
jns
cld
movsl
loopne
xor
dec
popf
dec
mov
sub
cmc
cmpsb
xor
sbbb
vpunpckhwd
mov
or
pop
leave
mov
lds
lret
loop
test
jmp
je
sub
jge
ffree
add
and
xor
jo
dec
or
inc
add
aad
fbstp
inc
cmpsb
pushf
sarb
xorb
cmp
or
repnz
movsl
jmp
mov
mov
xchg
adc
push
push
es
xorb
jo
lahf
lcall
out
test
dec
faddl
out
xor
pusha
cmp
xchg
sbbl
sub
daa
outsl
clc
pop
and
and
adc
pop
or
or
inc
test
movsb
ds
aaa
and
enter
stos
mov
push
loopne
scas
notb
jnp
cmpl
mov
ss
lahf
mov
inc
loope
push
fdivl
andb
fsubs
xchg
jnp
xor
in
xor
ret
inc
dec
jno
scas
xchg
mov
fiadds
mov
mov
stc
ret
jb
and
lea
xchg
loopne
mov
jno
arpl
stos
xchg
sarl
inc
pop
inc
mov
clc
les
ret
clc
xchg
test
jae
ljmp
cli
push
mov
test
pop
in
mov
arpl
mov
shlb
ffree
jl
movsb
pop
or
inc
jg
scas
subl
or
dec
push
add
adc
lock
frndint
das
mov
xor
sbb
outsl
adc
jmp
add
ret
cmp
pusha
mov
xlat
lods
and
mov
and
aam
repnz
loope
pop
cmp
pop
push
xor
mov
vmovaps
aad
dec
ja
jnp
mov
mov
jne
xchg
xlat
fsubl
pusha
dec
cmpsl
repz
scas
out
js
int
add
xor
aad
dec
xchg
sbb
xor
inc
out
jne
pop
jp
cmpsl
jno
fwait
adc
addr16
jnp
add
inc
xchg
lock
xchg
jg
sbb
divl
sbb
xor
in
add
aam
sub
add
into
movl
jmp
lret
jnp
shl
hlt
pop
jge
addr16
push
adc
xchg
sub
mov
clc
jl
pop
out
cltd
and
insl
insb
aad
adc
adc
dec
lock
or
jae
adc
pop
add
out
ja
negb
sbb
repnz
push
inc
mov
sbb
loopne
sahf
test
jne
sub
xchg
sbb
sub
sbb
xchg
mov
mov
xor
inc
jmp
sar
imul
mov
inc
aam
les
jb
xchg
dec
xor
or
jno
sub
sbb
cmp
cmp
mov
add
mov
push
pop
out
fwait
sbb
mov
es
aas
jns
pop
aam
andb
es
cmp
jp
clc
lea
sar
cmp
dec
addr16
sbb
jg
in
jbe,pt
inc
test
jbe
mov
adc
roll
inc
dec
adc
int3
pop
inc
mov
movsb
jb
leave
push
adc
enter
xchg
mov
sbb
xchg
cli
jns
fs
adc
orb
mov
pop
je
add
sub
gs
push
cli
and
out
rclb
mov
xchg
out
cmp
xchg
ljmp
add
popf
sahf
addr16
fimuls
test
dec
and
push
push
out
cmpsl
mov
cmp
pop
xchg
scas
shl
aam
sbb
out
stos
clc
out
shl
mov
in
add
inc
pop
cmpsb
cmp
psubusb
and
gs
push
rorl
xor
fsubrs
push
fdivrl
test
fistl
mov
mov
pop
dec
xchg
bound
out
jge
and
push
lahf
cli
jbe
jg
bound
in
xor
sub
fidivrs
addr16
sbb
outsl
repz
in
inc
push
cmpsl
adcb
test
push
in
sub
and
loope
sbb
jo
and
sahf
mov
sub
push
cs
call
push
adc
push
sub
mov
test
cmpl
je
xor
bound
push
sti
dec
mov
das
mov
movsb
fwait
pop
inc
imul
mov
lock
xchg
lret
cmp
mov
pop
cwtl
popf
dec
or
cmpsl
or
js
leave
sbb
dec
xor
test
push
sub
pusha
popa
pop
pop
lcall
and
push
or
xorl
push
loop
push
mov
fistpll
adc
cmp
ja
jecxz
mov
negb
scas
jmp
ss
adc
daa
pusha
cmpsl
in
fsts
leave
out
mov
sti
mov
inc
sar
xchg
daa
pushf
and
mov
faddl
insb
out
fs
and
sub
fdivrl
push
movswl
lds
mov
inc
sarl
push
fstps
aas
lret
insl
adc
jne
xchg
and
sub
jne
xlat
jb
xor
push
pop
stc
mov
lds
and
flds
andb
mov
into
repz
cmp
loope
pop
pop
mov
sub
push
sub
test
xchg
out
push
pushf
or
jnp
out
cmp
jne
fidivrl
mov
shlb
jns
push
sbb
add
fdivrl
adc
jp
jg
imul
pop
hlt
movsb
and
dec
mov
icebp
mov
test
ss
pop
stos
ret
inc
pop
jecxz
dec
lret
nop
fdivl
popa
add
stos
inc
out
repnz
fcoml
out
loopne
mov
lds
cs
inc
insl
es
adc
fisubrs
ret
mov
inc
in
cli
fidivrl
inc
test
cmp
pop
and
dec
ret
sbb
cltd
cmp
sub
jp
ja
mov
mov
mov
fiaddl
pusha
xchg
test
repz
inc
sub
dec
sti
arpl
enter
adc
mov
shlb
mov
mov
xlat
lock
inc
jo
and
xchg
xlat
dec
outsb
sbb
enter
mov
aaa
push
mov
sub
dec
or
mov
or
mov
pop
daa
aam
mov
pop
mov
popf
and
aas
hlt
push
push
int
add
loopne
push
rolb
and
imul
ffree
lahf
lock
test
sub
in
popa
dec
sbb
xchg
sbb
add
or
jmp
and
out
jne
fwait
xchg
push
faddp
divb
fwait
pop
aam
cld
xor
push
mov
push
add
adc
pop
fwait
cs
push
ja
push
xor
loop
leave
cli
jbe
cmpl
cld
ficompl
push
bound
aam
dec
pop
outsl
nop
mov
jge
add
aam
adc
mov
vmread
inc
fwait
stc
stos
adc
add
sub
pop
ret
adc
cmc
repz
add
and
or
int3
mov
dec
and
lcall
mov
mov
bound
aaa
sub
adc
adc
xor
mov
inc
daa
in
popa
loope
sub
test
pushf
out
scas
pop
pop
sbb
stos
push
push
movsb
push
cwtl
jge
ss
int
sub
fwait
sbb
pop
mov
jg
addr16
push
jns
pop
mov
gs
fistl
in
adc
adc
xadd
sbb
insl
jecxz
movsl
dec
push
es
test
cmpsl
test
add
jl
iret
adc
push
jge
mov
xor
ja
and
and
mov
sbb
push
loopne
push
jne
xchg
addr16
mov
or
sbb
fnclex
sbb
nop
push
and
pop
stos
aas
add
xchg
rcll
shl
pop
lock
xor
iret
push
rorb
mov
mov
or
out
sbb
test
cmp
dec
dec
pop
inc
ss
inc
mov
ret
dec
dec
jno
pop
shll
fcomp
add
pop
or
xorl
sbb
cltd
lcall
cmp
jp
push
xchg
and
jg
dec
or
or
mov
or
mov
pavgw
popa
mov
fiadds
sahf
jg
cmp
jge
xchg
xor
lds
and
lock
adc
sub
or
ficoml
and
and
pop
sti
push
stos
cmp
ja
hlt
mov
cmp
pop
popa
inc
in
loop
outsb
sbb
add
loopne
push
push
icebp
imul
push
mov
jnp
dec
xlat
or
mov
sbb
and
mov
adcb
ret
xor
mov
test
jmp
dec
mov
mov
test
pop
push
loope
insl
test
leave
inc
in
mov
add
cli
js
push
enter
dec
mov
in
xchg
jnp
clc
mov
out
sahf
stc
jg
pushf
nop
fisubs
addl
sub
add
mov
adc
fwait
hlt
ret
mov
dec
pop
jb
push
add
movsl
xor
jno
push
cmp
mov
inc
lret
addb
out
inc
out
cmpl
fxrstor
shl
push
test
sbb
out
into
or
inc
cmp
and
addb
gs
stos
push
and
loope
push
mov
inc
push
sub
shll
in
pop
dec
loop
cmp
stc
jnp
dec
push
mov
repnz
mov
rclb
ja
movsl
sarl
call
sahf
sub
pop
pusha
aaa
pop
hlt
dec
cli
adc
xchg
and
push
push
lods
push
mov
dec
jmp
or
loopne
lahf
and
jnp
test
add
fs
mov
push
das
mov
adc
push
mov
popf
mov
dec
ljmp
lret
ret
jbe
outsb
adc
aam
scas
test
movb
xorb
jecxz
add
fsubl
adc
iret
jle
sbb
aaa
pop
or
fstl
xor
lock
aad
mov
mov
adc
leave
or
adcl
out
arpl
nopl
push
imulb
jp
sbb
xchg
decb
or
cmc
push
dec
and
ret
popa
jns
add
lahf
or
push
push
popf
testl
and
adc
mov
xor
pushf
mov
mov
push
sarb
int3
jecxz
adc
xchg
push
xlat
adc
aad
mov
jecxz
add
test
addr16
push
ja
insl
mov
idivl
mov
adc
les
frstor
mov
push
arpl
pop
idivl
jl
cmp
sub
out
xor
lcall
adc
push
push
clc
fdivp
lret
jl
mov
imul
push
xor
inc
dec
cmpsl
aas
mov
stos
sbb
cmc
cmpsb
loop
mov
das
daa
push
or
fsubs
mov
xor
mov
ret
xorl
dec
mov
mov
in
pop
sub
mov
xor
push
jmp
pop
or
ljmp
in
push
ja
sti
data16
push
or
ja
dec
mov
ficoms
cmp
scas
jbe
mull
ljmp
repnz
xchg
lds
jl
add
inc
dec
rcr
mov
xchg
sbb
mov
sub
leave
mov
out
test
addr16
add
int3
jl
jb
push
iret
pop
pop
jg
cmpsl
repnz
cltd
pop
or
scas
shrb
add
push
pop
or
ret
or
out
inc
xor
add
xchg
sub
in
sbb
cmpsb
scas
aad
push
mov
and
push
pop
bound
jg
lds
aad
mov
inc
icebp
cmp
inc
cld
add
iret
or
xchg
scas
fldcw
into
stos
lret
out
int3
cmp
popa
aaa
push
mov
dec
movsl
imul
stos
jo
dec
data16
sub
lret
jmp
add
dec
push
insl
jle
imul
popf
adc
or
cwtl
xchg
or
xor
add
aam
push
push
lock
pop
in
rcrb
sub
mov
xor
ret
xor
inc
jle
xor
sbb
push
push
xor
xor
mov
pop
xchg
repnz
sti
popf
inc
and
adcb
dec
mov
mov
dec
std
xor
jle
cmp
xor
cmp
sbb
inc
iret
jbe
stos
loop
pop
imul
or
push
xchg
test
loop
inc
or
loop
dec
scas
mov
int3
or
mov
add
push
add
out
cmp
pop
pop
jne
jb
dec
loop
dec
push
jg
lret
outsb
out
and
mov
in
adcb
gs
mov
or
jbe
pop
addr16
mov
nop
das
inc
int3
lret
out
or
outsb
sbb
sub
cmpsb
lcall
aad
add
in
jne
stc
push
pop
pusha
or
inc
mov
movsl
xlat
jecxz
ss
push
mov
lods
or
add
mov
xor
scas
sub
hlt
or
arpl
push
sarb
mov
insb
dec
ljmp
or
enter
inc
pop
xor
mov
pop
in
sbb
pop
dec
ret
xlat
push
stos
dec
in
pop
jge
pop
mov
outsl
int3
dec
xchg
push
bound
gs
cmpsl
jb
loop
jb
fdivs
mov
pop
push
jle
mov
int
cmp
leave
sub
ja
xchg
repnz
in
cmp
sbb
scas
add
sbb
sbb
daa
pusha
test
push
mov
rol
rcrb
push
pop
cmp
mov
push
js
js
cmp
push
inc
dec
mov
mov
cmp
shrb
loopne
jb
cmp
das
mov
xchg
insl
pop
adc
dec
xchg
ret
stos
mov
pop
push
cmp
enter
push
mov
adc
adc
or
jl
movsb
in
movsl
aad
fnsave
int3
lods
adc
add
sti
popa
jns
in
mov
lret
sbb
xor
sti
mov
cmp
in
push
fistl
pop
out
cmpsb
mov
inc
movsl
inc
xchg
lahf
lds
mov
sbb
into
add
and
pop
insl
shll
sub
dec
lods
add
mov
mov
jecxz
cwtl
into
aad
mov
jmp
lahf
dec
xchg
mov
dec
sti
sahf
xor
shll
inc
and
push
sub
in
jl
cmp
xchg
push
push
cwtl
les
adc
iret
and
iret
std
int
sub
sbb
rcll
nop
push
ftst
mov
movsl
outsl
roll
xor
pop
jle
pop
in
aaa
push
mov
adc
jb
push
fistpll
push
push
imul
in
fldenv
dec
mov
mov
pop
adc
insl
lock
sub
push
in
fadd
and
aam
sub
xchg
sbb
iret
and
in
mov
in
inc
and
xchg
icebp
or
sbb
ret
cwtl
push
sbb
scas
ljmp
sub
negb
mov
loop
stos
int3
push
jnp
sbb
cmpsl
adc
imul
sbb
push
fwait
sbb
mov
ss
xor
and
mov
or
jb
dec
sarl
outsl
in
push
pop
fs
lea
xor
or
leave
dec
inc
dec
dec
pop
scas
imul
lods
jo
and
push
adc
andl
cmp
pop
mov
mov
xor
rorb
insb
aad
jnp
mov
bound
jmp
or
xchg
xor
and
test
cmpsl
imul
mov
lahf
inc
movsl
xor
mov
sub
mov
je
or
sbb
xchg
sbb
fwait
xchg
mov
cmp
cmp
sub
shll
inc
sbb
push
cmp
loope
lock
mov
arpl
inc
je
mov
mov
xlat
movb
add
mov
jl
inc
ret
cwtl
es
inc
mov
out
pop
pop
xlat
xlat
adc
call
dec
inc
aad
fbld
cmp
movsl
xchg
jae
mov
jno
push
add
outsl
cli
pop
stos
movl
test
mov
addr16
es
pop
mov
mov
dec
xor
xchg
pop
mov
and
orl
lods
or
or
pop
mov
or
lahf
pop
mov
and
aad
lcall
xor
xor
clc
cmc
fldcw
lds
pop
icebp
inc
in
pop
je
inc
into
mov
mov
pop
outsl
cltd
stos
cmpsb
in
mov
imul
adc
jae
in
in
sbb
add
aaa
mov
aas
push
jae
int
fwait
inc
das
xor
adc
aaa
clc
or
enter
pushf
in
iret
inc
mov
pushf
inc
inc
add
dec
aam
jl
shlb
mov
inc
cld
or
in
cld
xchg
je
sub
adc
mov
mov
jmp
mov
cld
lock
push
cli
movsl
pop
out
pop
outsl
pop
lods
xchg
xor
test
inc
adc
in
jg
nopl
mov
into
imul
repz
out
sub
aad
cmp
orl
fldln2
xchg
pop
xchg
mov
dec
lods
dec
loope
and
ret
mov
add
mov
jb
add
imull
pop
cltd
inc
mov
out
jnp
mov
mov
mov
xchg
push
stos
push
ljmp
mov
rcr
clc
sub
dec
xchg
xor
xchg
setbe
cs
test
fwait
push
sub
dec
and
xchg
push
pop
lock
in
into
jle
movsl
pop
inc
pop
popf
imul
cmp
mov
mov
imul
dec
int3
pop
mov
imul
dec
stc
cmpsb
sub
mov
call
int3
mov
mov
mov
enter
add
sbb
pop
inc
lds
cltd
stos
idivl
mov
cmc
add
push
jg
mov
mov
adc
lock
daa
bound
xchg
mov
repnz
mov
dec
push
lret
scas
mov
push
xor
jmp
jno
mov
sbb
std
leave
data16
xchg
push
sbb
rclb
rcll
mov
fmull
and
movsb
dec
imul
jb
xor
scas
push
aas
jmp
dec
xchg
popa
jae
pop
in
sahf
pop
into
mov
sbbl
mov
lahf
jle
fiaddl
lods
cmp
movsb
out
movsl
ja
mov
xchg
mov
mov
or
fucomp
aad
sub
pop
adc
imul
icebp
dec
push
mov
pop
js
movsl
rclb
ror
shl
fstpl
cmpsl
shrl
ror
cltd
iret
xchg
adc
adc
xor
aaa
sbb
push
stos
jnp
cmc
mov
jmp
inc
cs
xchg
stos
cmp
xlat
adcl
hlt
cmc
and
hlt
sub
push
fbld
mov
xchg
cmp
pop
xchg
loopne
icebp
mov
jmp
fwait
push
ja
js
cmp
pop
dec
sbb
insl
mov
nop
mov
addr16
mov
sarb
rcll
jnp
repnz
dec
subl
jns
mov
sub
je
pop
outsb
lcall
lcall
dec
fidivs
cli
movsb
sub
cmp
into
pop
into
out
aam
inc
mov
arpl
lahf
ret
repz
and
mov
inc
loop
push
mov
fs
mov
adc
mov
xor
mov
mov
xchg
in
lds
jae
andb
inc
scas
cltd
xor
pop
jecxz
mov
cmpsb
nop
or
dec
int3
lcall
push
cltd
mov
fdivrl
cs
popa
push
shr
inc
and
inc
push
push
push
imulb
fistpll
sbb
cld
scas
sub
out
sbb
pop
or
fisttpl
and
xchg
fists
in
inc
into
pushf
shll
lcall
inc
xchg
ret
shll
ss
fiadds
jg
stc
push
lret
movsl
test
adc
xor
in
sahf
mov
dec
ja
cltd
mov
mov
ljmp
mov
add
push
jns,pn
pop
jne
or
or
lods
sbb
loopne
insl
hlt
fdivrl
adcb
add
inc
arpl
adc
and
mov
pushf
bound
or
xor
mov
dec
ljmp
or
out
je
xchg
cmp
cld
ds
popa
dec
jge
mov
sub
or
leave
lea
mov
dec
addr16
xchg
idiv
loopne
negb
lds
or
dec
es
sbb
movb
inc
lcall
test
cmc
adc
jg
and
bound
fcomps
cs
fcompl
into
cwtl
dec
outsb
dec
sbb
add
mov
xor
nop
iret
ret
dec
and
outsl
fs
cmp
sub
and
hlt
add
add
sub
lds
xor
sti
es
mov
sbb
mov
out
inc
repnz
hlt
sbb
decb
jecxz
dec
mov
shrb
push
adc
xor
sbb
test
aaa
cs
outsl
out
sbb
cmpsb
xor
dec
mov
imul
fsubrl
or
fidivrs
cwtl
sahf
aaa
repnz
jne
jno
mov
sub
mov
push
push
xor
insl
mov
scas
cltd
movsl
test
inc
mov
nop
das
das
sti
inc
mov
mov
sbb
add
cli
test
inc
imul
mov
jae
push
sbb
mov
and
lret
xor
mov
cmp
add
inc
cmc
and
or
lods
inc
fsubs
cmp
addr16
mov
mov
xchg
push
lcall
cmc
push
xchg
pop
in
lcall
mov
es
int3
or
xor
push
popa
xchg
add
pusha
push
or
rcrl
sbb
sbb
js
jle
and
mov
dec
out
xor
mov
push
pop
sub
test
xor
adc
loopne
push
push
pop
cmp
paddsb
fs
jmp
inc
test
add
shr
std
inc
xchg
gs
sbb
jge
out
push
repz
fisubs
addr16
stc
sub
mov
icebp
jnp
dec
ljmp
push
add
fldenv
sbb
addl
int
cwtl
pushl
and
shlb
cmp
cmp
inc
push
pop
push
push
jl
push
enter
dec
xchg
ret
cwtl
lret
aas
jns
imul
cmc
pop
std
in
or
pop
das
mov
js
mov
ret
dec
mov
and
adc
rcrb
scas
add
popa
imul
test
push
nop
aaa
mov
mov
pop
out
leave
aaa
cmp
imull
je
xor
or
mov
lret
push
push
adc
imul
test
mov
fistpll
cli
jmp
stos
jnp
mov
mov
xchg
idivb
mull
dec
xchg
lret
mov
and
shrl
bound
jmp
jae
and
and
dec
mov
fisttpll
lret
out
dec
repz
loope
es
inc
pop
movsl
lret
inc
sti
jg
jb
lahf
xchg
inc
enter
xchg
shrb
adc
or
mov
popa
sbb
push
xchg
cld
and
jp
xor
jae
sbb
pop
push
sbb
mov
insl
mov
xor
insb
loope
lahf
sub
call
inc
scas
in
lcall
sub
dec
push
lea
add
or
and
stos
notl
dec
or
js
cmp
pop
pop
stos
mov
ret
cmp
pop
aas
xor
shr
xor
push
jns
insb
imul
out
mov
add
sbb
lock
mov
movsl
add
jecxz
push
pop
scas
testb
and
dec
movsb
std
or
adc
movsb
enter
xorb
repnz
mov
fstpl
iret
jle
dec
xor
pop
jl
xchg
sahf
test
or
sbb
ss
loop
push
mov
cmp
iret
in
xchg
mov
jne
jecxz
les
sbb
fdivrs
loope
lods
adc
sbb
loop
test
pop
fsubs
mov
push
dec
mov
push
das
adc
mov
jmp
pop
jnp
inc
xor
sub
hlt
push
js
cld
sbb
arpl
push
inc
int
push
add
lods
push
jg
shlb
mov
imul
inc
push
hlt
aam
sahf
int3
mov
sbb
sub
dec
shrb
sub
scas
push
and
outsb
iret
xlat
inc
repz
push
iret
movsb
xchg
xchg
cli
jbe
rorb
inc
sti
arpl
lods
or
pop
add
lcall
std
in
push
por
fidivrs
pop
sbb
adc
push
mov
or
test
push
dec
cmp
xchg
faddp
cmovle
into
xchg
jbe
and
sub
jno
lret
test
fs
push
dec
mov
stc
mov
js
fisubrl
sbb
shrb
lock
push
in
cli
pushf
xchg
cmp
dec
adc
adc
scas
ret
pop
inc
push
ds
pop
mov
pop
inc
jp
adc
aas
lea
dec
push
loope
and
ret
movsl
cmp
lock
push
and
adc
jno
adc
popf
stos
sub
inc
push
xor
loopne
sbb
ret
xchg
jnp
rclb
enter
sahf
push
inc
dec
pop
pop
or
fistps
pop
dec
cmp
sarl
aad
outsl
outsl
dec
das
jl
sbb
xchg
or
repnz
jg
or
push
mov
int3
jge
popf
xor
mov
mov
imul
ss
in
jnp
dec
scas
int3
xor
inc
clc
mov
nop
dec
pop
sub
mov
ret
sub
add
out
fs
xor
sub
cs
arpl
inc
cmp
mov
pop
push
dec
push
xor
xchg
imull
test
mov
mov
lret
dec
mov
jp
call
adc
pushf
in
cmp
xchg
lods
mov
cmpsb
sbb
pop
cmp
aas
mov
test
lahf
push
or
imulb
xlat
test
test
mov
dec
div
push
jne
dec
jecxz
cmc
ljmp
into
and
les
jle
stc
jo
inc
xchg
outsl
adc
cmp
mov
cli
into
adc
push
dec
inc
daa
xchg
mov
hlt
adc
mov
mov
xchg
fldlg2
xor
cmp
push
jp
outsl
testb
imul
push
push
push
cmpl
lods
negl
cmpsb
inc
cltd
vsqrtpd
pushf
scas
int3
fwait
jp
adc
addr16
in
stos
out
lea
stos
mov
stos
inc
popa
sbb
lock
int3
push
mov
repnz
outsl
ret
mov
add
or
test
dec
aaa
stos
push
xchg
repnz
mov
add
lcall
dec
sub
xorb
xlat
dec
sar
push
dec
arpl
and
pop
xor
xor
push
mov
shr
int3
mov
inc
xchg
lret
push
repz
cwtl
out
inc
mov
push
dec
addr16
add
cmp
cmp
mov
push
push
or
xor
insb
xor
repnz
repz
shrl
inc
das
in
jg
pop
lods
stc
mov
cltd
mov
hlt
jo
das
jbe
dec
testl
jnp
subb
cmpl
inc
les
pop
inc
frstor
mov
add
ret
xor
nop
loopne
pop
movsb
push
test
shrb
xor
in
xchg
and
inc
sub
pop
add
mov
cmpsl
es
clc
shl
jnp
mov
lret
sub
lret
imul
rcll
jle
ffree
outsb
les
xor
sti
cmpsb
sbb
hlt
in
cmpsl
mov
nop
scas
jnp
setge
fisttps
mov
sub
or
dec
xchg
sahf
adc
sti
push
pop
and
pop
lahf
mov
rorl
push
shr
repnz
es
xchg
push
mov
or
xchg
out
sbb
das
repz
loop
mov
and
cmp
lods
loopne
cld
loopne
or
out
sbb
mov
jge
cld
jp
jmp
mov
out
inc
insl
and
adc
stc
cmc
xchg
clc
sahf
pusha
cmc
and
clc
mov
mov
dec
jg
mov
jno
pop
imul
pop
push
push
loop
loopne
xlat
xchg
mov
pop
lahf
rcrl
out
inc
xchg
cwtl
inc
lcall
push
pop
into
cmp
movb
popa
dec
fs
cmp
popa
repnz
out
mov
cmp
fnstcw
fsubrl
cmpl
daa
mov
mov
and
xor
cmpsb
pop
clc
xor
sbb
cmp
stos
cmp
pop
dec
cld
dec
mov
dec
mov
inc
inc
mov
and
jae
xor
nop
xor
jnp
mov
leave
sarb
cmp
add
icebp
push
push
mov
cltd
inc
push
ds
into
clc
push
aaa
mov
mov
addr16
ljmp
insl
hlt
lcall
lods
dec
outsb
dec
sub
pop
int3
or
push
idiv
mov
xor
outsl
inc
pop
fdivrl
ud1
jno
mov
fists
filds
sub
pop
jmp
repnz
xor
pop
sbb
fld
add
dec
cmpsl
and
daa
sbb
dec
inc
inc
push
xchg
sbb
mov
mov
ror
push
stos
pop
cli
loope
cmp
imul
orw
push
fldl
mov
clc
push
and
lcall
cmp
sub
mov
cltd
cmp
addb
push
lods
shr
push
xor
or
pop
jge
test
and
clc
mov
cltd
mov
sbbb
mov
in
ret
ret
push
jno
push
push
adc
jmp
bound
mov
adc
sbb
sub
adc
fstpt
push
jnp
and
lods
gs
arpl
into
jmp
lods
adc
outsl
xor
jbe
mov
jbe
and
xchg
dec
add
jno
mov
xor
mov
clc
bound
lds
or
or
push
add
jg
dec
xor
cmp
pop
outsl
dec
pop
cmp
out
push
scas
call
xchg
and
rorl
stc
pop
adc
aaa
lods
imul
xor
push
aas
cmpsb
daa
stos
dec
test
or
inc
scas
cmp
insb
call
jecxz
jne
popf
dec
push
jne
pop
push
xlat
xchg
cs
in
or
adc
ret
cmp
clc
arpl
mov
cltd
pushf
fs
or
mov
xchg
sub
leave
pop
test
leave
andl
and
xor
and
lcall
out
mov
jmp
mov
inc
mov
mov
push
gs
mov
xchg
add
or
inc
jecxz
insb
es
jne
and
daa
jbe
mov
imul
dec
loope
or
lret
dec
lods
fnstsw
outsb
dec
mov
jo
sbb
pop
push
push
inc
mov
inc
add
mov
repz
pop
fidivrl
adc
push
mov
add
arpl
pop
xorl
out
test
pop
dec
dec
aad
jne
mov
cmp
ret
or
sub
ljmp
inc
dec
sub
push
mov
add
inc
cmp
fdiv
cli
int
cwtl
leave
pop
jle
shll
test
sbbb
pop
pushf
cwtl
mov
sub
int
pop
neg
ret
xor
xchg
sbb
or
dec
mov
cmp
cwtl
stc
jle
pop
adc
imulb
push
movl
out
dec
xor
add
cmp
dec
or
int
popa
aas
add
push
lods
dec
or
cmpsl
inc
and
arpl
mov
or
push
jle
mov
outsl
pushl
and
xchg
adc
add
testb
cmp
jle
rol
add
dec
sub
fiaddl
mov
jge
aas
and
lcall
mov
jns
adc
loop
dec
insl
mov
xchg
push
das
aas
dec
test
mov
popl
xchg
decb
fs
push
lods
inc
xorb
lcall
jns
scas
or
lret
xchg
or
testb
jne
mov
dec
xorb
adc
xorb
jl
pop
leave
leave
ss
int3
pop
cmc
lahf
imul
xchg
jnp
ss
out
test
test
lock
lods
sahf
or
mov
lahf
lret
out
push
pop
sbbb
inc
xor
movsb
cmc
lcall
and
and
or
inc
sbb
fildll
add
dec
lock
call
dec
mov
jbe
mov
repz
dec
or
xor
push
fwait
stc
sub
sbb
add
dec
fdivl
mov
ret
xor
ljmp
ret
xchg
pop
dec
lcall
ret
ret
xlat
mov
or
loop
clc
and
inc
pop
xor
mov
mov
pop
mov
rcrb
rol
call
sahf
jmp
inc
sub
jo
aas
xor
pop
fsubr
shl
sub
ret
js
sbb
push
mov
cmp
insl
movsb
test
enter
shrb
push
test
pop
jp
lahf
lcall
cmp
iret
roll
push
push
shlb
mov
adc
jns
std
xchg
xor
bound
fwait
push
push
jge
cmp
inc
jp
dec
das
fstl
cmp
je
pop
jbe
cmpb
in
jne
jb
popa
rcrl
mov
mov
cld
push
jmp
and
cmp
ja
push
lods
orb
cmpl
mov
mov
ret
sub
fstpt
leave
fdivrs
in
mov
data16
cmp
lea
jnp
push
jno
add
aad
and
or
xchg
test
and
popa
sub
ljmp
enter
ss
xchg
jo
mov
jne
inc
inc
push
sti
daa
xchg
aas
ret
out
cmpsl
cmp
jmp
xor
cmp
inc
sti
iret
pop
inc
repz
shlb
inc
mov
mov
repnz
mov
sbb
inc
jmp
dec
xchg
xchg
push
and
and
xor
xlat
jge
cmp
add
aaa
adc
cltd
lcall
xor
add
inc
fmul
mov
cmp
repz
sub
jo
outsl
data16
push
pop
push
setne
push
sub
repz
push
ret
mov
xchg
add
mov
xor
inc
inc
cmpsl
shl
mov
mov
xchg
jne
mov
inc
lret
pushf
scas
jmp
imul
sbb
push
mov
and
psrad
imul
retw
out
test
pop
shll
adc
dec
aas
call
cmpsb
push
dec
pop
ja
cs
loop
push
imul
ja
adc
cmp
shlb
jbe
mov
inc
inc
adc
out
xchg
pop
dec
into
lds
jb
loope
pop
mov
je
pop
ljmp
clc
in
cmp
rol
lcall
xor
or
adc
cs
add
push
pop
adc
xchg
jge
mov
enterw
fldl
cwtl
and
adc
inc
stc
popw
bound
mov
dec
jbe
pop
mov
repz
enter
insl
mov
cmpsb
adc
out
repnz
sub
sbb
jno
aad
sti
jne
mov
nop
pop
scas
jo
movsb
inc
and
test
js
xchg
gs
cs
dec
push
hlt
nop
adc
or
jp
pop
xchg
in
and
lahf
movsl
jge
iret
sbb
dec
lds
adc
cwtl
sub
add
jl
cmp
mov
popf
inc
xchg
and
jnp
and
cmp
dec
xor
pop
movsb
adc
arpl
inc
aas
and
mulb
insl
xchg
sbb
pop
push
loopne
sbb
mov
ja
mov
lods
jmp
xlat
adc
lods
pop
or
jno
cld
fimull
sbb
add
mov
jecxz
sarb
xchg
xor
pop
js
cmp
xlat
inc
pop
mov
mov
jne
ds
mov
mov
pop
pushf
cmp
stos
insl
add
push
adc
jl
pushf
lcall
xlat
mov
sbb
bnd
adc
ss
outsb
enter
mov
fildl
xchg
int
mov
cwtl
insl
mov
rorl
lcall
mov
iret
mov
pop
orl
mov
cltd
cmp
sahf
imul
xchg
js
or
xchg
sbb
xchg
push
test
cmc
xor
mov
fdivs
daa
sarl
cmp
pop
dec
imul
xor
sti
xlat
stos
cld
int
mov
and
cld
push
mov
shr
push
stc
out
mov
mov
out
gs
or
repnz
out
setno
cmpsl
testb
hlt
dec
xchg
xor
lret
add
outsl
xor
sbb
jg
push
mov
addr16
mov
std
sti
shrb
daa
pop
inc
ljmp
test
shll
and
cmc
xor
test
xchg
jbe
popf
insl
mov
mov
jno
ud2
icebp
shlb
sbb
fsubr
popf
mov
mov
inc
xorl
adc
pop
icebp
or
mulb
sub
addb
add
mov
mov
ficoms
mov
shll
mov
sub
iret
sub
add
arpl
int3
push
insl
nop
shlb
pusha
and
shlb
imull
mov
pop
test
pusha
mul
jno
test
xchg
push
orl
cli
xchg
outsb
sbb
das
rorl
aas
jne
adc
int
imul
adc
mov
jno
loope
mov
adc
mov
lods
xchg
clc
pop
fs
sarl
pushf
mov
pushf
mov
punpckhwd
cmp
mov
stc
push
push
fsub
inc
sarl
lea
loopne
imul
sub
pop
cwtl
shl
dec
stos
or
cmpsb
sarl
jmp
in
sbb
js
sub
dec
mov
cld
xchg
jp
rol
push
inc
popa
lahf
mov
enter
mov
daa
and
aam
in
sub
repnz
mov
loop
aas
sub
repz
test
test
mov
fs
sbb
inc
xorl
mov
push
test
pop
push
pushf
dec
jg
mov
rcrl
push
out
mov
in
loope
jle
adc
cli
cmp
daa
fiadds
mov
inc
sub
inc
cmpsb
sbb
hlt
jmp
sub
in
or
and
aas
inc
xor
jo
mov
add
cwtl
in
pop
mov
sbb
iret
and
imul
and
sbb
std
xchg
hlt
jle
jnp
lret
cmp
jmp
mov
cmc
and
push
dec
push
and
outsl
jne
mov
lds
sub
inc
push
cld
inc
test
push
int3
cmp
adc
mov
dec
in
or
loope
shl
ret
jb
in
sbb
xchg
ror
std
lret
adc
pop
sub
adc
mov
sbb
or
stos
mov
push
push
push
mov
jbe
std
not
test
test
sub
sar
xchg
rol
mov
push
lahf
xchg
xchg
xorl
xor
add
dec
je
cmp
jb
and
sub
cmp
mov
fwait
pop
fidivs
sbb
push
mov
xor
adc
mov
jmp
insb
jmp
push
into
xlat
lret
cmp
cltd
dec
lds
mov
gs
cmp
std
jle
mov
cld
sub
into
xor
test
push
loop
mov
cs
in
lcall
add
mov
dec
mov
in
sti
sbb
adc
mov
jle
mov
push
daa
bound
or
jo
jnp
inc
lahf
mov
mov
add
js
dec
adc
shlb
call
repz
mov
xchg
scas
sahf
sub
pop
pop
mov
add
sub
fsubr
pop
dec
xchg
pop
cwtl
jmp
jl
lret
xchg
orb
push
push
aas
jle
mov
push
fwait
gs
mov
popa
aad
out
push
mov
lahf
and
jle
dec
sbb
and
repnz
mov
je
fimuls
sub
pop
mov
ror
pop
fstpt
add
sti
repz
bound
ucomiss
cli
jg
in
scas
popa
repz
mov
inc
mov
shll
add
mov
add
mulb
dec
push
add
add
out
je
lret
sbb
cmp
mov
add
out
aas
das
shrl
adcb
xor
xchg
divl
or
outsl
lcall
cmp
or
loopne
cmpsb
xchg
or
cltd
sub
or
hlt
dec
adc
sub
jb
jo
mov
adc
mov
sbb
mov
ja
fs
cmpsb
icebp
sub
mov
loop
jnp
in
push
fwait
lret
sbb
scas
sub
scas
mov
jg
mov
rol
sti
in
sub
xchg
sbb
xorl
mov
movsl
fstl
lret
std
inc
dec
scas
jmp
inc
arpl
cmc
bound
pop
and
imull
jbe
xchg
mov
enter
js
dec
adc
int
dec
fwait
lcall
jmp
push
fadds
sub
dec
shrl
inc
in
dec
jmp
inc
bound
cmp
pop
movsb
das
mov
jo
xchg
mov
or
sbb
lds
mov
lret
fwait
xchg
out
bound
jl
ret
jg
cld
shlb
mov
xchg
mov
xchg
inc
pop
cmp
cmp
outsb
addb
int
push
mov
je
stos
mov
daa
or
movsl
xor
fld
std
lret
arpl
mov
outsb
test
in
shr
jnp
xchg
mov
movsl
hlt
ret
dec
lcall
xor
js
insl
pop
arpl
mov
jo
push
jb
or
notl
aas
fiadds
jne
jnp
xor
add
mov
jbe
add
out
test
lcall
jo
pop
pop
fisttpll
in
in
dec
cmp
jno
mov
iret
addl
cs
push
xchg
ret
cmc
mov
daa
mov
mov
lahf
push
sub
xchg
repnz
stc
ds
scas
push
push
movsl
int
pop
orb
je
mov
xchg
pusha
adc
inc
xchg
sub
cmpsb
mov
sub
bound
dec
out
movsbw
xor
xlat
mov
fsubrl
das
sahf
mov
push
mov
pusha
nop
adc
insb
pop
push
sbb
inc
ljmp
rorb
sarl
outsl
loopne
sbb
mov
inc
mov
dec
pop
loope
mov
xchg
add
push
push
movsb
xor
dec
outsl
pslld
cmc
adc
jl
sarb
cmc
mov
icebp
jg
pop
lret
stos
sub
xor
mov
lcall
std
add
mov
push
add
mov
dec
loopne
lret
push
jp
mov
sahf
das
outsb
jno
movsb
mov
adc
or
xchg
ret
sbb
jge
mov
cmc
imul
inc
stc
push
test
insl
aad
rorb
sbb
jecxz
repnz
or
cmp
aas
fistpll
push
cmp
dec
ret
outsb
cmpsl
lds
jl
mov
sbb
popf
aas
cmpsb
push
fbstp
fs
push
jnp
xor
mov
cmp
adc
sbb
call
mov
test
and
test
inc
xor
jns
dec
idivb
mov
outsl
das
fs
sti
add
in
mov
sbb
iret
mov
inc
mov
pushf
out
sub
and
dec
mov
push
inc
inc
into
jno
std
repnz
cld
mov
outsb
jns
aam
dec
sub
jns
mov
cmp
rorl
out
lods
es
mov
jbe,pn
adc
xor
cmp
rorb
push
xor
jecxz
mov
loope
mov
in
sub
and
je
fadds
cltd
dec
aas
aam
jnp
addl
jecxz
pop
mov
cwtl
xchg
sahf
push
lock
imul
push
sbb
xor
or
xor
pop
mov
stos
xor
jp
sub
bound
mov
call
xor
dec
jecxz
fadds
fidivrs
pop
aam
mov
fidivrl
repz
fistpl
ljmp
insb
sub
push
ret
ficomps
aaa
mov
mov
jb
out
movsl
fwait
and
mov
cmovo
sbb
test
and
inc
inc
xchg
add
xchg
jg
out
icebp
xchg
out
xlat
js
sahf
xchg
push
ja
xor
adc
scas
adcl
jns
dec
push
cltd
dec
cmc
xor
add
sub
fcmovu
pop
pop
or
jmp
decb
aam
cmpsb
inc
mov
pop
vmovdqu64
shll
add
icebp
jnp
xchg
sub
pop
pop
and
xor
orl
inc
jo
sub
xchg
push
jmp
adc
mov
shr
in
test
pusha
mov
add
shll
push
jb
and
loope
pop
aam
int3
cmp
lcall
mov
push
in
xor
lret
or
jb
popa
lods
inc
les
xchg
out
inc
push
push
lret
push
jecxz
in
jecxz
stc
cmp
aas
fistl
int3
in
xchg
mov
aaa
cmc
mov
xor
xchg
es
sbb
hlt
mov
loope
fistpl
lret
das
shlb
push
mov
mov
dec
mov
lods
notb
mov
xchg
int
cld
jle
push
adc
pop
or
xor
jge
jnp
cmc
fs
ljmp
inc
mov
daa
push
in
fdivs
and
sbb
jae,pt
je
jno
pop
pop
nop
jne
pop
mov
mov
push
stos
jge
cmp
or
pop
stc
jb
push
ret
outsb
nop
push
push
and
outsb
adc
push
insl
arpl
mov
sbb
jp
ja
imul
jne
in
xlat
jnp
sbb
cltd
jl
enter
shll
je
cmp
xor
xor
push
cmpsl
cs
and
jbe
int3
or
mov
loopne
sbb
insb
mov
mov
xor
loopne
xor
cmpsl
pushf
stos
mov
mov
adc
rorb
stc
ds
or
add
test
data16
jno
push
sub
sub
add
add
xorl
dec
popf
and
rorl
push
cmpsl
mov
clc
pop
inc
jb
scas
icebp
mov
stos
popa
inc
nop
mov
stc
and
loopne
add
mov
cwtl
sarb
add
sub
rolb
test
shll
lea
int
cmp
js
mov
loopne
movsl
cmc
mov
gs
cmpsb
cld
jge
xchg
dec
pop
pop
jnp
adc
gs
push
repnz
push
inc
out
into
mov
jae
lods
je
fsub
sbb
in
cwtl
sarl
cmpsl
xchg
int3
inc
dec
add
mov
pop
cwtl
push
dec
adc
cmp
sbb
stos
cld
das
xchg
dec
sub
adc
pushf
add
cmp
rolb
imul
call
mov
sbb
ret
data16
rol
mov
push
inc
xor
mov
sbb
push
and
in
mov
add
cmp
sub
js
out
xchg
xchg
sbb
lahf
test
pop
xchg
mov
call
sub
and
cmp
gs
jns
xchg
stos
addr16
and
push
in
hlt
inc
cmpsl
push
ss
stos
and
int
mov
subl
add
data16
or
sbb
in
arpl
mov
jmp
xor
sub
or
iret
inc
push
outsb
and
cmpsb
cmp
pop
imul
xchg
jb
xchg
aaa
ret
pop
inc
xchg
mov
adc
stos
arpl
pop
fcoml
inc
sbb
inc
mov
and
psubw
cmp
add
cmp
icebp
jnp
inc
jp,pn
add
jbe
ss
pop
jo
push
dec
repz
cmp
jns
add
mov
sbb
or
mov
inc
cld
mov
inc
mov
xor
cltd
dec
add
jns
fs
test
add
ret
sub
loop
push
imul
cs
aaa
lods
sub
jns
cmp
or
dec
orb
xor
pop
cs
xchg
sub
ds
push
out
pop
push
and
mov
push
aam
inc
dec
in
xchg
or
cmp
sbb
sub
xchg
jno
sbb
xchg
je
adc
iret
sbb
jle
imul
daa
push
stc
add
and
push
pop
sbb
outsl
subb
jnp
xchg
rcl
not
or
bound
xor
hlt
outsb
pop
scas
mov
jne
pop
ret
xlat
sbb
or
push
pushf
clc
outsb
pop
cmp
sub
mov
xor
push
outsl
xor
push
fsubs
cwtl
pop
and
pop
or
mov
cmp
in
loope
push
push
cmp
adc
xchg
pop
mov
pop
fwait
cmp
nop
cmp
rcl
into
mov
jp
call
inc
popf
cmp
or
sti
inc
mov
repnz
xorl
ss
test
lcall
or
sub
push
in
loopne
test
sub
movsb
add
cmp
sub
cltd
movsl
fs
push
stc
push
out
adc
testl
jecxz
add
int3
test
dec
sub
testl
pop
mov
call
pop
push
imul
push
out
into
adc
sbb
inc
in
pop
push
insl
xor
stos
lret
lcall
inc
inc
test
das
push
lcall
push
or
xchg
in
mov
pop
arpl
mov
adc
lds
jge
aad
lea
cmp
jae
push
sub
push
cmpsb
shlb
and
sbb
xchg
rcrl
cmp
shll
xor
push
aaa
addr16
pop
push
ds
test
dec
jne
stc
popa
rol
scas
inc
push
fisttpll
cmp
mov
movsl
xor
sbb
jle
xor
and
sahf
lea
mov
pop
mov
jmp
out
mov
xor
xchg
test
insl
int3
add
mov
mov
notl
jp
out
aam
cmp
add
dec
pop
adc
data16
lea
int3
and
fadd
dec
adc
mov
xor
inc
scas
add
mov
mov
xlat
mov
pushf
xor
leave
out
cmp
fidivrs
lea
outsl
pushf
cmp
test
jnp
jb
xchg
cmp
mov
je
mov
fdivrl
test
inc
mov
pop
mov
pop
jecxz
sub
push
pop
cmp
ret
xchg
aas
add
pop
sbb
mov
dec
scas
inc
add
lcall
or
mov
mov
dec
xorb
cmp
or
repnz
dec
das
inc
fiadds
cmpsl
enter
fwait
xor
mov
pop
and
out
mov
mull
sub
ds
popf
loopne
je
xchg
dec
adc
xchg
push
adc
pusha
push
inc
or
fstps
or
cmp
in
movsb
fcomip
jp
popf
xor
cli
inc
push
adc
and
into
fisubs
imulb
outsl
cmp
mov
icebp
andb
sahf
aaa
jne
pop
dec
mov
jo
pop
shrl
mov
sub
scas
and
repz
cmp
push
aam
xchg
ss
push
mov
xchg
cs
push
in
pop
iret
jnp
dec
test
loope
dec
dec
fs
xchg
sbb
mov
mov
inc
xchg
xchg
les
loop
into
imul
or
imul
xor
fstpl
out
sub
mov
out
adc
mov
leave
sbb
fwait
mov
cmp
je
push
jle
iret
scas
inc
adc
je,pn
inc
or
mov
leave
rorb
and
iret
jg
arpl
rorb
push
cmpsb
lcall
leave
xchg
std
mov
push
or
mov
dec
movsb
pop
dec
fistps
loop
fwait
push
and
loopne
fdivrs
mov
inc
sbb
jae
out
push
mov
push
sarb
mov
pop
mov
xchg
scas
aad
pop
lret
xchg
pusha
or
aaa
lods
or
mov
cmpsl
mov
aaa
testb
subb
xorl
pop
in
xchg
dec
sahf
mov
sbb
movsl
mov
xor
mov
mov
lret
imull
cmp
loop
aad
call
clc
adc
mov
sarb
rcrb
or
jno
popf
jp
cmp
adc
dec
cmp
mov
jno
mov
add
cmp
sbb
cmp
xor
push
sarb
rcrl
or
lods
or
xchg
int3
and
sbb
xlat
cmp
dec
mov
sbb
lret
xor
decb
ss
push
xor
push
test
jle
pushf
inc
addl
push
cmp
ljmp
test
aam
test
fnstsw
mov
cld
test
arpl
out
sbb
jne
mov
movsl
fs
mov
mov
or
fwait
lcall
subl
pushf
xor
test
or
or
ret
test
lret
imul
lret
sarb
outsl
out
dec
ds
cmp
mov
jno
inc
js
jmp
and
or
insb
mov
and
or
cmpsb
loop
fmuls
aaa
mov
pop
xchg
jnp
pop
pushf
daa
and
repz
cmc
xor
in
inc
or
mov
lahf
hlt
repnz
inc
mov
sbb
push
xchg
ficompl
jae,pn
xorb
nop
popa
shrb
and
cmp
frstor
sbb
push
fbstp
sarl
shlb
fstl
xlat
pcmpgtb
mov
mov
pop
cld
add
pop
adc
push
fsubrs
pop
xor
aad
xchg
insb
xchg
test
stos
fcomps
es
adc
aaa
or
scas
add
sub
lcall
xchg
aad
or
insl
sbb
js
push
push
stos
mov
push
inc
pop
push
lds
rcl
cmp
cmp
daa
jle
shll
xchg
mov
out
rcrb
sub
mov
xchg
adcl
push
xor
push
cmc
mull
pop
sub
aam
sbb
jmp
fistpll
scas
lods
loope
and
int
mov
push
addr16
sub
int3
mov
cmp
dec
daa
sub
mov
xchg
mov
cmp
sub
sub
fwait
and
pop
insb
clc
sbbl
cmp
xchg
insl
rcl
in
jl
cmp
ljmp
ret
pushw
sbb
repz
je
add
dec
push
adc
cwtl
inc
stc
mov
inc
fldt
sbb
imul
fs
jno
adcl
sub
ret
add
mov
xor
xor
insl
fs
jae
cmp
or
mov
ret
std
push
bound
add
aad
add
cmp
dec
xchg
test
push
inc
xchg
out
sti
lret
rorl
adc
xchg
cmp
jle
xor
aas
leave
or
push
dec
mov
lret
or
lahf
inc
out
shlb
outsl
inc
and
inc
mov
aaa
ss
sbb
fsts
pop
aas
jns
out
pop
push
sub
jno
das
pushf
cmpl
push
add
sti
jecxz
test
fstpl
pop
int
jne
adc
or
adc
shrl
outsl
fsubr
sub
dec
or
fcoms
scas
dec
cltd
dec
and
ja
lea
repz
push
or
repz
mov
mov
push
xor
xchg
add
into
scas
cs
bound
or
and
and
in
in
int3
sub
push
push
cmc
cwtl
mov
xchg
int
stos
or
lahf
cmp
xor
jle
outsl
incb
sub
mov
jnp
lds
loope
mov
mov
mov
andl
repz
in
rclb
and
dec
mov
aas
ja
xchg
stos
inc
imul
xchg
insb
jb
mov
xchg
data16
mov
out
fcmovnu
ljmp
xchg
outsl
dec
push
mov
cwtl
mov
jecxz
push
dec
jl
sbbl
cmpsb
mov
jns
jnp
out
ror
test
jae
add
ret
cld
jmp
xchg
scas
and
xor
mov
sbb
xor
or
mov
push
out
enter
inc
fldl
or
fldl
inc
cmpsl
lods
push
lea
mov
in
int
jmp
fcmove
inc
nop
nop
xchg
fnsave
mov
lds
adc
ljmp
mov
dec
rcr
sbbl
add
cmpsl
jno,pn
fisubl
repnz
xchg
es
int3
pop
dec
in
cvttps2pi
xlat
and
aas
pop
mull
les
cmp
or
add
das
clc
and
mov
shrb
mov
mov
stc
jecxz
jne
lds
lods
mov
ljmpw
inc
das
cmp
or
push
mov
mov
orb
icebp
clc
das
push
ror
jns
mov
or
jno
mov
lahf
add
ret
or
call
outsl
mov
jg
cmp
arpl
jb,pt
pop
int3
jae
cltd
dec
roll
sti
aas
in
lds
ss
or
popf
movsb
daa
push
cwtl
dec
lret
bound
adc
lods
out
out
pushf
jge
out
test
mov
loop
mov
mov
push
aad
sbb
push
jae
xchg
jb
stc
mov
add
icebp
push
iret
ljmp
sbb
std
loop
sbb
jne
sub
fdivr
sub
add
xchg
outsb
xor
fs
xchg
inc
es
xchg
mov
gs
and
pop
iret
xor
mov
lea
add
nop
mov
xor
mov
mov
in
out
jmp
mov
dec
mov
or
pop
mov
loope
jle
mov
lock
dec
mov
xor
mov
fs
push
fwait
mov
and
stos
xchg
imul
add
add
clc
cmp
xlat
and
repnz
jge
lahf
cwtl
cmp
pop
mov
insb
sub
xchg
jmp
repnz
mov
cwtl
and
push
push
mov
dec
inc
stos
dec
pop
mov
loopne
jle
ljmp
imul
data16
or
sbbl
pop
daa
and
push
jne
xor
shll
or
sbb
int3
xor
mov
inc
dec
rolb
mov
cmc
sub
idiv
mov
adc
ret
xchg
add
sbb
dec
xchg
push
in
jg
xor
fcoml
popf
notl
mov
js
dec
mov
cwtl
mov
push
cld
sub
add
addr16
mov
aam
aad
popa
pop
pop
in
fisubrs
pop
dec
mov
mov
gs
lods
mov
call
clc
push
cs
pop
xor
iret
in
jmp
mov
cmp
test
in
jge
jge
imull
add
inc
imul
fwait
push
fcmove
in
push
repnz
je
xchg
push
out
hlt
and
xchg
iret
mov
cmp
rolb
add
push
sub
mov
jg
or
and
stos
into
rolb
xlat
cmp
xchg
rolb
cmp
sbb
out
fidivrl
popf
pop
inc
sahf
jb
hlt
and
xchg
and
jl
in
mov
in
mov
cmpsb
aam
push
xor
jecxz
lcall
shld
xchg
pop
ljmp
mov
cmp
adc
adc
pop
fstpl
lret
jns
mov
das
in
and
cmp
jno
hlt
mov
add
nop
enter
inc
xor
arpl
push
stc
push
fs
inc
cli
sbb
inc
push
sub
jg
in
pop
fists
mov
mov
rcr
or
lods
push
mov
gs
fsts
inc
mov
inc
negb
push
push
mov
fcmovbe
jecxz
mov
fisttpll
mov
push
xorb
js
mov
inc
dec
and
cmp
pop
inc
adc
mov
icebp
jle
xchg
mov
mov
cmc
jmp
jo
inc
mov
inc
fdivs
push
dec
repz
and
add
cmp
mov
cmp
mov
inc
or
in
mov
mov
insb
outsb
jne
push
inc
jns
pop
in
sub
pop
sbb
xchg
xor
push
lea
pop
jb
jle
sub
ds
rcrl
loopne
pop
adc
imul
sub
sub
xor
mov
or
std
iret
mov
push
add
add
push
pop
rcll
or
cmp
repnz
push
dec
bound
iret
nop
cmp
push
call
mov
lds
jecxz
negb
test
movsl
std
push
fidivrl
mov
mov
mov
mov
loope
cmp
lret
jb
sub
icebp
mov
movb
rolb
dec
mov
cmpsb
mov
push
xor
sub
or
inc
mov
les
inc
loope
scas
frstor
imul
push
push
nopl
insl
out
push
mov
repnz
jge
push
adc
in
pop
scas
aam
adc
movsl
push
push
aaa
arpl
cmc
mov
outsb
rcrb
lods
test
lea
nop
mov
adc
outsb
fimull
dec
aam
mov
sub
loope
lret
iret
xor
test
xor
mov
and
int3
cwtl
test
add
mov
cltd
or
or
adc
jmp
loop
dec
inc
lret
jns
rcrb
hlt
pop
lahf
rclb
in
mov
je
sub
std
lahf
movsl
xchg
fists
mov
push
outsb
mov
gs
lods
cmpsl
dec
jno
jbe
inc
cmpl
push
adc
insb
cmpsl
cmp
outsl
stos
out
mov
pop
ds
lret
xlat
cltd
das
iret
clc
adcb
or
shll
and
int
jb
mov
pop
sub
or
aad
jne
test
sub
cld
shlb
sbb
loope
mov
sarl
push
popf
mov
fimull
jg
push
jbe
stos
push
fimull
mov
push
outsl
dec
mov
mov
mov
int
dec
pop
mov
pop
stc
xor
pop
mov
fmuls
fnsave
push
imul
pop
push
loope
jmp
cmpsb
fnstsw
pushf
fwait
inc
mov
scas
cli
push
outsb
wbinvd
imul
mov
sbb
mov
or
sub
test
jno
adc
pop
adc
jmp
mov
fs
lds
push
imul
push
inc
jb
sub
mov
hlt
addr16
xor
imul
pop
cltd
bound
gs
jmp
daa
mul
fmul
icebp
mov
pop
clc
inc
mov
fnstsw
sub
movsb
lahf
pop
add
sahf
std
mov
sar
imul
clc
adc
cmp
insl
shl
sbb
jle
and
stc
mov
push
xlat
fnsave
mov
fnstcw
adc
or
ljmp
mov
pop
movsl
sbb
rorl
inc
cmc
mov
mov
add
rcl
stos
out
inc
div
inc
adc
adcb
hlt
pushf
pop
mov
test
mov
xchg
out
nop
sub
loop
adc
outsb
or
andl
out
in
mov
out
sub
lds
jno
leave
push
jmp
jno
mov
mov
in
daa
xchg
push
inc
iret
add
pop
sub
mov
add
fmul
les
and
and
mov
cltd
sar
in
add
movsl
dec
rorl
pusha
dec
data16
mov
loop
ret
cld
sbb
mov
dec
outsb
lock
mov
js
mov
popa
dec
cmpsl
enter
jl
jl
mov
xchg
push
push
xchg
sbb
cwtl
jp
das
ficoms
and
dec
mov
nop
sbb
loopne
ljmp
add
dec
test
xchg
gs
je
sub
pop
mov
cmpsb
push
push
and
xchg
add
and
adc
or
adc
scas
in
sub
cmp
ljmp
mov
dec
mov
aaa
cmp
push
xchg
movsb
les
outsl
mov
pop
lahf
int3
je
aaa
fisubrs
xchg
test
push
setle
push
mov
mov
std
cmc
xor
js
mov
loop
fs
stos
std
rclb
in
outsl
dec
xchg
cmp
and
mov
push
pop
sbb
loope
pop
repnz
sub
cmpsl
loope
mov
inc
iret
dec
mov
jecxz
div
daa
fnstenv
pop
jp
insb
xchg
xor
fimuls
mov
and
mov
stc
push
cmp
pop
jg
lcall
sbb
in
enter
std
loop
je
sti
or
fmull
and
lcall
and
or
gs
sbb
sub
ja
stc
and
dec
shll
jb
jl
fs
mov
bound
lea
dec
dec
jne
push
add
mov
pop
mov
xor
ret
sbb
pop
divl
pop
jo
xor
scas
imul
xchg
sbbl
jg
mov
das
outsl
adc
int3
push
lret
and
inc
mov
mov
ret
sahf
add
push
addr16
sbb
cli
loope
in
pop
jne
pop
jno
fwait
inc
aad
stos
adc
fsubrp
add
int
stc
ret
mov
pop
or
ljmpw
insl
das
nop
pop
xchg
sub
inc
lcall
and
push
ds
stos
push
pop
sbb
jno
sub
cwtl
sub
push
lret
out
repnz
mov
jmp
test
daa
pop
pop
push
test
mov
loop
jnp
xchg
dec
xchg
imul
inc
movsl
movsl
sbb
inc
xlat
jge
and
lret
xor
int
sub
or
lds
outsl
lret
fldenv
dec
je
imul
xchg
jb
and
push
int
mov
mov
pop
shl
ret
imul
mov
push
out
popa
adc
daa
divb
or
das
or
push
mov
bswap
jns
ret
sub
mull
movsl
cmpsb
cmp
sbb
xlat
and
push
loop
lcall
ret
mov
mov
jle
cmp
jle
imul
push
cmp
push
xor
xor
mov
push
sub
out
sti
out
aad
pop
or
fcoml
pop
stos
add
nop
popa
fnstcw
test
jbe
xor
cmp
std
insb
xchg
cmp
jl
mov
in
pop
xor
xchg
rcl
mov
dec
mov
addr16
push
lcall
das
repnz
push
js
mov
xchg
ret
dec
rcll
adcl
mov
jbe
jecxz
mov
fstpl
into
jb
fwait
clc
subl
mov
mov
jne
dec
std
mov
cmp
xchg
and
adc
sub
inc
xchg
ljmp
cmp
or
mov
int3
inc
outsb
sbb
inc
cmp
xor
filds
clc
pop
cmpsl
adc
mov
push
xchg
jne
inc
xor
and
mov
and
dec
xchg
hlt
inc
mov
mov
ja
jno
xchg
sbb
pop
popf
fadds
cmpsl
mov
enter
cwtl
adc
xchg
lahf
das
addl
xor
dec
adc
ficompl
popa
jl
cmp
int
cmp
jbe
or
insl
inc
mov
mov
or
cmp
mov
cmp
lcall
lds
enterw
cmc
movsl
sub
pop
nop
push
sbb
fs
and
pop
inc
fisubrs
xor
mov
push
dec
sub
dec
out
lds
pusha
jne
mov
test
cmpsl
mov
xor
fcomps
imul
cmp
insb
clc
mov
mov
or
ds
sub
aad
sahf
adc
push
aas
insb
clc
xor
stos
sub
jno
outsl
pop
jae
out
push
stc
cmp
shl
push
jmp
push
test
inc
push
addl
lods
inc
mov
cmc
jge
popf
subb
sub
outsb
pop
pop
jp
mov
sub
je
mov
pop
imul
lahf
push
sbb
and
imul
and
sahf
aaa
mov
sbb
cmpsb
jno
mov
cmpsb
adc
pop
pop
and
adcb
loop
push
adc
push
jnp
xlat
fiadds
shrl
mov
push
cwtl
sti
insb
mov
aam
adc
or
popf
lock
ljmp
sub
push
jge
subb
sub
test
cmp
pusha
daa
cmp
adc
jp
add
mov
xchg
fisubl
insb
subl
test
imul
jns
jno
shlb
cmp
pushl
xor
add
xchg
push
mov
lcall
test
ss
xor
cmp
call
adc
fwait
cli
movsb
dec
sbb
gs
cmpsl
sarl
inc
cltd
gs
pop
fsubs
mov
pop
fcomi
cmp
lret
lcall
add
jno
pop
inc
lock
jae
filds
xchg
mov
shrl
sbb
call
fdiv
xor
loopne
outsb
sbb
dec
lcall
ret
jmp
les
test
mov
xor
stos
frstor
xchg
jl
test
xchg
xor
hlt
inc
dec
fcoms
roll
xor
push
ds
test
or
sbb
pop
fsts
xor
cltd
jbe
lret
fwait
and
push
mov
flds
in
sbb
mov
dec
xchg
cli
adc
out
rorb
es
int
hlt
sbb
mov
call
add
pop
jbe
es
xchg
mov
adc
out
and
push
fistpl
ret
orl
xchg
cmp
cmpsb
out
cmpsl
adc
mov
adcl
movsb
push
push
es
sbb
add
or
arpl
js
lret
cmp
mov
loope
adc
dec
out
cmp
dec
dec
sbb
mov
inc
push
aaa
cmpsb
ficomps
adc
arpl
pop
fxtract
pop
loopne
lahf
mov
inc
lea
stc
sub
mov
sbb
in
loop
aaa
test
xchg
ret
out
shl
or
test
sub
addr16
stc
mov
jae
sahf
adc
and
dec
out
sub
fwait
imul
orb
xor
orb
fistpll
iret
in
fistpl
cli
jo
gs
add
xchg
pop
loopne
pcmpgtd
push
movsl
or
mov
sub
push
jecxz
cltd
int
into
mov
xchg
je
lock
sbb
ret
or
ljmp
sub
je
imul
cmp
out
out
repnz
jmp
add
pop
add
pcmpeqd
dec
ds
scas
out
test
mov
lret
lds
fstpt
test
mov
fwait
js
sbb
inc
lcall
adcl
in
test
test
pop
mov
inc
adc
push
mov
xchg
push
aaa
and
inc
cmp
jle
cld
shl
subl
mov
test
pop
push
push
adc
adc
gs
or
or
and
stos
pop
add
sbb
pop
add
xchg
fbld
inc
jo
mov
add
ds
imul
mov
cmp
mov
nop
push
xor
jg
test
incl
loopne
mov
xchg
sub
scas
xor
mov
cmc
in
pop
shll
fwait
popa
orb
movsl
icebp
xchg
xchg
push
mov
mov
bound
cmp
lea
inc
lcall
popf
add
dec
inc
jbe
orb
jg
mov
imul
dec
adc
fs
lret
js
or
cmp
imul
xlat
adc
xor
dec
fs
popa
pop
aam
jge
scas
cld
out
xor
add
pop
pushf
mov
jecxz
add
loopne
pusha
in
shl
ds
cli
push
popfw
insb
push
cwtl
sub
sti
pop
andl
in
bound
inc
fnstcw
sub
cmp
fchs
fnstsw
lds
dec
sbb
mov
lods
xchg
idivb
lea
sbb
mov
xchg
jno
loope
pushf
test
inc
push
loope
mov
xchg
fildll
sbb
sbb
push
and
div
lea
in
scas
outsb
scas
mov
daa
movsl
push
rorb
pop
sbb
jp
jl
push
ds
pop
test
test
sub
inc
sbb
inc
inc
int3
in
rorb
jmp
pop
mov
fwait
xor
adc
cmp
dec
ljmp
cmp
cmc
push
and
shll
jmp
mov
cmpsb
stos
inc
daa
jg
mov
mov
inc
push
xor
sub
xchg
fdivp
sub
xorb
pop
xchg
fimull
xorb
outsl
lods
int3
push
imul
mov
push
cmp
mov
stc
pushf
add
mov
pop
mov
popl
cmc
je
inc
sbb
fsubrs
xchg
lock
repz
movsb
fisubl
mov
push
sub
out
cwtl
or
incl
dec
inc
leave
addr16
xlat
movsb
and
adc
or
loopne
cmpb
addl
std
mov
testl
xchg
ja
mov
js
stc
xor
sub
or
inc
inc
jmp
push
outsb
or
out
outsl
scas
add
movsl
mov
or
out
mov
bound
cmp
arpl
and
aad
or
add
stc
fldcw
inc
adc
xchg
mov
clc
xchg
mov
pop
loop,pt
ret
fwait
or
pop
divl
cwtl
dec
mov
jnp
lahf
fdivl
les
inc
pop
dec
sbb
mov
in
dec
mov
cmp
dec
xchg
cld
push
pushf
aam
ljmp
dec
mov
jae
cld
jmp
out
sbb
ljmp
sub
xchg
push
mov
gs
jno
add
mov
adc
cmpl
jns
xor
or
fmuls
xchg
cwtl
int
stos
cmp
mov
cltd
imul
ss
xchg
adcl
clc
xchg
pop
sti
cmp
rcr
imul
leave
jge
daa
insl
cmc
xor
stos
xchg
imulb
movl
xchg
push
lock
dec
xchg
mov
imul
mov
mov
pop
or
iret
pop
fisubrl
xchg
sbb
in
arpl
aas
add
pusha
pop
dec
popf
je
lret
xchg
inc
cmp
in
cmpl
inc
inc
out
stos
pop
mov
mov
jp
pop
movsb
mov
sub
xchg
mov
cmpsb
aaa
in
test
sub
push
mov
fimull
icebp
and
inc
xor
js
mov
fsubr
mov
pusha
js
loope
pop
aad
pop
imul
push
sbb
frstor
pop
and
sbb
push
or
mov
jle
dec
cmp
push
int
mov
jno
repz
aas
mov
dec
ret
movl
xor
inc
shl
mov
fcoml
out
mov
bound
sub
jo
sub
hlt
sahf
dec
imul
inc
inc
or
sub
sarl
iret
ss
js
fs
mov
in
xlat
into
inc
pop
pop
cli
adc
xchg
scas
test
cmp
xchg
scas
pop
sbb
adc
push
cmc
cmp
sbb
jbe
in
jno
jbe
mov
xchg
pop
sub
je
pop
cmp
insb
mov
mov
roll
push
or
arpl
stc
dec
sub
adc
pop
lods
mov
adc
fisttps
negb
mov
sarl
mov
inc
stc
bound
lea
addb
jb
or
push
das
loopne
or
mov
mov
adc
adc
cmc
cli
push
arpl
lods
into
cs
cmpsb
push
mov
push
sbb
sbb
cmp
xor
add
ret
aad
dec
push
dec
into
popf
xor
adc
ds
test
jns
adc
ret
out
push
mov
ds
rorb
mov
push
adc
lret
sarl
lcall
scas
or
stos
in
loope
clc
add
cmp
testl
jne
jbe
dec
pop
mov
mov
inc
shl
mov
repz
add
mov
mov
sbb
movlps
into
xchg
aas
sub
and
jne
sbb
aam
mov
mov
and
test
dec
mov
add
jns
jno
daa
add
mov
ret
xchg
ret
mov
mov
adc
scas
out
lsl
pop
icebp
mov
cmc
mov
sub
sbb
jp
add
out
add
inc
dec
add
dec
sarl
mov
cmpb
ret
cmp
sub
xchg
xchg
mov
in
xor
aad
mov
sbb
mov
xor
popf
pushf
dec
and
cmpsl
push
add
pop
mov
lock
out
adc
sbb
jo
xchg
lcall
mov
xchg
and
fwait
in
mov
and
jnp
mov
inc
mov
repz
adc
je
mov
add
inc
cmpsb
xchg
popf
or
lock
ljmp
or
aam
test
repz
mov
sbbb
nop
movb
pop
cld
ret
dec
out
cmc
in
sub
dec
push
rorb
or
sbb
lahf
pop
mov
loope
dec
mov
ss
leave
shlb
add
and
and
or
xor
and
and
inc
and
filds
fsubrs
fsubp
mov
jno
dec
push
cmpsl
xchg
int3
es
icebp
dec
imul
xchg
mov
pop
pushf
cwtl
add
hlt
mov
lock
xor
add
in
sarl
jl
sbb
sub
rorl
mov
xor
add
push
mov
mov
mov
fidivrs
call
loop
cwtl
mov
xor
lcall
lret
xor
mov
lods
inc
sbb
adc
dec
in
scas
test
dec
test
mov
jp
xchg
cmp
adcb
out
jle
aam
inc
xchg
mov
mov
stc
ljmp
mov
push
leave
xchg
and
inc
ss
and
and
lcall
cmc
mov
sbb
in
test
xchg
out
push
mov
adcl
jmp
dec
js
cmp
xchg
sub
mov
mov
jle
fistl
push
cmpsb
jae
enter
mov
aam
push
test
imul
nop
and
sbb
push
dec
jp
pop
pop
jg
cmpl
cmp
xchg
xchg
push
gs
fidivl
push
test
sbb
lds
push
pop
stos
sub
jns
adc
sbb
lods
mov
frstor
add
movsb
xchg
stos
sub
or
je
test
fcomi
inc
sub
xchg
dec
rcrb
lret
sbb
mov
aad
icebp
out
loop,pn
push
mov
fs
fiaddl
or
sub
mov
xor
cmc
lcall
mov
fldcw
ljmp
out
xchg
es
loope
xor
mov
xor
mov
sbb
mov
out
sbb
pop
dec
pop
add
sub
js
lcall
cmc
sbb
stos
dec
ret
add
aam
scas
movsl
xlat
ret
mov
dec
fcoml
mov
mov
sub
xor
scas
or
mov
dec
jo
mov
outsb
movsb
lahf
jmp
add
sbb
andb
fdivrs
sub
movsl
inc
addb
push
adc
lods
test
xchg
add
stos
push
xor
dec
cmpsl
inc
add
cs
loop
xor
cmc
dec
outsb
pop
fbld
dec
mov
add
push
in
xor
pop
ret
movsb
cs
or
sahf
pop
hlt
pop
daa
jecxz
movsl
lea
stos
xor
xor
dec
stc
outsl
imul
hlt
mov
hlt
push
inc
mov
mov
add
xchg
push
mov
andl
rol
into
lds
lea
inc
cmp
push
andl
jp
push
lret
adc
pop
or
cmp
insl
in
sub
and
pop
lcall
or
andb
call
incb
insl
jle
lock
sar
jg
push
jnp
frstor
fldcw
mov
mov
dec
push
fsubr
mov
pop
add
adc
adc
pusha
add
inc
sti
dec
repnz
mov
fisubrs
or
loope
test
jmp
pop
int3
jb
lods
jns
sbb
out
movsb
xchg
lcall
mov
inc
out
mov
dec
test
pushf
sub
sub
adc
push
outsl
mov
mov
cmpsl
jbe
pop
push
loopne
scas
and
xchg
int
push
mov
in
xor
xchg
mulb
push
test
mov
fldl
dec
cmc
and
lcall
lods
fsubl
mov
push
sub
xor
pop
rcrl
xorl
jge
test
lock
ret
xor
mov
push
inc
xchg
cltd
cmp
pushf
fidivl
add
and
lods
xchg
sub
movsl
push
lock
pop
sbb
test
pause
mov
or
mov
sbb
mov
dec
dec
xor
ljmp
mov
imul
cli
test
lcall
movsl
jne
aas
and
inc
adc
inc
and
xchg
rcll
fwait
xchg
clc
push
adc
xor
stos
xchg
gs
mov
ficomps
xchg
xchg
adc
sahf
iret
ret
cld
pop
mov
xor
out
lret
adc
xchg
sub
sbb
or
mov
outsb
mov
movsb
push
sbb
sub
int
rcll
ret
mov
call
movsl
cmp
jno
sub
or
out
std
js
and
loop
lcall
jns
or
call
stos
rol
pop
push
mov
repnz
sbb
mov
daa
mov
mov
mov
push
lret
jo
or
and
jl
inc
aas
pop
xchg
lds
mov
ds
adc
adc
inc
mov
lret
insl
das
jge
or
cmp
sub
jb
push
jnp
sbb
cmc
push
cmp
mov
into
inc
jmp
and
jae
insl
xchg
xchg
mov
shlb
xacquire
inc
mov
int
dec
gs
std
push
cmp
dec
lods
xchg
lcall
lods
jmp
mov
or
pusha
hlt
pop
test
lea
push
es
rcrb
and
jns
mov
roll
lret
fsubl
sbb
mov
pop
sbb
clc
push
xchg
and
mov
loopne
enter
push
sbb
xlat
gs
mov
incb
mov
fistl
mov
arpl
je
inc
xchg
xor
icebp
sbbl
adc
lret
leave
outsb
adc
jle
sbb
cmc
imul
dec
mov
aam
jecxz
popa
in
roll
pop
and
popa
ret
repnz
push
aas
stc
imul
cmp
stos
aaa
loopne
outsl
dec
mov
jnp
test
adc
test
cmp
mov
jmp
jbe
push
das
fs
mov
clc
xor
push
test
or
mov
xchg
adc
sarb
and
dec
inc
xchg
pop
lock
leave
mov
add
xchg
xchg
xchg
test
cmp
aad
lcall
test
imul
leave
bound
sbb
inc
pop
inc
add
insb
adc
lods
in
xor
xor
xlat
popa
cmp
lods
and
icebp
clc
inc
test
int3
mov
scas
repz
ret
dec
enter
push
out
or
jbe
addr16
fimull
dec
jns
stos
dec
cmpsb
ja
xor
cmp
lret
fistl
lahf
sbb
xor
jmp
dec
push
hlt
dec
push
inc
fisubl
aad
lods
push
pop
inc
jmp
sbb
fmul
mov
add
mov
adc
sahf
push
lods
sub
rcrl
lea
mov
xor
rdtsc
mov
mulb
push
hlt
fnstsw
sbb
clc
dec
cmpl
fsub
and
mov
out
fisubrs
sbb
scas
xor
cwtl
mov
adc
dec
es
movsb
or
jp
mov
inc
loope
jnp
loopne
pusha
adc
cld
and
xor
shll
add
imul
or
push
int
mov
xor
je
std
dec
mov
push
repz
nop
sub
fcom
cmc
xchg
xlat
xchg
pop
sbb
in
cld
pop
adc
outsl
cmpsb
pusha
lahf
aaa
and
jae
xchg
pop
dec
fs
call
or
jbe
cmpsb
push
imul
push
div
fistps
loope
pop
xor
dec
jl
add
mov
adc
bound
insb
jle
pop
fldenv
in
and
nop
je
pop
inc
dec
pop
in
mov
adc
cmpb
cltd
dec
pop
jno
fbstp
pushf
scas
jnp
lret
call
inc
jnp
sbb
shlb
xchg
sbb
xchg
jae
test
in
jae
xchg
and
in
rolb
hlt
push
cmpsl
adc
sbb
dec
out
pop
mov
xchg
push
pop
jg
sbb
jp
cmp
mov
fidivrl
movsb
sbb
sbb
in
fiadds
pushf
or
inc
lea
sbb
rcrb
inc
push
ljmp
ror
leave
loop
in
aad
fbld
cmp
pop
sub
fldcw
adc
and
xchg
sub
out
and
mov
movsb
fimuls
add
mov
pop
shrl
jmp
pop
add
add
adc
aad
into
or
pusha
mov
mov
add
pop
rcl
mov
fcompl
into
jno
aam
sbb
jae
js
sbbb
repnz
popa
mov
roll
jbe
add
mov
stc
inc
int3
mov
xchg
outsb
jle
jbe
and
push
cmp
dec
js
call
pop
inc
rcrb
or
aad
mov
adc
sbb
jecxz
pop
sub
mov
jo
loopne
notb
mov
mov
jb
rorl
imul
xchg
pop
lock
add
pop
or
adc
or
sub
xlat
int3
stos
cmc
outsl
push
and
in
daa
repnz
mov
pop
call
gs
push
jg
lods
xchg
lods
xor
cmc
outsl
adc
and
int3
pop
idivl
call
into
mov
mov
pop
inc
sub
out
or
cmp
adc
mov
fadd
push
cmp
out
sahf
mov
insb
xor
jnp
push
or
lcall
mov
divl
push
int
sbb
sbb
mov
xorl
rorb
mov
stc
lea
lds
inc
arpl
jbe
sub
xchg
mov
inc
les
xor
lea
dec
or
shll
aam
xchg
push
xor
xchg
mov
adc
add
jecxz
lock
data16
xchg
mov
mov
outsl
rcrb
xchg
arpl
ss
rep
ret
pop
xchg
mov
cmp
mov
outsb
fisubrl
adc
stos
push
sbbl
cwtl
fsubrl
mov
test
mov
fnstsw
icebp
inc
adc
inc
in
je
aad
es
jecxz
dec
push
sbb
ficomps
push
xchg
sahf
mov
dec
jp
fldcw
mov
jg
and
test
test
xor
jmp
faddl
fisubl
out
sub
dec
add
and
pusha
inc
arpl
xor
aad
mov
jg
aaa
xchg
pop
clc
clc
daa
imul
mov
sub
scas
add
stos
dec
push
pop
cmp
xor
imul
mov
mov
negl
mov
jbe
inc
ljmp
outsl
inc
rcrb
divb
nop
mov
test
jae
call
mov
push
addr16
cmpsb
and
pop
cs
inc
ret
enter
test
pop
into
sbb
or
es
int
mov
outsl
add
sub
or
cmpsb
pop
and
dec
fwait
xchg
add
xchg
mov
negb
sub
add
mov
push
pop
xchg
out
add
jo
shl
or
or
aas
add
adcl
sub
mov
mov
sub
fmuls
fsubl
and
enter
popa
stos
ja
xchg
push
push
pushaw
mov
dec
add
xor
mov
jp
adc
shrb
sub
rolb
leave
xchg
cmp
push
repnz
mov
cld
sub
sbb
add
inc
sbb
sbb
cmpl
movsl
lock
push
cmp
aas
push
nop
adc
mov
iret
in
dec
hlt
out
adc
imul
int
sarb
nop
adcl
outsl
hlt
int
jl
jnp
andl
push
cmpsb
and
dec
in
jbe
frstor
sbb
add
jle
or
or
or
xchg
pop
lock
or
adc
mov
insl
pop
pop
in
mov
xchg
adc
xor
stc
mov
xchg
jnp
sahf
sbb
fsubr
addr16
pushf
arpl
icebp
scas
gs
pop
adc
bt
stos
xor
xchg
or
aam
out
cmpl
out
cld
xchg
mov
test
mov
mov
sbb
stc
jns
out
jp
cmpsl
rcrl
stc
iret
jle
xchg
in
icebp
push
cmp
sub
mov
popf
or
mov
cmpsb
add
subl
push
sub
shl
jnp
ss
div
jle
das
dec
xor
mov
imul
add
cltd
sbb
jecxz
sbbb
js
loop
and
pop
cmp
ljmp
call
pop
and
jp
frstor
push
in
dec
push
shll
lcall
cli
insb
jb
push
dec
jae
clc
pop
je
int3
in
pop
pushf
mov
inc
pop
jb
mov
xchg
adc
lock
sbb
imul
lods
pop
insb
pop
xchg
cmp
xchg
fadds
enter
pop
inc
and
mov
jle
or
add
ret
les
loopne
idiv
iret
xchg
bound
pop
sub
je,pn
imul
sbb
mov
stc
or
mov
mull
pop
adc
xor
mov
lds
xchg
enter
test
aad
cmp
cmp
lock
mov
add
int
jnp
pusha
ja
sub
jg
jno
js
pop
xor
mov
mov
cwtl
add
jae
or
fisttps
enter
loop
les
push
aad
inc
xor
shl
push
push
adcl
pop
add
xchg
push
stos
sub
xchg
push
out
aam
data16
addr16
sub
sub
popa
sbb
mov
cmp
sub
mov
xor
and
hlt
xchg
ja
daa
sbb
ds
push
xor
and
aas
movsl
inc
mov
nop
push
int3
sti
jns
lcall
jns
sti
pop
test
das
cmp
ljmp
xchg
fsubr
test
or
and
pop
leave
jp
push
sbbl
pop
mov
decl
sub
inc
inc
cmp
loop
decb
mov
icebp
lea
pop
fxch
out
icebp
popa
sbb
pcmpgtb
or
add
mov
cmpsb
fwait
or
fsubs
jecxz
mov
lahf
test
dec
int
inc
xchg
in
push
leave
lock
add
cs
adc
repnz
or
jecxz
dec
add
lea
sub
sbb
sbb
mov
aad
add
add
popa
fiadds
xor
popf
jbe,pt
adc
out
stos
jecxz
mov
mov
cmp
jae
in
pop
or
aas
fstpl
outsl
mov
cmp
mov
stc
lods
lods
ja
or
sar
push
loope
mov
push
pop
in
imul
xchg
push
and
mov
mov
js
fs
addr16
mov
repnz
sub
mov
lret
test
cli
insl
mov
jbe
neg
lods
test
ret
es
int
jns
sbb
jp
in
adc
scas
xchg
inc
jecxz
aam
or
das
mulb
dec
loope
jecxz
out
pop
dec
aaa
loop
sub
sub
xchg
or
xor
testl
sub
loopne
aam
mov
sbb
rol
lds
mov
or
scas
leave
jo
std
adc
cld
shlb
inc
divl
insb
cltd
loope
and
jle
xchg
and
repz
mov
out
xor
lret
or
mov
fstpl
xor
mov
fists
in
fstl
fcoml
pop
jns
pop
je
mov
pop
and
in
jmp
stc
mov
and
aad
mov
fsubl
dec
jp
mov
and
or
sbb
into
testb
cmp
outsl
pop
sub
cs
fs
mov
clc
inc
popf
xchg
rclb
daa
push
dec
insl
push
mov
dec
adc
ficoml
inc
push
gs
fildll
sti
mov
xchg
sbbl
movsl
inc
leave
movsl
pusha
fs
outsl
in
cwtl
shl
cltd
inc
cld
pop
lcall
das
pop
dec
xchg
inc
jno
pop
or
pop
shll
cli
scas
xor
into
sub
repz
xchg
mov
test
dec
pushf
test
xchg
call
nop
pop
insl
fisubs
bound
fdiv
sbb
dec
mov
inc
in
lds
enter
test
sahf
dec
out
stc
into
out
push
sbb
movsl
xchg
cmp
dec
out
insl
xchg
rcrb
xor
adc
pop
aaa
hlt
lcall
or
lods
hlt
adc
inc
fs
and
xor
loopne
jl
jns
test
push
add
mov
ja
or
lea
inc
xor
mov
pop
inc
jno
testb
xchg
in
mov
and
mov
jmp
mov
int
push
xchg
xor
xlat
inc
pusha
dec
int3
adc
scas
pop
adc
xchg
bound
xchg
decl
lret
call
jae
jnp
mov
or
ret
lret
jle
repnz
sahf
orl
nop
pop
cmp
add
int
inc
dec
mov
sub
push
and
xor
loop
cwtl
mov
cltd
push
ljmp
test
or
push
stos
push
mov
int
mov
dec
insl
std
cwtl
orl
mov
cli
inc
sar
sub
add
pop
and
sbb
insb
gs
adc
inc
mov
sbb
loope
xchg
mov
cld
fisubs
mov
jmp
push
jmp
adc
mov
xchg
mov
add
enter
lret
movsb
orl
xor
dec
and
outsl
or
push
mov
mov
xor
cmp
mov
das
frstor
cmpl
out
imul
add
push
pusha
jne
xchg
imul
aas
mov
xor
add
push
icebp
cli
push
xchg
aam
loope
cmp
inc
idiv
pop
pop
xchg
dec
loope
adc
sbb
test
mov
lock
lods
loope
hlt
dec
adc
sbb
or
hlt
popa
insl
sbb
mov
es
fsts
fisubs
adc
pop
mov
jae
and
sbb
mov
lds
sbb
jmp
cmpsb
and
adc
jecxz
push
pop
adc
mov
lock
jl
or
xor
cmc
imul
cmpl
inc
loopne
adc
mov
arpl
cmpl
mov
mov
mov
imul
or
or
leave
fs
inc
scas
ljmp
int
into
and
xor
push
mov
sahf
mov
cmp
push
xor
sbb
jl
xchg
mov
push
lods
int3
jecxz
xchg
adcb
sbb
jp
fnstcw
adc
mov
cltd
sbb
jno
adc
clc
jle
mov
popf
inc
sbb
jnp
mov
pop
inc
inc
xor
nop
xor
sarl
lods
jns
jge
movsb
nop
pop
mov
lods
incl
mov
mov
test
push
mov
je
movsl
jmp
or
shlb
dec
pushf
sti
int3
mov
push
jmp
and
jbe
ljmp
popf
outsl
add
inc
jns
adc
iret
aad
jne
mov
sti
shrl
sahf
or
xchg
jp
in
call
or
adcb
sub
lods
in
cli
inc
in
adc
dec
mov
jb
add
dec
scas
ds
scas
mov
in
movsl
mov
mov
dec
sbb
push
test
fnstenv
sti
cmp
mov
xchg
arpl
jne
out
fldt
jo
ja
lret
push
sahf
pop
dec
push
dec
mov
mov
ficoms
add
xchg
xchg
fbld
std
push
cmc
shlb
je
repz
daa
in
popa
cmpsb
fidivrs
push
ret
aam
push
sub
bound
lock
orb
ret
jbe
cmp
inc
xchg
cmp
ds
pop
or
xor
or
mov
inc
aam
xor
cltd
inc
test
mov
adc
adc
jle
les
scas
int3
pop
add
das
dec
xor
dec
lahf
mov
or
mov
int
data16
insl
roll
jl
pop
inc
or
jb
rcll
inc
xor
and
adc
movsb
pop
test
std
arpl
sbb
testl
fwait
icebp
or
ljmp
push
stos
sub
dec
lods
inc
in
pop
or
xchg
fyl2xp1
js
or
lods
out
cmovl
cltd
push
dec
ret
cli
ljmp
bswap
push
cs
ret
shl
mov
or
mov
adc
inc
ja
xor
in
jle
out
inc
das
pop
dec
add
push
ret
test
pop
cmp
in
bsr
xchg
mov
cltd
inc
pop
scas
mov
jl
mov
fsubs
xlat
mov
out
shrl
mov
add
dec
adc
jmp
inc
repz
push
or
jbe
lea
xlat
mov
pop
and
sbb
add
mov
pop
xlat
push
call
ja
ss
xor
test
clc
xchg
xchg
mov
lods
fists
sti
xchg
inc
mov
divl
xor
inc
mov
adc
gs
fwait
lea
jae
lahf
and
icebp
inc
sub
add
sub
movsb
enter
pushf
or
ja,pt
insb
rclb
jg
out
jo
sbb
loop
push
mov
ds
adc
sbb
mov
ds
xchg
movsb
sub
in
and
loopne
out
rcrb
shrb
shll
ljmp
lea
rorl
mov
push
push
scas
mov
dec
daa
repnz
mov
push
jmp
jle
and
lcall
push
add
or
sti
loope
leave
cmp
lods
repz
pusha
outsb
stos
leave
xchg
cmp
or
fnstsw
lds
push
lret
lret
nop
adc
inc
sahf
sbb
mov
test
cmp
rol
push
lss
lcall
popf
pop
push
dec
dec
mov
loop
loop
cwtl
into
orl
leave
pop
fs
das
cmp
in
jae
icebp
mov
jae
and
outsl
xchg
mov
imul
lcall
in
cli
or
mov
push
adc
gs
test
mov
js
push
test
rclb
jp
lods
add
lods
mov
pop
add
movsl
pop
test
fsubl
mull
dec
mov
sbb
push
adc
jnp
mov
xor
je
mov
dec
popl
mov
stos
testb
sbb
orb
aam
aas
addr16
and
mov
or
pop
out
dec
imul
cmp
sahf
xchg
xor
pop
into
mov
sub
scas
sub
je
lds
add
add
dec
xchg
pop
jl
adc
clc
pop
cmp
int
out
pop
lock
aas
ds
das
pop
or
cmp
gs
sbb
pop
movsb
out
in
xchg
cli
cmp
sub
pop
ret
adc
pop
imul
cld
cli
push
add
sbb
and
ja
int3
and
fbstp
or
cmp
xor
and
lods
push
popf
pop
mov
movsl
in
fsubs
pop
pop
lock
xor
gs
mov
xor
xchg
lcall
into
ss
dec
push
in
pop
sti
adc
inc
rcll
cmpsb
enter
jne
fisubs
idivb
push
cmp
dec
or
push
lods
in
jl
jecxz
loop
rcr
xor
sbb
jmp
pusha
movsl
in
inc
pop
in
aam
fcoml
jne
add
jmp
scas
and
lret
stos
push
jle
sarl
pop
xor
rcl
push
xor
and
call
icebp
xor
cmpsl
data16
adc
mov
mov
mov
ffreep
testb
or
jb
mov
js
xor
jmp
jge
jle
fisttps
out
movsb
movsb
mov
inc
mov
sub
pop
out
mov
jle
jne
shr
mov
cltd
xchg
mov
sub
lods
inc
fsubp
mov
imul
stc
inc
clc
sbb
fs
dec
stos
sbb
dec
dec
clc
jge
dec
lretw
push
mov
repz
or
scas
push
or
sti
lock
loope
in
or
xchg
test
adc
mov
int
cmp
loopne
xor
jmp
es
xchg
ja
push
movl
adc
mov
mov
jnp
je
or
hlt
and
lods
test
xor
nop
jmp
loope
xchg
int3
iret
rcrl
ret
cmp
loope
pusha
fcmove
fistpll
cmp
lock
in
push
sti
in
lret
or
icebp
xchg
xchg
mov
ljmp
mov
cmp
lock
push
sahf
xor
adc
div
pop
adc
mov
loop
cmpsb
rclb
or
subb
pop
cld
sub
sub
or
mov
jnp
lock
xchg
sub
xor
jle
or
sahf
jmp
aaa
lret
pop
test
or
mov
cmp
gs
push
and
enter
inc
test
jbe
ds
rcrl
pop
add
lahf
daa
pop
fidivs
ljmp
mov
jmp
push
sub
das
into
fidivs
sbb
mov
cmp
push
jnp
push
inc
test
fsubrl
xchg
insb
xor
int3
dec
mov
jno,pt
pop
sti
mov
int3
pop
mov
loop
std
sbb
lock
fdivr
cltd
negl
add
rorb
in
insb
data16
jae
jns
xchg
sbb
jne
stos
xor
mov
inc
in
ret
xor
xchg
xor
imul
dec
insb
loop
pop
test
loopne
inc
daa
adc
xchg
shlb
push
pop
mov
xchg
sbb
testb
and
rorl
sbb
cld
xor
hlt
or
lock
ror
mov
movsl
les
push
iret
cmc
mov
ret
lods
jg
or
wrmsr
lods
decl
lods
and
xor
outsl
jae
push
rcrl
cli
adc
push
mov
mov
sahf
sub
push
xor
dec
jmp
lahf
push
or
rcll
aam
scas
xchg
addr16
imul
or
int3
jmp
inc
imul
int3
inc
js
jp
stos
dec
jno
fmull
adc
sbb
test
fidivrs
push
xor
ret
cmp
fwait
and
imul
mov
call
inc
mov
mov
add
xor
jne
lret
adc
adc
xchg
mov
sbb
push
inc
pop
push
bound
push
in
out
ret
and
leave
jecxz
sarb
outsb
mov
mov
in
insl
jl
xchg
daa
out
sub
popf
ja
aam
inc
scas
sub
mov
dec
and
push
add
insb
mov
push
negb
jg
mov
rcl
push
test
fldl2e
mov
arpl
iret
lock
pushl
and
mov
scas
sbb
enter
insb
imul
lret
gs
mov
imul
jno
push
decl
popf
fdivs
ljmp
icebp
leave
sbb
jnp
xor
mov
jge
pop
pop
fcmovnbe
adc
add
push
in
xchg
sub
ljmp
pop
sbb
out
xchg
aam
mov
std
push
les
out
enter
mov
minps
rep
popf
xchg
mov
dec
jns
cltd
add
fdivr
outsb
ljmp
stos
loopne
or
insl
jle
add
xor
adc
add
mov
push
dec
sti
cs
push
loope
pushf
in
call
int
test
pop
daa
mov
dec
jmp
jno
inc
stos
cmp
gs
ret
pop
movsb
cmp
jmp
push
sbb
cmp
cld
clc
adc
dec
xchg
scas
cs
hlt
add
lds
fistps
mov
das
clc
xchg
rcr
adc
repnz
hlt
adc
inc
cmp
and
fsubp
test
xor
fwait
sub
push
cwtl
sub
jp
xor
vcvtsi2sdl
scas
js
push
lret
lretw
cmpsb
mov
xor
test
and
mov
insl
test
jecxz
loop
imul
jno
xchg
out
loopne
pop
and
addb
inc
xchg
outsb
test
enter
push
cltd
arpl
add
xchg
sbb
pop
sub
or
xor
pop
ljmp
pop
sbb
daa
pop
cmp
insb
outsl
test
inc
sub
pop
and
jmp
addr16
out
add
or
in
movsb
lahf
pop
inc
mov
lods
sub
rcll
and
pop
popf
inc
mov
and
gs
faddl
jo
sub
ja
repz
shrl
sub
pop
mov
jge
les
daa
stc
stos
cmp
jne
icebp
adc
into
mov
add
pusha
lcall
sarb
push
jmp
mov
mov
jbe
loope
inc
in
xchg
movsb
xor
jne
stos
pushf
mov
or
push
fimuls
movsl
std
stos
inc
jo
lahf
pop
stos
pop
std
mov
jmp
out
mov
lock
stos
fidivs
int
cmp
sub
xchg
orb
lahf
jnp
popa
icebp
out
push
stos
mov
in
dec
cwtl
or
mov
in
stc
mov
xchg
push
faddl
mov
cmc
negb
mov
bound
mov
xchg
jge
jb
orl
out
je
testb
gs
jo
jb
inc
jbe
jl
or
lret
sarl
and
ja
cmpsl
addr16
mov
data16
pop
mov
std
rcl
lds
divb
push
mov
cmp
ds
push
ret
jo
pushf
push
add
std
push
cmpsl
mov
sub
push
fwait
addps
fisubrs
icebp
xor
icebp
es
xchg
in
push
jl
adc
xchg
test
add
cmp
add
aas
adc
inc
popa
xor
push
pop
jle
lret
xchg
mov
fldl
fstps
sub
mov
mov
mov
lds
stos
cmpsb
jp
push
mov
jne
push
pop
das
out
js
shll
mov
xor
dec
out
rolb
mov
jmp
pusha
mov
adc
xor
mov
mov
pop
or
add
fistps
add
mov
mov
and
push
popw
hlt
cmove
or
sbb
daa
pop
ja
int3
mov
shlb
inc
shrl
jbe
int
cld
and
mov
lahf
ret
bound
push
rclb
mov
inc
mov
pusha
lahf
and
sub
push
pop
push
lret
cmpsl
pushf
pop
push
mov
lahf
das
xor
rcrl
movsl
stos
cmpsl
mov
outsl
scas
mov
or
mov
mov
lock
dec
mov
dec
pop
push
or
xchg
sbb
and
xor
pop
inc
aas
ret
das
hlt
fisubrs
or
mov
imul
mov
inc
jle
sub
xchg
dec
hlt
or
rorl
daa
cmp
add
xlat
jo
mov
pop
int
lret
xchg
imul
xchg
in
jmp
xchg
shrl
out
dec
sti
divl
or
adc
adc
dec
or
xor
jp
jge
jge
repnz
sbb
shr
and
repnz
ja
icebp
xchg
jge
rclb
or
push
clc
push
sbb
xchg
xorb
sarl
dec
cmp
aam
mov
insb
adc
daa
imul
inc
or
pop
lret
nop
inc
mov
insb
adc
ret
imul
scas
je
or
xchg
dec
fwait
sub
lcall
ret
lret
inc
call
jnp
inc
pop
lahf
and
ret
adc
xor
cmp
dec
jmp
dec
sub
data16
aaa
fcoms
add
jne
jmp
jecxz
xchg
dec
mov
add
and
bound
and
fistl
mov
cmp
jl
out
imul
cmpsl
mov
push
fs
leave
cmp
cmpsb
je
mov
inc
and
mov
lods
stos
shlb
lods
or
adc
mov
test
stos
rclb
inc
sbbb
add
ss
mov
pop
mov
or
adc
lock
push
mov
scas
gs
push
out
icebp
movsl
and
pop
push
sbb
ja
das
sbb
js
sbb
cmp
cmp
rorl
jg
xchg
cmp
cmovp
adc
xchg
inc
outsb
js
jecxz
jnp
jmp
aaa
into
mov
lods
lcall
insb
mov
ja
sbb
cvttps2pi
mov
call
pushf
mov
aam
rclb
pusha
cmp
xor
test
subb
mov
and
sahf
out
add
jmp
shrl
sbb
or
xor
test
cs
mov
jge
jmp
frstor
mov
icebp
movsb
je
jmp
stos
scas
jmp
push
jl
pop
and
mov
cmp
xchg
pop
int3
jo
xor
out
xchg
les
cmp
jl
movl
dec
jne
insb
leave
das
jecxz
fbld
sarl
push
push
lds
push
xor
mov
push
dec
dec
fmuls
outsb
adc
mov
sub
aas
aad
subb
fsub
dec
jne
in
and
ljmp
cwtl
out
ds
pop
outsb
mov
mov
subl
das
fmull
enter
stos
xchg
mov
je,pt
xchg
xlat
push
xor
rcl
ds
adc
inc
ficoml
adc
addb
adc
mov
adc
and
pop
pop
jae
imul
dec
xor
ds
jg
loopne
jge
jmp
push
or
inc
push
inc
jns
pop
mov
ljmp
fsubl
outsb
iret
or
jno
mov
fucomi
dec
mov
xor
mov
rcl
aam
movsb
imul
jb
lods
jbe
jb
push
or
push
movsl
es
ret
sbbb
cmp
into
push
push
leave
leave
and
push
jp
pusha
sub
or
fiadds
mov
xchg
push
adc
mov
xchg
arpl
lods
fisubrl
jnp
pop
outsb
adc
lea
mov
rorl
popa
in
jge
and
sbb
push
lret
loope
dec
gs
movsl
int3
mov
sti
mov
das
pop
dec
mov
push
push
mov
mov
dec
mov
ficoml
lods
repnz
stos
jb
in
dec
js
pop
cli
ucomiss
pop
fists
mov
and
shl
aaa
push
xor
mov
sub
stos
adc
push
pop
mov
data16
data16
dec
movsb
outsb
jmp
dec
popf
sub
stos
pop
lea
mov
call
jae
xchg
test
aas
and
notb
xchg
jne
mov
into
mov
and
loope
js
pop
mov
test
shrb
mov
dec
imul
dec
xchg
jle
sbb
mov
inc
lock
jle
repz
adc
insl
push
arpl
dec
stc
aaa
push
icebp
jle
xor
enter
jecxz
and
jno
add
mov
xchg
mov
imul
rcl
jg
insl
mov
popf
rorl
adc
xchg
sub
lods
cmp
xor
loopne
sbb
xchg
das
popa
jg
ret
popl
pop
pop
push
test
inc
and
or
inc
das
rolb
fs
push
mov
pop
sbb
aam
movsb
xchg
jmp
pop
push
outsb
cmp
mov
ret
lret
addl
adc
jmp
ja
cld
mov
inc
mov
mov
clc
jae
push
or
inc
xchg
aas
pop
dec
pop
jl
cld
inc
sub
lods
sbb
push
fimuls
sub
clc
inc
nop
repz
out
mov
push
inc
jg
jp
addb
test
fwait
pop
or
les
xor
inc
sub
inc
cwtl
cmpsb
push
mov
enter
daa
xchg
push
and
or
pop
adc
jbe
dec
fnstsw
xchg
add
fmull
add
and
pop
mov
insl
testl
jmp
lret
add
xor
lods
mov
jp
jge
sbb
cmpsw
repz
out
xor
das
push
pop
push
es
lahf
inc
in
xor
dec
or
add
dec
cmp
pop
cmpsb
sub
ja
mov
out
push
mov
adc
shl
aam
mov
mov
inc
cmp
adc
loopne
adc
adc
pop
nop
lods
shrl
outsl
js
ja
jbe
adc
or
dec
lds
push
sbb
jbe
leave
add
scas
and
sub
pop
add
add
vpaddb
mov
sub
jb
cmp
xor
sub
jge
jg
jge
mov
ljmp
int
add
stc
push
jnp
pop
gs
jo
ficoml
mov
push
scas
sbb
in
push
mov
inc
mov
inc
dec
pop
jnp
outsl
test
push
pop
outsl
loope
jnp
cmc
add
xor
or
fs
aaa
stos
xchg
push
lock
dec
xorl
cmpsb
jns
pushl
rcrb
add
xchg
dec
jmp
sub
xor
jnp,pn
nop
shrb
mov
xor
add
incb
cmp
outsl
and
mov
ficomps
fidivrl
popa
ret
mov
inc
sub
push
pop
repnz
sub
addl
hlt
decb
jb
mov
fsubr
xchg
fstps
sbb
rolb
shl
dec
movsl
out
hlt
in
inc
inc
lock
cltd
pushf
xchg
sbb
xor
repnz
pop
stc
add
pop
mov
jg
jnp
mov
cmp
addl
jnp
inc
lcall
pop
xchg
loopne
pop
lock
enter
xchg
ljmp
iret
push
pop
xchg
mov
dec
xor
imul
inc
mov
rcrb
pushf
push
aad
fyl2x
fiaddl
ror
and
in
insl
aad
repz
stos
fsub
inc
dec
clc
loop
mov
adc
stos
cmp
xor
mov
mov
stos
mov
push
adc
sbb
jmp
pop
lods
dec
sub
and
lods
sub
sahf
or
jo
mov
ss
pusha
and
adc
rcl
or
inc
mov
imul
rol
dec
mov
pushf
dec
fstpt
jge
cmc
cwtl
add
arpl
aas
cmp
inc
mov
jo
dec
adc
mov
push
fstp
fdiv
pushf
cmp
xor
popf
inc
sub
dec
repz
ljmp
jno
fldl
sbb
push
aam
std
out
inc
pop
jnp
sarl
in
mov
insb
or
mov
test
dec
xor
mov
jmp
mov
test
cmp
xchg
aas
roll
xlat
push
xor
or
cmp
stos
xchg
cli
jmp
mov
inc
nop
rcrb
push
adc
out
fdivs
jecxz
ds
loopne
aam
ret
gs
jbe
xchg
mov
mov
pop
daa
iret
mov
dec
xchg
cli
lods
sti
sbb
in
and
sub
xor
push
dec
fcmovbe
roll
jae
sbb
ljmp
mov
pop
adc
neg
sbb
xor
jmp
loope
add
lods
fsubr
das
mov
adc
fmul
sbb
mov
inc
test
aas
lock
ja
inc
insb
icebp
fistps
cmp
lods
rcr
cmc
xchg
fnstsw
or
flds
pop
cmp
fsubrp
adc
mov
lret
jno
dec
adc
push
sub
test
lds
push
int
mov
testb
fdivs
jmp
imul
mov
sbb
mov
je
xor
add
cmp
pop
xor
movsl
ret
mov
adcl
scas
push
in
leave
jmp
in
sub
sbb
lret
cmpsb
mov
mov
scas
jnp
mov
sbb
lea
js
insl
pop
xchg
xchg
cmp
adc
hlt
mov
inc
loope
mov
cltd
sub
sbb
sahf
pop
cmpsb
xchg
xchg
and
in
lret
xchg
outsl
scas
xchg
aad
mov
test
xchg
pop
xchg
sub
movsl
cmp
out
pop
jno
adc
add
cltd
out
in
sbb
dec
ja
test
pusha
inc
shr
sbb
movsl
push
sub
pop
rsqrtps
xor
sub
pusha
xor
mov
add
mov
xchg
or
push
dec
xchg
imul
icebp
fistpll
adc
jle
jnp
cmp
sub
mov
mov
scas
out
fdivp
pop
repz
je
icebp
dec
push
cmpsl
loopne
xor
pop
push
mov
hlt
cmp
xchg
cmp
push
sbb
or
mov
cmpsl
stos
js
add
pop
inc
fdivrl
rorb
pop
adc
fisttpll
je
imul
rclb
sub
pushf
addr16
pop
gs
xor
sti
stc
push
scas
dec
cld
mov
clc
jae
iret
push
test
pop
or
sub
xchg
jns
dec
out
dec
loop
sbb
bts
icebp
insb
mov
ret
cmc
or
sbb
sbb
call
inc
pop
clc
lahf
lret
xchg
aam
sbb
xor
push
popa
in
adc
mov
cltd
hlt
dec
cltd
call
cmc
in
lret
shrb
aas
ss
sbb
or
push
in
jp
addr16
fidivs
lcall
clc
or
pushf
movsb
clc
pop
pop
xor
jbe
nop
dec
aas
mov
xchg
sub
adc
adc
sub
mov
or
aad
mov
test
movsl
xor
xchg
mov
cmp
jecxz
sbb
adc
ja
sub
push
or
sub
pop
cmp
stc
mov
int
iret
push
fadd
cmpsb
pushf
cmp
fidivrl
dec
sub
leave
xor
sbb
mov
imul
xchg
and
das
enter
pop
jp
cmp
and
adc
push
mov
or
jb
jecxz
cmpsl
mov
stc
rcrb
push
test
adc
je
sbb
daa
xchg
add
add
xlat
lcall
push
lret
cmp
sbb
std
or
mov
push
outsb
in
jno
jbe
popa
pop
xchg
xor
xchg
cmpsl
ret
aaa
icebp
hlt
adc
pushf
mov
aam
js
dec
outsl
mov
rorl
cwtl
and
or
mov
bnd
sub
mov
cmp
adcl
jle
or
int
mov
aas
loopne
sbb
popa
pop
fs
imul
and
inc
jo
lahf
in
dec
pop
mov
jnp
cmp
mov
movsl
inc
inc
jecxz
dec
push
rcl
into
push
push
pop
jo
dec
insb
mov
cltd
ret
dec
pop
test
out
enter
rorb
std
rol
sbb
jne
cmpsl
loop
mov
call
out
or
rorl
sub
push
lcall
mov
adc
adc
jmp
jge
cmpsl
mov
or
adc
jg
cmpsb
cmpsl
out
jge
cs
pop
add
out
push
and
add
lret
lret
mov
push
les
push
outsl
mov
negb
mov
test
dec
adc
push
dec
mov
scas
cmp
jle
bound
xchg
add
and
sbbl
pop
lock
call
push
adc
je
adc
dec
or
adc
lcall
mov
andl
inc
lcall
imul
stos
aas
rclb
and
das
push
ja
test
and
and
mov
imul
std
sub
jp
mov
imul
dec
mov
imul
or
jns
sti
inc
mov
inc
and
sub
xor
inc
mov
cmp
sahf
mov
ret
repnz
insb
enter
loope
or
and
js
mov
jl
or
hlt
or
push
sub
xor
cmpsl
sub
into
jge
int3
js
int
mov
jo
adc
sub
cmp
mov
imull
mov
insb
push
adc
mov
or
fisubs
mov
loopne
cli
andl
inc
sbbl
xchg
mov
jg
inc
test
sbb
dec
sub
push
mov
inc
stc
xchg
arpl
stos
insb
rcrb
pop
movsl
subl
shll
movsl
sbb
cwtl
dec
mov
cmp
bound
and
mov
mov
push
add
mov
adc
mov
xchg
sub
loopne
bound
mov
out
mov
pop
ljmp
lahf
dec
ret
xchg
mov
add
xor
cs
pop
out
lret
mov
mov
iret
xchg
mov
jno
sbb
jbe
cld
fistpll
popl
inc
shll
in
ret
xorb
push
sbb
loopne
fists
push
mov
xorl
sbb
dec
mov
pop
mov
mov
jo
and
mov
cmp
icebp
inc
mov
jb
inc
dec
out
push
xor
adc
adc
sub
jg
mov
or
cld
jg
mov
fiaddl
mov
or
jmp
icebp
fcomps
and
adc
call
rep
pop
adc
mov
inc
dec
fldcw
leave
loopne
pop
loop
aam
imul
std
mov
daa
xor
xchg
dec
xor
movsl
mov
out
ret
dec
ret
and
lret
mov
pop
test
push
loope
jo
mov
out
jp
mov
inc
add
fsubs
das
xchg
and
mov
or
adc
cld
mov
mov
nop
cmp
mov
test
cltd
mov
jecxz
outsb
loop
jp
mov
sbb
cmp
addr16
push
add
mov
xor
push
sbbl
into
add
and
push
daa
fadd
adc
insb
sbb
adc
mov
pushf
fs
lcall
mov
pop
repnz
xor
lcall
mov
mov
shrl
xchg
aam
mov
xchg
sub
sbb
or
xor
and
cmp
outsl
je
jae
out
adc
daa
pop
push
push
stos
jae
loope
adcb
or
push
mov
imul
or
sub
mov
imul
mulb
inc
inc
add
inc
cmp
add
jnp
xor
mov
movsb
loop
daa
cli
scas
add
push
dec
jbe
jmp
jge,pn
rolb
divb
jecxz
inc
cmp
sub
xchg
cwtl
fistps
mov
popf
and
aaa
loope
cmpsl
rcrl
mov
addb
sarl
test
ret
je
out
pop
xor
in
inc
mov
mov
sbb
rclb
cmp
adc
mov
sbb
add
sub
lock
aas
std
add
lahf
pop
shrb
sar
sub
jg
int
push
insb
sub
adc
xor
sub
or
xor
adc
mov
adc
call
sahf
mov
xor
add
nop
jo
stos
loopne
aas
jne
dec
or
ror
or
fiadds
cmpsb
gs
cwtl
add
add
es
ret
sub
or
fidivs
sub
mov
outsl
add
jns
lock
inc
push
sub
inc
lods
dec
outsb
and
mov
rcrb
or
xchg
ret
icebp
xor
sub
js
push
psraw
dec
xor
adc
jnp
sub
in
pop
adc
mov
cmp
out
jns
std
pusha
sti
xor
ret
inc
xchg
inc
stc
pop
xor
mov
pop
fimull
mov
inc
mov
cmp
clc
pop
out
rcrl
aad
cltd
dec
cmp
fucomip
add
adc
imul
mov
mov
and
xchg
fwait
xor
aad
stos
cltd
bound
loope
xchg
int
mov
dec
mov
pushf
clc
ds
pop
jmp
sar
push
xchg
dec
dec
sub
or
in
add
push
aas
rorb
test
adc
in
inc
add
add
cli
loope
and
mov
pop
ja
fisttpll
gs
filds
inc
xchg
adc
pop
test
ret
xlat
xchg
jb
mov
inc
sbb
fisubrl
leave
addl
ljmp
lret
inc
inc
mov
pop
cltd
inc
sar
lret
popf
insb
sub
rcl
test
out
push
dec
mov
sub
neg
aas
mov
sub
push
insb
jl
push
das
mov
xor
mov
sbb
scas
sub
cwtl
sbb
repnz
fs
and
scas
mov
ja
and
repz
or
lcall
jo
ss
in
mov
adc
dec
mov
pusha
mov
pop
dec
cmpsb
bound
lods
pusha
push
push
cpuid
das
jae
xor
lea
inc
push
lcall
and
and
inc
shrl
cli
jne
cmp
cmp
scas
ljmp
sarl
or
xchg
movsb
mov
xor
jbe
or
and
pop
rcrb
mov
dec
jg
add
cmp
clc
fnstsw
push
sbb
add
out
loope
xchg
mov
fisttps
push
dec
repz
jbe
xchg
mov
mov
aaa
sub
andb
sbb
ret
pop
popa
mov
mov
mov
ja
sub
fildl
dec
mull
test
cmp
clc
sbb
sti
mov
push
or
cli
cli
jge
icebp
imul
stc
dec
in
cmpsw
repz
orl
jbe
sahf
push
add
ror
lcall
xor
lods
loop
inc
pop
dec
mov
mov
pushf
dec
jg
xchg
movsl
jo
mov
or
aas
mov
mov
and
lcall
leave
je
ljmp
popa
iret
ret
xchg
aaa
cltd
pop
iret
test
test
cmp
dec
jbe
pop
pop
outsl
push
shufps
inc
inc
push
inc
idivb
hlt
lret
lods
notb
outsl
imul
in
mov
imul
jno
push
stos
cmp
jge
lods
in
or
cwtl
sbb
xchg
xor
xlat
jbe
mul
push
cmp
lret
mov
xchg
mov
aaa
jo
stos
xchg
call
addr16
jnp
sbb
mov
sbb
inc
call
fcoml
jle
adc
xor
aad
cld
mov
cmp
jbe
sub
stc
inc
pop
nop
sahf
repnz
icebp
jo
test
mov
lock
lret
inc
insl
xchg
push
jg
adc
test
fisubrs
fimull
mov
mov
add
aad
xor
cltd
sbb
or
cld
inc
sbb
mov
fsubrl
ror
adc
pushf
dec
jecxz
sub
pop
pushf
push
lcall
loope
in
jecxz
stos
lds
aaa
mov
xor
loop
adc
or
arpl
push
mov
inc
decb
outsb
sti
popf
in
rorl
sub
pop
ljmp
and
lcall
cmp
repnz
xchg
xchg
insb
pop
xor
shll
mov
sbb
sbb
mov
out
push
mov
leave
dec
enter
lahf
adc
movsb
or
dec
movsb
and
sub
lods
bound
cld
loop
mov
sbb
dec
and
lock
loope
movsl
call
adc
cmp
repz
jle
or
jno
ja
and
daa
xor
and
out
jmp
push
xor
rcrb
cmpsl
adc
xchg
dec
add
rcrb
push
ljmp
test
jmp
cmp
lahf
daa
sbb
or
lcall
orl
mov
jnp
aad
rcll
jo
test
adc
roll
gs
outsb
pop
xor
mov
mov
mov
in
push
imul
pop
xorb
sub
xchg
jecxz
inc
int3
push
sbb
sbb
cmp
cmpsb
aas
push
sbb
xor
xchg
adc
sbb
in
fcmovu
push
fidivl
pop
inc
add
mov
imul
jp
fistps
pop
sbb
outsb
lret
mov
mov
mov
mov
arpl
xchg
xchg
hlt
stc
lcall
inc
inc
orl
mov
stos
mov
jl
mov
cmc
cwtl
mov
inc
adc
or
xorl
push
mov
arpl
mov
je
subps
imul
push
arpl
mull
adc
lcall
int3
dec
ja
mov
out
sub
lea
mov
push
cld
sbb
xchg
mov
fst
pop
sti
add
cmpsl
data16
imul
jnp
jp
lahf
inc
sub
lods
jns
sbb
sbb
iret
popf
mov
xchg
add
popf
inc
add
imul
mov
sarl
hlt
fisttpll
fwait
xchg
aam
jmp
insb
in
in
int
sbb
cmp
sbb
enter
add
xchg
mov
or
orb
inc
mov
out
test
je
ret
jbe
mov
add
push
or
add
or
cmc
maxps
mov
mov
mov
add
lea
insb
stos
movsb
sub
dec
out
insb
jle
adcb
inc
test
lcall
fwait
xchg
aas
nop
lret
cs
push
adc
popa
cmpsl
jns
jno
or
roll
pushf
cmp
or
xchg
out
iret
mov
cmp
out
aad
leave
test
incb
sbb
inc
or
in
xchg
lock
enter
addr16
sahf
popf
push
shl
cmp
push
inc
push
cmp
ds
mov
cwtl
mov
mov
stc
test
ja
lea
or
adc
push
repz
cs
jne
mov
test
mov
dec
jge
push
cmpsl
pop
cs
es
push
pop
and
fisttpl
scas
push
lods
and
loopne
mov
inc
aad
mov
and
or
lcall
sub
inc
jle
arpl
movsl
dec
les
aam
and
pop
jp
or
xchg
push
pop
mov
or
adc
jmp
aam
mov
mov
out
enter
dec
xchg
pop
pop
loop
js
add
lds
std
lds
sti
or
aam
add
mov
fildll
rclb
out
cwtl
mov
jns
jmp
add
jne
fsubrs
adc
push
les
movsb
test
xor
das
inc
mov
pop
into
pusha
jp
fldln2
cmpsl
lret
int
mov
cmpsl
or
fisubl
xchg
mov
jb
mov
adc
jnp
mov
pop
cmp
mov
adc
sub
js
mov
xor
inc
loop
sub
xchg
dec
test
in
add
ljmp
ret
pop
or
stc
and
xchg
arpl
cli
fbld
movsl
adc
dec
ret
cmc
mov
pusha
arpl
adc
cli
jae
aad
mov
rcrb
xor
cs
call
stos
in
jle
notb
xchg
cmp
mov
ja
push
fsubrl
js
xchg
xor
sbb
in
add
fisubl
lods
popf
repnz
test
jae
out
jmp
pop
sti
pop
jp
gs
push
mov
inc
nop
xor
xor
shll
fnsave
nop
popf
das
test
sub
mov
int3
and
insl
fisttpl
aad
imul
mov
sub
or
mov
clc
mov
adc
inc
lock
push
dec
std
insl
rcl
leave
scas
dec
xor
sahf
fs
out
lret
or
cmp
push
rorl
das
out
mov
sti
ror
out
dec
in
mov
into
push
mov
add
and
or
stos
ljmp
stc
call
jnp
xchg
in
xchg
pop
cmp
cmpl
and
or
jl
cwtl
sbb
mov
lcall
xor
mov
or
and
outsb
and
mov
ds
das
sbb
ljmp
xlat
sti
pop
pop
jns
sub
aam
mov
push
imul
xor
pop
lds
insb
test
or
xchg
pop
inc
aas
xchg
push
push
test
push
nop
insl
add
mov
mov
mov
test
jbe
push
xor
jmp
testb
pop
jecxz
xchg
mov
repnz
adc
xchg
out
in
jmp
dec
lock
test
pusha
incb
aaa
mov
popf
test
sub
push
inc
insl
mov
in
jo
addb
fs
push
mov
lahf
dec
xchg
push
add
jae
test
mov
xchg
fst
pop
mov
fstpt
push
cmpl
adc
mov
dec
mov
dec
jge
out
mov
lock
and
xor
and
cmp
push
loop
dec
mov
mov
nop
popa
adc
mov
cmp
bound
add
or
imul
sahf
mov
lock
and
or
push
cmp
mov
jbe
scas
xor
push
sti
outsb
cmpsb
ret
mov
adc
iret
push
inc
fstpl
jecxz
pop
xchg
mov
adc
jo
enter
negb
jbe
fimull
imul
mov
add
pusha
pop
cmp
mov
dec
test
push
push
pop
test
cltd
cmp
into
aas
aad
xchg
sbb
xchg
jecxz
pop
out
mov
pop
sbb
mov
xchg
fdivrs
pop
sbb
insb
mov
xchg
int3
cmp
sahf
jae
in
or
bound
sub
call
cld
mov
sbb
enter
int3
nop
inc
fwait
call
ja
ss
arpl
mov
ljmp
and
out
push
icebp
les
xor
inc
inc
ret
xor
push
dec
clc
imul
fldt
notw
fwait
out
stc
adcb
sahf
jp
pop
adc
inc
aam
mov
push
scas
filds
jge
pop
and
stc
lock
pop
or
ljmp
lea
adc
mov
inc
and
adc
cmp
push
gs
ss
dec
sub
sub
fldenv
fiadds
mov
xor
lahf
sub
jbe
jnp
cld
aas
jae
ficoms
pop
jno
push
sub
sub
das
fnsave
sti
push
leave
rcrb
jae
pusha
pop
cmp
add
and
xor
int3
sub
pop
xchg
dec
sub
sbb
cmpl
shrl
sbb
lods
jmp
cwtl
cli
pusha
dec
and
out
pop
dec
popf
push
jne
fwait
movsb
jg
sub
push
add
outsl
adc
push
add
mov
xor
mov
and
repnz
addr16
mov
mov
sub
insb
pop
and
testl
lret
js
leave
add
outsl
xchg
pusha
dec
sub
push
stc
xchg
hlt
cmpsb
pop
in
in
lods
pushf
xor
ljmp
mov
pop
leave
in
jl
adc
fsubl
stc
mov
mov
xor
lret
inc
jae
cmpsb
push
jno
sub
jmp
into
jmp
loopne
in
ret
cltd
push
inc
cli
and
dec
xor
jmp
lcall
push
sbb
movsb
jmp
scas
insl
mov
adc
or
iret
dec
inc
push
filds
mov
dec
xor
addb
and
jl
jmp
clc
clc
push
mov
xchg
mov
sbb
xchg
cld
cmp
sub
stos
inc
push
movsl
inc
mov
roll
lahf
sti
adc
inc
sbb
push
sub
shll
out
repz
fdivp
mov
adc
cmovo
sbb
popa
mov
and
add
call
shl
lods
aaa
shrl
or
call
push
xchg
fcomi
js
pop
pushf
hlt
loop
fisubl
xor
arpl
add
jae
out
jp
pushf
push
pop
xlat
mov
mov
xchg
mov
jb
aaa
aad
pop
ljmp
cmp
cmp
pop
mov
and
in
test
pushf
fldenv
sbb
notl
xor
push
fistl
stos
arpl
mov
push
rorl
xchg
int3
xor
cs
jmp
imul
jne
mov
ret
out
sarl
jb
sbb
scas
adc
jecxz
shlb
movsl
loop
xor
in
icebp
ss
and
and
jecxz
pop
pop
or
xor
mov
xchg
xor
cwtl
lret
pop
inc
push
add
sbb
sbb
pop
inc
jns
popf
lods
mov
inc
inc
shl
fildll
mov
insb
jbe
ret
stc
xchg
and
dec
lds
or
or
lahf
insl
sub
fs
loopne
daa
rcrb
test
in
push
xchg
int
ret
mulb
jns
test
jnp
xor
mov
fs
pop
call
mov
or
and
aaa
sub
fcompl
push
push
push
add
std
loop
lock
push
pushf
fwait
dec
stc
adc
pushf
lret
in
mov
fisubrs
push
into
mov
lods
imul
and
cmp
stc
ds
je
mov
add
ss
inc
cmp
cmpsb
pusha
cli
jne
dec
cmp
mov
cltd
aaa
rcll
ljmp
xchg
add
lret
sub
fwait
cmp
decl
int
cmp
xchg
dec
dec
inc
adc
sbb
shll
jo
out
js
test
iret
cmp
mov
sub
add
inc
xchg
or
lret
jp
lds
imul
mov
aaa
daa
fstl
push
xchg
jle
in
xchg
adc
push
dec
insb
dec
jle
pop
mov
mov
aad
cmp
mov
lds
jnp
jno,pt
xor
inc
mov
lret
imul
pop
push
pusha
xor
ffreep
jns
adc
push
push
push
cs
xor
xor
dec
insl
jb
push
push
jbe
mov
push
jnp
lret
outsb
mov
cwtl
cwtl
iret
lahf
int
jp
xorb
push
pop
mov
enter
outsl
push
int
repz
jp
iret
stc
jns
mov
or
adc
mov
xor
xchg
imul
add
inc
cmp
mov
push
cmp
cmpb
stc
fwait
in
mov
and
add
dec
outsl
sub
ss
sbb
scas
xchg
dec
popa
loope
call
jnp
enter
inc
pop
or
aas
ret
scas
or
bound
cmp
in
adc
test
mov
push
mov
dec
jo
stos
cmp
out
rcrl
or
subb
into
sub
push
push
mov
jl
outsl
sub
hlt
push
mov
xchg
sbb
jp
xchg
xchg
mov
fildll
js
xchg
stos
xor
test
mov
ret
dec
fmuls
js
mov
out
mov
pusha
pop
cmp
push
push
push
push
or
mov
pop
sub
arpl
stc
es
orb
push
loope,pt
int3
xor
mov
mov
mov
lret
xchg
mov
arpl
jl
sbb
cltd
mov
or
lret
mov
jnp
outsb
mov
inc
andl
mov
ret
jnp
popf
xchg
mov
jg
pop
mov
fadd
cmp
mov
mov
mov
cmp
xchg
push
daa
in
lret
dec
mov
stc
adc
call
int
xlat
loopne
or
cmp
bnd
pop
jle
fnsave
dec
stos
lds
in
lret
or
shr
sbb
jg
and
dec
push
stos
pop
das
cltd
fdivl
or
sti
rolb
cmc
loop
mov
pop
in
push
fcomps
ds
mov
int3
mov
scas
pop
jno
or
push
andl
sbbl
test
test
adc
pop
lret
enter
jl
es
sub
lcall
pop
xor
pop
push
sti
add
sub
xchg
inc
pop
in
in
inc
imul
adc
mov
popf
mulb
inc
es
inc
ror
pop
ljmp
loope
mov
ret
icebp
push
inc
mov
mov
jmp
dec
outsb
js
popa
shrl
into
or
mov
or
popa
fistps
jl
inc
sahf
xchg
xchg
decb
pop
pop
push
pop
imul
int3
add
shlb
movsl
mov
sub
scas
mov
mov
fcomip
jl
or
jmp
xchg
enter
out
call
lods
sbb
cmpb
jb
jmp
inc
lods
dec
mov
sub
jl
pushf
sub
inc
lock
sub
orl
sub
les
add
addr16
scas
insb
inc
push
dec
bound
or
pushf
lds
jge
lods
movsb
push
sarb
lahf
mov
sbb
fidivl
pop
or
mov
push
aaa
outsl
mov
push
mov
add
test
nop
fldt
or
loope
out
xchg
pop
out
dec
hlt
out
aaa
incb
lds
gs
int3
repz
out
mov
jmp
sub
push
and
cs
mov
xchg
fbld
stos
lock
ja
js
jns
cwtl
arpl
out
fimuls
adc
sub
out
lahf
push
adc
jo
xor
cwtl
inc
pushf
testb
jo
xor
ret
mov
xchg
push
xchg
xor
or
ret
aam
sbb
xor
or
inc
xor
pop
jle
pop
movsb
push
xchg
inc
movsb
jns
pop
fistl
push
dec
mov
sbb
add
jmp
lock
push
fistpl
mov
loope
repnz
test
outsl
cli
clc
stc
daa
daa
xchg
mov
xchg
loopne
cmp
clc
mov
out
jmp
repnz
cmp
sub
dec
cmp
shl
mov
out
popa
les
sub
inc
aas
inc
ficomps
mov
dec
filds
cwtl
leave
mov
and
rcll
aam
aaa
es
sub
cltd
ljmp
stc
mov
mov
mov
xchg
mov
sbb
mov
jns
push
mov
ror
aas
clc
pop
dec
push
mov
cmp
aaa
das
push
jg
and
mov
xor
test
int3
mov
adc
repz
sbb
mov
pop
mov
dec
addb
pop
mov
pop
cmp
in
push
popa
lock
or
jb
cmp
mov
jns
in
gs
ja
int3
paddusb
jne
sub
cmpsb
sub
pushf
mov
test
adc
out
lret
dec
mov
or
push
fcomi
xor
inc
mov
and
push
push
ljmp
in
test
shlb
jne
fcomps
mov
fucomi
xchg
push
jg
push
sti
jge
test
xlat
push
jp
lock
inc
sbb
rcrb
aaa
daa
add
ljmp
xchg
rcl
push
inc
pop
imul
jno
jle
aas
jecxz
cwtl
cli
cwtl
cld
lods
fstpt
adc
dec
xchg
subb
mov
cltd
jp
dec
lock
sub
jmp
xor
int3
or
es
jo
arpl
movsl
test
hlt
cmp
frstor
mov
je
xchg
or
shlb
pop
xchg
std
inc
and
dec
je
add
add
das
xchg
out
movsl
dec
or
and
lahf
sub
outsb
mov
daa
popf
and
cmp
mov
jo
mov
xchg
aam
dec
xor
mov
test
sub
gs
fsubp
fdivrs
lret
mov
fs
insl
pop
mov
fdivr
movsb
push
sub
das
fs
movsb
gs
sbb
fsts
out
inc
daa
xchg
mov
xor
mov
pop
rcll
adc
mov
push
mov
repnz
jl
rcrl
fimull
lock
negl
adc
in
and
pop
mov
in
mull
jle
arpl
jb
jmp
pop
cli
lods
sbb
xchg
mov
divl
stos
jno
inc
jmp
push
sbb
mov
or
push
mov
in
xor
inc
push
or
cmp
out
push
lods
inc
mov
or
inc
cli
pop
fistpl
jecxz
adc
adc
stos
out
pushf
push
in
sub
cmpsb
pop
test
mov
out
dec
add
jecxz
cli
pop
mov
in
scas
mov
and
sar
xor
adc
jne
mov
popa
lret
jge
fsubr
movsb
test
popf
cmp
sbb
fdiv
inc
mov
jecxz
xchg
adc
sbb
push
pop
mov
clc
divl
or
rorl
xor
mov
orl
xor
sub
imul
push
mov
aam
mov
rcll
rolb
inc
ret
cmpsl
sub
inc
cmp
add
push
fisubl
adc
mov
adc
xchg
and
inc
fs
inc
outsb
jmp
pop
mov
lods
xor
xchg
loop
cmp
jns
mov
es
push
mov
add
cmp
fcmovu
ja
dec
dec
xchg
cmp
pop
lods
loope
add
push
lds
or
inc
jmp
xchg
lods
push
shl
popa
xor
pop
jne
adc
mov
fwait
jecxz
std
cmc
xchg
into
mov
pop
cs
lret
inc
add
push
icebp
sub
pop
fs
adc
pop
mov
mov
jl
leave
fldcw
daa
fiadds
push
aaa
insb
daa
sub
push
pop
sub
in
or
cmp
mov
inc
or
add
daa
mov
sbb
xchg
xchg
mov
je
jne
and
mov
mov
lods
xchg
insl
lock
in
mov
stos
dec
lret
repz
imul
pop
fadds
sarl
mov
sub
inc
lods
mov
ljmp
fildl
push
and
xchg
adc
addb
insl
popf
adc
sub
mov
aaa
jns
in
das
fs
or
mov
adc
into
adc
insb
popa
mov
and
push
out
das
not
lcall
into
jnp
es
sub
inc
and
mov
shrb
fadds
aaa
aaa
mov
das
and
in
idivb
sub
add
dec
outsb
push
mov
cmp
scas
fisubrl
fidivs
sub
scas
stos
jmp
sar
and
hlt
lret
push
jecxz
icebp
cmpsl
das
dec
scas
int
inc
jne
outsl
mov
addr16
in
inc
adc
sub
aam
mov
jae
adc
sub
xchg
sub
lcall
push
rorb
jnp
pop
xchg
out
sub
mov
push
add
out
cmpsb
push
scas
jp
sub
or
enter
push
adc
push
xor
mov
in
mov
or
jnp
jg
cld
js
mov
or
adc
test
lcall
cmp
cmp
push
and
mov
int3
stc
in
test
sti
movsl
cmp
loopne
add
int3
push
enter
pop
xchg
jmp
dec
lods
fwait
jp
popf
insb
sbb
xor
into
or
in
das
lret
push
lret
dec
movsb
push
cmc
mov
sti
subl
rclb
inc
xor
jnp
sbb
lea
push
scas
push
cmc
sti
mov
add
dec
and
aas
lret
ret
xchg
add
dec
outsb
subl
adc
xor
int3
and
sub
filds
dec
mov
mov
and
lock
mov
lock
pop
or
pusha
loop
cld
cmpsl
dec
adcl
sub
pushf
fisttpll
mov
xor
mov
das
icebp
xchg
aam
fmul
adc
xchg
jo
outsl
dec
jg
mov
push
cmp
fcmovnu
mov
cmpsb
loope
out
pop
jmp
test
xchg
lret
sub
adc
aas
jmp
xor
gs
data16
dec
dec
mulb
iret
sbb
movsb
mov
sub
cmp
pop
jp
lock
jl
jno
bound
cmp
push
ljmp
mov
adcl
scas
ja
dec
sub
shr
dec
test
mov
movsb
dec
push
cmc
push
or
iret
add
pop
ja
scas
inc
pop
xor
mov
sub
cmpsl
cmpsl
f2xm1
movsl
xchg
fcomi
inc
pop
out
cld
in
fstp
cmp
xchg
mov
push
sub
fwait
and
loop
cmp
adc
jnp
test
enter
test
cwtl
xchg
adc
out
fdivs
mov
sbb
lret
adc
dec
repz
push
hlt
dec
push
dec
xor
jbe
in
aaa
les
lods
in
jle,pn
push
out
leave
or
adc
cli
push
ficoms
push
aad
pusha
mov
in
lret
clc
mov
lds
mov
ljmp
in
jp
iret
push
jecxz
aam
jb
xchg
xor
push
jne
or
dec
pop
add
push
mov
jne
aad
aaa
jo
adc
sbb
jg
add
push
or
fcomip
inc
out
or
mov
mull
mov
jmp
jl
imul
loope
dec
xor
arpl
mov
or
mov
fsub
xor
out
pushl
int
xor
jecxz
test
fiaddl
subb
scas
mov
and
mul
cmp
lret
jmp
dec
inc
fstpl
and
inc
dec
mov
rcr
mov
jg
out
sbb
in
and
pop
sar
les
je
push
xor
adc
rorb
push
lds
ret
shrl
cmp
es
shrb
fiadds
mov
mov
pop
mov
inc
dec
pop
out
pop
mov
out
out
xlat
lret
push
dec
inc
int3
les
jae
imul
and
push
orl
push
sub
fiaddl
mov
test
push
push
stos
mov
mov
push
mov
cmp
sbb
inc
stos
leave
hlt
enter
fs
fsubr
loopne
das
inc
data16
jle
insl
popf
lea
cmp
jg
jne
sbb
pop
adc
sbb
loop
call
push
int3
mov
gs
mov
popf
xor
pop
insb
cld
scas
fsubr
shl
insl
es
sbb
bound
push
dec
adc
sbb
and
sahf
movsl
popf
scas
repz
lods
les
mov
lret
pop
mov
cmp
aam
jmp
push
fldenv
xchg
and
sub
cmp
mov
out
pop
test
clc
in
movsl
pop
push
mov
fcmovne
outsb
fisttps
xchg
mov
sbbl
xor
add
dec
or
jl
sub
cmp
mov
mov
sahf
inc
pop
stc
and
sahf
cmp
daa
xor
mov
push
cmc
jle
outsl
jmp
xchg
mov
xor
repnz
jp
pop
sub
adc
pop
mov
cmp
repnz
jns
test
jmp
or
jl
xchg
push
lret
roll
cmpsb
mov
js
loopne
add
mov
mov
sub
push
push
cmc
sbb
push
adc
mov
lods
or
pop
sbb
jle
cmpsb
xchg
cmpb
sub
mov
add
jl
cmpsl
mov
push
inc
adc
adc
jle
adc
pusha
jbe
loopne
mov
mov
and
jae
jecxz
movsl
inc
jo
iret
xchg
xor
mov
addr16
push
cmp
ficoms
hlt
push
push
cltd
fwait
rolb
xchg
sbbb
mov
jbe
stos
pop
out
mov
pop
adcl
pop
int3
mov
dec
scas
aam
jmp
xchg
add
cmp
pop
sub
push
shll
xchg
add
fnsave
push
push
mov
outsb
rcpps
sbbb
mov
mov
mov
cmp
outsl
ffreep
lahf
rcll
testb
pop
jecxz
andb
mov
je
iret
rcrl
jnp
jmp
xor
out
loopne
aaa
xor
mov
je
fxch
cmp
sbb
mov
rolb
shl
cmpsw
sub
push
stc
sub
flds
or
or
call
sub
mov
xor
cmpsl
subb
insl
popf
pop
je
jecxz
jecxz
int
mov
push
imul
lods
stos
flds
lods
mov
test
dec
dec
cld
mov
mov
sub
mov
adc
shlb
sub
je
in
test
div
xchg
sub
mov
cmp
mov
jno
cmpsb
in
scas
sub
in
pop
out
fnstcw
mov
adc
mull
mov
bound
or
out
imul
dec
cmp
mull
sub
add
adc
and
int3
loope
andl
test
jns
lods
stc
sub
stos
aaa
gs
aad
mov
fsubp
push
rol
sbb
cmpsl
gs
push
mov
scas
pop
sub
stos
cli
mov
mov
ficompl
sub
sbb
popf
add
out
in
sbb
mov
jo
pop
enter
mov
adc
aad
dec
bound
neg
push
test
push
add
sbb
lahf
pop
mov
pop
imul
pop
arpl
scas
lods
dec
xor
add
sub
cltd
pop
hlt
iret
dec
and
aaa
or
sbb
mov
jg
lods
iret
loope
push
shll
sbb
insl
dec
scas
sub
mov
imul
stos
ret
jnp
pop
mov
jmp
mov
out
aas
adc
sbb
jae
arpl
xor
subl
scas
pusha
lock
and
fidivl
mov
cmp
roll
call
aam
es
dec
inc
cli
add
mov
jl
ljmp
push
sbb
or
dec
xchg
push
sub
clc
outsb
adc
cli
gs
shrl
inc
stc
dec
lret
hlt
pop
aaa
cld
jle
lret
xchg
mov
daa
push
sarl
nop
xorb
subb
pop
jo
sub
ret
mov
int3
mov
adc
in
and
call
aam
xchg
pop
insb
cltd
and
mov
int3
insl
mov
mov
bound
sbb
xchg
sbbl
cs
stc
scas
sti
push
pop
dec
mov
popa
pop
push
dec
dec
mov
or
xor
cld
ja
jne
mov
lcall
inc
outsb
popf
xor
sbb
ret
enter
sub
push
shll
bound
add
pop
xor
data16
jns
sahf
dec
arpl
push
ficomps
dec
inc
orl
xchg
test
into
xchg
scas
and
jns
fstps
aas
mov
jnp
dec
fcmovb
and
add
pop
jle
daa
jb
daa
imul
pop
xchg
xor
pop
sub
adc
loope
cld
scas
xchg
add
clc
xchg
roll
dec
bound
lret
clc
inc
jbe
cmpsb
gs
and
jae
mov
adc
cwtl
ss
mov
cmc
popa
jnp
pop
dec
insb
imul
js
add
cld
daa
mov
lods
ss
mov
mov
cmc
pop
fnsave
and
in
rorb
inc
pop
jnp
dec
sbb
push
sub
iret
mov
gs
and
loop
mov
jno
cmc
lsl
dec
sub
xchg
cmp
int3
push
mov
cmp
aam
stc
lods
lods
insb
repnz
aaa
jp
jp
sbb
mov
ret
cmp
dec
mov
jne
movsl
push
mov
pop
xchg
sbb
outsl
lret
cmp
cltd
std
inc
mov
jb,pn
nop
pop
pop
div
stos
jle
test
test
or
cmp
mov
jg
jecxz
orl
cwtl
pop
jbe
sarb
xchg
hlt
mov
xchg
outsb
pop
fstpt
leave
jmp
adc
cwtl
sbb
xabort
add
adc
xor
add
hlt
notb
add
daa
or
push
aad
test
cmp
mov
mov
sbb
nopl
inc
adc
pop
add
mov
jbe
xor
dec
mov
add
movsl
xlat
repz
cmp
pop
cld
lods
and
xchg
adc
mov
mov
and
xchg
mov
pop
out
call
shl
sub
mov
jns
xor
lods
loop
icebp
mov
dec
loopne
push
bound
stc
mov
pop
add
pusha
jns
pop
mov
xor
adc
cmp
sbb
or
push
mov
movsb
popa
mov
pop
pop
pop
or
rclb
push
push
mov
mov
in
jbe
pop
mov
xchg
or
or
scas
pusha
aam
or
xor
add
sub
arpl
add
xchg
or
movsb
data16
dec
arpl
xor
testl
mov
xor
cltd
movsl
xchg
pop
scas
xor
jp
sub
push
jg
das
add
push
es
jge
inc
mov
mov
push
in
leave
mov
in
jp
mov
pusha
lret
jne
std
and
loop
sub
mov
sbb
xlat
stos
mov
sub
mov
in
add
sub
inc
inc
test
into
std
adc
push
data16
lds
fwait
cs
jle
inc
ljmp
fidivl
jge
and
lahf
andl
out
dec
mov
push
adc
push
insl
mov
or
and
xor
jo
xorb
popf
and
and
xor
mov
add
pushf
std
and
pop
mov
je
scas
daa
inc
les
pusha
std
or
decl
mov
inc
insb
mov
inc
pop
or
and
addl
in
mov
add
inc
mov
jmp
mov
mov
pop
stc
ljmp
movsl
sarb
dec
and
fs
out
addr16
mov
rclb
sub
daa
shlb
mov
adc
jmp
xchg
out
mov
inc
push
in
and
fbld
push
mov
add
es
push
or
pop
jae
fcomps
popf
adc
pop
leave
mov
xor
outsl
cmp
pop
sbb
insb
dec
aas
stos
add
xlat
xchg
lcall
add
mov
jnp
rcl
cmp
sub
xchg
imul
loop
or
cmp
pop
js
movsb
and
and
jnp
mov
push
mov
push
jmp
loop
pop
push
fs
cmpsl
xchg
sub
cmpsl
inc
es
jbe
aaa
sub
daa
cwtl
loop
movsl
in
aam
jp
loopne
adc
mov
cmp
pop
filds
and
and
loope
fistl
and
cmp
push
or
xorb
fwait
cmc
xchg
and
or
pop
sub
ljmp
jbe
dec
or
add
insl
push
add
dec
div
lcall
out
pop
add
xor
dec
and
and
xor
mul
fistpll
fstpl
lret
out
jae,pt
xchg
adc
les
sub
push
inc
mov
xchg
inc
dec
insb
or
push
pop
jg
cmp
clc
mov
inc
pop
mov
shll
dec
add
xor
sub
fsubr
arpl
xor
iret
xrelease
fsts
fisubrs
cmp
cmovg
pop
aam
push
bound
mov
xchg
loopne
aam
push
xchg
fdivrl
push
xchg
fldln2
xchg
pop
cmpl
mov
shl
lahf
mov
fisubrl
test
cmp
fucomp
xor
int
fcoml
lock
leave
cmp
and
movsb
cmp
sbb
addr16
cmp
leave
add
orl
stos
push
aas
mov
scas
in
fadds
xchg
push
push
fsubl
mov
add
xchg
fdivl
jl
inc
mov
cmp
fsts
out
cmpsl
repnz
movsb
mov
out
pop
loope
outsl
add
aam
push
pop
mov
pop
xchg
stos
add
sbb
xor
lods
mov
movl
popf
mov
scas
mov
lcall
jecxz
dec
mov
leave
and
inc
repz
adcb
aas
sbb
sti
sub
mov
xchg
std
dec
cmc
sbb
inc
xor
int3
popa
push
mov
outsl
ds
scas
pop
test
mov
aam
xchg
inc
fwait
stc
cmp
mov
cs
or
push
fldcw
xchg
mov
mov
cmpl
push
jb
je
mov
add
aas
sahf
cmp
adc
jp
inc
pushf
xchg
nop
push
neg
cmp
inc
lret
in
pop
fistpl
or
les
fmuls
mov
pop
mov
pusha
test
rolb
add
pop
or
lret
aam
xchg
shlb
andl
sub
pop
xchg
adc
popf
inc
shlb
jmp
and
adc
adc
in
push
pusha
in
sbb
xchg
dec
imul
icebp
cwtl
iret
inc
adc
mov
jg
sar
inc
jecxz
jae
push
pushl
jle
mov
test
or
dec
inc
mov
pop
pop
mov
jb
arpl
shrl
sbb
jns
imul
push
ffreep
xor
xor
mov
sbb
push
mov
adc
ja
xchg
xchg
xchg
repz
xor
gs
pop
push
pop
jne
pop
shlb
push
push
xchg
movsb
lcall
test
inc
jo
or
packuswb
das
push
push
mov
add
jb
sub
mov
fsub
and
inc
loopne
sub
jb
addl
fwait
xor
xchg
mov
push
shll
cwtl
adc
or
jne
fistpl
movsb
push
push
call
inc
aad
inc
bound
push
jne
pusha
pop
ja
mov
dec
enter
mov
outsl
mov
pop
idivb
loope
lods
in
notb
daa
loopne
sub
pop
or
lea
cmp
clc
pusha
jbe
mov
pop
leave
scas
add
mov
scas
iret
push
xchg
test
insb
jbe
push
lea
xor
jnp
dec
stc
lret
sub
rcl
inc
add
cltd
lret
cmpsb
and
lods
mov
mov
mov
mov
mov
jmp
jg
test
jecxz
es
outsl
inc
or
sub
xor
adc
mov
jle
fs
outsb
out
xor
inc
sub
xor
push
and
push
jae
inc
lock
sbb
fildl
mov
aaa
mov
fucomp
pop
ret
filds
jno
test
stos
in
gs
mov
imul
scas
and
add
stc
sbb
mov
scas
xchg
add
notb
pop
or
jge
lods
xor
xchg
data16
cmp
movsb
and
xorl
fistl
jl
sub
rcll
cwtl
imul
adc
push
outsl
pop
and
xchg
ljmp
test
mov
mov
dec
int3
rcrl
or
mov
xchg
es
int3
fildll
stos
sub
push
mov
adcb
ss
cmp
stos
scas
inc
sub
mov
cmp
test
test
mov
cld
lahf
lret
jbe
es
fnsetpm(287
xchg
movsb
sub
inc
repnz
sub
mov
movsl
add
aaa
and
xchg
jns
ret
dec
pop
sahf
mov
stos
test
sbb
test
push
pushf
jl
pop
sbb
mov
fnstcw
mov
fiadds
and
in
cmpsb
shrl
ja
sbb
mov
adc
jb
cmp
lods
cmp
add
jo
loop
test
popl
push
popf
subl
call
add
adc
push
mov
add
jbe
push
xchg
xchg
dec
sbb
popf
pusha
xchg
out
out
push
imul
cmpsb
orb
push
xchg
mov
daa
test
pop
out
in
in
stos
ret
xchg
in
dec
sub
jl
aas
data16
out
xchg
into
xchg
and
mov
jno
into
jo
cld
dec
and
inc
push
jecxz
xchg
notl
popa
xchg
lea
and
pop
cmp
cs
sub
or
pop
std
ret
loop
insb
dec
dec
popf
int3
mov
sub
out
test
cmp
scas
push
mov
sub
ss
inc
cltd
mov
xchg
cld
cmpsb
cld
xchg
ret
lods
cmpsl
stc
push
es
enter
pop
je
pop
cli
mov
adc
xor
mov
mov
in
cwtl
xor
pop
loope
push
nop
lcall
inc
in
movsb
and
sbb
xchg
negl
and
xchg
pop
mov
push
fwait
xor
mov
push
jmp
xor
add
xchg
jecxz
int
jl
mov
shlb
inc
out
sub
movsl
pop
stc
fisttpll
push
rorl
add
rcr
cli
mov
jg
pop
and
pop
add
inc
sub
xor
mov
mov
inc
sbb
or
mov
mov
hlt
adc
add
jne
ret
sahf
jne
in
jle
outsl
mov
cmp
xor
lock
pushf
inc
cmp
loop
dec
dec
push
pop
cltd
scas
jg
add
push
adc
mov
mov
adc
push
jns
pop
pop
aaa
test
mov
push
xchg
cmc
jle
cmp
and
jl
popa
test
adc
cltd
pop
movq
pusha
je
xchg
jb
dec
js
pop
dec
sahf
subl
cwtl
scas
sub
jle
call
cmpsl
adc
lahf
mov
pop
jecxz
and
xchg
imul
jmp
in
iret
fbstp
imul
mov
or
and
dec
sub
pusha
out
jns
imul
test
shr
je
sbb
sub
leave
fwait
mov
push
arpl
movsb
fisubs
daa
repnz
push
fwait
push
data16
insb
cmp
xchg
jb
cld
fidivl
jb
and
fldenv
cmpsl
adc
lret
sbb
cmp
out
data16
lods
pop
fcmovu
sbb
pushf
inc
inc
lcall
cltd
inc
out
into
add
pop
inc
shll
mov
xchg
stc
arpl
or
shrb
out
orl
daa
cmc
and
and
xchg
das
sbb
jl
and
lahf
cmp
cwtl
out
faddl
mov
bound
xor
imul
aas
xchg
pusha
xchg
in
imul
aad
push
mov
mov
sbb
mov
arpl
adc
jecxz
sbbl
jecxz
ljmp
inc
negb
insb
cmp
dec
jle
sub
mov
push
mov
inc
dec
sbb
icebp
xlat
das
dec
xor
xor
xor
sbbl
sub
adc
into
rcl
pop
mov
pushf
jmp
pop
xchg
mov
cmp
lock
and
push
mov
dec
fs
jl
mov
add
loop
dec
add
mov
sub
cmc
mov
add
pop
and
inc
or
mov
pop
push
out
pop
aaa
subl
jb
push
std
sti
jmp
icebp
sbb
push
xor
mov
and
ficoml
dec
jmp
sbb
inc
or
addr16
jne
imul
sbb
xor
sbb
in
sub
push
sub
pop
sbb
mov
cwtl
lods
divl
into
stos
inc
adc
jo
mov
adc
addb
push
add
jle
xchg
imul
inc
scas
sub
add
pusha
jmp
test
or
dec
inc
add
cmp
ret
mov
push
add
out
and
jnp
jp
mov
inc
imul
les
ret
nop
fwait
mov
je
mov
dec
lds
insb
out
cli
inc
and
xlat
xorb
loop
orl
mov
adc
add
add
ja
stos
mov
lahf
and
fistps
mov
sbb
js
xor
outsl
xchg
push
fcmovbe
mov
xor
or
cmp
stc
shr
mov
sub
xchg
or
mov
fs
test
push
xorl
testb
cmp
mov
cs
gs
xor
lock
push
xchg
in
cmc
and
sbbl
test
jne
push
dec
inc
sahf
rcrl
xchg
mov
add
or
xor
push
cmpsb
out
jecxz
mov
rcll
or
and
xchg
orb
addl
add
push
adcb
fists
loopne
lock
mov
jnp
jg
repz
adc
pop
les
inc
and
lods
cmpsl
cmpsb
sub
pop
adc
inc
or
insb
mov
pop
bound
arpl
mov
mov
xchg
movsl
xorl
pop
mov
dec
sbb
out
push
sahf
dec
push
mov
or
out
jbe
aad
repz
jecxz
inc
xor
scas
cmp
insb
add
inc
mov
in
mov
pop
rolb
push
xor
push
frstor
insl
xchg
add
mov
sbb
in
int
mov
and
add
lret
push
add
jne
ss
fstpl
out
cmove
popf
gs
sahf
andl
rorl
and
test
mov
sub
push
fsts
lea
inc
andb
mov
mov
and
outsl
mov
fcomps
mov
bnd
mov
inc
or
and
loope
mov
dec
rolb
push
push
jae
pop
sbb
dec
test
xchg
or
subl
jle
dec
inc
andb
add
mov
mov
iret
shlb
fldt
adc
xchg
push
movsl
inc
gs
fmuls
jl
adc
mov
scas
push
insl
scas
xor
into
bound
faddl
dec
test
xor
ficompl
and
addr16
dec
add
leave
inc
leave
imul
jmp
aad
enter
mov
dec
mov
add
jg
sbb
xor
pop
and
das
pop
repz
or
rcrl
inc
out
aam
fwait
imul
inc
faddl
inc
adc
fsubrp
inc
fs
sub
and
xlat
hlt
xor
ror
jb
pop
inc
mov
shl
pop
pop
jmp
adc
test
mov
mov
sub
or
jne
push
add
sub
je,pn
and
cmp
repz
mov
fistpll
popa
gs
int
and
xchg
dec
pop
jns
add
mov
cmp
push
cld
mov
pop
ss
inc
shlb
fdiv
pop
cmp
bound
test
aas
push
mov
rcll
mov
dec
xchg
add
sub
test
ljmp
roll
fnstsw
fadds
ss
cmp
pop
les
mov
mov
inc
jle
sbb
inc
cmp
loope
mov
mov
loop
or
in
test
call
pop
out
or
ljmp
in
sub
push
mov
shr
mov
cmp
push
imulw
insl
int3
adc
cmc
repnz
pop
mov
or
mov
pop
sub
jl
pop
xlat
mov
ljmp
xchg
jb
mov
lods
data16
push
adc
or
mov
lods
loope
stos
mov
xchg
fwait
sbb
aad
pop
pop
mov
and
loop
sbb
stc
outsl
push
loopne
xchg
scas
dec
stc
fildl
adc
pop
jbe
ljmp
mov
xor
sbb
lock
lcall
jl
xchg
lcall
xchg
fwait
inc
int
push
std
push
test
push
std
push
js
mov
andb
push
mov
mov
sub
mov
or
dec
pop
pop
sti
sub
or
adc
xchg
jmp
sahf
add
jne
hlt
pusha
insb
movsl
add
dec
mov
add
push
out
out
stc
loope
scas
sbb
outsl
or
mov
mov
fxam
or
rcrl
testl
rorl
ja
mov
push
daa
stos
in
mov
push
shll
sub
insb
imul
fdivrs
cmpsl
daa
sub
ret
push
fwait
ja
dec
adc
inc
popw
mov
inc
and
out
xchg
and
jl
lahf
xor
shll
bound
in
jo
mov
adc
sbb
push
add
add
repz
mov
cmp
xchg
repnz
sub
mov
ficoms
cmp
into
hlt
mov
int
jmp
loop
stc
jle
outsl
mov
push
dec
push
xchg
leave
push
sbb
mov
test
xchg
dec
repz
xor
inc
xor
in
jg
jp
jnp
repz
stos
mov
push
push
jge
imul
frstor
cwtl
fnstcw
adc
cmp
jne
xor
push
loope
and
pushf
sbb
lock
flds
fldl
clc
outsb
aas
js
iret
scas
cltd
lods
aas
call
mov
xor
lret
mov
enter
dec
sub
sbb
aad
inc
bound
push
icebp
inc
cmpsb
movsb
add
xchg
mov
mov
jbe
sbb
gs
push
icebp
pop
pushf
mov
pop
stc
cs
cmp
and
outsb
cs
das
insb
adc
enter
das
les
call
es
sub
repnz
mov
pop
test
inc
in
daa
and
pushf
insl
call
mov
push
pop
jle
pop
sti
mov
jae
push
dec
jmp
jno
push
outsl
xchg
dec
fcom
xchg
mov
shrb
call
mov
jp
rclb
out
ja
mov
jg
fistl
cli
call
addb
test
adcb
jp
mov
imul
arpl
mov
lds
fwait
xor
mov
cmpsl
dec
imul
or
push
test
test
mov
adc
push
xchg
cs
mov
and
fldt
xchg
loope
das
adc
inc
sub
icebp
cmp
lods
dec
mul
sahf
mov
clc
cld
rol
out
lods
je
lds
aam
xchg
cmp
push
ret
cltd
xchg
imul
mov
fs
xor
add
aaa
lods
push
js
xchg
mov
sbb
das
mov
test
add
cltd
daa
jbe
dec
sub
add
and
loop
lods
pop
lods
cli
xor
in
pop
sub
sub
pushf
inc
and
nop
xchg
jns
mov
ljmp
scas
ret
cwtl
lock
inc
add
mov
int3
cmc
jnp
adc
fsub
sbbb
fs
insl
cmp
cmp
dec
pop
rcr
pop
pop
pop
push
xor
inc
mov
dec
mov
cwtl
dec
jp
loope
jmp
clc
xchg
clc
inc
test
mov
lret
ds
call
fistpll
add
adc
mov
adc
add
dec
das
popa
mov
adc
and
rol
add
jle
sahf
in
or
arpl
adc
mov
jg
cmp
dec
fnstcw
ffreep
mov
adc
cmp
dec
add
jno
jle
sub
out
imul
fcmovnu
mov
or
stos
into
sub
pop
push
jp
mov
insl
idivb
pop
xchg
mov
pop
jp
pop
cmp
cld
popa
push
adc
jle
movsl
in
and
mov
inc
xor
iret
jb
inc
gs
sbb
push
inc
lahf
imul
xorb
sub
stos
and
sub
dec
inc
sub
xchg
mov
popa
insl
pop
jne
mov
xchg
gs
rcl
test
add
je
adc
repz
sbb
outsl
stos
adc
out
mov
xchg
out
cmp
test
inc
lahf
sahf
test
rcrb
js
add
or
lcall
je
push
add
jle
fidivl
dec
rorb
push
in
add
and
xor
jp
mov
mov
test
roll
imul
orb
into
add
mov
roll
cmp
or
repnz
xor
pop
jge
xor
xchg
push
inc
cmpb
cwtl
sub
push
sar
inc
jge
jbe
mov
xchg
xchg
loop
sub
ja,pt
hlt
nopl
ffree
push
jo
ret
sbb
out
dec
dec
mov
xchg
outsl
push
mov
inc
test
out
jae
mov
push
cmp
mov
test
bswap
addr16
adc
xchg
add
aam
ret
jo
fnsave
icebp
roll
xchg
out
dec
pop
les
pop
mov
andl
sbb
pop
mov
fsubrs
outsl
inc
daa
pusha
or
movsb
add
sbb
sti
call
pushf
pop
pop
cmpsl
xchg
inc
ja
lds
and
in
sub
rorb
adc
mov
dec
mov
clc
or
je
enter
dec
mov
dec
or
test
loope
ret
fildl
dec
pushf
negb
jmp
sub
inc
je
pop
mov
sbb
lret
nop
cmpsl
mov
pusha
push
sub
addl
jne
pop
pop
rcl
pusha
add
and
and
sub
pusha
outsb
xor
lcall
icebp
js
xchg
jmp
dec
dec
sub
fdivl
out
imulb
andl
scas
sbb
pop
insb
fdiv
ss
jns
mov
mull
ret
paddusb
fxch
mov
cmp
lods
fnsave
orl
ss
push
movsb
push
subl
mov
pop
and
jb
cltd
mov
js
jne
jg
leave
movsb
mov
push
in
mov
inc
mov
test
das
adc
mov
jo
sbb
pop
sti
or
adc
stc
pop
jne
cmpsl
call
and
orl
mov
sarb
rorl
sub
mov
xor
loope
rcl
out
xlat
pop
sbb
inc
std
pand
fsubrl
enter
mov
mov
pop
das
shlb
repz
dec
jns
cmc
push
jecxz
mov
xchg
sub
xchg
lret
sub
pusha
pop
mov
lret
mov
scas
in
add
cmp
lock
pop
mov
jno
add
fcoml
loop
cmpsb
or
clc
mov
sub
pop
jb
pop
inc
pushf
fs
push
arpl
imul
ja
or
or
fsts
cmp
push
push
in
fsubr
adc
addr16
mov
call
arpl
hlt
daa
not
or
xor
movsl
outsl
fcoml
mov
loopne
mov
push
sbbb
dec
fimull
xor
pop
add
fdivrs
ljmp
pop
add
sub
mov
lods
inc
xlat
fimuls
or
add
mov
mov
scas
sbb
mov
cmpsb
mov
iret
sbb
push
shlb
push
jle
jae
push
out
or
mov
leave
test
shlb
jecxz
call
insl
or
in
std
pop
rolb
push
ret
jns
aaa
and
je
in
lahf
mov
movb
push
xchg
xor
xchg
lcall
cmc
inc
arpl
and
stos
or
xorb
sbbb
sti
inc
ficoml
js
sar
pushf
cmp
mov
xor
sub
imul
popf
popf
test
xor
aas
inc
mov
ljmp
mov
xlat
sbb
cmc
orl
popf
cs
pop
cmp
sub
jg
scas
xchg
cmp
mov
out
imul
shll
inc
mov
insb
loopne
dec
jne
and
pushf
sbb
xchg
cli
jbe
jae
bnd
ljmp
sub
sbb
dec
fadds
dec
sub
xor
xchg
sbb
push
enter
aam
jmp
es
jnp
pop
adc
cmp
and
jno
int3
icebp
pop
jnp
gs
xchg
test
sub
cmp
add
mov
xchg
rcrb
sub
dec
fs
bound
flds
push
jo
push
shll
lahf
sbb
mov
mov
pop
inc
mov
cli
mov
ds
add
add
adc
inc
enter
jns
mov
lock
cmp
jnp
pop
xchg
negl
js
jno
sbb
stc
enter
push
cmp
movsb
inc
mov
mov
jp
pop
xorb
fsubl
iret
test
test
daa
push
inc
stos
out
and
std
add
fists
xchg
lds
fmull
sub
adc
cs
daa
jns
xchg
lahf
out
in
xchg
pop
std
adc
cmp
inc
pop
aas
or
hlt
aaa
adc
xchg
dec
and
push
call
mov
jle
cmp
int
add
and
fldcw
and
insb
mov
popf
mov
add
lods
popf
fstl
dec
in
xor
mov
notl
cli
sub
sub
jmp
pop
add
inc
in
por
je
repz
and
pop
inc
mull
cmp
pop
jnp
js
repz
fcoms
lahf
dec
xchg
in
popf
imul
jl
lea
dec
adc
cs
jno
stos
insl
or
mov
insl
rol
movsl
add
fisubrl
aaa
sbb
add
pop
and
inc
jae
test
cmp
or
sbb
push
in
pop
jb
sbb
xchg
inc
sbb
cltd
sahf
jns
add
or
inc
jns
mov
std
cmc
mov
imul
in
jns
shlb
push
fs
cmpsl
add
out
das
jge
push
dec
jbe
or
cmp
call
lods
ret
hlt
fsubs
gs
mov
mov
es
cwtl
add
das
mov
movl
data16
mov
inc
xor
cmp
fwait
lcall
jl
xlat
call
fwait
loopne
scas
sbb
and
xor
in
jp
inc
add
mov
sbb
popa
ljmp
cmp
inc
add
cs
xor
pop
daa
pop
cwtl
out
mov
loopne
movl
add
out
adc
cmp
je
cmp
jb
rcr
mov
lcall
in
and
aaa
add
insl
lock
ds
shlb
push
or
aaa
sub
out
mov
imul
mov
pop
iret
sub
mov
sbbl
mov
dec
lock
sub
push
scas
mov
ret
clc
pop
mov
or
cmpsl
aas
pop
aad
sbb
jmp
push
pushf
rclb
jb
mov
mov
xchg
es
shl
add
xchg
insb
jl
push
or
lret
inc
ljmp
add
and
icebp
stc
mov
inc
mov
adc
xor
cwtl
pop
cmp
jb
lret
je
pusha
jae
xor
pop
std
daa
mov
sti
in
and
push
dec
dec
adc
sahf
xor
dec
sub
push
adc
adc
mov
sbb
or
ja
jbe
loopne
dec
jnp
cmp
jo
jecxz
fmuls
push
clc
sub
jae
loop
mov
add
dec
sti
sub
mov
inc
lock
jp
aaa
shl
fdivs
dec
data16
les
ds
cmp
xchg
outsl
push
pop
push
les
mov
mov
roll
scas
sbb
xor
icebp
fbld
jne
sub
xlat
and
mov
loopne
dec
dec
test
aad
push
clc
xchg
lods
dec
sub
inc
mov
jnp
mov
cmp
mov
pop
dec
mov
scas
test
adc
lock
ret
les
mov
test
push
jmp
outsl
lret
jmp
fdivl
lret
ficomps
inc
cmp
dec
repz
outsl
jp
in
ret
stos
pop
nop
and
testl
sbb
ja
xor
into
or
mov
and
fisubrl
or
mov
and
out
xchg
or
jb
dec
push
sbb
cmp
scas
xchg
push
sub
cmpsl
pusha
adcb
filds
sub
insl
nop
insb
xor
sbb
push
inc
aaa
pop
into
xor
sbb
mov
cmpsl
and
sahf
loope
leave
orb
pop
cmp
jmp
or
negb
mov
out
int
out
jge
mov
mov
ret
xlat
mov
clc
xor
and
mov
xchg
movsl
ja
push
inc
loop
xchg
iret
out
jmp
adc
inc
push
test
sbb
adc
sarb
push
add
dec
dec
pop
pop
jae
rol
stc
std
popf
add
loope
xorb
out
popa
test
imul
in
adc
inc
filds
aam
lods
mov
addr16
push
jne
cmpsb
aad
mov
aas
mov
clc
in
adc
mov
sahf
xor
sub
xchg
insl
ja
pop
push
sbb
adc
pop
mov
sbb
movsl
aad
pop
dec
sub
das
mov
call
push
scas
and
push
test
jp
mov
dec
fistpll
fistl
sub
push
fadds
stos
shll
call
pop
cmc
mov
add
adc
enter
pushf
push
adc
leave
jl
lcall
sub
hlt
mov
cmc
repnz
dec
pop
inc
test
mov
push
push
and
mov
add
lret
ss
stc
mov
rcrl
popf
loop,pn
and
cmp
sub
cli
mov
cli
adc
xchg
adc
scas
rcrb
mov
lods
xchg
sub
lahf
push
or
ss
inc
cmp
jo
xor
cwtl
fsubrs
add
cmp
sahf
pop
aaa
mov
push
or
and
mov
insl
int
xlat
cmc
int3
sub
mov
in
inc
jl
stos
or
xor
mov
cmp
sbb
xor
in
lret
jns
mov
pop
je
lea
mov
shlb
add
adcb
mov
fisubl
test
stc
cmpsb
xchg
std
xchg
mov
imulb
shrl
fwait
push
in
aam
jle
sub
enter
clc
add
sub
mov
mov
jae
iret
mov
inc
idivb
inc
addr16
inc
adc
or
push
sbb
shlb
in
aam
decb
jns
jbe
sub
stc
and
sub
daa
lods
out
push
testb
push
dec
jns
push
adc
dec
in
jo
jge
push
daa
mov
jne
mov
into
jns
and
lcall
inc
idivb
mov
das
jge
imulb
jo
add
xorl
xlat
fistl
mov
pop
fistl
and
push
adc
bound
test
and
in
cmpsl
or
les
sub
xchg
scas
adc
dec
add
sbb
lahf
cltd
mov
mov
out
sbb
dec
or
cltd
dec
cmpsb
mov
sbb
iret
outsb
call
mov
icebp
js
test
shlb
in
add
pop
mov
xchg
arpl
lret
or
je
or
push
test
dec
rol
lahf
cmp
cwtl
inc
cmpb
mov
sbb
xchg
mov
mov
or
lods
testl
jmp
or
xchg
icebp
dec
mov
arpl
lock
and
test
in
push
sub
jmp
les
rol
fdivrs
popaw
scas
popl
adc
jns
mov
mov
sar
daa
cld
pop
pop
xchg
aaa
mov
pop
inc
cmp
cmp
paddusw
or
mov
cltd
mov
ret
lahf
insl
out
push
call
jl
sub
mov
lret
push
xor
jmp
cld
ja
rcll
xchg
jnp
jnp
mov
mov
sbb
jp
sbb
mov
pop
sbb
loop
imul
mov
js
jo
dec
idivl
call
lea
rcr
sbb
push
out
cmp
sbb
mov
leave
and
add
andb
push
sbb
cmpsb
dec
and
xchg
push
push
dec
insl
lds
sbb
cmp
out
pop
add
sarb
sti
dec
aas
sub
repz
add
int
test
cmp
xor
negl
sub
insb
jmp
cmp
sbb
inc
cli
cmpsb
rclb
lea
and
jge
pop
push
cmp
dec
in
push
loopne
mov
pop
aad
ret
les
ret
mov
dec
push
in
cld
pop
adc
xchg
gs
in
inc
sbb
xchg
in
push
dec
and
jl
testl
lcall
ja
aas
mov
jp
xor
fcomp
pop
cld
or
jmp
mov
hlt
js
add
push
lret
pop
jb
push
xor
mov
inc
ret
cmpsb
fimuls
inc
mov
mov
insb
and
add
xor
mov
or
rolb
push
mov
sbb
sbb
cmp
adc
out
xchg
out
in
push
loope
movsb
ja
call
adc
mov
cld
xchg
movsl
loop
push
stos
add
test
hlt
fstpl
clc
pop
jno
test
push
mov
lret
mov
inc
pop
in
mov
xchg
jl
mov
rol
and
lcall
jnp
mov
pop
stos
sbb
lock
mov
inc
movsb
push
sbb
in
mov
push
jo
xchg
cmp
ljmp
jl
hlt
pop
testb
jnp
outsl
test
cs
or
inc
stos
hlt
das
jl
pop
sbb
mov
mov
mov
pop
in
push
inc
clc
xchg
and
imul
in
mov
mov
pop
insb
ds
outsl
xchg
call
push
mov
clc
nop
test
lods
cltd
icebp
inc
lds
pop
imulb
aaa
add
xchg
out
mov
mov
and
sbb
sbb
xor
loopne
stos
repz
ret
test
push
aaa
or
mov
notl
mov
shrl
mov
je
lds
call
bound
test
sbb
in
add
mov
mov
xchg
stc
sub
stos
lods
bound
movlps
aam
jne
and
lret
mov
mov
mov
and
mov
push
je
cmpsb
cwtl
sbb
xor
push
jbe
xchg
sub
icebp
loope
test
xor
pop
and
cmp
jmp
push
enter
inc
shrb
jle
out
or
mov
push
pop
or
aas
jmp
sub
sub
mov
cmc
xor
and
adc
mov
fdiv
ficoms
repnz
icebp
clc
arpl
icebp
aaa
pusha
out
pop
stos
pop
aam
sub
clc
aam
test
lock
arpl
and
addr16
ret
jge
pop
fimull
jae
lock
in
sub
icebp
fidivl
mov
adc
xchg
in
cmpl
ss
sbb
adc
and
and
or
xchg
cmpsb
adc
lods
cltd
push
adc
inc
std
xchg
je
notb
inc
inc
cwtl
jo
mov
bound
enter
cmp
xchg
cmp
fnstsw
sbb
ds
pop
sub
cmpsl
pop
into
sbb
in
xor
ja
lock
jl
inc
mov
mov
stos
outsl
push
pop
or
pusha
vsubps
mov
divb
dec
iret
imul
cwtl
stos
andb
in
into
addb
add
lret
lea
dec
xchg
pop
sbb
sub
mov
std
pop
out
sub
out
lds
mov
je
les
bound
dec
jnp
popf
push
std
cmc
in
cmp
gs
popf
mov
add
mov
ret
out
insb
mov
rcrb
sub
out
xchg
loope
sub
xor
leave
inc
cmc
notl
inc
jb
es
lret
mov
scas
sbb
add
mov
jae
stos
test
xchg
push
xlat
jb
push
or
cmp
sahf
xor
sarb
xchg
and
cs
jl
popf
test
mov
lcall
nop
cli
inc
lods
adc
sub
add
pop
cmc
clc
push
mov
in
int
setae
nop
push
mov
enter
fcomip
or
data16
in
mov
bound
xchg
xchg
nop
xchg
sub
xchg
iret
jbe
sbb
hlt
push
adc
stc
pop
and
dec
std
aaa
insl
and
dec
in
inc
sub
into
sub
jl
insl
movsb
sub
push
fdivrl
rol
sbb
sub
ss
xor
mov
xor
mov
xlat
arpl
aaa
and
sub
xor
push
jno
xchg
int3
xchg
fwait
or
sti
movsb
jb
dec
xchg
cmp
out
push
repz
scas
mov
push
mov
icebp
js
sbb
dec
rorl
ret
mov
in
dec
mov
mov
scas
push
dec
dec
fidivrl
aaa
fidivs
and
in
add
push
jae
fstl
mov
jb
sbb
cli
imul
jnp
xchg
push
and
ss
mov
mov
adc
xor
pusha
mov
lcall
shlb
sub
cmpsb
lds
and
pop
in
mov
enter
sti
adc
mov
push
pop
icebp
adc
cmp
rolb
out
insb
mov
outsb
dec
inc
lahf
in
dec
fsubrs
aas
lds
xchg
mov
sbb
cmp
insl
and
cmpsl
push
scas
jecxz
out
jno
stos
mov
in
dec
rep
repz
pop
insl
pop
push
jbe
jmp
int
push
adc
xchg
inc
repz
mov
cwtl
inc
xor
sarl
mov
or
inc
push
sbb
in
outsl
cmp
mov
lcall
gs
mov
icebp
cmp
mov
mov
mov
negl
dec
inc
sub
adc
adc
inc
sbb
out
imul
outsb
push
xor
adc
enter
daa
aas
loop
movsb
add
dec
mov
sarb
mov
push
jge
adc
lfs
adc
pop
popa
jp
fsts
jmp
dec
sbb
call
cmp
jg
mulb
insl
cmc
mov
rcl
pusha
adc
xchg
add
call
adc
xchg
mov
fwait
adc
out
dec
stos
notb
dec
adc
cmp
and
xor
pop
into
cltd
insl
push
lret
or
aas
ss
cmp
cmp
cs
mov
mov
mov
or
ret
inc
fs
std
inc
push
add
lret
loop
in
xchg
xor
and
les
mov
loopne
push
pshufw
into
sbb
stos
sub
and
sbb
mov
je
in
xor
xchg
popaw
out
mov
jg
lods
scas
jl
mov
jmp
xor
in
add
icebp
xor
jns
sbb
xor
test
dec
cmpsb
ja
mov
inc
sbb
mov
shrl
aad
mov
out
inc
shlb
adc
jg
dec
add
jnp
movsl
push
cwtl
pop
shrl
sti
shl
sub
std
enter
jb
mov
repnz
mov
sub
lock
lcall
gs
add
fisttpl
xchg
ret
daa
insb
pop
shl
dec
lahf
cmp
pop
adc
rol
fmull
ret
hlt
adc
nop
fsubrs
mov
aam
loope
mov
push
cmc
mov
lods
std
icebp
dec
push
cltd
imul
outsl
xlat
insl
mov
js
jne
mov
adcl
mov
push
loope
dec
fwait
cltd
jl
jns
or
pop
sbb
pushf
fstpt
mov
jnp
jnp
in
jo
dec
scas
fstpl
je
or
sbb
fs
pop
arpl
xchg
mov
test
sbb
or
addr16
jecxz
xor
sbb
mov
mov
sbb
les
lods
adc
dec
jbe
test
test
addl
mov
dec
push
fcmovnbe
loop
or
mov
pop
stc
add
jns
movsl
add
ja
pop
addr16
stc
jns
ja
scas
leave
inc
push
inc
cs
push
out
xchg
xor
aam
cmp
lods
mov
loop
push
dec
inc
ljmp
cld
sbb
popa
xchg
add
or
add
sahf
movsb
mov
test
loope
imull
clc
mov
sbb
popf
repnz
lods
aam
add
mov
pop
lea
pop
shrb
mov
bound
test
sub
mov
rep
movsl
into
into
mov
test
aad
mov
fisttps
iret
mov
add
xor
adc
mov
mov
or
loope
lds
scas
fistps
inc
jnp
mov
fimuls
or
cwtl
or
push
cs
xchg
adc
pop
xlat
jg
xlat
iret
fs
nop
inc
negl
or
into
ror
xchg
mul
jns
fists
sub
popf
hlt
jnp
push
enter
xchg
push
pop
daa
jmp
and
and
adc
jge
int
test
mov
in
cmp
and
sbb
inc
xor
stos
mov
ljmp
xor
mov
and
int3
xchg
mov
in
test
test
in
xchg
mov
mov
xchg
into
cld
repz
pop
into
icebp
sbb
push
mov
daa
cs
test
xcrypt-cbc
cmpsl
pop
xchg
inc
js
mov
mov
push
and
repnz
addb
call
test
add
and
jg
hlt
mov
filds
add
add
push
and
add
mov
add
iret
ret
faddl
inc
daa
dec
xor
and
jecxz
out
mov
popf
push
jmp
mov
fs
lods
mov
or
cmpsl
imul
loopne
sbb
arpl
push
inc
int3
ja
cli
mov
js
mov
stos
mov
inc
xchg
scas
add
jp
jo
pop
cmpsl
push
insl
outsl
adc
aad
movsb
lret
mov
pop
rcll
popa
mov
dec
lret
dec
sub
in
rorb
ficomps
dec
fisttpll
js
pushf
pusha
cmp
push
leave
arpl
or
cld
test
add
pop
push
jb
xchg
xchg
lods
and
es
pop
xchg
call
mov
mov
pusha
sub
add
fcomps
xchg
push
mov
pop
hlt
jp
mov
xchg
add
fistpl
ret
imul
repnz
sbb
push
arpl
lds
dec
and
aam
aas
outsl
shrl
dec
xchg
or
push
xchg
pop
and
cld
jnp
sbb
das
sub
xor
cmp
int3
shl
cmp
lods
rolb
xchg
xchg
xlat
aaa
lret
data16
js
cwtl
mov
mov
mov
lret
pop
test
lret
mov
movsl
lea
cmp
push
sbb
repz
fadds
imulb
outsl
mov
cmp
mov
hlt
pop
int
ficoml
dec
lds
dec
es
out
stc
movsl
fnstenv
xchg
xchg
adc
cwtl
popf
jl
jp
popf
xchg
dec
bound
shrb
push
in
adc
jmp
iret
fdivrs
imull
shlb
aaa
sub
sub
fstp
jmp
lds
ret
xor
mov
icebp
mov
scas
imul
daa
mov
sarb
les
in
push
out
lds
mov
rorb
popf
movsb
mov
jmp
fwait
mov
dec
inc
fildl
mov
sub
or
shrb
add
inc
filds
sub
add
aad
jno
daa
mov
push
leave
std
fwait
out
scas
sub
cmc
cltd
insb
in
data16
or
pop
mov
jl
jno
xor
lds
jle
mov
add
sub
xchg
add
sub
lcall
pusha
mov
mov
jnp
adc
test
fidivs
mov
cmpsb
dec
cmp
aam
inc
ret
inc
inc
sbb
and
ljmp
adc
fdivr
push
outsl
mov
enter
sub
repz
ficoml
or
lret
mov
cmp
ret
mov
out
sbbb
pop
ret
int3
cli
dec
jbe
or
and
xchg
jmp
adc
sbb
clc
jae
sbb
push
adc
pop
pop
dec
inc
paddusw
sti
push
movsl
jo
cmp
into
stos
push
and
loopne
hlt
xor
cmpsl
sbb
or
loopne
cmp
aaa
negb
pop
out
aaa
and
jno
adc
mov
add
xchg
bound
adc
daa
jbe
das
faddl
push
jmp
mov
enter
gs
inc
xor
dec
dec
sub
scas
fcomi
cmpsb
mov
xor
push
stos
in
nop
mov
bound
push
test
or
scas
jns
jl
and
jb
pop
mov
dec
xor
mov
jo
push
mov
cmp
cmp
lods
lea
mov
sub
xor
test
mov
adc
je
adc
mov
push
in
mov
sub
or
jge
in
adc
stos
xlat
inc
inc
inc
lahf
mov
cmp
or
int
or
pop
add
jno
test
ds
out
fcompl
lds
shlb
mov
outsb
dec
or
cmp
es
loop
es
push
imul
cmp
xchg
and
cmp
inc
or
std
mov
mov
ficomps
add
mov
addb
test
and
popf
gs
pop
mov
mov
sahf
mov
stc
cmc
movb
xchg
jl
int
or
cmpb
mov
rorb
fcoms
mov
jb
pop
xor
and
cmc
nop
sbb
int
fs
xchg
mov
test
popa
fisubrl
jl
shll
jne
daa
mov
cmp
les
in
cmc
mov
jo
scas
add
adc
inc
and
and
stos
jns
inc
sub
pop
popf
movsb
test
dec
push
jle,pt
cmc
add
loope
sahf
mulb
cmp
leave
xchg
ljmp
pop
or
in
lods
adc
lds
insb
insb
jns
add
icebp
jnp
repnz
pop
test
cmp
sub
arpl
jp
test
outsb
sbb
insl
sub
mov
dec
pop
sub
pop
call
clc
das
inc
loopne
mov
lret
lcall
push
jne
cltd
add
push
fcoml
outsl
sub
mov
xchg
sbb
lea
shlb
mov
adc
repz
movsl
dec
outsb
or
adc
leave
adc
sarb
fsub
jns
into
sbb
imul
push
addr16
fisubl
pop
push
pop
test
arpl
xchg
push
xor
pop
cli
ja
aas
xchg
adc
sub
stc
gs
cmp
in
out
inc
jg
or
les
test
std
dec
sub
pop
xchg
movsb
sbb
sub
testl
add
imul
add
mov
mov
sub
push
xchg
jecxz
mov
mov
push
test
inc
dec
push
dec
xchg
roll
push
loopne
jle
mov
out
dec
push
adc
pop
scas
adc
fidivs
adc
stos
or
and
mov
mov
in
jle
clc
mov
push
out
hlt
fisttps
dec
push
sub
aas
les
aas
addr16
inc
scas
imul
repz
jb
sub
cli
loop
dec
hlt
mov
mov
ficompl
lret
out
mov
icebp
rcrb
inc
bound
aas
jnp
add
ret
lcall
stc
out
add
xchg
or
imul
inc
je
adc
xor
daa
dec
xchg
lcall
test
fcomp
out
and
lea
dec
push
mov
xchg
clc
pop
xlat
hlt
sub
mov
inc
lret
mov
mov
pop
sub
mov
shll
xchg
mov
int3
mov
and
dec
dec
into
filds
and
icebp
sbb
outsl
add
pop
xchg
je
aam
es
inc
nop
das
repnz
lods
clc
int3
pop
fs
hlt
shlb
jg
sahf
jo
sbb
cld
mov
test
and
lret
sub
imul
push
jb
mov
lahf
mov
out
jg
and
push
dec
sub
lahf
gs
inc
out
cli
jmp
mov
sub
inc
pop
jmp
test
jno
dec
test
nop
fcmovb
mov
clc
mov
push
add
mov
sub
movmskps
push
test
mov
pop
shlb
icebp
mov
or
jmp
sbb
lret
ret
push
dec
sbb
pop
dec
jmp
rcl
mov
lods
arpl
mov
cmpsl
and
ja
js
fsubl
inc
cmp
push
dec
inc
lods
ds
je
jns
sub
dec
lock
mov
mov
outsl
mov
outsl
pop
fcompl
jl
xchg
inc
jo
xchg
mov
dec
or
inc
pop
and
ljmp
scas
pushf
inc
das
ja
cmpl
push
cmp
and
icebp
ljmp
fcmovne
sbb
or
sahf
dec
mov
push
lock
add
and
insb
xchg
test
adc
rcl
nop
jl
popa
cmp
push
sahf
and
sbb
jo
popf
js
mov
jno
sbb
or
jne
mov
dec
jg
lret
ficoms
dec
sti
cli
lods
loopne
cld
push
rcrb
push
adc
push
in
mov
cmp
scas
lahf
out
outsl
mov
add
aad
inc
adc
fsubrs
hlt
adc
or
mov
es
adc
ljmp
adc
mov
scas
ffreep
sub
nop
pusha
fwait
in
ljmp
jo
adc
inc
in
dec
xor
into
xor
imul
ret
push
dec
lret
popa
mov
idivb
mov
test
icebp
pop
adc
jno
xor
sbb
sub
in
ss
pushf
sbb
rolb
bound
mov
fimuls
out
inc
add
cmp
pop
inc
adc
inc
ficomps
stc
repz
mov
push
rolb
cmc
test
outsb
jp
sahf
mov
jns
or
add
adc
mov
cli
jmp
in
xchg
stos
loope
das
cwtl
push
or
lahf
push
adc
mov
push
inc
data16
in
adc
sbb
xor
xchg
outsb
mov
pushf
testb
cmp
xchg
push
xor
push
and
sub
pop
jg
test
nop
push
xor
das
popf
mov
es
xchg
xor
repnz
scas
mov
pop
aad
push
mov
int
iret
mov
dec
mov
and
jnp
fnstcw
cmp
lret
adc
ficompl
adc
enter
mov
data16
jb
dec
stc
cmp
jmp
mov
xor
and
inc
jae
out
or
lcall
xchg
jne
mov
inc
repz
adc
mov
jecxz
fmul
lret
sbb
jo
insl
dec
in
add
aam
adc
jb
daa
adc
outsl
mov
jecxz
inc
aam
ret
aaa
mov
or
mov
push
push
xor
mov
hlt
jno
dec
dec
add
mov
pop
xlat
dec
cmpsb
decl
popf
cmpsl
dec
lods
jne
and
addr16
sub
cmpsl
ror
mov
xorb
inc
sbb
inc
push
add
loopne
mov
sahf
jo
insb
add
xor
shll
sbb
mov
and
sahf
cmp
cmp
mov
mov
out
or
or
in
std
mov
fsubrl
daa
jnp
cmpl
adc
cwtl
and
mov
dec
adc
popa
xchg
or
mov
sub
mov
shl
stos
fistl
in
loope
movsb
int
ret
psubw
dec
pop
jo
cmpsl
xchg
leave
loop
clc
sub
dec
push
mov
je
jne
adc
jae
jp
jg
sbb
or
mov
call
sbb
mov
push
xchg
adc
mov
pop
daa
out
push
nop
mov
cmp
mov
stos
loop
xor
pop
push
sub
arpl
out
enter
xchg
and
mov
cmp
stc
fldcw
idiv
push
sbb
xor
and
sub
not
xchg
add
xchg
inc
xchg
mov
roll
addr16
inc
push
mov
rclb
jne
icebp
fdivr
jmp
faddp
dec
movb
lea
ret
xchg
mov
jge
fsub
int3
or
pop
mov
mov
loop
or
mov
cs
je
or
sub
mov
clc
out
in
jae
xlat
inc
lahf
xchg
sbb
movsl
xchg
and
mov
or
or
jns
popa
cmp
icebp
push
neg
aaa
pop
in
dec
jne
xchg
xor
mov
scas
jbe
or
pop
arpl
icebp
or
jno
inc
ficompl
jae
pop
lcall
dec
adc
sbb
cs
xchg
jecxz
fstpt
jae
pop
int3
mov
inc
jb
in
lret
es
das
out
pop
push
clc
or
mov
bound
rol
stos
mov
into
insb
dec
lock
sbb
mov
push
insl
sub
lods
adc
mov
sub
dec
push
lcall
dec
pop
inc
mov
xchg
sub
sub
mov
jecxz
adc
add
push
add
div
xor
jne
imul
cs
adc
push
out
mov
push
sbbl
ficompl
test
and
fchs
mov
jb
negb
mov
pop
cmp
cmpl
inc
mov
testb
jge,pn
cmpsl
xchg
popf
sub
or
fiaddl
add
and
jmp
test
mov
aas
sbb
movb
push
xchg
int
loope
int
stos
mov
mov
mov
xchg
mov
fnstenv
xchg
and
sub
mov
lret
sbb
ja
inc
push
stc
imulb
test
pop
dec
and
fstpt
shrl
or
jecxz
outsb
es
mov
fxch
adc
rclb
outsl
and
and
xor
orl
lcall
mov
fldt
jb
loopne
ds
int
sbb
sub
xchg
dec
add
add
data16
fbstp
or
mov
push
and
stc
icebp
xor
repz
and
stos
or
cmp
fmulp
movsb
mov
loopne
imul
xor
jp
scas
mov
roll
push
lret
mov
enter
xorl
aaa
fbld
xlat
mov
dec
and
adc
pop
sbb
repnz
xor
lds
mov
add
psllq
shlb
xchg
outsl
mov
sbb
movsb
or
pop
push
jecxz
xchg
loopne
cmpsl
push
push
jb
sbb
rorl
test
sbb
sub
andb
loop
pop
cmp
vmovsldup
out
std
rcll
ja
orb
lcall
jnp
leave
inc
pop
adc
fwait
aas
movb
aam
data16
jnp
sbb
inc
jge
sub
icebp
mov
imul
and
cmp
fsubrs
popf
mov
xchg
pop
vsubss
sahf
fcomi
add
mov
dec
mov
mov
jg
ficomps
pop
gs
into
ja,pn
mov
popf
xchg
pop
movsl
mov
fs
data16
fimull
mov
movsl
incl
scas
loope
xlat
lds
aas
xchg
jnp
clc
push
adc
cmpsl
push
pop
sti
mov
jae
out
cvtdq2ps
in
cli
bound
pop
mov
sti
push
pop
xchg
push
mov
iret
flds
stc
leave
shl
leave
repnz
in
xchg
jo
scas
or
jbe
mov
notl
fwait
lret
inc
scas
cmp
mov
cmp
ds
stos
and
push
jp
mov
add
dec
and
aaa
lods
jb
cs
je
sti
std
data16
out
cli
shll
adc
and
out
cli
pop
add
inc
adc
dec
xor
shll
js
pop
and
pushf
cmc
ret
shll
xchg
cmp
and
dec
pop
sahf
lcall
rcrb
rolb
jo
imul
out
sbb
sbb
fstl
popa
gs
pop
sub
fsubr
xchg
dec
repz
aad
cmp
mov
push
xor
rcrb
imul
and
xchg
adc
mov
inc
mov
add
arpl
xor
push
mov
stos
ss
movb
xor
xor
cwtl
sti
lret
mov
clc
inc
mov
in
jb
push
fisttpl
cmp
cmp
add
adc
popf
dec
in
cmc
leave
adc
aam
jmp
add
push
les
sahf
lods
int3
push
out
subb
or
dec
fwait
xchg
sbb
xchg
or
xchg
adc
ret
sbb
out
adc
idivl
pop
push
xor
mov
aad
movsb
loop
out
notl
shl
mov
adc
push
scas
cwtl
adc
pop
enter
cmp
adc
cmp
and
cmpsb
sbb
loopne
rclb
pop
popa
jge
xor
xchg
xor
ret
es
mov
sub
lea
mov
sub
cmp
shrb
aad
flds
mov
int
jecxz
cmpsl
es
mov
or
movl
bound
orl
fisttpl
add
inc
leave
ret
mov
das
repz
mov
aam
push
mov
lea
cmp
jmp
push
imul
mov
jae
int
test
mov
mov
push
jae
sbb
rol
xchg
cwtl
mov
arpl
cwtl
adc
cli
imul
and
pop
nop
and
xor
out
and
sbb
dec
popl
pop
sbb
ss
push
or
pop
xchg
rcrl
cmpb
daa
inc
push
sub
int
out
loop
cmpsl
xchg
dec
scas
or
sub
test
mov
dec
lahf
jle
sbb
inc
bound
pop
ret
push
xchg
pop
repz
xor
adc
add
inc
out
cmp
xchg
lods
push
mov
stc
fstp
dec
insb
movsb
aaa
aas
push
insb
cmpsb
and
out
push
adc
xlat
sbb
xchg
inc
jle,pt
fdivrl
frstor
xor
mov
mov
iret
pop
jge
and
inc
mov
add
mov
push
pop
pop
push
cmp
int3
xor
adcl
cmpsb
add
xchg
out
mov
cmp
fadds
push
lcall
mov
push
adc
pusha
and
and
adc
andb
loopne
adc
push
imul
add
repz
xor
fsqrt
das
ret
xchg
add
rcll
loopne
outsl
mov
cmp
cmp
je
jmp
mov
dec
cli
and
lods
dec
out
imul
mov
data16
in
jecxz
outsb
xchg
loopne
bswap
repz
ljmp
lret
jbe
pop
push
push
adc
fsubrs
mov
mov
dec
ret
andl
clc
adc
xor
into
cli
sub
mov
daa
sar
mov
out
and
rorl
pop
je
mov
mov
mov
fldt
inc
jbe
add
ret
rcrl
arpl
dec
fidivs
and
xchg
je
les
ror
cmp
pop
cmp
loop
adc
inc
mov
pop
fcompl
lods
dec
inc
cmpsb
and
cli
pop
test
imulb
and
fiadds
push
insl
add
jecxz
std
dec
out
mov
and
sub
repz
lret
lret
cli
lret
mov
push
or
aaa
pop
pop
xlat
mov
lea
xor
sbb
loopne
push
lock
pop
pop
cmc
fisttpll
inc
mov
ja
xorl
jae
push
sti
daa
out
fidivrl
dec
push
ljmp
jmp
jno
mov
pushf
inc
sbb
jp
imul
pop
inc
mov
cwtl
jge
sahf
in
jle
pop
int3
loope
mov
jmp
sub
sub
aam
adc
adc
in
or
outsb
sub
scas
inc
jns
inc
sahf
mov
test
loop
in
sbb
adc
sub
movsb
mov
lock
out
fstpl
lods
clc
xchg
les
testl
and
int3
bnd
mov
in
and
pop
inc
xchg
sbb
dec
les
loopne
in
loopne
rclb
cmp
mov
add
jnp
stc
test
shrl
sbb
and
test
mov
sti
add
movsl
xchg
xchg
inc
mov
mov
test
idiv
jmp
in
xchg
adc
iret
pop
push
mov
mov
test
mov
adc
mov
icebp
pop
subl
mov
and
repnz
test
arpl
fnstcw
outsl
sbb
pop
sub
into
clc
cs
cwtl
jb
dec
fbld
xor
out
test
test
pop
popf
lea
xchg
jecxz
mov
adc
push
lret
fcmovne
daa
outsb
dec
aam
shrb
push
xor
sub
mov
xor
sbbb
dec
bswap
fildl
out
in
add
xchg
sub
ret
cmc
jns
in
imul
adc
in
or
sbb
leave
inc
ds
cmp
lods
sbb
dec
fstpl
push
push
scas
cmp
mov
lods
pop
xchg
add
pop
and
cmc
pushf
mov
dec
dec
inc
mov
aam
sahf
push
pop
insb
or
or
inc
call
jno
daa
dec
in
jp,pt
xor
ja
fstp
adc
pusha
mov
hlt
xchg
cmpsl
or
lahf
sahf
push
add
cwtl
lret
loop
adc
cltd
cs
adc
loopne
ret
mov
out
mov
hlt
scas
fsubl
jge
rclb
mov
loop
loope
push
lret
fsub
outsb
inc
gs
rcll
iret
std
sbb
sbb
js
repnz
xor
mov
nop
arpl
adc
push
shll
out
pop
adc
out
imul
movsb
test
int3
cld
or
mov
hlt
pop
inc
andl
dec
adc
mov
mov
push
int3
adc
ret
xchg
lret
mov
jno
repnz
dec
add
addb
or
xlat
cmp
xchg
xlat
int3
leave
xchg
out
test
pop
cmp
hlt
jmpw
add
aaa
movsl
or
mov
sti
xchg
cltd
mov
adc
adc
repnz
xchg
and
sarb
inc
sub
rorl
pop
mov
xor
sbb
push
mov
je,pn
je,pn
add
mov
cltd
xchg
mov
jno
sbb
sub
push
mov
xor
call
mov
negb
loopne
ds
or
int
cmpsl
sbb
xor
push
xchg
rcrb
sub
dec
bound
gs
roll
pop
push
dec
pop
add
cltd
ljmp
cmpl
addb
into
js
fstp
xor
loopne
inc
in
fmull
or
fstl
dec
cwtl
xor
lcall
std
xchg
xor
out
cmpl
enter
aaa
dec
jecxz
shll
test
cmc
test
enter
addl
dec
lock
xchg
dec
fmulp
xorl
fadds
and
cmp
insb
cmp
scas
lcall
mov
push
dec
inc
adc
and
push
jns
loope
sub
lahf
test
into
es
fidivrs
jp
sub
pop
and
mov
int3
push
or
cmpsl
rcrb
test
sbb
inc
add
adc
dec
xor
lret
frstor
cmpsb
pop
pop
nop
jne
mov
movsb
daa
jp
aad
mov
das
in
xor
xor
pop
pop
xchg
test
ja
cmp
popa
dec
fbld
mov
inc
int3
inc
out
arpl
jns
pusha
and
cmp
je
icebp
sub
scas
imul
xlat
mov
sbb
out
mov
lcall
imul
seto
pop
pop
cmpsl
dec
or
jg
or
cmp
and
rorl
popa
inc
mov
xor
in
andb
jbe
lds
sub
prefetch
cmp
xchg
popf
push
scas
pop
cs
ss
clc
mov
fiadds
xor
inc
cmp
pop
fwait
dec
push
les
push
leave
push
shrb
ret
fwait
dec
mov
cmpl
jb
adc
loope
and
in
push
sbb
movsb
mov
dec
in
mov
enter
pop
push
int3
add
fbstp
je
xchg
cs
inc
xor
xchg
cmpsl
stos
in
repz
adcb
mov
jp
xchg
push
clc
ljmp
and
sbb
test
cmp
xchg
and
call
mov
xor
pop
popf
push
rolb
inc
sti
lock
push
mulb
push
mov
imul
inc
pop
fsts
or
std
mov
dec
sbb
mov
push
enter
lret
sbb
mov
popf
int3
xchg
cmp
jo
repz
sbb
xor
out
addr16
or
fdivrs
mov
sub
das
add
test
adc
outsb
fidivrs
loopne
les
mov
adc
jno
arpl
mov
pop
mov
out
nop
jge
outsl
lret
int
jmp
outsl
rcrl
xor
je
pop
lds
pop
int
xchg
dec
and
loopne
sub
jne
js
add
leave
mov
mov
or
repz
test
add
push
jg
jnp
fiadds
inc
into
loope
lret
dec
stc
jo
loopne
pop
aaa
loope
in
and
clc
sbb
xchg
sub
and
push
icebp
sbb
lret
cmpsl
pop
xchg
cmp
push
in
insb
mov
leave
push
aad
xchg
xor
call
jg
data16
or
mov
rcrb
xor
fdivrp
scas
pushl
cs
addb
repnz
push
fs
movsb
stos
dec
cmc
mov
mov
and
mov
mov
cmp
pop
outsl
pusha
in
push
jbe
aaa
pop
fidivrl
cs
inc
gs
fxam
inc
repz
sbb
adc
xchg
jge
mulb
cs
and
mov
xlat
sub
into
mov
aam
mov
sbb
adc
mov
sbb
cmc
xor
jo
mov
fnstcw
push
push
xor
push
adc
pop
test
fs
jno
daa
xchg
stos
push
adc
lods
pop
jecxz
mov
push
stc
xchg
sub
popa
push
stos
rcll
cmp
in
mov
xor
pop
dec
ret
pop
popl
lock
xchg
ja
cmp
add
mov
inc
jp
fsubrs
test
jns
add
mov
or
xor
aaa
cli
ficoms
mov
std
ja
jg
icebp
fsubrl
repnz
lock
das
cmpsl
inc
push
push
xor
jo
mov
and
mov
out
stos
adc
imul
mov
jl
xor
stos
ret
int3
imul
mov
mov
and
xchg
push
in
pop
je
int3
shll
mov
push
rolb
movsl
sbb
xorl
xchg
fadd
std
xadd
stos
enter
mov
mov
xchg
mov
stos
mov
roll
decl
mov
daa
mov
mov
dec
in
jb
push
iret
fwait
imull
add
dec
pop
aaa
shlb
or
pop
adc
stc
or
fs
fcomps
and
mov
daa
jae
mov
popa
aas
stc
fcompl
sub
cwtl
inc
add
in
rolb
dec
adc
ficoml
fnstenv
in
xchg
lods
mov
jmp
adc
mov
adc
sub
inc
lods
or
movl
dec
cs
jmp
xlat
data16
jns
ret
clc
in
sysret
xlat
cmp
cmp
les
std
ficompl
mov
call
jns
xchg
dec
test
testb
out
push
scas
mov
test
jo
fld1
test
mov
cmp
xchg
enter
aam
xorl
mov
ret
and
fwait
xor
js
dec
stos
mov
iret
shl
sub
jne
jbe
ds
das
push
jge
xor
xor
lods
and
and
in
fsubl
pop
mov
call
shlb
jmp
dec
outsl
ljmp
adc
leave
mull
fadd
add
push
mov
mov
iret
xchg
cli
push
aam
jmp
sahf
jge
testl
pop
sbb
or
push
subl
xor
mov
sets
dec
ret
cmp
sub
and
mov
aad
nop
arpl
cmc
mov
fcoms
mov
pop
sbb
hlt
jl
inc
loope
or
jmp
hlt
push
call
lret
cli
ret
inc
jl
cmc
cmp
mov
cmp
adc
clc
lcall
xchg
iret
jge
xor
mov
pop
adc
mov
jl
shll
mov
leave
loop
mov
inc
jmp
pop
or
fiadds
sub
outsb
add
sub
repnz
dec
inc
sbb
mov
push
lds
int
nop
lock
sub
and
cmc
jp
inc
mov
pop
add
mov
inc
push
inc
cmp
mov
call
push
mov
xor
inc
pop
push
xchg
cltd
pop
sahf
lea
mov
jecxz
dec
stos
rcrl
sti
scas
mov
test
pop
jae
aaa
and
stos
xor
ljmp
aaa
cltd
add
test
dec
lahf
iret
inc
push
xor
sbb
lock
int
xor
sbb
outsl
repnz
or
jg
pmullw
mov
out
add
fisubrs
fsubrs
das
into
aaa
mov
mov
out
push
dec
sub
into
cmpsb
sub
push
sub
push
and
and
nop
shll
rorb
insl
dec
loopne
or
dec
mov
insb
pop
sub
mov
sub
inc
mov
or
gs
into
jle
lds
pop
push
dec
sahf
cmp
call
cmpsb
dec
xchg
stc
ret
cwtl
ljmp
arpl
sbb
mov
es
mov
cmp
in
inc
roll
test
shl
sti
repz
lock
mov
dec
jne
rcr
jns
frndint
pop
outsb
mov
sbb
cmc
jle
imul
lret
push
pusha
mov
pop
lret
mov
mov
ds
sub
je
shll
cmp
xchg
sahf
mov
cs
in
pop
fcomp
pop
int
lds
xchg
add
pop
repz
andb
shrl
scas
ret
jae
lret
pop
mov
enter
imull
xchg
pop
ljmp
arpl
dec
gs
sbb
or
scas
sbb
std
and
sub
rclb
test
arpl
jns
test
in
push
mov
lods
lret
stc
out
rolb
popa
pop
scas
xor
jl
inc
lret
dec
scas
movsl
imull
fisubrl
leave
in
or
jo
jge
cmp
push
je
push
and
mulb
popf
fwait
adc
add
adc
mov
imul
in
fistl
jb
xchg
cs
and
ret
loop
xorl
ja
jp
pop
idivb
in
es
dec
notb
pop
push
xor
push
and
test
mov
bound
je
push
ds
pop
push
sub
icebp
push
or
mov
sbb
enter
mov
cwtl
les
jge
xorb
test
pop
out
adc
addr16
add
lods
xchg
stc
je
mov
dec
inc
and
lds
loopne
mov
xchg
aaa
adc
sbb
in
loope
imul
int3
mov
jecxz
sti
dec
sub
push
pop
mov
insb
leave
pop
jge
push
je
scas
adc
jg
inc
int
xchg
pusha
push
lret
gs
mov
bound
les
testb
aad
pop
mov
cmp
pop
rorl
fadd
mov
aaa
cmp
mov
fs
ljmp
loop
in
and
in
cmp
mov
and
int
push
hlt
pop
mov
rorl
decb
add
mov
lods
lods
jno
ret
fstps
sub
push
add
mov
push
adc
adc
add
and
shlb
xchg
ja
loopne
and
pop
mov
test
add
pushf
pop
cmpsl
insb
pusha
lret
sub
jns
stos
stos
xchg
mov
pop
jnp
ds
dec
jmp
in
cmp
add
add
lret
jle
dec
jmp
jmp
repnz
xchg
js
push
je
pop
out
push
lods
adcl
mov
in
fidivs
insl
xchg
add
negb
adc
inc
int3
adc
inc
fadd
and
lea
cwtl
jge
sti
push
push
fcmovnb
xor
lahf
cmp
dec
jnp
adc
hlt
adc
mov
insb
mov
xchg
imul
nop
lahf
add
out
data16
sub
cmc
ljmp
pop
leave
js
lret
cmpsl
or
data16
not
faddl
test
cmpsb
scas
sub
pop
or
or
cwtl
mov
xchg
es
pop
mov
cmpsl
jb
stos
xor
mov
out
xor
mov
sbb
cli
cmp
fbld
cmp
int3
movsb
repz
ret
mov
add
addb
test
inc
xchg
in
push
mov
outsb
mov
jne
sub
mov
adc
cmpl
adc
or
ljmp
fdivr
int
mov
jle
aas
gs
adc
into
popa
sbb
loop
adc
out
and
jecxz
popa
pop
pop
cmp
lods
cmp
rclb
call
test
icebp
xchg
f2xm1
push
pop
bnd
adc
cmp
mov
cltd
xor
mov
popf
xchg
sbb
sub
xchg
pusha
jo
pop
mov
pop
xor
nop
pop
jg
adc
out
stos
xchg
cmp
subb
push
pop
lret
popf
sub
in
imul
into
stos
xchg
dec
fadds
scas
jecxz
test
pop
icebp
enter
test
cmp
mov
ss
sbb
sbb
xchg
inc
loope
sbb
and
imull
push
stos
leave
test
pusha
int3
popa
in
add
daa
mov
xchg
clc
cmp
outsl
cwtl
fistps
ds
movsb
ljmp
scas
mov
sbb
mov
xchg
fstps
or
mov
out
and
mov
movsb
xor
fistl
outsb
in
pushf
xchg
pop
adc
ja
pusha
repnz
lahf
js
or
aaa
sahf
int
mov
stos
repnz
inc
jns
fsubrl
xchg
jnp
cmp
cmc
lret
test
xor
out
leave
mov
jl
jns
negb
push
mov
jl
sbb
or
nop
fs
xchg
cmp
int3
mov
cmpsl
add
sub
movd
lret
adc
push
mov
loope
cwtl
sub
mov
das
bound
inc
mov
lret
mov
les
test
movl
scas
enter
pusha
xchg
pop
ret
dec
mull
clc
stos
loop
cmpsb
or
or
addr16
mov
popa
ja
jmp
nop
xor
std
jge
jne
int
mov
repnz
jae
lret
sbb
sarb
iret
mov
adc
cmpsl
mov
and
pop
add
cmpsb
cmp
xchg
lds
xor
popf
dec
ljmp
iret
fs
fwait
ret
adc
xor
fwait
out
iret
pop
mov
mov
mov
cltd
test
rcrl
call
mov
rcl
xchg
dec
mov
shl
sahf
or
ljmp
xchg
test
pop
jne
pusha
scas
stos
lcall
lods
clc
jne
pop
dec
xchg
outsl
push
sbb
push
gs
mov
cmp
inc
and
mov
std
iret
cs
jg
enter
dec
mov
add
in
inc
pop
scas
xor
jb
cmp
dec
jns
pop
test
jns
leave
adc
or
jecxz
mov
mov
mov
into
inc
pusha
sub
mov
pushf
inc
cmp
lret
gs
or
imul
outsl
mov
sub
and
imul
insb
mov
adc
insb
pop
jg
std
sbb
out
and
outsb
dec
int
in
stc
and
cmp
xchg
lcall
adc
outsl
lret
inc
mov
mov
rcll
cmpb
adcb
into
sar
daa
das
pop
pushf
inc
xor
xor
pop
out
scas
xchg
adc
jl
xchg
cwtl
mov
aad
and
pusha
gs
clc
sbb
loopne
scas
orb
sti
addl
and
ss
dec
inc
xchg
fnstenv
test
mov
pop
pop
cmp
or
in
and
sbb
dec
push
arpl
jp
out
cmpsl
cmpsl
stos
repz
mov
ljmp
lahf
ficompl
xor
adc
mov
dec
inc
cmp
push
jle
jp
shll
jmp
lods
addl
lcall
add
dec
cmc
dec
fwait
scas
cwtl
sti
push
mov
cmp
inc
cmovle
inc
cmc
jmp
decb
mov
fisttpl
mov
arpl
mov
test
adc
mov
cmp
outsl
xchg
sub
es
ret
in
mov
test
daa
ja
mov
xchg
sub
add
mov
xor
adc
aas
stc
jp
dec
arpl
sub
stos
leave
xchg
shll
in
ljmp
adc
cmpsl
call
shll
insb
cmp
lock
cmp
or
sbb
mov
ja
fs
xor
mov
gs
ljmp
les
adcb
lret
stos
call
pusha
clc
cmp
fistl
xchg
sub
push
or
insl
xchg
and
inc
sti
fucomp
repz
loop
push
out
mov
sub
dec
xchg
test
lret
pop
xchg
mov
daa
lods
pusha
mov
xlat
and
sarl
leave
icebp
mov
xor
xchg
cmp
xchg
jmp
jbe
inc
andl
inc
mov
mov
mov
lods
scas
jge
test
xor
je
addb
mov
sbb
pop
sbb
and
fs
into
mov
cwtl
outsb
stos
jmp
pop
add
rol
or
push
mov
xchg
mov
or
mov
imul
test
loopne
hlt
lods
xchg
push
fisttps
or
lret
test
mov
in
mov
xchg
pop
push
ljmp
dec
dec
loopne
daa
push
daa
jo
mov
mov
int3
imul
inc
call
ret
mov
rol
test
insb
push
dec
int3
add
push
lods
lds
jno
sti
ss
lock
popf
scas
or
rcrb
clc
loopne
xchg
rclb
cmp
cltd
and
jbe
fistps
mov
nop
leave
or
push
stos
lret
sub
movsb
cmp
decl
dec
and
aam
xchg
js
jb
adc
aad
fwait
add
add
mov
mov
iret
insl
cmpsl
xchg
push
nop
xor
fwait
xor
test
cwtl
out
mov
sar
dec
test
dec
inc
sahf
sbb
in
fidivl
dec
das
aaa
popf
into
inc
pop
pop
mov
jbe
pop
mov
into
jns
loop
gs
scas
int3
push
out
aas
and
mov
push
jge
out
mov
sub
and
hlt
int3
inc
xchg
mov
cmpsb
call
add
pusha
pop
jecxz
xchg
je
insl
out
aas
dec
jo
out
sbb
rolb
add
cmp
nop
inc
pop
int3
scas
xlat
jle
mov
inc
stos
mov
push
push
cmpsl
push
push
pushf
movsl
or
mov
test
es
shll
cmp
lods
movl
rcrl
test
mov
inc
sub
es
fcompl
sbb
push
stc
repnz
int3
or
inc
add
mov
mov
mov
movsb
jo
test
xchg
int3
jmp
loopne
fnsave
rcll
sub
shrl
hlt
pop
ljmp
dec
mov
out
insl
mov
push
sbb
xlat
cmp
pop
mov
mov
push
ja
or
hlt
sub
mov
imul
or
loopne
push
inc
and
pop
add
push
sbb
jae
and
test
stos
mov
cmp
dec
add
mov
jb
in
out
fiadds
sbbb
or
incb
inc
mov
orl
jo
std
or
or
push
sub
dec
and
int
test
iret
dec
add
icebp
dec
jns
ret
and
repnz
sub
orb
pop
sti
ret
cmp
aaa
lahf
xchg
mov
nop
push
mov
sti
jle
outsb
xchg
xchg
out
cmp
imul
je
in
jnp
cmp
or
mov
xor
mov
ds
cmp
das
jbe
pop
lods
ja
repz
xor
lret
mov
mov
and
pop
or
dec
ljmp
or
sub
xor
mov
leave
sbb
jns
dec
mov
inc
mov
mov
inc
dec
sbb
mov
mov
inc
int3
sbb
sbb
repnz
in
jbe
dec
xor
ja
orb
mov
outsb
rcr
subl
xchg
cmc
push
imul
pop
fsts
mov
or
scas
xchg
idivl
push
mov
in
and
cmovnp
aas
subl
xchg
jg
dec
or
inc
lahf
mov
add
sub
iret
xor
fsubrp
idivb
aas
sub
sbb
testb
mov
add
loop
lds
dec
stos
jl
xchg
add
rcrl
sub
scas
sbb
stos
or
ljmp
add
repz
and
cmp
pop
enter
xor
pusha
cmpsb
popa
or
in
sti
or
xor
popa
xchg
inc
or
ds
lds
daa
cld
fisubs
add
dec
repnz
nop
cmc
fs
sbb
mov
xchg
cmpsl
int3
or
adc
adc
icebp
cmc
into
jge
inc
push
mov
or
xchg
mov
lock
and
inc
xchg
jp
hlt
cli
push
imul
xchg
lds
adc
fstpl
mov
and
push
push
mov
push
mov
pop
loop
pop
sbb
icebp
or
jge
sbb
inc
test
lret
clc
cltd
pop
test
repz
icebp
pop
sbb
addr16
sub
pcmpgtw
in
jbe
xchg
cli
lret
push
insl
push
inc
push
lret
leave
cmp
xor
lcall
cwtl
in
test
pop
orb
xchg
pop
mov
dec
lahf
pusha
mov
rcr
xchg
es
in
std
mov
push
sbb
stc
push
jns
push
push
mov
or
mov
push
cltd
mov
and
xchg
in
aad
cmpsb
imul
push
mov
mov
popa
sbb
jmp
je
les
aam
pop
and
xor
cmp
push
sar
mov
or
xor
add
gs
sub
pop
loopne
jecxz
stos
popa
jmp
and
xchg
add
mov
cwtl
and
lods
insb
add
nop
jno
mov
out
push
fwait
inc
pop
daa
add
sbbb
ljmp
dec
sub
add
lods
adc
jo
lock
jg
cmp
sbb
lods
add
sub
inc
loopne
sbb
out
adc
jb
mov
adc
xor
push
xor
adc
jb
aad
shlb
adc
repnz
push
inc
sub
push
insl
lea
pop
xor
pop
jge
mov
jns
xor
popa
sub
inc
pop
hlt
addl
sub
iret
movsl
popa
jnp
enter
scas
inc
jb
stos
or
imul
sbb
fnstsw
cmpsl
mov
jmp
lahf
mov
xor
lods
fisubs
int
cmp
int
sub
mov
adc
mov
and
inc
xor
add
sub
jge
push
jecxz
xchg
inc
shl
cmpsb
dec
in
add
les
add
push
cmp
cwtl
ret
jo
xchg
jb
das
cmp
and
test
notb
stos
push
lods
and
xchg
loope
and
dec
mov
movsl
xchg
sbb
int3
inc
dec
leave
mov
sub
fdivs
loopne
daa
cmc
pusha
dec
adc
fbld
jle
dec
jne
sbbl
lea
sbb
sti
cmpsl
aam
cmp
add
test
push
in
mov
je
lahf
pusha
notb
or
out
dec
negl
xchg
add
cmc
decl
lret
loope
mov
mov
call
dec
fs
sub
push
adc
dec
push
mov
dec
and
lahf
loopne
mov
fwait
mov
jns
add
mov
out
ret
mov
push
cmp
xor
push
push
notb
xchg
int3
xchg
pop
lret
cld
xor
out
sub
pop
adc
lods
dec
roll
pop
push
jle
sbb
jl
adc
sbb
mov
xchg
mov
jno
sbb
fwait
push
mov
arpl
std
xor
daa
push
repnz
pop
pop
fisubrl
xor
sbb
and
ret
daa
and
not
mov
xchg
cmp
arpl
jecxz
mov
into
in
mov
cli
add
icebp
mov
imul
shrl
mov
test
bound
leave
mov
push
dec
das
shlb
dec
pop
push
push
cmp
aad
add
or
mov
inc
and
subl
inc
in
es
stos
push
xchg
cld
outsw
mov
ret
ds
adc
push
test
mov
push
movsl
int
pop
and
stos
mov
sarb
or
inc
jmp
xor
and
jg
pop
andb
and
sub
shrl
decb
jno
cmp
scas
cs
outsb
das
mov
xchg
in
cmpsl
mov
out
dec
mov
cmp
sbb
add
shrl
ljmp
ret
inc
addl
pop
push
aad
icebp
out
mov
mov
fucomi
in
add
cli
sar
sbb
test
lcall
repnz
ss
fdivs
in
cltd
inc
mov
push
pop
lcall
xchg
jns
sbb
stc
inc
jae
mov
add
mov
xchg
retw
sub
lret
or
leave
inc
lods
pushl
sbb
cwtl
leave
jge
pop
nop
inc
jle
rclb
into
gs
pop
add
add
dec
cmp
outsb
jns
in
add
sahf
js
pop
or
push
sub
xor
pandn
mov
jmp
aad
add
jg
icebp
dec
fstpl
mov
pop
xchg
jno
out
movsl
mov
xor
mov
jne
mov
icebp
pop
pop
repz
aaa
pop
sti
inc
in
xchg
and
aad
xchg
cltd
and
and
push
mov
negb
in
sbbb
lods
test
mov
push
adc
xor
lret
fcmove
pop
vcvtsd2si
xchg
xor
nop
daa
imul
lods
jns
cmpl
jle
inc
cli
xchg
mov
xchg
jle
bound
push
mov
mov
mov
inc
nop
cld
or
mov
sbb
mov
push
pop
imul
mov
dec
mov
sahf
out
aaa
rcl
mov
cmpsl
stos
pop
shrl
xchg
xlat
leave
scas
fldt
inc
pop
adc
dec
push
add
xchg
dec
or
out
insb
xchg
sub
sbb
push
jae
xor
adc
rcll
xchg
mov
xor
mov
test
notl
mov
sbb
ret
ljmp
test
xor
adc
push
or
in
cli
stos
mov
or
fldenv
add
xlat
dec
mov
or
and
pop
lcall
ja
mov
nop
push
fsubrs
cld
dec
lret
jmp
loope
dec
push
xor
inc
pop
inc
xor
sub
ljmp
inc
or
cs
adc
xchg
loop
mov
mov
stc
es
std
out
push
leave
fldenv
loop
addr16
push
mov
test
mov
sub
mov
dec
sbb
std
jge
sahf
pop
jmp
mov
gs
in
dec
inc
jns
imul
mov
das
mov
pop
mov
fildll
or
mov
ficomps
ss
jl
jo
out
fcom
das
in
dec
cwtl
pop
js
movsb
cmp
pop
add
push
and
iret
out
test
dec
mov
shll
jnp
mov
loope
add
mov
cmp
sbb
push
mov
div
inc
cmp
jns
and
jbe
sarl
outsb
push
pop
push
pop
out
sbb
out
jnp
test
adc
ljmp
mov
xlat
cwtl
gs
jl
insl
int
js
jle
lret
scas
dec
mov
pusha
out
fsub
outsb
inc
addl
jmp
inc
push
rclb
jnp
xchg
mov
inc
pop
addr16
jne
dec
inc
jns
sbb
mov
sbb
xchg
hlt
dec
mov
xchg
pop
data16
cmp
rcrb
fidivs
and
inc
xor
ficomps
fistl
je
out
inc
addb
lret
push
out
loopne
sub
cli
or
mov
clc
push
sbb
nop
jecxz
or
divb
push
bound
aad
jge
adcl
mov
xchg
in
gs
stos
aam
shlb
sub
fwait
movsl
lock
shrl
xchg
sub
xor
or
add
dec
enter
scas
and
cltd
pop
in
mov
add
mov
sub
sti
and
bound
push
je
cmp
adc
sbb
mov
pop
jbe
adc
out
dec
clc
aad
add
mov
mov
leave
test
xlat
test
scas
aaa
cmp
sub
cltd
push
cwtl
add
enter
insl
inc
push
push
jne
rorl
pop
and
mov
incl
daa
das
cmc
int3
lahf
push
adc
jne
ss
daa
lock
dec
sbb
int
mov
into
stos
inc
sbb
mov
mov
dec
push
push
add
cmp
lret
fimull
push
mov
in
fistpl
bound
jnp
sahf
or
fcompl
test
into
scas
xchg
call
adcl
adc
cmpsb
push
mov
mov
jecxz
sahf
icebp
addr16
xor
cld
push
mov
scas
jno
jecxz
movsl
cltd
sub
cli
fldcw
enter
sub
jne
in
add
sub
push
dec
insb
pop
insb
sub
xlat
mov
mov
inc
in
insb
dec
inc
sub
pop
inc
mov
je
imul
test
pop
mov
mov
nop
adc
cld
xchg
rolb
push
or
cli
pop
insl
or
cld
add
pop
leave
pop
ret
sub
inc
jne
adc
in
push
xor
movsb
jl
rclb
mov
jmp
cs
leave
lea
data16
insb
decl
cwtl
ret
imul
xor
insl
movd
or
jecxz
arpl
push
fwait
ss
leave
loope
ret
mov
mov
sub
jl
or
cltd
xor
inc
fidivrs
adc
sbb
insl
arpl
fistps
ss
mov
das
and
filds
jne
stc
inc
jbe
repnz
scas
pop
mov
cmp
insb
in
dec
adc
lds
sbb
or
xor
test
lea
mov
mul
mov
out
iret
cmp
jno
mov
jne
or
add
pop
in
inc
lcall
std
mov
gs
inc
arpl
jl
fisubrl
cmp
shrl
sahf
vmread
stos
pop
pop
lods
pop
mov
leave
pop
cmp
sbb
mov
arpl
es
loop
out
out
or
adc
dec
push
push
xor
sbb
aam
popa
inc
jl
inc
adc
cli
jo
jo
call
fnstenv
emms
cmp
add
imul
sub
xlat
cmp
lds
add
shr
daa
mov
stc
scas
sti
mov
cmc
lods
sahf
popa
xchg
mov
inc
mov
je
aas
sub
dec
imul
and
cltd
pop
imul
sti
mov
jle
adc
pop
call
pop
rclb
xchg
icebp
pop
jmp
mov
movsb
mov
enter
nop
pusha
int3
and
test
jnp
int
mov
lcall
cmp
mov
dec
inc
jle
bound
and
xchg
mov
xchg
xor
in
push
mov
shll
mov
push
movsl
loope
add
fiadds
sti
xchg
xor
ja
cmpsb
lods
pop
lahf
rcr
in
or
or
mov
insl
ds
cld
fcomip
sbb
mov
dec
mov
addr16
sbb
fidivs
sahf
clc
and
xchg
and
outsl
bndmov
pop
andb
call
and
movsb
inc
push
mov
push
aad
ror
xchg
popf
shrb
je
cld
jecxz
jmp
lret
cmpsb
sbb
jno
ss
outsb
sarl
or
icebp
push
dec
in
popa
in
paddw
xor
push
cmpsb
out
adc
aas
negl
popa
xchg
or
or
xchg
lcall
mov
fidivs
stc
ljmp
notb
mov
lods
ss
xchg
vmovmskps
stos
lcall
call
mov
fucomip
xor
push
icebp
data16
das
xchg
js
data16
sub
cltd
mov
jo
ret
ret
in
jns
fidivrs
jb
outsl
mov
sahf
test
je
fcoml
leave
push
mov
popf
bound
test
sti
es
sahf
mov
cmp
movsb
push
iret
lock
insb
inc
rolb
mov
push
repz
xchg
sub
push
in
or
or
outsl
sbb
or
dec
sbb
inc
pushf
xor
insl
je
jnp
lods
mov
std
push
lods
cltd
out
inc
jne
outsl
jmp
jge
push
int
clc
jbe
jno
cltd
xchg
pop
pop
dec
cmp
push
mov
jecxz
or
fs
xchg
xchg
pop
pusha
xlat
mov
dec
push
daa
inc
je
jmp
gs
sub
adcl
xor
stos
mov
popa
jp
cmp
pop
push
mov
and
sbbb
and
icebp
mov
stos
lahf
mov
push
and
aad
in
enter
outsb
mov
mov
daa
je
pop
dec
push
cmp
int3
loop
mov
mov
xchg
out
scas
mov
push
daa
or
jne
loopne
push
negb
dec
mov
inc
cmp
mov
lcall
js
xorb
out
xchg
add
push
cmp
pop
push
fisttpll
inc
xor
fistl
push
sub
stc
stos
cwtl
lock
into
xchg
lea
popa
subb
mov
fiaddl
xor
cmpsl
adc
ret
lcall
gs
mov
shrl
arpl
mov
clc
nop
insb
cmp
cmpsb
or
test
popl
les
push
xor
push
call
mov
push
xchg
mov
adc
daa
push
bound
repnz
xchg
or
sub
ss
repz
repz
mov
xlat
mov
aam
shl
adc
aam
arpl
sub
add
lock
daa
pop
clc
test
aam
out
stos
fwait
inc
pop
cmp
ficoms
ljmp
jne
add
out
pop
hlt
rcl
mov
mov
movsl
mov
xchg
jle
pop
mov
vpacksswb
push
or
loope
hlt
nop
das
xor
icebp
lahf
lock
scas
lock
test
push
push
popa
test
jb
mov
ss
mov
or
in
cmp
mov
inc
dec
fadds
mov
dec
loop
adc
stos
sub
sub
mov
dec
mov
jmp
pop
jne
mov
jle
out
or
sub
add
inc
dec
inc
hlt
mov
adc
lds
mov
cltd
imul
aaa
adc
and
mov
push
mov
in
imul
push
sub
or
cmp
vshufpd
cmp
popa
mov
pop
rolb
out
add
movd
scas
int3
test
xchg
test
jns
inc
rol
addr16
mov
mov
fldt
pop
mov
cmc
flds
cmp
xor
lods
stos
div
push
pop
sbb
loope
jo
cltd
movl
jo
fwait
ret
mov
and
jg
push
dec
adc
xchg
pop
loope
loope
mov
outsb
das
ret
jne
ds
ret
lock
xchg
dec
mov
cld
mov
push
mov
mov
dec
inc
mov
jp
stos
jns
xchg
xchg
bound
shrb
xor
call
lock
cs
dec
mov
xor
loope
popf
add
mov
push
jmp
adc
push
loope
xor
les
sti
aaa
test
mov
xchg
dec
pop
pop
mov
sbb
das
xorb
sub
sbb
arpl
imul
or
and
lea
push
lcall
stc
sti
cmpsl
cmpsb
ficompl
ljmp
scas
cwtl
or
icebp
cmp
pop
jne
mov
push
mov
jne
push
sbb
mov
ficoml
pop
xchg
mov
test
cs
shr
push
dec
mov
xorb
cmp
push
std
bound
or
add
xchg
fmuls
in
jno
stc
dec
or
mov
fwait
cmp
jp
mov
pop
xchg
or
mov
mov
repnz
stos
pop
pop
pop
push
pop
pop
add
mov
testl
fs
or
imul
push
cmp
pop
pop
addr16
ret
pop
addr16
test
notl
jecxz
dec
pop
or
or
jnp
add
cmp
or
mov
aad
xchg
adc
pop
in
mov
xor
or
add
fdivl
xorb
xchg
out
add
lret
stc
scas
add
popf
arpl
and
mov
cmp
fcmovb
daa
insl
jne
mov
mov
push
mov
ja
jle
dec
xlat
shll
xor
add
mov
js
sub
cmp
arpl
shrl
jp
shll
cmp
dec
sbbb
dec
and
std
cmpsl
loopne
gs
sbb
pop
cmp
xlat
mov
adc
sbb
jmp
jg
cmpsb
dec
stc
sbb
add
mov
mov
sub
and
addr16
inc
inc
add
lods
ret
pop
push
comiss
lret
nop
xlat
cmc
roll
lea
jecxz
mov
mov
or
andl
lret
mov
cmpl
adcb
mov
adc
xchg
imul
ficomps
mov
xchg
leave
xchg
test
out
shrl
inc
inc
lea
js
outsl
out
xchg
movsl
push
iret
jnp
xor
mov
jl
push
or
pop
fisttpl
lods
in
call
bound
in
test
push
push
mov
in
pop
cmp
push
bound
lahf
jb
inc
mov
jno
lret
mov
cmp
mov
stos
test
inc
lds
shl
sbb
sbb
lds
add
dec
lcall
shr
fsubr
mov
loopne
jnp
push
mov
lahf
jo
imul
lods
mov
scas
cmc
idivl
cmp
idivl
cmp
mov
rorb
dec
dec
sub
cmp
sti
jmp
push
xchg
sbb
into
or
sbb
dec
push
push
call
cmpsl
sub
dec
leave
rcrl
xor
adc
imul
subb
sbb
shl
xchg
setl
aas
insl
fwait
pushf
mov
pop
ds
stos
add
dec
test
lea
mov
gs
mov
inc
jo
js
adc
imul
lea
lahf
and
wbinvd
addl
icebp
ds
int
or
or
jg
out
arpl
xor
sbb
cmp
ja
inc
jne
add
scas
pop
ljmp
mov
mov
mov
in
cmpsb
fdivr
xchg
adc
inc
dec
and
sub
pop
sbb
mov
arpl
xchg
cli
mov
adc
inc
push
bound
dec
mov
notb
sub
dec
inc
dec
dec
xlat
and
pop
repz
decl
fnstcw
dec
pop
jne
mov
rcrl
in
notb
jmp
ja
fdecstp
lret
jbe
lods
in
pop
ficompl
call
or
jecxz
rcr
in
andl
cwtl
sbb
sahf
jge
sub
xchg
xor
sbb
xor
inc
mov
push
sub
iret
scas
push
adc
and
pop
push
into
sub
sub
lret
inc
clc
jle
nop
or
ja
jnp
mov
popa
fcmovnb
jp
cmpsl
andb
jae
jno
pop
or
pop
xchg
cmp
cmc
inc
mov
cmp
ret
repnz
notl
sti
mov
jmp
and
leave
or
pusha
leave
dec
push
ds
mov
inc
js
jno
adc
aaa
mov
inc
clc
imul
shlb
ljmp
xor
pusha
insl
es
sarb
test
push
aaa
aad
mov
sti
mov
pop
cmpl
push
mov
or
fs
loopne
add
gs
push
insb
mov
xchg
inc
insb
test
mov
imul
stos
and
and
sbb
rolb
inc
jmp
cs
pop
xchg
je
daa
ret
sub
lds
inc
push
imul
jmp
inc
negb
sub
rolb
pop
lcall
hlt
scas
or
shrb
or
jmp
mov
cmpsl
movswl
addr16
jmp
adc
int
nop
jl
fwait
jg
outsb
loop
dec
lods
pop
cltd
push
xchg
dec
add
ss
mov
int3
arpl
cltd
jne
movsb
add
add
jge
lret
subl
dec
xchg
lock
or
jno
fistpll
ja
xorl
sbb
adc
lds
push
push
popf
int3
cmpsb
pop
mov
fstpt
xchg
mov
pop
rclb
mov
jl
sub
out
movsl
push
push
cmp
es
jl
movsb
lcall
cmp
sub
imul
sub
ret
ss
lods
jb
rcr
mov
movsl
jge
mov
outsb
xchg
fstpt
scas
stos
mov
jno
cld
testb
xor
mov
aaa
pop
pop
jmp
push
and
lds
jbe
sub
and
cmp
sbb
cld
div
shrb
xchg
add
lock
adc
cld
cmp
inc
lret
pop
cmp
mov
push
pop
mov
mov
inc
sub
out
fcoms
and
xchg
xchg
add
sahf
in
push
push
sub
mov
arpl
xchg
ss
test
gs
dec
imul
push
dec
imul
dec
jle
fdiv
sbb
or
lret
ret
loope
or
mov
rcl
loopne
data16
mov
add
sub
loopne
sbb
push
mov
mov
lret
sbb
cmp
jecxz
cmp
jb
xlat
xlat
leave
ljmp
filds
lcall
leave
inc
in
sbb
stos
hlt
js
xchg
xchg
lret
xchg
mov
test
mov
ret
ret
ret
add
jb
scas
arpl
hlt
xor
and
pop
mov
jb
fsub
lret
push
loopne
testb
mov
ss
and
call
clc
and
out
dec
insb
pop
leave
cwtl
mov
push
mov
inc
imul
xchg
fcoml
xchg
aam
cmp
sub
test
pushf
lods
jge
jns
outsl
ss
mov
hlt
out
inc
das
repnz
mov
inc
xchg
mov
pop
pushf
fistpll
adc
imul
sub
test
adc
movsb
or
mov
fcompl
das
mov
aad
sub
or
out
xchg
cmp
je
sub
bnd
scas
les
sbb
cltd
cmp
sahf
fcompl
jae
mov
addr16
sbb
std
xor
push
xor
xchg
add
nop
mov
arpl
adc
and
mov
ljmp
shll
cmp
xchg
cltd
push
xor
pop
bound
pop
lret
jno
pop
cmp
rclb
mov
fwait
inc
cmp
data16
rcll
sti
clc
jecxz
adc
dec
sbb
add
add
inc
cmpps
push
push
cs
jno
push
je
lods
xchg
imul
testl
pop
test
cmp
push
insl
div
inc
lcall
mov
sub
push
sub
aaa
add
sbb
movb
jmp
in
or
push
sar
cli
cmp
scas
out
fwait
in
jg
mov
pop
push
push
fwait
je
dec
ljmp
jo
mov
xor
testb
test
pop
push
mov
pop
ror
jo
mov
cmpsl
sbb
pusha
into
mov
jbe
dec
mov
rcrb
dec
dec
or
sub
out
fwait
pop
pushf
lahf
pop
lahf
cmc
testb
shlb
outsb
leave
outsb
out
jl
addl
aas
out
stos
add
jmp
sbb
lods
test
in
pop
dec
or
sub
adc
dec
rcr
sub
mov
adc
inc
outsl
ret
loop
outsb
sarl
shlb
adc
sbb
cmp
pop
dec
test
popa
pop
xchg
ljmp
xchg
scas
insb
push
adc
cs
js
daa
jo
sbb
fldl
orb
xchg
and
xor
daa
loope
xor
xor
loope
and
add
sbb
lret
adc
pop
jbe
jmp
jo
pop
sub
cmpsl
in
dec
push
data16
repz
testb
or
mov
ret
mov
out
dec
dec
xor
sub
loop
int
adc
mov
pop
dec
mov
inc
mov
sub
cltd
rorb
jno
cwtl
ret
push
fisubrs
dec
mov
repnz
das
roll
mov
pop
inc
std
pop
cmp
out
add
shl
lcall
xchg
xor
negb
in
mov
adcb
mov
cmpsb
xor
popf
gs
daa
push
int
xchg
in
iret
rorb
es
outsl
xchg
icebp
rol
cmpsl
jnp
dec
or
leave
pop
mov
adc
rol
icebp
sahf
sbb
mov
inc
mov
lret
int3
push
mov
adc
or
fistps
push
jae
dec
lcall
mov
addb
jle
mov
xchg
jbe
fmull
cmpsb
sbb
insb
cwtl
push
das
push
fwait
lcall
ficoms
cmp
pushf
and
pop
ja
mov
repnz
sub
insb
jecxz
mov
cmp
out
rclb
out
mov
xchg
dec
test
adc
lds
sub
mov
mov
loope
mov
int3
ljmp
dec
popf
xchg
add
push
dec
lcall
adc
clc
je
or
shrl
loopne,pt
popf
aam
jne
add
rol
xor
std
pusha
icebp
mov
shl
and
lds
xchg
inc
push
imul
mov
dec
push
fwait
mov
dec
sub
fcompl
inc
lods
inc
nop
and
sub
mov
xchg
cmp
xor
push
rcr
adc
pop
repnz
lock
cli
mov
pop
sub
mov
lds
incl
repz
dec
loope
in
divl
push
cltd
mov
xor
arpl
adc
or
int3
lds
pop
push
test
sarl
and
sti
push
mov
sbb
xor
dec
push
adc
shlb
and
std
sahf
rcll
pusha
push
ret
movsb
clc
cld
data16
sbb
mov
xor
sub
xlat
data16
call
xchg
cmpsl
sub
push
jns
and
in
dec
cli
fwait
mov
xor
inc
fsubrl
lcall
adc
lret
in
ljmp
jl
cmpsl
and
dec
fisttps
cmpl
jg
add
repz
popa
movsl
xchg
ret
pop
mov
adc
add
je
arpl
ss
xor
ss
popf
call
ljmp
sub
push
inc
sarl
sbb
push
pop
or
add
data16
sbb
mov
addr16
and
iret
dec
add
adc
add
jbe
inc
test
sub
movsb
xor
aad
mov
or
xor
and
test
jle
mov
jne
adc
or
cmp
sarb
cld
stos
mov
arpl
pop
xchg
daa
pop
xchg
mov
cwtl
pop
pop
cld
sbb
add
mov
mov
iret
shr
rolb
popa
subb
movq
out
shr
aad
mov
mov
xchg
iret
out
sub
dec
iret
mov
sbb
rcll
cmpsb
fldl
sub
jnp
push
mov
sub
mov
jns
out
out
or
fdivr
sub
xor
scas
cmp
pop
and
xchg
fmuls
pop
out
popf
xor
sbb
ds
push
pop
mov
mov
cmp
push
push
mov
leave
lods
cmp
es
fwait
push
jb
mov
test
sbb
leave
test
insb
sbb
sub
push
arpl
imul
inc
imul
or
fcomps
rorb
mov
push
xchg
lret
dec
jbe
cmc
shlb
cmp
pop
das
or
mov
daa
fs
aas
cmp
or
or
pop
sarb
add
js
scas
jl
push
popf
ret
mov
pop
ret
pushf
lret
into
push
push
xchg
sbb
mov
pop
and
test
lock
inc
in
nop
mov
pop
stc
mov
jle
test
fs
xchg
addb
dec
mov
stc
fisttpll
cmpsb
xchg
xlat
push
dec
mov
aad
push
data16
jno
inc
dec
mov
ljmp
pop
xchg
push
xor
lods
cli
dec
mov
out
pop
in
sbb
out
or
nop
inc
sbb
pop
dec
sbb
out
call
mov
scas
notl
xor
xorl
sarb
mov
push
ss
mov
outsl
or
push
icebp
push
test
aas
mov
fisubs
sbb
pop
mov
mov
sysret
ja
mov
add
daa
arpl
xchg
xor
pop
or
sarb
inc
cmc
loop
sbb
jo
cmc
addl
push
lods
mulb
sub
stc
fidivl
push
pop
push
jnp
push
addl
dec
lahf
mov
loopne
stc
add
cmpsl
add
iret
fadds
aam
in
gs
inc
push
cmpsb
popf
fstpt
adcb
dec
enter
arpl
inc
aas
mov
jae
jo
in
fsubl
std
fstpl
cmp
in
fs
in
mov
call
ljmp
sti
mov
push
or
mov
testb
jo
repz
aas
cmp
es
ss
inc
fnstsw
scas
sbb
cld
aad
roll
test
dec
pop
or
loope
dec
xor
pop
rcll
loop
loop
ret
cmp
mov
insb
sub
lahf
mov
xor
push
push
lea
shlb
lret
dec
je
xor
ss
lahf
push
mov
push
int
mov
lcall
xchg
mov
mov
daa
mov
push
xchg
xchg
test
jb
fs
out
or
outsb
sub
rolb
ss
das
rorb
sbb
loope
lods
xchg
into
cmc
mov
iret
pushf
add
das
push
rcrl
push
les
outsb
mov
mov
and
cmp
pop
and
mov
inc
aaa
sub
mov
push
icebp
jmp
sti
add
mov
test
addb
push
cs
inc
jno
jecxz
pusha
stos
insl
jne
cltd
dec
mov
push
mov
lods
pushf
sub
jo
cli
pop
dec
in
or
and
insl
inc
fsubs
stos
test
inc
mov
cmpsb
mov
and
add
loopne
mov
data16
lcall
jmp
xchg
cmp
and
xchg
adcl
lds
sub
iret
mov
adc
pop
push
outsl
push
dec
mov
mov
mov
push
jbe
mov
jae
dec
iret
lods
sbb
push
mov
lea
int
or
cmpsl
add
inc
sbb
ljmp
std
ret
daa
dec
add
jl
sbb
std
mov
lds
mov
je
addps
loope
nop
inc
aas
xchg
popa
data16
sub
test
in
and
dec
add
mov
push
addr16
xchg
sarl
fcomps
adc
fcompl
xchg
inc
cltd
data16
adc
sbb
leave
inc
mov
sbb
test
aaa
inc
rolb
inc
adc
pop
lock
mov
jbe
jae
jns
xchg
mov
cmp
outsl
xor
imul
stos
add
mov
int3
adc
mov
data16
cmpsl
pop
rclb
inc
cli
xchg
cltd
movsb
les
lock
aas
dec
icebp
cmp
loope
lahf
movsl
xlat
mov
inc
test
call
jge
cltd
pop
sub
in
mov
and
movsl
jge
adc
sub
jle
cmp
test
ret
insl
jnp
xor
outsl
in
adc
mov
and
sti
mov
add
scas
lcall
xchg
jno
imul
push
inc
cwtl
xor
pusha
sub
sub
sbb
xchg
test
push
int
add
aam
repnz
push
outsb
sub
addr16
cmp
das
sahf
jp
repnz
loope
insl
or
adc
jl
stos
lahf
cwtl
mov
ljmp
aam
jno
sti
repnz
lods
cli
add
xor
or
dec
scas
int
repz
jne
and
shrl
mov
dec
lret
xchg
dec
xor
dec
or
ret
imul
sbb
adc
and
jg
push
popf
cwtl
sub
xor
push
jl
add
dec
daa
jg
in
inc
xchg
dec
ja
mov
into
sti
sbb
mov
add
add
jb
mov
sub
cmp
xchg
decl
adc
ljmp
in
jae
sbbb
sub
push
popf
or
xor
pop
jmp
mov
fsubs
push
movsl
loop
jecxz
lea
push
inc
add
inc
es
das
and
hlt
cmp
xor
jne
dec
sub
mov
loop
mov
in
xor
and
cmp
push
or
jb
js
dec
adc
pop
add
sbbl
and
pop
inc
or
and
out
push
pop
mov
and
lods
and
sub
and
lods
stc
shlb
out
adc
mov
lahf
loopne
int
insl
lahf
cld
xchg
adc
mov
dec
jb
or
in
mov
push
decb
gs
negl
and
data16
and
sarl
push
jmp
imul
out
mov
hlt
js
xchg
sbb
pusha
xorl
bound
dec
xchg
xchg
out
add
arpl
dec
lods
movsl
loop
xor
mov
arpl
pop
pop
je
mov
outsl
mov
rclb
fisubrl
mov
adc
push
fsubrl
imul
dec
fs
inc
je
cmpps
shlb
mov
push
rcll
stos
test
jbe
fs
nop
mov
dec
adc
mov
inc
xor
cmpsb
or
cli
ja
or
test
mov
xchg
mov
cmp
rolb
out
stos
daa
mov
adc
mov
and
mov
in
or
cwtl
aam
popf
cs
loope
movsl
js
mov
fcmovnbe
cld
int3
enter
mov
mov
ss
ret
sbb
ss
mov
cmp
push
mov
imul
jmp
add
push
push
and
cmp
and
leave
mov
stos
fs
out
sub
rcl
mov
cmp
shld
aam
or
dec
into
sbb
imul
lods
test
sahf
out
adc
test
icebp
push
jns
cli
int
cmp
mov
sub
push
or
pushf
rcrl
adc
ret
jno
jmp
mov
cs
dec
mov
mov
xor
mov
inc
pop
das
xor
mov
icebp
test
repnz
outsl
xchg
jge
push
inc
test
and
in
add
cs
push
inc
sbb
dec
test
inc
add
sub
mov
iret
inc
data16
adc
jo
leave
adc
ficoms
cmp
fnstcw
lods
fisttps
lock
cmpsb
push
cmp
test
mov
sbb
testl
out
add
loopne
and
push
cmp
pop
cmpl
in
int3
mov
push
arpl
sarl
sbb
cmp
xor
fs
sub
imul
and
icebp
xchg
jnp
pop
xchg
call
inc
dec
ja
adc
dec
mov
push
mov
pop
sbb
push
xchg
push
xchg
mov
cmp
lea
dec
repnz
mov
sbb
dec
push
xor
xor
push
push
sub
lods
dec
loope
stc
mov
dec
sbb
fmull
lahf
inc
add
push
es
popf
scas
mov
int3
and
cmp
aas
lea
imul
ss
gs
cmpsb
mov
sub
jmp
lahf
cmp
jbe
lahf
ljmp
inc
jne
fcmovnb
push
or
fidivrl
xchg
stc
mov
and
push
in
data16
rcl
mov
imul
fsubs
andb
les
dec
xchg
mov
push
enter
out
xor
pop
mov
mov
push
test
in
sbbb
loope
in
js
aad
xchg
xor
lock
cwtl
shrl
add
jb
outsl
and
add
pop
mov
xor
rorl
pop
in
push
mov
push
std
bound
sub
dec
insb
movsb
ret
out
test
mov
and
test
sahf
pop
das
mov
sbb
jne
sbb
cmp
xchg
xbegin
mov
jge
es
aad
lods
xchg
fnstcw
and
adc
notl
jge
aam
pminsw
sbb
popa
mov
shll
out
fdivl
cmc
adc
sub
cld
adc
imul
enter
ficomps
daa
push
fcomps
fsubp
mov
sub
adc
aaa
dec
mov
sbb
cmp
pop
fstl
ret
cmp
fldenv
std
pop
int3
ret
fisubs
sbbl
adc
xchg
sbbl
mov
mov
push
pop
jecxz
mov
test
xchg
add
xchg
lahf
and
xor
cmc
add
push
sub
dec
pop
push
outsl
es
cmp
cmc
xor
pop
imul
mov
jle
hlt
push
arpl
mov
mov
push
in
sbb
add
out
push
pusha
mov
pop
outsl
inc
lds
add
xchg
lcall
inc
mov
and
dec
add
jno
arpl
enter
xorl
je
fcoml
cltd
inc
cwtl
xchg
cmp
dec
ret
pop
jecxz
lret
jnp
cmp
sahf
pop
sarb
mov
inc
cmpsb
arpl
dec
push
dec
mov
aaa
call
insb
xor
movsl
and
iret
outsb
and
mov
jne
lret
lcall
test
mov
cmc
pop
push
lods
mov
jno
adc
push
addl
add
xlat
xchg
ret
cs
jb
and
int3
mov
sbb
test
daa
inc
lods
xchg
movsb
mov
outsl
loopne
cmpsl
jp
mov
add
sbb
rolb
hlt
stc
adc
mov
cmp
fcmovbe
movsb
aas
insl
mov
and
mov
outsb
mov
aas
sbb
es
lea
dec
sbb
repnz
popf
call
xor
std
xor
fcom
dec
or
sbb
mov
jo
push
stos
cmpb
pop
fidivrs
cli
push
xchg
into
ja
fistpll
mov
data16
test
add
and
rolb
shll
cli
mov
mov
and
fsubr
jmp
popa
adc
cltd
popf
mov
jbe
daa
mov
mov
jb
adc
loop
mov
out
jno
ljmp
cltd
mov
pushl
jno
fcomps
jo
xor
adc
out
or
out
lock
or
xchg
cltd
imul
mov
push
mov
test
cmp
getsec
call
inc
fwait
jmp
mov
popf
jecxz
adc
xor
xor
or
add
jle
fisubs
les
loope
loope
dec
push
sbb
lcall
repz
mov
push
fistpll
jbe
imul
push
outsl
hlt
cs
clc
aaa
sti
out
imul
incl
mov
jg
jp
xor
fcompl
clc
les
and
sbbb
jns
pop
roll
addr16
pop
lods
mov
in
sbb
and
jno
andl
xor
cmp
lahf
xor
pop
lea
out
dec
sub
pop
inc
push
cmpsb
pop
add
xchg
mov
outsl
mov
cmc
mov
fstl
shlb
hlt
or
or
fisttpll
or
xchg
jl
push
lods
push
adc
insb
mov
clc
xor
mov
push
push
test
mov
push
dec
cltd
xlat
insl
adc
jbe
cmp
cmp
inc
popa
ret
jecxz
xor
jae
rclb
cmp
sub
inc
pop
mov
out
cltd
call
fxam
and
mov
sub
ljmp
push
stos
fildll
push
jns
inc
negl
bound
add
subl
mov
mov
sbb
inc
push
ror
xchg
xchg
ret
popa
lahf
and
mov
sub
pop
mov
js
fwait
divl
jae
jb,pt
cmpsl
andb
int
ror
in
insl
fsubs
in
xor
fwait
xor
push
cmp
cmc
dec
cmpsb
jbe
nop
mov
cli
jb
jne
and
stos
outsl
frstor
adc
add
jae
mov
push
mov
pop
jne
mov
adc
jl
mov
sbb
hlt
pmulhw
sbb
jbe
mov
movsb
decl
mov
mov
ficoms
and
inc
lret
pop
aaa
or
sbb
xor
and
movsl
cmp
sub
add
pop
pusha
shl
fldcw
jne
dec
int3
pop
mov
sub
lock
or
call
add
leave
and
into
jle
mov
fidivl
loope
inc
fwait
push
cs
enter
mov
das
lcallw
sub
xor
xchg
sub
lds
gs
cmpsb
test
jmp
and
es
or
sbb
pushf
mov
adc
dec
js
test
mov
jo
or
xor
cld
in
std
lea
lds
cmp
push
push
and
or
aad
lds
xchg
leave
push
stos
cmpsl
stos
adc
push
jnp
les
lcall
jno
lcall
pop
jne
negb
cmp
ja
mov
inc
push
test
ds
sub
push
dec
mov
xchg
sub
leave
imul
mov
icebp
sbb
mov
mov
or
push
jb
sub
jmp
orb
xchg
push
mov
ljmp
in
test
pushw
repnz
inc
shrl
jo
pop
stc
aad
ljmp
pop
aad
xor
sti
and
cmpsb
cmpsb
inc
push
push
lret
inc
mov
xor
cmpl
jg
xor
int3
repnz
outsl
mov
sbb
imul
xchg
adc
outsb
popa
pop
xor
dec
popf
rorl
mov
sub
movsb
test
sub
addl
std
jge
cli
or
pop
inc
pop
adc
ljmp
or
inc
ficoms
pop
sub
ret
pop
rclb
jg
mov
scas
mov
inc
cld
test
call
add
sbb
xchg
movsl
dec
adc
lret
int3
aaa
inc
pop
jge
out
fisubrl
mov
nop
xor
repnz
inc
xchg
pop
orl
or
popf
mov
adc
sub
or
fisttps
sub
test
sub
adc
out
cmp
adc
inc
mov
rclb
rorl
rcl
xor
mov
lods
mov
pushf
mov
pop
lods
arpl
dec
mov
cmp
add
ja
in
xor
mov
sti
ds
cs
mov
test
push
lock
push
cmc
dec
sbb
xlat
jl
test
outsl
pushf
roll
lea
add
jge
push
fstpl
jg
cwtl
jb
mov
jne
pop
jmp
rcrl
jnp
aas
sub
inc
stc
cwtl
cmp
ss
xchg
pop
cmp
repnz
cltd
lock
leave
roll
scas
jo
lock
in
add
aad
cltd
gs
xor
mov
rdtsc
mov
call
adc
push
out
cmpl
inc
push
dec
jno
adc
or
cmp
adc
sbb
aad
jecxz
adc
imul
xchg
jb
adc
cmp
jae
mov
push
lock
pop
cmp
push
sahf
fwait
lea
rol
cmc
fiadds
push
outsb
cmp
xor
cmp
mov
add
sub
jo
adc
jne
and
cmp
gs
sub
jno,pt
xor
fucomip
or
insb
dec
pop
bound
je
inc
cmp
mov
shll
add
dec
je
pavgw
dec
push
and
in
das
pop
add
in
lret
stos
sbbl
inc
jg
fwait
push
fldt
add
adc
mov
mov
shrb
mov
xchg
mov
sbb
mov
fsubrs
inc
jo
sub
in
jp
adc
mov
sub
mov
sub
inc
lret
push
clc
mov
sbb
fdivl
lea
mov
hlt
xor
pop
ret
shrl
add
lock
mov
iret
xor
ds
cmp
enter
addr16
push
stos
push
int3
roll
cli
fmulp
notb
xor
add
imul
sub
jg
call
mov
add
popf
xchg
repnz
ss
inc
inc
arpl
mov
mov
rcr
mov
add
push
out
pop
test
rep
push
push
or
mov
xchg
inc
push
xchg
into
mov
fstl
sub
insl
pop
pop
jg
mov
rcl
mov
cmpsb
push
mov
out
das
loop
push
mov
daa
xor
mov
inc
sahf
out
test
pop
mov
into
inc
push
rolb
ss
mov
fwait
pop
cltd
pop
cltd
xor
mov
sub
les
pushf
aam
sub
inc
popf
dec
push
mov
dec
adc
xchg
jb
inc
pop
add
inc
cmp
mov
lret
clc
mov
sahf
xor
mov
into
popf
leave
push
pop
mov
inc
xlat
and
jecxz
in
adcl
test
iret
fs
and
dec
std
mov
sub
aaa
int3
mov
mov
jp
inc
sub
sbb
push
movsl
or
jbe
in
pop
insl
jp
push
pop
push
repnz
or
test
inc
aas
inc
shrb
out
or
leave
or
aas
xor
sbb
xchg
leave
mov
inc
pop
dec
je
pop
mov
cmp
les
mov
pop
fisubs
scas
jnp
dec
mov
dec
pop
dec
cmc
fcmovb
xor
in
inc
test
fsubrl
popf
jp
fidivs
pop
mov
data16
jno
mov
into
ljmp
ds
mov
lock
clc
mov
ss
jg
enter
sbb
jl
bound
push
test
scas
mov
sbb
inc
lds
loopne
loope
add
je
pop
test
imul
lds
pop
xor
jle
or
push
jno
das
outsb
lods
inc
xor
sbb
shrb
fwait
loop
dec
mov
out
pop
loop
mov
dec
test
jmp
test
in
jl
ds
add
jecxz
insl
es
dec
push
jmp
mov
push
lret
aad
inc
imul
or
dec
cmp
jo
jge
sbb
out
rcr
mov
lcall
push
je
addr16
cmpsb
ljmp
xchg
jne
push
rolb
sti
adc
add
dec
adc
push
cmp
test
fcomps
fsubl
cli
mov
outsl
psubusw
out
rcrb
jnp
jmp
jb
data16
mov
xchg
stc
sahf
add
ds
cmovle
push
and
fmull
push
mov
and
mov
addb
mov
xorb
inc
dec
daa
sbb
std
lret
adcl
movsl
nop
push
and
jmp
call
inc
jb
shll
add
and
lret
inc
std
mov
xor
pop
sbb
js
insl
dec
inc
jecxz
add
ror
and
inc
mov
les
sbb
jb
xor
xchg
inc
negb
and
xchg
das
xorb
push
loope
mov
rcll
or
lock
clc
pop
dec
jnp
iret
and
push
or
jae
mov
in
inc
sbb
jne
xchg
mov
lret
add
rcrb
in
and
mov
pop
jae
out
sub
ss
rcll
loop
scas
int
lea
push
xor
mov
push
push
mov
shll
jo
sub
aaa
mov
mov
movsb
js
cmp
lea
or
movsl
add
mov
sbb
femms
jbe
sub
xor
inc
cli
out
movsb
xor
inc
js
inc
add
jg
shl
mov
jmp
pop
or
rclb
call
movsb
or
fmuls
mov
adc
fwait
or
mov
clc
cmpsb
jnp
xlat
adc
orb
dec
aam
popa
sub
cmp
add
adc
mov
adc
push
gs
lret
xor
sbb
test
mov
xchg
sbb
int3
jnp
stos
inc
push
out
fstl
add
loope
mov
sbb
push
adc
testl
adc
out
ds
fs
sti
insl
and
xchg
es
xlat
aas
icebp
fsts
loopne
push
leave
cmpb
push
shl
cmp
cmpsb
lock
sbb
adc
push
mov
repnz
sysret
inc
jne
mov
and
mov
sbb
xchg
add
call
fidivrl
imulb
push
mov
inc
data16
sbb
jno
into
sbb
imul
cmp
adc
and
jge
outsl
pusha
and
or
jp
aaa
push
push
xlat
push
les
cs
sbb
ret
scas
lret
imul
cmp
jno
mul
imul
dec
add
clc
inc
mov
jb
mov
js
pop
ficoms
ljmp
pop
ljmp
push
lods
arpl
jge
jns
xchg
insl
add
popa
mov
dec
sub
std
nop
adc
fninit
jae
cmc
out
lret
ret
mov
hlt
xorl
add
inc
and
jb
test
sbb
mov
ljmp
xchg
imul
in
idivl
test
jo
fs
or
fnstcw
mov
mov
inc
leave
lds
in
sbb
jge
icebp
ret
xchg
clc
jge
gs
stc
stos
movsb
leave
cwtl
orl
aas
gs
jo
xchg
lret
push
lret
mov
inc
mov
inc
and
loope
outsl
and
inc
ja
roll
fistpll
jle
ljmp
fmulp
push
cwtl
shlb
gs
cmp
lea
xchg
enter
std
adc
dec
out
mov
ja
mov
mov
mull
addr16
or
hlt
es
test
out
inc
and
je
fidivrs
mov
inc
or
lret
ds
insl
sti
sub
cmp
mov
das
sub
mov
ffree
pop
imull
inc
and
call
cli
and
ret
push
adc
add
inc
mov
outsb
cmp
stc
push
sub
sbb
pop
push
or
or
nop
enter
sub
lea
hlt
repz
or
in
or
dec
es
cmp
jge
push
jecxz
xchg
mov
or
push
rcrb
out
sub
pop
clc
bound
or
out
jl
sbb
cwtl
pop
inc
lret
call
jmp
data16
mov
xor
orl
mov
dec
mov
mov
fldt
outsb
cmpsl
dec
loope
mov
push
js
cs
inc
xchg
xchg
cmpsl
in
outsb
cmp
mov
je
movsb
cmp
out
movsb
xor
add
iret
fldcw
sahf
aam
sahf
adc
xchg
ret
pop
or
dec
cmc
mov
ja
pop
pop
add
sbb
test
hlt
jg
outsl
xchg
call
adc
mov
test
and
rorb
leave
mov
cmp
adc
aaa
shrb
and
dec
testl
fmuls
sbb
and
inc
fcompl
xor
dec
mov
aad
ror
mov
xchg
mov
inc
repz
cmpsb
xchg
int3
ss
add
push
stos
mov
mov
loopne
jo
cmp
mov
dec
jns
jns
adc
mov
aaa
pop
adc
fcoml
pop
push
xchg
and
aas
push
je
jno
stos
rolb
mov
mov
movsl
addr16
out
push
pop
popa
dec
ret
ret
xlat
mov
dec
bound
sub
out
jg
ficomps
jne
jg
nop
cmp
mov
pop
fsubrl
add
fmul
and
fisttps
and
push
xor
adcl
sbb
cmp
xor
stc
xchg
xor
mov
das
and
push
pop
sbb
xchg
out
cli
cmpsl
or
cmp
imul
mov
cmp
pop
pop
push
push
sub
jo
dec
loopne
jne
push
dec
decb
hlt
cmc
add
cmp
mov
inc
inc
rcrl
fnstenv
sbb
pop
xor
insb
clc
mov
dec
sbb
xchg
stos
testl
popl
xchg
inc
and
sahf
add
mov
mov
cmp
aaa
shrb
sarb
in
jnp
bound
xor
in
pop
pop
ficoml
pop
int
xchg
mov
mov
dec
retw
pop
xchg
sub
icebp
iret
repz
jbe
push
inc
mov
lea
into
xchg
aam
out
sbb
dec
jns
ret
jecxz
mov
pushf
cmp
inc
dec
insl
orl
inc
call
ljmp
leave
scas
sub
sub
or
jmp
std
and
fdivl
sti
add
mov
mov
popf
test
cmp
cmp
pop
insb
int3
xchg
lock
mov
incl
bound
push
fcom
push
mov
jg
fisubl
inc
mov
into
fld
rol
mov
push
mov
lahf
push
and
gs
pop
ljmp
and
inc
mov
pop
add
adc
or
mov
mov
add
aas
add
jl
pushf
imul
xchg
mov
movsb
daa
inc
dec
out
and
or
mov
orb
lret
test
test
adc
fwait
scas
std
lock
sbb
aaa
orb
lret
lds
inc
pop
pop
fucomp
mov
push
jnp
mov
inc
mov
dec
aas
jl
ret
lret
fsubrs
jg
push
adc
sti
cmpsb
stos
ret
dec
and
mov
push
cld
and
xor
xchg
clc
push
mov
out
inc
lea
lahf
ret
enter
push
lock
mov
jae
out
jbe
sub
add
jg
dec
popf
add
inc
xchg
ret
adc
lock
mov
adc
fcoml
lcall
cltd
sti
cwtl
mov
and
jmp
adc
pop
lret
sub
push
add
sbb
mov
scas
mov
test
test
test
scas
mov
in
push
subl
and
int3
add
add
pop
mov
pop
fwait
daa
or
xchg
sti
das
dec
lret
sti
repz
jo
jmp
repz
jno
int
in
xchg
mov
mov
xor
sahf
mov
xor
aas
push
test
mov
sub
stc
cmp
sbb
outsl
sbb
xor
cmpsl
fs
loopne
jbe
mov
dec
and
dec
jmp
sub
negb
mov
addr16
sub
stc
push
ds
aam
push
data16
jb
scas
nop
ficompl
push
fst
les
and
addb
xor
push
mov
pusha
repnz
sti
getsec
xchg
xchg
outsl
xchg
push
jmp
nop
movb
stos
into
inc
movsl
fsubl
jno
xchg
dec
pop
xchg
int3
dec
pop
lods
push
repz
mov
sub
test
lret
lods
test
xor
data16
iret
dec
gs
push
sbb
sub
scas
cmp
or
divb
aas
aaa
inc
stos
jbe
mov
imul
ss
shlb
andl
loop
icebp
in
push
or
dec
xchg
int
push
ss
dec
pop
fbld
das
sub
cmpsl
cmpsl
addr16
jo
clc
and
dec
push
add
data16
loopne
in
xor
into
jl
jle
mov
push
rorl
scas
fadd
add
popa
mov
push
into
mov
imul
jge
and
rorb
ja
mov
sub
fmuls
rorb
movsb
popf
lret
sub
xor
repnz
cmc
out
add
xchg
faddp
lahf
pop
das
addr16
fdivrl
mov
mov
inc
push
push
mov
sbb
ss
fsts
and
lods
dec
out
repz
mov
cmp
lret
lock
ffreep
adc
ret
jg
or
add
out
jo
in
popf
inc
xchg
out
xchg
or
pop
rcr
in
inc
insb
add
cmc
cmpsl
sbb
iret
sahf
jl
inc
and
push
add
mov
or
iret
hlt
and
mov
add
mov
xchg
cmp
iret
adcl
es
and
xor
fisubl
dec
adc
loop
push
roll
mov
popa
sbb
shl
cmp
jb
sub
test
and
jnp
ficomps
les
sbb
add
dec
mov
mov
mov
cmp
out
xchg
dec
jae
or
xchg
dec
xchg
push
xchg
mov
add
fwait
jb
in
popa
cld
jg
fstpl
dec
xchg
hlt
popf
mov
rcll
jg
fdivs
add
fwait
xchg
sub
test
xor
pop
sub
xchg
xchg
mov
inc
or
push
daa
jo
and
lods
cmp
mov
fs
mov
mov
push
imul
dec
mov
clc
dec
in
test
cld
daa
not
lahf
pop
pop
inc
mov
mov
pop
lret
mov
mov
xchg
cli
popa
or
sbb
xchg
shr
popf
mov
insb
dec
jge
mov
inc
push
fdivrl
test
push
sbb
scas
add
test
and
insl
jmp
lcall
out
xorl
inc
dec
xlat
shlb
add
sahf
dec
jne
xor
cli
pushf
cmpb
sbbl
mov
add
imul
push
xchg
lahf
imul
xor
xor
dec
mov
sub
rcll
jl
mov
push
xchg
orl
push
clc
inc
shl
loope
cmp
repnz
incb
xchg
inc
xchg
es
push
adc
ret
cmp
mov
and
sbb
cmpsb
imul
popa
push
movsl
test
test
arpl
aam
lahf
mov
add
bswap
or
arpl
push
imul
call
dec
popa
and
sub
fs
test
test
dec
lods
pushf
sbb
push
mov
lret
dec
sub
mov
inc
repnz
cmc
mov
int
stc
ficoms
mov
incb
dec
and
cmp
mov
loop
mov
mov
std
popa
dec
std
repz
mov
sti
sahf
xchg
mov
xchg
pop
inc
mov
dec
push
fcoml
jecxz
repz
lock
test
mov
aad
pop
in
popa
into
push
mov
mov
lea
lods
lret
push
adc
mov
les
cmp
cltd
popf
sbb
test
jge
repz
lahf
cmp
xchg
mov
adc
jae
jp
adc
dec
jno
mov
out
test
mov
in
pusha
out
push
push
push
lds
test
add
fnstcw
jg
or
pop
push
nop
cli
insb
testb
pop
mov
cmp
jne
xor
cld
leave
xchg
inc
fdivr
mov
jo
push
out
dec
dec
and
cs
pop
mov
sub
es
cmp
pop
jmp
subb
xchg
in
add
xchg
int3
fabs
sub
mov
addl
push
sarb
aaa
jge
adc
and
jo
or
in
xchg
insl
xchg
aam
loopne
hlt
sub
vaddpd
sub
ficomps
jo
and
addr16
out
inc
stos
or
sub
fisubl
add
je
sbb
adc
lcall
stos
push
icebp
and
or
popa
lret
test
push
adc
sub
inc
xchg
dec
imul
pushf
sub
clc
jle
xchg
mov
int
mov
lret
add
pusha
test
repz
mov
lahf
call
lds
std
sbb
pop
fwait
mov
inc
and
out
and
sar
dec
jp
lcall
cmp
adc
rcrl
mov
hlt
icebp
clc
test
jecxz
xchg
sti
and
stos
leave
idivb
jbe
scas
add
imul
fmuls
cwtl
mov
mov
sub
cs
outsb
mov
ret
or
jo
mov
dec
sahf
ret
int
out
fistpll
cmp
stos
xchg
scas
xchg
std
int3
rcl
maxps
cs
int3
push
inc
pop
jb
mov
inc
pop
loope
jbe
fsts
cmp
cmpsl
lea
mov
mov
imul
pop
lret
add
jp
and
xor
adc
lahf
push
pop
movsl
lret
test
jg
inc
pop
jnp
lods
pop
cmp
cmpsb
sarl
dec
and
push
shll
repnz
mov
cmp
mov
mov
mov
jnp
mov
adc
aad
icebp
daa
imul
push
push
mov
inc
je
iret
loope
sub
cmp
test
sub
push
adc
shll
rorl
push
les
rcl
xchg
popf
jp
push
jg
fbstp
adc
fmuls
popa
das
arpl
push
xchg
jl
xor
push
or
jle
ljmp
sbbb
jb
mov
aaa
ds
std
hlt
add
inc
icebp
jbe
xchg
mov
inc
xor
jb
frstor
divb
inc
dec
aaa
pop
ljmp
add
lcall
popa
xchg
jle
lods
in
idivb
scas
cmpsl
dec
inc
sbb
adc
inc
loope
dec
in
out
dec
sbb
push
lods
fiaddl
inc
addb
test
mov
inc
inc
cmp
jbe
inc
adc
sub
rol
xchg
mov
shlb
popl
sbb
push
je
mov
mov
mov
jp
jle
xor
sar
push
arpl
mov
dec
icebp
popf
mov
mov
adc
mov
add
jo
addb
add
out
fldl
jns
mulb
in
ljmp
adc
or
lahf
dec
mov
test
enter
dec
fsubl
jl
aam
inc
hlt
lea
xchg
dec
ret
and
dec
jecxz
cmp
stc
and
int3
out
xor
xor
push
push
pusha
jge
les
sbb
inc
xchg
dec
cmp
xor
ret
test
cld
cli
bound
or
lods
pop
inc
stc
shll
jl
out
nop
pop
pop
shrl
sbb
fimuls
aam
enter
cmc
in
int3
lods
and
rclb
mov
xchg
movb
pop
add
inc
cmp
push
or
ljmp
xchg
mov
movsl
pop
aad
stos
and
insb
cmp
adc
jle
cmpsb
inc
pushf
nop
mov
xlat
pop
dec
mov
mov
ja
or
loop
insw
xchg
jmp
push
add
xchg
mov
add
test
or
repnz
cmpsb
jle
pop
cwtl
mov
pop
add
in
sbbb
jo
fisubrs
ss
xchg
push
mov
push
or
pop
sbb
les
outsb
testb
outsl
mov
bound
sub
div
or
push
je
rolb
sub
ds
cld
ret
xchg
inc
dec
ret
dec
out
mov
ret
jns
clc
push
sub
mov
lock
call
loopne
inc
adc
cs
ret
bound
sbb
in
out
and
xlat
inc
ss
mov
orl
inc
bound
addr16
out
cwtl
xchg
and
aad
sbb
sub
lock
daa
and
mov
cltd
push
inc
inc
jae
lds
shlb
jle
subl
popa
sbb
ljmp
xchg
sub
sub
sbb
jo
insb
call
sub
add
scas
pop
xor
inc
fwait
cwtl
dec
push
insb
cmp
outsl
xchg
inc
inc
lods
add
add
mulb
stos
xor
adc
sbb
aas
ret
push
inc
lret
scas
loop
mov
aam
out
inc
stc
cmp
xor
mov
and
daa
push
and
inc
push
ss
insl
sub
lock
inc
dec
adc
ret
push
jo
mov
in
clc
cli
add
int3
daa
and
test
dec
pop
lock
nop
lcall
aaa
ret
aam
addr16
fxch
and
lret
xchg
fs
xchg
and
push
fbld
test
icebp
adc
pop
loopne
push
iret
test
scas
sub
pop
adc
push
sub
scas
daa
push
cmc
popf
and
loope
leave
or
ja
pusha
stc
xchg
pop
cmp
call
std
or
les
mull
clc
icebp
push
shl
mov
push
xor
scas
jecxz
popa
push
jns
loope
push
cli
sub
in
adcl
imul
leave
push
xchg
and
test
push
cmpb
dec
pop
pop
insl
test
cmp
aas
sub
inc
je
mov
scas
outsl
enter
pop
pop
fldt
xchg
sub
mov
mov
dec
loopne
arpl
jb
jne
dec
sbb
cltd
push
fidivs
subl
dec
scas
nop
popf
add
cmpsl
push
mov
dec
mov
push
jo
cmp
lahf
cmp
xor
jecxz
cs
orb
cmp
lea
fidivrs
mov
fidivl
pop
lcall
ror
sbbb
cmp
xor
xor
push
rcr
inc
testb
sbb
and
into
add
xlat
shl
int3
fldt
sub
stos
cwtl
mov
mov
xchg
and
add
inc
push
jmp
lods
jnp
loope
xchg
loope
cmpsb
sbb
fcoms
pusha
ds
cmc
jno
sub
xchg
in
xlat
cwtl
jl
arpl
xor
clc
orb
std
jne
scas
and
rcr
push
or
jecxz
stos
fistpl
into
mov
clc
out
mov
fcoms
jp
cmc
mov
sbbl
cmp
push
cmc
sahf
sub
jno
add
xchg
push
sub
push
mov
dec
int
notl
pop
fdivrs
mov
div
pop
int
pop
es
pop
jl
mov
pop
lods
lret
shll
test
hlt
jmp
xchg
js
xlat
test
sarb
cmp
repnz
repz
mov
stos
or
arpl
iret
sub
lea
insl
cs
xchg
xchg
push
lret
adc
push
mov
clc
push
shl
and
imul
add
or
clc
insb
adc
lods
sub
fimull
cld
movsb
ljmp
aas
or
or
lods
sub
fcomi
std
fisubs
add
mov
jecxz
or
jmp
dec
push
nop
sbb
int3
jns
push
mov
pop
je
fs
pop
popa
shll
dec
leave
pop
lods
fldenv
pop
mov
mov
loopne
sarl
shll
ds
mov
sahf
and
out
fwait
popa
arpl
lock
ja
inc
mov
loop
push
shrb
mov
mov
jg
inc
mov
xor
cld
pop
mov
dec
lahf
sbb
and
dec
repz
cmp
and
loopne
cmp
std
lds
push
xchg
push
jl
mov
cmp
addr16
cmpsl
gs
data16
push
xchg
and
je
jb
mov
out
jns
mov
shll
imul
loopne
mov
insl
loopne
stos
scas
mov
push
aas
cmp
jae
and
lcall
loopne
adc
lcall
fwait
pop
into
cmp
cmpsl
jl
pusha
xchg
mov
pop
scas
and
pushf
jnp
add
pushf
mov
dec
sti
xchg
jnp
outsl
andb
loope
pop
adc
push
imul
push
cmc
xor
cs
sub
aad
add
lahf
xor
pop
xchg
in
mov
pop
lds
jno
mov
rcr
fidivs
push
pop
jns
or
or
orl
bound
jp
fsubrs
jae
mov
mov
xor
out
jge
stos
dec
sub
sbb
shr
xor
cmpsl
pusha
xor
xchg
popf
mov
ret
cmp
push
inc
dec
xlat
jmp
popa
inc
adc
mov
mov
sbb
add
cltd
packsswb
stos
cwtl
aam
lret
mov
mov
dec
cmp
iret
outsb
mov
les
and
jno
jbe
and
movsl
imul
out
inc
cltd
icebp
ret
inc
add
lods
imul
add
cld
popf
rclb
mov
in
mov
daa
scas
repz
push
mov
pop
or
pop
sbb
mov
aam
mov
cmp
dec
test
cmp
negb
mov
cli
inc
add
adc
imul
dec
mov
je
mov
push
push
repz
mov
cwtl
mov
repz
pop
mov
and
mov
js
out
aad
jecxz
and
mov
inc
scas
fdivl
fdivr
stc
adc
les
add
aas
lods
inc
out
jno
mov
bnd
cld
jb
add
and
je
push
dec
int3
xlat
cld
jb
ja
pop
add
dec
mov
jmp
das
inc
adcb
mov
mov
call
cmp
in
fwait
test
xlat
jp
jg
jp
test
aam
or
mov
dec
lods
loope
sbb
push
ljmp
xchg
jecxz
push
out
inc
aaa
fiadds
aad
sbb
dec
repz
jmp
arpl
push
daa
cmc
cmp
repnz
xchg
mov
in
lock
xchg
xorl
popa
das
and
adc
inc
push
cmp
cmp
bswap
andb
jns
mov
lcall
mov
sub
ss
xchg
push
mov
xchg
cwtl
arpl
xchg
push
pop
xor
pop
jmp
sub
sbb
pushf
lret
lea
out
test
daa
in
pop
subl
mov
shlb
insb
sub
mov
mov
mov
imul
adc
gs
inc
inc
mov
loopne
sub
sub
ret
fildll
mov
imul
dec
add
dec
movsl
fidivrs
adc
dec
jg
aad
pop
movsb
fcoms
sti
mov
xchg
jns
cmp
pop
divb
xchg
xchg
ret
cmpl
out
or
adc
popa
push
cmp
cli
mov
xchg
mov
xchg
jle
stos
xor
scas
cli
inc
add
xlat
wbinvd
mov
shrb
inc
xor
jno
mov
or
jge
sbb
fiaddl
xchg
popf
jmp
popl
sti
inc
and
loopne
xor
mov
outsb
mov
sti
lods
aas
out
lret
push
jno
ds
dec
ss
sub
push
sahf
pop
aaa
mov
subb
add
pop
mov
sub
cmp
cmp
dec
in
sub
cmpsb
dec
sbb
sub
jmp
cmp
cmpsl
cmpl
adc
jge
dec
cmp
inc
lahf
cmp
jmp
mov
xor
pop
sti
adc
ljmp
insb
cmp
jno
jecxz
daa
push
sbb
or
cmp
and
fisubrl
dec
enter
mov
mov
hlt
gs
cli
jmp
fsub
mov
imul
lods
mov
data16
fs
pop
aad
cmp
scas
mov
in
jbe
out
std
ds
inc
push
inc
dec
out
in
xor
add
das
jb
xchg
test
dec
xor
push
jg
frstor
sub
adc
jno
mov
imulb
pop
push
mov
arpl
xchg
push
cmpsb
xchg
cmp
in
jg
ds
push
int
adc
movsl
xchg
mov
adc
mov
inc
ficompl
flds
iret
jle
outsl
ss
in
and
nop
out
mov
mov
popl
sar
sahf
dec
jge
pop
xchg
inc
mov
ljmp
or
aam
jnp
push
jmp
stc
das
or
hlt
mov
pop
inc
pop
mov
add
nop
das
int
pop
adc
sar
stc
jg
cmp
pop
push
push
xor
fiadds
push
xchg
addb
fcomp
cmpsl
jmp
push
fstpt
movl
ja
sub
cmpsl
dec
insl
popf
mov
jp
shlb
insb
mov
push
cmp
lahf
xor
std
shrl
ret
cmp
lea
mov
mov
faddp
lods
push
scas
pop
dec
mov
mov
inc
or
aad
jno
and
lods
fadds
stc
xlat
pop
clc
mov
aam
mov
clc
subl
lds
mov
add
xchg
xor
negl
inc
test
in
les
sub
cmpsl
mov
xchg
pop
push
mov
enter
les
xorl
mov
mov
jp
mov
dec
es
stos
or
pushl
aam
scas
fsubs
stos
mov
lock
adc
nop
and
add
inc
pop
push
mov
cmp
rclb
add
roll
sub
or
sbb
mov
shl
or
jb
stc
ds
data16
add
out
gs
scas
sbb
add
or
orb
xchg
test
lock
jge
movsb
mov
adc
outsl
inc
lcall
into
jne
fsubs
test
pop
testl
sub
outsb
and
popl
dec
js
std
cmpsl
xlat
cltd
dec
nop
sbb
lea
add
sub
pop
daa
negb
dec
popf
imul
sub
pop
imul
lods
adc
dec
mov
sub
rcrl
ja
pop
xchg
dec
xchg
mov
loope
sti
xor
fisubl
in
sub
mov
fisubs
mov
pusha
pop
dec
faddl
and
andb
aad
jnp
shll
mov
adc
mov
addl
loopne
xlat
aas
pop
lret
jb
mov
stos
jge
enter
xchg
jo
mov
mov
mov
mov
pop
jae
stos
lret
xchg
mov
js
lret
adc
cmpsl
ss
sbb
jne
sub
jp
shll
leave
xchg
pop
mov
mov
loop
setp
sarb
inc
xchg
xchg
and
repnz
jp
xchg
mov
popf
out
dec
movsb
adcl
cli
cmp
outsl
push
mov
xchg
push
lret
fs
pop
xchg
mov
jle
and
lahf
push
jb
out
pop
repz
dec
pop
aaa
push
mov
push
push
adc
dec
dec
enter
jmp
xor
andl
mov
addb
and
mov
ret
fsubrl
or
outsl
add
hlt
inc
ds
cmp
push
mov
stos
fdivr
xchg
mov
subb
add
push
fmulp
ds
push
push
popf
pop
rcr
inc
sbb
mov
lret
rcrb
xor
cwtl
pop
ljmp
add
mov
shll
insl
lods
inc
jns
lods
mov
inc
pusha
ret
or
imull
add
jg
or
imul
bound
out
xchg
xchg
mov
dec
repnz
ja
and
push
mov
pop
mov
lods
jge
les
int
mov
ret
push
push
or
shll
out
cmp
sbb
mov
push
dec
mov
jnp
push
mov
inc
inc
add
pop
sarb
xchg
cmp
sbb
push
mov
mov
push
inc
sarl
mov
test
fcomi
xor
mov
lahf
stos
cmp
cmp
adcl
adcb
stc
pop
cmp
xor
lods
bound
lock
dec
shr
stos
repz
mov
add
xchg
lcall
int
jbe
cmp
inc
mov
es
cbtw
movsl
movsl
inc
lds
or
ja
lret
test
rolb
pop
mov
mov
enter
xchg
popf
mov
fucomp
pop
sub
sbb
stos
insl
inc
mov
popf
fbld
and
or
mov
nop
pop
jle
cld
mov
cli
out
aaa
add
sbbl
dec
push
and
outsl
cmp
mov
pop
cmp
xchg
nop
sarb
xchg
mov
jecxz
cmpsb
fisttpl
jae
into
sbb
ret
nop
roll
shrl
and
and
dec
cwtl
outsb
inc
mov
leave
sub
mov
negb
notb
loop
sbb
adc
out
les
enter
push
and
mov
mov
xorl
push
adc
push
int3
aaa
fs
push
inc
fisubrs
ds
xchg
xor
dec
adc
rcll
std
adc
imul
ja
jb
sub
cld
pop
insl
xor
push
mov
push
add
ja
jp
pop
test
leave
cmpsl
push
push
dec
fsubrl
cmpsb
int
int
push
aaa
dec
in
inc
sub
lds
scas
shlb
ret
lret
lods
mov
or
sub
pop
xor
sbb
mov
out
xor
enter
orb
ret
mov
cmp
push
inc
sub
daa
adc
leave
inc
adc
fldcw
sahf
ret
cltd
sbb
fnstenv
xorl
ljmp
mov
orb
push
mov
jmp
add
sub
sub
adc
push
xor
repz
xor
mov
test
fistps
push
and
insl
pop
leave
scas
ret
sbb
les
lret
cmp
mov
jp
dec
xchg
adc
daa
rcrl
mov
cmp
or
stos
das
pop
sbb
dec
pop
lret
mov
dec
mov
mov
sub
movsl
stos
negl
dec
sub
xchg
pop
mov
dec
enter
jmp
push
or
adc
and
xchg
mov
jnp
sti
lret
aad
int
cmp
xor
addr16
mov
cmpsb
jo
sti
dec
lret
shll
fisubs
call
sbb
sub
loope
fwait
adc
mov
xor
insb
xlat
loop
ja
imul
and
mov
cld
es
mov
in
into
and
jge
ja
jo
stos
sub
and
push
cmpsl
dec
gs
xchg
cmp
insl
add
jo
cmp
push
push
iret
outsb
mov
mov
mov
out
pop
jge
mov
test
mov
ja
mov
mov
push
mov
inc
out
scas
or
mov
imul
dec
and
into
dec
mov
dec
xlat
test
sbbl
cmp
inc
pop
sbb
inc
ret
cmpsb
cltd
cld
inc
arpl
sub
jge
cld
xor
dec
dec
dec
pop
nop
sub
xor
xor
mov
add
test
xchg
mov
jmp
out
test
fmul
jae
adc
mov
test
xor
stos
mov
mov
dec
rcrl
cmp
add
sub
mov
rcr
mov
push
rorl
adc
dec
push
xchg
lret
popa
int
and
daa
xor
in
mov
jge,pt
or
daa
test
jne
hlt
push
mov
inc
ficompl
call
cld
mov
dec
add
mov
sub
ret
mov
outsl
lahf
mov
js
pop
cmp
cmp
les
push
insb
fstpt
push
test
daa
adc
lods
movsl
idiv
mov
nop
aad
lods
and
nop
cmp
stos
cli
push
imul
inc
mov
movsb
xor
call
adc
ficoml
mov
out
dec
adc
cmp
movsb
insl
das
arpl
imul
cmp
push
loope
cld
add
dec
push
ja
ror
shll
push
sbb
js
cmp
sub
jbe
loop
ret
push
xor
test
dec
mov
out
jp
bound
lcall
orb
xchg
jb
pop
imul
jbe
inc
gs
lret
call
jno
imul
das
jae
jg
faddp
dec
pop
insl
pop
xor
ja
xchg
rclb
cs
cmp
fs
adc
xor
int
push
std
cmp
data16
into
push
dec
outsl
cltd
mov
xor
push
imul
xor
inc
testb
lea
and
pushf
imull
cmp
push
mov
push
ljmp
outsl
push
xlat
cltd
jmp
insl
or
add
mov
sahf
test
call
je
fstps
enter
sub
cmc
adc
fnstsw
test
jnp
loope
or
incb
mov
or
or
mov
dec
cmp
inc
push
cwtl
jb
out
sub
mov
xchg
and
mov
aad
or
clc
les
lods
mov
adc
into
sbb
pop
mov
or
jbe
inc
je
lret
into
data16
mov
or
stc
mov
das
mov
mov
iret
or
inc
ljmp
std
test
xchg
popa
into
movsb
lret
jecxz
push
out
imul
xor
insl
ljmp
cwtl
lea
dec
in
add
cmp
cmp
push
push
faddl
sub
cwtl
lret
or
sub
xlat
push
push
out
mov
cmpsb
mov
and
int
jno
ljmp
xlat
aad
ret
mov
out
mov
or
daa
fidivl
iret
add
jmp
inc
push
push
jg
aaa
cmc
aas
lret
ficomps
pop
sbb
and
xchg
dec
cmp
mov
loopne
mov
xchg
xlat
dec
scas
push
pop
xor
pop
lods
mov
scas
aaa
shlb
insb
sub
sub
pop
jne
mov
sub
mov
jl
mov
pop
pop
pop
xchg
or
ja
jge
sbb
imul
sub
cmp
sbb
dec
jmp
cmc
popf
mov
xor
dec
jae
or
xchg
sbb
xchg
jg
lds
mov
pushf
xor
fldcw
loopne
rcrl
es
repnz
rclb
sbbb
jl
mov
and
movsl
jmp
test
ret
pusha
push
adc
pop
pop
add
cs
dec
inc
adc
shlb
xchg
cmp
jnp
pop
pop
dec
push
inc
mov
or
pop
dec
andb
mov
cmp
jl
loop
test
mov
mov
sbb
push
dec
mov
mov
cmpb
jle
mov
pop
xor
insb
pop
repnz
arpl
sar
jle
arpl
pop
jb
pop
ljmp
lock
sub
inc
test
dec
std
test
jbe
jno
sub
int3
lods
cmc
or
out
mov
adcb
adc
xor
add
mov
cs
adc
mov
fdivr
xchg
outsb
aad
xchg
stc
test
pushf
push
mov
lods
call
push
cld
sti
mov
add
in
push
insl
adc
sbb
in
shr
arpl
inc
xchg
pmulhuw
dec
sbb
jo
sti
jbe
adc
inc
cmc
aaa
mov
idivl
fldl
test
jbe
xlat
ljmp
mov
es
mov
xchg
xlat
das
dec
test
add
jnp
cs
pop
sarl
inc
insl
mov
ret
push
rorb
add
cmp
rolb
push
mov
imul
inc
pop
ret
fnsave
jge
and
pop
push
dec
hlt
rclb
iret
jb
sub
shlb
adc
std
add
sti
je
and
jne
sub
hlt
sahf
dec
js
call
int3
cmp
shlb
mov
pop
dec
in
sti
ljmp
push
fwait
or
lret
int3
cltd
ret
repnz
push
shll
sub
insb
inc
lods
gs
mov
mov
pop
movsb
adc
lea
push
stos
bnd
aad
add
clc
in
scas
leave
lahf
stos
push
dec
lods
mov
push
addb
and
adc
enter
call
out
mov
shlb
lods
push
push
mov
insb
pusha
sub
xchg
mov
pop
lcall
mov
lcall
adc
xchg
fists
mov
outsb
shrl
clc
cmc
lea
imul
xchg
test
pop
aad
jge
mov
dec
mov
shrl
cmpb
in
xor
mov
xchg
stos
push
sbb
lods
push
jge
push
in
push
adc
jmp
pop
cmp
lods
xchg
gs
xchg
cmpsl
and
int
and
cli
fs
int3
jbe
decb
jno
mov
ficompl
xchg
scas
in
testl
dec
out
and
xchg
mulb
pop
xlat
xchg
shrb
inc
sbb
pushl
mov
shll
cli
cmp
push
jnp
fwait
mov
inc
lahf
aad
jbe
scas
xchg
pop
gs
xor
xchg
add
xor
repnz
mov
and
mov
cltd
sbb
or
dec
movsb
nop
cmpsl
mov
cmpsb
mov
or
hlt
fwait
dec
pop
inc
push
fmulp
sub
ds
stos
xor
push
addr16
push
adc
inc
or
xchg
fisubl
sbb
sub
jb
inc
out
insl
xchg
mov
outsl
add
fsubrs
fcomp
sarl
inc
inc
in
or
fadds
fisttpll
xchg
das
add
mov
stos
or
lahf
push
adc
jne
adc
mov
mov
mov
xchg
sub
push
jne
ret
into
das
sub
push
sub
and
imul
mov
adc
popf
sbb
xchg
loop
scas
cmp
xor
pop
sti
push
mov
xchg
sbb
cs
imul
push
scas
xchg
dec
pop
movsb
jnp
aaa
push
scas
enter
sbb
add
pop
in
je
aas
outsb
mov
lret
repnz
fadd
cwtl
add
push
adc
add
pop
add
adcl
je
test
xchg
aad
add
insl
iret
int
sbb
adc
call
sti
inc
test
push
mov
movsb
sbb
push
je
mov
adc
iret
pop
or
lahf
pop
aaa
mov
xchg
cmpb
add
stos
jmp
cmp
icebp
mov
inc
push
je
push
and
mov
push
iret
iret
jp
leave
ret
push
into
cmp
adc
jae
or
dec
adc
js
notl
pop
iret
imul
push
mov
cltd
push
push
and
sahf
mov
xrelease
daa
jbe
xor
in
and
pop
dec
inc
leave
cld
insl
pusha
sub
mov
pop
nop
fwait
dec
imul
cmpsl
sub
xor
data16
fmull
or
rcl
hlt
leave
cmp
dec
mov
xorl
xchg
hlt
insl
mov
bound
gs
in
mov
cmpsl
stos
xor
cmc
int
push
xor
jmp
sub
es
dec
and
loope
dec
cmpl
sub
ja
jp
jmp
mov
in
popa
inc
and
bnd
cmp
inc
cmp
jle
fdivs
dec
inc
lret
xchg
jge
fbstp
rclb
insl
lods
sarb
cmp
pop
aam
lret
adc
or
xchg
fwait
dec
mov
lret
addr16
push
xchg
movsbl
jo
mov
iret
mov
out
xchg
popa
pusha
mov
sbb
mov
cli
xchg
mov
mov
test
cmp
cmp
add
popa
lret
xor
pop
mov
dec
shlb
ror
mov
aas
sarl
adc
lods
adc
and
cs
jge
inc
mov
inc
mov
or
xor
and
mov
cmpsb
loop
loopne
dec
pop
cmp
add
push
loopne
sub
mov
aam
xchg
mov
sbbb
jp
in
roll
mov
sub
push
mov
call
imul
cmc
inc
in
adc
cmp
in
lea
inc
cmp
loopne
inc
and
or
leave
bswap
inc
lds
insl
adc
adc
xor
rcr
test
pop
jno
call
sbb
fcoml
sbbl
push
popa
les
xchg
mov
mov
inc
fadds
into
mov
jmp
jb
jmp
mov
sbb
jae
mov
ljmp
pop
test
mov
lret
les
xor
or
in
jne
adc
aad
mov
cmp
pop
aad
std
and
inc
mov
lahf
loopne
mov
inc
dec
mov
add
addr16
sti
int
ficoms
mov
ljmp
sarl
mov
jle
adc
xor
pop
pop
loopne
lea
call
push
mov
cmp
es
in
mov
adc
test
mov
or
jle
adc
xor
ret
jle
dec
stc
push
push
fisubrs
sub
stos
xor
movsl
aad
jle
inc
xchg
stos
add
lock
push
sbb
cmpsb
and
and
xchg
gs
jmp
or
dec
mov
jae
rcrl
in
popf
pop
fidivs
inc
fwait
and
xchg
or
subl
cltd
test
sbbb
sbb
and
insl
imul
mov
cli
mov
mov
clc
hlt
and
inc
icebp
push
dec
mov
fmul
test
pushf
arpl
adc
popa
idivl
fs
das
jle
xor
mov
std
xchg
jne
call
aad
cmp
jg
push
cmpsb
jne
mov
mov
and
xchg
inc
mov
sub
aaa
rol
xor
js
gs
repz
ds
scas
pop
lea
and
addl
dec
iret
push
add
mov
xchg
insb
xor
or
icebp
dec
dec
push
xlat
roll
push
xor
adc
imul
es
pop
cmp
mov
cmp
fimuls
mov
pmaddwd
pushf
gs
push
ja
jmp
into
fistps
push
in
packuswb
test
or
add
push
cmp
push
das
mov
test
cmp
in
lods
loopne
cmp
jg
fwait
inc
fs
int
push
sbb
pop
mov
mov
xchg
sub
cld
stos
in
mov
repnz
les
pop
mov
jecxz
sbbl
add
out
sbb
inc
sub
or
push
pop
sbb
xlat
in
shr
jnp
pop
push
adc
insl
cmc
and
shlb
jbe
xor
xchg
mov
ret
inc
fdivp
dec
inc
pop
sub
test
fstp
push
movb
push
lds
lock
pop
loop
sarl
lea
fildll
testb
loop
int3
push
jmp
aas
je
stos
jecxz
lret
imul
lea
xchg
xor
sbb
xor
mov
push
rcrb
jno
sti
xor
ja
xlat
mov
jo
pop
sub
mov
jmp
les
add
pop
lds
in
in
mov
and
test
lods
lret
fsubs
jp
je
xor
and
into
fnstsw
adc
inc
lods
add
push
or
jne
ljmp
lahf
inc
dec
dec
mov
inc
fisttps
inc
adc
jbe
sub
nop
cmpsl
arpl
mov
aam
cltd
pop
adcl
mov
mov
xchg
stc
mov
or
mov
adc
icebp
push
or
insb
pop
push
idivb
js
ret
add
out
shlb
pushf
push
jp
xor
xor
loope
movsl
sbb
sub
mov
cmp
mov
sub
mov
mov
test
add
pop
clc
mov
mov
cmp
xor
sbb
ret
cli
push
xor
aam
mov
sub
dec
cmp
and
shrd
popf
jno
shll
xchg
mov
mov
out
ss
aaa
ret
test
cmpsb
adc
shl
bound
sbb
cmpsb
xchg
aaa
jae
stc
outsb
pop
fucomp
fstps
dec
xor
vptestmd
xor
gs
cmc
push
repnz
ror
sub
sbb
push
jne
cmpsb
out
adc
pushl
mov
loopne
cmpb
daa
arpl
and
inc
dec
pop
andb
cmp
sub
xchg
cmp
inc
push
jno
or
pop
repz
lea
pushf
je
nop
aad
cld
subl
or
not
out
add
ja
pop
outsl
inc
lret
sbb
push
sbb
cmp
insb
cs
adc
call
stos
pop
adc
roll
xor
sub
movsl
in
inc
pop
inc
jnp
jno
xchg
lods
nop
push
xchg
dec
scas
xor
in
mov
roll
mov
lods
loopne
insl
mov
inc
xor
xchg
push
pop
aam
lcall
std
sub
fimull
fistpl
mov
cmp
pop
or
pushf
mov
sbb
ds
push
xor
aad
xchg
sbb
add
ret
stos
add
cmp
jns
jb
mov
add
test
dec
inc
mov
mov
push
clc
movsb
cmp
dec
repnz
les
push
pop
call
ljmp
push
fsubl
pop
mov
mov
fs
outsl
popa
movsb
loope
fldcw
test
add
mov
inc
and
push
dec
cmpsb
stc
mov
xor
jge
shll
push
xchg
ljmp
sub
xor
dec
sub
cmp
push
adcl
jmp
push
aaa
clc
imul
ret
stos
xchg
xchg
lret
adc
insl
cmp
cmp
jl
lahf
sbb
stos
mov
adc
dec
push
and
adc
jno
mov
in
fnstsw
xor
sub
cmpsl
cmc
mov
ret
xchg
inc
sbb
movsb
pop
scas
mov
xchg
les
adc
andl
dec
testl
dec
xchg
xchg
xchg
pop
cmp
cmp
push
je
cmpsb
pop
push
stc
out
mov
js
push
ret
sbb
fnstenv
cmp
das
push
ljmp
or
loope
cmp
cmpsb
pop
stos
jb
sub
jo
stos
push
adc
mov
and
ljmp
jge
fwait
cmp
push
lret
xor
push
dec
mov
fs
cmp
sub
idivl
add
stos
stos
xchg
and
xchg
or
sub
or
sub
xchg
out
cld
stc
idivl
icebp
or
sbb
sub
inc
xchg
push
mov
icebp
in
jp
inc
sarl
in
sub
lds
jb
bound
fdivrl
fwait
jmp
inc
pop
loope
push
push
xchg
mov
aam
stos
dec
xchg
mov
rcrb
sub
and
aas
sbb
loope
jno
stc
rclb
xchg
xchg
push
aam
add
cmp
pop
ret
cmp
and
and
subb
adc
mov
and
or
iret
insl
inc
or
inc
or
or
shrb
cmc
mov
pop
dec
lds
pop
mov
rcrl
cmp
insl
add
loopne
dec
fcoms
test
push
mov
push
and
mov
shlb
int
jg
inc
xor
mov
pop
ds
hlt
dec
loope
sbb
mov
pop
jne
jmp
not
push
xchg
xor
out
sbb
gs
and
repnz
shlb
mov
cmp
inc
cwtl
xor
adc
callw
xor
insb
jge
mov
mov
pop
scas
ljmp
fistpll
movsb
push
xor
xchg
sbb
test
imul
fdivrl
dec
jg
mov
cmp
loopne
sub
cltd
xlat
test
les
repz
popf
inc
imul
ss
jbe
dec
insb
js
rcrl
faddl
pusha
stc
mov
jmp
inc
lret
repnz
adc
adc
gs
ret
or
push
imul
sbbl
ret
cwtl
lret
xchg
rclb
jo
std
xor
push
fstpl
stc
insb
std
int
aas
je
inc
jns
pop
fs
inc
pop
int
dec
push
mov
into
push
or
sarb
cmp
add
push
dec
jnp
decl
cli
inc
jnp
cs
adc
sub
sti
sbb
pushf
mov
sbb
jbe
hlt
pop
or
jmp
dec
subb
in
shrl
sub
xor
sbb
push
lahf
add
push
addl
add
mov
sub
mov
fld
pop
add
addb
push
insl
xor
shl
fistl
cli
mov
test
xchg
inc
movsl
mov
dec
cltd
sbb
stos
push
mov
fadd
push
xor
push
cltd
mov
sbb
push
out
addr16
mov
stc
add
lcall
mov
mov
pushf
arpl
sub
and
jno
mov
pop
lock
xchg
addr16
outsb
cli
and
ja
xchg
pop
fldcw
push
lahf
mov
adc
cli
stc
fmull
xchg
xlat
xlat
inc
ror
dec
shlb
je
inc
pop
dec
push
jb
ror
int
leave
mov
pop
or
outsb
xor
jg
dec
ljmp
sub
nop
addr16
adc
inc
pop
lea
sarl
mov
push
sub
jp
cld
dec
outsl
sub
in
jecxz
cli
js
add
arpl
icebp
jb
add
push
xchg
ljmp
sbb
addr16
je
and
insb
push
mov
mov
je
jne,pn
pop
push
repnz
jnp
rcl
or
dec
je
les
jnp
dec
nop
ljmp
ljmp
mov
or
push
aam
popl
adc
sub
addw
scas
subl
mul
fisubrs
leave
or
ljmp
sarl
xlat
mov
cli
js
xor
mov
sub
add
mov
mov
sub
push
mov
lret
icebp
loope
imul
sti
jnp
insb
subl
dec
xorl
hlt
cmp
push
imul
pop
outsb
dec
xchg
ljmp
scas
ljmp
add
movsl
mul
ret
xchg
lret
jge
pop
insl
xor
push
das
pusha
add
std
popa
push
fmul
and
call
shrl
add
out
pop
inc
jecxz
popf
mov
test
cs
std
nop
stos
ja
imul
jno
mov
add
adc
arpl
cmp
push
cmp
ret
cmp
adc
pop
jno
sahf
rclb
push
les
scas
shll
jg
sbb
xchg
pop
jno
call
sub
into
pop
flds
int
push
inc
repz
fcoml
icebp
pop
cli
in
jp
mov
in
inc
and
lcall
pop
popa
shrb
loope
jle
test
dec
in
add
adc
test
data16
jnp
in
jl
out
popf
pop
xchg
mov
jnp
pop
lcall
push
and
scas
mov
xor
scas
out
and
sbb
fcmovnbe
jl,pt
dec
js
dec
sahf
pop
movsl
aas
mov
sbb
jae
frstor
lea
andb
subl
cmp
call
out
imul
push
xorb
mov
mov
lock
cltd
dec
aas
adc
insb
lods
mov
lret
aam
and
stos
sbb
jle
imul
jnp
sti
add
mov
mov
mov
cwtl
sbb
ds
bswap
mov
cld
cmc
nop
jne
pop
daa
mov
dec
and
or
arpl
push
jns
inc
or
ljmp
xor
ret
sub
into
cwtl
adc
mov
xor
and
imul
in
push
mov
sbb
notl
mov
ss
inc
lock
mov
int
mov
cld
fcomip
mov
leave
jb
jbe
arpl
cmp
adc
xchg
push
xchg
imul
jle
in
int
ljmp
js
or
and
lea
push
mov
mov
ljmp
mov
add
stc
and
jbe
gs
dec
pop
scas
jmp
jp
aad
adc
mov
push
pop
dec
mov
mov
sbb
mov
sbb
jnp,pt
pop
xor
fidivs
sub
popf
adc
movsl
scas
push
loopne
push
or
jae
fistps
out
mov
xor
or
fisubl
popa
mov
jbe
adc
mov
inc
pop
pop
mov
or
xchg
xor
sub
cmp
je
add
xor
dec
ljmp
faddp
sti
scas
fsub
cmp
pushf
or
fdivrl
lret
lret
lea
and
add
out
mov
xchg
sub
daa
loope
lods
pop
clc
pop
rol
dec
outsl
xchg
push
lret
fidivl
sahf
push
fsub
mov
insb
shlb
movsl
or
sub
mov
fstpl
les
mov
mov
xor
adc
jmp
in
mov
lcall
lock
in
aad
add
mov
lret
dec
fwait
lods
into
push
daa
call
repnz
and
ret
sahf
add
fwait
cmp
movsb
stos
andl
or
sbb
pop
mov
ret
nop
insl
jmp
test
sti
mov
js
mov
loope
int
mov
jnp
push
jno
cmp
sub
fprem
mov
lds
fucomi
or
and
hlt
dec
outsb
pop
stos
lods
xchg
jne
jbe
popf
adc
aad
in
pop
sbb
fnstenv
lret
pop
pop
push
imul
push
cmpsl
inc
cli
sbb
out
rolb
vpsubw
mulb
sub
push
dec
cltd
dec
mov
es
inc
dec
cmp
inc
ljmp
push
sbb
cs
aam
jb
jns
test
xlat
mov
stc
out
sub
imull
sbb
and
pushf
outsl
mov
lcall
sbbb
in
pusha
xlat
cmp
and
out
push
dec
push
xlat
call
add
xor
daa
shll
jl
fs
dec
gs
pop
cltd
int
mov
negl
out
sub
data16
inc
xor
mov
rcl
jge
clc
inc
cmp
mov
cs
sub
cld
je
inc
jp
lds
jp
or
add
push
inc
stc
gs
pop
imul
outsl
adc
outsl
dec
mov
data16
fimull
and
imulb
subl
and
push
dec
lret
ficoml
dec
jb
jo
daa
mov
fldcw
xor
jp
in
or
fwait
sub
push
inc
aaa
sbb
cmc
fcmovbe
mov
dec
ret
inc
dec
das
insb
and
fstpl
cwtl
xchg
adc
sub
addr16
sahf
xchg
fwait
pusha
cmpsb
std
les
jmp
mov
loop
je
xchg
xor
lret
add
sub
pop
xchg
inc
insl
cs
and
sub
xchg
sub
cmpsl
int3
xor
and
out
sub
stc
cmp
jb
std
icebp
xchg
ss
cmp
lea
and
mov
divl
leave
jns
cmp
lock
push
pop
pop
aaa
in
xchg
dec
add
sub
in
into
std
insl
inc
mov
jbe
les
jne
into
lods
xchg
pop
mov
nop
inc
add
mov
outsl
std
sub
outsl
in
cmp
sbb
std
dec
mov
aad
cmp
jl
mov
and
dec
loop
jno
add
xchg
adc
enter
test
ja
or
sub
jae
xor
sub
add
movsl
pop
dec
ficoml
shr
lock
in
cmp
jp
aaa
pop
or
mov
push
fdivrl
jb
shlb
add
jbe
push
inc
pop
je
or
js
hlt
jns
cmpl
shl
test
inc
test
mov
dec
xchg
mov
push
std
daa
int
sbb
jecxz
mov
repnz
jle
int
cmp
sti
xchg
outsl
jb
outsb
les
dec
subl
into
sub
push
sub
movsl
push
outsb
fsubr
dec
fcoml
lcall
in
das
sub
mov
clc
aas
push
dec
jp
scas
data16
cmc
es
in
mov
xchg
xor
mov
inc
test
and
mov
sbb
jecxz
nop
push
ss
pop
pop
sub
add
push
mov
bsr
bound
lds
ss
scas
cs
movsb
cwtl
xchg
aam
sbb
jo
xchg
mov
push
push
add
and
setns
push
and
mov
sub
dec
pop
pop
sub
nop
mov
in
lds
push
data16
push
negl
gs
faddl
mov
xor
jne
inc
pop
hlt
mov
add
aad
jnp
inc
inc
cs
xor
call
es
stc
jl
add
std
cmp
js
jecxz
testb
add
or
push
sarb
xor
sbb
mov
enter
push
inc
stos
mov
pop
out
mov
das
adc
adc
mov
bound
mov
ljmp
add
push
lcall
mov
fsubrs
or
movsl
and
in
loopne
lret
dec
sbb
dec
ficompl
sub
sbb
inc
adc
rolb
push
sti
sub
or
add
out
and
mov
mov
add
xchg
fnstcw
adc
xchg
mov
rcrl
adc
push
xchg
repnz
xchg
pop
popa
adc
gs
outsb
clc
int
cld
mov
pop
push
in
or
sub
sbb
por
bound
xchg
daa
and
xchg
imul
sub
in
mov
mov
jg
pop
ret
xchg
push
or
push
mov
testb
into
inc
jg
and
xchg
push
mov
xchg
jge
test
subb
mov
sub
movsl
xchg
and
pop
inc
repz
js
shr
inc
mov
push
and
dec
in
mov
xchg
testl
xor
mov
add
xchg
push
push
lcall
xchg
out
add
fbld
push
pop
aas
inc
dec
add
push
in
jle
jo
cmp
add
mov
pop
jg
pop
jne
add
cmc
and
push
hlt
sub
adc
das
hlt
adc
arpl
and
jb
fs
and
push
dec
and
dec
dec
sub
aad
add
movsl
jle
dec
aam
repnz
pop
pop
cltd
push
cmc
pop
adc
mov
cwtl
push
mov
sbb
cli
xor
clc
cmovl
cmp
aad
rolb
xchg
loopne
mov
add
movsb
and
sbb
mov
loopne
aad
xchg
in
pop
insl
jo
mov
jmp
jg
sbb
inc
push
arpl
jbe
pop
sbb
and
popa
adc
popf
aad
mov
cltd
ret
fwait
ss
shrl
push
in
add
xchg
jge
popf
lods
pop
sbb
mov
aaa
sbb
lods
mov
xor
pop
popa
push
cmpb
js
xchg
push
sbb
adc
cld
jmp
outsb
rol
ss
addr16
cmc
push
push
outsl
jno
stos
pop
pop
dec
mov
pop
sahf
ret
push
cmp
jecxz
adc
pushf
mov
lods
push
fs
or
in
push
sub
add
lea
sti
into
xchg
pop
xchg
and
jl
hlt
jae
cmc
cmp
movsl
pop
test
push
mov
dec
pop
push
in
dec
sarb
sub
out
jnp
mov
inc
mov
in
cmc
les
ljmp
mov
fs
movsl
mov
jg
add
push
fwait
xchg
das
cmp
xor
add
insl
lock
pushf
test
or
inc
jne
loopne
mov
mov
xchg
in
insl
mov
notb
out
sbb
insb
rorb
test
push
mov
pop
xor
dec
mov
nop
fwait
add
dec
js
cltd
lods
xchg
cld
xor
sub
icebp
mov
pop
push
movsl
adc
xchg
and
jp
mov
aas
movsb
pop
outsl
sbbb
shlb
inc
push
sbb
mov
xchg
popl
mov
sub
mov
cmpsb
pushf
push
iret
les
jns
fucomi
sbb
xor
sub
cmp
jmp
movsl
mov
inc
inc
fwait
dec
xchg
test
repz
outsb
test
mov
jmp
xor
fidivs
ljmp
imul
mov
and
push
xor
cs
push
or
dec
dec
sbb
jecxz
xchg
xor
mov
loope
mov
dec
fwait
pop
jnp
hlt
subl
rorb
mov
inc
pusha
fmuls
xor
and
outsb
icebp
jnp
jae
pop
shrl
cs
cs
push
push
lcall
and
into
cmp
xchg
shr
cwtl
out
dec
sti
dec
jecxz
xlat
lcall
or
and
imull
pop
pushf
enter
jae
outsb
push
jmp
cmc
adc
mov
jmp
roll
and
adc
mull
dec
mov
cmc
add
lds
and
inc
ret
leave
pop
js
out
enter
sahf
push
cmp
push
mov
iret
mov
data16
js
aaa
std
popa
lahf
out
cmpb
mov
outsl
xchg
je
loopne
lods
cmp
inc
clc
int
data16
or
and
pop
test
push
mov
xchg
dec
cmp
sub
stc
xchg
and
cmp
iret
leave
and
pop
jns
pop
pop
hlt
js
ljmp
add
pusha
pop
add
push
cmp
js
jg
jne
fimull
pop
pop
xchg
sub
repnz
or
test
xor
leave
mov
push
loop
mov
imul
cmp
stc
mov
das
jne
test
pop
leave
fiadds
repz
fsubrl
pusha
inc
inc
adc
sub
push
xchg
xchg
outsb
mov
int3
add
sub
into
and
add
lcall
icebp
or
sbb
ret
dec
insb
pop
fdivp
shll
into
lfs
push
lret
adc
enter
and
mov
add
jmp
mov
mov
pop
jl
dec
mov
sub
repnz
mov
mov
jne
ljmp
mov
mov
stc
shrb
sub
sub
pop
mov
imul
test
into
dec
cmp
loope
pusha
xor
pop
sarl
mov
mov
mov
loop
rorl
ret
push
das
mov
and
rcll
out
ja
dec
add
int3
fmull
lret
xchg
into
sbb
xor
outsb
pop
imul
jb
outsb
std
repnz
lahf
ret
fsubrl
sub
push
add
mov
sahf
out
jne
jp
lock
pop
pop
and
push
orb
inc
and
testl
outsb
aas
xor
div
insl
shrl
mov
push
adc
cmp
nop
jbe
and
in
data16
iret
lods
bsf
mov
cld
pop
add
xlat
sbbl
mov
loop
pop
xchg
mov
mov
mov
shrl
push
mov
ds
ja
aas
cs
js
inc
dec
dec
pop
inc
cmp
dec
mov
xchg
mov
cmp
in
addr16
jbe
jne
jno
jns
ss
cltd
sahf
mov
mov
xor
ret
lods
int
push
pop
adc
adc
outsb
lock
sbb
inc
adc
lret
mov
aas
sbb
sub
hlt
xor
and
sub
pop
negb
push
xlat
and
sbb
pop
bound
es
inc
lods
push
ret
jo
jne
jne
lcall
int3
sbb
aad
dec
sub
pop
cltd
stos
sti
lcall
sub
mov
jl
mov
cld
pop
clc
pop
out
adc
sbb
mov
add
pop
bound
xchg
ret
inc
test
vpsrlw
pop
repz
add
mov
jl
inc
cld
mov
and
fs
leave
cmp
or
lahf
nop
outsl
fwait
push
inc
adc
not
cmovbe
std
sahf
push
pop
fsub
sub
pop
outsb
imul
and
std
cli
fidivrl
sub
push
inc
cmp
add
xchg
inc
subl
lcall
fwait
cmp
daa
in
inc
xlat
xor
cmp
pop
js
cmp
dec
add
popl
rcl
fimull
pop
mov
lret
dec
mov
cltd
imul
jg
data16
mov
cmp
call
adc
lcall
and
or
pushf
fwait
xor
fistpll
fstl
popf
mov
jns
cmp
hlt
cwtl
outsb
lret
int
or
int
cmp
arpl
aas
arpl
gs
test
or
into
stc
fdiv
pop
push
push
mov
mov
pop
mov
addr16
lods
repz
movsl
cmpsb
push
mov
xchg
imul
xor
bound
bound
mov
mov
repnz
sbb
inc
cwtl
add
loope
jne
call
mov
mov
cwtl
cmpsb
add
push
aas
outsb
dec
testb
sbb
das
fnstsw
out
pop
fistps
stos
add
adc
test
in
in
in
decl
leave
inc
fdivrs
xor
push
mul
inc
sbb
fwait
pop
push
jl
neg
jne
push
add
mov
add
outsb
adc
lea
pop
lea
sub
sub
or
or
adc
cmp
cmp
adc
mov
ret
mov
test
shll
cmp
add
call
xchg
push
xor
mov
aad
push
or
test
inc
jnp
ret
pushf
and
cld
repz
lods
cmp
shl
pop
cmpsb
scas
dec
inc
adc
clc
stos
aad
adc
xor
mov
jb
test
push
call
mov
xchg
jg
bound
cltd
mov
jg
shr
lods
out
inc
in
fdivl
jae
fldcw
jb
mov
ds
nop
and
dec
mov
mov
push
sub
add
jmp
mov
inc
xor
sbb
jo
cld
push
xchg
lods
test
add
xchg
xchg
pop
test
imul
mov
scas
sbb
jecxz
dec
shl
cmpsb
mov
pusha
stos
loopne
sub
xor
fwait
and
xchg
bound
jmp
rcrb
dec
les
jle
mov
shll
lods
cmp
pushf
fildl
test
push
nop
mov
sbb
mov
call
pop
push
xor
pop
xlat
dec
sub
cwtl
inc
imulb
adc
inc
lret
test
aaa
and
add
sbb
dec
test
mov
popa
push
cltd
jl
cmp
adc
cmp
sahf
dec
cmp
std
cltd
into
aaa
mov
sub
or
cmp
and
xor
mov
xchg
cmpsl
in
sbbb
outsl
pop
xor
dec
xchg
movsb
mov
push
mov
outsl
mov
cli
sarl
bound
enter
sbb
mov
adc
cmp
push
rorb
or
add
addr16
add
cmpsb
lods
sbb
fiaddl
adc
or
mov
lods
lods
sbb
mov
ficoms
or
shrb
sub
jne
pop
loopnew
ljmp
in
jbe
push
xor
mov
in
dec
lret
mov
fildll
repz
je
push
addb
rcr
xor
pop
lock
mov
mov
inc
add
xchg
roll
rclb
mov
jmp
nop
add
cwtl
adc
movsl
out
ljmp
je
popa
mov
push
push
mov
pop
lods
push
scas
aad
add
mov
stos
jo
bound
orl
adcb
lret
psubq
inc
sub
xchg
inc
cmp
inc
je
cld
rorl
arpl
inc
mov
add
and
dec
cmp
inc
xchg
pop
push
inc
imul
add
adc
pop
into
ret
clc
lret
iret
sub
in
lock
popf
jae
pop
es
jle
nop
jle
or
lret
in
dec
dec
inc
add
iret
pusha
in
adc
mov
xchg
pusha
lods
outsb
mov
inc
or
mov
sbb
sbb
push
rcll
out
xor
fdivrl
shrb
js
insb
mov
mov
pop
lcall
mov
add
pusha
call
addr16
mov
pusha
movsb
in
int
mov
mov
daa
xor
jno
aaa
loopne
or
or
jbe
xor
mov
sub
or
out
sbb
test
rcrl
sbb
push
and
inc
push
jo
cmp
xchg
push
ljmp
outsl
xchg
push
jne
aaa
cmp
call
jg
sbb
rcrl
dec
fdivp
or
mov
and
scas
sub
daa
imul
icebp
mov
popa
lods
push
mov
fdivp
sub
adc
add
jl
mov
xchg
mov
test
inc
arpl
lods
jmp
pop
gs
cs
bound
fxch
pop
rorl
repz
sahf
mov
sub
shr
cmpl
pushf
pop
sti
insl
test
dec
nop
mov
xchg
loopne
test
xchg
jge
ret
iret
fldenv
fmull
or
je
shr
sbb
stos
fsts
pusha
cmp
dec
subb
mov
mov
rcrl
das
sub
add
add
sbb
add
inc
fnstenv
cmp
xchg
cmp
cmp
sbb
mov
mov
es
std
cld
sub
push
or
mov
jg
leave
lock
mov
mov
fmul
mov
clc
xlat
scas
test
test
ss
loope
lahf
enter
mov
in
mov
fistpl
mov
add
fwait
sub
jecxz
outsl
xchg
pop
pusha
inc
jo
push
loope
enter
dec
adc
cmc
mov
add
testb
sub
inc
std
cmc
jnp
int
jecxz
pop
mov
popf
orl
int3
mov
lock
push
or
xchg
jae
cmc
loop
cmp
fisubrs
sub
lahf
call
fadds
rcr
sub
inc
test
leave
nop
int3
std
adc
lret
aad
ret
sahf
jo
imulb
ja
dec
dec
cmc
or
mov
push
mov
adc
lds
mov
mov
mov
pop
sbb
mov
mov
ret
movsl
movsb
addr16
mov
icebp
push
add
stos
cld
ss
fsub
imul
mov
test
dec
std
pop
adc
inc
or
or
add
jp
xchg
xor
fidivrl
mov
aam
mul
sbb
jns
inc
test
xor
es
cwtl
movsb
push
xchg
mov
sub
xchg
pop
nop
ficoml
add
add
jno
push
nop
cmc
fwait
pop
adc
jp
xchg
add
add
cli
push
dec
ret
inc
mov
jbe
mov
sub
aaa
std
jle
shlb
cltd
cmp
jg
mov
sti
call
xchg
lock
cli
and
aas
call
insb
mov
aas
pop
cld
rorb
xchg
cmpsl
or
inc
dec
clc
outsl
cmpsb
pop
shlb
lahf
mov
sub
ja
sub
mov
xor
iret
sbb
imul
ljmp
dec
push
mov
bound
insb
aas
movsl
xchg
fwait
jge
fisttps
pop
add
loop
int3
mov
test
lret
clc
outsl
push
add
std
mov
mov
mov
sub
cmp
sahf
rolb
jns
test
dec
rorl
lret
roll
jl
and
nop
popa
icebp
sbb
jne
push
test
stos
icebp
nop
sub
sbb
repnz
adc
add
out
and
ret
jnp
cmpsb
cld
lcall
dec
imul
pop
in
inc
in
popf
mov
sub
xchg
xchg
push
sub
or
cli
push
hlt
dec
cs
sbb
int3
and
jecxz
or
or
xchg
fwait
and
fistpl
cmp
arpl
out
fs
lods
xor
mov
in
seto
loop
shll
into
ret
stos
out
fnsaves
in
sbb
xor
xchg
adc
mov
sbb
sar
test
sarb
jg
shll
pop
mov
xor
mov
adc
arpl
sub
cwtl
insl
leave
jnp
les
or
pushf
addb
xchg
popf
mov
scas
jle
out
lods
and
xchg
fimull
lds
adc
jno
movlps
nop
lahf
sbb
pusha
adc
stos
mov
leave
clc
fistl
cmpsb
pop
mov
dec
mov
jp
xchg
aam
adc
lret
xchg
or
add
in
mov
imul
jge
cmpl
xor
in
add
repnz
sbb
lret
and
outsb
push
push
les
test
lods
mov
icebp
aam
daa
xor
movsb
inc
jge
mov
xchg
sbb
int3
ret
inc
outsb
inc
out
test
test
xor
ja
jno
dec
or
addb
cmpsb
pushf
sbb
jecxz
lods
sbb
lods
inc
cmp
std
popf
mov
mov
add
insl
xchg
xor
mov
ja
shrl
rclb
inc
sbb
add
shll
stos
lods
xor
cmp
cmovg
enter
xchg
or
fsubrl
cmp
push
mov
lcall
mov
movsl
in
stos
insl
add
clc
jmp
sub
inc
or
dec
out
fsubs
sbb
push
sbb
lahf
jle
adcb
dec
jge
mov
adc
or
in
mov
in
out
cmp
jmp
mov
mov
stos
push
insl
adcb
ret
pop
push
mov
mov
lret
push
in
popf
fidivrs
and
inc
imul
xor
sub
adc
adc
lahf
cltd
and
jle
mov
mov
dec
fs
sti
and
jns
sub
dec
aad
xor
add
sbb
test
sahf
mov
adc
push
or
add
adc
dec
jae
xor
cmp
cmp
sbb
xchg
add
or
push
mov
push
mov
sbb
xor
jns
jne
insl
fwait
pop
jnp
pandn
mov
ds
cmp
push
sbbl
dec
aad
cmpl
xchg
ret
add
push
scas
cld
pop
lcall
int3
and
mov
nop
mov
in
inc
das
dec
cmpsb
in
or
ret
out
shl
sub
pop
or
mov
fistpl
gs
punpcklbw
jecxz
imul
push
movsl
pop
lret
es
mov
adcl
int
pop
xor
pop
mov
insl
jge
out
hlt
bound
cmp
lret
fdiv
add
insl
push
sbb
insb
imull
enter
shlb
jns
data16
mov
lahf
add
popa
lods
jns
sar
jge
sbb
scas
push
ss
outsb
and
lret
cli
sbb
jle
push
mov
repnz
call
testl
cmp
dec
lods
jbe
int3
gs
adc
push
xchg
jnp
jb
jae
jno
in
divb
fwait
cs
pushf
icebp
adcl
pop
or
popf
out
adc
dec
jne
cmp
push
out
rcll
mov
xchg
xor
cmc
hlt
pop
loop
jmp
mov
sub
dec
popa
out
dec
mov
test
hlt
and
cmp
mov
lods
jecxz
adc
stos
xor
adc
cltd
icebp
and
xor
xchg
pop
movsl
dec
aaa
adc
xchg
xchg
pop
ret
dec
std
enter
addl
cld
fsubr
inc
jno
fldenv
jo
push
push
in
cmp
adc
cmp
adc
dec
dec
aam
pop
push
shlb
rcl
nop
in
add
adc
jmp
cltd
inc
mov
pmaxsw
aam
std
scas
stc
cmp
stc
fiadds
adc
jle
pop
popa
pop
dec
out
sbb
add
add
out
insb
jno
dec
xlat
cli
inc
add
rcll
mov
stos
jnp
cmp
mov
jb
into
fistl
fcoms
test
test
leave
jl
clc
andl
ds
loop
and
pop
or
sbb
mov
fcmovnu
xor
popa
jo
cmc
test
jno
repnz
pop
pop
and
mov
notl
xor
in
dec
ret
or
dec
mov
lahf
adc
mov
jl
mov
jo
out
rdpmc
pop
xchg
and
icebp
sub
mov
jbe
shlb
mov
pop
sbb
scas
add
sbb
xlat
dec
jmp
xchg
add
push
cmpsl
and
and
outsl
dec
movsb
gs
xchg
cmp
stos
and
roll
hlt
rcl
lock
stos
mov
shlb
lret
nop
lcall
push
repnz
add
andb
mov
cmpsb
mov
incb
ja
rol
fldt
roll
rol
adc
and
mov
faddl
mov
pop
rcll
test
leave
aas
or
std
pop
out
push
sbb
sbbb
sub
dec
cmp
sar
fs
call
and
mov
inc
hlt
xor
int3
loop
test
mull
dec
cmp
push
add
jecxz
mov
adc
jns
pop
andb
fdivrs
jns
cmp
sbbb
fnstenv
jne
pop
dec
and
mov
push
dec
loop
arpl
xor
lea
add
ret
xchg
or
sub
push
sub
lea
lret
sbb
adc
dec
mov
mov
add
sbb
faddl
mov
adc
test
push
or
push
call
and
adc
ret
test
fmull
mov
xor
push
aas
repz
push
fisttpll
push
les
xor
adc
stc
or
jnp
addr16
in
mov
cmp
aaa
adc
mov
std
into
les
inc
int
jmp
jle
mov
adc
sbb
out
push
dec
cli
cmp
sahf
aas
dec
dec
xchg
xrelease
mov
daa
mov
sbb
or
sub
leave
push
jb
pop
and
jl
fstps
scas
and
outsb
cld
adc
das
mov
jo
mov
unpckhps
cwtl
dec
jne
jb
fidivs
out
mov
xchg
cmp
inc
int3
adc
pop
pop
sbb
or
mul
icebp
call
insl
cmc
ret
adc
mov
add
data16
and
fiadds
sub
xchg
inc
sbb
fucom
pop
pushf
aam
sbb
dec
pop
loopne
cmp
mov
dec
jo
mov
aam
cmp
pop
xor
xchg
push
or
or
in
ja
sub
mov
cmp
loope
cld
js
xor
mov
test
lods
lahf
cmp
shr
and
mov
xchg
aas
dec
std
iret
xchg
std
sbb
pop
rcrl
mov
cltd
dec
sbb
adc
js
btr
mov
inc
pop
stc
ss
mov
dec
inc
lret
repz
mov
lahf
dec
imull
jbe
repz
pop
gs
scas
out
add
nop
ret
mov
mov
lcall
fs
pop
mov
jnp
packsswb
jns
or
cmp
jns
rcl
cmp
popf
cmp
adc
inc
jbe
mov
push
and
jbe
fisttpl
jae
dec
ret
out
pop
mov
shll
sbb
add
mov
loope
jge
lret
addl
call
push
repnz
mov
and
sub
mov
outsl
adc
mov
mov
loope
pop
jno
push
jns
push
sbb
or
cmp
bound
sbb
ficoml
sahf
jbe
jnp
mov
inc
jns
rol
add
out
ds
test
push
mov
es
mov
push
repnz
xlat
fst
cmp
or
sbb
and
test
out
cmpb
xchg
sbb
insl
popa
call
push
mov
addr16
stc
sbb
mov
jnp
mov
pushf
sbb
and
in
into
xor
adc
push
ret
std
and
in
dec
mov
out
inc
pop
push
ds
js
push
test
movsb
push
sub
dec
into
cld
movsb
mov
push
fists
jae
jmp
cmpsl
mov
sbb
fidivs
fwait
sbb
xchg
dec
cmpb
xchg
push
shr
mov
les
into
fmull
je
aam
ljmp
xchg
xor
shlb
cwtl
push
xor
inc
cmp
add
pop
inc
push
jmp
mov
fsubrs
loop
mov
bound
imul
cld
shrb
inc
in
out
call
cmpsl
or
outsb
cwtl
xchg
dec
mov
or
outsl
cmp
adc
lods
mov
xchg
mov
dec
pop
or
push
pushf
nop
lret
adc
mov
adc
mov
xor
mov
mov
jecxz
mov
pop
lret
stc
icebp
xor
popa
lcall
in
cli
mov
clc
in
xchg
pop
out
sti
pop
xor
pop
rolb
lahf
incl
ss
mov
orl
subb
fisubrs
pusha
imul
xorb
and
lds
push
mov
ret
or
xlat
dec
mov
mov
push
cs
sbb
sub
imul
subb
insb
xchg
add
in
sbb
pop
and
jmp
fisubl
push
das
aam
xchg
lret
aaa
cmp
and
mov
addr16
repz
pushf
enter
cmp
dec
cltd
inc
lods
lock
enter
sbb
jmp
sbb
mov
fwait
dec
jnp
icebp
jb
andl
jle
jae
imul
and
jnp
adc
mov
outsb
insl
xchg
jnp
scas
sarl
adc
and
push
push
cmp
adc
in
dec
cmpsl
sar
ljmp
and
xchg
ljmp
mov
sbb
inc
sahf
es
cs
pop
ret
or
negb
push
call
insb
orl
push
mov
std
fcoms
mov
jl
cmp
jp
sub
sub
shlb
mov
push
or
dec
pop
aas
jbe
mov
xor
test
adc
and
inc
and
ret
and
mov
adc
dec
lods
repz
add
mov
jecxz
cmpsb
push
and
cli
mov
mov
fidivl
iret
lds
outsl
dec
ljmp
mov
pusha
jno
popf
addr16
pop
iret
popf
inc
adc
scas
icebp
nop
inc
or
aad
push
rcl
fisttpl
in
push
movsl
data16
aaa
and
and
cmp
faddp
stos
adc
fisubrs
mov
sub
sti
xor
aas
scas
sbb
dec
das
clc
sub
fs
mov
inc
lret
mov
push
ret
ret
dec
adc
gs
mov
ret
or
outsb
popf
inc
jnp
mov
mov
adc
push
cmp
lahf
outsb
adc
inc
mov
sub
sbb
call
pop
inc
push
rcrb
xchg
sub
add
shlb
dec
mov
orl
imul
push
les
or
sbb
fsubl
rolb
push
add
insl
inc
or
and
roll
dec
push
xor
in
jmp
mov
sbb
in
jl
int
mov
sbb
add
loopne
sbb
sub
shrb
in
push
mov
add
inc
ja
mov
fwait
push
lods
ds
xchg
ds
cmc
jl
add
jnp
push
xchg
fisubrs
jnp
and
cmc
push
xor
dec
mov
subl
lock
jae
in
jno
pop
insl
sbb
js
rorl
sbb
call
push
xor
and
test
add
xchg
mov
ja,pn
out
shlb
test
loope
mov
iret
pop
scas
pop
int
xor
enter
stc
mov
lods
cmp
sbb
outsb
ds
mov
js
push
adc
lea
pop
out
and
out
mov
cmp
dec
mov
lcall
sbb
xchg
xchg
inc
aam
cltd
bound
dec
cmp
mov
jne
in
jg
es
sub
mov
shrb
xchg
mov
and
jb
push
add
decb
in
pop
aam
or
mov
icebp
std
pusha
mov
test
mov
mov
mov
shrb
sbb
sub
pop
stos
mov
je
add
cs
out
ret
mov
mov
test
sbb
adc
mov
mov
adc
jb
add
pusha
mov
add
gs
fidivl
out
adc
cld
ficoml
je
cli
hlt
cmp
xchg
mov
stos
sbb
mov
mov
sti
cmp
jo
int
inc
inc
mov
xchg
popl
and
mulb
mov
pop
jp
or
lea
cmp
mov
loope
mov
xchg
das
add
xchg
loope
fsubr
cwtl
aas
or
mov
xor
dec
push
scas
or
mov
fwait
jne
popf
cmp
fwait
and
out
pusha
lret
cltd
cmp
mov
mov
je
cmp
mov
pop
cmpb
in
jmp
jo
pop
std
dec
and
jecxz
enter
les
icebp
sub
xchg
insl
jle,pn
mov
push
mov
dec
outsl
push
mov
test
inc
clc
roll
push
mov
inc
and
and
lcall
cmpsl
inc
dec
pop
add
insl
mov
jecxz
sbb
and
xchg
jns
idivl
sbb
mov
std
adc
xchg
or
int
js
mov
mov
jge
adc
aas
jns
incl
and
addr16
fadds
int
sub
icebp
lret
cmp
test
xor
xlat
xchg
dec
inc
rolb
out
mov
ja
dec
mov
add
js
pop
cmp
ret
cmp
in
daa
call
add
pusha
mov
mov
rcrb
test
jns,pt
test
push
mov
push
sti
push
jge
sub
shr
imul
sub
xchg
ss
rcll
gs
push
cli
and
sbb
add
jo
popa
rorl
in
lods
test
xchg
push
in
pop
pop
push
and
pushf
jl
mov
mov
push
pop
pop
sub
pop
data16
out
or
lods
xchg
add
inc
outsl
adc
and
sub
lds
ja
dec
xor
mov
xchg
or
rcrl
push
or
add
out
cmp
outsl
or
add
push
in
mov
pop
in
mov
sar
popf
mov
rcr
push
jnp
mov
test
es
dec
xor
fldt
inc
leave
clc
iret
jnp
pop
jl
jg
das
test
push
fisttpl
cmpsl
outsl
lea
loopne
pop
add
cmc
imul
xchg
cs
lret
push
mov
imul
mov
in
repz
cmp
jns
insl
pop
mov
add
insb
xchg
popf
cmp
cmp
inc
xor
or
in
mov
cli
and
aas
jnp
std
mov
mov
jnp
repz
pop
bound
sbb
xor
and
iret
mov
or
mov
ss
cld
jns
push
testb
or
dec
jb
or
and
inc
mov
cltd
mov
add
adc
cwtl
pop
lea
lea
jns
fdivs
sbb
sahf
adc
cmc
jo
pop
das
jnp
outsb
jb
sbb
push
pushf
lds
ds
orl
xchg
fnsave
lcall
mov
dec
or
inc
imull
je
sub
xchg
push
sbb
push
mov
fstps
push
jecxz
mov
stos
mov
lahf
ficomps
xchg
das
jl
dec
clc
int3
mov
cmp
mov
nop
pop
add
mov
mov
mov
rorl
jg
pop
je
movsb
mov
sbb
js
dec
add
jno
maskmovq
stos
dec
pop
divl
cmp
pop
into
mov
sbb
adc
ret
xchg
xchg
lcall
ret
push
xchg
mov
pop
popa
cmp
fadds
dec
cmp
icebp
sub
jo
inc
jg
mov
inc
inc
movsb
dec
jmp
pop
subl
lea
clc
jo
bound
jae
je
cmpsl
xchg
roll
add
aas
dec
sub
aam
loope
in
push
lcall
idivb
inc
mov
cmc
xchg
xchg
adc
incl
test
mov
mov
inc
and
jp
test
pop
cwtl
adc
and
mov
rclb
add
mov
inc
stc
bnd
in
push
push
lea
aaa
cmc
test
gs
js
sahf
mov
pop
stos
test
pop
dec
sbb
int3
push
mov
lret
cmpsl
push
sub
push
movsb
xchg
push
fcmovnu
adc
mov
lretw
mov
jl
xchg
inc
hlt
mov
rcll
push
inc
mov
jl
cmc
adc
mov
mov
lods
mov
push
clc
insb
mov
mov
xchg
pop
js
sarl
jmp
mov
mov
aas
jo
add
rorb
cwtl
mov
mov
add
pop
and
imul
jno
jbe
sti
add
add
imul
es
pop
push
sub
mov
les
jp
push
sub
push
fsubs
arpl
cmp
fdivrl
and
pop
inc
jp
addr16
xchg
outsb
iret
and
in
lock
pop
add
inc
dec
push
jl
cmpsb
lods
add
pop
push
jne
and
sbb
and
pop
inc
arpl
push
push
xor
mov
ret
arpl
int3
xor
or
stc
lret
xchg
nop
fidivrl
addl
cmp
stos
cmp
cmpsl
fstl
push
xchg
push
or
and
or
xchg
pop
mov
mov
out
inc
jnp
insl
movsb
sti
ja
mov
or
jle
pop
loope
inc
lods
cmpb
inc
pop
push
push
mov
dec
cmp
in
clc
stc
dec
lcall
fwait
aaa
ljmp
cmpsl
sar
fs
in
iret
cmp
sti
and
or
jbe
repz
sub
or
ficompl
fists
dec
cmp
and
addl
gs
pop
in
pop
shll
push
adc
lret
sbb
dec
push
jo
mov
test
arpl
jge
incl
mov
jle
inc
xchg
lcall
sarb
mov
cs
jae
test
mov
adc
mov
fsubrl
mov
mov
sti
sarl
or
or
addl
jle
jns
repnz
push
jb
int
adc
pop
jb
call
jbe
std
out
inc
icebp
daa
addr16
stos
pushf
sbb
fsts
mov
and
ljmp
xchg
push
sub
and
sub
jno
jl
ljmp
cmp
mov
jge
clc
and
stos
mov
xchg
rcr
mov
clc
or
cmp
push
aam
xchg
and
jno
test
out
je
xorl
pop
das
cmpsl
fcomp
or
cmp
cmp
adc
out
mov
jl
mov
mov
notl
cmp
dec
inc
mov
inc
xchg
fs
or
int3
fadd
nop
sub
pushf
aaa
sbb
insb
fildl
adc
pop
push
mov
pop
fsubr
scas
into
lods
add
in
into
dec
adc
pop
movsl
outsb
inc
aas
xor
das
nop
mov
fwait
gs
mov
sbb
sbb
insl
or
sbb
mov
fwait
in
adc
repnz
shrb
pop
rcll
sbb
pop
cmp
pop
xor
int3
xorb
jns
push
and
adc
fsubl
cmp
mov
shl
adc
or
cs
sub
sbb
dec
xor
mov
add
mov
outsb
add
sub
sahf
pop
out
pop
insb
jnp
jns
out
sbb
arpl
call
sarb
test
pop
add
xchg
dec
leave
inc
clc
mov
iret
aad
xchg
pop
mov
mov
xor
ret
or
bnd
lods
add
and
and
and
mov
push
je
xchg
gs
aam
fcomp
jp
mov
push
xlat
movsl
inc
mov
filds
jle
add
shrl
ljmp
mov
sbb
dec
push
adc
pop
stos
adc
inc
sub
pop
stc
std
les
sbb
push
pcmpgtb
mov
xchg
rclb
hlt
mov
shlb
cmp
mov
adc
aas
xchg
jp
js
jbe
and
stos
into
ret
cld
mov
pushf
sub
xchg
pop
xor
push
pop
and
pop
stos
adc
adc
inc
or
cmp
pop
inc
add
or
aam
mov
inc
lods
pop
sarl
stos
lcall
mov
pop
push
movsl
lock
inc
mov
outsl
push
aam
loopne
xchg
jle
xlat
sub
arpl
add
lods
mov
in
pop
test
xor
pop
lods
fsubl
ss
stc
adc
xchg
xchg
inc
inc
cmc
addr16
es
push
push
dec
test
mov
mov
je
rorl
aam
cmpsb
cmp
push
xor
lods
jl
jno
loope
jbe
scas
das
cli
fwait
jo
in
mov
test
cmc
hlt
or
xor
mov
pop
hlt
inc
push
jge
mov
mov
or
sbb
lock
cmpsb
inc
jmp
xor
mov
test
js
into
pop
sub
mov
das
push
lret
pop
dec
pop
movsb
push
lods
cmc
hlt
ret
out
lock
repz
inc
outsl
pop
pop
hlt
scas
nop
cld
push
leave
push
imul
inc
pop
cmp
jg
les
jno
jge
subl
stc
adc
mov
insb
sarb
mov
add
data16
jg
and
mov
mov
dec
vaddsubpd
hlt
dec
jmp
aam
leave
mov
pop
mov
push
inc
sarl
faddp
lret
fs
mov
pop
int
std
add
cmp
imul
inc
mov
push
inc
mov
rcrl
jae
cmp
outsl
les
xchg
sbb
mov
rclb
cmp
mov
jns
mov
pop
mov
jmp
loopne
inc
xor
or
add
pushf
inc
out
adc
scas
pop
sbb
mov
sarb
sti
imul
das
lds
and
ljmp
insl
push
js
push
adc
rcll
sar
lret
testl
xor
aas
push
in
fsub
movl
ret
lods
in
sbb
sub
movsb
fwait
jbe
pop
add
dec
mov
repnz
cmp
sub
xchg
ret
sub
mov
or
test
sti
mov
std
mov
ljmp
lret
fs
nop
cli
cs
scas
stos
mov
add
pop
pop
pop
idivb
cwtl
pop
shll
cmp
and
mov
add
fstps
inc
mull
popf
test
out
icebp
inc
fistpl
sub
loopne
mov
mov
hlt
scas
mov
scas
ss
repz
leave
test
loope
sahf
xor
sbb
cmp
shrb
jmp
scas
sub
inc
pop
lret
loope
add
cmpsl
fwait
adc
daa
xchg
dec
repnz
pop
aaa
cmp
imul
cmp
iret
out
popf
icebp
test
mov
push
mov
jecxz
ss
imul
push
xor
aas
ljmp
jne
imul
je
rcl
bound
jp
and
inc
cmpsl
inc
mov
xchg
push
das
pop
mov
xchg
rorl
daa
cmp
imul
or
in
mov
push
mov
test
jmp
mov
mov
out
pop
pusha
data16
xlat
jp
fstpt
pop
imul
add
or
sbb
dec
add
in
xor
fwait
cmp
sub
fcoms
push
addr16
aas
cmp
lahf
test
out
fwait
mov
add
adc
xchg
mov
mov
fnstsw
cli
iret
adc
cltd
in
xchg
xchg
mov
sbb
jmp
adc
aad
sbb
add
jnp
adc
mov
mov
ret
into
mov
stc
add
loop
inc
cmp
sub
inc
and
bound
push
jae
or
jae
lock
sbb
adc
dec
data16
or
mov
out
out
cmpsl
pushf
mov
lods
sbb
push
sbb
and
xchg
jo
aaa
jp
fidivrl
out
push
fcmovne
sub
daa
testl
inc
sarl
lcall
adc
fstl
sti
push
lds
xchg
xchg
sarl
or
push
inc
cli
fldl
sub
add
cmpsl
sub
idiv
pop
dec
inc
gs
js
cmp
lock
cld
sarl
push
xor
and
jne
adc
in
lods
xchg
rorb
outsl
cmp
movl
stos
sbb
sub
xor
iret
sub
jle
lock
repz
xchg
lods
mov
and
pop
push
push
mov
and
cmp
and
outsb
cmp
jmp
scas
inc
xchg
dec
popf
mov
and
test
daa
sub
data16
into
popa
rcrl
lret
or
cmp
mov
lea
xor
dec
out
fs
pop
mov
xor
pop
repnz
jns
andl
mov
add
rorb
mov
cmpsb
cli
sbb
pop
fs
rcl
add
ja
xchg
sbb
test
sbb
mov
add
mov
loop
cs
daa
jnp
add
sub
aas
pop
pusha
mov
idivl
or
xchg
fsts
sub
sub
lcall
divl
push
icebp
cmpl
fimull
int3
inc
push
xor
std
fs
ljmp
jns
sub
jne
add
das
sbb
imull
pop
jb
mov
add
mov
pop
xchg
test
lock
fucomi
ror
sarb
fs
lea
fstpt
cli
inc
pop
cmp
rcrl
pop
mov
aas
mov
loope
jbe
ret
fcomi
sarl
into
jo
adc
ja
orl
ret
pop
add
xor
mov
inc
js
subl
cmp
pop
sarb
mov
sbb
push
les
xor
mov
and
adc
pop
fistps
push
inc
fisttpll
lret
push
jp
fpatan
push
faddp
sub
sbb
mov
cmp
inc
jge
inc
cs
dec
aad
dec
adc
cltd
dec
lcall
fdivrs
repnz
jbe
loope
xor
test
add
jmp
pop
inc
mov
dec
sub
int3
stc
arpl
mov
push
rorl
div
dec
sub
xchg
inc
mov
mov
dec
mov
cmp
stos
inc
adc
push
push
xchg
mov
push
addr16
iret
arpl
pop
adc
xor
push
or
jp
lock
roll
mov
test
and
sahf
daa
movb
stc
jmp
push
dec
push
dec
ss
cmp
repnz
not
daa
xchg
ja
ja
adc
add
xchg
ja
adc
xchg
mov
mov
call
adc
xchg
push
lea
mov
pop
test
popf
aas
add
out
and
stos
xor
in
or
jmp
pop
fildl
lret
rcrb
sbb
lds
rorb
cli
push
cwtl
cld
push
loopne
call
mov
xor
sarb
stc
push
push
dec
insb
aad
mov
xchg
stos
xor
test
ss
jb
inc
add
adc
scas
jo,pt
sub
push
mov
jge
rcl
fstp
sub
aam
jp
ds
inc
notl
and
push
mov
icebp
bound
lret
push
shlb
xchg
fadd
fcoms
lock
sbb
int
jae
xchg
loop
repnz
xchg
xchg
mull
adc
lret
xor
insl
dec
pushf
add
cmp
fmuls
jmp
jns
pop
adc
ss
mov
jmp
mov
push
andl
mov
add
jae
dec
dec
in
mov
dec
mov
je
push
stos
int3
add
call
adc
lods
mov
add
lods
and
fdivs
test
mov
inc
push
jnp
xor
or
ud2
sti
bound
add
in
scas
mov
mov
int3
jl
lret
sbbb
fimull
mov
and
icebp
xchg
and
popf
test
sbb
inc
adc
adc
push
push
in
push
stos
fcmovne
imul
arpl
pop
mov
push
negl
lcall
mov
jl
xchg
cmc
call
loop
dec
sub
fisttpl
pop
mov
inc
addb
in
sub
test
insl
and
jb
and
enter
inc
fwait
enter
xor
pushl
gs
add
dec
pop
lcall
dec
test
mov
mov
or
ljmp
aaa
xchg
in
pop
sbb
pop
lea
lods
test
pop
dec
mov
out
inc
push
jg
leave
or
cmp
ret
xor
subl
test
test
mov
cmpsl
ds
popf
xlat
cmp
xor
cs
add
and
sbb
pop
xor
lds
push
sbb
movsl
xor
xor
adc
jno
imul
hlt
dec
jne
xchg
clc
stos
add
cmp
stos
pop
mov
stos
popl
repnz
cli
ss
bound
test
mov
sti
sub
and
ja
inc
out
lcall
adc
in
xor
ret
inc
cmp
sbb
push
les
push
outsl
push
pop
in
mov
push
sti
pop
and
jo
mov
int3
jmp
aas
sbb
mov
pop
add
push
mov
add
or
stc
orl
pop
pop
dec
push
cmc
add
dec
js
add
shlb
enter
roll
and
add
mov
loop
out
pop
mov
mov
into
mov
nop
mov
cmc
shll
sub
cltd
pop
stos
bound
xor
pop
cmp
sbb
clc
mov
inc
nop
cwtl
sti
inc
mov
mov
mov
or
rep
pop
aas
mov
jne
and
mov
rcrl
pop
popf
je
aaa
inc
pop
loopne
into
testl
leave
pop
or
roll
aam
or
and
sub
jge
inc
add
pop
shrb
cmpsb
stc
push
xchg
lcall
xchg
push
inc
mov
mov
stos
sti
jns
dec
sub
imul
adc
enter
mov
insb
lds
rcll
push
pop
pop
and
cltd
mov
jmp
sub
fwait
sbb
out
mov
xchg
sub
lahf
in
jl
mov
push
inc
mov
dec
nop
and
scas
mov
ret
mov
and
popf
jg
ljmp
mov
adc
fsub
jl
pop
shlb
imul
imul
and
push
mov
xor
mov
adc
xor
dec
lea
mov
push
loope
insb
outsl
insl
ret
mov
filds
sbb
clc
jae
stc
push
mov
mov
clc
sub
adc
sahf
mov
or
xor
adc
sub
popa
test
sbb
shlb
xor
xor
xor
xchg
test
xor
fs
dec
cmp
test
dec
fwait
cmpsb
cmp
imul
push
inc
mov
popa
shr
outsl
popa
push
mov
lods
xor
jnp
xchg
je
push
mov
lea
jne
mov
cmc
fimuls
cmp
xchg
mov
movsl
and
inc
push
enter
sbb
jg
or
idivl
mov
xchg
dec
mov
and
int3
lods
dec
jne
je
cs
in
into
test
push
cmp
add
mov
push
movsb
lods
fdivrs
adc
lods
nop
bound
lods
inc
dec
dec
aaa
cs
stos
mov
pop
jmp
lahf
cmp
adc
lds
rep
fucomip
cli
push
add
mov
outsb
push
fmulp
fdivl
and
daa
add
pop
mov
aaa
addb
push
fdivrs
add
shrl
out
lret
inc
jp
sub
data16
dec
cmp
mov
xchg
je
jnp
and
mov
sub
mov
jo
xchg
std
iret
call
add
xchg
popf
stc
sbb
push
push
add
cwtl
mov
in
dec
jnp
std
sub
stos
mov
mov
lods
jge
or
aaa
dec
das
ret
sbb
push
xor
into
shlb
push
cmp
outsl
outsl
sarb
jmp
mov
ljmp
jg
ja
cli
sahf
dec
sub
push
movsl
pop
stos
mov
dec
subb
test
xchg
les
lds
std
pop
push
subb
adc
add
enter
sbb
pop
mov
test
jmp
push
or
aas
or
mov
cltd
fiaddl
push
mov
cwtl
xor
adc
addr16
mov
jl
loop
or
mov
jo
out
lahf
xchg
rolb
in
das
jne
je
mov
call
push
dec
sarl
sbb
cmc
push
mov
out
loop
add
or
adc
inc
adc
mov
clc
test
sahf
sbb
push
xchg
out
fiadds
push
sub
lods
orl
ret
daa
sub
jae
add
sbb
movsb
mov
in
addr16
int3
pop
mov
lret
dec
xor
shr
dec
test
shlb
insb
xchg
fldenv
cmp
dec
imul
imul
xor
mov
lock
and
loopne
lods
scas
inc
mov
cmp
mov
or
cli
cmc
jno
test
pop
repnz
push
pop
jae
dec
adc
adc
push
or
cmp
sub
js
pop
lcall
jbe
jno
in
pusha
adcl
pop
or
or
mov
inc
and
addr16
mov
push
mov
jb
jl
pop
or
cmp
pop
arpl
jne
inc
xor
pop
jbe
jecxz
lret
adc
das
dec
lret
lahf
bound
push
push
js
jo
out
cmp
adc
loopne
aam
outsl
insb
idivb
sub
sti
jmp
loopne
inc
mov
loopne
xor
arpl
push
sahf
and
pop
shlb
sub
jnp
into
mov
or
cmp
faddl
mov
je
gs
popf
ja
mov
in
cmp
dec
insb
lock
scas
pusha
jp
lret
or
lret
sarb
cli
lods
lods
sub
aad
outsb
scas
push
sub
in
aaa
cmp
bound
cmp
sbb
cmpsb
xlat
sbb
mov
mov
in
sbb
dec
jne
cld
adc
ds
cmp
out
adc
mov
mov
std
mov
cmc
push
sbb
test
cld
xchg
adc
dec
mov
jl
and
lods
aas
pop
decb
adc
xchg
xchg
lock
push
add
jg
out
shrb
into
rcr
dec
inc
pop
int
stc
mov
add
ljmp
dec
jp
push
pop
cmc
cmp
pop
out
into
clc
dec
xlat
push
xchg
cmpsb
adc
push
test
fadd
mov
fsubrl
loopne
xchg
movsl
cmpsb
cli
or
nop
pop
inc
jns
add
imul
lret
das
repz
mov
and
and
mov
pop
adc
mov
jge
push
or
ljmp
popa
pop
cmp
rclb
jge
xor
dec
scas
and
cld
test
dec
ret
jo
cmp
push
in
mov
inc
or
pusha
fldenv
sahf
movsb
xlat
hlt
int
std
xchg
sbb
out
adc
test
mov
xchg
mov
adc
mov
stc
pop
pop
mov
inc
pop
jmp
or
mov
push
push
out
xchg
insl
cltd
stos
adc
mov
std
mov
sbb
dec
lcall
std
scas
sub
lds
fwait
lcall
stos
jnp
dec
push
fistl
xchg
inc
shl
jno
test
pop
cmpsb
mov
pop
adcb
jbe
or
add
insb
test
mov
mov
xor
mov
jg
ds
imul
fs
ret
ja
into
or
adc
sub
sbb
inc
test
cmpsl
repz
lea
sbb
orb
jecxz
add
dec
sub
mov
dec
inc
addr16
insl
jno
mov
jp
push
xchg
pop
sub
fcompl
out
fsubs
sbb
inc
insb
add
inc
pop
jbe
mov
aam
push
test
insl
mov
in
lahf
add
mov
lods
dec
popf
xor
out
jge
lcall
ret
psrlw
nop
dec
in
fistpll
inc
lods
jp
sbbl
out
mov
pop
in
xchg
pop
cmp
addr16
mov
call
pop
add
out
jbe
out
into
lods
cmp
repz
mov
lret
popf
and
rcll
dec
pop
aam
ds
add
fisttpl
xor
xchg
xchg
jbe
and
sbb
cmp
lret
inc
pop
fwait
sub
orb
test
xchg
fiaddl
push
add
xchg
mov
cwtl
dec
xchg
out
ficoml
insl
fwait
std
enter
jge
jne,pt
pop
imul
loope
bound
nop
push
sub
aad
inc
inc
movsl
mov
or
xor
cmp
aad
mov
xlat
jecxz
xchg
loop
cltd
or
jns
push
fldt
mov
mov
lret
jl
inc
push
adc
enter
leave
xchg
ljmp
popa
or
fdivrs
inc
mov
aaa
or
insl
rcrb
pusha
jmp
in
imul
add
icebp
and
xor
inc
cmc
data16
into
sahf
sub
addl
mov
popf
into
lea
add
call
fsubr
ljmp
cmpl
mov
xchg
inc
insl
push
or
mov
sbb
loopne
inc
pop
jne
xchg
push
mov
fistps
loopne
push
dec
pop
sub
pusha
jle
out
pusha
and
mov
lods
imul
repz
mov
into
mov
in
in
popf
es
ret
add
mov
xchg
pop
lods
mov
insl
ss
hlt
pop
mov
into
pop
push
popf
jmp
popa
fcomip
and
aad
paddusw
fisttpl
jmp
and
lahf
pop
add
sub
rclb
add
mov
loopne
fadd
fs
and
pop
adc
sbb
les
into
sub
dec
div
xor
pushf
cld
gs
dec
push
inc
mov
movsl
mov
pop
cld
jmp
or
jo
clc
filds
cmp
das
fs
int
mov
out
icebp
fimull
jnp
ret
cltd
nop
mov
cli
fidivl
push
cmc
out
call
sarl
nop
push
rcl
mov
lea
mov
hlt
inc
stc
pusha
xchg
ds
nop
popa
push
pop
cmp
mov
out
sub
pop
aaa
cltd
jae
rcrb
jo
mov
and
push
psadbw
mov
cmpsb
add
cmp
sbb
jnp
into
jae
test
sbb
cmp
shlb
sub
ss
xchg
mov
sbb
xchg
pop
das
xchg
fisubs
sbb
inc
mov
in
mov
std
mov
loop
and
cmp
push
mov
push
pushf
stos
cmc
and
shld
xor
mov
dec
or
sbb
es
sbb
pop
stc
jnp
cmp
sub
sti
outsb
in
ljmp
movzbl
icebp
sub
push
popf
jg
testb
sbb
and
gs
stos
xchg
and
mov
stos
xchg
xchg
add
ret
mov
shrl
push
rorb
leave
mov
cs
xchg
imul
mov
shlb
mov
jne
mov
pop
xchg
arpl
mov
mov
testl
or
sbb
pop
clc
mov
dec
mov
lods
pop
xchg
sti
dec
cli
jnp
fcomip
mov
ss
addr16
aam
insl
cmc
xor
sbb
push
ja
jne
jmp
adcb
leave
bound
pop
out
divb
popf
or
fdivrl
jge
out
test
or
mov
lods
insb
fsubrp
lcall
into
daa
jl
loopne
cmp
sub
push
sbb
je
adc
dec
pop
jb
jbe
or
adc
pop
movsb
mov
pop
scas
jns
jb
inc
nop
xorb
mov
addr16
stos
les
iret
clc
cmp
mov
sahf
sbb
sbb
in
cmp
mov
or
inc
bound
sbb
movsl
dec
add
popa
movsl
mov
popw
inc
dec
jno
push
xchg
out
ret
add
or
in
mov
jae
cmpsl
pop
aam
andl
pop
sub
mov
sahf
and
out
mov
pop
aad
test
scas
sti
pop
nop
iret
stos
sub
mov
test
std
mov
hlt
or
ljmp
popl
sbb
ljmp
dec
mov
mov
cli
data16
out
cmc
or
hlt
push
jnp
icebp
inc
sub
xchg
hlt
cmp
fs
enter
fistpll
pop
push
sbb
iret
cmp
dec
adc
fisubrl
shlb
pop
push
call
xor
adc
cwtl
stos
push
xchg
or
pop
es
push
sti
popf
jmp
or
xorl
test
out
test
icebp
sbb
orb
sub
xlat
xor
inc
fwait
pop
cmp
gs
inc
mov
lret
or
push
add
cmpsb
ret
push
xor
cs
addr16
cmp
insb
xchg
popa
leave
ja
jmp
icebp
xchg
or
test
pop
sbb
sub
insl
mov
out
mov
sbb
mov
aam
mov
in
and
jmp
lret
rcll
push
xor
mov
out
clc
mov
xchg
aad
js
adc
and
sub
repnz
pop
out
cmp
dec
pusha
jo
push
sbb
pop
orl
jae
push
jnp
imulb
imul
idivl
adc
scas
sbb
test
and
jae
inc
jg
hlt
std
jno
push
adc
mov
incb
mov
fwait
test
lds
in
inc
lahf
jp
fcmovb
xor
popa
mov
pop
xchg
out
scas
push
cmp
sub
push
ret
cmpsl
dec
cwtl
call
cmp
daa
daa
adc
cmp
jae
add
fwait
jg
sub
or
lahf
dec
dec
in
hlt
sbb
aaa
nop
popf
xchg
mov
xchg
mov
dec
loope
es
dec
shl
lds
push
sub
and
cmpsl
out
or
jbe
loopne
adc
dec
sahf
aas
jmp
hlt
push
jecxz
mov
mov
push
push
push
inc
push
adc
leave
jmp
shll
call
jmp
push
inc
sti
inc
popf
cwtl
rorl
mov
in
push
add
mov
out
cltd
jmp
lret
mov
cmp
mov
shlb
fcomps
dec
scas
lcall
pop
into
jecxz
cmp
mov
js
sbb
out
je
inc
scas
jb
or
mov
pop
test
int
xchg
mov
add
addr16
adc
sbb
leave
mov
adc
lods
out
lcall
mov
jae
xor
push
fistps
or
mov
inc
cmc
adc
dec
daa
push
mov
sbb
rorb
leave
mov
sub
push
pop
sub
out
xor
repz
jo
mov
fcom
outsl
cmpsb
loope
les
mov
dec
rcrb
loop
pop
xor
pop
lock
addb
pusha
ljmp
sbb
mov
icebp
sub
loopne
push
dec
and
or
mov
cwtl
outsb
jmp
jmp
mov
xlat
mov
cmc
jo
inc
adcb
sub
cmp
outsl
cmp
nop
and
jmp
mov
ja
ss
outsb
insb
and
pop
mov
fisttpl
outsl
xchg
jge
imul
stc
data16
enter
push
les
xchg
repnz
js
sbb
push
push
push
jns,pn
out
pop
jecxz
pop
and
ja
sub
lahf
xchg
fcompl
stc
je
lods
jp
add
loope
mov
int
or
cmc
pop
int
cmpsl
test
mov
push
push
in
in
cmp
inc
fiadds
punpckhbw
aaa
test
push
or
cmpsb
mov
dec
cmc
inc
mov
dec
xor
lock
addb
loopne
fdivrl
mov
mov
fbstp
mov
in
cmp
or
out
in
gs
pushf
stos
or
mov
mov
xchg
sub
xor
clc
test
jnp
sarb
mov
mov
jecxz
ficomps
lock
ret
mov
xor
mov
outsl
cwtl
es
ror
add
jbe
sbb
repz
mov
aas
enter
dec
enter
sbb
pop
nop
or
fidivrl
inc
add
in
ja
dec
aad
push
sbb
pop
cmc
insb
and
jo
jb
es
mov
test
cmpsl
add
aad
loope
push
dec
test
push
cmp
pop
jno
lods
loop
daa
nop
and
sub
and
nop
push
lock
lret
add
or
in
lret
jmp
out
xchg
inc
or
pop
mov
testb
mov
mov
ja
cmp
xor
mov
cs
arpl
xor
testb
xchg
mov
in
je
lahf
les
sbb
mov
sub
dec
mov
aad
mull
fwait
sub
jb
ljmp
dec
aaa
or
cmc
pop
test
lcall
loopne
or
shll
pop
mov
sub
jns
lock
xlat
xchg
rclb
lcall
pop
cmc
hlt
daa
xor
aad
and
mov
adc
filds
mov
loope
ret
test
enter
es
add
cmp
cmp
push
push
or
jbe
cmp
call
aaa
push
sub
lods
pop
loope
or
cmc
pop
in
lret
mov
sbb
jne
jge
dec
jecxz
add
sub
sbb
nop
mov
push
jmp
out
int3
out
mov
int3
mul
ds
cmp
xlat
mov
popf
stos
cmp
js
aas
jmp
insb
adc
and
jge
imulb
ss
mov
jp
cltd
or
pop
push
mov
inc
sub
ret
cmc
bound
pop
call
test
jecxz
out
mov
es
imul
xor
xchg
pop
stc
or
pop
xchg
jmp
test
xlat
call
lea
jp
pop
inc
roll
popf
jae
xchg
dec
mov
inc
icebp
xor
adc
xchg
lods
mov
es
les
push
outsl
sbb
scas
dec
push
movsl
add
rcrl
mov
cmp
jb
mov
sub
sbb
aas
add
loopne
fcmovbe
addr16
adc
pop
mov
mov
insl
or
push
mov
mov
cltd
mov
cli
jmp
pop
add
js
call
sbb
mov
push
inc
imul
and
xor
sbb
lods
rclb
mov
fmull
mov
mov
das
mov
les
mov
and
pop
inc
mov
lret
mov
mov
pop
outsb
lock
dec
repz
ficompl
cmp
leave
dec
insl
xchg
inc
cmp
push
xchg
popf
scas
pop
push
push
xchg
pop
sub
dec
and
mul
push
lds
sbb
jbe
mov
lock
xlat
or
dec
inc
js
jge
mov
fmul
inc
test
mov
jl
pusha
cmp
rolb
outsl
cmc
add
cmpsb
push
test
cld
adc
mov
and
pop
lcall
je
mov
mov
iret
popa
loopne
push
cltd
ss
dec
jle
aad
push
mov
sbb
sbb
pop
inc
stos
mov
stos
xor
mov
pop
in
xor
add
mov
xchg
enter
lret
sbb
lcall
cmp
lods
enter
repnz
imul
pop
inc
add
add
push
sahf
and
icebp
fisttpl
mov
addr16
fdiv
popa
xchg
sti
lcall
sbb
cmp
mov
fstl
add
jne
stc
cmp
mov
mov
es
pop
sti
sbb
out
pop
outsb
push
or
ffree
jbe
test
inc
xchg
les
out
pop
sbb
mov
popa
dec
fisttpl
ljmp
dec
push
in
test
mov
ja
rolb
mov
data16
or
test
dec
cli
cmc
mov
shlb
dec
aam
push
out
adc
rolb
mov
or
bound
adc
mov
jbe
dec
push
jmp
jge
mov
out
jne
cmpl
lods
cltd
mov
mov
cmp
inc
mov
fdivrl
push
sub
fwait
scas
call
mov
pushl
sub
fld
movd
mov
clc
adc
pop
out
fistps
enter
xor
and
pop
sbb
jmp
pop
nop
xlat
mov
gs
jge
pop
lret
in
stos
ljmp
lea
xchg
mov
movsb
shlb
push
push
popf
mov
lock
orl
dec
loope
outsl
js
dec
add
or
sub
mov
sub
inc
aaa
out
mov
movsb
bound
xor
xor
mov
enter
lock
xchg
into
dec
mov
inc
fists
loope
mov
xchg
push
jno
pop
cmp
mov
fildll
les
and
jb
inc
xchg
add
jo
push
mov
arpl
test
pushf
mov
mov
jecxz
ret
mov
jno
and
mov
loop
jae
js
xor
inc
mov
and
sbb
movsb
je
lret
push
push
push
jle
lcall
push
xchg
lock
xchg
out
jne
inc
adc
lahf
mov
lahf
lods
paddw
int3
mov
jns
int
mov
and
insl
xchg
js
adc
out
sub
sub
inc
cwtl
imul
mov
ljmp
cmc
and
pop
jg
fcoml
shrl
push
hlt
mov
sti
cmpl
sub
dec
cmpsl
add
cmp
comiss
mov
xchg
call
in
nop
test
sti
or
ljmp
out
xchg
out
push
xor
push
push
hlt
xchg
mov
add
enter
or
into
aam
mov
sub
clc
cmc
dec
or
lcall
call
jb
stc
sbbb
jp
push
mov
call
dec
int3
insb
mov
xchg
je
scas
call
sbb
mov
jecxz
nop
dec
fmuls
aam
repz
fcomps
inc
ds
dec
lcall
xchg
jecxz
into
adcb
stc
int
sub
sub
mov
cmpsb
dec
cmpsl
mov
inc
sub
sbb
xchg
mov
ljmp
imul
stc
xchg
dec
xchg
xacquire
les
test
test
cmp
cld
and
fwait
sub
dec
mov
das
xchg
mov
sarl
adc
stc
test
jo
inc
or
push
sahf
and
sub
jp
arpl
and
leave
cmpsl
in
imul
in
sbb
xchg
sub
and
in
xor
jae
inc
or
stos
and
cltd
xchg
sub
pusha
add
into
xor
push
lret
pop
sbb
jbe
mov
out
push
push
ja
inc
xor
inc
stos
jecxz
mov
test
ret
jmp
arpl
flds
das
push
push
orl
sub
cmp
aas
adc
ss
inc
pop
jnp
dec
dec
ficoms
shrb
push
cltd
jecxz
and
popf
sti
ret
test
push
insl
enter
test
nop
push
pop
int3
mov
push
inc
cmpsb
xchg
lcall
outsl
add
dec
std
mov
sahf
xor
jecxz
movsb
sbb
call
cmp
das
xchg
cs
mov
repz
pop
xchg
inc
pop
int
cmp
scas
add
mov
cmpsb
jbe
pop
pop
add
sub
icebp
bound
pushf
and
sbb
mov
mov
mov
popf
repz
mov
push
inc
mov
jbe
pop
fildll
mov
cmp
inc
repnz
divb
xor
sub
cmp
arpl
icebp
add
stos
dec
outsb
xor
ss
bound
pushf
lahf
xor
loope
in
mov
jns
mov
push
or
out
and
jle
xchg
gs
test
in
xor
test
push
push
push
fwait
lret
jo
jge
push
shlb
test
inc
test
xchg
adc
mov
jne
push
nop
fcmovnb
pop
push
cmpsb
sub
je
xor
mov
jmp
js
adc
adc
cmp
cmp
cmpsl
mov
ret
pop
and
faddl
rorb
js
scas
sbbb
out
xor
fstl
in
and
xor
sarb
addr16
pop
and
jmp
out
jne
jnp
popf
jge
add
cmp
std
outsb
jg
push
movl
pop
fsubl
pop
imul
jns
inc
pop
cmp
xchg
push
xlat
push
iret
lods
iret
sar
inc
xchg
imul
pop
mov
add
dec
fbstp
scas
xchg
test
mov
ja
xor
push
cld
mov
xchg
arpl
adcb
test
cmovns
sub
jne
xchg
cltd
pop
imul
fbld
sub
cmp
mov
xchg
lea
xor
mov
or
repnz
cmp
adc
xchg
sub
rcll
sbb
or
popa
dec
fwait
cli
popf
and
fcomps
push
jne
cli
pushf
and
mov
pop
fdiv
and
mov
sub
add
cmc
dec
flds
stc
sub
jle
mov
cmp
insl
out
xor
pop
mov
scas
pop
stos
stos
sar
sahf
add
lret
and
bound
ficompl
icebp
pop
lds
xchg
jae
fprem1
dec
pop
fstpt
dec
int3
adc
mov
push
cli
iret
cmpsb
stos
cwtl
xor
cmp
jno
bound
pop
int3
test
shll
cmp
repz
daa
fldcw
xlat
out
add
mov
mov
daa
lret
in
adc
push
mov
shl
sarb
jno
in
imulb
mov
dec
jae
shll
fs
xor
lods
cmp
outsl
fadds
shlb
sub
cmp
fdivrs
mov
and
fcoml
ret
sahf
gs
popf
sub
les
pop
xchg
add
mov
xchg
push
adc
mov
fldl
int3
push
mov
jl
push
bound
ja
daa
xor
pusha
inc
or
pop
inc
jnp
dec
std
add
add
and
cltd
mov
cs
daa
dec
test
dec
test
sbb
cli
les
loop
cwtl
pushf
jbe
aam
movsb
cmp
or
xchg
push
repz
jp
test
xor
jbe
mov
ret
mov
daa
mov
shrl
movsb
xor
cmp
mov
xorb
xor
scas
adc
cmp
mov
sti
incl
jo
add
and
stos
ret
lcall
fbld
lds
fldt
adc
or
pop
aam
xchg
movsl
fidivrl
xchg
push
push
jb
shrl
test
cmpsb
cmp
xchg
push
push
xchg
lret
movb
inc
enter
insb
cmp
cmpsb
jne
addr16
and
and
or
mov
fmul
sbb
add
xor
inc
xchg
mov
xor
test
mov
add
jns
fidivrs
xchg
dec
jo
xor
in
lock
mov
sub
push
adc
outsb
xor
inc
xchg
push
dec
inc
xchg
out
lret
push
push
out
stc
ja
jne
nop
fidivs
jbe
push
ret
xchg
cmp
cmp
popa
inc
cmpsl
or
mov
pop
mov
icebp
cwtl
aaa
ljmp
in
movsb
xor
movsb
push
mov
pop
fistps
push
pop
cld
imul
scas
fists
mov
sbb
sbb
fidivs
cli
and
sbb
inc
pop
push
out
cmpsl
adcl
in
sub
or
shll
popl
scas
inc
mov
popf
ret
inc
int
inc
cmp
mov
cltd
dec
xor
add
lcall
int3
ja
cmc
loopne
insb
sub
hlt
jge
jne
ret
add
dec
add
cmp
fcompl
mov
movsl
inc
fwait
jns
popf
loop
push
ret
lcall
adc
or
sti
mov
adc
mov
jns
adcl
sbb
call
aad
mov
push
bound
popf
out
pop
imul
repnz
int
insb
mov
adc
sub
mov
sub
movb
fidivs
dec
icebp
jge
xor
push
insb
dec
out
fdivrs
addb
sub
adc
sbb
mov
add
xor
jmp
out
dec
cwtl
scas
movsb
xchg
lods
xor
and
lcall
sub
das
out
enterw
jae
push
xor
mov
and
jae
fcoms
mov
std
das
push
data16
sbb
cmp
nop
adc
jge
xchg
ret
lods
ret
xlat
in
jbe
sub
and
pusha
aaa
mov
aas
sbb
sbb
or
and
dec
xor
jl
fwait
push
or
or
pushf
or
xchg
outsb
ret
mov
std
insl
movsb
movsb
in
jo
popa
imul
outsb
fcomps
test
xor
shll
in
cwtl
call
mov
jb
icebp
mov
out
aas
in
enter
das
insl
pop
mov
sbb
daa
sbb
popf
push
popa
cmp
push
jno
pop
pop
in
stc
inc
test
adc
loope
xor
xor
mov
push
lods
or
fwait
add
jg
mov
popa
push
or
loopne
test
shll
clc
cmpsl
mov
repz
imull
pop
cld
mov
push
shrl
push
aas
in
in
les
push
ja
out
dec
dec
dec
push
mov
adc
adc
mov
ss
pop
jne
fsubrs
dec
stos
mov
cmpsl
xor
cmp
sbb
repz
or
dec
icebp
jmp
dec
pop
inc
imul
jno
ja
jb
test
gs
add
mov
stos
insb
push
inc
ret
roll
jmp
sarb
mov
stos
sbb
sub
mov
mov
and
rolb
jmp
sahf
inc
imul
lret
add
pop
repz
xor
inc
cmp
gs
rcrl
testl
sub
cmp
popf
lods
jmp
cmpsl
int
icebp
fs
or
cmp
inc
xchg
movsl
or
out
xchg
push
adc
jne
sbb
inc
adc
pop
fistps
or
cmp
cmp
movsb
xchg
sub
insl
adc
cmp
jo
shr
cmp
inc
xor
in
jno
cmpsb
scas
pop
xor
add
fxch
and
adc
cmpsb
mov
mov
sub
or
addl
or
mov
push
stc
mov
adc
jne
idiv
push
push
imul
sub
jo
lds
aad
ret
repnz
adc
leave
je
push
jae
lods
cld
cmp
mov
loope
insb
mov
ljmp
adc
insb
push
clc
outsl
stc
lea
repnz
cmp
xchg
inc
pop
mov
mov
pop
fimuls
scas
incl
sahf
xor
fistl
nop
out
add
dec
push
loope
cmpsl
inc
cwtl
push
xchg
jg
push
or
mov
pop
out
mull
ds
add
je
stos
movsb
inc
pop
cli
testb
fwait
sahf
rcl
mov
push
xor
mov
adc
pop
rcrl
shlb
sub
jge
in
test
or
sbb
js
mov
out
out
cltd
dec
adc
bound
das
test
imull
divb
lock
push
sbb
push
or
inc
sub
sahf
sbb
pop
xor
cmp
int3
aas
mov
ret
movaps
fildll
push
inc
repz
notl
lods
mov
imul
int3
sbb
jge
call
cmpl
int
int3
dec
notl
test
call
ljmp
jl
jg
data16
fstps
or
pop
mov
outsb
inc
arpl
int
test
cltd
pushl
jmp
flds
mov
sysexit
mov
xorb
dec
cs
loopne
xor
add
arpl
mov
add
in
add
outsl
and
fldenv
pop
cmp
fisttpll
enter
or
mov
sub
mov
jle
movsl
out
dec
adc
shlb
fdivrl
cmp
lods
bound
sahf
divb
pop
sti
push
sub
sub
jge
pop
sbb
lea
loopne
test
sbbb
std
cmp
dec
mov
mov
mov
push
negl
scas
adc
outsl
aad
push
xor
test
int
lcall
mov
push
push
lea
stos
int
cmp
andb
xchg
and
imul
ss
ret
xchg
xlat
inc
sbb
jno
mov
pop
push
mov
push
pop
dec
pop
xchg
arpl
push
std
dec
insb
and
mov
cmp
and
inc
fisubrs
inc
aad
ret
sub
jmp
xchg
pop
cmp
ret
xor
mov
or
or
cmp
and
ljmp
mov
repz
lods
lods
mov
lds
dec
jmp
add
test
adc
ljmp
adc
xchg
rcl
lods
fsubs
jae
scas
test
jecxz
jmp
outsl
pop
loopne
adc
xchg
sar
dec
fnstcw
fcomps
jo
xchg
shlb
cmp
adc
push
iret
lods
cmp
fstps
mov
hlt
fldenv
pushf
je
je
xlat
push
std
cmovle
push
inc
stc
and
mov
inc
outsl
inc
hlt
cmp
mov
mov
clc
dec
int
sbb
mov
jp
cmp
dec
sub
movsb
dec
sub
mov
mov
fcomps
jmp
jo
pop
aam
push
add
adc
push
ja
push
cmp
lahf
pop
push
lock
aas
aas
hlt
jmp
or
imul
pop
test
bound
fxtract
mov
add
xor
cs
scas
jl
push
mov
test
lret
pop
stos
daa
and
lcall
mov
lret
addr16
shll
mov
mov
dec
xchg
out
in
popa
xor
jnp
cmp
adc
test
mov
lea
sub
lahf
pop
iret
inc
xchg
jmp
and
es
stos
xchg
call
mov
lahf
dec
pushf
and
inc
mov
lea
aaa
ja
mov
sbb
rolb
movmskps
movsl
push
cmc
lods
fwait
aas
mov
cld
movsb
inc
mov
xor
in
adc
push
enter
lock
xor
push
jp
dec
cltd
push
sbb
xchg
pushf
dec
fidivl
clc
push
and
jge
sbb
hlt
rcrl
neg
int
test
or
xor
jo
test
fdivrs
cld
shrl
inc
lret
push
imul
jecxz
fsubs
out
adc
mov
inc
pushf
inc
cmp
xchg
sbb
outsl
cmpb
xchg
xor
push
cmp
lods
mov
or
test
lods
std
sub
fwait
xchg
mov
int
xor
jns
push
lods
pop
or
cwtl
sub
out
dec
mov
ret
pop
mov
sub
jb
int3
and
mov
pop
cmpsb
add
push
cmp
push
movsb
push
data16
mov
idivb
test
jno
bnd
jbe
xchg
cmc
fdivs
push
dec
outsb
cmp
mov
sbbl
cmp
cmp
mov
into
sub
gs
sbb
pop
lcall
stc
dec
cwtl
aaa
xor
mov
das
aaa
sub
loopne
decb
cmp
orb
rclb
jge
lret
dec
pop
pushf
xor
xchg
adc
cmp
sti
lea
mov
xor
movsb
xchg
addr16
bound
xor
pop
or
sti
cmp
sub
cmpsl
jns
dec
repz
shll
or
sbb
movsb
orb
ss
movsb
xchg
cmp
inc
das
rcll
decb
jno
stos
and
icebp
arpl
pop
das
jle
push
pop
xor
std
adc
sbb
adc
cwtl
icebp
movups
mov
ljmp
imul
add
mov
sarl
ljmp
hlt
out
idivl
fcoml
jp
xchg
stos
ds
xchg
out
mov
xor
xchg
aaa
and
outsb
xor
ja
in
push
scas
mov
test
or
notb
cmp
adc
dec
addl
cmp
call
xchg
jle
clc
pop
add
jg
cmp
jmp
dec
fdivrl
call
cmpsb
mov
or
dec
nop
addr16
sub
dec
js
aaa
jl
outsb
ss
insl
inc
lcall
mov
sbb
mov
lods
lret
or
or
fiadds
jno
mov
bound
jg
push
mov
push
stc
sub
add
jle
add
outsl
stos
lods
or
cmpsb
cld
icebp
jp
loop
repnz
adc
stos
out
pusha
add
popf
xchg
call
push
pop
xchg
inc
std
stc
lods
cmpsb
lcall
fistpll
sete
pushf
mov
and
les
mov
enter
mov
dec
aad
adcb
xchg
enter
cmpsb
dec
fwait
gs
inc
std
outsb
xchg
sbb
shrl
bt
mov
jbe
cwtl
xor
out
or
lock
mov
mov
mov
fwait
inc
fistl
hlt
rcrb
movsb
cli
shrb
mov
pop
mov
fistpll
rcr
rcrl
clc
mov
pop
lret
mov
jb
push
test
mov
mov
mov
out
cmp
aaa
jge
jo
addr16
dec
js
jmp
pop
jb
into
leave
xor
clc
aaa
or
stc
ror
adc
xchg
mov
jo
cwtl
scas
dec
xchg
cmp
mov
push
sub
adc
xor
inc
movsl
mov
xchg
or
cli
and
icebp
jp
in
sbb
hlt
shll
or
mov
adc
sarb
fidivrl
fst
push
aaa
stc
mov
xchg
mov
frstor
jge
idivl
pusha
sub
es
das
loopne
push
ret
adc
push
dec
or
orl
mov
sub
fnsave
mov
shlb
adcb
mov
xlat
pusha
xchg
push
iret
adc
sbb
movsl
jg
mov
inc
ret
jne
rol
jmp
dec
xlat
mov
and
fs
inc
or
out
fildl
call
cmp
insb
push
imul
pop
cwtl
jle
inc
sti
dec
shlb
or
or
sub
xor
sbb
push
mov
das
js
sbb
adc
add
push
outsb
push
lock
adc
fsubl
sahf
adc
and
xor
push
out
xchg
lret
dec
insl
jno
aad
mov
xchg
xchg
add
pop
popa
inc
test
mov
and
dec
js
fwait
dec
cmc
sub
inc
fiaddl
push
scas
adc
inc
sub
push
push
xor
mov
ja
stc
in
mov
out
xor
addl
dec
popf
out
xchg
push
imul
cmp
jg,pn
ret
cli
sar
ljmp
jmp
repnz
pop
out
cmc
lods
sub
lock
out
pop
xorl
inc
and
dec
sbb
out
mov
stos
cmp
mov
pop
int3
lahf
into
push
xchg
inc
push
and
imul
roll
outsb
mov
adc
lret
ds
lret
cmc
bound
pop
icebp
out
movsb
sbb
clc
leave
lock
push
adc
mov
jo
or
or
push
inc
mov
push
add
test
fdivl
fisubrl
imul
dec
push
cmc
and
mov
imul
dec
cmp
dec
sbb
roll
dec
adc
rep
xor
adc
scas
movzbl
test
inc
std
add
adcb
dec
pop
and
inc
xchg
fisttpl
push
xchg
fnstcw
push
fsts
addr16
dec
xchg
pop
jnp
into
dec
add
stos
shll
dec
adcl
arpl
and
mov
jae
push
and
ds
mov
decb
ror
adc
pop
subps
mov
push
add
loope
xchg
sbb
push
and
jo
jb
daa
xchg
fwait
jecxz
ficomps
add
dec
dec
js
jb
or
pusha
or
fs
push
out
jmp
sbb
mov
jg
adc
xchg
mov
test
sti
dec
pop
outsb
and
shll
pop
push
or
cli
pusha
aad
or
lods
or
mov
mov
int3
cli
pop
jg
cmpl
inc
mov
jg
js
outsl
clc
and
or
js
dec
mov
mov
mov
mov
ja
jle
shlb
enter
in
cwtl
std
jbe
movsl
mov
fucomi
outsb
rcrb
shlb
push
test
sub
pop
insl
clc
sub
sbb
push
mov
fmull
hlt
loope
push
push
jo
or
fbstp
dec
cltd
xor
pop
das
sar
cmp
repz
sbb
das
jp
push
inc
mov
pop
fimuls
std
nop
std
out
cmp
push
cli
lods
add
pop
xchg
adc
and
leave
xchg
push
mov
sbb
adcb
mov
push
pop
orb
adc
mov
loop
add
loope
dec
insl
dec
imul
fisttpll
cmpsb
cmc
bsr
sbb
into
xlat
or
bound
add
loop
sarb
sbb
mov
xor
cmc
pop
push
sub
push
jecxz
inc
bound
gs
cld
out
xchg
cmp
mov
je
ja
xchg
jp
push
aad
into
push
mov
pop
xor
push
sbbb
mov
mov
sbb
int
cmp
lock
push
data16
js
ret
dec
popa
pop
xlat
icebp
mov
jne
sbb
mov
sbb
add
popf
and
jnp
pop
daa
in
out
mov
ja
cmp
xor
mov
push
testb
mov
xchg
pop
push
repz
sbb
jns
cwtl
ret
sub
jge
mov
mov
push
adc
sub
les
lds
in
jo
ljmp
stos
jp
xor
call
mov
sbb
fdiv
add
push
test
jl
xchg
fcomps
pop
lea
aam
jge
mov
leave
dec
lods
jno
dec
mov
dec
mov
popf
mul
xor
out
shr
gs
inc
fsub
lcall
in
les
outsb
es
sub
xchg
lods
fisttpl
cltd
iret
or
cmp
std
idiv
loopne
test
jmp
mov
into
iretw
cmp
repnz
cli
xor
mov
mov
push
jo
bnd
fistps
out
pop
shll
xchg
cmp
pusha
jl
aam
insl
pop
inc
pop
lcall
mov
mov
int
pop
in
in
sub
jo
pop
mov
loopne
pop
cmp
or
xchg
adc
mov
std
test
inc
jbe
out
mov
hlt
pop
mov
aam
test
jns
sub
or
dec
jb
test
sub
subl
imul
ret
into
iret
mov
leave
xchg
add
cmp
outsl
popa
fadds
sbb
mov
test
sahf
clc
icebp
or
adc
repnz
movsl
std
shlb
stc
push
imul
sbb
rorl
imul
orl
inc
daa
sbb
sub
push
stos
enter
dec
lds
lahf
ss
dec
inc
jl
fsub
lock
insb
stos
fnstenv
dec
cmp
in
aaa
push
push
lcall
mov
mov
shlb
push
xchg
inc
lcall
inc
insl
jge
outsl
mov
std
mov
sbb
inc
jg
dec
mov
cmc
jge
xchg
dec
push
sub
jmp
mov
inc
sbb
scas
cmp
lahf
movsb
xor
add
mov
mov
leave
jbe
add
call
mov
ljmp
lret
xor
outsb
sub
xchg
clc
cld
cmp
pushf
inc
call
out
imul
or
push
pop
xor
add
insb
and
dec
jge
ja
ja
jmpw
jns
cmp
mov
test
pop
cmpsb
fistps
mov
call
push
mov
insl
cmpsb
out
jnp
loope
inc
test
sbb
popf
sub
fistpl
subl
aas
mov
jmp
ss
mov
lret
add
cmp
bnd
and
int
mov
mov
sbb
out
and
add
lahf
add
or
sahf
jo
and
mov
mov
ror
enter
ss
adc
jns
ds
pushf
out
ss
pop
fwait
xchg
jg
gs
xchg
push
mov
and
push
outsb
mov
mov
fld
outsl
adc
dec
pop
pop
out
cmp
es
popf
or
add
out
push
xchg
mov
adc
je
mov
fistpl
and
subl
cmp
pop
lret
notl
pop
xchg
pop
push
jbe
cmpb
sahf
push
and
pop
loopne
loop
jne
pop
push
in
mov
fwait
mov
adc
les
mov
pusha
lods
movsb
jp
std
lea
ret
pop
ljmp
mov
adc
iret
jno
sbb
in
xchg
mov
int
mov
lret
out
pop
enter
xchg
mov
imul
cli
lret
dec
inc
mov
xor
mov
push
jl
sub
ret
mov
cmpsl
insl
imul
xchg
fistpl
dec
mov
sub
pop
negl
sti
mov
jo
mov
cmp
sub
addr16
adc
scas
data16
in
xchg
add
pop
cmp
push
out
cmp
adc
test
iret
push
sub
not
dec
cwtl
inc
addr16
sbb
and
in
cmp
mov
ror
rclb
sub
xor
nop
ret
xchg
in
dec
pop
dec
int3
dec
xchg
loop
pop
popa
mov
mov
cmc
pushf
in
sub
mov
and
call
ret
dec
rcl
into
push
test
movsl
mov
jns
iret
cmpsb
dec
lods
push
lret
add
sub
mov
mov
cmpsb
test
iret
sbb
fsubr
adc
xchg
fcompl
xchg
out
cmp
nop
dec
add
sub
sub
rcrl
xchg
jbe
add
inc
mov
orb
pop
lcall
add
mov
negb
xlat
adc
sub
cmpsl
push
faddl
jbe
in
dec
in
inc
bound
push
inc
movsb
sbb
scas
or
or
xchg
imul
fmuls
push
rcrb
pop
mov
mov
in
mov
and
fcmovu
bnd
icebp
inc
mov
testb
aad
icebp
xor
sti
aam
cmp
arpl
int3
jo
dec
xlat
out
or
int
inc
dec
pop
repnz
ss
mov
int3
les
stos
rcrl
xchg
add
scas
call
cmp
mov
pop
adc
sbb
aad
push
adc
jle
dec
dec
outsb
sbb
insb
push
movsl
xor
jno
add
popf
aas
sub
testb
sbbl
add
xchg
mov
jae
jae
imul
pushf
xchg
insb
pop
fdivs
or
mov
cmp
in
stos
inc
sub
imulb
push
xchg
in
out
push
cmp
sub
fcmovnbe
and
jae
pop
sbb
stos
xlat
stos
sbb
inc
negb
sahf
stos
movl
cmp
ss
dec
and
aad
js
jecxz
inc
push
or
stos
dec
push
pusha
jmp
sahf
mov
pop
lods
inc
pop
add
jge
sub
xor
cmp
and
xor
movsb
and
dec
inc
lods
mov
dec
mov
jbe
and
and
adc
mov
ja
jl
es
lds
and
adc
cmp
mov
rcrl
loopne
fldenv
pop
mov
nop
or
cmp
push
std
dec
lods
pop
push
or
out
dec
jge
fxch
mov
imul
mov
int3
lods
mov
xor
jae
popl
mov
movsl
out
or
imul
outsb
pop
push
lret
jne
adc
xchg
lock
pop
and
mov
fwait
cli
or
idivb
out
dec
rcr
cmp
jne
fisubs
pushf
add
sub
lds
into
xchg
fnsave
into
xchg
push
sbb
mov
je
loopne
cwtl
mov
sbb
push
pop
dec
pop
mov
addr16
pop
rcll
mov
xor
sbbl
in
dec
and
sbb
es
dec
les
popa
sbb
in
jmp
stos
cwtl
movsb
jecxz
cmp
je
or
ret
mov
push
je
mov
nop
mov
sub
cmp
sub
daa
ja
inc
mov
cmpsb
cmc
test
cld
pusha
xchg
scas
dec
cmp
cmp
mov
stos
mov
lcall
jno
out
pop
hlt
and
inc
sbb
pop
mov
ret
fnsave
or
fists
int3
cli
or
cmp
lock
loope
lds
xor
mov
testb
cs
aas
and
iret
push
cmp
fwait
sahf
pop
jmp
cmpsl
pop
mov
sbb
pop
cmp
sbb
bound
add
xchg
mov
add
push
add
push
lods
jle
das
jmp
pop
imul
outsl
sbbb
shll
mov
outsl
je
sub
mov
mov
sbb
pop
in
cmp
es
outsb
jecxz
stos
mov
in
dec
in
test
sbb
add
xorl
cltd
jg
iret
mov
mov
arpl
lock
push
sbb
loope
mov
clc
pop
shrl
push
cld
nop
sarb
into
cmc
loopne
test
inc
mov
lret
fcoml
push
out
mov
push
in
jnp
adc
test
int3
push
dec
inc
movl
gs
es
lea
add
cmp
aaa
hlt
push
mov
aam
inc
inc
sbb
mov
pop
inc
pusha
mov
adc
pop
lcall
je
mov
fisubrl
add
pop
push
jne
mov
cmpsb
mov
mov
inc
adc
push
pop
adc
out
shlb
in
mov
repz
pop
xchg
add
or
push
pop
mov
testl
cmpsl
cmpsl
imul
inc
scas
aaa
cmc
jle
mov
in
xlat
lea
cmp
mov
popf
xor
das
loop
aas
push
fidivs
inc
subl
stc
jne
pop
xchg
inc
aad
outsl
fstl
stos
push
ret
xor
outsl
js
mov
lcall
scas
and
mov
add
xor
aad
aas
add
jb
stos
rolb
push
jo
fwait
and
xor
sub
jl
push
fs
outsb
xchg
outsb
fsubrl
enter
andl
jge
jl
sbb
lods
xchg
sbb
inc
es
dec
xorb
fisttpll
leave
adc
fnstsw
and
rcrb
sahf
insl
pop
jmp
push
outsl
les
mov
divb
xor
loopne
lds
ss
adc
nop
mov
mov
jns
push
sbb
lods
cli
adc
std
adc
test
movsl
hlt
pop
add
cmp
popl
testb
inc
sarl
sahf
jl
cmp
enter
lahf
xchg
sbb
sub
pushf
mov
int3
mov
xchg
add
movsl
jg
jmp
jge
and
mov
test
sbb
popa
in
fwait
adcl
mov
gs
adc
and
mov
push
push
dec
or
jle
or
sub
into
mov
std
es
fdiv
fistl
jg
dec
fimuls
push
jl
and
cmp
or
lahf
loop
pusha
push
cmp
xchg
add
lcall
jne
jmp
orb
outsb
pop
sbb
inc
push
and
push
sahf
lcall
dec
jge
imul
in
sti
and
jp
test
ja
xchg
sbb
popa
add
cmpsl
mov
add
inc
or
xor
subl
popf
mov
xchg
mov
push
mov
inc
push
ja
mov
popl
mov
test
pusha
xchg
ficoms
pop
sbb
mov
lcall
pop
lret
and
pop
add
fdivl
rcr
push
mov
test
loope
and
ret
in
sarb
fistpll
xor
fcmovnbe
push
dec
mov
lcall
xchg
mov
sbb
and
add
sbb
mov
insl
cmpsl
jbe
mov
or
pusha
or
test
sub
loop
aad
vpackssdw
or
lods
mov
mov
adc
jmp
imul
lahf
imulb
sbb
add
bound
test
jecxz
loopne
push
setbe
leave
sub
mov
add
inc
pop
push
sub
das
hlt
in
xor
jno
pop
jne
scas
das
add
mov
add
test
lock
test
sbb
push
jmp
or
mov
insl
mov
pop
andb
sub
cmpsb
or
cltd
je
inc
test
je
jmp
cmp
jo
and
fisubrs
fiaddl
pushf
push
cltd
cmp
cmp
mov
pop
and
cmp
push
out
je
or
jg
mov
dec
push
testl
fs
arpl
dec
fcmovnu
outsb
sub
out
arpl
notb
stos
cld
popa
gs
push
dec
pop
outsl
push
inc
adc
xchg
pop
xchg
cmpsl
repnz
jp
mov
sbb
stos
cltd
insl
rcr
xor
fbstp
aam
daa
mov
in
mov
pop
fimuls
popf
aaa
mov
data16
pop
loope
jne
xchg
dec
xor
jnp
mov
loopne
jb
sbb
arpl
sbb
std
insb
mov
into
call
mov
loop
nop
sbb
xor
pop
es
cmpb
mov
mov
mov
adc
stos
mov
adc
testl
xor
hlt
sbb
lret
lret
push
fmuls
jb
mov
jmp
mov
and
mov
adc
sahf
dec
xchg
test
enter
mov
out
lea
inc
loope
test
fs
out
fildl
mov
inc
mov
scas
lock
addb
aad
lret
out
test
xchg
into
mov
push
add
les
js
ja
add
fisubrl
inc
cmpsb
repnz
lock
jmp
movsl
jge
fwait
loope
jmp
lock
jmp
and
out
stos
negb
es
cmp
adc
adc
cmpps
daa
orl
dec
dec
mov
fildll
arpl
mov
inc
shr
in
popf
jns
fdivrp
arpl
dec
sahf
add
dec
gs
out
test
decb
inc
and
leavew
and
xchg
xchg
push
and
xor
inc
xor
sbb
pop
ljmp
ret
mov
scas
adc
push
loopne
mov
push
push
sysexit
mov
inc
sbb
cmp
shl
ss
xchg
adc
lret
or
xchg
pushf
fcompl
iret
lock
add
cmp
flds
in
cmp
xchg
push
dec
pop
imul
pop
inc
jbe
fwait
mull
insl
push
sub
mov
out
ljmp
loopne
sti
iret
jl
unpckhps
mov
lods
pop
enter
aad
adc
test
push
add
je
mov
jg
xlat
and
push
cmpsl
add
inc
fiadds
fnstcw
fists
in
add
js
push
dec
loope
cs
lods
or
and
std
or
ljmp
mov
dec
fcom
mov
repnz
pop
shrl
mov
arpl
iret
pushf
fwait
aas
jecxz
ret
loopne
shrb
hlt
xchg
push
scas
xchg
add
push
jle
sub
mov
xchg
mov
adc
push
inc
shlb
mov
aam
gs
sub
push
push
cmp
fisubrs
mov
push
inc
ret
aad
orb
imul
or
sub
iret
xchg
mov
push
iret
cmp
or
mov
lock
ss
lret
leave
addr16
sarl
adc
inc
cld
and
mov
mov
dec
mov
mov
pop
mov
dec
cmp
mov
int
stc
pop
cwtl
repz
jb
mov
cld
sub
pushf
les
aam
adc
ret
stc
pop
pop
mov
hlt
xchg
das
jns
push
sbb
jg
pop
cmp
fiaddl
mov
jnp
je
mov
out
sti
and
out
test
jns
stos
ljmp
add
outsl
int
xor
ss
rolb
and
mov
mov
add
aam
or
popf
lea
test
out
hlt
add
loopne
dec
icebp
adc
sub
jle
mov
aaa
pusha
pop
test
nop
mov
push
sbb
dec
sub
or
stos
cmp
sbb
sub
mov
add
fst
pop
inc
xor
shr
push
hlt
aas
stos
xchg
dec
pop
out
divl
popa
push
aaa
or
call
mov
rcrl
enter
or
add
lret
insb
xchg
fldl2t
jmp
insl
xor
xor
add
mov
int3
mov
jno
and
clc
out
xor
mov
push
sbb
call
sub
mov
repz
dec
xchg
loopne
xor
orl
push
add
xor
ljmp
out
xchg
fs
mov
push
mov
adc
and
mov
push
popf
out
push
dec
and
ljmp
cld
rorl
mov
aaa
cltd
mov
pop
inc
mov
push
aad
jno
in
sbb
mov
pop
in
fucom
sbb
mov
push
je
lret
push
stos
daa
xchg
xchg
mov
lahf
ds
ja
ret
sbb
lret
imull
cmp
jns
add
xchg
testb
iret
mov
shr
mov
lods
test
push
fiadds
lahf
int3
mov
in
mov
movsb
adcl
mov
sub
mov
sbb
sub
dec
xlat
sub
adc
stc
pop
pop
sbb
add
mov
sub
add
cmpsb
dec
out
jb
push
jmp
mov
and
mov
daa
imul
or
xlat
shr
push
fs
out
or
stos
sub
clc
ja
sahf
add
aad
cld
or
imul
jae
enter
xor
dec
sub
pop
fwait
rcrl
xlat
push
out
imul
mov
popf
arpl
clc
xchg
inc
adc
pop
mov
pusha
iret
ret
mov
mov
xor
clc
add
movsl
mov
jg
rclb
andl
into
ret
cwtl
jle
push
in
insl
and
mov
shlb
sbbl
adc
sbb
cltd
dec
cmpb
stos
sub
addl
insb
adc
addr16
xor
cmpsl
in
mov
xor
jne
dec
js
mov
addr16
or
xor
cs
rorl
adc
mov
idivl
jge
cmp
adc
shl
mov
push
ret
cmp
cmp
jmp
roll
jl
rcl
in
cmp
gs
and
int
sub
cmp
cmpsl
orl
xchg
lahf
aaa
shlb
jae
jge
cmp
out
lods
pop
cmp
push
cmp
mov
jns
pop
out
orb
bound
pop
or
push
movsl
mov
loope
pusha
setbe
mov
jmp
rcr
cmpsl
xchg
dec
hlt
out
push
ficompl
dec
movsb
out
inc
cwtl
mov
adc
and
sarb
data16
cli
in
fdivrl
subl
std
pop
subl
add
fnstsw
pop
test
insl
pop
push
fidivs
nop
xchg
lahf
sahf
pop
repz
sub
popf
adc
dec
mov
das
dec
and
cmc
jne
jp
and
xchg
pushf
fs
and
dec
aad
scas
sub
jg
push
inc
xor
jle
jnp
or
inc
cmp
dec
push
mov
push
scas
jno
dec
movsb
mov
and
movsl
pusha
ret
jo
add
scas
push
pushf
leave
sar
lret
xchg
scas
cmp
lds
out
add
iret
ljmp
bound
sbb
and
or
adc
xor
rcr
imul
jo
xchg
pop
rcll
loop
sub
ds
sarb
jb
hlt
add
mov
mov
lea
jl
add
dec
jbe
xor
and
in
pop
sbb
adc
lds
push
data16
js
sbb
addr16
jns
outsl
mov
out
outsl
or
pop
pop
jmp
call
dec
xor
add
add
in
mov
jo
shlb
mov
lret
mov
cmp
iret
jae
lahf
popa
ds
push
sbb
fwait
push
shl
xchg
les
xchg
mov
jge
mov
in
popa
mov
clc
leave
test
mov
push
aam
lahf
out
lods
fwait
jae
add
nop
mov
andb
rcll
push
cmpl
in
pop
adc
dec
mov
pop
push
mov
cmpsb
out
ja
mov
xchg
pop
icebp
add
das
iret
lds
push
cmp
cld
jp
imul
aam
cmp
cmp
dec
cld
xchg
sbb
xchg
inc
and
xlat
cmp
pop
push
ret
imul
outsb
pslld
xor
xor
sub
in
add
or
adc
jp
xor
lret
cmp
lea
out
in
xchg
mov
mov
and
fbld
inc
int
out
and
jnp
mov
mov
in
push
dec
out
movsl
cmc
pop
mov
mov
push
jb
test
jno
dec
das
sbb
inc
or
cwtl
dec
cmpsb
sub
xchg
aas
sub
mov
push
fwait
pop
push
mov
pushf
xchg
push
mov
out
pop
push
je
xchg
push
cmp
add
push
push
sbb
xor
push
mov
dec
push
cmpsl
rorb
stc
fwait
mov
sub
inc
das
mov
add
lods
add
or
ret
push
rcll
cli
iret
mull
inc
das
movsl
xor
ljmp
xchg
pusha
fdiv
scas
rcr
leave
cs
lods
mov
fistpl
pop
sbb
xchg
lds
adc
in
and
or
cmpsl
insl
mov
fdivrl
stos
imul
out
xor
cmp
mov
out
cld
addr16
icebp
and
in
xor
leave
out
mov
in
jmp
or
jecxz
jne
js
repnz
pop
insb
je
cmpb
mov
mov
imul
orl
shl
sub
adc
aad
add
mov
cmp
cwtl
pop
dec
sub
mov
out
xor
sub
test
or
push
inc
sarb
icebp
jge
testb
rep
pop
push
decl
hlt
sbb
push
ret
notb
loop
test
mov
rcrl
pushf
mov
adc
ds
fsts
xor
ret
iret
insl
out
pop
inc
lods
les
nop
pavgw
pop
out
pop
sub
jbe
xchg
adc
in
pop
mov
int
jae
cmp
insb
dec
dec
add
push
inc
mov
das
leave
jl
xchg
inc
mov
shrl
xor
jg
idivb
int3
inc
push
lret
addr16
dec
or
push
add
inc
cmp
jno
cmp
jo
mov
mov
mov
or
ds
fisttpll
mov
sahf
cltd
xor
inc
cmp
daa
add
aaa
imul
sbb
loop
mov
and
sbb
sbb
ja
dec
stos
mov
push
dec
loop
les
ror
add
in
add
add
pop
rorl
mov
les
les
inc
push
rorl
or
pop
shll
or
test
daa
push
test
cwtl
mov
js
mov
pop
ljmp
in
xchg
adc
mov
or
inc
pusha
cltd
arpl
and
fistl
jb
or
pop
lds
xchg
and
in
sbb
stos
out
jmp
outsl
cs
mov
repz
scas
movsl
mov
sub
ret
xchg
inc
jo
lock
test
mov
sub
dec
lret
stc
popf
imul
adc
orl
xchg
fmuls
dec
adc
nop
cli
sub
xchg
mov
cs
mov
or
fldl2e
pusha
sbb
jns
cmc
push
mov
xchg
nop
pop
or
xchg
stos
pusha
sbb
dec
pop
lea
cltd
push
and
xlat
add
lret
xchg
loop
dec
mov
ja
pop
movsb
inc
in
jns
pusha
mov
mov
popf
sti
or
cmp
fadds
jno
lods
mov
mov
sub
je
mov
add
ljmp
pop
nop
testl
xor
mov
inc
pop
in
adc
cmp
pop
ret
enter
pop
decb
xor
leave
in
jnp
fsubr
fimuls
int3
shrb
lahf
sbb
mov
pop
aad
and
xchg
lods
and
pop
cmp
in
cmp
add
jbe,pn
fiaddl
clc
jl
int3
sbb
fdivrp
sbb
mov
adc
push
pushf
add
sbb
fbld
push
mov
daa
push
stos
stc
xor
pop
in
int3
lea
adc
lret
in
hlt
push
push
and
aad
push
adc
sbb
add
push
sar
int
sbb
int3
adc
xchg
aad
cmp
fcomps
stos
or
repnz
in
xchg
pushf
nop
pop
outsb
jne
add
and
adc
xchg
fstps
insb
aaa
out
and
inc
imul
push
stc
cmp
stos
ret
pop
dec
hlt
mov
pop
jl
jg
cwtl
mov
pop
pop
call
loope
hlt
inc
push
test
or
xor
scas
aam
sbb
push
mov
mov
std
xor
mov
call
daa
test
in
or
sahf
mov
cs
inc
movsb
js
ret
jnp
movsl
xor
adc
xor
test
lea
pop
ja
es
pop
jne
call
in
lods
rcll
fisubrs
fistl
xor
adc
int3
cmp
pop
dec
sbb
cmp
shll
push
aam
leave
aam
addb
mov
lret
lds
jns
ret
xchg
aaa
aam
dec
inc
stc
das
add
lods
addr16
push
lock
sub
push
xorl
and
mov
mov
ds
mov
dec
dec
cli
repnz
roll
mov
repz
nop
mov
fsubl
jmp
movsl
mov
test
aam
adc
mov
cmc
fwait
push
in
cmp
fdivrl
mov
lcall
mov
mov
insl
jne
lcall
out
jno
jbe
jae
mov
clc
push
cmp
mov
mov
cld
jns
rcrb
mov
mov
es
jnp
daa
push
jg
mov
mov
dec
push
sub
push
add
and
dec
mov
mov
sub
push
mov
inc
popa
mov
lahf
and
dec
inc
dec
and
ja
ds
inc
sbbl
inc
aam
xchg
mov
movsl
ljmp
cmp
imul
std
xchg
mov
ret
adc
aad
cmpl
jno
dec
ss
or
jo
repz
sbb
imul
inc
and
rcll
pop
mov
int
in
repz
cs
adc
fisttps
call
push
sub
stos
xorb
mov
std
pop
scas
mov
or
xor
arpl
dec
popl
mov
inc
xchg
mov
mov
adc
das
das
icebp
popa
test
mov
mov
mov
inc
cmpsb
cwtl
add
pop
lods
sub
push
jnp
mulps
in
dec
hlt
xchg
dec
pop
push
fidivl
xchg
add
cmp
add
jle
cmp
sub
out
ret
outsb
dec
mov
jne
lods
xchg
pusha
jl
xor
test
in
push
jge
sub
sahf
imul
inc
dec
outsb
add
test
imul
insl
je
cs
dec
push
ss
ljmp
ror
and
daa
imul
sbb
or
std
or
fildll
cmp
dec
push
mov
mov
sarl
dec
and
dec
ja
movsl
dec
jmp
or
jae
icebp
xchg
es
mov
pop
jmp
aam
repnz
cmp
arpl
out
sbbl
mov
inc
lds
mov
xchg
cld
xchg
test
or
or
dec
sbb
std
sti
in
es
xchg
dec
push
mov
pop
sbb
or
fisttpl
jne
sar
jg
cli
out
dec
xchg
sbb
out
jne
ficomps
imul
insb
cmp
sbb
lock
push
cmc
cli
jnp
mov
xchg
inc
adc
sub
mov
sbb
stos
jb
mov
out
fsts
in
and
jmp
sti
jle
aas
out
add
inc
test
fisubl
push
bound
fadds
mov
add
inc
sbb
xchg
lahf
ss
pop
lea
insl
mov
push
aad
pop
pop
inc
inc
lret
xchg
fstl
fistl
outsl
sub
push
nopl
addl
fstps
mov
jg
mov
in
push
in
xchg
push
idivb
cmpb
xor
xchg
mov
sub
out
sub
adc
jp
add
cmp
lcall
adc
cmp
in
dec
push
mov
cld
add
addr16
xor
fsub
inc
aad
test
lret
jle
adc
adc
lods
mov
pop
mov
test
int
adc
cmc
test
cmp
inc
push
es
data16
decl
fwait
mov
xor
lods
adc
adc
cltd
or
pushf
add
not
push
mov
pop
push
std
mov
lock
out
pop
xchg
aad
jo
dec
hlt
jbe
loopne
outsl
mov
scas
add
mov
xchg
icebp
mov
aas
and
xor
cmp
fistl
mov
aad
xchg
mov
xchg
and
push
add
repnz
es
cmp
out
fnstenv
xchg
push
insb
sbb
adc
les
sbb
iret
pop
hlt
ds
add
orl
mov
bound
add
adc
fs
jae
or
jp
sbb
jg
sahf
clc
inc
fs
loop
cld
outsl
push
cmp
in
push
repnz
or
pop
movnti
dec
ror
es
out
xchg
cs
in
xchg
psraw
sahf
add
adc
js
or
fcom
dec
mov
cmp
lea
subb
nop
cmp
pop
cmp
mov
enter
xchg
insl
mov
or
das
arpl
cmp
ljmp
pop
xor
hlt
mov
scas
scas
push
into
stc
dec
movsb
imul
sbb
movsb
xchg
sub
lcall
in
in
xchg
mov
xchg
cmova
dec
ror
stc
rcrb
es
add
adc
addr16
inc
sub
mov
into
in
push
andb
std
fs
inc
int
dec
pop
inc
xchg
jae
xchg
mov
pushf
sti
rcr
rcrb
mov
and
imul
mov
push
add
dec
push
mov
adc
xchg
lcall
test
push
adc
fcomi
pop
insb
imulb
mov
cli
call
mov
repz
in
xlat
mov
xchg
push
sbb
lock
mov
sub
xchg
outsl
jae
jmp
and
sarl
cmpsb
js
mov
adc
fwait
push
test
xchg
lcall
cltd
or
jg
fidivrs
movsb
out
inc
sbb
mul
fwait
dec
sbb
js
sbb
pushf
aad
icebp
dec
in
ja
into
mov
in
push
xor
xchg
in
xorb
xchg
in
inc
push
pop
cld
cltd
stc
notb
mov
ljmp
mov
movl
lcall
adc
cld
push
mov
mov
loope
lret
icebp
cltd
ret
data16
push
push
inc
sbbl
shll
adc
pop
inc
mov
aad
jns
lcall
cli
test
in
pop
xor
jge
jno
iret
dec
xchg
fisubl
or
cli
inc
cmpb
add
dec
popa
sub
xor
pop
xchg
shll
pop
pop
sub
stos
xchg
pop
push
rolb
aam
add
mov
add
scas
imul
xor
lods
mov
cmp
cmp
add
and
inc
mov
daa
jge
cmovnp
stos
mov
stos
mov
dec
jle
cmpsb
test
or
push
loop
shll
cmove
push
dec
pop
frstor
fdivrl
repnz
gs
call
push
nop
popa
mov
addb
loopne
fidivrs
ficoms
sahf
dec
cld
mov
sub
inc
mov
lock
mov
mov
lock
or
mov
lahf
lcall
sahf
sub
cmp
jecxz
test
adc
cmc
push
adc
test
das
xchg
in
and
sbb
dec
push
mov
test
stos
cld
pop
aas
xor
mov
aad
jae
mov
test
adc
inc
stos
cmp
ss
dec
fidivs
sub
add
add
sbb
or
jns
dec
jno
inc
jp
test
jno
adc
rorl
lock
inc
mov
sub
rol
pop
in
test
xchg
icebp
mov
xchg
mov
icebp
into
xor
inc
mov
out
das
jns
pop
vmovups
shl
sbb
pop
mov
pop
sub
cld
das
push
add
xor
sub
xchg
sub
add
push
push
ljmp
or
push
lcall
inc
pop
js
jo
leave
add
cmp
idivb
cltd
mov
xor
inc
mov
aas
es
ja
mov
ja
push
imul
rclb
dec
in
in
es
jge
mov
inc
call
daa
popa
jns
stos
ja
gs
sahf
and
add
aam
mov
enter
ret
xchg
hlt
xor
subl
sbb
jmp
cmp
pop
dec
add
xchg
jne
push
out
fsubl
mov
lahf
xor
orb
inc
or
or
or
sar
jbe
mov
out
test
and
and
sbb
adc
push
fidivl
xchg
jnp
cmc
fistl
pop
pop
sbb
sub
jmp
jbe
lock
sub
cmp
pop
in
lret
cmc
sti
pop
xor
inc
outsl
fdivrs
mov
aas
int
rcll
mov
jg
push
or
pop
jg
sub
xchg
mov
cmp
cmp
and
pop
shll
xchg
aas
mov
sarb
aad
inc
xor
je
fadds
pop
xor
pop
pop
xchg
cmp
in
clc
enter
cmp
outsl
xchg
jae
jl
jo
dec
fs
pop
inc
cmc
sbb
mov
mov
leave
inc
lret
mov
hlt
jmp
sub
lds
lret
sbb
cli
mov
xor
inc
in
xchg
sbb
cs
and
test
mov
mov
in
das
out
cmpsb
stos
adc
xchg
mov
aas
or
sub
sub
xchg
inc
inc
cmp
xchg
aas
sub
dec
mov
ret
sub
inc
iret
cmpsl
push
jmp
jno
adc
push
out
imul
jns
or
add
and
fstpl
and
addl
roll
inc
test
mov
loope
xchg
push
mov
xor
mov
xor
in
push
inc
cmp
out
jb
inc
sahf
inc
int3
in
sarb
sbb
clc
jecxz
imul
scas
xor
les
xor
loope
adc
lods
mov
mov
dec
mov
cltd
cwtl
inc
jnp
into
mov
out
aaa
xchg
or
lock
cmpsb
mov
cmp
mov
pop
sahf
cmpsl
pop
push
or
stos
sbb
mov
jge
cltd
fcmovnu
arpl
inc
lea
add
rclb
insb
mov
icebp
je
push
cli
pop
cmp
pusha
icebp
mov
xor
pop
sbb
adc
xchg
test
aas
bound
jl
jnp
lds
out
mov
pop
leave
adc
jnp
ja
jle
popf
sub
int3
test
ds
es
data16
xorl
sub
out
push
or
addb
and
das
dec
cltd
mov
aam
test
jns
inc
ds
aas
andb
jns
js
mov
mov
mov
or
outsl
out
rclb
std
and
sub
sti
mov
sub
inc
enter
pushf
ret
add
jne
cmp
mov
imul
ret
xor
sub
mov
jg
fdivp
pop
fstps
pop
ss
repnz
push
add
jno
movsb
jg
adc
test
nop
cmpsb
imul
mov
loop
xchg
cmp
enter
test
and
insl
ja
repz
pop
test
pushf
fiadds
inc
mov
imul
fdivrp
lods
sbb
imul
jg
mov
addl
fwait
jo
notb
in
push
add
imul
mov
cld
xchg
ret
rcr
imull
push
ljmp
dec
jbe
out
popa
pusha
sub
or
cld
inc
pop
popa
cwtl
idivb
lock
ja
add
sub
repnz
mov
inc
inc
push
lock
inc
jp
inc
sarb
iret
jo
and
std
pop
xor
loopne
nop
daa
popf
aaa
mov
push
lea
idivl
out
mov
lret
inc
mov
mov
ja
pop
adc
mov
roll
inc
inc
test
ret
roll
cltd
add
aam
js
outsl
dec
mov
mov
gs
and
int3
mov
adc
jns
fidivrl
mov
dec
mov
fs
pop
ljmp
mov
xlat
mov
decb
xchg
jb
sarb
leave
adc
and
mov
push
adcl
push
dec
adc
inc
rol
js
mov
xor
jmp
adc
inc
jecxz
lahf
mov
aas
inc
xor
lods
sbb
test
mov
popl
xchg
ret
cltd
gs
in
divl
cmp
out
mov
icebp
add
pop
jle
and
sbb
fsts
or
cmc
hlt
jne
or
stos
sub
je
and
jg
nop
lcall
jb
iret
loop
mov
pop
and
repnz
movsl
cmpsb
adc
add
icebp
adc
out
mov
cmp
js
sub
sbbl
sub
xlat
sti
shr
and
or
cmc
push
pushf
xchg
push
inc
jp
jecxz
xor
popa
cmp
insl
lock
cwtl
dec
pop
xchg
fwait
into
shll
inc
sbb
and
add
fdivp
adc
jno
out
fnstcw
xchg
dec
je
mov
shll
mov
dec
sub
scas
sbbl
adc
xor
popa
xor
and
out
out
imul
push
push
or
test
xor
aad
mov
pop
or
imul
icebp
stos
adc
fstl
pop
popa
jo
and
mov
mov
adc
loopne
clc
dec
scas
xchg
xchg
cmc
cmp
es
mov
imul
mov
mov
push
cmp
in
xchg
mov
lock
inc
pop
icebp
mov
pop
lret
xchg
imul
and
hlt
inc
xor
push
lcall
jo
imul
enter
nop
roll
add
cs
out
mov
push
or
sub
out
or
jbe
leave
icebp
shrl
negl
lcall
sub
sub
mov
cltd
ss
cmpsl
mov
sbb
imul
sub
into
popf
insl
xchg
push
out
jl
jge
int
lods
sbb
inc
mov
xchg
sbb
mov
add
jmp
jge,pt
dec
dec
mov
add
pop
or
clc
loop
sbb
xchg
pop
into
lret
in
sbb
dec
imul
dec
add
mov
sbb
insl
mov
push
mov
inc
mov
inc
or
sahf
jmp
insb
imull
iret
subb
out
adc
test
mov
cmpsl
add
out
mov
hlt
imul
cmp
out
push
out
sub
rol
pusha
dec
sbb
orl
lcall
pop
repz
cmp
lahf
mov
mov
lret
rorb
aas
or
sub
cmp
popl
notl
popa
scas
inc
cmp
inc
js
into
push
inc
gs
cld
sbb
mov
loop
out
jb
dec
pop
sahf
xchg
or
mov
add
pop
and
shrl
add
xchg
mov
pop
stos
push
js
mov
popa
xchg
dec
pop
jb
test
lret
std
sti
push
inc
stc
test
jl
sbb
call
mov
das
mov
jb
or
adc
xlat
adc
xchg
popa
jns
loope
in
fisubl
push
outsl
fadds
test
jae
insl
and
jl
out
arpl
outsb
mov
repnz
mov
in
pop
insl
lret
js
movl
and
jle
xor
pop
aam
push
dec
dec
mov
and
ljmp
jge
pop
sub
mov
fisubs
sahf
mov
int3
mov
les
ret
int
or
cmp
scas
mov
sub
mov
sbb
cwtl
lahf
and
pusha
xchg
mov
mov
pop
sub
int
inc
xchg
push
das
pop
lea
dec
clc
nop
leave
mov
arpl
stos
rorb
xchg
ret
jbe
out
test
jp
fstl
push
pushw
mov
jle
lcall
jge
pop
lea
push
and
arpl
fidivs
cli
lahf
into
pop
jae
pop
test
jl
xchg
aam
push
inc
sub
xorl
mov
jns
mov
xchg
push
cld
mov
scas
sub
out
pop
outsb
xor
test
fdivrl
icebp
jmp
jb
pop
cmp
shrb
lahf
leave
pop
aam
xchg
aam
jno
mov
jb
add
xchg
repz
pop
fs
stos
out
ja
adc
xor
mov
sub
dec
mov
aad
aaa
or
sub
mov
add
cmp
add
push
in
xchg
dec
sbb
mov
jae
ret
rorb
sub
push
sub
pop
jle
mov
insl
pop
xor
loopne,pt
jno
jne
repnz
push
pop
dec
push
jno
in
bndstx
mov
jg
fisubrl
push
pop
mov
and
jnp
mov
sbb
push
cmp
ror
adc
xor
add
pop
mov
mov
test
ret
mov
dec
fs
mov
push
fildll
or
cli
adcl
or
push
xchg
fdivs
mov
push
into
fnstenv
sbb
xor
dec
ret
btr
adc
ja
or
cmp
jb
push
or
mov
cmp
leave
xchg
push
and
push
mov
xchg
or
ds
sub
inc
test
sub
mov
push
out
dec
xchg
dec
dec
mov
movsl
les
ja
ds
cwtl
mov
stos
xor
adcl
imul
stc
insl
and
and
faddl
inc
mov
stos
stc
mov
fildll
jnp
mov
mov
int3
out
push
mov
arpl
xchg
repnz
fstps
cwtl
cmp
jmp
pop
jb
adc
cmc
mov
dec
jno
sub
inc
ret
sti
adc
scas
fldt
pusha
cmpsl
stos
add
jo
jne
outsb
inc
pop
add
or
repz
mov
mov
pop
lahf
adc
icebp
mov
and
fnsetpm(287
mov
or
mov
scas
hlt
jmp
rcrb
shlb
repnz
cmp
lods
xor
push
pusha
pushf
xchg
xchg
in
adc
shlb
jmp
mov
xor
add
pop
push
or
cmp
mov
xor
xor
ss
xor
js
jo
pop
dec
andl
xor
nop
outsb
xchg
sbb
flds
mov
out
cwtl
add
dec
in
mov
lea
mov
ss
and
scas
jle
jae
or
inc
jle
xor
push
mov
mov
inc
ljmp
lock
pusha
out
shlb
stos
fbld
xchg
dec
pushf
pusha
mov
mov
and
push
jb
repnz
test
cltd
stos
out
xchg
push
bound
enter
sub
enter
mov
push
roll
ret
lret
in
and
and
pushf
mov
add
out
jmp
out
rclb
fsubl
nop
jle
int3
mov
jl
cmp
hlt
or
cltd
les
sbb
cli
out
mov
fimuls
test
repz
cmp
push
and
mov
jae
adc
cmp
sub
inc
mov
push
std
int3
mov
dec
sub
imul
mov
cmp
test
mov
outsl
loopne
out
cmp
ret
les
inc
ss
mov
sbb
jne
enter
cmp
xchg
sbbl
jbe
int
stos
inc
sub
push
out
mov
lock
sub
mov
repnz
and
add
es
mov
xor
fs
add
adc
mov
fisubrl
or
adc
lret
out
pop
nop
dec
cmp
dec
pop
dec
out
loopne
out
push
sub
nop
outsb
fprem
sbb
pusha
push
dec
fidivrl
orb
adc
and
orl
xchg
mov
cmpsl
icebp
pop
cmp
je
ss
in
xlat
mov
jb
inc
repz
addb
mov
xchg
pop
or
xchg
das
push
sub
clc
enter
ds
cld
xor
or
jo
out
aad
mov
jl
aas
mov
pop
add
cmp
mov
sar
dec
test
mov
adc
push
add
cli
sti
in
mov
dec
lods
jge
mov
hlt
mov
in
mov
shrl
test
jl
nop
lahf
cmpsl
push
pop
je
lahf
or
loop
pop
xor
sbb
hlt
clc
xchg
pusha
fs
stos
jge
out
dec
popa
xlat
stos
lea
stc
addr16
loopne
xchg
fstpt
out
push
jge
ficoms
pop
push
repnz
or
fbld
mov
push
adc
js
dec
push
out
pop
dec
leave
dec
scas
inc
outsl
push
into
xchg
push
mov
loop
jecxz
push
jg
mov
loope
xor
ljmp
cmp
int
in
dec
out
mov
inc
ljmp
flds
aam
sarb
outsl
cmp
notb
inc
int3
aad
jae
sahf
inc
in
pop
loopne
fildll
fiadds
das
scas
scas
sbb
in
xchg
push
lods
lret
and
mov
sbb
or
jae
cmp
or
aas
addr16
inc
jbe
add
push
mov
mov
loop
or
ss
mov
pop
ret
leave
imul
fwait
gs
inc
adc
jo
mov
inc
pop
into
jns
ror
lock
mov
or
or
in
arpl
pop
mov
xchg
cmpsl
push
cld
fisttps
push
xchg
aam
icebp
testb
adc
mov
nop
sub
xor
in
jmp
das
aam
mov
sub
adc
inc
and
mov
adc
movsb
push
js
jnp
call
dec
pop
jo
add
mov
adc
imul
mov
xor
aas
in
pop
dec
test
ds
mov
out
cmp
push
ja
or
pop
stos
daa
sahf
enter
sahf
push
arpl
cltd
loope
imul
inc
push
mov
pop
cli
sub
popf
gs
mov
test
dec
push
mov
xchg
sbb
adc
adc
push
mov
int
pop
cmp
adc
push
pop
push
ja
dec
xchg
xorb
repz
xchg
rorb
int3
leave
ret
aaa
xchg
sbb
xor
jle
imul
xchg
add
jns
subl
xor
pop
pop
xchg
js
test
adc
repnz
insl
popf
mov
jecxz
xchg
jmp
lea
call
bound
inc
mov
mov
pop
dec
add
ss
loop
inc
insb
inc
out
iret
push
xor
inc
cmpsb
xor
outsb
or
lret
in
int
aaa
mov
adc
stos
cwtl
ja
test
loop
clc
movsb
stc
inc
scas
addr16
fcoml
and
lds
inc
xchg
or
mov
xchg
mov
lods
icebp
sar
filds
inc
xor
push
push
jno
int
clc
or
cmp
mov
cli
rolb
xor
test
int3
insl
add
dec
movsl
daa
sbb
in
pop
adc
data16
popa
xchg
mov
fcomi
out
push
fmull
fdiv
push
fstpl
sbb
enter
in
sub
sbb
or
cmpb
pop
shl
jns
mov
dec
mov
jne
xor
and
mov
movsb
gs
sbb
add
sbb
push
dec
lret
and
push
or
lahf
hlt
repz
jo
mov
push
push
inc
mov
inc
cmp
lahf
in
and
adc
sub
mov
pop
mov
sub
xor
leave
lods
xor
lds
out
mov
movsb
js
ss
and
sub
outsl
lret
jnp
arpl
sub
clc
mov
xor
adc
xor
mov
sub
loope
push
inc
mov
ret
pop
leave
push
hlt
inc
cmpb
int
jg
into
rcrl
ljmp
insb
xchg
das
sti
xchg
pushf
or
sbb
push
xlat
negl
mov
sahf
lods
sub
repz
xor
add
loope
dec
cmp
imul
aas
insl
cs
cmpsl
clc
les
lret
jge
xchg
or
dec
xor
mov
add
pusha
divb
add
sub
mov
je
aas
adc
jae
insl
push
jne
icebp
sub
sahf
push
cli
mov
dec
jge
sub
sbb
mov
fcoms
dec
pop
xchg
pop
or
inc
in
and
mov
mov
push
pop
popl
mov
in
test
addr16
xchg
mov
add
cmp
inc
sarb
dec
xor
or
jl
es
pshufw
in
ficompl
xor
arpl
pop
sbb
xchg
mov
jmp
cmp
bound
mov
mov
push
jg
xor
sub
sahf
in
mov
jnp
push
int3
adcl
xchg
data16
dec
jne
mov
daa
sub
add
jp
sahf
fs
in
push
mov
pop
pop
aam
aad
and
add
daa
popf
fiadds
add
andl
jno
cmc
push
inc
div
outsl
mov
cs
push
in
or
call
jg
mov
push
mov
push
sbb
mov
sbb
rolb
mov
dec
inc
mov
bound
insl
mov
push
jns
testl
imul
cld
lcall
insb
cmp
xchg
stos
repnz
sti
test
mov
stos
movsb
sbb
jl
mov
mov
inc
xor
ja
pop
inc
push
mov
ja
pop
int3
and
cmpb
adc
fsub
ret
xchg
rorl
xchg
jae
xchg
push
stos
lock
cmp
or
into
scas
rcrl
stc
or
adc
jno
mov
push
pop
pop
add
fsubrl
xor
or
cmp
arpl
dec
mov
push
test
jbe
ljmp
repnz
fs
xor
js
inc
push
pop
clc
or
insb
sbb
mov
xor
mov
dec
sbb
jbe
loope
rorl
insl
xchg
lahf
xlat
js
inc
fldt
sbb
fldenv
adc
cmpl
popf
mov
xor
test
sbb
adc
ret
and
xor
aad
test
dec
pop
jg
push
loope
leave
mov
mov
mov
or
add
pop
dec
pop
jl
jp
xor
idivl
pop
ljmp
dec
addb
mov
aaa
push
in
mov
stc
push
adc
data16
push
movsb
and
clc
pop
fidivs
sbb
lret
jl
mov
sub
dec
pop
inc
xchg
repnz
push
push
pop
hlt
ljmp
push
push
lods
lcall
pop
mov
sbb
fcoms
gs
pop
pop
cld
xchg
adc
ret
rorl
popf
flds
mov
add
xchg
cmpsl
jbe
int
aam
ss
mov
rcl
aad
mov
lock
orb
add
mov
jne
cs
sub
ljmp
add
lods
into
leave
into
mov
jo
dec
pop
dec
int
and
sub
or
sbb
and
or
push
add
daa
bswap
inc
repz
mov
jbe
inc
outsl
stos
mov
lahf
xor
xlat
xchg
aaa
mov
addl
cmpsl
loope
push
push
fucomp
xchg
inc
ret
and
test
and
in
jno
jae
data16
jp
insb
dec
jne
stos
lods
repz
repnz
xchg
nop
pop
sub
cmp
cmp
popf
arpl
aas
mov
in
loopne
pop
xchg
xor
lock
imul
jnp
test
xor
insb
das
int
int
xchg
gs
dec
in
and
repz
mov
cli
arpl
jo
inc
and
cmp
or
jb
pop
sub
out
xor
cld
jne
mov
add
sub
jb
xchg
and
int3
loope
loop
ret
sbb
int3
insl
subb
inc
aaa
jbe
js
mov
bound
adc
jae
andb
mov
sub
pop
mov
ja
mov
mov
imul
sub
dec
inc
loope
test
and
imul
in
jnp
mov
dec
or
xor
mov
xor
lock
cmp
dec
ret
jp
loope
test
pop
dec
and
cmp
fisttpll
iret
out
mov
mov
cmpsl
lcall
fsubs
ret
jg
scas
and
push
xchg
cmp
inc
mov
in
pop
xchg
iret
nop
mov
iret
mov
out
daa
add
out
popa
popa
lahf
adc
out
clc
jb
repz
clc
mov
insb
sub
sub
mov
dec
jle
xor
daa
sbb
and
jg
dec
mov
jge
js
mov
jns
aas
loopne
mov
std
cmp
iret
xchg
xchg
inc
popf
sbbl
jle
test
inc
das
dec
cmc
mov
sarl
pop
out
mov
sub
test
rcrl
push
inc
mov
jecxz
jecxz
xor
inc
dec
lds
and
gs
or
xor
xlat
dec
jno
jae
cltd
xchg
int
cmp
lret
jecxz
sub
int3
lods
rol
repz
mov
pop
insb
imul
out
cltd
es
add
pop
mov
inc
lcall
mov
andb
dec
ja
xchg
and
into
ret
push
mov
adc
cmp
or
test
into
nop
dec
jg
jp
cmp
add
mov
insb
les
mov
je
bound
lahf
sbb
sub
das
loopne
dec
rorb
and
xor
addr16
fs
and
xor
xor
pop
cmp
fdivrp
outsl
push
fcoml
inc
lds
mov
lret
out
aad
cmpsl
and
clc
jecxz
adc
or
xor
push
mov
xor
cmp
cmpsl
jo
mov
out
push
repz
xor
lods
jbe
sbb
mov
jae
mov
cmp
xchg
mov
pop
push
pop
ja
pop
les
out
jbe
mov
enter
dec
dec
ss
adc
out
out
in
lods
jmp
pop
xor
xchg
neg
adc
movsl
push
test
inc
jle
pop
cmp
ret
pop
mov
iret
add
sbb
bound
fisttps
call
insb
mov
or
cmp
cmc
pop
mov
mov
test
clc
sub
mov
jmp
mov
or
fldenv
out
push
inc
pushf
sbb
scas
push
mul
mov
movsb
push
daa
xchg
shl
lahf
push
mov
sbb
hlt
mov
jne
cli
mov
xor
and
insb
sbb
pop
inc
jnp
call
inc
lea
je
jnp
sbb
jmp
or
mov
jno
mov
mov
aas
sub
xor
mov
pusha
dec
hlt
pop
adc
loope
dec
and
fadd
mov
and
stos
loope
mov
ret
stos
shrl
xchg
jp
adc
mov
pop
les
push
mov
jnp
jo
cli
cld
daa
lods
lods
add
nop
data16
data16
or
rsqrtps
sahf
cmpsb
orb
imul
xor
mov
xlat
stos
shlb
cmp
bound
or
or
in
mov
inc
int3
shrl
push
in
fimuls
adc
sub
pop
xchg
mov
mov
and
push
cmpsb
inc
mov
loop
xor
dec
sbb
jle
pushf
int3
stc
fdivs
or
int
sub
or
outsb
adc
jns
cmp
cmp
push
or
or
xlat
test
cmp
jg
adc
xor
gs
outsl
je
xchg
shll
mov
out
out
xor
lods
xchg
js
xchg
or
movsl
adc
imul
lret
icebp
jne
mov
push
sbb
jge
clc
mov
inc
and
bound
mov
add
out
sub
jno
dec
mov
roll
ss
in
dec
ljmp
jns
jmp
adc
xlat
cltd
imul
pushl
iret
inc
and
outsb
pop
test
mov
cmp
clc
xchg
dec
mov
xchg
mov
imul
loope
cmp
sbb
mov
test
and
mov
xor
cs
mov
dec
mov
xor
ds
jecxz
push
das
in
out
xchg
mov
setp
push
jge
jmp
jp
fistps
and
shll
jnp
icebp
rcrl
add
cmc
cmpsb
sahf
daa
cmp
push
or
mov
addb
repz
push
adc
add
push
in
push
jbe
mov
inc
add
adc
cmp
jno
inc
aad
push
inc
xor
cmpsb
jns
xor
push
cli
mov
add
sub
xchg
cltd
cmpsb
enter
add
xchg
mov
pop
sbb
xor
pop
movsl
push
xchg
popf
std
stos
add
js
fwait
jp
jecxz
add
push
in
addr16
add
ja
push
mov
adc
jmp
cli
add
and
ror
mov
jns
hlt
push
pusha
inc
imul
mov
mulb
xchg
mov
clc
into
pusha
or
pop
xlat
es
mov
and
stos
and
stos
xchg
xlat
xchg
int
or
stc
inc
pop
push
pop
ficoml
fsubrl
clc
xchg
mov
sbb
cmpsb
cmpsb
testl
stos
and
pop
into
icebp
jg
push
addl
stc
aad
inc
rclb
into
ds
xor
ret
add
rcll
psubq
imul
aam
push
inc
test
inc
ja
mov
int
inc
push
in
mov
or
std
in
push
xchg
fwait
mov
adc
pop
scas
add
mov
jl
dec
mov
jg
or
adc
sub
adc
pusha
pop
jne
jbe
and
xor
mov
loopne
in
mov
pushf
les
pop
test
outsb
xor
add
push
mov
andl
pop
shlb
ss
mov
xor
or
push
cmpsl
scas
movsl
fdecstp
in
dec
jae
ss
xchg
inc
pushw
and
cli
pop
mov
pop
and
xchg
mov
jmp
sub
bound
movl
ljmp
jmp
lds
hlt
jmp
jle
mov
insb
mov
inc
dec
adc
cmp
push
dec
out
xchg
fidivrs
xor
mov
aas
xlat
clc
adc
cli
cmp
xchg
mov
stc
cmp
pop
mov
mov
mov
lock
lgdtl
popf
dec
ds
cld
or
mov
fwait
insb
test
ficoms
and
sbb
sahf
xchg
sbb
dec
mov
lea
nop
fcmovbe
pop
lock
cmp
cmc
loope
bound
mov
fistpll
rolb
das
fwait
ljmp
in
orb
inc
xor
pop
ret
mov
mov
add
cmpsb
xchg
xchg
cwtl
push
push
aaa
dec
sbb
hlt
adc
int3
or
jecxz
outsb
push
add
jne
mov
jbe
add
loope
out
lock
pop
cmp
divl
cmpb
inc
dec
mov
mov
fsubs
orl
adc
sbb
mov
mov
push
lods
push
adc
ja
sub
shll
mov
pop
add
idivl
add
std
lods
pop
rolb
xlat
jne
xchg
sub
xchg
push
inc
loopne
jecxz
sub
sbb
cmp
leave
sub
roll
or
cmp
mov
pop
push
mov
fwait
jb
addr16
int3
xlat
cli
inc
xchg
mov
xchg
sub
xchg
test
imul
cmp
gs
lea
aas
inc
cmp
call
pushf
out
stc
and
dec
ljmp
dec
test
pop
mov
insl
lcall
add
mov
add
xchg
inc
movsb
or
push
data16
cmp
mov
dec
xor
xchg
cmp
repz
cmp
incb
lods
enter
in
cli
push
push
into
push
mov
fldcw
mov
mov
jecxz
mov
rcrb
mov
sub
push
push
add
pop
aaa
and
or
fsubrp
mov
icebp
pop
inc
js
sbb
repnz
dec
lods
addr16
inc
les
ret
push
xchg
add
or
je
movsb
push
and
jmp
mov
int
mov
call
dec
enter
clc
xchg
scas
into
jle
xchg
mov
aas
xchg
mov
fistpll
pushf
notb
and
mov
icebp
adc
and
xchg
mov
cmp
mov
push
mov
adc
mov
lret
lods
lock
lcall
or
inc
xor
jl
decb
mov
push
call
cs
cltd
adc
pop
stc
push
sti
jno
sub
mov
js
ss
inc
pop
sub
loopne
inc
jle
or
cmp
jb
in
stos
mov
xchg
shrl
xor
mov
rcrb
push
fisubl
add
outsb
fwait
aad
or
popa
mov
test
pop
insb
imul
xchg
jmp
push
cmpsb
gs
sub
and
cmp
jmp
js
fcmovb
dec
out
gs
push
xchg
enter
stos
sti
mov
push
popf
fsubrl
sahf
repz
sbb
into
movsl
mov
js
js
cmp
mov
jnp
popf
cmp
inc
das
stos
sub
lods
int3
and
repz
mov
in
popa
in
push
mov
xchg
enter
and
inc
jb
gs
xchg
mov
dec
imul
nop
cwtl
sarb
call
iret
aam
mov
in
out
repz
outsb
jno
andb
or
aam
pop
out
es
add
repnz
popa
mov
rol
pop
test
das
test
push
aaa
push
aam
enter
jge
jae
jg
in
cmpl
sbb
popa
pop
sahf
aad
adc
and
xchg
jno
arpl
and
aam
and
std
add
xlat
adc
pop
movsb
add
in
inc
jno
rcll
dec
add
add
in
insb
push
addb
sti
jecxz
mov
xchg
mov
xor
xor
shrb
add
stos
push
pop
jg
jp
out
push
pop
xchg
cmp
lock
dec
fmull
hlt
pop
lods
in
fsubrs
test
push
notb
mov
loope
dec
dec
aam
test
mov
dec
fidivrs
xchg
jnp
and
push
sahf
pushf
pop
jns
stc
fcomps
cmp
mov
jg
packsswb
lahf
fst
out
push
fnstsw
pop
and
les
rcrl
add
cmp
mov
xor
ja,pn
test
into
movl
jb
xor
out
loope
rorl
pop
cmpsl
xchg
les
insl
adc
in
mov
xabort
stos
jno
and
mov
and
cmp
pop
mov
jmp
inc
stc
sahf
aas
jmp
sub
int
lock
insl
or
sbb
cmpsb
pusha
idiv
push
inc
repz
mov
data16
rcl
aas
cmpsl
es
push
push
xchg
xorb
and
mov
gs
ja
call
xchg
in
xor
inc
lds
nop
lahf
arpl
jmp
arpl
cbtw
jge
xor
mov
in
and
mov
sbb
ljmp
cli
enter
and
xchg
adc
popf
je
cmpsl
push
jae
cmp
or
outsl
mov
mov
jb
leave
pusha
call
js
imul
mov
or
push
mov
in
aas
mov
jno
adc
rorl
pavgw
ret
nop
add
mov
inc
js
jp
xchg
jbe
and
push
xchg
cld
das
or
and
leave
push
cli
sbb
and
sahf
popa
notl
call
out
das
hlt
add
loope
adc
or
test
inc
rcll
adc
or
mov
push
test
mov
ret
fs
out
dec
scas
xchg
outsl
arpl
shl
xor
outsl
add
add
jnp
sbb
mov
int
inc
cmpb
in
mov
jne
movsb
fcoms
jmp
mov
inc
popa
shrl
inc
test
leave
pop
data16
jb
int
adc
sbb
xchg
xchg
sub
add
xchg
push
push
pop
mov
adc
ror
dec
pop
addr16
cmpsl
dec
call
mov
push
push
mov
dec
loope
imul
adc
arpl
mov
push
lcall
sub
mov
ret
out
sbb
test
repz
lcall
test
insl
cmpsl
test
cltd
lret
inc
mov
push
scas
mov
shl
jne
adc
cli
int
sub
call
insb
ljmp
jg
and
lret
pusha
mov
mov
pushf
mov
mov
xchg
cmpsb
stos
test
adc
mov
adc
xchg
pop
aaa
pusha
pusha
pushf
test
mov
jb
xor
movsb
xchg
fistpll
add
mov
ss
leave
push
pop
out
ror
fld
rcll
jecxz
mov
jnp
jns
imul
inc
xchg
stos
incb
repnz
sub
jl
adc
loop
vphsubwd
push
mov
orl
jb
mov
in
mov
negb
cmp
sbb
and
in
and
pop
xchg
jecxz
or
sub
mov
popf
test
push
pop
rcll
les
mov
lock
xchg
push
mov
adc
mov
push
dec
xor
imul
cld
xor
mov
or
repnz
mov
jo
inc
dec
lret
rcrl
lods
add
xchg
push
mov
cmp
mov
iret
adc
sub
add
shll
or
xor
mov
sbb
mov
test
add
mov
sbb
cmpsb
adc
jecxz
pop
mov
in
lods
hlt
shll
xlat
mov
xchg
or
pop
js
xchg
and
ret
andb
fisttpl
mov
mov
sahf
jl
stos
testl
movsb
jmp
sbb
cmp
repnz
pop
mov
mov
push
int
mov
xor
add
out
mov
mov
or
sbb
inc
arpl
jmp
mov
inc
enter
jae
insb
xor
testl
jge
cmp
pop
insl
sbb
outsb
jecxz
cmpsb
cmp
test
cmpsb
fcmovbe
test
out
fwait
jne
add
gs
lret
jecxz
jmp
pop
daa
imul
loope
mov
push
sbb
imul
cmp
popa
add
pop
inc
jno
mov
out
je
sti
daa
in
pop
cmp
ja
mov
lcall
cli
cmp
push
iret
mov
cmovbe
mov
xchg
jae
inc
call
sbb
shrl
mov
test
insl
jl
ds
cli
add
les
gs
and
sbb
dec
mov
out
lock
scas
cld
sub
mov
cmp
cli
inc
shrl
mov
xchg
push
jge
cmpsl
and
fidivl
leave
jge
adc
cmp
loope
pop
jle
and
addr16
test
or
jno
jns
mov
and
xchg
test
jb
fnsave
int
stos
fdivr
popf
cmpsb
push
sar
ds
mov
gs
jno
pusha
popf
jo
xlat
repnz
xchg
jno
out
mov
aaa
scas
jno
rcll
sbb
cmp
cli
xorl
loop
lret
push
xor
stos
fimull
lret
jg
sahf
fmulp
inc
and
sbb
idivl
test
jle
pop
inc
sbb
add
adcb
mov
sahf
dec
mov
cmp
sbb
cmp
jnp
or
sub
or
inc
or
jne
loope
jp
mul
xor
leave
xchg
cmp
mov
xor
xor
sbb
cltd
lods
push
sub
cmp
leave
mov
or
adc
push
mov
and
jmp
repz
and
xor
pop
gs
or
cmpl
push
xor
push
jns
xchg
add
pop
hlt
dec
jge
clc
aaa
je
movsl
mov
inc
pop
imul
repz
inc
push
push
mov
mov
dec
lahf
jbe
pop
inc
fiaddl
xchg
insl
dec
mov
fdivp
sub
mov
sub
ficomps
cld
fcompl
iret
add
icebp
call
int3
scas
jge
mov
cmp
in
xchg
mov
sahf
fsubrs
sti
inc
dec
fidivrs
xchg
dec
pop
mov
out
sbb
les
mov
dec
sar
jecxz
leave
ficompl
jle
data16
ret
sbb
mov
jp
out
or
cmp
add
cmp
cli
cmp
movsb
fisttpl
jae
inc
inc
inc
push
push
sub
mov
addr16
fstps
pop
sub
mulb
loop
xor
mov
dec
inc
fdivrp
cli
fisttps
mov
insb
sbb
arpl
sahf
sarl
cs
test
test
and
or
fistpl
mov
push
jle
mov
dec
test
push
mov
mov
aaa
xchg
sar
cmp
imul
dec
stc
out
and
xor
jnp
cmp
xor
loope
sbb
clc
mov
inc
setle
pop
fdivp
rol
and
xor
icebp
mov
stos
insl
cmp
inc
pop
cmc
xchg
xchg
rcrb
add
lcall
and
mov
lahf
or
ret
test
scas
or
adc
lret
xchg
ss
or
mov
adc
jge
test
adc
or
icebp
movsb
out
std
scas
loop
hlt
mov
inc
test
imul
push
pop
outsb
cmp
rcrl
lods
dec
jmp
enter
dec
pop
mov
mov
ljmp
test
gs
addb
iret
dec
inc
push
cmp
in
push
jno
and
mov
popa
push
or
imul
mul
test
jns
aaa
mov
adc
icebp
fldcw
cs
cmc
sahf
xor
subl
shll
push
xchg
push
sub
pop
push
icebp
sbb
adc
je
add
iret
inc
dec
mov
and
or
and
mov
lret
jbe
into
or
pop
pop
pop
push
iret
xchg
mov
test
and
xor
nop
sbb
or
aas
inc
and
dec
and
xor
out
flds
dec
xchg
in
aam
mov
adc
and
xchg
and
imul
popf
adc
push
movsl
loopne
mov
push
daa
mov
or
cmovg
inc
dec
std
add
cmp
pop
lret
sub
repnz
and
adc
gs
insb
test
add
ljmp
cmp
popf
xor
inc
cmp
repnz
or
add
dec
dec
jbe
in
add
lahf
mov
pop
data16
push
push
pop
push
movsb
pop
add
xchg
xchg
imul
push
icebp
jo
xchg
lods
xchg
orl
adc
inc
addr16
adc
sahf
loope
mov
pop
jb
mov
dec
lea
addr16
fsubl
int3
imul
outsl
jb
daa
aad
into
xor
imul
int
fisttpll
push
mov
and
sahf
sbb
or
jno
push
jecxz
push
xor
xorb
scas
sbb
pop
test
stc
insl
mov
int
adc
inc
lea
push
sbb
mov
jp
jmp
lods
ret
inc
mov
ret
aas
repnz
cmp
xchg
loop
das
cmpsb
ljmp
loope
jmp
mov
lahf
mov
ficompl
mov
sbb
hlt
pop
call
sbb
ss
inc
or
mov
popf
xlat
stos
xchg
or
dec
in
dec
mov
or
pop
xorb
and
mov
sarl
mov
xor
inc
fimull
or
fidivrs
repz
lods
xchg
lods
xchg
inc
push
imul
mov
jge
arpl
dec
hlt
pop
icebp
xlat
inc
mul
fisubrs
loope
outsl
xor
xor
in
je
sarb
push
jb
fisubl
ds
inc
xor
mov
icebp
inc
nop
test
shll
sub
jb
push
adc
mov
cmp
mov
int
inc
add
xor
and
pop
inc
mov
cmp
stos
cmpsl
ret
cmc
sub
std
push
insl
sbb
sbb
adc
mov
sub
cmp
dec
loope
andl
inc
in
cmp
mov
pop
ret
nop
vpmullw
ficompl
mov
or
movsb
jbe
mov
repz
fwait
pop
arpl
xlat
adc
xor
xchg
std
push
or
or
sbb
sbb
in
js
or
loopne
cmp
aam
push
outsb
cmp
in
xchg
add
mov
adc
mov
sysret
aaa
adc
nop
or
mov
or
pop
imul
pop
adc
lock
mov
sub
mov
push
adc
scas
fwait
ja
daa
mov
push
pop
sub
xchg
into
jmp
adc
push
ss
adc
xchg
and
xchg
pop
aam
pop
or
leave
lea
inc
int3
pop
add
pop
pop
inc
push
cmp
popa
push
popf
jmp
lahf
flds
fimull
mov
aaa
pushl
mov
sti
icebp
push
adc
std
mov
dec
inc
push
cmp
mov
sbb
or
adcl
call
mov
into
add
rcrb
sbb
inc
into
xlat
push
xor
mov
scas
and
test
sahf
int
aam
cli
insb
dec
pop
adc
xor
push
sbb
or
mov
push
mov
sbb
and
lock
bound
stc
pop
lcall
repnz
push
sbb
lcall
cmp
adc
pop
inc
pop
jae
xchg
jmp
es
xchg
or
addb
adc
filds
adc
inc
jns
xor
and
leave
mov
mov
jnp
dec
mov
pop
cmp
mov
loop
jmp
xorb
inc
mov
push
test
decb
inc
adc
rcr
addr16
shl
imul
pop
jmp
push
and
adc
xchg
sbb
jbe
stos
outsb
repnz
aaa
push
xchg
test
mov
lods
xchg
xchg
cmp
fisubrs
mov
ss
fldt
scas
loope
add
dec
mov
leave
jns
mov
mov
cs
fcompl
paddd
fdivrs
cwtl
loope
xchg
es
adc
aas
push
inc
mov
jmp
lods
in
mov
je
mov
xchg
flds
lret
mov
push
clc
loopne
int3
push
fwait
cmpl
jb
sbb
adc
or
movsl
shll
test
xor
fcomi
push
xor
xchg
cld
arpl
mov
movsb
xchg
mov
mov
add
es
ss
push
push
sub
push
mov
loope
ja
sub
cmp
pop
inc
test
add
jne
xor
aas
outsb
hlt
dec
sub
xchg
in
and
mov
xchg
lahf
mov
test
mov
mov
out
or
sub
mov
shr
add
pop
mov
xlat
cwtl
jb
sub
xor
call
sub
insl
mov
cmp
pop
pop
sbb
fisubrl
ss
popf
ret
scas
dec
push
lahf
clc
movsb
mov
aaa
xlat
pop
shrl
jb
shll
lods
fimuls
mov
mov
cmpl
testb
mov
xchg
aam
or
and
xchg
rclb
adc
int3
add
cs
aaa
xchg
cmp
and
inc
je
push
mov
test
add
pop
jns
dec
sub
icebp
imul
into
adc
out
xchg
inc
xchg
iret
jp
mov
loopne
jnp
pop
movsb
push
push
cmpsl
ja
cwtl
jo
das
sub
popa
jne
jle
je
cmpsb
out
nop
js
icebp
pushf
pop
mov
push
dec
xor
pop
jnp
scas
xor
jb
lahf
inc
mov
sub
js
fildl
sbb
cltd
jle
and
scas
fmull
sub
sub
dec
or
popf
andl
mov
jge
sub
pop
stos
ret
cmp
dec
cwtl
pop
insl
jmp
sti
hlt
sub
sahf
fcoms
push
dec
outsl
lret
jno
mov
inc
push
mov
test
mov
pop
and
shrb
ret
loopne
icebp
mov
and
jns
add
jnp
loope
jbe
add
bsf
xchg
test
lret
xlat
mov
ret
mov
std
mov
or
testl
shr
xchg
mov
sub
cli
roll
sub
into
idiv
icebp
mov
fs
or
ljmp
fwait
mov
call
and
in
and
dec
stos
push
mov
adc
adc
mov
dec
lods
jp
push
pusha
arpl
stc
out
xchg
and
or
inc
leave
cmp
cltd
jb,pt
xchg
push
mov
sbb
lret
loop
xorl
hlt
push
xor
sub
xchg
sbbb
in
fs
adc
movsl
xchg
stos
sub
dec
repnz
xor
imul
mov
lds
cmp
cmp
icebp
sti
cmp
std
insl
aaa
out
or
dec
dec
lods
and
mov
sahf
out
gs
dec
popa
stos
add
in
adc
mov
jb
mov
xchg
shr
push
iret
decl
push
lret
mov
shlb
adc
xor
xchg
inc
cmp
mov
mov
xchg
roll
mov
push
insl
cmpsl
push
jb
es
add
fldt
imul
jp
jnp
iret
in
cmp
fidivrl
mov
mov
les
ret
loope
cli
int
mov
xlat
dec
push
gs
mov
sub
lret
std
outsl
mov
inc
pop
push
inc
and
lret
adc
rclb
jno
pop
mov
cli
jle
sub
mov
mov
xchg
xorl
cmp
mov
jno
dec
inc
pusha
mov
fs
jne
cli
pop
ficompl
adc
sub
shlb
mov
mov
subb
fdivl
jne
fsubr
mov
test
popa
push
andb
lods
adc
iret
rcrb
sbb
jp
and
fnsave
sub
mov
push
aas
cmpsl
cmp
ja
cmpsb
xor
and
xchg
xorl
fadd
cwtl
xchg
test
lock
roll
jnp
insl
sarl
addl
ss
cld
and
out
mov
mov
xchg
ja
ss
fsubs
aad
inc
and
jp
pop
loopne
sub
add
adc
and
leave
pop
push
or
xchg
xchg
dec
pushl
jne
out
dec
push
leave
rcll
xchg
push
and
jo
nop
mov
and
dec
sarl
in
mov
jmp
mov
mov
cs
popf
jo
adc
mov
aad
scas
rolb
aaa
xchg
sbb
lods
mov
aad
xchg
sti
lahf
xor
js
lret
xchg
mov
push
gs
push
lds
sbb
inc
mov
cmpsb
xchg
xchg
ret
sbb
adc
push
icebp
fsub
in
mov
xchg
push
shrl
cmp
push
lahf
sub
xchg
sbbl
xchg
punpcklwd
push
xchg
std
test
mov
sbb
or
test
cmp
xchg
clc
ss
xchg
push
mov
adc
nop
or
add
push
cld
jbe
fs
jo
mov
ss
scas
mov
mov
cmp
iret
xor
lret
xchg
sub
jge
cmp
icebp
sub
aaa
dec
jecxz
enter
inc
fldt
pop
or
inc
mov
pop
xchg
dec
mov
aad
cmp
insb
stos
sub
push
push
xor
popf
sub
pop
scas
cltd
adc
mov
lahf
mov
push
sub
and
xchg
ljmp
push
or
mov
movsl
test
inc
adc
mov
xor
divl
xor
cmp
dec
pop
int3
xchg
xchg
mov
ljmp
popf
xchg
mov
xchg
xor
nop
sub
dec
dec
mov
lods
adc
ja
call
call
xchg
push
mov
aam
call
push
sbb
mov
pop
lret
lea
mov
pusha
js
out
sbb
mov
jle
jle
je
sub
pop
out
arpl
push
ds
push
pop
dec
adc
in
mov
das
lock
mov
xorb
pop
mov
adc
push
mov
cmp
cmp
rcll
push
lret
insb
mov
pop
shlb
fs
rorb
sub
inc
dec
setbe
xchg
sahf
lret
shlb
mov
daa
repz
inc
cmp
outsb
sbb
push
mov
pop
call
pop
mov
repnz
dec
scas
xchg
xor
loope
inc
push
pop
dec
add
es
testl
pop
xchg
inc
cmp
leave
mov
add
mov
jns
mov
sub
data16
xor
rcrb
or
cmc
ljmp
jecxz
cwtl
data16
loope
loopne
add
test
fstps
test
inc
xchg
leave
or
clc
push
mov
adc
out
jb
pushf
add
or
pop
icebp
rorl
orb
dec
inc
pushf
xchg
inc
call
push
and
inc
subb
jp
test
mov
push
lock
nop
call
add
mov
xlat
pop
lcall
mov
cmc
mov
cld
js
stos
push
stos
je
sbb
pop
test
xor
loopne
sahf
push
sbb
std
das
outsl
loopne
mov
addr16
dec
xchg
mov
sbb
adc
and
add
cwtl
xchg
into
add
jae
xchg
shrl
inc
add
adc
dec
leave
and
leave
frstor
addr16
mov
fiadds
xchg
lret
cmp
xor
and
inc
cmp
mov
testl
pop
xchg
cli
arpl
imul
rcll
cmc
fisubrs
scas
pop
jge
mov
into
or
sarb
cs
inc
mov
pop
mov
mov
mov
jno
push
bound
movsb
shl
les
xchg
fcomps
dec
inc
mov
scas
add
lahf
js
loop
enter
jo
daa
aas
inc
test
int
dec
mov
sarb
mov
lea
xchg
adc
in
sub
pop
mov
mull
and
inc
cmp
mov
mov
sbb
mov
pop
mov
std
loop
inc
call
add
out
lret
adc
add
mull
and
pop
lahf
mov
imul
dec
sbb
cmpsb
inc
sarl
js
push
outsl
outsl
popf
sarb
sbb
mov
pop
and
mov
push
inc
pop
sbb
xchg
push
push
in
pop
or
shl
nop
mov
push
mov
ja
mov
pop
daa
pop
add
call
int
cli
lret
jg
mov
stos
testl
lods
repnz
fadds
popf
pushf
pushl
sarl
repnz
and
pop
mov
cmp
ljmp
fs
sub
inc
stos
push
push
repnz
mov
mov
adc
scas
aam
in
les
inc
sbb
inc
jmp
es
pusha
in
push
and
loop
xchg
push
jb
dec
pop
inc
out
mov
adc
push
mov
in
jnp
dec
rclb
lahf
sbbb
dec
pop
and
ss
das
mov
sbb
andb
stos
jo
lret
aas
popa
mov
dec
cli
ret
pusha
cld
pop
in
pop
das
xor
mov
xchg
jmp
das
pop
clc
lds
dec
lahf
jl
js
sub
adc
stos
fcmovnu
cmp
or
mov
movsb
arpl
mov
jp
jae
mov
jge
setge
inc
xor
pop
mov
xchg
cmp
fisubl
cld
dec
cmpl
inc
jg
mov
sahf
pop
andl
imul
mov
fdivrs
fldl
in
mov
dec
test
or
jo
sbb
push
fidivs
push
jecxz
or
push
sarl
rcrl
loop
inc
lds
xchg
jp
or
xchg
in
je
ret
test
notl
clc
add
call
cli
dec
sbb
inc
dec
shll
fcos
cmp
and
jae
inc
das
adc
jb
int3
and
ror
sub
nop
push
add
xor
sub
xchg
out
jg
ret
loope
xchg
gs
mov
leave
inc
dec
mov
fstl
cmpsl
push
js
and
sub
cs
pop
mov
stos
inc
out
sub
mov
stc
adc
xorb
jmp
cmp
add
mov
xchg
or
push
xor
les
dec
cmpsb
or
cmp
adc
lods
jmp
jecxz
daa
sti
jge
mov
lods
mov
daa
icebp
dec
sbb
das
jg
mov
or
and
adc
cmp
mov
cmc
push
mov
sbb
mov
add
rolb
jae
out
xor
mov
fcmovnbe
loopne
adc
outsl
lret
push
cltd
mov
xor
xchg
rcll
sbb
fdivrs
out
data16
cli
cmpsl
push
jne
insb
xchg
nop
ss
and
mov
cmp
add
fisttpll
mov
sub
sub
sub
daa
mov
xchg
test
push
mov
sar
in
les
loope
test
cmp
mov
pop
cwtl
rorl
jg
loopne
jns
mov
lret
adc
arpl
inc
imul
push
out
fsubrs
mov
test
mov
into
mov
pop
fprem
mov
fchs
repz
je
mov
fwait
mov
lods
mov
pop
add
mov
xchg
push
cmpsl
fwait
mov
push
jmp
je
enter
cs
lods
jb
lahf
stc
mov
ss
pop
pushf
fstpl
or
insl
jne
add
loop
mov
jp
sub
mov
stos
lea
pop
mov
cld
push
andb
xor
iret
test
shl
fimull
idivb
in
push
call
or
ss
pop
mov
mov
xchg
push
dec
addr16
dec
and
mov
jb
xchg
pop
add
add
test
mov
lcall
and
push
sub
call
sbb
jae
jg
jbe
adc
mov
push
sbb
int3
insb
sub
dec
cmp
movb
jae
shl
sub
cltd
mov
clc
xchg
nop
lds
cmc
or
jno
and
sub
and
popa
push
cli
addr16
add
imul
test
leave
mov
push
lahf
sub
xor
mov
jo
mov
pop
mov
lock
or
mov
gs
es
jle
push
add
lods
test
push
pop
xchg
cmp
jge
sub
inc
cld
push
jg
sbb
sub
sbb
imul
sub
adc
mov
int
push
out
cmp
loope
outsl
roll
push
rolb
and
push
sbb
mov
int3
sub
inc
call
pop
lcall
fildll
rorb
jge
mov
sahf
stos
fwait
sbb
jnp
cmp
lret
aaa
rorl
enter
addl
movsb
ret
sbb
js
xor
fcompl
cmpsb
or
pop
cwtl
mov
and
stos
into
add
roll
xchg
notl
adc
push
sbb
js
adc
xchg
sub
mov
xchg
push
insb
mov
mov
mov
push
orl
or
enter
dec
fxtract
dec
jae
ds
sti
in
jmp
frstor
mov
subl
pop
xchg
ss
into
mov
dec
mov
xor
repz
aad
int
inc
lea
mov
inc
and
dec
pop
stos
pop
dec
shl
gs
enter
lock
adc
xchg
adc
cmp
add
xchg
loopne
jmp
pusha
xchg
xchg
movsb
jnp
push
xchg
mov
jno
adc
cmp
sbb
or
adc
andl
dec
inc
pop
sbb
and
mov
xchg
iret
mov
lahf
jle
je
stc
test
pop
pop
push
xor
out
movsl
jecxz
xor
cmp
dec
stc
nop
mov
repz
loope
int3
aas
in
inc
adc
incb
scas
in
insl
fs
lahf
ret
rol
out
sbb
sub
clc
fs
lret
xor
or
mov
test
dec
mov
adc
outsl
and
sub
lock
clc
lret
ret
mov
jle
out
les
aad
mov
leave
and
jg
fistpl
jne
testl
mov
inc
mov
sbb
cmpsb
cltd
cli
sbb
mull
xchg
or
or
ror
or
add
jo
stos
pop
gs
mov
mov
arpl
stos
and
icebp
pop
sub
mov
add
mov
inc
add
mov
out
lea
mov
lahf
aad
fcomps
into
push
jg
and
mov
sbb
fsts
push
out
sbb
mov
mov
cmp
into
nop
repnz
jns
in
fsubrs
or
dec
xchg
or
test
scas
cmpsb
loope
cwtl
ljmp
outsb
lock
jnp
pop
mov
cwtl
hlt
adcb
xchg
and
xchg
mov
inc
add
jmp
mov
and
lret
outsl
outsl
pop
pop
imul
je
es
or
stc
pushf
cmpsl
ret
mov
jnp
cmp
movsb
stos
pusha
xor
stos
lcall
mov
das
jae
stos
sbb
ret
bnd
movsl
cmp
jns
ja
push
int3
mov
movsb
lret
or
push
mov
sbbb
std
xor
mov
data16
pushf
or
popf
mov
sbb
sbbl
xchg
xchg
or
xchg
in
out
pop
das
in
fst
jecxz
insb
jno
mov
push
ja
dec
xacquire
sub
sub
sbb
loop
xchg
mov
sti
ss
ret
negb
mov
fidivrl
cmp
cs
shl
out
inc
sarb
jle
fstpt
mov
push
lds
lret
insl
in
xor
mov
mov
call
fstpt
add
and
xor
cmpsb
out
dec
push
sbb
paddusw
rclb
dec
sti
in
adc
push
mov
pop
or
and
and
das
cmp
jle
js
dec
ficoml
pop
out
loope
dec
cmpb
roll
loope
mov
inc
sti
sti
ret
rorb
jmp
dec
fs
mov
push
subl
fcoml
sahf
outsl
jle
adc
pop
out
dec
xchg
sbb
mov
test
ss
xor
mov
or
xor
aam
push
mov
std
sarb
sarb
or
lret
lcall
stos
lds
jns
xchg
loop
mov
movsl
les
scas
shl
insl
leave
ret
int
aad
dec
pop
dec
cmp
xchg
jg
mov
ds
int
paddsb
in
lea
push
sahf
aas
dec
or
push
xchg
test
sbb
fwait
xchg
cs
lret
xor
jbe
xrelease
and
dec
in
push
call
mov
fwait
add
xchg
xor
mov
cmp
dec
xor
add
jo
in
popf
icebp
xor
push
fwait
cmp
cmp
sti
mov
imul
lcall
add
adc
push
push
add
cmp
push
inc
and
cltd
mov
into
jno
xchg
push
adc
mov
pop
test
mov
jmp
in
popa
push
xchg
jae
mov
pop
push
lods
out
fcoml
mov
les
imul
test
mov
clc
dec
cmpsl
out
les
scas
leave
mov
test
sarb
lock
inc
adc
xchg
dec
sahf
in
rolb
or
mov
push
rolb
adc
jge
gs
dec
pop
sub
jp
and
repz
jne
daa
jecxz
add
or
bound
lret
add
push
into
lret
xchg
push
les
add
lods
mov
lret
inc
stos
aad
fcoml
gs
jns
test
jl,pn
sahf
push
jno
adc
dec
mov
call
xchg
iret
xchg
or
inc
sub
scas
lcallw
lret
jg
dec
enter
mov
lahf
popf
lret
addr16
cltd
jo
outsl
orl
sbb
or
add
or
lds
mov
mov
loopne
inc
and
sub
in
out
cli
test
int3
adc
daa
inc
les
inc
aas
adc
mov
jecxz
mov
lock
lcall
clc
mov
inc
add
pusha
mov
mov
and
pop
movsl
inc
add
or
arpl
cmp
inc
pop
lret
mov
pop
jmp
cmc
insb
push
cltd
push
shlb
sub
xlat
jecxz
pop
push
cltd
leave
test
sbb
jae
dec
pop
xchg
stos
jb
add
jmp
bound
sbb
pop
fadd
jg
sbb
bound
arpl
idivb
ret
push
imul
adc
mov
das
inc
mov
icebp
and
mov
mov
and
cmp
fsubs
ret
xchg
mov
mov
xlat
mov
cmp
jns
outsl
in
or
dec
enter
jp
cs
int
push
jno
loope
jp
mov
movsb
mov
mov
imul
add
out
push
movsl
jle
mov
dec
push
scas
xchg
and
xchg
loope
or
lahf
clc
add
lret
test
loop
jbe
sbb
mov
inc
mov
push
mov
jnp
xchg
ja
jns
inc
fwait
dec
dec
repnz
in
loope
pop
fidivrs
or
scas
mov
lods
xor
repz
cmp
cmp
ret
add
sub
jecxz
daa
pop
or
lahf
lret
ficompl
xchg
repnz
mov
push
xor
dec
rorb
xor
jmp
clc
mov
push
shl
arpl
pop
xor
bound
pop
imul
movlhps
sub
mov
stos
jno
mov
xchg
sti
mov
add
cmp
mov
push
mov
push
jmp
xor
into
mul
add
in
in
ds
cmp
xchg
mov
in
pusha
add
add
mov
push
xchg
pop
jns
mov
negb
mov
jp
mov
into
mov
push
and
loop
push
rorb
jbe
fiadds
mov
xchg
jb
push
stos
je
push
lret
data16
sub
sub
leave
stos
arpl
mov
mov
mov
test
pop
popf
adc
xchg
dec
xchg
and
sub
mov
cmpsl
mov
mov
repz
stos
mov
xchg
inc
lods
test
jg
mov
pusha
out
sub
negb
repnz
test
fwait
test
or
inc
pop
cmp
push
jle
push
and
add
popa
cmpsb
pusha
mov
mov
lahf
and
dec
jg
jecxz
jns
xchg
popa
sti
sub
xlat
fyl2xp1
xchg
jle
ds
mov
std
cwtl
pop
pop
dec
push
pop
sub
pop
cltd
sub
jg
mov
fisubrs
imul
xor
ret
fwait
inc
inc
jecxz
mov
mov
cmp
lahf
in
pop
fnstenv
lahf
xchg
rcl
jp
pop
push
mov
lret
fldt
mov
into
ds
lret
movsl
or
cmp
jge
inc
sub
and
movsb
mov
out
rcll
outsl
rcrb
jne
fsubrl
out
xor
out
movsb
jmp
sar
mov
cs
mov
ljmp
sub
stos
push
outsl
mov
and
enter
add
test
add
mov
dec
xor
inc
cmp
fstpl
movhps
mov
mov
jl
pop
leave
rclb
push
icebp
ret
ljmp
inc
stos
mov
and
or
push
lahf
test
jp
orb
out
mov
pusha
adc
cmp
mov
ret
mov
scas
push
out
sub
pushf
daa
je
out
aaa
push
xchg
ljmp
pop
sahf
repz
jge
cmp
pop
pop
leave
xchg
mov
lcall
or
pop
pop
push
adc
inc
inc
scas
xor
loope
xchg
xor
inc
ss
ficoms
shll
js
jecxz
and
sbb
rcll
cmp
mov
xchg
xchg
jmp
in
out
xchg
adc
xor
cmp
jle
ret
negl
sbb
ret
and
stc
les
lods
outsb
pop
fstpt
aam
icebp
push
adc
das
xchg
mov
adc
cmpsb
es
jo
repz
mov
arpl
mov
jle
pop
in
cmpsb
bound
or
sti
fcmovnbe
pop
jle
mov
push
pop
aam
hlt
sti
sbb
sbb
sbb
push
ret
mov
ss
and
clc
jl
cmp
stos
out
in
int3
sbb
jbe
popf
adc
fistpl
in
jno
das
cwtl
push
popa
movsb
ficoml
push
cmp
in
cltd
mov
inc
xchg
popa
add
mov
mov
jp
sarl
pushw
daa
mov
sub
aam
and
roll
adc
dec
cmp
dec
cmp
add
or
jnp
sub
out
imul
jne
pop
test
or
andl
sub
xchg
and
popf
subb
aad
pop
pushf
jp
shrb
sbb
test
mov
dec
xlat
pop
out
repnz
pop
arpl
add
jp
clc
andb
fcom
pop
mov
xor
push
sarl
mov
shlb
andl
xor
lods
orb
popf
jb
loope
cmpsb
sbb
mov
pop
cwtl
andl
inc
out
sbb
in
repnz
mov
imul
mov
mov
bound
push
adc
and
das
lds
aam
add
adc
pop
pop
pop
xlat
mov
push
das
in
sahf
push
sbb
js
repz
jnp
out
ds
cmc
xlat
jmp
loop
aam
scas
repnz
mov
es
inc
outsl
fistpl
xchg
addr16
push
fs
cltd
push
adc
loop
ds
notl
leave
push
cmpb
pop
mov
dec
push
xor
and
sahf
inc
jno
cltd
or
pop
and
or
pop
pop
inc
sub
mov
stos
xchg
xlat
xchg
movsl
mov
ret
sbb
xor
aad
cld
loope
je
cwtl
mov
sub
jno
daa
mov
jb
sarb
adc
lods
push
lods
sbb
and
xchg
mov
shlb
fstpl
loop
fdivr
sahf
pushf
std
lret
push
imul
test
or
jns
jno
cmp
inc
sub
test
adcb
add
int3
dec
pop
js
jg
test
into
mov
jo
adcb
mov
dec
or
nop
inc
sbb
rolb
and
xchg
adc
je
push
loope
dec
and
gs
test
lods
add
mov
andb
mov
popa
popf
push
mov
ljmp
lock
inc
inc
lods
popa
mov
cli
outsl
xor
jmp
insb
aaa
xor
dec
cmpsb
push
xor
lds
xor
or
shlb
pop
cwtl
ljmp
jp
adc
pop
movq
jo
xchg
jl
cltd
dec
test
push
push
jecxz
jns
push
das
sbb
inc
sub
jnp
cwtl
jne
mov
fstps
pop
std
push
cwtl
jno
mov
and
jns
in
rclb
mov
sahf
pop
imul
in
dec
movsl
mov
cwtl
loopne
mov
loopne
or
cmp
sbb
mov
popa
and
push
jle
test
push
cmp
rorl
pop
inc
in
fldcw
adc
mov
movsb
dec
mov
aad
mov
cli
mov
jae
in
fs
and
mov
sbb
and
mov
mov
inc
hlt
sti
fildl
sub
psubsw
mov
inc
enter
xor
cmpsl
xlat
leave
push
lret
dec
imul
shr
pop
mov
mov
hlt
lret
or
cmpsl
jns
push
add
sbb
lods
aaa
lret
out
stos
adc
fwait
ds
ret
popf
iret
mov
rol
movsb
sbb
cmp
cld
xor
lds
mov
mov
rcrl
push
and
adc
push
and
xor
rcll
sub
aam
add
cmp
aaa
cmp
lea
sbb
pop
and
push
push
les
cmp
and
add
insb
andb
fwait
into
outsl
jne
mov
fsubp
jb
xchg
mov
int
outsl
sbb
mov
in
aam
outsb
mov
mov
lcall
add
fstpt
jg
mov
push
mov
xchg
and
cwtl
daa
jo
sub
sbb
jle
cmc
mov
lock
push
stc
test
xor
fdivr
aad
mov
andb
into
xchg
aad
xor
loope
xlat
movsl
sub
imul
push
imul
repnz
push
or
push
jmp
xchg
xchg
loope
idivl
pop
leave
ds
stos
jae
dec
fstl
incl
inc
inc
or
jmp
xchg
fildl
pop
mov
int
fcomip
and
mov
jmp
sub
or
jmp
push
je
je
arpl
scas
mov
jl
sbb
adc
cmpsb
stos
icebp
push
add
cmpsl
inc
jp
inc
mov
fnstcw
pop
or
cwtl
push
lods
xchg
xorb
into
dec
jmp
adc
and
out
sub
sub
push
and
imul
push
and
shrl
and
pop
sahf
pop
mov
dec
jne
pop
cltd
push
pusha
cmp
pop
std
add
cmp
into
push
shll
lods
jge
mov
inc
scas
jp
mov
jp
shlb
cmp
mov
test
xchg
sub
fsub
bound
sub
add
dec
add
popa
mov
scas
inc
cmpsb
cmp
xor
pop
mov
sub
lods
jno
movsl
cmp
aad
push
jmp
rol
xchg
mov
add
lahf
pushf
push
rolb
xchg
ja
or
adcl
fisttps
inc
push
adc
sub
push
mov
sub
ret
shll
xchg
into
or
decb
and
sbb
mov
xlat
lock
bound
mov
data16
cmpsb
mov
das
gs
mov
inc
orl
out
gs
fs
push
jg
mov
shlb
xor
xor
lods
fldt
rol
or
ss
xchg
jae
jnp
sbb
xchg
mov
fisttps
fists
and
mov
mov
mov
sbb
ss
mov
adc
jne
xchg
lcall
sbb
addl
test
sbb
xchg
std
mov
adc
stos
inc
orb
xor
enter
sbb
ffree
out
sbb
shrb
fsubrl
mov
aam
enter
rol
loope
aaa
xor
sti
divl
nop
or
enter
xor
push
xchg
dec
jmp
aaa
jg
aaa
sbb
jne
aas
js
inc
lock
hlt
inc
ljmp
dec
dec
push
popf
sub
xchg
jb
mull
inc
aaa
or
sub
xchg
jno
jb
ret
dec
fnsave
mov
sub
xor
xor
pop
lret
dec
bound
xor
pusha
flds
inc
scas
inc
adc
cmp
mov
pop
aas
xlat
dec
dec
add
pop
sbb
sub
sbb
or
inc
out
mov
pop
lods
fisubs
fsubr
mov
in
or
pop
leave
cmp
mov
out
sub
push
outsb
std
jo,pn
inc
xorl
movsb
pop
lret
aad
inc
mov
cld
push
roll
mov
push
in
jl
int3
xor
dec
xor
mov
inc
popa
push
bound
and
popa
pop
out
sbb
or
jnp
adc
aad
sarb
add
and
jl
inc
sbb
lret
and
jns
into
test
inc
inc
shll
and
pop
jne
imul
in
pop
add
call
mov
jge
ret
dec
mov
mov
xchg
fwait
movsb
pop
inc
cltd
adcl
inc
mov
mov
shlb
jl
scas
sti
mov
shll
je
popf
push
push
xchg
dec
jbe
xor
xchg
sbb
jl
loop
int
jmp
mov
icebp
adc
adc
enter
or
fsubr
adc
sub
mov
ljmp
test
or
rorb
out
imul
cs
cs
push
jnp
and
mov
pop
pop
daa
iret
mov
mov
xchg
outsl
or
dec
fisubrs
push
and
xchg
sub
repz
imul
stos
xchg
daa
sbb
push
pushf
or
xchg
in
add
test
test
mov
cmp
pop
dec
dec
inc
fwait
in
mov
add
addr16
pop
jb
fcomip
inc
add
lods
lcall
pop
pop
ljmp
movsb
sbb
mull
pop
mov
sbb
xchg
int3
sub
lret
fs
test
jo
es
insb
stos
pop
xchg
leave
fcoms
sub
repz
mov
movsb
adcl
jne
push
cwtl
fistpll
jnp
or
jecxz
out
idivb
aad
adc
outsl
pusha
cld
cmp
shll
stos
fisubrl
add
xchg
xlat
scas
pop
adcl
test
adc
add
adc
loopne
fs
push
out
rcll
and
inc
in
loope
mov
mov
popf
or
add
jl
mov
jg
push
scas
xor
mov
aas
fs
push
push
bound
gs
pop
inc
push
add
sub
sbb
inc
add
in
xchg
sub
jge
lret
clc
ret
ljmp
mov
mov
pmuludq
dec
lock
test
int3
movsl
xchg
pop
inc
lahf
jnp
pop
incb
into
filds
mov
pop
mov
loope
push
movsb
pop
adc
push
pop
push
ds
push
movsl
fwait
rolb
insb
sub
mov
mov
rcr
icebp
dec
into
xchg
cld
mov
mov
orb
pop
push
je
repnz
or
pop
aad
push
dec
mov
aaa
mov
lea
fcmove
push
add
sub
loopne
xor
loopne
outsb
loope
jns
adc
iret
mov
mov
lea
stos
cwtl
xor
adc
mov
fsub
inc
into
dec
or
cmpsb
jae
int
dec
outsl
push
aam
mov
setno
fsubl
aam
pop
das
fisttps
pop
sub
hlt
lea
in
mov
ret
adc
adc
and
arpl
pusha
lahf
xor
mov
aaa
cld
mov
pop
xchg
pop
enter
adc
and
or
aaa
jmp
sahf
rcr
mov
mov
cmp
lods
ret
rorb
call
mov
gs
pop
movsb
mov
cmp
cwtl
cmp
sub
rcrl
icebp
dec
inc
mov
xchg
adc
inc
and
pop
mov
and
jl
adc
mov
loopne
push
cltd
cmp
cltd
addr16
stos
pop
push
cmp
add
sub
mov
mov
addb
cli
sbb
mov
loop
out
lock
sbb
add
inc
testl
arpl
or
std
leave
aas
jp
pop
daa
popf
enter
sbb
sbb
rol
sti
leave
add
sbb
enter
jnp
test
pushl
dec
jo
push
int3
cmp
mov
pop
in
out
fidivl
fidivrl
cmp
nop
lret
push
and
dec
xchg
dec
pop
xor
pop
loop
fbstp
pop
into
push
inc
jns
ficompl
sub
fidivrl
sti
mov
sub
xchg
xchg
loopne
jmp
in
fcmovu
pop
lahf
out
cmp
mov
mov
es
jnp
pop
mov
add
lds
mov
pop
mov
or
and
repnz
aaa
lret
lcall
popf
or
std
test
outsb
fdivrs
test
adc
pop
sub
iret
in
pop
mov
daa
push
in
aad
shrb
jbe
cltd
adc
dec
dec
decl
mov
stc
lock
clc
and
dec
push
dec
decl
data16
jo
sub
adc
movsb
lahf
dec
decb
pop
xchg
mov
in
push
jne
jge
mov
ss
mov
loope
mov
mov
std
scas
and
dec
sbb
jno
jecxz
xor
lahf
test
sbb
sahf
ftst
sub
repnz
ds
outsb
sub
arpl
adc
jecxz
inc
aaa
add
inc
mov
xorl
add
mov
hlt
jg
fcoml
outsl
jb
fsubrs
ret
imul
nop
push
rorl
aas
mov
fisubl
push
xchg
rorl
subb
or
mov
dec
pop
inc
in
jnp
scas
lods
jb
sbb
arpl
xlat
xchg
in
or
call
or
or
inc
pop
roll
push
mov
xchg
test
outsl
fcoms
ficoms
mov
and
sarb
lret
and
repz
in
xor
outsb
adc
gs
fiadds
cmp
pop
lea
loope
lea
jecxz
call
push
and
mov
adc
sbb
cmc
pop
xor
in
sub
rolb
loope
dec
adc
add
mov
les
dec
jmp
xor
lahf
nop
int
jns
in
stos
imul
lahf
push
jno
cmp
xor
and
pusha
mov
gs
add
outsb
das
cmpsl
mov
clc
xchg
insb
cmc
outsl
mov
jmp
jbe
adc
jae
fdivs
mov
push
sub
fiaddl
inc
pusha
outsb
nop
out
lcall
add
sub
enter
fs
add
sbb
cmp
xchg
pop
lock
mov
mov
pop
dec
fmull
add
pushf
ret
sahf
adcl
out
ss
popa
call
cmpl
adc
push
xor
loopne
dec
add
sbb
sbb
add
xchg
in
mov
jmp
lahf
mov
ret
mov
inc
and
into
jns
test
leave
lea
lahf
icebp
nop
lock
and
fucomip
jle
pop
dec
mov
mov
cmp
lahf
xchg
fisubrl
aaa
sti
jae
pop
mov
adc
pop
and
xor
sub
dec
inc
cmp
cmp
dec
mov
adc
lret
cltd
ret
mov
divb
cmp
add
fisttps
jle
int3
mov
outsb
nop
je
ljmp
mov
jo
mov
dec
mulb
imul
mov
stos
or
dec
jmp
adc
not
xor
mov
sub
xchg
add
cmp
rcll
mov
es
call
cmp
fsubs
jmp
sub
mov
lods
in
out
loopne
jb
sub
scas
push
fisttpll
jmp
decb
add
fs
adc
or
mov
xchg
dec
sub
cmp
or
xchg
cmpsb
push
jp
in
leave
dec
cmp
cmc
inc
int
shrb
dec
dec
jecxz
ficompl
mov
mov
ret
insb
cmp
out
in
mov
cmpb
xchg
outsl
ss
mov
adc
sbb
push
icebp
insb
leave
dec
sarl
or
call
lret
sub
push
adc
movsl
mov
repnz
aaa
aam
daa
push
add
push
mov
scas
icebp
mov
jecxz
pusha
pop
adc
dec
test
or
ss
cmc
jge
lea
outsl
adc
and
mov
jecxz
mov
add
lahf
das
gs
mov
sub
out
shlb
xchg
into
shrb
cli
jns
xchg
sbb
sbb
push
out
rcr
pop
xor
ds
mov
sbb
gs
mov
mov
mov
and
jne
enter
je
pop
lock
cmc
adc
sbb
fwait
push
inc
sub
cwtl
xlat
jg
stc
in
xchg
dec
stc
test
xor
xor
inc
data16
cmp
cli
push
test
cs
int3
fsubrs
mov
daa
daa
addl
xchg
insl
mov
jecxz
inc
mov
inc
mov
mov
add
add
aaa
popf
or
mov
ss
fdivrl
or
cmp
aaa
es
inc
fwait
xor
mov
ret
in
mov
xor
pushf
out
ror
cltd
or
ret
push
or
push
mov
add
pavgb
mov
popf
ret
popa
into
test
cld
mov
adc
pop
arpl
mull
lret
sub
push
adc
enter
xor
cmpb
jb
data16
inc
xor
lret
data16
mov
inc
arpl
or
leave
xchg
call
int3
pushf
dec
mov
xlat
mov
xlat
xchg
mov
lods
call
push
sbb
loopne
pushf
push
sahf
cmp
mov
mov
ljmp
sub
xchg
adc
cmp
push
out
sbb
les
leave
jns
xchg
pushf
xchg
cmp
and
push
push
sahf
or
and
decl
fiaddl
inc
cld
sub
and
cmc
lret
int
jecxz
jmp
add
maxps
jb
stc
pop
and
push
xchg
lcall
jno
fsubrs
dec
shl
and
aas
jnp
push
insl
inc
mov
mov
xchg
outsb
sub
sbb
push
mov
mov
add
lret
mov
fistpl
sub
mov
jnp
lret
por
sbb
int3
ret
cwtl
sarl
push
mov
leave
popf
mov
pop
sahf
scas
leave
and
enter
dec
pop
imul
scas
out
ss
adc
sbb
inc
xor
mov
xchg
xor
cmp
adc
cmp
inc
add
lahf
pop
scas
push
lret
cli
push
push
movsl
dec
xor
and
clc
inc
mov
mov
loopne
fcmovnbe
mov
fcomi
mov
fiaddl
pop
neg
or
outsb
hlt
test
cltd
outsb
mov
and
outsb
or
inc
xor
ss
jmp
shl
cwtl
fdivl
mov
hlt
mov
ljmp
fwait
lods
sub
jno
dec
ret
push
xor
inc
xchg
inc
sub
aaa
aas
sbb
pop
cltd
sbb
out
arpl
sub
ja
pushf
ljmp
sub
test
pop
clc
les
fxch
and
xchg
jns
cli
inc
xchg
and
bound
in
mov
and
push
lods
pop
ret
shlb
and
roll
inc
xchg
test
sbb
or
xchg
dec
insb
mov
into
lret
adc
cmp
ss
lcall
cmp
aaa
pushf
ret
or
pop
pop
inc
arpl
push
insl
dec
sti
mov
sub
pop
loop
fidivrl
negl
popf
dec
out
push
push
dec
ret
pop
cmp
xor
enter
jb
aad
push
gs
addr16
sbb
sahf
daa
dec
jo
ret
xchg
push
fdivl
cld
fcompp
iret
jns
cmp
in
fiadds
xchg
sti
xchg
adc
out
or
imul
out
pop
popa
sbb
rorl
sub
subb
loope
jbe
ficoml
jl
push
aam
repz
sub
cmp
das
outsb
push
xor
xchg
stos
cs
andl
mov
out
leave
mov
pop
clc
test
je
div
or
pop
lods
or
ffreep
mov
cmp
pushf
lret
xchg
leave
sahf
jbe
dec
out
lcall
and
mov
into
inc
jecxz
jo
sbb
inc
iret
cmp
mov
jne
insb
lahf
xchg
leave
pop
inc
inc
enter
fs
sub
fsub
test
and
jle
mov
and
pop
mov
mov
mov
arpl
cmp
sub
push
dec
ds
push
pop
lea
pop
jne
xchg
cltd
movsb
pop
sub
pop
shl
add
xchg
jmp
dec
push
mov
xchg
fidivrs
xchg
mov
sarb
dec
xlat
repz
xchg
xchg
pop
hlt
and
pushf
sbb
jle
dec
adc
push
cwtl
ret
pop
mov
cmp
add
fbstp
stc
icebp
ret
jmp
mov
cmp
mov
sub
mov
aad
pop
sub
addl
pop
inc
in
aad
mov
mov
push
aad
xchg
loope
inc
shl
hlt
in
repnz
movsb
dec
cmpsb
sbb
sub
inc
lea
fdivrp
jnp
mov
cmpsl
mov
adc
add
push
bnd
mov
cmp
lods
mov
inc
mov
stos
movsl
fwait
stc
xchg
jmp
icebp
pop
fildll
addl
test
aaa
test
cmp
imul
in
cmpsb
adc
xchg
ror
pushf
iret
psrlw
cmp
xchg
icebp
movsb
in
adc
inc
inc
dec
fdivrl
pop
jnp
adc
xchg
lahf
sbb
ljmp
jb
mov
repz
xlat
aam
icebp
stc
mov
ds
add
das
mov
out
fisubs
inc
std
mov
outsl
sub
test
dec
call
adc
sub
xchg
mov
mov
add
mov
scas
xchg
jge
sub
jne
push
dec
sub
xchg
out
xchg
xor
rcll
addr16
jbe
xor
mov
ljmp
es
and
jl
insl
pop
pop
xchg
xchg
leave
push
lret
jl
xlat
pop
adcb
out
jg
fstl
sub
push
push
mov
xor
cmp
jp
sub
mov
out
and
popf
mov
cld
jno
dec
xor
iret
or
sub
stc
mov
bndldx
mov
and
es
dec
inc
loopne
lret
fadd
jae
dec
push
sub
cmp
mov
cmpsl
repnz
lret
imul
aad
pusha
push
push
testl
jbe
rorl
lods
or
inc
jecxz
inc
mov
sub
cmpsb
jg
stos
mov
ret
cmpsl
test
aas
mov
or
or
pop
mov
fucom
mov
mov
aaa
lret
daa
cltd
pop
pop
inc
lock
inc
mov
jp
cmp
and
push
bound
xchg
call
jg
jl
jl
and
jge
sub
or
aaa
in
in
in
adc
dec
mov
cmp
jns
leave
insl
push
stos
into
call
inc
fldenv
jns
mov
inc
gs
push
sar
decl
mov
arpl
xlat
and
mov
addl
xor
cmp
adc
aad
add
rcll
push
sbb
xchg
insb
int
pop
neg
out
cmp
pop
sub
pop
sbb
or
addl
xor
movsb
xor
ljmp
das
movsb
mov
enter
cmp
jge
enter
mov
sbb
inc
fdivrl
decb
cmpsb
cli
sub
call
test
dec
push
aad
pop
ja
lret
mov
cmp
xchg
roll
sub
sbb
outsl
jno
push
or
mov
cmp
push
outsb
fstl
sbb
mov
sub
out
lcall
cli
lods
int3
adc
sub
in
fwait
in
xchg
add
jns
popa
dec
jp
aaa
lods
mov
or
or
leave
repz
loop
push
js
ret
xor
lods
leave
push
sbb
mov
adc
xchg
pop
xchg
xor
mov
mov
scas
xor
ret
bound
mov
scas
mov
push
mov
movsl
lea
push
cmp
push
test
cltd
in
push
push
repz
jno
mov
movsl
out
mov
aas
cmc
lret
test
jg
push
pop
les
xor
mov
dec
in
movsb
push
sub
jbe
or
add
imul
mov
lahf
dec
inc
xchg
push
inc
xor
mov
and
pop
sbb
cmp
push
inc
pop
pop
push
jo
popa
in
scas
xor
dec
icebp
sub
or
xor
mov
mov
mov
lcall
mov
jecxz
mov
xor
jmp
jae
aas
jb
mov
ja
jb
add
outsb
jg
mov
ja
outsl
push
sbb
xor
lcall
sbb
mov
sub
mov
pop
outsl
jle
fld
lahf
and
popa
jb
lods
cltd
cmp
movsb
imul
dec
iret
out
xchg
scas
sub
pusha
jecxz
movsb
pop
orl
xor
ret
jnp
cltd
xor
aaa
mov
and
out
jle
js
dec
loopne
push
sub
insl
xchg
leave
adc
jl
adc
stc
fsub
mov
add
in
shl
push
mov
fsubrs
or
sub
insl
sbb
push
nop
clc
das
and
popa
xor
cltd
jecxz
bound
cmp
and
mov
or
mov
ss
idivl
mov
ss
fwait
scas
mov
fdivrp
fildll
test
cmp
cwtl
push
cmp
aaa
mov
jne
shll
decb
leave
outsb
sbb
pop
jl
inc
inc
dec
rolb
pop
iret
mov
daa
mov
aaa
xchg
insl
insl
lcall
or
jo
pop
mov
dec
outsl
jp
jle
mov
pop
adc
sarl
sub
mov
pop
jle
dec
push
dec
cmp
inc
add
imul
push
shll
dec
ffreep
sub
fs
enter
bound
jp
or
xor
xchg
inc
push
push
sub
aam
xor
cmpsb
push
push
jno
jmp
lea
gs
cwtl
bound
push
repz
fstpl
cmpsl
loopne
cli
mov
jecxz
dec
fsubp
stc
test
inc
xchg
shrl
jge
jge
mov
bound
jle
lods
push
jne
jae
cmpl
lock
idivl
xchg
sbb
fsubrs
dec
adc
mov
cmp
ret
xchg
mov
mov
loopne
cmp
push
cmp
add
outsl
sarb
movsb
out
jb
pop
mov
xor
mov
shl
nop
mov
push
push
or
dec
adc
xchg
int3
js
lcall
xor
push
imul
inc
lock
jnp
pop
mov
mov
push
jne
es
in
decl
add
movl
gs
inc
xchg
push
dec
jp
sub
cmp
fmul
fwait
out
addb
cmp
inc
out
sbb
ja
jnp
xor
std
fbstp
add
mov
inc
out
gs
mov
insb
add
and
rcrl
add
push
fs
into
fcompl
cli
lahf
xchg
and
rcrb
movsl
leave
sahf
out
mov
mov
lea
std
orb
push
dec
jecxz
popa
xor
adc
dec
add
addb
adc
sarb
pop
leave
sub
daa
into
clc
cmp
mov
push
sahf
test
int3
adc
xor
sahf
mov
out
mov
xor
pop
add
std
in
int3
or
mov
loope
ds
push
sub
push
xor
fs
in
or
ds
pop
pushf
sarl
mov
mov
push
mov
shlb
push
decb
test
pop
jg
or
mov
negb
pushf
xchg
jbe
mov
popa
lret
subw
dec
adc
sub
and
rcl
sub
jo
or
fwait
sub
outsl
jnp
jbe
inc
clc
add
pop
or
mov
in
fisubs
insb
fisubs
xor
mov
inc
lock
loop
iret
fdiv
aam
jno
in
clc
inc
aas
icebp
adc
cmp
xor
inc
xchg
out
movsl
or
inc
loopne
dec
cmp
and
pop
xor
push
dec
out
push
fucomi
arpl
mov
xchg
cltd
movsb
mov
or
imul
scas
lea
push
dec
jp
push
lods
and
pop
sub
testb
leave
jmp
jns
sub
dec
enter
xorl
daa
nop
jnp
xor
paddw
mov
sbb
icebp
xchg
inc
dec
cld
sahf
pop
cltd
sub
fsubl
loopnew
adc
xchg
add
mov
bound
ds
mov
push
mov
or
dec
mov
stos
shl
jbe
jmp
xlat
add
xchg
into
add
and
ss
push
mov
dec
mov
testb
int
dec
fs
adc
das
dec
stos
outsb
cmp
dec
cs
mov
mov
cli
daa
adc
jb
pop
int
mov
mov
inc
nop
ds
xor
add
jge
xlat
jge
cltd
fsub
enter
andb
test
aam
orb
aas
dec
dec
int
or
mov
loop
inc
hlt
sub
push
dec
mov
rcr
mov
andl
jnp
xor
sub
or
testl
mov
and
jnp
dec
loop
cmp
stc
and
jmp
out
addr16
add
aaa
fldenv
jo
add
pop
lcall
push
cmpsb
mov
sbb
and
mov
repz
push
jmp
leave
jo
mov
sub
cmpsb
sub
fsts
into
adc
movsb
lock
add
mov
add
addl
cmp
movsl
aaa
sahf
pop
scas
repz
mov
bound
inc
out
mov
cmpsl
sbb
xor
mov
mov
loope
loopne
das
insb
addl
loope
movsl
mov
push
pop
shrl
push
push
jge
inc
add
insl
test
repz
es
int
mov
mov
dec
popf
xchg
adc
add
adc
ja
cmp
jno
repz
xlat
dec
cltd
shl
and
inc
sar
inc
jbe
sti
in
adcl
cltd
das
mov
sbb
ja
aaa
xor
aaa
bound
pop
or
adc
pop
adc
pop
lods
loopne
pop
cwtl
int
lahf
dec
dec
ja
sub
clc
adc
stc
test
stos
push
mov
mov
xor
xchg
shll
xor
xlat
mov
sub
xchg
or
jle
push
pop
mov
out
xor
aam
mov
adc
or
mov
xor
pop
js
cmp
in
jno
outsl
inc
orb
rcr
ds
popa
addr16
push
into
xor
mov
imul
shll
fcoml
cmp
inc
repnz
inc
or
cli
mov
movsb
inc
jae
push
subl
test
outsl
push
loopne
xlat
adc
cmp
xchg
fisubs
fcmovnb
sarb
xor
cli
mov
and
push
sbb
jnp
rorl
sbb
adc
lock
aad
add
push
lods
popa
in
or
sub
lock
repz
mov
repz
add
addr16
int
arpl
push
and
adc
frstpm(287
and
cmc
cmp
push
push
mov
push
test
jae
xchg
movsl
mov
out
int3
out
std
sub
repz
mov
sub
sbb
mov
loope
jno
jle
inc
xchg
dec
out
add
mov
pop
aam
xchg
jo
leave
bound
push
sub
cwtl
adc
psadbw
pop
push
int3
ljmp
adc
inc
lods
push
mov
mov
jo
jp
cs
pop
loop
gs
cmp
cli
xchg
movb
adc
fs
testl
ja
aad
gs
loop
lods
loop
mov
inc
inc
fucomip
sub
sub
mov
jp
fucomip
clc
or
outsl
cmp
mov
fisubs
xchg
mov
cs
or
jo
shll
hlt
cmp
ret
xchg
pop
mov
clc
out
sub
pop
cmp
add
sbb
ljmp
push
repz
push
loopne
dec
jmp
enter
call
xchg
cmpb
mull
nop
ljmp
insb
int3
xor
ficoms
push
mov
shr
mov
and
pop
push
fdiv
outsl
xor
mov
jge
push
push
adc
mov
pop
mov
shrl
rorl
and
adc
jbe
mov
push
adc
xor
cmp
xor
xor
subl
aaa
into
jns
dec
js
mov
ja
sbb
mov
xor
call
bound
sub
dec
sub
nop
or
inc
jo
outsl
push
dec
sbb
adc
dec
jg
push
popf
cmovs
rcrb
int
cmp
shrl
add
mov
xchg
stos
cmp
adc
adc
enter
xor
push
push
adc
cs
or
pop
rolb
test
sbb
ficoml
sbb
push
xchg
out
push
mov
mov
movsb
jmp
xor
pop
pop
mov
sbb
lret
gs
stos
inc
cs
in
cmpsl
mov
mov
mov
cmp
pop
push
sbb
stos
jnp
sbb
in
test
sarl
mov
dec
cmpsl
jns
pop
xchg
jg
mov
cmp
pop
sbb
lods
mov
fwait
dec
and
mov
std
push
mov
xorw
out
push
xchg
cmp
ja,pt
sti
push
and
js
dec
pop
pop
add
mov
cmp
mov
addr16
bound
out
xor
pop
aas
jp
dec
cmp
aas
sbb
jb
addr16
sbb
inc
inc
insb
lahf
inc
fildll
add
or
dec
in
ljmp
inc
ret
jp
das
mov
test
adc
enter
mov
mov
mov
jbe
push
rclb
mov
pusha
stc
call
dec
jo
sbb
cmp
cmc
add
nop
mov
or
rcrb
minps
je
adc
push
dec
in
jle
dec
fwait
sbb
movsl
pop
out
scas
enter
push
orl
push
mov
pop
inc
mov
sarb
insb
out
ret
sbb
push
aaa
or
fs
dec
mov
ficoms
xor
push
outsb
sahf
or
mov
jbe
mov
aaa
pop
inc
bound
fsubs
popf
cltd
das
dec
nop
pusha
jae
fisubs
test
dec
scas
cmp
js
aaa
bound
cmp
and
mov
leave
pop
dec
push
aas
adc
aad
cmp
ftst
add
sbb
testl
adc
jle
aam
add
nop
rolb
jnp
loopne
inc
and
push
jg
rol
mov
fcoms
adc
mov
xchg
stos
js
lcall
mov
push
out
shlb
add
push
sub
ja
pop
imul
and
mov
cli
stos
xlat
mov
sbb
cmpsl
je
aas
or
mov
adc
icebp
cli
ljmp
test
jnp
sub
mov
jns
arpl
mov
aad
dec
fcmovnb
scas
mov
cmpsl
xchg
mov
pop
pop
sbb
in
jae
jecxz
sub
or
pop
aas
xor
rolb
lahf
mov
jne
addb
push
cmc
in
ret
mov
les
adc
lret
cltd
imull
inc
sti
dec
or
call
sbb
cld
jle
add
add
js
fwait
cmc
roll
sahf
jmp
popf
lret
cmpsl
jp
sbb
addb
fildl
push
or
mov
pop
push
insl
add
stc
xchg
int3
iret
dec
jo
xor
leave
loope
fnstsw
out
sbb
fmull
bnd
cltd
in
lock
mov
cmc
and
push
in
or
loop
mov
pop
and
pop
fwait
test
pop
mov
and
push
mov
les
push
incb
xchg
aad
repnz
cmp
ret
xor
sahf
sbb
test
rcrl
ret
testb
jl
push
iret
pop
adc
mov
sub
cmpsb
loop
fwait
out
fcomps
pop
inc
enter
xchg
repnz
cmp
add
dec
dec
dec
cmp
mov
inc
fwait
xor
xor
adc
inc
orl
pop
sub
test
cmp
fisubrs
cmpsb
mov
cmp
shlb
cmp
and
loop
ds
insb
ja
std
dec
dec
ret
mov
repnz
xchg
xchg
rclb
inc
sbb
sahf
jbe
ljmp
inc
sbbb
stos
mov
mov
xorl
push
cs
cld
adc
das
jle
pop
mov
outsb
imul
push
xchg
mov
fstpt
xor
cmp
push
mov
or
lcall
xorb
mov
arpl
sbb
pop
stos
je
ljmp
gs
imul
jae
adc
add
mov
adc
insl
adc
rorl
push
clc
or
imul
setno
ja
insl
or
test
mov
fmuls
jle
cltd
scas
cmp
ljmp
andl
xor
stos
add
push
out
stc
pop
stc
xchg
sahf
je
movsl
push
fucomip
arpl
push
xorps
insl
ss
cwtl
inc
fstl
mov
cmpsb
test
lahf
mov
int3
mov
lret
or
adc
mov
pop
dec
popa
scas
push
dec
mov
lds
push
inc
jmp
mov
dec
addr16
jnp
ss
mov
cmpsb
rcrb
in
scas
mov
pop
fmuls
sub
sar
xchg
pop
mov
mov
popf
fwait
popf
pop
jo
mov
inc
incb
loope
arpl
adc
outsb
pop
xor
fprem
clc
inc
sub
pusha
mov
cmp
lahf
jmp
movsl
sub
push
movsb
jnp
xorb
pop
jb
mov
out
mov
sbb
jle
cmc
lret
sbb
jmp
mov
sbb
imul
sub
aas
xchg
rol
adc
xchg
lret
push
dec
mov
and
aam
push
jge
push
mov
orl
pop
pop
add
mov
pop
cwtl
aad
std
bound
jae
mov
lods
mov
dec
int
call
adc
pop
dec
xchg
jne
inc
stos
imul
mov
sub
add
inc
rcrl
lds
aam
mov
cmp
add
mov
jg
push
xchg
push
mov
and
dec
mov
pop
sbb
daa
stos
adc
in
pop
enter
fwait
sbb
sti
jg
loopne
and
call
pop
ret
pop
push
inc
imulb
insl
idivl
dec
jp
mov
sbb
cmp
or
lds
pop
xor
rcrb
cmc
cli
mov
jg
cltd
xchg
popa
iret
fs
and
mov
xchg
js
in
sub
or
lret
outsb
aaa
ret
and
add
jl
fistps
lret
shll
dec
fstps
out
scas
xchg
and
add
and
das
pop
enter
or
xchg
in
gs
mov
orb
dec
or
mov
mov
ja
mov
pop
pop
and
xchg
mov
sub
mov
mov
jae
xchg
xor
hlt
inc
sbb
sti
mov
and
loop
sbb
shlb
gs
lods
imul
aas
mov
adcl
out
std
repz
mov
call
or
xchg
mov
cld
jae
xchg
call
or
inc
and
mov
mov
xchg
and
adc
jae
add
das
jle
es
pushl
pushf
mov
jge
stc
inc
in
xchg
or
and
cmp
dec
pop
pop
sbb
cmpsb
out
test
xor
rcll
loope
cmpb
push
movsb
mov
or
mov
or
cli
dec
fsubs
or
stos
sarb
out
std
sub
dec
fidivl
push
ds
jb
jbe
cltd
insb
lahf
call
mov
cmpl
ret
adc
test
hlt
daa
push
push
jle
or
fldcw
sbb
ljmp
fsubr
shlb
dec
movsl
fsubrl
test
nop
test
imul
loopne
push
mov
adc
lock
mov
fwait
arpl
add
sub
push
mov
jp
xchg
faddl
sub
mov
sub
mov
data16
pop
push
mov
pop
adc
orps
arpl
iret
and
inc
dec
jno
pusha
cmp
and
xor
mov
movsl
sbb
adc
xchg
push
pusha
out
test
bnd
aam
cli
lahf
stos
insb
mov
sub
insl
scas
mov
mov
pop
jmp
cmp
rolb
ljmp
mov
in
push
adc
test
jg
es
leave
mov
lea
jo
add
push
adc
or
ret
mov
bound
push
ret
lahf
mov
xchg
in
and
xchg
mov
add
je
fsubl
out
inc
frstor
loope
jnp
rcrl
inc
jnp
xchg
sarl
icebp
jb
xchg
jp
push
fcompl
mov
fs
add
jb
roll
rcrb
jmp
leave
shl
fwait
ret
lret
cmp
pop
call
mov
test
je
dec
cs
fadd
sub
add
mov
push
cmp
dec
stc
jl
xlat
mov
push
or
lret
mov
pop
ficoms
in
nop
jg
xlat
lds
movsb
xchg
mulb
int3
hlt
in
js
rolb
mov
leave
inc
insl
mov
jge
jno
shl
sahf
push
pop
push
stos
mov
xor
mov
and
cltd
and
fwait
pop
dec
and
in
mov
mulb
mov
cmp
dec
stc
xor
lods
decb
mov
ret
add
lahf
hlt
push
ret
dec
addr16
xchg
sarl
in
mov
and
adc
pop
aas
xchg
outsb
insb
sahf
cltd
es
xor
lock
test
outsl
cwtl
push
out
sarl
jnp
rolb
sarb
stos
xorl
sbb
add
mov
xor
mov
aaa
lods
inc
sbb
stos
jle
inc
and
int
out
jle
xchg
shll
popa
sbb
loop
pop
xchg
mov
mov
popa
ss
cmp
sub
add
mov
mov
jle
hlt
mov
rcrl
shrb
ljmp
testb
sub
cmc
data16
dec
mov
mov
sub
add
sbb
leave
and
push
jg
dec
fcmovbe
and
roll
cmp
testb
setns
mov
pop
push
clc
mov
sub
mov
sbb
std
mov
seta
movsb
ror
or
push
in
loop
or
or
adc
pop
xor
inc
fnstcw
notl
in
icebp
in
jne
lods
mov
out
aad
adc
jb
jg
sub
jo
lahf
dec
jo
imul
out
nop
xor
cli
and
rclb
jecxz
inc
cmp
mov
inc
push
xor
cmpsb
popa
das
fcompl
jns
in
loopne
in
mov
sbb
xchg
sub
ror
push
sbb
out
ret
mov
mov
dec
or
or
clc
cld
pop
dec
add
jne
mov
mov
jecxz
into
mov
inc
jnp
jge
jns
mov
jge
cmp
push
mov
into
mov
xor
in
jo
inc
lods
mov
add
sbb
imul
pop
push
or
push
xor
xchg
lds
lock
shlb
pop
inc
add
jp
sbb
mov
je
mov
sub
and
clc
je
inc
add
xorl
dec
push
xor
inc
inc
dec
or
jno
push
icebp
repz
push
cwtl
clc
sub
jnp
ret
daa
or
jns
jbe
lods
or
mov
call
jb
or
mov
xor
xlat
jns
push
call
mov
push
push
pop
pop
cmp
lcall
jo
lea
pop
cwtl
scas
or
idivb
and
jno
enter
cmp
lods
push
xchg
mov
jmp
push
imul
movsl
pop
push
movsb
das
xchg
jae
ljmp
es
push
dec
pop
inc
outsl
xor
fdecstp
pop
incl
jp
mov
sarl
bnd
adc
adc
lods
xor
pop
sbb
les
inc
rolb
jl
ss
cmc
into
sub
ja
mov
sbb
bound
cwtl
pop
enter
subb
and
cmpsb
adc
jle
in
fwait
int
aad
lret
xlat
jl
out
mov
and
stos
scas
lds
xchg
cmp
daa
jg
test
ror
pusha
hlt
add
mov
push
add
inc
movsb
xor
pop
jl
arpl
shl
xchg
loop
xor
loopne
in
pop
inc
mov
xchg
popa
or
sbb
repnz
push
lods
dec
pushf
orl
sbb
inc
pop
mov
lcall
or
mov
push
jb
out
mov
popf
jns
lret
lods
out
xchg
pusha
push
and
and
jne
cld
and
imul
loop
push
and
pusha
in
lock
aam
sti
push
mov
xchg
negb
jne
sub
or
cmpsl
lahf
lods
in
xor
inc
fwait
subl
inc
cmp
sbb
mov
inc
sub
jcxz
xchg
xchg
inc
cmp
testb
sbb
out
movsl
fsub
lods
or
push
imul
jecxz
lret
jb
popa
sub
scas
nop
jae
and
les
jbe
sub
in
and
or
push
mov
mov
sub
lods
ret
and
cmc
lret
ljmp
and
pop
insb
cmp
push
arpl
or
sbb
ds
dec
mov
mov
push
cld
inc
jp
jp
pop
test
jno
repz
loopne
out
inc
xchg
fdivrs
leave
icebp
lods
mov
aas
in
push
enter
pusha
mov
aad
sbb
shlb
imul
xchg
push
xor
sub
mov
cld
pusha
or
add
mov
or
mov
sbb
cltd
jbe
stos
or
sarl
sbb
cmpsb
pop
fwait
rcrb
jbe
stc
repnz
xchg
xchg
outsb
xchg
arpl
jg
add
in
dec
ret
inc
cld
jl
dec
aad
cmpb
out
loop
mov
pusha
repz
out
hlt
mov
mov
rolb
xor
cmp
cmp
icebp
cld
xchg
adc
lds
daa
ljmp
leave
popf
cs
pop
sbb
roll
dec
mov
mov
out
fnstsw
leave
cmp
or
pusha
xchg
jae
aam
fdivl
jle
dec
mov
cmc
pop
movsl
cmp
sbb
mov
xchg
test
loopne
cmp
dec
pop
dec
nop
test
aad
and
mov
sbb
outsb
fdivrl
sbb
inc
test
xchg
and
cltd
aaa
mov
xchg
scas
jmp
sahf
sahf
jp
sti
movsb
outsl
sbb
sbb
jmp
sbb
shll
loope
jp
mov
jle
adc
insl
mov
push
aam
cli
or
neg
sbb
mov
xor
sarl
sub
aam
xchg
add
outsl
out
dec
cmp
cmp
repnz
mov
push
sub
stos
push
mov
and
adc
push
dec
mov
imul
mov
mov
pop
xor
mov
mov
push
ljmp
sbb
jg
inc
and
fiaddl
mov
inc
cs
cwtl
and
pop
jp
jbe
cltd
xlat
sub
sahf
int
sbb
andb
nop
sbb
pop
inc
xchg
fs
pop
imul
negb
add
push
rorb
inc
jae
call
push
aaa
int
cmp
scas
enter
sub
scas
popa
xchg
in
rcr
mov
dec
xor
or
xchg
pop
jg
push
jb
and
mov
in
outsb
aas
lret
push
xor
rcll
movsl
sub
sub
lea
es
jg
scas
in
mov
bound
loope
test
lods
push
inc
jmp
pop
mov
xchg
fmul
cmpsb
out
fildl
or
or
je
cs
mov
leave
jo
mov
xchg
daa
xchg
mov
lahf
pop
iret
orl
xlat
xchg
fwait
scas
pushf
cmp
addl
xor
pop
ret
add
sahf
jl
sbb
and
sbb
and
or
adc
sti
xchg
enter
push
ds
cli
dec
inc
pop
push
cwtl
vunpckhps
or
imul
jnp
mov
jl
push
mov
cmp
mov
jb
dec
bound
sub
jnp
jecxz
adc
cmp
fwait
rcrb
mov
xchg
dec
push
cli
jb
mov
inc
in
jns
dec
cmp
insl
sbb
outsb
dec
loop
mov
ljmp
lods
and
pushf
lcall
fnstsw
cmp
dec
sub
leave
inc
cmp
ljmp
ror
xchg
int3
rorl
inc
popa
int3
xchg
xor
jb
clc
xor
cmpsb
sbb
xlat
in
movsl
fmuls
cs
cmpsl
sbb
and
add
xchg
add
imul
inc
jp
fcoml
lret
cmpsb
jmp
aaa
inc
add
aam
lea
push
jne
and
dec
mov
out
or
mov
pop
int3
daa
jg
pop
scas
inc
push
push
pop
mov
cmpsb
push
stc
decl
adc
movsl
out
call
stc
cmp
sbb
movsl
test
add
aas
pop
dec
hlt
xchg
cmp
dec
mov
mov
jb
pusha
cmp
in
pop
shll
ret
jno
dec
shlb
mov
jge
pop
test
loopne
js
add
out
sub
dec
rcll
xor
sub
fimuls
sub
push
cmp
bound
xlat
add
bound
mov
mov
imul
fdivrs
cmp
push
inc
mov
adc
fs
mov
push
cwtl
pop
std
ret
stos
out
das
ss
cmp
mov
lret
and
mov
mov
minps
xorl
mov
inc
fdivs
outsb
repnz
shll
inc
dec
dec
push
daa
xchg
lods
stc
add
inc
mov
rolb
lret
fwait
loope
cmp
call
push
push
movb
push
xlat
pop
and
pop
lods
daa
pop
fwait
inc
and
sti
push
out
pop
scas
sbb
push
mov
ret
push
dec
and
inc
jg
mov
cmp
add
mov
in
mov
mov
jg
mov
hlt
xor
ljmp
negl
sub
push
inc
xchg
je
lea
gs
cmc
frstor
jmp
add
daa
dec
sbb
mov
add
mov
mov
xorl
dec
xor
cmpsb
cmp
out
mov
xchg
xchg
jns
add
mov
cmp
pushl
adc
dec
inc
mov
int3
sbb
loopne
xor
cli
pop
xor
or
jmp
push
call
ds
xchg
adc
pusha
pop
add
lods
lods
add
xchg
popa
lods
daa
push
sti
sbb
fidivrl
fwait
test
cmpsl
push
or
jle
xlat
je
out
push
cld
mov
mulb
out
mov
in
cmpsb
aam
mov
mov
dec
ja
test
jae
push
jae
inc
shrl
mov
sub
mov
jne
out
repz
icebp
rcrl
cmpsl
inc
adc
das
xchg
pop
jecxz
push
add
adc
bnd
push
fldcw
mov
jle
daa
cmp
insl
frstor
fistps
cmp
cmp
imul
sub
flds
ror
mov
movsb
add
push
mov
xor
ss
xor
adc
or
int3
xchg
push
mov
out
out
stc
push
xor
cmpsl
rorb
push
xchg
insb
andb
mov
in
insb
lahf
add
jns
push
call
sbb
jmp
jno
push
xor
lea
lret
cmp
push
ss
pop
pop
and
out
xor
dec
pop
jno
pop
and
mov
adc
push
mov
cmp
bound
ss
mov
cmp
sub
test
not
aaa
mov
ret
xor
sahf
inc
into
lds
shlb
jae
in
jno
xor
jge
xor
inc
in
addr16
gs
or
addb
jo
push
mov
cs
jg
and
daa
dec
rcrl
andl
outsb
push
mov
out
jbe
jns
pop
loope
sub
xchg
loop
xor
arpl
mov
iret
imul
inc
xchg
out
or
pop
or
sbb
into
scas
xchg
and
scas
mov
lods
stos
iret
adc
in
insb
div
cmpsb
and
xchg
out
push
cmpsl
jmp
outsb
xchg
xor
aas
test
enter
adc
sbb
cmp
in
push
jo
cmp
dec
dec
xor
and
stc
jb
mov
ret
jge
je
jmp
xchg
mov
push
sbb
daa
mov
and
jp
imul
and
push
arpl
dec
repz
fwait
pusha
jne
pop
mov
inc
push
divl
cltd
insb
daa
es
in
jge
mov
or
jmp
lret
inc
and
jne
mov
pushf
sbb
mov
pop
pop
enter
popa
scas
cmp
push
sub
inc
jbe
fwait
ds
or
sbb
test
addl
inc
jnp
into
cltd
push
xor
or
andb
mov
sub
mov
pushf
sahf
call
adc
ret
stos
xor
and
dec
daa
adc
fistps
mov
mov
roll
es
data16
cmpl
and
or
add
xchg
rcrb
cmp
lods
mov
cs
pop
sbb
mov
mov
mov
mov
pop
aas
out
pop
adc
outsl
mov
dec
mov
call
jns
or
cs
pop
jge
lret
cltd
add
test
mov
push
shlb
xchg
aaa
cmp
fdivrl
fwait
mov
out
jo
rorb
aad
int3
lods
adc
test
push
add
cmpsb
js
gs
sarb
jg
int3
repnz
cld
adc
testb
add
in
xor
imul
imul
push
add
aad
jns
sub
gs
cmp
push
cmc
popa
jae
popa
loop
inc
out
lcall
stos
movsl
jo
enter
cmp
rclb
shr
repz
and
fisttps
ret
int
pushf
push
loope
insb
imul
out
cmp
or
xlat
daa
add
arpl
sbb
lea
add
inc
inc
xchg
cmp
dec
roll
mov
psraw
sar
mov
push
jge
addb
inc
adc
jae
adc
ret
test
mov
fcoms
add
test
das
in
sarl
pusha
xchg
data16
dec
push
jb
test
lods
sti
in
loope
mov
lret
sahf
cmpsl
in
jno
jno
out
push
cli
clc
nop
jge
adc
insl
xor
mov
movsb
bound
add
in
adc
sbb
mov
loopne
stc
adc
sti
jmp
mov
inc
mov
or
sbb
imul
push
inc
adcb
mov
in
mov
or
push
testb
lea
or
xlat
pusha
pop
mov
jnp
int
add
mov
mov
push
cmp
scas
sub
mov
aas
cld
ret
xchg
inc
es
add
dec
add
xorl
daa
inc
mov
inc
inc
lds
sbb
sub
jmp
pop
pop
sbb
and
jae
bound
lret
mov
push
jns
pop
inc
xchg
push
xchg
pop
push
lds
call
push
inc
sbb
mov
mov
lahf
into
lock
mov
pop
xchg
in
jg
lret
sbb
fisubrs
cmp
jne
mov
in
push
clc
bound
ror
imul
aad
decl
cs
jg
sbb
les
inc
je
popa
or
push
sub
fidivs
insl
sbb
jo
sbb
sbb
fwait
pop
sbb
cmc
mov
imul
xchg
rcr
or
push
iret
jmp
and
cli
or
push
inc
mov
dec
xor
push
sbb
cmp
cmpsb
in
or
test
pop
fs
add
xlat
shr
adc
sbbl
repz
adc
cmp
lret
call
mov
std
pop
data16
push
stos
mov
xor
hlt
pusha
jl
and
cwtl
jns
push
ss
ljmp
stos
fdivr
lock
loopne
jp
sbb
stos
push
dec
push
xchg
mov
and
adc
mov
hlt
xchg
push
jl
mov
sbbb
int3
stos
xor
inc
pop
int3
out
sti
mov
mov
adc
ljmp
jae
and
cmp
gs
dec
cmp
push
cltd
inc
int
psraw
clc
jne
xor
iret
or
jno
or
cmp
scas
aam
mov
mov
adc
inc
jp
add
shrb
call
insl
cs
test
jb
inc
inc
aas
xchg
pop
mov
sub
movsl
mov
jb
aas
mov
jle
popa
xchg
popf
mov
or
leave
adc
xchg
jb
cwtl
cmpsl
out
mov
lods
ja
cwtl
or
outsb
outsl
test
fisubrl
repnz
lcall
pop
xor
adc
les
insb
mov
dec
loop
rcll
adc
dec
insb
daa
adc
xchg
clc
ja
ljmp
xor
xchg
cmp
imul
imul
mov
idivl
popf
pop
sbb
jg
jge
and
notl
int
push
sub
fnsave
inc
lods
push
pop
daa
mov
adc
xor
sbb
add
push
shll
pop
jae
sarb
leave
pop
or
mov
push
test
rclb
into
mov
dec
push
jo
jbe
and
addb
scas
mov
fdivrl
movsl
mov
jb
testb
jg
push
imul
push
shrb
test
icebp
stos
cmp
out
scas
scas
and
sbb
pop
out
jge
inc
ss
out
push
les
inc
mov
out
daa
mov
stc
test
adc
push
xchg
mov
movb
mov
adc
mov
lahf
loop
jae
mov
push
or
lea
sub
fcomp
push
dec
jno
mov
notb
jmp
xchg
mov
rorb
pop
int
dec
mov
cmp
fisubs
stos
stos
jbe
push
nop
call
pop
stc
sar
xchg
insl
mov
xchg
dec
push
sti
daa
add
push
add
clc
or
call
rcr
clc
mov
outsl
bound
hlt
cltd
scas
mov
push
sbb
mov
lahf
bound
std
push
pop
xchg
lds
lahf
sub
or
lods
mov
scas
sub
dec
mov
rcl
lods
out
xlat
sahf
rcrb
push
jnp
jg
mov
jne
outsb
int
mov
ja
in
cmpsl
fxch
cmpb
lahf
mov
fistpl
and
mov
js
jl
cmp
mov
fstl
xor
sbb
repz
lahf
add
add
cmp
test
cwtl
mov
lock
xchg
es
loop
addl
sarb
flds
jge
jnp
out
jnp
xor
pop
add
hlt
mov
les
dec
lea
mov
mov
xor
or
mov
and
int3
insl
mov
inc
adc
loop
insl
lods
mov
in
mov
loopne
aaa
movsl
test
mov
ret
xchg
fwait
xor
xor
sarl
sahf
imul
push
and
or
and
push
add
mov
pop
fstl
xchg
xchg
fs
xchg
mov
outsb
fistl
xor
enter
pop
dec
test
cmpsb
cltd
fadds
bound
sarb
jae
test
repnz
es
scas
xchg
xor
sahf
mov
or
imul
stos
fs
pop
jge
das
movsb
addr16
pushf
jecxz
inc
mov
mov
insb
push
and
sbb
adc
xchg
icebp
scas
lcall
pop
jmp
jg
aam
pop
jne
dec
xor
fmuls
push
insl
push
lret
fdivrs
movsb
mov
or
mov
outsl
imul
xchg
xor
jl
popf
dec
mov
fnstsw
or
loope
call
dec
sar
jbe
xchg
cmp
fneni(8087
or
andl
dec
fiaddl
or
xor
cmpsb
mov
mull
sbb
int
xchg
sub
add
mov
fdivs
orl
lcall
lret
mov
call
sub
dec
addr16
add
mov
or
testb
cmp
mov
call
cmp
cld
iret
mov
or
push
int3
xchg
daa
mov
stos
ror
ljmp
fisttpl
xor
iret
test
push
cli
addl
sub
movsb
shrb
lret
jb
rorl
sub
sbb
rcr
push
and
lds
ret
add
dec
int3
loop
mov
pop
iret
fucomi
mov
imul
movl
out
xor
cmpsl
adc
xorb
out
jmp
test
aaa
scas
cmp
dec
scas
loope
xchg
outsl
adc
xor
mov
inc
aad
mov
jae
mov
pop
scas
dec
push
roll
jmp
pop
mull
push
dec
and
push
imul
fidivl
jns
mov
cwtl
fcmovnu
and
mov
pop
aaa
mov
int
sub
adc
les
movsb
cmc
inc
dec
mov
dec
cmp
mov
clc
xchg
aaa
adc
jo
mov
sub
std
sbb
dec
fsubr
std
into
or
scas
hlt
ds
lahf
xor
incl
lea
outsl
jbe
popf
sub
jmp
in
pop
imul
fwait
push
jae
xor
bound
mov
dec
push
xor
andl
shrb
dec
or
xchg
sbb
pop
iret
pop
test
jb
pop
inc
pop
pop
xchg
js
pop
imul
jbe
stc
mov
inc
pushf
stos
insl
dec
lret
jmp
and
adc
mov
cmp
stos
movsb
out
jb
es
dec
sbb
push
and
mov
sbb
test
lret
mov
sub
rcrb
mov
jp
mov
out
out
xor
addr16
push
add
fsubs
push
pushf
push
sub
or
sbb
inc
shll
outsl
sub
fbld
js
je
insl
or
adc
pushf
inc
je
adc
lcall
cld
loope
pop
push
cmp
xchg
rcll
xchg
cmpsb
aaa
out
mov
pop
inc
and
lahf
jmp
pop
xchg
or
fmul
jp
lock
mov
data16
repnz
mov
jmp
shrl
pop
or
sub
cwtl
icebp
notl
shrb
cmpsl
sahf
sub
jl
sbb
sub
into
nop
mov
sub
mov
and
cmp
and
xchg
out
inc
ja
mov
popa
gs
xor
push
lcall
mov
ja
ljmp
jge,pn
jne
cmp
or
lret
pop
xchg
xchg
xlat
dec
out
sub
xchg
mov
add
pop
cltd
push
jnp
mov
sub
xchg
cmp
lds
int
les
cmp
mov
fwait
dec
push
cwtl
jmp
xor
cmpsl
mov
xchg
fld1
sti
adc
xor
stos
pop
sub
push
lods
jbe
repnz
les
dec
movsl
in
ffree
out
leave
dec
idivb
cwtl
cmp
insl
sbb
push
test
mov
or
jbe
push
movsl
sub
cmp
scas
fistl
pop
dec
out
jae
inc
mov
cmp
jp
push
sbb
pop
iret
xchg
xchg
stos
fs
ror
in
rolb
sub
fildl
aam
lods
addr16
push
xorb
das
fdivs
mov
mov
adc
adc
jge
loopne
dec
movsl
inc
sbb
sub
popf
mov
push
ss
call
repz
rolb
mov
leave
fsubl
mov
mov
dec
pop
loopne
xchg
daa
scas
filds
jnp
mov
cmp
enter
cmp
sub
imull
pop
addl
out
jb
lock
mov
or
and
inc
lods
xor
jmp
nop
testl
sbb
inc
pop
cwtl
cwtl
daa
add
xor
stos
aad
mov
or
dec
mov
aam
jnp
jp
stos
lret
jo
aaa
inc
ffreep
adc
sahf
loopne
or
inc
psrlw
dec
xor
stc
lock
inc
pop
mov
jl
cmp
rcrb
dec
inc
push
ja
inc
jns
and
adc
das
mov
cmp
mov
ret
pop
pop
sub
xor
test
out
scas
adc
fucomp
add
ror
fsubrs
in
push
es
inc
xor
leave
push
xchg
mov
mov
jge
sub
lcall
or
leave
xor
gs
lret
jbe
xchg
iret
jae
xor
jle
xor
pop
xor
mov
push
mov
push
ljmp
lahf
adc
movsb
vpmacssdql
test
dec
mov
fmull
sahf
cmp
jmp
cwtd
sbb
out
mov
jno
fcoml
push
mov
push
sbb
test
scas
stc
imul
mov
mov
push
outsl
cmp
packuswb
je
aad
das
loope
cld
jno
nop
add
xchg
fisubrs
pop
or
jmp
in
cmp
jl
js
mov
imul
and
mov
sarb
xchg
xchg
jge
aad
andl
adc
shrb
and
inc
js
mov
jnp
dec
cmpsl
dec
inc
add
sbb
xchg
pop
xorl
inc
or
push
push
pop
aam
mov
xor
mov
mov
es
mov
adc
fcmovnb
push
cmp
or
mov
adc
push
outsb
cmpxchg
pop
push
jmp
push
bswap
or
lret
movsb
pop
push
sti
xchg
scas
in
jb
sahf
ss
outsb
push
dec
sub
push
mov
cmpsl
inc
mov
aad
pop
jne
push
sbbl
out
fmuls
push
jae
and
push
mov
mov
push
mov
nop
imul
or
inc
mov
ja
shr
loopne,pn
fmull
add
in
imul
daa
out
arpl
fistpl
arpl
addr16
mov
xchg
pushf
lret
dec
xchg
mov
mov
adc
cwtl
xor
clc
mov
nop
lret
and
push
mov
cmp
loope
loope
gs
fs
ss
mov
dec
out
pusha
mov
fwait
rorb
inc
xchg
popa
stos
clc
rcrb
mov
dec
mov
adc
cmpsl
insb
adc
insb
push
push
cmpsb
fcomps
jl
cmp
push
ds
sti
sub
push
repnz
lds
sbbl
mov
push
mov
repnz
jnp
sahf
mov
adc
sbb
jns
pop
inc
cli
adc
aas
jns
sbb
jnp
es
imul
sbb
mov
xchg
mov
popa
es
mov
jl
test
push
adc
jnp
mov
add
mov
or
filds
ss
cmp
mov
pusha
je
pop
lock
cmc
sbb
loopne
pop
jmp
mov
cld
jb
lahf
cmp
mov
subb
pushl
inc
in
outsl
sbb
in
fistpl
aas
push
das
push
pop
adcl
int
xchg
cmp
repnz
inc
loopne
pop
movsb
dec
filds
or
and
push
dec
leave
add
pop
lods
in
jg
das
push
movsb
xor
ret
mov
sbb
cmpsb
or
fldcw
xor
setp
cmp
cld
movsl
in
je
js
inc
inc
and
dec
xchg
jne
cs
cltd
std
out
movaps
add
and
hlt
test
inc
cwtl
sbb
imul
sahf
mov
jge
mov
inc
push
imul
or
add
mov
les
sub
adc
mov
jns
bound
xor
sbb
je
dec
popf
and
invd
shrb
inc
or
mov
addl
loop
aas
and
ja
mov
xor
clc
cmpsl
push
clc
add
test
push
cmp
pop
push
pop
pop
jl
pop
and
lods
int3
icebp
jne
movb
popa
push
scas
lret
outsl
xor
pop
lods
in
sub
mov
cmp
test
mov
sub
adc
fnsave
leave
pushf
cmp
and
in
jbe
imul
inc
outsl
insl
cmp
dec
lea
ret
inc
test
mov
mov
and
arpl
xlat
sub
faddp
pop
iret
ret
rorl
cmovp
je
push
mov
push
iret
iret
inc
roll
inc
mov
das
out
push
movsb
shlb
in
sbb
fcmovb
inc
ret
push
bound
in
fs
imul
jne
pmulhw
sbbb
insl
xlat
fistpl
sbb
call
cmp
rclb
add
movsl
aas
nop
outsb
mov
lret
or
mov
mov
add
and
test
jo
mov
mov
in
and
popa
pop
jnp
xor
cli
cmp
pop
push
xlat
pusha
std
mov
mull
lods
andl
xchg
rcrb
push
xor
lret
xchg
inc
fisttps
dec
sbb
mov
push
sbb
repnz
dec
adc
fcomps
sbb
cs
xchg
xor
orb
movsb
btr
xor
cli
pop
in
scas
and
sbb
lods
fnstenv
aad
repz
sbb
cmpsb
mov
lods
mov
movsl
add
and
mov
and
and
fistps
push
mov
push
filds
sti
or
jnp
out
mov
jle
add
cltd
rol
adc
pop
or
clc
sbbb
xchg
shl
jno
pop
add
push
in
push
and
push
adc
pop
xlat
sbb
dec
fcmovb
rcr
repz
mov
ret
je
mov
push
ja
ret
mov
rcr
xchg
cwtl
add
jo
mov
lret
push
sbb
pop
dec
lea
ret
dec
inc
jl
jp
inc
mov
mov
test
lds
jo
in
mov
sbb
xchg
mov
mov
push
shr
stc
mov
test
aad
rorb
mov
mov
dec
clc
pop
jb
popf
cmpsb
cmpsl
ret
iret
sahf
adc
into
paddsw
movsl
shlb
repnz
movsb
lock
xor
mov
add
jae
out
mov
cmpsl
mov
inc
push
add
mov
ss
aad
pop
and
int
sub
push
repnz
outsl
fdivl
ljmp
dec
push
jae
cmp
add
mov
gs
sub
fnstenv
jae
cmc
js
sbb
aas
ret
jae
repz
sbb
in
aas
sahf
fstpt
adc
pop
dec
and
xlat
sbb
into
push
adc
icebp
or
push
add
mov
mov
xor
scas
cmp
pusha
xchg
fs
rcll
jno
cmp
inc
and
ret
scas
cld
cmp
mov
fisubrl
das
sbb
out
or
rolb
sub
push
mov
jnp
std
sbb
rorb
les
lds
add
cmp
mov
mov
in
xor
mov
push
sbb
out
add
xchg
int
cmp
push
add
push
push
pop
jno
push
pop
cmp
test
popf
popa
cmc
mov
xor
hlt
mov
dec
int
or
inc
xchg
cltd
cmpsl
sub
adc
insl
xchg
jns
mov
popf
inc
loop
push
jno
fsubl
cmp
mov
sub
imul
repz
push
pushf
add
cmp
int3
mov
js
dec
mov
imul
divb
jmp
cmpsb
or
mov
imul
mov
shl
sub
aam
push
jp
ficoml
test
sub
sbb
std
pop
int
cld
loopne
inc
or
cltd
neg
xor
or
test
push
inc
dec
inc
push
shlb
fldt
cmpb
aas
testl
mov
lea
sarl
jl
rcrb
js
add
scas
ljmp
sub
pop
inc
in
adc
inc
pop
jecxz
mov
iret
xchg
repz
lret
call
mov
iret
mov
sub
outsl
data16
out
jne
push
xchg
arpl
cmp
in
sbb
mov
jne
scas
mov
iret
cmp
add
das
lret
divps
cmpb
pop
ret
sub
jmp
add
pop
or
dec
add
pusha
idivl
xchg
adc
add
jnp
es
divb
lahf
out
push
xor
aad
test
jno
add
cmp
movsl
or
pop
insl
cwtl
enter
aas
push
sbb
jns
out
iret
xchg
cmp
lret
daa
out
mov
mov
lock
xor
mov
inc
test
clc
mov
dec
arpl
push
pop
arpl
dec
inc
out
sub
mov
lods
mov
or
ret
xor
js
sub
iret
cmp
xor
js
mov
pop
inc
scas
in
sbb
mov
dec
cli
or
xor
bound
push
popf
movsl
pop
xchg
popa
xor
aaa
rorl
adc
pop
add
jae
or
add
clc
and
mov
enter
scas
pop
pop
lock
subl
mov
xchg
cwtl
rclb
jmp
fadd
adc
fnstcw
mov
inc
inc
js
adc
lds
sahf
and
jo
sub
pop
ret
cmp
pop
xor
push
aaa
mov
or
mov
cwtl
xchg
pop
fcmovne
sahf
adc
push
mov
and
push
pop
loopne
and
notb
jl
mov
clc
mov
sti
popa
shll
jo
lods
pushf
int3
jle
sub
rorl
mov
lock
outsl
xlat
pop
pop
iret
and
sub
mov
aaa
sbb
mov
xchg
js
mov
mov
test
in
dec
addl
out
pop
inc
cmp
jnp
add
iret
xlat
test
lods
inc
sahf
scas
mov
push
rolb
inc
jl
addl
push
fs
push
jmp
add
shrb
push
clc
sub
mov
flds
sbbl
push
push
mov
mov
push
test
and
pcmpgtd
outsl
inc
mov
pop
nop
sub
jo
mov
cli
in
outsl
xchg
pop
fldt
jl
jecxz
imul
mov
push
and
sbb
push
pop
jnp
insb
cld
and
mov
shrl
andl
add
daa
shrd
pop
clc
aam
repnz
jne
inc
pop
test
xchg
mov
sub
cmpsb
mov
mov
icebp
sbb
in
in
fisttpll
div
pop
mov
cmc
mov
inc
pop
jae
pop
push
add
xchg
cmp
shl
mov
xchg
lea
loop
sub
xlat
mov
pop
ffree
imull
lcall
or
dec
int3
scas
push
jb
mov
pop
ror
sarb
add
inc
lock
in
movsb
insb
or
push
subl
add
mov
insb
push
or
mov
cmp
les
and
loope
stc
sub
xchg
push
adc
lret
pop
scas
sub
mov
cmpb
or
mov
inc
xor
mov
shll
push
nop
inc
ret
daa
hlt
out
push
das
dec
or
dec
aaa
pop
scas
push
lret
pop
outsb
adc
jb
ficomps
lods
movsl
mov
sbb
aam
andl
outsb
cmp
cs
aaa
movsl
lahf
loop
dec
mov
add
xchg
arpl
sub
xor
sub
pop
ret
inc
movsb
or
stos
adc
cs
jns
shlb
jno
pop
jg
mov
push
enter
mov
jle
sub
lret
push
testl
push
inc
cmp
inc
ficoml
push
dec
rcr
hlt
icebp
fwait
cmp
xor
in
out
mov
in
mov
in
scas
pop
xlat
fcomps
mov
fwait
dec
cmp
xchg
or
push
push
cwtl
das
mov
pop
int3
pop
outsb
pop
in
rcrb
mov
shll
sub
sub
lea
fs
shrb
lret
and
enter
js
pop
cmp
mov
or
pop
roll
and
mov
pop
stc
mov
dec
adc
inc
xchg
clc
mov
andl
roll
pop
hlt
adc
pop
into
or
or
hlt
mov
push
mov
jg
xlat
push
pop
and
mov
mov
inc
mov
pop
dec
xor
out
mov
ss
mov
pop
jge
out
dec
inc
xchg
in
sub
pop
mov
hlt
popa
pop
inc
inc
pusha
loope
pushl
lret
jbe
enter
mov
leave
movsl
pop
in
out
inc
pop
fisubrl
cld
nop
std
mov
int3
and
sub
cli
xchg
loope
into
leave
addr16
popf
sbb
mov
xchg
xchg
cmpsl
dec
cmp
xorb
orb
pop
pop
dec
shl
in
push
iret
jae
jns
in
xchg
pop
sub
call
push
div
mov
test
call
pushl
xlat
test
cmp
xchg
outsb
and
push
fidivrs
cmp
and
push
leave
mov
jbe
loope
cmc
pop
icebp
add
xor
test
loopne
or
xlat
sbb
fwait
sub
bound
dec
pushf
push
xchg
xor
fstpt
push
jne
push
sbbb
scas
js
subl
cmp
fsin
inc
add
xor
fucom
push
mov
mov
repz
rorb
stos
sahf
fbld
inc
int3
add
add
mov
pop
sahf
cld
stos
xor
cmp
loopne
jge
mov
in
out
dec
test
adc
rcll
mov
jmpw
jge
jno
and
xchg
xlat
and
jg
jo
pop
and
ljmp
pop
push
stos
shrl
xchg
sub
jl
out
cmp
ds
nop
scas
adc
cmpsb
bound
cmc
sbb
test
jnp
add
pusha
daa
mov
mov
fcoms
jecxz
push
iret
cmp
dec
aam
sbb
scas
or
jne
arpl
ret
fmull
in
outsl
jne
fisubrl
push
scas
arpl
dec
xlat
xor
int3
dec
inc
pop
jns
adc
leave
jp
adc
sub
fsubrs
loopne
cmc
pop
inc
testb
cmp
leave
lods
mov
sub
outsl
subb
adc
cld
mov
mov
sbb
in
mov
lock
lret
loopne
xlat
ds
jmp
pusha
or
mov
popf
mov
lret
pop
xor
ret
das
orb
mov
add
adc
push
cltd
stos
inc
push
dec
add
sbb
mov
sub
cmp
scas
and
jmp
aaa
dec
dec
xor
sbb
or
ss
push
aam
sbb
sbb
loop
dec
mov
dec
push
sbb
int3
pop
pop
inc
push
mov
adc
iret
daa
cmp
movsb
loop
pop
xchg
jg
inc
aad
push
push
jne
roll
xchg
adc
out
faddl
dec
dec
test
xlat
mov
and
lret
fistpll
xchg
dec
rclb
insl
mov
shr
or
add
movsb
sub
sbb
adc
sbb
shlb
cli
xchg
inc
sbb
mov
mov
mov
lods
rol
aas
dec
fnsave
ss
fcoml
in
lret
add
and
mov
pop
mov
movsl
cwtl
dec
push
dec
jmp
stos
mov
clc
and
push
cmpsb
pop
shr
inc
xchg
sub
iret
rorb
insb
add
or
int
stos
rolb
pushf
stos
adc
cmp
bound
repz
dec
popf
cltd
sahf
jle
ds
aam
jp
cmp
sbb
cs
inc
negl
pop
mov
cmp
cmpsl
cmpsl
cmpsl
js
lret
fs
dec
add
lahf
and
mov
cltd
outsl
cld
ret
mov
je
inc
push
mov
cwtl
jne
icebp
pop
mov
cli
test
mov
popf
or
cmp
jno
jmp
jne
adc
mov
ret
dec
iret
xor
pusha
icebp
in
pusha
out
adc
lahf
dec
in
push
jae
in
adc
out
or
mov
inc
mov
stos
out
movsl
movsb
mov
mov
sbb
scas
in
out
jmp
cli
sub
imul
ret
and
int3
mov
fbstp
xor
push
enter
gs
cmpsb
nop
lret
lcall
push
ret
clc
into
sbb
jge
pop
add
dec
and
pop
fcomp
cwtl
fiadds
cmp
ret
into
xchg
pop
lret
sbb
into
dec
in
rorb
and
cltd
subb
movsb
gs
das
mov
push
test
pop
stos
negb
adc
dec
call
inc
mov
mov
into
pusha
daa
push
pusha
addr16
scas
mov
stos
xor
dec
popa
sbb
stc
xchg
cmpsb
adc
les
mov
jns
lock
daa
daa
xchg
out
ss
mov
stos
cmpl
mov
pop
mov
ficompl
cmpsb
aas
sbbl
stc
add
pop
popa
sahf
fadd
outsl
mov
mov
jmp
pop
lock
xor
xor
into
and
out
lds
pop
dec
inc
stos
jl
dec
mov
enter
nop
js
sbb
or
stos
repz
je
mov
pop
xchg
xchg
popf
pop
movsb
lret
pop
ljmp
adc
lahf
das
cmp
int3
dec
mov
pop
sarb
sti
test
fisubrl
mov
aaa
push
divb
arpl
out
loop
push
scas
jno
mov
xor
aad
std
les
lret
scas
or
adc
adc
jns
fs
lock
into
pop
push
sub
daa
cmpsb
sub
loope
mov
enter
std
fwait
out
out
dec
aad
mov
loopne
fst
jp
js
leave
xor
sub
sbb
scas
adc
mov
ret
lds
pop
mov
bound
mov
dec
cmpsl
movsb
sbb
dec
sbb
jb
sbb
pop
in
pop
pop
or
and
cmpsl
mov
push
stos
out
inc
mov
mov
mov
stos
test
or
push
ss
xlat
push
outsl
in
jb
dec
xor
in
int3
stc
scas
jmp
rol
fcoml
jno
sbb
insb
ds
loopne
xchg
test
lods
cwtl
mov
dec
inc
sbb
aas
imul
mov
sub
pop
ficomps
add
les
insl
xchg
mov
cld
xor
mov
clc
inc
pop
cmpsb
inc
sub
sbb
mov
dec
inc
jecxz
mov
int3
ja
add
loope
dec
mov
xorl
movq
lahf
inc
mov
push
cltd
push
push
movsl
mov
pop
sarb
cltd
lds
ss
xlat
inc
cwtl
andl
xor
mov
and
adc
mov
mov
cmp
push
pop
out
push
mov
in
and
pop
mov
ja
jne
popl
adc
inc
cmp
aaa
cwtl
movsb
sub
xchg
jmp
add
inc
outsl
lcall
add
xchg
xchg
fs
dec
pop
addr16
fldcw
adc
xor
pop
loop
mov
les
or
or
mov
jo
jmp
scas
cmp
cmp
add
mov
cld
in
mov
push
pop
icebp
jo
insb
cltd
lock
dec
push
test
push
daa
fidivs
or
repz
fimuls
cmp
jbe
stos
push
jp
decl
testb
shl
mov
sbb
ljmp
mov
jo
adcb
aaa
add
jg
add
loopne
sbb
lods
fs
adc
or
out
cmc
or
test
mov
fldenv
je
or
sbb
push
aaa
and
or
or
leave
mov
lock
jnp
inc
inc
dec
cmp
inc
add
push
pop
cmpsb
data16
adc
inc
sbb
adc
mov
push
mov
add
test
lock
jl
in
scas
sub
lods
lahf
push
ret
shrl
stc
es
cmp
sbb
insb
add
adc
stos
mull
loope
and
lods
mov
xchg
adc
dec
mov
inc
xchg
lret
lret
push
pop
sub
mov
jg
outsb
sbb
in
cwtl
or
cmp
pop
sti
push
mov
repz
subb
push
jmp
adc
stos
loop
call
jg
dec
jnp
ror
pop
loopne
leave
dec
pop
lret
popa
cmpsb
jmp
mov
lret
fistpll
inc
jl
iret
mov
xchg
daa
dec
icebp
pushl
mov
jmp
jl
cltd
cmpsb
adc
xchg
lods
cmp
xchg
xor
or
mov
inc
sub
jne
ja
jp
or
mov
out
push
dec
dec
rcll
insl
shl
testb
or
or
out
jb
hlt
cmp
lock
xchg
sub
int
sub
xchg
out
mov
pop
mov
sbb
pusha
shll
sbb
mov
jne
push
inc
daa
imul
ss
mov
std
call
fcoms
pop
mov
sti
rcrl
dec
or
dec
les
fld
insl
push
js
lcall
cmp
aas
push
std
mov
dec
sbb
dec
repz
movsb
dec
lods
xchg
jmp
pop
adc
ljmp
das
leave
sbb
cmp
insb
pop
mov
add
mov
push
std
lods
mov
jbe
movsb
mov
lds
insb
mov
arpl
xor
xor
loop
aas
mov
adcl
ret
sub
imul
mov
push
iret
xor
fnclex
add
dec
int
das
sbbl
fildl
lret
lret
add
out
lret
mov
mov
adc
aas
lcall
sbb
jle
sub
push
push
add
scas
fnstcw
mov
or
pop
pop
test
mov
cmpsb
das
pop
cmp
add
repnz
mov
mov
repz
adc
dec
push
dec
movsl
cmp
add
push
ret
lods
outsb
or
addr16
inc
adc
xor
fwait
packuswb
lahf
mov
pop
xorl
adc
and
push
cmp
fisttpll
lods
mov
daa
cmc
push
mov
enter
push
add
pop
or
jnp
and
mov
lea
scas
add
xchg
enter
cmc
rolb
mov
or
xchg
loope
jns
lcall
imul
push
daa
and
mov
popf
mov
addr16
testb
addl
mov
addr16
mov
popa
xlat
test
in
ffreep
xchg
fdiv
out
xchg
roll
loopne
or
out
dec
dec
jge
cmpsb
arpl
and
in
pop
js
and
dec
dec
inc
dec
testb
inc
subl
out
and
sbb
int3
js
mov
inc
pop
std
sbb
mov
jmp
cmpsb
push
sub
movsl
pop
arpl
push
sub
cmpsb
es
int3
loope
sub
cmp
arpl
sub
roll
or
scas
or
jno
pop
andl
sub
pop
pop
sub
and
pop
xor
test
xchg
and
repnz
cmp
fildll
jl
or
repnz
decl
das
sub
adc
mov
js
ficoms
xor
sbb
out
push
mov
cli
or
outsl
cmp
mov
jge
jecxz
test
mov
ds
dec
inc
aam
sbb
sbb
lds
ljmp
jb
pusha
imul
or
addb
lea
sub
andl
or
mov
push
jo
add
dec
jbe
ds
jnp
sub
xchg
pop
outsb
nop
arpl
pop
mov
and
aam
lock
dec
hlt
iret
fcmovu
fwait
jae
pop
jae
jl
xchg
std
push
scas
push
pop
das
cmp
jmp
pop
add
adc
inc
das
rclb
mov
negb
jg,pt
pop
mov
rcrb
xchg
sbb
sbbb
out
divb
adc
mov
das
xchg
pop
push
and
add
sbb
jle
lea
orl
mov
sbb
push
jae
aaa
xor
clc
or
inc
outsb
ss
xor
rorl
add
inc
sbb
enter
out
stos
jg
mov
insl
repz
test
int3
xor
in
lods
ljmp
xchg
sbbb
adc
sub
test
repnz
lods
lret
mov
and
ss
mov
xor
es
mov
repnz
loopne
movsl
push
std
sub
mov
rcl
cwtl
subl
push
mov
scas
xorb
mov
test
mov
xor
and
mov
dec
pop
aas
mov
jl
ds
cmc
jmp
in
xor
rorb
fbld
xchg
dec
xchg
loopne
jae
or
jnp
stc
mov
xchg
dec
push
notl
sarl
sub
outsl
mov
mov
ljmp
push
mulb
mov
insl
dec
mov
mov
rcrl
push
jge
jne
sbb
mov
leave
enter
clc
faddl
jns
push
xorb
jg
sub
ja
js
mov
mov
mov
mov
push
inc
repnz
movsl
or
jnp
inc
inc
das
mov
dec
push
inc
xchg
cmpsl
cs
xor
add
jns
adc
roll
push
mov
das
gs
fs
jp
dec
mov
pop
dec
and
and
mov
inc
cld
add
xchg
mov
imulb
mov
xor
rorb
roll
mov
fidivl
push
cmp
add
int
pop
xor
xchg
inc
in
lea
or
js
cmpsb
scas
mov
test
lret
inc
outsb
dec
lock
xchg
adc
push
or
sub
adcl
push
cs
andb
in
mov
dec
mov
push
jo
push
insl
shll
push
jbe
and
ss
or
xchg
into
loopne
leave
call
pop
xchg
mov
and
psubq
jmp
insl
inc
sbb
bound
fs
sub
fsubrs
data16
imul
jno,pn
outsl
sbb
stos
ss
int3
xchg
leave
xlat
xchg
mov
mov
aas
mov
orb
push
or
xchg
cltd
jecxz
fdivl
pop
stc
adc
rorb
sbb
inc
xchg
in
sar
sbb
cmp
pop
icebp
fidivl
dec
push
pop
pop
push
repz
xor
push
xchg
repz
stos
mov
repz
jae
and
add
xlat
jo
test
loop
cmc
enter
mov
sbb
jp
push
jp
outsl
addr16
dec
daa
push
push
jecxz
mov
pop
and
jo
mov
xor
push
js
cmp
mov
and
add
or
pop
push
std
aas
mov
mov
xchg
mov
cmpsb
cmc
flds
stos
cld
jle
and
aam
scas
push
cwtl
lock
in
leave
jne
mov
scas
in
add
add
push
jp
std
andb
adc
dec
lods
cmp
sbb
adc
test
fcoml
dec
mov
cs
xchg
mov
pop
test
jo
neg
jno
ffree
cmpb
xor
outsl
push
mov
cmp
and
pop
insb
push
in
sbb
xor
sub
adc
test
fwait
sbb
xor
pop
pop
stc
test
push
les
test
lahf
adc
mov
xor
add
fisttpl
cmp
adc
pop
std
and
in
inc
pop
jg
jno
repz
test
push
gs
sub
dec
pushf
rcll
sahf
sbb
push
scas
adc
and
fwait
into
int
pop
js
call
jo
sub
ljmp
scas
into
loopne
pop
cmp
jle
xchg
jmp
jne
xor
jg
out
push
push
cmp
or
pop
mov
sub
imul
pop
mov
mov
fcmovbe
in
dec
test
dec
pop
jo
jo
and
loope
push
inc
sbb
xlat
add
mov
jp
jns
out
shlb
out
mov
sbb
imul
push
fnstenv
int3
push
fs
dec
stc
inc
push
sub
add
aad
jecxz
fbld
add
inc
out
cmpl
jo
push
call
mov
dec
dec
sahf
pop
xchg
lods
mov
jmp
mov
mov
nop
fldcw
shlb
mov
adc
add
out
sub
mov
jmp
fs
push
in
sti
sub
loopne
add
lea
or
in
xchg
or
shrl
mov
iret
adc
insb
subl
into
and
adcl
outsl
pushf
lods
jge
mov
push
sbb
repz
imul
mov
sahf
cmpl
out
mov
sub
or
shrl
aam
dec
xor
inc
es
movsl
lahf
or
lret
int
mov
out
xchg
cmp
std
push
or
out
in
cmp
leave
data16
fstps
sbb
cld
mov
jno
lret
pushf
inc
shll
lea
inc
mov
push
sub
jecxz
adcl
pop
cmp
sbb
sar
rorl
pop
aas
adc
push
mov
movsl
mov
adc
int3
ret
xchg
mov
leave
addb
and
rcrb
xor
lcall
xor
inc
mov
xchg
xchg
cltd
sbb
xchg
xor
dec
fdivrp
push
popa
mov
cmp
cmp
xchg
outsl
enter
stos
popa
imul
jbe
and
adc
mov
pop
pop
jmp
insb
lds
mov
popa
fwait
loope
mov
rcrl
fcmovbe
mov
or
mov
ss
dec
mov
or
or
ss
ss
jg
push
jne
cmp
out
aaa
test
push
aas
xchg
inc
ucomiss
iret
shl
cld
cmc
jge
imul
ret
outsb
and
stos
or
dec
lds
add
popf
cmpsl
popa
mov
xchg
adc
hlt
lahf
sbb
inc
ffreep
clc
ret
and
push
jle
jbe
inc
loopne
push
or
scas
jp
aad
fldenv
mov
addl
pop
jge
fmul
push
arpl
jmp
xchg
dec
scas
xchg
mov
xchg
pushf
sub
xor
outsl
dec
aam
fs
iret
sub
cld
int
mov
aam
pop
dec
pop
inc
jbe
sbb
push
or
js
mov
mov
pop
sub
mov
iret
lahf
add
popf
jo
xchg
cwtl
out
jno
pushf
add
iret
sub
roll
dec
int
repz
cmp
rol
nop
cmc
mov
mov
xchg
mov
pop
pop
out
icebp
push
or
insl
and
pop
sub
or
mov
lcall
pop
push
and
xchg
or
neg
xchg
xlat
and
fdivp
fdivs
mov
fcmovne
adc
xchg
adc
xor
push
fiaddl
out
push
mov
out
je
dec
jg
hlt
addr16
pop
push
test
mov
imul
cwtl
fisubrs
ss
scas
xchg
outsb
pushf
inc
dec
lret
or
xchg
add
in
inc
cmp
ret
test
sahf
mov
sub
ret
dec
inc
ror
xchg
bound
lods
fisubrs
aas
adc
cmp
pop
pusha
addr16
pop
xor
test
adc
negl
mov
push
out
add
rolb
or
fsubrs
addr16
ror
repnz
daa
or
push
daa
cmp
fwait
insb
mov
jae
repnz
lea
mov
icebp
cltd
push
shl
imul
xchg
js
xchg
push
subb
sbbl
cs
ss
cmpsl
out
jge
sub
test
fisttpl
arpl
ja
sub
iret
xchg
divb
repnz
cld
rorb
jnp
test
ret
iret
mov
sbb
test
sub
mov
dec
jmp
loopne
repz
dec
mov
push
gs
mov
cmp
outsl
lcall
mov
fidivrl
cwtl
notb
out
push
daa
shlb
mov
icebp
push
pop
mov
lret
hlt
jl
cmpsb
jno
insb
xchg
jbe
inc
loopne
push
arpl
mov
mov
push
jno
pop
adc
push
test
out
or
in
adc
jnp
jbe
rorl
push
push
pop
addr16
idivl
xlat
pop
add
xor
sbb
cmp
fs
fwait
mov
mov
repz
in
lret
nop
jnp
fdivs
and
push
mov
push
inc
cmp
mov
add
sub
lret
cli
stc
movsb
jno
cmp
jmp
cmp
icebp
mov
ss
mov
mov
mov
sbb
aaa
adc
add
iret
stos
adc
ljmp
sarl
std
repz
test
out
jmp
dec
mov
xchg
test
into
jae
lahf
cmp
testb
sbb
inc
jle
lcall
lahf
ds
lods
push
mov
and
xchg
xchg
dec
test
jb
jno
push
lock
rorl
les
std
and
xchg
aaa
or
pop
mov
mov
jns
in
xor
push
cs
push
push
push
sti
inc
aaa
adc
nop
aaa
xor
ss
je
insb
in
ja
xor
jb
iret
inc
ss
lcall
jb
add
jl
xchg
inc
mov
cmp
pop
dec
into
fsubrl
dec
inc
and
jns
sub
push
mov
push
mov
and
cwtl
mov
aas
leave
pop
and
mov
mov
popf
cli
ljmp
jo
out
std
cmpsl
test
out
mov
or
cli
and
jnp
les
test
push
repnz
test
dec
subb
test
daa
movsb
or
add
inc
sub
push
bound
mov
dec
mov
inc
cmp
pop
add
mov
mov
loope
and
xor
nop
mov
leave
push
cld
pusha
repnz
mov
xor
mov
jne
push
mov
xor
pop
test
mov
movzwl
or
pushf
and
xchg
sub
movq
iret
jo
loopne
aaa
rcrb
mov
lcall
lcall
imul
mov
vpunpckhqdq
mov
jmp
decl
ret
out
orb
jns
pop
lea
int
mov
jo
fdivrp
sub
add
push
adc
inc
dec
popf
cmp
shll
insl
pop
loop
sti
dec
je
adc
or
fwait
out
add
and
insb
pop
je
xor
stc
in
insl
dec
pop
loop
push
insb
fisttpl
aaa
mov
testl
arpl
jmp
ret
ret
into
lock
repnz
scas
jg
aad
arpl
pop
pushf
push
adc
out
clc
cltd
stc
jb
jae
data16
add
test
adc
and
push
ror
fimull
cli
jmp
cmp
dec
imul
outsl
int
mov
adc
inc
cmp
in
mov
mov
ljmp
cmp
es
in
cmpsl
mov
es
leave
inc
inc
mov
inc
xor
and
inc
ljmp
pmovmskb
movsl
addr16
or
iret
inc
mov
push
add
dec
xor
jl
mov
hlt
push
xlat
mov
mov
push
and
cmp
jle
adc
rolb
and
push
cld
push
push
leave
dec
jecxz
iret
lret
jnp
iret
cmp
and
cmp
jbe
mov
xor
fimuls
pop
mov
push
fistpll
pop
test
mov
lcall
jne
pop
jp
pop
adc
out
xchg
fnstenv
stos
setbe
mov
addb
shl
ror
cli
outsb
dec
pop
push
add
mov
loope
insb
push
or
xor
inc
out
dec
testb
repnz
repz
inc
out
mov
jbe
pop
jp
mov
mov
fcoml
push
stos
or
shl
jns
lcall
lcall
insl
pop
rolb
sub
out
std
and
inc
loop
ret
mov
mov
fsub
pop
lahf
out
inc
push
and
and
aaa
in
in
repnz
aas
loope
cmp
sbb
iret
sbb
pushf
pop
icebp
mov
xchg
pop
arpl
dec
inc
shr
fldcw
mov
and
adc
flds
sti
out
xor
insl
sbb
or
lcall
pop
lds
mov
xor
mov
and
ret
push
fldenv
ja
mov
cmp
sub
xor
add
push
cmp
and
cld
out
lock
and
pop
xchg
xchg
pusha
xor
mov
imul
jb
int3
push
repz
inc
bound
mov
gs
fstl
ja
or
adc
shr
jno
lret
mov
sub
daa
cmc
cmp
xchg
pop
dec
sub
dec
and
shrl
stos
xchg
popf
xchg
mov
lret
lock
es
pop
adc
jmp
mov
sub
xchg
push
pop
arpl
mov
mov
das
xchg
inc
mov
push
sub
call
popa
cmp
sub
mov
mov
pusha
in
scas
xor
xor
and
xchg
fidivs
mov
add
adc
call
outsb
lea
push
out
add
dec
inc
jg
jae
sub
ja
mov
xchg
xorl
xchg
push
xchg
mov
std
mov
ds
pop
pushf
iret
push
or
sub
xchg
test
pop
add
cmp
verw
int3
xchg
clc
xor
xor
scas
repz
push
dec
dec
sub
mov
loopne
je
xchg
sbb
imul
or
add
fs
cld
aad
push
shrb
or
jne
push
or
out
pop
dec
aad
xchg
lea
test
and
into
dec
clc
and
mov
jns
jl
cwtl
mov
repz
daa
push
pop
or
xchg
dec
mov
cmpsl
mov
push
call
sub
add
pusha
push
push
xorb
sub
or
mov
daa
cld
ret
cmp
ficompl
movsb
hlt
push
pshufw
jp
in
out
cmp
sbb
popf
das
shlb
test
les
incl
push
fisttpl
pop
mov
xchg
xchg
pop
jmp
iret
cmp
not
bound
sbb
mov
rcrb
shrl
jae
jb
adc
mov
in
repnz
pop
xchg
pop
jne
sbb
dec
bound
push
iret
fisubs
adc
ret
xchg
stos
or
mov
add
pop
out
and
in
mov
sbbb
jle
repnz
stos
sbb
push
jbe
jp
inc
movsl
jmp
cmp
xlat
pmaddwd
loopne
hlt
push
ljmp
jae
and
jge
test
sub
dec
ds
loope
jmp
nop
and
cmpsb
adcb
jae
mov
mov
xlat
int
or
mov
addr16
cmp
xor
fiadds
arpl
xchg
sarb
in
outsb
negb
sbb
ljmp
add
inc
enter
xor
and
stos
sbb
fwait
cmp
fdivs
or
bound
shlb
push
shll
popf
cmpsb
scas
loopne
mov
mov
test
sub
pusha
jae
dec
mov
adc
cmc
pop
out
fcomps
cli
push
hlt
pushf
mov
add
jns
aas
sti
mov
mov
dec
das
and
pop
or
inc
mov
mov
add
xchg
arpl
push
push
add
inc
gs
aas
pushf
xchg
out
xchg
shlb
mov
sahf
mov
push
ss
and
roll
in
jnp
pop
ret
bts
in
cmp
pop
lods
shll
pop
sbb
stos
mov
pop
fst
xchg
fcomps
je
pop
inc
pop
dec
les
rcr
xchg
fildll
mov
push
or
or
jmp
inc
out
add
inc
xor
add
jle
xor
and
sub
mov
into
dec
cmp
mov
adc
popa
mov
popf
insl
insb
xchg
pushf
pusha
lret
mov
test
sbb
mov
adc
add
loopne
mov
sub
shlb
xchg
mov
cmp
inc
inc
subl
add
fisttpll
fisttpll
xchg
cli
test
mov
scas
mov
sahf
popa
lret
sub
imul
jb
cmc
iret
xchg
jmp
inc
int3
xor
mov
push
jne
add
shrl
push
in
cmpsb
xor
enter
or
adc
dec
push
xchg
imul
push
mov
gs
dec
pop
jbe
out
mov
and
or
jb
pop
mov
out
jb
mov
jb
insb
fimuls
adc
xchg
jne
xchg
hlt
pop
fwait
push
adc
pop
jg
les
sbb
pop
movb
mov
mov
test
mov
push
lock
cld
loop
lahf
xor
add
repnz
insb
xor
push
ja
xor
fisttpll
std
movsb
inc
pop
cltd
cltd
out
aas
lds
lock
out
adc
mov
push
lret
jo
scas
pusha
pushf
icebp
test
mov
mov
cmp
stos
adc
fs
stos
lods
xchg
sbb
repz
das
mov
jno
fwait
out
sub
mov
pusha
mov
test
xchg
xlat
cmp
or
adc
pop
dec
jbe
rolb
andnps
cmp
sub
nop
push
push
cmc
jp
mov
insb
inc
jmp
dec
jno
jge
add
sbb
mov
shlb
xchg
pop
out
test
cmp
dec
sub
mov
mov
xchg
andl
mov
scas
inc
loopne
inc
inc
scas
shrl
and
loopne
cmp
rorl
into
insl
and
cld
cli
rolb
fsubrs
mov
pop
dec
mov
fldcw
loop
in
in
cmp
out
adc
je
xchg
fildl
rorl
mov
mov
inc
mov
cmp
test
andl
cmc
outsb
incb
dec
xlat
mov
cmp
shlb
jmp
xchg
mov
mov
push
jbe,pt
test
fisttps
pop
insl
mov
mov
dec
out
xchg
imul
shrb
cmpsb
lds
cmpsl
xchg
dec
sub
outsl
mov
leave
mov
pop
int
or
push
mov
sub
add
pop
mov
repnz
inc
mov
dec
xchg
leave
ja
icebp
adc
jp
in
cli
pushf
popf
popf
test
dec
inc
fisubs
cmpl
dec
mov
fcoml
add
sti
jmp
in
aas
xor
mov
xchg
dec
cmp
outsb
mov
pop
int3
movsb
outsb
and
rorb
lock
sub
mov
mov
xchg
lock
outsb
inc
ret
jns
bound
iret
lret
jmp
mov
movsl
pop
mov
ficomps
add
add
sub
frstpm(287
hlt
adc
nop
loopne
bound
sbb
dec
adc
mov
mov
mov
sbb
dec
dec
xchg
mov
lret
adc
push
out
mov
aas
popf
mov
out
mov
movsb
in
lods
xchg
shl
or
xchg
outsl
mov
sbb
fincstp
lods
rcrl
mov
jmp
or
add
mov
cs
movsl
jnp
or
shll
jns
and
ret
mov
sub
adc
out
mov
lahf
add
adc
das
fcoml
adc
adc
xchg
mov
sub
mov
mov
adc
in
dec
and
sub
cmp
jg
call
xor
sub
nop
in
or
and
ljmp
xor
mov
repnz
push
xor
iret
call
jl
pop
fcoml
dec
xchg
lock
or
or
mov
mov
add
cli
scas
pushf
xchg
scas
cmpsl
movsl
pop
xchg
mov
adc
pop
pop
jle
int
sub
push
popf
mov
mov
mov
pop
pop
lahf
movsl
in
mov
daa
insb
mov
xchg
cli
scas
pop
sub
jo
into
popf
fsubrl
jo
fucomi
out
pop
or
stc
loopne
or
and
mov
repnz
js
add
jnp
repnz
jle
hlt
cmpsl
xchg
pusha
xor
aas
cld
stos
mov
outsb
adc
push
lcall
clc
mov
dec
cmp
aaa
push
dec
jecxz
sbb
idivl
mov
cmp
mov
daa
sub
movsb
mov
pushf
int
ljmp
xchg
dec
imul
push
mov
mov
cmovle
in
ret
jp
sub
add
push
test
clc
aaa
lock
addr16
push
les
sbb
jecxz
jmp
ds
es
mov
roll
sbb
shlb
int3
loopne
add
or
int3
lds
lret
and
insl
xor
sarb
dec
leave
stc
ret
fildll
mov
inc
das
loope
outsl
xchg
or
jns
ret
xchg
push
fsubs
cmp
sbbl
pop
jl
frstor
xor
xor
ds
icebp
push
inc
xchg
xchg
test
js
jo
push
outsb
test
xchg
mov
and
call
adc
lahf
into
xor
addr16
sbb
ljmp
inc
pop
mov
add
sub
push
movsl
movsb
push
mov
inc
adc
dec
sbb
inc
test
pop
adc
scas
mov
sub
loop
mov
loopne
jecxz
fstpt
cmp
add
imul
lods
repnz
loop
outsl
jo
std
cmp
dec
out
clc
mov
addl
jge
dec
in
cmp
leave
ljmp
lret
sbb
mov
mov
push
mov
pop
dec
cld
test
popf
sub
negl
or
fdivrs
sarb
add
mov
inc
sbb
add
ss
mov
lock
out
repnz
inc
xchg
aaa
lret
roll
pop
add
repnz
mov
push
dec
sbb
pop
adc
jge
xchg
mov
dec
push
aad
jl
cmp
jno
mov
xor
mov
scas
inc
js
inc
shrb
push
fiaddl
sub
out
mov
jp
aas
adc
fnstcw
lock
inc
addb
std
lret
push
push
lahf
data16
nop
push
and
adc
adc
fldl
dec
and
cs
mov
mov
pushf
outsb
fwait
mov
cmp
rcrb
dec
xlat
sub
repnz
adcl
das
cmp
js
mov
xchg
jg
stos
inc
adc
and
sbb
fisttps
cmpsb
fldt
sbb
orps
hlt
mov
mov
lods
mov
jbe
dec
pop
cld
rcrl
icebp
in
je
pusha
push
fadds
ljmp
dec
jle
out
mov
mov
out
popf
mov
lcall
ret
addr16
pop
adc
push
pop
cmp
mov
pop
add
add
jne
stc
cli
stos
cmpsb
pop
lahf
inc
push
js
push
push
or
mov
nop
mov
test
daa
mov
mov
mov
push
lret
dec
mov
adc
mov
ret
cmp
jno
xor
add
rcrl
div
imul
test
cmp
ds
jbe
add
or
push
adc
hlt
ljmp
inc
xor
sub
inc
into
lret
lcall
mov
cmp
cwtl
xor
call
cmp
movsl
xor
or
mov
faddl
cmp
push
and
jg
enter
incl
jbe
cs
popa
xor
arpl
adc
in
std
xchg
xorb
inc
sbb
pop
call
es
cs
pop
in
fidivs
insl
mov
sub
dec
fwait
ds
mov
js
ret
mov
xchg
sub
mov
orl
pop
mov
jne
inc
out
repz
and
xchg
shll
div
adc
js
addr16
js
inc
aas
inc
ss
gs
xor
or
sub
out
rclb
stos
xor
xchg
inc
dec
sti
jp
les
add
and
ja
cmp
jbe
add
cmc
adc
movsb
gs
adc
sbb
push
jp
lret
jo
jg
push
cmpb
test
ffree
add
lcall
pop
sahf
sbb
push
lahf
jns
jmp
and
cmp
inc
mov
adc
dec
sbb
mov
or
mov
push
mov
pop
or
sbb
lcall
or
sub
mov
pusha
stos
xor
addr16
jne
popa
hlt
rcll
test
xchg
mov
jecxz
and
stos
fmul
xlat
lods
mov
jge
test
push
adc
test
imul
popa
lock
jno
xchg
fists
add
inc
pop
mov
mov
arpl
mov
test
stos
cmpsb
aaa
fdivr
lret
push
out
test
into
mov
test
test
ror
cmpsl
jle
adc
ja
pop
or
adc
sub
ret
dec
pop
or
mov
mov
call
imul
stos
stc
ret
das
adc
jne
lret
test
in
inc
sub
or
push
pop
inc
xchg
push
jle
imul
or
jge
ds
int3
inc
repnz
push
mov
pop
cld
mov
test
jne
adc
outsb
call
test
aad
outsl
test
icebp
in
sti
test
testl
inc
test
inc
xchg
push
inc
mov
gs
mov
sbb
push
jmp
sbb
mov
outsb
rcll
and
and
cld
mov
xorl
xor
pop
loopne
mov
clc
cmp
test
sbb
aam
add
stos
sti
xor
fistpl
dec
adc
sbb
faddp
push
ficomps
ds
mov
mov
pop
sub
cs
mov
daa
adc
cli
int3
adc
lcall
add
stos
jb
test
pop
int3
xchg
push
xor
cmpsl
cmp
inc
fcomps
sti
aam
popa
clc
jne
mov
fldenv
movsb
dec
mov
dec
js
inc
push
push
mov
mov
fs
orl
aam
loop
mov
or
test
jb
jb
or
fwait
inc
mov
clc
mov
mov
lea
js
andb
xchg
mulb
cmp
icebp
iret
mov
test
and
mov
test
nop
fmul
pop
mov
sub
daa
icebp
cmpsb
cs
mov
mov
jns
test
xlat
mov
jns
movsl
mov
dec
mov
mov
pop
ja
icebp
cld
dec
mov
mov
mov
inc
xchg
and
mulb
push
cmp
jmp
mov
sahf
mov
inc
jl
or
mov
pop
std
mov
das
mov
jge
pop
xor
fsts
fstpt
in
xor
nopl
je
jle
lods
scas
pushf
cmc
jmp
jge
xor
out
clc
subb
fwait
inc
test
sahf
fiaddl
cmp
pop
test
stos
mov
push
popf
in
pusha
and
mov
push
jnp
hlt
inc
ss
fistpl
push
out
dec
nop
mov
test
jbe
sub
fsubrl
mov
shlb
lods
aas
mov
movsl
shlb
shrb
jb
lods
inc
addb
je
mov
sahf
lods
cmp
mov
enter
shrb
push
cwtl
das
in
iret
pop
mov
sbb
push
popf
lods
sub
mov
xor
jmp
test
pop
cmp
leave
jle
nop
and
hlt
frstor
scas
pop
or
xlat
sbb
lds
mov
out
cld
loopne
pop
pop
movsl
inc
xchg
mov
or
pushf
sbb
popa
cmc
jp
out
jmp
cmpsb
inc
dec
invd
add
ret
pop
loopne
insl
jbe
or
js
sar
sub
add
ret
push
add
and
add
cmp
ficoml
shlb
subl
gs
adcl
sub
filds
fs
rcll
ret
stos
xchg
mov
pop
ror
cwtl
jp,pn
bound
or
fstpt
inc
and
mov
pop
jp
sub
adc
scas
push
pop
jne
sub
push
es
rorb
mov
fidivl
cmp
add
xor
fidivl
stos
cmp
lock
stc
shrl
cmp
ja
cs
ss
dec
int
das
dec
ret
xchg
adc
sahf
sub
insb
cmpsl
cmp
mov
jnp
pop
test
shlb
jecxz
stos
pop
adc
adc
mov
and
push
jae
mov
xchg
adc
cmpsb
daa
inc
arpl
ret
fwait
mov
inc
cmp
shlb
cmpsb
cmp
cmp
mov
cmp
sub
pop
sarb
int
inc
push
out
mov
jg
stos
cmpxchg
movsl
sbb
cmpsb
adcl
das
repnz
pop
je
neg
aad
cmp
stos
jge
into
sti
add
subl
mov
cmpsb
ret
push
xchg
mov
mov
test
inc
testl
dec
pop
pop
xchg
and
lcall
sbb
cmpsl
and
sbb
push
notb
imul
lods
in
sbb
cmp
fdiv
sub
xchg
stc
push
lds
notb
cld
pop
cltd
fwait
iret
popa
jecxz
js
fsubs
jmp
jl
push
imul
pop
xchg
fimuls
bound
sbb
and
roll
mov
dec
lahf
out
daa
ja
int
movsl
dec
movsb
dec
xor
xlat
orl
jne
data16
addr16
xchg
je
stos
addr16
in
cmp
sti
mov
and
sahf
stc
out
daa
pusha
push
testl
shlb
adc
iret
fstp
cmp
icebp
mov
jne
stos
or
lcall
xchg
adc
mov
jne
mov
ja
test
imul
pop
out
sub
mov
adc
add
jo
jns
cmc
push
mov
pop
lods
xchg
or
xchg
and
or
fidivrs
arpl
mov
dec
scas
std
gs
cmpl
fs
fwait
sbb
cmc
jecxz
sub
cmp
das
scas
ret
cmp
mov
and
jmp
adc
cmpsl
add
xchg
dec
fsubs
mov
in
xchg
inc
movsb
in
call
das
xor
das
xchg
mov
loop
dec
push
inc
daa
cmp
aad
push
or
xor
mov
sub
mov
loopne
inc
jnp
pop
push
xor
cvtpi2ps
aaa
aas
out
jecxz
lock
xchg
cmpsb
call
out
scas
jl
dec
or
jae
mov
adc
dec
mov
lds
pop
pop
sub
ja
and
loope
in
dec
out
add
xor
and
mov
iret
aad
movsb
xchg
or
gs
pop
and
xor
fldl
mov
sbb
mov
dec
sar
dec
mov
cltd
inc
and
mov
mov
xor
repnz
cltd
daa
lcall
mov
pop
test
mov
xor
cltd
jnp
sbb
aas
lret
aam
or
aam
cmpsl
xchg
mov
push
xor
out
jno
dec
jmp
sbb
cld
mov
imul
mov
jecxz
clc
pop
outsb
sbbl
lock
xchg
out
xchg
mov
push
and
jne
shll
insb
das
dec
adc
jl
mov
mov
adc
mov
xlat
test
push
or
int
mov
and
cmp
adc
addb
mov
cmp
fwait
add
insb
test
xchg
fistpll
jno
xchg
add
and
inc
stos
psadbw
subb
lcall
mov
leave
das
lods
inc
movsb
push
stc
lret
outsb
mov
jbe
fisubrs
push
out
mov
cmp
or
sti
movsl
fxch
lds
sub
lock
test
fwait
mov
jl
stc
cld
lahf
xor
mov
sub
es
cltd
aad
cmp
pop
in
outsb
mov
cltd
lret
ja
lret
lods
je
xor
lods
pop
push
mov
mov
jge
roll
xor
test
aas
cmp
outsl
icebp
je
push
pop
jb
lods
xor
ret
sub
mov
and
cld
and
lret
mov
in
mov
push
mov
rcl
rep
pusha
out
fbstp
pop
push
mov
sarb
leave
jle
mov
stc
stc
in
add
dec
je
pushf
xchg
lods
into
adc
dec
mov
sub
jnp
das
roll
cli
mov
xchg
cmpsl
dec
cmpsl
mov
in
xchg
dec
dec
stc
cmc
arpl
inc
mov
dec
out
insb
std
cmp
jns
sub
cli
ret
imul
loopne
icebp
pushf
mov
shll
into
adc
or
xchg
dec
jg
lcall
lods
imul
sub
mov
dec
nop
stc
mull
cmpb
popa
xor
sub
pop
cmp
ret
imull
sar
jge
lock
sbb
xchg
fldcw
popa
in
adc
add
out
add
jno
sub
nop
clc
xchg
push
sub
out
adc
sbb
jno
hlt
incl
push
jbe
mov
push
fisubs
rcrl
mov
fiaddl
test
lods
xchg
xchg
add
sbb
mov
jo
inc
jo
sahf
dec
imul
mov
add
repz
fadds
call
test
or
incb
cli
mov
mov
je
mov
push
mov
push
sbb
sbb
jmp
pop
or
rcll
add
dec
mul
in
gs
ljmp
xchg
push
adc
mov
outsb
jbe
rcrl
out
jo
jg
movl
and
pop
ret
pop
xchg
and
pop
movsb
xchg
dec
rcrb
mov
jg
jns
fsubr
into
fdiv
ljmp
lahf
rcrl
iret
push
inc
cmpsb
ds
fwait
inc
and
pop
mov
pop
test
mov
in
imul
jmp
out
data16
std
push
stos
mov
insl
aad
push
pop
mov
adc
pop
xchg
imul
mov
shrl
roll
push
sub
and
scas
loope
fsubl
sahf
shll
dec
lcall
xchg
lods
inc
mov
std
pop
or
dec
lret
cmp
aaa
cld
push
or
cmp
and
push
or
cmp
xchg
pop
dec
pop
or
inc
jge
shll
rcl
repz
int3
pop
imul
fnsave
sub
push
daa
lret
xchg
neg
popa
iret
jmp
pushf
js
xchg
es
mov
and
pusha
mov
xorb
mov
fisubrl
sbb
xor
inc
cmp
cmp
xchg
sbb
testb
cwtl
mov
and
dec
cmp
repnz
xchg
and
jnp
faddl
lret
sbb
xor
push
bound
mov
inc
xchg
or
scas
mov
pop
jecxz
lods
adc
pop
mov
out
test
mov
imul
cmpsl
inc
adc
sub
cwtl
lock
adc
inc
loope
das
cmp
and
xchg
mov
adc
mov
nop
mov
jg
jo
in
jno
lea
dec
push
stos
movsl
arpl
dec
enter
push
sbb
pop
push
imul
adc
fisttpl
shrl
jle
xchg
sbb
xchg
push
and
std
cmpsb
fbstp
test
mov
sbb
pop
mov
xor
in
repz
sahf
cmp
outsl
bound
sbb
jb
and
fcoms
lods
cs
stc
push
aam
push
add
in
lods
loope
insb
sub
push
imul
lods
jmp
repnz
mov
popa
test
xor
or
aam
add
add
inc
call
sbb
mov
mov
xchg
adc
out
pushf
jne
mov
push
pop
mov
mov
xchg
pop
clc
mov
and
xor
int3
push
mov
mov
popf
cli
cmp
sub
fstl
mov
sbb
mov
pop
arpl
jo
sbb
add
or
outsl
mov
lret
or
mov
imul
pop
scas
fiadds
test
mov
xchg
in
fdivl
xchg
cmp
std
mov
xlat
add
pop
out
jo
hlt
das
pop
cmp
sub
in
push
in
dec
cmp
daa
fdivrs
bound
iret
sbb
pop
xchg
movntq
push
andb
dec
ja
imul
cmp
push
jge
dec
loope
jbe
xor
das
popl
pop
mov
sub
aaa
adc
icebp
xchg
add
fwait
into
jecxz
adc
rcrl
loopne
dec
push
dec
pushf
outsb
xchg
in
je
ljmp
pop
stos
and
je
dec
js
cmp
mov
das
adc
cli
dec
addr16
mov
test
jl
mov
stc
sub
mov
mov
jns
cmp
mov
dec
sub
and
test
out
repz
jg
fcom
mov
mov
mov
pop
fdecstp
mov
fmulp
push
sub
fistpl
movsl
xchg
loop
test
add
dec
xchg
dec
jnp
or
scas
sub
repz
loopne
repz
movl
aaa
push
mov
cli
adc
in
jb
mov
sti
out
jo
ss
pop
gs
add
sub
iret
sbb
mov
xchg
cld
sbb
push
arpl
ss
xor
pop
aaa
xchg
repz
imul
lret
inc
lret
jg
or
outsb
inc
inc
ret
xchg
pop
cld
push
and
xor
aaa
or
mov
adc
mov
mov
inc
cltd
insl
pop
andl
ss
arpl
xor
dec
insb
xlat
mov
andl
stos
mov
mov
jge
imul
pusha
addr16
adc
dec
and
insl
shlb
mov
sub
pop
pop
add
pop
subb
shrl
mov
dec
cmpsb
leave
jne
xor
ret
and
ljmp
in
xor
das
cmc
cmp
pop
je
nop
push
or
or
mov
cmp
xor
adc
ja
sub
stc
dec
lods
jg
dec
mov
add
scas
aad
push
and
cltd
in
lods
shrl
jns
jo
movsl
andb
insl
lret
pop
sbb
sub
mov
aas
and
or
lahf
cmp
in
test
mov
cmp
and
insl
outsb
orb
enter
push
xor
addr16
and
or
mov
xor
dec
data16
icebp
sub
push
imul
mov
and
inc
sub
adc
stos
insl
ret
popf
dec
xor
cmp
xor
in
lcall
pop
daa
fldl
xchg
dec
fpatan
lret
fisubl
cwtl
out
cmpsb
out
or
pushf
xor
imul
add
out
mov
add
cmpsb
ss
xchg
adc
or
jo
and
ds
mov
xor
in
dec
andb
xchg
dec
cld
iret
lcall
or
xor
loop
fcom
adc
rcr
test
ret
push
pushf
jl
xchg
sub
mov
xor
das
jg
or
enter
rcrb
push
rolb
aas
jb
loope
push
sub
mov
mov
sbbl
and
fdivrs
fcoms
addb
xchg
cwtl
mov
and
fcomp
out
test
mov
nop
jecxz
sub
test
js
push
pop
fdivrl
sbb
dec
inc
sbbb
mov
fistpl
cmpsl
add
cmp
inc
mull
sub
dec
fbstp
popf
cwtl
mov
bnd
push
lret
push
sub
call
mov
pusha
jle
lcall
mov
dec
sbbl
dec
jmp
xchg
dec
lcall
xor
xor
jno
mov
das
in
out
push
jb
orb
push
aad
pop
arpl
leave
fs
and
xchg
adc
pop
cmp
mov
cmp
popf
jg
or
xchg
mov
insl
adc
add
aaa
mov
mov
cwtl
jae
push
sub
ficomps
shr
out
jmp
xor
lcall
sub
dec
jmp
out
jecxz
cmp
pop
in
incb
or
mov
and
jbe
clc
cmp
add
sbb
jecxz
lods
push
add
jae
orl
pop
lahf
je
cwtl
adc
mov
fs
jae
insl
in
inc
mov
jo
lret
inc
add
jno
mov
sub
jle
aam
mov
inc
dec
in
dec
addl
out
xor
mov
jno
push
cmp
dec
leave
cmpb
mov
sub
in
lret
mov
sti
lcall
xchg
mov
hlt
bound
or
mov
popf
dec
dec
xchg
shl
dec
scas
loop
cmpsb
cmpsl
js
sbb
nop
nop
imul
int
scas
and
push
push
cs
pop
stos
rcr
pop
xor
rorb
jmp
orb
dec
or
addb
sbb
dec
pop
mov
ret
data16
test
loop
mov
sub
fwait
inc
mov
cmp
jge
add
nop
mov
test
add
lret
xchg
fstp
aaa
mov
push
mov
out
mov
test
jecxz
clc
subl
test
sbb
mov
sub
out
fxtract
add
rcr
call
pop
jbe
ss
jg
push
or
lret
notl
dec
adc
mov
and
fdivrp
sbb
popa
popf
imul
push
dec
leave
rcr
or
movsb
mov
pop
je
call
sbb
and
mov
test
jmp
inc
sbb
fbstp
ret
jae
push
sub
inc
or
cmp
or
clc
enter
push
mov
lds
inc
lahf
insb
scas
lods
rcll
dec
push
or
pusha
jp
push
inc
loopne
in
pop
lea
out
mov
or
in
and
repnz
jmp
dec
aam
insb
jno
cmp
je
enter
pop
cmp
inc
sub
stc
mov
push
les
lea
lock
lock
and
xor
test
inc
dec
out
daa
sti
mov
or
loop
js
xorb
mov
adc
cltd
jmp
inc
shrl
fdivs
inc
jmp
cmp
fldl
push
out
mov
jle
lcall
int
push
mov
jmp
mov
out
movsb
push
leave
sub
add
xchg
sbb
scas
dec
rclb
int3
jo
rcll
pop
or
xor
jbe
repnz
fimull
pop
movsb
adc
and
rcrl
inc
sub
mov
cmp
push
icebp
dec
jp
pop
cmp
hlt
lods
lds
jl
roll
outsb
lods
push
inc
push
mov
jns
fldl
imul
flds
enter
add
cmp
and
in
push
imul
lods
ror
sbb
movsb
adcl
jg
xor
pop
mov
stos
rcr
test
pop
xchg
adc
jno
mov
or
mov
insb
aaa
push
inc
sub
scas
mov
push
mov
push
dec
or
clc
inc
fcmovne
jbe
mov
xchg
nop
mov
dec
rcrb
push
jp
sub
fbstp
mov
add
test
iret
int
sub
mov
dec
aaa
popa
in
jmp
aaa
mov
pusha
inc
ret
push
sub
scas
jle
fstps
add
out
push
cmp
clc
rorb
pop
push
bound
popa
cmpl
lahf
and
fwait
push
push
mov
pop
test
test
mov
out
xchg
adc
in
adc
sbb
push
xchg
dec
stc
notl
sarl
mov
leave
cmp
or
imul
mov
dec
fadd
out
mov
sbb
xor
fcmovb
sub
ds
sub
popa
arpl
stc
push
or
sbb
dec
aad
cmp
fisttpll
shl
or
call
cld
outsb
add
mov
add
aas
jge
out
sub
sbb
mov
xor
xor
cmp
cmpsb
pop
ret
imul
cmpl
mov
xchg
lods
mov
cli
adc
xchg
rolb
popf
jne
cltd
adc
in
leave
adc
and
sahf
inc
jmp
std
sbb
xor
jmp
mov
mov
repz
bound
cld
sbb
jo
insb
lcall
ds
pop
inc
adc
or
clc
in
mov
and
xor
dec
stos
jmp
push
pop
jae
jp
cmp
pop
mov
in
je
in
loope
loopne
out
stos
fstps
pop
das
push
jp
add
adcl
dec
pop
stos
subl
xchg
adc
imul
add
ljmp
ret
test
xlat
add
cmp
scas
dec
ret
stos
call
mov
and
add
das
movsb
mov
cmpsl
js
fwait
das
mov
in
gs
jle
outsb
clc
loopne
test
xchg
fisttpl
shlb
push
out
push
mov
cltd
and
sbb
adc
clc
mov
incl
xor
data16
pop
mov
jne
pusha
mov
out
into
into
jmp
xchg
cs
jnp
sbb
mov
movsl
rclb
loope
push
xor
or
jg
imul
adc
xor
mov
push
clc
mov
jae
cmp
out
xor
inc
test
jle
mov
inc
push
pop
out
test
cmp
sub
insb
inc
and
ja
add
roll
cld
cmpsb
sbb
jle
je
mov
ret
push
lea
jo
inc
pushf
std
unpcklps
and
and
mov
inc
fstps
mov
inc
hlt
pushf
sbb
lret
ret
mull
or
sub
mov
sarb
cld
ret
cmp
ja
mov
inc
fisubs
sub
xlat
cmp
int3
hlt
dec
xor
lea
xchg
aad
or
ret
xchg
pushf
add
sub
inc
iret
nop
sbb
push
mov
lahf
imul
pushf
xor
aad
fs
jno
push
add
mov
cltd
pop
jnp
rcll
ficomps
xchg
cmp
into
push
jbe
inc
movl
adc
xor
xor
and
cmp
sub
add
or
into
cmp
cmp
or
es
out
adc
jmp
test
mov
mov
dec
or
jge
xchg
sbb
repz
repz
gs
or
xchg
mov
pop
cmp
std
cltd
sbb
push
mov
cs
fdivrl
call
notl
div
nop
test
cmp
mov
inc
mov
cmp
cli
pop
push
mov
sub
fwait
andb
xchg
ljmp
xchg
xor
cmp
gs
rcrb
sub
xor
sbb
dec
jl
sbb
pop
or
fisubs
pop
jg
mov
loope
hlt
dec
mov
and
int
mov
pop
mov
into
in
movsb
aam
gs
aam
mov
cmpsb
push
jne
inc
push
or
push
sbb
fimuls
or
jb
filds
cmp
mov
inc
adc
dec
lods
jle
out
sub
cmp
scas
aam
or
sbb
dec
data16
fcmovnu
cmc
xchg
scas
mov
lods
cmp
jle
jl
movsl
hlt
xorl
jl
sub
sub
lods
or
enter
mov
pop
test
adc
popa
push
xor
mov
mov
imul
or
sbb
movsb
push
sbb
ficompl
inc
fildl
movsl
add
fistpll
jmp
and
xor
sbb
jp
and
outsb
insb
outsb
out
and
and
imul
roll
into
lock
sar
pop
dec
ds
jge
addr16
mov
mov
popf
or
push
or
jb
lret
lods
xor
inc
xlat
mov
mov
fistpll
push
pop
repnz
jno
ret
rcl
test
sbb
jp
bound
test
movsl
ret
cmp
sbb
movsb
xor
push
add
inc
xor
push
mov
push
mov
leave
pop
mov
xor
shll
and
movsl
jp
jg
and
inc
imulb
popf
fldcw
out
lea
cmp
mov
push
jbe
push
cmpsb
nop
ljmp
or
mov
push
arpl
sbb
and
je
and
and
movsl
pop
in
add
fisttpl
and
mov
in
mov
cmp
mov
mov
les
inc
adc
pop
fldenv
aaa
ret
out
mov
cmp
popa
arpl
jne
adc
loop
pop
jmp
icebp
adc
in
pop
jae
pop
fists
jno
mov
dec
pop
sbb
xor
lret
popa
lods
cli
shlb
and
pop
aad
outsl
mov
push
dec
xchg
and
xchg
loope
cltd
pop
and
push
in
add
pushf
outsl
scas
pop
dec
or
cmpsl
jl
push
repz
lods
cmp
inc
in
aas
test
cli
jge
adcb
cmp
sbb
loop
pop
adc
and
mov
int3
into
add
or
xchg
xor
in
mov
mov
and
arpl
lds
in
xor
int3
jne
sub
sub
jno
pop
dec
or
jecxz
imul
jns
dec
iret
xor
mov
inc
out
test
xchg
mov
or
dec
and
std
jbe
test
cmp
leave
add
jecxz
leave
xlat
pop
addr16
cmp
or
ss
adc
enter
and
and
lea
arpl
mov
inc
jne
fisubs
adc
fcoms
es
pop
inc
xchg
cmpsl
cmc
faddl
and
add
push
je
mov
outsl
inc
je
mov
push
sub
and
imul
sub
cmpl
xchg
xor
sub
xor
mov
outsl
insl
js
adc
pop
movsl
lcall
mov
in
xchg
aaa
sub
or
mov
dec
pop
inc
inc
dec
testb
jl
jb
dec
dec
inc
fsts
icebp
testb
mov
jle
and
pop
movsl
jnp
dec
in
and
cmp
in
mov
out
ret
loopne
shlb
adc
jno
jae
pop
out
shl
jno
mov
roll
ret
or
mov
add
pop
mov
repz
or
xlat
push
or
dec
clc
imulb
sbb
cmp
lret
in
mov
out
ja
lret
sbb
leave
das
push
jge
adc
pop
mov
pop
popa
orl
cmp
xchg
mov
mov
mov
std
dec
insl
rcr
pushl
jp
sbb
sub
mov
jg
f2xm1
cmp
push
push
xor
out
dec
rcrl
fcmovb
adc
lock
cmc
std
clc
imulb
mov
mov
shrl
push
jmp
or
inc
mov
sar
cltd
inc
cmp
cmp
jae
add
leave
jnp
push
jns,pt
xchg
mov
xor
xchg
inc
and
insl
insb
push
cld
or
ror
ds
jae
mov
dec
inc
fwait
out
jp
out
xchg
xchg
or
aad
jne
inc
and
mov
lahf
cwtd
loope
and
icebp
push
cmc
mov
insl
xchg
movsb
dec
lock
in
xchg
and
or
dec
xchg
lahf
fidivrl
cli
mov
sbb
xor
stos
ficomps
mov
pop
push
push
cmp
pop
repnz
inc
fnstenv
rorw
decl
push
adc
scas
and
push
jle
jge
xorl
sbb
pop
fs
je
jo
iret
lret
ret
mov
mov
sbb
stos
insb
cmp
ja
pop
jmp
cli
aas
adc
jae
testb
sbb
sub
sub
pop
int3
cmpsb
out
mov
pop
adc
movl
push
jbe
call
fdivrp
pop
ljmp
push
push
xchg
or
xor
mov
mov
stc
xor
cltd
push
xor
stc
cs
rol
dec
mov
mov
xchg
sahf
cltd
pop
dec
aam
outsb
cmp
inc
popa
inc
and
lods
test
and
movsb
scas
lock
ficoml
jnp
ret
jns
xlat
mov
push
leave
jp
loop
xchg
adc
jl
das
insb
xchg
mov
into
jl
mov
hlt
mov
int
lea
add
mov
sub
iret
aas
cmp
test
out
repnz
inc
data16
cmp
xor
jo
popf
pop
je
in
adc
jmp
int
xor
rcr
cmpsb
lock
stc
sub
mov
out
pop
push
add
cmpsl
push
es
mov
ljmp
sub
push
jns
out
sub
int3
dec
pop
loop
mov
pop
xor
dec
pop
loop
out
adc
shll
hlt
loop
pop
repnz
outsb
in
lea
stos
pop
jo
or
inc
iret
test
loope
inc
cmp
jmp
mov
or
int
xor
sarb
mov
mov
push
pop
fisttpll
and
dec
test
ffreep
cmp
add
loopne
dec
outsl
shlb
imul
mov
sbb
lods
in
leave
cli
cmp
push
fbld
in
jno
test
lahf
pushf
jnp
fcmovu
or
addr16
adc
xor
add
aad
or
stos
repnz
enter
cmc
in
dec
sti
xchg
test
mov
mov
cli
cli
sub
sbb
rclb
lret
or
add
daa
dec
clc
lret
loopne
jmp
adc
sbb
inc
pop
push
lret
scas
test
pop
shll
sarb
repnz
jns
cli
aaa
mov
in
or
xor
mov
test
pop
in
jno
mov
push
insl
stos
stos
mov
decl
movsl
xchg
xchg
sbb
sbb
loopne
dec
loop
ljmp
std
gs
roll
stos
stc
push
js
sub
fwait
sahf
andb
add
push
shl
add
cmp
lcall
idivb
jnp
loope
cmpsl
test
jo
add
cmp
sbb
sbb
pop
xor
mov
sbb
adc
pushf
push
xchg
in
or
mov
cmc
lret
add
adc
movsl
mov
cmp
inc
or
jp
adc
mov
lcall
std
dec
mov
stos
xor
adc
shl
scas
xor
stc
jl
stos
out
fmull
cmp
pop
movsl
aad
cmp
push
loopne
mov
mov
out
adc
sub
xchg
cmc
mov
lcall
iret
push
pop
mov
push
mov
roll
dec
lea
push
outsl
mov
arpl
lahf
lahf
dec
add
xor
idivl
jecxz
pusha
push
je
jg
cmpb
scas
mov
out
inc
imull
mov
dec
xor
sarl
cmp
fistpll
push
sbb
and
flds
dec
test
jo
jg
les
push
ret
js
xchg
or
imulb
cmp
or
push
push
mov
lods
push
dec
notb
mov
ss
out
push
loop
imul
pop
loope
mov
jl
pushf
cmp
scas
jnp
lret
mov
xchg
sbb
add
scas
push
test
cltd
icebp
lahf
cs
jno
lods
sti
stos
rcr
cmp
xor
test
xlat
mov
cmpsl
data16
inc
movsb
sub
mov
push
or
out
ss
sahf
repz
test
rclb
jle
xlat
xchg
decl
ret
xor
mov
push
rcl
scas
xchg
test
fsubs
fsubrs
and
sbb
sub
in
xchg
aad
or
sahf
ds
movsb
cmpsl
out
cmp
das
add
push
mov
push
xor
pop
sbb
in
lret
push
cli
push
pop
dec
sub
add
sahf
aam
mov
pop
mov
cmp
stos
jmp
sub
cmp
mov
ja
fsts
mov
sti
sub
adc
add
popf
adc
xchg
scas
sahf
add
mov
pop
sub
mov
aad
lods
pop
ret
sti
aad
adc
adc
adc
mov
clc
mov
jmp
adc
fwait
and
stos
ja
les
or
lahf
adc
adcb
push
into
pop
push
outsb
pop
fucom
jb
jle
sbb
daa
xor
fimull
push
sti
addr16
movsl
cmp
inc
and
xor
fcompl
or
add
push
lahf
scas
xchg
mov
imul
bound
pop
xchg
or
or
push
push
and
xchg
lds
ljmp
jb
cmp
add
push
pop
sub
out
sub
pop
movq
xchg
adc
cld
inc
sbb
xchg
cld
cmp
aaa
mov
sub
and
repz
ret
loopne
cli
pop
pop
fcoml
push
jno
jle
ljmp
lea
xorl
repnz
into
xchg
repz
cmp
movsb
mov
stc
loop
inc
das
cmpsl
in
int
wrmsr
xor
adc
xlat
mov
inc
mov
jne
cmp
adc
pushf
loop
sbbb
aas
jp
addr16
inc
test
or
push
test
pop
lds
out
rclb
imul
repnz
cmpsb
enter
ret
jg
push
inc
or
dec
ja
insl
cmp
xor
shl
imull
movsb
jp
or
xchg
adc
mov
inc
gs
and
push
xchg
out
sub
fimull
in
movsb
lods
add
mov
out
add
sbbl
xchg
lahf
mov
clc
out
sbb
push
add
test
shrl
push
mov
je
dec
or
dec
xchg
cmp
and
fnsave
push
fwait
adc
scas
les
lods
pop
dec
adc
mul
rcrb
jmp
xchg
ja
mov
and
js
int
push
aaa
bound
or
pop
dec
xlat
push
out
shl
inc
pushl
xlat
inc
movsl
dec
xchg
cs
dec
jecxz
push
sub
mov
mov
leave
out
xor
imul
sub
pop
das
adc
sub
add
lret
sbb
xchg
xchg
movsb
sbb
cmp
nop
adc
test
xor
mov
mov
mov
imul
inc
roll
xchg
faddl
or
repnz
sbb
sub
ss
inc
mov
jp
or
xchg
mov
or
or
adc
jns
lods
pop
jp
and
mov
sti
cmpb
sbb
xchg
iret
aad
and
js
out
push
push
out
aam
lea
mov
out
jg
xor
sbb
out
mov
and
mov
int
sbb
push
sti
mov
insb
rcll
and
data16
push
aad
xor
loop
loop
cmc
adc
or
shl
sbb
push
je
ljmp
decb
mov
lcall
jecxz
repnz
mov
js
adc
pop
mov
jecxz
inc
xchg
add
sbb
shrl
push
dec
outsb
andl
push
sahf
pop
pop
pop
in
hlt
push
mov
or
dec
cltd
mov
sbb
call
push
out
mov
fildll
push
push
fidivrl
mov
ficompl
jnp
jns
fldt
fldln2
mov
add
adc
mov
push
mov
daa
xchg
std
xor
and
std
in
rorb
stc
ja
or
push
enter
mov
push
data16
sub
movsl
sbb
lret
ja
lea
pusha
or
sub
pusha
ret
xor
adc
ret
jbe
mov
jg
stos
gs
je
out
mov
xchg
pusha
test
mov
arpl
and
push
add
into
hlt
movsl
push
pop
sub
fucomi
call
and
sub
aaa
stos
adc
fdivrl
outsb
add
dec
stos
xor
pop
mov
add
lgdtl
cmp
adc
aas
imul
mov
add
scas
or
mov
xchg
inc
das
sub
int
jg
cwtl
cmp
js
fbstp
ret
sbb
push
jmp
daa
sbb
mov
mov
inc
xchg
sub
add
push
add
fisubrl
call
mov
xor
pusha
cltd
clc
sub
cld
push
inc
call
xchg
pop
loope
sub
jg
jecxz
jmp
imul
ss
std
cltd
sbb
stos
test
je
sbb
je
pop
xor
shrb
fucom
xchg
bound
daa
adcl
bound
mov
dec
aaa
cltd
xor
iret
mov
add
clc
mov
pop
test
pop
xchg
popa
xchg
movsb
and
adc
daa
lcall
push
je
lock
mov
xchg
sbb
imul
iret
dec
lcall
ficoms
sbb
orl
out
mov
adc
and
jge
mov
inc
fnstsw
mov
pop
aam
sbb
ret
mov
mov
popf
psrlw
cmp
lret
push
cltd
repnz
jno
stos
add
mov
mov
or
repz
ficoml
cwtl
mov
pop
and
mov
xchg
adc
mov
xchg
xor
mov
xchg
pop
cli
xchg
loop
mov
jmp
jns
push
in
mov
subl
mulb
xchg
test
and
mov
stos
sbb
enter
pop
jo
jb
push
bswap
or
ret
sbb
mov
pop
mov
shll
pop
or
xchg
mov
mov
cmpsl
jnp
std
loopne
js
std
lea
addr16
jbe
sub
sub
xchg
push
ret
and
push
movb
xchg
cmp
lret
xlat
dec
mov
or
mov
mov
jae
jle
call
insb
dec
push
sbb
jo
sub
add
in
or
cmpsb
lret
mov
loope
out
les
cli
popf
mov
fwait
xchg
cmp
cltd
fimuls
mov
ljmp
and
push
inc
lock
cmpsb
cltd
or
push
sbb
add
lret
js
pop
gs
sarb
xchg
call
popa
shrl
cmp
pop
sahf
mov
lods
push
jnp
ret
push
jnp
fstpt
repnz
jmp
ja
inc
out
adc
push
rorl
sub
push
test
in
sbb
jns
dec
cmpsb
add
lock
out
cmp
mov
xchg
lret
aam
sub
movsb
inc
sets
mov
dec
popa
or
into
dec
add
pushf
jnp
xor
lods
jp
xor
or
cwtl
and
xchg
cmp
dec
outsl
cltd
clc
adc
mov
adc
push
stos
les
and
push
movb
fadd
adc
aad
sbb
mov
jnp
cmp
scas
jp
lret
inc
add
and
inc
xor
mov
repnz
cli
ss
mov
xor
popa
stos
imul
cmpsb
mov
outsb
sbb
popf
add
sahf
test
fsubrs
arpl
push
push
rorb
lret
adc
les
bnd
stos
push
sbb
jge
sub
js
push
pop
dec
cmp
loop
jae
push
add
fmull
les
and
pop
xchg
jnp
pop
ficompl
and
fwait
push
mov
outsb
shl
xchg
pop
test
jg
mov
sub
mov
push
pop
inc
adc
pop
sahf
subb
cmp
into
jne
daa
mov
mov
test
fidivrs
and
js
or
subl
dec
dec
cmc
rcrb
jne
sbb
pop
les
ss
push
popf
jle
jns
lea
jo
lret
lods
adc
ds
scas
cld
lahf
test
dec
insb
arpl
leave
xchg
imul
pusha
std
jno
xchg
call
je
adc
stos
adc
xor
cmp
xor
mov
out
dec
cwtl
stos
sbb
out
aam
mov
xor
sub
lods
cmp
sbb
xchg
sti
int
inc
lret
test
pop
test
sbb
mov
jmp
imul
push
push
mov
cmp
dec
adc
cmc
lea
decb
fsts
cmp
jl
sub
dec
or
or
inc
icebp
imul
es
cli
fists
mov
cli
iret
outsl
sbb
lods
std
stos
inc
jnp
js
inc
adc
sub
mov
xchg
push
and
mov
jb
xchg
or
push
out
cmp
cmp
dec
aad
jl
scas
sets
aad
mov
dec
scas
mov
stos
xchg
scas
mov
out
mov
pop
xchg
mov
movsl
shll
lahf
cli
adc
jno
inc
sahf
popf
pop
outsl
ljmp
xor
mov
roll
xchg
and
jo
les
pop
testl
fisttpl
loope
mov
push
lea
lret
fsubrs
sbb
lcall
push
mov
mov
in
inc
and
or
fstcw
idivl
mov
push
mov
sub
sbb
ret
push
cmpsb
popa
icebp
idivb
in
jae
and
mov
jnp
out
mov
jo
dec
and
ss
sarb
or
fisubl
pop
adc
sbb
pop
jge
cmp
and
test
lret
cwtl
pop
popf
adc
loopne
addr16
dec
mov
pushf
loop
sub
xchg
dec
addb
aad
mov
lea
dec
inc
xchg
adc
mov
xor
lock
inc
in
lods
xchg
and
lret
stos
jmp
loope
xchg
sahf
lahf
adcb
pop
in
sarl
inc
lock
pop
loop
or
fimull
lods
imul
jno
dec
movsb
xchg
cmp
aam
pop
dec
add
mov
pop
rcrl
lock
jl
rorb
pop
push
lret
mov
lahf
fcomps
data16
push
cmpsl
sub
mov
mov
adc
push
and
sub
add
add
jecxz
bound
inc
push
mov
push
lahf
dec
rorb
lret
movsl
pop
push
jl
loop
ret
xlat
insb
push
mov
mov
notb
pop
loop
push
out
imul
leave
push
test
movsb
sub
and
adc
popf
sbb
or
andl
test
das
lret
adc
sti
inc
outsl
lock
dec
inc
lret
or
sarl
sub
in
gs
je
dec
lea
addl
rclb
or
filds
sub
mov
pop
xor
jle
pop
sbb
mov
xchg
insl
inc
in
cmp
fcmovne
jle
jl
mov
push
fsts
mov
xchg
cld
mov
pop
pop
loopne
xor
or
xor
mov
lods
sbb
es
in
mov
cmp
or
cmp
pop
movsl
add
xor
aad
adc
cmp
mov
lret
scas
popa
movsl
mov
mov
cwtl
ljmp
push
subl
adc
jl
and
lahf
xchg
push
cmpl
sbb
dec
jo
inc
lcall
pop
movsb
jnp
aam
mov
push
ret
mov
aas
lea
mov
test
mov
sbb
mov
inc
mov
iret
cmp
into
in
test
mov
iret
pop
mov
cmpsb
ja
pop
mov
xor
cmpsl
add
fsubl
in
ds
xor
jp
imul
popa
cmp
mov
sub
hlt
call
pop
pop
adc
cwtl
mov
cmp
pusha
cmp
jno
or
aad
pop
push
cmovne
fcomps
push
cltd
mov
cmp
lret
mov
mov
push
out
les
cmpsl
movsb
and
ds
iret
cmp
push
add
stos
xor
jnp
data16
call
sbb
inc
stc
push
mov
stos
fmuls
or
loope
cmp
sbb
shrl
sbb
rcl
lock
and
mov
sbb
pop
xor
sbb
mov
shlb
in
mov
cmc
xchg
or
leave
jg
pop
push
js
add
loope
cmp
dec
mov
loope
cld
push
sub
xchg
idiv
xchg
jne
rcrb
fwait
xor
test
in
in
mov
jb
test
mov
loopne
sub
push
cmc
cmpsb
push
pop
in
mov
pushf
rcll
shlb
or
push
cmp
mov
and
insb
sbb
mov
leave
dec
jns
cmc
mov
subb
push
sub
add
inc
data16
sarl
test
push
mov
cmp
in
xchg
add
mov
mov
mov
mov
repz
xchg
cli
xor
idiv
jge
add
inc
xchg
lods
mov
xchg
inc
fisubs
dec
nop
out
jb
push
adc
xor
pop
dec
aaa
insl
loopne
test
mov
shlb
popa
adc
jle
pusha
ss
cltd
pop
push
and
pusha
xchg
js
lea
pop
xchg
push
in
xchg
nop
jle
insb
mov
je
lods
decb
lahf
xchg
xor
pop
fisttpll
mov
sbb
fsub
mov
xchg
test
push
mov
es
gs
lret
add
pop
xor
adc
repz
imul
js
xchg
ret
cmpb
ret
jnp
orl
movsl
push
mov
inc
sbb
aad
aam
push
or
fcompl
adc
out
test
and
xor
mov
inc
xlat
and
stc
sbb
xchg
cmpsl
mov
mov
pop
cli
data16
push
inc
lcall
imull
and
ret
sbb
jmp
insl
jmp
mov
pusha
pop
lahf
shlb
or
sub
fs
testl
jle
sub
call
xchg
mov
cltd
shll
or
insl
mov
arpl
sbb
sub
pop
mov
loop
pop
lods
ficoml
cwtl
inc
xor
push
jp
fnstenv
jno
and
add
mov
call
jae
inc
fwait
mov
es
jmp
add
lahf
sub
or
push
or
dec
cmp
int
sti
inc
out
stos
ljmp
in
or
ret
and
icebp
fs
cmpsb
mov
test
lret
imull
mov
les
idivl
pop
cmp
dec
mov
or
or
or
movsb
jns
stos
mov
jb
das
jl
adc
inc
insb
fstl
in
xchg
rcrl
shlb
pushf
mov
mov
lcall
and
xor
mov
inc
es
xchg
ror
sub
push
in
das
outsl
arpl
pop
mov
push
jecxz
mov
outsl
test
es
out
imul
mov
sub
fwait
mov
mov
insb
inc
add
in
add
jno
stos
in
mov
fadds
inc
notb
cmp
imul
fsts
ss
lret
ret
mov
fistpl
enter
add
adc
outsl
sbb
mov
in
arpl
out
jb
imul
idivl
aaa
jmp
insb
inc
outsb
ss
xor
jp
inc
stc
add
and
push
stos
test
and
leave
insb
stos
int
ret
stos
mov
push
mov
fs
and
cmp
jp
insb
dec
sbb
pop
in
test
lcall
dec
arpl
inc
cmp
xchg
bound
ss
dec
dec
mov
decb
jp
jge
xchg
ja
cmp
mov
xchg
xor
lea
push
aas
adc
rorb
lret
into
fs
xor
fistl
lock
push
cltd
sarl
fldl
das
aam
adc
xor
mov
xor
rclb
jae
fildll
mov
dec
ja
imul
lcall
shll
xchg
push
repz
pusha
adc
ficoms
pusha
clc
mov
mov
lea
push
les
push
mov
vpsubusw
pop
jne
add
lahf
and
jne
dec
mov
sbb
popf
call
out
arpl
test
jo
lahf
jmp
outsb
inc
and
mov
push
pusha
or
addr16
cmp
sbb
lods
outsb
xchg
push
mov
pop
ds
inc
dec
push
add
xchg
in
sbb
leave
dec
stos
sarl
dec
call
fs
sbb
clc
es
pop
inc
sbb
sbb
dec
stos
std
push
jg
aam
movsb
shl
fdivs
mov
scas
xchg
mov
push
jl
push
in
dec
adc
pushf
and
sarb
jg
adcb
fldenv
dec
subl
or
push
mov
lahf
mov
jle
xchg
lcall
arpl
call
xchg
and
shrb
in
mov
mov
xor
wrmsr
std
cmp
pop
and
in
pop
adc
xchg
out
lods
out
dec
cmp
jbe
pop
mov
out
or
adc
cmpb
dec
lret
xor
pop
sub
mov
mov
sbb
lods
cli
inc
mov
outsb
mov
sahf
push
xchg
shl
push
cmp
sbb
push
rcrb
mov
int
shl
sub
sub
xlat
out
push
adc
add
aaa
xor
inc
add
lods
cmpsb
push
sub
adcl
jnp
add
dec
into
and
iret
lret
arpl
jl
cmc
pop
adcl
or
dec
iret
sub
fwait
cmp
icebp
jbe
cwtl
cmp
loope
jle
fsubl
insb
mov
push
fistps
leave
sub
ficoml
cmp
loope
xchg
adc
stos
outsl
test
fwait
fstps
stc
pushf
pop
nop
into
fdivs
adc
scas
test
loope
xchg
mov
out
sbb
jnp
push
xor
mov
mov
inc
jmp
mov
insb
gs
dec
das
adc
push
cs
jl
push
mov
dec
sub
adc
push
int
repnz
push
mov
lret
inc
pop
add
gs
push
outsl
add
ss
mov
fs
out
pop
ret
cmp
ss
outsl
inc
inc
lea
xchg
pop
and
inc
movsl
mov
fistl
cmp
loopne
mov
sbb
xchg
jecxz
dec
cmc
or
fwait
add
aaa
pop
fadds
mov
test
shrl
repnz
int3
dec
mov
add
adc
repz
mov
add
test
mov
mov
stc
jo
sahf
or
cmpsb
insb
sbbl
adc
xchg
pop
insb
lds
jecxz
aam
out
test
mov
in
jno
decl
out
inc
inc
popl
insb
mov
add
outsl
mov
fwait
cmpsb
pop
ja
push
loopne
push
xchg
ljmp
scas
and
pop
outsl
sbb
cld
shlb
outsb
jmp
sarl
sti
sub
ret
inc
movsl
adcb
lock
shl
out
cltd
sub
addb
shll
imul
jmp
aas
pop
mov
mov
xchg
lock
repz
scas
pop
arpl
out
dec
and
push
test
push
cld
jmp
xchg
ja
cwtl
sti
bound
add
cmpsl
cmpsb
jnp
adcl
out
iret
mov
sub
cwtl
ret
cmp
data16
or
inc
inc
bsr
xchg
iret
pop
xor
mov
sti
jecxz
inc
lret
xchg
mov
lock
or
mov
adcb
push
xchg
je
test
outsb
in
mov
outsb
xor
mov
sub
sti
cmp
cmp
insl
jle
xchg
adc
jae
mov
orl
push
xlat
jecxz
cli
stc
aad
and
cld
lock
in
cltd
loope
fdivrl
cmp
mov
and
adc
lret
je
cwtl
adc
inc
push
inc
ss
add
xchg
cmp
inc
pop
outsb
sub
scas
fcmovnbe
mov
mov
pop
repnz
jno
adc
clc
sbb
fnclex
ljmp
lods
imulb
cld
mov
out
cmp
pop
cmp
xchg
or
mov
shll
sub
imul
mov
sbb
out
xor
das
add
int3
mov
jns
cmp
es
call
and
adc
pop
ja
loopne
cmc
sbb
shrl
cli
sub
sbb
sub
fnstcw
mov
and
sti
push
stos
loope
dec
push
jmp
xor
mov
mov
sbb
add
jne
insl
push
shrl
int3
cmp
rcrl
jg
fisubs
enter
push
insl
idivl
jbe
push
shlb
movsb
and
pushf
mov
mov
pop
xchg
das
cs
lret
sub
aaa
ret
xchg
mov
jns
fs
movsb
dec
cmp
dec
jo
sbb
xchg
sbb
dec
rcrl
pop
decb
jnp
inc
fildll
inc
idivb
out
mov
xor
jb
lock
rorl
in
mull
or
repz
or
and
imul
pop
mov
ds
xchg
roll
or
mov
and
cmp
push
or
out
int
mov
aaa
lds
and
imul
or
out
lret
push
mov
movsb
ret
or
adc
sbb
add
mov
jmp
mov
sbb
pop
es
inc
insl
mov
mov
dec
outsb
mov
mov
xchg
sbbl
loope
das
test
push
fs
insl
sbb
ret
icebp
cmp
jnp
jle
cwtl
pop
outsb
pop
loopne
xchg
adc
cmp
sub
or
pushf
xchg
pop
lahf
sub
mov
addl
out
jmp
pop
mov
out
jns
inc
aam
sub
pop
insl
and
loope
xor
outsl
idiv
cmp
jae
mov
and
dec
or
jbe
movsb
pushf
inc
lock
xor
cld
pusha
or
xchg
xchg
fistpll
aad
clc
xchg
pop
sbb
mov
arpl
std
dec
dec
fwait
lds
dec
addr16
mov
mov
jne
xchg
mov
cmp
push
out
gs
mov
fiadds
mov
sbb
mov
fwait
lock
fwait
loopne,pn
lret
jb
lea
out
pop
test
fstpl
loope
xor
or
push
mov
out
test
orb
jp
cs
aad
and
icebp
test
imul
scas
cmp
pushf
lods
std
loop
ss
adc
pushf
imull
pop
or
int
in
ds
sub
fstpt
adc
push
push
jae
leave
xor
stos
xchg
dec
fidivs
mov
and
xchg
mov
hlt
sub
clc
jmp
cmp
nop
dec
sbb
scas
push
lcall
cmp
sbb
adc
ret
mov
inc
jmp
test
mov
jp
popa
rorl
mov
scas
and
jp
xchg
sbb
inc
xchg
add
dec
lret
mov
mov
jae
test
pusha
leave
sarb
cs
mov
sti
les
pop
pushf
push
insl
sbb
jo
nop
and
and
stos
fwait
adc
lea
or
data16
inc
fsubl
jle
mov
dec
jp
push
aaa
dec
xchg
cwtl
or
clc
int
pop
cwtl
and
fldenv
sti
inc
mov
pop
push
pop
jle
mov
and
loop
hlt
inc
ficoml
nop
ja
mov
mov
rcrb
stc
insb
push
in
sub
cmp
sbb
test
mov
mov
or
mulb
ja
lea
or
imul
mov
stos
dec
movntq
out
ja
icebp
jmp
push
xor
in
or
aad
sub
dec
das
jno
shll
jno
in
mov
dec
add
clc
cwtl
nop
mov
mov
cmp
xor
in
sub
leave
mov
add
lock
mov
idivb
lret
shrl
and
loope
add
jne
out
loope
mov
in
mov
and
cmp
jne,pt
stos
pop
pop
xchg
fldcw
gs
cli
mov
mov
adc
xchg
sub
outsl
mov
push
jae
mov
dec
pop
adc
jno
mov
sub
cwtl
out
mov
lock
notb
lock
cmp
mov
push
je
push
xchg
jl
scas
fcomps
clc
xchg
imul
cmc
xchg
mov
jae
jb
mov
scas
jmp
lcall
in
and
enter
popa
stos
js
adc
dec
aaa
jne
std
cmp
repnz
jo
dec
mov
dec
mov
jl
js
scas
in
decb
mov
enter
test
stc
xor
out
fisttps
inc
dec
mov
xchg
out
jl
and
dec
iret
sahf
sbb
mov
notb
into
cmp
xchg
mov
int3
adc
mov
das
decb
pusha
rorb
and
aaa
in
mov
cmp
pop
lret
stos
es
sub
rorl
daa
mov
jb
jo
dec
jge
pop
imul
mov
fstl
lcall
lea
xor
stos
and
pop
nop
fnstenv
int
lds
adc
dec
and
hlt
insl
cmp
mov
jmp
add
sub
mov
pushf
fists
lret
callw
push
cwtl
les
sbb
sbb
xchg
mov
stos
push
inc
loop
je
xor
pop
pushf
stos
push
dec
mov
cmp
jno
jge
mov
clc
adc
test
mov
sub
xor
mov
jge
shl
mov
pop
adc
scas
pusha
mov
add
fidivl
or
xchg
sbb
ja
test
idivb
jno
push
orl
dec
xchg
icebp
test
loope
push
ss
mov
fiaddl
xorl
lock
mov
mov
mov
ret
fdivrl
andb
mov
pop
cmc
xchg
rclb
arpl
pop
jb
ds
filds
jl
add
inc
xchg
jle
sahf
lret
js
imul
and
nop
cmp
inc
xor
addr16
xor
std
sbb
sbb
pop
xor
jmp
cwtl
hlt
push
cmp
xor
aas
je
hlt
call
jle
mov
mov
ficompl
loop
shll
outsb
or
sub
enter
xor
push
aas
pop
loopne
pop
ds
mov
gs
lods
stc
lcall
in
jge
fistpl
out
out
xlat
xor
insb
rcr
jno
sub
dec
sahf
ret
dec
jge
cmpsl
inc
cwtl
adc
cmp
ds
cmp
jae
adc
into
lods
and
dec
out
mov
sub
xchg
fistpl
push
aad
xlat
clc
dec
push
add
pop
sahf
lods
inc
xchg
xchg
mov
leave
mov
cli
or
adc
loopne
mov
insl
xlat
adc
sub
mov
in
cltd
subl
out
or
xchg
stos
neg
mov
dec
or
lret
mov
fwait
mov
cmp
inc
sbb
ss
fs
or
repz
stos
xor
xlat
cld
dec
and
fcomip
xor
aaa
pusha
sub
ljmp
mov
sbb
fbld
into
mov
or
mov
jl
lahf
repz
push
int3
dec
mov
mov
sbb
push
imul
repnz
xchg
scas
pop
sbb
stos
mov
jns
loopne
lods
jae
inc
sbb
sub
je
sbb
add
stc
pop
fwait
xor
jmp
mov
dec
pop
in
add
jno
hlt
and
imul
clc
pop
das
jae
fwait
in
dec
sarl
clc
inc
ficoms
test
mov
call
pop
xchg
hlt
xor
jg
inc
mov
add
sahf
loope
jne
out
add
or
adc
adc
or
push
xor
sbb
es
in
xchg
lods
lcall
or
out
out
in
xchg
adc
mov
lods
sub
fldcw
pop
hlt
mov
push
lcall
xchg
pop
arpl
movsl
push
dec
inc
inc
or
dec
xor
mov
int
pushf
or
iret
mov
clc
loop
sbb
in
rclb
dec
imul
imul
dec
cmp
loope
push
rorl
add
cmp
jle
inc
jnp
out
pop
cwtl
xchg
shl
mov
sti
adc
sbbb
lods
in
imul
aam
mov
dec
popa
mov
movsb
subl
in
mov
mov
pop
jnp
xor
sub
popf
roll
xchg
fiaddl
out
shll
inc
sti
out
mov
aas
push
scas
lahf
inc
mov
mov
dec
cmpsb
cmp
jne
filds
notb
ss
cmpsl
jmp
fcmovnb
mov
push
jno
cmp
dec
sbb
xor
sub
inc
pop
mov
pop
stc
shl
rcrl
sarb
or
daa
add
out
int
stos
pop
sbbl
jo
mov
mov
push
jns
rcl
jbe
jno
mov
insb
push
test
loope
sti
cmc
sub
add
scas
xor
nop
call
inc
mov
notl
jmp
cmp
dec
sbb
adc
fsts
sar
jae
pop
inc
or
loopne
mov
xchg
jne
sub
dec
lahf
hlt
test
mull
mov
roll
out
cltd
and
add
shrl
push
scas
dec
leave
push
sub
mull
es
or
scas
lcall
pop
push
sbb
rcll
fistps
inc
adc
test
dec
ja
push
mov
and
dec
sbb
fsub
shrl
addl
adc
mov
stc
fadds
rcl
cmpsb
leave
idivb
fnsetpm(287
repnz
sbb
das
mov
cli
mov
pop
dec
add
idivl
cmc
fs
jne
xchg
mov
jecxz
scas
cmp
cmpsb
lret
and
lea
jge
lahf
dec
jae
xchg
cmc
fstps
lods
aad
in
repnz
aas
xor
xor
test
mov
cmp
push
adc
add
cmpsl
add
aas
inc
roll
out
int3
jg
cltd
or
mov
bound
repz
mov
stos
or
xor
jnp
xor
into
dec
adc
xchg
scas
sbb
or
pop
js
dec
in
jae
jge
inc
xor
das
push
cmp
push
cmc
push
movsl
sbb
clc
sub
insb
rcr
add
cmp
aad
cs
or
cmpsl
sbb
fsubl
mov
cmc
sti
loop
dec
jmp
movl
push
outsb
jo
push
filds
mov
int3
cmpsb
push
adc
fisttps
sub
into
je
scas
jbe
cmp
test
xchg
jb
ficomps
stos
cmp
mov
cmc
adc
fcmovnbe
xor
in
sbb
mov
cmc
sub
cmp
sbb
xchg
aad
mov
jg
enter
sub
lods
add
mov
outsl
xchg
xchg
inc
cmp
dec
std
int
jp
fistpll
pushf
cmp
mov
mov
jne
lea
dec
mov
mov
arpl
test
add
test
sbb
dec
and
movsl
mov
cmp
sub
mov
jns
xchg
mov
xchg
xchg
pop
inc
add
or
andl
push
dec
out
push
out
mov
out
mov
sub
in
pop
jge
xchg
cmp
leavew
ret
lds
pop
or
mov
orl
test
imul
rcr
xor
aad
xchg
es
pop
jmp
pop
ss
into
mov
sub
int3
sub
add
int3
inc
xorps
push
mov
movzwl
out
subb
push
pop
outsl
jmp
ss
mov
gs
mov
adc
inc
les
sub
shl
fdivrp
xlat
pop
xchg
mov
sar
jae
inc
mov
xor
pop
lods
cwtl
cmp
aad
cld
or
aas
or
sbbb
ljmp
and
enter
push
xor
pop
mov
inc
add
ret
insb
lock
and
ss
addw
and
pop
daa
mov
lock
mov
and
daa
test
fwait
mov
pop
stc
out
xchg
push
and
xor
xchg
lds
xchg
sbb
lcall
mov
pop
mov
xchg
mov
les
jns
mov
push
jbe
dec
mov
loop
sbb
pop
scas
loop
mov
stc
xchg
fwait
sub
lods
rclb
js
push
gs
add
inc
cmp
jmp
cmp
jl
push
stos
data16
jbe
loope
dec
test
out
mov
nop
or
fstl
add
bound
sahf
icebp
sub
sahf
in
scas
adc
ja
and
mov
or
push
push
test
add
sub
jle
pop
mov
lret
xchg
cs
pushf
imul
lods
jno
mov
lret
xchg
add
dec
inc
mov
dec
lods
or
pop
hlt
jmp
fstps
mov
add
idivl
sbb
fwait
je
mov
jbe
add
scas
hlt
stos
add
add
xchg
push
sub
push
outsl
jne
lock
sub
inc
call
int3
mov
cwtl
mov
ljmp
push
sub
movsbl
lahf
mov
pop
cmp
outsl
cmp
lcall
or
xchg
icebp
jecxz
jle
rcll
pop
mov
stc
sub
jnp
push
lods
inc
cmc
divl
and
pop
inc
insl
lods
rcrb
cmp
cmc
push
ljmp
incb
lcall
xchg
lods
clc
mov
sarb
or
inc
movsb
imul
sbb
push
sbb
dec
xor
add
mov
sbb
mov
xchg
xchg
cwtl
out
test
mov
gs
mull
andl
jl
imul
cmpsb
daa
mov
std
adcl
rcrb
pop
or
outsb
ss
movsb
das
mov
and
lahf
mov
pop
imull
ficoml
mov
lcall
lcall
mov
into
je
jnp
lods
sub
insl
dec
imul
pop
xchg
mov
ljmp
jle
loopne
pop
cmpsb
push
ret
fnstenv
je
mov
cli
out
mov
ja
sbb
and
and
sbb
cmp
inc
push
scas
clc
or
dec
jecxz
jbe
fimuls
push
aad
in
sbb
subl
pop
iret
addr16
xchg
lcall
sub
cs
imul
mov
leave
lea
das
mov
push
mov
ficoms
add
mov
xor
dec
add
lahf
fldcw
in
repz
insb
aas
idivl
cli
mov
adc
stos
dec
mov
ret
fisubl
std
ficomps
sub
mov
adc
jo
mov
jno
insl
inc
out
and
and
mov
dec
jbe
popa
mov
inc
ds
or
iret
xor
jl
jle
call
fwait
xor
hlt
xor
shl
out
or
sbb
ljmp
out
dec
cmc
popf
cli
aam
adc
shl
jp
inc
testl
in
idivl
test
incl
out
xchg
push
or
daa
shll
sub
nop
xchg
push
xlat
arpl
jle
xor
insl
movsl
xchg
mov
inc
xor
cli
xchg
push
scas
loope
pop
addr16
ds
adc
dec
or
mov
mov
cli
es
jae
lock
vhaddpd
xor
inc
test
daa
or
cmc
pop
negb
fnstcw
inc
int
or
divl
inc
bound
dec
or
rcrb
shlb
outsl
lds
mul
cmpsb
push
or
xchg
daa
xor
int3
dec
or
or
sbbb
xlat
loopne
jno
out
outsl
jns
es
test
addr16
enter
bnd
jb
movl
pop
adc
testl
jp
bswap
fsubs
insl
in
je
int3
pop
mov
addr16
test
push
mov
andb
test
loop
cltd
in
jae
aaa
jge
xchg
or
sarl
call
ret
xchg
pop
cmp
mov
mov
mov
cmc
movsb
stos
add
push
scas
sub
cwtl
inc
xor
xchg
movsl
push
mov
sub
xor
jb
push
jne
xchg
insl
test
fucomip
xchg
stos
inc
insl
pop
jp
ja
cwtl
aam
dec
adc
out
pop
xchg
test
mov
call
push
loope
popf
fdivl
sub
imulb
fsubrl
mov
and
mov
dec
mov
movsl
aaa
loopne
das
mov
les
and
pop
sub
call
xchg
daa
pop
add
enterw
in
xor
outsl
jae
xchg
jp
dec
pop
sbb
dec
push
adc
fisubrl
pop
scas
dec
mov
or
in
mov
mov
xor
ror
jp
imul
pop
arpl
call
ljmp
inc
or
push
fsubp
pop
outsl
movsl
fwait
pop
in
shlb
jne
mov
xor
xlat
xor
add
out
and
je
aaa
jg
fidivrl
pop
popa
jne
faddl
stos
push
mov
cmp
pop
mov
cmp
inc
int
mov
lret
icebp
bound
dec
add
push
sbb
mov
sbb
int
test
rclb
dec
test
nop
sti
dec
mov
addb
jl
adc
icebp
cmpsl
mov
inc
cmp
aas
bound
divl
in
fmul
icebp
imul
out
cwtl
bound
mov
mov
call
test
lahf
push
pop
xchg
daa
repnz
dec
dec
je
insb
xchg
clc
scas
and
mov
or
fnsave
js
push
jp,pt
add
mov
mov
repnz
sbb
pop
jg,pt
mov
repz
lods
insb
dec
or
lock
stc
clc
stc
dec
cmp
pop
and
mov
mov
fs
mov
lahf
sub
fnstenv
shrl
les
inc
movsl
mov
sbb
jae
add
jmp
jbe
push
imul
push
inc
push
xor
sub
sarl
fs
jge
test
inc
mov
pop
cmc
insl
mov
cmpb
mov
pop
enter
insw
mov
mov
cld
adc
jl
cmp
add
fsubs
mov
pop
mov
dec
jle
jbe
test
mov
sub
jno
fisttps
stc
pop
jle
sub
mov
mov
mov
inc
mov
ret
jl
mov
out
xor
aad
nop
shlb
das
mov
mov
push
adc
btr
rorl
stc
decb
mov
scas
shlb
add
movsb
dec
stc
dec
pop
imul
xor
call
loopne
xlat
lods
pop
dec
adc
sub
ljmp
jp
mov
mov
hlt
mov
sub
mov
out
push
mov
movsb
mov
incb
sbb
pop
jmp
ss
loopne
lcall
push
test
in
jge
les
inc
test
fldcw
popf
scas
add
and
inc
call
dec
test
fimull
test
pop
mov
mov
mov
loope
or
xchg
int
shr
pop
mov
shrb
pop
push
or
jne
out
or
jmp
or
inc
push
cmp
fucomi
lods
cmp
popf
test
enter
lea
mov
dec
jo
jnp
hlt
ret
into
adc
add
sbb
testb
in
fdivl
loopne
add
dec
adc
cld
inc
push
jo
push
inc
icebp
loop
shll
mov
mov
push
or
in
dec
pop
mov
ret
jbe
sbb
test
xchg
lods
ret
lret
in
fstl
xchg
dec
les
scas
ret
mov
sub
data16
adc
shr
nop
dec
sbb
jl
cmp
inc
imul
and
out
jecxz
mov
push
push
loopne
out
sbb
aas
out
imul
push
test
xchg
xlat
sub
mov
jmp
cmpsl
lcall
rorl
loopne
add
ja
xlat
in
xchg
xchg
dec
mov
lock
movb
fdiv
data16
xor
xchg
jae
pop
xchg
inc
and
aas
mov
into
push
jmp
pop
or
push
sbb
add
test
popa
imul
jge
mov
test
scas
xlat
mov
sbb
cli
test
pop
andb
sub
data16
adc
mov
sbb
fisubs
xlat
icebp
shll
pop
shrb
dec
loope
aad
popa
add
inc
xchg
pmaddwd
mov
mov
repz
inc
mov
test
inc
cmpsl
cmp
sti
push
js
dec
movsb
repnz
pusha
aam
sub
test
add
jae
loopne
adc
fxch
jle
push
pop
cld
scas
ss
mov
cmp
mov
rcll
mov
pop
movsl
std
scas
dec
insl
ret
ret
icebp
aad
outsb
aaa
int
xor
sub
and
adc
sub
jno
outsb
in
cmc
ljmp
lods
mov
jmp
popf
inc
add
cwtl
inc
jae
sahf
les
mov
lahf
or
xor
xor
or
lods
rcrb
mov
adc
cmp
and
clc
xchg
mov
sub
add
nop
pop
xorb
jecxz
mov
movsl
mov
in
test
lds
jae
or
adc
lahf
out
rcr
data16
lods
adc
das
cmp
inc
push
fisubl
or
add
sti
mov
shl
mov
mov
fdivl
leave
xor
jno
inc
js
xchg
mov
add
mov
and
lds
mov
dec
cld
in
js
pop
mov
dec
mov
inc
fadds
xchg
pop
lcall
in
and
addr16
xor
cmp
inc
xchg
sub
or
outsb
jbe
xchg
iret
js
push
push
sub
adc
rolb
pop
clc
movsb
pop
jno
das
push
dec
mov
jbe
test
sub
stos
rep
sbb
push
adc
push
mov
push
jle
dec
cmp
test
jne
mov
mov
mov
addl
lret
pop
inc
test
lods
ret
testb
insb
aas
or
mulps
fisttps
mov
inc
add
pop
sahf
ret
sub
hlt
out
or
mov
test
out
bound
movsb
outsl
nop
test
sub
jg
jle
dec
or
sub
adc
out
mov
or
fcoms
aad
push
add
pop
push
loopne
mov
lods
xor
lret
mov
mov
hlt
or
sub
fwait
sbb
xchg
dec
cmpsb
xchg
movsb
sahf
fmull
in
outsb
fimull
dec
or
in
jecxz
cmpsb
inc
cwtl
arpl
mov
lret
sbb
cmpsl
lods
jns
inc
fildl
cmp
mov
mov
jl
xchg
ret
mov
dec
jb
cmp
jmp
roll
test
xor
cwtl
or
mov
lcall
imul
xor
pop
fwait
gs
mov
je
je
mov
out
aad
dec
aaa
mov
lcall
iret
sub
aam
shr
pushf
mov
les
push
dec
sub
mov
jbe
cmc
cmp
or
notb
sbb
sbb
leave
fwait
mov
cltd
adc
int3
movl
mov
sbb
aaa
adc
mov
imul
pop
out
cs
sbb
pop
xor
or
sbb
and
add
cmp
mov
hlt
adc
not
orl
cwtl
adc
adc
aaa
test
dec
inc
ret
inc
mov
fidivs
pusha
lret
iret
cld
test
int3
cltd
sbb
adc
pushl
pusha
or
rcrl
sbbb
cld
insb
enter
pop
mov
fidivrl
loop
jle
push
mov
add
cmpsl
inc
add
push
shlb
mov
and
clc
in
add
and
mul
outsb
mov
int
mov
mov
sbb
sbb
daa
cltd
pop
and
sub
sbb
sbb
push
mov
push
mov
jp
adc
jmp
jg
inc
mov
shlb
jle
fwait
out
data16
pop
xor
adc
in
push
movsb
push
cmp
es
fcos
inc
pop
sbb
cli
orb
pushf
test
adc
sbb
xchg
sbb
stos
int3
or
aaa
cmp
out
xor
cmp
push
jmp
inc
dec
pop
adc
test
in
cld
nop
loop
and
xchg
dec
hlt
or
rorb
cli
xor
arpl
int
and
push
xchg
adc
movb
pop
jl
ret
xchg
mull
jecxz
sbbl
ja
jns
mov
test
push
data16
in
push
adc
loope
or
in
jb
push
mov
push
mov
roll
and
jno
inc
scas
inc
inc
scas
lds
push
popa
jl
faddl
daa
or
iret
mov
sub
loop
mov
repnz
inc
mov
fisubrs
leave
outsl
imul
inc
adc
addr16
dec
mov
lcall
loop
daa
mov
push
sbb
mov
and
loop
sti
jp
and
dec
and
sbb
xor
dec
shl
into
pop
cmp
or
dec
shlb
and
xchg
or
leave
cmp
int
jns
test
stos
mov
cmc
mov
cmp
sbb
pop
xchg
lret
out
mov
jg
repz
mov
mov
scas
out
sbb
pop
das
in
in
pop
fwait
outsb
mov
sub
loope
ljmp
rorb
dec
in
into
mov
mov
ret
test
cwtl
pop
and
lods
sbb
outsl
jns
rorb
dec
jno
shll
stos
adc
std
xchg
inc
out
les
cmp
or
cs
pop
sbb
sti
shrl
lods
mov
and
clc
or
mov
or
mov
mov
rcrb
push
cmpsl
jle
rcll
mov
cmp
pusha
std
das
push
push
adc
xchg
adc
add
dec
add
ds
cmpsl
in
cmp
data16
and
or
decb
xchg
lret
pop
or
lret
imul
pop
pop
mov
in
pushf
stos
notb
pop
pop
mov
cmc
into
or
sub
fdivrl
lods
js
repnz
jl
popf
adc
cmp
mov
call
cmp
cmpsb
jecxz
push
mov
mov
out
in
xlat
cmp
aad
jne
enter
push
iret
aad
fs
adc
and
or
cld
decb
cmp
ja
in
mov
inc
imul
lods
cmovl
loop
mov
pop
pushf
sub
dec
push
lds
sti
sbb
in
cmpsb
push
fxch
sbb
and
iret
std
iret
fs
flds
cmp
call
lret
stos
arpl
jae
scas
jp
lds
mov
lods
add
jno
out
dec
pop
mov
xchg
push
fdivr
fucomi
ret
push
lahf
out
add
daa
pop
imul
ds
lret
aad
aas
loop
sahf
fmull
cmp
and
jl
inc
leave
mov
cmpsl
jne
daa
je
sub
filds
aas
mov
and
adc
out
aas
sub
xchg
push
int
dec
movsb
fwait
pop
mov
das
jo
sub
sti
mov
and
repz
ja
xchg
push
faddl
pop
lock
in
pop
out
loopne
arpl
jo
cmc
or
cmp
arpl
loope
jle
in
cmp
cld
data16
scas
stc
push
jl
xor
push
sub
jbe
leave
ss
loope
repnz
or
pop
jnp
jno
and
mov
int3
and
dec
psubq
sbb
inc
mov
xchg
jnp
mov
push
cltd
sub
cmp
fidivs
jl
mov
pop
mov
jo
test
hlt
lret
pusha
shlb
mov
mov
sub
arpl
dec
test
sub
dec
inc
dec
stos
and
sbb
push
xchg
push
push
push
cltd
cmp
pop
fdivrs
pop
into
ret
js
scas
adc
imul
out
loopne,pn
mov
punpckldq
dec
fcomps
insl
cmp
or
out
and
lods
or
ja
rcrl
fabs
mov
mov
scas
or
lods
jg
mov
xchg
xchg
mov
lahf
addl
mov
mov
aam
incb
aaa
in
in
inc
dec
jae
fisubs
pop
adc
push
dec
hlt
out
lret
repz
or
pop
ss
pop
into
hlt
daa
push
mov
jp
mov
inc
je
adc
push
mov
test
dec
mov
testb
push
pop
pop
jmp
pop
lods
or
mov
insl
das
push
inc
mov
adc
mov
push
or
int3
test
dec
push
jbe
xchg
pop
mov
pop
cld
aam
push
jno
pop
iret
out
push
mov
xchg
mov
inc
pushf
sbbb
xor
mov
scas
ret
inc
iret
ficoms
shlb
and
add
cli
mov
test
sub
nop
sbb
xor
jl
pop
icebp
jno
mov
ljmp
inc
js
dec
push
out
dec
xchg
cwtl
fcoms
rcrl
adc
pop
or
repz
icebp
add
push
sti
push
dec
ret
sub
inc
or
mov
or
push
scas
fs
adc
jecxz
add
test
movsl
sahf
mov
mov
leave
cld
and
mov
leave
test
add
sbb
xor
out
xchg
jo
mov
inc
pop
xor
mov
sub
sub
call
adc
fldenv
cltd
mov
mov
xor
sbb
sub
jmp
mov
call
lret
popa
xchg
pop
jl
roll
pushf
das
mov
pop
push
xor
pop
fadds
mov
in
dec
filds
mov
in
std
cwtl
cmp
aaa
cs
int3
adc
inc
imul
lret
add
aam
out
fists
fsubs
repz
add
cltd
push
push
shlb
lods
jg
jle
cmp
push
jae
inc
xchg
push
mov
push
leave
jns
cmp
mov
pop
pop
pop
mov
push
stos
in
inc
adc
adc
stos
inc
ja
mov
cmc
xbegin
mov
pop
sbb
imul
or
mov
hlt
lods
mov
ds
jl
leave
push
xor
jns
sbb
xchg
pop
fcoms
stc
enter
movsl
bound
movsb
outsl
loope
sbb
aas
int3
fisttpl
es
std
ljmp
lea
aaa
std
sti
xchg
add
and
lahf
push
mov
ret
pushf
arpl
mov
jno
pusha
dec
lods
xchg
pop
inc
cmpl
cmp
repz
lock
je
pop
call
xor
in
stos
jp
testl
stos
xchg
js
sti
push
sbb
mov
cltd
adc
and
cmp
stos
imull
fldenv
push
mov
jns
xor
mov
fwait
cmovnp
enter
scas
clc
mov
out
out
into
ds
xchg
push
aam
push
je
stc
inc
out
push
les
adc
cmp
aas
in
sahf
decl
jmp
iretw
fisubrs
mov
aas
sti
push
cmpl
or
data16
push
outsl
insb
adc
aaa
mov
loop
push
jl
xor
dec
sub
cli
out
aaa
cld
push
dec
out
mov
lea
push
pop
lcall
fistl
inc
add
xchg
fwait
ret
fmul
dec
pushf
aas
push
sbb
cmpsb
add
push
into
into
fnsave
fcompl
sub
pop
jmp
dec
lods
push
mov
cld
xchg
adc
out
mov
nop
mov
outsb
pop
pop
mov
pushf
mov
cld
mov
mov
pop
out
sbb
pop
ret
pop
mov
adc
fsubrl
popa
sub
push
and
into
jnp
leave
cmovae
arpl
jae
xchg
or
inc
mov
shlb
push
dec
filds
imul
aad
pop
fldenv
mov
aam
sar
pop
addr16
dec
mov
daa
insl
jne
ja
add
jle
jp
jbe
sbb
jns
and
inc
and
aad
lock
lods
shlb
rorb
into
outsb
pop
shlb
lods
sub
sbb
pusha
fimuls
ret
aam
adc
mov
gs
mov
outsb
add
movsl
cmpsb
mov
mov
mov
hlt
sub
and
xchg
fwait
int3
iret
repnz
stos
and
mov
xchg
loopne
adc
mov
arpl
xor
xorb
jnp
aas
xor
loopne
add
push
pop
lock
or
or
dec
bound
sub
jp
inc
scas
test
jle
icebp
or
lods
into
jp
sbb
pop
add
insl
hlt
hlt
or
adc
lret
lock
cmp
sahf
cmpsl
jbe
aaa
iret
loopne
notl
or
fptan
mov
loop
push
divb
insl
cltd
fisubrs
xchg
in
fnstcw
pop
mov
jp
xchg
gs
mov
out
adcl
dec
jne
in
mov
jge
add
mov
push
jecxz
fldl
lahf
push
cmc
jb
fadd
movsl
mov
jg
test
sbbb
out
ss
dec
pop
push
fld
mov
out
jno
lock
imul
aaa
insb
popa
mov
mov
sub
mov
dec
in
mov
xlat
mov
sub
jbe
dec
mov
lea
xor
incb
dec
orb
xor
repnz
push
mov
cmp
pop
clc
push
pop
add
mov
aam
pop
jns
or
dec
int3
and
pusha
adc
xchg
push
pop
dec
jo
inc
shrl
sbb
inc
xchg
jg
test
ficoml
add
notl
add
jp
or
sti
arpl
ret
cmp
mov
outsl
sbb
add
out
dec
lock
pop
push
dec
out
mov
test
sub
cltd
jae
dec
pop
pushf
pop
xor
push
jp
addr16
decb
clc
cli
or
inc
repz
and
insb
mov
push
pop
lods
loope
int3
mov
jnp
enter
jl
imul
call
sub
cmp
sub
or
es
arpl
cmpsl
jbe
mov
pop
gs
lahf
cmpsb
xor
std
adc
leave
fists
into
sbb
mov
pop
xor
pop
xor
jp
icebp
repnz
pop
es
adc
inc
xor
stc
xchg
adc
or
dec
pushf
jle
stos
out
test
stos
lods
and
cmp
and
cs
inc
roll
push
add
dec
mov
add
mov
je
fcomp
mov
lods
les
jecxz
int
dec
push
cmp
mov
xchg
fldcw
fstpl
dec
loope
and
push
xchg
adc
xchg
idivb
xchg
nop
push
movsb
jb
aam
and
xchg
js
ret
cmpl
add
cli
les
mov
rclb
nop
outsl
push
fld
push
xorb
pop
cmpsl
scas
cs
push
outsb
inc
imul
inc
lods
fildl
in
fnstenv
cwtl
ljmp
loope
pop
dec
in
pop
pop
cltd
std
jge
out
or
pop
push
and
aas
lock
cmp
imul
popf
clc
push
pop
sbb
xor
cmp
cmp
mov
ds
ss
insb
les
xchg
pop
sub
les
arpl
push
mov
scas
fstl
mov
cmp
and
jge
int
add
lds
lea
and
mov
lods
rorb
jmp
pusha
cli
lahf
dec
shrb
dec
inc
fildl
andb
xchg
ret
and
ljmp
fbld
sub
aam
xor
test
add
loopne
sub
xchg
or
in
mov
mov
loop
xchg
inc
popa
aad
mov
insb
push
sub
gs
and
test
test
mov
test
rcr
mov
adc
loope
add
push
test
punpckhwd
jns
lds
je
imul
or
pop
push
out
popf
mov
scas
fiaddl
add
mov
sbb
mov
orb
aas
outsb
xchg
xchg
push
mov
rcrb
pop
in
sub
stos
xor
test
pop
mov
xlat
lret
mov
imul
enter
mov
test
and
xchg
sbb
mov
push
xor
push
sub
lds
xor
leave
movsl
push
push
adc
jle
jnp
loope
in
lret
mov
jns
cmpsb
rorb
add
cmp
insl
xchg
add
decl
rolb
xchg
arpl
insb
inc
jbe
andb
test
xor
or
and
js
adc
movsl
xorl
gs
test
mov
outsb
fs
cltd
mov
sar
pop
popf
adc
or
push
adc
out
fs
pop
lret
push
inc
fisubrl
mov
xor
push
push
pop
lds
inc
push
es
pmaxub
rcl
pop
int
adc
jp
cmpsl
in
popa
xor
dec
pusha
cmp
das
fwait
andl
int3
xlat
sbb
aaa
add
add
add
mov
je
mov
mov
les
test
out
aas
into
or
lods
pusha
pop
test
cmp
or
inc
adc
clc
cmp
mov
mov
cwtl
maskmovq
idivl
into
repnz
int3
pop
repz
add
xor
xchg
std
fidivl
ja
pop
les
pop
stc
mov
adc
insb
cmp
rcrl
cs
push
mov
stos
mov
loope
and
mov
fwait
mov
adc
daa
call
out
xchg
fdivr
inc
push
loope
mov
data16
or
pop
int3
loope
ret
cwtl
in
jecxz
sahf
mov
in
imul
lret
subb
cwtl
out
xchg
sub
jbe
out
xchg
movsl
mov
cltd
divl
test
xor
inc
jecxz
popa
add
push
push
lcall
stos
fs
inc
pushf
sbbl
mov
imul
add
xchg
xor
mov
inc
gs
push
pushf
pusha
or
push
lahf
enter
pop
jp
arpl
sub
cmp
sbb
sbb
fnstenv
inc
lods
adcb
mov
jl
shld
pop
and
test
test
fldl2e
gs
orl
sub
and
int
in
aam
xor
insl
dec
pop
enter
scas
mov
imul
movl
jns
repz
or
and
mov
cmpl
cwtl
sub
mov
xchg
out
sti
loop
or
dec
fisubs
xlat
cmc
ret
xor
xor
mov
cld
nop
cmp
sbb
xorl
mov
pop
mov
push
jne
hlt
loopne
mov
mov
jne
mov
xchg
inc
pop
and
addb
out
bts
dec
test
cmp
jge
test
outsb
sbbl
out
cmp
mov
mov
mov
xchg
leave
popf
int3
xchg
sbb
dec
imul
fwait
mov
enter
in
pop
pop
and
notb
push
mov
sub
lods
jbe
aaa
test
adc
out
shrb
js
mov
sbb
inc
sub
sbb
idivb
shrb
fldcw
xor
jecxz
cmc
in
insl
sbb
or
clc
je
mov
sahf
lret
mov
mov
sar
insb
xor
les
xor
sarl
mov
inc
ja
les
jno
fwait
add
negb
push
inc
inc
out
xchg
pop
lahf
sti
call
sub
mov
stos
incl
xor
aas
and
leave
adc
js
rcrl
mov
push
and
xchg
in
dec
dec
jle
ss
cmpl
cmp
ret
sarl
lea
xchg
jns
or
lret
out
push
push
mov
rclb
jae
ljmp
lret
test
dec
pop
test
cld
int3
sub
sbb
jbe
lret
popf
push
inc
cmc
cwtl
add
jmp
cmpl
mov
repz
jg
fucomp
add
inc
dec
frstor
cmp
xchg
leave
adc
mov
testb
data16
sub
lret
pop
sbb
nop
sub
scas
add
mov
ljmp
imul
mov
fbstp
stc
push
pop
inc
inc
mov
ret
test
and
sti
je
pop
mov
dec
jo
stc
or
jne
fdivl
loop
inc
cmpl
out
or
sbb
lods
enter
inc
inc
loop
fst
loop
push
mov
xor
clc
sti
jmp
aam
mov
xchg
icebp
shlb
pop
outsl
scas
pop
and
repnz
sbb
cld
cltd
pop
mov
dec
and
into
test
les
push
sbb
or
add
cmp
scas
push
nop
sub
cld
mov
mov
cmp
mov
pop
into
iret
xchg
pop
inc
push
sbb
dec
lahf
pop
orl
xchg
out
dec
cmp
flds
sbb
fisubrl
into
adc
jge
push
dec
cld
jecxz
jae
sbb
jge
and
out
pop
push
pop
push
int3
nop
mov
mov
pop
out
rclb
out
cmp
mov
pop
int3
cli
add
sub
xor
xor
xchg
arpl
adc
xchg
or
lcall
pop
push
repnz
loop
jle
popf
jae
hlt
leave
subl
imul
add
sbb
scas
sub
push
fnstsw
jmp
out
bound
inc
icebp
or
scas
cld
repz
inc
inc
ret
mov
testb
cmc
aam
add
inc
or
popf
out
shlb
dec
dec
jp
lods
sbb
mov
jl
stos
cmp
jp
ret
pop
mov
flds
sti
data16
push
dec
pushf
outsb
add
aas
dec
jb
sub
rorb
addb
vmovmskps
fs
pop
add
in
adc
mov
push
gs
hlt
gs
daa
movl
outsb
add
lds
sbb
loopne
mov
movsb
inc
push
sub
insl
mov
mov
and
testl
fwait
out
cwtl
xor
add
sub
lds
sub
cs
aad
stos
es
mov
cltd
xor
jp
aam
inc
imul
leave
mov
jmp
adc
out
insb
push
es
lods
popa
cmc
cli
xchg
out
xchg
icebp
inc
cltd
mov
sbb
arpl
xchg
clc
lds
mov
imul
nop
jb
sub
dec
lcall
int
shll
ss
rcr
sahf
push
hlt
xor
sub
jo
out
jnp
cmp
pushf
inc
fisubrl
das
pop
cwtl
outsb
inc
enter
adc
cmpsb
push
pop
adc
jae
sub
xor
lcall
mov
mov
push
rcrb
pop
cmp
fwait
xchg
fwait
icebp
pushf
pop
jns
dec
lods
lock
test
es
jg
inc
test
jb
push
mov
aas
fcompl
cmp
xchg
push
adc
outsl
and
add
sbb
inc
mov
shrb
mov
pop
repz
pop
mov
in
pop
imul
dec
and
xchg
stos
out
and
mov
cmp
jg
js
dec
icebp
cmp
daa
dec
sub
jns
cmp
rcl
mov
xchg
cs
aaa
rorl
jne
cmp
out
mov
adcl
pop
xchg
popa
xchg
into
mov
mov
inc
mov
jle
xor
hlt
push
sub
andb
dec
push
xchg
xor
mov
loope
pop
cld
dec
cmc
add
scas
cmp
xchg
cmp
test
das
outsb
jle
pop
sbb
lret
loope
popf
mov
mov
xchg
arpl
cmp
cmc
paddd
mov
rclb
inc
movsb
mov
adc
xchg
mov
sub
lock
dec
lock
and
testb
imul
jnp
ljmp
stos
stos
movsb
ror
pop
orb
push
add
mov
cmp
jnp
cmp
in
and
push
inc
cs
push
adc
mov
mov
mov
enter
jnp
std
ds
cmp
pop
ret
loopne
xchg
mov
xorl
ficomps
inc
xchg
cmp
out
repnz
push
mov
mov
leave
pop
loopne
mov
inc
push
fidivl
mull
icebp
xchg
pop
push
das
mov
and
jmp
je
bound
xor
mov
xlat
cld
mov
jb
cld
cmp
sbb
pop
mov
and
movzbl
adc
inc
mov
out
in
pusha
mov
lods
addr16
in
and
out
pusha
lea
ds
loope
test
call
cmp
repz
movsb
jle
xor
std
add
hlt
adcb
mov
in
mov
jle
inc
stos
idivb
mov
mov
xchg
cmp
lds
xchg
arpl
cltd
push
ljmp
aam
push
xor
push
adc
dec
adc
mov
dec
jns
jbe
out
pop
dec
das
pop
les
pop
daa
lds
adc
pop
lcall
pop
adc
lahf
ffreep
jnp
adcb
cmp
ss
inc
adc
cmpb
add
xchg
jo
test
mov
mov
add
inc
and
jae
ss
out
or
mov
add
sbb
add
push
mov
pushl
push
push
sbb
lret
add
cmp
mov
xor
sbb
lock
sub
jns
hlt
xchg
ljmp
in
ds
bound
dec
icebp
xchg
out
push
movsl
hlt
in
lock
lea
dec
dec
lods
push
inc
sbb
cld
push
mov
lret
xor
cmp
jbe
lahf
adc
mov
loope
scas
push
mov
xor
in
xor
fsubs
add
adc
sbb
xchg
xchg
xor
ficoml
pop
sti
jbe
xor
mov
fs
test
testb
lcall
or
push
std
jp
sub
xor
test
push
dec
cli
or
fdivs
lahf
dec
fisubs
test
inc
xchg
mov
jnp
sub
pushf
cmp
cmc
int
daa
cwtl
and
dec
mov
jne
outsl
xor
call
fisubl
dec
ds
movsl
cmpsb
xchg
aad
mov
and
adc
popa
sub
cli
sbb
inc
mov
cmp
sti
push
pop
sbb
mov
jge
testl
aam
xor
or
adc
adc
pop
lods
or
fadds
add
sub
cmovge
pop
push
sub
hlt
mov
insb
jp
outsb
stos
mov
cmp
lock
mov
adc
pop
xchg
loope
aad
sbb
ret
outsb
sbb
ljmp
cmc
push
in
sub
ja
mov
jb,pt
xchg
add
ds
mov
insl
mov
sub
movsl
dec
std
add
or
sbb
xor
or
xor
add
or
mov
popa
pop
mov
or
bound
push
pushf
push
cmp
cmpsl
adc
xchg
pop
rcrl
in
ret
mov
sti
cltd
hlt
adc
sbb
xor
and
pop
lret
lret
sti
push
sbb
mov
jmp
test
mov
insl
dec
mov
nop
mov
sub
pop
ja
adc
sub
push
add
xchg
clc
add
sbb
iret
xor
xlat
aad
test
pop
push
insb
sub
lock
imul
add
cmpsb
stos
out
fdivr
push
test
incb
fsubs
jb
in
dec
jecxz
ret
insl
jb
sbb
mov
addr16
sarb
inc
inc
test
xchg
sub
xchg
ds
mov
inc
mov
shlb
jl
roll
or
dec
jb
pop
es
mov
clc
or
pop
inc
dec
rorb
xchg
cmp
loopne
cmp
pop
shll
xchg
and
repz
ret
jge
imul
insb
lods
xor
imul
dec
out
add
or
sbb
pop
insl
hlt
ss
cmp
rorl
mov
cld
rcr
sub
jnp
outsb
pop
outsl
adc
in
add
pusha
or
add
pop
jp
sub
pop
push
mov
cmp
sub
jae
ss
loope
aad
lret
imul
inc
in
ds
dec
mov
pop
das
add
ret
xchg
and
enter
xchg
mov
mov
sbbb
pop
sub
sub
dec
test
xor
mov
fcomp
ret
flds
inc
test
aas
cltd
pushl
push
pusha
adc
add
push
mov
roll
add
mov
cmp
xchg
inc
jg
ss
je
jnp
daa
fcompl
adc
addr16
pop
jns
mov
mov
lds
xorl
aad
orb
sub
insl
xor
sub
adc
nop
fidivl
and
jecxz
inc
pop
and
cmp
int3
add
movsl
pop
outsl
cmp
ljmp
in
or
mov
cltd
sub
mov
mov
in
fsubrl
and
jle
xchg
je
mov
ljmp
pop
xchg
dec
mov
insb
scas
loopne
stos
pushf
sub
push
cwtl
inc
cmp
mov
int
inc
insb
paddsb
cmpsb
mov
adc
lea
loopne
nop
out
lret
outsb
xor
mov
cmp
sub
jb
cmpb
pushf
sbb
inc
push
mov
arpl
mov
aam
aaa
or
imull
cmp
jmp
pop
outsl
push
testb
adc
or
popf
or
sbb
jae
idivl
pop
out
or
mov
insl
and
dec
je
mov
rcll
out
ss
xor
jae
das
filds
jae
and
jb
cmp
jle
adcb
test
jo
aaa
cmp
cmp
mov
shrb
call
pop
mov
add
hlt
dec
xchg
fdivrl
sbb
ds
jge
stos
xchg
aaa
mov
xor
mov
nop
aad
frstor
imul
aad
mov
int
mov
sub
mov
and
scas
push
ss
ficoms
es
xor
scas
rcrl
dec
inc
mov
or
pop
push
cmpsb
mov
int3
call
push
inc
mov
mov
mov
xchg
xor
mov
mov
jecxz
test
leave
jns
dec
mov
xor
out
mov
fimull
or
shl
add
mov
adc
pop
loop
fldlg2
popf
fdivrl
or
inc
mov
jl
and
roll
daa
cwtl
mov
repnz
inc
mov
repnz
subl
fdiv
pop
push
mov
mov
pop
mov
and
mov
and
inc
sbb
adc
push
aas
test
stos
lods
loopne
rolb
xor
add
jmp
xchg
jo
jb
adc
insl
or
les
neg
cmp
cltd
mov
add
xchg
lret
js
lret
imull
add
stos
dec
push
mov
mov
or
or
cmpl
xor
xor
xchg
fisttps
ljmp
subl
mov
in
push
ss
shl
mov
cli
scas
lret
cmpsb
daa
sbb
push
dec
nop
aas
cltd
xchg
aam
dec
aas
pop
inc
mov
repz
inc
ljmp
push
ss
xor
xchg
pop
jne
push
xor
sub
jp
icebp
add
in
push
cs
sub
jge
fidivl
push
mov
insb
outsb
sti
bound
mov
mov
into
std
jb
lods
jg
cld
fnsave
mov
test
popa
jg
sbb
sbb
iret
adc
cmp
dec
mov
mov
cmc
mov
aam
stos
loop
ffreep
mov
jge
fs
and
aaa
cmp
inc
push
xchg
stos
stos
mov
adc
pop
mov
imul
inc
mov
andb
ds
jle
and
jne
cwtl
repz
repz
add
cld
lahf
cmp
mov
xchg
test
inc
fs
dec
ss
mov
outsl
subb
adc
popa
in
jle
adc
repnz
mov
add
popf
rorb
test
popa
imul
lea
cmp
jnp
lcall
adc
jb
mov
adc
rcll
in
cmp
xor
jg
add
push
lret
in
mov
fbld
sub
dec
xchg
mov
and
jae
xor
cmp
dec
mov
add
jge
xor
inc
dec
int3
jae
subl
lods
aad
sub
leave
fidivl
pop
push
inc
push
pop
pop
clc
mov
sbb
and
push
mov
stos
mov
and
pop
jno
inc
loopne
or
xchg
push
pop
popf
mov
fisubl
aaa
enter
cs
sbb
insl
fildll
mov
rorb
sub
xor
scas
mov
aam
mov
cmpsl
push
jo
rcll
clc
pop
repnz
into
mov
ret
mov
push
mov
jle
sbb
mov
push
push
xchg
stos
clc
xchg
ds
push
adc
inc
sub
fxam
insl
sub
js
insb
lret
stc
int
mov
imul
xchg
call
xchg
pop
sbb
jae
ja
or
mov
mov
cmp
leave
aam
outsl
stc
rol
loopne
or
sub
xor
mov
mov
xchg
push
mov
pushf
ja
out
xchg
cmp
sbb
enter
mov
ss
sbb
loope
fidivl
push
loopne
jbe
cmp
add
fmuls
jmp
enter
mov
sahf
xorb
xchg
inc
push
dec
ret
jle
movsb
dec
in
jg
mov
bound
inc
or
xlat
add
sub
push
sbb
test
out
xchg
in
sub
adc
and
jecxz
mov
adc
movb
in
test
insb
adcb
imul
xchg
test
pop
xchg
loope
mov
aaa
cmp
sub
mov
je
xchg
cmp
jmp
dec
inc
mov
in
cmp
je
jne
push
bound
imull
sti
xor
mov
cmp
cmp
cmpxchg
inc
stos
cwtl
in
fwait
pop
out
dec
in
and
pop
add
in
jmp
test
mov
dec
out
icebp
int
push
add
inc
and
scas
ret
mov
arpl
das
in
dec
outsb
imul
xor
popf
add
and
fdivrs
cld
cmpsb
insb
call
sub
insb
push
loopne
mov
add
adc
xchg
sbb
cmpsl
jo
ret
std
mov
push
into
lods
stos
lahf
js
dec
repz
xchg
out
mov
push
insl
call
enter
jns
scas
decl
adc
fsubrs
imul
or
daa
test
test
ficomps
loop
out
cmp
inc
push
mov
sub
jge
loop
sub
mov
mov
and
cli
testb
add
aaa
loope
jns
pop
fiadds
jg
jno
jno
inc
jecxz
push
inc
shr
fs
jmp
fcomps
popf
fldl
cmc
dec
movsb
sahf
cmp
enter
mov
push
xor
inc
in
sbb
push
dec
adc
mov
and
sbb
iret
stc
ljmp
pop
cmp
cmp
jo
mov
inc
popa
push
js
call
cmp
cmp
inc
push
outsb
sarl
inc
in
popf
test
in
mov
and
adc
sahf
cmp
scas
hlt
movsl
jo
movsb
cmpsb
jl
call
icebp
mov
inc
out
js
les
or
addr16
lea
pop
jno
pop
fwait
add
xchg
out
dec
stc
push
sbb
and
jl
sub
pop
sbb
lods
fistps
addl
jp
fcom
add
dec
pop
and
dec
sarl
movsb
pusha
std
cvttps2pi
imul
pop
outsb
int3
or
cmp
div
push
mov
adc
or
arpl
sar
gs
fs
and
call
xchg
dec
cltd
mov
cmp
add
std
or
xchg
xchg
or
add
je
pop
jns
mov
outsb
adc
fistps
popa
icebp
dec
or
outsb
fistps
rolb
jg
pop
push
cmpsb
dec
fwait
cmp
fs
fucomi
add
enter
pop
push
ret
and
inc
pop
and
jmp
push
mov
ror
jae
mov
push
hlt
and
jl
mov
loop
xor
mov
xchg
jg
movsl
lods
into
adc
mov
pop
add
jo
sub
mov
lods
scas
xchg
mov
mov
jne
aad
adc
add
outsl
arpl
gs
pop
fcmovb
nop
add
icebp
insb
fadds
pop
or
mov
movsb
inc
inc
dec
sub
adc
test
cli
push
movsl
adcl
call
cmpsl
lods
and
mov
dec
repnz
jmp
adc
lods
inc
jo
pop
jl
mov
outsb
inc
inc
cmpl
and
lcall
xchg
in
movsl
pushf
pop
jge
shl
stc
xor
sahf
lret
fsubrs
ret
lock
cmpl
repnz
sti
adc
loop
push
out
scas
push
ficompl
orps
sbb
out
mov
xchg
mov
int
rolb
test
bound
push
out
ret
xchg
ret
leave
cld
jnp
popa
sbb
adc
xchg
sbb
out
mov
cmp
addr16
cmp
stc
mov
inc
push
lds
inc
inc
mov
mov
es
fs
pop
pushf
or
mov
incb
adc
jae
mov
add
out
mov
loopew
popf
xor
mov
mov
and
mov
fsubr
ret
mov
jmp
xor
dec
or
daa
pop
fldt
inc
pop
insb
mov
dec
enter
dec
jl
sub
outsb
sbb
fwait
xchg
jno
nop
lock
mov
adc
jge
stos
pop
test
lea
pop
lea
xchg
mov
pop
cld
add
lret
pop
or
and
shrb
bound
add
inc
cmp
fnstenv
sub
cltd
adcb
cld
lds
mov
test
pop
add
dec
mov
call
dec
pop
push
inc
out
xchg
mov
repnz
push
insl
cmp
jbe
mov
popf
push
pop
sbb
pop
hlt
pop
lahf
sbb
cmc
pop
adc
and
cmovb
xor
roll
leave
lods
stc
je
push
mov
aam
mov
and
leave
mov
xor
jb
cmp
addr16
xor
enter
int3
adc
dec
pushf
or
pop
mov
mov
aam
or
enter
pop
mov
cmp
lret
jp
xor
loop
pop
lret
pop
mov
insb
stos
dec
pushf
adc
idivb
rorl
mov
cmp
loope
nop
xor
jne
mov
mov
add
mov
bound
aaa
lds
js
repz
into
flds
push
jecxz
fisttps
sub
bound
sbb
repz
inc
pop
je
push
jmp
push
imul
rorl
int
xor
and
lret
sbb
mov
pop
jne
sbbl
add
mov
mov
lock
fdivl
js
and
scas
jbe
scas
les
xchg
inc
jge
ljmp
inc
cmp
jle
icebp
jl
sbb
faddl
test
xchg
push
xor
sub
fwait
mov
jg
sysret
and
out
dec
xor
or
jo
cmp
dec
stos
jne
sar
sbbb
xlat
bnd
inc
loop
sbb
lods
pop
std
inc
adcb
imul
jp
mov
repz
inc
cli
xchg
sbb
mov
insl
test
mov
add
mov
in
jno
inc
rol
cmc
pop
dec
dec
push
xlat
flds
call
dec
pop
cli
pushf
jae
inc
adc
cmpb
movsb
sti
les
shlb
test
inc
iret
push
test
xor
mov
imul
imul
pop
test
dec
inc
das
jnp
ficomps
subl
rclb
or
pop
push
and
xchg
cli
sub
ss
and
nop
mov
ds
mov
sub
popf
inc
sarb
jo
in
sbb
push
lret
in
xchg
sarl
adc
cld
outsb
std
fwait
inc
xchg
xchg
mov
and
push
popa
lds
or
cmp
cwtl
cmp
sahf
ljmp
scas
cltd
add
sbb
std
scas
xchg
mov
mov
mov
inc
inc
push
sti
das
decl
jg
das
mov
jge
arpl
push
mov
xorb
adc
test
jp
and
xchg
jnp
lds
push
inc
call
in
adc
xchg
jb
into
idiv
cmp
dec
mov
ret
iret
sub
push
or
stos
mov
std
sti
xchg
pop
xor
xchg
lods
fistl
out
repz
pop
cwtl
arpl
fdivrs
and
or
push
rorl
push
pop
sahf
fs
jo
stos
iret
sub
xchg
popf
sbb
jg
into
push
inc
js
daa
test
lds
dec
push
pop
cs
and
cmpsb
sbb
xor
jmp
push
and
xorb
xchg
sbb
and
ror
js
outsl
or
adc
shl
push
sti
int3
lahf
push
rol
adc
lahf
movsl
scas
rclb
xchg
pop
jp
mov
out
popa
in
xchg
or
pushf
sahf
add
icebp
lods
xchg
call
movsb
inc
icebp
or
adc
push
add
movsb
fs
pop
adc
outsb
jecxz
adc
inc
andb
mov
dec
daa
or
jo
xor
ret
jns
fcompl
xchg
daa
lahf
pop
js
aam
aaa
jns
add
inc
fwait
dec
pop
dec
push
testl
pop
xchg
inc
sbbl
and
subb
cmpsb
cld
enter
outsl
cmpsl
and
sub
adc
shrl
jp
sbb
pop
nop
ret
imul
dec
je
lds
mov
cmc
ret
pop
or
inc
fildll
pop
mov
int
xchg
loopne
dec
shl
mov
sub
jg
pop
adc
or
push
or
mov
push
call
insb
dec
mov
xchg
leave
lods
jp
xchg
pop
mov
lods
outsb
dec
mov
xchg
test
dec
test
insl
daa
jae
mov
add
mov
stos
mov
gs
inc
jne
popa
or
mov
mov
shlb
outsb
sahf
pusha
aam
outsl
addr16
ret
xorb
mov
push
sti
adc
xchg
jb
inc
iret
das
aam
in
xchg
pop
push
xchg
cmp
xchg
stos
or
rcl
pop
iret
add
jmp
aad
sub
pushf
inc
cmpsl
lret
jne
std
xor
add
add
pop
repnz
pop
sub
add
daa
lods
data16
cmp
inc
arpl
movsl
in
jno
mov
pop
insb
add
ljmp
or
test
mov
dec
push
push
ss
push
out
repz
nop
inc
lahf
cli
fstps
fcoml
push
pop
dec
cmp
add
mov
and
mov
cld
scas
insb
mov
lret
sbb
cmpsb
out
add
dec
mov
rolb
iret
aad
lds
inc
push
adc
pop
imul
daa
push
outsl
mov
divl
mov
cmpl
ljmp
jno
adc
mov
lds
outsl
movsb
mov
xchg
fsubp
push
mov
outsb
shrb
jae
dec
mov
or
bound
sbb
inc
pushf
sub
les
insl
cmpsl
scas
pusha
popf
jg
jb
or
pusha
push
fisttpl
or
inc
fwait
jge
adc
xor
mov
out
shrl
inc
hlt
jcxz
sbbl
iret
jb
jg
cmc
es
sbb
test
pop
js
fnstsw
pop
addr16
in
xchg
lret
add
fldcw
push
inc
push
mov
mov
sub
inc
rcrl
cs
push
outsl
pop
insl
repz
sbb
sub
iret
mov
mov
aam
push
cmc
xchg
std
jmp
incb
push
dec
mov
or
fbld
aas
cmc
jl
mov
sahf
xor
pushf
repz
mov
mov
test
push
add
lret
adc
push
jg
fmul
sub
repz
xlat
icebp
sub
fldl
sarl
out
clc
lahf
sbb
std
mov
into
movsb
jge
orb
inc
adc
xlat
or
xor
arpl
sub
xor
pushf
pop
js
add
xor
out
lock
inc
cli
shl
add
enter
pop
out
dec
cmp
xor
push
pop
bnd
imul
int
repnz
cmp
das
mov
xchg
mov
cli
xchg
pop
stos
idivl
mov
ds
test
mov
test
repz
dec
fdivr
repz
sub
popa
popf
out
mov
mov
imul
xor
scas
and
and
loope
mov
jns
in
and
int3
call
cmc
out
arpl
pop
int3
sub
cmp
dec
clc
aad
jno
jne
out
jno
bound
add
dec
clc
xchg
rcrl
loope
xchg
push
pop
pop
nop
jnp
xchg
movsl
aaa
cmp
and
stc
pushf
jmp
pop
sub
shrl
nop
adc
xor
ds
adc
les
or
ds
cmc
inc
jge
pop
mov
ret
xchg
and
js
xchg
sbb
pop
dec
push
aaa
sti
outsl
sub
repz
jae
inc
push
mov
cmp
mov
mov
int
test
lods
out
inc
adc
adc
dec
repnz
ret
jecxz
lds
loop
jb
push
andb
mov
dec
int
push
xor
pop
jns
gs
mov
int
xchg
fcompl
or
lahf
push
inc
xchg
adc
inc
stc
pop
cmpsl
mov
mov
addb
inc
pop
aam
iret
sbb
ss
adc
test
xchg
sbb
and
pop
lea
jnp
sbb
or
and
lods
mov
test
int
cld
mov
jns
outsl
test
mov
push
xchg
push
mov
and
and
jge
mov
mov
pop
sbb
adc
mov
cmpsb
add
movsl
or
ja
jmp
add
aad
mov
pop
mov
ss
jns
ds
daa
push
dec
sub
mov
mov
scas
int
pop
jo
int3
cmp
movzbl
int3
pop
test
push
cmp
and
call
shll
outsb
lock
ds
shr
dec
mov
inc
gs
or
or
repnz
sbb
ds
pop
jl
stos
imul
cmc
mov
mov
inc
mov
pop
insl
lods
pop
cmp
mov
in
subb
lret
xorb
jmp
es
int
outsb
dec
pop
clc
pushf
popf
ja
in
xchg
popa
in
andb
mov
fmuls
and
sub
idivb
repnz
adc
push
jae
rolb
ret
repz
fsub
leave
push
push
xchg
push
or
pop
push
add
xlat
scas
or
mov
ret
push
cmpb
push
add
jnp
imul
pushf
xlat
lds
pop
mov
xchg
mov
adc
in
jp
shlb
sbb
mov
and
xor
clc
lahf
pop
dec
pop
inc
sbb
cwtl
pop
out
out
or
test
shrb
mov
cmp
lahf
jno
cmpb
pusha
mov
pop
ret
and
mov
push
sahf
or
or
xor
imul
jae
and
or
mov
outsl
mov
hlt
shlb
mov
outsl
insl
jecxz
lods
repnz
cmp
fnstenv
sbb
gs
fstps
cmp
push
cmc
or
sbbl
sarl
pop
add
mov
adc
lret
xchg
xlat
lods
mov
jl
add
mov
pop
xor
jge
orl
push
inc
decl
popf
lock
arpl
test
stos
jae
lea
into
bound
mov
dec
popa
dec
mov
jmp
enter
inc
fnstsw
hlt
jne
mov
lock
stc
shll
add
retw
pop
fildll
cltd
jnp
cmp
in
and
xchg
es
pop
out
movsb
mov
cli
cmc
loopne
jg
jg
pushf
mov
hlt
jecxz
adc
notb
mov
xlat
jle
inc
jmp
and
fistpll
sbb
push
pop
test
fstl
loop
ss
loope
mov
sbb
inc
cmp
dec
pop
addl
or
js
js
aad
in
mov
pop
jecxz
dec
in
xchg
mov
jo
and
or
pop
sub
inc
inc
pop
out
je
or
inc
movsl
stos
clc
mov
mov
jge
adc
mov
loopne
insl
jmp
pop
and
mov
push
mov
test
sti
clc
xchg
or
imul
pushf
lods
aaa
inc
add
dec
cmp
aad
scas
inc
sub
popf
cmp
fnstenv
sar
adc
sub
pop
add
dec
jns
cld
mov
out
ds
mov
loope
mov
or
xor
shlb
sbb
push
mov
xchg
aas
pop
jge
inc
sbb
hlt
rol
xor
mov
or
orl
sahf
clc
outsl
popl
in
inc
gs
in
xlat
and
fs
or
xchg
xor
push
inc
pop
es
loop
bound
int
mov
bnd
mov
repnz
or
dec
arpl
les
or
mov
push
xchg
cwtl
and
add
dec
out
mov
cmpsl
insl
mov
inc
jbe
arpl
jns
aad
mov
scas
jb
mov
lea
out
add
jae
xor
push
test
push
mov
insb
in
mov
cmpsl
aaa
mov
fcmovnu
xchg
or
jmp
pop
sub
rolb
or
jmp
scas
mov
sub
mov
loop
mov
stos
jae
loop
sub
lret
add
test
ss
mov
nop
push
dec
sub
dec
add
stos
fnstcw
scas
xchg
mov
lret
int
in
xchg
ss
add
mov
aaa
imul
les
push
js
and
std
mov
repz
jae
push
test
push
xor
test
addr16
dec
roll
push
sbbb
inc
mov
ret
arpl
fwait
and
divl
in
mov
dec
test
or
dec
mov
adc
mov
cmp
adc
lock
inc
cld
repnz
sbb
inc
cmp
push
pop
sti
inc
les
mov
cmpl
pop
mov
or
cmc
or
xor
cmp
in
rolb
cmp
cmp
mov
mov
mov
dec
xchg
jecxz
mov
or
faddl
outsb
iret
adc
jg
test
fisubl
sbb
xlat
jb
aam
leave
stos
lods
lahf
adc
adc
jecxz,pt
mov
push
arpl
shr
jg
push
xchg
push
adc
jge
cld
fldcw
inc
or
push
jp
addr16
aaa
pop
pop
xor
fcmovne
inc
sbb
xor
stos
push
mov
mov
stos
popf
stos
popa
push
imul
jne
loopne
or
jb
sbb
loop
fcomi
cmp
rolb
es
in
jmp
mov
pop
repnz
and
adc
sbb
ljmp
bound
xor
fdivs
mov
xor
mov
sub
xchg
jecxz
cltd
scas
jae
cli
or
je
adc
dec
push
dec
vrcpss
aad
imulb
pop
xlat
add
test
mov
mov
fistpl
mov
or
leave
dec
xchg
movsb
lods
cmp
lods
outsl
pop
stos
scas
mov
imul
mov
and
outsb
insb
mov
test
gs
mov
pop
push
cmp
pusha
mov
xchg
clc
hlt
jb
std
xor
cmpsl
in
daa
dec
cmpsb
jno
inc
fldl
mov
pop
xchg
addr16
adc
adc
stos
pop
pop
dec
shrl
enter
outsl
call
xchg
rol
test
jmp
test
cmp
jo
test
jnp
cli
jecxz
je
xor
xor
inc
rorb
mov
repz
ret
or
pusha
fsubl
add
lods
call
xor
mov
movsb
sarl
outsl
xchg
and
push
adc
aad
push
out
add
das
fldcw
adc
idivl
add
add
push
add
fiadds
call
incl
sbb
ficomps
lret
mov
push
inc
adc
ret
inc
mov
xor
sbb
sub
ret
adc
cld
daa
xchg
mov
stos
lcall
mov
jp
sahf
push
cmp
mov
mov
scas
fistps
adc
jle
xchg
mov
sub
rcrl
jecxz
sub
or
xchg
mov
xchg
mov
cmp
push
iret
jmp
and
icebp
add
in
mov
inc
push
outsb
mov
fcmove
add
lds
movzbl
push
cmp
push
imull
dec
in
xchg
xchg
cli
sahf
jl
rcl
add
fsubr
subl
fnstcw
sub
mov
ss
in
cmpl
mov
loope
mov
jecxz
out
fwait
mov
in
jne
insb
lcall
jg
jl
xchg
cmp
inc
dec
int3
iret
mov
outsb
lea
out
imull
cmc
or
in
jae
add
jne
aad
cli
shlb
in
xchg
int3
or
fld
jmp
xchg
adc
gs
mov
iret
loopne
mov
mov
in
je
jbe
push
imul
dec
mov
mov
outsb
mov
push
js
or
cmp
js
mov
push
aaa
call
mov
bound
pop
lock
adc
inc
xchg
and
out
rolb
pop
int3
cwtl
fisttpl
clc
or
pushf
mov
push
inc
enter
test
nop
cltd
or
adc
adcb
aad
aam
mov
push
es
rorl
sub
test
icebp
mov
sbb
xor
mov
pop
fyl2x
xchg
cmpsl
mov
push
pop
fstps
stos
jnp
and
rorl
jmp
stos
mov
mov
ljmp
add
sub
dec
xor
aaa
xlat
sbb
imul
pop
mov
es
repz
or
xor
cmc
out
jbe
std
fiaddl
xchg
pop
call
into
lds
movsb
imul
out
adc
popa
xchg
pop
stc
adc
pusha
add
lahf
jno
jne
pop
rcll
es
imul
xor
pop
imul
lahf
add
outsb
push
leave
cs
rcrl
push
xchg
loope
cmpl
rcl
dec
es
mov
ret
mov
xchg
adcl
mov
push
cmp
push
dec
dec
push
fcoml
sahf
ficomps
push
pop
notl
icebp
pop
xchg
or
imul
clc
pop
mov
sub
inc
enter
fidivrs
xorb
inc
xlat
in
in
fisubs
pop
jecxz
fs
adc
jnp
insb
jl
jbe
dec
jno
xchg
nop
mov
pop
xchg
dec
dec
and
cs
pusha
xor
push
push
cmp
push
xchg
pop
sub
enter
scas
mov
stc
shl
call
sub
mov
fwait
sarl
jecxz
jne
inc
mov
aas
test
daa
sbb
sub
fstps
int3
popf
dec
dec
mov
jge
add
fisubrs
mov
fs
ljmp
add
adc
mov
mov
push
lahf
adc
insb
xchg
arpl
test
sti
pop
xlat
rol
loope
xchg
arpl
out
xlat
sbb
adc
cwtl
insl
out
pop
pop
std
lret
jmp
mov
loope
push
xchg
cmpb
or
loopne
and
mov
in
cmp
xchg
sbb
jmp
mov
popl
out
jl
js
aam
or
stos
xor
push
cmp
xorb
pop
jbe
lods
leave
cmpsl
xchg
adc
mov
adc
jmp
pop
add
push
stos
sbb
imul
dec
push
jnp
pop
xor
imul
js
cmp
sbb
rcr
xchg
jns
xlat
mov
push
gs
pop
sbb
xchg
mov
inc
inc
sub
xor
pop
lahf
bound
push
jge
xchg
jecxz
adc
push
iret
stos
mov
mov
and
pop
inc
mov
add
push
or
mov
repz
lods
rclb
or
cwtl
sub
mov
nop
sbb
aad
arpl
enter
mov
enter
insl
in
jl
xorl
les
jnp
cmp
aam
outsl
inc
shr
jge
mov
out
in
jle
imul
jp
lret
test
in
loop
and
stos
jb
mov
jmp
dec
fadds
inc
xchg
ljmp
sbb
insl
and
adc
xchg
sub
pop
cmpsl
daa
mov
fbld
inc
loop
out
cmpsl
mov
cmp
cmc
sub
xor
push
fdivr
cmp
push
jb
stos
pop
cmpsl
arpl
aaa
xchg
xor
mov
dec
test
adc
pop
fwait
cmp
sbb
dec
or
psrlw
aad
call
pop
outsb
imul
jno
push
or
inc
popa
idiv
pop
leave
or
js
popf
or
push
insb
les
popf
adc
imul
fisttpl
lahf
add
and
insl
repz
stc
out
out
xchg
mov
mov
lods
pop
cmp
mov
dec
stc
cmp
and
push
xchg
mov
inc
shr
nop
loop
lods
xchg
sbb
ret
sub
sbb
push
fcomp
movd
pop
or
fsubl
xchg
shll
lret
cmpsb
sub
sbb
ljmp
div
pusha
pop
aad
xchg
mov
mov
js
js
dec
repnz
loopne
hlt
cmpsb
pop
and
fisttpll
sahf
mov
inc
jne
fisubrs
es
cld
jle
jecxz
inc
fldt
shrb
shld
test
sti
lods
aas
add
daa
aam
jg
dec
es
mov
lods
add
cs
int3
data16
inc
ljmp
fsub
lock
addr16
inc
jg
mov
mov
mov
out
js
mov
mov
ret
mov
xor
gs
lods
dec
pushf
or
out
adc
jbe
ficompl
test
fsts
dec
cmpb
add
sub
jae
gs
jle
pop
fldenv
insb
lahf
pop
jo
aam
cmp
fwait
out
lret
fs
inc
jb
or
cwtl
inc
mov
ret
popa
push
pop
push
push
or
mov
pop
rcr
rcrb
inc
shl
mov
mov
cwtl
loope
cmp
cwtl
xchg
mov
xchg
lahf
int
or
cld
jge
mov
idiv
push
scas
pop
jbe
enter
je
repnz
jbe
sbb
out
and
xor
call
or
inc
push
movsl
sbb
add
shl
and
mov
adcl
or
stos
xor
sub
notb
jae
idivl
xor
or
or
mov
inc
rorl
test
ret
jno
aad
mov
fnstenv
xor
cmp
mov
aad
ja
sahf
pop
adc
mov
sbb
hlt
xor
stos
jmp
ljmp
arpl
out
adc
fnstsw
fwait
jle
cmp
adc
cmpb
js
pop
xor
scas
gs
pop
int3
insl
int
repz
movsl
stc
xchg
pop
inc
push
jnp
jne
je
mov
adc
or
inc
adc
push
fwait
lret
push
jge
push
dec
mov
cmp
or
dec
sub
xor
mov
jns
xchg
incl
cmp
gs
andl
push
sbb
scas
inc
xchg
shlb
hlt
push
scas
mov
addb
dec
mov
dec
aaa
pushf
aas
xchg
ljmp
sahf
movsb
cld
mov
sahf
ds
ficoms
cld
xchg
mov
fsubl
mov
xor
aas
cmp
mov
mov
mov
cmp
xor
mov
sbb
in
xchg
outsb
jg
pushf
xchg
imul
je
stos
dec
mov
int
lea
or
fcmovnbe
jne
jp
pop
xlat
je
sahf
movsb
mov
adc
sbb
mov
or
inc
mov
dec
scas
push
inc
aas
ss
cltd
aam
mov
mov
pop
ret
jl
rcll
rclb
adc
inc
adc
orl
inc
and
xor
outsb
and
pop
push
jnp
mov
cs
fcompl
mov
sbb
lret
iret
in
mov
imul
cli
mov
add
dec
xor
imul
cmp
mov
stc
test
loope
adc
out
in
mov
lods
in
jp
push
pushf
popa
lret
les
pop
cmp
decb
punpcklbw
movl
bound
xchg
repnz
mov
call
lahf
mov
xor
stc
enter
icebp
mov
adc
inc
das
sbb
jns
sti
test
xor
add
push
xor
mov
test
mov
lock
mov
mov
popf
mov
iret
pop
push
mov
and
ja
dec
and
jne
mov
mov
in
push
in
aas
sbb
mov
push
lea
push
fstl
add
inc
mov
ret
push
call
addr16
flds
xlat
inc
pop
mov
inc
out
mov
nop
adc
into
xchg
jge
mov
xor
or
xchg
pushf
xchg
fisttpl
inc
jl
xlat
es
and
in
lahf
test
add
or
test
add
loope
jl
cmpsb
rcl
cmp
cmp
jmp
filds
push
imul
iret
lret
popa
xchg
fwait
pop
test
pop
mov
and
mov
pop
lock
dec
into
lea
mov
mov
push
mov
adcl
shll
lret
jl
cwtl
icebp
mov
xlat
orb
push
jbe
rcrl
xchg
jne
mov
shll
lods
aam
out
ret
je
mov
in
jae
das
push
ja
jno
mov
inc
inc
loope
inc
cmp
in
daa
js
and
fisubs
arpl
es
scas
mov
sbb
scas
xchg
adc
adc
add
pusha
cmp
mov
xlat
les
mov
sbb
outsb
lret
lret
push
test
shrb
adc
out
cld
pop
leave
les
pop
lret
gs
int
jae
sbb
rcrb
loop
les
mov
icebp
outsl
and
icebp
notb
sub
sub
xchg
and
aaa
xchg
sub
pop
inc
add
out
into
cmp
test
sbb
fiaddl
push
jno
fucomi
xlat
addr16
adc
fs
dec
rcrb
mov
cs
clc
inc
jns
xor
pop
cmc
push
js
push
cld
stos
popf
lock
pushf
mov
jne
or
mov
cs
jp
or
stc
popf
or
and
cli
push
jmp
into
les
jecxz
cmp
repz
leave
sahf
aas
adc
mov
jnp
cwtl
adc
repnz
scas
add
jnp
ss
mov
xor
jo
mov
mov
add
jne
sub
dec
outsb
sahf
loope
cmp
jne
cltd
jbe
leave
and
adc
jg
lea
ret
in
enter
lock
arpl
out
test
push
outsl
ja
push
jle
loopne
cmp
test
test
jg
pushf
cmp
mov
push
inc
push
push
dec
sbb
flds
mov
xor
iret
lods
fildl
lcall
lods
fs
xchg
scas
fdivs
dec
movsb
scas
mov
ss
push
push
lret
inc
push
xchg
insb
sbb
sbb
cli
int
push
pop
mov
adcl
lahf
daa
jae
push
cmp
sbb
mov
popa
pop
int
pop
repnz
mov
stos
cmp
push
xor
mov
rolb
or
jge
pop
sbb
or
mov
sub
out
clc
cmpsb
pop
fmul
mov
imul
movsl
loop
sahf
cmp
jns
scas
pop
flds
xchg
xchg
sub
sub
gs
mov
ss
mov
mov
push
pop
or
loope
shr
push
inc
jmp
insb
xor
loopne
xchg
pop
pop
clc
jno
dec
out
js
jmp
sti
push
jge
fs
push
sbb
leave
sub
loopne
fistl
or
repnz
movsl
sysexit
pop
sar
movsb
pushf
fsts
in
mov
mov
xor
cs
out
xlat
outsb
fdivr
jno
out
scas
dec
add
test
popa
mov
mov
inc
sahf
fimull
incl
stos
lahf
test
mov
push
mov
sub
dec
pop
inc
test
in
mov
cwtl
mov
push
sub
pop
int3
aad
mov
push
push
js
loope
out
rol
adc
mov
popf
inc
repz
les
sti
ds
add
cltd
test
aaa
mov
jbe
dec
mov
in
out
cmp
lods
dec
cmpsl
rcrb
lods
or
sub
inc
inc
lods
dec
xchg
jo
into
mov
mov
jmp
mov
ret
scas
enter
mov
outsb
in
sub
sbb
pop
jns
jne
and
iret
mov
or
mov
mov
cmp
incb
test
adc
push
xchg
mov
add
imull
jl
in
jmp
mov
xlat
test
and
js
jns
jecxz
mov
pop
jg
dec
jno
ret
insb
aad
les
cwtl
or
xor
les
lds
in
inc
dec
leave
test
adcb
int
xor
mov
cmp
mov
mov
cmp
inc
jae
or
bound
pop
push
lret
dec
mov
rclb
pop
or
stc
call
jg
xchg
pop
jnp
add
push
sbb
scas
mov
pop
xchg
adc
inc
enter
dec
push
and
test
out
jno
imul
cmp
mov
add
je
push
mov
add
adc
sbb
jno
dec
jmp
or
es
nop
imul
adc
mov
test
lock
popf
or
mov
xchg
mov
jmp
add
popa
jne
sub
sahf
jno
xlat
mov
sbb
into
mov
pop
inc
jg
and
arpl
cmp
aas
mov
jb
test
rcrb
xchg
mov
xor
jp
add
mov
outsl
lcall
pop
push
je
repz
div
rorl
aam
lret
lret
sbb
pop
ret
test
pop
fwait
mov
aaa
rorl
dec
jae
mov
sub
inc
loopne
adc
or
inc
pcmpgtd
xchg
add
imul
mov
mov
sub
xchg
outsb
push
pushf
hlt
sub
rcrb
cli
dec
test
inc
xchg
cli
xchg
test
xor
pop
mov
dec
out
stc
push
jns
cmc
mov
dec
push
mov
lahf
sbb
xor
mov
shlb
mov
loopne
mov
or
scas
push
test
cmp
cmp
adc
mov
test
xor
outsl
and
push
jecxz
mov
dec
test
and
clc
mov
aaa
and
jb
xor
xchg
push
call
push
mov
push
mov
cmp
and
jo
sbb
loop
in
imul
pop
dec
std
dec
lret
mov
jb
insl
enter
lcall
jge
stos
xchg
sbb
add
into
add
and
add
dec
in
fldl
xor
repnz
in
jp
sbb
movq
jp
sbb
shl
xor
sbb
jno
adc
movsb
push
int
push
mov
adc
and
fdivrl
push
or
mov
mull
in
jl
test
jbe
fndisi(8087
pop
aas
jb
sbb
xor
fiadds
xchg
inc
ja
push
inc
lods
mov
test
test
pop
sbb
xchg
and
inc
ljmp
iret
pop
arpl
fbld
bound
pusha
pushl
mov
clc
aad
push
inc
enter
bound
lea
push
or
rcl
sub
and
adc
cmpsl
iret
or
cmc
xorl
pop
jbe
jle
jb
jno
lods
mov
cmp
lret
data16
fsubrs
out
aam
shlb
xchg
fldenv
mov
cmc
icebp
xchg
imul
sub
scas
test
push
les
out
fs
mov
xlat
idiv
xchg
hlt
mov
add
cltd
ds
repz
or
int
addr16
xor
pop
repnz
out
mov
or
sub
in
push
push
xchg
cwtl
mov
inc
aaa
mov
pusha
aaa
loop
shll
push
cmp
imul
popf
push
or
mov
repnz
sub
orl
out
adc
xor
dec
xchg
movsb
mov
mov
pop
insb
shrl
inc
xchg
fiaddl
mov
bound
notb
mov
sbb
jp
fisubrl
stos
inc
xchg
int
sub
incl
imul
lods
repz
add
sub
repnz
cmp
rcrb
mov
movsb
mov
popf
jl
imul
fwait
lahf
pushfw
divb
jns
push
cmp
add
lret
test
jg
in
shll
dec
subb
cmp
fisttpll
add
subl
mov
sbb
popa
ret
out
les
cmp
or
cmp
jge
mov
dec
cltd
aam
sbb
mov
mov
out
pop
push
xlat
dec
cmpsl
mov
les
adc
push
popa
jmp
test
shlb
and
clc
push
test
sub
shll
shrl
cmp
mov
xor
ficompl
lret
ds
negl
insb
iret
bound
inc
js
negb
int3
pop
mov
outsb
mov
cwtl
xlat
jbe
jmp
movsl
lret
sbb
pusha
loop
shll
cltd
or
pop
jb
out
popf
fs
leave
jns
mov
and
dec
mov
mov
pop
je
dec
fs
or
bound
jmp
pop
lea
push
dec
dec
sub
mull
inc
xlat
inc
and
movlps
aad
rcll
loope
sbb
or
int
or
dec
mov
add
xchg
mov
jle
lods
cmp
jp
inc
sbb
push
jae
inc
mov
dec
leave
outsl
leave
icebp
and
cmp
xor
notb
filds
cmc
jae
test
fdivl
push
aam
mov
mov
movsl
mov
xlat
out
and
and
cmp
add
push
mov
outsl
xchg
lahf
addr16
or
fdivl
lahf
into
leave
cmp
je
inc
add
pop
aaa
adc
jl
push
sbb
repz
das
in
push
cmc
loop
lock
pop
jo
sbb
popf
xor
pop
lret
lcall
cmp
and
enter
pop
je
testb
push
fstps
lea
dec
and
dec
lea
incl
mov
mov
data16
push
sub
frstor
dec
lock
sbb
mov
roll
std
add
cli
je
data16
or
jecxz
lock
jnp
or
jo
out
icebp
and
out
dec
lods
lret
push
fistpl
push
xor
cmpb
popa
xchg
push
adc
and
xor
pop
mov
push
jb
dec
sub
mov
jecxz
lahf
fcoml
adcl
mov
in
or
testl
sub
out
cs
jl
xchg
pop
jecxz
nop
xchg
cld
xchg
mov
insl
cmpsl
arpl
push
pop
or
add
leave
xchg
rorb
sub
mov
imul
sub
iret
jge
fisubrs
fsubr
notb
cmp
mov
cld
sub
adc
pop
mov
adc
push
mov
sub
push
push
dec
mov
arpl
cmp
xchg
dec
out
mov
jl
jp
imul
push
or
push
data16
mov
adc
push
and
shrl
jl
jecxz
or
mov
data16
jo
ret
ja
dec
aad
daa
jl
mov
xchg
clc
and
andl
shll
sbbl
cmp
lods
aas
cs
cmp
jmp
cltd
sbb
or
enter
leave
mov
push
pop
es
push
aad
sub
inc
sub
jp
xchg
outsb
add
fildl
mov
pop
xor
sub
mov
mov
mov
and
jg
xchg
mov
sbb
subl
push
mov
addl
jb
mov
in
add
je
adc
push
sub
aas
sbb
xchg
dec
cmc
data16
sub
ret
push
push
cmp
cmc
lea
jne
subb
into
in
arpl
dec
movsl
jno
push
rcrl
ret
mov
pop
add
jl
test
sbb
js
inc
pusha
insb
pop
mov
aad
cs
push
adc
sbb
cltd
sub
movsl
cmp
stc
icebp
inc
xchg
outsb
and
lock
dec
fs
aaa
mov
or
xor
ss
sub
int
add
scas
adc
pop
xchg
icebp
mov
adc
inc
cwtl
mov
lahf
lods
push
jns
mov
lods
jne
pusha
leave
out
and
sbb
push
and
push
sar
mov
and
fcompl
mov
xchg
js
enter
in
adc
sbb
sarb
cmpsb
jb
push
cmp
xchg
or
jb
out
popf
clc
dec
mov
adc
je
xlat
outsl
mov
push
cmp
leave
imul
sbb
push
fwait
in
sub
inc
shlb
loope
xor
and
leave
add
movsl
data16
xchg
aam
subl
mov
scas
sbb
jbe
rolb
or
xchg
pop
jnp
fistl
push
xchg
dec
lret
pop
inc
cmpsb
cmp
notl
cmp
imul
jecxz
aaa
xor
mov
jo
mov
cmpl
or
imul
lret
lahf
push
fs
xabort
jb
add
loopne
movsl
iret
in
inc
cmpsb
mov
cmpsl
fs
or
lock
xchg
loopne
cmc
enter
inc
loopne
or
push
sub
lea
xchg
repnz
sbb
aam
xor
cmp
daa
aad
xor
mov
sbb
testl
scas
or
in
std
ret
inc
addr16
enter
push
and
and
pop
test
lret
scas
adc
test
fisttps
sbb
ds
inc
mov
push
cltd
sbb
push
add
repnz
lods
decl
insl
xchg
mov
je
call
aad
push
or
pushf
in
jb
nop
mov
or
add
fbld
outsl
and
adc
xchg
mov
lock
fnstcw
sub
fsubr
dec
rolb
ss
sub
fisttpll
inc
and
in
mov
loop
dec
fisttpll
call
aad
shlb
push
lock
inc
jecxz
out
push
xor
and
mov
jnp
inc
mov
jns
or
inc
sbb
push
cmc
xchg
cmp
mov
test
add
rcrl
test
incl
loopne
push
out
cmp
cmpl
xchg
mov
ss
and
iret
or
lods
cmp
adc
mov
xchg
call
clc
pop
icebp
les
xlat
mov
push
push
and
fisubl
push
xchg
mov
lcall
push
cmp
movsb
movsb
sbbl
ds
scas
mov
sub
mov
mov
ss
cmpl
sbb
fldl
jl
jo
jle
cmp
or
outsl
in
push
inc
lret
jne
cmp
ret
iret
out
inc
push
pop
push
dec
xchg
stos
jno
fiadds
or
fnsave
or
dec
mov
out
sub
gs
pop
stos
mov
fwait
aas
mov
dec
jbe
add
popf
jae
jmp
or
xchg
mov
pop
in
mov
in
pop
xlat
cld
jge
fidivrs
pmuludq
mov
pop
mov
dec
pop
jnp
das
dec
in
nop
sti
in
sbb
mov
ret
test
bound
dec
jbe
push
jmp
fldcw
dec
mov
xor
rcll
icebp
push
insb
in
push
inc
adc
lcall
cltd
ljmp
xor
mov
xchg
mov
popf
or
lods
enter
inc
imul
inc
jge
mov
aaa
push
push
xor
insl
vpshufhw
mov
iret
repnz
adc
call
inc
mov
in
lret
insl
das
test
mov
push
and
rclb
push
pop
rclw
jae
mov
inc
out
add
jno
pop
inc
adc
dec
arpl
push
icebp
movsl
faddp
dec
mov
push
daa
aad
xor
mov
rol
push
sbb
rcrb
dec
imul
xchg
xor
push
test
pop
shrl
ss
cmp
call
push
dec
xor
and
andl
outsb
shlb
das
scas
push
xor
ljmp
mov
dec
in
pop
test
push
pushf
ja
bound
push
sbb
rcrb
movsl
add
adc
ljmp
fstps
mov
pop
ljmp
mov
jg
iret
xchg
sbb
mov
jne
push
popa
xor
mov
dec
lea
ficoml
mov
sbb
cmp
push
jmp
mov
hlt
sbb
dec
xchg
xchg
je
rolb
pop
loop
cwtl
mov
pop
cmpsl
xchg
cs
into
addl
jg
shr
dec
sahf
xchg
mov
insl
out
inc
out
stos
push
out
xchg
pop
jg
in
sub
push
mov
or
and
or
jp
sub
jp
add
jnp
mov
shlb
mov
xchg
stos
and
cltd
adcb
push
add
mov
mov
sub
inc
inc
mov
dec
shl
or
aam
push
push
jo
xor
pop
aam
jne
fcomps
outsb
ds
sub
aas
addb
sbb
push
jle
adc
and
push
sti
add
add
mov
mov
push
mov
test
jns
pop
call
xlat
jns
pop
xlat
mov
jle
lds
xor
mov
xchg
xor
jnp
not
or
pop
push
popf
aad
push
fbstp
inc
lcall
inc
push
outsl
mov
cmpb
jle
addr16
pusha
in
mov
dec
push
add
mov
jmp
push
scas
mov
lret
xor
dec
ret
ss
lret
cmpsb
mov
adc
insb
fwait
mov
addr16
loop
popf
pop
mov
dec
jne
cli
clc
mov
mov
dec
or
in
push
imul
out
pop
cmc
mov
inc
xchg
movsl
jmp
inc
fsubrs
fldt
es
test
mov
int
pop
cmp
fld
int3
push
enter
or
xchg
adc
xchg
mull
scas
ret
test
pop
cs
and
sti
jle
push
cmp
inc
inc
out
ret
xor
cwtl
test
jb
shld
dec
scas
adc
pop
add
xchg
std
mov
fdivl
and
lods
test
mov
xor
scas
negl
or
in
pop
ljmp
mov
add
or
mov
inc
ja
test
sarl
mov
or
and
mov
mov
aad
leave
lods
add
mov
mov
out
xchg
mov
add
xor
test
out
gs
or
ret
or
std
mov
or
xor
pop
push
mov
or
mov
xchg
and
repnz
mov
rol
xchg
lret
inc
jne
xchg
mov
inc
jmp
and
push
jmp
jae
fsubrl
roll
pushf
jecxz
fmulp
cmp
xchg
and
dec
cs
mulb
dec
jnp
sbb
loope
push
push
mov
xchg
pop
outsb
mov
push
pop
and
aas
push
icebp
pop
lret
movb
push
inc
shrb
cmpb
xchg
mov
into
jl
scas
push
push
popf
addl
xor
test
outsl
iret
je
push
push
and
iret
or
mov
xlat
shr
sub
lret
add
pop
leave
xchg
mov
and
js
and
jo
movsb
xchg
cmp
push
cmpsb
jns
ficoms
stos
pushf
and
js
in
add
nop
inc
out
push
jg
sbb
outsl
orb
inc
xor
xchg
jmp
jl
data16
arpl
xchg
dec
loopne
les
push
xor
mov
pop
pop
mov
mov
mov
sbb
inc
sbb
divl
mov
xchg
loop
sbb
inc
push
insb
add
and
int3
in
popf
mov
es
mov
fisubl
or
rorl
push
clc
fs
mov
cmp
push
addr16
fiadds
and
les
into
xchg
je
dec
xor
je
dec
dec
fadds
fmuls
imul
scas
out
xchg
jns
or
fnsave
push
fimull
and
mov
sbb
in
addb
cmp
ss
pop
jl
mov
xchg
leave
cmp
ret
je
and
jle
dec
xchg
test
pop
xchg
mov
gs
pop
pop
push
mov
hlt
dec
push
mov
test
mov
pop
or
jg
xchg
mov
mov
jge
mov
and
mov
xor
jl
dec
insb
mov
imul
aas
loope
jns
outsl
data16
fcomi
jbe
fbld
orl
cmp
push
sarl
sub
movhlps
imul
data16
daa
dec
cmp
jl
jmp
xchg
pop
sub
jg
pop
int3
xor
out
roll
add
stc
and
jmp
aad
push
loopne
scas
scas
into
push
les
movsb
scas
jge
loope
aaa
fldl
or
xchg
fsubr
nop
sbb
pop
push
xlat
pop
loop
adc
sarl
nop
dec
clc
stos
mov
nop
out
outsl
xor
mov
mov
inc
xor
jne
and
idivl
inc
sbb
sub
sbb
out
xor
pop
xchg
xor
popf
ret
cltd
sub
mov
adc
adc
aam
xchg
loope
daa
cmpsl
push
mov
mov
test
test
dec
fisubl
inc
mov
imul
mov
mov
mov
jb
clc
dec
and
out
mov
imul
and
or
dec
inc
fldt
out
adc
dec
jbe
stc
loope
sbb
inc
ss
xor
es
test
cmp
dec
add
mov
sub
mov
sti
xor
rcl
notb
dec
jle
mov
aad
xor
mov
jnp
sub
dec
imul
pop
sti
push
shlb
cmp
and
jge
mov
mov
enter
xor
push
inc
icebp
loop
pop
sbb
jbe
add
leave
mov
or
jno
push
push
cmp
data16
repnz
xchg
mov
sub
nop
pushf
dec
subl
enter
idivb
jbe
cli
pop
enter
push
mov
mov
sbb
mov
cwtl
movsb
mov
shl
stc
push
movsl
fldt
xchg
and
fldl
popf
inc
mov
sbb
into
push
in
arpl
lods
fwait
push
je
mov
mov
test
push
push
jp
je
scas
sub
loop
pop
orl
and
cmp
push
cmp
jno
push
cld
cmp
scas
cmp
sub
dec
push
push
mov
cwtl
testl
fidivs
jbe
ret
push
jp
jmp
in
mov
mov
cli
push
bound
mov
lret
or
test
push
mul
add
push
ret
mov
lods
add
cltd
das
shlb
leave
and
or
stc
jnp
pop
inc
pop
mov
cmpsl
add
outsl
in
inc
lds
mov
mov
or
xchg
or
add
lods
xor
fwait
xlat
dec
repnz
or
rcrb
sbb
sub
jle
sub
or
mov
arpl
push
fs
pop
mov
lahf
mov
es
pushf
push
cmp
xor
rol
test
cmp
cmp
and
sbb
xchg
out
push
adc
inc
pusha
dec
test
test
xchg
xchg
or
adc
cmp
mov
cmp
dec
daa
shlb
adc
loop
push
sbb
or
imul
add
sbb
repz
out
add
imul
mov
dec
fistl
loopne
dec
or
sub
mov
jbe
mov
sar
fidivrl
pop
sub
push
pusha
mov
push
leave
sbb
xor
xchg
fstpt
in
push
in
scas
mov
cs
pop
mov
lret
pop
outsl
or
lcall
pop
sahf
push
andps
inc
adc
dec
adcb
and
sbb
jg
pop
int
pusha
cltd
mov
pusha
lock
negl
dec
inc
cs
push
and
sti
scas
lret
call
and
mov
push
mov
jns
xchg
sbb
or
sahf
jp
frstor
jmp
cwtl
lahf
clc
cmp
mov
rcrl
int
test
cltd
mov
and
pusha
mov
es
mov
mov
dec
xchg
push
dec
bound
adc
sbb
je
push
sub
cmp
inc
and
loop
add
push
aas
or
xchg
inc
adc
or
jbe
sti
fidivl
mov
test
iret
jns
sub
stos
pop
lret
xchg
dec
and
imul
inc
in
lcall
clc
xchg
inc
pop
sahf
aad
mov
push
stos
dec
scas
repz
cmp
xor
add
mov
sbb
mulb
aaa
insl
cmp
pusha
in
stos
or
jmp
ljmp
mov
push
and
cmp
stos
outsl
mov
loop
pop
cs
mov
cmp
inc
xor
jmp
ret
jbe
out
xchg
xlat
dec
inc
push
adc
pop
jecxz
cmp
inc
outsb
xor
int
mov
push
insl
out
xchg
push
dec
sub
pop
mov
mov
imul
cli
jb
test
cmp
negb
mov
or
iret
mov
inc
call
mov
inc
push
cs
mov
or
sbb
cltd
cwtl
mov
mov
jecxz
sbb
sbb
fstps
lcall
ja
dec
dec
add
xor
movsb
loopne
sbb
mov
push
dec
xchg
cmp
adc
xor
pop
mov
push
out
sarb
lcall
imul
ljmp
into
or
dec
sbb
lcall
hlt
lret
js
scas
mov
jp
shl
bound
fdivs
jo
mov
sar
and
popf
or
adc
jmp
jb
pop
and
rolb
stc
push
inc
movsb
dec
mov
sbb
jns
mov
mov
lds
dec
in
shll
notb
in
sbbb
mov
setns
fwait
push
les
mulb
lret
je
xchg
shrl
push
icebp
les
stos
mov
mov
inc
addb
inc
pushaw
loop
aad
rorl
lds
sbb
mov
push
xchg
push
loopne
ja
push
dec
pushf
inc
insl
mov
lahf
adc
pushf
and
fidivrs
or
pop
cld
add
cmp
pop
cwtl
call
decb
fbstp
insl
insb
mov
xor
je
inc
mov
cmp
sbb
call
cmp
dec
out
addr16
inc
adc
or
push
push
aam
rcl
dec
shlb
xor
dec
pushf
pop
jb
lods
adc
mov
fadds
xchg
test
iret
js
ds
or
outsl
add
sbb
or
subl
stc
inc
sbb
aas
ja
fisubs
xor
xor
mov
dec
jp
adc
pop
mov
pushf
or
push
es
mov
add
inc
add
xorb
pop
push
cmpsb
add
xchg
xchg
add
and
aas
lds
or
fimuls
mov
bound
dec
loope
or
sub
push
cmpl
mov
cmp
aad
outsl
jb
or
pusha
inc
inc
repz
mov
call
sahf
xor
xor
test
push
aaa
scas
mov
jnp
fst
sub
add
arpl
and
push
adc
mov
stos
adc
and
xchg
lahf
lret
repnz
jp
and
rcrl
scas
lret
pop
daa
pusha
mov
mov
mov
add
shrb
cld
out
add
jb
adc
pop
pop
repz
and
rorl
mov
fistpl
sbb
js
inc
pop
sbb
adc
test
lods
sbb
push
cmpl
adc
mov
cmpsb
mov
int3
into
sbb
das
outsb
cmp
cmp
vmaxpd
pop
push
ljmp
popf
add
jmp
mov
iret
jecxz
pop
roll
in
mov
pop
mov
pop
imul
xchg
ret
xchg
add
jnp
int3
add
movsb
jp
and
add
in
outsl
sbb
stos
xchg
out
xchg
call
fnstenv
enter
mov
lea
mov
fwait
nop
lods
dec
push
sti
xchg
aam
nopl
add
push
push
lret
fcoms
mov
test
ror
cli
inc
daa
pop
mov
dec
in
xchg
push
mov
shrl
dec
jae
or
and
imul
jmp
int
and
mov
or
push
mov
inc
fs
nop
dec
cmpsb
mov
inc
sub
neg
dec
jmp
loop
stos
mov
scas
leave
lret
jge
fimull
cmpsb
insb
push
dec
mov
fs
pop
mulb
clc
push
and
aam
xor
sbb
mov
jbe
std
pop
shrb
insl
cltd
xor
adc
into
std
adc
jae
out
push
testb
mov
jmp
jmp
jae
mov
scas
cmc
subb
in
loope
sub
sub
scas
dec
inc
fists
in
cld
or
inc
pop
leave
mov
int3
scas
sbb
xlat
xor
in
loop
adc
stc
adc
inc
jno
pop
adc
ret
push
pop
pop
pop
ja
push
in
cltd
mov
xchg
arpl
pop
dec
mov
dec
dec
loop
or
ret
fcomps
shll
iret
decl
pop
adc
pop
cmp
sti
adc
sbb
xchg
mov
rclb
repz
stc
xchg
cmpsb
clc
add
mov
ja
push
mov
stc
jle
pop
xchg
xchg
fnstcw
and
or
arpl
dec
dec
xor
push
insb
push
mov
push
or
xchg
sbb
dec
stc
in
leave
or
and
out
push
mov
movsb
ficompl
gs
mov
xor
fisubl
mov
shr
xor
mov
xchg
js
mov
xchg
mov
sbb
call
cmp
fwait
sbb
out
retw
xchg
mov
inc
scas
xchg
inc
je
dec
cmp
xorb
inc
dec
push
xlat
xchg
sbb
out
test
repnz
inc
imul
mov
and
mov
jno
cmp
addr16
pop
out
adc
out
int
leave
ret
into
dec
vpsrlw
cmp
push
out
xor
or
stos
mov
sub
cmc
pop
dec
jp
enter
ret
and
fdiv
mov
mov
cmpsb
sub
or
jl
sbb
sbb
sub
and
ljmp
sub
push
rclb
imul
pop
xor
test
imul
and
jmp
out
ret
and
push
out
fistpll
lea
adc
notl
lds
mov
sahf
mov
sbb
mov
and
lahf
fdivs
ss
sbb
or
subl
xor
mov
out
icebp
mov
adc
xor
push
xchg
daa
rolb
neg
mov
insb
jge
aad
xchg
mov
pop
addr16
ja
cli
cmp
sbb
mov
imul
lahf
test
cli
ds
xlat
insl
insl
std
sti
test
xlat
fcomi
inc
aas
es
lcall
in
add
aam
repz
mov
xor
mov
test
leave
pop
in
push
cmp
dec
les
xor
cmpsb
nop
mov
call
sub
mov
mov
in
push
dec
fisttpll
bnd
jmp
or
iret
int3
mov
lods
fcmovnbe
test
jb
hlt
arpl
sub
adc
je
push
or
jle
jnp
inc
call
roll
ljmp
fwait
inc
jecxz
js
mov
sub
inc
jae
mov
or
lea
add
sbb
xchg
inc
xchg
jbe
call
or
dec
mov
mov
sbb
loopne
xor
inc
addr16
xchg
addr16
push
rcrl
mov
sahf
in
test
mov
mov
push
push
dec
push
out
aas
sbb
loop
testl
or
xchg
push
fldt
scas
leave
mov
out
pop
ljmp
mov
mov
pop
arpl
mov
cwtl
rcrl
daa
jge
imul
add
test
rcrb
xor
ds
pusha
out
int
sbb
das
cltd
cmp
dec
fyl2xp1
nop
in
out
xor
pop
jecxz
push
inc
adc
imul
adc
sahf
mov
add
les
notl
fs
lret
pop
add
pop
stos
xchg
jmp
fdivrl
or
cltd
inc
lds
ja
pop
or
lea
adc
sbb
jg
addb
loopne
aam
sbbb
xor
adcl
or
mov
fldl
mov
pop
adc
fs
pop
jecxz
popa
dec
ja
and
or
fs
jp
mov
sub
add
pop
sahf
mov
adc
adc
loopne
cmp
jp
add
lret
lods
and
jmp
adc
popa
jcxz
cltd
push
pop
sbb
sbb
sub
outsl
jbe
ss
leave
popf
and
dec
push
mov
dec
sub
ficoms
or
jo
jle
stos
out
out
push
inc
and
in
mov
outsb
insb
ja
data16
inc
and
jnp
adcb
adc
dec
xchg
push
mov
in
fwait
jno
call
lock
outsb
inc
imul
push
scas
push
loopne
mov
shr
or
mov
popf
dec
ret
aaa
xchg
jecxz
fisubl
mov
fwait
mov
lods
mov
jmp
push
mov
shll
add
outsl
add
pop
rolb
loope
cmpsl
stos
pop
aad
push
outsb
out
mov
mov
imul
pop
insl
sub
lea
incl
push
mov
dec
adc
in
outsb
pop
andb
sti
test
pop
dec
mov
pop
and
push
cmpl
cli
mov
into
pop
insl
mov
aas
movsl
shlb
jno
loopne
jg
fiadds
ret
mov
pop
bswap
dec
sbb
repz
pop
test
gs
xor
into
sbb
repz
es
fisubl
inc
in
inc
in
data16
pop
sub
cmc
fwait
lea
or
sub
inc
push
loopne
jb
jbe
jg
or
dec
xchg
pop
mov
test
add
gs
add
inc
push
or
sub
inc
cmc
pop
xor
sbb
push
mov
fadd
cmpsl
test
push
inc
flds
dec
stos
adc
das
adc
xchg
pusha
stc
push
add
mov
cmpsb
push
adc
dec
and
ret
pop
and
ss
repz
mov
or
sub
dec
mov
add
xorl
icebp
movsl
sub
xlat
hlt
loope
xchg
scas
ror
and
inc
mov
pop
movsl
pop
es
bound
mov
cmpsb
shrb
cmp
dec
or
andb
inc
and
xchg
push
and
and
xor
aam
jge
nop
jmp
fimuls
cmpsl
sbb
iret
stc
jle
xchg
sub
mov
pop
stos
ficoml
icebp
sti
xor
cli
test
mov
jp
lcall
cwtl
sub
cmpb
adc
dec
or
mov
mov
jmp
roll
iret
sbbb
fmuls
stos
data16
call
mov
sbb
cmpsl
sahf
inc
sub
sub
insl
test
add
in
js
add
movsl
pop
scas
outsb
ret
cmp
dec
push
test
dec
pop
sub
sbbb
test
test
adc
xchg
clc
adc
loope
add
in
push
jl
xchg
scas
jbe
in
xor
sbb
out
test
stos
dec
mov
scas
test
insl
xchg
lods
sub
ss
jp
sbb
ss
add
call
or
sub
inc
aam
mov
daa
add
seto
mov
out
loop
sti
mov
popf
mov
fs
repz
gs
push
inc
adc
dec
mulb
sbb
scas
sub
out
push
stos
es
and
in
mov
loop
xor
out
int
repz
out
aaa
ljmp
inc
and
push
rol
das
cmp
out
scas
jl
mov
push
in
mov
movsl
inc
add
sub
icebp
sub
gs
imul
add
icebp
mov
pop
push
lds
push
inc
shlb
pusha
sar
test
inc
pushf
mov
test
push
stos
loop
adc
sbb
mov
mov
or
jbe
pusha
ds
test
rdtsc
xor
dec
ror
fstpl
sub
scas
je
add
shlb
mov
outsb
rcr
mov
jge
jb
ljmp
hlt
dec
xor
sahf
jno
jns
lea
je
outsb
fcmovnu
insb
in
fwait
xchg
xchg
inc
push
andb
dec
mulb
jne
data16
inc
js
mov
jecxz
mov
ljmp
jecxz
mov
pop
cmp
or
jo
adc
popa
inc
lea
in
push
xchg
or
cwtl
stos
push
mov
jno
sbb
pop
mov
adc
inc
fnstsw
scas
insb
add
or
mov
ret
or
xor
bound
inc
add
dec
daa
jecxz
sti
and
cli
addr16
inc
add
insl
lret
jp
repnz
jge
mov
out
sbb
jp
mov
cld
aam
ret
mov
popf
mov
jb
test
aad
psllq
cmpsb
stos
arpl
or
ljmp
jp
daa
daa
xchg
or
adc
int
jge
rclb
imul
cmc
ja
adc
cmp
mov
mov
and
das
aad
push
testl
jecxz
popa
subb
cmc
inc
jns
mov
mov
fidivs
outsb
cmpsb
add
pop
jno
sub
int
jns
jbe
or
mov
imul
push
mov
stos
movsl
cmp
insb
std
xlat
jne
and
int3
repz
lock
fisttps
inc
enter
sbb
push
fs
aam
fnstcw
out
popf
jo
dec
sar
xor
pushf
xchg
mulb
cmpsl
mov
jle
and
leave
sbb
inc
sbb
xchg
popa
xor
sbb
xchg
ret
mov
fistpl
shlb
test
negl
rcr
inc
gs
xchg
push
push
pop
sbb
push
xchg
mov
inc
inc
subb
mov
int
sbb
mov
or
add
inc
xchg
subb
xchg
data16
movsb
push
mov
in
adc
adc
loop
jno
mov
lea
ja
lret
aaa
sub
mov
jecxz
and
stos
inc
inc
pop
or
inc
mov
movsb
pop
jecxz
ret
into
mov
xchg
xchg
dec
movq
scas
cmp
les
dec
jg
mov
mov
xor
add
jle
sbb
pop
sub
out
jo
mov
jp
lcall
int
aaa
out
subb
insl
sub
mov
aas
mov
into
xor
sub
adc
and
push
mov
and
pop
xor
mov
xchg
jecxz
stos
fs
mov
and
add
jno
sub
mov
loop
orb
out
push
leave
icebp
jnp
jne
fucomi
mov
loopne
out
out
insb
sub
outsb
or
roll
pop
mov
sbb
hlt
repnz
jmp
mov
xor
fsub
xchg
add
cmc
scas
cmp
leave
gs
jg
sbb
cmp
rorb
mov
sbb
dec
xchg
add
flds
scas
pushf
dec
cmp
add
std
jb
fwait
push
cmp
pusha
loop
adc
xchg
insl
jg
dec
pop
int3
dec
push
dec
out
fcmovbe
add
shlb
mov
sub
jb
mov
je
xor
adc
loope
jp
cmpsl
or
sbb
stos
jb
dec
xchg
ret
andb
jge,pn
mov
cwtl
ss
inc
sti
shl
mov
adc
out
push
jbe
push
xor
insl
fisttpl
or
push
jbe
movsl
subl
iret
fldl
iret
dec
jmp
cmc
mov
mov
add
mov
dec
lock
adc
xor
or
xchg
out
lods
xchg
dec
cmp
xchg
sub
push
repz
push
cmpsl
dec
mov
jb
js
rol
and
sbb
mov
mov
test
mov
fidivl
shlb
adc
mov
mov
imul
sahf
and
icebp
repz
into
adc
in
fstps
in
es
cmpb
subl
or
push
and
movsb
dec
icebp
xorb
cmp
ss
inc
dec
xchg
cmp
push
lret
bnd
xchg
lret
test
clc
inc
ljmp
imul
je
or
or
xor
mov
adc
xchg
in
jge
jl
in
movsl
jl
inc
pop
and
dec
aas
nop
aam
hlt
push
pop
shrl
je
jge
test
cltd
adc
lcall
stc
jae
data16
out
adc
or
and
or
jmp
fucomip
cs
dec
imul
xchg
loop
lods
cmc
or
mov
outsl
xchg
adc
cmp
xor
mov
xor
fstl
stos
cmp
mov
fstps
xchg
dec
ljmp
aam
sub
inc
xchg
mov
pop
cmpsl
jns
xchg
movsl
xchg
dec
orl
xchg
in
cmp
imul
push
cwtl
xor
mov
es
jno
jmp
and
mov
pop
lock
gs
xchg
cmp
adc
sbbb
pop
dec
mov
rcll
mov
into
push
loop
dec
movsl
push
and
inc
xchg
pop
push
pop
jmp
pusha
loop
inc
adc
fsubrl
inc
pop
scas
xor
push
and
add
and
iret
fidivl
scas
jp
or
fistl
pop
inc
or
jmp
inc
dec
mov
lret
sub
lret
inc
push
adc
int3
test
sub
jbe
movsl
mov
push
in
int3
or
aad
dec
int3
pop
jbe
xor
sbb
mov
push
inc
sbb
xchg
or
rcl
mov
pop
mulb
inc
test
xorb
fidivl
cmp
out
arpl
ljmp
aam
cmp
loop
mov
inc
mov
addr16
bound
jmp
add
dec
cmp
sarb
mov
add
dec
jbe
shl
data16
aam
push
andl
out
scas
out
gs
imul
xor
js
mov
pop
jbe
sub
fbstp
arpl
mov
fnstsw
je
inc
fadd
clc
ret
fsubr
pusha
sbb
int3
lods
repz
or
mov
jp
rcrb
lods
xor
pop
and
sub
mov
and
fisttps
int
xor
adc
movsb
setp
das
aam
movb
hlt
xchg
int
fwait
mov
push
and
xchg
adc
stos
or
stos
ja
cltd
pop
js
cld
mov
cmp
sbb
adc
push
scas
repnz
add
lret
orb
sub
fisubrs
and
push
xor
iret
xchg
shlb
sub
mov
dec
outsl
jb
mov
ss
mov
fcmovnu
outsb
stos
jns
or
mov
shll
subl
js
shlb
push
sbb
inc
scas
aaa
cmpsb
and
xchg
mov
adc
push
test
xor
pop
dec
or
cmc
stos
insl
add
jg
or
ss
pop
and
ret
jge
lds
sahf
outsl
xchg
jno
in
lock
nop
std
scas
jle
fisubrl
cmp
or
push
movl
jmp
shl
adcb
push
int3
aaa
movsb
nop
pop
fdivr
andb
shrb
dec
mov
fmuls
clc
popf
fcmovnbe
es
push
cli
dec
clc
fs
mov
jne
pop
lods
push
inc
repnz
out
leave
lods
mov
dec
push
jb
inc
repnz
daa
cmpsl
fstl
imul
mov
ss
adc
call
movsl
pop
cltd
push
mov
mov
cmp
add
cmp
mov
push
lds
mov
icebp
dec
add
jnp
mov
ss
mov
pop
cmp
pop
pop
or
test
adc
xchg
rol
inc
insl
outsl
pop
lods
repz
jge
sbb
xlat
jns
pop
push
test
adc
or
outsb
cmp
dec
sbb
xchg
or
icebp
rcll
daa
stos
int3
mov
pop
not
insb
dec
orb
add
adc
shrb
jg
add
repz
xchg
add
xor
xor
mov
mov
push
rclb
sbb
jo
mov
mov
pushf
mov
dec
sbbb
pop
push
aam
push
jg
mov
pop
xchg
inc
aas
rcr
cmp
sub
loopne
mov
dec
les
outsb
loop
imul
jbe
adc
or
fcmovu
ret
roll
movsl
pop
arpl
ret
xor
adc
nop
lcall
aas
sbb
mov
lret
mov
daa
xor
cs
repnz
bound
imul
xor
xor
loop
dec
mov
dec
mov
lahf
out
mov
mov
fistps
inc
xlat
inc
pop
jns
fidivrl
movsl
sub
mov
xchg
sub
inc
lret
mov
das
pop
pop
or
out
fstps
shlb
jb
xor
xchg
outsl
xor
idivb
xchg
scas
imul
pop
ljmp
in
mov
or
cmp
or
cmpsb
pop
add
inc
fs
add
xor
in
adc
out
daa
hlt
mov
or
jnp
mov
imul
in
loope
andl
sbb
sub
xchg
adc
add
adc
jne
mov
jns
pop
and
xor
jmp
movsb
sub
adc
sbb
or
scas
dec
out
js
in
xchg
int
push
test
clc
pop
add
cmp
test
int3
bound
out
cltd
in
adcb
push
outsb
sbb
cmp
xchg
push
mov
push
pop
dec
mov
ror
xor
pop
xor
xchg
inc
stc
or
jo
cltd
push
or
arpl
dec
mov
out
out
inc
scas
cli
scas
out
push
fwait
ds
adc
enter
xchg
cmpsb
mov
mov
inc
fcom
into
mov
popa
std
mov
imul
leave
mov
and
mov
scas
pop
dec
xor
mov
mov
pop
pop
clc
or
sbb
mov
or
nop
repnz
sbb
popa
mov
xchg
mov
and
inc
nop
xor
test
push
mov
pop
cltd
mov
ficoml
adc
sbb
and
mov
sbb
call
ja
cmp
insl
mov
stos
pop
and
adc
push
int3
sahf
pusha
div
int
imul
aaa
xchg
xlat
inc
pop
in
xor
dec
out
mov
inc
push
call
dec
inc
add
jp
mov
incl
lods
fstl
lods
cmp
mov
mov
aam
xchg
cwtl
nop
cmpsb
fildll
jnp
cmp
mov
adc
add
clc
xchg
and
icebp
cltd
jmp
pop
sbb
clc
sub
call
add
pop
adc
xor
xor
flds
test
add
outsb
xchg
negl
shl
scas
mov
jmp
loop
dec
add
loopne
or
add
das
dec
xchg
dec
lret
sub
lcall
dec
cmp
xor
xchg
and
shrl
adc
mov
mov
call
in
xchg
xor
fimull
push
add
aaa
sub
pusha
jo
fcoms
adc
mov
rcr
mov
jno
popf
and
popf
mov
stos
inc
daa
push
add
test
repz
push
cmp
lods
fisubrs
adc
lea
mov
test
shlb
mov
lahf
add
sub
and
sbb
sbb
in
push
not
dec
xlat
cmpb
mov
dec
packuswb
sti
cld
add
xor
inc
mov
sti
xor
or
jecxz
test
gs
rcll
xor
or
rolb
ffree
dec
jecxz
xor
subb
mov
pop
pop
hlt
mov
cwtl
push
ss
fnsave
and
imul
outsb
jp
add
enter
sbb
cmp
jge
nop
dec
std
jns
mov
dec
sbb
and
fiaddl
pop
sbb
rolb
fsubrs
xchg
cmpsl
mov
nop
adc
lret
cmp
out
mov
cmp
mov
and
jns
adc
mov
lods
leave
dec
cwtl
xorb
hlt
cmpsl
inc
in
mov
mov
and
adc
jmp
sbb
xchg
dec
adc
andb
jecxz
int
hlt
in
push
out
add
cmp
ljmp
cmc
sub
adc
ds
std
call
jl
out
jne
addr16
push
cmp
scas
es
push
add
jb
iret
lods
cld
pushf
inc
clc
scas
outsb
std
in
or
sub
ret
lcall
jb
inc
push
aam
push
shlb
fcom
jle
xchg
mov
mov
mov
in
mov
std
pop
mov
in
xor
lret
shl
xor
or
push
aad
dec
aaa
sbb
ds
jge
out
mov
mov
xchg
or
lods
mov
pop
xchg
sbb
gs
add
rclb
cs
and
gs
adcl
xor
pop
ss
xlat
jge
hlt
sbb
sbb
nop
and
or
fsts
inc
orl
mov
std
xchg
xchg
sahf
adc
ret
push
ficomps
stos
cmpsb
cmp
fisubl
add
xor
test
lds
daa
repnz
xchg
test
aas
stos
sub
xor
ds
push
lods
pop
lahf
jecxz
addr16
loope
inc
rcrb
js
mov
fstps
sub
xor
sar
pop
mov
arpl
pop
pop
rcr
pushf
rclb
mov
out
push
or
flds
leave
aam
xchg
dec
es
push
mov
mov
icebp
push
push
cmp
imul
dec
dec
jb
sbbl
dec
push
jge
pop
data16
shrb
sbb
fidivs
mov
ljmp
cmp
stc
jns
cmp
rcrl
mov
hlt
scas
push
lock
xlat
and
xchg
or
lods
add
dec
cmp
xlat
push
dec
xor
insl
aad
dec
test
cmp
push
cmpsl
sbb
or
jmp
xchg
mov
jmp
push
add
xchg
popf
mov
cltd
fmulp
insb
jnp
adc
sbb
mov
out
xlat
mov
in
xor
mov
daa
adc
cli
add
push
inc
xchg
test
inc
or
jecxz
mov
test
lock
out
movsb
insb
xor
psubb
cmp
pushf
fst
stc
xchg
in
push
adc
cld
cs
mov
gs
add
mov
mov
aad
lods
inc
imul
and
daa
fyl2xp1
inc
movsl
imul
jns
cli
xchg
mov
fmull
jp
lcall
into
jns
dec
mov
mov
xchg
mov
xchg
sbb
outsb
pusha
push
inc
inc
dec
cltd
sbb
fsubl
aad
xchg
or
adc
or
xchg
xchg
xlat
dec
xchg
int3
xchg
jecxz
dec
xchg
cmp
mov
cmpsl
fucomip
ficomps
jne
jmp
out
lcall
call
loopne
and
inc
aaa
int3
push
pusha
into
xchg
pop
shr
pop
sbb
mov
jo
inc
in
mov
pop
out
gs
pop
adc
aas
pop
insl
sub
push
dec
cld
or
shrb
xor
push
adc
mov
push
and
nop
arpl
leave
mov
fcoms
imul
out
adc
movsl
push
imul
xor
xor
sbb
cmp
pusha
mov
push
xor
sarb
pop
xchg
pop
cld
mov
repz
aaa
mov
jge
data16
int
push
ret
ret
xchg
insb
aad
push
out
mov
xchg
insl
cmpsl
mov
aaa
dec
ficomps
les
sub
mov
ret
mov
add
ret
je
adc
adc
xlat
xchg
xchg
sarb
jne
mov
jp
mov
xlat
bound
mov
in
inc
repnz
mov
cmp
ja
adc
dec
jge
imul
pop
dec
push
jno
movsb
scas
pop
subb
push
aam
rcrb
or
inc
test
lods
imul
popa
xchg
cmpsw
and
fcmovne
mov
pop
pop
jbe
push
push
cmc
mov
xor
xchg
jae
pop
cltd
repnz
sahf
xchg
mov
or
push
loopne
andl
nop
cmpsl
jbe
stc
lcall
add
xchg
push
mov
push
push
mov
outsl
into
arpl
out
xchg
mov
lahf
mov
jle
loopne
push
orl
or
jecxz
and
or
sbb
call
in
inc
daa
les
cwtl
mov
idivl
mov
lea
mov
xchg
xchg
out
mov
sahf
mov
or
jbe
aas
mov
jbe
lret
orl
or
sbb
or
pop
ljmp
mov
mov
lcall
adc
jae
icebp
sub
and
jo
ss
pop
push
sub
lea
andb
or
jae
into
push
insb
adc
imul
mov
cwtl
arpl
cmp
pop
out
les
outsl
movsb
or
fucomi
inc
push
pop
sub
push
inc
push
test
movsl
jb
mov
movsl
xchg
add
or
les
insb
adc
add
out
mov
pusha
fbstp
push
int3
dec
data16
xchg
cmp
packsswb
fcomps
jmp
stc
nop
mov
movsb
mov
fdivrs
shll
cli
rcrl
dec
lea
or
push
insl
fld
push
cli
fidivl
int
dec
xchg
or
sub
pushf
jae
pop
loope
xchg
in
sbb
xchg
and
notl
mov
lods
leave
addr16
out
or
movsl
inc
ret
aaa
or
adc
cli
or
inc
or
add
cmpsb
test
in
aam
nop
xor
jno
icebp
dec
js
mov
fcomip
adc
xchg
dec
cmp
push
rsqrtps
fwait
lods
xor
jnp
push
out
push
cld
cmp
iret
lods
jmp
jmp
repnz
xor
loopne
lock
fidivrl
pop
pop
xlat
mov
jnp
jae
mov
cwtl
pop
or
xchg
stc
rolb
xor
pop
test
cltd
stc
cmp
stc
mov
pop
mov
fsubp
jl
lea
aam
push
or
sub
ds
fs
out
xor
cmc
pop
lret
inc
sahf
call
insl
mov
popa
cld
cmp
js
cltd
mov
les
sbb
lcall
fimull
dec
daa
and
call
and
insb
inc
add
mov
cmp
inc
out
jle
imul
xchg
fwait
push
pop
mov
mov
mov
stos
std
pop
lcall
sub
dec
pop
and
sbb
dec
notl
and
or
sahf
xchg
inc
or
xchg
pop
and
es
and
pop
xlat
stos
mov
xchg
out
fs
add
and
jmp
bound
dec
dec
sub
scas
into
xor
jg
clc
roll
xlat
sbb
xchg
mov
jle
mov
inc
cs
add
lret
flds
cmpsb
out
mov
arpl
push
mov
add
fstps
sub
in
lret
dec
repz
add
jg
fwait
add
rclb
es
lahf
jbe
mov
stc
and
cmp
mov
xchg
sbb
jno
inc
repz
ja
push
push
dec
fisubrs
mov
mov
cmp
pop
cmp
sub
mov
inc
push
jbe
cmovne
rol
pop
xchg
xchg
mov
scas
push
jge
ljmp
mov
clc
addr16
xor
mov
mov
lret
subl
aad
loope
add
mov
cmp
sub
arpl
cmc
int
aas
xorl
fisttpl
push
leave
test
xchg
xchg
jne
fs
aam
cmp
and
and
adc
jae
pop
mov
mov
fbstp
xchg
push
pop
mov
inc
push
ds
pop
mov
fstpt
pop
aam
pop
insl
or
dec
cld
pusha
sti
jp
cli
mov
es
rcl
ret
and
hlt
je
lcall
addr16
popf
test
imul
fs
ljmp
xor
pushf
sub
jnp
in
and
xor
gs
cmp
lcall
cli
dec
adc
outsb
scas
scas
pop
xchg
shll
push
cmp
insb
fwait
adc
cmpsl
or
lods
sub
jmp
shrl
outsb
rorb
gs
stc
cmp
bound
push
xchg
mov
cmp
or
lock
sub
imul
and
bound
xchg
jmp
scas
add
pop
xor
jecxz
add
call
inc
xchg
xor
imul
scas
push
dec
and
mov
mov
pop
and
fwait
sub
imulb
jp
and
and
dec
xchg
push
ljmp
pop
sub
fsts
pminsw
jne
mov
daa
xor
gs
adc
sbb
js
adc
mov
movsl
ds
cs
fldl
jle
das
sbb
xor
test
popa
sti
aas
addr16
lcall
push
call
mov
pop
gs
dec
adc
cmp
xor
push
cltd
nop
sbb
add
mov
dec
loop
imul
mov
sbb
cmpb
cmp
sbb
dec
xchg
sbb
cmp
test
pop
sub
insl
inc
out
out
or
ret
and
ret
add
mov
mov
int
es
mov
fistps
adc
or
xor
mov
mov
sti
cltd
fwait
aad
shrb
sti
lret
pop
or
xlat
cmpsb
icebp
push
mov
pop
pop
mov
or
mov
lcall
adc
pop
inc
stos
fsubr
pop
cld
sbb
les
mov
int3
stos
dec
push
xchg
adc
mov
mov
scas
aaa
sub
repz
sbb
fisttpll
cmp
sub
xchg
into
jecxz
inc
push
imul
add
sub
fimull
aam
cmp
jno
in
dec
fdivrp
repz
mov
inc
add
cmp
outsb
neg
jae
mov
loopne
rorl
in
into
xchg
push
es
addr16
dec
mov
shlb
ficoms
add
jns
mov
mov
push
roll
sbb
mov
test
stos
mov
pop
out
and
movsl
popa
mov
pop
sub
xchg
inc
pop
jne
shll
lahf
scas
pop
xchg
jb
loope
jp
cli
jns,pt
dec
mov
xchg
push
adc
pop
and
mov
js
xor
mov
sub
cmp
pop
fimuls
jecxz
xchg
pand
jge
push
mov
xchg
xor
mov
push
and
scas
lock
jge
cmpsl
rcrb
call
sbb
lea
dec
imul
lea
mov
inc
jecxz
in
inc
sub
imul
std
mov
xor
xchg
cmp
aad
jg
inc
sbb
pop
lcall
jo
push
push
dec
inc
adc
inc
jns
pop
xorb
shl
push
pop
mov
xchg
es
aas
or
dec
and
xchg
fwait
mov
add
mov
pusha
in
sahf
xor
or
xor
push
arpl
in
pop
inc
outsb
sub
add
adcl
jg
mov
lret
xchg
scas
lcall
cmp
ficoml
inc
jmp
dec
or
imul
mov
and
or
pop
adc
shlb
and
cmp
out
aam
or
in
popa
push
out
cltd
mov
jo
dec
cmpsb
xchg
shll
lcall
loope
lret
mov
adc
add
pop
add
int3
or
jno
mov
mov
fsubrs
mov
popa
pop
sbb
xchg
dec
dec
jecxz
cld
mov
lods
hlt
lret
jae
jne
iret
test
loop
add
lahf
test
lcall
insl
stos
cmpsb
and
outsb
jne
aad
lcall
push
fidivs
fadd
lret
sub
mov
xchg
and
or
call
jno
sbb
inc
lret
mov
mov
mov
dec
repz
push
mov
jecxz
cwtl
arpl
fidivrs
or
in
mov
int
lahf
roll
cmp
mov
mov
aad
sbbb
out
mov
dec
shr
and
fsubrl
mov
dec
mov
cmpsl
add
mov
fdivp
cmpl
and
shlb
push
repz
outsl
lods
sub
rdmsr
fcom
daa
dec
testb
aam
dec
push
or
arpl
test
dec
push
scas
dec
cmp
adc
out
cltd
mov
mov
xor
out
and
aad
loopne
mov
leave
inc
xchg
sub
cs
inc
or
fwait
insb
enter
pushl
pusha
in
xor
stos
sub
or
dec
pushf
aam
sub
cs
iret
repnz
mov
cmp
xchg
xchg
call
push
adc
push
cmp
xor
cmpl
dec
xor
enter
add
cmpsl
pop
pop
mov
notb
enter
in
xlat
cltd
dec
es
and
scas
fcoms
adc
pop
ljmp
stos
dec
push
jmp
sti
rorl
inc
xchg
jge
je
dec
or
loope
pop
inc
mov
fisubl
ljmp
loopne
mov
mov
sub
jle
xor
shlb
fs
sbb
pop
xlat
sbb
mov
cmp
pop
mov
cmpsl
jns
sti
cld
push
pushl
inc
test
jmp
cmp
ds
movsb
mov
mov
stc
inc
mov
rorl
jle
shrb
pop
push
fsubp
push
popa
jle
cmovl
je
xchg
or
subb
jle
subb
orl
adc
mov
push
cmp
pushf
xchg
add
fcoms
ds
and
pop
push
out
xor
icebp
int
xchg
xor
fst
push
push
out
cld
insb
jp
imul
jmp
popa
pop
mov
gs
push
imulb
arpl
nop
jo
pop
jno
int
cli
or
lret
andl
jne
dec
adc
cmc
frstor
and
popf
int
cmpl
xchg
icebp
cmp
xor
or
and
jno
sbb
rorb
xchg
and
imul
pop
push
sti
pop
test
jnp
dec
andb
popf
push
cs
sub
cmpsl
out
pop
test
xchg
mov
nop
and
mov
or
mov
push
jmp
push
cmpsb
or
imul
cmc
pusha
rcrl
mov
and
push
mov
decb
push
rcr
ljmp
jl
adc
xor
test
sbb
push
imul
aas
adc
sub
mov
aas
sub
pop
sub
inc
pusha
xchg
push
xor
loope
outsb
shl
js
add
lock
cmpb
fstpt
addl
int3
mov
clc
mov
adc
pop
xchg
adc
jl
adc
mov
pop
adc
rol
dec
jl
popa
adc
push
mov
adc
sbb
pop
jnp
xchg
cld
mov
popa
decl
idivl
scas
mov
cmc
cmp
pop
jno
jge
xor
xor
movsl
js
and
repnz
pop
sub
ljmp
cmpsl
sub
outsl
cmp
sub
test
sub
jecxz
call
pop
jl
dec
push
and
test
insl
sub
test
cli
icebp
xchg
pop
cmp
or
out
add
in
jns
xor
push
shlb
ret
jnp
add
data16
aad
lods
jns
int3
lret
push
sbb
rorl
out
sti
adc
pop
mov
and
iret
adc
cwtl
push
addr16
add
lahf
scas
mov
xlat
test
das
sbb
push
mov
jo
sbbb
jbe
pop
nop
in
cmc
xchg
iret
sahf
aam
mov
fs
loope
int3
stos
fmull
leave
mov
pop
pop
cmc
frstor
movl
cld
scas
fnstsw
sub
sarl
lds
imul
out
jecxz
xor
push
ljmp
push
sub
sub
popa
adcl
das
push
pop
push
push
insl
int3
dec
jbe
dec
jg
or
fs
fucom
xchg
sub
push
pushf
push
in
addl
xor
int
stc
jae
cmp
cli
stos
movsb
xor
aam
stos
dec
adc
push
jbe
cmp
jbe
pop
cli
pushf
mov
out
lret
rcrl
addl
pop
popa
inc
jl
sub
sbb
xor
pop
stos
imul
inc
jb
and
dec
cltd
shlb
popa
inc
lods
ret
mov
es
sbb
sub
pop
mov
fadds
add
and
cmc
xlat
fisubl
mov
popa
xchg
pop
out
inc
lods
js
add
cli
lret
jne
fld
adc
lahf
mov
xor
jl
ja
les
mov
addl
popa
adc
xor
add
imul
jbe
inc
dec
cli
push
in
xchg
cwtl
or
mov
aaa
pop
ss
jbe
rcll
andl
mov
adc
xor
pop
cmp
stos
stos
in
loopne
sub
push
rclb
mov
shl
mov
mov
pop
ret
push
insl
lods
test
lcall
push
push
mov
mov
cmpl
outsb
nop
int3
push
movsl
lcall
out
push
xchg
sbb
inc
dec
sbb
scas
mov
jle
test
fsubrl
sbb
shll
sbb
scas
jno
pop
jae
int
sub
mov
outsl
mov
inc
jmp
sbb
lret
into
jg
iret
push
push
xchg
xchg
mov
mov
mov
and
push
dec
insl
adc
mov
ds
or
fidivrs
mov
mov
lahf
jl
xor
stos
test
push
xor
pop
aaa
aad
sub
pop
jne
stos
js
pop
mov
push
inc
mov
jecxz
sub
div
pop
adc
aaa
jne
push
dec
aam
inc
movsb
add
xor
and
pop
or
rcrl
inc
sub
aam
lea
adc
addr16
insb
jmp
pop
xchg
icebp
sbb
cli
add
xor
aam
test
jbe
call
push
xchg
dec
in
push
adc
addr16
push
or
xchg
into
nop
mov
std
dec
ds
fnstenv
push
hlt
pushf
outsb
push
add
mov
into
aam
in
scas
lea
lods
arpl
sbb
sar
ret
repz
mov
insb
jns
lods
inc
cmc
mov
fdivrs
nop
sub
int3
stos
movl
adc
mov
shll
xor
pop
inc
mov
pop
out
mov
loopne
xorl
enter
out
dec
push
push
jb
loop
pop
inc
hlt
jnp
cmp
and
lahf
cmp
jns
out
out
jge
inc
shlb
aam
popw
cmp
out
mov
cmpsb
idivb
in
sbb
call
loopew
add
xor
roll
pop
pop
in
push
in
sbb
stos
mov
push
inc
js
xor
mov
ljmp
enter
shl
ss
push
or
push
lods
jge
dec
hlt
clc
les
les
lods
mov
shrl
add
sub
pusha
xor
jle
sbb
shlb
sbb
jbe
popf
es
into
nop
loop
xchg
push
mul
or
jo
sbb
mov
test
inc
repnz
sbb
inc
mov
xchg
push
lret
lret
repnz
inc
mov
ljmp
mov
les
jecxz
in
mov
mov
jno
insl
cwtl
fwait
mov
nop
rclb
mov
adcb
jmp
das
imull
and
xchg
scas
mov
pop
jl
in
js
xchg
mov
xor
movsb
out
clc
xchg
frstor
and
outsb
mov
dec
loopne
mov
repz
push
or
cmpsb
out
adc
enter
dec
sbb
adc
addl
inc
pop
xlat
and
adc
jp
rcll
jle
int
mov
cli
movsl
int
fmull
and
stos
fistpl
call
add
or
addl
fs
bound
sub
ja
mov
ja
aad
shl
ss
ret
loopne
and
fldcw
push
iret
sbb
mov
xchg
repz
adc
in
push
movsb
js
iret
sbb
fwait
cmp
inc
push
cwtl
pop
mov
inc
ljmp
sahf
scas
dec
mov
aad
jns
loope
fimuls
add
cmpsb
hlt
inc
out
mov
jb
in
es
jle
sti
cwtl
mov
test
movsb
and
jmp
enter
stc
rol
inc
test
gs
mov
xchg
jecxz
mov
inc
sub
xchg
add
clc
mov
dec
std
scas
xchg
call
stos
sub
mov
fisttps
or
mov
add
cmpsb
pop
mov
fisttps
pop
ret
ficoms
and
std
or
adc
sbb
int
mov
jl
mov
imul
cmpsb
dec
cli
adc
out
fisttps
pop
imul
sti
sub
nop
dec
jl
scas
ja
lods
cld
js
call
push
popa
es
ss
or
add
add
movsl
jno,pn
loope
call
sahf
jge
lcall
xchg
add
jp
and
incb
arpl
int
xchg
jl
inc
mov
rcl
add
jnp
adc
nop
arpl
jne
inc
sub
dec
jbe
ret
into
int3
push
push
fisubs
cmp
scas
lock
pop
mov
scas
dec
push
sbb
lret
fistps
adc
xchg
xchg
mov
mov
jne
or
fcmovbe
mov
and
insb
outsb
pop
pop
dec
adc
and
jo
mov
cmp
cmp
sarl
sub
mov
and
fwait
mov
out
or
int3
adc
ja
pushf
movsl
aaa
arpl
stos
jecxz
jns
pusha
into
mov
call
and
jo
out
sub
push
push
push
loopne
xor
aad
xor
cmpsl
into
jg
test
std
dec
mov
dec
adc
aaa
or
call
inc
pop
in
stos
mov
push
mov
jo
jl
xchg
jb
push
hlt
xchg
lcall
dec
rclb
and
push
dec
in
ficoms
cli
inc
sub
sub
and
outsb
sbb
jg
adc
mov
rorb
cmp
pop
dec
pop
les
or
ret
push
into
xchg
flds
sub
pop
mov
rorl
sub
iret
push
pushf
ljmp
pop
pop
clc
bound
rcrb
pop
ljmp
sbb
jns
push
stc
sub
xchg
dec
cmp
jb
add
sbb
mov
je
adc
out
shl
xchg
loopne
mov
xchg
jae
mov
ds
in
stos
test
push
movsl
cltd
aad
xor
out
inc
and
fldl
in
sti
dec
mov
aad
mov
data16
fcomps
xor
lock
mov
sub
mov
mov
loopne
inc
mov
xlat
mov
pop
mov
add
xchg
insl
mov
add
xor
adc
jp
mov
loop
lahf
into
test
jg
in
add
push
popa
adc
jno
sub
in
cli
mov
jo
add
mov
adc
mov
test
in
cld
cli
imul
lods
pop
bswap
cmp
test
ret
xor
arpl
mov
mov
or
cmp
fwait
and
inc
in
negb
mov
pop
lock
ret
add
fs
test
xchg
cmp
divb
fmul
cmp
std
inc
mov
les
stc
and
adc
sub
or
mov
dec
pop
mov
or
insb
loopne
jmp
outsb
adc
jb
mov
fwait
or
push
inc
stc
pop
das
adc
leave
andl
leave
jmp
jbe
dec
xchg
and
inc
lahf
fimull
inc
push
dec
and
pop
pop
mov
xor
jle
cmpsl
das
aas
movsl
std
clc
mov
ds
ja
in
addr16
inc
inc
and
out
sbb
mov
aad
cmp
and
cmp
jno
arpl
xor
fdivrs
push
or
mov
jns
dec
aas
jbe
cmp
sub
stos
in
cs
dec
es
addr16
jmp
mov
or
and
out
cmc
mov
out
in
jecxz
mov
jge
adc
int
cmp
out
ret
pop
fstp
clc
pop
and
push
xor
xchg
test
sbb
xor
xchg
mov
aam
push
push
adc
cmp
push
dec
loope
shll
ljmp
clc
add
mov
bound
jge
inc
leave
cmpsb
dec
sub
pushf
mov
xlat
stos
scas
lahf
ficoml
adcl
pop
dec
popf
loop
popf
mov
sbb
arpl
daa
xchg
sub
pop
jg
adc
stos
push
sub
int3
add
or
cltd
xchg
xchg
lock
fldcw
mov
cwtl
loope
call
pop
or
mov
sti
xor
pop
dec
jns,pn
dec
cmp
nop
mov
pcmpeqb
pop
xor
or
sti
jnp
inc
and
mov
mov
sub
mov
cld
data16
mov
inc
add
mov
fcmovnu
cs
or
cmp
xchg
aam
xor
inc
sub
stos
pusha
sarb
xchg
pop
lahf
dec
nop
out
lock
ret
adc
std
pop
lods
dec
fidivrs
lret
mov
aas
loopne
orl
sbb
sub
and
idivl
stos
add
ja
lret
xchg
add
pop
bound
xor
xor
sub
push
bound
pop
jnp
xor
test
gs
addl
adc
lock
cltd
mov
cmpsb
sbb
push
jmp
inc
imul
mov
std
subl
pop
xor
add
push
repnz
dec
dec
push
xchg
inc
stos
xchg
push
mov
jge
stc
out
ret
das
scas
fiaddl
xchg
adc
not
adc
jecxz
sbb
into
pop
mov
insl
and
mov
mov
imul
jae
or
pop
test
cwtl
pop
test
scas
jl
mov
mov
push
pop
call
and
jnp
mov
loop
lret
mov
xchg
pop
imul
adc
mov
js
stc
imul
leave
mov
adc
and
enter
dec
lret
loop
and
pop
inc
cmp
shlb
jae
hlt
push
lock
mov
dec
mov
cmp
xchg
and
pop
mov
mov
adc
push
xchg
or
xchg
push
push
cmpsb
fisubrs
push
xchg
scas
fistps
jnp
rol
mov
call
imul
add
das
dec
adc
mov
insb
in
in
xor
addl
dec
iret
ficompl
stos
mov
cmp
lods
fidivl
pop
push
sti
sbb
jg
xor
xchg
push
lret
xor
loope
sbb
sbb
iret
aas
fistpl
movl
aaa
adc
add
pop
mov
enter
jmp
mov
adc
pop
push
scas
push
js
ss
and
sti
push
fcompl
mov
xchg
icebp
mov
inc
mov
pop
mov
in
lea
push
imul
scas
inc
aaa
adc
xchg
out
scas
bound
aad
pop
mov
jnp
scas
bound
jp
mov
push
mov
pop
add
lods
lcall
outsl
andb
push
and
pop
aas
jl
mov
lods
push
ljmp
push
pushf
in
imul
jecxz
lea
jns
fldt
test
sarb
pushl
jae
lcall
cmp
fisttps
adc
test
out
xchg
xlat
in
jle
sbb
inc
inc
push
mov
dec
test
inc
loop
mov
or
jg
sub
xor
push
jo
lock
xor
in
pop
inc
fiadds
pop
ljmp
dec
lcall
test
shrb
xor
cmp
hlt
adc
mov
jbe
subl
cmp
ss
arpl
xchg
xor
mov
dec
cltd
repz
lea
xor
outsb
mov
ds
outsl
pop
mov
mov
testl
fisttps
subl
and
push
sbb
loop
iret
push
mov
mov
sub
cmp
lret
ret
add
iret
jp
pop
or
std
mov
inc
xchg
inc
jns
test
and
jne
dec
push
xchg
ret
push
adc
lret
xchg
jno
sbb
jmp
and
pop
ret
pop
pop
test
movsb
aam
mov
and
push
dec
test
pop
add
push
or
push
scas
sbb
je
sub
arpl
popf
adc
aad
push
rcll
popf
jb
push
mov
push
pop
out
in
push
mov
xor
sbb
cmc
mov
or
ljmp
mov
imull
lahf
cmpsl
pop
cmpl
jl
adc
daa
popf
ss
popf
es
fcoml
sarl
cmp
xchg
divb
mov
filds
das
jne
les
push
cmp
insb
push
jmp
push
jl
inc
and
sub
sub
arpl
sbb
das
push
faddp
and
or
aaa
fldcw
mov
scas
lock
inc
shlb
outsb
adc
or
rcll
mov
fidivl
jno
ljmp
decb
xor
cmp
popf
imul
sbb
xchg
das
mov
xlat
aas
dec
push
roll
scas
sub
add
rolb
add
jl
enter
adc
cmp
lods
aam
data16
daa
mov
aad
cmp
xchg
sbb
shlb
mov
ret
xchg
icebp
leave
lods
sub
cmpl
cmp
xor
outsb
mov
jl
and
jg
ljmp
push
pop
adc
pushf
ljmp
xor
ret
inc
pop
mov
out
std
es
push
xor
out
xor
je
sub
stc
mov
push
lods
aad
mov
loope
fwait
push
nop
or
pop
in
je
in
roll
cmpsb
jbe
cmp
shr
fsubs
pushf
mov
mov
hlt
and
cwtl
pop
mov
sarb
out
sub
loope
insl
test
std
stos
call
pop
dec
xor
or
cmc
test
sbb
fcompl
repnz
repz
rcrb
outsl
adc
push
mov
aad
cmp
cmp
inc
mov
push
stos
adcb
ss
jb
pop
popf
pop
add
adc
add
sub
test
call
stos
pop
cmp
cmpl
pop
inc
dec
loop
rolb
push
ss
or
aam
cmp
pop
iret
jmp
pusha
mov
jge,pt
dec
push
dec
aad
xchg
push
jae,pt
inc
mov
inc
push
add
cmp
sbb
adc
jmp
mov
sbb
mov
mov
movsb
and
loop
and
aad
mov
in
mov
pushf
shrb
mov
push
outsb
sti
pop
xor
mov
dec
push
fwait
mov
mov
ror
xor
xchg
sub
or
dec
das
mov
notl
pop
jl
into
cli
or
mov
xchg
mov
jne
mov
in
pusha
inc
mov
mov
add
and
loopne
das
mov
push
and
inc
fdivl
daa
and
mov
or
ja
push
jo
and
jb
movsb
andl
subl
or
in
outsl
cmpsl
nop
xchg
repnz
cmpsl
jb
pop
shrl
mov
loope
imul
ficompl
jo
jno
cwtl
xor
inc
lret
arpl
jl
stos
pop
mov
add
sub
lods
adc
jbe
scas
cld
icebp
into
mov
mov
cmp
repz
push
call
inc
movsl
cmpl
sub
cmp
mov
shrl
mov
loope
add
mov
add
push
cmp
inc
mov
jae
je
mov
xchg
xor
dec
jmp
das
or
cld
cwtl
lock
jo
sbb
sub
jp
cli
ljmp
inc
iret
cltd
std
dec
push
cmpb
cmp
sar
jne
roll
or
push
inc
xchg
xor
mov
xchg
jnp
jg
cli
mov
and
xchg
push
sub
imulb
fnstenv
stos
push
mov
fildll
mov
fnstcw
test
cmp
and
add
daa
cmp
or
addb
mov
inc
int
or
dec
mov
jmp
cmp
dec
and
dec
rclb
xchg
test
pushf
ret
jno
jae
or
test
mov
add
cmc
mov
sbb
xor
mov
bound
xchg
rorl
mov
xchg
aam
cmc
or
inc
fyl2xp1
inc
push
lods
push
sar
xchg
pop
mov
fcmovnu
rcll
sub
xor
jne
inc
xor
mov
sbb
pusha
movsl
push
lea
into
pop
call
repz
pop
add
and
sbb
frstor
mov
fadds
hlt
ds
fcmove
out
addr16
sub
arpl
sbb
sub
pop
inc
mov
loope
mov
push
cmp
pushf
movsl
bound
sub
pop
ds
gs
fsts
mov
mov
mov
adc
adc
sti
fs
mov
pop
mov
add
jbe
mov
push
gs
in
push
xchg
push
loop
sub
fisttpl
xlat
pop
das
jecxz
iret
fsubrl
adc
ljmp
scas
inc
jb
pusha
cli
or
jo
jne
inc
pop
cs
int
xchg
cli
adc
pop
enter
filds
or
add
es
adc
cmpsb
scas
sbb
inc
ret
jns
addr16
sub
inc
out
inc
scas
cmpsl
xchg
xchg
cmp
fists
mov
xor
out
adc
rcll
mov
push
fdivrl
xchg
jecxz
cs
out
call
cmpsl
mov
jecxz
or
gs
push
je
push
push
jmp
jae
mov
scas
je
push
mov
cs
cmpsl
push
dec
push
idivb
xor
mov
lcall
fwait
inc
psllq
mov
xor
xchg
out
xor
fsubrs
loope
jmp
xor
mov
or
lret
cli
mov
iret
xor
outsb
add
xchg
sub
mov
xor
or
mov
jecxz
sub
add
in
mov
or
add
and
adc
mov
rclb
jne
popa
stc
pop
and
inc
and
bound
divl
pop
xchg
xchg
cmp
add
lods
pushf
jno
mov
sbb
dec
loope
mov
cltd
push
mov
xor
icebp
ret
sbb
cmpsb
xchg
jp
das
sbb
fsubrp
sbb
mov
js
mov
nop
add
xchg
lea
pop
push
cmc
mov
jb
cmp
into
sbb
fstpl
fstps
mov
mov
bound
mov
cmp
imul
out
cmp
lret
cmovbe
fildl
push
aas
jo
ljmp
fldl
je
sub
imul
ret
add
xchg
testl
idiv
cmp
cltd
sets
jmp
lcall
add
in
and
cltd
push
in
shrl
jecxz
jg
shll
sahf
test
daa
xchg
cmp
es
fisttpll
rcl
sub
gs
inc
cmc
add
mov
cmp
imul
nop
nop
hlt
mov
xlat
mov
xor
in
lret
mov
jge
inc
jns
insl
and
xchg
daa
add
inc
mov
sbb
or
sbb
lret
inc
stos
addr16
fistpll
mov
mov
rcrl
out
cmovns
ja
arpl
rolb
mov
mov
dec
ljmp
test
lea
pop
adc
cmpsb
inc
xlat
adc
outsb
scas
mov
jg
jecxz
fdivs
jae
xor
daa
cmc
sub
shlb
nop
fsubrs
adc
cmp
dec
jp
or
cs
fdivrs
mulb
mov
cmpsb
or
mov
jae
pushf
push
cmp
les
mov
hlt
jmp
test
es
pop
xchg
cwtl
xor
pop
cmp
bound
mov
xchg
fisubrl
mov
dec
push
hlt
push
lahf
mov
lcall
jp
mov
mov
jno
outsb
xchg
mov
call
imul
push
and
sub
jge
sub
pop
cmpsb
mov
ljmp
sbb
les
dec
sub
divb
push
pop
lahf
and
mov
ror
mov
mov
xlat
iret
dec
xchg
stc
push
sub
dec
test
test
fistps
dec
popa
lea
loope
rclb
cmpsb
dec
ficomps
jle
data16
and
sub
inc
mov
stos
jb
cltd
dec
and
enter
or
sbb
dec
lds
fsubrs
dec
call
xchg
insl
stos
mov
mov
inc
cli
cmp
mov
daa
sti
xchg
mov
call
in
jb
sub
inc
or
daa
fnstsw
push
xchg
sub
repnz
cmp
and
mov
xorl
pushf
mov
mov
jp
push
mov
pop
mov
pop
cltd
js
cltd
dec
mov
jecxz
ret
outsl
or
pop
jmp
mov
outsb
xor
bound
lds
xchg
xor
jns
jb
in
push
dec
cwtl
iret
outsl
xor
cmc
ret
sti
cmp
mull
inc
push
or
mov
jecxz
jg
mov
mov
pop
out
stos
push
insb
fnstenv
inc
cmp
loope
xor
jno
sbb
in
cli
mov
inc
sub
dec
xchg
imul
adc
jne
aam
jbe
dec
sti
mov
cmpsl
pop
scas
daa
sub
adc
sbb
popf
dec
out
rcll
stos
xor
cwtl
dec
cli
mov
xor
jle
push
jmp
ja
cmpsb
int3
mov
mov
sub
lret
sbb
sub
sbbl
mov
in
xor
jne
addr16
iret
dec
fdivr
dec
push
jecxz
mov
mov
cmc
xchg
cmp
cmpsl
push
test
mov
push
and
ljmp
jns
nop
adc
mov
dec
lcall
mov
mov
sbb
dec
call
xor
mov
pop
lcall
sbb
sbb
int3
jae
xor
add
stos
dec
pop
in
data16
mov
sbb
pushf
mov
rcll
clc
or
outsl
lods
push
movsl
mov
lret
ret
add
inc
out
mov
lcall
popf
cld
jne
ds
or
comiss
xor
mov
jl
out
push
mov
cmp
mov
or
mov
add
ret
mov
cs
scas
or
mov
xchg
js
and
gs
shlb
mov
xor
push
or
popa
mov
mov
sahf
in
sbb
ret
lea
mov
loope
mov
adc
pop
pop
pusha
ret
in
and
cmp
loope
and
mov
xchg
fcoml
ljmp
and
test
icebp
in
aam
push
push
inc
dec
xor
sti
mov
cmp
cmp
cmc
dec
mov
ret
out
inc
mov
aas
arpl
movsl
insl
scas
shlb
sbb
xor
hlt
and
xor
push
pop
xor
aad
int3
or
int3
adcb
ss
ljmp
xlat
jo
dec
adc
test
daa
and
ljmp
in
jle
out
cmp
shlb
ds
lods
stc
fs
cwtl
mov
jnp
int3
mov
fbstp
inc
inc
jp
xor
jo
jecxz
outsl
pop
sbb
pop
into
adc
cmc
in
in
hlt
pop
xchg
test
aas
scas
mov
jle
cmp
notb
pop
dec
pusha
pushl
cs
loope
int3
sbb
cmp
and
push
or
inc
test
ja
int3
xchg
jno
jae
outsb
mov
cmp
mov
pop
mov
hlt
push
aas
add
iret
and
fidivs
push
ficompl
dec
sub
add
mov
jne
mov
aad
lahf
outsb
shl
int3
xor
cmp
imul
xor
inc
xchg
adc
and
xchg
stc
inc
scas
and
sbb
lods
push
cmp
jmp
popa
shlb
iret
call
xlat
jbe
add
push
aaa
xchg
hlt
addr16
inc
sub
loopne
push
xchg
add
mov
into
lods
notb
mov
add
push
int3
mov
xchg
sbb
gs
jne
or
lds
mov
cltd
fidivrs
rcll
cmp
mov
jne
and
ret
sub
iret
lods
loop
jp
rorl
adc
xchg
jle
mov
lea
pop
add
mov
dec
and
and
sub
rcll
outsl
xor
lcall
fcoms
jbe
or
imul
adc
cmc
daa
int
or
sbb
aas
pop
adc
stos
push
add
mov
arpl
push
jmp
shll
sarl
jecxz
pop
rclb
test
jnp
mov
sbb
aaa
lret
jne
mov
enterw
fdivp
sbbl
fnstcw
flds
dec
push
pop
leave
push
test
imul
lcall
mov
in
xor
loop
outsl
push
aam
mov
shlb
push
inc
add
jo
add
xor
jo
test
mov
rcrl
dec
xchg
xor
es
xchg
or
popa
pop
mov
je
mov
nop
and
mov
sbbb
xor
aaa
pop
popa
aad
xor
xor
int3
mov
rorl
ss
pop
add
stos
fdivrl
mov
out
push
push
pop
pop
shr
or
pusha
loopne
pop
or
mov
nop
ljmp
cmp
test
int3
push
fsubp
addr16
fisttps
and
lods
lahf
xchg
push
sahf
mov
xchg
cltd
leave
add
dec
adc
fcom
sub
cmpsl
daa
mov
push
jns
lret
leave
and
mov
daa
mov
stc
outsl
in
push
sti
cmpsl
repnz
mov
aas
loop
cmc
dec
add
fiaddl
test
les
xchg
jmp
xchg
jg
mov
sub
jo
icebp
inc
mov
fisttpll
dec
inc
fldt
mov
insl
add
das
dec
dec
lds
fisttpll
or
arpl
mov
adc
xlat
cld
mov
mov
pop
push
or
xor
outsb
mov
cmp
gs
in
sub
subl
sub
loopne
xchg
jb
cmp
add
xchg
test
xchg
imul
sub
push
xchg
push
and
aad
test
jge
adc
push
and
shrb
pop
repz
add
xor
jnp
mov
in
inc
pusha
iret
pop
pusha
insl
cs
cmp
inc
inc
xchg
clc
adc
pop
mov
mov
mov
sbb
lcall
fwait
pop
and
jo
inc
push
jl
mov
sub
dec
mov
push
loopne
fistpll
test
nop
sub
hlt
add
insb
stos
pop
ret
out
sbb
out
mov
repz
mulb
jae
sbb
fs
ja
loop
push
mov
mov
icebp
inc
mov
mov
adc
loope
rolb
sbb
fs
cmc
jge
jl
push
push
push
push
jbe
lock
push
ret
mov
and
cld
notb
cmp
fmull
sbb
push
frstor
movsb
adc
xchg
xchg
fnsave
rcll
addl
ret
test
push
xchg
pushl
lcall
call
pop
arpl
dec
mov
mov
loopne
sub
sbb
jle
dec
fwait
std
lea
loop
leave
scas
adc
jmp
repnz
inc
mov
cmp
or
scas
xchg
push
adc
into
inc
mov
enter
das
jp
sbb
arpl
xchg
mov
mov
loop
cmpsb
mov
or
dec
hlt
adc
mov
or
jecxz
out
adc
mov
sub
neg
jmp
or
andb
xor
mov
inc
sbb
xchg
lret
dec
ss
jo
inc
iret
mov
lea
inc
cmp
insl
or
loop
xchg
push
shlb
cmp
sub
in
test
push
xchg
ss
adc
dec
je
pop
cld
push
leave
std
jno
xchg
cmp
das
ss
fwait
addr16
jae
xchg
popf
push
sub
mov
mov
je
mov
xor
ja
fwait
mov
xor
movsl
push
arpl
mov
mov
xchg
stos
mov
push
movsl
sub
lret
ret
adc
ja
push
shlb
cmp
dec
sub
addl
pop
jb
mov
add
fstps
test
pop
xchg
push
or
rol
pop
adc
scas
loop
add
mov
push
or
imulb
test
dec
cwtl
mov
stos
ja
adcb
mov
popf
mov
mov
cmpsl
or
sub
cli
pusha
dec
pushf
sub
aam
data16
ror
lcall
loop
frstor
xchg
stos
push
jnp
js
pop
push
mov
and
repz
int3
dec
call
jecxz
pop
lock
add
sti
inc
scas
pushf
sti
sub
and
cmp
test
leave
xchg
clc
xorl
adc
mov
mov
out
loopne
or
mov
and
add
push
test
rcll
fldt
and
mov
movsb
push
mov
in
addb
into
arpl
je
nop
mov
lcall
mov
out
mov
outsl
pop
jle
mov
je
sub
xchg
inc
inc
sti
push
xchg
dec
testl
bswap
ja
add
fisttps
nop
sub
mov
je
mov
jo
mov
mov
inc
test
fwait
jno
xor
aad
adc
test
aad
push
or
imul
mov
cs
mov
dec
xchg
cmp
outsb
enter
jecxz
push
out
jnp
pop
push
xchg
sar
cld
pushf
dec
into
mov
xchg
push
dec
xchg
test
or
dec
cld
or
cmp
in
jae
jo
fsubrl
ss
jle
push
push
call
insl
jns
push
movsb
mov
loope
pop
test
fwait
add
push
scas
int
shl
push
movb
call
arpl
mov
mov
rcl
or
jae
inc
or
push
and
fidivrl
in
adc
lret
xor
fcom
xor
pushl
xor
aam
mov
imulb
adcb
pop
xchg
jns
rorb
shrl
test
or
dec
sub
inc
mov
pop
shrl
inc
inc
stos
lahf
pop
das
and
push
cltd
imul
dec
pop
dec
xchg
outsb
pop
inc
jle
in
jmp
mov
hlt
jl
xor
out
mov
pop
mov
sbb
test
push
xlat
jmp
inc
out
pop
dec
mov
push
add
jae
test
sti
sbb
mov
sub
int3
jecxz
ror
les
cli
adc
lahf
ja
mov
lahf
negb
arpl
cli
bound
daa
scas
or
jl
sbb
mov
cltd
adc
inc
and
mov
or
mov
push
dec
je
nop
sbb
lea
jp
pusha
stos
cmpsb
js
mov
fmull
lods
in
shlb
or
rcrb
pop
dec
xor
into
inc
jg
testb
cld
push
ljmp
ret
jp
mov
and
cwtl
mov
push
fcom
daa
mov
inc
pop
mov
cmp
je
inc
in
decl
xchg
test
jbe
mov
pop
mov
fs
fdivs
jg
jecxz
or
add
mov
xor
popf
jne
out
insl
outsl
jo
test
sub
setg
inc
xorb
lds
lods
outsl
adc
and
xchg
pop
mov
aaa
mov
pusha
inc
adc
xchg
adc
sahf
addl
pusha
test
in
repnz
imul
push
adc
sub
ret
sbb
int
or
jne
mov
mov
pushf
cmp
nop
mov
sbb
mov
addr16
xor
hlt
hlt
push
into
fistps
mov
ret
mov
cmp
pop
scas
lds
push
lahf
pop
lret
ret
fdivl
fldenv
adc
lock
mov
jnp
gs
or
ja
fs
dec
sub
xchg
bound
loopne
jle
cs
clc
in
loop
popf
lret
push
std
jg
and
aas
es
and
sub
stos
imul
push
mov
xor
jg
dec
loope
sahf
loop
aaa
test
pop
dec
xchg
fdivrl
sbb
lret
push
fnstenv
cmpsl
lods
sbb
mov
sub
hlt
leave
pop
pop
add
dec
and
repz
outsl
or
inc
fidivs
add
add
inc
hlt
dec
in
arpl
femms
jno
data16
cltd
stos
repnz
loopne
icebp
std
add
lock
mov
ss
dec
aas
adc
or
mov
sbb
and
popa
in
push
mov
leave
subb
push
push
out
loope
and
jmp
in
nop
mov
in
call
sbb
dec
sbb
adc
test
push
clc
add
cltd
jge
dec
jl
xlat
stos
insl
clc
sub
sbb
inc
into
cmp
cmpsl
nop
dec
pop
jp
or
pusha
sbb
subb
arpl
cmp
adc
into
fwait
xlat
jo
and
sbb
in
add
jp
dec
mov
out
inc
xchg
inc
icebp
mulb
stos
jle
repz
sub
lret
push
lock
mov
push
mov
inc
dec
mov
and
mov
dec
or
jnp
out
or
xchg
cmp
add
aam
gs
enter
xchg
mov
out
cmp
stc
ret
cmpb
mov
sahf
jnp
or
xchg
pop
iret
lahf
push
fdivs
pop
fdivl
inc
push
xor
shlb
mov
imul
in
mov
add
mov
filds
test
push
add
orl
imul
lcall
mov
xor
fcoml
xchg
or
xchg
inc
jb
inc
into
dec
les
xchg
and
stos
cwtl
sbb
sbb
loope
add
lds
shlb
mov
sub
out
fucomp
jbe
faddl
xchg
cli
inc
xor
xor
cmp
mov
mov
jno
xor
dec
or
fisubl
shll
data16
je
es
scas
lods
mov
mov
mov
mov
clc
jl
fcmovu
dec
std
add
adc
and
aas
and
mov
jbe
lea
out
cld
fs
test
in
rolb
xchg
inc
dec
pusha
jecxz
notb
pop
and
jge
cs
xchg
hlt
lods
cmp
inc
loope
pop
dec
sbbb
pusha
add
cltd
scas
xchg
cwtl
xor
std
stos
adc
shrb
mov
push
mov
sub
in
shl
out
mov
adc
loopne
mov
xor
push
xor
xchg
jns
inc
fwait
jmp
jg
adc
cmp
loopne
sub
cmp
jg
and
mov
mov
nop
loop
ljmp
fsubrp
xorb
addl
xor
jne
sub
movl
cld
xchg
or
xchg
repz
mov
add
lods
std
inc
add
stos
shlb
cmp
fistl
mov
dec
cltd
and
les
das
or
and
aam
and
pushf
not
sbb
fcomps
jp
push
jle
pop
push
adc
dec
sub
sbb
cwtl
clc
dec
jne
pop
out
mov
or
in
add
jne
add
xchg
cmp
dec
mov
rcrb
ljmp
sbb
inc
fs
loopne
push
inc
xchg
mov
pop
xchg
and
js
pusha
lahf
loopne
test
jmp
sbb
rcr
inc
mov
add
repnz
xchg
or
pop
and
jo
mov
push
test
pop
adc
dec
mov
cwtl
or
cs
hlt
cs
add
jle
rcl
rcrl
and
xor
in
bound
mov
dec
loop
mov
or
in
cmp
rcrb
ret
cmpsb
imul
ja
add
fisubs
icebp
stos
insb
adc
xor
jae
aaa
add
nop
sqrtps
aam
insl
cmp
stc
pop
sub
or
fnstcw
or
loop,pt
shlb
shll
pop
and
flds
stc
das
mov
add
in
sub
jl
repz
pop
dec
leave
stos
cmp
xor
mov
outsb
rcrb
sarb
lock
stos
rcrb
out
loop
adc
cmp
sti
mov
data16
fmul
ja
sti
fsub
sbb
pusha
adc
mov
pop
sahf
push
jae
rclb
bound
test
mov
jl
fisubs
adc
xlat
lods
out
xchg
hlt
mov
pop
incb
out
test
popa
mov
mov
pop
pop
inc
xchg
lock
cwtl
mov
add
pop
and
or
mov
test
out
or
pop
outsl
arpl
sbb
push
mov
mov
push
push
cmp
bound
pop
add
mov
cmc
aam
xchg
hlt
cmpb
sub
test
test
jg
repnz
addr16
jo
repz
shl
mov
xorb
adc
call
cmp
mov
push
fldl
add
dec
mov
sub
xchg
and
scas
and
cmp
repnz
add
adc
lret
push
or
int3
mov
call
jecxz
mov
in
jns
and
xor
xor
dec
inc
push
cwtl
mov
dec
es
pop
mov
adc
das
mov
cmp
mov
and
pop
sbb
cmpsb
jecxz
shll
lock
mov
sub
or
aaa
or
fidivrl
lods
ret
jle
out
gs
scas
mov
jno
loop
rorb
add
adc
push
xor
test
cmp
push
xor
test
cmc
sub
inc
lock
jns
sahf
mov
arpl
inc
push
cmp
nop
imul
adc
add
dec
adc
lea
or
mov
gs
push
std
push
outsb
iret
ljmp
jae
test
jae
xchg
xchg
repnz
mov
js
scas
daa
mov
loope
loope
xchg
ret
shrl
mov
lret
mov
pusha
or
jno
pusha
push
xlat
push
push
cli
notb
test
mov
js
push
lds
jmp
pusha
inc
repz
push
or
mov
pop
je
iret
mov
mov
mov
imul
pop
sub
test
mov
ds
or
and
jne
mov
push
mov
mov
mov
jae
dec
cmpsb
into
jns
xchg
add
aas
xchg
jl
xlat
jns
sbb
fwait
aad
add
mov
idivb
add
jmp
insl
xchg
clc
xchg
cmp
push
jge
sbb
push
cmp
xchg
push
jnp
sbb
or
clc
sbb
rorl
out
jmp
mov
fidivl
arpl
sub
hlt
je
mov
test
sbb
outsb
add
andb
push
sub
imul
sub
popa
ljmp
push
push
aam
push
push
adc
popf
mov
filds
fistl
loopne
lds
enter
ret
lods
scas
popa
ud0
add
mov
ret
push
push
pop
add
jmp
dec
pop
std
push
lcall
repz
add
or
sub
dec
xorl
mov
in
mov
add
mov
pop
mov
sbb
lcall
jnp
mov
shrl
stos
inc
add
jb
mov
les
das
mov
sbb
or
push
xchg
and
mov
dec
movsb
rcrl
popf
fisttpl
out
add
shlb
push
or
sarb
out
ds
nop
ret
mov
mov
cli
sbb
addb
enter
ret
add
aaa
popf
jecxz
lret
adc
gs
jo
pop
leave
jbe
sbb
xor
lock
push
in
pop
popa
in
pushl
je
jmp
push
test
insl
cld
arpl
and
jno
in
adc
jmp
mov
push
mov
mov
cld
mov
push
repz
cmp
insb
pop
fwait
inc
adc
mov
out
pop
xchg
sbb
jae
cmp
in
mov
sti
mov
pop
sub
fldenv
into
xor
in
cmp
mov
outsb
pop
int
sub
loopne
out
and
mov
js
int3
test
dec
add
mov
jae
out
adc
xor
pop
xor
xchg
rcll
test
mov
mov
add
fdiv
stos
jg
ljmp
jo
cwtl
movsl
add
into
and
sahf
cmp
out
inc
dec
lcall
not
popf
stos
mov
pop
int3
pop
jp
and
inc
xchg
xchg
sbb
les
jmp
icebp
movsb
xor
insb
cmpsl
xchg
cmp
sbb
cs
ljmp
or
adc
pushf
dec
mov
addr16
out
xor
jb
test
cmpsl
xor
pop
cmp
xor
lret
sti
pop
cs
sub
inc
rclb
jno
push
out
xor
rcrl
pop
xor
mov
fadd
mov
jae
add
dec
adc
ret
sub
lods
fdiv
outsb
lret
cmp
xor
push
cmp
or
adc
add
jmp
push
add
stos
pop
loope
inc
sub
jbe
lods
sub
jmp
loop
aad
mov
push
sarb
adc
dec
aaa
nop
enter
cld
cmp
and
stc
testl
and
inc
hlt
cmpsb
imul
adc
bound
lds
pop
mov
sub
xchg
fcomps
xchg
lods
out
sub
cmp
pop
and
xor
stos
or
js
mov
loop
in
out
add
jge
fcomip
mov
sbb
mov
fcomps
shlb
adc
jnp
iret
xor
ljmp
pop
or
mov
cmp
sub
dec
add
mov
orb
xchg
leave
adc
push
aam
icebp
cwtl
aad
push
aas
ja
xchg
sbb
and
xlat
daa
stc
mov
cmp
flds
add
jne
pop
lea
and
call
push
cmp
js
mov
out
divb
sub
xor
std
add
ja
sub
faddp
test
and
mulb
mov
sbb
int
sti
mov
sub
sahf
cmp
pop
fstpt
xchg
in
out
shrl
int
out
cmp
iret
loope
repnz
jb
mov
jl
test
movsl
rorl
mov
fisttps
popa
subb
pop
out
das
jns
and
or
push
add
add
sbbl
push
sbb
dec
push
push
sub
int3
rcl
jns
dec
xchg
stos
jecxz
shlb
lods
call
insb
fisubl
pop
fisttps
sbb
lcall
imul
mov
sub
pop
inc
rclb
addl
lods
push
mov
cld
lock
or
jae
push
and
inc
xchg
xchg
sub
xorl
data16
dec
subb
pop
sbb
enter
push
cmc
cmp
xor
stc
lahf
icebp
or
add
push
pop
inc
daa
jno
cmc
sub
jl
and
xchg
insl
sub
fldlg2
xlat
cmp
imul
hlt
femms
dec
fbstp
das
ljmp
dec
xor
aaa
sbb
das
push
jnp
ds
xor
lahf
ret
arpl
pop
es
aaa
cli
mov
push
adc
xor
jo
push
adc
aam
cmc
fcmovbe
ret
push
mov
xor
ljmp
mov
jecxz
in
scas
popf
pop
jp
in
in
into
std
cld
int3
je
in
aaa
jp
sbb
adc
adc
ret
mov
int
xor
inc
jmp
sbb
insb
mov
dec
adc
and
test
jne
xchg
jb
cmc
loopne
mov
pusha
in
aaa
mov
xchg
and
add
je
dec
shlb
mov
sub
pushf
jno
jb
fwait
lret
call
test
mov
mov
sub
sub
xchg
sub
pop
popf
ss
fildll
xor
dec
sub
mov
fstl
pop
xchg
cmp
aam
enter
out
xchg
nop
push
jecxz
mov
pop
and
push
mov
jne
add
and
outsb
push
xlat
icebp
or
mov
push
pusha
mov
fs
cmpsb
cwtl
addr16
cmpsb
mov
ficoms
lds
adc
movsb
imul
hlt
cld
lahf
dec
lock
lret
insb
inc
mov
adc
push
push
repnz
adc
jnp
add
mov
imul
mov
jbe
in
aam
js
jle
xor
lods
outsb
lods
xor
movsb
sarl
pop
movsb
orb
push
mov
cs
sbb
xchg
push
pop
sahf
push
inc
inc
adc
pop
add
push
lock
jb
push
jne
jle
aas
ja
out
add
mov
addr16
fs
jne
int
xchg
shll
sbb
popf
sbb
iret
pop
fsubs
imul
jecxz
cmc
das
je
cmp
dec
ja
icebp
xchg
push
mov
xchg
dec
push
and
sub
xor
std
hlt
pushf
fsubrl
adcl
cmp
test
fs
shrl
std
iret
jns
pop
fsubr
inc
and
dec
arpl
cmpsl
or
fdivrl
not
loope
shll
ljmp
ret
dec
outsb
jp
mov
insl
sarl
jae
mov
ret
sbb
pop
xchg
pop
in
jg
movl
mov
xchg
shlb
dec
stc
mov
or
push
push
cmc
jno
or
adc
inc
mov
ja
jnp
push
push
push
mov
inc
add
cwtl
and
jbe
pusha
jb
pushf
pushf
xchg
subl
mov
mov
adc
subb
push
fwait
jb
push
mov
enter
add
push
sub
mov
pushf
mov
sbb
lcall
add
divb
cmpsl
subb
ds
stc
push
jns
in
into
test
popf
ror
sub
rcrl
jns
pop
call
outsb
xor
fmulp
outsl
push
fwait
sti
cli
xchg
loop
lods
sbb
and
pop
mov
nop
lods
icebp
sbb
and
ror
jmp
adc
test
xor
add
ljmp
xorl
sbb
decb
push
adc
add
add
das
mov
xor
iret
cmp
scas
cltd
sbbl
or
push
push
aad
fbstp
dec
xchg
rol
dec
and
jmp
sahf
not
inc
cltd
jb
jae
icebp
xlat
xchg
subl
cmp
adc
add
mov
pop
fcoml
dec
ficoms
bound
xor
adc
call
mov
adc
jbe
pop
ret
jmp
xchg
enter
sub
inc
inc
and
mov
lahf
mov
test
inc
cmp
adc
leave
xchg
and
and
push
lcall
pop
cmc
jmp
xor
mov
cld
pop
jbe
daa
pusha
pop
test
and
aam
cmp
push
lcall
mov
dec
push
aaa
test
ret
dec
ljmp
cmp
outsl
sbb
pop
cmp
mov
clc
inc
mov
cmpsb
sbb
dec
xor
rclb
sub
data16
daa
mov
lret
popa
repz
push
mov
rcrl
in
test
jmp
mov
and
insb
lret
xchg
incl
es
adc
mov
rolb
std
or
cmpsb
adc
pop
sbb
push
adc
push
push
sti
and
cmpsb
cld
jmp
fwait
pusha
std
cmp
sbb
rorl
inc
rcll
outsl
xchg
lret
ljmp
add
into
flds
or
popf
mov
xor
mov
xchg
imul
and
lock
data16
nop
push
cmp
mov
mov
mov
arpl
xchg
mov
mov
or
lock
repnz
and
mov
mov
popf
mov
dec
sub
rcll
out
divb
mov
iret
hlt
jg
clc
add
mov
mov
sbb
inc
and
clc
push
xor
jp
rcrl
out
push
add
jne
daa
xchg
jnp
sbb
dec
popa
xor
leave
jge
fistpl
es
faddl
adc
test
add
fcompl
xchg
mov
adc
ja
pop
cli
or
hlt
clc
add
pop
stos
lea
iret
jne
iret
mov
push
sub
xchg
add
adc
outsl
das
imul
popf
mov
faddl
fnstsw
pop
jmp
jno
and
cmp
lods
and
aaa
arpl
add
jle
mov
out
daa
fldcw
push
pop
je
roll
test
mov
clc
jnp
xchg
loop
inc
push
mov
cmp
jle
and
sub
loopw
fiaddl
push
decl
sarb
dec
sbb
out
hlt
imul
inc
jae
mov
and
mov
int3
push
aad
cmpsb
xchg
test
jb
jns
push
inc
imull
dec
jnp
pusha
mov
mov
repnz
cwtl
mov
xchg
pushl
jo
dec
xor
mov
cmpsl
repnz
test
dec
or
xor
movsl
rcrl
and
ss
jge
call
lods
cmp
jmp
ljmp
fsubrs
adc
xor
insb
xchg
cmpsl
cwtl
or
ret
loope
hlt
subb
sbb
shlb
cmpsb
lret
loope
mov
out
stos
in
push
lret
movsl
jg
sub
nop
into
js
stos
hlt
out
mov
shl
mov
scas
xchg
add
sbb
in
ret
mov
jle
adc
jbe,pn
mov
incl
xor
imul
sahf
cltd
idivl
stos
into
and
push
inc
adcb
sub
movb
inc
sti
out
inc
push
jnp,pn
dec
jle
and
xchg
aam
or
sahf
subb
iret
repz
movsb
fwait
mov
dec
dec
test
popf
fadd
mov
imul
popf
jne
xchg
add
rorl
pop
push
mov
lret
leave
push
mov
push
push
fadd
mov
jl
fisubrs
in
mov
or
stos
nop
repnz
dec
or
lahf
scas
mov
dec
adc
popl
jmp
or
scas
or
push
add
lcall
test
mov
xchg
sub
and
mov
js
sub
mov
push
fcomi
shl
adc
adc
int3
cs
fldt
fnsave
mov
jecxz
stos
mov
pop
pop
jno
lods
xchg
mov
sbb
add
cwtl
mov
inc
mov
sbb
push
mov
dec
enter
mov
mov
jp
add
mov
loop
mov
mov
outsb
aad
mov
insb
jns
cmp
push
xor
jmp
sarl
xor
jmp
mov
sbb
pop
pop
or
pop
pop
shlb
or
mov
mov
add
aad
pop
mov
leave
mov
into
sarb
push
push
ret
nop
inc
lret
movsb
adc
lret
or
std
jo
aad
fs
cli
xor
inc
js
lcall
aas
or
daa
xchg
scas
mov
pop
xchg
in
fistpll
pop
xor
or
xchg
or
xor
pop
sti
insb
cli
int
scas
mov
push
mov
mov
int
push
imul
cltd
loopne
push
call
int
add
inc
arpl
aaa
cmp
mov
pop
mov
and
sub
out
cltd
push
xchg
test
aas
leave
sahf
push
adc
inc
enter
or
pop
mov
push
push
jge
stos
mov
ljmp
jge
dec
jne
je
inc
iret
and
lret
xchg
mov
cs
leave
ffreep
adc
aam
add
pop
rolb
js
xchg
idivb
jnp
inc
jo
inc
sub
cmc
loop
push
xchg
and
scas
lcall
aas
mov
sbb
cmp
cmp
fnsave
out
inc
mov
sub
popa
xor
js
adc
and
cld
push
aad
inc
je
cmp
shll
push
xchg
add
fidivrl
sub
rcr
mov
adc
repz
movsl
cmovl
das
add
lret
test
cwtl
mov
push
imul
leave
push
rolb
aad
jno
das
mov
inc
shll
es
pop
out
arpl
cmp
lahf
aad
jno
jmp
dec
push
stos
cli
push
inc
or
jb
xchg
cmp
push
shlb
cli
mov
add
add
int3
orb
xchg
lods
mov
je
mov
jp
sti
pop
pop
sub
nop
mov
and
adc
fdiv
mov
cltd
push
xor
jle
call
repnz
les
lods
xor
pop
sub
cmp
lock
inc
int
hlt
xlat
shlb
adc
cmp
xchg
and
jle
fmul
lock
or
mov
cmp
mov
stos
inc
pop
movsl
insb
stos
test
jle
aaa
fimuls
push
pop
dec
cmpsb
fdivp
xchg
mov
out
jge
push
popa
ss
mov
fcompl
ret
jg
push
jo
lret
pop
sub
cmp
mov
imul
cmpsb
push
aas
imul
in
test
gs
adcb
imul
jmp
sbb
mov
xchg
and
movsl
inc
xchg
pop
mov
push
scas
shlb
mov
xchg
imul
and
pop
mov
cmp
shl
movsb
mov
popa
outsb
lods
sub
notb
or
addr16
popf
movsl
and
and
cmp
adc
mov
jbe
add
cwtl
movsl
shll
es
cld
dec
or
mov
outsl
test
mov
adc
fidivs
sarl
xchg
outsl
es
dec
add
dec
les
jno
movsb
hlt
xor
iret
cmpsl
stos
push
or
inc
mov
jae
xchg
xchg
pusha
call
test
shl
jmp
iret
test
jp
lea
mov
adc
daa
xor
and
xchg
out
cmpsl
in
pop
in
lea
pop
in
aas
mov
adc
int
stos
rcrl
loopne
xchg
in
leave
xor
repnz
jnp
xlat
cmp
popa
jge
lcall
jle
pop
push
ljmp
push
mov
insl
add
mov
cmp
jns
pop
jnp
repz
push
and
aaa
repnz
mov
add
sbb
outsl
dec
int
mov
sti
rcll
clc
push
adc
int3
int3
les
js
cmc
dec
enter
icebp
out
dec
xor
or
outsb
dec
in
sub
xor
adc
shlb
cmp
push
je
sti
shr
insl
scas
push
js
push
xor
or
mov
loopne
jl
push
mov
pop
dec
int
add
outsb
outsl
popf
xor
adc
stc
ss
test
add
in
int
fwait
cmp
mov
xor
sbb
pop
mov
rorb
loop
int
jb
movlps
jae
ljmp
and
adc
push
mov
add
cld
jmp
xchg
out
pop
inc
adc
or
lahf
mov
cmp
jmp
push
daa
fcomps
sahf
lods
js
aad
js
mov
leave
pop
inc
pop
int3
xor
jmp
bound
nop
fnstcw
std
mov
fcomps
sbb
cmc
insb
xchg
iret
call
lret
loope
dec
adc
or
lahf
jbe
mov
push
cmc
xchg
xor
mov
mov
add
scas
out
push
push
shll
sbb
outsl
and
nop
movsb
daa
mov
push
pop
fstps
sbb
movsb
jg
rolb
mov
cmp
xchg
stos
or
idiv
pop
scas
enter
imul
push
lock
and
aas
xorb
pop
cld
ja
inc
mov
dec
mov
pop
push
lret
dec
xor
lret
mov
sub
add
shr
jae
pop
sub
lahf
cmp
mov
pop
sti
xor
xor
arpl
cmp
cltd
push
lcall
mov
mov
sbb
jmp
dec
out
inc
test
cmc
jne
mov
jl
aas
jl
sbb
fmul
and
or
sub
cwtl
popf
cmp
or
xor
mov
mov
pop
insl
out
sub
pop
xor
xlat
fadds
in
clc
adc
sub
iret
cltd
shrl
iret
sbb
sub
inc
hlt
sbb
mov
in
icebp
xor
hlt
adc
in
cmp
xchg
push
imul
add
cmpsb
pop
mov
sbb
popa
mov
sti
xor
adc
cltd
stc
or
sub
outsb
pusha
jmp
mov
pop
lods
sbb
push
jb
jmp
daa
mov
in
in
filds
lods
sahf
lds
inc
jno
rcrl
xchg
xlat
xor
shrb
xlat
and
sub
pop
iret
insb
push
sbb
out
cmp
mov
hlt
arpl
and
loop
les
pushf
or
adc
mov
test
mov
movsl
add
jns
les
std
sbb
movsb
push
mov
dec
cmp
mov
inc
jo
aas
push
lds
mov
mov
dec
adc
pop
pushf
ficomps
mov
bound
mov
cmp
loopne
xor
inc
loop
pop
aam
nop
insb
mov
loope
test
nop
pop
mov
xchg
iret
jnp
les
fwait
xchg
inc
test
jns
or
out
stos
fnstcw
inc
clc
jne
stos
adc
xor
clc
imul
cmpsl
inc
adc
jle
test
mov
push
fbstp
jg
xor
loopne
mov
mov
enter
lods
ss
loopne
mov
mov
scas
or
fwait
call
cmpb
push
sbbb
cmp
mov
mov
imull
daa
notl
xchg
inc
jo
dec
jno
jae
mov
pop
xchg
mov
or
add
pushf
and
sub
in
sub
jb
jmp
movsl
sbb
in
mov
subb
mov
dec
sbb
or
mov
add
iret
xor
scas
pop
and
lods
sbb
pop
out
sub
shll
rcl
int
adc
mov
sbb
iret
lret
jl
sbb
mov
sub
pushf
mov
xor
jge
mov
pop
out
clc
mov
push
test
subl
dec
mov
mov
stos
daa
jae
cmp
mov
adc
lods
sbb
xor
push
mov
cmp
sbb
cli
cmp
pop
lds
sbb
mov
xor
dec
les
ss
add
push
xchg
cmp
in
push
popf
sub
iret
ret
push
jecxz
test
add
outsl
pop
push
push
shlb
add
jnp
sbb
test
cmpsb
in
out
xchg
and
mov
add
test
mov
xchg
mov
lret
call
push
cli
insl
movsb
jecxz
cs
test
sti
dec
cmpsb
popa
aaa
ret
xchg
lods
inc
cmp
shlb
ss
push
popa
mov
rclb
cmc
lods
movsb
mov
subl
push
and
ficomps
iret
xchg
jo
loope
popf
dec
xor
ret
clc
push
jne
mov
loopne
in
hlt
loop
xlat
mov
inc
mov
das
inc
xor
pop
mov
mov
mov
inc
rolb
xor
xchg
cli
shrl
jae
sub
test
rclb
or
notb
mov
hlt
dec
clc
adc
nop
cmpb
dec
lret
push
dec
lret
push
sbbb
lfs
mov
lock
test
pop
test
xchg
inc
testl
xchg
arpl
lahf
mov
daa
hlt
mov
cli
aas
mov
negb
jne
popl
cmpl
mov
out
leave
push
shll
and
cs
mov
je
push
push
mov
les
hlt
arpl
sbb
jp
fisubrl
daa
mov
push
cmp
repnz
cli
and
adc
sbb
mov
lods
popf
aad
test
mov
sub
aas
xchg
cwtl
jb
push
adc
shrl
test
push
loopne
push
rcrl
xchg
loope
xor
xor
push
xchg
push
mov
pushf
ja
mov
adc
iret
mov
pushaw
jb
enter
push
mov
jbe
push
cmp
stos
insl
sahf
sub
sub
sbb
xor
stos
pop
xor
enter
outsb
ds
lahf
and
outsl
add
adc
inc
xchg
mov
mov
cltd
daa
in
cmp
push
push
int3
xchg
pop
xor
insb
sub
push
repnz
std
in
shll
repz
sub
mov
fsubs
add
add
test
popa
lock
leave
jp
hlt
loopne
sbbb
lds
push
fistpl
ljmp
pop
mov
out
pop
xor
cltd
jns
or
and
push
movsl
orl
ds
adc
test
lret
push
cli
int3
dec
mov
mov
and
fisubs
jl
cmp
xor
adc
test
sbbl
push
pop
adc
sub
xchg
inc
push
inc
into
mov
pop
add
mov
jo
jo
pop
xchg
hlt
das
pusha
and
sbb
fildl
hlt
data16
aam
xchg
cmc
dec
shll
imul
push
fstpt
add
shll
lahf
out
and
enter
and
cld
mov
inc
testl
or
dec
mov
dec
pop
push
xchg
test
jae
cld
mov
inc
loopne
adc
xlat
cmpb
fimull
xchg
mov
cmp
push
inc
lods
jne
mov
xchg
and
ret
push
out
and
gs
pop
clc
add
jns
jnp
icebp
js
les
out
mov
or
pop
push
mov
sti
or
inc
je
add
cmc
mov
lods
shl
pop
add
aas
out
xlat
jno
or
mov
test
js
pop
sub
jmp
lea
outsl
repz
sub
stos
loopne
in
enter
movsl
rcl
or
sbb
mov
fisttpll
ljmp
gs
lea
sbb
dec
dec
pop
dec
cmp
push
mov
adc
jnp
pop
cmc
jae
pop
jbe
mov
push
lock
inc
stc
mov
mov
sbb
mov
xchg
lods
dec
xchg
and
divb
sub
push
adc
inc
stc
push
or
cmp
mov
sbb
fists
test
adc
dec
xchg
pop
mov
or
dec
jmp
push
dec
cmp
xchg
test
xlat
jg
out
mov
jle
xlat
out
ret
pusha
sbb
or
adc
ljmp
sbb
fildl
mov
imulb
push
subb
lcall
fsubp
cmp
xchg
out
push
inc
xchg
jnp
out
outsl
mov
cmp
pop
mov
mov
mov
xchg
and
call
pop
addb
out
movsl
dec
nop
cld
popa
leave
push
shlb
test
mov
arpl
dec
es
sub
or
add
adc
std
das
inc
pop
mov
out
ss
arpl
adc
movsb
mov
in
je
adc
leave
xchg
push
mov
mov
aas
or
mov
les
fbld
mov
mov
inc
inc
iret
inc
pop
xchg
shlb
adc
adc
les
cmp
dec
mov
aad
lods
cs
xchg
sbb
lds
rcll
fidivrs
sbb
insl
pop
mov
mov
mov
and
xchg
add
xchg
push
or
out
mov
mov
cmpsb
jp
inc
test
sub
cmpsl
push
xchg
and
aad
cltd
popf
push
lret
jmp
enter
mov
push
daa
cmp
xor
sti
into
scas
add
in
int
sbb
dec
mov
fcoms
bound
repnz
fst
sub
jp
pop
push
inc
ror
dec
inc
sbb
add
leave
pop
jg
cmp
xchg
dec
test
push
repnz
sti
push
and
jmp
fildll
loop
add
std
mov
lea
or
or
div
roll
jns
dec
add
leave
xchg
leave
in
data16
shll
adc
ficoms
jge
push
sbb
cwtl
gs
cmp
cmp
mov
lret
jl
shrb
and
push
cltd
and
push
xor
das
mov
inc
rorl
xchg
daa
push
stos
mov
push
push
rcrl
cmpsl
adcl
ja
mov
pop
mov
loope
jo
imul
cmp
int
cwtl
and
test
xchg
cld
pop
cmp
in
add
imul
cmc
xor
jo
movswl
shl
xchg
dec
xor
fwait
and
inc
or
dec
rol
test
sub
scas
pop
imul
mov
add
fiadds
mov
hlt
or
loop
pop
push
and
and
orl
int
movsb
clc
stc
test
test
inc
jbe
mov
mov
loopne
pop
repnz
pop
stos
out
or
int
push
or
mov
test
hlt
sbbb
push
xchg
and
and
adc
add
bnd
mov
arpl
jecxz
rcrl
xchg
mov
sub
ret
repz
mov
in
pop
and
shll
mov
push
mov
adc
add
push
nop
nop
in
fistpll
pop
mov
scas
xor
fbstp
test
in
lods
pop
repz
je
xor
push
int3
jge
addb
daa
mov
insl
rorb
inc
out
jns
jmp
push
es
nop
dec
jmp
shlb
pop
aaa
mov
mov
pop
stc
sbb
sub
bound
fisttps
xchg
mov
xchg
sbb
sub
pop
leave
pop
lcall
sbb
sub
out
sub
scas
fsubl
ljmp
scas
or
mov
mov
into
hlt
xchg
mov
aaa
in
sbb
xchg
leave
inc
mov
dec
in
test
jecxz
sub
popf
mov
cmc
sbb
or
jb
mov
std
fcmovnb
fisttpll
pop
add
mov
adc
and
cmp
mov
mov
das
mov
sbb
xor
jecxz
sub
push
push
jae
xor
cmpsl
push
icebp
jmp
sahf
repz
sbb
cmp
addr16
aas
cmpsb
aad
jg
sbb
bound
jmp
dec
xlat
andb
orl
hlt
mov
cmp
orb
xchg
pusha
sub
xchg
test
loopne
inc
sub
add
shld
inc
dec
dec
add
pop
pop
lea
sar
push
mov
andb
sub
add
gs
das
fcomip
xchg
cmpsl
lret
daa
sub
mov
in
fidivl
push
inc
imul
push
xchg
les
cmp
cmp
out
mov
cmpsl
repz
or
hlt
fwait
adc
cmp
mov
pop
xlat
push
add
xchg
cmp
fdivl
aaa
pop
or
push
mov
add
adc
ljmp
cld
adc
into
push
rol
sub
sub
push
jge
sub
lea
loop
stos
push
or
mov
mov
mov
loopne
test
cmp
lock
call
dec
cli
adc
push
jo
xchg
dec
pushf
fwait
gs
push
jbe
popa
mulb
cmp
cwtl
andl
bound
dec
jae
lock
push
xor
mov
mov
imul
xor
stc
sub
loop
icebp
adc
inc
and
sbbl
outsl
and
jecxz
mov
and
fstpt
sub
pop
jo
and
sarl
rcll
jle
lea
test
xchg
adc
jnp
or
mov
cmpsb
mov
jb
sub
mov
xor
pop
mov
sub
or
mov
pop
loop
and
jb
int
xchg
adc
sbb
jb
les
add
pop
lret
jno
out
test
jl
arpl
push
insl
inc
xchg
xor
lods
push
js
add
ja
pop
sbb
scas
push
push
inc
in
sbb
jb
push
mov
hlt
nop
xor
test
ljmp
addr16
jno
cli
pop
lods
pop
xchg
ljmp
push
add
ror
test
addl
mov
push
inc
pusha
dec
in
es
push
adc
mov
pop
aas
cmpb
cmp
in
sbb
mov
js
pushl
rorl
mov
add
shl
rcrb
fcmovb
xorl
loopne
mov
push
sub
dec
or
fwait
push
rcr
push
inc
jecxz
movsb
add
mov
xchg
and
out
sbb
push
lret
sbb
push
inc
xchg
pop
repz
movsl
scas
push
xchg
test
scas
outsl
shlb
je
scas
divl
ss
and
and
or
sbb
push
divl
jns
insb
sbb
sahf
ljmp
or
and
inc
popa
outsl
and
enter
inc
sar
test
pop
mov
push
aas
xchg
mov
fldt
jo
jp
push
or
dec
into
dec
sbb
les
mov
mov
push
or
cmp
sub
test
mov
or
stos
jns
sahf
or
jg
jne
adc
mov
icebp
and
xor
xchg
and
jecxz
pushf
pop
bnd
out
pop
sbb
orl
rcl
or
mov
add
out
shrl
es
pusha
push
jmp
cli
jp
jno
out
aaa
jmp
jo
mov
into
mov
add
add
sti
pop
xor
push
inc
lock
add
pop
sbb
fwait
bswap
dec
jecxz
xchg
xchg
mov
push
iret
popa
ja
jns
and
aad
pop
add
sub
popa
fwait
shll
call
and
pusha
dec
fldenv
push
pop
xchg
cmpsl
int3
jecxz
cs
cmc
or
and
mov
pusha
rcrl
xor
add
mov
add
or
dec
hlt
mov
inc
lcall
aas
ret
adc
or
fsubl
aam
test
xlat
mov
jnp
mov
push
sbb
or
jge
add
mov
sbb
loope
fdivs
xor
stos
cltd
add
das
out
pushf
xor
loope
push
or
lock
fdivrl
ss
movsb
rcll
jle
fcoms
or
stc
inc
pop
dec
fs
push
jp
pslld
fwait
movsl
dec
sahf
jnp
sub
xor
insb
outsl
inc
cltd
incb
fdivrl
mov
out
movsl
movsb
fstl
mov
fmul
lahf
mov
cs
xor
popa
cmp
divb
push
iret
loopne
clc
lret
push
sub
lods
out
rorb
clc
xor
mov
mov
jno
xchg
mov
xchg
fimuls
lret
shll
sahf
test
jb
cwtl
lret
xor
into
or
js
cmp
out
xchg
add
cwtl
arpl
push
and
jbe
adc
sbb
jbe
sbb
jge
cmpb
subb
inc
sbb
enter
adc
and
xor
ror
push
int3
hlt
or
mov
test
pop
sbb
insb
pop
sbb
subb
addb
lahf
adc
shll
and
xchg
ret
push
je
repz
cmpl
pop
shrl
leave
xlat
push
mov
inc
adc
aas
pop
hlt
in
hlt
ret
addb
adc
or
or
sahf
xor
sti
cmp
jecxz
push
fstpl
xor
mov
xor
loope
out
and
mov
mov
jo
ljmp
cmp
push
adc
cs
jle
cmp
jp
sub
or
dec
jno
adc
lret
movsb
lret
sub
jne
cmpsb
sbb
ss
ror
cmp
adc
fwait
scas
int3
push
inc
pop
pop
xchg
inc
sub
test
add
cmp
pop
iret
test
fcom
jns
mov
jae
fsubrs
movsb
or
jb
loopne
andb
mov
shrl
push
xor
jg
mov
pop
cltd
mov
stos
dec
lods
cmp
sahf
int3
fnstenv
je
pushf
add
pop
pop
push
outsl
jnp
dec
adc
cmpsl
push
imul
cmp
cmpsl
shl
jge
push
xchg
leave
sbb
daa
inc
jp
xchg
sub
std
dec
lret
mov
lret
stos
dec
jb
gs
pop
and
mov
pop
add
xor
sbb
lret
leave
push
test
sub
mov
pop
test
lret
out
and
push
dec
outsl
jns
cs
sahf
or
jmp
jmp
xchg
movsl
bnd
out
mov
cltd
xchg
into
lock
call
movsb
lods
ret
xor
ret
cltd
xchg
mov
rcll
mov
mov
popa
jne
loopne
popf
lea
jmp
cmp
in
xchg
mov
repz
xor
popa
and
ljmp
push
aad
mov
aaa
xchg
dec
popa
in
mov
mov
fwait
mov
sti
mov
je
shl
ljmp
push
and
jne
outsl
fwait
popf
call
mov
imul
jge
fidivs
and
ds
mov
addb
popa
filds
ds
mov
sub
cmpsb
xor
add
pusha
sbb
fmulp
inc
sti
subl
and
pop
cmpsb
lock
jp
fnstenv
mov
xchg
es
xchg
mov
inc
ret
push
cmp
dec
inc
xchg
out
xchg
jecxz
cmpl
aam
pop
mov
bswap
push
daa
je
clc
cwtl
sbb
cmp
sbb
push
imul
scas
inc
popf
add
or
lods
sub
adc
test
icebp
rolb
rcrl
scas
and
push
inc
imul
and
inc
repz
int
or
movsl
xor
lds
adcb
cmc
je
pop
adc
repnz
nop
pop
out
in
mov
adc
clc
fs
aaa
xchg
jp
stos
outsb
enter
cli
add
into
jns
mov
dec
push
xchg
lds
adc
ret
jle
mov
cli
lret
add
call
popf
push
aaa
loop
adc
out
aam
mov
addr16
es
and
adc
and
jge
jmp
fbld
mov
in
addb
lahf
lret
xchg
mov
rolb
int3
repnz
push
scas
lods
cmp
inc
fsub
push
testb
sti
mov
test
insl
lock
sbb
pop
mov
jle
pop
fisubs
mov
aas
adc
fdivrs
mov
xchg
sbb
pushl
or
test
xchg
or
adc
fldcw
add
fstps
imul
daa
mov
jecxz
or
iret
jle
les
sti
aas
jecxz
jmp
push
xor
pop
outsl
push
inc
push
imul
leave
lods
out
insl
mov
dec
aaa
cmp
add
shll
cwtl
push
xor
fstpt
jns
jbe
out
shll
mov
dec
jb
and
loopne
sbb
hlt
adc
jge
adc
scas
popa
mov
push
adc
ja
pop
ds
xchg
pop
mov
data16
cld
sub
xor
cmp
fdivl
lea
push
lods
pop
cmp
addr16
push
push
xchg
cmp
push
pop
repnz
fisubrl
pop
jmp
dec
leave
scas
sbb
ret
repz
fld
cwtl
mov
sbb
mov
pop
sbb
push
nop
inc
repnz
dec
rcl
jno
rorl
cmp
or
inc
fnstenv
hlt
cmp
xor
mov
rcrb
fcmovb
movsb
jnp
sahf
scas
jge
cmp
adc
xchg
mov
cmp
fcompl
ja
testb
test
in
jecxz
les
arpl
pusha
mov
shlb
lahf
mov
ror
sub
cmp
outsl
and
inc
test
cmp
mov
xor
jp
sbb
jns
dec
and
jge
sbb
mov
faddp
pop
jne
adc
aas
adc
or
adc
pop
mov
fsubrl
sub
and
and
dec
xor
cmp
gs
xor
sbb
je
inc
push
add
lods
dec
and
sub
xchg
xchg
mov
lock
int3
outsl
scas
rcll
cltd
sub
xchg
add
jl
iret
xchg
mov
int3
pop
bound
sub
sub
loope
ret
sub
sahf
cwtl
dec
sub
aaa
xor
cmp
push
push
lock
mov
dec
cwtl
cmp
adc
push
add
sbb
enter
fs
mov
daa
jmp
sbb
movsb
inc
sbb
adc
cmp
icebp
pop
in
iret
jo
outsb
pop
ret
adc
inc
cmpb
or
sahf
js
xchg
dec
in
sbbb
out
out
jmp
sti
les
or
fiaddl
xor
add
ret
ss
xchg
mov
dec
push
stos
in
inc
xchg
clc
xor
dec
bound
adcb
adc
mov
in
mov
add
inc
push
ficoms
pop
addl
test
shll
aas
push
iret
xchg
add
nop
testl
add
xchg
lods
xor
dec
scas
mov
jb
mull
push
sbb
out
push
xor
movb
psadbw
mov
popa
lods
push
pop
inc
loopne
mov
dec
repz
adc
mov
adc
fcom
and
pushf
fptan
inc
fwait
nop
dec
sbb
or
repnz
repnz
loopne
je
or
and
ss
dec
test
push
pop
or
jnp
mov
loopne
pop
jl
aaa
popf
std
or
pop
das
cli
mov
das
iret
enter
mov
imul
adc
popa
add
xor
adc
into
test
or
in
fisttps
repnz
mov
jmp
lds
andb
mov
sub
pop
pop
push
ficoml
js
adc
call
dec
adc
adc
movsb
outsb
cmp
les
mov
je
lods
and
mov
sbb
and
enter
in
mov
das
das
ljmp
js
lods
and
imul
pop
orl
add
push
gs
rcll
dec
mov
cmp
scas
add
call
dec
push
sahf
and
fisubrs
popf
inc
mov
xchg
push
or
xchg
repnz
ficoms
push
mov
jge
push
daa
pop
imul
rcrb
ret
ljmp
imul
sub
movsl
lods
hlt
push
js
sarb
push
sbb
mov
pop
std
dec
int
mov
and
mov
push
fwait
in
mov
sbb
and
inc
jae
inc
fstpl
sub
dec
xor
and
fldcw
push
add
push
mov
pop
add
push
pop
std
adc
aad
pop
xchg
stos
adc
inc
std
push
insl
insb
pop
mov
imul
mov
mov
je
rcr
cmp
sub
sub
loop
and
stc
add
add
mov
pop
inc
and
cmpsl
dec
ja
call
sbb
in
push
pop
lret
mov
adc
fisubrl
loop
subl
lock
stc
je
shlb
daa
cmp
add
ljmp
add
int
dec
popf
into
imul
outsb
mov
cmp
maxps
out
cmp
jmp
add
lds
xor
js
cmp
sub
add
lahf
mov
enter
inc
xchg
js
xor
push
icebp
loope
leave
inc
insl
xor
sbb
sbbb
scas
lahf
mov
subb
or
cmc
jnp
xchg
clc
addr16
aad
push
std
rolb
test
imul
jle
aad
leave
jbe
outsb
dec
add
mov
daa
adc
push
jge
stos
jg
push
fildll
dec
and
inc
lods
aam
push
out
insb
repnz
loope
sub
jns
repnz
fbld
lcall
cmp
xor
inc
xchg
jecxz
rcrb
add
push
imul
xor
mov
jae
and
pop
hlt
rclb
jmp
divl
push
xchg
cmp
repz
push
out
push
adc
shrb
mov
ffreep
cmp
outsl
inc
xor
push
pop
adc
int
xor
inc
movsb
cltd
cmpsl
mov
icebp
ret
cwtl
lods
xor
orl
test
clc
data16
xchg
add
movsb
and
or
xchg
pop
stc
dec
and
out
inc
insl
mov
popf
dec
mov
int3
add
sbb
ljmp
repnz
out
xchg
pop
iret
test
loopne
repnz
sbbl
xor
into
push
sub
stos
adc
imul
out
cmp
xchg
cwtl
xchg
jecxz
out
adc
std
jne
adc
and
or
into
inc
sbb
and
or
stc
add
lahf
jle
daa
mov
test
loopne
rolb
cmp
fs
in
add
mov
mov
pop
outsb
pop
jbe
nop
cs
cmp
xchg
imul
pop
xor
popf
jne
pop
imul
sub
and
stc
sbb
psllw
sub
xorl
push
rcl
enter
cmpsb
mov
std
xor
add
xchg
dec
mov
repnz
js
in
fs
ljmp
fldenv
xchg
cmpsl
out
rol
outsl
sti
es
clc
adc
loopew
ficoms
pop
fs
aam
rolb
push
lds
and
or
mov
rcr
mov
aam
dec
or
lcall
insb
stos
and
xor
outsb
jle
jmp
gs
in
jne
mov
xor
fidivrs
cmp
push
inc
or
inc
int3
aad
movsb
aam
dec
mov
cmp
std
je
push
cmpl
push
outsl
aam
insl
insb
decl
mov
add
mov
aam
jae
sub
punpckhwd
fwait
mov
call
xchg
lcall
lods
xor
inc
hlt
ja
int3
push
and
jns
jg
lahf
iret
mov
dec
lret
test
jl
mov
jmp
dec
in
rcll
or
sarb
and
pop
in
dec
ret
cli
add
mov
xchg
or
movsb
and
pop
test
orl
xlat
addb
xchg
sbb
fdivs
xor
data16
out
xor
imul
xor
lds
inc
pop
mov
lock
pop
pop
jg
or
lods
jp
dec
sbb
adc
mov
jl
xchg
int
out
and
outsb
cmp
dec
pop
jbe
ret
pop
test
dec
fidivl
loop
cltd
adc
popf
sub
jmp
jno
pushf
lock
fsubr
addr16
jnp
mov
xor
cld
pop
add
daa
jne
mov
call
fdivr
cs
lret
int3
insb
pop
mov
dec
xchg
loopne
jg
outsb
sub
inc
mov
or
adc
inc
fsubrl
xor
add
and
mov
push
mov
mov
sub
loop
pop
fcmovne
mov
imul
test
pop
lcall
jae
mov
mov
roll
adc
jbe
inc
add
daa
mov
ss
lahf
std
add
xor
adc
jmp
leave
xchg
pop
fcoms
je
pop
aaa
jecxz
cmp
out
cmp
test
fs
sub
pop
cld
jg
wrmsr
out
pushf
xor
nop
jb
mov
xor
add
fsubrl
sbb
inc
mov
lods
mov
xchg
dec
xchg
inc
sbb
mov
sbb
aaa
mov
dec
inc
or
icebp
lret
iret
push
mov
ds
cwtl
jnp
jae
and
mov
iret
movsl
test
xor
lret
xorb
dec
aas
cmc
in
dec
dec
idivb
pusha
lahf
lret
inc
push
das
das
xchg
pop
mov
nop
sub
jbe
dec
subb
sub
test
push
and
cmc
jnp
jae
iret
lahf
popa
xchg
js
stos
jmp
addr16
cltd
mov
push
je
sub
lock
xorb
dec
idivl
mov
cmpsb
aaa
cmp
sub
sti
inc
push
inc
mov
or
jne
push
push
sarl
pop
pop
fnsave
arpl
sub
mov
cmp
jl
std
out
inc
inc
xchg
ss
xorb
push
adc
flds
fadds
loope
push
pop
shrl
stos
xchg
iret
mov
sti
pop
and
inc
xor
mov
jp,pt
data16
and
stc
xchg
loopne
je
mov
lods
pop
movsl
add
jnp
mov
fidivs
mov
push
xchg
pop
leave
jb
inc
gs
inc
mov
call
xor
push
or
adc
sub
jecxz
xor
push
mov
fsubrs
sub
aas
xchg
mov
mov
cmpsb
pop
outsl
out
mov
mov
push
addr16
mov
push
mov
fdivrl
imul
cmp
dec
lods
mov
xchg
mov
fisttps
mov
scas
das
test
push
xchg
inc
lods
mov
mov
subl
xchg
sti
call
jnp
sub
xor
mov
push
ja
bound
and
xchg
add
inc
dec
rcrb
mov
aam
aam
mov
or
cmp
js
push
mov
sbb
out
idivl
mov
imul
in
and
or
mov
outsb
xchg
dec
and
leave
adc
pop
in
xchg
mov
mov
inc
xor
es
adc
xor
push
hlt
xchg
sub
ret
push
push
cmpsl
daa
dec
mov
frstor
xchg
mov
add
pop
cmpsl
sbb
sarl
cmp
mov
mov
in
and
js
or
adc
push
pop
sbb
insb
add
sub
jbe
nop
pop
fs
and
test
pop
xchg
mov
sub
dec
mov
dec
xchg
xchg
push
rep
push
fsubl
inc
pop
movsl
dec
adc
repnz
sub
mov
adc
movsb
lss
imul
icebp
arpl
in
sbb
pop
jecxz
mov
test
daa
jge
lahf
test
cmp
adc
xchg
stc
cmp
xchg
xchg
jl
push
out
imul
xchg
int
shlb
mov
cmp
stc
cmp
test
aaa
push
test
inc
adc
ss
popa
mov
addr16
in
mov
imul
mov
adcb
xor
inc
add
mulb
popa
mulb
subb
xchg
aaa
mov
or
test
push
out
cmp
push
or
lahf
adc
lea
out
mov
lods
mov
push
in
roll
ret
in
fstpl
out
pusha
xor
mov
xchg
cmpsl
dec
loope
push
mov
cltd
popf
dec
in
in
enter
push
hlt
test
dec
pop
imul
lods
or
mov
lds
xchg
or
cltd
jb
bound
je
das
out
ret
cs
dec
xor
xor
xlat
adc
in
orl
push
push
jnp
enter
cmp
enter
fsubrs
test
mov
xchg
cmpb
ds
test
pop
inc
jo
imul
ja
push
les
and
and
sbb
roll
mov
add
cltd
psrad
sti
clc
push
xchg
mov
mov
mov
je
push
jns
mov
pop
popf
js
scas
inc
xchg
fcomps
fistl
cmpsl
and
aas
aad
xlat
cmp
push
ror
adc
jne
lea
call
ret
or
pop
aad
popf
stos
sbb
icebp
ret
mov
je
push
xchg
in
jle
mov
sbb
in
or
mov
mov
pop
xor
lret
cmp
mov
pop
dec
jecxz
cmp
lods
out
in
adc
insl
pop
loopne
outsl
push
pop
mov
nop
sti
pop
fdivr
sahf
lea
dec
jo
popa
das
popf
lock
sbbl
imul
inc
or
dec
add
jbe
icebp
or
cmp
dec
sub
fwait
dec
incl
add
mov
inc
mov
in
mov
mov
push
mov
xchg
mov
scas
int
in
roll
shlb
jns
xor
popa
dec
outsl
add
subb
jns
xor
or
fmull
popf
mov
sub
iret
insl
mov
sub
pop
idiv
cmc
sbb
lods
sahf
sub
lret
or
jne
cmp
mov
jnp
outsl
insl
shl
cmc
sub
xchg
fisttpl
pop
arpl
setge
shlb
push
cltd
mov
bound
scas
push
push
or
sub
mov
fdivrl
orl
iret
add
push
add
insb
cmp
movsl
mov
dec
sbb
ljmp
sbb
cmc
cld
test
in
pop
aam
add
add
cmc
arpl
pop
cwtl
mov
popf
push
int
dec
pushf
mov
jmp
mov
pop
mov
jno
add
sub
stos
pop
lret
mov
ljmp
push
jne
add
xchg
dec
testl
add
mov
je
mov
pop
xchg
cs
sub
fidivrs
cmp
loope,pn
add
xchg
mov
lods
movsb
shlb
push
imul
push
mov
shrl
inc
leave
bound
aad
push
out
or
rorl
aaa
rep
push
sarb
getsec
cmc
test
out
inc
push
dec
lea
ljmp
mov
data16
push
mov
and
aas
xchg
push
je
inc
push
cltd
push
data16
lret
adc
jbe
pop
add
add
shlb
mov
and
push
pusha
dec
out
sub
das
push
ds
les
test
sbb
xor
mov
mov
ds
push
scas
cmp
sar
sbb
cmp
mov
push
mov
decl
cli
or
rcrb
mov
cmp
pop
sbb
into
ret
mov
pusha
in
add
sbb
jnp
imul
pushw
jns
je
or
sbb
jnp
cwtl
dec
cmp
mov
mov
sarl
test
push
ret
fidivrs
xchg
sarb
pop
pop
in
pop
scas
bound
jns
or
dec
push
pop
fmul
sete
jb
addb
lcall
and
stos
xchg
addl
out
lcall
out
and
sub
in
and
lret
sub
mov
hlt
ljmp
rclb
jb
lcall
mov
lods
cmp
rcr
outsl
imul
push
jg
push
mov
or
xor
mov
xor
add
or
pop
or
push
xchg
xchg
pop
in
cmp
push
push
dec
mov
mov
sbb
sub
jbe
leave
pop
jbe
push
add
dec
push
mov
sbb
unpckhps
imul
jle
mov
push
add
call
pop
push
call
or
add
or
add
mov
cmp
mov
outsl
jg
jb
dec
jmp
in
popf
jle
or
adc
adc
bound
stos
call
sbb
xorb
inc
add
inc
ljmp
push
xchg
movsl
outsb
fisubl
push
out
pop
adc
push
nop
sahf
xor
outsb
cmpsb
lods
push
cwtl
sub
mov
rcrl
in
xor
inc
ficoml
push
inc
or
int
push
push
mov
add
dec
mov
adc
cmp
lds
lret
or
jp
test
jmp
cwtl
out
mov
testl
and
mov
imul
mov
out
ffree
push
adc
rorb
pusha
mov
ja
cmp
fxch
push
inc
out
lods
xor
test
sbb
out
fsub
aad
out
sub
sbb
stos
push
jb
hlt
and
rcl
push
xor
ret
or
sarl
jg,pn
add
xchg
arpl
xchg
std
xchg
adc
cmp
mov
pop
and
pop
lret
rep
push
rcl
mov
test
imulb
or
add
xor
dec
xlat
pusha
lea
mov
shll
call
add
dec
fcomp
in
mov
data16
loopne
stos
jp
fsubrl
dec
jo
add
bound
popa
or
inc
adc
push
xchg
shl
loopne
iret
lock
sub
enter
sub
cmp
stc
jge
xorl
inc
cld
sub
inc
test
lret
push
sub
fbstp
dec
std
int3
dec
sbb
in
sbb
pusha
mov
push
or
push
mov
addb
jmp
pop
and
push
pshufw
sub
jmp
xor
cmp
jmp
cli
jae
les
into
xchg
mov
cwtl
insl
sub
adc
and
jne
clc
cmp
xchg
pushl
pop
cltd
imul
lcall
sbbl
xor
std
add
sub
cmpsb
repnz
loopne
inc
cld
xchg
mov
pop
and
sti
sbb
pop
or
sub
rcrl
stos
les
les
cmp
ss
xor
xchg
jno
push
mov
fists
mov
ds
setge
jp
test
addr16
or
inc
jp
nop
movsb
pop
push
out
xchg
cmc
test
fs
ss
pop
leave
xor
push
cs
xchg
push
mov
xor
cs
cmp
lcall
test
scas
shlb
cmp
dec
pop
pusha
mov
dec
nop
push
adc
sub
mov
in
clc
xor
movsl
scas
xchg
xor
stos
lock
jmp
iret
mov
mov
pop
push
mov
lret
mov
shll
loop
inc
in
insb
stos
std
iret
arpl
pushf
popf
iret
inc
mov
push
lret
repz
mov
dec
mov
xchg
adc
jg
test
adc
xchg
jae
orl
mov
mov
test
ror
fstl
ljmpw
dec
push
sbb
lock
cmp
in
lea
inc
aam
out
hlt
mov
int3
cli
std
jno
es
rolb
bound
movsb
lcall
xchg
out
mov
stos
xchg
scas
inc
lods
mov
test
fwait
adc
ret
test
rolb
dec
lock
sbb
xor
cmp
and
and
jmp
adc
pop
mov
or
adc
or
imul
movsb
xor
inc
add
pop
dec
xchg
or
fidivs
icebp
cmp
pop
icebp
out
sbb
jb
mov
dec
and
pop
sbb
jne
and
adc
out
jle
xor
sbb
dec
mov
std
cmp
fs
mov
in
jle
cmp
push
fcoml
fstpl
movsl
sahf
mov
mov
ret
dec
pshufw
and
into
adc
cmp
das
sbbl
xchg
enter
lcall
and
gs
nop
lock
mov
mov
out
cmpsb
in
pop
aas
dec
iret
jmp
stos
pusha
sbb
test
loope
ret
mov
test
jl
cmpsb
xor
fsubrs
fwait
sbb
cli
and
jno
lods
dec
cmpsb
jecxz
mov
inc
mov
push
fidivl
inc
imul
repz
in
xor
sbb
cmp
cmpsl
mov
bound
push
shlb
mov
sub
mov
jmp
test
pusha
push
daa
shll
mov
sti
push
sti
loopne
xchg
repnz
and
lods
xor
add
cld
ret
enter
cmp
sbb
mov
iret
mov
xor
fcomi
int
adc
and
jge
pop
lahf
nop
jp
stos
lds
mov
mov
xchg
or
in
loopne
dec
ss
scas
lret
incl
outsl
pop
stos
adc
xor
imul
sbb
pop
imul
xchg
mov
lods
xor
mov
mov
fsts
lcall
mov
cmp
jns
lods
mov
int
dec
push
shll
jl
sub
sahf
adc
ss
lret
scas
sahf
je
sub
aas
mov
enter
mov
adc
cmpsb
je
out
pop
inc
test
jmp
push
cmp
popf
xchg
shr
ret
in
addr16
xchg
cmc
or
insl
xchg
in
mov
or
out
in
jne
sbb
shlb
call
xor
push
in
or
add
inc
mov
hlt
outsb
pop
mov
sub
jnp
leave
iret
in
mov
movb
push
mov
push
jne
pop
and
outsl
jge
dec
sub
jge
mov
mov
movsl
lods
int
pop
or
dec
rcrb
jmp
jo
scas
fildl
push
jo
out
nop
test
cmp
andb
fwait
xchg
push
cltd
repz
adc
aad
sbb
mov
scas
adc
jg
push
test
loop
je
rcr
leave
in
iret
or
mov
sub
sub
xchg
outsl
loop
insl
mov
hlt
mov
out
inc
outsb
mov
cmp
iret
std
insl
xorl
or
pop
call
mov
aaa
leave
in
pop
scas
ret
dec
sarl
jp
out
push
adc
ret
repnz
dec
movsl
dec
inc
movsb
sbb
or
out
xor
lea
xchg
dec
cld
pop
sti
in
enter
aaa
stc
lret
imul
sub
clc
mov
push
sbb
out
insl
addr16
lret
jbe
and
test
and
pop
and
fbstp
fidivrs
mov
add
jl
orl
cmpsb
jbe
inc
cmp
mov
jl
fmulp
rol
ljmp
mov
mov
sbb
cmp
mov
stc
loop
leave
pushl
jecxz
gs
leave
cmp
js
cmp
out
dec
xchg
and
mov
stos
xor
or
jnp
dec
call
rcrb
std
sub
dec
mov
nop
push
xor
aaa
add
or
aam
in
or
fst
push
mov
adc
cld
test
add
mov
push
imul
push
dec
cmp
cltd
arpl
push
fldcw
pop
mov
mov
adc
or
insl
outsb
mov
inc
sbb
nop
cwtl
xchg
push
jl
jg
loope
push
decl
clc
cmp
cmp
loopne
cmpsl
add
mov
int
sub
cmp
clc
mov
adc
mov
in
xor
and
loope
sub
jnp
cmc
sub
xchg
fsubp
inc
sbb
shlb
cmp
jns
adc
jl
leave
and
out
pushf
mov
adc
xchg
inc
mov
scas
int
mov
cs
stc
arpl
lret
sub
lods
pop
sub
imul
pop
jle
in
jb
pop
dec
xchg
test
fidivs
push
adc
mov
mov
adc
sahf
push
aam
mov
nop
fucomi
ret
scas
push
out
rcrl
xchg
cmpsl
cltd
or
bound
fs
popa
xor
imul
dec
daa
ret
fucom
push
or
sub
outsl
lods
cld
cmpsb
xor
dec
xlat
shlb
pop
pop
sub
mov
movsl
movsl
jmp
test
cwtl
icebp
fbld
cmp
cltd
sbb
stc
inc
dec
mov
and
jno
xrelease
sbb
inc
pop
inc
mov
stos
and
idivb
cmc
sbb
ja
dec
aaa
inc
test
xor
addr16
push
mov
pop
in
out
in
cwtl
repnz
je
sarb
push
mov
inc
js
mov
or
mulb
dec
test
sbb
mov
dec
mov
iret
out
ss
xor
repz
sub
push
lahf
lret
repz
jmp
sbb
cmp
sbb
pop
out
mov
dec
adc
pop
ljmp
ss
mov
je
sbb
ja
adc
lods
insl
call
movsl
xor
mov
mov
adcl
mov
sarl
mov
es
out
sub
and
lea
push
outsl
shlb
loopne
jne
jae
stos
jge
mov
movsb
mull
scas
cmpsl
stc
cmc
leave
sub
jl
call
dec
pop
in
adc
add
xorb
mov
movsb
incl
cmp
pop
push
add
aas
and
loopne
mov
cs
jl
stc
gs
mov
shrl
sbb
into
data16
or
stos
inc
pop
mov
fwait
mov
scas
dec
sbb
arpl
nop
dec
nop
pop
mov
mov
xor
mov
jns
jns
xchg
jg
stos
loopne
push
imul
push
mov
sub
jo
pop
jle
adc
xor
icebp
jb
out
and
arpl
pop
mov
inc
mov
lock
aam
mov
adc
xorb
mov
lcall
shll
push
jecxz
cmp
sti
fwait
test
mov
jmp
xor
adc
jmp
sbb
inc
loopne
ret
mov
insb
dec
negl
mov
adc
icebp
shlb
add
sahf
data16
cmc
xor
lahf
popa
shll
cmc
cmp
pop
sbb
test
or
aaa
and
sarb
jae
in
sarl
pop
xor
hlt
jecxz
mov
mov
out
insl
test
in
mov
in
push
pop
pop
into
pop
inc
fwait
sub
mov
hlt
mov
jae
add
or
push
mov
fisttpll
jle
fcompl
fs
cli
sbb
orl
enter
int
lahf
fdivl
jbe
cld
rol
lcall
adcb
lock
stc
scas
cld
daa
sub
scas
loopne
cli
pop
fisubrs
ds
mulb
out
xchg
ja
not
add
inc
cmp
sub
call
push
rorb
jbe
xchg
inc
pop
addr16
xchg
sbb
hlt
cmp
or
jmp
neg
jne
movsl
jns
jecxz
bnd
pusha
call
scas
aaa
mov
test
sub
sahf
sub
pop
mov
insb
adc
js
xor
push
inc
clc
push
into
jle
shr
jmp
jns
mov
shll
pop
cmp
mov
push
xor
filds
xor
add
xchg
pop
sub
sbb
dec
int
aad
mov
xor
or
lds
xlat
mov
pop
lret
adc
push
lcall
leave
pop
adc
mov
vaddsd
jno
xor
inc
aas
push
mov
adc
add
ret
xchg
stc
jne
mov
and
xlat
hlt
es
adc
sub
mov
cmc
jle
or
xchg
icebp
lods
push
cmpsl
loop
pop
dec
enter
dec
and
lea
mov
cmp
aam
loop
ficoml
ret
mov
iret
adc
jp
dec
not
in
xchg
fiaddl
fildll
mov
loopne
jo
aas
xchg
movsb
jo
xor
cmp
inc
fildl
pop
icebp
or
dec
xchg
jge
divb
movsb
cmp
ds
xor
daa
movsb
stc
mov
pop
xchg
or
daa
xchg
lret
lcall
pop
jno
test
cltd
call
dec
in
mov
or
push
nop
mov
pop
pop
outsl
mov
daa
mov
adc
dec
mov
xchg
jmp
daa
push
fwait
into
pop
ja
cs
xor
in
sub
imul
ljmp
aas
out
lock
sbb
movsl
xlat
ret
mov
jae
imul
xor
xor
jne
js
in
pop
xchg
outsl
sub
in
andl
jbe
sahf
mov
sub
add
mov
or
sti
jecxz
or
fmuls
sub
cmp
insb
stos
adc
xchg
or
push
mov
push
arpl
popa
push
cmp
mov
mov
jp
add
mov
fadds
or
lcall
and
mov
pop
mov
stos
sub
mov
mov
pusha
xlat
or
test
fcompl
push
in
lahf
pushf
mov
stos
pushf
aaa
loopne
push
negl
mov
cmp
and
dec
ljmp
push
dec
int
xor
inc
mov
lock
and
fldenv
stos
pop
adc
dec
gs
stc
lret
pop
sahf
sub
inc
cmp
cwtl
xchg
ds
or
mov
insb
xchg
rcrl
jb
dec
pushf
insl
jp
mov
lods
ljmp
and
mov
adc
sbb
in
ss
into
push
cmp
fucomp
test
add
cld
insl
jns
out
add
push
dec
dec
lods
out
jle
lock
std
clc
push
mov
div
in
test
mov
and
dec
cli
ret
cltd
cmp
dec
mov
pusha
xor
cmp
jbe
adc
test
sti
aas
rorl
mov
pop
repnz
mov
sahf
adc
xor
js
adc
mov
jecxz
mov
jbe
and
mov
xchg
jge
cs
mov
cmp
int
je
aad
jo
jg
pop
jl
cwtl
push
and
cmp
mov
movsb
lahf
outsb
lcallw
add
add
cli
fcmovb
add
pop
pop
int
mov
or
jle
ja
cld
add
mov
out
movsb
call
dec
add
push
jae
push
aaa
fiaddl
add
call
mov
sub
inc
ja
in
and
add
aas
pop
and
cltd
cmpsl
outsb
shll
push
mov
sub
mov
fmull
xor
pop
loope
in
cmpsb
test
icebp
xor
and
mov
and
inc
loopne
mov
sbb
mov
pop
adc
sbb
lds
pop
push
lock
rolb
add
imulb
pop
cltd
pusha
sahf
mov
and
shlb
ljmp
bound
pop
cmpsl
les
jns
mov
mov
cmp
mov
lcall
out
mov
push
jge
and
mov
inc
outsl
inc
mov
sbb
lret
rorl
int3
test
sbb
stos
mov
or
or
je
jle
pop
pop
enter
call
out
jge
mov
mov
movsl
repnz
adc
or
mov
hlt
mov
mov
and
out
pop
out
and
xchg
mov
sub
push
dec
rorl
int3
ss
push
inc
and
bound
jge
push
jbe
and
jg
pop
cmpsl
cld
movsl
mov
arpl
dec
filds
or
sbb
ljmp
hlt
in
test
adc
cs
mov
sub
test
push
inc
scas
mov
mov
mov
jbe
xor
push
pop
sbb
popa
popa
cltd
gs
ds
add
repz
test
stos
mov
fadds
shrl
mov
cmp
fistps
cmpsl
sti
cwtl
arpl
fbld
fsubrs
rolb
sbbl
xchg
sub
mov
cmc
jb
push
data16
les
sub
xchg
cld
xchg
cmpsb
pop
nop
and
dec
cmp
or
orb
push
adc
adc
movsb
dec
iret
out
xchg
and
dec
xchg
and
in
fnstcw
test
jg
jns
dec
movsl
cmp
mov
xorl
push
mov
push
sbb
loopne
data16
jnp
sub
sarl
sbb
lcall
pop
xlat
int
add
ss
test
jnp
into
push
jbe
mov
ljmp
addr16
push
jae,pt
xchg
cmpsb
rclb
jmp
jb
fsts
adcb
push
iret
js
fs
into
mov
dec
ret
dec
pop
rorl
jle
lods
cmpsb
cli
cld
mov
inc
ret
fisubs
mov
dec
xchg
insb
pop
sbbb
pop
push
jge
sbb
push
mov
scas
mov
inc
imul
int
fwait
int3
filds
loope
dec
push
lds
jmp
mov
xchg
scas
xchg
xor
jnp
mov
mov
into
ret
sbb
cmp
aad
cmpsl
lret
mov
into
ficomps
inc
dec
mov
pop
fdivp
sub
iret
sub
cmp
mov
xor
es
pop
dec
mov
and
add
testb
cmp
lcall
and
fsqrt
insl
stc
cmpsl
iret
xchg
mov
gs
in
test
iret
adc
jne
lods
mov
fs
in
popa
mov
enter
in
inc
ja
xchg
pop
in
mov
mov
dec
incb
shlb
jb
push
subl
add
shll
push
adc
clc
push
lcall
jo
xchg
dec
loope
ds
cmpsl
in
mov
pop
fs
jae
in
xchg
rcll
cmp
push
or
sbb
repnz
clc
icebp
fwait
push
xor
dec
xor
xor
sbb
cli
or
mov
inc
mov
cmc
pop
xchg
xchg
pop
repnz
jg
scas
stc
loopne
icebp
rcr
enter
call
call
fsubrs
mov
cmpsb
pop
mov
sarb
orl
sbb
lods
mov
push
jo
dec
pop
xor
neg
fmulp
mov
mov
jbe
xchg
imulb
dec
cld
push
adc
push
pusha
insl
fwait
mov
out
std
sub
test
mov
push
in
and
jae
dec
sbb
push
push
loope
push
mov
sbb
or
dec
sub
ljmp
fwait
mov
inc
mov
and
pop
mov
jg
inc
mov
jmp
shll
lret
test
cld
test
lock
js
je
je
mov
xor
mov
aad
adc
mov
pop
push
mov
je
mov
icebp
mov
clc
test
test
imul
pop
jge
jb
mov
add
clc
leave
mov
lret
sub
gs
outsl
lods
loop
sbb
fnstcw
fidivrl
lds
xchg
fs
pop
jnp
add
push
ljmp
loopne
arpl
cmp
dec
fcoms
data16
xchg
cwtl
repz
push
in
loope
scas
mov
inc
sbb
test
mov
dec
push
add
popf
mov
into
iret
xor
sarl
sub
push
pop
shll
cmp
pop
push
and
lea
push
imul
or
scas
inc
inc
jecxz
sti
insl
xchg
rcll
into
std
sbb
mov
xchg
jnp
pop
loopne
cmpsl
and
fildll
pusha
clc
cltd
scas
insb
push
or
xchg
aaa
in
ja
fs
test
lcall
push
mov
xlat
sahf
sbb
clc
jb
fcomi
push
aad
xchg
clc
xor
jg
or
add
mov
jl
adc
fnstenv
and
in
mov
xchg
ljmp
or
push
xor
sub
mov
mov
xchg
pop
mov
repz
aas
mov
scas
sbb
inc
sahf
dec
or
ja
addl
mov
add
pop
pop
push
iret
xor
pushf
mov
into
cli
ja
mov
loop
fcoms
jnp
das
les
in
xorl
aad
xchg
in
fldcw
imul
sub
add
and
pop
stos
xor
dec
pop
call
push
repnz
inc
inc
jns
mov
mov
cmpsb
add
ljmp
fidivrl
subb
xchg
and
outsb
mov
sar
xor
cld
call
mov
mov
pusha
mov
mov
mov
cmp
subb
sbb
xor
in
ror
pusha
dec
sbb
and
dec
mov
aaa
inc
cld
call
int
push
jp
inc
pop
clc
loopne
movsl
push
pop
pushf
imul
jb
cmp
inc
hlt
data16
int
out
mov
pop
mov
aas
push
and
sbb
fcompl
mov
cld
out
leave
mov
mov
cmpsl
movsb
ds
ret
mov
insl
xchg
xchg
push
rcr
add
or
imul
mov
cmp
pop
cmp
ds
lods
lcall
int3
iret
fisttpl
push
fcmovne
shl
ret
sahf
sbb
pushf
jbe
loope
xor
dec
mov
dec
pop
test
mov
clc
ret
xor
lahf
cmpsl
cmp
das
cmpl
lret
or
lahf
scas
mov
sarb
xchg
shll
out
cmpsb
cltd
out
and
sbb
xchg
pop
jb
xor
test
int3
imul
and
jbe
out
jmp
bound
pop
sbb
mov
adc
adc
push
lods
cmp
xor
xchg
rclb
lcall
cmp
ret
sarl
sahf
push
xchg
add
sbb
pop
sahf
add
or
mov
les
push
adc
iret
insl
and
inc
and
aad
rep
xchg
dec
gs
jno
mov
dec
mov
sbb
dec
ret
sti
mov
xchg
dec
sti
add
jbe
pop
mov
fnstsw
fwait
scas
mov
dec
or
test
clc
adc
adc
sbb
sbbl
add
jbe
je
jae
in
xor
fisttps
xor
mov
or
inc
sbb
jbe
jnp
pop
or
scas
jp
adc
adc
stos
mov
in
sub
jbe
adc
pop
icebp
sub
addb
xchg
iret
dec
test
cmc
andl
nop
popf
loop
jp
pop
shlb
pop
sti
cs
pop
inc
or
mov
push
mov
xchg
push
sub
sbb
mov
sahf
pop
or
sti
rcll
xor
mov
into
roll
jnp
js
aad
sbb
push
lcall
fldt
fwait
push
insl
movsl
repz
test
in
fs
stos
push
mov
push
inc
jne
push
out
loopne
les
int
mov
call
dec
data16
sbb
cmp
add
incb
add
xor
cmpsl
cmp
rorl
test
daa
dec
xchg
aad
sbb
xchg
and
mov
mov
fisttps
dec
jns
cmp
int3
leave
sub
pop
mov
pop
repz
inc
pop
sub
cmp
push
inc
pushf
mov
jg
inc
pop
sub
mov
dec
push
push
test
xlat
imul
xchg
push
sti
adc
cmpsl
push
and
scas
mov
mov
dec
push
add
push
push
pop
enter
inc
mov
testl
pop
loop
lret
and
mov
add
gs
add
lods
mov
cmc
cmpsl
fs
push
sbb
push
jle
dec
incb
or
gs
mov
push
addw
loope
test
in
test
into
fldcw
push
out
add
add
jecxz
je
jbe
mov
addr16
out
movsl
mov
cltd
outsl
std
call
mov
xor
sbb
pop
xchg
cmp
sbb
movsb
xor
and
mov
mov
pop
xor
jle
jo
outsb
cmp
cmp
fs
in
inc
ret
inc
aaa
xor
jbe
mov
mov
fldenv
stc
test
dec
sub
hlt
cwtl
pushf
movsb
xchg
es
inc
cmp
and
pusha
in
jmp
dec
adc
fistpll
mov
lcall
pop
fidivrs
add
dec
stc
mov
inc
jge
xchg
xchg
aam
sahf
cmp
or
xor
adc
out
push
and
popa
or
mov
xor
in
mov
jne
cmp
test
jecxz
inc
lods
and
mov
adc
notl
push
mov
enter
mov
xchg
jmp
notb
and
gs
testb
lahf
inc
jmp
aas
test
sbb
sub
rcrl
or
mov
sbb
xor
cs
lret
sbb
ljmp
mov
sahf
sbb
cli
jmp
add
xlat
je
xor
stos
mov
sub
and
fisttps
lea
pop
and
dec
lock
pop
adc
mov
push
pop
hlt
aam
push
xchg
fwait
xchg
lret
icebp
pop
or
push
mov
aaa
lcall
divb
leave
test
xor
cmp
ret
xor
mov
xor
sub
mov
cld
push
out
hlt
std
cltd
mov
insb
shll
pop
jne
pop
pop
movsl
lods
mov
sbb
enter
cmp
negb
das
add
cmp
inc
fldl
cmc
ja
fmull
lret
pop
jl
loopne
mov
loope
test
sub
lret
xchg
cld
inc
not
sub
cld
push
xor
fcmovne
fs
stos
cld
inc
ret
dec
out
shr
in
push
adc
mov
incl
adc
test
mov
aaa
mov
xchg
fmulp
dec
daa
mov
aaa
sbb
shll
lea
xchg
or
push
cmp
push
bound
iret
xlat
repz
loopne
jle
flds
cmp
mov
ss
scas
ret
rorb
fists
dec
jns
xor
cli
addb
mov
jns
rcll
mov
adc
outsb
push
inc
add
aas
mov
push
out
cmovno
lahf
daa
mov
repz
add
out
push
mov
arpl
pop
pop
jge
pop
fsubs
sub
rorb
or
jbe
jbe
lods
xor
push
push
push
jo
sbb
test
add
cli
and
dec
andb
or
jbe
fadds
and
mov
test
test
xchg
mov
pop
ud1
in
jp
nop
lods
mov
in
mov
in
xorl
int3
mov
xchg
aad
jnp
ss
lcall
and
imul
cmp
push
adc
shrl
pop
mov
cmp
mov
das
rcll
cmc
sbb
imul
jne
mov
jmp
stc
cmc
cmp
repnz
jo
push
xor
rcrl
aad
mov
mov
outsb
dec
js
sub
inc
shrb
inc
mov
lds
mov
add
mov
fsubrl
or
fwait
inc
adc
pop
lea
cs
icebp
rcrl
xchg
xchg
xchg
gs
or
jmp
push
adc
std
pop
out
xchg
add
mov
scas
cs
pop
insl
sbb
cmp
call
pop
jno
add
insb
xorl
int
sbb
cmp
sbb
les
cli
jge
arpl
lret
movsl
fcomi
les
dec
insl
int
jnp
js,pt
mov
mov
or
std
les
faddl
xlat
jno
iret
xchg
dec
pusha
les
lods
adc
mov
or
in
push
cmp
inc
adc
lods
addr16
cwtl
out
ret
fwait
jae
xchg
sbb
jmp
cmp
inc
cmpsb
inc
arpl
dec
setnp
adc
sub
leave
outsb
pusha
and
inc
mov
dec
test
xor
cwtl
and
cmp
call
cmp
das
pushf
pop
dec
xchg
xlat
aaa
sbb
or
pusha
jp
daa
gs
pop
inc
cmc
rdmsr
loope
test
mov
xlat
movsb
inc
sub
dec
jecxz
add
adc
jecxz
lock
mov
inc
pop
cmp
out
xorl
fistps
mov
fisubrl
jg
push
int3
out
insl
mov
test
or
or
pop
sub
mov
jecxz
jl
xchg
cmp
and
dec
sbb
scas
and
aaa
adcl
mov
popf
lret
add
insl
or
repnz
xchg
outsl
ret
mov
sub
xchg
pop
push
repz
fistl
pushf
shll
cwtl
int
jno
test
lcall
jno
pop
pushf
push
aam
mov
mov
push
mov
mov
cmpsb
scas
add
clc
push
push
adc
xlat
mov
in
sub
dec
sub
popl
addl
les
ret
fsubs
rcrl
mov
push
insb
imul
sahf
jl
jo
cmp
movsb
xchg
push
ja
stc
xor
popa
sti
xor
xchg
pop
gs
ret
mov
adc
pop
and
mov
fsubs
lret
push
les
jecxz
jg
mov
dec
movsb
mov
adc
pop
sbb
test
xchg
dec
add
xchg
insl
xchg
ficoml
dec
into
sub
fdivrs
fldl
stc
cmp
jge
add
pop
push
xchg
fs
xchg
push
test
xor
adc
jnp
cvtpi2ps
hlt
icebp
add
imul
inc
outsb
cltd
int3
xor
cmp
pop
ret
js
outsl
sbb
addr16
clc
btc
rcll
sub
sbb
andb
mov
scas
mov
sbb
test
std
mov
add
jne
aaa
mov
jo
cmp
std
enter
popa
inc
lds
scas
xchg
pop
shlb
sub
push
std
adc
daa
cmp
dec
das
movsb
in
dec
fs
movsl
sub
fdivrl
mov
lret
push
jle
mov
lahf
push
adc
pop
or
in
cmp
adc
xor
mov
xchg
cmp
imulb
sbbl
insb
sbb
lcall
imul
test
xlat
hlt
xchg
jne
fwait
cwtl
lods
sbb
test
xchg
enter
pop
jge
add
cli
rcr
lods
sub
cld
push
xor
pop
cmp
aaa
and
lock
adc
and
cmp
jg
mov
adc
rolb
or
lret
dec
jns
xor
mov
daa
mov
mov
repnz
scas
call
pop
ss
or
pop
mov
pop
ljmp
enter
and
push
adc
cwtl
ret
mov
stc
icebp
icebp
shl
mov
hlt
mov
int3
jne
popf
popa
mov
and
jge
repz
push
roll
idivb
sub
call
fcoml
xor
add
cwtl
pop
ficoml
arpl
sahf
mov
push
jg
add
leave
sbb
pop
lea
negl
dec
mov
into
push
iret
mov
xor
adc
push
jbe
push
mov
cmpsl
mov
mov
enter
into
push
in
xchg
or
pop
inc
or
subb
jmp
mov
xor
pop
pop
test
clc
ret
in
adcb
inc
push
inc
dec
and
adc
xchg
mov
pusha
leave
pop
cmp
movsl
repnz
xor
sbb
out
popf
lret
sti
lods
lods
add
push
sbb
mov
cmpsb
cmp
xchg
jns
and
and
jp
and
lods
ljmp
sbb
and
lret
fs
sbb
push
and
bound
push
iret
xchg
js
fs
repnz
xlat
mov
inc
xchg
pop
lret
push
rorb
fstl
mov
jno
xchg
pop
das
dec
add
cmp
mov
loope
hlt
xorb
mov
cld
cmpb
inc
mov
mov
js
cltd
nop
call
ss
je
inc
jae
mov
mov
clc
and
bound
pop
cmp
adc
stc
fwait
mov
push
mov
movsb
xchg
mov
fcoms
or
aaa
je
mov
dec
and
xor
mov
or
mov
lods
or
dec
inc
inc
aaa
push
aad
cmp
xor
cs
push
xor
fimuls
and
mov
cmp
inc
push
cld
mov
dec
int
popa
mov
loope
jp
add
nop
insb
mov
sarb
les
inc
hlt
fstps
and
cmpb
and
jge
dec
clc
gs
jne
mov
sub
lock
out
es
scas
mov
out
xchg
cmp
cld
mov
shr
ss
clc
pop
ja
out
mov
rcr
mov
mov
mov
sbb
out
sti
das
dec
hlt
ret
lret
pusha
cmc
test
imulb
mov
loopne
jmp
mov
add
cmp
into
cmp
jl
inc
or
subb
in
movsb
sub
loop
loop
icebp
adc
in
imul
jp
or
repz
ret
xor
dec
aam
cld
jmp
pop
cmp
cld
push
in
jle
and
ret
push
pop
push
mov
faddl
lahf
or
mov
mov
lea
inc
sub
sbb
pop
ljmp
push
test
out
clc
mov
sti
je
ss
insb
push
pop
shrb
sbb
push
xor
mov
dec
out
aad
push
repz
xlat
loopne
cmpsl
in
into
mov
fstpl
cmp
lret
xor
fs
xor
nop
pop
and
inc
jno
popf
jg
mov
enter
ror
dec
pusha
fisttpll
arpl
sub
inc
sub
test
xlat
xor
mov
add
jbe
loop
ds
and
in
ds
and
sti
push
lods
push
scas
addb
rcl
cli
fistl
dec
or
or
cltd
jo
and
hlt
cmpsb
fisubl
fs
je
rorb
push
inc
mov
cs
lods
mov
jecxz
push
aad
mov
adc
mov
rorl
pop
lods
xor
aas
xor
pop
xchg
fldt
arpl
scas
sar
mul
mov
cmp
pop
cmp
pop
mov
dec
jnp
adc
adc
repz
pusha
cld
in
add
shlb
dec
fsubl
pushf
aad
add
fucomp
mov
in
test
and
adc
xchg
sbb
pushf
pop
cmc
xor
sub
push
into
pop
test
mov
addb
pop
inc
fsubrl
and
aad
jge
sbb
int
loopne
and
cmpsl
adc
adc
push
xor
inc
rcr
fsub
sbb
adc
cmp
fiaddl
and
push
icebp
pop
inc
loopne
imul
pushf
lds
inc
inc
daa
add
mov
mov
sbb
movaps
call
aaa
popf
adc
mov
les
mov
mov
sbb
xchg
sbb
pop
cmp
sub
and
out
fadd
pop
hlt
cwtl
mov
aad
pop
mov
inc
push
ret
or
loop
mov
std
dec
outsl
or
leave
or
push
in
lock
add
out
rcr
sub
int
mov
jb
out
jle
lahf
ja,pn
mov
divb
or
or
pop
aas
mov
jmp
loope
aam
shll
imul
ja
jae
ficomps
mov
imul
outsb
xor
mov
mov
pop
or
xchg
cmp
aad
insl
push
and
mov
daa
aas
mov
enter
scas
sbb
sub
lods
ss
add
push
rclb
dec
mov
mov
dec
push
mov
fstpl
nop
inc
outsl
and
inc
mov
push
clc
or
loope
repz
mov
shrb
pop
test
mov
cmp
cmpsl
lock
lods
ret
js
mov
ret
mov
sbb
or
xor
jne
push
aas
mov
push
int3
push
sarl
mov
sbb
push
cli
hlt
gs
gs
sbb
dec
movsl
xchg
inc
inc
icebp
dec
mov
adc
imul
inc
je
pop
out
rcl
imul
lea
push
popf
inc
inc
das
in
adcb
push
pop
jl
cmpsb
jg
pop
mov
sub
hlt
jge
divl
add
outsb
xor
test
imul
sbb
cmp
int
bound
in
sub
outsl
lret
clc
mov
int
xchg
idiv
nop
push
jne
inc
push
pop
repz
xchg
cmp
lcall
push
movl
inc
xchg
ret
test
jnp
int
inc
fdivrp
inc
repnz
popf
jb
nop
xchg
add
mov
jb
or
loopne
bound
mov
sbb
jge
and
and
xor
fistpl
cmpsl
mov
cmp
inc
arpl
scas
iret
pop
xchg
mov
loopne
add
rcll
test
cmpsb
xor
xchg
add
ja
add
mov
dec
lea
mov
push
aaa
out
je
push
cmp
lds
stos
cli
hlt
fldl
cmp
xor
stos
jne
cmc
stc
cmp
arpl
cli
lret
xchg
dec
mov
iret
cli
inc
test
pop
loopne
dec
rcl
jmp
adc
je
push
mov
scas
sub
jnp
jo
in
cmp
sbb
lds
pop
or
push
or
aaa
sub
xchg
mov
sbb
or
aas
pop
jg
outsl
ljmp
aaa
jo
push
fidivrs
or
cwtl
test
push
jg
in
rcrb
push
loop
dec
mov
xchg
fsubrl
out
scas
sbb
cmp
xchg
icebp
adc
icebp
cmpsl
orb
fisubs
push
in
jmp
out
add
pop
dec
sub
movsl
mov
sti
xor
jecxz
mov
shll
fs
pop
inc
dec
xchg
movsl
mov
adc
ljmp
xchg
add
daa
fcoml
rolb
pushf
xchg
mov
adc
push
aam
push
je
push
sub
jle
adc
cmc
cmp
sbbb
cmp
jl
imul
sbb
pusha
jl
or
sbb
push
scas
and
jo
mov
int
adc
imulb
ret
aad
mov
sub
jne
lcall
push
popa
jg
or
push
clc
scas
and
lock
sub
adc
and
leave
jecxz
or
dec
in
add
xchg
mov
shr
jb
mov
dec
fwait
pop
int3
adc
jmp
sahf
mov
cld
and
arpl
adc
insb
xlat
sbb
adc
scas
cmp
inc
out
fbld
cmp
xorl
mov
mov
test
or
decl
push
mov
jnp
shrb
add
arpl
xchg
dec
test
in
jb
adc
sbb
fsubs
rol
sahf
rol
fwait
out
xchg
sbb
imul
iret
jecxz
rclb
sahf
aad
xor
std
loope
inc
lahf
push
xor
jle
inc
xor
out
mov
scas
div
ret
xor
in
dec
in
sti
push
ja
lcall
ffreep
or
cmp
pop
push
enter
jne
add
add
lds
dec
scas
mov
adc
jo
or
cs
daa
cmp
add
pop
cwtl
or
mov
inc
jge
aad
inc
mov
dec
xchg
adc
or
dec
push
pop
dec
hlt
lock
sahf
xor
test
xor
in
add
cmpsb
shl
fdivrs
aam
lock
jl
and
dec
mov
test
cmc
ss
mov
out
and
sbb
cmp
or
das
mov
dec
lret
data16
arpl
xor
aas
aaa
jo
mov
pop
es
sbb
pop
adc
xchg
sbb
or
push
mov
sbb
sahf
mov
dec
hlt
call
mov
sbb
mov
mov
imul
add
push
mov
xchg
or
pop
sub
aaa
adc
or
push
adc
mov
sbb
fnsave
idivl
aas
mov
pusha
lds
inc
sbb
stos
xchg
jne
loop
lea
cli
xchg
testb
ret
dec
pop
fs
mov
std
jle
andb
imul
ret
mov
push
pop
shl
xor
cmpsl
mov
movsl
cwtl
decb
pop
outsb
movsl
fwait
push
lcall
cwtl
sbb
popa
dec
lcall
dec
xor
adc
cmp
fldl
jns
pop
fistps
test
int3
push
push
scas
repz
pop
jmp
mov
imul
xchg
ss
mov
mov
or
sar
dec
adc
xchg
popf
in
pop
int3
nop
imull
or
pop
pop
js
jmp
hlt
or
roll
add
jp,pt
dec
sub
loopne
nop
xchg
jl
iret
fwait
cltd
std
in
sbb
out
sbb
sahf
add
inc
add
and
outsb
mov
outsl
mov
add
dec
xor
or
inc
inc
push
invd
mov
and
jge
scas
jge
imul
mov
das
outsl
loop
es
jo
push
or
push
mov
jl
lock
push
push
add
setg
and
xorb
inc
cmp
mov
dec
fnstcw
mov
insb
sub
fdivl
add
jge
and
pop
pop
and
cld
inc
loopne
xchg
lods
push
int3
adc
xchg
fstl
xor
call
inc
push
movsl
clc
nop
ljmp
add
ret
push
cmp
jnp
dec
mov
inc
push
dec
add
add
pop
imul
mov
sub
jl
push
out
idivb
movsl
sub
imul
sbbl
andl
and
xchg
jle
je
jbe,pn
mov
sub
push
push
stc
push
setp
es
inc
loop
push
or
aad
or
fcompl
inc
icebp
scas
mov
sbb
inc
dec
in
sahf
in
push
cmp
xchg
int3
in
test
fists
and
mov
fcomip
cltd
xchg
inc
jbe
dec
nop
inc
mov
push
cmp
adc
das
mov
jns
aaa
inc
add
ljmp
gs
ret
fisubs
ja
add
sti
inc
pop
sarl
subl
mov
push
push
cmpsl
sub
push
push
cmp
push
ja
xor
cli
insb
mov
mov
out
cmp
jb
lods
mov
jle
adc
sub
orl
dec
pop
clc
mov
ret
add
inc
ds
xchg
popf
lock
cmp
dec
test
outsb
or
stc
inc
leave
loopne
vpunpckhbw
arpl
cmc
dec
add
ja
xchg
bound
in
inc
push
insb
fcoml
xchg
sub
cmpl
shlb
mov
xchg
mov
mov
sbb
sub
or
xor
aad
es
add
stc
dec
enter
mov
sbb
pop
mov
sub
stc
xchg
lret
lret
dec
decl
cld
into
pop
and
push
das
mov
mov
hlt
and
mov
enter
loop
sub
call
ret
mov
adc
mov
and
sbb
xor
mov
mov
fidivl
xor
movsb
iret
jmp
mov
fs
fcoml
roll
hlt
mov
or
in
aam
mov
mov
cmpb
mov
pop
xor
push
icebp
push
add
insl
pop
in
jmp
sub
inc
dec
pop
pop
cmpsb
or
pop
in
add
das
xor
pusha
push
testb
mov
outsl
mov
xor
xor
cmp
or
jg
adc
push
sbb
xchg
jl
add
aam
xchg
lds
fmuls
fcompl
rcll
das
dec
cmp
cmp
sbb
lods
fcoms
out
lea
cmpsb
pop
stos
or
dec
pusha
cld
iret
rolb
ficoms
and
xchg
jg
sahf
mov
mov
into
out
and
outsl
and
mov
fidivrs
jae
call
inc
or
stos
and
jne
add
pop
push
lahf
lret
popf
xchg
mov
movsl
mov
test
out
pop
nop
mov
xchg
inc
fsubrs
dec
mov
lock
arpl
lcall
mov
lret
dec
scas
lods
orl
add
jb
imul
scas
jns
lcall
es
lret
cmpsb
mov
loope
pop
xchg
mov
push
shl
js
pop
repnz
jae
push
cs
mov
mov
addr16
shlb
ret
subb
hlt
mov
data16
sti
pop
lret
mov
cmpsl
imul
push
pop
fidivrs
jl
inc
stos
and
xchg
mov
sbb
loope
xchg
mov
sarl
shr
adc
mov
cmp
pop
jbe
inc
cmp
bound
stc
cmp
and
pop
sbb
fdivrs
or
outsb
pop
mulb
into
mov
scas
and
adc
push
in
mov
jns
lds
and
stos
push
push
mov
mov
lcall
and
adcl
fisttps
push
xor
mov
mov
mov
addr16
loopne
movsb
jo
xchg
inc
test
lods
xchg
lcall
jle
or
fstpl
push
mov
repnz
cmp
cli
push
nop
fiaddl
xchg
popl
repz
into
iret
pop
cs
ja
arpl
and
mov
dec
fidivs
xchg
popf
rcl
mov
mov
loope
mov
loope
shlb
mov
scas
or
mov
pop
dec
lret
out
lods
iret
jg
mov
out
shlb
mov
outsb
lods
popf
cmp
pop
imul
mov
es
mov
lahf
stos
cltd
das
mov
das
add
push
mov
lods
mov
inc
inc
loopne
lret
jge
mov
or
hlt
cltd
jbe
or
cli
fdivrl
mov
dec
mov
mov
pop
ret
xor
dec
bnd
pop
adc
push
dec
fimuls
mov
addl
push
mov
inc
rolb
inc
pop
jne
sbb
aad
ret
and
mov
push
xchg
cmp
aas
jns
xorb
dec
in
stc
mov
jb
in
jmp
not
out
pop
ds
fsubr
xchg
lret
or
dec
shr
shlb
or
sbb
ficompl
push
cmp
popa
fs
inc
inc
push
movsl
lods
pusha
mov
rcl
lock
out
dec
pop
pop
int3
gs
aaa
test
push
mov
test
dec
sbb
sub
fistps
cmp
or
mov
cs
dec
nop/reserved
push
aad
pop
mov
or
mov
pop
xor
sub
mov
test
adcb
fisubl
sbb
fistpl
add
sbb
popa
fs
mov
loopne
les
fs
mov
mov
and
adc
loope
jg
out
mov
sub
inc
lods
mulb
mov
inc
int3
call
dec
daa
inc
rcrb
pushw
es
xchg
dec
adc
in
ljmp
sub
sbb
cmp
mov
sub
out
out
insb
adc
lret
mov
mov
lcall
or
inc
bound
mov
ljmp
in
rcr
pop
icebp
add
jmp
pushf
ds
loope
cmp
popf
push
mov
mov
sarl
test
add
lcall
stos
jp
lock
rcll
mov
aas
stc
insb
xchg
idivl
dec
sbb
mov
mov
in
or
or
nop
pop
div
sub
xchg
popl
push
mov
fs
mov
dec
movlps
imul
inc
xchg
leave
daa
add
cmp
push
cs
and
cmc
sbb
in
icebp
jbe
and
cmc
aaa
test
pop
push
sti
addr16
arpl
call
std
mov
pop
add
xor
mov
add
push
testb
test
mov
lcall
mov
fmulp
sarl
jmp
dec
out
dec
sti
sbb
pop
jp
jae
pop
jge
jmp
cmpsb
sub
stc
push
add
aaa
push
add
jmp
xchg
jns
fs
pop
xor
xor
addr16
inc
mov
outsb
aas
lock
int
and
sbb
into
jg
cs
mov
cmp
and
fidivs
divl
and
pop
daa
mov
mov
test
push
push
inc
nop
stos
or
pop
addr16
dec
test
mov
push
jns
cmp
andl
hlt
jmp
cmp
push
xchg
adc
insb
xchg
mov
outsl
and
lods
loope
adc
jg
adc
scas
sarl
jae
fwait
imulb
loope
clc
sbb
mov
loope
inc
fdivrl
faddp
cmpsb
movsl
in
push
mov
fnstsw
xchg
mov
jg
out
mov
insb
cmp
fildl
decb
fwait
jbe
rorl
mov
std
sub
sub
loop
insb
cmp
push
scas
popa
into
cmp
add
sub
loope
cltd
or
fdivrl
icebp
and
push
and
dec
aas
int
sub
add
sbb
push
push
mul
push
sbb
sbb
lds
xor
fnsetpm(287
jns
fldl
aam
push
sub
pop
xchg
fsubrs
test
cwtl
call
lahf
fs
popa
andb
lea
jg
dec
lea
cmp
mov
cli
push
mov
push
out
dec
movsl
mov
cmpsb
sbb
mov
lds
ja
push
xor
pop
std
in
jp
sub
add
sbb
xchg
cmpsb
dec
out
popf
sbb
push
mov
int3
or
jno
mov
xorl
popa
push
negl
jg
pushf
nop
mov
dec
roll
push
dec
cmp
loope
sbb
jmp
insb
sub
rolb
add
xchg
push
pushf
mov
fimull
push
mov
loopne
clc
repnz
rcr
lds
dec
mov
gs
in
cmp
dec
or
pop
dec
mov
lcall
lods
mov
or
add
or
je
pop
movsl
push
dec
dec
xor
jno
mov
sub
pop
sahf
rcrl
or
shrb
loopne
scas
xchg
fldenv
add
outsb
pop
out
xchg
sub
mov
aaa
jne
sbb
pop
push
adc
call
ds
inc
into
cli
ss
cmp
push
and
xlat
add
ficoml
out
adc
inc
jb
rcrb
inc
jae
es
lds
jecxz
pop
sub
push
ljmp
outsl
mov
push
push
cli
dec
imul
push
icebp
mov
leave
xor
jae
dec
mov
ffree
sub
cmp
pop
inc
fidivl
lds
mov
or
push
and
in
adc
out
cmpsl
call
je
cmp
add
sub
mov
jno
adc
jns
insb
sub
mov
sub
mov
dec
stos
jb
lcall
mov
je
iret
pushf
mov
add
dec
loopne
xchg
push
push
lods
sub
xchg
or
xchg
dec
push
outsl
add
push
dec
jg
pushf
push
gs
mov
pop
xorl
clc
cmp
and
push
ds
and
outsl
loop
mov
xor
xchg
add
xchg
inc
hlt
mov
jbe
int
push
cli
pause
fs
pop
and
add
fcmovb
out
pop
xchg
in
cmp
and
sub
orw
dec
sahf
hlt
inc
mov
bound
sbb
sub
rcrb
mov
inc
mov
dec
stos
insb
xchg
jns
in
iret
mov
insl
in
cltd
push
pop
jns
sub
jo
and
test
aam
mov
xor
bnd
inc
outsb
dec
fistl
jb
lcall
sbb
sub
pop
push
pusha
sub
sbb
lds
sbb
cmp
jle
jb
adc
bound
sub
pop
inc
inc
pop
xchg
cmp
lahf
pushf
gs
push
sbb
aam
mov
loop
addr16
jg
xchg
mov
xor
adc
jge
mov
pop
mov
scas
aad
mov
mov
movsl
cmc
mov
xchg
xor
xchg
cld
sbb
ret
pusha
push
in
push
and
faddl
jge
xchg
push
or
orl
icebp
jp
xchg
icebp
cli
mov
mov
xor
mov
enter
dec
push
inc
repz
xlat
je
js
or
dec
ret
sahf
dec
inc
sub
rcl
dec
negl
fwait
daa
mov
fildll
cmc
sbbl
jnp,pt
pop
jecxz
xchg
mov
mov
add
test
in
sub
jnp
xchg
lcall
or
mov
shrb
out
xchg
adc
aam
arpl
jmp
xchg
movsl
sti
push
jl
pusha
mov
testb
repnz
pop
adc
xchg
add
mov
or
inc
xor
adc
mov
fimull
xor
ja
adc
xchg
jmp
mov
dec
cs
jecxz
or
xor
add
arpl
push
push
arpl
das
push
sbb
rcrl
inc
aaa
jne
fstpl
push
mov
and
sbb
mov
xor
jl
loopne
out
and
pop
loop
mov
fs
mov
mov
arpl
or
dec
xchg
adc
jae
aam
out
cmpsb
xchg
les
push
xor
imul
push
push
and
jb
or
cmp
xlat
enter
aas
cmp
xor
sbb
cld
sbb
mov
mov
inc
jb
orl
push
xor
jmp
add
movsb
es
xchg
rcl
mov
pop
sbb
lods
lahf
popa
dec
cmp
dec
fcoms
jb
sbb
test
int
jg
jecxz
pop
jg
xchg
sub
ret
cwtl
ja
das
dec
popf
decl
leave
lret
in
mov
scas
sbb
xor
and
xlat
xorl
enter
stc
sub
popa
mov
bound
inc
enter
sub
fistpl
dec
in
aam
dec
shrb
inc
mov
or
push
mov
sbb
xchg
adc
and
jns
cmp
push
xchg
xor
mov
cmp
cmp
sub
xchg
fists
dec
and
push
loop
or
and
mov
mov
xor
cmp
mov
cmp
cs
fsubrl
aaa
add
mov
xchg
repnz
decb
ds
out
aas
pop
iret
rcrb
cmp
pop
in
or
lret
adc
movsb
int3
dec
cpuid
stos
adc
das
jb
into
mov
add
jne
push
pop
pop
stc
icebp
test
das
loopne
inc
mov
arpl
xor
cmpsl
add
test
sbb
mov
sarb
aaa
pop
add
fdivrs
dec
jp
aas
mov
sbb
fs
sub
jecxz
cmp
mov
outsl
jmp
bnd
adc
mov
cmp
test
xchg
inc
nop
cmpsl
mov
ds
mov
and
mov
stos
aad
push
sub
test
jecxz
and
xor
dec
mov
push
pop
adc
mov
out
call
fwait
xchg
cmp
das
inc
sbb
imul
es
insb
sub
stos
cmp
popa
adc
mov
or
jbe
push
jmp
out
push
cmpb
sbb
adc
jns
das
leave
xor
not
dec
push
and
lcall
daa
push
outsb
imul
test
pop
ret
orl
dec
adc
nop
push
fistps
add
mov
lock
jno
roll
jl
test
cld
imul
mov
out
rcrl
dec
arpl
xor
inc
nop
push
les
xchg
aad
sbbl
sub
sbb
loop
push
mov
repz
adc
pop
xor
shrl
xchg
push
out
mov
inc
sarb
dec
adc
int
sbb
mov
aad
or
jno
mov
dec
and
inc
and
jb
jg
rorb
js
movsb
or
mov
aas
loope
pop
and
jg
mov
repz
mov
movsl
dec
sub
pop
jle
jecxz
das
mov
xchg
mov
mov
push
pushf
enter
push
ret
insb
mul
push
data16
cmp
jo
xor
stos
ljmp
sbb
mov
push
sub
nop
repz
sbb
and
hlt
jmp
cld
repnz
fdivrs
mov
push
shl
lds
mov
fsubs
fsubr
ret
jmp
jns
xor
shll
jg
scas
mov
ds
mov
pop
mov
out
fimuls
lods
pop
stos
push
add
adc
inc
clc
and
sub
add
inc
std
xchg
pop
dec
pop
jmp
sbb
int3
xchg
or
jle
popf
pop
je
or
js
mov
cmp
cmc
jmp
pop
pop
and
shlb
clc
jl
mov
xchg
test
mov
adc
mov
out
jne
clc
xchg
ret
fwait
ljmp
mov
sbb
and
xor
lcall
scas
sbb
sarl
xchg
push
hlt
aad
imul
mulb
test
out
jns
mov
leave
repnz
mov
jb
inc
lods
popa
mov
cmpsl
cmc
int
cmpb
sub
mov
cs
mov
ss
cmp
lcall
lcall
sbb
rcll
push
sbb
shll
aam
adc
je
int3
fstps
pop
mov
stos
nop
mov
pop
sbb
pop
shlb
mov
pop
sbb
orb
cli
and
adc
xor
inc
cs
test
ret
jge
out
data16
mov
daa
loope
sbb
or
jno
ret
adc
jo
iret
adc
sub
adc
test
scas
jle
test
ret
es
xor
nop
xor
divb
xchg
pop
ret
cltd
iret
dec
lret
iret
dec
lea
jecxz
popl
xor
mov
pop
push
pop
prefetchw
or
push
lret
sbb
push
inc
jmp
adc
adc
lods
xchg
rolb
pop
mov
push
inc
mov
pop
xchg
std
mov
les
and
xor
int3
jl
mov
imul
sub
sbb
push
jmp
cmp
sti
mov
push
repnz
sub
sahf
fwait
repnz
cmp
aam
jb
imul
cmp
push
shll
das
fmull
decl
dec
cmc
mov
clc
jg
cld
xor
cmp
mov
aad
pushf
lods
jns
inc
pusha
xchg
mov
add
or
xor
inc
push
scas
push
sbb
xlat
push
sub
push
sti
loopne
push
mov
popf
jne
mov
mov
arpl
push
aas
adc
xchg
mov
cmp
ret
cwtl
adc
mov
mov
mov
daa
jno
je
xchg
lret
mov
sbb
push
and
movsb
mov
ret
push
push
jnp
aaa
ret
jg
daa
in
mov
inc
pop
les
cwtl
dec
sbb
mov
and
xchg
and
add
cld
aas
push
mov
push
push
loopne
mov
pop
add
ja
mov
adc
mov
push
mov
cmpb
pop
stos
cmp
mov
xchg
cmp
fsubrs
sub
aad
push
shl
dec
mov
jae
lea
and
inc
inc
cld
jne
cmpsb
dec
pop
dec
cwtl
and
mov
ret
stos
cmpsb
push
inc
xchg
ds
jbe
scas
les
aam
js
addb
jo
mov
jo
dec
and
pusha
fldl
dec
inc
cmp
jnp
sub
pop
cmp
rorb
cli
push
in
cmp
es
cmpsl
push
mov
xchg
fmul
jg
dec
ret
mov
cmp
sbb
pop
lcall
sahf
popa
and
in
sbb
push
inc
roll
mov
cmc
fidivrs
pmaddwd
mov
shll
or
inc
in
pop
into
push
cwtl
cmp
xchg
or
xor
ljmp
ret
xchg
popf
dec
icebp
jns
rcrb
hlt
lock
sarl
xor
rcrl
leave
lods
pop
adc
mov
gs
mov
insw
jge
iret
sub
clc
jp
adc
addr16
jno
inc
test
sub
fdivrl
rcrl
push
dec
daa
jle
mov
dec
int3
ljmp
call
pop
cs
loope
or
hlt
test
gs
mov
int3
sub
insl
into
pusha
adc
mov
push
ds
in
das
mov
mov
ja
shlb
dec
pop
mov
mov
ja
adc
stos
out
rorl
sub
into
bound
adc
mov
fwait
dec
int3
subb
out
mov
fldcw
push
push
xor
jne
aad
xor
push
adc
adcl
mov
push
xor
sbb
movsl
lods
dec
ss
fcmovb
rcl
xchg
add
test
and
scas
in
jno
ljmp
ljmp
cmpsb
jb
add
lods
push
pop
aad
lret
cltd
lret
repnz
push
sar
cmp
rcrb
roll
dec
in
out
sbb
jbe
divb
std
cmp
cwtl
es
cmp
push
lods
dec
sbb
pop
inc
out
test
testl
les
pop
fidivs
xchg
data16
fmuls
out
inc
or
pusha
mov
pop
cmpsl
out
out
or
and
push
dec
dec
inc
and
push
sahf
jg
movsl
jle
jno
pop
or
mov
push
mov
push
or
addr16
cmp
xchg
mov
jl
out
and
mov
repnz
pushf
lods
out
push
sbb
jl
fwait
stos
xchg
scas
stos
inc
fldcw
stos
idivb
movsl
shl
divl
inc
mov
add
shll
clc
lahf
mov
xchg
insl
jns
aaa
sarl
das
loopne
add
rorl
push
inc
or
push
call
iret
pop
pop
popa
xchg
pop
movsb
cmpsb
cmpsb
or
pop
sbb
dec
in
mov
ret
mov
imul
repnz
jmp
jge
cmp
std
xor
call
jle
negb
xchg
and
pusha
into
cmp
int
ds
punpckldq
rcr
add
pushf
pop
cmpsl
push
shll
pop
xchg
bound
push
testb
add
dec
lret
sub
cwtl
cli
or
mov
ret
xor
fs
pop
inc
fdivrs
adc
cwtl
xchg
test
jne
or
mov
cmp
rcl
inc
mov
aas
xchg
inc
sub
ret
jno
lret
mov
mov
sarb
fcomps
sbb
jo
push
mov
dec
jmp
mov
push
lds
insb
lret
in
mov
rcrl
stc
mov
push
leave
incb
fdivs
push
out
jb
inc
and
rep
sub
roll
or
cltd
aad
repnz
sub
push
inc
xlat
dec
loope
xchg
packuswb
adc
pop
jle
ret
scas
and
mov
fidivrs
mov
push
adc
xchg
bound
xor
and
popa
pop
imul
leave
pop
decb
jecxz
stc
add
xor
hlt
lock
push
popf
add
pop
jae
xor
out
pop
int3
stc
add
mov
inc
and
sarb
push
push
std
ret
jp
shll
popa
loope
loop
fidivrs
mov
pop
xor
sbb
loopne
lock
jl
ret
ds
push
dec
dec
cmp
xchg
ds
jo
std
mov
hlt
xor
mov
or
into
mov
sti
xor
orb
cmp
adc
sbb
fstps
jae
fbld
inc
into
lock
in
push
pop
cmp
inc
jo
mov
loope
ds
inc
hlt
and
push
ja
jmp
es
scas
ja
addr16
mov
mov
pusha
jle
push
int
xchg
cltd
mov
push
push
imul
aam
xchg
inc
push
lods
inc
adcb
rolw
jnp
fld
xor
dec
outsb
cmpsl
adc
cs
and
nop
pop
int
xchg
ss
ds
and
and
pop
mov
sub
or
mov
jge
fimull
roll
mov
pop
mov
nop
aas
or
into
adc
adc
inc
ret
jns
xchg
lds
mov
cmpsl
or
mov
xor
aas
mov
push
add
in
sbb
xor
pop
stc
add
pop
jl
pop
movb
lds
insl
sub
icebp
ret
jl
ds
push
sbb
mov
iret
je
inc
lds
sub
roll
lcall
orb
cmovno
sub
adc
mov
sbb
outsb
mov
sub
mov
cmpsl
mov
xchg
mov
stos
scas
sti
test
repnz
jbe
out
leave
sub
xor
int3
aad
or
xor
out
daa
adc
mov
aad
xchg
mov
inc
cmpsb
dec
lret
push
out
xchg
pusha
bound
mov
push
fcom
cmp
insb
mov
jno
or
insb
xchg
and
mov
mov
and
mov
loope
jecxz
dec
sub
or
popf
mov
scas
jge
stc
adc
inc
fsub
mov
inc
sub
pop
js
pushl
gs
repz
icebp
lret
xchg
in
push
addr16
inc
pushf
fimull
lea
dec
push
lret
mov
shlb
mov
jne
xchg
mov
sbb
pop
leave
lds
movsl
add
into
jne
ficoms
dec
scas
xor
mov
es
mov
loop
arpl
sti
lock
add
pop
hlt
sahf
fisubrs
lods
fwait
loopne
roll
sbb
icebp
clc
out
aam
or
lcall
or
mov
aaa
push
inc
setno
pop
xchg
stos
xor
out
jl
loopne
ss
stc
pop
loope
xchg
adc
adc
inc
mov
cmp
loopne
movsb
sbb
stos
imul
shll
add
jo
repz
mov
es
push
xchg
pushf
push
icebp
pop
cmp
ret
icebp
in
add
std
popa
loopne
popf
mov
pop
inc
jmp
fwait
and
sbb
addb
dec
sti
inc
mov
in
adc
cmp
mov
clc
add
jo
jecxz
popa
in
or
sub
sti
xor
out
mov
je
inc
add
jno
add
ljmp
cmp
mov
inc
sbb
add
iret
cli
push
int3
arpl
and
testb
outsb
bound
loope
movsl
push
test
or
lcall
iret
inc
cmp
test
inc
test
mov
and
rclb
xchg
jb
jae
mov
mov
js
mov
sub
inc
mov
xor
out
and
std
jg
ret
cmp
pop
loopnew
cmc
fbstp
mov
sub
aad
lods
out
pop
icebp
and
pop
pushf
shll
adc
pop
scas
imul
loope
pop
xchg
mov
pop
push
push
mov
out
inc
fstpt
imulb
xor
add
test
jl
xor
mov
mov
int
mov
cmp
add
pop
popa
popl
rcrl
subb
pop
pop
aaa
mov
mov
sbb
or
das
cmp
int3
stos
xchg
push
lods
pop
jle
out
push
push
xlat
inc
movsb
aam
fsts
std
dec
je
or
mov
pop
movsl
std
lret
pop
into
in
rolb
das
bound
into
add
jne
fidivs
ret
sub
sar
sbb
lahf
aad
cmpsb
mov
ret
xchg
pushf
mov
mov
push
ss
mov
lret
stc
mov
xor
lret
daa
adc
out
and
je
push
fsubrl
xor
mov
cmp
pop
adc
mov
jge
xchg
cmpsl
ds
push
daa
imulb
cmp
dec
arpl
bound
xchg
sarl
pop
or
aam
mov
lret
loope
mov
mov
std
pop
xor
cltd
mov
mov
mov
cli
dec
movsl
push
ret
inc
xchg
sbb
dec
aaa
fstpl
out
inc
dec
shrb
or
iret
aam
push
in
andl
cmp
outsl
out
pusha
adcb
dec
push
jne
and
lds
push
sbb
in
enter
xor
cmpsb
mov
psrad
popa
adc
stos
fs
es
jne
fbstp
scas
aam
roll
stos
dec
loopne
mov
dec
lods
pop
jp
adc
movsl
xor
fs
ret
add
cwtl
pop
repnz
sub
adc
jo
mulb
fistps
cmpsb
mov
call
out
dec
in
xchg
mov
sahf
sub
add
xor
ds
addl
scas
roll
clc
or
mov
push
or
aas
insb
sbb
jl
push
inc
repnz
jbe
fcomps
les
dec
inc
mov
add
jns
push
cld
imul
dec
and
addb
out
and
clc
ss
inc
int3
daa
sti
pop
scas
xchg
test
xlat
cld
cmpsl
rcll
jg
enter
arpl
iretw
fisubl
xchg
push
jo
cld
pop
orb
lods
or
mov
insl
hlt
or
push
test
rorl
jl
jp
dec
test
repz
fs
aam
or
or
dec
adc
lock
lds
cmp
pop
in
mov
jg
test
movsl
hlt
jl
sub
xchg
cmpsl
sub
and
std
sbb
adc
insb
pop
testb
pop
aam
cltd
pusha
mov
dec
pop
outsl
aad
cltd
push
add
in
or
pushf
jmp
int
fldl
test
mov
js
xchg
push
pop
xor
sbb
mov
dec
out
push
sub
lods
dec
pushf
es
into
icebp
popf
imul
rorb
push
sub
ja
insb
out
xor
call
mov
inc
mov
mov
fstps
mov
inc
jmp
jae
mov
mov
xchg
cli
data16
jp
loopne
lods
pop
fsubrl
shlb
outsb
xor
mov
movsl
je
adc
lock
push
cmpsb
ljmp
orl
or
stos
add
jbe
mov
sub
inc
mov
sub
push
imul
mov
es
je
pop
add
rorb
dec
out
mov
mov
je
adc
jmp
inc
outsb
pop
mov
comiss
dec
mov
sbb
jecxz
outsl
rolb
shl
mov
pop
insl
or
lcall
aas
sbb
mov
arpl
add
mov
bound
fdivrs
ret
mov
orl
hlt
aas
mov
adc
push
xor
xchg
dec
sub
mov
or
xchg
sti
adc
jle
mov
inc
lock
mov
loop
inc
mov
adc
sbb
dec
pop
push
or
add
adc
stc
dec
inc
dec
xchg
jns
mov
test
xlat
dec
pop
sbb
inc
sub
jno
or
arpl
imul
push
pop
fmull
sub
mov
sar
lcall
or
orl
mov
imull
jcxz
imull
jbe
lret
add
lcall
jg
hlt
pop
jg
dec
jns
pop
cmp
xchg
add
test
add
and
cmpsb
lcall
push
pop
mov
xor
adc
jg
scas
jb
mov
shll
cmp
mov
xorb
dec
mov
rclb
ja
arpl
add
xchg
outsl
out
in
in
fwait
pop
add
es
fnstsw
imul
push
test
push
sub
dec
pop
lret
sub
mov
jo
cltd
fst
jne
shlb
aas
sahf
insb
je
data16
push
push
cltd
xchg
push
adc
mov
mov
sub
shrb
lds
cs
xchg
push
sub
rorb
jg
xchg
push
dec
movsl
mov
push
les
xor
es
faddl
jl
mov
in
fcmovnb
push
fdivrp
rclb
pop
xchg
outsb
xchg
lds
nop
and
inc
clc
iret
cld
mov
iret
js
lret
imul
or
cmpb
pop
imul
adc
cld
pop
ds
andb
pushl
jle
fsts
adc
xchg
mov
movsl
jp
and
clc
mov
rorb
fwait
stos
mov
xlat
inc
cmpsb
insb
pusha
pop
mov
enter
outsb
add
xor
dec
add
lock
popf
dec
outsb
jecxz
das
aas
stos
pop
dec
lret
loope
dec
pop
xchg
ljmp
mov
push
mulb
sub
arpl
sub
mov
sbb
in
push
call
es
mov
dec
push
es
les
lods
xor
lds
in
jecxz
cmp
fisttpll
call
or
ret
addr16
xor
enter
sbb
mov
sbb
mov
sarb
mov
inc
ret
mov
ds
or
or
jns
pop
stc
push
je
fidivrs
jno
push
ss
sub
loop
fnsave
pop
jns
adc
xlat
dec
cwtl
push
call
neg
test
das
dec
xchg
add
adc
loopne
xchg
lahf
xorl
loope
ret
scas
mov
cltd
dec
mov
js
sbb
filds
xor
pop
or
push
mov
test
xchg
rcl
inc
mov
pop
or
cmp
call
insl
xor
rcl
sbb
push
and
adc
popf
and
sbb
mov
lcall
jae
xor
ret
call
outsb
lahf
daa
jmp
mov
sub
sbb
aad
push
test
imul
sub
mov
cmp
std
test
push
nop
xor
xchg
test
cmp
xor
loopne
jl
jecxz
jmp
ds
aad
mov
arpl
or
call
cwtl
movsl
in
stos
sub
sub
fwait
sub
dec
xchg
stc
ficomps
adc
and
popa
sub
xor
push
xchg
int
out
push
add
xorl
orl
adc
or
pushf
jo
mov
xchg
faddl
and
dec
cmp
enter
hlt
or
sbb
hlt
jl
sub
repnz
jg
lods
cmp
mov
sbb
jp
mov
jo
std
rcrl
loope
mov
pop
mov
or
or
adc
repz
ret
adc
inc
inc
xor
xor
pop
ja
push
pop
pop
ljmp
fstpt
and
pusha
sbb
negl
and
or
ljmp
addb
stos
dec
test
dec
and
ljmp
clc
mov
mov
mov
xchg
push
lahf
or
inc
jo
inc
mov
pop
movsl
int
lods
sub
fwait
add
add
and
jmp
adc
stc
sarl
cmp
sbb
lds
xor
in
mov
je,pt
jmp
nop
cmp
loope
sbb
mov
mov
mov
push
shr
out
and
xor
addr16
int
jae
inc
add
and
gs
jp
adc
out
push
imul
cwtl
leave
popf
adc
int
pop
ret
fwait
mov
lret
push
dec
inc
jb
loope
mov
mov
adc
into
mov
add
push
cmp
stos
lret
and
roll
or
filds
sbb
inc
jae
fcmovb
mov
push
inc
cmp
orb
sub
std
xor
rclb
scas
mov
mov
or
repnz
push
fdivrl
call
xor
xor
outsl
movsl
lds
push
popf
gs
pop
stos
sub
adc
jg
adc
into
and
repnz
jb
bound
incl
es
fsts
push
xchg
in
mov
outsl
addr16
shrl
sbb
push
mov
scas
shl
mov
xor
cmp
pop
pop
jbe
adc
loopne
scas
sbb
pop
and
mov
aad
bound
adc
rorb
cmc
scas
stos
in
leave
jno
fcompl
jle
jb
fisttps
loope
js
sub
mov
mov
fdivr
aad
test
cli
pop
dec
cmp
incb
outsb
sbbb
pusha
mov
add
in
xchg
icebp
push
push
ror
adc
add
sub
add
es
addr16
mov
mov
shll
cs
popa
and
ffreep
xchg
cmp
pop
sbb
push
jmp
sahf
mov
fistps
inc
or
xor
loopne
aas
and
or
nop
dec
inc
aad
sub
mov
lahf
and
lret
in
push
xchg
call
cltd
cmp
pop
xchg
pop
arpl
mov
jno
cmp
push
or
xor
mov
and
jno
inc
sbb
add
cmp
adc
ret
add
dec
jecxz
pushf
fdivp
icebp
mov
push
stos
xor
fldl
xchg
mov
mov
sbb
repnz
push
xchg
sbb
xor
push
aam
jp
and
sub
int3
int
push
lret
inc
jmp
insl
call
pop
mov
and
arpl
das
roll
jecxz
cmp
je
mov
mov
out
pop
cwtl
jp
lea
dec
in
jecxz
sub
cmp
imulb
pop
adc
mov
sbb
inc
dec
test
xchg
sub
adc
push
cmp
lock
dec
xor
mov
dec
lea
xor
push
out
cmpsb
out
or
inc
dec
loop
rcrb
daa
jmp
xor
jo
adc
mov
aas
mov
mov
and
add
shlb
ja
push
loop
add
xchg
mov
adc
xchg
in
sbb
cmp
pop
ret
push
popw
ret
cmp
pop
mov
lcall
pop
cmc
lret
jae
mov
pusha
sub
pop
jp
mov
insl
aas
push
sbb
sub
mov
lahf
xor
cmpsb
inc
cmp
lea
mov
mov
ss
mov
push
xchg
adc
dec
cmc
mov
stos
call
in
or
out
xchg
gs
mov
cmp
adc
pop
cmp
fcoml
inc
inc
test
lahf
sti
in
cmpsb
dec
jne
fwait
ljmp
mov
xor
cmp
sbbb
or
mov
insb
push
mov
push
adc
or
repnz
fwait
inc
and
insl
push
dec
mov
cmp
inc
leave
mov
nop
outsb
inc
cmp
mov
out
xor
push
ss
xchg
sbb
sub
cmpsb
mov
fmuls
push
cmp
call
pop
cmp
and
and
mov
xor
mov
test
stos
test
lea
movsb
mov
xchg
or
mov
xor
push
pushf
popf
jecxz
inc
push
andl
mov
dec
mov
dec
and
inc
int3
push
mov
or
or
push
daa
sub
shrb
push
out
fs
dec
fnsave
mov
ss
mov
test
fnstsw
pop
and
mov
push
lret
xchg
loope
pop
enter
test
mov
jp
in
jo
gs
clc
adc
push
add
movsl
not
push
jle
xchg
popa
cmp
mov
inc
in
xor
sti
fadd
imul
jb
mov
addr16
add
inc
mov
mov
xchg
cmp
xchg
stc
or
pop
xchg
lods
bound
push
shlb
sub
lcall
sub
mov
fbstp
dec
das
sub
fsubl
or
nop
jae
xchg
mov
add
lods
subl
out
shr
sbb
stos
fwait
mov
icebp
divl
add
insl
pop
xlat
shll
pop
or
jnp
dec
sti
imul
cmp
ss
push
or
push
xor
add
xchg
int3
testl
and
mov
je
fldt
loope
popl
pop
jo
jb
inc
int3
bound
sub
or
jecxz
in
push
fsub
icebp
jne
in
push
sbb
cld
add
jnp
dec
jno
push
xchg
pop
lods
mov
call
push
adc
cmp
repnz
sub
sbb
cmpsb
cmpsl
and
iret
mov
cmc
push
xor
cmc
movsb
inc
and
sti
cmp
cmpl
mov
xor
adc
insl
jbe
sub
shrb
inc
jne
sbb
sub
dec
inc
jo
cmp
add
ror
inc
outsl
add
inc
mov
ret
lods
and
and
jno
jns
xor
in
xlat
loope
repz
mov
sub
jp
leave
mov
pop
jmp
jle
mov
sbb
mov
mov
xchg
loope
push
loope
int
xchg
sbb
int
jecxz
add
adc
mov
jb
inc
add
sub
jp
cwtl
xchg
aas
mov
mov
popf
cmp
lea
xor
imull
idivb
sbb
xchg
out
xchg
mov
add
mov
cmp
mov
sti
ljmp
mov
cmp
xchg
mov
movsl
fsubs
xor
adc
pop
pusha
push
jecxz
into
mov
iret
mov
adc
cmpsl
mov
xor
and
orl
cmp
sub
mov
inc
mov
cmp
lds
lahf
jns
loop
scas
mov
xlat
stos
mov
lds
mov
jle
push
xchg
mov
xchg
push
decb
jbe
sti
out
inc
inc
mov
aad
cmp
add
mov
mov
inc
aaa
fiadds
leave
sub
into
lret
push
jle
ret
mov
ret
negl
mov
mov
and
lock
insb
shrl
popf
mov
mov
out
rcrb
nop
and
or
in
stc
and
clc
aad
pop
cld
dec
es
shll
xchg
cmp
push
es
push
cmp
mov
sub
fists
or
jmp
inc
mov
cmp
and
cmpsb
mov
movsb
mov
push
sbb
inc
push
adc
call
jp
decb
adc
jmp
fnstcw
std
xchg
sahf
cli
jns
scas
xchg
push
int3
mov
inc
mov
adc
or
bound
mov
xchg
pusha
pushf
andb
shlb
adc
das
lock
mov
mov
repz
fimull
rolb
push
cld
rcl
test
test
xlat
aad
imul
sub
adc
outsb
data16
xchg
mov
addb
popa
or
jl
jg
out
lret
xchg
xlat
and
imul
or
sti
outsb
cmp
add
mov
mov
imul
js
inc
mov
loope
aas
xor
cmc
adc
mov
call
data16
scas
out
sub
push
push
dec
popl
sub
fidivrl
push
ret
aam
je
fsts
dec
movsb
sub
iret
jnp
stos
out
arpl
adc
jne
cli
dec
test
pop
mov
add
mov
adc
notl
ret
test
int
test
inc
sub
sub
push
aam
add
rcl
inc
jae
xchg
mov
ret
mov
int
je
xchg
imul
aas
xlat
dec
add
jl
subl
mov
test
test
mov
and
sbb
sbb
xchg
sahf
iret
fcmovnu
jno
adc
or
stc
push
sbb
lds
push
xchg
push
cmp
iret
adc
pop
mov
xchg
xchg
inc
sub
sbb
js
fisubs
jp
xchg
loope
incb
rcll
stos
repnz
test
pushf
mov
jb
cs
sub
das
cmc
int3
fimuls
sub
ret
xchg
dec
aad
js
jb
in
out
imul
mov
test
and
jg
lahf
sar
loope
inc
sub
outsl
push
inc
inc
or
les
inc
mov
into
mov
in
mov
jmp
nop
lahf
out
pusha
and
pop
push
pop
leave
addr16
fs
xchg
cld
sbb
int3
lods
xchg
xlat
pop
push
inc
mov
xchg
xorb
fs
call
icebp
sbb
ds
addr16
outsl
cmp
push
cmpsb
push
jg
pop
lcall
inc
push
leave
shll
mov
pop
shr
into
push
sbb
inc
push
lea
and
pop
cmp
repz
hlt
int
out
mov
xchg
adc
adc
dec
sub
and
test
xchg
jne
mov
cvtps2pd
ficoml
pop
mov
insl
sbb
jg
loop
repnz
sbb
fsubl
jae
mov
mov
in
mov
ljmp
insl
cld
hlt
rcll
or
mov
cmp
in
mov
andb
lcall
and
and
ret
adc
call
sub
arpl
das
pop
mov
or
jg
add
pop
mov
in
and
out
add
mov
jmp
xor
cmp
dec
and
icebp
aad
pop
mov
sub
add
add
lock
inc
mov
xchg
mov
notl
aas
lods
jecxz
int3
push
jae
or
ds
sub
cmpsl
es
xchg
in
inc
jae
mov
repnz
and
idivl
scas
adc
shll
lret
pop
mov
insb
push
cmpsl
jne
adc
push
adc
fsubr
testb
adc
and
or
ja
inc
mov
pop
jb
in
negl
push
mov
xchg
push
lock
pusha
mov
inc
pusha
pop
pop
and
out
icebp
clc
insb
push
test
imull
mov
stos
mov
and
sub
dec
pop
sub
mov
sub
add
cmp
addr16
nop
insb
mov
ror
dec
sbb
in
push
cmp
push
cmp
and
mov
scas
dec
pop
add
fsubl
addb
insb
mov
cmpsl
into
mov
into
dec
loope
jo
mov
int3
xchg
jne
arpl
pop
sub
sub
leave
mov
xchg
fbstp
js
pop
inc
in
inc
arpl
dec
scas
ja
movsl
lfs
fs
push
icebp
dec
adc
icebp
dec
mov
cmpsl
pop
jae
mov
push
dec
sub
mov
sub
insl
sbb
jbe
jo
lret
xchg
adc
movsb
inc
std
mov
inc
mov
shlb
or
fwait
push
add
or
jmp
sub
popf
xchg
inc
mov
or
int
xor
fs
jmp
fs
jecxz
clc
pusha
pusha
dec
mov
or
mov
sub
sbb
sub
sar
fbstp
incl
fisttpll
enter
jae
cmpsb
fld
pop
ret
jge
xor
push
cmp
mov
inc
leave
mov
cmc
notl
fcmovb
scas
es
xor
outsb
or
shr
pop
mov
jle
lret
mov
sub
and
out
pusha
and
jne
ljmp
in
stos
repz
sbb
lock
mov
jecxz
in
cli
out
lcall
movsl
aas
es
jmp
in
or
mov
mov
xchg
mov
int
sub
push
adc
pop
mov
daa
sub
cmp
pusha
loope
jbe
mov
test
mov
xchg
cli
test
push
push
xlat
arpl
inc
int
fisttps
xor
je
sub
lods
mov
lock
cmp
push
xor
adc
push
stos
mov
xchg
xchg
mov
js
sbb
cmp
jno
insl
dec
add
rorl
clc
dec
mov
cmp
mov
ja
shll
cmp
mov
inc
insb
cmp
jg
cmp
jmp
jmp
out
pop
jg
adc
js
dec
add
xchg
adc
jmp
pop
jnp
mov
jg
lcall
push
cmpsl
ficompl
xchg
jnp
aas
bound
out
int
mov
vmread
stos
lods
dec
ljmp
push
mul
cwtl
xchg
jge
ds
mov
addr16
lods
mov
pop
add
popf
adc
xor
mov
mov
outsl
inc
push
mov
aad
mov
cs
sbb
cli
arpl
daa
xor
xchg
hlt
pushf
sub
int3
cs
jno
sbb
jbe
and
adc
les
mov
je
inc
mov
sub
stc
mov
sub
inc
and
sbb
mov
cli
cmp
jae
test
xor
mov
jmp
push
mov
jae
jp
je
adc
dec
stos
mov
xor
sub
and
and
cmp
adc
xor
aam
rcrb
movl
mov
sub
outsl
sahf
pop
nop
pop
mov
xchg
mov
lahf
std
aam
mov
notl
sbb
repz
adc
push
aad
lahf
push
xchg
xchg
arpl
rorl
sub
outsl
xor
fst
ja
test
cs
stos
pop
lods
test
bound
jmp
lcall
in
push
cmp
push
mov
mov
dec
test
add
inc
fldt
lcall
add
inc
mov
cmpb
mov
mov
mov
aam
imul
sbb
jns
arpl
in
les
addl
test
pushf
test
pop
or
adc
mov
xlat
adc
mov
shll
cli
add
repnz
icebp
sar
rdtsc
xor
into
sub
jp
xor
mov
negb
cmc
and
xor
ljmp
cmp
clc
sub
movsl
testb
adc
add
test
roll
cmp
jecxz
push
ficoms
add
clc
imul
pop
cmpsl
add
mov
jns
ret
xchg
xor
ljmp
add
fwait
aam
movsb
out
xchg
fstpl
jle
in
shr
add
stc
scas
xchg
or
out
lea
packuswb
sbb
pop
and
xchg
addr16
sub
add
in
inc
push
sub
outsl
fimuls
cltd
push
and
iret
lret
inc
outsl
stos
iret
or
mov
movsl
stc
and
push
lds
fwait
int3
mov
shll
sbb
inc
add
aaa
aad
out
push
xchg
jns
or
sbb
mov
jnp
adc
stc
mov
in
mov
inc
mov
icebp
mov
push
push
push
jb
sbbb
and
xchg
cmp
sub
inc
sub
or
jne
cltd
in
shrb
ficoml
cvtpi2ps
inc
xorb
daa
clc
xchg
add
rclb
shrb
jg
sti
je
stos
dec
inc
test
int
ret
sub
ljmp
jl
adc
adc
cmp
addr16
mov
push
xchg
dec
shlb
mov
ja
or
bound
jb
pusha
add
add
mov
push
dec
leave
nop
sbb
push
out
lds
jmp
mov
outsb
cmp
sub
push
das
dec
pop
adc
jne
pop
cmp
mov
ss
mov
adcb
ss
add
mov
add
rcrb
mov
out
sub
pop
rcr
jecxz
pop
jp
ljmp
lock
dec
inc
mov
or
hlt
pop
test
mov
xor
jno
lcall
mov
push
call
out
aam
mov
jns
cltd
inc
adc
push
sbb
pop
lods
addr16
dec
jo,pn
out
adc
xchg
out
movsb
fists
ja
push
xchg
lock
jae
xlat
xchg
adc
mov
sub
jmp
xor
cwtl
daa
dec
xchg
jae
xchg
mov
push
inc
push
pusha
cmp
push
stos
add
cmp
xorb
jg
jp
xor
dec
mov
lahf
adc
pop
arpl
sahf
xchg
idivl
pop
js
push
mov
dec
fnstenv
das
and
or
stos
xor
mov
cmp
jo
lea
dec
outsb
pop
addr16
pop
push
movsl
sub
jp
mov
and
cmp
adc
scas
jle
insl
dec
xchg
mov
mov
loopne
xor
dec
outsl
jle
sbb
mov
out
push
mov
into
pop
out
adc
nop
sbb
and
enter
add
push
mov
cmc
or
lcall
push
jbe
or
sbb
sbb
ds
dec
repz
dec
daa
push
cli
xchg
cmpsl
mov
loopne
add
mov
adc
stc
lock
sub
mov
mov
xchg
mov
inc
icebp
ljmp
xchg
icebp
repnz
rcrb
div
add
jb
iret
lock
daa
dec
lods
xor
loope
sahf
mul
inc
inc
je
hlt
ret
mov
dec
aam
into
mov
sub
xorl
mov
add
mov
aas
mov
pop
jbe
outsl
sbb
mov
pop
adc
mov
push
inc
pop
sbb
sub
sub
inc
or
push
pop
xchg
push
fxam
mov
cmp
iret
popf
out
mov
jae
gs
mov
and
add
push
out
adc
and
add
outsl
iret
mov
dec
inc
inc
cmp
xor
pop
cld
cmpb
pusha
push
or
js
cmc
bound
dec
pop
lcall
xchg
xchg
shll
cmp
jmp
ja
cmp
mov
pop
ret
roll
cmp
shr
and
insb
test
or
popa
sbb
ljmp
dec
iret
addb
xchg
pop
and
adc
jg
test
in
scas
sbb
mov
icebp
push
in
leave
xchg
xchg
test
test
mov
push
mov
dec
sub
rcl
ret
and
iret
scas
repnz
je
push
push
add
mov
leave
sahf
test
cmc
shrl
add
pusha
fistpl
std
jo
dec
mov
and
lcall
and
fdivrl
and
and
push
mov
lcall
idiv
test
sub
in
ficoms
jp
scas
out
icebp
cs
push
aad
mov
lcall
jp
ret
pop
cmpsl
loope
and
push
fcmove
sahf
lods
push
movsb
es
fsubs
add
mov
mov
sub
adc
xor
mov
nop
xchg
cmpsb
pop
ss
sub
int3
push
pop
shl
orb
mov
xchg
pop
ss
sub
mov
sbb
insb
pop
xchg
out
std
dec
enter
dec
pop
out
push
jns
cli
lret
mov
pop
ret
popl
dec
xchg
xchg
mov
xchg
jnp
mov
pushl
imul
aas
xchg
aaa
fiadds
adc
cmp
mov
mov
ficompl
stos
aad
lock
mov
into
jae
ret
in
push
fstl
sub
dec
or
jno
mov
mov
pusha
enter
stc
sahf
repz
outsb
in
mov
lcall
movsl
push
mov
jno
cmp
outsb
xchg
pusha
inc
ljmp
mov
sbb
inc
inc
mov
rorb
mov
roll
aad
inc
pop
fwait
ds
xchg
jae
pop
cli
xor
out
stos
and
xor
daa
push
push
pop
bound
xlat
cld
mov
adc
inc
test
std
jae
sub
leave
fistl
nop
int3
push
leave
inc
cli
xchg
scas
xor
pushf
mov
sub
mov
pop
jnp
dec
orb
fcoms
hlt
js
add
cs
cs
push
adc
mov
push
mov
lods
adc
ret
popf
in
inc
loopne
not
cwtl
pop
sbb
push
add
pop
lcall
out
pop
mov
jle
push
sbb
mov
inc
cmpsl
aaa
xor
cs
ljmp
int3
pusha
lret
xor
dec
inc
dec
pop
movsb
xor
call
ja
pop
rep
iret
or
cwtl
dec
lods
das
add
inc
jmp
cmp
cli
push
hlt
adc
test
sbb
test
mov
rorl
mov
jecxz
dec
fidivl
or
cwtl
dec
xchg
add
ja
cmovno
outsb
popf
notb
les
cli
lahf
mov
scas
jmp
jno
push
daa
cs
add
mov
fadd
call
mov
mov
dec
cwtl
xor
movsb
enter
or
pop
pusha
jnp
pushf
lret
sbb
or
mov
cmp
test
sti
pop
inc
cmp
pop
mov
dec
mov
sbb
lods
add
cmp
int
push
int
in
lods
test
push
das
ret
cld
cli
das
lock
mov
jg
push
ret
repz
clc
iret
sbb
pop
mov
or
lds
mov
sbbb
mov
pop
ret
andb
push
mov
or
lahf
out
arpl
sub
and
inc
inc
out
cmp
addr16
out
ret
popf
push
dec
cwtl
xor
xchg
xchg
and
daa
lea
push
je
lods
mov
cmp
sbb
mov
push
lods
or
int
xor
movsl
dec
mov
out
mov
lret
or
int3
out
mov
mov
adc
ss
xchg
in
jl
ds
lcall
mov
fsubrs
ret
test
movsb
andb
cmpsb
push
aas
out
mov
imulb
inc
mov
mov
loop
cwtl
pop
xchg
stc
cmpsb
mov
cmpsb
aad
dec
mul
pop
sbb
ljmp
jmp
int
stos
cmp
divl
insb
or
int3
add
mov
cmp
pop
adc
mov
test
mov
push
lea
and
pop
sahf
xlat
pop
sbb
sbb
sbb
cmc
cmp
orl
shl
mov
addr16
iret
jge
cltd
out
sbb
push
aas
sub
inc
mov
mov
push
cltd
imull
lcall
dec
add
cs
jno
jae
rol
test
pop
cmp
outsl
pop
jg
stos
mov
or
sbb
dec
pop
iret
mov
pusha
jae
dec
mov
add
or
fsubl
xor
jae
push
mov
scas
jno
inc
jbe
sahf
icebp
push
lock
push
repz
dec
adc
in
stc
dec
sbb
cmp
int
sahf
mov
in
pop
lcall
testb
and
lret
fwait
dec
pop
mov
ficoml
mov
and
xorb
jns
dec
mov
ss
fs
sbb
rcrb
sbb
mulb
pop
jne
push
pop
mov
cmp
push
sub
sub
xor
mov
das
xor
pop
mov
xchg
pusha
sar
mov
inc
icebp
or
faddl
jge
call
dec
in
data16
lock
inc
fstpl
or
push
push
dec
pushf
inc
cmc
adc
shr
mov
cmp
loope
test
jo
mov
add
fimuls
orb
jnp
xchg
inc
sub
fstps
fwait
xchg
push
add
inc
mov
and
lods
icebp
rcrl
inc
cmp
adc
int3
jmp
inc
int
lcall
inc
popa
mov
inc
lock
add
ret
sti
xor
das
mov
imul
mov
pop
int3
push
cmp
jbe
mov
in
and
mov
loopne
in
mov
mov
ss
mov
jnp
ret
pop
sbb
ja
in
jl
push
inc
pushf
sti
addl
stos
das
xor
mov
pop
scas
subb
js
js
out
and
jbe
ljmp
adc
add
add
clc
testb
jno
test
mov
and
test
sahf
fmulp
and
stos
mov
fisttps
xchg
inc
cmp
dec
rorb
ljmp
jb
call
add
leave
mov
popf
mov
mov
mov
mov
sbb
subb
gs
mov
mov
adc
imul
add
mov
in
data16
icebp
in
nop
mov
cli
lock
cld
inc
insb
outsb
das
dec
ret
push
dec
movb
call
cld
je
lret
cmpsb
push
icebp
inc
jge
stos
mov
addl
dec
int
cmp
xchg
pusha
test
sub
in
iret
pusha
jg
test
dec
lcall
cmp
pop
insb
mov
test
sbb
in
enter
enterw
fsubp
jecxz
mov
jo
sub
test
jle
subb
inc
pusha
cmp
mov
js
mov
jl
sub
push
into
sbb
xchg
lock
add
pop
jp
imul
push
imul
mov
dec
mov
cmp
add
lcall
addr16
mov
mov
mov
out
pop
test
or
or
in
rep
mov
fidivs
sub
push
jne
daa
push
fucomip
jmp
and
sub
cmp
mov
ja
mov
out
xor
daa
or
fmull
fs
mov
inc
lods
mov
test
inc
mov
xor
ljmp
xor
in
lret
mov
mov
fists
andb
jp
mov
mov
fwait
mov
fsubl
pop
jle,pt
clc
into
fadds
lret
fisubl
add
enter
adc
pop
movsb
pusha
out
xchg
mov
and
cmc
lods
stos
mov
mov
jmp
and
jecxz
mov
push
mov
and
push
mov
adc
xchg
das
jle
sbb
xchg
pop
xchg
sbb
push
repnz
shlb
lea
or
clc
hlt
into
mov
ds
int
mov
jl
xchg
fmuls
xchg
mov
lods
jno
adc
jge
mov
and
aad
rorb
leave
orl
dec
clc
add
lret
fmul
sub
jo
es
xor
aad
push
and
lret
dec
mov
push
mov
xor
adc
in
pop
and
mov
push
daa
mov
int
pop
aas
shll
xchg
mov
add
add
sub
dec
int
add
xchg
xchg
scas
xor
repnz
push
inc
ds
dec
xchg
jae
cmp
lahf
out
les
cmpsb
xchg
subl
xor
lea
filds
mov
ficompl
jp
adc
scas
cmc
add
jbe
mov
adc
jno
cli
outsb
pop
or
lahf
inc
pop
mov
test
insb
cmc
lods
mov
xor
sbb
pop
scas
or
mov
mov
sub
sub
aam
xchg
inc
mov
xlat
xor
add
mov
idivb
mov
jnp
sbb
das
mov
stos
jb
and
icebp
jg
sbbb
andb
dec
xchg
jg
inc
and
clc
ljmp
lock
adc
sahf
fnstcw
insb
cwtl
sbb
push
mov
lods
jb
ja
inc
std
mov
imul
fldl
mov
sbb
notl
mov
xor
mov
test
jno
dec
cmpsl
mov
fsubs
andl
push
cmp
loope
push
or
xchg
popf
jns
xor
xchg
int
xchg
cmp
xchg
add
sbb
in
adc
addb
imul
mov
push
rorb
rolb
repnz
shl
lcall
add
jno
repz
cmp
mov
inc
push
pushl
mov
out
popa
aad
std
mov
les
dec
dec
aaa
sbb
push
dec
mov
js
dec
mov
pop
add
dec
hlt
add
into
addb
push
jne
adc
or
sub
cmpsb
lret
push
test
les
mov
add
pop
outsb
arpl
lret
xchg
cmp
popl
js
dec
sbb
cmpsl
inc
inc
nop
test
cli
jp
dec
inc
dec
or
add
mov
adc
ljmp
std
mov
out
add
xchg
fld1
add
dec
pop
call
add
cmp
into
xchg
and
sub
adc
loope
stc
sub
ja
push
adc
ja
and
inc
jns
aam
andl
iret
popa
mov
pop
mov
mov
mov
dec
dec
dec
push
inc
shrl
xor
push
and
pop
cmpsl
add
adcl
xchg
push
lods
add
popf
xor
jmp
popa
nop
inc
mov
pop
hlt
in
push
scas
adc
add
nop
cmp
ret
mov
push
int3
test
cwtl
fwait
int
push
adc
add
in
cs
ror
and
movsl
sbb
divb
arpl
push
inc
mov
push
loopne
imul
in
jne
shl
gs
in
pushf
xchg
cmp
cmpsl
push
popa
inc
xchg
arpl
aam
add
sti
pop
adc
divb
ljmp
cli
push
stos
lahf
cmpsb
sbb
pop
cmp
add
jb
adc
mov
sub
or
cmp
cs
or
aad
cld
cs
cmp
cmpsb
jae
loop
push
pop
addr16
jbe
sub
sub
cmp
pop
mov
sbb
mov
jp
adc
pshufw
and
jno
xor
jne
mov
mov
jnp
std
pop
push
inc
xor
sbb
cs
inc
stos
lahf
leave
pushf
std
mov
jne
daa
shll
add
push
inc
mov
mov
enter
sbb
dec
dec
dec
cmp
fdivl
stc
add
mov
repnz
aas
sub
lret
inc
push
imulb
lret
cmp
cmpsb
inc
or
xchg
xor
fwait
mov
pushf
fistpll
or
add
dec
addl
inc
movsb
or
fcoml
dec
pop
jae
adc
int3
push
in
mov
push
add
push
pop
jbe
insl
cmp
or
movsb
cmp
insl
cmp
fmull
sub
in
add
fdivs
xchg
bound
ja
fidivrl
pop
add
xchg
movsb
sub
fdivrl
pop
stc
add
xor
push
fsubrs
pop
stos
dec
pop
popa
sbb
mov
pminub
or
add
inc
mov
mov
imul
cli
in
mov
iret
hlt
test
dec
lcall
sub
movsl
mov
sub
mov
dec
sub
mov
push
cmp
jns
mov
out
dec
xor
int
pop
jae
pop
inc
cmp
roll
dec
pushf
push
sbb
mov
lods
mov
aad
mov
push
xlat
test
jl
fistpl
ljmp
adc
aam
mov
adc
cmp
xchg
cmp
xor
xchg
fdivl
mov
push
subl
mov
cmpsb
daa
inc
mov
arpl
jle
int3
inc
adcb
xlat
rclb
and
aaa
test
subb
push
cmp
or
test
dec
adc
mov
or
das
sbb
and
mov
into
sbb
in
aam
inc
stos
imul
jb
loopne
cwtl
xchg
out
sub
mov
push
mov
ret
xor
mov
or
test
xor
push
cmp
sub
mov
jp
pushf
push
add
xchg
jne
stos
aad
sbb
or
push
hlt
js
lds
in
mov
mov
adc
sahf
repnz
dec
ret
cmpb
pop
inc
sti
loopne
add
adc
xchg
and
jl
inc
aaa
and
dec
mov
movsb
in
cmp
aaa
movsb
push
es
testl
fnstcw
loope
xchg
dec
orb
mov
imul
xorb
aad
int3
dec
dec
into
cmc
lcall
xchg
out
pop
into
loop
xchg
cmp
xchg
insb
dec
arpl
pop
xchg
loopne
add
outsl
sub
xchg
out
pop
cmp
inc
cmpsl
rcll
negl
loopne
sub
push
push
das
call
push
push
ror
pop
cmpsl
inc
in
fstl
add
popf
cmp
xchg
push
add
push
jecxz
push
fmull
jb
js
or
rclb
sti
sbb
adc
leave
jns
mov
xor
pushf
add
dec
fs
int3
add
loop
notl
cmpsb
cmp
xor
dec
out
push
lahf
mov
out
cmc
sbb
scas
or
mov
ja
aad
lods
push
bound
out
mov
mov
inc
arpl
cwtl
and
lcall
sub
add
push
adc
pop
outsl
jb
jbe
push
jecxz
or
mov
add
sbb
imul
and
jbe
popa
pop
pop
into
lock
inc
sbb
adc
push
aaa
scas
adc
imul
jle
loopne
inc
out
in
sbb
add
scas
ljmp
into
sbb
fisubrl
leave
or
shll
and
es
jg
or
stos
je
jmp
mov
cmp
mov
mov
xchg
mov
clc
repnz
inc
cmp
mov
es
outsl
push
mov
sbb
loope
lret
aaa
sbb
daa
sbb
jge
cmp
sub
inc
movsb
cmp
movsb
push
xor
in
mov
out
stos
je
and
ret
pop
fisttpl
cmpsl
inc
lret
jnp
xchg
in
shll
hlt
adc
shll
cltd
clc
adc
dec
pusha
cmpsl
jp,pn
insb
sbb
sti
pop
mov
sarl
mov
jo
cli
inc
mov
scas
jne
js
xor
frstor
sub
xchg
inc
jge
testl
push
dec
push
pushf
shrl
jge
sbb
mov
push
jmp
movsl
aas
clc
add
and
cmpl
jno,pn
cltd
jl
push
push
pop
push
inc
xor
pop
sbb
jne
push
or
jmp
add
push
xchg
out
adc
outsl
cmp
mov
in
divl
pop
sub
push
jne
or
int
mov
sub
aad
sub
sbb
loopne
xchg
adc
push
jno
pop
test
sbb
out
insl
mov
lea
aad
and
and
or
pusha
cmp
loop
jg
xchg
dec
data16
lret
push
mov
xchg
ds
sub
mov
mov
loopne
inc
dec
out
xchg
in
jle,pt
cmp
push
add
push
dec
xor
mov
lahf
movsl
scas
popa
fwait
xchg
jns
add
inc
cmpsb
mov
pusha
and
jnp
call
mov
pop
add
mov
xor
clc
sub
fmull
arpl
ds
jg
imul
cltd
fcom
data16
cmpb
mov
jae
jle
dec
inc
dec
dec
lods
stos
adc
mov
mov
push
sarb
hlt
ds
sub
lods
mov
in
jl
cli
je
xchg
mov
in
xchg
jno
jno
int
pop
adcb
dec
mov
push
mov
fsubrl
in
movl
scas
mov
dec
inc
push
into
fwait
loope
or
xchg
cmp
and
mov
sub
sbb
sahf
fisttps
adc
dec
pop
adc
popf
adc
jb
pop
cltd
jp
into
lock
jno
fwait
push
push
sbb
or
dec
inc
dec
jns
cmpsb
ret
jbe
cmp
addr16
test
ret
insb
not
data16
fadds
or
sbb
jge
sahf
lret
adc
nop
lcall
mov
sub
sti
flds
inc
lods
insb
mov
or
and
xchg
lds
lcall
cmp
mov
call
clc
and
ss
fs
movsb
ret
lret
inc
mov
je
and
xchg
inc
cmp
je
imul
sub
or
je
sbb
and
outsl
shll
mov
dec
push
movsb
sbb
addr16
pushf
mov
xor
jb
mov
outsl
mov
and
call
je
stos
lock
sbb
int3
xchg
xlat
lds
and
xchg
cs
or
jmp
sbb
mov
push
std
rolb
mov
and
add
je
ss
arpl
pushf
xor
fstpt
loope
xor
push
jmp
and
aaa
lods
ds
jns
int
pop
inc
ss
add
out
mov
mov
xchg
mov
mov
inc
movsl
test
out
xor
popf
add
imul
fwait
dec
les
pop
mov
ret
lret
mov
fisttpll
mov
cli
mov
sahf
addb
jo
mov
stos
adc
mov
and
int3
fcoms
jecxz
dec
into
repnz
cmp
inc
fisttpl
sub
or
adc
cmc
iret
push
bound
sub
push
js
stos
cmp
or
sbb
pop
or
mov
mulb
add
popf
jae
sub
cmpsl
xlat
fisttpll
ss
shlb
xor
test
and
pop
adc
or
add
mov
out
pop
jg
je
adcb
xchg
jl
fdiv
push
fcoms
jb
cmpsb
xor
sbbb
jno
mov
and
push
sub
aaa
xchg
rcll
test
lcall
dec
int3
pop
xchg
pop
or
popa
int3
jge
popf
pop
fisttps
dec
mov
cmp
push
lahf
out
lods
cmovno
imul
popa
cmc
mov
and
pop
es
les
jl
aam
cmpsb
add
in
dec
mov
outsl
repnz
daa
xor
xchg
cmpsb
mov
int
cltd
leave
sub
aam
scas
jbe
pushf
xor
xchg
push
push
out
mov
es
mov
testb
mov
xor
xchg
ss
jge
sub
sub
ja
lods
cmp
mov
addb
insl
jae
cld
in
inc
daa
les
ret
aaa
sbb
and
movl
push
sub
mov
aad
mov
in
lret
jp
mov
add
push
sub
and
push
popa
repz
paddsb
jge
xchg
mov
fcompl
daa
or
es
jmp
shlb
popf
and
test
out
mov
mov
imul
mov
push
loopne
or
popa
inc
sbb
jnp
mov
push
ds
pop
and
stc
cld
jecxz
fsub
inc
mov
or
outsl
mov
pop
add
int
and
add
push
je
out
lods
repz
add
sub
ja
jbe
data16
inc
jl
out
jecxz
sub
mov
sub
dec
sti
das
sbb
ss
pop
lods
lret
sbb
add
cmp
xchg
neg
iret
add
mov
mov
lahf
faddp
xchg
xor
adc
pop
paddsb
insb
imul
mov
loop
xchg
inc
mov
pusha
inc
addb
int
xchg
mov
mov
fwait
add
ret
mov
mov
jnp
adc
aaa
in
mov
test
das
fsubr
xchg
ret
ret
xlat
out
insl
adc
mov
and
mov
sti
dec
adc
inc
push
mov
popa
cld
push
cmpsb
outsb
inc
dec
jne
ja
or
sbb
aaa
xchg
xlat
ss
pop
mov
mov
sti
lcall
jge
and
xor
jg
or
xorb
jmp
inc
inc
mov
inc
loopne
cmpsb
cs
jno
rep
fs
xor
inc
or
ja
mov
cli
xchg
mov
inc
inc
push
push
jno
mov
loop
mov
dec
inc
out
mov
pop
sbb
inc
les
lods
inc
and
fwait
les
jno
andl
outsl
inc
cmp
or
pop
sti
popf
movsl
inc
xchg
cmpsl
add
das
jnp
subb
addr16
push
and
cmpsb
dec
in
int3
hlt
out
decb
imul
inc
push
fdivl
ja
lods
mov
mov
pop
push
sbb
add
mov
fsubrl
out
mov
bound
dec
int3
stos
js
addr16
int
aas
lcall
xor
push
and
inc
gs
jecxz
clc
loopne
enter
nop
or
rcll
xchg
dec
loope
test
pop
mov
hlt
sbb
inc
je
flds
pop
dec
mov
mov
lods
mov
sub
repz
out
lods
mov
xchg
push
imul
xchg
pop
fsubrl
jp
rorl
add
hlt
movsb
shlb
xchg
adc
stos
outsb
scas
or
mov
lods
shll
mov
test
push
push
insb
jg
hlt
cmpl
jns
lock
sarb
out
jmp
lds
sub
jbe
leave
xlat
sub
mov
mov
or
pop
fisubrl
jp
or
fcmovnu
and
lds
xlat
sbb
pusha
jle
js
adc
dec
stos
lret
cmp
or
xchg
xor
sub
stc
jge
inc
scas
xlat
xor
scas
cmp
cmp
push
aad
out
xchg
bound
sbb
jb
orb
sarb
shrl
dec
push
sub
xor
cltd
in
fcmovnb
fldt
pop
xchg
std
or
filds
neg
xor
in
mov
scas
stos
and
ficoml
mov
xchg
pop
xor
popf
mov
cmpsl
shlb
mov
cmp
mov
scas
std
adc
add
xchg
sub
push
clc
sbb
push
adc
dec
adc
testl
pop
ss
sbb
jb
and
addl
ja
sub
stc
adc
cmpsb
sub
dec
pusha
cmp
mov
bound
repz
rep
std
fxtract
add
test
call
gs
push
iret
jbe
cld
pop
daa
aaa
insb
push
or
jg
out
jns
pop
enter
aad
stc
mov
ds
pop
mov
inc
adc
hlt
es
mov
sbb
inc
mov
mov
inc
sbb
mov
xchg
lea
lcall
sub
pop
inc
inc
insb
sbb
setp
jne
loopne
fisubrs
or
scas
cmp
dec
dec
int
cmpsb
and
xchg
push
cmpsb
adcl
sti
nop
and
mov
push
dec
addr16
jno
les
inc
lcall
loope
cwtl
xor
xchg
mov
fidivs
shlb
or
pusha
repz
scas
mov
sbbb
xchg
inc
jno
xor
test
and
data16
cmp
cwtl
adc
mov
and
sbb
fcmovnb
in
sbbl
jae
movsb
outsb
enter
cli
push
aam
add
xchg
mov
mov
test
add
fucomi
xor
into
jle
ret
into
push
int3
pushf
xchg
sub
cs
mov
rcl
sti
divps
loope
add
ret
push
ja
mov
insl
and
push
adc
xchg
xchg
lahf
out
add
nop
add
cltd
ret
jo
or
push
or
push
pop
stc
push
xor
sbb
pop
inc
mov
in
roll
add
idivb
insb
lcall
call
ss
xchg
cmpsl
je
sti
aad
je
das
sub
mov
push
lcall
in
jns
xor
cld
mov
and
sub
inc
les
pop
out
fdivr
sub
dec
xor
in
add
mov
mov
inc
aad
test
push
push
pop
xor
cld
insl
sbb
inc
shll
push
jno
mov
jnp
jecxz
xchg
mov
loop
stos
mov
push
push
sub
movsl
jmp
call
sbb
rcr
imul
pushf
xchg
sbb
idivb
push
jno
aad
fiadds
in
fldl
and
mov
repnz
pop
and
shll
movsl
xor
adc
inc
aad
ret
jle
imul
dec
push
daa
adc
mov
mov
mov
add
shr
in
repnz
xchg
lods
inc
popa
add
outsl
test
push
iret
sahf
or
aad
mov
lea
push
into
jno
dec
fisttpll
sar
arpl
push
jp
jnp
in
test
fsubrl
movsb
hlt
push
push
sub
clc
test
and
movsl
xchg
xchg
pop
push
int3
push
lock
and
sub
cmp
pop
jb
in
fisttpll
mov
popa
mov
cmp
mov
outsb
and
in
in
loopne
mov
jg
jo
mov
fdivs
pop
inc
loope
dec
xchg
leave
inc
or
fidivs
pop
mov
pop
sarb
stos
sbb
inc
outsl
test
push
out
pop
pop
pop
pop
cli
fwait
mov
cmp
push
fsts
inc
push
cmpsb
xor
inc
arpl
mov
xor
out
std
dec
sub
les
notb
push
pop
imul
or
pushf
xlat
nop
hlt
sbb
pop
dec
add
sub
fistpl
lods
aas
xchg
ljmpw
lret
inc
cmp
push
jmp
je
clc
or
enter
mov
and
jnp
icebp
mov
add
rorl
pop
mov
add
xor
mov
cli
fisubl
in
je
scas
add
mov
adc
add
adc
push
jmp
scas
insb
sbb
mov
mov
pusha
or
popa
cld
sbb
insb
cmc
push
and
or
sbb
adc
jmp
stc
xor
imul
cmc
cmpsl
push
das
mov
inc
and
mov
inc
jmp
inc
ljmp
xchg
push
loopne
mov
inc
aas
movsl
insl
jp
and
popf
add
dec
sbb
lods
xchg
js
pop
das
aaa
iret
and
shl
mov
in
pop
les
arpl
add
sub
mov
aas
adc
push
xchg
lret
push
shr
xchg
adc
cmp
iret
movl
fs
neg
fstpl
xor
push
cmp
stos
mov
imul
add
sbb
push
stos
cld
cmpsb
xor
addr16
sub
imul
or
lods
insb
stos
fwait
arpl
popf
shll
xchg
ret
pop
xor
mov
cmc
orb
fbld
fiadds
cmpsl
fmuls
aaa
mov
mov
pop
lods
imul
div
mov
or
sbb
xchg
lcall
cmc
ss
mov
and
scas
mov
lret
out
inc
mov
jb
add
aas
push
aad
scas
inc
pusha
lods
xorl
icebp
ret
mov
adc
fisubrl
or
aas
add
fsubrl
mov
mov
mov
and
xor
cmp
mov
push
xchg
push
pmullw
fdivrl
insb
pop
test
push
pop
mov
mov
jo
repnz
repnz
rcrl
sub
idivb
js
stos
sub
lods
dec
test
mov
js
xor
je
sub
add
insl
cli
jbe
cmpsb
push
rcrb
call
neg
rclb
add
push
sahf
inc
add
test
pushf
xlat
cmc
lods
sub
push
popa
xor
pushf
xor
add
mov
cmpsl
aaa
fucompp
in
sub
sar
jb
shll
fstps
inc
mov
jae
mov
adc
add
and
call
mov
add
fidivrs
mov
sbb
and
fnstcw
sti
stc
outsl
lock
mov
fwait
hlt
mov
das
cltd
cmp
xchg
stos
out
arpl
or
mov
mov
mov
xor
add
push
testl
xor
pop
mov
xor
call
mov
mov
icebp
in
add
cmpsl
out
ret
sub
mov
dec
cld
lea
call
cmc
adc
stc
fsub
das
mov
jp
les
cli
mov
sti
repz
int3
and
iret
add
aas
push
sbb
ljmp
mov
popf
hlt
inc
pop
enter
mov
into
out
inc
roll
into
push
fbld
adc
dec
out
inc
in
popl
and
xchg
cmp
sar
jne
ja
mov
fdivrl
mov
mov
out
inc
cmp
in
cli
or
dec
push
or
xor
jle
adc
jecxz
pop
pop
sbb
lea
out
imul
jo
addr16
or
into
nop
loopne
push
pop
jl
adc
sbb
je
aaa
mov
lret
jg
inc
fs
gs
and
inc
js
cmp
outsb
cmp
or
sahf
jecxz
mov
jecxz
in
aad
mov
mov
jp
or
mov
push
push
cmc
outsb
add
std
adc
push
out
xchg
mov
and
sbb
adc
cmpsb
mov
loop
or
dec
mov
jo
jge
cmp
pop
in
push
icebp
pop
sbbb
inc
cmc
xchg
cmovns
and
jecxz
aas
push
inc
inc
aam
add
in
aad
push
dec
andb
xor
les
je
mov
inc
pusha
shl
push
pushf
cmpsb
mov
cli
add
push
push
fwait
in
and
imul
mov
fdivp
out
daa
xor
addr16
or
cmp
pop
pop
in
in
nop
repnz
daa
xor
fwait
add
jmp
dec
jno
xchg
pop
and
sub
test
push
dec
mov
lcall
idiv
test
repz
sbb
mov
push
sbbb
mov
lret
push
push
pop
push
push
out
stos
cmp
fwait
lret
lods
push
mov
mov
cld
fcoms
or
call
call
push
push
jns
pop
scas
call
jecxz
mov
cmp
mov
cmc
mov
ljmp
loop
xchg
imul
dec
push
mov
jecxz
je
pop
int3
stos
dec
fmuls
cmp
or
inc
hlt
adc
adc
push
pop
icebp
jb
push
mov
int3
jnp
jbe
mov
xlat
js
xchg
xor
inc
jb
jae
jnp
inc
sahf
lds
xor
out
xchg
movsb
inc
xchg
je
dec
movsl
inc
mov
xor
loopne
inc
cmpb
out
pop
jmp
push
or
mov
add
fwait
cmp
outsl
xchg
pop
sbb
ss
pop
pop
dec
add
mov
jg
jno
fistl
in
in
popa
cmp
cld
popa
out
aas
nop
lcall
sub
lret
pop
adc
arpl
xor
js
js
push
jo
push
nop
lret
xor
push
movsl
mov
repnz
stos
sub
arpl
adc
movsb
sti
inc
fdivrs
sbb
out
outsl
xchg
mov
pop
mov
fcmovbe
sbb
jg
cld
sbb
aas
cmpb
fildl
cmp
leave
in
jns
xchg
mov
cmp
adc
dec
push
adc
stos
pop
cmp
outsb
ljmp
imul
push
push
out
xor
popa
dec
shll
cmpsl
icebp
sub
xchg
pusha
adc
mov
inc
gs
xchg
pop
div
fisubrs
andb
xchg
test
ja
ret
imul
cli
jecxz
jb
iret
mov
xchg
or
test
test
or
sti
or
aam
cmp
test
mov
repz
mov
pop
and
shll
add
cmp
roll
cltd
cmp
jne
sbb
js
test
and
test
lcall
ret
int3
outsl
ljmp
and
jnp
nop
mov
js
mov
pop
rclb
mov
pop
jbe
or
push
sti
xchg
popf
or
test
xchg
cmpsb
test
and
xchg
clc
add
jns
inc
cmp
dec
mov
mov
pop
insl
xor
sti
loope
repz
add
pusha
sbb
pop
ror
push
cmpsl
xchg
dec
inc
icebp
xlat
fiaddl
movl
out
ds
sbb
sbb
jmp
mov
push
mov
xor
push
jae
icebp
clc
inc
nop
and
pop
inc
xor
jb
scas
pop
cmc
or
xor
scas
in
xchg
in
lret
outsb
xchg
movsb
das
ljmp
mov
sub
in
fcomps
mov
jbe
and
test
xor
adc
add
push
dec
mov
out
outsl
inc
mov
pop
adc
movsb
and
enter
das
pop
xor
adc
out
inc
push
mov
mov
aas
or
sub
cmpsl
or
push
sbb
pop
int3
jno
or
and
dec
and
inc
cmp
push
dec
dec
inc
out
lcall
mov
and
ret
les
mov
and
inc
jno
mov
insb
sbb
jg
jno
cmp
pushf
mov
push
pop
inc
negb
iret
inc
jge
jg,pt
xor
call
rcll
mov
sub
imul
push
xchg
sbb
mov
or
mov
or
push
and
gs
invd
pop
movsl
push
push
inc
xchg
sub
je
jbe
cmc
outsb
jb
xor
push
cmc
movsb
push
andb
arpl
jo
imul
nop
mov
mov
leave
fsubl
inc
sbb
cmpsb
pop
cmp
add
jp
leave
lea
sbbl
idiv
sub
dec
adc
aad
into
pop
jae
nop
frstor
insl
movsb
out
shrl
jp
pop
inc
loop
icebp
fdivr
in
sti
or
outsb
jae
pushf
cltd
sahf
negb
jl
ret
mov
add
sahf
out
dec
dec
jmp
and
mov
dec
out
add
jmp
idiv
test
jne
lcall
cmp
out
sbb
push
dec
aam
pop
and
daa
orb
jb
jle
loope
popf
cmp
nop
es
daa
mov
outsb
subb
dec
lahf
sahf
adc
stc
dec
push
xchg
arpl
sub
ret
mov
and
aad
cmc
stos
icebp
mov
ret
lahf
add
negb
cmpsb
xor
jb
and
lret
outsb
lods
sub
or
in
jae
adc
inc
lds
into
test
cs
mov
mov
mov
cmpsl
cli
push
imul
movsl
pop
xor
in
out
adc
shlb
test
add
push
xchg
mov
adc
push
aaa
pop
cmp
xchg
adc
push
sub
mov
ja
jl
xchg
mov
divl
jo
add
jne
rolb
out
xor
pushf
imul
lea
fwait
mov
divl
pop
ds
mov
lret
push
inc
test
lcall
xor
add
nop
out
mov
xchg
lret
out
jae
cmpsb
adc
sub
or
loope
jecxz
add
inc
mov
sti
test
push
sub
fimuls
adc
roll
inc
push
jle
lret
jp
and
fcmovb
pop
sbb
pop
dec
add
mov
aaa
mov
mov
incb
ss
roll
add
dec
cltd
pop
outsb
xchg
dec
sub
push
test
imul
sti
rclb
iret
xchg
sub
and
pop
movsb
repz
push
mov
in
and
lea
jo
movb
int
repnz
push
xchg
divl
xor
out
jmp
aas
mov
mov
mov
fcmove
pop
mov
sub
jne
add
sbb
sahf
and
sub
xchg
jecxz
pop
aas
cli
and
cld
pushf
jae
aad
es
jns
test
xchg
mov
test
adc
sub
out
pop
mov
cvtps2pd
lods
jno
and
in
je
mov
dec
fdiv
jno
stos
sbb
popf
mov
inc
xor
test
lret
jle
sbb
add
movl
popa
inc
fwait
cs
xor
push
cld
and
rorl
sbb
mov
enter
rorb
not
lret
pop
xor
notb
daa
or
push
pop
push
cmp
leave
es
repnz
mov
mov
mov
in
loop
in
fisttps
mov
mov
xor
cmc
push
pushf
repnz
test
and
pop
stos
clc
xor
pop
pop
sub
fstpt
aam
fs
movb
scas
ds
inc
xchg
or
jle
cmp
out
jo
cmpsl
and
sbb
add
aam
jge
push
jge
mov
push
test
scas
int
mov
inc
addb
nop
cmc
jb
sbb
sahf
dec
jo
mov
arpl
cmp
sbb
sbb
sub
pop
scas
jbe
xor
hlt
out
pop
xchg
dec
addr16
jns
fwait
cmp
sub
in
cltd
pop
insl
sub
cmc
ljmp
push
out
cmp
imul
push
xchg
test
mov
jecxz
cmp
mov
xchg
hlt
arpl
mov
std
cmp
enter
sub
dec
cmp
or
jae
xlat
and
mov
outsl
js
stos
fiaddl
xor
cmpsb
cmp
daa
pop
mov
dec
push
cmc
and
inc
mov
mov
std
scas
jb
xlat
mov
icebp
adc
fwait
cmp
shlb
adc
ret
popf
pop
xor
xor
repz
jecxz
in
add
ds
test
adc
mov
orb
ret
sub
jmp
aad
or
add
pop
and
push
pop
dec
mov
inc
test
cmpsl
pop
imul
addl
pop
fdivs
ret
sti
mov
xchg
mov
mov
mov
cmpsl
sub
sub
pop
stos
hlt
mov
scas
and
cmp
pop
shlb
incl
xchg
mov
cmp
icebp
insl
insl
mov
sub
inc
mov
dec
clc
aas
aam
push
addl
mov
jge
les
ss
lcall
lods
gs
jp
or
pop
das
sahf
je
pop
sbb
inc
push
outsl
or
cmp
roll
sbb
insl
ss
mov
sti
data16
adc
stc
inc
dec
int3
jns
fsubr
js
or
imul
mov
sbb
cmpsb
nop
in
inc
std
int
sar
aad
popf
mov
lock
cld
shll
xor
pop
jae
sbb
movsl
xchg
xlat
lret
movsl
push
ret
push
test
repnz
rcr
inc
lds
stos
test
lds
ficomps
adc
ja
dec
out
in
cli
cld
mov
dec
ror
cmpsb
daa
mov
lret
add
and
adc
and
mov
inc
cltd
xchg
sti
sub
mov
in
repz
mov
or
adc
push
push
cmp
ret
mov
imul
jbe
jl
xor
in
ljmp
out
lcall
adc
mov
mov
jp
pushf
xchg
fnstsw
dec
or
daa
rcl
inc
and
mov
jg
js
pop
lods
jo
jmp
mov
fsubrp
push
stos
push
push
es
or
aaa
dec
sbb
mov
jl
int
out
out
ffreep
inc
out
mov
arpl
sub
test
nop
sarl
call
pushl
pop
ret
shll
xchg
jo
xor
repnz
movsb
repnz
lret
pop
lcall
sub
xchg
dec
mov
dec
and
mov
pop
push
jecxz
dec
dec
fcoml
ds
ret
in
mov
adc
in
mov
fadds
and
inc
in
movsb
sbb
pop
repz
pop
cs
arpl
cmp
xlat
push
cld
push
insb
imul
decl
scas
jae
push
mov
push
cmpsb
pop
mov
leave
imul
sub
push
mov
into
mov
mov
add
aam
je
dec
cmpsb
mov
je
lret
scas
stc
ja
sbb
xchg
adcb
mov
xchg
loop
pop
sub
xor
sahf
lret
pop
mov
or
jmp
xchg
dec
push
mov
sbb
mov
sub
push
inc
xchg
nop
int
into
pop
push
cmp
adc
add
out
jecxz
lcall
sarb
xlat
pop
mov
add
negb
or
cmpsb
or
icebp
cmpl
mov
out
popf
dec
xor
les
and
adcl
pop
iret
imul
adc
repz
push
mov
stos
jle
pusha
mov
lret
sub
jns
sbb
rcrb
jbe
cmp
mov
pushl
iret
sbb
sub
scas
pop
and
xchg
into
pushf
and
sbb
out
inc
scas
clc
lret
mov
rcl
int
sbb
out
lcall
inc
and
call
dec
ret
adc
cmp
sub
and
stos
insb
push
mov
jmp
sbb
outsl
push
dec
shrl
out
stos
cmp
addr16
std
int3
out
pop
xor
push
faddp
aam
pop
xchg
cmp
clc
in
push
test
sub
add
pop
push
jg
ret
jmp
cmpsl
push
sub
fisttpll
aam
push
mov
shll
xchg
inc
dec
jo
outsl
rcl
rclb
dec
and
pop
ja
mov
imul
mov
lods
mov
cltd
pop
les
cmp
add
sti
and
in
sbb
lods
mov
push
cmc
mov
mov
std
test
cmpsb
jnp
sbb
or
test
sbb
lahf
stos
mov
ret
and
xchg
lds
iret
ret
jg
cmpsb
push
mov
lock
rcrb
dec
dec
lods
test
mov
sub
arpl
or
jge
jno
adc
mov
mov
xchg
xor
aas
adc
cmp
repnz
inc
jae
ljmp
inc
cmp
mov
in
mov
mov
outsb
into
out
adc
test
pusha
lret
stos
icebp
jmp
andb
xor
push
sub
cmpsb
jbe
jp
dec
inc
les
sbbl
add
sub
aas
aaa
adc
ja
fdivl
inc
jno
fildll
cmp
mov
jp
mov
es
test
push
dec
sub
data16
inc
mov
mov
addr16
xchg
mov
test
push
or
outsb
shlb
mov
mov
test
sbb
dec
dec
aam
mov
in
inc
fwait
aaa
mov
fwait
imul
sub
mov
cs
sub
inc
dec
mov
add
xchg
shrl
xchg
jnp
bound
xchg
pop
pop
and
inc
dec
xor
gs
test
mov
cli
xor
enter
pop
jo
jle
int
mov
mov
movl
and
sahf
add
push
test
mov
out
rorb
mov
pop
mov
mov
std
pop
jmp
push
inc
xchg
pusha
fldcw
outsl
leave
jbe
decl
xor
aaa
sbb
jb
jl
and
cvtdq2ps
and
loope
push
and
xor
notl
cmp
rcll
in
mov
xlat
sbb
inc
cmc
add
fistpl
dec
mov
movsl
mov
stc
push
leave
dec
stos
push
mov
aam
or
and
mov
xor
mov
arpl
in
sub
pop
je
jle
mov
xchg
sub
call
jp
insb
shrb
pop
adc
xor
or
adc
adc
mov
sub
ret
out
sub
data16
jbe
push
lock
xchg
ja
imul
sti
pop
aad
add
cmp
dec
ja
scas
and
fcmovne
lret
push
into
push
sub
dec
cmp
jecxz
push
cmpsb
mov
lods
mov
sahf
test
sbb
loopne
mov
enter
mov
hlt
inc
clc
ljmp
inc
adc
xor
rclb
in
push
lret
sahf
test
repz
jnp
xor
push
push
ret
jp
inc
xchg
pop
dec
pop
js
jnp
sbb
xchg
jecxz
addr16
sbb
aas
lret
cmpsl
in
pop
popa
popf
xlat
sbb
push
fwait
xchg
dec
push
das
stc
jmp
mov
inc
mov
fwait
mov
and
dec
cltd
and
pop
xor
mov
daa
sbb
rclb
mov
lret
test
out
and
push
and
pop
ljmp
adc
rorl
orl
scas
inc
sbb
bound
mov
sahf
jae
push
xor
cmp
cwtl
inc
lods
pop
repz
lret
movsb
push
inc
pop
push
fdiv
mov
lock
imul
dec
dec
cli
cltd
out
push
js
andl
test
leave
and
into
mov
ja
mov
aas
call
mov
ficomps
cmp
sbb
jp
cmp
mov
mov
lcall
push
inc
sti
dec
ja
xlat
jns
mov
stos
sub
xchg
fistl
inc
add
mov
mov
cmp
push
cld
out
jge
out
insb
inc
jp
mov
popa
or
mov
inc
sub
mov
mov
cmp
add
fiadds
ss
ret
iret
or
sbb
hlt
sbb
nop
add
mov
lods
mov
ja
pop
imul
lds
bound
xchg
cmp
imul
push
lcall
xor
cmpb
xchg
adc
jl
ljmp
xor
pop
lahf
stc
cwtl
xchg
mov
fcompl
into
xor
jae
cmp
dec
insb
push
inc
inc
pop
ljmp
mov
mov
ret
fcoml
xchg
jle
dec
xor
inc
aaa
xor
rorl
adc
pop
adc
nop
pop
cmp
int3
in
pop
in
mov
adc
add
mov
lods
cmp
data16
test
xor
cmp
int
mov
mov
sub
int3
cwtl
dec
pop
outsb
inc
inc
jns
push
mov
sub
push
dec
xorl
xor
add
mov
sub
xchg
adc
out
cmp
jno
insl
sbb
jbe
out
pop
mov
ds
mov
inc
sbb
mov
lcall
dec
and
adc
sub
js
repnz
mov
leave
jg
dec
data16
cwtl
mov
sbb
cwtl
push
imul
testl
mov
push
mov
or
adc
into
push
pop
jecxz
and
dec
add
adc
pop
pop
fadds
pop
mov
aam
dec
sbb
stc
xchg
fnstsw
cld
pop
hlt
mov
cmp
lds
add
push
xchg
push
and
mov
adc
into
lods
pop
jmp
or
inc
lahf
push
mov
sub
insb
push
aaa
sub
je
push
repnz
inc
test
xchg
inc
xchg
mov
mov
mov
and
and
mov
dec
cld
adc
mov
movsl
pop
push
mov
stos
jp
pop
mov
ret
jne
gs
aas
jae
int3
arpl
mov
outsb
ret
sbb
jmp
add
iret
cmpsb
imul
or
shll
adc
lcall
jne
adc
rol
std
mov
push
mov
and
outsl
pusha
mov
std
adc
add
aas
fwait
mov
mov
dec
jecxz
pop
inc
push
inc
sahf
into
repz
push
adc
pusha
mov
int
test
int3
and
out
adc
add
or
inc
jp
sbb
jo
pop
fsubr
cs
pop
mov
enter
add
pop
imul
lods
mov
pop
adc
leave
inc
mov
idiv
jno
mov
out
sub
adc
pop
push
pop
sub
addr16
or
dec
push
popa
adc
add
push
insb
pop
jecxz
rcl
push
rclb
push
fwait
divb
jno
shl
pushf
dec
jo
sub
cs
pop
cmp
test
test
movsb
ja
push
adc
fnstsw
movsl
aam
sbb
pop
lds
or
adc
jbe
mov
push
aad
sbb
ljmp
push
and
test
pop
add
into
ret
mov
or
adc
mov
jbe
sub
xchg
mov
das
jmp
add
or
dec
or
and
jbe,pt
adc
daa
jg
sbb
outsl
push
fcomps
push
jp
insb
jmp
subb
mov
push
fists
insl
add
mov
sbb
loopne
roll
fists
mov
push
adc
lret
or
push
adc
aas
push
sbb
cwtl
addb
dec
inc
std
cltd
sub
add
cmp
stos
call
out
xlat
ficompl
daa
lahf
gs
mov
mov
mov
lahf
fisubrl
jp
xchg
adc
popl
add
xchg
dec
xor
mov
jg
or
mov
adc
dec
ret
movsl
mov
mov
movsb
inc
in
mov
mov
sbb
push
sbb
addr16
adc
push
sbb
rol
jl
add
xor
sub
scas
add
jno
imul
lret
push
iret
sub
cmp
pop
sub
shlb
sbb
sbb
je
ret
jns
mov
mov
dec
or
ss
mov
cmp
mov
jmp
mov
insl
jno
movsb
fidivrs
fdivl
test
jbe
pop
out
inc
out
fldcw
jo
lds
xchg
fisubrs
movsl
sbb
fmul
jno
push
dec
call
xor
stc
mov
mov
cli
adc
in
repnz
jg
lea
sbb
out
mov
xchg
cld
into
out
xchg
jno
sub
insl
push
sub
inc
cwtl
inc
cmc
popf
and
pop
dec
inc
in
popf
clc
outsl
mov
mov
add
out
jge
clc
adc
lock
scas
add
fucomip
cltd
dec
fistpll
pusha
mov
jbe
push
sbb
loop
dec
inc
scas
and
inc
shlb
push
dec
adc
fisubs
ljmp
add
mov
mov
xor
bound
cs
xchg
jp
jp
loope
out
mov
mov
out
xchg
pop
dec
mov
and
ljmp
in
nop
icebp
mov
mov
repz
mov
cmp
sub
fwait
je
lret
ficoms
push
scas
popf
mov
psubsw
push
mov
cmp
xchg
pop
mov
jecxz
cld
dec
add
push
adc
dec
xchg
jbe
iret
cwtl
cwtl
ja
dec
jbe
fbstp
in
ljmp
xchg
jno
std
push
xchg
imul
push
repnz
push
pusha
loopne
xor
sti
dec
bound
mov
adc
cmp
lods
sbb
xor
rorl
sub
pop
in
mov
push
loopne
pusha
leave
pop
inc
lahf
cmpsl
adc
lret
and
mov
xchg
push
add
push
pop
cmp
jo
je
movsl
mov
xchg
ss
cltd
jns
pop
pop
imul
addb
mov
mov
call
adc
pop
repz
sets
adc
fnstsw
xor
mov
rcrb
ror
repnz
add
repnz
aas
in
fimuls
je
out
push
outsb
orl
push
stos
aam
imul
dec
inc
arpl
xchg
jecxz
fsts
push
rolb
enter
ss
int3
cmpsl
mov
in
popa
adc
loope
out
push
fstps
xor
add
xchg
or
and
scas
push
lret
add
mov
xchg
mov
cmpsb
dec
jns
loop
cmp
dec
jl
xchg
jp
xchg
pop
jp
or
pop
bound
mov
cld
lock
jo
fwait
push
cmpsl
push
push
cmp
stos
imul
fwait
sub
add
mov
cltd
and
movsb
imul
sbb
jp
inc
clc
mov
sub
lods
pop
mov
stc
cmp
lock
push
hlt
cwtl
push
inc
push
fisubs
push
ret
repz
inc
xor
inc
repnz
jns
mov
sahf
enter
sbb
fidivs
push
insl
in
xor
inc
mov
mov
dec
jmp
in
sbb
pushf
mov
sbb
out
cmpb
cwtl
lret
or
out
sub
movsl
mov
test
sahf
xchg
call
fimull
out
movsl
add
mov
cwtl
lret
test
sahf
stos
int
mov
cwtl
sbb
lea
mov
repz
insl
fsubrl
jmp
mov
pop
or
inc
cmpsb
stos
mov
js
pop
xchg
sar
fiadds
mov
sub
mov
mov
add
loopne
shr
mov
cmp
adc
mov
mov
inc
jg
lods
mov
jnp
xchg
into
pop
mov
mov
mov
adc
jl
push
std
cmpsb
add
gs
lock
xchg
push
scas
movsb
sub
dec
test
ss
pop
sub
jmp
pop
sbb
pop
inc
lcall
push
clc
lret
cmpsb
cmpsl
sbb
xchg
hlt
adc
xchg
mov
mov
adc
inc
cmpsl
mov
popf
inc
adc
dec
mov
or
outsb
dec
adc
mov
les
mov
xchg
cmc
leave
stc
loopne
divb
push
xchg
sub
xchg
adc
mov
xchg
pop
mov
sbb
mov
jnp
popa
xchg
movb
pop
and
pop
push
lods
cmc
test
cmp
jecxz
xchg
std
xchg
aas
dec
test
in
mov
test
push
lahf
test
dec
mov
fld
pop
dec
cwtl
rcr
sbb
js
cmp
and
loope
push
arpl
jle
aas
sub
in
faddl
and
xlat
mov
add
sahf
push
sbb
lock
lret
or
out
inc
jb
push
fsubs
cli
cltd
mov
into
jbe
inc
pop
sub
xor
sti
mov
aad
sar
dec
enter
inc
push
les
jge
cmpsb
repnz
dec
push
in
xchg
mov
xchg
inc
and
sub
fldenv
lret
xchg
clc
adcl
fwait
cwtl
arpl
in
fnstenv
and
fwait
xchg
scas
dec
add
add
xor
loope
inc
sbb
stos
mov
and
push
es
fdiv
mov
ret
arpl
xchg
sahf
adc
push
lret
notl
sub
adc
mov
jp
filds
mov
adc
mov
iret
pop
pop
push
dec
cmp
push
dec
mov
jne
shlb
or
dec
sahf
and
xchg
xchg
mov
xchg
sbb
stc
adc
inc
sbb
and
or
frstor
dec
fwait
aam
and
fsubr
je
push
mov
or
dec
test
mov
xor
adcl
insb
insb
rolb
xchg
cmc
test
push
shlb
sahf
or
jge
stos
rclb
cmp
add
dec
movsl
add
mov
rcll
pusha
shll
ret
in
inc
test
cmp
testb
lea
in
lret
sub
fmuls
mov
shrl
jge
fisubrl
rcl
aam
fdivp
or
in
fidivrs
lock
xchg
ds
out
iret
sub
or
xorl
pop
repz
pusha
mov
je
add
pop
lret
sbb
jmp
xchg
pop
cmpsb
lret
mov
es
inc
cmp
mov
push
sub
xor
jp
mov
repnz
stos
repz
sbb
sub
out
call
js
adc
mov
inc
js
imul
test
arpl
and
xchg
lret
xor
sub
inc
pop
cli
add
mov
sub
ds
mov
fisubl
cmpb
shlb
xlat
xor
push
out
stos
or
pushf
ficompl
xchg
lcall
daa
adc
in
sub
aaa
test
push
pop
add
cmp
fistps
testl
aas
sbb
jne
sti
fnstsw
dec
sub
pop
sbb
ss
mov
lahf
jb
stos
in
pop
or
adc
scas
ret
out
int
and
add
inc
sbb
lds
subl
jb
mov
xchg
inc
xor
mov
xchg
jnp
loop
or
ss
out
test
cmpsl
xlat
and
jo
repz
sbb
add
mov
jl
cmp
lock
std
fidivrl
in
xor
mov
add
daa
push
addr16
xchg
jle
rolb
mov
aas
jle
cmp
insl
adc
push
repz
sub
fwait
dec
scas
push
sub
mov
shl
scas
and
lcall
aad
jl
lds
push
cmpsl
push
mov
aam
mov
jmp
outsl
insl
push
scas
negb
ds
notb
and
push
cwtl
in
out
dec
les
cmp
jmp
push
lods
inc
or
pop
sub
sub
dec
shll
mov
fsubl
scas
pop
jb
mov
inc
dec
pushf
pop
repnz
mov
mov
cwtl
dec
push
negb
cmp
adc
clc
sub
or
pop
popf
jle
aam
dec
ret
add
call
mov
push
lret
mov
xor
call
popf
inc
mov
inc
fisttpll
negb
clc
outsb
popa
and
or
xchg
dec
movsb
dec
ret
inc
mov
mov
mov
dec
xlat
iret
jle
xlat
movsb
popf
push
push
mov
add
out
dec
pop
push
jp
mov
rclb
aam
aaa
mov
ja
sbb
xor
adc
fnstsw
push
or
mov
and
jle
add
shrb
pop
fs
insl
fdivrp
mov
jecxz
out
clc
jl
rcrl
addr16
lret
and
sub
mov
cli
into
out
loopne
xchg
loopne
push
adc
sub
and
leave
or
jae
adc
out
cmp
out
dec
sbb
xchg
jmp
mov
aad
xchg
daa
cltd
inc
js
cmc
cs
in
pop
sub
adc
bound
xor
adc
and
push
or
sbb
push
mov
loopne
or
scas
pusha
or
push
enter
mov
add
addr16
mov
cmc
outsl
scas
in
scas
inc
mov
loop
adc
ds
cmp
stc
pop
leave
iret
hlt
xchg
pop
daa
jno
mov
sub
mov
popa
lock
into
addb
stos
xor
mov
out
fcmovne
leave
jecxz
cmpsb
jne
mov
mov
scas
in
cmpsb
adc
push
gs
xchg
mov
out
fsubrl
jbe
iret
into
mov
pop
jle
push
arpl
mov
shl
mov
mov
inc
push
cmovp
out
jle
in
orl
push
cmp
fwait
addb
lahf
jns
lahf
add
mov
pop
pop
insl
sub
int
ret
add
add
std
jae
and
add
cmp
or
push
pop
adc
mov
outsb
or
les
jg
inc
xor
stos
jb
sub
cltd
cmp
inc
mov
mov
adc
jmp
sti
jg
dec
xchg
sbb
mov
xchg
arpl
shl
fidivs
aas
gs
addr16
insb
or
insb
movsb
cmp
cmp
xchg
xor
cwtl
mov
jno
test
push
ret
mov
xor
in
mov
test
push
rcll
mov
bound
rorl
in
adc
push
xor
stc
jge
push
pop
stos
xchg
cmp
dec
clc
cmp
cmp
cmp
test
add
ds
cmp
xchg
xchg
fwait
iret
call
popf
ljmp
ljmp
push
mov
sub
sbb
repnz
xor
mov
xor
sbb
push
lods
xor
arpl
scas
aam
fnsetpm(287
sub
push
push
es
mov
push
lock
aad
jecxz
cmp
pop
pop
mov
jae
cmp
mov
jnp
xchg
inc
or
lock
shr
xchg
gs
test
mov
mov
push
push
push
push
sarb
jmp
shrl
add
out
loope
lea
or
mov
mov
test
xor
xchg
pop
addl
adc
lar
dec
cmp
outsl
push
int
cli
movsl
ds
add
mov
shlb
pop
outsb
sbb
pop
adc
add
cmp
aas
int3
outsl
out
stc
adc
andl
mov
jmp
lock
cs
repz
stos
sbb
mov
jmp
and
add
mov
dec
jg
push
mov
in
xor
mov
outsl
les
sub
psubusw
add
or
out
fildll
lock
icebp
imulb
int
jecxz
cmp
lcall
aaa
inc
mov
pop
jne
stos
xchg
je
dec
vmread
outsl
inc
mov
scas
cwtl
into
inc
and
hlt
xchg
jno
inc
movsl
insb
cld
pusha
sub
shlb
subb
sti
ficoms
adc
jbe
add
add
test
fisttpll
inc
or
stos
mov
js
movsb
dec
add
das
push
pxor
sbbb
cmpsb
sub
in
in
jnp
mov
data16
imul
nop
mov
mov
aad
push
pop
in
push
mov
std
sub
nop
in
popf
out
int3
mov
mov
xchg
push
xor
adc
mov
and
xchg
ficompl
mov
pusha
mov
pop
popa
pop
test
sub
cmp
cwtl
hlt
aam
sub
push
loope
sbb
cmp
daa
ja
shrb
dec
push
fdivrs
sub
cmp
pop
aad
add
data16
leave
daa
ret
or
jecxz
shl
in
push
fisubl
xlat
loope
fnstsw
fxch
cs
shrl
mov
stos
mov
cmp
icebp
outsl
lock
mov
dec
ret
mov
mov
add
jae
int
ret
scas
mov
sub
or
sbb
lret
mov
pop
jge
jmp
inc
int
adc
icebp
in
lea
mov
gs
adc
cs
inc
popf
xchg
cmc
sahf
mov
mov
dec
fwait
sbb
mov
test
sub
test
stos
adc
aas
mov
call
mov
xor
cmp
scas
push
lcall
push
sub
bound
in
xorl
mov
mov
xor
lretw
aaa
pop
rorl
cmp
push
xorl
push
pop
mov
andl
pop
dec
mov
adc
jmp
xchg
cmc
adc
dec
rcll
clc
and
movsl
mov
sub
jmp
into
test
out
or
out
sarl
xchg
jge
and
testb
lods
mov
jne
pop
mov
pop
jecxz
mov
fstps
or
dec
stos
inc
mov
push
add
add
fstpl
fadd
mov
ret
stc
popa
mov
ficompl
xor
dec
push
and
dec
fstpt
lds
popf
ja
pop
fisubrl
lea
push
aad
xchg
fisttps
mov
repz
xchg
out
and
lret
cmpsl
js
repnz
lcall
in
cmp
data16
shlb
mov
lods
push
cmp
lock
enter
mov
shrb
cli
outsl
rolb
sub
xchg
cmpsl
fwait
cld
mov
add
xor
jbe
and
cmp
mov
jb
mov
dec
xchg
loope
sbb
pop
pusha
outsb
jno
mov
ljmp
cwtl
fcompl
test
sub
xor
jo
jne
push
int
popa
mov
sbb
ret
adc
cwtl
aad
pop
fidivl
in
jb
xor
dec
insb
pop
popf
mov
inc
pop
sarb
scas
adc
xchg
shrl
add
adc
insb
test
out
xlat
repz
push
sbb
jmp
hlt
lahf
sbb
movsl
daa
cmp
int
jmp
inc
inc
out
cmpsl
inc
add
sub
inc
mov
adc
and
mov
hlt
icebp
inc
add
xchg
dec
imul
sbbb
push
jmp
sub
ret
leave
test
and
add
pushf
mov
icebp
adc
dec
loope
mov
jo
and
jne
jno
pop
xor
ror
sub
fisttps
and
outsb
hlt
cmp
pop
ret
xor
ror
ret
repnz
jnp
dec
int
jge
dec
mov
lcall
or
sbb
rorl
lock
or
mov
outsb
xchg
mov
into
mov
call
outsb
std
push
xchg
les
ja
mov
mov
lods
xchg
dec
mov
shlb
sbb
dec
cmc
jmp
cs
out
pop
push
jo
call
ljmp
sbb
pop
incb
inc
sahf
test
inc
out
arpl
xchg
mov
sub
xor
aad
stos
push
das
pop
psubw
shlb
push
sbbl
jae
mov
enter
mov
int3
fsub
in
lcall
pop
movsl
sbb
sub
bound
arpl
mov
scas
mov
lret
xchg
or
mulb
loope
into
pop
stc
fildll
dec
pop
jg
lea
cmp
mov
push
shlb
imul
push
and
xchg
jno
pop
nop
sbb
aad
sub
sub
arpl
inc
int
cld
mov
pop
push
jbe
push
push
pop
sahf
aaa
and
xchg
jle
xchg
pop
pop
push
pop
dec
pcmpgtd
cmc
push
dec
mov
push
xchg
lahf
mov
pusha
nop
or
add
out
addb
std
repz
mov
jo
pop
mov
and
je
insb
jae
pop
pusha
and
dec
aad
sbb
mov
lock
mov
jmp
mov
sbb
int
mov
lock
add
fbld
dec
mulb
call
mov
inc
fistpll
gs
in
sarb
mov
ja
xor
insl
inc
aaa
shll
fadds
inc
pop
roll
into
fs
cli
rorl
sti
popa
sub
xchg
imul
push
adc
imul
lret
bound
addr16
fcoml
cmp
stos
or
dec
xchg
iret
sbb
xchg
test
adc
sub
xchg
mov
mov
in
xchg
adc
adc
ja
je
sbb
mov
in
mov
daa
push
add
addr16
fcomps
push
cmc
js
rorl
push
cs
test
lods
jle
repnz
ffreep
add
lock
insb
inc
lcall
mov
test
andl
jno
or
lea
les
adc
inc
std
call
je
sti
aad
out
add
ret
jns
ja
cmp
jb
cmp
inc
xor
lds
jg
movsb
and
shrb
or
cmp
mov
xlat
dec
mov
popa
and
in
sbb
or
clc
mov
rolb
bound
lods
je
popf
in
xchg
add
scas
inc
and
push
das
jb
jp
negb
pushf
xchg
sbb
dec
aaa
sub
mov
es
and
test
jge
mov
jnp
nop
repnz
out
mov
mov
imul
mov
repnz
dec
mov
dec
lds
mov
into
lret
sbb
push
shrb
lahf
jmp
popa
pop
xchg
jp
mov
adc
push
mov
mov
mov
xlat
adc
lea
mov
hlt
outsb
rcrb
sahf
mov
adc
xlat
test
fwait
popa
imul
jbe
push
mov
cwtl
imul
sub
lcall
loope
cld
or
xchg
in
jbe
sbb
jnp
fidivrl
out
adc
push
mov
xlat
test
notb
loope
push
cmp
neg
push
pop
ljmp
mov
lds
repz
lret
mov
pop
cld
xchg
mov
loope
mov
outsl
mov
and
mov
mov
fidivs
adc
adcl
inc
sbb
lret
les
movsl
sub
cs
js
jge
fsubrl
data16
sbb
pusha
cmc
xchg
inc
push
xchg
andl
hlt
in
inc
scas
pop
arpl
pop
mov
mov
mov
inc
lret
mov
jb
cmpsb
out
mov
cltd
push
ret
mov
ja
scas
bound
cmp
xchg
dec
inc
xchg
xchg
movsl
mov
jmp
xlat
push
mov
lahf
mov
pop
sub
nop
leave
or
jbe
push
in
mov
and
or
jbe
scas
mov
shl
lods
cmp
out
lcall
jb
sbb
jnp
adc
mov
popa
xlat
xchg
pop
lds
loopne
imul
stos
fsubl
daa
js
insl
sub
sub
pusha
jne
or
adc
inc
mov
pop
ds
repz
xor
test
push
loope
push
and
sbb
loop
test
addr16
jmp
xor
xchg
xchg
push
sbb
addr16
cltd
jns
dec
sbb
fnstcw
out
fildl
adc
cmp
lcall
push
outsb
jle
mov
clc
push
in
out
pusha
inc
lret
daa
repnz
lret
xor
or
mov
cmp
lea
and
jb
addr16
pop
inc
int
or
adc
inc
mov
dec
lods
pop
stos
ds
cmp
sub
in
popa
cwtl
mov
and
mov
xchg
rcl
push
mov
sarb
mov
pop
xorl
cld
pushf
mov
sub
cmp
mov
xchg
dec
jecxz
xor
add
xchg
and
xchg
push
cmp
in
cmpsb
in
sbb
arpl
push
sub
xchg
mov
dec
dec
arpl
stos
imul
popa
dec
jbe
inc
ss
pushl
adc
adc
js
xchg
dec
pop
jb
add
popf
and
jns
cli
xchg
in
fldcw
mov
mov
xchg
xor
loop
dec
aam
adc
jl
repnz
fiadds
xor
or
inc
dec
rolb
jno
aaa
push
int3
or
cmpsl
mov
shll
frstor
mov
pusha
fcomps
and
pop
add
cwtl
add
dec
or
mov
sbbb
sbb
cmc
push
pop
bound
pushf
mov
fcomps
xor
loope
mov
adc
cmp
outsb
cmp
xchg
ret
lret
cmc
add
es
add
lcall
jbe
jne
or
or
push
and
ds
xchg
add
aad
imul
mov
stc
fimuls
addr16
mov
or
and
sarl
scas
dec
out
and
or
push
xchg
int3
insb
cmpsb
std
jp
popa
xchg
push
mov
dec
lods
xor
int
dec
daa
pop
push
cltd
inc
into
pop
sbb
popa
cmpsl
push
jae
movsb
stos
pop
mov
repz
ja
scas
cmp
pop
out
outsb
mov
hlt
outsl
mov
call
xchg
aas
mov
pop
cmc
test
sbb
mov
pop
dec
adc
mov
fwait
push
imul
jne
cmp
pop
mov
or
push
test
xor
adc
loop
jp
out
dec
cmp
clc
je
mov
repnz
insb
xchg
stos
lods
dec
mov
inc
sbb
cmc
js
mov
xchg
stos
mov
mov
imul
mov
jns
pop
xchg
cli
inc
inc
or
jns
mov
sub
mov
repz
es
sbb
mov
adc
imul
jo
mov
cmpsl
or
inc
je
lods
clc
dec
cmp
aam
push
fidivrl
lret
insl
xor
mov
dec
imul
and
push
std
xchg
adc
repz
mov
ljmp
mov
movsb
lea
divl
loopne
fcmovnb
jne
fs
fdivs
dec
cmp
cmpsb
adc
sbb
cs
mov
leave
cmpl
arpl
aam
adc
mov
jno
jbe
mov
rorb
loope
xor
push
in
pop
push
outsb
sbbb
lods
out
xor
fs
mov
dec
scas
ret
fs
xor
mov
std
int3
cltd
jb
rolb
fsubrs
clc
pop
jbe
and
jnp
aaa
add
inc
cltd
sbb
and
rorb
out
mov
test
aad
or
and
scas
je
icebp
cs
xor
aad
mov
into
jne
popa
ja
pop
inc
xor
fwait
push
cwtl
mov
dec
xchg
test
mov
mov
out
bound
sbb
scas
gs
repz
xor
fs
pop
int3
repnz
outsb
negb
dec
adc
stc
pop
push
out
mov
pop
repz
pop
mov
adcl
cli
jne
inc
jmp
jne
lds
test
les
call
scas
fildll
aam
ljmp
lock
lahf
pop
mov
xchg
push
dec
inc
arpl
js
clc
test
sub
ficoms
ficoms
call
fiadds
enter
js
xchg
mov
lds
rorb
dec
mov
mov
sub
sbb
adc
sbb
mov
inc
mov
fcomps
adc
pushf
adc
jmp
cmp
int3
aam
out
adc
xor
push
movsl
xor
imul
sbb
lea
or
aad
fimull
pop
pushw
push
daa
das
xchg
mov
repnz
jnp
sub
mov
cltd
mov
leave
sub
pop
xchg
jae
outsl
jno
arpl
int
ds
pop
movb
je
xchg
jge
cld
cmpb
pop
bound
mov
cmc
repz
addr16
pusha
loopne
pop
jl
pop
test
xchg
lret
push
mov
repnz
sahf
ret
lret
shll
sub
leave
and
jmp
mov
adc
testl
out
aas
repnz
ror
in
ret
fiadds
push
pop
nop
dec
test
fildl
imul
dec
fsubl
ss
pop
push
adc
push
add
clc
xor
test
mov
pop
pushf
xchg
push
push
jp
les
mov
sbb
fcoml
pop
jo
loop
dec
and
dec
jecxz
add
xor
pop
lock
cli
in
les
add
icebp
dec
cmp
int3
enter
and
call
mov
stos
in
xor
cmp
jp
popa
nop
dec
add
es
pop
es
mov
xor
mov
inc
hlt
pop
divb
mov
xchg
gs
jmp
adc
cli
sbb
push
insb
cmpl
xor
fstl
bound
insb
mov
mov
sub
test
mov
movsl
pop
daa
cltd
or
addr16
and
scas
xchg
jns
call
fcomps
dec
lret
or
outsl
lret
fs
loope
xor
xchg
test
bound
jge
xor
mov
sub
sahf
je
or
sahf
test
add
not
mov
add
imul
imul
enter
jl
mov
or
pusha
adcb
imul
lds
push
sbbb
les
jecxz
xor
add
sub
nop
xchg
xor
pop
mov
lret
out
pop
xchg
push
jne,pn
mov
aam
adc
test
mov
pop
dec
push
jp
dec
inc
in
dec
dec
add
mov
push
enter
iret
fcmove
iret
jns
adc
pop
adc
fmuls
cmpsl
or
call
xchg
into
pop
push
call
mov
xlat
push
mov
inc
inc
pop
mov
pop
push
sub
inc
jp
int
sub
imul
sub
pushf
sahf
inc
mov
lret
test
xchg
mov
cli
test
insl
test
loop
in
cli
mov
test
fstps
or
inc
enter
adc
es
fistps
add
adc
cmove
enter
lock
data16
jns
outsb
into
push
add
movsb
xor
in
repz
cmc
jb
push
sbb
es
mov
dec
pop
push
fldt
fimuls
mov
flds
arpl
xchg
out
dec
mov
push
loope
xchg
or
popf
jge
mov
call
out
mov
shrb
iret
enter
mov
cmp
hlt
negl
jae
inc
cmp
ljmp
int
jb
gs
inc
jo
sbb
cmp
clc
jecxz
push
push
shl
push
pop
mov
out
iret
mov
and
outsb
adcl
xchg
in
pop
mov
out
test
inc
jnp
popf
mov
cmp
sbb
ja
hlt
aas
jp
je
cld
in
xchg
test
push
in
mov
int3
cmp
fsubrs
mov
movsb
sarb
ljmp
add
int
lods
mov
sbb
call
loopne
mov
aad
int
add
hlt
jg
push
xchg
insb
mov
sub
out
aad
mov
ret
leave
cli
in
out
push
inc
push
imul
and
lret
xchg
sub
add
popf
mov
dec
aas
aad
shlb
pop
repz
ficoml
lcall
cmpsb
clc
sbb
loopne
jnp
cmp
mov
push
lahf
pop
aad
and
or
mov
test
clc
jg
mov
sbb
cmp
jb
roll
aad
mov
test
push
mov
xor
lods
pop
test
rclb
test
out
loopne
insb
cmp
cmpsl
repnz
jl
sbb
dec
xchg
mov
ret
inc
xchg
push
cmpsb
ljmp
sahf
cltd
fiadds
sarb
sub
sub
out
mov
pop
sub
mov
popf
loope
ficoms
xor
inc
shll
sbb
aas
jb
xor
iret
popf
pop
mov
jb
ficoms
mov
pop
test
jb
mov
inc
dec
inc
sti
adc
rcr
dec
xchg
mov
in
or
test
inc
arpl
movsl
aaa
loop
cltd
inc
cwtl
jl
scas
scas
or
insl
push
sub
adc
xchg
adc
popa
adc
pop
mov
fcoms
pushf
lods
jg
jp
adc
dec
adc
mov
inc
and
and
push
arpl
xlat
scas
xchg
gs
sub
out
jns
dec
lea
mov
out
sbb
jb
negb
repz
stos
repnz
and
outsl
cltd
jns
mov
cmp
lret
imul
popf
rorl
insb
mov
rep
mov
enter
or
movsl
add
push
mov
jl
loop
mov
ss
mov
iret
fisubs
sbb
xor
adc
or
and
dec
xchg
cmp
gs
dec
mov
cwtl
pop
adc
test
enter
sbb
sub
xchg
xchg
ja
lsl
inc
cld
mov
pop
test
movsb
daa
sub
shlb
cmc
int3
loopne
mov
xor
cmp
daa
inc
insl
out
jbe
ret
and
mov
call
mov
dec
sbbb
mov
cltd
adc
xchg
enter
fdiv
arpl
adc
xor
int3
leave
sub
jno
je
mov
push
mov
popf
xchg
fwait
ret
in
push
stos
add
imul
fdivrl
jge
hlt
push
pop
mov
imul
fimuls
pop
dec
xor
je
outsl
aam
into
push
rcrl
mov
je
mov
sbb
stos
cmc
lds
pop
rclb
loopne
jnp
inc
movsb
jmp
aas
cmp
inc
jecxz
aaa
xchg
jp
stos
sbb
pop
repnz
sbb
popf
cltd
seta
lods
ret
mov
mov
lods
jmp
jne
addb
adc
inc
pop
iret
movsb
or
jg
pop
les
cmc
add
push
cmc
dec
in
or
bnd
scas
and
lds
loopne
pop
leave
adc
mov
push
sbb
mov
mov
ja
lds
cld
mov
das
ds
cmp
cli
cmpsl
xchg
xchg
xchg
in
out
cmc
repnz
xchg
and
dec
mov
movsb
aad
and
jp
fisubrs
stc
fimull
gs
mov
dec
and
adc
fimuls
or
adc
push
or
xchg
in
scas
cmp
pop
adc
enter
out
gs
dec
mov
push
adc
fwait
imul
js
std
sti
js
xchg
enter
test
shrb
fwait
dec
mov
insb
js
cmp
aas
xchg
mov
rol
ss
adc
fnstenv
mov
jnp
sar
xchg
push
sbbl
adc
xor
aad
arpl
je
pop
push
cld
pop
cmp
pushf
mov
loopne
add
dec
loopne
ljmp
ret
loope
sub
push
popf
js
adc
out
mov
or
push
sbbl
cli
popa
sar
out
sysret
or
and
xor
mov
into
mov
hlt
ficoml
fxch
jo
jg
mov
sbb
lods
push
arpl
js
rclb
mov
xor
xchg
mov
das
iret
cmp
mov
jmp
add
out
jnp
sub
insb
test
push
fwait
adc
fs
add
adc
outsb
pusha
pop
decb
dec
jp
out
inc
shl
mov
xchg
adc
inc
sub
mov
repnz
jle
ljmp
add
in
int3
inc
xchg
sub
int3
push
cmp
adc
dec
mov
ss
dec
insl
dec
ret
shl
gs
push
push
xchg
xor
cmpsl
xchg
test
mov
fwait
push
jecxz
pop
icebp
push
out
adc
lret
mov
cmp
sbb
mov
cmp
loope
js
mov
stos
pusha
loop
sub
sbb
sub
aaa
xchg
test
popl
les
std
jae
pop
xlat
jnp
push
mov
or
rolb
inc
xchg
popf
mov
int
ja
inc
mov
insb
xor
push
sub
cmp
xlat
or
sub
jns
lea
fmull
in
cltd
out
push
and
push
mov
out
inc
jne
roll
cmp
adc
pop
outsl
sbb
sbb
in
out
jns
cmp
ss
enter
adc
cmp
pushf
add
and
push
xor
icebp
stos
les
int3
pop
int
push
adc
jns
push
jae
sahf
mov
lret
and
xchg
dec
inc
inc
add
cmpsb
and
or
sbb
test
stos
int
or
sub
inc
out
mov
mov
lods
mov
fildll
enter
jns
xlat
popa
mov
jg
pop
add
sbb
adc
and
int
add
outsl
popa
mov
iret
xor
mov
hlt
in
stos
ds
fucomp
out
pushl
or
imul
es
push
rol
cmp
mov
jae
xchg
int
and
xor
add
fs
adc
pop
jmp
push
cmpsl
in
jl
cs
inc
clc
sbb
jbe
cli
cld
gs
push
lret
loopne
ljmp
or
mov
or
dec
pop
mov
test
sbb
sahf
cs
adc
ds
sbb
inc
xchg
dec
and
xchg
add
mov
je
sub
addb
push
shlb
out
jecxz
push
add
mov
lret
mov
stos
add
out
or
cmp
xor
in
inc
fmull
pop
sbb
ljmp
or
pop
dec
movsl
xchg
sub
sub
push
loope
sahf
mov
js
push
imul
fs
sahf
lcall
subb
and
jecxz
cltd
mov
gs
lcall
jecxz
int3
or
mov
push
xlat
div
loop
lods
repz
dec
cmp
bound
notb
mov
lock
xchg
fsub
inc
scas
jecxz
lcall
aam
pop
lret
popa
xor
int
dec
nop
or
icebp
fstpt
pop
sar
mov
lods
dec
sub
clc
addr16
jl
in
or
lret
loope
insl
mov
xor
daa
cmp
retw
cmp
leave
imul
pop
push
icebp
add
cmpsl
add
imul
int
xor
and
out
cmpsl
and
dec
stos
scas
sbb
lahf
dec
sub
test
icebp
jns
inc
in
gs
ds
pop
in
pop
xchg
pusha
mov
fwait
mov
or
fsubrl
sub
mov
mov
cmp
dec
not
lods
jbe
sahf
stos
sub
sbb
xor
cmc
aam
repnz
xor
push
mov
mov
mov
xor
add
test
out
adc
in
cmp
out
rol
adc
mov
cmpsl
lds
and
fadd
xchg
loope
andb
push
mov
mov
popf
pop
pop
call
lea
jmp
insb
cmc
pop
in
push
rcrb
jecxz
jae
pop
pusha
ret
cltd
or
jns
xor
sub
movsl
xchg
int
pop
jae
shrl
adc
push
clc
push
mov
push
mov
push
dec
jne
ljmp
das
sub
scas
xor
sub
sub
cmp
outsl
aad
push
push
ret
mov
mov
test
jg
test
repz
out
fldenv
sahf
xchg
xchg
adc
clc
lds
adc
and
mov
repz
push
pop
orb
sub
push
mov
mov
jnp
add
mov
mov
mov
push
insb
cmc
add
sarb
call
pop
and
or
popa
inc
jo
jg
mov
jle
xchg
addr16
add
and
push
xor
imul
stos
in
ret
lods
pop
add
paddb
and
jae
xor
mov
push
mov
shlb
out
jl
xchg
push
add
add
push
cmc
loop
and
xchg
mov
and
in
rcl
sub
js
jle
ds
xor
sbb
mov
lds
out
jne
mov
mov
jo
fisttps
inc
loop
or
lcall
aas
mov
jbe
icebp
das
test
inc
lods
out
mov
fisttpll
faddl
ljmp
jno
popa
das
flds
mov
rcll
fildll
fidivrs
adc
scas
dec
jecxz
or
enter
mov
and
push
fldt
lock
shll
sbb
enter
cwtl
sbb
jge
pop
xchg
add
jae
adc
out
int
mov
and
out
mov
or
cld
das
and
xchg
or
cmp
or
shlb
dec
movsb
lea
std
jecxz
ret
cmpsl
or
popa
jp
mov
xchg
ss
dec
mov
jnp
inc
pushf
add
jno
xor
or
arpl
mov
addr16
pop
mov
jnp
push
out
sub
xchg
xchg
pop
andb
mov
inc
cwtl
out
jae
cld
push
adc
push
jb
jbe
ss
fildl
out
data16
cltd
sbb
pop
fiaddl
movsl
and
cmc
mov
in
icebp
and
rcrl
sbb
add
lds
std
stc
adc
int3
xchg
mov
adc
adc
lret
sub
mov
push
inc
cs
push
hlt
add
cmpsl
sub
js
pop
jns
add
clc
jmp
stc
jne
mov
or
jp
and
in
and
fstl
mov
fsubl
imull
pop
sub
sbb
jns
add
fistps
roll
fiadds
addr16
sti
sub
imul
add
adc
cmc
add
or
dec
inc
mov
mov
xchg
movsb
mov
mov
add
sbb
rorb
lods
cmpsl
mov
dec
cmpsb
test
js
sbb
ljmp
or
in
icebp
push
lock
fisubs
sub
cli
mov
mov
sbb
int3
push
pop
mov
sub
out
xor
in
es
imul
mov
jp
out
out
in
pop
out
push
sub
adc
lar
push
test
es
icebp
rolb
adc
jp
fisttps
push
xchg
cmp
sti
jne
adc
mov
arpl
loop
push
ljmp
ss
jbe
adc
gs
loope
push
loop
mov
in
and
ljmp
in
mov
daa
les
mov
test
movsl
jmp
ret
push
push
aad
rol
sbb
dec
dec
fdivs
repnz
sub
out
out
sbb
and
in
jp
mov
test
mov
flds
popl
subb
xlat
call
and
push
jge
mov
sti
jecxz
leave
push
lret
sbb
mov
sbb
sbb
aad
mov
xor
push
xchg
jnp
dec
mov
int3
pusha
daa
aas
pop
jne
dec
fidivrl
movsl
pop
imul
out
gs
push
inc
mov
das
jb
and
insl
sub
cmp
xchg
in
lods
std
test
jb
mov
hlt
iret
popf
decl
cli
sub
jmp
jb
js
jecxz
gs
sbb
jecxz
mov
stc
or
jg
subb
movb
dec
sub
inc
aad
je
push
loope
sar
mov
cld
pop
nop
outsb
cmp
sarl
in
sar
pop
lds
iret
insl
pop
pop
mov
and
lcall
movsb
xor
or
jmp
in
xchg
xchg
scas
inc
test
xorl
mov
pop
mov
cli
pop
rcr
cs
in
cmp
xchg
cwtl
xor
lret
jne
nop
mov
xchg
in
dec
mov
andl
outsb
sti
shll
inc
in
rcll
inc
aaa
popf
test
mov
lods
inc
jp
dec
jnp
sub
add
cwtl
mov
or
dec
add
fcom
in
movsl
cmp
leave
lahf
inc
mov
push
imul
push
es
pushf
mov
out
std
xor
xchg
sub
adc
xchg
jmp
loope
sbb
jp
test
adc
andl
cwtl
add
fnstcw
jge
or
in
jmp
cmp
xor
pop
mov
lret
out
out
bound
in
je
or
xor
jno
cltd
inc
push
sbb
lahf
std
lods
cmp
pop
mov
jle
out
lcall
dec
inc
dec
adc
out
push
adc
add
lcall
pop
jp
lea
icebp
mov
xor
int3
mov
stos
icebp
fwait
mov
inc
imul
and
or
sar
add
mov
push
leave
push
fimull
xor
inc
jae
xchg
test
jo
hlt
sete
pop
push
shll
xlat
push
pop
xchg
lock
test
in
adc
xchg
mov
xchg
dec
jle
push
mov
out
sub
sbb
iret
in
add
pop
mov
inc
outsl
and
xchg
aaa
jp
out
and
sub
fdivr
data16
dec
pop
cmp
pop
mov
repnz
xchg
xlat
call
sar
mov
adc
imul
mov
mov
fdivrl
stos
jg
pop
mov
jecxz
fdiv
mov
enter
push
incl
sbb
out
add
xchg
push
fnstcw
lret
mov
out
mov
push
out
jg
sub
dec
dec
ja
mov
filds
pop
xchg
out
add
inc
dec
mov
lds
jp
mov
push
dec
ljmp
adc
adc
xor
inc
dec
js
jmp
inc
sub
mov
mov
xlat
or
and
jnp
int
in
mov
ds
movsb
mov
rcl
jns
mov
xor
loope
add
in
fwait
xor
into
bound
into
pop
jb
aam
test
mov
push
adc
jno
push
push
dec
pop
mov
adc
jns
fdivrl
ret
js
outsl
jmp
dec
into
jb
mov
jl
push
les
sbb
in
sbb
inc
stos
pop
sbb
inc
mov
popa
in
fisttpl
dec
push
jmp
dec
sub
aaa
adcb
adc
mov
bound
fisubl
fisttpll
leave
outsl
xor
arpl
cwtl
push
aas
xchg
adc
icebp
mov
incl
out
cwtl
repnz
cwtl
data16
push
roll
loopne
fxch
dec
jb
pop
or
daa
into
dec
push
push
ljmp
out
jl
xchg
jecxz
pop
lock
or
mov
je
dec
gs
add
mov
dec
jl
test
imul
aas
dec
sub
test
xchg
xchg
popf
or
pop
inc
mov
adc
sub
mov
adc
leave
sti
rcll
push
adc
jb
out
fmul
pop
icebp
push
fisttpll
sahf
xchg
and
push
popf
in
adc
sbb
sbb
call
sub
stos
jbe
fstps
or
mov
xchg
pop
sub
xchg
mov
adc
fsubs
sahf
and
pop
add
ret
ja
or
stc
pop
xor
sbb
out
int
xlat
xchg
inc
sub
popf
or
leave
std
add
and
loope
sbb
pop
inc
inc
cltd
sahf
out
jle
outsb
mov
sbb
sbbb
push
adc
adc
cmp
mov
jp
cmp
mov
mov
dec
pop
adc
and
lds
push
sahf
roll
dec
jmp
cmp
hlt
ds
jecxz
mov
xchg
jecxz
mov
push
sar
sbb
jge
mov
loopne
dec
push
mov
mov
out
lea
jge
add
dec
in
xor
enter
sbb
push
cmp
push
xor
popa
sbb
mov
jge
jno
pop
shl
fdivrs
roll
push
dec
mov
pop
gs
ret
int
loopne
test
outsb
lods
cmpsb
aad
or
sbb
inc
lcall
bound
mov
movb
sub
shll
lods
repz
gs
sub
int3
sub
mov
rorl
scas
fs
aad
inc
ficoms
cli
xor
cmc
fwait
call
icebp
ret
andb
test
xor
fisttpl
cwtl
imul
xor
dec
adc
push
xchg
test
xchg
out
and
mov
push
sbb
into
and
push
dec
add
outsb
stos
xchg
add
fisubl
pop
xchg
cmp
push
add
sub
xchg
mov
cmp
jae
jne
insb
aas
add
jne
mov
daa
popf
adc
sbb
les
sbb
stc
cmp
dec
sub
test
repnz
add
fs
dec
negb
and
out
cmp
mov
aas
xchg
out
mov
lds
jns
jl
mov
sub
dec
mov
inc
andb
cmp
mov
leave
out
lcall
sbb
or
sbb
mov
mov
pop
rcrl
insl
out
xchg
inc
mov
test
jge
push
sbb
cmp
pop
notl
pop
shlb
shl
movsl
ror
dec
push
jle
jb
clc
dec
int
cmc
incl
xchg
mov
mov
aaa
jg,pn
lea
xchg
push
test
mov
sbb
gs
sbb
mov
sub
and
stos
mov
popf
push
cld
and
sbb
hlt
pop
pop
push
int3
sti
dec
ss
jnp
jmp
xor
jnp
fmuls
ret
rcl
adc
push
cmp
arpl
rcrl
push
jg
outsl
sbb
mov
fdiv
stc
cmp
jmp
jecxz
imul
shrb
inc
mov
add
xor
lret
inc
mov
adc
lcall
cmpl
and
addr16
push
stos
or
mov
scas
add
sub
mov
mov
mov
pop
loop
mov
inc
lcall
push
mov
scas
into
lret
jle
hlt
ds
or
cmp
xchg
pop
pop
les
push
popa
pop
xor
sbb
adc
push
movsb
push
aad
push
fstpt
lcall
dec
jp
mov
sub
leave
push
fstl
fdivl
cmpsl
lock
or
and
sub
inc
dec
daa
fldt
cmpsl
out
in
clc
dec
jmp
jmp
inc
lds
filds
popa
jbe
repz
movb
add
adc
fs
mov
sub
bound
orl
push
xlat
dec
mov
dec
in
aas
rcr
push
in
or
aaa
lods
push
mov
fxch
movsb
mov
aam
loope
andl
or
add
inc
mov
jg
filds
cmpsb
cs
lret
sbb
add
aas
mov
clc
aam
negl
sub
mov
pop
jnp
lcall
loop
in
movsb
pop
lea
gs
add
or
xchg
hlt
or
or
movsl
inc
xchg
insb
jecxz
cltd
add
xchg
outsb
mov
or
sub
cli
inc
cmp
insb
mov
cmpsb
pop
mov
pop
add
jge
imul
adc
stc
cwtl
mov
mov
les
mov
aaa
xor
cmp
adc
std
enter
and
mov
lods
cmp
aam
xorl
cmp
stc
sub
or
pop
sub
ljmp
clc
cltd
xchg
int3
mov
pushf
sti
sbb
andb
mov
movsl
mov
cld
cli
xchg
or
push
mov
xor
mov
movsl
and
xchg
lods
mov
pop
jbe
insl
xchg
adcl
adc
push
xor
scas
aad
dec
movb
je
iret
and
ljmp
loop
js
mul
lea
dec
jl
movsb
fdivs
lahf
stc
push
scas
xor
test
xor
or
sub
dec
push
es
ss
outsl
sub
adc
cmp
mov
outsl
jg
sub
fdivl
in
je
rcrl
and
popf
xchg
mov
mov
adc
inc
inc
adc
add
stc
jnp
test
push
popf
sbb
in
lret
push
sti
sub
popf
jle
add
popa
cli
sbb
pushl
idivl
out
sub
rcrb
iret
das
ss
xor
sub
rcrb
insl
loope
lahf
into
ror
cmc
sbb
adc
in
cmp
dec
push
lds
mov
pop
pop
aas
stos
push
sahf
out
in
cmp
cmp
cmpsb
mov
ror
fmul
push
xor
adc
jle
mov
xor
pop
jnp
cmc
xchg
adc
inc
popf
push
mov
mov
push
dec
push
jp
cwtl
cmp
fldl
push
and
out
enter
adcl
pop
stos
sub
mov
sbb
adc
scas
xchg
jno
or
push
add
outsl
cs
stos
cwtl
aas
push
inc
rcrb
loopne
or
sub
cmp
mov
cmp
fst
out
mov
add
out
dec
xchg
movsb
adc
mov
insl
insb
adcb
lret
push
or
js
sbb
std
in
lahf
sub
cld
jl
lds
add
data16
pop
inc
ja
pop
dec
xlat
icebp
push
cwtl
aas
jno
pusha
das
lock
in
xchg
xor
nop
xchg
popf
negb
inc
hlt
mov
mov
lock
xchg
out
mov
fwait
push
lret
xchg
pop
ret
jge
cmpsb
lret
xchg
int
cmp
push
xchg
repnz
and
bound
mov
in
dec
adc
cmpsl
jg
mov
xor
pop
outsb
cmp
iret
mov
bound
stos
loopne
mov
xchg
scas
out
xchg
mov
shll
aad
inc
pop
push
sbb
nop
xchg
cld
xor
out
cmp
sti
xor
idivb
sbb
popf
dec
test
mov
sarl
jo
push
xchg
and
mov
sahf
jne
sbb
mov
clc
out
sbb
adc
jns
std
inc
int3
loope
inc
xchg
or
sub
inc
ficoms
xor
push
sbb
add
cli
gs
lcall
cmp
mov
out
fcoms
sub
and
lds
aas
enter
cmpsb
movsb
dec
aaa
daa
sub
aaa
ljmp
cmpsb
sbbl
mov
and
dec
sub
imul
cmc
das
insl
inc
jge
sarb
mov
cmp
stos
xorl
loope
sub
sub
into
icebp
nop
dec
and
imul
jp
add
push
fs
popa
push
aam
cld
xchg
xchg
shlb
mov
pop
cmp
popa
ljmp
int3
xor
xlat
aad
cmpsb
adc
lock
pop
ret
fwait
jle
mov
neg
mov
mov
into
sub
movsb
adc
cld
fs
stc
xchg
out
ljmp
daa
cltd
push
mov
mov
jnp
inc
xchg
shr
jecxz
lea
jae
movsb
lods
cmp
pop
pop
xor
add
test
int3
xor
adc
lahf
or
push
pusha
pop
push
jne
xlat
enter
pop
sar
sub
sub
rclb
and
dec
add
lret
mov
mov
movsl
into
pop
in
aad
inc
and
pop
jns
popf
dec
into
scas
fmuls
pop
cmc
insl
adc
pusha
ljmp
pop
push
enter
xor
clc
mov
xor
sbbl
dec
mov
out
cld
mov
xor
dec
mov
test
into
mov
dec
xchg
cmpsl
cmp
notl
cmp
mov
iret
fwait
pop
sub
cmp
pop
inc
aaa
jge
adc
adc
out
repz
jno
pop
mov
lods
mov
cmc
sbb
or
jge
jne
jle
jnp
rclb
pushf
sub
xchg
dec
mov
repz
cld
test
mov
enter
in
dec
test
mov
sahf
push
orl
pop
jnp
cmc
push
nop
add
xchg
and
lret
adc
cmpsl
js
call
push
lahf
push
push
sub
das
jecxz
add
fldpi
jnp
imul
clc
sbb
or
mov
inc
popa
cwtl
icebp
out
and
sbb
movsb
mov
in
jns
pop
dec
das
xorb
mov
lds
test
xchg
lret
je
adc
jae
js
dec
mov
ret
loopne
fstl
icebp
mov
pop
movsl
and
xor
loope
sahf
stos
or
dec
cli
cld
jecxz
dec
push
movsl
repz
cmc
repnz
xchg
shrl
mov
adc
roll
jno
xor
jp
mov
cwtl
mov
or
jo
jb
imull
outsb
cmp
or
add
mov
jno
push
shrl
add
sti
inc
fs
std
dec
xlat
rclb
shr
and
adc
andb
jl
xchg
aad
addr16
stos
pop
arpl
scas
inc
les
sbb
loopne
sbb
popa
mov
iret
les
jne
lahf
std
xchg
ret
js
ja
jno
stc
popf
mov
fists
lret
or
bound
add
arpl
or
out
cmp
jne
sahf
mov
imul
stos
pop
iret
xor
mov
or
shll
lods
mov
or
das
shrl
ja
in
pop
enter
cmpsl
fld
mov
fs
leave
mov
push
inc
adc
mov
jbe
ret
les
rcrl
pop
lds
pop
add
stos
out
out
mov
adcb
cmp
xor
ret
and
repnz
mov
jecxz
pop
and
jno
sub
aas
jae
orb
in
icebp
xchg
fistpll
xor
pusha
xor
cmp
ret
popf
cmc
adc
adc
inc
xor
mov
fldcw
into
mov
dec
cmp
jbe
lahf
inc
cmp
push
clc
push
dec
add
mov
cmp
dec
xchg
xor
repnz
fimull
in
aad
pop
mov
jnp
aaa
cli
shl
std
push
stos
cmc
pop
or
sbb
incb
cmpsl
test
pop
aas
lcall
inc
dec
fwait
push
std
add
push
pop
test
mov
sub
pop
cltd
orb
ss
ficompl
push
lahf
fcompl
ds
aam
nop
popf
inc
sti
lock
pmullw
jne
xchg
sub
adc
or
icebp
cld
decl
cs
out
and
xor
lds
pop
inc
mov
inc
adc
inc
bound
jmp
adcb
and
fistpll
adcb
and
jmp
and
jne
push
inc
push
or
or
mov
insl
sbb
out
push
jnp
int3
fistpll
cmp
mov
pop
push
inc
dec
dec
cmp
mov
popf
sub
lods
shlb
pop
mov
in
inc
out
lea
scas
cmpsl
inc
xchg
mov
ljmp
mov
jb
aad
push
lds
rcl
enter
mov
add
js
lret
ja
lock
popa
lods
movsl
pop
mov
mov
fimull
add
in
xor
lds
std
xor
xor
and
nop
mov
ret
dec
fisubrl
pop
xor
push
das
lds
aam
pshufw
lcall
sbb
inc
inc
les
shlb
adc
pop
inc
and
test
out
pushf
cmp
sub
mov
and
leave
inc
in
roll
jno
bound
je
sbb
xor
clc
jge
loop
iret
xor
xlat
add
and
jnp
aad
sbb
push
xchg
or
and
and
pop
ja
add
stos
pusha
xchg
outsl
fsts
mov
sti
imul
dec
mov
pop
xchg
icebp
stos
lcall
aaa
psubsw
cmp
sti
xchg
push
and
or
lret
daa
pop
adc
mov
jno
jbe
sti
shl
repz
nop
or
mov
inc
shrl
ja
jmp
mov
sahf
call
pop
and
jno
fdivl
and
testl
leave
movsb
imul
jge
and
fwait
lret
add
or
xchg
fldenv
sbb
popa
cmp
addr16
xchg
pop
xor
subl
dec
scas
incb
cmpsb
push
or
xor
stos
nop
and
and
insb
dec
dec
cmp
xchg
daa
or
cmpsb
movsl
imul
roll
jb
bound
dec
ret
jecxz
xchg
xor
push
scas
ret
clc
mov
out
sub
dec
jae
or
jle
and
enter
lods
fsts
sti
inc
jb
lsl
dec
lret
jnp
add
jp
xchg
fadds
push
out
or
adc
aaa
leave
dec
adc
js
fisubrl
jge
jecxz
andb
cmpb
xlat
sub
cmp
sub
lret
push
loop
push
cli
cmp
mov
push
fldl
rorl
pusha
and
or
jnp
leave
or
popa
ss
out
je
or
das
pop
cmc
pusha
outsb
pop
mov
adc
nop
in
rcll
sub
leave
jl
aaa
lods
nop
insl
dec
inc
in
dec
rcll
adc
repz
movsl
or
out
es
sub
ljmp
push
call
int3
out
mov
mov
xchg
xchg
dec
mov
mov
adc
push
mov
mov
mov
xor
or
inc
pop
dec
aaa
adc
out
aaa
dec
push
push
or
dec
lock
sub
push
aaa
cmc
pop
adc
imul
clc
mov
int
mov
inc
cmp
inc
inc
cmp
inc
xorb
mov
dec
rorb
aas
inc
mov
out
pop
mov
call
repnz
test
pop
mov
insl
frstor
sub
lods
in
jle
dec
stos
pop
lds
lcall
cmp
lcall
jo
ds
movsb
pop
sbb
lcall
call
cwtl
add
cmc
and
jl
leave
dec
jno
jae
bound
arpl
mov
fdivl
sbb
dec
repz
jne
pop
cmp
fnstcw
mov
clc
iret
outsb
movsl
loope
scas
sbb
cwtl
pop
movsl
push
ja
aam
mov
lds
pop
icebp
mov
inc
std
mov
pop
mov
jbe
popf
cs
cmc
push
pop
fistpll
jl
push
iret
ja
xchg
std
ret
sub
fadds
pop
mov
mov
leave
jo
push
subl
adc
decl
rcl
inc
add
jmp
xor
xchg
cmp
dec
add
pop
jl
inc
inc
mov
or
ror
test
dec
or
inc
shl
fildl
or
jge
ret
push
mov
addr16
cmpsl
mov
or
mov
inc
mov
lahf
xchg
xchg
adc
push
jae
xchg
add
int3
add
jne
add
inc
fadds
jecxz
push
ds
push
jg
add
js
lods
or
dec
cld
inc
hlt
int3
addb
lea
sti
outsb
mov
mov
pusha
or
push
icebp
inc
sbb
cmp
insl
inc
push
sbb
pusha
loopne
shl
daa
adcl
out
movl
mov
lods
out
ret
gs
data16
in
scas
repz
mov
xor
xor
out
int
lret
shrl
mov
sub
add
pop
or
gs
xchg
mov
jnp
movsl
call
add
dec
cmp
inc
push
xchg
clc
dec
mov
push
dec
mov
add
sbb
add
pop
int
into
icebp
sbb
push
push
pop
je
and
fstpt
push
push
or
push
out
std
sub
dec
dec
and
adc
orb
xchg
repz
mov
test
mov
jp
dec
push
mov
cltd
test
out
xchg
or
add
mov
mov
jbe
fnstenv
adc
popf
cwtl
adc
dec
daa
mov
popa
sub
sbb
out
sahf
mov
dec
add
lret
outsl
test
inc
push
push
ret
outsl
out
inc
or
test
movsl
push
pop
dec
and
cmpb
sbb
jb
sub
mov
std
mov
sub
cld
movsl
inc
mov
shl
xchg
lods
test
sbb
xor
xchg
jg
or
mov
push
mov
aad
leave
fstp
xchg
repz
cli
lods
xchg
arpl
sbb
mov
fimull
pop
test
pop
pop
adc
aam
inc
mov
jecxz
sarb
sub
mov
jne
cld
or
loop
cmp
mov
adc
in
sarb
test
push
pop
mov
sbb
dec
dec
mov
cld
mov
scas
arpl
push
sarb
push
xor
jmp
mov
in
sub
pop
fldt
xor
adc
push
outsl
in
out
testl
push
push
call
repnz
cmc
xchg
jne
xor
in
ds
sub
cwtl
pop
int
mov
fidivrl
jp
pop
idivl
cmp
jle
jnp
pop
adc
hlt
repz
addr16
push
sar
sbbb
xor
and
imul
das
shll
lahf
jns
mov
pop
push
jge
imul
fcompl
inc
push
pop
sbb
stc
add
gs
push
ss
cs
sbb
rolb
mov
xor
pusha
out
jecxz
in
sbb
lahf
or
jbe
insb
movsb
push
out
inc
adc
test
mov
xchg
outsb
call
in
shlb
fwait
add
fwait
shr
mov
pop
lcall
inc
in
lock
mov
sti
cwtl
add
mov
mov
jne
jnp
sub
mov
dec
bound
xor
sahf
aaa
push
repnz
in
mov
das
outsb
push
inc
scas
loope
lret
push
icebp
jnp
fdivl
mov
jb
lret
dec
xorb
and
sub
jbe
xor
dec
dec
int
std
mov
in
sub
je
rorl
mov
mov
stc
lret
xor
cmpsl
jo
ret
cmpsb
stos
push
inc
lds
push
lods
adc
sub
inc
cmpsl
cmp
xor
shlb
in
lcall
pcmpgtd
subb
out
ss
pop
lock
mov
mov
lods
pop
sub
mov
inc
mov
loopne
and
repnz
jbe
sbb
out
ds
push
push
rolb
mov
or
vminpd
mov
sbb
ja
jo
inc
or
cmp
xchg
sarl
rol
mov
pop
adc
shll
cmp
xor
adc
push
movsb
inc
mov
popa
gs
imul
add
adc
sub
add
mov
sbb
decl
jne
cmpsb
mov
jmp
roll
imul
mov
les
int
jo
mov
jo
arpl
xchg
ss
loop
pop
fld
mov
jae
sti
mov
add
mov
dec
lods
jnp
jle
mov
add
mov
stc
cpuid
fsubs
lret
jmp
dec
push
jmp
scas
das
sbb
xor
and
inc
inc
cli
mov
and
int
nop
push
cld
sub
out
inc
push
mov
movsb
mov
xchg
xor
pop
pusha
out
jmp
aam
pop
pop
jmp
dec
adc
jmp
idivl
mov
dec
adc
sbb
cmp
mov
dec
adc
mov
test
pop
outsb
ljmp
pop
pop
mov
aaa
insl
int
fcomp
clc
lods
jb
psrlq
mov
add
mov
xchg
ror
push
cmp
pop
subl
inc
and
stc
lds
pop
push
xchg
stc
mov
fbld
int
out
sbb
pop
mov
lcall
cltd
push
mov
fisttpl
psadbw
jle
xchg
stos
mov
fwait
cwtl
lock
call
mov
sbb
psrld
pop
dec
mov
scas
dec
xchg
pushf
or
mov
xor
cwtl
sbb
xchg
dec
pushf
push
call
cmp
or
xlat
inc
mov
loop
sbb
cmp
outsl
shlb
shll
hlt
jnp
out
shlb
fsts
rclb
mov
nop
xchg
stos
inc
nop
xor
adc
ror
cmp
jge
das
aas
fmull
es
jmp
ss
sbb
push
pop
gs
pop
jle
out
mov
movsb
jg
ja
enter
pop
push
mov
sbb
inc
add
imul
mov
popa
pop
push
jne
sub
inc
aad
add
inc
iret
xchg
movsl
xor
imul
or
mul
xchg
cwtl
rolb
xor
mov
rorb
adc
retw
ljmp
sbb
clc
add
jmp
mov
scas
stc
xchg
or
sarl
imul
cli
call
jmp
mov
hlt
stos
inc
mov
xor
out
ljmp
mov
repnz
xrelease
inc
dec
xchg
pop
subl
pop
jb
shl
dec
add
mov
jp
mov
es
loope
js
pop
and
fsub
sub
sub
shl
xchg
pop
test
xchg
add
cli
xor
jmp
add
roll
add
insb
mov
fs
dec
push
sbb
xorl
mov
mov
je
nop
dec
or
mov
dec
out
cmp
push
cli
movsb
dec
mov
int3
lahf
xor
shll
test
int3
test
decb
push
movsb
xchg
pushf
imul
div
popa
sub
pop
mov
push
cld
or
ss
xor
or
leave
loope
mov
mov
pushw
add
arpl
mov
je
sub
movsb
hlt
add
mov
ret
pop
mov
in
test
stos
mov
pusha
test
sti
xlat
dec
fildll
mov
cmpsb
lea
cltd
mov
pop
push
dec
scas
lds
in
push
loope
xchg
xor
sahf
xchg
mov
hlt
or
push
push
cmp
and
sub
hlt
or
int
scas
xor
nop
pop
mov
dec
out
addl
push
pop
dec
mov
and
inc
in
and
push
inc
push
sbb
push
dec
lahf
pop
ret
sub
cmp
mov
sbb
push
inc
cltd
xor
pop
sub
lcall
mov
pop
shrl
out
jge
aad
hlt
push
test
or
adc
cmp
faddl
arpl
push
aam
dec
hlt
jmp
mov
add
mov
mov
push
mov
mov
jb
ljmp
addl
lahf
pushf
lret
ja,pn
scas
cmp
fsubrs
popf
push
hlt
ficompl
dec
aam
lods
mov
add
xlat
cmp
fcomp
sbb
jo
cmc
repnz
push
cld
testl
sub
aam
fistps
test
out
xchg
test
jecxz
sbb
xlat
xor
inc
inc
jl
jne
inc
jge
jno
inc
push
mov
ljmp
inc
fwait
outsb
lret
xchg
adc
negl
out
fisttpl
pop
orl
push
push
cltd
pop
sub
adc
inc
data16
test
mov
push
xor
rep
pop
mov
and
add
mov
inc
cmp
add
mov
adc
xor
lea
push
into
mov
ret
xlat
add
xchg
push
lods
les
out
les
cmpsl
or
jno
ljmp
jp
and
jns
call
mov
and
aaa
inc
inc
rolb
or
jno
shlb
iret
or
inc
ret
xchg
insl
xchg
push
cli
inc
add
fildl
sbb
mov
add
sub
aaa
inc
test
lods
mov
aad
sub
test
clc
inc
push
xchg
lret
int3
inc
xchg
lods
xchg
xor
push
pop
jae
or
push
inc
sub
aam
mov
shll
cwtl
movsl
cmpsb
mov
mov
push
sar
je
ss
jb
inc
sub
lods
sub
mov
inc
gs
xor
jecxz
popa
xchg
mov
sbb
jno
mov
xchg
lahf
xor
or
mov
bound
sbb
push
icebp
jp
movsl
imul
test
push
aas
xor
xchg
test
dec
fdiv
xchg
xchg
dec
fstp
add
sub
cs
push
xor
iret
mov
pop
and
andb
scas
jl
in
mov
test
daa
push
inc
cld
push
push
jg
mov
inc
adc
adc
outsb
jg
into
sub
cmc
inc
sbb
mov
mov
inc
xchg
inc
adc
or
jb
and
call
cmp
push
xchg
mov
cs
jl
xor
inc
clc
add
mov
adc
pop
insb
psllw
nop
pop
mov
and
sbb
dec
std
mov
sub
orl
sub
or
test
pushf
mov
sti
loopne
adc
nop
push
pop
int
push
inc
in
push
xchg
movsb
lahf
jge
jge
cmp
insb
or
lds
dec
rcl
push
rcl
xor
inc
sbb
sti
jb
les
jg
aam
nop
mov
push
mov
mov
xor
mov
push
push
cmp
inc
popf
shll
or
imul
in
jle
push
mov
dec
jbe
jo
das
dec
fsubs
std
cmovnp
incb
and
cmpb
imul
mov
pop
test
rol
cmp
dec
ror
pop
lret
jecxz,pt
loope
push
leave
mov
push
ret
sti
sbb
stos
mov
xchg
shl
mov
mov
jge
shlb
int3
push
xlat
rcrb
jecxz
xchg
das
sub
push
aam
cli
lcall
sbbl
inc
dec
pop
inc
or
dec
sbb
push
lret
xor
mov
jp
mov
loop
dec
dec
inc
dec
xchg
jae
dec
lods
pushf
inc
add
gs
adc
push
mov
cwtl
popf
ljmp
mov
mov
jns
aad
popf
cmpsl
pop
inc
enter
xchg
or
gs
popa
lret
add
cmp
mov
push
inc
sub
jae
pop
pop
js
out
mov
sub
shrl
subb
popl
enter
aaa
call
dec
xchg
mov
xlat
shrl
fisttpll
shl
fiaddl
mov
seto
iret
test
scas
push
stos
aaa
pop
repz
mov
add
jne
lock
fs
adc
sub
jno
and
cmp
lods
and
sub
out
aaa
pusha
div
cmp
movsb
test
mov
fcom
test
les
out
pop
mov
das
test
mov
xor
add
adc
fmul
mov
sbb
mov
pusha
jae
sub
jb
push
add
sbb
sub
cld
sbb
out
add
ret
cmpsl
cmpl
sbb
sbb
lock
es
mov
xor
stos
mov
stos
xchg
adc
add
popw
push
out
push
mov
sarl
push
xor
outsl
push
jae
inc
fwait
push
jg
sub
test
dec
insl
mov
pop
outsl
jmp
pop
sub
inc
mov
cmp
xor
ds
sbb
shll
sarl
sti
clc
lods
cmp
pushf
sbb
mov
pop
add
pop
push
push
loope
sahf
xchg
das
les
inc
mov
sbb
mov
mov
pop
sti
xchg
cwtl
out
xchg
jg
sbb
xchg
xchg
lret
cmpsb
int
mov
jbe
icebp
lcall
mov
adc
pop
adc
aad
or
jp,pn
and
cmp
iret
imul
mov
int
in
cmp
fildll
xchg
pop
or
add
fwait
aaa
lahf
movb
add
jne
push
sub
jb
sbb
sbb
mov
jbe
mov
test
roll
shll
scas
ja
scas
imul
popl
pop
data16
dec
push
sarl
jp
pop
or
rolb
jbe
sbb
scas
jmp
into
adc
xor
push
mov
cmpb
icebp
jno
pop
cmpsl
push
loop
stos
sbb
xchg
jns
mov
cltd
pushf
xchg
inc
lods
lcall
negb
mov
cmpsb
or
setns
les
ret
dec
jle
ret
packsswb
push
sahf
lcall
sti
xor
imul
mov
mov
or
inc
fwait
add
sbb
sbb
push
jne
mov
xchg
xchg
mov
adc
ficompl
mov
nop
idiv
into
or
dec
scas
fcomi
adc
mov
mov
scas
push
xlat
sbb
movsl
pop
into
and
push
int
sub
cmp
sub
xchg
lock
imul
jbe
sbb
fdivp
pop
push
cmpsb
cmp
mov
inc
jb
mov
pop
lds
out
and
pop
sti
hlt
xchg
sti
jo
enter
mov
adc
sahf
adc
sub
test
ljmp
xchg
pusha
mov
js
or
mov
mov
cmpsl
jbe
push
js
test
pmulhuw
subl
nop
mov
adc
test
cmp
push
jne
mov
sahf
pop
sub
mov
sti
int3
dec
ss
cltd
mov
in
aam
jne
xchg
hlt
sub
jg
fcompl
lret
loope
cli
sbbl
mov
mov
test
test
push
lock
xchg
dec
std
test
rolb
lock
add
or
sbb
jo
dec
or
test
cmp
movsb
adc
js
inc
xchg
xchg
xchg
stc
js
cmp
push
bound
dec
icebp
test
pop
out
int3
aad
push
dec
popf
cli
fwait
push
mov
jno
mov
stos
idivl
mov
fadd
ja
jge
leave
mov
arpl
pop
fisttpl
sarl
mov
divb
push
pop
shll
sub
in
jne
and
ret
lods
xlat
ds
push
iret
lods
adc
frstor
jb
cltd
or
pcmpeqw
ja
add
clc
inc
sarb
jo
xchg
fldl
mov
fbld
add
push
mov
xlat
lcall
test
ja
cmp
bound
push
add
inc
iret
dec
mov
sbb
mov
fisubs
scas
insl
mov
movsl
and
shlb
pusha
gs
inc
adc
int
or
jnp
mov
dec
mov
lret
cwtl
insb
cmpsb
dec
xor
or
mov
or
mov
popa
cmpsb
dec
or
pop
dec
pop
fisttpl
adc
sub
andl
dec
and
sbb
popf
sbb
not
mov
orb
and
sub
adc
popa
inc
and
stos
sbb
popf
adc
leave
js
imul
mov
dec
nop
sub
mov
pop
inc
inc
jno
sbb
xchg
xchg
adc
push
fsubp
mov
mov
inc
lock
adc
lret
push
mov
movsl
mov
mov
xchg
dec
int3
mov
ret
or
cmp
dec
popf
cmpsl
adc
popa
pop
mov
push
jae
push
dec
rol
cmp
test
xchg
inc
or
jecxz
mov
push
jne
sub
out
bound
dec
push
and
pop
jle
enter
es
inc
cmp
insb
push
insl
mov
js
lret
xrelease
or
add
xlat
test
test
push
fs
push
mov
scas
in
addb
in
mov
out
mov
daa
mov
mov
inc
push
sbb
xchg
and
stos
fcompl
xchg
inc
lret
or
cmp
out
sbb
mov
inc
std
sub
enter
and
or
inc
mov
push
rcll
and
jecxz
mov
repz
mov
inc
int
add
mulb
or
and
fistpll
inc
test
mov
ljmp
adc
pusha
int
test
cmc
lret
cltd
sub
jmp
pop
rclb
lcall
mov
add
addsd
pop
stos
mov
fs
daa
sbb
add
mov
cld
xor
pop
jbe
push
loop
add
loop
add
fisttpll
sub
cmp
pop
sbb
mov
lahf
fstpl
in
push
adc
or
jbe
sbb
inc
dec
imul
and
div
mov
hlt
add
mov
imul
js
xor
rol
jge
jne
inc
lret
inc
lods
mov
push
call
out
pop
pop
loop
cmp
faddl
sub
sub
ds
fmuls
mov
dec
arpl
jl
dec
cmp
aas
and
lcallw
sarl
inc
sbb
cmp
push
jns
adc
outsb
aad
fdivr
jno
xlat
icebp
stos
jmp
adc
pushf
cmp
add
xor
mov
jp
test
scas
mov
mov
xor
out
lcall
mov
pushf
cli
sub
fwait
aaa
lcall
das
sbb
cmc
test
div
pusha
arpl
push
push
les
arpl
adc
lret
jmp
arpl
cmc
std
rol
cmp
js
faddl
test
lea
fiadds
or
xchg
jae
push
xor
daa
xchg
in
movups
in
cmpsl
mov
adc
out
dec
mov
mov
stos
jnp
cmp
and
xchg
hlt
cmp
inc
es
cmp
xchg
cmpsl
mov
push
pop
or
pop
in
in
outsb
or
mov
out
fdivs
scas
dec
cli
loop
enter
pop
jae
cmp
mov
cmp
pop
adc
loopne
xor
inc
jns
in
adc
inc
fcompl
jg
push
sub
lock
js
scas
mov
imul
insl
into
xchg
addb
push
repz
sub
out
das
pop
mov
jo
out
and
gs
ret
push
jno
pop
cmpsb
pop
xchg
es
ret
loop
aaa
repz
cmp
fadd
leave
pop
cmp
imul
xchg
sub
sbb
gs
js
push
mov
sti
pop
stos
mulb
mov
mov
adc
fcoms
cmp
mov
movsl
add
data16
pop
into
in
mov
movsb
adc
push
jno
clc
push
fdivl
notl
das
cs
inc
dec
pop
fnclex
dec
lret
mov
push
in
inc
adc
fcompl
dec
adc
test
pop
xchg
xlat
sbb
jmp
xchg
mov
inc
call
adc
fsubl
pop
sub
adc
adc
inc
clc
shrl
pusha
push
push
mov
jmp
xor
xor
je
jae
mov
outsl
push
mov
testl
jecxz
sbb
adc
dec
jbe
add
push
cld
mov
sub
push
mov
cmp
add
iret
push
add
in
stos
mov
std
add
mov
push
sbb
loope
lods
cmpsb
ret
pop
jnp
mov
dec
int3
lock
lret
addb
inc
xor
pushf
cmpsl
fs
xchg
lea
fstpl
push
js
mov
lods
sub
dec
or
inc
sub
lret
fcomps
mov
inc
int3
es
cmp
call
xor
cmpsb
or
or
mov
jo
jbe
int3
inc
mov
inc
lahf
push
int
pop
mov
xor
mov
add
js
lahf
push
mov
cltd
mov
mov
les
xor
mov
xor
stos
jnp
nop
popf
fwait
in
std
jb
subl
lcall
inc
mov
dec
ficompl
push
pop
lcall
loope
mul
sbb
int3
js
sbb
pop
dec
jbe
cmp
in
jbe
sub
jne
jns
push
jo
add
stos
mov
mov
jp
mov
imul
sub
lret
and
push
in
scas
adc
loop
xchg
movb
repz
pushf
fcomi
adc
jno
ljmp
call
mov
xchg
dec
rorl
adc
adc
fsubrl
sub
sub
gs
fstps
stos
jmp
xorb
ja
adc
add
call
and
cli
sbbl
clc
jmp
nop
push
mov
call
inc
push
dec
inc
insl
pop
dec
mov
std
xchg
arpl
addl
mov
xchg
mov
fstp
and
cmpsl
add
ret
ss
sub
loopne
inc
mov
icebp
sub
jo
int3
mov
xor
data16
sub
mov
push
inc
cmc
ds
jb
ffreep
cmc
xor
mov
or
out
fidivrl
and
or
pop
mov
in
mov
or
xor
jmp
mov
fs
leave
add
adc
push
pop
into
mov
test
mov
and
xor
push
lcall
push
mov
mov
cmp
mov
movl
rolb
sub
andps
adc
movsb
pop
rorl
add
push
push
in
test
xchg
and
cwtl
stc
pop
xchg
hlt
sti
insl
sahf
mov
cmp
arpl
stc
aam
xchg
cmp
out
inc
hlt
es
lcall
mov
xor
sbbl
seto
mov
mov
pop
push
xchg
sbb
push
add
xchg
cmpsb
xchg
cmp
jg
mov
dec
ds
mov
push
mov
adc
adc
xchg
cmp
jno
dec
jbe
int3
sbb
es
mov
jg
mov
aaa
dec
jg
jg
out
ret
dec
pop
leave
xlat
lret
negl
jecxz
mov
repnz
dec
outsl
pop
pop
ret
inc
out
pop
test
rol
ljmp
out
aam
std
sbb
cwtl
sarl
imul
shlb
jns
inc
popf
or
loop
pop
xchg
jnp
xchg
xchg
and
push
push
dec
test
jecxz
or
mov
sub
fsts
xchg
mov
pop
shl
mov
icebp
loopne
mov
inc
push
xchg
loope
jae
push
inc
sbb
mov
pushf
jns
jg
mov
daa
mov
int
lret
inc
mov
insb
pop
pushf
js
jnp
jns
mov
lret
outsl
cwtl
loopne
jg
or
testl
aam
repz
loop
jns
daa
add
cld
or
inc
jge
xlat
dec
enter
push
fdivrl
pop
cmp
fmull
cmc
arpl
dec
push
in
push
cmpsb
xor
mov
pop
icebp
lea
outsb
mov
push
lahf
xchg
push
sub
pop
pop
orl
mov
cmpsl
movsl
fisubrs
fistpll
dec
jle
push
and
inc
stos
xchg
or
test
inc
or
xor
jno
clc
xchg
cs
mov
nop
and
sub
or
and
mov
fdivrs
push
sub
lcall
nop
mov
jb
mov
pop
jb
pop
stc
mov
cwtl
or
in
std
fisttps
ret
add
in
iret
rolb
aad
inc
mov
lcall
lods
shlb
loopne
mov
es
outsl
andb
stos
sub
shll
iret
fcoms
mov
js
xor
push
mov
pop
jbe
mov
sbb
dec
lret
pop
jb
mov
xchg
data16
and
inc
mov
add
and
jae
mov
lret
outsb
pop
xchg
sub
or
dec
lcall
jecxz
stc
mov
inc
sbb
out
lcall
aaa
addl
out
cmpsb
scas
mov
data16
aam
test
xchg
dec
add
jmp
mov
pop
shl
pop
fs
pop
cld
mov
mov
push
test
hlt
cmpsb
push
adc
or
je
subb
pop
xor
sub
xor
bound
push
mov
pushf
pop
scas
mov
cltd
push
cwtl
jno
lods
lea
idivb
filds
pop
mov
ljmp
adc
pop
icebp
cld
lret
jmp
add
mov
lret
jg
push
cmc
int3
in
sbb
insb
add
pop
or
and
sahf
ds
cwtl
cmp
fisubrs
popa
imul
out
mov
loopne
jle
mov
mov
fidivrl
clc
jne
test
adc
mov
dec
dec
stos
inc
icebp
stos
xor
pop
inc
xchg
pusha
loope
jl
cmpsl
imul
cltd
sbb
pop
cmp
addb
lret
lods
push
sbb
sub
sbb
mov
bnd
add
and
add
lcall
out
lods
in
fdiv
lahf
call
fldpi
movsb
cltd
jmp
pop
and
jle
into
mov
cmp
push
shl
push
jmp
xor
mov
mov
sub
inc
cmp
xchg
cmp
adc
xor
lret
fyl2xp1
popf
call
scas
sub
js
fsubrl
scas
fisubl
mov
insl
out
arpl
enter
aaa
stos
call
mov
sub
ret
add
mov
pop
mov
dec
cmp
xor
fnstenv
or
mov
frstor
add
jb
cmp
inc
mov
xchg
test
mov
cmp
ret
int
std
stos
lcall
orb
nop
or
xor
pop
xor
add
ficomps
xchg
push
stos
movsl
or
fimull
decl
sbb
loopne
xchg
xchg
xor
sub
push
inc
mov
mov
enter
xchg
mov
stc
jb
adc
lret
sub
pop
sub
scas
sub
test
push
repz
pop
sub
mov
lock
shl
pop
push
fnstcw
test
ja
in
sub
cmp
sbb
xchg
mov
xchg
push
imul
add
and
jne
jne
cli
mov
roll
or
shlb
orl
inc
int3
push
push
xchg
xchg
cmc
out
xchg
ret
mov
or
mov
add
xchg
icebp
xor
pop
stos
mov
mov
xchg
popa
fisubl
fildl
sbb
lret
fwait
pop
pop
out
addr16
in
push
orl
xor
add
pop
push
dec
sahf
loop
call
sub
push
cmp
mov
and
mov
jmp
push
test
inc
lahf
add
xchg
adcb
sbb
out
push
jb
push
sub
scas
sub
jno
daa
jns
ret
insb
mov
cltd
lea
jge
xchg
aam
mov
sub
ja
aaa
cld
push
push
fidivrl
js
xchg
lret
jo
scas
lret
push
xor
mov
or
mov
dec
into
add
ret
pop
and
outsb
push
push
jecxz
jl,pn
iret
cmp
in
hlt
sub
dec
ds
mov
lea
mov
mov
ficomps
push
sub
insl
loope
popf
in
dec
mov
xchg
sub
jae
das
mul
cwtl
out
mov
out
adc
insl
mov
repnz
popf
into
repz
fcomip
daa
lods
add
movsb
push
dec
mov
mov
add
jmp
xchg
lock
add
cmc
inc
addr16
jl
shr
jmp
pop
int3
call
cmpsl
adc
jmp
mov
pop
cmp
pop
push
repz
pop
daa
hlt
add
call
fwait
xor
or
cli
lds
das
push
arpl
rcll
ja
test
and
in
out
aam
dec
icebp
aaa
cwtl
push
cmp
push
test
int3
div
cmpsb
jo
pushl
out
push
or
and
in
mov
les
xchg
sbb
push
cmpl
xchg
xchg
mov
mov
jmp
push
int
mov
cltd
addr16
pop
xchg
pusha
jne
int3
mov
ret
inc
jnp
addr16
fs
or
push
push
in
xchg
sub
out
inc
push
xchg
cmp
out
inc
mov
inc
lcall
shll
das
lods
push
xchg
xchg
or
aad
out
pop
test
adc
sbb
adc
mov
dec
and
jb
call
cmpb
stos
and
sbb
repz
insb
js
fsubs
and
xchg
jns
pop
xchg
cmc
jb
adc
mov
cwtl
mov
ja
out
rcl
mov
adc
in
and
lods
fnstcw
adc
pop
mov
mov
mov
jmp
std
sbb
shl
repz
hlt
arpl
roll
movsl
cmp
sbb
xchg
cmpsl
xor
imul
inc
pop
mov
dec
mov
cs
xlat
jb
mov
or
repz
mov
loopne
pusha
decb
mov
ret
sub
jmp
pop
cld
mov
add
and
jbe
add
fldt
mov
fsts
xchg
mov
in
jle
int3
loope
das
cld
push
fbstp
and
fstp
jl
mov
mov
ss
mov
aaa
mov
js
pop
and
ljmp
movsl
push
les
xor
ret
xor
cmpb
mov
fisubrl
stc
mov
inc
orb
pop
mov
sub
popa
popf
xlat
push
movsl
add
stc
fistl
sbb
dec
iret
data16
mov
sub
mov
aaa
movb
xchg
jns
jge
dec
xchg
jbe
adc
mov
and
jg
or
ljmp
mov
mov
jnp
in
test
pusha
je
jnp
sbb
mov
or
repz
sub
cltd
hlt
jno
ljmp
jle,pn
andl
xchg
movsl
xchg
add
or
mov
fnstenv
popa
stos
xor
div
xor
gs
shlb
movsl
push
adc
inc
or
fists
scas
dec
jo
push
dec
add
push
cmp
lock
and
rorb
ljmp
insl
push
dec
sub
out
sbb
dec
mov
xor
cltd
outsl
int3
and
dec
movsb
std
xlat
inc
xor
adc
mov
fwait
addr16
push
add
or
adc
and
xchg
xchg
std
jae
add
xor
xor
jo
jecxz
inc
pop
dec
shll
cmp
mov
mov
sbb
lods
roll
fs
ds
pushf
adc
lods
bound
arpl
mov
jge
data16
mov
and
idivl
xor
outsb
into
jae
inc
cmp
xchg
pushf
xchg
in
and
and
mov
pop
sub
loopne
rcll
ud0
aad
notl
aas
lea
mov
push
xlat
adc
push
rcll
cli
xchg
pop
filds
jecxz
push
cmp
inc
movsb
push
pusha
or
sbb
fisubrl
jbe
sbb
les
shr
aas
or
stc
push
jns
sbb
jne
mov
dec
insl
xchg
xchg
mov
lcall
mov
dec
jns
and
adc
add
and
iret
negl
push
enter
mov
xchg
dec
inc
sbb
dec
enter
sarl
lret
pop
imul
lret
push
sub
mov
out
flds
and
hlt
adc
jge
mov
pop
pop
shrl
pop
jns
sub
enter
jmp
ret
adc
shll
lret
shl
pop
and
mov
int3
sbb
inc
xor
push
lea
arpl
jb
pop
ss
ja
mov
pushf
in
cmp
sbb
mov
insb
inc
lods
inc
enter
push
lods
popa
jne
imul
daa
pop
notb
and
adc
mov
loop
in
xor
pop
hlt
enter
fstpt
pop
daa
or
movsb
xchg
mov
mov
mov
fldcw
mov
in
inc
je
add
stc
sbb
and
out
je
dec
xchg
stc
pop
popa
add
jl
ret
pop
test
pop
xchg
ror
ja
scas
push
lret
xchg
lahf
cld
sub
jno
mov
ffree
out
jbe
cwtl
es
push
inc
mov
repz
shll
jb
and
xchg
and
sarl
ret
clc
xor
stos
je
shl
cmc
xchg
out
out
movsl
mov
inc
arpl
pop
daa
insl
in
data16
jge
sub
jno
dec
mov
sbb
mov
aas
dec
int
sub
mov
adc
push
sub
xchg
inc
inc
push
pushf
push
dec
je
pop
scas
cmp
loopne
jp,pt
popf
cld
or
cmp
xor
mov
push
in
pop
xor
les
mov
inc
lret
cltd
lods
mov
insb
xor
in
dec
jle
leave
int3
and
or
inc
cwtl
jno
jecxz
add
and
in
jle
addr16
ror
lock
sahf
aam
jl
aad
pop
jp
scas
xchg
orl
and
sub
out
jbe
push
mov
sbb
lods
adc
jge
xor
mov
xchg
int3
dec
out
inc
push
inc
movsb
mov
mov
hlt
popf
xchg
pop
popf
test
xchg
xchg
lahf
call
add
lea
mov
addr16
pusha
xchg
hlt
std
mov
out
mov
pop
mov
or
repnz
mov
arpl
das
into
loop
push
mov
shl
dec
push
xchg
movsl
out
scas
cmc
pop
jmp
std
inc
outsb
stos
cmp
adc
stc
add
push
fildl
mov
rcll
movsb
add
pop
add
imul
pushf
inc
push
fmuls
add
aam
shrb
push
adcl
addr16
push
data16
lea
daa
dec
addr16
jl
add
scas
inc
aaa
or
testl
fnsave
jo
push
aaa
mov
add
rol
movsb
push
jmp
mov
jae
mov
scas
iret
loop
lods
das
out
mov
fwait
pop
jns
mov
cmpsb
or
stos
enter
push
rcrl
jae
mov
test
jl
out
and
jno
add
in
subl
cmpl
out
mov
outsl
popf
in
lret
icebp
outsb
js
in
sub
push
and
xchg
dec
sbb
xchg
pushf
xchg
scas
mov
inc
push
jne
in
push
pop
rorl
testl
sbb
push
xchg
das
lret
mov
mov
adc
mov
mov
sub
in
inc
outsb
pop
push
pushf
ret
sub
dec
mov
std
rcr
loope
ljmp
xchg
aas
or
stc
lds
shrb
stos
xchg
mov
mov
out
lds
jns
add
arpl
cmp
ds
insb
add
mov
sub
dec
jno
lret
mov
xchg
jne
or
cmp
insl
out
aam
pushf
push
jge
and
mov
or
hlt
and
pmaxsw
pop
mov
loop
or
jle
add
inc
xlat
int
scas
aam
or
jl
sbb
das
add
lods
mov
pop
xchg
pop
les
add
shrl
jecxz
repz
sub
cmp
jns
sbb
mov
ds
in
mov
cli
daa
test
je
jns
jl
dec
loope
dec
jge
and
leave
std
cmpsl
mov
fadds
clc
jle
mov
repz
aas
ret
or
cmp
mov
fstpl
xor
xor
sahf
jp
enter
sub
sti
sub
cmp
push
rorl
cmp
xor
jne
push
mov
out
pop
clc
mov
lret
lret
lods
push
dec
or
je
jnp
aam
ja
loop
mov
sub
inc
push
push
mov
cltd
pop
in
xor
adc
xor
mov
outsl
adc
mov
xor
mov
cmp
cli
mov
xor
push
mov
jae
enter
mov
lods
and
pop
pop
dec
imul
fsts
mov
movl
shlb
push
xchg
in
fmul
cmp
pop
mov
xor
ret
mov
stc
or
int
adcb
xor
jl
js
xchg
jmp
loopne
fildl
add
push
cli
daa
cmpl
lret
dec
repz
icebp
mov
mov
or
xor
jl
ret
lret
clc
xchg
inc
pop
inc
insl
arpl
xchg
add
lret
push
scas
or
in
mov
insl
ud2
sahf
xor
or
cmova
call
jp
cltd
fisttpll
ljmp
loopne
jle
movsb
xlat
mov
and
jp
sub
jae
xchg
pop
in
mov
xor
mull
repnz
imul
adc
into
inc
cmpb
jle
out
or
mov
mov
arpl
and
movsb
scas
adc
dec
movsb
frstor
jmp
pop
or
mov
sti
jecxz,pt
pop
getsec
in
scas
mov
push
pop
jno
or
push
int
and
or
lret
push
xchg
ret
dec
or
dec
pop
jno
in
and
cmp
push
fiaddl
mov
mov
addb
sbb
mov
mov
ja
mov
stos
dec
cltd
shlb
jnp
pop
subb
or
push
jl
inc
cwtl
cmp
cmp
xchg
ljmp
out
xchg
mov
sub
loop
test
mov
rclb
inc
add
pushf
outsb
push
es
jp
pop
lret
sbb
jb
mov
outsb
or
add
in
ficompl
sbb
insl
pop
xchg
mov
xor
xchg
mov
outsl
xchg
push
fs
mov
xchg
scas
jmp
in
mov
inc
add
add
outsb
lods
test
daa
mov
aam
ds
sti
nop
je
pop
ds
adc
and
mov
mov
jge
or
test
ficoml
mov
int3
jecxz
jae
fildll
fcom
add
aam
pop
add
loop
push
xchg
fistps
in
cmp
lcall
mov
adc
js
add
adc
xchg
cmpsl
mov
inc
jae
push
xor
or
mov
push
pop
aaa
cwtl
dec
call
fwait
xorl
js
push
inc
cmp
sbb
rolb
sbb
inc
jae
push
xchg
lock
mov
add
mov
je
push
xchg
aad
mov
inc
push
in
jo
test
call
jae
xor
ret
sbb
cmpsb
inc
outsb
sbbl
insl
das
pop
inc
lods
pushf
les
in
mov
fs
shrb
or
inc
test
call
gs
add
ja
call
and
jecxz
loopne
stos
sbb
or
rcrb
paddsb
adc
push
testb
jo
xorl
outsl
xchg
add
idivb
mov
pusha
pop
xchg
mov
jecxz
sbb
outsl
push
ss
imul
dec
enter
cmp
cmp
dec
mov
pop
movsb
das
mov
mov
int3
rolb
mov
push
insb
mov
push
push
aam
ljmp
ret
roll
pop
out
xchg
pushf
nop
loop
rcrl
insb
loopne
pop
shrb
fstl
jl
sti
fnstcw
mov
mov
mov
ret
out
es
xchg
cmove
shl
jg
jno
xor
push
inc
xchg
insb
mov
jne
popa
in
inc
mov
cmp
pop
je
jnp
jmp
js
adc
pop
mov
mov
fcmove
mov
in
repnz
cmp
shr
pop
mulb
jge
add
add
sub
leave
ret
mov
xor
aam
push
pop
fbld
mov
shll
xchg
movsb
add
int
sub
push
sbb
scas
test
mov
or
or
ss
loop
outsl
lret
cmp
sbb
mov
xor
sbb
dec
jecxz
pop
pop
rcrl
test
mov
les
arpl
push
mov
inc
pop
test
dec
add
hlt
aad
hlt
mov
mov
clc
icebp
xor
sbb
add
punpckhdq
cmp
adc
mov
lea
mov
fs
adc
inc
pushf
fdivs
mov
insb
push
add
in
add
insb
imul
dec
out
ljmp
fcomps
sbb
ja
cmp
rorl
inc
aad
or
sar
push
mov
pusha
xchg
inc
enter
into
xchg
bound
ja
add
inc
xlat
add
dec
inc
inc
jbe
loop
adc
mul
and
adc
cwtl
or
sbb
inc
xorl
inc
inc
xchg
js
sbb
cmp
pushf
mov
insl
mov
pop
test
push
adc
push
xor
repnz
loopne
xor
arpl
mov
dec
xchg
cmpsl
add
jge
mov
cmpsb
stc
mov
dec
dec
add
pop
inc
xlat
lods
xchg
lahf
jmp
sbb
sbb
pop
pop
push
add
jg
dec
stc
or
push
add
dec
out
test
pop
mov
aas
subb
dec
pop
aam
inc
push
lea
or
je
cld
add
mov
xorl
lret
in
mov
cmp
inc
jae
dec
pop
out
es
cwtl
add
imul
xchg
adc
sbb
loopne
mov
test
mov
push
mov
arpl
xchg
mov
pop
lea
xor
xlat
dec
fsts
arpl
ret
pop
or
mov
mov
cmc
fwait
out
ds
sbb
jns
bound
pop
inc
cmp
jo
adc
mov
shlb
sbbl
or
inc
cld
shl
or
jne
add
sub
mov
mov
arpl
add
dec
pop
ja
cmp
xchg
dec
js
int3
cmp
xchg
jp
pop
or
xchg
jmp
insl
cmpsb
xchg
xor
out
dec
mov
aad
addr16
push
add
addr16
sbbb
xchg
lods
data16
inc
xchg
fadd
push
leave
lods
pop
aas
sub
stos
jl
imul
push
test
les
orl
stc
xchg
out
sub
out
and
cltd
fs
movsl
add
pop
jg
xor
loopne
and
inc
inc
mov
ficomps
inc
lcall
mov
test
push
sbb
pop
add
cmp
mov
inc
adc
daa
divb
inc
pusha
lock
pop
mov
jle
aas
xor
iret
stos
adc
roll
cs
cmpsl
lods
mov
xchg
and
dec
adc
aad
cltd
dec
mov
sbb
pop
out
or
sub
cld
pop
loopne
lods
add
outsl
push
sbb
and
xchg
ljmp
sti
or
subb
popf
and
test
out
cmp
and
aam
cld
shll
sbb
ja
push
insl
test
jo
popa
popf
mov
fists
or
dec
inc
jns,pt
mov
cmpsb
xor
loopne
insl
stos
hlt
push
push
dec
mov
roll
rcll
clc
pop
arpl
and
pop
and
mov
aad
repnz
in
pop
orl
adc
jbe
leave
aam
in
mov
fnsave
adc
das
or
lea
hlt
andl
lock
mov
in
add
sbb
aad
fisttpll
aad
mov
xchg
xchg
iret
sti
jb
xor
ret
jae
or
outsb
pop
fsubs
add
mov
xor
push
fcmovu
in
sbb
mov
out
pop
add
inc
fistps
mov
push
push
sbb
bound
dec
and
jae
pop
dec
fisttpll
jmp
gs
push
sub
jo
or
mov
jo
lds
sbb
dec
lock
lea
dec
or
xchg
mov
xor
fwait
add
mov
cltd
or
add
or
mov
and
les
stc
push
add
jmp
cmpsl
addl
in
cmpl
test
dec
je
and
push
cmp
mov
ss
mov
hlt
movsb
lock
std
cmp
mov
jle
and
lock
pop
dec
cmpsl
inc
test
cmp
jae
pop
cli
popa
pop
rolb
lcall
push
ja
in
pop
mov
gs
sbb
shll
add
push
push
sub
xchg
fsub
es
mov
push
mov
ror
test
stc
cmpl
jnp
int3
ja
enter
mov
leave
mov
jl
add
add
sti
and
push
or
aaa
fwait
mov
pushf
test
sub
mov
push
sti
cmp
jb
scas
bound
sub
pop
in
imulb
das
test
push
outsl
jne
daa
stos
cwtl
jo
stc
jae
inc
xor
adc
ret
shlb
mov
in
inc
pop
nop
int
in
and
loope
add
push
sarb
push
jmp
dec
out
stos
out
test
sbb
scas
sub
ljmp
ret
push
mov
jnp
inc
call
ret
and
loop
xor
and
out
dec
fadds
je
test
adc
jbe
jge
divb
xchg
xor
rcl
inc
push
push
cmpsb
into
xchg
cmp
bound
gs
and
dec
mov
enter
cmpsl
fcmovu
inc
lahf
xor
adcl
and
cmovne
mov
push
repz
pop
xor
sub
test
mov
adc
push
ss
mov
push
inc
inc
dec
iret
inc
ret
leave
pop
fisttpll
repnz
hlt
and
xchg
bound
xor
mov
cs
dec
or
stc
je
jno
lea
fnsave
adc
inc
cld
arpl
lret
into
adcl
mov
leave
lcall
push
sti
andl
push
inc
dec
and
insb
mov
ret
push
jmp
es
or
rcrb
push
dec
or
decl
and
mov
cmpl
enter
xorl
iret
jnp
out
cmp
sbb
loop
sub
mov
xchg
add
or
ret
and
loop,pt
int3
or
push
movsb
adc
not
sub
mov
daa
push
dec
enter
or
pusha
xchg
mov
cld
add
push
xor
rcr
rol
xlat
sbb
push
ret
adcl
hlt
add
jmp
xor
pavgw
je
nop
sbb
jl
and
add
inc
repz
push
out
dec
adc
loopne
mov
sub
adc
sbb
or
push
or
mov
pop
clc
in
or
adc
sub
aam
sub
and
dec
les
or
rolb
std
xorb
out
jg
pop
fistpl
mov
cmp
sbb
iret
test
aad
scas
std
into
loope
pop
test
movsb
fmull
cli
push
lock
or
add
fdivs
incl
xchg
in
aaa
pop
lods
aas
cli
enter
daa
jno
out
cwtl
lods
out
nop
in
data16
xorl
push
sub
std
rcll
fildl
clc
push
scas
test
movsl
push
xchg
jns
sahf
cmp
int
add
call
inc
push
pop
jmp
add
sub
jne
adc
sub
push
dec
js
pushf
mov
jl
cmp
and
xlat
pop
dec
xchg
xchg
or
stos
stc
xor
popfw
inc
sub
ss
mov
mov
fstpl
jge
repnz
mov
mov
mov
adc
xor
inc
pop
pop
adc
adc
shll
push
mov
orl
mov
shr
mov
shl
test
jecxz
idivb
roll
shll
es
sbb
stc
fwait
inc
xor
sbb
jge
pop
ds
cmp
das
or
mov
lock
xor
sbb
push
iret
mov
imul
xchg
mov
pop
mov
mov
jmp
hlt
gs
lock
imul
cli
cmpsl
push
push
clc
push
sbb
sbb
mov
adc
mov
push
push
cli
jb
jbe
rcrl
inc
inc
inc
loopne
cmp
sbb
xor
shll
mov
repz
xor
push
aas
fistpll
inc
into
xchg
orl
adc
loop
ds
or
push
lcall
int
sub
adcb
add
dec
scas
ljmp
jmp
fiaddl
mov
push
fs
push
lea
leave
xchg
mov
mov
js
jne
jmp
inc
ror
je
cmpsl
mov
lods
jecxz
cmpsl
ficoms
jae
sub
sbb
test
mov
sub
xor
sub
sub
and
cmp
sbb
sub
and
xchg
mov
xor
test
push
inc
je
imul
or
in
jl
xor
jecxz
pop
jae
add
xor
hlt
and
sub
icebp
jns
cwtl
das
in
lcall
ds
add
mov
pop
pop
scas
in
mov
in
mov
out
popa
or
es
testl
push
out
adc
mov
into
rorb
push
pop
mov
pop
in
out
xchg
stos
mov
xor
mov
push
pop
mov
dec
or
sub
pop
sub
xchg
inc
inc
jl
cmp
inc
mov
daa
call
and
sbb
gs
popa
sti
popa
mov
xor
insb
push
add
popa
sbb
mov
cmp
cld
mov
icebp
sub
jmp
xchg
fidivrs
push
or
dec
lcall
jl
inc
mov
loope
outsb
fcmovnu
inc
fdivrs
sub
sub
xor
ret
out
test
push
lds
outsl
testl
push
aad
push
xchg
dec
cld
mov
or
dec
mov
and
pop
bound
xchg
sub
jmp
pop
in
dec
ja
lods
ficomps
add
orb
or
das
andl
mov
int
jae
sub
aaa
in
cmp
mov
pusha
mov
test
and
add
outsb
mov
sahf
hlt
or
sub
fildll
mov
imul
loop
push
jo
fwait
scas
inc
pushf
loope
test
repz
cli
sbbl
les
or
loop
adc
sete
and
repnz
lea
push
sub
jge
pop
jno
data16
pop
and
dec
lock
addl
and
out
ss
call
nop
cmp
pop
xor
jp
jecxz
cwtl
mov
xchg
mov
iret
lcall
shll
lock
pop
dec
jne
hlt
pop
ret
int3
aaa
add
pop
and
jmp
scas
sub
imul
push
dec
mov
add
sbb
lods
dec
ljmp
pusha
lods
or
lods
gs
mov
mov
sbb
rorb
push
aam
adc
xchg
pop
loop
popa
imul
in
sub
and
jbe
movsl
push
sub
mov
mov
pop
inc
in
pop
cmp
pop
or
cmc
cmp
insl
aam
fs
shll
push
xor
mov
lret
add
adc
in
jo
addr16
and
adc
popl
fsubrl
dec
cmp
imul
mov
cmp
lahf
jmp
jg
nop
mov
movzwl
pushf
mov
jo
jne
add
cs
in
in
inc
sarb
fldcw
mov
push
imul
cmpsb
sub
lods
pop
aaa
lods
lods
xor
xorl
mov
sbb
add
ss
add
cltd
out
es
adc
inc
jae
stos
test
shrb
pop
push
movsb
and
push
std
je
mov
xchg
js
mov
sub
cs
ljmp
ss
xchg
fs
notb
dec
dec
xor
mov
xchg
mov
cmpsl
shl
mov
xchg
push
adc
cmpb
je
les
jge
jmp
pop
mov
adc
pop
les
push
or
xlat
adc
inc
out
adc
dec
add
or
dec
pop
decb
loop
loop
add
sub
ljmp
adc
sub
or
inc
xchg
mov
scas
aam
mov
scas
or
ljmp
aaa
inc
or
xor
mov
jne
push
movsl
loopne
lock
fstl
sub
inc
inc
sbb
iret
stos
call
mov
fs
dec
push
mov
xchg
add
xchg
lods
cmp
repnz
cwtl
mov
incb
push
inc
les
sub
cmp
loop
dec
cmp
insl
xchg
fisttpll
test
push
pop
jp
cs
mov
std
lret
or
movsb
cli
addl
mov
test
sahf
jp
dec
fistpl
pushf
in
in
out
inc
jo
pusha
out
push
pop
fadds
fdivs
cmp
cli
dec
pop
push
arpl
push
sbb
into
sub
push
inc
pop
sub
cs
dec
imul
js
dec
gs
pop
andb
bound
icebp
loop
popf
push
sbb
int3
lea
sarb
jne
lret
insb
cmp
adc
mov
cld
lock
ljmp
pop
jp
stos
pop
es
icebp
push
es
repz
add
movsb
dec
adc
xchg
pop
int
sbb
lret
shlb
jmp
fsub
xlat
pushf
repnz
mov
bound
xchg
inc
mov
inc
push
mov
addl
push
sbb
orb
sbb
xlat
sti
adc
flds
inc
jb
adc
in
mov
mov
ffreep
jb
roll
sub
pop
int
stc
leave
pop
or
adc
mov
mov
fldcw
add
jmp
adc
iret
push
in
xor
sbb
mov
rcl
inc
mov
in
cmpl
xchg
xor
mov
dec
inc
mov
pop
mov
rorl
stc
xlat
pushf
mov
pop
dec
xchg
cltd
mov
xchg
lods
inc
gs
les
mov
insb
aam
lret
cltd
loope
inc
into
mov
cmpsl
pushf
push
inc
xchg
outsl
add
fimull
repz
inc
loopne
jge
mov
jbe
fisttps
pop
popa
test
xchg
mov
loopne
andl
insb
pop
push
stos
push
pop
repnz
sub
repz
and
and
in
std
je
lods
cmp
xchg
ret
pop
sub
dec
push
mov
pop
and
or
ret
add
call
outsb
xchg
cld
rcr
jo
sbb
test
mov
imul
outsl
lds
jle
outsl
xchg
and
imul
sub
mov
lods
outsb
sub
rorb
jecxz
jmp
pop
or
sub
loopne
test
mov
xchg
divl
mov
adc
or
in
movsb
iret
fnstcw
push
out
insl
cmp
xor
or
imul
adc
mov
fisubrl
fmul
or
loop
js
push
mov
mov
mov
test
loop
pop
pop
inc
arpl
pop
jnp
mov
mov
mov
testl
enter
inc
test
dec
lods
pop
or
pop
push
inc
dec
xchg
and
rorl
mov
cmp
mov
inc
in
out
inc
add
mov
push
loop
and
sub
mov
sbb
cmp
out
sbb
sbb
aaa
int3
fldcw
data16
mov
popf
hlt
jns
popa
call
in
loopne
sub
dec
insl
cmp
shlb
jno
bound
enter
adc
loopne
call
mov
adc
dec
lahf
pop
icebp
jmp
push
lahf
xchg
gs
std
aaa
je
and
decl
push
pop
es
jbe
sbb
sbb
testb
or
lods
cmpsb
mov
add
shr
and
loope
cmpsl
aad
icebp
mov
inc
cli
push
arpl
jl
test
jo
push
lods
rolb
mov
push
movsl
lock
pop
push
mov
jo
jecxz
lock
sahf
jo
push
pop
mov
sbb
leave
pusha
lret
hlt
loopne
dec
sub
push
aaa
insl
sbb
add
sbb
pop
ficoml
xor
xchg
sbb
lea
aam
add
mov
mov
nop
xor
hlt
fcmovne
cld
mov
jne
stos
rorl
hlt
mov
jb
mov
mov
fcompl
and
xor
add
push
mov
icebp
icebp
push
iret
sahf
pop
push
cmpsb
jg
push
mov
dec
mov
xor
scas
scas
push
mov
xchg
xchg
pop
lret
shrl
sbb
int3
cbtw
mov
mov
into
adc
sbb
in
lock
adc
fwait
rclb
sbbl
loop
aaa
sub
sbb
sbb
and
fcomps
cmp
mov
je
mov
outsl
cltd
dec
leave
cmp
sub
aas
ret
loope
inc
cmp
fs
sbb
xchg
and
int
test
add
dec
adc
xchg
xchg
inc
sbb
dec
inc
jg
jmp
mov
ja
mov
das
in
mov
mov
shll
or
mov
lods
fistpl
out
rorb
sub
or
in
cmp
popf
and
cmp
mov
push
mov
ja
dec
stos
pop
sub
ret
rorl
inc
dec
cmp
cwtl
dec
push
jns
inc
adc
mov
adc
cmp
mulb
adc
and
jae
push
sbb
dec
adc
cwtl
daa
loopne
loopne
lods
iret
pop
sbb
jg
pop
sahf
jecxz
es
sbb
pop
popa
insb
clc
pop
jae
mov
test
insb
cmpsb
cmp
les
mov
dec
loope
mov
das
xchg
sbb
pop
xor
clc
fistps
and
nop
int
dec
je
addl
mov
or
inc
adc
ljmp
xor
in
rcll
lret
aam
push
mov
jge
ljmp
pop
jg
lds
cmp
imull
sub
add
mov
mov
sub
adc
sub
cwtl
jno
inc
push
cld
call
loope
inc
scas
fldl
sarb
xor
and
repnz
and
push
testb
dec
mov
sti
sti
xor
leave
ret
mov
push
mov
out
xchg
mov
mov
xor
jns
cmc
pop
pop
dec
mov
xor
ss
push
enter
mov
xchg
ja
mov
push
cmc
mov
test
xchg
cmp
xchg
in
and
das
jno
add
xor
sub
jg
add
and
in
pop
push
sbb
xchg
mov
test
int
xchg
subl
sub
sti
out
sub
aad
ret
mov
and
pop
shrl
in
sub
jno
xor
cmpsb
jno
cld
dec
mov
add
clc
or
cmpsl
jb
xchg
cs
push
jmp
adcl
mov
sbb
lcall
sbb
push
arpl
ja
push
aam
xor
adc
sti
sbb
adc
cmpsl
add
cmovne
cmp
mov
lds
lahf
sub
cmp
bound
lea
movb
test
stos
adc
in
pop
cmc
in
pop
xor
mov
enter
inc
dec
or
mov
xchg
xchg
out
inc
les
jno
pop
insl
ret
mov
rolb
loopne
xchg
cmp
sub
jno
mov
xchg
hlt
mov
std
cli
faddl
and
jge
and
lret
ds
sbb
pushf
popf
push
or
add
ss
mov
push
lock
inc
loop
add
ljmp
sub
or
dec
ds
jle
jns
sbb
cld
outsb
mov
insb
mul
add
jg
push
mov
dec
dec
xor
pop
das
dec
adc
popa
iret
daa
mov
fdivr
jo
in
mov
movswl
fiaddl
in
imulb
xlat
dec
mov
inc
bound
push
sbb
push
mov
push
xchg
int
test
dec
pushf
xchg
movsb
mov
daa
cld
and
cmp
aas
jbe
aad
aad
sahf
mov
or
movsb
xchg
fistpl
mov
and
lds
lods
xor
in
rcrl
repnz
jne
inc
mov
mov
fcmove
enter
cmp
mov
fadds
arpl
arpl
es
mov
push
xchg
mov
lcall
outsl
jge
jecxz
daa
mov
test
cli
mov
enter
cmp
mov
pop
inc
jb
cmp
movsl
inc
pop
addr16
push
in
lods
popa
jg
into
sub
xor
push
hlt
test
dec
sbb
xlat
scas
push
repz
inc
fucom
or
cmp
jb
mov
jb
cmpsl
jb
push
jnp
mov
sar
shll
aad
adc
lods
bound
jle
pop
jg
imul
push
into
jmp
adc
sbb
jmp
sub
test
popa
in
push
nop
adc
cld
repz
jno
mov
mov
xor
out
lret
push
cli
sbb
in
xchg
pop
push
ja
sub
xlat
pusha
lahf
lock
xchg
int
enter
std
lret
icebp
cmp
jecxz
xchg
std
sub
cmc
push
xchg
inc
xchg
cmp
jo
fcomps
jge
dec
jle
test
insb
andl
lahf
lods
or
lahf
sbb
or
pop
inc
jns
pop
addb
imull
bound
xor
adc
xchg
adc
jmp
outsb
push
push
aam
loope
pop
int
hlt
xchg
stos
shll
repnz
mov
imul
inc
mov
cmpsl
cmc
push
aam
lods
in
fst
dec
ret
add
pop
or
out
xor
rclb
mov
lahf
dec
adcl
add
es
sbb
mov
jl
xor
dec
pop
ret
jl
push
jl
mov
movl
xorl
imul
daa
push
lock
cmp
repz
jecxz
lret
sarl
and
mov
dec
inc
out
dec
daa
push
inc
daa
enter
subb
lea
ret
sbb
mov
cmc
mov
lret
dec
lods
lock
outsl
sbb
out
sub
iret
call
iret
fcomps
xchg
xlat
jne
pop
and
mov
adc
jl
out
xor
pop
cmpsl
movsl
pop
mov
ljmp
push
addr16
sub
dec
xchg
jg
push
test
loopne
in
inc
lret
push
roll
jb
pop
pop
enter
xor
cli
xchg
cmc
mov
out
fcoml
loop
repnz
aad
data16
in
repnz
mov
adc
jno
arpl
test
push
jge
inc
lea
xchg
jecxz
inc
xor
mov
cwtl
inc
mov
push
lret
or
inc
push
xor
mov
cmp
ror
insb
loop
dec
ret
jp
frstor
inc
outsl
shl
sbb
not
mov
pop
mov
and
push
ljmp
dec
inc
adc
outsb
mov
ffreep
jae
jmp
dec
cwtl
ret
push
loope
ret
cmp
mov
shl
loopne
testb
push
xlat
hlt
cmpsl
xchg
pop
scas
f2xm1
pop
dec
es
push
in
into
push
orl
xor
pop
pop
mov
xchg
cmp
xor
pop
jae
clc
cs
shlb
mov
push
imul
xchg
ret
in
mov
jnp
fsubr
jmp
lods
jne
pop
jo
cmp
sub
test
push
es
icebp
adc
cmc
mov
mov
pushf
inc
jae
in
mov
pop
popa
xor
pop
roll
stc
leave
mov
into
push
test
adc
xorb
arpl
cmp
int
das
push
and
pop
mov
jle
jl
add
cwtl
dec
jmp
fcoml
and
xchg
jmp
movsl
cmp
cmc
xchg
hlt
or
push
sbb
cltd
and
sbb
fnstenv
dec
xchg
fldt
xchg
mov
shll
xor
jecxz
jae
push
mov
add
out
adc
xchg
aas
xchg
fldt
mov
jne
xchg
or
cmpl
xchg
fldt
imul
outsb
sub
dec
test
pop
jg
cli
or
loopne
mov
fistpl
fdivs
cmp
and
out
sbb
jne
inc
insb
inc
pop
leave
cmp
dec
in
test
into
adcb
xor
xor
mov
sbb
cmpsl
sub
mov
cmpsb
xor
cli
pop
shlb
dec
pusha
cmp
add
stos
jmp
xchg
ficomps
xor
mov
xchg
push
push
mull
or
pop
std
push
je
jb
das
dec
outsb
push
test
push
test
aad
sub
into
repnz
fcmovb
fwait
std
sbb
sbbl
dec
push
jo
nop
adc
lret
sub
jmp
repz
push
fisttps
xchg
insb
scas
in
scas
xor
in
inc
in
cli
mov
shl
pop
outsb
sbb
fcom
lods
or
jbe
add
mov
ret
in
jg
jl
xchg
dec
cmp
std
inc
adc
xchg
pop
fdivp
roll
jne
cmpsb
ret
sub
aas
in
dec
and
lods
aad
popa
dec
add
mov
add
stos
jbe
ljmp
cmp
roll
pop
adc
pop
cmp
mov
xchg
push
ja
stc
xchg
imul
gs
mov
inc
aas
cmp
mov
std
sub
int
dec
cs
ret
movsl
lcall
push
dec
sbb
fmuls
or
cld
cmp
jg
cmc
out
pop
xchg
mov
les
popa
inc
pop
imul
xor
aaa
ljmp
jo
xchg
scas
fidivl
loop
out
sbbb
sti
mov
or
in
call
popa
jge
inc
iret
aaa
mov
mov
stos
dec
adc
aas
mov
rolb
movl
or
movsl
mov
mov
push
pop
jb
cmp
fildll
mov
fldenv
or
jp
sub
push
cld
cld
mov
mov
sub
push
or
aad
xchg
stc
sub
mov
leave
int
mov
push
adc
mov
cmpsl
mov
scas
push
xchg
and
dec
cld
cld
inc
cmc
in
scas
push
pusha
cmpsb
and
jnp
push
pusha
sti
arpl
sbbb
pusha
scas
sbb
faddp
xor
fsubrs
pushf
sti
icebp
pop
jb
xchg
movsl
xor
cltd
fbstp
xlat
and
lret
push
std
jecxz
bound
and
cwtl
insb
or
inc
jmp
mov
shll
psubusw
pop
movsl
outsb
xor
fcmovne
sub
loopne
sub
mov
icebp
sub
test
sub
push
enter
test
outsb
or
inc
cwtl
loopne
mov
cmp
jmp
in
ds
movsb
mov
jmp
outsb
xor
inc
mov
xor
inc
add
sti
adc
lcall
jmp
cmp
fs
or
add
shll
push
in
push
and
loop
popl
inc
daa
mov
dec
jecxz
sti
stos
jmp
inc
ret
pushf
pusha
pop
mov
mov
or
fstps
enter
dec
adc
scas
aas
dec
push
insb
sub
jnp
add
out
or
mov
test
pop
cltd
stc
xchg
inc
xor
imul
dec
adc
lock
outsb
xor
decb
push
push
pop
idivb
stc
rcrl
lcall
pop
mov
js
aaa
adc
pop
repz
add
mov
cmpsb
pop
and
loop
daa
xchg
cmpsl
jae
sub
mov
inc
mov
add
or
xor
push
pop
incl
cs
repnz
cmp
fnsave
jbe
mov
mov
xor
cltd
lret
loop
cmp
pop
and
xorl
xchg
out
mov
add
lods
mov
cmpsb
mov
mov
pop
or
jl
stos
pop
push
arpl
lret
mov
clc
test
sbb
mov
shll
idiv
adc
mov
add
adc
stos
imul
notl
push
ret
das
nop
cmp
sbb
mov
sub
ja
shrb
jmp
gs
in
icebp
xchg
mov
and
testl
cmp
movsb
xor
mov
sub
mov
add
fwait
add
adc
xor
ss
sub
sbb
test
clc
pop
mov
repz
bound
xchg
bnd
dec
lds
in
pop
mov
mov
dec
pop
adcb
and
jbe
cli
shr
ret
mov
mov
shrl
insl
mov
frstor
adc
jmp
xchg
pop
mov
leave
mov
jae
dec
call
mov
jae
push
xchg
cmp
repnz
push
repz
or
inc
icebp
hlt
mov
test
jno
push
lret
xchg
sbb
and
ljmp
push
mov
jae
aam
xor
cmp
jo
lahf
imul
fmull
push
shlb
sub
xchg
repnz
mov
cmpsl
mov
dec
popf
test
jne
mov
cld
dec
mov
fsts
sub
push
rcl
imul
lods
push
jg
sbb
xorl
mov
inc
cmp
inc
mov
in
lds
xor
push
into
arpl
jb
je
adc
cld
inc
push
cmp
and
leave
mov
aas
hlt
pop
in
push
out
lods
fwait
xor
sub
call
pusha
loop
push
or
mov
sub
clc
lcall
out
xchg
mov
or
shll
lea
mov
testb
pop
dec
mov
cmpb
mov
mov
in
mov
push
sub
push
nop
test
mov
shrb
pop
and
cmp
dec
das
xchg
push
int
shrl
data16
sub
nop
sub
sub
sti
jns
sbb
push
fdivs
pop
adc
inc
mov
lods
inc
into
fbstp
or
push
out
outsb
in
arpl
cmp
mov
cmpb
mov
cmpsb
lock
xor
fisubrs
leave
push
sbb
dec
lea
lock
xlat
dec
mov
dec
shrl
lods
pushf
xchg
mov
gs
mov
scas
inc
xchg
aad
mov
repz
lods
loop
mov
jb
xor
bound
mov
ficompl
xchg
jl
lahf
sub
mov
nop
fcmovnbe
mov
lock
bound
sub
out
sub
fbstp
fidivrs
out
sahf
mov
mov
xchg
in
add
loope
jmp
movsl
mov
divb
mov
jne
cli
jmp
mov
jne
inc
nop
sub
out
test
sbb
ret
call
jl
xchg
repz
mov
push
sub
dec
mov
lahf
pop
ficoml
mov
and
movsl
lock
loop
pop
pop
stos
or
mov
out
add
sbb
inc
sub
cmpsb
ss
fadds
repz
lret
frstor
repz
mov
mov
filds
repz
sub
les
movsl
cmp
lods
push
mov
xchg
mov
adc
dec
pop
ret
push
sub
mov
add
cmp
sub
rcrl
push
test
ret
xor
and
inc
inc
inc
add
fwait
push
ret
pop
dec
cwtl
mov
fs
push
and
cwtl
jb
push
mov
or
push
jle
or
ret
fistl
mov
xchg
mov
insl
dec
xor
fstpt
scas
sar
incb
lods
icebp
inc
dec
mov
test
jmp
dec
and
ret
inc
adc
ffreep
sar
mov
mov
cmc
js
sbb
sbb
stos
std
jnp
push
stos
fcomp
scas
mov
and
popa
cld
mov
jnp
test
and
dec
insb
inc
outsb
data16
stos
add
lahf
xor
pop
jae
push
sub
push
outsb
add
aad
adc
pop
push
shlb
or
mov
mov
mov
fucomi
nop
hlt
lea
mov
scas
dec
gs
dec
sub
xchg
jne
repz
arpl
mov
inc
gs
push
ret
sub
and
jmp
xchg
lods
mov
or
iret
rorb
push
and
into
adc
adc
sub
push
pop
dec
sub
int3
nop
mov
mov
fwait
cmp
imul
xchg
jmp
mov
out
ret
sub
fsubr
sbb
sbb
pop
fsubl
pushf
in
loop
sbb
fdivl
subl
dec
rcrl
rorl
jbe
fnsave
out
leave
cmp
push
cs
imul
fwait
ja
es
and
adc
mov
sub
hlt
jg
movsl
test
adc
hlt
inc
das
and
mov
xor
pop
jle
and
out
popf
inc
jecxz
jo
or
xchg
push
xor
jo
adc
hlt
in
pushl
gs
jne
dec
jbe
xchg
loope
lods
inc
in
aaa
sub
lea
lcall
dec
std
jo
jae
sub
jg
cmp
std
xor
imul
dec
ficomps
sysret
adc
jge
ds
emms
test
ret
mov
mov
add
adc
mov
daa
or
jle
sbbl
pop
dec
mov
out
cmp
or
and
dec
jecxz
shrb
xchg
pop
js
add
fnstsw
leave
inc
jns
sub
and
or
mov
jge
stos
cmp
insl
sub
jno
xchg
mov
cmpb
mov
out
je
daa
leave
sarl
inc
stos
dec
jl
jg
ss
and
fidivrl
ss
pop
or
and
pop
mov
or
pushf
ret
out
cmp
out
fdiv
push
add
pop
mov
cmp
add
and
push
out
dec
or
loop
pop
sarl
aad
mov
and
jo
lods
stc
xlat
cmp
dec
out
movsl
hlt
icebp
cmp
mov
dec
xchg
mov
popa
int
xchg
sub
jne
xchg
fildl
cmp
jo
sahf
mov
cmp
mov
dec
repz
fisttpl
repz
xchg
cmp
dec
or
aam
xchg
xchg
adc
test
ds
push
popf
cmp
jecxz
lods
pop
bound
adc
pop
cli
mov
inc
add
dec
xchg
pop
test
rcrl
sub
popf
mov
hlt
fldl
push
out
or
pop
insl
add
cmc
insl
imul
mov
xor
leave
ficompl
dec
leave
aas
scas
fsubp
mov
js
mov
aad
pop
add
inc
mov
pop
cltd
cmp
pop
mov
lds
repnz
mov
dec
lds
jo
movsl
cmp
mov
push
dec
mov
dec
mov
add
xchg
pop
mov
clc
sub
rol
fwait
lock
jo
xorb
sub
insb
aad
push
jns
fs
mov
jne
lea
rolb
rorb
in
flds
loopne
and
push
dec
out
pusha
jmp
fidivrl
mov
in
mov
sbb
xchg
fidivrl
loop
xchg
xor
pop
push
mov
adc
jp
arpl
sub
repnz
stos
fldl
mov
in
int
mov
inc
adc
aaa
cs
lahf
inc
inc
out
cmpsl
adc
mov
roll
es
push
cmp
call
pop
js
inc
sarb
cmp
dec
pop
pop
jne
into
xchg
imul
fwait
sub
lods
enter
lds
in
iret
adc
push
add
jmp
cmp
jne
add
nop
jbe
arpl
icebp
push
inc
xchg
inc
sbb
xchg
fstp
mov
out
aam
xchg
cmp
cmp
scas
out
dec
jae
dec
pop
and
mov
sub
not
out
sti
dec
jb
push
xlat
add
fnsave
xchg
lret
cmp
pushf
add
jmp
in
cwtl
mov
dec
sub
rorb
pop
lea
cmpsb
mov
cmpsl
or
and
jb
pop
in
mov
popf
xor
mov
add
inc
scas
mov
mov
xor
hlt
cmpsl
aaa
add
xor
pusha
mov
push
cld
pop
orb
mov
daa
xor
mov
daa
stos
fdivs
icebp
mov
addr16
push
fcoms
aaa
xchg
dec
aas
sbb
mov
daa
je
ljmp
sub
jge
ss
xchg
cmp
mov
push
enter
mov
mov
sbb
out
add
and
pop
mov
mov
pop
pusha
lock
lcall
aaa
xchg
insl
jecxz
icebp
push
fcomi
int3
faddl
mov
inc
mov
sbb
sub
repnz
insl
les
lods
stc
push
jne
sub
pop
cmp
imul
push
popf
lcall
dec
inc
out
xchg
sub
pop
out
pxor
stos
pusha
lods
sbb
ret
loope
add
sti
jno,pt
cmp
orl
mov
sbb
mov
inc
pusha
mov
ja
ljmp
fmuls
ljmp
adc
xor
push
ja
ljmp
mov
inc
notl
lods
in
cs
rorl
lock
push
mov
pop
das
scas
ficompl
xor
fs
les
xor
and
shll
int
push
adc
addr16
mov
aas
nop
add
xchg
pop
jg
fcompl
repz
int
pop
iret
push
mov
mov
int
stos
jp
pop
insl
jbe
adc
jb
pop
popl
inc
dec
mov
pop
mov
dec
jo
jb
pop
or
mov
adc
add
movsl
jnp
add
in
inc
mov
xchg
fisubs
out
movsb
stc
pop
dec
out
sbb
je
push
mov
rorb
lock
push
or
dec
repz
inc
das
shlw
std
sbb
dec
aaa
nop
outsb
lret
cmc
xchg
lret
aas
mov
xchg
fcmovne
addr16
add
mov
ds
mov
push
xor
fadd
stc
inc
jb
les
mov
out
stos
sub
xor
inc
loope
mov
int
rcl
out
add
imul
or
andb
pop
jl
fstl
outsb
add
arpl
rcr
add
mov
outsb
push
movsb
inc
rclb
adc
enter
scas
nop
shlb
in
lods
jg
in
jb
and
movb
clc
xchg
hlt
pop
push
or
dec
sub
mull
mov
je
adc
push
push
out
sub
adc
cmp
jns
movaps
mov
in
jns
mov
stc
rcrb
or
jp
xlat
stos
push
scas
sbb
dec
fmuls
arpl
lods
dec
fwait
rcr
ljmp
seta
mov
push
pop
or
push
int
aam
xchg
sbb
xor
or
add
xor
cmp
insl
dec
rorb
mov
cmp
add
push
xor
hlt
pop
jo
je
jle
push
loop
shlb
mov
pop
enter
push
cmp
orb
push
dec
push
push
mov
setns
aaa
mov
inc
cmp
jo
push
cmp
mov
cmp
jns
andb
pusha
adc
in
mov
xchg
nop
mov
loope
pop
rorb
dec
int3
add
xlat
push
cmpsl
out
mov
mov
and
pusha
fadd
cld
repz
hlt
inc
cmc
xor
fistpll
cltd
jp
int
shr
mov
movsl
stc
div
mov
mov
xor
in
xor
jb
data16
test
int
sbb
and
push
xchg
jmp
filds
or
adc
out
imul
sbb
and
adc
cltd
mov
roll
sbb
gs
cmpsb
sub
lock
mov
xor
in
fiadds
lds
mov
and
aas
repnz
jo
xchg
jb
push
dec
sbb
fidivs
inc
xchg
sub
out
dec
cmp
add
cwtl
jb
mov
inc
scas
and
cmp
repz
push
dec
insl
fnstsw
inc
std
test
add
adc
pop
std
mov
imull
and
cltd
push
xchg
xor
and
pop
imul
jp
std
jae
mov
lods
cmc
xor
lret
mov
dec
push
jge
test
loop
mov
std
bound
lret
push
xor
mov
xor
imul
lock
pop
fnsave
fidivrl
mov
lret
dec
cmp
mov
daa
mov
cld
js
out
inc
cmp
sbb
aaa
lods
clc
mov
cmp
std
adc
push
testl
fs
cmp
fsubrp
pop
daa
add
inc
dec
addr16
scas
repz
inc
or
shll
jmp
mov
sarl
sub
fcomi
cmp
pop
js
xchg
mov
add
adc
push
fbld
addr16
mov
stc
sub
and
cmpb
out
fsts
adcl
push
mov
leave
inc
jle
shrb
arpl
ret
jl
push
out
pop
into
pop
add
cmp
or
pop
pop
mov
add
xchg
jne
hlt
xor
mov
mov
mov
push
cwtl
jb
adc
ds
pop
cmp
icebp
lahf
js
adc
mov
inc
xchg
mov
cmpl
nop
fwait
ljmp
aad
shr
out
sbb
jne
stc
pop
lret
lock
js
lcall
sbb
loopne
imul
cmp
cli
ss
push
jbe
dec
pop
inc
push
mov
sbb
inc
iret
std
add
pushf
test
je
dec
sub
popa
sbb
scas
fadds
ss
sub
and
aad
js
mov
scas
rolb
sbb
iret
sets
cmpsb
cmc
push
cmp
gs
dec
rcrb
xchg
cli
icebp
cmp
je
fnstenv
jmp
movsl
xlat
sub
mov
add
popf
pop
sub
insb
addb
ret
ljmp
orl
test
fmull
andl
cmp
dec
dec
pop
mov
lcall
mov
and
mov
in
xor
sbb
jecxz
push
outsl
arpl
movsb
add
push
aam
push
dec
rcrb
cmp
hlt
add
in
jp
mov
push
inc
mov
lds
pop
scas
add
inc
outsl
cltd
cmp
cmpl
outsl
add
jmp
or
lahf
inc
adc
in
jp
adc
or
hlt
ljmp
and
jae
add
jg
mov
jge
jle
bnd
cmc
cmp
cmp
pop
cmp
jmp
sahf
push
addr16
test
scas
add
jl
xchg
mov
iret
test
loopne
push
test
dec
cmp
inc
pop
and
push
pop
cmp
out
test
push
jb
nop
scas
sbb
pusha
mov
push
cmpsb
out
int3
loopne
xorl
pop
and
jmp
dec
inc
lock
mov
cwtl
ds
lahf
add
cmp
leave
and
inc
inc
jb
pop
aas
mov
jae
jmp
or
inc
and
pop
scas
jge
loop
call
and
push
push
xchg
std
in
subl
dec
ficomps
ss
ds
insl
in
lods
adc
fmul
jp
ljmp
push
aam
pop
fists
xor
rorl
jmp
sbb
insl
xchg
mov
clc
lds
adc
nop
push
lds
test
in
mov
loopne
bndldx
xchg
jp
mov
stc
repnz
je
neg
aas
sbb
jp
insl
dec
out
xchg
and
adc
out
dec
lret
jbe
xchg
and
popa
int3
sahf
aam
cmp
repz
push
ficoml
or
dec
sbb
pop
imul
mov
xchg
andl
repnz
pusha
and
ds
mov
jp
jp
xchg
shrb
inc
faddl
sbb
add
jle
sub
adc
out
fiadds
xchg
xor
incb
addr16
roll
shrb
pop
pop
sahf
or
mov
clc
xor
sbb
iret
inc
dec
sbb
fcmovb
push
and
daa
pop
lahf
ljmp
cmc
cmp
outsl
xor
add
bound
lret
sub
pop
push
fwait
iret
jmp
test
jle
jns
inc
inc
inc
push
es
dec
pop
fs
jnp
dec
adcl
pusha
mov
lahf
dec
popa
leave
mov
mov
xor
push
repnz
nop
sbb
bnd
push
imul
aas
lds
jl
mov
les
inc
aad
cld
in
fwait
aam
imul
sub
adc
push
xchg
add
ljmp
jg
mov
cmp
popa
orl
dec
and
in
mov
rol
mov
add
push
push
cltd
or
imul
adc
pop
sub
cld
outsl
push
enter
add
and
mov
hlt
shl
fadds
inc
and
and
pop
decb
xlat
loope
stc
pop
mov
ljmp
push
ss
lods
sbb
pop
mov
mov
movsl
dec
add
dec
cmpsl
je
fs
je
call
in
pop
sbb
icebp
imul
into
jmp
outsl
addr16
lock
bound
adc
rcr
cld
jmp
and
sbb
cli
outsb
es
or
enter
in
mov
mov
outsl
ds
adc
xchg
xchg
mov
das
jp
ret
push
fidivl
mov
or
sbb
jae
or
lret
inc
mov
xchg
jmp
cmc
dec
inc
jbe
and
bound
cmpsb
pop
pop
gs
imul
mov
je
das
clc
pop
cli
mov
repz
in
push
jae
xor
push
mov
fimuls
xor
inc
aam
out
mov
push
add
cmpsb
roll
inc
loop
mov
insb
push
rclb
or
fisttpll
ret
inc
add
add
dec
daa
pop
jecxz
push
out
popa
xchg
push
jle
jns
push
pusha
pop
xchg
cwtl
gs
sahf
stc
mov
mov
jb
sub
cmp
sahf
add
adc
cmp
paddd
mov
inc
push
clc
adc
and
into
pusha
shl
lea
cld
mov
inc
aaa
call
jge
xchg
out
sbb
mov
fiaddl
inc
int
xchg
xor
in
mov
mov
out
aad
cltd
mov
daa
subb
fists
inc
call
xchg
push
repnz
in
adc
jge
mov
movsb
mov
arpl
dec
or
xor
loope
mov
cmp
js
loopne
mov
icebp
das
aad
fidivs
mov
pusha
mov
mov
adc
daa
sbb
sbb
jne
fadds
mov
push
or
mov
xchg
popf
pop
ds
imul
cmp
push
add
outsb
sahf
fldcw
or
and
add
mov
mov
add
sbb
lahf
jns
cmp
cli
cs
iret
adc
xchg
and
add
sahf
in
stos
jmp
adc
mov
xchg
jle
call
add
mov
scas
clc
dec
lret
clc
mov
xchg
fistps
daa
adc
imul
pop
int
jae
sbb
in
mov
jle
sbb
call
xor
mov
icebp
jae
comiss
in
jp
mulb
jo
sbb
dec
and
lods
mov
aas
and
cmp
test
add
lret
push
mov
jl
imull
cwtl
fnstsw
mov
and
cs
cmp
cltd
ret
test
and
loopne
and
jo
wrmsr
mov
cmc
popa
xorb
and
mov
adc
sub
inc
dec
cmc
inc
jne
insl
dec
int
into
mov
repz
hlt
xchg
cld
pop
lahf
sbb
in
push
push
xchg
jb
push
mov
int
mov
inc
outsb
cmp
jmp
js
mov
inc
ficomps
pop
cmc
test
fistpll
rorb
fwait
mov
add
inc
push
adc
bound
and
pop
cmp
mov
mov
xchg
mov
adc
ljmp
adc
sub
pop
je
into
sbb
mov
inc
int
sub
and
push
testb
loop
cld
push
das
clc
xor
fisttpl
hlt
inc
sub
pop
xchg
push
stos
roll
xchg
cmp
mov
leave
push
push
icebp
fdivl
or
rcll
pop
lods
jmp
mov
xchg
aad
scas
push
hlt
imul
aam
mov
out
lcall
sti
or
mov
add
addr16
out
cmp
shlb
sbb
cmpl
in
push
int3
cmpsb
cmpl
insl
mov
sub
sti
add
cmpl
rcrb
push
or
loope
or
xchg
xor
das
jg
aas
rcl
inc
adc
loopne
ljmp
rorl
rcr
jns
rep
scas
inc
shld
loope
inc
cwtl
pop
and
mov
mov
adc
ja
test
into
mov
imul
lea
inc
xchg
repz
scas
adcl
es
vcvttpd2dqx
enter
mov
fidivrl
fsubrs
adc
stos
sbb
dec
imul
not
fcomip
out
sub
mov
leave
adc
jns
addr16
subb
xchg
xchg
ds
jns
cmp
cs
fistpl
add
sub
imul
xchg
adc
icebp
jae
sbb
pop
push
inc
pop
mov
mov
enter
sbbb
sub
add
jmp
jecxz
imul
aaa
lods
jge
jmp
test
xlat
ljmp
mov
shl
xor
out
aad
cmc
imul
sbbl
cmp
xchg
push
movl
cwtl
adc
cmpsl
std
sub
lret
call
aad
xchg
push
setnp
cmp
jp
push
mov
inc
fmull
dec
fnclex
jl
inc
add
push
call
negl
pop
xor
sbb
dec
jbe
adc
fs
dec
push
jg
or
inc
ds
jno
pop
test
mov
mov
das
test
lods
dec
inc
loope
mov
jb
xor
push
loopne
mov
jno
inc
mov
sti
xchg
ror
notl
and
inc
xor
loope
cmp
push
fisubrs
add
pop
xchg
inc
rcrl
loop
data16
and
gs
mov
rol
je
jle
mov
dec
ficomps
iret
mov
or
out
cmp
adc
dec
fcmovnb
mov
mov
and
jge
aas
cwtl
mov
sar
aam
into
imul
pop
jp
sti
sbb
mov
cmp
rcrl
loope
insb
cltd
xor
pushf
mov
cmp
adc
mov
xlat
mov
inc
cmp
fidivrs
jmp
mov
jle
data16
sbb
lds
xor
fsts
les
fcom
pop
ja
mov
das
push
testl
faddl
cli
cmp
jl
or
in
mov
or
jl
jno
insb
repz
add
xchg
pusha
xor
add
inc
sub
or
xchg
cwtl
icebp
xchg
insl
out
dec
xlat
scas
jmp
mov
mov
mov
dec
outsl
hlt
call
push
cwtl
repnz
mov
and
mov
pop
das
mov
dec
out
lods
cmc
popf
and
mov
pop
ffreep
lods
mov
add
mov
ljmp
adc
jo
inc
inc
pop
sub
into
data16
push
cmp
fwait
icebp
pop
scas
aaa
push
dec
dec
sbb
pusha
adc
dec
faddl
popf
in
mov
add
or
pop
pop
mov
or
sbbl
adc
jmp
bound
push
sbb
or
sub
mov
add
pop
pop
aas
out
and
xlat
inc
cmp
addr16
adc
iret
outsb
jg
dec
mov
mov
iret
jle
cwtl
addl
mov
adc
shrl
loope
xchg
cld
mov
xchg
dec
jb
xchg
shrl
nop
lea
mov
cmp
int
adc
jmp
xchg
pushw
mov
fs
pop
sub
sbbb
int
cmp
xlat
cs
es
or
arpl
xchg
in
call
not
incb
sub
pop
xor
out
cmc
sub
sub
mov
jns
rolb
cmp
jo
das
fnstenv
roll
dec
movsb
cmc
test
stc
sahf
cmp
test
in
cld
and
and
sbb
sub
cli
jecxz
insl
inc
push
test
and
jb
std
inc
sti
hlt
aam
jmp
xchg
push
mov
mov
xchg
imul
mov
das
inc
shlb
fstps
lock
jle
or
xchg
iret
adc
sub
sub
mov
ds
nop
ja
mov
xchg
incl
jle
inc
inc
add
inc
jg
jbe
adcl
xor
xchg
in
sbb
dec
shlb
xchg
inc
inc
out
dec
pop
sti
adc
pop
xchg
fistpl
fadds
je
sub
lret
sub
cmp
lods
jne
xchg
adc
or
mov
push
icebp
outsb
in
std
mov
mov
push
cltd
pop
or
mov
mov
test
add
ficoms
and
push
xlat
rorb
rolb
xlat
stc
iret
mov
sbb
cmpl
icebp
or
insl
jae
nop
negl
mov
inc
ret
sub
das
sti
out
push
mov
lret
lret
xchg
cmpsl
add
xchg
outsl
jno
ret
mul
fwait
test
ss
dec
mov
test
ret
fcompl
inc
cmp
mov
adc
sbb
push
imul
insb
fisubl
and
inc
add
test
jecxz
pop
fucomp
adc
pop
aaa
mov
add
pop
xor
xor
push
ja
ret
and
fnstenv
rorl
and
mov
pop
push
and
lret
sub
lret
dec
icebp
cltd
jge
xchg
xchg
dec
jo
jge
outsl
aaa
adcl
cmc
mov
mov
subb
pop
popa
ljmp
stos
sbb
inc
mov
add
cmc
cmc
cmpl
in
pushf
cmp
sub
sbb
inc
mov
xchg
pop
test
int3
jmp
inc
jns
lock
mov
or
or
mov
jne
jecxz
adcl
jns
pop
lret
movsb
enter
push
adc
enter
xor
lcall
and
aam
cwtl
nop
inc
popa
int3
cld
enter
push
scas
xor
xchg
mov
je
testl
arpl
insl
xchg
add
and
jne
je
push
sahf
lock
cmp
icebp
lahf
add
mov
cmp
test
add
push
fimull
cmp
clc
dec
cmp
js
or
mov
push
stc
push
sahf
and
or
cld
loopne
cmp
lods
pop
xor
adc
mov
mov
mov
or
jae
iret
ret
add
push
add
adc
test
data16
rorb
repnz
mov
in
jno
aaa
lcall
jmp
icebp
mov
leave
fcmovbe
push
ret
adc
imul
xchg
bound
fidivrl
xchg
mov
or
in
xlat
lcall
sbb
or
mov
pop
mov
movsl
rorl
jle
pop
sbb
jge
xchg
iret
and
jg
mov
scas
ficoml
cmpsl
mov
xchg
aam
cs
ss
lahf
jp
xchg
pusha
in
orl
cmpsb
les
ret
bswap
xor
inc
ja
scas
mov
xchg
fdiv
inc
pop
iret
pop
sahf
stos
add
xor
jecxz
add
or
pop
and
xchg
lds
sub
add
je
rolb
lret
ja
and
fldcw
repnz
and
ffree
adc
push
mov
or
dec
ss
adc
lret
jge
jne
sbb
xchg
xchg
xchg
call
shl
push
add
pop
mov
pop
int3
into
decl
in
lcall
negl
in
ret
mov
hlt
cmp
adc
pop
or
scas
jg
mull
into
aam
fadds
mov
movsl
lods
pushf
mov
shl
inc
mov
and
lds
adc
mull
dec
mov
mov
orl
stos
and
fwait
scas
jae
sub
push
or
ja
adc
incl
outsl
dec
push
insb
adc
cmp
xchg
ret
push
jl
sub
ljmp
in
sub
sub
imul
pop
loopne
rcrb
aad
cld
sub
sbb
faddl
ret
mov
mov
mov
bound
adc
and
rorb
inc
jle
aaa
dec
xchg
xchg
fnstsw
inc
std
mov
and
xlat
icebp
movsl
popa
gs
mov
add
adc
cmpsb
push
xchg
cli
xchg
cli
sbb
dec
loopne
xchg
mov
jns
in
adc
or
mov
fs
movsl
xchg
cwtl
sahf
hlt
shlb
cmpb
xor
or
inc
jb
fisubrs
out
pusha
and
cli
js
aaa
js
idivl
or
or
jnp
sahf
lods
call
lret
mov
adc
ret
jp
mov
xchg
sub
out
mov
rclb
es
bound
nop
add
inc
test
pusha
pop
dec
ret
push
pusha
jb
xor
inc
jb
cmp
and
sbb
adc
mov
push
jecxz
add
clc
add
lahf
jno
or
jbe
inc
mov
pop
mov
cld
mov
adc
xchg
mov
cmp
mov
lret
mov
jle
stos
test
sub
arpl
push
in
mov
neg
psrld
imul
sti
aam
ljmp
adc
clc
and
mov
bound
xchg
aad
sti
ja
jno
imul
repnz
enter
pushf
addr16
outsl
dec
imull
outsb
std
enter
pop
xor
call
push
dec
inc
mov
sbb
push
adc
inc
mov
mov
orb
cwtl
fildll
xchg
shrb
inc
out
test
icebp
loopne
mov
lcall
and
xchg
orl
andl
add
cmp
adc
mov
dec
arpl
cmp
lcall
rcrl
adc
jg
mov
push
cmp
cmp
clc
pop
rcrb
push
ja
test
push
inc
mov
mov
pop
sbb
or
dec
mov
dec
rcrb
scas
outsl
pop
lret
push
xor
mov
in
bswap
push
fidivrs
shlb
in
jo
push
les
cld
mov
fsubs
fimull
clc
pop
outsb
fistpl
daa
nop
dec
das
pop
mov
imul
jecxz
mov
push
jb
test
movl
add
inc
int
or
sbb
push
pop
sbb
mov
push
lret
dec
fmulp
jne
pop
push
in
fcomp
lea
daa
adc
cs
push
mov
xor
cli
or
push
mov
insl
sbb
insb
sub
cmp
inc
add
or
mov
adc
or
sub
mov
clc
and
xchg
cmp
ja
fcomps
or
inc
sbb
mov
add
int
mov
adc
adc
xchg
sahf
push
jmp
pop
test
push
mull
leave
push
xchg
or
fisubrl
iret
enter
jb
adc
stos
sbb
loope
inc
les
push
jmp
push
shlb
gs
adc
inc
stos
xor
aas
add
jg
mov
pop
and
or
add
in
popa
add
addr16
js
mov
hlt
push
xchg
cli
pop
test
icebp
pushf
rorl
adc
xor
in
cmp
xchg
push
mov
sub
imul
enter
shll
and
hlt
push
xchg
xchg
test
xchg
mov
cmc
and
outsl
push
pop
mov
in
mov
popf
xchg
xor
push
or
or
jmp
pop
cmpsl
add
inc
dec
arpl
int
es
in
fsubrl
clc
jo
pop
ljmp
sbb
int
orl
pushf
lret
pop
insl
aas
add
jge
lea
fnstenv
xor
xchg
add
loopne
popa
outsl
add
pop
xor
cwtl
xchg
sbb
outsl
ficompl
push
cmpsb
mov
in
ljmp
inc
inc
mov
aaa
roll
mov
adc
sti
in
scas
jge
ss
in
cmpsb
inc
and
xchg
inc
pop
sbb
xor
sbb
sbb
sbb
push
gs
dec
lret
pop
cld
icebp
jae
sbb
and
pop
xchg
xchg
imul
lods
ljmp
mov
repnz
add
lret
or
push
fadd
push
sbb
sbb
fcmovb
ret
int3
jo
cmpsb
ss
adc
push
pop
inc
int
int3
test
aas
outsb
fisubs
loop
rorl
fisttpll
add
pop
jge
ror
mov
xchg
lods
inc
mov
cmp
cwtl
fisubl
mov
insb
jo
and
mov
pusha
pop
inc
shlb
mov
lcall
lods
ss
jb
inc
or
in
cli
enter
cmpsl
xchg
pop
fbstp
cmpsl
dec
push
push
cli
cwtl
cmp
cld
mov
inc
add
fwait
idiv
xchg
scas
in
dec
add
in
cs
movsl
sbb
push
xlat
inc
sub
sbb
or
cmpsb
push
aaa
cmp
xlat
cmpsb
pop
hlt
movsb
stc
cltd
push
lret
insl
cmp
sti
xchg
ret
push
inc
jg
add
and
test
loop
dec
in
pop
mov
shlb
jle
popf
sbb
mov
popa
mov
adc
sbb
fdiv
cmp
push
aaa
loop
pop
pop
sbb
mov
es
repnz
stos
sahf
aas
jbe
adc
cmpsl
jnp
xchg
mov
fcompl
and
sub
outsb
xchg
les
sub
cmp
popw
jl
enter
pop
push
pop
and
or
xchg
div
inc
mov
je
xchg
pop
and
and
jae
cld
jb
pand
idivb
jg
in
pop
and
pop
sub
insb
jecxz
out
push
faddl
out
scas
stc
add
movb
push
test
inc
test
mov
xchg
and
sub
shlb
pop
mov
inc
cmp
xor
push
cs
jg
mov
push
cmp
repz
xchg
xor
and
ljmp
pop
or
mov
dec
or
mov
sbb
xlat
adc
jg
outsl
cmp
mov
nop
pinsrw
clc
fsubrl
popa
inc
add
dec
mov
sarb
inc
mov
pop
call
daa
adc
cmp
fstpl
and
sub
into
dec
pop
bnd
push
add
loope
loopne
xchg
lods
adc
jl
cmp
aad
mov
mov
fldcw
jno
and
orb
mov
or
pop
push
add
or
jecxz
mov
les
clc
lahf
outsb
lret
aam
adc
jmp
lret
fwait
dec
pop
adc
inc
cmp
mov
out
add
pop
neg
std
movsl
daa
xor
test
mov
pushf
mov
cmc
shlb
cmp
loopne
test
and
push
lea
cs
orl
and
and
aas
into
jmp
or
push
and
fwait
add
push
movsl
sahf
jmp
push
sbb
sahf
loopne
test
sbb
add
cs
aad
pop
sbb
nop
movsb
ficoms
outsb
mov
sub
iret
push
xchg
jle
aad
dec
aaa
adc
dec
mov
mov
fwait
or
xchg
call
fidivs
or
faddl
push
xor
or
imul
push
jmp
add
xor
or
out
lahf
lods
imul
insb
mov
inc
outsb
arpl
scas
mov
in
lret
dec
inc
lcall
movsl
jp
xchg
adc
mov
lods
mov
shrl
scas
repnz
pop
adcb
lock
jl
push
mov
pushf
mov
clc
daa
mov
insb
pop
add
and
mov
sbb
sbb
xor
scas
enter
cld
pop
adcl
incl
push
cmpsl
lods
cmp
lret
test
inc
out
push
xor
jb
dec
insb
movsb
into
mov
add
mov
std
jb
or
mov
mov
repnz
push
push
xor
sub
movsb
idivb
push
popf
ja
mov
mov
sbb
mov
cli
or
push
sbb
imul
and
dec
fidivs
addl
mov
sti
cmp
fwait
mov
fldenv
inc
leave
mov
mov
les
stos
mov
inc
sbb
dec
ret
adc
cmp
add
mov
sbb
das
sbb
ss
or
and
push
xor
add
lock
cmovne
mov
ds
adc
adcl
mov
or
push
lret
xchg
lods
add
sbb
dec
cltd
push
lcall
jl
sbb
inc
or
stc
fsubrs
inc
dec
dec
xchg
lods
mov
leave
mov
mov
xchg
cmp
or
pushf
fwait
xchg
push
imul
xor
mov
icebp
mov
sbb
sbb
daa
js
cmp
test
and
loopne
sbb
fcmovnu
mov
sub
fsts
fisubs
clc
lods
xor
sbb
or
lock
xor
push
xor
jns
sbbl
cmp
data16
mov
push
es
gs
mov
adc
inc
xlat
fidivs
call
and
add
mov
je
pop
call
ljmp
jo
test
dec
mov
movsl
jge
ffree
hlt
jbe
dec
push
jecxz
xlat
jle
std
in
clc
popf
inc
stos
or
cmpsl
jle
sub
popf
mov
inc
std
out
sbb
sarl
mov
sarb
dec
adc
pop
push
xchg
lock
out
jns
out
sbb
cld
insl
mov
ret
cmp
ss
push
mov
jnp
ret
inc
rorb
pop
inc
xor
or
mov
ljmp
inc
fdivs
mov
pop
imul
pop
stos
imul
int
std
out
cs
push
push
inc
jb
or
dec
jecxz
jns
lcall
stos
out
stos
mov
lahf
lock
and
divl
push
jecxz
stos
pop
pop
test
and
mov
jg
jmp
jne
cmpsl
adc
push
dec
mov
mov
aas
sub
aad
mov
jl
push
jg
decb
and
sub
fisubrs
inc
jae
aas
loopne
pusha
dec
arpl
jmp
nop
aas
pop
xor
repz
dec
sub
in
clc
lods
fmuls
pop
das
in
mov
data16
addr16
xchg
or
inc
and
lcall
faddp
pop
and
pop
hlt
mov
xchg
cwtl
popf
mov
loope
adc
jecxz
flds
nop
repz
iret
fldenv
adc
xchg
scas
ss
loop
test
repnz
je
adc
jl
push
or
lahf
sbb
cmp
ret
fmull
mov
out
xorb
cmp
stc
mov
jbe
xlat
in
lock
les
cld
shrl
inc
mov
loop
xor
pop
fwait
ds
repz
push
aas
test
mov
ja
xor
adc
sbb
jl
test
push
sbb
sbb
pop
imul
adc
sbb
jg
aas
sahf
dec
aad
adc
push
mov
lea
loopne
shl
lcall
jge
mov
pop
andb
imul
hlt
pop
pop
jge
add
lds
add
add
jbe
inc
insl
pop
movsb
pushf
inc
cltd
movsb
movsb
and
fidivrl
aad
cmp
cli
pop
mov
rclb
mov
push
or
or
pusha
xchg
xor
dec
xor
rorl
pop
jmp
mov
test
ds
pop
push
cmp
in
imul
ret
inc
push
xor
cld
sub
mov
fistps
pop
ja
das
out
les
mov
popa
rorl
add
fidivrs
dec
pop
scas
in
test
fdivrl
shlb
call
in
push
movsb
js
cli
inc
adc
xor
js
ret
fwait
inc
scas
outsb
test
inc
movsl
stos
scas
rcll
mov
test
js
cmpl
cmp
jo
jbe
divb
jle
pop
mov
sub
mov
push
data16
imull
popf
lea
xor
sbb
mov
loope
movsb
dec
xchg
pushf
cwtl
insb
adc
sahf
xchg
fs
dec
rorl
and
jecxz
int
push
cmpsb
push
in
outsl
jo
pop
jge
jns
cmp
bound
fwait
pusha
add
pop
mov
movsl
popf
sbb
mov
call
aaa
push
insl
pop
outsl
int3
push
insb
test
popa
mov
shll
addl
lds
fldt
pop
loopne
cmp
fs
xchg
aad
mov
mov
adc
loop
pusha
mov
popa
les
leave
inc
dec
sbb
into
cmpsl
ret
lcall
out
and
js
pop
push
sbb
xor
cli
popa
int3
movsl
cmp
inc
mov
pusha
xor
sub
push
hlt
push
lods
sub
test
xchg
in
mov
lret
jmp
das
insb
les
es
shll
push
inc
xor
xchg
or
call
je
out
repz
cmc
dec
loopne
in
add
lret
mov
mov
mov
aad
jb
inc
cmc
xchg
mov
ficompl
mov
es
push
lods
popa
js
testl
sarl
xchg
xchg
pop
dec
cmp
fmul
repnz
inc
out
xor
insb
call
xchg
mov
clc
stos
and
mov
out
pusha
push
mov
jno
dec
xchg
loope
xchg
jno
mov
js
fildl
lea
xchg
jb
iret
in
jbe
lods
into
fs
popf
loope
into
mov
lret
fldenv
stc
push
pop
jbe
mov
out
mov
or
sub
andl
mov
and
loope
fcompl
adc
push
shlb
fdiv
mov
jns
xchg
adc
rorb
out
nop
repnz
imulb
sub
sub
je
xchg
xor
or
mov
aas
xchg
or
iret
hlt
pop
ds
sbb
adc
push
arpl
aam
xor
popf
add
idiv
imul
testb
jmp
inc
int3
mov
idiv
and
fildl
int
ds
dec
mov
fldcw
adc
sbb
cmp
mov
popa
cmp
push
push
or
fwait
push
and
std
pop
aaa
fisttpl
aas
sbb
in
lock
lock
mov
push
pop
pop
xchg
test
call
cmpsb
pop
iret
xchg
dec
push
fcmovb
cmp
lret
sub
push
shl
sahf
movb
fiadds
in
fidivrl
dec
nop
insb
add
inc
into
xor
mov
cmp
in
jns
xor
sti
cmp
fcomps
xchg
lcall
inc
mov
in
mov
enter
fidivrl
lret
xchg
shll
cwtl
les
shrl
cmp
lea
jnp
push
add
mov
es
fsub
sbb
mov
out
push
push
adc
lods
mov
lds
pop
popa
dec
adc
test
lcall
jbe
mov
xchg
mov
xchg
sub
mov
aaa
sub
and
inc
jo
std
xchg
lea
jl
and
xchg
dec
aaa
mov
iret
mov
sbb
subb
and
mov
sub
popf
xlat
and
add
xor
js
loopne
mov
mov
sti
pushf
adc
mov
loop
sub
or
xchg
push
leave
prefetch
or
jge
int3
shll
pop
adc
lods
mov
out
inc
push
mov
sub
ss
out
sbb
cmpsb
sbb
xchg
aaa
outsb
cmp
cmp
aad
push
cmp
mov
test
shlb
inc
pop
sbb
adc
ljmp
mov
cmp
dec
xchg
out
movsl
dec
cmc
js
dec
xchg
jg
popf
ss
ljmp
lcall
mov
idivl
adc
fdivrs
dec
divl
mov
es
scas
add
jns
sub
lea
nop
push
jb
fdivl
nop
mov
dec
mov
in
inc
icebp
aaa
fimuls
orb
aad
jmp
jmp
pop
and
iret
mov
and
in
stos
mov
mov
jae
or
sbb
out
sbb
aaa
push
std
ja
mov
in
insb
call
shrl
adc
xchg
fsub
mov
cmpsl
fimull
pop
pop
and
mov
mov
ret
icebp
inc
repz
dec
and
test
popf
hlt
and
sbb
jge
out
sbb
mov
test
lock
out
dec
pusha
sti
cltd
add
add
jo
sub
dec
dec
push
xor
mov
mov
pop
sbb
lcall
jl
mov
fcoml
or
mov
cli
push
inc
fnsave
mov
stos
cld
lods
jmp
sub
pop
push
cmp
pop
fsubs
fsubp
jnp
xlat
push
and
in
or
xchg
lret
add
sbb
pop
ret
iret
data16
or
cmp
mov
cmp
icebp
imul
mov
jno
clc
cmpsb
pop
fstl
xchg
sub
mov
pusha
xchg
xor
mov
mov
cld
cmp
movsl
add
push
mov
cmp
jmp
dec
sbb
cmpsl
cmp
popf
subb
inc
pop
clc
adc
inc
subl
pop
cmp
jmp
daa
push
cmp
cmp
xor
and
xor
stos
push
jecxz
int3
aaa
scas
es
imull
loop
pop
sbb
adc
mov
lock
mov
inc
icebp
dec
sbb
add
sbb
xlat
movsb
dec
jge
stc
pop
lret
inc
xorb
test
mov
and
sbb
or
mov
cmp
xchg
push
gs
test
fists
pop
xor
enter
hlt
clc
inc
jae
shrb
push
mov
jae
jns
into
movsl
test
enter
xchg
shr
clc
popf
mov
jnp
arpl
or
jb
inc
outsb
dec
mov
ds
jge
jo
adc
xchg
andb
or
inc
popf
inc
ss
movsl
das
push
std
xor
inc
jge
in
add
js
psrlq
cwtl
mov
rcr
jp
sahf
xchg
ret
add
int3
adc
push
jns
adc
mov
jle
fwait
stos
out
jae
xor
lahf
jbe
cmp
lods
push
add
pop
xor
fisttpll
jle
or
jno
insl
or
rclb
xchg
add
sbb
pop
adcl
dec
call
xchg
stos
cmpl
fistps
das
xor
in
jge
punpckhwd
addr16
lods
aas
ds
inc
pop
psadbw
xchg
sub
fcoml
andb
cmp
pushf
add
out
jge
push
fldcw
mov
inc
andb
jmp
fs
rsm
shrb
mov
in
test
jmp
mov
test
stos
cmp
push
xchg
hlt
sub
aaa
fcoml
pusha
cli
sub
stc
jbe
xchg
lret
mov
in
jne
xchg
in
cli
sbb
int3
ss
xlat
imull
aad
jg
mov
call
mov
pushl
inc
scas
mov
sbb
sub
sar
xor
mov
mov
bound
pop
jle
and
hlt
adc
sarl
int3
push
fmull
xchg
xchg
in
fnstcw
je
and
dec
cld
lcall
test
jge
bound
orl
out
or
negl
jmp
mov
push
xchg
mov
inc
mov
mov
cwtl
mov
enter
cmp
pushf
je
scas
test
jo
pop
xchg
mov
jmp
lock
testl
pop
push
push
sub
shrb
mov
jmp
or
enter
pop
cwtl
inc
ret
das
fdivrs
inc
mov
lret
stc
mov
fisttpll
mov
sarb
mov
movsb
lods
aam
mov
dec
pop
bound
mov
cli
loope
pop
pop
cli
in
inc
sub
sub
pop
rclb
adc
sbb
inc
dec
loope
cltd
dec
movsb
adc
jnp
add
idivb
test
mov
imul
es
mov
mov
int
aas
enter
mov
in
shr
mov
adc
fildl
insb
ror
adc
frstor
fimuls
xor
ficoms
out
pop
xchg
mov
in
ds
adc
pop
push
mov
or
mov
sbb
lret
mov
in
inc
jb
aam
stos
pop
popf
pushf
loopne
hlt
fdivr
fistps
mov
fwait
xchg
les
call
andl
adc
sarb
sub
mov
ja
mov
pop
pushf
push
inc
mov
or
push
and
or
test
mov
rdmsr
mov
dec
cli
sub
scas
cmpsl
test
jno,pn
ret
arpl
cli
inc
into
push
test
es
pop
cli
or
sbb
xchg
popa
dec
jle
inc
aas
or
nop
decl
mov
fmull
jo
ss
cmpsl
push
push
lret
mov
mov
fs
sbb
es
add
lahf
out
jmp
outsb
pop
ret
sub
cs
sbb
std
test
shll
int3
jecxz
jno
outsl
int3
cs
sbb
out
adc
gs
pushf
jecxz
inc
push
mov
mov
pop
fiadds
cmpb
sbb
jno
add
ss
out
aaa
testb
sahf
sbb
pushf
bound
inc
jnp
cmpsb
popf
push
dec
sub
add
imulb
divl
scas
data16
call
movsb
outsl
mov
pop
jge
mov
dec
inc
or
loopne
sbb
imul
jmp
movsl
out
pop
fistpll
aas
push
leave
leave
sbb
dec
jl
cmc
js
test
pop
adc
ret
jae
dec
push
push
mov
aad
iret
mov
stc
mov
dec
cld
fbld
gs
mov
pminsw
sarl
push
insb
sub
faddp
jne
or
inc
pop
shr
jecxz
mov
lock
mov
mov
ficoml
jg
ljmp
mov
mov
or
ss
pop
fnstsw
adc
cltd
es
bound
ds
and
jle
jg
adc
movaps
jl
daa
add
mov
push
fdivrs
and
ret
repz
pop
mov
xlat
dec
fnstenv
jmp
pop
addr16
push
xor
mov
subl
lods
cwtl
push
and
call
imul
out
mov
lahf
add
and
xor
aad
dec
push
inc
scas
popa
ljmp
cmp
ret
jne
and
out
jg
call
mov
lcall
ds
sbb
xchg
xchg
jp
aam
pop
repnz
imul
adc
adc
outsl
dec
pop
daa
xchg
popa
inc
movsl
cld
lret
mov
add
xor
sahf
or
jle
inc
cmc
mov
inc
fldl
pop
movsl
cld
and
mov
inc
mov
xor
aaa
push
xchg
jno
bound
addr16
cmp
test
scas
dec
repz
xchg
in
sub
call
pop
je
add
add
arpl
ss
out
mov
and
iret
out
stos
jae
mov
push
pop
cmpsb
adc
icebp
sub
das
cmp
in
lods
ror
stos
adc
xor
mov
adc
dec
ficomps
enter
xchg
cs
std
lcall
jo
arpl
pop
icebp
cwtl
lret
orl
jo
fcmovnbe
or
xchg
xor
cmp
mov
xchg
daa
pop
scas
iret
xor
stos
rcrl
leave
stc
in
rolb
jmp
enter
jecxz
clc
in
daa
inc
mov
or
fwait
loope
lods
stos
cmpl
cwtl
adc
adc
andl
mov
push
cmp
insb
arpl
cmpl
inc
add
inc
pop
je
test
push
bsf
aas
xchg
outsb
and
leave
cmp
daa
mov
call
pop
xor
dec
icebp
iret
je
mov
and
div
mov
cld
rol
jmp
push
inc
insb
push
adc
dec
mov
std
repnz
in
pusha
loope
popf
sbb
push
mov
jne
addl
sahf
push
ljmp
xchg
gs
push
fs
pusha
mov
mov
xchg
inc
in
cmp
in
dec
inc
push
push
repnz
pop
out
in
ja
repz
int
test
out
mov
fisttpll
fcoms
lcall
push
clc
sbb
sub
les
sti
notb
adc
pop
int
cmpb
dec
push
fcomip
push
mov
add
cmp
addl
and
inc
jbe
sbb
inc
push
mov
into
sub
outsb
fadd
and
cmp
sub
xchg
cmp
adcb
adc
ror
scas
xor
rolb
stc
popa
push
cs
mov
mov
loope
adc
ljmp
mov
add
adc
mov
mov
lds
imul
or
pop
jne
fwait
nop
cmp
jge,pt
pop
or
and
pop
jae
fisubl
into
sti
lcall
mov
push
xor
push
jno
out
iret
mov
or
cmp
or
or
mov
pop
mov
adcb
xor
ljmp
stos
jecxz
sbb
and
loop
outsl
push
add
pushf
mov
xor
add
loopne
push
sbb
popa
jns
lods
std
ret
ret
jp
es
ljmp
test
cmc
shrb
mov
jb
dec
andb
jnp
adc
xchg
lds
test
ja
or
stos
stos
lcall
cwtd
jb
mov
fldenv
pop
jmp
rorb
repz
aad
ja
rcl
mov
out
jno
pop
xabort
fsubrs
pop
out
enter
sub
fstpl
jecxz
mov
sbb
shlb
addl
fs
in
xchg
lods
cmc
mov
mov
mov
jmp
sbb
mov
shlb
xor
cmpsl
mov
mov
add
pusha
call
fs
hlt
inc
adc
paddusb
jnp
cmc
test
aad
lods
pop
cmpl
ret
mov
inc
and
jle
fldcw
js
adc
jae
testl
jmp
shlb
sbb
arpl
mov
scas
jge
push
lods
cs
loope
jno
add
sbb
mov
in
dec
mov
push
jae
sub
pop
lahf
enter
enter
fsubrp
rcr
mov
adc
add
scas
call
mov
xchg
pop
dec
gs
fcompl
loope
or
fsubs
cs
inc
ljmp
hlt
cld
cli
hlt
and
mov
loopne
pop
or
dec
xor
sub
mov
dec
call
daa
lods
jns
push
mov
loop
lret
jo
inc
mov
push
xor
or
pop
movsb
inc
jp
cmpsl
hlt
or
cwtl
je
les
xor
dec
cli
xchg
mov
cwtl
mov
adc
sbb
sub
and
aam
inc
test
lock
loope
ret
icebp
mov
cli
outsb
push
rorb
jp
lods
fldenv
push
jge
lcall
rcll
pop
sub
in
lcall
sub
aas
pop
sbb
pop
arpl
and
rorb
cmp
movsl
enter
cltd
cmc
test
fcoml
std
shll
call
add
dec
mov
sbb
imulb
cmp
test
push
adc
push
mov
inc
xor
aad
mov
sub
movsl
pop
fisttpll
lcall
repnz
and
cltd
jmp
add
or
scas
call
adc
mov
bound
fsubl
popa
mov
jp
jb
cmpb
jno
or
loop
cs
ficompl
lds
aaa
test
faddl
subl
sub
rcrb
jmp
cmp
cmpsl
arpl
sbb
sbb
into
fsubs
jg
sub
xchg
ret
mov
mov
aaa
mov
std
loope
cmc
push
loope
jle
loop
int3
cmp
sbb
add
in
push
sarb
mov
and
xchg
int3
jmp
hlt
adc
lods
in
mov
icebp
adc
xchg
fiadds
imul
sbb
jae
mov
imul
jecxz
dec
jle
jmp
outsl
xchg
pop
mov
mov
movsl
mov
insb
pop
cmp
sbb
sub
cmp
adcl
inc
sub
sub
and
cmc
fwait
in
mov
scas
loopne
xchg
xchg
mov
and
sub
nopl
push
aad
or
mov
dec
mov
roll
dec
out
cmp
test
jmp
inc
test
mov
jecxz
scas
jp
and
xchg
in
hlt
cmp
outsb
inc
xchg
je
add
sub
in
add
enter
push
ror
aam
inc
mov
cltd
ret
cmovg
aaa
jg
sbb
jo
or
mov
dec
insb
or
test
sub
push
in
fistpll
add
dec
ss
and
popa
inc
sub
sbb
sbb
pop
sarl
or
in
pusha
stos
loop
add
mov
lods
mov
out
neg
je
fsubrs
or
xchg
xlat
mov
rol
push
dec
jb
es
push
or
mov
arpl
mov
aas
xor
ljmp
sub
and
in
mov
aas
rclb
stos
jecxz
clc
iret
sbb
lea
pop
mov
add
ficoms
inc
iret
adc
fisubs
in
sbb
and
mov
incb
aad
dec
sarl
mov
push
pop
decb
stos
loopne
adcb
mov
mov
loope
xchg
int3
mov
xchg
test
cmp
cltd
dec
cmp
ds
pushf
xor
dec
out
sub
and
adc
ret
fmull
hlt
mov
icebp
mov
xchg
push
sti
dec
out
pop
in
je
jmp
cmp
movsl
sbb
xchg
test
push
sbb
cmp
imul
jb
out
cmpsb
dec
xor
xchg
jge
cs
or
jbe
je
test
js
es
imul
rcl
or
fwait
inc
clc
stos
sbb
xor
loope,pn
lods
dec
rolb
jmp
mov
inc
xor
jo
cmp
push
shrl
cmc
add
out
ret
inc
sub
jmp
mov
lea
outsl
push
gs
jns
jno
fcom
inc
aam
stc
inc
ret
fisubrl
pop
sub
or
ret
imul
sbb
lcall
fisubrs
cmp
shll
sbb
push
jle
nop
addr16
mov
fcompl
xchg
pop
adc
call
sub
gs
xor
pop
test
cmp
xlat
fld
inc
jp
push
pushf
jecxz
mov
repz
cmp
sbb
fwait
sahf
or
test
sbb
scas
mov
xor
jo
fldt
jo
aam
sub
nop
mov
dec
ss
inc
cmp
test
fisttpll
fwait
cmpsl
or
je
clc
shll
jne
xlat
jo
adcl
inc
lret
add
mov
mov
jo
rcrb
and
add
and
leave
dec
das
sbb
adc
arpl
pop
loopne
mov
push
cltd
ljmp
cmpsb
and
mov
sbb
lods
cs
incl
pop
push
in
movsl
movsl
mov
cmp
loopne
push
imulb
xor
test
hlt
dec
sbb
push
test
loopne
xchg
pop
cltd
cli
push
fcoms
data16
repnz
sbb
sbb
inc
outsb
fstps
test
add
mov
insb
inc
pop
sbb
mov
cmpsl
pop
adcb
cmp
cmpsl
lods
test
pop
int3
lock
ret
sbb
rcrb
push
std
inc
test
fcmovne
push
dec
lods
or
mov
lahf
sti
xchg
mov
mov
and
push
rcrb
mov
mov
pop
pop
add
cmp
hlt
dec
and
jmp
and
insb
pushl
lret
jnp
cmp
jno
int
ficoms
xor
adcl
mov
enter
orl
gs
dec
jno
mov
dec
scas
pop
pop
imul
add
mov
mov
mov
imul
ficompl
xchg
rcl
in
pusha
pop
jg
or
movsl
xor
cwtl
nop
adc
shr
repnz
js
adc
movsb
pop
jns
cmp
test
incb
movsl
push
mov
inc
xor
in
xor
jmp
jae
les
arpl
xchg
cmp
std
negl
jge
add
cmpl
push
js
rolb
imul
ret
int
mov
cmp
sub
jbe
sbb
fisubrl
cli
insl
jl,pn
imul
mov
cmp
jmp
cmp
push
add
xchg
mov
mov
in
xor
pusha
or
stos
xor
lds
testb
ret
cmp
shl
cmp
sub
xorb
jge
and
call
dec
icebp
cmp
cmpsb
mov
adc
insb
mov
ret
fdivl
ret
lret
fcoml
ljmp
fwait
or
shl
pop
rcrb
xor
ljmp
les
fs
mov
dec
jmp
sti
jae
call
sarb
outsl
mov
ljmp
push
dec
pop
jg
xor
xchg
outsl
cmpsb
enter
mov
cs
outsl
sahf
fcmovu
notl
push
pop
nop
xchg
insb
pusha
jo
add
std
xor
and
mov
stos
or
sbb
aam
cld
sbb
dec
fwait
sub
jl
adc
cld
scas
push
subb
out
out
gs
and
xor
lret
adc
addl
and
or
dec
iret
lods
xor
xchg
jb
jbe
xchg
aam
into
and
shlb
subl
push
loope
sbb
fsubrl
stos
das
negl
icebp
push
fnstsw
out
mov
sahf
adc
call
jnp
insb
cmp
mov
std
mov
add
mov
sub
dec
mov
out
cs
mov
cltd
sub
loopne
dec
repnz
add
xor
fimull
insb
xchg
sub
clc
fwait
mov
push
push
and
cmp
sti
cmp
adc
out
out
mov
int3
hlt
popf
pop
xchg
pop
decb
push
dec
aad
dec
pop
out
out
ret
add
outsb
mov
aad
sbb
js
push
push
mov
lret
inc
mov
in
mov
sahf
repz
jecxz
lahf
mov
mov
aam
mov
in
insl
daa
mov
insb
push
and
pop
movsl
outsb
mov
jge
icebp
adc
adc
lcall
montmul
cmpsb
inc
xor
lds
xchg
popf
push
pop
sbb
and
sbb
cwtl
cli
nop
imul
fcoml
and
fidivrs
inc
xchg
js
adc
popf
imul
xchg
outsb
add
js
inc
pop
mov
clc
mov
ljmp
in
push
ds
jmp
mov
xchg
gs
in
push
xor
aad
sar
jno
in
out
movsl
in
inc
mov
call
stos
in
bound
dec
sub
out
xor
add
shlb
cmp
outsl
movsb
imul
das
mov
cld
xor
xchg
adc
jnp
testb
mov
dec
and
sbb
int3
jmp
aad
adc
loope
repnz
sbb
add
and
sub
out
xchg
adc
xchg
movsl
inc
test
jle
inc
pop
lods
dec
cli
test
insb
sbb
test
jbe
dec
cmpsb
mov
movsb
xlat
inc
push
or
push
jae
outsb
sbb
stos
dec
cmp
pop
cmp
decb
mov
in
and
jp
xchg
fldenv
repz
shrb
arpl
pop
dec
jmp
fnstenv
mov
and
adc
bound
shl
mov
push
aaa
cli
pushf
jne
mov
and
mov
push
cmc
cmp
imul
push
int
sub
in
dec
add
rorl
fiadds
push
repnz
divb
shll
mov
ret
or
mov
cli
sub
pop
jb
aad
je
or
stos
bound
dec
sub
or
mov
inc
test
push
addl
xchg
mov
dec
sub
jne
sub
inc
and
jmp
aad
fwait
jbe
lods
push
dec
mov
stc
pop
pop
lret
jle
push
mov
call
or
adc
and
mov
lret
rcr
dec
dec
mov
pop
cmp
xchg
mov
call
xchg
movsb
scas
dec
adc
in
push
nop
push
sub
adc
lock
mov
jg
xchg
jnp
popf
cmp
jle
lret
rolb
mov
dec
push
add
rol
xchg
xchg
lea
test
movsl
cmc
pop
and
inc
push
pusha
pusha
enter
nop
int
std
mov
test
push
sub
imul
jge
loopne
inc
jge
pop
stos
or
pop
pushf
lret
in
pop
dec
out
lahf
cld
xlat
xor
mov
iret
dec
push
mov
adc
sbb
push
mov
mov
bound
jbe,pn
cwtl
inc
pop
test
subb
aas
imulb
dec
jecxz
push
sbb
insl
jae
repz
pop
mov
add
aas
leave
push
scas
adc
adc
xor
ss
pop
ss
out
arpl
sbb
mov
mov
popa
sub
and
bound
aaa
push
cmp
dec
shll
sarl
fisttps
pop
add
dec
sbbl
mov
mov
push
xor
lods
push
pop
xchg
or
xor
shl
jae
jle
push
jne
inc
and
or
adc
mov
je
cmpsb
mov
or
loop
push
dec
packsswb
sub
ss
sub
lods
add
add
dec
fwait
and
lea
lret
sbb
inc
adc
push
jge
pop
pop
jl
jb
pop
xor
inc
outsb
pop
out
movsb
ds
cwtl
ja
xor
adc
mov
nop
xchg
outsl
loop
sbb
imul
outsb
fcmovb
outsb
push
mov
movsb
inc
mov
dec
lock
mov
iret
fucomi
lods
je
push
pushf
sti
sbb
pop
sbbb
into
rorb
hlt
hlt
arpl
scas
loop
xchg
mov
sahf
ds
movsl
xor
imul
lock
lock
or
fstl
adc
and
pop
jg
gs
pushf
cltd
pop
push
xchg
ljmp
mov
jb
ret
pop
imul
mov
test
dec
flds
or
pusha
or
mov
in
xorl
and
loope
sub
mov
test
addb
mov
ret
push
mov
sbb
imul
fists
mov
xchg
gs
adc
pusha
push
mov
pop
dec
add
or
inc
and
arpl
push
inc
hlt
or
add
mov
mov
pop
hlt
add
js
inc
daa
insl
xor
into
jmp
mov
cld
sub
aaa
xchg
jb
sbb
xchg
aas
insl
pop
pop
xchg
call
and
mov
or
mov
jno
test
mov
arpl
rclb
xchg
push
adc
pushl
mov
je
inc
into
mov
je
fisttps
sbb
in
cmp
lret
or
enter
lds
or
lea
ljmp
das
fsubl
test
test
aas
icebp
dec
les
lahf
sub
mov
or
movsl
cmpsl
sub
xor
notb
incb
into
cmp
inc
cmp
aad
jne
jl
ja
scas
jns
lock
ljmp
mov
mov
lret
lods
lds
inc
scas
pop
adc
imul
pop
jge
shlb
adc
lret
mov
mov
mov
cltd
or
fmuls
mov
subl
and
inc
pop
hlt
imul
enter
jbe
jne
jl
loop
popa
outsb
add
ficoml
push
enter
jb
ss
mov
mov
mov
cld
dec
mov
test
nop
xchg
jp
cmp
mov
mov
fstl
out
xchg
lea
fs
push
movsb
imul
into
shrl
bound
dec
inc
jge
jl
dec
fidivs
jnp
cltd
mov
mov
int3
popf
push
incl
jmp
fxtract
cli
jle
fsubs
and
mov
out
pop
jb
sbbl
push
repz
xchg
insb
xchg
inc
xchg
scas
lcall
cld
ja
sbb
cltd
ja
inc
mull
mov
push
mov
aam
out
aad
mov
sbb
xchg
inc
push
outsl
outsb
cld
pop
add
add
and
pop
daa
pop
int
popa
xchg
add
jns
xor
fisubrs
in
or
out
jnp
mov
jecxz
jae
sbb
mov
call
sbb
mov
inc
arpl
mov
mov
fists
adc
sub
test
adc
xchg
sub
je
xchg
mov
cmpl
loopne
cli
push
rcl
xchg
pop
pusha
xchg
call
pop
imul
orl
sti
mov
pusha
pop
clc
xor
xchg
hlt
pop
lods
fistpl
add
hlt
mov
xchg
push
cmp
inc
sub
mov
dec
mov
daa
sahf
cmp
int3
xchg
or
les
arpl
xchg
adc
xchg
push
sub
sub
dec
lahf
movsb
ret
and
and
cmp
pop
pop
cld
mov
iret
or
sbb
cmc
fs
call
test
jge
xor
dec
popf
fsubs
fbstp
adc
add
mov
mov
gs
jmp
jge
pop
repz
in
in
mov
aad
or
pop
lods
cmp
cmc
enter
jno
cmp
and
lret
stos
sahf
outsb
stc
std
cmp
shll
mov
inc
mov
xchg
cmpsb
add
xlat
aas
mov
jp
push
jb
scas
jns
mov
jnp
dec
xlat
and
loope
scas
punpckhbw
andb
xchg
inc
test
and
xor
pop
push
stos
call
jns
pop
cs
inc
or
pop
xchg
xor
stos
and
push
in
mov
testw
popa
movsb
ficomps
insb
pushf
sub
xor
inc
jo
mov
sbbl
mov
push
pop
or
jnp
dec
imul
test
push
push
inc
int3
jmp
mov
fisubrl
daa
addl
inc
and
sub
or
scas
out
or
adc
xchg
fcmovne
cmpsb
mov
jns
sbb
xor
das
xchg
scas
inc
mulb
mov
sahf
movl
dec
xchg
add
xchg
lret
or
pop
or
add
or
fcomi
or
push
or
mov
pop
imul
clc
sarl
dec
inc
addl
in
or
and
pop
shlb
in
pushf
aam
add
pushf
jns
loope
bound
cwtl
adc
loope
cld
enter
adc
outsb
popa
leave
sahf
jno
push
sbb
call
stos
and
inc
fwait
push
adc
ret
notb
mov
xor
sub
push
push
pop
outsb
push
pop
pop
loopne
dec
jmp
cltd
movsl
cmp
nop
xor
push
clc
out
dec
cmp
adc
imul
pop
cs
dec
mov
enter
daa
loopne
xor
inc
lcall
add
push
in
push
jo
and
jae
outsb
jno
aaa
js
jne
push
sahf
jecxz
xor
ret
and
loop
and
pop
movsl
std
pop
mov
cmp
in
add
out
ds
call
inc
add
cmpl
mov
sbb
cltd
je
faddp
mov
imul
push
add
cli
xchg
dec
pop
pushf
iret
adc
pop
jne
cld
mov
pop
stc
cmpb
sub
insl
add
xor
mov
gs
dec
divb
pop
or
or
sahf
pop
std
mov
jns
add
sbb
inc
movsb
mov
sahf
sbb
mov
popa
xor
fcompl
popa
sub
lret
add
jmp
mov
arpl
mov
les
es
outsl
pop
xchg
imul
mov
xchg
rolb
fsubs
in
ret
xchg
stc
insl
es
push
xchg
or
push
mov
jns
sub
loope
dec
int3
add
fcoms
cmp
jmp
jo
je
cmp
add
add
or
aam
sbb
or
scas
nop
shl
sub
outsb
test
xor
or
inc
icebp
jle
mov
lea
inc
cmp
jl
ljmp
sbb
cli
pop
fisttpl
ja
inc
insl
mov
test
loopne
adc
lods
cmpl
cltd
je,pn
les
sbb
jl
data16
aas
pusha
data16
pop
xchg
ltr
sbb
jae
adc
lcall
scas
sub
xor
dec
mov
xlat
dec
es
push
lret
mov
mov
out
sub
and
and
xor
jmp
jae
push
adc
pop
dec
jmp
cld
outsb
adc
xor
sbb
mov
sbb
push
es
lret
push
inc
iret
cmp
test
sub
adc
gs
jb
subb
mov
jecxz
roll
add
insl
lods
mov
repnz
add
ds
dec
add
inc
pop
shll
stos
xorps
insb
jb
test
sbb
popf
xchg
push
add
testb
ljmp
push
sub
mov
call
add
in
inc
cmp
cmpsl
jno
hlt
jecxz
fnstcw
lds
fs
mov
inc
loopne
or
sahf
jo
stc
sbb
fdivp
mov
int
sbb
fdivl
lea
lcall
push
sbb
repz
xlat
clc
adc
mov
xchg
daa
ljmp
sbb
cmp
sbb
dec
sti
aas
outsl
add
fistpl
mov
fnstcw
push
pop
cld
ja
or
fwait
mov
xchg
jge
imul
sbb
loopne
cmp
xchg
insl
push
sti
cmpsl
dec
mov
inc
fs
sbb
lcall
ret
cs
sarb
sub
add
out
xor
mov
mov
push
lock
lods
loop
jb
jbe
add
out
call
imull
les
push
aaa
hlt
test
ja
dec
movsb
daa
fildl
addb
ret
mov
inc
mov
pop
mov
fmuls
insb
shll
ror
dec
out
pop
movzbl
mov
push
out
ss
or
pop
or
sbb
sub
lea
cld
jno
fildl
jne
ljmp
repz
mov
cmc
mov
adc
pop
or
mov
orb
pop
test
mov
std
xchg
out
cltd
js
xchg
psubusw
jg
jb
scas
dec
mov
hlt
mov
and
lcall
lcall
dec
cld
mov
subb
stos
dec
loopne
lret
ret
jge
lret
xor
lods
push
sbb
pop
test
xchg
cwtl
arpl
lds
pop
arpl
dec
ss
insb
mov
or
pushf
cmpsb
adc
jl
inc
inc
test
shlb
pop
cld
enter
in
pop
lods
mov
clc
sbb
pop
push
pop
dec
std
pop
inc
test
xchg
fwait
mov
hlt
push
jl
lret
and
cwtl
insl
inc
jnp
mov
cmp
xchg
xchg
mov
out
out
push
adc
xlat
data16
imul
mov
mov
add
ret
outsl
inc
jle
insb
cmp
shll
iret
pushf
xor
clc
jo
xchg
inc
adc
pop
xor
cmc
push
adc
and
dec
mov
mov
push
std
xor
bound
in
xor
repnz
cmpl
cmp
add
mov
mov
xlat
in
test
sub
fldcw
cmp
mov
clc
or
xchg
mov
sbb
insb
fdivr
inc
cltd
in
jmp
mov
jne
inc
xchg
lret
je
insl
dec
test
lods
xor
cmp
xchg
subb
or
aas
movsb
jae
add
popf
cmc
add
stos
xchg
daa
cmp
outsl
call
adcl
imul
je
aaa
lret
in
gs
push
test
dec
es
scas
dec
fcmovnu
or
shlb
ds
adc
jb
movsl
orl
lahf
call
pop
dec
fisubl
hlt
es
push
xchg
xchg
xchg
cwtl
ret
cmp
mov
cmc
push
cmp
ljmp
mov
arpl
test
rcrl
cs
dec
adc
lea
mov
pop
mov
mov
nop
inc
repz
out
xor
insb
sub
stos
fwait
test
test
stos
cmc
cld
cmp
scas
pop
add
and
pushf
inc
sub
movsb
add
mov
add
jnp
fcmovbe
pop
push
mov
loope
int3
insb
cmp
ss
scas
push
push
add
sarb
inc
outsb
lcall
sub
sub
mov
out
mov
aaa
mov
js
lea
pop
fisttps
ds
pop
cmp
lea
adc
shrb
inc
xor
movsl
rorl
data16
mov
lea
sub
xchg
test
mov
pop
movsl
sbb
or
push
out
sub
sub
loopne
inc
pop
sub
or
add
sbb
jge
pop
imul
xchg
in
push
sub
in
add
sti
pushf
sub
xor
frstor
fwait
lcall
pusha
sahf
and
outsl
aas
and
fisubrs
mov
jl
fmuls
addr16
jbe
pop
pop
jmp
ss
sub
or
xlat
fcmovnb
ret
loop
xchg
sub
rcll
or
sub
stos
stos
push
adc
push
and
bound
outsl
pusha
in
cmc
rcll
push
or
xor
jge
int3
std
dec
jbe
mov
mov
or
icebp
lahf
sub
cmp
loope
inc
and
lret
push
movsl
mov
xor
or
dec
or
jb
mov
sarl
xchg
mov
ss
mov
xchg
inc
or
ljmp
mov
push
aam
cmp
or
pop
test
rep
or
sahf
cmc
test
mov
push
inc
aas
mov
repnz
fsubr
jo
fstpl
cmpsb
push
and
mov
mov
ret
pop
cmp
mov
adc
mov
iret
mov
and
popa
mov
mov
jp
jge
roll
fistps
out
out
or
mov
lcall
in
xlat
dec
mov
adc
mov
out
out
scas
cmp
repnz
or
cmpb
adc
out
repnz
mov
inc
pop
adc
and
jns
jmp
pop
mov
push
pop
aad
add
and
inc
ds
push
or
sub
repz
rol
push
jae
ss
push
inc
jae
movsl
jmp
fldenv
pop
incl
cwtl
and
insb
leave
loop
rcrb
xchg
shll
mov
cltd
and
xchg
aad
jno
jbe
fs
imul
ret
cmp
cmp
xchg
xchg
pop
outsb
dec
clc
xchg
jle
lea
arpl
sub
dec
imul
pop
sbb
mov
jns
scas
mov
imul
xor
inc
ss
jmp
xchg
sti
dec
test
dec
add
lock
inc
inc
jle
pop
or
stos
lret
xchg
pushf
sbbl
adc
out
aam
jae
mov
jne
add
fidivrs
xchg
testl
jmp
and
sub
mov
add
xor
insl
adc
xor
pop
into
fwait
out
sbb
mov
test
and
ja
inc
adc
xor
mov
jne
cmpsb
and
jp
xor
add
pop
sbb
adc
idivl
mov
imul
into
sub
mov
std
cltd
mov
inc
jg
sub
sbb
fisttpl
xchg
pop
push
sbb
xchg
mov
inc
in
outsl
loope
test
in
mull
test
in
stos
test
push
out
fadds
or
das
aas
daa
inc
js
stos
cwtl
rcrl
mov
in
lahf
lret
ret
add
add
mov
in
sbb
mov
stc
jbe
jg
psllw
lods
lods
sub
add
mov
sub
ja
or
test
push
cli
adc
mov
popw
int
xchg
aaa
pop
fs
xor
mov
jns
push
add
pop
rol
cmpsl
fcoml
dec
xchg
dec
or
sub
xchg
mov
mov
xor
pop
adc
mov
dec
fcom
ficompl
xchg
pop
cmp
cmp
inc
mov
lock
jnp
xchg
add
lret
push
subl
out
gs
or
scas
nop
xorb
pop
mov
jl
sbb
dec
out
mov
xchg
push
sub
mov
adc
or
push
cmp
fcompl
xor
clc
int3
aad
add
dec
int3
xor
mov
fcoms
fcomp
cwtl
sub
cmp
and
mov
jnp
jecxz
push
pop
pop
cmpsb
outsb
lret
divb
jg
inc
mov
xchg
xchg
adc
and
mov
incl
iret
and
test
fucomp
cmp
inc
pop
push
jmp
cmp
push
call
inc
mov
out
les
fs
test
aaa
pop
inc
loopne
cmp
jae
sub
fs
ds
aam
sbbb
mov
pop
test
mov
push
sbb
push
je
mov
sbb
nop
mov
into
ret
adc
xchg
cmpsl
sub
xlat
test
pop
movsl
aas
pushf
adc
dec
adc
ja
mov
jns
mov
mov
push
jae
rorl
repnz
std
mov
int3
xchg
repnz
xchg
push
das
cmp
loope
nop
mov
mov
sub
add
test
mov
push
jae
xlat
jnp,pt
movsb
pusha
cs
mov
and
inc
ljmp
iret
adc
cld
incl
jl
push
xor
mov
gs
repnz
add
outsb
adc
cltd
push
dec
je
add
aas
mov
adcl
pushf
mov
adc
cmp
popa
incb
jle
jno
cltd
clc
cmp
int3
sub
ja
dec
xchg
inc
ficoms
jge
scas
sbb
xorb
ja
ds
sti
cld
adc
scas
mov
sbb
mov
adc
idiv
ret
es
xchg
sbb
add
hlt
out
ret
mov
inc
lds
test
gs
jae
jae
fcomps
cmp
arpl
mov
mov
mov
push
adc
int
sbb
sub
out
cmp
bnd
jb
adc
mov
ret
shll
or
in
iret
ficomps
idiv
std
dec
scas
lahf
jbe
jno
enter
or
jg
cmp
push
jl
pop
add
int
cmp
out
into
cmp
gs
shlb
roll
cmp
aas
mov
and
shll
jl
xchg
int
xchg
push
loopne
xchg
inc
fmull
imul
or
xchg
push
mov
negl
mov
and
lods
add
fistl
imul
adc
pop
inc
xor
cld
dec
in
mov
dec
or
inc
adcl
es
les
or
fcompl
jle
sbb
inc
and
aad
insl
cmp
push
fnop
movsb
jecxz
xor
pop
and
in
stos
pop
sub
pushf
out
fwait
out
or
adc
mov
push
bound
fistpll
dec
mov
cmp
jecxz
shlb
pop
xorl
sub
stos
xchg
repz
fwait
ja
sahf
enter
jno
arpl
lcall
mov
sbb
mov
mov
pop
inc
or
push
add
data16
dec
adc
jmp
je
imul
mov
rcl
xchg
adc
jge
dec
shrb
icebp
ret
xor
movl
test
dec
mov
vorpd
mov
lcall
cmp
inc
mov
clc
cmp
add
sub
xchg
int3
inc
stc
cmp
or
xchg
and
mov
es
ss
and
movsb
inc
cmp
es
add
fsubrl
push
sarl
fiadds
lret
add
mov
dec
push
stc
cltd
xor
or
shl
faddl
mov
aas
mov
inc
push
pop
data16
xor
cmp
shl
insb
daa
jnp
mov
cmpsb
popa
lret
call
pop
dec
mov
add
fwait
lock
das
adc
fwait
loope
js
test
clc
out
incl
xchg
dec
scas
or
mov
jp
mov
mov
sbb
outsl
pop
mov
cltd
mov
and
push
jmp
sub
pop
push
xchg
test
sbb
mov
aam
fdivrl
arpl
movsl
adc
mov
out
xchg
push
add
jecxz
popa
jnp
lods
jnp
and
push
andb
aad
call
enter
insl
push
insl
sar
jecxz
test
shll
jbe
setle
jne
jno
movsl
jo
mov
xor
push
pushf
push
pop
xchg
mov
int
dec
add
movd
add
inc
mov
enter
sub
popf
lods
shll
dec
sahf
or
cmp
pushf
jg
les
adc
invd
jp
mov
sbb
dec
ds
cwtl
mov
popa
loopne
pop
xchg
loopne
gs
movsb
xor
dec
push
mov
test
ret
xor
pop
rcr
into
movsl
or
aad
cmpb
xchg
orb
fmuls
add
cltd
xchg
into
ret
fisubrs
pop
lahf
mov
imul
fistpl
pushf
xor
and
xchg
out
orb
inc
mov
or
cmc
lods
popf
ss
add
pop
ret
pop
cmp
out
in
insl
addl
lods
push
mov
ss
mov
in
adc
cmp
add
out
movsb
or
into
jb
jmp
call
pop
js
int
or
jne
cmp
lcall
pop
jp
bound
mov
loope
in
cwtl
in
jl,pt
in
les
sbb
popf
sub
jnp
insb
sti
inc
or
jnp
pop
cmp
xlat
jle
sbb
fmul
shrl
imul
fs
dec
clc
data16
mov
xor
test
jmp
aad
out
xor
lret
jns
test
adc
lods
imul
push
push
mov
or
push
add
aad
cmc
pop
orps
push
daa
mov
loop
lcall
stc
push
stc
cmp
push
loope
xchg
sub
cmp
adc
mov
mov
clc
aad
xor
push
mov
xlat
mov
dec
push
jg
pop
lock
mov
int
and
adcl
push
and
lea
add
inc
pop
testl
mov
adc
lock
lahf
repz
add
arpl
mov
mov
adc
or
sub
fisttps
pushf
pop
jmp
jg
out
sti
arpl
std
cmp
adc
hlt
int3
mov
mov
and
out
xchg
jae
xchg
push
icebp
xchg
or
pop
mov
dec
notb
mov
mov
xor
int3
sub
ds
icebp
lods
sub
lds
jle
cmp
dec
ds
clc
bound
sbb
or
inc
inc
add
mov
repz
sub
stc
sti
pop
aad
pop
lods
sahf
sti
jbe
lds
add
popa
mov
out
repz
or
mov
pop
add
es
mov
pop
mov
jb
xor
mov
les
dec
xchg
mov
js
ljmp
mov
std
dec
call
push
mov
inc
lds
ret
jp
inc
enter
cs
dec
dec
mov
ss
and
cmpsl
jl
xchg
mov
loop
mov
sub
movsb
xor
lock
nop
jmp
jmp
adc
dec
cli
xor
shll
fmull
xchg
jbe
or
xchg
push
andb
sbb
sbb
jno
and
jp
sbb
sbb
jge
sub
icebp
aam
adcb
insl
repnz
mov
jge
mov
ret
sti
ss
xor
xlat
ret
mov
push
jo
aas
out
add
ds
jmp
cs
mov
and
mov
cmp
mov
xor
mov
mov
outsb
in
aam
xor
mov
repz
cmp
rcrb
cmpsl
dec
clc
data16
in
xchg
cmp
ds
jg
int3
inc
add
popf
mov
call
pop
adc
ds
lock
xchg
mov
dec
and
cld
nop
bnd
sbb
xchg
out
je
cmp
add
and
cmp
addb
xchg
pop
xchg
jle
imul
pop
neg
aas
push
sub
enter
sbb
clc
sbb
repz
insb
push
shll
movsb
push
mov
jg
jns
stc
scas
add
mov
arpl
loopne
pusha
add
inc
push
or
xchg
pusha
test
int3
cmp
cmp
adc
out
adc
cwtl
inc
mov
inc
lcall
push
xchg
mov
decb
jno
cmpsl
sbbl
out
push
idivl
mov
jmp
leave
sbb
mov
push
add
lret
pusha
out
pusha
imul
popf
scas
repnz
cmp
lods
mov
adc
jae
push
mov
movsb
mov
icebp
out
test
push
mov
rcrb
outsb
call
int3
push
cwtl
icebp
in
repnz
sarl
push
mov
push
cmpsb
mov
iret
pop
xlat
ret
jg
aad
push
xchg
out
lret
jns
int
sbb
xchg
mov
stos
and
push
in
or
pusha
push
incl
std
adc
movsl
subl
sbb
xchg
jb
das
pop
inc
bound
repnz
sbb
icebp
outsl
adc
sub
int3
sub
dec
add
pop
repnz
jno
pop
cmpb
add
pop
sub
lods
cmp
dec
mov
outsl
mov
adc
inc
push
push
cmp
xor
cmp
add
dec
scas
rcrl
push
in
pop
jbe
scas
addl
adc
push
pop
int
or
aas
sahf
daa
cli
lods
inc
fsubrl
cmp
call
add
subb
in
add
sub
in
gs
mov
jns
in
dec
adc
in
mov
adc
leave
lods
clc
adc
pusha
mov
mov
cmpsl
jbe
push
inc
sbb
or
std
shl
xor
and
cld
orl
decl
xor
fsubr
push
imul
cmp
inc
sub
hlt
add
repz
cmpsl
pop
xor
clc
xor
out
mov
call
insb
push
cwtl
clc
mov
and
loop
outsl
dec
enter
xlat
movsb
lret
dec
shlb
xor
movntq
jle
incl
jae
xchg
and
jno
jl
pusha
jecxz
sub
xor
and
add
in
mov
push
pop
push
aam
pop
pop
lcall
xchg
pop
mov
std
fmull
and
movsl
daa
inc
push
ja
and
cmp
inc
dec
out
ja
cs
mov
out
and
cmp
or
cmp
jb
cltd
in
out
icebp
add
push
inc
icebp
fnsave
divb
mov
js
in
jmp
add
dec
imulb
jecxz
cmp
jmp
scas
mov
ja
test
inc
jb
sbb
daa
je
aas
cmp
sub
mov
cmp
inc
cwtl
cmp
lahf
decb
loop
mov
mov
int
mov
mov
test
mov
loop
sub
mov
jo
pusha
xor
adc
cmp
iret
fists
ficoms
pop
xor
sbb
sbb
mov
jmp
cmp
sub
and
mov
or
lret
pop
scas
push
jl
xchg
mov
pusha
movsl
cli
movsb
push
aam
out
mov
js
stc
faddl
pop
mov
add
es
cmc
cmp
cmpsb
loopne
movl
lock
lock
xor
mov
cli
xor
outsl
fisttps
ds
jbe
dec
faddl
sbb
ljmp
xchg
mov
not
lea
rclb
mov
movsb
jmp
negb
enter
lahf
f2xm1
inc
in
ret
loopne
add
push
stos
imul
and
frstor
cmp
adc
push
aas
pop
pop
sti
frstor
cmpsb
cli
pop
fisubrl
xor
stos
lods
aaa
pop
das
mov
push
ds
adc
xchg
in
gs
mov
je
push
fs
push
cmpsb
jecxz
sbb
imul
jge
or
dec
les
xchg
and
or
mulb
adc
imul
and
js
adc
xchg
xor
stc
or
pusha
mov
cld
sahf
dec
fisttpll
imul
aad
jae
fistpl
xchg
push
jne
mov
inc
and
mov
call
test
aas
dec
xchg
rcll
or
jmp
stc
and
sbb
lods
adc
jmp
sub
daa
add
iret
sub
stc
ret
add
xchg
pusha
lret
imul
xchg
inc
lcall
stos
mov
xor
jne
inc
lea
dec
xlat
mov
pusha
mov
ss
aad
xchg
push
fisttpl
pushf
repnz
push
push
jnp
filds
sahf
popa
addb
test
cli
jmp
dec
shlb
out
push
xor
es
cmp
or
inc
outsb
jo
xchg
mov
fnstenv
shl
lret
add
jle
sbb
jbe
mov
sti
and
mov
int
xchg
test
test
mull
jmp
jae
je
pop
and
add
dec
notl
jmp
iret
roll
jns
mov
lcall
push
or
les
out
enter
cli
pusha
xor
in
cs
insl
cmp
sub
jbe
mov
add
fcmovnbe
or
mov
mov
pusha
add
xchg
cltd
inc
mov
mov
mov
push
xchg
das
cwtl
push
loope
ficoml
xor
cld
inc
jo
ds
dec
sti
outsb
add
dec
movl
mov
shll
imul
cltd
hlt
push
xchg
mov
xchg
test
orl
imull
push
into
filds
test
int3
jns
xchg
jb
dec
out
sub
xor
push
sbb
loopne
pop
repnz
int
test
xor
push
daa
cmp
jmp
sarb
cld
loope
mov
xchg
ljmp
lret
mov
rolb
out
jmp
es
stos
sbb
test
or
imul
mov
adc
sbb
leave
push
xor
mov
aas
dec
add
mov
pop
loop
mov
xor
inc
push
push
lcall
enter
gs
cmp
fists
dec
mov
jae
adc
push
dec
es
ret
mov
ret
nop
xor
hlt
fldcw
inc
or
notl
rcl
cmp
in
pop
ss
enter
stos
lea
push
nop
or
dec
out
pop
repz
pop
inc
mov
inc
inc
stos
imul
add
addb
out
cwtl
mov
dec
inc
repz
mov
js
jecxz
bound
cmc
in
jp
gs
ljmp
jns
aam
xor
xor
pushf
push
imul
jnp
shlb
loop
inc
xchg
mov
adc
fs
or
ror
call
jge
cld
popa
sbb
push
dec
into
jp
ret
jne
pop
lahf
call
sbb
jecxz
push
mov
cmp
add
out
fmulp
pop
pop
sti
xor
add
addl
xlat
test
fxch
or
enter
xor
cmc
iret
outsb
aas
lock
mov
cwtl
subl
imul
repz
bound
es
jp
mov
adc
pop
push
pop
dec
push
aam
test
mov
fildll
dec
push
xchg
sbb
outsl
sbb
jo
dec
sbb
fdiv
outsb
or
das
cli
filds
ss
ds
mov
mov
fs
cltd
mov
movsb
imulb
sarb
sbb
dec
cmp
mov
xor
xchg
xor
and
sahf
les
notl
rorb
sbb
xchg
add
jge
data16
inc
into
and
xchg
mov
adc
dec
negb
ss
add
mov
scas
clc
sbb
jg
push
sbb
dec
addl
and
addr16
mov
sti
loopne
mov
pushf
outsl
fnstsw
sbb
mov
loope
fs
shll
inc
pushl
xor
out
sub
sub
sbbl
aam
xchg
mov
fisubs
add
sarl
jbe
push
int3
sub
imul
aad
push
cltd
adc
roll
and
adc
fldenv
cmp
cmc
sar
das
push
rorb
in
mov
call
sub
and
loopne
mov
data16
fdivs
leave
and
mov
mov
sbb
jle,pn
js
push
xlat
lcall
cwtl
fsubr
loop
pop
mov
jl
and
leave
sbb
clc
sbb
addr16
lcall
scas
inc
mov
cs
jp
mov
dec
xchg
and
adc
inc
mov
cmp
pushl
leave
and
xchg
push
es
test
jge
mov
sarb
cmp
icebp
shll
adc
fwait
sub
insb
sarl
cmpsl
decl
mov
lea
ljmp
aas
icebp
arpl
xor
loopne
call
repz
mov
mov
popf
push
cmpsb
jo
add
pop
jl
sahf
jno
xor
int3
testb
mov
pop
jbe
sbb
cmp
repz
pop
insl
sub
loopne
imul
push
fildll
lods
and
add
insl
shlb
je
imulb
inc
add
mov
push
or
pop
jno
repnz
mov
push
andl
lods
sub
sub
insl
xchg
daa
dec
loop
pop
dec
or
xchg
dec
movsl
sbb
inc
es
popf
cmp
cmp
cs
lock
add
xorl
dec
jge
fldt
add
bound
lods
movsb
les
pop
cwtl
push
cmp
push
leave
pop
push
call
testl
lods
jmp
enter
and
call
and
dec
xor
fidivs
or
cs
negb
push
insb
jne
cmp
cmp
fsubr
cs
push
dec
inc
mov
in
ljmp
cmp
mov
dec
sub
repz
jno
roll
in
data16
push
int3
dec
iret
jns
scas
or
outsl
jecxz
mov
in
or
popa
cmp
or
out
mov
jp
dec
fucomip
xor
xor
rorb
push
stc
das
int3
mov
jge
sahf
add
sar
pop
sbb
mov
xchg
lods
incb
jmp
jns
aaa
push
xor
dec
mov
mov
or
dec
dec
or
lcall
sbb
test
mov
repz
scas
adc
sub
mov
js
movsl
aaa
out
movsl
mov
arpl
inc
outsl
dec
jecxz
sub
fistpl
jecxz
and
cli
inc
sarl
mov
jmp
push
test
fsubrl
int
popa
xor
xchg
jmp
xor
shll
loope
pop
cmpsb
shrb
dec
jle
inc
fucomip
push
mov
aad
loopne
fs
lahf
outsl
xor
cmp
sub
jb
adc
push
xchg
xchg
sbb
cli
mov
mov
div
ror
gs
rcrl
repnz
add
mov
daa
adc
mov
and
cmpsb
sbb
aas
push
aaa
mov
jg
xor
push
and
insl
loope
fnstsw
add
push
push
inc
and
icebp
jo
jne
and
sbb
and
inc
fcoml
inc
jle
jmp
add
dec
out
adc
rclb
hlt
jecxz
dec
push
ljmp
pop
pop
and
jle
repnz
push
mov
pop
cmp
and
in
imul
or
lock
aas
jmp
cmp
fnstsw
adc
xchg
adc
or
loopne
jnp
cwtl
xor
jo
int3
fimuls
hlt
dec
fsubr
ja
fisttpl
sub
inc
xchg
and
xchg
leave
js
sub
pop
and
push
stc
mov
fiadds
cmpsb
lds
lahf
movsl
cmp
outsb
mov
or
adc
rclb
pop
ret
dec
xor
inc
xchg
mov
inc
mov
jb
and
aas
lret
pushf
shlb
mov
repz
inc
push
das
scas
sub
mov
xchg
adc
test
lahf
adc
dec
add
aad
or
jg
popf
mov
in
aad
inc
xchg
out
and
loopne
int3
jns
cmp
and
sbb
outsl
sti
ret
imul
imul
inc
push
std
xchg
pop
repnz
pop
in
xlat
add
dec
mov
jbe
std
sub
je
out
mov
xlat
icebp
negb
es
push
push
push
dec
lods
mov
sub
jns
in
shll
ret
fisubrl
pop
xchg
sbb
repnz
pop
mov
xchg
mov
mov
mov
divb
loopne
loopne
addr16
cmp
mov
icebp
xchg
push
sbb
imul
pop
in
rcrl
mov
adc
mov
sub
jl
sbbb
push
loop
dec
xor
fildl
sbb
enter
pop
sub
pop
loopne
mov
fsts
mov
aad
and
test
push
push
cmp
pop
inc
sub
dec
cmpsl
mov
xor
fiadds
mov
rcrl
jno
sbb
repz
ss
or
rcrb
xchg
lahf
and
icebp
inc
nop
inc
or
sbb
addl
orb
arpl
stos
fwait
adc
xor
imul
arpl
scas
pusha
icebp
push
das
aaa
test
dec
pop
enter
std
test
xor
lods
jmp
sub
pop
push
sub
call
xchg
xchg
popa
rcl
shll
add
mov
and
sbb
outsl
aas
mov
add
sbb
jns
jmp
bound
sub
hlt
mov
jecxz
cmp
shlb
jecxz
push
xor
jae
xor
fwait
out
cmpsb
inc
test
repz
nop
and
fwait
shl
arpl
push
mov
lret
repnz
loope
mov
pop
clc
and
stos
aam
jecxz
adc
adc
cmp
std
push
sub
xchg
ret
loopne
mov
push
xchg
jle
icebp
out
scas
xchg
sub
stos
ljmp
jg
inc
addr16
insl
mov
or
xchg
pop
xor
xchg
adc
ja
lahf
pushf
int3
dec
in
lods
mov
test
mov
icebp
nop
mov
dec
inc
xor
cmp
jl
mov
ja
cs
in
xchg
dec
adc
fwait
push
faddp
test
loope
clc
xchg
lret
jo
ljmp
push
aad
int3
mov
clc
imul
jmp
pop
test
push
cmpsb
fcoms
pop
add
mov
or
scas
xor
mov
cmp
pop
cmp
out
adc
jae
test
xor
mov
sti
or
add
sbb
xor
adc
shl
cwtl
lods
call
test
out
int
daa
xorb
xorb
in
pop
insl
leave
mov
fiadds
pop
sbb
dec
fidivrl
out
icebp
jne
and
icebp
inc
inc
mov
orb
fstpt
jle
ret
adc
sbb
ffreep
test
pushf
lea
leave
test
imull
cmc
shll
cmpsl
gs
dec
ret
dec
test
jp
push
fucomp
cmpl
sub
ss
movsb
sub
cld
jge
jmp
inc
lods
in
push
mov
jge
es
or
int
mov
cmp
add
push
xor
call
and
add
rcrb
sub
hlt
inc
jmp
sarl
inc
jb
sub
out
pop
cmp
push
hlt
outsb
dec
adc
test
mov
dec
neg
out
out
cmp
mov
movsl
cmc
jge
in
jns
rolb
cmp
in
add
jle
pushl
and
add
in
pop
int
xchg
xchg
lcall
sub
fmull
pushf
addr16
xor
in
sbb
mov
sbb
xchg
mov
push
js
test
mov
jmp
int3
xchg
or
in
fsubrs
push
cltd
inc
test
lret
mov
mov
and
xor
fcmovu
lcall
addr16
data16
shr
push
push
test
cmc
fmul
ret
cltd
adc
add
or
xchg
mov
xchg
orb
mov
jo
inc
pop
add
jae
rcrl
push
push
imul
pop
jmp
fisttpl
divb
jo
sbb
mov
xlat
cld
mov
jecxz
cmpsb
scas
xor
sub
mov
sar
pop
sub
rcrb
js
jne
xchg
xlat
mov
jmp
lds
test
sbb
fidivs
sbb
inc
lcall
xor
add
js
xor
daa
mov
push
pushf
std
call
les
sti
idivb
xor
inc
aaa
dec
mov
or
rcll
jnp
lods
dec
stc
push
imul
stos
std
xchg
mov
daa
punpckhwd
testb
loop
push
movsl
adc
or
cmp
jbe
mov
xchg
dec
cmp
dec
mov
loope
add
and
ret
mov
jo
stc
loop
adc
std
lock
in
int3
xchg
out
div
or
pop
push
push
jns
mov
pop
sub
pop
pusha
imul
pop
or
rorl
stos
popa
mov
test
inc
jmp
lret
fdivrs
ret
pop
enter
dec
popa
jnp
loope
test
xchg
dec
enter
pushf
or
data16
pop
mov
xchg
pop
cmp
mov
pop
enter
sbb
sub
call
sub
test
mov
adc
pop
and
mov
es
call
push
rorb
mov
adc
mov
into
ss
or
pop
pushf
arpl
bound
cli
mov
mov
adc
and
insb
add
jg
xchg
daa
pop
lret
xor
loop
outsb
mov
mov
js
mov
jo
fcomps
lret
frstor
insl
jmp
xorl
inc
addb
pop
push
arpl
mov
xor
push
push
cmc
js
xor
cmpsl
cmp
dec
sub
jbe
xor
mov
dec
xchg
hlt
jo
push
or
cmc
mov
iret
inc
repz
iret
mov
dec
fsubrl
iret
push
mov
out
mov
sub
sub
popf
xchg
jne
xchg
pop
cs
ficoms
test
mov
loopne
fs
loop
shlb
vmovq
jl
sbb
inc
out
scas
rolb
xor
rol
push
int
jl
push
inc
cmp
inc
and
out
inc
inc
xchg
mov
gs
sbb
inc
repnz
adc
mov
cmp
ret
movsl
mov
cld
add
scas
dec
mov
cmp
inc
pusha
addl
push
mov
mulb
jo
xor
filds
xor
xlat
cmp
jo
sbb
add
in
rolb
test
jge
mov
mov
aam
das
cmpsb
xchg
mov
and
imulb
ja
mov
fisttpll
int
mov
rolb
lcall
int3
adc
adc
jp
leave
int3
pusha
popa
or
add
sarb
push
and
dec
scas
mov
and
mov
push
loop
in
inc
lock
push
jle
fs
push
push
mov
shlb
push
pextrw
push
sub
mov
mov
pop
mov
add
aad
in
push
xor
xor
mov
mov
lret
sbb
dec
and
cli
sbb
fwait
je
add
sub
insb
and
xor
test
out
mov
sti
inc
jnp
pop
bound
cmp
dec
mov
fwait
pop
dec
gs
ja
fldt
fcomps
fdivrs
outsl
sub
sub
push
xchg
int
pop
out
add
dec
or
dec
xchg
and
sub
popf
pop
jnp
aam
and
jmp
mov
shrl
xor
insl
sqrtps
addr16
pushf
subb
in
cmc
cld
int3
pop
pop
in
xchg
movsl
xor
and
arpl
xor
add
repnz
dec
xorl
cs
add
dec
pop
iret
jne
test
repnz
je
add
pushf
xchg
and
shll
fwait
sbb
frstor
xchg
repz
mov
stos
push
sbb
in
lods
sbbb
mov
inc
sub
pop
sti
aas
sti
add
daa
cmp
pop
shr
insl
out
rclb
fwait
shlb
packssdw
cmpsb
pop
stos
ficoml
dec
add
sbb
call
mov
push
sbb
andl
hlt
mov
sub
sti
int3
mov
sahf
les
xchg
shl
std
out
push
mov
fisttpll
xchg
mov
shl
inc
xor
lret
jnp
or
xor
or
mov
jnp
shlb
call
xor
pop
mov
mov
mov
sbb
jae
push
arpl
lret
push
scas
fwait
pop
mov
mov
sbb
cs
loop
cli
fs
lds
pop
inc
js
testl
nop
mov
int3
sbb
sbb
push
aad
sbb
sbb
pop
pop
shlb
xor
jge
inc
or
pop
push
pop
ret
and
aaa
sti
cs
dec
outsb
inc
and
adc
mov
pop
adc
push
adc
enter
mov
loop
in
mov
stc
aaa
test
shlb
jl
scas
ja
mov
cmp
mov
scas
lds
repnz
enter
stos
adc
hlt
xchg
les
enterw
mov
or
fcmovbe
jo
mov
add
popf
xlat
fdiv
shlb
imul
outsl
mov
loop
cmpsl
ss
add
aaa
pop
lds
or
cmpsl
idivl
ret
scas
dec
pusha
and
data16
jno
jmp
jl
add
cmp
mov
outsl
lock
je
cmpsb
and
sub
sbbl
push
mov
mov
das
in
jo
xor
movsl
mov
test
lcall
sbb
mov
ds
jo
and
push
mov
add
adc
cltd
pop
lods
cmp
test
mov
lret
addr16
mov
rorb
jns
adcb
xor
ret
movsb
les
sti
sbb
push
mov
stc
imul
insl
and
pushf
in
lods
fildl
jbe
das
adc
mov
dec
mov
and
or
jno
int
add
stc
push
and
loop
xchg
cmp
dec
or
loopne
and
mov
ficoms
repz
inc
lock
rcrl
cmpsl
insb
inc
and
out
ficomps
stos
loop
idiv
xor
pop
lret
aas
xor
outsl
ror
shll
sbb
inc
jae
loope
jo
aam
into
aas
xchg
cld
ret
xchg
nop
and
aad
fdivrs
fsts
aaa
or
insb
add
rcll
xor
pop
xchg
test
in
push
es
into
outsb
sbb
icebp
mov
fisttpl
mov
xchg
into
cltd
add
pop
test
es
cmp
pusha
mov
adc
subb
jmp
cmp
les
adc
dec
xor
push
xchg
out
mov
pop
mov
mov
or
int3
aad
sbb
add
and
inc
mov
xchg
jecxz
shrl
mov
cmp
in
inc
pushf
aad
mov
dec
ljmp
mov
je
test
pop
andb
fdivp
sub
adc
cli
sbb
in
xchg
ljmp
push
je
movsb
addr16
sub
icebp
or
into
jmp
inc
mov
leave
fdivs
jecxz
push
mov
and
inc
test
mov
push
insl
movb
sbb
or
nop
cld
lods
add
vpxor
call
sub
cmpsl
outsb
jmp
arpl
out
mov
fsubrs
jns
mov
shlb
mov
sbb
test
bound
jno
adc
popl
mov
and
pop
and
je
lods
adc
enter
adc
gs
insb
ficoml
sti
inc
inc
std
xchg
idivl
ffreep
sub
xor
shl
sbb
stos
jno
stos
scas
call
divl
cmp
lret
sub
dec
addb
sbb
outsb
fldenv
or
fsubs
jo
in
scas
pop
xchg
jae
and
mov
xchg
inc
jae
mov
popa
pushf
pop
je
mov
popa
in
mov
or
stos
pop
fsub
outsl
pop
std
push
push
xchg
mov
jnp
notl
and
out
adc
test
mov
pop
test
and
inc
and
insl
pop
xchg
and
dec
xor
mov
aam
mov
xor
add
clc
pop
or
add
mov
sahf
mov
jno
in
cmc
push
sub
push
stos
dec
std
jae
cs
jne
cmp
mov
adc
arpl
arpl
jb
test
adc
ljmp
add
mov
mov
mov
xchg
ss
inc
mov
jo
mov
out
lods
aam
and
cmp
dec
in
or
dec
popa
add
les
loope
test
mov
cmp
insb
cmpsb
aaa
jmp
xor
add
stos
sub
lea
loopne
cwtl
mov
js
dec
xor
out
dec
dec
js
add
xchg
push
xchg
mov
pushf
cli
push
loope
pop
jbe
xor
and
test
sub
test
ror
stos
add
cmp
shll
cmc
xlat
mov
leave
xlat
shll
ss
nop
cltd
dec
push
mov
add
ret
dec
insl
or
ss
inc
add
leave
mov
push
mov
inc
xor
dec
stc
cmpsb
mov
lcall
add
cmpl
adc
mov
fildl
insl
push
nop
mov
jbe
inc
sbb
outsb
fmull
mov
lods
hlt
mov
orb
mov
ficomps
pop
decl
inc
lret
lret
dec
jae
mov
movsl
lret
sbb
stos
xchg
out
rol
lock
ffree
ljmp
mov
sub
adc
hlt
push
clc
sub
shrb
xor
loopne
icebp
dec
test
jmp
xchg
and
push
rcl
movsl
pushf
cld
mov
ds
pop
pop
popl
aad
shl
push
or
push
js
imul
iret
cs
lods
dec
cmp
jbe
pop
push
cmovbe
fs
xor
rclb
in
mov
lods
fsts
jmp
push
dec
jge
adc
out
aam
mov
std
ljmp
pushf
out
movsb
mov
repnz
hlt
dec
aad
fwait
in
movsb
jle
test
mov
adc
jp
cmp
or
js
adc
push
aas
xor
inc
and
mov
mov
mov
daa
sbb
or
push
outsb
cmp
xchg
test
mov
addl
inc
and
in
pop
pop
xchg
jle
pop
cs
or
sbb
out
stc
addl
ficoms
insb
daa
or
in
or
sub
cwtl
dec
fldcw
inc
cmpl
ljmp
sbb
ja
xor
js
xlat
fisubrs
push
jo
call
push
mov
sti
imul
sar
or
pushf
jnp
adc
daa
sub
mov
imul
mov
outsl
push
pop
pop
hlt
xor
mov
les
negl
mov
adc
jle
pop
xor
mov
jb
mov
lret
jb
fwait
pop
fldl
cmp
scas
lcall
mov
fnsave
mov
add
test
sub
cs
cmpsl
push
lock
cmpl
cli
add
jp
hlt
cmp
dec
adc
sub
push
adc
popf
jmp
int
lock
iret
ss
cmc
dec
cmp
es
lods
or
in
cmp
adc
mov
idivl
loope
lcall
jne
jge
stos
jns
test
lcall
div
dec
mov
dec
mov
mov
fs
movsl
lds
lds
or
push
or
imulb
out
xchg
sbb
cmpsl
stc
add
mov
dec
sahf
test
fs
jb
add
jnp
cmp
lods
mov
cld
xor
mov
test
inc
jb
xlat
out
fidivl
test
push
dec
mov
and
ret
xorl
adc
xchg
pusha
xchg
sbbl
es
addr16
idivl
push
jecxz
dec
xchg
mov
jo
jmp
cmc
mov
stos
inc
inc
jae
in
mov
shrb
and
cli
push
fists
in
mov
mov
adc
inc
ljmp
push
push
cmpsb
cmpsb
sub
movsb
mov
into
loope
adc
cmp
jns
mov
out
jmp
cmp
xchg
pop
test
outsb
in
or
rol
or
xlat
test
xor
cmpl
xchg
shll
mov
inc
mov
nop
aas
inc
push
push
shrl
add
out
mov
iret
cs
mov
add
sub
and
push
insb
in
cmp
sbb
imul
mov
in
out
mov
sbb
movsl
and
push
mov
and
cmp
mov
jp
or
into
in
sbb
scas
mov
cmp
movsb
jecxz
mov
jecxz
push
xchg
cli
push
cmpsl
mov
jae
push
and
cmp
aaa
subb
ret
push
aam
mov
and
cmp
xchg
xor
xchg
xchg
popf
rcr
iret
inc
push
int3
ja
testb
aas
and
scas
dec
fistpll
jae
dec
add
or
loope
imul
inc
xchg
sarb
ss
js
enter
lods
jae
pop
cmc
jb
and
das
das
dec
sarl
mov
mov
insl
sarl
imul
aas
ret
add
mov
push
pusha
repz
loope
adc
ret
jge
sub
mov
int3
add
clc
cmp
iret
fildl
and
js
inc
push
inc
inc
pop
dec
aas
push
inc
insb
xchg
sub
data16
mov
aas
dec
pop
xor
cmp
sub
and
xchg
adc
repnz
and
lds
jg
push
cmp
gs
xchg
insb
test
lcall
insb
adc
mulb
scas
adc
sbb
jge
sub
insl
test
cmp
mov
sub
sub
cmpl
mov
ljmp
or
sub
leave
out
or
cmp
or
push
cmc
sub
dec
sub
lods
aam
mov
out
mov
mov
int3
sbb
xor
repnz
std
std
xor
cmc
xchg
outsb
lds
push
xlat
jg
mov
and
pusha
sahf
shll
sbb
sbb
sahf
arpl
aaa
sbb
pushf
je
adc
sbb
sub
addr16
cmp
vrcpss
leave
stc
fwait
gs
stos
or
rcr
cld
scas
daa
jo
stc
lret
es
nop
pop
rol
pop
push
push
aas
out
loopne
mov
pusha
not
jns
push
test
imul
pop
outsl
loop
or
mov
pusha
and
callw
repnz
jne
lahf
sbb
push
adc
ret
mov
fistpll
stos
popf
fmuls
and
push
sbb
sbb
int
lcall
pushf
xchg
hlt
mov
dec
pushf
inc
movsb
cltd
lock
pop
and
lods
dec
cmpl
mov
pop
pop
jnp
sti
xchg
fucompp
cmp
out
gs
pop
adc
sub
std
jmp
mov
and
js
and
push
std
jnp
and
jg
fwait
sub
or
ljmp
aam
movsb
stc
or
or
test
into
stos
mov
jmp
hlt
jle
fwait
xor
dec
add
push
fstps
lods
hlt
push
leave
lret
aad
pusha
inc
mov
push
leave
out
sub
mov
aam
in
pop
push
xchg
out
cmpsl
mov
mov
insb
add
mov
cmp
and
cmp
inc
push
xchg
nop
push
sti
dec
ja
popf
push
and
insl
mov
int
mov
mov
addr16
stc
outsl
pop
mov
shrl
mov
pop
daa
pop
js
jne
je
mov
push
sub
sub
rcl
sbb
sbb
arpl
xchg
fistps
sub
negb
mov
xchg
popa
sbb
std
mov
or
outsb
sbb
mov
in
dec
shll
pop
jo
cmp
in
jl
mov
adc
push
fs
ss
lahf
pop
dec
cwtl
ds
rcl
fiaddl
dec
inc
push
test
lock
mov
ss
clc
aam
mov
mov
cmp
xchg
push
into
cmp
loop
sub
push
sar
cmp
and
push
pop
popa
repz
xchg
push
sarl
jge
das
cmp
cld
mov
outsb
scas
xrelease
mov
sub
cld
cmp
rcr
imul
inc
sbb
mov
mov
mov
xor
ja
adcb
mov
push
cmpsl
pop
mov
and
push
hlt
pop
xchg
mov
sub
stos
orb
add
into
cmp
mov
pusha
xchg
push
aas
pop
scas
jl
scas
jo
push
jl
xlat
popa
inc
jne
shrb
xchg
frstor
dec
xor
sbb
cmc
and
sbbb
nop
pop
inc
divl
int
enter
add
xchg
mov
xchg
mov
bound
cwtl
mov
shlb
lret
mov
inc
loope
push
in
addb
movlps
inc
dec
rcrb
push
or
cli
arpl
xchg
dec
insb
les
dec
or
dec
lret
adc
sbb
mov
mov
mov
dec
rclb
add
inc
mov
push
push
stos
sub
dec
jnp
jns
jb
push
mov
and
fildl
pop
test
mov
scas
mov
mov
hlt
dec
std
inc
sbb
cmp
push
jae
jbe
adc
daa
xor
mov
mov
mov
std
ror
push
leave
fdivrl
lret
rolb
add
aam
xchg
outsl
adc
lahf
sti
sub
std
adc
xchg
pop
ret
test
jnp
push
dec
pushf
ja
pop
mov
lock
xchg
mov
addl
subl
popa
adc
int
insb
fs
aas
pop
xchg
pop
jnp
xchg
inc
aaa
in
adc
cmp
mov
mulb
je
addl
xchg
add
cmp
add
fbstp
xor
pop
or
adc
sub
fstp
addr16
inc
add
in
int3
and
cmp
pusha
mov
xchg
mov
ja
aam
jl
pop
push
mov
stc
sub
xchg
lea
stos
leave
pop
leave
jecxz
push
pop
movsl
mov
or
dec
push
sub
pop
push
pushf
jne
push
cli
pop
lock
jmp
mov
jbe
mov
sub
dec
push
jle
push
xlat
mov
jno
xchg
outsb
scas
movsl
sub
dec
push
mov
sysret
fisttpll
add
cmpsl
sbb
fs
inc
aad
lcall
loopne
sub
fisttps
mov
mov
jnp
xor
iret
xor
jle
mov
mov
xchg
fs
sub
add
cmp
sub
mov
inc
inc
xchg
notb
out
pop
movl
and
in
inc
shll
in
shlb
push
jg
add
cvtps2pi
fstl
scas
bound
or
fldcw
dec
mov
pushf
loope
ficompl
scas
fcmovnbe
rcll
sub
les
mov
frstor
push
addr16
sub
mov
inc
std
fwait
xor
insl
imul
xchg
inc
ja
mov
mov
sub
or
push
js
sub
gs
lds
ret
divb
insb
test
push
in
pop
jnp
lcall
adc
cs
push
fisttpl
jnp
les
xchg
lds
pusha
pop
nop
inc
lods
sahf
jns
gs
xor
push
mov
inc
sub
sbb
insl
jno
xchg
cmp
xor
clc
pop
sbb
adc
mov
lret
pop
je
or
les
fldl
bound
and
dec
adc
sbb
or
pop
jae
xor
and
loope
adcb
int3
loopne
repz
push
inc
dec
jb
cmpsl
cmpsb
into
adc
arpl
hlt
jg
ss
inc
nop
add
cmpsb
jnp
xchg
loop
and
iret
bound
rclb
mov
sbb
aam
cmpb
xor
and
cmc
sub
imul
rcll
jo
push
insb
lods
scas
xor
pop
xchg
jo
outsl
cmp
push
xchg
jge
data16
xchg
lret
insl
ljmp
jmp
jnp
or
sbb
and
ret
outsl
push
scas
pop
add
popa
pop
fucomip
in
popf
mov
popa
push
xchg
cs
loope
loope
adcb
add
dec
dec
imul
mov
imul
pop
lods
sub
mov
add
notl
inc
cmp
xchg
ljmp
mov
loop
je
out
out
ss
and
xchg
test
notl
sbb
sub
mov
jnp
fwait
and
mov
andl
hlt
fwait
decb
cmpsb
lods
gs
sbb
insl
mov
xor
push
stos
mov
or
dec
mov
fdivr
cmpsl
push
fsubrs
stos
fbld
nop
mov
push
aam
push
fidivrs
popf
ret
lods
in
push
inc
lock
push
adc
icebp
mov
push
js
les
lea
call
pop
mov
mov
fcompl
aas
mov
lock
xor
pop
shl
pop
aad
jne
addr16
sub
dec
inc
mov
push
adc
push
cmp
xor
fs
cmp
rcr
lcall
jnp
add
insl
mov
inc
push
mov
fidivs
inc
add
int
fimuls
push
ror
mov
fldenv
int
push
xor
pop
in
mov
lds
adc
pop
xchg
add
or
pop
aad
or
into
jecxz
mov
sbb
gs
lret
push
mov
and
lods
hlt
jns
fdivrl
les
mov
es
push
call
outsl
andb
sub
mov
lahf
xchg
and
pop
mov
sub
push
insl
mov
and
out
inc
xlat
fisubs
mov
orl
push
and
sub
aam
mov
inc
mov
daa
jl
cmp
int
stc
sbb
mov
lret
fildl
inc
xchg
aaa
sub
inc
cld
mov
clc
fwait
jno
mov
inc
jge
int3
xchg
inc
and
xor
faddl
push
add
icebp
cmp
mov
mov
stos
mov
or
mov
loopne
and
pushf
add
ljmp
push
mov
cmp
and
mov
and
test
inc
push
dec
stc
jl
out
cmp
cmpsl
jo
repnz
add
out
xchg
pop
enter
push
popa
or
cmp
lea
mov
adc
test
xor
mov
xchg
jle
outsl
mov
sahf
test
imul
test
dec
add
enter
fsub
mov
mov
xchg
out
sahf
mov
sarl
sbb
mov
test
jae
pop
xor
cmpsl
sar
adc
jns
shlb
js
pop
ficoms
repz
push
lret
int3
sub
pushf
loopne
and
jns
dec
stc
aam
inc
mov
test
stc
pop
outsb
cmp
cld
roll
sub
jl
aaa
xchg
pop
sub
mov
xor
psraw
adc
repnz
fistps
jae
inc
jl
aam
xor
push
imul
popf
adc
nop
out
and
jg
popa
sbb
jnp
dec
lahf
fs
clc
ja
lods
icebp
icebp
stc
add
pusha
cmpsl
or
cmp
lahf
xor
shlb
scas
cmpsl
adc
fwait
cwtl
mov
rcrl
lahf
xchg
icebp
lock
cmp
sbb
pop
in
arpl
insb
push
mov
mov
mov
inc
aas
les
movsl
push
or
dec
cmpsb
insl
add
addb
adc
out
push
lods
add
lret
pop
popl
icebp
std
jmp
in
pop
lods
cs
ret
lds
std
and
pop
or
and
fdivr
sbb
out
inc
cmpb
int3
mov
cmp
inc
xchg
mov
aam
sub
stos
pop
loope
shl
mov
repnz
mov
push
fadds
adc
cmp
out
cltd
add
bound
sbb
mov
xor
in
dec
mov
mov
mov
aam
out
pop
push
fnstsw
adc
push
cmp
addb
jl
sbb
mov
xor
je
aaa
xchg
mov
pushf
fsubl
repnz
xchg
nop
xor
lahf
jo
mov
test
xor
movsb
jnp
dec
mov
stos
push
dec
pop
xchg
push
cld
push
sub
sbb
sbbl
out
cmp
leave
shl
in
into
push
mov
sub
sub
ret
cmp
lahf
sahf
sbb
sbb
rcrb
pusha
lds
xor
adcl
sti
lods
sbbb
and
call
bound
test
xor
test
adc
cmp
pop
call
adc
fidivs
popf
aad
push
xchg
scas
test
inc
sbb
xor
and
mov
movsb
jmp
movsb
inc
adc
or
xlat
js
rorl
mov
sbb
mov
test
leave
lea
and
je
mov
mov
mov
push
inc
loope
fxam
mov
call
inc
divb
cld
mov
lcall
and
cmc
mov
push
mov
outsl
hlt
lea
inc
xlat
test
es
out
rol
sub
out
fs
jge
push
mov
inc
decb
bnd
adc
and
mov
in
mov
xchg
jmp
in
add
int
imul
aad
adcl
lahf
roll
mov
inc
cmp
mov
push
jp
les
push
mov
xor
cmpsl
push
dec
xlat
int3
mov
sbb
mov
mov
mov
aas
inc
mov
stos
rcll
lahf
test
xchg
mov
fcoml
push
bound
xor
xchg
out
inc
insb
test
sahf
pop
sub
ds
scas
jge
xor
jb
mov
cmpsl
mov
ja
adc
sub
psllw
ja
insl
nop
pop
cmp
or
mov
ret
sti
sbb
pop
leave
mov
inc
dec
push
subl
xchg
xlat
mov
dec
lea
cmp
push
call
sbb
lods
lods
mov
adc
jns
loop
inc
fstpt
push
pusha
pop
outsb
inc
sub
loopne
mov
addr16
dec
adc
jecxz
test
int
mov
fadds
das
xlat
inc
repz
hlt
addb
fmull
vpunpcklqdq
in
push
jne
mov
mov
rorl
mov
and
pusha
mov
cwtl
lods
clc
popa
mov
mov
lods
or
or
addl
adc
cmp
add
es
insb
dec
mov
leave
out
test
ds
dec
loopne
xchg
sbb
dec
ja
fsubl
sub
push
call
scas
aam
jmp
and
xor
dec
cmpsb
iret
cli
test
jnp
mov
push
es
add
dec
je
cld
push
jmp
jmp
divb
sub
popa
xor
mov
stos
fbstp
outsb
and
sti
inc
add
mov
jo
xchg
xor
lret
fnsave
cmpb
add
mov
mov
cmp
lret
ljmp
push
mov
test
inc
jp
call
add
xchg
ss
mov
mov
fcoml
dec
pusha
sub
lock
stos
add
add
pushf
out
jne
pop
gs
add
fidivs
insb
or
addl
fists
dec
ja
aaa
ret
push
adc
mov
or
pusha
xor
fisubrs
sub
dec
mov
sbb
xor
sbb
test
or
addr16
jg
mov
push
das
idivl
popa
popf
push
loopne
push
xor
pop
repz
out
stc
fdivrs
jb
repz
sub
lret
xchg
shlb
cmc
call
jmp
and
roll
ret
cmc
xchg
sub
xor
xor
jl
mov
ljmp
pop
jmp
in
sbb
mov
jg
mov
mov
out
mov
in
or
in
xchg
push
jp
into
and
mov
dec
xlat
mov
sarl
jecxz
mov
shrl
cwtl
sub
aas
pop
jmp
scas
in
xchg
out
pop
out
xchg
cltd
sub
sub
repz
daa
dec
and
xor
inc
sahf
or
or
stc
sbb
pop
adc
mov
adc
jge
pop
sahf
dec
or
and
xchg
aad
sub
movsl
out
lods
cmp
lret
dec
sbb
popf
fisttpll
ljmp
mov
cmp
jae
mov
jne
jle
adc
aaa
std
xchg
sbb
cmpsb
stos
rorb
sti
xchg
std
cmpsl
popf
mov
mov
pushf
xchg
adc
push
cs
and
gs
dec
xor
insl
adc
mov
mov
notl
lods
cmp
outsb
je
pop
push
adc
xchg
mov
add
and
mov
fwait
mov
aaa
push
and
jo
rorl
cli
fwait
int3
in
mov
sub
mov
and
shl
in
popa
dec
je
mov
and
enter
fsubr
js
scas
rcr
stos
sub
jge
pop
jno
andb
adc
adc
sbb
adc
jo
cwtl
into
rcr
pop
pusha
sar
rcr
shlb
xchg
cmp
addr16
mov
mov
lods
push
repz
std
push
pop
sbb
mov
cmpsb
push
cltd
xor
cmpl
ja
mov
test
sbb
mov
jne
hlt
xchg
pop
jle
and
dec
jae
fisttps
mov
lds
dec
mov
in
int
aam
rorl
mov
dec
rorb
adc
rcr
rorb
mov
sbb
lods
cwtl
stos
and
fcom
inc
or
stos
push
shl
sub
shrb
jbe
ret
lods
add
stos
arpl
insb
jl
mov
jnp
adc
dec
mull
mov
arpl
icebp
fstps
in
fisttpl
jmp
sbb
not
jno
cmp
xor
or
ret
testl
das
mov
call
test
or
data16
bound
out
mov
adc
jno
daa
incb
push
icebp
fndisi(8087
cmpsb
ljmp
repnz
xchg
pop
dec
stc
and
bound
pop
aaa
std
cmp
adc
mov
jle
xchg
aaa
mov
cmp
roll
jmp
mov
adc
lock
xchg
into
loopne
fimuls
dec
xor
xchg
fistpll
scas
iret
fsubr
scas
dec
pusha
pop
pop
pop
test
lock
enter
js
cmp
jae
mov
roll
cmc
cwtl
push
mov
ds
add
push
xlat
pop
call
inc
in
pop
sub
jecxz
mov
les
pop
lds
aad
dec
dec
fucomip
data16
jecxz
scas
or
nop
mov
pusha
fsts
mov
out
fistpll
inc
movb
sub
nop
or
lock
inc
out
mov
sbbl
jbe
sub
inc
idivl
lds
cmp
sti
push
mov
inc
pop
rolb
xchg
push
xchg
divl
dec
shl
inc
push
sarl
enter
jo
sti
ret
mov
sbb
dec
ficoml
cli
push
push
rolb
add
fistps
fwait
xchg
sub
push
aaa
bound
lcall
or
mov
jb
jo
xor
out
dec
mull
xor
pop
dec
insb
sbb
jecxz
pop
adc
mov
mov
je
xor
push
jno
ja
int3
daa
adc
push
lret
sarb
ret
incl
inc
inc
ja
in
or
popf
dec
mov
into
mov
cmp
inc
cmp
pop
jmp
pop
les
mov
cmp
xor
pop
mov
sbb
mov
push
mov
dec
movsb
cmpl
sub
icebp
popa
or
movsb
sti
into
dec
cltd
xor
mov
out
mov
and
dec
mov
dec
jne
sbb
rorl
cmp
jne
push
cmp
dec
sub
clc
pop
jp
mov
fwait
pop
xchg
fistpll
jb
or
sbb
sub
in
xor
xchg
ss
xchg
aaa
mov
call
into
fidivs
jg
mov
mov
cmp
and
push
stos
jns
pop
stos
lcall
add
cltd
jmp
mov
je
mov
xchg
aad
lea
sbb
lods
inc
fs
push
sbb
xor
in
repnz
enter
pop
addr16
pushl
xchg
mov
mov
xchg
stc
xchg
subb
pop
arpl
dec
fs
dec
cmp
stos
mov
mov
in
repnz
outsl
cltd
repnz
rcrb
push
movsl
sub
sub
or
into
fidivs
inc
dec
movl
cmp
cli
mov
je
sbb
enter
sbb
cmc
mov
jo
xchg
dec
and
or
push
sub
xor
stos
xchg
adc
call
lcall
sub
rorb
sub
sbb
sub
fs
xlat
insl
shl
jo
jecxz
stos
xor
mov
in
dec
jp
clc
mov
in
xchg
sub
add
jge
rorl
xchg
fcompl
adc
imul
and
jo
mov
or
fmull
jmp
lahf
out
jnp
sbb
add
loopne
cmp
sbb
push
mov
pushf
rcrb
mov
sti
inc
add
jl
das
dec
push
jae
cld
xor
cmp
lods
inc
cmp
mov
inc
and
arpl
pop
adc
add
inc
sub
push
xor
andb
fldenv
mov
insl
scas
jae
jno
lods
dec
push
mov
cmp
lea
out
push
dec
loopne
sub
lods
addb
cmp
mov
xchg
stos
jg
mov
cmc
lcall
inc
xor
mov
dec
vcomiss
gs
mov
ret
add
adc
movsb
lds
jne
out
inc
cmp
nop
outsb
bound
xor
mov
call
dec
pop
mov
into
xor
pop
or
lock
nop
push
sbb
test
test
adc
sti
loop
push
push
mov
or
jns
rorl
jg
shlb
add
sahf
insb
mov
and
lret
push
movsl
xor
or
jmp
cmp
xor
mov
int3
xchg
adc
insb
inc
cld
jnp
mov
repz
mov
mov
loope
enter
leave
fildll
scas
lcall
add
in
lahf
pusha
faddp
bound
loop
pop
movsb
sarl
movsl
scas
clc
add
mov
insb
ljmp
mov
adc
ds
call
std
xlat
sahf
jb
inc
mov
push
cmc
adc
sub
jno
loop
dec
in
les
mov
jbe
jmp
xchg
pop
mull
mov
add
mov
lret
push
dec
or
dec
xor
imul
adc
inc
mov
test
testb
jns
add
pop
nop
adcb
test
push
jl
or
jl
in
dec
dec
xor
lods
pushf
push
jbe
push
push
xchg
cmpsb
pop
lcall
ret
mov
stc
jno
mov
and
loope
xor
dec
lret
push
cmp
push
sbb
fistpl
gs
leave
dec
iret
in
out
stos
cmpsb
sbb
fdivr
iret
daa
jo
mov
sbb
aas
movl
lock
xchg
jae
xlat
mov
mov
inc
das
mov
fcom
icebp
test
cs
clc
sbb
loopne
cmp
les
out
das
mov
adc
push
cmpsl
iret
jb
pop
mov
jl
subl
add
aad
xchg
cmp
sahf
xor
out
ja
push
mov
adc
xlat
leave
mov
jp
jmp
shl
rcll
fwait
xor
xor
cmp
faddl
mov
sub
push
lods
sbb
xchg
out
cs
xchg
push
xlat
pop
sub
int3
cmp
mov
mov
jl
xor
pop
test
add
imul
lods
idivl
mov
loope
pop
pop
je
in
enter
aad
xor
mov
sub
xchg
out
push
icebp
mull
outsb
pop
mov
inc
mov
xor
push
or
add
jae
test
paddb
inc
call
adc
xor
lret
daa
jmp
mov
push
scas
mov
and
inc
jns
lods
gs
outsb
add
in
into
jge
bound
dec
je
or
sahf
stos
push
popa
push
aad
mov
dec
push
cwtl
inc
pop
nop
repz
popf
adc
dec
sbb
pop
sbb
xor
jnp
adc
add
cmc
bound
fsubrp
adc
inc
xor
adc
movsl
idivb
mov
fsubl
pop
push
out
mov
clc
add
and
imul
notl
dec
adc
dec
shll
inc
cwtl
dec
sub
icebp
aam
pushf
test
pop
mov
cs
cmc
aaa
or
and
inc
mov
push
sbb
xor
mov
sub
mov
daa
add
testl
xchg
rclb
xchg
xchg
xorl
or
bound
mov
insl
int3
jl
push
scas
push
and
cltd
mov
hlt
icebp
xor
ss
js
daa
xchg
pop
dec
ja
sub
dec
pusha
fbstp
ss
or
fmul
push
sar
cltd
push
xor
dec
mov
pusha
jno
loop
loopne
mov
fs
pop
mov
pop
sub
jge
lock
jl
xchg
sbb
fimull
mov
xchg
jbe
pop
dec
rcll
xor
jmp
ja
scas
jecxz
sub
mov
aaa
mov
lahf
pop
mov
popf
xlat
out
fidivrl
stc
pop
rolb
pop
push
fmull
inc
jmp
add
inc
adc
dec
xchg
xchg
xchg
mov
xchg
xor
imul
xchg
sub
pop
push
test
inc
sub
mov
add
loopne
aam
cmpsl
int3
insl
xchg
js
cmpsl
sbb
lods
ret
dec
mov
je
out
cmc
je
jno
je
jne
test
aaa
je
push
pop
ret
ljmp
push
jp
cmp
mov
shlb
adc
movl
push
inc
imull
or
xchg
jecxz
shll
cmp
bound
adc
icebp
dec
pop
fwait
and
in
xchg
pop
andb
test
addl
xlat
mov
call
inc
cmp
sti
cld
rcl
xchg
adc
mov
repz
or
aad
mov
imul
jo
jg
lret
and
sub
and
inc
call
cwtl
clc
movsb
inc
rolb
mov
mov
adc
cmp
jnp
scas
out
test
je
jge
dec
iret
jo
mov
sbb
cmp
pop
xchg
cwtl
jnp
cli
movsl
cmp
cmp
std
out
adc
sbb
stc
mov
push
jns
aas
jmp
mov
pushf
subb
pop
push
jae
jl
sub
adc
mov
cmp
mov
iret
pop
dec
testl
sub
pusha
sub
test
addb
arpl
add
ret
insb
pop
lods
sub
xor
adc
sub
imul
jmp
add
jp
jg
inc
out
cwtl
inc
test
xchg
prefetch
aam
xchg
ja
sub
imul
xchg
nop
sub
adc
lahf
adc
lahf
cmpl
cmp
les
cmp
fisubrl
xor
test
loopne
mov
das
es
insl
cltd
mov
jbe
xor
fldt
das
sbb
cwtl
out
dec
dec
xor
mov
xor
and
scas
and
jecxz
sub
add
in
lods
loopne
loop
das
xchg
and
aaa
jecxz
cltd
push
mov
out
aam
xlat
fs
push
pop
or
cmc
icebp
adc
cmp
sbb
test
loope
in
aad
rdpmc
lods
loopne
xchg
imulb
cmp
push
into
push
or
pop
xchg
xor
mov
add
cltd
inc
jmp
inc
lcall
xchg
jno
orb
enter
pop
adc
stc
jp
rorb
add
jae
pop
lock
lods
jecxz
add
nop
mov
dec
mov
imul
add
mov
imul
xchg
and
jnp
ret
xor
inc
jno
mov
push
pop
enter
dec
repnz
sbb
pusha
arpl
js
orb
lds
jno
test
in
xchg
add
jno
push
push
ds
fcmovnb
jnp
jne
cmp
fucom
mov
aas
aas
or
mov
rcl
mov
pop
sub
mov
stos
and
shlb
mov
or
and
adc
add
testb
les
inc
and
jg
push
scas
jb
popa
jmp
sub
mov
repnz
jb
jmp
test
inc
xor
sub
pop
sbb
xchg
pop
pushf
jge
sahf
cmp
xchg
es
rcr
mov
int3
cltd
mov
aad
xchg
jb
cmp
mov
cmp
cltd
insb
cmpl
inc
ret
or
dec
arpl
xor
sub
ret
pop
loop
leave
test
ja
cmp
xchg
test
push
ret
cmpsb
and
and
and
inc
adc
lretw
fdivl
movsl
inc
sbb
and
scas
out
xor
lret
je
inc
js
cmp
test
add
lods
pop
sbb
or
jp
imul
lods
jb
sub
sub
mov
jb
in
sbb
inc
inc
test
push
xchg
daa
xchg
xchg
lods
xlat
iret
lret
add
test
adc
xlat
xlat
int3
cmp
js
in
mov
add
add
pop
daa
sub
mov
sub
movsl
mov
fimull
xchg
ret
mov
pop
push
ds
hlt
sub
push
pop
adc
jae
mov
fbstp
dec
pop
arpl
cmp
jnp
dec
adc
es
push
jge
pop
cmp
insb
in
mov
push
jp
jbe
adc
mov
mov
xlat
xor
rclb
pushf
pop
sti
jb
in
mov
or
jbe
mov
pop
jae
leave
xor
push
inc
jo
neg
mov
cltd
inc
dec
inc
cmpsb
in
push
aad
dec
sbb
inc
mov
mov
push
pop
cltd
cmp
push
or
dec
arpl
ret
stc
jb
insb
xor
in
mov
arpl
test
shl
xor
inc
sub
mov
ret
sub
sbb
jle
les
pop
stos
cmc
inc
ret
sahf
adc
push
mov
nop
arpl
data16
std
dec
ja
push
in
imul
xor
sub
leave
jo
mov
jne
repz
lock
fistpll
scas
inc
jmp
fiaddl
fyl2x
or
xor
and
es
mov
mov
xlat
or
pop
cmc
push
xor
lret
xchg
loop
icebp
mov
pop
cmpsb
mov
outsb
iret
imul
lods
mov
and
or
mov
pop
xor
adc
insl
adc
jmp
inc
out
cmp
mov
pusha
arpl
xor
add
movsb
mov
push
gs
jp
xchg
mov
jg
je
sub
xchg
pop
outsl
std
in
idiv
pop
inc
insb
inc
xor
ret
shlb
and
lods
and
in
mov
sub
dec
dec
sbb
inc
adc
por
or
in
jns
mov
out
cli
ret
jge
dec
mov
and
xlat
jbe
xrelease
jg
outsb
cmp
dec
xor
add
sbb
cmp
pop
mov
aam
push
inc
aaa
mov
or
mov
mov
jae
lret
or
and
rclb
sub
pop
dec
mov
pusha
imul
xor
cmp
dec
adc
inc
gs
push
loopne
gs
pushf
daa
cmpsl
add
ret
ds
mov
cmpsl
mov
mov
mov
sarl
pop
xlat
cmpb
lock
aam
cmc
fs
cmp
sub
lds
xchg
les
fnstsw
push
sahf
xchg
out
call
stc
xor
or
jle
fsubrs
int
int
scas
je
icebp
sub
in
pop
jae
test
and
stc
or
in
jns
and
mov
push
and
popa
stos
dec
aaa
xchg
cmpsb
jns
mov
outsb
inc
imul
stos
fnsave
jnp
sti
in
imul
cld
adc
mov
fs
daa
jle
ret
out
insl
scas
imul
mov
jbe
add
adc
shll
cs
sti
fwait
xchg
dec
inc
fs
dec
push
or
sahf
fwait
pusha
scas
cli
inc
push
mov
orb
pop
mov
mov
xchg
fs
mov
cmp
xchg
push
pop
xchg
ds
xchg
out
jmp
int3
andb
lret
sbb
jo
sahf
dec
imul
test
jle
sbb
pop
stc
test
xchg
xchg
add
sbb
push
mov
add
pop
icebp
cli
pop
mov
lahf
inc
or
popf
mov
or
cmp
shlb
xor
cmovns
jmp
xchg
arpl
mov
outsb
add
push
enter
ror
out
cmc
adc
in
or
cmpsl
mov
fldl
mov
push
insb
mov
lea
in
movsb
xchg
loop
mov
jno
mov
in
cmp
adc
lock
in
or
cmpsb
mov
js
jbe
sbb
cmc
xchg
stc
movsl
xor
mov
into
sbb
les
or
out
mov
loope
mov
sub
pushf
push
lret
test
sub
xor
mov
ret
outsb
and
xchg
outsb
inc
mov
mov
imul
lcall
popa
sub
mov
dec
cmp
divb
pop
cmp
decb
mov
dec
sub
loope
jo
inc
mov
push
test
rcll
fwait
pop
fdivrs
dec
loop
addr16
mov
sti
and
iret
test
into
xchg
rolb
icebp
mov
pop
mov
jecxz
mov
inc
xchg
in
sbb
fistpl
ja
adc
adc
jl
sub
imul
movsl
hlt
test
push
popa
or
or
cltd
xor
lods
test
enter
inc
xchg
lods
shl
mov
sub
fnstcw
jecxz
movsl
out
fs
gs
in
aam
adc
idiv
xchg
adc
and
roll
stos
in
pop
popa
icebp
test
lds
cwtl
dec
and
inc
loope
sbb
add
je
idivl
lea
and
inc
mov
push
pop
and
mov
jl
dec
lods
sbb
push
xor
jle
sbb
push
mov
in
cmpsl
insl
scas
adc
imul
fisubl
arpl
add
shr
jmp
jmp
or
lods
cmpsl
push
sbb
fnstenvs
pop
loopne
sub
sub
and
mov
inc
icebp
adc
push
push
call
mov
lret
dec
mov
iret
xor
fwait
popa
push
xchg
add
mov
sbb
sbb
and
push
xor
or
outsl
hlt
xchg
dec
or
lcall
frstor
pop
mov
sahf
sub
add
test
mov
mov
movsl
adc
pop
xchg
fwait
push
mov
pop
mov
nop
loopne
xchg
nop
inc
mov
movsb
loope
add
add
imul
cmp
out
or
mov
inc
jg
push
leave
sub
test
add
cmp
xchg
mov
daa
movsb
mov
int
push
icebp
inc
mov
cli
xchg
or
inc
in
stos
daa
mov
fidivl
std
scas
lods
std
into
inc
push
mov
cmp
divb
leave
xor
hlt
push
popa
dec
xor
push
sub
loop
pop
jns
andb
fdivrs
mov
jg
andl
mov
jae
daa
adcb
sub
movl
jno
or
js
fstpt
enter
sub
addr16
sbb
ret
je
hlt
stc
insb
imul
or
out
and
mov
and
jmp
aaa
dec
mov
push
ror
in
gs
inc
hlt
pop
icebp
push
fs
sahf
in
loopne
xor
out
inc
outsb
jl
rolb
dec
mov
mov
test
fstpl
in
repz
adc
arpl
fs
mov
int
xchg
xor
push
mov
jo
test
or
jmp
frstor
pop
xchg
rorb
xor
shrl
incl
mov
and
cmp
push
inc
cltd
mov
lods
pop
adc
xchg
adc
aaa
loope
dec
mov
aam
jmp
test
scas
sub
jge
bswap
or
pop
dec
sub
mov
stos
jbe
mov
inc
mov
push
jmp
call
cli
dec
test
pop
pop
cmp
inc
cmp
ja
jnp
adc
nop
jl
scas
or
idivl
lret
inc
push
inc
adc
jg
enter
leave
inc
sar
and
push
in
pop
push
push
repz
jb
adcl
int3
push
cmp
push
push
ljmp
outsl
popa
sub
mov
mov
mov
pop
or
cmp
es
jle
push
pop
sbb
test
jb
lods
stos
sarl
jae
sarl
ret
leave
pop
push
mov
popa
rep
mov
sahf
cmpsb
pop
cmc
ss
add
sarl
scas
cmc
cmpsl
arpl
push
lret
mov
or
mov
negb
repz
pop
cmpsb
fimull
negb
pop
mov
lret
inc
ret
addr16
push
fadd
xchg
sarl
lods
sbb
or
cmp
jbe
add
sbb
sahf
add
and
into
sub
mov
dec
push
pop
fisubrl
cmp
andl
fdiv
dec
mov
popa
xchg
jbe
push
cmpsl
xor
imul
icebp
hlt
xor
je
mov
ds
push
push
xchg
mov
daa
pop
mov
lcall
sub
cli
gs
mov
scas
mov
imul
sbb
orb
sub
sub
pusha
sbb
pop
sub
mov
xor
jb
ret
mov
hlt
jns
mov
rcrb
cmp
mov
lock
pop
imul
mov
pop
or
call
or
pop
lods
mov
jbe
pusha
mov
fnstcw
in
fistps
xor
lret
lds
add
pop
inc
ljmp
xchg
ret
pop
std
jmp
dec
repz
mov
push
stc
adc
cwtl
pop
jnp
jae
mov
cs
ficompl
xchg
mov
rclb
push
data16
mov
int
inc
popa
divl
loopne
fs
pop
sub
add
jae
add
daa
push
push
rcrl
jp
adc
int3
xchg
or
cli
lds
adc
aas
mov
test
fwait
or
lea
xor
divb
lods
sub
or
shrl
imul
push
sbb
mov
adcl
subb
testl
jns,pt
frstor
rorl
cmp
shrl
cli
or
xor
testl
mov
xchg
xor
aaa
popf
or
xor
insl
out
mov
out
add
lds
ret
in
dec
xor
and
aam
pop
loop
mov
iret
jne
inc
sti
lahf
imul
daa
adc
repnz
and
enter
ret
ds
icebp
dec
dec
iret
jns
fwait
and
fcompl
mov
in
jle
insl
cs
movsl
cmp
inc
jne
xchg
jl
adc
sbbl
cs
push
std
into
inc
repz
outsb
mov
pop
lods
mov
pop
stos
cmp
xchg
mov
xchg
ja
gs
pop
push
sti
movsb
cld
lret
push
pop
js
xor
gs
sub
mov
mov
in
int3
hlt
movsl
and
mov
pop
inc
aam
mulb
data16
test
subb
cs
gs
push
nop
ja
scas
jmp
mov
addr16
mov
shrl
or
imul
dec
arpl
adc
and
sub
sbb
in
jmp
incl
mov
sub
push
fnstenv
mov
jge
js
or
int
cli
mov
roll
js
lret
scas
mov
xlat
imul
insl
lcall
scas
ds
int3
cmpsl
movsl
clc
pushf
xchg
dec
lahf
aaa
test
in
sar
xor
outsl
adc
jg
mov
adc
fisubs
adc
sbb
mov
hlt
cmc
pop
std
jle
inc
aaa
ljmp
addr16
repnz
jo
decb
aam
jae
scas
xor
int
add
sti
scas
dec
inc
mov
lea
cmp
and
jnp
mov
push
and
ret
lds
cwtl
mov
ljmp
loop
lock
mov
add
xlat
cs
sub
lahf
and
jbe
aam
and
mov
and
inc
or
mov
je
es
xchg
xchg
jecxz
gs
or
xor
popf
dec
cli
lock
fldcw
sbb
and
fisubs
cwtl
data16
mov
add
mov
imul
addr16
push
cli
es
pop
cmp
outsl
pop
push
and
cmc
push
xorb
aam
dec
dec
lods
cmp
pop
jo
popa
inc
call
add
or
xchg
rcr
ficoms
dec
insb
pusha
and
pusha
int
sub
lods
ret
mov
or
or
fwait
cmc
mov
dec
add
push
pop
jbe
cmp
sbb
and
jb
cmp
xchg
bound
loopne
aaa
test
dec
xor
dec
loope
xchg
sbb
jecxz
dec
mov
push
push
mov
xchg
inc
aaa
add
sub
mov
sarl
sbbb
lods
fst
xchg
mov
or
mov
adc
sahf
inc
mov
addr16
cwtl
mov
cltd
push
or
inc
es
nop
xchg
or
mov
out
xlat
adc
push
adc
in
test
xor
aas
movsb
in
mov
lds
out
adc
insl
cmp
lock
jecxz
xchg
lods
in
cmp
rcrb
jo
or
js
mov
xorb
and
cmc
mov
mov
mov
daa
inc
cmp
lret
hlt
mov
and
push
adc
mov
enter
pushf
insb
sbb
clc
push
and
faddp
push
dec
jg
es
stc
xchg
push
push
dec
fisubs
jl
fwait
sub
pop
add
dec
fcoml
jecxz
pop
cmpsb
jno,pn
dec
subb
push
addl
das
push
pop
inc
mov
fld
ja
sub
cmp
ljmp
adc
daa
cmp
sub
sub
sbb
scas
xorb
push
pop
sbb
xor
xchg
rcrb
std
fsubrl
inc
lea
mov
scas
sti
fildll
pop
adc
sahf
mov
pop
movsb
dec
aas
popa
sbb
mov
mov
mov
lahf
or
daa
rcrb
pop
mov
movb
imul
jmp
fsts
jmp
popa
cld
and
dec
cmp
subb
lahf
jbe
pop
enter
mov
xchg
sbb
mov
std
add
es
negb
xor
pop
mov
idivb
aam
push
pop
mov
and
jmp
shr
jge
jnp
cmp
and
aaa
pop
sbb
scas
sbb
les
fwait
inc
xchg
and
inc
loope
addr16
mov
mov
adc
inc
cwtl
dec
loope
jb
jge
xchg
std
fsubrs
inc
sbbl
jo
mov
push
pushf
inc
sub
pop
xchg
imul
push
cli
or
movsb
pop
xor
aas
lret
adc
aad
xor
popa
mov
mov
in
mov
xchg
ljmp
mov
push
cmp
test
xor
pop
adc
enter
sar
repz
xchg
stos
sub
aas
in
pop
in
mov
cmpsb
mov
and
lea
repnz
inc
push
loop
das
adc
jp
hlt
arpl
pop
cmp
mov
sub
jg
add
sub
aad
cmp
add
aaa
sbb
test
jb
sub
clc
push
mov
mov
int
pop
stc
push
adc
jge
xchg
xchg
loope
inc
push
xchg
cs
test
pop
push
pop
imul
adc
dec
adc
add
xor
mov
lahf
push
out
out
icebp
dec
cmp
inc
inc
dec
push
sub
loope
pop
mov
jg
mov
in
js
mov
stos
out
adc
sbb
mov
or
clc
ss
test
sub
insl
sbb
ljmp
add
movsl
test
fidivrs
hlt
data16
sub
cmp
ss
lret
jo
outsl
xchg
mov
iret
popf
fistpll
cli
pop
rolb
les
push
aam
fistl
sbb
sahf
int
inc
pop
cmp
leave
xor
adc
adc
ficoms
inc
bound
fsubl
lcall
inc
jnp
bound
data16
cmp
add
push
pop
xchg
fs
lea
rcl
mov
fbstp
xor
lods
sbb
test
rcl
inc
dec
mov
mov
dec
lcall
ss
nop
movl
orl
mov
mov
jno
pop
test
xlat
arpl
repz
sub
xchg
mov
pop
jge
shll
filds
lods
je
fld1
cmp
mov
nop
int3
and
into
mov
icebp
pop
pop
iret
xor
pop
fisttps
inc
in
ja
push
idivb
daa
leave
push
mov
sar
mov
cwtl
out
sbb
mov
roll
mov
xchg
out
jnp
divl
inc
xchg
ds
test
call
cmpsl
std
cmpsb
stos
mov
dec
mov
fimuls
ljmp
pop
bound
push
inc
je
rcrl
test
sub
sbb
push
xchg
insb
arpl
adc
xchg
rcll
add
dec
xchg
icebp
jnp
jg
shlb
sub
mov
into
stos
jmp
push
cmp
stos
cmp
jp
ffree
sahf
push
mov
mov
sub
js
adc
mov
into
push
cmp
lea
cmp
push
inc
mov
es
mov
add
lods
push
mov
push
lret
adc
push
adc
cld
push
mov
lock
cmc
fstpt
jmp
mov
sub
dec
arpl
pusha
inc
cmp
inc
jno
add
mov
push
filds
xor
mov
cmp
inc
or
xchg
mov
xchg
aam
stos
stc
in
ficompl
xchg
dec
icebp
data16
movsb
dec
pop
jl
inc
test
daa
xlat
jmp
xlat
lods
add
sub
mov
sub
lds
push
jge
cmp
and
in
test
cmpsl
or
xchg
xchg
testb
outsb
lcall
leave
jg
mov
add
pop
outsl
testl
or
arpl
jmp
das
les
loop
ffree
mov
dec
cld
lods
push
push
push
mov
sbb
xorl
cmp
mov
xlat
jl
or
lods
lahf
dec
sub
pushf
fnstenv
inc
xchg
cmp
mov
jp
sub
mov
mov
enter
icebp
pop
jne
inc
leave
fcoms
cmp
lds
mov
je
add
cld
xchg
pop
jnp
mov
and
push
adc
in
fistpl
mov
lods
fsubrs
popa
sahf
mov
adc
scas
sar
cmp
ret
and
mov
fisubs
fistpll
lods
and
cmp
sbb
cli
xor
pop
or
cmp
call
mov
cmpsl
cmp
jno,pt
dec
rol
sbb
inc
add
mov
mov
testl
aam
add
sub
and
jge
mov
dec
xchg
lea
dec
data16
inc
js
enter
repz
fucom
add
xchg
aas
cwtl
outsl
out
xor
push
out
filds
lds
xchg
jo
mov
data16
push
scas
dec
jb
ds
insb
adc
lcall
fs
fcom
mov
nop
cmp
test
ja
scas
pop
mov
sbb
mov
pop
push
inc
cmp
mov
adc
pop
pop
mov
popa
gs
arpl
pop
mov
sbb
int3
cltd
mov
push
cli
scas
ljmp
shr
ljmp
cmp
or
mov
or
clc
divb
add
inc
andb
cmpsb
int3
sub
cmpsb
aaa
nop
fs
cmp
cmc
out
daa
icebp
in
sahf
rcl
add
jecxz
cmp
xor
fldz
sub
arpl
push
fsubs
stos
fdivrl
sub
test
and
in
in
cmpsb
mov
lret
xor
xor
mov
out
sahf
dec
mov
or
mov
mov
xor
scas
inc
in
jns
pop
faddl
push
imul
xor
enter
int3
dec
addl
icebp
jle
and
mov
lds
mov
inc
mov
jl
cmc
mov
fiadds
mov
mov
mov
decl
and
jp
out
pop
sbb
mov
lods
fldt
mov
gs
push
xchg
jle
clc
add
shll
mov
dec
leave
add
xor
jge
into
test
imul
adc
scas
jge
mov
roll
or
jno
xchg
shrb
aam
outsl
add
cld
cmpsl
add
movl
and
add
dec
stos
lahf
cmc
sbb
sbb
inc
jmp
inc
jge
cmpsb
cmp
inc
add
iret
lods
nop
fiaddl
and
cld
pop
push
jcxz
cmp
bnd
jecxz
mov
test
outsl
daa
or
sar
in
xchg
and
fimuls
lods
add
mov
push
mov
mov
ja
cmpsl
mov
jno
push
xor
lea
pop
pop
clc
comiss
aas
icebp
sarl
mov
test
sub
mov
dec
push
jle
divb
mov
add
xchg
push
mov
adc
jno
inc
push
and
fdiv
negb
sti
inc
addr16
ljmp
lods
jo
gs
les
mov
out
xchg
sub
xchg
cmp
cld
mov
ficompl
lahf
jle
and
dec
cmp
mov
cmp
pop
push
sbb
js
dec
pop
mov
xchg
dec
fs
xchg
pop
lret
cmc
push
dec
jmp
and
push
dec
out
fwait
dec
les
mov
dec
lods
mov
sti
test
flds
shrd
insl
mov
cmp
dec
mov
lock
add
adc
push
insb
mov
dec
cli
icebp
adc
jb
stos
outsl
xor
fiadds
dec
mov
sahf
pusha
jns
pop
mov
and
jecxz
lock
cmpsb
fstl
lahf
ja
dec
xor
cmpsb
sbb
mov
xchg
add
lea
test
or
dec
jp
testb
mov
sub
adc
pop
push
xlat
and
push
mov
into
xchg
rorb
pop
jo
fsubp
dec
mov
and
pushf
es
mov
mov
stc
popa
push
sbb
adc
and
ret
shl
or
mov
out
sahf
jnp
push
stos
mov
or
dec
mov
fldln2
lcall
lret
imul
sti
movsl
lods
sbb
ffree
jge
scas
insb
les
imul
pushf
adc
push
jne
stc
mov
add
mov
or
repnz
test
test
xchg
dec
fwait
addb
dec
fidivs
jl
mov
cmp
ret
adc
push
lock
es
xor
or
xor
mov
mov
pusha
testl
cmp
in
and
xor
xchg
test
and
in
dec
add
or
jbe
jno
out
scas
jecxz
xor
mov
adc
sub
rorl
jne
daa
insb
jl
mov
pop
xchg
mulb
mov
ret
cs
call
mov
jp
jl
fiaddl
cld
mov
mov
push
push
cmc
shll
xor
or
gs
clc
mov
cmpsb
xchg
or
pop
or
into
mov
xor
adc
out
fidivrs
in
es
ja
push
jmp
int3
and
push
sahf
out
aad
pop
or
sbb
add
inc
mov
scas
loope
outsb
in
repnz
lods
cli
lahf
scas
in
and
xor
outsb
cmp
cmp
cmpsl
test
push
adc
andb
inc
aas
test
sbb
cmp
leave
inc
ret
test
push
mov
roll
into
in
sahf
mov
jb
jae
adc
jg
push
cs
fxch
mov
sahf
mull
mov
ret
jb
rcll
es
sub
xchg
int3
xor
dec
mov
cmp
jp
inc
stc
and
fiaddl
leave
xor
adc
adc
lahf
in
inc
iret
xchg
push
sbb
mov
inc
mov
and
ljmp
stos
and
push
fisubl
mov
xor
xchg
into
fsubp
dec
enter
sarb
sahf
mov
push
cmpsl
mov
out
je
mov
aam
sub
sbb
adc
xchg
mov
bound
inc
xchg
testb
ds
fcomps
sbb
enter
cltd
or
mov
mov
sub
mov
xchg
popf
cmp
sbb
pop
and
xchg
lcall
pop
pop
sbb
fistps
adc
call
ficompl
loopne
mov
add
das
mov
mov
imul
popf
imul
mov
xor
cmp
jb
fcoml
into
movb
inc
gs
dec
mov
cmp
das
dec
imul
dec
fadds
cld
mov
mov
mov
mov
test
sbb
inc
xchg
dec
outsb
popf
mov
testl
aad
xor
rcrb
shll
dec
repnz
outsb
sahf
or
sti
inc
jecxz
gs
leave
stos
push
pop
cmp
adc
insb
in
push
mov
fmull
ficoms
mov
mov
jp
lds
iret
rcr
fstpl
adcl
jle
xor
pop
pop
das
inc
push
mov
das
mov
imul
rorl
push
aam
xchg
sub
das
mov
iret
test
out
pop
into
jne
or
xor
movsl
adc
loop
scas
xor
fwait
xor
and
push
adc
cmp
cmp
inc
arpl
sbb
xor
imul
mov
test
in
mov
cmp
cmc
lcall
sbbb
movsb
cmp
hlt
outsb
add
mov
ja
stos
fwait
jns
mov
xchg
testb
jns
nop
fildll
push
loop
push
std
sub
nop
adc
repz
jae
dec
lock
int3
xchg
mov
xor
sbb
shl
inc
cmp
call
repz
pop
xor
stos
in
jnp
cmp
jns
cmp
pop
mov
bsr
ss
mov
fldl
and
inc
mov
mov
mov
je
lock
arpl
inc
and
mov
repnz
insb
xchg
pop
popa
mov
ret
add
icebp
in
shll
insb
or
mov
xchg
pusha
mov
cmp
xchg
lret
movsb
js
sti
outsl
inc
inc
int3
pop
xchg
sbb
mov
mov
les
std
cmp
test
ja
mov
or
insl
jo
sub
cs
in
repz
rorb
cmpsb
cwtl
xor
mov
cmp
jns
lods
inc
sahf
push
jne
inc
adc
push
lret
cld
int3
cmp
xor
shrb
repz
pop
jae
loope
or
les
jae
mov
icebp
mov
push
mov
push
pop
jecxz
and
cmp
xor
imulb
and
lea
lret
call
sbb
scas
dec
ds
es
scas
inc
add
mov
push
jbe
idivl
inc
or
sbb
adc
cmp
lahf
sbb
les
mov
xlat
mov
loopne
sub
popa
push
movsl
fdivrs
icebp
es
aad
mov
aas
fldpi
outsl
arpl
or
inc
repz
mov
lock
cmpsb
pop
and
add
rorl
xchg
cli
daa
adc
mov
aaa
mov
dec
bound
sahf
int
xchg
sbb
and
mov
in
sbbb
js
subl
jp
out
divb
loopne
cs
jnp
push
aas
and
adc
aas
movsb
xor
mov
out
adc
cmp
cltd
jae
jne
insb
dec
jle
inc
jns
push
inc
pop
dec
scas
ffree
xlat
int
les
pop
jns
jnp
mov
sub
xchg
cmpsl
shrl
mov
shll
and
adc
add
repnz
or
lods
nop
pop
xchg
add
outsb
arpl
and
inc
mov
pop
or
ja
sub
cld
cmp
add
jg
push
les
jge
sbb
xor
and
lods
push
fisubs
ljmp
icebp
ss
adc
aas
xchg
xchg
cmp
mov
loope
fildll
insb
ja
test
movsb
pop
mov
lcall
adc
dec
mov
fwait
outsl
sub
roll
enter
mov
std
xor
stos
stos
dec
or
popa
pop
std
loopne
add
or
adc
push
sub
bound
and
push
cltd
xor
mov
adc
cld
xchg
inc
imul
int
inc
aas
iret
lds
cmp
or
inc
frstor
jle
jns
xchg
addr16
mulb
cld
jl
std
rorl
mov
daa
fcom
xor
mov
and
inc
fwait
adc
push
jb
mov
pop
pop
loope
lods
pushf
mov
mov
lds
add
lahf
xor
xorl
aas
outsb
sbb
sbb
test
pusha
mov
aas
shrl
xchg
in
lret
xchg
mov
loopne
lret
fwait
push
xor
push
inc
data16
xor
mov
xor
clc
das
mov
movsl
mov
repz
bound
adc
xor
sahf
jb
out
cmpsb
inc
enter
test
loopne
sbb
push
or
shufps
xchg
cmc
movsl
sbb
xchg
into
or
mov
pop
mov
fiadds
cmc
add
outsb
mov
nop
push
sub
cmp
mov
call
jb
add
iret
cwtl
xchg
push
xor
shrl
loop
inc
mov
adc
sbb
rcrl
xor
sub
add
std
sub
dec
std
shr
ret
xchg
lret
ret
push
or
xchg
and
out
mov
jo
adc
incb
lods
cmpsl
ljmp
fdivrs
in
inc
imul
mov
daa
or
xor
loopne
outsb
orl
push
sub
add
std
imul
subl
daa
shll
inc
push
std
int
add
aam
pop
sub
xor
ljmp
aas
gs
cmp
in
cs
leave
or
pop
mov
fdivrp
or
xchg
cltd
push
shll
xchg
or
cmp
mov
mov
and
shrl
push
adc
sbb
mov
fdivr
rcll
into
movsb
and
cmove
xor
sub
xchg
jg
pop
mov
fldcw
adc
adc
add
fcompl
enter
and
jle
add
enter
push
inc
jmp
mov
dec
xor
outsl
enter
dec
mov
sbb
daa
inc
and
xchg
push
push
or
fsts
cwtl
sbb
fisubs
sbb
cli
add
jno
pusha
pop
xchg
pop
stc
jmp
je
push
fldenv
jp
jne
es
aas
xor
sahf
jl
popf
cmpsb
add
xchg
pusha
xor
aaa
scas
lods
sub
pushf
push
hlt
mov
fimull
inc
fwait
sub
mov
orb
jb
inc
loopne
fcomp
inc
orl
sbb
inc
mov
cmp
pop
xchg
or
lea
cmp
or
lret
cmc
imul
clc
mov
pop
outsb
cmp
mov
dec
pop
pop
lret
pop
cli
jg
pop
and
jnp
bound
mov
lea
std
sub
push
pop
sbb
xor
nop
xchg
dec
cmp
jg
popa
cmpsb
mov
fsubp
in
push
bound
mov
test
push
mov
aam
aam
sahf
sbb
div
add
fcoms
xchg
sbb
sub
sti
adc
push
cmp
in
jae
jo
aad
pop
addr16
fbstp
add
loope
sub
cli
loopne
inc
lret
jg
cltd
pop
xchg
and
fst
add
loopne
or
std
inc
js
push
filds
add
inc
iret
dec
lods
sub
mov
pop
mov
jl
cmpsb
loop
bound
movsb
bound
xorb
scas
lock
pushf
outsb
mov
cmc
sbb
sub
movsb
jne
pop
xor
jno
adc
rcrb
xor
xor
push
fimull
in
mov
ficoms
mov
cmp
add
out
add
mov
mov
jae
std
sub
adc
imull
aam
adc
pop
inc
ljmp
mov
lret
jae
arpl
popa
push
jo
push
inc
xor
mov
adcb
xor
xchg
test
xor
or
jecxz
inc
inc
jb
popl
sar
xor
xchg
inc
mov
inc
in
cltd
mov
cmp
call
lock
mov
aam
repz
testb
pop
ja
cmp
pop
aam
pop
cmp
dec
mov
lods
pop
mov
cmp
fisttpll
push
mov
mov
sbb
or
pushf
lret
rorb
xlat
cmp
ja
xor
imul
push
dec
mov
cs
pop
mov
xchg
mov
sbb
xchg
clc
push
push
popf
into
clc
aam
cmp
shll
and
push
jge
ds
inc
mov
xchg
push
lea
leave
add
pop
mov
inc
mov
add
stos
in
stc
mov
aas
cmp
test
jecxz
mov
xlat
push
stc
cmp
out
popa
insb
mov
and
mov
cmp
xchg
add
add
notb
das
pushf
lret
insl
inc
mov
xor
lea
fimull
je
adc
adc
insb
jae
ffree
and
jp
push
out
xor
test
les
pop
hlt
loopne
rclb
push
pusha
js
lock
jmp
inc
cmp
adc
call
lret
addr16
or
out
inc
inc
cmpsb
cwtl
mov
inc
cmpsb
inc
dec
out
adc
xlat
mov
lret
roll
xorb
div
ja
xor
dec
mov
inc
push
xlat
out
pop
jl
outsb
mov
pop
shrl
test
test
rcrb
and
negl
xchg
mov
ja
btrl
add
dec
inc
fld
mov
psubw
lods
pop
mov
in
and
aaa
add
outsb
sahf
mov
loopne
jl
divb
arpl
xor
fisubrl
lret
das
adc
jg
aaa
lret
adc
ficoml
ja
lds
or
mov
push
xchg
mov
in
cmp
xchg
int
pusha
into
arpl
and
fbld
in
dec
sti
enter
push
mov
dec
inc
lret
sti
dec
ja
adc
mov
out
dec
test
cmpsl
lock
popf
loop
sub
mov
inc
inc
push
mov
jmp
sub
mov
std
outsb
adc
jae
rclb
or
std
add
jmp
push
mov
lds
ja
lret
js
jo
adc
sti
lods
mov
jno
shlb
fs
icebp
sbb
jns
and
dec
les
adc
jg
dec
mov
mov
push
jg
ss
shrl
int3
popf
lret
mov
fists
daa
xlat
mov
xor
pop
sub
scas
scas
sub
stos
mov
rolb
fdivp
xchg
push
into
mov
push
mov
sub
popf
push
push
cli
and
scas
call
add
int3
jle
push
popa
stos
jmp
insl
lock
insb
js
cltd
add
lret
mov
dec
mov
dec
mov
push
xchg
or
lahf
mov
cmpsl
pop
mov
movsl
jp
sbbl
fmul
add
mov
add
jmp
sarb
fildl
pop
notrack
loop
cmpsl
jnp
jmp
or
mov
aad
mov
push
daa
das
push
or
cmp
xor
aaa
loope
das
mov
movl
jno
xchg
sub
loope
mov
int3
xlat
repnz
fs
jmp
std
inc
leave
iret
call
cmpsl
inc
inc
push
fcmovnbe
shlb
xor
and
loop
iret
pop
pop
out
push
sbb
adc
push
cmp
popa
jb
enter
lcall
mov
sbb
sub
adc
push
ficomps
dec
subl
adc
cmpb
xor
jbe
pop
clc
inc
lret
outsb
and
pop
and
loop
jb
lsl
sbb
pop
mov
mov
fdivrs
inc
and
clc
dec
and
addb
ret
push
push
lahf
cmp
aad
xchg
loopne
sbb
push
jo
lds
shll
adc
cmpsl
leave
iret
pop
aam
mov
aaa
lods
xor
cmpsb
repz
and
fldt
rclb
pop
insl
jb
ss
in
cmp
sti
jns
cld
in
sbb
sub
enter
aas
xchg
cmp
addr16
mov
push
xor
dec
dec
arpl
adc
and
roll
xchg
dec
and
xchg
rorl
inc
ffree
nopl
notl
cmp
inc
inc
dec
pusha
enter
pop
sub
mov
negl
jecxz
testb
xor
jp
push
stc
sbb
cmc
gs
pusha
adc
loop
and
add
mov
ds
and
stc
leave
pop
loop
clc
movsl
adc
mov
pop
jecxz
add
aam
test
mov
xor
call
gs
movsl
jecxz
pop
or
testl
fwait
inc
inc
loop
sbb
outsb
lret
jge
or
jp
mov
and
mov
fs
or
shll
pop
arpl
clc
xchg
or
pop
pop
pop
xchg
adc
bound
fists
out
lods
sbb
inc
jae
outsl
or
inc
lret
jl
cmpsl
xlat
adc
imul
mov
push
ja
sub
jl
shll
lahf
cltd
sbb
pop
mov
pop
rcll
ja
inc
push
add
xchg
insb
jns
mov
pop
fcomps
cmp
mov
adc
mov
and
add
pop
fcmovnbe
jne
aam
jl
pusha
or
jne
sysenter
adc
lea
or
xor
sti
push
cmpsl
mov
clc
sahf
jecxz
in
faddl
pop
je
dec
or
lods
mov
xchg
sub
cld
add
sbb
push
stos
sub
mov
pop
loop
and
jge
leave
rorb
lret
push
rcrb
fcoms
ja
mov
sub
mov
cld
inc
scas
push
or
add
pop
repz
or
ds
inc
xor
sbb
inc
movsl
in
pop
push
adc
jae
cwtl
push
scas
nop
dec
sti
in
outsl
test
xchg
or
pop
adc
dec
mov
int
out
dec
cltd
fcmovnb
sbb
push
ja
int3
ds
inc
mov
xor
jnp
pop
mov
mov
mov
sub
lds
repnz
fimuls
inc
js
xlat
xchg
lret
in
imul
add
mov
xchg
dec
or
std
clc
adc
mov
push
fadd
pop
jno
data16
xchg
jbe,pn
inc
xchg
scas
test
jo
in
lret
pop
rclb
lods
scas
jmp
subl
daa
mov
push
xor
inc
lds
das
lods
iret
lahf
mov
xor
divl
mov
dec
mov
sbb
dec
mov
pusha
jae
sbb
push
movl
jne
shl
aaa
push
mov
fldt
loop
addr16
pop
jge
cmpsl
push
aam
add
inc
fs
ret
jno
in
inc
out
inc
ret
test
adc
xor
pop
push
xchg
out
or
adc
or
repnz
push
lahf
sbb
push
mov
in
ljmp
cmpsl
decb
fcomp
sbb
mov
xchg
movsb
std
push
xor
idiv
mov
jno
and
or
out
jns
mov
cmp
and
ret
das
rol
adc
jge
and
out
mov
movsl
sbbb
mov
cmp
push
pop
stos
jecxz
aad
mov
mov
and
into
insb
sub
push
push
addl
imul
pop
adc
stc
mov
xor
mov
fs
push
pop
lock
test
sub
inc
rorl
adc
jo
dec
dec
push
xor
or
jo,pt
xchg
arpl
xchg
outsb
std
int
mov
cmp
add
mov
imul
stc
sbb
push
mov
stc
fidivs
and
ret
lods
cmpsb
hlt
xchg
enter
ret
fs
jmp
cltd
mov
in
mov
mov
cmp
testb
or
adc
adc
pop
fdivl
inc
mov
push
ror
xor
daa
jne
dec
pop
out
push
mov
inc
sti
addb
mov
cmp
cmp
or
jae
ret
ja
cmp
rcll
adc
addr16
jbe
in
es
cwtl
lods
pop
leave
ss
or
test
mov
repnz
mov
sbbb
fdivr
pop
ss
je
cmp
pop
pop
xchg
outsb
dec
loopne
sub
icebp
nop
jae
pop
fs
mov
icebp
jnp
cs
jg
push
out
inc
insl
pop
ds
cmp
sub
into
roll
xorb
inc
sub
mov
out
mov
and
xchg
mov
gs
iret
and
xchg
lock
test
popa
ja
cmp
lret
adc
adc
ret
add
mov
mov
loopne
pop
lret
adc
stc
movl
pop
jg
je
mov
out
cwtl
push
popa
pop
in
or
fidivl
std
jne
in
jb
leave
jg
ret
sti
rcrl
out
or
inc
mov
bsr
push
jno
std
lcall
cmp
ret
inc
mov
mov
dec
push
and
jecxz
roll
sub
sub
leave
or
int3
sbb
dec
test
bound
insl
cmc
cld
sub
xor
daa
push
xor
inc
xchg
xchg
jb
mov
push
push
out
xorb
add
push
cmp
pop
sub
and
push
adc
add
les
mov
adcb
cmp
xor
cltd
ss
push
mov
outsl
pushl
aam
and
arpl
shl
ljmp
aam
push
ljmp
adc
mov
rcll
mov
scas
adc
daa
cmp
out
push
data16
std
mov
cmp
xchg
aam
and
and
lea
xchg
jbe
and
dec
sub
and
pop
jge
sub
cmp
imul
repnz
lock
lods
int3
call
or
icebp
xorb
lcall
pop
xchg
push
iret
and
cmp
inc
or
inc
mov
jne
sbbl
or
bound
cli
pop
ret
aad
xor
mov
mov
xchg
pop
jae
add
in
cmp
test
sbb
push
stos
in
xchg
arpl
hlt
push
jge
cmpsl
mov
sbb
in
ljmp
fstl
loope
xor
push
ja
cmc
popa
scas
jecxz
mov
fsubp
imul
sbb
das
fiadds
adc
cltd
cmp
push
sub
out
push
mov
jo
test
cmp
test
clc
pop
aad
adc
xchg
cmp
iret
mov
add
into
fsubrs
jmp
lock
or
cwtl
loope
mov
and
aam
cmp
insb
cltd
in
fiaddl
pop
push
into
into
lods
dec
sahf
shrb
add
sbb
xor
pop
jbe
dec
inc
pushf
xor
cmp
imul
stos
outsl
fsubrp
hlt
addr16
and
dec
sbb
sub
mov
rcrl
xor
arpl
pop
addr16
icebp
fidivrs
mov
out
out
addr16
push
or
rcll
outsl
mov
and
movl
repnz
int3
jns
outsb
sub
jmp
outsl
in
mov
lock
ret
cmp
jp
lret
dec
aam
xchg
fisubrl
mov
sahf
in
and
das
lock
sbb
mov
test
jmp
push
inc
adcb
pop
out
fidivl
movsl
xor
lods
les
subb
lods
rorl
sbb
testl
mov
mov
jg
adc
jbe
mov
das
fadds
leave
subl
andb
mov
xchg
sbb
mov
ja
cld
xor
cli
call
cmpsb
out
test
in
sti
arpl
call
jle
insl
xlat
or
push
lods
or
cmp
adc
daa
mov
sbb
inc
mov
pop
xorb
cmp
jle
pop
sarl
mov
adc
lret
ret
fstpl
mov
pop
xchg
faddl
sbb
addr16
popf
xor
push
test
push
sti
or
jne
shrb
jns
in
cltd
push
push
xorb
or
mov
leave
add
inc
shlb
ljmp
xchg
jnp
out
hlt
xchg
rcr
fistps
cmc
lock
sbb
cmp
scas
inc
adc
lock
cs
sahf
frstor
stc
or
xchg
inc
cltd
enter
xchg
or
add
je
inc
neg
enter
call
inc
add
sahf
add
nop
cmp
lods
dec
lret
int
lcall
push
dec
andl
insb
inc
sub
in
test
jae
hlt
push
lds
cmp
pop
imul
test
mov
pop
jo
orl
out
cwtl
movsb
fimuls
mov
aaa
scas
stos
adc
pop
add
mov
pop
sub
dec
sbb
dec
mov
xchg
cmp
and
popa
push
xor
ja
or
adc
loope
and
adc
push
xchg
mov
push
loope
push
aam
add
xchg
xchg
aad
jmp
pop
xchg
jge
sbb
or
out
xchg
sbb
test
data16
mov
adc
add
push
ja
out
jp
pop
mov
lcall
fwait
cmp
cld
repnz
adc
ficoms
jecxz
lods
sub
inc
and
pop
jg
cmp
je
dec
inc
push
hlt
scas
hlt
cli
adc
ds
cmpsb
test
out
rorl
dec
scas
mov
cmp
xor
out
repz
and
test
dec
rolb
mov
ss
push
sbb
inc
push
pop
popf
or
mov
sub
neg
outsb
cmp
push
std
in
fwait
pop
jne
mov
cmp
and
mov
jno
xchg
mov
aaa
pop
jbe
adc
loop
or
dec
jo
sbb
movsb
mov
in
jge
idivb
lcall
mov
add
lods
jns
fs
jp
and
jecxz
rclb
dec
negb
mov
std
dec
cmpsb
jp
mov
ficoms
adc
dec
sub
xchg
aaa
int
pop
sarl
or
sub
dec
lret
inc
inc
push
mov
dec
fisttps
cltd
hlt
mov
mov
loop
in
test
dec
jmp
dec
or
addb
arpl
ret
add
scas
aam
and
sbb
pop
and
or
das
out
out
shrl
sub
daa
or
imul
lahf
outsb
shlb
insl
or
into
movsb
mov
out
scas
push
pop
and
repnz
inc
scas
icebp
imul
xor
xchg
xchg
push
imul
imul
adc
ret
adc
and
scas
ret
mov
js
push
out
scas
js
ficompl
out
mov
mov
mov
jbe
lds
jl
repnz
mov
popf
mov
mov
int
adc
shlb
pushf
mov
inc
adc
xor
call
imul
mov
push
pop
test
out
mov
dec
arpl
fbld
leave
adc
outsb
jle
push
xor
out
add
cmp
cwtl
test
scas
inc
pop
lods
mov
lahf
enter
cmc
stc
xor
rorb
add
sbb
popa
push
loopne
je
xor
sub
jg
sub
sbb
mov
adc
das
mov
lret
call
push
mov
pop
push
das
cli
cmpsb
mov
mov
push
mov
inc
adc
push
xor
inc
into
mov
jo
es
cs
push
cmpsl
sbb
xchg
mov
pop
in
int3
shll
int3
pop
push
imul
and
adc
je
sub
pusha
fnstcw
sti
xchg
aaa
lahf
lahf
repz
insb
adc
cltd
fcoml
add
nop
sub
into
icebp
mov
and
out
jb
xor
idivl
cmp
xor
mov
stos
je
inc
ret
sub
sahf
lret
dec
dec
or
jecxz
xor
in
push
mov
cmp
sbb
mov
mov
stos
sbb
pop
inc
aas
scas
and
pop
movsl
push
push
repnz
mov
xchg
dec
dec
repz
dec
pop
stos
stos
leave
jno
jle
or
aas
jne
les
cs
scas
aam
rorb
aaa
fcoms
stc
fcomi
push
cmp
les
repnz
sub
popa
test
in
sub
pop
int
adc
jp
xlat
out
xor
inc
loopne
adc
inc
mov
aam
test
cmp
jo
sahf
incl
mov
pop
cmc
cld
das
push
rcrb
sub
sbbb
xchg
loop
inc
test
std
sbb
push
xchg
mov
xor
lahf
and
xor
sbb
jle
lret
fs
inc
out
outsl
sub
sbb
mov
int3
jns
or
mov
les
inc
mov
ljmp
stos
ljmp
and
jl
sub
or
loop
push
fiadds
sub
and
adc
cmc
je
adc
mov
add
pop
gs
in
out
adc
insl
and
inc
rorl
js
hlt
hlt
mov
push
into
pop
scas
cmp
add
enter
mov
loope
sub
cmp
into
dec
inc
ja
inc
jo
test
inc
fcoml
push
cmc
jno
mov
and
mov
aas
stos
repz
jb
gs
sub
mov
stos
mov
inc
repz
pop
and
push
push
in
cmp
jb
jo
mov
mov
fs
cmp
pop
dec
das
mov
push
mov
cmp
xchg
rolb
daa
inc
cs
int
testl
scas
push
loopne
cs
lods
pushf
pop
mov
and
sbb
dec
incb
mov
ret
mov
push
loope
mov
xor
jae
jbe
add
stos
int3
mov
sbb
mov
lods
sbb
lods
and
inc
je
lds
sti
lret
mov
std
mov
inc
jbe
cmp
loopne
inc
xchg
je
cmp
dec
sbb
push
mov
push
push
inc
lock
cmp
jl
jbe
fs
mov
stc
iret
jnp
pop
fmul
je
jnp
test
mov
pop
mov
test
ret
rcrl
arpl
add
inc
mov
cmp
mov
and
popl
jp
in
add
push
ficoms
xor
out
mov
pop
jne
xor
adc
or
dec
insl
lods
add
ljmp
jne
cmp
cmpsl
lea
paddb
pop
dec
mov
cld
or
std
or
lods
cld
sub
in
pop
xchg
lock
stos
addr16
mov
cmp
loopne
xor
adc
xor
ret
sub
dec
mov
sbb
jge
mov
cwtl
xor
jbe
lcall
fwait
insb
add
dec
jnp
adc
out
push
mov
jmp
cmp
mov
xchg
pop
daa
ss
pusha
adc
xchg
adc
loope
pop
inc
aaa
add
cli
push
cmp
js
inc
jmp
hlt
arpl
movsb
cmp
mov
mull
out
mov
call
into
andb
ror
pop
je
adc
and
push
jle,pn
arpl
lret
imul
jmp
push
loop
in
repz
repnz
jb
dec
lcall
aas
mov
inc
ljmp
sbb
mov
inc
xorb
sub
jl
cs
adc
or
add
or
jmp
and
mov
mov
pop
ds
jecxz
sbb
mov
jno
cmpsl
pop
sahf
fistpll
mov
nop
sub
outsl
xor
fimull
jecxz
mov
in
adc
pop
push
or
sbb
out
push
leave
sbb
je
imul
mov
mov
in
outsl
sub
adc
xchg
enter
sbb
jecxz
test
lret
adc
pop
xor
jbe
cwtl
js
cmp
std
mov
xchg
push
cli
inc
fnstsw
aaa
and
jbe
pop
push
mov
mov
jge
das
push
andl
push
mov
rol
hlt
adc
jmp
xchg
repz
movsl
inc
pop
mov
loope
add
sub
cld
bnd
mov
pushf
fdivrs
xor
jae
cs
mov
xchg
sub
lods
repnz
xor
int3
ljmp
enter
orl
mov
fbstp
xor
repnz
xor
repz
sub
jge
push
fiadds
fldl
popa
lea
mov
jl
es
arpl
xchg
push
aad
sub
movsb
into
addb
hlt
fwait
add
adc
sbb
outsb
dec
sahf
hlt
inc
cltd
movsb
cmc
std
mov
sbb
mov
fldenv
out
xchg
andb
mov
fnsave
loop
xchg
out
xchg
lahf
adc
push
scas
clc
push
lock
inc
pusha
aad
aaa
hlt
sub
loopne
inc
xchg
insl
pop
inc
add
fcmovbe
loope
add
or
data16
loopne
mov
dec
imul
or
jl
lahf
daa
jbe
jnp
ret
movaps
adc
jle
xchg
stc
rclb
adc
loop
daa
inc
loop
je
sbb
mov
adcl
pop
movsl
test
xor
lret
aad
mov
jge
pop
cwtl
lods
hlt
outsb
add
loop
stc
mov
shrb
fsubrl
loop
sahf
and
pusha
outsl
jp
in
mov
cmp
add
fwait
leave
cmc
xor
loop
pop
nop
sub
scas
and
test
xor
daa
popf
stc
ljmp
ret
adc
cwtl
or
test
and
push
cmp
aas
mov
mov
adc
xchg
fnsave
xchg
cmpsl
imul
lods
gs
adc
cs
dec
or
shll
loop
sub
xchg
int3
xadd
mov
jns
xchg
and
inc
lcall
sti
or
xchg
mov
dec
cmp
loope
cmp
jae
das
cmp
adcb
and
inc
cmpsl
lahf
pop
add
mov
cmpsb
mov
push
enter
mov
fsubrs
pop
mov
inc
push
xor
outsl
sbbb
pop
and
sbb
sahf
push
xor
adc
aaa
xchg
push
jnp
mov
pop
pop
sbbl
loopne
cmpsl
add
sbb
ret
push
cmp
or
mov
cmpsl
mov
iret
mov
pop
xor
lret
leave
in
xchg
jg
adc
mov
and
inc
iret
pusha
push
pop
pop
push
adc
dec
push
xor
xor
xchg
enter
or
xchg
jp
xor
lahf
inc
or
dec
pop
in
movsl
hlt
inc
gs
jl
mov
fdivr
cmpsl
mov
cmp
call
jne
adc
lds
outsl
aad
adc
jle
mov
out
lds
xchg
popa
shll
and
fisubl
imul
and
mov
sub
mov
jp
sub
add
add
icebp
push
mov
gs
mov
dec
mov
int
xchg
or
shl
inc
leave
sub
pop
movsb
test
push
xorb
xor
ret
rol
std
fmuls
sub
pop
int3
cmp
lcall
mov
push
sarl
les
in
cli
mov
mov
add
pop
leave
fisubs
adc
sub
sub
rorl
sahf
pop
xchg
test
inc
dec
pushf
pop
and
xchg
loop
mov
push
cld
xchg
dec
sbb
sti
call
pop
and
mov
mov
cmp
cli
jmp
xor
fsubs
in
or
pop
mov
xchg
sbb
roll
ret
ljmp
cli
loope
sub
mov
andb
sbb
lock
mov
dec
mov
scas
jp
push
imul
sub
and
xchg
jg
sbbl
lods
push
inc
in
iret
xchg
ja
sbb
inc
popa
sahf
mov
rclb
push
mov
imul
mov
xor
jle
test
lea
repnz
sti
sar
dec
lods
mov
icebp
out
stos
or
cmpsb
stc
int
lret
gs
mov
rolb
inc
push
and
call
pop
repz
pop
push
sub
mov
and
lds
loopne
mov
sbb
and
push
je
cmpsl
iret
lods
push
rcrl
lcall
jmp
loopne
stc
mov
lret
mov
cmpsb
jno
push
imul
insl
xadd
and
ror
and
and
or
les
fldl
rcrb
dec
pop
insb
and
xchg
fbstp
xor
aam
adc
aaa
mov
xor
jl
out
xor
add
push
ficomps
add
int
mov
xor
mov
test
adc
cwtl
inc
popf
ret
cmp
mov
add
and
inc
js
adc
movsl
and
movsl
and
pcmpeqb
fmulp
jmp
aas
pop
test
insl
mov
jbe
nop
push
imul
mov
lcall
insl
cmp
aad
xchg
call
loopne
xchg
dec
sbb
addl
fwait
out
pop
and
jo
fs
inc
ret
popf
inc
lcall
je
stc
jecxz
jnp
enter
lods
loop
mov
sbb
imul
or
addr16
pop
xchg
std
and
idivb
pop
loop
push
and
lahf
and
cmpsl
xor
pop
xor
cltd
cwtl
jl
push
popa
pop
push
in
mov
and
cmp
sbb
sub
das
dec
insl
lods
jg
rcrl
sbb
ficompl
repz
inc
adc
cmp
cmp
xchg
insb
das
xchg
jp
adc
fbstp
mov
pop
push
popa
gs
push
clc
mov
mov
pop
lcall
fbstp
lods
mov
popa
into
in
lds
sahf
dec
scas
sub
mov
shrd
and
adc
mov
dec
into
scas
add
adc
jp
or
test
sahf
inc
das
cmpsl
sub
popf
shrb
bound
addb
jno
bound
mov
out
aaa
scas
jno
jge
test
nop
lcall
sahf
mov
and
pop
push
ja
sbb
js
leave
xchg
xchg
push
push
outsl
jb
push
ljmp
sbb
dec
stc
push
and
shlb
jl
insl
clc
xchg
cltd
mov
xor
dec
fnstsw
ret
out
js
popa
cwtl
ja
andl
cmpsl
bound
push
inc
lods
cld
ds
test
pop
fwait
cmp
pop
imul
popf
mov
je
out
add
mov
adc
lods
dec
jge
popa
pop
inc
outsb
xchg
cmp
lret
movsb
mov
jbe
inc
sbb
xor
test
rol
adc
push
sbb
jo
inc
and
in
mov
inc
les
jl
jmp
jae
repz
loopne
mov
dec
push
jno
int
clc
out
pop
test
arpl
jg
test
fldl
into
pop
pop
push
push
or
daa
int
andl
jae
xchg
loope
je
xchg
mov
dec
loopne
jb
push
pusha
movsb
xchg
shl
hlt
inc
xlat
ljmp
popa
addb
fisubrs
popa
jmp
jb
or
jno
lea
das
inc
xor
add
cmp
or
sbb
ds
mov
push
pop
fmul
jo
aad
sub
dec
and
lea
sbb
inc
icebp
mov
inc
sti
leave
out
add
add
inc
outsl
mov
movsb
mov
pop
dec
shlb
add
jno
cmpsb
pop
mov
out
adc
push
movsl
fstpt
test
repz
mov
dec
enter
mov
jecxz
dec
out
fwait
and
dec
jne
pop
int3
sub
mov
sbb
lret
lds
and
xchg
loopne
js
roll
push
cld
jae
push
xchg
mov
in
adc
or
jne
sbb
pop
xor
popl
fwait
cmpsl
or
pop
sbb
clc
pop
movsl
cmpsb
inc
jno
or
jge
inc
push
rcrl
jge
xor
out
mov
or
xchg
sti
sub
std
push
sti
dec
aam
xchg
cld
dec
loopne
shlb
lea
leave
mov
add
sahf
fs
pop
imul
xor
fdivrl
cs
inc
cmpsb
jnp
cmp
jbe
xor
dec
outsl
pop
dec
fwait
or
xchg
stos
push
test
aaa
dec
fcomps
into
xor
xchg
push
int
loopne
push
ss
or
movsb
mov
push
xchg
xchg
int
imul
and
pop
sub
loop
jo
inc
add
jmp
jb
cmp
mov
out
in
adc
jl
jl
ds
cmp
aaa
arpl
mov
out
mov
sbbl
cld
dec
aas
mov
in
je
popa
sub
stos
sbb
or
jmp
std
inc
jg
pop
test
rcl
mov
xor
shll
jl
aad
fwait
sbb
pop
cltd
cmp
addr16
mov
aas
jb
jecxz
and
fwait
push
pop
je
into
lcall
mov
inc
cltd
loop
roll
pop
mov
xchg
fwait
shlb
sbbb
push
adcl
inc
mov
addb
std
out
jb
jl
lret
roll
insl
filds
and
out
fcomps
test
push
pop
lcall
push
cmc
xchg
jge
gs
movzwl
lret
push
adc
mov
js
fcmovnu
push
enter
add
push
out
cwtl
ljmp
mov
jl
cli
insb
dec
int3
add
xor
push
out
aam
dec
call
jno
mov
clc
and
inc
iret
inc
daa
or
sbb
push
test
imul
rorl
rclb
add
mov
sbb
push
enter
or
cmp
cmp
loopne
fwait
xchg
push
pusha
and
arpl
cmovbe
pusha
insl
jb
push
je
push
repz
mov
mov
jae
pop
sbb
int3
mov
xchg
test
enter
movsl
add
fwait
lea
xchg
dec
xchg
ret
or
sbb
in
test
sub
jecxz
mov
xchg
mov
and
mov
testl
jp
jns
and
loop
dec
lods
cmpb
ds
cmp
lock
dec
mov
pop
das
or
mov
imul
inc
rcrb
add
int3
cmpl
movsb
inc
leave
into
mov
inc
daa
push
fisubs
xor
sti
mov
insb
stos
fsubl
sub
daa
sbb
and
inc
out
lret
and
sahf
push
push
and
pushf
scas
test
sbb
mov
les
pop
es
add
sbb
pop
xor
mov
inc
movsl
push
push
mov
or
jmp
cltd
daa
call
daa
adc
imul
inc
mov
sub
je
bound
divl
xor
xchg
sahf
mov
push
mov
pop
xlat
inc
and
mov
cmc
aas
pushf
not
notb
cld
sub
cli
les
add
or
sbbl
mov
std
cmpsl
jp
arpl
push
clc
jno
hlt
mov
mov
sbb
dec
movsl
mov
enter
dec
aas
inc
dec
pop
mov
cmp
fadds
rorb
inc
sbbb
mov
mov
mov
ds
dec
jp
nop
out
and
fimull
and
jecxz
dec
cmp
stc
int3
fnstsw
cmp
mov
shrb
ficoms
lahf
mov
push
stc
fmulp
mov
sarl
fsubrl
xchg
std
cmp
out
mov
cmp
or
adc
dec
mov
stc
xchg
push
arpl
or
inc
mov
outsb
addr16
int3
adc
imul
xchg
arpl
stos
imul
arpl
fxtract
movsb
insb
jl
fistps
or
fmull
fnstcw
lea
loopne
push
mov
jg
rcrb
jbe
bound
add
outsb
fcmovne
js
add
hlt
add
outsl
and
test
mov
in
inc
gs
push
shrb
sub
or
scas
pop
inc
rolb
and
outsb
jbe
mov
jne
push
or
and
push
sub
xchg
push
fs
mov
xchg
xor
pop
xchg
mov
dec
stos
inc
in
xchg
mov
push
scas
inc
sub
ret
jbe
jnp
scas
or
and
xchg
loop
nop
jns
dec
into
dec
fisubl
xor
cmp
sub
call
int
jecxz
push
adc
stos
sub
shll
fs
andb
xchg
xlat
inc
sub
clc
gs
cld
out
adc
js
roll
std
xor
cltd
loope
mulb
or
lods
int
in
sub
mov
enter
sub
arpl
push
xchg
adc
sub
xchg
in
cmp
add
mov
dec
inc
out
add
add
xchg
mov
dec
or
sbb
fimuls
jle
add
cmovl
mov
movsl
mov
cltd
sti
mov
outsb
push
and
enter
rorl
mov
sbb
ret
sub
lret
sbb
sbb
inc
jno
jne
lock
xchg
inc
xor
fistpl
in
sar
movsb
inc
xor
mov
and
lret
imul
adc
ror
repnz
or
dec
das
mov
inc
jle
xor
inc
jg
lret
int
test
aad
testb
stc
and
popf
jge
cmp
int3
dec
xor
push
cmp
pushf
jne
fs
sarl
jg
xlat
jne
hlt
rcrl
pop
xchg
add
enter
fwait
movsb
cmp
or
icebp
cmp
mov
sub
cmp
xor
push
mov
mov
outsb
repnz
loope
int3
lret
cmpsb
sbb
stos
mov
sbbb
mov
jmp
inc
jmp
sbb
sub
movsb
in
adc
outsb
in
jne
pop
mov
pop
ret
lods
mov
jmp
pop
push
sub
out
push
iret
enter
jae
mov
cmp
mov
dec
cmp
and
jne
xchg
mov
mov
inc
fimull
in
inc
mov
mov
pop
stos
arpl
in
adc
aaa
pop
push
notl
mov
sbb
xor
sub
jno
fcmovu
mov
repz
inc
fwait
jle
sti
cs
fsubp
mov
into
aad
repnz
inc
test
rcrb
jns
or
mov
xor
out
cmp
push
jbe
cwtl
lret
popf
mov
loopne
sub
dec
push
in
pop
dec
jae
mov
test
add
mov
mov
fsubl
xor
lahf
enter
push
and
jb
cmpsl
popf
jge
sub
outsl
loope
scas
daa
xchg
and
fnstenv
in
imul
or
inc
jmp
sbb
fninit
fsts
call
int
jnp
adc
sbb
inc
movsb
push
enter
sub
inc
out
cmp
dec
push
mov
iret
mov
fidivs
insl
jmp
jae
mov
stos
push
pop
push
push
dec
jecxz
or
jecxz
bswap
nop
lds
mov
sbb
adc
mov
sbb
je
jb
mov
std
cmp
xlat
pop
add
outsl
add
fstpl
iret
dec
lock
lret
popf
shll
lret
inc
gs
add
sub
cli
mov
pop
push
addl
xchg
xchg
fcoml
addr16
pop
lret
setg
in
incb
nop
std
lcall
xchg
mov
stos
mov
cmp
in
rcrl
or
mov
add
mov
xchg
imull
lods
popa
add
outsl
sahf
push
mov
lahf
sub
loop
lea
pop
mov
jb
js
das
jge
aad
push
sarb
lahf
shr
in
mov
ja
mov
test
inc
sti
addr16
dec
lods
js
push
jne
repz
adc
mov
cld
outsb
dec
push
xchg
xchg
mov
mov
push
negl
roll
lret
mov
pop
push
fwait
jmp
mov
mov
dec
inc
and
xchg
addr16
pop
mov
mov
rcll
push
sbb
leave
and
push
mov
out
jecxz
or
pop
cmc
dec
cwtl
mov
mov
loopne
lods
jmp
or
mov
add
popf
xor
daa
mov
or
sbb
dec
leave
out
push
mov
xor
cmc
negb
scas
add
jge
push
das
add
push
push
sub
mov
insb
aaa
adc
jecxz
dec
loopne
test
aad
pop
hlt
in
jle
jno
cmc
adc
xchg
mov
aas
and
cmp
call
mov
ss
add
sbb
roll
int3
inc
repnz
stc
push
pop
push
scas
das
scas
sub
scas
mov
gs
adc
mov
inc
dec
fldl
ljmp
mov
shr
shll
aad
pop
fwait
push
pop
loop
aas
mov
push
cmp
les
push
add
test
xchg
push
mov
and
sbb
adc
hlt
mov
xchg
mov
fwait
ss
les
stos
jl
xchg
cmpsl
and
ss
idivb
adc
call
sbb
icebp
cld
leave
adc
xor
int
mov
mov
mov
divl
pop
mov
stc
adc
aam
mov
ret
lahf
mov
sbb
pop
ret
outsb
sbb
jge
push
cmp
icebp
lcall
inc
jb,pn
add
stos
xorb
adc
aas
sbb
pop
inc
enter
xchg
jp
outsl
rorb
lds
sub
out
push
sbb
das
js
daa
lock
lods
lret
mov
and
outsb
mov
sbb
ja
sub
mov
rcrl
fwait
or
test
lret
imul
aaa
pop
hlt
sbb
fstps
or
mov
aam
aaa
xor
test
test
pop
xor
shlb
outsl
enter
cmp
ret
scas
mov
mov
aaa
cmpsl
insb
xor
mov
repnz
or
bound
shlb
repnz
arpl
in
and
mov
xor
push
pop
cmpsl
pop
mov
dec
cmpsl
movsl
or
cltd
in
jne
xchg
push
imul
js
imul
xchg
icebp
xor
mov
cltd
loope
ror
ds
test
cld
lcall
mov
stos
dec
jl
cmc
cmc
push
sub
push
xor
jge
mov
pop
shrl
enter
test
mov
pop
outsb
cmp
loope
dec
add
fldenv
pop
aaa
ja
mov
adc
push
out
adc
cltd
cmc
push
sbb
dec
jge
mov
pop
adc
mov
addb
inc
popa
push
pop
cmp
pop
sub
or
loopne
dec
lds
xadd
rcll
ret
xchg
mov
xor
sub
jge
sub
ljmp
hlt
fwait
jno
cld
lret
or
dec
jp
sti
dec
mov
and
rcll
rorb
lcall
pop
inc
pop
sbbl
mov
sbb
testl
cmp
iret
mov
test
sub
lret
lret
and
pushf
mov
fisttpl
dec
loop
imul
ds
push
dec
mov
aad
add
imul
push
sub
dec
movb
inc
xor
push
cmpsl
or
aaa
ds
fwait
xor
cmp
add
jmp
shrl
rolb
leave
cmp
mull
into
in
jl
bound
leave
cltd
scas
pop
lcall
aam
mov
mov
pop
scas
inc
imul
test
push
xlat
sbbl
xor
out
fwait
incl
jmp
jge
fistpl
push
mov
stos
inc
and
xor
xlat
out
cld
insb
les
pop
mov
imul
sbb
xchg
insb
pop
adc
mov
cwtl
notb
jge
mov
maskmovq
notl
leave
mov
das
jle
cmp
sub
mov
mov
outsb
popf
xchg
xchg
mov
test
cmp
mov
fimull
pop
and
mov
mov
jg
mov
fisttpl
mov
daa
xor
adc
add
bound
xor
sub
cltd
cmp
and
clc
xchg
push
ret
mov
or
xchg
xor
lea
and
mov
hlt
fistpl
cmc
add
fildl
inc
test
jmp
inc
xor
icebp
xchg
adc
int3
adc
jle
dec
aam
jp
and
sub
jge
hlt
aad
fs
pop
mov
mov
pop
clc
icebp
cmp
sti
js
sub
jg
fstpl
ret
hlt
test
xchg
popa
insb
sbb
fisubs
fdivl
outsl
imul
outsb
pop
ret
test
imul
es
xor
xor
mull
out
jae
jo
xor
fiadds
outsl
lea
push
inc
or
push
xchg
mov
xchg
inc
out
repz
xor
pop
aas
mov
jne
sub
push
sub
adc
add
xchg
pop
fwait
stos
icebp
fcompl
pop
pop
pop
stos
clc
sbb
pop
sub
pop
ljmp
push
xchg
mov
in
adc
into
jnp
fisubl
cld
or
pop
in
lock
sbb
add
mov
xchg
sbb
pusha
aas
repz
shll
aas
ficompl
adc
dec
outsb
fildl
push
adc
lea
xor
test
lods
or
jg
sahf
dec
out
sahf
and
push
push
xor
inc
scas
sbb
aam
aas
xchg
popa
mov
rorb
lods
push
subl
pop
cld
stc
repz
decl
push
pop
fldl
jmp
fadds
stos
mov
jbe
adc
cwtl
pop
test
and
scas
cmc
addb
push
sbb
aaa
dec
lods
push
pop
inc
aad
mov
ret
xor
dec
sbb
pop
pusha
cmp
lret
and
lock
fmull
xchg
in
sbb
jp
sbb
les
scas
mov
nop
adc
pop
popa
nop
mov
cmp
shll
cmp
test
clc
xchg
mov
out
sti
addr16
loop
mov
and
loop
push
lcall
and
inc
andl
and
mov
sub
ret
dec
repnz
xchg
or
or
pop
mov
add
sahf
fistpll
sbb
incl
lcall
shrb
add
les
pushf
daa
sub
add
lds
arpl
adc
jmp
push
sbbb
fisubrs
add
cmpsb
mov
dec
cmp
in
pop
sbb
in
jl
jecxz
aad
xorl
pop
mov
inc
mov
stos
adc
inc
inc
jne
xor
push
sub
dec
inc
xchg
push
dec
jbe
stos
int
push
lock
xor
and
fbstp
packuswb
in
loope
imul
out
loope
mov
xor
and
aas
adc
pushf
push
out
loopne
xor
lods
les
mov
pop
xchg
adc
aas
test
and
add
cld
in
push
cltd
popa
lret
stos
push
mov
imul
or
es
ljmp
in
pop
add
cli
das
xchg
sub
push
test
aas
xor
int
into
inc
pusha
lahf
imul
and
fwait
pop
jmp
pop
idivb
cli
inc
fsubrp
das
nop
mov
lods
inc
aad
pop
mov
fisubrs
inc
sub
fs
mov
leave
push
mov
icebp
adc
pop
sbb
popa
mov
fsqrt
leave
jno
mov
mov
push
lret
xchg
mov
shll
pop
icebp
test
fidivs
test
loopne
stos
daa
sbb
cmp
xchg
jno,pn
fldt
cwtl
mov
popf
stc
fwait
add
daa
xchg
jne
movsl
cmp
jl
sar
jle
inc
test
dec
mov
rolb
outsb
lods
sbb
cmpb
jl
fadds
or
jg
aad
in
cld
xchg
into
addl
daa
push
or
adc
fsubs
adc
cld
pushf
call
xchg
fst
adc
sub
ret
mov
in
adc
rolb
adc
lods
pop
cmpsl
lds
cmp
cmp
dec
sbb
pop
je
inc
call
es
addr16
psubb
sub
sub
inc
sti
fnsave
dec
sub
in
adc
mov
rol
cmpsl
fisubs
test
add
xor
std
arpl
and
add
jecxz
std
xlat
pop
enter
daa
movsl
stos
push
push
inc
hlt
cmp
sub
jle
cmp
sbb
out
jb
icebp
push
test
nop
fists
xchg
loop
out
stos
push
push
js
and
aaa
xchg
mov
dec
ficompl
sub
sbb
and
inc
mov
pop
gs
xor
pop
xchg
sti
cmp
popa
inc
test
and
lock
cs
out
icebp
pop
leave
clc
adc
lds
imul
inc
scas
cmpsb
ljmp
push
fwait
popa
lret
das
lcall
or
push
sahf
xor
and
pop
or
sbb
xchg
leave
cwtl
mov
fildl
sub
sbb
push
mov
cmpsb
gs
sbb
adc
xor
mov
lcall
cmc
pop
push
xor
inc
aas
lea
ret
xchg
push
pusha
and
aam
int
pop
scas
pop
cmp
fiaddl
xor
js
xor
loop
push
fisttps
sbb
sub
xchg
ret
std
xor
add
sbb
clc
scas
aad
push
cmp
aad
aas
addr16
xchg
mov
mov
jge
push
outsb
push
ja
mov
fsubrl
scas
std
adc
add
cmp
incb
test
mov
in
fwait
and
and
fiaddl
and
xchg
sub
outsl
and
sarb
mov
push
and
push
cmp
cmp
nop
mov
xor
test
fcom
cmp
xchg
arpl
mov
pop
add
aaa
int
inc
fsubp
push
add
adcl
ficoml
mov
rcrb
shlb
in
clc
insb
test
adc
adc
sbb
rolb
xlat
add
ljmp
inc
cmovne
push
cmp
rclb
and
xor
jle
out
ja
adc
movsb
push
mov
push
and
and
fdivrp
pop
add
xor
jge
or
outsb
and
aaa
pop
mov
add
clc
insl
push
ret
push
mov
cmp
aam
in
push
adc
sbb
js
movsb
mov
xchg
jns
sub
loope
daa
cmp
cmp
jg
fistl
push
cwtl
les
in
jecxz
pusha
cmp
push
adc
mov
inc
stos
pop
jmp
fisubs
daa
rolb
cmpsl
lret
mov
mov
leave
mov
sub
outsb
ljmp
mov
arpl
sbb
sbb
adc
sub
and
mov
cwtl
add
mov
test
mov
cltd
inc
outsl
xor
bound
adc
stos
and
rcl
push
fmull
xor
int3
inc
cmpsl
stos
push
jnp
out
dec
or
leave
pop
xchg
cmp
sbb
xchg
loope
adc
pushf
cltd
jle
je
lods
fildll
lods
push
jge
and
jno
jne
mov
inc
mov
mov
rcll
mov
xorb
pop
push
add
sbb
loopne
adc
ss
push
shrb
loop
mov
shrb
movb
jmp
xchg
xor
cwtl
icebp
rcr
fnstcw
pop
jle
mov
push
scas
or
inc
xchg
popa
jns
mov
mov
push
lock
jmp
hlt
xchg
inc
jbe
test
scas
aam
cmpl
dec
out
insl
negl
scas
clc
add
sub
and
rep
rorb
push
add
cmp
add
out
cmpsb
sahf
in
xor
imul
test
dec
fwait
icebp
out
das
pop
popf
out
iret
jp
pop
xchg
sahf
or
ret
and
adc
push
lret
rorl
mov
sbb
into
and
pop
mov
fisubs
xchg
push
xchg
sarl
inc
je
lods
xchg
and
gs
das
cs
mov
lods
loopne
push
mov
daa
xchg
lods
outsb
aad
adc
xchg
jmp
idivb
inc
cmc
jle
pop
ret
in
addb
add
push
push
filds
in
rclb
inc
mull
lods
mov
xchg
push
pop
jno
xchg
pop
and
popa
lea
lock
fs
sub
in
or
mov
dec
sarb
or
sub
mov
aad
sbb
fincstp
jecxz
mov
adc
shrb
addl
jae
loopne
lret
or
cs
fsubl
inc
adc
movsl
jg
jb
mov
add
jnp
jp
pop
cmp
mov
push
jl
sub
cli
pusha
out
jbe
add
xchg
sub
sub
cmpsb
push
mov
in
fdivl
mov
sbb
mov
or
adc
ret
add
mov
add
into
xor
les
dec
sbb
jno
mov
loop
arpl
push
mov
cmp
sti
outsb
pop
sub
xor
nop
sarb
dec
pushf
xchg
xor
jno
jmp
sbb
lea
jne
pop
xchg
inc
fs
xchg
sbb
adcl
fistpll
add
adc
in
pop
add
test
xchg
ja
or
and
orb
cltd
stos
hlt
adc
xlat
push
lods
stc
or
sahf
push
ja
adcb
es
and
cmpsl
or
jnp
adc
fldt
mov
lods
bound
xor
mov
xchg
insl
push
lahf
mov
fisttps
pop
in
inc
jnp
jle
mov
inc
imul
cmp
add
adc
mov
or
lods
mov
xchg
mov
jmp
leave
push
outsb
cmpb
and
mov
ja
dec
cmpsl
add
icebp
push
rdmsr
out
mov
test
icebp
daa
enter
adc
out
or
shrl
xchg
lahf
int
fnsave
sbbb
test
fbstp
hlt
add
je
dec
shlb
xchg
inc
mov
xchg
pop
out
mov
outsb
and
cmp
stc
fdivrl
dec
inc
fsubl
dec
sarb
lods
mov
stc
pop
in
lds
je
imul
bound
ja
sub
sub
mov
iret
arpl
inc
mov
fstpl
aas
in
popa
pop
jg
shlb
jbe
cwtl
jb
test
mov
es
ja
push
addr16
jnp
ds
mov
ficomps
call
adcl
movsl
pop
cli
and
adc
or
out
outsb
mov
pop
sbb
outsb
enter
add
inc
pop
jmp
out
sbb
jge
mov
dec
add
arpl
xor
sub
jne
cld
and
jo
adc
int
mov
data16
jmp
adc
aam
sbb
fmul
push
js
or
nop
sub
sbb
pop
xor
jo
and
shll
out
add
ss
jl
ss
dec
out
mov
lods
mov
sbb
xor
or
inc
loope
adc
jecxz
idivl
sub
fs
addl
fcompl
lcall
cmp
rorb
add
dec
inc
mov
sarl
sub
push
add
ret
dec
or
push
jle
enter
add
mov
and
mov
push
adc
add
mov
mov
xchg
iret
rcr
push
cltd
fmuls
in
fs
xor
jnp
sub
aad
inc
into
arpl
add
outsl
push
xchg
sub
movsl
call
inc
add
negb
in
cmp
enter
pushf
xchg
iret
cmp
add
popa
repnz
call
jno
push
enter
push
adc
xchg
xor
into
cmp
roll
loopne
movsb
ror
aas
pop
mov
cmpsl
sbb
sub
mov
dec
sbb
dec
lret
pop
int3
fcmovnu
add
adc
clc
lock
fiaddl
bound
clc
lahf
pop
repz
jnp
inc
mov
jnp
jnp
inc
stos
cltd
ret
mov
outsb
adc
cmpsl
push
pop
adc
sub
mov
xor
dec
dec
sbb
pop
jmp
repz
in
inc
cmp
movsb
stos
xchg
sarb
sbbb
jo
call
pop
icebp
cmp
sub
pop
push
xchg
imul
les
aas
sbb
ljmp
bound
ds
fs
mov
jle
ret
ja
pop
dec
jp
sub
sbb
dec
dec
das
jge
lods
jb
imul
xlat
jns
sarl
nop
adcl
sbb
loopne
loopne
jmp
push
mov
sub
mov
cmp
imul
lahf
xor
mov
jo
jmp
fs
loope
push
ljmp
pop
loop
cli
test
test
out
mov
mov
fwait
jae
lods
mov
mov
inc
lds
nop
jae
fistpl
std
loope
rolb
xchg
cwtl
imul
push
xchg
icebp
xchg
hlt
imulb
int3
push
movsl
push
scas
popa
mov
lods
hlt
shrl
sbb
lds
jecxz
push
in
xchg
dec
pop
mov
pop
sti
in
cld
jns
and
sar
pop
in
mov
cmp
adc
sub
or
aaa
adcl
xor
mov
sar
fcmovnbe
jmp
inc
mov
cmp
fwait
push
and
sbb
idivb
popa
inc
xchg
jmp
xor
and
push
enter
pop
out
jmp
jne
jge
inc
fwait
mov
mov
and
jne
sbb
sarl
aad
iret
jl
adc
or
jecxz
add
clc
out
or
je
jnp
xchg
and
add
mov
mov
int
aam
mov
pop
lahf
sbb
inc
test
xchg
call
push
mov
ret
enter
pusha
cli
outsb
adc
imul
repz
jmp
inc
add
insb
xor
jno
jae
ret
jb
mov
push
jge
rcrl
xor
pop
out
or
iret
in
nop
scas
sub
pop
push
rcll
inc
cmp
ret
mov
fildl
sbb
xchg
pop
mov
ljmp
cs
hlt
les
jno
xor
addb
pop
aad
xor
push
inc
fsubs
cmp
repnz
fnstcw
je
xor
insl
sahf
mov
jl
lret
out
jp
and
hlt
data16
test
dec
xor
mov
xchg
jae
fbld
mov
daa
xchg
fwait
mov
jge
fisubs
mov
test
out
leave
adc
sub
std
mov
aad
hlt
sub
xor
mov
mov
js
push
xor
or
xlat
lods
outsb
clc
xorl
xor
add
push
nop
jb
xor
jbe
cltd
jp
mov
mov
jo
fdivrl
mov
mov
fmuls
cmp
cmovnp
xor
mov
mov
xchg
or
and
mov
pop
mov
inc
stc
mov
fstpl
sub
jns
mov
aaa
push
neg
lret
mov
jp
lds
mov
ljmp
push
ljmp
push
push
les
mov
dec
imul
fdivrs
push
xchg
lret
mov
sbb
shlb
repnz
xchg
fcmovb
sbb
cmovne
pop
mov
iret
es
cmp
xchg
ds
cmp
ret
jge
sub
in
inc
shr
int3
cmp
insb
icebp
rclb
and
sub
lcall
adc
jmp
cmp
mov
sub
inc
pop
jg
mov
mov
pop
cmpsb
cs
dec
mov
leave
sbb
or
jmp
int
fs
lds
fisubs
push
sub
std
subb
jae
in
or
ss
mov
loop
dec
cltd
mov
mov
cld
pop
bswap
xchg
jo
out
insb
jbe
insb
cmp
jb
sahf
hlt
cwtl
mov
nop
stc
addr16
xor
push
cmp
sbb
xchg
jg
stc
add
push
push
popf
bound
leave
sbb
or
shrl
fmulp
push
cmp
rcrl
aaa
hlt
xchg
testb
call
mov
inc
fdivs
cld
mov
xchg
testb
add
ret
pushf
addb
jo
push
sub
inc
inc
xor
shrb
inc
lahf
pop
fwait
jae
arpl
std
inc
sbb
faddl
pusha
clc
inc
cli
out
pop
dec
mov
fsubrs
das
pop
rclb
dec
hlt
dec
js
inc
iret
xor
into
in
bound
xchg
lods
stos
dec
sbb
push
stc
sbb
aad
sub
and
cmp
mov
fs
jg
insb
popa
rcrl
and
push
jae
out
mov
mov
jle
pop
aaa
nop
jp
in
push
insb
pop
dec
mov
xchg
stos
shr
fisubrl
and
push
xlat
aas
ret
in
adc
adcl
jbe
out
xchg
sbb
pop
adcb
mov
jno
jb
mov
pop
ljmp
push
push
inc
and
pop
inc
cmpsb
dec
push
dec
in
lock
or
xlat
push
subb
jle
pop
shll
xor
out
movsb
call
pop
jno
aam
fs
leave
sub
xchg
test
add
mov
or
aad
fisttpl
xchg
mov
out
addr16
fidivs
sti
sub
outsl
jle
ret
out
jns
cmp
test
lds
mov
fistpll
es
faddl
and
adc
sbb
push
xchg
xchg
cmp
lea
mov
aad
or
xor
lock
push
je
xor
out
lret
pusha
push
jmp
mov
inc
sbb
or
sbb
xchg
cmp
mov
fldcw
mov
xchg
or
stos
push
and
fldl
ss
repz
push
ficoms
sub
std
cltd
data16
lock
aas
data16
fcmovnb
xor
mov
inc
gs
adcb
mov
push
sub
pop
dec
push
mov
xchg
xor
mov
jb
cld
loope
push
xorb
sahf
dec
sub
add
inc
pop
push
es
sahf
adc
mov
imul
sub
jno
dec
jno
mulb
inc
lcall
in
mov
mov
inc
or
rorb
or
sbb
mov
loope
sub
in
stos
lahf
lea
mov
xor
aam
fsubr
clc
dec
pop
jno
shll
push
aas
dec
loope
dec
lods
push
sbb
sbb
int
xorl
and
aaa
push
cmp
xor
adc
fstps
pop
mov
popa
add
push
sbbw
dec
fucomip
xor
popf
jg
xchg
sub
adc
cwtl
mov
bnd
sbb
sub
popa
int
int
hlt
cmp
movsl
shrl
jne
mov
lods
aad
aaa
fs
mov
popa
push
sub
dec
xchg
and
inc
xlat
and
les
xchg
sti
test
fildl
data16
lcall
sarl
xor
xchg
clc
mov
notl
mov
stc
xor
test
mov
movsb
xor
insb
mov
les
push
aas
push
sub
stos
int
sbb
mov
jmp
jmp
div
and
mov
mov
ret
mov
dec
lret
repnz
hlt
mov
lea
mov
leave
mov
mov
push
dec
mov
sbb
or
mov
lods
or
sub
inc
push
mov
xchg
xor
sub
dec
mov
add
sbb
movsb
ret
sbb
insb
pop
pop
and
add
mov
pop
insl
imul
ret
add
dec
push
mov
push
pushf
cmp
xchg
es
and
les
fisttpl
out
dec
inc
cmp
pop
imul
push
js
jge
divb
jg
mov
xchg
cmp
mov
push
aas
outsb
mov
push
push
add
test
roll
push
or
jmp
mov
dec
out
sbb
add
xlat
test
inc
popl
daa
movsl
and
add
sbb
test
mov
imul
adc
cmp
hlt
js
push
movsl
xlat
mov
sbb
jbe
mov
cmp
orl
into
imul
fwait
push
in
loope
lcall
add
fdivr
bound
mov
jge
mov
mov
jb
call
test
sub
mov
ret
push
push
repz
shll
push
adc
inc
lcall
cmp
mov
mov
testl
xchg
stos
lret
js
and
dec
pop
push
jp
mov
push
push
sbbl
popw
cmpsl
outsl
loope
hlt
cmp
cmp
push
sbb
nop
cmp
arpl
mov
sbb
push
lock
aam
imulb
loop
pop
jne
outsb
xchg
outsl
dec
sbb
into
xor
mov
test
xchg
and
cmp
arpl
and
adcb
fwait
add
fdivs
divl
mov
and
xchg
outsl
fldcw
sub
notb
and
gs
cmp
js
jge
mov
xchg
adc
mov
mov
push
jg
outsl
lods
divb
pop
inc
das
and
mov
gs
sar
repnz
rcr
mov
pop
pop
aaa
push
sub
pop
push
jge
jne
nop
lods
stos
dec
add
push
addr16
frstpm(287
sub
pop
xchg
sbb
jge
nop
mov
mov
fwait
mov
mov
test
arpl
push
pop
dec
out
xchg
mov
jle
sbb
jecxz,pn
add
movsl
into
out
adc
mov
enter
cmp
or
fmul
or
test
andb
mov
ret
lock
das
movsb
jne
jp
mov
mov
push
fistpl
mov
adc
lahf
rorl
xchg
lods
outsl
scas
clc
jge
xchg
dec
loop
xchg
xor
lods
xor
iret
je
xor
jo
fsubp
in
insl
leave
push
data16
scas
cwtl
mov
in
mov
stc
and
push
xchg
jl
loope
jecxz
call
inc
inc
mov
or
cmpsb
push
push
push
sub
sti
test
jno
or
fmuls
jge
xchg
loop
js
pop
mov
sti
ja
les
fdiv
call
sbb
push
bound
stos
push
pop
out
fdivl
movl
and
add
insl
push
jo
lock
es
repnz
jbe
cmp
jg
out
jae
add
jne
adc
rcr
jbe
jnp
out
push
or
ja
lahf
scas
dec
std
aas
and
iret
imul
dec
cmp
subb
pop
in
in
dec
inc
aaa
push
sbb
dec
pop
in
xor
lret
lret
std
popa
repnz
mov
xchg
xor
push
cmp
inc
ja
jl
inc
testb
dec
push
cld
test
xchg
mov
sub
imul
xchg
lods
mov
iret
cmpsb
cltd
lods
push
xchg
ja
adc
enter
lcall
adc
adcb
push
js
movsl
mov
scas
jo
or
lahf
ret
xor
sub
lock
out
sti
sti
mov
aam
out
fcmovnb
hlt
push
cs
out
loopne
pop
add
addr16
lock
pop
xchg
ret
jne
jg
cmp
sbb
mov
neg
add
xor
mov
cmp
stos
mov
and
jb
or
inc
cmc
mov
xchg
daa
push
push
lods
sti
lea
sbb
pusha
xchg
or
sub
push
in
inc
add
popf
jg
cs
popa
mov
loop
lcall
fscale
inc
fidivs
shrl
xor
ds
jns
daa
stos
in
push
fcmovnbe
xor
sarl
push
adc
mov
les
and
jne
push
sarl
ficoms
orb
xchg
lods
dec
js
pop
mov
pop
xchg
or
adc
ds
enter
adc
jno
aam
jno
fdivl
roll
pop
repz
sub
shrl
xor
popa
push
pop
pushf
adc
ljmp
push
addr16
mov
fwait
sub
jp
andl
xchg
inc
std
imul
out
je
imul
ds
jns
js
pop
inc
fldl
xor
mov
and
jle
mov
mov
inc
subb
adc
xlat
xchg
xor
int3
lret
movsb
push
add
fcompl
pop
ficoml
lods
fs
jmp
push
mov
push
jb
push
inc
mov
ds
cs
inc
jl
dec
popa
cmp
pushf
out
sti
fsubr
loopne
or
test
fistpl
sbb
xchg
ja
mov
loop
jnp
adc
mov
pop
lods
mov
add
aas
movsl
enter
repz
jne
fidivs
inc
sbbb
add
mov
push
sbb
scas
cmpsb
scas
mov
cmp
cli
arpl
dec
inc
push
dec
lea
and
sar
aaa
mov
jbe
pop
mov
ljmp
jne
sbb
imul
mov
push
stc
or
xlat
call
sbb
xor
cmpsl
test
add
test
clc
sbb
push
hlt
dec
pop
das
out
adc
lcall
fldl
mov
fstl
push
les
mov
xor
mov
incb
and
cmp
jo
out
push
adcl
mov
call
fidivs
sbb
test
icebp
sbb
loop
shrb
notb
in
xchg
dec
add
dec
mov
cmc
sbb
nop
pop
pop
sbb
dec
cwtl
pusha
insb
mov
add
loop
jecxz
aad
mov
in
add
mov
push
mov
or
push
mov
xor
dec
xlat
mov
mov
mov
in
sub
in
xchg
dec
scas
dec
mov
dec
mov
push
push
dec
push
push
add
mov
jae
xor
mov
hlt
rcll
lret
mov
mov
mov
sahf
jmp
inc
int3
mov
push
pop
ret
sbb
pushw
and
add
aaa
xchg
jbe
mov
popa
cmc
mov
int3
and
jg
out
jb
addb
cmpsb
cmpsl
xor
insl
movsb
dec
enter
add
rcrb
jb
sub
fdivrl
push
rorb
jecxz
aam
push
movsb
test
movsl
outsl
ljmp
mov
rcrb
sbb
ja
jg
mov
and
mov
popa
out
mov
cmpsl
dec
cmp
lretw
cld
xlat
out
inc
popf
in
sti
mov
add
movsb
sbb
js
push
jae
inc
fldcw
sahf
loop
xchg
cwtl
add
and
sbb
popf
loope
ja
icebp
sub
out
pop
lds
rcrl
mov
pushf
mov
js
ret
sarl
pop
add
xchg
add
mov
adc
inc
movsb
push
ret
sub
add
lock
pop
cmp
push
fnstcw
cmp
cli
je
and
inc
dec
mov
imul
pop
iret
leave
fidivl
bound
test
rol
enter
sbb
inc
aad
push
xadd
stc
das
inc
stos
repnz
jg
inc
cmpsb
scas
dec
roll
arpl
sbb
movsb
inc
pop
notl
in
lahf
lds
xchg
sub
pop
mov
xor
xchg
or
jl
bound
pop
inc
dec
and
dec
lret
mov
xor
mov
push
mulb
jae
mov
xchg
mov
add
push
jns
mov
lods
xchg
sbb
mov
das
jg
repnz
ret
sbb
mov
sbb
cli
cld
jl
cmpsb
mov
sbb
jb
push
cwtl
andb
test
fbstp
adc
cwtl
xchg
mov
mov
lods
dec
jb
cs
cmp
stc
dec
in
ret
cmp
jns
lock
mov
stos
jge
sarl
test
mov
sub
mov
jge
call
mov
mov
out
jl
ret
enter
dec
sub
enter
fucom
sub
sbb
and
cwtl
xor
test
loopne
fnsave
mov
add
scas
mov
dec
mov
push
aaa
xchg
pop
or
adc
xor
int3
adc
sub
adc
xchg
loop
pop
cs
es
movsb
cmpsb
dec
daa
xor
add
mov
repnz
mov
sbb
cltd
inc
jbe
sbb
aaa
add
push
in
mov
or
push
stos
mov
jmp
pop
adc
xchg
dec
mov
pop
outsl
addb
insl
cli
mov
sub
test
push
int
pop
fidivrl
jnp
das
xchg
sbb
aad
mov
mov
pushf
addb
ret
cmpsb
and
lea
cmpsb
mov
or
cmc
out
sbb
nop
mov
fstpt
mov
sarb
pop
xchg
sub
enter
jno
cli
movsl
cmpsl
sbb
pop
sub
sub
cmpsl
sub
mov
adc
daa
dec
iret
jecxz
adc
outsl
jp
test
cmc
aaa
adc
int3
lds
or
mov
cmpsb
imul
scas
fwait
jge
repnz
and
add
test
in
sub
pop
pop
aad
lret
cmp
mov
out
jg
xor
inc
int
int3
add
sbb
and
xlat
mov
imul
push
enter
lock
mov
mov
call
jecxz
mov
scas
pop
inc
sahf
out
pop
xchg
or
cld
fwait
cli
cmp
push
push
in
add
pop
xor
inc
and
add
pop
mov
rolb
int3
mov
fistps
repz
hlt
shll
insl
jmp
lcall
mov
int3
int
adc
dec
rcrl
data16
cmp
lret
cmp
icebp
stos
repz
sahf
mov
popa
mov
adc
les
mov
scas
pusha
mov
mov
inc
mov
sahf
fnstenv
push
repz
or
cmp
in
js
and
xchg
ljmp
hlt
int3
pop
test
jp
cld
aad
pop
leave
fisubs
pusha
ds
movsb
out
cld
test
jne
pushf
neg
push
lahf
out
cmpsl
repnz
pop
addr16
and
js
repz
out
loopne
daa
adc
rclb
or
xlat
adc
lcall
xchg
add
cmp
mov
sahf
inc
mov
arpl
nop
mov
mov
sub
and
jp
and
test
data16
je
push
int3
movsb
jmp
and
stos
mov
mov
pop
jae
sti
out
inc
and
jae
push
lea
cltd
roll
inc
hlt
movsl
icebp
jmp
int3
std
subb
sub
or
test
mov
ficoms
mov
jge
push
push
aad
or
test
aad
out
inc
dec
sub
leave
xor
fs
lahf
cmpsb
les
pop
push
cmpsb
lcall
push
inc
cld
out
xchg
loopne
xchg
dec
pop
pop
fmul
mov
cwtl
popa
and
xchg
push
out
shll
sub
jg
and
repnz
adc
or
xchg
popa
mov
and
adc
dec
mov
inc
push
or
out
repz
sbb
fadd
fdivs
cwtl
sub
mov
jb
jnp
xchg
lcall
fs
cmp
mov
xor
addr16
out
dec
pop
sbb
xchg
fadds
bswap
lock
xchg
jl
sub
js
fisubs
test
stos
cmpsb
push
or
scas
jae
mov
dec
lret
push
xor
sbbl
push
aam
in
insl
enter
push
repz
or
mov
mov
push
shl
sub
inc
icebp
dec
add
push
push
lds
or
xor
mov
jecxz
das
movsb
sete
leave
add
mov
out
push
xchg
mov
loopne
lods
scas
add
inc
mov
les
scas
shrb
bound
pop
mul
repnz
mov
nop
xchg
mov
in
pushf
push
int
xor
call
mov
clc
fwait
pop
shrl
xchg
jg
out
in
in
out
loop
idivb
inc
mov
and
test
into
dec
pop
adc
xchg
sbb
xchg
in
les
dec
repz
pop
test
popa
xor
sub
aaa
scas
insb
insb
xchg
xchg
mov
mov
and
cli
xchg
jns
push
and
xor
negb
xchg
daa
aad
movb
sub
pop
loopne
inc
ds
sbb
in
mov
mov
add
and
adc
int3
and
mov
xchg
cli
ja
mov
lret
ret
insl
lds
pop
cltd
cmc
mov
scas
lock
and
sbb
out
mov
dec
shlb
fildll
mov
cmp
inc
daa
xor
insb
or
clc
sbb
mov
cmpsl
ret
mov
pop
test
xchg
cld
lcall
daa
ret
dec
clc
sahf
pop
or
sbb
in
mov
icebp
aas
jae
sub
in
or
push
popf
xor
push
pop
push
sub
nop
jmp
shll
xchg
int
mov
cmp
add
adc
in
sub
mov
es
lods
aam
int3
mov
dec
mov
inc
jl
sub
es
testb
ret
and
pop
dec
push
fbstp
mov
xor
inc
mov
push
pop
push
adc
push
push
mov
mov
sub
mov
or
inc
fadds
fwait
rcrl
xor
mov
lds
stos
dec
sub
aad
inc
lods
mov
insl
pop
or
movsl
std
gs
mov
sub
popf
in
xorb
into
addr16
inc
add
mov
dec
int
cmp
xchg
lock
in
je
adc
iret
std
mov
mov
sub
jmp
inc
and
aaa
push
inc
shrb
xchg
lret
fmull
mov
jbe
ds
mov
and
je
add
pop
adcl
clc
adc
inc
jp
mov
adc
rcl
cltd
movsl
movsb
es
icebp
sbb
mov
fdivrs
rol
mov
stos
adcl
push
jb
and
cs
gs
mov
fwait
mov
arpl
push
jle
cmpb
cs
inc
xor
repz
int
aad
roll
xchg
pop
daa
push
add
jbe
and
imul
enter
lods
js
repnz
mov
jp
int
adc
rep
ret
and
pop
mov
inc
mov
or
cmp
mov
outsl
cmc
lcall
sub
adc
std
pop
and
pop
xchg
mov
or
test
ja
mov
cs
xorl
daa
jp
ja
xor
add
xchg
mov
jno
sbb
push
mov
outsb
xchg
cmpsb
int
xchg
pop
mov
and
std
lret
inc
lret
inc
cltd
mov
pop
es
fistps
cmpsb
inc
pop
mov
sahf
lods
xor
int
mov
movsl
xor
or
xor
std
lahf
jb
mov
xchg
aad
in
mov
in
mov
fidivs
arpl
into
push
sbb
icebp
popf
dec
and
or
fildll
out
in
pop
push
mov
fxch
and
dec
outsl
and
in
mov
dec
jae
mov
popa
cmp
cmp
movsl
pop
repz
pop
push
inc
mov
xlat
inc
and
movsl
lods
das
out
cltd
fcomps
imul
ret
cmp
cmc
jne
mov
addr16
cmpsl
push
loop
inc
and
daa
jp
stos
and
les
or
mov
test
movsb
pop
mov
cmp
or
stc
jb
jb
ljmp
xchg
and
or
push
and
sub
iret
dec
xor
out
sbb
dec
xor
xchg
mulb
xor
add
cmc
adc
jno
push
aaa
mov
sub
pop
adc
decb
inc
outsb
fs
sub
xor
jo
sbb
xchg
jp
dec
adc
mov
jg
sbb
or
leave
or
addr16
add
cltd
mov
imul
fs
push
jbe
adc
inc
jle
je
stos
fisubrs
jmp
loope
or
mov
or
add
pop
mov
icebp
fcmovbe
fbstp
jns
ret
fildll
jecxz
or
hlt
cmp
pop
jne
sbb
mov
dec
icebp
sbb
dec
add
push
dec
je
movsb
sbb
lods
es
insb
inc
cmp
fcoms
fsubp
jne
movsb
gs
pop
or
mov
sub
jne
jnp
mov
or
mov
mov
test
adc
mov
inc
mov
jne
lea
add
mov
push
push
xor
lahf
loope
sbb
xchg
ret
in
and
pop
imul
out
mov
mov
cltd
jmp
sti
inc
lock
out
and
adc
push
icebp
xchg
mov
adc
rcr
mov
and
mov
pusha
sti
int3
stc
sub
pop
jecxz
js
pop
stc
mov
filds
adc
lea
negb
iret
jge
sbb
pop
mov
inc
xchg
ffree
xchg
into
cmp
mov
sbb
mov
jmp
insl
xchg
insl
scas
scas
in
dec
mov
ja
dec
fcmovnbe
test
jl
stos
movsl
inc
das
inc
inc
test
or
xor
push
xchg
dec
jmp
and
cmc
and
cld
out
mov
icebp
adc
cmpsl
sub
pop
aaa
pop
pop
pop
or
leave
test
insb
gs
insl
cmp
push
sbb
inc
push
addr16
sti
mov
aas
xor
aaa
fst
cmpsb
sbb
into
inc
adcl
pushf
mov
mov
xchg
pop
jno
insb
cmp
jo
out
inc
mov
inc
cld
sub
rep
mov
shrl
cmp
jno
cmp
xor
sub
mov
fistpll
in
or
add
xchg
in
dec
or
mov
dec
imul
popa
mov
xchg
xor
jns
add
mov
mov
and
inc
or
je
call
fmuls
shlb
cwtl
push
repz
sub
in
jae
repz
jmp
rclb
jecxz
mov
in
and
lcall
mov
mov
inc
push
push
mov
cmpsl
mov
xchg
call
add
rcrl
lods
mov
insb
pop
xchg
pop
inc
fwait
dec
cmp
mov
stos
mov
xchg
movsb
sti
pop
adc
jns
adc
xchg
mov
jp
daa
stc
and
in
add
sub
mov
stos
stos
adc
pusha
aas
inc
divl
pop
xchg
sbb
stos
fsubs
mov
mov
loope
and
add
out
xchg
jb
cmp
rcrb
and
and
sbb
cltd
addr16
stos
and
notb
out
xor
fldenv
popf
xlat
add
cld
int
hlt
cmp
xchg
inc
mov
add
push
xor
aam
sbb
inc
jecxz
gs
adc
mov
lahf
pop
adc
push
or
sbb
mov
fadds
push
xchg
push
loopne
into
add
pop
push
cmpsb
cmp
lret
pop
dec
mov
mov
dec
fisubl
call
repz
xchg
fldenv
test
jae
shlb
aaa
mov
nop
push
jmp
and
sbb
push
fimuls
xchg
mov
cmp
push
pop
outsb
xor
loopne
cmpsl
jb
leave
and
or
pop
rep
lret
jbe
or
rcll
adc
mov
adc
add
negl
cmp
mov
pop
push
push
fs
mov
jne
push
or
inc
sbb
imul
pop
aad
outsb
mov
or
cmp
les
cmp
cmpsb
sub
jle
ds
add
sub
ljmp
out
push
movsb
cltd
das
mov
inc
push
mov
xchg
out
fisubrs
xor
sub
jbe
mov
inc
xor
std
movsl
fsubp
mov
mov
getsec
loope
push
mov
ljmp
fdivs
aam
push
lret
gs
mov
ds
shrb
sub
enter
and
dec
sar
pop
adc
imul
push
ret
and
call
push
or
pop
push
cmp
add
jmp
sahf
popf
and
lcall
dec
or
add
lea
jb
inc
sbb
xchg
lret
jnp
add
lcall
fld
sbb
ss
div
je
or
fcomps
push
inc
test
ficompl
mov
je
hlt
loop
negl
xchg
jno
sbb
in
iret
jnp
outsb
cmc
mov
lods
ret
fstpt
xchg
je
shlb
push
pop
lahf
ds
sbb
imul
xor
out
xor
jecxz
mov
push
sarl
jmp
enter
fbstp
or
jg
bound
test
push
jnp
mov
stos
jns
test
aam
adcl
sub
in
mov
in
push
ja
ret
pop
fdivrl
pop
dec
push
mov
and
pop
leave
dec
sbb
xchg
leave
into
imul
mov
in
imul
lcall
pop
mov
sbb
rol
dec
and
dec
adc
sbb
and
push
push
jecxz
cltd
mov
jg
nop
scas
dec
scas
fnsave
aas
inc
mov
iret
adc
iret
and
adc
sub
inc
jns
stc
in
cld
jl
pop
ds
pop
pop
std
mov
sbb
and
das
add
idiv
push
and
push
jle
rcll
jle
hlt
add
ja
and
dec
je
into
mov
out
int3
pop
aaa
adc
pop
xchg
dec
xchg
mov
and
sbb
mov
daa
fistps
adc
in
or
or
cmc
fsts
scas
loope
sbb
dec
pop
xchg
insb
push
inc
int3
out
or
std
or
dec
jno
pop
xchg
mov
dec
pop
dec
cmp
lcall
les
and
jecxz
push
mov
loopne
lds
divb
ljmp
inc
hlt
xchg
mov
lret
imul
jbe
xor
inc
mov
cmp
push
xchg
sbb
rorb
loopne
jno
push
cmpsl
pop
ljmp
mov
adc
and
push
sti
ja
mov
mov
je
sti
xchg
inc
or
repnz
or
into
dec
scas
push
pop
repnz
loopne
daa
sbb
pop
sub
xchg
testb
arpl
lret
push
xor
mov
into
mov
or
mov
mov
lds
stos
sti
push
testb
leave
popa
adc
mov
push
dec
inc
sub
in
pop
mov
xchg
sbb
jle
adc
arpl
das
test
mov
mov
xor
nop
int
imul
cmc
mov
or
mov
call
cli
lock
adc
or
ror
and
inc
dec
subb
dec
pop
out
insb
lods
lret
pushf
inc
test
stos
stc
sub
pop
inc
jae
or
or
jg
fdivl
js
inc
fstpl
loop
xor
fisubrl
pop
stos
movsb
jl
incl
xchg
rcrb
push
cmpsl
stc
testb
in
pushf
sub
jo
cmp
in
inc
xchg
in
xor
push
push
inc
clc
or
stos
clc
sbb
jg
and
out
insb
push
cwtl
shlb
add
ret
ja
fimull
mov
and
sub
hlt
insb
xor
lret
mov
cmpsl
or
mov
jnp
gs
aaa
mov
aas
ffree
xchg
or
fwait
mov
and
lret
clc
push
sub
xchg
aas
test
cs
addr16
sbb
lods
outsl
sbb
cmp
inc
hlt
rorb
imul
jnp
sub
test
xor
stos
mov
push
inc
cmpsl
scas
insb
and
outsb
cmp
into
rol
xchg
fbstp
std
jecxz
jns
pop
pop
inc
jle
xor
in
aaa
xchg
pusha
ret
cltd
jnp
fwait
andb
xor
xor
repnz
add
or
cwtl
dec
faddl
repz
adc
adc
pop
inc
sub
dec
out
stc
movsl
clc
push
mov
pop
repnz
dec
jo
mov
mov
sahf
adc
es
mov
pop
rol
jns
fstpt
movsb
ficomps
aaa
push
lock
pop
shl
xchg
add
arpl
push
in
xchg
icebp
movsl
push
lret
cwtl
sub
dec
bound
icebp
adcl
lcall
lods
mov
jle
out
jbe
mov
mov
sub
cmpsb
loopne
data16
pushf
and
xor
jb
hlt
mov
xor
dec
imul
dec
aaa
movsb
in
js
filds
pop
adc
jle
pop
mov
mov
sbbb
cmpl
mov
rep
stc
and
inc
dec
insl
daa
jge
mov
add
mov
jno
cmpb
ds
aam
divb
ljmp
push
jmp
xchg
pop
cs
mov
call
les
sti
cmp
adc
and
jns
ret
cmpsl
xor
and
sub
dec
orl
cli
sbb
inc
rcrl
inc
ret
pusha
fwait
xchg
lock
pop
stos
loop
int
pop
fnstcw
into
andb
inc
xlat
xor
mov
call
jg
mov
cmpsl
popa
xor
sbbb
lahf
push
pushf
je
xchg
and
inc
push
aaa
orl
mov
inc
hlt
or
adc
scas
lock
xchg
icebp
add
push
cmpsb
inc
fsubrs
pop
cs
xor
scas
lock
fistps
pop
dec
ds
dec
iret
test
xor
fisubrs
out
addb
sub
loop
mov
dec
pop
push
shr
jle
mov
cmp
pop
neg
fcompl
push
int3
jge
dec
dec
ret
test
cld
or
clc
rcrl
adc
loop
cmpsb
push
or
out
fmuls
inc
icebp
cmp
xchg
mov
outsl
idivb
push
push
lods
dec
out
adc
pusha
jno
ja
push
mov
inc
cmp
and
fldcw
xor
loopne
dec
lret
inc
js
imul
jecxz
ds
daa
mov
lahf
add
movsb
sub
jmp
call
cmpsb
push
mov
cmp
cmp
mov
inc
and
sbb
xor
lret
repz
add
mov
in
jg
jno
sarl
inc
add
outsl
out
lods
xlat
out
inc
or
test
mov
and
cli
shlb
insb
jns
pop
pop
dec
cmp
sahf
int3
pop
cli
mov
cmp
sub
pop
jae
movsl
rorl
stc
push
add
sbbb
cmp
int
mov
mov
sbb
lret
cmp
xor
push
pop
daa
sar
and
xor
js
mov
cmpsl
pop
mov
xor
and
ljmp
lds
mov
push
push
add
and
xchg
fsubs
pop
xchg
dec
sahf
mov
sbb
fwait
sbb
sub
icebp
jl
into
stos
jo
jmp
sub
nop
cs
mov
push
xorl
test
push
cmp
mov
das
scas
stos
push
pop
push
idivl
aam
aad
sbb
and
aad
sub
shl
sbb
nop
push
aas
dec
dec
stc
sub
dec
inc
mov
dec
and
nop
andl
fdivs
or
mov
cmpsb
jp
lods
sbb
int
insb
or
fistpl
arpl
cmp
test
sub
add
adc
xchg
mov
dec
dec
in
lret
xchg
sarb
mov
ljmp
call
fcmovbe
imul
gs
push
mov
aaa
and
fistl
out
addb
sbb
lds
inc
add
xchg
mov
xor
sub
int
cmp
int
dec
addr16
data16
jp
jg
ret
shl
stos
push
sbb
js
mov
or
cmp
in
sub
push
fptan
fimull
js
rorb
stos
mov
mov
pop
ljmp
push
mov
ficoml
mov
je
lret
jno
rorb
js
pop
push
icebp
inc
les
xchg
xor
push
add
ror
testl
dec
fldt
in
cwtl
icebp
pop
add
sub
aas
out
jle
loop
sbb
popf
enter
scas
fnsave
sub
test
cmp
mov
lods
ret
insl
je
hlt
gs
push
pop
sbb
sti
mov
sub
aas
mov
jle
push
test
mov
and
aam
mov
scas
fildll
fsubrl
call
sub
sti
test
xchg
xchg
cmc
idivb
je
subl
push
iret
pusha
les
call
cmp
ljmp
add
xchg
jno
scas
push
or
lea
cmp
outsb
jbe
add
sti
inc
add
loopne
dec
arpl
hlt
nop
pop
adc
outsl
int
xchg
mov
arpl
aaa
sub
fs
fwait
xchg
sub
xor
iret
xchg
mov
and
jmp
and
rcll
loope
jno
iret
int3
xor
cmp
cmp
cli
inc
sbb
xor
popf
xor
outsl
push
mov
dec
jecxz
andb
and
sbb
dec
sub
xchg
cmp
mov
rclb
mov
shll
jle
or
popa
inc
pushf
xchg
je
outsl
sub
xchg
mov
lcall
out
outsb
fildl
cmp
outsb
je
xchg
leave
sahf
xchg
adc
xor
mov
jns
fdiv
jge
xchg
stos
cmc
sbb
fs
aaa
daa
pop
sar
mov
jne
jne
add
inc
add
testl
adc
add
into
sahf
lea
dec
cwtl
xchg
lds
and
add
pop
aaa
adc
ds
dec
lcall
pop
dec
inc
mov
cltd
lods
inc
and
inc
je
ret
bound
test
fisubs
inc
mov
adc
adcb
add
and
adc
daa
push
mov
cli
fucom
jle
and
sbb
jne
jg
xlat
sti
mov
or
addb
and
mov
inc
lcall
inc
or
mov
push
mov
inc
inc
arpl
sub
enter
mov
add
leave
mov
xchg
ror
test
jecxz
scas
jno
lcall
test
cmp
pushf
das
or
enter
xchg
ljmp
fcmove
fildll
add
fs
mov
movsb
fyl2x
nop
aaa
stos
stos
xor
ds
cld
xor
jae
or
dec
or
push
jl
loope
and
add
loopne
cmp
idiv
sbb
in
lea
and
add
sbb
inc
xchg
loope
pop
ret
cmp
mov
jmp
add
mov
dec
pop
pushf
in
bnd
test
dec
jno
jbe
add
mov
xchg
pop
or
loop
sti
jmp
sub
sarl
js
cmc
int3
and
push
pop
dec
jae
inc
in
mov
fidivrs
jb
mov
inc
divl
push
inc
shl
test
dec
add
fcoml
pop
pop
sub
mov
mov
xchg
out
jo
mov
and
and
sbb
push
sub
or
pop
xor
sub
or
cli
pusha
mov
jge
jmp
loope
inc
shl
scas
mov
stos
mov
xor
nop
pushf
add
std
lret
loope
pop
sub
clc
or
clc
stc
lahf
inc
enter
jnp
mov
pop
fsubr
cltd
mov
stos
push
mull
in
and
sbb
movsb
or
adc
pop
sahf
pushf
or
and
jb
test
shl
dec
pop
sti
into
or
adc
or
sbb
jne
sahf
movsb
js
dec
xchg
cmpsl
xor
mov
xor
push
lahf
xchg
cltd
sbb
sub
cmp
jge
inc
inc
ljmp
push
testb
daa
push
inc
int
imul
mov
cmp
fs
scas
iret
out
sub
mov
mov
mov
adc
and
xchg
mov
call
test
sbb
movsb
push
push
psllq
cmpsb
pop
mov
iret
popf
jo
test
test
cmp
push
or
pop
scas
movsb
cmp
cmpsl
xchg
add
push
daa
mov
inc
aas
jmp
dec
cmp
lods
and
ret
inc
popa
in
sbb
xor
fstps
int
sbb
xchg
and
les
jbe
lock
dec
fcom
lods
xchg
jne
and
xor
xchg
cmp
push
sbb
cmc
pop
pop
xchg
clc
cmp
movsl
out
shlb
pusha
xchg
pop
push
cmp
jnp
pushf
sub
insl
sbb
xor
sub
push
xchg
lcall
xchg
scas
pop
rorb
loope
mov
xchg
cmpb
xchg
cmpsl
ret
mov
arpl
mov
mov
les
jae
cmp
inc
add
ret
or
sbb
push
and
popf
xchg
push
inc
pop
cs
sub
cmp
fs
sti
imul
imul
ds
leave
sub
push
lret
aam
pop
imul
pop
mov
mov
pop
jmp
scas
and
and
sbb
std
pop
cmp
movsl
dec
daa
add
and
stos
or
icebp
sahf
sub
mov
mov
lea
popf
outsl
hlt
ficoms
add
popf
fs
cmp
ror
in
push
adc
arpl
pop
outsl
es
mov
scas
xchg
add
call
sti
adc
dec
jmp
lret
mov
sub
dec
mov
adcb
push
arpl
jge
add
stos
xlat
jmp
loop
in
jmp
enter
rorb
cld
jae
adc
push
fisttps
cmpsl
outsb
rcl
lods
enter
std
sbb
icebp
mov
ljmp
sbb
test
xor
cltd
xchg
pop
stos
stos
rolb
cld
cmp
mov
es
jo
sbb
jp
call
pop
and
xor
sub
jge
iret
and
jmp
jl
adc
aad
mov
cmc
push
mov
or
sbb
mov
aaa
in
mov
es
mov
sti
mov
jecxz
adc
push
outsb
loop
jae
mov
ja
push
dec
inc
leave
dec
repnz
inc
add
jl
mov
insb
das
mov
inc
int
add
mov
clc
push
cmpsb
mov
add
mov
lods
inc
xchg
adc
shl
stc
adc
into
ret
mov
jbe
lret
mov
lcall
int3
pop
in
xorl
into
pusha
xor
imul
pop
popf
sahf
aam
sub
mov
or
mov
dec
mov
fisubrl
adc
icebp
or
sub
push
les
out
mov
add
out
mov
jmp
aaa
pop
call
xor
inc
icebp
and
fcompl
mov
es
stc
dec
lea
out
adc
mov
adc
pop
push
xorb
stc
insb
jg
loope
jnp
add
add
or
pop
flds
sbb
adc
rorb
stos
addr16
jge
cltd
add
gs
jge
stos
jbe
cmc
js
daa
mov
pop
shr
adc
mov
or
ljmp
mov
movsl
jl
xchg
sub
inc
pop
test
dec
sub
jl
stos
rol
test
cmp
mov
into
mov
xchg
fildll
test
pop
or
in
lds
push
sbb
in
pop
aaa
hlt
ja
fnstcw
mov
sub
jl
adc
xor
scas
in
pop
add
shl
xchg
pop
loope
and
test
inc
enter
movsb
into
inc
add
xchg
add
fs
lods
or
add
jg
jp
cmpl
jne
push
sbb
shrl
icebp
adc
inc
jns
dec
icebp
push
andnps
cmp
shrb
pop
xchg
das
adc
sub
popf
push
aad
or
push
aad
mov
add
int
or
iret
enter
or
hlt
rorl
ljmp
mov
repnz
shr
sbb
add
pop
pop
fnstsw
insl
scas
xlat
dec
imul
xchg
cmpsl
mov
shll
test
fidivrs
dec
lods
jbe
fwait
jle
pop
insl
out
inc
lds
insl
icebp
filds
push
imul
push
out
add
repz
jo
daa
lea
bnd
mov
lea
scas
ret
cli
in
jno
sbb
andl
cmpsb
cld
cmp
dec
repz
cmp
and
pop
fimuls
test
mov
mov
push
xorb
adc
push
xor
adc
cmc
and
jo
mov
movsl
pop
aad
cmpsl
cld
rorl
cmp
fcomp
xor
or
fs
cld
mov
push
and
in
mov
jp
xor
sub
add
or
cmp
sub
xor
xchg
stos
sbb
pushf
xor
call
jae
ss
fcomip
fstl
data16
popf
es
cmc
xchg
sbb
sbb
cltd
mov
inc
inc
add
adc
fdivr
cli
clc
sbb
cmpsb
adc
pop
std
in
push
das
xchg
jl
cmp
add
dec
stos
cmc
cmp
and
xchg
mov
sub
stc
lods
sbb
aad
add
xchg
or
movsb
inc
inc
xor
lret
xor
add
xor
hlt
fadd
xchg
lds
mov
xchg
dec
stc
lods
pushf
cmp
push
jne
inc
dec
idivl
and
xor
lds
lds
cmp
enter
cmp
roll
inc
test
xlat
stos
cmp
in
adcb
push
jae
lea
fdivl
mov
dec
cli
addl
pop
fists
insb
sbb
imul
sbb
lcall
sub
xor
fildl
sub
mov
int3
int
push
dec
adc
pop
xchg
jb
push
int3
lods
dec
mov
repnz
cmp
mov
ljmp
ljmp
in
shlb
push
popa
push
test
mov
mov
pop
je
rcr
inc
pop
pop
jns
imul
hlt
cwtl
adc
pop
ret
sbbl
pop
out
mov
insl
stc
ss
and
jbe
jbe
jmp
test
fucom
loop
sub
pop
xchg
mov
lock
push
call
dec
pop
or
cwtl
fwait
test
inc
xor
lret
jns
mov
pop
jle
aad
addr16
cmp
cmp
jecxz
aaa
xchg
add
cld
dec
sbb
std
pop
and
add
sub
or
sub
stc
js
call
cli
in
rcr
mov
movsl
cs
fadd
lock
jle
inc
lea
rep
inc
ret
cld
jle
sbbb
push
aas
cltd
inc
and
mul
nop
sbb
icebp
std
mov
cmpl
scas
in
shr
or
mov
int3
fcompl
fwait
lret
out
flds
call
adc
pop
ja
les
aas
push
cli
mov
nop
mov
in
and
inc
push
rorl
xor
pop
in
fs
sbb
adc
mov
loopne
in
mov
push
mov
xchg
stos
and
push
pop
pop
into
xor
pop
aas
aas
jbe
xor
das
movsb
movsb
mov
adc
stc
incw
aam
insb
repz
inc
ficomps
jmp
sbb
xchg
popf
xchg
ss
xor
jmp
repnz
repz
xadd
iret
push
test
pop
inc
and
ss
aas
cwtl
dec
push
cmp
jp
cltd
mov
jle
push
rcrl
jp
sbb
fnstenv
sub
and
jae
and
push
shl
notb
cmp
sbb
mov
fcomip
loopne
mov
dec
jne
and
fsubrp
fistl
daa
pop
mov
or
inc
xor
repnz
ret
shlb
dec
in
mov
test
mov
outsb
xor
dec
dec
pop
and
mov
or
inc
xchg
add
imul
push
pop
or
shrb
xchg
or
pop
ds
lret
dec
sub
test
lods
mulb
jo
pop
pop
inc
int3
bound
xchg
lcall
test
or
pop
cmpsl
mov
xor
int
pop
dec
stc
iret
push
sbbl
mov
inc
mov
push
lock
and
pusha
xchg
into
cmp
jmp
mov
sbb
or
add
pop
cltd
mov
dec
arpl
pop
fdivrs
int
out
inc
sbb
cli
mov
add
in
xchg
imul
and
push
imul
mov
es
jne
test
mov
loop
push
repz
adc
insb
hlt
stos
aaa
pop
imul
shlb
test
xchg
mov
ficompl
je
fiadds
jno
imul
das
neg
sbb
and
lods
cltd
cmp
mov
push
mov
cmp
cli
mov
mov
dec
jge
in
jecxz
push
mov
loopne
inc
lcall
jge
pop
xchg
subl
insl
in
dec
or
sbb
pushf
clc
leave
sbb
mov
repnz
adc
lcall
sub
sbb
vsubsd
sub
xchg
insb
inc
mov
inc
bound
clc
inc
test
mov
dec
lret
repz
mov
popa
add
fisubl
xchg
lea
or
fsubrp
mov
cmp
xor
push
and
mov
push
dec
xor
out
pop
add
inc
cmp
xor
cmp
pop
fldl
loope
stc
mov
xor
cmp
cmp
xor
mov
hlt
std
and
sub
out
stos
repnz
lock
cmp
loop
aam
lret
cmpsl
jp
iret
sarb
pop
push
stc
xor
xlat
fcomip
mov
aaa
push
push
inc
jnp
leave
xchg
int
test
push
or
xor
or
push
call
xor
js
repz
sbb
int3
cli
inc
mov
popf
clc
pop
inc
std
loope
jnp
inc
das
mov
popa
test
cmpsb
mov
mov
xchg
jle
and
sti
sub
xor
imul
add
mov
or
and
or
xlat
loopne
ret
nop
inc
mov
lcall
pop
pop
push
or
aad
and
push
adc
push
and
nop
cmpsl
ds
xor
adc
ss
sti
repz
pop
mov
pop
mov
cmp
mov
mov
daa
cmp
push
stc
dec
out
mov
push
push
hlt
sbb
lods
sahf
sub
jnp
sub
call
in
lcall
test
divl
jmp
jns
xor
dec
sbb
xchg
xchg
ja
repnz
pop
rorl
cli
jl
sub
jae
loope
push
mov
pop
jae
xchg
jmp
lcall
sti
fcmovnb
fwait
outsl
pop
xchg
adc
imul
mov
sbb
cmp
xor
mov
loope
nop
scas
decb
sub
sbb
loope
test
push
mov
push
fs
cmp
cmp
xlat
xchg
je
shrb
add
hlt
xor
cmp
addr16
xchg
les
push
lods
scas
or
std
jns
mov
inc
lcall
fisttpll
cmp
and
addr16
mov
xchg
test
lahf
addr16
outsl
and
test
int3
push
out
inc
pusha
ret
mov
test
jge
and
mov
cld
pop
data16
mov
add
out
ja
movsb
mov
add
cmpsb
stc
ret
inc
xor
cmp
rorl
mov
cs
movsb
rcl
imul
inc
push
push
dec
int
daa
jecxz
or
mov
js
xchg
std
xor
mov
mov
pop
inc
es
xor
mov
pop
cltd
lea
dec
jno
mov
xchg
jns
mov
into
int
and
and
dec
orb
adc
dec
dec
test
cmpsb
or
adc
repnz
shll
sub
ds
leave
adc
add
imul
dec
pop
jmp
fadds
or
inc
imul
jp
imul
mov
test
int3
mov
sbb
sarb
jb
das
xchg
std
jbe
dec
mov
pop
inc
lahf
hlt
xor
jge
pushf
cmc
adc
jae
or
loopne
outsl
xor
dec
xchg
jmp
rorl
sbbl
out
fidivl
lret
inc
push
insb
ret
mov
adc
xor
push
js
int
fadd
jp
inc
cmp
lock
out
mov
add
dec
push
or
mov
mov
inc
popf
add
mov
pop
rorb
cmp
dec
add
shr
mov
mov
gs
xor
test
testl
jo
insl
adc
push
push
das
out
ljmp
sbb
test
movsb
test
push
pop
insb
adc
adc
bnd
or
xor
inc
lea
inc
aad
dec
xchg
adc
jecxz
fcoms
push
xchg
out
je
or
ret
cwtl
or
aas
nop
pusha
cmpsb
loop
test
fmul
scas
or
jmp
pop
xchg
mov
or
pop
xor
pop
sub
mov
mov
inc
inc
pop
jmp
cwtl
xchg
mov
push
or
or
mov
add
dec
dec
in
cltd
into
inc
rorb
inc
repz
ret
mov
int3
hlt
or
outsl
lods
pop
stos
dec
mov
clc
sbb
fmull
add
in
scas
movl
mov
out
sahf
cwtl
cmpsl
mov
mov
pop
outsb
outsl
push
adc
and
inc
hlt
cmp
popf
push
pop
mov
jecxz
xchg
int
popa
dec
lret
insb
pop
mov
popf
push
ret
testb
pushf
popf
xor
adc
int
push
push
repnz
into
xchg
mov
xor
add
rcrl
dec
or
mov
cld
fbstp
cmp
pop
movsl
call
inc
push
push
cli
cmpsb
push
mov
nop
es
in
bound
pushf
ljmp
popa
mov
mov
or
xorb
or
pop
xlat
lea
loopne
adcb
jp
pop
ror
xor
stc
out
push
jns
sbb
movsb
fldenv
movsl
mov
sti
mov
popf
decl
adc
xchg
std
jnp
pusha
rcrl
imul
pop
pop
scas
pop
cwtl
jmp
lods
add
es
in
jp
push
js
sbb
xchg
in
xor
les
xchg
fstps
jns
addr16
and
mov
rcll
out
pushf
inc
and
push
and
mov
out
cld
repz
mov
sarb
mov
xorb
enter
imul
int
and
xchg
dec
ljmp
cmp
sahf
cmp
jmp
imul
test
xchg
cwtl
sub
push
pop
xchg
jo
mov
mov
push
jmp
scas
and
cmpb
fiaddl
testb
dec
fidivl
repnz
cmp
in
sbb
in
add
sbb
fdivrs
or
jb
sub
inc
popf
pop
cmp
call
pusha
sbb
jp
movsb
jle
inc
gs
fldcw
jne
cld
std
inc
bnd
xor
decl
sbb
imulb
add
jecxz
mov
lahf
pop
jb
aas
push
mov
xchg
lods
mov
mov
popa
sbb
dec
lea
pushf
daa
clc
cmpsb
jno
aam
ret
add
xor
pop
adc
add
cmp
xor
xorb
ret
fadds
dec
lds
repz
fs
loop
jle
enter
xchg
xor
sti
mov
adc
scas
mov
inc
leave
rolb
jb
pop
or
mov
push
enter
aam
aas
jg
mov
sarb
sub
inc
pop
jbe
push
idivb
dec
xor
jmp
imul
adc
into
xchg
lahf
arpl
icebp
adc
fisubrs
icebp
jle
jb
push
mov
pop
sub
sbb
mov
daa
in
mulb
addr16
pop
jb
int3
sub
jnp
les
sti
or
xchg
inc
or
jb
add
loopne
aas
mov
cmp
pavgb
rcrb
int3
sub
and
stos
mov
jge
mov
in
jno
jl
enter
loop
repnz
test
in
outsl
mov
movsb
popa
adc
loopne
or
mov
popf
fwait
mov
imul
aad
mulb
test
pusha
lea
es
xor
in
lea
jo
or
or
enter
cmpsl
xchg
mov
inc
movsb
aas
push
lods
jle
pop
mov
and
pushf
test
mov
sbb
jge
popf
xor
mov
imul
mov
sbb
ffree
insb
fisttps
mov
out
inc
sub
xchg
mov
mov
ret
arpl
and
sbb
insl
daa
sub
sub
jne
jl
pop
push
fistpll
pop
shll
pop
add
outsl
inc
xlat
dec
leave
pop
imul
insl
inc
cmpl
mov
gs
leave
xchg
ds
mov
or
dec
ficompl
sbb
popa
mull
push
pop
xor
dec
pop
inc
stc
sti
pop
push
mov
in
adc
xchg
movsl
mov
aam
dec
jle
mov
sub
inc
rolb
call
fdivl
and
cmp
dec
nop
out
or
mov
mov
jge
enter
lret
xor
shl
lock
insl
stc
jg
ja
fldt
les
rcrl
cmp
xchg
lods
call
jl
inc
divb
roll
jg
scas
add
cmp
sub
push
xchg
mov
and
ds
iret
mov
xchg
pop
cmc
gs
cs
push
and
dec
fdivrl
cmp
cmp
mov
and
mov
xchg
push
mov
sarb
scas
mov
orl
mov
or
adc
lds
movsl
pushf
inc
mov
cltd
test
pop
cmpsb
ret
and
in
add
mov
out
add
pop
jae
addr16
jg
xor
add
mov
pop
faddl
sti
add
ret
ret
jg
data16
lcall
aam
add
cmp
sub
mul
xchg
je
push
popa
mov
mov
adc
mov
sbb
add
sti
mov
inc
adc
add
xchg
sbb
sbbb
sub
and
jb
mov
xchg
ret
movsl
nop
aad
jmp
iret
or
adc
and
add
mov
adc
push
shl
popa
test
add
jge
in
adc
sti
inc
sbb
incl
adc
cmp
mov
adc
xor
cmp
pusha
adc
lds
push
loope
cmp
xor
pusha
sysenter
pop
push
xor
push
out
xchg
lcall
sbb
inc
jnp
push
jae
jo
push
pop
mov
mov
lea
leave
cmp
jge
cmp
daa
cld
or
cltd
mov
inc
lret
lahf
push
mov
outsl
fwait
add
out
in
loop
shl
iret
mov
mov
push
sub
fadd
mov
sub
jg
or
test
das
pop
mov
xchg
jle
jmp
pop
jnp
sub
rcrl
jge
xchg
call
outsb
jge
std
aaa
sub
mov
mov
pushf
cwtl
movsb
jecxz
cmpsb
rcll
pop
scas
sbbl
outsb
jle
xor
xchg
test
inc
xchg
arpl
xor
into
popa
arpl
outsl
gs
rorl
popf
loop
cli
iret
add
adc
popa
add
pop
lds
pop
mov
push
or
ja
push
icebp
or
or
sub
jge
xor
lret
and
or
mov
dec
je
add
or
xchg
dec
leave
mov
scas
fidivl
js
fcomp
inc
movsl
insl
pmaxsw
lahf
adc
and
shr
adc
imul
push
pop
stos
and
cld
lret
rcrb
mov
cmp
xchg
sbb
xor
push
inc
jmp
adc
sub
adc
pop
mov
adc
shr
daa
lcall
lahf
fsubl
and
dec
pop
cmc
in
sbb
cmpsl
pusha
push
mov
mov
nop
mov
cmp
adc
fs
sbb
je
addr16
shl
jb
cmp
pop
or
jp
shl
mov
dec
and
mov
mov
icebp
lods
xchg
jmp
dec
xorb
jmp
es
pop
icebp
cmp
push
pop
test
mov
push
adc
xchg
push
mov
jo
add
loop
push
shlb
in
xor
bound
movsl
inc
fs
and
clc
jno
sarl
mov
movsb
pushw
imul
dec
je
mov
mov
add
jmp
mov
pop
and
push
mov
push
in
add
aaa
int3
movl
sbb
and
popa
mov
loop
dec
dec
int
mov
es
arpl
push
rol
or
push
xchg
xchg
add
fidivrl
pushf
xor
push
jle
cltd
adc
xchg
nop
rclb
xlat
out
and
test
cmc
dec
mov
ljmp
inc
enter
stc
cmp
insb
jb
test
mov
jno
mov
ret
insl
mov
fs
rol
rcrb
jns
sbb
adc
ds
pusha
imul
nop
and
xor
in
fsub
ja
mov
into
vpavgw
mov
movsb
cltd
adc
dec
jp
imul
jp
test
add
test
push
int
cwtl
inc
mov
or
jbe
xchg
cmp
xchg
in
push
ss
ja
inc
pop
imul
stos
jecxz
lret
mov
mov
ret
jo
or
imul
push
fldenv
add
ss
or
leave
dec
mov
sbb
popa
xor
frstor
jge
jb
divw
inc
pop
sbb
add
push
sub
sbb
push
nop
repnz
icebp
push
rcr
popl
in
inc
and
xchg
sahf
addl
push
push
daa
shl
popa
out
mov
js
insb
popa
and
rcrb
int
out
and
roll
mov
call
dec
loop
test
movsl
das
aam
xchg
dec
mov
sbb
call
pop
mov
dec
push
add
pop
sbb
add
cmovg
push
test
pop
mov
popf
bound
push
inc
sub
movsb
and
dec
add
add
test
insb
jecxz
rorl
es
cmp
mov
addr16
mov
push
rcr
testl
lret
fisttpl
jmp
sahf
insl
cmpsl
bound
cmp
add
mov
cmpsb
sbb
rorl
or
js
int
inc
add
or
aam
shlb
push
les
sbbb
ljmp
adc
cmp
push
mov
fldenv
xlat
imul
fwait
sarb
xchg
aaa
mov
jg
or
pop
fs
cmp
movsl
xor
jecxz
cwtl
iret
xchg
pushf
pop
daa
adc
adc
push
push
test
mov
ds
in
xchg
xor
mov
pop
fimuls
fldt
xchg
pop
call
push
leave
cmp
jae
mov
xor
push
pop
xchg
jmp
imul
jle
in
add
outsb
rcrb
jmp
rol
hlt
inc
cmc
and
scas
mov
call
movl
and
iret
push
fldl
test
jg
inc
cmp
icebp
ficoml
js
fstl
repz
xor
lret
push
sbb
je
dec
mov
jae
imul
jmp
xchg
out
outsl
fcmovnbe
insl
cmpsb
lret
sub
outsl
jl
dec
scas
mov
push
arpl
cwtl
ret
sahf
jl
repz
cmpsb
mov
push
iret
pop
repnz
leave
shrl
mov
scas
aas
push
incb
adc
xchg
scas
hlt
adc
fisubl
scas
mov
mov
pop
xchg
dec
sbb
ljmp
adc
aad
mov
movsb
sahf
cli
xchg
xor
sbb
cmp
in
jecxz
mov
stos
mov
loopne
add
rolb
push
and
xchg
mov
out
movsb
fisubrl
and
fdivl
inc
sbb
dec
mov
inc
or
mov
ljmp
jp
jne
shrb
mov
enter
pushf
xorb
sti
sbb
add
pop
jno
and
push
test
pop
mov
out
pop
adc
jae
lahf
adc
int
lcall
sbb
xor
in
in
add
sarl
jle
les
or
mov
int3
dec
xchg
dec
stos
fisubrs
pop
pop
add
ficompl
fs
sahf
sahf
nop
sub
aaa
dec
in
mov
adc
cmpsb
shll
dec
sbb
dec
bound
cmp
dec
aad
add
repz
adc
decb
inc
push
push
or
adc
adc
jl
aas
rcll
xchg
sub
fs
lods
xor
push
arpl
xchg
cmc
arpl
or
mov
and
icebp
mov
mov
movsl
andl
pop
and
and
jbe
or
and
mov
roll
jo
cmpsl
sbb
aad
inc
sbb
push
js
or
pop
ret
jbe
or
mov
sbb
loope
int
popa
sahf
in
loopne
adc
cs
add
loop
imul
dec
stos
adc
cmp
or
push
mov
push
mov
out
add
out
pop
cltd
jp
out
sub
enter
xchg
arpl
clc
dec
mov
cmc
pop
xchg
rorl
adc
lods
aas
inc
fucomi
mov
stos
dec
dec
pop
xor
mov
sub
cmp
push
xchg
inc
adc
test
sub
or
lea
xor
cmp
addr16
or
dec
mov
and
push
pop
xchg
in
cmp
bound
outsl
call
and
repz
mov
inc
sub
inc
xchg
cmpsl
aaa
mov
lea
testb
jns
jecxz,pt
jb
push
imul
test
dec
xor
sbb
xchg
cmpb
xorl
mov
pop
mov
mov
not
lcall
push
mov
jl
jns
adc
add
push
mov
push
ret
ds
jbe
or
fcoms
pop
popf
clc
mov
or
in
lret
adc
fwait
cmpsl
fs
xchg
fistps
and
jl
mov
fistps
sub
gs
inc
jl
das
das
bound
xor
jmp
mov
jg
dec
data16
add
mov
ret
js
in
loope
cmpsl
mov
cwtl
bound
sbb
jo
mov
pop
ret
arpl
xchg
xchg
inc
les
xorb
mov
popa
pop
mov
cmp
xchg
data16
adcb
push
xchg
testl
lea
jno
dec
pop
insl
mov
xchg
pop
repnz
addr16
ja
adc
scas
hlt
scas
psrlq
out
cmc
jb
xor
push
and
out
cmpsb
pop
or
addb
sub
xchg
mov
inc
mov
push
mov
jg
ss
add
scas
push
sbb
stos
push
jle
filds
pop
stos
or
adc
push
add
mov
push
stos
push
loopne
cmpb
bound
std
stos
aas
xchg
xchg
mov
test
into
jg
xor
mov
push
pop
in
stos
add
outsb
sbb
push
rcrl
cmp
hlt
fs
hlt
mulb
push
xchg
fisubrl
mov
mov
push
inc
add
int
stos
cmp
js
mov
lds
lods
not
xor
add
daa
sub
mov
outsb
leave
sub
movsb
daa
jl
mov
mov
clc
fucom
loopne
mov
aaa
pop
aam
and
mov
test
enter
mov
pusha
cmp
fstps
adc
aaa
add
sub
sub
inc
add
imul
repz
sbb
adc
je
bound
addr16
in
lock
push
cld
mov
sbb
push
cld
dec
inc
sarl
rcr
add
fs
and
fcmovnb
mov
imul
mov
sarb
movsb
pop
dec
ljmp
enter
inc
das
mov
ret
aaa
push
arpl
ret
inc
shll
sbb
xchg
ret
sbb
repnz
loop
nop
fisttps
dec
dec
fs
sub
addr16
outsl
pusha
imul
or
mov
add
pop
mov
rorl
xor
mov
or
fwait
mov
cvtdq2ps
adc
out
mov
adc
dec
ret
in
aas
mov
test
loope
popa
fisubrl
mov
loop
gs
data16
repnz
jge
adc
imul
popf
pop
fcompl
sub
popf
xchg
shlb
ror
adc
dec
fs
cmpsb
and
sti
mov
or
hlt
imul
xchg
rcr
cwtl
xchg
clc
cmpsl
aaa
enter
inc
inc
cmp
mov
sub
dec
insb
jo
lods
test
cmp
movsb
ds
cwtl
orb
negb
fs
ljmp
in
repz
jmp
jle
dec
imul
inc
daa
dec
and
jo
cwtl
mov
inc
adc
push
pop
lcall
jecxz
jae
movsl
xchg
movsb
pop
mov
xchg
inc
xchg
mov
inc
xchg
sbb
add
ds
push
mov
cmp
add
test
sub
shr
pop
roll
mov
pusha
in
arpl
inc
xchg
sbb
stos
jl
out
cwtl
adc
ret
shlb
es
sarl
jge
int3
push
mov
int3
or
cmp
fimuls
push
fisttps
imul
mov
arpl
cltd
sub
outsb
lea
dec
and
nop
pusha
mov
or
in
jmp
add
push
add
adc
rol
ds
and
int
sbb
jae
sub
fcomip
popf
or
cmp
or
xchg
jno
inc
inc
nop
sarw
mov
cmp
test
push
inc
push
sub
sub
lods
movsb
xchg
or
mov
push
xor
inc
dec
aad
mov
sarl
mov
mov
adc
rcll
dec
out
jno
mov
pop
aaa
jmp
lds
inc
fists
js
jo
dec
sub
imul
dec
lret
push
adc
sub
dec
jno
aam
imul
cmpsl
mov
mov
cwtl
jp
ret
adc
push
push
push
jmp
sbb
loope
sahf
stos
mov
cmc
ret
test
cmovb
inc
push
dec
repz
test
xlat
scas
je
and
xlat
xor
and
sub
out
pause
pop
pop
pushf
cltd
or
push
or
mov
mov
fbstp
movsb
and
add
test
les
lds
cmpsl
out
mov
rcll
ss
xor
les
insl
icebp
xor
add
out
xor
shrl
and
push
pop
data16
js
sti
ds
jne
pop
insb
lock
dec
or
pushf
jbe
adc
adc
xor
movsb
sti
arpl
sarb
jne
fdivl
sbb
cltd
inc
push
test
cmp
dec
xor
lds
rcrb
and
imul
inc
or
sub
sub
dec
adc
js
mov
pop
bound
call
es
in
mov
cwtl
adc
fwait
push
xorl
xchg
adc
cmp
dec
hlt
ret
cmp
dec
xor
popf
out
repnz
hlt
jg
jae
and
filds
xchg
xor
ret
mov
jecxz
roll
cs
ficompl
pop
dec
xlat
pusha
add
fs
adc
and
loopne
dec
loope
daa
push
ds
fcompl
jp
iret
xchg
flds
arpl
add
and
mov
outsb
ljmp
sbb
xchg
clc
inc
and
xor
sbb
mov
inc
mov
outsb
push
xor
leave
sbb
inc
ss
push
call
fdivrp
push
pop
or
test
pop
test
or
xor
and
xchg
jle
imul
mov
push
test
pop
repz
jo
dec
inc
mov
test
je
cli
xchg
repz
adc
out
fwait
pop
mov
pop
mov
fdivrs
repz
or
sub
push
js
sbb
jo
mov
pop
push
cmp
jnp
mov
push
addb
push
lret
pop
aas
bound
xor
mov
mov
loop
pop
mov
icebp
and
cmp
inc
imul
mov
xor
js
arpl
cmp
add
or
cmc
xchg
repz
and
mov
fsubr
dec
cmp
push
daa
andl
or
jp
inc
dec
lods
mov
js
push
cmp
jl
sub
push
cmpb
daa
xchg
sbb
push
out
cmpsb
mov
add
rcr
inc
xchg
lods
fimull
jmp
xor
lret
das
jne
and
mov
dec
dec
cmp
inc
pop
leave
mov
repz
faddp
icebp
bound
xor
jnp
out
mul
sbbl
xlat
cld
xor
popf
jne
in
rolb
mov
cmp
sbb
aam
mov
pop
push
lret
xor
mov
and
in
leave
jmp
xchg
aad
inc
inc
fdivrl
cmp
stos
mov
andl
arpl
xchg
es
push
pop
mov
jge
jl
jo
icebp
pop
sub
jmp
jb
adc
test
xchg
in
jge
xor
scas
sbb
jp
adc
sub
sub
push
and
mov
sti
or
inc
cmp
jecxz
frstor
cwtl
adcl
out
aas
sbb
jb
pop
dec
inc
rcll
sbb
add
lods
les
xchg
xchg
aas
aas
leave
lds
inc
lret
dec
lods
sub
sub
es
cwtl
mov
testb
stos
and
xchg
and
dec
mov
jne
loop
insb
or
aam
hlt
jp
inc
push
fistpll
int3
jno
arpl
in
xchg
cmp
mov
out
add
cmpb
jno
test
in
mov
pop
pop
add
out
or
inc
xchg
mov
push
cmpsl
and
pop
push
inc
mov
out
loope
addl
lea
adc
shlb
inc
in
sti
ret
stos
or
lcall
dec
shr
dec
lahf
into
mov
ljmp
divb
fmull
pop
test
mov
icebp
push
cmp
sti
sbb
xchg
mov
sahf
jno
and
push
adc
mov
mov
mov
push
rcrb
sbb
adc
lret
mov
bound
mov
cmp
mov
dec
mov
lahf
ret
mov
fistps
in
mov
mov
push
cmp
clc
jne
lret
enter
push
adc
fs
lods
fisubrl
sti
mov
test
daa
mov
sbb
mov
stos
or
cwtl
dec
lret
test
imul
push
mov
push
push
pop
mov
sbb
in
mov
ljmp
jnp
in
mov
ja
out
test
adc
mov
dec
cs
cli
aam
cmc
out
or
xor
js
xchg
jl
fdiv
scas
push
fs
test
inc
or
mov
repnz
out
xchg
mov
mov
inc
pop
loopne
gs
mov
lcall
xor
or
mov
adc
mov
dec
aam
subb
xor
mov
mov
dec
js
add
sbb
dec
repnz
stc
into
dec
jb
sbb
shl
and
jmp
dec
lcall
push
mov
pop
out
sbb
enter
mov
aas
repz
mov
fistpll
inc
sarb
stos
ja
arpl
aam
mov
ficoml
mov
int
std
jnp
rorl
xor
fistl
vpmullw
insb
pop
push
cmpsb
fwait
cli
push
mov
ret
cmpsl
jl
xor
cmp
pop
cmc
cmpsb
xor
nop
jl
dec
mov
mov
rolb
insl
orl
mov
lahf
mov
jge
xchg
js
pop
jns
inc
xchg
dec
xor
sti
stos
add
mov
stos
outsl
fldcw
imull
les
fiaddl
push
and
xlat
aad
addr16
jle,pt
iret
ret
xchg
mov
xchg
jb
jp
mov
and
int3
xor
or
mov
jmp
fmuls
popl
push
sbb
insl
scas
sub
out
jg
mov
sbb
xor
mov
ss
pop
jecxz
imul
xchg
jle
ds
inc
insb
sbb
lea
mov
push
cmp
ret
test
fsubs
or
pop
mov
mov
sti
aad
les
rorl
xchg
mov
sub
add
repnz
mov
ficomps
rclb
pop
imul
rorb
xor
addr16
out
mov
mov
sub
and
mov
in
add
fimull
dec
insb
jno
or
cltd
sbb
mov
xchg
shr
sar
rorl
inc
outsl
js
fstpt
outsb
lods
mov
mov
in
daa
push
pop
jo
test
and
xchg
out
cld
dec
cwtl
and
and
mov
dec
pop
xchg
mov
and
xchg
and
xor
clc
arpl
mov
pop
dec
jge
mov
outsl
mov
push
cmp
scas
and
das
fisttpll
fistl
imul
sbb
cltd
into
lcall
dec
lds
das
cmp
adc
or
fwait
test
into
out
rorb
das
icebp
sti
inc
in
inc
push
mov
nop
mov
and
fwait
orl
lods
rorb
sbb
scas
jae
mov
aam
filds
mov
xchg
rorb
pop
movb
lahf
cmovs
rcll
sahf
ret
daa
cltd
fidivrs
jnp
xor
mov
lds
sub
sbbb
and
push
pop
int3
pop
add
cmp
adc
inc
sub
in
and
mov
fcoms
adc
xorl
inc
aad
insb
and
fdivr
xchg
xor
ret
jb
adc
mov
sub
or
sbb
pop
shrb
rcll
lcall
mov
mov
test
idiv
mov
jp
movsl
stos
dec
adc
sub
and
loopne
imul
popa
inc
jle
mov
cwtl
xchg
ret
ds
xor
adc
mov
loopne
jae
movsl
cwtl
shr
pop
push
popf
movb
mov
pop
jno
pop
xchg
mov
xchg
sarb
insb
mov
loope
push
mov
xor
sbb
pop
pop
sahf
jbe
dec
and
mov
sub
ljmp
pop
xor
cmpsb
loop
iret
pop
cli
dec
sub
imul
addr16
jmp
adc
mov
jl
pop
out
xor
xor
pop
cmpl
daa
adc
and
repnz
pop
imul
icebp
mov
dec
adc
test
into
inc
xchg
or
test
and
test
mov
and
lret
sahf
pop
jge
add
fidivl
les
dec
out
xchg
pop
or
jb
mov
std
dec
sbb
dec
popa
mov
adc
mov
xor
xlat
shrl
lock
push
cmp
sbb
sbb
rep
lods
stos
jl
mov
push
pop
lahf
loope
xchg
test
cltd
jmp
ja
add
cmp
mov
or
cld
int
imul
add
in
xor
dec
lret
xchg
cmp
sub
fsubrs
inc
call
movsb
sahf
outsb
addl
cmp
loope
push
pop
and
jg
pusha
test
xchg
int3
and
xchg
popa
dec
les
or
add
movsl
mov
jecxz
bound
scas
addl
insl
addr16
push
push
sbb
bound
xlat
push
xchg
subl
insb
adc
push
call
stos
and
rcl
or
add
insl
int3
sub
adc
or
pop
outsb
mov
dec
mov
cmp
adcb
mov
or
arpl
test
and
xor
sahf
out
inc
imul
push
sub
insb
dec
mov
mov
popf
stos
imul
pusha
cmp
insb
add
ret
icebp
xor
mov
dec
nop
dec
test
jmp
sbb
mov
cltd
adc
pusha
adc
and
dec
ret
or
popa
add
sub
and
push
jmp
mov
fcmovb
ror
lret
jmp
dec
jno
aas
jns
ret
jecxz
fsub
dec
aas
je
or
mov
xchg
fwait
das
negb
loop
rol
test
jle
dec
add
movsb
or
lea
test
push
bound
jle
ds
in
and
cmp
and
sbb
repnz
repz
inc
test
out
hlt
push
mov
je
movsb
rcrb
test
mov
test
in
cwtl
int
mov
insb
mov
lahf
cltd
fcmovb
mov
aas
aad
adc
andl
test
sarb
mov
or
inc
pop
mov
test
add
xchg
mov
inc
adc
mov
mov
test
pop
pop
jmp
jb
sub
mov
sbbl
test
cmp
inc
loop
pop
test
push
or
cmpsb
cmpsb
mov
lods
not
jg
jnp
loopne
and
dec
or
xchg
or
bound
push
cs
jp
push
cltd
or
popa
scas
xlat
scas
xor
adc
add
pop
jmp
sub
movsl
push
jbe
xchg
cmp
aas
xchg
pop
stos
rclb
outsb
test
lret
mov
jb
jbe
sbb
sbb
int3
jmp
int3
lock
mov
and
clc
popa
in
push
jp
mov
sub
adc
dec
fcoml
pop
loopne
push
cmp
dec
orb
int3
mov
pop
add
xor
add
inc
adc
mov
fmul
push
mov
aas
clc
add
dec
cmpsl
je
xchg
stos
hlt
cmp
enter
push
mov
sahf
dec
or
or
cld
cmpsb
icebp
inc
sarl
and
cs
roll
sti
mov
mov
jge
dec
out
or
aaa
sub
mov
test
mov
push
add
pop
das
inc
mov
sub
cli
adc
inc
xor
jl
or
setg
adc
jns
mov
pop
sarb
inc
in
xchg
popf
add
lea
fsubs
and
sub
mov
xlat
outsb
ja
dec
adc
imul
les
test
iret
sbb
xchg
sti
in
xchg
mov
or
mov
jmp
jle
or
sub
xchg
mov
mov
push
inc
mov
movsb
shlb
mov
mov
into
xor
in
leave
mov
repnz
lahf
int3
push
lea
stos
mov
cmpsl
mov
add
ror
pop
int3
test
push
outsl
fisubrl
cmp
sbbb
imul
cwtl
inc
and
add
sub
lds
fs
fnstsw
push
pop
mov
and
in
aaa
fnsave
push
stos
pop
cmp
outsb
test
int
daa
call
push
jns
push
inc
rcrb
int3
sti
out
and
out
lock
movsl
aad
push
dec
into
push
or
jbe
pop
xlat
adc
adc
push
enter
xchg
sbb
inc
clc
xor
ja
in
add
loope
mov
fisubrl
in
inc
sbb
dec
xor
and
xor
sbb
fs
dec
fs
inc
rorl
push
mov
stc
pop
mov
and
aad
add
dec
xchg
mov
xlat
lods
ret
clc
out
mov
or
loope
cmc
inc
int
repnz
pop
lods
js
or
mov
fwait
pop
test
adc
mov
jbe
fidivrs
dec
cli
stc
nop
sbb
and
mov
data16
dec
sahf
dec
bnd
cld
mov
or
mov
inc
popf
adc
stos
fucomi
cs
jp
mov
outsb
xor
dec
push
or
pop
xlat
les
and
movsb
fwait
xchg
repz
mov
jb
mov
cs
int
mov
je
jle
aas
jae
ds
mov
popf
xorb
sub
ljmp
mov
in
inc
scas
aaa
outsb
add
aaa
clc
xor
and
outsb
fcoml
jno
add
mov
imul
mov
aad
inc
cmovae
sub
aam
test
ljmp
cmpsb
dec
pop
nop
xor
cli
in
sub
add
das
sub
lret
das
nop
cmp
jbe
cmp
jg
jle
shlb
sub
sbb
or
jl
mov
mov
sbb
or
jnp
mov
iret
pop
xor
inc
rclb
inc
xchg
jg
jne
push
cmp
lahf
cli
frstor
jne
ljmp
adc
lret
add
sbb
push
sti
loop
enter
jb
mov
jle
call
ljmp
mull
enter
mov
add
xlat
xor
arpl
fidivrs
gs
push
push
aam
push
adc
add
imul
or
sbb
gs
test
inc
pop
pop
and
int3
jmp
sahf
sub
loop
fwait
mov
js
dec
gs
bound
push
out
test
out
xor
mov
jg
mov
cmp
push
jnp
fwait
les
pusha
mov
sbb
push
ret
rol
sub
mov
int3
cmp
pushf
movl
mov
clc
aam
shrl
xchg
fmuls
and
ds
lcall
sub
stos
jbe
xchg
stos
lea
lret
es
sub
fwait
add
xrelease
adc
jne
lods
ljmp
loopne
push
repnz
aad
popl
cmpsl
lock
insb
test
bound
je
fwait
aaa
and
dec
pushf
test
jnp
dec
outsb
push
sub
inc
inc
imul
gs
notb
stos
adc
inc
arpl
ret
mov
jns
popa
add
pushf
dec
and
xchg
push
inc
or
test
push
mov
test
add
mov
push
dec
ret
mov
add
push
fimuls
inc
mov
arpl
jb
js
xor
mov
test
decb
mov
addl
push
or
push
pop
push
xchg
push
push
mov
fs
rorb
jmp
cmp
xchg
fnsave
dec
mov
sbb
dec
pop
or
repnz
and
sub
adc
loopne
cwtl
jns
lcall
or
mov
sub
sub
in
inc
sbb
and
pop
adc
xchg
int
xchg
pop
js
adc
call
test
cmp
mov
pop
shrl
test
mov
pop
pop
cs
imul
dec
pop
outsl
sti
pop
adc
jecxz
add
sti
sub
dec
xchg
xor
cmp
movsb
movl
imul
dec
cwtl
stos
fadds
mov
stc
pusha
jge
icebp
loopne
pushf
mov
cmp
popf
cmp
adc
mov
xor
mov
cmp
or
jmp
dec
cmpb
cmp
cwtl
aad
dec
pop
xchg
cmp
sahf
rolb
or
rcr
xor
inc
mov
pop
jo
notb
push
dec
icebp
data16
cld
fdivr
ret
lahf
mov
xchg
push
repnz
xor
sub
fisubrl
test
sbb
repz
popa
adc
lods
outsl
adc
xor
jae
adc
mov
fnstsw
and
mov
pop
stos
pop
hlt
arpl
jle
outsb
sub
xchg
daa
cmp
push
mov
pop
xchg
cmp
adc
jle
ja
fcoml
cmp
ret
cmp
adcb
hlt
data16
int3
ret
mov
daa
dec
in
lret
mov
repnz
inc
insb
cmp
shrl
pushf
inc
push
movsl
call
aaa
sub
shlb
movsl
adc
dec
imul
cld
mov
dec
jge
push
outsl
lcall
mov
mov
imul
push
pop
sub
imul
fiaddl
test
shrl
lods
out
sub
iret
mov
scas
mov
inc
in
aad
or
int3
test
xlat
add
mov
sti
mov
fxch
push
mov
mov
push
outsl
pushf
mov
pusha
adc
jle
jle
inc
fldl
mov
lret
dec
push
sarl
cmpxchg
inc
dec
and
xor
add
std
sbb
ljmp
cmp
adc
mov
imul
add
sahf
or
jmp
xchg
mov
lods
mov
adc
decl
adc
cld
in
xor
aas
cltd
cmc
fsubrs
cwtl
pushf
dec
in
add
mov
fldenv
clc
out
in
xor
sbb
inc
cvtps2pi
cli
mov
aas
std
or
dec
mov
lahf
pop
stos
lds
adc
mov
sub
sbb
es
pop
in
jnp
mov
icebp
push
scas
shr
jae
mov
in
mov
repz
cmpsl
cmp
or
mov
shl
jb
enter
cmpb
mov
mov
andb
push
cmpps
xchg
insl
sub
pusha
pop
loope
inc
mov
inc
test
and
int
jne
sbb
cmpsb
arpl
fldl
popa
dec
je
jmp
out
jg
mov
mov
ficoml
sub
ljmp
shlb
push
inc
lods
adc
inc
fcmovu
mov
cmp
aas
insl
push
mov
mov
out
xor
jns
addr16
add
pop
leave
xor
inc
mov
or
mov
stos
lret
popl
mov
jecxz
sbbl
loop
pop
addr16
out
scas
pushf
xchg
sub
fstps
adc
pop
es
mov
out
loope
jle
bound
into
add
push
push
mov
jo
lods
gs
shr
xchg
inc
and
dec
xchg
mov
add
jb
sub
in
pushf
mov
sub
jl
adc
inc
inc
repz
jmp
fistl
mov
jo
shlb
mov
push
stos
xchg
mov
cmp
push
sub
jnp
stos
xor
cmp
mov
mov
sub
loop
subl
lea
pop
dec
or
scas
or
loop
fwait
dec
cmp
xor
cmpsb
adc
leave
fstps
into
loop
pop
fidivl
imul
icebp
pop
in
cli
and
negl
xor
mov
das
jp
dec
lcall
jns
xchg
inc
test
es
in
pop
imul
jno
scas
imull
jle
sub
jno
rcrb
add
pop
jmp
mov
xchg
adc
lods
in
sti
jmp
icebp
out
outsb
adc
sub
mov
mov
push
mov
mov
xor
imul
push
call
sub
stc
add
vmread
jno
push
lret
stos
lcall
inc
sbb
push
pop
push
pop
jne
push
jno
lret
or
addr16
in
ja
or
mov
scas
and
mov
cmpsl
stos
jnp
xchg
stc
or
sahf
cmp
cld
push
push
jns
loope
lcall
xchg
sub
cmp
andb
xchg
sbb
insl
pop
or
les
xchg
or
cmp
and
hlt
es
iret
movsl
cld
insb
dec
fcomi
and
jp
pop
push
insb
imul
xchg
mov
and
mov
pop
or
movsb
inc
clc
inc
in
dec
pop
or
lret
push
xor
cmp
jp
push
lods
dec
jle
jge
call
cmp
pushf
mov
aaa
pusha
push
fwait
mov
sbb
ret
push
insl
add
mov
push
fisubl
or
xor
xchg
lds
ljmp
shl
and
out
icebp
scas
in
das
movsb
push
dec
pop
in
mov
dec
mov
loope
pop
xchg
loop
decb
sahf
out
sbb
mov
jmp
mov
adc
mov
test
pop
jnp
or
fnstenv
mov
jl
push
jno
pop
mov
and
mov
lret
and
push
leave
outsl
cwtl
int3
push
xor
imul
loope
mov
push
xchg
mov
mov
pushf
sahf
iret
rorb
les
sub
xchg
sar
inc
jb
int3
xchg
mov
xor
and
sub
aaa
add
orl
cs
cmpsb
test
outsb
mov
rclb
pop
cmpsb
lock
loopne
pxor
mov
inc
xlat
in
add
andb
push
sub
mov
pop
imul
or
dec
leave
xchg
pop
das
pop
and
dec
mov
outsb
lds
lahf
je
push
jp
sub
mov
xor
dec
or
inc
push
cwtl
mov
das
lea
sbb
xchg
jb
nop
fsubrl
jbe
fwait
push
cmp
sbb
cmc
lret
mov
in
rcrl
cmp
and
push
add
aas
xor
push
daa
nop
dec
adc
push
dec
in
cld
mov
mov
fcoms
dec
icebp
dec
repz
imul
and
mov
test
test
int3
xor
aad
ss
loope
pop
mov
xchg
fists
pop
in
push
out
mov
lcall
enter
gs
push
iretw
movsl
push
adc
cmp
jno
dec
cmpsb
and
sbb
int3
out
push
bound
and
dec
mov
test
gs
pop
xor
pop
fisttps
les
lea
pop
loope
dec
insb
mov
dec
pop
xchg
push
ret
out
vpbroadcastb
bswap
xchg
xchg
stc
push
or
mov
add
dec
xchg
popa
stos
fiaddl
cmpsl
frstor
cmpsl
dec
fimull
adc
rclb
jmp
push
decb
inc
adc
lcall
dec
stos
sbb
popf
push
testl
mov
cmpsb
xchg
lock
cmp
pusha
mov
leave
sub
mov
mov
lods
out
sbb
lods
mov
ret
cmp
sub
fucomip
repnz
imul
ficomps
arpl
push
aaa
jmp
ret
dec
jmp
push
pusha
imul
push
addr16
cmp
scas
push
bound
movsb
add
je
ja
mov
js
fmuls
movsl
adc
xor
inc
dec
fistpl
cltd
inc
or
inc
add
sbb
sub
xchg
sar
pop
xor
and
or
mov
dec
fisttpl
dec
mov
jge
pop
dec
rcrb
mov
lret
iret
and
inc
lret
or
xchg
xchg
cmp
xchg
inc
arpl
mov
andl
jle
pop
pop
insl
push
cmpsl
daa
xchg
pop
rorb
arpl
mov
push
scas
stc
bound
imul
ss
or
push
loopne
mov
xor
jg
lods
pop
leave
and
jecxz
sub
mov
loop
or
pop
test
add
data16
shlb
loope
aad
dec
rol
movsl
fscale
fldcw
lret
addr16
mov
sbb
sub
mov
in
lret
adc
and
pop
in
inc
jg
mov
jb
les
mov
daa
push
mov
xchg
adc
or
data16
adc
xchg
loopne
insl
xor
mov
leave
jl
je
mov
dec
or
fimull
cmpsl
mov
bound
scas
inc
mov
mov
imul
fisubs
stos
mov
loop
sarl
sub
shl
gs
jle
pop
int
testb
dec
sar
mov
shll
mov
xchg
ljmp
xchg
inc
add
dec
push
inc
jb
fdivp
mov
cmp
sti
push
ds
push
mov
xor
inc
mov
iret
push
cld
mov
rcll
or
movd
jnp
aad
dec
test
push
xchg
sub
test
mov
pop
loope
icebp
push
loope
inc
shr
fsubl
inc
sbb
or
cs
arpl
pop
not
scas
push
xchg
jbe
mov
pop
push
sbb
cmp
shrl
repnz
mov
arpl
mov
ss
mov
lods
in
mov
xlat
cld
push
popa
gs
rclb
test
push
jne
arpl
inc
lock
mov
aaa
scas
enter
sbb
stc
jns
lods
mov
insb
mov
orl
imul
mov
push
add
push
push
xor
sub
pop
out
outsb
decl
mov
aam
inc
rcrb
clc
and
mov
ror
rcrb
outsb
jae
int
insb
gs
mov
mov
ljmp
clc
stc
jns
lret
arpl
xor
sub
sbb
test
push
push
fsubrl
pop
inc
dec
or
add
test
iret
jae
xchg
rcrb
inc
mov
push
fnsave
adc
scas
inc
in
add
out
repz
fstpt
push
mov
xor
mov
xor
mov
jb
insl
mov
jbe
scas
and
ja
mov
sub
hlt
daa
ret
xchg
out
and
jae
scas
inc
pop
push
push
mov
push
out
sub
lret
pop
pop
outsl
mov
test
pop
ss
iret
repnz
xchg
sarb
out
and
push
sbbb
je
inc
mov
sbb
xor
stc
add
inc
dec
repz
das
data16
adc
jae
mov
add
push
jae
adc
jmp
xorb
insl
ret
lods
add
test
adc
les
test
fs
add
je
push
movsl
in
inc
xchg
les
fst
pop
push
je
mov
mov
jb
mov
test
rcrl
xor
adc
adc
cmc
lret
addr16
fstpl
pop
push
shll
mov
add
mov
in
fists
dec
data16
mov
mov
adc
and
icebp
xchg
jge
test
lods
clc
cs
fdiv
mov
pmullw
push
or
repz
lcall
pop
jno
mov
dec
add
ss
ret
jo
add
or
push
les
mov
push
pusha
sbb
sbb
xchg
mov
mov
xchg
gs
scas
cmc
adc
mov
jle
inc
test
push
fistpl
sub
add
mov
cmp
out
repnz
jae
fsubr
jle
or
mov
push
mov
xor
outsb
jecxz
pop
les
mov
cmp
gs
in
mov
adc
push
sar
addl
addr16
in
inc
xchg
jae
xor
pusha
sub
ss
jno
dec
je
lret
jb
mov
or
cmp
mov
lds
or
sub
mov
inc
sti
pushf
popl
pusha
popa
push
mov
stos
insb
xchg
lret
jne
mov
cmp
push
mov
xchg
frstor
add
popl
pop
or
es
idivl
adc
subl
daa
adc
fisttpll
sarb
mov
and
adc
mov
pop
push
add
adc
cli
out
mov
stos
xchg
movsl
mov
dec
shlb
sbb
ss
idivb
cld
popa
jae
adc
or
int3
dec
mov
jno
imul
mov
cltd
repz
je
pop
jp
xor
pop
xor
mov
into
inc
cmp
fistpl
js
push
mov
popl
and
sbb
mov
xor
adc
dec
dec
adc
pop
push
jle
adc
cmpsl
xlat
xorl
lret
int
cwtl
dec
loope
subb
icebp
dec
xor
cmp
repz
xor
inc
mov
push
inc
adc
addb
dec
mov
loope
sbb
jmp
mov
test
mov
lods
inc
sub
dec
daa
aas
mov
push
push
jmp
or
jo
pusha
lock
inc
pop
jp
jb
icebp
sub
das
pop
push
mulb
jg
sub
push
lods
sbb
dec
add
mov
mov
sub
mov
and
push
ja,pt
or
ret
dec
lds
js
insb
frstor
or
sub
jmp
out
mov
les
gs
outsl
pop
into
in
adcb
and
cmp
insl
clc
add
das
fimuls
push
cmpsl
sbb
mov
jg
push
and
in
shlb
jg
mov
fadds
rcrb
data16
xor
movsb
xchg
add
push
or
leave
push
add
ds
rorb
loop
lret
mov
jbe
jb
gs
pushw
loope
lret
andl
cmp
xchg
and
and
ja
arpl
call
sub
out
arpl
mov
and
and
cmpsb
mov
push
cmp
out
cwtl
sub
pop
pop
test
fsub
sti
or
iret
mov
faddp
xlat
sbb
ja
arpl
lret
mov
push
int
hlt
test
xchg
adcl
xchg
sti
cmp
push
test
pusha
pop
nop
push
push
mov
xchg
jb
lcall
enter
and
mov
test
test
pop
push
in
sbb
xor
mov
int
and
cld
xchg
lds
lahf
or
jmp
adc
dec
jb
in
push
out
js
enter
jp
cmc
pushf
jnp
lahf
inc
add
in
cmp
push
lret
fdiv
cmp
push
data16
push
jb
or
or
sub
push
mov
in
xor
mov
mov
fucomip
xchg
aaa
aam
sbb
jge
xchg
lock
jg
adc
mov
mov
xchg
adc
adc
lock
pop
jne
and
adc
fmul
test
out
mov
call
fists
mov
mov
push
xorb
mov
jmp
jne
push
adc
sarl
pop
or
sarb
cmpsb
loopne
mov
inc
xchg
push
lods
add
jnp
iret
dec
xor
mov
bts
aad
jo
push
pusha
lret
cmpsl
dec
fildll
fisttps
or
ret
stc
ret
fimull
push
add
ffree
cmpb
es
or
outsl
mov
pop
les
test
push
mov
ds
and
sahf
sbb
push
aam
cs
stc
popa
mov
add
mov
inc
or
pop
mov
shll
pop
hlt
subl
pop
dec
cli
sub
cltd
shll
popf
jbe
inc
mov
shrb
int
add
cltd
xlat
aaa
mov
stos
int3
mul
push
mov
out
sti
loop
cmp
pop
cmp
scas
lds
in
pop
adc
repnz
mov
dec
filds
out
mov
sbb
les
mov
cltd
fnstcw
or
mov
fstl
and
xor
cs
dec
jae
cmpsl
sub
lea
imul
lret
cli
cltd
mov
leave
adc
in
sahf
pushf
fsubl
push
mov
nop
xchg
fwait
mov
push
mov
mov
mov
fwait
sub
mov
into
testb
sbb
fcoms
dec
cmp
cmpsb
repnz
jl
push
xchg
fdivl
pop
arpl
rol
fidivl
repz
mov
js
sub
cmpsb
mov
scas
repnz
mov
imull
cltd
add
dec
mov
pop
insl
xor
xchg
xchg
mov
insl
mov
out
push
flds
shlb
mov
dec
mov
out
stos
dec
mov
lcall
shrl
cmp
mov
inc
inc
ja
es
je
push
pop
iret
xor
negb
mov
out
shlb
sarl
sbb
pop
lods
push
test
cltd
mov
mov
cmp
sarl
aas
push
inc
ds
xor
sarb
iret
dec
push
mov
or
fisttps
sahf
lock
dec
xor
inc
sub
js
lret
cmpsl
sbb
cmp
push
negl
adc
cs
das
sbb
lcall
inc
mov
adc
pop
hlt
jnp
inc
in
das
push
ret
fisubrs
add
add
bound
xchg
andb
adc
mov
stos
push
dec
mov
push
xchg
push
cmp
ficomps
mov
mov
rcll
js
cmp
ljmp
dec
add
adc
stos
xor
dec
pushl
aad
push
fcompp
daa
sub
out
mov
sbb
mov
cwtl
mov
xchg
push
and
or
jno
xor
or
shlb
movsb
lahf
in
push
or
scas
shl
or
inc
gs
mov
ffree
in
xchg
sub
jae
pop
mov
cltd
push
add
data16
push
sub
mov
adc
xorb
mov
sti
jge
adc
jno
enter
jb
sbb
and
add
pop
jbe
cwtl
in
and
mov
jne
stos
dec
cmp
aaa
adc
mov
aas
shll
xchg
subb
jecxz
cld
pop
push
mov
dec
inc
leave
orl
ljmp
sbb
les
jecxz,pt
mov
sub
andb
cld
rol
mov
sbb
xor
and
pusha
sbb
cltd
dec
mov
mov
dec
jne
push
xchg
xor
test
add
pop
enter
lret
loopne
and
lea
inc
lea
hlt
sbb
add
sbb
insl
lahf
mov
cmp
insb
add
pop
pusha
sbb
stc
enter
pop
mov
cmp
stos
das
pop
and
es
sub
notb
ret
xor
mov
inc
call
decb
loope
frstor
aaa
mov
lea
sbb
mov
mov
jbe
adc
add
int
pop
cli
push
ljmp
push
cmp
arpl
out
lods
pop
stos
mov
sub
out
push
mov
clc
xor
in
data16
pop
out
xchg
push
pop
out
je
dec
fldl
add
lret
mov
sub
bound
and
fadd
add
pop
fistps
stc
aam
pop
aaa
sbb
inc
call
sbb
loope
idivl
xor
out
int3
leave
and
push
cld
outsl
arpl
push
inc
cmpsb
ret
cmp
leave
push
sti
outsl
repnz
jns
xor
pop
int3
fidivl
ret
mov
push
arpl
xor
jp
ret
repnz
shll
or
stos
mov
jo
and
pop
xor
dec
pop
mov
xor
adc
jo
xor
mov
mov
stos
hlt
and
in
and
sub
scas
mov
push
xor
stc
inc
and
xchg
int3
fsubrp
mov
mov
sbb
xchg
mov
adc
inc
nop
fldt
xchg
pop
jnp
adc
pop
ret
mov
and
mov
cmpl
sub
lret
dec
into
mov
mov
pop
mov
repnz
test
and
lods
and
mov
mov
mov
sub
aas
mov
out
rcrl
lea
mov
sarb
sti
xor
loope
in
scas
in
xchg
out
adc
mov
push
xchg
clc
dec
adc
repz
adc
jecxz
aad
idiv
mov
mull
sti
xchg
cmpsb
cmp
xor
pushf
or
int
out
clc
lea
push
mov
repnz
cld
cltd
clc
lds
adc
or
movsb
lret
in
or
jmp
xchg
out
js
inc
pop
or
vmovdqa
xchg
aam
cwtl
xchg
pop
pop
outsl
pop
icebp
in
adc
es
dec
and
pop
dec
ffreep
mov
pop
clc
jp
push
sbb
push
ljmp
test
iret
mov
outsl
jg
jb
fwait
push
repnz
aas
jno
and
repz
mov
push
iret
sbb
in
adc
rcl
pop
push
fs
jle
dec
dec
mov
ficoms
ja
pushf
mov
dec
inc
push
xchg
pop
add
shl
setb
call
gs
bound
loop
mov
ret
aam
xor
sti
jg
adc
jo
xor
mov
pop
seto
das
add
ret
inc
pop
shl
pushf
xchg
das
stos
cli
adc
ss
pop
mov
sbb
inc
into
mov
mov
push
mov
add
mov
inc
inc
jl
lods
sbb
rcrb
fsubl
mov
lock
hlt
mov
sbb
adc
rorb
ret
mov
adc
pop
push
or
data16
jne
jnp
sbb
lahf
ja
inc
mov
pushf
mov
imul
inc
lods
push
js
push
mov
sbb
in
imul
pop
mov
scas
dec
lds
jmp
out
fimull
and
xchg
mov
dec
in
jg
adc
idivl
xor
fs
inc
pop
lds
pop
cmp
push
mov
lods
and
pushl
iret
jp
test
shl
fs
cmp
sbb
fs
mov
pop
adc
mov
aam
jno
mov
xchg
dec
sub
shlb
adc
in
mov
add
cmp
xchg
ds
loop
fwait
or
loope
cmc
xor
sbb
or
or
pop
xchg
mov
pop
dec
lea
rcrl
mov
lea
popf
sub
cmpl
lods
add
ret
or
inc
cmp
outsb
ret
cwtl
sbb
fidivrs
pusha
loopne
push
test
inc
inc
dec
add
fisubl
rcr
outsb
xor
sub
add
call
std
xchg
ret
xchg
sbb
or
mov
lods
imul
pop
xchg
push
mov
and
push
outsb
push
sub
lea
add
lea
mov
dec
jp
rorl
fwait
pusha
mov
jle
jns
out
mov
loop
inc
or
pusha
scas
sub
mov
test
leave
hlt
aas
in
inc
jge
test
in
inc
call
mov
adc
addr16
xchg
icebp
outsl
add
lret
stos
and
and
movsl
mov
leave
popf
repnz
adc
aam
lret
rcl
sarl
xlat
clc
mov
adcb
jae
rclb
imul
ret
inc
fidivrl
dec
aad
repnz
adc
mov
in
in
pop
mov
push
jns
repnz
imul
adc
fld
inc
xlat
cmp
inc
push
fstl
push
into
test
pop
pusha
insl
fstl
push
mov
xchg
imul
lds
int
test
adc
xchg
xchg
mov
call
mov
mov
push
pop
popw
xor
jbe
push
mov
dec
inc
aaa
mov
orb
sti
lret
andl
cmpl
and
xchg
xlat
out
jge
inc
mov
jecxz
out
and
sub
lods
push
out
xchg
xchg
popf
dec
loope
cmp
mov
in
xor
adc
xlat
cld
sti
sbb
stos
push
inc
push
sbb
mov
push
and
inc
pop
lahf
dec
imul
lds
inc
imul
mov
in
xor
stc
iret
cld
clc
mov
shrb
bound
or
movl
inc
mov
lret
ja
mov
test
dec
push
pop
test
xor
ljmp
lcall
lret
xchg
std
mov
mov
call
ret
rol
idivb
scas
and
jge
subb
push
mov
pop
push
adc
cmpsl
scas
push
insb
inc
xchg
xor
scas
or
in
popf
inc
or
xchg
or
mov
mov
jge
xchg
mov
aaa
stc
sbb
lock
push
adc
pop
cmpb
push
stos
call
into
mov
mov
jg
scas
mov
xor
sub
jne
ljmp
loope
lea
mov
dec
loop
stos
test
loope
add
pop
mov
pop
or
adc
adc
push
stos
sbbb
adc
lret
cmp
cmp
and
loopne
shrb
xchg
rcrl
decl
push
fld
jle
inc
or
bound
lcall
out
mov
lret
or
sub
and
out
mov
mov
and
adc
push
jb
ret
iret
mov
sub
xchg
repz
movsb
lods
inc
mov
xor
mov
cltd
mov
and
inc
bound
mov
push
jae
dec
sub
mov
pop
sti
data16
pop
arpl
inc
leave
xchg
adc
mov
mov
sahf
jecxz
je
add
jno
jmp
shl
pop
int
mov
jmp
mov
mov
fisubl
arpl
fidivs
inc
pop
sub
popa
jnp
dec
mov
mov
mov
adc
or
cmpsl
mov
fwait
mov
pop
dec
stos
inc
xlat
mov
dec
pop
mov
lds
push
ljmp
aas
outsb
ljmp
sbb
xor
push
in
aaa
sbb
mov
js,pn
inc
test
xchg
pop
aaa
das
arpl
jnp
sbbb
push
insb
popf
stc
push
mov
notl
data16
xorl
rolb
cmpsl
jp
lods
sbb
clc
mov
and
mov
clc
cmpl
mov
dec
sub
push
mov
fwait
jo
cmp
jbe
lret
jae
xchg
cmpsb
dec
outsl
cmpsl
push
lock
cli
add
das
loopne,pn
js
loope
jo
lret
xchg
fstpt
iret
adc
fsubrl
ss
pop
pop
cmp
sub
test
or
arpl
jg
ret
test
or
sbb
jae
jo
and
pop
sahf
xchg
cld
int3
cmp
dec
sbb
lods
das
or
mov
pop
test
in
and
dec
jbe
push
lds
ret
ds
xchg
cmp
or
outsb
loop
push
pop
xchg
or
sbb
leave
aas
out
stos
push
sbb
sbb
mov
bound
cld
push
jge
pop
mull
cmpl
inc
mov
fs
insb
push
push
adc
cmp
outsb
je
repnz
push
cltd
inc
nop
and
dec
dec
cmc
mov
div
xchg
mov
aaa
mov
dec
cmp
mov
leave
cmpsl
cmp
and
mov
daa
adc
and
xor
push
and
lcall
jne
push
jl
jl
movsl
popa
sbb
scas
mov
cmp
pop
dec
dec
faddl
enter
movsl
movsb
sub
push
push
adc
hlt
or
mov
mov
jmp
fldl
imul
sahf
movsb
sarl
enter
inc
jnp
repz
xchg
sbb
jno
mov
add
int
mov
or
or
ljmp
xor
bound
movsl
push
lret
lds
adc
or
mov
inc
fsts
aas
inc
xor
jbe
jmp
dec
push
lret
dec
out
dec
adc
sahf
popf
sbb
adc
fmuls
mov
or
nop
xchg
and
cmc
inc
stos
and
pop
loopne
mov
push
push
pop
cltd
xchg
add
mov
pushl
fimuls
inc
arpl
sbb
xor
push
rcll
sub
negb
pushf
sub
test
cmp
or
and
imul
jb
dec
in
pop
lea
mov
fs
iret
mov
push
nop
addr16
stc
jl
inc
dec
dec
push
insb
jbe
sbb
ret
daa
es
xchg
sub
pop
mov
pop
repz
loopne
outsl
dec
gs
push
sub
cltd
adc
cmp
clc
test
xchg
iret
jbe
xor
leave
mov
pxor
dec
cmp
lods
xchg
adc
push
ficoms
jl
add
cmp
cmpsb
shll
pop
imul
iret
inc
cltd
jge
pop
in
es
jg
loop
enter
cmpl
pop
push
sbb
push
popf
sbb
adc
int
mov
in
adc
sub
sbb
mov
xchg
inc
es
add
fcoml
push
int
push
mov
sbb
mov
js
js
jae
or
jnp
add
xchg
cmpb
cmp
and
mov
pop
mov
stc
mov
and
or
aam
push
xchg
rorl
cld
push
rcrl
mov
popf
pop
dec
das
cmc
jecxz
mov
mov
dec
mov
test
aad
and
mov
sbb
jecxz
data16
mov
sub
cwtl
xchg
test
call
xlat
cmpsb
je
imul
inc
leave
mov
cmp
dec
inc
mov
out
cmc
aas
mov
lds
pop
dec
movsb
cmp
fsubl
inc
and
loop
or
jecxz
adc
xchg
lahf
mov
cmpsl
stc
pop
sti
rorl
dec
addr16
mov
fucomi
adc
pushf
xchg
xchg
cmpsl
dec
cmp
xor
pop
pop
mov
jne
mov
and
jae
ret
fimull
sbb
hlt
add
mov
fldcw
pop
and
popa
inc
xorb
sbb
sbb
push
xor
jb
adcb
repnz
or
outsl
inc
fimuls
push
shl
pop
mov
mov
test
xchg
pop
mov
cwtl
mov
lods
shlb
add
popa
push
int3
arpl
xchg
insl
xor
xchg
xchg
xor
and
fcomps
mov
jge
dec
les
dec
ret
movsl
stos
sub
mov
int
arpl
popl
aaa
lahf
inc
insb
pop
dec
pop
cmpl
and
xchg
insb
je
stos
mov
or
repnz
imul
and
mov
and
jno
push
jno
mov
xor
popa
int3
popf
mov
test
xchg
push
mov
inc
cmp
add
jg
loope
es
add
cmp
mov
popf
sbb
ss
mov
lods
dec
mov
fcompl
dec
and
into
sbb
shll
in
aam
fldcw
rcrl
lods
mov
add
repz
rorb
inc
pop
cmp
and
sub
adc
test
cmp
push
rol
and
enter
sub
arpl
ret
fisttps
or
sbb
and
push
xor
dec
cwtl
or
jle
or
lahf
jnp
lahf
mov
jbe
shlb
lds
cmp
pop
mov
test
repz
sub
loop
pop
fs
push
fnsave
mov
mov
cmpsb
adc
adc
adc
testl
xchg
ficoms
push
and
sarl
sbb
push
test
in
int3
mov
mov
popa
sti
icebp
mov
adc
xor
mov
testb
mov
jg
cmpsl
mov
and
out
or
inc
movsb
jnp
sub
mov
iret
inc
sbb
stos
std
out
iret
mov
pop
stos
mov
push
push
push
xor
lret
sahf
or
loope
repnz
mov
scas
shll
arpl
pusha
ja
pop
movsb
inc
aad
outsl
repz
mov
pop
xchg
dec
mov
lret
inc
pop
mov
mov
adc
int
add
mov
xor
push
mov
stos
test
push
pmuludq
mov
jg
aaa
mov
pusha
test
xlat
in
dec
cmpsl
mov
out
aam
shlb
mov
adc
das
outsb
fimuls
into
xor
sub
mov
lahf
jb
decb
call
or
out
call
movsl
and
movsb
pop
out
mov
cmp
std
add
mov
enter
pop
lods
fnstcw
hlt
mul
inc
outsl
pusha
jo
add
lock
out
outsb
sub
adc
movsl
cmpsl
fimuls
fst
pop
mov
dec
fidivrs
sbb
int3
xchg
lret
insl
pop
mov
insl
pop
ss
jp
add
fs
sub
mov
jne
xor
xor
nop
out
ljmp
les
pushf
cli
test
pop
fwait
xchg
insb
ficomps
mov
pop
inc
mov
into
and
shlb
ja
addr16
aas
sbb
les
xchg
scas
xor
scas
lret
idivl
scas
or
and
movsb
sbbb
movsl
fwait
lods
inc
push
dec
or
ljmp
mov
jnp
ljmp
or
arpl
xchg
rcrb
bound
xchg
test
iret
sub
lds
jb
mov
adc
in
jge
xor
mov
loopne
fldl
adc
xor
mov
nop
xor
pop
fdivp
test
sbb
lods
push
jg
sbb
push
and
ret
pusha
mov
dec
lds
jge
aaa
mov
mov
fcomi
rorl
or
mov
sbb
lahf
cmp
and
daa
dec
stc
cmc
fsub
cmp
ret
ja
dec
in
popf
dec
test
xchg
pop
xor
mov
jne
jno
es
int
push
cwtl
sub
or
movsl
mov
out
scas
fidivrs
aad
sub
int3
enter
push
shlb
jbe
icebp
addr16
jae
xor
and
jae
ja
lea
sarb
lock
jnp
xor
dec
addb
stos
adc
movsl
daa
sbb
lods
mov
add
sarl
cmp
mov
sbb
and
sbb
mov
aad
cltd
jo
les
lcall
inc
or
add
dec
mov
xchg
cmp
mov
or
call
inc
cmp
xor
cmp
push
cli
mov
or
cmp
or
or
enter
aaa
adc
les
push
pop
push
cmpsb
scas
hlt
dec
repz
sarl
loop
inc
movhps
cmp
jno
or
rcr
inc
stos
xor
movsb
gs
gs
std
mov
loopne
out
and
mov
dec
iret
jae
dec
insl
repz
inc
pusha
sbb
lcall
pop
mov
ret
jl
cmp
sub
pop
mull
mov
sbb
or
or
dec
insl
mov
mov
popf
and
mov
into
test
popa
xor
dec
scas
lods
and
cmp
inc
sub
dec
cmp
add
mov
pop
or
inc
into
xchg
jo
fisubl
pop
and
mov
dec
lods
movl
lcall
ret
xchg
sti
push
push
cld
pushf
not
clc
hlt
pop
push
and
sarl
xchg
mov
sub
iret
pop
and
xlat
sbb
lock
aad
mov
fisubrl
lret
cmpsb
lret
jg
jp
and
jmp
sar
adc
dec
in
jmp
sub
mov
push
inc
out
insb
sbb
pop
fs
and
cli
xlat
lret
fsubl
inc
jae
hlt
push
arpl
adcl
pop
inc
mov
jbe
mov
push
fisttps
mov
lods
mov
xlat
mov
popa
adc
sub
movsl
imul
pop
test
xchg
add
lock
pop
mov
test
movsl
sti
add
fidivs
and
mov
es
fsub
push
outsl
push
xor
mov
leave
mov
stos
adc
enter
adc
ds
scas
mov
pusha
in
insb
das
incl
test
or
icebp
push
and
cmpl
and
aam
push
std
mov
repz
in
jmp
push
xor
shll
lcall
pop
aam
push
xchg
or
fisubs
and
and
daa
xchg
mov
jmp
xlat
popa
pop
sti
jle
scas
adc
cmc
loop
add
sub
fiadds
shr
adc
xchg
mov
cmp
pop
ss
scas
mov
and
jb
insl
movsb
cmpl
mov
xor
aad
cwtl
push
mov
loopne
adc
push
xor
cli
lods
xchg
addl
les
sbb
cmc
jecxz
rclb
nop
cmp
jp
cmp
pusha
cmp
sahf
sub
jg
sub
xchg
jo
xor
popf
dec
and
scas
pop
or
cltd
divl
cmp
into
push
mov
repz
dec
dec
dec
push
xor
dec
and
adc
dec
mov
bound
bound
pop
or
and
mov
and
add
sbb
adc
shlb
mov
adc
call
mov
mov
incl
inc
or
cmovle
mov
mov
mov
jo
fdivrs
les
dec
inc
imul
sbb
insb
aam
out
fnstenv
cmp
and
jns
or
jmp
adcb
addr16
push
jns
bound
and
xor
xlat
arpl
jl
mov
pop
or
dec
out
fs
and
imul
inc
testl
jge
push
mov
dec
movsb
enter
jle
daa
xor
sbbb
lock
mov
scas
lcall
mul
lret
stc
bound
xchg
dec
lods
cmp
les
jne
pop
jp
mov
std
scas
lret
adc
jbe
push
inc
push
jb
push
cmp
pop
cmpb
aaa
mov
jp
add
push
xchg
and
xlat
adc
jle
inc
pusha
fiaddl
hlt
pop
in
fcomps
ss
lock
xor
jnp
scas
mov
aaa
cmp
daa
loop
es
movsl
xor
sbb
lea
mov
push
loop
jle
test
sti
data16
movsb
sub
add
imul
sbb
and
nop
xor
stos
sub
nop
sub
test
mov
lea
sbb
test
add
push
es
xchg
int
dec
mov
jl
lods
pop
fldenv
cmp
jmp
stc
add
xchg
mov
stc
aad
jae
in
add
mov
lahf
xor
ud2
cmc
mov
dec
mov
cltd
rol
out
mov
dec
dec
sub
sbb
inc
sbb
out
enter
push
ret
jb
lcall
xor
inc
insb
addr16
mov
fsubl
and
movsb
push
divb
bound
sbb
fsts
insb
mov
mov
fisttps
dec
add
js
repz
sbb
mov
xchg
dec
nop
pop
dec
rclb
xchg
pop
pop
pop
stos
sarb
into
js
cwtl
pop
pop
adc
int
daa
imul
sbb
lods
push
xchg
call
mov
pop
ds
repnz
cmp
adc
sahf
inc
nop
mov
int
xor
xchg
mov
ds
and
movsb
repnz
sub
outsl
or
fmull
pop
push
fiaddl
xchg
jne
jb
cmc
es
xchg
pop
jge
fistps
lods
cmp
mov
dec
bound
dec
hlt
xchg
mov
hlt
fdivs
xor
sbb
notl
clc
fdivs
jp
roll
lret
cs
shll
mov
dec
aad
push
mov
into
das
inc
dec
ds
test
xchg
lcall
lock
les
and
mov
sbb
mov
lret
add
sub
push
test
and
mov
lds
arpl
stos
mov
adc
adc
in
lds
dec
xchg
add
and
sahf
pushf
mov
inc
adc
rolb
ret
test
ljmp
sarl
aad
mov
inc
xchg
int3
sbb
fucomi
sbb
test
cmp
sub
add
push
cmp
pop
ss
rclb
mov
mov
repz
stc
lret
aaa
aam
sbb
in
sbb
repz
xchg
xor
mov
lds
addr16
aaa
pop
sbb
sub
cs
into
jns
or
pop
cmpsb
loopne
in
sub
imul
mov
int3
aas
in
clc
dec
inc
in
push
xchg
pushf
fwait
out
sub
sub
or
fsubl
adc
jne
ljmp
xchg
iret
dec
subl
fs
das
jne
bound
or
jnp
jge
inc
jge
mov
lods
into
inc
adc
repz
sub
add
xchg
stc
imul
out
imul
xor
pushf
cltd
xchg
inc
push
jne
pop
lds
cmc
enter
sub
in
sar
ds
inc
subl
fdivl
xchg
popf
inc
pop
call
je
and
mov
icebp
ret
add
shlb
aaa
add
aas
mov
cmpb
outsb
cmp
or
imul
mov
mov
sub
js
in
mov
jecxz
or
pop
jecxz
mov
cmp
xchg
and
jnp
leave
mov
in
add
jmp
and
sbb
sub
push
repz
push
imul
pop
cld
jo
jae
test
stos
xor
lcall
sbb
push
icebp
add
out
rcll
out
mov
xor
out
aas
or
xor
scas
inc
or
popf
out
movsl
daa
adc
jbe
lea
notb
xchg
push
pop
ret
sub
mov
pop
adc
xor
push
jno
inc
fdivp
mov
xor
int3
add
cld
pushf
mov
ljmp
pop
sbb
mov
fldt
cmpsb
pop
mov
lods
arpl
jl
sub
cmp
jo
add
xor
mov
push
jmp
mov
xor
cmp
into
int
pop
or
and
pop
push
mov
xlat
test
into
sti
std
mov
jnp
sti
jge
mov
cmp
mov
dec
lahf
jns
cmpl
pop
xlat
dec
fcoml
test
push
mov
pop
dec
scas
mov
out
pusha
mov
call
mov
in
test
mov
mov
xor
and
cmpsb
and
xchg
mov
mov
or
mov
push
mov
inc
sub
push
pop
push
pop
in
jne
xor
daa
push
cli
mov
sbb
pop
shl
adc
rcl
jl
addr16
imul
es
sbb
inc
stos
mov
mov
sbb
dec
lock
int
push
inc
and
mov
mov
enter
pop
fdivl
popa
push
mov
sub
cs
cld
pop
popa
loopne
shlb
or
out
nop
aaa
add
mov
fwait
popf
push
sbb
pop
mov
jecxz
shrb
out
mov
pop
int3
sbb
and
fiaddl
in
cwtl
sbb
jo
cltd
cmpsb
scas
fstl
ret
pushf
dec
pop
push
aam
ror
cltd
xor
les
not
loope
add
xlat
or
pop
jmp
aaa
dec
imul
lahf
loope
push
cmpsb
pusha
jmp
mov
push
mov
sbb
ss
sub
pop
jns
xor
jns
aad
loopne
insb
and
test
or
test
mov
pop
xchg
out
inc
bound
and
into
js
divb
testb
scas
sbb
es
mov
xor
inc
xchg
jo
adc
pop
xchg
xchg
xchg
add
xchg
inc
call
fs
add
rclb
imul
xor
lahf
stos
mov
leave
or
jge
xor
dec
je
dec
and
mov
push
cmp
lahf
addr16
shl
cli
ss
stos
add
push
daa
outsl
xchg
or
add
xchg
lret
sbbl
jo
cmp
xor
mov
sbb
push
negl
in
out
and
cmp
sahf
jp
jge
ljmp
add
and
les
icebp
in
insl
mov
add
fwait
push
in
stos
sbb
mov
daa
mov
test
mov
push
bound
or
cmpsl
inc
inc
adc
inc
mov
sub
mov
sbb
xor
lea
mov
push
xlat
mov
cltd
imul
out
mov
xchg
jns
sbb
jb
sti
cmp
rcl
ret
insl
iret
loop
pop
inc
cli
or
add
es
pushf
pop
stos
jmp
rcrb
cltd
ss
xchg
pop
std
imul
inc
fdivs
pop
sub
lcall
xchg
push
adc
mov
outsl
lods
pusha
mov
sub
aas
lret
cmp
sub
push
cmp
jae
mov
sbbb
stc
pusha
add
mov
lea
incl
sub
popa
add
lds
inc
or
daa
aas
cld
ljmp
mov
add
jl
xor
jbe
xor
cmp
rorl
icebp
and
les
add
lret
es
fsubrs
imul
shl
inc
xor
jle
jae
lret
and
test
mov
imul
xchg
push
xor
and
push
cmp
mov
mov
pop
pushf
cmp
mov
add
add
dec
adc
xchg
outsl
inc
and
mov
leave
inc
push
or
xchg
push
xchg
in
enter
add
dec
nop
adc
negl
push
cs
call
add
and
push
fmul
pushf
jmp
sti
mov
cmp
das
pop
scas
loope
imul
dec
xchg
push
mov
ret
out
jp
sbb
mov
add
dec
or
popa
or
cmpsb
scas
fldt
test
sub
aam
movsl
repnz
addb
fnstenv
jg
xor
xchg
mov
mov
jp
adc
mov
sbb
cmpb
int3
mov
dec
pop
jl
sahf
enter
push
lea
pop
dec
leave
scas
inc
leave
ljmp
pop
je
ficomps
xchg
cli
ss
push
mov
push
pop
push
push
scas
in
mov
adc
and
and
mov
fcmove
inc
mov
nop
xchg
ljmp
push
adc
int3
addr16
mov
push
ret
sub
out
test
vpsubsw
pop
neg
stos
jne
add
mov
adcl
jg
lock
xchg
and
mov
bound
out
scas
dec
sbb
cmpsb
shrb
test
jne
xchg
sahf
fidivrl
and
movsb
mov
add
push
ds
add
js
inc
test
lret
push
out
mov
fisubs
stos
inc
mov
push
icebp
sti
dec
gs
pop
jnp
adc
popf
push
jp
das
clc
shlb
in
dec
mulb
dec
and
xorl
divl
dec
push
pop
pusha
xchg
sub
addr16
int
lahf
fisttpll
inc
popf
cmp
and
jo
xchg
inc
adc
into
lret
and
int3
mov
in
cmp
pop
cld
insb
fcoms
in
cmp
sbb
andb
mov
mov
jge
jns
jp
outsl
mov
pusha
dec
shr
sti
pop
push
ss
push
mov
ret
jg
fisttpl
stos
push
mov
shlb
or
lea
xlat
add
sub
pop
or
inc
push
sbb
stos
es
mov
in
mov
lret
ret
jnp
inc
pop
mov
loop
mov
jecxz
sub
std
ja
and
jno
mov
js
mov
push
cmp
sbb
mov
test
jmp
rorl
and
xchg
gs
mov
arpl
inc
incl
xabort
and
sbb
adc
xchg
sub
add
pushf
into
inc
jns
mov
push
mov
lahf
andb
lods
jne
loope
jp
dec
mov
mov
fst
jb
and
shrb
shrl
mov
mov
sti
pop
loopne
mov
add
xchg
movsb
sbb
push
mov
mov
or
pop
pop
mov
push
xchg
mov
push
xchg
jmp
mov
push
inc
loop
imul
out
inc
pushf
jecxz
lret
and
or
out
mov
aaa
inc
pop
push
xchg
adc
je
pop
xor
decl
push
gs
insl
add
lea
and
ljmp
mov
push
sub
scas
cmp
outsl
lea
jg
lods
and
decl
or
or
xchg
push
inc
cmc
mov
xchg
inc
push
cmpsl
aad
loopne
lock
inc
inc
pop
imulb
loope
insw
xchg
rorb
mov
jns
call
popf
mov
jmp
ss
nop
add
popa
adcl
clc
push
iret
cmc
mov
or
add
sub
xor
and
fwait
xchg
mov
out
sbb
adc
scas
dec
add
mov
into
pop
push
pop
mov
scas
cmp
in
mov
loopne
push
lahf
repnz
fs
out
adc
and
xor
xchg
arpl
fcmovnb
jno
xchg
jge
inc
xor
movsl
xchg
pop
out
sahf
sbb
or
leave
xchg
ret
leave
in
pop
dec
scas
jge
cmpsl
rclb
jae
mov
subb
pop
add
mov
xchg
cmp
add
add
ljmp
pop
mov
push
mov
movsl
ja
cmp
ljmp
inc
lahf
sbb
out
mov
lock
push
push
mov
lahf
dec
mov
stos
ljmp
mov
sbb
xor
mov
jl
pop
frstor
cmpsb
dec
inc
lods
fisubs
clc
cmpsl
jp
xchg
sub
aas
jbe
dec
fldt
xor
adc
cmp
in
cld
mov
sub
ficompl
mov
aam
loop
xchg
push
lret
sahf
scas
inc
and
adc
dec
mov
cmp
jae
add
int3
inc
or
sar
scas
rcl
push
mov
sbb
shrb
xchg
cmp
and
test
jns
mov
lods
dec
inc
pop
scas
ss
repz
or
fadds
mov
push
stc
sbb
mov
add
sub
leave
jle
jl
loop
rcr
xchg
push
cmpsb
jbe
or
xchg
iret
pop
and
rcr
mov
mov
xchg
lock
pop
iret
vmwrite
jp
mov
adc
cmc
aas
pusha
mov
xchg
mov
and
jns
in
adc
adc
pop
inc
nop
inc
test
scas
movsb
popf
lcall
xor
and
sbb
mov
or
into
or
or
sahf
das
inc
and
cli
lea
mov
mov
mov
inc
dec
imul
mov
cmp
and
and
int3
xchg
cmpsb
xchg
test
lods
cmp
mov
mov
imul
xchg
sbb
rcrl
imul
movsl
jbe
sbb
lret
sub
aas
pusha
jge
jp
cmpsl
ret
sbb
ja
sbb
push
cmp
mov
fneni(8087
push
pop
jg
fstpt
loop
cmpsl
sub
push
ja
sbb
js
xchg
and
sub
sbb
cmc
push
sub
cltd
jmp
sub
jmp
xor
fs
movsl
jno
enter
ds
repnz
cmp
repz
mov
insb
push
or
mov
outsl
jle
sti
repz
mov
mov
es
jbe
mov
hlt
nop
or
jb
add
movsl
push
int
mov
mov
lahf
lods
lods
jmp
xor
cmp
into
popa
out
inc
js
cmp
mov
cmp
xchg
adc
sar
push
push
bound
ds
or
push
and
or
dec
push
fstps
in
jecxz
movsl
mov
sub
jl
std
in
lea
movsb
push
pop
in
sbb
xchg
sub
stc
adc
cmp
adc
imul
push
sub
aam
lea
int3
dec
push
mov
loop
and
pop
jne
stc
dec
xchg
push
dec
or
out
jnp
and
repnz
inc
stos
sub
sbb
xchg
jmp
xchg
cmpsl
ret
inc
stos
cltd
mov
and
lods
lret
jg
arpl
nop
jmp
lea
xchg
mov
mov
xchg
lock
repz
nop
lock
sbb
addr16
loop
ret
cwtl
pop
push
insb
cmp
cmp
mov
push
test
enter
sub
aas
push
stc
jbe
cwtl
sbb
int
sub
leave
lods
lods
sub
xor
fcoms
and
dec
outsb
sbb
cmpsb
xor
in
push
push
in
lock
lds
jmp
or
testl
mov
dec
and
jg
push
sbbl
pushf
mov
mov
iret
cmpsb
cltd
cmpsl
and
mov
sbb
add
or
push
push
mov
sarb
nop
jp
sub
and
pop
and
dec
jns
sbbl
pushf
scas
int
out
push
push
aaa
out
xchg
int
xor
pop
fnsave
add
lcall
hlt
add
clc
sahf
lods
cltd
xor
sbb
mov
mov
ret
in
push
dec
push
addl
xor
cwtl
add
outsb
out
add
pop
lock
pop
mov
xchg
mov
add
xchg
pop
push
out
pop
xor
dec
in
outsb
aad
arpl
rcl
shrl
ja
mov
add
in
add
push
cmpsb
shrl
add
jp
icebp
add
lret
mov
mov
aad
stos
xor
xor
inc
adcb
cs
jmp
std
mov
repnz
mov
jb
push
test
rol
loopne
cmp
push
movsb
mov
inc
sub
cltd
movsl
lods
pop
add
stos
cmp
fdivp
popf
mov
sub
rclb
adc
dec
mov
bound
add
push
push
jns
jg
sub
jbe
shlb
popf
push
mov
stc
mov
fs
mov
cmp
mov
xor
mov
dec
pop
stc
repnz
movsl
sahf
xor
adc
and
sbb
out
test
stos
sub
icebp
xor
pop
es
push
js
mov
sub
fwait
rcrw
and
xlat
imul
pop
vmovd
cltd
cmc
std
pop
enter
jo
mov
push
jg
adc
adc
push
lock
cmp
adc
imul
add
outsl
xor
fistpll
cmp
stos
push
ret
adc
test
leave
es
movsl
mov
and
popa
notb
push
fdivl
bound
test
bnd
cld
mov
ja
movsb
scas
jb
jge
sbb
insb
sbb
xorb
pop
ljmp
mov
and
insl
mov
mov
pop
or
insb
or
in
out
lock
addb
jns
loop
cmp
xchg
add
jge
or
jp
push
faddl
or
jns
or
jbe
mov
dec
jnp
dec
out
pop
nop
mov
add
push
mov
push
fwait
aaa
cmpb
cmp
or
addr16
out
movsb
jne
insb
leave
in
scas
pop
push
pop
xor
mov
lea
jbe
les
daa
sbb
xor
movsl
sarb
iret
insl
jno
inc
or
cmp
idivb
int3
bndstx
icebp
push
dec
add
out
dec
out
fcmovne
push
mov
sub
jns
stos
dec
fnstcw
adc
subb
stos
ret
aas
mov
inc
fcompl
jns
idivb
popa
pop
push
xchg
or
sbb
cmpsb
iret
cltd
loop
jg
mov
pop
adc
loope
es
stos
in
insl
pop
cld
and
push
bound
int3
imul
int3
test
mov
in
mov
pop
add
into
mov
hlt
ja
jae
or
mov
sub
jae
sbb
jnp
negb
push
mov
idivl
and
xor
movsb
push
sub
iret
leave
xor
stos
incb
jmp
shrl
lahf
rcrb
addr16
test
push
sub
loopne
das
mov
bound
icebp
outsb
loopne
dec
pop
push
xor
lea
aaa
sub
add
mov
inc
mov
daa
int
adc
and
add
hlt
mov
sahf
imul
shr
xchg
out
pop
loop
rorl
xchg
loope
and
or
insl
daa
rorl
loop
mov
scas
pop
push
out
cmpsb
and
inc
adc
rorl
mov
rorl
mov
test
lret
push
xchg
push
test
movb
stos
pusha
enter
stos
push
test
insb
mov
pusha
leave
loopne
cmp
js
aaa
ret
daa
rorl
mov
xchg
inc
push
and
xor
xchg
and
push
pop
pop
xchg
or
sub
pop
enter
shl
lcall
scas
fmuls
cwtd
outsb
add
cmp
jge
xchg
sbb
jbe
iret
ret
into
pop
rorb
sub
movb
inc
ljmp
sub
scas
mov
popa
repz
dec
mov
mov
inc
xor
add
mov
sahf
sub
test
and
push
bound
jl
lret
xor
in
and
out
adc
sarb
jbe
xor
jmp
ja
inc
pop
out
mov
call
cmp
mov
xchg
xor
adc
cmpsl
push
leave
or
mov
mov
jb
cwtl
mov
xchg
fcom
push
mov
mov
lahf
cmpl
dec
mov
mov
push
pop
mov
rorl
push
jl
sub
les
xor
out
push
push
sub
fcomp
xchg
les
jns
push
fldenv
mov
jmp
push
lcall
jne
mov
lcall
adc
cld
xor
jl
nop
xor
movsb
mov
adcb
sub
pop
jge
jne
shrb
sbb
and
ficompl
push
aas
data16
clc
inc
add
es
xor
rcrb
cli
add
mov
cli
loope
or
int
dec
sub
pop
pop
cmp
pop
inc
push
sub
and
dec
sbb
mov
faddl
es
pop
rol
xor
jae
popa
loop
push
xor
adcb
pop
dec
mov
mov
dec
push
ljmp
and
inc
pop
das
add
mov
pop
stos
test
scas
sbbl
sbb
insl
in
adc
testl
lea
sar
aam
nop
mov
mov
push
cli
sbb
cmpsl
jle
add
loop
dec
cmp
ror
and
andl
pushf
div
ja
sub
xchg
or
sbb
aam
add
es
push
lret
out
dec
adcl
and
inc
or
xor
jmp
mov
mov
mov
push
mov
dec
push
imul
mov
cld
pop
fcompl
lret
mov
cli
stc
lods
lahf
icebp
gs
push
nop
pop
aad
xchg
xor
push
cltd
dec
lret
lock
xor
loopne
dec
inc
add
dec
mov
adc
mov
sbb
push
std
jmp
data16
scas
testl
mov
mov
popf
int3
mov
dec
pop
xor
sub
add
popa
pop
push
sub
insl
lea
out
pop
outsl
ret
jge
jo
add
dec
in
outsl
clc
popa
mov
insb
in
pop
je
test
pop
push
and
inc
inc
out
decl
iret
out
dec
and
test
mov
fisttpll
dec
iret
bnd
popf
out
push
jg
xchg
fnstenv
and
sub
stos
jns
adc
sub
movsb
mov
push
mov
movsl
push
pop
mov
push
test
cmpb
adc
data16
xchg
xor
sbb
mov
test
pop
add
sub
xchg
pop
mov
mov
cwtl
xchg
xchg
dec
aaa
mov
nop
nop
loopne
and
fsubl
pop
or
and
and
push
jo
out
xor
nop
scas
push
test
cmpsb
adc
insl
out
or
mov
dec
mov
and
je
test
and
adc
dec
lahf
lret
cmp
mov
jnp
dec
adc
push
fmull
push
fcmovbe
xchg
pop
faddl
inc
aam
roll
cmpsl
sbb
jecxz
lahf
cltd
dec
mov
mov
in
es
cld
xchg
pop
sti
rorl
in
push
or
adc
or
mov
cmp
daa
mov
mul
push
adc
add
push
das
cld
repz
ret
test
cmp
mov
add
shlb
sub
adc
stos
lds
adc
jl
pop
cmova
sub
xor
mov
add
popa
jp
or
pusha
sbb
mov
iret
ja
push
dec
mov
dec
fs
out
cmp
cmp
lret
test
ret
jge
jmp
cmp
mov
pop
ljmp
cld
jnp
cmp
inc
sbb
rolb
imul
hlt
std
cmp
or
sub
in
xlat
xchg
mov
and
hlt
pop
inc
icebp
inc
mov
cmp
gs
xlat
rcr
mov
xchg
cmp
xor
push
loop
add
pop
push
push
cmp
das
sub
out
loop
sti
ds
jnp
add
decl
cmp
addr16
xchg
outsb
lcall
loop
mov
xchg
mov
xchg
push
cmp
jae
push
jl
xor
or
adc
imul
and
jb
add
aaa
jle
cmp
repnz
call
mov
jmp
mov
out
mov
push
movsb
xor
and
nop
and
out
push
inc
in
repnz
cmp
or
mov
jle
inc
and
dec
pop
out
scas
push
hlt
dec
mov
push
les
xor
dec
add
add
xchg
nop
clc
fisubrl
xchg
cwtl
add
call
or
inc
out
stos
subl
push
and
mov
imul
inc
mov
adc
pop
clc
mov
mov
mov
test
test
mov
fstps
les
daa
push
mov
pop
lea
jb
clc
pop
negb
mov
jne
jbe
push
test
push
out
insl
sub
pop
insl
stos
xor
inc
stc
roll
push
frstor
js
push
insb
cmpsl
loopne
inc
and
push
js
pop
mov
mov
push
orl
je
shll
or
mov
pop
push
push
call
aad
repz
into
pop
jb
sbb
add
xchg
setno
mov
fildll
rorb
scas
orl
mov
push
add
or
add
shl
mov
stos
sbb
xor
mov
push
shrb
das
fwait
je
orl
pop
sti
ljmp
dec
mov
inc
pop
sub
test
or
add
mov
adc
repnz
pop
std
xlat
dec
pop
mov
jo
cld
inc
xor
pusha
and
test
stc
dec
enter
ffree
push
xchg
stos
cli
pushf
push
sbb
mov
xchg
pop
mov
sbb
dec
cmp
and
adcb
ljmp
add
cmpsb
icebp
pop
data16
dec
dec
leave
mov
imul
mov
inc
cmp
imul
fdivrl
mov
mov
test
xor
hlt
xorl
jmp
into
pop
stos
and
in
imul
sub
sub
add
jp
jp
sub
ja
xlat
es
lcall
xchg
das
xchg
ret
or
jo
mov
aaa
cmp
sbbb
mov
mov
cmp
aad
std
insl
loopne
loope
add
test
adc
repz
mull
andb
push
fisubrl
in
shl
dec
into
sbb
insl
and
in
test
push
add
push
sbb
and
scas
aam
dec
in
enter
enter
lock
nop
bound
rcr
mov
test
and
daa
mov
test
jo
jne
rcll
insl
xchg
push
push
xor
dec
xor
dec
test
lret
arpl
out
pushf
inc
aas
lea
stos
mov
dec
mov
sub
aam
cwtl
and
jmp
je
jo
jne
imull
sub
stos
insl
aam
xor
jnp
std
inc
popf
xorl
cmp
dec
repz
test
jecxz
mov
in
fidivrs
and
and
jae
js
dec
sbb
and
xor
and
das
dec
or
pop
idivb
and
jl
cmp
addr16
xchg
adc
dec
cmpsl
fldenv
add
fimull
loopne
mov
loope
pop
mov
fsubr
xor
cmp
jp
movsl
add
out
jle
mov
jbe
fsubs
mov
push
mov
in
or
rcrl
mov
shr
int3
pop
sar
es
mov
adc
movsb
sahf
aas
std
in
div
into
psubsb
adc
hlt
or
add
push
psubusb
icebp
rcll
gs
adc
sub
add
mov
fstps
add
sbb
sarl
jge
aam
ljmp
int3
cmp
push
push
out
cmp
pop
loop
jno
xor
adc
fcomps
xchg
sub
mov
xor
aam
rep
push
push
enter
addr16
jecxz
push
sub
add
sub
push
imul
mov
mov
add
mov
and
scas
jne
fildll
inc
push
pop
les
mov
sub
xor
add
in
add
stos
sub
imul
pop
scas
or
add
xchg
inc
inc
and
je
pop
mov
sti
in
je
std
insl
or
rorl
in
mov
cmpb
leave
lds
inc
ret
sbb
or
fsubp
test
std
cld
sbb
push
lret
icebp
pop
adc
sub
push
enter
test
cli
adc
test
daa
stos
cltd
popa
inc
mov
cmc
mov
lods
mov
push
cmp
pop
ja
movsl
push
mov
into
xor
inc
pop
test
push
pop
mov
dec
inc
rcl
daa
repnz
xor
testl
or
lahf
stc
jno
jnp
pusha
mov
add
aas
sub
cmpsb
lea
movl
das
sub
lret
neg
sub
movsb
sahf
push
inc
aad
sub
push
lret
sbb
ja
gs
data16
cwtl
jb
test
jno
mov
sbb
jo
popa
pop
dec
cmp
cltd
ret
pop
xchg
inc
mov
mov
out
or
mov
cltd
int3
cltd
xchg
lcall
iret
push
pop
cli
mov
test
aad
sbb
sub
inc
jns
mov
and
scas
or
add
paddsb
lock
mov
pop
bound
outsl
pop
cmp
pop
inc
enter
subb
jmp
jns
push
mov
xor
fnsave
and
call
fsubrp
pop
sub
xlat
cwtl
sub
daa
arpl
sbb
push
mov
adc
sbb
mov
push
adc
addr16
bound
daa
pop
xlat
or
sbb
sbbl
adc
jns
imul
dec
int3
mov
mov
aam
cmp
aad
sub
je
inc
sahf
push
pusha
loop
mov
repz
ja
ret
xor
sub
and
xchg
outsb
loopne
add
cli
orl
mov
daa
stos
mov
loopne
int
das
push
js
iret
in
fimuls
sub
push
inc
shlb
out
mov
push
sti
add
mov
sub
add
add
jecxz
xchg
mov
in
mov
popa
ljmp
mov
xchg
aas
xchg
rclb
lahf
fcoml
mov
aam
in
cli
inc
mov
push
cmp
mov
sbb
dec
fnstcw
lahf
sti
hlt
in
icebp
dec
or
jns
cwtl
int
mov
push
or
add
arpl
cmp
sub
push
mov
dec
ja
in
lret
in
int
mov
push
push
push
push
add
sbb
adc
scas
lret
mov
out
out
cld
call
and
scas
inc
sbb
and
in
negb
dec
ja
inc
aad
pushf
inc
push
imul
pop
call
icebp
repz
xlat
repnz
loop
mov
or
mov
add
and
pop
xchg
inc
loop
sub
hlt
sbb
rorb
mov
lahf
or
testl
lock
decl
adc
insb
clc
stos
xor
or
dec
adc
call
test
imul
and
mov
and
lods
xchg
jle
notl
mov
dec
mov
xchg
or
popa
lcall
xor
mov
addl
sub
clc
push
repz
pop
cs
mov
sub
dec
insl
or
jp
aas
popf
iret
mov
sahf
cmpsb
dec
mov
mov
fdivrl
mov
jl
lea
rolb
test
and
insl
in
out
mov
dec
push
add
out
in
sti
sub
add
adc
xchg
or
cmp
mov
cmpsl
lods
out
test
sbb
push
and
sbb
fldlg2
xchg
mov
cmpsb
lods
movsb
xchg
cmp
add
stos
leave
mov
pop
or
push
aam
push
xor
jp
shl
pop
mov
jg
add
jno
jbe
or
neg
stc
stos
fwait
cli
cs
adc
xchg
dec
sub
mov
xor
adc
js
bnd
ds
add
cwtl
in
call
arpl
pop
dec
gs
push
sub
icebp
stc
or
mov
test
js
cmp
mov
xorb
sahf
and
mov
xchg
icebp
mov
and
enter
jno
addr16
pop
mov
lret
inc
fcmovb
cmp
xor
sti
loop
ds
insb
dec
pop
shrb
push
push
mov
loopne
mov
mov
lcall
fwait
xchg
xchg
pushf
test
lcall
fsubrl
and
jmp
fldln2
mov
das
dec
dec
add
xchg
or
push
pop
addr16
gs
fdivrl
xor
push
testl
pushf
mov
mov
xor
stos
ret
out
jl
daa
fadds
lea
and
mov
int
fnclex
mov
inc
xor
cmp
fcomp
and
in
aad
xor
rcr
in
repnz
jno
push
inc
ss
xchg
push
cmpsb
std
jno
jns
es
mov
and
lcall
push
out
cmpsw
dec
cmp
cwtl
xchg
cmp
push
pop
jno
les
bound
jno
push
mov
mov
xchg
adc
lahf
data16
nop
fistps
std
aad
fwait
pop
fmull
loop
enter
xor
cmp
and
jb
movsl
inc
pop
add
or
pushf
add
outsl
mov
inc
dec
xchg
rorb
ret
outsl
push
orl
jns
clc
and
jo
pop
sbb
adcb
adc
mov
shrb
xchg
mov
sub
scas
fists
xchg
mov
push
inc
or
dec
nop
mov
dec
mov
cmpsl
sub
out
es
fbstp
adcb
std
clc
pop
sti
lret
mov
bound
in
mov
cltd
fcmovnbe
mov
push
xchg
jno
lds
xchg
inc
inc
mov
and
xchg
dec
lret
repnz
addl
imul
cmp
not
sub
cltd
ljmp
pop
mov
setle
lcall
aaa
or
dec
stos
in
outsl
movsl
inc
mov
sbb
je
outsb
decl
and
test
mov
popf
push
iret
movsl
xchg
mov
js
mov
xlat
xchg
add
lods
add
dec
jno
jbe
arpl
or
mov
iret
adc
fcmovbe
inc
popa
fst
andl
xlat
mov
sub
jb
movsbl
mov
mov
out
sbb
push
push
test
shll
and
and
fwait
inc
fsubl
faddl
push
dec
sbb
cmp
insb
icebp
scas
xor
jmp
lods
sub
add
inc
mov
subl
and
or
sbb
aad
xchg
xchg
jmp
int
test
xchg
movsb
movsl
insl
fidivs
mov
outsl
insl
dec
dec
dec
mov
sbb
xchg
sbb
pop
sbb
dec
std
loope
test
out
jne
xchg
jp
rorb
enter
jmp
out
sbb
sarl
daa
push
repnz
dec
adc
lds
dec
xor
mov
je
cmpsb
aaa
ret
scas
je
cltd
imul
scas
cwtl
mov
aad
xchg
add
xchg
hlt
push
flds
xor
jnp
pushf
scas
jnp
jp
push
outsb
rclb
jno
push
add
ficoms
sbb
inc
inc
and
mov
mov
pop
imul
push
sahf
adc
lea
fst
cmp
xor
lcall
xchg
fs
mov
push
andb
test
aas
inc
sub
mov
dec
mov
loop
pop
int
scas
cmp
pop
xchg
imul
test
sti
inc
test
mull
pop
mov
mov
sub
aas
or
sub
lods
mov
sub
mov
jecxz
mov
jge
cli
mov
pop
out
xor
push
jle
inc
jmp
loopne
fdivrp
int
insb
push
cltd
mov
mov
mov
push
iret
cli
mov
jbe
mov
int
xor
iret
cmpsl
in
pop
mov
adc
mov
cmpsb
lds
sti
xor
bound
push
jo
pop
shll
push
mov
in
loop
mov
sub
insl
cs
xchg
dec
les
add
mov
rorl
mov
inc
xor
test
inc
sahf
cli
mov
add
push
shll
outsl
push
cmp
notl
bound
aaa
shlb
aad
jne
cmpsl
cmp
or
xchg
ds
ss
popf
dec
sbb
jg
out
out
xchg
or
mov
pop
mov
add
add
rcrb
lret
shlb
lods
dec
mov
push
popa
lcall
sbb
repnz
push
push
lods
daa
push
arpl
sbb
cld
mov
fs
cwtl
in
arpl
pop
outsl
mov
xor
cmp
and
push
sub
xchg
or
fcmove
ret
inc
cmpsb
clc
mov
cmp
sti
je
xor
cmp
pusha
cmp
sub
sbb
xor
faddl
jg
dec
pushf
dec
inc
mov
movsl
xchg
mov
inc
sub
popf
and
popa
and
and
inc
mov
jle
dec
mov
lea
lahf
test
mov
push
test
cmpsb
pop
and
rcl
pushf
ss
push
cmp
add
add
xor
and
lret
repnz
mov
cmp
adc
cs
sti
jb
sub
scas
arpl
mov
push
lock
sbb
cmpsl
push
in
cmpsb
test
lds
aad
xlat
shll
repz
jnp
cltd
and
xchg
inc
xor
xor
inc
sahf
jno
jns
mov
pop
leave
add
push
sbb
addl
out
xor
lahf
popf
test
pushf
mov
rsm
jne
xchg
jmp
pushf
test
mov
or
fwait
lock
jge
add
cwtl
push
mov
xor
mov
sti
ret
je
dec
mov
sub
push
sbb
mov
js
imul
mov
mov
or
test
adc
or
sahf
insb
dec
insl
je
mov
jno
push
sub
jne
push
push
add
xchg
cmp
push
and
sarb
lahf
pop
test
lcall
sub
cmp
sahf
adc
push
mov
xor
inc
lods
cwtl
jmp
inc
mov
and
icebp
jmp
ds
in
lret
jo
sbb
xchg
mov
push
mov
xor
test
leave
xchg
lock
flds
sub
add
and
or
test
inc
stos
in
mov
ja
xlat
call
cmc
scas
shll
sbb
pop
push
cmp
pop
xlat
add
mov
aam
in
and
movsl
scas
dec
pop
push
adcl
cmpsl
stos
adc
push
pop
fldl
out
mov
and
add
mov
cmc
adc
push
cld
adc
jb
dec
sbb
lcallw
adc
test
cli
inc
mov
js
push
test
lcall
sbb
add
and
inc
pop
sub
inc
adc
sbb
pop
stc
out
mov
roll
mov
and
sub
rolb
enter
test
push
mov
cld
out
mov
lret
inc
mov
data16
subb
adc
cmpl
mov
mov
mov
lods
mov
test
cld
dec
movsb
and
int3
rclb
mov
push
jnp
mov
fdiv
insb
lret
mov
jae
xor
ficomps
mov
out
pusha
fdivs
jle
adc
nop
js
fimuls
fisubs
pop
into
dec
mov
lods
push
outsb
jp
cld
jno
pop
mov
cmp
loopne
repnz
sbbb
fs
adc
add
cmc
jp
mov
repz
adc
cmp
mov
inc
fcmovnbe
stos
pop
mov
int
rorl
hlt
jb
sub
or
pop
jb
inc
flds
mov
iret
insl
xchg
lret
mov
cltd
or
jbe
push
pusha
mov
add
mov
out
je
sub
xor
adc
pop
xchg
insb
mov
sti
xor
fnstsw
adc
inc
lock
jl
lret
mov
mov
repz
pop
dec
xor
inc
or
or
xor
jmp
leave
aam
out
lea
and
cmc
std
lods
out
add
jnp
lret
andl
bound
jae
popl
add
xor
dec
repnz
subl
ds
lret
push
xor
cmp
jmp
movsb
push
dec
ljmp
pop
je
in
sub
dec
icebp
ljmp
fimull
mov
nop
leave
mov
sbbb
push
aam
cld
loope
jnp
jmp
je
and
pop
lock
jp
sub
dec
pusha
mov
movsb
jnp
sub
shrb
psubusb
movsb
xchg
das
lret
mov
sub
cmp
pop
movsl
aam
aad
js
dec
or
out
xchg
mov
shrl
jle
fcmovnu
daa
dec
ja
push
mov
fxch
inc
xchg
lods
pop
andb
xchg
nop
outsl
xchg
mov
lcall
cmp
mov
pop
data16
sbb
cmp
adc
cltd
ret
and
jb
cli
or
stos
jge
adc
mov
in
xor
inc
mov
push
adc
adc
ds
ret
shll
rorl
mov
lahf
dec
mov
cs
push
outsb
movl
cmp
test
mov
or
mov
xchg
loopne
xchg
and
aaa
jl
cmp
hlt
fs
lods
test
xor
sub
lret
or
pushf
das
clc
push
mov
sbb
jmp
pop
mov
xchg
inc
shr
lods
cltd
negb
or
mov
lahf
add
lock
cmp
push
repz
gs
and
bound
fs
shlb
jge
clc
fstps
jno
xchg
loop
push
lea
jne
ss
movsb
fbld
out
sub
pop
cld
in
push
pop
stos
mov
and
rorb
outsb
sbb
iret
sub
leave
mov
push
push
in
outsl
jge
je
add
test
shll
scas
mov
mov
sub
dec
pop
lds
je
mov
out
leave
push
repz
test
or
xchg
adc
loopne
ss
pop
movsb
jo
or
fcmovnu
jmp
repnz
ret
cmp
mov
mov
lock
and
repnz
mov
fisubs
mov
xor
inc
jns
cltd
sbb
inc
hlt
and
xor
xor
cmp
rorl
or
stos
sub
push
fwait
loope
fmull
mov
mov
dec
pop
addr16
or
scas
and
xchg
mull
and
out
xor
sub
out
data16
rcrl
mov
loop
cmp
les
dec
or
or
dec
in
mov
lcall
into
enter
testl
mov
fs
ret
in
data16
adc
div
cmp
mov
repnz
je
jecxz
jae
xorl
stos
lret
mov
stos
loope
ret
stos
popf
pop
iret
in
or
test
rclb
dec
cmp
mov
adc
inc
jnp
xlat
stos
scas
push
mov
ss
in
es
clc
inc
ret
fimuls
ja
sbb
lret
lret
jae
mov
cmp
xchg
std
jbe
sub
sbb
jmp
cmc
inc
mov
sub
push
xchg
jnp
push
call
xor
xchg
leave
test
mov
mov
fs
lock
call
cli
lea
xor
and
loopne
rcrb
cmp
push
jle
jnp
sbb
push
cmpl
fstpl
inc
pop
jge
loope
enter
out
cs
push
xchg
aas
cmp
cmp
or
clc
inc
fsubrl
add
dec
out
in
xor
inc
push
inc
jl
xchg
or
adc
pop
push
and
jb
loop
scas
jmp
xchg
movsl
cmp
adc
jbe
or
int
cmp
cmp
fistpll
das
dec
xchg
inc
xorl
fildll
xchg
mov
and
mov
mov
int
push
cmp
push
faddp
outsl
dec
jecxz
aam
sti
adc
jecxz
or
iret
stos
mov
push
loop
orl
test
jne
enter
and
dec
int3
push
aad
push
imul
mov
jo
scas
adc
push
xchg
push
and
dec
xchg
je
adc
mov
pushf
adc
adc
jnp
jecxz
into
jg
sbb
flds
dec
cli
cld
cmp
cmpsb
sub
and
mov
aam
cmp
scas
insb
sarb
sbb
lcall
mov
inc
addr16
mov
jp
popa
xor
ss
loopne
incl
xor
mov
inc
lret
fimuls
add
pop
adc
bound
mov
dec
ror
aas
add
and
inc
es
repz
jns
mov
stos
sub
pop
loope
sub
lods
pop
fst
jle
push
add
adc
push
adc
mov
jmp
and
mov
jl
mov
repnz
subb
sub
clc
mov
les
rep
mov
imul
and
inc
in
sub
or
xorb
popa
into
pop
sub
push
jge
rcrl
aam
out
jae
jb
daa
outsb
dec
aaa
inc
test
push
adc
movsb
into
leave
or
xlat
mov
and
xchg
xor
lcall
dec
mov
rcrb
or
add
daa
push
adc
and
insl
xchg
mov
inc
mov
push
bound
pop
mov
stos
out
pusha
push
or
pop
and
push
std
out
cmp
add
sub
adc
sti
fsubr
cmc
out
sbb
mov
je
push
pop
fidivl
dec
adc
and
push
popl
aad
dec
or
cmp
xchg
sbb
mov
jge
imul
push
push
insb
aam
rorl
fistl
inc
xchg
pop
sub
ja
jno
mov
adc
and
leave
mov
jge
popf
repnz
fdivrl
arpl
cmp
mov
mov
mov
or
mov
into
pop
repnz
mov
js
mov
ret
ficoml
ss
shlb
pop
ljmp
ds
pushf
xchg
or
pop
xchg
cmpxchg
imul
add
fildl
int3
cwtl
mov
ljmp
in
xchg
push
cmp
out
fwait
cmp
xchg
ljmp
mov
pop
bound
fistpll
lods
test
add
stc
stos
mov
add
mov
xchg
mov
push
dec
push
jmp
pusha
inc
xchg
lret
iret
add
xchg
outsb
shlb
int
or
or
pop
bound
into
and
outsb
cmp
sbbb
bound
sbbl
loope
mov
mov
mov
nop
cmpsl
mov
jb
enter
or
cmp
mov
sbb
mov
pop
dec
sbb
mov
insl
xor
inc
push
fistps
aad
mov
scas
and
fcmovnbe
jecxz
pop
mov
out
fwait
jo
or
adc
in
xor
pushf
notb
in
adc
jg
or
adc
roll
sahf
mov
jns
stos
or
mov
jmp
lret
jecxz
dec
push
movsl
insb
fistl
push
push
dec
jl
mov
sbb
nop
jp
sub
pop
lret
sbb
ret
aas
adc
push
ret
in
das
in
adc
dec
movl
insb
xor
push
lods
inc
stos
fbld
mov
mov
data16
das
xchg
jno
push
mov
xchg
mov
jnp
lret
pop
xchg
jns
stc
repnz
aad
adc
lock
mov
out
gs
scas
push
push
adc
jecxz
arpl
scas
cld
jle
fildl
inc
xor
pushf
dec
lahf
repz
adc
push
les
repnz
lods
out
into
cmpsb
inc
mov
ss
jno
cmc
jb
mulb
add
and
push
lcall
in
in
jo
mov
repz
xchg
mov
into
insb
xor
ljmp
insb
arpl
dec
in
jl
stc
inc
sbb
mov
dec
ret
call
adc
mov
les
out
cltd
sahf
jb
jae
mov
dec
cmpb
push
fistpl
mov
int
fdivs
mov
test
lock
sub
add
jbe
insl
fnstsw
dec
jmp
jge
sub
syscall
outsb
mov
sbb
test
rcl
xlat
loop
stos
mov
sub
xor
push
outsl
push
jg
adc
xchg
inc
add
rcl
push
aam
ret
imul
mov
sub
movsl
add
and
incb
pop
rcrl
inc
mov
adc
mov
imul
cltd
roll
adc
dec
xchg
or
push
xlat
or
enter
or
cmp
push
test
and
mov
js
pop
rcrl
cli
in
push
inc
hlt
mov
cmp
push
mov
popf
cld
lock
stos
cmc
xor
pusha
mov
jb
movsb
fimuls
pop
sub
out
mov
popf
xor
cmpsl
das
or
lea
addr16
pop
inc
xchg
xor
adc
loop
lods
test
std
mov
jecxz
ds
add
es
testl
fisttpl
inc
sbb
dec
dec
xor
lret
and
pop
pusha
ret
mov
int3
jl
aaa
test
int
test
lahf
sub
out
leave
ret
out
jb
mov
mov
andl
stos
pop
cmp
mov
inc
mov
cmpl
movsl
icebp
lcall
bnd
lds
ss
sarb
ret
sub
dec
in
xchg
mov
and
cmp
dec
outsl
push
lea
pop
outsb
push
fldenv
test
pusha
and
daa
shlb
push
xchg
adc
cmp
ja
out
cmpsl
pop
adc
mov
sbb
xchg
push
call
andb
aad
add
test
adc
xorl
pop
iret
or
mov
push
lret
in
daa
xor
sub
xchg
dec
lcall
loop
clc
aaa
add
bound
and
sub
repnz
cmp
xlat
roll
add
outsl
in
jmp
dec
ret
js
mov
ds
lods
dec
cld
bound
mov
add
pop
inc
scas
lds
xor
movl
popf
bound
lods
push
mov
sbb
sbb
push
das
test
mov
or
inc
add
inc
scas
push
das
or
lods
fcomp
das
outsl
test
inc
loopne
dec
pop
sahf
jb
jns
in
rcrb
shl
mov
pop
lock
dec
fiadds
out
jne
pushf
into
xor
loop
dec
arpl
push
cltd
aad
fmuls
imul
mov
test
xchg
sub
pop
sbb
inc
adc
scas
inc
xor
ds
in
xor
lcall
mulb
inc
xchg
jmp
jmp
add
inc
mov
hlt
jmp
leave
aad
mov
in
cmpsb
lds
add
push
xchg
shr
and
cmc
cmp
rcrl
js
jbe
and
stc
cltd
popf
scas
stc
addr16
orb
sbb
xor
cmpsl
cmp
daa
lods
outsb
mov
icebp
scas
mov
and
cmp
pop
lods
call
xor
push
outsb
rcrl
pop
sub
xchg
fisubs
shlb
in
push
cmp
lcall
nop
add
and
xchg
push
popf
xor
jmp
jmp
adc
cs
mov
mov
testb
mov
xchg
filds
mov
out
jmp
pop
inc
cmp
inc
icebp
pop
into
dec
push
or
shlb
pop
pushf
dec
out
subb
into
sub
imul
mov
push
xor
dec
and
fs
mov
cld
cmp
sbb
jle
je
adc
sub
or
mov
mov
and
jecxz
sbb
pop
adc
sahf
shll
shlb
dec
mov
push
aad
js
data16
jl
std
ret
jno
add
inc
js
sbb
adc
xchg
sbb
stc
dec
fwait
lock
daa
mov
pop
xor
xchg
sbb
punpckhbw
pop
aad
mov
or
jbe
es
jecxz
jo
fwait
repnz
aad
test
jg
xor
sbb
inc
mov
seto
push
enter
loopne
rclb
andl
mov
test
jmp
mov
pop
in
dec
sbb
ljmp
pop
pop
insb
mov
mov
popa
movsl
xchg
xor
das
push
in
out
or
loopne
mov
add
into
sbb
xorb
scas
sbb
lret
cwtl
xchg
push
push
test
enter
rol
pop
xor
outsl
in
inc
and
jns
mov
sbb
push
ds
pop
test
outsb
ficoml
xchg
inc
shll
sbb
addr16
sub
out
cmpsl
cmp
movsl
xchg
xchg
cmp
jnp
adc
test
lds
ss
rcll
gs
dec
cwtl
cmpsl
lret
push
clc
outsl
cmp
shrl
sub
sti
shrl
sbb
addb
sub
adc
sets
adc
push
push
push
fimuls
insl
mov
xchg
cmp
lods
cmp
push
lahf
clc
xchg
xchg
out
rorl
hlt
fsub
int3
mov
sbbl
cli
mov
mov
push
xorl
imul
aas
cmp
movsl
jne
stos
sahf
jg
add
test
jle
repnz
cmpsl
ret
ret
xchg
ret
push
test
lcall
dec
mov
cwtl
inc
fldcw
clc
add
stc
xor
loope
and
clc
cs
and
sti
jns
enter
andb
outsb
mov
cwtl
or
lcall
inc
push
mov
or
push
push
mov
in
dec
lret
push
jp
iret
jg
sbb
push
jp
push
xor
sbb
stc
shrl
fs
cmp
mov
jnp
push
leave
bound
clc
clc
inc
fsubl
stos
sub
inc
sbb
dec
jnp
and
inc
out
cmc
in
xor
outsl
frstpm(287
jnp
popa
push
shl
stos
call
int
aad
inc
xchg
cs
andl
cs
sbb
mov
test
mov
xor
daa
movsb
fsts
insl
in
pushl
mov
xor
mov
cmp
mov
jg
pop
mov
mov
mov
add
cmpsl
sbb
add
mov
jge
out
sahf
mov
fildl
pop
push
fwait
pop
xlat
pop
inc
aaa
add
jl
mov
and
lds
jp
jno
adc
roll
pushf
pop
lods
inc
or
mov
shlb
xor
shl
or
pop
arpl
push
lock
dec
xchg
mov
dec
dec
nop
adc
out
jne
or
in
in
adc
mov
jecxz
cli
and
or
sub
lock
push
in
loopne
in
xchg
call
mov
ss
addr16
hlt
lods
shl
mov
xor
xchg
jmp
pusha
sub
mov
sarb
sub
mov
jle
mov
mov
ss
xchg
mov
sbb
stos
mov
add
push
push
push
xor
leave
test
repz
sbb
or
pushf
imul
aas
int
int3
cs
scas
xchg
pop
dec
xchg
std
cmp
in
xor
mov
test
adc
mov
rorb
push
add
xor
mov
ss
popa
test
inc
push
in
rcrl
roll
in
jo
and
in
data16
imull
cmc
ja
push
cwtl
dec
std
bnd
cltd
dec
jbe
and
dec
rolw
jmp
add
inc
pop
inc
imul
sbb
mov
daa
jo
mov
out
xlat
xor
sarb
mov
dec
cmp
pop
sbb
int
jecxz
je
add
out
cld
test
scas
lea
ljmp
mov
sub
int3
imul
pop
insl
in
sub
mov
popf
jge
mov
dec
inc
in
inc
jle
idivl
cmp
ja
scas
js
scas
xchg
sub
mov
cmp
jno
and
lret
push
mov
mov
mov
cmp
sbb
add
push
push
cmp
xchg
xor
loope
loopne
stos
iret
xchg
mov
mov
mov
add
xchg
jg
pop
ljmp
testb
adc
inc
and
mov
insl
xchg
mov
add
or
sub
xor
int
mov
adc
cmpsl
mov
jp
sub
or
inc
dec
std
fsubs
jb
xchg
mov
adcl
int
adc
mov
jecxz
mov
xor
imul
mov
xchg
pop
cli
test
push
shlb
inc
pop
pop
out
in
or
dec
sub
pop
out
xchg
add
inc
dec
es
sbb
in
jl
lret
cmpsl
pop
rclb
loop
adc
push
or
dec
js
pop
inc
jno
in
subb
addr16
iret
sub
cltd
push
mov
pop
jle
mov
mov
or
adc
adc
mov
fstps
das
pause
insl
inc
sti
nop
mov
arpl
sahf
pop
cmp
sar
and
jne
jp
mov
sbb
cmp
bound
imul
jecxz
inc
cmp
jb
or
inc
pushf
mov
addl
pop
sbb
sub
data16
mov
icebp
data16
or
sub
push
jnp
les
stos
jl
in
gs
or
stos
mov
add
or
lods
push
not
mov
cmpsl
sub
xchg
inc
shll
imul
pop
jbe
adc
jg
mov
mov
adc
cli
js
or
lds
mov
inc
rolb
add
das
push
push
imul
xor
push
mov
xchg
sahf
cmp
or
sbb
sub
push
jnp
mov
cmp
leave
cmp
rolb
test
mov
bnd
aam
dec
and
loope
aam
cmp
pop
mov
dec
es
daa
inc
lahf
fwait
mov
jne
aaa
and
and
cmp
xchg
cmp
insb
icebp
lahf
adc
scas
sub
and
mov
xor
xor
cltd
add
mov
aas
test
movsb
or
xor
sub
addb
mov
ljmp
jp
xchg
xchg
sbb
jns
std
in
aaa
sbb
popf
push
insb
mov
lea
ljmp
sbb
push
psubd
std
call
jns
test
push
sub
cmpsl
shr
inc
dec
add
mov
dec
push
or
cmp
ret
adc
and
subb
addr16
cmc
mov
pop
jl
add
or
mov
push
xor
cmpb
outsl
xchg
dec
fimull
lahf
and
adc
jp
aam
adc
inc
in
mov
jecxz
dec
adc
dec
ds
push
add
jecxz
push
decl
inc
jbe
out
mov
in
sub
in
adc
cmpsb
gs
shrb
sub
xchg
jl
test
push
jo
shrb
in
ret
hlt
lret
dec
mov
xchg
jno
lea
stos
dec
xor
cmpsb
fsubp
loope
inc
jae
cmpsl
loop
mov
sbb
and
dec
es
mov
sub
aam
cmp
mov
mov
loop
push
fistps
mov
outsl
cmp
mov
push
bound
lods
mov
sbb
mov
add
in
mov
jne
test
and
mov
insl
inc
je
xor
stos
movsb
xchg
sub
insl
mov
decb
push
xlat
loopne
xorl
adc
ljmp
shrb
imul
sar
mov
inc
mov
cmp
adc
test
add
hlt
mov
shlb
imul
sub
sti
push
jae
roll
xchg
in
add
xchg
cs
add
dec
rcll
ss
pop
adc
xchg
mov
add
mov
mov
movl
jmp
sbb
movsb
pop
mov
in
adc
outsl
mov
mov
out
lret
sbb
pop
pushf
jo
aam
adc
jo
push
push
insb
je
adc
sub
mov
stos
push
loope
jp
das
jg
pop
lods
shll
daa
cltd
pusha
or
or
fdivrs
sbb
andb
or
ret
pop
hlt
scas
aam
mov
outsb
icebp
mov
sbb
dec
pushf
imul
push
jnp
rorl
out
push
sbb
cmp
std
lret
pop
xchg
add
data16
icebp
bound
incl
jmp
mov
jnp
inc
adc
in
mov
mov
mov
int3
sarb
into
adc
and
pop
out
call
pushf
xchg
xchg
cld
aam
insb
push
dec
push
int3
inc
les
daa
jbe
pop
xchg
mov
dec
pushf
clc
pushf
data16
lods
xor
hlt
inc
call
lret
mov
pushf
in
cli
out
and
pop
fisubs
xlat
fsub
test
xchg
adc
jb
testl
in
pop
lods
sarb
and
mov
or
push
je
mov
arpl
mov
mov
aam
mov
inc
xchg
cmp
push
adc
mov
repz
rorl
adc
sbbl
test
or
lcall
and
dec
sbb
mov
mov
push
xchg
cmpb
sbb
adc
enter
jbe
bound
aaa
test
addr16
push
adc
in
loope
pop
into
fcmovnb
mov
cmc
movsl
leave
and
xor
movsl
scas
mov
adc
ljmp
outsl
lahf
movsl
fstpl
jno
faddl
mov
fs
inc
or
jecxz
sbb
rcrl
fldenv
jecxz
adc
push
pop
and
repz
or
loope
jge
lahf
mov
and
ja
leave
jge
sub
outsb
insb
push
pop
repnz
test
sahf
mov
lret
jp
cmp
push
xor
and
popf
jge
mov
ljmp
and
dec
lret
icebp
fildl
or
pop
push
frstor
in
mov
mov
int
out
xlat
pop
int3
mov
jns
cmp
inc
and
cmc
xchg
jb
mov
xorb
or
xchg
xchg
jns
mov
jo
xor
jo
lea
xlat
sbb
mov
into
lods
push
jl
es
add
repnz
test
jb
mov
pop
adc
push
leave
and
fcmovb
push
cmp
sub
dec
pop
xchg
jne
jg
or
popf
shl
pop
repz
cmp
into
add
dec
mov
lahf
scas
mov
idivl
mov
call
push
jecxz
gs
in
sbb
fnstcw
call
int3
mov
mov
dec
or
lods
in
cli
mov
jl
icebp
mov
pop
pop
mov
pop
cmp
lret
cmp
adc
loopne
pop
repnz
imul
mov
addr16
push
pusha
je
lods
pop
test
adc
stos
jno
mov
fld1
testb
xchg
ja
jge
sub
js
hlt
add
jne
adc
pop
sahf
mov
aad
xchg
sub
sbb
sbb
adc
cmc
icebp
add
mov
jl
push
lret
cmpsb
pop
outsl
xchg
shll
sub
outsl
cmp
cwtl
mov
out
mov
mov
cmc
dec
or
mov
mov
sub
adc
andl
mov
and
cmp
nop
sub
jl
dec
pushf
test
insl
inc
jmp
push
bound
jmp
in
jnp
adc
fsubr
mov
loop
pop
mov
stos
scas
push
add
or
test
lods
shrl
sbb
push
dec
pusha
push
into
or
ret
in
dec
or
data16
and
pop
ret
cmp
leave
cltd
loopne
incb
lret
aad
mov
pop
xor
rcrb
mov
mov
arpl
out
or
mov
sub
pop
rorl
add
nop
xorb
jae
mov
fimull
daa
mov
les
sti
lock
les
jae
adc
sub
rcll
ret
sbb
lret
aad
ss
aam
dec
sub
imul
pop
popf
lock
dec
lcall
call
loope
int
lahf
push
mov
mov
mov
aam
mov
test
in
sub
sub
mov
loop
ja
fdivrs
test
mov
bound
mov
je
sbb
icebp
or
push
cmpsb
sbb
push
jne
jmp
in
pop
mov
pop
mov
adc
clc
sub
sub
and
aas
mov
push
push
stos
sbb
hlt
inc
ds
fbstp
or
mov
xchg
ret
or
push
mov
cmp
inc
pop
jmp
xchg
pop
shl
dec
movsl
daa
cmp
lcall
roll
stos
and
mov
dec
mov
mov
push
mov
mov
fmull
ljmp
sbb
push
pop
mov
shlb
adc
pusha
and
dec
movb
sbb
add
lea
popf
xor
sbb
testl
out
std
imul
jle
inc
push
and
aam
jmp
cli
movsl
cmp
mov
enter
loope
adc
jl
rcrb
movsl
outsl
stc
fists
sub
xor
mov
scas
loopne
nop
mov
addr16
loop
mov
fistps
push
xchg
cs
adcl
dec
mov
loopne
mov
stos
and
push
jecxz
cmp
dec
lods
xor
scas
xor
ss
outsb
add
push
dec
adc
jae
ret
sarb
imul
jmp
push
push
sub
shr
into
shlb
pop
lods
fwait
mov
jl
jge
cvtpi2ps
mov
aas
imul
or
or
fdivrp
push
mov
inc
clc
mov
lcall
push
xchg
scas
ds
dec
lahf
arpl
test
std
pop
sbb
in
xchg
pop
shll
jne
test
popa
imul
mov
xor
xchg
push
in
subl
jns
into
fsub
ficompl
inc
adc
adc
adc
fsub
ljmp
out
cs
mov
loopne
loope
xchg
mov
cmovae
cli
pop
fcoms
sahf
cs
loope
bnd
fisttpl
push
sub
or
cs
pop
xor
in
add
lds
push
xchg
and
jno
fadds
cltd
mov
out
push
jl
add
mov
mov
shrb
mov
repz
icebp
daa
mov
xor
mov
jmp
or
xchg
adc
pop
jnp
cmpsl
and
loope
addl
add
jne
push
jns
pop
lahf
jnp
shlb
scas
aas
mov
std
call
mov
xor
and
mov
adc
mov
dec
pop
cmp
cmp
fmull
shlb
mov
aad
lahf
or
mulb
pop
pop
xchg
add
pop
dec
sbbb
add
das
mov
shl
sub
pushl
pop
outsb
jb
fistpl
add
stos
push
xor
or
cld
es
popf
push
ret
adc
nop
and
mov
push
inc
and
xor
lret
sarl
push
aam
gs
out
sbb
arpl
adc
fcoms
js
shl
orl
mov
add
cltd
popf
fnstenv
and
lds
sbb
mov
std
push
mov
bound
lock
into
clc
jg
mov
or
sub
data16
movsb
or
dec
call
jnp
inc
fdivrp
inc
jb,pn
fcompl
in
jp
call
sbb
add
mov
nop
fldl
jecxz
andl
inc
xor
shl
fsubs
adc
das
outsb
push
mov
jmp
or
xchg
in
inc
xlat
adc
aaa
xchg
adc
sbb
push
data16
pop
arpl
cld
xchg
inc
pop
sbb
jecxz
pop
dec
aaa
adc
divl
inc
cmc
xchg
test
movsl
out
cmp
ds
cld
shl
in
sub
mov
sub
jmp
das
shll
insb
aad
dec
fld
and
sub
dec
stos
mov
push
in
pop
data16
ret
xchg
jge
xor
out
push
and
loopne
sbb
jne
mov
inc
cmp
pop
mov
add
js
dec
imul
adc
and
lahf
sub
lahf
mov
sahf
inc
lcall
mov
xor
fstpl
push
add
xchg
into
cltd
aad
in
jmp
bound
call
cld
in
jle
or
sub
mov
inc
push
in
pop
cmovge
stos
lock
jnp
mov
lcall
or
dec
lcall
adc
mov
inc
xor
and
out
mov
xor
and
mov
add
xor
and
lock
in
ret
scas
and
imulb
lcall
and
and
cmp
bound
mov
mov
lock
and
icebp
xchg
xchg
dec
cmp
ret
and
mov
inc
jp
sti
mov
dec
adc
push
cmc
pop
cmp
mov
sub
insl
pop
in
inc
sub
jno
sbb
in
jp
hlt
cmp
inc
nop
fsubl
sahf
pusha
pushf
dec
cmp
test
cmp
xor
fmull
sbb
mov
inc
dec
and
add
pop
jg
pop
jb
mov
fistl
insl
pop
mov
mov
int
mov
push
lret
rcrb
stc
jno
dec
loopnew
mov
pushf
loope
and
push
insl
xor
or
jge
add
cs
push
add
mov
mov
shll
xlat
cmp
lock
fldcw
xchg
pop
cmpsb
icebp
loop
fwait
jne
andb
mov
ds
and
stc
loope
scas
cmp
mov
dec
int3
push
xchg
push
stc
pop
rol
and
mov
ljmp
aas
sarb
pop
roll
loopne
iret
inc
ret
mov
cld
outsl
andl
movsb
jae
lcall
addb
loop
repz
loop
jp
mov
add
movsb
pop
xor
dec
loop
xor
clc
jecxz
xchg
xor
ds
xor
gs
push
jge
lcall
repz
jge
pop
add
loope
js
mov
rcrb
adc
cmp
xor
test
icebp
jmp
dec
push
xchg
jno
psubsw
popl
lcall
movsl
jb
lods
lods
mov
pusha
jle
pop
or
fistps
into
sbb
shrb
out
andb
std
repz
mov
int
aad
filds
outsl
push
sbb
jl
sub
scas
mov
fcmovnb
or
clc
mov
lret
mov
jnp
adc
aas
scas
out
fistpll
mov
mov
cmp
and
leave
cmp
cmp
mov
or
mov
xor
xchg
mov
shrl
mov
lods
pop
xor
addr16
sbb
or
insb
fimuls
int3
mov
sbb
mov
mov
inc
imul
loopne
or
dec
adc
adc
and
ja
loope
insb
loope
mov
jmp
mov
ror
sub
int
iret
jo
jb
imul
fnstenv
outsb
fucomp
int
or
stos
mov
scas
outsb
repz
cmpsl
mov
stc
push
push
fdivl
lock
add
add
mov
insl
mov
sbb
iret
test
and
shl
sbb
add
rcl
adc
gs
popa
aaa
rorl
rcrl
aad
dec
dec
inc
xlat
dec
jo
mov
cmp
adc
ret
xchg
gs
pop
mov
sbb
adc
insl
pop
call
pop
and
pop
jbe
and
xchg
es
mov
sub
fs
xor
jnp
arpl
sarb
mov
cmpsl
pop
adc
mov
or
and
dec
js
xchg
adc
jbe
orb
cld
jg
loope
pop
adc
jecxz
cmpsb
sub
js
and
je
push
inc
adc
loopne
adc
xchg
sub
outsb
arpl
rcl
lea
pusha
es
fadd
aam
gs
push
test
add
in
out
das
mov
mov
mov
ds
push
gs
rorb
push
or
test
cld
sub
icebp
ret
mov
pusha
sahf
mov
jle
dec
orl
shll
test
repnz
inc
rol
in
clc
jg
cmpsl
movsl
pushf
cs
daa
mov
and
mov
mov
jecxz
mov
xchg
and
jecxz
je
inc
inc
adc
aas
jl
inc
cmp
xor
xor
insl
stos
iret
nop
mov
add
shlb
stos
jecxz
mov
cltd
inc
cmp
xlat
jge
push
jmp
sub
insb
in
stc
mov
xor
dec
push
inc
adc
and
dec
or
idiv
jae,pt
andb
into
aas
out
push
in
das
repnz
or
xchg
stos
jae
sbb
xchg
or
ss
insl
std
pop
xor
dec
adc
xor
push
jecxz
and
lods
test
sbb
aaa
insl
push
gs
mov
adc
xor
adc
aad
xorb
imul
insb
inc
movsb
lret
dec
sub
adc
hlt
sbb
add
push
daa
mov
mov
inc
cmp
scas
aaa
adc
pushf
icebp
jl
cld
lock
bound
setae
inc
and
jle
jmp
xchg
xchg
adc
cmpsb
xlat
lahf
xchg
mov
idivl
popf
stos
fwait
sub
test
rcrb
fsubrs
into
sahf
dec
mov
add
shlb
aad
in
and
gs
rcrl
adc
jns
pop
test
arpl
cmp
sub
je
inc
ds
lret
dec
dec
mov
mov
xchg
andb
cmpsl
adc
or
mov
leave
mov
call
sbb
inc
xor
popf
jp
psubusw
roll
mov
mov
daa
cmpb
dec
xchg
ss
mov
pop
int
mov
mov
imulb
xchg
xlat
lret
cmp
push
je
xlat
in
lods
jb
and
sbb
shll
or
mov
xor
cld
pop
mov
shlb
loopne
jne
rolb
push
call
mov
push
inc
lods
mov
inc
orb
and
cwtl
mov
and
inc
movsl
enter
dec
add
push
mov
jmp
sbb
sub
mov
mov
mov
mov
pop
xor
mov
scas
or
imul
jge
adc
jnp
sub
pop
les
or
pop
adc
inc
dec
ret
ds
or
mov
jo
frstor
imul
shll
sti
mov
and
jl
je
xchg
add
fcoml
dec
mov
mov
scas
sub
sub
mov
popf
sub
aam
orb
mov
sbb
in
jo
daa
jb
cld
mov
mov
add
or
scas
or
push
inc
popa
scas
mov
mov
leave
sub
or
in
add
push
xor
mov
push
lea
sub
push
xor
pop
or
sti
jns
notb
lea
push
add
dec
test
je
dec
and
sti
adc
gs
xor
sub
push
xchg
or
jbe
xchg
dec
push
jae
loope
hlt
in
push
repz
fildl
push
jmp
add
out
or
mov
push
data16
popf
sbb
pop
inc
shll
push
mov
fnstenv
mov
lock
inc
fisubl
imul
mov
loop
cmp
dec
hlt
lea
int
enter
xchg
mov
out
shll
xor
sbb
or
mov
xchg
icebp
dec
xchg
test
xchg
js
sub
adc
test
pop
cmp
cltd
push
jae
or
jl
pushf
das
sub
dec
jle
push
cmp
ret
jne
sbb
lret
es
xor
inc
or
jp
fcomps
dec
mov
out
jo
sar
test
cmp
sbb
mul
mov
pop
stos
mov
jle
cltd
push
xor
dec
mov
movsl
push
popa
repz
push
add
xor
mov
push
xor
sub
cmp
jbe
xchg
dec
gs
and
jno
pop
lods
mov
mov
std
rorb
xchg
in
stos
mov
in
jecxz
mov
push
loop
lret
mov
sbb
xchg
mov
bound
cmp
pop
inc
into
jns
jo
dec
jg
jo
mov
daa
sbb
fimuls
or
mov
sub
xor
lds
and
pop
bound
out
mov
push
das
imul
data16
xchg
cmpsb
add
adc
inc
cmovs
cs
add
dec
and
fnstsw
stc
scas
fbld
dec
in
jecxz
cs
arpl
clc
sub
andl
and
out
push
movsb
mov
mov
mov
int3
ja
cmp
xchg
out
inc
sbb
clc
pop
aaa
ficomps
sbb
xor
sub
xor
and
pop
fiaddl
es
xchg
dec
or
xchg
add
mov
imul
lret
dec
xchg
imul
sti
and
inc
sub
orb
fwait
movl
mov
leave
adc
popf
roll
jne
sti
loop
pop
aas
cld
mov
pop
test
fwait
mov
mov
mov
sbb
rolb
cmp
or
pop
mov
sbb
push
mov
xor
outsb
ss
inc
pop
xchg
or
call
cmp
mov
stc
addr16
jp
test
pop
movb
shr
adc
dec
loop
lea
pop
jne
or
sub
lret
stos
fmull
mov
push
pop
daa
jnp
mov
test
fidivl
pop
and
add
popa
fldz
aad
or
test
insl
sub
sub
sbb
ja
sti
jmp
fucomp
out
loopne
daa
leave
jbe
pushl
and
and
pop
js
dec
dec
test
and
shlb
mov
insb
in
xor
xchg
pop
stos
push
scas
pop
sti
das
in
addr16
pop
aam
bswap
test
adc
pop
out
je
or
jno
jp
daa
in
inc
or
sbb
pop
insl
xchg
cmpb
add
cmp
mov
out
das
repnz
xchg
add
push
popa
xchg
out
sub
cmp
lock
in
sub
sub
adc
adc
test
loop
cmp
xor
lcall
dec
aaa
push
adc
mov
push
mov
inc
push
lea
cltd
dec
popa
cmp
shr
add
cmpsb
in
jae
jge
daa
inc
dec
enter
imul
data16
daa
xorl
cli
imul
pushf
mov
mov
repz
inc
push
mov
roll
data16
dec
lea
cmp
aas
fwait
je
push
push
int
clc
or
js
add
lock
mov
ljmp
pop
add
hlt
incl
jmp
stos
cmp
popf
filds
gs
jne
mov
loop
xor
mov
mov
mov
int3
sbb
and
shrb
movsl
jle
enter
dec
cmpsl
xchg
inc
jno
std
xchg
lds
fldlg2
push
jge
ret
stc
dec
cli
push
int3
mov
daa
movsl
test
or
adcb
fcomps
aas
stos
or
in
push
jno
inc
lds
mov
mov
test
or
mov
and
dec
jecxz
jb
mov
rolb
push
jnp
out
pusha
arpl
arpl
sbbl
xor
mov
adc
add
icebp
fldenv
arpl
loopne
mov
jnp
push
sbb
out
pop
dec
sbb
imul
popf
scas
shr
lods
sti
or
or
fldenv
mov
mov
insl
push
sbb
sub
sahf
popf
xor
or
ret
pusha
sarl
adcb
stos
add
xchg
xor
pop
or
xor
pop
leave
sbb
ljmp
scas
movb
out
mov
dec
pusha
movsb
fcmovb
xor
cltd
jmp
mov
out
ljmp
pop
push
jne
xor
fsubs
cli
or
push
and
jne
xchg
gs
iret
cmpsb
cld
cmc
sbb
fwait
sbb
push
or
cmp
arpl
jb
enter
and
cpuid
mov
xor
adcl
fcompl
push
and
fs
pushf
aas
ds
hlt
sbb
sbb
dec
mov
push
pop
pop
add
mov
jbe
sbb
iret
add
adc
mov
sub
faddl
cmp
sub
les
dec
and
sbb
enter
pushf
dec
shll
repz
push
pop
fidivl
fidivl
subb
sub
add
or
xchg
dec
stc
gs
fs
add
leave
xchg
sbb
lds
repz
pushf
loop
dec
xor
cmp
mov
pop
pop
mov
mov
xchg
dec
cmp
jno
push
lods
add
out
push
dec
sbb
mov
insl
pop
fisubl
daa
in
sub
fisttpll
lds
movsb
sbb
or
shlb
inc
bound
sbb
mov
dec
into
add
add
repnz
lret
and
xlat
movsb
and
fs
pop
mov
sbb
or
stc
std
lock
xchg
stos
enter
push
pop
or
pxor
stos
cs
je
scas
sti
pop
arpl
mov
cld
in
cmpsb
aad
subl
jecxz
adc
mov
mov
xchg
sub
outsb
fmul
xchg
stos
jns
repz
jp
xchg
mov
sub
sbb
insb
std
inc
ja
push
jb
mov
mov
call
aam
sbb
pop
popa
mov
mov
sqrtps
out
test
push
xor
or
add
dec
out
into
lock
fadds
js
fwait
xor
imul
stos
jmp
popa
ss
pop
push
push
inc
inc
jecxz
mov
sbb
fcoms
fildl
jl
mov
int3
dec
mov
dec
inc
cmp
dec
jp
pop
clc
fs
ret
and
cli
insl
inc
add
out
sbb
jo
push
xor
scas
mov
aaa
in
xor
dec
sub
adc
or
mov
sub
cmpsl
jae
pushf
adc
ljmp
jl
lret
loop
enter
mov
cmpsl
rorl
adc
out
out
ss
jns
jae
addr16
rolb
scas
lea
hlt
stc
daa
cmp
out
pop
cld
mov
rcl
cwtl
pop
sub
mov
pop
cs
outsl
xchg
mov
dec
xchg
xor
sub
push
movsl
mov
and
leave
mov
inc
dec
cmp
bound
neg
notb
pusha
jno
sub
adc
in
xchg
out
mov
jbe
push
aas
push
shrb
cmp
push
sbb
dec
dec
je
ret
jge
loope
je
adc
mov
mov
leave
sarl
mov
xlat
mov
dec
push
add
mov
movsl
sahf
add
dec
dec
scas
inc
addr16
rcrl
mov
mov
push
add
popf
sbb
sub
inc
loopne
jne
mov
inc
shll
push
jno
inc
cmp
cmc
arpl
cli
xchg
aas
sbb
mov
and
xor
loop
sbb
inc
lods
test
jp
lods
dec
and
loope
test
ret
std
ret
jne
xor
push
jne
push
pusha
pop
add
decl
clc
adc
std
pop
cmp
repnz
call
rol
cwtl
mov
and
movsb
jmp
xchg
iret
push
out
cmp
cltd
test
push
fldenv
push
div
lret
addr16
mov
movsl
repnz
and
xchg
mov
jmp
adc
mov
lret
cmp
jmp
xchg
std
dec
push
sbb
cltd
xor
sub
lret
inc
loope
jl
pushf
mov
mov
and
lahf
notl
shrb
jp
jb
lock
inc
inc
push
jb
scas
mov
cmpsl
lds
sub
xor
repnz
push
adc
xor
or
bound
push
pop
sub
fdivrl
ljmp
jae
stos
sbb
sub
aam
cmp
dec
sub
movsl
push
jo
mov
mov
and
xchg
lret
incb
insl
dec
push
xchg
and
jns
jo
insb
fsts
push
or
sub
jns
lods
add
mov
mov
js
xchg
jb
adc
std
mov
lahf
xchg
loop
mov
adc
mov
mov
add
lods
fldl
je
xchg
xor
enter
push
out
dec
push
dec
movsl
sub
loope
xchg
xor
int
mov
stc
fstps
adc
pop
xlat
jecxz
push
es
pop
or
sbb
xchg
sbb
mov
lea
inc
sbbb
xor
out
sbb
fmuls
outsb
mov
add
jnp
jecxz
mov
xlat
lock
loop
or
mov
lret
mov
fcomps
or
push
sar
into
shlb
jge
push
nop
arpl
or
xor
cmpsl
sbb
xchg
dec
push
jno
inc
nop
mov
cs
mov
pop
neg
push
mov
cmp
imul
aaa
test
dec
push
jnp
in
adc
sub
xlat
mov
cmc
stos
das
push
idivl
in
jmp
les
sahf
push
cmc
or
sub
and
cmp
hlt
or
xor
clc
pop
push
js
cld
movsl
xorl
cmp
loop
movsl
xor
push
fwait
xchg
pop
inc
xor
mov
adc
test
mov
and
ds
jle
enter
cmpsl
popf
jae
mov
jmp
jns
xor
dec
pushf
jb
xchg
data16
daa
mov
or
loopne
dec
andb
adc
dec
cmp
xchg
mov
and
xchg
cmp
adc
aas
or
inc
test
xchg
jne
jmp
sahf
fwait
inc
pop
inc
lret
mov
orl
jno
jge
sbb
stos
out
out
lret
jb
cltd
lea
aaa
inc
mov
sub
shll
movsl
jp
jl
movsb
jp
mov
and
insb
xchg
mov
stos
xor
stc
js
mov
outsb
cmp
pop
push
clc
or
push
psllq
sub
sbb
stos
cmpsb
stc
lcall
mov
jns
rcrl
jne
xor
mov
or
subb
fcmovb
jnp
out
jle
mov
pop
roll
or
jmp
push
sbb
add
popf
xchg
out
pop
daa
sti
into
lods
mov
mov
sbb
mov
sti
and
scas
mov
loopne
rorl
je
and
fildll
popa
dec
pop
icebp
jo
loope
dec
lret
sbb
testl
hlt
lds
clc
addb
fadds
pop
hlt
cld
pop
pop
sub
or
jmp
pop
mov
or
sub
or
cli
sub
ljmp
imul
daa
pop
movsb
xlat
add
test
add
outsl
out
cmpsl
repz
repz
fwait
test
jbe
dec
jae
mov
sbb
stc
pop
and
jge
or
shll
cmpsb
lods
mov
ret
sar
mov
fsubrl
dec
aaa
popa
jae
fwait
mov
shrl
cltd
dec
mov
add
lcall
dec
jge
mov
pop
xor
jb
mov
rcrb
jl
rorl
leave
mov
mov
dec
jmp
push
fs
pop
jo
int3
cmp
jmp
dec
icebp
mov
pop
mov
pop
pusha
fs
jg
mov
adc
rcrb
xchg
adc
lret
lret
fidivrl
xor
xor
stos
or
je
mov
cmp
stos
cli
je
cmpsl
stos
cli
aas
stos
gs
test
aam
popl
stc
mov
inc
push
add
jae
das
add
xchg
js
mov
pop
sub
inc
ds
cmpsb
loope
mov
daa
popf
movsl
push
or
adc
add
mov
loopne
mov
inc
test
push
sbb
in
lods
adc
fldcw
jno
push
hlt
pop
sbb
in
js
lret
imulb
arpl
and
pop
addr16
mov
add
jns
add
xor
jnp
add
dec
adc
sbb
mov
test
xlat
in
jb
stos
jle
cltd
xor
inc
add
mov
stos
shrl
rcrb
repz
into
xchg
push
adcl
push
ss
cmp
xchg
inc
out
and
rcrl
fadds
lds
mov
dec
test
mov
repz
int
jo
pop
sub
in
into
mov
je
aam
test
sub
test
outsl
dec
scas
pop
addb
stos
lret
sub
outsl
ljmp
sub
pushf
push
cmp
mov
ret
pop
fs
xchg
inc
push
pop
jle
sub
xchg
dec
popf
test
cmp
test
jno
jp
cmp
gs
cwtl
in
cmp
push
mov
adc
mov
or
idiv
xchg
icebp
imul
test
lret
stos
jg
aad
call
imul
jo
inc
data16
insb
push
xchg
je
xor
fisubrl
shll
pop
cmp
inc
sub
pop
roll
hlt
out
aam
xchg
test
dec
mov
iret
in
xchg
lock
push
neg
rol
mov
mov
push
sub
adc
mov
inc
add
fs
sub
mov
and
pop
jnp
ja
lock
shrb
pop
adc
cmp
mov
adc
pop
sbb
addl
dec
dec
sti
cmp
jmp
push
mov
cmp
jno
sbb
xchg
push
adc
xchg
ljmp
dec
pop
add
sub
enter
mov
add
xor
adcl
push
dec
js
jae
xor
pop
and
add
test
jl
ss
xor
cli
lds
cs
mov
gs
mov
scas
mov
cmp
pop
daa
sbb
scas
scas
stc
jns
fnstenv
fbstp
orb
test
sbb
dec
mov
pop
cltd
adc
xor
cli
ret
sub
xorl
jb
test
mov
and
add
lahf
adc
add
xchg
gs
sbb
fidivrl
fs
and
or
pop
sub
sbb
and
iret
mov
imul
dec
adc
ss
sub
adcl
add
xor
std
ja
push
fwait
popf
xor
xlat
ss
xor
push
ret
and
sbb
neg
arpl
gs
add
mov
loope
aas
test
mov
in
adc
mov
loope
mov
or
adc
pop
lret
mov
rcrl
test
xlat
xor
rclb
incl
sarl
pop
out
mov
mov
sbb
cs
pop
jne
out
pop
xor
idivl
add
mov
sti
iret
mov
scas
lds
fldt
push
clc
cmc
aas
or
push
dec
adc
mov
sbb
clc
mov
in
pusha
mov
hlt
call
in
add
cmp
test
movsl
xchg
or
mov
cltd
out
or
mov
imul
push
imul
jge
and
push
mulb
jae
fwait
dec
jl
xlat
cmp
movsb
sub
jecxz
and
push
jb
pop
mov
or
jno
inc
mov
inc
enter
insl
cmp
dec
and
xor
mov
sub
mov
mov
mov
enter
and
pop
cltd
mov
cwtl
fnsave
fstpl
jmp
cli
cld
subl
sbb
adc
rol
mov
cltd
adc
aad
les
pop
cmp
lahf
outsb
lcall
mov
jg
movsl
lret
inc
mov
imul
sbb
hlt
adc
jb
stos
cmpsl
test
aaa
test
aad
aam
dec
repz
sbb
cmp
cltd
data16
sub
decl
adc
mov
fcmovnb
xor
mov
imul
pop
xor
or
scas
jg
incl
pop
nop
ljmp
mov
out
inc
enter
pop
out
mov
mov
xchg
pusha
mov
push
adc
sub
or
lock
pop
xorl
lret
sub
cltd
adc
andl
inc
adc
jg
adc
push
inc
xchg
data16
or
or
lock
and
add
smsw
arpl
xchg
and
ds
xor
shrb
and
mov
lea
xchg
sahf
mov
push
adc
push
cld
loop
repnz
imull
mov
or
mov
sub
add
push
pop
push
cs
and
and
xchg
push
pop
int3
hlt
aaa
lds
mov
cmc
das
push
shl
mov
lea
xlat
enter
repz
add
sbb
adc
mov
add
mov
inc
dec
add
rclb
iret
jae
push
push
mov
jbe
std
lret
sarb
outsl
inc
jle
sub
pop
mov
sbb
call
sbb
inc
pop
add
sub
xor
pop
adc
ret
add
jnp
in
mov
add
cmp
cmp
out
mov
and
push
cwtl
cmpsl
out
adc
leave
sub
pusha
push
cmp
xchg
mov
or
shlb
mov
push
es
cs
jo
hlt
mov
or
jnp
xchg
jg
cmp
push
ljmp
fisttpll
pop
mov
xlat
imul
cmpsb
and
and
xchg
scas
xchg
or
jl
sub
fwait
mov
pop
xchg
jbe
push
rcrb
lret
stc
xor
call
xchg
iret
inc
and
push
inc
mov
lret
lea
in
pop
cmp
imul
out
jmp
xchg
cmc
orb
clc
out
out
insl
outsl
or
xchg
push
sub
iret
push
jle
sahf
ficomps
sub
pop
xor
out
lret
lds
inc
cmp
pusha
ret
cli
mov
xchg
dec
clc
sti
xor
hlt
adc
pop
or
adc
add
dec
or
sbb
subl
je
into
lods
cmp
pushf
js
shlb
pusha
dec
sub
in
or
call
ret
je
push
add
ja
das
dec
stc
and
mov
popf
pop
fmul
push
xor
daa
in
inc
aam
sub
shlb
repnz
xchg
xor
hlt
add
out
fcomps
jbe
adc
cli
aam
stc
xchg
mov
divl
imul
sub
ja
insl
jmp
fmuls
es
rorl
cltd
xor
xor
dec
and
jge
lahf
and
ret
pop
jae
imul
dec
test
shr
add
dec
mov
setae
incl
inc
jnp
or
icebp
push
inc
xchg
jle
mov
ficoml
jg
jne
jb
pop
js
fstpt
cmpsl
pushf
push
push
xchg
adcb
jecxz
pop
mov
xchg
ret
ret
add
shll
adc
push
addl
test
push
add
xor
imul
dec
dec
mov
out
xchg
adc
mov
loop
shr
mov
test
ret
mov
dec
inc
lret
outsb
movsl
adc
push
adcb
push
push
es
cmp
jo
mov
fildl
movsb
clc
inc
cmp
stos
adcl
cltd
mov
mov
sub
cmpb
dec
jl
cld
jbe
je
lret
inc
sub
jmp
arpl
jns
adc
bound
adc
sub
jae
dec
dec
xor
aam
dec
sub
pop
inc
add
mov
shll
cmpsl
hlt
aam
mov
mov
test
fmull
jge
pop
adc
or
xchg
mov
negb
mov
mov
jnp
gs
fcmovnb
repnz
and
add
xchg
call
int3
pop
les
in
xchg
sbb
dec
iret
jne
mov
pop
inc
fucom
in
fwait
subl
jns
stos
xor
insl
out
xchg
addr16
loopne
addr16
scas
mov
ljmp
inc
loope
aas
mov
je
cli
subb
or
inc
inc
int3
movsl
call
adc
push
sbb
into
insb
test
je
popa
push
movsb
pop
scas
mov
jmp
test
xor
xorb
aas
xchg
aad
xchg
or
inc
xchg
mov
dec
mov
and
out
test
cmpsb
dec
mov
test
mov
pusha
std
add
dec
nop
push
jb
les
daa
int3
fcompl
push
insl
mov
repnz
adc
sub
dec
cld
inc
mov
fisubrs
add
dec
out
popa
idivb
frstor
int3
adc
fisubrl
xlat
dec
sti
outsl
mov
adc
sar
cltd
cmp
test
fs
and
pop
push
push
aam
xchg
mov
add
lods
lods
popf
shrl
lds
inc
ds
shrb
inc
lods
into
das
jno
orb
ret
mov
outsb
mov
dec
xor
xlat
test
pop
push
lock
mov
sbb
or
cmp
mov
imul
dec
push
mov
pop
add
push
call
or
xchg
repnz
jae
sbb
addr16
int
out
lea
jns
mov
adc
adc
jle
mov
sbb
mov
mulb
adc
sub
shr
test
mov
mulb
sub
aas
mov
mov
int
imul
xor
pop
cmp
sub
sub
mov
hlt
pushl
repnz
fcomps
in
inc
pop
jbe
std
add
shl
dec
int3
shlb
or
inc
cmp
push
dec
jo
cmp
cwtl
mov
sahf
xchg
mov
cwtl
xchg
xor
cmp
cltd
ljmp
int
out
repz
cmp
lock
adcb
cld
mov
in
out
lock
cmp
jno
mov
pushf
jmp
je
ret
dec
inc
mov
ss
jae
or
pop
aad
push
pop
mov
or
out
je
lret
or
jns
push
int3
add
fisubl
dec
iret
outsb
mov
sub
ljmp
mov
insl
xchg
filds
jmp
insl
dec
sti
cli
add
test
mov
in
dec
les
stc
or
in
out
out
bound
mov
ror
adc
xchg
ljmp
sub
push
xor
push
roll
add
mov
cltd
cmp
daa
mov
outsl
in
es
loope
popf
clc
movb
fucomi
jns
sbb
lret
outsb
dec
cld
fwait
pusha
and
neg
call
inc
fdivp
fstps
mov
mov
gs
mov
cld
js
or
jb
sub
imul
mov
mov
subl
in
mov
xchg
cmp
pop
insb
add
xchg
mov
or
outsb
lahf
and
movl
in
les
mov
mov
lea
sub
pop
lock
lds
sbb
bound
int
xor
pop
inc
lahf
cmpsl
push
es
popf
out
insl
mov
ljmp
aam
fisubs
bound
pop
or
fnstsw
mov
xor
mov
jl
repz
adc
dec
add
insl
jns
mov
inc
lds
cmpsb
inc
lret
add
sbb
pop
clc
fadd
jmp
andb
mov
sub
sarl
fwait
movl
sub
test
aas
test
or
push
xor
dec
nop
shr
adc
lods
xlat
mov
dec
fmuls
jmp
sarb
jg
outsl
push
inc
mov
int
hlt
push
stos
inc
in
adc
lahf
and
add
xchg
in
insb
leave
popa
lret
sbb
lds
stc
cmpl
and
leave
push
inc
add
sbb
frstor
push
jmp
and
test
dec
std
ja
cs
mov
fldt
and
sub
dec
arpl
pop
cld
lds
sub
scas
push
and
scas
xchg
xor
sub
adc
addb
daa
loopne
jns
imul
mov
mov
xchg
aad
lret
inc
mov
mov
mov
push
rcrl
mov
push
nop
in
pop
adcb
cmpsl
and
sub
stos
jnp
imul
iret
int3
scas
shrb
mov
loope
popf
daa
sub
xlat
negb
sub
test
sub
pushl
pusha
je
test
orl
jl
jb
sub
icebp
inc
sbb
cwtl
xchg
adc
jmp
pop
adc
vmwrite
fs
mov
popf
aad
add
loope
xchg
fsubr
mov
call
cmc
pop
mov
arpl
pop
dec
pop
pop
js
outsl
stos
dec
insb
xlat
add
xor
dec
xor
sbb
or
adc
shrl
push
movsb
adc
dec
cld
and
fidivl
xor
push
or
movsb
mov
repz
loope
cltd
rol
inc
mov
push
jne
mov
lcall
adc
shrl
addl
or
lods
sarl
lea
fucomp
std
mov
add
push
mov
or
pushf
sbb
and
shl
fsubp
sbb
push
xor
mov
das
adc
cmp
scas
ror
stc
push
jecxz
sub
lods
aas
lock
xchg
cltd
mov
addr16
xchg
aad
in
push
pop
pop
enter
push
pusha
es
adc
imul
xor
popa
sti
adc
jbe
fs
clc
mov
cmp
mov
bound
add
xor
daa
jo
scas
jno
jmp
xlat
cmc
pop
cmc
jmp
out
sub
shll
mov
pop
sbb
arpl
or
push
pushf
push
out
xor
push
bound
cmc
push
xor
sub
inc
out
jne
loopne
mov
loop
cmp
mov
fnstcw
popa
cmpsb
jg
clc
div
mov
xor
xchg
jl
clc
mov
imul
jns
out
sar
adc
call
fidivl
xor
pop
ret
mov
pop
jb
stc
pop
push
xchg
mov
push
imul
pushf
pop
das
fs
jmp
cmp
sub
outsb
ljmp
dec
inc
dec
movsb
call
add
jns
lock
xor
xchg
lea
dec
add
xlat
lods
inc
addr16
pop
loope
cmp
cltd
lods
adc
mov
dec
xchg
cmp
leave
add
lcall
mov
mov
xchg
in
push
xchg
sar
mov
test
shrl
push
sub
out
test
imul
cmp
gs
push
push
add
mov
insl
incb
mov
push
je
loopne
mov
mov
fsubs
xchg
out
inc
inc
ljmp
cmp
addr16
sub
sub
jae
or
cmp
lods
shll
dec
inc
out
dec
mov
or
inc
jns
leave
nop
add
or
icebp
or
mov
pop
lcall
mov
sbb
push
lcall
mov
push
add
ljmp
push
jae
insb
cmp
jmp
je
xchg
jbe
cmp
loope
mov
loopne
icebp
in
in
push
jecxz
lret
push
xor
ret
sbb
imul
inc
jno
push
sub
jmp
xchg
cmp
movsl
cmp
popf
aad
xor
sti
pop
sub
aas
mov
xchg
adc
dec
cltd
push
xor
xor
pop
js
sahf
ds
stos
cmpsb
nop
das
push
cwtl
cmp
add
xor
out
sbb
jge
test
mov
xor
icebp
push
or
iret
out
movsl
imul
jecxz
jne
xor
cltd
pusha
mov
jne
sbb
imul
loopne
ljmp
xlat
ljmp
sub
push
pop
shrb
test
cmpsl
aad
loop
loopne
imul
inc
add
push
xchg
test
mov
fldl
mov
stc
cvtps2pd
adc
sub
push
movb
sarl
shl
dec
jge
iret
mov
pushf
aas
mov
lods
daa
pop
es
test
or
or
mov
mov
sbb
xchg
mov
fwait
mov
icebp
movl
es
hlt
loop
push
cmc
lods
cmpsb
adc
popa
jg
lock
in
or
push
lods
mov
loope
dec
ret
ss
rcrl
enter
and
sbb
cmpsl
mov
cmpl
adc
dec
inc
adc
imul
cmp
in
jne
pop
push
and
and
lret
cmp
sbbb
jp
negb
icebp
inc
test
lss
arpl
js
adc
xchg
push
xor
adc
shl
lret
out
popa
fs
aas
aam
push
xlat
lret
repz
inc
push
jb
push
jno
push
clc
roll
and
in
jne
fsubrs
cwtl
push
aad
dec
fld
push
add
xor
push
push
out
fdivl
push
dec
jno
add
ljmp
dec
mov
xchg
mov
sahf
and
cmp
add
and
les
aaa
sbb
inc
sbb
pop
add
mov
mov
mov
push
mov
cmc
mov
jae
cmp
jns
inc
cmp
push
and
jge
mov
mov
repnz
fsub
sbb
push
pop
mov
leave
movsb
fsubs
mov
mov
in
aam
in
cltd
enter
notl
loope
scas
pop
jns
shl
jo
call
jp
and
sbb
push
cmpsb
loop
notl
shlb
inc
mov
dec
pop
or
xchg
popa
add
fsubrl
out
divb
sub
push
call
outsl
movsb
cs
push
js
jle
cmpb
lds
add
mov
sub
iret
icebp
sbb
sub
sub
mov
jns
sti
inc
ret
add
xchg
imul
push
push
sti
dec
in
std
ja
dec
cmpsb
aam
cld
scas
adc
repnz
icebp
fistpl
scas
in
sub
inc
dec
push
sbb
and
xchg
inc
int
divl
aas
imull
and
xchg
addb
cld
cs
pop
add
ja
xor
inc
sbb
push
mov
into
inc
cmp
lea
adc
sahf
jb
mov
mov
adc
daa
mov
xor
cmp
fstps
add
sahf
jp
loop
dec
out
ret
xchg
pop
push
popa
loopne
sbb
xor
fstl
jl
icebp
jge
mov
jb
pop
popa
push
stc
mov
movsb
shrl
dec
out
ret
adc
mov
jb
jge
mov
shrl
jge
or
xchg
pushf
or
cmpb
inc
cmp
sti
shlb
popa
jbe
fnstcw
xlat
add
shll
iret
mov
pop
fnstsw
arpl
fimuls
out
fimull
inc
lcall
fsubl
jnp
incl
jg
jno
pop
mov
push
xchg
dec
pop
mov
inc
sbb
cmpsl
xchg
cmp
data16
pushf
fcomp
js
loop
jb
iret
les
push
push
inc
je
push
fstl
shrl
hlt
jge
mov
stc
nop
jecxz
call
push
push
cmpsb
and
lea
das
xchg
or
xchg
les
mov
adc
jl
or
in
jbe
movsl
movsb
lret
add
fmull
test
jle
jg
mov
mov
jnp
scas
jmp
sbb
repnz
cmp
enter
arpl
cmp
rcrl
lahf
inc
add
jbe
test
pusha
dec
outsl
imul
pop
movb
int
divl
ret
imul
pop
cmp
sub
es
jns
lea
jmp
dec
lods
stos
test
cwtl
cwtl
mov
cmp
test
pop
hlt
out
loopne
shll
jns
in
mov
flds
stc
add
test
ja
cmpsb
insl
andl
les
or
pop
or
inc
insl
pop
mov
pop
testl
push
mov
push
lret
cltd
adc
lret
xchg
inc
adc
ljmp
adc
je
mov
pushf
push
sub
std
mov
and
out
xchg
add
push
out
jge
xchg
arpl
or
mov
ficompl
stos
out
ljmp
movsl
or
int3
jge
push
mov
pushf
mov
lahf
mov
std
and
dec
adc
and
cmp
and
pop
ss
cmp
scas
xor
pop
push
and
pop
sahf
in
orb
je
push
adc
mov
mov
movsl
lret
mov
scas
cmp
aas
shll
add
leave
cmp
jmp
sbb
mov
xchg
sbb
movsb
lret
or
cmp
loopne
loopne
ljmp
mov
sbb
adc
xchg
jno
test
jmp
icebp
imul
mov
decl
mov
test
test
sub
in
add
je
sub
in
push
pop
sbb
pop
mov
mov
clc
and
ficomps
push
outsl
not
js
lcall
mov
imul
js
mov
jno
js
aaa
inc
push
xchg
inc
bnd
bound
add
std
popw
pop
daa
lds
insl
cwtl
pop
sub
loopne
repz
mov
cwtl
push
mov
clc
repz
push
pop
xorl
mov
xor
jno
and
adc
xchg
fdivrs
lds
push
pop
repz
jne
sbb
adc
xchg
xchg
add
inc
sub
inc
test
push
mov
stc
pop
in
iret
sub
jmp
dec
insl
cmpsb
mulb
xchg
jne
xchg
xorb
in
inc
and
add
cmp
daa
in
lcall
dec
in
pop
in
nop
sub
stc
inc
mov
fwait
stos
ja
jnp
loop
and
adc
out
ljmp
adc
or
or
inc
sbb
pop
lods
mov
call
jmp
mov
aam
lea
imul
sub
dec
and
jbe
push
and
ret
pushf
push
add
imul
lcall
negl
and
lret
xchg
pop
lea
fidivrs
cld
fnop
fsubl
cmpsb
jno
dec
or
hlt
stos
pop
les
repz
rol
insb
mov
mov
cmp
enter
orl
iret
repz
rolb
mov
cmc
jl
testb
xchg
cmpsb
xor
lcall
test
popf
jne
aas
add
pop
out
enter
push
dec
lods
pusha
ret
cld
cmp
mov
aaa
jl
pop
arpl
and
rol
fsubrs
pop
cmp
dec
xchg
lods
adc
mov
ret
jbe
mov
or
pop
inc
jl
bound
repz
ss
aas
pop
pusha
or
hlt
imul
fildll
push
mov
push
les
push
xor
ret
sarl
add
movsb
fs
int
mov
inc
adc
push
mov
lds
jmp
sub
push
ret
lret
and
or
sar
mov
ljmp
dec
inc
call
mov
sub
dec
repz
inc
cwtl
icebp
cmp
jae
inc
cli
pop
sbbl
mov
stc
pop
mov
xor
ds
jne
out
in
mov
fimuls
cmp
push
insb
pop
dec
into
shlb
sub
sbb
sub
jno
inc
pop
inc
or
push
xchg
pop
lahf
pop
inc
push
and
leave
gs
add
les
imull
arpl
jo
mov
cli
ja
push
flds
or
mov
stos
insb
cmp
fiadds
push
xchg
rclb
lods
test
aam
xor
mov
aad
inc
sub
jge
popf
test
mov
push
rcrl
fisubrs
add
enter
das
fildl
push
imul
scas
push
dec
ds
call
cmc
adc
xchg
mov
ret
arpl
sbb
xchg
sbb
jp
pop
sub
sbb
stos
add
adc
sbb
and
in
mov
xchg
in
push
inc
fdivl
out
pop
shl
push
adc
or
int
les
addr16
pop
mov
xor
xor
movsb
dec
jp
imul
cli
xor
repnz
jg
sub
push
jns
mov
dec
mov
popa
movsl
push
addb
sub
cld
pop
cmp
push
repnz
mov
jp
repnz
pop
mov
gs
inc
loopne
sahf
adc
pop
push
push
mov
adc
jle
cmp
data16
testl
dec
lds
inc
test
mov
inc
mov
pop
inc
fwait
xor
mov
jbe
cmpsb
adc
jmp
aaa
aaa
or
into
dec
lret
stos
mov
cmpsb
jo
fcoml
call
mov
hlt
in
pushf
iret
sti
adc
dec
fwait
sbb
and
push
cmp
sbb
jns
movsb
and
pop
clc
jae
dec
xor
fadds
sbb
mov
jecxz
xor
call
sbb
sub
cmp
push
shlb
mov
push
lock
xor
or
addb
cwtl
subl
clc
mov
mov
cltd
notb
jb
inc
fstp
stc
pop
sbb
je
jb
ret
out
js
jl
movb
ret
hlt
movl
inc
leave
mov
arpl
add
jp
loope
test
lahf
cwtl
std
push
aas
mov
push
pop
lahf
std
dec
std
testb
in
stc
pushw
loop
xorb
cmp
pop
test
stc
out
leave
fiadds
test
out
jg
dec
lahf
pop
popa
lret
rcll
out
adc
fadds
mov
push
in
outsb
dec
adc
push
jns
jecxz
test
inc
pop
mov
mov
in
xchg
test
aaa
xchg
xchg
dec
loope
sub
sub
push
xchg
gs
lea
dec
insl
les
push
pop
xor
in
imul
sub
or
cmpsb
rcrl
out
out
arpl
cld
mov
fisubrl
pop
or
je
push
push
dec
push
fisttps
ds
scas
pop
movsb
xor
in
add
jl
decl
pop
sbb
flds
ss
xor
or
shlb
and
xchg
mov
sarl
sbb
push
or
xchg
add
and
loopne
xchg
insl
xor
aaa
test
dec
jbe
adc
and
fidivrs
or
fldcw
mov
sar
or
or
mov
scas
or
push
bound
scas
push
data16
and
mov
or
fcompl
std
les
mov
aaa
mov
cld
das
mov
dec
sbb
jns
sub
add
test
and
push
dec
lea
ret
in
pushf
in
jmp
roll
es
movsb
ret
mov
cwtl
jb
pop
imul
push
jl
xlat
push
add
popf
pop
sub
xor
and
adc
jo
loope
es
movb
movsl
xor
hlt
mov
shlb
lods
jbe
jno
icebp
bound
or
data16
adc
sub
cmp
xchg
mov
lahf
lcall
lods
icebp
mov
dec
je
inc
mov
push
cmp
sub
ja
push
adc
cld
into
mov
sub
jge
push
cmp
adc
adc
outsb
sbb
imul
insl
mov
jl
add
mov
lahf
iret
dec
sbb
mov
in
cwtl
and
sub
test
scas
lret
iret
xchg
push
push
adc
stc
push
add
mov
add
mov
out
and
pop
and
fistpll
js
movsb
mov
insb
jo
push
imul
insb
push
cmp
lcall
jb
add
lock
inc
and
ja
cs
fnstenv
sbb
rolb
push
push
test
sbb
inc
push
push
inc
sti
xor
dec
adc
pop
cltd
jnp
pop
adc
and
mov
lods
mov
xor
push
decb
xlat
xadd
sbb
iret
mov
popf
jno
mov
cmp
sbb
inc
ja
nop
mov
dec
repz
popf
xchg
xor
dec
cmpsl
push
mov
das
mov
push
js
and
jle
push
lea
int
inc
rcr
xchg
sub
xchg
ljmp
cmp
out
jne
rolb
testb
dec
xor
dec
mov
jl
pushf
pop
and
shrl
xchg
push
mov
mov
inc
in
mov
push
push
lea
loopne
or
xor
mull
adc
push
push
push
pusha
jmp
and
subb
movsb
dec
enter
lahf
or
das
or
lods
mov
into
call
shl
stc
xchg
push
pop
xchg
ficoml
add
inc
fidivrl
push
js
inc
push
pop
mov
ret
mov
stos
pop
aaa
cld
adcb
mov
into
imul
cmp
jg
dec
or
mov
push
jmp
sahf
out
mov
in
nop
sbb
fs
stc
sub
xchg
pop
add
xorb
ljmp
arpl
jno
push
ret
mov
fisubl
lcall
lret
cwtl
outsl
push
out
pop
rsqrtps
outsb
out
popf
pop
inc
lock
int
repnz
clc
rcll
in
xor
test
jg
stos
sysexit
add
xchg
lock
xchg
xchg
cltd
in
aas
rol
fwait
out
scas
xchg
movsl
rorl
or
mov
lods
into
jnp
psrld
inc
mov
dec
scas
hlt
xchg
push
and
orl
rcr
mov
inc
sub
std
xchg
sbb
push
push
outsl
gs
aas
div
mov
in
sbb
ljmp
mov
insb
hlt
push
fnstenv
cmp
add
aas
cmpsl
push
fisubl
sub
xchg
mov
mov
enter
mov
scas
add
adc
push
out
jne
cld
or
mov
imul
int3
pusha
out
inc
sbb
mov
int
pop
cmp
sti
lds
jmp
ss
sub
popf
es
mov
xchg
adc
pop
pop
jp
sub
scas
mov
mov
subl
pop
pusha
push
out
iret
das
cltd
repnz
cmp
mov
in
xlat
and
push
movsb
pop
push
xor
fwait
dec
mov
xchg
and
cld
cmp
out
push
push
cs
jecxz
or
push
push
test
mov
movsb
cmpb
xchg
nop
mov
cmp
xchg
push
les
data16
adc
sbb
or
mov
adc
mov
and
jmp
add
add
adc
jecxz
inc
lret
push
sub
ret
ret
cmp
pusha
inc
or
mov
fcompl
ja
les
fsubl
pushf
xchg
mov
gs
cmpsb
test
adc
mov
out
lods
out
inc
add
rorl
add
cmpsl
cmp
pop
popf
pop
in
jne
call
lret
cltd
imul
jbe
negb
rolb
stc
mov
in
nop
cltd
jns
addr16
and
popa
mov
jg
sarl
fidivl
testl
mov
daa
loope
sbb
das
out
addb
add
test
test
ljmp
cmpl
sbbl
outsl
lods
xor
sbb
jp
and
mov
or
or
sbb
sub
js
and
mov
lock
loope
xchg
mov
fisttpl
add
cmp
div
mov
pop
mov
cld
and
push
inc
jno
pop
int3
cwtl
pop
add
frstor
lods
clc
or
xor
dec
js
and
shrb
clc
and
clc
adc
negb
imull
mov
cs
stos
mov
lods
enter
enter
cmp
xchg
mov
popf
fsubrs
cltd
pop
and
mov
sub
push
mov
shlb
inc
dec
ret
mov
imul
ja
adc
add
sub
dec
pop
xchg
xor
in
jo,pt
xchg
int3
jns
insb
xchg
sti
push
ret
pop
xchg
jae
jno
lods
imul
dec
mov
stc
sub
fwait
jecxz
mov
mov
test
ljmp
in
stos
loope
jo
pop
iret
pop
mov
flds
add
mov
std
gs
jnp
jo
ljmp
repnz
push
add
shll
cmc
xchg
mov
bound
leave
iret
loop
mov
cmp
sub
and
cwtl
cmc
loop
cmp
mov
test
fnstsw
leave
and
mov
dec
pop
push
dec
movsl
push
sub
clc
in
mov
add
in
aam
jge
scas
cmp
in
rcl
clc
ror
or
mov
rol
mov
cltd
mov
sbb
mov
cltd
xor
jae
in
pop
icebp
out
sbb
sbb
push
cmc
pusha
cmp
call
pop
int
push
jno
inc
gs
in
mov
insb
loop
aaa
sbb
stc
loope
sti
in
int3
out
fidivrs
adc
cmc
dec
inc
ds
aaa
pop
dec
orl
mov
xchg
jno
cmp
ss
decb
or
mov
jne
out
sbbb
ficompl
jb
push
jae
fisttps
mov
mov
iret
hlt
xor
jo
insb
and
sub
or
and
ja
popf
push
in
shlb
arpl
jae
pop
xchg
push
pusha
sub
out
adc
cmp
les
mov
stos
iret
jmp
mov
lcall
cmpsb
mov
sub
pop
pop
and
xchg
or
xchg
xorl
sbb
ds
rorb
andb
out
dec
xchg
dec
sbb
jae
cli
pop
cmp
int
xchg
mov
inc
cmpsb
ret
pop
push
jnp
and
xor
cmc
xchg
outsl
push
inc
loop
dec
add
xchg
iret
push
btrl
in
push
mov
pop
mov
outsb
in
out
fs
icebp
cld
sub
mov
or
stos
cmp
shll
mov
lcall
sub
test
mov
sub
in
fbstp
push
push
pop
pop
mov
jge
ljmp
sub
jp
loope
dec
sbb
lods
dec
dec
adcb
push
sbb
mull
push
or
test
pop
pop
iret
and
push
xchg
dec
dec
ss
inc
jle
sbb
push
jne
inc
mov
sbb
pop
sbb
mov
std
fldt
inc
dec
pop
lahf
xor
push
stc
ret
push
hlt
jle
rcr
sub
dec
lds
xchg
addr16
int3
push
clc
pushf
xor
popf
das
es
sbb
push
lds
sbb
popf
ljmp
je
or
aad
icebp
xor
daa
ss
icebp
stos
movsl
lret
cwtl
push
mov
jns
adc
add
xchg
push
mov
outsb
scas
lds
popf
pusha
bound
lcall
sub
mov
out
and
mov
add
out
push
shl
out
cltd
jb
je
mov
xor
xlat
jbe
mov
cwtl
mov
and
adc
lcall
sub
sbbl
push
ja
testl
jns
jae
icebp
sub
pop
rolb
int3
xchg
fstl
mov
add
ficomps
push
std
inc
pop
and
scas
jmp
adc
arpl
sarb
call
jne
fwait
jne
xor
add
popa
movb
fsubrs
push
call
ret
mov
mov
and
push
add
mov
push
add
jmp
push
push
hlt
dec
lret
lock
mov
std
cmp
popf
sub
out
jecxz
xchg
daa
stos
sti
mov
int3
stos
and
leave
or
decb
sbb
mov
cli
stc
lods
inc
xchg
icebp
punpcklwd
mov
in
push
in
mov
mov
pop
std
test
lods
daa
std
push
movl
es
push
xchg
sbb
loop
and
jb
mov
inc
adc
mov
arpl
adc
pop
rorb
cli
repz
ljmp
jns
popa
cmc
adc
cmp
pop
or
insb
sti
or
adc
cld
sub
loopne
dec
roll
sbb
lret
or
call
jns
dec
pop
push
or
fsubl
jp
cmp
pop
inc
push
add
or
xor
inc
cmp
inc
jo
lret
push
pop
xchg
sbb
jo
jmp
bound
aad
pop
stc
scas
or
add
mov
stos
cmp
or
insl
ja
dec
push
in
sbb
movsl
sub
popf
mov
sub
inc
jns
insl
and
insl
pop
icebp
fcoms
call
int
adc
cmp
arpl
roll
and
dec
test
in
icebp
dec
xor
inc
stc
adc
iret
mov
sbbb
pop
and
or
pop
add
flds
adc
dec
adc
xchg
or
xchg
xor
call
jbe
mov
xchg
add
push
aam
lods
jne
xchg
adc
aas
outsl
jo
rcrb
xchg
ja
scas
test
mov
pop
clc
adc
mov
add
movsl
seta
mov
cwtl
sub
pushf
jp
popa
mov
mov
mov
xor
sub
inc
pop
push
push
push
ret
cld
push
test
cltd
adc
xor
sbb
mov
iret
push
sub
mov
add
cmp
idivl
jg
jge
lods
cwtl
mulb
mov
xorl
sub
das
push
cmpl
lock
mov
call
lds
shll
sub
sbb
adc
ds
jl
icebp
jns
xchg
rclb
decb
push
loope
div
scas
clc
mov
out
dec
push
jecxz
push
cli
adc
jno
lock
push
fadd
xchg
andl
push
push
mov
out
push
addr16
dec
out
sub
xchg
push
mov
js
mov
inc
scas
loopne
lret
push
sti
cmpsl
mov
repnz
aam
pop
sub
add
je
cmp
sti
jecxz
xchg
pop
xor
loope
pop
pop
dec
cmpb
and
and
or
test
test
adc
sbb
jno
dec
pop
sbb
pop
mov
rorl
mov
pop
cmp
or
ss
or
mov
cmp
adc
adc
jge
inc
int3
add
adc
adc
imul
xor
aad
fcmovbe
push
or
outsb
mov
cmp
outsb
push
dec
adc
ffree
arpl
aad
pop
out
jp
xchg
aas
gs
mov
inc
out
xchg
add
int
inc
sub
cmp
cli
xchg
dec
push
imul
jmp
insl
xchg
cmp
mov
inc
das
into
in
bound
es
and
scas
gs
mov
xor
rcr
aas
idivl
adc
jno
loopne
inc
mov
and
inc
xor
xor
shll
loope
lods
jg
and
data16
jg
xor
aad
cmp
lods
aad
test
iret
mov
dec
xor
out
jo
mov
sti
roll
or
cmp
inc
sub
adc
sub
sbb
divl
mov
repnz
stos
iret
adc
pop
cmp
stos
shlb
push
sti
xor
push
cwtl
imul
pop
outsb
fbld
dec
push
lock
pushf
mov
int3
aas
cli
in
or
mov
xlat
rolb
fstpt
fistl
jb
fadds
ss
mov
je
xchg
loope
cmp
pop
xchg
test
mov
xchg
jno
dec
test
rorl
cmp
mov
mov
sbb
dec
jo
sahf
and
ja
lret
mov
jmp
inc
mov
push
xor
dec
inc
mov
pop
cmp
movsb
pushf
mov
mulb
and
cmc
cmp
cmpb
pop
pusha
sbb
cmp
call
xchg
test
jle
stos
push
iret
jo
jb
jbe
adc
shlb
stos
xor
enter
insb
lcall
mov
jecxz
or
mov
dec
mov
push
jns
jbe
xchg
shr
rol
pushl
fxch
add
inc
cwtl
dec
cld
test
loope
lock
add
add
lock
adc
mov
mov
and
mov
mov
int
fisubrl
or
pop
sub
adc
ret
mov
xchg
sub
pop
in
fld
imul
push
add
xchg
inc
shlb
jp
mov
pop
dec
add
iret
imul
xor
pop
sbb
mov
loopne
scas
sbb
or
cmp
xor
push
lcall
sbb
ljmp
rcr
or
cmp
or
push
inc
sarb
lds
in
in
aad
push
and
xor
jo
negb
iret
fisubs
test
iret
push
xor
sbb
sub
int
xor
xchg
add
es
es
out
dec
call
ss
aaa
sub
jmp
cmp
es
std
xchg
mov
mov
addl
or
and
inc
nop
jo
inc
jns
add
dec
xchg
push
arpl
scas
and
in
adc
fs
pushl
xchg
push
cwtl
imul
cmp
ret
mov
jmp
push
sti
not
and
test
imul
and
and
push
enter
and
mov
inc
xchg
pop
sbb
int
orb
ja
sar
push
jmp
sub
pop
hlt
cli
pop
pop
push
lock
pusha
mov
fcmovu
jns
clc
out
cmp
lock
inc
mov
push
mov
outsl
lcall
out
dec
and
pop
ret
add
jno
cmpsb
mov
fldenv
push
sahf
loopne
stos
sub
push
cmpl
fs
sub
mov
aaa
and
jp
stos
dec
inc
movsb
out
lock
push
pop
js
icebp
mov
fiadds
lahf
lods
cmpsb
push
jne
xchg
loope
push
sub
ljmp
inc
out
aas
mov
aam
ss
out
insb
lret
gs
jmp
daa
mov
mov
leave
lods
pop
xchg
lcall
push
xchg
lret
test
mov
or
lret
fwait
mov
pop
dec
repnz
lcall
insl
xor
emms
repnz
xchg
and
adc
push
dec
jmp
or
and
shlb
push
add
cltd
call
mov
cmc
jmp
lcall
mov
mov
pop
cmc
sbb
arpl
xchg
lods
sbb
and
mov
push
aas
lret
push
lret
sub
xor
sub
dec
and
dec
fmulp
movsl
sbb
push
mov
fiaddl
out
xor
lahf
add
jo
jne
sbb
xor
and
jp
mov
ficomps
cmpsb
aad
test
cs
lret
mov
push
scas
jbe
jns
outsb
adc
push
cwtl
pop
mov
sahf
das
add
jmp
ret
push
and
je
lahf
add
or
out
jmp
aaa
mov
les
mov
jg
mov
adcb
add
mov
fildll
xor
cld
cmp
mov
push
in
sbb
icebp
js
les
jl
mov
fcmovb
inc
pop
push
wbinvd
or
xchg
fsubrs
testb
mov
jp
mov
pusha
cmc
mov
inc
loopne
push
sbb
adc
inc
sti
insl
out
imul
iret
sub
pop
sub
cmp
xor
fmull
sarb
or
mov
mov
pop
xor
sahf
and
jnp
cmpsl
repnz
mov
shll
xchg
mov
test
stos
pushl
pop
push
negl
fstps
mov
and
mov
outsl
sub
cmp
popa
add
pop
sbb
cmp
xchg
roll
mov
movsb
cmp
push
pushf
cwtl
shr
pop
fiadds
and
add
out
inc
mov
adcb
popa
pop
repz
arpl
inc
lret
test
repz
addr16
push
les
dec
fcoms
cli
jnp
pop
clc
sub
push
xchg
ljmp
add
pop
lods
inc
sub
pmulhuw
scas
mov
ret
std
jne
outsb
fdivrl
mov
pop
mov
orl
int
dec
xchg
mov
out
and
push
jbe
mov
xor
lock
mov
orl
dec
fdivrs
insb
fcoml
add
or
dec
inc
nop
int
mov
jmp
inc
xchg
mov
aad
and
cmpsb
hlt
std
jge
data16
push
outsb
and
and
add
pushf
clc
test
sbb
jb
and
test
outsl
push
push
loopne
xor
pop
imul
inc
xor
lods
xor
in
jnp
mov
ror
mov
inc
aam
xor
jmp
pop
in
sbb
and
mov
mov
mov
flds
xor
cli
aas
repnz
icebp
mov
ds
sub
sahf
in
and
es
and
lods
inc
fisubrl
jo
pusha
rolb
jnp
push
pop
stos
into
out
test
pop
mov
inc
cltd
mov
imul
sub
push
icebp
and
sti
add
ret
pop
adcl
shrl
int3
addr16
les
dec
sbb
mov
into
outsl
ljmp
jecxz
rcl
sar
sbb
sarl
bnd
add
inc
push
test
mov
mov
or
in
ja
mov
mov
push
ss
dec
int
test
and
jns
icebp
push
jne
pusha
rcrb
inc
cmp
out
clc
testl
xchg
push
ficompl
lahf
push
push
mov
jge
or
sbb
mov
lahf
push
push
mov
pop
mov
aaa
jg
cmp
aam
sbb
out
cmp
and
and
pushf
leave
ret
mov
and
mov
mov
repz
add
and
add
jmp
push
fisubrl
lea
imul
jl
xchg
stos
aas
test
adc
add
or
xor
xor
jnp
add
jo
testb
test
sub
insb
cli
jno
inc
cld
xchg
je
pop
fiaddl
xchg
xchg
or
or
add
outsb
and
mov
aad
lods
and
and
dec
int3
and
sub
mov
jmp
test
call
addr16
cmp
xor
cmpsb
or
push
and
pop
sbb
sar
cmp
jmp
add
das
xor
scas
xchg
pop
loopne
loopne
sbb
push
jge
dec
sub
dec
xor
hlt
les
adc
xchg
aaa
pop
add
mov
cli
sbb
inc
push
jle
stos
push
movsb
add
pushf
iret
add
dec
lock
jb,pt
xchg
mov
divb
sbb
inc
rcrb
lahf
test
push
push
enter
mov
and
mov
arpl
and
fistpl
inc
xchg
enter
sti
sbb
aas
or
imul
movsl
push
inc
mov
test
aam
ljmp
push
sub
test
jnp
popf
fsubrp
leave
push
out
imul
or
test
mov
das
push
cmpsl
cmc
arpl
mov
jno
popf
and
add
inc
mov
in
xchg
ret
pop
mov
sbb
push
in
imul
sbb
cmp
addr16
adc
mov
arpl
mov
aas
add
jnp
mov
call
icebp
in
add
push
mov
cmpsb
or
and
mov
icebp
mov
cmp
mov
jb
jnp
stc
or
int3
jnp
push
hlt
les
xchg
and
test
aas
mov
test
push
mov
fsubrl
push
jmp
xlat
jp
push
std
xor
adc
popf
adc
in
bound
or
rep
lret
lret
sbb
xor
les
stos
sbb
out
jb
jbe
movsb
jl
push
clc
mov
inc
lods
cmpsl
push
xchg
subb
push
mov
mov
jg
cmp
cmp
insb
fcoml
repnz
sub
dec
xchg
mov
jns
xchg
sbb
lret
xchg
xchg
jns
pop
pop
mov
dec
rcrb
add
outsl
xor
arpl
pop
lret
push
sbb
cmpsl
or
cmpb
out
repz
in
andb
in
pop
or
repnz
sahf
cmpl
inc
xor
mov
call
sub
repz
jl
mov
jno
hlt
int
jmp
xlat
loopne
jecxz
and
scas
adc
add
das
sti
sti
bswap
iret
ret
test
add
scas
std
or
hlt
xchg
lea
xor
es
lods
pop
xchg
inc
pusha
push
jle
xchg
pop
add
lock
xchg
pop
inc
pop
adc
cwtl
xchg
or
cmp
add
adc
jl
data16
adc
call
out
ljmp
cmc
mov
lods
sbb
shlb
xor
adc
xor
inc
out
xchg
fnstenv
pop
fsubrs
adc
cmc
out
mov
push
sub
pmaddwd
enter
les
push
mov
das
popa
aas
sub
and
inc
fists
je
inc
cli
push
mov
push
rorl
xor
cs
scas
adc
les
ret
inc
loop
fidivs
pop
std
sti
mov
mov
push
mov
pop
je
addr16
cs
and
cli
fs
aad
in
or
jmp
push
mov
lods
lds
jp
inc
inc
notl
faddp
xchg
jp
mov
mov
fucomp
ljmp
or
push
jae
cmp
cmc
out
div
xor
xor
data16
dec
test
inc
insb
sbb
push
mov
lea
add
and
push
sub
pop
sub
mov
xchg
push
imul
jl
outsb
repz
or
mov
sbb
pop
int3
push
adc
loope
adc
adc
into
ret
mov
dec
out
mov
mov
jb
push
push
lea
repnz
mov
sbb
ficomps
mov
shrb
adc
lods
cmp
in
and
das
or
push
push
or
ss
and
sbb
jp
stos
inc
fwait
inc
mov
mov
inc
jg
jb
jae
push
mov
ja
add
xchg
add
out
xchg
jmp
mov
inc
pop
ficoml
pop
pop
es
pop
rcrb
pop
jae
mull
inc
pop
xchg
push
test
dec
push
add
add
and
sub
ds
cmpsb
xchg
mulb
inc
cmp
inc
sbb
aas
ds
mov
or
or
add
out
push
lcall
les
movsb
and
js
imul
stos
cmp
fidivs
inc
xor
lcall
adc
loopne
test
cmc
inc
loope
ret
inc
pop
pop
js
pop
and
mov
and
imul
xchg
movsl
in
fwait
int3
lahf
inc
dec
js
aad
jecxz
push
push
lahf
jne
int
mov
mov
jo
ja
clc
test
negl
push
scas
jno
cmc
pushf
ljmp
mov
leave
or
add
lods
xchg
jo
aaa
xchg
adc
bound
pusha
popa
inc
fistps
data16
lcall
xor
push
subl
icebp
push
mov
xchg
mov
sub
jl
mov
ljmp
jg,pt
or
mov
xchg
addl
stc
stos
cltd
pushf
pop
ds
clc
scas
sbb
lret
addl
xchg
outsb
add
clc
mov
add
add
cmp
xchg
jns
push
fwait
xchg
dec
dec
xor
inc
sbbb
push
in
pop
mov
jns
shll
imul
cmp
sub
std
add
jae
inc
or
jns
xchg
lods
bound
jmp
dec
sbb
cmp
xor
divl
in
lea
sub
outsl
mov
dec
adc
mov
jle
jne
xlat
cmpsb
sti
push
loopne,pt
jb
rol
js
movsb
inc
mov
jno
adc
stos
xchg
dec
or
nop
jle
fsubs
jmp
sub
ja
addr16
ret
in
dec
insl
sahf
mov
fimuls
call
inc
aas
jno
mov
xchg
sub
cmpsl
xchg
dec
loope
cmc
mov
pushf
lret
lds
add
in
jnp
push
pop
clc
cld
xchg
int3
and
and
call
jmp
bswap
xlat
rcr
inc
add
pop
shr
xchg
mov
xchg
call
mov
cmp
pop
mov
dec
cmp
in
clc
cli
push
je
test
mov
test
dec
arpl
or
add
mov
mov
andl
or
sub
lods
fstpt
sub
push
ds
pop
xchg
jae
push
mov
mov
push
ret
stc
or
push
les
into
sti
mov
mov
push
int
dec
jns
xor
cmp
and
fcompl
dec
aam
lret
jno
fnstsw
out
mov
pop
nop
add
xchg
and
pop
add
movsl
jne
mov
dec
jp
in
inc
dec
icebp
mov
enter
iret
sub
pushf
div
shlb
jae
cmp
jmp
outsb
and
cld
icebp
aad
leave
ss
pop
lahf
cwtl
into
dec
dec
cld
xor
fst
jp
cmpsl
dec
push
inc
leave
sbb
dec
cwtl
mov
mov
sub
out
sarw
add
push
push
mov
js
pop
roll
lret
jnp
mov
stos
jecxz
and
lods
loopne
ret
xchg
ds
insb
ds
or
dec
mov
stos
cs
xchg
rcrl
jge
mov
mov
pop
pop
mov
inc
mov
mov
mov
cmp
repz
mov
fnsave
iret
jmp
outsb
rcll
mov
dec
and
or
mov
push
lcall
into
ja
sbbb
pop
mov
sbb
push
xlat
test
repnz
mov
rorb
sbb
icebp
fildll
addr16
jnp
push
hlt
dec
adcl
clc
mov
and
cmpsl
ret
out
pop
stos
push
inc
ret
add
scas
ret
xor
add
fidivs
sbb
add
pop
xor
adc
push
les
push
out
sahf
push
cwtl
out
dec
jbe
ljmp
lahf
test
jg
cmpsb
cmp
sub
imul
inc
mov
adc
std
and
push
mov
or
popf
xchg
subl
push
in
xchg
xchg
and
int3
jp
lret
dec
pop
loope
dec
add
inc
cmpsl
inc
inc
or
in
and
push
movsl
mov
test
xchg
inc
shrb
xor
ret
fimuls
xchg
mov
nop
mov
lret
push
adc
in
es
sbb
inc
pop
test
out
adc
cmpsb
and
sub
ja
jo
fwait
daa
jecxz
pusha
add
xchg
rcl
faddl
and
repz
xchg
subl
imul
xchg
push
jno
stc
jno
cmpl
test
mulb
ret
sbb
sahf
lahf
sarl
mov
cmp
pop
add
sti
push
daa
or
aam
push
push
push
inc
xchg
mov
jge
gs
nop
or
inc
cmp
xlat
and
les
loopne
addl
mov
push
cmp
mov
fidivrl
adcb
mov
loop
sbb
int
and
cli
cmpsb
pop
fdivrl
cmpsl
jb
int
insl
loop
loop
adc
xchg
sub
jge
inc
jmp
jns
adcl
pusha
pop
dec
mov
js
js
xchg
inc
xchg
adc
iret
ljmp
pop
test
les
sub
jp
sahf
ret
cli
jo
ss
mov
adc
lcall
movsl
dec
mov
lahf
xor
mov
jo
jg
sbb
outsb
sub
aaa
mov
in
push
pusha
cmp
jge
popa
push
cmp
sub
push
xor
lea
mov
je
sub
xchg
mov
andb
ret
or
jbe
in
mov
and
and
add
mov
in
push
incb
inc
xchg
repz
test
jo
out
jp
rcr
inc
push
xchg
inc
mov
mov
sub
cs
jp
sbb
xchg
fildll
and
imul
mov
cmp
mov
push
sbb
xor
movsl
cmpsl
popf
xchg
iret
bound
sbb
pop
ja
or
pop
mov
sub
int
push
lcall
lods
mov
popa
xlat
mov
out
gs
mov
sub
shlb
fldenv
cli
les
xchg
cmp
iret
imull
pop
xchg
push
push
jne
or
in
popf
pusha
inc
in
jl
push
imul
dec
aaa
je
sub
loope
mov
push
push
xor
es
or
test
rorb
dec
fistpl
popl
imul
sbb
stos
mov
aas
fiaddl
mov
lea
shlb
lcall
xor
add
mov
or
lock
cld
inc
fs
pop
dec
insl
jo
push
test
scas
popf
andb
insl
mov
fnstenv
sbb
mov
sbb
mov
sbb
adc
pop
xor
lea
pop
cmpsl
addr16
xor
adc
jmp
outsl
cmp
cmc
or
push
aas
loope
aad
rol
xchg
int
inc
movsb
xchg
inc
inc
cwtl
inc
std
lods
mov
repz
repnz
xlat
addb
ret
lahf
repnz
cmp
pop
test
scas
xchg
sub
scas
rcrl
xchg
add
pop
pop
or
sbb
mov
ljmp
pop
adc
lahf
mov
idivb
adc
sbb
xchg
mov
xor
jo
pusha
push
push
sbb
mov
test
mov
fidivrs
pop
mov
jae
and
inc
mov
lcall
mov
ds
mov
jge
test
ljmp
xchg
xor
lahf
stos
pop
push
and
sbb
cld
repz
xor
push
jge
sub
loope
mov
in
add
repz
push
mov
out
push
xor
dec
outsb
jno
push
out
inc
cli
mov
mov
pop
or
daa
push
stos
sbb
mov
pop
shlb
shlb
dec
xor
fldl
ret
ret
in
jp
push
xor
sbb
and
push
pop
push
jno
imul
arpl
jbe
sub
arpl
push
jns
mov
mov
push
push
mov
dec
loop
dec
movsl
push
pop
sti
jmp
testb
lock
movsl
adc
add
xor
mov
shll
push
aas
sub
fs
lock
push
outsl
xchg
rolb
cmp
iret
push
lds
or
jmp
popa
fnstenv
out
lock
mov
fidivs
lahf
pop
sbb
mov
xchg
dec
mov
fwait
jecxz
jns
out
ret
add
sbb
mov
repnz
iret
leave
adc
test
outsb
sub
cmpl
add
lock
ret
mov
ds
outsb
xchg
xchg
push
push
frstpm(287
and
fistl
pop
inc
testl
out
int
das
aaa
andb
mov
xchg
mov
test
loope
mov
in
jmp
sub
mov
lea
sahf
mov
dec
xchg
xor
or
jmp
in
rorl
xor
mov
lock
mov
xchg
aad
adc
popa
mov
mov
mov
pushf
cmpsl
rcll
push
js
xchg
mov
mov
and
cli
cmpsl
shrb
scas
xchg
movsb
pop
pop
adc
jge
aad
jecxz
out
scas
pop
cmc
jno
shll
pop
xchg
or
lods
inc
and
popa
and
push
inc
mov
jmp
jne
test
lahf
scas
push
cmp
mov
aad
iret
cmpb
arpl
cmp
pop
insb
inc
xor
and
dec
mov
jmp
adc
insb
sbb
pop
aas
sbb
int3
test
fisubrs
das
icebp
sub
stc
xchg
jmp
adc
mov
lahf
inc
push
add
inc
or
sbb
or
adc
movsl
sar
mov
popa
mov
push
jl
test
inc
push
fs
xchg
daa
xlat
jg,pn
ret
mov
inc
rcrb
stos
scas
outsl
mov
mov
scas
dec
sarl
add
test
cmp
addl
dec
sub
in
push
xor
cmpsb
ret
mov
aas
into
cmp
push
add
push
scas
jne
mov
dec
imul
mov
fisubrl
sbbl
aaa
dec
mov
lea
or
cltd
into
dec
psraw
xchg
mov
or
mov
lret
push
and
call
mov
pop
lea
sarb
pop
adc
testb
inc
xor
fwait
iret
bound
xor
aaa
xchg
xchg
ljmp
sbb
loopne
ss
jbe
fistps
sub
push
and
xor
mov
js
mov
adc
mov
cli
and
ljmp
jl
shll
mov
ret
fs
mov
xchg
popf
xchg
movsb
outsl
sbb
xor
sub
cli
adc
into
das
and
and
sbb
outsl
dec
imul
outsl
sbb
lahf
fisubrl
aam
hlt
sub
dec
daa
push
frstor
in
mov
int3
jns
ficoml
ret
aam
push
push
cltd
into
pop
lret
cmp
pop
int3
push
not
hlt
jae
push
xchg
push
popa
cwtl
ret
pop
insb
fcmovbe
popw
jecxz
mov
pushf
xchg
inc
push
cli
dec
mov
iret
and
inc
mov
inc
fucom
mov
adc
mov
lahf
hlt
xor
cmpsb
push
lret
nop
xchg
xchg
mov
jp
push
push
pop
aad
jns
xchg
cmpb
rol
fcomip
add
pop
lea
mov
mov
sarl
sub
pop
inc
add
sbb
dec
cmp
xor
bound
sub
mov
orl
mov
mov
int
es
icebp
adc
mov
ret
inc
fimuls
mov
ja
test
fldenv
push
jl
cmp
lods
leave
ja
adc
jns,pt
lea
mov
push
loope
xchg
roll
push
sti
or
fisubrl
or
aaa
cwtl
lods
push
es
jb
xor
mov
mov
push
mov
cmpsl
ret
inc
or
push
sub
mov
lea
cs
out
mov
mov
jnp
cmp
rol
add
cltd
mov
xchg
lds
outsl
xchg
pop
js
or
jg
outsl
jae
fs
ss
divl
testl
ss
mov
in
out
loop
ret
lock
mov
fadds
and
push
div
mov
icebp
add
push
push
ss
dec
xor
clc
scas
sub
es
rcl
push
rclb
dec
clc
adc
arpl
insb
outsb
imul
inc
dec
jmp
jecxz
repz
jmp
aad
into
xchg
mov
adc
add
jno
xchg
sbb
aaa
push
cmpsb
stos
xor
iret
jmp
cmp
pop
mov
jecxz
in
movsl
int
add
pop
pop
andl
xor
das
out
push
xorb
cs
out
insl
movsb
or
rol
fisubrs
cwtl
mov
shll
icebp
mov
popf
xchg
pop
sub
outsb
icebp
scas
adc
sbb
pop
xchg
nop
call
test
lahf
pop
stos
jns
mov
cli
xor
cmp
inc
cli
push
dec
idivb
inc
aas
xchg
test
and
fcomp
xor
sti
ret
adcl
hlt
push
int
ss
scas
sbb
jns
dec
xchg
outsb
sbb
fimull
and
out
push
ds
and
xchg
sbb
jae
fadds
fdivl
cmp
cmpsb
pop
rcll
cwtl
cmp
inc
cmp
pop
cmc
aam
mov
arpl
add
sbb
push
mov
lcall
lahf
repnz
dec
aas
cs
inc
fwait
hlt
incb
dec
jne
mov
pop
cmp
add
mov
cltd
pop
fwait
in
iret
in
shll
loopne
cmpb
pop
adc
sbb
pop
jle
jns
mov
mov
or
xchg
subl
cmpsl
push
xor
repz
sub
aad
sub
leave
mov
stc
imul
test
mov
and
add
mov
pushf
dec
cli
popa
sbb
ja
mov
addr16
dec
cmpb
ret
dec
inc
cwtl
cmp
push
ljmp
sbb
mov
xchg
sub
fcoms
cmc
mov
mov
pop
lods
jb
movsb
jmp
popf
out
dec
cwtl
inc
insb
sub
ja
or
lods
test
les
jo
pusha
lret
xchg
das
pop
add
pushl
or
lods
popa
loopne
jbe
push
jp
mov
jb
sarl
fsincos
enter
es
lcall
sbb
sub
cwtl
mov
cwtl
jmp
icebp
jbe
popf
pop
or
pop
in
push
push
stc
lods
scas
ret
mov
ja
pop
stos
push
scas
ficoms
sbb
fisttpl
and
out
jb
data16
mov
adc
loopne
sub
inc
push
mov
sub
cmp
imul
and
xchg
sub
or
push
jmp
enter
sub
cmpsl
inc
in
mov
and
gs
or
int
out
sub
fiaddl
jp
das
lods
fists
xchg
and
shlb
lods
jecxz
cmp
scas
jl
repz
out
fldt
daa
jle
jnp
movsl
ss
xor
xor
mov
stos
nop
bound
pop
movsl
sbb
aam
or
inc
push
dec
mov
cmp
call
xchg
cmp
or
sub
push
mov
cmp
sub
inc
stos
mov
imul
mov
insl
dec
orps
mov
inc
or
jno
les
and
scas
sar
mov
or
icebp
or
xchg
lods
mov
jecxz
dec
sub
push
push
aam
mov
and
sahf
jecxz
mov
sub
sub
add
push
mov
and
dec
or
sbb
pop
inc
stos
jg
pop
push
repnz
out
addr16
jle
cmp
scas
and
sub
xchg
fsts
pop
mov
js
adc
fiadds
cli
pop
ljmp
push
pop
pop
ja
incl
add
inc
es
jb
pop
shl
je
shrl
shll
adc
aas
sahf
jg
movsl
int
mov
dec
mov
sbbb
into
cld
dec
mov
push
data16
mov
xchg
sti
dec
or
ljmp
fdivp
repnz
push
add
mov
fisttpl
sti
xor
inc
mov
mov
dec
stos
fwait
mov
in
pushf
jo
sub
mov
sbb
push
pop
add
adc
xor
popa
jmp
adc
xor
addl
pop
pop
cmp
inc
push
push
addl
fwait
add
mov
dec
xor
mov
add
incl
aad
push
pop
lods
sbb
in
mov
imul
mov
std
and
pushf
adc
or
jbe
lahf
mov
xlat
out
aad
std
ds
push
xchg
jnp
sbb
jne
dec
daa
mov
fldenv
cmp
movsl
push
and
icebp
mov
cwtl
scas
sbbb
ss
mov
jecxz
fisubrs
ret
cmpsb
xchg
int
xchg
push
repnz
icebp
cwtl
aaa
fisubrl
sub
lds
out
pop
xchg
repnz
add
xchg
adc
std
or
sahf
and
rorb
dec
cld
or
inc
pop
add
push
push
lods
bound
mov
dec
das
mov
add
jecxz
push
and
je
arpl
mov
testl
jecxz
jmp
icebp
mov
rcr
jp
repz
push
in
sarl
add
dec
imul
repz
cmp
add
inc
movsb
jne
stos
inc
iret
cltd
mov
jo
scas
sar
mov
loop
push
leave
sbb
leave
mov
adc
cmpsl
testl
inc
or
outsl
or
jg
lods
add
ror
test
es
lcall
cmp
add
push
push
repz
jmp
inc
mov
popf
jo
cmp
dec
jmp
ljmp
je
mov
sbb
pop
mov
and
imul
in
lret
cwtl
ljmp
xchg
or
pushf
add
lcall
stos
test
fcmovb
add
xchg
into
dec
cltd
mov
xchg
imul
mov
loopne
cmp
cmp
cmp
mov
idivl
push
dec
ja
sti
test
xor
xor
outsb
jae
js
jns
inc
xchg
push
cltd
or
sub
pop
jae
cmp
rol
mov
mov
or
fnstcw
fiadds
jno
adcb
imul
cmpsb
adc
push
popf
mov
cmp
lret
pop
std
adc
lock
ret
push
xlat
lea
push
xor
push
xchg
test
sub
call
xor
test
arpl
push
shl
jle
es
and
testb
mov
gs
lock
movsl
push
cli
movsb
xor
pop
xlat
inc
cmp
fistps
push
jne
jno
cmp
mov
dec
sub
inc
push
je
push
mov
mov
xchg
leave
mov
insl
xor
pop
iret
sti
imul
ret
faddl
test
cs
loope
xlat
scas
pop
stos
lcall
mov
std
sub
fndisi(8087
shr
mov
sbb
fsubrl
test
mov
mov
in
pop
xchg
jge
pop
inc
dec
sbb
std
mov
in
test
jbe
xchg
sahf
lods
push
fldt
mov
mov
sbb
ja
adc
lcall
outsl
jmp
lods
mov
jnp
xor
dec
jns
lods
jnp
cmp
arpl
cmp
negb
adc
test
lock
fcoms
or
add
aaa
mov
and
test
aas
pop
lods
mov
fwait
and
adc
lods
in
xlat
jecxz
mov
sbb
dec
lret
dec
inc
jle
jo
mov
sub
or
cmpsl
jb
cmp
sbb
pop
adc
add
repnz
mov
fnstenv
sub
jne
xchg
dec
cmp
lds
fmull
xchg
push
cmp
inc
fimull
pop
lods
fcomp
xor
inc
out
jo
dec
divl
fcoml
fistpl
xor
dec
icebp
cmpsb
push
dec
pushf
loopne
jge
push
mov
aaa
je
stc
icebp
ret
mov
or
adc
xchg
dec
jno
sbb
pushf
stos
mov
dec
or
sub
jp
int
outsb
pusha
adc
adc
jecxz
jl
sbb
lahf
jo
pop
jno
dec
insb
test
sbb
cli
gs
inc
js
mov
cmp
stc
jno
mov
int
lds
dec
and
adcl
daa
pop
inc
cmp
xchg
xchg
push
mov
mov
les
mov
addr16
stc
push
jp
sub
clc
pop
sbb
and
out
test
ss
sub
cwtl
mov
push
fdivrp
les
push
cltd
aad
out
cmp
fbstp
sbb
aas
cs
sub
cltd
dec
int
in
add
mov
mov
sub
jb
push
rorb
fdiv
out
outsb
fwait
jne
and
out
into
dec
dec
sub
xor
mov
pop
push
pop
shrb
mov
ds
movsl
in
pop
les
xchg
stos
cmpsl
stos
dec
and
push
lret
pop
add
enter
adcb
xor
rol
mov
loopne
xchg
xlat
xor
fiadds
in
adc
dec
or
xchg
or
push
push
adc
or
lahf
mov
mov
mov
lret
cli
je
add
push
aas
outsl
pop
pop
test
fs
btr
dec
cmpsl
adc
jno
jl
inc
xor
mov
cmp
xor
sub
iret
imul
repnz
xlat
fisubrl
dec
ja
add
leave
repz
mov
fstl
dec
mov
pop
inc
push
fildl
lods
push
arpl
mov
cltd
rolb
and
stc
xchg
pop
jae
adc
in
xchg
jbe
sbb
test
leave
shrb
cmp
dec
push
scas
pop
dec
push
push
leave
enter
pop
xchg
sbb
fs
int3
add
cmovae
xchg
and
sub
xor
jns
movb
jp
scas
loop
clc
call
inc
jo
and
and
xchg
daa
icebp
pop
fwait
out
inc
xor
xchg
insl
fwait
jecxz
sbb
fildl
jg
xchg
in
pop
mov
add
ljmp
inc
pop
jno
jae
or
pusha
std
mov
xor
xor
or
bound
jne
imul
and
xchg
das
jns
jp
loop
or
xor
imul
out
loope
sbbl
dec
sub
aam
mov
xor
shl
or
cmpsl
cmp
mov
dec
gs
rcll
out
nop
jae
jnp
es
dec
xchg
jb
push
sbb
cbtw
add
aad
jae
xor
add
dec
cmp
negb
mov
fcomps
inc
aam
push
repnz
mov
mov
mov
in
scas
icebp
movsb
mov
notb
ret
xchg
mov
and
clc
and
pop
sbb
outsb
insb
adc
jo
repnz
xchg
cmpsb
movsb
fdivrs
lcall
ret
add
insb
imul
movsb
cmc
adc
mov
call
nop
xor
icebp
inc
stc
stos
pop
inc
daa
outsb
inc
dec
addl
adc
fsubr
push
out
cmp
and
shrl
gs
xchg
and
inc
outsb
repz
pusha
mov
in
decl
sbb
leave
testl
xor
imul
movsb
pop
ljmp
dec
test
test
and
sbb
repnz
loope
jae
adc
sarb
push
lcall
mov
loope
cs
roll
out
mov
cmpsb
mov
sbb
out
mov
pop
repnz
in
jge
inc
test
popf
repz
les
push
jmp
repz
jl
je
mov
dec
xchg
icebp
fisubrl
jp
sbb
cmp
movsl
pushf
push
outsw
cmc
cmp
sbb
cwtl
insl
mov
push
jne
mov
lret
xor
pusha
daa
mov
or
xorb
cltd
mov
mov
pop
in
arpl
cmpsb
in
cmp
subb
xor
cmpsl
aaa
dec
lret
xchg
sub
mov
loop
fwait
mov
popf
lods
test
loop
xchg
mov
inc
repz
dec
ss
pop
cwtl
push
xchg
icebp
push
les
repz
outsl
mov
mov
xchg
sub
les
int
push
gs
lahf
insl
je
aas
inc
in
loop
mov
call
inc
shlb
insb
inc
dec
lods
inc
dec
pushf
adc
dec
iret
data16
dec
subl
mov
aad
push
rorl
dec
shrl
in
hlt
int
mov
gs
push
lret
and
xchg
adc
sub
adc
mov
push
push
dec
ljmp
jae
or
xor
xor
sbbl
mov
sub
cmpsb
out
push
addr16
jge
mov
mov
inc
dec
xchg
dec
sbb
popa
in
sbb
mov
pop
lea
and
xchg
and
adc
pop
lock
cmpsl
jg
push
mov
lods
daa
test
cmpsb
xchg
shrb
mov
xor
in
fisubrl
xor
out
stc
sbb
sub
or
mov
addr16
jg
rorl
cltd
movsb
mov
in
ljmp
psraw
xchg
mov
lcall
inc
addr16
ja
xchg
ss
stos
xchg
outsl
mov
cmp
sbb
mov
sub
mov
xor
or
inc
push
sbb
imul
inc
push
in
add
stos
push
inc
sbb
xlat
repnz
sbb
cmpsb
ljmp
mov
add
icebp
out
out
pushf
pand
popf
cmpsb
out
gs
ret
mov
notl
xchg
call
ds
xor
jns
stos
jbe
mov
lahf
jg
cmpsb
repz
scas
and
adc
js
int
mov
fwait
inc
lcall
dec
mov
ret
sub
push
and
pusha
addr16
fisubrl
pop
das
bound
dec
add
cli
lods
aad
mov
xlat
test
mov
cwtl
fldt
in
imul
daa
lcall
xchg
jae
out
xchg
and
pusha
sbb
cltd
mov
cmp
pop
repz
and
lret
clc
in
or
and
movsb
pop
gs
mov
js
xchg
mov
push
sbb
jae
push
ret
sbbb
enter
jb
sub
icebp
dec
jne
fiaddl
and
insl
faddl
sbb
cmpsb
test
mov
sub
push
adc
xor
sbb
inc
stos
or
xor
repnz
sti
pop
xchg
bound
in
cmp
js
push
sub
fcomps
pusha
xlat
sbb
mov
stos
ds
dec
sub
fidivrs
mov
repnz
mov
insb
je
sbb
ret
inc
not
cmp
jnp
push
inc
sahf
loopne
xchg
pop
xorl
push
adc
pusha
cmp
int
fmull
or
rcrl
movsb
fsub
mov
call
andb
out
andl
rcrl
dec
faddl
jmp
adcb
inc
movsl
jo
in
aaa
adc
push
adc
aad
out
dec
stos
mov
cmp
mov
mov
push
mov
adc
mov
outsl
sarb
mov
sti
in
lods
jns
rorb
pop
addr16
sarl
cli
mov
fcompl
mov
repz
xchg
and
in
cmp
out
stc
adc
sbb
lock
ja
pop
pop
mov
mov
jge
std
sub
bound
imul
in
sbb
ficomps
push
ficoms
cld
add
cld
es
sub
sbb
ja
inc
movsl
cld
jo
mov
ret
mov
aas
inc
sbb
test
fsubrl
je
sub
sub
cmp
sub
xchg
sarl
fs
in
popa
sahf
ret
cltd
cmpsl
cli
aad
push
pusha
cwtl
je
jmp
fstp
fistpll
add
shlb
ss
mov
insl
push
cmc
pop
and
pop
es
fcompl
pop
cmp
sarl
adc
xor
xor
mov
adc
push
mov
jae
and
pop
cmp
mov
push
dec
test
stc
popf
lret
leave
int
push
dec
or
cltd
out
sub
xchg
mov
push
repnz
sub
mov
insl
sub
shlb
fs
mov
and
icebp
jae
test
jp
pushf
cmp
popa
popf
xor
jo
pop
xor
out
ljmp
iret
es
outsl
cmovno
js
aad
push
test
sub
or
add
pop
jno
xchg
add
lods
nop
and
mov
shll
or
adc
mov
rcrl
mov
or
loopne
arpl
sub
popa
push
xor
outsl
xor
push
sti
divl
mov
add
scas
fwait
into
mov
dec
sub
cld
js
sub
cmp
test
imul
call
lock
pop
js
sbb
push
out
sub
and
mov
sarl
lret
loopne
scas
push
jnp
sub
add
mov
dec
or
test
stos
xchg
sbb
xor
iret
inc
hlt
inc
rorl
inc
mov
popa
push
lock
negb
sbb
pop
icebp
out
push
fs
aam
mov
test
pop
mov
mov
jae
cmp
pop
xchg
lods
or
push
std
rcrl
pop
push
pop
add
insb
sbb
mov
xchg
push
mov
cmp
mov
push
fwait
imul
scas
fcmovu
mov
adc
mov
outsl
adc
cmp
xlat
les
push
fnstcw
out
and
aas
fcmovnu
jp
das
ja
out
mov
push
mov
shll
jne
mov
jb
jb
adc
ret
outsb
xor
outsl
dec
sar
jae
fwait
push
mov
jnp
sub
mov
cmp
push
mov
jp
idivl
loopne
xchg
lcall
mov
insb
jne
mov
in
sbb
out
loope
cltd
fbstp
dec
push
inc
insl
ret
mul
sti
pop
push
movsb
das
jno
popf
mov
sbb
or
jne
adc
shrl
es
mov
pop
jecxz
xchg
mov
pop
adc
jle
vmaskmovdqu
leave
imull
loop
jmp
ficomps
mov
xor
fwait
mov
adc
jne
and
mov
cld
lret
mov
mov
sbb
rorl
inc
jae
jle
jge
movsl
icebp
mov
repnz
test
lret
mov
mov
aam
outsl
pop
dec
jle
push
ja
rolb
adc
hlt
mov
aam
sbb
ficoml
or
ror
cmp
aas
inc
test
xchg
mov
sbb
xchg
js
xor
popf
mov
inc
out
dec
ret
ja
les
subl
push
in
aam
ja
dec
out
dec
pop
mov
nop
das
popf
inc
inc
and
dec
xor
daa
cmc
aas
xor
xor
mov
xchg
mov
arpl
or
mov
out
cmp
mov
dec
stc
js
push
rolb
jecxz
jnp
cwtl
pop
add
push
pop
frstor
mov
lea
and
mov
jnp
data16
mov
nop
mov
xchg
mov
lret
mov
sbb
loope
loopne
cld
sti
nop
scas
mov
pop
cmp
mov
icebp
add
sub
arpl
xorb
xchg
cld
jae
jbe
outsl
sti
lods
scas
cld
nop
out
insb
test
repnz
fistpll
xchg
addr16
cli
cld
fisttpl
outsb
push
leave
imul
jno
ret
in
xor
mov
hlt
popf
xor
pushf
arpl
mov
out
pop
cmp
mov
inc
cmpsb
cmp
mov
pop
fcmovnu
test
mov
mov
lret
mov
and
or
mov
push
or
idiv
jno
and
test
xor
gs
dec
jecxz
hlt
add
andb
mov
sti
sbb
imul
ljmp
aas
pop
or
pop
dec
add
xchg
popf
jb
ljmp
push
jg
data16
hlt
pushf
iret
cmp
pop
rcl
xor
jp
and
adc
and
int3
sbb
inc
mov
or
in
lahf
jmp
jmp
jne
mov
fldcw
aam
add
rcr
popf
movsl
mov
pop
insl
ret
shr
aad
loope
sub
and
jne
jbe
call
xor
mov
cmp
std
push
test
rorb
pusha
cs
test
adcb
je
out
add
push
popf
enter
adc
inc
inc
and
xchg
cmp
in
in
and
out
sbb
repnz
mov
shrl
adc
enter
aad
lds
jg
aaa
xchg
cwtl
subb
insb
into
insl
dec
loope
xchg
jne
mov
mov
loopne
adc
cld
cld
mov
mov
push
test
stos
fsubp
inc
test
stos
add
sbb
push
push
orl
cmpsl
scas
mov
insb
pop
xor
or
jne
jge
and
lret
mov
sbb
cmpsb
sbb
pusha
fistpll
clc
lock
lahf
cmpb
stos
fldt
push
rcll
dec
cltd
filds
fwait
jbe
pop
inc
fndisi(8087
push
mov
push
mov
sbb
push
in
xchg
cmpsb
jle
cmp
sbb
add
mov
in
dec
mov
push
xchg
xchg
loope
xchg
push
mov
jno
js
mov
mov
pop
dec
xor
xchg
and
xor
jno
adc
inc
xchg
pop
nop
dec
pop
pop
movsbl
sub
in
lret
mov
add
out
push
aam
sub
loop
adc
fnsave
rclb
int3
test
shr
out
sahf
mov
push
jle
imul
pshufw
gs
cmpsl
test
shlb
notl
dec
test
or
shll
stos
mov
sarb
ljmp
or
loop
cmpsb
mov
cmp
loop
push
mov
int
int3
and
popf
std
in
jg
mov
cmp
xor
in
pop
xor
sub
pop
jno
in
mov
outsb
aaa
shlb
mov
sti
mov
sub
pushf
dec
clc
xchg
pop
js
cmc
fidivrl
scas
add
or
imul
mov
sub
xchg
inc
shrl
ror
pop
push
mov
and
or
stos
clc
and
shrl
std
repnz
or
adc
cld
fnstcw
lret
loop
add
sub
xchg
add
sub
inc
add
pop
adc
add
ret
sbb
pushaw
push
cmpsl
fsts
out
das
sub
jecxz
jle
inc
into
daa
adc
or
jns
pushf
xchg
jl
xchg
pop
mov
scas
test
jge
push
cmc
aaa
mov
cwtl
rcr
sub
push
mov
nop
fcomi
push
mov
xor
or
jo
and
pop
data16
lcall
leave
mov
ja
lock
repz
fldl
roll
inc
sbb
push
sti
jg
rcr
and
lahf
shl
mov
dec
xor
pop
pusha
sub
jp
shlb
jnp
loope
mov
roll
adc
ja
fwait
out
push
inc
mov
int3
imul
jno
enter
or
fimuls
sbb
loopne
imulb
adc
sub
jns
and
mov
xchg
jno
add
mov
inc
data16
movups
jge
pop
xor
roll
fsubl
fwait
mov
and
xor
mov
xor
nop
ret
xorb
sbb
or
lds
test
mov
jle
mov
cmpsl
lret
xchg
xchg
adc
push
fistl
sub
in
mov
dec
sub
jae
lds
pop
xchg
fidivrl
or
js
pushf
cs
int3
pop
jmp
mov
inc
in
or
imul
mov
adc
sbb
sbb
repnz
xchg
rol
jnp
dec
or
xchg
movsl
jle
xor
lds
test
jne
mov
inc
repnz
subb
dec
cmc
gs
pop
mov
ja
xchg
add
dec
hlt
imul
leave
jle
jl
loope
stos
ret
mov
adc
mov
inc
mov
mov
sub
inc
loope
xlat
mov
sti
xor
das
bound
mov
mov
mov
jp
repz
cs
push
cld
mov
test
pop
push
mov
inc
inc
ret
out
mov
xchg
gs
cmp
pop
push
sub
add
cmp
mov
fisubl
push
clc
xor
jno
jnp
xchg
mov
sub
in
cmpsl
in
ds
outsb
call
xchg
mov
push
jp
pop
lea
sub
stos
int3
push
xchg
push
lahf
lcall
xor
iret
cwtl
in
xor
mov
and
xlat
lods
inc
add
xchg
xchg
xorb
pop
or
fs
fmull
xchg
std
jne
insl
xchg
and
add
shr
jae
jecxz
je
pop
js
addr16
push
repnz
pushf
pop
mov
jmp
cld
call
push
inc
inc
repnz
mov
scas
mov
stos
or
insl
mov
in
clc
mov
mov
push
push
mov
nop
sarb
xor
sub
pop
test
jbe
sbb
dec
in
jp
call
sub
insb
xor
mov
pop
add
in
rol
pop
popf
lahf
xor
mov
lock
out
fstpt
addr16
dec
cmp
test
ret
fimull
push
movsb
add
sbb
mov
out
dec
shll
pushl
jmp
test
in
mov
fwait
jmp
push
lret
pop
jns
inc
orb
mov
dec
stos
jae
in
bound
sbb
cmp
fcoms
cwtl
icebp
push
lcall
inc
and
mov
sar
cmp
and
aad
gs
cmpsb
xchg
cltd
and
push
and
sbb
shrl
push
mov
pop
mov
pusha
cmp
pushf
push
mov
sub
nop
cs
test
int
stos
sub
out
fwait
outsl
fsubp
outsw
popl
fwait
shrb
xor
sub
pop
das
mov
xchg
fisttpl
xchg
icebp
into
inc
jmp
movsl
gs
test
jbe
push
sahf
mov
mov
int
mov
mov
cmpsl
and
das
enter
jle
mov
pop
psrlq
bound
fs
pop
mov
push
fcom
bound
add
fdiv
pop
push
jmp
test
dec
cwtl
outsb
into
cmp
movsl
insl
scas
testl
dec
in
lock
xchg
aaa
jo
fwait
or
pop
bound
pop
popl
pop
push
inc
test
stos
mov
dec
mov
mov
dec
jns
sub
mov
gs
mov
andb
outsb
shlb
cld
sub
ja
add
push
pusha
ja
cli
xor
dec
cmp
pop
xchg
or
fwait
inc
mov
inc
rclb
pusha
jmp
in
mov
push
jb
in
jmp
pcmpgtd
hlt
loopne
xor
jnp
in
call
jno
movsl
test
cmpsl
sbb
clc
sub
shll
pop
push
lea
bound
fs
jmp
js
cmovp
cmp
push
pop
in
test
add
sbb
xchg
or
insb
add
stos
mov
and
jne
xchg
mov
hlt
mov
sahf
cld
xchg
inc
ret
cmc
sbb
push
push
pop
xor
nop
or
in
jge
push
mov
xchg
sub
xlat
cltd
dec
cmp
and
xor
lahf
nop
popa
enter
test
loope
xlat
and
push
in
mov
sub
and
push
roll
adc
push
dec
cmp
mov
push
out
pusha
rclb
pop
sti
mov
lds
sub
push
dec
mov
and
adc
lock
jb
pop
imul
mov
jo
or
pop
sub
fdivrl
cmp
pop
std
jb
cltd
fnstcw
push
inc
push
push
sbb
add
loop
lret
test
jge
lret
jge
push
stc
cmp
mov
xorb
movsl
jl
cld
psubusw
and
adc
scas
cmp
sahf
inc
aas
out
xor
xchg
jno
xlat
and
hlt
jnp
cli
ja
nop
dec
mov
lret
xor
xor
adc
into
jae
push
and
mov
dec
scas
push
cwtl
fsubp
fildl
jl
inc
xchg
fs
adc
and
inc
mov
sti
xchg
movsl
mov
or
repz
andl
pusha
cmp
lods
jns
pop
mov
mov
inc
loope
mov
adc
icebp
inc
divl
aam
cmpsb
insl
adc
mov
sbb
jns
or
pusha
dec
pop
cmp
call
push
push
insl
dec
jo
mov
cmc
jno
mov
repz
aaa
jp
rolb
rolb
test
jmp
dec
xchg
pop
push
filds
mov
popf
dec
push
dec
stos
std
fwait
out
movsl
inc
mov
mov
lods
pop
out
push
mov
jge
in
ds
inc
sbb
and
lahf
cmc
dec
add
in
mov
pop
pop
je
cltd
jge
stos
in
xchg
mov
aas
addr16
inc
adc
out
inc
sub
pop
roll
add
mov
les
ret
dec
lea
mov
jns
sub
out
jmp
leave
jmp
mov
cmp
adcb
sar
lods
lcall
add
js
stc
push
bound
or
mov
xchg
or
aad
stc
or
out
push
xchg
jno
add
sbb
and
out
add
xchg
out
daa
add
inc
push
push
adc
mov
xor
test
leave
hlt
mov
imul
int
arpl
sbb
jb
int3
movsl
cmp
test
test
inc
out
sbb
push
iret
rcll
sahf
inc
icebp
lret
cli
icebp
pop
enter
ret
or
xchg
cli
int3
add
gs
inc
mov
ror
sbb
or
mov
cmp
mov
add
or
ljmp
stos
xchg
xchg
cmp
stc
test
int
loop
por
adc
inc
xor
inc
in
es
jmp
jns
adc
lods
add
and
or
fstl
aam
sub
lcall
push
push
out
mov
outsb
pop
lds
in
cltd
inc
enter
ds
stc
stos
sub
lret
outsl
out
dec
push
imul
cmp
mov
sbb
cwtl
aas
push
jecxz
and
mov
push
pop
mov
pop
aas
pop
xlat
pushf
int3
arpl
daa
rcll
test
lret
dec
dec
adc
mov
push
and
in
lods
and
iret
repz
xchg
lahf
or
push
loop
js
cmp
dec
add
jae
push
sarb
pop
jnp
nop
or
mov
xchg
ret
push
dec
pop
pop
roll
pop
testl
cmc
test
cmp
add
rorb
pop
and
inc
inc
mov
push
xchg
push
and
pop
sbb
or
lods
test
mov
dec
xlat
data16
mov
fs
xor
lea
insb
incb
dec
pop
loope
xor
mov
jmp
add
repz
lcall
mov
mov
je
outsl
test
push
jge
fidivrl
sti
and
sbb
push
pop
push
push
mov
aam
int
jp
aas
int3
xchg
xchg
test
adc
test
insb
push
jmp
js
jbe
or
pop
mov
aas
rol
push
mov
lods
sarl
lret
in
push
int3
inc
rorl
mov
cmp
push
or
movsb
mov
jle
js
test
or
push
lds
in
sahf
sbb
dec
mull
mov
add
xchg
jno
inc
data16
jl
cmp
in
into
in
push
ret
mov
dec
or
test
mov
mov
addr16
or
shrl
lds
data16
scas
pop
sti
fsts
mov
pop
mov
outsb
xor
cmp
es
add
mov
adc
fsubr
xor
mov
sbb
cmp
sub
jmp
ja
iret
punpcklbw
push
into
icebp
clc
js
cmpsl
lods
cmc
cmpl
je
lea
jb
xchg
insl
cmp
push
subl
or
movsl
inc
aas
ja
sub
dec
movsl
lahf
movsb
cld
stc
lods
jg
imul
test
nop
mov
cmp
sub
repnz
push
adc
aaa
daa
sahf
lea
add
lcall
movsb
jle
cwtl
out
pop
mov
and
jno
add
mov
cs
pop
dec
inc
xor
pop
jge
test
repz
repz
mov
test
add
and
fisubrs
enter
push
ficoml
outsb
cmp
stos
jae
fincstp
xor
pop
lock
dec
shll
imul
or
push
std
and
clc
jmp
adc
cli
out
out
std
stc
dec
pop
adc
jb
mov
inc
in
mov
aas
or
popf
lret
or
test
jne
out
pop
loopne
and
adc
jbe
push
adc
xlat
push
xor
clc
out
fnstcw
ret
inc
xor
icebp
and
loope
fildl
pop
lods
lods
dec
fs
enter
dec
orb
mov
or
test
jge
push
call
adc
fisttpl
sub
sbb
push
xchg
inc
jne
mov
in
repnz
scas
test
test
jle
mov
sti
push
insb
and
dec
pop
sbb
sbb
push
inc
and
cmpsb
jno
xchg
lock
gs
es
out
subb
negb
in
or
shl
jbe
jle
and
mov
sbbb
pushf
in
out
pop
ret
test
or
testb
enter
sar
push
cwtl
icebp
pop
pop
fptan
inc
inc
cmp
push
jl,pt
rolb
jl
in
in
pop
jb
add
push
mov
jmp
mov
and
jb
mov
stc
gs
scas
mov
loope
push
add
dec
push
loope
addr16
pop
adc
cld
add
mov
lds
mov
adc
sbb
stc
sbb
sbb
std
adc
mov
rolb
jb
loop
dec
jecxz
movsb
out
test
lock
add
std
xor
lcall
push
cltd
jo
pop
or
fmull
imul
adc
pushf
add
mov
aaa
inc
movsl
xchg
outsl
xchg
imul
mov
pop
setne
stc
mov
jl
pushf
nop
cmc
dec
cmc
test
dec
sub
jno
icebp
mov
out
dec
or
in
push
in
mov
xor
sub
or
jo
xchg
data16
inc
add
mov
xchg
sahf
adc
loop
mov
or
pushf
push
lcall
dec
outsb
cwtl
incl
mov
call
jae
cmc
movsb
cmp
push
mov
push
and
sbb
mov
jae
js
mov
push
mov
into
jno
lods
loope
pusha
addr16
mov
lods
dec
xchg
loop
push
mov
inc
aam
xchg
into
subb
inc
fdivrs
mov
das
jo
das
lret
aas
push
xor
add
mov
fstpt
add
adc
pop
inc
lahf
cwtl
jns
inc
lea
push
insb
testl
ficoms
mov
scas
enter
loopne,pn
dec
in
sbb
addr16
repz
cmpsl
std
cmpsb
sub
stos
cmp
in
imulb
xchg
cwtl
adc
daa
lret
sbb
daa
rorl
out
xchg
dec
ds
push
mov
xor
sub
mov
mov
das
in
xor
mov
sub
in
cmp
jp
aas
adc
mov
fisubl
jns
in
aaa
in
push
and
outsb
sar
rcll
mov
dec
mov
push
xor
js
les
sub
and
out
or
cmpsb
out
das
stos
xor
sbb
push
out
jp
je
jb
push
mov
lahf
add
mov
test
add
or
rolb
mulb
xchg
ret
push
fsubrl
mov
fadd
lds
int
jmp
mov
cmpsb
jo
ljmp
fwait
adc
repnz
lret
push
inc
arpl
adc
js
aaa
mov
ds
xchg
movsl
bound
pop
icebp
sub
inc
repnz
popf
sahf
in
and
scas
push
fldenv
jns
rolb
pusha
adc
popa
adc
sbb
and
mov
mov
rep
repnz
test
or
loop
pop
adc
int3
push
mov
xchg
dec
pop
xchg
test
and
mov
popf
fistpll
popf
stc
loope
pop
push
pop
int3
int
cwtl
popl
and
data16
mov
jmp
insb
ret
xchg
jmp
xchg
insb
mov
pop
test
mov
and
mov
int3
lcall
xchg
or
mov
cltd
hlt
xchg
imul
add
testb
pop
add
jns
mov
jbe
sbb
popf
cmp
dec
leave
stos
pop
inc
cmc
outsb
dec
mov
gs
stc
in
push
test
mov
test
mov
dec
test
clc
sub
push
cwtl
push
mov
daa
mul
outsl
mov
push
imul
out
cltd
loop
add
shrb
sub
mov
lods
fwait
lds
sbb
gs
xchg
pavgw
imul
jo
sub
push
mov
data16
sar
mov
fildl
fwait
and
xor
dec
es
nop
imul
xor
mov
pop
fbld
ds
cwtl
pop
add
icebp
in
addl
ljmp
mov
test
or
cld
jl
cs
sbb
and
cmpsb
scas
push
arpl
or
jge
sbb
inc
jge
fdivr
xor
push
neg
lahf
clc
pop
sub
fldl
insb
push
dec
add
loope
add
jp
pop
cmp
sub
lock
lahf
push
test
ja
adc
fwait
mov
fnstenv
ljmp
lods
xchg
cltd
imul
lds
outsb
adc
jmp
xor
test
fsts
mov
jp
mov
in
nop
sahf
fsubrs
into
and
pop
add
xchg
or
push
dec
sti
popf
cli
adc
push
lahf
sub
sahf
movl
fcoms
es
push
dec
in
pushf
mov
in
or
lahf
fcoml
adc
and
pushf
stos
xchg
fsubr
push
mov
inc
in
roll
cld
mov
enter
add
sub
xor
adc
icebp
sti
mov
cmp
test
lods
mull
mov
addr16
fnsave
fstpt
cld
inc
mov
jg
movsl
loope
sarl
outsl
cmc
js
test
push
iret
push
xchg
iret
subb
pop
mov
jl
inc
pop
xchg
jae
xor
je
add
enter
pop
fs
mov
xchg
pop
setnp
or
int3
scas
adc
lret
repz
ret
je
sbb
mov
test
cmp
mov
and
mov
lods
mov
ljmp
in
sub
scas
out
lea
inc
inc
scas
mov
add
inc
mov
icebp
gs
outsl
xchg
sub
out
jle
out
insl
ljmp
or
mov
sti
dec
adc
xlat
sub
mov
push
cmpsl
mov
push
js
loopne
inc
sub
sbb
lods
in
mov
daa
test
add
pop
xor
pop
out
sub
fisttpl
mov
movsb
sahf
in
divb
push
jo
cmp
sub
xchg
les
stos
imul
xchg
aas
jg
sbb
cld
test
call
sbb
aas
movsb
sub
stc
inc
lock
lcall
int3
push
nop
jns
shr
stc
insl
lods
pop
movsl
dec
dec
cltd
fcomi
inc
mov
or
jg,pt
mov
push
popa
shlb
dec
out
mov
test
sub
fistl
jbe
ret
iret
jbe
cmp
inc
cmp
mov
jg
rorl
sti
jle
pop
in
std
in
sub
fs
push
out
add
repnz
sbb
xlat
ret
sti
cmpsl
imul
mov
sbb
dec
lahf
sub
in
iret
cmp
pop
xor
outsb
or
dec
lea
push
bound
call
and
xor
fstpl
jge
or
sub
movsl
mov
stos
add
mov
ret
mov
push
xlat
ljmp
aam
movsb
adc
mov
pop
nop
addl
aaa
adc
xlat
cltd
out
fwait
cmpsb
das
inc
mov
inc
dec
in
test
adc
sarl
clc
push
jp
jmp
cli
ljmp
mov
ja
rclb
cmpsb
repz
xchg
sahf
dec
xchg
testl
xchg
stos
aad
stc
imul
push
or
aas
push
aas
pop
xchg
dec
call
adc
lret
jmp
lock
sub
xor
pop
cmp
inc
test
adc
dec
jo
or
in
cmp
test
pop
dec
push
dec
xchg
icebp
add
sub
shl
mov
inc
insb
jo
cmpsb
sbb
adcb
loop
repnz
jns
cmpsl
inc
or
imul
pusha
sub
add
mov
inc
stc
in
pop
mov
adc
rolb
push
das
mov
sub
insl
pop
dec
sbb
cwtl
das
add
faddl
addr16
xor
fisubl
xor
sbb
push
mov
dec
dec
pop
out
imul
or
or
aaa
mov
inc
xchg
xchg
xchg
arpl
pop
cli
adc
sub
jge
sbb
icebp
iret
dec
pop
pop
ljmp
js
push
jg
xchg
pop
in
push
lods
xor
adc
out
adc
fcmovnbe
lods
mov
jo
dec
sbb
lret
stc
ja
test
ds
cmc
xchg
jae
outsb
subl
imul
xchg
ret
sub
inc
test
shl
aam
push
loop
pcmpeqw
clc
and
sbb
subl
adc
scas
popf
movsb
rorl
in
dec
and
shl
ja
sub
lods
inc
push
out
mov
hlt
adc
call
push
ljmp
or
js
cmp
fwait
or
mov
mov
das
das
lds
jg
add
pop
cmpsl
sbb
pop
inc
cli
adc
ljmp
pop
dec
shl
dec
mov
adcl
les
movq
jnp
jge
sbb
jo
xor
fs
jns
push
hlt
stos
cmovns
and
cwtl
mov
add
fiadds
add
pop
pop
pushf
fcompl
xchg
mov
insb
fwait
in
jecxz
cltd
scas
jge
ret
pusha
fldl
scas
xor
fwait
pop
mov
std
and
pop
sti
or
icebp
mov
fsts
lock
sbb
sub
mov
mov
je
outsl
sub
fwait
inc
int
sahf
rcrl
icebp
rol
mov
out
inc
cmc
inc
mov
jns
dec
xor
adc
push
ss
push
fcomip
lret
or
stos
enter
pushf
or
xchg
xchg
mov
call
loopne
mov
xchg
fucomp
xchg
push
mov
jne
inc
dec
nop
das
lcall
into
jae
cmpsl
lea
stc
pop
dec
and
lds
lods
or
mov
push
cwtl
rorb
ss
das
insl
cld
inc
sti
mov
scas
ret
xchg
dec
and
dec
ljmp
pop
pop
inc
and
fisttps
jmp
insb
ja
int3
stos
jne
sub
push
push
pushf
mov
shrl
push
jmp
dec
lods
aam
cmp
or
ret
xchg
or
ficoml
mov
iret
mov
inc
lods
aaa
mov
lods
rcll
pop
xchg
std
mov
negb
fsubl
push
addb
leave
movsb
out
or
mov
inc
add
jge
lds
and
mov
shrd
push
pop
int3
sbb
lret
les
pop
jbe
lret
jns
in
mov
repz
xchg
or
cmp
rolb
in
push
jge
out
inc
adc
add
add
xlat
leave
push
insb
jnp
lods
or
xchg
push
lods
movb
cwtl
push
xlat
loopne
jo
ds
test
xlat
in
mov
fwait
lock
stos
subb
mov
lret
jmp
xor
sti
jns
orb
loop
nop
jl
add
insb
test
jg
or
pop
inc
pop
out
pop
out
enter
lahf
int
push
jo,pn
dec
mov
pop
jecxz
dec
dec
lcall
pop
jl
outsl
add
pop
pop
loopne
or
lret
insb
add
nop
pop
pop
test
jle
jae
and
sar
lret
cmp
test
shr
into
test
insl
mov
mov
clc
cmp
in
inc
push
xchg
jae
das
sub
cmp
mov
mulb
adc
iret
mov
sbb
xor
mov
pop
sbb
andb
loopne
mov
out
sub
fs
mov
lret
dec
insb
xchg
mov
jg
push
cmp
push
add
jb
cli
lods
addr16
mov
test
or
mov
add
nop
dec
and
push
adc
jecxz
mov
mov
lret
fwait
push
adc
cmp
mov
dec
shll
mov
adc
xor
addr16
adc
sub
mov
cmpsl
xchg
movsl
dec
ret
or
arpl
mov
mov
popf
and
and
stc
aam
fistpll
inc
pop
and
mov
outsb
fnsave
dec
in
movsb
fnstsw
ret
jne
pop
pop
imul
dec
jle
pop
mov
sub
xchg
ljmp
lahf
mov
shr
orb
sub
repz
inc
testl
arpl
xor
xor
pop
pop
mov
bound
push
call
stos
lock
sbb
lahf
push
add
fidivl
mov
inc
loope
clc
or
dec
pop
pop
adc
and
loop
cmp
push
cmp
test
push
xor
pop
test
sub
xchg
jecxz
cs
sub
int3
sbb
int3
jp
aad
mov
outsb
inc
loop
mov
test
pop
or
popf
pop
js
stos
cmp
inc
add
mov
sbb
cmc
scas
jbe
loopne
or
and
xchg
cmp
lods
jne
pop
dec
or
add
in
dec
mov
lods
ds
mov
xor
aaa
movsl
shrb
andl
xlat
jae
arpl
cmp
dec
xor
fwait
in
xchg
or
fidivs
int
mov
mov
mov
into
mov
movnti
cmp
inc
or
loopne
scas
stos
jno
in
mov
pushf
inc
call
stos
js
sahf
mov
xor
or
cmp
shll
cmpsl
fwait
addr16
xor
out
fldt
fistpll
jp
add
push
pusha
push
inc
or
stc
sarl
mov
lods
insl
xor
xor
push
jle
lcall
add
pop
ja
add
dec
jo
pop
inc
adc
add
and
xchg
into
mov
xor
mov
imul
hlt
pop
imul
and
outsl
pop
mov
or
insb
ds
lods
ja
cmp
out
imul
or
lea
push
int
sub
or
pop
sub
shrb
mov
in
stos
cmp
bound
cltd
and
adc
or
or
mov
push
pxor
add
mov
scas
cmpb
int3
sbb
lahf
add
add
jl
test
sub
pop
imul
mov
jnp
in
xchg
xchg
loope
jbe
lds
push
cmc
out
test
add
cmp
xor
pop
xchg
add
inc
dec
or
sbb
push
adc
dec
nop
adc
mov
lock
sbb
cli
fcomip
pop
paddb
add
jno
push
lcall
pop
mov
dec
adc
fcmovnbe
push
test
outsb
fnclex
dec
addl
pop
stc
bound
out
mov
push
mov
jmp
inc
test
add
imulb
push
cmp
push
add
cmp
push
cmpsl
mov
xchg
dec
add
test
add
push
xor
cmp
fstpl
arpl
es
cli
sbb
lea
or
adc
xchg
adc
inc
lret
xchg
rorb
std
aam
in
or
out
cltd
pop
pop
je
and
loope
jo
addl
aaa
cmp
adc
aam
cmpl
rcr
outsl
ljmp
sbb
jl
cmpsb
xchg
stos
shll
xchg
out
mov
mov
lods
sub
cltd
jmp
fstl
add
js
jbe
mov
gs
cld
and
xlat
xchg
push
dec
and
cmp
mov
out
bound
movb
imulb
xchg
mov
in
jne
lcall
ja
sahf
mov
push
sbb
bnd
mov
jmp
or
movb
inc
ss
mov
test
mov
push
addr16
bound
sbb
imul
mov
lret
adc
neg
test
in
sbb
insl
cltd
ret
pushf
icebp
in
test
imul
jo
in
cld
jl
mov
pop
push
push
mov
in
in
test
adc
rcll
add
pop
icebp
pop
test
inc
inc
mov
fninit
aaa
out
sub
mov
mov
and
loopne
lds
or
push
adc
sbbb
or
loope,pn
inc
fs
ret
jnp
in
imul
shrl
mov
jnp
mov
pop
lds
out
jecxz
fnstcw
mov
ficomps
les
xchg
cmpsl
rcrl
fimull
pop
dec
lds
xchg
add
cmpsb
inc
mov
outsb
pop
int3
mov
pusha
clc
push
sti
cmp
ss
adc
mov
adc
pmulhw
cltd
cmp
cmp
inc
ljmp
dec
pop
mov
test
fdivr
out
jns,pt
arpl
movsb
das
fucom
dec
das
out
imul
int
push
xor
and
sub
add
or
hlt
sbb
arpl
lds
mov
and
sahf
sub
cmpsb
mov
or
nop
ret
cmp
sub
sbb
out
and
leave
das
cmp
add
pop
add
shll
push
cli
xor
out
xchg
xchg
test
test
xchg
mov
notb
outsb
push
in
mov
lods
stos
mov
bound
xchg
mov
inc
sbb
mov
imul
or
push
sbb
mov
lock
xchg
test
dec
cmpsl
nop
mov
addr16
fbstp
push
xchg
inc
jno
pop
test
dec
cmc
add
in
mov
xchg
test
hlt
adc
std
mov
add
in
jbe
mov
pop
hlt
popa
mov
imul
adc
jecxz
sbb
pop
movsb
lods
gs
mov
dec
imul
dec
mov
aas
insb
sti
and
jbe
xchg
pusha
loop
push
dec
loopne
mov
leave
fucomp
addr16
inc
jl
inc
or
shr
push
not
lret
pushf
std
lds
pop
inc
dec
pop
mov
inc
sarl
ds
cvttps2pi
mov
lret
pop
cwtl
mov
rcll
push
cs
les
mov
lret
enter
or
loope
sub
xor
and
mov
int3
lret
fidivs
push
xchg
int
scas
mov
push
fistpl
mov
push
sbb
stc
cmp
mov
out
mov
jno
jecxz
jl
or
dec
js
imul
adc
xor
push
fisubrl
mov
or
jns
es
mov
outsb
aaa
leave
push
mov
sbb
push
cs
imul
inc
into
enter
mov
aam
jne
inc
out
mov
cmp
out
add
mov
mov
mov
cmp
cmp
push
pop
xor
movsl
pop
or
shll
cmp
lods
mov
in
dec
test
sbbl
and
cmp
movsb
mov
inc
xlat
loope
lods
inc
dec
pop
lock
cs
mov
inc
mov
jns
stc
mov
adc
stc
sahf
dec
sub
addl
xchg
cmp
adc
jmp
sub
inc
fxch
mov
orl
lds
push
or
mov
xchg
sti
rep
dec
pop
leave
in
outsb
dec
xchg
xchg
gs
lods
mov
mov
fisubl
pop
xchg
push
sub
push
fists
repnz
mov
dec
mov
cmp
cmp
test
into
push
cld
call
cmp
out
add
fwait
stos
mov
sub
mov
ucomiss
push
sahf
cld
fdivs
loope
repnz
fcomps
mov
cmp
loop
jno
push
cmpsb
or
in
xchg
cmpsl
ja
popf
cmp
sarb
mov
lea
jecxz
dec
add
orb
jecxz
or
loop
int
sbb
xor
iret
imul
push
cmp
mov
xor
adc
bound
mov
mov
dec
out
andl
push
adc
clc
and
pop
fucomp
call
and
subl
add
cs
pop
mov
mov
or
arpl
adc
fldcw
mov
ret
add
dec
add
pop
inc
int
inc
mov
lods
ljmp
push
mov
pop
or
scas
or
lea
popa
divb
mov
cmp
jp
pushf
rorb
adc
cwtl
sub
cmp
aas
clc
mov
mov
mov
mov
fwait
dec
and
jle
adc
inc
aam
mov
adc
orb
pusha
dec
pushf
paddw
pop
popa
loope
lret
push
pop
push
test
xchg
in
push
outsb
int3
xchg
mov
je
movsb
sbb
mov
lods
ljmp
adc
cmp
cmp
jg
ret
mov
mov
movsl
adc
and
add
sub
dec
fistl
sti
data16
mov
test
mov
les
xor
test
pop
mov
shll
and
shl
leave
xchg
and
loop
divb
insl
jno
jbe
aam
jo
sub
pop
adc
mov
adc
fisubl
daa
leave
jl
cld
xchg
or
cmp
jo
shrl
or
jmp
icebp
das
push
sbb
inc
push
cld
in
sub
fnstcw
loop
pop
lods
add
mov
mov
sbb
inc
inc
mov
and
insl
and
inc
xor
jno
adc
lret
fs
cmp
mov
sbb
adc
jo
call
push
in
mov
loope
sbb
jmp
test
gs
dec
mov
dec
xor
and
inc
loop
notl
and
dec
mov
pop
pop
xor
popf
or
mov
sahf
outsb
adc
or
lret
mov
lods
add
into
repnz
add
pop
popa
dec
dec
imul
int
lcall
dec
addr16
mov
cmp
pop
cwtl
nop
cmpsl
andl
shlb
add
loop
adc
ljmp
push
dec
repz
mov
and
dec
and
in
lds
sub
xor
mov
mov
mov
push
popa
cmp
push
mov
cwtl
popf
cmp
pop
jecxz
movsl
addl
jnp
sbb
and
popa
loopne
pop
mov
adc
push
xchg
or
aam
jnp
sub
add
inc
imulb
and
cmpsl
subl
or
test
or
adc
lret
iret
pop
into
pop
sbb
cmp
imul
mov
or
dec
aaa
cmp
mov
nop
sarl
jecxz,pn
dec
aam
mov
aaa
pop
aaa
lcall
xchg
lea
push
dec
roll
daa
xor
loopne
pop
adc
andl
or
in
ja
mov
add
aaa
xchg
cli
add
adc
shll
or
aas
add
popf
mov
mov
pop
xchg
xor
pop
testb
push
jp
bound
scas
pusha
cmp
add
inc
shrb
pop
ja
enter
js
mov
test
or
dec
xor
test
adc
pusha
inc
mov
xor
out
repnz
stos
shl
xlat
iret
into
data16
es
add
and
pushf
mov
fcomi
add
je
jmp
adc
cltd
lcall
mov
and
imul
push
in
rcrl
cmp
mov
dec
mov
ds
negl
cld
xor
lods
xor
xchg
fdivr
inc
push
call
adc
int
xchg
dec
sbb
enter
and
mov
cmpsb
cmp
aaa
ffree
sbb
outsl
mov
cmp
add
les
repz
jae
mov
mov
ficomps
mov
frstor
lods
inc
add
lahf
cmp
xor
data16
or
adc
cli
dec
xor
dec
out
or
cli
ret
pop
add
dec
call
scas
addb
mov
adc
and
jne
sbb
insb
or
into
sahf
aam
mull
mov
cmpsl
fnsave
test
mov
adc
or
sbb
xchg
pusha
sbb
inc
push
xor
insb
in
scas
mov
jge
cmp
sahf
dec
mov
xchg
sub
jnp
mov
mov
jl
cli
cmpsb
lods
aad
jp
jb
lods
ds
lea
adc
push
orl
test
fldcw
rcrb
jnp
dec
mov
sti
dec
jecxz
xchg
jne
aad
mov
call
xchg
inc
or
mov
mov
fdivrp
clc
fadd
icebp
mov
shlb
loop
adc
cmp
mov
mov
sub
push
fcompl
or
subb
lock
rcll
push
sub
jne
pop
push
data16
jl
aas
outsb
mov
mov
xchg
call
lret
pop
data16
push
dec
lret
inc
sbb
mov
push
stc
call
push
jecxz
xchg
adc
cld
inc
xor
fidivs
or
mov
inc
cmp
inc
mov
inc
xor
sub
xor
xchg
push
aam
enter
sahf
jmp
mov
push
mov
or
dec
lea
dec
lods
push
mov
iret
loope
inc
scas
inc
xchg
push
jns
adc
or
jnp
hlt
rcrb
inc
daa
fistpll
je
inc
jnp
scas
mov
call
jg
sbb
mov
pop
push
movsb
sbbl
dec
mov
ret
movsl
mov
cmpsb
adc
loop
decb
call
jecxz
jno
jmp
mov
pop
ss
pop
jg
add
test
cld
dec
mov
ret
mov
movsb
pop
lret
pusha
xchg
dec
popf
add
pop
push
bound
mov
je
mov
imul
xchg
dec
lods
ljmp
adc
pusha
dec
movsb
or
shll
inc
jmp
inc
fsubs
mov
icebp
movsl
pop
inc
out
dec
mov
push
rolb
cmpsb
mov
pop
dec
gs
mov
push
add
mov
andb
aaa
mov
sub
fidivs
jge
xor
mov
mov
clc
add
insb
mov
scas
inc
fisttpll
push
mov
lods
pop
retw
sbbw
pop
sbbl
cmc
iret
mov
push
inc
jae
cmc
cmp
outsb
pop
pop
fbstp
lret
push
xchg
dec
lcall
jle
dec
cmpsb
daa
mov
cmpsb
or
jle
xchg
iret
jl
and
xchg
repz
pop
outsb
xchg
aas
add
mov
sub
mov
ljmp
orl
pmuludq
mov
aad
in
xor
mov
test
push
popf
hlt
sbb
cltd
into
ficoms
lea
mov
or
cwtl
adcl
sub
cli
mov
cmpsb
popf
repz
in
sub
sbbl
into
adc
adc
xor
mov
lods
jp
fwait
cmp
pop
cld
sbb
hlt
xchg
push
stc
mov
sarb
push
cmp
and
pop
insb
pusha
mov
mov
test
add
arpl
and
adc
popa
sbb
xor
sbb
lret
dec
adc
test
sti
jnp
jae
dec
cmpsb
push
mov
add
mov
cmpsb
and
sbb
sub
and
sub
cmp
aas
in
or
mov
push
sub
bound
pop
sub
fisttps
fldt
cmp
je
adc
push
stc
jmp
ss
int3
scas
jge
fs
or
aam
sub
cmp
scas
pop
std
or
cs
push
lock
dec
adc
fistpll
mov
and
jl
cld
mov
jp
vpaddd
push
test
adc
add
mov
scas
aam
lret
scas
lods
xchg
inc
adc
sub
adc
jl
add
shlb
add
sbb
xchg
inc
cld
sub
pop
mov
sbb
mov
ret
daa
dec
sarb
cmp
das
aam
int
push
push
push
mov
sub
pop
and
and
das
lock
hlt
sbb
and
pop
mov
das
fbstp
outsb
push
nop
stos
stos
int3
adc
inc
ja
inc
out
sub
push
cwtl
fcom
cli
leave
mov
cmp
mov
lcall
pop
xor
test
fsubrl
push
or
jge
ret
cmp
movsb
pop
movb
mov
rolb
mov
fwait
mov
cmpsb
mov
fsubrs
fdivl
movsl
lds
push
mov
dec
ja
and
sbb
pushf
shrb
push
mov
mov
cmc
xor
sahf
xlat
mov
hlt
cmp
sarb
add
repnz
jp
je
pop
in
jnp
pop
nop
xchg
adc
aad
lret
not
subb
jnp
mov
push
movsl
dec
ret
pop
enter
cmp
xor
adc
xchg
out
xor
adc
jne
and
sub
scas
xchg
insl
push
rolb
xchg
inc
idivb
jmp
stc
inc
pop
outsb
mov
inc
mov
dec
ja
stos
adc
mov
push
cmp
mull
iret
cmp
vpshuflw
mov
xor
jg
mov
xchg
mov
inc
call
pushf
outsl
mov
movsb
fcom
jg
inc
jo
add
mov
enter
sbb
out
sub
jns
xor
xor
xchg
js
or
inc
outsb
leave
add
xchg
lret
dec
push
int
pop
sub
or
xchg
push
das
ret
in
roll
pop
movsb
jle
push
mov
adc
mov
or
sub
mov
cli
shll
dec
pusha
das
divl
movsl
push
push
seta
inc
pop
nop
call
mov
cltd
sub
out
lea
mov
add
scas
xlat
jl
nop
in
pushf
or
lods
das
push
or
sub
push
stos
jne
cld
add
mov
rorl
in
push
sbb
test
cmp
mov
imul
add
xchg
outsb
xor
cltd
inc
and
pusha
out
cmp
pop
lods
mov
mov
push
add
sbb
test
shll
or
stos
repnz
push
repnz
mov
jle
pop
xor
push
in
dec
mov
xor
flds
leave
je
daa
clc
or
pop
push
ret
push
cmc
xchg
push
cmc
cmp
xorl
frstpm(287
mov
xchg
push
cmp
or
xlat
or
pop
jae
pusha
xlat
push
imul
sahf
pop
fwait
lock
pop
xchg
sbb
in
stc
bound
xchg
sbb
fmuls
and
xchg
add
cmovge
mov
pop
int3
lahf
adc
and
xor
mov
movsl
inc
add
push
xchg
out
inc
sub
mov
xchg
and
das
or
xchg
or
pusha
fcomps
icebp
ja
push
and
fs
mov
push
push
fnsave
repnz
jg
sub
stc
push
sub
adc
mov
aam
pop
filds
sti
sbbl
dec
sbb
loop
popf
inc
cmp
push
mov
jnp
mov
sub
mov
pusha
cmp
mov
add
xchg
cmc
pop
in
gs
comiss
aas
loop
sbb
aas
fdivrs
lds
icebp
inc
lds
or
or
int
pop
dec
ljmp
fmul
loop
jg
push
and
add
cld
pusha
and
fsubrl
aad
mov
xchg
fs
outsl
sbb
or
cmp
inc
mov
jns
and
aas
roll
les
fdivl
test
push
aaa
rolb
jno
mov
sbb
pusha
in
push
popa
je
mov
mov
sbb
dec
dec
repnz
loopne
push
sub
out
push
into
jp
dec
ja
ret
pop
inc
fistl
xchg
jns
fiadds
movsl
dec
test
fstp
dec
fcoms
xor
mov
push
movsb
test
mov
sbb
jno
inc
mov
dec
mov
movsl
dec
jp
sbb
jns
xor
decl
mov
cmp
pop
cmpsb
dec
stc
add
cmp
pop
mov
repnz
xchg
or
leave
cmc
lahf
cmp
sub
jge
push
aad
add
call
xor
das
mov
or
jl
mov
sbb
pop
imul
faddl
add
inc
inc
fucomi
data16
rclb
jge
cmp
push
inc
fdivr
stos
insl
mov
xchg
loop
mov
ja
inc
shrl
cmp
xchg
stos
push
mov
les
call
es
out
imulb
lods
scas
jae
pop
mov
lret
mov
push
adc
adc
fsubrl
pop
mov
repnz
mov
imul
xchg
ja
xchg
loop
sub
cmpsl
js
xor
xchg
sub
inc
fwait
jmp
mov
rolb
jnp
push
pop
movsl
ret
inc
xor
dec
xchg
and
mov
lea
sub
or
int3
arpl
mov
fninit
push
mov
mov
xor
outsl
sbbl
mov
cli
notl
int
cs
sbb
loopne
mov
in
inc
lret
sbb
lds
add
mov
and
fdivrp
xor
hlt
fcmovnb
jmp
cld
pop
lock
rorb
repz
mov
rol
pop
repz
push
pop
lea
mov
xor
xchg
ret
gs
inc
pop
adc
jo
push
mov
int
xor
inc
and
insb
repz
add
jae
sarl
mov
mov
xchg
sub
lret
push
cmp
or
pop
mov
push
pop
sbb
cmp
adc
push
out
fisubs
pop
xlat
push
mov
mov
aad
fbld
mov
jnp
fisubrs
fmuls
pop
js
cmpl
sbb
adc
mov
add
or
add
leave
stos
std
inc
leave
inc
dec
dec
mov
cmpl
outsb
fcoms
or
sbb
lds
scas
rcll
ret
imul
fldcw
js
jnp
inc
jp
cld
movsl
cmp
and
test
sbb
pushf
loop
loop
pop
mov
pop
sbb
into
jl
cwtl
ds
jmp
arpl
mov
loopne
mov
xor
push
mov
jb
push
pop
adc
adc
shl
mov
add
nop
mov
or
xor
mov
pusha
sahf
sbb
add
cmp
dec
xchg
cwtl
popf
sbb
aaa
xchg
inc
into
sbb
xor
sbb
adc
aaa
mov
mov
xchg
arpl
bound
jnp
out
or
int3
dec
or
cmp
sub
std
dec
in
jb
mov
push
jp
sbb
in
push
fistps
sbb
sub
jmp
add
jns
pop
mov
call
and
imul
push
ret
das
sub
cmp
hlt
mov
fwait
xchg
negl
outsb
mov
inc
rorb
and
xor
and
pop
or
lds
mov
cli
push
sar
mov
lret
cmp
dec
mov
in
test
outsl
daa
cmpsl
test
mov
xor
cwtl
aam
repz
or
adc
repnz
mov
iret
dec
shlb
leave
scas
dec
hlt
xor
fidivrs
and
push
cld
ds
pause
dec
imul
xchg
xor
push
jp
callw
mulb
xchg
cmpsl
loope
aaa
inc
sbb
pop
lods
loopne
pop
mov
push
dec
mov
cli
pushf
sub
imul
jge
imul
das
inc
insl
lods
fstps
mulb
out
push
fwait
decb
repz
adc
out
mov
mov
out
add
jecxz
xor
paddsw
ja
sbb
int
cmp
push
shr
jne
mov
pop
out
dec
jnp
jle
repz
aam
mov
dec
add
adc
insl
jns
xchg
subb
xor
cmpsb
or
stos
pusha
sub
fstpl
mov
mov
mov
dec
adc
cltd
push
test
cld
je
xlat
or
loop
int
dec
xlat
mov
outsb
push
cld
mov
fwait
adcl
insb
scas
movsb
test
in
add
andb
inc
cld
pop
nop
das
mov
subb
adc
push
sbb
adc
pusha
in
cld
or
xlat
or
lds
sub
mov
imulb
imul
mov
cmp
icebp
je
stc
scas
add
arpl
mov
or
pushf
add
daa
mov
inc
jno
fcmovnu
fwait
outsb
add
sarl
cltd
adc
in
add
negl
notb
gs
pop
loopne
jp
jle
out
out
data16
cltd
mov
movsb
shll
jle
inc
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
out
cli
push
sahf
into
inc
inc
popa
gs
and
xor
clc
cmp
pop
bound
insb
cmp
and
add
or
aaa
jp
mov
into
mov
and
pushf
and
pop
mov
scas
inc
xchg
inc
xor
in
sub
pop
cmp
dec
sub
jo
jmp
and
sub
outsb
test
add
ljmp
xchg
xchg
and
xchg
inc
sbb
ss
pop
dec
pop
sbb
ret
mov
loopne
xchg
out
mov
cwtl
pushf
adc
repnz
mov
mov
mov
int
fsts
aad
stos
int
ds
fs
xor
dec
aas
fsubrs
fs
pop
orl
aam
jo
mov
les
sub
push
sarl
movsl
cmp
inc
out
xchg
and
mov
lods
xor
sahf
add
cld
jle
out
sbb
clc
xor
enter
jle
sub
fisubl
in
pop
mov
cwtl
and
pop
jb
sbb
dec
mov
sbbb
out
ret
and
nop
in
jl
shl
inc
jp
movsl
mov
dec
sbb
jno
ret
and
sbb
and
xor
adc
imull
movsb
pushl
loope
test
xchg
test
arpl
inc
scas
mov
icebp
mov
mov
test
lock
in
or
clc
mov
jp
out
inc
push
fstl
mov
jmp
mov
ds
jbe
mov
fwait
pop
xor
mov
xchg
inc
into
dec
cmp
sbb
push
jp
lcall
push
popf
incb
frstor
addr16
mov
lret
dec
cmp
test
pusha
sahf
add
imul
mov
mov
mov
and
addr16
mov
or
data16
mov
int
out
mov
sbb
or
mov
idivb
aas
sahf
or
fistpll
pop
call
inc
and
sbb
data16
sbb
push
lret
pop
xor
mov
aad
xor
mov
repz
ljmp
in
xchg
jnp
ror
jmp
pop
in
mov
sbb
push
sub
inc
ja
int
dec
cmpsl
lods
orl
stc
aas
xchg
dec
sbb
cmp
dec
xor
jns
dec
pop
shrl
xor
xchg
data16
aad
dec
xorl
ret
cmp
pop
cmpsb
mov
js
mov
sub
es
subl
cmp
adc
pushf
lock
or
jmp
dec
stc
test
mov
arpl
lea
sahf
inc
pusha
test
lods
push
mov
adc
or
xchg
xchg
mov
daa
int3
fxch
xor
xor
rcll
jg
mov
idivl
mov
into
mov
add
mov
mov
sub
or
fstps
push
xchg
pop
aad
repnz
adc
cmp
outsb
or
outsl
push
jns
jne
cmp
outsb
aam
jns
mov
out
dec
xchg
roll
or
lret
fs
xor
inc
fisubrs
pop
inc
out
out
cltd
iret
push
aaa
xchg
sbb
mov
clc
aad
sbb
addr16
cwtl
hlt
xchg
cmp
pop
stc
xchg
popa
popa
and
rcrl
in
push
mov
ficoml
call
pop
shl
shll
mov
int
repz
lods
pop
or
jp
dec
lret
mov
add
cld
jmp
jp
nop
ret
data16
inc
jg
sbb
outsl
pop
adc
push
lret
sbb
gs
daa
testb
clc
scas
mov
lret
daa
js
sbb
push
xchg
stc
sub
lcall
inc
inc
js
sub
fwait
cmc
andl
sub
sti
mov
and
push
mov
jmp
outsb
mov
sarl
cmp
imul
sub
pushf
dec
cmp
or
idivl
mov
imul
je
ret
cmp
mov
sbb
dec
lret
sahf
iret
pop
loop
enter
push
insb
sbb
fistpl
push
inc
out
imul
or
adc
cmp
negb
hlt
imul
icebp
jge
mov
add
outsb
xchg
js
sub
push
inc
push
sbb
xchg
das
nop
fldl
mov
fstp
sti
dec
push
add
nop
adc
xchg
xchg
shll
sbb
jns
xchg
rcr
cmpsl
hlt
mov
push
shrl
xlat
push
fisubrs
in
repnz
insb
jecxz
or
cmp
out
xchg
out
xor
arpl
icebp
ds
cmpsl
inc
dec
and
ret
sahf
sub
mov
dec
insl
scas
cmpsl
push
adc
mov
cmp
sbb
shll
test
jae
xor
lods
sti
mov
int3
jg
icebp
nop
stos
mov
mov
dec
push
iret
add
mov
mov
xchg
cmc
pushf
orl
sbb
xor
inc
ret
cmpsb
cmp
rcll
dec
out
and
pop
incl
ljmp
cmpsb
andb
inc
add
lret
and
or
das
je
xlat
mov
arpl
cmp
mov
rcl
mov
repz
in
jl
in
pop
jae
cmp
xor
in
mov
ljmp
mov
adc
add
lahf
and
xchg
push
test
cmp
push
repnz
sbb
push
jl
aam
lahf
pop
hlt
or
sub
in
test
sbb
into
cs
clc
push
test
adc
pop
loopne
fstl
js
pop
cmpsb
add
cld
int3
leave
ss
mov
sub
inc
pop
arpl
mov
xor
hlt
push
aam
ret
mov
add
stos
int3
add
lods
adc
scas
xchg
xor
pop
jge
iret
pop
jne
idiv
jb
adc
outsl
pop
mov
dec
test
movl
mov
xor
mov
push
pop
xor
leave
aas
xor
repz
and
jae
sub
pusha
imul
shrl
and
lods
shrl
push
and
call
push
loope
pop
xlat
daa
dec
fbld
mov
jnp
mov
aaa
cmpsb
pop
sti
insl
mov
push
rol
inc
jle
push
xchg
scas
cmp
cli
xor
push
movsw
sti
push
lock
fsubrl
hlt
cmpsb
mov
add
mov
push
in
cmp
pop
push
in
inc
push
gs
xor
mov
std
dec
push
test
div
push
add
pop
push
sbb
jg
lcall
leave
sub
cmp
mov
repnz
dec
fmul
clc
test
jnp
mov
lcall
mov
lds
sbb
jecxz
mov
adc
test
cmp
in
pop
mov
rcr
in
jp
add
hlt
jecxz
movsl
push
vpslld
jnp
and
and
in
sbb
xchg
jmp
imul
mov
sbb
in
mov
cwtl
popf
jnp
dec
and
hlt
ds
imul
lock
roll
lods
jns
mov
and
sub
cmp
push
bound
jno
xor
sbb
rol
add
int3
jbe
adcl
aas
xchg
shrb
sub
sahf
fsubr
jle
pop
jecxz
pop
jecxz
or
jle
push
fs
push
loopne
leave
add
cmp
sbb
and
push
div
test
pop
sub
mov
and
jmp
shrl
out
sti
mov
ficomps
sti
addr16
xchg
sub
push
jae
std
imull
adc
cmp
vpsubq
cmp
push
xor
movsl
clc
inc
mov
and
sub
xchg
jbe
mov
test
stos
pusha
xchg
div
imul
fwait
and
pushf
or
xchg
dec
inc
xor
call
add
mov
pop
xor
mov
pop
out
mov
cwtl
scas
orl
scas
jg
adc
mov
bnd
imul
jbe
mov
pop
adc
roll
mov
cmp
or
call
inc
out
int
push
scas
xchg
push
cmp
pop
scas
xor
bound
cmp
xchg
imul
and
lods
test
pop
or
leave
aam
popa
movswl
int
leavew
in
fdivrs
sub
and
inc
cli
aaa
ds
dec
int3
outsl
lret
adc
and
fadds
lret
mov
mov
pop
pop
int3
xchg
cmp
xchg
push
jbe
rcrl
inc
or
je
test
aad
xor
mov
loop
scas
cmp
or
scas
out
cli
inc
or
movsl
push
pop
in
add
fldenv
fldl
mov
rcl
aas
push
pop
lock
dec
sub
mov
sbb
lret
inc
ror
aas
jne
sub
or
lods
cld
jge
loope
mov
mov
loope
call
pop
rcrl
sbb
pop
clc
in
icebp
inc
inc
fidivl
notb
lahf
and
mov
ljmp
push
flds
repnz
push
cmp
dec
jbe
inc
bound
cmpsb
jle
inc
ret
gs
cli
pop
cwtl
xchg
int
lods
and
and
into
pop
mull
xchg
outsb
inc
inc
xlat
or
mov
loope
cld
dec
mov
xchg
inc
cmp
add
into
xor
sbb
and
test
xor
pushf
jmp
mov
and
int3
inc
inc
in
in
xchg
aad
cmp
sub
cmp
adc
or
push
pop
test
insb
loop
aas
mov
push
outsl
sub
fs
jne
out
xor
push
push
dec
repz
mov
push
add
ret
jbe
fnsave
xchg
lahf
imul
mov
repz
daa
mov
mov
pop
dec
pop
mov
filds
orl
and
xor
cwtl
or
andl
xor
mov
pop
pop
push
mov
mov
mov
or
inc
push
call
das
insb
xor
jmp
jecxz
adc
ja
mov
arpl
and
and
mov
subl
mov
sub
xchg
xchg
mull
pmulhuw
sbb
mov
clc
sub
in
push
adc
sub
lahf
inc
mov
loope
mov
sbb
push
jno
cltd
mov
out
rcrl
push
cmp
jp
add
inc
icebp
lcall
dec
jmp
or
notl
dec
pop
shrl
cmc
inc
ret
mov
pop
push
pop
mov
in
cmp
andb
fadd
imul
mov
pop
cmpsb
int
add
jb
mov
mov
xor
or
push
fimull
add
mov
or
lds
mov
mov
je
sub
out
sbb
cmp
fnsave
ret
in
adc
jmp
cmpsb
test
test
cltd
cmpsl
mov
push
in
push
dec
pop
jb
icebp
pushf
pop
mov
stos
adc
cld
mov
sub
jge
mov
repnz
pop
mov
test
sub
mov
and
inc
dec
inc
pop
mov
or
orl
ja
xor
ret
jbe
cmp
outsb
push
mov
out
aad
sbb
mov
out
pushf
push
popa
cs
sbb
mov
cmp
sarl
add
or
cmp
push
in
cltd
push
fisttpll
sub
dec
xor
add
es
int
movl
cmp
cmp
jle
shrl
aad
cld
jno
fwait
in
repz
pushl
lods
out
jle
inc
inc
adc
leave
mov
jl
xchg
dec
mov
adc
stos
fldenv
push
sub
sub
test
out
mov
inc
out
lods
test
ss
sbb
push
test
cwtl
mov
and
mov
jp
outsb
ss
int
xchg
mov
shl
xor
or
jge
jae
jbe
cmp
inc
insl
imul
clc
add
icebp
daa
fxtract
add
insl
push
cld
scas
pusha
dec
xor
inc
jge
jg
mov
negl
loop
incb
out
popa
bound
sub
loope
inc
loopne
add
cwtl
cmp
push
push
sarb
jp
sbb
lock
in
xor
lret
outsl
loope
push
sub
fdivs
shrb
pop
lea
sahf
mov
sbb
fcmove
leave
jb
loop
jp
aaa
rorb
or
pop
jg
jmp
mov
into
insl
fdivr
pop
loope
test
ficoms
xlat
daa
nop
sub
movsl
dec
adc
call
mov
fiaddl
call
jnp
inc
xchg
int3
jns,pt
push
mov
outsb
sub
inc
pop
inc
jnp
add
pop
ja
testb
jmp
jecxz
cld
add
ss
nop
aaa
inc
cltd
inc
test
push
ds
sbb
into
ss
xchg
test
push
enter
xor
xchg
std
pop
push
add
mov
lock
inc
cmpsl
stc
imul
cli
mov
xor
add
lret
scas
dec
out
aam
in
mov
jno
testb
xor
add
mov
sub
and
rcrb
push
arpl
pop
out
mov
pop
dec
add
shrl
jl
imul
es
bound
xlat
xor
sarb
sbb
mov
outsl
fstpl
push
pop
fdivp
pop
jno
pop
or
sbb
xchg
or
pop
imulb
mov
pop
inc
or
inc
fimuls
rcll
leave
dec
push
nop
add
xor
aas
out
mov
pop
mov
inc
popf
stos
std
sbb
pop
jg,pn
jp
ret
faddl
dec
jno
mov
cmpsb
movsb
faddl
into
push
repnz
jmp
in
mov
clc
fdiv
xor
gs
mov
add
adcb
mov
push
addr16
or
sbb
pop
ljmp
popf
pop
mov
in
pusha
mov
or
push
push
mov
and
in
pop
mul
xchg
or
add
mov
fbld
adc
pop
data16
inc
arpl
mov
test
pop
aaa
xlat
dec
loop
je
jne
xor
lahf
rep
jl
mov
push
fldcw
pop
lret
es
mul
cltd
inc
pop
pop
xchg
movsl
ret
mov
add
pop
sub
xchg
and
push
mov
cld
mov
xor
pop
jl
andb
out
call
je
dec
mov
fcompl
xorb
mov
rcr
std
mov
es
mov
xchg
mov
jmp
and
sbb
jmp
scas
xor
mov
jmp
jbe
add
pusha
iret
insb
in
and
pop
xchg
lods
daa
mov
imul
adc
test
xchg
jge
mov
out
push
push
lea
daa
jmp
sub
arpl
cmpsb
sbb
loope
cmovle
test
mov
ffree
xlat
fdivs
aam
xor
jmp
ja
orb
mov
lret
push
xchg
and
push
cmp
pop
lret
pop
sub
in
iret
jg
jb
lods
gs
jp
addl
pushl
popf
lcall
cmp
sub
idivl
gs
mov
xchg
aam
mov
mov
sub
stos
lock
jnp
mov
arpl
add
mov
rcrb
mov
pop
mov
fnstenv
xor
pop
mov
adc
inc
or
je
lds
aaa
lock
xor
fstpl
xlat
jecxz
cmpsl
fistl
pop
shlb
adc
inc
daa
cli
shrl
or
xor
adc
mov
lcall
sahf
jns
push
inc
test
es
pop
or
clc
pushf
scas
sbb
outsb
into
out
push
lret
pusha
loopne
lods
ficoml
das
push
stos
movl
test
in
popa
dec
mov
aas
push
xchg
pop
daa
out
imul
test
push
pushf
xchg
dec
jg
into
mov
adc
or
mov
jbe
push
cld
dec
mov
jnp
sbb
inc
mov
ss
xchg
test
lret
popf
xchg
jmp
push
aad
sub
mov
push
xchg
pop
js
loop
push
fnstcw
add
fstps
fcmovnu
xchg
jno
in
imul
negb
or
sarl
mov
mov
sbb
jno
xchg
loope
pushf
push
jmp
push
fsubl
mov
jo
and
jne
rorb
or
shl
dec
js
out
xchg
test
int
xchg
ficoms
mov
aaa
sbb
in
fld
negb
pusha
or
pop
inc
or
and
adc
fs
cmp
mov
cmp
insl
sahf
jmp
loop
aaa
rcll
lock
add
mov
xor
shrl
dec
xchg
cmp
dec
in
xor
test
xchg
adc
and
mov
addr16
mov
add
dec
mov
enter
add
sbb
fnsave
enter
or
cld
lea
out
rclb
pop
mov
nop
movsb
mov
pop
jmp
inc
mov
ret
loope
mov
xor
div
lods
popf
and
push
mov
push
and
ds
mov
jnp
lods
inc
popf
out
add
pop
sti
sub
sub
dec
ret
xorb
mov
mov
pop
sbb
push
movsb
push
loope
pop
xchg
popl
inc
bound
insb
or
cmpsl
fmuls
loopne
imul
mov
sub
int
jb
aas
sub
ds
out
fildll
daa
repz
jle
out
out
sti
mov
inc
test
or
in
lods
sti
fstpl
nop
mov
mov
xchg
sbb
in
repz
loop
pop
sahf
cmp
in
adc
dec
mov
lods
mov
xchg
movsb
fwait
scas
popf
aam
insb
add
ja
cmp
push
insl
mov
xorb
sahf
push
cmp
jle
insl
sub
js
cmp
xorl
ffree
cs
and
vpaddw
or
arpl
int
ret
inc
push
out
mov
cld
movsl
test
or
sbb
pop
mov
push
cmp
cmpsb
icebp
jp
into
orl
sbb
inc
cs
xchg
adc
add
leave
js
mov
push
lds
mov
pop
mov
sub
jecxz
lret
test
or
andl
ja
xor
dec
loop
addr16
xor
int
xlat
cwtl
js
xor
test
jg
mov
add
jecxz
shrb
scas
push
or
mov
testb
cltd
ja
lea
in
mov
subb
sub
pop
dec
ja
xchg
add
inc
jnp
hlt
cmp
mov
movsl
xchg
xor
aaa
push
mov
insb
leave
stos
mov
mov
xchg
inc
ds
xchg
mov
add
cltd
sub
inc
into
test
jg
xchg
clc
and
jo
hlt
push
out
outsl
xchg
pop
mov
lcall
ljmp
ljmp
cmp
and
xchg
ret
cld
sete
rol
pop
shlb
sub
xor
mov
push
cmp
pusha
outsb
cld
xchg
xchg
out
xchg
scas
movsl
fbstp
fucomp
popf
inc
rol
iret
adc
adc
rcl
dec
sar
add
cs
loope
cli
push
je
sbb
dec
xchg
jmp
push
sbb
scas
dec
test
push
insl
stos
pop
xchg
rep
and
or
loope
cwtl
pop
dec
or
ja
xor
sti
mov
jmp
mov
addl
adc
jae
movsl
scas
ret
sbb
inc
push
pop
push
cmp
push
out
add
push
xchg
cli
icebp
xchg
cld
popf
mov
cli
mov
mov
push
into
repnz
fidivs
fldcw
pop
cli
std
sub
mov
jmp
enter
in
push
data16
fistl
lods
adc
in
mov
inc
lds
or
insb
mov
fnstsw
sub
cmpsb
repz
fisubl
rolb
das
stc
out
scas
xchg
out
mov
lock
addr16
shrl
in
pop
in
push
std
test
or
lock
pop
mov
sub
jno
push
push
jge
or
push
pop
ss
mov
mov
clc
hlt
xchg
scas
loop
je
push
lahf
stc
or
sarb
adcl
push
inc
insl
jp
stos
adc
imul
leave
lret
push
test
aad
hlt
push
test
push
pop
mov
dec
fsubr
clc
lret
mov
or
cltd
mov
or
test
sahf
sub
or
mov
adc
sbb
inc
pop
dec
scas
mov
push
or
lahf
lds
sti
lds
jg
pop
rolb
repnz
aad
push
nop
loop
ss
sub
xor
pop
shrb
fmul
in
idivl
ret
lea
out
adc
inc
outsb
dec
addr16
aam
and
loope
push
jecxz
lret
dec
fwait
cld
or
out
dec
pop
shll
cmp
or
jno
mov
pop
les
inc
sub
mov
aas
cli
shl
jg
push
pop
das
fldcw
pop
dec
outsb
int
stos
jecxz
pop
rcrl
stos
cmp
or
jae
stos
jp
lcall
orb
clc
scas
sbb
add
cmp
sub
out
mov
neg
mov
test
das
jmp
clc
mov
pop
mov
stos
lea
or
push
daa
sahf
mov
sub
in
xchg
test
and
int3
cmp
inc
test
fwait
stc
stc
divl
push
jne
sub
mov
jno
mov
xorl
jo
sub
push
pop
cmp
dec
or
gs
in
xchg
cmp
ljmp
xchg
xor
jle
and
xchg
mov
cmp
bound
gs
rorl
push
sub
xchg
push
mov
pop
jl
stc
mov
mov
insl
dec
cmp
rcrl
pop
daa
mov
or
mov
pop
pop
cmp
cli
in
xor
fnstsw
repz
sarl
hlt
mov
and
jns
push
or
out
inc
mov
fst
sbb
mov
adc
sub
dec
bound
shrd
push
or
ljmp
mov
mov
inc
movaps
adc
nop
mov
loopne
sbb
push
mov
and
scas
shll
rcll
out
in
and
add
jmp
add
sbb
mov
jns
jmp
test
push
out
push
stos
xor
pop
inc
dec
divb
lret
jecxz
arpl
aaa
cltd
stos
scas
add
lret
loope
leave
inc
and
jbe
jno
sbb
leave
das
xchg
fwait
incl
in
lret
test
mov
and
mov
js
aaa
daa
cli
push
mov
or
lcall
mov
jb
frstor
fsubs
lds
mov
xor
outsb
aam
xor
in
adc
mov
sub
scas
lods
mov
lahf
addr16
sbb
push
pop
or
and
in
jne
sub
lret
lock
arpl
andl
sti
jecxz
jo
movb
pop
lock
sub
jle
or
pop
test
lret
pop
or
add
mov
mov
cmp
stc
or
mov
aam
lods
mov
add
mov
xchg
js
ja
cmp
in
lds
shlb
fidivs
out
mov
pusha
ljmp
insb
lods
and
das
loope
push
inc
in
out
push
push
ds
cmp
loop
mov
cmpsb
testl
jnp
mov
stos
and
xor
dec
push
aaa
movsb
mov
imul
add
mov
hlt
xor
xlat
dec
out
mov
shrl
mov
mov
into
mov
enter
jmp
sub
loop
aam
xor
push
bound
pop
push
out
xchg
xor
aad
cmpsb
aad
movsl
mov
sub
icebp
aaa
sbb
cwtl
div
popf
mov
push
imul
inc
xor
cmp
push
pop
jmp
xchg
add
sbb
test
pop
jo
push
sub
mov
inc
out
push
xchg
xor
fbstp
call
cwtl
xor
fsts
popf
mov
and
addr16
aad
sbb
in
arpl
test
jmp
sub
add
sti
out
jg
inc
xchg
or
add
xchg
lcall
icebp
mov
adc
mov
xor
cmp
jb
lea
and
mov
mov
stos
shl
repz
mov
jmp
dec
test
mov
pop
fidivs
insb
mov
inc
sar
hlt
call
std
adc
cmp
sub
cs
push
cmpsl
mov
push
testb
xlat
daa
jns
decb
push
xlat
jne
dec
fiadds
and
pop
sub
pop
filds
cmpsl
lcall
or
dec
push
shr
dec
lods
or
loopne
pop
jae
xchg
adcb
or
dec
out
lock
scas
mov
jae
pop
mov
mov
data16
cmp
push
jno
ret
pop
aaa
push
mov
add
or
pop
inc
test
mov
addr16
cmp
insl
or
jecxz
xor
inc
jo
push
neg
dec
shrb
push
jg
push
pop
cmp
xchg
arpl
xchg
dec
and
call
std
int3
inc
fadd
dec
add
adc
push
push
aas
or
pop
mov
push
ja
sbb
or
scas
gs
adc
xorb
lea
sub
fisubrs
int3
ds
push
sub
sub
jae
or
into
aam
into
pop
cmp
leave
pop
cld
push
jg
xchg
out
pusha
insb
sbb
sbb
cli
pop
fimull
out
jbe
or
outsl
sbb
dec
loope
popf
cmpb
dec
repnz
subl
jne
inc
jle
test
push
je
cmpsl
int3
adc
jmp
fmul
mov
testl
out
pop
jns
fs
lods
push
imul
subb
lods
nop
cmpsb
cmpsl
lret
icebp
sub
out
sub
je
sub
or
test
enter
jle
xchg
outsl
xchg
mov
test
push
gs
lret
jns
fwait
bound
jne
push
imul
data16
ret
movsb
dec
popa
pusha
sbb
cmc
pop
lea
push
adc
in
outsl
lds
adc
pushf
aam
cli
nop
mov
pop
repnz
stos
xchg
cli
sti
jns
ret
pop
movsl
fcmovu
dec
or
and
xchg
jno
cmp
xor
imul
aas
push
push
icebp
fldcw
pop
mov
jl
gs
outsb
in
out
push
lock
xchg
pusha
add
stos
cmp
mov
sahf
sarl
adc
scas
and
std
jne
xor
xchg
lods
pop
data16
pop
or
int
mov
stc
xlat
lret
sbb
in
push
iret
lds
leave
pusha
pop
popf
repz
dec
movsb
int3
andb
jmp
nop
push
xchg
sub
cmpsb
test
xchg
sahf
inc
push
pop
push
ljmp
mov
notl
dec
pop
aam
pop
jg
leave
mov
or
sti
loope
jp
mov
sar
aam
sbb
test
fwait
les
pop
xchg
cmp
fcomps
push
loope
sub
enter
jb
mov
jno
mov
push
sub
lods
loopne
dec
fadds
test
daa
sub
sub
xor
mov
pop
or
je
popf
xchg
xchg
or
jge
mov
sub
daa
movsb
push
sbb
out
sub
loopne
adc
inc
sti
stos
and
out
cltd
and
outsl
stos
std
fmuls
push
xchg
xlat
fnsave
push
cld
in
cmp
lock
lahf
shll
xor
fisubrl
xchg
icebp
nop
lahf
cmpsb
cs
shlb
cmp
jmp
into
cmp
pushl
mov
in
push
add
push
test
popa
inc
aam
xor
mov
mov
mov
out
jae
testl
cmp
and
sub
ror
sarb
repz
jle
mov
push
loopne
cmp
push
andb
out
mov
shlb
aad
sbb
je
pop
or
adc
faddp
cmp
stos
xor
mov
mov
mov
icebp
and
popf
sub
pop
imul
daa
sub
orb
or
jle
loop
sahf
js
fs
xchg
ss
jmp
inc
mov
jb
out
insl
cli
ja
div
idivb
and
scas
ljmp
mov
pop
mov
aaa
mov
cmp
push
pop
in
or
add
lds
lds
into
jns
mov
aad
rcll
mov
pop
jns
mov
sbb
cmc
xchg
push
inc
push
daa
adc
inc
nop
int3
xchg
fmull
pop
inc
mov
add
adc
aad
mov
jne
or
xchg
out
nop
stos
xchg
add
and
cmpsb
dec
sbb
dec
aaa
mov
fwait
test
push
popf
jl
jo
mov
shl
dec
push
inc
lcall
jne
pushf
inc
add
mov
insl
je
push
insl
sub
mov
jbe
das
push
mov
sub
int3
cltd
fdivr
and
sbbb
xchg
sbb
mov
jbe
adc
jecxz
aaa
insl
dec
mov
pop
mov
push
loope
push
cld
movsb
fsubs
insb
sbb
cmp
jge
push
push
in
outsb
jno
test
inc
in
sub
sub
outsl
cmpsl
xor
movhps
push
xor
sbb
xor
xor
mov
mov
cli
and
or
and
mov
mov
add
and
or
nop
sbb
call
jecxz
in
pop
pusha
or
js
inc
adc
inc
insl
rclb
lock
in
jo
call
rcrl
loop
mov
scas
mov
xor
xchg
adc
and
mov
movsl
pushf
xchg
sbb
adc
int
push
dec
push
jne
lods
push
ss
adc
jns
xor
mov
jecxz
sub
les
jecxz
mov
lock
xor
fidivs
adc
xchg
mov
cmpsb
xchg
fcomps
and
add
pop
sub
lods
pop
call
push
test
test
xor
mov
out
sub
pop
inc
dec
imul
icebp
inc
push
pop
aad
ljmp
inc
or
and
or
mov
int3
mov
ja
out
pop
cld
inc
mov
mov
mov
or
fbld
lods
fwait
rclb
push
push
mov
lret
in
fbld
test
js
and
movsb
es
fdivrl
mov
pop
mov
mov
pop
lret
cmp
dec
sar
icebp
scas
out
mov
inc
movsb
dec
push
cld
sub
xor
jle
scas
push
in
mov
mov
in
stos
dec
out
jnp
inc
jns
cmp
ficoms
mov
dec
mov
or
ficompl
js
pop
insl
mov
aaa
out
scas
dec
inc
and
testb
jo
or
xchg
les
xchg
add
out
push
leave
js
fistpll
pop
mov
xor
or
add
dec
andl
or
sti
mov
and
push
push
push
mov
call
jp
inc
pop
or
and
jnp
mov
xor
leave
pop
mov
adc
sbb
out
bound
fiadds
sub
push
mov
pop
cmp
sbb
inc
inc
or
cmp
lds
stos
lods
cmp
mov
cwtl
fadds
push
xchg
mov
aaa
pop
aad
ljmp
mov
dec
sub
and
mov
pop
or
add
cmp
adc
pusha
loopne
sbb
mov
mov
aad
sti
test
stos
sahf
or
jne
scas
fwait
loope
scas
int
fsqrt
divb
cld
and
xchg
in
cmp
mov
mov
bound
bound
dec
sbb
lret
or
add
lret
mov
or
movhlps
jmp
ljmp
fistl
lea
or
mov
pushf
outsl
and
sub
insl
adc
sahf
addr16
xchg
mov
sti
pop
cmp
stos
pop
sahf
dec
mov
jno
pop
push
test
in
fisubrs
daa
or
add
daa
xor
shl
push
into
in
jo
iret
jo
jne
or
loop
jecxz
fdivr
mov
mov
stc
aad
cmpsb
mov
xlat
ret
inc
daa
push
mov
push
cli
inc
repz
aas
sbb
jo
aas
pop
push
mov
jo
xchg
dec
imul
lds
fisttpl
in
enter
add
add
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
mov
add
